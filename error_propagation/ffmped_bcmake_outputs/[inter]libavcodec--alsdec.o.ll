; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--alsdec.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--alsdec.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.SoftFloat_IEEE754 = type { i32, i64, i32 }
%struct.ALSDecContext = type { %struct.AVCodecContext*, %struct.ALSSpecificConfig, %struct.GetBitContext, %struct.BswapDSPContext, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32*, i32, i32*, i32*, i32*, i32*, i32*, i32*, i32**, i32*, i32**, i32*, i32**, i32*, i32*, %struct.ALSChannelData**, %struct.ALSChannelData*, i32*, i32*, i32**, i32*, i8*, %struct.MLZ*, %struct.SoftFloat_IEEE754*, i32*, i32*, i32*, i32**, i8*, i32* }
%struct.ALSSpecificConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.BswapDSPContext = type { void (i32*, i32*, i32)*, void (i16*, i16*, i32)* }
%struct.ALSChannelData = type { i32, i32, i32, i32, i32, [6 x i32] }
%struct.MLZ = type { i32, i32, i32, i32, i32, i32, %struct.MLZDict*, i8* }
%struct.MLZDict = type { i32, i32, i32, i32 }
%struct.MPEG4AudioConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.unaligned_32 = type { i32 }
%struct.ALSBlockData = type { i32, i32, i32*, i32, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32* }
%union.anon = type { i32 }

@.str = private unnamed_addr constant [4 x i8] c"als\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"MPEG-4 Audio Lossless Coding (ALS)\00", align 1
@ff_als_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86061, i32 258, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 440, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame, i32 (%struct.AVCodecContext*)* @decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [33 x i8] c"Missing required ALS extradata.\0A\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"Reading ALSSpecificConfig failed.\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"Bits per raw sample %d larger than 32.\0A\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"Allocating buffer memory failed.\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"Invalid channel reordering.\0A\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"Adaptive RLS-LMS prediction\00", align 1
@.str.8 = private unnamed_addr constant [46 x i8] c"Reading frame data failed. Skipping RA unit.\0A\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"CRC error.\0A\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"Invalid channel data.\0A\00", align 1
@.str.11 = private unnamed_addr constant [42 x i8] c"Invalid block length %u in channel data!\0A\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"Overread %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"Invalid channel pair.\0A\00", align 1
@.str.14 = private unnamed_addr constant [66 x i8] c"Block length is not evenly divisible by the number of subblocks.\0A\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"k invalid for rice code.\0A\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"Predictor order too large.\0A\00", align 1
@parcor_scaled_values = internal constant [128 x i16] [i16 -32767, i16 -32759, i16 -32743, i16 -32719, i16 -32687, i16 -32647, i16 -32599, i16 -32543, i16 -32479, i16 -32407, i16 -32327, i16 -32239, i16 -32143, i16 -32039, i16 -31927, i16 -31807, i16 -31679, i16 -31543, i16 -31399, i16 -31247, i16 -31087, i16 -30919, i16 -30743, i16 -30559, i16 -30367, i16 -30167, i16 -29959, i16 -29743, i16 -29519, i16 -29287, i16 -29047, i16 -28799, i16 -28543, i16 -28279, i16 -28007, i16 -27727, i16 -27439, i16 -27143, i16 -26839, i16 -26527, i16 -26207, i16 -25879, i16 -25543, i16 -25199, i16 -24847, i16 -24487, i16 -24119, i16 -23743, i16 -23359, i16 -22967, i16 -22567, i16 -22159, i16 -21743, i16 -21319, i16 -20887, i16 -20447, i16 -19999, i16 -19543, i16 -19079, i16 -18607, i16 -18127, i16 -17639, i16 -17143, i16 -16639, i16 -16127, i16 -15607, i16 -15079, i16 -14543, i16 -13999, i16 -13447, i16 -12887, i16 -12319, i16 -11743, i16 -11159, i16 -10567, i16 -9967, i16 -9359, i16 -8743, i16 -8119, i16 -7487, i16 -6847, i16 -6199, i16 -5543, i16 -4879, i16 -4207, i16 -3527, i16 -2839, i16 -2143, i16 -1439, i16 -727, i16 -7, i16 721, i16 1457, i16 2201, i16 2953, i16 3713, i16 4481, i16 5257, i16 6041, i16 6833, i16 7633, i16 8441, i16 9257, i16 10081, i16 10913, i16 11753, i16 12601, i16 13457, i16 14321, i16 15193, i16 16073, i16 16961, i16 17857, i16 18761, i16 19673, i16 20593, i16 21521, i16 22457, i16 23401, i16 24353, i16 25313, i16 26281, i16 27257, i16 28241, i16 29233, i16 30233, i16 31241, i16 32257], align 16
@parcor_rice_table = internal constant [3 x [20 x [2 x i8]]] [[20 x [2 x i8]] [[2 x i8] c"\CC\04", [2 x i8] c"\E3\05", [2 x i8] c"\E1\04", [2 x i8] c"\13\04", [2 x i8] c"\F0\04", [2 x i8] c"\0C\03", [2 x i8] c"\F9\03", [2 x i8] c"\09\03", [2 x i8] c"\FB\03", [2 x i8] c"\06\03", [2 x i8] c"\FC\03", [2 x i8] c"\03\03", [2 x i8] c"\FD\02", [2 x i8] c"\03\02", [2 x i8] c"\FE\02", [2 x i8] c"\03\02", [2 x i8] c"\FF\02", [2 x i8] c"\02\02", [2 x i8] c"\FF\02", [2 x i8] c"\02\02"], [20 x [2 x i8]] [[2 x i8] c"\C6\03", [2 x i8] c"\D6\04", [2 x i8] c"\D2\04", [2 x i8] c"%\05", [2 x i8] c"\DC\04", [2 x i8] c"\1D\04", [2 x i8] c"\E3\04", [2 x i8] c"\19\04", [2 x i8] c"\E9\04", [2 x i8] c"\14\04", [2 x i8] c"\EF\04", [2 x i8] c"\10\04", [2 x i8] c"\F4\04", [2 x i8] c"\0C\03", [2 x i8] c"\F6\04", [2 x i8] c"\07\03", [2 x i8] c"\FC\04", [2 x i8] c"\03\03", [2 x i8] c"\FF\03", [2 x i8] c"\01\03"], [20 x [2 x i8]] [[2 x i8] c"\C5\03", [2 x i8] c"\D3\05", [2 x i8] c"\CE\04", [2 x i8] c"&\04", [2 x i8] c"\D9\04", [2 x i8] c" \04", [2 x i8] c"\E2\04", [2 x i8] c"\19\03", [2 x i8] c"\E9\03", [2 x i8] c"\14\03", [2 x i8] c"\EC\03", [2 x i8] c"\10\03", [2 x i8] c"\F3\03", [2 x i8] c"\0A\03", [2 x i8] c"\F9\03", [2 x i8] c"\03\03", [2 x i8] c"\00\03", [2 x i8] c"\FF\03", [2 x i8] c"\02\03", [2 x i8] c"\FF\02"]], align 16
@.str.17 = private unnamed_addr constant [31 x i8] c"quant_cof %d is out of range.\0A\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"r overflow\0A\00", align 1
@ltp_gain_values = internal constant [4 x [4 x i8]] [[4 x i8] c"\00\08\10\18", [4 x i8] c" (08", [4 x i8] c"@FLR", [4 x i8] c"X\5C`d"], align 16
@tail_code = internal constant [16 x [6 x i8]] [[6 x i8] c"J,\19\0D\07\03", [6 x i8] c"D*\18\0D\07\03", [6 x i8] c":'\17\0D\07\03", [6 x i8] c"~F%\13\0A\05", [6 x i8] c"\84F%\14\0A\05", [6 x i8] c"|F&\14\0A\05", [6 x i8] c"xE%\14\0B\05", [6 x i8] c"tC%\14\0B\05", [6 x i8] c"lB$\14\0A\05", [6 x i8] c"f>$\14\0A\05", [6 x i8] c"X:\22\13\0A\05", [6 x i8] c"\A2Y1\19\0D\07", [6 x i8] c"\9CW1\1A\0E\07", [6 x i8] c"\96V/\1A\0E\07", [6 x i8] c"\8ET/\1A\0E\07", [6 x i8] c"\83O.\1A\0E\07"], align 16
@.str.19 = private unnamed_addr constant [25 x i8] c"Invalid master channel.\0A\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"Damaged channel data.\0A\00", align 1
@mcc_weightings = internal constant [32 x i16] [i16 204, i16 192, i16 179, i16 166, i16 153, i16 140, i16 128, i16 115, i16 102, i16 89, i16 76, i16 64, i16 51, i16 38, i16 25, i16 12, i16 0, i16 -12, i16 -25, i16 -38, i16 -51, i16 -64, i16 -76, i16 -89, i16 -102, i16 -115, i16 -128, i16 -140, i16 -153, i16 -166, i16 -179, i16 -192], align 16
@.str.21 = private unnamed_addr constant [30 x i8] c"Invalid channel correlation.\0A\00", align 1
@.str.22 = private unnamed_addr constant [44 x i8] c"begin %td smaller than time diff index %d.\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"end %td smaller than time diff index %d.\0A\00", align 1
@.str.24 = private unnamed_addr constant [69 x i8] c"sample pointer range [%p, %p] not contained in raw_buffer [%p, %p].\0A\00", align 1
@FLOAT_1 = internal constant %struct.SoftFloat_IEEE754 zeroinitializer, align 8
@.str.25 = private unnamed_addr constant [38 x i8] c"Error in MLZ decompression (%d, %d).\0A\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1689 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %c = alloca i32, align 4
  %channel_size = alloca i32, align 4
  %num_buffers = alloca i32, align 4
  %ret = alloca i32, align 4
  %ctx = alloca %struct.ALSDecContext*, align 8
  %sconf = alloca %struct.ALSSpecificConfig*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1691, metadata !1692), !dbg !1693
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1694, metadata !1692), !dbg !1695
  call void @llvm.dbg.declare(metadata i32* %channel_size, metadata !1696, metadata !1692), !dbg !1697
  call void @llvm.dbg.declare(metadata i32* %num_buffers, metadata !1698, metadata !1692), !dbg !1699
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1700, metadata !1692), !dbg !1701
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx, metadata !1702, metadata !1692), !dbg !1843
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1844
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1845
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1845
  %2 = bitcast i8* %1 to %struct.ALSDecContext*, !dbg !1844
  store %struct.ALSDecContext* %2, %struct.ALSDecContext** %ctx, align 8, !dbg !1843
  call void @llvm.dbg.declare(metadata %struct.ALSSpecificConfig** %sconf, metadata !1846, metadata !1692), !dbg !1848
  %3 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1849
  %sconf1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %3, i32 0, i32 1, !dbg !1850
  store %struct.ALSSpecificConfig* %sconf1, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !1848
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1851
  %5 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1852
  %avctx2 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %5, i32 0, i32 0, !dbg !1853
  store %struct.AVCodecContext* %4, %struct.AVCodecContext** %avctx2, align 8, !dbg !1854
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1855
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 15, !dbg !1857
  %7 = load i8*, i8** %extradata, align 8, !dbg !1857
  %tobool = icmp ne i8* %7, null, !dbg !1855
  br i1 %tobool, label %if.end, label %if.then, !dbg !1858

if.then:                                          ; preds = %entry
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1859
  %9 = bitcast %struct.AVCodecContext* %8 to i8*, !dbg !1859
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i32 0, i32 0)), !dbg !1861
  store i32 -1094995529, i32* %retval, align 4, !dbg !1862
  br label %return, !dbg !1862

if.end:                                           ; preds = %entry
  %10 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1863
  %call = call i32 @read_specific_config(%struct.ALSDecContext* %10), !dbg !1865
  store i32 %call, i32* %ret, align 4, !dbg !1866
  %cmp = icmp slt i32 %call, 0, !dbg !1867
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !1868

if.then3:                                         ; preds = %if.end
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1869
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !1869
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i32 0, i32 0)), !dbg !1871
  br label %fail, !dbg !1872

if.end4:                                          ; preds = %if.end
  %13 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1873
  %call5 = call i32 @check_specific_config(%struct.ALSDecContext* %13), !dbg !1875
  store i32 %call5, i32* %ret, align 4, !dbg !1876
  %cmp6 = icmp slt i32 %call5, 0, !dbg !1877
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !1878

if.then7:                                         ; preds = %if.end4
  br label %fail, !dbg !1879

if.end8:                                          ; preds = %if.end4
  %14 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !1881
  %bgmc = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %14, i32 0, i32 12, !dbg !1883
  %15 = load i32, i32* %bgmc, align 8, !dbg !1883
  %tobool9 = icmp ne i32 %15, 0, !dbg !1881
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !1884

if.then10:                                        ; preds = %if.end8
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1885
  %17 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1887
  %bgmc_lut = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %17, i32 0, i32 13, !dbg !1888
  %18 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1889
  %bgmc_lut_status = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %18, i32 0, i32 14, !dbg !1890
  %call11 = call i32 @ff_bgmc_init(%struct.AVCodecContext* %16, i8** %bgmc_lut, i32** %bgmc_lut_status), !dbg !1891
  store i32 %call11, i32* %ret, align 4, !dbg !1892
  %19 = load i32, i32* %ret, align 4, !dbg !1893
  %cmp12 = icmp slt i32 %19, 0, !dbg !1895
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !1896

if.then13:                                        ; preds = %if.then10
  br label %fail, !dbg !1897

if.end14:                                         ; preds = %if.then10
  br label %if.end15, !dbg !1898

if.end15:                                         ; preds = %if.end14, %if.end8
  %20 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !1899
  %floating = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %20, i32 0, i32 2, !dbg !1901
  %21 = load i32, i32* %floating, align 8, !dbg !1901
  %tobool16 = icmp ne i32 %21, 0, !dbg !1899
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !1902

if.then17:                                        ; preds = %if.end15
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1903
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 84, !dbg !1905
  store i32 3, i32* %sample_fmt, align 8, !dbg !1906
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1907
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 143, !dbg !1908
  store i32 32, i32* %bits_per_raw_sample, align 4, !dbg !1909
  br label %if.end27, !dbg !1910

if.else:                                          ; preds = %if.end15
  %24 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !1911
  %resolution = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %24, i32 0, i32 1, !dbg !1913
  %25 = load i32, i32* %resolution, align 4, !dbg !1913
  %cmp18 = icmp sgt i32 %25, 1, !dbg !1914
  %cond = select i1 %cmp18, i32 2, i32 1, !dbg !1911
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1915
  %sample_fmt19 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %26, i32 0, i32 84, !dbg !1916
  store i32 %cond, i32* %sample_fmt19, align 8, !dbg !1917
  %27 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !1918
  %resolution20 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %27, i32 0, i32 1, !dbg !1919
  %28 = load i32, i32* %resolution20, align 4, !dbg !1919
  %add = add nsw i32 %28, 1, !dbg !1920
  %mul = mul nsw i32 %add, 8, !dbg !1921
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1922
  %bits_per_raw_sample21 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 143, !dbg !1923
  store i32 %mul, i32* %bits_per_raw_sample21, align 4, !dbg !1924
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1925
  %bits_per_raw_sample22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %30, i32 0, i32 143, !dbg !1927
  %31 = load i32, i32* %bits_per_raw_sample22, align 4, !dbg !1927
  %cmp23 = icmp sgt i32 %31, 32, !dbg !1928
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !1929

if.then24:                                        ; preds = %if.else
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1930
  %33 = bitcast %struct.AVCodecContext* %32 to i8*, !dbg !1930
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1932
  %bits_per_raw_sample25 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 143, !dbg !1933
  %35 = load i32, i32* %bits_per_raw_sample25, align 4, !dbg !1933
  call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0), i32 %35), !dbg !1934
  store i32 -1094995529, i32* %ret, align 4, !dbg !1935
  br label %fail, !dbg !1936

if.end26:                                         ; preds = %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then17
  %36 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !1937
  %resolution28 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %36, i32 0, i32 1, !dbg !1938
  %37 = load i32, i32* %resolution28, align 4, !dbg !1938
  %cmp29 = icmp sgt i32 %37, 1, !dbg !1939
  %cond30 = select i1 %cmp29, i32 31, i32 15, !dbg !1937
  %38 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1940
  %s_max = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %38, i32 0, i32 12, !dbg !1941
  store i32 %cond30, i32* %s_max, align 4, !dbg !1942
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1943
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %39, i32 0, i32 82, !dbg !1944
  %40 = load i32, i32* %sample_rate, align 8, !dbg !1944
  %cmp31 = icmp sge i32 %40, 96000, !dbg !1945
  %conv = zext i1 %cmp31 to i32, !dbg !1945
  %add32 = add nsw i32 8, %conv, !dbg !1946
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1947
  %sample_rate33 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 82, !dbg !1948
  %42 = load i32, i32* %sample_rate33, align 8, !dbg !1948
  %cmp34 = icmp sge i32 %42, 192000, !dbg !1949
  %conv35 = zext i1 %cmp34 to i32, !dbg !1949
  %add36 = add nsw i32 %add32, %conv35, !dbg !1950
  %43 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1951
  %ltp_lag_length = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %43, i32 0, i32 15, !dbg !1952
  store i32 %add36, i32* %ltp_lag_length, align 8, !dbg !1953
  %44 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !1954
  %mc_coding = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %44, i32 0, i32 15, !dbg !1955
  %45 = load i32, i32* %mc_coding, align 4, !dbg !1955
  %tobool37 = icmp ne i32 %45, 0, !dbg !1954
  br i1 %tobool37, label %cond.true, label %cond.false, !dbg !1954

cond.true:                                        ; preds = %if.end27
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1956
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %46, i32 0, i32 83, !dbg !1958
  %47 = load i32, i32* %channels, align 4, !dbg !1958
  br label %cond.end, !dbg !1959

cond.false:                                       ; preds = %if.end27
  br label %cond.end, !dbg !1960

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond38 = phi i32 [ %47, %cond.true ], [ 1, %cond.false ], !dbg !1962
  store i32 %cond38, i32* %num_buffers, align 4, !dbg !1964
  %48 = load i32, i32* %num_buffers, align 4, !dbg !1965
  %conv39 = sext i32 %48 to i64, !dbg !1965
  %call40 = call i8* @av_malloc_array(i64 %conv39, i64 8), !dbg !1966
  %49 = bitcast i8* %call40 to i32**, !dbg !1966
  %50 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1967
  %quant_cof = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %50, i32 0, i32 24, !dbg !1968
  store i32** %49, i32*** %quant_cof, align 8, !dbg !1969
  %51 = load i32, i32* %num_buffers, align 4, !dbg !1970
  %conv41 = sext i32 %51 to i64, !dbg !1970
  %call42 = call i8* @av_malloc_array(i64 %conv41, i64 8), !dbg !1971
  %52 = bitcast i8* %call42 to i32**, !dbg !1971
  %53 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1972
  %lpc_cof = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %53, i32 0, i32 26, !dbg !1973
  store i32** %52, i32*** %lpc_cof, align 8, !dbg !1974
  %54 = load i32, i32* %num_buffers, align 4, !dbg !1975
  %55 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !1976
  %max_order = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %55, i32 0, i32 10, !dbg !1977
  %56 = load i32, i32* %max_order, align 8, !dbg !1977
  %mul43 = mul nsw i32 %54, %56, !dbg !1978
  %conv44 = sext i32 %mul43 to i64, !dbg !1975
  %call45 = call i8* @av_malloc_array(i64 %conv44, i64 4), !dbg !1979
  %57 = bitcast i8* %call45 to i32*, !dbg !1979
  %58 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1980
  %quant_cof_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %58, i32 0, i32 25, !dbg !1981
  store i32* %57, i32** %quant_cof_buffer, align 8, !dbg !1982
  %59 = load i32, i32* %num_buffers, align 4, !dbg !1983
  %60 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !1984
  %max_order46 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %60, i32 0, i32 10, !dbg !1985
  %61 = load i32, i32* %max_order46, align 8, !dbg !1985
  %mul47 = mul nsw i32 %59, %61, !dbg !1986
  %conv48 = sext i32 %mul47 to i64, !dbg !1983
  %call49 = call i8* @av_malloc_array(i64 %conv48, i64 4), !dbg !1987
  %62 = bitcast i8* %call49 to i32*, !dbg !1987
  %63 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1988
  %lpc_cof_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %63, i32 0, i32 27, !dbg !1989
  store i32* %62, i32** %lpc_cof_buffer, align 8, !dbg !1990
  %64 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !1991
  %max_order50 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %64, i32 0, i32 10, !dbg !1992
  %65 = load i32, i32* %max_order50, align 8, !dbg !1992
  %conv51 = sext i32 %65 to i64, !dbg !1991
  %call52 = call i8* @av_malloc_array(i64 %conv51, i64 4), !dbg !1993
  %66 = bitcast i8* %call52 to i32*, !dbg !1993
  %67 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1994
  %lpc_cof_reversed_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %67, i32 0, i32 28, !dbg !1995
  store i32* %66, i32** %lpc_cof_reversed_buffer, align 8, !dbg !1996
  %68 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !1997
  %quant_cof53 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %68, i32 0, i32 24, !dbg !1999
  %69 = load i32**, i32*** %quant_cof53, align 8, !dbg !1999
  %tobool54 = icmp ne i32** %69, null, !dbg !1997
  br i1 %tobool54, label %lor.lhs.false, label %if.then66, !dbg !2000

lor.lhs.false:                                    ; preds = %cond.end
  %70 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2001
  %lpc_cof55 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %70, i32 0, i32 26, !dbg !2003
  %71 = load i32**, i32*** %lpc_cof55, align 8, !dbg !2003
  %tobool56 = icmp ne i32** %71, null, !dbg !2001
  br i1 %tobool56, label %lor.lhs.false57, label %if.then66, !dbg !2004

lor.lhs.false57:                                  ; preds = %lor.lhs.false
  %72 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2005
  %quant_cof_buffer58 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %72, i32 0, i32 25, !dbg !2006
  %73 = load i32*, i32** %quant_cof_buffer58, align 8, !dbg !2006
  %tobool59 = icmp ne i32* %73, null, !dbg !2005
  br i1 %tobool59, label %lor.lhs.false60, label %if.then66, !dbg !2007

lor.lhs.false60:                                  ; preds = %lor.lhs.false57
  %74 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2008
  %lpc_cof_buffer61 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %74, i32 0, i32 27, !dbg !2009
  %75 = load i32*, i32** %lpc_cof_buffer61, align 8, !dbg !2009
  %tobool62 = icmp ne i32* %75, null, !dbg !2008
  br i1 %tobool62, label %lor.lhs.false63, label %if.then66, !dbg !2010

lor.lhs.false63:                                  ; preds = %lor.lhs.false60
  %76 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2011
  %lpc_cof_reversed_buffer64 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %76, i32 0, i32 28, !dbg !2012
  %77 = load i32*, i32** %lpc_cof_reversed_buffer64, align 8, !dbg !2012
  %tobool65 = icmp ne i32* %77, null, !dbg !2011
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !2013

if.then66:                                        ; preds = %lor.lhs.false63, %lor.lhs.false60, %lor.lhs.false57, %lor.lhs.false, %cond.end
  %78 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2014
  %79 = bitcast %struct.AVCodecContext* %78 to i8*, !dbg !2014
  call void (i8*, i32, i8*, ...) @av_log(i8* %79, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i32 0, i32 0)), !dbg !2016
  store i32 -12, i32* %ret, align 4, !dbg !2017
  br label %fail, !dbg !2018

if.end67:                                         ; preds = %lor.lhs.false63
  store i32 0, i32* %c, align 4, !dbg !2019
  br label %for.cond, !dbg !2021

for.cond:                                         ; preds = %for.inc, %if.end67
  %80 = load i32, i32* %c, align 4, !dbg !2022
  %81 = load i32, i32* %num_buffers, align 4, !dbg !2025
  %cmp68 = icmp ult i32 %80, %81, !dbg !2026
  br i1 %cmp68, label %for.body, label %for.end, !dbg !2027

for.body:                                         ; preds = %for.cond
  %82 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2028
  %quant_cof_buffer70 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %82, i32 0, i32 25, !dbg !2030
  %83 = load i32*, i32** %quant_cof_buffer70, align 8, !dbg !2030
  %84 = load i32, i32* %c, align 4, !dbg !2031
  %85 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2032
  %max_order71 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %85, i32 0, i32 10, !dbg !2033
  %86 = load i32, i32* %max_order71, align 8, !dbg !2033
  %mul72 = mul i32 %84, %86, !dbg !2034
  %idx.ext = zext i32 %mul72 to i64, !dbg !2035
  %add.ptr = getelementptr inbounds i32, i32* %83, i64 %idx.ext, !dbg !2035
  %87 = load i32, i32* %c, align 4, !dbg !2036
  %idxprom = zext i32 %87 to i64, !dbg !2037
  %88 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2037
  %quant_cof73 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %88, i32 0, i32 24, !dbg !2038
  %89 = load i32**, i32*** %quant_cof73, align 8, !dbg !2038
  %arrayidx = getelementptr inbounds i32*, i32** %89, i64 %idxprom, !dbg !2037
  store i32* %add.ptr, i32** %arrayidx, align 8, !dbg !2039
  %90 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2040
  %lpc_cof_buffer74 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %90, i32 0, i32 27, !dbg !2041
  %91 = load i32*, i32** %lpc_cof_buffer74, align 8, !dbg !2041
  %92 = load i32, i32* %c, align 4, !dbg !2042
  %93 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2043
  %max_order75 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %93, i32 0, i32 10, !dbg !2044
  %94 = load i32, i32* %max_order75, align 8, !dbg !2044
  %mul76 = mul i32 %92, %94, !dbg !2045
  %idx.ext77 = zext i32 %mul76 to i64, !dbg !2046
  %add.ptr78 = getelementptr inbounds i32, i32* %91, i64 %idx.ext77, !dbg !2046
  %95 = load i32, i32* %c, align 4, !dbg !2047
  %idxprom79 = zext i32 %95 to i64, !dbg !2048
  %96 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2048
  %lpc_cof80 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %96, i32 0, i32 26, !dbg !2049
  %97 = load i32**, i32*** %lpc_cof80, align 8, !dbg !2049
  %arrayidx81 = getelementptr inbounds i32*, i32** %97, i64 %idxprom79, !dbg !2048
  store i32* %add.ptr78, i32** %arrayidx81, align 8, !dbg !2050
  br label %for.inc, !dbg !2051

for.inc:                                          ; preds = %for.body
  %98 = load i32, i32* %c, align 4, !dbg !2052
  %inc = add i32 %98, 1, !dbg !2052
  store i32 %inc, i32* %c, align 4, !dbg !2052
  br label %for.cond, !dbg !2054, !llvm.loop !2055

for.end:                                          ; preds = %for.cond
  %99 = load i32, i32* %num_buffers, align 4, !dbg !2057
  %conv82 = sext i32 %99 to i64, !dbg !2057
  %call83 = call i8* @av_malloc_array(i64 %conv82, i64 4), !dbg !2058
  %100 = bitcast i8* %call83 to i32*, !dbg !2058
  %101 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2059
  %const_block = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %101, i32 0, i32 16, !dbg !2060
  store i32* %100, i32** %const_block, align 8, !dbg !2061
  %102 = load i32, i32* %num_buffers, align 4, !dbg !2062
  %conv84 = sext i32 %102 to i64, !dbg !2062
  %call85 = call i8* @av_malloc_array(i64 %conv84, i64 4), !dbg !2063
  %103 = bitcast i8* %call85 to i32*, !dbg !2063
  %104 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2064
  %shift_lsbs = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %104, i32 0, i32 17, !dbg !2065
  store i32* %103, i32** %shift_lsbs, align 8, !dbg !2066
  %105 = load i32, i32* %num_buffers, align 4, !dbg !2067
  %conv86 = sext i32 %105 to i64, !dbg !2067
  %call87 = call i8* @av_malloc_array(i64 %conv86, i64 4), !dbg !2068
  %106 = bitcast i8* %call87 to i32*, !dbg !2068
  %107 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2069
  %opt_order = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %107, i32 0, i32 18, !dbg !2070
  store i32* %106, i32** %opt_order, align 8, !dbg !2071
  %108 = load i32, i32* %num_buffers, align 4, !dbg !2072
  %conv88 = sext i32 %108 to i64, !dbg !2072
  %call89 = call i8* @av_malloc_array(i64 %conv88, i64 4), !dbg !2073
  %109 = bitcast i8* %call89 to i32*, !dbg !2073
  %110 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2074
  %store_prev_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %110, i32 0, i32 19, !dbg !2075
  store i32* %109, i32** %store_prev_samples, align 8, !dbg !2076
  %111 = load i32, i32* %num_buffers, align 4, !dbg !2077
  %conv90 = sext i32 %111 to i64, !dbg !2077
  %call91 = call i8* @av_mallocz_array(i64 %conv90, i64 4), !dbg !2078
  %112 = bitcast i8* %call91 to i32*, !dbg !2078
  %113 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2079
  %use_ltp = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %113, i32 0, i32 20, !dbg !2080
  store i32* %112, i32** %use_ltp, align 8, !dbg !2081
  %114 = load i32, i32* %num_buffers, align 4, !dbg !2082
  %conv92 = sext i32 %114 to i64, !dbg !2082
  %call93 = call i8* @av_malloc_array(i64 %conv92, i64 4), !dbg !2083
  %115 = bitcast i8* %call93 to i32*, !dbg !2083
  %116 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2084
  %ltp_lag = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %116, i32 0, i32 21, !dbg !2085
  store i32* %115, i32** %ltp_lag, align 8, !dbg !2086
  %117 = load i32, i32* %num_buffers, align 4, !dbg !2087
  %conv94 = sext i32 %117 to i64, !dbg !2087
  %call95 = call i8* @av_malloc_array(i64 %conv94, i64 8), !dbg !2088
  %118 = bitcast i8* %call95 to i32**, !dbg !2088
  %119 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2089
  %ltp_gain = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %119, i32 0, i32 22, !dbg !2090
  store i32** %118, i32*** %ltp_gain, align 8, !dbg !2091
  %120 = load i32, i32* %num_buffers, align 4, !dbg !2092
  %mul96 = mul nsw i32 %120, 5, !dbg !2093
  %conv97 = sext i32 %mul96 to i64, !dbg !2092
  %call98 = call i8* @av_malloc_array(i64 %conv97, i64 4), !dbg !2094
  %121 = bitcast i8* %call98 to i32*, !dbg !2094
  %122 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2095
  %ltp_gain_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %122, i32 0, i32 23, !dbg !2096
  store i32* %121, i32** %ltp_gain_buffer, align 8, !dbg !2097
  %123 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2098
  %const_block99 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %123, i32 0, i32 16, !dbg !2100
  %124 = load i32*, i32** %const_block99, align 8, !dbg !2100
  %tobool100 = icmp ne i32* %124, null, !dbg !2098
  br i1 %tobool100, label %lor.lhs.false101, label %if.then122, !dbg !2101

lor.lhs.false101:                                 ; preds = %for.end
  %125 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2102
  %shift_lsbs102 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %125, i32 0, i32 17, !dbg !2104
  %126 = load i32*, i32** %shift_lsbs102, align 8, !dbg !2104
  %tobool103 = icmp ne i32* %126, null, !dbg !2102
  br i1 %tobool103, label %lor.lhs.false104, label %if.then122, !dbg !2105

lor.lhs.false104:                                 ; preds = %lor.lhs.false101
  %127 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2106
  %opt_order105 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %127, i32 0, i32 18, !dbg !2107
  %128 = load i32*, i32** %opt_order105, align 8, !dbg !2107
  %tobool106 = icmp ne i32* %128, null, !dbg !2106
  br i1 %tobool106, label %lor.lhs.false107, label %if.then122, !dbg !2108

lor.lhs.false107:                                 ; preds = %lor.lhs.false104
  %129 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2109
  %store_prev_samples108 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %129, i32 0, i32 19, !dbg !2110
  %130 = load i32*, i32** %store_prev_samples108, align 8, !dbg !2110
  %tobool109 = icmp ne i32* %130, null, !dbg !2109
  br i1 %tobool109, label %lor.lhs.false110, label %if.then122, !dbg !2111

lor.lhs.false110:                                 ; preds = %lor.lhs.false107
  %131 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2112
  %use_ltp111 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %131, i32 0, i32 20, !dbg !2113
  %132 = load i32*, i32** %use_ltp111, align 8, !dbg !2113
  %tobool112 = icmp ne i32* %132, null, !dbg !2112
  br i1 %tobool112, label %lor.lhs.false113, label %if.then122, !dbg !2114

lor.lhs.false113:                                 ; preds = %lor.lhs.false110
  %133 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2115
  %ltp_lag114 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %133, i32 0, i32 21, !dbg !2116
  %134 = load i32*, i32** %ltp_lag114, align 8, !dbg !2116
  %tobool115 = icmp ne i32* %134, null, !dbg !2115
  br i1 %tobool115, label %lor.lhs.false116, label %if.then122, !dbg !2117

lor.lhs.false116:                                 ; preds = %lor.lhs.false113
  %135 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2118
  %ltp_gain117 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %135, i32 0, i32 22, !dbg !2119
  %136 = load i32**, i32*** %ltp_gain117, align 8, !dbg !2119
  %tobool118 = icmp ne i32** %136, null, !dbg !2118
  br i1 %tobool118, label %lor.lhs.false119, label %if.then122, !dbg !2120

lor.lhs.false119:                                 ; preds = %lor.lhs.false116
  %137 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2121
  %ltp_gain_buffer120 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %137, i32 0, i32 23, !dbg !2122
  %138 = load i32*, i32** %ltp_gain_buffer120, align 8, !dbg !2122
  %tobool121 = icmp ne i32* %138, null, !dbg !2121
  br i1 %tobool121, label %if.end123, label %if.then122, !dbg !2123

if.then122:                                       ; preds = %lor.lhs.false119, %lor.lhs.false116, %lor.lhs.false113, %lor.lhs.false110, %lor.lhs.false107, %lor.lhs.false104, %lor.lhs.false101, %for.end
  %139 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2124
  %140 = bitcast %struct.AVCodecContext* %139 to i8*, !dbg !2124
  call void (i8*, i32, i8*, ...) @av_log(i8* %140, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i32 0, i32 0)), !dbg !2126
  store i32 -12, i32* %ret, align 4, !dbg !2127
  br label %fail, !dbg !2128

if.end123:                                        ; preds = %lor.lhs.false119
  store i32 0, i32* %c, align 4, !dbg !2129
  br label %for.cond124, !dbg !2131

for.cond124:                                      ; preds = %for.inc135, %if.end123
  %141 = load i32, i32* %c, align 4, !dbg !2132
  %142 = load i32, i32* %num_buffers, align 4, !dbg !2135
  %cmp125 = icmp ult i32 %141, %142, !dbg !2136
  br i1 %cmp125, label %for.body127, label %for.end137, !dbg !2137

for.body127:                                      ; preds = %for.cond124
  %143 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2138
  %ltp_gain_buffer128 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %143, i32 0, i32 23, !dbg !2139
  %144 = load i32*, i32** %ltp_gain_buffer128, align 8, !dbg !2139
  %145 = load i32, i32* %c, align 4, !dbg !2140
  %mul129 = mul i32 %145, 5, !dbg !2141
  %idx.ext130 = zext i32 %mul129 to i64, !dbg !2142
  %add.ptr131 = getelementptr inbounds i32, i32* %144, i64 %idx.ext130, !dbg !2142
  %146 = load i32, i32* %c, align 4, !dbg !2143
  %idxprom132 = zext i32 %146 to i64, !dbg !2144
  %147 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2144
  %ltp_gain133 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %147, i32 0, i32 22, !dbg !2145
  %148 = load i32**, i32*** %ltp_gain133, align 8, !dbg !2145
  %arrayidx134 = getelementptr inbounds i32*, i32** %148, i64 %idxprom132, !dbg !2144
  store i32* %add.ptr131, i32** %arrayidx134, align 8, !dbg !2146
  br label %for.inc135, !dbg !2144

for.inc135:                                       ; preds = %for.body127
  %149 = load i32, i32* %c, align 4, !dbg !2147
  %inc136 = add i32 %149, 1, !dbg !2147
  store i32 %inc136, i32* %c, align 4, !dbg !2147
  br label %for.cond124, !dbg !2149, !llvm.loop !2150

for.end137:                                       ; preds = %for.cond124
  %150 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2152
  %mc_coding138 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %150, i32 0, i32 15, !dbg !2154
  %151 = load i32, i32* %mc_coding138, align 4, !dbg !2154
  %tobool139 = icmp ne i32 %151, 0, !dbg !2152
  br i1 %tobool139, label %if.then140, label %if.else172, !dbg !2155

if.then140:                                       ; preds = %for.end137
  %152 = load i32, i32* %num_buffers, align 4, !dbg !2156
  %153 = load i32, i32* %num_buffers, align 4, !dbg !2158
  %mul141 = mul nsw i32 %152, %153, !dbg !2159
  %conv142 = sext i32 %mul141 to i64, !dbg !2156
  %call143 = call i8* @av_mallocz_array(i64 %conv142, i64 44), !dbg !2160
  %154 = bitcast i8* %call143 to %struct.ALSChannelData*, !dbg !2160
  %155 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2161
  %chan_data_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %155, i32 0, i32 30, !dbg !2162
  store %struct.ALSChannelData* %154, %struct.ALSChannelData** %chan_data_buffer, align 8, !dbg !2163
  %156 = load i32, i32* %num_buffers, align 4, !dbg !2164
  %conv144 = sext i32 %156 to i64, !dbg !2164
  %call145 = call i8* @av_mallocz_array(i64 %conv144, i64 8), !dbg !2165
  %157 = bitcast i8* %call145 to %struct.ALSChannelData**, !dbg !2165
  %158 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2166
  %chan_data = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %158, i32 0, i32 29, !dbg !2167
  store %struct.ALSChannelData** %157, %struct.ALSChannelData*** %chan_data, align 8, !dbg !2168
  %159 = load i32, i32* %num_buffers, align 4, !dbg !2169
  %conv146 = sext i32 %159 to i64, !dbg !2169
  %call147 = call i8* @av_malloc_array(i64 %conv146, i64 4), !dbg !2170
  %160 = bitcast i8* %call147 to i32*, !dbg !2170
  %161 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2171
  %reverted_channels = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %161, i32 0, i32 31, !dbg !2172
  store i32* %160, i32** %reverted_channels, align 8, !dbg !2173
  %162 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2174
  %chan_data_buffer148 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %162, i32 0, i32 30, !dbg !2176
  %163 = load %struct.ALSChannelData*, %struct.ALSChannelData** %chan_data_buffer148, align 8, !dbg !2176
  %tobool149 = icmp ne %struct.ALSChannelData* %163, null, !dbg !2174
  br i1 %tobool149, label %lor.lhs.false150, label %if.then156, !dbg !2177

lor.lhs.false150:                                 ; preds = %if.then140
  %164 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2178
  %chan_data151 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %164, i32 0, i32 29, !dbg !2180
  %165 = load %struct.ALSChannelData**, %struct.ALSChannelData*** %chan_data151, align 8, !dbg !2180
  %tobool152 = icmp ne %struct.ALSChannelData** %165, null, !dbg !2178
  br i1 %tobool152, label %lor.lhs.false153, label %if.then156, !dbg !2181

lor.lhs.false153:                                 ; preds = %lor.lhs.false150
  %166 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2182
  %reverted_channels154 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %166, i32 0, i32 31, !dbg !2184
  %167 = load i32*, i32** %reverted_channels154, align 8, !dbg !2184
  %tobool155 = icmp ne i32* %167, null, !dbg !2182
  br i1 %tobool155, label %if.end157, label %if.then156, !dbg !2185

if.then156:                                       ; preds = %lor.lhs.false153, %lor.lhs.false150, %if.then140
  %168 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2186
  %169 = bitcast %struct.AVCodecContext* %168 to i8*, !dbg !2186
  call void (i8*, i32, i8*, ...) @av_log(i8* %169, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i32 0, i32 0)), !dbg !2188
  store i32 -12, i32* %ret, align 4, !dbg !2189
  br label %fail, !dbg !2190

if.end157:                                        ; preds = %lor.lhs.false153
  store i32 0, i32* %c, align 4, !dbg !2191
  br label %for.cond158, !dbg !2193

for.cond158:                                      ; preds = %for.inc169, %if.end157
  %170 = load i32, i32* %c, align 4, !dbg !2194
  %171 = load i32, i32* %num_buffers, align 4, !dbg !2197
  %cmp159 = icmp ult i32 %170, %171, !dbg !2198
  br i1 %cmp159, label %for.body161, label %for.end171, !dbg !2199

for.body161:                                      ; preds = %for.cond158
  %172 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2200
  %chan_data_buffer162 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %172, i32 0, i32 30, !dbg !2201
  %173 = load %struct.ALSChannelData*, %struct.ALSChannelData** %chan_data_buffer162, align 8, !dbg !2201
  %174 = load i32, i32* %c, align 4, !dbg !2202
  %175 = load i32, i32* %num_buffers, align 4, !dbg !2203
  %mul163 = mul i32 %174, %175, !dbg !2204
  %idx.ext164 = zext i32 %mul163 to i64, !dbg !2205
  %add.ptr165 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %173, i64 %idx.ext164, !dbg !2205
  %176 = load i32, i32* %c, align 4, !dbg !2206
  %idxprom166 = zext i32 %176 to i64, !dbg !2207
  %177 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2207
  %chan_data167 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %177, i32 0, i32 29, !dbg !2208
  %178 = load %struct.ALSChannelData**, %struct.ALSChannelData*** %chan_data167, align 8, !dbg !2208
  %arrayidx168 = getelementptr inbounds %struct.ALSChannelData*, %struct.ALSChannelData** %178, i64 %idxprom166, !dbg !2207
  store %struct.ALSChannelData* %add.ptr165, %struct.ALSChannelData** %arrayidx168, align 8, !dbg !2209
  br label %for.inc169, !dbg !2207

for.inc169:                                       ; preds = %for.body161
  %179 = load i32, i32* %c, align 4, !dbg !2210
  %inc170 = add i32 %179, 1, !dbg !2210
  store i32 %inc170, i32* %c, align 4, !dbg !2210
  br label %for.cond158, !dbg !2212, !llvm.loop !2213

for.end171:                                       ; preds = %for.cond158
  br label %if.end176, !dbg !2215

if.else172:                                       ; preds = %for.end137
  %180 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2216
  %chan_data173 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %180, i32 0, i32 29, !dbg !2218
  store %struct.ALSChannelData** null, %struct.ALSChannelData*** %chan_data173, align 8, !dbg !2219
  %181 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2220
  %chan_data_buffer174 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %181, i32 0, i32 30, !dbg !2221
  store %struct.ALSChannelData* null, %struct.ALSChannelData** %chan_data_buffer174, align 8, !dbg !2222
  %182 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2223
  %reverted_channels175 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %182, i32 0, i32 31, !dbg !2224
  store i32* null, i32** %reverted_channels175, align 8, !dbg !2225
  br label %if.end176

if.end176:                                        ; preds = %if.else172, %for.end171
  %183 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2226
  %frame_length = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %183, i32 0, i32 4, !dbg !2227
  %184 = load i32, i32* %frame_length, align 8, !dbg !2227
  %185 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2228
  %max_order177 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %185, i32 0, i32 10, !dbg !2229
  %186 = load i32, i32* %max_order177, align 8, !dbg !2229
  %add178 = add nsw i32 %184, %186, !dbg !2230
  store i32 %add178, i32* %channel_size, align 4, !dbg !2231
  %187 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2232
  %max_order179 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %187, i32 0, i32 10, !dbg !2233
  %188 = load i32, i32* %max_order179, align 8, !dbg !2233
  %conv180 = sext i32 %188 to i64, !dbg !2232
  %call181 = call i8* @av_malloc_array(i64 %conv180, i64 4), !dbg !2234
  %189 = bitcast i8* %call181 to i32*, !dbg !2234
  %190 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2235
  %prev_raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %190, i32 0, i32 32, !dbg !2236
  store i32* %189, i32** %prev_raw_samples, align 8, !dbg !2237
  %191 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2238
  %channels182 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %191, i32 0, i32 83, !dbg !2239
  %192 = load i32, i32* %channels182, align 4, !dbg !2239
  %193 = load i32, i32* %channel_size, align 4, !dbg !2240
  %mul183 = mul i32 %192, %193, !dbg !2241
  %conv184 = zext i32 %mul183 to i64, !dbg !2238
  %call185 = call i8* @av_mallocz_array(i64 %conv184, i64 4), !dbg !2242
  %194 = bitcast i8* %call185 to i32*, !dbg !2242
  %195 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2243
  %raw_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %195, i32 0, i32 34, !dbg !2244
  store i32* %194, i32** %raw_buffer, align 8, !dbg !2245
  %196 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2246
  %channels186 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %196, i32 0, i32 83, !dbg !2247
  %197 = load i32, i32* %channels186, align 4, !dbg !2247
  %conv187 = sext i32 %197 to i64, !dbg !2246
  %call188 = call i8* @av_malloc_array(i64 %conv187, i64 8), !dbg !2248
  %198 = bitcast i8* %call188 to i32**, !dbg !2248
  %199 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2249
  %raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %199, i32 0, i32 33, !dbg !2250
  store i32** %198, i32*** %raw_samples, align 8, !dbg !2251
  %200 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2252
  %floating189 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %200, i32 0, i32 2, !dbg !2254
  %201 = load i32, i32* %floating189, align 8, !dbg !2254
  %tobool190 = icmp ne i32 %201, 0, !dbg !2252
  br i1 %tobool190, label %if.then191, label %if.end249, !dbg !2255

if.then191:                                       ; preds = %if.end176
  %202 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2256
  %channels192 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %202, i32 0, i32 83, !dbg !2258
  %203 = load i32, i32* %channels192, align 4, !dbg !2258
  %conv193 = sext i32 %203 to i64, !dbg !2256
  %call194 = call i8* @av_malloc_array(i64 %conv193, i64 24), !dbg !2259
  %204 = bitcast i8* %call194 to %struct.SoftFloat_IEEE754*, !dbg !2259
  %205 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2260
  %acf = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %205, i32 0, i32 37, !dbg !2261
  store %struct.SoftFloat_IEEE754* %204, %struct.SoftFloat_IEEE754** %acf, align 8, !dbg !2262
  %206 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2263
  %channels195 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %206, i32 0, i32 83, !dbg !2264
  %207 = load i32, i32* %channels195, align 4, !dbg !2264
  %conv196 = sext i32 %207 to i64, !dbg !2263
  %call197 = call i8* @av_malloc_array(i64 %conv196, i64 4), !dbg !2265
  %208 = bitcast i8* %call197 to i32*, !dbg !2265
  %209 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2266
  %shift_value = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %209, i32 0, i32 39, !dbg !2267
  store i32* %208, i32** %shift_value, align 8, !dbg !2268
  %210 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2269
  %channels198 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %210, i32 0, i32 83, !dbg !2270
  %211 = load i32, i32* %channels198, align 4, !dbg !2270
  %conv199 = sext i32 %211 to i64, !dbg !2269
  %call200 = call i8* @av_malloc_array(i64 %conv199, i64 4), !dbg !2271
  %212 = bitcast i8* %call200 to i32*, !dbg !2271
  %213 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2272
  %last_shift_value = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %213, i32 0, i32 40, !dbg !2273
  store i32* %212, i32** %last_shift_value, align 8, !dbg !2274
  %214 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2275
  %channels201 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %214, i32 0, i32 83, !dbg !2276
  %215 = load i32, i32* %channels201, align 4, !dbg !2276
  %conv202 = sext i32 %215 to i64, !dbg !2275
  %call203 = call i8* @av_malloc_array(i64 %conv202, i64 4), !dbg !2277
  %216 = bitcast i8* %call203 to i32*, !dbg !2277
  %217 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2278
  %last_acf_mantissa = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %217, i32 0, i32 38, !dbg !2279
  store i32* %216, i32** %last_acf_mantissa, align 8, !dbg !2280
  %218 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2281
  %channels204 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %218, i32 0, i32 83, !dbg !2282
  %219 = load i32, i32* %channels204, align 4, !dbg !2282
  %conv205 = sext i32 %219 to i64, !dbg !2281
  %call206 = call i8* @av_mallocz_array(i64 %conv205, i64 8), !dbg !2283
  %220 = bitcast i8* %call206 to i32**, !dbg !2283
  %221 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2284
  %raw_mantissa = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %221, i32 0, i32 41, !dbg !2285
  store i32** %220, i32*** %raw_mantissa, align 8, !dbg !2286
  %222 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2287
  %cur_frame_length = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %222, i32 0, i32 7, !dbg !2288
  %223 = load i32, i32* %cur_frame_length, align 8, !dbg !2288
  %mul207 = mul i32 %223, 4, !dbg !2289
  %conv208 = zext i32 %mul207 to i64, !dbg !2287
  %call209 = call i8* @av_malloc_array(i64 %conv208, i64 1), !dbg !2290
  %224 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2291
  %larray = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %224, i32 0, i32 42, !dbg !2292
  store i8* %call209, i8** %larray, align 8, !dbg !2293
  %225 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2294
  %cur_frame_length210 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %225, i32 0, i32 7, !dbg !2295
  %226 = load i32, i32* %cur_frame_length210, align 8, !dbg !2295
  %conv211 = zext i32 %226 to i64, !dbg !2294
  %call212 = call i8* @av_malloc_array(i64 %conv211, i64 4), !dbg !2296
  %227 = bitcast i8* %call212 to i32*, !dbg !2296
  %228 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2297
  %nbits = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %228, i32 0, i32 43, !dbg !2298
  store i32* %227, i32** %nbits, align 8, !dbg !2299
  %call213 = call noalias i8* @av_mallocz(i64 40), !dbg !2300
  %229 = bitcast i8* %call213 to %struct.MLZ*, !dbg !2300
  %230 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2301
  %mlz = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %230, i32 0, i32 36, !dbg !2302
  store %struct.MLZ* %229, %struct.MLZ** %mlz, align 8, !dbg !2303
  %231 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2304
  %mlz214 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %231, i32 0, i32 36, !dbg !2306
  %232 = load %struct.MLZ*, %struct.MLZ** %mlz214, align 8, !dbg !2306
  %tobool215 = icmp ne %struct.MLZ* %232, null, !dbg !2304
  br i1 %tobool215, label %lor.lhs.false216, label %if.then231, !dbg !2307

lor.lhs.false216:                                 ; preds = %if.then191
  %233 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2308
  %acf217 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %233, i32 0, i32 37, !dbg !2310
  %234 = load %struct.SoftFloat_IEEE754*, %struct.SoftFloat_IEEE754** %acf217, align 8, !dbg !2310
  %tobool218 = icmp ne %struct.SoftFloat_IEEE754* %234, null, !dbg !2308
  br i1 %tobool218, label %lor.lhs.false219, label %if.then231, !dbg !2311

lor.lhs.false219:                                 ; preds = %lor.lhs.false216
  %235 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2312
  %shift_value220 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %235, i32 0, i32 39, !dbg !2314
  %236 = load i32*, i32** %shift_value220, align 8, !dbg !2314
  %tobool221 = icmp ne i32* %236, null, !dbg !2312
  br i1 %tobool221, label %lor.lhs.false222, label %if.then231, !dbg !2315

lor.lhs.false222:                                 ; preds = %lor.lhs.false219
  %237 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2316
  %last_shift_value223 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %237, i32 0, i32 40, !dbg !2318
  %238 = load i32*, i32** %last_shift_value223, align 8, !dbg !2318
  %tobool224 = icmp ne i32* %238, null, !dbg !2316
  br i1 %tobool224, label %lor.lhs.false225, label %if.then231, !dbg !2319

lor.lhs.false225:                                 ; preds = %lor.lhs.false222
  %239 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2320
  %last_acf_mantissa226 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %239, i32 0, i32 38, !dbg !2321
  %240 = load i32*, i32** %last_acf_mantissa226, align 8, !dbg !2321
  %tobool227 = icmp ne i32* %240, null, !dbg !2320
  br i1 %tobool227, label %lor.lhs.false228, label %if.then231, !dbg !2322

lor.lhs.false228:                                 ; preds = %lor.lhs.false225
  %241 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2323
  %raw_mantissa229 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %241, i32 0, i32 41, !dbg !2324
  %242 = load i32**, i32*** %raw_mantissa229, align 8, !dbg !2324
  %tobool230 = icmp ne i32** %242, null, !dbg !2323
  br i1 %tobool230, label %if.end232, label %if.then231, !dbg !2325

if.then231:                                       ; preds = %lor.lhs.false228, %lor.lhs.false225, %lor.lhs.false222, %lor.lhs.false219, %lor.lhs.false216, %if.then191
  %243 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2327
  %244 = bitcast %struct.AVCodecContext* %243 to i8*, !dbg !2327
  call void (i8*, i32, i8*, ...) @av_log(i8* %244, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i32 0, i32 0)), !dbg !2329
  store i32 -12, i32* %ret, align 4, !dbg !2330
  br label %fail, !dbg !2331

if.end232:                                        ; preds = %lor.lhs.false228
  %245 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2332
  %246 = bitcast %struct.AVCodecContext* %245 to i8*, !dbg !2332
  %247 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2333
  %mlz233 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %247, i32 0, i32 36, !dbg !2334
  %248 = load %struct.MLZ*, %struct.MLZ** %mlz233, align 8, !dbg !2334
  call void @ff_mlz_init_dict(i8* %246, %struct.MLZ* %248), !dbg !2335
  %249 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2336
  %mlz234 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %249, i32 0, i32 36, !dbg !2337
  %250 = load %struct.MLZ*, %struct.MLZ** %mlz234, align 8, !dbg !2337
  call void @ff_mlz_flush_dict(%struct.MLZ* %250), !dbg !2338
  store i32 0, i32* %c, align 4, !dbg !2339
  br label %for.cond235, !dbg !2341

for.cond235:                                      ; preds = %for.inc246, %if.end232
  %251 = load i32, i32* %c, align 4, !dbg !2342
  %252 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2345
  %channels236 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %252, i32 0, i32 83, !dbg !2346
  %253 = load i32, i32* %channels236, align 4, !dbg !2346
  %cmp237 = icmp ult i32 %251, %253, !dbg !2347
  br i1 %cmp237, label %for.body239, label %for.end248, !dbg !2348

for.body239:                                      ; preds = %for.cond235
  %254 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2349
  %cur_frame_length240 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %254, i32 0, i32 7, !dbg !2351
  %255 = load i32, i32* %cur_frame_length240, align 8, !dbg !2351
  %conv241 = zext i32 %255 to i64, !dbg !2349
  %call242 = call i8* @av_mallocz_array(i64 %conv241, i64 4), !dbg !2352
  %256 = bitcast i8* %call242 to i32*, !dbg !2352
  %257 = load i32, i32* %c, align 4, !dbg !2353
  %idxprom243 = zext i32 %257 to i64, !dbg !2354
  %258 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2354
  %raw_mantissa244 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %258, i32 0, i32 41, !dbg !2355
  %259 = load i32**, i32*** %raw_mantissa244, align 8, !dbg !2355
  %arrayidx245 = getelementptr inbounds i32*, i32** %259, i64 %idxprom243, !dbg !2354
  store i32* %256, i32** %arrayidx245, align 8, !dbg !2356
  br label %for.inc246, !dbg !2357

for.inc246:                                       ; preds = %for.body239
  %260 = load i32, i32* %c, align 4, !dbg !2358
  %inc247 = add i32 %260, 1, !dbg !2358
  store i32 %inc247, i32* %c, align 4, !dbg !2358
  br label %for.cond235, !dbg !2360, !llvm.loop !2361

for.end248:                                       ; preds = %for.cond235
  br label %if.end249, !dbg !2363

if.end249:                                        ; preds = %for.end248, %if.end176
  %261 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2364
  %prev_raw_samples250 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %261, i32 0, i32 32, !dbg !2366
  %262 = load i32*, i32** %prev_raw_samples250, align 8, !dbg !2366
  %tobool251 = icmp ne i32* %262, null, !dbg !2364
  br i1 %tobool251, label %lor.lhs.false252, label %if.then258, !dbg !2367

lor.lhs.false252:                                 ; preds = %if.end249
  %263 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2368
  %raw_buffer253 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %263, i32 0, i32 34, !dbg !2370
  %264 = load i32*, i32** %raw_buffer253, align 8, !dbg !2370
  %tobool254 = icmp ne i32* %264, null, !dbg !2368
  br i1 %tobool254, label %lor.lhs.false255, label %if.then258, !dbg !2371

lor.lhs.false255:                                 ; preds = %lor.lhs.false252
  %265 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2372
  %raw_samples256 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %265, i32 0, i32 33, !dbg !2374
  %266 = load i32**, i32*** %raw_samples256, align 8, !dbg !2374
  %tobool257 = icmp ne i32** %266, null, !dbg !2372
  br i1 %tobool257, label %if.end259, label %if.then258, !dbg !2375

if.then258:                                       ; preds = %lor.lhs.false255, %lor.lhs.false252, %if.end249
  %267 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2376
  %268 = bitcast %struct.AVCodecContext* %267 to i8*, !dbg !2376
  call void (i8*, i32, i8*, ...) @av_log(i8* %268, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i32 0, i32 0)), !dbg !2378
  store i32 -12, i32* %ret, align 4, !dbg !2379
  br label %fail, !dbg !2380

if.end259:                                        ; preds = %lor.lhs.false255
  %269 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2381
  %raw_buffer260 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %269, i32 0, i32 34, !dbg !2382
  %270 = load i32*, i32** %raw_buffer260, align 8, !dbg !2382
  %271 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2383
  %max_order261 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %271, i32 0, i32 10, !dbg !2384
  %272 = load i32, i32* %max_order261, align 8, !dbg !2384
  %idx.ext262 = sext i32 %272 to i64, !dbg !2385
  %add.ptr263 = getelementptr inbounds i32, i32* %270, i64 %idx.ext262, !dbg !2385
  %273 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2386
  %raw_samples264 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %273, i32 0, i32 33, !dbg !2387
  %274 = load i32**, i32*** %raw_samples264, align 8, !dbg !2387
  %arrayidx265 = getelementptr inbounds i32*, i32** %274, i64 0, !dbg !2386
  store i32* %add.ptr263, i32** %arrayidx265, align 8, !dbg !2388
  store i32 1, i32* %c, align 4, !dbg !2389
  br label %for.cond266, !dbg !2391

for.cond266:                                      ; preds = %for.inc279, %if.end259
  %275 = load i32, i32* %c, align 4, !dbg !2392
  %276 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2395
  %channels267 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %276, i32 0, i32 83, !dbg !2396
  %277 = load i32, i32* %channels267, align 4, !dbg !2396
  %cmp268 = icmp ult i32 %275, %277, !dbg !2397
  br i1 %cmp268, label %for.body270, label %for.end281, !dbg !2398

for.body270:                                      ; preds = %for.cond266
  %278 = load i32, i32* %c, align 4, !dbg !2399
  %sub = sub i32 %278, 1, !dbg !2400
  %idxprom271 = zext i32 %sub to i64, !dbg !2401
  %279 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2401
  %raw_samples272 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %279, i32 0, i32 33, !dbg !2402
  %280 = load i32**, i32*** %raw_samples272, align 8, !dbg !2402
  %arrayidx273 = getelementptr inbounds i32*, i32** %280, i64 %idxprom271, !dbg !2401
  %281 = load i32*, i32** %arrayidx273, align 8, !dbg !2401
  %282 = load i32, i32* %channel_size, align 4, !dbg !2403
  %idx.ext274 = zext i32 %282 to i64, !dbg !2404
  %add.ptr275 = getelementptr inbounds i32, i32* %281, i64 %idx.ext274, !dbg !2404
  %283 = load i32, i32* %c, align 4, !dbg !2405
  %idxprom276 = zext i32 %283 to i64, !dbg !2406
  %284 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2406
  %raw_samples277 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %284, i32 0, i32 33, !dbg !2407
  %285 = load i32**, i32*** %raw_samples277, align 8, !dbg !2407
  %arrayidx278 = getelementptr inbounds i32*, i32** %285, i64 %idxprom276, !dbg !2406
  store i32* %add.ptr275, i32** %arrayidx278, align 8, !dbg !2408
  br label %for.inc279, !dbg !2406

for.inc279:                                       ; preds = %for.body270
  %286 = load i32, i32* %c, align 4, !dbg !2409
  %inc280 = add i32 %286, 1, !dbg !2409
  store i32 %inc280, i32* %c, align 4, !dbg !2409
  br label %for.cond266, !dbg !2411, !llvm.loop !2412

for.end281:                                       ; preds = %for.cond266
  %287 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2414
  %msb_first = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %287, i32 0, i32 3, !dbg !2416
  %288 = load i32, i32* %msb_first, align 4, !dbg !2416
  %cmp282 = icmp ne i32 0, %288, !dbg !2417
  br i1 %cmp282, label %land.lhs.true, label %if.end300, !dbg !2418

land.lhs.true:                                    ; preds = %for.end281
  %289 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2419
  %crc_enabled = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %289, i32 0, i32 21, !dbg !2421
  %290 = load i32, i32* %crc_enabled, align 8, !dbg !2421
  %tobool284 = icmp ne i32 %290, 0, !dbg !2419
  br i1 %tobool284, label %land.lhs.true285, label %if.end300, !dbg !2422

land.lhs.true285:                                 ; preds = %land.lhs.true
  %291 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2423
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %291, i32 0, i32 135, !dbg !2424
  %292 = load i32, i32* %err_recognition, align 8, !dbg !2424
  %and = and i32 %292, 65537, !dbg !2425
  %tobool286 = icmp ne i32 %and, 0, !dbg !2425
  br i1 %tobool286, label %if.then287, label %if.end300, !dbg !2426

if.then287:                                       ; preds = %land.lhs.true285
  %293 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2427
  %cur_frame_length288 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %293, i32 0, i32 7, !dbg !2429
  %294 = load i32, i32* %cur_frame_length288, align 8, !dbg !2429
  %295 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2430
  %channels289 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %295, i32 0, i32 83, !dbg !2431
  %296 = load i32, i32* %channels289, align 4, !dbg !2431
  %mul290 = mul i32 %294, %296, !dbg !2432
  %297 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2433
  %sample_fmt291 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %297, i32 0, i32 84, !dbg !2434
  %298 = load i32, i32* %sample_fmt291, align 8, !dbg !2434
  %call292 = call i32 @av_get_bytes_per_sample(i32 %298), !dbg !2435
  %mul293 = mul i32 %mul290, %call292, !dbg !2436
  %conv294 = zext i32 %mul293 to i64, !dbg !2427
  %call295 = call i8* @av_malloc_array(i64 %conv294, i64 1), !dbg !2437
  %299 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2438
  %crc_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %299, i32 0, i32 35, !dbg !2439
  store i8* %call295, i8** %crc_buffer, align 8, !dbg !2440
  %300 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2441
  %crc_buffer296 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %300, i32 0, i32 35, !dbg !2443
  %301 = load i8*, i8** %crc_buffer296, align 8, !dbg !2443
  %tobool297 = icmp ne i8* %301, null, !dbg !2441
  br i1 %tobool297, label %if.end299, label %if.then298, !dbg !2444

if.then298:                                       ; preds = %if.then287
  %302 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2445
  %303 = bitcast %struct.AVCodecContext* %302 to i8*, !dbg !2445
  call void (i8*, i32, i8*, ...) @av_log(i8* %303, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i32 0, i32 0)), !dbg !2447
  store i32 -12, i32* %ret, align 4, !dbg !2448
  br label %fail, !dbg !2449

if.end299:                                        ; preds = %if.then287
  br label %if.end300, !dbg !2450

if.end300:                                        ; preds = %if.end299, %land.lhs.true285, %land.lhs.true, %for.end281
  %304 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2451
  %bdsp = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %304, i32 0, i32 3, !dbg !2452
  call void @ff_bswapdsp_init(%struct.BswapDSPContext* %bdsp), !dbg !2453
  store i32 0, i32* %retval, align 4, !dbg !2454
  br label %return, !dbg !2454

fail:                                             ; preds = %if.then298, %if.then258, %if.then231, %if.then156, %if.then122, %if.then66, %if.then24, %if.then13, %if.then7, %if.then3
  %305 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2455
  %call301 = call i32 @decode_end(%struct.AVCodecContext* %305), !dbg !2456
  %306 = load i32, i32* %ret, align 4, !dbg !2457
  store i32 %306, i32* %retval, align 4, !dbg !2458
  br label %return, !dbg !2458

return:                                           ; preds = %fail, %if.end300, %if.then
  %307 = load i32, i32* %retval, align 4, !dbg !2459
  ret i32 %307, !dbg !2459
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2460 {
entry:
  %x.addr.i264 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i264, metadata !2461, metadata !1692), !dbg !2466
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2478, metadata !1692), !dbg !2482
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %ctx = alloca %struct.ALSDecContext*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %sconf = alloca %struct.ALSSpecificConfig*, align 8
  %buffer = alloca i8*, align 8
  %buffer_size = alloca i32, align 4
  %invalid_frame = alloca i32, align 4
  %ret = alloca i32, align 4
  %c = alloca i32, align 4
  %sample = alloca i32, align 4
  %ra_frame = alloca i32, align 4
  %bytes_read = alloca i32, align 4
  %shift = alloca i32, align 4
  %dest = alloca i16*, align 8
  %dest96 = alloca i32*, align 8
  %swap = alloca i32, align 4
  %src = alloca i32*, align 8
  %v = alloca i32, align 4
  %crc_source = alloca i8*, align 8
  %src198 = alloca i16*, align 8
  %dest201 = alloca i16*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2489, metadata !1692), !dbg !2490
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2491, metadata !1692), !dbg !2492
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2493, metadata !1692), !dbg !2494
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2495, metadata !1692), !dbg !2496
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx, metadata !2497, metadata !1692), !dbg !2498
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2499
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2500
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2500
  %2 = bitcast i8* %1 to %struct.ALSDecContext*, !dbg !2499
  store %struct.ALSDecContext* %2, %struct.ALSDecContext** %ctx, align 8, !dbg !2498
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !2501, metadata !1692), !dbg !2502
  %3 = load i8*, i8** %data.addr, align 8, !dbg !2503
  %4 = bitcast i8* %3 to %struct.AVFrame*, !dbg !2503
  store %struct.AVFrame* %4, %struct.AVFrame** %frame, align 8, !dbg !2502
  call void @llvm.dbg.declare(metadata %struct.ALSSpecificConfig** %sconf, metadata !2504, metadata !1692), !dbg !2505
  %5 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2506
  %sconf1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %5, i32 0, i32 1, !dbg !2507
  store %struct.ALSSpecificConfig* %sconf1, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2505
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !2508, metadata !1692), !dbg !2509
  %6 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2510
  %data2 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %6, i32 0, i32 3, !dbg !2511
  %7 = load i8*, i8** %data2, align 8, !dbg !2511
  store i8* %7, i8** %buffer, align 8, !dbg !2509
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !2512, metadata !1692), !dbg !2513
  %8 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2514
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i32 0, i32 4, !dbg !2515
  %9 = load i32, i32* %size, align 8, !dbg !2515
  store i32 %9, i32* %buffer_size, align 4, !dbg !2513
  call void @llvm.dbg.declare(metadata i32* %invalid_frame, metadata !2516, metadata !1692), !dbg !2517
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2518, metadata !1692), !dbg !2519
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2520, metadata !1692), !dbg !2521
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !2522, metadata !1692), !dbg !2523
  call void @llvm.dbg.declare(metadata i32* %ra_frame, metadata !2524, metadata !1692), !dbg !2525
  call void @llvm.dbg.declare(metadata i32* %bytes_read, metadata !2526, metadata !1692), !dbg !2527
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !2528, metadata !1692), !dbg !2529
  %10 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2530
  %gb = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %10, i32 0, i32 2, !dbg !2532
  %11 = load i8*, i8** %buffer, align 8, !dbg !2533
  %12 = load i32, i32* %buffer_size, align 4, !dbg !2534
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %11, i32 %12), !dbg !2535
  store i32 %call, i32* %ret, align 4, !dbg !2536
  %cmp = icmp slt i32 %call, 0, !dbg !2537
  br i1 %cmp, label %if.then, label %if.end, !dbg !2538

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %ret, align 4, !dbg !2539
  store i32 %13, i32* %retval, align 4, !dbg !2540
  br label %return, !dbg !2540

if.end:                                           ; preds = %entry
  %14 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2541
  %ra_distance = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %14, i32 0, i32 5, !dbg !2542
  %15 = load i32, i32* %ra_distance, align 4, !dbg !2542
  %tobool = icmp ne i32 %15, 0, !dbg !2541
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2543

land.rhs:                                         ; preds = %if.end
  %16 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2544
  %frame_id = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %16, i32 0, i32 8, !dbg !2546
  %17 = load i32, i32* %frame_id, align 4, !dbg !2546
  %18 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2547
  %ra_distance3 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %18, i32 0, i32 5, !dbg !2548
  %19 = load i32, i32* %ra_distance3, align 4, !dbg !2548
  %rem = urem i32 %17, %19, !dbg !2549
  %tobool4 = icmp ne i32 %rem, 0, !dbg !2550
  %lnot = xor i1 %tobool4, true, !dbg !2550
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %20 = phi i1 [ false, %if.end ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %20 to i32, !dbg !2551
  store i32 %land.ext, i32* %ra_frame, align 4, !dbg !2553
  %21 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2554
  %samples = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %21, i32 0, i32 0, !dbg !2556
  %22 = load i32, i32* %samples, align 8, !dbg !2556
  %cmp5 = icmp ne i32 %22, -1, !dbg !2557
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !2558

if.then6:                                         ; preds = %land.end
  %23 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2559
  %samples7 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %23, i32 0, i32 0, !dbg !2560
  %24 = load i32, i32* %samples7, align 8, !dbg !2560
  %conv = zext i32 %24 to i64, !dbg !2559
  %25 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2561
  %frame_id8 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %25, i32 0, i32 8, !dbg !2562
  %26 = load i32, i32* %frame_id8, align 4, !dbg !2562
  %conv9 = zext i32 %26 to i64, !dbg !2561
  %27 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2563
  %frame_length = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %27, i32 0, i32 4, !dbg !2564
  %28 = load i32, i32* %frame_length, align 8, !dbg !2564
  %conv10 = sext i32 %28 to i64, !dbg !2565
  %mul = mul i64 %conv9, %conv10, !dbg !2566
  %sub = sub i64 %conv, %mul, !dbg !2567
  %29 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2568
  %frame_length11 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %29, i32 0, i32 4, !dbg !2569
  %30 = load i32, i32* %frame_length11, align 8, !dbg !2569
  %conv12 = sext i32 %30 to i64, !dbg !2570
  %cmp13 = icmp ugt i64 %sub, %conv12, !dbg !2571
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !2572

cond.true:                                        ; preds = %if.then6
  %31 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2573
  %frame_length15 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %31, i32 0, i32 4, !dbg !2575
  %32 = load i32, i32* %frame_length15, align 8, !dbg !2575
  %conv16 = sext i32 %32 to i64, !dbg !2576
  br label %cond.end, !dbg !2577

cond.false:                                       ; preds = %if.then6
  %33 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2578
  %samples17 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %33, i32 0, i32 0, !dbg !2580
  %34 = load i32, i32* %samples17, align 8, !dbg !2580
  %conv18 = zext i32 %34 to i64, !dbg !2578
  %35 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2581
  %frame_id19 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %35, i32 0, i32 8, !dbg !2582
  %36 = load i32, i32* %frame_id19, align 4, !dbg !2582
  %conv20 = zext i32 %36 to i64, !dbg !2581
  %37 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2583
  %frame_length21 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %37, i32 0, i32 4, !dbg !2584
  %38 = load i32, i32* %frame_length21, align 8, !dbg !2584
  %conv22 = sext i32 %38 to i64, !dbg !2585
  %mul23 = mul i64 %conv20, %conv22, !dbg !2586
  %sub24 = sub i64 %conv18, %mul23, !dbg !2587
  br label %cond.end, !dbg !2588

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv16, %cond.true ], [ %sub24, %cond.false ], !dbg !2589
  %conv25 = trunc i64 %cond to i32, !dbg !2591
  %39 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2592
  %cur_frame_length = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %39, i32 0, i32 7, !dbg !2593
  store i32 %conv25, i32* %cur_frame_length, align 8, !dbg !2594
  br label %if.end28, !dbg !2592

if.else:                                          ; preds = %land.end
  %40 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2595
  %frame_length26 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %40, i32 0, i32 4, !dbg !2596
  %41 = load i32, i32* %frame_length26, align 8, !dbg !2596
  %42 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2597
  %cur_frame_length27 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %42, i32 0, i32 7, !dbg !2598
  store i32 %41, i32* %cur_frame_length27, align 8, !dbg !2599
  br label %if.end28

if.end28:                                         ; preds = %if.else, %cond.end
  %43 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2600
  %44 = load i32, i32* %ra_frame, align 4, !dbg !2602
  %call29 = call i32 @read_frame_data(%struct.ALSDecContext* %43, i32 %44), !dbg !2603
  store i32 %call29, i32* %invalid_frame, align 4, !dbg !2604
  %cmp30 = icmp slt i32 %call29, 0, !dbg !2605
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !2606

if.then32:                                        ; preds = %if.end28
  %45 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2607
  %avctx33 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %45, i32 0, i32 0, !dbg !2608
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx33, align 8, !dbg !2608
  %47 = bitcast %struct.AVCodecContext* %46 to i8*, !dbg !2607
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 24, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8, i32 0, i32 0)), !dbg !2609
  br label %if.end34, !dbg !2609

if.end34:                                         ; preds = %if.then32, %if.end28
  %48 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2610
  %frame_id35 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %48, i32 0, i32 8, !dbg !2611
  %49 = load i32, i32* %frame_id35, align 4, !dbg !2612
  %inc = add i32 %49, 1, !dbg !2612
  store i32 %inc, i32* %frame_id35, align 4, !dbg !2612
  %50 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2613
  %cur_frame_length36 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %50, i32 0, i32 7, !dbg !2614
  %51 = load i32, i32* %cur_frame_length36, align 8, !dbg !2614
  %52 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2615
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %52, i32 0, i32 5, !dbg !2616
  store i32 %51, i32* %nb_samples, align 8, !dbg !2617
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2618
  %54 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2620
  %call37 = call i32 @ff_get_buffer(%struct.AVCodecContext* %53, %struct.AVFrame* %54, i32 0), !dbg !2621
  store i32 %call37, i32* %ret, align 4, !dbg !2622
  %cmp38 = icmp slt i32 %call37, 0, !dbg !2623
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !2624

if.then40:                                        ; preds = %if.end34
  %55 = load i32, i32* %ret, align 4, !dbg !2625
  store i32 %55, i32* %retval, align 4, !dbg !2626
  br label %return, !dbg !2626

if.end41:                                         ; preds = %if.end34
  %56 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2627
  %avctx42 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %56, i32 0, i32 0, !dbg !2629
  %57 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx42, align 8, !dbg !2629
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %57, i32 0, i32 143, !dbg !2630
  %58 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !2630
  %cmp43 = icmp sle i32 %58, 16, !dbg !2631
  br i1 %cmp43, label %if.then45, label %if.else95, !dbg !2632

if.then45:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata i16** %dest, metadata !2633, metadata !1692), !dbg !2636
  %59 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2637
  %data46 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %59, i32 0, i32 0, !dbg !2638
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data46, i64 0, i64 0, !dbg !2637
  %60 = load i8*, i8** %arrayidx, align 8, !dbg !2637
  %61 = bitcast i8* %60 to i16*, !dbg !2639
  store i16* %61, i16** %dest, align 8, !dbg !2636
  %62 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2640
  %avctx47 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %62, i32 0, i32 0, !dbg !2641
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx47, align 8, !dbg !2641
  %bits_per_raw_sample48 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %63, i32 0, i32 143, !dbg !2642
  %64 = load i32, i32* %bits_per_raw_sample48, align 4, !dbg !2642
  %sub49 = sub nsw i32 16, %64, !dbg !2643
  store i32 %sub49, i32* %shift, align 4, !dbg !2644
  %65 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2645
  %cs_switch = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %65, i32 0, i32 10, !dbg !2647
  %66 = load i32, i32* %cs_switch, align 4, !dbg !2647
  %tobool50 = icmp ne i32 %66, 0, !dbg !2645
  br i1 %tobool50, label %if.else67, label %if.then51, !dbg !2648

if.then51:                                        ; preds = %if.then45
  store i32 0, i32* %sample, align 4, !dbg !2649
  br label %for.cond, !dbg !2653

for.cond:                                         ; preds = %for.inc64, %if.then51
  %67 = load i32, i32* %sample, align 4, !dbg !2654
  %68 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2657
  %cur_frame_length52 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %68, i32 0, i32 7, !dbg !2658
  %69 = load i32, i32* %cur_frame_length52, align 8, !dbg !2658
  %cmp53 = icmp ult i32 %67, %69, !dbg !2659
  br i1 %cmp53, label %for.body, label %for.end66, !dbg !2660

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %c, align 4, !dbg !2661
  br label %for.cond55, !dbg !2664

for.cond55:                                       ; preds = %for.inc, %for.body
  %70 = load i32, i32* %c, align 4, !dbg !2665
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2668
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %71, i32 0, i32 83, !dbg !2669
  %72 = load i32, i32* %channels, align 4, !dbg !2669
  %cmp56 = icmp ult i32 %70, %72, !dbg !2670
  br i1 %cmp56, label %for.body58, label %for.end, !dbg !2671

for.body58:                                       ; preds = %for.cond55
  %73 = load i32, i32* %sample, align 4, !dbg !2672
  %idxprom = zext i32 %73 to i64, !dbg !2674
  %74 = load i32, i32* %c, align 4, !dbg !2675
  %idxprom59 = zext i32 %74 to i64, !dbg !2674
  %75 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2674
  %raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %75, i32 0, i32 33, !dbg !2676
  %76 = load i32**, i32*** %raw_samples, align 8, !dbg !2676
  %arrayidx60 = getelementptr inbounds i32*, i32** %76, i64 %idxprom59, !dbg !2674
  %77 = load i32*, i32** %arrayidx60, align 8, !dbg !2674
  %arrayidx61 = getelementptr inbounds i32, i32* %77, i64 %idxprom, !dbg !2674
  %78 = load i32, i32* %arrayidx61, align 4, !dbg !2674
  %79 = load i32, i32* %shift, align 4, !dbg !2677
  %shl = shl i32 %78, %79, !dbg !2678
  %conv62 = trunc i32 %shl to i16, !dbg !2674
  %80 = load i16*, i16** %dest, align 8, !dbg !2679
  %incdec.ptr = getelementptr inbounds i16, i16* %80, i32 1, !dbg !2679
  store i16* %incdec.ptr, i16** %dest, align 8, !dbg !2679
  store i16 %conv62, i16* %80, align 2, !dbg !2680
  br label %for.inc, !dbg !2681

for.inc:                                          ; preds = %for.body58
  %81 = load i32, i32* %c, align 4, !dbg !2682
  %inc63 = add i32 %81, 1, !dbg !2682
  store i32 %inc63, i32* %c, align 4, !dbg !2682
  br label %for.cond55, !dbg !2684, !llvm.loop !2685

for.end:                                          ; preds = %for.cond55
  br label %for.inc64, !dbg !2687

for.inc64:                                        ; preds = %for.end
  %82 = load i32, i32* %sample, align 4, !dbg !2689
  %inc65 = add i32 %82, 1, !dbg !2689
  store i32 %inc65, i32* %sample, align 4, !dbg !2689
  br label %for.cond, !dbg !2691, !llvm.loop !2692

for.end66:                                        ; preds = %for.cond
  br label %if.end94, !dbg !2694

if.else67:                                        ; preds = %if.then45
  store i32 0, i32* %sample, align 4, !dbg !2696
  br label %for.cond68, !dbg !2700

for.cond68:                                       ; preds = %for.inc91, %if.else67
  %83 = load i32, i32* %sample, align 4, !dbg !2701
  %84 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2704
  %cur_frame_length69 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %84, i32 0, i32 7, !dbg !2705
  %85 = load i32, i32* %cur_frame_length69, align 8, !dbg !2705
  %cmp70 = icmp ult i32 %83, %85, !dbg !2706
  br i1 %cmp70, label %for.body72, label %for.end93, !dbg !2707

for.body72:                                       ; preds = %for.cond68
  store i32 0, i32* %c, align 4, !dbg !2708
  br label %for.cond73, !dbg !2711

for.cond73:                                       ; preds = %for.inc88, %for.body72
  %86 = load i32, i32* %c, align 4, !dbg !2712
  %87 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2715
  %channels74 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %87, i32 0, i32 83, !dbg !2716
  %88 = load i32, i32* %channels74, align 4, !dbg !2716
  %cmp75 = icmp ult i32 %86, %88, !dbg !2717
  br i1 %cmp75, label %for.body77, label %for.end90, !dbg !2718

for.body77:                                       ; preds = %for.cond73
  %89 = load i32, i32* %sample, align 4, !dbg !2719
  %idxprom78 = zext i32 %89 to i64, !dbg !2721
  %90 = load i32, i32* %c, align 4, !dbg !2722
  %idxprom79 = zext i32 %90 to i64, !dbg !2723
  %91 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2723
  %chan_pos = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %91, i32 0, i32 20, !dbg !2724
  %92 = load i32*, i32** %chan_pos, align 8, !dbg !2724
  %arrayidx80 = getelementptr inbounds i32, i32* %92, i64 %idxprom79, !dbg !2723
  %93 = load i32, i32* %arrayidx80, align 4, !dbg !2723
  %idxprom81 = sext i32 %93 to i64, !dbg !2721
  %94 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2721
  %raw_samples82 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %94, i32 0, i32 33, !dbg !2725
  %95 = load i32**, i32*** %raw_samples82, align 8, !dbg !2725
  %arrayidx83 = getelementptr inbounds i32*, i32** %95, i64 %idxprom81, !dbg !2721
  %96 = load i32*, i32** %arrayidx83, align 8, !dbg !2721
  %arrayidx84 = getelementptr inbounds i32, i32* %96, i64 %idxprom78, !dbg !2721
  %97 = load i32, i32* %arrayidx84, align 4, !dbg !2721
  %98 = load i32, i32* %shift, align 4, !dbg !2726
  %shl85 = shl i32 %97, %98, !dbg !2727
  %conv86 = trunc i32 %shl85 to i16, !dbg !2721
  %99 = load i16*, i16** %dest, align 8, !dbg !2728
  %incdec.ptr87 = getelementptr inbounds i16, i16* %99, i32 1, !dbg !2728
  store i16* %incdec.ptr87, i16** %dest, align 8, !dbg !2728
  store i16 %conv86, i16* %99, align 2, !dbg !2729
  br label %for.inc88, !dbg !2730

for.inc88:                                        ; preds = %for.body77
  %100 = load i32, i32* %c, align 4, !dbg !2731
  %inc89 = add i32 %100, 1, !dbg !2731
  store i32 %inc89, i32* %c, align 4, !dbg !2731
  br label %for.cond73, !dbg !2733, !llvm.loop !2734

for.end90:                                        ; preds = %for.cond73
  br label %for.inc91, !dbg !2736

for.inc91:                                        ; preds = %for.end90
  %101 = load i32, i32* %sample, align 4, !dbg !2738
  %inc92 = add i32 %101, 1, !dbg !2738
  store i32 %inc92, i32* %sample, align 4, !dbg !2738
  br label %for.cond68, !dbg !2740, !llvm.loop !2741

for.end93:                                        ; preds = %for.cond68
  br label %if.end94

if.end94:                                         ; preds = %for.end93, %for.end66
  br label %if.end156, !dbg !2743

if.else95:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata i32** %dest96, metadata !2744, metadata !1692), !dbg !2747
  %102 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2748
  %data97 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %102, i32 0, i32 0, !dbg !2749
  %arrayidx98 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data97, i64 0, i64 0, !dbg !2748
  %103 = load i8*, i8** %arrayidx98, align 8, !dbg !2748
  %104 = bitcast i8* %103 to i32*, !dbg !2750
  store i32* %104, i32** %dest96, align 8, !dbg !2747
  %105 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2751
  %avctx99 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %105, i32 0, i32 0, !dbg !2752
  %106 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx99, align 8, !dbg !2752
  %bits_per_raw_sample100 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %106, i32 0, i32 143, !dbg !2753
  %107 = load i32, i32* %bits_per_raw_sample100, align 4, !dbg !2753
  %sub101 = sub nsw i32 32, %107, !dbg !2754
  store i32 %sub101, i32* %shift, align 4, !dbg !2755
  %108 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2756
  %cs_switch102 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %108, i32 0, i32 10, !dbg !2758
  %109 = load i32, i32* %cs_switch102, align 4, !dbg !2758
  %tobool103 = icmp ne i32 %109, 0, !dbg !2756
  br i1 %tobool103, label %if.else128, label %if.then104, !dbg !2759

if.then104:                                       ; preds = %if.else95
  store i32 0, i32* %sample, align 4, !dbg !2760
  br label %for.cond105, !dbg !2764

for.cond105:                                      ; preds = %for.inc125, %if.then104
  %110 = load i32, i32* %sample, align 4, !dbg !2765
  %111 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2768
  %cur_frame_length106 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %111, i32 0, i32 7, !dbg !2769
  %112 = load i32, i32* %cur_frame_length106, align 8, !dbg !2769
  %cmp107 = icmp ult i32 %110, %112, !dbg !2770
  br i1 %cmp107, label %for.body109, label %for.end127, !dbg !2771

for.body109:                                      ; preds = %for.cond105
  store i32 0, i32* %c, align 4, !dbg !2772
  br label %for.cond110, !dbg !2775

for.cond110:                                      ; preds = %for.inc122, %for.body109
  %113 = load i32, i32* %c, align 4, !dbg !2776
  %114 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2779
  %channels111 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %114, i32 0, i32 83, !dbg !2780
  %115 = load i32, i32* %channels111, align 4, !dbg !2780
  %cmp112 = icmp ult i32 %113, %115, !dbg !2781
  br i1 %cmp112, label %for.body114, label %for.end124, !dbg !2782

for.body114:                                      ; preds = %for.cond110
  %116 = load i32, i32* %sample, align 4, !dbg !2783
  %idxprom115 = zext i32 %116 to i64, !dbg !2785
  %117 = load i32, i32* %c, align 4, !dbg !2786
  %idxprom116 = zext i32 %117 to i64, !dbg !2785
  %118 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2785
  %raw_samples117 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %118, i32 0, i32 33, !dbg !2787
  %119 = load i32**, i32*** %raw_samples117, align 8, !dbg !2787
  %arrayidx118 = getelementptr inbounds i32*, i32** %119, i64 %idxprom116, !dbg !2785
  %120 = load i32*, i32** %arrayidx118, align 8, !dbg !2785
  %arrayidx119 = getelementptr inbounds i32, i32* %120, i64 %idxprom115, !dbg !2785
  %121 = load i32, i32* %arrayidx119, align 4, !dbg !2785
  %122 = load i32, i32* %shift, align 4, !dbg !2788
  %shl120 = shl i32 %121, %122, !dbg !2789
  %123 = load i32*, i32** %dest96, align 8, !dbg !2790
  %incdec.ptr121 = getelementptr inbounds i32, i32* %123, i32 1, !dbg !2790
  store i32* %incdec.ptr121, i32** %dest96, align 8, !dbg !2790
  store i32 %shl120, i32* %123, align 4, !dbg !2791
  br label %for.inc122, !dbg !2792

for.inc122:                                       ; preds = %for.body114
  %124 = load i32, i32* %c, align 4, !dbg !2793
  %inc123 = add i32 %124, 1, !dbg !2793
  store i32 %inc123, i32* %c, align 4, !dbg !2793
  br label %for.cond110, !dbg !2795, !llvm.loop !2796

for.end124:                                       ; preds = %for.cond110
  br label %for.inc125, !dbg !2798

for.inc125:                                       ; preds = %for.end124
  %125 = load i32, i32* %sample, align 4, !dbg !2800
  %inc126 = add i32 %125, 1, !dbg !2800
  store i32 %inc126, i32* %sample, align 4, !dbg !2800
  br label %for.cond105, !dbg !2802, !llvm.loop !2803

for.end127:                                       ; preds = %for.cond105
  br label %if.end155, !dbg !2805

if.else128:                                       ; preds = %if.else95
  store i32 0, i32* %sample, align 4, !dbg !2807
  br label %for.cond129, !dbg !2811

for.cond129:                                      ; preds = %for.inc152, %if.else128
  %126 = load i32, i32* %sample, align 4, !dbg !2812
  %127 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2815
  %cur_frame_length130 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %127, i32 0, i32 7, !dbg !2816
  %128 = load i32, i32* %cur_frame_length130, align 8, !dbg !2816
  %cmp131 = icmp ult i32 %126, %128, !dbg !2817
  br i1 %cmp131, label %for.body133, label %for.end154, !dbg !2818

for.body133:                                      ; preds = %for.cond129
  store i32 0, i32* %c, align 4, !dbg !2819
  br label %for.cond134, !dbg !2822

for.cond134:                                      ; preds = %for.inc149, %for.body133
  %129 = load i32, i32* %c, align 4, !dbg !2823
  %130 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2826
  %channels135 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %130, i32 0, i32 83, !dbg !2827
  %131 = load i32, i32* %channels135, align 4, !dbg !2827
  %cmp136 = icmp ult i32 %129, %131, !dbg !2828
  br i1 %cmp136, label %for.body138, label %for.end151, !dbg !2829

for.body138:                                      ; preds = %for.cond134
  %132 = load i32, i32* %sample, align 4, !dbg !2830
  %idxprom139 = zext i32 %132 to i64, !dbg !2832
  %133 = load i32, i32* %c, align 4, !dbg !2833
  %idxprom140 = zext i32 %133 to i64, !dbg !2834
  %134 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2834
  %chan_pos141 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %134, i32 0, i32 20, !dbg !2835
  %135 = load i32*, i32** %chan_pos141, align 8, !dbg !2835
  %arrayidx142 = getelementptr inbounds i32, i32* %135, i64 %idxprom140, !dbg !2834
  %136 = load i32, i32* %arrayidx142, align 4, !dbg !2834
  %idxprom143 = sext i32 %136 to i64, !dbg !2832
  %137 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2832
  %raw_samples144 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %137, i32 0, i32 33, !dbg !2836
  %138 = load i32**, i32*** %raw_samples144, align 8, !dbg !2836
  %arrayidx145 = getelementptr inbounds i32*, i32** %138, i64 %idxprom143, !dbg !2832
  %139 = load i32*, i32** %arrayidx145, align 8, !dbg !2832
  %arrayidx146 = getelementptr inbounds i32, i32* %139, i64 %idxprom139, !dbg !2832
  %140 = load i32, i32* %arrayidx146, align 4, !dbg !2832
  %141 = load i32, i32* %shift, align 4, !dbg !2837
  %shl147 = shl i32 %140, %141, !dbg !2838
  %142 = load i32*, i32** %dest96, align 8, !dbg !2839
  %incdec.ptr148 = getelementptr inbounds i32, i32* %142, i32 1, !dbg !2839
  store i32* %incdec.ptr148, i32** %dest96, align 8, !dbg !2839
  store i32 %shl147, i32* %142, align 4, !dbg !2840
  br label %for.inc149, !dbg !2841

for.inc149:                                       ; preds = %for.body138
  %143 = load i32, i32* %c, align 4, !dbg !2842
  %inc150 = add i32 %143, 1, !dbg !2842
  store i32 %inc150, i32* %c, align 4, !dbg !2842
  br label %for.cond134, !dbg !2844, !llvm.loop !2845

for.end151:                                       ; preds = %for.cond134
  br label %for.inc152, !dbg !2847

for.inc152:                                       ; preds = %for.end151
  %144 = load i32, i32* %sample, align 4, !dbg !2849
  %inc153 = add i32 %144, 1, !dbg !2849
  store i32 %inc153, i32* %sample, align 4, !dbg !2849
  br label %for.cond129, !dbg !2851, !llvm.loop !2852

for.end154:                                       ; preds = %for.cond129
  br label %if.end155

if.end155:                                        ; preds = %for.end154, %for.end127
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.end94
  %145 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2854
  %crc_enabled = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %145, i32 0, i32 21, !dbg !2855
  %146 = load i32, i32* %crc_enabled, align 8, !dbg !2855
  %tobool157 = icmp ne i32 %146, 0, !dbg !2854
  br i1 %tobool157, label %land.lhs.true, label %if.end255, !dbg !2856

land.lhs.true:                                    ; preds = %if.end156
  %147 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2857
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %147, i32 0, i32 135, !dbg !2859
  %148 = load i32, i32* %err_recognition, align 8, !dbg !2859
  %and = and i32 %148, 65537, !dbg !2860
  %tobool158 = icmp ne i32 %and, 0, !dbg !2860
  br i1 %tobool158, label %if.then159, label %if.end255, !dbg !2861

if.then159:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %swap, metadata !2862, metadata !1692), !dbg !2863
  %149 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !2864
  %msb_first = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %149, i32 0, i32 3, !dbg !2865
  %150 = load i32, i32* %msb_first, align 4, !dbg !2865
  %cmp160 = icmp ne i32 0, %150, !dbg !2866
  %conv161 = zext i1 %cmp160 to i32, !dbg !2866
  store i32 %conv161, i32* %swap, align 4, !dbg !2863
  %151 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2867
  %avctx162 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %151, i32 0, i32 0, !dbg !2868
  %152 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx162, align 8, !dbg !2868
  %bits_per_raw_sample163 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %152, i32 0, i32 143, !dbg !2869
  %153 = load i32, i32* %bits_per_raw_sample163, align 4, !dbg !2869
  %cmp164 = icmp eq i32 %153, 24, !dbg !2870
  br i1 %cmp164, label %if.then166, label %if.else190, !dbg !2871

if.then166:                                       ; preds = %if.then159
  call void @llvm.dbg.declare(metadata i32** %src, metadata !2872, metadata !1692), !dbg !2873
  %154 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2874
  %data167 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %154, i32 0, i32 0, !dbg !2875
  %arrayidx168 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data167, i64 0, i64 0, !dbg !2874
  %155 = load i8*, i8** %arrayidx168, align 8, !dbg !2874
  %156 = bitcast i8* %155 to i32*, !dbg !2876
  store i32* %156, i32** %src, align 8, !dbg !2873
  store i32 0, i32* %sample, align 4, !dbg !2877
  br label %for.cond169, !dbg !2878

for.cond169:                                      ; preds = %for.inc187, %if.then166
  %157 = load i32, i32* %sample, align 4, !dbg !2879
  %158 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2880
  %cur_frame_length170 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %158, i32 0, i32 7, !dbg !2881
  %159 = load i32, i32* %cur_frame_length170, align 8, !dbg !2881
  %160 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2882
  %channels171 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %160, i32 0, i32 83, !dbg !2883
  %161 = load i32, i32* %channels171, align 4, !dbg !2883
  %mul172 = mul i32 %159, %161, !dbg !2884
  %cmp173 = icmp ult i32 %157, %mul172, !dbg !2885
  br i1 %cmp173, label %for.body175, label %for.end189, !dbg !2886

for.body175:                                      ; preds = %for.cond169
  call void @llvm.dbg.declare(metadata i32* %v, metadata !2888, metadata !1692), !dbg !2889
  %162 = load i32, i32* %swap, align 4, !dbg !2890
  %tobool176 = icmp ne i32 %162, 0, !dbg !2890
  br i1 %tobool176, label %if.then177, label %if.else181, !dbg !2891

if.then177:                                       ; preds = %for.body175
  %163 = load i32, i32* %sample, align 4, !dbg !2892
  %idxprom178 = zext i32 %163 to i64, !dbg !2893
  %164 = load i32*, i32** %src, align 8, !dbg !2893
  %arrayidx179 = getelementptr inbounds i32, i32* %164, i64 %idxprom178, !dbg !2893
  %165 = load i32, i32* %arrayidx179, align 4, !dbg !2893
  store i32 %165, i32* %x.addr.i, align 4, !dbg !2894
  %166 = load i32, i32* %x.addr.i, align 4, !dbg !2895
  %shl.i = shl i32 %166, 8, !dbg !2896
  %and.i = and i32 %shl.i, 65280, !dbg !2897
  %167 = load i32, i32* %x.addr.i, align 4, !dbg !2898
  %shr.i = lshr i32 %167, 8, !dbg !2899
  %and1.i = and i32 %shr.i, 255, !dbg !2900
  %or.i = or i32 %and.i, %and1.i, !dbg !2901
  %shl2.i = shl i32 %or.i, 16, !dbg !2902
  %168 = load i32, i32* %x.addr.i, align 4, !dbg !2903
  %shr3.i = lshr i32 %168, 16, !dbg !2904
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2905
  %and5.i = and i32 %shl4.i, 65280, !dbg !2906
  %169 = load i32, i32* %x.addr.i, align 4, !dbg !2907
  %shr6.i = lshr i32 %169, 16, !dbg !2908
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2909
  %and8.i = and i32 %shr7.i, 255, !dbg !2910
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2911
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2912
  store i32 %or10.i, i32* %v, align 4, !dbg !2913
  br label %if.end184, !dbg !2914

if.else181:                                       ; preds = %for.body175
  %170 = load i32, i32* %sample, align 4, !dbg !2915
  %idxprom182 = zext i32 %170 to i64, !dbg !2916
  %171 = load i32*, i32** %src, align 8, !dbg !2916
  %arrayidx183 = getelementptr inbounds i32, i32* %171, i64 %idxprom182, !dbg !2916
  %172 = load i32, i32* %arrayidx183, align 4, !dbg !2916
  store i32 %172, i32* %v, align 4, !dbg !2917
  br label %if.end184

if.end184:                                        ; preds = %if.else181, %if.then177
  %173 = load i32, i32* %v, align 4, !dbg !2918
  %shr = ashr i32 %173, 8, !dbg !2918
  store i32 %shr, i32* %v, align 4, !dbg !2918
  %174 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2920
  %crc_table = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %174, i32 0, i32 4, !dbg !2921
  %175 = load i32*, i32** %crc_table, align 8, !dbg !2921
  %176 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2922
  %crc = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %176, i32 0, i32 6, !dbg !2923
  %177 = load i32, i32* %crc, align 4, !dbg !2923
  %178 = bitcast i32* %v to i8*, !dbg !2924
  %call185 = call i32 @av_crc(i32* %175, i32 %177, i8* %178, i64 3) #9, !dbg !2925
  %179 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2926
  %crc186 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %179, i32 0, i32 6, !dbg !2927
  store i32 %call185, i32* %crc186, align 4, !dbg !2928
  br label %for.inc187, !dbg !2929

for.inc187:                                       ; preds = %if.end184
  %180 = load i32, i32* %sample, align 4, !dbg !2930
  %inc188 = add i32 %180, 1, !dbg !2930
  store i32 %inc188, i32* %sample, align 4, !dbg !2930
  br label %for.cond169, !dbg !2931, !llvm.loop !2933

for.end189:                                       ; preds = %for.cond169
  br label %if.end239, !dbg !2935

if.else190:                                       ; preds = %if.then159
  call void @llvm.dbg.declare(metadata i8** %crc_source, metadata !2936, metadata !1692), !dbg !2937
  %181 = load i32, i32* %swap, align 4, !dbg !2938
  %tobool191 = icmp ne i32 %181, 0, !dbg !2938
  br i1 %tobool191, label %if.then192, label %if.else225, !dbg !2939

if.then192:                                       ; preds = %if.else190
  %182 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2940
  %avctx193 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %182, i32 0, i32 0, !dbg !2941
  %183 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx193, align 8, !dbg !2941
  %bits_per_raw_sample194 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %183, i32 0, i32 143, !dbg !2942
  %184 = load i32, i32* %bits_per_raw_sample194, align 4, !dbg !2942
  %cmp195 = icmp sle i32 %184, 16, !dbg !2943
  br i1 %cmp195, label %if.then197, label %if.else216, !dbg !2944

if.then197:                                       ; preds = %if.then192
  call void @llvm.dbg.declare(metadata i16** %src198, metadata !2945, metadata !1692), !dbg !2946
  %185 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2947
  %data199 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %185, i32 0, i32 0, !dbg !2948
  %arrayidx200 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data199, i64 0, i64 0, !dbg !2947
  %186 = load i8*, i8** %arrayidx200, align 8, !dbg !2947
  %187 = bitcast i8* %186 to i16*, !dbg !2949
  store i16* %187, i16** %src198, align 8, !dbg !2946
  call void @llvm.dbg.declare(metadata i16** %dest201, metadata !2950, metadata !1692), !dbg !2951
  %188 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2952
  %crc_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %188, i32 0, i32 35, !dbg !2953
  %189 = load i8*, i8** %crc_buffer, align 8, !dbg !2953
  %190 = bitcast i8* %189 to i16*, !dbg !2954
  store i16* %190, i16** %dest201, align 8, !dbg !2951
  store i32 0, i32* %sample, align 4, !dbg !2955
  br label %for.cond202, !dbg !2956

for.cond202:                                      ; preds = %for.inc213, %if.then197
  %191 = load i32, i32* %sample, align 4, !dbg !2957
  %192 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2958
  %cur_frame_length203 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %192, i32 0, i32 7, !dbg !2959
  %193 = load i32, i32* %cur_frame_length203, align 8, !dbg !2959
  %194 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2960
  %channels204 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %194, i32 0, i32 83, !dbg !2961
  %195 = load i32, i32* %channels204, align 4, !dbg !2961
  %mul205 = mul i32 %193, %195, !dbg !2962
  %cmp206 = icmp ult i32 %191, %mul205, !dbg !2963
  br i1 %cmp206, label %for.body208, label %for.end215, !dbg !2964

for.body208:                                      ; preds = %for.cond202
  %196 = load i32, i32* %sample, align 4, !dbg !2966
  %idxprom209 = zext i32 %196 to i64, !dbg !2967
  %197 = load i16*, i16** %src198, align 8, !dbg !2967
  %arrayidx210 = getelementptr inbounds i16, i16* %197, i64 %idxprom209, !dbg !2967
  %198 = load i16, i16* %arrayidx210, align 2, !dbg !2967
  store i16 %198, i16* %x.addr.i264, align 2, !dbg !2968
  %199 = load i16, i16* %x.addr.i264, align 2, !dbg !2969
  %conv.i = zext i16 %199 to i32, !dbg !2969
  %shr.i265 = ashr i32 %conv.i, 8, !dbg !2970
  %200 = load i16, i16* %x.addr.i264, align 2, !dbg !2971
  %conv1.i = zext i16 %200 to i32, !dbg !2971
  %shl.i266 = shl i32 %conv1.i, 8, !dbg !2972
  %or.i267 = or i32 %shr.i265, %shl.i266, !dbg !2973
  %conv2.i = trunc i32 %or.i267 to i16, !dbg !2974
  store i16 %conv2.i, i16* %x.addr.i264, align 2, !dbg !2975
  %201 = load i16, i16* %x.addr.i264, align 2, !dbg !2976
  %202 = load i16*, i16** %dest201, align 8, !dbg !2977
  %incdec.ptr212 = getelementptr inbounds i16, i16* %202, i32 1, !dbg !2977
  store i16* %incdec.ptr212, i16** %dest201, align 8, !dbg !2977
  store i16 %201, i16* %202, align 2, !dbg !2978
  br label %for.inc213, !dbg !2979

for.inc213:                                       ; preds = %for.body208
  %203 = load i32, i32* %sample, align 4, !dbg !2980
  %inc214 = add i32 %203, 1, !dbg !2980
  store i32 %inc214, i32* %sample, align 4, !dbg !2980
  br label %for.cond202, !dbg !2981, !llvm.loop !2983

for.end215:                                       ; preds = %for.cond202
  br label %if.end223, !dbg !2985

if.else216:                                       ; preds = %if.then192
  %204 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2986
  %bdsp = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %204, i32 0, i32 3, !dbg !2988
  %bswap_buf = getelementptr inbounds %struct.BswapDSPContext, %struct.BswapDSPContext* %bdsp, i32 0, i32 0, !dbg !2989
  %205 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** %bswap_buf, align 8, !dbg !2989
  %206 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2990
  %crc_buffer217 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %206, i32 0, i32 35, !dbg !2991
  %207 = load i8*, i8** %crc_buffer217, align 8, !dbg !2991
  %208 = bitcast i8* %207 to i32*, !dbg !2992
  %209 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2993
  %data218 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %209, i32 0, i32 0, !dbg !2994
  %arrayidx219 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data218, i64 0, i64 0, !dbg !2993
  %210 = load i8*, i8** %arrayidx219, align 8, !dbg !2993
  %211 = bitcast i8* %210 to i32*, !dbg !2995
  %212 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !2996
  %cur_frame_length220 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %212, i32 0, i32 7, !dbg !2997
  %213 = load i32, i32* %cur_frame_length220, align 8, !dbg !2997
  %214 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2998
  %channels221 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %214, i32 0, i32 83, !dbg !2999
  %215 = load i32, i32* %channels221, align 4, !dbg !2999
  %mul222 = mul i32 %213, %215, !dbg !3000
  call void %205(i32* %208, i32* %211, i32 %mul222), !dbg !2986
  br label %if.end223

if.end223:                                        ; preds = %if.else216, %for.end215
  %216 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3001
  %crc_buffer224 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %216, i32 0, i32 35, !dbg !3002
  %217 = load i8*, i8** %crc_buffer224, align 8, !dbg !3002
  store i8* %217, i8** %crc_source, align 8, !dbg !3003
  br label %if.end228, !dbg !3004

if.else225:                                       ; preds = %if.else190
  %218 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3005
  %data226 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %218, i32 0, i32 0, !dbg !3007
  %arrayidx227 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data226, i64 0, i64 0, !dbg !3005
  %219 = load i8*, i8** %arrayidx227, align 8, !dbg !3005
  store i8* %219, i8** %crc_source, align 8, !dbg !3008
  br label %if.end228

if.end228:                                        ; preds = %if.else225, %if.end223
  %220 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3009
  %crc_table229 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %220, i32 0, i32 4, !dbg !3010
  %221 = load i32*, i32** %crc_table229, align 8, !dbg !3010
  %222 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3011
  %crc230 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %222, i32 0, i32 6, !dbg !3012
  %223 = load i32, i32* %crc230, align 4, !dbg !3012
  %224 = load i8*, i8** %crc_source, align 8, !dbg !3013
  %225 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3014
  %cur_frame_length231 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %225, i32 0, i32 7, !dbg !3015
  %226 = load i32, i32* %cur_frame_length231, align 8, !dbg !3015
  %227 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3016
  %channels232 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %227, i32 0, i32 83, !dbg !3017
  %228 = load i32, i32* %channels232, align 4, !dbg !3017
  %mul233 = mul i32 %226, %228, !dbg !3018
  %229 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3019
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %229, i32 0, i32 84, !dbg !3020
  %230 = load i32, i32* %sample_fmt, align 8, !dbg !3020
  %call234 = call i32 @av_get_bytes_per_sample(i32 %230), !dbg !3021
  %mul235 = mul i32 %mul233, %call234, !dbg !3022
  %conv236 = zext i32 %mul235 to i64, !dbg !3014
  %call237 = call i32 @av_crc(i32* %221, i32 %223, i8* %224, i64 %conv236) #9, !dbg !3023
  %231 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3024
  %crc238 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %231, i32 0, i32 6, !dbg !3025
  store i32 %call237, i32* %crc238, align 4, !dbg !3026
  br label %if.end239

if.end239:                                        ; preds = %if.end228, %for.end189
  %232 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3027
  %cur_frame_length240 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %232, i32 0, i32 7, !dbg !3029
  %233 = load i32, i32* %cur_frame_length240, align 8, !dbg !3029
  %234 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3030
  %frame_length241 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %234, i32 0, i32 4, !dbg !3031
  %235 = load i32, i32* %frame_length241, align 8, !dbg !3031
  %cmp242 = icmp ne i32 %233, %235, !dbg !3032
  br i1 %cmp242, label %land.lhs.true244, label %if.end254, !dbg !3033

land.lhs.true244:                                 ; preds = %if.end239
  %236 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3034
  %crc_org = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %236, i32 0, i32 5, !dbg !3035
  %237 = load i32, i32* %crc_org, align 8, !dbg !3035
  %238 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3036
  %crc245 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %238, i32 0, i32 6, !dbg !3037
  %239 = load i32, i32* %crc245, align 4, !dbg !3037
  %cmp246 = icmp ne i32 %237, %239, !dbg !3038
  br i1 %cmp246, label %if.then248, label %if.end254, !dbg !3039

if.then248:                                       ; preds = %land.lhs.true244
  %240 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3041
  %241 = bitcast %struct.AVCodecContext* %240 to i8*, !dbg !3041
  call void (i8*, i32, i8*, ...) @av_log(i8* %241, i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0)), !dbg !3043
  %242 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3044
  %err_recognition249 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %242, i32 0, i32 135, !dbg !3046
  %243 = load i32, i32* %err_recognition249, align 8, !dbg !3046
  %and250 = and i32 %243, 8, !dbg !3047
  %tobool251 = icmp ne i32 %and250, 0, !dbg !3047
  br i1 %tobool251, label %if.then252, label %if.end253, !dbg !3048

if.then252:                                       ; preds = %if.then248
  store i32 -1094995529, i32* %retval, align 4, !dbg !3049
  br label %return, !dbg !3049

if.end253:                                        ; preds = %if.then248
  br label %if.end254, !dbg !3050

if.end254:                                        ; preds = %if.end253, %land.lhs.true244, %if.end239
  br label %if.end255, !dbg !3051

if.end255:                                        ; preds = %if.end254, %land.lhs.true, %if.end156
  %244 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !3052
  store i32 1, i32* %244, align 4, !dbg !3053
  %245 = load i32, i32* %invalid_frame, align 4, !dbg !3054
  %tobool256 = icmp ne i32 %245, 0, !dbg !3054
  br i1 %tobool256, label %cond.true257, label %cond.false258, !dbg !3054

cond.true257:                                     ; preds = %if.end255
  %246 = load i32, i32* %buffer_size, align 4, !dbg !3055
  br label %cond.end262, !dbg !3056

cond.false258:                                    ; preds = %if.end255
  %247 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3057
  %gb259 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %247, i32 0, i32 2, !dbg !3058
  %call260 = call i32 @get_bits_count(%struct.GetBitContext* %gb259), !dbg !3059
  %add = add nsw i32 %call260, 7, !dbg !3060
  %shr261 = ashr i32 %add, 3, !dbg !3061
  br label %cond.end262, !dbg !3062

cond.end262:                                      ; preds = %cond.false258, %cond.true257
  %cond263 = phi i32 [ %246, %cond.true257 ], [ %shr261, %cond.false258 ], !dbg !3063
  store i32 %cond263, i32* %bytes_read, align 4, !dbg !3065
  %248 = load i32, i32* %bytes_read, align 4, !dbg !3066
  store i32 %248, i32* %retval, align 4, !dbg !3067
  br label %return, !dbg !3067

return:                                           ; preds = %cond.end262, %if.then252, %if.then40, %if.then
  %249 = load i32, i32* %retval, align 4, !dbg !3068
  ret i32 %249, !dbg !3068
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_end(%struct.AVCodecContext* %avctx) #0 !dbg !3069 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ctx = alloca %struct.ALSDecContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3070, metadata !1692), !dbg !3071
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx, metadata !3072, metadata !1692), !dbg !3073
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3074
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3075
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3075
  %2 = bitcast i8* %1 to %struct.ALSDecContext*, !dbg !3074
  store %struct.ALSDecContext* %2, %struct.ALSDecContext** %ctx, align 8, !dbg !3073
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3076, metadata !1692), !dbg !3077
  %3 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3078
  %sconf = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %3, i32 0, i32 1, !dbg !3079
  %chan_pos = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %sconf, i32 0, i32 20, !dbg !3080
  %4 = bitcast i32** %chan_pos to i8*, !dbg !3081
  call void @av_freep(i8* %4), !dbg !3082
  %5 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3083
  %bgmc_lut = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %5, i32 0, i32 13, !dbg !3084
  %6 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3085
  %bgmc_lut_status = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %6, i32 0, i32 14, !dbg !3086
  call void @ff_bgmc_end(i8** %bgmc_lut, i32** %bgmc_lut_status), !dbg !3087
  %7 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3088
  %const_block = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %7, i32 0, i32 16, !dbg !3089
  %8 = bitcast i32** %const_block to i8*, !dbg !3090
  call void @av_freep(i8* %8), !dbg !3091
  %9 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3092
  %shift_lsbs = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %9, i32 0, i32 17, !dbg !3093
  %10 = bitcast i32** %shift_lsbs to i8*, !dbg !3094
  call void @av_freep(i8* %10), !dbg !3095
  %11 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3096
  %opt_order = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %11, i32 0, i32 18, !dbg !3097
  %12 = bitcast i32** %opt_order to i8*, !dbg !3098
  call void @av_freep(i8* %12), !dbg !3099
  %13 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3100
  %store_prev_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %13, i32 0, i32 19, !dbg !3101
  %14 = bitcast i32** %store_prev_samples to i8*, !dbg !3102
  call void @av_freep(i8* %14), !dbg !3103
  %15 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3104
  %use_ltp = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %15, i32 0, i32 20, !dbg !3105
  %16 = bitcast i32** %use_ltp to i8*, !dbg !3106
  call void @av_freep(i8* %16), !dbg !3107
  %17 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3108
  %ltp_lag = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %17, i32 0, i32 21, !dbg !3109
  %18 = bitcast i32** %ltp_lag to i8*, !dbg !3110
  call void @av_freep(i8* %18), !dbg !3111
  %19 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3112
  %ltp_gain = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %19, i32 0, i32 22, !dbg !3113
  %20 = bitcast i32*** %ltp_gain to i8*, !dbg !3114
  call void @av_freep(i8* %20), !dbg !3115
  %21 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3116
  %ltp_gain_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %21, i32 0, i32 23, !dbg !3117
  %22 = bitcast i32** %ltp_gain_buffer to i8*, !dbg !3118
  call void @av_freep(i8* %22), !dbg !3119
  %23 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3120
  %quant_cof = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %23, i32 0, i32 24, !dbg !3121
  %24 = bitcast i32*** %quant_cof to i8*, !dbg !3122
  call void @av_freep(i8* %24), !dbg !3123
  %25 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3124
  %lpc_cof = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %25, i32 0, i32 26, !dbg !3125
  %26 = bitcast i32*** %lpc_cof to i8*, !dbg !3126
  call void @av_freep(i8* %26), !dbg !3127
  %27 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3128
  %quant_cof_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %27, i32 0, i32 25, !dbg !3129
  %28 = bitcast i32** %quant_cof_buffer to i8*, !dbg !3130
  call void @av_freep(i8* %28), !dbg !3131
  %29 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3132
  %lpc_cof_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %29, i32 0, i32 27, !dbg !3133
  %30 = bitcast i32** %lpc_cof_buffer to i8*, !dbg !3134
  call void @av_freep(i8* %30), !dbg !3135
  %31 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3136
  %lpc_cof_reversed_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %31, i32 0, i32 28, !dbg !3137
  %32 = bitcast i32** %lpc_cof_reversed_buffer to i8*, !dbg !3138
  call void @av_freep(i8* %32), !dbg !3139
  %33 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3140
  %prev_raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %33, i32 0, i32 32, !dbg !3141
  %34 = bitcast i32** %prev_raw_samples to i8*, !dbg !3142
  call void @av_freep(i8* %34), !dbg !3143
  %35 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3144
  %raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %35, i32 0, i32 33, !dbg !3145
  %36 = bitcast i32*** %raw_samples to i8*, !dbg !3146
  call void @av_freep(i8* %36), !dbg !3147
  %37 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3148
  %raw_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %37, i32 0, i32 34, !dbg !3149
  %38 = bitcast i32** %raw_buffer to i8*, !dbg !3150
  call void @av_freep(i8* %38), !dbg !3151
  %39 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3152
  %chan_data = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %39, i32 0, i32 29, !dbg !3153
  %40 = bitcast %struct.ALSChannelData*** %chan_data to i8*, !dbg !3154
  call void @av_freep(i8* %40), !dbg !3155
  %41 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3156
  %chan_data_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %41, i32 0, i32 30, !dbg !3157
  %42 = bitcast %struct.ALSChannelData** %chan_data_buffer to i8*, !dbg !3158
  call void @av_freep(i8* %42), !dbg !3159
  %43 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3160
  %reverted_channels = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %43, i32 0, i32 31, !dbg !3161
  %44 = bitcast i32** %reverted_channels to i8*, !dbg !3162
  call void @av_freep(i8* %44), !dbg !3163
  %45 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3164
  %crc_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %45, i32 0, i32 35, !dbg !3165
  %46 = bitcast i8** %crc_buffer to i8*, !dbg !3166
  call void @av_freep(i8* %46), !dbg !3167
  %47 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3168
  %mlz = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %47, i32 0, i32 36, !dbg !3170
  %48 = load %struct.MLZ*, %struct.MLZ** %mlz, align 8, !dbg !3170
  %tobool = icmp ne %struct.MLZ* %48, null, !dbg !3168
  br i1 %tobool, label %if.then, label %if.end, !dbg !3171

if.then:                                          ; preds = %entry
  %49 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3172
  %mlz1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %49, i32 0, i32 36, !dbg !3174
  %50 = load %struct.MLZ*, %struct.MLZ** %mlz1, align 8, !dbg !3174
  %dict = getelementptr inbounds %struct.MLZ, %struct.MLZ* %50, i32 0, i32 6, !dbg !3175
  %51 = bitcast %struct.MLZDict** %dict to i8*, !dbg !3176
  call void @av_freep(i8* %51), !dbg !3177
  %52 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3178
  %mlz2 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %52, i32 0, i32 36, !dbg !3179
  %53 = bitcast %struct.MLZ** %mlz2 to i8*, !dbg !3180
  call void @av_freep(i8* %53), !dbg !3181
  br label %if.end, !dbg !3182

if.end:                                           ; preds = %if.then, %entry
  %54 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3183
  %acf = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %54, i32 0, i32 37, !dbg !3184
  %55 = bitcast %struct.SoftFloat_IEEE754** %acf to i8*, !dbg !3185
  call void @av_freep(i8* %55), !dbg !3186
  %56 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3187
  %last_acf_mantissa = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %56, i32 0, i32 38, !dbg !3188
  %57 = bitcast i32** %last_acf_mantissa to i8*, !dbg !3189
  call void @av_freep(i8* %57), !dbg !3190
  %58 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3191
  %shift_value = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %58, i32 0, i32 39, !dbg !3192
  %59 = bitcast i32** %shift_value to i8*, !dbg !3193
  call void @av_freep(i8* %59), !dbg !3194
  %60 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3195
  %last_shift_value = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %60, i32 0, i32 40, !dbg !3196
  %61 = bitcast i32** %last_shift_value to i8*, !dbg !3197
  call void @av_freep(i8* %61), !dbg !3198
  %62 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3199
  %raw_mantissa = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %62, i32 0, i32 41, !dbg !3201
  %63 = load i32**, i32*** %raw_mantissa, align 8, !dbg !3201
  %tobool3 = icmp ne i32** %63, null, !dbg !3199
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !3202

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !3203
  br label %for.cond, !dbg !3206

for.cond:                                         ; preds = %for.inc, %if.then4
  %64 = load i32, i32* %i, align 4, !dbg !3207
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3210
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %65, i32 0, i32 83, !dbg !3211
  %66 = load i32, i32* %channels, align 4, !dbg !3211
  %cmp = icmp slt i32 %64, %66, !dbg !3212
  br i1 %cmp, label %for.body, label %for.end, !dbg !3213

for.body:                                         ; preds = %for.cond
  %67 = load i32, i32* %i, align 4, !dbg !3214
  %idxprom = sext i32 %67 to i64, !dbg !3216
  %68 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3216
  %raw_mantissa5 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %68, i32 0, i32 41, !dbg !3217
  %69 = load i32**, i32*** %raw_mantissa5, align 8, !dbg !3217
  %arrayidx = getelementptr inbounds i32*, i32** %69, i64 %idxprom, !dbg !3216
  %70 = bitcast i32** %arrayidx to i8*, !dbg !3218
  call void @av_freep(i8* %70), !dbg !3219
  br label %for.inc, !dbg !3220

for.inc:                                          ; preds = %for.body
  %71 = load i32, i32* %i, align 4, !dbg !3221
  %inc = add nsw i32 %71, 1, !dbg !3221
  store i32 %inc, i32* %i, align 4, !dbg !3221
  br label %for.cond, !dbg !3223, !llvm.loop !3224

for.end:                                          ; preds = %for.cond
  %72 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3226
  %raw_mantissa6 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %72, i32 0, i32 41, !dbg !3227
  %73 = bitcast i32*** %raw_mantissa6 to i8*, !dbg !3228
  call void @av_freep(i8* %73), !dbg !3229
  br label %if.end7, !dbg !3230

if.end7:                                          ; preds = %for.end, %if.end
  %74 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3231
  %larray = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %74, i32 0, i32 42, !dbg !3232
  %75 = bitcast i8** %larray to i8*, !dbg !3233
  call void @av_freep(i8* %75), !dbg !3234
  %76 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3235
  %nbits = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %76, i32 0, i32 43, !dbg !3236
  %77 = bitcast i32** %nbits to i8*, !dbg !3237
  call void @av_freep(i8* %77), !dbg !3238
  ret i32 0, !dbg !3239
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @flush(%struct.AVCodecContext* %avctx) #0 !dbg !3240 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ctx = alloca %struct.ALSDecContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3241, metadata !1692), !dbg !3242
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx, metadata !3243, metadata !1692), !dbg !3244
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3245
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3246
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3246
  %2 = bitcast i8* %1 to %struct.ALSDecContext*, !dbg !3245
  store %struct.ALSDecContext* %2, %struct.ALSDecContext** %ctx, align 8, !dbg !3244
  %3 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx, align 8, !dbg !3247
  %frame_id = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %3, i32 0, i32 8, !dbg !3248
  store i32 0, i32* %frame_id, align 4, !dbg !3249
  ret void, !dbg !3250
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @read_specific_config(%struct.ALSDecContext* %ctx) #0 !dbg !3251 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3254, metadata !1692), !dbg !3259
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %gb = alloca %struct.GetBitContext, align 8
  %ht_size = alloca i64, align 8
  %i = alloca i32, align 4
  %config_offset = alloca i32, align 4
  %m4ac = alloca %struct.MPEG4AudioConfig, align 4
  %sconf = alloca %struct.ALSSpecificConfig*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %als_id = alloca i32, align 4
  %header_size = alloca i32, align 4
  %trailer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  %chan_pos_bits = alloca i32, align 4
  %bits_needed = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !3263, metadata !1692), !dbg !3264
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !3265, metadata !1692), !dbg !3266
  call void @llvm.dbg.declare(metadata i64* %ht_size, metadata !3267, metadata !1692), !dbg !3268
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3269, metadata !1692), !dbg !3270
  call void @llvm.dbg.declare(metadata i32* %config_offset, metadata !3271, metadata !1692), !dbg !3272
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig* %m4ac, metadata !3273, metadata !1692), !dbg !3290
  %0 = bitcast %struct.MPEG4AudioConfig* %m4ac to i8*, !dbg !3290
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 48, i32 4, i1 false), !dbg !3290
  call void @llvm.dbg.declare(metadata %struct.ALSSpecificConfig** %sconf, metadata !3291, metadata !1692), !dbg !3292
  %1 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !3293
  %sconf1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %1, i32 0, i32 1, !dbg !3294
  store %struct.ALSSpecificConfig* %sconf1, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3292
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !3295, metadata !1692), !dbg !3296
  %2 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !3297
  %avctx2 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %2, i32 0, i32 0, !dbg !3298
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx2, align 8, !dbg !3298
  store %struct.AVCodecContext* %3, %struct.AVCodecContext** %avctx, align 8, !dbg !3296
  call void @llvm.dbg.declare(metadata i32* %als_id, metadata !3299, metadata !1692), !dbg !3300
  call void @llvm.dbg.declare(metadata i32* %header_size, metadata !3301, metadata !1692), !dbg !3302
  call void @llvm.dbg.declare(metadata i32* %trailer_size, metadata !3303, metadata !1692), !dbg !3304
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3305, metadata !1692), !dbg !3306
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3307
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 15, !dbg !3309
  %5 = load i8*, i8** %extradata, align 8, !dbg !3309
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3310
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 16, !dbg !3311
  %7 = load i32, i32* %extradata_size, align 8, !dbg !3311
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %5, i32 %7), !dbg !3312
  store i32 %call, i32* %ret, align 4, !dbg !3313
  %cmp = icmp slt i32 %call, 0, !dbg !3314
  br i1 %cmp, label %if.then, label %if.end, !dbg !3315

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %ret, align 4, !dbg !3316
  store i32 %8, i32* %retval, align 4, !dbg !3317
  br label %return, !dbg !3317

if.end:                                           ; preds = %entry
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3318
  %extradata3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 15, !dbg !3319
  %10 = load i8*, i8** %extradata3, align 8, !dbg !3319
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3320
  %extradata_size4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 16, !dbg !3321
  %12 = load i32, i32* %extradata_size4, align 8, !dbg !3321
  %mul = mul nsw i32 %12, 8, !dbg !3322
  %call5 = call i32 @avpriv_mpeg4audio_get_config(%struct.MPEG4AudioConfig* %m4ac, i8* %10, i32 %mul, i32 1), !dbg !3323
  store i32 %call5, i32* %config_offset, align 4, !dbg !3324
  %13 = load i32, i32* %config_offset, align 4, !dbg !3325
  %cmp6 = icmp slt i32 %13, 0, !dbg !3327
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3328

if.then7:                                         ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !3329
  br label %return, !dbg !3329

if.end8:                                          ; preds = %if.end
  %14 = load i32, i32* %config_offset, align 4, !dbg !3330
  call void @skip_bits_long(%struct.GetBitContext* %gb, i32 %14), !dbg !3331
  %call9 = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !3332
  %cmp10 = icmp slt i32 %call9, 240, !dbg !3334
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3335

if.then11:                                        ; preds = %if.end8
  store i32 -1094995529, i32* %retval, align 4, !dbg !3336
  br label %return, !dbg !3336

if.end12:                                         ; preds = %if.end8
  %call13 = call i32 @get_bits_long(%struct.GetBitContext* %gb, i32 32), !dbg !3337
  store i32 %call13, i32* %als_id, align 4, !dbg !3338
  %sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 2, !dbg !3339
  %15 = load i32, i32* %sample_rate, align 4, !dbg !3339
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3340
  %sample_rate14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 82, !dbg !3341
  store i32 %15, i32* %sample_rate14, align 8, !dbg !3342
  call void @skip_bits_long(%struct.GetBitContext* %gb, i32 32), !dbg !3343
  %call15 = call i32 @get_bits_long(%struct.GetBitContext* %gb, i32 32), !dbg !3344
  %17 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3345
  %samples = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %17, i32 0, i32 0, !dbg !3346
  store i32 %call15, i32* %samples, align 8, !dbg !3347
  %channels = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %m4ac, i32 0, i32 9, !dbg !3348
  %18 = load i32, i32* %channels, align 4, !dbg !3348
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3349
  %channels16 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 83, !dbg !3350
  store i32 %18, i32* %channels16, align 4, !dbg !3351
  call void @skip_bits(%struct.GetBitContext* %gb, i32 16), !dbg !3352
  call void @skip_bits(%struct.GetBitContext* %gb, i32 3), !dbg !3353
  %call17 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 3), !dbg !3354
  %20 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3355
  %resolution = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %20, i32 0, i32 1, !dbg !3356
  store i32 %call17, i32* %resolution, align 4, !dbg !3357
  %call18 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3358
  %21 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3359
  %floating = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %21, i32 0, i32 2, !dbg !3360
  store i32 %call18, i32* %floating, align 8, !dbg !3361
  %call19 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3362
  %22 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3363
  %msb_first = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %22, i32 0, i32 3, !dbg !3364
  store i32 %call19, i32* %msb_first, align 4, !dbg !3365
  %call20 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 16), !dbg !3366
  %add = add i32 %call20, 1, !dbg !3367
  %23 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3368
  %frame_length = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %23, i32 0, i32 4, !dbg !3369
  store i32 %add, i32* %frame_length, align 8, !dbg !3370
  %call21 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !3371
  %24 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3372
  %ra_distance = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %24, i32 0, i32 5, !dbg !3373
  store i32 %call21, i32* %ra_distance, align 4, !dbg !3374
  %call22 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 2), !dbg !3375
  %25 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3376
  %ra_flag = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %25, i32 0, i32 6, !dbg !3377
  store i32 %call22, i32* %ra_flag, align 8, !dbg !3378
  %call23 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3379
  %26 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3380
  %adapt_order = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %26, i32 0, i32 7, !dbg !3381
  store i32 %call23, i32* %adapt_order, align 4, !dbg !3382
  %call24 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 2), !dbg !3383
  %27 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3384
  %coef_table = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %27, i32 0, i32 8, !dbg !3385
  store i32 %call24, i32* %coef_table, align 8, !dbg !3386
  %call25 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3387
  %28 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3388
  %long_term_prediction = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %28, i32 0, i32 9, !dbg !3389
  store i32 %call25, i32* %long_term_prediction, align 4, !dbg !3390
  %call26 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 10), !dbg !3391
  %29 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3392
  %max_order = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %29, i32 0, i32 10, !dbg !3393
  store i32 %call26, i32* %max_order, align 8, !dbg !3394
  %call27 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 2), !dbg !3395
  %30 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3396
  %block_switching = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %30, i32 0, i32 11, !dbg !3397
  store i32 %call27, i32* %block_switching, align 4, !dbg !3398
  %call28 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3399
  %31 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3400
  %bgmc = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %31, i32 0, i32 12, !dbg !3401
  store i32 %call28, i32* %bgmc, align 8, !dbg !3402
  %call29 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3403
  %32 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3404
  %sb_part = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %32, i32 0, i32 13, !dbg !3405
  store i32 %call29, i32* %sb_part, align 4, !dbg !3406
  %call30 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3407
  %33 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3408
  %joint_stereo = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %33, i32 0, i32 14, !dbg !3409
  store i32 %call30, i32* %joint_stereo, align 8, !dbg !3410
  %call31 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3411
  %34 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3412
  %mc_coding = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %34, i32 0, i32 15, !dbg !3413
  store i32 %call31, i32* %mc_coding, align 4, !dbg !3414
  %call32 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3415
  %35 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3416
  %chan_config = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %35, i32 0, i32 16, !dbg !3417
  store i32 %call32, i32* %chan_config, align 8, !dbg !3418
  %call33 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3419
  %36 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3420
  %chan_sort = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %36, i32 0, i32 17, !dbg !3421
  store i32 %call33, i32* %chan_sort, align 4, !dbg !3422
  %call34 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3423
  %37 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3424
  %crc_enabled = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %37, i32 0, i32 21, !dbg !3425
  store i32 %call34, i32* %crc_enabled, align 8, !dbg !3426
  %call35 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3427
  %38 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3428
  %rlslms = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %38, i32 0, i32 18, !dbg !3429
  store i32 %call35, i32* %rlslms, align 8, !dbg !3430
  call void @skip_bits(%struct.GetBitContext* %gb, i32 5), !dbg !3431
  call void @skip_bits1(%struct.GetBitContext* %gb), !dbg !3432
  %39 = load i32, i32* %als_id, align 4, !dbg !3433
  %cmp36 = icmp ne i32 %39, 1095521024, !dbg !3435
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !3436

if.then37:                                        ; preds = %if.end12
  store i32 -1094995529, i32* %retval, align 4, !dbg !3437
  br label %return, !dbg !3437

if.end38:                                         ; preds = %if.end12
  %40 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3438
  %frame_length39 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %40, i32 0, i32 4, !dbg !3439
  %41 = load i32, i32* %frame_length39, align 8, !dbg !3439
  %42 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !3440
  %cur_frame_length = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %42, i32 0, i32 7, !dbg !3441
  store i32 %41, i32* %cur_frame_length, align 8, !dbg !3442
  %43 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3443
  %chan_config40 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %43, i32 0, i32 16, !dbg !3445
  %44 = load i32, i32* %chan_config40, align 8, !dbg !3445
  %tobool = icmp ne i32 %44, 0, !dbg !3443
  br i1 %tobool, label %if.then41, label %if.end43, !dbg !3446

if.then41:                                        ; preds = %if.end38
  %call42 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 16), !dbg !3447
  %45 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3448
  %chan_config_info = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %45, i32 0, i32 19, !dbg !3449
  store i32 %call42, i32* %chan_config_info, align 4, !dbg !3450
  br label %if.end43, !dbg !3448

if.end43:                                         ; preds = %if.then41, %if.end38
  %46 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3451
  %chan_sort44 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %46, i32 0, i32 17, !dbg !3452
  %47 = load i32, i32* %chan_sort44, align 4, !dbg !3452
  %tobool45 = icmp ne i32 %47, 0, !dbg !3451
  br i1 %tobool45, label %land.lhs.true, label %if.end91, !dbg !3453

land.lhs.true:                                    ; preds = %if.end43
  %48 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3454
  %channels46 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %48, i32 0, i32 83, !dbg !3456
  %49 = load i32, i32* %channels46, align 4, !dbg !3456
  %cmp47 = icmp sgt i32 %49, 1, !dbg !3457
  br i1 %cmp47, label %if.then48, label %if.end91, !dbg !3458

if.then48:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %chan_pos_bits, metadata !3459, metadata !1692), !dbg !3460
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3461
  %channels49 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %50, i32 0, i32 83, !dbg !3462
  %51 = load i32, i32* %channels49, align 4, !dbg !3462
  store i32 %51, i32* %x.addr.i, align 4, !dbg !3463
  %52 = load i32, i32* %x.addr.i, align 4, !dbg !3464
  %sub.i = sub nsw i32 %52, 1, !dbg !3465
  %shl.i = shl i32 %sub.i, 1, !dbg !3466
  %or.i = or i32 %shl.i, 1, !dbg !3467
  %53 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #10, !dbg !3468
  %sub1.i = sub nsw i32 31, %53, !dbg !3469
  store i32 %sub1.i, i32* %chan_pos_bits, align 4, !dbg !3460
  call void @llvm.dbg.declare(metadata i32* %bits_needed, metadata !3470, metadata !1692), !dbg !3471
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3472
  %channels51 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %54, i32 0, i32 83, !dbg !3473
  %55 = load i32, i32* %channels51, align 4, !dbg !3473
  %56 = load i32, i32* %chan_pos_bits, align 4, !dbg !3474
  %mul52 = mul nsw i32 %55, %56, !dbg !3475
  %add53 = add nsw i32 %mul52, 7, !dbg !3476
  store i32 %add53, i32* %bits_needed, align 4, !dbg !3471
  %call54 = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !3477
  %57 = load i32, i32* %bits_needed, align 4, !dbg !3479
  %cmp55 = icmp slt i32 %call54, %57, !dbg !3480
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !3481

if.then56:                                        ; preds = %if.then48
  store i32 -1094995529, i32* %retval, align 4, !dbg !3482
  br label %return, !dbg !3482

if.end57:                                         ; preds = %if.then48
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3483
  %channels58 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %58, i32 0, i32 83, !dbg !3485
  %59 = load i32, i32* %channels58, align 4, !dbg !3485
  %conv = sext i32 %59 to i64, !dbg !3483
  %call59 = call i8* @av_malloc_array(i64 %conv, i64 4), !dbg !3486
  %60 = bitcast i8* %call59 to i32*, !dbg !3486
  %61 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3487
  %chan_pos = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %61, i32 0, i32 20, !dbg !3488
  store i32* %60, i32** %chan_pos, align 8, !dbg !3489
  %tobool60 = icmp ne i32* %60, null, !dbg !3489
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !3490

if.then61:                                        ; preds = %if.end57
  store i32 -12, i32* %retval, align 4, !dbg !3491
  br label %return, !dbg !3491

if.end62:                                         ; preds = %if.end57
  %62 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !3492
  %cs_switch = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %62, i32 0, i32 10, !dbg !3493
  store i32 1, i32* %cs_switch, align 4, !dbg !3494
  store i32 0, i32* %i, align 4, !dbg !3495
  br label %for.cond, !dbg !3497

for.cond:                                         ; preds = %for.inc, %if.end62
  %63 = load i32, i32* %i, align 4, !dbg !3498
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3501
  %channels63 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %64, i32 0, i32 83, !dbg !3502
  %65 = load i32, i32* %channels63, align 4, !dbg !3502
  %cmp64 = icmp slt i32 %63, %65, !dbg !3503
  br i1 %cmp64, label %for.body, label %for.end, !dbg !3504

for.body:                                         ; preds = %for.cond
  %66 = load i32, i32* %i, align 4, !dbg !3505
  %idxprom = sext i32 %66 to i64, !dbg !3507
  %67 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3507
  %chan_pos66 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %67, i32 0, i32 20, !dbg !3508
  %68 = load i32*, i32** %chan_pos66, align 8, !dbg !3508
  %arrayidx = getelementptr inbounds i32, i32* %68, i64 %idxprom, !dbg !3507
  store i32 -1, i32* %arrayidx, align 4, !dbg !3509
  br label %for.inc, !dbg !3510

for.inc:                                          ; preds = %for.body
  %69 = load i32, i32* %i, align 4, !dbg !3511
  %inc = add nsw i32 %69, 1, !dbg !3511
  store i32 %inc, i32* %i, align 4, !dbg !3511
  br label %for.cond, !dbg !3513, !llvm.loop !3514

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3516
  br label %for.cond67, !dbg !3518

for.cond67:                                       ; preds = %for.inc87, %for.end
  %70 = load i32, i32* %i, align 4, !dbg !3519
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3522
  %channels68 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %71, i32 0, i32 83, !dbg !3523
  %72 = load i32, i32* %channels68, align 4, !dbg !3523
  %cmp69 = icmp slt i32 %70, %72, !dbg !3524
  br i1 %cmp69, label %for.body71, label %for.end89, !dbg !3525

for.body71:                                       ; preds = %for.cond67
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !3526, metadata !1692), !dbg !3528
  %73 = load i32, i32* %chan_pos_bits, align 4, !dbg !3529
  %call72 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 %73), !dbg !3530
  store i32 %call72, i32* %idx, align 4, !dbg !3531
  %74 = load i32, i32* %idx, align 4, !dbg !3532
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3534
  %channels73 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %75, i32 0, i32 83, !dbg !3535
  %76 = load i32, i32* %channels73, align 4, !dbg !3535
  %cmp74 = icmp sge i32 %74, %76, !dbg !3536
  br i1 %cmp74, label %if.then81, label %lor.lhs.false, !dbg !3537

lor.lhs.false:                                    ; preds = %for.body71
  %77 = load i32, i32* %idx, align 4, !dbg !3538
  %idxprom76 = sext i32 %77 to i64, !dbg !3540
  %78 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3540
  %chan_pos77 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %78, i32 0, i32 20, !dbg !3541
  %79 = load i32*, i32** %chan_pos77, align 8, !dbg !3541
  %arrayidx78 = getelementptr inbounds i32, i32* %79, i64 %idxprom76, !dbg !3540
  %80 = load i32, i32* %arrayidx78, align 4, !dbg !3540
  %cmp79 = icmp ne i32 %80, -1, !dbg !3542
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !3543

if.then81:                                        ; preds = %lor.lhs.false, %for.body71
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3544
  %82 = bitcast %struct.AVCodecContext* %81 to i8*, !dbg !3544
  call void (i8*, i32, i8*, ...) @av_log(i8* %82, i32 24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i32 0, i32 0)), !dbg !3546
  %83 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !3547
  %cs_switch82 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %83, i32 0, i32 10, !dbg !3548
  store i32 0, i32* %cs_switch82, align 4, !dbg !3549
  br label %for.end89, !dbg !3550

if.end83:                                         ; preds = %lor.lhs.false
  %84 = load i32, i32* %i, align 4, !dbg !3551
  %85 = load i32, i32* %idx, align 4, !dbg !3552
  %idxprom84 = sext i32 %85 to i64, !dbg !3553
  %86 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3553
  %chan_pos85 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %86, i32 0, i32 20, !dbg !3554
  %87 = load i32*, i32** %chan_pos85, align 8, !dbg !3554
  %arrayidx86 = getelementptr inbounds i32, i32* %87, i64 %idxprom84, !dbg !3553
  store i32 %84, i32* %arrayidx86, align 4, !dbg !3555
  br label %for.inc87, !dbg !3556

for.inc87:                                        ; preds = %if.end83
  %88 = load i32, i32* %i, align 4, !dbg !3557
  %inc88 = add nsw i32 %88, 1, !dbg !3557
  store i32 %inc88, i32* %i, align 4, !dbg !3557
  br label %for.cond67, !dbg !3559, !llvm.loop !3560

for.end89:                                        ; preds = %if.then81, %for.cond67
  %call90 = call i8* @align_get_bits(%struct.GetBitContext* %gb), !dbg !3562
  br label %if.end91, !dbg !3563

if.end91:                                         ; preds = %for.end89, %land.lhs.true, %if.end43
  %call92 = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !3564
  %cmp93 = icmp slt i32 %call92, 64, !dbg !3566
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !3567

if.then95:                                        ; preds = %if.end91
  store i32 -1094995529, i32* %retval, align 4, !dbg !3568
  br label %return, !dbg !3568

if.end96:                                         ; preds = %if.end91
  %call97 = call i32 @get_bits_long(%struct.GetBitContext* %gb, i32 32), !dbg !3569
  store i32 %call97, i32* %header_size, align 4, !dbg !3570
  %call98 = call i32 @get_bits_long(%struct.GetBitContext* %gb, i32 32), !dbg !3571
  store i32 %call98, i32* %trailer_size, align 4, !dbg !3572
  %89 = load i32, i32* %header_size, align 4, !dbg !3573
  %cmp99 = icmp eq i32 %89, -1, !dbg !3575
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !3576

if.then101:                                       ; preds = %if.end96
  store i32 0, i32* %header_size, align 4, !dbg !3577
  br label %if.end102, !dbg !3578

if.end102:                                        ; preds = %if.then101, %if.end96
  %90 = load i32, i32* %trailer_size, align 4, !dbg !3579
  %cmp103 = icmp eq i32 %90, -1, !dbg !3581
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !3582

if.then105:                                       ; preds = %if.end102
  store i32 0, i32* %trailer_size, align 4, !dbg !3583
  br label %if.end106, !dbg !3584

if.end106:                                        ; preds = %if.then105, %if.end102
  %91 = load i32, i32* %header_size, align 4, !dbg !3585
  %conv107 = zext i32 %91 to i64, !dbg !3586
  %92 = load i32, i32* %trailer_size, align 4, !dbg !3587
  %conv108 = zext i32 %92 to i64, !dbg !3588
  %add109 = add nsw i64 %conv107, %conv108, !dbg !3589
  %shl = shl i64 %add109, 3, !dbg !3590
  store i64 %shl, i64* %ht_size, align 8, !dbg !3591
  %call110 = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !3592
  %conv111 = sext i32 %call110 to i64, !dbg !3592
  %93 = load i64, i64* %ht_size, align 8, !dbg !3594
  %cmp112 = icmp ult i64 %conv111, %93, !dbg !3595
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !3596

if.then114:                                       ; preds = %if.end106
  store i32 -1094995529, i32* %retval, align 4, !dbg !3597
  br label %return, !dbg !3597

if.end115:                                        ; preds = %if.end106
  %94 = load i64, i64* %ht_size, align 8, !dbg !3598
  %cmp116 = icmp ugt i64 %94, 2147483647, !dbg !3600
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !3601

if.then118:                                       ; preds = %if.end115
  store i32 -1163346256, i32* %retval, align 4, !dbg !3602
  br label %return, !dbg !3602

if.end119:                                        ; preds = %if.end115
  %95 = load i64, i64* %ht_size, align 8, !dbg !3603
  %conv120 = trunc i64 %95 to i32, !dbg !3603
  call void @skip_bits_long(%struct.GetBitContext* %gb, i32 %conv120), !dbg !3604
  %96 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3605
  %crc_enabled121 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %96, i32 0, i32 21, !dbg !3607
  %97 = load i32, i32* %crc_enabled121, align 8, !dbg !3607
  %tobool122 = icmp ne i32 %97, 0, !dbg !3605
  br i1 %tobool122, label %if.then123, label %if.end134, !dbg !3608

if.then123:                                       ; preds = %if.end119
  %call124 = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !3609
  %cmp125 = icmp slt i32 %call124, 32, !dbg !3612
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !3613

if.then127:                                       ; preds = %if.then123
  store i32 -1094995529, i32* %retval, align 4, !dbg !3614
  br label %return, !dbg !3614

if.end128:                                        ; preds = %if.then123
  %98 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3615
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %98, i32 0, i32 135, !dbg !3617
  %99 = load i32, i32* %err_recognition, align 8, !dbg !3617
  %and = and i32 %99, 65537, !dbg !3618
  %tobool129 = icmp ne i32 %and, 0, !dbg !3618
  br i1 %tobool129, label %if.then130, label %if.else, !dbg !3619

if.then130:                                       ; preds = %if.end128
  %call131 = call i32* @av_crc_get_table(i32 4), !dbg !3620
  %100 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !3622
  %crc_table = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %100, i32 0, i32 4, !dbg !3623
  store i32* %call131, i32** %crc_table, align 8, !dbg !3624
  %101 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !3625
  %crc = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %101, i32 0, i32 6, !dbg !3626
  store i32 -1, i32* %crc, align 4, !dbg !3627
  %call132 = call i32 @get_bits_long(%struct.GetBitContext* %gb, i32 32), !dbg !3628
  %neg = xor i32 %call132, -1, !dbg !3629
  %102 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !3630
  %crc_org = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %102, i32 0, i32 5, !dbg !3631
  store i32 %neg, i32* %crc_org, align 8, !dbg !3632
  br label %if.end133, !dbg !3633

if.else:                                          ; preds = %if.end128
  call void @skip_bits_long(%struct.GetBitContext* %gb, i32 32), !dbg !3634
  br label %if.end133

if.end133:                                        ; preds = %if.else, %if.then130
  br label %if.end134, !dbg !3635

if.end134:                                        ; preds = %if.end133, %if.end119
  %103 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !3636
  call void @dprint_specific_config(%struct.ALSDecContext* %103), !dbg !3637
  store i32 0, i32* %retval, align 4, !dbg !3638
  br label %return, !dbg !3638

return:                                           ; preds = %if.end134, %if.then127, %if.then118, %if.then114, %if.then95, %if.then61, %if.then56, %if.then37, %if.then11, %if.then7, %if.then
  %104 = load i32, i32* %retval, align 4, !dbg !3639
  ret i32 %104, !dbg !3639
}

; Function Attrs: nounwind uwtable
define internal i32 @check_specific_config(%struct.ALSDecContext* %ctx) #1 !dbg !3640 {
entry:
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %sconf = alloca %struct.ALSSpecificConfig*, align 8
  %error = alloca i32, align 4
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !3641, metadata !1692), !dbg !3642
  call void @llvm.dbg.declare(metadata %struct.ALSSpecificConfig** %sconf, metadata !3643, metadata !1692), !dbg !3644
  %0 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !3645
  %sconf1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %0, i32 0, i32 1, !dbg !3646
  store %struct.ALSSpecificConfig* %sconf1, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3644
  call void @llvm.dbg.declare(metadata i32* %error, metadata !3647, metadata !1692), !dbg !3648
  store i32 0, i32* %error, align 4, !dbg !3648
  %1 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !3649
  %rlslms = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %1, i32 0, i32 18, !dbg !3652
  %2 = load i32, i32* %rlslms, align 8, !dbg !3652
  %tobool = icmp ne i32 %2, 0, !dbg !3649
  br i1 %tobool, label %if.then, label %if.end, !dbg !3653

if.then:                                          ; preds = %entry
  %3 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !3654
  %avctx = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %3, i32 0, i32 0, !dbg !3657
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3657
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !3654
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %5, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i32 0, i32 0)), !dbg !3658
  store i32 -1163346256, i32* %error, align 4, !dbg !3659
  br label %if.end, !dbg !3660

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %error, align 4, !dbg !3661
  ret i32 %6, !dbg !3662
}

declare i32 @ff_bgmc_init(%struct.AVCodecContext*, i8**, i32**) #3

declare i8* @av_malloc_array(i64, i64) #3

declare i8* @av_mallocz_array(i64, i64) #3

declare noalias i8* @av_mallocz(i64) #3

declare void @ff_mlz_init_dict(i8*, %struct.MLZ*) #3

declare void @ff_mlz_flush_dict(%struct.MLZ*) #3

declare i32 @av_get_bytes_per_sample(i32) #3

declare void @ff_bswapdsp_init(%struct.BswapDSPContext*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #5 !dbg !3663 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3667, metadata !1692), !dbg !3668
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3669, metadata !1692), !dbg !3670
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !3671, metadata !1692), !dbg !3672
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !3673
  %cmp = icmp sgt i32 %0, 268435455, !dbg !3675
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3676

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !3677
  %cmp1 = icmp slt i32 %1, 0, !dbg !3679
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3680

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !3681
  br label %if.end, !dbg !3682

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3683
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !3684
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !3685
  %mul = mul nsw i32 %4, 8, !dbg !3686
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !3687
  ret i32 %call, !dbg !3688
}

declare i32 @avpriv_mpeg4audio_get_config(%struct.MPEG4AudioConfig*, i8*, i32, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #5 !dbg !3689 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3692, metadata !1692), !dbg !3696
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !3698, metadata !1692), !dbg !3699
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !3700, metadata !1692), !dbg !3701
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3702, metadata !1692), !dbg !3703
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3704, metadata !1692), !dbg !3705
  %0 = load i32, i32* %n.addr, align 4, !dbg !3706
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3707
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !3708
  %2 = load i32, i32* %index, align 8, !dbg !3708
  %sub = sub nsw i32 0, %2, !dbg !3709
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3710
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !3711
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3711
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3712
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !3713
  %6 = load i32, i32* %index1, align 8, !dbg !3713
  %sub2 = sub nsw i32 %4, %6, !dbg !3714
  store i32 %0, i32* %a.addr.i, align 4, !dbg !3715
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !3715
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !3715
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !3716
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !3718
  %cmp.i = icmp slt i32 %7, %8, !dbg !3719
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !3720

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !3721
  store i32 %9, i32* %retval.i, align 4, !dbg !3723
  br label %av_clip_c.exit, !dbg !3723

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !3724
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !3726
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !3727
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !3728

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !3729
  store i32 %12, i32* %retval.i, align 4, !dbg !3731
  br label %av_clip_c.exit, !dbg !3731

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !3732
  store i32 %13, i32* %retval.i, align 4, !dbg !3733
  br label %av_clip_c.exit, !dbg !3733

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !3734
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3735
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !3736
  %16 = load i32, i32* %index3, align 8, !dbg !3737
  %add = add nsw i32 %16, %14, !dbg !3737
  store i32 %add, i32* %index3, align 8, !dbg !3737
  ret void, !dbg !3738
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #5 !dbg !3739 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3742, metadata !1692), !dbg !3743
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3744
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !3745
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !3745
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3746
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !3747
  %sub = sub nsw i32 %1, %call, !dbg !3748
  ret i32 %sub, !dbg !3749
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #5 !dbg !3750 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3753, metadata !1692), !dbg !3754
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3755, metadata !1692), !dbg !3756
  %0 = load i32, i32* %n.addr, align 4, !dbg !3757
  %tobool = icmp ne i32 %0, 0, !dbg !3757
  br i1 %tobool, label %if.else, label %if.then, !dbg !3759

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3760
  br label %return, !dbg !3760

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !3762
  %cmp = icmp sle i32 %1, 25, !dbg !3764
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !3765

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3766
  %3 = load i32, i32* %n.addr, align 4, !dbg !3768
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !3769
  store i32 %call, i32* %retval, align 4, !dbg !3770
  br label %return, !dbg !3770

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3771, metadata !1692), !dbg !3773
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3774
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !3775
  %5 = load i32, i32* %n.addr, align 4, !dbg !3776
  %sub = sub nsw i32 %5, 16, !dbg !3777
  %shl = shl i32 %call3, %sub, !dbg !3778
  store i32 %shl, i32* %ret, align 4, !dbg !3773
  %6 = load i32, i32* %ret, align 4, !dbg !3779
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3780
  %8 = load i32, i32* %n.addr, align 4, !dbg !3781
  %sub4 = sub nsw i32 %8, 16, !dbg !3782
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !3783
  %or = or i32 %6, %call5, !dbg !3784
  store i32 %or, i32* %retval, align 4, !dbg !3785
  br label %return, !dbg !3785

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !3786
  ret i32 %9, !dbg !3786
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !3787 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3788, metadata !1692), !dbg !3789
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3790, metadata !1692), !dbg !3791
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !3792, metadata !1692), !dbg !3793
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3794
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3795
  %1 = load i32, i32* %index, align 8, !dbg !3795
  store i32 %1, i32* %re_index, align 4, !dbg !3793
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !3796, metadata !1692), !dbg !3797
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !3798, metadata !1692), !dbg !3799
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3800
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !3801
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3801
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !3799
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !3802
  %5 = load i32, i32* %re_index, align 4, !dbg !3803
  %6 = load i32, i32* %n.addr, align 4, !dbg !3804
  %add = add i32 %5, %6, !dbg !3805
  %cmp = icmp ugt i32 %4, %add, !dbg !3806
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3807

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !3808
  %8 = load i32, i32* %n.addr, align 4, !dbg !3810
  %add1 = add i32 %7, %8, !dbg !3811
  br label %cond.end, !dbg !3812

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !3813
  br label %cond.end, !dbg !3815

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !3816
  store i32 %cond, i32* %re_index, align 4, !dbg !3818
  %10 = load i32, i32* %re_index, align 4, !dbg !3819
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3820
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !3821
  store i32 %10, i32* %index2, align 8, !dbg !3822
  ret void, !dbg !3823
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !3824 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2478, metadata !1692), !dbg !3825
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3827, metadata !1692), !dbg !3828
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3829, metadata !1692), !dbg !3830
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !3831, metadata !1692), !dbg !3832
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !3833, metadata !1692), !dbg !3834
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3835
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3836
  %1 = load i32, i32* %index, align 8, !dbg !3836
  store i32 %1, i32* %re_index, align 4, !dbg !3834
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !3837, metadata !1692), !dbg !3838
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !3839, metadata !1692), !dbg !3840
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3841
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !3842
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3842
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !3840
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3843
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !3844
  %5 = load i8*, i8** %buffer, align 8, !dbg !3844
  %6 = load i32, i32* %re_index, align 4, !dbg !3845
  %shr = lshr i32 %6, 3, !dbg !3846
  %idx.ext = zext i32 %shr to i64, !dbg !3847
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !3847
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !3848
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !3848
  %8 = load i32, i32* %l, align 1, !dbg !3848
  store i32 %8, i32* %x.addr.i, align 4, !dbg !3849
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !3850
  %shl.i = shl i32 %9, 8, !dbg !3851
  %and.i = and i32 %shl.i, 65280, !dbg !3852
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !3853
  %shr.i = lshr i32 %10, 8, !dbg !3854
  %and1.i = and i32 %shr.i, 255, !dbg !3855
  %or.i = or i32 %and.i, %and1.i, !dbg !3856
  %shl2.i = shl i32 %or.i, 16, !dbg !3857
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !3858
  %shr3.i = lshr i32 %11, 16, !dbg !3859
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3860
  %and5.i = and i32 %shl4.i, 65280, !dbg !3861
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !3862
  %shr6.i = lshr i32 %12, 16, !dbg !3863
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3864
  %and8.i = and i32 %shr7.i, 255, !dbg !3865
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3866
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3867
  %13 = load i32, i32* %re_index, align 4, !dbg !3868
  %and = and i32 %13, 7, !dbg !3869
  %shl = shl i32 %or10.i, %and, !dbg !3870
  store i32 %shl, i32* %re_cache, align 4, !dbg !3871
  %14 = load i32, i32* %re_cache, align 4, !dbg !3872
  %15 = load i32, i32* %n.addr, align 4, !dbg !3873
  %conv = trunc i32 %15 to i8, !dbg !3873
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !3874
  store i32 %call4, i32* %tmp, align 4, !dbg !3875
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !3876
  %17 = load i32, i32* %re_index, align 4, !dbg !3877
  %18 = load i32, i32* %n.addr, align 4, !dbg !3878
  %add = add i32 %17, %18, !dbg !3879
  %cmp = icmp ugt i32 %16, %add, !dbg !3880
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3881

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !3882
  %20 = load i32, i32* %n.addr, align 4, !dbg !3884
  %add6 = add i32 %19, %20, !dbg !3885
  br label %cond.end, !dbg !3886

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !3887
  br label %cond.end, !dbg !3889

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !3890
  store i32 %cond, i32* %re_index, align 4, !dbg !3892
  %22 = load i32, i32* %re_index, align 4, !dbg !3893
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3894
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !3895
  store i32 %22, i32* %index7, align 8, !dbg !3896
  %24 = load i32, i32* %tmp, align 4, !dbg !3897
  ret i32 %24, !dbg !3898
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #5 !dbg !3899 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3902, metadata !1692), !dbg !3903
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3904, metadata !1692), !dbg !3905
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3906
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3907
  %1 = load i32, i32* %index1, align 8, !dbg !3907
  store i32 %1, i32* %index, align 4, !dbg !3905
  call void @llvm.dbg.declare(metadata i8* %result, metadata !3908, metadata !1692), !dbg !3909
  %2 = load i32, i32* %index, align 4, !dbg !3910
  %shr = lshr i32 %2, 3, !dbg !3911
  %idxprom = zext i32 %shr to i64, !dbg !3912
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3912
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !3913
  %4 = load i8*, i8** %buffer, align 8, !dbg !3913
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !3912
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3912
  store i8 %5, i8* %result, align 1, !dbg !3909
  %6 = load i32, i32* %index, align 4, !dbg !3914
  %and = and i32 %6, 7, !dbg !3915
  %7 = load i8, i8* %result, align 1, !dbg !3916
  %conv = zext i8 %7 to i32, !dbg !3916
  %shl = shl i32 %conv, %and, !dbg !3916
  %conv2 = trunc i32 %shl to i8, !dbg !3916
  store i8 %conv2, i8* %result, align 1, !dbg !3916
  %8 = load i8, i8* %result, align 1, !dbg !3917
  %conv3 = zext i8 %8 to i32, !dbg !3917
  %shr4 = ashr i32 %conv3, 7, !dbg !3917
  %conv5 = trunc i32 %shr4 to i8, !dbg !3917
  store i8 %conv5, i8* %result, align 1, !dbg !3917
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3918
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !3920
  %10 = load i32, i32* %index6, align 8, !dbg !3920
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3921
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !3922
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3922
  %cmp = icmp slt i32 %10, %12, !dbg !3923
  br i1 %cmp, label %if.then, label %if.end, !dbg !3924

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !3925
  %inc = add i32 %13, 1, !dbg !3925
  store i32 %inc, i32* %index, align 4, !dbg !3925
  br label %if.end, !dbg !3926

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !3927
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3928
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !3929
  store i32 %14, i32* %index8, align 8, !dbg !3930
  %16 = load i8, i8* %result, align 1, !dbg !3931
  %conv9 = zext i8 %16 to i32, !dbg !3931
  ret i32 %conv9, !dbg !3932
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits1(%struct.GetBitContext* %s) #5 !dbg !3933 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3936, metadata !1692), !dbg !3937
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3938
  call void @skip_bits(%struct.GetBitContext* %0, i32 1), !dbg !3939
  ret void, !dbg !3940
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @align_get_bits(%struct.GetBitContext* %s) #5 !dbg !3941 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3944, metadata !1692), !dbg !3945
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3946, metadata !1692), !dbg !3947
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3948
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !3949
  %sub = sub nsw i32 0, %call, !dbg !3950
  %and = and i32 %sub, 7, !dbg !3951
  store i32 %and, i32* %n, align 4, !dbg !3947
  %1 = load i32, i32* %n, align 4, !dbg !3952
  %tobool = icmp ne i32 %1, 0, !dbg !3952
  br i1 %tobool, label %if.then, label %if.end, !dbg !3954

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3955
  %3 = load i32, i32* %n, align 4, !dbg !3956
  call void @skip_bits(%struct.GetBitContext* %2, i32 %3), !dbg !3957
  br label %if.end, !dbg !3957

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3958
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !3959
  %5 = load i8*, i8** %buffer, align 8, !dbg !3959
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3960
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !3961
  %7 = load i32, i32* %index, align 8, !dbg !3961
  %shr = ashr i32 %7, 3, !dbg !3962
  %idx.ext = sext i32 %shr to i64, !dbg !3963
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !3963
  ret i8* %add.ptr, !dbg !3964
}

declare i32* @av_crc_get_table(i32) #3

; Function Attrs: cold nounwind optsize uwtable
define internal void @dprint_specific_config(%struct.ALSDecContext* %ctx) #0 !dbg !3965 {
entry:
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !3968, metadata !1692), !dbg !3969
  ret void, !dbg !3970
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #5 !dbg !3971 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3972, metadata !1692), !dbg !3973
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3974, metadata !1692), !dbg !3975
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !3976, metadata !1692), !dbg !3977
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !3978, metadata !1692), !dbg !3979
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3980, metadata !1692), !dbg !3981
  store i32 0, i32* %ret, align 4, !dbg !3981
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !3982
  %cmp = icmp sge i32 %0, 2147483135, !dbg !3984
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3985

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !3986
  %cmp1 = icmp slt i32 %1, 0, !dbg !3988
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !3989

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !3990
  %tobool = icmp ne i8* %2, null, !dbg !3990
  br i1 %tobool, label %if.end, label %if.then, !dbg !3992

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !3993
  store i8* null, i8** %buffer.addr, align 8, !dbg !3995
  store i32 -1094995529, i32* %ret, align 4, !dbg !3996
  br label %if.end, !dbg !3997

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !3998
  %add = add nsw i32 %3, 7, !dbg !3999
  %shr = ashr i32 %add, 3, !dbg !4000
  store i32 %shr, i32* %buffer_size, align 4, !dbg !4001
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !4002
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4003
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !4004
  store i8* %4, i8** %buffer3, align 8, !dbg !4005
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !4006
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4007
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !4008
  store i32 %6, i32* %size_in_bits, align 4, !dbg !4009
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !4010
  %add4 = add nsw i32 %8, 8, !dbg !4011
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4012
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !4013
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !4014
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !4015
  %11 = load i32, i32* %buffer_size, align 4, !dbg !4016
  %idx.ext = sext i32 %11 to i64, !dbg !4017
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !4017
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4018
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !4019
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !4020
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4021
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !4022
  store i32 0, i32* %index, align 8, !dbg !4023
  %14 = load i32, i32* %ret, align 4, !dbg !4024
  ret i32 %14, !dbg !4025
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #5 !dbg !4026 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4031, metadata !1692), !dbg !4032
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4033
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4034
  %1 = load i32, i32* %index, align 8, !dbg !4034
  ret i32 %1, !dbg !4035
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #5 !dbg !4036 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !4040, metadata !1692), !dbg !4041
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !4042, metadata !1692), !dbg !4043
  %0 = load i32, i32* %a.addr, align 4, !dbg !4044
  %1 = load i8, i8* %s.addr, align 1, !dbg !4045
  %conv = sext i8 %1 to i32, !dbg !4045
  %sub = sub nsw i32 0, %conv, !dbg !4046
  %conv1 = trunc i32 %sub to i8, !dbg !4047
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !4044, !srcloc !4048
  store i32 %2, i32* %a.addr, align 4, !dbg !4044
  %3 = load i32, i32* %a.addr, align 4, !dbg !4049
  ret i32 %3, !dbg !4050
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

declare void @avpriv_report_missing_feature(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @read_frame_data(%struct.ALSDecContext* %ctx, i32 %ra_frame) #1 !dbg !4051 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %ra_frame.addr = alloca i32, align 4
  %sconf = alloca %struct.ALSSpecificConfig*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %div_blocks = alloca [32 x i32], align 16
  %c = alloca i32, align 4
  %js_blocks = alloca [2 x i32], align 4
  %bs_info = alloca i32, align 4
  %ret = alloca i32, align 4
  %independent_bs = alloca i32, align 4
  %bd = alloca %struct.ALSBlockData, align 8
  %b = alloca i32, align 4
  %ret62 = alloca i32, align 4
  %reverted_channels = alloca i32*, align 8
  %offset = alloca i32, align 4
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !4054, metadata !1692), !dbg !4055
  store i32 %ra_frame, i32* %ra_frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ra_frame.addr, metadata !4056, metadata !1692), !dbg !4057
  call void @llvm.dbg.declare(metadata %struct.ALSSpecificConfig** %sconf, metadata !4058, metadata !1692), !dbg !4059
  %0 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4060
  %sconf1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %0, i32 0, i32 1, !dbg !4061
  store %struct.ALSSpecificConfig* %sconf1, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4059
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !4062, metadata !1692), !dbg !4063
  %1 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4064
  %avctx2 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %1, i32 0, i32 0, !dbg !4065
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx2, align 8, !dbg !4065
  store %struct.AVCodecContext* %2, %struct.AVCodecContext** %avctx, align 8, !dbg !4063
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !4066, metadata !1692), !dbg !4067
  %3 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4068
  %gb3 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %3, i32 0, i32 2, !dbg !4069
  store %struct.GetBitContext* %gb3, %struct.GetBitContext** %gb, align 8, !dbg !4067
  call void @llvm.dbg.declare(metadata [32 x i32]* %div_blocks, metadata !4070, metadata !1692), !dbg !4072
  call void @llvm.dbg.declare(metadata i32* %c, metadata !4073, metadata !1692), !dbg !4074
  call void @llvm.dbg.declare(metadata [2 x i32]* %js_blocks, metadata !4075, metadata !1692), !dbg !4078
  call void @llvm.dbg.declare(metadata i32* %bs_info, metadata !4079, metadata !1692), !dbg !4080
  store i32 0, i32* %bs_info, align 4, !dbg !4080
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4081, metadata !1692), !dbg !4082
  %4 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4083
  %ra_flag = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %4, i32 0, i32 6, !dbg !4085
  %5 = load i32, i32* %ra_flag, align 8, !dbg !4085
  %cmp = icmp eq i32 %5, 1, !dbg !4086
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4087

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* %ra_frame.addr, align 4, !dbg !4088
  %tobool = icmp ne i32 %6, 0, !dbg !4088
  br i1 %tobool, label %if.then, label %if.end, !dbg !4090

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4091
  call void @skip_bits_long(%struct.GetBitContext* %7, i32 32), !dbg !4092
  br label %if.end, !dbg !4092

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4093
  %mc_coding = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %8, i32 0, i32 15, !dbg !4095
  %9 = load i32, i32* %mc_coding, align 4, !dbg !4095
  %tobool4 = icmp ne i32 %9, 0, !dbg !4093
  br i1 %tobool4, label %land.lhs.true5, label %if.end9, !dbg !4096

land.lhs.true5:                                   ; preds = %if.end
  %10 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4097
  %joint_stereo = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %10, i32 0, i32 14, !dbg !4099
  %11 = load i32, i32* %joint_stereo, align 8, !dbg !4099
  %tobool6 = icmp ne i32 %11, 0, !dbg !4097
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !4100

if.then7:                                         ; preds = %land.lhs.true5
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4101
  %call = call i32 @get_bits1(%struct.GetBitContext* %12), !dbg !4103
  %13 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4104
  %js_switch = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %13, i32 0, i32 9, !dbg !4105
  store i32 %call, i32* %js_switch, align 8, !dbg !4106
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4107
  %call8 = call i8* @align_get_bits(%struct.GetBitContext* %14), !dbg !4108
  br label %if.end9, !dbg !4109

if.end9:                                          ; preds = %if.then7, %land.lhs.true5, %if.end
  %15 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4110
  %mc_coding10 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %15, i32 0, i32 15, !dbg !4112
  %16 = load i32, i32* %mc_coding10, align 4, !dbg !4112
  %tobool11 = icmp ne i32 %16, 0, !dbg !4110
  br i1 %tobool11, label %lor.lhs.false, label %if.then14, !dbg !4113

lor.lhs.false:                                    ; preds = %if.end9
  %17 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4114
  %js_switch12 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %17, i32 0, i32 9, !dbg !4116
  %18 = load i32, i32* %js_switch12, align 8, !dbg !4116
  %tobool13 = icmp ne i32 %18, 0, !dbg !4114
  br i1 %tobool13, label %if.then14, label %if.else61, !dbg !4117

if.then14:                                        ; preds = %lor.lhs.false, %if.end9
  call void @llvm.dbg.declare(metadata i32* %independent_bs, metadata !4118, metadata !1692), !dbg !4120
  %19 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4121
  %joint_stereo15 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %19, i32 0, i32 14, !dbg !4122
  %20 = load i32, i32* %joint_stereo15, align 8, !dbg !4122
  %tobool16 = icmp ne i32 %20, 0, !dbg !4123
  %lnot = xor i1 %tobool16, true, !dbg !4123
  %lnot.ext = zext i1 %lnot to i32, !dbg !4123
  store i32 %lnot.ext, i32* %independent_bs, align 4, !dbg !4120
  store i32 0, i32* %c, align 4, !dbg !4124
  br label %for.cond, !dbg !4126

for.cond:                                         ; preds = %for.inc, %if.then14
  %21 = load i32, i32* %c, align 4, !dbg !4127
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4130
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 83, !dbg !4131
  %23 = load i32, i32* %channels, align 4, !dbg !4131
  %cmp17 = icmp ult i32 %21, %23, !dbg !4132
  br i1 %cmp17, label %for.body, label %for.end, !dbg !4133

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %js_blocks, i64 0, i64 0, !dbg !4134
  store i32 0, i32* %arrayidx, align 4, !dbg !4136
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %js_blocks, i64 0, i64 1, !dbg !4137
  store i32 0, i32* %arrayidx18, align 4, !dbg !4138
  %24 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4139
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %div_blocks, i32 0, i32 0, !dbg !4140
  call void @get_block_sizes(%struct.ALSDecContext* %24, i32* %arraydecay, i32* %bs_info), !dbg !4141
  %25 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4142
  %joint_stereo19 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %25, i32 0, i32 14, !dbg !4144
  %26 = load i32, i32* %joint_stereo19, align 8, !dbg !4144
  %tobool20 = icmp ne i32 %26, 0, !dbg !4142
  br i1 %tobool20, label %land.lhs.true21, label %if.end27, !dbg !4145

land.lhs.true21:                                  ; preds = %for.body
  %27 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4146
  %block_switching = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %27, i32 0, i32 11, !dbg !4148
  %28 = load i32, i32* %block_switching, align 4, !dbg !4148
  %tobool22 = icmp ne i32 %28, 0, !dbg !4146
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !4149

if.then23:                                        ; preds = %land.lhs.true21
  %29 = load i32, i32* %bs_info, align 4, !dbg !4150
  %shr = lshr i32 %29, 31, !dbg !4152
  %tobool24 = icmp ne i32 %shr, 0, !dbg !4152
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !4153

if.then25:                                        ; preds = %if.then23
  store i32 2, i32* %independent_bs, align 4, !dbg !4154
  br label %if.end26, !dbg !4155

if.end26:                                         ; preds = %if.then25, %if.then23
  br label %if.end27, !dbg !4156

if.end27:                                         ; preds = %if.end26, %land.lhs.true21, %for.body
  %30 = load i32, i32* %c, align 4, !dbg !4158
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4160
  %channels28 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 83, !dbg !4161
  %32 = load i32, i32* %channels28, align 4, !dbg !4161
  %sub = sub nsw i32 %32, 1, !dbg !4162
  %cmp29 = icmp eq i32 %30, %sub, !dbg !4163
  br i1 %cmp29, label %if.then32, label %lor.lhs.false30, !dbg !4164

lor.lhs.false30:                                  ; preds = %if.end27
  %33 = load i32, i32* %c, align 4, !dbg !4165
  %and = and i32 %33, 1, !dbg !4167
  %tobool31 = icmp ne i32 %and, 0, !dbg !4167
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !4168

if.then32:                                        ; preds = %lor.lhs.false30, %if.end27
  store i32 1, i32* %independent_bs, align 4, !dbg !4169
  br label %if.end33, !dbg !4170

if.end33:                                         ; preds = %if.then32, %lor.lhs.false30
  %34 = load i32, i32* %independent_bs, align 4, !dbg !4171
  %tobool34 = icmp ne i32 %34, 0, !dbg !4171
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !4173

if.then35:                                        ; preds = %if.end33
  %35 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4174
  %36 = load i32, i32* %ra_frame.addr, align 4, !dbg !4176
  %37 = load i32, i32* %c, align 4, !dbg !4177
  %arraydecay36 = getelementptr inbounds [32 x i32], [32 x i32]* %div_blocks, i32 0, i32 0, !dbg !4178
  %arraydecay37 = getelementptr inbounds [2 x i32], [2 x i32]* %js_blocks, i32 0, i32 0, !dbg !4179
  %call38 = call i32 @decode_blocks_ind(%struct.ALSDecContext* %35, i32 %36, i32 %37, i32* %arraydecay36, i32* %arraydecay37), !dbg !4180
  store i32 %call38, i32* %ret, align 4, !dbg !4181
  %38 = load i32, i32* %ret, align 4, !dbg !4182
  %cmp39 = icmp slt i32 %38, 0, !dbg !4184
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !4185

if.then40:                                        ; preds = %if.then35
  %39 = load i32, i32* %ret, align 4, !dbg !4186
  store i32 %39, i32* %retval, align 4, !dbg !4187
  br label %return, !dbg !4187

if.end41:                                         ; preds = %if.then35
  %40 = load i32, i32* %independent_bs, align 4, !dbg !4188
  %dec = add nsw i32 %40, -1, !dbg !4188
  store i32 %dec, i32* %independent_bs, align 4, !dbg !4188
  br label %if.end48, !dbg !4189

if.else:                                          ; preds = %if.end33
  %41 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4190
  %42 = load i32, i32* %ra_frame.addr, align 4, !dbg !4192
  %43 = load i32, i32* %c, align 4, !dbg !4193
  %arraydecay42 = getelementptr inbounds [32 x i32], [32 x i32]* %div_blocks, i32 0, i32 0, !dbg !4194
  %arraydecay43 = getelementptr inbounds [2 x i32], [2 x i32]* %js_blocks, i32 0, i32 0, !dbg !4195
  %call44 = call i32 @decode_blocks(%struct.ALSDecContext* %41, i32 %42, i32 %43, i32* %arraydecay42, i32* %arraydecay43), !dbg !4196
  store i32 %call44, i32* %ret, align 4, !dbg !4197
  %44 = load i32, i32* %ret, align 4, !dbg !4198
  %cmp45 = icmp slt i32 %44, 0, !dbg !4200
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !4201

if.then46:                                        ; preds = %if.else
  %45 = load i32, i32* %ret, align 4, !dbg !4202
  store i32 %45, i32* %retval, align 4, !dbg !4203
  br label %return, !dbg !4203

if.end47:                                         ; preds = %if.else
  %46 = load i32, i32* %c, align 4, !dbg !4204
  %inc = add i32 %46, 1, !dbg !4204
  store i32 %inc, i32* %c, align 4, !dbg !4204
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end41
  %47 = load i32, i32* %c, align 4, !dbg !4205
  %idxprom = zext i32 %47 to i64, !dbg !4206
  %48 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4206
  %raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %48, i32 0, i32 33, !dbg !4207
  %49 = load i32**, i32*** %raw_samples, align 8, !dbg !4207
  %arrayidx49 = getelementptr inbounds i32*, i32** %49, i64 %idxprom, !dbg !4206
  %50 = load i32*, i32** %arrayidx49, align 8, !dbg !4206
  %51 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4208
  %max_order = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %51, i32 0, i32 10, !dbg !4209
  %52 = load i32, i32* %max_order, align 8, !dbg !4209
  %idx.ext = sext i32 %52 to i64, !dbg !4210
  %idx.neg = sub i64 0, %idx.ext, !dbg !4210
  %add.ptr = getelementptr inbounds i32, i32* %50, i64 %idx.neg, !dbg !4210
  %53 = bitcast i32* %add.ptr to i8*, !dbg !4211
  %54 = load i32, i32* %c, align 4, !dbg !4212
  %idxprom50 = zext i32 %54 to i64, !dbg !4213
  %55 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4213
  %raw_samples51 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %55, i32 0, i32 33, !dbg !4214
  %56 = load i32**, i32*** %raw_samples51, align 8, !dbg !4214
  %arrayidx52 = getelementptr inbounds i32*, i32** %56, i64 %idxprom50, !dbg !4213
  %57 = load i32*, i32** %arrayidx52, align 8, !dbg !4213
  %58 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4215
  %max_order53 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %58, i32 0, i32 10, !dbg !4216
  %59 = load i32, i32* %max_order53, align 8, !dbg !4216
  %idx.ext54 = sext i32 %59 to i64, !dbg !4217
  %idx.neg55 = sub i64 0, %idx.ext54, !dbg !4217
  %add.ptr56 = getelementptr inbounds i32, i32* %57, i64 %idx.neg55, !dbg !4217
  %60 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4218
  %frame_length = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %60, i32 0, i32 4, !dbg !4219
  %61 = load i32, i32* %frame_length, align 8, !dbg !4219
  %idx.ext57 = sext i32 %61 to i64, !dbg !4220
  %add.ptr58 = getelementptr inbounds i32, i32* %add.ptr56, i64 %idx.ext57, !dbg !4220
  %62 = bitcast i32* %add.ptr58 to i8*, !dbg !4211
  %63 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4221
  %max_order59 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %63, i32 0, i32 10, !dbg !4222
  %64 = load i32, i32* %max_order59, align 8, !dbg !4222
  %conv = sext i32 %64 to i64, !dbg !4221
  %mul = mul i64 4, %conv, !dbg !4223
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %53, i8* %62, i64 %mul, i32 4, i1 false), !dbg !4211
  br label %for.inc, !dbg !4224

for.inc:                                          ; preds = %if.end48
  %65 = load i32, i32* %c, align 4, !dbg !4225
  %inc60 = add i32 %65, 1, !dbg !4225
  store i32 %inc60, i32* %c, align 4, !dbg !4225
  br label %for.cond, !dbg !4227, !llvm.loop !4228

for.end:                                          ; preds = %for.cond
  br label %if.end257, !dbg !4230

if.else61:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.ALSBlockData* %bd, metadata !4231, metadata !1692), !dbg !4251
  %66 = bitcast %struct.ALSBlockData* %bd to i8*, !dbg !4251
  call void @llvm.memset.p0i8.i64(i8* %66, i8 0, i64 112, i32 8, i1 false), !dbg !4251
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4252, metadata !1692), !dbg !4253
  call void @llvm.dbg.declare(metadata i32* %ret62, metadata !4254, metadata !1692), !dbg !4255
  call void @llvm.dbg.declare(metadata i32** %reverted_channels, metadata !4256, metadata !1692), !dbg !4257
  %67 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4258
  %reverted_channels63 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %67, i32 0, i32 31, !dbg !4259
  %68 = load i32*, i32** %reverted_channels63, align 8, !dbg !4259
  store i32* %68, i32** %reverted_channels, align 8, !dbg !4257
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !4260, metadata !1692), !dbg !4261
  store i32 0, i32* %offset, align 4, !dbg !4261
  store i32 0, i32* %c, align 4, !dbg !4262
  br label %for.cond64, !dbg !4264

for.cond64:                                       ; preds = %for.inc76, %if.else61
  %69 = load i32, i32* %c, align 4, !dbg !4265
  %70 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4268
  %channels65 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %70, i32 0, i32 83, !dbg !4269
  %71 = load i32, i32* %channels65, align 4, !dbg !4269
  %cmp66 = icmp ult i32 %69, %71, !dbg !4270
  br i1 %cmp66, label %for.body68, label %for.end78, !dbg !4271

for.body68:                                       ; preds = %for.cond64
  %72 = load i32, i32* %c, align 4, !dbg !4272
  %idxprom69 = zext i32 %72 to i64, !dbg !4274
  %73 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4274
  %chan_data = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %73, i32 0, i32 29, !dbg !4275
  %74 = load %struct.ALSChannelData**, %struct.ALSChannelData*** %chan_data, align 8, !dbg !4275
  %arrayidx70 = getelementptr inbounds %struct.ALSChannelData*, %struct.ALSChannelData** %74, i64 %idxprom69, !dbg !4274
  %75 = load %struct.ALSChannelData*, %struct.ALSChannelData** %arrayidx70, align 8, !dbg !4274
  %76 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4276
  %chan_data_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %76, i32 0, i32 30, !dbg !4277
  %77 = load %struct.ALSChannelData*, %struct.ALSChannelData** %chan_data_buffer, align 8, !dbg !4277
  %cmp71 = icmp ult %struct.ALSChannelData* %75, %77, !dbg !4278
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !4279

if.then73:                                        ; preds = %for.body68
  %78 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4280
  %avctx74 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %78, i32 0, i32 0, !dbg !4282
  %79 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx74, align 8, !dbg !4282
  %80 = bitcast %struct.AVCodecContext* %79 to i8*, !dbg !4280
  call void (i8*, i32, i8*, ...) @av_log(i8* %80, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i32 0, i32 0)), !dbg !4283
  store i32 -1094995529, i32* %retval, align 4, !dbg !4284
  br label %return, !dbg !4284

if.end75:                                         ; preds = %for.body68
  br label %for.inc76, !dbg !4285

for.inc76:                                        ; preds = %if.end75
  %81 = load i32, i32* %c, align 4, !dbg !4287
  %inc77 = add i32 %81, 1, !dbg !4287
  store i32 %inc77, i32* %c, align 4, !dbg !4287
  br label %for.cond64, !dbg !4289, !llvm.loop !4290

for.end78:                                        ; preds = %for.cond64
  %82 = load i32*, i32** %reverted_channels, align 8, !dbg !4292
  %83 = bitcast i32* %82 to i8*, !dbg !4293
  %84 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4294
  %channels79 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %84, i32 0, i32 83, !dbg !4295
  %85 = load i32, i32* %channels79, align 4, !dbg !4295
  %conv80 = sext i32 %85 to i64, !dbg !4294
  %mul81 = mul i64 4, %conv80, !dbg !4296
  call void @llvm.memset.p0i8.i64(i8* %83, i8 0, i64 %mul81, i32 4, i1 false), !dbg !4293
  %86 = load i32, i32* %ra_frame.addr, align 4, !dbg !4297
  %ra_block = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 1, !dbg !4298
  store i32 %86, i32* %ra_block, align 4, !dbg !4299
  %87 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4300
  %prev_raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %87, i32 0, i32 32, !dbg !4301
  %88 = load i32*, i32** %prev_raw_samples, align 8, !dbg !4301
  %prev_raw_samples82 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 13, !dbg !4302
  store i32* %88, i32** %prev_raw_samples82, align 8, !dbg !4303
  %89 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4304
  %arraydecay83 = getelementptr inbounds [32 x i32], [32 x i32]* %div_blocks, i32 0, i32 0, !dbg !4305
  call void @get_block_sizes(%struct.ALSDecContext* %89, i32* %arraydecay83, i32* %bs_info), !dbg !4306
  store i32 0, i32* %b, align 4, !dbg !4307
  br label %for.cond84, !dbg !4309

for.cond84:                                       ; preds = %for.inc226, %for.end78
  %90 = load i32, i32* %b, align 4, !dbg !4310
  %91 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4313
  %num_blocks = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %91, i32 0, i32 11, !dbg !4314
  %92 = load i32, i32* %num_blocks, align 8, !dbg !4314
  %cmp85 = icmp ult i32 %90, %92, !dbg !4315
  br i1 %cmp85, label %for.body87, label %for.end228, !dbg !4316

for.body87:                                       ; preds = %for.cond84
  %93 = load i32, i32* %b, align 4, !dbg !4317
  %idxprom88 = sext i32 %93 to i64, !dbg !4319
  %arrayidx89 = getelementptr inbounds [32 x i32], [32 x i32]* %div_blocks, i64 0, i64 %idxprom88, !dbg !4319
  %94 = load i32, i32* %arrayidx89, align 4, !dbg !4319
  %block_length = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 0, !dbg !4320
  store i32 %94, i32* %block_length, align 8, !dbg !4321
  %block_length90 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 0, !dbg !4322
  %95 = load i32, i32* %block_length90, align 8, !dbg !4322
  %cmp91 = icmp ule i32 %95, 0, !dbg !4324
  br i1 %cmp91, label %if.then93, label %if.end96, !dbg !4325

if.then93:                                        ; preds = %for.body87
  %96 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4326
  %avctx94 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %96, i32 0, i32 0, !dbg !4328
  %97 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx94, align 8, !dbg !4328
  %98 = bitcast %struct.AVCodecContext* %97 to i8*, !dbg !4326
  %block_length95 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 0, !dbg !4329
  %99 = load i32, i32* %block_length95, align 8, !dbg !4329
  call void (i8*, i32, i8*, ...) @av_log(i8* %98, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i32 0, i32 0), i32 %99), !dbg !4330
  br label %for.inc226, !dbg !4331

if.end96:                                         ; preds = %for.body87
  store i32 0, i32* %c, align 4, !dbg !4332
  br label %for.cond97, !dbg !4334

for.cond97:                                       ; preds = %for.inc148, %if.end96
  %100 = load i32, i32* %c, align 4, !dbg !4335
  %101 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4338
  %channels98 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %101, i32 0, i32 83, !dbg !4339
  %102 = load i32, i32* %channels98, align 4, !dbg !4339
  %cmp99 = icmp ult i32 %100, %102, !dbg !4340
  br i1 %cmp99, label %for.body101, label %for.end150, !dbg !4341

for.body101:                                      ; preds = %for.cond97
  %103 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4342
  %const_block = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %103, i32 0, i32 16, !dbg !4344
  %104 = load i32*, i32** %const_block, align 8, !dbg !4344
  %105 = load i32, i32* %c, align 4, !dbg !4345
  %idx.ext102 = zext i32 %105 to i64, !dbg !4346
  %add.ptr103 = getelementptr inbounds i32, i32* %104, i64 %idx.ext102, !dbg !4346
  %const_block104 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 2, !dbg !4347
  store i32* %add.ptr103, i32** %const_block104, align 8, !dbg !4348
  %106 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4349
  %shift_lsbs = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %106, i32 0, i32 17, !dbg !4350
  %107 = load i32*, i32** %shift_lsbs, align 8, !dbg !4350
  %108 = load i32, i32* %c, align 4, !dbg !4351
  %idx.ext105 = zext i32 %108 to i64, !dbg !4352
  %add.ptr106 = getelementptr inbounds i32, i32* %107, i64 %idx.ext105, !dbg !4352
  %shift_lsbs107 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 4, !dbg !4353
  store i32* %add.ptr106, i32** %shift_lsbs107, align 8, !dbg !4354
  %109 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4355
  %opt_order = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %109, i32 0, i32 18, !dbg !4356
  %110 = load i32*, i32** %opt_order, align 8, !dbg !4356
  %111 = load i32, i32* %c, align 4, !dbg !4357
  %idx.ext108 = zext i32 %111 to i64, !dbg !4358
  %add.ptr109 = getelementptr inbounds i32, i32* %110, i64 %idx.ext108, !dbg !4358
  %opt_order110 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 5, !dbg !4359
  store i32* %add.ptr109, i32** %opt_order110, align 8, !dbg !4360
  %112 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4361
  %store_prev_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %112, i32 0, i32 19, !dbg !4362
  %113 = load i32*, i32** %store_prev_samples, align 8, !dbg !4362
  %114 = load i32, i32* %c, align 4, !dbg !4363
  %idx.ext111 = zext i32 %114 to i64, !dbg !4364
  %add.ptr112 = getelementptr inbounds i32, i32* %113, i64 %idx.ext111, !dbg !4364
  %store_prev_samples113 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 6, !dbg !4365
  store i32* %add.ptr112, i32** %store_prev_samples113, align 8, !dbg !4366
  %115 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4367
  %use_ltp = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %115, i32 0, i32 20, !dbg !4368
  %116 = load i32*, i32** %use_ltp, align 8, !dbg !4368
  %117 = load i32, i32* %c, align 4, !dbg !4369
  %idx.ext114 = zext i32 %117 to i64, !dbg !4370
  %add.ptr115 = getelementptr inbounds i32, i32* %116, i64 %idx.ext114, !dbg !4370
  %use_ltp116 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 7, !dbg !4371
  store i32* %add.ptr115, i32** %use_ltp116, align 8, !dbg !4372
  %118 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4373
  %ltp_lag = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %118, i32 0, i32 21, !dbg !4374
  %119 = load i32*, i32** %ltp_lag, align 8, !dbg !4374
  %120 = load i32, i32* %c, align 4, !dbg !4375
  %idx.ext117 = zext i32 %120 to i64, !dbg !4376
  %add.ptr118 = getelementptr inbounds i32, i32* %119, i64 %idx.ext117, !dbg !4376
  %ltp_lag119 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 8, !dbg !4377
  store i32* %add.ptr118, i32** %ltp_lag119, align 8, !dbg !4378
  %121 = load i32, i32* %c, align 4, !dbg !4379
  %idxprom120 = zext i32 %121 to i64, !dbg !4380
  %122 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4380
  %ltp_gain = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %122, i32 0, i32 22, !dbg !4381
  %123 = load i32**, i32*** %ltp_gain, align 8, !dbg !4381
  %arrayidx121 = getelementptr inbounds i32*, i32** %123, i64 %idxprom120, !dbg !4380
  %124 = load i32*, i32** %arrayidx121, align 8, !dbg !4380
  %ltp_gain122 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 9, !dbg !4382
  store i32* %124, i32** %ltp_gain122, align 8, !dbg !4383
  %125 = load i32, i32* %c, align 4, !dbg !4384
  %idxprom123 = zext i32 %125 to i64, !dbg !4385
  %126 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4385
  %lpc_cof = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %126, i32 0, i32 26, !dbg !4386
  %127 = load i32**, i32*** %lpc_cof, align 8, !dbg !4386
  %arrayidx124 = getelementptr inbounds i32*, i32** %127, i64 %idxprom123, !dbg !4385
  %128 = load i32*, i32** %arrayidx124, align 8, !dbg !4385
  %lpc_cof125 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 11, !dbg !4387
  store i32* %128, i32** %lpc_cof125, align 8, !dbg !4388
  %129 = load i32, i32* %c, align 4, !dbg !4389
  %idxprom126 = zext i32 %129 to i64, !dbg !4390
  %130 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4390
  %quant_cof = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %130, i32 0, i32 24, !dbg !4391
  %131 = load i32**, i32*** %quant_cof, align 8, !dbg !4391
  %arrayidx127 = getelementptr inbounds i32*, i32** %131, i64 %idxprom126, !dbg !4390
  %132 = load i32*, i32** %arrayidx127, align 8, !dbg !4390
  %quant_cof128 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 10, !dbg !4392
  store i32* %132, i32** %quant_cof128, align 8, !dbg !4393
  %133 = load i32, i32* %c, align 4, !dbg !4394
  %idxprom129 = zext i32 %133 to i64, !dbg !4395
  %134 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4395
  %raw_samples130 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %134, i32 0, i32 33, !dbg !4396
  %135 = load i32**, i32*** %raw_samples130, align 8, !dbg !4396
  %arrayidx131 = getelementptr inbounds i32*, i32** %135, i64 %idxprom129, !dbg !4395
  %136 = load i32*, i32** %arrayidx131, align 8, !dbg !4395
  %137 = load i32, i32* %offset, align 4, !dbg !4397
  %idx.ext132 = zext i32 %137 to i64, !dbg !4398
  %add.ptr133 = getelementptr inbounds i32, i32* %136, i64 %idx.ext132, !dbg !4398
  %raw_samples134 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 12, !dbg !4399
  store i32* %add.ptr133, i32** %raw_samples134, align 8, !dbg !4400
  %raw_other = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 14, !dbg !4401
  store i32* null, i32** %raw_other, align 8, !dbg !4402
  %138 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4403
  %call135 = call i32 @read_block(%struct.ALSDecContext* %138, %struct.ALSBlockData* %bd), !dbg !4405
  store i32 %call135, i32* %ret62, align 4, !dbg !4406
  %cmp136 = icmp slt i32 %call135, 0, !dbg !4407
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !4408

if.then138:                                       ; preds = %for.body101
  %139 = load i32, i32* %ret62, align 4, !dbg !4409
  store i32 %139, i32* %retval, align 4, !dbg !4410
  br label %return, !dbg !4410

if.end139:                                        ; preds = %for.body101
  %140 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4411
  %141 = load i32, i32* %c, align 4, !dbg !4413
  %idxprom140 = zext i32 %141 to i64, !dbg !4414
  %142 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4414
  %chan_data141 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %142, i32 0, i32 29, !dbg !4415
  %143 = load %struct.ALSChannelData**, %struct.ALSChannelData*** %chan_data141, align 8, !dbg !4415
  %arrayidx142 = getelementptr inbounds %struct.ALSChannelData*, %struct.ALSChannelData** %143, i64 %idxprom140, !dbg !4414
  %144 = load %struct.ALSChannelData*, %struct.ALSChannelData** %arrayidx142, align 8, !dbg !4414
  %145 = load i32, i32* %c, align 4, !dbg !4416
  %call143 = call i32 @read_channel_data(%struct.ALSDecContext* %140, %struct.ALSChannelData* %144, i32 %145), !dbg !4417
  store i32 %call143, i32* %ret62, align 4, !dbg !4418
  %cmp144 = icmp slt i32 %call143, 0, !dbg !4419
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !4420

if.then146:                                       ; preds = %if.end139
  %146 = load i32, i32* %ret62, align 4, !dbg !4421
  store i32 %146, i32* %retval, align 4, !dbg !4422
  br label %return, !dbg !4422

if.end147:                                        ; preds = %if.end139
  br label %for.inc148, !dbg !4423

for.inc148:                                       ; preds = %if.end147
  %147 = load i32, i32* %c, align 4, !dbg !4424
  %inc149 = add i32 %147, 1, !dbg !4424
  store i32 %inc149, i32* %c, align 4, !dbg !4424
  br label %for.cond97, !dbg !4426, !llvm.loop !4427

for.end150:                                       ; preds = %for.cond97
  store i32 0, i32* %c, align 4, !dbg !4429
  br label %for.cond151, !dbg !4431

for.cond151:                                      ; preds = %for.inc162, %for.end150
  %148 = load i32, i32* %c, align 4, !dbg !4432
  %149 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4435
  %channels152 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %149, i32 0, i32 83, !dbg !4436
  %150 = load i32, i32* %channels152, align 4, !dbg !4436
  %cmp153 = icmp ult i32 %148, %150, !dbg !4437
  br i1 %cmp153, label %for.body155, label %for.end164, !dbg !4438

for.body155:                                      ; preds = %for.cond151
  %151 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4439
  %152 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4441
  %chan_data156 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %152, i32 0, i32 29, !dbg !4442
  %153 = load %struct.ALSChannelData**, %struct.ALSChannelData*** %chan_data156, align 8, !dbg !4442
  %154 = load i32*, i32** %reverted_channels, align 8, !dbg !4443
  %155 = load i32, i32* %offset, align 4, !dbg !4444
  %156 = load i32, i32* %c, align 4, !dbg !4445
  %call157 = call i32 @revert_channel_correlation(%struct.ALSDecContext* %151, %struct.ALSBlockData* %bd, %struct.ALSChannelData** %153, i32* %154, i32 %155, i32 %156), !dbg !4446
  store i32 %call157, i32* %ret62, align 4, !dbg !4447
  %157 = load i32, i32* %ret62, align 4, !dbg !4448
  %cmp158 = icmp slt i32 %157, 0, !dbg !4450
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !4451

if.then160:                                       ; preds = %for.body155
  %158 = load i32, i32* %ret62, align 4, !dbg !4452
  store i32 %158, i32* %retval, align 4, !dbg !4453
  br label %return, !dbg !4453

if.end161:                                        ; preds = %for.body155
  br label %for.inc162, !dbg !4454

for.inc162:                                       ; preds = %if.end161
  %159 = load i32, i32* %c, align 4, !dbg !4455
  %inc163 = add i32 %159, 1, !dbg !4455
  store i32 %inc163, i32* %c, align 4, !dbg !4455
  br label %for.cond151, !dbg !4457, !llvm.loop !4458

for.end164:                                       ; preds = %for.cond151
  store i32 0, i32* %c, align 4, !dbg !4460
  br label %for.cond165, !dbg !4462

for.cond165:                                      ; preds = %for.inc217, %for.end164
  %160 = load i32, i32* %c, align 4, !dbg !4463
  %161 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4466
  %channels166 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %161, i32 0, i32 83, !dbg !4467
  %162 = load i32, i32* %channels166, align 4, !dbg !4467
  %cmp167 = icmp ult i32 %160, %162, !dbg !4468
  br i1 %cmp167, label %for.body169, label %for.end219, !dbg !4469

for.body169:                                      ; preds = %for.cond165
  %163 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4470
  %const_block170 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %163, i32 0, i32 16, !dbg !4472
  %164 = load i32*, i32** %const_block170, align 8, !dbg !4472
  %165 = load i32, i32* %c, align 4, !dbg !4473
  %idx.ext171 = zext i32 %165 to i64, !dbg !4474
  %add.ptr172 = getelementptr inbounds i32, i32* %164, i64 %idx.ext171, !dbg !4474
  %const_block173 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 2, !dbg !4475
  store i32* %add.ptr172, i32** %const_block173, align 8, !dbg !4476
  %166 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4477
  %shift_lsbs174 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %166, i32 0, i32 17, !dbg !4478
  %167 = load i32*, i32** %shift_lsbs174, align 8, !dbg !4478
  %168 = load i32, i32* %c, align 4, !dbg !4479
  %idx.ext175 = zext i32 %168 to i64, !dbg !4480
  %add.ptr176 = getelementptr inbounds i32, i32* %167, i64 %idx.ext175, !dbg !4480
  %shift_lsbs177 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 4, !dbg !4481
  store i32* %add.ptr176, i32** %shift_lsbs177, align 8, !dbg !4482
  %169 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4483
  %opt_order178 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %169, i32 0, i32 18, !dbg !4484
  %170 = load i32*, i32** %opt_order178, align 8, !dbg !4484
  %171 = load i32, i32* %c, align 4, !dbg !4485
  %idx.ext179 = zext i32 %171 to i64, !dbg !4486
  %add.ptr180 = getelementptr inbounds i32, i32* %170, i64 %idx.ext179, !dbg !4486
  %opt_order181 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 5, !dbg !4487
  store i32* %add.ptr180, i32** %opt_order181, align 8, !dbg !4488
  %172 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4489
  %store_prev_samples182 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %172, i32 0, i32 19, !dbg !4490
  %173 = load i32*, i32** %store_prev_samples182, align 8, !dbg !4490
  %174 = load i32, i32* %c, align 4, !dbg !4491
  %idx.ext183 = zext i32 %174 to i64, !dbg !4492
  %add.ptr184 = getelementptr inbounds i32, i32* %173, i64 %idx.ext183, !dbg !4492
  %store_prev_samples185 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 6, !dbg !4493
  store i32* %add.ptr184, i32** %store_prev_samples185, align 8, !dbg !4494
  %175 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4495
  %use_ltp186 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %175, i32 0, i32 20, !dbg !4496
  %176 = load i32*, i32** %use_ltp186, align 8, !dbg !4496
  %177 = load i32, i32* %c, align 4, !dbg !4497
  %idx.ext187 = zext i32 %177 to i64, !dbg !4498
  %add.ptr188 = getelementptr inbounds i32, i32* %176, i64 %idx.ext187, !dbg !4498
  %use_ltp189 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 7, !dbg !4499
  store i32* %add.ptr188, i32** %use_ltp189, align 8, !dbg !4500
  %178 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4501
  %ltp_lag190 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %178, i32 0, i32 21, !dbg !4502
  %179 = load i32*, i32** %ltp_lag190, align 8, !dbg !4502
  %180 = load i32, i32* %c, align 4, !dbg !4503
  %idx.ext191 = zext i32 %180 to i64, !dbg !4504
  %add.ptr192 = getelementptr inbounds i32, i32* %179, i64 %idx.ext191, !dbg !4504
  %ltp_lag193 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 8, !dbg !4505
  store i32* %add.ptr192, i32** %ltp_lag193, align 8, !dbg !4506
  %181 = load i32, i32* %c, align 4, !dbg !4507
  %idxprom194 = zext i32 %181 to i64, !dbg !4508
  %182 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4508
  %ltp_gain195 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %182, i32 0, i32 22, !dbg !4509
  %183 = load i32**, i32*** %ltp_gain195, align 8, !dbg !4509
  %arrayidx196 = getelementptr inbounds i32*, i32** %183, i64 %idxprom194, !dbg !4508
  %184 = load i32*, i32** %arrayidx196, align 8, !dbg !4508
  %ltp_gain197 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 9, !dbg !4510
  store i32* %184, i32** %ltp_gain197, align 8, !dbg !4511
  %185 = load i32, i32* %c, align 4, !dbg !4512
  %idxprom198 = zext i32 %185 to i64, !dbg !4513
  %186 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4513
  %lpc_cof199 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %186, i32 0, i32 26, !dbg !4514
  %187 = load i32**, i32*** %lpc_cof199, align 8, !dbg !4514
  %arrayidx200 = getelementptr inbounds i32*, i32** %187, i64 %idxprom198, !dbg !4513
  %188 = load i32*, i32** %arrayidx200, align 8, !dbg !4513
  %lpc_cof201 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 11, !dbg !4515
  store i32* %188, i32** %lpc_cof201, align 8, !dbg !4516
  %189 = load i32, i32* %c, align 4, !dbg !4517
  %idxprom202 = zext i32 %189 to i64, !dbg !4518
  %190 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4518
  %quant_cof203 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %190, i32 0, i32 24, !dbg !4519
  %191 = load i32**, i32*** %quant_cof203, align 8, !dbg !4519
  %arrayidx204 = getelementptr inbounds i32*, i32** %191, i64 %idxprom202, !dbg !4518
  %192 = load i32*, i32** %arrayidx204, align 8, !dbg !4518
  %quant_cof205 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 10, !dbg !4520
  store i32* %192, i32** %quant_cof205, align 8, !dbg !4521
  %193 = load i32, i32* %c, align 4, !dbg !4522
  %idxprom206 = zext i32 %193 to i64, !dbg !4523
  %194 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4523
  %raw_samples207 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %194, i32 0, i32 33, !dbg !4524
  %195 = load i32**, i32*** %raw_samples207, align 8, !dbg !4524
  %arrayidx208 = getelementptr inbounds i32*, i32** %195, i64 %idxprom206, !dbg !4523
  %196 = load i32*, i32** %arrayidx208, align 8, !dbg !4523
  %197 = load i32, i32* %offset, align 4, !dbg !4525
  %idx.ext209 = zext i32 %197 to i64, !dbg !4526
  %add.ptr210 = getelementptr inbounds i32, i32* %196, i64 %idx.ext209, !dbg !4526
  %raw_samples211 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 12, !dbg !4527
  store i32* %add.ptr210, i32** %raw_samples211, align 8, !dbg !4528
  %198 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4529
  %call212 = call i32 @decode_block(%struct.ALSDecContext* %198, %struct.ALSBlockData* %bd), !dbg !4531
  store i32 %call212, i32* %ret62, align 4, !dbg !4532
  %cmp213 = icmp slt i32 %call212, 0, !dbg !4533
  br i1 %cmp213, label %if.then215, label %if.end216, !dbg !4534

if.then215:                                       ; preds = %for.body169
  %199 = load i32, i32* %ret62, align 4, !dbg !4535
  store i32 %199, i32* %retval, align 4, !dbg !4536
  br label %return, !dbg !4536

if.end216:                                        ; preds = %for.body169
  br label %for.inc217, !dbg !4537

for.inc217:                                       ; preds = %if.end216
  %200 = load i32, i32* %c, align 4, !dbg !4538
  %inc218 = add i32 %200, 1, !dbg !4538
  store i32 %inc218, i32* %c, align 4, !dbg !4538
  br label %for.cond165, !dbg !4540, !llvm.loop !4541

for.end219:                                       ; preds = %for.cond165
  %201 = load i32*, i32** %reverted_channels, align 8, !dbg !4543
  %202 = bitcast i32* %201 to i8*, !dbg !4544
  %203 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4545
  %channels220 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %203, i32 0, i32 83, !dbg !4546
  %204 = load i32, i32* %channels220, align 4, !dbg !4546
  %conv221 = sext i32 %204 to i64, !dbg !4545
  %mul222 = mul i64 %conv221, 4, !dbg !4547
  call void @llvm.memset.p0i8.i64(i8* %202, i8 0, i64 %mul222, i32 4, i1 false), !dbg !4544
  %205 = load i32, i32* %b, align 4, !dbg !4548
  %idxprom223 = sext i32 %205 to i64, !dbg !4549
  %arrayidx224 = getelementptr inbounds [32 x i32], [32 x i32]* %div_blocks, i64 0, i64 %idxprom223, !dbg !4549
  %206 = load i32, i32* %arrayidx224, align 4, !dbg !4549
  %207 = load i32, i32* %offset, align 4, !dbg !4550
  %add = add i32 %207, %206, !dbg !4550
  store i32 %add, i32* %offset, align 4, !dbg !4550
  %ra_block225 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 1, !dbg !4551
  store i32 0, i32* %ra_block225, align 4, !dbg !4552
  br label %for.inc226, !dbg !4553

for.inc226:                                       ; preds = %for.end219, %if.then93
  %208 = load i32, i32* %b, align 4, !dbg !4554
  %inc227 = add nsw i32 %208, 1, !dbg !4554
  store i32 %inc227, i32* %b, align 4, !dbg !4554
  br label %for.cond84, !dbg !4556, !llvm.loop !4557

for.end228:                                       ; preds = %for.cond84
  store i32 0, i32* %c, align 4, !dbg !4559
  br label %for.cond229, !dbg !4561

for.cond229:                                      ; preds = %for.inc254, %for.end228
  %209 = load i32, i32* %c, align 4, !dbg !4562
  %210 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4565
  %channels230 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %210, i32 0, i32 83, !dbg !4566
  %211 = load i32, i32* %channels230, align 4, !dbg !4566
  %cmp231 = icmp ult i32 %209, %211, !dbg !4567
  br i1 %cmp231, label %for.body233, label %for.end256, !dbg !4568

for.body233:                                      ; preds = %for.cond229
  %212 = load i32, i32* %c, align 4, !dbg !4569
  %idxprom234 = zext i32 %212 to i64, !dbg !4570
  %213 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4570
  %raw_samples235 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %213, i32 0, i32 33, !dbg !4571
  %214 = load i32**, i32*** %raw_samples235, align 8, !dbg !4571
  %arrayidx236 = getelementptr inbounds i32*, i32** %214, i64 %idxprom234, !dbg !4570
  %215 = load i32*, i32** %arrayidx236, align 8, !dbg !4570
  %216 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4572
  %max_order237 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %216, i32 0, i32 10, !dbg !4573
  %217 = load i32, i32* %max_order237, align 8, !dbg !4573
  %idx.ext238 = sext i32 %217 to i64, !dbg !4574
  %idx.neg239 = sub i64 0, %idx.ext238, !dbg !4574
  %add.ptr240 = getelementptr inbounds i32, i32* %215, i64 %idx.neg239, !dbg !4574
  %218 = bitcast i32* %add.ptr240 to i8*, !dbg !4575
  %219 = load i32, i32* %c, align 4, !dbg !4576
  %idxprom241 = zext i32 %219 to i64, !dbg !4577
  %220 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4577
  %raw_samples242 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %220, i32 0, i32 33, !dbg !4578
  %221 = load i32**, i32*** %raw_samples242, align 8, !dbg !4578
  %arrayidx243 = getelementptr inbounds i32*, i32** %221, i64 %idxprom241, !dbg !4577
  %222 = load i32*, i32** %arrayidx243, align 8, !dbg !4577
  %223 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4579
  %max_order244 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %223, i32 0, i32 10, !dbg !4580
  %224 = load i32, i32* %max_order244, align 8, !dbg !4580
  %idx.ext245 = sext i32 %224 to i64, !dbg !4581
  %idx.neg246 = sub i64 0, %idx.ext245, !dbg !4581
  %add.ptr247 = getelementptr inbounds i32, i32* %222, i64 %idx.neg246, !dbg !4581
  %225 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4582
  %frame_length248 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %225, i32 0, i32 4, !dbg !4583
  %226 = load i32, i32* %frame_length248, align 8, !dbg !4583
  %idx.ext249 = sext i32 %226 to i64, !dbg !4584
  %add.ptr250 = getelementptr inbounds i32, i32* %add.ptr247, i64 %idx.ext249, !dbg !4584
  %227 = bitcast i32* %add.ptr250 to i8*, !dbg !4575
  %228 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4585
  %max_order251 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %228, i32 0, i32 10, !dbg !4586
  %229 = load i32, i32* %max_order251, align 8, !dbg !4586
  %conv252 = sext i32 %229 to i64, !dbg !4585
  %mul253 = mul i64 4, %conv252, !dbg !4587
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %218, i8* %227, i64 %mul253, i32 4, i1 false), !dbg !4575
  br label %for.inc254, !dbg !4575

for.inc254:                                       ; preds = %for.body233
  %230 = load i32, i32* %c, align 4, !dbg !4588
  %inc255 = add i32 %230, 1, !dbg !4588
  store i32 %inc255, i32* %c, align 4, !dbg !4588
  br label %for.cond229, !dbg !4590, !llvm.loop !4591

for.end256:                                       ; preds = %for.cond229
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end
  %231 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4593
  %floating = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %231, i32 0, i32 2, !dbg !4595
  %232 = load i32, i32* %floating, align 8, !dbg !4595
  %tobool258 = icmp ne i32 %232, 0, !dbg !4593
  br i1 %tobool258, label %if.then259, label %if.end261, !dbg !4596

if.then259:                                       ; preds = %if.end257
  %233 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4597
  %234 = load i32, i32* %ra_frame.addr, align 4, !dbg !4599
  %call260 = call i32 @read_diff_float_data(%struct.ALSDecContext* %233, i32 %234), !dbg !4600
  br label %if.end261, !dbg !4601

if.end261:                                        ; preds = %if.then259, %if.end257
  %235 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4602
  %call262 = call i32 @get_bits_left(%struct.GetBitContext* %235), !dbg !4604
  %cmp263 = icmp slt i32 %call262, 0, !dbg !4605
  br i1 %cmp263, label %if.then265, label %if.end269, !dbg !4606

if.then265:                                       ; preds = %if.end261
  %236 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4607
  %avctx266 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %236, i32 0, i32 0, !dbg !4609
  %237 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx266, align 8, !dbg !4609
  %238 = bitcast %struct.AVCodecContext* %237 to i8*, !dbg !4607
  %239 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4610
  %call267 = call i32 @get_bits_left(%struct.GetBitContext* %239), !dbg !4611
  %sub268 = sub nsw i32 0, %call267, !dbg !4612
  call void (i8*, i32, i8*, ...) @av_log(i8* %238, i32 16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), i32 %sub268), !dbg !4613
  store i32 -1094995529, i32* %retval, align 4, !dbg !4615
  br label %return, !dbg !4615

if.end269:                                        ; preds = %if.end261
  store i32 0, i32* %retval, align 4, !dbg !4616
  br label %return, !dbg !4616

return:                                           ; preds = %if.end269, %if.then265, %if.then215, %if.then160, %if.then146, %if.then138, %if.then73, %if.then46, %if.then40
  %240 = load i32, i32* %retval, align 4, !dbg !4617
  ret i32 %240, !dbg !4617
}

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

; Function Attrs: nounwind readonly
declare i32 @av_crc(i32*, i32, i8*, i64) #6

; Function Attrs: nounwind uwtable
define internal void @get_block_sizes(%struct.ALSDecContext* %ctx, i32* %div_blocks, i32* %bs_info) #1 !dbg !4618 {
entry:
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %div_blocks.addr = alloca i32*, align 8
  %bs_info.addr = alloca i32*, align 8
  %sconf = alloca %struct.ALSSpecificConfig*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %ptr_div_blocks = alloca i32*, align 8
  %b = alloca i32, align 4
  %bs_info_len = alloca i32, align 4
  %remaining = alloca i32, align 4
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !4621, metadata !1692), !dbg !4622
  store i32* %div_blocks, i32** %div_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %div_blocks.addr, metadata !4623, metadata !1692), !dbg !4624
  store i32* %bs_info, i32** %bs_info.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bs_info.addr, metadata !4625, metadata !1692), !dbg !4626
  call void @llvm.dbg.declare(metadata %struct.ALSSpecificConfig** %sconf, metadata !4627, metadata !1692), !dbg !4628
  %0 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4629
  %sconf1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %0, i32 0, i32 1, !dbg !4630
  store %struct.ALSSpecificConfig* %sconf1, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4628
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !4631, metadata !1692), !dbg !4632
  %1 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4633
  %gb2 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %1, i32 0, i32 2, !dbg !4634
  store %struct.GetBitContext* %gb2, %struct.GetBitContext** %gb, align 8, !dbg !4632
  call void @llvm.dbg.declare(metadata i32** %ptr_div_blocks, metadata !4635, metadata !1692), !dbg !4636
  %2 = load i32*, i32** %div_blocks.addr, align 8, !dbg !4637
  store i32* %2, i32** %ptr_div_blocks, align 8, !dbg !4636
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4638, metadata !1692), !dbg !4639
  %3 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4640
  %block_switching = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %3, i32 0, i32 11, !dbg !4642
  %4 = load i32, i32* %block_switching, align 4, !dbg !4642
  %tobool = icmp ne i32 %4, 0, !dbg !4640
  br i1 %tobool, label %if.then, label %if.end, !dbg !4643

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bs_info_len, metadata !4644, metadata !1692), !dbg !4646
  %5 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4647
  %block_switching3 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %5, i32 0, i32 11, !dbg !4648
  %6 = load i32, i32* %block_switching3, align 4, !dbg !4648
  %add = add nsw i32 %6, 2, !dbg !4649
  %shl = shl i32 1, %add, !dbg !4650
  store i32 %shl, i32* %bs_info_len, align 4, !dbg !4646
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4651
  %8 = load i32, i32* %bs_info_len, align 4, !dbg !4652
  %call = call i32 @get_bits_long(%struct.GetBitContext* %7, i32 %8), !dbg !4653
  %9 = load i32*, i32** %bs_info.addr, align 8, !dbg !4654
  store i32 %call, i32* %9, align 4, !dbg !4655
  %10 = load i32, i32* %bs_info_len, align 4, !dbg !4656
  %sub = sub i32 32, %10, !dbg !4657
  %11 = load i32*, i32** %bs_info.addr, align 8, !dbg !4658
  %12 = load i32, i32* %11, align 4, !dbg !4659
  %shl4 = shl i32 %12, %sub, !dbg !4659
  store i32 %shl4, i32* %11, align 4, !dbg !4659
  br label %if.end, !dbg !4660

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4661
  %num_blocks = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %13, i32 0, i32 11, !dbg !4662
  store i32 0, i32* %num_blocks, align 8, !dbg !4663
  %14 = load i32*, i32** %bs_info.addr, align 8, !dbg !4664
  %15 = load i32, i32* %14, align 4, !dbg !4665
  %16 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4666
  %num_blocks5 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %16, i32 0, i32 11, !dbg !4667
  call void @parse_bs_info(i32 %15, i32 0, i32 0, i32** %ptr_div_blocks, i32* %num_blocks5), !dbg !4668
  store i32 0, i32* %b, align 4, !dbg !4669
  br label %for.cond, !dbg !4671

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load i32, i32* %b, align 4, !dbg !4672
  %18 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4675
  %num_blocks6 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %18, i32 0, i32 11, !dbg !4676
  %19 = load i32, i32* %num_blocks6, align 8, !dbg !4676
  %cmp = icmp ult i32 %17, %19, !dbg !4677
  br i1 %cmp, label %for.body, label %for.end, !dbg !4678

for.body:                                         ; preds = %for.cond
  %20 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4679
  %sconf7 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %20, i32 0, i32 1, !dbg !4680
  %frame_length = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %sconf7, i32 0, i32 4, !dbg !4681
  %21 = load i32, i32* %frame_length, align 8, !dbg !4681
  %22 = load i32, i32* %b, align 4, !dbg !4682
  %idxprom = zext i32 %22 to i64, !dbg !4683
  %23 = load i32*, i32** %div_blocks.addr, align 8, !dbg !4683
  %arrayidx = getelementptr inbounds i32, i32* %23, i64 %idxprom, !dbg !4683
  %24 = load i32, i32* %arrayidx, align 4, !dbg !4683
  %shr = ashr i32 %21, %24, !dbg !4684
  %25 = load i32, i32* %b, align 4, !dbg !4685
  %idxprom8 = zext i32 %25 to i64, !dbg !4686
  %26 = load i32*, i32** %div_blocks.addr, align 8, !dbg !4686
  %arrayidx9 = getelementptr inbounds i32, i32* %26, i64 %idxprom8, !dbg !4686
  store i32 %shr, i32* %arrayidx9, align 4, !dbg !4687
  br label %for.inc, !dbg !4686

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %b, align 4, !dbg !4688
  %inc = add i32 %27, 1, !dbg !4688
  store i32 %inc, i32* %b, align 4, !dbg !4688
  br label %for.cond, !dbg !4690, !llvm.loop !4691

for.end:                                          ; preds = %for.cond
  %28 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4693
  %cur_frame_length = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %28, i32 0, i32 7, !dbg !4695
  %29 = load i32, i32* %cur_frame_length, align 8, !dbg !4695
  %30 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4696
  %sconf10 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %30, i32 0, i32 1, !dbg !4697
  %frame_length11 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %sconf10, i32 0, i32 4, !dbg !4698
  %31 = load i32, i32* %frame_length11, align 8, !dbg !4698
  %cmp12 = icmp ne i32 %29, %31, !dbg !4699
  br i1 %cmp12, label %if.then13, label %if.end34, !dbg !4700

if.then13:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %remaining, metadata !4701, metadata !1692), !dbg !4703
  %32 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4704
  %cur_frame_length14 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %32, i32 0, i32 7, !dbg !4705
  %33 = load i32, i32* %cur_frame_length14, align 8, !dbg !4705
  store i32 %33, i32* %remaining, align 4, !dbg !4703
  store i32 0, i32* %b, align 4, !dbg !4706
  br label %for.cond15, !dbg !4708

for.cond15:                                       ; preds = %for.inc31, %if.then13
  %34 = load i32, i32* %b, align 4, !dbg !4709
  %35 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4712
  %num_blocks16 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %35, i32 0, i32 11, !dbg !4713
  %36 = load i32, i32* %num_blocks16, align 8, !dbg !4713
  %cmp17 = icmp ult i32 %34, %36, !dbg !4714
  br i1 %cmp17, label %for.body18, label %for.end33, !dbg !4715

for.body18:                                       ; preds = %for.cond15
  %37 = load i32, i32* %remaining, align 4, !dbg !4716
  %38 = load i32, i32* %b, align 4, !dbg !4719
  %idxprom19 = zext i32 %38 to i64, !dbg !4720
  %39 = load i32*, i32** %div_blocks.addr, align 8, !dbg !4720
  %arrayidx20 = getelementptr inbounds i32, i32* %39, i64 %idxprom19, !dbg !4720
  %40 = load i32, i32* %arrayidx20, align 4, !dbg !4720
  %cmp21 = icmp ule i32 %37, %40, !dbg !4721
  br i1 %cmp21, label %if.then22, label %if.end27, !dbg !4722

if.then22:                                        ; preds = %for.body18
  %41 = load i32, i32* %remaining, align 4, !dbg !4723
  %42 = load i32, i32* %b, align 4, !dbg !4725
  %idxprom23 = zext i32 %42 to i64, !dbg !4726
  %43 = load i32*, i32** %div_blocks.addr, align 8, !dbg !4726
  %arrayidx24 = getelementptr inbounds i32, i32* %43, i64 %idxprom23, !dbg !4726
  store i32 %41, i32* %arrayidx24, align 4, !dbg !4727
  %44 = load i32, i32* %b, align 4, !dbg !4728
  %add25 = add i32 %44, 1, !dbg !4729
  %45 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4730
  %num_blocks26 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %45, i32 0, i32 11, !dbg !4731
  store i32 %add25, i32* %num_blocks26, align 8, !dbg !4732
  br label %for.end33, !dbg !4733

if.end27:                                         ; preds = %for.body18
  %46 = load i32, i32* %b, align 4, !dbg !4734
  %idxprom28 = zext i32 %46 to i64, !dbg !4735
  %47 = load i32*, i32** %div_blocks.addr, align 8, !dbg !4735
  %arrayidx29 = getelementptr inbounds i32, i32* %47, i64 %idxprom28, !dbg !4735
  %48 = load i32, i32* %arrayidx29, align 4, !dbg !4735
  %49 = load i32, i32* %remaining, align 4, !dbg !4736
  %sub30 = sub i32 %49, %48, !dbg !4736
  store i32 %sub30, i32* %remaining, align 4, !dbg !4736
  br label %for.inc31, !dbg !4737

for.inc31:                                        ; preds = %if.end27
  %50 = load i32, i32* %b, align 4, !dbg !4738
  %inc32 = add i32 %50, 1, !dbg !4738
  store i32 %inc32, i32* %b, align 4, !dbg !4738
  br label %for.cond15, !dbg !4740, !llvm.loop !4741

for.end33:                                        ; preds = %if.then22, %for.cond15
  br label %if.end34, !dbg !4743

if.end34:                                         ; preds = %for.end33, %for.end
  ret void, !dbg !4744
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_blocks_ind(%struct.ALSDecContext* %ctx, i32 %ra_frame, i32 %c, i32* %div_blocks, i32* %js_blocks) #1 !dbg !4745 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %ra_frame.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %div_blocks.addr = alloca i32*, align 8
  %js_blocks.addr = alloca i32*, align 8
  %ret = alloca i32, align 4
  %b = alloca i32, align 4
  %bd = alloca %struct.ALSBlockData, align 8
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !4750, metadata !1692), !dbg !4751
  store i32 %ra_frame, i32* %ra_frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ra_frame.addr, metadata !4752, metadata !1692), !dbg !4753
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !4754, metadata !1692), !dbg !4755
  store i32* %div_blocks, i32** %div_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %div_blocks.addr, metadata !4756, metadata !1692), !dbg !4757
  store i32* %js_blocks, i32** %js_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %js_blocks.addr, metadata !4758, metadata !1692), !dbg !4759
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4760, metadata !1692), !dbg !4761
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4762, metadata !1692), !dbg !4763
  call void @llvm.dbg.declare(metadata %struct.ALSBlockData* %bd, metadata !4764, metadata !1692), !dbg !4765
  %0 = bitcast %struct.ALSBlockData* %bd to i8*, !dbg !4765
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 112, i32 8, i1 false), !dbg !4765
  %1 = load i32, i32* %ra_frame.addr, align 4, !dbg !4766
  %ra_block = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 1, !dbg !4767
  store i32 %1, i32* %ra_block, align 4, !dbg !4768
  %2 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4769
  %const_block = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %2, i32 0, i32 16, !dbg !4770
  %3 = load i32*, i32** %const_block, align 8, !dbg !4770
  %const_block1 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 2, !dbg !4771
  store i32* %3, i32** %const_block1, align 8, !dbg !4772
  %4 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4773
  %shift_lsbs = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %4, i32 0, i32 17, !dbg !4774
  %5 = load i32*, i32** %shift_lsbs, align 8, !dbg !4774
  %shift_lsbs2 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 4, !dbg !4775
  store i32* %5, i32** %shift_lsbs2, align 8, !dbg !4776
  %6 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4777
  %opt_order = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %6, i32 0, i32 18, !dbg !4778
  %7 = load i32*, i32** %opt_order, align 8, !dbg !4778
  %opt_order3 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 5, !dbg !4779
  store i32* %7, i32** %opt_order3, align 8, !dbg !4780
  %8 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4781
  %store_prev_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %8, i32 0, i32 19, !dbg !4782
  %9 = load i32*, i32** %store_prev_samples, align 8, !dbg !4782
  %store_prev_samples4 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 6, !dbg !4783
  store i32* %9, i32** %store_prev_samples4, align 8, !dbg !4784
  %10 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4785
  %use_ltp = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %10, i32 0, i32 20, !dbg !4786
  %11 = load i32*, i32** %use_ltp, align 8, !dbg !4786
  %use_ltp5 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 7, !dbg !4787
  store i32* %11, i32** %use_ltp5, align 8, !dbg !4788
  %12 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4789
  %ltp_lag = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %12, i32 0, i32 21, !dbg !4790
  %13 = load i32*, i32** %ltp_lag, align 8, !dbg !4790
  %ltp_lag6 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 8, !dbg !4791
  store i32* %13, i32** %ltp_lag6, align 8, !dbg !4792
  %14 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4793
  %ltp_gain = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %14, i32 0, i32 22, !dbg !4794
  %15 = load i32**, i32*** %ltp_gain, align 8, !dbg !4794
  %arrayidx = getelementptr inbounds i32*, i32** %15, i64 0, !dbg !4793
  %16 = load i32*, i32** %arrayidx, align 8, !dbg !4793
  %ltp_gain7 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 9, !dbg !4795
  store i32* %16, i32** %ltp_gain7, align 8, !dbg !4796
  %17 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4797
  %quant_cof = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %17, i32 0, i32 24, !dbg !4798
  %18 = load i32**, i32*** %quant_cof, align 8, !dbg !4798
  %arrayidx8 = getelementptr inbounds i32*, i32** %18, i64 0, !dbg !4797
  %19 = load i32*, i32** %arrayidx8, align 8, !dbg !4797
  %quant_cof9 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 10, !dbg !4799
  store i32* %19, i32** %quant_cof9, align 8, !dbg !4800
  %20 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4801
  %lpc_cof = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %20, i32 0, i32 26, !dbg !4802
  %21 = load i32**, i32*** %lpc_cof, align 8, !dbg !4802
  %arrayidx10 = getelementptr inbounds i32*, i32** %21, i64 0, !dbg !4801
  %22 = load i32*, i32** %arrayidx10, align 8, !dbg !4801
  %lpc_cof11 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 11, !dbg !4803
  store i32* %22, i32** %lpc_cof11, align 8, !dbg !4804
  %23 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4805
  %prev_raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %23, i32 0, i32 32, !dbg !4806
  %24 = load i32*, i32** %prev_raw_samples, align 8, !dbg !4806
  %prev_raw_samples12 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 13, !dbg !4807
  store i32* %24, i32** %prev_raw_samples12, align 8, !dbg !4808
  %25 = load i32, i32* %c.addr, align 4, !dbg !4809
  %idxprom = zext i32 %25 to i64, !dbg !4810
  %26 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4810
  %raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %26, i32 0, i32 33, !dbg !4811
  %27 = load i32**, i32*** %raw_samples, align 8, !dbg !4811
  %arrayidx13 = getelementptr inbounds i32*, i32** %27, i64 %idxprom, !dbg !4810
  %28 = load i32*, i32** %arrayidx13, align 8, !dbg !4810
  %raw_samples14 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 12, !dbg !4812
  store i32* %28, i32** %raw_samples14, align 8, !dbg !4813
  store i32 0, i32* %b, align 4, !dbg !4814
  br label %for.cond, !dbg !4816

for.cond:                                         ; preds = %for.inc, %entry
  %29 = load i32, i32* %b, align 4, !dbg !4817
  %30 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4820
  %num_blocks = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %30, i32 0, i32 11, !dbg !4821
  %31 = load i32, i32* %num_blocks, align 8, !dbg !4821
  %cmp = icmp ult i32 %29, %31, !dbg !4822
  br i1 %cmp, label %for.body, label %for.end, !dbg !4823

for.body:                                         ; preds = %for.cond
  %32 = load i32, i32* %b, align 4, !dbg !4824
  %idxprom15 = zext i32 %32 to i64, !dbg !4826
  %33 = load i32*, i32** %div_blocks.addr, align 8, !dbg !4826
  %arrayidx16 = getelementptr inbounds i32, i32* %33, i64 %idxprom15, !dbg !4826
  %34 = load i32, i32* %arrayidx16, align 4, !dbg !4826
  %block_length = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 0, !dbg !4827
  store i32 %34, i32* %block_length, align 8, !dbg !4828
  %35 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4829
  %call = call i32 @read_decode_block(%struct.ALSDecContext* %35, %struct.ALSBlockData* %bd), !dbg !4831
  store i32 %call, i32* %ret, align 4, !dbg !4832
  %cmp17 = icmp slt i32 %call, 0, !dbg !4833
  br i1 %cmp17, label %if.then, label %if.end, !dbg !4834

if.then:                                          ; preds = %for.body
  %36 = load i32, i32* %b, align 4, !dbg !4835
  %37 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4837
  %num_blocks18 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %37, i32 0, i32 11, !dbg !4838
  %38 = load i32, i32* %num_blocks18, align 8, !dbg !4838
  %39 = load i32*, i32** %div_blocks.addr, align 8, !dbg !4839
  %raw_samples19 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 12, !dbg !4840
  %40 = load i32*, i32** %raw_samples19, align 8, !dbg !4840
  call void @zero_remaining(i32 %36, i32 %38, i32* %39, i32* %40), !dbg !4841
  %41 = load i32, i32* %ret, align 4, !dbg !4842
  store i32 %41, i32* %retval, align 4, !dbg !4843
  br label %return, !dbg !4843

if.end:                                           ; preds = %for.body
  %42 = load i32, i32* %b, align 4, !dbg !4844
  %idxprom20 = zext i32 %42 to i64, !dbg !4845
  %43 = load i32*, i32** %div_blocks.addr, align 8, !dbg !4845
  %arrayidx21 = getelementptr inbounds i32, i32* %43, i64 %idxprom20, !dbg !4845
  %44 = load i32, i32* %arrayidx21, align 4, !dbg !4845
  %raw_samples22 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 12, !dbg !4846
  %45 = load i32*, i32** %raw_samples22, align 8, !dbg !4847
  %idx.ext = zext i32 %44 to i64, !dbg !4847
  %add.ptr = getelementptr inbounds i32, i32* %45, i64 %idx.ext, !dbg !4847
  store i32* %add.ptr, i32** %raw_samples22, align 8, !dbg !4847
  %ra_block23 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %bd, i32 0, i32 1, !dbg !4848
  store i32 0, i32* %ra_block23, align 4, !dbg !4849
  br label %for.inc, !dbg !4850

for.inc:                                          ; preds = %if.end
  %46 = load i32, i32* %b, align 4, !dbg !4851
  %inc = add i32 %46, 1, !dbg !4851
  store i32 %inc, i32* %b, align 4, !dbg !4851
  br label %for.cond, !dbg !4853, !llvm.loop !4854

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !4856
  br label %return, !dbg !4856

return:                                           ; preds = %for.end, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !4857
  ret i32 %47, !dbg !4857
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_blocks(%struct.ALSDecContext* %ctx, i32 %ra_frame, i32 %c, i32* %div_blocks, i32* %js_blocks) #1 !dbg !4858 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %ra_frame.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %div_blocks.addr = alloca i32*, align 8
  %js_blocks.addr = alloca i32*, align 8
  %sconf = alloca %struct.ALSSpecificConfig*, align 8
  %offset = alloca i32, align 4
  %b = alloca i32, align 4
  %ret = alloca i32, align 4
  %bd = alloca [2 x %struct.ALSBlockData], align 16
  %s = alloca i32, align 4
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !4859, metadata !1692), !dbg !4860
  store i32 %ra_frame, i32* %ra_frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ra_frame.addr, metadata !4861, metadata !1692), !dbg !4862
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !4863, metadata !1692), !dbg !4864
  store i32* %div_blocks, i32** %div_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %div_blocks.addr, metadata !4865, metadata !1692), !dbg !4866
  store i32* %js_blocks, i32** %js_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %js_blocks.addr, metadata !4867, metadata !1692), !dbg !4868
  call void @llvm.dbg.declare(metadata %struct.ALSSpecificConfig** %sconf, metadata !4869, metadata !1692), !dbg !4870
  %0 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4871
  %sconf1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %0, i32 0, i32 1, !dbg !4872
  store %struct.ALSSpecificConfig* %sconf1, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !4870
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !4873, metadata !1692), !dbg !4874
  store i32 0, i32* %offset, align 4, !dbg !4874
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4875, metadata !1692), !dbg !4876
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4877, metadata !1692), !dbg !4878
  call void @llvm.dbg.declare(metadata [2 x %struct.ALSBlockData]* %bd, metadata !4879, metadata !1692), !dbg !4881
  %1 = bitcast [2 x %struct.ALSBlockData]* %bd to i8*, !dbg !4881
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 224, i32 16, i1 false), !dbg !4881
  %2 = load i32, i32* %ra_frame.addr, align 4, !dbg !4882
  %arrayidx = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !4883
  %ra_block = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx, i32 0, i32 1, !dbg !4884
  store i32 %2, i32* %ra_block, align 4, !dbg !4885
  %3 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4886
  %const_block = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %3, i32 0, i32 16, !dbg !4887
  %4 = load i32*, i32** %const_block, align 8, !dbg !4887
  %arrayidx2 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !4888
  %const_block3 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx2, i32 0, i32 2, !dbg !4889
  store i32* %4, i32** %const_block3, align 8, !dbg !4890
  %5 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4891
  %shift_lsbs = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %5, i32 0, i32 17, !dbg !4892
  %6 = load i32*, i32** %shift_lsbs, align 8, !dbg !4892
  %arrayidx4 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !4893
  %shift_lsbs5 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx4, i32 0, i32 4, !dbg !4894
  store i32* %6, i32** %shift_lsbs5, align 8, !dbg !4895
  %7 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4896
  %opt_order = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %7, i32 0, i32 18, !dbg !4897
  %8 = load i32*, i32** %opt_order, align 8, !dbg !4897
  %arrayidx6 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !4898
  %opt_order7 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx6, i32 0, i32 5, !dbg !4899
  store i32* %8, i32** %opt_order7, align 16, !dbg !4900
  %9 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4901
  %store_prev_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %9, i32 0, i32 19, !dbg !4902
  %10 = load i32*, i32** %store_prev_samples, align 8, !dbg !4902
  %arrayidx8 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !4903
  %store_prev_samples9 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx8, i32 0, i32 6, !dbg !4904
  store i32* %10, i32** %store_prev_samples9, align 8, !dbg !4905
  %11 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4906
  %use_ltp = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %11, i32 0, i32 20, !dbg !4907
  %12 = load i32*, i32** %use_ltp, align 8, !dbg !4907
  %arrayidx10 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !4908
  %use_ltp11 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx10, i32 0, i32 7, !dbg !4909
  store i32* %12, i32** %use_ltp11, align 16, !dbg !4910
  %13 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4911
  %ltp_lag = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %13, i32 0, i32 21, !dbg !4912
  %14 = load i32*, i32** %ltp_lag, align 8, !dbg !4912
  %arrayidx12 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !4913
  %ltp_lag13 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx12, i32 0, i32 8, !dbg !4914
  store i32* %14, i32** %ltp_lag13, align 8, !dbg !4915
  %15 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4916
  %ltp_gain = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %15, i32 0, i32 22, !dbg !4917
  %16 = load i32**, i32*** %ltp_gain, align 8, !dbg !4917
  %arrayidx14 = getelementptr inbounds i32*, i32** %16, i64 0, !dbg !4916
  %17 = load i32*, i32** %arrayidx14, align 8, !dbg !4916
  %arrayidx15 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !4918
  %ltp_gain16 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx15, i32 0, i32 9, !dbg !4919
  store i32* %17, i32** %ltp_gain16, align 16, !dbg !4920
  %18 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4921
  %quant_cof = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %18, i32 0, i32 24, !dbg !4922
  %19 = load i32**, i32*** %quant_cof, align 8, !dbg !4922
  %arrayidx17 = getelementptr inbounds i32*, i32** %19, i64 0, !dbg !4921
  %20 = load i32*, i32** %arrayidx17, align 8, !dbg !4921
  %arrayidx18 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !4923
  %quant_cof19 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx18, i32 0, i32 10, !dbg !4924
  store i32* %20, i32** %quant_cof19, align 8, !dbg !4925
  %21 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4926
  %lpc_cof = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %21, i32 0, i32 26, !dbg !4927
  %22 = load i32**, i32*** %lpc_cof, align 8, !dbg !4927
  %arrayidx20 = getelementptr inbounds i32*, i32** %22, i64 0, !dbg !4926
  %23 = load i32*, i32** %arrayidx20, align 8, !dbg !4926
  %arrayidx21 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !4928
  %lpc_cof22 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx21, i32 0, i32 11, !dbg !4929
  store i32* %23, i32** %lpc_cof22, align 16, !dbg !4930
  %24 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4931
  %prev_raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %24, i32 0, i32 32, !dbg !4932
  %25 = load i32*, i32** %prev_raw_samples, align 8, !dbg !4932
  %arrayidx23 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !4933
  %prev_raw_samples24 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx23, i32 0, i32 13, !dbg !4934
  store i32* %25, i32** %prev_raw_samples24, align 16, !dbg !4935
  %26 = load i32*, i32** %js_blocks.addr, align 8, !dbg !4936
  %27 = load i32, i32* %26, align 4, !dbg !4937
  %arrayidx25 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !4938
  %js_blocks26 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx25, i32 0, i32 3, !dbg !4939
  store i32 %27, i32* %js_blocks26, align 16, !dbg !4940
  %28 = load i32, i32* %ra_frame.addr, align 4, !dbg !4941
  %arrayidx27 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !4942
  %ra_block28 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx27, i32 0, i32 1, !dbg !4943
  store i32 %28, i32* %ra_block28, align 4, !dbg !4944
  %29 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4945
  %const_block29 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %29, i32 0, i32 16, !dbg !4946
  %30 = load i32*, i32** %const_block29, align 8, !dbg !4946
  %arrayidx30 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !4947
  %const_block31 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx30, i32 0, i32 2, !dbg !4948
  store i32* %30, i32** %const_block31, align 8, !dbg !4949
  %31 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4950
  %shift_lsbs32 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %31, i32 0, i32 17, !dbg !4951
  %32 = load i32*, i32** %shift_lsbs32, align 8, !dbg !4951
  %arrayidx33 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !4952
  %shift_lsbs34 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx33, i32 0, i32 4, !dbg !4953
  store i32* %32, i32** %shift_lsbs34, align 8, !dbg !4954
  %33 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4955
  %opt_order35 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %33, i32 0, i32 18, !dbg !4956
  %34 = load i32*, i32** %opt_order35, align 8, !dbg !4956
  %arrayidx36 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !4957
  %opt_order37 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx36, i32 0, i32 5, !dbg !4958
  store i32* %34, i32** %opt_order37, align 16, !dbg !4959
  %35 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4960
  %store_prev_samples38 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %35, i32 0, i32 19, !dbg !4961
  %36 = load i32*, i32** %store_prev_samples38, align 8, !dbg !4961
  %arrayidx39 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !4962
  %store_prev_samples40 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx39, i32 0, i32 6, !dbg !4963
  store i32* %36, i32** %store_prev_samples40, align 8, !dbg !4964
  %37 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4965
  %use_ltp41 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %37, i32 0, i32 20, !dbg !4966
  %38 = load i32*, i32** %use_ltp41, align 8, !dbg !4966
  %arrayidx42 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !4967
  %use_ltp43 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx42, i32 0, i32 7, !dbg !4968
  store i32* %38, i32** %use_ltp43, align 16, !dbg !4969
  %39 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4970
  %ltp_lag44 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %39, i32 0, i32 21, !dbg !4971
  %40 = load i32*, i32** %ltp_lag44, align 8, !dbg !4971
  %arrayidx45 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !4972
  %ltp_lag46 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx45, i32 0, i32 8, !dbg !4973
  store i32* %40, i32** %ltp_lag46, align 8, !dbg !4974
  %41 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4975
  %ltp_gain47 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %41, i32 0, i32 22, !dbg !4976
  %42 = load i32**, i32*** %ltp_gain47, align 8, !dbg !4976
  %arrayidx48 = getelementptr inbounds i32*, i32** %42, i64 0, !dbg !4975
  %43 = load i32*, i32** %arrayidx48, align 8, !dbg !4975
  %arrayidx49 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !4977
  %ltp_gain50 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx49, i32 0, i32 9, !dbg !4978
  store i32* %43, i32** %ltp_gain50, align 16, !dbg !4979
  %44 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4980
  %quant_cof51 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %44, i32 0, i32 24, !dbg !4981
  %45 = load i32**, i32*** %quant_cof51, align 8, !dbg !4981
  %arrayidx52 = getelementptr inbounds i32*, i32** %45, i64 0, !dbg !4980
  %46 = load i32*, i32** %arrayidx52, align 8, !dbg !4980
  %arrayidx53 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !4982
  %quant_cof54 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx53, i32 0, i32 10, !dbg !4983
  store i32* %46, i32** %quant_cof54, align 8, !dbg !4984
  %47 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4985
  %lpc_cof55 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %47, i32 0, i32 26, !dbg !4986
  %48 = load i32**, i32*** %lpc_cof55, align 8, !dbg !4986
  %arrayidx56 = getelementptr inbounds i32*, i32** %48, i64 0, !dbg !4985
  %49 = load i32*, i32** %arrayidx56, align 8, !dbg !4985
  %arrayidx57 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !4987
  %lpc_cof58 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx57, i32 0, i32 11, !dbg !4988
  store i32* %49, i32** %lpc_cof58, align 16, !dbg !4989
  %50 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !4990
  %prev_raw_samples59 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %50, i32 0, i32 32, !dbg !4991
  %51 = load i32*, i32** %prev_raw_samples59, align 8, !dbg !4991
  %arrayidx60 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !4992
  %prev_raw_samples61 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx60, i32 0, i32 13, !dbg !4993
  store i32* %51, i32** %prev_raw_samples61, align 16, !dbg !4994
  %52 = load i32*, i32** %js_blocks.addr, align 8, !dbg !4995
  %add.ptr = getelementptr inbounds i32, i32* %52, i64 1, !dbg !4996
  %53 = load i32, i32* %add.ptr, align 4, !dbg !4997
  %arrayidx62 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !4998
  %js_blocks63 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx62, i32 0, i32 3, !dbg !4999
  store i32 %53, i32* %js_blocks63, align 16, !dbg !5000
  store i32 0, i32* %b, align 4, !dbg !5001
  br label %for.cond, !dbg !5003

for.cond:                                         ; preds = %for.inc153, %entry
  %54 = load i32, i32* %b, align 4, !dbg !5004
  %55 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5007
  %num_blocks = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %55, i32 0, i32 11, !dbg !5008
  %56 = load i32, i32* %num_blocks, align 8, !dbg !5008
  %cmp = icmp ult i32 %54, %56, !dbg !5009
  br i1 %cmp, label %for.body, label %for.end155, !dbg !5010

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %s, metadata !5011, metadata !1692), !dbg !5013
  %57 = load i32, i32* %b, align 4, !dbg !5014
  %idxprom = zext i32 %57 to i64, !dbg !5015
  %58 = load i32*, i32** %div_blocks.addr, align 8, !dbg !5015
  %arrayidx64 = getelementptr inbounds i32, i32* %58, i64 %idxprom, !dbg !5015
  %59 = load i32, i32* %arrayidx64, align 4, !dbg !5015
  %arrayidx65 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !5016
  %block_length = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx65, i32 0, i32 0, !dbg !5017
  store i32 %59, i32* %block_length, align 16, !dbg !5018
  %60 = load i32, i32* %b, align 4, !dbg !5019
  %idxprom66 = zext i32 %60 to i64, !dbg !5020
  %61 = load i32*, i32** %div_blocks.addr, align 8, !dbg !5020
  %arrayidx67 = getelementptr inbounds i32, i32* %61, i64 %idxprom66, !dbg !5020
  %62 = load i32, i32* %arrayidx67, align 4, !dbg !5020
  %arrayidx68 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !5021
  %block_length69 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx68, i32 0, i32 0, !dbg !5022
  store i32 %62, i32* %block_length69, align 16, !dbg !5023
  %63 = load i32, i32* %c.addr, align 4, !dbg !5024
  %idxprom70 = zext i32 %63 to i64, !dbg !5025
  %64 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5025
  %raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %64, i32 0, i32 33, !dbg !5026
  %65 = load i32**, i32*** %raw_samples, align 8, !dbg !5026
  %arrayidx71 = getelementptr inbounds i32*, i32** %65, i64 %idxprom70, !dbg !5025
  %66 = load i32*, i32** %arrayidx71, align 8, !dbg !5025
  %67 = load i32, i32* %offset, align 4, !dbg !5027
  %idx.ext = zext i32 %67 to i64, !dbg !5028
  %add.ptr72 = getelementptr inbounds i32, i32* %66, i64 %idx.ext, !dbg !5028
  %arrayidx73 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !5029
  %raw_samples74 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx73, i32 0, i32 12, !dbg !5030
  store i32* %add.ptr72, i32** %raw_samples74, align 8, !dbg !5031
  %68 = load i32, i32* %c.addr, align 4, !dbg !5032
  %add = add i32 %68, 1, !dbg !5033
  %idxprom75 = zext i32 %add to i64, !dbg !5034
  %69 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5034
  %raw_samples76 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %69, i32 0, i32 33, !dbg !5035
  %70 = load i32**, i32*** %raw_samples76, align 8, !dbg !5035
  %arrayidx77 = getelementptr inbounds i32*, i32** %70, i64 %idxprom75, !dbg !5034
  %71 = load i32*, i32** %arrayidx77, align 8, !dbg !5034
  %72 = load i32, i32* %offset, align 4, !dbg !5036
  %idx.ext78 = zext i32 %72 to i64, !dbg !5037
  %add.ptr79 = getelementptr inbounds i32, i32* %71, i64 %idx.ext78, !dbg !5037
  %arrayidx80 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !5038
  %raw_samples81 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx80, i32 0, i32 12, !dbg !5039
  store i32* %add.ptr79, i32** %raw_samples81, align 8, !dbg !5040
  %arrayidx82 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !5041
  %raw_samples83 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx82, i32 0, i32 12, !dbg !5042
  %73 = load i32*, i32** %raw_samples83, align 8, !dbg !5042
  %arrayidx84 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !5043
  %raw_other = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx84, i32 0, i32 14, !dbg !5044
  store i32* %73, i32** %raw_other, align 8, !dbg !5045
  %arrayidx85 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !5046
  %raw_samples86 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx85, i32 0, i32 12, !dbg !5047
  %74 = load i32*, i32** %raw_samples86, align 8, !dbg !5047
  %arrayidx87 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !5048
  %raw_other88 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx87, i32 0, i32 14, !dbg !5049
  store i32* %74, i32** %raw_other88, align 8, !dbg !5050
  %75 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5051
  %arrayidx89 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !5053
  %call = call i32 @read_decode_block(%struct.ALSDecContext* %75, %struct.ALSBlockData* %arrayidx89), !dbg !5054
  store i32 %call, i32* %ret, align 4, !dbg !5055
  %cmp90 = icmp slt i32 %call, 0, !dbg !5056
  br i1 %cmp90, label %if.then, label %lor.lhs.false, !dbg !5057

lor.lhs.false:                                    ; preds = %for.body
  %76 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5058
  %arrayidx91 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !5059
  %call92 = call i32 @read_decode_block(%struct.ALSDecContext* %76, %struct.ALSBlockData* %arrayidx91), !dbg !5060
  store i32 %call92, i32* %ret, align 4, !dbg !5061
  %cmp93 = icmp slt i32 %call92, 0, !dbg !5062
  br i1 %cmp93, label %if.then, label %if.end, !dbg !5063

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %fail, !dbg !5065

if.end:                                           ; preds = %lor.lhs.false
  %arrayidx94 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !5066
  %js_blocks95 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx94, i32 0, i32 3, !dbg !5068
  %77 = load i32, i32* %js_blocks95, align 16, !dbg !5068
  %tobool = icmp ne i32 %77, 0, !dbg !5066
  br i1 %tobool, label %if.then96, label %if.else, !dbg !5069

if.then96:                                        ; preds = %if.end
  %arrayidx97 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !5070
  %js_blocks98 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx97, i32 0, i32 3, !dbg !5073
  %78 = load i32, i32* %js_blocks98, align 16, !dbg !5073
  %tobool99 = icmp ne i32 %78, 0, !dbg !5070
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !5074

if.then100:                                       ; preds = %if.then96
  %79 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5075
  %avctx = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %79, i32 0, i32 0, !dbg !5076
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5076
  %81 = bitcast %struct.AVCodecContext* %80 to i8*, !dbg !5075
  call void (i8*, i32, i8*, ...) @av_log(i8* %81, i32 24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i32 0, i32 0)), !dbg !5077
  br label %if.end101, !dbg !5077

if.end101:                                        ; preds = %if.then100, %if.then96
  store i32 0, i32* %s, align 4, !dbg !5078
  br label %for.cond102, !dbg !5080

for.cond102:                                      ; preds = %for.inc, %if.end101
  %82 = load i32, i32* %s, align 4, !dbg !5081
  %83 = load i32, i32* %b, align 4, !dbg !5084
  %idxprom103 = zext i32 %83 to i64, !dbg !5085
  %84 = load i32*, i32** %div_blocks.addr, align 8, !dbg !5085
  %arrayidx104 = getelementptr inbounds i32, i32* %84, i64 %idxprom103, !dbg !5085
  %85 = load i32, i32* %arrayidx104, align 4, !dbg !5085
  %cmp105 = icmp ult i32 %82, %85, !dbg !5086
  br i1 %cmp105, label %for.body106, label %for.end, !dbg !5087

for.body106:                                      ; preds = %for.cond102
  %86 = load i32, i32* %s, align 4, !dbg !5088
  %idxprom107 = zext i32 %86 to i64, !dbg !5089
  %arrayidx108 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !5089
  %raw_samples109 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx108, i32 0, i32 12, !dbg !5090
  %87 = load i32*, i32** %raw_samples109, align 8, !dbg !5090
  %arrayidx110 = getelementptr inbounds i32, i32* %87, i64 %idxprom107, !dbg !5089
  %88 = load i32, i32* %arrayidx110, align 4, !dbg !5089
  %89 = load i32, i32* %s, align 4, !dbg !5091
  %idxprom111 = zext i32 %89 to i64, !dbg !5092
  %arrayidx112 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !5092
  %raw_samples113 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx112, i32 0, i32 12, !dbg !5093
  %90 = load i32*, i32** %raw_samples113, align 8, !dbg !5093
  %arrayidx114 = getelementptr inbounds i32, i32* %90, i64 %idxprom111, !dbg !5092
  %91 = load i32, i32* %arrayidx114, align 4, !dbg !5092
  %sub = sub nsw i32 %88, %91, !dbg !5094
  %92 = load i32, i32* %s, align 4, !dbg !5095
  %idxprom115 = zext i32 %92 to i64, !dbg !5096
  %arrayidx116 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !5096
  %raw_samples117 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx116, i32 0, i32 12, !dbg !5097
  %93 = load i32*, i32** %raw_samples117, align 8, !dbg !5097
  %arrayidx118 = getelementptr inbounds i32, i32* %93, i64 %idxprom115, !dbg !5096
  store i32 %sub, i32* %arrayidx118, align 4, !dbg !5098
  br label %for.inc, !dbg !5096

for.inc:                                          ; preds = %for.body106
  %94 = load i32, i32* %s, align 4, !dbg !5099
  %inc = add i32 %94, 1, !dbg !5099
  store i32 %inc, i32* %s, align 4, !dbg !5099
  br label %for.cond102, !dbg !5101, !llvm.loop !5102

for.end:                                          ; preds = %for.cond102
  br label %if.end145, !dbg !5104

if.else:                                          ; preds = %if.end
  %arrayidx119 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !5105
  %js_blocks120 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx119, i32 0, i32 3, !dbg !5108
  %95 = load i32, i32* %js_blocks120, align 16, !dbg !5108
  %tobool121 = icmp ne i32 %95, 0, !dbg !5105
  br i1 %tobool121, label %if.then122, label %if.end144, !dbg !5105

if.then122:                                       ; preds = %if.else
  store i32 0, i32* %s, align 4, !dbg !5109
  br label %for.cond123, !dbg !5112

for.cond123:                                      ; preds = %for.inc141, %if.then122
  %96 = load i32, i32* %s, align 4, !dbg !5113
  %97 = load i32, i32* %b, align 4, !dbg !5116
  %idxprom124 = zext i32 %97 to i64, !dbg !5117
  %98 = load i32*, i32** %div_blocks.addr, align 8, !dbg !5117
  %arrayidx125 = getelementptr inbounds i32, i32* %98, i64 %idxprom124, !dbg !5117
  %99 = load i32, i32* %arrayidx125, align 4, !dbg !5117
  %cmp126 = icmp ult i32 %96, %99, !dbg !5118
  br i1 %cmp126, label %for.body127, label %for.end143, !dbg !5119

for.body127:                                      ; preds = %for.cond123
  %100 = load i32, i32* %s, align 4, !dbg !5120
  %idxprom128 = zext i32 %100 to i64, !dbg !5121
  %arrayidx129 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !5121
  %raw_samples130 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx129, i32 0, i32 12, !dbg !5122
  %101 = load i32*, i32** %raw_samples130, align 8, !dbg !5122
  %arrayidx131 = getelementptr inbounds i32, i32* %101, i64 %idxprom128, !dbg !5121
  %102 = load i32, i32* %arrayidx131, align 4, !dbg !5121
  %103 = load i32, i32* %s, align 4, !dbg !5123
  %idxprom132 = zext i32 %103 to i64, !dbg !5124
  %arrayidx133 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !5124
  %raw_samples134 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx133, i32 0, i32 12, !dbg !5125
  %104 = load i32*, i32** %raw_samples134, align 8, !dbg !5125
  %arrayidx135 = getelementptr inbounds i32, i32* %104, i64 %idxprom132, !dbg !5124
  %105 = load i32, i32* %arrayidx135, align 4, !dbg !5124
  %add136 = add nsw i32 %102, %105, !dbg !5126
  %106 = load i32, i32* %s, align 4, !dbg !5127
  %idxprom137 = zext i32 %106 to i64, !dbg !5128
  %arrayidx138 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !5128
  %raw_samples139 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx138, i32 0, i32 12, !dbg !5129
  %107 = load i32*, i32** %raw_samples139, align 8, !dbg !5129
  %arrayidx140 = getelementptr inbounds i32, i32* %107, i64 %idxprom137, !dbg !5128
  store i32 %add136, i32* %arrayidx140, align 4, !dbg !5130
  br label %for.inc141, !dbg !5128

for.inc141:                                       ; preds = %for.body127
  %108 = load i32, i32* %s, align 4, !dbg !5131
  %inc142 = add i32 %108, 1, !dbg !5131
  store i32 %inc142, i32* %s, align 4, !dbg !5131
  br label %for.cond123, !dbg !5133, !llvm.loop !5134

for.end143:                                       ; preds = %for.cond123
  br label %if.end144, !dbg !5136

if.end144:                                        ; preds = %for.end143, %if.else
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %for.end
  %109 = load i32, i32* %b, align 4, !dbg !5137
  %idxprom146 = zext i32 %109 to i64, !dbg !5138
  %110 = load i32*, i32** %div_blocks.addr, align 8, !dbg !5138
  %arrayidx147 = getelementptr inbounds i32, i32* %110, i64 %idxprom146, !dbg !5138
  %111 = load i32, i32* %arrayidx147, align 4, !dbg !5138
  %112 = load i32, i32* %offset, align 4, !dbg !5139
  %add148 = add i32 %112, %111, !dbg !5139
  store i32 %add148, i32* %offset, align 4, !dbg !5139
  %arrayidx149 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !5140
  %ra_block150 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx149, i32 0, i32 1, !dbg !5141
  store i32 0, i32* %ra_block150, align 4, !dbg !5142
  %arrayidx151 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !5143
  %ra_block152 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx151, i32 0, i32 1, !dbg !5144
  store i32 0, i32* %ra_block152, align 4, !dbg !5145
  br label %for.inc153, !dbg !5146

for.inc153:                                       ; preds = %if.end145
  %113 = load i32, i32* %b, align 4, !dbg !5147
  %inc154 = add i32 %113, 1, !dbg !5147
  store i32 %inc154, i32* %b, align 4, !dbg !5147
  br label %for.cond, !dbg !5149, !llvm.loop !5150

for.end155:                                       ; preds = %for.cond
  %114 = load i32, i32* %c.addr, align 4, !dbg !5152
  %idxprom156 = zext i32 %114 to i64, !dbg !5153
  %115 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5153
  %raw_samples157 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %115, i32 0, i32 33, !dbg !5154
  %116 = load i32**, i32*** %raw_samples157, align 8, !dbg !5154
  %arrayidx158 = getelementptr inbounds i32*, i32** %116, i64 %idxprom156, !dbg !5153
  %117 = load i32*, i32** %arrayidx158, align 8, !dbg !5153
  %118 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !5155
  %max_order = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %118, i32 0, i32 10, !dbg !5156
  %119 = load i32, i32* %max_order, align 8, !dbg !5156
  %idx.ext159 = sext i32 %119 to i64, !dbg !5157
  %idx.neg = sub i64 0, %idx.ext159, !dbg !5157
  %add.ptr160 = getelementptr inbounds i32, i32* %117, i64 %idx.neg, !dbg !5157
  %120 = bitcast i32* %add.ptr160 to i8*, !dbg !5158
  %121 = load i32, i32* %c.addr, align 4, !dbg !5159
  %idxprom161 = zext i32 %121 to i64, !dbg !5160
  %122 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5160
  %raw_samples162 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %122, i32 0, i32 33, !dbg !5161
  %123 = load i32**, i32*** %raw_samples162, align 8, !dbg !5161
  %arrayidx163 = getelementptr inbounds i32*, i32** %123, i64 %idxprom161, !dbg !5160
  %124 = load i32*, i32** %arrayidx163, align 8, !dbg !5160
  %125 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !5162
  %max_order164 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %125, i32 0, i32 10, !dbg !5163
  %126 = load i32, i32* %max_order164, align 8, !dbg !5163
  %idx.ext165 = sext i32 %126 to i64, !dbg !5164
  %idx.neg166 = sub i64 0, %idx.ext165, !dbg !5164
  %add.ptr167 = getelementptr inbounds i32, i32* %124, i64 %idx.neg166, !dbg !5164
  %127 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !5165
  %frame_length = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %127, i32 0, i32 4, !dbg !5166
  %128 = load i32, i32* %frame_length, align 8, !dbg !5166
  %idx.ext168 = sext i32 %128 to i64, !dbg !5167
  %add.ptr169 = getelementptr inbounds i32, i32* %add.ptr167, i64 %idx.ext168, !dbg !5167
  %129 = bitcast i32* %add.ptr169 to i8*, !dbg !5158
  %130 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !5168
  %max_order170 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %130, i32 0, i32 10, !dbg !5169
  %131 = load i32, i32* %max_order170, align 8, !dbg !5169
  %conv = sext i32 %131 to i64, !dbg !5168
  %mul = mul i64 4, %conv, !dbg !5170
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %120, i8* %129, i64 %mul, i32 4, i1 false), !dbg !5158
  store i32 0, i32* %retval, align 4, !dbg !5171
  br label %return, !dbg !5171

fail:                                             ; preds = %if.then
  %132 = load i32, i32* %b, align 4, !dbg !5172
  %133 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5173
  %num_blocks171 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %133, i32 0, i32 11, !dbg !5174
  %134 = load i32, i32* %num_blocks171, align 8, !dbg !5174
  %135 = load i32*, i32** %div_blocks.addr, align 8, !dbg !5175
  %arrayidx172 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 0, !dbg !5176
  %raw_samples173 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx172, i32 0, i32 12, !dbg !5177
  %136 = load i32*, i32** %raw_samples173, align 8, !dbg !5177
  call void @zero_remaining(i32 %132, i32 %134, i32* %135, i32* %136), !dbg !5178
  %137 = load i32, i32* %b, align 4, !dbg !5179
  %138 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5180
  %num_blocks174 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %138, i32 0, i32 11, !dbg !5181
  %139 = load i32, i32* %num_blocks174, align 8, !dbg !5181
  %140 = load i32*, i32** %div_blocks.addr, align 8, !dbg !5182
  %arrayidx175 = getelementptr inbounds [2 x %struct.ALSBlockData], [2 x %struct.ALSBlockData]* %bd, i64 0, i64 1, !dbg !5183
  %raw_samples176 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %arrayidx175, i32 0, i32 12, !dbg !5184
  %141 = load i32*, i32** %raw_samples176, align 8, !dbg !5184
  call void @zero_remaining(i32 %137, i32 %139, i32* %140, i32* %141), !dbg !5185
  %142 = load i32, i32* %ret, align 4, !dbg !5186
  store i32 %142, i32* %retval, align 4, !dbg !5187
  br label %return, !dbg !5187

return:                                           ; preds = %fail, %for.end155
  %143 = load i32, i32* %retval, align 4, !dbg !5188
  ret i32 %143, !dbg !5188
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @read_block(%struct.ALSDecContext* %ctx, %struct.ALSBlockData* %bd) #1 !dbg !5189 {
entry:
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %bd.addr = alloca %struct.ALSBlockData*, align 8
  %ret = alloca i32, align 4
  %gb = alloca %struct.GetBitContext*, align 8
  %sconf = alloca %struct.ALSSpecificConfig*, align 8
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !5193, metadata !1692), !dbg !5194
  store %struct.ALSBlockData* %bd, %struct.ALSBlockData** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSBlockData** %bd.addr, metadata !5195, metadata !1692), !dbg !5196
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5197, metadata !1692), !dbg !5198
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !5199, metadata !1692), !dbg !5200
  %0 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5201
  %gb1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %0, i32 0, i32 2, !dbg !5202
  store %struct.GetBitContext* %gb1, %struct.GetBitContext** %gb, align 8, !dbg !5200
  call void @llvm.dbg.declare(metadata %struct.ALSSpecificConfig** %sconf, metadata !5203, metadata !1692), !dbg !5204
  %1 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5205
  %sconf2 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %1, i32 0, i32 1, !dbg !5206
  store %struct.ALSSpecificConfig* %sconf2, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !5204
  %2 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5207
  %shift_lsbs = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %2, i32 0, i32 4, !dbg !5208
  %3 = load i32*, i32** %shift_lsbs, align 8, !dbg !5208
  store i32 0, i32* %3, align 4, !dbg !5209
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5210
  %call = call i32 @get_bits1(%struct.GetBitContext* %4), !dbg !5212
  %tobool = icmp ne i32 %call, 0, !dbg !5212
  br i1 %tobool, label %if.then, label %if.else, !dbg !5213

if.then:                                          ; preds = %entry
  %5 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5214
  %6 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5216
  %call3 = call i32 @read_var_block_data(%struct.ALSDecContext* %5, %struct.ALSBlockData* %6), !dbg !5217
  store i32 %call3, i32* %ret, align 4, !dbg !5218
  br label %if.end, !dbg !5219

if.else:                                          ; preds = %entry
  %7 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5220
  %8 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5222
  %call4 = call i32 @read_const_block_data(%struct.ALSDecContext* %7, %struct.ALSBlockData* %8), !dbg !5223
  store i32 %call4, i32* %ret, align 4, !dbg !5224
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !5225
  %mc_coding = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %9, i32 0, i32 15, !dbg !5227
  %10 = load i32, i32* %mc_coding, align 4, !dbg !5227
  %tobool5 = icmp ne i32 %10, 0, !dbg !5225
  br i1 %tobool5, label %lor.lhs.false, label %if.then7, !dbg !5228

lor.lhs.false:                                    ; preds = %if.end
  %11 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5229
  %js_switch = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %11, i32 0, i32 9, !dbg !5231
  %12 = load i32, i32* %js_switch, align 8, !dbg !5231
  %tobool6 = icmp ne i32 %12, 0, !dbg !5229
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !5232

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5233
  %call8 = call i8* @align_get_bits(%struct.GetBitContext* %13), !dbg !5234
  br label %if.end9, !dbg !5234

if.end9:                                          ; preds = %if.then7, %lor.lhs.false
  %14 = load i32, i32* %ret, align 4, !dbg !5235
  ret i32 %14, !dbg !5236
}

; Function Attrs: nounwind uwtable
define internal i32 @read_channel_data(%struct.ALSDecContext* %ctx, %struct.ALSChannelData* %cd, i32 %c) #1 !dbg !5237 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3254, metadata !1692), !dbg !5240
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %cd.addr = alloca %struct.ALSChannelData*, align 8
  %c.addr = alloca i32, align 4
  %gb = alloca %struct.GetBitContext*, align 8
  %current = alloca %struct.ALSChannelData*, align 8
  %channels = alloca i32, align 4
  %entries = alloca i32, align 4
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !5243, metadata !1692), !dbg !5244
  store %struct.ALSChannelData* %cd, %struct.ALSChannelData** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSChannelData** %cd.addr, metadata !5245, metadata !1692), !dbg !5246
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !5247, metadata !1692), !dbg !5248
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !5249, metadata !1692), !dbg !5250
  %0 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5251
  %gb1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %0, i32 0, i32 2, !dbg !5252
  store %struct.GetBitContext* %gb1, %struct.GetBitContext** %gb, align 8, !dbg !5250
  call void @llvm.dbg.declare(metadata %struct.ALSChannelData** %current, metadata !5253, metadata !1692), !dbg !5254
  %1 = load %struct.ALSChannelData*, %struct.ALSChannelData** %cd.addr, align 8, !dbg !5255
  store %struct.ALSChannelData* %1, %struct.ALSChannelData** %current, align 8, !dbg !5254
  call void @llvm.dbg.declare(metadata i32* %channels, metadata !5256, metadata !1692), !dbg !5257
  %2 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5258
  %avctx = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %2, i32 0, i32 0, !dbg !5259
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5259
  %channels2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 83, !dbg !5260
  %4 = load i32, i32* %channels2, align 4, !dbg !5260
  store i32 %4, i32* %channels, align 4, !dbg !5257
  call void @llvm.dbg.declare(metadata i32* %entries, metadata !5261, metadata !1692), !dbg !5262
  store i32 0, i32* %entries, align 4, !dbg !5262
  br label %while.cond, !dbg !5263

while.cond:                                       ; preds = %if.end34, %entry
  %5 = load i32, i32* %entries, align 4, !dbg !5264
  %6 = load i32, i32* %channels, align 4, !dbg !5266
  %cmp = icmp ult i32 %5, %6, !dbg !5267
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5268

land.rhs:                                         ; preds = %while.cond
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5269
  %call = call i32 @get_bits1(%struct.GetBitContext* %7), !dbg !5271
  %8 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5272
  %stop_flag = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %8, i32 0, i32 0, !dbg !5273
  store i32 %call, i32* %stop_flag, align 4, !dbg !5274
  %tobool = icmp ne i32 %call, 0, !dbg !5275
  %lnot = xor i1 %tobool, true, !dbg !5275
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %9 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %9, label %while.body, label %while.end, !dbg !5276

while.body:                                       ; preds = %land.end
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5278
  %11 = load i32, i32* %channels, align 4, !dbg !5279
  store i32 %11, i32* %x.addr.i, align 4, !dbg !5280
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !5281
  %sub.i = sub nsw i32 %12, 1, !dbg !5282
  %shl.i = shl i32 %sub.i, 1, !dbg !5283
  %or.i = or i32 %shl.i, 1, !dbg !5284
  %13 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #10, !dbg !5285
  %sub1.i = sub nsw i32 31, %13, !dbg !5286
  %call4 = call i32 @get_bits_long(%struct.GetBitContext* %10, i32 %sub1.i), !dbg !5287
  %14 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5289
  %master_channel = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %14, i32 0, i32 1, !dbg !5290
  store i32 %call4, i32* %master_channel, align 4, !dbg !5291
  %15 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5292
  %master_channel5 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %15, i32 0, i32 1, !dbg !5294
  %16 = load i32, i32* %master_channel5, align 4, !dbg !5294
  %17 = load i32, i32* %channels, align 4, !dbg !5295
  %cmp6 = icmp uge i32 %16, %17, !dbg !5296
  br i1 %cmp6, label %if.then, label %if.end, !dbg !5297

if.then:                                          ; preds = %while.body
  %18 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5298
  %avctx7 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %18, i32 0, i32 0, !dbg !5300
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx7, align 8, !dbg !5300
  %20 = bitcast %struct.AVCodecContext* %19 to i8*, !dbg !5298
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i32 0, i32 0)), !dbg !5301
  store i32 -1094995529, i32* %retval, align 4, !dbg !5302
  br label %return, !dbg !5302

if.end:                                           ; preds = %while.body
  %21 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5303
  %master_channel8 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %21, i32 0, i32 1, !dbg !5305
  %22 = load i32, i32* %master_channel8, align 4, !dbg !5305
  %23 = load i32, i32* %c.addr, align 4, !dbg !5306
  %cmp9 = icmp ne i32 %22, %23, !dbg !5307
  br i1 %cmp9, label %if.then10, label %if.end34, !dbg !5308

if.then10:                                        ; preds = %if.end
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5309
  %call11 = call i32 @get_bits1(%struct.GetBitContext* %24), !dbg !5311
  %25 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5312
  %time_diff_flag = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %25, i32 0, i32 2, !dbg !5313
  store i32 %call11, i32* %time_diff_flag, align 4, !dbg !5314
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5315
  %call12 = call i32 @als_weighting(%struct.GetBitContext* %26, i32 1, i32 16), !dbg !5316
  %27 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5317
  %weighting = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %27, i32 0, i32 5, !dbg !5318
  %arrayidx = getelementptr inbounds [6 x i32], [6 x i32]* %weighting, i64 0, i64 0, !dbg !5317
  store i32 %call12, i32* %arrayidx, align 4, !dbg !5319
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5320
  %call13 = call i32 @als_weighting(%struct.GetBitContext* %28, i32 2, i32 14), !dbg !5321
  %29 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5322
  %weighting14 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %29, i32 0, i32 5, !dbg !5323
  %arrayidx15 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting14, i64 0, i64 1, !dbg !5322
  store i32 %call13, i32* %arrayidx15, align 4, !dbg !5324
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5325
  %call16 = call i32 @als_weighting(%struct.GetBitContext* %30, i32 1, i32 16), !dbg !5326
  %31 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5327
  %weighting17 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %31, i32 0, i32 5, !dbg !5328
  %arrayidx18 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting17, i64 0, i64 2, !dbg !5327
  store i32 %call16, i32* %arrayidx18, align 4, !dbg !5329
  %32 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5330
  %time_diff_flag19 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %32, i32 0, i32 2, !dbg !5332
  %33 = load i32, i32* %time_diff_flag19, align 4, !dbg !5332
  %tobool20 = icmp ne i32 %33, 0, !dbg !5330
  br i1 %tobool20, label %if.then21, label %if.end33, !dbg !5333

if.then21:                                        ; preds = %if.then10
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5334
  %call22 = call i32 @als_weighting(%struct.GetBitContext* %34, i32 1, i32 16), !dbg !5336
  %35 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5337
  %weighting23 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %35, i32 0, i32 5, !dbg !5338
  %arrayidx24 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting23, i64 0, i64 3, !dbg !5337
  store i32 %call22, i32* %arrayidx24, align 4, !dbg !5339
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5340
  %call25 = call i32 @als_weighting(%struct.GetBitContext* %36, i32 1, i32 16), !dbg !5341
  %37 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5342
  %weighting26 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %37, i32 0, i32 5, !dbg !5343
  %arrayidx27 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting26, i64 0, i64 4, !dbg !5342
  store i32 %call25, i32* %arrayidx27, align 4, !dbg !5344
  %38 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5345
  %call28 = call i32 @als_weighting(%struct.GetBitContext* %38, i32 1, i32 16), !dbg !5346
  %39 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5347
  %weighting29 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %39, i32 0, i32 5, !dbg !5348
  %arrayidx30 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting29, i64 0, i64 5, !dbg !5347
  store i32 %call28, i32* %arrayidx30, align 4, !dbg !5349
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5350
  %call31 = call i32 @get_bits1(%struct.GetBitContext* %40), !dbg !5351
  %41 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5352
  %time_diff_sign = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %41, i32 0, i32 3, !dbg !5353
  store i32 %call31, i32* %time_diff_sign, align 4, !dbg !5354
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5355
  %43 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5356
  %ltp_lag_length = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %43, i32 0, i32 15, !dbg !5357
  %44 = load i32, i32* %ltp_lag_length, align 8, !dbg !5357
  %sub = sub nsw i32 %44, 3, !dbg !5358
  %call32 = call i32 @get_bits(%struct.GetBitContext* %42, i32 %sub), !dbg !5359
  %add = add i32 %call32, 3, !dbg !5360
  %45 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5361
  %time_diff_index = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %45, i32 0, i32 4, !dbg !5362
  store i32 %add, i32* %time_diff_index, align 4, !dbg !5363
  br label %if.end33, !dbg !5364

if.end33:                                         ; preds = %if.then21, %if.then10
  br label %if.end34, !dbg !5365

if.end34:                                         ; preds = %if.end33, %if.end
  %46 = load %struct.ALSChannelData*, %struct.ALSChannelData** %current, align 8, !dbg !5366
  %incdec.ptr = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %46, i32 1, !dbg !5366
  store %struct.ALSChannelData* %incdec.ptr, %struct.ALSChannelData** %current, align 8, !dbg !5366
  %47 = load i32, i32* %entries, align 4, !dbg !5367
  %inc = add nsw i32 %47, 1, !dbg !5367
  store i32 %inc, i32* %entries, align 4, !dbg !5367
  br label %while.cond, !dbg !5368, !llvm.loop !5370

while.end:                                        ; preds = %land.end
  %48 = load i32, i32* %entries, align 4, !dbg !5371
  %49 = load i32, i32* %channels, align 4, !dbg !5373
  %cmp35 = icmp eq i32 %48, %49, !dbg !5374
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !5375

if.then36:                                        ; preds = %while.end
  %50 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5376
  %avctx37 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %50, i32 0, i32 0, !dbg !5378
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx37, align 8, !dbg !5378
  %52 = bitcast %struct.AVCodecContext* %51 to i8*, !dbg !5376
  call void (i8*, i32, i8*, ...) @av_log(i8* %52, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0)), !dbg !5379
  store i32 -1094995529, i32* %retval, align 4, !dbg !5380
  br label %return, !dbg !5380

if.end38:                                         ; preds = %while.end
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !5381
  %call39 = call i8* @align_get_bits(%struct.GetBitContext* %53), !dbg !5382
  store i32 0, i32* %retval, align 4, !dbg !5383
  br label %return, !dbg !5383

return:                                           ; preds = %if.end38, %if.then36, %if.then
  %54 = load i32, i32* %retval, align 4, !dbg !5384
  ret i32 %54, !dbg !5384
}

; Function Attrs: nounwind uwtable
define internal i32 @revert_channel_correlation(%struct.ALSDecContext* %ctx, %struct.ALSBlockData* %bd, %struct.ALSChannelData** %cd, i32* %reverted, i32 %offset, i32 %c) #1 !dbg !5385 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %bd.addr = alloca %struct.ALSBlockData*, align 8
  %cd.addr = alloca %struct.ALSChannelData**, align 8
  %reverted.addr = alloca i32*, align 8
  %offset.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %ch = alloca %struct.ALSChannelData*, align 8
  %dep = alloca i32, align 4
  %channels = alloca i32, align 4
  %channel_size = alloca i32, align 4
  %smp = alloca i64, align 8
  %begin = alloca i64, align 8
  %end = alloca i64, align 8
  %y = alloca i64, align 8
  %master = alloca i32*, align 8
  %t = alloca i32, align 4
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !5388, metadata !1692), !dbg !5389
  store %struct.ALSBlockData* %bd, %struct.ALSBlockData** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSBlockData** %bd.addr, metadata !5390, metadata !1692), !dbg !5391
  store %struct.ALSChannelData** %cd, %struct.ALSChannelData*** %cd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSChannelData*** %cd.addr, metadata !5392, metadata !1692), !dbg !5393
  store i32* %reverted, i32** %reverted.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %reverted.addr, metadata !5394, metadata !1692), !dbg !5395
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5396, metadata !1692), !dbg !5397
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !5398, metadata !1692), !dbg !5399
  call void @llvm.dbg.declare(metadata %struct.ALSChannelData** %ch, metadata !5400, metadata !1692), !dbg !5401
  %0 = load i32, i32* %c.addr, align 4, !dbg !5402
  %idxprom = sext i32 %0 to i64, !dbg !5403
  %1 = load %struct.ALSChannelData**, %struct.ALSChannelData*** %cd.addr, align 8, !dbg !5403
  %arrayidx = getelementptr inbounds %struct.ALSChannelData*, %struct.ALSChannelData** %1, i64 %idxprom, !dbg !5403
  %2 = load %struct.ALSChannelData*, %struct.ALSChannelData** %arrayidx, align 8, !dbg !5403
  store %struct.ALSChannelData* %2, %struct.ALSChannelData** %ch, align 8, !dbg !5401
  call void @llvm.dbg.declare(metadata i32* %dep, metadata !5404, metadata !1692), !dbg !5405
  store i32 0, i32* %dep, align 4, !dbg !5405
  call void @llvm.dbg.declare(metadata i32* %channels, metadata !5406, metadata !1692), !dbg !5407
  %3 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5408
  %avctx = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %3, i32 0, i32 0, !dbg !5409
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5409
  %channels1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 83, !dbg !5410
  %5 = load i32, i32* %channels1, align 4, !dbg !5410
  store i32 %5, i32* %channels, align 4, !dbg !5407
  call void @llvm.dbg.declare(metadata i32* %channel_size, metadata !5411, metadata !1692), !dbg !5412
  %6 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5413
  %sconf = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %6, i32 0, i32 1, !dbg !5414
  %frame_length = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %sconf, i32 0, i32 4, !dbg !5415
  %7 = load i32, i32* %frame_length, align 8, !dbg !5415
  %8 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5416
  %sconf2 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %8, i32 0, i32 1, !dbg !5417
  %max_order = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %sconf2, i32 0, i32 10, !dbg !5418
  %9 = load i32, i32* %max_order, align 8, !dbg !5418
  %add = add nsw i32 %7, %9, !dbg !5419
  store i32 %add, i32* %channel_size, align 4, !dbg !5412
  %10 = load i32, i32* %c.addr, align 4, !dbg !5420
  %idxprom3 = sext i32 %10 to i64, !dbg !5422
  %11 = load i32*, i32** %reverted.addr, align 8, !dbg !5422
  %arrayidx4 = getelementptr inbounds i32, i32* %11, i64 %idxprom3, !dbg !5422
  %12 = load i32, i32* %arrayidx4, align 4, !dbg !5422
  %tobool = icmp ne i32 %12, 0, !dbg !5422
  br i1 %tobool, label %if.then, label %if.end, !dbg !5423

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5424
  br label %return, !dbg !5424

if.end:                                           ; preds = %entry
  %13 = load i32, i32* %c.addr, align 4, !dbg !5425
  %idxprom5 = sext i32 %13 to i64, !dbg !5426
  %14 = load i32*, i32** %reverted.addr, align 8, !dbg !5426
  %arrayidx6 = getelementptr inbounds i32, i32* %14, i64 %idxprom5, !dbg !5426
  store i32 1, i32* %arrayidx6, align 4, !dbg !5427
  br label %while.cond, !dbg !5428

while.cond:                                       ; preds = %while.body, %if.end
  %15 = load i32, i32* %dep, align 4, !dbg !5429
  %16 = load i32, i32* %channels, align 4, !dbg !5431
  %cmp = icmp ult i32 %15, %16, !dbg !5432
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5433

land.rhs:                                         ; preds = %while.cond
  %17 = load i32, i32* %dep, align 4, !dbg !5434
  %idxprom7 = zext i32 %17 to i64, !dbg !5436
  %18 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5436
  %arrayidx8 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %18, i64 %idxprom7, !dbg !5436
  %stop_flag = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx8, i32 0, i32 0, !dbg !5437
  %19 = load i32, i32* %stop_flag, align 4, !dbg !5437
  %tobool9 = icmp ne i32 %19, 0, !dbg !5438
  %lnot = xor i1 %tobool9, true, !dbg !5438
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %20 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %20, label %while.body, label %while.end, !dbg !5439

while.body:                                       ; preds = %land.end
  %21 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5441
  %22 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5443
  %23 = load %struct.ALSChannelData**, %struct.ALSChannelData*** %cd.addr, align 8, !dbg !5444
  %24 = load i32*, i32** %reverted.addr, align 8, !dbg !5445
  %25 = load i32, i32* %offset.addr, align 4, !dbg !5446
  %26 = load i32, i32* %dep, align 4, !dbg !5447
  %idxprom10 = zext i32 %26 to i64, !dbg !5448
  %27 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5448
  %arrayidx11 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %27, i64 %idxprom10, !dbg !5448
  %master_channel = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx11, i32 0, i32 1, !dbg !5449
  %28 = load i32, i32* %master_channel, align 4, !dbg !5449
  %call = call i32 @revert_channel_correlation(%struct.ALSDecContext* %21, %struct.ALSBlockData* %22, %struct.ALSChannelData** %23, i32* %24, i32 %25, i32 %28), !dbg !5450
  %29 = load i32, i32* %dep, align 4, !dbg !5451
  %inc = add i32 %29, 1, !dbg !5451
  store i32 %inc, i32* %dep, align 4, !dbg !5451
  br label %while.cond, !dbg !5452, !llvm.loop !5454

while.end:                                        ; preds = %land.end
  %30 = load i32, i32* %dep, align 4, !dbg !5455
  %31 = load i32, i32* %channels, align 4, !dbg !5457
  %cmp12 = icmp eq i32 %30, %31, !dbg !5458
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !5459

if.then13:                                        ; preds = %while.end
  %32 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5460
  %avctx14 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %32, i32 0, i32 0, !dbg !5462
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx14, align 8, !dbg !5462
  %34 = bitcast %struct.AVCodecContext* %33 to i8*, !dbg !5460
  call void (i8*, i32, i8*, ...) @av_log(i8* %34, i32 24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21, i32 0, i32 0)), !dbg !5463
  store i32 -1094995529, i32* %retval, align 4, !dbg !5464
  br label %return, !dbg !5464

if.end15:                                         ; preds = %while.end
  %35 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5465
  %const_block = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %35, i32 0, i32 16, !dbg !5466
  %36 = load i32*, i32** %const_block, align 8, !dbg !5466
  %37 = load i32, i32* %c.addr, align 4, !dbg !5467
  %idx.ext = sext i32 %37 to i64, !dbg !5468
  %add.ptr = getelementptr inbounds i32, i32* %36, i64 %idx.ext, !dbg !5468
  %38 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5469
  %const_block16 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %38, i32 0, i32 2, !dbg !5470
  store i32* %add.ptr, i32** %const_block16, align 8, !dbg !5471
  %39 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5472
  %shift_lsbs = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %39, i32 0, i32 17, !dbg !5473
  %40 = load i32*, i32** %shift_lsbs, align 8, !dbg !5473
  %41 = load i32, i32* %c.addr, align 4, !dbg !5474
  %idx.ext17 = sext i32 %41 to i64, !dbg !5475
  %add.ptr18 = getelementptr inbounds i32, i32* %40, i64 %idx.ext17, !dbg !5475
  %42 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5476
  %shift_lsbs19 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %42, i32 0, i32 4, !dbg !5477
  store i32* %add.ptr18, i32** %shift_lsbs19, align 8, !dbg !5478
  %43 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5479
  %opt_order = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %43, i32 0, i32 18, !dbg !5480
  %44 = load i32*, i32** %opt_order, align 8, !dbg !5480
  %45 = load i32, i32* %c.addr, align 4, !dbg !5481
  %idx.ext20 = sext i32 %45 to i64, !dbg !5482
  %add.ptr21 = getelementptr inbounds i32, i32* %44, i64 %idx.ext20, !dbg !5482
  %46 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5483
  %opt_order22 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %46, i32 0, i32 5, !dbg !5484
  store i32* %add.ptr21, i32** %opt_order22, align 8, !dbg !5485
  %47 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5486
  %store_prev_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %47, i32 0, i32 19, !dbg !5487
  %48 = load i32*, i32** %store_prev_samples, align 8, !dbg !5487
  %49 = load i32, i32* %c.addr, align 4, !dbg !5488
  %idx.ext23 = sext i32 %49 to i64, !dbg !5489
  %add.ptr24 = getelementptr inbounds i32, i32* %48, i64 %idx.ext23, !dbg !5489
  %50 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5490
  %store_prev_samples25 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %50, i32 0, i32 6, !dbg !5491
  store i32* %add.ptr24, i32** %store_prev_samples25, align 8, !dbg !5492
  %51 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5493
  %use_ltp = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %51, i32 0, i32 20, !dbg !5494
  %52 = load i32*, i32** %use_ltp, align 8, !dbg !5494
  %53 = load i32, i32* %c.addr, align 4, !dbg !5495
  %idx.ext26 = sext i32 %53 to i64, !dbg !5496
  %add.ptr27 = getelementptr inbounds i32, i32* %52, i64 %idx.ext26, !dbg !5496
  %54 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5497
  %use_ltp28 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %54, i32 0, i32 7, !dbg !5498
  store i32* %add.ptr27, i32** %use_ltp28, align 8, !dbg !5499
  %55 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5500
  %ltp_lag = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %55, i32 0, i32 21, !dbg !5501
  %56 = load i32*, i32** %ltp_lag, align 8, !dbg !5501
  %57 = load i32, i32* %c.addr, align 4, !dbg !5502
  %idx.ext29 = sext i32 %57 to i64, !dbg !5503
  %add.ptr30 = getelementptr inbounds i32, i32* %56, i64 %idx.ext29, !dbg !5503
  %58 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5504
  %ltp_lag31 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %58, i32 0, i32 8, !dbg !5505
  store i32* %add.ptr30, i32** %ltp_lag31, align 8, !dbg !5506
  %59 = load i32, i32* %c.addr, align 4, !dbg !5507
  %idxprom32 = sext i32 %59 to i64, !dbg !5508
  %60 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5508
  %ltp_gain = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %60, i32 0, i32 22, !dbg !5509
  %61 = load i32**, i32*** %ltp_gain, align 8, !dbg !5509
  %arrayidx33 = getelementptr inbounds i32*, i32** %61, i64 %idxprom32, !dbg !5508
  %62 = load i32*, i32** %arrayidx33, align 8, !dbg !5508
  %63 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5510
  %ltp_gain34 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %63, i32 0, i32 9, !dbg !5511
  store i32* %62, i32** %ltp_gain34, align 8, !dbg !5512
  %64 = load i32, i32* %c.addr, align 4, !dbg !5513
  %idxprom35 = sext i32 %64 to i64, !dbg !5514
  %65 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5514
  %lpc_cof = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %65, i32 0, i32 26, !dbg !5515
  %66 = load i32**, i32*** %lpc_cof, align 8, !dbg !5515
  %arrayidx36 = getelementptr inbounds i32*, i32** %66, i64 %idxprom35, !dbg !5514
  %67 = load i32*, i32** %arrayidx36, align 8, !dbg !5514
  %68 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5516
  %lpc_cof37 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %68, i32 0, i32 11, !dbg !5517
  store i32* %67, i32** %lpc_cof37, align 8, !dbg !5518
  %69 = load i32, i32* %c.addr, align 4, !dbg !5519
  %idxprom38 = sext i32 %69 to i64, !dbg !5520
  %70 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5520
  %quant_cof = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %70, i32 0, i32 24, !dbg !5521
  %71 = load i32**, i32*** %quant_cof, align 8, !dbg !5521
  %arrayidx39 = getelementptr inbounds i32*, i32** %71, i64 %idxprom38, !dbg !5520
  %72 = load i32*, i32** %arrayidx39, align 8, !dbg !5520
  %73 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5522
  %quant_cof40 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %73, i32 0, i32 10, !dbg !5523
  store i32* %72, i32** %quant_cof40, align 8, !dbg !5524
  %74 = load i32, i32* %c.addr, align 4, !dbg !5525
  %idxprom41 = sext i32 %74 to i64, !dbg !5526
  %75 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5526
  %raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %75, i32 0, i32 33, !dbg !5527
  %76 = load i32**, i32*** %raw_samples, align 8, !dbg !5527
  %arrayidx42 = getelementptr inbounds i32*, i32** %76, i64 %idxprom41, !dbg !5526
  %77 = load i32*, i32** %arrayidx42, align 8, !dbg !5526
  %78 = load i32, i32* %offset.addr, align 4, !dbg !5528
  %idx.ext43 = zext i32 %78 to i64, !dbg !5529
  %add.ptr44 = getelementptr inbounds i32, i32* %77, i64 %idx.ext43, !dbg !5529
  %79 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5530
  %raw_samples45 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %79, i32 0, i32 12, !dbg !5531
  store i32* %add.ptr44, i32** %raw_samples45, align 8, !dbg !5532
  store i32 0, i32* %dep, align 4, !dbg !5533
  br label %for.cond, !dbg !5535

for.cond:                                         ; preds = %for.inc316, %if.end15
  %80 = load i32, i32* %dep, align 4, !dbg !5536
  %idxprom46 = zext i32 %80 to i64, !dbg !5539
  %81 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5539
  %arrayidx47 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %81, i64 %idxprom46, !dbg !5539
  %stop_flag48 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx47, i32 0, i32 0, !dbg !5540
  %82 = load i32, i32* %stop_flag48, align 4, !dbg !5540
  %tobool49 = icmp ne i32 %82, 0, !dbg !5541
  %lnot50 = xor i1 %tobool49, true, !dbg !5541
  br i1 %lnot50, label %for.body, label %for.end318, !dbg !5542

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %smp, metadata !5543, metadata !1692), !dbg !5546
  call void @llvm.dbg.declare(metadata i64* %begin, metadata !5547, metadata !1692), !dbg !5548
  store i64 1, i64* %begin, align 8, !dbg !5548
  call void @llvm.dbg.declare(metadata i64* %end, metadata !5549, metadata !1692), !dbg !5550
  %83 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5551
  %block_length = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %83, i32 0, i32 0, !dbg !5552
  %84 = load i32, i32* %block_length, align 8, !dbg !5552
  %sub = sub i32 %84, 1, !dbg !5553
  %conv = zext i32 %sub to i64, !dbg !5551
  store i64 %conv, i64* %end, align 8, !dbg !5550
  call void @llvm.dbg.declare(metadata i64* %y, metadata !5554, metadata !1692), !dbg !5555
  call void @llvm.dbg.declare(metadata i32** %master, metadata !5556, metadata !1692), !dbg !5557
  %85 = load i32, i32* %dep, align 4, !dbg !5558
  %idxprom51 = zext i32 %85 to i64, !dbg !5559
  %86 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5559
  %arrayidx52 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %86, i64 %idxprom51, !dbg !5559
  %master_channel53 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx52, i32 0, i32 1, !dbg !5560
  %87 = load i32, i32* %master_channel53, align 4, !dbg !5560
  %idxprom54 = sext i32 %87 to i64, !dbg !5561
  %88 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5561
  %raw_samples55 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %88, i32 0, i32 33, !dbg !5562
  %89 = load i32**, i32*** %raw_samples55, align 8, !dbg !5562
  %arrayidx56 = getelementptr inbounds i32*, i32** %89, i64 %idxprom54, !dbg !5561
  %90 = load i32*, i32** %arrayidx56, align 8, !dbg !5561
  %91 = load i32, i32* %offset.addr, align 4, !dbg !5563
  %idx.ext57 = zext i32 %91 to i64, !dbg !5564
  %add.ptr58 = getelementptr inbounds i32, i32* %90, i64 %idx.ext57, !dbg !5564
  store i32* %add.ptr58, i32** %master, align 8, !dbg !5557
  %92 = load i32, i32* %dep, align 4, !dbg !5565
  %idxprom59 = zext i32 %92 to i64, !dbg !5567
  %93 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5567
  %arrayidx60 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %93, i64 %idxprom59, !dbg !5567
  %master_channel61 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx60, i32 0, i32 1, !dbg !5568
  %94 = load i32, i32* %master_channel61, align 4, !dbg !5568
  %95 = load i32, i32* %c.addr, align 4, !dbg !5569
  %cmp62 = icmp eq i32 %94, %95, !dbg !5570
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !5571

if.then64:                                        ; preds = %for.body
  br label %for.inc316, !dbg !5572

if.end65:                                         ; preds = %for.body
  %96 = load i32, i32* %dep, align 4, !dbg !5573
  %idxprom66 = zext i32 %96 to i64, !dbg !5575
  %97 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5575
  %arrayidx67 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %97, i64 %idxprom66, !dbg !5575
  %time_diff_flag = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx67, i32 0, i32 2, !dbg !5576
  %98 = load i32, i32* %time_diff_flag, align 4, !dbg !5576
  %tobool68 = icmp ne i32 %98, 0, !dbg !5575
  br i1 %tobool68, label %if.then69, label %if.else240, !dbg !5577

if.then69:                                        ; preds = %if.end65
  call void @llvm.dbg.declare(metadata i32* %t, metadata !5578, metadata !1692), !dbg !5580
  %99 = load i32, i32* %dep, align 4, !dbg !5581
  %idxprom70 = zext i32 %99 to i64, !dbg !5582
  %100 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5582
  %arrayidx71 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %100, i64 %idxprom70, !dbg !5582
  %time_diff_index = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx71, i32 0, i32 4, !dbg !5583
  %101 = load i32, i32* %time_diff_index, align 4, !dbg !5583
  store i32 %101, i32* %t, align 4, !dbg !5580
  %102 = load i32, i32* %dep, align 4, !dbg !5584
  %idxprom72 = zext i32 %102 to i64, !dbg !5586
  %103 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5586
  %arrayidx73 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %103, i64 %idxprom72, !dbg !5586
  %time_diff_sign = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx73, i32 0, i32 3, !dbg !5587
  %104 = load i32, i32* %time_diff_sign, align 4, !dbg !5587
  %tobool74 = icmp ne i32 %104, 0, !dbg !5586
  br i1 %tobool74, label %if.then75, label %if.else, !dbg !5588

if.then75:                                        ; preds = %if.then69
  %105 = load i32, i32* %t, align 4, !dbg !5589
  %sub76 = sub nsw i32 0, %105, !dbg !5591
  store i32 %sub76, i32* %t, align 4, !dbg !5592
  %106 = load i64, i64* %begin, align 8, !dbg !5593
  %107 = load i32, i32* %t, align 4, !dbg !5595
  %conv77 = sext i32 %107 to i64, !dbg !5595
  %cmp78 = icmp slt i64 %106, %conv77, !dbg !5596
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !5597

if.then80:                                        ; preds = %if.then75
  %108 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5598
  %avctx81 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %108, i32 0, i32 0, !dbg !5600
  %109 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx81, align 8, !dbg !5600
  %110 = bitcast %struct.AVCodecContext* %109 to i8*, !dbg !5598
  %111 = load i64, i64* %begin, align 8, !dbg !5601
  %112 = load i32, i32* %t, align 4, !dbg !5602
  call void (i8*, i32, i8*, ...) @av_log(i8* %110, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i32 0, i32 0), i64 %111, i32 %112), !dbg !5603
  store i32 -1094995529, i32* %retval, align 4, !dbg !5604
  br label %return, !dbg !5604

if.end82:                                         ; preds = %if.then75
  %113 = load i32, i32* %t, align 4, !dbg !5605
  %conv83 = sext i32 %113 to i64, !dbg !5605
  %114 = load i64, i64* %begin, align 8, !dbg !5606
  %sub84 = sub nsw i64 %114, %conv83, !dbg !5606
  store i64 %sub84, i64* %begin, align 8, !dbg !5606
  br label %if.end93, !dbg !5607

if.else:                                          ; preds = %if.then69
  %115 = load i64, i64* %end, align 8, !dbg !5608
  %116 = load i32, i32* %t, align 4, !dbg !5611
  %conv85 = sext i32 %116 to i64, !dbg !5611
  %cmp86 = icmp slt i64 %115, %conv85, !dbg !5612
  br i1 %cmp86, label %if.then88, label %if.end90, !dbg !5613

if.then88:                                        ; preds = %if.else
  %117 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5614
  %avctx89 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %117, i32 0, i32 0, !dbg !5616
  %118 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx89, align 8, !dbg !5616
  %119 = bitcast %struct.AVCodecContext* %118 to i8*, !dbg !5614
  %120 = load i64, i64* %end, align 8, !dbg !5617
  %121 = load i32, i32* %t, align 4, !dbg !5618
  call void (i8*, i32, i8*, ...) @av_log(i8* %119, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i64 %120, i32 %121), !dbg !5619
  store i32 -1094995529, i32* %retval, align 4, !dbg !5620
  br label %return, !dbg !5620

if.end90:                                         ; preds = %if.else
  %122 = load i32, i32* %t, align 4, !dbg !5621
  %conv91 = sext i32 %122 to i64, !dbg !5621
  %123 = load i64, i64* %end, align 8, !dbg !5622
  %sub92 = sub nsw i64 %123, %conv91, !dbg !5622
  store i64 %sub92, i64* %end, align 8, !dbg !5622
  br label %if.end93

if.end93:                                         ; preds = %if.end90, %if.end82
  %124 = load i64, i64* %begin, align 8, !dbg !5623
  %sub94 = sub nsw i64 %124, 1, !dbg !5625
  %125 = load i64, i64* %begin, align 8, !dbg !5626
  %sub95 = sub nsw i64 %125, 1, !dbg !5627
  %126 = load i32, i32* %t, align 4, !dbg !5628
  %conv96 = sext i32 %126 to i64, !dbg !5628
  %add97 = add nsw i64 %sub95, %conv96, !dbg !5629
  %cmp98 = icmp sgt i64 %sub94, %add97, !dbg !5630
  br i1 %cmp98, label %cond.true, label %cond.false, !dbg !5631

cond.true:                                        ; preds = %if.end93
  %127 = load i64, i64* %begin, align 8, !dbg !5632
  %sub100 = sub nsw i64 %127, 1, !dbg !5634
  %128 = load i32, i32* %t, align 4, !dbg !5635
  %conv101 = sext i32 %128 to i64, !dbg !5635
  %add102 = add nsw i64 %sub100, %conv101, !dbg !5636
  br label %cond.end, !dbg !5637

cond.false:                                       ; preds = %if.end93
  %129 = load i64, i64* %begin, align 8, !dbg !5638
  %sub103 = sub nsw i64 %129, 1, !dbg !5640
  br label %cond.end, !dbg !5641

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add102, %cond.true ], [ %sub103, %cond.false ], !dbg !5642
  %130 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5644
  %raw_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %130, i32 0, i32 34, !dbg !5645
  %131 = load i32*, i32** %raw_buffer, align 8, !dbg !5645
  %132 = load i32*, i32** %master, align 8, !dbg !5646
  %sub.ptr.lhs.cast = ptrtoint i32* %131 to i64, !dbg !5647
  %sub.ptr.rhs.cast = ptrtoint i32* %132 to i64, !dbg !5647
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5647
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4, !dbg !5647
  %cmp104 = icmp slt i64 %cond, %sub.ptr.div, !dbg !5648
  br i1 %cmp104, label %if.then129, label %lor.lhs.false, !dbg !5649

lor.lhs.false:                                    ; preds = %cond.end
  %133 = load i64, i64* %end, align 8, !dbg !5650
  %add106 = add nsw i64 %133, 1, !dbg !5651
  %134 = load i64, i64* %end, align 8, !dbg !5652
  %add107 = add nsw i64 %134, 1, !dbg !5653
  %135 = load i32, i32* %t, align 4, !dbg !5654
  %conv108 = sext i32 %135 to i64, !dbg !5654
  %add109 = add nsw i64 %add107, %conv108, !dbg !5655
  %cmp110 = icmp sgt i64 %add106, %add109, !dbg !5656
  br i1 %cmp110, label %cond.true112, label %cond.false114, !dbg !5657

cond.true112:                                     ; preds = %lor.lhs.false
  %136 = load i64, i64* %end, align 8, !dbg !5658
  %add113 = add nsw i64 %136, 1, !dbg !5659
  br label %cond.end118, !dbg !5660

cond.false114:                                    ; preds = %lor.lhs.false
  %137 = load i64, i64* %end, align 8, !dbg !5661
  %add115 = add nsw i64 %137, 1, !dbg !5662
  %138 = load i32, i32* %t, align 4, !dbg !5663
  %conv116 = sext i32 %138 to i64, !dbg !5663
  %add117 = add nsw i64 %add115, %conv116, !dbg !5664
  br label %cond.end118, !dbg !5665

cond.end118:                                      ; preds = %cond.false114, %cond.true112
  %cond119 = phi i64 [ %add113, %cond.true112 ], [ %add117, %cond.false114 ], !dbg !5666
  %139 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5667
  %raw_buffer120 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %139, i32 0, i32 34, !dbg !5668
  %140 = load i32*, i32** %raw_buffer120, align 8, !dbg !5668
  %141 = load i32, i32* %channels, align 4, !dbg !5669
  %142 = load i32, i32* %channel_size, align 4, !dbg !5670
  %mul = mul i32 %141, %142, !dbg !5671
  %idx.ext121 = zext i32 %mul to i64, !dbg !5672
  %add.ptr122 = getelementptr inbounds i32, i32* %140, i64 %idx.ext121, !dbg !5672
  %143 = load i32*, i32** %master, align 8, !dbg !5673
  %sub.ptr.lhs.cast123 = ptrtoint i32* %add.ptr122 to i64, !dbg !5674
  %sub.ptr.rhs.cast124 = ptrtoint i32* %143 to i64, !dbg !5674
  %sub.ptr.sub125 = sub i64 %sub.ptr.lhs.cast123, %sub.ptr.rhs.cast124, !dbg !5674
  %sub.ptr.div126 = sdiv exact i64 %sub.ptr.sub125, 4, !dbg !5674
  %cmp127 = icmp sgt i64 %cond119, %sub.ptr.div126, !dbg !5675
  br i1 %cmp127, label %if.then129, label %if.end166, !dbg !5676

if.then129:                                       ; preds = %cond.end118, %cond.end
  %144 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5678
  %avctx130 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %144, i32 0, i32 0, !dbg !5680
  %145 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx130, align 8, !dbg !5680
  %146 = bitcast %struct.AVCodecContext* %145 to i8*, !dbg !5678
  %147 = load i32*, i32** %master, align 8, !dbg !5681
  %148 = load i64, i64* %begin, align 8, !dbg !5682
  %sub131 = sub nsw i64 %148, 1, !dbg !5683
  %149 = load i64, i64* %begin, align 8, !dbg !5684
  %sub132 = sub nsw i64 %149, 1, !dbg !5685
  %150 = load i32, i32* %t, align 4, !dbg !5686
  %conv133 = sext i32 %150 to i64, !dbg !5686
  %add134 = add nsw i64 %sub132, %conv133, !dbg !5687
  %cmp135 = icmp sgt i64 %sub131, %add134, !dbg !5688
  br i1 %cmp135, label %cond.true137, label %cond.false141, !dbg !5689

cond.true137:                                     ; preds = %if.then129
  %151 = load i64, i64* %begin, align 8, !dbg !5690
  %sub138 = sub nsw i64 %151, 1, !dbg !5692
  %152 = load i32, i32* %t, align 4, !dbg !5693
  %conv139 = sext i32 %152 to i64, !dbg !5693
  %add140 = add nsw i64 %sub138, %conv139, !dbg !5694
  br label %cond.end143, !dbg !5695

cond.false141:                                    ; preds = %if.then129
  %153 = load i64, i64* %begin, align 8, !dbg !5696
  %sub142 = sub nsw i64 %153, 1, !dbg !5698
  br label %cond.end143, !dbg !5699

cond.end143:                                      ; preds = %cond.false141, %cond.true137
  %cond144 = phi i64 [ %add140, %cond.true137 ], [ %sub142, %cond.false141 ], !dbg !5700
  %add.ptr145 = getelementptr inbounds i32, i32* %147, i64 %cond144, !dbg !5702
  %154 = load i32*, i32** %master, align 8, !dbg !5703
  %155 = load i64, i64* %end, align 8, !dbg !5704
  %add146 = add nsw i64 %155, 1, !dbg !5705
  %156 = load i64, i64* %end, align 8, !dbg !5706
  %add147 = add nsw i64 %156, 1, !dbg !5707
  %157 = load i32, i32* %t, align 4, !dbg !5708
  %conv148 = sext i32 %157 to i64, !dbg !5708
  %add149 = add nsw i64 %add147, %conv148, !dbg !5709
  %cmp150 = icmp sgt i64 %add146, %add149, !dbg !5710
  br i1 %cmp150, label %cond.true152, label %cond.false154, !dbg !5711

cond.true152:                                     ; preds = %cond.end143
  %158 = load i64, i64* %end, align 8, !dbg !5712
  %add153 = add nsw i64 %158, 1, !dbg !5714
  br label %cond.end158, !dbg !5715

cond.false154:                                    ; preds = %cond.end143
  %159 = load i64, i64* %end, align 8, !dbg !5716
  %add155 = add nsw i64 %159, 1, !dbg !5718
  %160 = load i32, i32* %t, align 4, !dbg !5719
  %conv156 = sext i32 %160 to i64, !dbg !5719
  %add157 = add nsw i64 %add155, %conv156, !dbg !5720
  br label %cond.end158, !dbg !5721

cond.end158:                                      ; preds = %cond.false154, %cond.true152
  %cond159 = phi i64 [ %add153, %cond.true152 ], [ %add157, %cond.false154 ], !dbg !5722
  %add.ptr160 = getelementptr inbounds i32, i32* %154, i64 %cond159, !dbg !5724
  %161 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5725
  %raw_buffer161 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %161, i32 0, i32 34, !dbg !5726
  %162 = load i32*, i32** %raw_buffer161, align 8, !dbg !5726
  %163 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5727
  %raw_buffer162 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %163, i32 0, i32 34, !dbg !5728
  %164 = load i32*, i32** %raw_buffer162, align 8, !dbg !5728
  %165 = load i32, i32* %channels, align 4, !dbg !5729
  %166 = load i32, i32* %channel_size, align 4, !dbg !5730
  %mul163 = mul i32 %165, %166, !dbg !5731
  %idx.ext164 = zext i32 %mul163 to i64, !dbg !5732
  %add.ptr165 = getelementptr inbounds i32, i32* %164, i64 %idx.ext164, !dbg !5732
  call void (i8*, i32, i8*, ...) @av_log(i8* %146, i32 16, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.24, i32 0, i32 0), i32* %add.ptr145, i32* %add.ptr160, i32* %162, i32* %add.ptr165), !dbg !5733
  store i32 -1094995529, i32* %retval, align 4, !dbg !5734
  br label %return, !dbg !5734

if.end166:                                        ; preds = %cond.end118
  %167 = load i64, i64* %begin, align 8, !dbg !5735
  store i64 %167, i64* %smp, align 8, !dbg !5737
  br label %for.cond167, !dbg !5738

for.cond167:                                      ; preds = %for.inc, %if.end166
  %168 = load i64, i64* %smp, align 8, !dbg !5739
  %169 = load i64, i64* %end, align 8, !dbg !5742
  %cmp168 = icmp slt i64 %168, %169, !dbg !5743
  br i1 %cmp168, label %for.body170, label %for.end, !dbg !5744

for.body170:                                      ; preds = %for.cond167
  %170 = load i32, i32* %dep, align 4, !dbg !5745
  %idxprom171 = zext i32 %170 to i64, !dbg !5747
  %171 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5747
  %arrayidx172 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %171, i64 %idxprom171, !dbg !5747
  %weighting = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx172, i32 0, i32 5, !dbg !5748
  %arrayidx173 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting, i64 0, i64 0, !dbg !5747
  %172 = load i32, i32* %arrayidx173, align 4, !dbg !5747
  %conv174 = sext i32 %172 to i64, !dbg !5749
  %173 = load i64, i64* %smp, align 8, !dbg !5750
  %sub175 = sub nsw i64 %173, 1, !dbg !5751
  %174 = load i32*, i32** %master, align 8, !dbg !5752
  %arrayidx176 = getelementptr inbounds i32, i32* %174, i64 %sub175, !dbg !5752
  %175 = load i32, i32* %arrayidx176, align 4, !dbg !5752
  %conv177 = sext i32 %175 to i64, !dbg !5753
  %mul178 = mul nsw i64 %conv174, %conv177, !dbg !5754
  %add179 = add nsw i64 64, %mul178, !dbg !5755
  %176 = load i32, i32* %dep, align 4, !dbg !5756
  %idxprom180 = zext i32 %176 to i64, !dbg !5757
  %177 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5757
  %arrayidx181 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %177, i64 %idxprom180, !dbg !5757
  %weighting182 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx181, i32 0, i32 5, !dbg !5758
  %arrayidx183 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting182, i64 0, i64 1, !dbg !5757
  %178 = load i32, i32* %arrayidx183, align 4, !dbg !5757
  %conv184 = sext i32 %178 to i64, !dbg !5759
  %179 = load i64, i64* %smp, align 8, !dbg !5760
  %180 = load i32*, i32** %master, align 8, !dbg !5761
  %arrayidx185 = getelementptr inbounds i32, i32* %180, i64 %179, !dbg !5761
  %181 = load i32, i32* %arrayidx185, align 4, !dbg !5761
  %conv186 = sext i32 %181 to i64, !dbg !5762
  %mul187 = mul nsw i64 %conv184, %conv186, !dbg !5763
  %add188 = add nsw i64 %add179, %mul187, !dbg !5764
  %182 = load i32, i32* %dep, align 4, !dbg !5765
  %idxprom189 = zext i32 %182 to i64, !dbg !5766
  %183 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5766
  %arrayidx190 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %183, i64 %idxprom189, !dbg !5766
  %weighting191 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx190, i32 0, i32 5, !dbg !5767
  %arrayidx192 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting191, i64 0, i64 2, !dbg !5766
  %184 = load i32, i32* %arrayidx192, align 4, !dbg !5766
  %conv193 = sext i32 %184 to i64, !dbg !5768
  %185 = load i64, i64* %smp, align 8, !dbg !5769
  %add194 = add nsw i64 %185, 1, !dbg !5770
  %186 = load i32*, i32** %master, align 8, !dbg !5771
  %arrayidx195 = getelementptr inbounds i32, i32* %186, i64 %add194, !dbg !5771
  %187 = load i32, i32* %arrayidx195, align 4, !dbg !5771
  %conv196 = sext i32 %187 to i64, !dbg !5772
  %mul197 = mul nsw i64 %conv193, %conv196, !dbg !5773
  %add198 = add nsw i64 %add188, %mul197, !dbg !5774
  %188 = load i32, i32* %dep, align 4, !dbg !5775
  %idxprom199 = zext i32 %188 to i64, !dbg !5776
  %189 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5776
  %arrayidx200 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %189, i64 %idxprom199, !dbg !5776
  %weighting201 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx200, i32 0, i32 5, !dbg !5777
  %arrayidx202 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting201, i64 0, i64 3, !dbg !5776
  %190 = load i32, i32* %arrayidx202, align 4, !dbg !5776
  %conv203 = sext i32 %190 to i64, !dbg !5778
  %191 = load i64, i64* %smp, align 8, !dbg !5779
  %sub204 = sub nsw i64 %191, 1, !dbg !5780
  %192 = load i32, i32* %t, align 4, !dbg !5781
  %conv205 = sext i32 %192 to i64, !dbg !5781
  %add206 = add nsw i64 %sub204, %conv205, !dbg !5782
  %193 = load i32*, i32** %master, align 8, !dbg !5783
  %arrayidx207 = getelementptr inbounds i32, i32* %193, i64 %add206, !dbg !5783
  %194 = load i32, i32* %arrayidx207, align 4, !dbg !5783
  %conv208 = sext i32 %194 to i64, !dbg !5784
  %mul209 = mul nsw i64 %conv203, %conv208, !dbg !5785
  %add210 = add nsw i64 %add198, %mul209, !dbg !5786
  %195 = load i32, i32* %dep, align 4, !dbg !5787
  %idxprom211 = zext i32 %195 to i64, !dbg !5788
  %196 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5788
  %arrayidx212 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %196, i64 %idxprom211, !dbg !5788
  %weighting213 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx212, i32 0, i32 5, !dbg !5789
  %arrayidx214 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting213, i64 0, i64 4, !dbg !5788
  %197 = load i32, i32* %arrayidx214, align 4, !dbg !5788
  %conv215 = sext i32 %197 to i64, !dbg !5790
  %198 = load i64, i64* %smp, align 8, !dbg !5791
  %199 = load i32, i32* %t, align 4, !dbg !5792
  %conv216 = sext i32 %199 to i64, !dbg !5792
  %add217 = add nsw i64 %198, %conv216, !dbg !5793
  %200 = load i32*, i32** %master, align 8, !dbg !5794
  %arrayidx218 = getelementptr inbounds i32, i32* %200, i64 %add217, !dbg !5794
  %201 = load i32, i32* %arrayidx218, align 4, !dbg !5794
  %conv219 = sext i32 %201 to i64, !dbg !5795
  %mul220 = mul nsw i64 %conv215, %conv219, !dbg !5796
  %add221 = add nsw i64 %add210, %mul220, !dbg !5797
  %202 = load i32, i32* %dep, align 4, !dbg !5798
  %idxprom222 = zext i32 %202 to i64, !dbg !5799
  %203 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5799
  %arrayidx223 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %203, i64 %idxprom222, !dbg !5799
  %weighting224 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx223, i32 0, i32 5, !dbg !5800
  %arrayidx225 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting224, i64 0, i64 5, !dbg !5799
  %204 = load i32, i32* %arrayidx225, align 4, !dbg !5799
  %conv226 = sext i32 %204 to i64, !dbg !5801
  %205 = load i64, i64* %smp, align 8, !dbg !5802
  %add227 = add nsw i64 %205, 1, !dbg !5803
  %206 = load i32, i32* %t, align 4, !dbg !5804
  %conv228 = sext i32 %206 to i64, !dbg !5804
  %add229 = add nsw i64 %add227, %conv228, !dbg !5805
  %207 = load i32*, i32** %master, align 8, !dbg !5806
  %arrayidx230 = getelementptr inbounds i32, i32* %207, i64 %add229, !dbg !5806
  %208 = load i32, i32* %arrayidx230, align 4, !dbg !5806
  %conv231 = sext i32 %208 to i64, !dbg !5807
  %mul232 = mul nsw i64 %conv226, %conv231, !dbg !5808
  %add233 = add nsw i64 %add221, %mul232, !dbg !5809
  store i64 %add233, i64* %y, align 8, !dbg !5810
  %209 = load i64, i64* %y, align 8, !dbg !5811
  %shr = ashr i64 %209, 7, !dbg !5812
  %210 = load i64, i64* %smp, align 8, !dbg !5813
  %211 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5814
  %raw_samples234 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %211, i32 0, i32 12, !dbg !5815
  %212 = load i32*, i32** %raw_samples234, align 8, !dbg !5815
  %arrayidx235 = getelementptr inbounds i32, i32* %212, i64 %210, !dbg !5814
  %213 = load i32, i32* %arrayidx235, align 4, !dbg !5816
  %conv236 = sext i32 %213 to i64, !dbg !5816
  %add237 = add nsw i64 %conv236, %shr, !dbg !5816
  %conv238 = trunc i64 %add237 to i32, !dbg !5816
  store i32 %conv238, i32* %arrayidx235, align 4, !dbg !5816
  br label %for.inc, !dbg !5817

for.inc:                                          ; preds = %for.body170
  %214 = load i64, i64* %smp, align 8, !dbg !5818
  %inc239 = add nsw i64 %214, 1, !dbg !5818
  store i64 %inc239, i64* %smp, align 8, !dbg !5818
  br label %for.cond167, !dbg !5820, !llvm.loop !5821

for.end:                                          ; preds = %for.cond167
  br label %if.end315, !dbg !5823

if.else240:                                       ; preds = %if.end65
  %215 = load i64, i64* %begin, align 8, !dbg !5824
  %sub241 = sub nsw i64 %215, 1, !dbg !5827
  %216 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5828
  %raw_buffer242 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %216, i32 0, i32 34, !dbg !5829
  %217 = load i32*, i32** %raw_buffer242, align 8, !dbg !5829
  %218 = load i32*, i32** %master, align 8, !dbg !5830
  %sub.ptr.lhs.cast243 = ptrtoint i32* %217 to i64, !dbg !5831
  %sub.ptr.rhs.cast244 = ptrtoint i32* %218 to i64, !dbg !5831
  %sub.ptr.sub245 = sub i64 %sub.ptr.lhs.cast243, %sub.ptr.rhs.cast244, !dbg !5831
  %sub.ptr.div246 = sdiv exact i64 %sub.ptr.sub245, 4, !dbg !5831
  %cmp247 = icmp slt i64 %sub241, %sub.ptr.div246, !dbg !5832
  br i1 %cmp247, label %if.then261, label %lor.lhs.false249, !dbg !5833

lor.lhs.false249:                                 ; preds = %if.else240
  %219 = load i64, i64* %end, align 8, !dbg !5834
  %add250 = add nsw i64 %219, 1, !dbg !5835
  %220 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5836
  %raw_buffer251 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %220, i32 0, i32 34, !dbg !5837
  %221 = load i32*, i32** %raw_buffer251, align 8, !dbg !5837
  %222 = load i32, i32* %channels, align 4, !dbg !5838
  %223 = load i32, i32* %channel_size, align 4, !dbg !5839
  %mul252 = mul i32 %222, %223, !dbg !5840
  %idx.ext253 = zext i32 %mul252 to i64, !dbg !5841
  %add.ptr254 = getelementptr inbounds i32, i32* %221, i64 %idx.ext253, !dbg !5841
  %224 = load i32*, i32** %master, align 8, !dbg !5842
  %sub.ptr.lhs.cast255 = ptrtoint i32* %add.ptr254 to i64, !dbg !5843
  %sub.ptr.rhs.cast256 = ptrtoint i32* %224 to i64, !dbg !5843
  %sub.ptr.sub257 = sub i64 %sub.ptr.lhs.cast255, %sub.ptr.rhs.cast256, !dbg !5843
  %sub.ptr.div258 = sdiv exact i64 %sub.ptr.sub257, 4, !dbg !5843
  %cmp259 = icmp sgt i64 %add250, %sub.ptr.div258, !dbg !5844
  br i1 %cmp259, label %if.then261, label %if.end272, !dbg !5845

if.then261:                                       ; preds = %lor.lhs.false249, %if.else240
  %225 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5847
  %avctx262 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %225, i32 0, i32 0, !dbg !5849
  %226 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx262, align 8, !dbg !5849
  %227 = bitcast %struct.AVCodecContext* %226 to i8*, !dbg !5847
  %228 = load i32*, i32** %master, align 8, !dbg !5850
  %229 = load i64, i64* %begin, align 8, !dbg !5851
  %add.ptr263 = getelementptr inbounds i32, i32* %228, i64 %229, !dbg !5852
  %add.ptr264 = getelementptr inbounds i32, i32* %add.ptr263, i64 -1, !dbg !5853
  %230 = load i32*, i32** %master, align 8, !dbg !5854
  %231 = load i64, i64* %end, align 8, !dbg !5855
  %add.ptr265 = getelementptr inbounds i32, i32* %230, i64 %231, !dbg !5856
  %add.ptr266 = getelementptr inbounds i32, i32* %add.ptr265, i64 1, !dbg !5857
  %232 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5858
  %raw_buffer267 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %232, i32 0, i32 34, !dbg !5859
  %233 = load i32*, i32** %raw_buffer267, align 8, !dbg !5859
  %234 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5860
  %raw_buffer268 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %234, i32 0, i32 34, !dbg !5861
  %235 = load i32*, i32** %raw_buffer268, align 8, !dbg !5861
  %236 = load i32, i32* %channels, align 4, !dbg !5862
  %237 = load i32, i32* %channel_size, align 4, !dbg !5863
  %mul269 = mul i32 %236, %237, !dbg !5864
  %idx.ext270 = zext i32 %mul269 to i64, !dbg !5865
  %add.ptr271 = getelementptr inbounds i32, i32* %235, i64 %idx.ext270, !dbg !5865
  call void (i8*, i32, i8*, ...) @av_log(i8* %227, i32 16, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.24, i32 0, i32 0), i32* %add.ptr264, i32* %add.ptr266, i32* %233, i32* %add.ptr271), !dbg !5866
  store i32 -1094995529, i32* %retval, align 4, !dbg !5867
  br label %return, !dbg !5867

if.end272:                                        ; preds = %lor.lhs.false249
  %238 = load i64, i64* %begin, align 8, !dbg !5868
  store i64 %238, i64* %smp, align 8, !dbg !5870
  br label %for.cond273, !dbg !5871

for.cond273:                                      ; preds = %for.inc312, %if.end272
  %239 = load i64, i64* %smp, align 8, !dbg !5872
  %240 = load i64, i64* %end, align 8, !dbg !5875
  %cmp274 = icmp slt i64 %239, %240, !dbg !5876
  br i1 %cmp274, label %for.body276, label %for.end314, !dbg !5877

for.body276:                                      ; preds = %for.cond273
  %241 = load i32, i32* %dep, align 4, !dbg !5878
  %idxprom277 = zext i32 %241 to i64, !dbg !5880
  %242 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5880
  %arrayidx278 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %242, i64 %idxprom277, !dbg !5880
  %weighting279 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx278, i32 0, i32 5, !dbg !5881
  %arrayidx280 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting279, i64 0, i64 0, !dbg !5880
  %243 = load i32, i32* %arrayidx280, align 4, !dbg !5880
  %conv281 = sext i32 %243 to i64, !dbg !5882
  %244 = load i64, i64* %smp, align 8, !dbg !5883
  %sub282 = sub nsw i64 %244, 1, !dbg !5884
  %245 = load i32*, i32** %master, align 8, !dbg !5885
  %arrayidx283 = getelementptr inbounds i32, i32* %245, i64 %sub282, !dbg !5885
  %246 = load i32, i32* %arrayidx283, align 4, !dbg !5885
  %conv284 = sext i32 %246 to i64, !dbg !5886
  %mul285 = mul nsw i64 %conv281, %conv284, !dbg !5887
  %add286 = add nsw i64 64, %mul285, !dbg !5888
  %247 = load i32, i32* %dep, align 4, !dbg !5889
  %idxprom287 = zext i32 %247 to i64, !dbg !5890
  %248 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5890
  %arrayidx288 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %248, i64 %idxprom287, !dbg !5890
  %weighting289 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx288, i32 0, i32 5, !dbg !5891
  %arrayidx290 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting289, i64 0, i64 1, !dbg !5890
  %249 = load i32, i32* %arrayidx290, align 4, !dbg !5890
  %conv291 = sext i32 %249 to i64, !dbg !5892
  %250 = load i64, i64* %smp, align 8, !dbg !5893
  %251 = load i32*, i32** %master, align 8, !dbg !5894
  %arrayidx292 = getelementptr inbounds i32, i32* %251, i64 %250, !dbg !5894
  %252 = load i32, i32* %arrayidx292, align 4, !dbg !5894
  %conv293 = sext i32 %252 to i64, !dbg !5895
  %mul294 = mul nsw i64 %conv291, %conv293, !dbg !5896
  %add295 = add nsw i64 %add286, %mul294, !dbg !5897
  %253 = load i32, i32* %dep, align 4, !dbg !5898
  %idxprom296 = zext i32 %253 to i64, !dbg !5899
  %254 = load %struct.ALSChannelData*, %struct.ALSChannelData** %ch, align 8, !dbg !5899
  %arrayidx297 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %254, i64 %idxprom296, !dbg !5899
  %weighting298 = getelementptr inbounds %struct.ALSChannelData, %struct.ALSChannelData* %arrayidx297, i32 0, i32 5, !dbg !5900
  %arrayidx299 = getelementptr inbounds [6 x i32], [6 x i32]* %weighting298, i64 0, i64 2, !dbg !5899
  %255 = load i32, i32* %arrayidx299, align 4, !dbg !5899
  %conv300 = sext i32 %255 to i64, !dbg !5901
  %256 = load i64, i64* %smp, align 8, !dbg !5902
  %add301 = add nsw i64 %256, 1, !dbg !5903
  %257 = load i32*, i32** %master, align 8, !dbg !5904
  %arrayidx302 = getelementptr inbounds i32, i32* %257, i64 %add301, !dbg !5904
  %258 = load i32, i32* %arrayidx302, align 4, !dbg !5904
  %conv303 = sext i32 %258 to i64, !dbg !5905
  %mul304 = mul nsw i64 %conv300, %conv303, !dbg !5906
  %add305 = add nsw i64 %add295, %mul304, !dbg !5907
  store i64 %add305, i64* %y, align 8, !dbg !5908
  %259 = load i64, i64* %y, align 8, !dbg !5909
  %shr306 = ashr i64 %259, 7, !dbg !5910
  %260 = load i64, i64* %smp, align 8, !dbg !5911
  %261 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5912
  %raw_samples307 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %261, i32 0, i32 12, !dbg !5913
  %262 = load i32*, i32** %raw_samples307, align 8, !dbg !5913
  %arrayidx308 = getelementptr inbounds i32, i32* %262, i64 %260, !dbg !5912
  %263 = load i32, i32* %arrayidx308, align 4, !dbg !5914
  %conv309 = sext i32 %263 to i64, !dbg !5914
  %add310 = add nsw i64 %conv309, %shr306, !dbg !5914
  %conv311 = trunc i64 %add310 to i32, !dbg !5914
  store i32 %conv311, i32* %arrayidx308, align 4, !dbg !5914
  br label %for.inc312, !dbg !5915

for.inc312:                                       ; preds = %for.body276
  %264 = load i64, i64* %smp, align 8, !dbg !5916
  %inc313 = add nsw i64 %264, 1, !dbg !5916
  store i64 %inc313, i64* %smp, align 8, !dbg !5916
  br label %for.cond273, !dbg !5918, !llvm.loop !5919

for.end314:                                       ; preds = %for.cond273
  br label %if.end315

if.end315:                                        ; preds = %for.end314, %for.end
  br label %for.inc316, !dbg !5921

for.inc316:                                       ; preds = %if.end315, %if.then64
  %265 = load i32, i32* %dep, align 4, !dbg !5922
  %inc317 = add i32 %265, 1, !dbg !5922
  store i32 %inc317, i32* %dep, align 4, !dbg !5922
  br label %for.cond, !dbg !5924, !llvm.loop !5925

for.end318:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5927
  br label %return, !dbg !5927

return:                                           ; preds = %for.end318, %if.then261, %cond.end158, %if.then88, %if.then80, %if.then13, %if.then
  %266 = load i32, i32* %retval, align 4, !dbg !5928
  ret i32 %266, !dbg !5928
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_block(%struct.ALSDecContext* %ctx, %struct.ALSBlockData* %bd) #1 !dbg !5929 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %bd.addr = alloca %struct.ALSBlockData*, align 8
  %smp = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !5930, metadata !1692), !dbg !5931
  store %struct.ALSBlockData* %bd, %struct.ALSBlockData** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSBlockData** %bd.addr, metadata !5932, metadata !1692), !dbg !5933
  call void @llvm.dbg.declare(metadata i32* %smp, metadata !5934, metadata !1692), !dbg !5935
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5936, metadata !1692), !dbg !5937
  store i32 0, i32* %ret, align 4, !dbg !5937
  %0 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5938
  %const_block = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %0, i32 0, i32 2, !dbg !5940
  %1 = load i32*, i32** %const_block, align 8, !dbg !5940
  %2 = load i32, i32* %1, align 4, !dbg !5941
  %tobool = icmp ne i32 %2, 0, !dbg !5941
  br i1 %tobool, label %if.then, label %if.else, !dbg !5942

if.then:                                          ; preds = %entry
  %3 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5943
  %4 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5944
  call void @decode_const_block_data(%struct.ALSDecContext* %3, %struct.ALSBlockData* %4), !dbg !5945
  br label %if.end, !dbg !5945

if.else:                                          ; preds = %entry
  %5 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !5946
  %6 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5947
  %call = call i32 @decode_var_block_data(%struct.ALSDecContext* %5, %struct.ALSBlockData* %6), !dbg !5948
  store i32 %call, i32* %ret, align 4, !dbg !5949
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %ret, align 4, !dbg !5950
  %cmp = icmp slt i32 %7, 0, !dbg !5952
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !5953

if.then1:                                         ; preds = %if.end
  %8 = load i32, i32* %ret, align 4, !dbg !5954
  store i32 %8, i32* %retval, align 4, !dbg !5955
  br label %return, !dbg !5955

if.end2:                                          ; preds = %if.end
  %9 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5956
  %shift_lsbs = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %9, i32 0, i32 4, !dbg !5958
  %10 = load i32*, i32** %shift_lsbs, align 8, !dbg !5958
  %11 = load i32, i32* %10, align 4, !dbg !5959
  %tobool3 = icmp ne i32 %11, 0, !dbg !5959
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !5960

if.then4:                                         ; preds = %if.end2
  store i32 0, i32* %smp, align 4, !dbg !5961
  br label %for.cond, !dbg !5963

for.cond:                                         ; preds = %for.inc, %if.then4
  %12 = load i32, i32* %smp, align 4, !dbg !5964
  %13 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5967
  %block_length = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %13, i32 0, i32 0, !dbg !5968
  %14 = load i32, i32* %block_length, align 8, !dbg !5968
  %cmp5 = icmp ult i32 %12, %14, !dbg !5969
  br i1 %cmp5, label %for.body, label %for.end, !dbg !5970

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5971
  %shift_lsbs6 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %15, i32 0, i32 4, !dbg !5972
  %16 = load i32*, i32** %shift_lsbs6, align 8, !dbg !5972
  %17 = load i32, i32* %16, align 4, !dbg !5973
  %18 = load i32, i32* %smp, align 4, !dbg !5974
  %idxprom = zext i32 %18 to i64, !dbg !5975
  %19 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !5975
  %raw_samples = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %19, i32 0, i32 12, !dbg !5976
  %20 = load i32*, i32** %raw_samples, align 8, !dbg !5976
  %arrayidx = getelementptr inbounds i32, i32* %20, i64 %idxprom, !dbg !5975
  %21 = load i32, i32* %arrayidx, align 4, !dbg !5977
  %shl = shl i32 %21, %17, !dbg !5977
  store i32 %shl, i32* %arrayidx, align 4, !dbg !5977
  br label %for.inc, !dbg !5975

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %smp, align 4, !dbg !5978
  %inc = add i32 %22, 1, !dbg !5978
  store i32 %inc, i32* %smp, align 4, !dbg !5978
  br label %for.cond, !dbg !5980, !llvm.loop !5981

for.end:                                          ; preds = %for.cond
  br label %if.end7, !dbg !5983

if.end7:                                          ; preds = %for.end, %if.end2
  store i32 0, i32* %retval, align 4, !dbg !5985
  br label %return, !dbg !5985

return:                                           ; preds = %if.end7, %if.then1
  %23 = load i32, i32* %retval, align 4, !dbg !5986
  ret i32 %23, !dbg !5986
}

; Function Attrs: nounwind uwtable
define internal i32 @read_diff_float_data(%struct.ALSDecContext* %ctx, i32 %ra_frame) #1 !dbg !5987 {
entry:
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !5988, metadata !1692), !dbg !5992
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !6006, metadata !1692), !dbg !6007
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2478, metadata !1692), !dbg !6008
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %ra_frame.addr = alloca i32, align 4
  %avctx = alloca %struct.AVCodecContext*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %acf = alloca %struct.SoftFloat_IEEE754*, align 8
  %shift_value = alloca i32*, align 8
  %last_shift_value = alloca i32*, align 8
  %last_acf_mantissa = alloca i32*, align 8
  %raw_mantissa = alloca i32**, align 8
  %nbits = alloca i32*, align 8
  %larray = alloca i8*, align 8
  %frame_length = alloca i32, align 4
  %scale = alloca %struct.SoftFloat_IEEE754, align 8
  %partA_flag = alloca i32, align 4
  %highest_byte = alloca i32, align 4
  %shift_amp = alloca i32, align 4
  %tmp_32 = alloca i32, align 4
  %use_acf = alloca i32, align 4
  %nchars = alloca i32, align 4
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %k = alloca i64, align 8
  %nbits_aligned = alloca i64, align 8
  %acc = alloca i64, align 8
  %j = alloca i64, align 8
  %sign = alloca i32, align 4
  %e = alloca i32, align 4
  %mantissa = alloca i32, align 4
  %tmp = alloca %struct.SoftFloat_IEEE754, align 8
  %pcm_sf = alloca %struct.SoftFloat_IEEE754, align 8
  %tmp279 = alloca %struct.SoftFloat_IEEE754, align 8
  %tmp295 = alloca %struct.SoftFloat_IEEE754, align 8
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !6017, metadata !1692), !dbg !6018
  store i32 %ra_frame, i32* %ra_frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ra_frame.addr, metadata !6019, metadata !1692), !dbg !6020
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !6021, metadata !1692), !dbg !6022
  %0 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6023
  %avctx1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %0, i32 0, i32 0, !dbg !6024
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !6024
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !6022
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !6025, metadata !1692), !dbg !6026
  %2 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6027
  %gb2 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %2, i32 0, i32 2, !dbg !6028
  store %struct.GetBitContext* %gb2, %struct.GetBitContext** %gb, align 8, !dbg !6026
  call void @llvm.dbg.declare(metadata %struct.SoftFloat_IEEE754** %acf, metadata !6029, metadata !1692), !dbg !6030
  %3 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6031
  %acf3 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %3, i32 0, i32 37, !dbg !6032
  %4 = load %struct.SoftFloat_IEEE754*, %struct.SoftFloat_IEEE754** %acf3, align 8, !dbg !6032
  store %struct.SoftFloat_IEEE754* %4, %struct.SoftFloat_IEEE754** %acf, align 8, !dbg !6030
  call void @llvm.dbg.declare(metadata i32** %shift_value, metadata !6033, metadata !1692), !dbg !6034
  %5 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6035
  %shift_value4 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %5, i32 0, i32 39, !dbg !6036
  %6 = load i32*, i32** %shift_value4, align 8, !dbg !6036
  store i32* %6, i32** %shift_value, align 8, !dbg !6034
  call void @llvm.dbg.declare(metadata i32** %last_shift_value, metadata !6037, metadata !1692), !dbg !6038
  %7 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6039
  %last_shift_value5 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %7, i32 0, i32 40, !dbg !6040
  %8 = load i32*, i32** %last_shift_value5, align 8, !dbg !6040
  store i32* %8, i32** %last_shift_value, align 8, !dbg !6038
  call void @llvm.dbg.declare(metadata i32** %last_acf_mantissa, metadata !6041, metadata !1692), !dbg !6042
  %9 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6043
  %last_acf_mantissa6 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %9, i32 0, i32 38, !dbg !6044
  %10 = load i32*, i32** %last_acf_mantissa6, align 8, !dbg !6044
  store i32* %10, i32** %last_acf_mantissa, align 8, !dbg !6042
  call void @llvm.dbg.declare(metadata i32*** %raw_mantissa, metadata !6045, metadata !1692), !dbg !6046
  %11 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6047
  %raw_mantissa7 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %11, i32 0, i32 41, !dbg !6048
  %12 = load i32**, i32*** %raw_mantissa7, align 8, !dbg !6048
  store i32** %12, i32*** %raw_mantissa, align 8, !dbg !6046
  call void @llvm.dbg.declare(metadata i32** %nbits, metadata !6049, metadata !1692), !dbg !6050
  %13 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6051
  %nbits8 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %13, i32 0, i32 43, !dbg !6052
  %14 = load i32*, i32** %nbits8, align 8, !dbg !6052
  store i32* %14, i32** %nbits, align 8, !dbg !6050
  call void @llvm.dbg.declare(metadata i8** %larray, metadata !6053, metadata !1692), !dbg !6054
  %15 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6055
  %larray9 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %15, i32 0, i32 42, !dbg !6056
  %16 = load i8*, i8** %larray9, align 8, !dbg !6056
  store i8* %16, i8** %larray, align 8, !dbg !6054
  call void @llvm.dbg.declare(metadata i32* %frame_length, metadata !6057, metadata !1692), !dbg !6058
  %17 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6059
  %cur_frame_length = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %17, i32 0, i32 7, !dbg !6060
  %18 = load i32, i32* %cur_frame_length, align 8, !dbg !6060
  store i32 %18, i32* %frame_length, align 4, !dbg !6058
  call void @llvm.dbg.declare(metadata %struct.SoftFloat_IEEE754* %scale, metadata !6061, metadata !1692), !dbg !6062
  call void @av_int2sf_ieee754(%struct.SoftFloat_IEEE754* sret %scale, i64 1, i32 23), !dbg !6063
  call void @llvm.dbg.declare(metadata i32* %partA_flag, metadata !6064, metadata !1692), !dbg !6065
  call void @llvm.dbg.declare(metadata i32* %highest_byte, metadata !6066, metadata !1692), !dbg !6067
  call void @llvm.dbg.declare(metadata i32* %shift_amp, metadata !6068, metadata !1692), !dbg !6069
  call void @llvm.dbg.declare(metadata i32* %tmp_32, metadata !6070, metadata !1692), !dbg !6071
  call void @llvm.dbg.declare(metadata i32* %use_acf, metadata !6072, metadata !1692), !dbg !6073
  call void @llvm.dbg.declare(metadata i32* %nchars, metadata !6074, metadata !1692), !dbg !6075
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6076, metadata !1692), !dbg !6077
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6078, metadata !1692), !dbg !6079
  call void @llvm.dbg.declare(metadata i64* %k, metadata !6080, metadata !1692), !dbg !6081
  call void @llvm.dbg.declare(metadata i64* %nbits_aligned, metadata !6082, metadata !1692), !dbg !6083
  call void @llvm.dbg.declare(metadata i64* %acc, metadata !6084, metadata !1692), !dbg !6085
  call void @llvm.dbg.declare(metadata i64* %j, metadata !6086, metadata !1692), !dbg !6087
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !6088, metadata !1692), !dbg !6089
  call void @llvm.dbg.declare(metadata i32* %e, metadata !6090, metadata !1692), !dbg !6091
  call void @llvm.dbg.declare(metadata i32* %mantissa, metadata !6092, metadata !1692), !dbg !6093
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6094
  call void @skip_bits_long(%struct.GetBitContext* %19, i32 32), !dbg !6095
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6096
  %call = call i32 @get_bits1(%struct.GetBitContext* %20), !dbg !6097
  store i32 %call, i32* %use_acf, align 4, !dbg !6098
  %21 = load i32, i32* %ra_frame.addr, align 4, !dbg !6099
  %tobool = icmp ne i32 %21, 0, !dbg !6099
  br i1 %tobool, label %if.then, label %if.end, !dbg !6101

if.then:                                          ; preds = %entry
  %22 = load i32*, i32** %last_acf_mantissa, align 8, !dbg !6102
  %23 = bitcast i32* %22 to i8*, !dbg !6104
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6105
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 83, !dbg !6106
  %25 = load i32, i32* %channels, align 4, !dbg !6106
  %conv = sext i32 %25 to i64, !dbg !6105
  %mul = mul i64 %conv, 4, !dbg !6107
  call void @llvm.memset.p0i8.i64(i8* %23, i8 0, i64 %mul, i32 4, i1 false), !dbg !6104
  %26 = load i32*, i32** %last_shift_value, align 8, !dbg !6108
  %27 = bitcast i32* %26 to i8*, !dbg !6109
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6110
  %channels10 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 83, !dbg !6111
  %29 = load i32, i32* %channels10, align 4, !dbg !6111
  %conv11 = sext i32 %29 to i64, !dbg !6110
  %mul12 = mul i64 %conv11, 4, !dbg !6112
  call void @llvm.memset.p0i8.i64(i8* %27, i8 0, i64 %mul12, i32 4, i1 false), !dbg !6109
  %30 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6113
  %mlz = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %30, i32 0, i32 36, !dbg !6114
  %31 = load %struct.MLZ*, %struct.MLZ** %mlz, align 8, !dbg !6114
  call void @ff_mlz_flush_dict(%struct.MLZ* %31), !dbg !6115
  br label %if.end, !dbg !6116

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %c, align 4, !dbg !6117
  br label %for.cond, !dbg !6118

for.cond:                                         ; preds = %for.inc348, %if.end
  %32 = load i32, i32* %c, align 4, !dbg !6119
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6121
  %channels13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 83, !dbg !6122
  %34 = load i32, i32* %channels13, align 4, !dbg !6122
  %cmp = icmp slt i32 %32, %34, !dbg !6123
  br i1 %cmp, label %for.body, label %for.end350, !dbg !6124

for.body:                                         ; preds = %for.cond
  %35 = load i32, i32* %use_acf, align 4, !dbg !6125
  %tobool15 = icmp ne i32 %35, 0, !dbg !6125
  br i1 %tobool15, label %if.then16, label %if.else26, !dbg !6127

if.then16:                                        ; preds = %for.body
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6128
  %call17 = call i32 @get_bits1(%struct.GetBitContext* %36), !dbg !6131
  %tobool18 = icmp ne i32 %call17, 0, !dbg !6131
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !6132

if.then19:                                        ; preds = %if.then16
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6133
  %call20 = call i32 @get_bits(%struct.GetBitContext* %37, i32 23), !dbg !6135
  store i32 %call20, i32* %tmp_32, align 4, !dbg !6136
  %38 = load i32, i32* %tmp_32, align 4, !dbg !6137
  %39 = load i32, i32* %c, align 4, !dbg !6138
  %idxprom = sext i32 %39 to i64, !dbg !6139
  %40 = load i32*, i32** %last_acf_mantissa, align 8, !dbg !6139
  %arrayidx = getelementptr inbounds i32, i32* %40, i64 %idxprom, !dbg !6139
  store i32 %38, i32* %arrayidx, align 4, !dbg !6140
  br label %if.end23, !dbg !6141

if.else:                                          ; preds = %if.then16
  %41 = load i32, i32* %c, align 4, !dbg !6142
  %idxprom21 = sext i32 %41 to i64, !dbg !6144
  %42 = load i32*, i32** %last_acf_mantissa, align 8, !dbg !6144
  %arrayidx22 = getelementptr inbounds i32, i32* %42, i64 %idxprom21, !dbg !6144
  %43 = load i32, i32* %arrayidx22, align 4, !dbg !6144
  store i32 %43, i32* %tmp_32, align 4, !dbg !6145
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then19
  %44 = load i32, i32* %c, align 4, !dbg !6146
  %idxprom24 = sext i32 %44 to i64, !dbg !6147
  %45 = load %struct.SoftFloat_IEEE754*, %struct.SoftFloat_IEEE754** %acf, align 8, !dbg !6147
  %arrayidx25 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %45, i64 %idxprom24, !dbg !6147
  %46 = load i32, i32* %tmp_32, align 4, !dbg !6148
  call void @av_bits2sf_ieee754(%struct.SoftFloat_IEEE754* sret %tmp, i32 %46), !dbg !6149
  %47 = bitcast %struct.SoftFloat_IEEE754* %arrayidx25 to i8*, !dbg !6149
  %48 = bitcast %struct.SoftFloat_IEEE754* %tmp to i8*, !dbg !6149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 24, i32 8, i1 false), !dbg !6150
  br label %if.end29, !dbg !6152

if.else26:                                        ; preds = %for.body
  %49 = load i32, i32* %c, align 4, !dbg !6153
  %idxprom27 = sext i32 %49 to i64, !dbg !6155
  %50 = load %struct.SoftFloat_IEEE754*, %struct.SoftFloat_IEEE754** %acf, align 8, !dbg !6155
  %arrayidx28 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %50, i64 %idxprom27, !dbg !6155
  %51 = bitcast %struct.SoftFloat_IEEE754* %arrayidx28 to i8*, !dbg !6156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* bitcast (%struct.SoftFloat_IEEE754* @FLOAT_1 to i8*), i64 24, i32 8, i1 false), !dbg !6156
  br label %if.end29

if.end29:                                         ; preds = %if.else26, %if.end23
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6157
  %call30 = call i32 @get_bits(%struct.GetBitContext* %52, i32 2), !dbg !6158
  store i32 %call30, i32* %highest_byte, align 4, !dbg !6159
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6160
  %call31 = call i32 @get_bits1(%struct.GetBitContext* %53), !dbg !6161
  store i32 %call31, i32* %partA_flag, align 4, !dbg !6162
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6163
  %call32 = call i32 @get_bits1(%struct.GetBitContext* %54), !dbg !6164
  store i32 %call32, i32* %shift_amp, align 4, !dbg !6165
  %55 = load i32, i32* %shift_amp, align 4, !dbg !6166
  %tobool33 = icmp ne i32 %55, 0, !dbg !6166
  br i1 %tobool33, label %if.then34, label %if.else42, !dbg !6168

if.then34:                                        ; preds = %if.end29
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6169
  %call35 = call i32 @get_bits(%struct.GetBitContext* %56, i32 8), !dbg !6171
  %57 = load i32, i32* %c, align 4, !dbg !6172
  %idxprom36 = sext i32 %57 to i64, !dbg !6173
  %58 = load i32*, i32** %shift_value, align 8, !dbg !6173
  %arrayidx37 = getelementptr inbounds i32, i32* %58, i64 %idxprom36, !dbg !6173
  store i32 %call35, i32* %arrayidx37, align 4, !dbg !6174
  %59 = load i32, i32* %c, align 4, !dbg !6175
  %idxprom38 = sext i32 %59 to i64, !dbg !6176
  %60 = load i32*, i32** %shift_value, align 8, !dbg !6176
  %arrayidx39 = getelementptr inbounds i32, i32* %60, i64 %idxprom38, !dbg !6176
  %61 = load i32, i32* %arrayidx39, align 4, !dbg !6176
  %62 = load i32, i32* %c, align 4, !dbg !6177
  %idxprom40 = sext i32 %62 to i64, !dbg !6178
  %63 = load i32*, i32** %last_shift_value, align 8, !dbg !6178
  %arrayidx41 = getelementptr inbounds i32, i32* %63, i64 %idxprom40, !dbg !6178
  store i32 %61, i32* %arrayidx41, align 4, !dbg !6179
  br label %if.end47, !dbg !6180

if.else42:                                        ; preds = %if.end29
  %64 = load i32, i32* %c, align 4, !dbg !6181
  %idxprom43 = sext i32 %64 to i64, !dbg !6183
  %65 = load i32*, i32** %last_shift_value, align 8, !dbg !6183
  %arrayidx44 = getelementptr inbounds i32, i32* %65, i64 %idxprom43, !dbg !6183
  %66 = load i32, i32* %arrayidx44, align 4, !dbg !6183
  %67 = load i32, i32* %c, align 4, !dbg !6184
  %idxprom45 = sext i32 %67 to i64, !dbg !6185
  %68 = load i32*, i32** %shift_value, align 8, !dbg !6185
  %arrayidx46 = getelementptr inbounds i32, i32* %68, i64 %idxprom45, !dbg !6185
  store i32 %66, i32* %arrayidx46, align 4, !dbg !6186
  br label %if.end47

if.end47:                                         ; preds = %if.else42, %if.then34
  %69 = load i32, i32* %partA_flag, align 4, !dbg !6187
  %tobool48 = icmp ne i32 %69, 0, !dbg !6187
  br i1 %tobool48, label %if.then49, label %if.end109, !dbg !6188

if.then49:                                        ; preds = %if.end47
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6189
  %call50 = call i32 @get_bits1(%struct.GetBitContext* %70), !dbg !6190
  %tobool51 = icmp ne i32 %call50, 0, !dbg !6190
  br i1 %tobool51, label %if.else71, label %if.then52, !dbg !6191

if.then52:                                        ; preds = %if.then49
  store i32 0, i32* %i, align 4, !dbg !6192
  br label %for.cond53, !dbg !6195

for.cond53:                                       ; preds = %for.inc, %if.then52
  %71 = load i32, i32* %i, align 4, !dbg !6196
  %72 = load i32, i32* %frame_length, align 4, !dbg !6199
  %cmp54 = icmp slt i32 %71, %72, !dbg !6200
  br i1 %cmp54, label %for.body56, label %for.end, !dbg !6201

for.body56:                                       ; preds = %for.cond53
  %73 = load i32, i32* %i, align 4, !dbg !6202
  %idxprom57 = sext i32 %73 to i64, !dbg !6205
  %74 = load i32, i32* %c, align 4, !dbg !6206
  %idxprom58 = sext i32 %74 to i64, !dbg !6205
  %75 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6205
  %raw_samples = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %75, i32 0, i32 33, !dbg !6207
  %76 = load i32**, i32*** %raw_samples, align 8, !dbg !6207
  %arrayidx59 = getelementptr inbounds i32*, i32** %76, i64 %idxprom58, !dbg !6205
  %77 = load i32*, i32** %arrayidx59, align 8, !dbg !6205
  %arrayidx60 = getelementptr inbounds i32, i32* %77, i64 %idxprom57, !dbg !6205
  %78 = load i32, i32* %arrayidx60, align 4, !dbg !6205
  %cmp61 = icmp eq i32 %78, 0, !dbg !6208
  br i1 %cmp61, label %if.then63, label %if.end70, !dbg !6209

if.then63:                                        ; preds = %for.body56
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6210
  %call64 = call i32 @get_bits_long(%struct.GetBitContext* %79, i32 32), !dbg !6212
  %80 = load i32, i32* %i, align 4, !dbg !6213
  %idxprom65 = sext i32 %80 to i64, !dbg !6214
  %81 = load i32, i32* %c, align 4, !dbg !6215
  %idxprom66 = sext i32 %81 to i64, !dbg !6214
  %82 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6214
  %raw_mantissa67 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %82, i32 0, i32 41, !dbg !6216
  %83 = load i32**, i32*** %raw_mantissa67, align 8, !dbg !6216
  %arrayidx68 = getelementptr inbounds i32*, i32** %83, i64 %idxprom66, !dbg !6214
  %84 = load i32*, i32** %arrayidx68, align 8, !dbg !6214
  %arrayidx69 = getelementptr inbounds i32, i32* %84, i64 %idxprom65, !dbg !6214
  store i32 %call64, i32* %arrayidx69, align 4, !dbg !6217
  br label %if.end70, !dbg !6218

if.end70:                                         ; preds = %if.then63, %for.body56
  br label %for.inc, !dbg !6219

for.inc:                                          ; preds = %if.end70
  %85 = load i32, i32* %i, align 4, !dbg !6220
  %inc = add nsw i32 %85, 1, !dbg !6220
  store i32 %inc, i32* %i, align 4, !dbg !6220
  br label %for.cond53, !dbg !6222, !llvm.loop !6223

for.end:                                          ; preds = %for.cond53
  br label %if.end108, !dbg !6225

if.else71:                                        ; preds = %if.then49
  store i32 0, i32* %nchars, align 4, !dbg !6226
  store i32 0, i32* %i, align 4, !dbg !6227
  br label %for.cond72, !dbg !6229

for.cond72:                                       ; preds = %for.inc85, %if.else71
  %86 = load i32, i32* %i, align 4, !dbg !6230
  %87 = load i32, i32* %frame_length, align 4, !dbg !6233
  %cmp73 = icmp slt i32 %86, %87, !dbg !6234
  br i1 %cmp73, label %for.body75, label %for.end87, !dbg !6235

for.body75:                                       ; preds = %for.cond72
  %88 = load i32, i32* %i, align 4, !dbg !6236
  %idxprom76 = sext i32 %88 to i64, !dbg !6239
  %89 = load i32, i32* %c, align 4, !dbg !6240
  %idxprom77 = sext i32 %89 to i64, !dbg !6239
  %90 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6239
  %raw_samples78 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %90, i32 0, i32 33, !dbg !6241
  %91 = load i32**, i32*** %raw_samples78, align 8, !dbg !6241
  %arrayidx79 = getelementptr inbounds i32*, i32** %91, i64 %idxprom77, !dbg !6239
  %92 = load i32*, i32** %arrayidx79, align 8, !dbg !6239
  %arrayidx80 = getelementptr inbounds i32, i32* %92, i64 %idxprom76, !dbg !6239
  %93 = load i32, i32* %arrayidx80, align 4, !dbg !6239
  %cmp81 = icmp eq i32 %93, 0, !dbg !6242
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !6243

if.then83:                                        ; preds = %for.body75
  %94 = load i32, i32* %nchars, align 4, !dbg !6244
  %add = add nsw i32 %94, 4, !dbg !6244
  store i32 %add, i32* %nchars, align 4, !dbg !6244
  br label %if.end84, !dbg !6246

if.end84:                                         ; preds = %if.then83, %for.body75
  br label %for.inc85, !dbg !6247

for.inc85:                                        ; preds = %if.end84
  %95 = load i32, i32* %i, align 4, !dbg !6248
  %inc86 = add nsw i32 %95, 1, !dbg !6248
  store i32 %inc86, i32* %i, align 4, !dbg !6248
  br label %for.cond72, !dbg !6250, !llvm.loop !6251

for.end87:                                        ; preds = %for.cond72
  %96 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6253
  %mlz88 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %96, i32 0, i32 36, !dbg !6254
  %97 = load %struct.MLZ*, %struct.MLZ** %mlz88, align 8, !dbg !6254
  %98 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6255
  %99 = load i32, i32* %nchars, align 4, !dbg !6256
  %100 = load i8*, i8** %larray, align 8, !dbg !6257
  %call89 = call i32 @ff_mlz_decompression(%struct.MLZ* %97, %struct.GetBitContext* %98, i32 %99, i8* %100), !dbg !6258
  store i32 %call89, i32* %tmp_32, align 4, !dbg !6259
  %101 = load i32, i32* %tmp_32, align 4, !dbg !6260
  %102 = load i32, i32* %nchars, align 4, !dbg !6262
  %cmp90 = icmp ne i32 %101, %102, !dbg !6263
  br i1 %cmp90, label %if.then92, label %if.end94, !dbg !6264

if.then92:                                        ; preds = %for.end87
  %103 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6265
  %avctx93 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %103, i32 0, i32 0, !dbg !6267
  %104 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx93, align 8, !dbg !6267
  %105 = bitcast %struct.AVCodecContext* %104 to i8*, !dbg !6265
  %106 = load i32, i32* %tmp_32, align 4, !dbg !6268
  %107 = load i32, i32* %nchars, align 4, !dbg !6269
  call void (i8*, i32, i8*, ...) @av_log(i8* %105, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i32 0, i32 0), i32 %106, i32 %107), !dbg !6270
  store i32 -1094995529, i32* %retval, align 4, !dbg !6271
  br label %return, !dbg !6271

if.end94:                                         ; preds = %for.end87
  store i32 0, i32* %i, align 4, !dbg !6272
  br label %for.cond95, !dbg !6273

for.cond95:                                       ; preds = %for.inc105, %if.end94
  %108 = load i32, i32* %i, align 4, !dbg !6274
  %109 = load i32, i32* %frame_length, align 4, !dbg !6276
  %cmp96 = icmp slt i32 %108, %109, !dbg !6277
  br i1 %cmp96, label %for.body98, label %for.end107, !dbg !6278

for.body98:                                       ; preds = %for.cond95
  %110 = load i8*, i8** %larray, align 8, !dbg !6279
  %111 = bitcast i8* %110 to %union.unaligned_32*, !dbg !6280
  %l = bitcast %union.unaligned_32* %111 to i32*, !dbg !6280
  %112 = load i32, i32* %l, align 1, !dbg !6280
  store i32 %112, i32* %x.addr.i, align 4, !dbg !6281
  %113 = load i32, i32* %x.addr.i, align 4, !dbg !6282
  %shl.i = shl i32 %113, 8, !dbg !6283
  %and.i = and i32 %shl.i, 65280, !dbg !6284
  %114 = load i32, i32* %x.addr.i, align 4, !dbg !6285
  %shr.i = lshr i32 %114, 8, !dbg !6286
  %and1.i = and i32 %shr.i, 255, !dbg !6287
  %or.i = or i32 %and.i, %and1.i, !dbg !6288
  %shl2.i = shl i32 %or.i, 16, !dbg !6289
  %115 = load i32, i32* %x.addr.i, align 4, !dbg !6290
  %shr3.i = lshr i32 %115, 16, !dbg !6291
  %shl4.i = shl i32 %shr3.i, 8, !dbg !6292
  %and5.i = and i32 %shl4.i, 65280, !dbg !6293
  %116 = load i32, i32* %x.addr.i, align 4, !dbg !6294
  %shr6.i = lshr i32 %116, 16, !dbg !6295
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !6296
  %and8.i = and i32 %shr7.i, 255, !dbg !6297
  %or9.i = or i32 %and5.i, %and8.i, !dbg !6298
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !6299
  %117 = load i32, i32* %i, align 4, !dbg !6300
  %idxprom100 = sext i32 %117 to i64, !dbg !6301
  %118 = load i32, i32* %c, align 4, !dbg !6302
  %idxprom101 = sext i32 %118 to i64, !dbg !6301
  %119 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6301
  %raw_mantissa102 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %119, i32 0, i32 41, !dbg !6303
  %120 = load i32**, i32*** %raw_mantissa102, align 8, !dbg !6303
  %arrayidx103 = getelementptr inbounds i32*, i32** %120, i64 %idxprom101, !dbg !6301
  %121 = load i32*, i32** %arrayidx103, align 8, !dbg !6301
  %arrayidx104 = getelementptr inbounds i32, i32* %121, i64 %idxprom100, !dbg !6301
  store i32 %or10.i, i32* %arrayidx104, align 4, !dbg !6304
  br label %for.inc105, !dbg !6305

for.inc105:                                       ; preds = %for.body98
  %122 = load i32, i32* %i, align 4, !dbg !6306
  %inc106 = add nsw i32 %122, 1, !dbg !6306
  store i32 %inc106, i32* %i, align 4, !dbg !6306
  br label %for.cond95, !dbg !6308, !llvm.loop !6309

for.end107:                                       ; preds = %for.cond95
  br label %if.end108

if.end108:                                        ; preds = %for.end107, %for.end
  br label %if.end109, !dbg !6311

if.end109:                                        ; preds = %if.end108, %if.end47
  %123 = load i32, i32* %highest_byte, align 4, !dbg !6312
  %tobool110 = icmp ne i32 %123, 0, !dbg !6312
  br i1 %tobool110, label %if.then111, label %if.end267, !dbg !6313

if.then111:                                       ; preds = %if.end109
  store i32 0, i32* %i, align 4, !dbg !6314
  br label %for.cond112, !dbg !6316

for.cond112:                                      ; preds = %for.inc153, %if.then111
  %124 = load i32, i32* %i, align 4, !dbg !6317
  %125 = load i32, i32* %frame_length, align 4, !dbg !6320
  %cmp113 = icmp slt i32 %124, %125, !dbg !6321
  br i1 %cmp113, label %for.body115, label %for.end155, !dbg !6322

for.body115:                                      ; preds = %for.cond112
  %126 = load i32, i32* %i, align 4, !dbg !6323
  %idxprom116 = sext i32 %126 to i64, !dbg !6326
  %127 = load i32, i32* %c, align 4, !dbg !6327
  %idxprom117 = sext i32 %127 to i64, !dbg !6326
  %128 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6326
  %raw_samples118 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %128, i32 0, i32 33, !dbg !6328
  %129 = load i32**, i32*** %raw_samples118, align 8, !dbg !6328
  %arrayidx119 = getelementptr inbounds i32*, i32** %129, i64 %idxprom117, !dbg !6326
  %130 = load i32*, i32** %arrayidx119, align 8, !dbg !6326
  %arrayidx120 = getelementptr inbounds i32, i32* %130, i64 %idxprom116, !dbg !6326
  %131 = load i32, i32* %arrayidx120, align 4, !dbg !6326
  %cmp121 = icmp ne i32 %131, 0, !dbg !6329
  br i1 %cmp121, label %if.then123, label %if.end152, !dbg !6330

if.then123:                                       ; preds = %for.body115
  %132 = load i32, i32* %c, align 4, !dbg !6331
  %idxprom124 = sext i32 %132 to i64, !dbg !6334
  %133 = load %struct.SoftFloat_IEEE754*, %struct.SoftFloat_IEEE754** %acf, align 8, !dbg !6334
  %arrayidx125 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %133, i64 %idxprom124, !dbg !6334
  %call126 = call i32 @av_cmp_sf_ieee754(%struct.SoftFloat_IEEE754* byval align 8 %arrayidx125, %struct.SoftFloat_IEEE754* byval align 8 @FLOAT_1), !dbg !6335
  %tobool127 = icmp ne i32 %call126, 0, !dbg !6335
  br i1 %tobool127, label %if.then128, label %if.else138, !dbg !6336

if.then128:                                       ; preds = %if.then123
  %134 = load i32, i32* %i, align 4, !dbg !6337
  %idxprom129 = sext i32 %134 to i64, !dbg !6339
  %135 = load i32, i32* %c, align 4, !dbg !6340
  %idxprom130 = sext i32 %135 to i64, !dbg !6339
  %136 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6339
  %raw_samples131 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %136, i32 0, i32 33, !dbg !6341
  %137 = load i32**, i32*** %raw_samples131, align 8, !dbg !6341
  %arrayidx132 = getelementptr inbounds i32*, i32** %137, i64 %idxprom130, !dbg !6339
  %138 = load i32*, i32** %arrayidx132, align 8, !dbg !6339
  %arrayidx133 = getelementptr inbounds i32, i32* %138, i64 %idxprom129, !dbg !6339
  %139 = load i32, i32* %arrayidx133, align 4, !dbg !6339
  %call134 = call i32 @abs(i32 %139) #2, !dbg !6342
  %or = or i32 %call134, 1, !dbg !6343
  %140 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !6344
  %sub = sub nsw i32 31, %140, !dbg !6346
  %sub135 = sub nsw i32 23, %sub, !dbg !6347
  %141 = load i32, i32* %i, align 4, !dbg !6348
  %idxprom136 = sext i32 %141 to i64, !dbg !6349
  %142 = load i32*, i32** %nbits, align 8, !dbg !6349
  %arrayidx137 = getelementptr inbounds i32, i32* %142, i64 %idxprom136, !dbg !6349
  store i32 %sub135, i32* %arrayidx137, align 4, !dbg !6350
  br label %if.end141, !dbg !6351

if.else138:                                       ; preds = %if.then123
  %143 = load i32, i32* %i, align 4, !dbg !6352
  %idxprom139 = sext i32 %143 to i64, !dbg !6354
  %144 = load i32*, i32** %nbits, align 8, !dbg !6354
  %arrayidx140 = getelementptr inbounds i32, i32* %144, i64 %idxprom139, !dbg !6354
  store i32 23, i32* %arrayidx140, align 4, !dbg !6355
  br label %if.end141

if.end141:                                        ; preds = %if.else138, %if.then128
  %145 = load i32, i32* %i, align 4, !dbg !6356
  %idxprom142 = sext i32 %145 to i64, !dbg !6357
  %146 = load i32*, i32** %nbits, align 8, !dbg !6357
  %arrayidx143 = getelementptr inbounds i32, i32* %146, i64 %idxprom142, !dbg !6357
  %147 = load i32, i32* %arrayidx143, align 4, !dbg !6357
  %148 = load i32, i32* %highest_byte, align 4, !dbg !6358
  %mul144 = mul i32 %148, 8, !dbg !6359
  %cmp145 = icmp ugt i32 %147, %mul144, !dbg !6360
  br i1 %cmp145, label %cond.true, label %cond.false, !dbg !6361

cond.true:                                        ; preds = %if.end141
  %149 = load i32, i32* %highest_byte, align 4, !dbg !6362
  %mul147 = mul i32 %149, 8, !dbg !6364
  br label %cond.end, !dbg !6365

cond.false:                                       ; preds = %if.end141
  %150 = load i32, i32* %i, align 4, !dbg !6366
  %idxprom148 = sext i32 %150 to i64, !dbg !6368
  %151 = load i32*, i32** %nbits, align 8, !dbg !6368
  %arrayidx149 = getelementptr inbounds i32, i32* %151, i64 %idxprom148, !dbg !6368
  %152 = load i32, i32* %arrayidx149, align 4, !dbg !6368
  br label %cond.end, !dbg !6369

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul147, %cond.true ], [ %152, %cond.false ], !dbg !6370
  %153 = load i32, i32* %i, align 4, !dbg !6372
  %idxprom150 = sext i32 %153 to i64, !dbg !6373
  %154 = load i32*, i32** %nbits, align 8, !dbg !6373
  %arrayidx151 = getelementptr inbounds i32, i32* %154, i64 %idxprom150, !dbg !6373
  store i32 %cond, i32* %arrayidx151, align 4, !dbg !6374
  br label %if.end152, !dbg !6375

if.end152:                                        ; preds = %cond.end, %for.body115
  br label %for.inc153, !dbg !6376

for.inc153:                                       ; preds = %if.end152
  %155 = load i32, i32* %i, align 4, !dbg !6377
  %inc154 = add nsw i32 %155, 1, !dbg !6377
  store i32 %inc154, i32* %i, align 4, !dbg !6377
  br label %for.cond112, !dbg !6379, !llvm.loop !6380

for.end155:                                       ; preds = %for.cond112
  %156 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6382
  %call156 = call i32 @get_bits1(%struct.GetBitContext* %156), !dbg !6383
  %tobool157 = icmp ne i32 %call156, 0, !dbg !6383
  br i1 %tobool157, label %if.else182, label %if.then158, !dbg !6384

if.then158:                                       ; preds = %for.end155
  store i32 0, i32* %i, align 4, !dbg !6385
  br label %for.cond159, !dbg !6386

for.cond159:                                      ; preds = %for.inc179, %if.then158
  %157 = load i32, i32* %i, align 4, !dbg !6387
  %158 = load i32, i32* %frame_length, align 4, !dbg !6389
  %cmp160 = icmp slt i32 %157, %158, !dbg !6390
  br i1 %cmp160, label %for.body162, label %for.end181, !dbg !6391

for.body162:                                      ; preds = %for.cond159
  %159 = load i32, i32* %i, align 4, !dbg !6392
  %idxprom163 = sext i32 %159 to i64, !dbg !6393
  %160 = load i32, i32* %c, align 4, !dbg !6394
  %idxprom164 = sext i32 %160 to i64, !dbg !6393
  %161 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6393
  %raw_samples165 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %161, i32 0, i32 33, !dbg !6395
  %162 = load i32**, i32*** %raw_samples165, align 8, !dbg !6395
  %arrayidx166 = getelementptr inbounds i32*, i32** %162, i64 %idxprom164, !dbg !6393
  %163 = load i32*, i32** %arrayidx166, align 8, !dbg !6393
  %arrayidx167 = getelementptr inbounds i32, i32* %163, i64 %idxprom163, !dbg !6393
  %164 = load i32, i32* %arrayidx167, align 4, !dbg !6393
  %cmp168 = icmp ne i32 %164, 0, !dbg !6396
  br i1 %cmp168, label %if.then170, label %if.end178, !dbg !6397

if.then170:                                       ; preds = %for.body162
  %165 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6398
  %166 = load i32, i32* %i, align 4, !dbg !6399
  %idxprom171 = sext i32 %166 to i64, !dbg !6400
  %167 = load i32*, i32** %nbits, align 8, !dbg !6400
  %arrayidx172 = getelementptr inbounds i32, i32* %167, i64 %idxprom171, !dbg !6400
  %168 = load i32, i32* %arrayidx172, align 4, !dbg !6400
  store %struct.GetBitContext* %165, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6401
  store i32 %168, i32* %n.addr.i, align 4, !dbg !6401
  %169 = load i32, i32* %n.addr.i, align 4, !dbg !6402
  %tobool.i = icmp ne i32 %169, 0, !dbg !6402
  br i1 %tobool.i, label %cond.true.i, label %cond.false.i, !dbg !6402

cond.true.i:                                      ; preds = %if.then170
  %170 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6403
  %171 = load i32, i32* %n.addr.i, align 4, !dbg !6405
  %call.i = call i32 @get_bits(%struct.GetBitContext* %170, i32 %171) #10, !dbg !6406
  br label %get_bitsz.exit, !dbg !6407

cond.false.i:                                     ; preds = %if.then170
  br label %get_bitsz.exit, !dbg !6408

get_bitsz.exit:                                   ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ 0, %cond.false.i ], !dbg !6410
  %172 = load i32, i32* %i, align 4, !dbg !6412
  %idxprom174 = sext i32 %172 to i64, !dbg !6413
  %173 = load i32, i32* %c, align 4, !dbg !6414
  %idxprom175 = sext i32 %173 to i64, !dbg !6413
  %174 = load i32**, i32*** %raw_mantissa, align 8, !dbg !6413
  %arrayidx176 = getelementptr inbounds i32*, i32** %174, i64 %idxprom175, !dbg !6413
  %175 = load i32*, i32** %arrayidx176, align 8, !dbg !6413
  %arrayidx177 = getelementptr inbounds i32, i32* %175, i64 %idxprom174, !dbg !6413
  store i32 %cond.i, i32* %arrayidx177, align 4, !dbg !6415
  br label %if.end178, !dbg !6416

if.end178:                                        ; preds = %get_bitsz.exit, %for.body162
  br label %for.inc179, !dbg !6417

for.inc179:                                       ; preds = %if.end178
  %176 = load i32, i32* %i, align 4, !dbg !6418
  %inc180 = add nsw i32 %176, 1, !dbg !6418
  store i32 %inc180, i32* %i, align 4, !dbg !6418
  br label %for.cond159, !dbg !6420, !llvm.loop !6421

for.end181:                                       ; preds = %for.cond159
  br label %if.end266, !dbg !6423

if.else182:                                       ; preds = %for.end155
  store i32 0, i32* %nchars, align 4, !dbg !6424
  store i32 0, i32* %i, align 4, !dbg !6426
  br label %for.cond183, !dbg !6428

for.cond183:                                      ; preds = %for.inc204, %if.else182
  %177 = load i32, i32* %i, align 4, !dbg !6429
  %178 = load i32, i32* %frame_length, align 4, !dbg !6432
  %cmp184 = icmp slt i32 %177, %178, !dbg !6433
  br i1 %cmp184, label %for.body186, label %for.end206, !dbg !6434

for.body186:                                      ; preds = %for.cond183
  %179 = load i32, i32* %i, align 4, !dbg !6435
  %idxprom187 = sext i32 %179 to i64, !dbg !6438
  %180 = load i32, i32* %c, align 4, !dbg !6439
  %idxprom188 = sext i32 %180 to i64, !dbg !6438
  %181 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6438
  %raw_samples189 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %181, i32 0, i32 33, !dbg !6440
  %182 = load i32**, i32*** %raw_samples189, align 8, !dbg !6440
  %arrayidx190 = getelementptr inbounds i32*, i32** %182, i64 %idxprom188, !dbg !6438
  %183 = load i32*, i32** %arrayidx190, align 8, !dbg !6438
  %arrayidx191 = getelementptr inbounds i32, i32* %183, i64 %idxprom187, !dbg !6438
  %184 = load i32, i32* %arrayidx191, align 4, !dbg !6438
  %tobool192 = icmp ne i32 %184, 0, !dbg !6438
  br i1 %tobool192, label %if.then193, label %if.end203, !dbg !6441

if.then193:                                       ; preds = %for.body186
  %185 = load i32, i32* %i, align 4, !dbg !6442
  %idxprom194 = sext i32 %185 to i64, !dbg !6444
  %186 = load i32*, i32** %nbits, align 8, !dbg !6444
  %arrayidx195 = getelementptr inbounds i32, i32* %186, i64 %idxprom194, !dbg !6444
  %187 = load i32, i32* %arrayidx195, align 4, !dbg !6444
  %div = sdiv i32 %187, 8, !dbg !6445
  %188 = load i32, i32* %nchars, align 4, !dbg !6446
  %add196 = add nsw i32 %188, %div, !dbg !6446
  store i32 %add196, i32* %nchars, align 4, !dbg !6446
  %189 = load i32, i32* %i, align 4, !dbg !6447
  %idxprom197 = sext i32 %189 to i64, !dbg !6449
  %190 = load i32*, i32** %nbits, align 8, !dbg !6449
  %arrayidx198 = getelementptr inbounds i32, i32* %190, i64 %idxprom197, !dbg !6449
  %191 = load i32, i32* %arrayidx198, align 4, !dbg !6449
  %and = and i32 %191, 7, !dbg !6450
  %tobool199 = icmp ne i32 %and, 0, !dbg !6450
  br i1 %tobool199, label %if.then200, label %if.end202, !dbg !6451

if.then200:                                       ; preds = %if.then193
  %192 = load i32, i32* %nchars, align 4, !dbg !6452
  %inc201 = add nsw i32 %192, 1, !dbg !6452
  store i32 %inc201, i32* %nchars, align 4, !dbg !6452
  br label %if.end202, !dbg !6454

if.end202:                                        ; preds = %if.then200, %if.then193
  br label %if.end203, !dbg !6455

if.end203:                                        ; preds = %if.end202, %for.body186
  br label %for.inc204, !dbg !6456

for.inc204:                                       ; preds = %if.end203
  %193 = load i32, i32* %i, align 4, !dbg !6457
  %inc205 = add nsw i32 %193, 1, !dbg !6457
  store i32 %inc205, i32* %i, align 4, !dbg !6457
  br label %for.cond183, !dbg !6459, !llvm.loop !6460

for.end206:                                       ; preds = %for.cond183
  %194 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6462
  %mlz207 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %194, i32 0, i32 36, !dbg !6463
  %195 = load %struct.MLZ*, %struct.MLZ** %mlz207, align 8, !dbg !6463
  %196 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6464
  %197 = load i32, i32* %nchars, align 4, !dbg !6465
  %198 = load i8*, i8** %larray, align 8, !dbg !6466
  %call208 = call i32 @ff_mlz_decompression(%struct.MLZ* %195, %struct.GetBitContext* %196, i32 %197, i8* %198), !dbg !6467
  store i32 %call208, i32* %tmp_32, align 4, !dbg !6468
  %199 = load i32, i32* %tmp_32, align 4, !dbg !6469
  %200 = load i32, i32* %nchars, align 4, !dbg !6471
  %cmp209 = icmp ne i32 %199, %200, !dbg !6472
  br i1 %cmp209, label %if.then211, label %if.end213, !dbg !6473

if.then211:                                       ; preds = %for.end206
  %201 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6474
  %avctx212 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %201, i32 0, i32 0, !dbg !6476
  %202 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx212, align 8, !dbg !6476
  %203 = bitcast %struct.AVCodecContext* %202 to i8*, !dbg !6474
  %204 = load i32, i32* %tmp_32, align 4, !dbg !6477
  %205 = load i32, i32* %nchars, align 4, !dbg !6478
  call void (i8*, i32, i8*, ...) @av_log(i8* %203, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i32 0, i32 0), i32 %204, i32 %205), !dbg !6479
  store i32 -1094995529, i32* %retval, align 4, !dbg !6480
  br label %return, !dbg !6480

if.end213:                                        ; preds = %for.end206
  store i64 0, i64* %j, align 8, !dbg !6481
  store i32 0, i32* %i, align 4, !dbg !6482
  br label %for.cond214, !dbg !6484

for.cond214:                                      ; preds = %for.inc263, %if.end213
  %206 = load i32, i32* %i, align 4, !dbg !6485
  %207 = load i32, i32* %frame_length, align 4, !dbg !6488
  %cmp215 = icmp slt i32 %206, %207, !dbg !6489
  br i1 %cmp215, label %for.body217, label %for.end265, !dbg !6490

for.body217:                                      ; preds = %for.cond214
  %208 = load i32, i32* %i, align 4, !dbg !6491
  %idxprom218 = sext i32 %208 to i64, !dbg !6494
  %209 = load i32, i32* %c, align 4, !dbg !6495
  %idxprom219 = sext i32 %209 to i64, !dbg !6494
  %210 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6494
  %raw_samples220 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %210, i32 0, i32 33, !dbg !6496
  %211 = load i32**, i32*** %raw_samples220, align 8, !dbg !6496
  %arrayidx221 = getelementptr inbounds i32*, i32** %211, i64 %idxprom219, !dbg !6494
  %212 = load i32*, i32** %arrayidx221, align 8, !dbg !6494
  %arrayidx222 = getelementptr inbounds i32, i32* %212, i64 %idxprom218, !dbg !6494
  %213 = load i32, i32* %arrayidx222, align 4, !dbg !6494
  %tobool223 = icmp ne i32 %213, 0, !dbg !6494
  br i1 %tobool223, label %if.then224, label %if.end262, !dbg !6497

if.then224:                                       ; preds = %for.body217
  %214 = load i32, i32* %i, align 4, !dbg !6498
  %idxprom225 = sext i32 %214 to i64, !dbg !6501
  %215 = load i32*, i32** %nbits, align 8, !dbg !6501
  %arrayidx226 = getelementptr inbounds i32, i32* %215, i64 %idxprom225, !dbg !6501
  %216 = load i32, i32* %arrayidx226, align 4, !dbg !6501
  %and227 = and i32 %216, 7, !dbg !6502
  %tobool228 = icmp ne i32 %and227, 0, !dbg !6502
  br i1 %tobool228, label %if.then229, label %if.else236, !dbg !6503

if.then229:                                       ; preds = %if.then224
  %217 = load i32, i32* %i, align 4, !dbg !6504
  %idxprom230 = sext i32 %217 to i64, !dbg !6506
  %218 = load i32*, i32** %nbits, align 8, !dbg !6506
  %arrayidx231 = getelementptr inbounds i32, i32* %218, i64 %idxprom230, !dbg !6506
  %219 = load i32, i32* %arrayidx231, align 4, !dbg !6506
  %div232 = sdiv i32 %219, 8, !dbg !6507
  %add233 = add i32 %div232, 1, !dbg !6508
  %mul234 = mul i32 8, %add233, !dbg !6509
  %conv235 = zext i32 %mul234 to i64, !dbg !6510
  store i64 %conv235, i64* %nbits_aligned, align 8, !dbg !6511
  br label %if.end240, !dbg !6512

if.else236:                                       ; preds = %if.then224
  %220 = load i32, i32* %i, align 4, !dbg !6513
  %idxprom237 = sext i32 %220 to i64, !dbg !6515
  %221 = load i32*, i32** %nbits, align 8, !dbg !6515
  %arrayidx238 = getelementptr inbounds i32, i32* %221, i64 %idxprom237, !dbg !6515
  %222 = load i32, i32* %arrayidx238, align 4, !dbg !6515
  %conv239 = sext i32 %222 to i64, !dbg !6515
  store i64 %conv239, i64* %nbits_aligned, align 8, !dbg !6516
  br label %if.end240

if.end240:                                        ; preds = %if.else236, %if.then229
  store i64 0, i64* %acc, align 8, !dbg !6517
  store i64 0, i64* %k, align 8, !dbg !6518
  br label %for.cond241, !dbg !6520

for.cond241:                                      ; preds = %for.inc250, %if.end240
  %223 = load i64, i64* %k, align 8, !dbg !6521
  %224 = load i64, i64* %nbits_aligned, align 8, !dbg !6524
  %div242 = sdiv i64 %224, 8, !dbg !6525
  %cmp243 = icmp slt i64 %223, %div242, !dbg !6526
  br i1 %cmp243, label %for.body245, label %for.end252, !dbg !6527

for.body245:                                      ; preds = %for.cond241
  %225 = load i64, i64* %acc, align 8, !dbg !6528
  %shl = shl i64 %225, 8, !dbg !6530
  %226 = load i64, i64* %j, align 8, !dbg !6531
  %inc246 = add i64 %226, 1, !dbg !6531
  store i64 %inc246, i64* %j, align 8, !dbg !6531
  %227 = load i8*, i8** %larray, align 8, !dbg !6532
  %arrayidx247 = getelementptr inbounds i8, i8* %227, i64 %226, !dbg !6532
  %228 = load i8, i8* %arrayidx247, align 1, !dbg !6532
  %conv248 = zext i8 %228 to i64, !dbg !6532
  %add249 = add i64 %shl, %conv248, !dbg !6533
  store i64 %add249, i64* %acc, align 8, !dbg !6534
  br label %for.inc250, !dbg !6535

for.inc250:                                       ; preds = %for.body245
  %229 = load i64, i64* %k, align 8, !dbg !6536
  %inc251 = add nsw i64 %229, 1, !dbg !6536
  store i64 %inc251, i64* %k, align 8, !dbg !6536
  br label %for.cond241, !dbg !6538, !llvm.loop !6539

for.end252:                                       ; preds = %for.cond241
  %230 = load i64, i64* %nbits_aligned, align 8, !dbg !6541
  %231 = load i32, i32* %i, align 4, !dbg !6542
  %idxprom253 = sext i32 %231 to i64, !dbg !6543
  %232 = load i32*, i32** %nbits, align 8, !dbg !6543
  %arrayidx254 = getelementptr inbounds i32, i32* %232, i64 %idxprom253, !dbg !6543
  %233 = load i32, i32* %arrayidx254, align 4, !dbg !6543
  %conv255 = sext i32 %233 to i64, !dbg !6543
  %sub256 = sub nsw i64 %230, %conv255, !dbg !6544
  %234 = load i64, i64* %acc, align 8, !dbg !6545
  %shr = lshr i64 %234, %sub256, !dbg !6545
  store i64 %shr, i64* %acc, align 8, !dbg !6545
  %235 = load i64, i64* %acc, align 8, !dbg !6546
  %conv257 = trunc i64 %235 to i32, !dbg !6546
  %236 = load i32, i32* %i, align 4, !dbg !6547
  %idxprom258 = sext i32 %236 to i64, !dbg !6548
  %237 = load i32, i32* %c, align 4, !dbg !6549
  %idxprom259 = sext i32 %237 to i64, !dbg !6548
  %238 = load i32**, i32*** %raw_mantissa, align 8, !dbg !6548
  %arrayidx260 = getelementptr inbounds i32*, i32** %238, i64 %idxprom259, !dbg !6548
  %239 = load i32*, i32** %arrayidx260, align 8, !dbg !6548
  %arrayidx261 = getelementptr inbounds i32, i32* %239, i64 %idxprom258, !dbg !6548
  store i32 %conv257, i32* %arrayidx261, align 4, !dbg !6550
  br label %if.end262, !dbg !6551

if.end262:                                        ; preds = %for.end252, %for.body217
  br label %for.inc263, !dbg !6552

for.inc263:                                       ; preds = %if.end262
  %240 = load i32, i32* %i, align 4, !dbg !6553
  %inc264 = add nsw i32 %240, 1, !dbg !6553
  store i32 %inc264, i32* %i, align 4, !dbg !6553
  br label %for.cond214, !dbg !6555, !llvm.loop !6556

for.end265:                                       ; preds = %for.cond214
  br label %if.end266

if.end266:                                        ; preds = %for.end265, %for.end181
  br label %if.end267, !dbg !6558

if.end267:                                        ; preds = %if.end266, %if.end109
  store i32 0, i32* %i, align 4, !dbg !6559
  br label %for.cond268, !dbg !6561

for.cond268:                                      ; preds = %for.inc344, %if.end267
  %241 = load i32, i32* %i, align 4, !dbg !6562
  %242 = load i32, i32* %frame_length, align 4, !dbg !6565
  %cmp269 = icmp slt i32 %241, %242, !dbg !6566
  br i1 %cmp269, label %for.body271, label %for.end346, !dbg !6567

for.body271:                                      ; preds = %for.cond268
  call void @llvm.dbg.declare(metadata %struct.SoftFloat_IEEE754* %pcm_sf, metadata !6568, metadata !1692), !dbg !6570
  %243 = load i32, i32* %i, align 4, !dbg !6571
  %idxprom273 = sext i32 %243 to i64, !dbg !6572
  %244 = load i32, i32* %c, align 4, !dbg !6573
  %idxprom274 = sext i32 %244 to i64, !dbg !6572
  %245 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6572
  %raw_samples275 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %245, i32 0, i32 33, !dbg !6574
  %246 = load i32**, i32*** %raw_samples275, align 8, !dbg !6574
  %arrayidx276 = getelementptr inbounds i32*, i32** %246, i64 %idxprom274, !dbg !6572
  %247 = load i32*, i32** %arrayidx276, align 8, !dbg !6572
  %arrayidx277 = getelementptr inbounds i32, i32* %247, i64 %idxprom273, !dbg !6572
  %248 = load i32, i32* %arrayidx277, align 4, !dbg !6572
  %conv278 = sext i32 %248 to i64, !dbg !6572
  call void @av_int2sf_ieee754(%struct.SoftFloat_IEEE754* sret %pcm_sf, i64 %conv278, i32 0), !dbg !6575
  call void @av_div_sf_ieee754(%struct.SoftFloat_IEEE754* sret %tmp279, %struct.SoftFloat_IEEE754* byval align 8 %pcm_sf, %struct.SoftFloat_IEEE754* byval align 8 %scale), !dbg !6576
  %249 = bitcast %struct.SoftFloat_IEEE754* %pcm_sf to i8*, !dbg !6576
  %250 = bitcast %struct.SoftFloat_IEEE754* %tmp279 to i8*, !dbg !6576
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %249, i8* %250, i64 24, i32 8, i1 false), !dbg !6577
  %251 = load i32, i32* %i, align 4, !dbg !6579
  %idxprom280 = sext i32 %251 to i64, !dbg !6581
  %252 = load i32, i32* %c, align 4, !dbg !6582
  %idxprom281 = sext i32 %252 to i64, !dbg !6581
  %253 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6581
  %raw_samples282 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %253, i32 0, i32 33, !dbg !6583
  %254 = load i32**, i32*** %raw_samples282, align 8, !dbg !6583
  %arrayidx283 = getelementptr inbounds i32*, i32** %254, i64 %idxprom281, !dbg !6581
  %255 = load i32*, i32** %arrayidx283, align 8, !dbg !6581
  %arrayidx284 = getelementptr inbounds i32, i32* %255, i64 %idxprom280, !dbg !6581
  %256 = load i32, i32* %arrayidx284, align 4, !dbg !6581
  %cmp285 = icmp ne i32 %256, 0, !dbg !6584
  br i1 %cmp285, label %if.then287, label %if.else330, !dbg !6585

if.then287:                                       ; preds = %for.body271
  %257 = load i32, i32* %c, align 4, !dbg !6586
  %idxprom288 = sext i32 %257 to i64, !dbg !6589
  %258 = load %struct.SoftFloat_IEEE754*, %struct.SoftFloat_IEEE754** %acf, align 8, !dbg !6589
  %arrayidx289 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %258, i64 %idxprom288, !dbg !6589
  %call290 = call i32 @av_cmp_sf_ieee754(%struct.SoftFloat_IEEE754* byval align 8 %arrayidx289, %struct.SoftFloat_IEEE754* byval align 8 @FLOAT_1), !dbg !6590
  %tobool291 = icmp ne i32 %call290, 0, !dbg !6590
  br i1 %tobool291, label %if.end296, label %if.then292, !dbg !6591

if.then292:                                       ; preds = %if.then287
  %259 = load i32, i32* %c, align 4, !dbg !6592
  %idxprom293 = sext i32 %259 to i64, !dbg !6594
  %260 = load %struct.SoftFloat_IEEE754*, %struct.SoftFloat_IEEE754** %acf, align 8, !dbg !6594
  %arrayidx294 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %260, i64 %idxprom293, !dbg !6594
  call void @multiply(%struct.SoftFloat_IEEE754* sret %tmp295, %struct.SoftFloat_IEEE754* byval align 8 %arrayidx294, %struct.SoftFloat_IEEE754* byval align 8 %pcm_sf), !dbg !6595
  %261 = bitcast %struct.SoftFloat_IEEE754* %pcm_sf to i8*, !dbg !6595
  %262 = bitcast %struct.SoftFloat_IEEE754* %tmp295 to i8*, !dbg !6595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %261, i8* %262, i64 24, i32 8, i1 false), !dbg !6596
  br label %if.end296, !dbg !6598

if.end296:                                        ; preds = %if.then292, %if.then287
  %sign297 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %pcm_sf, i32 0, i32 0, !dbg !6599
  %263 = load i32, i32* %sign297, align 8, !dbg !6599
  store i32 %263, i32* %sign, align 4, !dbg !6600
  %exp = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %pcm_sf, i32 0, i32 2, !dbg !6601
  %264 = load i32, i32* %exp, align 8, !dbg !6601
  store i32 %264, i32* %e, align 4, !dbg !6602
  %mant = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %pcm_sf, i32 0, i32 1, !dbg !6603
  %265 = load i64, i64* %mant, align 8, !dbg !6603
  %or298 = or i64 %265, 8388608, !dbg !6604
  %266 = load i32, i32* %i, align 4, !dbg !6605
  %idxprom299 = sext i32 %266 to i64, !dbg !6606
  %267 = load i32, i32* %c, align 4, !dbg !6607
  %idxprom300 = sext i32 %267 to i64, !dbg !6606
  %268 = load i32**, i32*** %raw_mantissa, align 8, !dbg !6606
  %arrayidx301 = getelementptr inbounds i32*, i32** %268, i64 %idxprom300, !dbg !6606
  %269 = load i32*, i32** %arrayidx301, align 8, !dbg !6606
  %arrayidx302 = getelementptr inbounds i32, i32* %269, i64 %idxprom299, !dbg !6606
  %270 = load i32, i32* %arrayidx302, align 4, !dbg !6606
  %conv303 = sext i32 %270 to i64, !dbg !6606
  %add304 = add i64 %or298, %conv303, !dbg !6608
  %conv305 = trunc i64 %add304 to i32, !dbg !6609
  store i32 %conv305, i32* %mantissa, align 4, !dbg !6610
  br label %while.cond, !dbg !6611

while.cond:                                       ; preds = %while.body, %if.end296
  %271 = load i32, i32* %mantissa, align 4, !dbg !6612
  %cmp306 = icmp uge i32 %271, 16777216, !dbg !6614
  br i1 %cmp306, label %while.body, label %while.end, !dbg !6615

while.body:                                       ; preds = %while.cond
  %272 = load i32, i32* %e, align 4, !dbg !6616
  %inc308 = add i32 %272, 1, !dbg !6616
  store i32 %inc308, i32* %e, align 4, !dbg !6616
  %273 = load i32, i32* %mantissa, align 4, !dbg !6618
  %shr309 = lshr i32 %273, 1, !dbg !6618
  store i32 %shr309, i32* %mantissa, align 4, !dbg !6618
  br label %while.cond, !dbg !6619, !llvm.loop !6621

while.end:                                        ; preds = %while.cond
  %274 = load i32, i32* %mantissa, align 4, !dbg !6622
  %tobool310 = icmp ne i32 %274, 0, !dbg !6622
  br i1 %tobool310, label %if.then311, label %if.end316, !dbg !6624

if.then311:                                       ; preds = %while.end
  %275 = load i32, i32* %c, align 4, !dbg !6625
  %idxprom312 = sext i32 %275 to i64, !dbg !6627
  %276 = load i32*, i32** %shift_value, align 8, !dbg !6627
  %arrayidx313 = getelementptr inbounds i32, i32* %276, i64 %idxprom312, !dbg !6627
  %277 = load i32, i32* %arrayidx313, align 4, !dbg !6627
  %sub314 = sub nsw i32 %277, 127, !dbg !6628
  %278 = load i32, i32* %e, align 4, !dbg !6629
  %add315 = add i32 %278, %sub314, !dbg !6629
  store i32 %add315, i32* %e, align 4, !dbg !6629
  br label %if.end316, !dbg !6630

if.end316:                                        ; preds = %if.then311, %while.end
  %279 = load i32, i32* %mantissa, align 4, !dbg !6631
  %conv317 = zext i32 %279 to i64, !dbg !6631
  %and318 = and i64 %conv317, 8388607, !dbg !6631
  %conv319 = trunc i64 %and318 to i32, !dbg !6631
  store i32 %conv319, i32* %mantissa, align 4, !dbg !6631
  %280 = load i32, i32* %sign, align 4, !dbg !6632
  %shl320 = shl i32 %280, 31, !dbg !6633
  %281 = load i32, i32* %e, align 4, !dbg !6634
  %add321 = add i32 %281, 127, !dbg !6635
  %shl322 = shl i32 %add321, 23, !dbg !6636
  %or323 = or i32 %shl320, %shl322, !dbg !6637
  %282 = load i32, i32* %mantissa, align 4, !dbg !6638
  %or324 = or i32 %or323, %282, !dbg !6639
  store i32 %or324, i32* %tmp_32, align 4, !dbg !6640
  %283 = load i32, i32* %tmp_32, align 4, !dbg !6641
  %284 = load i32, i32* %i, align 4, !dbg !6642
  %idxprom325 = sext i32 %284 to i64, !dbg !6643
  %285 = load i32, i32* %c, align 4, !dbg !6644
  %idxprom326 = sext i32 %285 to i64, !dbg !6643
  %286 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6643
  %raw_samples327 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %286, i32 0, i32 33, !dbg !6645
  %287 = load i32**, i32*** %raw_samples327, align 8, !dbg !6645
  %arrayidx328 = getelementptr inbounds i32*, i32** %287, i64 %idxprom326, !dbg !6643
  %288 = load i32*, i32** %arrayidx328, align 8, !dbg !6643
  %arrayidx329 = getelementptr inbounds i32, i32* %288, i64 %idxprom325, !dbg !6643
  store i32 %283, i32* %arrayidx329, align 4, !dbg !6646
  br label %if.end343, !dbg !6647

if.else330:                                       ; preds = %for.body271
  %289 = load i32, i32* %i, align 4, !dbg !6648
  %idxprom331 = sext i32 %289 to i64, !dbg !6650
  %290 = load i32, i32* %c, align 4, !dbg !6651
  %idxprom332 = sext i32 %290 to i64, !dbg !6650
  %291 = load i32**, i32*** %raw_mantissa, align 8, !dbg !6650
  %arrayidx333 = getelementptr inbounds i32*, i32** %291, i64 %idxprom332, !dbg !6650
  %292 = load i32*, i32** %arrayidx333, align 8, !dbg !6650
  %arrayidx334 = getelementptr inbounds i32, i32* %292, i64 %idxprom331, !dbg !6650
  %293 = load i32, i32* %arrayidx334, align 4, !dbg !6650
  %conv335 = sext i32 %293 to i64, !dbg !6650
  %and336 = and i64 %conv335, 8388607, !dbg !6652
  %conv337 = trunc i64 %and336 to i32, !dbg !6650
  %294 = load i32, i32* %i, align 4, !dbg !6653
  %idxprom338 = sext i32 %294 to i64, !dbg !6654
  %295 = load i32, i32* %c, align 4, !dbg !6655
  %idxprom339 = sext i32 %295 to i64, !dbg !6654
  %296 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6654
  %raw_samples340 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %296, i32 0, i32 33, !dbg !6656
  %297 = load i32**, i32*** %raw_samples340, align 8, !dbg !6656
  %arrayidx341 = getelementptr inbounds i32*, i32** %297, i64 %idxprom339, !dbg !6654
  %298 = load i32*, i32** %arrayidx341, align 8, !dbg !6654
  %arrayidx342 = getelementptr inbounds i32, i32* %298, i64 %idxprom338, !dbg !6654
  store i32 %conv337, i32* %arrayidx342, align 4, !dbg !6657
  br label %if.end343

if.end343:                                        ; preds = %if.else330, %if.end316
  br label %for.inc344, !dbg !6658

for.inc344:                                       ; preds = %if.end343
  %299 = load i32, i32* %i, align 4, !dbg !6659
  %inc345 = add nsw i32 %299, 1, !dbg !6659
  store i32 %inc345, i32* %i, align 4, !dbg !6659
  br label %for.cond268, !dbg !6661, !llvm.loop !6662

for.end346:                                       ; preds = %for.cond268
  %300 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6664
  %call347 = call i8* @align_get_bits(%struct.GetBitContext* %300), !dbg !6665
  br label %for.inc348, !dbg !6666

for.inc348:                                       ; preds = %for.end346
  %301 = load i32, i32* %c, align 4, !dbg !6667
  %inc349 = add nsw i32 %301, 1, !dbg !6667
  store i32 %inc349, i32* %c, align 4, !dbg !6667
  br label %for.cond, !dbg !6669, !llvm.loop !6670

for.end350:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6672
  br label %return, !dbg !6672

return:                                           ; preds = %for.end350, %if.then211, %if.then92
  %302 = load i32, i32* %retval, align 4, !dbg !6673
  ret i32 %302, !dbg !6673
}

; Function Attrs: nounwind uwtable
define internal void @parse_bs_info(i32 %bs_info, i32 %n, i32 %div, i32** %div_blocks, i32* %num_blocks) #1 !dbg !6674 {
entry:
  %bs_info.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %div.addr = alloca i32, align 4
  %div_blocks.addr = alloca i32**, align 8
  %num_blocks.addr = alloca i32*, align 8
  store i32 %bs_info, i32* %bs_info.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bs_info.addr, metadata !6678, metadata !1692), !dbg !6679
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6680, metadata !1692), !dbg !6681
  store i32 %div, i32* %div.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %div.addr, metadata !6682, metadata !1692), !dbg !6683
  store i32** %div_blocks, i32*** %div_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata i32*** %div_blocks.addr, metadata !6684, metadata !1692), !dbg !6685
  store i32* %num_blocks, i32** %num_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_blocks.addr, metadata !6686, metadata !1692), !dbg !6687
  %0 = load i32, i32* %n.addr, align 4, !dbg !6688
  %cmp = icmp ult i32 %0, 31, !dbg !6690
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6691

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %bs_info.addr, align 4, !dbg !6692
  %2 = load i32, i32* %n.addr, align 4, !dbg !6694
  %shl = shl i32 %1, %2, !dbg !6695
  %and = and i32 %shl, 1073741824, !dbg !6696
  %tobool = icmp ne i32 %and, 0, !dbg !6696
  br i1 %tobool, label %if.then, label %if.else, !dbg !6697

if.then:                                          ; preds = %land.lhs.true
  %3 = load i32, i32* %n.addr, align 4, !dbg !6698
  %mul = mul i32 %3, 2, !dbg !6698
  store i32 %mul, i32* %n.addr, align 4, !dbg !6698
  %4 = load i32, i32* %div.addr, align 4, !dbg !6700
  %add = add i32 %4, 1, !dbg !6700
  store i32 %add, i32* %div.addr, align 4, !dbg !6700
  %5 = load i32, i32* %bs_info.addr, align 4, !dbg !6701
  %6 = load i32, i32* %n.addr, align 4, !dbg !6702
  %add1 = add i32 %6, 1, !dbg !6703
  %7 = load i32, i32* %div.addr, align 4, !dbg !6704
  %8 = load i32**, i32*** %div_blocks.addr, align 8, !dbg !6705
  %9 = load i32*, i32** %num_blocks.addr, align 8, !dbg !6706
  call void @parse_bs_info(i32 %5, i32 %add1, i32 %7, i32** %8, i32* %9), !dbg !6707
  %10 = load i32, i32* %bs_info.addr, align 4, !dbg !6708
  %11 = load i32, i32* %n.addr, align 4, !dbg !6709
  %add2 = add i32 %11, 2, !dbg !6710
  %12 = load i32, i32* %div.addr, align 4, !dbg !6711
  %13 = load i32**, i32*** %div_blocks.addr, align 8, !dbg !6712
  %14 = load i32*, i32** %num_blocks.addr, align 8, !dbg !6713
  call void @parse_bs_info(i32 %10, i32 %add2, i32 %12, i32** %13, i32* %14), !dbg !6714
  br label %if.end, !dbg !6715

if.else:                                          ; preds = %land.lhs.true, %entry
  %15 = load i32, i32* %div.addr, align 4, !dbg !6716
  %16 = load i32**, i32*** %div_blocks.addr, align 8, !dbg !6718
  %17 = load i32*, i32** %16, align 8, !dbg !6719
  store i32 %15, i32* %17, align 4, !dbg !6720
  %18 = load i32**, i32*** %div_blocks.addr, align 8, !dbg !6721
  %19 = load i32*, i32** %18, align 8, !dbg !6722
  %incdec.ptr = getelementptr inbounds i32, i32* %19, i32 1, !dbg !6722
  store i32* %incdec.ptr, i32** %18, align 8, !dbg !6722
  %20 = load i32*, i32** %num_blocks.addr, align 8, !dbg !6723
  %21 = load i32, i32* %20, align 4, !dbg !6724
  %inc = add i32 %21, 1, !dbg !6724
  store i32 %inc, i32* %20, align 4, !dbg !6724
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6725
}

; Function Attrs: nounwind uwtable
define internal i32 @read_decode_block(%struct.ALSDecContext* %ctx, %struct.ALSBlockData* %bd) #1 !dbg !6726 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %bd.addr = alloca %struct.ALSBlockData*, align 8
  %ret = alloca i32, align 4
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !6727, metadata !1692), !dbg !6728
  store %struct.ALSBlockData* %bd, %struct.ALSBlockData** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSBlockData** %bd.addr, metadata !6729, metadata !1692), !dbg !6730
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6731, metadata !1692), !dbg !6732
  %0 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6733
  %1 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !6735
  %call = call i32 @read_block(%struct.ALSDecContext* %0, %struct.ALSBlockData* %1), !dbg !6736
  store i32 %call, i32* %ret, align 4, !dbg !6737
  %cmp = icmp slt i32 %call, 0, !dbg !6738
  br i1 %cmp, label %if.then, label %if.end, !dbg !6739

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !6740
  store i32 %2, i32* %retval, align 4, !dbg !6741
  br label %return, !dbg !6741

if.end:                                           ; preds = %entry
  %3 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6742
  %4 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !6743
  %call1 = call i32 @decode_block(%struct.ALSDecContext* %3, %struct.ALSBlockData* %4), !dbg !6744
  store i32 %call1, i32* %retval, align 4, !dbg !6745
  br label %return, !dbg !6745

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !6746
  ret i32 %5, !dbg !6746
}

; Function Attrs: nounwind uwtable
define internal void @zero_remaining(i32 %b, i32 %b_max, i32* %div_blocks, i32* %buf) #1 !dbg !6747 {
entry:
  %b.addr = alloca i32, align 4
  %b_max.addr = alloca i32, align 4
  %div_blocks.addr = alloca i32*, align 8
  %buf.addr = alloca i32*, align 8
  %count = alloca i32, align 4
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !6750, metadata !1692), !dbg !6751
  store i32 %b_max, i32* %b_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b_max.addr, metadata !6752, metadata !1692), !dbg !6753
  store i32* %div_blocks, i32** %div_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %div_blocks.addr, metadata !6754, metadata !1692), !dbg !6755
  store i32* %buf, i32** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %buf.addr, metadata !6756, metadata !1692), !dbg !6757
  call void @llvm.dbg.declare(metadata i32* %count, metadata !6758, metadata !1692), !dbg !6759
  store i32 0, i32* %count, align 4, !dbg !6759
  br label %while.cond, !dbg !6760

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %b.addr, align 4, !dbg !6761
  %1 = load i32, i32* %b_max.addr, align 4, !dbg !6763
  %cmp = icmp ult i32 %0, %1, !dbg !6764
  br i1 %cmp, label %while.body, label %while.end, !dbg !6765

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %b.addr, align 4, !dbg !6766
  %inc = add i32 %2, 1, !dbg !6766
  store i32 %inc, i32* %b.addr, align 4, !dbg !6766
  %idxprom = zext i32 %2 to i64, !dbg !6767
  %3 = load i32*, i32** %div_blocks.addr, align 8, !dbg !6767
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !6767
  %4 = load i32, i32* %arrayidx, align 4, !dbg !6767
  %5 = load i32, i32* %count, align 4, !dbg !6768
  %add = add i32 %5, %4, !dbg !6768
  store i32 %add, i32* %count, align 4, !dbg !6768
  br label %while.cond, !dbg !6769, !llvm.loop !6771

while.end:                                        ; preds = %while.cond
  %6 = load i32, i32* %count, align 4, !dbg !6772
  %tobool = icmp ne i32 %6, 0, !dbg !6772
  br i1 %tobool, label %if.then, label %if.end, !dbg !6774

if.then:                                          ; preds = %while.end
  %7 = load i32*, i32** %buf.addr, align 8, !dbg !6775
  %8 = bitcast i32* %7 to i8*, !dbg !6776
  %9 = load i32, i32* %count, align 4, !dbg !6777
  %conv = zext i32 %9 to i64, !dbg !6777
  %mul = mul i64 4, %conv, !dbg !6778
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 %mul, i32 4, i1 false), !dbg !6776
  br label %if.end, !dbg !6776

if.end:                                           ; preds = %if.then, %while.end
  ret void, !dbg !6779
}

; Function Attrs: nounwind uwtable
define internal i32 @read_var_block_data(%struct.ALSDecContext* %ctx, %struct.ALSBlockData* %bd) #1 !dbg !6780 {
entry:
  %retval.i511 = alloca i32, align 4
  %a.addr.i512 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i512, metadata !3692, metadata !1692), !dbg !6781
  %amin.addr.i513 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i513, metadata !3698, metadata !1692), !dbg !6786
  %amax.addr.i514 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i514, metadata !3700, metadata !1692), !dbg !6787
  %x.addr.i506 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i506, metadata !3254, metadata !1692), !dbg !6788
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3254, metadata !1692), !dbg !6790
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3692, metadata !1692), !dbg !6797
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !3698, metadata !1692), !dbg !6799
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !3700, metadata !1692), !dbg !6800
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %bd.addr = alloca %struct.ALSBlockData*, align 8
  %sconf = alloca %struct.ALSSpecificConfig*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %k = alloca i32, align 4
  %s = alloca [8 x i32], align 16
  %sx = alloca [8 x i32], align 16
  %sub_blocks = alloca i32, align 4
  %log2_sub_blocks = alloca i32, align 4
  %sb_length = alloca i32, align 4
  %start = alloca i32, align 4
  %opt_order = alloca i32, align 4
  %sb = alloca i32, align 4
  %quant_cof = alloca i32*, align 8
  %current_res = alloca i32*, align 8
  %opt_order_length = alloca i32, align 4
  %add_base = alloca i32, align 4
  %k_max = alloca i32, align 4
  %rice_param = alloca i32, align 4
  %offset = alloca i32, align 4
  %r = alloca i32, align 4
  %c = alloca i32, align 4
  %delta = alloca [8 x i32], align 16
  %k360 = alloca [8 x i32], align 16
  %b = alloca i32, align 4
  %high = alloca i32, align 4
  %low = alloca i32, align 4
  %value = alloca i32, align 4
  %sb_len = alloca i32, align 4
  %cur_tail_code = alloca i32, align 4
  %cur_k = alloca i32, align 4
  %cur_s = alloca i32, align 4
  %res = alloca i32, align 4
  %max_msb = alloca i32, align 4
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !6801, metadata !1692), !dbg !6802
  store %struct.ALSBlockData* %bd, %struct.ALSBlockData** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSBlockData** %bd.addr, metadata !6803, metadata !1692), !dbg !6804
  call void @llvm.dbg.declare(metadata %struct.ALSSpecificConfig** %sconf, metadata !6805, metadata !1692), !dbg !6806
  %0 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6807
  %sconf1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %0, i32 0, i32 1, !dbg !6808
  store %struct.ALSSpecificConfig* %sconf1, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !6806
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !6809, metadata !1692), !dbg !6810
  %1 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6811
  %avctx2 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %1, i32 0, i32 0, !dbg !6812
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx2, align 8, !dbg !6812
  store %struct.AVCodecContext* %2, %struct.AVCodecContext** %avctx, align 8, !dbg !6810
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !6813, metadata !1692), !dbg !6814
  %3 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !6815
  %gb3 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %3, i32 0, i32 2, !dbg !6816
  store %struct.GetBitContext* %gb3, %struct.GetBitContext** %gb, align 8, !dbg !6814
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6817, metadata !1692), !dbg !6818
  call void @llvm.dbg.declare(metadata [8 x i32]* %s, metadata !6819, metadata !1692), !dbg !6821
  call void @llvm.dbg.declare(metadata [8 x i32]* %sx, metadata !6822, metadata !1692), !dbg !6823
  call void @llvm.dbg.declare(metadata i32* %sub_blocks, metadata !6824, metadata !1692), !dbg !6825
  call void @llvm.dbg.declare(metadata i32* %log2_sub_blocks, metadata !6826, metadata !1692), !dbg !6827
  call void @llvm.dbg.declare(metadata i32* %sb_length, metadata !6828, metadata !1692), !dbg !6829
  call void @llvm.dbg.declare(metadata i32* %start, metadata !6830, metadata !1692), !dbg !6831
  store i32 0, i32* %start, align 4, !dbg !6831
  call void @llvm.dbg.declare(metadata i32* %opt_order, metadata !6832, metadata !1692), !dbg !6833
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !6834, metadata !1692), !dbg !6835
  call void @llvm.dbg.declare(metadata i32** %quant_cof, metadata !6836, metadata !1692), !dbg !6837
  %4 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !6838
  %quant_cof4 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %4, i32 0, i32 10, !dbg !6839
  %5 = load i32*, i32** %quant_cof4, align 8, !dbg !6839
  store i32* %5, i32** %quant_cof, align 8, !dbg !6837
  call void @llvm.dbg.declare(metadata i32** %current_res, metadata !6840, metadata !1692), !dbg !6841
  %6 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !6842
  %const_block = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %6, i32 0, i32 2, !dbg !6843
  %7 = load i32*, i32** %const_block, align 8, !dbg !6843
  store i32 0, i32* %7, align 4, !dbg !6844
  %8 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !6845
  %opt_order5 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %8, i32 0, i32 5, !dbg !6846
  %9 = load i32*, i32** %opt_order5, align 8, !dbg !6846
  store i32 1, i32* %9, align 4, !dbg !6847
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6848
  %call = call i32 @get_bits1(%struct.GetBitContext* %10), !dbg !6849
  %11 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !6850
  %js_blocks = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %11, i32 0, i32 3, !dbg !6851
  store i32 %call, i32* %js_blocks, align 8, !dbg !6852
  %12 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !6853
  %opt_order6 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %12, i32 0, i32 5, !dbg !6854
  %13 = load i32*, i32** %opt_order6, align 8, !dbg !6854
  %14 = load i32, i32* %13, align 4, !dbg !6855
  store i32 %14, i32* %opt_order, align 4, !dbg !6856
  %15 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !6857
  %bgmc = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %15, i32 0, i32 12, !dbg !6859
  %16 = load i32, i32* %bgmc, align 8, !dbg !6859
  %tobool = icmp ne i32 %16, 0, !dbg !6857
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6860

land.lhs.true:                                    ; preds = %entry
  %17 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !6861
  %sb_part = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %17, i32 0, i32 13, !dbg !6863
  %18 = load i32, i32* %sb_part, align 4, !dbg !6863
  %tobool7 = icmp ne i32 %18, 0, !dbg !6861
  br i1 %tobool7, label %if.else, label %if.then, !dbg !6864

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %log2_sub_blocks, align 4, !dbg !6865
  br label %if.end17, !dbg !6867

if.else:                                          ; preds = %land.lhs.true, %entry
  %19 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !6868
  %bgmc8 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %19, i32 0, i32 12, !dbg !6871
  %20 = load i32, i32* %bgmc8, align 8, !dbg !6871
  %tobool9 = icmp ne i32 %20, 0, !dbg !6868
  br i1 %tobool9, label %land.lhs.true10, label %if.else15, !dbg !6872

land.lhs.true10:                                  ; preds = %if.else
  %21 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !6873
  %sb_part11 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %21, i32 0, i32 13, !dbg !6875
  %22 = load i32, i32* %sb_part11, align 4, !dbg !6875
  %tobool12 = icmp ne i32 %22, 0, !dbg !6873
  br i1 %tobool12, label %if.then13, label %if.else15, !dbg !6876

if.then13:                                        ; preds = %land.lhs.true10
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6877
  %call14 = call i32 @get_bits(%struct.GetBitContext* %23, i32 2), !dbg !6878
  store i32 %call14, i32* %log2_sub_blocks, align 4, !dbg !6879
  br label %if.end, !dbg !6880

if.else15:                                        ; preds = %land.lhs.true10, %if.else
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6881
  %call16 = call i32 @get_bits1(%struct.GetBitContext* %24), !dbg !6882
  %mul = mul i32 2, %call16, !dbg !6883
  store i32 %mul, i32* %log2_sub_blocks, align 4, !dbg !6884
  br label %if.end

if.end:                                           ; preds = %if.else15, %if.then13
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  %25 = load i32, i32* %log2_sub_blocks, align 4, !dbg !6885
  %shl = shl i32 1, %25, !dbg !6886
  store i32 %shl, i32* %sub_blocks, align 4, !dbg !6887
  %26 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !6888
  %block_length = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %26, i32 0, i32 0, !dbg !6890
  %27 = load i32, i32* %block_length, align 8, !dbg !6890
  %28 = load i32, i32* %sub_blocks, align 4, !dbg !6891
  %sub = sub i32 %28, 1, !dbg !6892
  %and = and i32 %27, %sub, !dbg !6893
  %tobool18 = icmp ne i32 %and, 0, !dbg !6893
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !6894

if.then19:                                        ; preds = %if.end17
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6895
  %30 = bitcast %struct.AVCodecContext* %29 to i8*, !dbg !6895
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 24, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i32 0, i32 0)), !dbg !6897
  store i32 -1094995529, i32* %retval, align 4, !dbg !6898
  br label %return, !dbg !6898

if.end20:                                         ; preds = %if.end17
  %31 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !6899
  %block_length21 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %31, i32 0, i32 0, !dbg !6900
  %32 = load i32, i32* %block_length21, align 8, !dbg !6900
  %33 = load i32, i32* %log2_sub_blocks, align 4, !dbg !6901
  %shr = lshr i32 %32, %33, !dbg !6902
  store i32 %shr, i32* %sb_length, align 4, !dbg !6903
  %34 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !6904
  %bgmc22 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %34, i32 0, i32 12, !dbg !6906
  %35 = load i32, i32* %bgmc22, align 8, !dbg !6906
  %tobool23 = icmp ne i32 %35, 0, !dbg !6904
  br i1 %tobool23, label %if.then24, label %if.else49, !dbg !6907

if.then24:                                        ; preds = %if.end20
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6908
  %37 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !6910
  %resolution = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %37, i32 0, i32 1, !dbg !6911
  %38 = load i32, i32* %resolution, align 4, !dbg !6911
  %cmp = icmp sgt i32 %38, 1, !dbg !6912
  %conv = zext i1 %cmp to i32, !dbg !6912
  %add = add nsw i32 8, %conv, !dbg !6913
  %call25 = call i32 @get_bits(%struct.GetBitContext* %36, i32 %add), !dbg !6914
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 0, !dbg !6915
  store i32 %call25, i32* %arrayidx, align 16, !dbg !6916
  store i32 1, i32* %k, align 4, !dbg !6917
  br label %for.cond, !dbg !6919

for.cond:                                         ; preds = %for.inc, %if.then24
  %39 = load i32, i32* %k, align 4, !dbg !6920
  %40 = load i32, i32* %sub_blocks, align 4, !dbg !6923
  %cmp26 = icmp ult i32 %39, %40, !dbg !6924
  br i1 %cmp26, label %for.body, label %for.end, !dbg !6925

for.body:                                         ; preds = %for.cond
  %41 = load i32, i32* %k, align 4, !dbg !6926
  %sub28 = sub i32 %41, 1, !dbg !6927
  %idxprom = zext i32 %sub28 to i64, !dbg !6928
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 %idxprom, !dbg !6928
  %42 = load i32, i32* %arrayidx29, align 4, !dbg !6928
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6929
  %call30 = call i32 @decode_rice(%struct.GetBitContext* %43, i32 2), !dbg !6930
  %add31 = add i32 %42, %call30, !dbg !6931
  %44 = load i32, i32* %k, align 4, !dbg !6932
  %idxprom32 = zext i32 %44 to i64, !dbg !6933
  %arrayidx33 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 %idxprom32, !dbg !6933
  store i32 %add31, i32* %arrayidx33, align 4, !dbg !6934
  br label %for.inc, !dbg !6933

for.inc:                                          ; preds = %for.body
  %45 = load i32, i32* %k, align 4, !dbg !6935
  %inc = add i32 %45, 1, !dbg !6935
  store i32 %inc, i32* %k, align 4, !dbg !6935
  br label %for.cond, !dbg !6937, !llvm.loop !6938

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %k, align 4, !dbg !6940
  br label %for.cond34, !dbg !6942

for.cond34:                                       ; preds = %for.inc46, %for.end
  %46 = load i32, i32* %k, align 4, !dbg !6943
  %47 = load i32, i32* %sub_blocks, align 4, !dbg !6946
  %cmp35 = icmp ult i32 %46, %47, !dbg !6947
  br i1 %cmp35, label %for.body37, label %for.end48, !dbg !6948

for.body37:                                       ; preds = %for.cond34
  %48 = load i32, i32* %k, align 4, !dbg !6949
  %idxprom38 = zext i32 %48 to i64, !dbg !6951
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 %idxprom38, !dbg !6951
  %49 = load i32, i32* %arrayidx39, align 4, !dbg !6951
  %and40 = and i32 %49, 15, !dbg !6952
  %50 = load i32, i32* %k, align 4, !dbg !6953
  %idxprom41 = zext i32 %50 to i64, !dbg !6954
  %arrayidx42 = getelementptr inbounds [8 x i32], [8 x i32]* %sx, i64 0, i64 %idxprom41, !dbg !6954
  store i32 %and40, i32* %arrayidx42, align 4, !dbg !6955
  %51 = load i32, i32* %k, align 4, !dbg !6956
  %idxprom43 = zext i32 %51 to i64, !dbg !6957
  %arrayidx44 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 %idxprom43, !dbg !6957
  %52 = load i32, i32* %arrayidx44, align 4, !dbg !6958
  %shr45 = lshr i32 %52, 4, !dbg !6958
  store i32 %shr45, i32* %arrayidx44, align 4, !dbg !6958
  br label %for.inc46, !dbg !6959

for.inc46:                                        ; preds = %for.body37
  %53 = load i32, i32* %k, align 4, !dbg !6960
  %inc47 = add i32 %53, 1, !dbg !6960
  store i32 %inc47, i32* %k, align 4, !dbg !6960
  br label %for.cond34, !dbg !6962, !llvm.loop !6963

for.end48:                                        ; preds = %for.cond34
  br label %if.end70, !dbg !6965

if.else49:                                        ; preds = %if.end20
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6966
  %55 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !6968
  %resolution50 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %55, i32 0, i32 1, !dbg !6969
  %56 = load i32, i32* %resolution50, align 4, !dbg !6969
  %cmp51 = icmp sgt i32 %56, 1, !dbg !6970
  %conv52 = zext i1 %cmp51 to i32, !dbg !6970
  %add53 = add nsw i32 4, %conv52, !dbg !6971
  %call54 = call i32 @get_bits(%struct.GetBitContext* %54, i32 %add53), !dbg !6972
  %arrayidx55 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 0, !dbg !6973
  store i32 %call54, i32* %arrayidx55, align 16, !dbg !6974
  store i32 1, i32* %k, align 4, !dbg !6975
  br label %for.cond56, !dbg !6977

for.cond56:                                       ; preds = %for.inc67, %if.else49
  %57 = load i32, i32* %k, align 4, !dbg !6978
  %58 = load i32, i32* %sub_blocks, align 4, !dbg !6981
  %cmp57 = icmp ult i32 %57, %58, !dbg !6982
  br i1 %cmp57, label %for.body59, label %for.end69, !dbg !6983

for.body59:                                       ; preds = %for.cond56
  %59 = load i32, i32* %k, align 4, !dbg !6984
  %sub60 = sub i32 %59, 1, !dbg !6985
  %idxprom61 = zext i32 %sub60 to i64, !dbg !6986
  %arrayidx62 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 %idxprom61, !dbg !6986
  %60 = load i32, i32* %arrayidx62, align 4, !dbg !6986
  %61 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !6987
  %call63 = call i32 @decode_rice(%struct.GetBitContext* %61, i32 0), !dbg !6988
  %add64 = add i32 %60, %call63, !dbg !6989
  %62 = load i32, i32* %k, align 4, !dbg !6990
  %idxprom65 = zext i32 %62 to i64, !dbg !6991
  %arrayidx66 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 %idxprom65, !dbg !6991
  store i32 %add64, i32* %arrayidx66, align 4, !dbg !6992
  br label %for.inc67, !dbg !6991

for.inc67:                                        ; preds = %for.body59
  %63 = load i32, i32* %k, align 4, !dbg !6993
  %inc68 = add i32 %63, 1, !dbg !6993
  store i32 %inc68, i32* %k, align 4, !dbg !6993
  br label %for.cond56, !dbg !6995, !llvm.loop !6996

for.end69:                                        ; preds = %for.cond56
  br label %if.end70

if.end70:                                         ; preds = %for.end69, %for.end48
  store i32 1, i32* %k, align 4, !dbg !6998
  br label %for.cond71, !dbg !7000

for.cond71:                                       ; preds = %for.inc81, %if.end70
  %64 = load i32, i32* %k, align 4, !dbg !7001
  %65 = load i32, i32* %sub_blocks, align 4, !dbg !7004
  %cmp72 = icmp ult i32 %64, %65, !dbg !7005
  br i1 %cmp72, label %for.body74, label %for.end83, !dbg !7006

for.body74:                                       ; preds = %for.cond71
  %66 = load i32, i32* %k, align 4, !dbg !7007
  %idxprom75 = zext i32 %66 to i64, !dbg !7009
  %arrayidx76 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 %idxprom75, !dbg !7009
  %67 = load i32, i32* %arrayidx76, align 4, !dbg !7009
  %cmp77 = icmp ugt i32 %67, 32, !dbg !7010
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !7011

if.then79:                                        ; preds = %for.body74
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7012
  %69 = bitcast %struct.AVCodecContext* %68 to i8*, !dbg !7012
  call void (i8*, i32, i8*, ...) @av_log(i8* %69, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i32 0, i32 0)), !dbg !7014
  store i32 -1094995529, i32* %retval, align 4, !dbg !7015
  br label %return, !dbg !7015

if.end80:                                         ; preds = %for.body74
  br label %for.inc81, !dbg !7016

for.inc81:                                        ; preds = %if.end80
  %70 = load i32, i32* %k, align 4, !dbg !7018
  %inc82 = add i32 %70, 1, !dbg !7018
  store i32 %inc82, i32* %k, align 4, !dbg !7018
  br label %for.cond71, !dbg !7020, !llvm.loop !7021

for.end83:                                        ; preds = %for.cond71
  %71 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7023
  %call84 = call i32 @get_bits1(%struct.GetBitContext* %71), !dbg !7025
  %tobool85 = icmp ne i32 %call84, 0, !dbg !7025
  br i1 %tobool85, label %if.then86, label %if.end89, !dbg !7026

if.then86:                                        ; preds = %for.end83
  %72 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7027
  %call87 = call i32 @get_bits(%struct.GetBitContext* %72, i32 4), !dbg !7028
  %add88 = add i32 %call87, 1, !dbg !7029
  %73 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7030
  %shift_lsbs = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %73, i32 0, i32 4, !dbg !7031
  %74 = load i32*, i32** %shift_lsbs, align 8, !dbg !7031
  store i32 %add88, i32* %74, align 4, !dbg !7032
  br label %if.end89, !dbg !7033

if.end89:                                         ; preds = %if.then86, %for.end83
  %75 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7034
  %js_blocks90 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %75, i32 0, i32 3, !dbg !7035
  %76 = load i32, i32* %js_blocks90, align 8, !dbg !7035
  %tobool91 = icmp ne i32 %76, 0, !dbg !7034
  br i1 %tobool91, label %land.lhs.true92, label %lor.rhs, !dbg !7036

land.lhs.true92:                                  ; preds = %if.end89
  %77 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7037
  %raw_other = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %77, i32 0, i32 14, !dbg !7039
  %78 = load i32*, i32** %raw_other, align 8, !dbg !7039
  %tobool93 = icmp ne i32* %78, null, !dbg !7037
  br i1 %tobool93, label %lor.end, label %lor.rhs, !dbg !7040

lor.rhs:                                          ; preds = %land.lhs.true92, %if.end89
  %79 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7041
  %shift_lsbs94 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %79, i32 0, i32 4, !dbg !7043
  %80 = load i32*, i32** %shift_lsbs94, align 8, !dbg !7043
  %81 = load i32, i32* %80, align 4, !dbg !7044
  %tobool95 = icmp ne i32 %81, 0, !dbg !7045
  br label %lor.end, !dbg !7045

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true92
  %82 = phi i1 [ true, %land.lhs.true92 ], [ %tobool95, %lor.rhs ]
  %lor.ext = zext i1 %82 to i32, !dbg !7046
  %83 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7048
  %store_prev_samples = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %83, i32 0, i32 6, !dbg !7049
  %84 = load i32*, i32** %store_prev_samples, align 8, !dbg !7049
  store i32 %lor.ext, i32* %84, align 4, !dbg !7050
  %85 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7051
  %rlslms = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %85, i32 0, i32 18, !dbg !7052
  %86 = load i32, i32* %rlslms, align 8, !dbg !7052
  %tobool96 = icmp ne i32 %86, 0, !dbg !7051
  br i1 %tobool96, label %if.end257, label %if.then97, !dbg !7053

if.then97:                                        ; preds = %lor.end
  %87 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7054
  %adapt_order = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %87, i32 0, i32 7, !dbg !7055
  %88 = load i32, i32* %adapt_order, align 4, !dbg !7055
  %tobool98 = icmp ne i32 %88, 0, !dbg !7054
  br i1 %tobool98, label %land.lhs.true99, label %if.else119, !dbg !7056

land.lhs.true99:                                  ; preds = %if.then97
  %89 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7057
  %max_order = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %89, i32 0, i32 10, !dbg !7059
  %90 = load i32, i32* %max_order, align 8, !dbg !7059
  %tobool100 = icmp ne i32 %90, 0, !dbg !7057
  br i1 %tobool100, label %if.then101, label %if.else119, !dbg !7060

if.then101:                                       ; preds = %land.lhs.true99
  call void @llvm.dbg.declare(metadata i32* %opt_order_length, metadata !7061, metadata !1692), !dbg !7062
  %91 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7063
  %block_length102 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %91, i32 0, i32 0, !dbg !7064
  %92 = load i32, i32* %block_length102, align 8, !dbg !7064
  %shr103 = lshr i32 %92, 3, !dbg !7065
  %sub104 = sub i32 %shr103, 1, !dbg !7066
  %93 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7067
  %max_order105 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %93, i32 0, i32 10, !dbg !7068
  %94 = load i32, i32* %max_order105, align 8, !dbg !7068
  %add106 = add nsw i32 %94, 1, !dbg !7069
  store i32 %sub104, i32* %a.addr.i, align 4, !dbg !7070
  store i32 2, i32* %amin.addr.i, align 4, !dbg !7070
  store i32 %add106, i32* %amax.addr.i, align 4, !dbg !7070
  %95 = load i32, i32* %a.addr.i, align 4, !dbg !7071
  %96 = load i32, i32* %amin.addr.i, align 4, !dbg !7072
  %cmp.i = icmp slt i32 %95, %96, !dbg !7073
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !7074

if.then.i:                                        ; preds = %if.then101
  %97 = load i32, i32* %amin.addr.i, align 4, !dbg !7075
  store i32 %97, i32* %retval.i, align 4, !dbg !7076
  br label %av_clip_c.exit, !dbg !7076

if.else.i:                                        ; preds = %if.then101
  %98 = load i32, i32* %a.addr.i, align 4, !dbg !7077
  %99 = load i32, i32* %amax.addr.i, align 4, !dbg !7078
  %cmp1.i = icmp sgt i32 %98, %99, !dbg !7079
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7080

if.then2.i:                                       ; preds = %if.else.i
  %100 = load i32, i32* %amax.addr.i, align 4, !dbg !7081
  store i32 %100, i32* %retval.i, align 4, !dbg !7082
  br label %av_clip_c.exit, !dbg !7082

if.else3.i:                                       ; preds = %if.else.i
  %101 = load i32, i32* %a.addr.i, align 4, !dbg !7083
  store i32 %101, i32* %retval.i, align 4, !dbg !7084
  br label %av_clip_c.exit, !dbg !7084

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %102 = load i32, i32* %retval.i, align 4, !dbg !7085
  store i32 %102, i32* %x.addr.i, align 4, !dbg !7086
  %103 = load i32, i32* %x.addr.i, align 4, !dbg !7087
  %sub.i = sub nsw i32 %103, 1, !dbg !7088
  %shl.i = shl i32 %sub.i, 1, !dbg !7089
  %or.i = or i32 %shl.i, 1, !dbg !7090
  %104 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #10, !dbg !7091
  %sub1.i = sub nsw i32 31, %104, !dbg !7092
  store i32 %sub1.i, i32* %opt_order_length, align 4, !dbg !7062
  %105 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7093
  %106 = load i32, i32* %opt_order_length, align 4, !dbg !7094
  %call109 = call i32 @get_bits(%struct.GetBitContext* %105, i32 %106), !dbg !7095
  %107 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7096
  %opt_order110 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %107, i32 0, i32 5, !dbg !7097
  %108 = load i32*, i32** %opt_order110, align 8, !dbg !7097
  store i32 %call109, i32* %108, align 4, !dbg !7098
  %109 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7099
  %opt_order111 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %109, i32 0, i32 5, !dbg !7101
  %110 = load i32*, i32** %opt_order111, align 8, !dbg !7101
  %111 = load i32, i32* %110, align 4, !dbg !7102
  %112 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7103
  %max_order112 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %112, i32 0, i32 10, !dbg !7104
  %113 = load i32, i32* %max_order112, align 8, !dbg !7104
  %cmp113 = icmp ugt i32 %111, %113, !dbg !7105
  br i1 %cmp113, label %if.then115, label %if.end118, !dbg !7106

if.then115:                                       ; preds = %av_clip_c.exit
  %114 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7107
  %max_order116 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %114, i32 0, i32 10, !dbg !7109
  %115 = load i32, i32* %max_order116, align 8, !dbg !7109
  %116 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7110
  %opt_order117 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %116, i32 0, i32 5, !dbg !7111
  %117 = load i32*, i32** %opt_order117, align 8, !dbg !7111
  store i32 %115, i32* %117, align 4, !dbg !7112
  %118 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7113
  %119 = bitcast %struct.AVCodecContext* %118 to i8*, !dbg !7113
  call void (i8*, i32, i8*, ...) @av_log(i8* %119, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i32 0, i32 0)), !dbg !7114
  store i32 -1094995529, i32* %retval, align 4, !dbg !7115
  br label %return, !dbg !7115

if.end118:                                        ; preds = %av_clip_c.exit
  br label %if.end122, !dbg !7116

if.else119:                                       ; preds = %land.lhs.true99, %if.then97
  %120 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7117
  %max_order120 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %120, i32 0, i32 10, !dbg !7119
  %121 = load i32, i32* %max_order120, align 8, !dbg !7119
  %122 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7120
  %opt_order121 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %122, i32 0, i32 5, !dbg !7121
  %123 = load i32*, i32** %opt_order121, align 8, !dbg !7121
  store i32 %121, i32* %123, align 4, !dbg !7122
  br label %if.end122

if.end122:                                        ; preds = %if.else119, %if.end118
  %124 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7123
  %opt_order123 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %124, i32 0, i32 5, !dbg !7124
  %125 = load i32*, i32** %opt_order123, align 8, !dbg !7124
  %126 = load i32, i32* %125, align 4, !dbg !7125
  store i32 %126, i32* %opt_order, align 4, !dbg !7126
  %127 = load i32, i32* %opt_order, align 4, !dbg !7127
  %tobool124 = icmp ne i32 %127, 0, !dbg !7127
  br i1 %tobool124, label %if.then125, label %if.end256, !dbg !7129

if.then125:                                       ; preds = %if.end122
  call void @llvm.dbg.declare(metadata i32* %add_base, metadata !7130, metadata !1692), !dbg !7132
  %128 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7133
  %coef_table = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %128, i32 0, i32 8, !dbg !7135
  %129 = load i32, i32* %coef_table, align 8, !dbg !7135
  %cmp126 = icmp eq i32 %129, 3, !dbg !7136
  br i1 %cmp126, label %if.then128, label %if.else155, !dbg !7137

if.then128:                                       ; preds = %if.then125
  store i32 127, i32* %add_base, align 4, !dbg !7138
  %130 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7140
  %call129 = call i32 @get_bits(%struct.GetBitContext* %130, i32 7), !dbg !7141
  %idxprom130 = zext i32 %call129 to i64, !dbg !7142
  %arrayidx131 = getelementptr inbounds [128 x i16], [128 x i16]* @parcor_scaled_values, i64 0, i64 %idxprom130, !dbg !7142
  %131 = load i16, i16* %arrayidx131, align 2, !dbg !7142
  %conv132 = sext i16 %131 to i32, !dbg !7142
  %mul133 = mul nsw i32 32, %conv132, !dbg !7143
  %132 = load i32*, i32** %quant_cof, align 8, !dbg !7144
  %arrayidx134 = getelementptr inbounds i32, i32* %132, i64 0, !dbg !7144
  store i32 %mul133, i32* %arrayidx134, align 4, !dbg !7145
  %133 = load i32, i32* %opt_order, align 4, !dbg !7146
  %cmp135 = icmp ugt i32 %133, 1, !dbg !7148
  br i1 %cmp135, label %if.then137, label %if.end144, !dbg !7149

if.then137:                                       ; preds = %if.then128
  %134 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7150
  %call138 = call i32 @get_bits(%struct.GetBitContext* %134, i32 7), !dbg !7151
  %idxprom139 = zext i32 %call138 to i64, !dbg !7152
  %arrayidx140 = getelementptr inbounds [128 x i16], [128 x i16]* @parcor_scaled_values, i64 0, i64 %idxprom139, !dbg !7152
  %135 = load i16, i16* %arrayidx140, align 2, !dbg !7152
  %conv141 = sext i16 %135 to i32, !dbg !7152
  %mul142 = mul nsw i32 -32, %conv141, !dbg !7153
  %136 = load i32*, i32** %quant_cof, align 8, !dbg !7154
  %arrayidx143 = getelementptr inbounds i32, i32* %136, i64 1, !dbg !7154
  store i32 %mul142, i32* %arrayidx143, align 4, !dbg !7155
  br label %if.end144, !dbg !7154

if.end144:                                        ; preds = %if.then137, %if.then128
  store i32 2, i32* %k, align 4, !dbg !7156
  br label %for.cond145, !dbg !7158

for.cond145:                                      ; preds = %for.inc152, %if.end144
  %137 = load i32, i32* %k, align 4, !dbg !7159
  %138 = load i32, i32* %opt_order, align 4, !dbg !7162
  %cmp146 = icmp ult i32 %137, %138, !dbg !7163
  br i1 %cmp146, label %for.body148, label %for.end154, !dbg !7164

for.body148:                                      ; preds = %for.cond145
  %139 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7165
  %call149 = call i32 @get_bits(%struct.GetBitContext* %139, i32 7), !dbg !7166
  %140 = load i32, i32* %k, align 4, !dbg !7167
  %idxprom150 = zext i32 %140 to i64, !dbg !7168
  %141 = load i32*, i32** %quant_cof, align 8, !dbg !7168
  %arrayidx151 = getelementptr inbounds i32, i32* %141, i64 %idxprom150, !dbg !7168
  store i32 %call149, i32* %arrayidx151, align 4, !dbg !7169
  br label %for.inc152, !dbg !7168

for.inc152:                                       ; preds = %for.body148
  %142 = load i32, i32* %k, align 4, !dbg !7170
  %inc153 = add i32 %142, 1, !dbg !7170
  store i32 %inc153, i32* %k, align 4, !dbg !7170
  br label %for.cond145, !dbg !7172, !llvm.loop !7173

for.end154:                                       ; preds = %for.cond145
  br label %if.end241, !dbg !7175

if.else155:                                       ; preds = %if.then125
  call void @llvm.dbg.declare(metadata i32* %k_max, metadata !7176, metadata !1692), !dbg !7178
  store i32 1, i32* %add_base, align 4, !dbg !7179
  %143 = load i32, i32* %opt_order, align 4, !dbg !7180
  %cmp156 = icmp ugt i32 %143, 20, !dbg !7181
  br i1 %cmp156, label %cond.true, label %cond.false, !dbg !7182

cond.true:                                        ; preds = %if.else155
  br label %cond.end, !dbg !7183

cond.false:                                       ; preds = %if.else155
  %144 = load i32, i32* %opt_order, align 4, !dbg !7185
  br label %cond.end, !dbg !7187

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 20, %cond.true ], [ %144, %cond.false ], !dbg !7188
  store i32 %cond, i32* %k_max, align 4, !dbg !7190
  store i32 0, i32* %k, align 4, !dbg !7191
  br label %for.cond158, !dbg !7193

for.cond158:                                      ; preds = %for.inc192, %cond.end
  %145 = load i32, i32* %k, align 4, !dbg !7194
  %146 = load i32, i32* %k_max, align 4, !dbg !7197
  %cmp159 = icmp ult i32 %145, %146, !dbg !7198
  br i1 %cmp159, label %for.body161, label %for.end194, !dbg !7199

for.body161:                                      ; preds = %for.cond158
  call void @llvm.dbg.declare(metadata i32* %rice_param, metadata !7200, metadata !1692), !dbg !7202
  %147 = load i32, i32* %k, align 4, !dbg !7203
  %idxprom162 = zext i32 %147 to i64, !dbg !7204
  %148 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7205
  %coef_table163 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %148, i32 0, i32 8, !dbg !7206
  %149 = load i32, i32* %coef_table163, align 8, !dbg !7206
  %idxprom164 = sext i32 %149 to i64, !dbg !7204
  %arrayidx165 = getelementptr inbounds [3 x [20 x [2 x i8]]], [3 x [20 x [2 x i8]]]* @parcor_rice_table, i64 0, i64 %idxprom164, !dbg !7204
  %arrayidx166 = getelementptr inbounds [20 x [2 x i8]], [20 x [2 x i8]]* %arrayidx165, i64 0, i64 %idxprom162, !dbg !7204
  %arrayidx167 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx166, i64 0, i64 1, !dbg !7204
  %150 = load i8, i8* %arrayidx167, align 1, !dbg !7204
  %conv168 = sext i8 %150 to i32, !dbg !7204
  store i32 %conv168, i32* %rice_param, align 4, !dbg !7202
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !7207, metadata !1692), !dbg !7208
  %151 = load i32, i32* %k, align 4, !dbg !7209
  %idxprom169 = zext i32 %151 to i64, !dbg !7210
  %152 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7211
  %coef_table170 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %152, i32 0, i32 8, !dbg !7212
  %153 = load i32, i32* %coef_table170, align 8, !dbg !7212
  %idxprom171 = sext i32 %153 to i64, !dbg !7210
  %arrayidx172 = getelementptr inbounds [3 x [20 x [2 x i8]]], [3 x [20 x [2 x i8]]]* @parcor_rice_table, i64 0, i64 %idxprom171, !dbg !7210
  %arrayidx173 = getelementptr inbounds [20 x [2 x i8]], [20 x [2 x i8]]* %arrayidx172, i64 0, i64 %idxprom169, !dbg !7210
  %arrayidx174 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx173, i64 0, i64 0, !dbg !7210
  %154 = load i8, i8* %arrayidx174, align 2, !dbg !7210
  %conv175 = sext i8 %154 to i32, !dbg !7210
  store i32 %conv175, i32* %offset, align 4, !dbg !7208
  %155 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7213
  %156 = load i32, i32* %rice_param, align 4, !dbg !7214
  %call176 = call i32 @decode_rice(%struct.GetBitContext* %155, i32 %156), !dbg !7215
  %157 = load i32, i32* %offset, align 4, !dbg !7216
  %add177 = add nsw i32 %call176, %157, !dbg !7217
  %158 = load i32, i32* %k, align 4, !dbg !7218
  %idxprom178 = zext i32 %158 to i64, !dbg !7219
  %159 = load i32*, i32** %quant_cof, align 8, !dbg !7219
  %arrayidx179 = getelementptr inbounds i32, i32* %159, i64 %idxprom178, !dbg !7219
  store i32 %add177, i32* %arrayidx179, align 4, !dbg !7220
  %160 = load i32, i32* %k, align 4, !dbg !7221
  %idxprom180 = zext i32 %160 to i64, !dbg !7223
  %161 = load i32*, i32** %quant_cof, align 8, !dbg !7223
  %arrayidx181 = getelementptr inbounds i32, i32* %161, i64 %idxprom180, !dbg !7223
  %162 = load i32, i32* %arrayidx181, align 4, !dbg !7223
  %cmp182 = icmp slt i32 %162, -64, !dbg !7224
  br i1 %cmp182, label %if.then188, label %lor.lhs.false, !dbg !7225

lor.lhs.false:                                    ; preds = %for.body161
  %163 = load i32, i32* %k, align 4, !dbg !7226
  %idxprom184 = zext i32 %163 to i64, !dbg !7228
  %164 = load i32*, i32** %quant_cof, align 8, !dbg !7228
  %arrayidx185 = getelementptr inbounds i32, i32* %164, i64 %idxprom184, !dbg !7228
  %165 = load i32, i32* %arrayidx185, align 4, !dbg !7228
  %cmp186 = icmp sgt i32 %165, 63, !dbg !7229
  br i1 %cmp186, label %if.then188, label %if.end191, !dbg !7230

if.then188:                                       ; preds = %lor.lhs.false, %for.body161
  %166 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7231
  %167 = bitcast %struct.AVCodecContext* %166 to i8*, !dbg !7231
  %168 = load i32, i32* %k, align 4, !dbg !7233
  %idxprom189 = zext i32 %168 to i64, !dbg !7234
  %169 = load i32*, i32** %quant_cof, align 8, !dbg !7234
  %arrayidx190 = getelementptr inbounds i32, i32* %169, i64 %idxprom189, !dbg !7234
  %170 = load i32, i32* %arrayidx190, align 4, !dbg !7234
  call void (i8*, i32, i8*, ...) @av_log(i8* %167, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17, i32 0, i32 0), i32 %170), !dbg !7235
  store i32 -1094995529, i32* %retval, align 4, !dbg !7236
  br label %return, !dbg !7236

if.end191:                                        ; preds = %lor.lhs.false
  br label %for.inc192, !dbg !7237

for.inc192:                                       ; preds = %if.end191
  %171 = load i32, i32* %k, align 4, !dbg !7238
  %inc193 = add i32 %171, 1, !dbg !7238
  store i32 %inc193, i32* %k, align 4, !dbg !7238
  br label %for.cond158, !dbg !7240, !llvm.loop !7241

for.end194:                                       ; preds = %for.cond158
  %172 = load i32, i32* %opt_order, align 4, !dbg !7243
  %cmp195 = icmp ugt i32 %172, 127, !dbg !7244
  br i1 %cmp195, label %cond.true197, label %cond.false198, !dbg !7245

cond.true197:                                     ; preds = %for.end194
  br label %cond.end199, !dbg !7246

cond.false198:                                    ; preds = %for.end194
  %173 = load i32, i32* %opt_order, align 4, !dbg !7247
  br label %cond.end199, !dbg !7248

cond.end199:                                      ; preds = %cond.false198, %cond.true197
  %cond200 = phi i32 [ 127, %cond.true197 ], [ %173, %cond.false198 ], !dbg !7249
  store i32 %cond200, i32* %k_max, align 4, !dbg !7250
  br label %for.cond201, !dbg !7251

for.cond201:                                      ; preds = %for.inc210, %cond.end199
  %174 = load i32, i32* %k, align 4, !dbg !7252
  %175 = load i32, i32* %k_max, align 4, !dbg !7256
  %cmp202 = icmp ult i32 %174, %175, !dbg !7257
  br i1 %cmp202, label %for.body204, label %for.end212, !dbg !7258

for.body204:                                      ; preds = %for.cond201
  %176 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7259
  %call205 = call i32 @decode_rice(%struct.GetBitContext* %176, i32 2), !dbg !7260
  %177 = load i32, i32* %k, align 4, !dbg !7261
  %and206 = and i32 %177, 1, !dbg !7262
  %add207 = add i32 %call205, %and206, !dbg !7263
  %178 = load i32, i32* %k, align 4, !dbg !7264
  %idxprom208 = zext i32 %178 to i64, !dbg !7265
  %179 = load i32*, i32** %quant_cof, align 8, !dbg !7265
  %arrayidx209 = getelementptr inbounds i32, i32* %179, i64 %idxprom208, !dbg !7265
  store i32 %add207, i32* %arrayidx209, align 4, !dbg !7266
  br label %for.inc210, !dbg !7265

for.inc210:                                       ; preds = %for.body204
  %180 = load i32, i32* %k, align 4, !dbg !7267
  %inc211 = add i32 %180, 1, !dbg !7267
  store i32 %inc211, i32* %k, align 4, !dbg !7267
  br label %for.cond201, !dbg !7269, !llvm.loop !7270

for.end212:                                       ; preds = %for.cond201
  br label %for.cond213, !dbg !7271

for.cond213:                                      ; preds = %for.inc220, %for.end212
  %181 = load i32, i32* %k, align 4, !dbg !7272
  %182 = load i32, i32* %opt_order, align 4, !dbg !7276
  %cmp214 = icmp ult i32 %181, %182, !dbg !7277
  br i1 %cmp214, label %for.body216, label %for.end222, !dbg !7278

for.body216:                                      ; preds = %for.cond213
  %183 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7279
  %call217 = call i32 @decode_rice(%struct.GetBitContext* %183, i32 1), !dbg !7280
  %184 = load i32, i32* %k, align 4, !dbg !7281
  %idxprom218 = zext i32 %184 to i64, !dbg !7282
  %185 = load i32*, i32** %quant_cof, align 8, !dbg !7282
  %arrayidx219 = getelementptr inbounds i32, i32* %185, i64 %idxprom218, !dbg !7282
  store i32 %call217, i32* %arrayidx219, align 4, !dbg !7283
  br label %for.inc220, !dbg !7282

for.inc220:                                       ; preds = %for.body216
  %186 = load i32, i32* %k, align 4, !dbg !7284
  %inc221 = add i32 %186, 1, !dbg !7284
  store i32 %inc221, i32* %k, align 4, !dbg !7284
  br label %for.cond213, !dbg !7286, !llvm.loop !7287

for.end222:                                       ; preds = %for.cond213
  %187 = load i32*, i32** %quant_cof, align 8, !dbg !7288
  %arrayidx223 = getelementptr inbounds i32, i32* %187, i64 0, !dbg !7288
  %188 = load i32, i32* %arrayidx223, align 4, !dbg !7288
  %add224 = add nsw i32 %188, 64, !dbg !7289
  %idxprom225 = sext i32 %add224 to i64, !dbg !7290
  %arrayidx226 = getelementptr inbounds [128 x i16], [128 x i16]* @parcor_scaled_values, i64 0, i64 %idxprom225, !dbg !7290
  %189 = load i16, i16* %arrayidx226, align 2, !dbg !7290
  %conv227 = sext i16 %189 to i32, !dbg !7290
  %mul228 = mul nsw i32 32, %conv227, !dbg !7291
  %190 = load i32*, i32** %quant_cof, align 8, !dbg !7292
  %arrayidx229 = getelementptr inbounds i32, i32* %190, i64 0, !dbg !7292
  store i32 %mul228, i32* %arrayidx229, align 4, !dbg !7293
  %191 = load i32, i32* %opt_order, align 4, !dbg !7294
  %cmp230 = icmp ugt i32 %191, 1, !dbg !7296
  br i1 %cmp230, label %if.then232, label %if.end240, !dbg !7297

if.then232:                                       ; preds = %for.end222
  %192 = load i32*, i32** %quant_cof, align 8, !dbg !7298
  %arrayidx233 = getelementptr inbounds i32, i32* %192, i64 1, !dbg !7298
  %193 = load i32, i32* %arrayidx233, align 4, !dbg !7298
  %add234 = add nsw i32 %193, 64, !dbg !7299
  %idxprom235 = sext i32 %add234 to i64, !dbg !7300
  %arrayidx236 = getelementptr inbounds [128 x i16], [128 x i16]* @parcor_scaled_values, i64 0, i64 %idxprom235, !dbg !7300
  %194 = load i16, i16* %arrayidx236, align 2, !dbg !7300
  %conv237 = sext i16 %194 to i32, !dbg !7300
  %mul238 = mul nsw i32 -32, %conv237, !dbg !7301
  %195 = load i32*, i32** %quant_cof, align 8, !dbg !7302
  %arrayidx239 = getelementptr inbounds i32, i32* %195, i64 1, !dbg !7302
  store i32 %mul238, i32* %arrayidx239, align 4, !dbg !7303
  br label %if.end240, !dbg !7302

if.end240:                                        ; preds = %if.then232, %for.end222
  br label %if.end241

if.end241:                                        ; preds = %if.end240, %for.end154
  store i32 2, i32* %k, align 4, !dbg !7304
  br label %for.cond242, !dbg !7306

for.cond242:                                      ; preds = %for.inc253, %if.end241
  %196 = load i32, i32* %k, align 4, !dbg !7307
  %197 = load i32, i32* %opt_order, align 4, !dbg !7310
  %cmp243 = icmp ult i32 %196, %197, !dbg !7311
  br i1 %cmp243, label %for.body245, label %for.end255, !dbg !7312

for.body245:                                      ; preds = %for.cond242
  %198 = load i32, i32* %k, align 4, !dbg !7313
  %idxprom246 = zext i32 %198 to i64, !dbg !7314
  %199 = load i32*, i32** %quant_cof, align 8, !dbg !7314
  %arrayidx247 = getelementptr inbounds i32, i32* %199, i64 %idxprom246, !dbg !7314
  %200 = load i32, i32* %arrayidx247, align 4, !dbg !7314
  %mul248 = mul nsw i32 %200, 16384, !dbg !7315
  %201 = load i32, i32* %add_base, align 4, !dbg !7316
  %shl249 = shl i32 %201, 13, !dbg !7317
  %add250 = add nsw i32 %mul248, %shl249, !dbg !7318
  %202 = load i32, i32* %k, align 4, !dbg !7319
  %idxprom251 = zext i32 %202 to i64, !dbg !7320
  %203 = load i32*, i32** %quant_cof, align 8, !dbg !7320
  %arrayidx252 = getelementptr inbounds i32, i32* %203, i64 %idxprom251, !dbg !7320
  store i32 %add250, i32* %arrayidx252, align 4, !dbg !7321
  br label %for.inc253, !dbg !7320

for.inc253:                                       ; preds = %for.body245
  %204 = load i32, i32* %k, align 4, !dbg !7322
  %inc254 = add i32 %204, 1, !dbg !7322
  store i32 %inc254, i32* %k, align 4, !dbg !7322
  br label %for.cond242, !dbg !7324, !llvm.loop !7325

for.end255:                                       ; preds = %for.cond242
  br label %if.end256, !dbg !7327

if.end256:                                        ; preds = %for.end255, %if.end122
  br label %if.end257, !dbg !7328

if.end257:                                        ; preds = %if.end256, %lor.end
  %205 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7329
  %long_term_prediction = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %205, i32 0, i32 9, !dbg !7331
  %206 = load i32, i32* %long_term_prediction, align 4, !dbg !7331
  %tobool258 = icmp ne i32 %206, 0, !dbg !7329
  br i1 %tobool258, label %if.then259, label %if.end304, !dbg !7332

if.then259:                                       ; preds = %if.end257
  %207 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7333
  %call260 = call i32 @get_bits1(%struct.GetBitContext* %207), !dbg !7335
  %208 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7336
  %use_ltp = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %208, i32 0, i32 7, !dbg !7337
  %209 = load i32*, i32** %use_ltp, align 8, !dbg !7337
  store i32 %call260, i32* %209, align 4, !dbg !7338
  %210 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7339
  %use_ltp261 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %210, i32 0, i32 7, !dbg !7341
  %211 = load i32*, i32** %use_ltp261, align 8, !dbg !7341
  %212 = load i32, i32* %211, align 4, !dbg !7342
  %tobool262 = icmp ne i32 %212, 0, !dbg !7342
  br i1 %tobool262, label %if.then263, label %if.end303, !dbg !7343

if.then263:                                       ; preds = %if.then259
  call void @llvm.dbg.declare(metadata i32* %r, metadata !7344, metadata !1692), !dbg !7346
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7347, metadata !1692), !dbg !7348
  %213 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7349
  %call264 = call i32 @decode_rice(%struct.GetBitContext* %213, i32 1), !dbg !7350
  %shl265 = shl i32 %call264, 3, !dbg !7351
  %214 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7352
  %ltp_gain = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %214, i32 0, i32 9, !dbg !7353
  %215 = load i32*, i32** %ltp_gain, align 8, !dbg !7353
  %arrayidx266 = getelementptr inbounds i32, i32* %215, i64 0, !dbg !7352
  store i32 %shl265, i32* %arrayidx266, align 4, !dbg !7354
  %216 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7355
  %call267 = call i32 @decode_rice(%struct.GetBitContext* %216, i32 2), !dbg !7356
  %shl268 = shl i32 %call267, 3, !dbg !7357
  %217 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7358
  %ltp_gain269 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %217, i32 0, i32 9, !dbg !7359
  %218 = load i32*, i32** %ltp_gain269, align 8, !dbg !7359
  %arrayidx270 = getelementptr inbounds i32, i32* %218, i64 1, !dbg !7358
  store i32 %shl268, i32* %arrayidx270, align 4, !dbg !7360
  %219 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7361
  %call271 = call i32 @get_unary(%struct.GetBitContext* %219, i32 0, i32 4), !dbg !7362
  store i32 %call271, i32* %r, align 4, !dbg !7363
  %220 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7364
  %call272 = call i32 @get_bits(%struct.GetBitContext* %220, i32 2), !dbg !7365
  store i32 %call272, i32* %c, align 4, !dbg !7366
  %221 = load i32, i32* %r, align 4, !dbg !7367
  %cmp273 = icmp sge i32 %221, 4, !dbg !7369
  br i1 %cmp273, label %if.then275, label %if.end276, !dbg !7370

if.then275:                                       ; preds = %if.then263
  %222 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7371
  %223 = bitcast %struct.AVCodecContext* %222 to i8*, !dbg !7371
  call void (i8*, i32, i8*, ...) @av_log(i8* %223, i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0)), !dbg !7373
  store i32 -1094995529, i32* %retval, align 4, !dbg !7374
  br label %return, !dbg !7374

if.end276:                                        ; preds = %if.then263
  %224 = load i32, i32* %c, align 4, !dbg !7375
  %idxprom277 = sext i32 %224 to i64, !dbg !7376
  %225 = load i32, i32* %r, align 4, !dbg !7377
  %idxprom278 = sext i32 %225 to i64, !dbg !7376
  %arrayidx279 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* @ltp_gain_values, i64 0, i64 %idxprom278, !dbg !7376
  %arrayidx280 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx279, i64 0, i64 %idxprom277, !dbg !7376
  %226 = load i8, i8* %arrayidx280, align 1, !dbg !7376
  %conv281 = zext i8 %226 to i32, !dbg !7376
  %227 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7378
  %ltp_gain282 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %227, i32 0, i32 9, !dbg !7379
  %228 = load i32*, i32** %ltp_gain282, align 8, !dbg !7379
  %arrayidx283 = getelementptr inbounds i32, i32* %228, i64 2, !dbg !7378
  store i32 %conv281, i32* %arrayidx283, align 4, !dbg !7380
  %229 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7381
  %call284 = call i32 @decode_rice(%struct.GetBitContext* %229, i32 2), !dbg !7382
  %shl285 = shl i32 %call284, 3, !dbg !7383
  %230 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7384
  %ltp_gain286 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %230, i32 0, i32 9, !dbg !7385
  %231 = load i32*, i32** %ltp_gain286, align 8, !dbg !7385
  %arrayidx287 = getelementptr inbounds i32, i32* %231, i64 3, !dbg !7384
  store i32 %shl285, i32* %arrayidx287, align 4, !dbg !7386
  %232 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7387
  %call288 = call i32 @decode_rice(%struct.GetBitContext* %232, i32 1), !dbg !7388
  %shl289 = shl i32 %call288, 3, !dbg !7389
  %233 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7390
  %ltp_gain290 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %233, i32 0, i32 9, !dbg !7391
  %234 = load i32*, i32** %ltp_gain290, align 8, !dbg !7391
  %arrayidx291 = getelementptr inbounds i32, i32* %234, i64 4, !dbg !7390
  store i32 %shl289, i32* %arrayidx291, align 4, !dbg !7392
  %235 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7393
  %236 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !7394
  %ltp_lag_length = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %236, i32 0, i32 15, !dbg !7395
  %237 = load i32, i32* %ltp_lag_length, align 8, !dbg !7395
  %call292 = call i32 @get_bits(%struct.GetBitContext* %235, i32 %237), !dbg !7396
  %238 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7397
  %ltp_lag = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %238, i32 0, i32 8, !dbg !7398
  %239 = load i32*, i32** %ltp_lag, align 8, !dbg !7398
  store i32 %call292, i32* %239, align 4, !dbg !7399
  %240 = load i32, i32* %opt_order, align 4, !dbg !7400
  %add293 = add i32 %240, 1, !dbg !7401
  %cmp294 = icmp ugt i32 4, %add293, !dbg !7402
  br i1 %cmp294, label %cond.true296, label %cond.false297, !dbg !7403

cond.true296:                                     ; preds = %if.end276
  br label %cond.end299, !dbg !7404

cond.false297:                                    ; preds = %if.end276
  %241 = load i32, i32* %opt_order, align 4, !dbg !7406
  %add298 = add i32 %241, 1, !dbg !7408
  br label %cond.end299, !dbg !7409

cond.end299:                                      ; preds = %cond.false297, %cond.true296
  %cond300 = phi i32 [ 4, %cond.true296 ], [ %add298, %cond.false297 ], !dbg !7410
  %242 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7412
  %ltp_lag301 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %242, i32 0, i32 8, !dbg !7413
  %243 = load i32*, i32** %ltp_lag301, align 8, !dbg !7413
  %244 = load i32, i32* %243, align 4, !dbg !7414
  %add302 = add i32 %244, %cond300, !dbg !7414
  store i32 %add302, i32* %243, align 4, !dbg !7414
  br label %if.end303, !dbg !7415

if.end303:                                        ; preds = %cond.end299, %if.then259
  br label %if.end304, !dbg !7416

if.end304:                                        ; preds = %if.end303, %if.end257
  %245 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7417
  %ra_block = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %245, i32 0, i32 1, !dbg !7419
  %246 = load i32, i32* %ra_block, align 4, !dbg !7419
  %tobool305 = icmp ne i32 %246, 0, !dbg !7417
  br i1 %tobool305, label %if.then306, label %if.end356, !dbg !7420

if.then306:                                       ; preds = %if.end304
  %247 = load i32, i32* %opt_order, align 4, !dbg !7421
  %tobool307 = icmp ne i32 %247, 0, !dbg !7421
  br i1 %tobool307, label %if.then308, label %if.end312, !dbg !7424

if.then308:                                       ; preds = %if.then306
  %248 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7425
  %249 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7426
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %249, i32 0, i32 143, !dbg !7427
  %250 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !7427
  %sub309 = sub nsw i32 %250, 4, !dbg !7428
  %call310 = call i32 @decode_rice(%struct.GetBitContext* %248, i32 %sub309), !dbg !7429
  %251 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7430
  %raw_samples = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %251, i32 0, i32 12, !dbg !7431
  %252 = load i32*, i32** %raw_samples, align 8, !dbg !7431
  %arrayidx311 = getelementptr inbounds i32, i32* %252, i64 0, !dbg !7430
  store i32 %call310, i32* %arrayidx311, align 4, !dbg !7432
  br label %if.end312, !dbg !7430

if.end312:                                        ; preds = %if.then308, %if.then306
  %253 = load i32, i32* %opt_order, align 4, !dbg !7433
  %cmp313 = icmp ugt i32 %253, 1, !dbg !7435
  br i1 %cmp313, label %if.then315, label %if.end330, !dbg !7436

if.then315:                                       ; preds = %if.end312
  %254 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7437
  %arrayidx316 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 0, !dbg !7438
  %255 = load i32, i32* %arrayidx316, align 16, !dbg !7438
  %add317 = add i32 %255, 3, !dbg !7439
  %256 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !7440
  %s_max = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %256, i32 0, i32 12, !dbg !7441
  %257 = load i32, i32* %s_max, align 4, !dbg !7441
  %cmp318 = icmp ugt i32 %add317, %257, !dbg !7442
  br i1 %cmp318, label %cond.true320, label %cond.false322, !dbg !7443

cond.true320:                                     ; preds = %if.then315
  %258 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !7444
  %s_max321 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %258, i32 0, i32 12, !dbg !7446
  %259 = load i32, i32* %s_max321, align 4, !dbg !7446
  br label %cond.end325, !dbg !7447

cond.false322:                                    ; preds = %if.then315
  %arrayidx323 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 0, !dbg !7448
  %260 = load i32, i32* %arrayidx323, align 16, !dbg !7448
  %add324 = add i32 %260, 3, !dbg !7450
  br label %cond.end325, !dbg !7451

cond.end325:                                      ; preds = %cond.false322, %cond.true320
  %cond326 = phi i32 [ %259, %cond.true320 ], [ %add324, %cond.false322 ], !dbg !7452
  %call327 = call i32 @decode_rice(%struct.GetBitContext* %254, i32 %cond326), !dbg !7454
  %261 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7455
  %raw_samples328 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %261, i32 0, i32 12, !dbg !7456
  %262 = load i32*, i32** %raw_samples328, align 8, !dbg !7456
  %arrayidx329 = getelementptr inbounds i32, i32* %262, i64 1, !dbg !7455
  store i32 %call327, i32* %arrayidx329, align 4, !dbg !7457
  br label %if.end330, !dbg !7455

if.end330:                                        ; preds = %cond.end325, %if.end312
  %263 = load i32, i32* %opt_order, align 4, !dbg !7458
  %cmp331 = icmp ugt i32 %263, 2, !dbg !7460
  br i1 %cmp331, label %if.then333, label %if.end349, !dbg !7461

if.then333:                                       ; preds = %if.end330
  %264 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7462
  %arrayidx334 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 0, !dbg !7463
  %265 = load i32, i32* %arrayidx334, align 16, !dbg !7463
  %add335 = add i32 %265, 1, !dbg !7464
  %266 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !7465
  %s_max336 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %266, i32 0, i32 12, !dbg !7466
  %267 = load i32, i32* %s_max336, align 4, !dbg !7466
  %cmp337 = icmp ugt i32 %add335, %267, !dbg !7467
  br i1 %cmp337, label %cond.true339, label %cond.false341, !dbg !7468

cond.true339:                                     ; preds = %if.then333
  %268 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !7469
  %s_max340 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %268, i32 0, i32 12, !dbg !7471
  %269 = load i32, i32* %s_max340, align 4, !dbg !7471
  br label %cond.end344, !dbg !7472

cond.false341:                                    ; preds = %if.then333
  %arrayidx342 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 0, !dbg !7473
  %270 = load i32, i32* %arrayidx342, align 16, !dbg !7473
  %add343 = add i32 %270, 1, !dbg !7475
  br label %cond.end344, !dbg !7476

cond.end344:                                      ; preds = %cond.false341, %cond.true339
  %cond345 = phi i32 [ %269, %cond.true339 ], [ %add343, %cond.false341 ], !dbg !7477
  %call346 = call i32 @decode_rice(%struct.GetBitContext* %264, i32 %cond345), !dbg !7479
  %271 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7480
  %raw_samples347 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %271, i32 0, i32 12, !dbg !7481
  %272 = load i32*, i32** %raw_samples347, align 8, !dbg !7481
  %arrayidx348 = getelementptr inbounds i32, i32* %272, i64 2, !dbg !7480
  store i32 %call346, i32* %arrayidx348, align 4, !dbg !7482
  br label %if.end349, !dbg !7480

if.end349:                                        ; preds = %cond.end344, %if.end330
  %273 = load i32, i32* %opt_order, align 4, !dbg !7483
  %cmp350 = icmp ugt i32 %273, 3, !dbg !7484
  br i1 %cmp350, label %cond.true352, label %cond.false353, !dbg !7485

cond.true352:                                     ; preds = %if.end349
  br label %cond.end354, !dbg !7486

cond.false353:                                    ; preds = %if.end349
  %274 = load i32, i32* %opt_order, align 4, !dbg !7488
  br label %cond.end354, !dbg !7490

cond.end354:                                      ; preds = %cond.false353, %cond.true352
  %cond355 = phi i32 [ 3, %cond.true352 ], [ %274, %cond.false353 ], !dbg !7491
  store i32 %cond355, i32* %start, align 4, !dbg !7493
  br label %if.end356, !dbg !7494

if.end356:                                        ; preds = %cond.end354, %if.end304
  %275 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7495
  %bgmc357 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %275, i32 0, i32 12, !dbg !7496
  %276 = load i32, i32* %bgmc357, align 8, !dbg !7496
  %tobool358 = icmp ne i32 %276, 0, !dbg !7495
  br i1 %tobool358, label %if.then359, label %if.else483, !dbg !7497

if.then359:                                       ; preds = %if.end356
  call void @llvm.dbg.declare(metadata [8 x i32]* %delta, metadata !7498, metadata !1692), !dbg !7499
  call void @llvm.dbg.declare(metadata [8 x i32]* %k360, metadata !7500, metadata !1692), !dbg !7501
  call void @llvm.dbg.declare(metadata i32* %b, metadata !7502, metadata !1692), !dbg !7503
  %277 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7504
  %block_length361 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %277, i32 0, i32 0, !dbg !7505
  %278 = load i32, i32* %block_length361, align 8, !dbg !7505
  store i32 %278, i32* %x.addr.i506, align 4, !dbg !7506
  %279 = load i32, i32* %x.addr.i506, align 4, !dbg !7507
  %sub.i507 = sub nsw i32 %279, 1, !dbg !7508
  %shl.i508 = shl i32 %sub.i507, 1, !dbg !7509
  %or.i509 = or i32 %shl.i508, 1, !dbg !7510
  %280 = call i32 @llvm.ctlz.i32(i32 %or.i509, i1 true) #10, !dbg !7511
  %sub1.i510 = sub nsw i32 31, %280, !dbg !7512
  %sub363 = sub nsw i32 %sub1.i510, 3, !dbg !7513
  %shr364 = ashr i32 %sub363, 1, !dbg !7514
  store i32 %shr364, i32* %a.addr.i512, align 4, !dbg !7515
  store i32 0, i32* %amin.addr.i513, align 4, !dbg !7515
  store i32 5, i32* %amax.addr.i514, align 4, !dbg !7515
  %281 = load i32, i32* %a.addr.i512, align 4, !dbg !7516
  %282 = load i32, i32* %amin.addr.i513, align 4, !dbg !7517
  %cmp.i515 = icmp slt i32 %281, %282, !dbg !7518
  br i1 %cmp.i515, label %if.then.i516, label %if.else.i518, !dbg !7519

if.then.i516:                                     ; preds = %if.then359
  %283 = load i32, i32* %amin.addr.i513, align 4, !dbg !7520
  store i32 %283, i32* %retval.i511, align 4, !dbg !7521
  br label %av_clip_c.exit521, !dbg !7521

if.else.i518:                                     ; preds = %if.then359
  %284 = load i32, i32* %a.addr.i512, align 4, !dbg !7522
  %285 = load i32, i32* %amax.addr.i514, align 4, !dbg !7523
  %cmp1.i517 = icmp sgt i32 %284, %285, !dbg !7524
  br i1 %cmp1.i517, label %if.then2.i519, label %if.else3.i520, !dbg !7525

if.then2.i519:                                    ; preds = %if.else.i518
  %286 = load i32, i32* %amax.addr.i514, align 4, !dbg !7526
  store i32 %286, i32* %retval.i511, align 4, !dbg !7527
  br label %av_clip_c.exit521, !dbg !7527

if.else3.i520:                                    ; preds = %if.else.i518
  %287 = load i32, i32* %a.addr.i512, align 4, !dbg !7528
  store i32 %287, i32* %retval.i511, align 4, !dbg !7529
  br label %av_clip_c.exit521, !dbg !7529

av_clip_c.exit521:                                ; preds = %if.then.i516, %if.then2.i519, %if.else3.i520
  %288 = load i32, i32* %retval.i511, align 4, !dbg !7530
  store i32 %288, i32* %b, align 4, !dbg !7503
  call void @llvm.dbg.declare(metadata i32* %high, metadata !7531, metadata !1692), !dbg !7532
  call void @llvm.dbg.declare(metadata i32* %low, metadata !7533, metadata !1692), !dbg !7534
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7535, metadata !1692), !dbg !7536
  %289 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7537
  call void @ff_bgmc_decode_init(%struct.GetBitContext* %289, i32* %high, i32* %low, i32* %value), !dbg !7538
  %290 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7539
  %raw_samples366 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %290, i32 0, i32 12, !dbg !7540
  %291 = load i32*, i32** %raw_samples366, align 8, !dbg !7540
  %292 = load i32, i32* %start, align 4, !dbg !7541
  %idx.ext = zext i32 %292 to i64, !dbg !7542
  %add.ptr = getelementptr inbounds i32, i32* %291, i64 %idx.ext, !dbg !7542
  store i32* %add.ptr, i32** %current_res, align 8, !dbg !7543
  store i32 0, i32* %sb, align 4, !dbg !7544
  br label %for.cond367, !dbg !7546

for.cond367:                                      ; preds = %for.inc404, %av_clip_c.exit521
  %293 = load i32, i32* %sb, align 4, !dbg !7547
  %294 = load i32, i32* %sub_blocks, align 4, !dbg !7550
  %cmp368 = icmp ult i32 %293, %294, !dbg !7551
  br i1 %cmp368, label %for.body370, label %for.end406, !dbg !7552

for.body370:                                      ; preds = %for.cond367
  call void @llvm.dbg.declare(metadata i32* %sb_len, metadata !7553, metadata !1692), !dbg !7555
  %295 = load i32, i32* %sb_length, align 4, !dbg !7556
  %296 = load i32, i32* %sb, align 4, !dbg !7557
  %tobool371 = icmp ne i32 %296, 0, !dbg !7557
  br i1 %tobool371, label %cond.true372, label %cond.false373, !dbg !7557

cond.true372:                                     ; preds = %for.body370
  br label %cond.end374, !dbg !7558

cond.false373:                                    ; preds = %for.body370
  %297 = load i32, i32* %start, align 4, !dbg !7560
  br label %cond.end374, !dbg !7562

cond.end374:                                      ; preds = %cond.false373, %cond.true372
  %cond375 = phi i32 [ 0, %cond.true372 ], [ %297, %cond.false373 ], !dbg !7563
  %sub376 = sub i32 %295, %cond375, !dbg !7565
  store i32 %sub376, i32* %sb_len, align 4, !dbg !7566
  %298 = load i32, i32* %sb, align 4, !dbg !7567
  %idxprom377 = sext i32 %298 to i64, !dbg !7568
  %arrayidx378 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 %idxprom377, !dbg !7568
  %299 = load i32, i32* %arrayidx378, align 4, !dbg !7568
  %300 = load i32, i32* %b, align 4, !dbg !7569
  %cmp379 = icmp ugt i32 %299, %300, !dbg !7570
  br i1 %cmp379, label %cond.true381, label %cond.false385, !dbg !7568

cond.true381:                                     ; preds = %cond.end374
  %301 = load i32, i32* %sb, align 4, !dbg !7571
  %idxprom382 = sext i32 %301 to i64, !dbg !7572
  %arrayidx383 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 %idxprom382, !dbg !7572
  %302 = load i32, i32* %arrayidx383, align 4, !dbg !7572
  %303 = load i32, i32* %b, align 4, !dbg !7573
  %sub384 = sub i32 %302, %303, !dbg !7574
  br label %cond.end386, !dbg !7575

cond.false385:                                    ; preds = %cond.end374
  br label %cond.end386, !dbg !7576

cond.end386:                                      ; preds = %cond.false385, %cond.true381
  %cond387 = phi i32 [ %sub384, %cond.true381 ], [ 0, %cond.false385 ], !dbg !7577
  %304 = load i32, i32* %sb, align 4, !dbg !7578
  %idxprom388 = sext i32 %304 to i64, !dbg !7579
  %arrayidx389 = getelementptr inbounds [8 x i32], [8 x i32]* %k360, i64 0, i64 %idxprom388, !dbg !7579
  store i32 %cond387, i32* %arrayidx389, align 4, !dbg !7580
  %305 = load i32, i32* %sb, align 4, !dbg !7581
  %idxprom390 = sext i32 %305 to i64, !dbg !7582
  %arrayidx391 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 %idxprom390, !dbg !7582
  %306 = load i32, i32* %arrayidx391, align 4, !dbg !7582
  %sub392 = sub i32 5, %306, !dbg !7583
  %307 = load i32, i32* %sb, align 4, !dbg !7584
  %idxprom393 = sext i32 %307 to i64, !dbg !7585
  %arrayidx394 = getelementptr inbounds [8 x i32], [8 x i32]* %k360, i64 0, i64 %idxprom393, !dbg !7585
  %308 = load i32, i32* %arrayidx394, align 4, !dbg !7585
  %add395 = add i32 %sub392, %308, !dbg !7586
  %309 = load i32, i32* %sb, align 4, !dbg !7587
  %idxprom396 = sext i32 %309 to i64, !dbg !7588
  %arrayidx397 = getelementptr inbounds [8 x i32], [8 x i32]* %delta, i64 0, i64 %idxprom396, !dbg !7588
  store i32 %add395, i32* %arrayidx397, align 4, !dbg !7589
  %310 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7590
  %311 = load i32, i32* %sb_len, align 4, !dbg !7591
  %312 = load i32*, i32** %current_res, align 8, !dbg !7592
  %313 = load i32, i32* %sb, align 4, !dbg !7593
  %idxprom398 = sext i32 %313 to i64, !dbg !7594
  %arrayidx399 = getelementptr inbounds [8 x i32], [8 x i32]* %delta, i64 0, i64 %idxprom398, !dbg !7594
  %314 = load i32, i32* %arrayidx399, align 4, !dbg !7594
  %315 = load i32, i32* %sb, align 4, !dbg !7595
  %idxprom400 = sext i32 %315 to i64, !dbg !7596
  %arrayidx401 = getelementptr inbounds [8 x i32], [8 x i32]* %sx, i64 0, i64 %idxprom400, !dbg !7596
  %316 = load i32, i32* %arrayidx401, align 4, !dbg !7596
  %317 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !7597
  %bgmc_lut = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %317, i32 0, i32 13, !dbg !7598
  %318 = load i8*, i8** %bgmc_lut, align 8, !dbg !7598
  %319 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !7599
  %bgmc_lut_status = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %319, i32 0, i32 14, !dbg !7600
  %320 = load i32*, i32** %bgmc_lut_status, align 8, !dbg !7600
  call void @ff_bgmc_decode(%struct.GetBitContext* %310, i32 %311, i32* %312, i32 %314, i32 %316, i32* %high, i32* %low, i32* %value, i8* %318, i32* %320), !dbg !7601
  %321 = load i32, i32* %sb_len, align 4, !dbg !7602
  %322 = load i32*, i32** %current_res, align 8, !dbg !7603
  %idx.ext402 = zext i32 %321 to i64, !dbg !7603
  %add.ptr403 = getelementptr inbounds i32, i32* %322, i64 %idx.ext402, !dbg !7603
  store i32* %add.ptr403, i32** %current_res, align 8, !dbg !7603
  br label %for.inc404, !dbg !7604

for.inc404:                                       ; preds = %cond.end386
  %323 = load i32, i32* %sb, align 4, !dbg !7605
  %inc405 = add nsw i32 %323, 1, !dbg !7605
  store i32 %inc405, i32* %sb, align 4, !dbg !7605
  br label %for.cond367, !dbg !7607, !llvm.loop !7608

for.end406:                                       ; preds = %for.cond367
  %324 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7610
  call void @ff_bgmc_decode_end(%struct.GetBitContext* %324), !dbg !7611
  %325 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7612
  %raw_samples407 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %325, i32 0, i32 12, !dbg !7613
  %326 = load i32*, i32** %raw_samples407, align 8, !dbg !7613
  %327 = load i32, i32* %start, align 4, !dbg !7614
  %idx.ext408 = zext i32 %327 to i64, !dbg !7615
  %add.ptr409 = getelementptr inbounds i32, i32* %326, i64 %idx.ext408, !dbg !7615
  store i32* %add.ptr409, i32** %current_res, align 8, !dbg !7616
  store i32 0, i32* %sb, align 4, !dbg !7617
  br label %for.cond410, !dbg !7619

for.cond410:                                      ; preds = %for.inc480, %for.end406
  %328 = load i32, i32* %sb, align 4, !dbg !7620
  %329 = load i32, i32* %sub_blocks, align 4, !dbg !7623
  %cmp411 = icmp ult i32 %328, %329, !dbg !7624
  br i1 %cmp411, label %for.body413, label %for.end482, !dbg !7625

for.body413:                                      ; preds = %for.cond410
  call void @llvm.dbg.declare(metadata i32* %cur_tail_code, metadata !7626, metadata !1692), !dbg !7628
  %330 = load i32, i32* %sb, align 4, !dbg !7629
  %idxprom414 = sext i32 %330 to i64, !dbg !7630
  %arrayidx415 = getelementptr inbounds [8 x i32], [8 x i32]* %delta, i64 0, i64 %idxprom414, !dbg !7630
  %331 = load i32, i32* %arrayidx415, align 4, !dbg !7630
  %idxprom416 = sext i32 %331 to i64, !dbg !7631
  %332 = load i32, i32* %sb, align 4, !dbg !7632
  %idxprom417 = sext i32 %332 to i64, !dbg !7633
  %arrayidx418 = getelementptr inbounds [8 x i32], [8 x i32]* %sx, i64 0, i64 %idxprom417, !dbg !7633
  %333 = load i32, i32* %arrayidx418, align 4, !dbg !7633
  %idxprom419 = zext i32 %333 to i64, !dbg !7631
  %arrayidx420 = getelementptr inbounds [16 x [6 x i8]], [16 x [6 x i8]]* @tail_code, i64 0, i64 %idxprom419, !dbg !7631
  %arrayidx421 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx420, i64 0, i64 %idxprom416, !dbg !7631
  %334 = load i8, i8* %arrayidx421, align 1, !dbg !7631
  %conv422 = zext i8 %334 to i32, !dbg !7631
  store i32 %conv422, i32* %cur_tail_code, align 4, !dbg !7628
  call void @llvm.dbg.declare(metadata i32* %cur_k, metadata !7634, metadata !1692), !dbg !7635
  %335 = load i32, i32* %sb, align 4, !dbg !7636
  %idxprom423 = sext i32 %335 to i64, !dbg !7637
  %arrayidx424 = getelementptr inbounds [8 x i32], [8 x i32]* %k360, i64 0, i64 %idxprom423, !dbg !7637
  %336 = load i32, i32* %arrayidx424, align 4, !dbg !7637
  store i32 %336, i32* %cur_k, align 4, !dbg !7635
  call void @llvm.dbg.declare(metadata i32* %cur_s, metadata !7638, metadata !1692), !dbg !7639
  %337 = load i32, i32* %sb, align 4, !dbg !7640
  %idxprom425 = sext i32 %337 to i64, !dbg !7641
  %arrayidx426 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 %idxprom425, !dbg !7641
  %338 = load i32, i32* %arrayidx426, align 4, !dbg !7641
  store i32 %338, i32* %cur_s, align 4, !dbg !7639
  br label %for.cond427, !dbg !7642

for.cond427:                                      ; preds = %for.inc477, %for.body413
  %339 = load i32, i32* %start, align 4, !dbg !7643
  %340 = load i32, i32* %sb_length, align 4, !dbg !7647
  %cmp428 = icmp ult i32 %339, %340, !dbg !7648
  br i1 %cmp428, label %for.body430, label %for.end479, !dbg !7649

for.body430:                                      ; preds = %for.cond427
  call void @llvm.dbg.declare(metadata i32* %res, metadata !7650, metadata !1692), !dbg !7652
  %341 = load i32*, i32** %current_res, align 8, !dbg !7653
  %342 = load i32, i32* %341, align 4, !dbg !7654
  store i32 %342, i32* %res, align 4, !dbg !7652
  %343 = load i32, i32* %res, align 4, !dbg !7655
  %344 = load i32, i32* %cur_tail_code, align 4, !dbg !7657
  %cmp431 = icmp eq i32 %343, %344, !dbg !7658
  br i1 %cmp431, label %if.then433, label %if.else459, !dbg !7659

if.then433:                                       ; preds = %for.body430
  call void @llvm.dbg.declare(metadata i32* %max_msb, metadata !7660, metadata !1692), !dbg !7662
  %345 = load i32, i32* %sb, align 4, !dbg !7663
  %idxprom434 = sext i32 %345 to i64, !dbg !7664
  %arrayidx435 = getelementptr inbounds [8 x i32], [8 x i32]* %sx, i64 0, i64 %idxprom434, !dbg !7664
  %346 = load i32, i32* %arrayidx435, align 4, !dbg !7664
  %cmp436 = icmp ugt i32 %346, 2, !dbg !7665
  %conv437 = zext i1 %cmp436 to i32, !dbg !7665
  %add438 = add nsw i32 2, %conv437, !dbg !7666
  %347 = load i32, i32* %sb, align 4, !dbg !7667
  %idxprom439 = sext i32 %347 to i64, !dbg !7668
  %arrayidx440 = getelementptr inbounds [8 x i32], [8 x i32]* %sx, i64 0, i64 %idxprom439, !dbg !7668
  %348 = load i32, i32* %arrayidx440, align 4, !dbg !7668
  %cmp441 = icmp ugt i32 %348, 10, !dbg !7669
  %conv442 = zext i1 %cmp441 to i32, !dbg !7669
  %add443 = add nsw i32 %add438, %conv442, !dbg !7670
  %349 = load i32, i32* %sb, align 4, !dbg !7671
  %idxprom444 = sext i32 %349 to i64, !dbg !7672
  %arrayidx445 = getelementptr inbounds [8 x i32], [8 x i32]* %delta, i64 0, i64 %idxprom444, !dbg !7672
  %350 = load i32, i32* %arrayidx445, align 4, !dbg !7672
  %sub446 = sub nsw i32 5, %350, !dbg !7673
  %shl447 = shl i32 %add443, %sub446, !dbg !7674
  store i32 %shl447, i32* %max_msb, align 4, !dbg !7662
  %351 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7675
  %352 = load i32, i32* %cur_s, align 4, !dbg !7676
  %call448 = call i32 @decode_rice(%struct.GetBitContext* %351, i32 %352), !dbg !7677
  store i32 %call448, i32* %res, align 4, !dbg !7678
  %353 = load i32, i32* %res, align 4, !dbg !7679
  %cmp449 = icmp sge i32 %353, 0, !dbg !7681
  br i1 %cmp449, label %if.then451, label %if.else454, !dbg !7682

if.then451:                                       ; preds = %if.then433
  %354 = load i32, i32* %max_msb, align 4, !dbg !7683
  %355 = load i32, i32* %cur_k, align 4, !dbg !7685
  %shl452 = shl i32 %354, %355, !dbg !7686
  %356 = load i32, i32* %res, align 4, !dbg !7687
  %add453 = add i32 %356, %shl452, !dbg !7687
  store i32 %add453, i32* %res, align 4, !dbg !7687
  br label %if.end458, !dbg !7688

if.else454:                                       ; preds = %if.then433
  %357 = load i32, i32* %max_msb, align 4, !dbg !7689
  %sub455 = sub i32 %357, 1, !dbg !7691
  %358 = load i32, i32* %cur_k, align 4, !dbg !7692
  %shl456 = shl i32 %sub455, %358, !dbg !7693
  %359 = load i32, i32* %res, align 4, !dbg !7694
  %sub457 = sub i32 %359, %shl456, !dbg !7694
  store i32 %sub457, i32* %res, align 4, !dbg !7694
  br label %if.end458

if.end458:                                        ; preds = %if.else454, %if.then451
  br label %if.end476, !dbg !7695

if.else459:                                       ; preds = %for.body430
  %360 = load i32, i32* %res, align 4, !dbg !7696
  %361 = load i32, i32* %cur_tail_code, align 4, !dbg !7699
  %cmp460 = icmp ugt i32 %360, %361, !dbg !7700
  br i1 %cmp460, label %if.then462, label %if.end463, !dbg !7701

if.then462:                                       ; preds = %if.else459
  %362 = load i32, i32* %res, align 4, !dbg !7702
  %dec = add nsw i32 %362, -1, !dbg !7702
  store i32 %dec, i32* %res, align 4, !dbg !7702
  br label %if.end463, !dbg !7703

if.end463:                                        ; preds = %if.then462, %if.else459
  %363 = load i32, i32* %res, align 4, !dbg !7704
  %and464 = and i32 %363, 1, !dbg !7706
  %tobool465 = icmp ne i32 %and464, 0, !dbg !7706
  br i1 %tobool465, label %if.then466, label %if.end468, !dbg !7707

if.then466:                                       ; preds = %if.end463
  %364 = load i32, i32* %res, align 4, !dbg !7708
  %sub467 = sub nsw i32 0, %364, !dbg !7709
  store i32 %sub467, i32* %res, align 4, !dbg !7710
  br label %if.end468, !dbg !7711

if.end468:                                        ; preds = %if.then466, %if.end463
  %365 = load i32, i32* %res, align 4, !dbg !7712
  %shr469 = ashr i32 %365, 1, !dbg !7712
  store i32 %shr469, i32* %res, align 4, !dbg !7712
  %366 = load i32, i32* %cur_k, align 4, !dbg !7713
  %tobool470 = icmp ne i32 %366, 0, !dbg !7713
  br i1 %tobool470, label %if.then471, label %if.end475, !dbg !7715

if.then471:                                       ; preds = %if.end468
  %367 = load i32, i32* %cur_k, align 4, !dbg !7716
  %shl472 = shl i32 1, %367, !dbg !7718
  %368 = load i32, i32* %res, align 4, !dbg !7719
  %mul473 = mul nsw i32 %368, %shl472, !dbg !7719
  store i32 %mul473, i32* %res, align 4, !dbg !7719
  %369 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7720
  %370 = load i32, i32* %cur_k, align 4, !dbg !7721
  %call474 = call i32 @get_bits_long(%struct.GetBitContext* %369, i32 %370), !dbg !7722
  %371 = load i32, i32* %res, align 4, !dbg !7723
  %or = or i32 %371, %call474, !dbg !7723
  store i32 %or, i32* %res, align 4, !dbg !7723
  br label %if.end475, !dbg !7724

if.end475:                                        ; preds = %if.then471, %if.end468
  br label %if.end476

if.end476:                                        ; preds = %if.end475, %if.end458
  %372 = load i32, i32* %res, align 4, !dbg !7725
  %373 = load i32*, i32** %current_res, align 8, !dbg !7726
  %incdec.ptr = getelementptr inbounds i32, i32* %373, i32 1, !dbg !7726
  store i32* %incdec.ptr, i32** %current_res, align 8, !dbg !7726
  store i32 %372, i32* %373, align 4, !dbg !7727
  br label %for.inc477, !dbg !7728

for.inc477:                                       ; preds = %if.end476
  %374 = load i32, i32* %start, align 4, !dbg !7729
  %inc478 = add i32 %374, 1, !dbg !7729
  store i32 %inc478, i32* %start, align 4, !dbg !7729
  br label %for.cond427, !dbg !7731, !llvm.loop !7732

for.end479:                                       ; preds = %for.cond427
  br label %for.inc480, !dbg !7733

for.inc480:                                       ; preds = %for.end479
  %375 = load i32, i32* %sb, align 4, !dbg !7734
  %inc481 = add nsw i32 %375, 1, !dbg !7734
  store i32 %inc481, i32* %sb, align 4, !dbg !7734
  store i32 0, i32* %start, align 4, !dbg !7736
  br label %for.cond410, !dbg !7737, !llvm.loop !7738

for.end482:                                       ; preds = %for.cond410
  br label %if.end505, !dbg !7740

if.else483:                                       ; preds = %if.end356
  %376 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7741
  %raw_samples484 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %376, i32 0, i32 12, !dbg !7743
  %377 = load i32*, i32** %raw_samples484, align 8, !dbg !7743
  %378 = load i32, i32* %start, align 4, !dbg !7744
  %idx.ext485 = zext i32 %378 to i64, !dbg !7745
  %add.ptr486 = getelementptr inbounds i32, i32* %377, i64 %idx.ext485, !dbg !7745
  store i32* %add.ptr486, i32** %current_res, align 8, !dbg !7746
  store i32 0, i32* %sb, align 4, !dbg !7747
  br label %for.cond487, !dbg !7749

for.cond487:                                      ; preds = %for.inc502, %if.else483
  %379 = load i32, i32* %sb, align 4, !dbg !7750
  %380 = load i32, i32* %sub_blocks, align 4, !dbg !7753
  %cmp488 = icmp ult i32 %379, %380, !dbg !7754
  br i1 %cmp488, label %for.body490, label %for.end504, !dbg !7755

for.body490:                                      ; preds = %for.cond487
  br label %for.cond491, !dbg !7756

for.cond491:                                      ; preds = %for.inc499, %for.body490
  %381 = load i32, i32* %start, align 4, !dbg !7757
  %382 = load i32, i32* %sb_length, align 4, !dbg !7761
  %cmp492 = icmp ult i32 %381, %382, !dbg !7762
  br i1 %cmp492, label %for.body494, label %for.end501, !dbg !7763

for.body494:                                      ; preds = %for.cond491
  %383 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7764
  %384 = load i32, i32* %sb, align 4, !dbg !7765
  %idxprom495 = sext i32 %384 to i64, !dbg !7766
  %arrayidx496 = getelementptr inbounds [8 x i32], [8 x i32]* %s, i64 0, i64 %idxprom495, !dbg !7766
  %385 = load i32, i32* %arrayidx496, align 4, !dbg !7766
  %call497 = call i32 @decode_rice(%struct.GetBitContext* %383, i32 %385), !dbg !7767
  %386 = load i32*, i32** %current_res, align 8, !dbg !7768
  %incdec.ptr498 = getelementptr inbounds i32, i32* %386, i32 1, !dbg !7768
  store i32* %incdec.ptr498, i32** %current_res, align 8, !dbg !7768
  store i32 %call497, i32* %386, align 4, !dbg !7769
  br label %for.inc499, !dbg !7770

for.inc499:                                       ; preds = %for.body494
  %387 = load i32, i32* %start, align 4, !dbg !7771
  %inc500 = add i32 %387, 1, !dbg !7771
  store i32 %inc500, i32* %start, align 4, !dbg !7771
  br label %for.cond491, !dbg !7773, !llvm.loop !7774

for.end501:                                       ; preds = %for.cond491
  br label %for.inc502, !dbg !7775

for.inc502:                                       ; preds = %for.end501
  %388 = load i32, i32* %sb, align 4, !dbg !7777
  %inc503 = add nsw i32 %388, 1, !dbg !7777
  store i32 %inc503, i32* %sb, align 4, !dbg !7777
  store i32 0, i32* %start, align 4, !dbg !7779
  br label %for.cond487, !dbg !7780, !llvm.loop !7781

for.end504:                                       ; preds = %for.cond487
  br label %if.end505

if.end505:                                        ; preds = %for.end504, %for.end482
  store i32 0, i32* %retval, align 4, !dbg !7783
  br label %return, !dbg !7783

return:                                           ; preds = %if.end505, %if.then275, %if.then188, %if.then115, %if.then79, %if.then19
  %389 = load i32, i32* %retval, align 4, !dbg !7784
  ret i32 %389, !dbg !7784
}

; Function Attrs: nounwind uwtable
define internal i32 @read_const_block_data(%struct.ALSDecContext* %ctx, %struct.ALSBlockData* %bd) #1 !dbg !7785 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %bd.addr = alloca %struct.ALSBlockData*, align 8
  %sconf = alloca %struct.ALSSpecificConfig*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %const_val_bits = alloca i32, align 4
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !7786, metadata !1692), !dbg !7787
  store %struct.ALSBlockData* %bd, %struct.ALSBlockData** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSBlockData** %bd.addr, metadata !7788, metadata !1692), !dbg !7789
  call void @llvm.dbg.declare(metadata %struct.ALSSpecificConfig** %sconf, metadata !7790, metadata !1692), !dbg !7791
  %0 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !7792
  %sconf1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %0, i32 0, i32 1, !dbg !7793
  store %struct.ALSSpecificConfig* %sconf1, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7791
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !7794, metadata !1692), !dbg !7795
  %1 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !7796
  %avctx2 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %1, i32 0, i32 0, !dbg !7797
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx2, align 8, !dbg !7797
  store %struct.AVCodecContext* %2, %struct.AVCodecContext** %avctx, align 8, !dbg !7795
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !7798, metadata !1692), !dbg !7799
  %3 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !7800
  %gb3 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %3, i32 0, i32 2, !dbg !7801
  store %struct.GetBitContext* %gb3, %struct.GetBitContext** %gb, align 8, !dbg !7799
  %4 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7802
  %block_length = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %4, i32 0, i32 0, !dbg !7804
  %5 = load i32, i32* %block_length, align 8, !dbg !7804
  %cmp = icmp ule i32 %5, 0, !dbg !7805
  br i1 %cmp, label %if.then, label %if.end, !dbg !7806

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !7807
  br label %return, !dbg !7807

if.end:                                           ; preds = %entry
  %6 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7808
  %raw_samples = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %6, i32 0, i32 12, !dbg !7809
  %7 = load i32*, i32** %raw_samples, align 8, !dbg !7809
  store i32 0, i32* %7, align 4, !dbg !7810
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7811
  %call = call i32 @get_bits1(%struct.GetBitContext* %8), !dbg !7812
  %9 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7813
  %const_block = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %9, i32 0, i32 2, !dbg !7814
  %10 = load i32*, i32** %const_block, align 8, !dbg !7814
  store i32 %call, i32* %10, align 4, !dbg !7815
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7816
  %call4 = call i32 @get_bits1(%struct.GetBitContext* %11), !dbg !7817
  %12 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7818
  %js_blocks = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %12, i32 0, i32 3, !dbg !7819
  store i32 %call4, i32* %js_blocks, align 8, !dbg !7820
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7821
  call void @skip_bits(%struct.GetBitContext* %13, i32 5), !dbg !7822
  %14 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7823
  %const_block5 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %14, i32 0, i32 2, !dbg !7825
  %15 = load i32*, i32** %const_block5, align 8, !dbg !7825
  %16 = load i32, i32* %15, align 4, !dbg !7826
  %tobool = icmp ne i32 %16, 0, !dbg !7826
  br i1 %tobool, label %if.then6, label %if.end10, !dbg !7827

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %const_val_bits, metadata !7828, metadata !1692), !dbg !7830
  %17 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !7831
  %floating = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %17, i32 0, i32 2, !dbg !7832
  %18 = load i32, i32* %floating, align 8, !dbg !7832
  %tobool7 = icmp ne i32 %18, 0, !dbg !7831
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !7831

cond.true:                                        ; preds = %if.then6
  br label %cond.end, !dbg !7833

cond.false:                                       ; preds = %if.then6
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7835
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 143, !dbg !7837
  %20 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !7837
  br label %cond.end, !dbg !7838

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 24, %cond.true ], [ %20, %cond.false ], !dbg !7839
  store i32 %cond, i32* %const_val_bits, align 4, !dbg !7841
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !7842
  %22 = load i32, i32* %const_val_bits, align 4, !dbg !7843
  %call8 = call i32 @get_sbits_long(%struct.GetBitContext* %21, i32 %22), !dbg !7844
  %23 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7845
  %raw_samples9 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %23, i32 0, i32 12, !dbg !7846
  %24 = load i32*, i32** %raw_samples9, align 8, !dbg !7846
  store i32 %call8, i32* %24, align 4, !dbg !7847
  br label %if.end10, !dbg !7848

if.end10:                                         ; preds = %cond.end, %if.end
  %25 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !7849
  %const_block11 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %25, i32 0, i32 2, !dbg !7850
  %26 = load i32*, i32** %const_block11, align 8, !dbg !7850
  store i32 1, i32* %26, align 4, !dbg !7851
  store i32 0, i32* %retval, align 4, !dbg !7852
  br label %return, !dbg !7852

return:                                           ; preds = %if.end10, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !7853
  ret i32 %27, !dbg !7853
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_rice(%struct.GetBitContext* %gb, i32 %k) #1 !dbg !7854 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %k.addr = alloca i32, align 4
  %max = alloca i32, align 4
  %q = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7857, metadata !1692), !dbg !7858
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !7859, metadata !1692), !dbg !7860
  call void @llvm.dbg.declare(metadata i32* %max, metadata !7861, metadata !1692), !dbg !7862
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7863
  %call = call i32 @get_bits_left(%struct.GetBitContext* %0), !dbg !7864
  %1 = load i32, i32* %k.addr, align 4, !dbg !7865
  %sub = sub i32 %call, %1, !dbg !7866
  store i32 %sub, i32* %max, align 4, !dbg !7862
  call void @llvm.dbg.declare(metadata i32* %q, metadata !7867, metadata !1692), !dbg !7868
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7869
  %3 = load i32, i32* %max, align 4, !dbg !7870
  %call1 = call i32 @get_unary(%struct.GetBitContext* %2, i32 0, i32 %3), !dbg !7871
  store i32 %call1, i32* %q, align 4, !dbg !7868
  call void @llvm.dbg.declare(metadata i32* %r, metadata !7872, metadata !1692), !dbg !7873
  %4 = load i32, i32* %k.addr, align 4, !dbg !7874
  %tobool = icmp ne i32 %4, 0, !dbg !7874
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7874

cond.true:                                        ; preds = %entry
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7875
  %call2 = call i32 @get_bits1(%struct.GetBitContext* %5), !dbg !7877
  br label %cond.end, !dbg !7878

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %q, align 4, !dbg !7879
  %and = and i32 %6, 1, !dbg !7881
  %tobool3 = icmp ne i32 %and, 0, !dbg !7882
  %lnot = xor i1 %tobool3, true, !dbg !7882
  %lnot.ext = zext i1 %lnot to i32, !dbg !7882
  br label %cond.end, !dbg !7883

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !7884
  store i32 %cond, i32* %r, align 4, !dbg !7886
  %7 = load i32, i32* %k.addr, align 4, !dbg !7887
  %cmp = icmp ugt i32 %7, 1, !dbg !7889
  br i1 %cmp, label %if.then, label %if.else, !dbg !7890

if.then:                                          ; preds = %cond.end
  %8 = load i32, i32* %k.addr, align 4, !dbg !7891
  %sub4 = sub i32 %8, 1, !dbg !7893
  %9 = load i32, i32* %q, align 4, !dbg !7894
  %shl = shl i32 %9, %sub4, !dbg !7894
  store i32 %shl, i32* %q, align 4, !dbg !7894
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7895
  %11 = load i32, i32* %k.addr, align 4, !dbg !7896
  %sub5 = sub i32 %11, 1, !dbg !7897
  %call6 = call i32 @get_bits_long(%struct.GetBitContext* %10, i32 %sub5), !dbg !7898
  %12 = load i32, i32* %q, align 4, !dbg !7899
  %add = add i32 %12, %call6, !dbg !7899
  store i32 %add, i32* %q, align 4, !dbg !7899
  br label %if.end9, !dbg !7900

if.else:                                          ; preds = %cond.end
  %13 = load i32, i32* %k.addr, align 4, !dbg !7901
  %tobool7 = icmp ne i32 %13, 0, !dbg !7901
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !7904

if.then8:                                         ; preds = %if.else
  %14 = load i32, i32* %q, align 4, !dbg !7905
  %shr = ashr i32 %14, 1, !dbg !7905
  store i32 %shr, i32* %q, align 4, !dbg !7905
  br label %if.end, !dbg !7907

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %15 = load i32, i32* %r, align 4, !dbg !7908
  %tobool10 = icmp ne i32 %15, 0, !dbg !7908
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !7908

cond.true11:                                      ; preds = %if.end9
  %16 = load i32, i32* %q, align 4, !dbg !7909
  br label %cond.end13, !dbg !7910

cond.false12:                                     ; preds = %if.end9
  %17 = load i32, i32* %q, align 4, !dbg !7911
  %neg = xor i32 %17, -1, !dbg !7912
  br label %cond.end13, !dbg !7913

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i32 [ %16, %cond.true11 ], [ %neg, %cond.false12 ], !dbg !7914
  ret i32 %cond14, !dbg !7915
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_unary(%struct.GetBitContext* %gb, i32 %stop, i32 %len) #5 !dbg !7916 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %stop.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7920, metadata !1692), !dbg !7921
  store i32 %stop, i32* %stop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stop.addr, metadata !7922, metadata !1692), !dbg !7923
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !7924, metadata !1692), !dbg !7925
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7926, metadata !1692), !dbg !7927
  store i32 0, i32* %i, align 4, !dbg !7928
  br label %for.cond, !dbg !7930

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7931
  %1 = load i32, i32* %len.addr, align 4, !dbg !7934
  %cmp = icmp slt i32 %0, %1, !dbg !7935
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7936

land.rhs:                                         ; preds = %for.cond
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7937
  %call = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !7939
  %3 = load i32, i32* %stop.addr, align 4, !dbg !7940
  %cmp1 = icmp ne i32 %call, %3, !dbg !7941
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %for.body, label %for.end, !dbg !7942

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !7944

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !7946
  %inc = add nsw i32 %5, 1, !dbg !7946
  store i32 %inc, i32* %i, align 4, !dbg !7946
  br label %for.cond, !dbg !7948, !llvm.loop !7949

for.end:                                          ; preds = %land.end
  %6 = load i32, i32* %i, align 4, !dbg !7951
  ret i32 %6, !dbg !7952
}

declare void @ff_bgmc_decode_init(%struct.GetBitContext*, i32*, i32*, i32*) #3

declare void @ff_bgmc_decode(%struct.GetBitContext*, i32, i32*, i32, i32, i32*, i32*, i32*, i8*, i32*) #3

declare void @ff_bgmc_decode_end(%struct.GetBitContext*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_sbits_long(%struct.GetBitContext* %s, i32 %n) #5 !dbg !7953 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7954, metadata !1692), !dbg !7955
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7956, metadata !1692), !dbg !7957
  %0 = load i32, i32* %n.addr, align 4, !dbg !7958
  %tobool = icmp ne i32 %0, 0, !dbg !7958
  br i1 %tobool, label %if.end, label %if.then, !dbg !7960

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7961
  br label %return, !dbg !7961

if.end:                                           ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7962
  %2 = load i32, i32* %n.addr, align 4, !dbg !7963
  %call = call i32 @get_bits_long(%struct.GetBitContext* %1, i32 %2), !dbg !7964
  %3 = load i32, i32* %n.addr, align 4, !dbg !7965
  %call1 = call i32 @sign_extend(i32 %call, i32 %3) #2, !dbg !7966
  store i32 %call1, i32* %retval, align 4, !dbg !7968
  br label %return, !dbg !7968

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !7969
  ret i32 %4, !dbg !7969
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @sign_extend(i32 %val, i32 %bits) #7 !dbg !7970 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %v = alloca %union.anon, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7974, metadata !1692), !dbg !7975
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !7976, metadata !1692), !dbg !7977
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !7978, metadata !1692), !dbg !7979
  %0 = load i32, i32* %bits.addr, align 4, !dbg !7980
  %conv = zext i32 %0 to i64, !dbg !7980
  %sub = sub i64 32, %conv, !dbg !7981
  %conv1 = trunc i64 %sub to i32, !dbg !7982
  store i32 %conv1, i32* %shift, align 4, !dbg !7979
  call void @llvm.dbg.declare(metadata %union.anon* %v, metadata !7983, metadata !1692), !dbg !7988
  %u = bitcast %union.anon* %v to i32*, !dbg !7989
  %1 = load i32, i32* %val.addr, align 4, !dbg !7990
  %2 = load i32, i32* %shift, align 4, !dbg !7991
  %shl = shl i32 %1, %2, !dbg !7992
  store i32 %shl, i32* %u, align 4, !dbg !7989
  %s = bitcast %union.anon* %v to i32*, !dbg !7993
  %3 = load i32, i32* %s, align 4, !dbg !7993
  %4 = load i32, i32* %shift, align 4, !dbg !7994
  %shr = ashr i32 %3, %4, !dbg !7995
  ret i32 %shr, !dbg !7996
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @als_weighting(%struct.GetBitContext* %gb, i32 %k, i32 %off) #5 !dbg !7997 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3692, metadata !1692), !dbg !7998
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !3698, metadata !1692), !dbg !8001
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !3700, metadata !1692), !dbg !8002
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %k.addr = alloca i32, align 4
  %off.addr = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8003, metadata !1692), !dbg !8004
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !8005, metadata !1692), !dbg !8006
  store i32 %off, i32* %off.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %off.addr, metadata !8007, metadata !1692), !dbg !8008
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !8009, metadata !1692), !dbg !8010
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8011
  %1 = load i32, i32* %k.addr, align 4, !dbg !8012
  %call = call i32 @decode_rice(%struct.GetBitContext* %0, i32 %1), !dbg !8013
  %2 = load i32, i32* %off.addr, align 4, !dbg !8014
  %add = add nsw i32 %call, %2, !dbg !8015
  store i32 %add, i32* %a.addr.i, align 4, !dbg !8016
  store i32 0, i32* %amin.addr.i, align 4, !dbg !8016
  store i32 31, i32* %amax.addr.i, align 4, !dbg !8016
  %3 = load i32, i32* %a.addr.i, align 4, !dbg !8017
  %4 = load i32, i32* %amin.addr.i, align 4, !dbg !8018
  %cmp.i = icmp slt i32 %3, %4, !dbg !8019
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !8020

if.then.i:                                        ; preds = %entry
  %5 = load i32, i32* %amin.addr.i, align 4, !dbg !8021
  store i32 %5, i32* %retval.i, align 4, !dbg !8022
  br label %av_clip_c.exit, !dbg !8022

if.else.i:                                        ; preds = %entry
  %6 = load i32, i32* %a.addr.i, align 4, !dbg !8023
  %7 = load i32, i32* %amax.addr.i, align 4, !dbg !8024
  %cmp1.i = icmp sgt i32 %6, %7, !dbg !8025
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !8026

if.then2.i:                                       ; preds = %if.else.i
  %8 = load i32, i32* %amax.addr.i, align 4, !dbg !8027
  store i32 %8, i32* %retval.i, align 4, !dbg !8028
  br label %av_clip_c.exit, !dbg !8028

if.else3.i:                                       ; preds = %if.else.i
  %9 = load i32, i32* %a.addr.i, align 4, !dbg !8029
  store i32 %9, i32* %retval.i, align 4, !dbg !8030
  br label %av_clip_c.exit, !dbg !8030

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %10 = load i32, i32* %retval.i, align 4, !dbg !8031
  store i32 %10, i32* %idx, align 4, !dbg !8010
  %11 = load i32, i32* %idx, align 4, !dbg !8032
  %idxprom = sext i32 %11 to i64, !dbg !8033
  %arrayidx = getelementptr inbounds [32 x i16], [32 x i16]* @mcc_weightings, i64 0, i64 %idxprom, !dbg !8033
  %12 = load i16, i16* %arrayidx, align 2, !dbg !8033
  %conv = sext i16 %12 to i32, !dbg !8033
  ret i32 %conv, !dbg !8034
}

; Function Attrs: nounwind uwtable
define internal void @decode_const_block_data(%struct.ALSDecContext* %ctx, %struct.ALSBlockData* %bd) #1 !dbg !8035 {
entry:
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %bd.addr = alloca %struct.ALSBlockData*, align 8
  %smp = alloca i32, align 4
  %val = alloca i32, align 4
  %dst = alloca i32*, align 8
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !8038, metadata !1692), !dbg !8039
  store %struct.ALSBlockData* %bd, %struct.ALSBlockData** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSBlockData** %bd.addr, metadata !8040, metadata !1692), !dbg !8041
  call void @llvm.dbg.declare(metadata i32* %smp, metadata !8042, metadata !1692), !dbg !8043
  %0 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8044
  %block_length = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %0, i32 0, i32 0, !dbg !8045
  %1 = load i32, i32* %block_length, align 8, !dbg !8045
  %sub = sub i32 %1, 1, !dbg !8046
  store i32 %sub, i32* %smp, align 4, !dbg !8043
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8047, metadata !1692), !dbg !8048
  %2 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8049
  %raw_samples = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %2, i32 0, i32 12, !dbg !8050
  %3 = load i32*, i32** %raw_samples, align 8, !dbg !8050
  %4 = load i32, i32* %3, align 4, !dbg !8051
  store i32 %4, i32* %val, align 4, !dbg !8048
  call void @llvm.dbg.declare(metadata i32** %dst, metadata !8052, metadata !1692), !dbg !8053
  %5 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8054
  %raw_samples1 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %5, i32 0, i32 12, !dbg !8055
  %6 = load i32*, i32** %raw_samples1, align 8, !dbg !8055
  %add.ptr = getelementptr inbounds i32, i32* %6, i64 1, !dbg !8056
  store i32* %add.ptr, i32** %dst, align 8, !dbg !8053
  br label %for.cond, !dbg !8057

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %smp, align 4, !dbg !8058
  %tobool = icmp ne i32 %7, 0, !dbg !8062
  br i1 %tobool, label %for.body, label %for.end, !dbg !8062

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %val, align 4, !dbg !8063
  %9 = load i32*, i32** %dst, align 8, !dbg !8064
  %incdec.ptr = getelementptr inbounds i32, i32* %9, i32 1, !dbg !8064
  store i32* %incdec.ptr, i32** %dst, align 8, !dbg !8064
  store i32 %8, i32* %9, align 4, !dbg !8065
  br label %for.inc, !dbg !8066

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %smp, align 4, !dbg !8067
  %dec = add nsw i32 %10, -1, !dbg !8067
  store i32 %dec, i32* %smp, align 4, !dbg !8067
  br label %for.cond, !dbg !8069, !llvm.loop !8070

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8071
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_var_block_data(%struct.ALSDecContext* %ctx, %struct.ALSBlockData* %bd) #1 !dbg !8072 {
entry:
  %ctx.addr = alloca %struct.ALSDecContext*, align 8
  %bd.addr = alloca %struct.ALSBlockData*, align 8
  %sconf = alloca %struct.ALSSpecificConfig*, align 8
  %block_length = alloca i32, align 4
  %smp = alloca i32, align 4
  %k = alloca i32, align 4
  %opt_order = alloca i32, align 4
  %sb = alloca i32, align 4
  %y = alloca i64, align 8
  %quant_cof = alloca i32*, align 8
  %lpc_cof = alloca i32*, align 8
  %raw_samples = alloca i32*, align 8
  %raw_samples_end = alloca i32*, align 8
  %lpc_cof_reversed = alloca i32*, align 8
  %ltp_smp = alloca i32, align 4
  %center = alloca i32, align 4
  %begin = alloca i32, align 4
  %end = alloca i32, align 4
  %tab = alloca i32, align 4
  %base = alloca i32, align 4
  %left = alloca i32*, align 8
  %right = alloca i32*, align 8
  store %struct.ALSDecContext* %ctx, %struct.ALSDecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSDecContext** %ctx.addr, metadata !8073, metadata !1692), !dbg !8074
  store %struct.ALSBlockData* %bd, %struct.ALSBlockData** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ALSBlockData** %bd.addr, metadata !8075, metadata !1692), !dbg !8076
  call void @llvm.dbg.declare(metadata %struct.ALSSpecificConfig** %sconf, metadata !8077, metadata !1692), !dbg !8078
  %0 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !8079
  %sconf1 = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %0, i32 0, i32 1, !dbg !8080
  store %struct.ALSSpecificConfig* %sconf1, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !8078
  call void @llvm.dbg.declare(metadata i32* %block_length, metadata !8081, metadata !1692), !dbg !8082
  %1 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8083
  %block_length2 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %1, i32 0, i32 0, !dbg !8084
  %2 = load i32, i32* %block_length2, align 8, !dbg !8084
  store i32 %2, i32* %block_length, align 4, !dbg !8082
  call void @llvm.dbg.declare(metadata i32* %smp, metadata !8085, metadata !1692), !dbg !8086
  store i32 0, i32* %smp, align 4, !dbg !8086
  call void @llvm.dbg.declare(metadata i32* %k, metadata !8087, metadata !1692), !dbg !8088
  call void @llvm.dbg.declare(metadata i32* %opt_order, metadata !8089, metadata !1692), !dbg !8090
  %3 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8091
  %opt_order3 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %3, i32 0, i32 5, !dbg !8092
  %4 = load i32*, i32** %opt_order3, align 8, !dbg !8092
  %5 = load i32, i32* %4, align 4, !dbg !8093
  store i32 %5, i32* %opt_order, align 4, !dbg !8090
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !8094, metadata !1692), !dbg !8095
  call void @llvm.dbg.declare(metadata i64* %y, metadata !8096, metadata !1692), !dbg !8097
  call void @llvm.dbg.declare(metadata i32** %quant_cof, metadata !8098, metadata !1692), !dbg !8099
  %6 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8100
  %quant_cof4 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %6, i32 0, i32 10, !dbg !8101
  %7 = load i32*, i32** %quant_cof4, align 8, !dbg !8101
  store i32* %7, i32** %quant_cof, align 8, !dbg !8099
  call void @llvm.dbg.declare(metadata i32** %lpc_cof, metadata !8102, metadata !1692), !dbg !8103
  %8 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8104
  %lpc_cof5 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %8, i32 0, i32 11, !dbg !8105
  %9 = load i32*, i32** %lpc_cof5, align 8, !dbg !8105
  store i32* %9, i32** %lpc_cof, align 8, !dbg !8103
  call void @llvm.dbg.declare(metadata i32** %raw_samples, metadata !8106, metadata !1692), !dbg !8107
  %10 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8108
  %raw_samples6 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %10, i32 0, i32 12, !dbg !8109
  %11 = load i32*, i32** %raw_samples6, align 8, !dbg !8109
  store i32* %11, i32** %raw_samples, align 8, !dbg !8107
  call void @llvm.dbg.declare(metadata i32** %raw_samples_end, metadata !8110, metadata !1692), !dbg !8111
  %12 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8112
  %raw_samples7 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %12, i32 0, i32 12, !dbg !8113
  %13 = load i32*, i32** %raw_samples7, align 8, !dbg !8113
  %14 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8114
  %block_length8 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %14, i32 0, i32 0, !dbg !8115
  %15 = load i32, i32* %block_length8, align 8, !dbg !8115
  %idx.ext = zext i32 %15 to i64, !dbg !8116
  %add.ptr = getelementptr inbounds i32, i32* %13, i64 %idx.ext, !dbg !8116
  store i32* %add.ptr, i32** %raw_samples_end, align 8, !dbg !8111
  call void @llvm.dbg.declare(metadata i32** %lpc_cof_reversed, metadata !8117, metadata !1692), !dbg !8118
  %16 = load %struct.ALSDecContext*, %struct.ALSDecContext** %ctx.addr, align 8, !dbg !8119
  %lpc_cof_reversed_buffer = getelementptr inbounds %struct.ALSDecContext, %struct.ALSDecContext* %16, i32 0, i32 28, !dbg !8120
  %17 = load i32*, i32** %lpc_cof_reversed_buffer, align 8, !dbg !8120
  store i32* %17, i32** %lpc_cof_reversed, align 8, !dbg !8118
  %18 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8121
  %use_ltp = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %18, i32 0, i32 7, !dbg !8123
  %19 = load i32*, i32** %use_ltp, align 8, !dbg !8123
  %20 = load i32, i32* %19, align 4, !dbg !8124
  %tobool = icmp ne i32 %20, 0, !dbg !8124
  br i1 %tobool, label %if.then, label %if.end, !dbg !8125

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ltp_smp, metadata !8126, metadata !1692), !dbg !8128
  %21 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8129
  %ltp_lag = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %21, i32 0, i32 8, !dbg !8131
  %22 = load i32*, i32** %ltp_lag, align 8, !dbg !8131
  %23 = load i32, i32* %22, align 4, !dbg !8132
  %sub = sub nsw i32 %23, 2, !dbg !8133
  %cmp = icmp sgt i32 %sub, 0, !dbg !8134
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8135

cond.true:                                        ; preds = %if.then
  %24 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8136
  %ltp_lag9 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %24, i32 0, i32 8, !dbg !8138
  %25 = load i32*, i32** %ltp_lag9, align 8, !dbg !8138
  %26 = load i32, i32* %25, align 4, !dbg !8139
  %sub10 = sub nsw i32 %26, 2, !dbg !8140
  br label %cond.end, !dbg !8141

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !8142

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub10, %cond.true ], [ 0, %cond.false ], !dbg !8144
  store i32 %cond, i32* %ltp_smp, align 4, !dbg !8146
  br label %for.cond, !dbg !8147

for.cond:                                         ; preds = %for.inc36, %cond.end
  %27 = load i32, i32* %ltp_smp, align 4, !dbg !8148
  %28 = load i32, i32* %block_length, align 4, !dbg !8151
  %cmp11 = icmp ult i32 %27, %28, !dbg !8152
  br i1 %cmp11, label %for.body, label %for.end38, !dbg !8153

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %center, metadata !8154, metadata !1692), !dbg !8156
  %29 = load i32, i32* %ltp_smp, align 4, !dbg !8157
  %30 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8158
  %ltp_lag12 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %30, i32 0, i32 8, !dbg !8159
  %31 = load i32*, i32** %ltp_lag12, align 8, !dbg !8159
  %32 = load i32, i32* %31, align 4, !dbg !8160
  %sub13 = sub nsw i32 %29, %32, !dbg !8161
  store i32 %sub13, i32* %center, align 4, !dbg !8156
  call void @llvm.dbg.declare(metadata i32* %begin, metadata !8162, metadata !1692), !dbg !8163
  %33 = load i32, i32* %center, align 4, !dbg !8164
  %sub14 = sub nsw i32 %33, 2, !dbg !8165
  %cmp15 = icmp sgt i32 0, %sub14, !dbg !8166
  br i1 %cmp15, label %cond.true16, label %cond.false17, !dbg !8167

cond.true16:                                      ; preds = %for.body
  br label %cond.end19, !dbg !8168

cond.false17:                                     ; preds = %for.body
  %34 = load i32, i32* %center, align 4, !dbg !8170
  %sub18 = sub nsw i32 %34, 2, !dbg !8172
  br label %cond.end19, !dbg !8173

cond.end19:                                       ; preds = %cond.false17, %cond.true16
  %cond20 = phi i32 [ 0, %cond.true16 ], [ %sub18, %cond.false17 ], !dbg !8174
  store i32 %cond20, i32* %begin, align 4, !dbg !8176
  call void @llvm.dbg.declare(metadata i32* %end, metadata !8177, metadata !1692), !dbg !8178
  %35 = load i32, i32* %center, align 4, !dbg !8179
  %add = add nsw i32 %35, 3, !dbg !8180
  store i32 %add, i32* %end, align 4, !dbg !8178
  call void @llvm.dbg.declare(metadata i32* %tab, metadata !8181, metadata !1692), !dbg !8182
  %36 = load i32, i32* %end, align 4, !dbg !8183
  %37 = load i32, i32* %begin, align 4, !dbg !8184
  %sub21 = sub nsw i32 %36, %37, !dbg !8185
  %sub22 = sub nsw i32 5, %sub21, !dbg !8186
  store i32 %sub22, i32* %tab, align 4, !dbg !8182
  call void @llvm.dbg.declare(metadata i32* %base, metadata !8187, metadata !1692), !dbg !8188
  store i64 64, i64* %y, align 8, !dbg !8189
  %38 = load i32, i32* %begin, align 4, !dbg !8190
  store i32 %38, i32* %base, align 4, !dbg !8192
  br label %for.cond23, !dbg !8193

for.cond23:                                       ; preds = %for.inc, %cond.end19
  %39 = load i32, i32* %base, align 4, !dbg !8194
  %40 = load i32, i32* %end, align 4, !dbg !8197
  %cmp24 = icmp slt i32 %39, %40, !dbg !8198
  br i1 %cmp24, label %for.body25, label %for.end, !dbg !8199

for.body25:                                       ; preds = %for.cond23
  %41 = load i32, i32* %tab, align 4, !dbg !8200
  %idxprom = sext i32 %41 to i64, !dbg !8201
  %42 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8201
  %ltp_gain = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %42, i32 0, i32 9, !dbg !8202
  %43 = load i32*, i32** %ltp_gain, align 8, !dbg !8202
  %arrayidx = getelementptr inbounds i32, i32* %43, i64 %idxprom, !dbg !8201
  %44 = load i32, i32* %arrayidx, align 4, !dbg !8201
  %conv = sext i32 %44 to i64, !dbg !8203
  %45 = load i32, i32* %base, align 4, !dbg !8204
  %idxprom26 = sext i32 %45 to i64, !dbg !8205
  %46 = load i32*, i32** %raw_samples, align 8, !dbg !8205
  %arrayidx27 = getelementptr inbounds i32, i32* %46, i64 %idxprom26, !dbg !8205
  %47 = load i32, i32* %arrayidx27, align 4, !dbg !8205
  %conv28 = sext i32 %47 to i64, !dbg !8206
  %mul = mul nsw i64 %conv, %conv28, !dbg !8207
  %48 = load i64, i64* %y, align 8, !dbg !8208
  %add29 = add nsw i64 %48, %mul, !dbg !8208
  store i64 %add29, i64* %y, align 8, !dbg !8208
  br label %for.inc, !dbg !8209

for.inc:                                          ; preds = %for.body25
  %49 = load i32, i32* %base, align 4, !dbg !8210
  %inc = add nsw i32 %49, 1, !dbg !8210
  store i32 %inc, i32* %base, align 4, !dbg !8210
  %50 = load i32, i32* %tab, align 4, !dbg !8212
  %inc30 = add nsw i32 %50, 1, !dbg !8212
  store i32 %inc30, i32* %tab, align 4, !dbg !8212
  br label %for.cond23, !dbg !8213, !llvm.loop !8214

for.end:                                          ; preds = %for.cond23
  %51 = load i64, i64* %y, align 8, !dbg !8216
  %shr = ashr i64 %51, 7, !dbg !8217
  %52 = load i32, i32* %ltp_smp, align 4, !dbg !8218
  %idxprom31 = sext i32 %52 to i64, !dbg !8219
  %53 = load i32*, i32** %raw_samples, align 8, !dbg !8219
  %arrayidx32 = getelementptr inbounds i32, i32* %53, i64 %idxprom31, !dbg !8219
  %54 = load i32, i32* %arrayidx32, align 4, !dbg !8220
  %conv33 = sext i32 %54 to i64, !dbg !8220
  %add34 = add nsw i64 %conv33, %shr, !dbg !8220
  %conv35 = trunc i64 %add34 to i32, !dbg !8220
  store i32 %conv35, i32* %arrayidx32, align 4, !dbg !8220
  br label %for.inc36, !dbg !8221

for.inc36:                                        ; preds = %for.end
  %55 = load i32, i32* %ltp_smp, align 4, !dbg !8222
  %inc37 = add nsw i32 %55, 1, !dbg !8222
  store i32 %inc37, i32* %ltp_smp, align 4, !dbg !8222
  br label %for.cond, !dbg !8224, !llvm.loop !8225

for.end38:                                        ; preds = %for.cond
  br label %if.end, !dbg !8227

if.end:                                           ; preds = %for.end38, %entry
  %56 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8228
  %ra_block = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %56, i32 0, i32 1, !dbg !8230
  %57 = load i32, i32* %ra_block, align 4, !dbg !8230
  %tobool39 = icmp ne i32 %57, 0, !dbg !8228
  br i1 %tobool39, label %if.then40, label %if.else, !dbg !8231

if.then40:                                        ; preds = %if.end
  store i32 0, i32* %smp, align 4, !dbg !8232
  br label %for.cond41, !dbg !8235

for.cond41:                                       ; preds = %for.inc72, %if.then40
  %58 = load i32, i32* %smp, align 4, !dbg !8236
  %59 = load i32, i32* %opt_order, align 4, !dbg !8239
  %60 = load i32, i32* %block_length, align 4, !dbg !8240
  %cmp42 = icmp ugt i32 %59, %60, !dbg !8241
  br i1 %cmp42, label %cond.true44, label %cond.false45, !dbg !8242

cond.true44:                                      ; preds = %for.cond41
  %61 = load i32, i32* %block_length, align 4, !dbg !8243
  br label %cond.end46, !dbg !8245

cond.false45:                                     ; preds = %for.cond41
  %62 = load i32, i32* %opt_order, align 4, !dbg !8246
  br label %cond.end46, !dbg !8248

cond.end46:                                       ; preds = %cond.false45, %cond.true44
  %cond47 = phi i32 [ %61, %cond.true44 ], [ %62, %cond.false45 ], !dbg !8249
  %cmp48 = icmp ult i32 %58, %cond47, !dbg !8251
  br i1 %cmp48, label %for.body50, label %for.end74, !dbg !8252

for.body50:                                       ; preds = %cond.end46
  store i64 524288, i64* %y, align 8, !dbg !8253
  store i32 0, i32* %sb, align 4, !dbg !8255
  br label %for.cond51, !dbg !8257

for.cond51:                                       ; preds = %for.inc65, %for.body50
  %63 = load i32, i32* %sb, align 4, !dbg !8258
  %64 = load i32, i32* %smp, align 4, !dbg !8261
  %cmp52 = icmp ult i32 %63, %64, !dbg !8262
  br i1 %cmp52, label %for.body54, label %for.end67, !dbg !8263

for.body54:                                       ; preds = %for.cond51
  %65 = load i32, i32* %sb, align 4, !dbg !8264
  %idxprom55 = sext i32 %65 to i64, !dbg !8265
  %66 = load i32*, i32** %lpc_cof, align 8, !dbg !8265
  %arrayidx56 = getelementptr inbounds i32, i32* %66, i64 %idxprom55, !dbg !8265
  %67 = load i32, i32* %arrayidx56, align 4, !dbg !8265
  %conv57 = sext i32 %67 to i64, !dbg !8266
  %68 = load i32, i32* %sb, align 4, !dbg !8267
  %add58 = add nsw i32 %68, 1, !dbg !8268
  %sub59 = sub nsw i32 0, %add58, !dbg !8269
  %idxprom60 = sext i32 %sub59 to i64, !dbg !8270
  %69 = load i32*, i32** %raw_samples, align 8, !dbg !8270
  %arrayidx61 = getelementptr inbounds i32, i32* %69, i64 %idxprom60, !dbg !8270
  %70 = load i32, i32* %arrayidx61, align 4, !dbg !8270
  %conv62 = sext i32 %70 to i64, !dbg !8271
  %mul63 = mul nsw i64 %conv57, %conv62, !dbg !8272
  %71 = load i64, i64* %y, align 8, !dbg !8273
  %add64 = add nsw i64 %71, %mul63, !dbg !8273
  store i64 %add64, i64* %y, align 8, !dbg !8273
  br label %for.inc65, !dbg !8274

for.inc65:                                        ; preds = %for.body54
  %72 = load i32, i32* %sb, align 4, !dbg !8275
  %inc66 = add nsw i32 %72, 1, !dbg !8275
  store i32 %inc66, i32* %sb, align 4, !dbg !8275
  br label %for.cond51, !dbg !8277, !llvm.loop !8278

for.end67:                                        ; preds = %for.cond51
  %73 = load i64, i64* %y, align 8, !dbg !8280
  %shr68 = ashr i64 %73, 20, !dbg !8281
  %74 = load i32*, i32** %raw_samples, align 8, !dbg !8282
  %incdec.ptr = getelementptr inbounds i32, i32* %74, i32 1, !dbg !8282
  store i32* %incdec.ptr, i32** %raw_samples, align 8, !dbg !8282
  %75 = load i32, i32* %74, align 4, !dbg !8283
  %conv69 = sext i32 %75 to i64, !dbg !8283
  %sub70 = sub nsw i64 %conv69, %shr68, !dbg !8283
  %conv71 = trunc i64 %sub70 to i32, !dbg !8283
  store i32 %conv71, i32* %74, align 4, !dbg !8283
  %76 = load i32, i32* %smp, align 4, !dbg !8284
  %77 = load i32*, i32** %quant_cof, align 8, !dbg !8285
  %78 = load i32*, i32** %lpc_cof, align 8, !dbg !8286
  call void @parcor_to_lpc(i32 %76, i32* %77, i32* %78), !dbg !8287
  br label %for.inc72, !dbg !8288

for.inc72:                                        ; preds = %for.end67
  %79 = load i32, i32* %smp, align 4, !dbg !8289
  %inc73 = add i32 %79, 1, !dbg !8289
  store i32 %inc73, i32* %smp, align 4, !dbg !8289
  br label %for.cond41, !dbg !8291, !llvm.loop !8292

for.end74:                                        ; preds = %cond.end46
  br label %if.end133, !dbg !8294

if.else:                                          ; preds = %if.end
  store i32 0, i32* %k, align 4, !dbg !8295
  br label %for.cond75, !dbg !8298

for.cond75:                                       ; preds = %for.inc79, %if.else
  %80 = load i32, i32* %k, align 4, !dbg !8299
  %81 = load i32, i32* %opt_order, align 4, !dbg !8302
  %cmp76 = icmp ult i32 %80, %81, !dbg !8303
  br i1 %cmp76, label %for.body78, label %for.end81, !dbg !8304

for.body78:                                       ; preds = %for.cond75
  %82 = load i32, i32* %k, align 4, !dbg !8305
  %83 = load i32*, i32** %quant_cof, align 8, !dbg !8306
  %84 = load i32*, i32** %lpc_cof, align 8, !dbg !8307
  call void @parcor_to_lpc(i32 %82, i32* %83, i32* %84), !dbg !8308
  br label %for.inc79, !dbg !8308

for.inc79:                                        ; preds = %for.body78
  %85 = load i32, i32* %k, align 4, !dbg !8309
  %inc80 = add i32 %85, 1, !dbg !8309
  store i32 %inc80, i32* %k, align 4, !dbg !8309
  br label %for.cond75, !dbg !8311, !llvm.loop !8312

for.end81:                                        ; preds = %for.cond75
  %86 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8314
  %store_prev_samples = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %86, i32 0, i32 6, !dbg !8316
  %87 = load i32*, i32** %store_prev_samples, align 8, !dbg !8316
  %88 = load i32, i32* %87, align 4, !dbg !8317
  %tobool82 = icmp ne i32 %88, 0, !dbg !8317
  br i1 %tobool82, label %if.then83, label %if.end89, !dbg !8318

if.then83:                                        ; preds = %for.end81
  %89 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8319
  %prev_raw_samples = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %89, i32 0, i32 13, !dbg !8320
  %90 = load i32*, i32** %prev_raw_samples, align 8, !dbg !8320
  %91 = bitcast i32* %90 to i8*, !dbg !8321
  %92 = load i32*, i32** %raw_samples, align 8, !dbg !8322
  %93 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !8323
  %max_order = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %93, i32 0, i32 10, !dbg !8324
  %94 = load i32, i32* %max_order, align 8, !dbg !8324
  %idx.ext84 = sext i32 %94 to i64, !dbg !8325
  %idx.neg = sub i64 0, %idx.ext84, !dbg !8325
  %add.ptr85 = getelementptr inbounds i32, i32* %92, i64 %idx.neg, !dbg !8325
  %95 = bitcast i32* %add.ptr85 to i8*, !dbg !8321
  %96 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !8326
  %max_order86 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %96, i32 0, i32 10, !dbg !8327
  %97 = load i32, i32* %max_order86, align 8, !dbg !8327
  %conv87 = sext i32 %97 to i64, !dbg !8326
  %mul88 = mul i64 4, %conv87, !dbg !8328
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %95, i64 %mul88, i32 4, i1 false), !dbg !8321
  br label %if.end89, !dbg !8321

if.end89:                                         ; preds = %if.then83, %for.end81
  %98 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8329
  %js_blocks = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %98, i32 0, i32 3, !dbg !8331
  %99 = load i32, i32* %js_blocks, align 8, !dbg !8331
  %tobool90 = icmp ne i32 %99, 0, !dbg !8329
  br i1 %tobool90, label %land.lhs.true, label %if.end116, !dbg !8332

land.lhs.true:                                    ; preds = %if.end89
  %100 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8333
  %raw_other = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %100, i32 0, i32 14, !dbg !8335
  %101 = load i32*, i32** %raw_other, align 8, !dbg !8335
  %tobool91 = icmp ne i32* %101, null, !dbg !8333
  br i1 %tobool91, label %if.then92, label %if.end116, !dbg !8336

if.then92:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32** %left, metadata !8337, metadata !1692), !dbg !8339
  call void @llvm.dbg.declare(metadata i32** %right, metadata !8340, metadata !1692), !dbg !8341
  %102 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8342
  %raw_other93 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %102, i32 0, i32 14, !dbg !8344
  %103 = load i32*, i32** %raw_other93, align 8, !dbg !8344
  %104 = load i32*, i32** %raw_samples, align 8, !dbg !8345
  %cmp94 = icmp ugt i32* %103, %104, !dbg !8346
  br i1 %cmp94, label %if.then96, label %if.else98, !dbg !8347

if.then96:                                        ; preds = %if.then92
  %105 = load i32*, i32** %raw_samples, align 8, !dbg !8348
  store i32* %105, i32** %left, align 8, !dbg !8350
  %106 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8351
  %raw_other97 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %106, i32 0, i32 14, !dbg !8352
  %107 = load i32*, i32** %raw_other97, align 8, !dbg !8352
  store i32* %107, i32** %right, align 8, !dbg !8353
  br label %if.end100, !dbg !8354

if.else98:                                        ; preds = %if.then92
  %108 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8355
  %raw_other99 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %108, i32 0, i32 14, !dbg !8357
  %109 = load i32*, i32** %raw_other99, align 8, !dbg !8357
  store i32* %109, i32** %left, align 8, !dbg !8358
  %110 = load i32*, i32** %raw_samples, align 8, !dbg !8359
  store i32* %110, i32** %right, align 8, !dbg !8360
  br label %if.end100

if.end100:                                        ; preds = %if.else98, %if.then96
  store i32 -1, i32* %sb, align 4, !dbg !8361
  br label %for.cond101, !dbg !8363

for.cond101:                                      ; preds = %for.inc114, %if.end100
  %111 = load i32, i32* %sb, align 4, !dbg !8364
  %112 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !8367
  %max_order102 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %112, i32 0, i32 10, !dbg !8368
  %113 = load i32, i32* %max_order102, align 8, !dbg !8368
  %sub103 = sub nsw i32 0, %113, !dbg !8369
  %cmp104 = icmp sge i32 %111, %sub103, !dbg !8370
  br i1 %cmp104, label %for.body106, label %for.end115, !dbg !8371

for.body106:                                      ; preds = %for.cond101
  %114 = load i32, i32* %sb, align 4, !dbg !8372
  %idxprom107 = sext i32 %114 to i64, !dbg !8373
  %115 = load i32*, i32** %right, align 8, !dbg !8373
  %arrayidx108 = getelementptr inbounds i32, i32* %115, i64 %idxprom107, !dbg !8373
  %116 = load i32, i32* %arrayidx108, align 4, !dbg !8373
  %117 = load i32, i32* %sb, align 4, !dbg !8374
  %idxprom109 = sext i32 %117 to i64, !dbg !8375
  %118 = load i32*, i32** %left, align 8, !dbg !8375
  %arrayidx110 = getelementptr inbounds i32, i32* %118, i64 %idxprom109, !dbg !8375
  %119 = load i32, i32* %arrayidx110, align 4, !dbg !8375
  %sub111 = sub nsw i32 %116, %119, !dbg !8376
  %120 = load i32, i32* %sb, align 4, !dbg !8377
  %idxprom112 = sext i32 %120 to i64, !dbg !8378
  %121 = load i32*, i32** %raw_samples, align 8, !dbg !8378
  %arrayidx113 = getelementptr inbounds i32, i32* %121, i64 %idxprom112, !dbg !8378
  store i32 %sub111, i32* %arrayidx113, align 4, !dbg !8379
  br label %for.inc114, !dbg !8378

for.inc114:                                       ; preds = %for.body106
  %122 = load i32, i32* %sb, align 4, !dbg !8380
  %dec = add nsw i32 %122, -1, !dbg !8380
  store i32 %dec, i32* %sb, align 4, !dbg !8380
  br label %for.cond101, !dbg !8382, !llvm.loop !8383

for.end115:                                       ; preds = %for.cond101
  br label %if.end116, !dbg !8385

if.end116:                                        ; preds = %for.end115, %land.lhs.true, %if.end89
  %123 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8386
  %shift_lsbs = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %123, i32 0, i32 4, !dbg !8388
  %124 = load i32*, i32** %shift_lsbs, align 8, !dbg !8388
  %125 = load i32, i32* %124, align 4, !dbg !8389
  %tobool117 = icmp ne i32 %125, 0, !dbg !8389
  br i1 %tobool117, label %if.then118, label %if.end132, !dbg !8390

if.then118:                                       ; preds = %if.end116
  store i32 -1, i32* %sb, align 4, !dbg !8391
  br label %for.cond119, !dbg !8393

for.cond119:                                      ; preds = %for.inc129, %if.then118
  %126 = load i32, i32* %sb, align 4, !dbg !8394
  %127 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !8397
  %max_order120 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %127, i32 0, i32 10, !dbg !8398
  %128 = load i32, i32* %max_order120, align 8, !dbg !8398
  %sub121 = sub nsw i32 0, %128, !dbg !8399
  %cmp122 = icmp sge i32 %126, %sub121, !dbg !8400
  br i1 %cmp122, label %for.body124, label %for.end131, !dbg !8401

for.body124:                                      ; preds = %for.cond119
  %129 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8402
  %shift_lsbs125 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %129, i32 0, i32 4, !dbg !8403
  %130 = load i32*, i32** %shift_lsbs125, align 8, !dbg !8403
  %131 = load i32, i32* %130, align 4, !dbg !8404
  %132 = load i32, i32* %sb, align 4, !dbg !8405
  %idxprom126 = sext i32 %132 to i64, !dbg !8406
  %133 = load i32*, i32** %raw_samples, align 8, !dbg !8406
  %arrayidx127 = getelementptr inbounds i32, i32* %133, i64 %idxprom126, !dbg !8406
  %134 = load i32, i32* %arrayidx127, align 4, !dbg !8407
  %shr128 = ashr i32 %134, %131, !dbg !8407
  store i32 %shr128, i32* %arrayidx127, align 4, !dbg !8407
  br label %for.inc129, !dbg !8406

for.inc129:                                       ; preds = %for.body124
  %135 = load i32, i32* %sb, align 4, !dbg !8408
  %dec130 = add nsw i32 %135, -1, !dbg !8408
  store i32 %dec130, i32* %sb, align 4, !dbg !8408
  br label %for.cond119, !dbg !8410, !llvm.loop !8411

for.end131:                                       ; preds = %for.cond119
  br label %if.end132, !dbg !8413

if.end132:                                        ; preds = %for.end131, %if.end116
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %for.end74
  %136 = load i32*, i32** %lpc_cof, align 8, !dbg !8415
  %137 = load i32, i32* %opt_order, align 4, !dbg !8416
  %idx.ext134 = sext i32 %137 to i64, !dbg !8417
  %add.ptr135 = getelementptr inbounds i32, i32* %136, i64 %idx.ext134, !dbg !8417
  store i32* %add.ptr135, i32** %lpc_cof, align 8, !dbg !8418
  store i32 0, i32* %sb, align 4, !dbg !8419
  br label %for.cond136, !dbg !8421

for.cond136:                                      ; preds = %for.inc146, %if.end133
  %138 = load i32, i32* %sb, align 4, !dbg !8422
  %139 = load i32, i32* %opt_order, align 4, !dbg !8425
  %cmp137 = icmp slt i32 %138, %139, !dbg !8426
  br i1 %cmp137, label %for.body139, label %for.end148, !dbg !8427

for.body139:                                      ; preds = %for.cond136
  %140 = load i32, i32* %sb, align 4, !dbg !8428
  %add140 = add nsw i32 %140, 1, !dbg !8429
  %sub141 = sub nsw i32 0, %add140, !dbg !8430
  %idxprom142 = sext i32 %sub141 to i64, !dbg !8431
  %141 = load i32*, i32** %lpc_cof, align 8, !dbg !8431
  %arrayidx143 = getelementptr inbounds i32, i32* %141, i64 %idxprom142, !dbg !8431
  %142 = load i32, i32* %arrayidx143, align 4, !dbg !8431
  %143 = load i32, i32* %sb, align 4, !dbg !8432
  %idxprom144 = sext i32 %143 to i64, !dbg !8433
  %144 = load i32*, i32** %lpc_cof_reversed, align 8, !dbg !8433
  %arrayidx145 = getelementptr inbounds i32, i32* %144, i64 %idxprom144, !dbg !8433
  store i32 %142, i32* %arrayidx145, align 4, !dbg !8434
  br label %for.inc146, !dbg !8433

for.inc146:                                       ; preds = %for.body139
  %145 = load i32, i32* %sb, align 4, !dbg !8435
  %inc147 = add nsw i32 %145, 1, !dbg !8435
  store i32 %inc147, i32* %sb, align 4, !dbg !8435
  br label %for.cond136, !dbg !8437, !llvm.loop !8438

for.end148:                                       ; preds = %for.cond136
  %146 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8440
  %raw_samples149 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %146, i32 0, i32 12, !dbg !8441
  %147 = load i32*, i32** %raw_samples149, align 8, !dbg !8441
  %148 = load i32, i32* %smp, align 4, !dbg !8442
  %idx.ext150 = zext i32 %148 to i64, !dbg !8443
  %add.ptr151 = getelementptr inbounds i32, i32* %147, i64 %idx.ext150, !dbg !8443
  store i32* %add.ptr151, i32** %raw_samples, align 8, !dbg !8444
  %149 = load i32*, i32** %lpc_cof_reversed, align 8, !dbg !8445
  %150 = load i32, i32* %opt_order, align 4, !dbg !8446
  %idx.ext152 = sext i32 %150 to i64, !dbg !8447
  %add.ptr153 = getelementptr inbounds i32, i32* %149, i64 %idx.ext152, !dbg !8447
  store i32* %add.ptr153, i32** %lpc_cof, align 8, !dbg !8448
  br label %for.cond154, !dbg !8449

for.cond154:                                      ; preds = %for.inc178, %for.end148
  %151 = load i32*, i32** %raw_samples, align 8, !dbg !8450
  %152 = load i32*, i32** %raw_samples_end, align 8, !dbg !8454
  %cmp155 = icmp ult i32* %151, %152, !dbg !8455
  br i1 %cmp155, label %for.body157, label %for.end180, !dbg !8456

for.body157:                                      ; preds = %for.cond154
  store i64 524288, i64* %y, align 8, !dbg !8457
  %153 = load i32, i32* %opt_order, align 4, !dbg !8459
  %sub158 = sub nsw i32 0, %153, !dbg !8461
  store i32 %sub158, i32* %sb, align 4, !dbg !8462
  br label %for.cond159, !dbg !8463

for.cond159:                                      ; preds = %for.inc171, %for.body157
  %154 = load i32, i32* %sb, align 4, !dbg !8464
  %cmp160 = icmp slt i32 %154, 0, !dbg !8467
  br i1 %cmp160, label %for.body162, label %for.end173, !dbg !8468

for.body162:                                      ; preds = %for.cond159
  %155 = load i32, i32* %sb, align 4, !dbg !8469
  %idxprom163 = sext i32 %155 to i64, !dbg !8470
  %156 = load i32*, i32** %lpc_cof, align 8, !dbg !8470
  %arrayidx164 = getelementptr inbounds i32, i32* %156, i64 %idxprom163, !dbg !8470
  %157 = load i32, i32* %arrayidx164, align 4, !dbg !8470
  %conv165 = sext i32 %157 to i64, !dbg !8471
  %158 = load i32, i32* %sb, align 4, !dbg !8472
  %idxprom166 = sext i32 %158 to i64, !dbg !8473
  %159 = load i32*, i32** %raw_samples, align 8, !dbg !8473
  %arrayidx167 = getelementptr inbounds i32, i32* %159, i64 %idxprom166, !dbg !8473
  %160 = load i32, i32* %arrayidx167, align 4, !dbg !8473
  %conv168 = sext i32 %160 to i64, !dbg !8474
  %mul169 = mul nsw i64 %conv165, %conv168, !dbg !8475
  %161 = load i64, i64* %y, align 8, !dbg !8476
  %add170 = add nsw i64 %161, %mul169, !dbg !8476
  store i64 %add170, i64* %y, align 8, !dbg !8476
  br label %for.inc171, !dbg !8477

for.inc171:                                       ; preds = %for.body162
  %162 = load i32, i32* %sb, align 4, !dbg !8478
  %inc172 = add nsw i32 %162, 1, !dbg !8478
  store i32 %inc172, i32* %sb, align 4, !dbg !8478
  br label %for.cond159, !dbg !8480, !llvm.loop !8481

for.end173:                                       ; preds = %for.cond159
  %163 = load i64, i64* %y, align 8, !dbg !8483
  %shr174 = ashr i64 %163, 20, !dbg !8484
  %164 = load i32*, i32** %raw_samples, align 8, !dbg !8485
  %165 = load i32, i32* %164, align 4, !dbg !8486
  %conv175 = sext i32 %165 to i64, !dbg !8486
  %sub176 = sub nsw i64 %conv175, %shr174, !dbg !8486
  %conv177 = trunc i64 %sub176 to i32, !dbg !8486
  store i32 %conv177, i32* %164, align 4, !dbg !8486
  br label %for.inc178, !dbg !8487

for.inc178:                                       ; preds = %for.end173
  %166 = load i32*, i32** %raw_samples, align 8, !dbg !8488
  %incdec.ptr179 = getelementptr inbounds i32, i32* %166, i32 1, !dbg !8488
  store i32* %incdec.ptr179, i32** %raw_samples, align 8, !dbg !8488
  br label %for.cond154, !dbg !8490, !llvm.loop !8491

for.end180:                                       ; preds = %for.cond154
  %167 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8492
  %raw_samples181 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %167, i32 0, i32 12, !dbg !8493
  %168 = load i32*, i32** %raw_samples181, align 8, !dbg !8493
  store i32* %168, i32** %raw_samples, align 8, !dbg !8494
  %169 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8495
  %store_prev_samples182 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %169, i32 0, i32 6, !dbg !8497
  %170 = load i32*, i32** %store_prev_samples182, align 8, !dbg !8497
  %171 = load i32, i32* %170, align 4, !dbg !8498
  %tobool183 = icmp ne i32 %171, 0, !dbg !8498
  br i1 %tobool183, label %if.then184, label %if.end193, !dbg !8499

if.then184:                                       ; preds = %for.end180
  %172 = load i32*, i32** %raw_samples, align 8, !dbg !8500
  %173 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !8501
  %max_order185 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %173, i32 0, i32 10, !dbg !8502
  %174 = load i32, i32* %max_order185, align 8, !dbg !8502
  %idx.ext186 = sext i32 %174 to i64, !dbg !8503
  %idx.neg187 = sub i64 0, %idx.ext186, !dbg !8503
  %add.ptr188 = getelementptr inbounds i32, i32* %172, i64 %idx.neg187, !dbg !8503
  %175 = bitcast i32* %add.ptr188 to i8*, !dbg !8504
  %176 = load %struct.ALSBlockData*, %struct.ALSBlockData** %bd.addr, align 8, !dbg !8505
  %prev_raw_samples189 = getelementptr inbounds %struct.ALSBlockData, %struct.ALSBlockData* %176, i32 0, i32 13, !dbg !8506
  %177 = load i32*, i32** %prev_raw_samples189, align 8, !dbg !8506
  %178 = bitcast i32* %177 to i8*, !dbg !8504
  %179 = load %struct.ALSSpecificConfig*, %struct.ALSSpecificConfig** %sconf, align 8, !dbg !8507
  %max_order190 = getelementptr inbounds %struct.ALSSpecificConfig, %struct.ALSSpecificConfig* %179, i32 0, i32 10, !dbg !8508
  %180 = load i32, i32* %max_order190, align 8, !dbg !8508
  %conv191 = sext i32 %180 to i64, !dbg !8507
  %mul192 = mul i64 4, %conv191, !dbg !8509
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %175, i8* %178, i64 %mul192, i32 4, i1 false), !dbg !8504
  br label %if.end193, !dbg !8504

if.end193:                                        ; preds = %if.then184, %for.end180
  ret i32 0, !dbg !8510
}

; Function Attrs: nounwind uwtable
define internal void @parcor_to_lpc(i32 %k, i32* %par, i32* %cof) #1 !dbg !8511 {
entry:
  %k.addr = alloca i32, align 4
  %par.addr = alloca i32*, align 8
  %cof.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !8516, metadata !1692), !dbg !8517
  store i32* %par, i32** %par.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %par.addr, metadata !8518, metadata !1692), !dbg !8519
  store i32* %cof, i32** %cof.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %cof.addr, metadata !8520, metadata !1692), !dbg !8521
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8522, metadata !1692), !dbg !8523
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8524, metadata !1692), !dbg !8525
  store i32 0, i32* %i, align 4, !dbg !8526
  %0 = load i32, i32* %k.addr, align 4, !dbg !8528
  %sub = sub i32 %0, 1, !dbg !8529
  store i32 %sub, i32* %j, align 4, !dbg !8530
  br label %for.cond, !dbg !8531

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8532
  %2 = load i32, i32* %j, align 4, !dbg !8535
  %cmp = icmp slt i32 %1, %2, !dbg !8536
  br i1 %cmp, label %for.body, label %for.end, !dbg !8537

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %tmp1, metadata !8538, metadata !1692), !dbg !8540
  %3 = load i32, i32* %k.addr, align 4, !dbg !8541
  %idxprom = zext i32 %3 to i64, !dbg !8542
  %4 = load i32*, i32** %par.addr, align 8, !dbg !8542
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !8542
  %5 = load i32, i32* %arrayidx, align 4, !dbg !8542
  %conv = sext i32 %5 to i64, !dbg !8543
  %6 = load i32, i32* %j, align 4, !dbg !8544
  %idxprom1 = sext i32 %6 to i64, !dbg !8545
  %7 = load i32*, i32** %cof.addr, align 8, !dbg !8545
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 %idxprom1, !dbg !8545
  %8 = load i32, i32* %arrayidx2, align 4, !dbg !8545
  %conv3 = sext i32 %8 to i64, !dbg !8546
  %mul = mul nsw i64 %conv, %conv3, !dbg !8547
  %add = add nsw i64 %mul, 524288, !dbg !8548
  %shr = ashr i64 %add, 20, !dbg !8549
  %conv4 = trunc i64 %shr to i32, !dbg !8550
  store i32 %conv4, i32* %tmp1, align 4, !dbg !8540
  %9 = load i32, i32* %k.addr, align 4, !dbg !8551
  %idxprom5 = zext i32 %9 to i64, !dbg !8552
  %10 = load i32*, i32** %par.addr, align 8, !dbg !8552
  %arrayidx6 = getelementptr inbounds i32, i32* %10, i64 %idxprom5, !dbg !8552
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !8552
  %conv7 = sext i32 %11 to i64, !dbg !8553
  %12 = load i32, i32* %i, align 4, !dbg !8554
  %idxprom8 = sext i32 %12 to i64, !dbg !8555
  %13 = load i32*, i32** %cof.addr, align 8, !dbg !8555
  %arrayidx9 = getelementptr inbounds i32, i32* %13, i64 %idxprom8, !dbg !8555
  %14 = load i32, i32* %arrayidx9, align 4, !dbg !8555
  %conv10 = sext i32 %14 to i64, !dbg !8556
  %mul11 = mul nsw i64 %conv7, %conv10, !dbg !8557
  %add12 = add nsw i64 %mul11, 524288, !dbg !8558
  %shr13 = ashr i64 %add12, 20, !dbg !8559
  %15 = load i32, i32* %j, align 4, !dbg !8560
  %idxprom14 = sext i32 %15 to i64, !dbg !8561
  %16 = load i32*, i32** %cof.addr, align 8, !dbg !8561
  %arrayidx15 = getelementptr inbounds i32, i32* %16, i64 %idxprom14, !dbg !8561
  %17 = load i32, i32* %arrayidx15, align 4, !dbg !8562
  %conv16 = sext i32 %17 to i64, !dbg !8562
  %add17 = add nsw i64 %conv16, %shr13, !dbg !8562
  %conv18 = trunc i64 %add17 to i32, !dbg !8562
  store i32 %conv18, i32* %arrayidx15, align 4, !dbg !8562
  %18 = load i32, i32* %tmp1, align 4, !dbg !8563
  %19 = load i32, i32* %i, align 4, !dbg !8564
  %idxprom19 = sext i32 %19 to i64, !dbg !8565
  %20 = load i32*, i32** %cof.addr, align 8, !dbg !8565
  %arrayidx20 = getelementptr inbounds i32, i32* %20, i64 %idxprom19, !dbg !8565
  %21 = load i32, i32* %arrayidx20, align 4, !dbg !8566
  %add21 = add nsw i32 %21, %18, !dbg !8566
  store i32 %add21, i32* %arrayidx20, align 4, !dbg !8566
  br label %for.inc, !dbg !8567

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !8568
  %inc = add nsw i32 %22, 1, !dbg !8568
  store i32 %inc, i32* %i, align 4, !dbg !8568
  %23 = load i32, i32* %j, align 4, !dbg !8570
  %dec = add nsw i32 %23, -1, !dbg !8570
  store i32 %dec, i32* %j, align 4, !dbg !8570
  br label %for.cond, !dbg !8571, !llvm.loop !8572

for.end:                                          ; preds = %for.cond
  %24 = load i32, i32* %i, align 4, !dbg !8574
  %25 = load i32, i32* %j, align 4, !dbg !8576
  %cmp22 = icmp eq i32 %24, %25, !dbg !8577
  br i1 %cmp22, label %if.then, label %if.end, !dbg !8578

if.then:                                          ; preds = %for.end
  %26 = load i32, i32* %k.addr, align 4, !dbg !8579
  %idxprom24 = zext i32 %26 to i64, !dbg !8580
  %27 = load i32*, i32** %par.addr, align 8, !dbg !8580
  %arrayidx25 = getelementptr inbounds i32, i32* %27, i64 %idxprom24, !dbg !8580
  %28 = load i32, i32* %arrayidx25, align 4, !dbg !8580
  %conv26 = sext i32 %28 to i64, !dbg !8581
  %29 = load i32, i32* %j, align 4, !dbg !8582
  %idxprom27 = sext i32 %29 to i64, !dbg !8583
  %30 = load i32*, i32** %cof.addr, align 8, !dbg !8583
  %arrayidx28 = getelementptr inbounds i32, i32* %30, i64 %idxprom27, !dbg !8583
  %31 = load i32, i32* %arrayidx28, align 4, !dbg !8583
  %conv29 = sext i32 %31 to i64, !dbg !8584
  %mul30 = mul nsw i64 %conv26, %conv29, !dbg !8585
  %add31 = add nsw i64 %mul30, 524288, !dbg !8586
  %shr32 = ashr i64 %add31, 20, !dbg !8587
  %32 = load i32, i32* %i, align 4, !dbg !8588
  %idxprom33 = sext i32 %32 to i64, !dbg !8589
  %33 = load i32*, i32** %cof.addr, align 8, !dbg !8589
  %arrayidx34 = getelementptr inbounds i32, i32* %33, i64 %idxprom33, !dbg !8589
  %34 = load i32, i32* %arrayidx34, align 4, !dbg !8590
  %conv35 = sext i32 %34 to i64, !dbg !8590
  %add36 = add nsw i64 %conv35, %shr32, !dbg !8590
  %conv37 = trunc i64 %add36 to i32, !dbg !8590
  store i32 %conv37, i32* %arrayidx34, align 4, !dbg !8590
  br label %if.end, !dbg !8589

if.end:                                           ; preds = %if.then, %for.end
  %35 = load i32, i32* %k.addr, align 4, !dbg !8591
  %idxprom38 = zext i32 %35 to i64, !dbg !8592
  %36 = load i32*, i32** %par.addr, align 8, !dbg !8592
  %arrayidx39 = getelementptr inbounds i32, i32* %36, i64 %idxprom38, !dbg !8592
  %37 = load i32, i32* %arrayidx39, align 4, !dbg !8592
  %38 = load i32, i32* %k.addr, align 4, !dbg !8593
  %idxprom40 = zext i32 %38 to i64, !dbg !8594
  %39 = load i32*, i32** %cof.addr, align 8, !dbg !8594
  %arrayidx41 = getelementptr inbounds i32, i32* %39, i64 %idxprom40, !dbg !8594
  store i32 %37, i32* %arrayidx41, align 4, !dbg !8595
  ret void, !dbg !8596
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @av_int2sf_ieee754(%struct.SoftFloat_IEEE754* noalias sret %agg.result, i64 %n, i32 %e) #5 !dbg !8597 {
entry:
  %n.addr = alloca i64, align 8
  %e.addr = alloca i32, align 4
  %sign = alloca i32, align 4
  %.compoundliteral = alloca %struct.SoftFloat_IEEE754, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8600, metadata !1692), !dbg !8601
  store i32 %e, i32* %e.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !8602, metadata !1692), !dbg !8603
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !8604, metadata !1692), !dbg !8605
  store i32 0, i32* %sign, align 4, !dbg !8605
  %0 = load i64, i64* %n.addr, align 8, !dbg !8606
  %cmp = icmp slt i64 %0, 0, !dbg !8608
  br i1 %cmp, label %if.then, label %if.end, !dbg !8609

if.then:                                          ; preds = %entry
  store i32 1, i32* %sign, align 4, !dbg !8610
  %1 = load i64, i64* %n.addr, align 8, !dbg !8612
  %mul = mul nsw i64 %1, -1, !dbg !8612
  store i64 %mul, i64* %n.addr, align 8, !dbg !8612
  br label %if.end, !dbg !8613

if.end:                                           ; preds = %if.then, %entry
  %sign1 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %.compoundliteral, i32 0, i32 0, !dbg !8614
  %2 = load i32, i32* %sign, align 4, !dbg !8615
  store i32 %2, i32* %sign1, align 8, !dbg !8614
  %mant = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %.compoundliteral, i32 0, i32 1, !dbg !8614
  %3 = load i64, i64* %n.addr, align 8, !dbg !8616
  %shl = shl i64 %3, 23, !dbg !8617
  store i64 %shl, i64* %mant, align 8, !dbg !8614
  %exp = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %.compoundliteral, i32 0, i32 2, !dbg !8614
  %4 = load i32, i32* %e.addr, align 4, !dbg !8618
  %add = add nsw i32 0, %4, !dbg !8619
  store i32 %add, i32* %exp, align 8, !dbg !8614
  call void @av_normalize_sf_ieee754(%struct.SoftFloat_IEEE754* sret %agg.result, %struct.SoftFloat_IEEE754* byval align 8 %.compoundliteral), !dbg !8620
  ret void, !dbg !8621
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @av_bits2sf_ieee754(%struct.SoftFloat_IEEE754* noalias sret %agg.result, i32 %n) #5 !dbg !8622 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8625, metadata !1692), !dbg !8626
  %sign = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %agg.result, i32 0, i32 0, !dbg !8627
  %0 = load i32, i32* %n.addr, align 4, !dbg !8628
  %conv = zext i32 %0 to i64, !dbg !8628
  %and = and i64 %conv, 2147483648, !dbg !8629
  %conv1 = trunc i64 %and to i32, !dbg !8630
  store i32 %conv1, i32* %sign, align 8, !dbg !8627
  %mant = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %agg.result, i32 0, i32 1, !dbg !8627
  %1 = load i32, i32* %n.addr, align 4, !dbg !8631
  %conv2 = zext i32 %1 to i64, !dbg !8631
  %and3 = and i64 %conv2, 8388607, !dbg !8632
  store i64 %and3, i64* %mant, align 8, !dbg !8627
  %exp = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %agg.result, i32 0, i32 2, !dbg !8627
  %2 = load i32, i32* %n.addr, align 4, !dbg !8633
  %conv4 = zext i32 %2 to i64, !dbg !8633
  %and5 = and i64 %conv4, 2139095040, !dbg !8634
  %conv6 = trunc i64 %and5 to i32, !dbg !8635
  store i32 %conv6, i32* %exp, align 8, !dbg !8627
  ret void, !dbg !8636
}

declare i32 @ff_mlz_decompression(%struct.MLZ*, %struct.GetBitContext*, i32, i8*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @av_cmp_sf_ieee754(%struct.SoftFloat_IEEE754* byval align 8 %a, %struct.SoftFloat_IEEE754* byval align 8 %b) #5 !dbg !8637 {
entry:
  %retval = alloca i32, align 4
  %tmp = alloca %struct.SoftFloat_IEEE754, align 8
  %tmp1 = alloca %struct.SoftFloat_IEEE754, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftFloat_IEEE754* %a, metadata !8640, metadata !1692), !dbg !8641
  call void @llvm.dbg.declare(metadata %struct.SoftFloat_IEEE754* %b, metadata !8642, metadata !1692), !dbg !8643
  call void @av_normalize_sf_ieee754(%struct.SoftFloat_IEEE754* sret %tmp, %struct.SoftFloat_IEEE754* byval align 8 %a), !dbg !8644
  %0 = bitcast %struct.SoftFloat_IEEE754* %a to i8*, !dbg !8644
  %1 = bitcast %struct.SoftFloat_IEEE754* %tmp to i8*, !dbg !8644
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false), !dbg !8645
  call void @av_normalize_sf_ieee754(%struct.SoftFloat_IEEE754* sret %tmp1, %struct.SoftFloat_IEEE754* byval align 8 %b), !dbg !8647
  %2 = bitcast %struct.SoftFloat_IEEE754* %b to i8*, !dbg !8647
  %3 = bitcast %struct.SoftFloat_IEEE754* %tmp1 to i8*, !dbg !8647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 24, i32 8, i1 false), !dbg !8648
  %sign = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %a, i32 0, i32 0, !dbg !8649
  %4 = load i32, i32* %sign, align 8, !dbg !8649
  %sign2 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %b, i32 0, i32 0, !dbg !8651
  %5 = load i32, i32* %sign2, align 8, !dbg !8651
  %cmp = icmp ne i32 %4, %5, !dbg !8652
  br i1 %cmp, label %if.then, label %if.end, !dbg !8653

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8654
  br label %return, !dbg !8654

if.end:                                           ; preds = %entry
  %mant = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %a, i32 0, i32 1, !dbg !8656
  %6 = load i64, i64* %mant, align 8, !dbg !8656
  %mant3 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %b, i32 0, i32 1, !dbg !8658
  %7 = load i64, i64* %mant3, align 8, !dbg !8658
  %cmp4 = icmp ne i64 %6, %7, !dbg !8659
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !8660

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8661
  br label %return, !dbg !8661

if.end6:                                          ; preds = %if.end
  %exp = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %a, i32 0, i32 2, !dbg !8663
  %8 = load i32, i32* %exp, align 8, !dbg !8663
  %exp7 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %b, i32 0, i32 2, !dbg !8665
  %9 = load i32, i32* %exp7, align 8, !dbg !8665
  %cmp8 = icmp ne i32 %8, %9, !dbg !8666
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !8667

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !8668
  br label %return, !dbg !8668

if.end10:                                         ; preds = %if.end6
  store i32 1, i32* %retval, align 4, !dbg !8670
  br label %return, !dbg !8670

return:                                           ; preds = %if.end10, %if.then9, %if.then5, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8671
  ret i32 %10, !dbg !8671
}

; Function Attrs: nounwind readnone
declare i32 @abs(i32) #8

; Function Attrs: inlinehint nounwind uwtable
define internal void @av_div_sf_ieee754(%struct.SoftFloat_IEEE754* noalias sret %agg.result, %struct.SoftFloat_IEEE754* byval align 8 %a, %struct.SoftFloat_IEEE754* byval align 8 %b) #5 !dbg !8672 {
entry:
  %mant = alloca i32, align 4
  %exp = alloca i32, align 4
  %sign = alloca i32, align 4
  %tmp = alloca %struct.SoftFloat_IEEE754, align 8
  %tmp1 = alloca %struct.SoftFloat_IEEE754, align 8
  %.compoundliteral = alloca %struct.SoftFloat_IEEE754, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftFloat_IEEE754* %a, metadata !8675, metadata !1692), !dbg !8676
  call void @llvm.dbg.declare(metadata %struct.SoftFloat_IEEE754* %b, metadata !8677, metadata !1692), !dbg !8678
  call void @llvm.dbg.declare(metadata i32* %mant, metadata !8679, metadata !1692), !dbg !8680
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !8681, metadata !1692), !dbg !8682
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !8683, metadata !1692), !dbg !8684
  call void @av_normalize_sf_ieee754(%struct.SoftFloat_IEEE754* sret %tmp, %struct.SoftFloat_IEEE754* byval align 8 %a), !dbg !8685
  %0 = bitcast %struct.SoftFloat_IEEE754* %a to i8*, !dbg !8685
  %1 = bitcast %struct.SoftFloat_IEEE754* %tmp to i8*, !dbg !8685
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 24, i32 8, i1 false), !dbg !8686
  call void @av_normalize_sf_ieee754(%struct.SoftFloat_IEEE754* sret %tmp1, %struct.SoftFloat_IEEE754* byval align 8 %b), !dbg !8688
  %2 = bitcast %struct.SoftFloat_IEEE754* %b to i8*, !dbg !8688
  %3 = bitcast %struct.SoftFloat_IEEE754* %tmp1 to i8*, !dbg !8688
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 24, i32 8, i1 false), !dbg !8689
  %sign2 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %a, i32 0, i32 0, !dbg !8690
  %4 = load i32, i32* %sign2, align 8, !dbg !8690
  %sign3 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %b, i32 0, i32 0, !dbg !8691
  %5 = load i32, i32* %sign3, align 8, !dbg !8691
  %xor = xor i32 %4, %5, !dbg !8692
  store i32 %xor, i32* %sign, align 4, !dbg !8693
  %mant4 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %a, i32 0, i32 1, !dbg !8694
  %6 = load i64, i64* %mant4, align 8, !dbg !8694
  %or = or i64 %6, 8388608, !dbg !8695
  %shl = shl i64 %or, 23, !dbg !8696
  %mant5 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %b, i32 0, i32 1, !dbg !8697
  %7 = load i64, i64* %mant5, align 8, !dbg !8697
  %or6 = or i64 %7, 8388608, !dbg !8698
  %div = udiv i64 %shl, %or6, !dbg !8699
  %conv = trunc i64 %div to i32, !dbg !8700
  store i32 %conv, i32* %mant, align 4, !dbg !8701
  %exp7 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %a, i32 0, i32 2, !dbg !8702
  %8 = load i32, i32* %exp7, align 8, !dbg !8702
  %exp8 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %b, i32 0, i32 2, !dbg !8703
  %9 = load i32, i32* %exp8, align 8, !dbg !8703
  %sub = sub nsw i32 %8, %9, !dbg !8704
  store i32 %sub, i32* %exp, align 4, !dbg !8705
  %sign9 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %.compoundliteral, i32 0, i32 0, !dbg !8706
  %10 = load i32, i32* %sign, align 4, !dbg !8707
  store i32 %10, i32* %sign9, align 8, !dbg !8706
  %mant10 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %.compoundliteral, i32 0, i32 1, !dbg !8706
  %11 = load i32, i32* %mant, align 4, !dbg !8708
  %conv11 = sext i32 %11 to i64, !dbg !8708
  store i64 %conv11, i64* %mant10, align 8, !dbg !8706
  %exp12 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %.compoundliteral, i32 0, i32 2, !dbg !8706
  %12 = load i32, i32* %exp, align 4, !dbg !8709
  store i32 %12, i32* %exp12, align 8, !dbg !8706
  call void @av_normalize_sf_ieee754(%struct.SoftFloat_IEEE754* sret %agg.result, %struct.SoftFloat_IEEE754* byval align 8 %.compoundliteral), !dbg !8710
  ret void, !dbg !8711
}

; Function Attrs: nounwind uwtable
define internal void @multiply(%struct.SoftFloat_IEEE754* noalias sret %agg.result, %struct.SoftFloat_IEEE754* byval align 8 %a, %struct.SoftFloat_IEEE754* byval align 8 %b) #1 !dbg !8712 {
entry:
  %mantissa_temp = alloca i64, align 8
  %mask_64 = alloca i64, align 8
  %cutoff_bit_count = alloca i32, align 4
  %last_2_bits = alloca i8, align 1
  %mantissa = alloca i32, align 4
  %sign = alloca i32, align 4
  %return_val = alloca i32, align 4
  %bit_count = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.SoftFloat_IEEE754* %a, metadata !8713, metadata !1692), !dbg !8714
  call void @llvm.dbg.declare(metadata %struct.SoftFloat_IEEE754* %b, metadata !8715, metadata !1692), !dbg !8716
  call void @llvm.dbg.declare(metadata i64* %mantissa_temp, metadata !8717, metadata !1692), !dbg !8718
  call void @llvm.dbg.declare(metadata i64* %mask_64, metadata !8719, metadata !1692), !dbg !8720
  call void @llvm.dbg.declare(metadata i32* %cutoff_bit_count, metadata !8721, metadata !1692), !dbg !8722
  call void @llvm.dbg.declare(metadata i8* %last_2_bits, metadata !8723, metadata !1692), !dbg !8724
  call void @llvm.dbg.declare(metadata i32* %mantissa, metadata !8725, metadata !1692), !dbg !8726
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !8727, metadata !1692), !dbg !8728
  call void @llvm.dbg.declare(metadata i32* %return_val, metadata !8729, metadata !1692), !dbg !8730
  store i32 0, i32* %return_val, align 4, !dbg !8730
  call void @llvm.dbg.declare(metadata i32* %bit_count, metadata !8731, metadata !1692), !dbg !8732
  store i32 48, i32* %bit_count, align 4, !dbg !8732
  %sign1 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %a, i32 0, i32 0, !dbg !8733
  %0 = load i32, i32* %sign1, align 8, !dbg !8733
  %sign2 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %b, i32 0, i32 0, !dbg !8734
  %1 = load i32, i32* %sign2, align 8, !dbg !8734
  %xor = xor i32 %0, %1, !dbg !8735
  store i32 %xor, i32* %sign, align 4, !dbg !8736
  %mant = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %a, i32 0, i32 1, !dbg !8737
  %2 = load i64, i64* %mant, align 8, !dbg !8737
  %mant3 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %b, i32 0, i32 1, !dbg !8738
  %3 = load i64, i64* %mant3, align 8, !dbg !8738
  %mul = mul i64 %2, %3, !dbg !8739
  store i64 %mul, i64* %mantissa_temp, align 8, !dbg !8740
  store i64 140737488355328, i64* %mask_64, align 8, !dbg !8741
  br label %while.cond, !dbg !8742

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i64, i64* %mantissa_temp, align 8, !dbg !8743
  %5 = load i64, i64* %mask_64, align 8, !dbg !8745
  %and = and i64 %4, %5, !dbg !8746
  %tobool = icmp ne i64 %and, 0, !dbg !8746
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !8747

land.rhs:                                         ; preds = %while.cond
  %6 = load i64, i64* %mask_64, align 8, !dbg !8748
  %tobool4 = icmp ne i64 %6, 0, !dbg !8750
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %tobool4, %land.rhs ]
  br i1 %7, label %while.body, label %while.end, !dbg !8751

while.body:                                       ; preds = %land.end
  %8 = load i32, i32* %bit_count, align 4, !dbg !8753
  %dec = add nsw i32 %8, -1, !dbg !8753
  store i32 %dec, i32* %bit_count, align 4, !dbg !8753
  %9 = load i64, i64* %mask_64, align 8, !dbg !8755
  %shr = lshr i64 %9, 1, !dbg !8755
  store i64 %shr, i64* %mask_64, align 8, !dbg !8755
  br label %while.cond, !dbg !8756, !llvm.loop !8758

while.end:                                        ; preds = %land.end
  %10 = load i32, i32* %bit_count, align 4, !dbg !8759
  %sub = sub nsw i32 %10, 24, !dbg !8760
  store i32 %sub, i32* %cutoff_bit_count, align 4, !dbg !8761
  %11 = load i32, i32* %cutoff_bit_count, align 4, !dbg !8762
  %cmp = icmp sgt i32 %11, 0, !dbg !8764
  br i1 %cmp, label %if.then, label %if.end24, !dbg !8765

if.then:                                          ; preds = %while.end
  %12 = load i64, i64* %mantissa_temp, align 8, !dbg !8766
  %conv = trunc i64 %12 to i32, !dbg !8768
  %13 = load i32, i32* %cutoff_bit_count, align 4, !dbg !8769
  %sub5 = sub nsw i32 %13, 1, !dbg !8770
  %shr6 = lshr i32 %conv, %sub5, !dbg !8771
  %and7 = and i32 %shr6, 3, !dbg !8772
  %conv8 = trunc i32 %and7 to i8, !dbg !8773
  store i8 %conv8, i8* %last_2_bits, align 1, !dbg !8774
  %14 = load i8, i8* %last_2_bits, align 1, !dbg !8775
  %conv9 = zext i8 %14 to i32, !dbg !8775
  %cmp10 = icmp eq i32 %conv9, 3, !dbg !8777
  br i1 %cmp10, label %if.then21, label %lor.lhs.false, !dbg !8778

lor.lhs.false:                                    ; preds = %if.then
  %15 = load i8, i8* %last_2_bits, align 1, !dbg !8779
  %conv12 = zext i8 %15 to i32, !dbg !8779
  %cmp13 = icmp eq i32 %conv12, 1, !dbg !8781
  br i1 %cmp13, label %land.lhs.true, label %if.end, !dbg !8782

land.lhs.true:                                    ; preds = %lor.lhs.false
  %16 = load i64, i64* %mantissa_temp, align 8, !dbg !8783
  %conv15 = trunc i64 %16 to i32, !dbg !8785
  %conv16 = zext i32 %conv15 to i64, !dbg !8785
  %17 = load i32, i32* %cutoff_bit_count, align 4, !dbg !8786
  %sub17 = sub nsw i32 %17, 1, !dbg !8787
  %sh_prom = zext i32 %sub17 to i64, !dbg !8788
  %shl = shl i64 1, %sh_prom, !dbg !8788
  %sub18 = sub i64 %shl, 1, !dbg !8789
  %and19 = and i64 %conv16, %sub18, !dbg !8790
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8790
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !8791

if.then21:                                        ; preds = %land.lhs.true, %if.then
  %18 = load i32, i32* %cutoff_bit_count, align 4, !dbg !8792
  %sh_prom22 = zext i32 %18 to i64, !dbg !8794
  %shl23 = shl i64 1, %sh_prom22, !dbg !8794
  %19 = load i64, i64* %mantissa_temp, align 8, !dbg !8795
  %add = add i64 %19, %shl23, !dbg !8795
  store i64 %add, i64* %mantissa_temp, align 8, !dbg !8795
  br label %if.end, !dbg !8796

if.end:                                           ; preds = %if.then21, %land.lhs.true, %lor.lhs.false
  br label %if.end24, !dbg !8797

if.end24:                                         ; preds = %if.end, %while.end
  %20 = load i64, i64* %mantissa_temp, align 8, !dbg !8798
  %21 = load i32, i32* %cutoff_bit_count, align 4, !dbg !8799
  %sh_prom25 = zext i32 %21 to i64, !dbg !8800
  %shr26 = lshr i64 %20, %sh_prom25, !dbg !8800
  %conv27 = trunc i64 %shr26 to i32, !dbg !8801
  store i32 %conv27, i32* %mantissa, align 4, !dbg !8802
  %22 = load i32, i32* %mantissa, align 4, !dbg !8803
  %conv28 = zext i32 %22 to i64, !dbg !8803
  %and29 = and i64 %conv28, 16777216, !dbg !8805
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8805
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !8806

if.then31:                                        ; preds = %if.end24
  %23 = load i32, i32* %bit_count, align 4, !dbg !8807
  %inc = add nsw i32 %23, 1, !dbg !8807
  store i32 %inc, i32* %bit_count, align 4, !dbg !8807
  %24 = load i32, i32* %mantissa, align 4, !dbg !8809
  %shr32 = lshr i32 %24, 1, !dbg !8809
  store i32 %shr32, i32* %mantissa, align 4, !dbg !8809
  br label %if.end33, !dbg !8810

if.end33:                                         ; preds = %if.then31, %if.end24
  %25 = load i32, i32* %sign, align 4, !dbg !8811
  %tobool34 = icmp ne i32 %25, 0, !dbg !8811
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !8813

if.then35:                                        ; preds = %if.end33
  store i32 -2147483648, i32* %return_val, align 4, !dbg !8814
  br label %if.end36, !dbg !8816

if.end36:                                         ; preds = %if.then35, %if.end33
  %exp = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %a, i32 0, i32 2, !dbg !8817
  %26 = load i32, i32* %exp, align 8, !dbg !8817
  %exp37 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %b, i32 0, i32 2, !dbg !8818
  %27 = load i32, i32* %exp37, align 8, !dbg !8818
  %add38 = add nsw i32 %26, %27, !dbg !8819
  %28 = load i32, i32* %bit_count, align 4, !dbg !8820
  %add39 = add nsw i32 %add38, %28, !dbg !8821
  %sub40 = sub nsw i32 %add39, 47, !dbg !8822
  %shl41 = shl i32 %sub40, 23, !dbg !8823
  %29 = load i32, i32* %return_val, align 4, !dbg !8824
  %or = or i32 %29, %shl41, !dbg !8824
  store i32 %or, i32* %return_val, align 4, !dbg !8824
  %30 = load i32, i32* %mantissa, align 4, !dbg !8825
  %31 = load i32, i32* %return_val, align 4, !dbg !8826
  %or42 = or i32 %31, %30, !dbg !8826
  store i32 %or42, i32* %return_val, align 4, !dbg !8826
  %32 = load i32, i32* %return_val, align 4, !dbg !8827
  call void @av_bits2sf_ieee754(%struct.SoftFloat_IEEE754* sret %agg.result, i32 %32), !dbg !8828
  ret void, !dbg !8829
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @av_normalize_sf_ieee754(%struct.SoftFloat_IEEE754* noalias sret %agg.result, %struct.SoftFloat_IEEE754* byval align 8 %sf) #5 !dbg !8830 {
entry:
  call void @llvm.dbg.declare(metadata %struct.SoftFloat_IEEE754* %sf, metadata !8833, metadata !1692), !dbg !8834
  br label %while.cond, !dbg !8835

while.cond:                                       ; preds = %while.body, %entry
  %mant = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %sf, i32 0, i32 1, !dbg !8836
  %0 = load i64, i64* %mant, align 8, !dbg !8836
  %cmp = icmp uge i64 %0, 16777216, !dbg !8838
  br i1 %cmp, label %while.body, label %while.end, !dbg !8839

while.body:                                       ; preds = %while.cond
  %exp = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %sf, i32 0, i32 2, !dbg !8840
  %1 = load i32, i32* %exp, align 8, !dbg !8842
  %inc = add nsw i32 %1, 1, !dbg !8842
  store i32 %inc, i32* %exp, align 8, !dbg !8842
  %mant1 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %sf, i32 0, i32 1, !dbg !8843
  %2 = load i64, i64* %mant1, align 8, !dbg !8844
  %shr = lshr i64 %2, 1, !dbg !8844
  store i64 %shr, i64* %mant1, align 8, !dbg !8844
  br label %while.cond, !dbg !8845, !llvm.loop !8847

while.end:                                        ; preds = %while.cond
  %mant2 = getelementptr inbounds %struct.SoftFloat_IEEE754, %struct.SoftFloat_IEEE754* %sf, i32 0, i32 1, !dbg !8848
  %3 = load i64, i64* %mant2, align 8, !dbg !8849
  %and = and i64 %3, 8388607, !dbg !8849
  store i64 %and, i64* %mant2, align 8, !dbg !8849
  %4 = bitcast %struct.SoftFloat_IEEE754* %agg.result to i8*, !dbg !8850
  %5 = bitcast %struct.SoftFloat_IEEE754* %sf to i8*, !dbg !8850
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 24, i32 8, i1 false), !dbg !8850
  ret void, !dbg !8851
}

declare void @av_freep(i8*) #3

declare void @ff_bgmc_end(i8**, i32**) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1686, !1687}
!llvm.ident = !{!1688}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !905, globals: !929)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--alsdec.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881, !887, !893}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RA_Flag", file: !888, line: 151, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/alsdec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "RA_FLAG_NONE", value: 0)
!891 = !DIEnumerator(name: "RA_FLAG_FRAMES", value: 1)
!892 = !DIEnumerator(name: "RA_FLAG_HEADER", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !894, line: 49, size: 32, align: 32, elements: !895)
!894 = !DIFile(filename: "./libavutil/crc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!895 = !{!896, !897, !898, !899, !900, !901, !902, !903, !904}
!896 = !DIEnumerator(name: "AV_CRC_8_ATM", value: 0)
!897 = !DIEnumerator(name: "AV_CRC_16_ANSI", value: 1)
!898 = !DIEnumerator(name: "AV_CRC_16_CCITT", value: 2)
!899 = !DIEnumerator(name: "AV_CRC_32_IEEE", value: 3)
!900 = !DIEnumerator(name: "AV_CRC_32_IEEE_LE", value: 4)
!901 = !DIEnumerator(name: "AV_CRC_16_ANSI_LE", value: 5)
!902 = !DIEnumerator(name: "AV_CRC_24_IEEE", value: 6)
!903 = !DIEnumerator(name: "AV_CRC_8_EBU", value: 7)
!904 = !DIEnumerator(name: "AV_CRC_MAX", value: 8)
!905 = !{!906, !907, !908, !911, !918, !920, !922, !925, !927, !928, !919}
!906 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!907 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !909, line: 40, baseType: !910)
!909 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!910 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64, align: 64)
!912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !913)
!913 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !914, line: 221, size: 32, align: 8, elements: !915)
!914 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!915 = !{!916}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !913, file: !914, line: 221, baseType: !917, size: 32, align: 32)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !909, line: 51, baseType: !907)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !909, line: 48, baseType: !919)
!919 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !909, line: 55, baseType: !921)
!921 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64, align: 64)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !909, line: 37, baseType: !924)
!924 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64, align: 64)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !909, line: 38, baseType: !906)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64, align: 64)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64, align: 64)
!929 = !{!930, !1653, !1658, !1665, !1668, !1673, !1677}
!930 = distinct !DIGlobalVariable(name: "ff_als_decoder", scope: !0, file: !888, line: 2134, type: !931, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_als_decoder)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !932)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !933)
!933 = !{!934, !938, !939, !940, !941, !942, !951, !954, !957, !960, !963, !964, !1006, !1014, !1015, !1016, !1018, !1568, !1574, !1582, !1586, !1587, !1624, !1628, !1632, !1633, !1637, !1641, !1642, !1646, !1647, !1648}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !932, file: !14, line: 3475, baseType: !935, size: 64, align: 64)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64, align: 64)
!936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !937)
!937 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !932, file: !14, line: 3480, baseType: !935, size: 64, align: 64, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !932, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !932, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !932, file: !14, line: 3487, baseType: !906, size: 32, align: 32, offset: 192)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !932, file: !14, line: 3488, baseType: !943, size: 64, align: 64, offset: 256)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64, align: 64)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !946, line: 61, baseType: !947)
!946 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !946, line: 58, size: 64, align: 32, elements: !948)
!948 = !{!949, !950}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !947, file: !946, line: 59, baseType: !906, size: 32, align: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !947, file: !946, line: 60, baseType: !906, size: 32, align: 32, offset: 32)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !932, file: !14, line: 3489, baseType: !952, size: 64, align: 64, offset: 320)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64, align: 64)
!953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !932, file: !14, line: 3490, baseType: !955, size: 64, align: 64, offset: 384)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64, align: 64)
!956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !906)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !932, file: !14, line: 3491, baseType: !958, size: 64, align: 64, offset: 448)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64, align: 64)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !932, file: !14, line: 3492, baseType: !961, size: 64, align: 64, offset: 512)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64, align: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !920)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !932, file: !14, line: 3493, baseType: !918, size: 8, align: 8, offset: 576)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !932, file: !14, line: 3494, baseType: !965, size: 64, align: 64, offset: 640)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64, align: 64)
!966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !967)
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !968)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !969)
!969 = !{!970, !971, !976, !980, !981, !982, !983, !987, !993, !995, !999}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !968, file: !691, line: 72, baseType: !935, size: 64, align: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !968, file: !691, line: 78, baseType: !972, size: 64, align: 64, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64, align: 64)
!973 = !DISubroutineType(types: !974)
!974 = !{!935, !975}
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !968, file: !691, line: 85, baseType: !977, size: 64, align: 64, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64, align: 64)
!978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !979)
!979 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !968, file: !691, line: 93, baseType: !906, size: 32, align: 32, offset: 192)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !968, file: !691, line: 99, baseType: !906, size: 32, align: 32, offset: 224)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !968, file: !691, line: 108, baseType: !906, size: 32, align: 32, offset: 256)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !968, file: !691, line: 113, baseType: !984, size: 64, align: 64, offset: 320)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64, align: 64)
!985 = !DISubroutineType(types: !986)
!986 = !{!975, !975, !975}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !968, file: !691, line: 123, baseType: !988, size: 64, align: 64, offset: 384)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DISubroutineType(types: !990)
!990 = !{!991, !991}
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !968, file: !691, line: 130, baseType: !994, size: 32, align: 32, offset: 448)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !968, file: !691, line: 136, baseType: !996, size: 64, align: 64, offset: 512)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64, align: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{!994, !975}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !968, file: !691, line: 142, baseType: !1000, size: 64, align: 64, offset: 576)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64, align: 64)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!906, !1003, !975, !935, !906}
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64, align: 64)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64, align: 64)
!1005 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !932, file: !14, line: 3495, baseType: !1007, size: 64, align: 64, offset: 704)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64, align: 64)
!1008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1010)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1011)
!1011 = !{!1012, !1013}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1010, file: !14, line: 3402, baseType: !906, size: 32, align: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1010, file: !14, line: 3403, baseType: !935, size: 64, align: 64, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !932, file: !14, line: 3507, baseType: !935, size: 64, align: 64, offset: 768)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !932, file: !14, line: 3516, baseType: !906, size: 32, align: 32, offset: 832)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !932, file: !14, line: 3517, baseType: !1017, size: 64, align: 64, offset: 896)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !932, file: !14, line: 3527, baseType: !1019, size: 64, align: 64, offset: 960)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64, align: 64)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!906, !1022}
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64, align: 64)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1024)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1025)
!1025 = !{!1026, !1027, !1028, !1029, !1032, !1033, !1034, !1035, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1314, !1318, !1319, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1506, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1024, file: !14, line: 1561, baseType: !965, size: 64, align: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1024, file: !14, line: 1562, baseType: !906, size: 32, align: 32, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1024, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1024, file: !14, line: 1565, baseType: !1030, size: 64, align: 64, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1024, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1024, file: !14, line: 1581, baseType: !907, size: 32, align: 32, offset: 224)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1024, file: !14, line: 1583, baseType: !975, size: 64, align: 64, offset: 256)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1024, file: !14, line: 1591, baseType: !1036, size: 64, align: 64, offset: 320)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64, align: 64)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1038, line: 129, size: 1664, align: 64, elements: !1039)
!1038 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1039 = !{!1040, !1041, !1042, !1043, !1140, !1161, !1162, !1191, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1037, file: !1038, line: 136, baseType: !906, size: 32, align: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1037, file: !1038, line: 151, baseType: !906, size: 32, align: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1037, file: !1038, line: 157, baseType: !906, size: 32, align: 32, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1037, file: !1038, line: 159, baseType: !1044, size: 64, align: 64, offset: 128)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64, align: 64)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1047)
!1047 = !{!1048, !1052, !1054, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1092, !1094, !1095, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1128, !1129, !1130, !1131, !1132, !1133, !1136, !1137, !1138, !1139}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1046, file: !722, line: 282, baseType: !1049, size: 512, align: 64)
!1049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !927, size: 512, align: 64, elements: !1050)
!1050 = !{!1051}
!1051 = !DISubrange(count: 8)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1046, file: !722, line: 299, baseType: !1053, size: 256, align: 32, offset: 512)
!1053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !906, size: 256, align: 32, elements: !1050)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1046, file: !722, line: 315, baseType: !1055, size: 64, align: 64, offset: 768)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64, align: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1046, file: !722, line: 326, baseType: !906, size: 32, align: 32, offset: 832)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1046, file: !722, line: 326, baseType: !906, size: 32, align: 32, offset: 864)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1046, file: !722, line: 334, baseType: !906, size: 32, align: 32, offset: 896)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1046, file: !722, line: 341, baseType: !906, size: 32, align: 32, offset: 928)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1046, file: !722, line: 346, baseType: !906, size: 32, align: 32, offset: 960)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1046, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1046, file: !722, line: 356, baseType: !945, size: 64, align: 32, offset: 1024)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1046, file: !722, line: 361, baseType: !908, size: 64, align: 64, offset: 1088)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1046, file: !722, line: 369, baseType: !908, size: 64, align: 64, offset: 1152)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1046, file: !722, line: 377, baseType: !908, size: 64, align: 64, offset: 1216)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1046, file: !722, line: 382, baseType: !906, size: 32, align: 32, offset: 1280)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1046, file: !722, line: 386, baseType: !906, size: 32, align: 32, offset: 1312)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1046, file: !722, line: 391, baseType: !906, size: 32, align: 32, offset: 1344)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1046, file: !722, line: 396, baseType: !975, size: 64, align: 64, offset: 1408)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1046, file: !722, line: 403, baseType: !1071, size: 512, align: 64, offset: 1472)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 512, align: 64, elements: !1050)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1046, file: !722, line: 410, baseType: !906, size: 32, align: 32, offset: 1984)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1046, file: !722, line: 415, baseType: !906, size: 32, align: 32, offset: 2016)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1046, file: !722, line: 420, baseType: !906, size: 32, align: 32, offset: 2048)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1046, file: !722, line: 425, baseType: !906, size: 32, align: 32, offset: 2080)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1046, file: !722, line: 435, baseType: !908, size: 64, align: 64, offset: 2112)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1046, file: !722, line: 440, baseType: !906, size: 32, align: 32, offset: 2176)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1046, file: !722, line: 445, baseType: !920, size: 64, align: 64, offset: 2240)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1046, file: !722, line: 459, baseType: !1080, size: 512, align: 64, offset: 2304)
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1081, size: 512, align: 64, elements: !1050)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1083, line: 94, baseType: !1084)
!1083 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1083, line: 81, size: 192, align: 64, elements: !1085)
!1085 = !{!1086, !1090, !1091}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1084, file: !1083, line: 82, baseType: !1087, size: 64, align: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64, align: 64)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1083, line: 73, baseType: !1089)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1083, line: 73, flags: DIFlagFwdDecl)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1084, file: !1083, line: 89, baseType: !927, size: 64, align: 64, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1084, file: !1083, line: 93, baseType: !906, size: 32, align: 32, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1046, file: !722, line: 473, baseType: !1093, size: 64, align: 64, offset: 2816)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64, align: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1046, file: !722, line: 477, baseType: !906, size: 32, align: 32, offset: 2880)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1046, file: !722, line: 479, baseType: !1096, size: 64, align: 64, offset: 2944)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64, align: 64)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1104, !1109}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1099, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1099, file: !722, line: 203, baseType: !927, size: 64, align: 64, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1099, file: !722, line: 204, baseType: !906, size: 32, align: 32, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1099, file: !722, line: 205, baseType: !1105, size: 64, align: 64, offset: 192)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64, align: 64)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1107, line: 86, baseType: !1108)
!1107 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1107, line: 86, flags: DIFlagFwdDecl)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1099, file: !722, line: 206, baseType: !1081, size: 64, align: 64, offset: 256)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1046, file: !722, line: 480, baseType: !906, size: 32, align: 32, offset: 3008)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1046, file: !722, line: 505, baseType: !906, size: 32, align: 32, offset: 3040)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1046, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1046, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1046, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1046, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1046, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1046, file: !722, line: 532, baseType: !908, size: 64, align: 64, offset: 3264)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1046, file: !722, line: 539, baseType: !908, size: 64, align: 64, offset: 3328)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1046, file: !722, line: 547, baseType: !908, size: 64, align: 64, offset: 3392)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1046, file: !722, line: 554, baseType: !1105, size: 64, align: 64, offset: 3456)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1046, file: !722, line: 563, baseType: !906, size: 32, align: 32, offset: 3520)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1046, file: !722, line: 572, baseType: !906, size: 32, align: 32, offset: 3552)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1046, file: !722, line: 581, baseType: !906, size: 32, align: 32, offset: 3584)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1046, file: !722, line: 588, baseType: !1125, size: 64, align: 64, offset: 3648)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64, align: 64)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !909, line: 36, baseType: !1127)
!1127 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1046, file: !722, line: 593, baseType: !906, size: 32, align: 32, offset: 3712)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1046, file: !722, line: 596, baseType: !906, size: 32, align: 32, offset: 3744)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1046, file: !722, line: 599, baseType: !1081, size: 64, align: 64, offset: 3776)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1046, file: !722, line: 605, baseType: !1081, size: 64, align: 64, offset: 3840)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1046, file: !722, line: 616, baseType: !1081, size: 64, align: 64, offset: 3904)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1046, file: !722, line: 626, baseType: !1134, size: 64, align: 64, offset: 3968)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1135, line: 216, baseType: !921)
!1135 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1046, file: !722, line: 627, baseType: !1134, size: 64, align: 64, offset: 4032)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1046, file: !722, line: 628, baseType: !1134, size: 64, align: 64, offset: 4096)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1046, file: !722, line: 629, baseType: !1134, size: 64, align: 64, offset: 4160)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1046, file: !722, line: 645, baseType: !1081, size: 64, align: 64, offset: 4224)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1037, file: !1038, line: 161, baseType: !1141, size: 64, align: 64, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1038, line: 117, baseType: !1143)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1038, line: 100, size: 832, align: 64, elements: !1144)
!1144 = !{!1145, !1152, !1153, !1154, !1155, !1156, !1158, !1159, !1160}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1143, file: !1038, line: 105, baseType: !1146, size: 256, align: 64)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1147, size: 256, align: 64, elements: !1150)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64, align: 64)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1083, line: 238, baseType: !1149)
!1149 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1083, line: 238, flags: DIFlagFwdDecl)
!1150 = !{!1151}
!1151 = !DISubrange(count: 4)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1143, file: !1038, line: 110, baseType: !906, size: 32, align: 32, offset: 256)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1143, file: !1038, line: 111, baseType: !906, size: 32, align: 32, offset: 288)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1143, file: !1038, line: 111, baseType: !906, size: 32, align: 32, offset: 320)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1143, file: !1038, line: 112, baseType: !1053, size: 256, align: 32, offset: 352)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1143, file: !1038, line: 113, baseType: !1157, size: 128, align: 32, offset: 608)
!1157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !906, size: 128, align: 32, elements: !1150)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1143, file: !1038, line: 114, baseType: !906, size: 32, align: 32, offset: 736)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1143, file: !1038, line: 115, baseType: !906, size: 32, align: 32, offset: 768)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1143, file: !1038, line: 116, baseType: !906, size: 32, align: 32, offset: 800)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1037, file: !1038, line: 163, baseType: !975, size: 64, align: 64, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1037, file: !1038, line: 165, baseType: !1163, size: 128, align: 64, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1038, line: 122, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1038, line: 119, size: 128, align: 64, elements: !1165)
!1165 = !{!1166, !1190}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1164, file: !1038, line: 120, baseType: !1167, size: 64, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64, align: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1170)
!1170 = !{!1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1186, !1187, !1188, !1189}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1169, file: !14, line: 1451, baseType: !1081, size: 64, align: 64)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1169, file: !14, line: 1461, baseType: !908, size: 64, align: 64, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1169, file: !14, line: 1467, baseType: !908, size: 64, align: 64, offset: 128)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1169, file: !14, line: 1468, baseType: !927, size: 64, align: 64, offset: 192)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1169, file: !14, line: 1469, baseType: !906, size: 32, align: 32, offset: 256)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1169, file: !14, line: 1470, baseType: !906, size: 32, align: 32, offset: 288)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1169, file: !14, line: 1474, baseType: !906, size: 32, align: 32, offset: 320)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1169, file: !14, line: 1479, baseType: !1179, size: 64, align: 64, offset: 384)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1182)
!1182 = !{!1183, !1184, !1185}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1181, file: !14, line: 1412, baseType: !927, size: 64, align: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1181, file: !14, line: 1413, baseType: !906, size: 32, align: 32, offset: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1181, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1169, file: !14, line: 1480, baseType: !906, size: 32, align: 32, offset: 448)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1169, file: !14, line: 1486, baseType: !908, size: 64, align: 64, offset: 512)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1169, file: !14, line: 1488, baseType: !908, size: 64, align: 64, offset: 576)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1169, file: !14, line: 1497, baseType: !908, size: 64, align: 64, offset: 640)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1164, file: !1038, line: 121, baseType: !1044, size: 64, align: 64, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1037, file: !1038, line: 166, baseType: !1192, size: 128, align: 64, offset: 448)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1038, line: 127, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1038, line: 124, size: 128, align: 64, elements: !1194)
!1194 = !{!1195, !1268}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1193, file: !1038, line: 125, baseType: !1196, size: 64, align: 64)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1199)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1200)
!1200 = !{!1201, !1202, !1226, !1230, !1231, !1265, !1266, !1267}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1199, file: !14, line: 5751, baseType: !965, size: 64, align: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1199, file: !14, line: 5756, baseType: !1203, size: 64, align: 64, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64, align: 64)
!1204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1206)
!1206 = !{!1207, !1208, !1211, !1212, !1213, !1217, !1221, !1225}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1205, file: !14, line: 5797, baseType: !935, size: 64, align: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1205, file: !14, line: 5804, baseType: !1209, size: 64, align: 64, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1205, file: !14, line: 5815, baseType: !965, size: 64, align: 64, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1205, file: !14, line: 5825, baseType: !906, size: 32, align: 32, offset: 192)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1205, file: !14, line: 5826, baseType: !1214, size: 64, align: 64, offset: 256)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64, align: 64)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!906, !1197}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1205, file: !14, line: 5827, baseType: !1218, size: 64, align: 64, offset: 320)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64, align: 64)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!906, !1197, !1167}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1205, file: !14, line: 5828, baseType: !1222, size: 64, align: 64, offset: 384)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{null, !1197}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1205, file: !14, line: 5829, baseType: !1222, size: 64, align: 64, offset: 448)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1199, file: !14, line: 5762, baseType: !1227, size: 64, align: 64, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64, align: 64)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1229)
!1229 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1199, file: !14, line: 5768, baseType: !975, size: 64, align: 64, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1199, file: !14, line: 5775, baseType: !1232, size: 64, align: 64, offset: 256)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64, align: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1235)
!1235 = !{!1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1234, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1234, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1234, file: !14, line: 3948, baseType: !917, size: 32, align: 32, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1234, file: !14, line: 3958, baseType: !927, size: 64, align: 64, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1234, file: !14, line: 3962, baseType: !906, size: 32, align: 32, offset: 192)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1234, file: !14, line: 3968, baseType: !906, size: 32, align: 32, offset: 224)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1234, file: !14, line: 3973, baseType: !908, size: 64, align: 64, offset: 256)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1234, file: !14, line: 3986, baseType: !906, size: 32, align: 32, offset: 320)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1234, file: !14, line: 3999, baseType: !906, size: 32, align: 32, offset: 352)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1234, file: !14, line: 4004, baseType: !906, size: 32, align: 32, offset: 384)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1234, file: !14, line: 4005, baseType: !906, size: 32, align: 32, offset: 416)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1234, file: !14, line: 4010, baseType: !906, size: 32, align: 32, offset: 448)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1234, file: !14, line: 4011, baseType: !906, size: 32, align: 32, offset: 480)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1234, file: !14, line: 4020, baseType: !945, size: 64, align: 32, offset: 512)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1234, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1234, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1234, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1234, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1234, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1234, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1234, file: !14, line: 4039, baseType: !906, size: 32, align: 32, offset: 768)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1234, file: !14, line: 4046, baseType: !920, size: 64, align: 64, offset: 832)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1234, file: !14, line: 4050, baseType: !906, size: 32, align: 32, offset: 896)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1234, file: !14, line: 4054, baseType: !906, size: 32, align: 32, offset: 928)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1234, file: !14, line: 4061, baseType: !906, size: 32, align: 32, offset: 960)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1234, file: !14, line: 4065, baseType: !906, size: 32, align: 32, offset: 992)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1234, file: !14, line: 4073, baseType: !906, size: 32, align: 32, offset: 1024)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1234, file: !14, line: 4080, baseType: !906, size: 32, align: 32, offset: 1056)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1234, file: !14, line: 4084, baseType: !906, size: 32, align: 32, offset: 1088)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1199, file: !14, line: 5781, baseType: !1232, size: 64, align: 64, offset: 320)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1199, file: !14, line: 5787, baseType: !945, size: 64, align: 32, offset: 384)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1199, file: !14, line: 5793, baseType: !945, size: 64, align: 32, offset: 448)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1193, file: !1038, line: 126, baseType: !906, size: 32, align: 32, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1037, file: !1038, line: 172, baseType: !1167, size: 64, align: 64, offset: 576)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1037, file: !1038, line: 177, baseType: !927, size: 64, align: 64, offset: 640)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1037, file: !1038, line: 178, baseType: !907, size: 32, align: 32, offset: 704)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1037, file: !1038, line: 180, baseType: !975, size: 64, align: 64, offset: 768)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1037, file: !1038, line: 185, baseType: !906, size: 32, align: 32, offset: 832)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1037, file: !1038, line: 190, baseType: !975, size: 64, align: 64, offset: 896)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1037, file: !1038, line: 195, baseType: !906, size: 32, align: 32, offset: 960)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1037, file: !1038, line: 200, baseType: !1167, size: 64, align: 64, offset: 1024)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1037, file: !1038, line: 201, baseType: !906, size: 32, align: 32, offset: 1088)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1037, file: !1038, line: 202, baseType: !1044, size: 64, align: 64, offset: 1152)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1037, file: !1038, line: 203, baseType: !906, size: 32, align: 32, offset: 1216)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1037, file: !1038, line: 205, baseType: !906, size: 32, align: 32, offset: 1248)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1037, file: !1038, line: 206, baseType: !906, size: 32, align: 32, offset: 1280)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1037, file: !1038, line: 209, baseType: !1134, size: 64, align: 64, offset: 1344)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1037, file: !1038, line: 212, baseType: !1134, size: 64, align: 64, offset: 1408)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1037, file: !1038, line: 213, baseType: !1044, size: 64, align: 64, offset: 1472)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1037, file: !1038, line: 215, baseType: !906, size: 32, align: 32, offset: 1536)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1037, file: !1038, line: 217, baseType: !906, size: 32, align: 32, offset: 1568)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1037, file: !1038, line: 220, baseType: !906, size: 32, align: 32, offset: 1600)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1024, file: !14, line: 1598, baseType: !975, size: 64, align: 64, offset: 384)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1024, file: !14, line: 1606, baseType: !908, size: 64, align: 64, offset: 448)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1024, file: !14, line: 1614, baseType: !906, size: 32, align: 32, offset: 512)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1024, file: !14, line: 1622, baseType: !906, size: 32, align: 32, offset: 544)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1024, file: !14, line: 1628, baseType: !906, size: 32, align: 32, offset: 576)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1024, file: !14, line: 1636, baseType: !906, size: 32, align: 32, offset: 608)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1024, file: !14, line: 1643, baseType: !906, size: 32, align: 32, offset: 640)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1024, file: !14, line: 1657, baseType: !927, size: 64, align: 64, offset: 704)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1024, file: !14, line: 1658, baseType: !906, size: 32, align: 32, offset: 768)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1024, file: !14, line: 1679, baseType: !945, size: 64, align: 32, offset: 800)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1024, file: !14, line: 1688, baseType: !906, size: 32, align: 32, offset: 864)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1024, file: !14, line: 1712, baseType: !906, size: 32, align: 32, offset: 896)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1024, file: !14, line: 1729, baseType: !906, size: 32, align: 32, offset: 928)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1024, file: !14, line: 1729, baseType: !906, size: 32, align: 32, offset: 960)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1024, file: !14, line: 1744, baseType: !906, size: 32, align: 32, offset: 992)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1024, file: !14, line: 1744, baseType: !906, size: 32, align: 32, offset: 1024)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1024, file: !14, line: 1751, baseType: !906, size: 32, align: 32, offset: 1056)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1024, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1024, file: !14, line: 1791, baseType: !1307, size: 64, align: 64, offset: 1152)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64, align: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{null, !1310, !1311, !1313, !906, !906, !906}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64, align: 64)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64, align: 64)
!1312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64, align: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1024, file: !14, line: 1808, baseType: !1315, size: 64, align: 64, offset: 1216)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!473, !1310, !952}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1024, file: !14, line: 1816, baseType: !906, size: 32, align: 32, offset: 1280)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1024, file: !14, line: 1825, baseType: !1320, size: 32, align: 32, offset: 1312)
!1320 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1024, file: !14, line: 1830, baseType: !906, size: 32, align: 32, offset: 1344)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1024, file: !14, line: 1838, baseType: !1320, size: 32, align: 32, offset: 1376)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1024, file: !14, line: 1846, baseType: !906, size: 32, align: 32, offset: 1408)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1024, file: !14, line: 1851, baseType: !906, size: 32, align: 32, offset: 1440)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1024, file: !14, line: 1861, baseType: !1320, size: 32, align: 32, offset: 1472)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1024, file: !14, line: 1868, baseType: !1320, size: 32, align: 32, offset: 1504)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1024, file: !14, line: 1875, baseType: !1320, size: 32, align: 32, offset: 1536)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1024, file: !14, line: 1882, baseType: !1320, size: 32, align: 32, offset: 1568)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1024, file: !14, line: 1889, baseType: !1320, size: 32, align: 32, offset: 1600)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1024, file: !14, line: 1896, baseType: !1320, size: 32, align: 32, offset: 1632)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1024, file: !14, line: 1903, baseType: !1320, size: 32, align: 32, offset: 1664)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1024, file: !14, line: 1910, baseType: !906, size: 32, align: 32, offset: 1696)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1024, file: !14, line: 1915, baseType: !906, size: 32, align: 32, offset: 1728)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1024, file: !14, line: 1926, baseType: !1313, size: 64, align: 64, offset: 1792)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1024, file: !14, line: 1935, baseType: !945, size: 64, align: 32, offset: 1856)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1024, file: !14, line: 1942, baseType: !906, size: 32, align: 32, offset: 1920)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1024, file: !14, line: 1948, baseType: !906, size: 32, align: 32, offset: 1952)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1024, file: !14, line: 1954, baseType: !906, size: 32, align: 32, offset: 1984)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1024, file: !14, line: 1960, baseType: !906, size: 32, align: 32, offset: 2016)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1024, file: !14, line: 1984, baseType: !906, size: 32, align: 32, offset: 2048)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1024, file: !14, line: 1991, baseType: !906, size: 32, align: 32, offset: 2080)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1024, file: !14, line: 1996, baseType: !906, size: 32, align: 32, offset: 2112)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1024, file: !14, line: 2004, baseType: !906, size: 32, align: 32, offset: 2144)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1024, file: !14, line: 2011, baseType: !906, size: 32, align: 32, offset: 2176)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1024, file: !14, line: 2018, baseType: !906, size: 32, align: 32, offset: 2208)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1024, file: !14, line: 2027, baseType: !906, size: 32, align: 32, offset: 2240)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1024, file: !14, line: 2034, baseType: !906, size: 32, align: 32, offset: 2272)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1024, file: !14, line: 2044, baseType: !906, size: 32, align: 32, offset: 2304)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1024, file: !14, line: 2054, baseType: !1350, size: 64, align: 64, offset: 2368)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64, align: 64)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !909, line: 49, baseType: !1352)
!1352 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1024, file: !14, line: 2061, baseType: !1350, size: 64, align: 64, offset: 2432)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1024, file: !14, line: 2066, baseType: !906, size: 32, align: 32, offset: 2496)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1024, file: !14, line: 2070, baseType: !906, size: 32, align: 32, offset: 2528)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1024, file: !14, line: 2078, baseType: !906, size: 32, align: 32, offset: 2560)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1024, file: !14, line: 2085, baseType: !906, size: 32, align: 32, offset: 2592)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1024, file: !14, line: 2092, baseType: !906, size: 32, align: 32, offset: 2624)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1024, file: !14, line: 2099, baseType: !906, size: 32, align: 32, offset: 2656)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1024, file: !14, line: 2106, baseType: !906, size: 32, align: 32, offset: 2688)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1024, file: !14, line: 2113, baseType: !906, size: 32, align: 32, offset: 2720)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1024, file: !14, line: 2120, baseType: !906, size: 32, align: 32, offset: 2752)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1024, file: !14, line: 2125, baseType: !906, size: 32, align: 32, offset: 2784)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1024, file: !14, line: 2133, baseType: !906, size: 32, align: 32, offset: 2816)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1024, file: !14, line: 2140, baseType: !906, size: 32, align: 32, offset: 2848)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1024, file: !14, line: 2145, baseType: !906, size: 32, align: 32, offset: 2880)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1024, file: !14, line: 2153, baseType: !906, size: 32, align: 32, offset: 2912)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1024, file: !14, line: 2158, baseType: !906, size: 32, align: 32, offset: 2944)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1024, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1024, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1024, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1024, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1024, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1024, file: !14, line: 2203, baseType: !906, size: 32, align: 32, offset: 3136)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1024, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1024, file: !14, line: 2212, baseType: !906, size: 32, align: 32, offset: 3200)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1024, file: !14, line: 2213, baseType: !906, size: 32, align: 32, offset: 3232)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1024, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1024, file: !14, line: 2232, baseType: !906, size: 32, align: 32, offset: 3296)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1024, file: !14, line: 2243, baseType: !906, size: 32, align: 32, offset: 3328)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1024, file: !14, line: 2249, baseType: !906, size: 32, align: 32, offset: 3360)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1024, file: !14, line: 2256, baseType: !906, size: 32, align: 32, offset: 3392)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1024, file: !14, line: 2263, baseType: !920, size: 64, align: 64, offset: 3456)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1024, file: !14, line: 2270, baseType: !920, size: 64, align: 64, offset: 3520)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1024, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1024, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1024, file: !14, line: 2367, baseType: !1388, size: 64, align: 64, offset: 3648)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64, align: 64)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{!906, !1310, !1044, !906}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1024, file: !14, line: 2383, baseType: !906, size: 32, align: 32, offset: 3712)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1024, file: !14, line: 2386, baseType: !1320, size: 32, align: 32, offset: 3744)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1024, file: !14, line: 2387, baseType: !1320, size: 32, align: 32, offset: 3776)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1024, file: !14, line: 2394, baseType: !906, size: 32, align: 32, offset: 3808)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1024, file: !14, line: 2401, baseType: !906, size: 32, align: 32, offset: 3840)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1024, file: !14, line: 2408, baseType: !906, size: 32, align: 32, offset: 3872)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1024, file: !14, line: 2415, baseType: !906, size: 32, align: 32, offset: 3904)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1024, file: !14, line: 2422, baseType: !906, size: 32, align: 32, offset: 3936)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1024, file: !14, line: 2423, baseType: !1400, size: 64, align: 64, offset: 3968)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64, align: 64)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1403)
!1403 = !{!1404, !1405, !1406, !1407}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1402, file: !14, line: 827, baseType: !906, size: 32, align: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1402, file: !14, line: 828, baseType: !906, size: 32, align: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1402, file: !14, line: 829, baseType: !906, size: 32, align: 32, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1402, file: !14, line: 830, baseType: !1320, size: 32, align: 32, offset: 96)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1024, file: !14, line: 2430, baseType: !908, size: 64, align: 64, offset: 4032)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1024, file: !14, line: 2437, baseType: !908, size: 64, align: 64, offset: 4096)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1024, file: !14, line: 2444, baseType: !1320, size: 32, align: 32, offset: 4160)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1024, file: !14, line: 2451, baseType: !1320, size: 32, align: 32, offset: 4192)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1024, file: !14, line: 2458, baseType: !906, size: 32, align: 32, offset: 4224)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1024, file: !14, line: 2469, baseType: !906, size: 32, align: 32, offset: 4256)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1024, file: !14, line: 2475, baseType: !906, size: 32, align: 32, offset: 4288)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1024, file: !14, line: 2481, baseType: !906, size: 32, align: 32, offset: 4320)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1024, file: !14, line: 2485, baseType: !906, size: 32, align: 32, offset: 4352)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1024, file: !14, line: 2489, baseType: !906, size: 32, align: 32, offset: 4384)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1024, file: !14, line: 2493, baseType: !906, size: 32, align: 32, offset: 4416)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1024, file: !14, line: 2501, baseType: !906, size: 32, align: 32, offset: 4448)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1024, file: !14, line: 2506, baseType: !906, size: 32, align: 32, offset: 4480)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1024, file: !14, line: 2510, baseType: !906, size: 32, align: 32, offset: 4512)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1024, file: !14, line: 2514, baseType: !908, size: 64, align: 64, offset: 4544)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1024, file: !14, line: 2528, baseType: !1424, size: 64, align: 64, offset: 4608)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64, align: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{null, !1310, !975, !906, !906}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1024, file: !14, line: 2534, baseType: !906, size: 32, align: 32, offset: 4672)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1024, file: !14, line: 2545, baseType: !906, size: 32, align: 32, offset: 4704)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1024, file: !14, line: 2547, baseType: !906, size: 32, align: 32, offset: 4736)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1024, file: !14, line: 2549, baseType: !906, size: 32, align: 32, offset: 4768)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1024, file: !14, line: 2551, baseType: !906, size: 32, align: 32, offset: 4800)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1024, file: !14, line: 2553, baseType: !906, size: 32, align: 32, offset: 4832)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1024, file: !14, line: 2555, baseType: !906, size: 32, align: 32, offset: 4864)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1024, file: !14, line: 2557, baseType: !906, size: 32, align: 32, offset: 4896)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1024, file: !14, line: 2559, baseType: !906, size: 32, align: 32, offset: 4928)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1024, file: !14, line: 2563, baseType: !906, size: 32, align: 32, offset: 4960)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1024, file: !14, line: 2571, baseType: !1438, size: 64, align: 64, offset: 4992)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64, align: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1024, file: !14, line: 2579, baseType: !1438, size: 64, align: 64, offset: 5056)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1024, file: !14, line: 2586, baseType: !906, size: 32, align: 32, offset: 5120)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1024, file: !14, line: 2615, baseType: !906, size: 32, align: 32, offset: 5152)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1024, file: !14, line: 2627, baseType: !906, size: 32, align: 32, offset: 5184)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1024, file: !14, line: 2637, baseType: !906, size: 32, align: 32, offset: 5216)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1024, file: !14, line: 2681, baseType: !906, size: 32, align: 32, offset: 5248)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1024, file: !14, line: 2709, baseType: !908, size: 64, align: 64, offset: 5312)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1024, file: !14, line: 2716, baseType: !1447, size: 64, align: 64, offset: 5376)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64, align: 64)
!1448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1449)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1454, !1455, !1456, !1460, !1466, !1470, !1471, !1472, !1473, !1479, !1480, !1481, !1482, !1483}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1449, file: !14, line: 3642, baseType: !935, size: 64, align: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1449, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1449, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1449, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1449, file: !14, line: 3669, baseType: !906, size: 32, align: 32, offset: 160)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1449, file: !14, line: 3682, baseType: !1457, size: 64, align: 64, offset: 192)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64, align: 64)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!906, !1022, !1044}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1449, file: !14, line: 3698, baseType: !1461, size: 64, align: 64, offset: 256)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64, align: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!906, !1022, !1464, !917}
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64, align: 64)
!1465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1449, file: !14, line: 3712, baseType: !1467, size: 64, align: 64, offset: 320)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64, align: 64)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!906, !1022, !906, !1464, !917}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1449, file: !14, line: 3726, baseType: !1461, size: 64, align: 64, offset: 384)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1449, file: !14, line: 3737, baseType: !1019, size: 64, align: 64, offset: 448)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1449, file: !14, line: 3746, baseType: !906, size: 32, align: 32, offset: 512)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1449, file: !14, line: 3757, baseType: !1474, size: 64, align: 64, offset: 576)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64, align: 64)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{null, !1477}
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64, align: 64)
!1478 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1449, file: !14, line: 3766, baseType: !1019, size: 64, align: 64, offset: 640)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1449, file: !14, line: 3774, baseType: !1019, size: 64, align: 64, offset: 704)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1449, file: !14, line: 3780, baseType: !906, size: 32, align: 32, offset: 768)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1449, file: !14, line: 3785, baseType: !906, size: 32, align: 32, offset: 800)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1449, file: !14, line: 3795, baseType: !1484, size: 64, align: 64, offset: 832)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64, align: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!906, !1022, !1081}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1024, file: !14, line: 2728, baseType: !975, size: 64, align: 64, offset: 5440)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1024, file: !14, line: 2735, baseType: !1071, size: 512, align: 64, offset: 5504)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1024, file: !14, line: 2742, baseType: !906, size: 32, align: 32, offset: 6016)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1024, file: !14, line: 2755, baseType: !906, size: 32, align: 32, offset: 6048)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1024, file: !14, line: 2776, baseType: !906, size: 32, align: 32, offset: 6080)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1024, file: !14, line: 2783, baseType: !906, size: 32, align: 32, offset: 6112)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1024, file: !14, line: 2791, baseType: !906, size: 32, align: 32, offset: 6144)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1024, file: !14, line: 2802, baseType: !1044, size: 64, align: 64, offset: 6208)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1024, file: !14, line: 2811, baseType: !906, size: 32, align: 32, offset: 6272)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1024, file: !14, line: 2821, baseType: !906, size: 32, align: 32, offset: 6304)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1024, file: !14, line: 2830, baseType: !906, size: 32, align: 32, offset: 6336)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1024, file: !14, line: 2840, baseType: !906, size: 32, align: 32, offset: 6368)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1024, file: !14, line: 2851, baseType: !1500, size: 64, align: 64, offset: 6400)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64, align: 64)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!906, !1310, !1503, !975, !1313, !906, !906}
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64, align: 64)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!906, !1310, !975}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1024, file: !14, line: 2871, baseType: !1507, size: 64, align: 64, offset: 6464)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64, align: 64)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!906, !1310, !1510, !975, !1313, !906}
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64, align: 64)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!906, !1310, !975, !906, !906}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1024, file: !14, line: 2878, baseType: !906, size: 32, align: 32, offset: 6528)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1024, file: !14, line: 2885, baseType: !906, size: 32, align: 32, offset: 6560)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1024, file: !14, line: 3005, baseType: !906, size: 32, align: 32, offset: 6592)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1024, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1024, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1024, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1024, file: !14, line: 3037, baseType: !927, size: 64, align: 64, offset: 6720)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1024, file: !14, line: 3038, baseType: !906, size: 32, align: 32, offset: 6784)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1024, file: !14, line: 3050, baseType: !920, size: 64, align: 64, offset: 6848)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1024, file: !14, line: 3065, baseType: !906, size: 32, align: 32, offset: 6912)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1024, file: !14, line: 3083, baseType: !906, size: 32, align: 32, offset: 6944)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1024, file: !14, line: 3092, baseType: !945, size: 64, align: 32, offset: 6976)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1024, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1024, file: !14, line: 3106, baseType: !945, size: 64, align: 32, offset: 7072)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1024, file: !14, line: 3113, baseType: !1528, size: 64, align: 64, offset: 7168)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64, align: 64)
!1529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1530)
!1530 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1531)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1532)
!1532 = !{!1533, !1534, !1535, !1536, !1537, !1538, !1541}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1531, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1531, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1531, file: !14, line: 720, baseType: !935, size: 64, align: 64, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1531, file: !14, line: 724, baseType: !935, size: 64, align: 64, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1531, file: !14, line: 728, baseType: !906, size: 32, align: 32, offset: 192)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1531, file: !14, line: 734, baseType: !1539, size: 64, align: 64, offset: 256)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64, align: 64)
!1540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1531, file: !14, line: 739, baseType: !1542, size: 64, align: 64, offset: 320)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64, align: 64)
!1543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1024, file: !14, line: 3129, baseType: !908, size: 64, align: 64, offset: 7232)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1024, file: !14, line: 3130, baseType: !908, size: 64, align: 64, offset: 7296)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1024, file: !14, line: 3131, baseType: !908, size: 64, align: 64, offset: 7360)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1024, file: !14, line: 3132, baseType: !908, size: 64, align: 64, offset: 7424)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1024, file: !14, line: 3139, baseType: !1438, size: 64, align: 64, offset: 7488)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1024, file: !14, line: 3147, baseType: !906, size: 32, align: 32, offset: 7552)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1024, file: !14, line: 3165, baseType: !906, size: 32, align: 32, offset: 7584)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1024, file: !14, line: 3172, baseType: !906, size: 32, align: 32, offset: 7616)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1024, file: !14, line: 3180, baseType: !906, size: 32, align: 32, offset: 7648)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1024, file: !14, line: 3191, baseType: !1350, size: 64, align: 64, offset: 7680)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1024, file: !14, line: 3199, baseType: !927, size: 64, align: 64, offset: 7744)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1024, file: !14, line: 3207, baseType: !1438, size: 64, align: 64, offset: 7808)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1024, file: !14, line: 3214, baseType: !907, size: 32, align: 32, offset: 7872)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1024, file: !14, line: 3224, baseType: !1179, size: 64, align: 64, offset: 7936)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1024, file: !14, line: 3225, baseType: !906, size: 32, align: 32, offset: 8000)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1024, file: !14, line: 3249, baseType: !1081, size: 64, align: 64, offset: 8064)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1024, file: !14, line: 3256, baseType: !906, size: 32, align: 32, offset: 8128)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1024, file: !14, line: 3271, baseType: !906, size: 32, align: 32, offset: 8160)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1024, file: !14, line: 3279, baseType: !908, size: 64, align: 64, offset: 8192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1024, file: !14, line: 3301, baseType: !1081, size: 64, align: 64, offset: 8256)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1024, file: !14, line: 3310, baseType: !906, size: 32, align: 32, offset: 8320)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1024, file: !14, line: 3337, baseType: !906, size: 32, align: 32, offset: 8352)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1024, file: !14, line: 3351, baseType: !906, size: 32, align: 32, offset: 8384)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1024, file: !14, line: 3359, baseType: !906, size: 32, align: 32, offset: 8416)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !932, file: !14, line: 3535, baseType: !1569, size: 64, align: 64, offset: 1024)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64, align: 64)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!906, !1022, !1572}
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64, align: 64)
!1573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !932, file: !14, line: 3541, baseType: !1575, size: 64, align: 64, offset: 1088)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64, align: 64)
!1576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1578)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1038, line: 223, size: 128, align: 64, elements: !1579)
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1578, file: !1038, line: 224, baseType: !1464, size: 64, align: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1578, file: !1038, line: 225, baseType: !1464, size: 64, align: 64, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !932, file: !14, line: 3549, baseType: !1583, size: 64, align: 64, offset: 1152)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64, align: 64)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{null, !1017}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !932, file: !14, line: 3551, baseType: !1019, size: 64, align: 64, offset: 1216)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !932, file: !14, line: 3552, baseType: !1588, size: 64, align: 64, offset: 1280)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64, align: 64)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!906, !1022, !927, !906, !1591}
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64, align: 64)
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1598, !1599, !1623}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1593, file: !14, line: 3921, baseType: !1351, size: 16, align: 16)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1593, file: !14, line: 3922, baseType: !917, size: 32, align: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1593, file: !14, line: 3923, baseType: !917, size: 32, align: 32, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1593, file: !14, line: 3924, baseType: !907, size: 32, align: 32, offset: 96)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1593, file: !14, line: 3925, baseType: !1600, size: 64, align: 64, offset: 128)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64, align: 64)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64, align: 64)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1603)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1604)
!1604 = !{!1605, !1606, !1607, !1608, !1609, !1610, !1616, !1618, !1619, !1620, !1621, !1622}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1603, file: !14, line: 3886, baseType: !906, size: 32, align: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1603, file: !14, line: 3887, baseType: !906, size: 32, align: 32, offset: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1603, file: !14, line: 3888, baseType: !906, size: 32, align: 32, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1603, file: !14, line: 3889, baseType: !906, size: 32, align: 32, offset: 96)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1603, file: !14, line: 3890, baseType: !906, size: 32, align: 32, offset: 128)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1603, file: !14, line: 3897, baseType: !1611, size: 768, align: 64, offset: 192)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1613)
!1613 = !{!1614, !1615}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1612, file: !14, line: 3855, baseType: !1049, size: 512, align: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1612, file: !14, line: 3857, baseType: !1053, size: 256, align: 32, offset: 512)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1603, file: !14, line: 3903, baseType: !1617, size: 256, align: 64, offset: 960)
!1617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !927, size: 256, align: 64, elements: !1150)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1603, file: !14, line: 3904, baseType: !1157, size: 128, align: 32, offset: 1216)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1603, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1603, file: !14, line: 3908, baseType: !1438, size: 64, align: 64, offset: 1408)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1603, file: !14, line: 3915, baseType: !1438, size: 64, align: 64, offset: 1472)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1603, file: !14, line: 3917, baseType: !906, size: 32, align: 32, offset: 1536)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1593, file: !14, line: 3926, baseType: !908, size: 64, align: 64, offset: 192)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !932, file: !14, line: 3564, baseType: !1625, size: 64, align: 64, offset: 1344)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64, align: 64)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!906, !1022, !1167, !1311, !1313}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !932, file: !14, line: 3566, baseType: !1629, size: 64, align: 64, offset: 1408)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64, align: 64)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{!906, !1022, !975, !1313, !1167}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !932, file: !14, line: 3567, baseType: !1019, size: 64, align: 64, offset: 1472)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !932, file: !14, line: 3576, baseType: !1634, size: 64, align: 64, offset: 1536)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64, align: 64)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{!906, !1022, !1311}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !932, file: !14, line: 3577, baseType: !1638, size: 64, align: 64, offset: 1600)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64, align: 64)
!1639 = !DISubroutineType(types: !1640)
!1640 = !{!906, !1022, !1167}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !932, file: !14, line: 3584, baseType: !1457, size: 64, align: 64, offset: 1664)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !932, file: !14, line: 3589, baseType: !1643, size: 64, align: 64, offset: 1728)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64, align: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{null, !1022}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !932, file: !14, line: 3594, baseType: !906, size: 32, align: 32, offset: 1792)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !932, file: !14, line: 3600, baseType: !935, size: 64, align: 64, offset: 1856)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !932, file: !14, line: 3609, baseType: !1649, size: 64, align: 64, offset: 1920)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64, align: 64)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64, align: 64)
!1651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1652)
!1652 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1653 = distinct !DIGlobalVariable(name: "parcor_scaled_values", scope: !0, file: !888, line: 71, type: !1654, isLocal: true, isDefinition: true, variable: [128 x i16]* @parcor_scaled_values)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1655, size: 2048, align: 16, elements: !1656)
!1655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !923)
!1656 = !{!1657}
!1657 = !DISubrange(count: 128)
!1658 = distinct !DIGlobalVariable(name: "parcor_rice_table", scope: !0, file: !888, line: 50, type: !1659, isLocal: true, isDefinition: true, variable: [3 x [20 x [2 x i8]]]* @parcor_rice_table)
!1659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1660, size: 960, align: 8, elements: !1661)
!1660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1126)
!1661 = !{!1662, !1663, !1664}
!1662 = !DISubrange(count: 3)
!1663 = !DISubrange(count: 20)
!1664 = !DISubrange(count: 2)
!1665 = distinct !DIGlobalVariable(name: "ltp_gain_values", scope: !0, file: !888, line: 110, type: !1666, isLocal: true, isDefinition: true, variable: [4 x [4 x i8]]* @ltp_gain_values)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1465, size: 128, align: 8, elements: !1667)
!1667 = !{!1151, !1151}
!1668 = distinct !DIGlobalVariable(name: "tail_code", scope: !0, file: !888, line: 131, type: !1669, isLocal: true, isDefinition: true, variable: [16 x [6 x i8]]* @tail_code)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1465, size: 768, align: 8, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DISubrange(count: 16)
!1672 = !DISubrange(count: 6)
!1673 = distinct !DIGlobalVariable(name: "mcc_weightings", scope: !0, file: !888, line: 121, type: !1674, isLocal: true, isDefinition: true, variable: [32 x i16]* @mcc_weightings)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1655, size: 512, align: 16, elements: !1675)
!1675 = !{!1676}
!1676 = !DISubrange(count: 32)
!1677 = distinct !DIGlobalVariable(name: "FLOAT_1", scope: !0, file: !1678, line: 36, type: !1679, isLocal: true, isDefinition: true, variable: %struct.SoftFloat_IEEE754* @FLOAT_1)
!1678 = !DIFile(filename: "./libavutil/softfloat_ieee754.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1680)
!1680 = !DIDerivedType(tag: DW_TAG_typedef, name: "SoftFloat_IEEE754", file: !1678, line: 33, baseType: !1681)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SoftFloat_IEEE754", file: !1678, line: 29, size: 192, align: 64, elements: !1682)
!1682 = !{!1683, !1684, !1685}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1681, file: !1678, line: 30, baseType: !926, size: 32, align: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "mant", scope: !1681, file: !1678, line: 31, baseType: !920, size: 64, align: 64, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1681, file: !1678, line: 32, baseType: !926, size: 32, align: 32, offset: 128)
!1686 = !{i32 2, !"Dwarf Version", i32 4}
!1687 = !{i32 2, !"Debug Info Version", i32 3}
!1688 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1689 = distinct !DISubprogram(name: "decode_init", scope: !888, file: !888, line: 1933, type: !1020, isLocal: true, isDefinition: true, scopeLine: 1934, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!1690 = !{}
!1691 = !DILocalVariable(name: "avctx", arg: 1, scope: !1689, file: !888, line: 1933, type: !1022)
!1692 = !DIExpression()
!1693 = !DILocation(line: 1933, column: 62, scope: !1689)
!1694 = !DILocalVariable(name: "c", scope: !1689, file: !888, line: 1935, type: !907)
!1695 = !DILocation(line: 1935, column: 18, scope: !1689)
!1696 = !DILocalVariable(name: "channel_size", scope: !1689, file: !888, line: 1936, type: !907)
!1697 = !DILocation(line: 1936, column: 18, scope: !1689)
!1698 = !DILocalVariable(name: "num_buffers", scope: !1689, file: !888, line: 1937, type: !906)
!1699 = !DILocation(line: 1937, column: 9, scope: !1689)
!1700 = !DILocalVariable(name: "ret", scope: !1689, file: !888, line: 1937, type: !906)
!1701 = !DILocation(line: 1937, column: 22, scope: !1689)
!1702 = !DILocalVariable(name: "ctx", scope: !1689, file: !888, line: 1938, type: !1703)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64, align: 64)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "ALSDecContext", file: !888, line: 239, baseType: !1705)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ALSDecContext", file: !888, line: 194, size: 3520, align: 64, elements: !1706)
!1706 = !{!1707, !1708, !1734, !1744, !1761, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1779, !1780, !1781, !1782, !1783, !1785, !1786, !1788, !1789, !1790, !1791, !1792, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1834, !1836, !1837, !1838, !1839, !1840, !1842}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1705, file: !888, line: 195, baseType: !1022, size: 64, align: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "sconf", scope: !1705, file: !888, line: 196, baseType: !1709, size: 768, align: 64, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "ALSSpecificConfig", file: !888, line: 181, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ALSSpecificConfig", file: !888, line: 158, size: 768, align: 64, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1710, file: !888, line: 159, baseType: !917, size: 32, align: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !1710, file: !888, line: 160, baseType: !906, size: 32, align: 32, offset: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "floating", scope: !1710, file: !888, line: 161, baseType: !906, size: 32, align: 32, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "msb_first", scope: !1710, file: !888, line: 162, baseType: !906, size: 32, align: 32, offset: 96)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length", scope: !1710, file: !888, line: 163, baseType: !906, size: 32, align: 32, offset: 128)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ra_distance", scope: !1710, file: !888, line: 164, baseType: !906, size: 32, align: 32, offset: 160)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "ra_flag", scope: !1710, file: !888, line: 165, baseType: !887, size: 32, align: 32, offset: 192)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_order", scope: !1710, file: !888, line: 166, baseType: !906, size: 32, align: 32, offset: 224)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "coef_table", scope: !1710, file: !888, line: 167, baseType: !906, size: 32, align: 32, offset: 256)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "long_term_prediction", scope: !1710, file: !888, line: 168, baseType: !906, size: 32, align: 32, offset: 288)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "max_order", scope: !1710, file: !888, line: 169, baseType: !906, size: 32, align: 32, offset: 320)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "block_switching", scope: !1710, file: !888, line: 170, baseType: !906, size: 32, align: 32, offset: 352)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "bgmc", scope: !1710, file: !888, line: 171, baseType: !906, size: 32, align: 32, offset: 384)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "sb_part", scope: !1710, file: !888, line: 172, baseType: !906, size: 32, align: 32, offset: 416)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "joint_stereo", scope: !1710, file: !888, line: 173, baseType: !906, size: 32, align: 32, offset: 448)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "mc_coding", scope: !1710, file: !888, line: 174, baseType: !906, size: 32, align: 32, offset: 480)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !1710, file: !888, line: 175, baseType: !906, size: 32, align: 32, offset: 512)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "chan_sort", scope: !1710, file: !888, line: 176, baseType: !906, size: 32, align: 32, offset: 544)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "rlslms", scope: !1710, file: !888, line: 177, baseType: !906, size: 32, align: 32, offset: 576)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config_info", scope: !1710, file: !888, line: 178, baseType: !906, size: 32, align: 32, offset: 608)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "chan_pos", scope: !1710, file: !888, line: 179, baseType: !1313, size: 64, align: 64, offset: 640)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "crc_enabled", scope: !1710, file: !888, line: 180, baseType: !906, size: 32, align: 32, offset: 704)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1705, file: !888, line: 197, baseType: !1735, size: 256, align: 64, offset: 832)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1736, line: 70, baseType: !1737)
!1736 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1736, line: 61, size: 256, align: 64, elements: !1738)
!1738 = !{!1739, !1740, !1741, !1742, !1743}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1737, file: !1736, line: 62, baseType: !1464, size: 64, align: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1737, file: !1736, line: 62, baseType: !1464, size: 64, align: 64, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1737, file: !1736, line: 67, baseType: !906, size: 32, align: 32, offset: 128)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1737, file: !1736, line: 68, baseType: !906, size: 32, align: 32, offset: 160)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1737, file: !1736, line: 69, baseType: !906, size: 32, align: 32, offset: 192)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !1705, file: !888, line: 198, baseType: !1745, size: 128, align: 64, offset: 1088)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "BswapDSPContext", file: !1746, line: 27, baseType: !1747)
!1746 = !DIFile(filename: "libavcodec/bswapdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BswapDSPContext", file: !1746, line: 24, size: 128, align: 64, elements: !1748)
!1748 = !{!1749, !1755}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "bswap_buf", scope: !1747, file: !1746, line: 25, baseType: !1750, size: 64, align: 64)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64, align: 64)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{null, !928, !1753, !906}
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64, align: 64)
!1754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "bswap16_buf", scope: !1747, file: !1746, line: 26, baseType: !1756, size: 64, align: 64, offset: 64)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64, align: 64)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{null, !1350, !1759, !906}
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64, align: 64)
!1760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1351)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "crc_table", scope: !1705, file: !888, line: 199, baseType: !1762, size: 64, align: 64, offset: 1216)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64, align: 64)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCRC", file: !894, line: 47, baseType: !917)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "crc_org", scope: !1705, file: !888, line: 200, baseType: !917, size: 32, align: 32, offset: 1280)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "crc", scope: !1705, file: !888, line: 201, baseType: !917, size: 32, align: 32, offset: 1312)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_length", scope: !1705, file: !888, line: 202, baseType: !907, size: 32, align: 32, offset: 1344)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "frame_id", scope: !1705, file: !888, line: 203, baseType: !907, size: 32, align: 32, offset: 1376)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "js_switch", scope: !1705, file: !888, line: 204, baseType: !907, size: 32, align: 32, offset: 1408)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "cs_switch", scope: !1705, file: !888, line: 205, baseType: !907, size: 32, align: 32, offset: 1440)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !1705, file: !888, line: 206, baseType: !907, size: 32, align: 32, offset: 1472)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "s_max", scope: !1705, file: !888, line: 207, baseType: !907, size: 32, align: 32, offset: 1504)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "bgmc_lut", scope: !1705, file: !888, line: 208, baseType: !927, size: 64, align: 64, offset: 1536)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "bgmc_lut_status", scope: !1705, file: !888, line: 209, baseType: !1313, size: 64, align: 64, offset: 1600)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_lag_length", scope: !1705, file: !888, line: 210, baseType: !906, size: 32, align: 32, offset: 1664)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "const_block", scope: !1705, file: !888, line: 211, baseType: !1313, size: 64, align: 64, offset: 1728)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "shift_lsbs", scope: !1705, file: !888, line: 212, baseType: !1778, size: 64, align: 64, offset: 1792)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64, align: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "opt_order", scope: !1705, file: !888, line: 213, baseType: !1778, size: 64, align: 64, offset: 1856)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "store_prev_samples", scope: !1705, file: !888, line: 214, baseType: !1313, size: 64, align: 64, offset: 1920)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "use_ltp", scope: !1705, file: !888, line: 215, baseType: !1313, size: 64, align: 64, offset: 1984)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_lag", scope: !1705, file: !888, line: 216, baseType: !1313, size: 64, align: 64, offset: 2048)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_gain", scope: !1705, file: !888, line: 217, baseType: !1784, size: 64, align: 64, offset: 2112)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64, align: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_gain_buffer", scope: !1705, file: !888, line: 218, baseType: !1313, size: 64, align: 64, offset: 2176)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "quant_cof", scope: !1705, file: !888, line: 219, baseType: !1787, size: 64, align: 64, offset: 2240)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64, align: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "quant_cof_buffer", scope: !1705, file: !888, line: 220, baseType: !925, size: 64, align: 64, offset: 2304)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_cof", scope: !1705, file: !888, line: 221, baseType: !1787, size: 64, align: 64, offset: 2368)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_cof_buffer", scope: !1705, file: !888, line: 222, baseType: !925, size: 64, align: 64, offset: 2432)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_cof_reversed_buffer", scope: !1705, file: !888, line: 223, baseType: !925, size: 64, align: 64, offset: 2496)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "chan_data", scope: !1705, file: !888, line: 224, baseType: !1793, size: 64, align: 64, offset: 2560)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64, align: 64)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64, align: 64)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "ALSChannelData", file: !888, line: 191, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ALSChannelData", file: !888, line: 184, size: 352, align: 32, elements: !1797)
!1797 = !{!1798, !1799, !1800, !1801, !1802, !1803}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "stop_flag", scope: !1796, file: !888, line: 185, baseType: !906, size: 32, align: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "master_channel", scope: !1796, file: !888, line: 186, baseType: !906, size: 32, align: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "time_diff_flag", scope: !1796, file: !888, line: 187, baseType: !906, size: 32, align: 32, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "time_diff_sign", scope: !1796, file: !888, line: 188, baseType: !906, size: 32, align: 32, offset: 96)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "time_diff_index", scope: !1796, file: !888, line: 189, baseType: !906, size: 32, align: 32, offset: 128)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "weighting", scope: !1796, file: !888, line: 190, baseType: !1804, size: 192, align: 32, offset: 160)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !906, size: 192, align: 32, elements: !1805)
!1805 = !{!1672}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "chan_data_buffer", scope: !1705, file: !888, line: 225, baseType: !1794, size: 64, align: 64, offset: 2624)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "reverted_channels", scope: !1705, file: !888, line: 226, baseType: !1313, size: 64, align: 64, offset: 2688)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "prev_raw_samples", scope: !1705, file: !888, line: 227, baseType: !925, size: 64, align: 64, offset: 2752)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "raw_samples", scope: !1705, file: !888, line: 228, baseType: !1787, size: 64, align: 64, offset: 2816)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "raw_buffer", scope: !1705, file: !888, line: 229, baseType: !925, size: 64, align: 64, offset: 2880)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "crc_buffer", scope: !1705, file: !888, line: 230, baseType: !927, size: 64, align: 64, offset: 2944)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "mlz", scope: !1705, file: !888, line: 231, baseType: !1813, size: 64, align: 64, offset: 3008)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64, align: 64)
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLZ", file: !1815, line: 56, baseType: !1816)
!1815 = !DIFile(filename: "libavcodec/mlz.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLZ", file: !1815, line: 47, size: 320, align: 64, elements: !1817)
!1817 = !{!1818, !1819, !1820, !1821, !1822, !1823, !1824, !1833}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "dic_code_bit", scope: !1816, file: !1815, line: 48, baseType: !906, size: 32, align: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "current_dic_index_max", scope: !1816, file: !1815, line: 49, baseType: !906, size: 32, align: 32, offset: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "bump_code", scope: !1816, file: !1815, line: 50, baseType: !907, size: 32, align: 32, offset: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flush_code", scope: !1816, file: !1815, line: 51, baseType: !907, size: 32, align: 32, offset: 96)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "next_code", scope: !1816, file: !1815, line: 52, baseType: !906, size: 32, align: 32, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_flag", scope: !1816, file: !1815, line: 53, baseType: !906, size: 32, align: 32, offset: 160)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !1816, file: !1815, line: 54, baseType: !1825, size: 64, align: 64, offset: 192)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64, align: 64)
!1826 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLZDict", file: !1815, line: 43, baseType: !1827)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLZDict", file: !1815, line: 38, size: 128, align: 32, elements: !1828)
!1828 = !{!1829, !1830, !1831, !1832}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "string_code", scope: !1827, file: !1815, line: 39, baseType: !906, size: 32, align: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "parent_code", scope: !1827, file: !1815, line: 40, baseType: !906, size: 32, align: 32, offset: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "char_code", scope: !1827, file: !1815, line: 41, baseType: !906, size: 32, align: 32, offset: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "match_len", scope: !1827, file: !1815, line: 42, baseType: !906, size: 32, align: 32, offset: 96)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1816, file: !1815, line: 55, baseType: !975, size: 64, align: 64, offset: 256)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "acf", scope: !1705, file: !888, line: 232, baseType: !1835, size: 64, align: 64, offset: 3072)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64, align: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "last_acf_mantissa", scope: !1705, file: !888, line: 233, baseType: !1313, size: 64, align: 64, offset: 3136)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "shift_value", scope: !1705, file: !888, line: 234, baseType: !1313, size: 64, align: 64, offset: 3200)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "last_shift_value", scope: !1705, file: !888, line: 235, baseType: !1313, size: 64, align: 64, offset: 3264)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "raw_mantissa", scope: !1705, file: !888, line: 236, baseType: !1784, size: 64, align: 64, offset: 3328)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1705, file: !888, line: 237, baseType: !1841, size: 64, align: 64, offset: 3392)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64, align: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1705, file: !888, line: 238, baseType: !1313, size: 64, align: 64, offset: 3456)
!1843 = !DILocation(line: 1938, column: 20, scope: !1689)
!1844 = !DILocation(line: 1938, column: 26, scope: !1689)
!1845 = !DILocation(line: 1938, column: 33, scope: !1689)
!1846 = !DILocalVariable(name: "sconf", scope: !1689, file: !888, line: 1939, type: !1847)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64, align: 64)
!1848 = !DILocation(line: 1939, column: 24, scope: !1689)
!1849 = !DILocation(line: 1939, column: 33, scope: !1689)
!1850 = !DILocation(line: 1939, column: 38, scope: !1689)
!1851 = !DILocation(line: 1940, column: 18, scope: !1689)
!1852 = !DILocation(line: 1940, column: 5, scope: !1689)
!1853 = !DILocation(line: 1940, column: 10, scope: !1689)
!1854 = !DILocation(line: 1940, column: 16, scope: !1689)
!1855 = !DILocation(line: 1942, column: 10, scope: !1856)
!1856 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 1942, column: 9)
!1857 = !DILocation(line: 1942, column: 17, scope: !1856)
!1858 = !DILocation(line: 1942, column: 9, scope: !1689)
!1859 = !DILocation(line: 1943, column: 16, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1856, file: !888, line: 1942, column: 28)
!1861 = !DILocation(line: 1943, column: 9, scope: !1860)
!1862 = !DILocation(line: 1944, column: 9, scope: !1860)
!1863 = !DILocation(line: 1947, column: 37, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 1947, column: 9)
!1865 = !DILocation(line: 1947, column: 16, scope: !1864)
!1866 = !DILocation(line: 1947, column: 14, scope: !1864)
!1867 = !DILocation(line: 1947, column: 43, scope: !1864)
!1868 = !DILocation(line: 1947, column: 9, scope: !1689)
!1869 = !DILocation(line: 1948, column: 16, scope: !1870)
!1870 = distinct !DILexicalBlock(scope: !1864, file: !888, line: 1947, column: 48)
!1871 = !DILocation(line: 1948, column: 9, scope: !1870)
!1872 = !DILocation(line: 1949, column: 9, scope: !1870)
!1873 = !DILocation(line: 1952, column: 38, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 1952, column: 9)
!1875 = !DILocation(line: 1952, column: 16, scope: !1874)
!1876 = !DILocation(line: 1952, column: 14, scope: !1874)
!1877 = !DILocation(line: 1952, column: 44, scope: !1874)
!1878 = !DILocation(line: 1952, column: 9, scope: !1689)
!1879 = !DILocation(line: 1953, column: 9, scope: !1880)
!1880 = distinct !DILexicalBlock(scope: !1874, file: !888, line: 1952, column: 49)
!1881 = !DILocation(line: 1956, column: 9, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 1956, column: 9)
!1883 = !DILocation(line: 1956, column: 16, scope: !1882)
!1884 = !DILocation(line: 1956, column: 9, scope: !1689)
!1885 = !DILocation(line: 1957, column: 28, scope: !1886)
!1886 = distinct !DILexicalBlock(scope: !1882, file: !888, line: 1956, column: 22)
!1887 = !DILocation(line: 1957, column: 36, scope: !1886)
!1888 = !DILocation(line: 1957, column: 41, scope: !1886)
!1889 = !DILocation(line: 1957, column: 52, scope: !1886)
!1890 = !DILocation(line: 1957, column: 57, scope: !1886)
!1891 = !DILocation(line: 1957, column: 15, scope: !1886)
!1892 = !DILocation(line: 1957, column: 13, scope: !1886)
!1893 = !DILocation(line: 1958, column: 13, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1886, file: !888, line: 1958, column: 13)
!1895 = !DILocation(line: 1958, column: 17, scope: !1894)
!1896 = !DILocation(line: 1958, column: 13, scope: !1886)
!1897 = !DILocation(line: 1959, column: 13, scope: !1894)
!1898 = !DILocation(line: 1960, column: 5, scope: !1886)
!1899 = !DILocation(line: 1961, column: 9, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 1961, column: 9)
!1901 = !DILocation(line: 1961, column: 16, scope: !1900)
!1902 = !DILocation(line: 1961, column: 9, scope: !1689)
!1903 = !DILocation(line: 1962, column: 9, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1900, file: !888, line: 1961, column: 26)
!1905 = !DILocation(line: 1962, column: 16, scope: !1904)
!1906 = !DILocation(line: 1962, column: 27, scope: !1904)
!1907 = !DILocation(line: 1963, column: 9, scope: !1904)
!1908 = !DILocation(line: 1963, column: 16, scope: !1904)
!1909 = !DILocation(line: 1963, column: 36, scope: !1904)
!1910 = !DILocation(line: 1964, column: 5, scope: !1904)
!1911 = !DILocation(line: 1965, column: 29, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !1900, file: !888, line: 1964, column: 12)
!1913 = !DILocation(line: 1965, column: 36, scope: !1912)
!1914 = !DILocation(line: 1965, column: 47, scope: !1912)
!1915 = !DILocation(line: 1965, column: 9, scope: !1912)
!1916 = !DILocation(line: 1965, column: 16, scope: !1912)
!1917 = !DILocation(line: 1965, column: 27, scope: !1912)
!1918 = !DILocation(line: 1967, column: 39, scope: !1912)
!1919 = !DILocation(line: 1967, column: 46, scope: !1912)
!1920 = !DILocation(line: 1967, column: 57, scope: !1912)
!1921 = !DILocation(line: 1967, column: 62, scope: !1912)
!1922 = !DILocation(line: 1967, column: 9, scope: !1912)
!1923 = !DILocation(line: 1967, column: 16, scope: !1912)
!1924 = !DILocation(line: 1967, column: 36, scope: !1912)
!1925 = !DILocation(line: 1968, column: 13, scope: !1926)
!1926 = distinct !DILexicalBlock(scope: !1912, file: !888, line: 1968, column: 13)
!1927 = !DILocation(line: 1968, column: 20, scope: !1926)
!1928 = !DILocation(line: 1968, column: 40, scope: !1926)
!1929 = !DILocation(line: 1968, column: 13, scope: !1912)
!1930 = !DILocation(line: 1969, column: 20, scope: !1931)
!1931 = distinct !DILexicalBlock(scope: !1926, file: !888, line: 1968, column: 46)
!1932 = !DILocation(line: 1970, column: 20, scope: !1931)
!1933 = !DILocation(line: 1970, column: 27, scope: !1931)
!1934 = !DILocation(line: 1969, column: 13, scope: !1931)
!1935 = !DILocation(line: 1971, column: 17, scope: !1931)
!1936 = !DILocation(line: 1972, column: 13, scope: !1931)
!1937 = !DILocation(line: 1979, column: 18, scope: !1689)
!1938 = !DILocation(line: 1979, column: 25, scope: !1689)
!1939 = !DILocation(line: 1979, column: 36, scope: !1689)
!1940 = !DILocation(line: 1979, column: 5, scope: !1689)
!1941 = !DILocation(line: 1979, column: 10, scope: !1689)
!1942 = !DILocation(line: 1979, column: 16, scope: !1689)
!1943 = !DILocation(line: 1982, column: 32, scope: !1689)
!1944 = !DILocation(line: 1982, column: 39, scope: !1689)
!1945 = !DILocation(line: 1982, column: 51, scope: !1689)
!1946 = !DILocation(line: 1982, column: 29, scope: !1689)
!1947 = !DILocation(line: 1983, column: 32, scope: !1689)
!1948 = !DILocation(line: 1983, column: 39, scope: !1689)
!1949 = !DILocation(line: 1983, column: 51, scope: !1689)
!1950 = !DILocation(line: 1982, column: 61, scope: !1689)
!1951 = !DILocation(line: 1982, column: 5, scope: !1689)
!1952 = !DILocation(line: 1982, column: 10, scope: !1689)
!1953 = !DILocation(line: 1982, column: 25, scope: !1689)
!1954 = !DILocation(line: 1986, column: 19, scope: !1689)
!1955 = !DILocation(line: 1986, column: 26, scope: !1689)
!1956 = !DILocation(line: 1986, column: 38, scope: !1957)
!1957 = !DILexicalBlockFile(scope: !1689, file: !888, discriminator: 1)
!1958 = !DILocation(line: 1986, column: 45, scope: !1957)
!1959 = !DILocation(line: 1986, column: 19, scope: !1957)
!1960 = !DILocation(line: 1986, column: 19, scope: !1961)
!1961 = !DILexicalBlockFile(scope: !1689, file: !888, discriminator: 2)
!1962 = !DILocation(line: 1986, column: 19, scope: !1963)
!1963 = !DILexicalBlockFile(scope: !1689, file: !888, discriminator: 3)
!1964 = !DILocation(line: 1986, column: 17, scope: !1963)
!1965 = !DILocation(line: 1988, column: 38, scope: !1689)
!1966 = !DILocation(line: 1988, column: 22, scope: !1689)
!1967 = !DILocation(line: 1988, column: 5, scope: !1689)
!1968 = !DILocation(line: 1988, column: 10, scope: !1689)
!1969 = !DILocation(line: 1988, column: 20, scope: !1689)
!1970 = !DILocation(line: 1989, column: 36, scope: !1689)
!1971 = !DILocation(line: 1989, column: 20, scope: !1689)
!1972 = !DILocation(line: 1989, column: 5, scope: !1689)
!1973 = !DILocation(line: 1989, column: 10, scope: !1689)
!1974 = !DILocation(line: 1989, column: 18, scope: !1689)
!1975 = !DILocation(line: 1990, column: 45, scope: !1689)
!1976 = !DILocation(line: 1990, column: 59, scope: !1689)
!1977 = !DILocation(line: 1990, column: 66, scope: !1689)
!1978 = !DILocation(line: 1990, column: 57, scope: !1689)
!1979 = !DILocation(line: 1990, column: 29, scope: !1689)
!1980 = !DILocation(line: 1990, column: 5, scope: !1689)
!1981 = !DILocation(line: 1990, column: 10, scope: !1689)
!1982 = !DILocation(line: 1990, column: 27, scope: !1689)
!1983 = !DILocation(line: 1992, column: 43, scope: !1689)
!1984 = !DILocation(line: 1992, column: 57, scope: !1689)
!1985 = !DILocation(line: 1992, column: 64, scope: !1689)
!1986 = !DILocation(line: 1992, column: 55, scope: !1689)
!1987 = !DILocation(line: 1992, column: 27, scope: !1689)
!1988 = !DILocation(line: 1992, column: 5, scope: !1689)
!1989 = !DILocation(line: 1992, column: 10, scope: !1689)
!1990 = !DILocation(line: 1992, column: 25, scope: !1689)
!1991 = !DILocation(line: 1994, column: 52, scope: !1689)
!1992 = !DILocation(line: 1994, column: 59, scope: !1689)
!1993 = !DILocation(line: 1994, column: 36, scope: !1689)
!1994 = !DILocation(line: 1994, column: 5, scope: !1689)
!1995 = !DILocation(line: 1994, column: 10, scope: !1689)
!1996 = !DILocation(line: 1994, column: 34, scope: !1689)
!1997 = !DILocation(line: 1997, column: 10, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 1997, column: 9)
!1999 = !DILocation(line: 1997, column: 15, scope: !1998)
!2000 = !DILocation(line: 1997, column: 25, scope: !1998)
!2001 = !DILocation(line: 1997, column: 29, scope: !2002)
!2002 = !DILexicalBlockFile(scope: !1998, file: !888, discriminator: 1)
!2003 = !DILocation(line: 1997, column: 34, scope: !2002)
!2004 = !DILocation(line: 1997, column: 42, scope: !2002)
!2005 = !DILocation(line: 1998, column: 10, scope: !1998)
!2006 = !DILocation(line: 1998, column: 15, scope: !1998)
!2007 = !DILocation(line: 1998, column: 32, scope: !1998)
!2008 = !DILocation(line: 1998, column: 36, scope: !2002)
!2009 = !DILocation(line: 1998, column: 41, scope: !2002)
!2010 = !DILocation(line: 1998, column: 56, scope: !2002)
!2011 = !DILocation(line: 1999, column: 10, scope: !1998)
!2012 = !DILocation(line: 1999, column: 15, scope: !1998)
!2013 = !DILocation(line: 1997, column: 9, scope: !1961)
!2014 = !DILocation(line: 2000, column: 16, scope: !2015)
!2015 = distinct !DILexicalBlock(scope: !1998, file: !888, line: 1999, column: 40)
!2016 = !DILocation(line: 2000, column: 9, scope: !2015)
!2017 = !DILocation(line: 2001, column: 13, scope: !2015)
!2018 = !DILocation(line: 2002, column: 9, scope: !2015)
!2019 = !DILocation(line: 2006, column: 12, scope: !2020)
!2020 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 2006, column: 5)
!2021 = !DILocation(line: 2006, column: 10, scope: !2020)
!2022 = !DILocation(line: 2006, column: 17, scope: !2023)
!2023 = !DILexicalBlockFile(scope: !2024, file: !888, discriminator: 1)
!2024 = distinct !DILexicalBlock(scope: !2020, file: !888, line: 2006, column: 5)
!2025 = !DILocation(line: 2006, column: 21, scope: !2023)
!2026 = !DILocation(line: 2006, column: 19, scope: !2023)
!2027 = !DILocation(line: 2006, column: 5, scope: !2023)
!2028 = !DILocation(line: 2007, column: 29, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !2024, file: !888, line: 2006, column: 39)
!2030 = !DILocation(line: 2007, column: 34, scope: !2029)
!2031 = !DILocation(line: 2007, column: 53, scope: !2029)
!2032 = !DILocation(line: 2007, column: 57, scope: !2029)
!2033 = !DILocation(line: 2007, column: 64, scope: !2029)
!2034 = !DILocation(line: 2007, column: 55, scope: !2029)
!2035 = !DILocation(line: 2007, column: 51, scope: !2029)
!2036 = !DILocation(line: 2007, column: 24, scope: !2029)
!2037 = !DILocation(line: 2007, column: 9, scope: !2029)
!2038 = !DILocation(line: 2007, column: 14, scope: !2029)
!2039 = !DILocation(line: 2007, column: 27, scope: !2029)
!2040 = !DILocation(line: 2008, column: 27, scope: !2029)
!2041 = !DILocation(line: 2008, column: 32, scope: !2029)
!2042 = !DILocation(line: 2008, column: 49, scope: !2029)
!2043 = !DILocation(line: 2008, column: 53, scope: !2029)
!2044 = !DILocation(line: 2008, column: 60, scope: !2029)
!2045 = !DILocation(line: 2008, column: 51, scope: !2029)
!2046 = !DILocation(line: 2008, column: 47, scope: !2029)
!2047 = !DILocation(line: 2008, column: 22, scope: !2029)
!2048 = !DILocation(line: 2008, column: 9, scope: !2029)
!2049 = !DILocation(line: 2008, column: 14, scope: !2029)
!2050 = !DILocation(line: 2008, column: 25, scope: !2029)
!2051 = !DILocation(line: 2009, column: 5, scope: !2029)
!2052 = !DILocation(line: 2006, column: 35, scope: !2053)
!2053 = !DILexicalBlockFile(scope: !2024, file: !888, discriminator: 2)
!2054 = !DILocation(line: 2006, column: 5, scope: !2053)
!2055 = distinct !{!2055, !2056}
!2056 = !DILocation(line: 2006, column: 5, scope: !1689)
!2057 = !DILocation(line: 2012, column: 40, scope: !1689)
!2058 = !DILocation(line: 2012, column: 24, scope: !1689)
!2059 = !DILocation(line: 2012, column: 5, scope: !1689)
!2060 = !DILocation(line: 2012, column: 10, scope: !1689)
!2061 = !DILocation(line: 2012, column: 22, scope: !1689)
!2062 = !DILocation(line: 2013, column: 39, scope: !1689)
!2063 = !DILocation(line: 2013, column: 23, scope: !1689)
!2064 = !DILocation(line: 2013, column: 5, scope: !1689)
!2065 = !DILocation(line: 2013, column: 10, scope: !1689)
!2066 = !DILocation(line: 2013, column: 21, scope: !1689)
!2067 = !DILocation(line: 2014, column: 38, scope: !1689)
!2068 = !DILocation(line: 2014, column: 22, scope: !1689)
!2069 = !DILocation(line: 2014, column: 5, scope: !1689)
!2070 = !DILocation(line: 2014, column: 10, scope: !1689)
!2071 = !DILocation(line: 2014, column: 20, scope: !1689)
!2072 = !DILocation(line: 2015, column: 47, scope: !1689)
!2073 = !DILocation(line: 2015, column: 31, scope: !1689)
!2074 = !DILocation(line: 2015, column: 5, scope: !1689)
!2075 = !DILocation(line: 2015, column: 10, scope: !1689)
!2076 = !DILocation(line: 2015, column: 29, scope: !1689)
!2077 = !DILocation(line: 2016, column: 37, scope: !1689)
!2078 = !DILocation(line: 2016, column: 20, scope: !1689)
!2079 = !DILocation(line: 2016, column: 5, scope: !1689)
!2080 = !DILocation(line: 2016, column: 10, scope: !1689)
!2081 = !DILocation(line: 2016, column: 18, scope: !1689)
!2082 = !DILocation(line: 2017, column: 36, scope: !1689)
!2083 = !DILocation(line: 2017, column: 20, scope: !1689)
!2084 = !DILocation(line: 2017, column: 5, scope: !1689)
!2085 = !DILocation(line: 2017, column: 10, scope: !1689)
!2086 = !DILocation(line: 2017, column: 18, scope: !1689)
!2087 = !DILocation(line: 2018, column: 37, scope: !1689)
!2088 = !DILocation(line: 2018, column: 21, scope: !1689)
!2089 = !DILocation(line: 2018, column: 5, scope: !1689)
!2090 = !DILocation(line: 2018, column: 10, scope: !1689)
!2091 = !DILocation(line: 2018, column: 19, scope: !1689)
!2092 = !DILocation(line: 2019, column: 44, scope: !1689)
!2093 = !DILocation(line: 2019, column: 56, scope: !1689)
!2094 = !DILocation(line: 2019, column: 28, scope: !1689)
!2095 = !DILocation(line: 2019, column: 5, scope: !1689)
!2096 = !DILocation(line: 2019, column: 10, scope: !1689)
!2097 = !DILocation(line: 2019, column: 26, scope: !1689)
!2098 = !DILocation(line: 2021, column: 10, scope: !2099)
!2099 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 2021, column: 9)
!2100 = !DILocation(line: 2021, column: 15, scope: !2099)
!2101 = !DILocation(line: 2021, column: 27, scope: !2099)
!2102 = !DILocation(line: 2021, column: 31, scope: !2103)
!2103 = !DILexicalBlockFile(scope: !2099, file: !888, discriminator: 1)
!2104 = !DILocation(line: 2021, column: 36, scope: !2103)
!2105 = !DILocation(line: 2021, column: 47, scope: !2103)
!2106 = !DILocation(line: 2022, column: 10, scope: !2099)
!2107 = !DILocation(line: 2022, column: 15, scope: !2099)
!2108 = !DILocation(line: 2022, column: 25, scope: !2099)
!2109 = !DILocation(line: 2022, column: 29, scope: !2103)
!2110 = !DILocation(line: 2022, column: 34, scope: !2103)
!2111 = !DILocation(line: 2022, column: 53, scope: !2103)
!2112 = !DILocation(line: 2023, column: 10, scope: !2099)
!2113 = !DILocation(line: 2023, column: 15, scope: !2099)
!2114 = !DILocation(line: 2023, column: 23, scope: !2099)
!2115 = !DILocation(line: 2023, column: 27, scope: !2103)
!2116 = !DILocation(line: 2023, column: 32, scope: !2103)
!2117 = !DILocation(line: 2023, column: 40, scope: !2103)
!2118 = !DILocation(line: 2024, column: 10, scope: !2099)
!2119 = !DILocation(line: 2024, column: 15, scope: !2099)
!2120 = !DILocation(line: 2024, column: 24, scope: !2099)
!2121 = !DILocation(line: 2024, column: 28, scope: !2103)
!2122 = !DILocation(line: 2024, column: 33, scope: !2103)
!2123 = !DILocation(line: 2021, column: 9, scope: !1961)
!2124 = !DILocation(line: 2025, column: 16, scope: !2125)
!2125 = distinct !DILexicalBlock(scope: !2099, file: !888, line: 2024, column: 50)
!2126 = !DILocation(line: 2025, column: 9, scope: !2125)
!2127 = !DILocation(line: 2026, column: 13, scope: !2125)
!2128 = !DILocation(line: 2027, column: 9, scope: !2125)
!2129 = !DILocation(line: 2030, column: 12, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 2030, column: 5)
!2131 = !DILocation(line: 2030, column: 10, scope: !2130)
!2132 = !DILocation(line: 2030, column: 17, scope: !2133)
!2133 = !DILexicalBlockFile(scope: !2134, file: !888, discriminator: 1)
!2134 = distinct !DILexicalBlock(scope: !2130, file: !888, line: 2030, column: 5)
!2135 = !DILocation(line: 2030, column: 21, scope: !2133)
!2136 = !DILocation(line: 2030, column: 19, scope: !2133)
!2137 = !DILocation(line: 2030, column: 5, scope: !2133)
!2138 = !DILocation(line: 2031, column: 28, scope: !2134)
!2139 = !DILocation(line: 2031, column: 33, scope: !2134)
!2140 = !DILocation(line: 2031, column: 51, scope: !2134)
!2141 = !DILocation(line: 2031, column: 53, scope: !2134)
!2142 = !DILocation(line: 2031, column: 49, scope: !2134)
!2143 = !DILocation(line: 2031, column: 23, scope: !2134)
!2144 = !DILocation(line: 2031, column: 9, scope: !2134)
!2145 = !DILocation(line: 2031, column: 14, scope: !2134)
!2146 = !DILocation(line: 2031, column: 26, scope: !2134)
!2147 = !DILocation(line: 2030, column: 35, scope: !2148)
!2148 = !DILexicalBlockFile(scope: !2134, file: !888, discriminator: 2)
!2149 = !DILocation(line: 2030, column: 5, scope: !2148)
!2150 = distinct !{!2150, !2151}
!2151 = !DILocation(line: 2030, column: 5, scope: !1689)
!2152 = !DILocation(line: 2034, column: 9, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 2034, column: 9)
!2154 = !DILocation(line: 2034, column: 16, scope: !2153)
!2155 = !DILocation(line: 2034, column: 9, scope: !1689)
!2156 = !DILocation(line: 2035, column: 50, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2153, file: !888, line: 2034, column: 27)
!2158 = !DILocation(line: 2035, column: 64, scope: !2157)
!2159 = !DILocation(line: 2035, column: 62, scope: !2157)
!2160 = !DILocation(line: 2035, column: 33, scope: !2157)
!2161 = !DILocation(line: 2035, column: 9, scope: !2157)
!2162 = !DILocation(line: 2035, column: 14, scope: !2157)
!2163 = !DILocation(line: 2035, column: 31, scope: !2157)
!2164 = !DILocation(line: 2037, column: 43, scope: !2157)
!2165 = !DILocation(line: 2037, column: 26, scope: !2157)
!2166 = !DILocation(line: 2037, column: 9, scope: !2157)
!2167 = !DILocation(line: 2037, column: 14, scope: !2157)
!2168 = !DILocation(line: 2037, column: 24, scope: !2157)
!2169 = !DILocation(line: 2039, column: 50, scope: !2157)
!2170 = !DILocation(line: 2039, column: 34, scope: !2157)
!2171 = !DILocation(line: 2039, column: 9, scope: !2157)
!2172 = !DILocation(line: 2039, column: 14, scope: !2157)
!2173 = !DILocation(line: 2039, column: 32, scope: !2157)
!2174 = !DILocation(line: 2042, column: 14, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2157, file: !888, line: 2042, column: 13)
!2176 = !DILocation(line: 2042, column: 19, scope: !2175)
!2177 = !DILocation(line: 2042, column: 36, scope: !2175)
!2178 = !DILocation(line: 2042, column: 40, scope: !2179)
!2179 = !DILexicalBlockFile(scope: !2175, file: !888, discriminator: 1)
!2180 = !DILocation(line: 2042, column: 45, scope: !2179)
!2181 = !DILocation(line: 2042, column: 55, scope: !2179)
!2182 = !DILocation(line: 2042, column: 59, scope: !2183)
!2183 = !DILexicalBlockFile(scope: !2175, file: !888, discriminator: 2)
!2184 = !DILocation(line: 2042, column: 64, scope: !2183)
!2185 = !DILocation(line: 2042, column: 13, scope: !2183)
!2186 = !DILocation(line: 2043, column: 20, scope: !2187)
!2187 = distinct !DILexicalBlock(scope: !2175, file: !888, line: 2042, column: 83)
!2188 = !DILocation(line: 2043, column: 13, scope: !2187)
!2189 = !DILocation(line: 2044, column: 17, scope: !2187)
!2190 = !DILocation(line: 2045, column: 13, scope: !2187)
!2191 = !DILocation(line: 2048, column: 16, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2157, file: !888, line: 2048, column: 9)
!2193 = !DILocation(line: 2048, column: 14, scope: !2192)
!2194 = !DILocation(line: 2048, column: 21, scope: !2195)
!2195 = !DILexicalBlockFile(scope: !2196, file: !888, discriminator: 1)
!2196 = distinct !DILexicalBlock(scope: !2192, file: !888, line: 2048, column: 9)
!2197 = !DILocation(line: 2048, column: 25, scope: !2195)
!2198 = !DILocation(line: 2048, column: 23, scope: !2195)
!2199 = !DILocation(line: 2048, column: 9, scope: !2195)
!2200 = !DILocation(line: 2049, column: 33, scope: !2196)
!2201 = !DILocation(line: 2049, column: 38, scope: !2196)
!2202 = !DILocation(line: 2049, column: 57, scope: !2196)
!2203 = !DILocation(line: 2049, column: 61, scope: !2196)
!2204 = !DILocation(line: 2049, column: 59, scope: !2196)
!2205 = !DILocation(line: 2049, column: 55, scope: !2196)
!2206 = !DILocation(line: 2049, column: 28, scope: !2196)
!2207 = !DILocation(line: 2049, column: 13, scope: !2196)
!2208 = !DILocation(line: 2049, column: 18, scope: !2196)
!2209 = !DILocation(line: 2049, column: 31, scope: !2196)
!2210 = !DILocation(line: 2048, column: 39, scope: !2211)
!2211 = !DILexicalBlockFile(scope: !2196, file: !888, discriminator: 2)
!2212 = !DILocation(line: 2048, column: 9, scope: !2211)
!2213 = distinct !{!2213, !2214}
!2214 = !DILocation(line: 2048, column: 9, scope: !2157)
!2215 = !DILocation(line: 2050, column: 5, scope: !2157)
!2216 = !DILocation(line: 2051, column: 9, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2153, file: !888, line: 2050, column: 12)
!2218 = !DILocation(line: 2051, column: 14, scope: !2217)
!2219 = !DILocation(line: 2051, column: 24, scope: !2217)
!2220 = !DILocation(line: 2052, column: 9, scope: !2217)
!2221 = !DILocation(line: 2052, column: 14, scope: !2217)
!2222 = !DILocation(line: 2052, column: 31, scope: !2217)
!2223 = !DILocation(line: 2053, column: 9, scope: !2217)
!2224 = !DILocation(line: 2053, column: 14, scope: !2217)
!2225 = !DILocation(line: 2053, column: 32, scope: !2217)
!2226 = !DILocation(line: 2056, column: 20, scope: !1689)
!2227 = !DILocation(line: 2056, column: 27, scope: !1689)
!2228 = !DILocation(line: 2056, column: 42, scope: !1689)
!2229 = !DILocation(line: 2056, column: 49, scope: !1689)
!2230 = !DILocation(line: 2056, column: 40, scope: !1689)
!2231 = !DILocation(line: 2056, column: 18, scope: !1689)
!2232 = !DILocation(line: 2058, column: 45, scope: !1689)
!2233 = !DILocation(line: 2058, column: 52, scope: !1689)
!2234 = !DILocation(line: 2058, column: 29, scope: !1689)
!2235 = !DILocation(line: 2058, column: 5, scope: !1689)
!2236 = !DILocation(line: 2058, column: 10, scope: !1689)
!2237 = !DILocation(line: 2058, column: 27, scope: !1689)
!2238 = !DILocation(line: 2059, column: 40, scope: !1689)
!2239 = !DILocation(line: 2059, column: 47, scope: !1689)
!2240 = !DILocation(line: 2059, column: 58, scope: !1689)
!2241 = !DILocation(line: 2059, column: 56, scope: !1689)
!2242 = !DILocation(line: 2059, column: 23, scope: !1689)
!2243 = !DILocation(line: 2059, column: 5, scope: !1689)
!2244 = !DILocation(line: 2059, column: 10, scope: !1689)
!2245 = !DILocation(line: 2059, column: 21, scope: !1689)
!2246 = !DILocation(line: 2060, column: 40, scope: !1689)
!2247 = !DILocation(line: 2060, column: 47, scope: !1689)
!2248 = !DILocation(line: 2060, column: 24, scope: !1689)
!2249 = !DILocation(line: 2060, column: 5, scope: !1689)
!2250 = !DILocation(line: 2060, column: 10, scope: !1689)
!2251 = !DILocation(line: 2060, column: 22, scope: !1689)
!2252 = !DILocation(line: 2062, column: 9, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 2062, column: 9)
!2254 = !DILocation(line: 2062, column: 16, scope: !2253)
!2255 = !DILocation(line: 2062, column: 9, scope: !1689)
!2256 = !DILocation(line: 2063, column: 36, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2253, file: !888, line: 2062, column: 26)
!2258 = !DILocation(line: 2063, column: 43, scope: !2257)
!2259 = !DILocation(line: 2063, column: 20, scope: !2257)
!2260 = !DILocation(line: 2063, column: 9, scope: !2257)
!2261 = !DILocation(line: 2063, column: 14, scope: !2257)
!2262 = !DILocation(line: 2063, column: 18, scope: !2257)
!2263 = !DILocation(line: 2064, column: 44, scope: !2257)
!2264 = !DILocation(line: 2064, column: 51, scope: !2257)
!2265 = !DILocation(line: 2064, column: 28, scope: !2257)
!2266 = !DILocation(line: 2064, column: 9, scope: !2257)
!2267 = !DILocation(line: 2064, column: 14, scope: !2257)
!2268 = !DILocation(line: 2064, column: 26, scope: !2257)
!2269 = !DILocation(line: 2065, column: 49, scope: !2257)
!2270 = !DILocation(line: 2065, column: 56, scope: !2257)
!2271 = !DILocation(line: 2065, column: 33, scope: !2257)
!2272 = !DILocation(line: 2065, column: 9, scope: !2257)
!2273 = !DILocation(line: 2065, column: 14, scope: !2257)
!2274 = !DILocation(line: 2065, column: 31, scope: !2257)
!2275 = !DILocation(line: 2066, column: 50, scope: !2257)
!2276 = !DILocation(line: 2066, column: 57, scope: !2257)
!2277 = !DILocation(line: 2066, column: 34, scope: !2257)
!2278 = !DILocation(line: 2066, column: 9, scope: !2257)
!2279 = !DILocation(line: 2066, column: 14, scope: !2257)
!2280 = !DILocation(line: 2066, column: 32, scope: !2257)
!2281 = !DILocation(line: 2067, column: 46, scope: !2257)
!2282 = !DILocation(line: 2067, column: 53, scope: !2257)
!2283 = !DILocation(line: 2067, column: 29, scope: !2257)
!2284 = !DILocation(line: 2067, column: 9, scope: !2257)
!2285 = !DILocation(line: 2067, column: 14, scope: !2257)
!2286 = !DILocation(line: 2067, column: 27, scope: !2257)
!2287 = !DILocation(line: 2069, column: 39, scope: !2257)
!2288 = !DILocation(line: 2069, column: 44, scope: !2257)
!2289 = !DILocation(line: 2069, column: 61, scope: !2257)
!2290 = !DILocation(line: 2069, column: 23, scope: !2257)
!2291 = !DILocation(line: 2069, column: 9, scope: !2257)
!2292 = !DILocation(line: 2069, column: 14, scope: !2257)
!2293 = !DILocation(line: 2069, column: 21, scope: !2257)
!2294 = !DILocation(line: 2070, column: 38, scope: !2257)
!2295 = !DILocation(line: 2070, column: 43, scope: !2257)
!2296 = !DILocation(line: 2070, column: 22, scope: !2257)
!2297 = !DILocation(line: 2070, column: 9, scope: !2257)
!2298 = !DILocation(line: 2070, column: 14, scope: !2257)
!2299 = !DILocation(line: 2070, column: 20, scope: !2257)
!2300 = !DILocation(line: 2071, column: 20, scope: !2257)
!2301 = !DILocation(line: 2071, column: 9, scope: !2257)
!2302 = !DILocation(line: 2071, column: 14, scope: !2257)
!2303 = !DILocation(line: 2071, column: 18, scope: !2257)
!2304 = !DILocation(line: 2073, column: 14, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2257, file: !888, line: 2073, column: 13)
!2306 = !DILocation(line: 2073, column: 19, scope: !2305)
!2307 = !DILocation(line: 2073, column: 23, scope: !2305)
!2308 = !DILocation(line: 2073, column: 27, scope: !2309)
!2309 = !DILexicalBlockFile(scope: !2305, file: !888, discriminator: 1)
!2310 = !DILocation(line: 2073, column: 32, scope: !2309)
!2311 = !DILocation(line: 2073, column: 36, scope: !2309)
!2312 = !DILocation(line: 2073, column: 40, scope: !2313)
!2313 = !DILexicalBlockFile(scope: !2305, file: !888, discriminator: 2)
!2314 = !DILocation(line: 2073, column: 45, scope: !2313)
!2315 = !DILocation(line: 2073, column: 57, scope: !2313)
!2316 = !DILocation(line: 2073, column: 61, scope: !2317)
!2317 = !DILexicalBlockFile(scope: !2305, file: !888, discriminator: 3)
!2318 = !DILocation(line: 2073, column: 66, scope: !2317)
!2319 = !DILocation(line: 2074, column: 13, scope: !2305)
!2320 = !DILocation(line: 2074, column: 17, scope: !2309)
!2321 = !DILocation(line: 2074, column: 22, scope: !2309)
!2322 = !DILocation(line: 2074, column: 40, scope: !2309)
!2323 = !DILocation(line: 2074, column: 44, scope: !2313)
!2324 = !DILocation(line: 2074, column: 49, scope: !2313)
!2325 = !DILocation(line: 2073, column: 13, scope: !2326)
!2326 = !DILexicalBlockFile(scope: !2257, file: !888, discriminator: 4)
!2327 = !DILocation(line: 2075, column: 20, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2305, file: !888, line: 2074, column: 63)
!2329 = !DILocation(line: 2075, column: 13, scope: !2328)
!2330 = !DILocation(line: 2076, column: 17, scope: !2328)
!2331 = !DILocation(line: 2077, column: 13, scope: !2328)
!2332 = !DILocation(line: 2080, column: 26, scope: !2257)
!2333 = !DILocation(line: 2080, column: 33, scope: !2257)
!2334 = !DILocation(line: 2080, column: 38, scope: !2257)
!2335 = !DILocation(line: 2080, column: 9, scope: !2257)
!2336 = !DILocation(line: 2081, column: 27, scope: !2257)
!2337 = !DILocation(line: 2081, column: 32, scope: !2257)
!2338 = !DILocation(line: 2081, column: 9, scope: !2257)
!2339 = !DILocation(line: 2083, column: 16, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2257, file: !888, line: 2083, column: 9)
!2341 = !DILocation(line: 2083, column: 14, scope: !2340)
!2342 = !DILocation(line: 2083, column: 21, scope: !2343)
!2343 = !DILexicalBlockFile(scope: !2344, file: !888, discriminator: 1)
!2344 = distinct !DILexicalBlock(scope: !2340, file: !888, line: 2083, column: 9)
!2345 = !DILocation(line: 2083, column: 25, scope: !2343)
!2346 = !DILocation(line: 2083, column: 32, scope: !2343)
!2347 = !DILocation(line: 2083, column: 23, scope: !2343)
!2348 = !DILocation(line: 2083, column: 9, scope: !2343)
!2349 = !DILocation(line: 2084, column: 53, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2344, file: !888, line: 2083, column: 47)
!2351 = !DILocation(line: 2084, column: 58, scope: !2350)
!2352 = !DILocation(line: 2084, column: 36, scope: !2350)
!2353 = !DILocation(line: 2084, column: 31, scope: !2350)
!2354 = !DILocation(line: 2084, column: 13, scope: !2350)
!2355 = !DILocation(line: 2084, column: 18, scope: !2350)
!2356 = !DILocation(line: 2084, column: 34, scope: !2350)
!2357 = !DILocation(line: 2085, column: 9, scope: !2350)
!2358 = !DILocation(line: 2083, column: 42, scope: !2359)
!2359 = !DILexicalBlockFile(scope: !2344, file: !888, discriminator: 2)
!2360 = !DILocation(line: 2083, column: 9, scope: !2359)
!2361 = distinct !{!2361, !2362}
!2362 = !DILocation(line: 2083, column: 9, scope: !2257)
!2363 = !DILocation(line: 2086, column: 5, scope: !2257)
!2364 = !DILocation(line: 2089, column: 10, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 2089, column: 9)
!2366 = !DILocation(line: 2089, column: 15, scope: !2365)
!2367 = !DILocation(line: 2089, column: 32, scope: !2365)
!2368 = !DILocation(line: 2089, column: 36, scope: !2369)
!2369 = !DILexicalBlockFile(scope: !2365, file: !888, discriminator: 1)
!2370 = !DILocation(line: 2089, column: 41, scope: !2369)
!2371 = !DILocation(line: 2089, column: 51, scope: !2369)
!2372 = !DILocation(line: 2089, column: 55, scope: !2373)
!2373 = !DILexicalBlockFile(scope: !2365, file: !888, discriminator: 2)
!2374 = !DILocation(line: 2089, column: 60, scope: !2373)
!2375 = !DILocation(line: 2089, column: 9, scope: !2373)
!2376 = !DILocation(line: 2090, column: 16, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2365, file: !888, line: 2089, column: 73)
!2378 = !DILocation(line: 2090, column: 9, scope: !2377)
!2379 = !DILocation(line: 2091, column: 13, scope: !2377)
!2380 = !DILocation(line: 2092, column: 9, scope: !2377)
!2381 = !DILocation(line: 2096, column: 27, scope: !1689)
!2382 = !DILocation(line: 2096, column: 32, scope: !1689)
!2383 = !DILocation(line: 2096, column: 45, scope: !1689)
!2384 = !DILocation(line: 2096, column: 52, scope: !1689)
!2385 = !DILocation(line: 2096, column: 43, scope: !1689)
!2386 = !DILocation(line: 2096, column: 5, scope: !1689)
!2387 = !DILocation(line: 2096, column: 10, scope: !1689)
!2388 = !DILocation(line: 2096, column: 25, scope: !1689)
!2389 = !DILocation(line: 2097, column: 12, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 2097, column: 5)
!2391 = !DILocation(line: 2097, column: 10, scope: !2390)
!2392 = !DILocation(line: 2097, column: 17, scope: !2393)
!2393 = !DILexicalBlockFile(scope: !2394, file: !888, discriminator: 1)
!2394 = distinct !DILexicalBlock(scope: !2390, file: !888, line: 2097, column: 5)
!2395 = !DILocation(line: 2097, column: 21, scope: !2393)
!2396 = !DILocation(line: 2097, column: 28, scope: !2393)
!2397 = !DILocation(line: 2097, column: 19, scope: !2393)
!2398 = !DILocation(line: 2097, column: 5, scope: !2393)
!2399 = !DILocation(line: 2098, column: 48, scope: !2394)
!2400 = !DILocation(line: 2098, column: 50, scope: !2394)
!2401 = !DILocation(line: 2098, column: 31, scope: !2394)
!2402 = !DILocation(line: 2098, column: 36, scope: !2394)
!2403 = !DILocation(line: 2098, column: 57, scope: !2394)
!2404 = !DILocation(line: 2098, column: 55, scope: !2394)
!2405 = !DILocation(line: 2098, column: 26, scope: !2394)
!2406 = !DILocation(line: 2098, column: 9, scope: !2394)
!2407 = !DILocation(line: 2098, column: 14, scope: !2394)
!2408 = !DILocation(line: 2098, column: 29, scope: !2394)
!2409 = !DILocation(line: 2097, column: 39, scope: !2410)
!2410 = !DILexicalBlockFile(scope: !2394, file: !888, discriminator: 2)
!2411 = !DILocation(line: 2097, column: 5, scope: !2410)
!2412 = distinct !{!2412, !2413}
!2413 = !DILocation(line: 2097, column: 5, scope: !1689)
!2414 = !DILocation(line: 2101, column: 14, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !1689, file: !888, line: 2101, column: 9)
!2416 = !DILocation(line: 2101, column: 21, scope: !2415)
!2417 = !DILocation(line: 2101, column: 11, scope: !2415)
!2418 = !DILocation(line: 2101, column: 31, scope: !2415)
!2419 = !DILocation(line: 2101, column: 34, scope: !2420)
!2420 = !DILexicalBlockFile(scope: !2415, file: !888, discriminator: 1)
!2421 = !DILocation(line: 2101, column: 41, scope: !2420)
!2422 = !DILocation(line: 2101, column: 53, scope: !2420)
!2423 = !DILocation(line: 2102, column: 10, scope: !2415)
!2424 = !DILocation(line: 2102, column: 17, scope: !2415)
!2425 = !DILocation(line: 2102, column: 33, scope: !2415)
!2426 = !DILocation(line: 2101, column: 9, scope: !1961)
!2427 = !DILocation(line: 2103, column: 43, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2415, file: !888, line: 2102, column: 54)
!2429 = !DILocation(line: 2103, column: 48, scope: !2428)
!2430 = !DILocation(line: 2104, column: 43, scope: !2428)
!2431 = !DILocation(line: 2104, column: 50, scope: !2428)
!2432 = !DILocation(line: 2103, column: 65, scope: !2428)
!2433 = !DILocation(line: 2105, column: 67, scope: !2428)
!2434 = !DILocation(line: 2105, column: 74, scope: !2428)
!2435 = !DILocation(line: 2105, column: 43, scope: !2428)
!2436 = !DILocation(line: 2104, column: 59, scope: !2428)
!2437 = !DILocation(line: 2103, column: 27, scope: !2428)
!2438 = !DILocation(line: 2103, column: 9, scope: !2428)
!2439 = !DILocation(line: 2103, column: 14, scope: !2428)
!2440 = !DILocation(line: 2103, column: 25, scope: !2428)
!2441 = !DILocation(line: 2107, column: 14, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2428, file: !888, line: 2107, column: 13)
!2443 = !DILocation(line: 2107, column: 19, scope: !2442)
!2444 = !DILocation(line: 2107, column: 13, scope: !2428)
!2445 = !DILocation(line: 2108, column: 20, scope: !2446)
!2446 = distinct !DILexicalBlock(scope: !2442, file: !888, line: 2107, column: 31)
!2447 = !DILocation(line: 2108, column: 13, scope: !2446)
!2448 = !DILocation(line: 2109, column: 17, scope: !2446)
!2449 = !DILocation(line: 2110, column: 13, scope: !2446)
!2450 = !DILocation(line: 2112, column: 5, scope: !2428)
!2451 = !DILocation(line: 2114, column: 23, scope: !1689)
!2452 = !DILocation(line: 2114, column: 28, scope: !1689)
!2453 = !DILocation(line: 2114, column: 5, scope: !1689)
!2454 = !DILocation(line: 2116, column: 5, scope: !1689)
!2455 = !DILocation(line: 2119, column: 16, scope: !1689)
!2456 = !DILocation(line: 2119, column: 5, scope: !1689)
!2457 = !DILocation(line: 2120, column: 12, scope: !1689)
!2458 = !DILocation(line: 2120, column: 5, scope: !1689)
!2459 = !DILocation(line: 2121, column: 1, scope: !1689)
!2460 = distinct !DISubprogram(name: "decode_frame", scope: !888, file: !888, line: 1752, type: !1630, isLocal: true, isDefinition: true, scopeLine: 1754, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!2461 = !DILocalVariable(name: "x", arg: 1, scope: !2462, file: !2463, line: 58, type: !1351)
!2462 = distinct !DISubprogram(name: "av_bswap16", scope: !2463, file: !2463, line: 58, type: !2464, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!2463 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2464 = !DISubroutineType(types: !2465)
!2465 = !{!1351, !1351}
!2466 = !DILocation(line: 58, column: 98, scope: !2462, inlinedAt: !2467)
!2467 = distinct !DILocation(line: 1844, column: 35, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2469, file: !888, line: 1841, column: 21)
!2469 = distinct !DILexicalBlock(scope: !2470, file: !888, line: 1841, column: 21)
!2470 = distinct !DILexicalBlock(scope: !2471, file: !888, line: 1838, column: 60)
!2471 = distinct !DILexicalBlock(scope: !2472, file: !888, line: 1838, column: 21)
!2472 = distinct !DILexicalBlock(scope: !2473, file: !888, line: 1837, column: 23)
!2473 = distinct !DILexicalBlock(scope: !2474, file: !888, line: 1837, column: 17)
!2474 = distinct !DILexicalBlock(scope: !2475, file: !888, line: 1834, column: 16)
!2475 = distinct !DILexicalBlock(scope: !2476, file: !888, line: 1817, column: 13)
!2476 = distinct !DILexicalBlock(scope: !2477, file: !888, line: 1814, column: 76)
!2477 = distinct !DILexicalBlock(scope: !2460, file: !888, line: 1814, column: 9)
!2478 = !DILocalVariable(name: "x", arg: 1, scope: !2479, file: !2463, line: 66, type: !917)
!2479 = distinct !DISubprogram(name: "av_bswap32", scope: !2463, file: !2463, line: 66, type: !2480, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!2480 = !DISubroutineType(types: !2481)
!2481 = !{!917, !917}
!2482 = !DILocation(line: 66, column: 98, scope: !2479, inlinedAt: !2483)
!2483 = distinct !DILocation(line: 1826, column: 25, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2485, file: !888, line: 1825, column: 21)
!2485 = distinct !DILexicalBlock(scope: !2486, file: !888, line: 1822, column: 28)
!2486 = distinct !DILexicalBlock(scope: !2487, file: !888, line: 1820, column: 13)
!2487 = distinct !DILexicalBlock(scope: !2488, file: !888, line: 1820, column: 13)
!2488 = distinct !DILexicalBlock(scope: !2475, file: !888, line: 1817, column: 52)
!2489 = !DILocalVariable(name: "avctx", arg: 1, scope: !2460, file: !888, line: 1752, type: !1022)
!2490 = !DILocation(line: 1752, column: 41, scope: !2460)
!2491 = !DILocalVariable(name: "data", arg: 2, scope: !2460, file: !888, line: 1752, type: !975)
!2492 = !DILocation(line: 1752, column: 54, scope: !2460)
!2493 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2460, file: !888, line: 1752, type: !1313)
!2494 = !DILocation(line: 1752, column: 65, scope: !2460)
!2495 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2460, file: !888, line: 1753, type: !1167)
!2496 = !DILocation(line: 1753, column: 35, scope: !2460)
!2497 = !DILocalVariable(name: "ctx", scope: !2460, file: !888, line: 1755, type: !1703)
!2498 = !DILocation(line: 1755, column: 20, scope: !2460)
!2499 = !DILocation(line: 1755, column: 26, scope: !2460)
!2500 = !DILocation(line: 1755, column: 33, scope: !2460)
!2501 = !DILocalVariable(name: "frame", scope: !2460, file: !888, line: 1756, type: !1044)
!2502 = !DILocation(line: 1756, column: 14, scope: !2460)
!2503 = !DILocation(line: 1756, column: 22, scope: !2460)
!2504 = !DILocalVariable(name: "sconf", scope: !2460, file: !888, line: 1757, type: !1847)
!2505 = !DILocation(line: 1757, column: 24, scope: !2460)
!2506 = !DILocation(line: 1757, column: 33, scope: !2460)
!2507 = !DILocation(line: 1757, column: 38, scope: !2460)
!2508 = !DILocalVariable(name: "buffer", scope: !2460, file: !888, line: 1758, type: !1464)
!2509 = !DILocation(line: 1758, column: 20, scope: !2460)
!2510 = !DILocation(line: 1758, column: 29, scope: !2460)
!2511 = !DILocation(line: 1758, column: 36, scope: !2460)
!2512 = !DILocalVariable(name: "buffer_size", scope: !2460, file: !888, line: 1759, type: !906)
!2513 = !DILocation(line: 1759, column: 9, scope: !2460)
!2514 = !DILocation(line: 1759, column: 23, scope: !2460)
!2515 = !DILocation(line: 1759, column: 30, scope: !2460)
!2516 = !DILocalVariable(name: "invalid_frame", scope: !2460, file: !888, line: 1760, type: !906)
!2517 = !DILocation(line: 1760, column: 9, scope: !2460)
!2518 = !DILocalVariable(name: "ret", scope: !2460, file: !888, line: 1760, type: !906)
!2519 = !DILocation(line: 1760, column: 24, scope: !2460)
!2520 = !DILocalVariable(name: "c", scope: !2460, file: !888, line: 1761, type: !907)
!2521 = !DILocation(line: 1761, column: 18, scope: !2460)
!2522 = !DILocalVariable(name: "sample", scope: !2460, file: !888, line: 1761, type: !907)
!2523 = !DILocation(line: 1761, column: 21, scope: !2460)
!2524 = !DILocalVariable(name: "ra_frame", scope: !2460, file: !888, line: 1761, type: !907)
!2525 = !DILocation(line: 1761, column: 29, scope: !2460)
!2526 = !DILocalVariable(name: "bytes_read", scope: !2460, file: !888, line: 1761, type: !907)
!2527 = !DILocation(line: 1761, column: 39, scope: !2460)
!2528 = !DILocalVariable(name: "shift", scope: !2460, file: !888, line: 1761, type: !907)
!2529 = !DILocation(line: 1761, column: 51, scope: !2460)
!2530 = !DILocation(line: 1763, column: 32, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2460, file: !888, line: 1763, column: 9)
!2532 = !DILocation(line: 1763, column: 37, scope: !2531)
!2533 = !DILocation(line: 1763, column: 41, scope: !2531)
!2534 = !DILocation(line: 1763, column: 49, scope: !2531)
!2535 = !DILocation(line: 1763, column: 16, scope: !2531)
!2536 = !DILocation(line: 1763, column: 14, scope: !2531)
!2537 = !DILocation(line: 1763, column: 63, scope: !2531)
!2538 = !DILocation(line: 1763, column: 9, scope: !2460)
!2539 = !DILocation(line: 1764, column: 16, scope: !2531)
!2540 = !DILocation(line: 1764, column: 9, scope: !2531)
!2541 = !DILocation(line: 1770, column: 16, scope: !2460)
!2542 = !DILocation(line: 1770, column: 23, scope: !2460)
!2543 = !DILocation(line: 1770, column: 35, scope: !2460)
!2544 = !DILocation(line: 1770, column: 40, scope: !2545)
!2545 = !DILexicalBlockFile(scope: !2460, file: !888, discriminator: 1)
!2546 = !DILocation(line: 1770, column: 45, scope: !2545)
!2547 = !DILocation(line: 1770, column: 56, scope: !2545)
!2548 = !DILocation(line: 1770, column: 63, scope: !2545)
!2549 = !DILocation(line: 1770, column: 54, scope: !2545)
!2550 = !DILocation(line: 1770, column: 38, scope: !2545)
!2551 = !DILocation(line: 1770, column: 35, scope: !2552)
!2552 = !DILexicalBlockFile(scope: !2460, file: !888, discriminator: 2)
!2553 = !DILocation(line: 1770, column: 14, scope: !2552)
!2554 = !DILocation(line: 1773, column: 9, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2460, file: !888, line: 1773, column: 9)
!2556 = !DILocation(line: 1773, column: 16, scope: !2555)
!2557 = !DILocation(line: 1773, column: 24, scope: !2555)
!2558 = !DILocation(line: 1773, column: 9, scope: !2460)
!2559 = !DILocation(line: 1774, column: 35, scope: !2555)
!2560 = !DILocation(line: 1774, column: 42, scope: !2555)
!2561 = !DILocation(line: 1774, column: 52, scope: !2555)
!2562 = !DILocation(line: 1774, column: 57, scope: !2555)
!2563 = !DILocation(line: 1774, column: 79, scope: !2555)
!2564 = !DILocation(line: 1774, column: 86, scope: !2555)
!2565 = !DILocation(line: 1774, column: 68, scope: !2555)
!2566 = !DILocation(line: 1774, column: 66, scope: !2555)
!2567 = !DILocation(line: 1774, column: 50, scope: !2555)
!2568 = !DILocation(line: 1774, column: 103, scope: !2555)
!2569 = !DILocation(line: 1774, column: 110, scope: !2555)
!2570 = !DILocation(line: 1774, column: 102, scope: !2555)
!2571 = !DILocation(line: 1774, column: 100, scope: !2555)
!2572 = !DILocation(line: 1774, column: 34, scope: !2555)
!2573 = !DILocation(line: 1774, column: 127, scope: !2574)
!2574 = !DILexicalBlockFile(scope: !2555, file: !888, discriminator: 1)
!2575 = !DILocation(line: 1774, column: 134, scope: !2574)
!2576 = !DILocation(line: 1774, column: 126, scope: !2574)
!2577 = !DILocation(line: 1774, column: 34, scope: !2574)
!2578 = !DILocation(line: 1774, column: 151, scope: !2579)
!2579 = !DILexicalBlockFile(scope: !2555, file: !888, discriminator: 2)
!2580 = !DILocation(line: 1774, column: 158, scope: !2579)
!2581 = !DILocation(line: 1774, column: 168, scope: !2579)
!2582 = !DILocation(line: 1774, column: 173, scope: !2579)
!2583 = !DILocation(line: 1774, column: 195, scope: !2579)
!2584 = !DILocation(line: 1774, column: 202, scope: !2579)
!2585 = !DILocation(line: 1774, column: 184, scope: !2579)
!2586 = !DILocation(line: 1774, column: 182, scope: !2579)
!2587 = !DILocation(line: 1774, column: 166, scope: !2579)
!2588 = !DILocation(line: 1774, column: 34, scope: !2579)
!2589 = !DILocation(line: 1774, column: 34, scope: !2590)
!2590 = !DILexicalBlockFile(scope: !2555, file: !888, discriminator: 3)
!2591 = !DILocation(line: 1774, column: 33, scope: !2590)
!2592 = !DILocation(line: 1774, column: 9, scope: !2590)
!2593 = !DILocation(line: 1774, column: 14, scope: !2590)
!2594 = !DILocation(line: 1774, column: 31, scope: !2590)
!2595 = !DILocation(line: 1777, column: 33, scope: !2555)
!2596 = !DILocation(line: 1777, column: 40, scope: !2555)
!2597 = !DILocation(line: 1777, column: 9, scope: !2555)
!2598 = !DILocation(line: 1777, column: 14, scope: !2555)
!2599 = !DILocation(line: 1777, column: 31, scope: !2555)
!2600 = !DILocation(line: 1780, column: 42, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2460, file: !888, line: 1780, column: 9)
!2602 = !DILocation(line: 1780, column: 47, scope: !2601)
!2603 = !DILocation(line: 1780, column: 26, scope: !2601)
!2604 = !DILocation(line: 1780, column: 24, scope: !2601)
!2605 = !DILocation(line: 1780, column: 58, scope: !2601)
!2606 = !DILocation(line: 1780, column: 9, scope: !2460)
!2607 = !DILocation(line: 1781, column: 16, scope: !2601)
!2608 = !DILocation(line: 1781, column: 21, scope: !2601)
!2609 = !DILocation(line: 1781, column: 9, scope: !2601)
!2610 = !DILocation(line: 1784, column: 5, scope: !2460)
!2611 = !DILocation(line: 1784, column: 10, scope: !2460)
!2612 = !DILocation(line: 1784, column: 18, scope: !2460)
!2613 = !DILocation(line: 1787, column: 25, scope: !2460)
!2614 = !DILocation(line: 1787, column: 30, scope: !2460)
!2615 = !DILocation(line: 1787, column: 5, scope: !2460)
!2616 = !DILocation(line: 1787, column: 12, scope: !2460)
!2617 = !DILocation(line: 1787, column: 23, scope: !2460)
!2618 = !DILocation(line: 1788, column: 30, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2460, file: !888, line: 1788, column: 9)
!2620 = !DILocation(line: 1788, column: 37, scope: !2619)
!2621 = !DILocation(line: 1788, column: 16, scope: !2619)
!2622 = !DILocation(line: 1788, column: 14, scope: !2619)
!2623 = !DILocation(line: 1788, column: 48, scope: !2619)
!2624 = !DILocation(line: 1788, column: 9, scope: !2460)
!2625 = !DILocation(line: 1789, column: 16, scope: !2619)
!2626 = !DILocation(line: 1789, column: 9, scope: !2619)
!2627 = !DILocation(line: 1807, column: 9, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2460, file: !888, line: 1807, column: 9)
!2629 = !DILocation(line: 1807, column: 14, scope: !2628)
!2630 = !DILocation(line: 1807, column: 21, scope: !2628)
!2631 = !DILocation(line: 1807, column: 41, scope: !2628)
!2632 = !DILocation(line: 1807, column: 9, scope: !2460)
!2633 = !DILocalVariable(name: "dest", scope: !2634, file: !888, line: 1808, type: !922)
!2634 = distinct !DILexicalBlock(scope: !2635, file: !888, line: 1808, column: 9)
!2635 = distinct !DILexicalBlock(scope: !2628, file: !888, line: 1807, column: 48)
!2636 = !DILocation(line: 1808, column: 20, scope: !2634)
!2637 = !DILocation(line: 1808, column: 37, scope: !2634)
!2638 = !DILocation(line: 1808, column: 44, scope: !2634)
!2639 = !DILocation(line: 1808, column: 27, scope: !2634)
!2640 = !DILocation(line: 1808, column: 66, scope: !2634)
!2641 = !DILocation(line: 1808, column: 71, scope: !2634)
!2642 = !DILocation(line: 1808, column: 78, scope: !2634)
!2643 = !DILocation(line: 1808, column: 64, scope: !2634)
!2644 = !DILocation(line: 1808, column: 59, scope: !2634)
!2645 = !DILocation(line: 1808, column: 104, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2634, file: !888, line: 1808, column: 103)
!2647 = !DILocation(line: 1808, column: 109, scope: !2646)
!2648 = !DILocation(line: 1808, column: 103, scope: !2634)
!2649 = !DILocation(line: 1808, column: 134, scope: !2650)
!2650 = !DILexicalBlockFile(scope: !2651, file: !888, discriminator: 1)
!2651 = distinct !DILexicalBlock(scope: !2652, file: !888, line: 1808, column: 122)
!2652 = distinct !DILexicalBlock(scope: !2646, file: !888, line: 1808, column: 120)
!2653 = !DILocation(line: 1808, column: 127, scope: !2650)
!2654 = !DILocation(line: 1808, column: 139, scope: !2655)
!2655 = !DILexicalBlockFile(scope: !2656, file: !888, discriminator: 2)
!2656 = distinct !DILexicalBlock(scope: !2651, file: !888, line: 1808, column: 122)
!2657 = !DILocation(line: 1808, column: 148, scope: !2655)
!2658 = !DILocation(line: 1808, column: 153, scope: !2655)
!2659 = !DILocation(line: 1808, column: 146, scope: !2655)
!2660 = !DILocation(line: 1808, column: 122, scope: !2655)
!2661 = !DILocation(line: 1808, column: 188, scope: !2662)
!2662 = !DILexicalBlockFile(scope: !2663, file: !888, discriminator: 3)
!2663 = distinct !DILexicalBlock(scope: !2656, file: !888, line: 1808, column: 181)
!2664 = !DILocation(line: 1808, column: 186, scope: !2662)
!2665 = !DILocation(line: 1808, column: 193, scope: !2666)
!2666 = !DILexicalBlockFile(scope: !2667, file: !888, discriminator: 4)
!2667 = distinct !DILexicalBlock(scope: !2663, file: !888, line: 1808, column: 181)
!2668 = !DILocation(line: 1808, column: 197, scope: !2666)
!2669 = !DILocation(line: 1808, column: 204, scope: !2666)
!2670 = !DILocation(line: 1808, column: 195, scope: !2666)
!2671 = !DILocation(line: 1808, column: 181, scope: !2666)
!2672 = !DILocation(line: 1808, column: 249, scope: !2673)
!2673 = !DILexicalBlockFile(scope: !2667, file: !888, discriminator: 5)
!2674 = !DILocation(line: 1808, column: 229, scope: !2673)
!2675 = !DILocation(line: 1808, column: 246, scope: !2673)
!2676 = !DILocation(line: 1808, column: 234, scope: !2673)
!2677 = !DILocation(line: 1808, column: 260, scope: !2673)
!2678 = !DILocation(line: 1808, column: 257, scope: !2673)
!2679 = !DILocation(line: 1808, column: 224, scope: !2673)
!2680 = !DILocation(line: 1808, column: 227, scope: !2673)
!2681 = !DILocation(line: 1808, column: 219, scope: !2673)
!2682 = !DILocation(line: 1808, column: 215, scope: !2683)
!2683 = !DILexicalBlockFile(scope: !2667, file: !888, discriminator: 6)
!2684 = !DILocation(line: 1808, column: 181, scope: !2683)
!2685 = distinct !{!2685, !2686}
!2686 = !DILocation(line: 1808, column: 181, scope: !2656)
!2687 = !DILocation(line: 1808, column: 260, scope: !2688)
!2688 = !DILexicalBlockFile(scope: !2663, file: !888, discriminator: 7)
!2689 = !DILocation(line: 1808, column: 177, scope: !2690)
!2690 = !DILexicalBlockFile(scope: !2656, file: !888, discriminator: 8)
!2691 = !DILocation(line: 1808, column: 122, scope: !2690)
!2692 = distinct !{!2692, !2693}
!2693 = !DILocation(line: 1808, column: 122, scope: !2652)
!2694 = !DILocation(line: 1808, column: 267, scope: !2695)
!2695 = !DILexicalBlockFile(scope: !2652, file: !888, discriminator: 9)
!2696 = !DILocation(line: 1808, column: 288, scope: !2697)
!2697 = !DILexicalBlockFile(scope: !2698, file: !888, discriminator: 10)
!2698 = distinct !DILexicalBlock(scope: !2699, file: !888, line: 1808, column: 276)
!2699 = distinct !DILexicalBlock(scope: !2646, file: !888, line: 1808, column: 274)
!2700 = !DILocation(line: 1808, column: 281, scope: !2697)
!2701 = !DILocation(line: 1808, column: 293, scope: !2702)
!2702 = !DILexicalBlockFile(scope: !2703, file: !888, discriminator: 11)
!2703 = distinct !DILexicalBlock(scope: !2698, file: !888, line: 1808, column: 276)
!2704 = !DILocation(line: 1808, column: 302, scope: !2702)
!2705 = !DILocation(line: 1808, column: 307, scope: !2702)
!2706 = !DILocation(line: 1808, column: 300, scope: !2702)
!2707 = !DILocation(line: 1808, column: 276, scope: !2702)
!2708 = !DILocation(line: 1808, column: 342, scope: !2709)
!2709 = !DILexicalBlockFile(scope: !2710, file: !888, discriminator: 12)
!2710 = distinct !DILexicalBlock(scope: !2703, file: !888, line: 1808, column: 335)
!2711 = !DILocation(line: 1808, column: 340, scope: !2709)
!2712 = !DILocation(line: 1808, column: 347, scope: !2713)
!2713 = !DILexicalBlockFile(scope: !2714, file: !888, discriminator: 13)
!2714 = distinct !DILexicalBlock(scope: !2710, file: !888, line: 1808, column: 335)
!2715 = !DILocation(line: 1808, column: 351, scope: !2713)
!2716 = !DILocation(line: 1808, column: 358, scope: !2713)
!2717 = !DILocation(line: 1808, column: 349, scope: !2713)
!2718 = !DILocation(line: 1808, column: 335, scope: !2713)
!2719 = !DILocation(line: 1808, column: 420, scope: !2720)
!2720 = !DILexicalBlockFile(scope: !2714, file: !888, discriminator: 14)
!2721 = !DILocation(line: 1808, column: 383, scope: !2720)
!2722 = !DILocation(line: 1808, column: 416, scope: !2720)
!2723 = !DILocation(line: 1808, column: 400, scope: !2720)
!2724 = !DILocation(line: 1808, column: 407, scope: !2720)
!2725 = !DILocation(line: 1808, column: 388, scope: !2720)
!2726 = !DILocation(line: 1808, column: 431, scope: !2720)
!2727 = !DILocation(line: 1808, column: 428, scope: !2720)
!2728 = !DILocation(line: 1808, column: 378, scope: !2720)
!2729 = !DILocation(line: 1808, column: 381, scope: !2720)
!2730 = !DILocation(line: 1808, column: 373, scope: !2720)
!2731 = !DILocation(line: 1808, column: 369, scope: !2732)
!2732 = !DILexicalBlockFile(scope: !2714, file: !888, discriminator: 15)
!2733 = !DILocation(line: 1808, column: 335, scope: !2732)
!2734 = distinct !{!2734, !2735}
!2735 = !DILocation(line: 1808, column: 335, scope: !2703)
!2736 = !DILocation(line: 1808, column: 431, scope: !2737)
!2737 = !DILexicalBlockFile(scope: !2710, file: !888, discriminator: 16)
!2738 = !DILocation(line: 1808, column: 331, scope: !2739)
!2739 = !DILexicalBlockFile(scope: !2703, file: !888, discriminator: 17)
!2740 = !DILocation(line: 1808, column: 276, scope: !2739)
!2741 = distinct !{!2741, !2742}
!2742 = !DILocation(line: 1808, column: 276, scope: !2699)
!2743 = !DILocation(line: 1809, column: 5, scope: !2635)
!2744 = !DILocalVariable(name: "dest", scope: !2745, file: !888, line: 1810, type: !925)
!2745 = distinct !DILexicalBlock(scope: !2746, file: !888, line: 1810, column: 9)
!2746 = distinct !DILexicalBlock(scope: !2628, file: !888, line: 1809, column: 12)
!2747 = !DILocation(line: 1810, column: 20, scope: !2745)
!2748 = !DILocation(line: 1810, column: 37, scope: !2745)
!2749 = !DILocation(line: 1810, column: 44, scope: !2745)
!2750 = !DILocation(line: 1810, column: 27, scope: !2745)
!2751 = !DILocation(line: 1810, column: 66, scope: !2745)
!2752 = !DILocation(line: 1810, column: 71, scope: !2745)
!2753 = !DILocation(line: 1810, column: 78, scope: !2745)
!2754 = !DILocation(line: 1810, column: 64, scope: !2745)
!2755 = !DILocation(line: 1810, column: 59, scope: !2745)
!2756 = !DILocation(line: 1810, column: 104, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2745, file: !888, line: 1810, column: 103)
!2758 = !DILocation(line: 1810, column: 109, scope: !2757)
!2759 = !DILocation(line: 1810, column: 103, scope: !2745)
!2760 = !DILocation(line: 1810, column: 134, scope: !2761)
!2761 = !DILexicalBlockFile(scope: !2762, file: !888, discriminator: 1)
!2762 = distinct !DILexicalBlock(scope: !2763, file: !888, line: 1810, column: 122)
!2763 = distinct !DILexicalBlock(scope: !2757, file: !888, line: 1810, column: 120)
!2764 = !DILocation(line: 1810, column: 127, scope: !2761)
!2765 = !DILocation(line: 1810, column: 139, scope: !2766)
!2766 = !DILexicalBlockFile(scope: !2767, file: !888, discriminator: 2)
!2767 = distinct !DILexicalBlock(scope: !2762, file: !888, line: 1810, column: 122)
!2768 = !DILocation(line: 1810, column: 148, scope: !2766)
!2769 = !DILocation(line: 1810, column: 153, scope: !2766)
!2770 = !DILocation(line: 1810, column: 146, scope: !2766)
!2771 = !DILocation(line: 1810, column: 122, scope: !2766)
!2772 = !DILocation(line: 1810, column: 188, scope: !2773)
!2773 = !DILexicalBlockFile(scope: !2774, file: !888, discriminator: 3)
!2774 = distinct !DILexicalBlock(scope: !2767, file: !888, line: 1810, column: 181)
!2775 = !DILocation(line: 1810, column: 186, scope: !2773)
!2776 = !DILocation(line: 1810, column: 193, scope: !2777)
!2777 = !DILexicalBlockFile(scope: !2778, file: !888, discriminator: 4)
!2778 = distinct !DILexicalBlock(scope: !2774, file: !888, line: 1810, column: 181)
!2779 = !DILocation(line: 1810, column: 197, scope: !2777)
!2780 = !DILocation(line: 1810, column: 204, scope: !2777)
!2781 = !DILocation(line: 1810, column: 195, scope: !2777)
!2782 = !DILocation(line: 1810, column: 181, scope: !2777)
!2783 = !DILocation(line: 1810, column: 249, scope: !2784)
!2784 = !DILexicalBlockFile(scope: !2778, file: !888, discriminator: 5)
!2785 = !DILocation(line: 1810, column: 229, scope: !2784)
!2786 = !DILocation(line: 1810, column: 246, scope: !2784)
!2787 = !DILocation(line: 1810, column: 234, scope: !2784)
!2788 = !DILocation(line: 1810, column: 260, scope: !2784)
!2789 = !DILocation(line: 1810, column: 257, scope: !2784)
!2790 = !DILocation(line: 1810, column: 224, scope: !2784)
!2791 = !DILocation(line: 1810, column: 227, scope: !2784)
!2792 = !DILocation(line: 1810, column: 219, scope: !2784)
!2793 = !DILocation(line: 1810, column: 215, scope: !2794)
!2794 = !DILexicalBlockFile(scope: !2778, file: !888, discriminator: 6)
!2795 = !DILocation(line: 1810, column: 181, scope: !2794)
!2796 = distinct !{!2796, !2797}
!2797 = !DILocation(line: 1810, column: 181, scope: !2767)
!2798 = !DILocation(line: 1810, column: 260, scope: !2799)
!2799 = !DILexicalBlockFile(scope: !2774, file: !888, discriminator: 7)
!2800 = !DILocation(line: 1810, column: 177, scope: !2801)
!2801 = !DILexicalBlockFile(scope: !2767, file: !888, discriminator: 8)
!2802 = !DILocation(line: 1810, column: 122, scope: !2801)
!2803 = distinct !{!2803, !2804}
!2804 = !DILocation(line: 1810, column: 122, scope: !2763)
!2805 = !DILocation(line: 1810, column: 267, scope: !2806)
!2806 = !DILexicalBlockFile(scope: !2763, file: !888, discriminator: 9)
!2807 = !DILocation(line: 1810, column: 288, scope: !2808)
!2808 = !DILexicalBlockFile(scope: !2809, file: !888, discriminator: 10)
!2809 = distinct !DILexicalBlock(scope: !2810, file: !888, line: 1810, column: 276)
!2810 = distinct !DILexicalBlock(scope: !2757, file: !888, line: 1810, column: 274)
!2811 = !DILocation(line: 1810, column: 281, scope: !2808)
!2812 = !DILocation(line: 1810, column: 293, scope: !2813)
!2813 = !DILexicalBlockFile(scope: !2814, file: !888, discriminator: 11)
!2814 = distinct !DILexicalBlock(scope: !2809, file: !888, line: 1810, column: 276)
!2815 = !DILocation(line: 1810, column: 302, scope: !2813)
!2816 = !DILocation(line: 1810, column: 307, scope: !2813)
!2817 = !DILocation(line: 1810, column: 300, scope: !2813)
!2818 = !DILocation(line: 1810, column: 276, scope: !2813)
!2819 = !DILocation(line: 1810, column: 342, scope: !2820)
!2820 = !DILexicalBlockFile(scope: !2821, file: !888, discriminator: 12)
!2821 = distinct !DILexicalBlock(scope: !2814, file: !888, line: 1810, column: 335)
!2822 = !DILocation(line: 1810, column: 340, scope: !2820)
!2823 = !DILocation(line: 1810, column: 347, scope: !2824)
!2824 = !DILexicalBlockFile(scope: !2825, file: !888, discriminator: 13)
!2825 = distinct !DILexicalBlock(scope: !2821, file: !888, line: 1810, column: 335)
!2826 = !DILocation(line: 1810, column: 351, scope: !2824)
!2827 = !DILocation(line: 1810, column: 358, scope: !2824)
!2828 = !DILocation(line: 1810, column: 349, scope: !2824)
!2829 = !DILocation(line: 1810, column: 335, scope: !2824)
!2830 = !DILocation(line: 1810, column: 420, scope: !2831)
!2831 = !DILexicalBlockFile(scope: !2825, file: !888, discriminator: 14)
!2832 = !DILocation(line: 1810, column: 383, scope: !2831)
!2833 = !DILocation(line: 1810, column: 416, scope: !2831)
!2834 = !DILocation(line: 1810, column: 400, scope: !2831)
!2835 = !DILocation(line: 1810, column: 407, scope: !2831)
!2836 = !DILocation(line: 1810, column: 388, scope: !2831)
!2837 = !DILocation(line: 1810, column: 431, scope: !2831)
!2838 = !DILocation(line: 1810, column: 428, scope: !2831)
!2839 = !DILocation(line: 1810, column: 378, scope: !2831)
!2840 = !DILocation(line: 1810, column: 381, scope: !2831)
!2841 = !DILocation(line: 1810, column: 373, scope: !2831)
!2842 = !DILocation(line: 1810, column: 369, scope: !2843)
!2843 = !DILexicalBlockFile(scope: !2825, file: !888, discriminator: 15)
!2844 = !DILocation(line: 1810, column: 335, scope: !2843)
!2845 = distinct !{!2845, !2846}
!2846 = !DILocation(line: 1810, column: 335, scope: !2814)
!2847 = !DILocation(line: 1810, column: 431, scope: !2848)
!2848 = !DILexicalBlockFile(scope: !2821, file: !888, discriminator: 16)
!2849 = !DILocation(line: 1810, column: 331, scope: !2850)
!2850 = !DILexicalBlockFile(scope: !2814, file: !888, discriminator: 17)
!2851 = !DILocation(line: 1810, column: 276, scope: !2850)
!2852 = distinct !{!2852, !2853}
!2853 = !DILocation(line: 1810, column: 276, scope: !2810)
!2854 = !DILocation(line: 1814, column: 9, scope: !2477)
!2855 = !DILocation(line: 1814, column: 16, scope: !2477)
!2856 = !DILocation(line: 1814, column: 28, scope: !2477)
!2857 = !DILocation(line: 1814, column: 32, scope: !2858)
!2858 = !DILexicalBlockFile(scope: !2477, file: !888, discriminator: 1)
!2859 = !DILocation(line: 1814, column: 39, scope: !2858)
!2860 = !DILocation(line: 1814, column: 55, scope: !2858)
!2861 = !DILocation(line: 1814, column: 9, scope: !2858)
!2862 = !DILocalVariable(name: "swap", scope: !2476, file: !888, line: 1815, type: !906)
!2863 = !DILocation(line: 1815, column: 13, scope: !2476)
!2864 = !DILocation(line: 1815, column: 25, scope: !2476)
!2865 = !DILocation(line: 1815, column: 32, scope: !2476)
!2866 = !DILocation(line: 1815, column: 22, scope: !2476)
!2867 = !DILocation(line: 1817, column: 13, scope: !2475)
!2868 = !DILocation(line: 1817, column: 18, scope: !2475)
!2869 = !DILocation(line: 1817, column: 25, scope: !2475)
!2870 = !DILocation(line: 1817, column: 45, scope: !2475)
!2871 = !DILocation(line: 1817, column: 13, scope: !2476)
!2872 = !DILocalVariable(name: "src", scope: !2488, file: !888, line: 1818, type: !925)
!2873 = !DILocation(line: 1818, column: 22, scope: !2488)
!2874 = !DILocation(line: 1818, column: 39, scope: !2488)
!2875 = !DILocation(line: 1818, column: 46, scope: !2488)
!2876 = !DILocation(line: 1818, column: 28, scope: !2488)
!2877 = !DILocation(line: 1820, column: 25, scope: !2487)
!2878 = !DILocation(line: 1820, column: 18, scope: !2487)
!2879 = !DILocation(line: 1821, column: 18, scope: !2486)
!2880 = !DILocation(line: 1821, column: 27, scope: !2486)
!2881 = !DILocation(line: 1821, column: 32, scope: !2486)
!2882 = !DILocation(line: 1821, column: 51, scope: !2486)
!2883 = !DILocation(line: 1821, column: 58, scope: !2486)
!2884 = !DILocation(line: 1821, column: 49, scope: !2486)
!2885 = !DILocation(line: 1821, column: 25, scope: !2486)
!2886 = !DILocation(line: 1820, column: 13, scope: !2887)
!2887 = !DILexicalBlockFile(scope: !2487, file: !888, discriminator: 1)
!2888 = !DILocalVariable(name: "v", scope: !2485, file: !888, line: 1823, type: !926)
!2889 = !DILocation(line: 1823, column: 25, scope: !2485)
!2890 = !DILocation(line: 1825, column: 21, scope: !2484)
!2891 = !DILocation(line: 1825, column: 21, scope: !2485)
!2892 = !DILocation(line: 1826, column: 40, scope: !2484)
!2893 = !DILocation(line: 1826, column: 36, scope: !2484)
!2894 = !DILocation(line: 1826, column: 25, scope: !2484)
!2895 = !DILocation(line: 68, column: 16, scope: !2479, inlinedAt: !2483)
!2896 = !DILocation(line: 68, column: 19, scope: !2479, inlinedAt: !2483)
!2897 = !DILocation(line: 68, column: 24, scope: !2479, inlinedAt: !2483)
!2898 = !DILocation(line: 68, column: 38, scope: !2479, inlinedAt: !2483)
!2899 = !DILocation(line: 68, column: 41, scope: !2479, inlinedAt: !2483)
!2900 = !DILocation(line: 68, column: 46, scope: !2479, inlinedAt: !2483)
!2901 = !DILocation(line: 68, column: 34, scope: !2479, inlinedAt: !2483)
!2902 = !DILocation(line: 68, column: 57, scope: !2479, inlinedAt: !2483)
!2903 = !DILocation(line: 68, column: 69, scope: !2479, inlinedAt: !2483)
!2904 = !DILocation(line: 68, column: 72, scope: !2479, inlinedAt: !2483)
!2905 = !DILocation(line: 68, column: 79, scope: !2479, inlinedAt: !2483)
!2906 = !DILocation(line: 68, column: 84, scope: !2479, inlinedAt: !2483)
!2907 = !DILocation(line: 68, column: 99, scope: !2479, inlinedAt: !2483)
!2908 = !DILocation(line: 68, column: 102, scope: !2479, inlinedAt: !2483)
!2909 = !DILocation(line: 68, column: 109, scope: !2479, inlinedAt: !2483)
!2910 = !DILocation(line: 68, column: 114, scope: !2479, inlinedAt: !2483)
!2911 = !DILocation(line: 68, column: 94, scope: !2479, inlinedAt: !2483)
!2912 = !DILocation(line: 68, column: 63, scope: !2479, inlinedAt: !2483)
!2913 = !DILocation(line: 1826, column: 23, scope: !2484)
!2914 = !DILocation(line: 1826, column: 21, scope: !2484)
!2915 = !DILocation(line: 1828, column: 29, scope: !2484)
!2916 = !DILocation(line: 1828, column: 25, scope: !2484)
!2917 = !DILocation(line: 1828, column: 23, scope: !2484)
!2918 = !DILocation(line: 1830, column: 23, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2485, file: !888, line: 1829, column: 21)
!2920 = !DILocation(line: 1832, column: 35, scope: !2485)
!2921 = !DILocation(line: 1832, column: 40, scope: !2485)
!2922 = !DILocation(line: 1832, column: 51, scope: !2485)
!2923 = !DILocation(line: 1832, column: 56, scope: !2485)
!2924 = !DILocation(line: 1832, column: 61, scope: !2485)
!2925 = !DILocation(line: 1832, column: 28, scope: !2485)
!2926 = !DILocation(line: 1832, column: 17, scope: !2485)
!2927 = !DILocation(line: 1832, column: 22, scope: !2485)
!2928 = !DILocation(line: 1832, column: 26, scope: !2485)
!2929 = !DILocation(line: 1833, column: 13, scope: !2485)
!2930 = !DILocation(line: 1822, column: 24, scope: !2486)
!2931 = !DILocation(line: 1820, column: 13, scope: !2932)
!2932 = !DILexicalBlockFile(scope: !2486, file: !888, discriminator: 2)
!2933 = distinct !{!2933, !2934}
!2934 = !DILocation(line: 1820, column: 13, scope: !2488)
!2935 = !DILocation(line: 1834, column: 9, scope: !2488)
!2936 = !DILocalVariable(name: "crc_source", scope: !2474, file: !888, line: 1835, type: !927)
!2937 = !DILocation(line: 1835, column: 22, scope: !2474)
!2938 = !DILocation(line: 1837, column: 17, scope: !2473)
!2939 = !DILocation(line: 1837, column: 17, scope: !2474)
!2940 = !DILocation(line: 1838, column: 21, scope: !2471)
!2941 = !DILocation(line: 1838, column: 26, scope: !2471)
!2942 = !DILocation(line: 1838, column: 33, scope: !2471)
!2943 = !DILocation(line: 1838, column: 53, scope: !2471)
!2944 = !DILocation(line: 1838, column: 21, scope: !2472)
!2945 = !DILocalVariable(name: "src", scope: !2470, file: !888, line: 1839, type: !922)
!2946 = !DILocation(line: 1839, column: 30, scope: !2470)
!2947 = !DILocation(line: 1839, column: 47, scope: !2470)
!2948 = !DILocation(line: 1839, column: 54, scope: !2470)
!2949 = !DILocation(line: 1839, column: 36, scope: !2470)
!2950 = !DILocalVariable(name: "dest", scope: !2470, file: !888, line: 1840, type: !922)
!2951 = !DILocation(line: 1840, column: 30, scope: !2470)
!2952 = !DILocation(line: 1840, column: 48, scope: !2470)
!2953 = !DILocation(line: 1840, column: 53, scope: !2470)
!2954 = !DILocation(line: 1840, column: 37, scope: !2470)
!2955 = !DILocation(line: 1841, column: 33, scope: !2469)
!2956 = !DILocation(line: 1841, column: 26, scope: !2469)
!2957 = !DILocation(line: 1842, column: 26, scope: !2468)
!2958 = !DILocation(line: 1842, column: 35, scope: !2468)
!2959 = !DILocation(line: 1842, column: 40, scope: !2468)
!2960 = !DILocation(line: 1842, column: 59, scope: !2468)
!2961 = !DILocation(line: 1842, column: 66, scope: !2468)
!2962 = !DILocation(line: 1842, column: 57, scope: !2468)
!2963 = !DILocation(line: 1842, column: 33, scope: !2468)
!2964 = !DILocation(line: 1841, column: 21, scope: !2965)
!2965 = !DILexicalBlockFile(scope: !2469, file: !888, discriminator: 1)
!2966 = !DILocation(line: 1844, column: 50, scope: !2468)
!2967 = !DILocation(line: 1844, column: 46, scope: !2468)
!2968 = !DILocation(line: 1844, column: 35, scope: !2468)
!2969 = !DILocation(line: 60, column: 9, scope: !2462, inlinedAt: !2467)
!2970 = !DILocation(line: 60, column: 10, scope: !2462, inlinedAt: !2467)
!2971 = !DILocation(line: 60, column: 18, scope: !2462, inlinedAt: !2467)
!2972 = !DILocation(line: 60, column: 19, scope: !2462, inlinedAt: !2467)
!2973 = !DILocation(line: 60, column: 15, scope: !2462, inlinedAt: !2467)
!2974 = !DILocation(line: 60, column: 8, scope: !2462, inlinedAt: !2467)
!2975 = !DILocation(line: 60, column: 6, scope: !2462, inlinedAt: !2467)
!2976 = !DILocation(line: 61, column: 12, scope: !2462, inlinedAt: !2467)
!2977 = !DILocation(line: 1844, column: 30, scope: !2468)
!2978 = !DILocation(line: 1844, column: 33, scope: !2468)
!2979 = !DILocation(line: 1844, column: 25, scope: !2468)
!2980 = !DILocation(line: 1843, column: 32, scope: !2468)
!2981 = !DILocation(line: 1841, column: 21, scope: !2982)
!2982 = !DILexicalBlockFile(scope: !2468, file: !888, discriminator: 2)
!2983 = distinct !{!2983, !2984}
!2984 = !DILocation(line: 1841, column: 21, scope: !2470)
!2985 = !DILocation(line: 1845, column: 17, scope: !2470)
!2986 = !DILocation(line: 1846, column: 21, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2471, file: !888, line: 1845, column: 24)
!2988 = !DILocation(line: 1846, column: 26, scope: !2987)
!2989 = !DILocation(line: 1846, column: 31, scope: !2987)
!2990 = !DILocation(line: 1846, column: 54, scope: !2987)
!2991 = !DILocation(line: 1846, column: 59, scope: !2987)
!2992 = !DILocation(line: 1846, column: 41, scope: !2987)
!2993 = !DILocation(line: 1847, column: 54, scope: !2987)
!2994 = !DILocation(line: 1847, column: 61, scope: !2987)
!2995 = !DILocation(line: 1847, column: 41, scope: !2987)
!2996 = !DILocation(line: 1848, column: 41, scope: !2987)
!2997 = !DILocation(line: 1848, column: 46, scope: !2987)
!2998 = !DILocation(line: 1848, column: 65, scope: !2987)
!2999 = !DILocation(line: 1848, column: 72, scope: !2987)
!3000 = !DILocation(line: 1848, column: 63, scope: !2987)
!3001 = !DILocation(line: 1850, column: 30, scope: !2472)
!3002 = !DILocation(line: 1850, column: 35, scope: !2472)
!3003 = !DILocation(line: 1850, column: 28, scope: !2472)
!3004 = !DILocation(line: 1851, column: 13, scope: !2472)
!3005 = !DILocation(line: 1852, column: 30, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !2473, file: !888, line: 1851, column: 20)
!3007 = !DILocation(line: 1852, column: 37, scope: !3006)
!3008 = !DILocation(line: 1852, column: 28, scope: !3006)
!3009 = !DILocation(line: 1855, column: 31, scope: !2474)
!3010 = !DILocation(line: 1855, column: 36, scope: !2474)
!3011 = !DILocation(line: 1855, column: 47, scope: !2474)
!3012 = !DILocation(line: 1855, column: 52, scope: !2474)
!3013 = !DILocation(line: 1855, column: 57, scope: !2474)
!3014 = !DILocation(line: 1856, column: 31, scope: !2474)
!3015 = !DILocation(line: 1856, column: 36, scope: !2474)
!3016 = !DILocation(line: 1856, column: 55, scope: !2474)
!3017 = !DILocation(line: 1856, column: 62, scope: !2474)
!3018 = !DILocation(line: 1856, column: 53, scope: !2474)
!3019 = !DILocation(line: 1857, column: 55, scope: !2474)
!3020 = !DILocation(line: 1857, column: 62, scope: !2474)
!3021 = !DILocation(line: 1857, column: 31, scope: !2474)
!3022 = !DILocation(line: 1856, column: 71, scope: !2474)
!3023 = !DILocation(line: 1855, column: 24, scope: !2474)
!3024 = !DILocation(line: 1855, column: 13, scope: !2474)
!3025 = !DILocation(line: 1855, column: 18, scope: !2474)
!3026 = !DILocation(line: 1855, column: 22, scope: !2474)
!3027 = !DILocation(line: 1862, column: 13, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !2476, file: !888, line: 1862, column: 13)
!3029 = !DILocation(line: 1862, column: 18, scope: !3028)
!3030 = !DILocation(line: 1862, column: 38, scope: !3028)
!3031 = !DILocation(line: 1862, column: 45, scope: !3028)
!3032 = !DILocation(line: 1862, column: 35, scope: !3028)
!3033 = !DILocation(line: 1862, column: 58, scope: !3028)
!3034 = !DILocation(line: 1863, column: 13, scope: !3028)
!3035 = !DILocation(line: 1863, column: 18, scope: !3028)
!3036 = !DILocation(line: 1863, column: 29, scope: !3028)
!3037 = !DILocation(line: 1863, column: 34, scope: !3028)
!3038 = !DILocation(line: 1863, column: 26, scope: !3028)
!3039 = !DILocation(line: 1862, column: 13, scope: !3040)
!3040 = !DILexicalBlockFile(scope: !2476, file: !888, discriminator: 1)
!3041 = !DILocation(line: 1864, column: 20, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3028, file: !888, line: 1863, column: 39)
!3043 = !DILocation(line: 1864, column: 13, scope: !3042)
!3044 = !DILocation(line: 1865, column: 17, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3042, file: !888, line: 1865, column: 17)
!3046 = !DILocation(line: 1865, column: 24, scope: !3045)
!3047 = !DILocation(line: 1865, column: 40, scope: !3045)
!3048 = !DILocation(line: 1865, column: 17, scope: !3042)
!3049 = !DILocation(line: 1866, column: 17, scope: !3045)
!3050 = !DILocation(line: 1867, column: 9, scope: !3042)
!3051 = !DILocation(line: 1868, column: 5, scope: !2476)
!3052 = !DILocation(line: 1870, column: 6, scope: !2460)
!3053 = !DILocation(line: 1870, column: 20, scope: !2460)
!3054 = !DILocation(line: 1872, column: 18, scope: !2460)
!3055 = !DILocation(line: 1872, column: 34, scope: !2545)
!3056 = !DILocation(line: 1872, column: 18, scope: !2545)
!3057 = !DILocation(line: 1873, column: 51, scope: !2460)
!3058 = !DILocation(line: 1873, column: 56, scope: !2460)
!3059 = !DILocation(line: 1873, column: 35, scope: !2460)
!3060 = !DILocation(line: 1873, column: 60, scope: !2460)
!3061 = !DILocation(line: 1873, column: 65, scope: !2460)
!3062 = !DILocation(line: 1872, column: 18, scope: !2552)
!3063 = !DILocation(line: 1872, column: 18, scope: !3064)
!3064 = !DILexicalBlockFile(scope: !2460, file: !888, discriminator: 3)
!3065 = !DILocation(line: 1872, column: 16, scope: !3064)
!3066 = !DILocation(line: 1875, column: 12, scope: !2460)
!3067 = !DILocation(line: 1875, column: 5, scope: !2460)
!3068 = !DILocation(line: 1876, column: 1, scope: !2460)
!3069 = distinct !DISubprogram(name: "decode_end", scope: !888, file: !888, line: 1881, type: !1020, isLocal: true, isDefinition: true, scopeLine: 1882, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3070 = !DILocalVariable(name: "avctx", arg: 1, scope: !3069, file: !888, line: 1881, type: !1022)
!3071 = !DILocation(line: 1881, column: 61, scope: !3069)
!3072 = !DILocalVariable(name: "ctx", scope: !3069, file: !888, line: 1883, type: !1703)
!3073 = !DILocation(line: 1883, column: 20, scope: !3069)
!3074 = !DILocation(line: 1883, column: 26, scope: !3069)
!3075 = !DILocation(line: 1883, column: 33, scope: !3069)
!3076 = !DILocalVariable(name: "i", scope: !3069, file: !888, line: 1884, type: !906)
!3077 = !DILocation(line: 1884, column: 9, scope: !3069)
!3078 = !DILocation(line: 1886, column: 15, scope: !3069)
!3079 = !DILocation(line: 1886, column: 20, scope: !3069)
!3080 = !DILocation(line: 1886, column: 26, scope: !3069)
!3081 = !DILocation(line: 1886, column: 14, scope: !3069)
!3082 = !DILocation(line: 1886, column: 5, scope: !3069)
!3083 = !DILocation(line: 1888, column: 18, scope: !3069)
!3084 = !DILocation(line: 1888, column: 23, scope: !3069)
!3085 = !DILocation(line: 1888, column: 34, scope: !3069)
!3086 = !DILocation(line: 1888, column: 39, scope: !3069)
!3087 = !DILocation(line: 1888, column: 5, scope: !3069)
!3088 = !DILocation(line: 1890, column: 15, scope: !3069)
!3089 = !DILocation(line: 1890, column: 20, scope: !3069)
!3090 = !DILocation(line: 1890, column: 14, scope: !3069)
!3091 = !DILocation(line: 1890, column: 5, scope: !3069)
!3092 = !DILocation(line: 1891, column: 15, scope: !3069)
!3093 = !DILocation(line: 1891, column: 20, scope: !3069)
!3094 = !DILocation(line: 1891, column: 14, scope: !3069)
!3095 = !DILocation(line: 1891, column: 5, scope: !3069)
!3096 = !DILocation(line: 1892, column: 15, scope: !3069)
!3097 = !DILocation(line: 1892, column: 20, scope: !3069)
!3098 = !DILocation(line: 1892, column: 14, scope: !3069)
!3099 = !DILocation(line: 1892, column: 5, scope: !3069)
!3100 = !DILocation(line: 1893, column: 15, scope: !3069)
!3101 = !DILocation(line: 1893, column: 20, scope: !3069)
!3102 = !DILocation(line: 1893, column: 14, scope: !3069)
!3103 = !DILocation(line: 1893, column: 5, scope: !3069)
!3104 = !DILocation(line: 1894, column: 15, scope: !3069)
!3105 = !DILocation(line: 1894, column: 20, scope: !3069)
!3106 = !DILocation(line: 1894, column: 14, scope: !3069)
!3107 = !DILocation(line: 1894, column: 5, scope: !3069)
!3108 = !DILocation(line: 1895, column: 15, scope: !3069)
!3109 = !DILocation(line: 1895, column: 20, scope: !3069)
!3110 = !DILocation(line: 1895, column: 14, scope: !3069)
!3111 = !DILocation(line: 1895, column: 5, scope: !3069)
!3112 = !DILocation(line: 1896, column: 15, scope: !3069)
!3113 = !DILocation(line: 1896, column: 20, scope: !3069)
!3114 = !DILocation(line: 1896, column: 14, scope: !3069)
!3115 = !DILocation(line: 1896, column: 5, scope: !3069)
!3116 = !DILocation(line: 1897, column: 15, scope: !3069)
!3117 = !DILocation(line: 1897, column: 20, scope: !3069)
!3118 = !DILocation(line: 1897, column: 14, scope: !3069)
!3119 = !DILocation(line: 1897, column: 5, scope: !3069)
!3120 = !DILocation(line: 1898, column: 15, scope: !3069)
!3121 = !DILocation(line: 1898, column: 20, scope: !3069)
!3122 = !DILocation(line: 1898, column: 14, scope: !3069)
!3123 = !DILocation(line: 1898, column: 5, scope: !3069)
!3124 = !DILocation(line: 1899, column: 15, scope: !3069)
!3125 = !DILocation(line: 1899, column: 20, scope: !3069)
!3126 = !DILocation(line: 1899, column: 14, scope: !3069)
!3127 = !DILocation(line: 1899, column: 5, scope: !3069)
!3128 = !DILocation(line: 1900, column: 15, scope: !3069)
!3129 = !DILocation(line: 1900, column: 20, scope: !3069)
!3130 = !DILocation(line: 1900, column: 14, scope: !3069)
!3131 = !DILocation(line: 1900, column: 5, scope: !3069)
!3132 = !DILocation(line: 1901, column: 15, scope: !3069)
!3133 = !DILocation(line: 1901, column: 20, scope: !3069)
!3134 = !DILocation(line: 1901, column: 14, scope: !3069)
!3135 = !DILocation(line: 1901, column: 5, scope: !3069)
!3136 = !DILocation(line: 1902, column: 15, scope: !3069)
!3137 = !DILocation(line: 1902, column: 20, scope: !3069)
!3138 = !DILocation(line: 1902, column: 14, scope: !3069)
!3139 = !DILocation(line: 1902, column: 5, scope: !3069)
!3140 = !DILocation(line: 1903, column: 15, scope: !3069)
!3141 = !DILocation(line: 1903, column: 20, scope: !3069)
!3142 = !DILocation(line: 1903, column: 14, scope: !3069)
!3143 = !DILocation(line: 1903, column: 5, scope: !3069)
!3144 = !DILocation(line: 1904, column: 15, scope: !3069)
!3145 = !DILocation(line: 1904, column: 20, scope: !3069)
!3146 = !DILocation(line: 1904, column: 14, scope: !3069)
!3147 = !DILocation(line: 1904, column: 5, scope: !3069)
!3148 = !DILocation(line: 1905, column: 15, scope: !3069)
!3149 = !DILocation(line: 1905, column: 20, scope: !3069)
!3150 = !DILocation(line: 1905, column: 14, scope: !3069)
!3151 = !DILocation(line: 1905, column: 5, scope: !3069)
!3152 = !DILocation(line: 1906, column: 15, scope: !3069)
!3153 = !DILocation(line: 1906, column: 20, scope: !3069)
!3154 = !DILocation(line: 1906, column: 14, scope: !3069)
!3155 = !DILocation(line: 1906, column: 5, scope: !3069)
!3156 = !DILocation(line: 1907, column: 15, scope: !3069)
!3157 = !DILocation(line: 1907, column: 20, scope: !3069)
!3158 = !DILocation(line: 1907, column: 14, scope: !3069)
!3159 = !DILocation(line: 1907, column: 5, scope: !3069)
!3160 = !DILocation(line: 1908, column: 15, scope: !3069)
!3161 = !DILocation(line: 1908, column: 20, scope: !3069)
!3162 = !DILocation(line: 1908, column: 14, scope: !3069)
!3163 = !DILocation(line: 1908, column: 5, scope: !3069)
!3164 = !DILocation(line: 1909, column: 15, scope: !3069)
!3165 = !DILocation(line: 1909, column: 20, scope: !3069)
!3166 = !DILocation(line: 1909, column: 14, scope: !3069)
!3167 = !DILocation(line: 1909, column: 5, scope: !3069)
!3168 = !DILocation(line: 1910, column: 9, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3069, file: !888, line: 1910, column: 9)
!3170 = !DILocation(line: 1910, column: 14, scope: !3169)
!3171 = !DILocation(line: 1910, column: 9, scope: !3069)
!3172 = !DILocation(line: 1911, column: 19, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3169, file: !888, line: 1910, column: 19)
!3174 = !DILocation(line: 1911, column: 24, scope: !3173)
!3175 = !DILocation(line: 1911, column: 29, scope: !3173)
!3176 = !DILocation(line: 1911, column: 18, scope: !3173)
!3177 = !DILocation(line: 1911, column: 9, scope: !3173)
!3178 = !DILocation(line: 1912, column: 19, scope: !3173)
!3179 = !DILocation(line: 1912, column: 24, scope: !3173)
!3180 = !DILocation(line: 1912, column: 18, scope: !3173)
!3181 = !DILocation(line: 1912, column: 9, scope: !3173)
!3182 = !DILocation(line: 1913, column: 5, scope: !3173)
!3183 = !DILocation(line: 1914, column: 15, scope: !3069)
!3184 = !DILocation(line: 1914, column: 20, scope: !3069)
!3185 = !DILocation(line: 1914, column: 14, scope: !3069)
!3186 = !DILocation(line: 1914, column: 5, scope: !3069)
!3187 = !DILocation(line: 1915, column: 15, scope: !3069)
!3188 = !DILocation(line: 1915, column: 20, scope: !3069)
!3189 = !DILocation(line: 1915, column: 14, scope: !3069)
!3190 = !DILocation(line: 1915, column: 5, scope: !3069)
!3191 = !DILocation(line: 1916, column: 15, scope: !3069)
!3192 = !DILocation(line: 1916, column: 20, scope: !3069)
!3193 = !DILocation(line: 1916, column: 14, scope: !3069)
!3194 = !DILocation(line: 1916, column: 5, scope: !3069)
!3195 = !DILocation(line: 1917, column: 15, scope: !3069)
!3196 = !DILocation(line: 1917, column: 20, scope: !3069)
!3197 = !DILocation(line: 1917, column: 14, scope: !3069)
!3198 = !DILocation(line: 1917, column: 5, scope: !3069)
!3199 = !DILocation(line: 1918, column: 9, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3069, file: !888, line: 1918, column: 9)
!3201 = !DILocation(line: 1918, column: 14, scope: !3200)
!3202 = !DILocation(line: 1918, column: 9, scope: !3069)
!3203 = !DILocation(line: 1919, column: 16, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3205, file: !888, line: 1919, column: 9)
!3205 = distinct !DILexicalBlock(scope: !3200, file: !888, line: 1918, column: 28)
!3206 = !DILocation(line: 1919, column: 14, scope: !3204)
!3207 = !DILocation(line: 1919, column: 21, scope: !3208)
!3208 = !DILexicalBlockFile(scope: !3209, file: !888, discriminator: 1)
!3209 = distinct !DILexicalBlock(scope: !3204, file: !888, line: 1919, column: 9)
!3210 = !DILocation(line: 1919, column: 25, scope: !3208)
!3211 = !DILocation(line: 1919, column: 32, scope: !3208)
!3212 = !DILocation(line: 1919, column: 23, scope: !3208)
!3213 = !DILocation(line: 1919, column: 9, scope: !3208)
!3214 = !DILocation(line: 1920, column: 41, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3209, file: !888, line: 1919, column: 47)
!3216 = !DILocation(line: 1920, column: 23, scope: !3215)
!3217 = !DILocation(line: 1920, column: 28, scope: !3215)
!3218 = !DILocation(line: 1920, column: 22, scope: !3215)
!3219 = !DILocation(line: 1920, column: 13, scope: !3215)
!3220 = !DILocation(line: 1921, column: 9, scope: !3215)
!3221 = !DILocation(line: 1919, column: 43, scope: !3222)
!3222 = !DILexicalBlockFile(scope: !3209, file: !888, discriminator: 2)
!3223 = !DILocation(line: 1919, column: 9, scope: !3222)
!3224 = distinct !{!3224, !3225}
!3225 = !DILocation(line: 1919, column: 9, scope: !3205)
!3226 = !DILocation(line: 1922, column: 19, scope: !3205)
!3227 = !DILocation(line: 1922, column: 24, scope: !3205)
!3228 = !DILocation(line: 1922, column: 18, scope: !3205)
!3229 = !DILocation(line: 1922, column: 9, scope: !3205)
!3230 = !DILocation(line: 1923, column: 5, scope: !3205)
!3231 = !DILocation(line: 1924, column: 15, scope: !3069)
!3232 = !DILocation(line: 1924, column: 20, scope: !3069)
!3233 = !DILocation(line: 1924, column: 14, scope: !3069)
!3234 = !DILocation(line: 1924, column: 5, scope: !3069)
!3235 = !DILocation(line: 1925, column: 15, scope: !3069)
!3236 = !DILocation(line: 1925, column: 20, scope: !3069)
!3237 = !DILocation(line: 1925, column: 14, scope: !3069)
!3238 = !DILocation(line: 1925, column: 5, scope: !3069)
!3239 = !DILocation(line: 1927, column: 5, scope: !3069)
!3240 = distinct !DISubprogram(name: "flush", scope: !888, file: !888, line: 2126, type: !1644, isLocal: true, isDefinition: true, scopeLine: 2127, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3241 = !DILocalVariable(name: "avctx", arg: 1, scope: !3240, file: !888, line: 2126, type: !1022)
!3242 = !DILocation(line: 2126, column: 57, scope: !3240)
!3243 = !DILocalVariable(name: "ctx", scope: !3240, file: !888, line: 2128, type: !1703)
!3244 = !DILocation(line: 2128, column: 20, scope: !3240)
!3245 = !DILocation(line: 2128, column: 26, scope: !3240)
!3246 = !DILocation(line: 2128, column: 33, scope: !3240)
!3247 = !DILocation(line: 2130, column: 5, scope: !3240)
!3248 = !DILocation(line: 2130, column: 10, scope: !3240)
!3249 = !DILocation(line: 2130, column: 19, scope: !3240)
!3250 = !DILocation(line: 2131, column: 1, scope: !3240)
!3251 = distinct !DISubprogram(name: "read_specific_config", scope: !888, file: !888, line: 291, type: !3252, isLocal: true, isDefinition: true, scopeLine: 292, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!906, !1703}
!3254 = !DILocalVariable(name: "x", arg: 1, scope: !3255, file: !3256, line: 332, type: !906)
!3255 = distinct !DISubprogram(name: "av_ceil_log2_c", scope: !3256, file: !3256, line: 332, type: !3257, isLocal: true, isDefinition: true, scopeLine: 333, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3256 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3257 = !DISubroutineType(types: !3258)
!3258 = !{!906, !906}
!3259 = !DILocation(line: 332, column: 92, scope: !3255, inlinedAt: !3260)
!3260 = distinct !DILocation(line: 361, column: 29, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3262, file: !888, line: 360, column: 50)
!3262 = distinct !DILexicalBlock(scope: !3251, file: !888, line: 360, column: 9)
!3263 = !DILocalVariable(name: "ctx", arg: 1, scope: !3251, file: !888, line: 291, type: !1703)
!3264 = !DILocation(line: 291, column: 70, scope: !3251)
!3265 = !DILocalVariable(name: "gb", scope: !3251, file: !888, line: 293, type: !1735)
!3266 = !DILocation(line: 293, column: 19, scope: !3251)
!3267 = !DILocalVariable(name: "ht_size", scope: !3251, file: !888, line: 294, type: !920)
!3268 = !DILocation(line: 294, column: 14, scope: !3251)
!3269 = !DILocalVariable(name: "i", scope: !3251, file: !888, line: 295, type: !906)
!3270 = !DILocation(line: 295, column: 9, scope: !3251)
!3271 = !DILocalVariable(name: "config_offset", scope: !3251, file: !888, line: 295, type: !906)
!3272 = !DILocation(line: 295, column: 12, scope: !3251)
!3273 = !DILocalVariable(name: "m4ac", scope: !3251, file: !888, line: 296, type: !3274)
!3274 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPEG4AudioConfig", file: !3275, line: 46, baseType: !3276)
!3275 = !DIFile(filename: "libavcodec/mpeg4audio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPEG4AudioConfig", file: !3275, line: 33, size: 384, align: 32, elements: !3277)
!3277 = !{!3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !3276, file: !3275, line: 34, baseType: !906, size: 32, align: 32)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !3276, file: !3275, line: 35, baseType: !906, size: 32, align: 32, offset: 32)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !3276, file: !3275, line: 36, baseType: !906, size: 32, align: 32, offset: 64)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !3276, file: !3275, line: 37, baseType: !906, size: 32, align: 32, offset: 96)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !3276, file: !3275, line: 38, baseType: !906, size: 32, align: 32, offset: 128)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "ext_object_type", scope: !3276, file: !3275, line: 39, baseType: !906, size: 32, align: 32, offset: 160)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sampling_index", scope: !3276, file: !3275, line: 40, baseType: !906, size: 32, align: 32, offset: 192)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sample_rate", scope: !3276, file: !3275, line: 41, baseType: !906, size: 32, align: 32, offset: 224)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "ext_chan_config", scope: !3276, file: !3275, line: 42, baseType: !906, size: 32, align: 32, offset: 256)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !3276, file: !3275, line: 43, baseType: !906, size: 32, align: 32, offset: 288)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !3276, file: !3275, line: 44, baseType: !906, size: 32, align: 32, offset: 320)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length_short", scope: !3276, file: !3275, line: 45, baseType: !906, size: 32, align: 32, offset: 352)
!3290 = !DILocation(line: 296, column: 22, scope: !3251)
!3291 = !DILocalVariable(name: "sconf", scope: !3251, file: !888, line: 297, type: !1847)
!3292 = !DILocation(line: 297, column: 24, scope: !3251)
!3293 = !DILocation(line: 297, column: 33, scope: !3251)
!3294 = !DILocation(line: 297, column: 38, scope: !3251)
!3295 = !DILocalVariable(name: "avctx", scope: !3251, file: !888, line: 298, type: !1022)
!3296 = !DILocation(line: 298, column: 21, scope: !3251)
!3297 = !DILocation(line: 298, column: 29, scope: !3251)
!3298 = !DILocation(line: 298, column: 34, scope: !3251)
!3299 = !DILocalVariable(name: "als_id", scope: !3251, file: !888, line: 299, type: !917)
!3300 = !DILocation(line: 299, column: 14, scope: !3251)
!3301 = !DILocalVariable(name: "header_size", scope: !3251, file: !888, line: 299, type: !917)
!3302 = !DILocation(line: 299, column: 22, scope: !3251)
!3303 = !DILocalVariable(name: "trailer_size", scope: !3251, file: !888, line: 299, type: !917)
!3304 = !DILocation(line: 299, column: 35, scope: !3251)
!3305 = !DILocalVariable(name: "ret", scope: !3251, file: !888, line: 300, type: !906)
!3306 = !DILocation(line: 300, column: 9, scope: !3251)
!3307 = !DILocation(line: 302, column: 36, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3251, file: !888, line: 302, column: 9)
!3309 = !DILocation(line: 302, column: 43, scope: !3308)
!3310 = !DILocation(line: 302, column: 54, scope: !3308)
!3311 = !DILocation(line: 302, column: 61, scope: !3308)
!3312 = !DILocation(line: 302, column: 16, scope: !3308)
!3313 = !DILocation(line: 302, column: 14, scope: !3308)
!3314 = !DILocation(line: 302, column: 78, scope: !3308)
!3315 = !DILocation(line: 302, column: 9, scope: !3251)
!3316 = !DILocation(line: 303, column: 16, scope: !3308)
!3317 = !DILocation(line: 303, column: 9, scope: !3308)
!3318 = !DILocation(line: 305, column: 57, scope: !3251)
!3319 = !DILocation(line: 305, column: 64, scope: !3251)
!3320 = !DILocation(line: 306, column: 50, scope: !3251)
!3321 = !DILocation(line: 306, column: 57, scope: !3251)
!3322 = !DILocation(line: 306, column: 72, scope: !3251)
!3323 = !DILocation(line: 305, column: 21, scope: !3251)
!3324 = !DILocation(line: 305, column: 19, scope: !3251)
!3325 = !DILocation(line: 308, column: 9, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3251, file: !888, line: 308, column: 9)
!3327 = !DILocation(line: 308, column: 23, scope: !3326)
!3328 = !DILocation(line: 308, column: 9, scope: !3251)
!3329 = !DILocation(line: 309, column: 9, scope: !3326)
!3330 = !DILocation(line: 311, column: 25, scope: !3251)
!3331 = !DILocation(line: 311, column: 5, scope: !3251)
!3332 = !DILocation(line: 313, column: 9, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3251, file: !888, line: 313, column: 9)
!3334 = !DILocation(line: 313, column: 28, scope: !3333)
!3335 = !DILocation(line: 313, column: 9, scope: !3251)
!3336 = !DILocation(line: 314, column: 9, scope: !3333)
!3337 = !DILocation(line: 317, column: 14, scope: !3251)
!3338 = !DILocation(line: 317, column: 12, scope: !3251)
!3339 = !DILocation(line: 318, column: 31, scope: !3251)
!3340 = !DILocation(line: 318, column: 5, scope: !3251)
!3341 = !DILocation(line: 318, column: 12, scope: !3251)
!3342 = !DILocation(line: 318, column: 24, scope: !3251)
!3343 = !DILocation(line: 319, column: 5, scope: !3251)
!3344 = !DILocation(line: 320, column: 22, scope: !3251)
!3345 = !DILocation(line: 320, column: 5, scope: !3251)
!3346 = !DILocation(line: 320, column: 12, scope: !3251)
!3347 = !DILocation(line: 320, column: 20, scope: !3251)
!3348 = !DILocation(line: 321, column: 28, scope: !3251)
!3349 = !DILocation(line: 321, column: 5, scope: !3251)
!3350 = !DILocation(line: 321, column: 12, scope: !3251)
!3351 = !DILocation(line: 321, column: 21, scope: !3251)
!3352 = !DILocation(line: 322, column: 5, scope: !3251)
!3353 = !DILocation(line: 323, column: 5, scope: !3251)
!3354 = !DILocation(line: 324, column: 25, scope: !3251)
!3355 = !DILocation(line: 324, column: 5, scope: !3251)
!3356 = !DILocation(line: 324, column: 12, scope: !3251)
!3357 = !DILocation(line: 324, column: 23, scope: !3251)
!3358 = !DILocation(line: 325, column: 23, scope: !3251)
!3359 = !DILocation(line: 325, column: 5, scope: !3251)
!3360 = !DILocation(line: 325, column: 12, scope: !3251)
!3361 = !DILocation(line: 325, column: 21, scope: !3251)
!3362 = !DILocation(line: 326, column: 24, scope: !3251)
!3363 = !DILocation(line: 326, column: 5, scope: !3251)
!3364 = !DILocation(line: 326, column: 12, scope: !3251)
!3365 = !DILocation(line: 326, column: 22, scope: !3251)
!3366 = !DILocation(line: 327, column: 27, scope: !3251)
!3367 = !DILocation(line: 327, column: 45, scope: !3251)
!3368 = !DILocation(line: 327, column: 5, scope: !3251)
!3369 = !DILocation(line: 327, column: 12, scope: !3251)
!3370 = !DILocation(line: 327, column: 25, scope: !3251)
!3371 = !DILocation(line: 328, column: 26, scope: !3251)
!3372 = !DILocation(line: 328, column: 5, scope: !3251)
!3373 = !DILocation(line: 328, column: 12, scope: !3251)
!3374 = !DILocation(line: 328, column: 24, scope: !3251)
!3375 = !DILocation(line: 329, column: 22, scope: !3251)
!3376 = !DILocation(line: 329, column: 5, scope: !3251)
!3377 = !DILocation(line: 329, column: 12, scope: !3251)
!3378 = !DILocation(line: 329, column: 20, scope: !3251)
!3379 = !DILocation(line: 330, column: 26, scope: !3251)
!3380 = !DILocation(line: 330, column: 5, scope: !3251)
!3381 = !DILocation(line: 330, column: 12, scope: !3251)
!3382 = !DILocation(line: 330, column: 24, scope: !3251)
!3383 = !DILocation(line: 331, column: 25, scope: !3251)
!3384 = !DILocation(line: 331, column: 5, scope: !3251)
!3385 = !DILocation(line: 331, column: 12, scope: !3251)
!3386 = !DILocation(line: 331, column: 23, scope: !3251)
!3387 = !DILocation(line: 332, column: 35, scope: !3251)
!3388 = !DILocation(line: 332, column: 5, scope: !3251)
!3389 = !DILocation(line: 332, column: 12, scope: !3251)
!3390 = !DILocation(line: 332, column: 33, scope: !3251)
!3391 = !DILocation(line: 333, column: 24, scope: !3251)
!3392 = !DILocation(line: 333, column: 5, scope: !3251)
!3393 = !DILocation(line: 333, column: 12, scope: !3251)
!3394 = !DILocation(line: 333, column: 22, scope: !3251)
!3395 = !DILocation(line: 334, column: 30, scope: !3251)
!3396 = !DILocation(line: 334, column: 5, scope: !3251)
!3397 = !DILocation(line: 334, column: 12, scope: !3251)
!3398 = !DILocation(line: 334, column: 28, scope: !3251)
!3399 = !DILocation(line: 335, column: 19, scope: !3251)
!3400 = !DILocation(line: 335, column: 5, scope: !3251)
!3401 = !DILocation(line: 335, column: 12, scope: !3251)
!3402 = !DILocation(line: 335, column: 17, scope: !3251)
!3403 = !DILocation(line: 336, column: 22, scope: !3251)
!3404 = !DILocation(line: 336, column: 5, scope: !3251)
!3405 = !DILocation(line: 336, column: 12, scope: !3251)
!3406 = !DILocation(line: 336, column: 20, scope: !3251)
!3407 = !DILocation(line: 337, column: 27, scope: !3251)
!3408 = !DILocation(line: 337, column: 5, scope: !3251)
!3409 = !DILocation(line: 337, column: 12, scope: !3251)
!3410 = !DILocation(line: 337, column: 25, scope: !3251)
!3411 = !DILocation(line: 338, column: 24, scope: !3251)
!3412 = !DILocation(line: 338, column: 5, scope: !3251)
!3413 = !DILocation(line: 338, column: 12, scope: !3251)
!3414 = !DILocation(line: 338, column: 22, scope: !3251)
!3415 = !DILocation(line: 339, column: 26, scope: !3251)
!3416 = !DILocation(line: 339, column: 5, scope: !3251)
!3417 = !DILocation(line: 339, column: 12, scope: !3251)
!3418 = !DILocation(line: 339, column: 24, scope: !3251)
!3419 = !DILocation(line: 340, column: 24, scope: !3251)
!3420 = !DILocation(line: 340, column: 5, scope: !3251)
!3421 = !DILocation(line: 340, column: 12, scope: !3251)
!3422 = !DILocation(line: 340, column: 22, scope: !3251)
!3423 = !DILocation(line: 341, column: 26, scope: !3251)
!3424 = !DILocation(line: 341, column: 5, scope: !3251)
!3425 = !DILocation(line: 341, column: 12, scope: !3251)
!3426 = !DILocation(line: 341, column: 24, scope: !3251)
!3427 = !DILocation(line: 342, column: 21, scope: !3251)
!3428 = !DILocation(line: 342, column: 5, scope: !3251)
!3429 = !DILocation(line: 342, column: 12, scope: !3251)
!3430 = !DILocation(line: 342, column: 19, scope: !3251)
!3431 = !DILocation(line: 343, column: 5, scope: !3251)
!3432 = !DILocation(line: 344, column: 5, scope: !3251)
!3433 = !DILocation(line: 348, column: 9, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3251, file: !888, line: 348, column: 9)
!3435 = !DILocation(line: 348, column: 16, scope: !3434)
!3436 = !DILocation(line: 348, column: 9, scope: !3251)
!3437 = !DILocation(line: 349, column: 9, scope: !3434)
!3438 = !DILocation(line: 351, column: 29, scope: !3251)
!3439 = !DILocation(line: 351, column: 36, scope: !3251)
!3440 = !DILocation(line: 351, column: 5, scope: !3251)
!3441 = !DILocation(line: 351, column: 10, scope: !3251)
!3442 = !DILocation(line: 351, column: 27, scope: !3251)
!3443 = !DILocation(line: 354, column: 9, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3251, file: !888, line: 354, column: 9)
!3445 = !DILocation(line: 354, column: 16, scope: !3444)
!3446 = !DILocation(line: 354, column: 9, scope: !3251)
!3447 = !DILocation(line: 355, column: 35, scope: !3444)
!3448 = !DILocation(line: 355, column: 9, scope: !3444)
!3449 = !DILocation(line: 355, column: 16, scope: !3444)
!3450 = !DILocation(line: 355, column: 33, scope: !3444)
!3451 = !DILocation(line: 360, column: 9, scope: !3262)
!3452 = !DILocation(line: 360, column: 16, scope: !3262)
!3453 = !DILocation(line: 360, column: 26, scope: !3262)
!3454 = !DILocation(line: 360, column: 29, scope: !3455)
!3455 = !DILexicalBlockFile(scope: !3262, file: !888, discriminator: 1)
!3456 = !DILocation(line: 360, column: 36, scope: !3455)
!3457 = !DILocation(line: 360, column: 45, scope: !3455)
!3458 = !DILocation(line: 360, column: 9, scope: !3455)
!3459 = !DILocalVariable(name: "chan_pos_bits", scope: !3261, file: !888, line: 361, type: !906)
!3460 = !DILocation(line: 361, column: 13, scope: !3261)
!3461 = !DILocation(line: 361, column: 44, scope: !3261)
!3462 = !DILocation(line: 361, column: 51, scope: !3261)
!3463 = !DILocation(line: 361, column: 29, scope: !3261)
!3464 = !DILocation(line: 334, column: 34, scope: !3255, inlinedAt: !3260)
!3465 = !DILocation(line: 334, column: 36, scope: !3255, inlinedAt: !3260)
!3466 = !DILocation(line: 334, column: 41, scope: !3255, inlinedAt: !3260)
!3467 = !DILocation(line: 334, column: 46, scope: !3255, inlinedAt: !3260)
!3468 = !DILocation(line: 334, column: 18, scope: !3255, inlinedAt: !3260)
!3469 = !DILocation(line: 334, column: 16, scope: !3255, inlinedAt: !3260)
!3470 = !DILocalVariable(name: "bits_needed", scope: !3261, file: !888, line: 362, type: !906)
!3471 = !DILocation(line: 362, column: 13, scope: !3261)
!3472 = !DILocation(line: 362, column: 27, scope: !3261)
!3473 = !DILocation(line: 362, column: 34, scope: !3261)
!3474 = !DILocation(line: 362, column: 45, scope: !3261)
!3475 = !DILocation(line: 362, column: 43, scope: !3261)
!3476 = !DILocation(line: 362, column: 59, scope: !3261)
!3477 = !DILocation(line: 363, column: 13, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3261, file: !888, line: 363, column: 13)
!3479 = !DILocation(line: 363, column: 34, scope: !3478)
!3480 = !DILocation(line: 363, column: 32, scope: !3478)
!3481 = !DILocation(line: 363, column: 13, scope: !3261)
!3482 = !DILocation(line: 364, column: 13, scope: !3478)
!3483 = !DILocation(line: 366, column: 49, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3261, file: !888, line: 366, column: 13)
!3485 = !DILocation(line: 366, column: 56, scope: !3484)
!3486 = !DILocation(line: 366, column: 33, scope: !3484)
!3487 = !DILocation(line: 366, column: 15, scope: !3484)
!3488 = !DILocation(line: 366, column: 22, scope: !3484)
!3489 = !DILocation(line: 366, column: 31, scope: !3484)
!3490 = !DILocation(line: 366, column: 13, scope: !3261)
!3491 = !DILocation(line: 367, column: 13, scope: !3484)
!3492 = !DILocation(line: 369, column: 9, scope: !3261)
!3493 = !DILocation(line: 369, column: 14, scope: !3261)
!3494 = !DILocation(line: 369, column: 24, scope: !3261)
!3495 = !DILocation(line: 371, column: 16, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3261, file: !888, line: 371, column: 9)
!3497 = !DILocation(line: 371, column: 14, scope: !3496)
!3498 = !DILocation(line: 371, column: 21, scope: !3499)
!3499 = !DILexicalBlockFile(scope: !3500, file: !888, discriminator: 1)
!3500 = distinct !DILexicalBlock(scope: !3496, file: !888, line: 371, column: 9)
!3501 = !DILocation(line: 371, column: 25, scope: !3499)
!3502 = !DILocation(line: 371, column: 32, scope: !3499)
!3503 = !DILocation(line: 371, column: 23, scope: !3499)
!3504 = !DILocation(line: 371, column: 9, scope: !3499)
!3505 = !DILocation(line: 372, column: 29, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3500, file: !888, line: 371, column: 47)
!3507 = !DILocation(line: 372, column: 13, scope: !3506)
!3508 = !DILocation(line: 372, column: 20, scope: !3506)
!3509 = !DILocation(line: 372, column: 32, scope: !3506)
!3510 = !DILocation(line: 373, column: 9, scope: !3506)
!3511 = !DILocation(line: 371, column: 43, scope: !3512)
!3512 = !DILexicalBlockFile(scope: !3500, file: !888, discriminator: 2)
!3513 = !DILocation(line: 371, column: 9, scope: !3512)
!3514 = distinct !{!3514, !3515}
!3515 = !DILocation(line: 371, column: 9, scope: !3261)
!3516 = !DILocation(line: 375, column: 16, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3261, file: !888, line: 375, column: 9)
!3518 = !DILocation(line: 375, column: 14, scope: !3517)
!3519 = !DILocation(line: 375, column: 21, scope: !3520)
!3520 = !DILexicalBlockFile(scope: !3521, file: !888, discriminator: 1)
!3521 = distinct !DILexicalBlock(scope: !3517, file: !888, line: 375, column: 9)
!3522 = !DILocation(line: 375, column: 25, scope: !3520)
!3523 = !DILocation(line: 375, column: 32, scope: !3520)
!3524 = !DILocation(line: 375, column: 23, scope: !3520)
!3525 = !DILocation(line: 375, column: 9, scope: !3520)
!3526 = !DILocalVariable(name: "idx", scope: !3527, file: !888, line: 376, type: !906)
!3527 = distinct !DILexicalBlock(scope: !3521, file: !888, line: 375, column: 47)
!3528 = !DILocation(line: 376, column: 17, scope: !3527)
!3529 = !DILocation(line: 378, column: 33, scope: !3527)
!3530 = !DILocation(line: 378, column: 19, scope: !3527)
!3531 = !DILocation(line: 378, column: 17, scope: !3527)
!3532 = !DILocation(line: 379, column: 17, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3527, file: !888, line: 379, column: 17)
!3534 = !DILocation(line: 379, column: 24, scope: !3533)
!3535 = !DILocation(line: 379, column: 31, scope: !3533)
!3536 = !DILocation(line: 379, column: 21, scope: !3533)
!3537 = !DILocation(line: 379, column: 40, scope: !3533)
!3538 = !DILocation(line: 379, column: 59, scope: !3539)
!3539 = !DILexicalBlockFile(scope: !3533, file: !888, discriminator: 1)
!3540 = !DILocation(line: 379, column: 43, scope: !3539)
!3541 = !DILocation(line: 379, column: 50, scope: !3539)
!3542 = !DILocation(line: 379, column: 64, scope: !3539)
!3543 = !DILocation(line: 379, column: 17, scope: !3539)
!3544 = !DILocation(line: 380, column: 24, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3533, file: !888, line: 379, column: 71)
!3546 = !DILocation(line: 380, column: 17, scope: !3545)
!3547 = !DILocation(line: 381, column: 17, scope: !3545)
!3548 = !DILocation(line: 381, column: 22, scope: !3545)
!3549 = !DILocation(line: 381, column: 32, scope: !3545)
!3550 = !DILocation(line: 382, column: 17, scope: !3545)
!3551 = !DILocation(line: 384, column: 36, scope: !3527)
!3552 = !DILocation(line: 384, column: 29, scope: !3527)
!3553 = !DILocation(line: 384, column: 13, scope: !3527)
!3554 = !DILocation(line: 384, column: 20, scope: !3527)
!3555 = !DILocation(line: 384, column: 34, scope: !3527)
!3556 = !DILocation(line: 385, column: 9, scope: !3527)
!3557 = !DILocation(line: 375, column: 43, scope: !3558)
!3558 = !DILexicalBlockFile(scope: !3521, file: !888, discriminator: 2)
!3559 = !DILocation(line: 375, column: 9, scope: !3558)
!3560 = distinct !{!3560, !3561}
!3561 = !DILocation(line: 375, column: 9, scope: !3261)
!3562 = !DILocation(line: 387, column: 9, scope: !3261)
!3563 = !DILocation(line: 388, column: 5, scope: !3261)
!3564 = !DILocation(line: 393, column: 9, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3251, file: !888, line: 393, column: 9)
!3566 = !DILocation(line: 393, column: 28, scope: !3565)
!3567 = !DILocation(line: 393, column: 9, scope: !3251)
!3568 = !DILocation(line: 394, column: 9, scope: !3565)
!3569 = !DILocation(line: 396, column: 19, scope: !3251)
!3570 = !DILocation(line: 396, column: 17, scope: !3251)
!3571 = !DILocation(line: 397, column: 20, scope: !3251)
!3572 = !DILocation(line: 397, column: 18, scope: !3251)
!3573 = !DILocation(line: 398, column: 9, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3251, file: !888, line: 398, column: 9)
!3575 = !DILocation(line: 398, column: 21, scope: !3574)
!3576 = !DILocation(line: 398, column: 9, scope: !3251)
!3577 = !DILocation(line: 399, column: 21, scope: !3574)
!3578 = !DILocation(line: 399, column: 9, scope: !3574)
!3579 = !DILocation(line: 400, column: 9, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3251, file: !888, line: 400, column: 9)
!3581 = !DILocation(line: 400, column: 22, scope: !3580)
!3582 = !DILocation(line: 400, column: 9, scope: !3251)
!3583 = !DILocation(line: 401, column: 22, scope: !3580)
!3584 = !DILocation(line: 401, column: 9, scope: !3580)
!3585 = !DILocation(line: 403, column: 26, scope: !3251)
!3586 = !DILocation(line: 403, column: 16, scope: !3251)
!3587 = !DILocation(line: 403, column: 51, scope: !3251)
!3588 = !DILocation(line: 403, column: 41, scope: !3251)
!3589 = !DILocation(line: 403, column: 39, scope: !3251)
!3590 = !DILocation(line: 403, column: 66, scope: !3251)
!3591 = !DILocation(line: 403, column: 13, scope: !3251)
!3592 = !DILocation(line: 407, column: 9, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3251, file: !888, line: 407, column: 9)
!3594 = !DILocation(line: 407, column: 30, scope: !3593)
!3595 = !DILocation(line: 407, column: 28, scope: !3593)
!3596 = !DILocation(line: 407, column: 9, scope: !3251)
!3597 = !DILocation(line: 408, column: 9, scope: !3593)
!3598 = !DILocation(line: 410, column: 9, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3251, file: !888, line: 410, column: 9)
!3600 = !DILocation(line: 410, column: 17, scope: !3599)
!3601 = !DILocation(line: 410, column: 9, scope: !3251)
!3602 = !DILocation(line: 411, column: 9, scope: !3599)
!3603 = !DILocation(line: 413, column: 25, scope: !3251)
!3604 = !DILocation(line: 413, column: 5, scope: !3251)
!3605 = !DILocation(line: 417, column: 9, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3251, file: !888, line: 417, column: 9)
!3607 = !DILocation(line: 417, column: 16, scope: !3606)
!3608 = !DILocation(line: 417, column: 9, scope: !3251)
!3609 = !DILocation(line: 418, column: 13, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3611, file: !888, line: 418, column: 13)
!3611 = distinct !DILexicalBlock(scope: !3606, file: !888, line: 417, column: 29)
!3612 = !DILocation(line: 418, column: 32, scope: !3610)
!3613 = !DILocation(line: 418, column: 13, scope: !3611)
!3614 = !DILocation(line: 419, column: 13, scope: !3610)
!3615 = !DILocation(line: 421, column: 13, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3611, file: !888, line: 421, column: 13)
!3617 = !DILocation(line: 421, column: 20, scope: !3616)
!3618 = !DILocation(line: 421, column: 36, scope: !3616)
!3619 = !DILocation(line: 421, column: 13, scope: !3611)
!3620 = !DILocation(line: 422, column: 30, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3616, file: !888, line: 421, column: 56)
!3622 = !DILocation(line: 422, column: 13, scope: !3621)
!3623 = !DILocation(line: 422, column: 18, scope: !3621)
!3624 = !DILocation(line: 422, column: 28, scope: !3621)
!3625 = !DILocation(line: 423, column: 13, scope: !3621)
!3626 = !DILocation(line: 423, column: 18, scope: !3621)
!3627 = !DILocation(line: 423, column: 22, scope: !3621)
!3628 = !DILocation(line: 424, column: 29, scope: !3621)
!3629 = !DILocation(line: 424, column: 28, scope: !3621)
!3630 = !DILocation(line: 424, column: 13, scope: !3621)
!3631 = !DILocation(line: 424, column: 18, scope: !3621)
!3632 = !DILocation(line: 424, column: 26, scope: !3621)
!3633 = !DILocation(line: 425, column: 9, scope: !3621)
!3634 = !DILocation(line: 426, column: 13, scope: !3616)
!3635 = !DILocation(line: 427, column: 5, scope: !3611)
!3636 = !DILocation(line: 432, column: 28, scope: !3251)
!3637 = !DILocation(line: 432, column: 5, scope: !3251)
!3638 = !DILocation(line: 434, column: 5, scope: !3251)
!3639 = !DILocation(line: 435, column: 1, scope: !3251)
!3640 = distinct !DISubprogram(name: "check_specific_config", scope: !888, file: !888, line: 440, type: !3252, isLocal: true, isDefinition: true, scopeLine: 441, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3641 = !DILocalVariable(name: "ctx", arg: 1, scope: !3640, file: !888, line: 440, type: !1703)
!3642 = !DILocation(line: 440, column: 49, scope: !3640)
!3643 = !DILocalVariable(name: "sconf", scope: !3640, file: !888, line: 442, type: !1847)
!3644 = !DILocation(line: 442, column: 24, scope: !3640)
!3645 = !DILocation(line: 442, column: 33, scope: !3640)
!3646 = !DILocation(line: 442, column: 38, scope: !3640)
!3647 = !DILocalVariable(name: "error", scope: !3640, file: !888, line: 443, type: !906)
!3648 = !DILocation(line: 443, column: 9, scope: !3640)
!3649 = !DILocation(line: 455, column: 11, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !888, line: 455, column: 11)
!3651 = distinct !DILexicalBlock(scope: !3640, file: !888, line: 455, column: 5)
!3652 = !DILocation(line: 455, column: 18, scope: !3650)
!3653 = !DILocation(line: 455, column: 11, scope: !3651)
!3654 = !DILocation(line: 455, column: 58, scope: !3655)
!3655 = !DILexicalBlockFile(scope: !3656, file: !888, discriminator: 1)
!3656 = distinct !DILexicalBlock(scope: !3650, file: !888, line: 455, column: 26)
!3657 = !DILocation(line: 455, column: 63, scope: !3655)
!3658 = !DILocation(line: 455, column: 28, scope: !3655)
!3659 = !DILocation(line: 455, column: 108, scope: !3655)
!3660 = !DILocation(line: 455, column: 184, scope: !3655)
!3661 = !DILocation(line: 457, column: 12, scope: !3640)
!3662 = !DILocation(line: 457, column: 5, scope: !3640)
!3663 = distinct !DISubprogram(name: "init_get_bits8", scope: !1736, file: !1736, line: 650, type: !3664, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3664 = !DISubroutineType(types: !3665)
!3665 = !{!906, !3666, !1464, !906}
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64, align: 64)
!3667 = !DILocalVariable(name: "s", arg: 1, scope: !3663, file: !1736, line: 650, type: !3666)
!3668 = !DILocation(line: 650, column: 49, scope: !3663)
!3669 = !DILocalVariable(name: "buffer", arg: 2, scope: !3663, file: !1736, line: 650, type: !1464)
!3670 = !DILocation(line: 650, column: 67, scope: !3663)
!3671 = !DILocalVariable(name: "byte_size", arg: 3, scope: !3663, file: !1736, line: 651, type: !906)
!3672 = !DILocation(line: 651, column: 38, scope: !3663)
!3673 = !DILocation(line: 653, column: 9, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3663, file: !1736, line: 653, column: 9)
!3675 = !DILocation(line: 653, column: 19, scope: !3674)
!3676 = !DILocation(line: 653, column: 36, scope: !3674)
!3677 = !DILocation(line: 653, column: 39, scope: !3678)
!3678 = !DILexicalBlockFile(scope: !3674, file: !1736, discriminator: 1)
!3679 = !DILocation(line: 653, column: 49, scope: !3678)
!3680 = !DILocation(line: 653, column: 9, scope: !3678)
!3681 = !DILocation(line: 654, column: 19, scope: !3674)
!3682 = !DILocation(line: 654, column: 9, scope: !3674)
!3683 = !DILocation(line: 655, column: 26, scope: !3663)
!3684 = !DILocation(line: 655, column: 29, scope: !3663)
!3685 = !DILocation(line: 655, column: 37, scope: !3663)
!3686 = !DILocation(line: 655, column: 47, scope: !3663)
!3687 = !DILocation(line: 655, column: 12, scope: !3663)
!3688 = !DILocation(line: 655, column: 5, scope: !3663)
!3689 = distinct !DISubprogram(name: "skip_bits_long", scope: !1736, file: !1736, line: 293, type: !3690, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{null, !3666, !906}
!3692 = !DILocalVariable(name: "a", arg: 1, scope: !3693, file: !3256, line: 127, type: !906)
!3693 = distinct !DISubprogram(name: "av_clip_c", scope: !3256, file: !3256, line: 127, type: !3694, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{!906, !906, !906, !906}
!3696 = !DILocation(line: 127, column: 87, scope: !3693, inlinedAt: !3697)
!3697 = distinct !DILocation(line: 301, column: 17, scope: !3689)
!3698 = !DILocalVariable(name: "amin", arg: 2, scope: !3693, file: !3256, line: 127, type: !906)
!3699 = !DILocation(line: 127, column: 94, scope: !3693, inlinedAt: !3697)
!3700 = !DILocalVariable(name: "amax", arg: 3, scope: !3693, file: !3256, line: 127, type: !906)
!3701 = !DILocation(line: 127, column: 104, scope: !3693, inlinedAt: !3697)
!3702 = !DILocalVariable(name: "s", arg: 1, scope: !3689, file: !1736, line: 293, type: !3666)
!3703 = !DILocation(line: 293, column: 50, scope: !3689)
!3704 = !DILocalVariable(name: "n", arg: 2, scope: !3689, file: !1736, line: 293, type: !906)
!3705 = !DILocation(line: 293, column: 57, scope: !3689)
!3706 = !DILocation(line: 301, column: 27, scope: !3689)
!3707 = !DILocation(line: 301, column: 31, scope: !3689)
!3708 = !DILocation(line: 301, column: 34, scope: !3689)
!3709 = !DILocation(line: 301, column: 30, scope: !3689)
!3710 = !DILocation(line: 301, column: 41, scope: !3689)
!3711 = !DILocation(line: 301, column: 44, scope: !3689)
!3712 = !DILocation(line: 301, column: 65, scope: !3689)
!3713 = !DILocation(line: 301, column: 68, scope: !3689)
!3714 = !DILocation(line: 301, column: 63, scope: !3689)
!3715 = !DILocation(line: 301, column: 17, scope: !3689)
!3716 = !DILocation(line: 132, column: 9, scope: !3717, inlinedAt: !3697)
!3717 = distinct !DILexicalBlock(scope: !3693, file: !3256, line: 132, column: 9)
!3718 = !DILocation(line: 132, column: 13, scope: !3717, inlinedAt: !3697)
!3719 = !DILocation(line: 132, column: 11, scope: !3717, inlinedAt: !3697)
!3720 = !DILocation(line: 132, column: 9, scope: !3693, inlinedAt: !3697)
!3721 = !DILocation(line: 132, column: 26, scope: !3722, inlinedAt: !3697)
!3722 = !DILexicalBlockFile(scope: !3717, file: !3256, discriminator: 1)
!3723 = !DILocation(line: 132, column: 19, scope: !3722, inlinedAt: !3697)
!3724 = !DILocation(line: 133, column: 14, scope: !3725, inlinedAt: !3697)
!3725 = distinct !DILexicalBlock(scope: !3717, file: !3256, line: 133, column: 14)
!3726 = !DILocation(line: 133, column: 18, scope: !3725, inlinedAt: !3697)
!3727 = !DILocation(line: 133, column: 16, scope: !3725, inlinedAt: !3697)
!3728 = !DILocation(line: 133, column: 14, scope: !3717, inlinedAt: !3697)
!3729 = !DILocation(line: 133, column: 31, scope: !3730, inlinedAt: !3697)
!3730 = !DILexicalBlockFile(scope: !3725, file: !3256, discriminator: 1)
!3731 = !DILocation(line: 133, column: 24, scope: !3730, inlinedAt: !3697)
!3732 = !DILocation(line: 134, column: 17, scope: !3725, inlinedAt: !3697)
!3733 = !DILocation(line: 134, column: 10, scope: !3725, inlinedAt: !3697)
!3734 = !DILocation(line: 135, column: 1, scope: !3693, inlinedAt: !3697)
!3735 = !DILocation(line: 301, column: 5, scope: !3689)
!3736 = !DILocation(line: 301, column: 8, scope: !3689)
!3737 = !DILocation(line: 301, column: 14, scope: !3689)
!3738 = !DILocation(line: 304, column: 1, scope: !3689)
!3739 = distinct !DISubprogram(name: "get_bits_left", scope: !1736, file: !1736, line: 814, type: !3740, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!906, !3666}
!3742 = !DILocalVariable(name: "gb", arg: 1, scope: !3739, file: !1736, line: 814, type: !3666)
!3743 = !DILocation(line: 814, column: 48, scope: !3739)
!3744 = !DILocation(line: 816, column: 12, scope: !3739)
!3745 = !DILocation(line: 816, column: 16, scope: !3739)
!3746 = !DILocation(line: 816, column: 46, scope: !3739)
!3747 = !DILocation(line: 816, column: 31, scope: !3739)
!3748 = !DILocation(line: 816, column: 29, scope: !3739)
!3749 = !DILocation(line: 816, column: 5, scope: !3739)
!3750 = distinct !DISubprogram(name: "get_bits_long", scope: !1736, file: !1736, line: 531, type: !3751, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{!907, !3666, !906}
!3753 = !DILocalVariable(name: "s", arg: 1, scope: !3750, file: !1736, line: 531, type: !3666)
!3754 = !DILocation(line: 531, column: 57, scope: !3750)
!3755 = !DILocalVariable(name: "n", arg: 2, scope: !3750, file: !1736, line: 531, type: !906)
!3756 = !DILocation(line: 531, column: 64, scope: !3750)
!3757 = !DILocation(line: 534, column: 10, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3750, file: !1736, line: 534, column: 9)
!3759 = !DILocation(line: 534, column: 9, scope: !3750)
!3760 = !DILocation(line: 535, column: 9, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3758, file: !1736, line: 534, column: 13)
!3762 = !DILocation(line: 540, column: 16, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3758, file: !1736, line: 540, column: 16)
!3764 = !DILocation(line: 540, column: 18, scope: !3763)
!3765 = !DILocation(line: 540, column: 16, scope: !3758)
!3766 = !DILocation(line: 541, column: 25, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3763, file: !1736, line: 540, column: 25)
!3768 = !DILocation(line: 541, column: 28, scope: !3767)
!3769 = !DILocation(line: 541, column: 16, scope: !3767)
!3770 = !DILocation(line: 541, column: 9, scope: !3767)
!3771 = !DILocalVariable(name: "ret", scope: !3772, file: !1736, line: 547, type: !907)
!3772 = distinct !DILexicalBlock(scope: !3763, file: !1736, line: 542, column: 12)
!3773 = !DILocation(line: 547, column: 18, scope: !3772)
!3774 = !DILocation(line: 547, column: 33, scope: !3772)
!3775 = !DILocation(line: 547, column: 24, scope: !3772)
!3776 = !DILocation(line: 547, column: 44, scope: !3772)
!3777 = !DILocation(line: 547, column: 46, scope: !3772)
!3778 = !DILocation(line: 547, column: 40, scope: !3772)
!3779 = !DILocation(line: 548, column: 16, scope: !3772)
!3780 = !DILocation(line: 548, column: 31, scope: !3772)
!3781 = !DILocation(line: 548, column: 34, scope: !3772)
!3782 = !DILocation(line: 548, column: 36, scope: !3772)
!3783 = !DILocation(line: 548, column: 22, scope: !3772)
!3784 = !DILocation(line: 548, column: 20, scope: !3772)
!3785 = !DILocation(line: 548, column: 9, scope: !3772)
!3786 = !DILocation(line: 552, column: 1, scope: !3750)
!3787 = distinct !DISubprogram(name: "skip_bits", scope: !1736, file: !1736, line: 460, type: !3690, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3788 = !DILocalVariable(name: "s", arg: 1, scope: !3787, file: !1736, line: 460, type: !3666)
!3789 = !DILocation(line: 460, column: 45, scope: !3787)
!3790 = !DILocalVariable(name: "n", arg: 2, scope: !3787, file: !1736, line: 460, type: !906)
!3791 = !DILocation(line: 460, column: 52, scope: !3787)
!3792 = !DILocalVariable(name: "re_index", scope: !3787, file: !1736, line: 481, type: !907)
!3793 = !DILocation(line: 481, column: 18, scope: !3787)
!3794 = !DILocation(line: 481, column: 30, scope: !3787)
!3795 = !DILocation(line: 481, column: 34, scope: !3787)
!3796 = !DILocalVariable(name: "re_cache", scope: !3787, file: !1736, line: 481, type: !907)
!3797 = !DILocation(line: 481, column: 78, scope: !3787)
!3798 = !DILocalVariable(name: "re_size_plus8", scope: !3787, file: !1736, line: 481, type: !907)
!3799 = !DILocation(line: 481, column: 101, scope: !3787)
!3800 = !DILocation(line: 481, column: 118, scope: !3787)
!3801 = !DILocation(line: 481, column: 122, scope: !3787)
!3802 = !DILocation(line: 482, column: 18, scope: !3787)
!3803 = !DILocation(line: 482, column: 36, scope: !3787)
!3804 = !DILocation(line: 482, column: 48, scope: !3787)
!3805 = !DILocation(line: 482, column: 45, scope: !3787)
!3806 = !DILocation(line: 482, column: 33, scope: !3787)
!3807 = !DILocation(line: 482, column: 17, scope: !3787)
!3808 = !DILocation(line: 482, column: 55, scope: !3809)
!3809 = !DILexicalBlockFile(scope: !3787, file: !1736, discriminator: 1)
!3810 = !DILocation(line: 482, column: 67, scope: !3809)
!3811 = !DILocation(line: 482, column: 64, scope: !3809)
!3812 = !DILocation(line: 482, column: 17, scope: !3809)
!3813 = !DILocation(line: 482, column: 74, scope: !3814)
!3814 = !DILexicalBlockFile(scope: !3787, file: !1736, discriminator: 2)
!3815 = !DILocation(line: 482, column: 17, scope: !3814)
!3816 = !DILocation(line: 482, column: 17, scope: !3817)
!3817 = !DILexicalBlockFile(scope: !3787, file: !1736, discriminator: 3)
!3818 = !DILocation(line: 482, column: 14, scope: !3817)
!3819 = !DILocation(line: 483, column: 18, scope: !3787)
!3820 = !DILocation(line: 483, column: 6, scope: !3787)
!3821 = !DILocation(line: 483, column: 10, scope: !3787)
!3822 = !DILocation(line: 483, column: 16, scope: !3787)
!3823 = !DILocation(line: 485, column: 1, scope: !3787)
!3824 = distinct !DISubprogram(name: "get_bits", scope: !1736, file: !1736, line: 381, type: !3751, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3825 = !DILocation(line: 66, column: 98, scope: !2479, inlinedAt: !3826)
!3826 = distinct !DILocation(line: 401, column: 16, scope: !3824)
!3827 = !DILocalVariable(name: "s", arg: 1, scope: !3824, file: !1736, line: 381, type: !3666)
!3828 = !DILocation(line: 381, column: 52, scope: !3824)
!3829 = !DILocalVariable(name: "n", arg: 2, scope: !3824, file: !1736, line: 381, type: !906)
!3830 = !DILocation(line: 381, column: 59, scope: !3824)
!3831 = !DILocalVariable(name: "tmp", scope: !3824, file: !1736, line: 383, type: !906)
!3832 = !DILocation(line: 383, column: 18, scope: !3824)
!3833 = !DILocalVariable(name: "re_index", scope: !3824, file: !1736, line: 399, type: !907)
!3834 = !DILocation(line: 399, column: 18, scope: !3824)
!3835 = !DILocation(line: 399, column: 30, scope: !3824)
!3836 = !DILocation(line: 399, column: 34, scope: !3824)
!3837 = !DILocalVariable(name: "re_cache", scope: !3824, file: !1736, line: 399, type: !907)
!3838 = !DILocation(line: 399, column: 78, scope: !3824)
!3839 = !DILocalVariable(name: "re_size_plus8", scope: !3824, file: !1736, line: 399, type: !907)
!3840 = !DILocation(line: 399, column: 101, scope: !3824)
!3841 = !DILocation(line: 399, column: 118, scope: !3824)
!3842 = !DILocation(line: 399, column: 122, scope: !3824)
!3843 = !DILocation(line: 401, column: 60, scope: !3824)
!3844 = !DILocation(line: 401, column: 64, scope: !3824)
!3845 = !DILocation(line: 401, column: 74, scope: !3824)
!3846 = !DILocation(line: 401, column: 83, scope: !3824)
!3847 = !DILocation(line: 401, column: 71, scope: !3824)
!3848 = !DILocation(line: 401, column: 92, scope: !3824)
!3849 = !DILocation(line: 401, column: 16, scope: !3824)
!3850 = !DILocation(line: 68, column: 16, scope: !2479, inlinedAt: !3826)
!3851 = !DILocation(line: 68, column: 19, scope: !2479, inlinedAt: !3826)
!3852 = !DILocation(line: 68, column: 24, scope: !2479, inlinedAt: !3826)
!3853 = !DILocation(line: 68, column: 38, scope: !2479, inlinedAt: !3826)
!3854 = !DILocation(line: 68, column: 41, scope: !2479, inlinedAt: !3826)
!3855 = !DILocation(line: 68, column: 46, scope: !2479, inlinedAt: !3826)
!3856 = !DILocation(line: 68, column: 34, scope: !2479, inlinedAt: !3826)
!3857 = !DILocation(line: 68, column: 57, scope: !2479, inlinedAt: !3826)
!3858 = !DILocation(line: 68, column: 69, scope: !2479, inlinedAt: !3826)
!3859 = !DILocation(line: 68, column: 72, scope: !2479, inlinedAt: !3826)
!3860 = !DILocation(line: 68, column: 79, scope: !2479, inlinedAt: !3826)
!3861 = !DILocation(line: 68, column: 84, scope: !2479, inlinedAt: !3826)
!3862 = !DILocation(line: 68, column: 99, scope: !2479, inlinedAt: !3826)
!3863 = !DILocation(line: 68, column: 102, scope: !2479, inlinedAt: !3826)
!3864 = !DILocation(line: 68, column: 109, scope: !2479, inlinedAt: !3826)
!3865 = !DILocation(line: 68, column: 114, scope: !2479, inlinedAt: !3826)
!3866 = !DILocation(line: 68, column: 94, scope: !2479, inlinedAt: !3826)
!3867 = !DILocation(line: 68, column: 63, scope: !2479, inlinedAt: !3826)
!3868 = !DILocation(line: 401, column: 100, scope: !3824)
!3869 = !DILocation(line: 401, column: 109, scope: !3824)
!3870 = !DILocation(line: 401, column: 96, scope: !3824)
!3871 = !DILocation(line: 401, column: 14, scope: !3824)
!3872 = !DILocation(line: 402, column: 21, scope: !3824)
!3873 = !DILocation(line: 402, column: 31, scope: !3824)
!3874 = !DILocation(line: 402, column: 11, scope: !3824)
!3875 = !DILocation(line: 402, column: 9, scope: !3824)
!3876 = !DILocation(line: 403, column: 18, scope: !3824)
!3877 = !DILocation(line: 403, column: 36, scope: !3824)
!3878 = !DILocation(line: 403, column: 48, scope: !3824)
!3879 = !DILocation(line: 403, column: 45, scope: !3824)
!3880 = !DILocation(line: 403, column: 33, scope: !3824)
!3881 = !DILocation(line: 403, column: 17, scope: !3824)
!3882 = !DILocation(line: 403, column: 55, scope: !3883)
!3883 = !DILexicalBlockFile(scope: !3824, file: !1736, discriminator: 1)
!3884 = !DILocation(line: 403, column: 67, scope: !3883)
!3885 = !DILocation(line: 403, column: 64, scope: !3883)
!3886 = !DILocation(line: 403, column: 17, scope: !3883)
!3887 = !DILocation(line: 403, column: 74, scope: !3888)
!3888 = !DILexicalBlockFile(scope: !3824, file: !1736, discriminator: 2)
!3889 = !DILocation(line: 403, column: 17, scope: !3888)
!3890 = !DILocation(line: 403, column: 17, scope: !3891)
!3891 = !DILexicalBlockFile(scope: !3824, file: !1736, discriminator: 3)
!3892 = !DILocation(line: 403, column: 14, scope: !3891)
!3893 = !DILocation(line: 404, column: 18, scope: !3824)
!3894 = !DILocation(line: 404, column: 6, scope: !3824)
!3895 = !DILocation(line: 404, column: 10, scope: !3824)
!3896 = !DILocation(line: 404, column: 16, scope: !3824)
!3897 = !DILocation(line: 406, column: 12, scope: !3824)
!3898 = !DILocation(line: 406, column: 5, scope: !3824)
!3899 = distinct !DISubprogram(name: "get_bits1", scope: !1736, file: !1736, line: 487, type: !3900, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3900 = !DISubroutineType(types: !3901)
!3901 = !{!907, !3666}
!3902 = !DILocalVariable(name: "s", arg: 1, scope: !3899, file: !1736, line: 487, type: !3666)
!3903 = !DILocation(line: 487, column: 53, scope: !3899)
!3904 = !DILocalVariable(name: "index", scope: !3899, file: !1736, line: 499, type: !907)
!3905 = !DILocation(line: 499, column: 18, scope: !3899)
!3906 = !DILocation(line: 499, column: 26, scope: !3899)
!3907 = !DILocation(line: 499, column: 29, scope: !3899)
!3908 = !DILocalVariable(name: "result", scope: !3899, file: !1736, line: 500, type: !918)
!3909 = !DILocation(line: 500, column: 13, scope: !3899)
!3910 = !DILocation(line: 500, column: 32, scope: !3899)
!3911 = !DILocation(line: 500, column: 38, scope: !3899)
!3912 = !DILocation(line: 500, column: 22, scope: !3899)
!3913 = !DILocation(line: 500, column: 25, scope: !3899)
!3914 = !DILocation(line: 505, column: 16, scope: !3899)
!3915 = !DILocation(line: 505, column: 22, scope: !3899)
!3916 = !DILocation(line: 505, column: 12, scope: !3899)
!3917 = !DILocation(line: 506, column: 12, scope: !3899)
!3918 = !DILocation(line: 509, column: 9, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3899, file: !1736, line: 509, column: 9)
!3920 = !DILocation(line: 509, column: 12, scope: !3919)
!3921 = !DILocation(line: 509, column: 20, scope: !3919)
!3922 = !DILocation(line: 509, column: 23, scope: !3919)
!3923 = !DILocation(line: 509, column: 18, scope: !3919)
!3924 = !DILocation(line: 509, column: 9, scope: !3899)
!3925 = !DILocation(line: 511, column: 14, scope: !3919)
!3926 = !DILocation(line: 511, column: 9, scope: !3919)
!3927 = !DILocation(line: 512, column: 16, scope: !3899)
!3928 = !DILocation(line: 512, column: 5, scope: !3899)
!3929 = !DILocation(line: 512, column: 8, scope: !3899)
!3930 = !DILocation(line: 512, column: 14, scope: !3899)
!3931 = !DILocation(line: 514, column: 12, scope: !3899)
!3932 = !DILocation(line: 514, column: 5, scope: !3899)
!3933 = distinct !DISubprogram(name: "skip_bits1", scope: !1736, file: !1736, line: 523, type: !3934, isLocal: true, isDefinition: true, scopeLine: 524, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3934 = !DISubroutineType(types: !3935)
!3935 = !{null, !3666}
!3936 = !DILocalVariable(name: "s", arg: 1, scope: !3933, file: !1736, line: 523, type: !3666)
!3937 = !DILocation(line: 523, column: 46, scope: !3933)
!3938 = !DILocation(line: 525, column: 15, scope: !3933)
!3939 = !DILocation(line: 525, column: 5, scope: !3933)
!3940 = !DILocation(line: 526, column: 1, scope: !3933)
!3941 = distinct !DISubprogram(name: "align_get_bits", scope: !1736, file: !1736, line: 658, type: !3942, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!1464, !3666}
!3944 = !DILocalVariable(name: "s", arg: 1, scope: !3941, file: !1736, line: 658, type: !3666)
!3945 = !DILocation(line: 658, column: 60, scope: !3941)
!3946 = !DILocalVariable(name: "n", scope: !3941, file: !1736, line: 660, type: !906)
!3947 = !DILocation(line: 660, column: 9, scope: !3941)
!3948 = !DILocation(line: 660, column: 29, scope: !3941)
!3949 = !DILocation(line: 660, column: 14, scope: !3941)
!3950 = !DILocation(line: 660, column: 13, scope: !3941)
!3951 = !DILocation(line: 660, column: 32, scope: !3941)
!3952 = !DILocation(line: 661, column: 9, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3941, file: !1736, line: 661, column: 9)
!3954 = !DILocation(line: 661, column: 9, scope: !3941)
!3955 = !DILocation(line: 662, column: 19, scope: !3953)
!3956 = !DILocation(line: 662, column: 22, scope: !3953)
!3957 = !DILocation(line: 662, column: 9, scope: !3953)
!3958 = !DILocation(line: 663, column: 12, scope: !3941)
!3959 = !DILocation(line: 663, column: 15, scope: !3941)
!3960 = !DILocation(line: 663, column: 25, scope: !3941)
!3961 = !DILocation(line: 663, column: 28, scope: !3941)
!3962 = !DILocation(line: 663, column: 34, scope: !3941)
!3963 = !DILocation(line: 663, column: 22, scope: !3941)
!3964 = !DILocation(line: 663, column: 5, scope: !3941)
!3965 = distinct !DISubprogram(name: "dprint_specific_config", scope: !888, file: !888, line: 261, type: !3966, isLocal: true, isDefinition: true, scopeLine: 262, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{null, !1703}
!3968 = !DILocalVariable(name: "ctx", arg: 1, scope: !3965, file: !888, line: 261, type: !1703)
!3969 = !DILocation(line: 261, column: 73, scope: !3965)
!3970 = !DILocation(line: 286, column: 1, scope: !3965)
!3971 = distinct !DISubprogram(name: "init_get_bits", scope: !1736, file: !1736, line: 615, type: !3664, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!3972 = !DILocalVariable(name: "s", arg: 1, scope: !3971, file: !1736, line: 615, type: !3666)
!3973 = !DILocation(line: 615, column: 48, scope: !3971)
!3974 = !DILocalVariable(name: "buffer", arg: 2, scope: !3971, file: !1736, line: 615, type: !1464)
!3975 = !DILocation(line: 615, column: 66, scope: !3971)
!3976 = !DILocalVariable(name: "bit_size", arg: 3, scope: !3971, file: !1736, line: 616, type: !906)
!3977 = !DILocation(line: 616, column: 37, scope: !3971)
!3978 = !DILocalVariable(name: "buffer_size", scope: !3971, file: !1736, line: 618, type: !906)
!3979 = !DILocation(line: 618, column: 9, scope: !3971)
!3980 = !DILocalVariable(name: "ret", scope: !3971, file: !1736, line: 619, type: !906)
!3981 = !DILocation(line: 619, column: 9, scope: !3971)
!3982 = !DILocation(line: 621, column: 9, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3971, file: !1736, line: 621, column: 9)
!3984 = !DILocation(line: 621, column: 18, scope: !3983)
!3985 = !DILocation(line: 621, column: 64, scope: !3983)
!3986 = !DILocation(line: 621, column: 67, scope: !3987)
!3987 = !DILexicalBlockFile(scope: !3983, file: !1736, discriminator: 1)
!3988 = !DILocation(line: 621, column: 76, scope: !3987)
!3989 = !DILocation(line: 621, column: 80, scope: !3987)
!3990 = !DILocation(line: 621, column: 84, scope: !3991)
!3991 = !DILexicalBlockFile(scope: !3983, file: !1736, discriminator: 2)
!3992 = !DILocation(line: 621, column: 9, scope: !3991)
!3993 = !DILocation(line: 622, column: 18, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3983, file: !1736, line: 621, column: 92)
!3995 = !DILocation(line: 623, column: 16, scope: !3994)
!3996 = !DILocation(line: 624, column: 13, scope: !3994)
!3997 = !DILocation(line: 625, column: 5, scope: !3994)
!3998 = !DILocation(line: 627, column: 20, scope: !3971)
!3999 = !DILocation(line: 627, column: 29, scope: !3971)
!4000 = !DILocation(line: 627, column: 34, scope: !3971)
!4001 = !DILocation(line: 627, column: 17, scope: !3971)
!4002 = !DILocation(line: 629, column: 17, scope: !3971)
!4003 = !DILocation(line: 629, column: 5, scope: !3971)
!4004 = !DILocation(line: 629, column: 8, scope: !3971)
!4005 = !DILocation(line: 629, column: 15, scope: !3971)
!4006 = !DILocation(line: 630, column: 23, scope: !3971)
!4007 = !DILocation(line: 630, column: 5, scope: !3971)
!4008 = !DILocation(line: 630, column: 8, scope: !3971)
!4009 = !DILocation(line: 630, column: 21, scope: !3971)
!4010 = !DILocation(line: 631, column: 29, scope: !3971)
!4011 = !DILocation(line: 631, column: 38, scope: !3971)
!4012 = !DILocation(line: 631, column: 5, scope: !3971)
!4013 = !DILocation(line: 631, column: 8, scope: !3971)
!4014 = !DILocation(line: 631, column: 27, scope: !3971)
!4015 = !DILocation(line: 632, column: 21, scope: !3971)
!4016 = !DILocation(line: 632, column: 30, scope: !3971)
!4017 = !DILocation(line: 632, column: 28, scope: !3971)
!4018 = !DILocation(line: 632, column: 5, scope: !3971)
!4019 = !DILocation(line: 632, column: 8, scope: !3971)
!4020 = !DILocation(line: 632, column: 19, scope: !3971)
!4021 = !DILocation(line: 633, column: 5, scope: !3971)
!4022 = !DILocation(line: 633, column: 8, scope: !3971)
!4023 = !DILocation(line: 633, column: 14, scope: !3971)
!4024 = !DILocation(line: 639, column: 12, scope: !3971)
!4025 = !DILocation(line: 639, column: 5, scope: !3971)
!4026 = distinct !DISubprogram(name: "get_bits_count", scope: !1736, file: !1736, line: 219, type: !4027, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!4027 = !DISubroutineType(types: !4028)
!4028 = !{!906, !4029}
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64, align: 64)
!4030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1735)
!4031 = !DILocalVariable(name: "s", arg: 1, scope: !4026, file: !1736, line: 219, type: !4029)
!4032 = !DILocation(line: 219, column: 55, scope: !4026)
!4033 = !DILocation(line: 224, column: 12, scope: !4026)
!4034 = !DILocation(line: 224, column: 15, scope: !4026)
!4035 = !DILocation(line: 224, column: 5, scope: !4026)
!4036 = distinct !DISubprogram(name: "NEG_USR32", scope: !4037, file: !4037, line: 124, type: !4038, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!4037 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!4038 = !DISubroutineType(types: !4039)
!4039 = !{!917, !917, !1126}
!4040 = !DILocalVariable(name: "a", arg: 1, scope: !4036, file: !4037, line: 124, type: !917)
!4041 = !DILocation(line: 124, column: 43, scope: !4036)
!4042 = !DILocalVariable(name: "s", arg: 2, scope: !4036, file: !4037, line: 124, type: !1126)
!4043 = !DILocation(line: 124, column: 53, scope: !4036)
!4044 = !DILocation(line: 125, column: 5, scope: !4036)
!4045 = !DILocation(line: 127, column: 29, scope: !4036)
!4046 = !DILocation(line: 127, column: 28, scope: !4036)
!4047 = !DILocation(line: 127, column: 18, scope: !4036)
!4048 = !{i32 178635, i32 178649}
!4049 = !DILocation(line: 129, column: 12, scope: !4036)
!4050 = !DILocation(line: 129, column: 5, scope: !4036)
!4051 = distinct !DISubprogram(name: "read_frame_data", scope: !888, file: !888, line: 1598, type: !4052, isLocal: true, isDefinition: true, scopeLine: 1599, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{!906, !1703, !907}
!4054 = !DILocalVariable(name: "ctx", arg: 1, scope: !4051, file: !888, line: 1598, type: !1703)
!4055 = !DILocation(line: 1598, column: 43, scope: !4051)
!4056 = !DILocalVariable(name: "ra_frame", arg: 2, scope: !4051, file: !888, line: 1598, type: !907)
!4057 = !DILocation(line: 1598, column: 61, scope: !4051)
!4058 = !DILocalVariable(name: "sconf", scope: !4051, file: !888, line: 1600, type: !1847)
!4059 = !DILocation(line: 1600, column: 24, scope: !4051)
!4060 = !DILocation(line: 1600, column: 33, scope: !4051)
!4061 = !DILocation(line: 1600, column: 38, scope: !4051)
!4062 = !DILocalVariable(name: "avctx", scope: !4051, file: !888, line: 1601, type: !1022)
!4063 = !DILocation(line: 1601, column: 21, scope: !4051)
!4064 = !DILocation(line: 1601, column: 29, scope: !4051)
!4065 = !DILocation(line: 1601, column: 34, scope: !4051)
!4066 = !DILocalVariable(name: "gb", scope: !4051, file: !888, line: 1602, type: !3666)
!4067 = !DILocation(line: 1602, column: 20, scope: !4051)
!4068 = !DILocation(line: 1602, column: 26, scope: !4051)
!4069 = !DILocation(line: 1602, column: 31, scope: !4051)
!4070 = !DILocalVariable(name: "div_blocks", scope: !4051, file: !888, line: 1603, type: !4071)
!4071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 1024, align: 32, elements: !1675)
!4072 = !DILocation(line: 1603, column: 18, scope: !4051)
!4073 = !DILocalVariable(name: "c", scope: !4051, file: !888, line: 1604, type: !907)
!4074 = !DILocation(line: 1604, column: 18, scope: !4051)
!4075 = !DILocalVariable(name: "js_blocks", scope: !4051, file: !888, line: 1605, type: !4076)
!4076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 64, align: 32, elements: !4077)
!4077 = !{!1664}
!4078 = !DILocation(line: 1605, column: 18, scope: !4051)
!4079 = !DILocalVariable(name: "bs_info", scope: !4051, file: !888, line: 1606, type: !917)
!4080 = !DILocation(line: 1606, column: 14, scope: !4051)
!4081 = !DILocalVariable(name: "ret", scope: !4051, file: !888, line: 1607, type: !906)
!4082 = !DILocation(line: 1607, column: 9, scope: !4051)
!4083 = !DILocation(line: 1610, column: 9, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4051, file: !888, line: 1610, column: 9)
!4085 = !DILocation(line: 1610, column: 16, scope: !4084)
!4086 = !DILocation(line: 1610, column: 24, scope: !4084)
!4087 = !DILocation(line: 1610, column: 42, scope: !4084)
!4088 = !DILocation(line: 1610, column: 45, scope: !4089)
!4089 = !DILexicalBlockFile(scope: !4084, file: !888, discriminator: 1)
!4090 = !DILocation(line: 1610, column: 9, scope: !4089)
!4091 = !DILocation(line: 1611, column: 24, scope: !4084)
!4092 = !DILocation(line: 1611, column: 9, scope: !4084)
!4093 = !DILocation(line: 1613, column: 9, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4051, file: !888, line: 1613, column: 9)
!4095 = !DILocation(line: 1613, column: 16, scope: !4094)
!4096 = !DILocation(line: 1613, column: 26, scope: !4094)
!4097 = !DILocation(line: 1613, column: 29, scope: !4098)
!4098 = !DILexicalBlockFile(scope: !4094, file: !888, discriminator: 1)
!4099 = !DILocation(line: 1613, column: 36, scope: !4098)
!4100 = !DILocation(line: 1613, column: 9, scope: !4098)
!4101 = !DILocation(line: 1614, column: 36, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4094, file: !888, line: 1613, column: 50)
!4103 = !DILocation(line: 1614, column: 26, scope: !4102)
!4104 = !DILocation(line: 1614, column: 9, scope: !4102)
!4105 = !DILocation(line: 1614, column: 14, scope: !4102)
!4106 = !DILocation(line: 1614, column: 24, scope: !4102)
!4107 = !DILocation(line: 1615, column: 24, scope: !4102)
!4108 = !DILocation(line: 1615, column: 9, scope: !4102)
!4109 = !DILocation(line: 1616, column: 5, scope: !4102)
!4110 = !DILocation(line: 1618, column: 10, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4051, file: !888, line: 1618, column: 9)
!4112 = !DILocation(line: 1618, column: 17, scope: !4111)
!4113 = !DILocation(line: 1618, column: 27, scope: !4111)
!4114 = !DILocation(line: 1618, column: 30, scope: !4115)
!4115 = !DILexicalBlockFile(scope: !4111, file: !888, discriminator: 1)
!4116 = !DILocation(line: 1618, column: 35, scope: !4115)
!4117 = !DILocation(line: 1618, column: 9, scope: !4115)
!4118 = !DILocalVariable(name: "independent_bs", scope: !4119, file: !888, line: 1619, type: !906)
!4119 = distinct !DILexicalBlock(scope: !4111, file: !888, line: 1618, column: 46)
!4120 = !DILocation(line: 1619, column: 13, scope: !4119)
!4121 = !DILocation(line: 1619, column: 31, scope: !4119)
!4122 = !DILocation(line: 1619, column: 38, scope: !4119)
!4123 = !DILocation(line: 1619, column: 30, scope: !4119)
!4124 = !DILocation(line: 1621, column: 16, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4119, file: !888, line: 1621, column: 9)
!4126 = !DILocation(line: 1621, column: 14, scope: !4125)
!4127 = !DILocation(line: 1621, column: 21, scope: !4128)
!4128 = !DILexicalBlockFile(scope: !4129, file: !888, discriminator: 1)
!4129 = distinct !DILexicalBlock(scope: !4125, file: !888, line: 1621, column: 9)
!4130 = !DILocation(line: 1621, column: 25, scope: !4128)
!4131 = !DILocation(line: 1621, column: 32, scope: !4128)
!4132 = !DILocation(line: 1621, column: 23, scope: !4128)
!4133 = !DILocation(line: 1621, column: 9, scope: !4128)
!4134 = !DILocation(line: 1622, column: 13, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4129, file: !888, line: 1621, column: 47)
!4136 = !DILocation(line: 1622, column: 26, scope: !4135)
!4137 = !DILocation(line: 1623, column: 13, scope: !4135)
!4138 = !DILocation(line: 1623, column: 26, scope: !4135)
!4139 = !DILocation(line: 1625, column: 29, scope: !4135)
!4140 = !DILocation(line: 1625, column: 34, scope: !4135)
!4141 = !DILocation(line: 1625, column: 13, scope: !4135)
!4142 = !DILocation(line: 1629, column: 17, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4135, file: !888, line: 1629, column: 17)
!4144 = !DILocation(line: 1629, column: 24, scope: !4143)
!4145 = !DILocation(line: 1629, column: 37, scope: !4143)
!4146 = !DILocation(line: 1629, column: 40, scope: !4147)
!4147 = !DILexicalBlockFile(scope: !4143, file: !888, discriminator: 1)
!4148 = !DILocation(line: 1629, column: 47, scope: !4147)
!4149 = !DILocation(line: 1629, column: 17, scope: !4147)
!4150 = !DILocation(line: 1630, column: 21, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4143, file: !888, line: 1630, column: 21)
!4152 = !DILocation(line: 1630, column: 29, scope: !4151)
!4153 = !DILocation(line: 1630, column: 21, scope: !4143)
!4154 = !DILocation(line: 1631, column: 36, scope: !4151)
!4155 = !DILocation(line: 1631, column: 21, scope: !4151)
!4156 = !DILocation(line: 1630, column: 32, scope: !4157)
!4157 = !DILexicalBlockFile(scope: !4151, file: !888, discriminator: 1)
!4158 = !DILocation(line: 1634, column: 17, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4135, file: !888, line: 1634, column: 17)
!4160 = !DILocation(line: 1634, column: 22, scope: !4159)
!4161 = !DILocation(line: 1634, column: 29, scope: !4159)
!4162 = !DILocation(line: 1634, column: 38, scope: !4159)
!4163 = !DILocation(line: 1634, column: 19, scope: !4159)
!4164 = !DILocation(line: 1634, column: 42, scope: !4159)
!4165 = !DILocation(line: 1634, column: 46, scope: !4166)
!4166 = !DILexicalBlockFile(scope: !4159, file: !888, discriminator: 1)
!4167 = !DILocation(line: 1634, column: 48, scope: !4166)
!4168 = !DILocation(line: 1634, column: 17, scope: !4166)
!4169 = !DILocation(line: 1635, column: 32, scope: !4159)
!4170 = !DILocation(line: 1635, column: 17, scope: !4159)
!4171 = !DILocation(line: 1637, column: 17, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4135, file: !888, line: 1637, column: 17)
!4173 = !DILocation(line: 1637, column: 17, scope: !4135)
!4174 = !DILocation(line: 1638, column: 41, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4172, file: !888, line: 1637, column: 33)
!4176 = !DILocation(line: 1638, column: 46, scope: !4175)
!4177 = !DILocation(line: 1638, column: 56, scope: !4175)
!4178 = !DILocation(line: 1639, column: 41, scope: !4175)
!4179 = !DILocation(line: 1639, column: 53, scope: !4175)
!4180 = !DILocation(line: 1638, column: 23, scope: !4175)
!4181 = !DILocation(line: 1638, column: 21, scope: !4175)
!4182 = !DILocation(line: 1640, column: 21, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4175, file: !888, line: 1640, column: 21)
!4184 = !DILocation(line: 1640, column: 25, scope: !4183)
!4185 = !DILocation(line: 1640, column: 21, scope: !4175)
!4186 = !DILocation(line: 1641, column: 28, scope: !4183)
!4187 = !DILocation(line: 1641, column: 21, scope: !4183)
!4188 = !DILocation(line: 1642, column: 31, scope: !4175)
!4189 = !DILocation(line: 1643, column: 13, scope: !4175)
!4190 = !DILocation(line: 1644, column: 37, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4172, file: !888, line: 1643, column: 20)
!4192 = !DILocation(line: 1644, column: 42, scope: !4191)
!4193 = !DILocation(line: 1644, column: 52, scope: !4191)
!4194 = !DILocation(line: 1644, column: 55, scope: !4191)
!4195 = !DILocation(line: 1644, column: 67, scope: !4191)
!4196 = !DILocation(line: 1644, column: 23, scope: !4191)
!4197 = !DILocation(line: 1644, column: 21, scope: !4191)
!4198 = !DILocation(line: 1645, column: 21, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4191, file: !888, line: 1645, column: 21)
!4200 = !DILocation(line: 1645, column: 25, scope: !4199)
!4201 = !DILocation(line: 1645, column: 21, scope: !4191)
!4202 = !DILocation(line: 1646, column: 28, scope: !4199)
!4203 = !DILocation(line: 1646, column: 21, scope: !4199)
!4204 = !DILocation(line: 1648, column: 18, scope: !4191)
!4205 = !DILocation(line: 1652, column: 38, scope: !4135)
!4206 = !DILocation(line: 1652, column: 21, scope: !4135)
!4207 = !DILocation(line: 1652, column: 26, scope: !4135)
!4208 = !DILocation(line: 1652, column: 43, scope: !4135)
!4209 = !DILocation(line: 1652, column: 50, scope: !4135)
!4210 = !DILocation(line: 1652, column: 41, scope: !4135)
!4211 = !DILocation(line: 1652, column: 13, scope: !4135)
!4212 = !DILocation(line: 1653, column: 38, scope: !4135)
!4213 = !DILocation(line: 1653, column: 21, scope: !4135)
!4214 = !DILocation(line: 1653, column: 26, scope: !4135)
!4215 = !DILocation(line: 1653, column: 43, scope: !4135)
!4216 = !DILocation(line: 1653, column: 50, scope: !4135)
!4217 = !DILocation(line: 1653, column: 41, scope: !4135)
!4218 = !DILocation(line: 1653, column: 62, scope: !4135)
!4219 = !DILocation(line: 1653, column: 69, scope: !4135)
!4220 = !DILocation(line: 1653, column: 60, scope: !4135)
!4221 = !DILocation(line: 1654, column: 52, scope: !4135)
!4222 = !DILocation(line: 1654, column: 59, scope: !4135)
!4223 = !DILocation(line: 1654, column: 50, scope: !4135)
!4224 = !DILocation(line: 1655, column: 9, scope: !4135)
!4225 = !DILocation(line: 1621, column: 43, scope: !4226)
!4226 = !DILexicalBlockFile(scope: !4129, file: !888, discriminator: 2)
!4227 = !DILocation(line: 1621, column: 9, scope: !4226)
!4228 = distinct !{!4228, !4229}
!4229 = !DILocation(line: 1621, column: 9, scope: !4119)
!4230 = !DILocation(line: 1656, column: 5, scope: !4119)
!4231 = !DILocalVariable(name: "bd", scope: !4232, file: !888, line: 1657, type: !4233)
!4232 = distinct !DILexicalBlock(scope: !4111, file: !888, line: 1656, column: 12)
!4233 = !DIDerivedType(tag: DW_TAG_typedef, name: "ALSBlockData", file: !888, line: 258, baseType: !4234)
!4234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ALSBlockData", file: !888, line: 242, size: 896, align: 64, elements: !4235)
!4235 = !{!4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250}
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "block_length", scope: !4234, file: !888, line: 243, baseType: !907, size: 32, align: 32)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "ra_block", scope: !4234, file: !888, line: 244, baseType: !907, size: 32, align: 32, offset: 32)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "const_block", scope: !4234, file: !888, line: 245, baseType: !1313, size: 64, align: 64, offset: 64)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "js_blocks", scope: !4234, file: !888, line: 246, baseType: !906, size: 32, align: 32, offset: 128)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "shift_lsbs", scope: !4234, file: !888, line: 247, baseType: !1778, size: 64, align: 64, offset: 192)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "opt_order", scope: !4234, file: !888, line: 248, baseType: !1778, size: 64, align: 64, offset: 256)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "store_prev_samples", scope: !4234, file: !888, line: 249, baseType: !1313, size: 64, align: 64, offset: 320)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "use_ltp", scope: !4234, file: !888, line: 250, baseType: !1313, size: 64, align: 64, offset: 384)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_lag", scope: !4234, file: !888, line: 251, baseType: !1313, size: 64, align: 64, offset: 448)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_gain", scope: !4234, file: !888, line: 252, baseType: !1313, size: 64, align: 64, offset: 512)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "quant_cof", scope: !4234, file: !888, line: 253, baseType: !925, size: 64, align: 64, offset: 576)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_cof", scope: !4234, file: !888, line: 254, baseType: !925, size: 64, align: 64, offset: 640)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "raw_samples", scope: !4234, file: !888, line: 255, baseType: !925, size: 64, align: 64, offset: 704)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "prev_raw_samples", scope: !4234, file: !888, line: 256, baseType: !925, size: 64, align: 64, offset: 768)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "raw_other", scope: !4234, file: !888, line: 257, baseType: !925, size: 64, align: 64, offset: 832)
!4251 = !DILocation(line: 1657, column: 22, scope: !4232)
!4252 = !DILocalVariable(name: "b", scope: !4232, file: !888, line: 1658, type: !906)
!4253 = !DILocation(line: 1658, column: 13, scope: !4232)
!4254 = !DILocalVariable(name: "ret", scope: !4232, file: !888, line: 1658, type: !906)
!4255 = !DILocation(line: 1658, column: 16, scope: !4232)
!4256 = !DILocalVariable(name: "reverted_channels", scope: !4232, file: !888, line: 1659, type: !1313)
!4257 = !DILocation(line: 1659, column: 14, scope: !4232)
!4258 = !DILocation(line: 1659, column: 34, scope: !4232)
!4259 = !DILocation(line: 1659, column: 39, scope: !4232)
!4260 = !DILocalVariable(name: "offset", scope: !4232, file: !888, line: 1660, type: !907)
!4261 = !DILocation(line: 1660, column: 22, scope: !4232)
!4262 = !DILocation(line: 1662, column: 16, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4232, file: !888, line: 1662, column: 9)
!4264 = !DILocation(line: 1662, column: 14, scope: !4263)
!4265 = !DILocation(line: 1662, column: 21, scope: !4266)
!4266 = !DILexicalBlockFile(scope: !4267, file: !888, discriminator: 1)
!4267 = distinct !DILexicalBlock(scope: !4263, file: !888, line: 1662, column: 9)
!4268 = !DILocation(line: 1662, column: 25, scope: !4266)
!4269 = !DILocation(line: 1662, column: 32, scope: !4266)
!4270 = !DILocation(line: 1662, column: 23, scope: !4266)
!4271 = !DILocation(line: 1662, column: 9, scope: !4266)
!4272 = !DILocation(line: 1663, column: 32, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4267, file: !888, line: 1663, column: 17)
!4274 = !DILocation(line: 1663, column: 17, scope: !4273)
!4275 = !DILocation(line: 1663, column: 22, scope: !4273)
!4276 = !DILocation(line: 1663, column: 37, scope: !4273)
!4277 = !DILocation(line: 1663, column: 42, scope: !4273)
!4278 = !DILocation(line: 1663, column: 35, scope: !4273)
!4279 = !DILocation(line: 1663, column: 17, scope: !4267)
!4280 = !DILocation(line: 1664, column: 24, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4273, file: !888, line: 1663, column: 60)
!4282 = !DILocation(line: 1664, column: 29, scope: !4281)
!4283 = !DILocation(line: 1664, column: 17, scope: !4281)
!4284 = !DILocation(line: 1665, column: 17, scope: !4281)
!4285 = !DILocation(line: 1663, column: 42, scope: !4286)
!4286 = !DILexicalBlockFile(scope: !4273, file: !888, discriminator: 1)
!4287 = !DILocation(line: 1662, column: 43, scope: !4288)
!4288 = !DILexicalBlockFile(scope: !4267, file: !888, discriminator: 2)
!4289 = !DILocation(line: 1662, column: 9, scope: !4288)
!4290 = distinct !{!4290, !4291}
!4291 = !DILocation(line: 1662, column: 9, scope: !4232)
!4292 = !DILocation(line: 1668, column: 16, scope: !4232)
!4293 = !DILocation(line: 1668, column: 9, scope: !4232)
!4294 = !DILocation(line: 1668, column: 67, scope: !4232)
!4295 = !DILocation(line: 1668, column: 74, scope: !4232)
!4296 = !DILocation(line: 1668, column: 65, scope: !4232)
!4297 = !DILocation(line: 1670, column: 23, scope: !4232)
!4298 = !DILocation(line: 1670, column: 12, scope: !4232)
!4299 = !DILocation(line: 1670, column: 21, scope: !4232)
!4300 = !DILocation(line: 1671, column: 31, scope: !4232)
!4301 = !DILocation(line: 1671, column: 36, scope: !4232)
!4302 = !DILocation(line: 1671, column: 12, scope: !4232)
!4303 = !DILocation(line: 1671, column: 29, scope: !4232)
!4304 = !DILocation(line: 1673, column: 25, scope: !4232)
!4305 = !DILocation(line: 1673, column: 30, scope: !4232)
!4306 = !DILocation(line: 1673, column: 9, scope: !4232)
!4307 = !DILocation(line: 1675, column: 16, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4232, file: !888, line: 1675, column: 9)
!4309 = !DILocation(line: 1675, column: 14, scope: !4308)
!4310 = !DILocation(line: 1675, column: 21, scope: !4311)
!4311 = !DILexicalBlockFile(scope: !4312, file: !888, discriminator: 1)
!4312 = distinct !DILexicalBlock(scope: !4308, file: !888, line: 1675, column: 9)
!4313 = !DILocation(line: 1675, column: 25, scope: !4311)
!4314 = !DILocation(line: 1675, column: 30, scope: !4311)
!4315 = !DILocation(line: 1675, column: 23, scope: !4311)
!4316 = !DILocation(line: 1675, column: 9, scope: !4311)
!4317 = !DILocation(line: 1676, column: 42, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4312, file: !888, line: 1675, column: 47)
!4319 = !DILocation(line: 1676, column: 31, scope: !4318)
!4320 = !DILocation(line: 1676, column: 16, scope: !4318)
!4321 = !DILocation(line: 1676, column: 29, scope: !4318)
!4322 = !DILocation(line: 1677, column: 20, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4318, file: !888, line: 1677, column: 17)
!4324 = !DILocation(line: 1677, column: 33, scope: !4323)
!4325 = !DILocation(line: 1677, column: 17, scope: !4318)
!4326 = !DILocation(line: 1678, column: 24, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4323, file: !888, line: 1677, column: 39)
!4328 = !DILocation(line: 1678, column: 29, scope: !4327)
!4329 = !DILocation(line: 1680, column: 27, scope: !4327)
!4330 = !DILocation(line: 1678, column: 17, scope: !4327)
!4331 = !DILocation(line: 1681, column: 17, scope: !4327)
!4332 = !DILocation(line: 1684, column: 20, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4318, file: !888, line: 1684, column: 13)
!4334 = !DILocation(line: 1684, column: 18, scope: !4333)
!4335 = !DILocation(line: 1684, column: 25, scope: !4336)
!4336 = !DILexicalBlockFile(scope: !4337, file: !888, discriminator: 1)
!4337 = distinct !DILexicalBlock(scope: !4333, file: !888, line: 1684, column: 13)
!4338 = !DILocation(line: 1684, column: 29, scope: !4336)
!4339 = !DILocation(line: 1684, column: 36, scope: !4336)
!4340 = !DILocation(line: 1684, column: 27, scope: !4336)
!4341 = !DILocation(line: 1684, column: 13, scope: !4336)
!4342 = !DILocation(line: 1685, column: 34, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4337, file: !888, line: 1684, column: 51)
!4344 = !DILocation(line: 1685, column: 39, scope: !4343)
!4345 = !DILocation(line: 1685, column: 53, scope: !4343)
!4346 = !DILocation(line: 1685, column: 51, scope: !4343)
!4347 = !DILocation(line: 1685, column: 20, scope: !4343)
!4348 = !DILocation(line: 1685, column: 32, scope: !4343)
!4349 = !DILocation(line: 1686, column: 33, scope: !4343)
!4350 = !DILocation(line: 1686, column: 38, scope: !4343)
!4351 = !DILocation(line: 1686, column: 51, scope: !4343)
!4352 = !DILocation(line: 1686, column: 49, scope: !4343)
!4353 = !DILocation(line: 1686, column: 20, scope: !4343)
!4354 = !DILocation(line: 1686, column: 31, scope: !4343)
!4355 = !DILocation(line: 1687, column: 32, scope: !4343)
!4356 = !DILocation(line: 1687, column: 37, scope: !4343)
!4357 = !DILocation(line: 1687, column: 49, scope: !4343)
!4358 = !DILocation(line: 1687, column: 47, scope: !4343)
!4359 = !DILocation(line: 1687, column: 20, scope: !4343)
!4360 = !DILocation(line: 1687, column: 30, scope: !4343)
!4361 = !DILocation(line: 1688, column: 41, scope: !4343)
!4362 = !DILocation(line: 1688, column: 46, scope: !4343)
!4363 = !DILocation(line: 1688, column: 67, scope: !4343)
!4364 = !DILocation(line: 1688, column: 65, scope: !4343)
!4365 = !DILocation(line: 1688, column: 20, scope: !4343)
!4366 = !DILocation(line: 1688, column: 39, scope: !4343)
!4367 = !DILocation(line: 1689, column: 30, scope: !4343)
!4368 = !DILocation(line: 1689, column: 35, scope: !4343)
!4369 = !DILocation(line: 1689, column: 45, scope: !4343)
!4370 = !DILocation(line: 1689, column: 43, scope: !4343)
!4371 = !DILocation(line: 1689, column: 20, scope: !4343)
!4372 = !DILocation(line: 1689, column: 28, scope: !4343)
!4373 = !DILocation(line: 1690, column: 30, scope: !4343)
!4374 = !DILocation(line: 1690, column: 35, scope: !4343)
!4375 = !DILocation(line: 1690, column: 45, scope: !4343)
!4376 = !DILocation(line: 1690, column: 43, scope: !4343)
!4377 = !DILocation(line: 1690, column: 20, scope: !4343)
!4378 = !DILocation(line: 1690, column: 28, scope: !4343)
!4379 = !DILocation(line: 1691, column: 45, scope: !4343)
!4380 = !DILocation(line: 1691, column: 31, scope: !4343)
!4381 = !DILocation(line: 1691, column: 36, scope: !4343)
!4382 = !DILocation(line: 1691, column: 20, scope: !4343)
!4383 = !DILocation(line: 1691, column: 29, scope: !4343)
!4384 = !DILocation(line: 1692, column: 43, scope: !4343)
!4385 = !DILocation(line: 1692, column: 30, scope: !4343)
!4386 = !DILocation(line: 1692, column: 35, scope: !4343)
!4387 = !DILocation(line: 1692, column: 20, scope: !4343)
!4388 = !DILocation(line: 1692, column: 28, scope: !4343)
!4389 = !DILocation(line: 1693, column: 47, scope: !4343)
!4390 = !DILocation(line: 1693, column: 32, scope: !4343)
!4391 = !DILocation(line: 1693, column: 37, scope: !4343)
!4392 = !DILocation(line: 1693, column: 20, scope: !4343)
!4393 = !DILocation(line: 1693, column: 30, scope: !4343)
!4394 = !DILocation(line: 1694, column: 51, scope: !4343)
!4395 = !DILocation(line: 1694, column: 34, scope: !4343)
!4396 = !DILocation(line: 1694, column: 39, scope: !4343)
!4397 = !DILocation(line: 1694, column: 56, scope: !4343)
!4398 = !DILocation(line: 1694, column: 54, scope: !4343)
!4399 = !DILocation(line: 1694, column: 20, scope: !4343)
!4400 = !DILocation(line: 1694, column: 32, scope: !4343)
!4401 = !DILocation(line: 1695, column: 20, scope: !4343)
!4402 = !DILocation(line: 1695, column: 30, scope: !4343)
!4403 = !DILocation(line: 1697, column: 39, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4343, file: !888, line: 1697, column: 21)
!4405 = !DILocation(line: 1697, column: 28, scope: !4404)
!4406 = !DILocation(line: 1697, column: 26, scope: !4404)
!4407 = !DILocation(line: 1697, column: 50, scope: !4404)
!4408 = !DILocation(line: 1697, column: 21, scope: !4343)
!4409 = !DILocation(line: 1698, column: 28, scope: !4404)
!4410 = !DILocation(line: 1698, column: 21, scope: !4404)
!4411 = !DILocation(line: 1699, column: 46, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4343, file: !888, line: 1699, column: 21)
!4413 = !DILocation(line: 1699, column: 66, scope: !4412)
!4414 = !DILocation(line: 1699, column: 51, scope: !4412)
!4415 = !DILocation(line: 1699, column: 56, scope: !4412)
!4416 = !DILocation(line: 1699, column: 70, scope: !4412)
!4417 = !DILocation(line: 1699, column: 28, scope: !4412)
!4418 = !DILocation(line: 1699, column: 26, scope: !4412)
!4419 = !DILocation(line: 1699, column: 74, scope: !4412)
!4420 = !DILocation(line: 1699, column: 21, scope: !4343)
!4421 = !DILocation(line: 1700, column: 28, scope: !4412)
!4422 = !DILocation(line: 1700, column: 21, scope: !4412)
!4423 = !DILocation(line: 1701, column: 13, scope: !4343)
!4424 = !DILocation(line: 1684, column: 47, scope: !4425)
!4425 = !DILexicalBlockFile(scope: !4337, file: !888, discriminator: 2)
!4426 = !DILocation(line: 1684, column: 13, scope: !4425)
!4427 = distinct !{!4427, !4428}
!4428 = !DILocation(line: 1684, column: 13, scope: !4318)
!4429 = !DILocation(line: 1703, column: 20, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4318, file: !888, line: 1703, column: 13)
!4431 = !DILocation(line: 1703, column: 18, scope: !4430)
!4432 = !DILocation(line: 1703, column: 25, scope: !4433)
!4433 = !DILexicalBlockFile(scope: !4434, file: !888, discriminator: 1)
!4434 = distinct !DILexicalBlock(scope: !4430, file: !888, line: 1703, column: 13)
!4435 = !DILocation(line: 1703, column: 29, scope: !4433)
!4436 = !DILocation(line: 1703, column: 36, scope: !4433)
!4437 = !DILocation(line: 1703, column: 27, scope: !4433)
!4438 = !DILocation(line: 1703, column: 13, scope: !4433)
!4439 = !DILocation(line: 1704, column: 50, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4434, file: !888, line: 1703, column: 51)
!4441 = !DILocation(line: 1704, column: 60, scope: !4440)
!4442 = !DILocation(line: 1704, column: 65, scope: !4440)
!4443 = !DILocation(line: 1705, column: 50, scope: !4440)
!4444 = !DILocation(line: 1705, column: 69, scope: !4440)
!4445 = !DILocation(line: 1705, column: 77, scope: !4440)
!4446 = !DILocation(line: 1704, column: 23, scope: !4440)
!4447 = !DILocation(line: 1704, column: 21, scope: !4440)
!4448 = !DILocation(line: 1706, column: 21, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4440, file: !888, line: 1706, column: 21)
!4450 = !DILocation(line: 1706, column: 25, scope: !4449)
!4451 = !DILocation(line: 1706, column: 21, scope: !4440)
!4452 = !DILocation(line: 1707, column: 28, scope: !4449)
!4453 = !DILocation(line: 1707, column: 21, scope: !4449)
!4454 = !DILocation(line: 1708, column: 13, scope: !4440)
!4455 = !DILocation(line: 1703, column: 47, scope: !4456)
!4456 = !DILexicalBlockFile(scope: !4434, file: !888, discriminator: 2)
!4457 = !DILocation(line: 1703, column: 13, scope: !4456)
!4458 = distinct !{!4458, !4459}
!4459 = !DILocation(line: 1703, column: 13, scope: !4318)
!4460 = !DILocation(line: 1709, column: 20, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4318, file: !888, line: 1709, column: 13)
!4462 = !DILocation(line: 1709, column: 18, scope: !4461)
!4463 = !DILocation(line: 1709, column: 25, scope: !4464)
!4464 = !DILexicalBlockFile(scope: !4465, file: !888, discriminator: 1)
!4465 = distinct !DILexicalBlock(scope: !4461, file: !888, line: 1709, column: 13)
!4466 = !DILocation(line: 1709, column: 29, scope: !4464)
!4467 = !DILocation(line: 1709, column: 36, scope: !4464)
!4468 = !DILocation(line: 1709, column: 27, scope: !4464)
!4469 = !DILocation(line: 1709, column: 13, scope: !4464)
!4470 = !DILocation(line: 1710, column: 34, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4465, file: !888, line: 1709, column: 51)
!4472 = !DILocation(line: 1710, column: 39, scope: !4471)
!4473 = !DILocation(line: 1710, column: 53, scope: !4471)
!4474 = !DILocation(line: 1710, column: 51, scope: !4471)
!4475 = !DILocation(line: 1710, column: 20, scope: !4471)
!4476 = !DILocation(line: 1710, column: 32, scope: !4471)
!4477 = !DILocation(line: 1711, column: 33, scope: !4471)
!4478 = !DILocation(line: 1711, column: 38, scope: !4471)
!4479 = !DILocation(line: 1711, column: 51, scope: !4471)
!4480 = !DILocation(line: 1711, column: 49, scope: !4471)
!4481 = !DILocation(line: 1711, column: 20, scope: !4471)
!4482 = !DILocation(line: 1711, column: 31, scope: !4471)
!4483 = !DILocation(line: 1712, column: 32, scope: !4471)
!4484 = !DILocation(line: 1712, column: 37, scope: !4471)
!4485 = !DILocation(line: 1712, column: 49, scope: !4471)
!4486 = !DILocation(line: 1712, column: 47, scope: !4471)
!4487 = !DILocation(line: 1712, column: 20, scope: !4471)
!4488 = !DILocation(line: 1712, column: 30, scope: !4471)
!4489 = !DILocation(line: 1713, column: 41, scope: !4471)
!4490 = !DILocation(line: 1713, column: 46, scope: !4471)
!4491 = !DILocation(line: 1713, column: 67, scope: !4471)
!4492 = !DILocation(line: 1713, column: 65, scope: !4471)
!4493 = !DILocation(line: 1713, column: 20, scope: !4471)
!4494 = !DILocation(line: 1713, column: 39, scope: !4471)
!4495 = !DILocation(line: 1714, column: 30, scope: !4471)
!4496 = !DILocation(line: 1714, column: 35, scope: !4471)
!4497 = !DILocation(line: 1714, column: 45, scope: !4471)
!4498 = !DILocation(line: 1714, column: 43, scope: !4471)
!4499 = !DILocation(line: 1714, column: 20, scope: !4471)
!4500 = !DILocation(line: 1714, column: 28, scope: !4471)
!4501 = !DILocation(line: 1715, column: 30, scope: !4471)
!4502 = !DILocation(line: 1715, column: 35, scope: !4471)
!4503 = !DILocation(line: 1715, column: 45, scope: !4471)
!4504 = !DILocation(line: 1715, column: 43, scope: !4471)
!4505 = !DILocation(line: 1715, column: 20, scope: !4471)
!4506 = !DILocation(line: 1715, column: 28, scope: !4471)
!4507 = !DILocation(line: 1716, column: 45, scope: !4471)
!4508 = !DILocation(line: 1716, column: 31, scope: !4471)
!4509 = !DILocation(line: 1716, column: 36, scope: !4471)
!4510 = !DILocation(line: 1716, column: 20, scope: !4471)
!4511 = !DILocation(line: 1716, column: 29, scope: !4471)
!4512 = !DILocation(line: 1717, column: 43, scope: !4471)
!4513 = !DILocation(line: 1717, column: 30, scope: !4471)
!4514 = !DILocation(line: 1717, column: 35, scope: !4471)
!4515 = !DILocation(line: 1717, column: 20, scope: !4471)
!4516 = !DILocation(line: 1717, column: 28, scope: !4471)
!4517 = !DILocation(line: 1718, column: 47, scope: !4471)
!4518 = !DILocation(line: 1718, column: 32, scope: !4471)
!4519 = !DILocation(line: 1718, column: 37, scope: !4471)
!4520 = !DILocation(line: 1718, column: 20, scope: !4471)
!4521 = !DILocation(line: 1718, column: 30, scope: !4471)
!4522 = !DILocation(line: 1719, column: 51, scope: !4471)
!4523 = !DILocation(line: 1719, column: 34, scope: !4471)
!4524 = !DILocation(line: 1719, column: 39, scope: !4471)
!4525 = !DILocation(line: 1719, column: 56, scope: !4471)
!4526 = !DILocation(line: 1719, column: 54, scope: !4471)
!4527 = !DILocation(line: 1719, column: 20, scope: !4471)
!4528 = !DILocation(line: 1719, column: 32, scope: !4471)
!4529 = !DILocation(line: 1721, column: 41, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4471, file: !888, line: 1721, column: 21)
!4531 = !DILocation(line: 1721, column: 28, scope: !4530)
!4532 = !DILocation(line: 1721, column: 26, scope: !4530)
!4533 = !DILocation(line: 1721, column: 52, scope: !4530)
!4534 = !DILocation(line: 1721, column: 21, scope: !4471)
!4535 = !DILocation(line: 1722, column: 28, scope: !4530)
!4536 = !DILocation(line: 1722, column: 21, scope: !4530)
!4537 = !DILocation(line: 1723, column: 13, scope: !4471)
!4538 = !DILocation(line: 1709, column: 47, scope: !4539)
!4539 = !DILexicalBlockFile(scope: !4465, file: !888, discriminator: 2)
!4540 = !DILocation(line: 1709, column: 13, scope: !4539)
!4541 = distinct !{!4541, !4542}
!4542 = !DILocation(line: 1709, column: 13, scope: !4318)
!4543 = !DILocation(line: 1725, column: 20, scope: !4318)
!4544 = !DILocation(line: 1725, column: 13, scope: !4318)
!4545 = !DILocation(line: 1725, column: 42, scope: !4318)
!4546 = !DILocation(line: 1725, column: 49, scope: !4318)
!4547 = !DILocation(line: 1725, column: 58, scope: !4318)
!4548 = !DILocation(line: 1726, column: 34, scope: !4318)
!4549 = !DILocation(line: 1726, column: 23, scope: !4318)
!4550 = !DILocation(line: 1726, column: 20, scope: !4318)
!4551 = !DILocation(line: 1727, column: 16, scope: !4318)
!4552 = !DILocation(line: 1727, column: 25, scope: !4318)
!4553 = !DILocation(line: 1728, column: 9, scope: !4318)
!4554 = !DILocation(line: 1675, column: 43, scope: !4555)
!4555 = !DILexicalBlockFile(scope: !4312, file: !888, discriminator: 2)
!4556 = !DILocation(line: 1675, column: 9, scope: !4555)
!4557 = distinct !{!4557, !4558}
!4558 = !DILocation(line: 1675, column: 9, scope: !4232)
!4559 = !DILocation(line: 1731, column: 16, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4232, file: !888, line: 1731, column: 9)
!4561 = !DILocation(line: 1731, column: 14, scope: !4560)
!4562 = !DILocation(line: 1731, column: 21, scope: !4563)
!4563 = !DILexicalBlockFile(scope: !4564, file: !888, discriminator: 1)
!4564 = distinct !DILexicalBlock(scope: !4560, file: !888, line: 1731, column: 9)
!4565 = !DILocation(line: 1731, column: 25, scope: !4563)
!4566 = !DILocation(line: 1731, column: 32, scope: !4563)
!4567 = !DILocation(line: 1731, column: 23, scope: !4563)
!4568 = !DILocation(line: 1731, column: 9, scope: !4563)
!4569 = !DILocation(line: 1732, column: 38, scope: !4564)
!4570 = !DILocation(line: 1732, column: 21, scope: !4564)
!4571 = !DILocation(line: 1732, column: 26, scope: !4564)
!4572 = !DILocation(line: 1732, column: 43, scope: !4564)
!4573 = !DILocation(line: 1732, column: 50, scope: !4564)
!4574 = !DILocation(line: 1732, column: 41, scope: !4564)
!4575 = !DILocation(line: 1732, column: 13, scope: !4564)
!4576 = !DILocation(line: 1733, column: 38, scope: !4564)
!4577 = !DILocation(line: 1733, column: 21, scope: !4564)
!4578 = !DILocation(line: 1733, column: 26, scope: !4564)
!4579 = !DILocation(line: 1733, column: 43, scope: !4564)
!4580 = !DILocation(line: 1733, column: 50, scope: !4564)
!4581 = !DILocation(line: 1733, column: 41, scope: !4564)
!4582 = !DILocation(line: 1733, column: 62, scope: !4564)
!4583 = !DILocation(line: 1733, column: 69, scope: !4564)
!4584 = !DILocation(line: 1733, column: 60, scope: !4564)
!4585 = !DILocation(line: 1734, column: 52, scope: !4564)
!4586 = !DILocation(line: 1734, column: 59, scope: !4564)
!4587 = !DILocation(line: 1734, column: 50, scope: !4564)
!4588 = !DILocation(line: 1731, column: 43, scope: !4589)
!4589 = !DILexicalBlockFile(scope: !4564, file: !888, discriminator: 2)
!4590 = !DILocation(line: 1731, column: 9, scope: !4589)
!4591 = distinct !{!4591, !4592}
!4592 = !DILocation(line: 1731, column: 9, scope: !4232)
!4593 = !DILocation(line: 1737, column: 9, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4051, file: !888, line: 1737, column: 9)
!4595 = !DILocation(line: 1737, column: 16, scope: !4594)
!4596 = !DILocation(line: 1737, column: 9, scope: !4051)
!4597 = !DILocation(line: 1738, column: 30, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4594, file: !888, line: 1737, column: 26)
!4599 = !DILocation(line: 1738, column: 35, scope: !4598)
!4600 = !DILocation(line: 1738, column: 9, scope: !4598)
!4601 = !DILocation(line: 1739, column: 5, scope: !4598)
!4602 = !DILocation(line: 1741, column: 23, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4051, file: !888, line: 1741, column: 9)
!4604 = !DILocation(line: 1741, column: 9, scope: !4603)
!4605 = !DILocation(line: 1741, column: 27, scope: !4603)
!4606 = !DILocation(line: 1741, column: 9, scope: !4051)
!4607 = !DILocation(line: 1742, column: 16, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4603, file: !888, line: 1741, column: 32)
!4609 = !DILocation(line: 1742, column: 21, scope: !4608)
!4610 = !DILocation(line: 1742, column: 64, scope: !4608)
!4611 = !DILocation(line: 1742, column: 50, scope: !4608)
!4612 = !DILocation(line: 1742, column: 49, scope: !4608)
!4613 = !DILocation(line: 1742, column: 9, scope: !4614)
!4614 = !DILexicalBlockFile(scope: !4608, file: !888, discriminator: 1)
!4615 = !DILocation(line: 1743, column: 9, scope: !4608)
!4616 = !DILocation(line: 1746, column: 5, scope: !4051)
!4617 = !DILocation(line: 1747, column: 1, scope: !4051)
!4618 = distinct !DISubprogram(name: "get_block_sizes", scope: !888, file: !888, line: 525, type: !4619, isLocal: true, isDefinition: true, scopeLine: 527, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{null, !1703, !1778, !928}
!4621 = !DILocalVariable(name: "ctx", arg: 1, scope: !4618, file: !888, line: 525, type: !1703)
!4622 = !DILocation(line: 525, column: 44, scope: !4618)
!4623 = !DILocalVariable(name: "div_blocks", arg: 2, scope: !4618, file: !888, line: 525, type: !1778)
!4624 = !DILocation(line: 525, column: 63, scope: !4618)
!4625 = !DILocalVariable(name: "bs_info", arg: 3, scope: !4618, file: !888, line: 526, type: !928)
!4626 = !DILocation(line: 526, column: 39, scope: !4618)
!4627 = !DILocalVariable(name: "sconf", scope: !4618, file: !888, line: 528, type: !1847)
!4628 = !DILocation(line: 528, column: 24, scope: !4618)
!4629 = !DILocation(line: 528, column: 33, scope: !4618)
!4630 = !DILocation(line: 528, column: 38, scope: !4618)
!4631 = !DILocalVariable(name: "gb", scope: !4618, file: !888, line: 529, type: !3666)
!4632 = !DILocation(line: 529, column: 20, scope: !4618)
!4633 = !DILocation(line: 529, column: 26, scope: !4618)
!4634 = !DILocation(line: 529, column: 31, scope: !4618)
!4635 = !DILocalVariable(name: "ptr_div_blocks", scope: !4618, file: !888, line: 530, type: !1778)
!4636 = !DILocation(line: 530, column: 19, scope: !4618)
!4637 = !DILocation(line: 530, column: 36, scope: !4618)
!4638 = !DILocalVariable(name: "b", scope: !4618, file: !888, line: 531, type: !907)
!4639 = !DILocation(line: 531, column: 18, scope: !4618)
!4640 = !DILocation(line: 533, column: 9, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4618, file: !888, line: 533, column: 9)
!4642 = !DILocation(line: 533, column: 16, scope: !4641)
!4643 = !DILocation(line: 533, column: 9, scope: !4618)
!4644 = !DILocalVariable(name: "bs_info_len", scope: !4645, file: !888, line: 534, type: !907)
!4645 = distinct !DILexicalBlock(scope: !4641, file: !888, line: 533, column: 33)
!4646 = !DILocation(line: 534, column: 22, scope: !4645)
!4647 = !DILocation(line: 534, column: 42, scope: !4645)
!4648 = !DILocation(line: 534, column: 49, scope: !4645)
!4649 = !DILocation(line: 534, column: 65, scope: !4645)
!4650 = !DILocation(line: 534, column: 38, scope: !4645)
!4651 = !DILocation(line: 535, column: 34, scope: !4645)
!4652 = !DILocation(line: 535, column: 38, scope: !4645)
!4653 = !DILocation(line: 535, column: 20, scope: !4645)
!4654 = !DILocation(line: 535, column: 10, scope: !4645)
!4655 = !DILocation(line: 535, column: 18, scope: !4645)
!4656 = !DILocation(line: 536, column: 28, scope: !4645)
!4657 = !DILocation(line: 536, column: 26, scope: !4645)
!4658 = !DILocation(line: 536, column: 10, scope: !4645)
!4659 = !DILocation(line: 536, column: 18, scope: !4645)
!4660 = !DILocation(line: 537, column: 5, scope: !4645)
!4661 = !DILocation(line: 539, column: 5, scope: !4618)
!4662 = !DILocation(line: 539, column: 10, scope: !4618)
!4663 = !DILocation(line: 539, column: 21, scope: !4618)
!4664 = !DILocation(line: 540, column: 20, scope: !4618)
!4665 = !DILocation(line: 540, column: 19, scope: !4618)
!4666 = !DILocation(line: 540, column: 53, scope: !4618)
!4667 = !DILocation(line: 540, column: 58, scope: !4618)
!4668 = !DILocation(line: 540, column: 5, scope: !4618)
!4669 = !DILocation(line: 557, column: 12, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4618, file: !888, line: 557, column: 5)
!4671 = !DILocation(line: 557, column: 10, scope: !4670)
!4672 = !DILocation(line: 557, column: 17, scope: !4673)
!4673 = !DILexicalBlockFile(scope: !4674, file: !888, discriminator: 1)
!4674 = distinct !DILexicalBlock(scope: !4670, file: !888, line: 557, column: 5)
!4675 = !DILocation(line: 557, column: 21, scope: !4673)
!4676 = !DILocation(line: 557, column: 26, scope: !4673)
!4677 = !DILocation(line: 557, column: 19, scope: !4673)
!4678 = !DILocation(line: 557, column: 5, scope: !4673)
!4679 = !DILocation(line: 558, column: 25, scope: !4674)
!4680 = !DILocation(line: 558, column: 30, scope: !4674)
!4681 = !DILocation(line: 558, column: 36, scope: !4674)
!4682 = !DILocation(line: 558, column: 63, scope: !4674)
!4683 = !DILocation(line: 558, column: 52, scope: !4674)
!4684 = !DILocation(line: 558, column: 49, scope: !4674)
!4685 = !DILocation(line: 558, column: 20, scope: !4674)
!4686 = !DILocation(line: 558, column: 9, scope: !4674)
!4687 = !DILocation(line: 558, column: 23, scope: !4674)
!4688 = !DILocation(line: 557, column: 39, scope: !4689)
!4689 = !DILexicalBlockFile(scope: !4674, file: !888, discriminator: 2)
!4690 = !DILocation(line: 557, column: 5, scope: !4689)
!4691 = distinct !{!4691, !4692}
!4692 = !DILocation(line: 557, column: 5, scope: !4618)
!4693 = !DILocation(line: 560, column: 9, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4618, file: !888, line: 560, column: 9)
!4695 = !DILocation(line: 560, column: 14, scope: !4694)
!4696 = !DILocation(line: 560, column: 34, scope: !4694)
!4697 = !DILocation(line: 560, column: 39, scope: !4694)
!4698 = !DILocation(line: 560, column: 45, scope: !4694)
!4699 = !DILocation(line: 560, column: 31, scope: !4694)
!4700 = !DILocation(line: 560, column: 9, scope: !4618)
!4701 = !DILocalVariable(name: "remaining", scope: !4702, file: !888, line: 561, type: !907)
!4702 = distinct !DILexicalBlock(scope: !4694, file: !888, line: 560, column: 59)
!4703 = !DILocation(line: 561, column: 22, scope: !4702)
!4704 = !DILocation(line: 561, column: 34, scope: !4702)
!4705 = !DILocation(line: 561, column: 39, scope: !4702)
!4706 = !DILocation(line: 563, column: 16, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4702, file: !888, line: 563, column: 9)
!4708 = !DILocation(line: 563, column: 14, scope: !4707)
!4709 = !DILocation(line: 563, column: 21, scope: !4710)
!4710 = !DILexicalBlockFile(scope: !4711, file: !888, discriminator: 1)
!4711 = distinct !DILexicalBlock(scope: !4707, file: !888, line: 563, column: 9)
!4712 = !DILocation(line: 563, column: 25, scope: !4710)
!4713 = !DILocation(line: 563, column: 30, scope: !4710)
!4714 = !DILocation(line: 563, column: 23, scope: !4710)
!4715 = !DILocation(line: 563, column: 9, scope: !4710)
!4716 = !DILocation(line: 564, column: 17, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !888, line: 564, column: 17)
!4718 = distinct !DILexicalBlock(scope: !4711, file: !888, line: 563, column: 47)
!4719 = !DILocation(line: 564, column: 41, scope: !4717)
!4720 = !DILocation(line: 564, column: 30, scope: !4717)
!4721 = !DILocation(line: 564, column: 27, scope: !4717)
!4722 = !DILocation(line: 564, column: 17, scope: !4718)
!4723 = !DILocation(line: 565, column: 33, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4717, file: !888, line: 564, column: 45)
!4725 = !DILocation(line: 565, column: 28, scope: !4724)
!4726 = !DILocation(line: 565, column: 17, scope: !4724)
!4727 = !DILocation(line: 565, column: 31, scope: !4724)
!4728 = !DILocation(line: 566, column: 35, scope: !4724)
!4729 = !DILocation(line: 566, column: 37, scope: !4724)
!4730 = !DILocation(line: 566, column: 17, scope: !4724)
!4731 = !DILocation(line: 566, column: 22, scope: !4724)
!4732 = !DILocation(line: 566, column: 33, scope: !4724)
!4733 = !DILocation(line: 567, column: 17, scope: !4724)
!4734 = !DILocation(line: 570, column: 37, scope: !4718)
!4735 = !DILocation(line: 570, column: 26, scope: !4718)
!4736 = !DILocation(line: 570, column: 23, scope: !4718)
!4737 = !DILocation(line: 571, column: 9, scope: !4718)
!4738 = !DILocation(line: 563, column: 43, scope: !4739)
!4739 = !DILexicalBlockFile(scope: !4711, file: !888, discriminator: 2)
!4740 = !DILocation(line: 563, column: 9, scope: !4739)
!4741 = distinct !{!4741, !4742}
!4742 = !DILocation(line: 563, column: 9, scope: !4702)
!4743 = !DILocation(line: 572, column: 5, scope: !4702)
!4744 = !DILocation(line: 573, column: 1, scope: !4618)
!4745 = distinct !DISubprogram(name: "decode_blocks_ind", scope: !888, file: !888, line: 1073, type: !4746, isLocal: true, isDefinition: true, scopeLine: 1076, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!4746 = !DISubroutineType(types: !4747)
!4747 = !{!906, !1703, !907, !907, !4748, !1778}
!4748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4749, size: 64, align: 64)
!4749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!4750 = !DILocalVariable(name: "ctx", arg: 1, scope: !4745, file: !888, line: 1073, type: !1703)
!4751 = !DILocation(line: 1073, column: 45, scope: !4745)
!4752 = !DILocalVariable(name: "ra_frame", arg: 2, scope: !4745, file: !888, line: 1073, type: !907)
!4753 = !DILocation(line: 1073, column: 63, scope: !4745)
!4754 = !DILocalVariable(name: "c", arg: 3, scope: !4745, file: !888, line: 1074, type: !907)
!4755 = !DILocation(line: 1074, column: 43, scope: !4745)
!4756 = !DILocalVariable(name: "div_blocks", arg: 4, scope: !4745, file: !888, line: 1074, type: !4748)
!4757 = !DILocation(line: 1074, column: 66, scope: !4745)
!4758 = !DILocalVariable(name: "js_blocks", arg: 5, scope: !4745, file: !888, line: 1075, type: !1778)
!4759 = !DILocation(line: 1075, column: 44, scope: !4745)
!4760 = !DILocalVariable(name: "ret", scope: !4745, file: !888, line: 1077, type: !906)
!4761 = !DILocation(line: 1077, column: 9, scope: !4745)
!4762 = !DILocalVariable(name: "b", scope: !4745, file: !888, line: 1078, type: !907)
!4763 = !DILocation(line: 1078, column: 18, scope: !4745)
!4764 = !DILocalVariable(name: "bd", scope: !4745, file: !888, line: 1079, type: !4233)
!4765 = !DILocation(line: 1079, column: 18, scope: !4745)
!4766 = !DILocation(line: 1081, column: 19, scope: !4745)
!4767 = !DILocation(line: 1081, column: 8, scope: !4745)
!4768 = !DILocation(line: 1081, column: 17, scope: !4745)
!4769 = !DILocation(line: 1082, column: 22, scope: !4745)
!4770 = !DILocation(line: 1082, column: 27, scope: !4745)
!4771 = !DILocation(line: 1082, column: 8, scope: !4745)
!4772 = !DILocation(line: 1082, column: 20, scope: !4745)
!4773 = !DILocation(line: 1083, column: 21, scope: !4745)
!4774 = !DILocation(line: 1083, column: 26, scope: !4745)
!4775 = !DILocation(line: 1083, column: 8, scope: !4745)
!4776 = !DILocation(line: 1083, column: 19, scope: !4745)
!4777 = !DILocation(line: 1084, column: 20, scope: !4745)
!4778 = !DILocation(line: 1084, column: 25, scope: !4745)
!4779 = !DILocation(line: 1084, column: 8, scope: !4745)
!4780 = !DILocation(line: 1084, column: 18, scope: !4745)
!4781 = !DILocation(line: 1085, column: 29, scope: !4745)
!4782 = !DILocation(line: 1085, column: 34, scope: !4745)
!4783 = !DILocation(line: 1085, column: 8, scope: !4745)
!4784 = !DILocation(line: 1085, column: 27, scope: !4745)
!4785 = !DILocation(line: 1086, column: 18, scope: !4745)
!4786 = !DILocation(line: 1086, column: 23, scope: !4745)
!4787 = !DILocation(line: 1086, column: 8, scope: !4745)
!4788 = !DILocation(line: 1086, column: 16, scope: !4745)
!4789 = !DILocation(line: 1087, column: 18, scope: !4745)
!4790 = !DILocation(line: 1087, column: 23, scope: !4745)
!4791 = !DILocation(line: 1087, column: 8, scope: !4745)
!4792 = !DILocation(line: 1087, column: 16, scope: !4745)
!4793 = !DILocation(line: 1088, column: 19, scope: !4745)
!4794 = !DILocation(line: 1088, column: 24, scope: !4745)
!4795 = !DILocation(line: 1088, column: 8, scope: !4745)
!4796 = !DILocation(line: 1088, column: 17, scope: !4745)
!4797 = !DILocation(line: 1089, column: 20, scope: !4745)
!4798 = !DILocation(line: 1089, column: 25, scope: !4745)
!4799 = !DILocation(line: 1089, column: 8, scope: !4745)
!4800 = !DILocation(line: 1089, column: 18, scope: !4745)
!4801 = !DILocation(line: 1090, column: 18, scope: !4745)
!4802 = !DILocation(line: 1090, column: 23, scope: !4745)
!4803 = !DILocation(line: 1090, column: 8, scope: !4745)
!4804 = !DILocation(line: 1090, column: 16, scope: !4745)
!4805 = !DILocation(line: 1091, column: 27, scope: !4745)
!4806 = !DILocation(line: 1091, column: 32, scope: !4745)
!4807 = !DILocation(line: 1091, column: 8, scope: !4745)
!4808 = !DILocation(line: 1091, column: 25, scope: !4745)
!4809 = !DILocation(line: 1092, column: 39, scope: !4745)
!4810 = !DILocation(line: 1092, column: 22, scope: !4745)
!4811 = !DILocation(line: 1092, column: 27, scope: !4745)
!4812 = !DILocation(line: 1092, column: 8, scope: !4745)
!4813 = !DILocation(line: 1092, column: 20, scope: !4745)
!4814 = !DILocation(line: 1095, column: 12, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4745, file: !888, line: 1095, column: 5)
!4816 = !DILocation(line: 1095, column: 10, scope: !4815)
!4817 = !DILocation(line: 1095, column: 17, scope: !4818)
!4818 = !DILexicalBlockFile(scope: !4819, file: !888, discriminator: 1)
!4819 = distinct !DILexicalBlock(scope: !4815, file: !888, line: 1095, column: 5)
!4820 = !DILocation(line: 1095, column: 21, scope: !4818)
!4821 = !DILocation(line: 1095, column: 26, scope: !4818)
!4822 = !DILocation(line: 1095, column: 19, scope: !4818)
!4823 = !DILocation(line: 1095, column: 5, scope: !4818)
!4824 = !DILocation(line: 1096, column: 38, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4819, file: !888, line: 1095, column: 43)
!4826 = !DILocation(line: 1096, column: 27, scope: !4825)
!4827 = !DILocation(line: 1096, column: 12, scope: !4825)
!4828 = !DILocation(line: 1096, column: 25, scope: !4825)
!4829 = !DILocation(line: 1098, column: 38, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4825, file: !888, line: 1098, column: 13)
!4831 = !DILocation(line: 1098, column: 20, scope: !4830)
!4832 = !DILocation(line: 1098, column: 18, scope: !4830)
!4833 = !DILocation(line: 1098, column: 49, scope: !4830)
!4834 = !DILocation(line: 1098, column: 13, scope: !4825)
!4835 = !DILocation(line: 1100, column: 28, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4830, file: !888, line: 1098, column: 54)
!4837 = !DILocation(line: 1100, column: 31, scope: !4836)
!4838 = !DILocation(line: 1100, column: 36, scope: !4836)
!4839 = !DILocation(line: 1100, column: 48, scope: !4836)
!4840 = !DILocation(line: 1100, column: 63, scope: !4836)
!4841 = !DILocation(line: 1100, column: 13, scope: !4836)
!4842 = !DILocation(line: 1101, column: 20, scope: !4836)
!4843 = !DILocation(line: 1101, column: 13, scope: !4836)
!4844 = !DILocation(line: 1103, column: 38, scope: !4825)
!4845 = !DILocation(line: 1103, column: 27, scope: !4825)
!4846 = !DILocation(line: 1103, column: 12, scope: !4825)
!4847 = !DILocation(line: 1103, column: 24, scope: !4825)
!4848 = !DILocation(line: 1104, column: 12, scope: !4825)
!4849 = !DILocation(line: 1104, column: 21, scope: !4825)
!4850 = !DILocation(line: 1105, column: 5, scope: !4825)
!4851 = !DILocation(line: 1095, column: 39, scope: !4852)
!4852 = !DILexicalBlockFile(scope: !4819, file: !888, discriminator: 2)
!4853 = !DILocation(line: 1095, column: 5, scope: !4852)
!4854 = distinct !{!4854, !4855}
!4855 = !DILocation(line: 1095, column: 5, scope: !4745)
!4856 = !DILocation(line: 1107, column: 5, scope: !4745)
!4857 = !DILocation(line: 1108, column: 1, scope: !4745)
!4858 = distinct !DISubprogram(name: "decode_blocks", scope: !888, file: !888, line: 1113, type: !4746, isLocal: true, isDefinition: true, scopeLine: 1116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!4859 = !DILocalVariable(name: "ctx", arg: 1, scope: !4858, file: !888, line: 1113, type: !1703)
!4860 = !DILocation(line: 1113, column: 41, scope: !4858)
!4861 = !DILocalVariable(name: "ra_frame", arg: 2, scope: !4858, file: !888, line: 1113, type: !907)
!4862 = !DILocation(line: 1113, column: 59, scope: !4858)
!4863 = !DILocalVariable(name: "c", arg: 3, scope: !4858, file: !888, line: 1114, type: !907)
!4864 = !DILocation(line: 1114, column: 39, scope: !4858)
!4865 = !DILocalVariable(name: "div_blocks", arg: 4, scope: !4858, file: !888, line: 1114, type: !4748)
!4866 = !DILocation(line: 1114, column: 62, scope: !4858)
!4867 = !DILocalVariable(name: "js_blocks", arg: 5, scope: !4858, file: !888, line: 1115, type: !1778)
!4868 = !DILocation(line: 1115, column: 40, scope: !4858)
!4869 = !DILocalVariable(name: "sconf", scope: !4858, file: !888, line: 1117, type: !1847)
!4870 = !DILocation(line: 1117, column: 24, scope: !4858)
!4871 = !DILocation(line: 1117, column: 33, scope: !4858)
!4872 = !DILocation(line: 1117, column: 38, scope: !4858)
!4873 = !DILocalVariable(name: "offset", scope: !4858, file: !888, line: 1118, type: !907)
!4874 = !DILocation(line: 1118, column: 18, scope: !4858)
!4875 = !DILocalVariable(name: "b", scope: !4858, file: !888, line: 1119, type: !907)
!4876 = !DILocation(line: 1119, column: 18, scope: !4858)
!4877 = !DILocalVariable(name: "ret", scope: !4858, file: !888, line: 1120, type: !906)
!4878 = !DILocation(line: 1120, column: 9, scope: !4858)
!4879 = !DILocalVariable(name: "bd", scope: !4858, file: !888, line: 1121, type: !4880)
!4880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4233, size: 1792, align: 64, elements: !4077)
!4881 = !DILocation(line: 1121, column: 18, scope: !4858)
!4882 = !DILocation(line: 1123, column: 22, scope: !4858)
!4883 = !DILocation(line: 1123, column: 5, scope: !4858)
!4884 = !DILocation(line: 1123, column: 11, scope: !4858)
!4885 = !DILocation(line: 1123, column: 20, scope: !4858)
!4886 = !DILocation(line: 1124, column: 25, scope: !4858)
!4887 = !DILocation(line: 1124, column: 30, scope: !4858)
!4888 = !DILocation(line: 1124, column: 5, scope: !4858)
!4889 = !DILocation(line: 1124, column: 11, scope: !4858)
!4890 = !DILocation(line: 1124, column: 23, scope: !4858)
!4891 = !DILocation(line: 1125, column: 24, scope: !4858)
!4892 = !DILocation(line: 1125, column: 29, scope: !4858)
!4893 = !DILocation(line: 1125, column: 5, scope: !4858)
!4894 = !DILocation(line: 1125, column: 11, scope: !4858)
!4895 = !DILocation(line: 1125, column: 22, scope: !4858)
!4896 = !DILocation(line: 1126, column: 23, scope: !4858)
!4897 = !DILocation(line: 1126, column: 28, scope: !4858)
!4898 = !DILocation(line: 1126, column: 5, scope: !4858)
!4899 = !DILocation(line: 1126, column: 11, scope: !4858)
!4900 = !DILocation(line: 1126, column: 21, scope: !4858)
!4901 = !DILocation(line: 1127, column: 32, scope: !4858)
!4902 = !DILocation(line: 1127, column: 37, scope: !4858)
!4903 = !DILocation(line: 1127, column: 5, scope: !4858)
!4904 = !DILocation(line: 1127, column: 11, scope: !4858)
!4905 = !DILocation(line: 1127, column: 30, scope: !4858)
!4906 = !DILocation(line: 1128, column: 21, scope: !4858)
!4907 = !DILocation(line: 1128, column: 26, scope: !4858)
!4908 = !DILocation(line: 1128, column: 5, scope: !4858)
!4909 = !DILocation(line: 1128, column: 11, scope: !4858)
!4910 = !DILocation(line: 1128, column: 19, scope: !4858)
!4911 = !DILocation(line: 1129, column: 21, scope: !4858)
!4912 = !DILocation(line: 1129, column: 26, scope: !4858)
!4913 = !DILocation(line: 1129, column: 5, scope: !4858)
!4914 = !DILocation(line: 1129, column: 11, scope: !4858)
!4915 = !DILocation(line: 1129, column: 19, scope: !4858)
!4916 = !DILocation(line: 1130, column: 22, scope: !4858)
!4917 = !DILocation(line: 1130, column: 27, scope: !4858)
!4918 = !DILocation(line: 1130, column: 5, scope: !4858)
!4919 = !DILocation(line: 1130, column: 11, scope: !4858)
!4920 = !DILocation(line: 1130, column: 20, scope: !4858)
!4921 = !DILocation(line: 1131, column: 23, scope: !4858)
!4922 = !DILocation(line: 1131, column: 28, scope: !4858)
!4923 = !DILocation(line: 1131, column: 5, scope: !4858)
!4924 = !DILocation(line: 1131, column: 11, scope: !4858)
!4925 = !DILocation(line: 1131, column: 21, scope: !4858)
!4926 = !DILocation(line: 1132, column: 21, scope: !4858)
!4927 = !DILocation(line: 1132, column: 26, scope: !4858)
!4928 = !DILocation(line: 1132, column: 5, scope: !4858)
!4929 = !DILocation(line: 1132, column: 11, scope: !4858)
!4930 = !DILocation(line: 1132, column: 19, scope: !4858)
!4931 = !DILocation(line: 1133, column: 30, scope: !4858)
!4932 = !DILocation(line: 1133, column: 35, scope: !4858)
!4933 = !DILocation(line: 1133, column: 5, scope: !4858)
!4934 = !DILocation(line: 1133, column: 11, scope: !4858)
!4935 = !DILocation(line: 1133, column: 28, scope: !4858)
!4936 = !DILocation(line: 1134, column: 24, scope: !4858)
!4937 = !DILocation(line: 1134, column: 23, scope: !4858)
!4938 = !DILocation(line: 1134, column: 5, scope: !4858)
!4939 = !DILocation(line: 1134, column: 11, scope: !4858)
!4940 = !DILocation(line: 1134, column: 21, scope: !4858)
!4941 = !DILocation(line: 1136, column: 22, scope: !4858)
!4942 = !DILocation(line: 1136, column: 5, scope: !4858)
!4943 = !DILocation(line: 1136, column: 11, scope: !4858)
!4944 = !DILocation(line: 1136, column: 20, scope: !4858)
!4945 = !DILocation(line: 1137, column: 25, scope: !4858)
!4946 = !DILocation(line: 1137, column: 30, scope: !4858)
!4947 = !DILocation(line: 1137, column: 5, scope: !4858)
!4948 = !DILocation(line: 1137, column: 11, scope: !4858)
!4949 = !DILocation(line: 1137, column: 23, scope: !4858)
!4950 = !DILocation(line: 1138, column: 24, scope: !4858)
!4951 = !DILocation(line: 1138, column: 29, scope: !4858)
!4952 = !DILocation(line: 1138, column: 5, scope: !4858)
!4953 = !DILocation(line: 1138, column: 11, scope: !4858)
!4954 = !DILocation(line: 1138, column: 22, scope: !4858)
!4955 = !DILocation(line: 1139, column: 23, scope: !4858)
!4956 = !DILocation(line: 1139, column: 28, scope: !4858)
!4957 = !DILocation(line: 1139, column: 5, scope: !4858)
!4958 = !DILocation(line: 1139, column: 11, scope: !4858)
!4959 = !DILocation(line: 1139, column: 21, scope: !4858)
!4960 = !DILocation(line: 1140, column: 32, scope: !4858)
!4961 = !DILocation(line: 1140, column: 37, scope: !4858)
!4962 = !DILocation(line: 1140, column: 5, scope: !4858)
!4963 = !DILocation(line: 1140, column: 11, scope: !4858)
!4964 = !DILocation(line: 1140, column: 30, scope: !4858)
!4965 = !DILocation(line: 1141, column: 21, scope: !4858)
!4966 = !DILocation(line: 1141, column: 26, scope: !4858)
!4967 = !DILocation(line: 1141, column: 5, scope: !4858)
!4968 = !DILocation(line: 1141, column: 11, scope: !4858)
!4969 = !DILocation(line: 1141, column: 19, scope: !4858)
!4970 = !DILocation(line: 1142, column: 21, scope: !4858)
!4971 = !DILocation(line: 1142, column: 26, scope: !4858)
!4972 = !DILocation(line: 1142, column: 5, scope: !4858)
!4973 = !DILocation(line: 1142, column: 11, scope: !4858)
!4974 = !DILocation(line: 1142, column: 19, scope: !4858)
!4975 = !DILocation(line: 1143, column: 22, scope: !4858)
!4976 = !DILocation(line: 1143, column: 27, scope: !4858)
!4977 = !DILocation(line: 1143, column: 5, scope: !4858)
!4978 = !DILocation(line: 1143, column: 11, scope: !4858)
!4979 = !DILocation(line: 1143, column: 20, scope: !4858)
!4980 = !DILocation(line: 1144, column: 23, scope: !4858)
!4981 = !DILocation(line: 1144, column: 28, scope: !4858)
!4982 = !DILocation(line: 1144, column: 5, scope: !4858)
!4983 = !DILocation(line: 1144, column: 11, scope: !4858)
!4984 = !DILocation(line: 1144, column: 21, scope: !4858)
!4985 = !DILocation(line: 1145, column: 21, scope: !4858)
!4986 = !DILocation(line: 1145, column: 26, scope: !4858)
!4987 = !DILocation(line: 1145, column: 5, scope: !4858)
!4988 = !DILocation(line: 1145, column: 11, scope: !4858)
!4989 = !DILocation(line: 1145, column: 19, scope: !4858)
!4990 = !DILocation(line: 1146, column: 30, scope: !4858)
!4991 = !DILocation(line: 1146, column: 35, scope: !4858)
!4992 = !DILocation(line: 1146, column: 5, scope: !4858)
!4993 = !DILocation(line: 1146, column: 11, scope: !4858)
!4994 = !DILocation(line: 1146, column: 28, scope: !4858)
!4995 = !DILocation(line: 1147, column: 25, scope: !4858)
!4996 = !DILocation(line: 1147, column: 35, scope: !4858)
!4997 = !DILocation(line: 1147, column: 23, scope: !4858)
!4998 = !DILocation(line: 1147, column: 5, scope: !4858)
!4999 = !DILocation(line: 1147, column: 11, scope: !4858)
!5000 = !DILocation(line: 1147, column: 21, scope: !4858)
!5001 = !DILocation(line: 1150, column: 12, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4858, file: !888, line: 1150, column: 5)
!5003 = !DILocation(line: 1150, column: 10, scope: !5002)
!5004 = !DILocation(line: 1150, column: 17, scope: !5005)
!5005 = !DILexicalBlockFile(scope: !5006, file: !888, discriminator: 1)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !888, line: 1150, column: 5)
!5007 = !DILocation(line: 1150, column: 21, scope: !5005)
!5008 = !DILocation(line: 1150, column: 26, scope: !5005)
!5009 = !DILocation(line: 1150, column: 19, scope: !5005)
!5010 = !DILocation(line: 1150, column: 5, scope: !5005)
!5011 = !DILocalVariable(name: "s", scope: !5012, file: !888, line: 1151, type: !907)
!5012 = distinct !DILexicalBlock(scope: !5006, file: !888, line: 1150, column: 43)
!5013 = !DILocation(line: 1151, column: 22, scope: !5012)
!5014 = !DILocation(line: 1153, column: 41, scope: !5012)
!5015 = !DILocation(line: 1153, column: 30, scope: !5012)
!5016 = !DILocation(line: 1153, column: 9, scope: !5012)
!5017 = !DILocation(line: 1153, column: 15, scope: !5012)
!5018 = !DILocation(line: 1153, column: 28, scope: !5012)
!5019 = !DILocation(line: 1154, column: 41, scope: !5012)
!5020 = !DILocation(line: 1154, column: 30, scope: !5012)
!5021 = !DILocation(line: 1154, column: 9, scope: !5012)
!5022 = !DILocation(line: 1154, column: 15, scope: !5012)
!5023 = !DILocation(line: 1154, column: 28, scope: !5012)
!5024 = !DILocation(line: 1156, column: 46, scope: !5012)
!5025 = !DILocation(line: 1156, column: 29, scope: !5012)
!5026 = !DILocation(line: 1156, column: 34, scope: !5012)
!5027 = !DILocation(line: 1156, column: 52, scope: !5012)
!5028 = !DILocation(line: 1156, column: 50, scope: !5012)
!5029 = !DILocation(line: 1156, column: 9, scope: !5012)
!5030 = !DILocation(line: 1156, column: 15, scope: !5012)
!5031 = !DILocation(line: 1156, column: 27, scope: !5012)
!5032 = !DILocation(line: 1157, column: 46, scope: !5012)
!5033 = !DILocation(line: 1157, column: 48, scope: !5012)
!5034 = !DILocation(line: 1157, column: 29, scope: !5012)
!5035 = !DILocation(line: 1157, column: 34, scope: !5012)
!5036 = !DILocation(line: 1157, column: 55, scope: !5012)
!5037 = !DILocation(line: 1157, column: 53, scope: !5012)
!5038 = !DILocation(line: 1157, column: 9, scope: !5012)
!5039 = !DILocation(line: 1157, column: 15, scope: !5012)
!5040 = !DILocation(line: 1157, column: 27, scope: !5012)
!5041 = !DILocation(line: 1159, column: 27, scope: !5012)
!5042 = !DILocation(line: 1159, column: 33, scope: !5012)
!5043 = !DILocation(line: 1159, column: 9, scope: !5012)
!5044 = !DILocation(line: 1159, column: 15, scope: !5012)
!5045 = !DILocation(line: 1159, column: 25, scope: !5012)
!5046 = !DILocation(line: 1160, column: 27, scope: !5012)
!5047 = !DILocation(line: 1160, column: 33, scope: !5012)
!5048 = !DILocation(line: 1160, column: 9, scope: !5012)
!5049 = !DILocation(line: 1160, column: 15, scope: !5012)
!5050 = !DILocation(line: 1160, column: 25, scope: !5012)
!5051 = !DILocation(line: 1162, column: 38, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5012, file: !888, line: 1162, column: 13)
!5053 = !DILocation(line: 1162, column: 44, scope: !5052)
!5054 = !DILocation(line: 1162, column: 20, scope: !5052)
!5055 = !DILocation(line: 1162, column: 18, scope: !5052)
!5056 = !DILocation(line: 1162, column: 52, scope: !5052)
!5057 = !DILocation(line: 1162, column: 56, scope: !5052)
!5058 = !DILocation(line: 1163, column: 38, scope: !5052)
!5059 = !DILocation(line: 1163, column: 44, scope: !5052)
!5060 = !DILocation(line: 1163, column: 20, scope: !5052)
!5061 = !DILocation(line: 1163, column: 18, scope: !5052)
!5062 = !DILocation(line: 1163, column: 52, scope: !5052)
!5063 = !DILocation(line: 1162, column: 13, scope: !5064)
!5064 = !DILexicalBlockFile(scope: !5012, file: !888, discriminator: 1)
!5065 = !DILocation(line: 1164, column: 13, scope: !5052)
!5066 = !DILocation(line: 1167, column: 13, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5012, file: !888, line: 1167, column: 13)
!5068 = !DILocation(line: 1167, column: 19, scope: !5067)
!5069 = !DILocation(line: 1167, column: 13, scope: !5012)
!5070 = !DILocation(line: 1168, column: 17, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5072, file: !888, line: 1168, column: 17)
!5072 = distinct !DILexicalBlock(scope: !5067, file: !888, line: 1167, column: 30)
!5073 = !DILocation(line: 1168, column: 23, scope: !5071)
!5074 = !DILocation(line: 1168, column: 17, scope: !5072)
!5075 = !DILocation(line: 1169, column: 24, scope: !5071)
!5076 = !DILocation(line: 1169, column: 29, scope: !5071)
!5077 = !DILocation(line: 1169, column: 17, scope: !5071)
!5078 = !DILocation(line: 1171, column: 20, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5072, file: !888, line: 1171, column: 13)
!5080 = !DILocation(line: 1171, column: 18, scope: !5079)
!5081 = !DILocation(line: 1171, column: 25, scope: !5082)
!5082 = !DILexicalBlockFile(scope: !5083, file: !888, discriminator: 1)
!5083 = distinct !DILexicalBlock(scope: !5079, file: !888, line: 1171, column: 13)
!5084 = !DILocation(line: 1171, column: 40, scope: !5082)
!5085 = !DILocation(line: 1171, column: 29, scope: !5082)
!5086 = !DILocation(line: 1171, column: 27, scope: !5082)
!5087 = !DILocation(line: 1171, column: 13, scope: !5082)
!5088 = !DILocation(line: 1172, column: 58, scope: !5083)
!5089 = !DILocation(line: 1172, column: 40, scope: !5083)
!5090 = !DILocation(line: 1172, column: 46, scope: !5083)
!5091 = !DILocation(line: 1172, column: 81, scope: !5083)
!5092 = !DILocation(line: 1172, column: 63, scope: !5083)
!5093 = !DILocation(line: 1172, column: 69, scope: !5083)
!5094 = !DILocation(line: 1172, column: 61, scope: !5083)
!5095 = !DILocation(line: 1172, column: 35, scope: !5083)
!5096 = !DILocation(line: 1172, column: 17, scope: !5083)
!5097 = !DILocation(line: 1172, column: 23, scope: !5083)
!5098 = !DILocation(line: 1172, column: 38, scope: !5083)
!5099 = !DILocation(line: 1171, column: 45, scope: !5100)
!5100 = !DILexicalBlockFile(scope: !5083, file: !888, discriminator: 2)
!5101 = !DILocation(line: 1171, column: 13, scope: !5100)
!5102 = distinct !{!5102, !5103}
!5103 = !DILocation(line: 1171, column: 13, scope: !5072)
!5104 = !DILocation(line: 1173, column: 9, scope: !5072)
!5105 = !DILocation(line: 1173, column: 20, scope: !5106)
!5106 = !DILexicalBlockFile(scope: !5107, file: !888, discriminator: 1)
!5107 = distinct !DILexicalBlock(scope: !5067, file: !888, line: 1173, column: 20)
!5108 = !DILocation(line: 1173, column: 26, scope: !5106)
!5109 = !DILocation(line: 1174, column: 20, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5111, file: !888, line: 1174, column: 13)
!5111 = distinct !DILexicalBlock(scope: !5107, file: !888, line: 1173, column: 37)
!5112 = !DILocation(line: 1174, column: 18, scope: !5110)
!5113 = !DILocation(line: 1174, column: 25, scope: !5114)
!5114 = !DILexicalBlockFile(scope: !5115, file: !888, discriminator: 1)
!5115 = distinct !DILexicalBlock(scope: !5110, file: !888, line: 1174, column: 13)
!5116 = !DILocation(line: 1174, column: 40, scope: !5114)
!5117 = !DILocation(line: 1174, column: 29, scope: !5114)
!5118 = !DILocation(line: 1174, column: 27, scope: !5114)
!5119 = !DILocation(line: 1174, column: 13, scope: !5114)
!5120 = !DILocation(line: 1175, column: 58, scope: !5115)
!5121 = !DILocation(line: 1175, column: 40, scope: !5115)
!5122 = !DILocation(line: 1175, column: 46, scope: !5115)
!5123 = !DILocation(line: 1175, column: 81, scope: !5115)
!5124 = !DILocation(line: 1175, column: 63, scope: !5115)
!5125 = !DILocation(line: 1175, column: 69, scope: !5115)
!5126 = !DILocation(line: 1175, column: 61, scope: !5115)
!5127 = !DILocation(line: 1175, column: 35, scope: !5115)
!5128 = !DILocation(line: 1175, column: 17, scope: !5115)
!5129 = !DILocation(line: 1175, column: 23, scope: !5115)
!5130 = !DILocation(line: 1175, column: 38, scope: !5115)
!5131 = !DILocation(line: 1174, column: 45, scope: !5132)
!5132 = !DILexicalBlockFile(scope: !5115, file: !888, discriminator: 2)
!5133 = !DILocation(line: 1174, column: 13, scope: !5132)
!5134 = distinct !{!5134, !5135}
!5135 = !DILocation(line: 1174, column: 13, scope: !5111)
!5136 = !DILocation(line: 1176, column: 9, scope: !5111)
!5137 = !DILocation(line: 1178, column: 30, scope: !5012)
!5138 = !DILocation(line: 1178, column: 19, scope: !5012)
!5139 = !DILocation(line: 1178, column: 16, scope: !5012)
!5140 = !DILocation(line: 1179, column: 9, scope: !5012)
!5141 = !DILocation(line: 1179, column: 15, scope: !5012)
!5142 = !DILocation(line: 1179, column: 24, scope: !5012)
!5143 = !DILocation(line: 1180, column: 9, scope: !5012)
!5144 = !DILocation(line: 1180, column: 15, scope: !5012)
!5145 = !DILocation(line: 1180, column: 24, scope: !5012)
!5146 = !DILocation(line: 1181, column: 5, scope: !5012)
!5147 = !DILocation(line: 1150, column: 39, scope: !5148)
!5148 = !DILexicalBlockFile(scope: !5006, file: !888, discriminator: 2)
!5149 = !DILocation(line: 1150, column: 5, scope: !5148)
!5150 = distinct !{!5150, !5151}
!5151 = !DILocation(line: 1150, column: 5, scope: !4858)
!5152 = !DILocation(line: 1185, column: 30, scope: !4858)
!5153 = !DILocation(line: 1185, column: 13, scope: !4858)
!5154 = !DILocation(line: 1185, column: 18, scope: !4858)
!5155 = !DILocation(line: 1185, column: 35, scope: !4858)
!5156 = !DILocation(line: 1185, column: 42, scope: !4858)
!5157 = !DILocation(line: 1185, column: 33, scope: !4858)
!5158 = !DILocation(line: 1185, column: 5, scope: !4858)
!5159 = !DILocation(line: 1186, column: 30, scope: !4858)
!5160 = !DILocation(line: 1186, column: 13, scope: !4858)
!5161 = !DILocation(line: 1186, column: 18, scope: !4858)
!5162 = !DILocation(line: 1186, column: 35, scope: !4858)
!5163 = !DILocation(line: 1186, column: 42, scope: !4858)
!5164 = !DILocation(line: 1186, column: 33, scope: !4858)
!5165 = !DILocation(line: 1186, column: 54, scope: !4858)
!5166 = !DILocation(line: 1186, column: 61, scope: !4858)
!5167 = !DILocation(line: 1186, column: 52, scope: !4858)
!5168 = !DILocation(line: 1187, column: 44, scope: !4858)
!5169 = !DILocation(line: 1187, column: 51, scope: !4858)
!5170 = !DILocation(line: 1187, column: 42, scope: !4858)
!5171 = !DILocation(line: 1189, column: 5, scope: !4858)
!5172 = !DILocation(line: 1192, column: 20, scope: !4858)
!5173 = !DILocation(line: 1192, column: 23, scope: !4858)
!5174 = !DILocation(line: 1192, column: 28, scope: !4858)
!5175 = !DILocation(line: 1192, column: 40, scope: !4858)
!5176 = !DILocation(line: 1192, column: 52, scope: !4858)
!5177 = !DILocation(line: 1192, column: 58, scope: !4858)
!5178 = !DILocation(line: 1192, column: 5, scope: !4858)
!5179 = !DILocation(line: 1193, column: 20, scope: !4858)
!5180 = !DILocation(line: 1193, column: 23, scope: !4858)
!5181 = !DILocation(line: 1193, column: 28, scope: !4858)
!5182 = !DILocation(line: 1193, column: 40, scope: !4858)
!5183 = !DILocation(line: 1193, column: 52, scope: !4858)
!5184 = !DILocation(line: 1193, column: 58, scope: !4858)
!5185 = !DILocation(line: 1193, column: 5, scope: !4858)
!5186 = !DILocation(line: 1194, column: 12, scope: !4858)
!5187 = !DILocation(line: 1194, column: 5, scope: !4858)
!5188 = !DILocation(line: 1195, column: 1, scope: !4858)
!5189 = distinct !DISubprogram(name: "read_block", scope: !888, file: !888, line: 995, type: !5190, isLocal: true, isDefinition: true, scopeLine: 996, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!5190 = !DISubroutineType(types: !5191)
!5191 = !{!906, !1703, !5192}
!5192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64, align: 64)
!5193 = !DILocalVariable(name: "ctx", arg: 1, scope: !5189, file: !888, line: 995, type: !1703)
!5194 = !DILocation(line: 995, column: 38, scope: !5189)
!5195 = !DILocalVariable(name: "bd", arg: 2, scope: !5189, file: !888, line: 995, type: !5192)
!5196 = !DILocation(line: 995, column: 57, scope: !5189)
!5197 = !DILocalVariable(name: "ret", scope: !5189, file: !888, line: 997, type: !906)
!5198 = !DILocation(line: 997, column: 9, scope: !5189)
!5199 = !DILocalVariable(name: "gb", scope: !5189, file: !888, line: 998, type: !3666)
!5200 = !DILocation(line: 998, column: 20, scope: !5189)
!5201 = !DILocation(line: 998, column: 26, scope: !5189)
!5202 = !DILocation(line: 998, column: 31, scope: !5189)
!5203 = !DILocalVariable(name: "sconf", scope: !5189, file: !888, line: 999, type: !1847)
!5204 = !DILocation(line: 999, column: 24, scope: !5189)
!5205 = !DILocation(line: 999, column: 33, scope: !5189)
!5206 = !DILocation(line: 999, column: 38, scope: !5189)
!5207 = !DILocation(line: 1001, column: 6, scope: !5189)
!5208 = !DILocation(line: 1001, column: 10, scope: !5189)
!5209 = !DILocation(line: 1001, column: 21, scope: !5189)
!5210 = !DILocation(line: 1003, column: 19, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5189, file: !888, line: 1003, column: 9)
!5212 = !DILocation(line: 1003, column: 9, scope: !5211)
!5213 = !DILocation(line: 1003, column: 9, scope: !5189)
!5214 = !DILocation(line: 1004, column: 35, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5211, file: !888, line: 1003, column: 24)
!5216 = !DILocation(line: 1004, column: 40, scope: !5215)
!5217 = !DILocation(line: 1004, column: 15, scope: !5215)
!5218 = !DILocation(line: 1004, column: 13, scope: !5215)
!5219 = !DILocation(line: 1005, column: 5, scope: !5215)
!5220 = !DILocation(line: 1006, column: 37, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5211, file: !888, line: 1005, column: 12)
!5222 = !DILocation(line: 1006, column: 42, scope: !5221)
!5223 = !DILocation(line: 1006, column: 15, scope: !5221)
!5224 = !DILocation(line: 1006, column: 13, scope: !5221)
!5225 = !DILocation(line: 1009, column: 10, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5189, file: !888, line: 1009, column: 9)
!5227 = !DILocation(line: 1009, column: 17, scope: !5226)
!5228 = !DILocation(line: 1009, column: 27, scope: !5226)
!5229 = !DILocation(line: 1009, column: 30, scope: !5230)
!5230 = !DILexicalBlockFile(scope: !5226, file: !888, discriminator: 1)
!5231 = !DILocation(line: 1009, column: 35, scope: !5230)
!5232 = !DILocation(line: 1009, column: 9, scope: !5230)
!5233 = !DILocation(line: 1010, column: 24, scope: !5226)
!5234 = !DILocation(line: 1010, column: 9, scope: !5226)
!5235 = !DILocation(line: 1012, column: 12, scope: !5189)
!5236 = !DILocation(line: 1012, column: 5, scope: !5189)
!5237 = distinct !DISubprogram(name: "read_channel_data", scope: !888, file: !888, line: 1206, type: !5238, isLocal: true, isDefinition: true, scopeLine: 1207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!5238 = !DISubroutineType(types: !5239)
!5239 = !{!906, !1703, !1794, !906}
!5240 = !DILocation(line: 332, column: 92, scope: !3255, inlinedAt: !5241)
!5241 = distinct !DILocation(line: 1214, column: 53, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5237, file: !888, line: 1213, column: 73)
!5243 = !DILocalVariable(name: "ctx", arg: 1, scope: !5237, file: !888, line: 1206, type: !1703)
!5244 = !DILocation(line: 1206, column: 45, scope: !5237)
!5245 = !DILocalVariable(name: "cd", arg: 2, scope: !5237, file: !888, line: 1206, type: !1794)
!5246 = !DILocation(line: 1206, column: 66, scope: !5237)
!5247 = !DILocalVariable(name: "c", arg: 3, scope: !5237, file: !888, line: 1206, type: !906)
!5248 = !DILocation(line: 1206, column: 74, scope: !5237)
!5249 = !DILocalVariable(name: "gb", scope: !5237, file: !888, line: 1208, type: !3666)
!5250 = !DILocation(line: 1208, column: 20, scope: !5237)
!5251 = !DILocation(line: 1208, column: 26, scope: !5237)
!5252 = !DILocation(line: 1208, column: 31, scope: !5237)
!5253 = !DILocalVariable(name: "current", scope: !5237, file: !888, line: 1209, type: !1794)
!5254 = !DILocation(line: 1209, column: 21, scope: !5237)
!5255 = !DILocation(line: 1209, column: 31, scope: !5237)
!5256 = !DILocalVariable(name: "channels", scope: !5237, file: !888, line: 1210, type: !907)
!5257 = !DILocation(line: 1210, column: 18, scope: !5237)
!5258 = !DILocation(line: 1210, column: 29, scope: !5237)
!5259 = !DILocation(line: 1210, column: 34, scope: !5237)
!5260 = !DILocation(line: 1210, column: 41, scope: !5237)
!5261 = !DILocalVariable(name: "entries", scope: !5237, file: !888, line: 1211, type: !906)
!5262 = !DILocation(line: 1211, column: 9, scope: !5237)
!5263 = !DILocation(line: 1213, column: 5, scope: !5237)
!5264 = !DILocation(line: 1213, column: 12, scope: !5265)
!5265 = !DILexicalBlockFile(scope: !5237, file: !888, discriminator: 1)
!5266 = !DILocation(line: 1213, column: 22, scope: !5265)
!5267 = !DILocation(line: 1213, column: 20, scope: !5265)
!5268 = !DILocation(line: 1213, column: 31, scope: !5265)
!5269 = !DILocation(line: 1213, column: 67, scope: !5270)
!5270 = !DILexicalBlockFile(scope: !5237, file: !888, discriminator: 2)
!5271 = !DILocation(line: 1213, column: 57, scope: !5270)
!5272 = !DILocation(line: 1213, column: 36, scope: !5270)
!5273 = !DILocation(line: 1213, column: 45, scope: !5270)
!5274 = !DILocation(line: 1213, column: 55, scope: !5270)
!5275 = !DILocation(line: 1213, column: 34, scope: !5270)
!5276 = !DILocation(line: 1213, column: 5, scope: !5277)
!5277 = !DILexicalBlockFile(scope: !5237, file: !888, discriminator: 3)
!5278 = !DILocation(line: 1214, column: 49, scope: !5242)
!5279 = !DILocation(line: 1214, column: 68, scope: !5242)
!5280 = !DILocation(line: 1214, column: 53, scope: !5242)
!5281 = !DILocation(line: 334, column: 34, scope: !3255, inlinedAt: !5241)
!5282 = !DILocation(line: 334, column: 36, scope: !3255, inlinedAt: !5241)
!5283 = !DILocation(line: 334, column: 41, scope: !3255, inlinedAt: !5241)
!5284 = !DILocation(line: 334, column: 46, scope: !3255, inlinedAt: !5241)
!5285 = !DILocation(line: 334, column: 18, scope: !3255, inlinedAt: !5241)
!5286 = !DILocation(line: 334, column: 16, scope: !3255, inlinedAt: !5241)
!5287 = !DILocation(line: 1214, column: 35, scope: !5288)
!5288 = !DILexicalBlockFile(scope: !5242, file: !888, discriminator: 1)
!5289 = !DILocation(line: 1214, column: 9, scope: !5242)
!5290 = !DILocation(line: 1214, column: 18, scope: !5242)
!5291 = !DILocation(line: 1214, column: 33, scope: !5242)
!5292 = !DILocation(line: 1216, column: 13, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5242, file: !888, line: 1216, column: 13)
!5294 = !DILocation(line: 1216, column: 22, scope: !5293)
!5295 = !DILocation(line: 1216, column: 40, scope: !5293)
!5296 = !DILocation(line: 1216, column: 37, scope: !5293)
!5297 = !DILocation(line: 1216, column: 13, scope: !5242)
!5298 = !DILocation(line: 1217, column: 20, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5293, file: !888, line: 1216, column: 50)
!5300 = !DILocation(line: 1217, column: 25, scope: !5299)
!5301 = !DILocation(line: 1217, column: 13, scope: !5299)
!5302 = !DILocation(line: 1218, column: 13, scope: !5299)
!5303 = !DILocation(line: 1221, column: 13, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5242, file: !888, line: 1221, column: 13)
!5305 = !DILocation(line: 1221, column: 22, scope: !5304)
!5306 = !DILocation(line: 1221, column: 40, scope: !5304)
!5307 = !DILocation(line: 1221, column: 37, scope: !5304)
!5308 = !DILocation(line: 1221, column: 13, scope: !5242)
!5309 = !DILocation(line: 1222, column: 49, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5304, file: !888, line: 1221, column: 43)
!5311 = !DILocation(line: 1222, column: 39, scope: !5310)
!5312 = !DILocation(line: 1222, column: 13, scope: !5310)
!5313 = !DILocation(line: 1222, column: 22, scope: !5310)
!5314 = !DILocation(line: 1222, column: 37, scope: !5310)
!5315 = !DILocation(line: 1223, column: 51, scope: !5310)
!5316 = !DILocation(line: 1223, column: 37, scope: !5310)
!5317 = !DILocation(line: 1223, column: 13, scope: !5310)
!5318 = !DILocation(line: 1223, column: 22, scope: !5310)
!5319 = !DILocation(line: 1223, column: 35, scope: !5310)
!5320 = !DILocation(line: 1224, column: 51, scope: !5310)
!5321 = !DILocation(line: 1224, column: 37, scope: !5310)
!5322 = !DILocation(line: 1224, column: 13, scope: !5310)
!5323 = !DILocation(line: 1224, column: 22, scope: !5310)
!5324 = !DILocation(line: 1224, column: 35, scope: !5310)
!5325 = !DILocation(line: 1225, column: 51, scope: !5310)
!5326 = !DILocation(line: 1225, column: 37, scope: !5310)
!5327 = !DILocation(line: 1225, column: 13, scope: !5310)
!5328 = !DILocation(line: 1225, column: 22, scope: !5310)
!5329 = !DILocation(line: 1225, column: 35, scope: !5310)
!5330 = !DILocation(line: 1227, column: 17, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5310, file: !888, line: 1227, column: 17)
!5332 = !DILocation(line: 1227, column: 26, scope: !5331)
!5333 = !DILocation(line: 1227, column: 17, scope: !5310)
!5334 = !DILocation(line: 1228, column: 55, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5331, file: !888, line: 1227, column: 42)
!5336 = !DILocation(line: 1228, column: 41, scope: !5335)
!5337 = !DILocation(line: 1228, column: 17, scope: !5335)
!5338 = !DILocation(line: 1228, column: 26, scope: !5335)
!5339 = !DILocation(line: 1228, column: 39, scope: !5335)
!5340 = !DILocation(line: 1229, column: 55, scope: !5335)
!5341 = !DILocation(line: 1229, column: 41, scope: !5335)
!5342 = !DILocation(line: 1229, column: 17, scope: !5335)
!5343 = !DILocation(line: 1229, column: 26, scope: !5335)
!5344 = !DILocation(line: 1229, column: 39, scope: !5335)
!5345 = !DILocation(line: 1230, column: 55, scope: !5335)
!5346 = !DILocation(line: 1230, column: 41, scope: !5335)
!5347 = !DILocation(line: 1230, column: 17, scope: !5335)
!5348 = !DILocation(line: 1230, column: 26, scope: !5335)
!5349 = !DILocation(line: 1230, column: 39, scope: !5335)
!5350 = !DILocation(line: 1232, column: 53, scope: !5335)
!5351 = !DILocation(line: 1232, column: 43, scope: !5335)
!5352 = !DILocation(line: 1232, column: 17, scope: !5335)
!5353 = !DILocation(line: 1232, column: 26, scope: !5335)
!5354 = !DILocation(line: 1232, column: 41, scope: !5335)
!5355 = !DILocation(line: 1233, column: 53, scope: !5335)
!5356 = !DILocation(line: 1233, column: 57, scope: !5335)
!5357 = !DILocation(line: 1233, column: 62, scope: !5335)
!5358 = !DILocation(line: 1233, column: 77, scope: !5335)
!5359 = !DILocation(line: 1233, column: 44, scope: !5335)
!5360 = !DILocation(line: 1233, column: 82, scope: !5335)
!5361 = !DILocation(line: 1233, column: 17, scope: !5335)
!5362 = !DILocation(line: 1233, column: 26, scope: !5335)
!5363 = !DILocation(line: 1233, column: 42, scope: !5335)
!5364 = !DILocation(line: 1234, column: 13, scope: !5335)
!5365 = !DILocation(line: 1235, column: 9, scope: !5310)
!5366 = !DILocation(line: 1237, column: 16, scope: !5242)
!5367 = !DILocation(line: 1238, column: 16, scope: !5242)
!5368 = !DILocation(line: 1213, column: 5, scope: !5369)
!5369 = !DILexicalBlockFile(scope: !5237, file: !888, discriminator: 4)
!5370 = distinct !{!5370, !5263}
!5371 = !DILocation(line: 1241, column: 9, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5237, file: !888, line: 1241, column: 9)
!5373 = !DILocation(line: 1241, column: 20, scope: !5372)
!5374 = !DILocation(line: 1241, column: 17, scope: !5372)
!5375 = !DILocation(line: 1241, column: 9, scope: !5237)
!5376 = !DILocation(line: 1242, column: 16, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5372, file: !888, line: 1241, column: 30)
!5378 = !DILocation(line: 1242, column: 21, scope: !5377)
!5379 = !DILocation(line: 1242, column: 9, scope: !5377)
!5380 = !DILocation(line: 1243, column: 9, scope: !5377)
!5381 = !DILocation(line: 1246, column: 20, scope: !5237)
!5382 = !DILocation(line: 1246, column: 5, scope: !5237)
!5383 = !DILocation(line: 1247, column: 5, scope: !5237)
!5384 = !DILocation(line: 1248, column: 1, scope: !5237)
!5385 = distinct !DISubprogram(name: "revert_channel_correlation", scope: !888, file: !888, line: 1253, type: !5386, isLocal: true, isDefinition: true, scopeLine: 1256, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!5386 = !DISubroutineType(types: !5387)
!5387 = !{!906, !1703, !5192, !1793, !1313, !907, !906}
!5388 = !DILocalVariable(name: "ctx", arg: 1, scope: !5385, file: !888, line: 1253, type: !1703)
!5389 = !DILocation(line: 1253, column: 54, scope: !5385)
!5390 = !DILocalVariable(name: "bd", arg: 2, scope: !5385, file: !888, line: 1253, type: !5192)
!5391 = !DILocation(line: 1253, column: 73, scope: !5385)
!5392 = !DILocalVariable(name: "cd", arg: 3, scope: !5385, file: !888, line: 1254, type: !1793)
!5393 = !DILocation(line: 1254, column: 57, scope: !5385)
!5394 = !DILocalVariable(name: "reverted", arg: 4, scope: !5385, file: !888, line: 1254, type: !1313)
!5395 = !DILocation(line: 1254, column: 66, scope: !5385)
!5396 = !DILocalVariable(name: "offset", arg: 5, scope: !5385, file: !888, line: 1255, type: !907)
!5397 = !DILocation(line: 1255, column: 53, scope: !5385)
!5398 = !DILocalVariable(name: "c", arg: 6, scope: !5385, file: !888, line: 1255, type: !906)
!5399 = !DILocation(line: 1255, column: 65, scope: !5385)
!5400 = !DILocalVariable(name: "ch", scope: !5385, file: !888, line: 1257, type: !1794)
!5401 = !DILocation(line: 1257, column: 21, scope: !5385)
!5402 = !DILocation(line: 1257, column: 29, scope: !5385)
!5403 = !DILocation(line: 1257, column: 26, scope: !5385)
!5404 = !DILocalVariable(name: "dep", scope: !5385, file: !888, line: 1258, type: !907)
!5405 = !DILocation(line: 1258, column: 18, scope: !5385)
!5406 = !DILocalVariable(name: "channels", scope: !5385, file: !888, line: 1259, type: !907)
!5407 = !DILocation(line: 1259, column: 18, scope: !5385)
!5408 = !DILocation(line: 1259, column: 29, scope: !5385)
!5409 = !DILocation(line: 1259, column: 34, scope: !5385)
!5410 = !DILocation(line: 1259, column: 41, scope: !5385)
!5411 = !DILocalVariable(name: "channel_size", scope: !5385, file: !888, line: 1260, type: !907)
!5412 = !DILocation(line: 1260, column: 18, scope: !5385)
!5413 = !DILocation(line: 1260, column: 33, scope: !5385)
!5414 = !DILocation(line: 1260, column: 38, scope: !5385)
!5415 = !DILocation(line: 1260, column: 44, scope: !5385)
!5416 = !DILocation(line: 1260, column: 59, scope: !5385)
!5417 = !DILocation(line: 1260, column: 64, scope: !5385)
!5418 = !DILocation(line: 1260, column: 70, scope: !5385)
!5419 = !DILocation(line: 1260, column: 57, scope: !5385)
!5420 = !DILocation(line: 1262, column: 18, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5385, file: !888, line: 1262, column: 9)
!5422 = !DILocation(line: 1262, column: 9, scope: !5421)
!5423 = !DILocation(line: 1262, column: 9, scope: !5385)
!5424 = !DILocation(line: 1263, column: 9, scope: !5421)
!5425 = !DILocation(line: 1265, column: 14, scope: !5385)
!5426 = !DILocation(line: 1265, column: 5, scope: !5385)
!5427 = !DILocation(line: 1265, column: 17, scope: !5385)
!5428 = !DILocation(line: 1267, column: 5, scope: !5385)
!5429 = !DILocation(line: 1267, column: 12, scope: !5430)
!5430 = !DILexicalBlockFile(scope: !5385, file: !888, discriminator: 1)
!5431 = !DILocation(line: 1267, column: 18, scope: !5430)
!5432 = !DILocation(line: 1267, column: 16, scope: !5430)
!5433 = !DILocation(line: 1267, column: 27, scope: !5430)
!5434 = !DILocation(line: 1267, column: 34, scope: !5435)
!5435 = !DILexicalBlockFile(scope: !5385, file: !888, discriminator: 2)
!5436 = !DILocation(line: 1267, column: 31, scope: !5435)
!5437 = !DILocation(line: 1267, column: 39, scope: !5435)
!5438 = !DILocation(line: 1267, column: 30, scope: !5435)
!5439 = !DILocation(line: 1267, column: 5, scope: !5440)
!5440 = !DILexicalBlockFile(scope: !5385, file: !888, discriminator: 3)
!5441 = !DILocation(line: 1268, column: 36, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5385, file: !888, line: 1267, column: 50)
!5443 = !DILocation(line: 1268, column: 41, scope: !5442)
!5444 = !DILocation(line: 1268, column: 45, scope: !5442)
!5445 = !DILocation(line: 1268, column: 49, scope: !5442)
!5446 = !DILocation(line: 1268, column: 59, scope: !5442)
!5447 = !DILocation(line: 1269, column: 39, scope: !5442)
!5448 = !DILocation(line: 1269, column: 36, scope: !5442)
!5449 = !DILocation(line: 1269, column: 44, scope: !5442)
!5450 = !DILocation(line: 1268, column: 9, scope: !5442)
!5451 = !DILocation(line: 1271, column: 12, scope: !5442)
!5452 = !DILocation(line: 1267, column: 5, scope: !5453)
!5453 = !DILexicalBlockFile(scope: !5385, file: !888, discriminator: 4)
!5454 = distinct !{!5454, !5428}
!5455 = !DILocation(line: 1274, column: 9, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5385, file: !888, line: 1274, column: 9)
!5457 = !DILocation(line: 1274, column: 16, scope: !5456)
!5458 = !DILocation(line: 1274, column: 13, scope: !5456)
!5459 = !DILocation(line: 1274, column: 9, scope: !5385)
!5460 = !DILocation(line: 1275, column: 16, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5456, file: !888, line: 1274, column: 26)
!5462 = !DILocation(line: 1275, column: 21, scope: !5461)
!5463 = !DILocation(line: 1275, column: 9, scope: !5461)
!5464 = !DILocation(line: 1276, column: 9, scope: !5461)
!5465 = !DILocation(line: 1279, column: 23, scope: !5385)
!5466 = !DILocation(line: 1279, column: 28, scope: !5385)
!5467 = !DILocation(line: 1279, column: 42, scope: !5385)
!5468 = !DILocation(line: 1279, column: 40, scope: !5385)
!5469 = !DILocation(line: 1279, column: 5, scope: !5385)
!5470 = !DILocation(line: 1279, column: 9, scope: !5385)
!5471 = !DILocation(line: 1279, column: 21, scope: !5385)
!5472 = !DILocation(line: 1280, column: 22, scope: !5385)
!5473 = !DILocation(line: 1280, column: 27, scope: !5385)
!5474 = !DILocation(line: 1280, column: 40, scope: !5385)
!5475 = !DILocation(line: 1280, column: 38, scope: !5385)
!5476 = !DILocation(line: 1280, column: 5, scope: !5385)
!5477 = !DILocation(line: 1280, column: 9, scope: !5385)
!5478 = !DILocation(line: 1280, column: 20, scope: !5385)
!5479 = !DILocation(line: 1281, column: 21, scope: !5385)
!5480 = !DILocation(line: 1281, column: 26, scope: !5385)
!5481 = !DILocation(line: 1281, column: 38, scope: !5385)
!5482 = !DILocation(line: 1281, column: 36, scope: !5385)
!5483 = !DILocation(line: 1281, column: 5, scope: !5385)
!5484 = !DILocation(line: 1281, column: 9, scope: !5385)
!5485 = !DILocation(line: 1281, column: 19, scope: !5385)
!5486 = !DILocation(line: 1282, column: 30, scope: !5385)
!5487 = !DILocation(line: 1282, column: 35, scope: !5385)
!5488 = !DILocation(line: 1282, column: 56, scope: !5385)
!5489 = !DILocation(line: 1282, column: 54, scope: !5385)
!5490 = !DILocation(line: 1282, column: 5, scope: !5385)
!5491 = !DILocation(line: 1282, column: 9, scope: !5385)
!5492 = !DILocation(line: 1282, column: 28, scope: !5385)
!5493 = !DILocation(line: 1283, column: 19, scope: !5385)
!5494 = !DILocation(line: 1283, column: 24, scope: !5385)
!5495 = !DILocation(line: 1283, column: 34, scope: !5385)
!5496 = !DILocation(line: 1283, column: 32, scope: !5385)
!5497 = !DILocation(line: 1283, column: 5, scope: !5385)
!5498 = !DILocation(line: 1283, column: 9, scope: !5385)
!5499 = !DILocation(line: 1283, column: 17, scope: !5385)
!5500 = !DILocation(line: 1284, column: 19, scope: !5385)
!5501 = !DILocation(line: 1284, column: 24, scope: !5385)
!5502 = !DILocation(line: 1284, column: 34, scope: !5385)
!5503 = !DILocation(line: 1284, column: 32, scope: !5385)
!5504 = !DILocation(line: 1284, column: 5, scope: !5385)
!5505 = !DILocation(line: 1284, column: 9, scope: !5385)
!5506 = !DILocation(line: 1284, column: 17, scope: !5385)
!5507 = !DILocation(line: 1285, column: 34, scope: !5385)
!5508 = !DILocation(line: 1285, column: 20, scope: !5385)
!5509 = !DILocation(line: 1285, column: 25, scope: !5385)
!5510 = !DILocation(line: 1285, column: 5, scope: !5385)
!5511 = !DILocation(line: 1285, column: 9, scope: !5385)
!5512 = !DILocation(line: 1285, column: 18, scope: !5385)
!5513 = !DILocation(line: 1286, column: 32, scope: !5385)
!5514 = !DILocation(line: 1286, column: 19, scope: !5385)
!5515 = !DILocation(line: 1286, column: 24, scope: !5385)
!5516 = !DILocation(line: 1286, column: 5, scope: !5385)
!5517 = !DILocation(line: 1286, column: 9, scope: !5385)
!5518 = !DILocation(line: 1286, column: 17, scope: !5385)
!5519 = !DILocation(line: 1287, column: 36, scope: !5385)
!5520 = !DILocation(line: 1287, column: 21, scope: !5385)
!5521 = !DILocation(line: 1287, column: 26, scope: !5385)
!5522 = !DILocation(line: 1287, column: 5, scope: !5385)
!5523 = !DILocation(line: 1287, column: 9, scope: !5385)
!5524 = !DILocation(line: 1287, column: 19, scope: !5385)
!5525 = !DILocation(line: 1288, column: 40, scope: !5385)
!5526 = !DILocation(line: 1288, column: 23, scope: !5385)
!5527 = !DILocation(line: 1288, column: 28, scope: !5385)
!5528 = !DILocation(line: 1288, column: 45, scope: !5385)
!5529 = !DILocation(line: 1288, column: 43, scope: !5385)
!5530 = !DILocation(line: 1288, column: 5, scope: !5385)
!5531 = !DILocation(line: 1288, column: 9, scope: !5385)
!5532 = !DILocation(line: 1288, column: 21, scope: !5385)
!5533 = !DILocation(line: 1290, column: 14, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5385, file: !888, line: 1290, column: 5)
!5535 = !DILocation(line: 1290, column: 10, scope: !5534)
!5536 = !DILocation(line: 1290, column: 23, scope: !5537)
!5537 = !DILexicalBlockFile(scope: !5538, file: !888, discriminator: 1)
!5538 = distinct !DILexicalBlock(scope: !5534, file: !888, line: 1290, column: 5)
!5539 = !DILocation(line: 1290, column: 20, scope: !5537)
!5540 = !DILocation(line: 1290, column: 28, scope: !5537)
!5541 = !DILocation(line: 1290, column: 19, scope: !5537)
!5542 = !DILocation(line: 1290, column: 5, scope: !5537)
!5543 = !DILocalVariable(name: "smp", scope: !5544, file: !888, line: 1291, type: !5545)
!5544 = distinct !DILexicalBlock(scope: !5538, file: !888, line: 1290, column: 46)
!5545 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1135, line: 149, baseType: !910)
!5546 = !DILocation(line: 1291, column: 19, scope: !5544)
!5547 = !DILocalVariable(name: "begin", scope: !5544, file: !888, line: 1292, type: !5545)
!5548 = !DILocation(line: 1292, column: 19, scope: !5544)
!5549 = !DILocalVariable(name: "end", scope: !5544, file: !888, line: 1293, type: !5545)
!5550 = !DILocation(line: 1293, column: 19, scope: !5544)
!5551 = !DILocation(line: 1293, column: 25, scope: !5544)
!5552 = !DILocation(line: 1293, column: 29, scope: !5544)
!5553 = !DILocation(line: 1293, column: 42, scope: !5544)
!5554 = !DILocalVariable(name: "y", scope: !5544, file: !888, line: 1294, type: !908)
!5555 = !DILocation(line: 1294, column: 17, scope: !5544)
!5556 = !DILocalVariable(name: "master", scope: !5544, file: !888, line: 1295, type: !925)
!5557 = !DILocation(line: 1295, column: 18, scope: !5544)
!5558 = !DILocation(line: 1295, column: 47, scope: !5544)
!5559 = !DILocation(line: 1295, column: 44, scope: !5544)
!5560 = !DILocation(line: 1295, column: 52, scope: !5544)
!5561 = !DILocation(line: 1295, column: 27, scope: !5544)
!5562 = !DILocation(line: 1295, column: 32, scope: !5544)
!5563 = !DILocation(line: 1295, column: 70, scope: !5544)
!5564 = !DILocation(line: 1295, column: 68, scope: !5544)
!5565 = !DILocation(line: 1297, column: 16, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5544, file: !888, line: 1297, column: 13)
!5567 = !DILocation(line: 1297, column: 13, scope: !5566)
!5568 = !DILocation(line: 1297, column: 21, scope: !5566)
!5569 = !DILocation(line: 1297, column: 39, scope: !5566)
!5570 = !DILocation(line: 1297, column: 36, scope: !5566)
!5571 = !DILocation(line: 1297, column: 13, scope: !5544)
!5572 = !DILocation(line: 1298, column: 13, scope: !5566)
!5573 = !DILocation(line: 1300, column: 16, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5544, file: !888, line: 1300, column: 13)
!5575 = !DILocation(line: 1300, column: 13, scope: !5574)
!5576 = !DILocation(line: 1300, column: 21, scope: !5574)
!5577 = !DILocation(line: 1300, column: 13, scope: !5544)
!5578 = !DILocalVariable(name: "t", scope: !5579, file: !888, line: 1301, type: !906)
!5579 = distinct !DILexicalBlock(scope: !5574, file: !888, line: 1300, column: 37)
!5580 = !DILocation(line: 1301, column: 17, scope: !5579)
!5581 = !DILocation(line: 1301, column: 24, scope: !5579)
!5582 = !DILocation(line: 1301, column: 21, scope: !5579)
!5583 = !DILocation(line: 1301, column: 29, scope: !5579)
!5584 = !DILocation(line: 1303, column: 20, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5579, file: !888, line: 1303, column: 17)
!5586 = !DILocation(line: 1303, column: 17, scope: !5585)
!5587 = !DILocation(line: 1303, column: 25, scope: !5585)
!5588 = !DILocation(line: 1303, column: 17, scope: !5579)
!5589 = !DILocation(line: 1304, column: 22, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5585, file: !888, line: 1303, column: 41)
!5591 = !DILocation(line: 1304, column: 21, scope: !5590)
!5592 = !DILocation(line: 1304, column: 19, scope: !5590)
!5593 = !DILocation(line: 1305, column: 21, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5590, file: !888, line: 1305, column: 21)
!5595 = !DILocation(line: 1305, column: 29, scope: !5594)
!5596 = !DILocation(line: 1305, column: 27, scope: !5594)
!5597 = !DILocation(line: 1305, column: 21, scope: !5590)
!5598 = !DILocation(line: 1306, column: 28, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5594, file: !888, line: 1305, column: 32)
!5600 = !DILocation(line: 1306, column: 33, scope: !5599)
!5601 = !DILocation(line: 1306, column: 96, scope: !5599)
!5602 = !DILocation(line: 1306, column: 103, scope: !5599)
!5603 = !DILocation(line: 1306, column: 21, scope: !5599)
!5604 = !DILocation(line: 1307, column: 21, scope: !5599)
!5605 = !DILocation(line: 1309, column: 26, scope: !5590)
!5606 = !DILocation(line: 1309, column: 23, scope: !5590)
!5607 = !DILocation(line: 1310, column: 13, scope: !5590)
!5608 = !DILocation(line: 1311, column: 21, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5610, file: !888, line: 1311, column: 21)
!5610 = distinct !DILexicalBlock(scope: !5585, file: !888, line: 1310, column: 20)
!5611 = !DILocation(line: 1311, column: 27, scope: !5609)
!5612 = !DILocation(line: 1311, column: 25, scope: !5609)
!5613 = !DILocation(line: 1311, column: 21, scope: !5610)
!5614 = !DILocation(line: 1312, column: 28, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5609, file: !888, line: 1311, column: 30)
!5616 = !DILocation(line: 1312, column: 33, scope: !5615)
!5617 = !DILocation(line: 1312, column: 94, scope: !5615)
!5618 = !DILocation(line: 1312, column: 99, scope: !5615)
!5619 = !DILocation(line: 1312, column: 21, scope: !5615)
!5620 = !DILocation(line: 1313, column: 21, scope: !5615)
!5621 = !DILocation(line: 1315, column: 24, scope: !5610)
!5622 = !DILocation(line: 1315, column: 21, scope: !5610)
!5623 = !DILocation(line: 1318, column: 19, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5579, file: !888, line: 1318, column: 17)
!5625 = !DILocation(line: 1318, column: 25, scope: !5624)
!5626 = !DILocation(line: 1318, column: 33, scope: !5624)
!5627 = !DILocation(line: 1318, column: 39, scope: !5624)
!5628 = !DILocation(line: 1318, column: 45, scope: !5624)
!5629 = !DILocation(line: 1318, column: 43, scope: !5624)
!5630 = !DILocation(line: 1318, column: 30, scope: !5624)
!5631 = !DILocation(line: 1318, column: 18, scope: !5624)
!5632 = !DILocation(line: 1318, column: 51, scope: !5633)
!5633 = !DILexicalBlockFile(scope: !5624, file: !888, discriminator: 1)
!5634 = !DILocation(line: 1318, column: 57, scope: !5633)
!5635 = !DILocation(line: 1318, column: 63, scope: !5633)
!5636 = !DILocation(line: 1318, column: 61, scope: !5633)
!5637 = !DILocation(line: 1318, column: 18, scope: !5633)
!5638 = !DILocation(line: 1318, column: 69, scope: !5639)
!5639 = !DILexicalBlockFile(scope: !5624, file: !888, discriminator: 2)
!5640 = !DILocation(line: 1318, column: 75, scope: !5639)
!5641 = !DILocation(line: 1318, column: 18, scope: !5639)
!5642 = !DILocation(line: 1318, column: 18, scope: !5643)
!5643 = !DILexicalBlockFile(scope: !5624, file: !888, discriminator: 3)
!5644 = !DILocation(line: 1318, column: 83, scope: !5643)
!5645 = !DILocation(line: 1318, column: 88, scope: !5643)
!5646 = !DILocation(line: 1318, column: 101, scope: !5643)
!5647 = !DILocation(line: 1318, column: 99, scope: !5643)
!5648 = !DILocation(line: 1318, column: 81, scope: !5643)
!5649 = !DILocation(line: 1318, column: 108, scope: !5643)
!5650 = !DILocation(line: 1319, column: 19, scope: !5624)
!5651 = !DILocation(line: 1319, column: 23, scope: !5624)
!5652 = !DILocation(line: 1319, column: 31, scope: !5624)
!5653 = !DILocation(line: 1319, column: 35, scope: !5624)
!5654 = !DILocation(line: 1319, column: 41, scope: !5624)
!5655 = !DILocation(line: 1319, column: 39, scope: !5624)
!5656 = !DILocation(line: 1319, column: 28, scope: !5624)
!5657 = !DILocation(line: 1319, column: 18, scope: !5624)
!5658 = !DILocation(line: 1319, column: 47, scope: !5633)
!5659 = !DILocation(line: 1319, column: 51, scope: !5633)
!5660 = !DILocation(line: 1319, column: 18, scope: !5633)
!5661 = !DILocation(line: 1319, column: 59, scope: !5639)
!5662 = !DILocation(line: 1319, column: 63, scope: !5639)
!5663 = !DILocation(line: 1319, column: 69, scope: !5639)
!5664 = !DILocation(line: 1319, column: 67, scope: !5639)
!5665 = !DILocation(line: 1319, column: 18, scope: !5639)
!5666 = !DILocation(line: 1319, column: 18, scope: !5643)
!5667 = !DILocation(line: 1319, column: 75, scope: !5643)
!5668 = !DILocation(line: 1319, column: 80, scope: !5643)
!5669 = !DILocation(line: 1319, column: 93, scope: !5643)
!5670 = !DILocation(line: 1319, column: 104, scope: !5643)
!5671 = !DILocation(line: 1319, column: 102, scope: !5643)
!5672 = !DILocation(line: 1319, column: 91, scope: !5643)
!5673 = !DILocation(line: 1319, column: 119, scope: !5643)
!5674 = !DILocation(line: 1319, column: 117, scope: !5643)
!5675 = !DILocation(line: 1319, column: 73, scope: !5643)
!5676 = !DILocation(line: 1318, column: 17, scope: !5677)
!5677 = !DILexicalBlockFile(scope: !5579, file: !888, discriminator: 4)
!5678 = !DILocation(line: 1320, column: 24, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5624, file: !888, line: 1319, column: 127)
!5680 = !DILocation(line: 1320, column: 29, scope: !5679)
!5681 = !DILocation(line: 1322, column: 24, scope: !5679)
!5682 = !DILocation(line: 1322, column: 35, scope: !5679)
!5683 = !DILocation(line: 1322, column: 41, scope: !5679)
!5684 = !DILocation(line: 1322, column: 49, scope: !5679)
!5685 = !DILocation(line: 1322, column: 55, scope: !5679)
!5686 = !DILocation(line: 1322, column: 61, scope: !5679)
!5687 = !DILocation(line: 1322, column: 59, scope: !5679)
!5688 = !DILocation(line: 1322, column: 46, scope: !5679)
!5689 = !DILocation(line: 1322, column: 34, scope: !5679)
!5690 = !DILocation(line: 1322, column: 67, scope: !5691)
!5691 = !DILexicalBlockFile(scope: !5679, file: !888, discriminator: 1)
!5692 = !DILocation(line: 1322, column: 73, scope: !5691)
!5693 = !DILocation(line: 1322, column: 79, scope: !5691)
!5694 = !DILocation(line: 1322, column: 77, scope: !5691)
!5695 = !DILocation(line: 1322, column: 34, scope: !5691)
!5696 = !DILocation(line: 1322, column: 85, scope: !5697)
!5697 = !DILexicalBlockFile(scope: !5679, file: !888, discriminator: 2)
!5698 = !DILocation(line: 1322, column: 91, scope: !5697)
!5699 = !DILocation(line: 1322, column: 34, scope: !5697)
!5700 = !DILocation(line: 1322, column: 34, scope: !5701)
!5701 = !DILexicalBlockFile(scope: !5679, file: !888, discriminator: 3)
!5702 = !DILocation(line: 1322, column: 31, scope: !5701)
!5703 = !DILocation(line: 1322, column: 98, scope: !5701)
!5704 = !DILocation(line: 1322, column: 109, scope: !5701)
!5705 = !DILocation(line: 1322, column: 113, scope: !5701)
!5706 = !DILocation(line: 1322, column: 121, scope: !5701)
!5707 = !DILocation(line: 1322, column: 125, scope: !5701)
!5708 = !DILocation(line: 1322, column: 131, scope: !5701)
!5709 = !DILocation(line: 1322, column: 129, scope: !5701)
!5710 = !DILocation(line: 1322, column: 118, scope: !5701)
!5711 = !DILocation(line: 1322, column: 108, scope: !5701)
!5712 = !DILocation(line: 1322, column: 137, scope: !5713)
!5713 = !DILexicalBlockFile(scope: !5679, file: !888, discriminator: 4)
!5714 = !DILocation(line: 1322, column: 141, scope: !5713)
!5715 = !DILocation(line: 1322, column: 108, scope: !5713)
!5716 = !DILocation(line: 1322, column: 149, scope: !5717)
!5717 = !DILexicalBlockFile(scope: !5679, file: !888, discriminator: 5)
!5718 = !DILocation(line: 1322, column: 153, scope: !5717)
!5719 = !DILocation(line: 1322, column: 159, scope: !5717)
!5720 = !DILocation(line: 1322, column: 157, scope: !5717)
!5721 = !DILocation(line: 1322, column: 108, scope: !5717)
!5722 = !DILocation(line: 1322, column: 108, scope: !5723)
!5723 = !DILexicalBlockFile(scope: !5679, file: !888, discriminator: 6)
!5724 = !DILocation(line: 1322, column: 105, scope: !5723)
!5725 = !DILocation(line: 1323, column: 24, scope: !5679)
!5726 = !DILocation(line: 1323, column: 29, scope: !5679)
!5727 = !DILocation(line: 1323, column: 41, scope: !5679)
!5728 = !DILocation(line: 1323, column: 46, scope: !5679)
!5729 = !DILocation(line: 1323, column: 59, scope: !5679)
!5730 = !DILocation(line: 1323, column: 70, scope: !5679)
!5731 = !DILocation(line: 1323, column: 68, scope: !5679)
!5732 = !DILocation(line: 1323, column: 57, scope: !5679)
!5733 = !DILocation(line: 1320, column: 17, scope: !5691)
!5734 = !DILocation(line: 1324, column: 17, scope: !5679)
!5735 = !DILocation(line: 1327, column: 24, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5579, file: !888, line: 1327, column: 13)
!5737 = !DILocation(line: 1327, column: 22, scope: !5736)
!5738 = !DILocation(line: 1327, column: 18, scope: !5736)
!5739 = !DILocation(line: 1327, column: 31, scope: !5740)
!5740 = !DILexicalBlockFile(scope: !5741, file: !888, discriminator: 1)
!5741 = distinct !DILexicalBlock(scope: !5736, file: !888, line: 1327, column: 13)
!5742 = !DILocation(line: 1327, column: 37, scope: !5740)
!5743 = !DILocation(line: 1327, column: 35, scope: !5740)
!5744 = !DILocation(line: 1327, column: 13, scope: !5740)
!5745 = !DILocation(line: 1329, column: 36, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5741, file: !888, line: 1327, column: 49)
!5747 = !DILocation(line: 1329, column: 33, scope: !5746)
!5748 = !DILocation(line: 1329, column: 41, scope: !5746)
!5749 = !DILocation(line: 1329, column: 23, scope: !5746)
!5750 = !DILocation(line: 1329, column: 74, scope: !5746)
!5751 = !DILocation(line: 1329, column: 78, scope: !5746)
!5752 = !DILocation(line: 1329, column: 67, scope: !5746)
!5753 = !DILocation(line: 1329, column: 57, scope: !5746)
!5754 = !DILocation(line: 1329, column: 55, scope: !5746)
!5755 = !DILocation(line: 1328, column: 30, scope: !5746)
!5756 = !DILocation(line: 1330, column: 36, scope: !5746)
!5757 = !DILocation(line: 1330, column: 33, scope: !5746)
!5758 = !DILocation(line: 1330, column: 41, scope: !5746)
!5759 = !DILocation(line: 1330, column: 23, scope: !5746)
!5760 = !DILocation(line: 1330, column: 74, scope: !5746)
!5761 = !DILocation(line: 1330, column: 67, scope: !5746)
!5762 = !DILocation(line: 1330, column: 57, scope: !5746)
!5763 = !DILocation(line: 1330, column: 55, scope: !5746)
!5764 = !DILocation(line: 1329, column: 86, scope: !5746)
!5765 = !DILocation(line: 1331, column: 36, scope: !5746)
!5766 = !DILocation(line: 1331, column: 33, scope: !5746)
!5767 = !DILocation(line: 1331, column: 41, scope: !5746)
!5768 = !DILocation(line: 1331, column: 23, scope: !5746)
!5769 = !DILocation(line: 1331, column: 74, scope: !5746)
!5770 = !DILocation(line: 1331, column: 78, scope: !5746)
!5771 = !DILocation(line: 1331, column: 67, scope: !5746)
!5772 = !DILocation(line: 1331, column: 57, scope: !5746)
!5773 = !DILocation(line: 1331, column: 55, scope: !5746)
!5774 = !DILocation(line: 1330, column: 82, scope: !5746)
!5775 = !DILocation(line: 1332, column: 36, scope: !5746)
!5776 = !DILocation(line: 1332, column: 33, scope: !5746)
!5777 = !DILocation(line: 1332, column: 41, scope: !5746)
!5778 = !DILocation(line: 1332, column: 23, scope: !5746)
!5779 = !DILocation(line: 1332, column: 74, scope: !5746)
!5780 = !DILocation(line: 1332, column: 78, scope: !5746)
!5781 = !DILocation(line: 1332, column: 84, scope: !5746)
!5782 = !DILocation(line: 1332, column: 82, scope: !5746)
!5783 = !DILocation(line: 1332, column: 67, scope: !5746)
!5784 = !DILocation(line: 1332, column: 57, scope: !5746)
!5785 = !DILocation(line: 1332, column: 55, scope: !5746)
!5786 = !DILocation(line: 1331, column: 86, scope: !5746)
!5787 = !DILocation(line: 1333, column: 36, scope: !5746)
!5788 = !DILocation(line: 1333, column: 33, scope: !5746)
!5789 = !DILocation(line: 1333, column: 41, scope: !5746)
!5790 = !DILocation(line: 1333, column: 23, scope: !5746)
!5791 = !DILocation(line: 1333, column: 74, scope: !5746)
!5792 = !DILocation(line: 1333, column: 80, scope: !5746)
!5793 = !DILocation(line: 1333, column: 78, scope: !5746)
!5794 = !DILocation(line: 1333, column: 67, scope: !5746)
!5795 = !DILocation(line: 1333, column: 57, scope: !5746)
!5796 = !DILocation(line: 1333, column: 55, scope: !5746)
!5797 = !DILocation(line: 1332, column: 89, scope: !5746)
!5798 = !DILocation(line: 1334, column: 36, scope: !5746)
!5799 = !DILocation(line: 1334, column: 33, scope: !5746)
!5800 = !DILocation(line: 1334, column: 41, scope: !5746)
!5801 = !DILocation(line: 1334, column: 23, scope: !5746)
!5802 = !DILocation(line: 1334, column: 74, scope: !5746)
!5803 = !DILocation(line: 1334, column: 78, scope: !5746)
!5804 = !DILocation(line: 1334, column: 84, scope: !5746)
!5805 = !DILocation(line: 1334, column: 82, scope: !5746)
!5806 = !DILocation(line: 1334, column: 67, scope: !5746)
!5807 = !DILocation(line: 1334, column: 57, scope: !5746)
!5808 = !DILocation(line: 1334, column: 55, scope: !5746)
!5809 = !DILocation(line: 1333, column: 85, scope: !5746)
!5810 = !DILocation(line: 1328, column: 19, scope: !5746)
!5811 = !DILocation(line: 1336, column: 41, scope: !5746)
!5812 = !DILocation(line: 1336, column: 43, scope: !5746)
!5813 = !DILocation(line: 1336, column: 33, scope: !5746)
!5814 = !DILocation(line: 1336, column: 17, scope: !5746)
!5815 = !DILocation(line: 1336, column: 21, scope: !5746)
!5816 = !DILocation(line: 1336, column: 38, scope: !5746)
!5817 = !DILocation(line: 1337, column: 13, scope: !5746)
!5818 = !DILocation(line: 1327, column: 45, scope: !5819)
!5819 = !DILexicalBlockFile(scope: !5741, file: !888, discriminator: 2)
!5820 = !DILocation(line: 1327, column: 13, scope: !5819)
!5821 = distinct !{!5821, !5822}
!5822 = !DILocation(line: 1327, column: 13, scope: !5579)
!5823 = !DILocation(line: 1338, column: 9, scope: !5579)
!5824 = !DILocation(line: 1340, column: 17, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5826, file: !888, line: 1340, column: 17)
!5826 = distinct !DILexicalBlock(scope: !5574, file: !888, line: 1338, column: 16)
!5827 = !DILocation(line: 1340, column: 23, scope: !5825)
!5828 = !DILocation(line: 1340, column: 29, scope: !5825)
!5829 = !DILocation(line: 1340, column: 34, scope: !5825)
!5830 = !DILocation(line: 1340, column: 47, scope: !5825)
!5831 = !DILocation(line: 1340, column: 45, scope: !5825)
!5832 = !DILocation(line: 1340, column: 27, scope: !5825)
!5833 = !DILocation(line: 1340, column: 54, scope: !5825)
!5834 = !DILocation(line: 1341, column: 17, scope: !5825)
!5835 = !DILocation(line: 1341, column: 21, scope: !5825)
!5836 = !DILocation(line: 1341, column: 27, scope: !5825)
!5837 = !DILocation(line: 1341, column: 32, scope: !5825)
!5838 = !DILocation(line: 1341, column: 45, scope: !5825)
!5839 = !DILocation(line: 1341, column: 56, scope: !5825)
!5840 = !DILocation(line: 1341, column: 54, scope: !5825)
!5841 = !DILocation(line: 1341, column: 43, scope: !5825)
!5842 = !DILocation(line: 1341, column: 71, scope: !5825)
!5843 = !DILocation(line: 1341, column: 69, scope: !5825)
!5844 = !DILocation(line: 1341, column: 25, scope: !5825)
!5845 = !DILocation(line: 1340, column: 17, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !5826, file: !888, discriminator: 1)
!5847 = !DILocation(line: 1342, column: 24, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5825, file: !888, line: 1341, column: 79)
!5849 = !DILocation(line: 1342, column: 29, scope: !5848)
!5850 = !DILocation(line: 1344, column: 24, scope: !5848)
!5851 = !DILocation(line: 1344, column: 33, scope: !5848)
!5852 = !DILocation(line: 1344, column: 31, scope: !5848)
!5853 = !DILocation(line: 1344, column: 39, scope: !5848)
!5854 = !DILocation(line: 1344, column: 44, scope: !5848)
!5855 = !DILocation(line: 1344, column: 53, scope: !5848)
!5856 = !DILocation(line: 1344, column: 51, scope: !5848)
!5857 = !DILocation(line: 1344, column: 57, scope: !5848)
!5858 = !DILocation(line: 1345, column: 24, scope: !5848)
!5859 = !DILocation(line: 1345, column: 29, scope: !5848)
!5860 = !DILocation(line: 1345, column: 41, scope: !5848)
!5861 = !DILocation(line: 1345, column: 46, scope: !5848)
!5862 = !DILocation(line: 1345, column: 59, scope: !5848)
!5863 = !DILocation(line: 1345, column: 70, scope: !5848)
!5864 = !DILocation(line: 1345, column: 68, scope: !5848)
!5865 = !DILocation(line: 1345, column: 57, scope: !5848)
!5866 = !DILocation(line: 1342, column: 17, scope: !5848)
!5867 = !DILocation(line: 1346, column: 17, scope: !5848)
!5868 = !DILocation(line: 1349, column: 24, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5826, file: !888, line: 1349, column: 13)
!5870 = !DILocation(line: 1349, column: 22, scope: !5869)
!5871 = !DILocation(line: 1349, column: 18, scope: !5869)
!5872 = !DILocation(line: 1349, column: 31, scope: !5873)
!5873 = !DILexicalBlockFile(scope: !5874, file: !888, discriminator: 1)
!5874 = distinct !DILexicalBlock(scope: !5869, file: !888, line: 1349, column: 13)
!5875 = !DILocation(line: 1349, column: 37, scope: !5873)
!5876 = !DILocation(line: 1349, column: 35, scope: !5873)
!5877 = !DILocation(line: 1349, column: 13, scope: !5873)
!5878 = !DILocation(line: 1351, column: 36, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5874, file: !888, line: 1349, column: 49)
!5880 = !DILocation(line: 1351, column: 33, scope: !5879)
!5881 = !DILocation(line: 1351, column: 41, scope: !5879)
!5882 = !DILocation(line: 1351, column: 23, scope: !5879)
!5883 = !DILocation(line: 1351, column: 74, scope: !5879)
!5884 = !DILocation(line: 1351, column: 78, scope: !5879)
!5885 = !DILocation(line: 1351, column: 67, scope: !5879)
!5886 = !DILocation(line: 1351, column: 57, scope: !5879)
!5887 = !DILocation(line: 1351, column: 55, scope: !5879)
!5888 = !DILocation(line: 1350, column: 30, scope: !5879)
!5889 = !DILocation(line: 1352, column: 36, scope: !5879)
!5890 = !DILocation(line: 1352, column: 33, scope: !5879)
!5891 = !DILocation(line: 1352, column: 41, scope: !5879)
!5892 = !DILocation(line: 1352, column: 23, scope: !5879)
!5893 = !DILocation(line: 1352, column: 74, scope: !5879)
!5894 = !DILocation(line: 1352, column: 67, scope: !5879)
!5895 = !DILocation(line: 1352, column: 57, scope: !5879)
!5896 = !DILocation(line: 1352, column: 55, scope: !5879)
!5897 = !DILocation(line: 1351, column: 85, scope: !5879)
!5898 = !DILocation(line: 1353, column: 36, scope: !5879)
!5899 = !DILocation(line: 1353, column: 33, scope: !5879)
!5900 = !DILocation(line: 1353, column: 41, scope: !5879)
!5901 = !DILocation(line: 1353, column: 23, scope: !5879)
!5902 = !DILocation(line: 1353, column: 74, scope: !5879)
!5903 = !DILocation(line: 1353, column: 78, scope: !5879)
!5904 = !DILocation(line: 1353, column: 67, scope: !5879)
!5905 = !DILocation(line: 1353, column: 57, scope: !5879)
!5906 = !DILocation(line: 1353, column: 55, scope: !5879)
!5907 = !DILocation(line: 1352, column: 82, scope: !5879)
!5908 = !DILocation(line: 1350, column: 19, scope: !5879)
!5909 = !DILocation(line: 1355, column: 41, scope: !5879)
!5910 = !DILocation(line: 1355, column: 43, scope: !5879)
!5911 = !DILocation(line: 1355, column: 33, scope: !5879)
!5912 = !DILocation(line: 1355, column: 17, scope: !5879)
!5913 = !DILocation(line: 1355, column: 21, scope: !5879)
!5914 = !DILocation(line: 1355, column: 38, scope: !5879)
!5915 = !DILocation(line: 1356, column: 13, scope: !5879)
!5916 = !DILocation(line: 1349, column: 45, scope: !5917)
!5917 = !DILexicalBlockFile(scope: !5874, file: !888, discriminator: 2)
!5918 = !DILocation(line: 1349, column: 13, scope: !5917)
!5919 = distinct !{!5919, !5920}
!5920 = !DILocation(line: 1349, column: 13, scope: !5826)
!5921 = !DILocation(line: 1358, column: 5, scope: !5544)
!5922 = !DILocation(line: 1290, column: 42, scope: !5923)
!5923 = !DILexicalBlockFile(scope: !5538, file: !888, discriminator: 2)
!5924 = !DILocation(line: 1290, column: 5, scope: !5923)
!5925 = distinct !{!5925, !5926}
!5926 = !DILocation(line: 1290, column: 5, scope: !5385)
!5927 = !DILocation(line: 1360, column: 5, scope: !5385)
!5928 = !DILocation(line: 1361, column: 1, scope: !5385)
!5929 = distinct !DISubprogram(name: "decode_block", scope: !888, file: !888, line: 1018, type: !5190, isLocal: true, isDefinition: true, scopeLine: 1019, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!5930 = !DILocalVariable(name: "ctx", arg: 1, scope: !5929, file: !888, line: 1018, type: !1703)
!5931 = !DILocation(line: 1018, column: 40, scope: !5929)
!5932 = !DILocalVariable(name: "bd", arg: 2, scope: !5929, file: !888, line: 1018, type: !5192)
!5933 = !DILocation(line: 1018, column: 59, scope: !5929)
!5934 = !DILocalVariable(name: "smp", scope: !5929, file: !888, line: 1020, type: !907)
!5935 = !DILocation(line: 1020, column: 18, scope: !5929)
!5936 = !DILocalVariable(name: "ret", scope: !5929, file: !888, line: 1021, type: !906)
!5937 = !DILocation(line: 1021, column: 9, scope: !5929)
!5938 = !DILocation(line: 1024, column: 10, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5929, file: !888, line: 1024, column: 9)
!5940 = !DILocation(line: 1024, column: 14, scope: !5939)
!5941 = !DILocation(line: 1024, column: 9, scope: !5939)
!5942 = !DILocation(line: 1024, column: 9, scope: !5929)
!5943 = !DILocation(line: 1025, column: 33, scope: !5939)
!5944 = !DILocation(line: 1025, column: 38, scope: !5939)
!5945 = !DILocation(line: 1025, column: 9, scope: !5939)
!5946 = !DILocation(line: 1027, column: 37, scope: !5939)
!5947 = !DILocation(line: 1027, column: 42, scope: !5939)
!5948 = !DILocation(line: 1027, column: 15, scope: !5939)
!5949 = !DILocation(line: 1027, column: 13, scope: !5939)
!5950 = !DILocation(line: 1029, column: 9, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5929, file: !888, line: 1029, column: 9)
!5952 = !DILocation(line: 1029, column: 13, scope: !5951)
!5953 = !DILocation(line: 1029, column: 9, scope: !5929)
!5954 = !DILocation(line: 1030, column: 16, scope: !5951)
!5955 = !DILocation(line: 1030, column: 9, scope: !5951)
!5956 = !DILocation(line: 1034, column: 10, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5929, file: !888, line: 1034, column: 9)
!5958 = !DILocation(line: 1034, column: 14, scope: !5957)
!5959 = !DILocation(line: 1034, column: 9, scope: !5957)
!5960 = !DILocation(line: 1034, column: 9, scope: !5929)
!5961 = !DILocation(line: 1035, column: 18, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5957, file: !888, line: 1035, column: 9)
!5963 = !DILocation(line: 1035, column: 14, scope: !5962)
!5964 = !DILocation(line: 1035, column: 23, scope: !5965)
!5965 = !DILexicalBlockFile(scope: !5966, file: !888, discriminator: 1)
!5966 = distinct !DILexicalBlock(scope: !5962, file: !888, line: 1035, column: 9)
!5967 = !DILocation(line: 1035, column: 29, scope: !5965)
!5968 = !DILocation(line: 1035, column: 33, scope: !5965)
!5969 = !DILocation(line: 1035, column: 27, scope: !5965)
!5970 = !DILocation(line: 1035, column: 9, scope: !5965)
!5971 = !DILocation(line: 1036, column: 39, scope: !5966)
!5972 = !DILocation(line: 1036, column: 43, scope: !5966)
!5973 = !DILocation(line: 1036, column: 38, scope: !5966)
!5974 = !DILocation(line: 1036, column: 29, scope: !5966)
!5975 = !DILocation(line: 1036, column: 13, scope: !5966)
!5976 = !DILocation(line: 1036, column: 17, scope: !5966)
!5977 = !DILocation(line: 1036, column: 34, scope: !5966)
!5978 = !DILocation(line: 1035, column: 50, scope: !5979)
!5979 = !DILexicalBlockFile(scope: !5966, file: !888, discriminator: 2)
!5980 = !DILocation(line: 1035, column: 9, scope: !5979)
!5981 = distinct !{!5981, !5982}
!5982 = !DILocation(line: 1035, column: 9, scope: !5957)
!5983 = !DILocation(line: 1036, column: 43, scope: !5984)
!5984 = !DILexicalBlockFile(scope: !5962, file: !888, discriminator: 1)
!5985 = !DILocation(line: 1038, column: 5, scope: !5929)
!5986 = !DILocation(line: 1039, column: 1, scope: !5929)
!5987 = distinct !DISubprogram(name: "read_diff_float_data", scope: !888, file: !888, line: 1418, type: !4052, isLocal: true, isDefinition: true, scopeLine: 1418, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!5988 = !DILocalVariable(name: "s", arg: 1, scope: !5989, file: !1736, line: 412, type: !3666)
!5989 = distinct !DISubprogram(name: "get_bitsz", scope: !1736, file: !1736, line: 412, type: !5990, isLocal: true, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{!906, !3666, !906}
!5992 = !DILocation(line: 412, column: 75, scope: !5989, inlinedAt: !5993)
!5993 = distinct !DILocation(line: 1524, column: 46, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5995, file: !888, line: 1523, column: 54)
!5995 = distinct !DILexicalBlock(scope: !5996, file: !888, line: 1523, column: 25)
!5996 = distinct !DILexicalBlock(scope: !5997, file: !888, line: 1522, column: 52)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !888, line: 1522, column: 17)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !888, line: 1522, column: 17)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !888, line: 1521, column: 33)
!6000 = distinct !DILexicalBlock(scope: !6001, file: !888, line: 1521, column: 17)
!6001 = distinct !DILexicalBlock(scope: !6002, file: !888, line: 1508, column: 27)
!6002 = distinct !DILexicalBlock(scope: !6003, file: !888, line: 1508, column: 13)
!6003 = distinct !DILexicalBlock(scope: !6004, file: !888, line: 1455, column: 43)
!6004 = distinct !DILexicalBlock(scope: !6005, file: !888, line: 1455, column: 5)
!6005 = distinct !DILexicalBlock(scope: !5987, file: !888, line: 1455, column: 5)
!6006 = !DILocalVariable(name: "n", arg: 2, scope: !5989, file: !1736, line: 412, type: !906)
!6007 = !DILocation(line: 412, column: 82, scope: !5989, inlinedAt: !5993)
!6008 = !DILocation(line: 66, column: 98, scope: !2479, inlinedAt: !6009)
!6009 = distinct !DILocation(line: 1502, column: 47, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6011, file: !888, line: 1501, column: 52)
!6011 = distinct !DILexicalBlock(scope: !6012, file: !888, line: 1501, column: 17)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !888, line: 1501, column: 17)
!6013 = distinct !DILexicalBlock(scope: !6014, file: !888, line: 1487, column: 20)
!6014 = distinct !DILexicalBlock(scope: !6015, file: !888, line: 1481, column: 17)
!6015 = distinct !DILexicalBlock(scope: !6016, file: !888, line: 1480, column: 25)
!6016 = distinct !DILexicalBlock(scope: !6003, file: !888, line: 1480, column: 13)
!6017 = !DILocalVariable(name: "ctx", arg: 1, scope: !5987, file: !888, line: 1418, type: !1703)
!6018 = !DILocation(line: 1418, column: 48, scope: !5987)
!6019 = !DILocalVariable(name: "ra_frame", arg: 2, scope: !5987, file: !888, line: 1418, type: !907)
!6020 = !DILocation(line: 1418, column: 66, scope: !5987)
!6021 = !DILocalVariable(name: "avctx", scope: !5987, file: !888, line: 1419, type: !1022)
!6022 = !DILocation(line: 1419, column: 21, scope: !5987)
!6023 = !DILocation(line: 1419, column: 29, scope: !5987)
!6024 = !DILocation(line: 1419, column: 34, scope: !5987)
!6025 = !DILocalVariable(name: "gb", scope: !5987, file: !888, line: 1420, type: !3666)
!6026 = !DILocation(line: 1420, column: 20, scope: !5987)
!6027 = !DILocation(line: 1420, column: 26, scope: !5987)
!6028 = !DILocation(line: 1420, column: 31, scope: !5987)
!6029 = !DILocalVariable(name: "acf", scope: !5987, file: !888, line: 1421, type: !1835)
!6030 = !DILocation(line: 1421, column: 24, scope: !5987)
!6031 = !DILocation(line: 1421, column: 30, scope: !5987)
!6032 = !DILocation(line: 1421, column: 35, scope: !5987)
!6033 = !DILocalVariable(name: "shift_value", scope: !5987, file: !888, line: 1422, type: !1313)
!6034 = !DILocation(line: 1422, column: 10, scope: !5987)
!6035 = !DILocation(line: 1422, column: 24, scope: !5987)
!6036 = !DILocation(line: 1422, column: 29, scope: !5987)
!6037 = !DILocalVariable(name: "last_shift_value", scope: !5987, file: !888, line: 1423, type: !1313)
!6038 = !DILocation(line: 1423, column: 10, scope: !5987)
!6039 = !DILocation(line: 1423, column: 29, scope: !5987)
!6040 = !DILocation(line: 1423, column: 34, scope: !5987)
!6041 = !DILocalVariable(name: "last_acf_mantissa", scope: !5987, file: !888, line: 1424, type: !1313)
!6042 = !DILocation(line: 1424, column: 10, scope: !5987)
!6043 = !DILocation(line: 1424, column: 30, scope: !5987)
!6044 = !DILocation(line: 1424, column: 35, scope: !5987)
!6045 = !DILocalVariable(name: "raw_mantissa", scope: !5987, file: !888, line: 1425, type: !1784)
!6046 = !DILocation(line: 1425, column: 11, scope: !5987)
!6047 = !DILocation(line: 1425, column: 26, scope: !5987)
!6048 = !DILocation(line: 1425, column: 31, scope: !5987)
!6049 = !DILocalVariable(name: "nbits", scope: !5987, file: !888, line: 1426, type: !1313)
!6050 = !DILocation(line: 1426, column: 10, scope: !5987)
!6051 = !DILocation(line: 1426, column: 18, scope: !5987)
!6052 = !DILocation(line: 1426, column: 23, scope: !5987)
!6053 = !DILocalVariable(name: "larray", scope: !5987, file: !888, line: 1427, type: !1841)
!6054 = !DILocation(line: 1427, column: 20, scope: !5987)
!6055 = !DILocation(line: 1427, column: 29, scope: !5987)
!6056 = !DILocation(line: 1427, column: 34, scope: !5987)
!6057 = !DILocalVariable(name: "frame_length", scope: !5987, file: !888, line: 1428, type: !906)
!6058 = !DILocation(line: 1428, column: 9, scope: !5987)
!6059 = !DILocation(line: 1428, column: 24, scope: !5987)
!6060 = !DILocation(line: 1428, column: 29, scope: !5987)
!6061 = !DILocalVariable(name: "scale", scope: !5987, file: !888, line: 1429, type: !1680)
!6062 = !DILocation(line: 1429, column: 23, scope: !5987)
!6063 = !DILocation(line: 1429, column: 31, scope: !5987)
!6064 = !DILocalVariable(name: "partA_flag", scope: !5987, file: !888, line: 1430, type: !907)
!6065 = !DILocation(line: 1430, column: 18, scope: !5987)
!6066 = !DILocalVariable(name: "highest_byte", scope: !5987, file: !888, line: 1431, type: !907)
!6067 = !DILocation(line: 1431, column: 18, scope: !5987)
!6068 = !DILocalVariable(name: "shift_amp", scope: !5987, file: !888, line: 1432, type: !907)
!6069 = !DILocation(line: 1432, column: 18, scope: !5987)
!6070 = !DILocalVariable(name: "tmp_32", scope: !5987, file: !888, line: 1433, type: !917)
!6071 = !DILocation(line: 1433, column: 14, scope: !5987)
!6072 = !DILocalVariable(name: "use_acf", scope: !5987, file: !888, line: 1434, type: !906)
!6073 = !DILocation(line: 1434, column: 9, scope: !5987)
!6074 = !DILocalVariable(name: "nchars", scope: !5987, file: !888, line: 1435, type: !906)
!6075 = !DILocation(line: 1435, column: 9, scope: !5987)
!6076 = !DILocalVariable(name: "i", scope: !5987, file: !888, line: 1436, type: !906)
!6077 = !DILocation(line: 1436, column: 9, scope: !5987)
!6078 = !DILocalVariable(name: "c", scope: !5987, file: !888, line: 1437, type: !906)
!6079 = !DILocation(line: 1437, column: 9, scope: !5987)
!6080 = !DILocalVariable(name: "k", scope: !5987, file: !888, line: 1438, type: !910)
!6081 = !DILocation(line: 1438, column: 10, scope: !5987)
!6082 = !DILocalVariable(name: "nbits_aligned", scope: !5987, file: !888, line: 1439, type: !910)
!6083 = !DILocation(line: 1439, column: 10, scope: !5987)
!6084 = !DILocalVariable(name: "acc", scope: !5987, file: !888, line: 1440, type: !921)
!6085 = !DILocation(line: 1440, column: 19, scope: !5987)
!6086 = !DILocalVariable(name: "j", scope: !5987, file: !888, line: 1441, type: !921)
!6087 = !DILocation(line: 1441, column: 19, scope: !5987)
!6088 = !DILocalVariable(name: "sign", scope: !5987, file: !888, line: 1442, type: !917)
!6089 = !DILocation(line: 1442, column: 14, scope: !5987)
!6090 = !DILocalVariable(name: "e", scope: !5987, file: !888, line: 1443, type: !917)
!6091 = !DILocation(line: 1443, column: 14, scope: !5987)
!6092 = !DILocalVariable(name: "mantissa", scope: !5987, file: !888, line: 1444, type: !917)
!6093 = !DILocation(line: 1444, column: 14, scope: !5987)
!6094 = !DILocation(line: 1446, column: 20, scope: !5987)
!6095 = !DILocation(line: 1446, column: 5, scope: !5987)
!6096 = !DILocation(line: 1447, column: 25, scope: !5987)
!6097 = !DILocation(line: 1447, column: 15, scope: !5987)
!6098 = !DILocation(line: 1447, column: 13, scope: !5987)
!6099 = !DILocation(line: 1449, column: 9, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !5987, file: !888, line: 1449, column: 9)
!6101 = !DILocation(line: 1449, column: 9, scope: !5987)
!6102 = !DILocation(line: 1450, column: 16, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6100, file: !888, line: 1449, column: 19)
!6104 = !DILocation(line: 1450, column: 9, scope: !6103)
!6105 = !DILocation(line: 1450, column: 38, scope: !6103)
!6106 = !DILocation(line: 1450, column: 45, scope: !6103)
!6107 = !DILocation(line: 1450, column: 54, scope: !6103)
!6108 = !DILocation(line: 1451, column: 16, scope: !6103)
!6109 = !DILocation(line: 1451, column: 9, scope: !6103)
!6110 = !DILocation(line: 1451, column: 37, scope: !6103)
!6111 = !DILocation(line: 1451, column: 44, scope: !6103)
!6112 = !DILocation(line: 1451, column: 53, scope: !6103)
!6113 = !DILocation(line: 1452, column: 27, scope: !6103)
!6114 = !DILocation(line: 1452, column: 32, scope: !6103)
!6115 = !DILocation(line: 1452, column: 9, scope: !6103)
!6116 = !DILocation(line: 1453, column: 5, scope: !6103)
!6117 = !DILocation(line: 1455, column: 12, scope: !6005)
!6118 = !DILocation(line: 1455, column: 10, scope: !6005)
!6119 = !DILocation(line: 1455, column: 17, scope: !6120)
!6120 = !DILexicalBlockFile(scope: !6004, file: !888, discriminator: 1)
!6121 = !DILocation(line: 1455, column: 21, scope: !6120)
!6122 = !DILocation(line: 1455, column: 28, scope: !6120)
!6123 = !DILocation(line: 1455, column: 19, scope: !6120)
!6124 = !DILocation(line: 1455, column: 5, scope: !6120)
!6125 = !DILocation(line: 1456, column: 13, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6003, file: !888, line: 1456, column: 13)
!6127 = !DILocation(line: 1456, column: 13, scope: !6003)
!6128 = !DILocation(line: 1458, column: 27, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !888, line: 1458, column: 17)
!6130 = distinct !DILexicalBlock(scope: !6126, file: !888, line: 1456, column: 22)
!6131 = !DILocation(line: 1458, column: 17, scope: !6129)
!6132 = !DILocation(line: 1458, column: 17, scope: !6130)
!6133 = !DILocation(line: 1459, column: 35, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6129, file: !888, line: 1458, column: 32)
!6135 = !DILocation(line: 1459, column: 26, scope: !6134)
!6136 = !DILocation(line: 1459, column: 24, scope: !6134)
!6137 = !DILocation(line: 1460, column: 40, scope: !6134)
!6138 = !DILocation(line: 1460, column: 35, scope: !6134)
!6139 = !DILocation(line: 1460, column: 17, scope: !6134)
!6140 = !DILocation(line: 1460, column: 38, scope: !6134)
!6141 = !DILocation(line: 1461, column: 13, scope: !6134)
!6142 = !DILocation(line: 1462, column: 44, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6129, file: !888, line: 1461, column: 20)
!6144 = !DILocation(line: 1462, column: 26, scope: !6143)
!6145 = !DILocation(line: 1462, column: 24, scope: !6143)
!6146 = !DILocation(line: 1464, column: 17, scope: !6130)
!6147 = !DILocation(line: 1464, column: 13, scope: !6130)
!6148 = !DILocation(line: 1464, column: 41, scope: !6130)
!6149 = !DILocation(line: 1464, column: 22, scope: !6130)
!6150 = !DILocation(line: 1464, column: 22, scope: !6151)
!6151 = !DILexicalBlockFile(scope: !6130, file: !888, discriminator: 1)
!6152 = !DILocation(line: 1465, column: 9, scope: !6130)
!6153 = !DILocation(line: 1466, column: 17, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6126, file: !888, line: 1465, column: 16)
!6155 = !DILocation(line: 1466, column: 13, scope: !6154)
!6156 = !DILocation(line: 1466, column: 22, scope: !6154)
!6157 = !DILocation(line: 1469, column: 33, scope: !6003)
!6158 = !DILocation(line: 1469, column: 24, scope: !6003)
!6159 = !DILocation(line: 1469, column: 22, scope: !6003)
!6160 = !DILocation(line: 1470, column: 32, scope: !6003)
!6161 = !DILocation(line: 1470, column: 22, scope: !6003)
!6162 = !DILocation(line: 1470, column: 20, scope: !6003)
!6163 = !DILocation(line: 1471, column: 31, scope: !6003)
!6164 = !DILocation(line: 1471, column: 21, scope: !6003)
!6165 = !DILocation(line: 1471, column: 19, scope: !6003)
!6166 = !DILocation(line: 1473, column: 13, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6003, file: !888, line: 1473, column: 13)
!6168 = !DILocation(line: 1473, column: 13, scope: !6003)
!6169 = !DILocation(line: 1474, column: 39, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6167, file: !888, line: 1473, column: 24)
!6171 = !DILocation(line: 1474, column: 30, scope: !6170)
!6172 = !DILocation(line: 1474, column: 25, scope: !6170)
!6173 = !DILocation(line: 1474, column: 13, scope: !6170)
!6174 = !DILocation(line: 1474, column: 28, scope: !6170)
!6175 = !DILocation(line: 1475, column: 47, scope: !6170)
!6176 = !DILocation(line: 1475, column: 35, scope: !6170)
!6177 = !DILocation(line: 1475, column: 30, scope: !6170)
!6178 = !DILocation(line: 1475, column: 13, scope: !6170)
!6179 = !DILocation(line: 1475, column: 33, scope: !6170)
!6180 = !DILocation(line: 1476, column: 9, scope: !6170)
!6181 = !DILocation(line: 1477, column: 47, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6167, file: !888, line: 1476, column: 16)
!6183 = !DILocation(line: 1477, column: 30, scope: !6182)
!6184 = !DILocation(line: 1477, column: 25, scope: !6182)
!6185 = !DILocation(line: 1477, column: 13, scope: !6182)
!6186 = !DILocation(line: 1477, column: 28, scope: !6182)
!6187 = !DILocation(line: 1480, column: 13, scope: !6016)
!6188 = !DILocation(line: 1480, column: 13, scope: !6003)
!6189 = !DILocation(line: 1481, column: 28, scope: !6014)
!6190 = !DILocation(line: 1481, column: 18, scope: !6014)
!6191 = !DILocation(line: 1481, column: 17, scope: !6015)
!6192 = !DILocation(line: 1482, column: 24, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6194, file: !888, line: 1482, column: 17)
!6194 = distinct !DILexicalBlock(scope: !6014, file: !888, line: 1481, column: 33)
!6195 = !DILocation(line: 1482, column: 22, scope: !6193)
!6196 = !DILocation(line: 1482, column: 29, scope: !6197)
!6197 = !DILexicalBlockFile(scope: !6198, file: !888, discriminator: 1)
!6198 = distinct !DILexicalBlock(scope: !6193, file: !888, line: 1482, column: 17)
!6199 = !DILocation(line: 1482, column: 33, scope: !6197)
!6200 = !DILocation(line: 1482, column: 31, scope: !6197)
!6201 = !DILocation(line: 1482, column: 17, scope: !6197)
!6202 = !DILocation(line: 1483, column: 45, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6204, file: !888, line: 1483, column: 25)
!6204 = distinct !DILexicalBlock(scope: !6198, file: !888, line: 1482, column: 52)
!6205 = !DILocation(line: 1483, column: 25, scope: !6203)
!6206 = !DILocation(line: 1483, column: 42, scope: !6203)
!6207 = !DILocation(line: 1483, column: 30, scope: !6203)
!6208 = !DILocation(line: 1483, column: 48, scope: !6203)
!6209 = !DILocation(line: 1483, column: 25, scope: !6204)
!6210 = !DILocation(line: 1484, column: 65, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6203, file: !888, line: 1483, column: 54)
!6212 = !DILocation(line: 1484, column: 51, scope: !6211)
!6213 = !DILocation(line: 1484, column: 46, scope: !6211)
!6214 = !DILocation(line: 1484, column: 25, scope: !6211)
!6215 = !DILocation(line: 1484, column: 43, scope: !6211)
!6216 = !DILocation(line: 1484, column: 30, scope: !6211)
!6217 = !DILocation(line: 1484, column: 49, scope: !6211)
!6218 = !DILocation(line: 1485, column: 21, scope: !6211)
!6219 = !DILocation(line: 1486, column: 17, scope: !6204)
!6220 = !DILocation(line: 1482, column: 47, scope: !6221)
!6221 = !DILexicalBlockFile(scope: !6198, file: !888, discriminator: 2)
!6222 = !DILocation(line: 1482, column: 17, scope: !6221)
!6223 = distinct !{!6223, !6224}
!6224 = !DILocation(line: 1482, column: 17, scope: !6194)
!6225 = !DILocation(line: 1487, column: 13, scope: !6194)
!6226 = !DILocation(line: 1488, column: 24, scope: !6013)
!6227 = !DILocation(line: 1489, column: 24, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6013, file: !888, line: 1489, column: 17)
!6229 = !DILocation(line: 1489, column: 22, scope: !6228)
!6230 = !DILocation(line: 1489, column: 29, scope: !6231)
!6231 = !DILexicalBlockFile(scope: !6232, file: !888, discriminator: 1)
!6232 = distinct !DILexicalBlock(scope: !6228, file: !888, line: 1489, column: 17)
!6233 = !DILocation(line: 1489, column: 33, scope: !6231)
!6234 = !DILocation(line: 1489, column: 31, scope: !6231)
!6235 = !DILocation(line: 1489, column: 17, scope: !6231)
!6236 = !DILocation(line: 1490, column: 45, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6238, file: !888, line: 1490, column: 25)
!6238 = distinct !DILexicalBlock(scope: !6232, file: !888, line: 1489, column: 52)
!6239 = !DILocation(line: 1490, column: 25, scope: !6237)
!6240 = !DILocation(line: 1490, column: 42, scope: !6237)
!6241 = !DILocation(line: 1490, column: 30, scope: !6237)
!6242 = !DILocation(line: 1490, column: 48, scope: !6237)
!6243 = !DILocation(line: 1490, column: 25, scope: !6238)
!6244 = !DILocation(line: 1491, column: 32, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6237, file: !888, line: 1490, column: 54)
!6246 = !DILocation(line: 1492, column: 21, scope: !6245)
!6247 = !DILocation(line: 1493, column: 17, scope: !6238)
!6248 = !DILocation(line: 1489, column: 47, scope: !6249)
!6249 = !DILexicalBlockFile(scope: !6232, file: !888, discriminator: 2)
!6250 = !DILocation(line: 1489, column: 17, scope: !6249)
!6251 = distinct !{!6251, !6252}
!6252 = !DILocation(line: 1489, column: 17, scope: !6013)
!6253 = !DILocation(line: 1495, column: 47, scope: !6013)
!6254 = !DILocation(line: 1495, column: 52, scope: !6013)
!6255 = !DILocation(line: 1495, column: 57, scope: !6013)
!6256 = !DILocation(line: 1495, column: 61, scope: !6013)
!6257 = !DILocation(line: 1495, column: 69, scope: !6013)
!6258 = !DILocation(line: 1495, column: 26, scope: !6013)
!6259 = !DILocation(line: 1495, column: 24, scope: !6013)
!6260 = !DILocation(line: 1496, column: 20, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6013, file: !888, line: 1496, column: 20)
!6262 = !DILocation(line: 1496, column: 30, scope: !6261)
!6263 = !DILocation(line: 1496, column: 27, scope: !6261)
!6264 = !DILocation(line: 1496, column: 20, scope: !6013)
!6265 = !DILocation(line: 1497, column: 28, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6261, file: !888, line: 1496, column: 38)
!6267 = !DILocation(line: 1497, column: 33, scope: !6266)
!6268 = !DILocation(line: 1497, column: 102, scope: !6266)
!6269 = !DILocation(line: 1497, column: 110, scope: !6266)
!6270 = !DILocation(line: 1497, column: 21, scope: !6266)
!6271 = !DILocation(line: 1498, column: 21, scope: !6266)
!6272 = !DILocation(line: 1501, column: 24, scope: !6012)
!6273 = !DILocation(line: 1501, column: 22, scope: !6012)
!6274 = !DILocation(line: 1501, column: 29, scope: !6275)
!6275 = !DILexicalBlockFile(scope: !6011, file: !888, discriminator: 1)
!6276 = !DILocation(line: 1501, column: 33, scope: !6275)
!6277 = !DILocation(line: 1501, column: 31, scope: !6275)
!6278 = !DILocation(line: 1501, column: 17, scope: !6275)
!6279 = !DILocation(line: 1502, column: 90, scope: !6010)
!6280 = !DILocation(line: 1502, column: 100, scope: !6010)
!6281 = !DILocation(line: 1502, column: 47, scope: !6010)
!6282 = !DILocation(line: 68, column: 16, scope: !2479, inlinedAt: !6009)
!6283 = !DILocation(line: 68, column: 19, scope: !2479, inlinedAt: !6009)
!6284 = !DILocation(line: 68, column: 24, scope: !2479, inlinedAt: !6009)
!6285 = !DILocation(line: 68, column: 38, scope: !2479, inlinedAt: !6009)
!6286 = !DILocation(line: 68, column: 41, scope: !2479, inlinedAt: !6009)
!6287 = !DILocation(line: 68, column: 46, scope: !2479, inlinedAt: !6009)
!6288 = !DILocation(line: 68, column: 34, scope: !2479, inlinedAt: !6009)
!6289 = !DILocation(line: 68, column: 57, scope: !2479, inlinedAt: !6009)
!6290 = !DILocation(line: 68, column: 69, scope: !2479, inlinedAt: !6009)
!6291 = !DILocation(line: 68, column: 72, scope: !2479, inlinedAt: !6009)
!6292 = !DILocation(line: 68, column: 79, scope: !2479, inlinedAt: !6009)
!6293 = !DILocation(line: 68, column: 84, scope: !2479, inlinedAt: !6009)
!6294 = !DILocation(line: 68, column: 99, scope: !2479, inlinedAt: !6009)
!6295 = !DILocation(line: 68, column: 102, scope: !2479, inlinedAt: !6009)
!6296 = !DILocation(line: 68, column: 109, scope: !2479, inlinedAt: !6009)
!6297 = !DILocation(line: 68, column: 114, scope: !2479, inlinedAt: !6009)
!6298 = !DILocation(line: 68, column: 94, scope: !2479, inlinedAt: !6009)
!6299 = !DILocation(line: 68, column: 63, scope: !2479, inlinedAt: !6009)
!6300 = !DILocation(line: 1502, column: 42, scope: !6010)
!6301 = !DILocation(line: 1502, column: 21, scope: !6010)
!6302 = !DILocation(line: 1502, column: 39, scope: !6010)
!6303 = !DILocation(line: 1502, column: 26, scope: !6010)
!6304 = !DILocation(line: 1502, column: 45, scope: !6010)
!6305 = !DILocation(line: 1503, column: 17, scope: !6010)
!6306 = !DILocation(line: 1501, column: 47, scope: !6307)
!6307 = !DILexicalBlockFile(scope: !6011, file: !888, discriminator: 2)
!6308 = !DILocation(line: 1501, column: 17, scope: !6307)
!6309 = distinct !{!6309, !6310}
!6310 = !DILocation(line: 1501, column: 17, scope: !6013)
!6311 = !DILocation(line: 1505, column: 9, scope: !6015)
!6312 = !DILocation(line: 1508, column: 13, scope: !6002)
!6313 = !DILocation(line: 1508, column: 13, scope: !6003)
!6314 = !DILocation(line: 1509, column: 20, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6001, file: !888, line: 1509, column: 13)
!6316 = !DILocation(line: 1509, column: 18, scope: !6315)
!6317 = !DILocation(line: 1509, column: 25, scope: !6318)
!6318 = !DILexicalBlockFile(scope: !6319, file: !888, discriminator: 1)
!6319 = distinct !DILexicalBlock(scope: !6315, file: !888, line: 1509, column: 13)
!6320 = !DILocation(line: 1509, column: 29, scope: !6318)
!6321 = !DILocation(line: 1509, column: 27, scope: !6318)
!6322 = !DILocation(line: 1509, column: 13, scope: !6318)
!6323 = !DILocation(line: 1510, column: 41, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6325, file: !888, line: 1510, column: 21)
!6325 = distinct !DILexicalBlock(scope: !6319, file: !888, line: 1509, column: 48)
!6326 = !DILocation(line: 1510, column: 21, scope: !6324)
!6327 = !DILocation(line: 1510, column: 38, scope: !6324)
!6328 = !DILocation(line: 1510, column: 26, scope: !6324)
!6329 = !DILocation(line: 1510, column: 44, scope: !6324)
!6330 = !DILocation(line: 1510, column: 21, scope: !6325)
!6331 = !DILocation(line: 1512, column: 47, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6333, file: !888, line: 1512, column: 25)
!6333 = distinct !DILexicalBlock(scope: !6324, file: !888, line: 1510, column: 50)
!6334 = !DILocation(line: 1512, column: 43, scope: !6332)
!6335 = !DILocation(line: 1512, column: 25, scope: !6332)
!6336 = !DILocation(line: 1512, column: 25, scope: !6333)
!6337 = !DILocation(line: 1513, column: 86, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6332, file: !888, line: 1512, column: 61)
!6339 = !DILocation(line: 1513, column: 66, scope: !6338)
!6340 = !DILocation(line: 1513, column: 83, scope: !6338)
!6341 = !DILocation(line: 1513, column: 71, scope: !6338)
!6342 = !DILocation(line: 1513, column: 62, scope: !6338)
!6343 = !DILocation(line: 1513, column: 90, scope: !6338)
!6344 = !DILocation(line: 1513, column: 47, scope: !6345)
!6345 = !DILexicalBlockFile(scope: !6338, file: !888, discriminator: 1)
!6346 = !DILocation(line: 1513, column: 45, scope: !6338)
!6347 = !DILocation(line: 1513, column: 39, scope: !6338)
!6348 = !DILocation(line: 1513, column: 31, scope: !6338)
!6349 = !DILocation(line: 1513, column: 25, scope: !6338)
!6350 = !DILocation(line: 1513, column: 34, scope: !6338)
!6351 = !DILocation(line: 1514, column: 21, scope: !6338)
!6352 = !DILocation(line: 1515, column: 31, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6332, file: !888, line: 1514, column: 28)
!6354 = !DILocation(line: 1515, column: 25, scope: !6353)
!6355 = !DILocation(line: 1515, column: 34, scope: !6353)
!6356 = !DILocation(line: 1517, column: 40, scope: !6333)
!6357 = !DILocation(line: 1517, column: 34, scope: !6333)
!6358 = !DILocation(line: 1517, column: 47, scope: !6333)
!6359 = !DILocation(line: 1517, column: 59, scope: !6333)
!6360 = !DILocation(line: 1517, column: 44, scope: !6333)
!6361 = !DILocation(line: 1517, column: 33, scope: !6333)
!6362 = !DILocation(line: 1517, column: 66, scope: !6363)
!6363 = !DILexicalBlockFile(scope: !6333, file: !888, discriminator: 1)
!6364 = !DILocation(line: 1517, column: 78, scope: !6363)
!6365 = !DILocation(line: 1517, column: 33, scope: !6363)
!6366 = !DILocation(line: 1517, column: 91, scope: !6367)
!6367 = !DILexicalBlockFile(scope: !6333, file: !888, discriminator: 2)
!6368 = !DILocation(line: 1517, column: 85, scope: !6367)
!6369 = !DILocation(line: 1517, column: 33, scope: !6367)
!6370 = !DILocation(line: 1517, column: 33, scope: !6371)
!6371 = !DILexicalBlockFile(scope: !6333, file: !888, discriminator: 3)
!6372 = !DILocation(line: 1517, column: 27, scope: !6371)
!6373 = !DILocation(line: 1517, column: 21, scope: !6371)
!6374 = !DILocation(line: 1517, column: 30, scope: !6371)
!6375 = !DILocation(line: 1518, column: 17, scope: !6333)
!6376 = !DILocation(line: 1519, column: 13, scope: !6325)
!6377 = !DILocation(line: 1509, column: 43, scope: !6378)
!6378 = !DILexicalBlockFile(scope: !6319, file: !888, discriminator: 2)
!6379 = !DILocation(line: 1509, column: 13, scope: !6378)
!6380 = distinct !{!6380, !6381}
!6381 = !DILocation(line: 1509, column: 13, scope: !6001)
!6382 = !DILocation(line: 1521, column: 28, scope: !6000)
!6383 = !DILocation(line: 1521, column: 18, scope: !6000)
!6384 = !DILocation(line: 1521, column: 17, scope: !6001)
!6385 = !DILocation(line: 1522, column: 24, scope: !5998)
!6386 = !DILocation(line: 1522, column: 22, scope: !5998)
!6387 = !DILocation(line: 1522, column: 29, scope: !6388)
!6388 = !DILexicalBlockFile(scope: !5997, file: !888, discriminator: 1)
!6389 = !DILocation(line: 1522, column: 33, scope: !6388)
!6390 = !DILocation(line: 1522, column: 31, scope: !6388)
!6391 = !DILocation(line: 1522, column: 17, scope: !6388)
!6392 = !DILocation(line: 1523, column: 45, scope: !5995)
!6393 = !DILocation(line: 1523, column: 25, scope: !5995)
!6394 = !DILocation(line: 1523, column: 42, scope: !5995)
!6395 = !DILocation(line: 1523, column: 30, scope: !5995)
!6396 = !DILocation(line: 1523, column: 48, scope: !5995)
!6397 = !DILocation(line: 1523, column: 25, scope: !5996)
!6398 = !DILocation(line: 1524, column: 56, scope: !5994)
!6399 = !DILocation(line: 1524, column: 66, scope: !5994)
!6400 = !DILocation(line: 1524, column: 60, scope: !5994)
!6401 = !DILocation(line: 1524, column: 46, scope: !5994)
!6402 = !DILocation(line: 414, column: 12, scope: !5989, inlinedAt: !5993)
!6403 = !DILocation(line: 414, column: 25, scope: !6404, inlinedAt: !5993)
!6404 = !DILexicalBlockFile(scope: !5989, file: !1736, discriminator: 1)
!6405 = !DILocation(line: 414, column: 28, scope: !6404, inlinedAt: !5993)
!6406 = !DILocation(line: 414, column: 16, scope: !6404, inlinedAt: !5993)
!6407 = !DILocation(line: 414, column: 12, scope: !6404, inlinedAt: !5993)
!6408 = !DILocation(line: 414, column: 12, scope: !6409, inlinedAt: !5993)
!6409 = !DILexicalBlockFile(scope: !5989, file: !1736, discriminator: 2)
!6410 = !DILocation(line: 414, column: 12, scope: !6411, inlinedAt: !5993)
!6411 = !DILexicalBlockFile(scope: !5989, file: !1736, discriminator: 3)
!6412 = !DILocation(line: 1524, column: 41, scope: !5994)
!6413 = !DILocation(line: 1524, column: 25, scope: !5994)
!6414 = !DILocation(line: 1524, column: 38, scope: !5994)
!6415 = !DILocation(line: 1524, column: 44, scope: !5994)
!6416 = !DILocation(line: 1525, column: 21, scope: !5994)
!6417 = !DILocation(line: 1526, column: 17, scope: !5996)
!6418 = !DILocation(line: 1522, column: 47, scope: !6419)
!6419 = !DILexicalBlockFile(scope: !5997, file: !888, discriminator: 2)
!6420 = !DILocation(line: 1522, column: 17, scope: !6419)
!6421 = distinct !{!6421, !6422}
!6422 = !DILocation(line: 1522, column: 17, scope: !5999)
!6423 = !DILocation(line: 1527, column: 13, scope: !5999)
!6424 = !DILocation(line: 1528, column: 24, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6000, file: !888, line: 1527, column: 20)
!6426 = !DILocation(line: 1529, column: 24, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6425, file: !888, line: 1529, column: 17)
!6428 = !DILocation(line: 1529, column: 22, scope: !6427)
!6429 = !DILocation(line: 1529, column: 29, scope: !6430)
!6430 = !DILexicalBlockFile(scope: !6431, file: !888, discriminator: 1)
!6431 = distinct !DILexicalBlock(scope: !6427, file: !888, line: 1529, column: 17)
!6432 = !DILocation(line: 1529, column: 33, scope: !6430)
!6433 = !DILocation(line: 1529, column: 31, scope: !6430)
!6434 = !DILocation(line: 1529, column: 17, scope: !6430)
!6435 = !DILocation(line: 1530, column: 45, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !888, line: 1530, column: 25)
!6437 = distinct !DILexicalBlock(scope: !6431, file: !888, line: 1529, column: 52)
!6438 = !DILocation(line: 1530, column: 25, scope: !6436)
!6439 = !DILocation(line: 1530, column: 42, scope: !6436)
!6440 = !DILocation(line: 1530, column: 30, scope: !6436)
!6441 = !DILocation(line: 1530, column: 25, scope: !6437)
!6442 = !DILocation(line: 1531, column: 47, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6436, file: !888, line: 1530, column: 49)
!6444 = !DILocation(line: 1531, column: 41, scope: !6443)
!6445 = !DILocation(line: 1531, column: 50, scope: !6443)
!6446 = !DILocation(line: 1531, column: 32, scope: !6443)
!6447 = !DILocation(line: 1532, column: 35, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6443, file: !888, line: 1532, column: 29)
!6449 = !DILocation(line: 1532, column: 29, scope: !6448)
!6450 = !DILocation(line: 1532, column: 38, scope: !6448)
!6451 = !DILocation(line: 1532, column: 29, scope: !6443)
!6452 = !DILocation(line: 1533, column: 29, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6448, file: !888, line: 1532, column: 43)
!6454 = !DILocation(line: 1534, column: 25, scope: !6453)
!6455 = !DILocation(line: 1535, column: 21, scope: !6443)
!6456 = !DILocation(line: 1536, column: 17, scope: !6437)
!6457 = !DILocation(line: 1529, column: 47, scope: !6458)
!6458 = !DILexicalBlockFile(scope: !6431, file: !888, discriminator: 2)
!6459 = !DILocation(line: 1529, column: 17, scope: !6458)
!6460 = distinct !{!6460, !6461}
!6461 = !DILocation(line: 1529, column: 17, scope: !6425)
!6462 = !DILocation(line: 1538, column: 47, scope: !6425)
!6463 = !DILocation(line: 1538, column: 52, scope: !6425)
!6464 = !DILocation(line: 1538, column: 57, scope: !6425)
!6465 = !DILocation(line: 1538, column: 61, scope: !6425)
!6466 = !DILocation(line: 1538, column: 69, scope: !6425)
!6467 = !DILocation(line: 1538, column: 26, scope: !6425)
!6468 = !DILocation(line: 1538, column: 24, scope: !6425)
!6469 = !DILocation(line: 1539, column: 20, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6425, file: !888, line: 1539, column: 20)
!6471 = !DILocation(line: 1539, column: 30, scope: !6470)
!6472 = !DILocation(line: 1539, column: 27, scope: !6470)
!6473 = !DILocation(line: 1539, column: 20, scope: !6425)
!6474 = !DILocation(line: 1540, column: 28, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6470, file: !888, line: 1539, column: 38)
!6476 = !DILocation(line: 1540, column: 33, scope: !6475)
!6477 = !DILocation(line: 1540, column: 102, scope: !6475)
!6478 = !DILocation(line: 1540, column: 110, scope: !6475)
!6479 = !DILocation(line: 1540, column: 21, scope: !6475)
!6480 = !DILocation(line: 1541, column: 21, scope: !6475)
!6481 = !DILocation(line: 1544, column: 19, scope: !6425)
!6482 = !DILocation(line: 1545, column: 24, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6425, file: !888, line: 1545, column: 17)
!6484 = !DILocation(line: 1545, column: 22, scope: !6483)
!6485 = !DILocation(line: 1545, column: 29, scope: !6486)
!6486 = !DILexicalBlockFile(scope: !6487, file: !888, discriminator: 1)
!6487 = distinct !DILexicalBlock(scope: !6483, file: !888, line: 1545, column: 17)
!6488 = !DILocation(line: 1545, column: 33, scope: !6486)
!6489 = !DILocation(line: 1545, column: 31, scope: !6486)
!6490 = !DILocation(line: 1545, column: 17, scope: !6486)
!6491 = !DILocation(line: 1546, column: 45, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !888, line: 1546, column: 25)
!6493 = distinct !DILexicalBlock(scope: !6487, file: !888, line: 1545, column: 52)
!6494 = !DILocation(line: 1546, column: 25, scope: !6492)
!6495 = !DILocation(line: 1546, column: 42, scope: !6492)
!6496 = !DILocation(line: 1546, column: 30, scope: !6492)
!6497 = !DILocation(line: 1546, column: 25, scope: !6493)
!6498 = !DILocation(line: 1547, column: 35, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6500, file: !888, line: 1547, column: 29)
!6500 = distinct !DILexicalBlock(scope: !6492, file: !888, line: 1546, column: 49)
!6501 = !DILocation(line: 1547, column: 29, scope: !6499)
!6502 = !DILocation(line: 1547, column: 38, scope: !6499)
!6503 = !DILocation(line: 1547, column: 29, scope: !6500)
!6504 = !DILocation(line: 1548, column: 71, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6499, file: !888, line: 1547, column: 43)
!6506 = !DILocation(line: 1548, column: 65, scope: !6505)
!6507 = !DILocation(line: 1548, column: 74, scope: !6505)
!6508 = !DILocation(line: 1548, column: 79, scope: !6505)
!6509 = !DILocation(line: 1548, column: 47, scope: !6505)
!6510 = !DILocation(line: 1548, column: 45, scope: !6505)
!6511 = !DILocation(line: 1548, column: 43, scope: !6505)
!6512 = !DILocation(line: 1549, column: 25, scope: !6505)
!6513 = !DILocation(line: 1550, column: 51, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6499, file: !888, line: 1549, column: 32)
!6515 = !DILocation(line: 1550, column: 45, scope: !6514)
!6516 = !DILocation(line: 1550, column: 43, scope: !6514)
!6517 = !DILocation(line: 1552, column: 29, scope: !6500)
!6518 = !DILocation(line: 1553, column: 32, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6500, file: !888, line: 1553, column: 25)
!6520 = !DILocation(line: 1553, column: 30, scope: !6519)
!6521 = !DILocation(line: 1553, column: 37, scope: !6522)
!6522 = !DILexicalBlockFile(scope: !6523, file: !888, discriminator: 1)
!6523 = distinct !DILexicalBlock(scope: !6519, file: !888, line: 1553, column: 25)
!6524 = !DILocation(line: 1553, column: 41, scope: !6522)
!6525 = !DILocation(line: 1553, column: 54, scope: !6522)
!6526 = !DILocation(line: 1553, column: 39, scope: !6522)
!6527 = !DILocation(line: 1553, column: 25, scope: !6522)
!6528 = !DILocation(line: 1554, column: 36, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6523, file: !888, line: 1553, column: 63)
!6530 = !DILocation(line: 1554, column: 40, scope: !6529)
!6531 = !DILocation(line: 1554, column: 56, scope: !6529)
!6532 = !DILocation(line: 1554, column: 48, scope: !6529)
!6533 = !DILocation(line: 1554, column: 46, scope: !6529)
!6534 = !DILocation(line: 1554, column: 33, scope: !6529)
!6535 = !DILocation(line: 1555, column: 25, scope: !6529)
!6536 = !DILocation(line: 1553, column: 58, scope: !6537)
!6537 = !DILexicalBlockFile(scope: !6523, file: !888, discriminator: 2)
!6538 = !DILocation(line: 1553, column: 25, scope: !6537)
!6539 = distinct !{!6539, !6540}
!6540 = !DILocation(line: 1553, column: 25, scope: !6500)
!6541 = !DILocation(line: 1556, column: 34, scope: !6500)
!6542 = !DILocation(line: 1556, column: 56, scope: !6500)
!6543 = !DILocation(line: 1556, column: 50, scope: !6500)
!6544 = !DILocation(line: 1556, column: 48, scope: !6500)
!6545 = !DILocation(line: 1556, column: 29, scope: !6500)
!6546 = !DILocation(line: 1557, column: 46, scope: !6500)
!6547 = !DILocation(line: 1557, column: 41, scope: !6500)
!6548 = !DILocation(line: 1557, column: 25, scope: !6500)
!6549 = !DILocation(line: 1557, column: 38, scope: !6500)
!6550 = !DILocation(line: 1557, column: 44, scope: !6500)
!6551 = !DILocation(line: 1558, column: 21, scope: !6500)
!6552 = !DILocation(line: 1559, column: 17, scope: !6493)
!6553 = !DILocation(line: 1545, column: 47, scope: !6554)
!6554 = !DILexicalBlockFile(scope: !6487, file: !888, discriminator: 2)
!6555 = !DILocation(line: 1545, column: 17, scope: !6554)
!6556 = distinct !{!6556, !6557}
!6557 = !DILocation(line: 1545, column: 17, scope: !6425)
!6558 = !DILocation(line: 1561, column: 9, scope: !6001)
!6559 = !DILocation(line: 1563, column: 16, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6003, file: !888, line: 1563, column: 9)
!6561 = !DILocation(line: 1563, column: 14, scope: !6560)
!6562 = !DILocation(line: 1563, column: 21, scope: !6563)
!6563 = !DILexicalBlockFile(scope: !6564, file: !888, discriminator: 1)
!6564 = distinct !DILexicalBlock(scope: !6560, file: !888, line: 1563, column: 9)
!6565 = !DILocation(line: 1563, column: 25, scope: !6563)
!6566 = !DILocation(line: 1563, column: 23, scope: !6563)
!6567 = !DILocation(line: 1563, column: 9, scope: !6563)
!6568 = !DILocalVariable(name: "pcm_sf", scope: !6569, file: !888, line: 1564, type: !1680)
!6569 = distinct !DILexicalBlock(scope: !6564, file: !888, line: 1563, column: 44)
!6570 = !DILocation(line: 1564, column: 31, scope: !6569)
!6571 = !DILocation(line: 1564, column: 78, scope: !6569)
!6572 = !DILocation(line: 1564, column: 58, scope: !6569)
!6573 = !DILocation(line: 1564, column: 75, scope: !6569)
!6574 = !DILocation(line: 1564, column: 63, scope: !6569)
!6575 = !DILocation(line: 1564, column: 40, scope: !6569)
!6576 = !DILocation(line: 1565, column: 22, scope: !6569)
!6577 = !DILocation(line: 1565, column: 22, scope: !6578)
!6578 = !DILexicalBlockFile(scope: !6569, file: !888, discriminator: 1)
!6579 = !DILocation(line: 1567, column: 37, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6569, file: !888, line: 1567, column: 17)
!6581 = !DILocation(line: 1567, column: 17, scope: !6580)
!6582 = !DILocation(line: 1567, column: 34, scope: !6580)
!6583 = !DILocation(line: 1567, column: 22, scope: !6580)
!6584 = !DILocation(line: 1567, column: 40, scope: !6580)
!6585 = !DILocation(line: 1567, column: 17, scope: !6569)
!6586 = !DILocation(line: 1568, column: 44, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6588, file: !888, line: 1568, column: 21)
!6588 = distinct !DILexicalBlock(scope: !6580, file: !888, line: 1567, column: 46)
!6589 = !DILocation(line: 1568, column: 40, scope: !6587)
!6590 = !DILocation(line: 1568, column: 22, scope: !6587)
!6591 = !DILocation(line: 1568, column: 21, scope: !6588)
!6592 = !DILocation(line: 1569, column: 43, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6587, file: !888, line: 1568, column: 58)
!6594 = !DILocation(line: 1569, column: 39, scope: !6593)
!6595 = !DILocation(line: 1569, column: 30, scope: !6593)
!6596 = !DILocation(line: 1569, column: 30, scope: !6597)
!6597 = !DILexicalBlockFile(scope: !6593, file: !888, discriminator: 1)
!6598 = !DILocation(line: 1570, column: 17, scope: !6593)
!6599 = !DILocation(line: 1572, column: 31, scope: !6588)
!6600 = !DILocation(line: 1572, column: 22, scope: !6588)
!6601 = !DILocation(line: 1573, column: 28, scope: !6588)
!6602 = !DILocation(line: 1573, column: 19, scope: !6588)
!6603 = !DILocation(line: 1574, column: 36, scope: !6588)
!6604 = !DILocation(line: 1574, column: 41, scope: !6588)
!6605 = !DILocation(line: 1574, column: 71, scope: !6588)
!6606 = !DILocation(line: 1574, column: 55, scope: !6588)
!6607 = !DILocation(line: 1574, column: 68, scope: !6588)
!6608 = !DILocation(line: 1574, column: 53, scope: !6588)
!6609 = !DILocation(line: 1574, column: 28, scope: !6588)
!6610 = !DILocation(line: 1574, column: 26, scope: !6588)
!6611 = !DILocation(line: 1576, column: 17, scope: !6588)
!6612 = !DILocation(line: 1576, column: 23, scope: !6613)
!6613 = !DILexicalBlockFile(scope: !6588, file: !888, discriminator: 1)
!6614 = !DILocation(line: 1576, column: 32, scope: !6613)
!6615 = !DILocation(line: 1576, column: 17, scope: !6613)
!6616 = !DILocation(line: 1577, column: 22, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6588, file: !888, line: 1576, column: 46)
!6618 = !DILocation(line: 1578, column: 30, scope: !6617)
!6619 = !DILocation(line: 1576, column: 17, scope: !6620)
!6620 = !DILexicalBlockFile(scope: !6588, file: !888, discriminator: 2)
!6621 = distinct !{!6621, !6611}
!6622 = !DILocation(line: 1581, column: 21, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6588, file: !888, line: 1581, column: 21)
!6624 = !DILocation(line: 1581, column: 21, scope: !6588)
!6625 = !DILocation(line: 1581, column: 49, scope: !6626)
!6626 = !DILexicalBlockFile(scope: !6623, file: !888, discriminator: 1)
!6627 = !DILocation(line: 1581, column: 37, scope: !6626)
!6628 = !DILocation(line: 1581, column: 52, scope: !6626)
!6629 = !DILocation(line: 1581, column: 33, scope: !6626)
!6630 = !DILocation(line: 1581, column: 31, scope: !6626)
!6631 = !DILocation(line: 1582, column: 26, scope: !6588)
!6632 = !DILocation(line: 1584, column: 27, scope: !6588)
!6633 = !DILocation(line: 1584, column: 32, scope: !6588)
!6634 = !DILocation(line: 1584, column: 43, scope: !6588)
!6635 = !DILocation(line: 1584, column: 45, scope: !6588)
!6636 = !DILocation(line: 1584, column: 52, scope: !6588)
!6637 = !DILocation(line: 1584, column: 39, scope: !6588)
!6638 = !DILocation(line: 1584, column: 62, scope: !6588)
!6639 = !DILocation(line: 1584, column: 59, scope: !6588)
!6640 = !DILocation(line: 1584, column: 24, scope: !6588)
!6641 = !DILocation(line: 1585, column: 42, scope: !6588)
!6642 = !DILocation(line: 1585, column: 37, scope: !6588)
!6643 = !DILocation(line: 1585, column: 17, scope: !6588)
!6644 = !DILocation(line: 1585, column: 34, scope: !6588)
!6645 = !DILocation(line: 1585, column: 22, scope: !6588)
!6646 = !DILocation(line: 1585, column: 40, scope: !6588)
!6647 = !DILocation(line: 1586, column: 13, scope: !6588)
!6648 = !DILocation(line: 1587, column: 58, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6580, file: !888, line: 1586, column: 20)
!6650 = !DILocation(line: 1587, column: 42, scope: !6649)
!6651 = !DILocation(line: 1587, column: 55, scope: !6649)
!6652 = !DILocation(line: 1587, column: 61, scope: !6649)
!6653 = !DILocation(line: 1587, column: 37, scope: !6649)
!6654 = !DILocation(line: 1587, column: 17, scope: !6649)
!6655 = !DILocation(line: 1587, column: 34, scope: !6649)
!6656 = !DILocation(line: 1587, column: 22, scope: !6649)
!6657 = !DILocation(line: 1587, column: 40, scope: !6649)
!6658 = !DILocation(line: 1589, column: 9, scope: !6569)
!6659 = !DILocation(line: 1563, column: 39, scope: !6660)
!6660 = !DILexicalBlockFile(scope: !6564, file: !888, discriminator: 2)
!6661 = !DILocation(line: 1563, column: 9, scope: !6660)
!6662 = distinct !{!6662, !6663}
!6663 = !DILocation(line: 1563, column: 9, scope: !6003)
!6664 = !DILocation(line: 1590, column: 24, scope: !6003)
!6665 = !DILocation(line: 1590, column: 9, scope: !6003)
!6666 = !DILocation(line: 1591, column: 5, scope: !6003)
!6667 = !DILocation(line: 1455, column: 38, scope: !6668)
!6668 = !DILexicalBlockFile(scope: !6004, file: !888, discriminator: 2)
!6669 = !DILocation(line: 1455, column: 5, scope: !6668)
!6670 = distinct !{!6670, !6671}
!6671 = !DILocation(line: 1455, column: 5, scope: !5987)
!6672 = !DILocation(line: 1592, column: 5, scope: !5987)
!6673 = !DILocation(line: 1593, column: 1, scope: !5987)
!6674 = distinct !DISubprogram(name: "parse_bs_info", scope: !888, file: !888, line: 464, type: !6675, isLocal: true, isDefinition: true, scopeLine: 467, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!6675 = !DISubroutineType(types: !6676)
!6676 = !{null, !1754, !907, !907, !6677, !1778}
!6677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64, align: 64)
!6678 = !DILocalVariable(name: "bs_info", arg: 1, scope: !6674, file: !888, line: 464, type: !1754)
!6679 = !DILocation(line: 464, column: 42, scope: !6674)
!6680 = !DILocalVariable(name: "n", arg: 2, scope: !6674, file: !888, line: 464, type: !907)
!6681 = !DILocation(line: 464, column: 64, scope: !6674)
!6682 = !DILocalVariable(name: "div", arg: 3, scope: !6674, file: !888, line: 465, type: !907)
!6683 = !DILocation(line: 465, column: 40, scope: !6674)
!6684 = !DILocalVariable(name: "div_blocks", arg: 4, scope: !6674, file: !888, line: 465, type: !6677)
!6685 = !DILocation(line: 465, column: 60, scope: !6674)
!6686 = !DILocalVariable(name: "num_blocks", arg: 5, scope: !6674, file: !888, line: 466, type: !1778)
!6687 = !DILocation(line: 466, column: 41, scope: !6674)
!6688 = !DILocation(line: 468, column: 9, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6674, file: !888, line: 468, column: 9)
!6690 = !DILocation(line: 468, column: 11, scope: !6689)
!6691 = !DILocation(line: 468, column: 16, scope: !6689)
!6692 = !DILocation(line: 468, column: 21, scope: !6693)
!6693 = !DILexicalBlockFile(scope: !6689, file: !888, discriminator: 1)
!6694 = !DILocation(line: 468, column: 32, scope: !6693)
!6695 = !DILocation(line: 468, column: 29, scope: !6693)
!6696 = !DILocation(line: 468, column: 35, scope: !6693)
!6697 = !DILocation(line: 468, column: 9, scope: !6693)
!6698 = !DILocation(line: 471, column: 11, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6689, file: !888, line: 468, column: 50)
!6700 = !DILocation(line: 472, column: 13, scope: !6699)
!6701 = !DILocation(line: 473, column: 23, scope: !6699)
!6702 = !DILocation(line: 473, column: 32, scope: !6699)
!6703 = !DILocation(line: 473, column: 34, scope: !6699)
!6704 = !DILocation(line: 473, column: 39, scope: !6699)
!6705 = !DILocation(line: 473, column: 44, scope: !6699)
!6706 = !DILocation(line: 473, column: 56, scope: !6699)
!6707 = !DILocation(line: 473, column: 9, scope: !6699)
!6708 = !DILocation(line: 474, column: 23, scope: !6699)
!6709 = !DILocation(line: 474, column: 32, scope: !6699)
!6710 = !DILocation(line: 474, column: 34, scope: !6699)
!6711 = !DILocation(line: 474, column: 39, scope: !6699)
!6712 = !DILocation(line: 474, column: 44, scope: !6699)
!6713 = !DILocation(line: 474, column: 56, scope: !6699)
!6714 = !DILocation(line: 474, column: 9, scope: !6699)
!6715 = !DILocation(line: 475, column: 5, scope: !6699)
!6716 = !DILocation(line: 478, column: 24, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6689, file: !888, line: 475, column: 12)
!6718 = !DILocation(line: 478, column: 11, scope: !6717)
!6719 = !DILocation(line: 478, column: 10, scope: !6717)
!6720 = !DILocation(line: 478, column: 22, scope: !6717)
!6721 = !DILocation(line: 479, column: 11, scope: !6717)
!6722 = !DILocation(line: 479, column: 22, scope: !6717)
!6723 = !DILocation(line: 480, column: 11, scope: !6717)
!6724 = !DILocation(line: 480, column: 22, scope: !6717)
!6725 = !DILocation(line: 482, column: 1, scope: !6674)
!6726 = distinct !DISubprogram(name: "read_decode_block", scope: !888, file: !888, line: 1044, type: !5190, isLocal: true, isDefinition: true, scopeLine: 1045, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!6727 = !DILocalVariable(name: "ctx", arg: 1, scope: !6726, file: !888, line: 1044, type: !1703)
!6728 = !DILocation(line: 1044, column: 45, scope: !6726)
!6729 = !DILocalVariable(name: "bd", arg: 2, scope: !6726, file: !888, line: 1044, type: !5192)
!6730 = !DILocation(line: 1044, column: 64, scope: !6726)
!6731 = !DILocalVariable(name: "ret", scope: !6726, file: !888, line: 1046, type: !906)
!6732 = !DILocation(line: 1046, column: 9, scope: !6726)
!6733 = !DILocation(line: 1048, column: 27, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6726, file: !888, line: 1048, column: 9)
!6735 = !DILocation(line: 1048, column: 32, scope: !6734)
!6736 = !DILocation(line: 1048, column: 16, scope: !6734)
!6737 = !DILocation(line: 1048, column: 14, scope: !6734)
!6738 = !DILocation(line: 1048, column: 37, scope: !6734)
!6739 = !DILocation(line: 1048, column: 9, scope: !6726)
!6740 = !DILocation(line: 1049, column: 16, scope: !6734)
!6741 = !DILocation(line: 1049, column: 9, scope: !6734)
!6742 = !DILocation(line: 1051, column: 25, scope: !6726)
!6743 = !DILocation(line: 1051, column: 30, scope: !6726)
!6744 = !DILocation(line: 1051, column: 12, scope: !6726)
!6745 = !DILocation(line: 1051, column: 5, scope: !6726)
!6746 = !DILocation(line: 1052, column: 1, scope: !6726)
!6747 = distinct !DISubprogram(name: "zero_remaining", scope: !888, file: !888, line: 1058, type: !6748, isLocal: true, isDefinition: true, scopeLine: 1060, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!6748 = !DISubroutineType(types: !6749)
!6749 = !{null, !907, !907, !4748, !925}
!6750 = !DILocalVariable(name: "b", arg: 1, scope: !6747, file: !888, line: 1058, type: !907)
!6751 = !DILocation(line: 1058, column: 41, scope: !6747)
!6752 = !DILocalVariable(name: "b_max", arg: 2, scope: !6747, file: !888, line: 1058, type: !907)
!6753 = !DILocation(line: 1058, column: 57, scope: !6747)
!6754 = !DILocalVariable(name: "div_blocks", arg: 3, scope: !6747, file: !888, line: 1059, type: !4748)
!6755 = !DILocation(line: 1059, column: 48, scope: !6747)
!6756 = !DILocalVariable(name: "buf", arg: 4, scope: !6747, file: !888, line: 1059, type: !925)
!6757 = !DILocation(line: 1059, column: 69, scope: !6747)
!6758 = !DILocalVariable(name: "count", scope: !6747, file: !888, line: 1061, type: !907)
!6759 = !DILocation(line: 1061, column: 18, scope: !6747)
!6760 = !DILocation(line: 1063, column: 5, scope: !6747)
!6761 = !DILocation(line: 1063, column: 12, scope: !6762)
!6762 = !DILexicalBlockFile(scope: !6747, file: !888, discriminator: 1)
!6763 = !DILocation(line: 1063, column: 16, scope: !6762)
!6764 = !DILocation(line: 1063, column: 14, scope: !6762)
!6765 = !DILocation(line: 1063, column: 5, scope: !6762)
!6766 = !DILocation(line: 1064, column: 30, scope: !6747)
!6767 = !DILocation(line: 1064, column: 18, scope: !6747)
!6768 = !DILocation(line: 1064, column: 15, scope: !6747)
!6769 = !DILocation(line: 1063, column: 5, scope: !6770)
!6770 = !DILexicalBlockFile(scope: !6747, file: !888, discriminator: 2)
!6771 = distinct !{!6771, !6760}
!6772 = !DILocation(line: 1066, column: 9, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6747, file: !888, line: 1066, column: 9)
!6774 = !DILocation(line: 1066, column: 9, scope: !6747)
!6775 = !DILocation(line: 1067, column: 16, scope: !6773)
!6776 = !DILocation(line: 1067, column: 9, scope: !6773)
!6777 = !DILocation(line: 1067, column: 39, scope: !6773)
!6778 = !DILocation(line: 1067, column: 37, scope: !6773)
!6779 = !DILocation(line: 1068, column: 1, scope: !6747)
!6780 = distinct !DISubprogram(name: "read_var_block_data", scope: !888, file: !888, line: 622, type: !5190, isLocal: true, isDefinition: true, scopeLine: 623, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!6781 = !DILocation(line: 127, column: 87, scope: !3693, inlinedAt: !6782)
!6782 = distinct !DILocation(line: 806, column: 26, scope: !6783)
!6783 = !DILexicalBlockFile(scope: !6784, file: !888, discriminator: 1)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !888, line: 803, column: 22)
!6785 = distinct !DILexicalBlock(scope: !6780, file: !888, line: 803, column: 9)
!6786 = !DILocation(line: 127, column: 94, scope: !3693, inlinedAt: !6782)
!6787 = !DILocation(line: 127, column: 104, scope: !3693, inlinedAt: !6782)
!6788 = !DILocation(line: 332, column: 92, scope: !3255, inlinedAt: !6789)
!6789 = distinct !DILocation(line: 806, column: 37, scope: !6784)
!6790 = !DILocation(line: 332, column: 92, scope: !3255, inlinedAt: !6791)
!6791 = distinct !DILocation(line: 696, column: 36, scope: !6792)
!6792 = !DILexicalBlockFile(scope: !6793, file: !888, discriminator: 1)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !888, line: 695, column: 53)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !888, line: 695, column: 13)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !888, line: 694, column: 25)
!6796 = distinct !DILexicalBlock(scope: !6780, file: !888, line: 694, column: 9)
!6797 = !DILocation(line: 127, column: 87, scope: !3693, inlinedAt: !6798)
!6798 = distinct !DILocation(line: 696, column: 51, scope: !6793)
!6799 = !DILocation(line: 127, column: 94, scope: !3693, inlinedAt: !6798)
!6800 = !DILocation(line: 127, column: 104, scope: !3693, inlinedAt: !6798)
!6801 = !DILocalVariable(name: "ctx", arg: 1, scope: !6780, file: !888, line: 622, type: !1703)
!6802 = !DILocation(line: 622, column: 47, scope: !6780)
!6803 = !DILocalVariable(name: "bd", arg: 2, scope: !6780, file: !888, line: 622, type: !5192)
!6804 = !DILocation(line: 622, column: 66, scope: !6780)
!6805 = !DILocalVariable(name: "sconf", scope: !6780, file: !888, line: 624, type: !1847)
!6806 = !DILocation(line: 624, column: 24, scope: !6780)
!6807 = !DILocation(line: 624, column: 33, scope: !6780)
!6808 = !DILocation(line: 624, column: 38, scope: !6780)
!6809 = !DILocalVariable(name: "avctx", scope: !6780, file: !888, line: 625, type: !1022)
!6810 = !DILocation(line: 625, column: 21, scope: !6780)
!6811 = !DILocation(line: 625, column: 29, scope: !6780)
!6812 = !DILocation(line: 625, column: 34, scope: !6780)
!6813 = !DILocalVariable(name: "gb", scope: !6780, file: !888, line: 626, type: !3666)
!6814 = !DILocation(line: 626, column: 20, scope: !6780)
!6815 = !DILocation(line: 626, column: 26, scope: !6780)
!6816 = !DILocation(line: 626, column: 31, scope: !6780)
!6817 = !DILocalVariable(name: "k", scope: !6780, file: !888, line: 627, type: !907)
!6818 = !DILocation(line: 627, column: 18, scope: !6780)
!6819 = !DILocalVariable(name: "s", scope: !6780, file: !888, line: 628, type: !6820)
!6820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 256, align: 32, elements: !1050)
!6821 = !DILocation(line: 628, column: 18, scope: !6780)
!6822 = !DILocalVariable(name: "sx", scope: !6780, file: !888, line: 629, type: !6820)
!6823 = !DILocation(line: 629, column: 18, scope: !6780)
!6824 = !DILocalVariable(name: "sub_blocks", scope: !6780, file: !888, line: 630, type: !907)
!6825 = !DILocation(line: 630, column: 18, scope: !6780)
!6826 = !DILocalVariable(name: "log2_sub_blocks", scope: !6780, file: !888, line: 630, type: !907)
!6827 = !DILocation(line: 630, column: 30, scope: !6780)
!6828 = !DILocalVariable(name: "sb_length", scope: !6780, file: !888, line: 630, type: !907)
!6829 = !DILocation(line: 630, column: 47, scope: !6780)
!6830 = !DILocalVariable(name: "start", scope: !6780, file: !888, line: 631, type: !907)
!6831 = !DILocation(line: 631, column: 18, scope: !6780)
!6832 = !DILocalVariable(name: "opt_order", scope: !6780, file: !888, line: 632, type: !907)
!6833 = !DILocation(line: 632, column: 18, scope: !6780)
!6834 = !DILocalVariable(name: "sb", scope: !6780, file: !888, line: 633, type: !906)
!6835 = !DILocation(line: 633, column: 9, scope: !6780)
!6836 = !DILocalVariable(name: "quant_cof", scope: !6780, file: !888, line: 634, type: !925)
!6837 = !DILocation(line: 634, column: 14, scope: !6780)
!6838 = !DILocation(line: 634, column: 26, scope: !6780)
!6839 = !DILocation(line: 634, column: 30, scope: !6780)
!6840 = !DILocalVariable(name: "current_res", scope: !6780, file: !888, line: 635, type: !925)
!6841 = !DILocation(line: 635, column: 14, scope: !6780)
!6842 = !DILocation(line: 639, column: 6, scope: !6780)
!6843 = !DILocation(line: 639, column: 10, scope: !6780)
!6844 = !DILocation(line: 639, column: 22, scope: !6780)
!6845 = !DILocation(line: 641, column: 6, scope: !6780)
!6846 = !DILocation(line: 641, column: 10, scope: !6780)
!6847 = !DILocation(line: 641, column: 20, scope: !6780)
!6848 = !DILocation(line: 642, column: 31, scope: !6780)
!6849 = !DILocation(line: 642, column: 21, scope: !6780)
!6850 = !DILocation(line: 642, column: 5, scope: !6780)
!6851 = !DILocation(line: 642, column: 9, scope: !6780)
!6852 = !DILocation(line: 642, column: 19, scope: !6780)
!6853 = !DILocation(line: 644, column: 18, scope: !6780)
!6854 = !DILocation(line: 644, column: 22, scope: !6780)
!6855 = !DILocation(line: 644, column: 17, scope: !6780)
!6856 = !DILocation(line: 644, column: 15, scope: !6780)
!6857 = !DILocation(line: 647, column: 10, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6780, file: !888, line: 647, column: 9)
!6859 = !DILocation(line: 647, column: 17, scope: !6858)
!6860 = !DILocation(line: 647, column: 22, scope: !6858)
!6861 = !DILocation(line: 647, column: 26, scope: !6862)
!6862 = !DILexicalBlockFile(scope: !6858, file: !888, discriminator: 1)
!6863 = !DILocation(line: 647, column: 33, scope: !6862)
!6864 = !DILocation(line: 647, column: 9, scope: !6862)
!6865 = !DILocation(line: 648, column: 25, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6858, file: !888, line: 647, column: 42)
!6867 = !DILocation(line: 649, column: 5, scope: !6866)
!6868 = !DILocation(line: 650, column: 13, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !888, line: 650, column: 13)
!6870 = distinct !DILexicalBlock(scope: !6858, file: !888, line: 649, column: 12)
!6871 = !DILocation(line: 650, column: 20, scope: !6869)
!6872 = !DILocation(line: 650, column: 25, scope: !6869)
!6873 = !DILocation(line: 650, column: 28, scope: !6874)
!6874 = !DILexicalBlockFile(scope: !6869, file: !888, discriminator: 1)
!6875 = !DILocation(line: 650, column: 35, scope: !6874)
!6876 = !DILocation(line: 650, column: 13, scope: !6874)
!6877 = !DILocation(line: 651, column: 40, scope: !6869)
!6878 = !DILocation(line: 651, column: 31, scope: !6869)
!6879 = !DILocation(line: 651, column: 29, scope: !6869)
!6880 = !DILocation(line: 651, column: 13, scope: !6869)
!6881 = !DILocation(line: 653, column: 45, scope: !6869)
!6882 = !DILocation(line: 653, column: 35, scope: !6869)
!6883 = !DILocation(line: 653, column: 33, scope: !6869)
!6884 = !DILocation(line: 653, column: 29, scope: !6869)
!6885 = !DILocation(line: 656, column: 23, scope: !6780)
!6886 = !DILocation(line: 656, column: 20, scope: !6780)
!6887 = !DILocation(line: 656, column: 16, scope: !6780)
!6888 = !DILocation(line: 660, column: 9, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6780, file: !888, line: 660, column: 9)
!6890 = !DILocation(line: 660, column: 13, scope: !6889)
!6891 = !DILocation(line: 660, column: 29, scope: !6889)
!6892 = !DILocation(line: 660, column: 40, scope: !6889)
!6893 = !DILocation(line: 660, column: 26, scope: !6889)
!6894 = !DILocation(line: 660, column: 9, scope: !6780)
!6895 = !DILocation(line: 661, column: 16, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6889, file: !888, line: 660, column: 46)
!6897 = !DILocation(line: 661, column: 9, scope: !6896)
!6898 = !DILocation(line: 663, column: 9, scope: !6896)
!6899 = !DILocation(line: 666, column: 17, scope: !6780)
!6900 = !DILocation(line: 666, column: 21, scope: !6780)
!6901 = !DILocation(line: 666, column: 37, scope: !6780)
!6902 = !DILocation(line: 666, column: 34, scope: !6780)
!6903 = !DILocation(line: 666, column: 15, scope: !6780)
!6904 = !DILocation(line: 668, column: 9, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6780, file: !888, line: 668, column: 9)
!6906 = !DILocation(line: 668, column: 16, scope: !6905)
!6907 = !DILocation(line: 668, column: 9, scope: !6780)
!6908 = !DILocation(line: 669, column: 25, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6905, file: !888, line: 668, column: 22)
!6910 = !DILocation(line: 669, column: 34, scope: !6909)
!6911 = !DILocation(line: 669, column: 41, scope: !6909)
!6912 = !DILocation(line: 669, column: 52, scope: !6909)
!6913 = !DILocation(line: 669, column: 31, scope: !6909)
!6914 = !DILocation(line: 669, column: 16, scope: !6909)
!6915 = !DILocation(line: 669, column: 9, scope: !6909)
!6916 = !DILocation(line: 669, column: 14, scope: !6909)
!6917 = !DILocation(line: 670, column: 16, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6909, file: !888, line: 670, column: 9)
!6919 = !DILocation(line: 670, column: 14, scope: !6918)
!6920 = !DILocation(line: 670, column: 21, scope: !6921)
!6921 = !DILexicalBlockFile(scope: !6922, file: !888, discriminator: 1)
!6922 = distinct !DILexicalBlock(scope: !6918, file: !888, line: 670, column: 9)
!6923 = !DILocation(line: 670, column: 25, scope: !6921)
!6924 = !DILocation(line: 670, column: 23, scope: !6921)
!6925 = !DILocation(line: 670, column: 9, scope: !6921)
!6926 = !DILocation(line: 671, column: 22, scope: !6922)
!6927 = !DILocation(line: 671, column: 24, scope: !6922)
!6928 = !DILocation(line: 671, column: 20, scope: !6922)
!6929 = !DILocation(line: 671, column: 43, scope: !6922)
!6930 = !DILocation(line: 671, column: 31, scope: !6922)
!6931 = !DILocation(line: 671, column: 29, scope: !6922)
!6932 = !DILocation(line: 671, column: 15, scope: !6922)
!6933 = !DILocation(line: 671, column: 13, scope: !6922)
!6934 = !DILocation(line: 671, column: 18, scope: !6922)
!6935 = !DILocation(line: 670, column: 38, scope: !6936)
!6936 = !DILexicalBlockFile(scope: !6922, file: !888, discriminator: 2)
!6937 = !DILocation(line: 670, column: 9, scope: !6936)
!6938 = distinct !{!6938, !6939}
!6939 = !DILocation(line: 670, column: 9, scope: !6909)
!6940 = !DILocation(line: 673, column: 16, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6909, file: !888, line: 673, column: 9)
!6942 = !DILocation(line: 673, column: 14, scope: !6941)
!6943 = !DILocation(line: 673, column: 21, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !6945, file: !888, discriminator: 1)
!6945 = distinct !DILexicalBlock(scope: !6941, file: !888, line: 673, column: 9)
!6946 = !DILocation(line: 673, column: 25, scope: !6944)
!6947 = !DILocation(line: 673, column: 23, scope: !6944)
!6948 = !DILocation(line: 673, column: 9, scope: !6944)
!6949 = !DILocation(line: 674, column: 23, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6945, file: !888, line: 673, column: 42)
!6951 = !DILocation(line: 674, column: 21, scope: !6950)
!6952 = !DILocation(line: 674, column: 26, scope: !6950)
!6953 = !DILocation(line: 674, column: 16, scope: !6950)
!6954 = !DILocation(line: 674, column: 13, scope: !6950)
!6955 = !DILocation(line: 674, column: 19, scope: !6950)
!6956 = !DILocation(line: 675, column: 16, scope: !6950)
!6957 = !DILocation(line: 675, column: 13, scope: !6950)
!6958 = !DILocation(line: 675, column: 19, scope: !6950)
!6959 = !DILocation(line: 676, column: 9, scope: !6950)
!6960 = !DILocation(line: 673, column: 38, scope: !6961)
!6961 = !DILexicalBlockFile(scope: !6945, file: !888, discriminator: 2)
!6962 = !DILocation(line: 673, column: 9, scope: !6961)
!6963 = distinct !{!6963, !6964}
!6964 = !DILocation(line: 673, column: 9, scope: !6909)
!6965 = !DILocation(line: 677, column: 5, scope: !6909)
!6966 = !DILocation(line: 678, column: 25, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6905, file: !888, line: 677, column: 12)
!6968 = !DILocation(line: 678, column: 34, scope: !6967)
!6969 = !DILocation(line: 678, column: 41, scope: !6967)
!6970 = !DILocation(line: 678, column: 52, scope: !6967)
!6971 = !DILocation(line: 678, column: 31, scope: !6967)
!6972 = !DILocation(line: 678, column: 16, scope: !6967)
!6973 = !DILocation(line: 678, column: 9, scope: !6967)
!6974 = !DILocation(line: 678, column: 14, scope: !6967)
!6975 = !DILocation(line: 679, column: 16, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6967, file: !888, line: 679, column: 9)
!6977 = !DILocation(line: 679, column: 14, scope: !6976)
!6978 = !DILocation(line: 679, column: 21, scope: !6979)
!6979 = !DILexicalBlockFile(scope: !6980, file: !888, discriminator: 1)
!6980 = distinct !DILexicalBlock(scope: !6976, file: !888, line: 679, column: 9)
!6981 = !DILocation(line: 679, column: 25, scope: !6979)
!6982 = !DILocation(line: 679, column: 23, scope: !6979)
!6983 = !DILocation(line: 679, column: 9, scope: !6979)
!6984 = !DILocation(line: 680, column: 22, scope: !6980)
!6985 = !DILocation(line: 680, column: 24, scope: !6980)
!6986 = !DILocation(line: 680, column: 20, scope: !6980)
!6987 = !DILocation(line: 680, column: 43, scope: !6980)
!6988 = !DILocation(line: 680, column: 31, scope: !6980)
!6989 = !DILocation(line: 680, column: 29, scope: !6980)
!6990 = !DILocation(line: 680, column: 15, scope: !6980)
!6991 = !DILocation(line: 680, column: 13, scope: !6980)
!6992 = !DILocation(line: 680, column: 18, scope: !6980)
!6993 = !DILocation(line: 679, column: 38, scope: !6994)
!6994 = !DILexicalBlockFile(scope: !6980, file: !888, discriminator: 2)
!6995 = !DILocation(line: 679, column: 9, scope: !6994)
!6996 = distinct !{!6996, !6997}
!6997 = !DILocation(line: 679, column: 9, scope: !6967)
!6998 = !DILocation(line: 682, column: 12, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6780, file: !888, line: 682, column: 5)
!7000 = !DILocation(line: 682, column: 10, scope: !6999)
!7001 = !DILocation(line: 682, column: 17, scope: !7002)
!7002 = !DILexicalBlockFile(scope: !7003, file: !888, discriminator: 1)
!7003 = distinct !DILexicalBlock(scope: !6999, file: !888, line: 682, column: 5)
!7004 = !DILocation(line: 682, column: 21, scope: !7002)
!7005 = !DILocation(line: 682, column: 19, scope: !7002)
!7006 = !DILocation(line: 682, column: 5, scope: !7002)
!7007 = !DILocation(line: 683, column: 15, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7003, file: !888, line: 683, column: 13)
!7009 = !DILocation(line: 683, column: 13, scope: !7008)
!7010 = !DILocation(line: 683, column: 18, scope: !7008)
!7011 = !DILocation(line: 683, column: 13, scope: !7003)
!7012 = !DILocation(line: 684, column: 20, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7008, file: !888, line: 683, column: 24)
!7014 = !DILocation(line: 684, column: 13, scope: !7013)
!7015 = !DILocation(line: 685, column: 13, scope: !7013)
!7016 = !DILocation(line: 683, column: 20, scope: !7017)
!7017 = !DILexicalBlockFile(scope: !7008, file: !888, discriminator: 1)
!7018 = !DILocation(line: 682, column: 34, scope: !7019)
!7019 = !DILexicalBlockFile(scope: !7003, file: !888, discriminator: 2)
!7020 = !DILocation(line: 682, column: 5, scope: !7019)
!7021 = distinct !{!7021, !7022}
!7022 = !DILocation(line: 682, column: 5, scope: !6780)
!7023 = !DILocation(line: 688, column: 19, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !6780, file: !888, line: 688, column: 9)
!7025 = !DILocation(line: 688, column: 9, scope: !7024)
!7026 = !DILocation(line: 688, column: 9, scope: !6780)
!7027 = !DILocation(line: 689, column: 36, scope: !7024)
!7028 = !DILocation(line: 689, column: 27, scope: !7024)
!7029 = !DILocation(line: 689, column: 43, scope: !7024)
!7030 = !DILocation(line: 689, column: 10, scope: !7024)
!7031 = !DILocation(line: 689, column: 14, scope: !7024)
!7032 = !DILocation(line: 689, column: 25, scope: !7024)
!7033 = !DILocation(line: 689, column: 9, scope: !7024)
!7034 = !DILocation(line: 691, column: 32, scope: !6780)
!7035 = !DILocation(line: 691, column: 36, scope: !6780)
!7036 = !DILocation(line: 691, column: 46, scope: !6780)
!7037 = !DILocation(line: 691, column: 49, scope: !7038)
!7038 = !DILexicalBlockFile(scope: !6780, file: !888, discriminator: 1)
!7039 = !DILocation(line: 691, column: 53, scope: !7038)
!7040 = !DILocation(line: 691, column: 64, scope: !7038)
!7041 = !DILocation(line: 691, column: 68, scope: !7042)
!7042 = !DILexicalBlockFile(scope: !6780, file: !888, discriminator: 2)
!7043 = !DILocation(line: 691, column: 72, scope: !7042)
!7044 = !DILocation(line: 691, column: 67, scope: !7042)
!7045 = !DILocation(line: 691, column: 64, scope: !7042)
!7046 = !DILocation(line: 691, column: 64, scope: !7047)
!7047 = !DILexicalBlockFile(scope: !6780, file: !888, discriminator: 3)
!7048 = !DILocation(line: 691, column: 6, scope: !7047)
!7049 = !DILocation(line: 691, column: 10, scope: !7047)
!7050 = !DILocation(line: 691, column: 29, scope: !7047)
!7051 = !DILocation(line: 694, column: 10, scope: !6796)
!7052 = !DILocation(line: 694, column: 17, scope: !6796)
!7053 = !DILocation(line: 694, column: 9, scope: !6780)
!7054 = !DILocation(line: 695, column: 13, scope: !6794)
!7055 = !DILocation(line: 695, column: 20, scope: !6794)
!7056 = !DILocation(line: 695, column: 32, scope: !6794)
!7057 = !DILocation(line: 695, column: 35, scope: !7058)
!7058 = !DILexicalBlockFile(scope: !6794, file: !888, discriminator: 1)
!7059 = !DILocation(line: 695, column: 42, scope: !7058)
!7060 = !DILocation(line: 695, column: 13, scope: !7058)
!7061 = !DILocalVariable(name: "opt_order_length", scope: !6793, file: !888, line: 696, type: !906)
!7062 = !DILocation(line: 696, column: 17, scope: !6793)
!7063 = !DILocation(line: 696, column: 62, scope: !6793)
!7064 = !DILocation(line: 696, column: 66, scope: !6793)
!7065 = !DILocation(line: 696, column: 79, scope: !6793)
!7066 = !DILocation(line: 696, column: 85, scope: !6793)
!7067 = !DILocation(line: 697, column: 52, scope: !6793)
!7068 = !DILocation(line: 697, column: 59, scope: !6793)
!7069 = !DILocation(line: 697, column: 69, scope: !6793)
!7070 = !DILocation(line: 696, column: 51, scope: !6793)
!7071 = !DILocation(line: 132, column: 9, scope: !3717, inlinedAt: !6798)
!7072 = !DILocation(line: 132, column: 13, scope: !3717, inlinedAt: !6798)
!7073 = !DILocation(line: 132, column: 11, scope: !3717, inlinedAt: !6798)
!7074 = !DILocation(line: 132, column: 9, scope: !3693, inlinedAt: !6798)
!7075 = !DILocation(line: 132, column: 26, scope: !3722, inlinedAt: !6798)
!7076 = !DILocation(line: 132, column: 19, scope: !3722, inlinedAt: !6798)
!7077 = !DILocation(line: 133, column: 14, scope: !3725, inlinedAt: !6798)
!7078 = !DILocation(line: 133, column: 18, scope: !3725, inlinedAt: !6798)
!7079 = !DILocation(line: 133, column: 16, scope: !3725, inlinedAt: !6798)
!7080 = !DILocation(line: 133, column: 14, scope: !3717, inlinedAt: !6798)
!7081 = !DILocation(line: 133, column: 31, scope: !3730, inlinedAt: !6798)
!7082 = !DILocation(line: 133, column: 24, scope: !3730, inlinedAt: !6798)
!7083 = !DILocation(line: 134, column: 17, scope: !3725, inlinedAt: !6798)
!7084 = !DILocation(line: 134, column: 10, scope: !3725, inlinedAt: !6798)
!7085 = !DILocation(line: 135, column: 1, scope: !3693, inlinedAt: !6798)
!7086 = !DILocation(line: 696, column: 36, scope: !6792)
!7087 = !DILocation(line: 334, column: 34, scope: !3255, inlinedAt: !6791)
!7088 = !DILocation(line: 334, column: 36, scope: !3255, inlinedAt: !6791)
!7089 = !DILocation(line: 334, column: 41, scope: !3255, inlinedAt: !6791)
!7090 = !DILocation(line: 334, column: 46, scope: !3255, inlinedAt: !6791)
!7091 = !DILocation(line: 334, column: 18, scope: !3255, inlinedAt: !6791)
!7092 = !DILocation(line: 334, column: 16, scope: !3255, inlinedAt: !6791)
!7093 = !DILocation(line: 698, column: 39, scope: !6793)
!7094 = !DILocation(line: 698, column: 43, scope: !6793)
!7095 = !DILocation(line: 698, column: 30, scope: !6793)
!7096 = !DILocation(line: 698, column: 14, scope: !6793)
!7097 = !DILocation(line: 698, column: 18, scope: !6793)
!7098 = !DILocation(line: 698, column: 28, scope: !6793)
!7099 = !DILocation(line: 699, column: 18, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !6793, file: !888, line: 699, column: 17)
!7101 = !DILocation(line: 699, column: 22, scope: !7100)
!7102 = !DILocation(line: 699, column: 17, scope: !7100)
!7103 = !DILocation(line: 699, column: 34, scope: !7100)
!7104 = !DILocation(line: 699, column: 41, scope: !7100)
!7105 = !DILocation(line: 699, column: 32, scope: !7100)
!7106 = !DILocation(line: 699, column: 17, scope: !6793)
!7107 = !DILocation(line: 700, column: 34, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7100, file: !888, line: 699, column: 52)
!7109 = !DILocation(line: 700, column: 41, scope: !7108)
!7110 = !DILocation(line: 700, column: 18, scope: !7108)
!7111 = !DILocation(line: 700, column: 22, scope: !7108)
!7112 = !DILocation(line: 700, column: 32, scope: !7108)
!7113 = !DILocation(line: 701, column: 24, scope: !7108)
!7114 = !DILocation(line: 701, column: 17, scope: !7108)
!7115 = !DILocation(line: 702, column: 17, scope: !7108)
!7116 = !DILocation(line: 704, column: 9, scope: !6793)
!7117 = !DILocation(line: 705, column: 30, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !6794, file: !888, line: 704, column: 16)
!7119 = !DILocation(line: 705, column: 37, scope: !7118)
!7120 = !DILocation(line: 705, column: 14, scope: !7118)
!7121 = !DILocation(line: 705, column: 18, scope: !7118)
!7122 = !DILocation(line: 705, column: 28, scope: !7118)
!7123 = !DILocation(line: 707, column: 22, scope: !6795)
!7124 = !DILocation(line: 707, column: 26, scope: !6795)
!7125 = !DILocation(line: 707, column: 21, scope: !6795)
!7126 = !DILocation(line: 707, column: 19, scope: !6795)
!7127 = !DILocation(line: 709, column: 13, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !6795, file: !888, line: 709, column: 13)
!7129 = !DILocation(line: 709, column: 13, scope: !6795)
!7130 = !DILocalVariable(name: "add_base", scope: !7131, file: !888, line: 710, type: !906)
!7131 = distinct !DILexicalBlock(scope: !7128, file: !888, line: 709, column: 24)
!7132 = !DILocation(line: 710, column: 17, scope: !7131)
!7133 = !DILocation(line: 712, column: 17, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7131, file: !888, line: 712, column: 17)
!7135 = !DILocation(line: 712, column: 24, scope: !7134)
!7136 = !DILocation(line: 712, column: 35, scope: !7134)
!7137 = !DILocation(line: 712, column: 17, scope: !7131)
!7138 = !DILocation(line: 713, column: 26, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7134, file: !888, line: 712, column: 41)
!7140 = !DILocation(line: 716, column: 67, scope: !7139)
!7141 = !DILocation(line: 716, column: 58, scope: !7139)
!7142 = !DILocation(line: 716, column: 37, scope: !7139)
!7143 = !DILocation(line: 716, column: 35, scope: !7139)
!7144 = !DILocation(line: 716, column: 17, scope: !7139)
!7145 = !DILocation(line: 716, column: 30, scope: !7139)
!7146 = !DILocation(line: 719, column: 21, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7139, file: !888, line: 719, column: 21)
!7148 = !DILocation(line: 719, column: 31, scope: !7147)
!7149 = !DILocation(line: 719, column: 21, scope: !7139)
!7150 = !DILocation(line: 720, column: 72, scope: !7147)
!7151 = !DILocation(line: 720, column: 63, scope: !7147)
!7152 = !DILocation(line: 720, column: 42, scope: !7147)
!7153 = !DILocation(line: 720, column: 40, scope: !7147)
!7154 = !DILocation(line: 720, column: 21, scope: !7147)
!7155 = !DILocation(line: 720, column: 34, scope: !7147)
!7156 = !DILocation(line: 723, column: 24, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7139, file: !888, line: 723, column: 17)
!7158 = !DILocation(line: 723, column: 22, scope: !7157)
!7159 = !DILocation(line: 723, column: 29, scope: !7160)
!7160 = !DILexicalBlockFile(scope: !7161, file: !888, discriminator: 1)
!7161 = distinct !DILexicalBlock(scope: !7157, file: !888, line: 723, column: 17)
!7162 = !DILocation(line: 723, column: 33, scope: !7160)
!7163 = !DILocation(line: 723, column: 31, scope: !7160)
!7164 = !DILocation(line: 723, column: 17, scope: !7160)
!7165 = !DILocation(line: 724, column: 45, scope: !7161)
!7166 = !DILocation(line: 724, column: 36, scope: !7161)
!7167 = !DILocation(line: 724, column: 31, scope: !7161)
!7168 = !DILocation(line: 724, column: 21, scope: !7161)
!7169 = !DILocation(line: 724, column: 34, scope: !7161)
!7170 = !DILocation(line: 723, column: 45, scope: !7171)
!7171 = !DILexicalBlockFile(scope: !7161, file: !888, discriminator: 2)
!7172 = !DILocation(line: 723, column: 17, scope: !7171)
!7173 = distinct !{!7173, !7174}
!7174 = !DILocation(line: 723, column: 17, scope: !7139)
!7175 = !DILocation(line: 725, column: 13, scope: !7139)
!7176 = !DILocalVariable(name: "k_max", scope: !7177, file: !888, line: 726, type: !906)
!7177 = distinct !DILexicalBlock(scope: !7134, file: !888, line: 725, column: 20)
!7178 = !DILocation(line: 726, column: 21, scope: !7177)
!7179 = !DILocation(line: 727, column: 26, scope: !7177)
!7180 = !DILocation(line: 730, column: 27, scope: !7177)
!7181 = !DILocation(line: 730, column: 38, scope: !7177)
!7182 = !DILocation(line: 730, column: 26, scope: !7177)
!7183 = !DILocation(line: 730, column: 26, scope: !7184)
!7184 = !DILexicalBlockFile(scope: !7177, file: !888, discriminator: 1)
!7185 = !DILocation(line: 730, column: 55, scope: !7186)
!7186 = !DILexicalBlockFile(scope: !7177, file: !888, discriminator: 2)
!7187 = !DILocation(line: 730, column: 26, scope: !7186)
!7188 = !DILocation(line: 730, column: 26, scope: !7189)
!7189 = !DILexicalBlockFile(scope: !7177, file: !888, discriminator: 3)
!7190 = !DILocation(line: 730, column: 23, scope: !7189)
!7191 = !DILocation(line: 731, column: 24, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7177, file: !888, line: 731, column: 17)
!7193 = !DILocation(line: 731, column: 22, scope: !7192)
!7194 = !DILocation(line: 731, column: 29, scope: !7195)
!7195 = !DILexicalBlockFile(scope: !7196, file: !888, discriminator: 1)
!7196 = distinct !DILexicalBlock(scope: !7192, file: !888, line: 731, column: 17)
!7197 = !DILocation(line: 731, column: 33, scope: !7195)
!7198 = !DILocation(line: 731, column: 31, scope: !7195)
!7199 = !DILocation(line: 731, column: 17, scope: !7195)
!7200 = !DILocalVariable(name: "rice_param", scope: !7201, file: !888, line: 732, type: !906)
!7201 = distinct !DILexicalBlock(scope: !7196, file: !888, line: 731, column: 45)
!7202 = !DILocation(line: 732, column: 25, scope: !7201)
!7203 = !DILocation(line: 732, column: 75, scope: !7201)
!7204 = !DILocation(line: 732, column: 38, scope: !7201)
!7205 = !DILocation(line: 732, column: 56, scope: !7201)
!7206 = !DILocation(line: 732, column: 63, scope: !7201)
!7207 = !DILocalVariable(name: "offset", scope: !7201, file: !888, line: 733, type: !906)
!7208 = !DILocation(line: 733, column: 25, scope: !7201)
!7209 = !DILocation(line: 733, column: 71, scope: !7201)
!7210 = !DILocation(line: 733, column: 34, scope: !7201)
!7211 = !DILocation(line: 733, column: 52, scope: !7201)
!7212 = !DILocation(line: 733, column: 59, scope: !7201)
!7213 = !DILocation(line: 734, column: 48, scope: !7201)
!7214 = !DILocation(line: 734, column: 52, scope: !7201)
!7215 = !DILocation(line: 734, column: 36, scope: !7201)
!7216 = !DILocation(line: 734, column: 66, scope: !7201)
!7217 = !DILocation(line: 734, column: 64, scope: !7201)
!7218 = !DILocation(line: 734, column: 31, scope: !7201)
!7219 = !DILocation(line: 734, column: 21, scope: !7201)
!7220 = !DILocation(line: 734, column: 34, scope: !7201)
!7221 = !DILocation(line: 735, column: 35, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7201, file: !888, line: 735, column: 25)
!7223 = !DILocation(line: 735, column: 25, scope: !7222)
!7224 = !DILocation(line: 735, column: 38, scope: !7222)
!7225 = !DILocation(line: 735, column: 44, scope: !7222)
!7226 = !DILocation(line: 735, column: 57, scope: !7227)
!7227 = !DILexicalBlockFile(scope: !7222, file: !888, discriminator: 1)
!7228 = !DILocation(line: 735, column: 47, scope: !7227)
!7229 = !DILocation(line: 735, column: 60, scope: !7227)
!7230 = !DILocation(line: 735, column: 25, scope: !7227)
!7231 = !DILocation(line: 736, column: 32, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7222, file: !888, line: 735, column: 66)
!7233 = !DILocation(line: 738, column: 42, scope: !7232)
!7234 = !DILocation(line: 738, column: 32, scope: !7232)
!7235 = !DILocation(line: 736, column: 25, scope: !7232)
!7236 = !DILocation(line: 739, column: 25, scope: !7232)
!7237 = !DILocation(line: 741, column: 17, scope: !7201)
!7238 = !DILocation(line: 731, column: 41, scope: !7239)
!7239 = !DILexicalBlockFile(scope: !7196, file: !888, discriminator: 2)
!7240 = !DILocation(line: 731, column: 17, scope: !7239)
!7241 = distinct !{!7241, !7242}
!7242 = !DILocation(line: 731, column: 17, scope: !7177)
!7243 = !DILocation(line: 744, column: 27, scope: !7177)
!7244 = !DILocation(line: 744, column: 38, scope: !7177)
!7245 = !DILocation(line: 744, column: 26, scope: !7177)
!7246 = !DILocation(line: 744, column: 26, scope: !7184)
!7247 = !DILocation(line: 744, column: 57, scope: !7186)
!7248 = !DILocation(line: 744, column: 26, scope: !7186)
!7249 = !DILocation(line: 744, column: 26, scope: !7189)
!7250 = !DILocation(line: 744, column: 23, scope: !7189)
!7251 = !DILocation(line: 745, column: 17, scope: !7177)
!7252 = !DILocation(line: 745, column: 24, scope: !7253)
!7253 = !DILexicalBlockFile(scope: !7254, file: !888, discriminator: 1)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !888, line: 745, column: 17)
!7255 = distinct !DILexicalBlock(scope: !7177, file: !888, line: 745, column: 17)
!7256 = !DILocation(line: 745, column: 28, scope: !7253)
!7257 = !DILocation(line: 745, column: 26, scope: !7253)
!7258 = !DILocation(line: 745, column: 17, scope: !7253)
!7259 = !DILocation(line: 746, column: 48, scope: !7254)
!7260 = !DILocation(line: 746, column: 36, scope: !7254)
!7261 = !DILocation(line: 746, column: 58, scope: !7254)
!7262 = !DILocation(line: 746, column: 60, scope: !7254)
!7263 = !DILocation(line: 746, column: 55, scope: !7254)
!7264 = !DILocation(line: 746, column: 31, scope: !7254)
!7265 = !DILocation(line: 746, column: 21, scope: !7254)
!7266 = !DILocation(line: 746, column: 34, scope: !7254)
!7267 = !DILocation(line: 745, column: 36, scope: !7268)
!7268 = !DILexicalBlockFile(scope: !7254, file: !888, discriminator: 2)
!7269 = !DILocation(line: 745, column: 17, scope: !7268)
!7270 = distinct !{!7270, !7251}
!7271 = !DILocation(line: 749, column: 17, scope: !7177)
!7272 = !DILocation(line: 749, column: 24, scope: !7273)
!7273 = !DILexicalBlockFile(scope: !7274, file: !888, discriminator: 1)
!7274 = distinct !DILexicalBlock(scope: !7275, file: !888, line: 749, column: 17)
!7275 = distinct !DILexicalBlock(scope: !7177, file: !888, line: 749, column: 17)
!7276 = !DILocation(line: 749, column: 28, scope: !7273)
!7277 = !DILocation(line: 749, column: 26, scope: !7273)
!7278 = !DILocation(line: 749, column: 17, scope: !7273)
!7279 = !DILocation(line: 750, column: 48, scope: !7274)
!7280 = !DILocation(line: 750, column: 36, scope: !7274)
!7281 = !DILocation(line: 750, column: 31, scope: !7274)
!7282 = !DILocation(line: 750, column: 21, scope: !7274)
!7283 = !DILocation(line: 750, column: 34, scope: !7274)
!7284 = !DILocation(line: 749, column: 40, scope: !7285)
!7285 = !DILexicalBlockFile(scope: !7274, file: !888, discriminator: 2)
!7286 = !DILocation(line: 749, column: 17, scope: !7285)
!7287 = distinct !{!7287, !7271}
!7288 = !DILocation(line: 752, column: 58, scope: !7177)
!7289 = !DILocation(line: 752, column: 71, scope: !7177)
!7290 = !DILocation(line: 752, column: 37, scope: !7177)
!7291 = !DILocation(line: 752, column: 35, scope: !7177)
!7292 = !DILocation(line: 752, column: 17, scope: !7177)
!7293 = !DILocation(line: 752, column: 30, scope: !7177)
!7294 = !DILocation(line: 754, column: 21, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7177, file: !888, line: 754, column: 21)
!7296 = !DILocation(line: 754, column: 31, scope: !7295)
!7297 = !DILocation(line: 754, column: 21, scope: !7177)
!7298 = !DILocation(line: 755, column: 63, scope: !7295)
!7299 = !DILocation(line: 755, column: 76, scope: !7295)
!7300 = !DILocation(line: 755, column: 42, scope: !7295)
!7301 = !DILocation(line: 755, column: 40, scope: !7295)
!7302 = !DILocation(line: 755, column: 21, scope: !7295)
!7303 = !DILocation(line: 755, column: 34, scope: !7295)
!7304 = !DILocation(line: 758, column: 20, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7131, file: !888, line: 758, column: 13)
!7306 = !DILocation(line: 758, column: 18, scope: !7305)
!7307 = !DILocation(line: 758, column: 25, scope: !7308)
!7308 = !DILexicalBlockFile(scope: !7309, file: !888, discriminator: 1)
!7309 = distinct !DILexicalBlock(scope: !7305, file: !888, line: 758, column: 13)
!7310 = !DILocation(line: 758, column: 29, scope: !7308)
!7311 = !DILocation(line: 758, column: 27, scope: !7308)
!7312 = !DILocation(line: 758, column: 13, scope: !7308)
!7313 = !DILocation(line: 759, column: 43, scope: !7309)
!7314 = !DILocation(line: 759, column: 33, scope: !7309)
!7315 = !DILocation(line: 759, column: 46, scope: !7309)
!7316 = !DILocation(line: 759, column: 62, scope: !7309)
!7317 = !DILocation(line: 759, column: 71, scope: !7309)
!7318 = !DILocation(line: 759, column: 59, scope: !7309)
!7319 = !DILocation(line: 759, column: 27, scope: !7309)
!7320 = !DILocation(line: 759, column: 17, scope: !7309)
!7321 = !DILocation(line: 759, column: 30, scope: !7309)
!7322 = !DILocation(line: 758, column: 41, scope: !7323)
!7323 = !DILexicalBlockFile(scope: !7309, file: !888, discriminator: 2)
!7324 = !DILocation(line: 758, column: 13, scope: !7323)
!7325 = distinct !{!7325, !7326}
!7326 = !DILocation(line: 758, column: 13, scope: !7131)
!7327 = !DILocation(line: 760, column: 9, scope: !7131)
!7328 = !DILocation(line: 761, column: 5, scope: !6795)
!7329 = !DILocation(line: 764, column: 9, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !6780, file: !888, line: 764, column: 9)
!7331 = !DILocation(line: 764, column: 16, scope: !7330)
!7332 = !DILocation(line: 764, column: 9, scope: !6780)
!7333 = !DILocation(line: 765, column: 34, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7330, file: !888, line: 764, column: 38)
!7335 = !DILocation(line: 765, column: 24, scope: !7334)
!7336 = !DILocation(line: 765, column: 10, scope: !7334)
!7337 = !DILocation(line: 765, column: 14, scope: !7334)
!7338 = !DILocation(line: 765, column: 22, scope: !7334)
!7339 = !DILocation(line: 767, column: 14, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7334, file: !888, line: 767, column: 13)
!7341 = !DILocation(line: 767, column: 18, scope: !7340)
!7342 = !DILocation(line: 767, column: 13, scope: !7340)
!7343 = !DILocation(line: 767, column: 13, scope: !7334)
!7344 = !DILocalVariable(name: "r", scope: !7345, file: !888, line: 768, type: !906)
!7345 = distinct !DILexicalBlock(scope: !7340, file: !888, line: 767, column: 27)
!7346 = !DILocation(line: 768, column: 17, scope: !7345)
!7347 = !DILocalVariable(name: "c", scope: !7345, file: !888, line: 768, type: !906)
!7348 = !DILocation(line: 768, column: 20, scope: !7345)
!7349 = !DILocation(line: 770, column: 43, scope: !7345)
!7350 = !DILocation(line: 770, column: 31, scope: !7345)
!7351 = !DILocation(line: 770, column: 50, scope: !7345)
!7352 = !DILocation(line: 770, column: 13, scope: !7345)
!7353 = !DILocation(line: 770, column: 17, scope: !7345)
!7354 = !DILocation(line: 770, column: 29, scope: !7345)
!7355 = !DILocation(line: 771, column: 43, scope: !7345)
!7356 = !DILocation(line: 771, column: 31, scope: !7345)
!7357 = !DILocation(line: 771, column: 50, scope: !7345)
!7358 = !DILocation(line: 771, column: 13, scope: !7345)
!7359 = !DILocation(line: 771, column: 17, scope: !7345)
!7360 = !DILocation(line: 771, column: 29, scope: !7345)
!7361 = !DILocation(line: 773, column: 27, scope: !7345)
!7362 = !DILocation(line: 773, column: 17, scope: !7345)
!7363 = !DILocation(line: 773, column: 15, scope: !7345)
!7364 = !DILocation(line: 774, column: 26, scope: !7345)
!7365 = !DILocation(line: 774, column: 17, scope: !7345)
!7366 = !DILocation(line: 774, column: 15, scope: !7345)
!7367 = !DILocation(line: 775, column: 17, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7345, file: !888, line: 775, column: 17)
!7369 = !DILocation(line: 775, column: 19, scope: !7368)
!7370 = !DILocation(line: 775, column: 17, scope: !7345)
!7371 = !DILocation(line: 776, column: 24, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7368, file: !888, line: 775, column: 25)
!7373 = !DILocation(line: 776, column: 17, scope: !7372)
!7374 = !DILocation(line: 777, column: 17, scope: !7372)
!7375 = !DILocation(line: 780, column: 50, scope: !7345)
!7376 = !DILocation(line: 780, column: 31, scope: !7345)
!7377 = !DILocation(line: 780, column: 47, scope: !7345)
!7378 = !DILocation(line: 780, column: 13, scope: !7345)
!7379 = !DILocation(line: 780, column: 17, scope: !7345)
!7380 = !DILocation(line: 780, column: 29, scope: !7345)
!7381 = !DILocation(line: 782, column: 43, scope: !7345)
!7382 = !DILocation(line: 782, column: 31, scope: !7345)
!7383 = !DILocation(line: 782, column: 50, scope: !7345)
!7384 = !DILocation(line: 782, column: 13, scope: !7345)
!7385 = !DILocation(line: 782, column: 17, scope: !7345)
!7386 = !DILocation(line: 782, column: 29, scope: !7345)
!7387 = !DILocation(line: 783, column: 43, scope: !7345)
!7388 = !DILocation(line: 783, column: 31, scope: !7345)
!7389 = !DILocation(line: 783, column: 50, scope: !7345)
!7390 = !DILocation(line: 783, column: 13, scope: !7345)
!7391 = !DILocation(line: 783, column: 17, scope: !7345)
!7392 = !DILocation(line: 783, column: 29, scope: !7345)
!7393 = !DILocation(line: 785, column: 37, scope: !7345)
!7394 = !DILocation(line: 785, column: 41, scope: !7345)
!7395 = !DILocation(line: 785, column: 46, scope: !7345)
!7396 = !DILocation(line: 785, column: 28, scope: !7345)
!7397 = !DILocation(line: 785, column: 14, scope: !7345)
!7398 = !DILocation(line: 785, column: 18, scope: !7345)
!7399 = !DILocation(line: 785, column: 26, scope: !7345)
!7400 = !DILocation(line: 786, column: 37, scope: !7345)
!7401 = !DILocation(line: 786, column: 47, scope: !7345)
!7402 = !DILocation(line: 786, column: 34, scope: !7345)
!7403 = !DILocation(line: 786, column: 30, scope: !7345)
!7404 = !DILocation(line: 786, column: 30, scope: !7405)
!7405 = !DILexicalBlockFile(scope: !7345, file: !888, discriminator: 1)
!7406 = !DILocation(line: 786, column: 61, scope: !7407)
!7407 = !DILexicalBlockFile(scope: !7345, file: !888, discriminator: 2)
!7408 = !DILocation(line: 786, column: 71, scope: !7407)
!7409 = !DILocation(line: 786, column: 30, scope: !7407)
!7410 = !DILocation(line: 786, column: 30, scope: !7411)
!7411 = !DILexicalBlockFile(scope: !7345, file: !888, discriminator: 3)
!7412 = !DILocation(line: 786, column: 14, scope: !7411)
!7413 = !DILocation(line: 786, column: 18, scope: !7411)
!7414 = !DILocation(line: 786, column: 26, scope: !7411)
!7415 = !DILocation(line: 787, column: 9, scope: !7345)
!7416 = !DILocation(line: 788, column: 5, scope: !7334)
!7417 = !DILocation(line: 791, column: 9, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !6780, file: !888, line: 791, column: 9)
!7419 = !DILocation(line: 791, column: 13, scope: !7418)
!7420 = !DILocation(line: 791, column: 9, scope: !6780)
!7421 = !DILocation(line: 792, column: 13, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7423, file: !888, line: 792, column: 13)
!7423 = distinct !DILexicalBlock(scope: !7418, file: !888, line: 791, column: 23)
!7424 = !DILocation(line: 792, column: 13, scope: !7423)
!7425 = !DILocation(line: 793, column: 46, scope: !7422)
!7426 = !DILocation(line: 793, column: 50, scope: !7422)
!7427 = !DILocation(line: 793, column: 57, scope: !7422)
!7428 = !DILocation(line: 793, column: 77, scope: !7422)
!7429 = !DILocation(line: 793, column: 34, scope: !7422)
!7430 = !DILocation(line: 793, column: 13, scope: !7422)
!7431 = !DILocation(line: 793, column: 17, scope: !7422)
!7432 = !DILocation(line: 793, column: 32, scope: !7422)
!7433 = !DILocation(line: 794, column: 13, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7423, file: !888, line: 794, column: 13)
!7435 = !DILocation(line: 794, column: 23, scope: !7434)
!7436 = !DILocation(line: 794, column: 13, scope: !7423)
!7437 = !DILocation(line: 795, column: 46, scope: !7434)
!7438 = !DILocation(line: 795, column: 52, scope: !7434)
!7439 = !DILocation(line: 795, column: 57, scope: !7434)
!7440 = !DILocation(line: 795, column: 65, scope: !7434)
!7441 = !DILocation(line: 795, column: 70, scope: !7434)
!7442 = !DILocation(line: 795, column: 62, scope: !7434)
!7443 = !DILocation(line: 795, column: 51, scope: !7434)
!7444 = !DILocation(line: 795, column: 80, scope: !7445)
!7445 = !DILexicalBlockFile(scope: !7434, file: !888, discriminator: 1)
!7446 = !DILocation(line: 795, column: 85, scope: !7445)
!7447 = !DILocation(line: 795, column: 51, scope: !7445)
!7448 = !DILocation(line: 795, column: 95, scope: !7449)
!7449 = !DILexicalBlockFile(scope: !7434, file: !888, discriminator: 2)
!7450 = !DILocation(line: 795, column: 100, scope: !7449)
!7451 = !DILocation(line: 795, column: 51, scope: !7449)
!7452 = !DILocation(line: 795, column: 51, scope: !7453)
!7453 = !DILexicalBlockFile(scope: !7434, file: !888, discriminator: 3)
!7454 = !DILocation(line: 795, column: 34, scope: !7453)
!7455 = !DILocation(line: 795, column: 13, scope: !7453)
!7456 = !DILocation(line: 795, column: 17, scope: !7453)
!7457 = !DILocation(line: 795, column: 32, scope: !7453)
!7458 = !DILocation(line: 796, column: 13, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7423, file: !888, line: 796, column: 13)
!7460 = !DILocation(line: 796, column: 23, scope: !7459)
!7461 = !DILocation(line: 796, column: 13, scope: !7423)
!7462 = !DILocation(line: 797, column: 46, scope: !7459)
!7463 = !DILocation(line: 797, column: 52, scope: !7459)
!7464 = !DILocation(line: 797, column: 57, scope: !7459)
!7465 = !DILocation(line: 797, column: 65, scope: !7459)
!7466 = !DILocation(line: 797, column: 70, scope: !7459)
!7467 = !DILocation(line: 797, column: 62, scope: !7459)
!7468 = !DILocation(line: 797, column: 51, scope: !7459)
!7469 = !DILocation(line: 797, column: 80, scope: !7470)
!7470 = !DILexicalBlockFile(scope: !7459, file: !888, discriminator: 1)
!7471 = !DILocation(line: 797, column: 85, scope: !7470)
!7472 = !DILocation(line: 797, column: 51, scope: !7470)
!7473 = !DILocation(line: 797, column: 95, scope: !7474)
!7474 = !DILexicalBlockFile(scope: !7459, file: !888, discriminator: 2)
!7475 = !DILocation(line: 797, column: 100, scope: !7474)
!7476 = !DILocation(line: 797, column: 51, scope: !7474)
!7477 = !DILocation(line: 797, column: 51, scope: !7478)
!7478 = !DILexicalBlockFile(scope: !7459, file: !888, discriminator: 3)
!7479 = !DILocation(line: 797, column: 34, scope: !7478)
!7480 = !DILocation(line: 797, column: 13, scope: !7478)
!7481 = !DILocation(line: 797, column: 17, scope: !7478)
!7482 = !DILocation(line: 797, column: 32, scope: !7478)
!7483 = !DILocation(line: 799, column: 19, scope: !7423)
!7484 = !DILocation(line: 799, column: 30, scope: !7423)
!7485 = !DILocation(line: 799, column: 18, scope: !7423)
!7486 = !DILocation(line: 799, column: 18, scope: !7487)
!7487 = !DILexicalBlockFile(scope: !7423, file: !888, discriminator: 1)
!7488 = !DILocation(line: 799, column: 45, scope: !7489)
!7489 = !DILexicalBlockFile(scope: !7423, file: !888, discriminator: 2)
!7490 = !DILocation(line: 799, column: 18, scope: !7489)
!7491 = !DILocation(line: 799, column: 18, scope: !7492)
!7492 = !DILexicalBlockFile(scope: !7423, file: !888, discriminator: 3)
!7493 = !DILocation(line: 799, column: 15, scope: !7492)
!7494 = !DILocation(line: 800, column: 5, scope: !7423)
!7495 = !DILocation(line: 803, column: 9, scope: !6785)
!7496 = !DILocation(line: 803, column: 16, scope: !6785)
!7497 = !DILocation(line: 803, column: 9, scope: !6780)
!7498 = !DILocalVariable(name: "delta", scope: !6784, file: !888, line: 804, type: !1053)
!7499 = !DILocation(line: 804, column: 13, scope: !6784)
!7500 = !DILocalVariable(name: "k", scope: !6784, file: !888, line: 805, type: !6820)
!7501 = !DILocation(line: 805, column: 22, scope: !6784)
!7502 = !DILocalVariable(name: "b", scope: !6784, file: !888, line: 806, type: !907)
!7503 = !DILocation(line: 806, column: 22, scope: !6784)
!7504 = !DILocation(line: 806, column: 52, scope: !6784)
!7505 = !DILocation(line: 806, column: 56, scope: !6784)
!7506 = !DILocation(line: 806, column: 37, scope: !6784)
!7507 = !DILocation(line: 334, column: 34, scope: !3255, inlinedAt: !6789)
!7508 = !DILocation(line: 334, column: 36, scope: !3255, inlinedAt: !6789)
!7509 = !DILocation(line: 334, column: 41, scope: !3255, inlinedAt: !6789)
!7510 = !DILocation(line: 334, column: 46, scope: !3255, inlinedAt: !6789)
!7511 = !DILocation(line: 334, column: 18, scope: !3255, inlinedAt: !6789)
!7512 = !DILocation(line: 334, column: 16, scope: !3255, inlinedAt: !6789)
!7513 = !DILocation(line: 806, column: 70, scope: !6784)
!7514 = !DILocation(line: 806, column: 75, scope: !6784)
!7515 = !DILocation(line: 806, column: 26, scope: !6783)
!7516 = !DILocation(line: 132, column: 9, scope: !3717, inlinedAt: !6782)
!7517 = !DILocation(line: 132, column: 13, scope: !3717, inlinedAt: !6782)
!7518 = !DILocation(line: 132, column: 11, scope: !3717, inlinedAt: !6782)
!7519 = !DILocation(line: 132, column: 9, scope: !3693, inlinedAt: !6782)
!7520 = !DILocation(line: 132, column: 26, scope: !3722, inlinedAt: !6782)
!7521 = !DILocation(line: 132, column: 19, scope: !3722, inlinedAt: !6782)
!7522 = !DILocation(line: 133, column: 14, scope: !3725, inlinedAt: !6782)
!7523 = !DILocation(line: 133, column: 18, scope: !3725, inlinedAt: !6782)
!7524 = !DILocation(line: 133, column: 16, scope: !3725, inlinedAt: !6782)
!7525 = !DILocation(line: 133, column: 14, scope: !3717, inlinedAt: !6782)
!7526 = !DILocation(line: 133, column: 31, scope: !3730, inlinedAt: !6782)
!7527 = !DILocation(line: 133, column: 24, scope: !3730, inlinedAt: !6782)
!7528 = !DILocation(line: 134, column: 17, scope: !3725, inlinedAt: !6782)
!7529 = !DILocation(line: 134, column: 10, scope: !3725, inlinedAt: !6782)
!7530 = !DILocation(line: 135, column: 1, scope: !3693, inlinedAt: !6782)
!7531 = !DILocalVariable(name: "high", scope: !6784, file: !888, line: 809, type: !907)
!7532 = !DILocation(line: 809, column: 22, scope: !6784)
!7533 = !DILocalVariable(name: "low", scope: !6784, file: !888, line: 810, type: !907)
!7534 = !DILocation(line: 810, column: 22, scope: !6784)
!7535 = !DILocalVariable(name: "value", scope: !6784, file: !888, line: 811, type: !907)
!7536 = !DILocation(line: 811, column: 22, scope: !6784)
!7537 = !DILocation(line: 813, column: 29, scope: !6784)
!7538 = !DILocation(line: 813, column: 9, scope: !6784)
!7539 = !DILocation(line: 815, column: 23, scope: !6784)
!7540 = !DILocation(line: 815, column: 27, scope: !6784)
!7541 = !DILocation(line: 815, column: 41, scope: !6784)
!7542 = !DILocation(line: 815, column: 39, scope: !6784)
!7543 = !DILocation(line: 815, column: 21, scope: !6784)
!7544 = !DILocation(line: 817, column: 17, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !6784, file: !888, line: 817, column: 9)
!7546 = !DILocation(line: 817, column: 14, scope: !7545)
!7547 = !DILocation(line: 817, column: 22, scope: !7548)
!7548 = !DILexicalBlockFile(scope: !7549, file: !888, discriminator: 1)
!7549 = distinct !DILexicalBlock(scope: !7545, file: !888, line: 817, column: 9)
!7550 = !DILocation(line: 817, column: 27, scope: !7548)
!7551 = !DILocation(line: 817, column: 25, scope: !7548)
!7552 = !DILocation(line: 817, column: 9, scope: !7548)
!7553 = !DILocalVariable(name: "sb_len", scope: !7554, file: !888, line: 818, type: !907)
!7554 = distinct !DILexicalBlock(scope: !7549, file: !888, line: 817, column: 45)
!7555 = !DILocation(line: 818, column: 26, scope: !7554)
!7556 = !DILocation(line: 818, column: 35, scope: !7554)
!7557 = !DILocation(line: 818, column: 48, scope: !7554)
!7558 = !DILocation(line: 818, column: 48, scope: !7559)
!7559 = !DILexicalBlockFile(scope: !7554, file: !888, discriminator: 1)
!7560 = !DILocation(line: 818, column: 57, scope: !7561)
!7561 = !DILexicalBlockFile(scope: !7554, file: !888, discriminator: 2)
!7562 = !DILocation(line: 818, column: 48, scope: !7561)
!7563 = !DILocation(line: 818, column: 48, scope: !7564)
!7564 = !DILexicalBlockFile(scope: !7554, file: !888, discriminator: 3)
!7565 = !DILocation(line: 818, column: 45, scope: !7564)
!7566 = !DILocation(line: 818, column: 26, scope: !7564)
!7567 = !DILocation(line: 820, column: 24, scope: !7554)
!7568 = !DILocation(line: 820, column: 22, scope: !7554)
!7569 = !DILocation(line: 820, column: 30, scope: !7554)
!7570 = !DILocation(line: 820, column: 28, scope: !7554)
!7571 = !DILocation(line: 820, column: 36, scope: !7559)
!7572 = !DILocation(line: 820, column: 34, scope: !7559)
!7573 = !DILocation(line: 820, column: 42, scope: !7559)
!7574 = !DILocation(line: 820, column: 40, scope: !7559)
!7575 = !DILocation(line: 820, column: 22, scope: !7559)
!7576 = !DILocation(line: 820, column: 22, scope: !7561)
!7577 = !DILocation(line: 820, column: 22, scope: !7564)
!7578 = !DILocation(line: 820, column: 16, scope: !7564)
!7579 = !DILocation(line: 820, column: 13, scope: !7564)
!7580 = !DILocation(line: 820, column: 20, scope: !7564)
!7581 = !DILocation(line: 821, column: 31, scope: !7554)
!7582 = !DILocation(line: 821, column: 29, scope: !7554)
!7583 = !DILocation(line: 821, column: 27, scope: !7554)
!7584 = !DILocation(line: 821, column: 39, scope: !7554)
!7585 = !DILocation(line: 821, column: 37, scope: !7554)
!7586 = !DILocation(line: 821, column: 35, scope: !7554)
!7587 = !DILocation(line: 821, column: 19, scope: !7554)
!7588 = !DILocation(line: 821, column: 13, scope: !7554)
!7589 = !DILocation(line: 821, column: 23, scope: !7554)
!7590 = !DILocation(line: 823, column: 28, scope: !7554)
!7591 = !DILocation(line: 823, column: 32, scope: !7554)
!7592 = !DILocation(line: 823, column: 40, scope: !7554)
!7593 = !DILocation(line: 824, column: 31, scope: !7554)
!7594 = !DILocation(line: 824, column: 25, scope: !7554)
!7595 = !DILocation(line: 824, column: 39, scope: !7554)
!7596 = !DILocation(line: 824, column: 36, scope: !7554)
!7597 = !DILocation(line: 824, column: 65, scope: !7554)
!7598 = !DILocation(line: 824, column: 70, scope: !7554)
!7599 = !DILocation(line: 824, column: 80, scope: !7554)
!7600 = !DILocation(line: 824, column: 85, scope: !7554)
!7601 = !DILocation(line: 823, column: 13, scope: !7554)
!7602 = !DILocation(line: 826, column: 28, scope: !7554)
!7603 = !DILocation(line: 826, column: 25, scope: !7554)
!7604 = !DILocation(line: 827, column: 9, scope: !7554)
!7605 = !DILocation(line: 817, column: 41, scope: !7606)
!7606 = !DILexicalBlockFile(scope: !7549, file: !888, discriminator: 2)
!7607 = !DILocation(line: 817, column: 9, scope: !7606)
!7608 = distinct !{!7608, !7609}
!7609 = !DILocation(line: 817, column: 9, scope: !6784)
!7610 = !DILocation(line: 829, column: 28, scope: !6784)
!7611 = !DILocation(line: 829, column: 9, scope: !6784)
!7612 = !DILocation(line: 833, column: 23, scope: !6784)
!7613 = !DILocation(line: 833, column: 27, scope: !6784)
!7614 = !DILocation(line: 833, column: 41, scope: !6784)
!7615 = !DILocation(line: 833, column: 39, scope: !6784)
!7616 = !DILocation(line: 833, column: 21, scope: !6784)
!7617 = !DILocation(line: 835, column: 17, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !6784, file: !888, line: 835, column: 9)
!7619 = !DILocation(line: 835, column: 14, scope: !7618)
!7620 = !DILocation(line: 835, column: 22, scope: !7621)
!7621 = !DILexicalBlockFile(scope: !7622, file: !888, discriminator: 1)
!7622 = distinct !DILexicalBlock(scope: !7618, file: !888, line: 835, column: 9)
!7623 = !DILocation(line: 835, column: 27, scope: !7621)
!7624 = !DILocation(line: 835, column: 25, scope: !7621)
!7625 = !DILocation(line: 835, column: 9, scope: !7621)
!7626 = !DILocalVariable(name: "cur_tail_code", scope: !7627, file: !888, line: 836, type: !907)
!7627 = distinct !DILexicalBlock(scope: !7622, file: !888, line: 835, column: 56)
!7628 = !DILocation(line: 836, column: 26, scope: !7627)
!7629 = !DILocation(line: 836, column: 66, scope: !7627)
!7630 = !DILocation(line: 836, column: 60, scope: !7627)
!7631 = !DILocation(line: 836, column: 42, scope: !7627)
!7632 = !DILocation(line: 836, column: 55, scope: !7627)
!7633 = !DILocation(line: 836, column: 52, scope: !7627)
!7634 = !DILocalVariable(name: "cur_k", scope: !7627, file: !888, line: 837, type: !907)
!7635 = !DILocation(line: 837, column: 26, scope: !7627)
!7636 = !DILocation(line: 837, column: 36, scope: !7627)
!7637 = !DILocation(line: 837, column: 34, scope: !7627)
!7638 = !DILocalVariable(name: "cur_s", scope: !7627, file: !888, line: 838, type: !907)
!7639 = !DILocation(line: 838, column: 26, scope: !7627)
!7640 = !DILocation(line: 838, column: 36, scope: !7627)
!7641 = !DILocation(line: 838, column: 34, scope: !7627)
!7642 = !DILocation(line: 840, column: 13, scope: !7627)
!7643 = !DILocation(line: 840, column: 20, scope: !7644)
!7644 = !DILexicalBlockFile(scope: !7645, file: !888, discriminator: 1)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !888, line: 840, column: 13)
!7646 = distinct !DILexicalBlock(scope: !7627, file: !888, line: 840, column: 13)
!7647 = !DILocation(line: 840, column: 28, scope: !7644)
!7648 = !DILocation(line: 840, column: 26, scope: !7644)
!7649 = !DILocation(line: 840, column: 13, scope: !7644)
!7650 = !DILocalVariable(name: "res", scope: !7651, file: !888, line: 841, type: !926)
!7651 = distinct !DILexicalBlock(scope: !7645, file: !888, line: 840, column: 48)
!7652 = !DILocation(line: 841, column: 25, scope: !7651)
!7653 = !DILocation(line: 841, column: 32, scope: !7651)
!7654 = !DILocation(line: 841, column: 31, scope: !7651)
!7655 = !DILocation(line: 843, column: 21, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7651, file: !888, line: 843, column: 21)
!7657 = !DILocation(line: 843, column: 28, scope: !7656)
!7658 = !DILocation(line: 843, column: 25, scope: !7656)
!7659 = !DILocation(line: 843, column: 21, scope: !7651)
!7660 = !DILocalVariable(name: "max_msb", scope: !7661, file: !888, line: 844, type: !907)
!7661 = distinct !DILexicalBlock(scope: !7656, file: !888, line: 843, column: 43)
!7662 = !DILocation(line: 844, column: 34, scope: !7661)
!7663 = !DILocation(line: 844, column: 53, scope: !7661)
!7664 = !DILocation(line: 844, column: 50, scope: !7661)
!7665 = !DILocation(line: 844, column: 57, scope: !7661)
!7666 = !DILocation(line: 844, column: 47, scope: !7661)
!7667 = !DILocation(line: 844, column: 68, scope: !7661)
!7668 = !DILocation(line: 844, column: 65, scope: !7661)
!7669 = !DILocation(line: 844, column: 72, scope: !7661)
!7670 = !DILocation(line: 844, column: 62, scope: !7661)
!7671 = !DILocation(line: 845, column: 57, scope: !7661)
!7672 = !DILocation(line: 845, column: 51, scope: !7661)
!7673 = !DILocation(line: 845, column: 49, scope: !7661)
!7674 = !DILocation(line: 845, column: 43, scope: !7661)
!7675 = !DILocation(line: 847, column: 39, scope: !7661)
!7676 = !DILocation(line: 847, column: 43, scope: !7661)
!7677 = !DILocation(line: 847, column: 27, scope: !7661)
!7678 = !DILocation(line: 847, column: 25, scope: !7661)
!7679 = !DILocation(line: 849, column: 25, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7661, file: !888, line: 849, column: 25)
!7681 = !DILocation(line: 849, column: 29, scope: !7680)
!7682 = !DILocation(line: 849, column: 25, scope: !7661)
!7683 = !DILocation(line: 850, column: 33, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7680, file: !888, line: 849, column: 35)
!7685 = !DILocation(line: 850, column: 46, scope: !7684)
!7686 = !DILocation(line: 850, column: 43, scope: !7684)
!7687 = !DILocation(line: 850, column: 29, scope: !7684)
!7688 = !DILocation(line: 851, column: 21, scope: !7684)
!7689 = !DILocation(line: 852, column: 33, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7680, file: !888, line: 851, column: 28)
!7691 = !DILocation(line: 852, column: 41, scope: !7690)
!7692 = !DILocation(line: 852, column: 49, scope: !7690)
!7693 = !DILocation(line: 852, column: 46, scope: !7690)
!7694 = !DILocation(line: 852, column: 29, scope: !7690)
!7695 = !DILocation(line: 854, column: 17, scope: !7661)
!7696 = !DILocation(line: 855, column: 25, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7698, file: !888, line: 855, column: 25)
!7698 = distinct !DILexicalBlock(scope: !7656, file: !888, line: 854, column: 24)
!7699 = !DILocation(line: 855, column: 31, scope: !7697)
!7700 = !DILocation(line: 855, column: 29, scope: !7697)
!7701 = !DILocation(line: 855, column: 25, scope: !7698)
!7702 = !DILocation(line: 856, column: 28, scope: !7697)
!7703 = !DILocation(line: 856, column: 25, scope: !7697)
!7704 = !DILocation(line: 858, column: 25, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7698, file: !888, line: 858, column: 25)
!7706 = !DILocation(line: 858, column: 29, scope: !7705)
!7707 = !DILocation(line: 858, column: 25, scope: !7698)
!7708 = !DILocation(line: 859, column: 32, scope: !7705)
!7709 = !DILocation(line: 859, column: 31, scope: !7705)
!7710 = !DILocation(line: 859, column: 29, scope: !7705)
!7711 = !DILocation(line: 859, column: 25, scope: !7705)
!7712 = !DILocation(line: 861, column: 25, scope: !7698)
!7713 = !DILocation(line: 863, column: 25, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7698, file: !888, line: 863, column: 25)
!7715 = !DILocation(line: 863, column: 25, scope: !7698)
!7716 = !DILocation(line: 864, column: 37, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7714, file: !888, line: 863, column: 32)
!7718 = !DILocation(line: 864, column: 34, scope: !7717)
!7719 = !DILocation(line: 864, column: 29, scope: !7717)
!7720 = !DILocation(line: 865, column: 46, scope: !7717)
!7721 = !DILocation(line: 865, column: 50, scope: !7717)
!7722 = !DILocation(line: 865, column: 32, scope: !7717)
!7723 = !DILocation(line: 865, column: 29, scope: !7717)
!7724 = !DILocation(line: 866, column: 21, scope: !7717)
!7725 = !DILocation(line: 869, column: 34, scope: !7651)
!7726 = !DILocation(line: 869, column: 29, scope: !7651)
!7727 = !DILocation(line: 869, column: 32, scope: !7651)
!7728 = !DILocation(line: 870, column: 13, scope: !7651)
!7729 = !DILocation(line: 840, column: 44, scope: !7730)
!7730 = !DILexicalBlockFile(scope: !7645, file: !888, discriminator: 2)
!7731 = !DILocation(line: 840, column: 13, scope: !7730)
!7732 = distinct !{!7732, !7642}
!7733 = !DILocation(line: 871, column: 9, scope: !7627)
!7734 = !DILocation(line: 835, column: 41, scope: !7735)
!7735 = !DILexicalBlockFile(scope: !7622, file: !888, discriminator: 2)
!7736 = !DILocation(line: 835, column: 51, scope: !7735)
!7737 = !DILocation(line: 835, column: 9, scope: !7735)
!7738 = distinct !{!7738, !7739}
!7739 = !DILocation(line: 835, column: 9, scope: !6784)
!7740 = !DILocation(line: 872, column: 5, scope: !6784)
!7741 = !DILocation(line: 873, column: 23, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !6785, file: !888, line: 872, column: 12)
!7743 = !DILocation(line: 873, column: 27, scope: !7742)
!7744 = !DILocation(line: 873, column: 41, scope: !7742)
!7745 = !DILocation(line: 873, column: 39, scope: !7742)
!7746 = !DILocation(line: 873, column: 21, scope: !7742)
!7747 = !DILocation(line: 875, column: 17, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7742, file: !888, line: 875, column: 9)
!7749 = !DILocation(line: 875, column: 14, scope: !7748)
!7750 = !DILocation(line: 875, column: 22, scope: !7751)
!7751 = !DILexicalBlockFile(scope: !7752, file: !888, discriminator: 1)
!7752 = distinct !DILexicalBlock(scope: !7748, file: !888, line: 875, column: 9)
!7753 = !DILocation(line: 875, column: 27, scope: !7751)
!7754 = !DILocation(line: 875, column: 25, scope: !7751)
!7755 = !DILocation(line: 875, column: 9, scope: !7751)
!7756 = !DILocation(line: 876, column: 13, scope: !7752)
!7757 = !DILocation(line: 876, column: 20, scope: !7758)
!7758 = !DILexicalBlockFile(scope: !7759, file: !888, discriminator: 1)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !888, line: 876, column: 13)
!7760 = distinct !DILexicalBlock(scope: !7752, file: !888, line: 876, column: 13)
!7761 = !DILocation(line: 876, column: 28, scope: !7758)
!7762 = !DILocation(line: 876, column: 26, scope: !7758)
!7763 = !DILocation(line: 876, column: 13, scope: !7758)
!7764 = !DILocation(line: 877, column: 46, scope: !7759)
!7765 = !DILocation(line: 877, column: 52, scope: !7759)
!7766 = !DILocation(line: 877, column: 50, scope: !7759)
!7767 = !DILocation(line: 877, column: 34, scope: !7759)
!7768 = !DILocation(line: 877, column: 29, scope: !7759)
!7769 = !DILocation(line: 877, column: 32, scope: !7759)
!7770 = !DILocation(line: 877, column: 17, scope: !7759)
!7771 = !DILocation(line: 876, column: 44, scope: !7772)
!7772 = !DILexicalBlockFile(scope: !7759, file: !888, discriminator: 2)
!7773 = !DILocation(line: 876, column: 13, scope: !7772)
!7774 = distinct !{!7774, !7756}
!7775 = !DILocation(line: 877, column: 55, scope: !7776)
!7776 = !DILexicalBlockFile(scope: !7760, file: !888, discriminator: 1)
!7777 = !DILocation(line: 875, column: 41, scope: !7778)
!7778 = !DILexicalBlockFile(scope: !7752, file: !888, discriminator: 2)
!7779 = !DILocation(line: 875, column: 51, scope: !7778)
!7780 = !DILocation(line: 875, column: 9, scope: !7778)
!7781 = distinct !{!7781, !7782}
!7782 = !DILocation(line: 875, column: 9, scope: !7742)
!7783 = !DILocation(line: 880, column: 5, scope: !6780)
!7784 = !DILocation(line: 881, column: 1, scope: !6780)
!7785 = distinct !DISubprogram(name: "read_const_block_data", scope: !888, file: !888, line: 578, type: !5190, isLocal: true, isDefinition: true, scopeLine: 579, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!7786 = !DILocalVariable(name: "ctx", arg: 1, scope: !7785, file: !888, line: 578, type: !1703)
!7787 = !DILocation(line: 578, column: 49, scope: !7785)
!7788 = !DILocalVariable(name: "bd", arg: 2, scope: !7785, file: !888, line: 578, type: !5192)
!7789 = !DILocation(line: 578, column: 68, scope: !7785)
!7790 = !DILocalVariable(name: "sconf", scope: !7785, file: !888, line: 580, type: !1847)
!7791 = !DILocation(line: 580, column: 24, scope: !7785)
!7792 = !DILocation(line: 580, column: 33, scope: !7785)
!7793 = !DILocation(line: 580, column: 38, scope: !7785)
!7794 = !DILocalVariable(name: "avctx", scope: !7785, file: !888, line: 581, type: !1022)
!7795 = !DILocation(line: 581, column: 21, scope: !7785)
!7796 = !DILocation(line: 581, column: 29, scope: !7785)
!7797 = !DILocation(line: 581, column: 34, scope: !7785)
!7798 = !DILocalVariable(name: "gb", scope: !7785, file: !888, line: 582, type: !3666)
!7799 = !DILocation(line: 582, column: 20, scope: !7785)
!7800 = !DILocation(line: 582, column: 26, scope: !7785)
!7801 = !DILocation(line: 582, column: 31, scope: !7785)
!7802 = !DILocation(line: 584, column: 9, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7785, file: !888, line: 584, column: 9)
!7804 = !DILocation(line: 584, column: 13, scope: !7803)
!7805 = !DILocation(line: 584, column: 26, scope: !7803)
!7806 = !DILocation(line: 584, column: 9, scope: !7785)
!7807 = !DILocation(line: 585, column: 9, scope: !7803)
!7808 = !DILocation(line: 587, column: 6, scope: !7785)
!7809 = !DILocation(line: 587, column: 10, scope: !7785)
!7810 = !DILocation(line: 587, column: 22, scope: !7785)
!7811 = !DILocation(line: 588, column: 34, scope: !7785)
!7812 = !DILocation(line: 588, column: 24, scope: !7785)
!7813 = !DILocation(line: 588, column: 6, scope: !7785)
!7814 = !DILocation(line: 588, column: 10, scope: !7785)
!7815 = !DILocation(line: 588, column: 22, scope: !7785)
!7816 = !DILocation(line: 589, column: 31, scope: !7785)
!7817 = !DILocation(line: 589, column: 21, scope: !7785)
!7818 = !DILocation(line: 589, column: 5, scope: !7785)
!7819 = !DILocation(line: 589, column: 9, scope: !7785)
!7820 = !DILocation(line: 589, column: 19, scope: !7785)
!7821 = !DILocation(line: 592, column: 15, scope: !7785)
!7822 = !DILocation(line: 592, column: 5, scope: !7785)
!7823 = !DILocation(line: 594, column: 10, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7785, file: !888, line: 594, column: 9)
!7825 = !DILocation(line: 594, column: 14, scope: !7824)
!7826 = !DILocation(line: 594, column: 9, scope: !7824)
!7827 = !DILocation(line: 594, column: 9, scope: !7785)
!7828 = !DILocalVariable(name: "const_val_bits", scope: !7829, file: !888, line: 595, type: !907)
!7829 = distinct !DILexicalBlock(scope: !7824, file: !888, line: 594, column: 27)
!7830 = !DILocation(line: 595, column: 22, scope: !7829)
!7831 = !DILocation(line: 595, column: 39, scope: !7829)
!7832 = !DILocation(line: 595, column: 46, scope: !7829)
!7833 = !DILocation(line: 595, column: 39, scope: !7834)
!7834 = !DILexicalBlockFile(scope: !7829, file: !888, discriminator: 1)
!7835 = !DILocation(line: 595, column: 62, scope: !7836)
!7836 = !DILexicalBlockFile(scope: !7829, file: !888, discriminator: 2)
!7837 = !DILocation(line: 595, column: 69, scope: !7836)
!7838 = !DILocation(line: 595, column: 39, scope: !7836)
!7839 = !DILocation(line: 595, column: 39, scope: !7840)
!7840 = !DILexicalBlockFile(scope: !7829, file: !888, discriminator: 3)
!7841 = !DILocation(line: 595, column: 22, scope: !7840)
!7842 = !DILocation(line: 596, column: 43, scope: !7829)
!7843 = !DILocation(line: 596, column: 47, scope: !7829)
!7844 = !DILocation(line: 596, column: 28, scope: !7829)
!7845 = !DILocation(line: 596, column: 10, scope: !7829)
!7846 = !DILocation(line: 596, column: 14, scope: !7829)
!7847 = !DILocation(line: 596, column: 26, scope: !7829)
!7848 = !DILocation(line: 597, column: 5, scope: !7829)
!7849 = !DILocation(line: 600, column: 6, scope: !7785)
!7850 = !DILocation(line: 600, column: 10, scope: !7785)
!7851 = !DILocation(line: 600, column: 22, scope: !7785)
!7852 = !DILocation(line: 602, column: 5, scope: !7785)
!7853 = !DILocation(line: 603, column: 1, scope: !7785)
!7854 = distinct !DISubprogram(name: "decode_rice", scope: !888, file: !888, line: 487, type: !7855, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!7855 = !DISubroutineType(types: !7856)
!7856 = !{!926, !3666, !907}
!7857 = !DILocalVariable(name: "gb", arg: 1, scope: !7854, file: !888, line: 487, type: !3666)
!7858 = !DILocation(line: 487, column: 43, scope: !7854)
!7859 = !DILocalVariable(name: "k", arg: 2, scope: !7854, file: !888, line: 487, type: !907)
!7860 = !DILocation(line: 487, column: 60, scope: !7854)
!7861 = !DILocalVariable(name: "max", scope: !7854, file: !888, line: 489, type: !906)
!7862 = !DILocation(line: 489, column: 9, scope: !7854)
!7863 = !DILocation(line: 489, column: 29, scope: !7854)
!7864 = !DILocation(line: 489, column: 15, scope: !7854)
!7865 = !DILocation(line: 489, column: 35, scope: !7854)
!7866 = !DILocation(line: 489, column: 33, scope: !7854)
!7867 = !DILocalVariable(name: "q", scope: !7854, file: !888, line: 490, type: !906)
!7868 = !DILocation(line: 490, column: 9, scope: !7854)
!7869 = !DILocation(line: 490, column: 23, scope: !7854)
!7870 = !DILocation(line: 490, column: 30, scope: !7854)
!7871 = !DILocation(line: 490, column: 13, scope: !7854)
!7872 = !DILocalVariable(name: "r", scope: !7854, file: !888, line: 491, type: !906)
!7873 = !DILocation(line: 491, column: 9, scope: !7854)
!7874 = !DILocation(line: 491, column: 13, scope: !7854)
!7875 = !DILocation(line: 491, column: 27, scope: !7876)
!7876 = !DILexicalBlockFile(scope: !7854, file: !888, discriminator: 1)
!7877 = !DILocation(line: 491, column: 17, scope: !7876)
!7878 = !DILocation(line: 491, column: 13, scope: !7876)
!7879 = !DILocation(line: 491, column: 35, scope: !7880)
!7880 = !DILexicalBlockFile(scope: !7854, file: !888, discriminator: 2)
!7881 = !DILocation(line: 491, column: 37, scope: !7880)
!7882 = !DILocation(line: 491, column: 33, scope: !7880)
!7883 = !DILocation(line: 491, column: 13, scope: !7880)
!7884 = !DILocation(line: 491, column: 13, scope: !7885)
!7885 = !DILexicalBlockFile(scope: !7854, file: !888, discriminator: 3)
!7886 = !DILocation(line: 491, column: 9, scope: !7885)
!7887 = !DILocation(line: 493, column: 9, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7854, file: !888, line: 493, column: 9)
!7889 = !DILocation(line: 493, column: 11, scope: !7888)
!7890 = !DILocation(line: 493, column: 9, scope: !7854)
!7891 = !DILocation(line: 494, column: 16, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7888, file: !888, line: 493, column: 16)
!7893 = !DILocation(line: 494, column: 18, scope: !7892)
!7894 = !DILocation(line: 494, column: 11, scope: !7892)
!7895 = !DILocation(line: 495, column: 28, scope: !7892)
!7896 = !DILocation(line: 495, column: 32, scope: !7892)
!7897 = !DILocation(line: 495, column: 34, scope: !7892)
!7898 = !DILocation(line: 495, column: 14, scope: !7892)
!7899 = !DILocation(line: 495, column: 11, scope: !7892)
!7900 = !DILocation(line: 496, column: 5, scope: !7892)
!7901 = !DILocation(line: 496, column: 17, scope: !7902)
!7902 = !DILexicalBlockFile(scope: !7903, file: !888, discriminator: 1)
!7903 = distinct !DILexicalBlock(scope: !7888, file: !888, line: 496, column: 16)
!7904 = !DILocation(line: 496, column: 16, scope: !7902)
!7905 = !DILocation(line: 497, column: 11, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7903, file: !888, line: 496, column: 20)
!7907 = !DILocation(line: 498, column: 5, scope: !7906)
!7908 = !DILocation(line: 499, column: 12, scope: !7854)
!7909 = !DILocation(line: 499, column: 16, scope: !7876)
!7910 = !DILocation(line: 499, column: 12, scope: !7876)
!7911 = !DILocation(line: 499, column: 21, scope: !7880)
!7912 = !DILocation(line: 499, column: 20, scope: !7880)
!7913 = !DILocation(line: 499, column: 12, scope: !7880)
!7914 = !DILocation(line: 499, column: 12, scope: !7885)
!7915 = !DILocation(line: 499, column: 5, scope: !7885)
!7916 = distinct !DISubprogram(name: "get_unary", scope: !7917, file: !7917, line: 46, type: !7918, isLocal: true, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!7917 = !DIFile(filename: "libavcodec/unary.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!7918 = !DISubroutineType(types: !7919)
!7919 = !{!906, !3666, !906, !906}
!7920 = !DILocalVariable(name: "gb", arg: 1, scope: !7916, file: !7917, line: 46, type: !3666)
!7921 = !DILocation(line: 46, column: 44, scope: !7916)
!7922 = !DILocalVariable(name: "stop", arg: 2, scope: !7916, file: !7917, line: 46, type: !906)
!7923 = !DILocation(line: 46, column: 52, scope: !7916)
!7924 = !DILocalVariable(name: "len", arg: 3, scope: !7916, file: !7917, line: 46, type: !906)
!7925 = !DILocation(line: 46, column: 62, scope: !7916)
!7926 = !DILocalVariable(name: "i", scope: !7916, file: !7917, line: 48, type: !906)
!7927 = !DILocation(line: 48, column: 9, scope: !7916)
!7928 = !DILocation(line: 50, column: 11, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7916, file: !7917, line: 50, column: 5)
!7930 = !DILocation(line: 50, column: 9, scope: !7929)
!7931 = !DILocation(line: 50, column: 16, scope: !7932)
!7932 = !DILexicalBlockFile(scope: !7933, file: !7917, discriminator: 1)
!7933 = distinct !DILexicalBlock(scope: !7929, file: !7917, line: 50, column: 5)
!7934 = !DILocation(line: 50, column: 20, scope: !7932)
!7935 = !DILocation(line: 50, column: 18, scope: !7932)
!7936 = !DILocation(line: 50, column: 24, scope: !7932)
!7937 = !DILocation(line: 50, column: 37, scope: !7938)
!7938 = !DILexicalBlockFile(scope: !7933, file: !7917, discriminator: 2)
!7939 = !DILocation(line: 50, column: 27, scope: !7938)
!7940 = !DILocation(line: 50, column: 44, scope: !7938)
!7941 = !DILocation(line: 50, column: 41, scope: !7938)
!7942 = !DILocation(line: 50, column: 5, scope: !7943)
!7943 = !DILexicalBlockFile(scope: !7929, file: !7917, discriminator: 3)
!7944 = !DILocation(line: 50, column: 5, scope: !7945)
!7945 = !DILexicalBlockFile(scope: !7929, file: !7917, discriminator: 4)
!7946 = !DILocation(line: 50, column: 51, scope: !7947)
!7947 = !DILexicalBlockFile(scope: !7933, file: !7917, discriminator: 5)
!7948 = !DILocation(line: 50, column: 5, scope: !7947)
!7949 = distinct !{!7949, !7950}
!7950 = !DILocation(line: 50, column: 5, scope: !7916)
!7951 = !DILocation(line: 51, column: 12, scope: !7916)
!7952 = !DILocation(line: 51, column: 5, scope: !7916)
!7953 = distinct !DISubprogram(name: "get_sbits_long", scope: !1736, file: !1736, line: 575, type: !5990, isLocal: true, isDefinition: true, scopeLine: 576, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!7954 = !DILocalVariable(name: "s", arg: 1, scope: !7953, file: !1736, line: 575, type: !3666)
!7955 = !DILocation(line: 575, column: 49, scope: !7953)
!7956 = !DILocalVariable(name: "n", arg: 2, scope: !7953, file: !1736, line: 575, type: !906)
!7957 = !DILocation(line: 575, column: 56, scope: !7953)
!7958 = !DILocation(line: 578, column: 10, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7953, file: !1736, line: 578, column: 9)
!7960 = !DILocation(line: 578, column: 9, scope: !7953)
!7961 = !DILocation(line: 579, column: 9, scope: !7959)
!7962 = !DILocation(line: 581, column: 38, scope: !7953)
!7963 = !DILocation(line: 581, column: 41, scope: !7953)
!7964 = !DILocation(line: 581, column: 24, scope: !7953)
!7965 = !DILocation(line: 581, column: 45, scope: !7953)
!7966 = !DILocation(line: 581, column: 12, scope: !7967)
!7967 = !DILexicalBlockFile(scope: !7953, file: !1736, discriminator: 1)
!7968 = !DILocation(line: 581, column: 5, scope: !7953)
!7969 = !DILocation(line: 582, column: 1, scope: !7953)
!7970 = distinct !DISubprogram(name: "sign_extend", scope: !7971, file: !7971, line: 130, type: !7972, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!7971 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!7972 = !DISubroutineType(types: !7973)
!7973 = !{!906, !906, !907}
!7974 = !DILocalVariable(name: "val", arg: 1, scope: !7970, file: !7971, line: 130, type: !906)
!7975 = !DILocation(line: 130, column: 58, scope: !7970)
!7976 = !DILocalVariable(name: "bits", arg: 2, scope: !7970, file: !7971, line: 130, type: !907)
!7977 = !DILocation(line: 130, column: 72, scope: !7970)
!7978 = !DILocalVariable(name: "shift", scope: !7970, file: !7971, line: 132, type: !907)
!7979 = !DILocation(line: 132, column: 14, scope: !7970)
!7980 = !DILocation(line: 132, column: 40, scope: !7970)
!7981 = !DILocation(line: 132, column: 38, scope: !7970)
!7982 = !DILocation(line: 132, column: 22, scope: !7970)
!7983 = !DILocalVariable(name: "v", scope: !7970, file: !7971, line: 133, type: !7984)
!7984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7970, file: !7971, line: 133, size: 32, align: 32, elements: !7985)
!7985 = !{!7986, !7987}
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !7984, file: !7971, line: 133, baseType: !907, size: 32, align: 32)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !7984, file: !7971, line: 133, baseType: !906, size: 32, align: 32)
!7988 = !DILocation(line: 133, column: 34, scope: !7970)
!7989 = !DILocation(line: 133, column: 38, scope: !7970)
!7990 = !DILocation(line: 133, column: 51, scope: !7970)
!7991 = !DILocation(line: 133, column: 58, scope: !7970)
!7992 = !DILocation(line: 133, column: 55, scope: !7970)
!7993 = !DILocation(line: 134, column: 14, scope: !7970)
!7994 = !DILocation(line: 134, column: 19, scope: !7970)
!7995 = !DILocation(line: 134, column: 16, scope: !7970)
!7996 = !DILocation(line: 134, column: 5, scope: !7970)
!7997 = distinct !DISubprogram(name: "als_weighting", scope: !888, file: !888, line: 1197, type: !7918, isLocal: true, isDefinition: true, scopeLine: 1198, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!7998 = !DILocation(line: 127, column: 87, scope: !3693, inlinedAt: !7999)
!7999 = distinct !DILocation(line: 1199, column: 15, scope: !8000)
!8000 = !DILexicalBlockFile(scope: !7997, file: !888, discriminator: 1)
!8001 = !DILocation(line: 127, column: 94, scope: !3693, inlinedAt: !7999)
!8002 = !DILocation(line: 127, column: 104, scope: !3693, inlinedAt: !7999)
!8003 = !DILocalVariable(name: "gb", arg: 1, scope: !7997, file: !888, line: 1197, type: !3666)
!8004 = !DILocation(line: 1197, column: 48, scope: !7997)
!8005 = !DILocalVariable(name: "k", arg: 2, scope: !7997, file: !888, line: 1197, type: !906)
!8006 = !DILocation(line: 1197, column: 56, scope: !7997)
!8007 = !DILocalVariable(name: "off", arg: 3, scope: !7997, file: !888, line: 1197, type: !906)
!8008 = !DILocation(line: 1197, column: 63, scope: !7997)
!8009 = !DILocalVariable(name: "idx", scope: !7997, file: !888, line: 1199, type: !906)
!8010 = !DILocation(line: 1199, column: 9, scope: !7997)
!8011 = !DILocation(line: 1199, column: 37, scope: !7997)
!8012 = !DILocation(line: 1199, column: 41, scope: !7997)
!8013 = !DILocation(line: 1199, column: 25, scope: !7997)
!8014 = !DILocation(line: 1199, column: 46, scope: !7997)
!8015 = !DILocation(line: 1199, column: 44, scope: !7997)
!8016 = !DILocation(line: 1199, column: 15, scope: !8000)
!8017 = !DILocation(line: 132, column: 9, scope: !3717, inlinedAt: !7999)
!8018 = !DILocation(line: 132, column: 13, scope: !3717, inlinedAt: !7999)
!8019 = !DILocation(line: 132, column: 11, scope: !3717, inlinedAt: !7999)
!8020 = !DILocation(line: 132, column: 9, scope: !3693, inlinedAt: !7999)
!8021 = !DILocation(line: 132, column: 26, scope: !3722, inlinedAt: !7999)
!8022 = !DILocation(line: 132, column: 19, scope: !3722, inlinedAt: !7999)
!8023 = !DILocation(line: 133, column: 14, scope: !3725, inlinedAt: !7999)
!8024 = !DILocation(line: 133, column: 18, scope: !3725, inlinedAt: !7999)
!8025 = !DILocation(line: 133, column: 16, scope: !3725, inlinedAt: !7999)
!8026 = !DILocation(line: 133, column: 14, scope: !3717, inlinedAt: !7999)
!8027 = !DILocation(line: 133, column: 31, scope: !3730, inlinedAt: !7999)
!8028 = !DILocation(line: 133, column: 24, scope: !3730, inlinedAt: !7999)
!8029 = !DILocation(line: 134, column: 17, scope: !3725, inlinedAt: !7999)
!8030 = !DILocation(line: 134, column: 10, scope: !3725, inlinedAt: !7999)
!8031 = !DILocation(line: 135, column: 1, scope: !3693, inlinedAt: !7999)
!8032 = !DILocation(line: 1201, column: 27, scope: !7997)
!8033 = !DILocation(line: 1201, column: 12, scope: !7997)
!8034 = !DILocation(line: 1201, column: 5, scope: !7997)
!8035 = distinct !DISubprogram(name: "decode_const_block_data", scope: !888, file: !888, line: 608, type: !8036, isLocal: true, isDefinition: true, scopeLine: 609, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!8036 = !DISubroutineType(types: !8037)
!8037 = !{null, !1703, !5192}
!8038 = !DILocalVariable(name: "ctx", arg: 1, scope: !8035, file: !888, line: 608, type: !1703)
!8039 = !DILocation(line: 608, column: 52, scope: !8035)
!8040 = !DILocalVariable(name: "bd", arg: 2, scope: !8035, file: !888, line: 608, type: !5192)
!8041 = !DILocation(line: 608, column: 71, scope: !8035)
!8042 = !DILocalVariable(name: "smp", scope: !8035, file: !888, line: 610, type: !906)
!8043 = !DILocation(line: 610, column: 9, scope: !8035)
!8044 = !DILocation(line: 610, column: 15, scope: !8035)
!8045 = !DILocation(line: 610, column: 19, scope: !8035)
!8046 = !DILocation(line: 610, column: 32, scope: !8035)
!8047 = !DILocalVariable(name: "val", scope: !8035, file: !888, line: 611, type: !926)
!8048 = !DILocation(line: 611, column: 13, scope: !8035)
!8049 = !DILocation(line: 611, column: 20, scope: !8035)
!8050 = !DILocation(line: 611, column: 24, scope: !8035)
!8051 = !DILocation(line: 611, column: 19, scope: !8035)
!8052 = !DILocalVariable(name: "dst", scope: !8035, file: !888, line: 612, type: !925)
!8053 = !DILocation(line: 612, column: 14, scope: !8035)
!8054 = !DILocation(line: 612, column: 20, scope: !8035)
!8055 = !DILocation(line: 612, column: 24, scope: !8035)
!8056 = !DILocation(line: 612, column: 36, scope: !8035)
!8057 = !DILocation(line: 615, column: 5, scope: !8035)
!8058 = !DILocation(line: 615, column: 12, scope: !8059)
!8059 = !DILexicalBlockFile(scope: !8060, file: !888, discriminator: 1)
!8060 = distinct !DILexicalBlock(scope: !8061, file: !888, line: 615, column: 5)
!8061 = distinct !DILexicalBlock(scope: !8035, file: !888, line: 615, column: 5)
!8062 = !DILocation(line: 615, column: 5, scope: !8059)
!8063 = !DILocation(line: 616, column: 18, scope: !8060)
!8064 = !DILocation(line: 616, column: 13, scope: !8060)
!8065 = !DILocation(line: 616, column: 16, scope: !8060)
!8066 = !DILocation(line: 616, column: 9, scope: !8060)
!8067 = !DILocation(line: 615, column: 20, scope: !8068)
!8068 = !DILexicalBlockFile(scope: !8060, file: !888, discriminator: 2)
!8069 = !DILocation(line: 615, column: 5, scope: !8068)
!8070 = distinct !{!8070, !8057}
!8071 = !DILocation(line: 617, column: 1, scope: !8035)
!8072 = distinct !DISubprogram(name: "decode_var_block_data", scope: !888, file: !888, line: 886, type: !5190, isLocal: true, isDefinition: true, scopeLine: 887, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!8073 = !DILocalVariable(name: "ctx", arg: 1, scope: !8072, file: !888, line: 886, type: !1703)
!8074 = !DILocation(line: 886, column: 49, scope: !8072)
!8075 = !DILocalVariable(name: "bd", arg: 2, scope: !8072, file: !888, line: 886, type: !5192)
!8076 = !DILocation(line: 886, column: 68, scope: !8072)
!8077 = !DILocalVariable(name: "sconf", scope: !8072, file: !888, line: 888, type: !1847)
!8078 = !DILocation(line: 888, column: 24, scope: !8072)
!8079 = !DILocation(line: 888, column: 33, scope: !8072)
!8080 = !DILocation(line: 888, column: 38, scope: !8072)
!8081 = !DILocalVariable(name: "block_length", scope: !8072, file: !888, line: 889, type: !907)
!8082 = !DILocation(line: 889, column: 18, scope: !8072)
!8083 = !DILocation(line: 889, column: 33, scope: !8072)
!8084 = !DILocation(line: 889, column: 37, scope: !8072)
!8085 = !DILocalVariable(name: "smp", scope: !8072, file: !888, line: 890, type: !907)
!8086 = !DILocation(line: 890, column: 18, scope: !8072)
!8087 = !DILocalVariable(name: "k", scope: !8072, file: !888, line: 891, type: !907)
!8088 = !DILocation(line: 891, column: 18, scope: !8072)
!8089 = !DILocalVariable(name: "opt_order", scope: !8072, file: !888, line: 892, type: !906)
!8090 = !DILocation(line: 892, column: 9, scope: !8072)
!8091 = !DILocation(line: 892, column: 22, scope: !8072)
!8092 = !DILocation(line: 892, column: 26, scope: !8072)
!8093 = !DILocation(line: 892, column: 21, scope: !8072)
!8094 = !DILocalVariable(name: "sb", scope: !8072, file: !888, line: 893, type: !906)
!8095 = !DILocation(line: 893, column: 9, scope: !8072)
!8096 = !DILocalVariable(name: "y", scope: !8072, file: !888, line: 894, type: !908)
!8097 = !DILocation(line: 894, column: 13, scope: !8072)
!8098 = !DILocalVariable(name: "quant_cof", scope: !8072, file: !888, line: 895, type: !925)
!8099 = !DILocation(line: 895, column: 14, scope: !8072)
!8100 = !DILocation(line: 895, column: 26, scope: !8072)
!8101 = !DILocation(line: 895, column: 30, scope: !8072)
!8102 = !DILocalVariable(name: "lpc_cof", scope: !8072, file: !888, line: 896, type: !925)
!8103 = !DILocation(line: 896, column: 14, scope: !8072)
!8104 = !DILocation(line: 896, column: 24, scope: !8072)
!8105 = !DILocation(line: 896, column: 28, scope: !8072)
!8106 = !DILocalVariable(name: "raw_samples", scope: !8072, file: !888, line: 897, type: !925)
!8107 = !DILocation(line: 897, column: 14, scope: !8072)
!8108 = !DILocation(line: 897, column: 28, scope: !8072)
!8109 = !DILocation(line: 897, column: 32, scope: !8072)
!8110 = !DILocalVariable(name: "raw_samples_end", scope: !8072, file: !888, line: 898, type: !925)
!8111 = !DILocation(line: 898, column: 14, scope: !8072)
!8112 = !DILocation(line: 898, column: 32, scope: !8072)
!8113 = !DILocation(line: 898, column: 36, scope: !8072)
!8114 = !DILocation(line: 898, column: 50, scope: !8072)
!8115 = !DILocation(line: 898, column: 54, scope: !8072)
!8116 = !DILocation(line: 898, column: 48, scope: !8072)
!8117 = !DILocalVariable(name: "lpc_cof_reversed", scope: !8072, file: !888, line: 899, type: !925)
!8118 = !DILocation(line: 899, column: 14, scope: !8072)
!8119 = !DILocation(line: 899, column: 33, scope: !8072)
!8120 = !DILocation(line: 899, column: 38, scope: !8072)
!8121 = !DILocation(line: 902, column: 10, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8072, file: !888, line: 902, column: 9)
!8123 = !DILocation(line: 902, column: 14, scope: !8122)
!8124 = !DILocation(line: 902, column: 9, scope: !8122)
!8125 = !DILocation(line: 902, column: 9, scope: !8072)
!8126 = !DILocalVariable(name: "ltp_smp", scope: !8127, file: !888, line: 903, type: !906)
!8127 = distinct !DILexicalBlock(scope: !8122, file: !888, line: 902, column: 23)
!8128 = !DILocation(line: 903, column: 13, scope: !8127)
!8129 = !DILocation(line: 905, column: 27, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8127, file: !888, line: 905, column: 9)
!8131 = !DILocation(line: 905, column: 31, scope: !8130)
!8132 = !DILocation(line: 905, column: 26, scope: !8130)
!8133 = !DILocation(line: 905, column: 39, scope: !8130)
!8134 = !DILocation(line: 905, column: 44, scope: !8130)
!8135 = !DILocation(line: 905, column: 25, scope: !8130)
!8136 = !DILocation(line: 905, column: 54, scope: !8137)
!8137 = !DILexicalBlockFile(scope: !8130, file: !888, discriminator: 1)
!8138 = !DILocation(line: 905, column: 58, scope: !8137)
!8139 = !DILocation(line: 905, column: 53, scope: !8137)
!8140 = !DILocation(line: 905, column: 66, scope: !8137)
!8141 = !DILocation(line: 905, column: 25, scope: !8137)
!8142 = !DILocation(line: 905, column: 25, scope: !8143)
!8143 = !DILexicalBlockFile(scope: !8130, file: !888, discriminator: 2)
!8144 = !DILocation(line: 905, column: 25, scope: !8145)
!8145 = !DILexicalBlockFile(scope: !8130, file: !888, discriminator: 3)
!8146 = !DILocation(line: 905, column: 22, scope: !8145)
!8147 = !DILocation(line: 905, column: 14, scope: !8145)
!8148 = !DILocation(line: 905, column: 79, scope: !8149)
!8149 = !DILexicalBlockFile(scope: !8150, file: !888, discriminator: 4)
!8150 = distinct !DILexicalBlock(scope: !8130, file: !888, line: 905, column: 9)
!8151 = !DILocation(line: 905, column: 89, scope: !8149)
!8152 = !DILocation(line: 905, column: 87, scope: !8149)
!8153 = !DILocation(line: 905, column: 9, scope: !8149)
!8154 = !DILocalVariable(name: "center", scope: !8155, file: !888, line: 906, type: !906)
!8155 = distinct !DILexicalBlock(scope: !8150, file: !888, line: 905, column: 114)
!8156 = !DILocation(line: 906, column: 17, scope: !8155)
!8157 = !DILocation(line: 906, column: 26, scope: !8155)
!8158 = !DILocation(line: 906, column: 37, scope: !8155)
!8159 = !DILocation(line: 906, column: 41, scope: !8155)
!8160 = !DILocation(line: 906, column: 36, scope: !8155)
!8161 = !DILocation(line: 906, column: 34, scope: !8155)
!8162 = !DILocalVariable(name: "begin", scope: !8155, file: !888, line: 907, type: !906)
!8163 = !DILocation(line: 907, column: 17, scope: !8155)
!8164 = !DILocation(line: 907, column: 33, scope: !8155)
!8165 = !DILocation(line: 907, column: 40, scope: !8155)
!8166 = !DILocation(line: 907, column: 30, scope: !8155)
!8167 = !DILocation(line: 907, column: 26, scope: !8155)
!8168 = !DILocation(line: 907, column: 26, scope: !8169)
!8169 = !DILexicalBlockFile(scope: !8155, file: !888, discriminator: 1)
!8170 = !DILocation(line: 907, column: 54, scope: !8171)
!8171 = !DILexicalBlockFile(scope: !8155, file: !888, discriminator: 2)
!8172 = !DILocation(line: 907, column: 61, scope: !8171)
!8173 = !DILocation(line: 907, column: 26, scope: !8171)
!8174 = !DILocation(line: 907, column: 26, scope: !8175)
!8175 = !DILexicalBlockFile(scope: !8155, file: !888, discriminator: 3)
!8176 = !DILocation(line: 907, column: 17, scope: !8175)
!8177 = !DILocalVariable(name: "end", scope: !8155, file: !888, line: 908, type: !906)
!8178 = !DILocation(line: 908, column: 17, scope: !8155)
!8179 = !DILocation(line: 908, column: 23, scope: !8155)
!8180 = !DILocation(line: 908, column: 30, scope: !8155)
!8181 = !DILocalVariable(name: "tab", scope: !8155, file: !888, line: 909, type: !906)
!8182 = !DILocation(line: 909, column: 17, scope: !8155)
!8183 = !DILocation(line: 909, column: 28, scope: !8155)
!8184 = !DILocation(line: 909, column: 34, scope: !8155)
!8185 = !DILocation(line: 909, column: 32, scope: !8155)
!8186 = !DILocation(line: 909, column: 25, scope: !8155)
!8187 = !DILocalVariable(name: "base", scope: !8155, file: !888, line: 910, type: !906)
!8188 = !DILocation(line: 910, column: 17, scope: !8155)
!8189 = !DILocation(line: 912, column: 15, scope: !8155)
!8190 = !DILocation(line: 914, column: 25, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8155, file: !888, line: 914, column: 13)
!8192 = !DILocation(line: 914, column: 23, scope: !8191)
!8193 = !DILocation(line: 914, column: 18, scope: !8191)
!8194 = !DILocation(line: 914, column: 32, scope: !8195)
!8195 = !DILexicalBlockFile(scope: !8196, file: !888, discriminator: 1)
!8196 = distinct !DILexicalBlock(scope: !8191, file: !888, line: 914, column: 13)
!8197 = !DILocation(line: 914, column: 39, scope: !8195)
!8198 = !DILocation(line: 914, column: 37, scope: !8195)
!8199 = !DILocation(line: 914, column: 13, scope: !8195)
!8200 = !DILocation(line: 915, column: 46, scope: !8196)
!8201 = !DILocation(line: 915, column: 33, scope: !8196)
!8202 = !DILocation(line: 915, column: 37, scope: !8196)
!8203 = !DILocation(line: 915, column: 23, scope: !8196)
!8204 = !DILocation(line: 915, column: 76, scope: !8196)
!8205 = !DILocation(line: 915, column: 64, scope: !8196)
!8206 = !DILocation(line: 915, column: 54, scope: !8196)
!8207 = !DILocation(line: 915, column: 52, scope: !8196)
!8208 = !DILocation(line: 915, column: 19, scope: !8196)
!8209 = !DILocation(line: 915, column: 17, scope: !8196)
!8210 = !DILocation(line: 914, column: 48, scope: !8211)
!8211 = !DILexicalBlockFile(scope: !8196, file: !888, discriminator: 2)
!8212 = !DILocation(line: 914, column: 55, scope: !8211)
!8213 = !DILocation(line: 914, column: 13, scope: !8211)
!8214 = distinct !{!8214, !8215}
!8215 = !DILocation(line: 914, column: 13, scope: !8155)
!8216 = !DILocation(line: 917, column: 37, scope: !8155)
!8217 = !DILocation(line: 917, column: 39, scope: !8155)
!8218 = !DILocation(line: 917, column: 25, scope: !8155)
!8219 = !DILocation(line: 917, column: 13, scope: !8155)
!8220 = !DILocation(line: 917, column: 34, scope: !8155)
!8221 = !DILocation(line: 918, column: 9, scope: !8155)
!8222 = !DILocation(line: 905, column: 110, scope: !8223)
!8223 = !DILexicalBlockFile(scope: !8150, file: !888, discriminator: 5)
!8224 = !DILocation(line: 905, column: 9, scope: !8223)
!8225 = distinct !{!8225, !8226}
!8226 = !DILocation(line: 905, column: 9, scope: !8127)
!8227 = !DILocation(line: 919, column: 5, scope: !8127)
!8228 = !DILocation(line: 922, column: 9, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8072, file: !888, line: 922, column: 9)
!8230 = !DILocation(line: 922, column: 13, scope: !8229)
!8231 = !DILocation(line: 922, column: 9, scope: !8072)
!8232 = !DILocation(line: 923, column: 18, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !888, line: 923, column: 9)
!8234 = distinct !DILexicalBlock(scope: !8229, file: !888, line: 922, column: 23)
!8235 = !DILocation(line: 923, column: 14, scope: !8233)
!8236 = !DILocation(line: 923, column: 23, scope: !8237)
!8237 = !DILexicalBlockFile(scope: !8238, file: !888, discriminator: 1)
!8238 = distinct !DILexicalBlock(scope: !8233, file: !888, line: 923, column: 9)
!8239 = !DILocation(line: 923, column: 31, scope: !8237)
!8240 = !DILocation(line: 923, column: 45, scope: !8237)
!8241 = !DILocation(line: 923, column: 42, scope: !8237)
!8242 = !DILocation(line: 923, column: 30, scope: !8237)
!8243 = !DILocation(line: 923, column: 62, scope: !8244)
!8244 = !DILexicalBlockFile(scope: !8238, file: !888, discriminator: 2)
!8245 = !DILocation(line: 923, column: 30, scope: !8244)
!8246 = !DILocation(line: 923, column: 79, scope: !8247)
!8247 = !DILexicalBlockFile(scope: !8238, file: !888, discriminator: 3)
!8248 = !DILocation(line: 923, column: 30, scope: !8247)
!8249 = !DILocation(line: 923, column: 30, scope: !8250)
!8250 = !DILexicalBlockFile(scope: !8238, file: !888, discriminator: 4)
!8251 = !DILocation(line: 923, column: 27, scope: !8250)
!8252 = !DILocation(line: 923, column: 9, scope: !8250)
!8253 = !DILocation(line: 924, column: 15, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8238, file: !888, line: 923, column: 99)
!8255 = !DILocation(line: 926, column: 21, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8254, file: !888, line: 926, column: 13)
!8257 = !DILocation(line: 926, column: 18, scope: !8256)
!8258 = !DILocation(line: 926, column: 26, scope: !8259)
!8259 = !DILexicalBlockFile(scope: !8260, file: !888, discriminator: 1)
!8260 = distinct !DILexicalBlock(scope: !8256, file: !888, line: 926, column: 13)
!8261 = !DILocation(line: 926, column: 31, scope: !8259)
!8262 = !DILocation(line: 926, column: 29, scope: !8259)
!8263 = !DILocation(line: 926, column: 13, scope: !8259)
!8264 = !DILocation(line: 927, column: 41, scope: !8260)
!8265 = !DILocation(line: 927, column: 33, scope: !8260)
!8266 = !DILocation(line: 927, column: 23, scope: !8260)
!8267 = !DILocation(line: 927, column: 72, scope: !8260)
!8268 = !DILocation(line: 927, column: 75, scope: !8260)
!8269 = !DILocation(line: 927, column: 70, scope: !8260)
!8270 = !DILocation(line: 927, column: 58, scope: !8260)
!8271 = !DILocation(line: 927, column: 48, scope: !8260)
!8272 = !DILocation(line: 927, column: 46, scope: !8260)
!8273 = !DILocation(line: 927, column: 19, scope: !8260)
!8274 = !DILocation(line: 927, column: 17, scope: !8260)
!8275 = !DILocation(line: 926, column: 38, scope: !8276)
!8276 = !DILexicalBlockFile(scope: !8260, file: !888, discriminator: 2)
!8277 = !DILocation(line: 926, column: 13, scope: !8276)
!8278 = distinct !{!8278, !8279}
!8279 = !DILocation(line: 926, column: 13, scope: !8254)
!8280 = !DILocation(line: 929, column: 31, scope: !8254)
!8281 = !DILocation(line: 929, column: 33, scope: !8254)
!8282 = !DILocation(line: 929, column: 25, scope: !8254)
!8283 = !DILocation(line: 929, column: 28, scope: !8254)
!8284 = !DILocation(line: 930, column: 27, scope: !8254)
!8285 = !DILocation(line: 930, column: 32, scope: !8254)
!8286 = !DILocation(line: 930, column: 43, scope: !8254)
!8287 = !DILocation(line: 930, column: 13, scope: !8254)
!8288 = !DILocation(line: 931, column: 9, scope: !8254)
!8289 = !DILocation(line: 923, column: 95, scope: !8290)
!8290 = !DILexicalBlockFile(scope: !8238, file: !888, discriminator: 5)
!8291 = !DILocation(line: 923, column: 9, scope: !8290)
!8292 = distinct !{!8292, !8293}
!8293 = !DILocation(line: 923, column: 9, scope: !8234)
!8294 = !DILocation(line: 932, column: 5, scope: !8234)
!8295 = !DILocation(line: 933, column: 16, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8297, file: !888, line: 933, column: 9)
!8297 = distinct !DILexicalBlock(scope: !8229, file: !888, line: 932, column: 12)
!8298 = !DILocation(line: 933, column: 14, scope: !8296)
!8299 = !DILocation(line: 933, column: 21, scope: !8300)
!8300 = !DILexicalBlockFile(scope: !8301, file: !888, discriminator: 1)
!8301 = distinct !DILexicalBlock(scope: !8296, file: !888, line: 933, column: 9)
!8302 = !DILocation(line: 933, column: 25, scope: !8300)
!8303 = !DILocation(line: 933, column: 23, scope: !8300)
!8304 = !DILocation(line: 933, column: 9, scope: !8300)
!8305 = !DILocation(line: 934, column: 27, scope: !8301)
!8306 = !DILocation(line: 934, column: 30, scope: !8301)
!8307 = !DILocation(line: 934, column: 41, scope: !8301)
!8308 = !DILocation(line: 934, column: 13, scope: !8301)
!8309 = !DILocation(line: 933, column: 37, scope: !8310)
!8310 = !DILexicalBlockFile(scope: !8301, file: !888, discriminator: 2)
!8311 = !DILocation(line: 933, column: 9, scope: !8310)
!8312 = distinct !{!8312, !8313}
!8313 = !DILocation(line: 933, column: 9, scope: !8297)
!8314 = !DILocation(line: 937, column: 14, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8297, file: !888, line: 937, column: 13)
!8316 = !DILocation(line: 937, column: 18, scope: !8315)
!8317 = !DILocation(line: 937, column: 13, scope: !8315)
!8318 = !DILocation(line: 937, column: 13, scope: !8297)
!8319 = !DILocation(line: 938, column: 20, scope: !8315)
!8320 = !DILocation(line: 938, column: 24, scope: !8315)
!8321 = !DILocation(line: 938, column: 13, scope: !8315)
!8322 = !DILocation(line: 938, column: 42, scope: !8315)
!8323 = !DILocation(line: 938, column: 56, scope: !8315)
!8324 = !DILocation(line: 938, column: 63, scope: !8315)
!8325 = !DILocation(line: 938, column: 54, scope: !8315)
!8326 = !DILocation(line: 939, column: 52, scope: !8315)
!8327 = !DILocation(line: 939, column: 59, scope: !8315)
!8328 = !DILocation(line: 939, column: 50, scope: !8315)
!8329 = !DILocation(line: 942, column: 13, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8297, file: !888, line: 942, column: 13)
!8331 = !DILocation(line: 942, column: 17, scope: !8330)
!8332 = !DILocation(line: 942, column: 27, scope: !8330)
!8333 = !DILocation(line: 942, column: 30, scope: !8334)
!8334 = !DILexicalBlockFile(scope: !8330, file: !888, discriminator: 1)
!8335 = !DILocation(line: 942, column: 34, scope: !8334)
!8336 = !DILocation(line: 942, column: 13, scope: !8334)
!8337 = !DILocalVariable(name: "left", scope: !8338, file: !888, line: 943, type: !925)
!8338 = distinct !DILexicalBlock(scope: !8330, file: !888, line: 942, column: 45)
!8339 = !DILocation(line: 943, column: 22, scope: !8338)
!8340 = !DILocalVariable(name: "right", scope: !8338, file: !888, line: 943, type: !925)
!8341 = !DILocation(line: 943, column: 29, scope: !8338)
!8342 = !DILocation(line: 945, column: 17, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8338, file: !888, line: 945, column: 17)
!8344 = !DILocation(line: 945, column: 21, scope: !8343)
!8345 = !DILocation(line: 945, column: 33, scope: !8343)
!8346 = !DILocation(line: 945, column: 31, scope: !8343)
!8347 = !DILocation(line: 945, column: 17, scope: !8338)
!8348 = !DILocation(line: 946, column: 24, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8343, file: !888, line: 945, column: 46)
!8350 = !DILocation(line: 946, column: 22, scope: !8349)
!8351 = !DILocation(line: 947, column: 25, scope: !8349)
!8352 = !DILocation(line: 947, column: 29, scope: !8349)
!8353 = !DILocation(line: 947, column: 23, scope: !8349)
!8354 = !DILocation(line: 948, column: 13, scope: !8349)
!8355 = !DILocation(line: 949, column: 24, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8343, file: !888, line: 948, column: 20)
!8357 = !DILocation(line: 949, column: 28, scope: !8356)
!8358 = !DILocation(line: 949, column: 22, scope: !8356)
!8359 = !DILocation(line: 950, column: 25, scope: !8356)
!8360 = !DILocation(line: 950, column: 23, scope: !8356)
!8361 = !DILocation(line: 953, column: 21, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8338, file: !888, line: 953, column: 13)
!8363 = !DILocation(line: 953, column: 18, scope: !8362)
!8364 = !DILocation(line: 953, column: 27, scope: !8365)
!8365 = !DILexicalBlockFile(scope: !8366, file: !888, discriminator: 1)
!8366 = distinct !DILexicalBlock(scope: !8362, file: !888, line: 953, column: 13)
!8367 = !DILocation(line: 953, column: 34, scope: !8365)
!8368 = !DILocation(line: 953, column: 41, scope: !8365)
!8369 = !DILocation(line: 953, column: 33, scope: !8365)
!8370 = !DILocation(line: 953, column: 30, scope: !8365)
!8371 = !DILocation(line: 953, column: 13, scope: !8365)
!8372 = !DILocation(line: 954, column: 41, scope: !8366)
!8373 = !DILocation(line: 954, column: 35, scope: !8366)
!8374 = !DILocation(line: 954, column: 52, scope: !8366)
!8375 = !DILocation(line: 954, column: 47, scope: !8366)
!8376 = !DILocation(line: 954, column: 45, scope: !8366)
!8377 = !DILocation(line: 954, column: 29, scope: !8366)
!8378 = !DILocation(line: 954, column: 17, scope: !8366)
!8379 = !DILocation(line: 954, column: 33, scope: !8366)
!8380 = !DILocation(line: 953, column: 54, scope: !8381)
!8381 = !DILexicalBlockFile(scope: !8366, file: !888, discriminator: 2)
!8382 = !DILocation(line: 953, column: 13, scope: !8381)
!8383 = distinct !{!8383, !8384}
!8384 = !DILocation(line: 953, column: 13, scope: !8338)
!8385 = !DILocation(line: 955, column: 9, scope: !8338)
!8386 = !DILocation(line: 958, column: 14, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8297, file: !888, line: 958, column: 13)
!8388 = !DILocation(line: 958, column: 18, scope: !8387)
!8389 = !DILocation(line: 958, column: 13, scope: !8387)
!8390 = !DILocation(line: 958, column: 13, scope: !8297)
!8391 = !DILocation(line: 959, column: 21, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8387, file: !888, line: 959, column: 13)
!8393 = !DILocation(line: 959, column: 18, scope: !8392)
!8394 = !DILocation(line: 959, column: 27, scope: !8395)
!8395 = !DILexicalBlockFile(scope: !8396, file: !888, discriminator: 1)
!8396 = distinct !DILexicalBlock(scope: !8392, file: !888, line: 959, column: 13)
!8397 = !DILocation(line: 959, column: 34, scope: !8395)
!8398 = !DILocation(line: 959, column: 41, scope: !8395)
!8399 = !DILocation(line: 959, column: 33, scope: !8395)
!8400 = !DILocation(line: 959, column: 30, scope: !8395)
!8401 = !DILocation(line: 959, column: 13, scope: !8395)
!8402 = !DILocation(line: 960, column: 38, scope: !8396)
!8403 = !DILocation(line: 960, column: 42, scope: !8396)
!8404 = !DILocation(line: 960, column: 37, scope: !8396)
!8405 = !DILocation(line: 960, column: 29, scope: !8396)
!8406 = !DILocation(line: 960, column: 17, scope: !8396)
!8407 = !DILocation(line: 960, column: 33, scope: !8396)
!8408 = !DILocation(line: 959, column: 54, scope: !8409)
!8409 = !DILexicalBlockFile(scope: !8396, file: !888, discriminator: 2)
!8410 = !DILocation(line: 959, column: 13, scope: !8409)
!8411 = distinct !{!8411, !8412}
!8412 = !DILocation(line: 959, column: 13, scope: !8387)
!8413 = !DILocation(line: 960, column: 42, scope: !8414)
!8414 = !DILexicalBlockFile(scope: !8392, file: !888, discriminator: 1)
!8415 = !DILocation(line: 964, column: 15, scope: !8072)
!8416 = !DILocation(line: 964, column: 25, scope: !8072)
!8417 = !DILocation(line: 964, column: 23, scope: !8072)
!8418 = !DILocation(line: 964, column: 13, scope: !8072)
!8419 = !DILocation(line: 966, column: 13, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8072, file: !888, line: 966, column: 5)
!8421 = !DILocation(line: 966, column: 10, scope: !8420)
!8422 = !DILocation(line: 966, column: 18, scope: !8423)
!8423 = !DILexicalBlockFile(scope: !8424, file: !888, discriminator: 1)
!8424 = distinct !DILexicalBlock(scope: !8420, file: !888, line: 966, column: 5)
!8425 = !DILocation(line: 966, column: 23, scope: !8423)
!8426 = !DILocation(line: 966, column: 21, scope: !8423)
!8427 = !DILocation(line: 966, column: 5, scope: !8423)
!8428 = !DILocation(line: 967, column: 42, scope: !8424)
!8429 = !DILocation(line: 967, column: 45, scope: !8424)
!8430 = !DILocation(line: 967, column: 40, scope: !8424)
!8431 = !DILocation(line: 967, column: 32, scope: !8424)
!8432 = !DILocation(line: 967, column: 26, scope: !8424)
!8433 = !DILocation(line: 967, column: 9, scope: !8424)
!8434 = !DILocation(line: 967, column: 30, scope: !8424)
!8435 = !DILocation(line: 966, column: 36, scope: !8436)
!8436 = !DILexicalBlockFile(scope: !8424, file: !888, discriminator: 2)
!8437 = !DILocation(line: 966, column: 5, scope: !8436)
!8438 = distinct !{!8438, !8439}
!8439 = !DILocation(line: 966, column: 5, scope: !8072)
!8440 = !DILocation(line: 970, column: 19, scope: !8072)
!8441 = !DILocation(line: 970, column: 23, scope: !8072)
!8442 = !DILocation(line: 970, column: 37, scope: !8072)
!8443 = !DILocation(line: 970, column: 35, scope: !8072)
!8444 = !DILocation(line: 970, column: 17, scope: !8072)
!8445 = !DILocation(line: 971, column: 15, scope: !8072)
!8446 = !DILocation(line: 971, column: 34, scope: !8072)
!8447 = !DILocation(line: 971, column: 32, scope: !8072)
!8448 = !DILocation(line: 971, column: 13, scope: !8072)
!8449 = !DILocation(line: 973, column: 5, scope: !8072)
!8450 = !DILocation(line: 973, column: 12, scope: !8451)
!8451 = !DILexicalBlockFile(scope: !8452, file: !888, discriminator: 1)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !888, line: 973, column: 5)
!8453 = distinct !DILexicalBlock(scope: !8072, file: !888, line: 973, column: 5)
!8454 = !DILocation(line: 973, column: 26, scope: !8451)
!8455 = !DILocation(line: 973, column: 24, scope: !8451)
!8456 = !DILocation(line: 973, column: 5, scope: !8451)
!8457 = !DILocation(line: 974, column: 11, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8452, file: !888, line: 973, column: 58)
!8459 = !DILocation(line: 976, column: 20, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8458, file: !888, line: 976, column: 9)
!8461 = !DILocation(line: 976, column: 19, scope: !8460)
!8462 = !DILocation(line: 976, column: 17, scope: !8460)
!8463 = !DILocation(line: 976, column: 14, scope: !8460)
!8464 = !DILocation(line: 976, column: 31, scope: !8465)
!8465 = !DILexicalBlockFile(scope: !8466, file: !888, discriminator: 1)
!8466 = distinct !DILexicalBlock(scope: !8460, file: !888, line: 976, column: 9)
!8467 = !DILocation(line: 976, column: 34, scope: !8465)
!8468 = !DILocation(line: 976, column: 9, scope: !8465)
!8469 = !DILocation(line: 977, column: 37, scope: !8466)
!8470 = !DILocation(line: 977, column: 29, scope: !8466)
!8471 = !DILocation(line: 977, column: 19, scope: !8466)
!8472 = !DILocation(line: 977, column: 66, scope: !8466)
!8473 = !DILocation(line: 977, column: 54, scope: !8466)
!8474 = !DILocation(line: 977, column: 44, scope: !8466)
!8475 = !DILocation(line: 977, column: 42, scope: !8466)
!8476 = !DILocation(line: 977, column: 15, scope: !8466)
!8477 = !DILocation(line: 977, column: 13, scope: !8466)
!8478 = !DILocation(line: 976, column: 41, scope: !8479)
!8479 = !DILexicalBlockFile(scope: !8466, file: !888, discriminator: 2)
!8480 = !DILocation(line: 976, column: 9, scope: !8479)
!8481 = distinct !{!8481, !8482}
!8482 = !DILocation(line: 976, column: 9, scope: !8458)
!8483 = !DILocation(line: 979, column: 25, scope: !8458)
!8484 = !DILocation(line: 979, column: 27, scope: !8458)
!8485 = !DILocation(line: 979, column: 10, scope: !8458)
!8486 = !DILocation(line: 979, column: 22, scope: !8458)
!8487 = !DILocation(line: 980, column: 5, scope: !8458)
!8488 = !DILocation(line: 973, column: 54, scope: !8489)
!8489 = !DILexicalBlockFile(scope: !8452, file: !888, discriminator: 2)
!8490 = !DILocation(line: 973, column: 5, scope: !8489)
!8491 = distinct !{!8491, !8449}
!8492 = !DILocation(line: 982, column: 19, scope: !8072)
!8493 = !DILocation(line: 982, column: 23, scope: !8072)
!8494 = !DILocation(line: 982, column: 17, scope: !8072)
!8495 = !DILocation(line: 985, column: 10, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8072, file: !888, line: 985, column: 9)
!8497 = !DILocation(line: 985, column: 14, scope: !8496)
!8498 = !DILocation(line: 985, column: 9, scope: !8496)
!8499 = !DILocation(line: 985, column: 9, scope: !8072)
!8500 = !DILocation(line: 986, column: 16, scope: !8496)
!8501 = !DILocation(line: 986, column: 30, scope: !8496)
!8502 = !DILocation(line: 986, column: 37, scope: !8496)
!8503 = !DILocation(line: 986, column: 28, scope: !8496)
!8504 = !DILocation(line: 986, column: 9, scope: !8496)
!8505 = !DILocation(line: 986, column: 48, scope: !8496)
!8506 = !DILocation(line: 986, column: 52, scope: !8496)
!8507 = !DILocation(line: 987, column: 39, scope: !8496)
!8508 = !DILocation(line: 987, column: 46, scope: !8496)
!8509 = !DILocation(line: 987, column: 37, scope: !8496)
!8510 = !DILocation(line: 989, column: 5, scope: !8072)
!8511 = distinct !DISubprogram(name: "parcor_to_lpc", scope: !888, file: !888, line: 505, type: !8512, isLocal: true, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!8512 = !DISubroutineType(types: !8513)
!8513 = !{null, !907, !8514, !925}
!8514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8515, size: 64, align: 64)
!8515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!8516 = !DILocalVariable(name: "k", arg: 1, scope: !8511, file: !888, line: 505, type: !907)
!8517 = !DILocation(line: 505, column: 40, scope: !8511)
!8518 = !DILocalVariable(name: "par", arg: 2, scope: !8511, file: !888, line: 505, type: !8514)
!8519 = !DILocation(line: 505, column: 58, scope: !8511)
!8520 = !DILocalVariable(name: "cof", arg: 3, scope: !8511, file: !888, line: 505, type: !925)
!8521 = !DILocation(line: 505, column: 72, scope: !8511)
!8522 = !DILocalVariable(name: "i", scope: !8511, file: !888, line: 507, type: !906)
!8523 = !DILocation(line: 507, column: 9, scope: !8511)
!8524 = !DILocalVariable(name: "j", scope: !8511, file: !888, line: 507, type: !906)
!8525 = !DILocation(line: 507, column: 12, scope: !8511)
!8526 = !DILocation(line: 509, column: 12, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8511, file: !888, line: 509, column: 5)
!8528 = !DILocation(line: 509, column: 21, scope: !8527)
!8529 = !DILocation(line: 509, column: 23, scope: !8527)
!8530 = !DILocation(line: 509, column: 19, scope: !8527)
!8531 = !DILocation(line: 509, column: 10, scope: !8527)
!8532 = !DILocation(line: 509, column: 28, scope: !8533)
!8533 = !DILexicalBlockFile(scope: !8534, file: !888, discriminator: 1)
!8534 = distinct !DILexicalBlock(scope: !8527, file: !888, line: 509, column: 5)
!8535 = !DILocation(line: 509, column: 32, scope: !8533)
!8536 = !DILocation(line: 509, column: 30, scope: !8533)
!8537 = !DILocation(line: 509, column: 5, scope: !8533)
!8538 = !DILocalVariable(name: "tmp1", scope: !8539, file: !888, line: 510, type: !906)
!8539 = distinct !DILexicalBlock(scope: !8534, file: !888, line: 509, column: 45)
!8540 = !DILocation(line: 510, column: 13, scope: !8539)
!8541 = !DILocation(line: 510, column: 37, scope: !8539)
!8542 = !DILocation(line: 510, column: 33, scope: !8539)
!8543 = !DILocation(line: 510, column: 23, scope: !8539)
!8544 = !DILocation(line: 510, column: 57, scope: !8539)
!8545 = !DILocation(line: 510, column: 53, scope: !8539)
!8546 = !DILocation(line: 510, column: 43, scope: !8539)
!8547 = !DILocation(line: 510, column: 41, scope: !8539)
!8548 = !DILocation(line: 510, column: 62, scope: !8539)
!8549 = !DILocation(line: 510, column: 75, scope: !8539)
!8550 = !DILocation(line: 510, column: 20, scope: !8539)
!8551 = !DILocation(line: 511, column: 36, scope: !8539)
!8552 = !DILocation(line: 511, column: 32, scope: !8539)
!8553 = !DILocation(line: 511, column: 22, scope: !8539)
!8554 = !DILocation(line: 511, column: 56, scope: !8539)
!8555 = !DILocation(line: 511, column: 52, scope: !8539)
!8556 = !DILocation(line: 511, column: 42, scope: !8539)
!8557 = !DILocation(line: 511, column: 40, scope: !8539)
!8558 = !DILocation(line: 511, column: 61, scope: !8539)
!8559 = !DILocation(line: 511, column: 74, scope: !8539)
!8560 = !DILocation(line: 511, column: 13, scope: !8539)
!8561 = !DILocation(line: 511, column: 9, scope: !8539)
!8562 = !DILocation(line: 511, column: 16, scope: !8539)
!8563 = !DILocation(line: 512, column: 19, scope: !8539)
!8564 = !DILocation(line: 512, column: 13, scope: !8539)
!8565 = !DILocation(line: 512, column: 9, scope: !8539)
!8566 = !DILocation(line: 512, column: 16, scope: !8539)
!8567 = !DILocation(line: 513, column: 5, scope: !8539)
!8568 = !DILocation(line: 509, column: 36, scope: !8569)
!8569 = !DILexicalBlockFile(scope: !8534, file: !888, discriminator: 2)
!8570 = !DILocation(line: 509, column: 41, scope: !8569)
!8571 = !DILocation(line: 509, column: 5, scope: !8569)
!8572 = distinct !{!8572, !8573}
!8573 = !DILocation(line: 509, column: 5, scope: !8511)
!8574 = !DILocation(line: 514, column: 9, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8511, file: !888, line: 514, column: 9)
!8576 = !DILocation(line: 514, column: 14, scope: !8575)
!8577 = !DILocation(line: 514, column: 11, scope: !8575)
!8578 = !DILocation(line: 514, column: 9, scope: !8511)
!8579 = !DILocation(line: 515, column: 36, scope: !8575)
!8580 = !DILocation(line: 515, column: 32, scope: !8575)
!8581 = !DILocation(line: 515, column: 22, scope: !8575)
!8582 = !DILocation(line: 515, column: 56, scope: !8575)
!8583 = !DILocation(line: 515, column: 52, scope: !8575)
!8584 = !DILocation(line: 515, column: 42, scope: !8575)
!8585 = !DILocation(line: 515, column: 40, scope: !8575)
!8586 = !DILocation(line: 515, column: 61, scope: !8575)
!8587 = !DILocation(line: 515, column: 74, scope: !8575)
!8588 = !DILocation(line: 515, column: 13, scope: !8575)
!8589 = !DILocation(line: 515, column: 9, scope: !8575)
!8590 = !DILocation(line: 515, column: 16, scope: !8575)
!8591 = !DILocation(line: 517, column: 18, scope: !8511)
!8592 = !DILocation(line: 517, column: 14, scope: !8511)
!8593 = !DILocation(line: 517, column: 9, scope: !8511)
!8594 = !DILocation(line: 517, column: 5, scope: !8511)
!8595 = !DILocation(line: 517, column: 12, scope: !8511)
!8596 = !DILocation(line: 518, column: 1, scope: !8511)
!8597 = distinct !DISubprogram(name: "av_int2sf_ieee754", scope: !1678, file: !1678, line: 53, type: !8598, isLocal: true, isDefinition: true, scopeLine: 53, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!8598 = !DISubroutineType(types: !8599)
!8599 = !{!1680, !908, !906}
!8600 = !DILocalVariable(name: "n", arg: 1, scope: !8597, file: !1678, line: 53, type: !908)
!8601 = !DILocation(line: 53, column: 59, scope: !8597)
!8602 = !DILocalVariable(name: "e", arg: 2, scope: !8597, file: !1678, line: 53, type: !906)
!8603 = !DILocation(line: 53, column: 66, scope: !8597)
!8604 = !DILocalVariable(name: "sign", scope: !8597, file: !1678, line: 54, type: !906)
!8605 = !DILocation(line: 54, column: 9, scope: !8597)
!8606 = !DILocation(line: 56, column: 9, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8597, file: !1678, line: 56, column: 9)
!8608 = !DILocation(line: 56, column: 11, scope: !8607)
!8609 = !DILocation(line: 56, column: 9, scope: !8597)
!8610 = !DILocation(line: 57, column: 14, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8607, file: !1678, line: 56, column: 16)
!8612 = !DILocation(line: 58, column: 11, scope: !8611)
!8613 = !DILocation(line: 59, column: 5, scope: !8611)
!8614 = !DILocation(line: 60, column: 56, scope: !8597)
!8615 = !DILocation(line: 60, column: 57, scope: !8597)
!8616 = !DILocation(line: 60, column: 63, scope: !8597)
!8617 = !DILocation(line: 60, column: 65, scope: !8597)
!8618 = !DILocation(line: 60, column: 76, scope: !8597)
!8619 = !DILocation(line: 60, column: 74, scope: !8597)
!8620 = !DILocation(line: 60, column: 12, scope: !8597)
!8621 = !DILocation(line: 60, column: 5, scope: !8597)
!8622 = distinct !DISubprogram(name: "av_bits2sf_ieee754", scope: !1678, file: !1678, line: 66, type: !8623, isLocal: true, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!8623 = !DISubroutineType(types: !8624)
!8624 = !{!1680, !917}
!8625 = !DILocalVariable(name: "n", arg: 1, scope: !8622, file: !1678, line: 66, type: !917)
!8626 = !DILocation(line: 66, column: 61, scope: !8622)
!8627 = !DILocation(line: 67, column: 33, scope: !8622)
!8628 = !DILocation(line: 67, column: 36, scope: !8622)
!8629 = !DILocation(line: 67, column: 38, scope: !8622)
!8630 = !DILocation(line: 67, column: 35, scope: !8622)
!8631 = !DILocation(line: 67, column: 56, scope: !8622)
!8632 = !DILocation(line: 67, column: 58, scope: !8622)
!8633 = !DILocation(line: 67, column: 74, scope: !8622)
!8634 = !DILocation(line: 67, column: 76, scope: !8622)
!8635 = !DILocation(line: 67, column: 73, scope: !8622)
!8636 = !DILocation(line: 67, column: 5, scope: !8622)
!8637 = distinct !DISubprogram(name: "av_cmp_sf_ieee754", scope: !1678, file: !1678, line: 106, type: !8638, isLocal: true, isDefinition: true, scopeLine: 106, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!8638 = !DISubroutineType(types: !8639)
!8639 = !{!906, !1680, !1680}
!8640 = !DILocalVariable(name: "a", arg: 1, scope: !8637, file: !1678, line: 106, type: !1680)
!8641 = !DILocation(line: 106, column: 55, scope: !8637)
!8642 = !DILocalVariable(name: "b", arg: 2, scope: !8637, file: !1678, line: 106, type: !1680)
!8643 = !DILocation(line: 106, column: 76, scope: !8637)
!8644 = !DILocation(line: 107, column: 9, scope: !8637)
!8645 = !DILocation(line: 107, column: 9, scope: !8646)
!8646 = !DILexicalBlockFile(scope: !8637, file: !1678, discriminator: 1)
!8647 = !DILocation(line: 108, column: 9, scope: !8637)
!8648 = !DILocation(line: 108, column: 9, scope: !8646)
!8649 = !DILocation(line: 109, column: 11, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8637, file: !1678, line: 109, column: 9)
!8651 = !DILocation(line: 109, column: 21, scope: !8650)
!8652 = !DILocation(line: 109, column: 16, scope: !8650)
!8653 = !DILocation(line: 109, column: 9, scope: !8637)
!8654 = !DILocation(line: 109, column: 27, scope: !8655)
!8655 = !DILexicalBlockFile(scope: !8650, file: !1678, discriminator: 1)
!8656 = !DILocation(line: 110, column: 11, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8637, file: !1678, line: 110, column: 9)
!8658 = !DILocation(line: 110, column: 21, scope: !8657)
!8659 = !DILocation(line: 110, column: 16, scope: !8657)
!8660 = !DILocation(line: 110, column: 9, scope: !8637)
!8661 = !DILocation(line: 110, column: 27, scope: !8662)
!8662 = !DILexicalBlockFile(scope: !8657, file: !1678, discriminator: 1)
!8663 = !DILocation(line: 111, column: 11, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8637, file: !1678, line: 111, column: 9)
!8665 = !DILocation(line: 111, column: 20, scope: !8664)
!8666 = !DILocation(line: 111, column: 15, scope: !8664)
!8667 = !DILocation(line: 111, column: 9, scope: !8637)
!8668 = !DILocation(line: 111, column: 26, scope: !8669)
!8669 = !DILexicalBlockFile(scope: !8664, file: !1678, discriminator: 1)
!8670 = !DILocation(line: 112, column: 5, scope: !8637)
!8671 = !DILocation(line: 113, column: 1, scope: !8637)
!8672 = distinct !DISubprogram(name: "av_div_sf_ieee754", scope: !1678, file: !1678, line: 80, type: !8673, isLocal: true, isDefinition: true, scopeLine: 80, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!8673 = !DISubroutineType(types: !8674)
!8674 = !{!1680, !1680, !1680}
!8675 = !DILocalVariable(name: "a", arg: 1, scope: !8672, file: !1678, line: 80, type: !1680)
!8676 = !DILocation(line: 80, column: 69, scope: !8672)
!8677 = !DILocalVariable(name: "b", arg: 2, scope: !8672, file: !1678, line: 80, type: !1680)
!8678 = !DILocation(line: 80, column: 90, scope: !8672)
!8679 = !DILocalVariable(name: "mant", scope: !8672, file: !1678, line: 81, type: !926)
!8680 = !DILocation(line: 81, column: 13, scope: !8672)
!8681 = !DILocalVariable(name: "exp", scope: !8672, file: !1678, line: 81, type: !926)
!8682 = !DILocation(line: 81, column: 19, scope: !8672)
!8683 = !DILocalVariable(name: "sign", scope: !8672, file: !1678, line: 81, type: !926)
!8684 = !DILocation(line: 81, column: 24, scope: !8672)
!8685 = !DILocation(line: 82, column: 9, scope: !8672)
!8686 = !DILocation(line: 82, column: 9, scope: !8687)
!8687 = !DILexicalBlockFile(scope: !8672, file: !1678, discriminator: 1)
!8688 = !DILocation(line: 83, column: 9, scope: !8672)
!8689 = !DILocation(line: 83, column: 9, scope: !8687)
!8690 = !DILocation(line: 84, column: 14, scope: !8672)
!8691 = !DILocation(line: 84, column: 23, scope: !8672)
!8692 = !DILocation(line: 84, column: 19, scope: !8672)
!8693 = !DILocation(line: 84, column: 10, scope: !8672)
!8694 = !DILocation(line: 85, column: 29, scope: !8672)
!8695 = !DILocation(line: 85, column: 34, scope: !8672)
!8696 = !DILocation(line: 85, column: 51, scope: !8672)
!8697 = !DILocation(line: 85, column: 63, scope: !8672)
!8698 = !DILocation(line: 85, column: 67, scope: !8672)
!8699 = !DILocation(line: 85, column: 58, scope: !8672)
!8700 = !DILocation(line: 85, column: 12, scope: !8672)
!8701 = !DILocation(line: 85, column: 10, scope: !8672)
!8702 = !DILocation(line: 86, column: 13, scope: !8672)
!8703 = !DILocation(line: 86, column: 21, scope: !8672)
!8704 = !DILocation(line: 86, column: 17, scope: !8672)
!8705 = !DILocation(line: 86, column: 9, scope: !8672)
!8706 = !DILocation(line: 87, column: 56, scope: !8672)
!8707 = !DILocation(line: 87, column: 57, scope: !8672)
!8708 = !DILocation(line: 87, column: 63, scope: !8672)
!8709 = !DILocation(line: 87, column: 69, scope: !8672)
!8710 = !DILocation(line: 87, column: 12, scope: !8672)
!8711 = !DILocation(line: 87, column: 5, scope: !8672)
!8712 = distinct !DISubprogram(name: "multiply", scope: !888, file: !888, line: 1366, type: !8673, isLocal: true, isDefinition: true, scopeLine: 1366, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!8713 = !DILocalVariable(name: "a", arg: 1, scope: !8712, file: !888, line: 1366, type: !1680)
!8714 = !DILocation(line: 1366, column: 53, scope: !8712)
!8715 = !DILocalVariable(name: "b", arg: 2, scope: !8712, file: !888, line: 1366, type: !1680)
!8716 = !DILocation(line: 1366, column: 74, scope: !8712)
!8717 = !DILocalVariable(name: "mantissa_temp", scope: !8712, file: !888, line: 1367, type: !920)
!8718 = !DILocation(line: 1367, column: 14, scope: !8712)
!8719 = !DILocalVariable(name: "mask_64", scope: !8712, file: !888, line: 1368, type: !920)
!8720 = !DILocation(line: 1368, column: 14, scope: !8712)
!8721 = !DILocalVariable(name: "cutoff_bit_count", scope: !8712, file: !888, line: 1369, type: !906)
!8722 = !DILocation(line: 1369, column: 9, scope: !8712)
!8723 = !DILocalVariable(name: "last_2_bits", scope: !8712, file: !888, line: 1370, type: !919)
!8724 = !DILocation(line: 1370, column: 19, scope: !8712)
!8725 = !DILocalVariable(name: "mantissa", scope: !8712, file: !888, line: 1371, type: !907)
!8726 = !DILocation(line: 1371, column: 18, scope: !8712)
!8727 = !DILocalVariable(name: "sign", scope: !8712, file: !888, line: 1372, type: !926)
!8728 = !DILocation(line: 1372, column: 13, scope: !8712)
!8729 = !DILocalVariable(name: "return_val", scope: !8712, file: !888, line: 1373, type: !917)
!8730 = !DILocation(line: 1373, column: 14, scope: !8712)
!8731 = !DILocalVariable(name: "bit_count", scope: !8712, file: !888, line: 1374, type: !906)
!8732 = !DILocation(line: 1374, column: 9, scope: !8712)
!8733 = !DILocation(line: 1376, column: 14, scope: !8712)
!8734 = !DILocation(line: 1376, column: 23, scope: !8712)
!8735 = !DILocation(line: 1376, column: 19, scope: !8712)
!8736 = !DILocation(line: 1376, column: 10, scope: !8712)
!8737 = !DILocation(line: 1379, column: 33, scope: !8712)
!8738 = !DILocation(line: 1379, column: 52, scope: !8712)
!8739 = !DILocation(line: 1379, column: 38, scope: !8712)
!8740 = !DILocation(line: 1379, column: 19, scope: !8712)
!8741 = !DILocation(line: 1380, column: 13, scope: !8712)
!8742 = !DILocation(line: 1383, column: 5, scope: !8712)
!8743 = !DILocation(line: 1383, column: 14, scope: !8744)
!8744 = !DILexicalBlockFile(scope: !8712, file: !888, discriminator: 1)
!8745 = !DILocation(line: 1383, column: 30, scope: !8744)
!8746 = !DILocation(line: 1383, column: 28, scope: !8744)
!8747 = !DILocation(line: 1383, column: 39, scope: !8744)
!8748 = !DILocation(line: 1383, column: 42, scope: !8749)
!8749 = !DILexicalBlockFile(scope: !8712, file: !888, discriminator: 2)
!8750 = !DILocation(line: 1383, column: 39, scope: !8749)
!8751 = !DILocation(line: 1383, column: 5, scope: !8752)
!8752 = !DILexicalBlockFile(scope: !8712, file: !888, discriminator: 3)
!8753 = !DILocation(line: 1384, column: 18, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8712, file: !888, line: 1383, column: 51)
!8755 = !DILocation(line: 1385, column: 17, scope: !8754)
!8756 = !DILocation(line: 1383, column: 5, scope: !8757)
!8757 = !DILexicalBlockFile(scope: !8712, file: !888, discriminator: 4)
!8758 = distinct !{!8758, !8742}
!8759 = !DILocation(line: 1389, column: 24, scope: !8712)
!8760 = !DILocation(line: 1389, column: 34, scope: !8712)
!8761 = !DILocation(line: 1389, column: 22, scope: !8712)
!8762 = !DILocation(line: 1390, column: 9, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8712, file: !888, line: 1390, column: 9)
!8764 = !DILocation(line: 1390, column: 26, scope: !8763)
!8765 = !DILocation(line: 1390, column: 9, scope: !8712)
!8766 = !DILocation(line: 1391, column: 54, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8763, file: !888, line: 1390, column: 31)
!8768 = !DILocation(line: 1391, column: 40, scope: !8767)
!8769 = !DILocation(line: 1391, column: 72, scope: !8767)
!8770 = !DILocation(line: 1391, column: 89, scope: !8767)
!8771 = !DILocation(line: 1391, column: 68, scope: !8767)
!8772 = !DILocation(line: 1391, column: 95, scope: !8767)
!8773 = !DILocation(line: 1391, column: 23, scope: !8767)
!8774 = !DILocation(line: 1391, column: 21, scope: !8767)
!8775 = !DILocation(line: 1392, column: 14, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8767, file: !888, line: 1392, column: 13)
!8777 = !DILocation(line: 1392, column: 26, scope: !8776)
!8778 = !DILocation(line: 1392, column: 34, scope: !8776)
!8779 = !DILocation(line: 1392, column: 39, scope: !8780)
!8780 = !DILexicalBlockFile(scope: !8776, file: !888, discriminator: 1)
!8781 = !DILocation(line: 1392, column: 51, scope: !8780)
!8782 = !DILocation(line: 1392, column: 59, scope: !8780)
!8783 = !DILocation(line: 1392, column: 77, scope: !8784)
!8784 = !DILexicalBlockFile(scope: !8776, file: !888, discriminator: 2)
!8785 = !DILocation(line: 1392, column: 63, scope: !8784)
!8786 = !DILocation(line: 1392, column: 105, scope: !8784)
!8787 = !DILocation(line: 1392, column: 122, scope: !8784)
!8788 = !DILocation(line: 1392, column: 101, scope: !8784)
!8789 = !DILocation(line: 1392, column: 128, scope: !8784)
!8790 = !DILocation(line: 1392, column: 91, scope: !8784)
!8791 = !DILocation(line: 1392, column: 13, scope: !8784)
!8792 = !DILocation(line: 1394, column: 47, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8776, file: !888, line: 1392, column: 136)
!8794 = !DILocation(line: 1394, column: 44, scope: !8793)
!8795 = !DILocation(line: 1394, column: 27, scope: !8793)
!8796 = !DILocation(line: 1395, column: 9, scope: !8793)
!8797 = !DILocation(line: 1396, column: 5, scope: !8767)
!8798 = !DILocation(line: 1398, column: 31, scope: !8712)
!8799 = !DILocation(line: 1398, column: 48, scope: !8712)
!8800 = !DILocation(line: 1398, column: 45, scope: !8712)
!8801 = !DILocation(line: 1398, column: 16, scope: !8712)
!8802 = !DILocation(line: 1398, column: 14, scope: !8712)
!8803 = !DILocation(line: 1401, column: 9, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8712, file: !888, line: 1401, column: 9)
!8805 = !DILocation(line: 1401, column: 18, scope: !8804)
!8806 = !DILocation(line: 1401, column: 9, scope: !8712)
!8807 = !DILocation(line: 1402, column: 18, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8804, file: !888, line: 1401, column: 34)
!8809 = !DILocation(line: 1403, column: 18, scope: !8808)
!8810 = !DILocation(line: 1404, column: 5, scope: !8808)
!8811 = !DILocation(line: 1406, column: 10, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8712, file: !888, line: 1406, column: 9)
!8813 = !DILocation(line: 1406, column: 9, scope: !8712)
!8814 = !DILocation(line: 1407, column: 20, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8812, file: !888, line: 1406, column: 16)
!8816 = !DILocation(line: 1408, column: 5, scope: !8815)
!8817 = !DILocation(line: 1410, column: 22, scope: !8712)
!8818 = !DILocation(line: 1410, column: 30, scope: !8712)
!8819 = !DILocation(line: 1410, column: 26, scope: !8712)
!8820 = !DILocation(line: 1410, column: 36, scope: !8712)
!8821 = !DILocation(line: 1410, column: 34, scope: !8712)
!8822 = !DILocation(line: 1410, column: 46, scope: !8712)
!8823 = !DILocation(line: 1410, column: 52, scope: !8712)
!8824 = !DILocation(line: 1410, column: 16, scope: !8712)
!8825 = !DILocation(line: 1411, column: 19, scope: !8712)
!8826 = !DILocation(line: 1411, column: 16, scope: !8712)
!8827 = !DILocation(line: 1412, column: 31, scope: !8712)
!8828 = !DILocation(line: 1412, column: 12, scope: !8712)
!8829 = !DILocation(line: 1412, column: 5, scope: !8712)
!8830 = distinct !DISubprogram(name: "av_normalize_sf_ieee754", scope: !1678, file: !1678, line: 41, type: !8831, isLocal: true, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1690)
!8831 = !DISubroutineType(types: !8832)
!8832 = !{!1680, !1680}
!8833 = !DILocalVariable(name: "sf", arg: 1, scope: !8830, file: !1678, line: 41, type: !1680)
!8834 = !DILocation(line: 41, column: 75, scope: !8830)
!8835 = !DILocation(line: 42, column: 5, scope: !8830)
!8836 = !DILocation(line: 42, column: 15, scope: !8837)
!8837 = !DILexicalBlockFile(scope: !8830, file: !1678, discriminator: 1)
!8838 = !DILocation(line: 42, column: 20, scope: !8837)
!8839 = !DILocation(line: 42, column: 5, scope: !8837)
!8840 = !DILocation(line: 43, column: 12, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8830, file: !1678, line: 42, column: 37)
!8842 = !DILocation(line: 43, column: 15, scope: !8841)
!8843 = !DILocation(line: 44, column: 12, scope: !8841)
!8844 = !DILocation(line: 44, column: 17, scope: !8841)
!8845 = !DILocation(line: 42, column: 5, scope: !8846)
!8846 = !DILexicalBlockFile(scope: !8830, file: !1678, discriminator: 2)
!8847 = distinct !{!8847, !8835}
!8848 = !DILocation(line: 46, column: 8, scope: !8830)
!8849 = !DILocation(line: 46, column: 13, scope: !8830)
!8850 = !DILocation(line: 47, column: 12, scope: !8830)
!8851 = !DILocation(line: 47, column: 5, scope: !8830)
