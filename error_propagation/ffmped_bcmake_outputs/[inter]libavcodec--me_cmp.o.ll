; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--me_cmp.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--me_cmp.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.MECmpContext = type { i32 (i16*)*, [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*] }
%struct.MpegEncContext = type { %struct.AVClass*, i32, i32, i32, [12 x i32], i32, %struct.ScanTable, %struct.ScanTable, %struct.ScanTable, %struct.ScanTable, %struct.AVCodecContext*, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, %struct.Picture*, %struct.Picture**, %struct.Picture**, i64, i64, i64, %struct.PutBitContext, i32, i32, [32 x %struct.MpegEncContext*], i32, %struct.Picture, %struct.Picture, %struct.Picture, %struct.Picture, %struct.Picture*, %struct.Picture*, %struct.Picture*, [3 x i32], i16*, [3 x i16*], i8*, i8*, i8*, i8*, i8*, [16 x i16]*, [3 x [16 x i16]*], i32, i8*, i8*, i8*, i8*, %struct.ScratchpadContext, i32, i32, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.AVRational, [5 x i32], i32, i32, i32, %struct.BlockDSPContext, %struct.FDCTDSPContext, %struct.H264ChromaContext, %struct.HpelDSPContext, %struct.IDCTDSPContext, %struct.MECmpContext, %struct.MpegVideoDSPContext, %struct.MpegvideoEncDSPContext, %struct.PixblockDSPContext, %struct.QpelDSPContext, %struct.VideoDSPContext, %struct.H263DSPContext, i32, i32, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x [2 x [2 x i16]*]], [2 x [2 x [2 x [2 x i16]*]]], [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x [2 x [2 x i16]*]], [2 x [2 x [2 x [2 x i16]*]]], [2 x i8*], [2 x [2 x i8*]], i32, i32, i32, i32, i32, [2 x [4 x [2 x i32]]], [2 x [2 x i32]], [2 x [2 x [2 x i32]]], i8*, [2 x [64 x i16]], %struct.MotionEstContext, i32, i32, i32, i32, i32, i16*, [6 x i32], [6 x i32], [3 x i8*], i32*, [64 x i16], [64 x i16], [64 x i16], [64 x i16], i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [12 x i32], [64 x i32]*, [64 x i32]*, [64 x i32]*, [2 x [64 x i16]]*, [2 x [64 x i16]]*, [2 x [64 x i16]]*, [64 x i32]*, [2 x i32], [64 x i16]*, i64, i32, i32, i32, %struct.RateControlContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.GetBitContext, i32, i32, %struct.ParseContext, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i16, i16, i16, i16, i32, [2 x [2 x i32]], [2 x [2 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.PutBitContext, %struct.PutBitContext, i32, i32, i32, i8*, i32, i32, i32, [3 x i32], %struct.MJpegContext*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x [65 x [65 x [2 x i32]]]]*, i32, i32, %struct.GetBitContext, i32, i32, i8*, i32, [2 x [2 x i32]], i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i8*, %struct.AVTimecode, i8*, i32, i32, [12 x [64 x i16]*], [64 x i16]*, [12 x [64 x i16]]*, i32 (%struct.MpegEncContext*, [64 x i16]*)*, [12 x [64 x i32]]*, i32, [3 x [256 x i16]]*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, void (%struct.MpegEncContext*, i16*)*, i32, i32, float, float, i32, float, float, float, i32, i32, i32, i8*, float*, float*, i32, %struct.ERContext, i32, [18 x %struct.AVFrame*], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.ScanTable = type { i8*, [64 x i8], [64 x i8] }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.Picture = type { %struct.AVFrame*, %struct.ThreadFrame, %struct.AVBufferRef*, i8*, [2 x %struct.AVBufferRef*], [2 x [2 x i16]*], %struct.AVBufferRef*, i32*, %struct.AVBufferRef*, i8*, [2 x %struct.AVBufferRef*], [2 x i8*], %struct.AVBufferRef*, i16*, %struct.AVBufferRef*, i16*, i32, i32, %struct.AVBufferRef*, i8*, %struct.AVBufferRef*, i8*, i32, i64, i64, i32, i32, i32, i32, [8 x i64] }
%struct.ThreadFrame = type { %struct.AVFrame*, [2 x %struct.AVCodecContext*], %struct.AVBufferRef* }
%struct.ScratchpadContext = type { i8*, i8*, i8*, i8* }
%struct.AVRational = type { i32, i32 }
%struct.BlockDSPContext = type { void (i16*)*, void (i16*)*, [2 x void (i8*, i8, i64, i32)*] }
%struct.FDCTDSPContext = type { void (i16*)*, void (i16*)* }
%struct.H264ChromaContext = type { [4 x void (i8*, i8*, i64, i32, i32, i32)*], [4 x void (i8*, i8*, i64, i32, i32, i32)*] }
%struct.HpelDSPContext = type { [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x void (i8*, i8*, i64, i32)*] }
%struct.IDCTDSPContext = type { void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, [64 x i8], i32, i32 }
%struct.MpegVideoDSPContext = type { void (i8*, i8*, i32, i32, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)* }
%struct.MpegvideoEncDSPContext = type { i32 (i16*, i16*, i16*, i32)*, void (i16*, i16*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, [4 x void (i8*, i32, i8*, i32, i32, i32)*], void (i8*, i32, i32, i32, i32, i32, i32)* }
%struct.PixblockDSPContext = type { void (i16*, i8*, i64)*, void (i16*, i8*, i8*, i64)*, void (i16*, i8*, i8*, i64)* }
%struct.QpelDSPContext = type { [2 x [16 x void (i8*, i8*, i64)*]], [2 x [16 x void (i8*, i8*, i64)*]], [2 x [16 x void (i8*, i8*, i64)*]] }
%struct.VideoDSPContext = type { void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)*, void (i8*, i64, i32)* }
%struct.H263DSPContext = type { void (i8*, i32, i32)*, void (i8*, i32, i32)* }
%struct.MotionEstContext = type { %struct.AVCodecContext*, i32, [4 x [2 x i32]], [4 x [2 x i32]], i8*, i8*, [2 x i8*], i8*, i32, i32*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x [4 x i8*]], [4 x [4 x i8*]], i32, i32, i64, i64, i32, [4 x void (i8*, i8*, i64, i32)*]*, [4 x void (i8*, i8*, i64, i32)*]*, [16 x void (i8*, i8*, i64)*]*, [16 x void (i8*, i8*, i64)*]*, [16385 x i8]*, i8*, i32 (%struct.MpegEncContext*, i32*, i32*, i32, i32, i32, i32, i32)* }
%struct.RateControlContext = type { i32, %struct.RateControlEntry*, double, [5 x %struct.Predictor], double, double, double, double, double, [5 x double], i64, i64, [5 x i64], [5 x i64], [5 x i64], [5 x i64], [5 x i32], i32, i8*, float, i32, %struct.AVExpr* }
%struct.RateControlEntry = type { i32, float, i32, i32, i32, i32, i32, i64, i32, float, i64, i64, i32, i32, i32, i32 }
%struct.Predictor = type { double, double, double }
%struct.AVExpr = type opaque
%struct.ParseContext = type { i8*, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.MJpegContext = type opaque
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.AVTimecode = type { i32, i32, %struct.AVRational, i32 }
%struct.ERContext = type { %struct.AVCodecContext*, %struct.MECmpContext, i32, i32*, i32, i32, i32, i64, i64, i32, i32, i8*, i8*, [3 x i16*], i8*, i8*, [2 x [4 x [2 x i32]]], %struct.ERPicture, %struct.ERPicture, %struct.ERPicture, [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*], i16, i16, i32, i32, i32, void (i8*, i32, i32, i32, [2 x [4 x [2 x i32]]]*, i32, i32, i32, i32)*, i8* }
%struct.ERPicture = type { %struct.AVFrame*, %struct.ThreadFrame*, [2 x [2 x i16]*], [2 x i8*], i32*, i32 }
%union.unaligned_64 = type { i64 }

@ff_square_tab = constant [512 x i32] [i32 65536, i32 65025, i32 64516, i32 64009, i32 63504, i32 63001, i32 62500, i32 62001, i32 61504, i32 61009, i32 60516, i32 60025, i32 59536, i32 59049, i32 58564, i32 58081, i32 57600, i32 57121, i32 56644, i32 56169, i32 55696, i32 55225, i32 54756, i32 54289, i32 53824, i32 53361, i32 52900, i32 52441, i32 51984, i32 51529, i32 51076, i32 50625, i32 50176, i32 49729, i32 49284, i32 48841, i32 48400, i32 47961, i32 47524, i32 47089, i32 46656, i32 46225, i32 45796, i32 45369, i32 44944, i32 44521, i32 44100, i32 43681, i32 43264, i32 42849, i32 42436, i32 42025, i32 41616, i32 41209, i32 40804, i32 40401, i32 40000, i32 39601, i32 39204, i32 38809, i32 38416, i32 38025, i32 37636, i32 37249, i32 36864, i32 36481, i32 36100, i32 35721, i32 35344, i32 34969, i32 34596, i32 34225, i32 33856, i32 33489, i32 33124, i32 32761, i32 32400, i32 32041, i32 31684, i32 31329, i32 30976, i32 30625, i32 30276, i32 29929, i32 29584, i32 29241, i32 28900, i32 28561, i32 28224, i32 27889, i32 27556, i32 27225, i32 26896, i32 26569, i32 26244, i32 25921, i32 25600, i32 25281, i32 24964, i32 24649, i32 24336, i32 24025, i32 23716, i32 23409, i32 23104, i32 22801, i32 22500, i32 22201, i32 21904, i32 21609, i32 21316, i32 21025, i32 20736, i32 20449, i32 20164, i32 19881, i32 19600, i32 19321, i32 19044, i32 18769, i32 18496, i32 18225, i32 17956, i32 17689, i32 17424, i32 17161, i32 16900, i32 16641, i32 16384, i32 16129, i32 15876, i32 15625, i32 15376, i32 15129, i32 14884, i32 14641, i32 14400, i32 14161, i32 13924, i32 13689, i32 13456, i32 13225, i32 12996, i32 12769, i32 12544, i32 12321, i32 12100, i32 11881, i32 11664, i32 11449, i32 11236, i32 11025, i32 10816, i32 10609, i32 10404, i32 10201, i32 10000, i32 9801, i32 9604, i32 9409, i32 9216, i32 9025, i32 8836, i32 8649, i32 8464, i32 8281, i32 8100, i32 7921, i32 7744, i32 7569, i32 7396, i32 7225, i32 7056, i32 6889, i32 6724, i32 6561, i32 6400, i32 6241, i32 6084, i32 5929, i32 5776, i32 5625, i32 5476, i32 5329, i32 5184, i32 5041, i32 4900, i32 4761, i32 4624, i32 4489, i32 4356, i32 4225, i32 4096, i32 3969, i32 3844, i32 3721, i32 3600, i32 3481, i32 3364, i32 3249, i32 3136, i32 3025, i32 2916, i32 2809, i32 2704, i32 2601, i32 2500, i32 2401, i32 2304, i32 2209, i32 2116, i32 2025, i32 1936, i32 1849, i32 1764, i32 1681, i32 1600, i32 1521, i32 1444, i32 1369, i32 1296, i32 1225, i32 1156, i32 1089, i32 1024, i32 961, i32 900, i32 841, i32 784, i32 729, i32 676, i32 625, i32 576, i32 529, i32 484, i32 441, i32 400, i32 361, i32 324, i32 289, i32 256, i32 225, i32 196, i32 169, i32 144, i32 121, i32 100, i32 81, i32 64, i32 49, i32 36, i32 25, i32 16, i32 9, i32 4, i32 1, i32 0, i32 1, i32 4, i32 9, i32 16, i32 25, i32 36, i32 49, i32 64, i32 81, i32 100, i32 121, i32 144, i32 169, i32 196, i32 225, i32 256, i32 289, i32 324, i32 361, i32 400, i32 441, i32 484, i32 529, i32 576, i32 625, i32 676, i32 729, i32 784, i32 841, i32 900, i32 961, i32 1024, i32 1089, i32 1156, i32 1225, i32 1296, i32 1369, i32 1444, i32 1521, i32 1600, i32 1681, i32 1764, i32 1849, i32 1936, i32 2025, i32 2116, i32 2209, i32 2304, i32 2401, i32 2500, i32 2601, i32 2704, i32 2809, i32 2916, i32 3025, i32 3136, i32 3249, i32 3364, i32 3481, i32 3600, i32 3721, i32 3844, i32 3969, i32 4096, i32 4225, i32 4356, i32 4489, i32 4624, i32 4761, i32 4900, i32 5041, i32 5184, i32 5329, i32 5476, i32 5625, i32 5776, i32 5929, i32 6084, i32 6241, i32 6400, i32 6561, i32 6724, i32 6889, i32 7056, i32 7225, i32 7396, i32 7569, i32 7744, i32 7921, i32 8100, i32 8281, i32 8464, i32 8649, i32 8836, i32 9025, i32 9216, i32 9409, i32 9604, i32 9801, i32 10000, i32 10201, i32 10404, i32 10609, i32 10816, i32 11025, i32 11236, i32 11449, i32 11664, i32 11881, i32 12100, i32 12321, i32 12544, i32 12769, i32 12996, i32 13225, i32 13456, i32 13689, i32 13924, i32 14161, i32 14400, i32 14641, i32 14884, i32 15129, i32 15376, i32 15625, i32 15876, i32 16129, i32 16384, i32 16641, i32 16900, i32 17161, i32 17424, i32 17689, i32 17956, i32 18225, i32 18496, i32 18769, i32 19044, i32 19321, i32 19600, i32 19881, i32 20164, i32 20449, i32 20736, i32 21025, i32 21316, i32 21609, i32 21904, i32 22201, i32 22500, i32 22801, i32 23104, i32 23409, i32 23716, i32 24025, i32 24336, i32 24649, i32 24964, i32 25281, i32 25600, i32 25921, i32 26244, i32 26569, i32 26896, i32 27225, i32 27556, i32 27889, i32 28224, i32 28561, i32 28900, i32 29241, i32 29584, i32 29929, i32 30276, i32 30625, i32 30976, i32 31329, i32 31684, i32 32041, i32 32400, i32 32761, i32 33124, i32 33489, i32 33856, i32 34225, i32 34596, i32 34969, i32 35344, i32 35721, i32 36100, i32 36481, i32 36864, i32 37249, i32 37636, i32 38025, i32 38416, i32 38809, i32 39204, i32 39601, i32 40000, i32 40401, i32 40804, i32 41209, i32 41616, i32 42025, i32 42436, i32 42849, i32 43264, i32 43681, i32 44100, i32 44521, i32 44944, i32 45369, i32 45796, i32 46225, i32 46656, i32 47089, i32 47524, i32 47961, i32 48400, i32 48841, i32 49284, i32 49729, i32 50176, i32 50625, i32 51076, i32 51529, i32 51984, i32 52441, i32 52900, i32 53361, i32 53824, i32 54289, i32 54756, i32 55225, i32 55696, i32 56169, i32 56644, i32 57121, i32 57600, i32 58081, i32 58564, i32 59049, i32 59536, i32 60025, i32 60516, i32 61009, i32 61504, i32 62001, i32 62500, i32 63001, i32 63504, i32 64009, i32 64516, i32 65025], align 16
@.str = private unnamed_addr constant [42 x i8] c"internal error in cmp function selection\0A\00", align 1
@ff_check_alignment.did_fail = internal global i32 0, align 4
@.str.1 = private unnamed_addr constant [244 x i8] c"Compiler did not align stack variables. Libavcodec has been miscompiled\0Aand may be very slow or crash. This is not a bug in libavcodec,\0Abut in the compiler. You may try recompiling using gcc >= 4.2.\0ADo not report crashes to FFmpeg developers.\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @ff_set_cmp(%struct.MECmpContext* %c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %cmp, i32 %type) #0 !dbg !957 {
entry:
  %c.addr = alloca %struct.MECmpContext*, align 8
  %cmp.addr = alloca i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, align 8
  %type.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.MECmpContext* %c, %struct.MECmpContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MECmpContext** %c.addr, metadata !2613, metadata !2614), !dbg !2615
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %cmp, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, metadata !2616, metadata !2614), !dbg !2617
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2618, metadata !2614), !dbg !2619
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2620, metadata !2614), !dbg !2621
  %0 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2622
  %1 = bitcast i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %0 to i8*, !dbg !2623
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 48, i32 8, i1 false), !dbg !2623
  store i32 0, i32* %i, align 4, !dbg !2624
  br label %for.cond, !dbg !2626

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !2627
  %cmp1 = icmp slt i32 %2, 6, !dbg !2630
  br i1 %cmp1, label %for.body, label %for.end, !dbg !2631

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %type.addr, align 4, !dbg !2632
  %and = and i32 %3, 255, !dbg !2634
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 15, label %sw.bb4
    i32 2, label %sw.bb9
    i32 1, label %sw.bb14
    i32 3, label %sw.bb19
    i32 14, label %sw.bb24
    i32 13, label %sw.bb29
    i32 4, label %sw.bb34
    i32 5, label %sw.bb39
    i32 6, label %sw.bb44
    i32 8, label %sw.bb49
    i32 9, label %sw.bb54
    i32 7, label %sw.bb59
    i32 10, label %sw.bb62
    i32 11, label %sw.bb67
    i32 12, label %sw.bb72
  ], !dbg !2635

sw.bb:                                            ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !2636
  %idxprom = sext i32 %4 to i64, !dbg !2638
  %5 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2638
  %sad = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %5, i32 0, i32 1, !dbg !2639
  %arrayidx = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %sad, i64 0, i64 %idxprom, !dbg !2638
  %6 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx, align 8, !dbg !2638
  %7 = load i32, i32* %i, align 4, !dbg !2640
  %idxprom2 = sext i32 %7 to i64, !dbg !2641
  %8 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2641
  %arrayidx3 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %8, i64 %idxprom2, !dbg !2641
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %6, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx3, align 8, !dbg !2642
  br label %sw.epilog, !dbg !2643

sw.bb4:                                           ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !2644
  %idxprom5 = sext i32 %9 to i64, !dbg !2645
  %10 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2645
  %median_sad = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %10, i32 0, i32 22, !dbg !2646
  %arrayidx6 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %median_sad, i64 0, i64 %idxprom5, !dbg !2645
  %11 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx6, align 8, !dbg !2645
  %12 = load i32, i32* %i, align 4, !dbg !2647
  %idxprom7 = sext i32 %12 to i64, !dbg !2648
  %13 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2648
  %arrayidx8 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %13, i64 %idxprom7, !dbg !2648
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %11, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx8, align 8, !dbg !2649
  br label %sw.epilog, !dbg !2650

sw.bb9:                                           ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !2651
  %idxprom10 = sext i32 %14 to i64, !dbg !2652
  %15 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2652
  %hadamard8_diff = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %15, i32 0, i32 3, !dbg !2653
  %arrayidx11 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %hadamard8_diff, i64 0, i64 %idxprom10, !dbg !2652
  %16 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx11, align 8, !dbg !2652
  %17 = load i32, i32* %i, align 4, !dbg !2654
  %idxprom12 = sext i32 %17 to i64, !dbg !2655
  %18 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2655
  %arrayidx13 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %18, i64 %idxprom12, !dbg !2655
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %16, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx13, align 8, !dbg !2656
  br label %sw.epilog, !dbg !2657

sw.bb14:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !2658
  %idxprom15 = sext i32 %19 to i64, !dbg !2659
  %20 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2659
  %sse = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %20, i32 0, i32 2, !dbg !2660
  %arrayidx16 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %sse, i64 0, i64 %idxprom15, !dbg !2659
  %21 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx16, align 8, !dbg !2659
  %22 = load i32, i32* %i, align 4, !dbg !2661
  %idxprom17 = sext i32 %22 to i64, !dbg !2662
  %23 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2662
  %arrayidx18 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %23, i64 %idxprom17, !dbg !2662
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %21, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx18, align 8, !dbg !2663
  br label %sw.epilog, !dbg !2664

sw.bb19:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !2665
  %idxprom20 = sext i32 %24 to i64, !dbg !2666
  %25 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2666
  %dct_sad = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %25, i32 0, i32 4, !dbg !2667
  %arrayidx21 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %dct_sad, i64 0, i64 %idxprom20, !dbg !2666
  %26 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx21, align 8, !dbg !2666
  %27 = load i32, i32* %i, align 4, !dbg !2668
  %idxprom22 = sext i32 %27 to i64, !dbg !2669
  %28 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2669
  %arrayidx23 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %28, i64 %idxprom22, !dbg !2669
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %26, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx23, align 8, !dbg !2670
  br label %sw.epilog, !dbg !2671

sw.bb24:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !2672
  %idxprom25 = sext i32 %29 to i64, !dbg !2673
  %30 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2673
  %dct264_sad = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %30, i32 0, i32 14, !dbg !2674
  %arrayidx26 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %dct264_sad, i64 0, i64 %idxprom25, !dbg !2673
  %31 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx26, align 8, !dbg !2673
  %32 = load i32, i32* %i, align 4, !dbg !2675
  %idxprom27 = sext i32 %32 to i64, !dbg !2676
  %33 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2676
  %arrayidx28 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %33, i64 %idxprom27, !dbg !2676
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %31, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx28, align 8, !dbg !2677
  br label %sw.epilog, !dbg !2678

sw.bb29:                                          ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !dbg !2679
  %idxprom30 = sext i32 %34 to i64, !dbg !2680
  %35 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2680
  %dct_max = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %35, i32 0, i32 13, !dbg !2681
  %arrayidx31 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %dct_max, i64 0, i64 %idxprom30, !dbg !2680
  %36 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx31, align 8, !dbg !2680
  %37 = load i32, i32* %i, align 4, !dbg !2682
  %idxprom32 = sext i32 %37 to i64, !dbg !2683
  %38 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2683
  %arrayidx33 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %38, i64 %idxprom32, !dbg !2683
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %36, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx33, align 8, !dbg !2684
  br label %sw.epilog, !dbg !2685

sw.bb34:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !2686
  %idxprom35 = sext i32 %39 to i64, !dbg !2687
  %40 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2687
  %quant_psnr = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %40, i32 0, i32 5, !dbg !2688
  %arrayidx36 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %quant_psnr, i64 0, i64 %idxprom35, !dbg !2687
  %41 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx36, align 8, !dbg !2687
  %42 = load i32, i32* %i, align 4, !dbg !2689
  %idxprom37 = sext i32 %42 to i64, !dbg !2690
  %43 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2690
  %arrayidx38 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %43, i64 %idxprom37, !dbg !2690
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %41, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx38, align 8, !dbg !2691
  br label %sw.epilog, !dbg !2692

sw.bb39:                                          ; preds = %for.body
  %44 = load i32, i32* %i, align 4, !dbg !2693
  %idxprom40 = sext i32 %44 to i64, !dbg !2694
  %45 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2694
  %bit = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %45, i32 0, i32 6, !dbg !2695
  %arrayidx41 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %bit, i64 0, i64 %idxprom40, !dbg !2694
  %46 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx41, align 8, !dbg !2694
  %47 = load i32, i32* %i, align 4, !dbg !2696
  %idxprom42 = sext i32 %47 to i64, !dbg !2697
  %48 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2697
  %arrayidx43 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %48, i64 %idxprom42, !dbg !2697
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %46, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx43, align 8, !dbg !2698
  br label %sw.epilog, !dbg !2699

sw.bb44:                                          ; preds = %for.body
  %49 = load i32, i32* %i, align 4, !dbg !2700
  %idxprom45 = sext i32 %49 to i64, !dbg !2701
  %50 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2701
  %rd = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %50, i32 0, i32 7, !dbg !2702
  %arrayidx46 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %rd, i64 0, i64 %idxprom45, !dbg !2701
  %51 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx46, align 8, !dbg !2701
  %52 = load i32, i32* %i, align 4, !dbg !2703
  %idxprom47 = sext i32 %52 to i64, !dbg !2704
  %53 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2704
  %arrayidx48 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %53, i64 %idxprom47, !dbg !2704
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %51, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx48, align 8, !dbg !2705
  br label %sw.epilog, !dbg !2706

sw.bb49:                                          ; preds = %for.body
  %54 = load i32, i32* %i, align 4, !dbg !2707
  %idxprom50 = sext i32 %54 to i64, !dbg !2708
  %55 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2708
  %vsad = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %55, i32 0, i32 8, !dbg !2709
  %arrayidx51 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %vsad, i64 0, i64 %idxprom50, !dbg !2708
  %56 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx51, align 8, !dbg !2708
  %57 = load i32, i32* %i, align 4, !dbg !2710
  %idxprom52 = sext i32 %57 to i64, !dbg !2711
  %58 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2711
  %arrayidx53 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %58, i64 %idxprom52, !dbg !2711
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %56, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx53, align 8, !dbg !2712
  br label %sw.epilog, !dbg !2713

sw.bb54:                                          ; preds = %for.body
  %59 = load i32, i32* %i, align 4, !dbg !2714
  %idxprom55 = sext i32 %59 to i64, !dbg !2715
  %60 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2715
  %vsse = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %60, i32 0, i32 9, !dbg !2716
  %arrayidx56 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %vsse, i64 0, i64 %idxprom55, !dbg !2715
  %61 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx56, align 8, !dbg !2715
  %62 = load i32, i32* %i, align 4, !dbg !2717
  %idxprom57 = sext i32 %62 to i64, !dbg !2718
  %63 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2718
  %arrayidx58 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %63, i64 %idxprom57, !dbg !2718
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %61, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx58, align 8, !dbg !2719
  br label %sw.epilog, !dbg !2720

sw.bb59:                                          ; preds = %for.body
  %64 = load i32, i32* %i, align 4, !dbg !2721
  %idxprom60 = sext i32 %64 to i64, !dbg !2722
  %65 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2722
  %arrayidx61 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %65, i64 %idxprom60, !dbg !2722
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @zero_cmp, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx61, align 8, !dbg !2723
  br label %sw.epilog, !dbg !2724

sw.bb62:                                          ; preds = %for.body
  %66 = load i32, i32* %i, align 4, !dbg !2725
  %idxprom63 = sext i32 %66 to i64, !dbg !2726
  %67 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2726
  %nsse = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %67, i32 0, i32 10, !dbg !2727
  %arrayidx64 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %nsse, i64 0, i64 %idxprom63, !dbg !2726
  %68 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx64, align 8, !dbg !2726
  %69 = load i32, i32* %i, align 4, !dbg !2728
  %idxprom65 = sext i32 %69 to i64, !dbg !2729
  %70 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2729
  %arrayidx66 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %70, i64 %idxprom65, !dbg !2729
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %68, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx66, align 8, !dbg !2730
  br label %sw.epilog, !dbg !2731

sw.bb67:                                          ; preds = %for.body
  %71 = load i32, i32* %i, align 4, !dbg !2732
  %idxprom68 = sext i32 %71 to i64, !dbg !2733
  %72 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2733
  %w53 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %72, i32 0, i32 11, !dbg !2734
  %arrayidx69 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %w53, i64 0, i64 %idxprom68, !dbg !2733
  %73 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx69, align 8, !dbg !2733
  %74 = load i32, i32* %i, align 4, !dbg !2735
  %idxprom70 = sext i32 %74 to i64, !dbg !2736
  %75 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2736
  %arrayidx71 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %75, i64 %idxprom70, !dbg !2736
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %73, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx71, align 8, !dbg !2737
  br label %sw.epilog, !dbg !2738

sw.bb72:                                          ; preds = %for.body
  %76 = load i32, i32* %i, align 4, !dbg !2739
  %idxprom73 = sext i32 %76 to i64, !dbg !2740
  %77 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2740
  %w97 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %77, i32 0, i32 12, !dbg !2741
  %arrayidx74 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %w97, i64 0, i64 %idxprom73, !dbg !2740
  %78 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx74, align 8, !dbg !2740
  %79 = load i32, i32* %i, align 4, !dbg !2742
  %idxprom75 = sext i32 %79 to i64, !dbg !2743
  %80 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)**, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*** %cmp.addr, align 8, !dbg !2743
  %arrayidx76 = getelementptr inbounds i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %80, i64 %idxprom75, !dbg !2743
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* %78, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx76, align 8, !dbg !2744
  br label %sw.epilog, !dbg !2745

sw.default:                                       ; preds = %for.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0)), !dbg !2746
  br label %sw.epilog, !dbg !2747

sw.epilog:                                        ; preds = %sw.default, %sw.bb72, %sw.bb67, %sw.bb62, %sw.bb59, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb39, %sw.bb34, %sw.bb29, %sw.bb24, %sw.bb19, %sw.bb14, %sw.bb9, %sw.bb4, %sw.bb
  br label %for.inc, !dbg !2748

for.inc:                                          ; preds = %sw.epilog
  %81 = load i32, i32* %i, align 4, !dbg !2749
  %inc = add nsw i32 %81, 1, !dbg !2749
  store i32 %inc, i32* %i, align 4, !dbg !2749
  br label %for.cond, !dbg !2751, !llvm.loop !2752

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2754
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal i32 @zero_cmp(%struct.MpegEncContext* %s, i8* %a, i8* %b, i64 %stride, i32 %h) #0 !dbg !2755 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !2760, metadata !2614), !dbg !2761
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !2762, metadata !2614), !dbg !2763
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !2764, metadata !2614), !dbg !2765
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !2766, metadata !2614), !dbg !2767
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !2768, metadata !2614), !dbg !2769
  ret i32 0, !dbg !2770
}

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind uwtable
define i32 @ff_check_alignment() #0 !dbg !949 {
entry:
  %retval = alloca i32, align 4
  %la_aligned = alloca [4 x i32], align 16
  %aligned = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata [4 x i32]* %la_aligned, metadata !2771, metadata !2614), !dbg !2772
  call void @llvm.dbg.declare(metadata i32** %aligned, metadata !2773, metadata !2614), !dbg !2774
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %la_aligned, i32 0, i32 0, !dbg !2775
  store i32* %arraydecay, i32** %aligned, align 8, !dbg !2774
  %0 = load i32*, i32** %aligned, align 8, !dbg !2776
  %1 = ptrtoint i32* %0 to i64, !dbg !2778
  %and = and i64 %1, 15, !dbg !2779
  %tobool = icmp ne i64 %and, 0, !dbg !2779
  br i1 %tobool, label %if.then, label %if.end3, !dbg !2780

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @ff_check_alignment.did_fail, align 4, !dbg !2781
  %tobool1 = icmp ne i32 %2, 0, !dbg !2781
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !2784

if.then2:                                         ; preds = %if.then
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([244 x i8], [244 x i8]* @.str.1, i32 0, i32 0)), !dbg !2785
  store i32 1, i32* @ff_check_alignment.did_fail, align 4, !dbg !2787
  br label %if.end, !dbg !2788

if.end:                                           ; preds = %if.then2, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !2789
  br label %return, !dbg !2789

if.end3:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2790
  br label %return, !dbg !2790

return:                                           ; preds = %if.end3, %if.end
  %3 = load i32, i32* %retval, align 4, !dbg !2791
  ret i32 %3, !dbg !2791
}

; Function Attrs: cold nounwind optsize uwtable
define void @ff_me_cmp_init(%struct.MECmpContext* %c, %struct.AVCodecContext* %avctx) #4 !dbg !2792 {
entry:
  %c.addr = alloca %struct.MECmpContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.MECmpContext* %c, %struct.MECmpContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MECmpContext** %c.addr, metadata !2795, metadata !2614), !dbg !2796
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2797, metadata !2614), !dbg !2798
  %call = call i32 @ff_check_alignment(), !dbg !2799
  %0 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2800
  %sum_abs_dctelem = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %0, i32 0, i32 0, !dbg !2801
  store i32 (i16*)* @sum_abs_dctelem_c, i32 (i16*)** %sum_abs_dctelem, align 8, !dbg !2802
  %1 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2803
  %pix_abs = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %1, i32 0, i32 21, !dbg !2804
  %arrayidx = getelementptr inbounds [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]]* %pix_abs, i64 0, i64 0, !dbg !2803
  %arrayidx1 = getelementptr inbounds [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %arrayidx, i64 0, i64 0, !dbg !2803
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @pix_abs16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx1, align 8, !dbg !2805
  %2 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2806
  %pix_abs2 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %2, i32 0, i32 21, !dbg !2807
  %arrayidx3 = getelementptr inbounds [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]]* %pix_abs2, i64 0, i64 0, !dbg !2806
  %arrayidx4 = getelementptr inbounds [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %arrayidx3, i64 0, i64 1, !dbg !2806
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @pix_abs16_x2_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx4, align 8, !dbg !2808
  %3 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2809
  %pix_abs5 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %3, i32 0, i32 21, !dbg !2810
  %arrayidx6 = getelementptr inbounds [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]]* %pix_abs5, i64 0, i64 0, !dbg !2809
  %arrayidx7 = getelementptr inbounds [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %arrayidx6, i64 0, i64 2, !dbg !2809
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @pix_abs16_y2_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx7, align 8, !dbg !2811
  %4 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2812
  %pix_abs8 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %4, i32 0, i32 21, !dbg !2813
  %arrayidx9 = getelementptr inbounds [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]]* %pix_abs8, i64 0, i64 0, !dbg !2812
  %arrayidx10 = getelementptr inbounds [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %arrayidx9, i64 0, i64 3, !dbg !2812
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @pix_abs16_xy2_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx10, align 8, !dbg !2814
  %5 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2815
  %pix_abs11 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %5, i32 0, i32 21, !dbg !2816
  %arrayidx12 = getelementptr inbounds [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]]* %pix_abs11, i64 0, i64 1, !dbg !2815
  %arrayidx13 = getelementptr inbounds [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %arrayidx12, i64 0, i64 0, !dbg !2815
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @pix_abs8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx13, align 8, !dbg !2817
  %6 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2818
  %pix_abs14 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %6, i32 0, i32 21, !dbg !2819
  %arrayidx15 = getelementptr inbounds [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]]* %pix_abs14, i64 0, i64 1, !dbg !2818
  %arrayidx16 = getelementptr inbounds [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %arrayidx15, i64 0, i64 1, !dbg !2818
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @pix_abs8_x2_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx16, align 8, !dbg !2820
  %7 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2821
  %pix_abs17 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %7, i32 0, i32 21, !dbg !2822
  %arrayidx18 = getelementptr inbounds [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]]* %pix_abs17, i64 0, i64 1, !dbg !2821
  %arrayidx19 = getelementptr inbounds [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %arrayidx18, i64 0, i64 2, !dbg !2821
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @pix_abs8_y2_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx19, align 8, !dbg !2823
  %8 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2824
  %pix_abs20 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %8, i32 0, i32 21, !dbg !2825
  %arrayidx21 = getelementptr inbounds [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]]* %pix_abs20, i64 0, i64 1, !dbg !2824
  %arrayidx22 = getelementptr inbounds [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %arrayidx21, i64 0, i64 3, !dbg !2824
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @pix_abs8_xy2_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx22, align 8, !dbg !2826
  %9 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2827
  %hadamard8_diff = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %9, i32 0, i32 3, !dbg !2828
  %arrayidx23 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %hadamard8_diff, i64 0, i64 0, !dbg !2827
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @hadamard8_diff16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx23, align 8, !dbg !2829
  %10 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2830
  %hadamard8_diff24 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %10, i32 0, i32 3, !dbg !2831
  %arrayidx25 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %hadamard8_diff24, i64 0, i64 1, !dbg !2830
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @hadamard8_diff8x8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx25, align 8, !dbg !2832
  %11 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2833
  %hadamard8_diff26 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %11, i32 0, i32 3, !dbg !2834
  %arrayidx27 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %hadamard8_diff26, i64 0, i64 4, !dbg !2833
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @hadamard8_intra16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx27, align 8, !dbg !2835
  %12 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2836
  %hadamard8_diff28 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %12, i32 0, i32 3, !dbg !2837
  %arrayidx29 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %hadamard8_diff28, i64 0, i64 5, !dbg !2836
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @hadamard8_intra8x8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx29, align 8, !dbg !2838
  %13 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2839
  %dct_sad = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %13, i32 0, i32 4, !dbg !2840
  %arrayidx30 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %dct_sad, i64 0, i64 0, !dbg !2839
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @dct_sad16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx30, align 8, !dbg !2841
  %14 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2842
  %dct_sad31 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %14, i32 0, i32 4, !dbg !2843
  %arrayidx32 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %dct_sad31, i64 0, i64 1, !dbg !2842
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @dct_sad8x8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx32, align 8, !dbg !2844
  %15 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2845
  %dct_max = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %15, i32 0, i32 13, !dbg !2846
  %arrayidx33 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %dct_max, i64 0, i64 0, !dbg !2845
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @dct_max16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx33, align 8, !dbg !2847
  %16 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2848
  %dct_max34 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %16, i32 0, i32 13, !dbg !2849
  %arrayidx35 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %dct_max34, i64 0, i64 1, !dbg !2848
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @dct_max8x8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx35, align 8, !dbg !2850
  %17 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2851
  %sad = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %17, i32 0, i32 1, !dbg !2852
  %arrayidx36 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %sad, i64 0, i64 0, !dbg !2851
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @pix_abs16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx36, align 8, !dbg !2853
  %18 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2854
  %sad37 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %18, i32 0, i32 1, !dbg !2855
  %arrayidx38 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %sad37, i64 0, i64 1, !dbg !2854
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @pix_abs8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx38, align 8, !dbg !2856
  %19 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2857
  %sse = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %19, i32 0, i32 2, !dbg !2858
  %arrayidx39 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %sse, i64 0, i64 0, !dbg !2857
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @sse16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx39, align 8, !dbg !2859
  %20 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2860
  %sse40 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %20, i32 0, i32 2, !dbg !2861
  %arrayidx41 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %sse40, i64 0, i64 1, !dbg !2860
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @sse8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx41, align 8, !dbg !2862
  %21 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2863
  %sse42 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %21, i32 0, i32 2, !dbg !2864
  %arrayidx43 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %sse42, i64 0, i64 2, !dbg !2863
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @sse4_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx43, align 8, !dbg !2865
  %22 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2866
  %quant_psnr = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %22, i32 0, i32 5, !dbg !2867
  %arrayidx44 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %quant_psnr, i64 0, i64 0, !dbg !2866
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @quant_psnr16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx44, align 8, !dbg !2868
  %23 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2869
  %quant_psnr45 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %23, i32 0, i32 5, !dbg !2870
  %arrayidx46 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %quant_psnr45, i64 0, i64 1, !dbg !2869
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @quant_psnr8x8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx46, align 8, !dbg !2871
  %24 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2872
  %rd = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %24, i32 0, i32 7, !dbg !2873
  %arrayidx47 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %rd, i64 0, i64 0, !dbg !2872
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @rd16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx47, align 8, !dbg !2874
  %25 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2875
  %rd48 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %25, i32 0, i32 7, !dbg !2876
  %arrayidx49 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %rd48, i64 0, i64 1, !dbg !2875
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @rd8x8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx49, align 8, !dbg !2877
  %26 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2878
  %bit = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %26, i32 0, i32 6, !dbg !2879
  %arrayidx50 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %bit, i64 0, i64 0, !dbg !2878
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @bit16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx50, align 8, !dbg !2880
  %27 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2881
  %bit51 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %27, i32 0, i32 6, !dbg !2882
  %arrayidx52 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %bit51, i64 0, i64 1, !dbg !2881
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @bit8x8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx52, align 8, !dbg !2883
  %28 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2884
  %vsad = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %28, i32 0, i32 8, !dbg !2885
  %arrayidx53 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %vsad, i64 0, i64 0, !dbg !2884
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @vsad16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx53, align 8, !dbg !2886
  %29 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2887
  %vsad54 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %29, i32 0, i32 8, !dbg !2888
  %arrayidx55 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %vsad54, i64 0, i64 1, !dbg !2887
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @vsad8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx55, align 8, !dbg !2889
  %30 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2890
  %vsad56 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %30, i32 0, i32 8, !dbg !2891
  %arrayidx57 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %vsad56, i64 0, i64 4, !dbg !2890
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @vsad_intra16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx57, align 8, !dbg !2892
  %31 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2893
  %vsad58 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %31, i32 0, i32 8, !dbg !2894
  %arrayidx59 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %vsad58, i64 0, i64 5, !dbg !2893
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @vsad_intra8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx59, align 8, !dbg !2895
  %32 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2896
  %vsse = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %32, i32 0, i32 9, !dbg !2897
  %arrayidx60 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %vsse, i64 0, i64 0, !dbg !2896
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @vsse16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx60, align 8, !dbg !2898
  %33 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2899
  %vsse61 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %33, i32 0, i32 9, !dbg !2900
  %arrayidx62 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %vsse61, i64 0, i64 1, !dbg !2899
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @vsse8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx62, align 8, !dbg !2901
  %34 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2902
  %vsse63 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %34, i32 0, i32 9, !dbg !2903
  %arrayidx64 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %vsse63, i64 0, i64 4, !dbg !2902
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @vsse_intra16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx64, align 8, !dbg !2904
  %35 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2905
  %vsse65 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %35, i32 0, i32 9, !dbg !2906
  %arrayidx66 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %vsse65, i64 0, i64 5, !dbg !2905
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @vsse_intra8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx66, align 8, !dbg !2907
  %36 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2908
  %nsse = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %36, i32 0, i32 10, !dbg !2909
  %arrayidx67 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %nsse, i64 0, i64 0, !dbg !2908
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @nsse16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx67, align 8, !dbg !2910
  %37 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2911
  %nsse68 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %37, i32 0, i32 10, !dbg !2912
  %arrayidx69 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %nsse68, i64 0, i64 1, !dbg !2911
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @nsse8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx69, align 8, !dbg !2913
  %38 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2914
  call void @ff_dsputil_init_dwt(%struct.MECmpContext* %38), !dbg !2915
  %39 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2916
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2918
  call void @ff_me_cmp_init_x86(%struct.MECmpContext* %39, %struct.AVCodecContext* %40), !dbg !2919
  %41 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2920
  %median_sad = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %41, i32 0, i32 22, !dbg !2921
  %arrayidx70 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %median_sad, i64 0, i64 0, !dbg !2920
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @pix_median_abs16_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx70, align 8, !dbg !2922
  %42 = load %struct.MECmpContext*, %struct.MECmpContext** %c.addr, align 8, !dbg !2923
  %median_sad71 = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %42, i32 0, i32 22, !dbg !2924
  %arrayidx72 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %median_sad71, i64 0, i64 1, !dbg !2923
  store i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)* @pix_median_abs8_c, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx72, align 8, !dbg !2925
  ret void, !dbg !2926
}

; Function Attrs: nounwind uwtable
define internal i32 @sum_abs_dctelem_c(i16* %block) #0 !dbg !2927 {
entry:
  %block.addr = alloca i16*, align 8
  %sum = alloca i32, align 4
  %i = alloca i32, align 4
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !2928, metadata !2614), !dbg !2929
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !2930, metadata !2614), !dbg !2931
  store i32 0, i32* %sum, align 4, !dbg !2931
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2932, metadata !2614), !dbg !2933
  store i32 0, i32* %i, align 4, !dbg !2934
  br label %for.cond, !dbg !2936

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2937
  %cmp = icmp slt i32 %0, 64, !dbg !2940
  br i1 %cmp, label %for.body, label %for.end, !dbg !2941

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !2942
  %idxprom = sext i32 %1 to i64, !dbg !2943
  %2 = load i16*, i16** %block.addr, align 8, !dbg !2943
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 %idxprom, !dbg !2943
  %3 = load i16, i16* %arrayidx, align 2, !dbg !2943
  %conv = sext i16 %3 to i32, !dbg !2944
  %cmp1 = icmp sge i32 %conv, 0, !dbg !2945
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !2944

cond.true:                                        ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !2946
  %idxprom3 = sext i32 %4 to i64, !dbg !2947
  %5 = load i16*, i16** %block.addr, align 8, !dbg !2947
  %arrayidx4 = getelementptr inbounds i16, i16* %5, i64 %idxprom3, !dbg !2947
  %6 = load i16, i16* %arrayidx4, align 2, !dbg !2947
  %conv5 = sext i16 %6 to i32, !dbg !2948
  br label %cond.end, !dbg !2949

cond.false:                                       ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !2950
  %idxprom6 = sext i32 %7 to i64, !dbg !2952
  %8 = load i16*, i16** %block.addr, align 8, !dbg !2952
  %arrayidx7 = getelementptr inbounds i16, i16* %8, i64 %idxprom6, !dbg !2952
  %9 = load i16, i16* %arrayidx7, align 2, !dbg !2952
  %conv8 = sext i16 %9 to i32, !dbg !2953
  %sub = sub nsw i32 0, %conv8, !dbg !2954
  br label %cond.end, !dbg !2955

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %sub, %cond.false ], !dbg !2956
  %10 = load i32, i32* %sum, align 4, !dbg !2958
  %add = add nsw i32 %10, %cond, !dbg !2958
  store i32 %add, i32* %sum, align 4, !dbg !2958
  br label %for.inc, !dbg !2959

for.inc:                                          ; preds = %cond.end
  %11 = load i32, i32* %i, align 4, !dbg !2960
  %inc = add nsw i32 %11, 1, !dbg !2960
  store i32 %inc, i32* %i, align 4, !dbg !2960
  br label %for.cond, !dbg !2961, !llvm.loop !2962

for.end:                                          ; preds = %for.cond
  %12 = load i32, i32* %sum, align 4, !dbg !2964
  ret i32 %12, !dbg !2965
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @pix_abs16_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #5 !dbg !2966 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !2967, metadata !2614), !dbg !2968
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !2969, metadata !2614), !dbg !2970
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !2971, metadata !2614), !dbg !2972
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !2973, metadata !2614), !dbg !2974
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !2975, metadata !2614), !dbg !2976
  call void @llvm.dbg.declare(metadata i32* %s, metadata !2977, metadata !2614), !dbg !2978
  store i32 0, i32* %s, align 4, !dbg !2978
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2979, metadata !2614), !dbg !2980
  store i32 0, i32* %i, align 4, !dbg !2981
  br label %for.cond, !dbg !2983

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2984
  %1 = load i32, i32* %h.addr, align 4, !dbg !2987
  %cmp = icmp slt i32 %0, %1, !dbg !2988
  br i1 %cmp, label %for.body, label %for.end, !dbg !2989

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %pix1.addr, align 8, !dbg !2990
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !2990
  %3 = load i8, i8* %arrayidx, align 1, !dbg !2990
  %conv = zext i8 %3 to i32, !dbg !2990
  %4 = load i8*, i8** %pix2.addr, align 8, !dbg !2992
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !2992
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !2992
  %conv2 = zext i8 %5 to i32, !dbg !2992
  %sub = sub nsw i32 %conv, %conv2, !dbg !2993
  %call = call i32 @abs(i32 %sub) #1, !dbg !2994
  %6 = load i32, i32* %s, align 4, !dbg !2995
  %add = add nsw i32 %6, %call, !dbg !2995
  store i32 %add, i32* %s, align 4, !dbg !2995
  %7 = load i8*, i8** %pix1.addr, align 8, !dbg !2996
  %arrayidx3 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !2996
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !2996
  %conv4 = zext i8 %8 to i32, !dbg !2996
  %9 = load i8*, i8** %pix2.addr, align 8, !dbg !2997
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !2997
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !2997
  %conv6 = zext i8 %10 to i32, !dbg !2997
  %sub7 = sub nsw i32 %conv4, %conv6, !dbg !2998
  %call8 = call i32 @abs(i32 %sub7) #1, !dbg !2999
  %11 = load i32, i32* %s, align 4, !dbg !3000
  %add9 = add nsw i32 %11, %call8, !dbg !3000
  store i32 %add9, i32* %s, align 4, !dbg !3000
  %12 = load i8*, i8** %pix1.addr, align 8, !dbg !3001
  %arrayidx10 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !3001
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !3001
  %conv11 = zext i8 %13 to i32, !dbg !3001
  %14 = load i8*, i8** %pix2.addr, align 8, !dbg !3002
  %arrayidx12 = getelementptr inbounds i8, i8* %14, i64 2, !dbg !3002
  %15 = load i8, i8* %arrayidx12, align 1, !dbg !3002
  %conv13 = zext i8 %15 to i32, !dbg !3002
  %sub14 = sub nsw i32 %conv11, %conv13, !dbg !3003
  %call15 = call i32 @abs(i32 %sub14) #1, !dbg !3004
  %16 = load i32, i32* %s, align 4, !dbg !3005
  %add16 = add nsw i32 %16, %call15, !dbg !3005
  store i32 %add16, i32* %s, align 4, !dbg !3005
  %17 = load i8*, i8** %pix1.addr, align 8, !dbg !3006
  %arrayidx17 = getelementptr inbounds i8, i8* %17, i64 3, !dbg !3006
  %18 = load i8, i8* %arrayidx17, align 1, !dbg !3006
  %conv18 = zext i8 %18 to i32, !dbg !3006
  %19 = load i8*, i8** %pix2.addr, align 8, !dbg !3007
  %arrayidx19 = getelementptr inbounds i8, i8* %19, i64 3, !dbg !3007
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !3007
  %conv20 = zext i8 %20 to i32, !dbg !3007
  %sub21 = sub nsw i32 %conv18, %conv20, !dbg !3008
  %call22 = call i32 @abs(i32 %sub21) #1, !dbg !3009
  %21 = load i32, i32* %s, align 4, !dbg !3010
  %add23 = add nsw i32 %21, %call22, !dbg !3010
  store i32 %add23, i32* %s, align 4, !dbg !3010
  %22 = load i8*, i8** %pix1.addr, align 8, !dbg !3011
  %arrayidx24 = getelementptr inbounds i8, i8* %22, i64 4, !dbg !3011
  %23 = load i8, i8* %arrayidx24, align 1, !dbg !3011
  %conv25 = zext i8 %23 to i32, !dbg !3011
  %24 = load i8*, i8** %pix2.addr, align 8, !dbg !3012
  %arrayidx26 = getelementptr inbounds i8, i8* %24, i64 4, !dbg !3012
  %25 = load i8, i8* %arrayidx26, align 1, !dbg !3012
  %conv27 = zext i8 %25 to i32, !dbg !3012
  %sub28 = sub nsw i32 %conv25, %conv27, !dbg !3013
  %call29 = call i32 @abs(i32 %sub28) #1, !dbg !3014
  %26 = load i32, i32* %s, align 4, !dbg !3015
  %add30 = add nsw i32 %26, %call29, !dbg !3015
  store i32 %add30, i32* %s, align 4, !dbg !3015
  %27 = load i8*, i8** %pix1.addr, align 8, !dbg !3016
  %arrayidx31 = getelementptr inbounds i8, i8* %27, i64 5, !dbg !3016
  %28 = load i8, i8* %arrayidx31, align 1, !dbg !3016
  %conv32 = zext i8 %28 to i32, !dbg !3016
  %29 = load i8*, i8** %pix2.addr, align 8, !dbg !3017
  %arrayidx33 = getelementptr inbounds i8, i8* %29, i64 5, !dbg !3017
  %30 = load i8, i8* %arrayidx33, align 1, !dbg !3017
  %conv34 = zext i8 %30 to i32, !dbg !3017
  %sub35 = sub nsw i32 %conv32, %conv34, !dbg !3018
  %call36 = call i32 @abs(i32 %sub35) #1, !dbg !3019
  %31 = load i32, i32* %s, align 4, !dbg !3020
  %add37 = add nsw i32 %31, %call36, !dbg !3020
  store i32 %add37, i32* %s, align 4, !dbg !3020
  %32 = load i8*, i8** %pix1.addr, align 8, !dbg !3021
  %arrayidx38 = getelementptr inbounds i8, i8* %32, i64 6, !dbg !3021
  %33 = load i8, i8* %arrayidx38, align 1, !dbg !3021
  %conv39 = zext i8 %33 to i32, !dbg !3021
  %34 = load i8*, i8** %pix2.addr, align 8, !dbg !3022
  %arrayidx40 = getelementptr inbounds i8, i8* %34, i64 6, !dbg !3022
  %35 = load i8, i8* %arrayidx40, align 1, !dbg !3022
  %conv41 = zext i8 %35 to i32, !dbg !3022
  %sub42 = sub nsw i32 %conv39, %conv41, !dbg !3023
  %call43 = call i32 @abs(i32 %sub42) #1, !dbg !3024
  %36 = load i32, i32* %s, align 4, !dbg !3025
  %add44 = add nsw i32 %36, %call43, !dbg !3025
  store i32 %add44, i32* %s, align 4, !dbg !3025
  %37 = load i8*, i8** %pix1.addr, align 8, !dbg !3026
  %arrayidx45 = getelementptr inbounds i8, i8* %37, i64 7, !dbg !3026
  %38 = load i8, i8* %arrayidx45, align 1, !dbg !3026
  %conv46 = zext i8 %38 to i32, !dbg !3026
  %39 = load i8*, i8** %pix2.addr, align 8, !dbg !3027
  %arrayidx47 = getelementptr inbounds i8, i8* %39, i64 7, !dbg !3027
  %40 = load i8, i8* %arrayidx47, align 1, !dbg !3027
  %conv48 = zext i8 %40 to i32, !dbg !3027
  %sub49 = sub nsw i32 %conv46, %conv48, !dbg !3028
  %call50 = call i32 @abs(i32 %sub49) #1, !dbg !3029
  %41 = load i32, i32* %s, align 4, !dbg !3030
  %add51 = add nsw i32 %41, %call50, !dbg !3030
  store i32 %add51, i32* %s, align 4, !dbg !3030
  %42 = load i8*, i8** %pix1.addr, align 8, !dbg !3031
  %arrayidx52 = getelementptr inbounds i8, i8* %42, i64 8, !dbg !3031
  %43 = load i8, i8* %arrayidx52, align 1, !dbg !3031
  %conv53 = zext i8 %43 to i32, !dbg !3031
  %44 = load i8*, i8** %pix2.addr, align 8, !dbg !3032
  %arrayidx54 = getelementptr inbounds i8, i8* %44, i64 8, !dbg !3032
  %45 = load i8, i8* %arrayidx54, align 1, !dbg !3032
  %conv55 = zext i8 %45 to i32, !dbg !3032
  %sub56 = sub nsw i32 %conv53, %conv55, !dbg !3033
  %call57 = call i32 @abs(i32 %sub56) #1, !dbg !3034
  %46 = load i32, i32* %s, align 4, !dbg !3035
  %add58 = add nsw i32 %46, %call57, !dbg !3035
  store i32 %add58, i32* %s, align 4, !dbg !3035
  %47 = load i8*, i8** %pix1.addr, align 8, !dbg !3036
  %arrayidx59 = getelementptr inbounds i8, i8* %47, i64 9, !dbg !3036
  %48 = load i8, i8* %arrayidx59, align 1, !dbg !3036
  %conv60 = zext i8 %48 to i32, !dbg !3036
  %49 = load i8*, i8** %pix2.addr, align 8, !dbg !3037
  %arrayidx61 = getelementptr inbounds i8, i8* %49, i64 9, !dbg !3037
  %50 = load i8, i8* %arrayidx61, align 1, !dbg !3037
  %conv62 = zext i8 %50 to i32, !dbg !3037
  %sub63 = sub nsw i32 %conv60, %conv62, !dbg !3038
  %call64 = call i32 @abs(i32 %sub63) #1, !dbg !3039
  %51 = load i32, i32* %s, align 4, !dbg !3040
  %add65 = add nsw i32 %51, %call64, !dbg !3040
  store i32 %add65, i32* %s, align 4, !dbg !3040
  %52 = load i8*, i8** %pix1.addr, align 8, !dbg !3041
  %arrayidx66 = getelementptr inbounds i8, i8* %52, i64 10, !dbg !3041
  %53 = load i8, i8* %arrayidx66, align 1, !dbg !3041
  %conv67 = zext i8 %53 to i32, !dbg !3041
  %54 = load i8*, i8** %pix2.addr, align 8, !dbg !3042
  %arrayidx68 = getelementptr inbounds i8, i8* %54, i64 10, !dbg !3042
  %55 = load i8, i8* %arrayidx68, align 1, !dbg !3042
  %conv69 = zext i8 %55 to i32, !dbg !3042
  %sub70 = sub nsw i32 %conv67, %conv69, !dbg !3043
  %call71 = call i32 @abs(i32 %sub70) #1, !dbg !3044
  %56 = load i32, i32* %s, align 4, !dbg !3045
  %add72 = add nsw i32 %56, %call71, !dbg !3045
  store i32 %add72, i32* %s, align 4, !dbg !3045
  %57 = load i8*, i8** %pix1.addr, align 8, !dbg !3046
  %arrayidx73 = getelementptr inbounds i8, i8* %57, i64 11, !dbg !3046
  %58 = load i8, i8* %arrayidx73, align 1, !dbg !3046
  %conv74 = zext i8 %58 to i32, !dbg !3046
  %59 = load i8*, i8** %pix2.addr, align 8, !dbg !3047
  %arrayidx75 = getelementptr inbounds i8, i8* %59, i64 11, !dbg !3047
  %60 = load i8, i8* %arrayidx75, align 1, !dbg !3047
  %conv76 = zext i8 %60 to i32, !dbg !3047
  %sub77 = sub nsw i32 %conv74, %conv76, !dbg !3048
  %call78 = call i32 @abs(i32 %sub77) #1, !dbg !3049
  %61 = load i32, i32* %s, align 4, !dbg !3050
  %add79 = add nsw i32 %61, %call78, !dbg !3050
  store i32 %add79, i32* %s, align 4, !dbg !3050
  %62 = load i8*, i8** %pix1.addr, align 8, !dbg !3051
  %arrayidx80 = getelementptr inbounds i8, i8* %62, i64 12, !dbg !3051
  %63 = load i8, i8* %arrayidx80, align 1, !dbg !3051
  %conv81 = zext i8 %63 to i32, !dbg !3051
  %64 = load i8*, i8** %pix2.addr, align 8, !dbg !3052
  %arrayidx82 = getelementptr inbounds i8, i8* %64, i64 12, !dbg !3052
  %65 = load i8, i8* %arrayidx82, align 1, !dbg !3052
  %conv83 = zext i8 %65 to i32, !dbg !3052
  %sub84 = sub nsw i32 %conv81, %conv83, !dbg !3053
  %call85 = call i32 @abs(i32 %sub84) #1, !dbg !3054
  %66 = load i32, i32* %s, align 4, !dbg !3055
  %add86 = add nsw i32 %66, %call85, !dbg !3055
  store i32 %add86, i32* %s, align 4, !dbg !3055
  %67 = load i8*, i8** %pix1.addr, align 8, !dbg !3056
  %arrayidx87 = getelementptr inbounds i8, i8* %67, i64 13, !dbg !3056
  %68 = load i8, i8* %arrayidx87, align 1, !dbg !3056
  %conv88 = zext i8 %68 to i32, !dbg !3056
  %69 = load i8*, i8** %pix2.addr, align 8, !dbg !3057
  %arrayidx89 = getelementptr inbounds i8, i8* %69, i64 13, !dbg !3057
  %70 = load i8, i8* %arrayidx89, align 1, !dbg !3057
  %conv90 = zext i8 %70 to i32, !dbg !3057
  %sub91 = sub nsw i32 %conv88, %conv90, !dbg !3058
  %call92 = call i32 @abs(i32 %sub91) #1, !dbg !3059
  %71 = load i32, i32* %s, align 4, !dbg !3060
  %add93 = add nsw i32 %71, %call92, !dbg !3060
  store i32 %add93, i32* %s, align 4, !dbg !3060
  %72 = load i8*, i8** %pix1.addr, align 8, !dbg !3061
  %arrayidx94 = getelementptr inbounds i8, i8* %72, i64 14, !dbg !3061
  %73 = load i8, i8* %arrayidx94, align 1, !dbg !3061
  %conv95 = zext i8 %73 to i32, !dbg !3061
  %74 = load i8*, i8** %pix2.addr, align 8, !dbg !3062
  %arrayidx96 = getelementptr inbounds i8, i8* %74, i64 14, !dbg !3062
  %75 = load i8, i8* %arrayidx96, align 1, !dbg !3062
  %conv97 = zext i8 %75 to i32, !dbg !3062
  %sub98 = sub nsw i32 %conv95, %conv97, !dbg !3063
  %call99 = call i32 @abs(i32 %sub98) #1, !dbg !3064
  %76 = load i32, i32* %s, align 4, !dbg !3065
  %add100 = add nsw i32 %76, %call99, !dbg !3065
  store i32 %add100, i32* %s, align 4, !dbg !3065
  %77 = load i8*, i8** %pix1.addr, align 8, !dbg !3066
  %arrayidx101 = getelementptr inbounds i8, i8* %77, i64 15, !dbg !3066
  %78 = load i8, i8* %arrayidx101, align 1, !dbg !3066
  %conv102 = zext i8 %78 to i32, !dbg !3066
  %79 = load i8*, i8** %pix2.addr, align 8, !dbg !3067
  %arrayidx103 = getelementptr inbounds i8, i8* %79, i64 15, !dbg !3067
  %80 = load i8, i8* %arrayidx103, align 1, !dbg !3067
  %conv104 = zext i8 %80 to i32, !dbg !3067
  %sub105 = sub nsw i32 %conv102, %conv104, !dbg !3068
  %call106 = call i32 @abs(i32 %sub105) #1, !dbg !3069
  %81 = load i32, i32* %s, align 4, !dbg !3070
  %add107 = add nsw i32 %81, %call106, !dbg !3070
  store i32 %add107, i32* %s, align 4, !dbg !3070
  %82 = load i64, i64* %stride.addr, align 8, !dbg !3071
  %83 = load i8*, i8** %pix1.addr, align 8, !dbg !3072
  %add.ptr = getelementptr inbounds i8, i8* %83, i64 %82, !dbg !3072
  store i8* %add.ptr, i8** %pix1.addr, align 8, !dbg !3072
  %84 = load i64, i64* %stride.addr, align 8, !dbg !3073
  %85 = load i8*, i8** %pix2.addr, align 8, !dbg !3074
  %add.ptr108 = getelementptr inbounds i8, i8* %85, i64 %84, !dbg !3074
  store i8* %add.ptr108, i8** %pix2.addr, align 8, !dbg !3074
  br label %for.inc, !dbg !3075

for.inc:                                          ; preds = %for.body
  %86 = load i32, i32* %i, align 4, !dbg !3076
  %inc = add nsw i32 %86, 1, !dbg !3076
  store i32 %inc, i32* %i, align 4, !dbg !3076
  br label %for.cond, !dbg !3078, !llvm.loop !3079

for.end:                                          ; preds = %for.cond
  %87 = load i32, i32* %s, align 4, !dbg !3081
  ret i32 %87, !dbg !3082
}

; Function Attrs: nounwind uwtable
define internal i32 @pix_abs16_x2_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #0 !dbg !3083 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !3084, metadata !2614), !dbg !3085
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !3086, metadata !2614), !dbg !3087
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !3088, metadata !2614), !dbg !3089
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !3090, metadata !2614), !dbg !3091
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !3092, metadata !2614), !dbg !3093
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3094, metadata !2614), !dbg !3095
  store i32 0, i32* %s, align 4, !dbg !3095
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3096, metadata !2614), !dbg !3097
  store i32 0, i32* %i, align 4, !dbg !3098
  br label %for.cond, !dbg !3100

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3101
  %1 = load i32, i32* %h.addr, align 4, !dbg !3104
  %cmp = icmp slt i32 %0, %1, !dbg !3105
  br i1 %cmp, label %for.body, label %for.end, !dbg !3106

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %pix1.addr, align 8, !dbg !3107
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !3107
  %3 = load i8, i8* %arrayidx, align 1, !dbg !3107
  %conv = zext i8 %3 to i32, !dbg !3107
  %4 = load i8*, i8** %pix2.addr, align 8, !dbg !3109
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !3109
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !3109
  %conv2 = zext i8 %5 to i32, !dbg !3110
  %6 = load i8*, i8** %pix2.addr, align 8, !dbg !3111
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !3111
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !3111
  %conv4 = zext i8 %7 to i32, !dbg !3112
  %add = add nsw i32 %conv2, %conv4, !dbg !3113
  %add5 = add nsw i32 %add, 1, !dbg !3114
  %shr = ashr i32 %add5, 1, !dbg !3115
  %sub = sub nsw i32 %conv, %shr, !dbg !3116
  %call = call i32 @abs(i32 %sub) #1, !dbg !3117
  %8 = load i32, i32* %s, align 4, !dbg !3118
  %add6 = add nsw i32 %8, %call, !dbg !3118
  store i32 %add6, i32* %s, align 4, !dbg !3118
  %9 = load i8*, i8** %pix1.addr, align 8, !dbg !3119
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !3119
  %10 = load i8, i8* %arrayidx7, align 1, !dbg !3119
  %conv8 = zext i8 %10 to i32, !dbg !3119
  %11 = load i8*, i8** %pix2.addr, align 8, !dbg !3120
  %arrayidx9 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !3120
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !3120
  %conv10 = zext i8 %12 to i32, !dbg !3121
  %13 = load i8*, i8** %pix2.addr, align 8, !dbg !3122
  %arrayidx11 = getelementptr inbounds i8, i8* %13, i64 2, !dbg !3122
  %14 = load i8, i8* %arrayidx11, align 1, !dbg !3122
  %conv12 = zext i8 %14 to i32, !dbg !3123
  %add13 = add nsw i32 %conv10, %conv12, !dbg !3124
  %add14 = add nsw i32 %add13, 1, !dbg !3125
  %shr15 = ashr i32 %add14, 1, !dbg !3126
  %sub16 = sub nsw i32 %conv8, %shr15, !dbg !3127
  %call17 = call i32 @abs(i32 %sub16) #1, !dbg !3128
  %15 = load i32, i32* %s, align 4, !dbg !3129
  %add18 = add nsw i32 %15, %call17, !dbg !3129
  store i32 %add18, i32* %s, align 4, !dbg !3129
  %16 = load i8*, i8** %pix1.addr, align 8, !dbg !3130
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 2, !dbg !3130
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !3130
  %conv20 = zext i8 %17 to i32, !dbg !3130
  %18 = load i8*, i8** %pix2.addr, align 8, !dbg !3131
  %arrayidx21 = getelementptr inbounds i8, i8* %18, i64 2, !dbg !3131
  %19 = load i8, i8* %arrayidx21, align 1, !dbg !3131
  %conv22 = zext i8 %19 to i32, !dbg !3132
  %20 = load i8*, i8** %pix2.addr, align 8, !dbg !3133
  %arrayidx23 = getelementptr inbounds i8, i8* %20, i64 3, !dbg !3133
  %21 = load i8, i8* %arrayidx23, align 1, !dbg !3133
  %conv24 = zext i8 %21 to i32, !dbg !3134
  %add25 = add nsw i32 %conv22, %conv24, !dbg !3135
  %add26 = add nsw i32 %add25, 1, !dbg !3136
  %shr27 = ashr i32 %add26, 1, !dbg !3137
  %sub28 = sub nsw i32 %conv20, %shr27, !dbg !3138
  %call29 = call i32 @abs(i32 %sub28) #1, !dbg !3139
  %22 = load i32, i32* %s, align 4, !dbg !3140
  %add30 = add nsw i32 %22, %call29, !dbg !3140
  store i32 %add30, i32* %s, align 4, !dbg !3140
  %23 = load i8*, i8** %pix1.addr, align 8, !dbg !3141
  %arrayidx31 = getelementptr inbounds i8, i8* %23, i64 3, !dbg !3141
  %24 = load i8, i8* %arrayidx31, align 1, !dbg !3141
  %conv32 = zext i8 %24 to i32, !dbg !3141
  %25 = load i8*, i8** %pix2.addr, align 8, !dbg !3142
  %arrayidx33 = getelementptr inbounds i8, i8* %25, i64 3, !dbg !3142
  %26 = load i8, i8* %arrayidx33, align 1, !dbg !3142
  %conv34 = zext i8 %26 to i32, !dbg !3143
  %27 = load i8*, i8** %pix2.addr, align 8, !dbg !3144
  %arrayidx35 = getelementptr inbounds i8, i8* %27, i64 4, !dbg !3144
  %28 = load i8, i8* %arrayidx35, align 1, !dbg !3144
  %conv36 = zext i8 %28 to i32, !dbg !3145
  %add37 = add nsw i32 %conv34, %conv36, !dbg !3146
  %add38 = add nsw i32 %add37, 1, !dbg !3147
  %shr39 = ashr i32 %add38, 1, !dbg !3148
  %sub40 = sub nsw i32 %conv32, %shr39, !dbg !3149
  %call41 = call i32 @abs(i32 %sub40) #1, !dbg !3150
  %29 = load i32, i32* %s, align 4, !dbg !3151
  %add42 = add nsw i32 %29, %call41, !dbg !3151
  store i32 %add42, i32* %s, align 4, !dbg !3151
  %30 = load i8*, i8** %pix1.addr, align 8, !dbg !3152
  %arrayidx43 = getelementptr inbounds i8, i8* %30, i64 4, !dbg !3152
  %31 = load i8, i8* %arrayidx43, align 1, !dbg !3152
  %conv44 = zext i8 %31 to i32, !dbg !3152
  %32 = load i8*, i8** %pix2.addr, align 8, !dbg !3153
  %arrayidx45 = getelementptr inbounds i8, i8* %32, i64 4, !dbg !3153
  %33 = load i8, i8* %arrayidx45, align 1, !dbg !3153
  %conv46 = zext i8 %33 to i32, !dbg !3154
  %34 = load i8*, i8** %pix2.addr, align 8, !dbg !3155
  %arrayidx47 = getelementptr inbounds i8, i8* %34, i64 5, !dbg !3155
  %35 = load i8, i8* %arrayidx47, align 1, !dbg !3155
  %conv48 = zext i8 %35 to i32, !dbg !3156
  %add49 = add nsw i32 %conv46, %conv48, !dbg !3157
  %add50 = add nsw i32 %add49, 1, !dbg !3158
  %shr51 = ashr i32 %add50, 1, !dbg !3159
  %sub52 = sub nsw i32 %conv44, %shr51, !dbg !3160
  %call53 = call i32 @abs(i32 %sub52) #1, !dbg !3161
  %36 = load i32, i32* %s, align 4, !dbg !3162
  %add54 = add nsw i32 %36, %call53, !dbg !3162
  store i32 %add54, i32* %s, align 4, !dbg !3162
  %37 = load i8*, i8** %pix1.addr, align 8, !dbg !3163
  %arrayidx55 = getelementptr inbounds i8, i8* %37, i64 5, !dbg !3163
  %38 = load i8, i8* %arrayidx55, align 1, !dbg !3163
  %conv56 = zext i8 %38 to i32, !dbg !3163
  %39 = load i8*, i8** %pix2.addr, align 8, !dbg !3164
  %arrayidx57 = getelementptr inbounds i8, i8* %39, i64 5, !dbg !3164
  %40 = load i8, i8* %arrayidx57, align 1, !dbg !3164
  %conv58 = zext i8 %40 to i32, !dbg !3165
  %41 = load i8*, i8** %pix2.addr, align 8, !dbg !3166
  %arrayidx59 = getelementptr inbounds i8, i8* %41, i64 6, !dbg !3166
  %42 = load i8, i8* %arrayidx59, align 1, !dbg !3166
  %conv60 = zext i8 %42 to i32, !dbg !3167
  %add61 = add nsw i32 %conv58, %conv60, !dbg !3168
  %add62 = add nsw i32 %add61, 1, !dbg !3169
  %shr63 = ashr i32 %add62, 1, !dbg !3170
  %sub64 = sub nsw i32 %conv56, %shr63, !dbg !3171
  %call65 = call i32 @abs(i32 %sub64) #1, !dbg !3172
  %43 = load i32, i32* %s, align 4, !dbg !3173
  %add66 = add nsw i32 %43, %call65, !dbg !3173
  store i32 %add66, i32* %s, align 4, !dbg !3173
  %44 = load i8*, i8** %pix1.addr, align 8, !dbg !3174
  %arrayidx67 = getelementptr inbounds i8, i8* %44, i64 6, !dbg !3174
  %45 = load i8, i8* %arrayidx67, align 1, !dbg !3174
  %conv68 = zext i8 %45 to i32, !dbg !3174
  %46 = load i8*, i8** %pix2.addr, align 8, !dbg !3175
  %arrayidx69 = getelementptr inbounds i8, i8* %46, i64 6, !dbg !3175
  %47 = load i8, i8* %arrayidx69, align 1, !dbg !3175
  %conv70 = zext i8 %47 to i32, !dbg !3176
  %48 = load i8*, i8** %pix2.addr, align 8, !dbg !3177
  %arrayidx71 = getelementptr inbounds i8, i8* %48, i64 7, !dbg !3177
  %49 = load i8, i8* %arrayidx71, align 1, !dbg !3177
  %conv72 = zext i8 %49 to i32, !dbg !3178
  %add73 = add nsw i32 %conv70, %conv72, !dbg !3179
  %add74 = add nsw i32 %add73, 1, !dbg !3180
  %shr75 = ashr i32 %add74, 1, !dbg !3181
  %sub76 = sub nsw i32 %conv68, %shr75, !dbg !3182
  %call77 = call i32 @abs(i32 %sub76) #1, !dbg !3183
  %50 = load i32, i32* %s, align 4, !dbg !3184
  %add78 = add nsw i32 %50, %call77, !dbg !3184
  store i32 %add78, i32* %s, align 4, !dbg !3184
  %51 = load i8*, i8** %pix1.addr, align 8, !dbg !3185
  %arrayidx79 = getelementptr inbounds i8, i8* %51, i64 7, !dbg !3185
  %52 = load i8, i8* %arrayidx79, align 1, !dbg !3185
  %conv80 = zext i8 %52 to i32, !dbg !3185
  %53 = load i8*, i8** %pix2.addr, align 8, !dbg !3186
  %arrayidx81 = getelementptr inbounds i8, i8* %53, i64 7, !dbg !3186
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !3186
  %conv82 = zext i8 %54 to i32, !dbg !3187
  %55 = load i8*, i8** %pix2.addr, align 8, !dbg !3188
  %arrayidx83 = getelementptr inbounds i8, i8* %55, i64 8, !dbg !3188
  %56 = load i8, i8* %arrayidx83, align 1, !dbg !3188
  %conv84 = zext i8 %56 to i32, !dbg !3189
  %add85 = add nsw i32 %conv82, %conv84, !dbg !3190
  %add86 = add nsw i32 %add85, 1, !dbg !3191
  %shr87 = ashr i32 %add86, 1, !dbg !3192
  %sub88 = sub nsw i32 %conv80, %shr87, !dbg !3193
  %call89 = call i32 @abs(i32 %sub88) #1, !dbg !3194
  %57 = load i32, i32* %s, align 4, !dbg !3195
  %add90 = add nsw i32 %57, %call89, !dbg !3195
  store i32 %add90, i32* %s, align 4, !dbg !3195
  %58 = load i8*, i8** %pix1.addr, align 8, !dbg !3196
  %arrayidx91 = getelementptr inbounds i8, i8* %58, i64 8, !dbg !3196
  %59 = load i8, i8* %arrayidx91, align 1, !dbg !3196
  %conv92 = zext i8 %59 to i32, !dbg !3196
  %60 = load i8*, i8** %pix2.addr, align 8, !dbg !3197
  %arrayidx93 = getelementptr inbounds i8, i8* %60, i64 8, !dbg !3197
  %61 = load i8, i8* %arrayidx93, align 1, !dbg !3197
  %conv94 = zext i8 %61 to i32, !dbg !3198
  %62 = load i8*, i8** %pix2.addr, align 8, !dbg !3199
  %arrayidx95 = getelementptr inbounds i8, i8* %62, i64 9, !dbg !3199
  %63 = load i8, i8* %arrayidx95, align 1, !dbg !3199
  %conv96 = zext i8 %63 to i32, !dbg !3200
  %add97 = add nsw i32 %conv94, %conv96, !dbg !3201
  %add98 = add nsw i32 %add97, 1, !dbg !3202
  %shr99 = ashr i32 %add98, 1, !dbg !3203
  %sub100 = sub nsw i32 %conv92, %shr99, !dbg !3204
  %call101 = call i32 @abs(i32 %sub100) #1, !dbg !3205
  %64 = load i32, i32* %s, align 4, !dbg !3206
  %add102 = add nsw i32 %64, %call101, !dbg !3206
  store i32 %add102, i32* %s, align 4, !dbg !3206
  %65 = load i8*, i8** %pix1.addr, align 8, !dbg !3207
  %arrayidx103 = getelementptr inbounds i8, i8* %65, i64 9, !dbg !3207
  %66 = load i8, i8* %arrayidx103, align 1, !dbg !3207
  %conv104 = zext i8 %66 to i32, !dbg !3207
  %67 = load i8*, i8** %pix2.addr, align 8, !dbg !3208
  %arrayidx105 = getelementptr inbounds i8, i8* %67, i64 9, !dbg !3208
  %68 = load i8, i8* %arrayidx105, align 1, !dbg !3208
  %conv106 = zext i8 %68 to i32, !dbg !3209
  %69 = load i8*, i8** %pix2.addr, align 8, !dbg !3210
  %arrayidx107 = getelementptr inbounds i8, i8* %69, i64 10, !dbg !3210
  %70 = load i8, i8* %arrayidx107, align 1, !dbg !3210
  %conv108 = zext i8 %70 to i32, !dbg !3211
  %add109 = add nsw i32 %conv106, %conv108, !dbg !3212
  %add110 = add nsw i32 %add109, 1, !dbg !3213
  %shr111 = ashr i32 %add110, 1, !dbg !3214
  %sub112 = sub nsw i32 %conv104, %shr111, !dbg !3215
  %call113 = call i32 @abs(i32 %sub112) #1, !dbg !3216
  %71 = load i32, i32* %s, align 4, !dbg !3217
  %add114 = add nsw i32 %71, %call113, !dbg !3217
  store i32 %add114, i32* %s, align 4, !dbg !3217
  %72 = load i8*, i8** %pix1.addr, align 8, !dbg !3218
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 10, !dbg !3218
  %73 = load i8, i8* %arrayidx115, align 1, !dbg !3218
  %conv116 = zext i8 %73 to i32, !dbg !3218
  %74 = load i8*, i8** %pix2.addr, align 8, !dbg !3219
  %arrayidx117 = getelementptr inbounds i8, i8* %74, i64 10, !dbg !3219
  %75 = load i8, i8* %arrayidx117, align 1, !dbg !3219
  %conv118 = zext i8 %75 to i32, !dbg !3220
  %76 = load i8*, i8** %pix2.addr, align 8, !dbg !3221
  %arrayidx119 = getelementptr inbounds i8, i8* %76, i64 11, !dbg !3221
  %77 = load i8, i8* %arrayidx119, align 1, !dbg !3221
  %conv120 = zext i8 %77 to i32, !dbg !3222
  %add121 = add nsw i32 %conv118, %conv120, !dbg !3223
  %add122 = add nsw i32 %add121, 1, !dbg !3224
  %shr123 = ashr i32 %add122, 1, !dbg !3225
  %sub124 = sub nsw i32 %conv116, %shr123, !dbg !3226
  %call125 = call i32 @abs(i32 %sub124) #1, !dbg !3227
  %78 = load i32, i32* %s, align 4, !dbg !3228
  %add126 = add nsw i32 %78, %call125, !dbg !3228
  store i32 %add126, i32* %s, align 4, !dbg !3228
  %79 = load i8*, i8** %pix1.addr, align 8, !dbg !3229
  %arrayidx127 = getelementptr inbounds i8, i8* %79, i64 11, !dbg !3229
  %80 = load i8, i8* %arrayidx127, align 1, !dbg !3229
  %conv128 = zext i8 %80 to i32, !dbg !3229
  %81 = load i8*, i8** %pix2.addr, align 8, !dbg !3230
  %arrayidx129 = getelementptr inbounds i8, i8* %81, i64 11, !dbg !3230
  %82 = load i8, i8* %arrayidx129, align 1, !dbg !3230
  %conv130 = zext i8 %82 to i32, !dbg !3231
  %83 = load i8*, i8** %pix2.addr, align 8, !dbg !3232
  %arrayidx131 = getelementptr inbounds i8, i8* %83, i64 12, !dbg !3232
  %84 = load i8, i8* %arrayidx131, align 1, !dbg !3232
  %conv132 = zext i8 %84 to i32, !dbg !3233
  %add133 = add nsw i32 %conv130, %conv132, !dbg !3234
  %add134 = add nsw i32 %add133, 1, !dbg !3235
  %shr135 = ashr i32 %add134, 1, !dbg !3236
  %sub136 = sub nsw i32 %conv128, %shr135, !dbg !3237
  %call137 = call i32 @abs(i32 %sub136) #1, !dbg !3238
  %85 = load i32, i32* %s, align 4, !dbg !3239
  %add138 = add nsw i32 %85, %call137, !dbg !3239
  store i32 %add138, i32* %s, align 4, !dbg !3239
  %86 = load i8*, i8** %pix1.addr, align 8, !dbg !3240
  %arrayidx139 = getelementptr inbounds i8, i8* %86, i64 12, !dbg !3240
  %87 = load i8, i8* %arrayidx139, align 1, !dbg !3240
  %conv140 = zext i8 %87 to i32, !dbg !3240
  %88 = load i8*, i8** %pix2.addr, align 8, !dbg !3241
  %arrayidx141 = getelementptr inbounds i8, i8* %88, i64 12, !dbg !3241
  %89 = load i8, i8* %arrayidx141, align 1, !dbg !3241
  %conv142 = zext i8 %89 to i32, !dbg !3242
  %90 = load i8*, i8** %pix2.addr, align 8, !dbg !3243
  %arrayidx143 = getelementptr inbounds i8, i8* %90, i64 13, !dbg !3243
  %91 = load i8, i8* %arrayidx143, align 1, !dbg !3243
  %conv144 = zext i8 %91 to i32, !dbg !3244
  %add145 = add nsw i32 %conv142, %conv144, !dbg !3245
  %add146 = add nsw i32 %add145, 1, !dbg !3246
  %shr147 = ashr i32 %add146, 1, !dbg !3247
  %sub148 = sub nsw i32 %conv140, %shr147, !dbg !3248
  %call149 = call i32 @abs(i32 %sub148) #1, !dbg !3249
  %92 = load i32, i32* %s, align 4, !dbg !3250
  %add150 = add nsw i32 %92, %call149, !dbg !3250
  store i32 %add150, i32* %s, align 4, !dbg !3250
  %93 = load i8*, i8** %pix1.addr, align 8, !dbg !3251
  %arrayidx151 = getelementptr inbounds i8, i8* %93, i64 13, !dbg !3251
  %94 = load i8, i8* %arrayidx151, align 1, !dbg !3251
  %conv152 = zext i8 %94 to i32, !dbg !3251
  %95 = load i8*, i8** %pix2.addr, align 8, !dbg !3252
  %arrayidx153 = getelementptr inbounds i8, i8* %95, i64 13, !dbg !3252
  %96 = load i8, i8* %arrayidx153, align 1, !dbg !3252
  %conv154 = zext i8 %96 to i32, !dbg !3253
  %97 = load i8*, i8** %pix2.addr, align 8, !dbg !3254
  %arrayidx155 = getelementptr inbounds i8, i8* %97, i64 14, !dbg !3254
  %98 = load i8, i8* %arrayidx155, align 1, !dbg !3254
  %conv156 = zext i8 %98 to i32, !dbg !3255
  %add157 = add nsw i32 %conv154, %conv156, !dbg !3256
  %add158 = add nsw i32 %add157, 1, !dbg !3257
  %shr159 = ashr i32 %add158, 1, !dbg !3258
  %sub160 = sub nsw i32 %conv152, %shr159, !dbg !3259
  %call161 = call i32 @abs(i32 %sub160) #1, !dbg !3260
  %99 = load i32, i32* %s, align 4, !dbg !3261
  %add162 = add nsw i32 %99, %call161, !dbg !3261
  store i32 %add162, i32* %s, align 4, !dbg !3261
  %100 = load i8*, i8** %pix1.addr, align 8, !dbg !3262
  %arrayidx163 = getelementptr inbounds i8, i8* %100, i64 14, !dbg !3262
  %101 = load i8, i8* %arrayidx163, align 1, !dbg !3262
  %conv164 = zext i8 %101 to i32, !dbg !3262
  %102 = load i8*, i8** %pix2.addr, align 8, !dbg !3263
  %arrayidx165 = getelementptr inbounds i8, i8* %102, i64 14, !dbg !3263
  %103 = load i8, i8* %arrayidx165, align 1, !dbg !3263
  %conv166 = zext i8 %103 to i32, !dbg !3264
  %104 = load i8*, i8** %pix2.addr, align 8, !dbg !3265
  %arrayidx167 = getelementptr inbounds i8, i8* %104, i64 15, !dbg !3265
  %105 = load i8, i8* %arrayidx167, align 1, !dbg !3265
  %conv168 = zext i8 %105 to i32, !dbg !3266
  %add169 = add nsw i32 %conv166, %conv168, !dbg !3267
  %add170 = add nsw i32 %add169, 1, !dbg !3268
  %shr171 = ashr i32 %add170, 1, !dbg !3269
  %sub172 = sub nsw i32 %conv164, %shr171, !dbg !3270
  %call173 = call i32 @abs(i32 %sub172) #1, !dbg !3271
  %106 = load i32, i32* %s, align 4, !dbg !3272
  %add174 = add nsw i32 %106, %call173, !dbg !3272
  store i32 %add174, i32* %s, align 4, !dbg !3272
  %107 = load i8*, i8** %pix1.addr, align 8, !dbg !3273
  %arrayidx175 = getelementptr inbounds i8, i8* %107, i64 15, !dbg !3273
  %108 = load i8, i8* %arrayidx175, align 1, !dbg !3273
  %conv176 = zext i8 %108 to i32, !dbg !3273
  %109 = load i8*, i8** %pix2.addr, align 8, !dbg !3274
  %arrayidx177 = getelementptr inbounds i8, i8* %109, i64 15, !dbg !3274
  %110 = load i8, i8* %arrayidx177, align 1, !dbg !3274
  %conv178 = zext i8 %110 to i32, !dbg !3275
  %111 = load i8*, i8** %pix2.addr, align 8, !dbg !3276
  %arrayidx179 = getelementptr inbounds i8, i8* %111, i64 16, !dbg !3276
  %112 = load i8, i8* %arrayidx179, align 1, !dbg !3276
  %conv180 = zext i8 %112 to i32, !dbg !3277
  %add181 = add nsw i32 %conv178, %conv180, !dbg !3278
  %add182 = add nsw i32 %add181, 1, !dbg !3279
  %shr183 = ashr i32 %add182, 1, !dbg !3280
  %sub184 = sub nsw i32 %conv176, %shr183, !dbg !3281
  %call185 = call i32 @abs(i32 %sub184) #1, !dbg !3282
  %113 = load i32, i32* %s, align 4, !dbg !3283
  %add186 = add nsw i32 %113, %call185, !dbg !3283
  store i32 %add186, i32* %s, align 4, !dbg !3283
  %114 = load i64, i64* %stride.addr, align 8, !dbg !3284
  %115 = load i8*, i8** %pix1.addr, align 8, !dbg !3285
  %add.ptr = getelementptr inbounds i8, i8* %115, i64 %114, !dbg !3285
  store i8* %add.ptr, i8** %pix1.addr, align 8, !dbg !3285
  %116 = load i64, i64* %stride.addr, align 8, !dbg !3286
  %117 = load i8*, i8** %pix2.addr, align 8, !dbg !3287
  %add.ptr187 = getelementptr inbounds i8, i8* %117, i64 %116, !dbg !3287
  store i8* %add.ptr187, i8** %pix2.addr, align 8, !dbg !3287
  br label %for.inc, !dbg !3288

for.inc:                                          ; preds = %for.body
  %118 = load i32, i32* %i, align 4, !dbg !3289
  %inc = add nsw i32 %118, 1, !dbg !3289
  store i32 %inc, i32* %i, align 4, !dbg !3289
  br label %for.cond, !dbg !3291, !llvm.loop !3292

for.end:                                          ; preds = %for.cond
  %119 = load i32, i32* %s, align 4, !dbg !3294
  ret i32 %119, !dbg !3295
}

; Function Attrs: nounwind uwtable
define internal i32 @pix_abs16_y2_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #0 !dbg !3296 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  %pix3 = alloca i8*, align 8
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !3297, metadata !2614), !dbg !3298
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !3299, metadata !2614), !dbg !3300
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !3301, metadata !2614), !dbg !3302
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !3303, metadata !2614), !dbg !3304
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !3305, metadata !2614), !dbg !3306
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3307, metadata !2614), !dbg !3308
  store i32 0, i32* %s, align 4, !dbg !3308
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3309, metadata !2614), !dbg !3310
  call void @llvm.dbg.declare(metadata i8** %pix3, metadata !3311, metadata !2614), !dbg !3312
  %0 = load i8*, i8** %pix2.addr, align 8, !dbg !3313
  %1 = load i64, i64* %stride.addr, align 8, !dbg !3314
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %1, !dbg !3315
  store i8* %add.ptr, i8** %pix3, align 8, !dbg !3312
  store i32 0, i32* %i, align 4, !dbg !3316
  br label %for.cond, !dbg !3318

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3319
  %3 = load i32, i32* %h.addr, align 4, !dbg !3322
  %cmp = icmp slt i32 %2, %3, !dbg !3323
  br i1 %cmp, label %for.body, label %for.end, !dbg !3324

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %pix1.addr, align 8, !dbg !3325
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !3325
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3325
  %conv = zext i8 %5 to i32, !dbg !3325
  %6 = load i8*, i8** %pix2.addr, align 8, !dbg !3327
  %arrayidx1 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !3327
  %7 = load i8, i8* %arrayidx1, align 1, !dbg !3327
  %conv2 = zext i8 %7 to i32, !dbg !3328
  %8 = load i8*, i8** %pix3, align 8, !dbg !3329
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !3329
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !3329
  %conv4 = zext i8 %9 to i32, !dbg !3330
  %add = add nsw i32 %conv2, %conv4, !dbg !3331
  %add5 = add nsw i32 %add, 1, !dbg !3332
  %shr = ashr i32 %add5, 1, !dbg !3333
  %sub = sub nsw i32 %conv, %shr, !dbg !3334
  %call = call i32 @abs(i32 %sub) #1, !dbg !3335
  %10 = load i32, i32* %s, align 4, !dbg !3336
  %add6 = add nsw i32 %10, %call, !dbg !3336
  store i32 %add6, i32* %s, align 4, !dbg !3336
  %11 = load i8*, i8** %pix1.addr, align 8, !dbg !3337
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !3337
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !3337
  %conv8 = zext i8 %12 to i32, !dbg !3337
  %13 = load i8*, i8** %pix2.addr, align 8, !dbg !3338
  %arrayidx9 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !3338
  %14 = load i8, i8* %arrayidx9, align 1, !dbg !3338
  %conv10 = zext i8 %14 to i32, !dbg !3339
  %15 = load i8*, i8** %pix3, align 8, !dbg !3340
  %arrayidx11 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !3340
  %16 = load i8, i8* %arrayidx11, align 1, !dbg !3340
  %conv12 = zext i8 %16 to i32, !dbg !3341
  %add13 = add nsw i32 %conv10, %conv12, !dbg !3342
  %add14 = add nsw i32 %add13, 1, !dbg !3343
  %shr15 = ashr i32 %add14, 1, !dbg !3344
  %sub16 = sub nsw i32 %conv8, %shr15, !dbg !3345
  %call17 = call i32 @abs(i32 %sub16) #1, !dbg !3346
  %17 = load i32, i32* %s, align 4, !dbg !3347
  %add18 = add nsw i32 %17, %call17, !dbg !3347
  store i32 %add18, i32* %s, align 4, !dbg !3347
  %18 = load i8*, i8** %pix1.addr, align 8, !dbg !3348
  %arrayidx19 = getelementptr inbounds i8, i8* %18, i64 2, !dbg !3348
  %19 = load i8, i8* %arrayidx19, align 1, !dbg !3348
  %conv20 = zext i8 %19 to i32, !dbg !3348
  %20 = load i8*, i8** %pix2.addr, align 8, !dbg !3349
  %arrayidx21 = getelementptr inbounds i8, i8* %20, i64 2, !dbg !3349
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !3349
  %conv22 = zext i8 %21 to i32, !dbg !3350
  %22 = load i8*, i8** %pix3, align 8, !dbg !3351
  %arrayidx23 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !3351
  %23 = load i8, i8* %arrayidx23, align 1, !dbg !3351
  %conv24 = zext i8 %23 to i32, !dbg !3352
  %add25 = add nsw i32 %conv22, %conv24, !dbg !3353
  %add26 = add nsw i32 %add25, 1, !dbg !3354
  %shr27 = ashr i32 %add26, 1, !dbg !3355
  %sub28 = sub nsw i32 %conv20, %shr27, !dbg !3356
  %call29 = call i32 @abs(i32 %sub28) #1, !dbg !3357
  %24 = load i32, i32* %s, align 4, !dbg !3358
  %add30 = add nsw i32 %24, %call29, !dbg !3358
  store i32 %add30, i32* %s, align 4, !dbg !3358
  %25 = load i8*, i8** %pix1.addr, align 8, !dbg !3359
  %arrayidx31 = getelementptr inbounds i8, i8* %25, i64 3, !dbg !3359
  %26 = load i8, i8* %arrayidx31, align 1, !dbg !3359
  %conv32 = zext i8 %26 to i32, !dbg !3359
  %27 = load i8*, i8** %pix2.addr, align 8, !dbg !3360
  %arrayidx33 = getelementptr inbounds i8, i8* %27, i64 3, !dbg !3360
  %28 = load i8, i8* %arrayidx33, align 1, !dbg !3360
  %conv34 = zext i8 %28 to i32, !dbg !3361
  %29 = load i8*, i8** %pix3, align 8, !dbg !3362
  %arrayidx35 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !3362
  %30 = load i8, i8* %arrayidx35, align 1, !dbg !3362
  %conv36 = zext i8 %30 to i32, !dbg !3363
  %add37 = add nsw i32 %conv34, %conv36, !dbg !3364
  %add38 = add nsw i32 %add37, 1, !dbg !3365
  %shr39 = ashr i32 %add38, 1, !dbg !3366
  %sub40 = sub nsw i32 %conv32, %shr39, !dbg !3367
  %call41 = call i32 @abs(i32 %sub40) #1, !dbg !3368
  %31 = load i32, i32* %s, align 4, !dbg !3369
  %add42 = add nsw i32 %31, %call41, !dbg !3369
  store i32 %add42, i32* %s, align 4, !dbg !3369
  %32 = load i8*, i8** %pix1.addr, align 8, !dbg !3370
  %arrayidx43 = getelementptr inbounds i8, i8* %32, i64 4, !dbg !3370
  %33 = load i8, i8* %arrayidx43, align 1, !dbg !3370
  %conv44 = zext i8 %33 to i32, !dbg !3370
  %34 = load i8*, i8** %pix2.addr, align 8, !dbg !3371
  %arrayidx45 = getelementptr inbounds i8, i8* %34, i64 4, !dbg !3371
  %35 = load i8, i8* %arrayidx45, align 1, !dbg !3371
  %conv46 = zext i8 %35 to i32, !dbg !3372
  %36 = load i8*, i8** %pix3, align 8, !dbg !3373
  %arrayidx47 = getelementptr inbounds i8, i8* %36, i64 4, !dbg !3373
  %37 = load i8, i8* %arrayidx47, align 1, !dbg !3373
  %conv48 = zext i8 %37 to i32, !dbg !3374
  %add49 = add nsw i32 %conv46, %conv48, !dbg !3375
  %add50 = add nsw i32 %add49, 1, !dbg !3376
  %shr51 = ashr i32 %add50, 1, !dbg !3377
  %sub52 = sub nsw i32 %conv44, %shr51, !dbg !3378
  %call53 = call i32 @abs(i32 %sub52) #1, !dbg !3379
  %38 = load i32, i32* %s, align 4, !dbg !3380
  %add54 = add nsw i32 %38, %call53, !dbg !3380
  store i32 %add54, i32* %s, align 4, !dbg !3380
  %39 = load i8*, i8** %pix1.addr, align 8, !dbg !3381
  %arrayidx55 = getelementptr inbounds i8, i8* %39, i64 5, !dbg !3381
  %40 = load i8, i8* %arrayidx55, align 1, !dbg !3381
  %conv56 = zext i8 %40 to i32, !dbg !3381
  %41 = load i8*, i8** %pix2.addr, align 8, !dbg !3382
  %arrayidx57 = getelementptr inbounds i8, i8* %41, i64 5, !dbg !3382
  %42 = load i8, i8* %arrayidx57, align 1, !dbg !3382
  %conv58 = zext i8 %42 to i32, !dbg !3383
  %43 = load i8*, i8** %pix3, align 8, !dbg !3384
  %arrayidx59 = getelementptr inbounds i8, i8* %43, i64 5, !dbg !3384
  %44 = load i8, i8* %arrayidx59, align 1, !dbg !3384
  %conv60 = zext i8 %44 to i32, !dbg !3385
  %add61 = add nsw i32 %conv58, %conv60, !dbg !3386
  %add62 = add nsw i32 %add61, 1, !dbg !3387
  %shr63 = ashr i32 %add62, 1, !dbg !3388
  %sub64 = sub nsw i32 %conv56, %shr63, !dbg !3389
  %call65 = call i32 @abs(i32 %sub64) #1, !dbg !3390
  %45 = load i32, i32* %s, align 4, !dbg !3391
  %add66 = add nsw i32 %45, %call65, !dbg !3391
  store i32 %add66, i32* %s, align 4, !dbg !3391
  %46 = load i8*, i8** %pix1.addr, align 8, !dbg !3392
  %arrayidx67 = getelementptr inbounds i8, i8* %46, i64 6, !dbg !3392
  %47 = load i8, i8* %arrayidx67, align 1, !dbg !3392
  %conv68 = zext i8 %47 to i32, !dbg !3392
  %48 = load i8*, i8** %pix2.addr, align 8, !dbg !3393
  %arrayidx69 = getelementptr inbounds i8, i8* %48, i64 6, !dbg !3393
  %49 = load i8, i8* %arrayidx69, align 1, !dbg !3393
  %conv70 = zext i8 %49 to i32, !dbg !3394
  %50 = load i8*, i8** %pix3, align 8, !dbg !3395
  %arrayidx71 = getelementptr inbounds i8, i8* %50, i64 6, !dbg !3395
  %51 = load i8, i8* %arrayidx71, align 1, !dbg !3395
  %conv72 = zext i8 %51 to i32, !dbg !3396
  %add73 = add nsw i32 %conv70, %conv72, !dbg !3397
  %add74 = add nsw i32 %add73, 1, !dbg !3398
  %shr75 = ashr i32 %add74, 1, !dbg !3399
  %sub76 = sub nsw i32 %conv68, %shr75, !dbg !3400
  %call77 = call i32 @abs(i32 %sub76) #1, !dbg !3401
  %52 = load i32, i32* %s, align 4, !dbg !3402
  %add78 = add nsw i32 %52, %call77, !dbg !3402
  store i32 %add78, i32* %s, align 4, !dbg !3402
  %53 = load i8*, i8** %pix1.addr, align 8, !dbg !3403
  %arrayidx79 = getelementptr inbounds i8, i8* %53, i64 7, !dbg !3403
  %54 = load i8, i8* %arrayidx79, align 1, !dbg !3403
  %conv80 = zext i8 %54 to i32, !dbg !3403
  %55 = load i8*, i8** %pix2.addr, align 8, !dbg !3404
  %arrayidx81 = getelementptr inbounds i8, i8* %55, i64 7, !dbg !3404
  %56 = load i8, i8* %arrayidx81, align 1, !dbg !3404
  %conv82 = zext i8 %56 to i32, !dbg !3405
  %57 = load i8*, i8** %pix3, align 8, !dbg !3406
  %arrayidx83 = getelementptr inbounds i8, i8* %57, i64 7, !dbg !3406
  %58 = load i8, i8* %arrayidx83, align 1, !dbg !3406
  %conv84 = zext i8 %58 to i32, !dbg !3407
  %add85 = add nsw i32 %conv82, %conv84, !dbg !3408
  %add86 = add nsw i32 %add85, 1, !dbg !3409
  %shr87 = ashr i32 %add86, 1, !dbg !3410
  %sub88 = sub nsw i32 %conv80, %shr87, !dbg !3411
  %call89 = call i32 @abs(i32 %sub88) #1, !dbg !3412
  %59 = load i32, i32* %s, align 4, !dbg !3413
  %add90 = add nsw i32 %59, %call89, !dbg !3413
  store i32 %add90, i32* %s, align 4, !dbg !3413
  %60 = load i8*, i8** %pix1.addr, align 8, !dbg !3414
  %arrayidx91 = getelementptr inbounds i8, i8* %60, i64 8, !dbg !3414
  %61 = load i8, i8* %arrayidx91, align 1, !dbg !3414
  %conv92 = zext i8 %61 to i32, !dbg !3414
  %62 = load i8*, i8** %pix2.addr, align 8, !dbg !3415
  %arrayidx93 = getelementptr inbounds i8, i8* %62, i64 8, !dbg !3415
  %63 = load i8, i8* %arrayidx93, align 1, !dbg !3415
  %conv94 = zext i8 %63 to i32, !dbg !3416
  %64 = load i8*, i8** %pix3, align 8, !dbg !3417
  %arrayidx95 = getelementptr inbounds i8, i8* %64, i64 8, !dbg !3417
  %65 = load i8, i8* %arrayidx95, align 1, !dbg !3417
  %conv96 = zext i8 %65 to i32, !dbg !3418
  %add97 = add nsw i32 %conv94, %conv96, !dbg !3419
  %add98 = add nsw i32 %add97, 1, !dbg !3420
  %shr99 = ashr i32 %add98, 1, !dbg !3421
  %sub100 = sub nsw i32 %conv92, %shr99, !dbg !3422
  %call101 = call i32 @abs(i32 %sub100) #1, !dbg !3423
  %66 = load i32, i32* %s, align 4, !dbg !3424
  %add102 = add nsw i32 %66, %call101, !dbg !3424
  store i32 %add102, i32* %s, align 4, !dbg !3424
  %67 = load i8*, i8** %pix1.addr, align 8, !dbg !3425
  %arrayidx103 = getelementptr inbounds i8, i8* %67, i64 9, !dbg !3425
  %68 = load i8, i8* %arrayidx103, align 1, !dbg !3425
  %conv104 = zext i8 %68 to i32, !dbg !3425
  %69 = load i8*, i8** %pix2.addr, align 8, !dbg !3426
  %arrayidx105 = getelementptr inbounds i8, i8* %69, i64 9, !dbg !3426
  %70 = load i8, i8* %arrayidx105, align 1, !dbg !3426
  %conv106 = zext i8 %70 to i32, !dbg !3427
  %71 = load i8*, i8** %pix3, align 8, !dbg !3428
  %arrayidx107 = getelementptr inbounds i8, i8* %71, i64 9, !dbg !3428
  %72 = load i8, i8* %arrayidx107, align 1, !dbg !3428
  %conv108 = zext i8 %72 to i32, !dbg !3429
  %add109 = add nsw i32 %conv106, %conv108, !dbg !3430
  %add110 = add nsw i32 %add109, 1, !dbg !3431
  %shr111 = ashr i32 %add110, 1, !dbg !3432
  %sub112 = sub nsw i32 %conv104, %shr111, !dbg !3433
  %call113 = call i32 @abs(i32 %sub112) #1, !dbg !3434
  %73 = load i32, i32* %s, align 4, !dbg !3435
  %add114 = add nsw i32 %73, %call113, !dbg !3435
  store i32 %add114, i32* %s, align 4, !dbg !3435
  %74 = load i8*, i8** %pix1.addr, align 8, !dbg !3436
  %arrayidx115 = getelementptr inbounds i8, i8* %74, i64 10, !dbg !3436
  %75 = load i8, i8* %arrayidx115, align 1, !dbg !3436
  %conv116 = zext i8 %75 to i32, !dbg !3436
  %76 = load i8*, i8** %pix2.addr, align 8, !dbg !3437
  %arrayidx117 = getelementptr inbounds i8, i8* %76, i64 10, !dbg !3437
  %77 = load i8, i8* %arrayidx117, align 1, !dbg !3437
  %conv118 = zext i8 %77 to i32, !dbg !3438
  %78 = load i8*, i8** %pix3, align 8, !dbg !3439
  %arrayidx119 = getelementptr inbounds i8, i8* %78, i64 10, !dbg !3439
  %79 = load i8, i8* %arrayidx119, align 1, !dbg !3439
  %conv120 = zext i8 %79 to i32, !dbg !3440
  %add121 = add nsw i32 %conv118, %conv120, !dbg !3441
  %add122 = add nsw i32 %add121, 1, !dbg !3442
  %shr123 = ashr i32 %add122, 1, !dbg !3443
  %sub124 = sub nsw i32 %conv116, %shr123, !dbg !3444
  %call125 = call i32 @abs(i32 %sub124) #1, !dbg !3445
  %80 = load i32, i32* %s, align 4, !dbg !3446
  %add126 = add nsw i32 %80, %call125, !dbg !3446
  store i32 %add126, i32* %s, align 4, !dbg !3446
  %81 = load i8*, i8** %pix1.addr, align 8, !dbg !3447
  %arrayidx127 = getelementptr inbounds i8, i8* %81, i64 11, !dbg !3447
  %82 = load i8, i8* %arrayidx127, align 1, !dbg !3447
  %conv128 = zext i8 %82 to i32, !dbg !3447
  %83 = load i8*, i8** %pix2.addr, align 8, !dbg !3448
  %arrayidx129 = getelementptr inbounds i8, i8* %83, i64 11, !dbg !3448
  %84 = load i8, i8* %arrayidx129, align 1, !dbg !3448
  %conv130 = zext i8 %84 to i32, !dbg !3449
  %85 = load i8*, i8** %pix3, align 8, !dbg !3450
  %arrayidx131 = getelementptr inbounds i8, i8* %85, i64 11, !dbg !3450
  %86 = load i8, i8* %arrayidx131, align 1, !dbg !3450
  %conv132 = zext i8 %86 to i32, !dbg !3451
  %add133 = add nsw i32 %conv130, %conv132, !dbg !3452
  %add134 = add nsw i32 %add133, 1, !dbg !3453
  %shr135 = ashr i32 %add134, 1, !dbg !3454
  %sub136 = sub nsw i32 %conv128, %shr135, !dbg !3455
  %call137 = call i32 @abs(i32 %sub136) #1, !dbg !3456
  %87 = load i32, i32* %s, align 4, !dbg !3457
  %add138 = add nsw i32 %87, %call137, !dbg !3457
  store i32 %add138, i32* %s, align 4, !dbg !3457
  %88 = load i8*, i8** %pix1.addr, align 8, !dbg !3458
  %arrayidx139 = getelementptr inbounds i8, i8* %88, i64 12, !dbg !3458
  %89 = load i8, i8* %arrayidx139, align 1, !dbg !3458
  %conv140 = zext i8 %89 to i32, !dbg !3458
  %90 = load i8*, i8** %pix2.addr, align 8, !dbg !3459
  %arrayidx141 = getelementptr inbounds i8, i8* %90, i64 12, !dbg !3459
  %91 = load i8, i8* %arrayidx141, align 1, !dbg !3459
  %conv142 = zext i8 %91 to i32, !dbg !3460
  %92 = load i8*, i8** %pix3, align 8, !dbg !3461
  %arrayidx143 = getelementptr inbounds i8, i8* %92, i64 12, !dbg !3461
  %93 = load i8, i8* %arrayidx143, align 1, !dbg !3461
  %conv144 = zext i8 %93 to i32, !dbg !3462
  %add145 = add nsw i32 %conv142, %conv144, !dbg !3463
  %add146 = add nsw i32 %add145, 1, !dbg !3464
  %shr147 = ashr i32 %add146, 1, !dbg !3465
  %sub148 = sub nsw i32 %conv140, %shr147, !dbg !3466
  %call149 = call i32 @abs(i32 %sub148) #1, !dbg !3467
  %94 = load i32, i32* %s, align 4, !dbg !3468
  %add150 = add nsw i32 %94, %call149, !dbg !3468
  store i32 %add150, i32* %s, align 4, !dbg !3468
  %95 = load i8*, i8** %pix1.addr, align 8, !dbg !3469
  %arrayidx151 = getelementptr inbounds i8, i8* %95, i64 13, !dbg !3469
  %96 = load i8, i8* %arrayidx151, align 1, !dbg !3469
  %conv152 = zext i8 %96 to i32, !dbg !3469
  %97 = load i8*, i8** %pix2.addr, align 8, !dbg !3470
  %arrayidx153 = getelementptr inbounds i8, i8* %97, i64 13, !dbg !3470
  %98 = load i8, i8* %arrayidx153, align 1, !dbg !3470
  %conv154 = zext i8 %98 to i32, !dbg !3471
  %99 = load i8*, i8** %pix3, align 8, !dbg !3472
  %arrayidx155 = getelementptr inbounds i8, i8* %99, i64 13, !dbg !3472
  %100 = load i8, i8* %arrayidx155, align 1, !dbg !3472
  %conv156 = zext i8 %100 to i32, !dbg !3473
  %add157 = add nsw i32 %conv154, %conv156, !dbg !3474
  %add158 = add nsw i32 %add157, 1, !dbg !3475
  %shr159 = ashr i32 %add158, 1, !dbg !3476
  %sub160 = sub nsw i32 %conv152, %shr159, !dbg !3477
  %call161 = call i32 @abs(i32 %sub160) #1, !dbg !3478
  %101 = load i32, i32* %s, align 4, !dbg !3479
  %add162 = add nsw i32 %101, %call161, !dbg !3479
  store i32 %add162, i32* %s, align 4, !dbg !3479
  %102 = load i8*, i8** %pix1.addr, align 8, !dbg !3480
  %arrayidx163 = getelementptr inbounds i8, i8* %102, i64 14, !dbg !3480
  %103 = load i8, i8* %arrayidx163, align 1, !dbg !3480
  %conv164 = zext i8 %103 to i32, !dbg !3480
  %104 = load i8*, i8** %pix2.addr, align 8, !dbg !3481
  %arrayidx165 = getelementptr inbounds i8, i8* %104, i64 14, !dbg !3481
  %105 = load i8, i8* %arrayidx165, align 1, !dbg !3481
  %conv166 = zext i8 %105 to i32, !dbg !3482
  %106 = load i8*, i8** %pix3, align 8, !dbg !3483
  %arrayidx167 = getelementptr inbounds i8, i8* %106, i64 14, !dbg !3483
  %107 = load i8, i8* %arrayidx167, align 1, !dbg !3483
  %conv168 = zext i8 %107 to i32, !dbg !3484
  %add169 = add nsw i32 %conv166, %conv168, !dbg !3485
  %add170 = add nsw i32 %add169, 1, !dbg !3486
  %shr171 = ashr i32 %add170, 1, !dbg !3487
  %sub172 = sub nsw i32 %conv164, %shr171, !dbg !3488
  %call173 = call i32 @abs(i32 %sub172) #1, !dbg !3489
  %108 = load i32, i32* %s, align 4, !dbg !3490
  %add174 = add nsw i32 %108, %call173, !dbg !3490
  store i32 %add174, i32* %s, align 4, !dbg !3490
  %109 = load i8*, i8** %pix1.addr, align 8, !dbg !3491
  %arrayidx175 = getelementptr inbounds i8, i8* %109, i64 15, !dbg !3491
  %110 = load i8, i8* %arrayidx175, align 1, !dbg !3491
  %conv176 = zext i8 %110 to i32, !dbg !3491
  %111 = load i8*, i8** %pix2.addr, align 8, !dbg !3492
  %arrayidx177 = getelementptr inbounds i8, i8* %111, i64 15, !dbg !3492
  %112 = load i8, i8* %arrayidx177, align 1, !dbg !3492
  %conv178 = zext i8 %112 to i32, !dbg !3493
  %113 = load i8*, i8** %pix3, align 8, !dbg !3494
  %arrayidx179 = getelementptr inbounds i8, i8* %113, i64 15, !dbg !3494
  %114 = load i8, i8* %arrayidx179, align 1, !dbg !3494
  %conv180 = zext i8 %114 to i32, !dbg !3495
  %add181 = add nsw i32 %conv178, %conv180, !dbg !3496
  %add182 = add nsw i32 %add181, 1, !dbg !3497
  %shr183 = ashr i32 %add182, 1, !dbg !3498
  %sub184 = sub nsw i32 %conv176, %shr183, !dbg !3499
  %call185 = call i32 @abs(i32 %sub184) #1, !dbg !3500
  %115 = load i32, i32* %s, align 4, !dbg !3501
  %add186 = add nsw i32 %115, %call185, !dbg !3501
  store i32 %add186, i32* %s, align 4, !dbg !3501
  %116 = load i64, i64* %stride.addr, align 8, !dbg !3502
  %117 = load i8*, i8** %pix1.addr, align 8, !dbg !3503
  %add.ptr187 = getelementptr inbounds i8, i8* %117, i64 %116, !dbg !3503
  store i8* %add.ptr187, i8** %pix1.addr, align 8, !dbg !3503
  %118 = load i64, i64* %stride.addr, align 8, !dbg !3504
  %119 = load i8*, i8** %pix2.addr, align 8, !dbg !3505
  %add.ptr188 = getelementptr inbounds i8, i8* %119, i64 %118, !dbg !3505
  store i8* %add.ptr188, i8** %pix2.addr, align 8, !dbg !3505
  %120 = load i64, i64* %stride.addr, align 8, !dbg !3506
  %121 = load i8*, i8** %pix3, align 8, !dbg !3507
  %add.ptr189 = getelementptr inbounds i8, i8* %121, i64 %120, !dbg !3507
  store i8* %add.ptr189, i8** %pix3, align 8, !dbg !3507
  br label %for.inc, !dbg !3508

for.inc:                                          ; preds = %for.body
  %122 = load i32, i32* %i, align 4, !dbg !3509
  %inc = add nsw i32 %122, 1, !dbg !3509
  store i32 %inc, i32* %i, align 4, !dbg !3509
  br label %for.cond, !dbg !3511, !llvm.loop !3512

for.end:                                          ; preds = %for.cond
  %123 = load i32, i32* %s, align 4, !dbg !3514
  ret i32 %123, !dbg !3515
}

; Function Attrs: nounwind uwtable
define internal i32 @pix_abs16_xy2_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #0 !dbg !3516 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  %pix3 = alloca i8*, align 8
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !3517, metadata !2614), !dbg !3518
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !3519, metadata !2614), !dbg !3520
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !3521, metadata !2614), !dbg !3522
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !3523, metadata !2614), !dbg !3524
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !3525, metadata !2614), !dbg !3526
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3527, metadata !2614), !dbg !3528
  store i32 0, i32* %s, align 4, !dbg !3528
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3529, metadata !2614), !dbg !3530
  call void @llvm.dbg.declare(metadata i8** %pix3, metadata !3531, metadata !2614), !dbg !3532
  %0 = load i8*, i8** %pix2.addr, align 8, !dbg !3533
  %1 = load i64, i64* %stride.addr, align 8, !dbg !3534
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %1, !dbg !3535
  store i8* %add.ptr, i8** %pix3, align 8, !dbg !3532
  store i32 0, i32* %i, align 4, !dbg !3536
  br label %for.cond, !dbg !3538

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3539
  %3 = load i32, i32* %h.addr, align 4, !dbg !3542
  %cmp = icmp slt i32 %2, %3, !dbg !3543
  br i1 %cmp, label %for.body, label %for.end, !dbg !3544

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %pix1.addr, align 8, !dbg !3545
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !3545
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3545
  %conv = zext i8 %5 to i32, !dbg !3545
  %6 = load i8*, i8** %pix2.addr, align 8, !dbg !3547
  %arrayidx1 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !3547
  %7 = load i8, i8* %arrayidx1, align 1, !dbg !3547
  %conv2 = zext i8 %7 to i32, !dbg !3548
  %8 = load i8*, i8** %pix2.addr, align 8, !dbg !3549
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !3549
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !3549
  %conv4 = zext i8 %9 to i32, !dbg !3550
  %add = add nsw i32 %conv2, %conv4, !dbg !3551
  %10 = load i8*, i8** %pix3, align 8, !dbg !3552
  %arrayidx5 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !3552
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !3552
  %conv6 = zext i8 %11 to i32, !dbg !3553
  %add7 = add nsw i32 %add, %conv6, !dbg !3554
  %12 = load i8*, i8** %pix3, align 8, !dbg !3555
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !3555
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !3555
  %conv9 = zext i8 %13 to i32, !dbg !3556
  %add10 = add nsw i32 %add7, %conv9, !dbg !3557
  %add11 = add nsw i32 %add10, 2, !dbg !3558
  %shr = ashr i32 %add11, 2, !dbg !3559
  %sub = sub nsw i32 %conv, %shr, !dbg !3560
  %call = call i32 @abs(i32 %sub) #1, !dbg !3561
  %14 = load i32, i32* %s, align 4, !dbg !3562
  %add12 = add nsw i32 %14, %call, !dbg !3562
  store i32 %add12, i32* %s, align 4, !dbg !3562
  %15 = load i8*, i8** %pix1.addr, align 8, !dbg !3563
  %arrayidx13 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !3563
  %16 = load i8, i8* %arrayidx13, align 1, !dbg !3563
  %conv14 = zext i8 %16 to i32, !dbg !3563
  %17 = load i8*, i8** %pix2.addr, align 8, !dbg !3564
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !3564
  %18 = load i8, i8* %arrayidx15, align 1, !dbg !3564
  %conv16 = zext i8 %18 to i32, !dbg !3565
  %19 = load i8*, i8** %pix2.addr, align 8, !dbg !3566
  %arrayidx17 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !3566
  %20 = load i8, i8* %arrayidx17, align 1, !dbg !3566
  %conv18 = zext i8 %20 to i32, !dbg !3567
  %add19 = add nsw i32 %conv16, %conv18, !dbg !3568
  %21 = load i8*, i8** %pix3, align 8, !dbg !3569
  %arrayidx20 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !3569
  %22 = load i8, i8* %arrayidx20, align 1, !dbg !3569
  %conv21 = zext i8 %22 to i32, !dbg !3570
  %add22 = add nsw i32 %add19, %conv21, !dbg !3571
  %23 = load i8*, i8** %pix3, align 8, !dbg !3572
  %arrayidx23 = getelementptr inbounds i8, i8* %23, i64 2, !dbg !3572
  %24 = load i8, i8* %arrayidx23, align 1, !dbg !3572
  %conv24 = zext i8 %24 to i32, !dbg !3573
  %add25 = add nsw i32 %add22, %conv24, !dbg !3574
  %add26 = add nsw i32 %add25, 2, !dbg !3575
  %shr27 = ashr i32 %add26, 2, !dbg !3576
  %sub28 = sub nsw i32 %conv14, %shr27, !dbg !3577
  %call29 = call i32 @abs(i32 %sub28) #1, !dbg !3578
  %25 = load i32, i32* %s, align 4, !dbg !3579
  %add30 = add nsw i32 %25, %call29, !dbg !3579
  store i32 %add30, i32* %s, align 4, !dbg !3579
  %26 = load i8*, i8** %pix1.addr, align 8, !dbg !3580
  %arrayidx31 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !3580
  %27 = load i8, i8* %arrayidx31, align 1, !dbg !3580
  %conv32 = zext i8 %27 to i32, !dbg !3580
  %28 = load i8*, i8** %pix2.addr, align 8, !dbg !3581
  %arrayidx33 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !3581
  %29 = load i8, i8* %arrayidx33, align 1, !dbg !3581
  %conv34 = zext i8 %29 to i32, !dbg !3582
  %30 = load i8*, i8** %pix2.addr, align 8, !dbg !3583
  %arrayidx35 = getelementptr inbounds i8, i8* %30, i64 3, !dbg !3583
  %31 = load i8, i8* %arrayidx35, align 1, !dbg !3583
  %conv36 = zext i8 %31 to i32, !dbg !3584
  %add37 = add nsw i32 %conv34, %conv36, !dbg !3585
  %32 = load i8*, i8** %pix3, align 8, !dbg !3586
  %arrayidx38 = getelementptr inbounds i8, i8* %32, i64 2, !dbg !3586
  %33 = load i8, i8* %arrayidx38, align 1, !dbg !3586
  %conv39 = zext i8 %33 to i32, !dbg !3587
  %add40 = add nsw i32 %add37, %conv39, !dbg !3588
  %34 = load i8*, i8** %pix3, align 8, !dbg !3589
  %arrayidx41 = getelementptr inbounds i8, i8* %34, i64 3, !dbg !3589
  %35 = load i8, i8* %arrayidx41, align 1, !dbg !3589
  %conv42 = zext i8 %35 to i32, !dbg !3590
  %add43 = add nsw i32 %add40, %conv42, !dbg !3591
  %add44 = add nsw i32 %add43, 2, !dbg !3592
  %shr45 = ashr i32 %add44, 2, !dbg !3593
  %sub46 = sub nsw i32 %conv32, %shr45, !dbg !3594
  %call47 = call i32 @abs(i32 %sub46) #1, !dbg !3595
  %36 = load i32, i32* %s, align 4, !dbg !3596
  %add48 = add nsw i32 %36, %call47, !dbg !3596
  store i32 %add48, i32* %s, align 4, !dbg !3596
  %37 = load i8*, i8** %pix1.addr, align 8, !dbg !3597
  %arrayidx49 = getelementptr inbounds i8, i8* %37, i64 3, !dbg !3597
  %38 = load i8, i8* %arrayidx49, align 1, !dbg !3597
  %conv50 = zext i8 %38 to i32, !dbg !3597
  %39 = load i8*, i8** %pix2.addr, align 8, !dbg !3598
  %arrayidx51 = getelementptr inbounds i8, i8* %39, i64 3, !dbg !3598
  %40 = load i8, i8* %arrayidx51, align 1, !dbg !3598
  %conv52 = zext i8 %40 to i32, !dbg !3599
  %41 = load i8*, i8** %pix2.addr, align 8, !dbg !3600
  %arrayidx53 = getelementptr inbounds i8, i8* %41, i64 4, !dbg !3600
  %42 = load i8, i8* %arrayidx53, align 1, !dbg !3600
  %conv54 = zext i8 %42 to i32, !dbg !3601
  %add55 = add nsw i32 %conv52, %conv54, !dbg !3602
  %43 = load i8*, i8** %pix3, align 8, !dbg !3603
  %arrayidx56 = getelementptr inbounds i8, i8* %43, i64 3, !dbg !3603
  %44 = load i8, i8* %arrayidx56, align 1, !dbg !3603
  %conv57 = zext i8 %44 to i32, !dbg !3604
  %add58 = add nsw i32 %add55, %conv57, !dbg !3605
  %45 = load i8*, i8** %pix3, align 8, !dbg !3606
  %arrayidx59 = getelementptr inbounds i8, i8* %45, i64 4, !dbg !3606
  %46 = load i8, i8* %arrayidx59, align 1, !dbg !3606
  %conv60 = zext i8 %46 to i32, !dbg !3607
  %add61 = add nsw i32 %add58, %conv60, !dbg !3608
  %add62 = add nsw i32 %add61, 2, !dbg !3609
  %shr63 = ashr i32 %add62, 2, !dbg !3610
  %sub64 = sub nsw i32 %conv50, %shr63, !dbg !3611
  %call65 = call i32 @abs(i32 %sub64) #1, !dbg !3612
  %47 = load i32, i32* %s, align 4, !dbg !3613
  %add66 = add nsw i32 %47, %call65, !dbg !3613
  store i32 %add66, i32* %s, align 4, !dbg !3613
  %48 = load i8*, i8** %pix1.addr, align 8, !dbg !3614
  %arrayidx67 = getelementptr inbounds i8, i8* %48, i64 4, !dbg !3614
  %49 = load i8, i8* %arrayidx67, align 1, !dbg !3614
  %conv68 = zext i8 %49 to i32, !dbg !3614
  %50 = load i8*, i8** %pix2.addr, align 8, !dbg !3615
  %arrayidx69 = getelementptr inbounds i8, i8* %50, i64 4, !dbg !3615
  %51 = load i8, i8* %arrayidx69, align 1, !dbg !3615
  %conv70 = zext i8 %51 to i32, !dbg !3616
  %52 = load i8*, i8** %pix2.addr, align 8, !dbg !3617
  %arrayidx71 = getelementptr inbounds i8, i8* %52, i64 5, !dbg !3617
  %53 = load i8, i8* %arrayidx71, align 1, !dbg !3617
  %conv72 = zext i8 %53 to i32, !dbg !3618
  %add73 = add nsw i32 %conv70, %conv72, !dbg !3619
  %54 = load i8*, i8** %pix3, align 8, !dbg !3620
  %arrayidx74 = getelementptr inbounds i8, i8* %54, i64 4, !dbg !3620
  %55 = load i8, i8* %arrayidx74, align 1, !dbg !3620
  %conv75 = zext i8 %55 to i32, !dbg !3621
  %add76 = add nsw i32 %add73, %conv75, !dbg !3622
  %56 = load i8*, i8** %pix3, align 8, !dbg !3623
  %arrayidx77 = getelementptr inbounds i8, i8* %56, i64 5, !dbg !3623
  %57 = load i8, i8* %arrayidx77, align 1, !dbg !3623
  %conv78 = zext i8 %57 to i32, !dbg !3624
  %add79 = add nsw i32 %add76, %conv78, !dbg !3625
  %add80 = add nsw i32 %add79, 2, !dbg !3626
  %shr81 = ashr i32 %add80, 2, !dbg !3627
  %sub82 = sub nsw i32 %conv68, %shr81, !dbg !3628
  %call83 = call i32 @abs(i32 %sub82) #1, !dbg !3629
  %58 = load i32, i32* %s, align 4, !dbg !3630
  %add84 = add nsw i32 %58, %call83, !dbg !3630
  store i32 %add84, i32* %s, align 4, !dbg !3630
  %59 = load i8*, i8** %pix1.addr, align 8, !dbg !3631
  %arrayidx85 = getelementptr inbounds i8, i8* %59, i64 5, !dbg !3631
  %60 = load i8, i8* %arrayidx85, align 1, !dbg !3631
  %conv86 = zext i8 %60 to i32, !dbg !3631
  %61 = load i8*, i8** %pix2.addr, align 8, !dbg !3632
  %arrayidx87 = getelementptr inbounds i8, i8* %61, i64 5, !dbg !3632
  %62 = load i8, i8* %arrayidx87, align 1, !dbg !3632
  %conv88 = zext i8 %62 to i32, !dbg !3633
  %63 = load i8*, i8** %pix2.addr, align 8, !dbg !3634
  %arrayidx89 = getelementptr inbounds i8, i8* %63, i64 6, !dbg !3634
  %64 = load i8, i8* %arrayidx89, align 1, !dbg !3634
  %conv90 = zext i8 %64 to i32, !dbg !3635
  %add91 = add nsw i32 %conv88, %conv90, !dbg !3636
  %65 = load i8*, i8** %pix3, align 8, !dbg !3637
  %arrayidx92 = getelementptr inbounds i8, i8* %65, i64 5, !dbg !3637
  %66 = load i8, i8* %arrayidx92, align 1, !dbg !3637
  %conv93 = zext i8 %66 to i32, !dbg !3638
  %add94 = add nsw i32 %add91, %conv93, !dbg !3639
  %67 = load i8*, i8** %pix3, align 8, !dbg !3640
  %arrayidx95 = getelementptr inbounds i8, i8* %67, i64 6, !dbg !3640
  %68 = load i8, i8* %arrayidx95, align 1, !dbg !3640
  %conv96 = zext i8 %68 to i32, !dbg !3641
  %add97 = add nsw i32 %add94, %conv96, !dbg !3642
  %add98 = add nsw i32 %add97, 2, !dbg !3643
  %shr99 = ashr i32 %add98, 2, !dbg !3644
  %sub100 = sub nsw i32 %conv86, %shr99, !dbg !3645
  %call101 = call i32 @abs(i32 %sub100) #1, !dbg !3646
  %69 = load i32, i32* %s, align 4, !dbg !3647
  %add102 = add nsw i32 %69, %call101, !dbg !3647
  store i32 %add102, i32* %s, align 4, !dbg !3647
  %70 = load i8*, i8** %pix1.addr, align 8, !dbg !3648
  %arrayidx103 = getelementptr inbounds i8, i8* %70, i64 6, !dbg !3648
  %71 = load i8, i8* %arrayidx103, align 1, !dbg !3648
  %conv104 = zext i8 %71 to i32, !dbg !3648
  %72 = load i8*, i8** %pix2.addr, align 8, !dbg !3649
  %arrayidx105 = getelementptr inbounds i8, i8* %72, i64 6, !dbg !3649
  %73 = load i8, i8* %arrayidx105, align 1, !dbg !3649
  %conv106 = zext i8 %73 to i32, !dbg !3650
  %74 = load i8*, i8** %pix2.addr, align 8, !dbg !3651
  %arrayidx107 = getelementptr inbounds i8, i8* %74, i64 7, !dbg !3651
  %75 = load i8, i8* %arrayidx107, align 1, !dbg !3651
  %conv108 = zext i8 %75 to i32, !dbg !3652
  %add109 = add nsw i32 %conv106, %conv108, !dbg !3653
  %76 = load i8*, i8** %pix3, align 8, !dbg !3654
  %arrayidx110 = getelementptr inbounds i8, i8* %76, i64 6, !dbg !3654
  %77 = load i8, i8* %arrayidx110, align 1, !dbg !3654
  %conv111 = zext i8 %77 to i32, !dbg !3655
  %add112 = add nsw i32 %add109, %conv111, !dbg !3656
  %78 = load i8*, i8** %pix3, align 8, !dbg !3657
  %arrayidx113 = getelementptr inbounds i8, i8* %78, i64 7, !dbg !3657
  %79 = load i8, i8* %arrayidx113, align 1, !dbg !3657
  %conv114 = zext i8 %79 to i32, !dbg !3658
  %add115 = add nsw i32 %add112, %conv114, !dbg !3659
  %add116 = add nsw i32 %add115, 2, !dbg !3660
  %shr117 = ashr i32 %add116, 2, !dbg !3661
  %sub118 = sub nsw i32 %conv104, %shr117, !dbg !3662
  %call119 = call i32 @abs(i32 %sub118) #1, !dbg !3663
  %80 = load i32, i32* %s, align 4, !dbg !3664
  %add120 = add nsw i32 %80, %call119, !dbg !3664
  store i32 %add120, i32* %s, align 4, !dbg !3664
  %81 = load i8*, i8** %pix1.addr, align 8, !dbg !3665
  %arrayidx121 = getelementptr inbounds i8, i8* %81, i64 7, !dbg !3665
  %82 = load i8, i8* %arrayidx121, align 1, !dbg !3665
  %conv122 = zext i8 %82 to i32, !dbg !3665
  %83 = load i8*, i8** %pix2.addr, align 8, !dbg !3666
  %arrayidx123 = getelementptr inbounds i8, i8* %83, i64 7, !dbg !3666
  %84 = load i8, i8* %arrayidx123, align 1, !dbg !3666
  %conv124 = zext i8 %84 to i32, !dbg !3667
  %85 = load i8*, i8** %pix2.addr, align 8, !dbg !3668
  %arrayidx125 = getelementptr inbounds i8, i8* %85, i64 8, !dbg !3668
  %86 = load i8, i8* %arrayidx125, align 1, !dbg !3668
  %conv126 = zext i8 %86 to i32, !dbg !3669
  %add127 = add nsw i32 %conv124, %conv126, !dbg !3670
  %87 = load i8*, i8** %pix3, align 8, !dbg !3671
  %arrayidx128 = getelementptr inbounds i8, i8* %87, i64 7, !dbg !3671
  %88 = load i8, i8* %arrayidx128, align 1, !dbg !3671
  %conv129 = zext i8 %88 to i32, !dbg !3672
  %add130 = add nsw i32 %add127, %conv129, !dbg !3673
  %89 = load i8*, i8** %pix3, align 8, !dbg !3674
  %arrayidx131 = getelementptr inbounds i8, i8* %89, i64 8, !dbg !3674
  %90 = load i8, i8* %arrayidx131, align 1, !dbg !3674
  %conv132 = zext i8 %90 to i32, !dbg !3675
  %add133 = add nsw i32 %add130, %conv132, !dbg !3676
  %add134 = add nsw i32 %add133, 2, !dbg !3677
  %shr135 = ashr i32 %add134, 2, !dbg !3678
  %sub136 = sub nsw i32 %conv122, %shr135, !dbg !3679
  %call137 = call i32 @abs(i32 %sub136) #1, !dbg !3680
  %91 = load i32, i32* %s, align 4, !dbg !3681
  %add138 = add nsw i32 %91, %call137, !dbg !3681
  store i32 %add138, i32* %s, align 4, !dbg !3681
  %92 = load i8*, i8** %pix1.addr, align 8, !dbg !3682
  %arrayidx139 = getelementptr inbounds i8, i8* %92, i64 8, !dbg !3682
  %93 = load i8, i8* %arrayidx139, align 1, !dbg !3682
  %conv140 = zext i8 %93 to i32, !dbg !3682
  %94 = load i8*, i8** %pix2.addr, align 8, !dbg !3683
  %arrayidx141 = getelementptr inbounds i8, i8* %94, i64 8, !dbg !3683
  %95 = load i8, i8* %arrayidx141, align 1, !dbg !3683
  %conv142 = zext i8 %95 to i32, !dbg !3684
  %96 = load i8*, i8** %pix2.addr, align 8, !dbg !3685
  %arrayidx143 = getelementptr inbounds i8, i8* %96, i64 9, !dbg !3685
  %97 = load i8, i8* %arrayidx143, align 1, !dbg !3685
  %conv144 = zext i8 %97 to i32, !dbg !3686
  %add145 = add nsw i32 %conv142, %conv144, !dbg !3687
  %98 = load i8*, i8** %pix3, align 8, !dbg !3688
  %arrayidx146 = getelementptr inbounds i8, i8* %98, i64 8, !dbg !3688
  %99 = load i8, i8* %arrayidx146, align 1, !dbg !3688
  %conv147 = zext i8 %99 to i32, !dbg !3689
  %add148 = add nsw i32 %add145, %conv147, !dbg !3690
  %100 = load i8*, i8** %pix3, align 8, !dbg !3691
  %arrayidx149 = getelementptr inbounds i8, i8* %100, i64 9, !dbg !3691
  %101 = load i8, i8* %arrayidx149, align 1, !dbg !3691
  %conv150 = zext i8 %101 to i32, !dbg !3692
  %add151 = add nsw i32 %add148, %conv150, !dbg !3693
  %add152 = add nsw i32 %add151, 2, !dbg !3694
  %shr153 = ashr i32 %add152, 2, !dbg !3695
  %sub154 = sub nsw i32 %conv140, %shr153, !dbg !3696
  %call155 = call i32 @abs(i32 %sub154) #1, !dbg !3697
  %102 = load i32, i32* %s, align 4, !dbg !3698
  %add156 = add nsw i32 %102, %call155, !dbg !3698
  store i32 %add156, i32* %s, align 4, !dbg !3698
  %103 = load i8*, i8** %pix1.addr, align 8, !dbg !3699
  %arrayidx157 = getelementptr inbounds i8, i8* %103, i64 9, !dbg !3699
  %104 = load i8, i8* %arrayidx157, align 1, !dbg !3699
  %conv158 = zext i8 %104 to i32, !dbg !3699
  %105 = load i8*, i8** %pix2.addr, align 8, !dbg !3700
  %arrayidx159 = getelementptr inbounds i8, i8* %105, i64 9, !dbg !3700
  %106 = load i8, i8* %arrayidx159, align 1, !dbg !3700
  %conv160 = zext i8 %106 to i32, !dbg !3701
  %107 = load i8*, i8** %pix2.addr, align 8, !dbg !3702
  %arrayidx161 = getelementptr inbounds i8, i8* %107, i64 10, !dbg !3702
  %108 = load i8, i8* %arrayidx161, align 1, !dbg !3702
  %conv162 = zext i8 %108 to i32, !dbg !3703
  %add163 = add nsw i32 %conv160, %conv162, !dbg !3704
  %109 = load i8*, i8** %pix3, align 8, !dbg !3705
  %arrayidx164 = getelementptr inbounds i8, i8* %109, i64 9, !dbg !3705
  %110 = load i8, i8* %arrayidx164, align 1, !dbg !3705
  %conv165 = zext i8 %110 to i32, !dbg !3706
  %add166 = add nsw i32 %add163, %conv165, !dbg !3707
  %111 = load i8*, i8** %pix3, align 8, !dbg !3708
  %arrayidx167 = getelementptr inbounds i8, i8* %111, i64 10, !dbg !3708
  %112 = load i8, i8* %arrayidx167, align 1, !dbg !3708
  %conv168 = zext i8 %112 to i32, !dbg !3709
  %add169 = add nsw i32 %add166, %conv168, !dbg !3710
  %add170 = add nsw i32 %add169, 2, !dbg !3711
  %shr171 = ashr i32 %add170, 2, !dbg !3712
  %sub172 = sub nsw i32 %conv158, %shr171, !dbg !3713
  %call173 = call i32 @abs(i32 %sub172) #1, !dbg !3714
  %113 = load i32, i32* %s, align 4, !dbg !3715
  %add174 = add nsw i32 %113, %call173, !dbg !3715
  store i32 %add174, i32* %s, align 4, !dbg !3715
  %114 = load i8*, i8** %pix1.addr, align 8, !dbg !3716
  %arrayidx175 = getelementptr inbounds i8, i8* %114, i64 10, !dbg !3716
  %115 = load i8, i8* %arrayidx175, align 1, !dbg !3716
  %conv176 = zext i8 %115 to i32, !dbg !3716
  %116 = load i8*, i8** %pix2.addr, align 8, !dbg !3717
  %arrayidx177 = getelementptr inbounds i8, i8* %116, i64 10, !dbg !3717
  %117 = load i8, i8* %arrayidx177, align 1, !dbg !3717
  %conv178 = zext i8 %117 to i32, !dbg !3718
  %118 = load i8*, i8** %pix2.addr, align 8, !dbg !3719
  %arrayidx179 = getelementptr inbounds i8, i8* %118, i64 11, !dbg !3719
  %119 = load i8, i8* %arrayidx179, align 1, !dbg !3719
  %conv180 = zext i8 %119 to i32, !dbg !3720
  %add181 = add nsw i32 %conv178, %conv180, !dbg !3721
  %120 = load i8*, i8** %pix3, align 8, !dbg !3722
  %arrayidx182 = getelementptr inbounds i8, i8* %120, i64 10, !dbg !3722
  %121 = load i8, i8* %arrayidx182, align 1, !dbg !3722
  %conv183 = zext i8 %121 to i32, !dbg !3723
  %add184 = add nsw i32 %add181, %conv183, !dbg !3724
  %122 = load i8*, i8** %pix3, align 8, !dbg !3725
  %arrayidx185 = getelementptr inbounds i8, i8* %122, i64 11, !dbg !3725
  %123 = load i8, i8* %arrayidx185, align 1, !dbg !3725
  %conv186 = zext i8 %123 to i32, !dbg !3726
  %add187 = add nsw i32 %add184, %conv186, !dbg !3727
  %add188 = add nsw i32 %add187, 2, !dbg !3728
  %shr189 = ashr i32 %add188, 2, !dbg !3729
  %sub190 = sub nsw i32 %conv176, %shr189, !dbg !3730
  %call191 = call i32 @abs(i32 %sub190) #1, !dbg !3731
  %124 = load i32, i32* %s, align 4, !dbg !3732
  %add192 = add nsw i32 %124, %call191, !dbg !3732
  store i32 %add192, i32* %s, align 4, !dbg !3732
  %125 = load i8*, i8** %pix1.addr, align 8, !dbg !3733
  %arrayidx193 = getelementptr inbounds i8, i8* %125, i64 11, !dbg !3733
  %126 = load i8, i8* %arrayidx193, align 1, !dbg !3733
  %conv194 = zext i8 %126 to i32, !dbg !3733
  %127 = load i8*, i8** %pix2.addr, align 8, !dbg !3734
  %arrayidx195 = getelementptr inbounds i8, i8* %127, i64 11, !dbg !3734
  %128 = load i8, i8* %arrayidx195, align 1, !dbg !3734
  %conv196 = zext i8 %128 to i32, !dbg !3735
  %129 = load i8*, i8** %pix2.addr, align 8, !dbg !3736
  %arrayidx197 = getelementptr inbounds i8, i8* %129, i64 12, !dbg !3736
  %130 = load i8, i8* %arrayidx197, align 1, !dbg !3736
  %conv198 = zext i8 %130 to i32, !dbg !3737
  %add199 = add nsw i32 %conv196, %conv198, !dbg !3738
  %131 = load i8*, i8** %pix3, align 8, !dbg !3739
  %arrayidx200 = getelementptr inbounds i8, i8* %131, i64 11, !dbg !3739
  %132 = load i8, i8* %arrayidx200, align 1, !dbg !3739
  %conv201 = zext i8 %132 to i32, !dbg !3740
  %add202 = add nsw i32 %add199, %conv201, !dbg !3741
  %133 = load i8*, i8** %pix3, align 8, !dbg !3742
  %arrayidx203 = getelementptr inbounds i8, i8* %133, i64 12, !dbg !3742
  %134 = load i8, i8* %arrayidx203, align 1, !dbg !3742
  %conv204 = zext i8 %134 to i32, !dbg !3743
  %add205 = add nsw i32 %add202, %conv204, !dbg !3744
  %add206 = add nsw i32 %add205, 2, !dbg !3745
  %shr207 = ashr i32 %add206, 2, !dbg !3746
  %sub208 = sub nsw i32 %conv194, %shr207, !dbg !3747
  %call209 = call i32 @abs(i32 %sub208) #1, !dbg !3748
  %135 = load i32, i32* %s, align 4, !dbg !3749
  %add210 = add nsw i32 %135, %call209, !dbg !3749
  store i32 %add210, i32* %s, align 4, !dbg !3749
  %136 = load i8*, i8** %pix1.addr, align 8, !dbg !3750
  %arrayidx211 = getelementptr inbounds i8, i8* %136, i64 12, !dbg !3750
  %137 = load i8, i8* %arrayidx211, align 1, !dbg !3750
  %conv212 = zext i8 %137 to i32, !dbg !3750
  %138 = load i8*, i8** %pix2.addr, align 8, !dbg !3751
  %arrayidx213 = getelementptr inbounds i8, i8* %138, i64 12, !dbg !3751
  %139 = load i8, i8* %arrayidx213, align 1, !dbg !3751
  %conv214 = zext i8 %139 to i32, !dbg !3752
  %140 = load i8*, i8** %pix2.addr, align 8, !dbg !3753
  %arrayidx215 = getelementptr inbounds i8, i8* %140, i64 13, !dbg !3753
  %141 = load i8, i8* %arrayidx215, align 1, !dbg !3753
  %conv216 = zext i8 %141 to i32, !dbg !3754
  %add217 = add nsw i32 %conv214, %conv216, !dbg !3755
  %142 = load i8*, i8** %pix3, align 8, !dbg !3756
  %arrayidx218 = getelementptr inbounds i8, i8* %142, i64 12, !dbg !3756
  %143 = load i8, i8* %arrayidx218, align 1, !dbg !3756
  %conv219 = zext i8 %143 to i32, !dbg !3757
  %add220 = add nsw i32 %add217, %conv219, !dbg !3758
  %144 = load i8*, i8** %pix3, align 8, !dbg !3759
  %arrayidx221 = getelementptr inbounds i8, i8* %144, i64 13, !dbg !3759
  %145 = load i8, i8* %arrayidx221, align 1, !dbg !3759
  %conv222 = zext i8 %145 to i32, !dbg !3760
  %add223 = add nsw i32 %add220, %conv222, !dbg !3761
  %add224 = add nsw i32 %add223, 2, !dbg !3762
  %shr225 = ashr i32 %add224, 2, !dbg !3763
  %sub226 = sub nsw i32 %conv212, %shr225, !dbg !3764
  %call227 = call i32 @abs(i32 %sub226) #1, !dbg !3765
  %146 = load i32, i32* %s, align 4, !dbg !3766
  %add228 = add nsw i32 %146, %call227, !dbg !3766
  store i32 %add228, i32* %s, align 4, !dbg !3766
  %147 = load i8*, i8** %pix1.addr, align 8, !dbg !3767
  %arrayidx229 = getelementptr inbounds i8, i8* %147, i64 13, !dbg !3767
  %148 = load i8, i8* %arrayidx229, align 1, !dbg !3767
  %conv230 = zext i8 %148 to i32, !dbg !3767
  %149 = load i8*, i8** %pix2.addr, align 8, !dbg !3768
  %arrayidx231 = getelementptr inbounds i8, i8* %149, i64 13, !dbg !3768
  %150 = load i8, i8* %arrayidx231, align 1, !dbg !3768
  %conv232 = zext i8 %150 to i32, !dbg !3769
  %151 = load i8*, i8** %pix2.addr, align 8, !dbg !3770
  %arrayidx233 = getelementptr inbounds i8, i8* %151, i64 14, !dbg !3770
  %152 = load i8, i8* %arrayidx233, align 1, !dbg !3770
  %conv234 = zext i8 %152 to i32, !dbg !3771
  %add235 = add nsw i32 %conv232, %conv234, !dbg !3772
  %153 = load i8*, i8** %pix3, align 8, !dbg !3773
  %arrayidx236 = getelementptr inbounds i8, i8* %153, i64 13, !dbg !3773
  %154 = load i8, i8* %arrayidx236, align 1, !dbg !3773
  %conv237 = zext i8 %154 to i32, !dbg !3774
  %add238 = add nsw i32 %add235, %conv237, !dbg !3775
  %155 = load i8*, i8** %pix3, align 8, !dbg !3776
  %arrayidx239 = getelementptr inbounds i8, i8* %155, i64 14, !dbg !3776
  %156 = load i8, i8* %arrayidx239, align 1, !dbg !3776
  %conv240 = zext i8 %156 to i32, !dbg !3777
  %add241 = add nsw i32 %add238, %conv240, !dbg !3778
  %add242 = add nsw i32 %add241, 2, !dbg !3779
  %shr243 = ashr i32 %add242, 2, !dbg !3780
  %sub244 = sub nsw i32 %conv230, %shr243, !dbg !3781
  %call245 = call i32 @abs(i32 %sub244) #1, !dbg !3782
  %157 = load i32, i32* %s, align 4, !dbg !3783
  %add246 = add nsw i32 %157, %call245, !dbg !3783
  store i32 %add246, i32* %s, align 4, !dbg !3783
  %158 = load i8*, i8** %pix1.addr, align 8, !dbg !3784
  %arrayidx247 = getelementptr inbounds i8, i8* %158, i64 14, !dbg !3784
  %159 = load i8, i8* %arrayidx247, align 1, !dbg !3784
  %conv248 = zext i8 %159 to i32, !dbg !3784
  %160 = load i8*, i8** %pix2.addr, align 8, !dbg !3785
  %arrayidx249 = getelementptr inbounds i8, i8* %160, i64 14, !dbg !3785
  %161 = load i8, i8* %arrayidx249, align 1, !dbg !3785
  %conv250 = zext i8 %161 to i32, !dbg !3786
  %162 = load i8*, i8** %pix2.addr, align 8, !dbg !3787
  %arrayidx251 = getelementptr inbounds i8, i8* %162, i64 15, !dbg !3787
  %163 = load i8, i8* %arrayidx251, align 1, !dbg !3787
  %conv252 = zext i8 %163 to i32, !dbg !3788
  %add253 = add nsw i32 %conv250, %conv252, !dbg !3789
  %164 = load i8*, i8** %pix3, align 8, !dbg !3790
  %arrayidx254 = getelementptr inbounds i8, i8* %164, i64 14, !dbg !3790
  %165 = load i8, i8* %arrayidx254, align 1, !dbg !3790
  %conv255 = zext i8 %165 to i32, !dbg !3791
  %add256 = add nsw i32 %add253, %conv255, !dbg !3792
  %166 = load i8*, i8** %pix3, align 8, !dbg !3793
  %arrayidx257 = getelementptr inbounds i8, i8* %166, i64 15, !dbg !3793
  %167 = load i8, i8* %arrayidx257, align 1, !dbg !3793
  %conv258 = zext i8 %167 to i32, !dbg !3794
  %add259 = add nsw i32 %add256, %conv258, !dbg !3795
  %add260 = add nsw i32 %add259, 2, !dbg !3796
  %shr261 = ashr i32 %add260, 2, !dbg !3797
  %sub262 = sub nsw i32 %conv248, %shr261, !dbg !3798
  %call263 = call i32 @abs(i32 %sub262) #1, !dbg !3799
  %168 = load i32, i32* %s, align 4, !dbg !3800
  %add264 = add nsw i32 %168, %call263, !dbg !3800
  store i32 %add264, i32* %s, align 4, !dbg !3800
  %169 = load i8*, i8** %pix1.addr, align 8, !dbg !3801
  %arrayidx265 = getelementptr inbounds i8, i8* %169, i64 15, !dbg !3801
  %170 = load i8, i8* %arrayidx265, align 1, !dbg !3801
  %conv266 = zext i8 %170 to i32, !dbg !3801
  %171 = load i8*, i8** %pix2.addr, align 8, !dbg !3802
  %arrayidx267 = getelementptr inbounds i8, i8* %171, i64 15, !dbg !3802
  %172 = load i8, i8* %arrayidx267, align 1, !dbg !3802
  %conv268 = zext i8 %172 to i32, !dbg !3803
  %173 = load i8*, i8** %pix2.addr, align 8, !dbg !3804
  %arrayidx269 = getelementptr inbounds i8, i8* %173, i64 16, !dbg !3804
  %174 = load i8, i8* %arrayidx269, align 1, !dbg !3804
  %conv270 = zext i8 %174 to i32, !dbg !3805
  %add271 = add nsw i32 %conv268, %conv270, !dbg !3806
  %175 = load i8*, i8** %pix3, align 8, !dbg !3807
  %arrayidx272 = getelementptr inbounds i8, i8* %175, i64 15, !dbg !3807
  %176 = load i8, i8* %arrayidx272, align 1, !dbg !3807
  %conv273 = zext i8 %176 to i32, !dbg !3808
  %add274 = add nsw i32 %add271, %conv273, !dbg !3809
  %177 = load i8*, i8** %pix3, align 8, !dbg !3810
  %arrayidx275 = getelementptr inbounds i8, i8* %177, i64 16, !dbg !3810
  %178 = load i8, i8* %arrayidx275, align 1, !dbg !3810
  %conv276 = zext i8 %178 to i32, !dbg !3811
  %add277 = add nsw i32 %add274, %conv276, !dbg !3812
  %add278 = add nsw i32 %add277, 2, !dbg !3813
  %shr279 = ashr i32 %add278, 2, !dbg !3814
  %sub280 = sub nsw i32 %conv266, %shr279, !dbg !3815
  %call281 = call i32 @abs(i32 %sub280) #1, !dbg !3816
  %179 = load i32, i32* %s, align 4, !dbg !3817
  %add282 = add nsw i32 %179, %call281, !dbg !3817
  store i32 %add282, i32* %s, align 4, !dbg !3817
  %180 = load i64, i64* %stride.addr, align 8, !dbg !3818
  %181 = load i8*, i8** %pix1.addr, align 8, !dbg !3819
  %add.ptr283 = getelementptr inbounds i8, i8* %181, i64 %180, !dbg !3819
  store i8* %add.ptr283, i8** %pix1.addr, align 8, !dbg !3819
  %182 = load i64, i64* %stride.addr, align 8, !dbg !3820
  %183 = load i8*, i8** %pix2.addr, align 8, !dbg !3821
  %add.ptr284 = getelementptr inbounds i8, i8* %183, i64 %182, !dbg !3821
  store i8* %add.ptr284, i8** %pix2.addr, align 8, !dbg !3821
  %184 = load i64, i64* %stride.addr, align 8, !dbg !3822
  %185 = load i8*, i8** %pix3, align 8, !dbg !3823
  %add.ptr285 = getelementptr inbounds i8, i8* %185, i64 %184, !dbg !3823
  store i8* %add.ptr285, i8** %pix3, align 8, !dbg !3823
  br label %for.inc, !dbg !3824

for.inc:                                          ; preds = %for.body
  %186 = load i32, i32* %i, align 4, !dbg !3825
  %inc = add nsw i32 %186, 1, !dbg !3825
  store i32 %inc, i32* %i, align 4, !dbg !3825
  br label %for.cond, !dbg !3827, !llvm.loop !3828

for.end:                                          ; preds = %for.cond
  %187 = load i32, i32* %s, align 4, !dbg !3830
  ret i32 %187, !dbg !3831
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @pix_abs8_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #5 !dbg !3832 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !3833, metadata !2614), !dbg !3834
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !3835, metadata !2614), !dbg !3836
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !3837, metadata !2614), !dbg !3838
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !3839, metadata !2614), !dbg !3840
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !3841, metadata !2614), !dbg !3842
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3843, metadata !2614), !dbg !3844
  store i32 0, i32* %s, align 4, !dbg !3844
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3845, metadata !2614), !dbg !3846
  store i32 0, i32* %i, align 4, !dbg !3847
  br label %for.cond, !dbg !3849

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3850
  %1 = load i32, i32* %h.addr, align 4, !dbg !3853
  %cmp = icmp slt i32 %0, %1, !dbg !3854
  br i1 %cmp, label %for.body, label %for.end, !dbg !3855

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %pix1.addr, align 8, !dbg !3856
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !3856
  %3 = load i8, i8* %arrayidx, align 1, !dbg !3856
  %conv = zext i8 %3 to i32, !dbg !3856
  %4 = load i8*, i8** %pix2.addr, align 8, !dbg !3858
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !3858
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !3858
  %conv2 = zext i8 %5 to i32, !dbg !3858
  %sub = sub nsw i32 %conv, %conv2, !dbg !3859
  %call = call i32 @abs(i32 %sub) #1, !dbg !3860
  %6 = load i32, i32* %s, align 4, !dbg !3861
  %add = add nsw i32 %6, %call, !dbg !3861
  store i32 %add, i32* %s, align 4, !dbg !3861
  %7 = load i8*, i8** %pix1.addr, align 8, !dbg !3862
  %arrayidx3 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !3862
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !3862
  %conv4 = zext i8 %8 to i32, !dbg !3862
  %9 = load i8*, i8** %pix2.addr, align 8, !dbg !3863
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !3863
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !3863
  %conv6 = zext i8 %10 to i32, !dbg !3863
  %sub7 = sub nsw i32 %conv4, %conv6, !dbg !3864
  %call8 = call i32 @abs(i32 %sub7) #1, !dbg !3865
  %11 = load i32, i32* %s, align 4, !dbg !3866
  %add9 = add nsw i32 %11, %call8, !dbg !3866
  store i32 %add9, i32* %s, align 4, !dbg !3866
  %12 = load i8*, i8** %pix1.addr, align 8, !dbg !3867
  %arrayidx10 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !3867
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !3867
  %conv11 = zext i8 %13 to i32, !dbg !3867
  %14 = load i8*, i8** %pix2.addr, align 8, !dbg !3868
  %arrayidx12 = getelementptr inbounds i8, i8* %14, i64 2, !dbg !3868
  %15 = load i8, i8* %arrayidx12, align 1, !dbg !3868
  %conv13 = zext i8 %15 to i32, !dbg !3868
  %sub14 = sub nsw i32 %conv11, %conv13, !dbg !3869
  %call15 = call i32 @abs(i32 %sub14) #1, !dbg !3870
  %16 = load i32, i32* %s, align 4, !dbg !3871
  %add16 = add nsw i32 %16, %call15, !dbg !3871
  store i32 %add16, i32* %s, align 4, !dbg !3871
  %17 = load i8*, i8** %pix1.addr, align 8, !dbg !3872
  %arrayidx17 = getelementptr inbounds i8, i8* %17, i64 3, !dbg !3872
  %18 = load i8, i8* %arrayidx17, align 1, !dbg !3872
  %conv18 = zext i8 %18 to i32, !dbg !3872
  %19 = load i8*, i8** %pix2.addr, align 8, !dbg !3873
  %arrayidx19 = getelementptr inbounds i8, i8* %19, i64 3, !dbg !3873
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !3873
  %conv20 = zext i8 %20 to i32, !dbg !3873
  %sub21 = sub nsw i32 %conv18, %conv20, !dbg !3874
  %call22 = call i32 @abs(i32 %sub21) #1, !dbg !3875
  %21 = load i32, i32* %s, align 4, !dbg !3876
  %add23 = add nsw i32 %21, %call22, !dbg !3876
  store i32 %add23, i32* %s, align 4, !dbg !3876
  %22 = load i8*, i8** %pix1.addr, align 8, !dbg !3877
  %arrayidx24 = getelementptr inbounds i8, i8* %22, i64 4, !dbg !3877
  %23 = load i8, i8* %arrayidx24, align 1, !dbg !3877
  %conv25 = zext i8 %23 to i32, !dbg !3877
  %24 = load i8*, i8** %pix2.addr, align 8, !dbg !3878
  %arrayidx26 = getelementptr inbounds i8, i8* %24, i64 4, !dbg !3878
  %25 = load i8, i8* %arrayidx26, align 1, !dbg !3878
  %conv27 = zext i8 %25 to i32, !dbg !3878
  %sub28 = sub nsw i32 %conv25, %conv27, !dbg !3879
  %call29 = call i32 @abs(i32 %sub28) #1, !dbg !3880
  %26 = load i32, i32* %s, align 4, !dbg !3881
  %add30 = add nsw i32 %26, %call29, !dbg !3881
  store i32 %add30, i32* %s, align 4, !dbg !3881
  %27 = load i8*, i8** %pix1.addr, align 8, !dbg !3882
  %arrayidx31 = getelementptr inbounds i8, i8* %27, i64 5, !dbg !3882
  %28 = load i8, i8* %arrayidx31, align 1, !dbg !3882
  %conv32 = zext i8 %28 to i32, !dbg !3882
  %29 = load i8*, i8** %pix2.addr, align 8, !dbg !3883
  %arrayidx33 = getelementptr inbounds i8, i8* %29, i64 5, !dbg !3883
  %30 = load i8, i8* %arrayidx33, align 1, !dbg !3883
  %conv34 = zext i8 %30 to i32, !dbg !3883
  %sub35 = sub nsw i32 %conv32, %conv34, !dbg !3884
  %call36 = call i32 @abs(i32 %sub35) #1, !dbg !3885
  %31 = load i32, i32* %s, align 4, !dbg !3886
  %add37 = add nsw i32 %31, %call36, !dbg !3886
  store i32 %add37, i32* %s, align 4, !dbg !3886
  %32 = load i8*, i8** %pix1.addr, align 8, !dbg !3887
  %arrayidx38 = getelementptr inbounds i8, i8* %32, i64 6, !dbg !3887
  %33 = load i8, i8* %arrayidx38, align 1, !dbg !3887
  %conv39 = zext i8 %33 to i32, !dbg !3887
  %34 = load i8*, i8** %pix2.addr, align 8, !dbg !3888
  %arrayidx40 = getelementptr inbounds i8, i8* %34, i64 6, !dbg !3888
  %35 = load i8, i8* %arrayidx40, align 1, !dbg !3888
  %conv41 = zext i8 %35 to i32, !dbg !3888
  %sub42 = sub nsw i32 %conv39, %conv41, !dbg !3889
  %call43 = call i32 @abs(i32 %sub42) #1, !dbg !3890
  %36 = load i32, i32* %s, align 4, !dbg !3891
  %add44 = add nsw i32 %36, %call43, !dbg !3891
  store i32 %add44, i32* %s, align 4, !dbg !3891
  %37 = load i8*, i8** %pix1.addr, align 8, !dbg !3892
  %arrayidx45 = getelementptr inbounds i8, i8* %37, i64 7, !dbg !3892
  %38 = load i8, i8* %arrayidx45, align 1, !dbg !3892
  %conv46 = zext i8 %38 to i32, !dbg !3892
  %39 = load i8*, i8** %pix2.addr, align 8, !dbg !3893
  %arrayidx47 = getelementptr inbounds i8, i8* %39, i64 7, !dbg !3893
  %40 = load i8, i8* %arrayidx47, align 1, !dbg !3893
  %conv48 = zext i8 %40 to i32, !dbg !3893
  %sub49 = sub nsw i32 %conv46, %conv48, !dbg !3894
  %call50 = call i32 @abs(i32 %sub49) #1, !dbg !3895
  %41 = load i32, i32* %s, align 4, !dbg !3896
  %add51 = add nsw i32 %41, %call50, !dbg !3896
  store i32 %add51, i32* %s, align 4, !dbg !3896
  %42 = load i64, i64* %stride.addr, align 8, !dbg !3897
  %43 = load i8*, i8** %pix1.addr, align 8, !dbg !3898
  %add.ptr = getelementptr inbounds i8, i8* %43, i64 %42, !dbg !3898
  store i8* %add.ptr, i8** %pix1.addr, align 8, !dbg !3898
  %44 = load i64, i64* %stride.addr, align 8, !dbg !3899
  %45 = load i8*, i8** %pix2.addr, align 8, !dbg !3900
  %add.ptr52 = getelementptr inbounds i8, i8* %45, i64 %44, !dbg !3900
  store i8* %add.ptr52, i8** %pix2.addr, align 8, !dbg !3900
  br label %for.inc, !dbg !3901

for.inc:                                          ; preds = %for.body
  %46 = load i32, i32* %i, align 4, !dbg !3902
  %inc = add nsw i32 %46, 1, !dbg !3902
  store i32 %inc, i32* %i, align 4, !dbg !3902
  br label %for.cond, !dbg !3904, !llvm.loop !3905

for.end:                                          ; preds = %for.cond
  %47 = load i32, i32* %s, align 4, !dbg !3907
  ret i32 %47, !dbg !3908
}

; Function Attrs: nounwind uwtable
define internal i32 @pix_abs8_x2_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #0 !dbg !3909 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !3910, metadata !2614), !dbg !3911
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !3912, metadata !2614), !dbg !3913
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !3914, metadata !2614), !dbg !3915
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !3916, metadata !2614), !dbg !3917
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !3918, metadata !2614), !dbg !3919
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3920, metadata !2614), !dbg !3921
  store i32 0, i32* %s, align 4, !dbg !3921
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3922, metadata !2614), !dbg !3923
  store i32 0, i32* %i, align 4, !dbg !3924
  br label %for.cond, !dbg !3926

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3927
  %1 = load i32, i32* %h.addr, align 4, !dbg !3930
  %cmp = icmp slt i32 %0, %1, !dbg !3931
  br i1 %cmp, label %for.body, label %for.end, !dbg !3932

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %pix1.addr, align 8, !dbg !3933
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !3933
  %3 = load i8, i8* %arrayidx, align 1, !dbg !3933
  %conv = zext i8 %3 to i32, !dbg !3933
  %4 = load i8*, i8** %pix2.addr, align 8, !dbg !3935
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !3935
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !3935
  %conv2 = zext i8 %5 to i32, !dbg !3936
  %6 = load i8*, i8** %pix2.addr, align 8, !dbg !3937
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !3937
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !3937
  %conv4 = zext i8 %7 to i32, !dbg !3938
  %add = add nsw i32 %conv2, %conv4, !dbg !3939
  %add5 = add nsw i32 %add, 1, !dbg !3940
  %shr = ashr i32 %add5, 1, !dbg !3941
  %sub = sub nsw i32 %conv, %shr, !dbg !3942
  %call = call i32 @abs(i32 %sub) #1, !dbg !3943
  %8 = load i32, i32* %s, align 4, !dbg !3944
  %add6 = add nsw i32 %8, %call, !dbg !3944
  store i32 %add6, i32* %s, align 4, !dbg !3944
  %9 = load i8*, i8** %pix1.addr, align 8, !dbg !3945
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !3945
  %10 = load i8, i8* %arrayidx7, align 1, !dbg !3945
  %conv8 = zext i8 %10 to i32, !dbg !3945
  %11 = load i8*, i8** %pix2.addr, align 8, !dbg !3946
  %arrayidx9 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !3946
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !3946
  %conv10 = zext i8 %12 to i32, !dbg !3947
  %13 = load i8*, i8** %pix2.addr, align 8, !dbg !3948
  %arrayidx11 = getelementptr inbounds i8, i8* %13, i64 2, !dbg !3948
  %14 = load i8, i8* %arrayidx11, align 1, !dbg !3948
  %conv12 = zext i8 %14 to i32, !dbg !3949
  %add13 = add nsw i32 %conv10, %conv12, !dbg !3950
  %add14 = add nsw i32 %add13, 1, !dbg !3951
  %shr15 = ashr i32 %add14, 1, !dbg !3952
  %sub16 = sub nsw i32 %conv8, %shr15, !dbg !3953
  %call17 = call i32 @abs(i32 %sub16) #1, !dbg !3954
  %15 = load i32, i32* %s, align 4, !dbg !3955
  %add18 = add nsw i32 %15, %call17, !dbg !3955
  store i32 %add18, i32* %s, align 4, !dbg !3955
  %16 = load i8*, i8** %pix1.addr, align 8, !dbg !3956
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 2, !dbg !3956
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !3956
  %conv20 = zext i8 %17 to i32, !dbg !3956
  %18 = load i8*, i8** %pix2.addr, align 8, !dbg !3957
  %arrayidx21 = getelementptr inbounds i8, i8* %18, i64 2, !dbg !3957
  %19 = load i8, i8* %arrayidx21, align 1, !dbg !3957
  %conv22 = zext i8 %19 to i32, !dbg !3958
  %20 = load i8*, i8** %pix2.addr, align 8, !dbg !3959
  %arrayidx23 = getelementptr inbounds i8, i8* %20, i64 3, !dbg !3959
  %21 = load i8, i8* %arrayidx23, align 1, !dbg !3959
  %conv24 = zext i8 %21 to i32, !dbg !3960
  %add25 = add nsw i32 %conv22, %conv24, !dbg !3961
  %add26 = add nsw i32 %add25, 1, !dbg !3962
  %shr27 = ashr i32 %add26, 1, !dbg !3963
  %sub28 = sub nsw i32 %conv20, %shr27, !dbg !3964
  %call29 = call i32 @abs(i32 %sub28) #1, !dbg !3965
  %22 = load i32, i32* %s, align 4, !dbg !3966
  %add30 = add nsw i32 %22, %call29, !dbg !3966
  store i32 %add30, i32* %s, align 4, !dbg !3966
  %23 = load i8*, i8** %pix1.addr, align 8, !dbg !3967
  %arrayidx31 = getelementptr inbounds i8, i8* %23, i64 3, !dbg !3967
  %24 = load i8, i8* %arrayidx31, align 1, !dbg !3967
  %conv32 = zext i8 %24 to i32, !dbg !3967
  %25 = load i8*, i8** %pix2.addr, align 8, !dbg !3968
  %arrayidx33 = getelementptr inbounds i8, i8* %25, i64 3, !dbg !3968
  %26 = load i8, i8* %arrayidx33, align 1, !dbg !3968
  %conv34 = zext i8 %26 to i32, !dbg !3969
  %27 = load i8*, i8** %pix2.addr, align 8, !dbg !3970
  %arrayidx35 = getelementptr inbounds i8, i8* %27, i64 4, !dbg !3970
  %28 = load i8, i8* %arrayidx35, align 1, !dbg !3970
  %conv36 = zext i8 %28 to i32, !dbg !3971
  %add37 = add nsw i32 %conv34, %conv36, !dbg !3972
  %add38 = add nsw i32 %add37, 1, !dbg !3973
  %shr39 = ashr i32 %add38, 1, !dbg !3974
  %sub40 = sub nsw i32 %conv32, %shr39, !dbg !3975
  %call41 = call i32 @abs(i32 %sub40) #1, !dbg !3976
  %29 = load i32, i32* %s, align 4, !dbg !3977
  %add42 = add nsw i32 %29, %call41, !dbg !3977
  store i32 %add42, i32* %s, align 4, !dbg !3977
  %30 = load i8*, i8** %pix1.addr, align 8, !dbg !3978
  %arrayidx43 = getelementptr inbounds i8, i8* %30, i64 4, !dbg !3978
  %31 = load i8, i8* %arrayidx43, align 1, !dbg !3978
  %conv44 = zext i8 %31 to i32, !dbg !3978
  %32 = load i8*, i8** %pix2.addr, align 8, !dbg !3979
  %arrayidx45 = getelementptr inbounds i8, i8* %32, i64 4, !dbg !3979
  %33 = load i8, i8* %arrayidx45, align 1, !dbg !3979
  %conv46 = zext i8 %33 to i32, !dbg !3980
  %34 = load i8*, i8** %pix2.addr, align 8, !dbg !3981
  %arrayidx47 = getelementptr inbounds i8, i8* %34, i64 5, !dbg !3981
  %35 = load i8, i8* %arrayidx47, align 1, !dbg !3981
  %conv48 = zext i8 %35 to i32, !dbg !3982
  %add49 = add nsw i32 %conv46, %conv48, !dbg !3983
  %add50 = add nsw i32 %add49, 1, !dbg !3984
  %shr51 = ashr i32 %add50, 1, !dbg !3985
  %sub52 = sub nsw i32 %conv44, %shr51, !dbg !3986
  %call53 = call i32 @abs(i32 %sub52) #1, !dbg !3987
  %36 = load i32, i32* %s, align 4, !dbg !3988
  %add54 = add nsw i32 %36, %call53, !dbg !3988
  store i32 %add54, i32* %s, align 4, !dbg !3988
  %37 = load i8*, i8** %pix1.addr, align 8, !dbg !3989
  %arrayidx55 = getelementptr inbounds i8, i8* %37, i64 5, !dbg !3989
  %38 = load i8, i8* %arrayidx55, align 1, !dbg !3989
  %conv56 = zext i8 %38 to i32, !dbg !3989
  %39 = load i8*, i8** %pix2.addr, align 8, !dbg !3990
  %arrayidx57 = getelementptr inbounds i8, i8* %39, i64 5, !dbg !3990
  %40 = load i8, i8* %arrayidx57, align 1, !dbg !3990
  %conv58 = zext i8 %40 to i32, !dbg !3991
  %41 = load i8*, i8** %pix2.addr, align 8, !dbg !3992
  %arrayidx59 = getelementptr inbounds i8, i8* %41, i64 6, !dbg !3992
  %42 = load i8, i8* %arrayidx59, align 1, !dbg !3992
  %conv60 = zext i8 %42 to i32, !dbg !3993
  %add61 = add nsw i32 %conv58, %conv60, !dbg !3994
  %add62 = add nsw i32 %add61, 1, !dbg !3995
  %shr63 = ashr i32 %add62, 1, !dbg !3996
  %sub64 = sub nsw i32 %conv56, %shr63, !dbg !3997
  %call65 = call i32 @abs(i32 %sub64) #1, !dbg !3998
  %43 = load i32, i32* %s, align 4, !dbg !3999
  %add66 = add nsw i32 %43, %call65, !dbg !3999
  store i32 %add66, i32* %s, align 4, !dbg !3999
  %44 = load i8*, i8** %pix1.addr, align 8, !dbg !4000
  %arrayidx67 = getelementptr inbounds i8, i8* %44, i64 6, !dbg !4000
  %45 = load i8, i8* %arrayidx67, align 1, !dbg !4000
  %conv68 = zext i8 %45 to i32, !dbg !4000
  %46 = load i8*, i8** %pix2.addr, align 8, !dbg !4001
  %arrayidx69 = getelementptr inbounds i8, i8* %46, i64 6, !dbg !4001
  %47 = load i8, i8* %arrayidx69, align 1, !dbg !4001
  %conv70 = zext i8 %47 to i32, !dbg !4002
  %48 = load i8*, i8** %pix2.addr, align 8, !dbg !4003
  %arrayidx71 = getelementptr inbounds i8, i8* %48, i64 7, !dbg !4003
  %49 = load i8, i8* %arrayidx71, align 1, !dbg !4003
  %conv72 = zext i8 %49 to i32, !dbg !4004
  %add73 = add nsw i32 %conv70, %conv72, !dbg !4005
  %add74 = add nsw i32 %add73, 1, !dbg !4006
  %shr75 = ashr i32 %add74, 1, !dbg !4007
  %sub76 = sub nsw i32 %conv68, %shr75, !dbg !4008
  %call77 = call i32 @abs(i32 %sub76) #1, !dbg !4009
  %50 = load i32, i32* %s, align 4, !dbg !4010
  %add78 = add nsw i32 %50, %call77, !dbg !4010
  store i32 %add78, i32* %s, align 4, !dbg !4010
  %51 = load i8*, i8** %pix1.addr, align 8, !dbg !4011
  %arrayidx79 = getelementptr inbounds i8, i8* %51, i64 7, !dbg !4011
  %52 = load i8, i8* %arrayidx79, align 1, !dbg !4011
  %conv80 = zext i8 %52 to i32, !dbg !4011
  %53 = load i8*, i8** %pix2.addr, align 8, !dbg !4012
  %arrayidx81 = getelementptr inbounds i8, i8* %53, i64 7, !dbg !4012
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !4012
  %conv82 = zext i8 %54 to i32, !dbg !4013
  %55 = load i8*, i8** %pix2.addr, align 8, !dbg !4014
  %arrayidx83 = getelementptr inbounds i8, i8* %55, i64 8, !dbg !4014
  %56 = load i8, i8* %arrayidx83, align 1, !dbg !4014
  %conv84 = zext i8 %56 to i32, !dbg !4015
  %add85 = add nsw i32 %conv82, %conv84, !dbg !4016
  %add86 = add nsw i32 %add85, 1, !dbg !4017
  %shr87 = ashr i32 %add86, 1, !dbg !4018
  %sub88 = sub nsw i32 %conv80, %shr87, !dbg !4019
  %call89 = call i32 @abs(i32 %sub88) #1, !dbg !4020
  %57 = load i32, i32* %s, align 4, !dbg !4021
  %add90 = add nsw i32 %57, %call89, !dbg !4021
  store i32 %add90, i32* %s, align 4, !dbg !4021
  %58 = load i64, i64* %stride.addr, align 8, !dbg !4022
  %59 = load i8*, i8** %pix1.addr, align 8, !dbg !4023
  %add.ptr = getelementptr inbounds i8, i8* %59, i64 %58, !dbg !4023
  store i8* %add.ptr, i8** %pix1.addr, align 8, !dbg !4023
  %60 = load i64, i64* %stride.addr, align 8, !dbg !4024
  %61 = load i8*, i8** %pix2.addr, align 8, !dbg !4025
  %add.ptr91 = getelementptr inbounds i8, i8* %61, i64 %60, !dbg !4025
  store i8* %add.ptr91, i8** %pix2.addr, align 8, !dbg !4025
  br label %for.inc, !dbg !4026

for.inc:                                          ; preds = %for.body
  %62 = load i32, i32* %i, align 4, !dbg !4027
  %inc = add nsw i32 %62, 1, !dbg !4027
  store i32 %inc, i32* %i, align 4, !dbg !4027
  br label %for.cond, !dbg !4029, !llvm.loop !4030

for.end:                                          ; preds = %for.cond
  %63 = load i32, i32* %s, align 4, !dbg !4032
  ret i32 %63, !dbg !4033
}

; Function Attrs: nounwind uwtable
define internal i32 @pix_abs8_y2_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #0 !dbg !4034 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  %pix3 = alloca i8*, align 8
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !4035, metadata !2614), !dbg !4036
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !4037, metadata !2614), !dbg !4038
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !4039, metadata !2614), !dbg !4040
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !4041, metadata !2614), !dbg !4042
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !4043, metadata !2614), !dbg !4044
  call void @llvm.dbg.declare(metadata i32* %s, metadata !4045, metadata !2614), !dbg !4046
  store i32 0, i32* %s, align 4, !dbg !4046
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4047, metadata !2614), !dbg !4048
  call void @llvm.dbg.declare(metadata i8** %pix3, metadata !4049, metadata !2614), !dbg !4050
  %0 = load i8*, i8** %pix2.addr, align 8, !dbg !4051
  %1 = load i64, i64* %stride.addr, align 8, !dbg !4052
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %1, !dbg !4053
  store i8* %add.ptr, i8** %pix3, align 8, !dbg !4050
  store i32 0, i32* %i, align 4, !dbg !4054
  br label %for.cond, !dbg !4056

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4057
  %3 = load i32, i32* %h.addr, align 4, !dbg !4060
  %cmp = icmp slt i32 %2, %3, !dbg !4061
  br i1 %cmp, label %for.body, label %for.end, !dbg !4062

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %pix1.addr, align 8, !dbg !4063
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !4063
  %5 = load i8, i8* %arrayidx, align 1, !dbg !4063
  %conv = zext i8 %5 to i32, !dbg !4063
  %6 = load i8*, i8** %pix2.addr, align 8, !dbg !4065
  %arrayidx1 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !4065
  %7 = load i8, i8* %arrayidx1, align 1, !dbg !4065
  %conv2 = zext i8 %7 to i32, !dbg !4066
  %8 = load i8*, i8** %pix3, align 8, !dbg !4067
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !4067
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !4067
  %conv4 = zext i8 %9 to i32, !dbg !4068
  %add = add nsw i32 %conv2, %conv4, !dbg !4069
  %add5 = add nsw i32 %add, 1, !dbg !4070
  %shr = ashr i32 %add5, 1, !dbg !4071
  %sub = sub nsw i32 %conv, %shr, !dbg !4072
  %call = call i32 @abs(i32 %sub) #1, !dbg !4073
  %10 = load i32, i32* %s, align 4, !dbg !4074
  %add6 = add nsw i32 %10, %call, !dbg !4074
  store i32 %add6, i32* %s, align 4, !dbg !4074
  %11 = load i8*, i8** %pix1.addr, align 8, !dbg !4075
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !4075
  %12 = load i8, i8* %arrayidx7, align 1, !dbg !4075
  %conv8 = zext i8 %12 to i32, !dbg !4075
  %13 = load i8*, i8** %pix2.addr, align 8, !dbg !4076
  %arrayidx9 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !4076
  %14 = load i8, i8* %arrayidx9, align 1, !dbg !4076
  %conv10 = zext i8 %14 to i32, !dbg !4077
  %15 = load i8*, i8** %pix3, align 8, !dbg !4078
  %arrayidx11 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !4078
  %16 = load i8, i8* %arrayidx11, align 1, !dbg !4078
  %conv12 = zext i8 %16 to i32, !dbg !4079
  %add13 = add nsw i32 %conv10, %conv12, !dbg !4080
  %add14 = add nsw i32 %add13, 1, !dbg !4081
  %shr15 = ashr i32 %add14, 1, !dbg !4082
  %sub16 = sub nsw i32 %conv8, %shr15, !dbg !4083
  %call17 = call i32 @abs(i32 %sub16) #1, !dbg !4084
  %17 = load i32, i32* %s, align 4, !dbg !4085
  %add18 = add nsw i32 %17, %call17, !dbg !4085
  store i32 %add18, i32* %s, align 4, !dbg !4085
  %18 = load i8*, i8** %pix1.addr, align 8, !dbg !4086
  %arrayidx19 = getelementptr inbounds i8, i8* %18, i64 2, !dbg !4086
  %19 = load i8, i8* %arrayidx19, align 1, !dbg !4086
  %conv20 = zext i8 %19 to i32, !dbg !4086
  %20 = load i8*, i8** %pix2.addr, align 8, !dbg !4087
  %arrayidx21 = getelementptr inbounds i8, i8* %20, i64 2, !dbg !4087
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !4087
  %conv22 = zext i8 %21 to i32, !dbg !4088
  %22 = load i8*, i8** %pix3, align 8, !dbg !4089
  %arrayidx23 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !4089
  %23 = load i8, i8* %arrayidx23, align 1, !dbg !4089
  %conv24 = zext i8 %23 to i32, !dbg !4090
  %add25 = add nsw i32 %conv22, %conv24, !dbg !4091
  %add26 = add nsw i32 %add25, 1, !dbg !4092
  %shr27 = ashr i32 %add26, 1, !dbg !4093
  %sub28 = sub nsw i32 %conv20, %shr27, !dbg !4094
  %call29 = call i32 @abs(i32 %sub28) #1, !dbg !4095
  %24 = load i32, i32* %s, align 4, !dbg !4096
  %add30 = add nsw i32 %24, %call29, !dbg !4096
  store i32 %add30, i32* %s, align 4, !dbg !4096
  %25 = load i8*, i8** %pix1.addr, align 8, !dbg !4097
  %arrayidx31 = getelementptr inbounds i8, i8* %25, i64 3, !dbg !4097
  %26 = load i8, i8* %arrayidx31, align 1, !dbg !4097
  %conv32 = zext i8 %26 to i32, !dbg !4097
  %27 = load i8*, i8** %pix2.addr, align 8, !dbg !4098
  %arrayidx33 = getelementptr inbounds i8, i8* %27, i64 3, !dbg !4098
  %28 = load i8, i8* %arrayidx33, align 1, !dbg !4098
  %conv34 = zext i8 %28 to i32, !dbg !4099
  %29 = load i8*, i8** %pix3, align 8, !dbg !4100
  %arrayidx35 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !4100
  %30 = load i8, i8* %arrayidx35, align 1, !dbg !4100
  %conv36 = zext i8 %30 to i32, !dbg !4101
  %add37 = add nsw i32 %conv34, %conv36, !dbg !4102
  %add38 = add nsw i32 %add37, 1, !dbg !4103
  %shr39 = ashr i32 %add38, 1, !dbg !4104
  %sub40 = sub nsw i32 %conv32, %shr39, !dbg !4105
  %call41 = call i32 @abs(i32 %sub40) #1, !dbg !4106
  %31 = load i32, i32* %s, align 4, !dbg !4107
  %add42 = add nsw i32 %31, %call41, !dbg !4107
  store i32 %add42, i32* %s, align 4, !dbg !4107
  %32 = load i8*, i8** %pix1.addr, align 8, !dbg !4108
  %arrayidx43 = getelementptr inbounds i8, i8* %32, i64 4, !dbg !4108
  %33 = load i8, i8* %arrayidx43, align 1, !dbg !4108
  %conv44 = zext i8 %33 to i32, !dbg !4108
  %34 = load i8*, i8** %pix2.addr, align 8, !dbg !4109
  %arrayidx45 = getelementptr inbounds i8, i8* %34, i64 4, !dbg !4109
  %35 = load i8, i8* %arrayidx45, align 1, !dbg !4109
  %conv46 = zext i8 %35 to i32, !dbg !4110
  %36 = load i8*, i8** %pix3, align 8, !dbg !4111
  %arrayidx47 = getelementptr inbounds i8, i8* %36, i64 4, !dbg !4111
  %37 = load i8, i8* %arrayidx47, align 1, !dbg !4111
  %conv48 = zext i8 %37 to i32, !dbg !4112
  %add49 = add nsw i32 %conv46, %conv48, !dbg !4113
  %add50 = add nsw i32 %add49, 1, !dbg !4114
  %shr51 = ashr i32 %add50, 1, !dbg !4115
  %sub52 = sub nsw i32 %conv44, %shr51, !dbg !4116
  %call53 = call i32 @abs(i32 %sub52) #1, !dbg !4117
  %38 = load i32, i32* %s, align 4, !dbg !4118
  %add54 = add nsw i32 %38, %call53, !dbg !4118
  store i32 %add54, i32* %s, align 4, !dbg !4118
  %39 = load i8*, i8** %pix1.addr, align 8, !dbg !4119
  %arrayidx55 = getelementptr inbounds i8, i8* %39, i64 5, !dbg !4119
  %40 = load i8, i8* %arrayidx55, align 1, !dbg !4119
  %conv56 = zext i8 %40 to i32, !dbg !4119
  %41 = load i8*, i8** %pix2.addr, align 8, !dbg !4120
  %arrayidx57 = getelementptr inbounds i8, i8* %41, i64 5, !dbg !4120
  %42 = load i8, i8* %arrayidx57, align 1, !dbg !4120
  %conv58 = zext i8 %42 to i32, !dbg !4121
  %43 = load i8*, i8** %pix3, align 8, !dbg !4122
  %arrayidx59 = getelementptr inbounds i8, i8* %43, i64 5, !dbg !4122
  %44 = load i8, i8* %arrayidx59, align 1, !dbg !4122
  %conv60 = zext i8 %44 to i32, !dbg !4123
  %add61 = add nsw i32 %conv58, %conv60, !dbg !4124
  %add62 = add nsw i32 %add61, 1, !dbg !4125
  %shr63 = ashr i32 %add62, 1, !dbg !4126
  %sub64 = sub nsw i32 %conv56, %shr63, !dbg !4127
  %call65 = call i32 @abs(i32 %sub64) #1, !dbg !4128
  %45 = load i32, i32* %s, align 4, !dbg !4129
  %add66 = add nsw i32 %45, %call65, !dbg !4129
  store i32 %add66, i32* %s, align 4, !dbg !4129
  %46 = load i8*, i8** %pix1.addr, align 8, !dbg !4130
  %arrayidx67 = getelementptr inbounds i8, i8* %46, i64 6, !dbg !4130
  %47 = load i8, i8* %arrayidx67, align 1, !dbg !4130
  %conv68 = zext i8 %47 to i32, !dbg !4130
  %48 = load i8*, i8** %pix2.addr, align 8, !dbg !4131
  %arrayidx69 = getelementptr inbounds i8, i8* %48, i64 6, !dbg !4131
  %49 = load i8, i8* %arrayidx69, align 1, !dbg !4131
  %conv70 = zext i8 %49 to i32, !dbg !4132
  %50 = load i8*, i8** %pix3, align 8, !dbg !4133
  %arrayidx71 = getelementptr inbounds i8, i8* %50, i64 6, !dbg !4133
  %51 = load i8, i8* %arrayidx71, align 1, !dbg !4133
  %conv72 = zext i8 %51 to i32, !dbg !4134
  %add73 = add nsw i32 %conv70, %conv72, !dbg !4135
  %add74 = add nsw i32 %add73, 1, !dbg !4136
  %shr75 = ashr i32 %add74, 1, !dbg !4137
  %sub76 = sub nsw i32 %conv68, %shr75, !dbg !4138
  %call77 = call i32 @abs(i32 %sub76) #1, !dbg !4139
  %52 = load i32, i32* %s, align 4, !dbg !4140
  %add78 = add nsw i32 %52, %call77, !dbg !4140
  store i32 %add78, i32* %s, align 4, !dbg !4140
  %53 = load i8*, i8** %pix1.addr, align 8, !dbg !4141
  %arrayidx79 = getelementptr inbounds i8, i8* %53, i64 7, !dbg !4141
  %54 = load i8, i8* %arrayidx79, align 1, !dbg !4141
  %conv80 = zext i8 %54 to i32, !dbg !4141
  %55 = load i8*, i8** %pix2.addr, align 8, !dbg !4142
  %arrayidx81 = getelementptr inbounds i8, i8* %55, i64 7, !dbg !4142
  %56 = load i8, i8* %arrayidx81, align 1, !dbg !4142
  %conv82 = zext i8 %56 to i32, !dbg !4143
  %57 = load i8*, i8** %pix3, align 8, !dbg !4144
  %arrayidx83 = getelementptr inbounds i8, i8* %57, i64 7, !dbg !4144
  %58 = load i8, i8* %arrayidx83, align 1, !dbg !4144
  %conv84 = zext i8 %58 to i32, !dbg !4145
  %add85 = add nsw i32 %conv82, %conv84, !dbg !4146
  %add86 = add nsw i32 %add85, 1, !dbg !4147
  %shr87 = ashr i32 %add86, 1, !dbg !4148
  %sub88 = sub nsw i32 %conv80, %shr87, !dbg !4149
  %call89 = call i32 @abs(i32 %sub88) #1, !dbg !4150
  %59 = load i32, i32* %s, align 4, !dbg !4151
  %add90 = add nsw i32 %59, %call89, !dbg !4151
  store i32 %add90, i32* %s, align 4, !dbg !4151
  %60 = load i64, i64* %stride.addr, align 8, !dbg !4152
  %61 = load i8*, i8** %pix1.addr, align 8, !dbg !4153
  %add.ptr91 = getelementptr inbounds i8, i8* %61, i64 %60, !dbg !4153
  store i8* %add.ptr91, i8** %pix1.addr, align 8, !dbg !4153
  %62 = load i64, i64* %stride.addr, align 8, !dbg !4154
  %63 = load i8*, i8** %pix2.addr, align 8, !dbg !4155
  %add.ptr92 = getelementptr inbounds i8, i8* %63, i64 %62, !dbg !4155
  store i8* %add.ptr92, i8** %pix2.addr, align 8, !dbg !4155
  %64 = load i64, i64* %stride.addr, align 8, !dbg !4156
  %65 = load i8*, i8** %pix3, align 8, !dbg !4157
  %add.ptr93 = getelementptr inbounds i8, i8* %65, i64 %64, !dbg !4157
  store i8* %add.ptr93, i8** %pix3, align 8, !dbg !4157
  br label %for.inc, !dbg !4158

for.inc:                                          ; preds = %for.body
  %66 = load i32, i32* %i, align 4, !dbg !4159
  %inc = add nsw i32 %66, 1, !dbg !4159
  store i32 %inc, i32* %i, align 4, !dbg !4159
  br label %for.cond, !dbg !4161, !llvm.loop !4162

for.end:                                          ; preds = %for.cond
  %67 = load i32, i32* %s, align 4, !dbg !4164
  ret i32 %67, !dbg !4165
}

; Function Attrs: nounwind uwtable
define internal i32 @pix_abs8_xy2_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #0 !dbg !4166 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  %pix3 = alloca i8*, align 8
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !4167, metadata !2614), !dbg !4168
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !4169, metadata !2614), !dbg !4170
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !4171, metadata !2614), !dbg !4172
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !4173, metadata !2614), !dbg !4174
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !4175, metadata !2614), !dbg !4176
  call void @llvm.dbg.declare(metadata i32* %s, metadata !4177, metadata !2614), !dbg !4178
  store i32 0, i32* %s, align 4, !dbg !4178
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4179, metadata !2614), !dbg !4180
  call void @llvm.dbg.declare(metadata i8** %pix3, metadata !4181, metadata !2614), !dbg !4182
  %0 = load i8*, i8** %pix2.addr, align 8, !dbg !4183
  %1 = load i64, i64* %stride.addr, align 8, !dbg !4184
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %1, !dbg !4185
  store i8* %add.ptr, i8** %pix3, align 8, !dbg !4182
  store i32 0, i32* %i, align 4, !dbg !4186
  br label %for.cond, !dbg !4188

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4189
  %3 = load i32, i32* %h.addr, align 4, !dbg !4192
  %cmp = icmp slt i32 %2, %3, !dbg !4193
  br i1 %cmp, label %for.body, label %for.end, !dbg !4194

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %pix1.addr, align 8, !dbg !4195
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !4195
  %5 = load i8, i8* %arrayidx, align 1, !dbg !4195
  %conv = zext i8 %5 to i32, !dbg !4195
  %6 = load i8*, i8** %pix2.addr, align 8, !dbg !4197
  %arrayidx1 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !4197
  %7 = load i8, i8* %arrayidx1, align 1, !dbg !4197
  %conv2 = zext i8 %7 to i32, !dbg !4198
  %8 = load i8*, i8** %pix2.addr, align 8, !dbg !4199
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !4199
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !4199
  %conv4 = zext i8 %9 to i32, !dbg !4200
  %add = add nsw i32 %conv2, %conv4, !dbg !4201
  %10 = load i8*, i8** %pix3, align 8, !dbg !4202
  %arrayidx5 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !4202
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !4202
  %conv6 = zext i8 %11 to i32, !dbg !4203
  %add7 = add nsw i32 %add, %conv6, !dbg !4204
  %12 = load i8*, i8** %pix3, align 8, !dbg !4205
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !4205
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !4205
  %conv9 = zext i8 %13 to i32, !dbg !4206
  %add10 = add nsw i32 %add7, %conv9, !dbg !4207
  %add11 = add nsw i32 %add10, 2, !dbg !4208
  %shr = ashr i32 %add11, 2, !dbg !4209
  %sub = sub nsw i32 %conv, %shr, !dbg !4210
  %call = call i32 @abs(i32 %sub) #1, !dbg !4211
  %14 = load i32, i32* %s, align 4, !dbg !4212
  %add12 = add nsw i32 %14, %call, !dbg !4212
  store i32 %add12, i32* %s, align 4, !dbg !4212
  %15 = load i8*, i8** %pix1.addr, align 8, !dbg !4213
  %arrayidx13 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !4213
  %16 = load i8, i8* %arrayidx13, align 1, !dbg !4213
  %conv14 = zext i8 %16 to i32, !dbg !4213
  %17 = load i8*, i8** %pix2.addr, align 8, !dbg !4214
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !4214
  %18 = load i8, i8* %arrayidx15, align 1, !dbg !4214
  %conv16 = zext i8 %18 to i32, !dbg !4215
  %19 = load i8*, i8** %pix2.addr, align 8, !dbg !4216
  %arrayidx17 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !4216
  %20 = load i8, i8* %arrayidx17, align 1, !dbg !4216
  %conv18 = zext i8 %20 to i32, !dbg !4217
  %add19 = add nsw i32 %conv16, %conv18, !dbg !4218
  %21 = load i8*, i8** %pix3, align 8, !dbg !4219
  %arrayidx20 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !4219
  %22 = load i8, i8* %arrayidx20, align 1, !dbg !4219
  %conv21 = zext i8 %22 to i32, !dbg !4220
  %add22 = add nsw i32 %add19, %conv21, !dbg !4221
  %23 = load i8*, i8** %pix3, align 8, !dbg !4222
  %arrayidx23 = getelementptr inbounds i8, i8* %23, i64 2, !dbg !4222
  %24 = load i8, i8* %arrayidx23, align 1, !dbg !4222
  %conv24 = zext i8 %24 to i32, !dbg !4223
  %add25 = add nsw i32 %add22, %conv24, !dbg !4224
  %add26 = add nsw i32 %add25, 2, !dbg !4225
  %shr27 = ashr i32 %add26, 2, !dbg !4226
  %sub28 = sub nsw i32 %conv14, %shr27, !dbg !4227
  %call29 = call i32 @abs(i32 %sub28) #1, !dbg !4228
  %25 = load i32, i32* %s, align 4, !dbg !4229
  %add30 = add nsw i32 %25, %call29, !dbg !4229
  store i32 %add30, i32* %s, align 4, !dbg !4229
  %26 = load i8*, i8** %pix1.addr, align 8, !dbg !4230
  %arrayidx31 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !4230
  %27 = load i8, i8* %arrayidx31, align 1, !dbg !4230
  %conv32 = zext i8 %27 to i32, !dbg !4230
  %28 = load i8*, i8** %pix2.addr, align 8, !dbg !4231
  %arrayidx33 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !4231
  %29 = load i8, i8* %arrayidx33, align 1, !dbg !4231
  %conv34 = zext i8 %29 to i32, !dbg !4232
  %30 = load i8*, i8** %pix2.addr, align 8, !dbg !4233
  %arrayidx35 = getelementptr inbounds i8, i8* %30, i64 3, !dbg !4233
  %31 = load i8, i8* %arrayidx35, align 1, !dbg !4233
  %conv36 = zext i8 %31 to i32, !dbg !4234
  %add37 = add nsw i32 %conv34, %conv36, !dbg !4235
  %32 = load i8*, i8** %pix3, align 8, !dbg !4236
  %arrayidx38 = getelementptr inbounds i8, i8* %32, i64 2, !dbg !4236
  %33 = load i8, i8* %arrayidx38, align 1, !dbg !4236
  %conv39 = zext i8 %33 to i32, !dbg !4237
  %add40 = add nsw i32 %add37, %conv39, !dbg !4238
  %34 = load i8*, i8** %pix3, align 8, !dbg !4239
  %arrayidx41 = getelementptr inbounds i8, i8* %34, i64 3, !dbg !4239
  %35 = load i8, i8* %arrayidx41, align 1, !dbg !4239
  %conv42 = zext i8 %35 to i32, !dbg !4240
  %add43 = add nsw i32 %add40, %conv42, !dbg !4241
  %add44 = add nsw i32 %add43, 2, !dbg !4242
  %shr45 = ashr i32 %add44, 2, !dbg !4243
  %sub46 = sub nsw i32 %conv32, %shr45, !dbg !4244
  %call47 = call i32 @abs(i32 %sub46) #1, !dbg !4245
  %36 = load i32, i32* %s, align 4, !dbg !4246
  %add48 = add nsw i32 %36, %call47, !dbg !4246
  store i32 %add48, i32* %s, align 4, !dbg !4246
  %37 = load i8*, i8** %pix1.addr, align 8, !dbg !4247
  %arrayidx49 = getelementptr inbounds i8, i8* %37, i64 3, !dbg !4247
  %38 = load i8, i8* %arrayidx49, align 1, !dbg !4247
  %conv50 = zext i8 %38 to i32, !dbg !4247
  %39 = load i8*, i8** %pix2.addr, align 8, !dbg !4248
  %arrayidx51 = getelementptr inbounds i8, i8* %39, i64 3, !dbg !4248
  %40 = load i8, i8* %arrayidx51, align 1, !dbg !4248
  %conv52 = zext i8 %40 to i32, !dbg !4249
  %41 = load i8*, i8** %pix2.addr, align 8, !dbg !4250
  %arrayidx53 = getelementptr inbounds i8, i8* %41, i64 4, !dbg !4250
  %42 = load i8, i8* %arrayidx53, align 1, !dbg !4250
  %conv54 = zext i8 %42 to i32, !dbg !4251
  %add55 = add nsw i32 %conv52, %conv54, !dbg !4252
  %43 = load i8*, i8** %pix3, align 8, !dbg !4253
  %arrayidx56 = getelementptr inbounds i8, i8* %43, i64 3, !dbg !4253
  %44 = load i8, i8* %arrayidx56, align 1, !dbg !4253
  %conv57 = zext i8 %44 to i32, !dbg !4254
  %add58 = add nsw i32 %add55, %conv57, !dbg !4255
  %45 = load i8*, i8** %pix3, align 8, !dbg !4256
  %arrayidx59 = getelementptr inbounds i8, i8* %45, i64 4, !dbg !4256
  %46 = load i8, i8* %arrayidx59, align 1, !dbg !4256
  %conv60 = zext i8 %46 to i32, !dbg !4257
  %add61 = add nsw i32 %add58, %conv60, !dbg !4258
  %add62 = add nsw i32 %add61, 2, !dbg !4259
  %shr63 = ashr i32 %add62, 2, !dbg !4260
  %sub64 = sub nsw i32 %conv50, %shr63, !dbg !4261
  %call65 = call i32 @abs(i32 %sub64) #1, !dbg !4262
  %47 = load i32, i32* %s, align 4, !dbg !4263
  %add66 = add nsw i32 %47, %call65, !dbg !4263
  store i32 %add66, i32* %s, align 4, !dbg !4263
  %48 = load i8*, i8** %pix1.addr, align 8, !dbg !4264
  %arrayidx67 = getelementptr inbounds i8, i8* %48, i64 4, !dbg !4264
  %49 = load i8, i8* %arrayidx67, align 1, !dbg !4264
  %conv68 = zext i8 %49 to i32, !dbg !4264
  %50 = load i8*, i8** %pix2.addr, align 8, !dbg !4265
  %arrayidx69 = getelementptr inbounds i8, i8* %50, i64 4, !dbg !4265
  %51 = load i8, i8* %arrayidx69, align 1, !dbg !4265
  %conv70 = zext i8 %51 to i32, !dbg !4266
  %52 = load i8*, i8** %pix2.addr, align 8, !dbg !4267
  %arrayidx71 = getelementptr inbounds i8, i8* %52, i64 5, !dbg !4267
  %53 = load i8, i8* %arrayidx71, align 1, !dbg !4267
  %conv72 = zext i8 %53 to i32, !dbg !4268
  %add73 = add nsw i32 %conv70, %conv72, !dbg !4269
  %54 = load i8*, i8** %pix3, align 8, !dbg !4270
  %arrayidx74 = getelementptr inbounds i8, i8* %54, i64 4, !dbg !4270
  %55 = load i8, i8* %arrayidx74, align 1, !dbg !4270
  %conv75 = zext i8 %55 to i32, !dbg !4271
  %add76 = add nsw i32 %add73, %conv75, !dbg !4272
  %56 = load i8*, i8** %pix3, align 8, !dbg !4273
  %arrayidx77 = getelementptr inbounds i8, i8* %56, i64 5, !dbg !4273
  %57 = load i8, i8* %arrayidx77, align 1, !dbg !4273
  %conv78 = zext i8 %57 to i32, !dbg !4274
  %add79 = add nsw i32 %add76, %conv78, !dbg !4275
  %add80 = add nsw i32 %add79, 2, !dbg !4276
  %shr81 = ashr i32 %add80, 2, !dbg !4277
  %sub82 = sub nsw i32 %conv68, %shr81, !dbg !4278
  %call83 = call i32 @abs(i32 %sub82) #1, !dbg !4279
  %58 = load i32, i32* %s, align 4, !dbg !4280
  %add84 = add nsw i32 %58, %call83, !dbg !4280
  store i32 %add84, i32* %s, align 4, !dbg !4280
  %59 = load i8*, i8** %pix1.addr, align 8, !dbg !4281
  %arrayidx85 = getelementptr inbounds i8, i8* %59, i64 5, !dbg !4281
  %60 = load i8, i8* %arrayidx85, align 1, !dbg !4281
  %conv86 = zext i8 %60 to i32, !dbg !4281
  %61 = load i8*, i8** %pix2.addr, align 8, !dbg !4282
  %arrayidx87 = getelementptr inbounds i8, i8* %61, i64 5, !dbg !4282
  %62 = load i8, i8* %arrayidx87, align 1, !dbg !4282
  %conv88 = zext i8 %62 to i32, !dbg !4283
  %63 = load i8*, i8** %pix2.addr, align 8, !dbg !4284
  %arrayidx89 = getelementptr inbounds i8, i8* %63, i64 6, !dbg !4284
  %64 = load i8, i8* %arrayidx89, align 1, !dbg !4284
  %conv90 = zext i8 %64 to i32, !dbg !4285
  %add91 = add nsw i32 %conv88, %conv90, !dbg !4286
  %65 = load i8*, i8** %pix3, align 8, !dbg !4287
  %arrayidx92 = getelementptr inbounds i8, i8* %65, i64 5, !dbg !4287
  %66 = load i8, i8* %arrayidx92, align 1, !dbg !4287
  %conv93 = zext i8 %66 to i32, !dbg !4288
  %add94 = add nsw i32 %add91, %conv93, !dbg !4289
  %67 = load i8*, i8** %pix3, align 8, !dbg !4290
  %arrayidx95 = getelementptr inbounds i8, i8* %67, i64 6, !dbg !4290
  %68 = load i8, i8* %arrayidx95, align 1, !dbg !4290
  %conv96 = zext i8 %68 to i32, !dbg !4291
  %add97 = add nsw i32 %add94, %conv96, !dbg !4292
  %add98 = add nsw i32 %add97, 2, !dbg !4293
  %shr99 = ashr i32 %add98, 2, !dbg !4294
  %sub100 = sub nsw i32 %conv86, %shr99, !dbg !4295
  %call101 = call i32 @abs(i32 %sub100) #1, !dbg !4296
  %69 = load i32, i32* %s, align 4, !dbg !4297
  %add102 = add nsw i32 %69, %call101, !dbg !4297
  store i32 %add102, i32* %s, align 4, !dbg !4297
  %70 = load i8*, i8** %pix1.addr, align 8, !dbg !4298
  %arrayidx103 = getelementptr inbounds i8, i8* %70, i64 6, !dbg !4298
  %71 = load i8, i8* %arrayidx103, align 1, !dbg !4298
  %conv104 = zext i8 %71 to i32, !dbg !4298
  %72 = load i8*, i8** %pix2.addr, align 8, !dbg !4299
  %arrayidx105 = getelementptr inbounds i8, i8* %72, i64 6, !dbg !4299
  %73 = load i8, i8* %arrayidx105, align 1, !dbg !4299
  %conv106 = zext i8 %73 to i32, !dbg !4300
  %74 = load i8*, i8** %pix2.addr, align 8, !dbg !4301
  %arrayidx107 = getelementptr inbounds i8, i8* %74, i64 7, !dbg !4301
  %75 = load i8, i8* %arrayidx107, align 1, !dbg !4301
  %conv108 = zext i8 %75 to i32, !dbg !4302
  %add109 = add nsw i32 %conv106, %conv108, !dbg !4303
  %76 = load i8*, i8** %pix3, align 8, !dbg !4304
  %arrayidx110 = getelementptr inbounds i8, i8* %76, i64 6, !dbg !4304
  %77 = load i8, i8* %arrayidx110, align 1, !dbg !4304
  %conv111 = zext i8 %77 to i32, !dbg !4305
  %add112 = add nsw i32 %add109, %conv111, !dbg !4306
  %78 = load i8*, i8** %pix3, align 8, !dbg !4307
  %arrayidx113 = getelementptr inbounds i8, i8* %78, i64 7, !dbg !4307
  %79 = load i8, i8* %arrayidx113, align 1, !dbg !4307
  %conv114 = zext i8 %79 to i32, !dbg !4308
  %add115 = add nsw i32 %add112, %conv114, !dbg !4309
  %add116 = add nsw i32 %add115, 2, !dbg !4310
  %shr117 = ashr i32 %add116, 2, !dbg !4311
  %sub118 = sub nsw i32 %conv104, %shr117, !dbg !4312
  %call119 = call i32 @abs(i32 %sub118) #1, !dbg !4313
  %80 = load i32, i32* %s, align 4, !dbg !4314
  %add120 = add nsw i32 %80, %call119, !dbg !4314
  store i32 %add120, i32* %s, align 4, !dbg !4314
  %81 = load i8*, i8** %pix1.addr, align 8, !dbg !4315
  %arrayidx121 = getelementptr inbounds i8, i8* %81, i64 7, !dbg !4315
  %82 = load i8, i8* %arrayidx121, align 1, !dbg !4315
  %conv122 = zext i8 %82 to i32, !dbg !4315
  %83 = load i8*, i8** %pix2.addr, align 8, !dbg !4316
  %arrayidx123 = getelementptr inbounds i8, i8* %83, i64 7, !dbg !4316
  %84 = load i8, i8* %arrayidx123, align 1, !dbg !4316
  %conv124 = zext i8 %84 to i32, !dbg !4317
  %85 = load i8*, i8** %pix2.addr, align 8, !dbg !4318
  %arrayidx125 = getelementptr inbounds i8, i8* %85, i64 8, !dbg !4318
  %86 = load i8, i8* %arrayidx125, align 1, !dbg !4318
  %conv126 = zext i8 %86 to i32, !dbg !4319
  %add127 = add nsw i32 %conv124, %conv126, !dbg !4320
  %87 = load i8*, i8** %pix3, align 8, !dbg !4321
  %arrayidx128 = getelementptr inbounds i8, i8* %87, i64 7, !dbg !4321
  %88 = load i8, i8* %arrayidx128, align 1, !dbg !4321
  %conv129 = zext i8 %88 to i32, !dbg !4322
  %add130 = add nsw i32 %add127, %conv129, !dbg !4323
  %89 = load i8*, i8** %pix3, align 8, !dbg !4324
  %arrayidx131 = getelementptr inbounds i8, i8* %89, i64 8, !dbg !4324
  %90 = load i8, i8* %arrayidx131, align 1, !dbg !4324
  %conv132 = zext i8 %90 to i32, !dbg !4325
  %add133 = add nsw i32 %add130, %conv132, !dbg !4326
  %add134 = add nsw i32 %add133, 2, !dbg !4327
  %shr135 = ashr i32 %add134, 2, !dbg !4328
  %sub136 = sub nsw i32 %conv122, %shr135, !dbg !4329
  %call137 = call i32 @abs(i32 %sub136) #1, !dbg !4330
  %91 = load i32, i32* %s, align 4, !dbg !4331
  %add138 = add nsw i32 %91, %call137, !dbg !4331
  store i32 %add138, i32* %s, align 4, !dbg !4331
  %92 = load i64, i64* %stride.addr, align 8, !dbg !4332
  %93 = load i8*, i8** %pix1.addr, align 8, !dbg !4333
  %add.ptr139 = getelementptr inbounds i8, i8* %93, i64 %92, !dbg !4333
  store i8* %add.ptr139, i8** %pix1.addr, align 8, !dbg !4333
  %94 = load i64, i64* %stride.addr, align 8, !dbg !4334
  %95 = load i8*, i8** %pix2.addr, align 8, !dbg !4335
  %add.ptr140 = getelementptr inbounds i8, i8* %95, i64 %94, !dbg !4335
  store i8* %add.ptr140, i8** %pix2.addr, align 8, !dbg !4335
  %96 = load i64, i64* %stride.addr, align 8, !dbg !4336
  %97 = load i8*, i8** %pix3, align 8, !dbg !4337
  %add.ptr141 = getelementptr inbounds i8, i8* %97, i64 %96, !dbg !4337
  store i8* %add.ptr141, i8** %pix3, align 8, !dbg !4337
  br label %for.inc, !dbg !4338

for.inc:                                          ; preds = %for.body
  %98 = load i32, i32* %i, align 4, !dbg !4339
  %inc = add nsw i32 %98, 1, !dbg !4339
  store i32 %inc, i32* %i, align 4, !dbg !4339
  br label %for.cond, !dbg !4341, !llvm.loop !4342

for.end:                                          ; preds = %for.cond
  %99 = load i32, i32* %s, align 4, !dbg !4344
  ret i32 %99, !dbg !4345
}

; Function Attrs: nounwind uwtable
define internal i32 @hadamard8_diff16_c(%struct.MpegEncContext* %s, i8* %dst, i8* %src, i64 %stride, i32 %h) #0 !dbg !4346 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !4347, metadata !2614), !dbg !4348
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4349, metadata !2614), !dbg !4350
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !4351, metadata !2614), !dbg !4352
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !4353, metadata !2614), !dbg !4354
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !4355, metadata !2614), !dbg !4356
  call void @llvm.dbg.declare(metadata i32* %score, metadata !4357, metadata !2614), !dbg !4358
  store i32 0, i32* %score, align 4, !dbg !4358
  %0 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !4359
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !4360
  %2 = load i8*, i8** %src.addr, align 8, !dbg !4361
  %3 = load i64, i64* %stride.addr, align 8, !dbg !4362
  %call = call i32 @hadamard8_diff8x8_c(%struct.MpegEncContext* %0, i8* %1, i8* %2, i64 %3, i32 8), !dbg !4363
  %4 = load i32, i32* %score, align 4, !dbg !4364
  %add = add nsw i32 %4, %call, !dbg !4364
  store i32 %add, i32* %score, align 4, !dbg !4364
  %5 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !4365
  %6 = load i8*, i8** %dst.addr, align 8, !dbg !4366
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 8, !dbg !4367
  %7 = load i8*, i8** %src.addr, align 8, !dbg !4368
  %add.ptr1 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !4369
  %8 = load i64, i64* %stride.addr, align 8, !dbg !4370
  %call2 = call i32 @hadamard8_diff8x8_c(%struct.MpegEncContext* %5, i8* %add.ptr, i8* %add.ptr1, i64 %8, i32 8), !dbg !4371
  %9 = load i32, i32* %score, align 4, !dbg !4373
  %add3 = add nsw i32 %9, %call2, !dbg !4373
  store i32 %add3, i32* %score, align 4, !dbg !4373
  %10 = load i32, i32* %h.addr, align 4, !dbg !4374
  %cmp = icmp eq i32 %10, 16, !dbg !4376
  br i1 %cmp, label %if.then, label %if.end, !dbg !4377

if.then:                                          ; preds = %entry
  %11 = load i64, i64* %stride.addr, align 8, !dbg !4378
  %mul = mul nsw i64 8, %11, !dbg !4381
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !4382
  %add.ptr4 = getelementptr inbounds i8, i8* %12, i64 %mul, !dbg !4382
  store i8* %add.ptr4, i8** %dst.addr, align 8, !dbg !4382
  %13 = load i64, i64* %stride.addr, align 8, !dbg !4383
  %mul5 = mul nsw i64 8, %13, !dbg !4384
  %14 = load i8*, i8** %src.addr, align 8, !dbg !4385
  %add.ptr6 = getelementptr inbounds i8, i8* %14, i64 %mul5, !dbg !4385
  store i8* %add.ptr6, i8** %src.addr, align 8, !dbg !4385
  %15 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !4386
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !4387
  %17 = load i8*, i8** %src.addr, align 8, !dbg !4388
  %18 = load i64, i64* %stride.addr, align 8, !dbg !4389
  %call7 = call i32 @hadamard8_diff8x8_c(%struct.MpegEncContext* %15, i8* %16, i8* %17, i64 %18, i32 8), !dbg !4390
  %19 = load i32, i32* %score, align 4, !dbg !4391
  %add8 = add nsw i32 %19, %call7, !dbg !4391
  store i32 %add8, i32* %score, align 4, !dbg !4391
  %20 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !4392
  %21 = load i8*, i8** %dst.addr, align 8, !dbg !4393
  %add.ptr9 = getelementptr inbounds i8, i8* %21, i64 8, !dbg !4394
  %22 = load i8*, i8** %src.addr, align 8, !dbg !4395
  %add.ptr10 = getelementptr inbounds i8, i8* %22, i64 8, !dbg !4396
  %23 = load i64, i64* %stride.addr, align 8, !dbg !4397
  %call11 = call i32 @hadamard8_diff8x8_c(%struct.MpegEncContext* %20, i8* %add.ptr9, i8* %add.ptr10, i64 %23, i32 8), !dbg !4398
  %24 = load i32, i32* %score, align 4, !dbg !4400
  %add12 = add nsw i32 %24, %call11, !dbg !4400
  store i32 %add12, i32* %score, align 4, !dbg !4400
  br label %if.end, !dbg !4401

if.end:                                           ; preds = %if.then, %entry
  %25 = load i32, i32* %score, align 4, !dbg !4402
  ret i32 %25, !dbg !4404
}

; Function Attrs: nounwind uwtable
define internal i32 @hadamard8_diff8x8_c(%struct.MpegEncContext* %s, i8* %dst, i8* %src, i64 %stride, i32 %h) #0 !dbg !4405 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [64 x i32], align 16
  %sum = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %a229 = alloca i32, align 4
  %b230 = alloca i32, align 4
  %a249 = alloca i32, align 4
  %b250 = alloca i32, align 4
  %a269 = alloca i32, align 4
  %b270 = alloca i32, align 4
  %a289 = alloca i32, align 4
  %b290 = alloca i32, align 4
  %a309 = alloca i32, align 4
  %b310 = alloca i32, align 4
  %a329 = alloca i32, align 4
  %b330 = alloca i32, align 4
  %a349 = alloca i32, align 4
  %b350 = alloca i32, align 4
  %a373 = alloca i32, align 4
  %b374 = alloca i32, align 4
  %a389 = alloca i32, align 4
  %b390 = alloca i32, align 4
  %a405 = alloca i32, align 4
  %b406 = alloca i32, align 4
  %a421 = alloca i32, align 4
  %b422 = alloca i32, align 4
  %a437 = alloca i32, align 4
  %b438 = alloca i32, align 4
  %a453 = alloca i32, align 4
  %b454 = alloca i32, align 4
  %a469 = alloca i32, align 4
  %b470 = alloca i32, align 4
  %a485 = alloca i32, align 4
  %b486 = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !4406, metadata !2614), !dbg !4407
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4408, metadata !2614), !dbg !4409
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !4410, metadata !2614), !dbg !4411
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !4412, metadata !2614), !dbg !4413
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !4414, metadata !2614), !dbg !4415
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4416, metadata !2614), !dbg !4417
  call void @llvm.dbg.declare(metadata [64 x i32]* %temp, metadata !4418, metadata !2614), !dbg !4419
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !4420, metadata !2614), !dbg !4421
  store i32 0, i32* %sum, align 4, !dbg !4421
  store i32 0, i32* %i, align 4, !dbg !4422
  br label %for.cond, !dbg !4424

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4425
  %cmp = icmp slt i32 %0, 8, !dbg !4428
  br i1 %cmp, label %for.body, label %for.end, !dbg !4429

for.body:                                         ; preds = %for.cond
  %1 = load i64, i64* %stride.addr, align 8, !dbg !4430
  %2 = load i32, i32* %i, align 4, !dbg !4432
  %conv = sext i32 %2 to i64, !dbg !4432
  %mul = mul nsw i64 %1, %conv, !dbg !4433
  %add = add nsw i64 %mul, 0, !dbg !4434
  %3 = load i8*, i8** %src.addr, align 8, !dbg !4435
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %add, !dbg !4435
  %4 = load i8, i8* %arrayidx, align 1, !dbg !4435
  %conv1 = zext i8 %4 to i32, !dbg !4435
  %5 = load i64, i64* %stride.addr, align 8, !dbg !4436
  %6 = load i32, i32* %i, align 4, !dbg !4437
  %conv2 = sext i32 %6 to i64, !dbg !4437
  %mul3 = mul nsw i64 %5, %conv2, !dbg !4438
  %add4 = add nsw i64 %mul3, 0, !dbg !4439
  %7 = load i8*, i8** %dst.addr, align 8, !dbg !4440
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 %add4, !dbg !4440
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !4440
  %conv6 = zext i8 %8 to i32, !dbg !4440
  %sub = sub nsw i32 %conv1, %conv6, !dbg !4441
  %9 = load i64, i64* %stride.addr, align 8, !dbg !4442
  %10 = load i32, i32* %i, align 4, !dbg !4443
  %conv7 = sext i32 %10 to i64, !dbg !4443
  %mul8 = mul nsw i64 %9, %conv7, !dbg !4444
  %add9 = add nsw i64 %mul8, 1, !dbg !4445
  %11 = load i8*, i8** %src.addr, align 8, !dbg !4446
  %arrayidx10 = getelementptr inbounds i8, i8* %11, i64 %add9, !dbg !4446
  %12 = load i8, i8* %arrayidx10, align 1, !dbg !4446
  %conv11 = zext i8 %12 to i32, !dbg !4446
  %13 = load i64, i64* %stride.addr, align 8, !dbg !4447
  %14 = load i32, i32* %i, align 4, !dbg !4448
  %conv12 = sext i32 %14 to i64, !dbg !4448
  %mul13 = mul nsw i64 %13, %conv12, !dbg !4449
  %add14 = add nsw i64 %mul13, 1, !dbg !4450
  %15 = load i8*, i8** %dst.addr, align 8, !dbg !4451
  %arrayidx15 = getelementptr inbounds i8, i8* %15, i64 %add14, !dbg !4451
  %16 = load i8, i8* %arrayidx15, align 1, !dbg !4451
  %conv16 = zext i8 %16 to i32, !dbg !4451
  %sub17 = sub nsw i32 %conv11, %conv16, !dbg !4452
  %add18 = add nsw i32 %sub, %sub17, !dbg !4453
  %17 = load i32, i32* %i, align 4, !dbg !4454
  %mul19 = mul nsw i32 8, %17, !dbg !4455
  %add20 = add nsw i32 %mul19, 0, !dbg !4456
  %idxprom = sext i32 %add20 to i64, !dbg !4457
  %arrayidx21 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom, !dbg !4457
  store i32 %add18, i32* %arrayidx21, align 4, !dbg !4458
  %18 = load i64, i64* %stride.addr, align 8, !dbg !4459
  %19 = load i32, i32* %i, align 4, !dbg !4460
  %conv22 = sext i32 %19 to i64, !dbg !4460
  %mul23 = mul nsw i64 %18, %conv22, !dbg !4461
  %add24 = add nsw i64 %mul23, 0, !dbg !4462
  %20 = load i8*, i8** %src.addr, align 8, !dbg !4463
  %arrayidx25 = getelementptr inbounds i8, i8* %20, i64 %add24, !dbg !4463
  %21 = load i8, i8* %arrayidx25, align 1, !dbg !4463
  %conv26 = zext i8 %21 to i32, !dbg !4463
  %22 = load i64, i64* %stride.addr, align 8, !dbg !4464
  %23 = load i32, i32* %i, align 4, !dbg !4465
  %conv27 = sext i32 %23 to i64, !dbg !4465
  %mul28 = mul nsw i64 %22, %conv27, !dbg !4466
  %add29 = add nsw i64 %mul28, 0, !dbg !4467
  %24 = load i8*, i8** %dst.addr, align 8, !dbg !4468
  %arrayidx30 = getelementptr inbounds i8, i8* %24, i64 %add29, !dbg !4468
  %25 = load i8, i8* %arrayidx30, align 1, !dbg !4468
  %conv31 = zext i8 %25 to i32, !dbg !4468
  %sub32 = sub nsw i32 %conv26, %conv31, !dbg !4469
  %26 = load i64, i64* %stride.addr, align 8, !dbg !4470
  %27 = load i32, i32* %i, align 4, !dbg !4471
  %conv33 = sext i32 %27 to i64, !dbg !4471
  %mul34 = mul nsw i64 %26, %conv33, !dbg !4472
  %add35 = add nsw i64 %mul34, 1, !dbg !4473
  %28 = load i8*, i8** %src.addr, align 8, !dbg !4474
  %arrayidx36 = getelementptr inbounds i8, i8* %28, i64 %add35, !dbg !4474
  %29 = load i8, i8* %arrayidx36, align 1, !dbg !4474
  %conv37 = zext i8 %29 to i32, !dbg !4474
  %30 = load i64, i64* %stride.addr, align 8, !dbg !4475
  %31 = load i32, i32* %i, align 4, !dbg !4476
  %conv38 = sext i32 %31 to i64, !dbg !4476
  %mul39 = mul nsw i64 %30, %conv38, !dbg !4477
  %add40 = add nsw i64 %mul39, 1, !dbg !4478
  %32 = load i8*, i8** %dst.addr, align 8, !dbg !4479
  %arrayidx41 = getelementptr inbounds i8, i8* %32, i64 %add40, !dbg !4479
  %33 = load i8, i8* %arrayidx41, align 1, !dbg !4479
  %conv42 = zext i8 %33 to i32, !dbg !4479
  %sub43 = sub nsw i32 %conv37, %conv42, !dbg !4480
  %sub44 = sub nsw i32 %sub32, %sub43, !dbg !4481
  %34 = load i32, i32* %i, align 4, !dbg !4482
  %mul45 = mul nsw i32 8, %34, !dbg !4483
  %add46 = add nsw i32 %mul45, 1, !dbg !4484
  %idxprom47 = sext i32 %add46 to i64, !dbg !4485
  %arrayidx48 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom47, !dbg !4485
  store i32 %sub44, i32* %arrayidx48, align 4, !dbg !4486
  %35 = load i64, i64* %stride.addr, align 8, !dbg !4487
  %36 = load i32, i32* %i, align 4, !dbg !4488
  %conv49 = sext i32 %36 to i64, !dbg !4488
  %mul50 = mul nsw i64 %35, %conv49, !dbg !4489
  %add51 = add nsw i64 %mul50, 2, !dbg !4490
  %37 = load i8*, i8** %src.addr, align 8, !dbg !4491
  %arrayidx52 = getelementptr inbounds i8, i8* %37, i64 %add51, !dbg !4491
  %38 = load i8, i8* %arrayidx52, align 1, !dbg !4491
  %conv53 = zext i8 %38 to i32, !dbg !4491
  %39 = load i64, i64* %stride.addr, align 8, !dbg !4492
  %40 = load i32, i32* %i, align 4, !dbg !4493
  %conv54 = sext i32 %40 to i64, !dbg !4493
  %mul55 = mul nsw i64 %39, %conv54, !dbg !4494
  %add56 = add nsw i64 %mul55, 2, !dbg !4495
  %41 = load i8*, i8** %dst.addr, align 8, !dbg !4496
  %arrayidx57 = getelementptr inbounds i8, i8* %41, i64 %add56, !dbg !4496
  %42 = load i8, i8* %arrayidx57, align 1, !dbg !4496
  %conv58 = zext i8 %42 to i32, !dbg !4496
  %sub59 = sub nsw i32 %conv53, %conv58, !dbg !4497
  %43 = load i64, i64* %stride.addr, align 8, !dbg !4498
  %44 = load i32, i32* %i, align 4, !dbg !4499
  %conv60 = sext i32 %44 to i64, !dbg !4499
  %mul61 = mul nsw i64 %43, %conv60, !dbg !4500
  %add62 = add nsw i64 %mul61, 3, !dbg !4501
  %45 = load i8*, i8** %src.addr, align 8, !dbg !4502
  %arrayidx63 = getelementptr inbounds i8, i8* %45, i64 %add62, !dbg !4502
  %46 = load i8, i8* %arrayidx63, align 1, !dbg !4502
  %conv64 = zext i8 %46 to i32, !dbg !4502
  %47 = load i64, i64* %stride.addr, align 8, !dbg !4503
  %48 = load i32, i32* %i, align 4, !dbg !4504
  %conv65 = sext i32 %48 to i64, !dbg !4504
  %mul66 = mul nsw i64 %47, %conv65, !dbg !4505
  %add67 = add nsw i64 %mul66, 3, !dbg !4506
  %49 = load i8*, i8** %dst.addr, align 8, !dbg !4507
  %arrayidx68 = getelementptr inbounds i8, i8* %49, i64 %add67, !dbg !4507
  %50 = load i8, i8* %arrayidx68, align 1, !dbg !4507
  %conv69 = zext i8 %50 to i32, !dbg !4507
  %sub70 = sub nsw i32 %conv64, %conv69, !dbg !4508
  %add71 = add nsw i32 %sub59, %sub70, !dbg !4509
  %51 = load i32, i32* %i, align 4, !dbg !4510
  %mul72 = mul nsw i32 8, %51, !dbg !4511
  %add73 = add nsw i32 %mul72, 2, !dbg !4512
  %idxprom74 = sext i32 %add73 to i64, !dbg !4513
  %arrayidx75 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom74, !dbg !4513
  store i32 %add71, i32* %arrayidx75, align 4, !dbg !4514
  %52 = load i64, i64* %stride.addr, align 8, !dbg !4515
  %53 = load i32, i32* %i, align 4, !dbg !4516
  %conv76 = sext i32 %53 to i64, !dbg !4516
  %mul77 = mul nsw i64 %52, %conv76, !dbg !4517
  %add78 = add nsw i64 %mul77, 2, !dbg !4518
  %54 = load i8*, i8** %src.addr, align 8, !dbg !4519
  %arrayidx79 = getelementptr inbounds i8, i8* %54, i64 %add78, !dbg !4519
  %55 = load i8, i8* %arrayidx79, align 1, !dbg !4519
  %conv80 = zext i8 %55 to i32, !dbg !4519
  %56 = load i64, i64* %stride.addr, align 8, !dbg !4520
  %57 = load i32, i32* %i, align 4, !dbg !4521
  %conv81 = sext i32 %57 to i64, !dbg !4521
  %mul82 = mul nsw i64 %56, %conv81, !dbg !4522
  %add83 = add nsw i64 %mul82, 2, !dbg !4523
  %58 = load i8*, i8** %dst.addr, align 8, !dbg !4524
  %arrayidx84 = getelementptr inbounds i8, i8* %58, i64 %add83, !dbg !4524
  %59 = load i8, i8* %arrayidx84, align 1, !dbg !4524
  %conv85 = zext i8 %59 to i32, !dbg !4524
  %sub86 = sub nsw i32 %conv80, %conv85, !dbg !4525
  %60 = load i64, i64* %stride.addr, align 8, !dbg !4526
  %61 = load i32, i32* %i, align 4, !dbg !4527
  %conv87 = sext i32 %61 to i64, !dbg !4527
  %mul88 = mul nsw i64 %60, %conv87, !dbg !4528
  %add89 = add nsw i64 %mul88, 3, !dbg !4529
  %62 = load i8*, i8** %src.addr, align 8, !dbg !4530
  %arrayidx90 = getelementptr inbounds i8, i8* %62, i64 %add89, !dbg !4530
  %63 = load i8, i8* %arrayidx90, align 1, !dbg !4530
  %conv91 = zext i8 %63 to i32, !dbg !4530
  %64 = load i64, i64* %stride.addr, align 8, !dbg !4531
  %65 = load i32, i32* %i, align 4, !dbg !4532
  %conv92 = sext i32 %65 to i64, !dbg !4532
  %mul93 = mul nsw i64 %64, %conv92, !dbg !4533
  %add94 = add nsw i64 %mul93, 3, !dbg !4534
  %66 = load i8*, i8** %dst.addr, align 8, !dbg !4535
  %arrayidx95 = getelementptr inbounds i8, i8* %66, i64 %add94, !dbg !4535
  %67 = load i8, i8* %arrayidx95, align 1, !dbg !4535
  %conv96 = zext i8 %67 to i32, !dbg !4535
  %sub97 = sub nsw i32 %conv91, %conv96, !dbg !4536
  %sub98 = sub nsw i32 %sub86, %sub97, !dbg !4537
  %68 = load i32, i32* %i, align 4, !dbg !4538
  %mul99 = mul nsw i32 8, %68, !dbg !4539
  %add100 = add nsw i32 %mul99, 3, !dbg !4540
  %idxprom101 = sext i32 %add100 to i64, !dbg !4541
  %arrayidx102 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom101, !dbg !4541
  store i32 %sub98, i32* %arrayidx102, align 4, !dbg !4542
  %69 = load i64, i64* %stride.addr, align 8, !dbg !4543
  %70 = load i32, i32* %i, align 4, !dbg !4544
  %conv103 = sext i32 %70 to i64, !dbg !4544
  %mul104 = mul nsw i64 %69, %conv103, !dbg !4545
  %add105 = add nsw i64 %mul104, 4, !dbg !4546
  %71 = load i8*, i8** %src.addr, align 8, !dbg !4547
  %arrayidx106 = getelementptr inbounds i8, i8* %71, i64 %add105, !dbg !4547
  %72 = load i8, i8* %arrayidx106, align 1, !dbg !4547
  %conv107 = zext i8 %72 to i32, !dbg !4547
  %73 = load i64, i64* %stride.addr, align 8, !dbg !4548
  %74 = load i32, i32* %i, align 4, !dbg !4549
  %conv108 = sext i32 %74 to i64, !dbg !4549
  %mul109 = mul nsw i64 %73, %conv108, !dbg !4550
  %add110 = add nsw i64 %mul109, 4, !dbg !4551
  %75 = load i8*, i8** %dst.addr, align 8, !dbg !4552
  %arrayidx111 = getelementptr inbounds i8, i8* %75, i64 %add110, !dbg !4552
  %76 = load i8, i8* %arrayidx111, align 1, !dbg !4552
  %conv112 = zext i8 %76 to i32, !dbg !4552
  %sub113 = sub nsw i32 %conv107, %conv112, !dbg !4553
  %77 = load i64, i64* %stride.addr, align 8, !dbg !4554
  %78 = load i32, i32* %i, align 4, !dbg !4555
  %conv114 = sext i32 %78 to i64, !dbg !4555
  %mul115 = mul nsw i64 %77, %conv114, !dbg !4556
  %add116 = add nsw i64 %mul115, 5, !dbg !4557
  %79 = load i8*, i8** %src.addr, align 8, !dbg !4558
  %arrayidx117 = getelementptr inbounds i8, i8* %79, i64 %add116, !dbg !4558
  %80 = load i8, i8* %arrayidx117, align 1, !dbg !4558
  %conv118 = zext i8 %80 to i32, !dbg !4558
  %81 = load i64, i64* %stride.addr, align 8, !dbg !4559
  %82 = load i32, i32* %i, align 4, !dbg !4560
  %conv119 = sext i32 %82 to i64, !dbg !4560
  %mul120 = mul nsw i64 %81, %conv119, !dbg !4561
  %add121 = add nsw i64 %mul120, 5, !dbg !4562
  %83 = load i8*, i8** %dst.addr, align 8, !dbg !4563
  %arrayidx122 = getelementptr inbounds i8, i8* %83, i64 %add121, !dbg !4563
  %84 = load i8, i8* %arrayidx122, align 1, !dbg !4563
  %conv123 = zext i8 %84 to i32, !dbg !4563
  %sub124 = sub nsw i32 %conv118, %conv123, !dbg !4564
  %add125 = add nsw i32 %sub113, %sub124, !dbg !4565
  %85 = load i32, i32* %i, align 4, !dbg !4566
  %mul126 = mul nsw i32 8, %85, !dbg !4567
  %add127 = add nsw i32 %mul126, 4, !dbg !4568
  %idxprom128 = sext i32 %add127 to i64, !dbg !4569
  %arrayidx129 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom128, !dbg !4569
  store i32 %add125, i32* %arrayidx129, align 4, !dbg !4570
  %86 = load i64, i64* %stride.addr, align 8, !dbg !4571
  %87 = load i32, i32* %i, align 4, !dbg !4572
  %conv130 = sext i32 %87 to i64, !dbg !4572
  %mul131 = mul nsw i64 %86, %conv130, !dbg !4573
  %add132 = add nsw i64 %mul131, 4, !dbg !4574
  %88 = load i8*, i8** %src.addr, align 8, !dbg !4575
  %arrayidx133 = getelementptr inbounds i8, i8* %88, i64 %add132, !dbg !4575
  %89 = load i8, i8* %arrayidx133, align 1, !dbg !4575
  %conv134 = zext i8 %89 to i32, !dbg !4575
  %90 = load i64, i64* %stride.addr, align 8, !dbg !4576
  %91 = load i32, i32* %i, align 4, !dbg !4577
  %conv135 = sext i32 %91 to i64, !dbg !4577
  %mul136 = mul nsw i64 %90, %conv135, !dbg !4578
  %add137 = add nsw i64 %mul136, 4, !dbg !4579
  %92 = load i8*, i8** %dst.addr, align 8, !dbg !4580
  %arrayidx138 = getelementptr inbounds i8, i8* %92, i64 %add137, !dbg !4580
  %93 = load i8, i8* %arrayidx138, align 1, !dbg !4580
  %conv139 = zext i8 %93 to i32, !dbg !4580
  %sub140 = sub nsw i32 %conv134, %conv139, !dbg !4581
  %94 = load i64, i64* %stride.addr, align 8, !dbg !4582
  %95 = load i32, i32* %i, align 4, !dbg !4583
  %conv141 = sext i32 %95 to i64, !dbg !4583
  %mul142 = mul nsw i64 %94, %conv141, !dbg !4584
  %add143 = add nsw i64 %mul142, 5, !dbg !4585
  %96 = load i8*, i8** %src.addr, align 8, !dbg !4586
  %arrayidx144 = getelementptr inbounds i8, i8* %96, i64 %add143, !dbg !4586
  %97 = load i8, i8* %arrayidx144, align 1, !dbg !4586
  %conv145 = zext i8 %97 to i32, !dbg !4586
  %98 = load i64, i64* %stride.addr, align 8, !dbg !4587
  %99 = load i32, i32* %i, align 4, !dbg !4588
  %conv146 = sext i32 %99 to i64, !dbg !4588
  %mul147 = mul nsw i64 %98, %conv146, !dbg !4589
  %add148 = add nsw i64 %mul147, 5, !dbg !4590
  %100 = load i8*, i8** %dst.addr, align 8, !dbg !4591
  %arrayidx149 = getelementptr inbounds i8, i8* %100, i64 %add148, !dbg !4591
  %101 = load i8, i8* %arrayidx149, align 1, !dbg !4591
  %conv150 = zext i8 %101 to i32, !dbg !4591
  %sub151 = sub nsw i32 %conv145, %conv150, !dbg !4592
  %sub152 = sub nsw i32 %sub140, %sub151, !dbg !4593
  %102 = load i32, i32* %i, align 4, !dbg !4594
  %mul153 = mul nsw i32 8, %102, !dbg !4595
  %add154 = add nsw i32 %mul153, 5, !dbg !4596
  %idxprom155 = sext i32 %add154 to i64, !dbg !4597
  %arrayidx156 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom155, !dbg !4597
  store i32 %sub152, i32* %arrayidx156, align 4, !dbg !4598
  %103 = load i64, i64* %stride.addr, align 8, !dbg !4599
  %104 = load i32, i32* %i, align 4, !dbg !4600
  %conv157 = sext i32 %104 to i64, !dbg !4600
  %mul158 = mul nsw i64 %103, %conv157, !dbg !4601
  %add159 = add nsw i64 %mul158, 6, !dbg !4602
  %105 = load i8*, i8** %src.addr, align 8, !dbg !4603
  %arrayidx160 = getelementptr inbounds i8, i8* %105, i64 %add159, !dbg !4603
  %106 = load i8, i8* %arrayidx160, align 1, !dbg !4603
  %conv161 = zext i8 %106 to i32, !dbg !4603
  %107 = load i64, i64* %stride.addr, align 8, !dbg !4604
  %108 = load i32, i32* %i, align 4, !dbg !4605
  %conv162 = sext i32 %108 to i64, !dbg !4605
  %mul163 = mul nsw i64 %107, %conv162, !dbg !4606
  %add164 = add nsw i64 %mul163, 6, !dbg !4607
  %109 = load i8*, i8** %dst.addr, align 8, !dbg !4608
  %arrayidx165 = getelementptr inbounds i8, i8* %109, i64 %add164, !dbg !4608
  %110 = load i8, i8* %arrayidx165, align 1, !dbg !4608
  %conv166 = zext i8 %110 to i32, !dbg !4608
  %sub167 = sub nsw i32 %conv161, %conv166, !dbg !4609
  %111 = load i64, i64* %stride.addr, align 8, !dbg !4610
  %112 = load i32, i32* %i, align 4, !dbg !4611
  %conv168 = sext i32 %112 to i64, !dbg !4611
  %mul169 = mul nsw i64 %111, %conv168, !dbg !4612
  %add170 = add nsw i64 %mul169, 7, !dbg !4613
  %113 = load i8*, i8** %src.addr, align 8, !dbg !4614
  %arrayidx171 = getelementptr inbounds i8, i8* %113, i64 %add170, !dbg !4614
  %114 = load i8, i8* %arrayidx171, align 1, !dbg !4614
  %conv172 = zext i8 %114 to i32, !dbg !4614
  %115 = load i64, i64* %stride.addr, align 8, !dbg !4615
  %116 = load i32, i32* %i, align 4, !dbg !4616
  %conv173 = sext i32 %116 to i64, !dbg !4616
  %mul174 = mul nsw i64 %115, %conv173, !dbg !4617
  %add175 = add nsw i64 %mul174, 7, !dbg !4618
  %117 = load i8*, i8** %dst.addr, align 8, !dbg !4619
  %arrayidx176 = getelementptr inbounds i8, i8* %117, i64 %add175, !dbg !4619
  %118 = load i8, i8* %arrayidx176, align 1, !dbg !4619
  %conv177 = zext i8 %118 to i32, !dbg !4619
  %sub178 = sub nsw i32 %conv172, %conv177, !dbg !4620
  %add179 = add nsw i32 %sub167, %sub178, !dbg !4621
  %119 = load i32, i32* %i, align 4, !dbg !4622
  %mul180 = mul nsw i32 8, %119, !dbg !4623
  %add181 = add nsw i32 %mul180, 6, !dbg !4624
  %idxprom182 = sext i32 %add181 to i64, !dbg !4625
  %arrayidx183 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom182, !dbg !4625
  store i32 %add179, i32* %arrayidx183, align 4, !dbg !4626
  %120 = load i64, i64* %stride.addr, align 8, !dbg !4627
  %121 = load i32, i32* %i, align 4, !dbg !4628
  %conv184 = sext i32 %121 to i64, !dbg !4628
  %mul185 = mul nsw i64 %120, %conv184, !dbg !4629
  %add186 = add nsw i64 %mul185, 6, !dbg !4630
  %122 = load i8*, i8** %src.addr, align 8, !dbg !4631
  %arrayidx187 = getelementptr inbounds i8, i8* %122, i64 %add186, !dbg !4631
  %123 = load i8, i8* %arrayidx187, align 1, !dbg !4631
  %conv188 = zext i8 %123 to i32, !dbg !4631
  %124 = load i64, i64* %stride.addr, align 8, !dbg !4632
  %125 = load i32, i32* %i, align 4, !dbg !4633
  %conv189 = sext i32 %125 to i64, !dbg !4633
  %mul190 = mul nsw i64 %124, %conv189, !dbg !4634
  %add191 = add nsw i64 %mul190, 6, !dbg !4635
  %126 = load i8*, i8** %dst.addr, align 8, !dbg !4636
  %arrayidx192 = getelementptr inbounds i8, i8* %126, i64 %add191, !dbg !4636
  %127 = load i8, i8* %arrayidx192, align 1, !dbg !4636
  %conv193 = zext i8 %127 to i32, !dbg !4636
  %sub194 = sub nsw i32 %conv188, %conv193, !dbg !4637
  %128 = load i64, i64* %stride.addr, align 8, !dbg !4638
  %129 = load i32, i32* %i, align 4, !dbg !4639
  %conv195 = sext i32 %129 to i64, !dbg !4639
  %mul196 = mul nsw i64 %128, %conv195, !dbg !4640
  %add197 = add nsw i64 %mul196, 7, !dbg !4641
  %130 = load i8*, i8** %src.addr, align 8, !dbg !4642
  %arrayidx198 = getelementptr inbounds i8, i8* %130, i64 %add197, !dbg !4642
  %131 = load i8, i8* %arrayidx198, align 1, !dbg !4642
  %conv199 = zext i8 %131 to i32, !dbg !4642
  %132 = load i64, i64* %stride.addr, align 8, !dbg !4643
  %133 = load i32, i32* %i, align 4, !dbg !4644
  %conv200 = sext i32 %133 to i64, !dbg !4644
  %mul201 = mul nsw i64 %132, %conv200, !dbg !4645
  %add202 = add nsw i64 %mul201, 7, !dbg !4646
  %134 = load i8*, i8** %dst.addr, align 8, !dbg !4647
  %arrayidx203 = getelementptr inbounds i8, i8* %134, i64 %add202, !dbg !4647
  %135 = load i8, i8* %arrayidx203, align 1, !dbg !4647
  %conv204 = zext i8 %135 to i32, !dbg !4647
  %sub205 = sub nsw i32 %conv199, %conv204, !dbg !4648
  %sub206 = sub nsw i32 %sub194, %sub205, !dbg !4649
  %136 = load i32, i32* %i, align 4, !dbg !4650
  %mul207 = mul nsw i32 8, %136, !dbg !4651
  %add208 = add nsw i32 %mul207, 7, !dbg !4652
  %idxprom209 = sext i32 %add208 to i64, !dbg !4653
  %arrayidx210 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom209, !dbg !4653
  store i32 %sub206, i32* %arrayidx210, align 4, !dbg !4654
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4655, metadata !2614), !dbg !4657
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4658, metadata !2614), !dbg !4659
  %137 = load i32, i32* %i, align 4, !dbg !4660
  %mul211 = mul nsw i32 8, %137, !dbg !4661
  %add212 = add nsw i32 %mul211, 0, !dbg !4662
  %idxprom213 = sext i32 %add212 to i64, !dbg !4663
  %arrayidx214 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom213, !dbg !4663
  %138 = load i32, i32* %arrayidx214, align 4, !dbg !4663
  store i32 %138, i32* %a, align 4, !dbg !4664
  %139 = load i32, i32* %i, align 4, !dbg !4665
  %mul215 = mul nsw i32 8, %139, !dbg !4666
  %add216 = add nsw i32 %mul215, 2, !dbg !4667
  %idxprom217 = sext i32 %add216 to i64, !dbg !4668
  %arrayidx218 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom217, !dbg !4668
  %140 = load i32, i32* %arrayidx218, align 4, !dbg !4668
  store i32 %140, i32* %b, align 4, !dbg !4669
  %141 = load i32, i32* %a, align 4, !dbg !4670
  %142 = load i32, i32* %b, align 4, !dbg !4671
  %add219 = add nsw i32 %141, %142, !dbg !4672
  %143 = load i32, i32* %i, align 4, !dbg !4673
  %mul220 = mul nsw i32 8, %143, !dbg !4674
  %add221 = add nsw i32 %mul220, 0, !dbg !4675
  %idxprom222 = sext i32 %add221 to i64, !dbg !4676
  %arrayidx223 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom222, !dbg !4676
  store i32 %add219, i32* %arrayidx223, align 4, !dbg !4677
  %144 = load i32, i32* %a, align 4, !dbg !4678
  %145 = load i32, i32* %b, align 4, !dbg !4679
  %sub224 = sub nsw i32 %144, %145, !dbg !4680
  %146 = load i32, i32* %i, align 4, !dbg !4681
  %mul225 = mul nsw i32 8, %146, !dbg !4682
  %add226 = add nsw i32 %mul225, 2, !dbg !4683
  %idxprom227 = sext i32 %add226 to i64, !dbg !4684
  %arrayidx228 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom227, !dbg !4684
  store i32 %sub224, i32* %arrayidx228, align 4, !dbg !4685
  call void @llvm.dbg.declare(metadata i32* %a229, metadata !4686, metadata !2614), !dbg !4688
  call void @llvm.dbg.declare(metadata i32* %b230, metadata !4689, metadata !2614), !dbg !4690
  %147 = load i32, i32* %i, align 4, !dbg !4691
  %mul231 = mul nsw i32 8, %147, !dbg !4692
  %add232 = add nsw i32 %mul231, 1, !dbg !4693
  %idxprom233 = sext i32 %add232 to i64, !dbg !4694
  %arrayidx234 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom233, !dbg !4694
  %148 = load i32, i32* %arrayidx234, align 4, !dbg !4694
  store i32 %148, i32* %a229, align 4, !dbg !4695
  %149 = load i32, i32* %i, align 4, !dbg !4696
  %mul235 = mul nsw i32 8, %149, !dbg !4697
  %add236 = add nsw i32 %mul235, 3, !dbg !4698
  %idxprom237 = sext i32 %add236 to i64, !dbg !4699
  %arrayidx238 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom237, !dbg !4699
  %150 = load i32, i32* %arrayidx238, align 4, !dbg !4699
  store i32 %150, i32* %b230, align 4, !dbg !4700
  %151 = load i32, i32* %a229, align 4, !dbg !4701
  %152 = load i32, i32* %b230, align 4, !dbg !4702
  %add239 = add nsw i32 %151, %152, !dbg !4703
  %153 = load i32, i32* %i, align 4, !dbg !4704
  %mul240 = mul nsw i32 8, %153, !dbg !4705
  %add241 = add nsw i32 %mul240, 1, !dbg !4706
  %idxprom242 = sext i32 %add241 to i64, !dbg !4707
  %arrayidx243 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom242, !dbg !4707
  store i32 %add239, i32* %arrayidx243, align 4, !dbg !4708
  %154 = load i32, i32* %a229, align 4, !dbg !4709
  %155 = load i32, i32* %b230, align 4, !dbg !4710
  %sub244 = sub nsw i32 %154, %155, !dbg !4711
  %156 = load i32, i32* %i, align 4, !dbg !4712
  %mul245 = mul nsw i32 8, %156, !dbg !4713
  %add246 = add nsw i32 %mul245, 3, !dbg !4714
  %idxprom247 = sext i32 %add246 to i64, !dbg !4715
  %arrayidx248 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom247, !dbg !4715
  store i32 %sub244, i32* %arrayidx248, align 4, !dbg !4716
  call void @llvm.dbg.declare(metadata i32* %a249, metadata !4717, metadata !2614), !dbg !4719
  call void @llvm.dbg.declare(metadata i32* %b250, metadata !4720, metadata !2614), !dbg !4721
  %157 = load i32, i32* %i, align 4, !dbg !4722
  %mul251 = mul nsw i32 8, %157, !dbg !4723
  %add252 = add nsw i32 %mul251, 4, !dbg !4724
  %idxprom253 = sext i32 %add252 to i64, !dbg !4725
  %arrayidx254 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom253, !dbg !4725
  %158 = load i32, i32* %arrayidx254, align 4, !dbg !4725
  store i32 %158, i32* %a249, align 4, !dbg !4726
  %159 = load i32, i32* %i, align 4, !dbg !4727
  %mul255 = mul nsw i32 8, %159, !dbg !4728
  %add256 = add nsw i32 %mul255, 6, !dbg !4729
  %idxprom257 = sext i32 %add256 to i64, !dbg !4730
  %arrayidx258 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom257, !dbg !4730
  %160 = load i32, i32* %arrayidx258, align 4, !dbg !4730
  store i32 %160, i32* %b250, align 4, !dbg !4731
  %161 = load i32, i32* %a249, align 4, !dbg !4732
  %162 = load i32, i32* %b250, align 4, !dbg !4733
  %add259 = add nsw i32 %161, %162, !dbg !4734
  %163 = load i32, i32* %i, align 4, !dbg !4735
  %mul260 = mul nsw i32 8, %163, !dbg !4736
  %add261 = add nsw i32 %mul260, 4, !dbg !4737
  %idxprom262 = sext i32 %add261 to i64, !dbg !4738
  %arrayidx263 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom262, !dbg !4738
  store i32 %add259, i32* %arrayidx263, align 4, !dbg !4739
  %164 = load i32, i32* %a249, align 4, !dbg !4740
  %165 = load i32, i32* %b250, align 4, !dbg !4741
  %sub264 = sub nsw i32 %164, %165, !dbg !4742
  %166 = load i32, i32* %i, align 4, !dbg !4743
  %mul265 = mul nsw i32 8, %166, !dbg !4744
  %add266 = add nsw i32 %mul265, 6, !dbg !4745
  %idxprom267 = sext i32 %add266 to i64, !dbg !4746
  %arrayidx268 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom267, !dbg !4746
  store i32 %sub264, i32* %arrayidx268, align 4, !dbg !4747
  call void @llvm.dbg.declare(metadata i32* %a269, metadata !4748, metadata !2614), !dbg !4750
  call void @llvm.dbg.declare(metadata i32* %b270, metadata !4751, metadata !2614), !dbg !4752
  %167 = load i32, i32* %i, align 4, !dbg !4753
  %mul271 = mul nsw i32 8, %167, !dbg !4754
  %add272 = add nsw i32 %mul271, 5, !dbg !4755
  %idxprom273 = sext i32 %add272 to i64, !dbg !4756
  %arrayidx274 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom273, !dbg !4756
  %168 = load i32, i32* %arrayidx274, align 4, !dbg !4756
  store i32 %168, i32* %a269, align 4, !dbg !4757
  %169 = load i32, i32* %i, align 4, !dbg !4758
  %mul275 = mul nsw i32 8, %169, !dbg !4759
  %add276 = add nsw i32 %mul275, 7, !dbg !4760
  %idxprom277 = sext i32 %add276 to i64, !dbg !4761
  %arrayidx278 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom277, !dbg !4761
  %170 = load i32, i32* %arrayidx278, align 4, !dbg !4761
  store i32 %170, i32* %b270, align 4, !dbg !4762
  %171 = load i32, i32* %a269, align 4, !dbg !4763
  %172 = load i32, i32* %b270, align 4, !dbg !4764
  %add279 = add nsw i32 %171, %172, !dbg !4765
  %173 = load i32, i32* %i, align 4, !dbg !4766
  %mul280 = mul nsw i32 8, %173, !dbg !4767
  %add281 = add nsw i32 %mul280, 5, !dbg !4768
  %idxprom282 = sext i32 %add281 to i64, !dbg !4769
  %arrayidx283 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom282, !dbg !4769
  store i32 %add279, i32* %arrayidx283, align 4, !dbg !4770
  %174 = load i32, i32* %a269, align 4, !dbg !4771
  %175 = load i32, i32* %b270, align 4, !dbg !4772
  %sub284 = sub nsw i32 %174, %175, !dbg !4773
  %176 = load i32, i32* %i, align 4, !dbg !4774
  %mul285 = mul nsw i32 8, %176, !dbg !4775
  %add286 = add nsw i32 %mul285, 7, !dbg !4776
  %idxprom287 = sext i32 %add286 to i64, !dbg !4777
  %arrayidx288 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom287, !dbg !4777
  store i32 %sub284, i32* %arrayidx288, align 4, !dbg !4778
  call void @llvm.dbg.declare(metadata i32* %a289, metadata !4779, metadata !2614), !dbg !4781
  call void @llvm.dbg.declare(metadata i32* %b290, metadata !4782, metadata !2614), !dbg !4783
  %177 = load i32, i32* %i, align 4, !dbg !4784
  %mul291 = mul nsw i32 8, %177, !dbg !4785
  %add292 = add nsw i32 %mul291, 0, !dbg !4786
  %idxprom293 = sext i32 %add292 to i64, !dbg !4787
  %arrayidx294 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom293, !dbg !4787
  %178 = load i32, i32* %arrayidx294, align 4, !dbg !4787
  store i32 %178, i32* %a289, align 4, !dbg !4788
  %179 = load i32, i32* %i, align 4, !dbg !4789
  %mul295 = mul nsw i32 8, %179, !dbg !4790
  %add296 = add nsw i32 %mul295, 4, !dbg !4791
  %idxprom297 = sext i32 %add296 to i64, !dbg !4792
  %arrayidx298 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom297, !dbg !4792
  %180 = load i32, i32* %arrayidx298, align 4, !dbg !4792
  store i32 %180, i32* %b290, align 4, !dbg !4793
  %181 = load i32, i32* %a289, align 4, !dbg !4794
  %182 = load i32, i32* %b290, align 4, !dbg !4795
  %add299 = add nsw i32 %181, %182, !dbg !4796
  %183 = load i32, i32* %i, align 4, !dbg !4797
  %mul300 = mul nsw i32 8, %183, !dbg !4798
  %add301 = add nsw i32 %mul300, 0, !dbg !4799
  %idxprom302 = sext i32 %add301 to i64, !dbg !4800
  %arrayidx303 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom302, !dbg !4800
  store i32 %add299, i32* %arrayidx303, align 4, !dbg !4801
  %184 = load i32, i32* %a289, align 4, !dbg !4802
  %185 = load i32, i32* %b290, align 4, !dbg !4803
  %sub304 = sub nsw i32 %184, %185, !dbg !4804
  %186 = load i32, i32* %i, align 4, !dbg !4805
  %mul305 = mul nsw i32 8, %186, !dbg !4806
  %add306 = add nsw i32 %mul305, 4, !dbg !4807
  %idxprom307 = sext i32 %add306 to i64, !dbg !4808
  %arrayidx308 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom307, !dbg !4808
  store i32 %sub304, i32* %arrayidx308, align 4, !dbg !4809
  call void @llvm.dbg.declare(metadata i32* %a309, metadata !4810, metadata !2614), !dbg !4812
  call void @llvm.dbg.declare(metadata i32* %b310, metadata !4813, metadata !2614), !dbg !4814
  %187 = load i32, i32* %i, align 4, !dbg !4815
  %mul311 = mul nsw i32 8, %187, !dbg !4816
  %add312 = add nsw i32 %mul311, 1, !dbg !4817
  %idxprom313 = sext i32 %add312 to i64, !dbg !4818
  %arrayidx314 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom313, !dbg !4818
  %188 = load i32, i32* %arrayidx314, align 4, !dbg !4818
  store i32 %188, i32* %a309, align 4, !dbg !4819
  %189 = load i32, i32* %i, align 4, !dbg !4820
  %mul315 = mul nsw i32 8, %189, !dbg !4821
  %add316 = add nsw i32 %mul315, 5, !dbg !4822
  %idxprom317 = sext i32 %add316 to i64, !dbg !4823
  %arrayidx318 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom317, !dbg !4823
  %190 = load i32, i32* %arrayidx318, align 4, !dbg !4823
  store i32 %190, i32* %b310, align 4, !dbg !4824
  %191 = load i32, i32* %a309, align 4, !dbg !4825
  %192 = load i32, i32* %b310, align 4, !dbg !4826
  %add319 = add nsw i32 %191, %192, !dbg !4827
  %193 = load i32, i32* %i, align 4, !dbg !4828
  %mul320 = mul nsw i32 8, %193, !dbg !4829
  %add321 = add nsw i32 %mul320, 1, !dbg !4830
  %idxprom322 = sext i32 %add321 to i64, !dbg !4831
  %arrayidx323 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom322, !dbg !4831
  store i32 %add319, i32* %arrayidx323, align 4, !dbg !4832
  %194 = load i32, i32* %a309, align 4, !dbg !4833
  %195 = load i32, i32* %b310, align 4, !dbg !4834
  %sub324 = sub nsw i32 %194, %195, !dbg !4835
  %196 = load i32, i32* %i, align 4, !dbg !4836
  %mul325 = mul nsw i32 8, %196, !dbg !4837
  %add326 = add nsw i32 %mul325, 5, !dbg !4838
  %idxprom327 = sext i32 %add326 to i64, !dbg !4839
  %arrayidx328 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom327, !dbg !4839
  store i32 %sub324, i32* %arrayidx328, align 4, !dbg !4840
  call void @llvm.dbg.declare(metadata i32* %a329, metadata !4841, metadata !2614), !dbg !4843
  call void @llvm.dbg.declare(metadata i32* %b330, metadata !4844, metadata !2614), !dbg !4845
  %197 = load i32, i32* %i, align 4, !dbg !4846
  %mul331 = mul nsw i32 8, %197, !dbg !4847
  %add332 = add nsw i32 %mul331, 2, !dbg !4848
  %idxprom333 = sext i32 %add332 to i64, !dbg !4849
  %arrayidx334 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom333, !dbg !4849
  %198 = load i32, i32* %arrayidx334, align 4, !dbg !4849
  store i32 %198, i32* %a329, align 4, !dbg !4850
  %199 = load i32, i32* %i, align 4, !dbg !4851
  %mul335 = mul nsw i32 8, %199, !dbg !4852
  %add336 = add nsw i32 %mul335, 6, !dbg !4853
  %idxprom337 = sext i32 %add336 to i64, !dbg !4854
  %arrayidx338 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom337, !dbg !4854
  %200 = load i32, i32* %arrayidx338, align 4, !dbg !4854
  store i32 %200, i32* %b330, align 4, !dbg !4855
  %201 = load i32, i32* %a329, align 4, !dbg !4856
  %202 = load i32, i32* %b330, align 4, !dbg !4857
  %add339 = add nsw i32 %201, %202, !dbg !4858
  %203 = load i32, i32* %i, align 4, !dbg !4859
  %mul340 = mul nsw i32 8, %203, !dbg !4860
  %add341 = add nsw i32 %mul340, 2, !dbg !4861
  %idxprom342 = sext i32 %add341 to i64, !dbg !4862
  %arrayidx343 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom342, !dbg !4862
  store i32 %add339, i32* %arrayidx343, align 4, !dbg !4863
  %204 = load i32, i32* %a329, align 4, !dbg !4864
  %205 = load i32, i32* %b330, align 4, !dbg !4865
  %sub344 = sub nsw i32 %204, %205, !dbg !4866
  %206 = load i32, i32* %i, align 4, !dbg !4867
  %mul345 = mul nsw i32 8, %206, !dbg !4868
  %add346 = add nsw i32 %mul345, 6, !dbg !4869
  %idxprom347 = sext i32 %add346 to i64, !dbg !4870
  %arrayidx348 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom347, !dbg !4870
  store i32 %sub344, i32* %arrayidx348, align 4, !dbg !4871
  call void @llvm.dbg.declare(metadata i32* %a349, metadata !4872, metadata !2614), !dbg !4874
  call void @llvm.dbg.declare(metadata i32* %b350, metadata !4875, metadata !2614), !dbg !4876
  %207 = load i32, i32* %i, align 4, !dbg !4877
  %mul351 = mul nsw i32 8, %207, !dbg !4878
  %add352 = add nsw i32 %mul351, 3, !dbg !4879
  %idxprom353 = sext i32 %add352 to i64, !dbg !4880
  %arrayidx354 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom353, !dbg !4880
  %208 = load i32, i32* %arrayidx354, align 4, !dbg !4880
  store i32 %208, i32* %a349, align 4, !dbg !4881
  %209 = load i32, i32* %i, align 4, !dbg !4882
  %mul355 = mul nsw i32 8, %209, !dbg !4883
  %add356 = add nsw i32 %mul355, 7, !dbg !4884
  %idxprom357 = sext i32 %add356 to i64, !dbg !4885
  %arrayidx358 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom357, !dbg !4885
  %210 = load i32, i32* %arrayidx358, align 4, !dbg !4885
  store i32 %210, i32* %b350, align 4, !dbg !4886
  %211 = load i32, i32* %a349, align 4, !dbg !4887
  %212 = load i32, i32* %b350, align 4, !dbg !4888
  %add359 = add nsw i32 %211, %212, !dbg !4889
  %213 = load i32, i32* %i, align 4, !dbg !4890
  %mul360 = mul nsw i32 8, %213, !dbg !4891
  %add361 = add nsw i32 %mul360, 3, !dbg !4892
  %idxprom362 = sext i32 %add361 to i64, !dbg !4893
  %arrayidx363 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom362, !dbg !4893
  store i32 %add359, i32* %arrayidx363, align 4, !dbg !4894
  %214 = load i32, i32* %a349, align 4, !dbg !4895
  %215 = load i32, i32* %b350, align 4, !dbg !4896
  %sub364 = sub nsw i32 %214, %215, !dbg !4897
  %216 = load i32, i32* %i, align 4, !dbg !4898
  %mul365 = mul nsw i32 8, %216, !dbg !4899
  %add366 = add nsw i32 %mul365, 7, !dbg !4900
  %idxprom367 = sext i32 %add366 to i64, !dbg !4901
  %arrayidx368 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom367, !dbg !4901
  store i32 %sub364, i32* %arrayidx368, align 4, !dbg !4902
  br label %for.inc, !dbg !4903

for.inc:                                          ; preds = %for.body
  %217 = load i32, i32* %i, align 4, !dbg !4904
  %inc = add nsw i32 %217, 1, !dbg !4904
  store i32 %inc, i32* %i, align 4, !dbg !4904
  br label %for.cond, !dbg !4906, !llvm.loop !4907

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4909
  br label %for.cond369, !dbg !4911

for.cond369:                                      ; preds = %for.inc729, %for.end
  %218 = load i32, i32* %i, align 4, !dbg !4912
  %cmp370 = icmp slt i32 %218, 8, !dbg !4915
  br i1 %cmp370, label %for.body372, label %for.end731, !dbg !4916

for.body372:                                      ; preds = %for.cond369
  call void @llvm.dbg.declare(metadata i32* %a373, metadata !4917, metadata !2614), !dbg !4920
  call void @llvm.dbg.declare(metadata i32* %b374, metadata !4921, metadata !2614), !dbg !4922
  %219 = load i32, i32* %i, align 4, !dbg !4923
  %add375 = add nsw i32 0, %219, !dbg !4924
  %idxprom376 = sext i32 %add375 to i64, !dbg !4925
  %arrayidx377 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom376, !dbg !4925
  %220 = load i32, i32* %arrayidx377, align 4, !dbg !4925
  store i32 %220, i32* %a373, align 4, !dbg !4926
  %221 = load i32, i32* %i, align 4, !dbg !4927
  %add378 = add nsw i32 8, %221, !dbg !4928
  %idxprom379 = sext i32 %add378 to i64, !dbg !4929
  %arrayidx380 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom379, !dbg !4929
  %222 = load i32, i32* %arrayidx380, align 4, !dbg !4929
  store i32 %222, i32* %b374, align 4, !dbg !4930
  %223 = load i32, i32* %a373, align 4, !dbg !4931
  %224 = load i32, i32* %b374, align 4, !dbg !4932
  %add381 = add nsw i32 %223, %224, !dbg !4933
  %225 = load i32, i32* %i, align 4, !dbg !4934
  %add382 = add nsw i32 0, %225, !dbg !4935
  %idxprom383 = sext i32 %add382 to i64, !dbg !4936
  %arrayidx384 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom383, !dbg !4936
  store i32 %add381, i32* %arrayidx384, align 4, !dbg !4937
  %226 = load i32, i32* %a373, align 4, !dbg !4938
  %227 = load i32, i32* %b374, align 4, !dbg !4939
  %sub385 = sub nsw i32 %226, %227, !dbg !4940
  %228 = load i32, i32* %i, align 4, !dbg !4941
  %add386 = add nsw i32 8, %228, !dbg !4942
  %idxprom387 = sext i32 %add386 to i64, !dbg !4943
  %arrayidx388 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom387, !dbg !4943
  store i32 %sub385, i32* %arrayidx388, align 4, !dbg !4944
  call void @llvm.dbg.declare(metadata i32* %a389, metadata !4945, metadata !2614), !dbg !4947
  call void @llvm.dbg.declare(metadata i32* %b390, metadata !4948, metadata !2614), !dbg !4949
  %229 = load i32, i32* %i, align 4, !dbg !4950
  %add391 = add nsw i32 16, %229, !dbg !4951
  %idxprom392 = sext i32 %add391 to i64, !dbg !4952
  %arrayidx393 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom392, !dbg !4952
  %230 = load i32, i32* %arrayidx393, align 4, !dbg !4952
  store i32 %230, i32* %a389, align 4, !dbg !4953
  %231 = load i32, i32* %i, align 4, !dbg !4954
  %add394 = add nsw i32 24, %231, !dbg !4955
  %idxprom395 = sext i32 %add394 to i64, !dbg !4956
  %arrayidx396 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom395, !dbg !4956
  %232 = load i32, i32* %arrayidx396, align 4, !dbg !4956
  store i32 %232, i32* %b390, align 4, !dbg !4957
  %233 = load i32, i32* %a389, align 4, !dbg !4958
  %234 = load i32, i32* %b390, align 4, !dbg !4959
  %add397 = add nsw i32 %233, %234, !dbg !4960
  %235 = load i32, i32* %i, align 4, !dbg !4961
  %add398 = add nsw i32 16, %235, !dbg !4962
  %idxprom399 = sext i32 %add398 to i64, !dbg !4963
  %arrayidx400 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom399, !dbg !4963
  store i32 %add397, i32* %arrayidx400, align 4, !dbg !4964
  %236 = load i32, i32* %a389, align 4, !dbg !4965
  %237 = load i32, i32* %b390, align 4, !dbg !4966
  %sub401 = sub nsw i32 %236, %237, !dbg !4967
  %238 = load i32, i32* %i, align 4, !dbg !4968
  %add402 = add nsw i32 24, %238, !dbg !4969
  %idxprom403 = sext i32 %add402 to i64, !dbg !4970
  %arrayidx404 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom403, !dbg !4970
  store i32 %sub401, i32* %arrayidx404, align 4, !dbg !4971
  call void @llvm.dbg.declare(metadata i32* %a405, metadata !4972, metadata !2614), !dbg !4974
  call void @llvm.dbg.declare(metadata i32* %b406, metadata !4975, metadata !2614), !dbg !4976
  %239 = load i32, i32* %i, align 4, !dbg !4977
  %add407 = add nsw i32 32, %239, !dbg !4978
  %idxprom408 = sext i32 %add407 to i64, !dbg !4979
  %arrayidx409 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom408, !dbg !4979
  %240 = load i32, i32* %arrayidx409, align 4, !dbg !4979
  store i32 %240, i32* %a405, align 4, !dbg !4980
  %241 = load i32, i32* %i, align 4, !dbg !4981
  %add410 = add nsw i32 40, %241, !dbg !4982
  %idxprom411 = sext i32 %add410 to i64, !dbg !4983
  %arrayidx412 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom411, !dbg !4983
  %242 = load i32, i32* %arrayidx412, align 4, !dbg !4983
  store i32 %242, i32* %b406, align 4, !dbg !4984
  %243 = load i32, i32* %a405, align 4, !dbg !4985
  %244 = load i32, i32* %b406, align 4, !dbg !4986
  %add413 = add nsw i32 %243, %244, !dbg !4987
  %245 = load i32, i32* %i, align 4, !dbg !4988
  %add414 = add nsw i32 32, %245, !dbg !4989
  %idxprom415 = sext i32 %add414 to i64, !dbg !4990
  %arrayidx416 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom415, !dbg !4990
  store i32 %add413, i32* %arrayidx416, align 4, !dbg !4991
  %246 = load i32, i32* %a405, align 4, !dbg !4992
  %247 = load i32, i32* %b406, align 4, !dbg !4993
  %sub417 = sub nsw i32 %246, %247, !dbg !4994
  %248 = load i32, i32* %i, align 4, !dbg !4995
  %add418 = add nsw i32 40, %248, !dbg !4996
  %idxprom419 = sext i32 %add418 to i64, !dbg !4997
  %arrayidx420 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom419, !dbg !4997
  store i32 %sub417, i32* %arrayidx420, align 4, !dbg !4998
  call void @llvm.dbg.declare(metadata i32* %a421, metadata !4999, metadata !2614), !dbg !5001
  call void @llvm.dbg.declare(metadata i32* %b422, metadata !5002, metadata !2614), !dbg !5003
  %249 = load i32, i32* %i, align 4, !dbg !5004
  %add423 = add nsw i32 48, %249, !dbg !5005
  %idxprom424 = sext i32 %add423 to i64, !dbg !5006
  %arrayidx425 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom424, !dbg !5006
  %250 = load i32, i32* %arrayidx425, align 4, !dbg !5006
  store i32 %250, i32* %a421, align 4, !dbg !5007
  %251 = load i32, i32* %i, align 4, !dbg !5008
  %add426 = add nsw i32 56, %251, !dbg !5009
  %idxprom427 = sext i32 %add426 to i64, !dbg !5010
  %arrayidx428 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom427, !dbg !5010
  %252 = load i32, i32* %arrayidx428, align 4, !dbg !5010
  store i32 %252, i32* %b422, align 4, !dbg !5011
  %253 = load i32, i32* %a421, align 4, !dbg !5012
  %254 = load i32, i32* %b422, align 4, !dbg !5013
  %add429 = add nsw i32 %253, %254, !dbg !5014
  %255 = load i32, i32* %i, align 4, !dbg !5015
  %add430 = add nsw i32 48, %255, !dbg !5016
  %idxprom431 = sext i32 %add430 to i64, !dbg !5017
  %arrayidx432 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom431, !dbg !5017
  store i32 %add429, i32* %arrayidx432, align 4, !dbg !5018
  %256 = load i32, i32* %a421, align 4, !dbg !5019
  %257 = load i32, i32* %b422, align 4, !dbg !5020
  %sub433 = sub nsw i32 %256, %257, !dbg !5021
  %258 = load i32, i32* %i, align 4, !dbg !5022
  %add434 = add nsw i32 56, %258, !dbg !5023
  %idxprom435 = sext i32 %add434 to i64, !dbg !5024
  %arrayidx436 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom435, !dbg !5024
  store i32 %sub433, i32* %arrayidx436, align 4, !dbg !5025
  call void @llvm.dbg.declare(metadata i32* %a437, metadata !5026, metadata !2614), !dbg !5028
  call void @llvm.dbg.declare(metadata i32* %b438, metadata !5029, metadata !2614), !dbg !5030
  %259 = load i32, i32* %i, align 4, !dbg !5031
  %add439 = add nsw i32 0, %259, !dbg !5032
  %idxprom440 = sext i32 %add439 to i64, !dbg !5033
  %arrayidx441 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom440, !dbg !5033
  %260 = load i32, i32* %arrayidx441, align 4, !dbg !5033
  store i32 %260, i32* %a437, align 4, !dbg !5034
  %261 = load i32, i32* %i, align 4, !dbg !5035
  %add442 = add nsw i32 16, %261, !dbg !5036
  %idxprom443 = sext i32 %add442 to i64, !dbg !5037
  %arrayidx444 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom443, !dbg !5037
  %262 = load i32, i32* %arrayidx444, align 4, !dbg !5037
  store i32 %262, i32* %b438, align 4, !dbg !5038
  %263 = load i32, i32* %a437, align 4, !dbg !5039
  %264 = load i32, i32* %b438, align 4, !dbg !5040
  %add445 = add nsw i32 %263, %264, !dbg !5041
  %265 = load i32, i32* %i, align 4, !dbg !5042
  %add446 = add nsw i32 0, %265, !dbg !5043
  %idxprom447 = sext i32 %add446 to i64, !dbg !5044
  %arrayidx448 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom447, !dbg !5044
  store i32 %add445, i32* %arrayidx448, align 4, !dbg !5045
  %266 = load i32, i32* %a437, align 4, !dbg !5046
  %267 = load i32, i32* %b438, align 4, !dbg !5047
  %sub449 = sub nsw i32 %266, %267, !dbg !5048
  %268 = load i32, i32* %i, align 4, !dbg !5049
  %add450 = add nsw i32 16, %268, !dbg !5050
  %idxprom451 = sext i32 %add450 to i64, !dbg !5051
  %arrayidx452 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom451, !dbg !5051
  store i32 %sub449, i32* %arrayidx452, align 4, !dbg !5052
  call void @llvm.dbg.declare(metadata i32* %a453, metadata !5053, metadata !2614), !dbg !5055
  call void @llvm.dbg.declare(metadata i32* %b454, metadata !5056, metadata !2614), !dbg !5057
  %269 = load i32, i32* %i, align 4, !dbg !5058
  %add455 = add nsw i32 8, %269, !dbg !5059
  %idxprom456 = sext i32 %add455 to i64, !dbg !5060
  %arrayidx457 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom456, !dbg !5060
  %270 = load i32, i32* %arrayidx457, align 4, !dbg !5060
  store i32 %270, i32* %a453, align 4, !dbg !5061
  %271 = load i32, i32* %i, align 4, !dbg !5062
  %add458 = add nsw i32 24, %271, !dbg !5063
  %idxprom459 = sext i32 %add458 to i64, !dbg !5064
  %arrayidx460 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom459, !dbg !5064
  %272 = load i32, i32* %arrayidx460, align 4, !dbg !5064
  store i32 %272, i32* %b454, align 4, !dbg !5065
  %273 = load i32, i32* %a453, align 4, !dbg !5066
  %274 = load i32, i32* %b454, align 4, !dbg !5067
  %add461 = add nsw i32 %273, %274, !dbg !5068
  %275 = load i32, i32* %i, align 4, !dbg !5069
  %add462 = add nsw i32 8, %275, !dbg !5070
  %idxprom463 = sext i32 %add462 to i64, !dbg !5071
  %arrayidx464 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom463, !dbg !5071
  store i32 %add461, i32* %arrayidx464, align 4, !dbg !5072
  %276 = load i32, i32* %a453, align 4, !dbg !5073
  %277 = load i32, i32* %b454, align 4, !dbg !5074
  %sub465 = sub nsw i32 %276, %277, !dbg !5075
  %278 = load i32, i32* %i, align 4, !dbg !5076
  %add466 = add nsw i32 24, %278, !dbg !5077
  %idxprom467 = sext i32 %add466 to i64, !dbg !5078
  %arrayidx468 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom467, !dbg !5078
  store i32 %sub465, i32* %arrayidx468, align 4, !dbg !5079
  call void @llvm.dbg.declare(metadata i32* %a469, metadata !5080, metadata !2614), !dbg !5082
  call void @llvm.dbg.declare(metadata i32* %b470, metadata !5083, metadata !2614), !dbg !5084
  %279 = load i32, i32* %i, align 4, !dbg !5085
  %add471 = add nsw i32 32, %279, !dbg !5086
  %idxprom472 = sext i32 %add471 to i64, !dbg !5087
  %arrayidx473 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom472, !dbg !5087
  %280 = load i32, i32* %arrayidx473, align 4, !dbg !5087
  store i32 %280, i32* %a469, align 4, !dbg !5088
  %281 = load i32, i32* %i, align 4, !dbg !5089
  %add474 = add nsw i32 48, %281, !dbg !5090
  %idxprom475 = sext i32 %add474 to i64, !dbg !5091
  %arrayidx476 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom475, !dbg !5091
  %282 = load i32, i32* %arrayidx476, align 4, !dbg !5091
  store i32 %282, i32* %b470, align 4, !dbg !5092
  %283 = load i32, i32* %a469, align 4, !dbg !5093
  %284 = load i32, i32* %b470, align 4, !dbg !5094
  %add477 = add nsw i32 %283, %284, !dbg !5095
  %285 = load i32, i32* %i, align 4, !dbg !5096
  %add478 = add nsw i32 32, %285, !dbg !5097
  %idxprom479 = sext i32 %add478 to i64, !dbg !5098
  %arrayidx480 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom479, !dbg !5098
  store i32 %add477, i32* %arrayidx480, align 4, !dbg !5099
  %286 = load i32, i32* %a469, align 4, !dbg !5100
  %287 = load i32, i32* %b470, align 4, !dbg !5101
  %sub481 = sub nsw i32 %286, %287, !dbg !5102
  %288 = load i32, i32* %i, align 4, !dbg !5103
  %add482 = add nsw i32 48, %288, !dbg !5104
  %idxprom483 = sext i32 %add482 to i64, !dbg !5105
  %arrayidx484 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom483, !dbg !5105
  store i32 %sub481, i32* %arrayidx484, align 4, !dbg !5106
  call void @llvm.dbg.declare(metadata i32* %a485, metadata !5107, metadata !2614), !dbg !5109
  call void @llvm.dbg.declare(metadata i32* %b486, metadata !5110, metadata !2614), !dbg !5111
  %289 = load i32, i32* %i, align 4, !dbg !5112
  %add487 = add nsw i32 40, %289, !dbg !5113
  %idxprom488 = sext i32 %add487 to i64, !dbg !5114
  %arrayidx489 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom488, !dbg !5114
  %290 = load i32, i32* %arrayidx489, align 4, !dbg !5114
  store i32 %290, i32* %a485, align 4, !dbg !5115
  %291 = load i32, i32* %i, align 4, !dbg !5116
  %add490 = add nsw i32 56, %291, !dbg !5117
  %idxprom491 = sext i32 %add490 to i64, !dbg !5118
  %arrayidx492 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom491, !dbg !5118
  %292 = load i32, i32* %arrayidx492, align 4, !dbg !5118
  store i32 %292, i32* %b486, align 4, !dbg !5119
  %293 = load i32, i32* %a485, align 4, !dbg !5120
  %294 = load i32, i32* %b486, align 4, !dbg !5121
  %add493 = add nsw i32 %293, %294, !dbg !5122
  %295 = load i32, i32* %i, align 4, !dbg !5123
  %add494 = add nsw i32 40, %295, !dbg !5124
  %idxprom495 = sext i32 %add494 to i64, !dbg !5125
  %arrayidx496 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom495, !dbg !5125
  store i32 %add493, i32* %arrayidx496, align 4, !dbg !5126
  %296 = load i32, i32* %a485, align 4, !dbg !5127
  %297 = load i32, i32* %b486, align 4, !dbg !5128
  %sub497 = sub nsw i32 %296, %297, !dbg !5129
  %298 = load i32, i32* %i, align 4, !dbg !5130
  %add498 = add nsw i32 56, %298, !dbg !5131
  %idxprom499 = sext i32 %add498 to i64, !dbg !5132
  %arrayidx500 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom499, !dbg !5132
  store i32 %sub497, i32* %arrayidx500, align 4, !dbg !5133
  %299 = load i32, i32* %i, align 4, !dbg !5134
  %add501 = add nsw i32 0, %299, !dbg !5135
  %idxprom502 = sext i32 %add501 to i64, !dbg !5136
  %arrayidx503 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom502, !dbg !5136
  %300 = load i32, i32* %arrayidx503, align 4, !dbg !5136
  %301 = load i32, i32* %i, align 4, !dbg !5137
  %add504 = add nsw i32 32, %301, !dbg !5138
  %idxprom505 = sext i32 %add504 to i64, !dbg !5139
  %arrayidx506 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom505, !dbg !5139
  %302 = load i32, i32* %arrayidx506, align 4, !dbg !5139
  %add507 = add nsw i32 %300, %302, !dbg !5140
  %cmp508 = icmp sge i32 %add507, 0, !dbg !5141
  br i1 %cmp508, label %cond.true, label %cond.false, !dbg !5142

cond.true:                                        ; preds = %for.body372
  %303 = load i32, i32* %i, align 4, !dbg !5143
  %add510 = add nsw i32 0, %303, !dbg !5145
  %idxprom511 = sext i32 %add510 to i64, !dbg !5146
  %arrayidx512 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom511, !dbg !5146
  %304 = load i32, i32* %arrayidx512, align 4, !dbg !5146
  %305 = load i32, i32* %i, align 4, !dbg !5147
  %add513 = add nsw i32 32, %305, !dbg !5148
  %idxprom514 = sext i32 %add513 to i64, !dbg !5149
  %arrayidx515 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom514, !dbg !5149
  %306 = load i32, i32* %arrayidx515, align 4, !dbg !5149
  %add516 = add nsw i32 %304, %306, !dbg !5150
  br label %cond.end, !dbg !5151

cond.false:                                       ; preds = %for.body372
  %307 = load i32, i32* %i, align 4, !dbg !5152
  %add517 = add nsw i32 0, %307, !dbg !5154
  %idxprom518 = sext i32 %add517 to i64, !dbg !5155
  %arrayidx519 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom518, !dbg !5155
  %308 = load i32, i32* %arrayidx519, align 4, !dbg !5155
  %309 = load i32, i32* %i, align 4, !dbg !5156
  %add520 = add nsw i32 32, %309, !dbg !5157
  %idxprom521 = sext i32 %add520 to i64, !dbg !5158
  %arrayidx522 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom521, !dbg !5158
  %310 = load i32, i32* %arrayidx522, align 4, !dbg !5158
  %add523 = add nsw i32 %308, %310, !dbg !5159
  %sub524 = sub nsw i32 0, %add523, !dbg !5160
  br label %cond.end, !dbg !5161

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add516, %cond.true ], [ %sub524, %cond.false ], !dbg !5162
  %311 = load i32, i32* %i, align 4, !dbg !5164
  %add525 = add nsw i32 0, %311, !dbg !5165
  %idxprom526 = sext i32 %add525 to i64, !dbg !5166
  %arrayidx527 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom526, !dbg !5166
  %312 = load i32, i32* %arrayidx527, align 4, !dbg !5166
  %313 = load i32, i32* %i, align 4, !dbg !5167
  %add528 = add nsw i32 32, %313, !dbg !5168
  %idxprom529 = sext i32 %add528 to i64, !dbg !5169
  %arrayidx530 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom529, !dbg !5169
  %314 = load i32, i32* %arrayidx530, align 4, !dbg !5169
  %sub531 = sub nsw i32 %312, %314, !dbg !5170
  %cmp532 = icmp sge i32 %sub531, 0, !dbg !5171
  br i1 %cmp532, label %cond.true534, label %cond.false542, !dbg !5172

cond.true534:                                     ; preds = %cond.end
  %315 = load i32, i32* %i, align 4, !dbg !5173
  %add535 = add nsw i32 0, %315, !dbg !5175
  %idxprom536 = sext i32 %add535 to i64, !dbg !5176
  %arrayidx537 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom536, !dbg !5176
  %316 = load i32, i32* %arrayidx537, align 4, !dbg !5176
  %317 = load i32, i32* %i, align 4, !dbg !5177
  %add538 = add nsw i32 32, %317, !dbg !5178
  %idxprom539 = sext i32 %add538 to i64, !dbg !5179
  %arrayidx540 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom539, !dbg !5179
  %318 = load i32, i32* %arrayidx540, align 4, !dbg !5179
  %sub541 = sub nsw i32 %316, %318, !dbg !5180
  br label %cond.end551, !dbg !5181

cond.false542:                                    ; preds = %cond.end
  %319 = load i32, i32* %i, align 4, !dbg !5182
  %add543 = add nsw i32 0, %319, !dbg !5184
  %idxprom544 = sext i32 %add543 to i64, !dbg !5185
  %arrayidx545 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom544, !dbg !5185
  %320 = load i32, i32* %arrayidx545, align 4, !dbg !5185
  %321 = load i32, i32* %i, align 4, !dbg !5186
  %add546 = add nsw i32 32, %321, !dbg !5187
  %idxprom547 = sext i32 %add546 to i64, !dbg !5188
  %arrayidx548 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom547, !dbg !5188
  %322 = load i32, i32* %arrayidx548, align 4, !dbg !5188
  %sub549 = sub nsw i32 %320, %322, !dbg !5189
  %sub550 = sub nsw i32 0, %sub549, !dbg !5190
  br label %cond.end551, !dbg !5191

cond.end551:                                      ; preds = %cond.false542, %cond.true534
  %cond552 = phi i32 [ %sub541, %cond.true534 ], [ %sub550, %cond.false542 ], !dbg !5192
  %add553 = add nsw i32 %cond, %cond552, !dbg !5194
  %323 = load i32, i32* %i, align 4, !dbg !5195
  %add554 = add nsw i32 8, %323, !dbg !5196
  %idxprom555 = sext i32 %add554 to i64, !dbg !5197
  %arrayidx556 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom555, !dbg !5197
  %324 = load i32, i32* %arrayidx556, align 4, !dbg !5197
  %325 = load i32, i32* %i, align 4, !dbg !5198
  %add557 = add nsw i32 40, %325, !dbg !5199
  %idxprom558 = sext i32 %add557 to i64, !dbg !5200
  %arrayidx559 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom558, !dbg !5200
  %326 = load i32, i32* %arrayidx559, align 4, !dbg !5200
  %add560 = add nsw i32 %324, %326, !dbg !5201
  %cmp561 = icmp sge i32 %add560, 0, !dbg !5202
  br i1 %cmp561, label %cond.true563, label %cond.false571, !dbg !5203

cond.true563:                                     ; preds = %cond.end551
  %327 = load i32, i32* %i, align 4, !dbg !5204
  %add564 = add nsw i32 8, %327, !dbg !5205
  %idxprom565 = sext i32 %add564 to i64, !dbg !5206
  %arrayidx566 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom565, !dbg !5206
  %328 = load i32, i32* %arrayidx566, align 4, !dbg !5206
  %329 = load i32, i32* %i, align 4, !dbg !5207
  %add567 = add nsw i32 40, %329, !dbg !5208
  %idxprom568 = sext i32 %add567 to i64, !dbg !5209
  %arrayidx569 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom568, !dbg !5209
  %330 = load i32, i32* %arrayidx569, align 4, !dbg !5209
  %add570 = add nsw i32 %328, %330, !dbg !5210
  br label %cond.end580, !dbg !5211

cond.false571:                                    ; preds = %cond.end551
  %331 = load i32, i32* %i, align 4, !dbg !5212
  %add572 = add nsw i32 8, %331, !dbg !5213
  %idxprom573 = sext i32 %add572 to i64, !dbg !5214
  %arrayidx574 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom573, !dbg !5214
  %332 = load i32, i32* %arrayidx574, align 4, !dbg !5214
  %333 = load i32, i32* %i, align 4, !dbg !5215
  %add575 = add nsw i32 40, %333, !dbg !5216
  %idxprom576 = sext i32 %add575 to i64, !dbg !5217
  %arrayidx577 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom576, !dbg !5217
  %334 = load i32, i32* %arrayidx577, align 4, !dbg !5217
  %add578 = add nsw i32 %332, %334, !dbg !5218
  %sub579 = sub nsw i32 0, %add578, !dbg !5219
  br label %cond.end580, !dbg !5220

cond.end580:                                      ; preds = %cond.false571, %cond.true563
  %cond581 = phi i32 [ %add570, %cond.true563 ], [ %sub579, %cond.false571 ], !dbg !5221
  %335 = load i32, i32* %i, align 4, !dbg !5222
  %add582 = add nsw i32 8, %335, !dbg !5223
  %idxprom583 = sext i32 %add582 to i64, !dbg !5224
  %arrayidx584 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom583, !dbg !5224
  %336 = load i32, i32* %arrayidx584, align 4, !dbg !5224
  %337 = load i32, i32* %i, align 4, !dbg !5225
  %add585 = add nsw i32 40, %337, !dbg !5226
  %idxprom586 = sext i32 %add585 to i64, !dbg !5227
  %arrayidx587 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom586, !dbg !5227
  %338 = load i32, i32* %arrayidx587, align 4, !dbg !5227
  %sub588 = sub nsw i32 %336, %338, !dbg !5228
  %cmp589 = icmp sge i32 %sub588, 0, !dbg !5229
  br i1 %cmp589, label %cond.true591, label %cond.false599, !dbg !5230

cond.true591:                                     ; preds = %cond.end580
  %339 = load i32, i32* %i, align 4, !dbg !5231
  %add592 = add nsw i32 8, %339, !dbg !5232
  %idxprom593 = sext i32 %add592 to i64, !dbg !5233
  %arrayidx594 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom593, !dbg !5233
  %340 = load i32, i32* %arrayidx594, align 4, !dbg !5233
  %341 = load i32, i32* %i, align 4, !dbg !5234
  %add595 = add nsw i32 40, %341, !dbg !5235
  %idxprom596 = sext i32 %add595 to i64, !dbg !5236
  %arrayidx597 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom596, !dbg !5236
  %342 = load i32, i32* %arrayidx597, align 4, !dbg !5236
  %sub598 = sub nsw i32 %340, %342, !dbg !5237
  br label %cond.end608, !dbg !5238

cond.false599:                                    ; preds = %cond.end580
  %343 = load i32, i32* %i, align 4, !dbg !5239
  %add600 = add nsw i32 8, %343, !dbg !5240
  %idxprom601 = sext i32 %add600 to i64, !dbg !5241
  %arrayidx602 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom601, !dbg !5241
  %344 = load i32, i32* %arrayidx602, align 4, !dbg !5241
  %345 = load i32, i32* %i, align 4, !dbg !5242
  %add603 = add nsw i32 40, %345, !dbg !5243
  %idxprom604 = sext i32 %add603 to i64, !dbg !5244
  %arrayidx605 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom604, !dbg !5244
  %346 = load i32, i32* %arrayidx605, align 4, !dbg !5244
  %sub606 = sub nsw i32 %344, %346, !dbg !5245
  %sub607 = sub nsw i32 0, %sub606, !dbg !5246
  br label %cond.end608, !dbg !5247

cond.end608:                                      ; preds = %cond.false599, %cond.true591
  %cond609 = phi i32 [ %sub598, %cond.true591 ], [ %sub607, %cond.false599 ], !dbg !5248
  %add610 = add nsw i32 %cond581, %cond609, !dbg !5249
  %add611 = add nsw i32 %add553, %add610, !dbg !5250
  %347 = load i32, i32* %i, align 4, !dbg !5252
  %add612 = add nsw i32 16, %347, !dbg !5253
  %idxprom613 = sext i32 %add612 to i64, !dbg !5254
  %arrayidx614 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom613, !dbg !5254
  %348 = load i32, i32* %arrayidx614, align 4, !dbg !5254
  %349 = load i32, i32* %i, align 4, !dbg !5255
  %add615 = add nsw i32 48, %349, !dbg !5256
  %idxprom616 = sext i32 %add615 to i64, !dbg !5257
  %arrayidx617 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom616, !dbg !5257
  %350 = load i32, i32* %arrayidx617, align 4, !dbg !5257
  %add618 = add nsw i32 %348, %350, !dbg !5258
  %cmp619 = icmp sge i32 %add618, 0, !dbg !5259
  br i1 %cmp619, label %cond.true621, label %cond.false629, !dbg !5260

cond.true621:                                     ; preds = %cond.end608
  %351 = load i32, i32* %i, align 4, !dbg !5261
  %add622 = add nsw i32 16, %351, !dbg !5262
  %idxprom623 = sext i32 %add622 to i64, !dbg !5263
  %arrayidx624 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom623, !dbg !5263
  %352 = load i32, i32* %arrayidx624, align 4, !dbg !5263
  %353 = load i32, i32* %i, align 4, !dbg !5264
  %add625 = add nsw i32 48, %353, !dbg !5265
  %idxprom626 = sext i32 %add625 to i64, !dbg !5266
  %arrayidx627 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom626, !dbg !5266
  %354 = load i32, i32* %arrayidx627, align 4, !dbg !5266
  %add628 = add nsw i32 %352, %354, !dbg !5267
  br label %cond.end638, !dbg !5268

cond.false629:                                    ; preds = %cond.end608
  %355 = load i32, i32* %i, align 4, !dbg !5269
  %add630 = add nsw i32 16, %355, !dbg !5270
  %idxprom631 = sext i32 %add630 to i64, !dbg !5271
  %arrayidx632 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom631, !dbg !5271
  %356 = load i32, i32* %arrayidx632, align 4, !dbg !5271
  %357 = load i32, i32* %i, align 4, !dbg !5272
  %add633 = add nsw i32 48, %357, !dbg !5273
  %idxprom634 = sext i32 %add633 to i64, !dbg !5274
  %arrayidx635 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom634, !dbg !5274
  %358 = load i32, i32* %arrayidx635, align 4, !dbg !5274
  %add636 = add nsw i32 %356, %358, !dbg !5275
  %sub637 = sub nsw i32 0, %add636, !dbg !5276
  br label %cond.end638, !dbg !5277

cond.end638:                                      ; preds = %cond.false629, %cond.true621
  %cond639 = phi i32 [ %add628, %cond.true621 ], [ %sub637, %cond.false629 ], !dbg !5278
  %359 = load i32, i32* %i, align 4, !dbg !5279
  %add640 = add nsw i32 16, %359, !dbg !5280
  %idxprom641 = sext i32 %add640 to i64, !dbg !5281
  %arrayidx642 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom641, !dbg !5281
  %360 = load i32, i32* %arrayidx642, align 4, !dbg !5281
  %361 = load i32, i32* %i, align 4, !dbg !5282
  %add643 = add nsw i32 48, %361, !dbg !5283
  %idxprom644 = sext i32 %add643 to i64, !dbg !5284
  %arrayidx645 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom644, !dbg !5284
  %362 = load i32, i32* %arrayidx645, align 4, !dbg !5284
  %sub646 = sub nsw i32 %360, %362, !dbg !5285
  %cmp647 = icmp sge i32 %sub646, 0, !dbg !5286
  br i1 %cmp647, label %cond.true649, label %cond.false657, !dbg !5287

cond.true649:                                     ; preds = %cond.end638
  %363 = load i32, i32* %i, align 4, !dbg !5288
  %add650 = add nsw i32 16, %363, !dbg !5289
  %idxprom651 = sext i32 %add650 to i64, !dbg !5290
  %arrayidx652 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom651, !dbg !5290
  %364 = load i32, i32* %arrayidx652, align 4, !dbg !5290
  %365 = load i32, i32* %i, align 4, !dbg !5291
  %add653 = add nsw i32 48, %365, !dbg !5292
  %idxprom654 = sext i32 %add653 to i64, !dbg !5293
  %arrayidx655 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom654, !dbg !5293
  %366 = load i32, i32* %arrayidx655, align 4, !dbg !5293
  %sub656 = sub nsw i32 %364, %366, !dbg !5294
  br label %cond.end666, !dbg !5295

cond.false657:                                    ; preds = %cond.end638
  %367 = load i32, i32* %i, align 4, !dbg !5296
  %add658 = add nsw i32 16, %367, !dbg !5297
  %idxprom659 = sext i32 %add658 to i64, !dbg !5298
  %arrayidx660 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom659, !dbg !5298
  %368 = load i32, i32* %arrayidx660, align 4, !dbg !5298
  %369 = load i32, i32* %i, align 4, !dbg !5299
  %add661 = add nsw i32 48, %369, !dbg !5300
  %idxprom662 = sext i32 %add661 to i64, !dbg !5301
  %arrayidx663 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom662, !dbg !5301
  %370 = load i32, i32* %arrayidx663, align 4, !dbg !5301
  %sub664 = sub nsw i32 %368, %370, !dbg !5302
  %sub665 = sub nsw i32 0, %sub664, !dbg !5303
  br label %cond.end666, !dbg !5304

cond.end666:                                      ; preds = %cond.false657, %cond.true649
  %cond667 = phi i32 [ %sub656, %cond.true649 ], [ %sub665, %cond.false657 ], !dbg !5305
  %add668 = add nsw i32 %cond639, %cond667, !dbg !5306
  %add669 = add nsw i32 %add611, %add668, !dbg !5307
  %371 = load i32, i32* %i, align 4, !dbg !5308
  %add670 = add nsw i32 24, %371, !dbg !5309
  %idxprom671 = sext i32 %add670 to i64, !dbg !5310
  %arrayidx672 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom671, !dbg !5310
  %372 = load i32, i32* %arrayidx672, align 4, !dbg !5310
  %373 = load i32, i32* %i, align 4, !dbg !5311
  %add673 = add nsw i32 56, %373, !dbg !5312
  %idxprom674 = sext i32 %add673 to i64, !dbg !5313
  %arrayidx675 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom674, !dbg !5313
  %374 = load i32, i32* %arrayidx675, align 4, !dbg !5313
  %add676 = add nsw i32 %372, %374, !dbg !5314
  %cmp677 = icmp sge i32 %add676, 0, !dbg !5315
  br i1 %cmp677, label %cond.true679, label %cond.false687, !dbg !5316

cond.true679:                                     ; preds = %cond.end666
  %375 = load i32, i32* %i, align 4, !dbg !5317
  %add680 = add nsw i32 24, %375, !dbg !5318
  %idxprom681 = sext i32 %add680 to i64, !dbg !5319
  %arrayidx682 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom681, !dbg !5319
  %376 = load i32, i32* %arrayidx682, align 4, !dbg !5319
  %377 = load i32, i32* %i, align 4, !dbg !5320
  %add683 = add nsw i32 56, %377, !dbg !5321
  %idxprom684 = sext i32 %add683 to i64, !dbg !5322
  %arrayidx685 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom684, !dbg !5322
  %378 = load i32, i32* %arrayidx685, align 4, !dbg !5322
  %add686 = add nsw i32 %376, %378, !dbg !5323
  br label %cond.end696, !dbg !5324

cond.false687:                                    ; preds = %cond.end666
  %379 = load i32, i32* %i, align 4, !dbg !5325
  %add688 = add nsw i32 24, %379, !dbg !5326
  %idxprom689 = sext i32 %add688 to i64, !dbg !5327
  %arrayidx690 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom689, !dbg !5327
  %380 = load i32, i32* %arrayidx690, align 4, !dbg !5327
  %381 = load i32, i32* %i, align 4, !dbg !5328
  %add691 = add nsw i32 56, %381, !dbg !5329
  %idxprom692 = sext i32 %add691 to i64, !dbg !5330
  %arrayidx693 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom692, !dbg !5330
  %382 = load i32, i32* %arrayidx693, align 4, !dbg !5330
  %add694 = add nsw i32 %380, %382, !dbg !5331
  %sub695 = sub nsw i32 0, %add694, !dbg !5332
  br label %cond.end696, !dbg !5333

cond.end696:                                      ; preds = %cond.false687, %cond.true679
  %cond697 = phi i32 [ %add686, %cond.true679 ], [ %sub695, %cond.false687 ], !dbg !5334
  %383 = load i32, i32* %i, align 4, !dbg !5335
  %add698 = add nsw i32 24, %383, !dbg !5336
  %idxprom699 = sext i32 %add698 to i64, !dbg !5337
  %arrayidx700 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom699, !dbg !5337
  %384 = load i32, i32* %arrayidx700, align 4, !dbg !5337
  %385 = load i32, i32* %i, align 4, !dbg !5338
  %add701 = add nsw i32 56, %385, !dbg !5339
  %idxprom702 = sext i32 %add701 to i64, !dbg !5340
  %arrayidx703 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom702, !dbg !5340
  %386 = load i32, i32* %arrayidx703, align 4, !dbg !5340
  %sub704 = sub nsw i32 %384, %386, !dbg !5341
  %cmp705 = icmp sge i32 %sub704, 0, !dbg !5342
  br i1 %cmp705, label %cond.true707, label %cond.false715, !dbg !5343

cond.true707:                                     ; preds = %cond.end696
  %387 = load i32, i32* %i, align 4, !dbg !5344
  %add708 = add nsw i32 24, %387, !dbg !5345
  %idxprom709 = sext i32 %add708 to i64, !dbg !5346
  %arrayidx710 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom709, !dbg !5346
  %388 = load i32, i32* %arrayidx710, align 4, !dbg !5346
  %389 = load i32, i32* %i, align 4, !dbg !5347
  %add711 = add nsw i32 56, %389, !dbg !5348
  %idxprom712 = sext i32 %add711 to i64, !dbg !5349
  %arrayidx713 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom712, !dbg !5349
  %390 = load i32, i32* %arrayidx713, align 4, !dbg !5349
  %sub714 = sub nsw i32 %388, %390, !dbg !5350
  br label %cond.end724, !dbg !5351

cond.false715:                                    ; preds = %cond.end696
  %391 = load i32, i32* %i, align 4, !dbg !5352
  %add716 = add nsw i32 24, %391, !dbg !5353
  %idxprom717 = sext i32 %add716 to i64, !dbg !5354
  %arrayidx718 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom717, !dbg !5354
  %392 = load i32, i32* %arrayidx718, align 4, !dbg !5354
  %393 = load i32, i32* %i, align 4, !dbg !5355
  %add719 = add nsw i32 56, %393, !dbg !5356
  %idxprom720 = sext i32 %add719 to i64, !dbg !5357
  %arrayidx721 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom720, !dbg !5357
  %394 = load i32, i32* %arrayidx721, align 4, !dbg !5357
  %sub722 = sub nsw i32 %392, %394, !dbg !5358
  %sub723 = sub nsw i32 0, %sub722, !dbg !5359
  br label %cond.end724, !dbg !5360

cond.end724:                                      ; preds = %cond.false715, %cond.true707
  %cond725 = phi i32 [ %sub714, %cond.true707 ], [ %sub723, %cond.false715 ], !dbg !5361
  %add726 = add nsw i32 %cond697, %cond725, !dbg !5362
  %add727 = add nsw i32 %add669, %add726, !dbg !5363
  %395 = load i32, i32* %sum, align 4, !dbg !5364
  %add728 = add nsw i32 %395, %add727, !dbg !5364
  store i32 %add728, i32* %sum, align 4, !dbg !5364
  br label %for.inc729, !dbg !5366

for.inc729:                                       ; preds = %cond.end724
  %396 = load i32, i32* %i, align 4, !dbg !5367
  %inc730 = add nsw i32 %396, 1, !dbg !5367
  store i32 %inc730, i32* %i, align 4, !dbg !5367
  br label %for.cond369, !dbg !5369, !llvm.loop !5370

for.end731:                                       ; preds = %for.cond369
  %397 = load i32, i32* %sum, align 4, !dbg !5372
  ret i32 %397, !dbg !5373
}

; Function Attrs: nounwind uwtable
define internal i32 @hadamard8_intra16_c(%struct.MpegEncContext* %s, i8* %dst, i8* %src, i64 %stride, i32 %h) #0 !dbg !5374 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !5375, metadata !2614), !dbg !5376
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5377, metadata !2614), !dbg !5378
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !5379, metadata !2614), !dbg !5380
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !5381, metadata !2614), !dbg !5382
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !5383, metadata !2614), !dbg !5384
  call void @llvm.dbg.declare(metadata i32* %score, metadata !5385, metadata !2614), !dbg !5386
  store i32 0, i32* %score, align 4, !dbg !5386
  %0 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !5387
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !5388
  %2 = load i8*, i8** %src.addr, align 8, !dbg !5389
  %3 = load i64, i64* %stride.addr, align 8, !dbg !5390
  %call = call i32 @hadamard8_intra8x8_c(%struct.MpegEncContext* %0, i8* %1, i8* %2, i64 %3, i32 8), !dbg !5391
  %4 = load i32, i32* %score, align 4, !dbg !5392
  %add = add nsw i32 %4, %call, !dbg !5392
  store i32 %add, i32* %score, align 4, !dbg !5392
  %5 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !5393
  %6 = load i8*, i8** %dst.addr, align 8, !dbg !5394
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 8, !dbg !5395
  %7 = load i8*, i8** %src.addr, align 8, !dbg !5396
  %add.ptr1 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !5397
  %8 = load i64, i64* %stride.addr, align 8, !dbg !5398
  %call2 = call i32 @hadamard8_intra8x8_c(%struct.MpegEncContext* %5, i8* %add.ptr, i8* %add.ptr1, i64 %8, i32 8), !dbg !5399
  %9 = load i32, i32* %score, align 4, !dbg !5401
  %add3 = add nsw i32 %9, %call2, !dbg !5401
  store i32 %add3, i32* %score, align 4, !dbg !5401
  %10 = load i32, i32* %h.addr, align 4, !dbg !5402
  %cmp = icmp eq i32 %10, 16, !dbg !5404
  br i1 %cmp, label %if.then, label %if.end, !dbg !5405

if.then:                                          ; preds = %entry
  %11 = load i64, i64* %stride.addr, align 8, !dbg !5406
  %mul = mul nsw i64 8, %11, !dbg !5409
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !5410
  %add.ptr4 = getelementptr inbounds i8, i8* %12, i64 %mul, !dbg !5410
  store i8* %add.ptr4, i8** %dst.addr, align 8, !dbg !5410
  %13 = load i64, i64* %stride.addr, align 8, !dbg !5411
  %mul5 = mul nsw i64 8, %13, !dbg !5412
  %14 = load i8*, i8** %src.addr, align 8, !dbg !5413
  %add.ptr6 = getelementptr inbounds i8, i8* %14, i64 %mul5, !dbg !5413
  store i8* %add.ptr6, i8** %src.addr, align 8, !dbg !5413
  %15 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !5414
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !5415
  %17 = load i8*, i8** %src.addr, align 8, !dbg !5416
  %18 = load i64, i64* %stride.addr, align 8, !dbg !5417
  %call7 = call i32 @hadamard8_intra8x8_c(%struct.MpegEncContext* %15, i8* %16, i8* %17, i64 %18, i32 8), !dbg !5418
  %19 = load i32, i32* %score, align 4, !dbg !5419
  %add8 = add nsw i32 %19, %call7, !dbg !5419
  store i32 %add8, i32* %score, align 4, !dbg !5419
  %20 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !5420
  %21 = load i8*, i8** %dst.addr, align 8, !dbg !5421
  %add.ptr9 = getelementptr inbounds i8, i8* %21, i64 8, !dbg !5422
  %22 = load i8*, i8** %src.addr, align 8, !dbg !5423
  %add.ptr10 = getelementptr inbounds i8, i8* %22, i64 8, !dbg !5424
  %23 = load i64, i64* %stride.addr, align 8, !dbg !5425
  %call11 = call i32 @hadamard8_intra8x8_c(%struct.MpegEncContext* %20, i8* %add.ptr9, i8* %add.ptr10, i64 %23, i32 8), !dbg !5426
  %24 = load i32, i32* %score, align 4, !dbg !5428
  %add12 = add nsw i32 %24, %call11, !dbg !5428
  store i32 %add12, i32* %score, align 4, !dbg !5428
  br label %if.end, !dbg !5429

if.end:                                           ; preds = %if.then, %entry
  %25 = load i32, i32* %score, align 4, !dbg !5430
  ret i32 %25, !dbg !5432
}

; Function Attrs: nounwind uwtable
define internal i32 @hadamard8_intra8x8_c(%struct.MpegEncContext* %s, i8* %src, i8* %dummy, i64 %stride, i32 %h) #0 !dbg !5433 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %src.addr = alloca i8*, align 8
  %dummy.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca [64 x i32], align 16
  %sum = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %a133 = alloca i32, align 4
  %b134 = alloca i32, align 4
  %a153 = alloca i32, align 4
  %b154 = alloca i32, align 4
  %a173 = alloca i32, align 4
  %b174 = alloca i32, align 4
  %a193 = alloca i32, align 4
  %b194 = alloca i32, align 4
  %a213 = alloca i32, align 4
  %b214 = alloca i32, align 4
  %a233 = alloca i32, align 4
  %b234 = alloca i32, align 4
  %a253 = alloca i32, align 4
  %b254 = alloca i32, align 4
  %a277 = alloca i32, align 4
  %b278 = alloca i32, align 4
  %a293 = alloca i32, align 4
  %b294 = alloca i32, align 4
  %a309 = alloca i32, align 4
  %b310 = alloca i32, align 4
  %a325 = alloca i32, align 4
  %b326 = alloca i32, align 4
  %a341 = alloca i32, align 4
  %b342 = alloca i32, align 4
  %a357 = alloca i32, align 4
  %b358 = alloca i32, align 4
  %a373 = alloca i32, align 4
  %b374 = alloca i32, align 4
  %a389 = alloca i32, align 4
  %b390 = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !5434, metadata !2614), !dbg !5435
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !5436, metadata !2614), !dbg !5437
  store i8* %dummy, i8** %dummy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dummy.addr, metadata !5438, metadata !2614), !dbg !5439
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !5440, metadata !2614), !dbg !5441
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !5442, metadata !2614), !dbg !5443
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5444, metadata !2614), !dbg !5445
  call void @llvm.dbg.declare(metadata [64 x i32]* %temp, metadata !5446, metadata !2614), !dbg !5447
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !5448, metadata !2614), !dbg !5449
  store i32 0, i32* %sum, align 4, !dbg !5449
  store i32 0, i32* %i, align 4, !dbg !5450
  br label %for.cond, !dbg !5452

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5453
  %cmp = icmp slt i32 %0, 8, !dbg !5456
  br i1 %cmp, label %for.body, label %for.end, !dbg !5457

for.body:                                         ; preds = %for.cond
  %1 = load i64, i64* %stride.addr, align 8, !dbg !5458
  %2 = load i32, i32* %i, align 4, !dbg !5460
  %conv = sext i32 %2 to i64, !dbg !5460
  %mul = mul nsw i64 %1, %conv, !dbg !5461
  %add = add nsw i64 %mul, 0, !dbg !5462
  %3 = load i8*, i8** %src.addr, align 8, !dbg !5463
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %add, !dbg !5463
  %4 = load i8, i8* %arrayidx, align 1, !dbg !5463
  %conv1 = zext i8 %4 to i32, !dbg !5464
  %5 = load i64, i64* %stride.addr, align 8, !dbg !5465
  %6 = load i32, i32* %i, align 4, !dbg !5466
  %conv2 = sext i32 %6 to i64, !dbg !5466
  %mul3 = mul nsw i64 %5, %conv2, !dbg !5467
  %add4 = add nsw i64 %mul3, 1, !dbg !5468
  %7 = load i8*, i8** %src.addr, align 8, !dbg !5469
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 %add4, !dbg !5469
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !5469
  %conv6 = zext i8 %8 to i32, !dbg !5470
  %add7 = add nsw i32 %conv1, %conv6, !dbg !5471
  %9 = load i32, i32* %i, align 4, !dbg !5472
  %mul8 = mul nsw i32 8, %9, !dbg !5473
  %add9 = add nsw i32 %mul8, 0, !dbg !5474
  %idxprom = sext i32 %add9 to i64, !dbg !5475
  %arrayidx10 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom, !dbg !5475
  store i32 %add7, i32* %arrayidx10, align 4, !dbg !5476
  %10 = load i64, i64* %stride.addr, align 8, !dbg !5477
  %11 = load i32, i32* %i, align 4, !dbg !5478
  %conv11 = sext i32 %11 to i64, !dbg !5478
  %mul12 = mul nsw i64 %10, %conv11, !dbg !5479
  %add13 = add nsw i64 %mul12, 0, !dbg !5480
  %12 = load i8*, i8** %src.addr, align 8, !dbg !5481
  %arrayidx14 = getelementptr inbounds i8, i8* %12, i64 %add13, !dbg !5481
  %13 = load i8, i8* %arrayidx14, align 1, !dbg !5481
  %conv15 = zext i8 %13 to i32, !dbg !5482
  %14 = load i64, i64* %stride.addr, align 8, !dbg !5483
  %15 = load i32, i32* %i, align 4, !dbg !5484
  %conv16 = sext i32 %15 to i64, !dbg !5484
  %mul17 = mul nsw i64 %14, %conv16, !dbg !5485
  %add18 = add nsw i64 %mul17, 1, !dbg !5486
  %16 = load i8*, i8** %src.addr, align 8, !dbg !5487
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %add18, !dbg !5487
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !5487
  %conv20 = zext i8 %17 to i32, !dbg !5488
  %sub = sub nsw i32 %conv15, %conv20, !dbg !5489
  %18 = load i32, i32* %i, align 4, !dbg !5490
  %mul21 = mul nsw i32 8, %18, !dbg !5491
  %add22 = add nsw i32 %mul21, 1, !dbg !5492
  %idxprom23 = sext i32 %add22 to i64, !dbg !5493
  %arrayidx24 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom23, !dbg !5493
  store i32 %sub, i32* %arrayidx24, align 4, !dbg !5494
  %19 = load i64, i64* %stride.addr, align 8, !dbg !5495
  %20 = load i32, i32* %i, align 4, !dbg !5496
  %conv25 = sext i32 %20 to i64, !dbg !5496
  %mul26 = mul nsw i64 %19, %conv25, !dbg !5497
  %add27 = add nsw i64 %mul26, 2, !dbg !5498
  %21 = load i8*, i8** %src.addr, align 8, !dbg !5499
  %arrayidx28 = getelementptr inbounds i8, i8* %21, i64 %add27, !dbg !5499
  %22 = load i8, i8* %arrayidx28, align 1, !dbg !5499
  %conv29 = zext i8 %22 to i32, !dbg !5500
  %23 = load i64, i64* %stride.addr, align 8, !dbg !5501
  %24 = load i32, i32* %i, align 4, !dbg !5502
  %conv30 = sext i32 %24 to i64, !dbg !5502
  %mul31 = mul nsw i64 %23, %conv30, !dbg !5503
  %add32 = add nsw i64 %mul31, 3, !dbg !5504
  %25 = load i8*, i8** %src.addr, align 8, !dbg !5505
  %arrayidx33 = getelementptr inbounds i8, i8* %25, i64 %add32, !dbg !5505
  %26 = load i8, i8* %arrayidx33, align 1, !dbg !5505
  %conv34 = zext i8 %26 to i32, !dbg !5506
  %add35 = add nsw i32 %conv29, %conv34, !dbg !5507
  %27 = load i32, i32* %i, align 4, !dbg !5508
  %mul36 = mul nsw i32 8, %27, !dbg !5509
  %add37 = add nsw i32 %mul36, 2, !dbg !5510
  %idxprom38 = sext i32 %add37 to i64, !dbg !5511
  %arrayidx39 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom38, !dbg !5511
  store i32 %add35, i32* %arrayidx39, align 4, !dbg !5512
  %28 = load i64, i64* %stride.addr, align 8, !dbg !5513
  %29 = load i32, i32* %i, align 4, !dbg !5514
  %conv40 = sext i32 %29 to i64, !dbg !5514
  %mul41 = mul nsw i64 %28, %conv40, !dbg !5515
  %add42 = add nsw i64 %mul41, 2, !dbg !5516
  %30 = load i8*, i8** %src.addr, align 8, !dbg !5517
  %arrayidx43 = getelementptr inbounds i8, i8* %30, i64 %add42, !dbg !5517
  %31 = load i8, i8* %arrayidx43, align 1, !dbg !5517
  %conv44 = zext i8 %31 to i32, !dbg !5518
  %32 = load i64, i64* %stride.addr, align 8, !dbg !5519
  %33 = load i32, i32* %i, align 4, !dbg !5520
  %conv45 = sext i32 %33 to i64, !dbg !5520
  %mul46 = mul nsw i64 %32, %conv45, !dbg !5521
  %add47 = add nsw i64 %mul46, 3, !dbg !5522
  %34 = load i8*, i8** %src.addr, align 8, !dbg !5523
  %arrayidx48 = getelementptr inbounds i8, i8* %34, i64 %add47, !dbg !5523
  %35 = load i8, i8* %arrayidx48, align 1, !dbg !5523
  %conv49 = zext i8 %35 to i32, !dbg !5524
  %sub50 = sub nsw i32 %conv44, %conv49, !dbg !5525
  %36 = load i32, i32* %i, align 4, !dbg !5526
  %mul51 = mul nsw i32 8, %36, !dbg !5527
  %add52 = add nsw i32 %mul51, 3, !dbg !5528
  %idxprom53 = sext i32 %add52 to i64, !dbg !5529
  %arrayidx54 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom53, !dbg !5529
  store i32 %sub50, i32* %arrayidx54, align 4, !dbg !5530
  %37 = load i64, i64* %stride.addr, align 8, !dbg !5531
  %38 = load i32, i32* %i, align 4, !dbg !5532
  %conv55 = sext i32 %38 to i64, !dbg !5532
  %mul56 = mul nsw i64 %37, %conv55, !dbg !5533
  %add57 = add nsw i64 %mul56, 4, !dbg !5534
  %39 = load i8*, i8** %src.addr, align 8, !dbg !5535
  %arrayidx58 = getelementptr inbounds i8, i8* %39, i64 %add57, !dbg !5535
  %40 = load i8, i8* %arrayidx58, align 1, !dbg !5535
  %conv59 = zext i8 %40 to i32, !dbg !5536
  %41 = load i64, i64* %stride.addr, align 8, !dbg !5537
  %42 = load i32, i32* %i, align 4, !dbg !5538
  %conv60 = sext i32 %42 to i64, !dbg !5538
  %mul61 = mul nsw i64 %41, %conv60, !dbg !5539
  %add62 = add nsw i64 %mul61, 5, !dbg !5540
  %43 = load i8*, i8** %src.addr, align 8, !dbg !5541
  %arrayidx63 = getelementptr inbounds i8, i8* %43, i64 %add62, !dbg !5541
  %44 = load i8, i8* %arrayidx63, align 1, !dbg !5541
  %conv64 = zext i8 %44 to i32, !dbg !5542
  %add65 = add nsw i32 %conv59, %conv64, !dbg !5543
  %45 = load i32, i32* %i, align 4, !dbg !5544
  %mul66 = mul nsw i32 8, %45, !dbg !5545
  %add67 = add nsw i32 %mul66, 4, !dbg !5546
  %idxprom68 = sext i32 %add67 to i64, !dbg !5547
  %arrayidx69 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom68, !dbg !5547
  store i32 %add65, i32* %arrayidx69, align 4, !dbg !5548
  %46 = load i64, i64* %stride.addr, align 8, !dbg !5549
  %47 = load i32, i32* %i, align 4, !dbg !5550
  %conv70 = sext i32 %47 to i64, !dbg !5550
  %mul71 = mul nsw i64 %46, %conv70, !dbg !5551
  %add72 = add nsw i64 %mul71, 4, !dbg !5552
  %48 = load i8*, i8** %src.addr, align 8, !dbg !5553
  %arrayidx73 = getelementptr inbounds i8, i8* %48, i64 %add72, !dbg !5553
  %49 = load i8, i8* %arrayidx73, align 1, !dbg !5553
  %conv74 = zext i8 %49 to i32, !dbg !5554
  %50 = load i64, i64* %stride.addr, align 8, !dbg !5555
  %51 = load i32, i32* %i, align 4, !dbg !5556
  %conv75 = sext i32 %51 to i64, !dbg !5556
  %mul76 = mul nsw i64 %50, %conv75, !dbg !5557
  %add77 = add nsw i64 %mul76, 5, !dbg !5558
  %52 = load i8*, i8** %src.addr, align 8, !dbg !5559
  %arrayidx78 = getelementptr inbounds i8, i8* %52, i64 %add77, !dbg !5559
  %53 = load i8, i8* %arrayidx78, align 1, !dbg !5559
  %conv79 = zext i8 %53 to i32, !dbg !5560
  %sub80 = sub nsw i32 %conv74, %conv79, !dbg !5561
  %54 = load i32, i32* %i, align 4, !dbg !5562
  %mul81 = mul nsw i32 8, %54, !dbg !5563
  %add82 = add nsw i32 %mul81, 5, !dbg !5564
  %idxprom83 = sext i32 %add82 to i64, !dbg !5565
  %arrayidx84 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom83, !dbg !5565
  store i32 %sub80, i32* %arrayidx84, align 4, !dbg !5566
  %55 = load i64, i64* %stride.addr, align 8, !dbg !5567
  %56 = load i32, i32* %i, align 4, !dbg !5568
  %conv85 = sext i32 %56 to i64, !dbg !5568
  %mul86 = mul nsw i64 %55, %conv85, !dbg !5569
  %add87 = add nsw i64 %mul86, 6, !dbg !5570
  %57 = load i8*, i8** %src.addr, align 8, !dbg !5571
  %arrayidx88 = getelementptr inbounds i8, i8* %57, i64 %add87, !dbg !5571
  %58 = load i8, i8* %arrayidx88, align 1, !dbg !5571
  %conv89 = zext i8 %58 to i32, !dbg !5572
  %59 = load i64, i64* %stride.addr, align 8, !dbg !5573
  %60 = load i32, i32* %i, align 4, !dbg !5574
  %conv90 = sext i32 %60 to i64, !dbg !5574
  %mul91 = mul nsw i64 %59, %conv90, !dbg !5575
  %add92 = add nsw i64 %mul91, 7, !dbg !5576
  %61 = load i8*, i8** %src.addr, align 8, !dbg !5577
  %arrayidx93 = getelementptr inbounds i8, i8* %61, i64 %add92, !dbg !5577
  %62 = load i8, i8* %arrayidx93, align 1, !dbg !5577
  %conv94 = zext i8 %62 to i32, !dbg !5578
  %add95 = add nsw i32 %conv89, %conv94, !dbg !5579
  %63 = load i32, i32* %i, align 4, !dbg !5580
  %mul96 = mul nsw i32 8, %63, !dbg !5581
  %add97 = add nsw i32 %mul96, 6, !dbg !5582
  %idxprom98 = sext i32 %add97 to i64, !dbg !5583
  %arrayidx99 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom98, !dbg !5583
  store i32 %add95, i32* %arrayidx99, align 4, !dbg !5584
  %64 = load i64, i64* %stride.addr, align 8, !dbg !5585
  %65 = load i32, i32* %i, align 4, !dbg !5586
  %conv100 = sext i32 %65 to i64, !dbg !5586
  %mul101 = mul nsw i64 %64, %conv100, !dbg !5587
  %add102 = add nsw i64 %mul101, 6, !dbg !5588
  %66 = load i8*, i8** %src.addr, align 8, !dbg !5589
  %arrayidx103 = getelementptr inbounds i8, i8* %66, i64 %add102, !dbg !5589
  %67 = load i8, i8* %arrayidx103, align 1, !dbg !5589
  %conv104 = zext i8 %67 to i32, !dbg !5590
  %68 = load i64, i64* %stride.addr, align 8, !dbg !5591
  %69 = load i32, i32* %i, align 4, !dbg !5592
  %conv105 = sext i32 %69 to i64, !dbg !5592
  %mul106 = mul nsw i64 %68, %conv105, !dbg !5593
  %add107 = add nsw i64 %mul106, 7, !dbg !5594
  %70 = load i8*, i8** %src.addr, align 8, !dbg !5595
  %arrayidx108 = getelementptr inbounds i8, i8* %70, i64 %add107, !dbg !5595
  %71 = load i8, i8* %arrayidx108, align 1, !dbg !5595
  %conv109 = zext i8 %71 to i32, !dbg !5596
  %sub110 = sub nsw i32 %conv104, %conv109, !dbg !5597
  %72 = load i32, i32* %i, align 4, !dbg !5598
  %mul111 = mul nsw i32 8, %72, !dbg !5599
  %add112 = add nsw i32 %mul111, 7, !dbg !5600
  %idxprom113 = sext i32 %add112 to i64, !dbg !5601
  %arrayidx114 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom113, !dbg !5601
  store i32 %sub110, i32* %arrayidx114, align 4, !dbg !5602
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5603, metadata !2614), !dbg !5605
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5606, metadata !2614), !dbg !5607
  %73 = load i32, i32* %i, align 4, !dbg !5608
  %mul115 = mul nsw i32 8, %73, !dbg !5609
  %add116 = add nsw i32 %mul115, 0, !dbg !5610
  %idxprom117 = sext i32 %add116 to i64, !dbg !5611
  %arrayidx118 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom117, !dbg !5611
  %74 = load i32, i32* %arrayidx118, align 4, !dbg !5611
  store i32 %74, i32* %a, align 4, !dbg !5612
  %75 = load i32, i32* %i, align 4, !dbg !5613
  %mul119 = mul nsw i32 8, %75, !dbg !5614
  %add120 = add nsw i32 %mul119, 2, !dbg !5615
  %idxprom121 = sext i32 %add120 to i64, !dbg !5616
  %arrayidx122 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom121, !dbg !5616
  %76 = load i32, i32* %arrayidx122, align 4, !dbg !5616
  store i32 %76, i32* %b, align 4, !dbg !5617
  %77 = load i32, i32* %a, align 4, !dbg !5618
  %78 = load i32, i32* %b, align 4, !dbg !5619
  %add123 = add nsw i32 %77, %78, !dbg !5620
  %79 = load i32, i32* %i, align 4, !dbg !5621
  %mul124 = mul nsw i32 8, %79, !dbg !5622
  %add125 = add nsw i32 %mul124, 0, !dbg !5623
  %idxprom126 = sext i32 %add125 to i64, !dbg !5624
  %arrayidx127 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom126, !dbg !5624
  store i32 %add123, i32* %arrayidx127, align 4, !dbg !5625
  %80 = load i32, i32* %a, align 4, !dbg !5626
  %81 = load i32, i32* %b, align 4, !dbg !5627
  %sub128 = sub nsw i32 %80, %81, !dbg !5628
  %82 = load i32, i32* %i, align 4, !dbg !5629
  %mul129 = mul nsw i32 8, %82, !dbg !5630
  %add130 = add nsw i32 %mul129, 2, !dbg !5631
  %idxprom131 = sext i32 %add130 to i64, !dbg !5632
  %arrayidx132 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom131, !dbg !5632
  store i32 %sub128, i32* %arrayidx132, align 4, !dbg !5633
  call void @llvm.dbg.declare(metadata i32* %a133, metadata !5634, metadata !2614), !dbg !5636
  call void @llvm.dbg.declare(metadata i32* %b134, metadata !5637, metadata !2614), !dbg !5638
  %83 = load i32, i32* %i, align 4, !dbg !5639
  %mul135 = mul nsw i32 8, %83, !dbg !5640
  %add136 = add nsw i32 %mul135, 1, !dbg !5641
  %idxprom137 = sext i32 %add136 to i64, !dbg !5642
  %arrayidx138 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom137, !dbg !5642
  %84 = load i32, i32* %arrayidx138, align 4, !dbg !5642
  store i32 %84, i32* %a133, align 4, !dbg !5643
  %85 = load i32, i32* %i, align 4, !dbg !5644
  %mul139 = mul nsw i32 8, %85, !dbg !5645
  %add140 = add nsw i32 %mul139, 3, !dbg !5646
  %idxprom141 = sext i32 %add140 to i64, !dbg !5647
  %arrayidx142 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom141, !dbg !5647
  %86 = load i32, i32* %arrayidx142, align 4, !dbg !5647
  store i32 %86, i32* %b134, align 4, !dbg !5648
  %87 = load i32, i32* %a133, align 4, !dbg !5649
  %88 = load i32, i32* %b134, align 4, !dbg !5650
  %add143 = add nsw i32 %87, %88, !dbg !5651
  %89 = load i32, i32* %i, align 4, !dbg !5652
  %mul144 = mul nsw i32 8, %89, !dbg !5653
  %add145 = add nsw i32 %mul144, 1, !dbg !5654
  %idxprom146 = sext i32 %add145 to i64, !dbg !5655
  %arrayidx147 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom146, !dbg !5655
  store i32 %add143, i32* %arrayidx147, align 4, !dbg !5656
  %90 = load i32, i32* %a133, align 4, !dbg !5657
  %91 = load i32, i32* %b134, align 4, !dbg !5658
  %sub148 = sub nsw i32 %90, %91, !dbg !5659
  %92 = load i32, i32* %i, align 4, !dbg !5660
  %mul149 = mul nsw i32 8, %92, !dbg !5661
  %add150 = add nsw i32 %mul149, 3, !dbg !5662
  %idxprom151 = sext i32 %add150 to i64, !dbg !5663
  %arrayidx152 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom151, !dbg !5663
  store i32 %sub148, i32* %arrayidx152, align 4, !dbg !5664
  call void @llvm.dbg.declare(metadata i32* %a153, metadata !5665, metadata !2614), !dbg !5667
  call void @llvm.dbg.declare(metadata i32* %b154, metadata !5668, metadata !2614), !dbg !5669
  %93 = load i32, i32* %i, align 4, !dbg !5670
  %mul155 = mul nsw i32 8, %93, !dbg !5671
  %add156 = add nsw i32 %mul155, 4, !dbg !5672
  %idxprom157 = sext i32 %add156 to i64, !dbg !5673
  %arrayidx158 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom157, !dbg !5673
  %94 = load i32, i32* %arrayidx158, align 4, !dbg !5673
  store i32 %94, i32* %a153, align 4, !dbg !5674
  %95 = load i32, i32* %i, align 4, !dbg !5675
  %mul159 = mul nsw i32 8, %95, !dbg !5676
  %add160 = add nsw i32 %mul159, 6, !dbg !5677
  %idxprom161 = sext i32 %add160 to i64, !dbg !5678
  %arrayidx162 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom161, !dbg !5678
  %96 = load i32, i32* %arrayidx162, align 4, !dbg !5678
  store i32 %96, i32* %b154, align 4, !dbg !5679
  %97 = load i32, i32* %a153, align 4, !dbg !5680
  %98 = load i32, i32* %b154, align 4, !dbg !5681
  %add163 = add nsw i32 %97, %98, !dbg !5682
  %99 = load i32, i32* %i, align 4, !dbg !5683
  %mul164 = mul nsw i32 8, %99, !dbg !5684
  %add165 = add nsw i32 %mul164, 4, !dbg !5685
  %idxprom166 = sext i32 %add165 to i64, !dbg !5686
  %arrayidx167 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom166, !dbg !5686
  store i32 %add163, i32* %arrayidx167, align 4, !dbg !5687
  %100 = load i32, i32* %a153, align 4, !dbg !5688
  %101 = load i32, i32* %b154, align 4, !dbg !5689
  %sub168 = sub nsw i32 %100, %101, !dbg !5690
  %102 = load i32, i32* %i, align 4, !dbg !5691
  %mul169 = mul nsw i32 8, %102, !dbg !5692
  %add170 = add nsw i32 %mul169, 6, !dbg !5693
  %idxprom171 = sext i32 %add170 to i64, !dbg !5694
  %arrayidx172 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom171, !dbg !5694
  store i32 %sub168, i32* %arrayidx172, align 4, !dbg !5695
  call void @llvm.dbg.declare(metadata i32* %a173, metadata !5696, metadata !2614), !dbg !5698
  call void @llvm.dbg.declare(metadata i32* %b174, metadata !5699, metadata !2614), !dbg !5700
  %103 = load i32, i32* %i, align 4, !dbg !5701
  %mul175 = mul nsw i32 8, %103, !dbg !5702
  %add176 = add nsw i32 %mul175, 5, !dbg !5703
  %idxprom177 = sext i32 %add176 to i64, !dbg !5704
  %arrayidx178 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom177, !dbg !5704
  %104 = load i32, i32* %arrayidx178, align 4, !dbg !5704
  store i32 %104, i32* %a173, align 4, !dbg !5705
  %105 = load i32, i32* %i, align 4, !dbg !5706
  %mul179 = mul nsw i32 8, %105, !dbg !5707
  %add180 = add nsw i32 %mul179, 7, !dbg !5708
  %idxprom181 = sext i32 %add180 to i64, !dbg !5709
  %arrayidx182 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom181, !dbg !5709
  %106 = load i32, i32* %arrayidx182, align 4, !dbg !5709
  store i32 %106, i32* %b174, align 4, !dbg !5710
  %107 = load i32, i32* %a173, align 4, !dbg !5711
  %108 = load i32, i32* %b174, align 4, !dbg !5712
  %add183 = add nsw i32 %107, %108, !dbg !5713
  %109 = load i32, i32* %i, align 4, !dbg !5714
  %mul184 = mul nsw i32 8, %109, !dbg !5715
  %add185 = add nsw i32 %mul184, 5, !dbg !5716
  %idxprom186 = sext i32 %add185 to i64, !dbg !5717
  %arrayidx187 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom186, !dbg !5717
  store i32 %add183, i32* %arrayidx187, align 4, !dbg !5718
  %110 = load i32, i32* %a173, align 4, !dbg !5719
  %111 = load i32, i32* %b174, align 4, !dbg !5720
  %sub188 = sub nsw i32 %110, %111, !dbg !5721
  %112 = load i32, i32* %i, align 4, !dbg !5722
  %mul189 = mul nsw i32 8, %112, !dbg !5723
  %add190 = add nsw i32 %mul189, 7, !dbg !5724
  %idxprom191 = sext i32 %add190 to i64, !dbg !5725
  %arrayidx192 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom191, !dbg !5725
  store i32 %sub188, i32* %arrayidx192, align 4, !dbg !5726
  call void @llvm.dbg.declare(metadata i32* %a193, metadata !5727, metadata !2614), !dbg !5729
  call void @llvm.dbg.declare(metadata i32* %b194, metadata !5730, metadata !2614), !dbg !5731
  %113 = load i32, i32* %i, align 4, !dbg !5732
  %mul195 = mul nsw i32 8, %113, !dbg !5733
  %add196 = add nsw i32 %mul195, 0, !dbg !5734
  %idxprom197 = sext i32 %add196 to i64, !dbg !5735
  %arrayidx198 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom197, !dbg !5735
  %114 = load i32, i32* %arrayidx198, align 4, !dbg !5735
  store i32 %114, i32* %a193, align 4, !dbg !5736
  %115 = load i32, i32* %i, align 4, !dbg !5737
  %mul199 = mul nsw i32 8, %115, !dbg !5738
  %add200 = add nsw i32 %mul199, 4, !dbg !5739
  %idxprom201 = sext i32 %add200 to i64, !dbg !5740
  %arrayidx202 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom201, !dbg !5740
  %116 = load i32, i32* %arrayidx202, align 4, !dbg !5740
  store i32 %116, i32* %b194, align 4, !dbg !5741
  %117 = load i32, i32* %a193, align 4, !dbg !5742
  %118 = load i32, i32* %b194, align 4, !dbg !5743
  %add203 = add nsw i32 %117, %118, !dbg !5744
  %119 = load i32, i32* %i, align 4, !dbg !5745
  %mul204 = mul nsw i32 8, %119, !dbg !5746
  %add205 = add nsw i32 %mul204, 0, !dbg !5747
  %idxprom206 = sext i32 %add205 to i64, !dbg !5748
  %arrayidx207 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom206, !dbg !5748
  store i32 %add203, i32* %arrayidx207, align 4, !dbg !5749
  %120 = load i32, i32* %a193, align 4, !dbg !5750
  %121 = load i32, i32* %b194, align 4, !dbg !5751
  %sub208 = sub nsw i32 %120, %121, !dbg !5752
  %122 = load i32, i32* %i, align 4, !dbg !5753
  %mul209 = mul nsw i32 8, %122, !dbg !5754
  %add210 = add nsw i32 %mul209, 4, !dbg !5755
  %idxprom211 = sext i32 %add210 to i64, !dbg !5756
  %arrayidx212 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom211, !dbg !5756
  store i32 %sub208, i32* %arrayidx212, align 4, !dbg !5757
  call void @llvm.dbg.declare(metadata i32* %a213, metadata !5758, metadata !2614), !dbg !5760
  call void @llvm.dbg.declare(metadata i32* %b214, metadata !5761, metadata !2614), !dbg !5762
  %123 = load i32, i32* %i, align 4, !dbg !5763
  %mul215 = mul nsw i32 8, %123, !dbg !5764
  %add216 = add nsw i32 %mul215, 1, !dbg !5765
  %idxprom217 = sext i32 %add216 to i64, !dbg !5766
  %arrayidx218 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom217, !dbg !5766
  %124 = load i32, i32* %arrayidx218, align 4, !dbg !5766
  store i32 %124, i32* %a213, align 4, !dbg !5767
  %125 = load i32, i32* %i, align 4, !dbg !5768
  %mul219 = mul nsw i32 8, %125, !dbg !5769
  %add220 = add nsw i32 %mul219, 5, !dbg !5770
  %idxprom221 = sext i32 %add220 to i64, !dbg !5771
  %arrayidx222 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom221, !dbg !5771
  %126 = load i32, i32* %arrayidx222, align 4, !dbg !5771
  store i32 %126, i32* %b214, align 4, !dbg !5772
  %127 = load i32, i32* %a213, align 4, !dbg !5773
  %128 = load i32, i32* %b214, align 4, !dbg !5774
  %add223 = add nsw i32 %127, %128, !dbg !5775
  %129 = load i32, i32* %i, align 4, !dbg !5776
  %mul224 = mul nsw i32 8, %129, !dbg !5777
  %add225 = add nsw i32 %mul224, 1, !dbg !5778
  %idxprom226 = sext i32 %add225 to i64, !dbg !5779
  %arrayidx227 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom226, !dbg !5779
  store i32 %add223, i32* %arrayidx227, align 4, !dbg !5780
  %130 = load i32, i32* %a213, align 4, !dbg !5781
  %131 = load i32, i32* %b214, align 4, !dbg !5782
  %sub228 = sub nsw i32 %130, %131, !dbg !5783
  %132 = load i32, i32* %i, align 4, !dbg !5784
  %mul229 = mul nsw i32 8, %132, !dbg !5785
  %add230 = add nsw i32 %mul229, 5, !dbg !5786
  %idxprom231 = sext i32 %add230 to i64, !dbg !5787
  %arrayidx232 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom231, !dbg !5787
  store i32 %sub228, i32* %arrayidx232, align 4, !dbg !5788
  call void @llvm.dbg.declare(metadata i32* %a233, metadata !5789, metadata !2614), !dbg !5791
  call void @llvm.dbg.declare(metadata i32* %b234, metadata !5792, metadata !2614), !dbg !5793
  %133 = load i32, i32* %i, align 4, !dbg !5794
  %mul235 = mul nsw i32 8, %133, !dbg !5795
  %add236 = add nsw i32 %mul235, 2, !dbg !5796
  %idxprom237 = sext i32 %add236 to i64, !dbg !5797
  %arrayidx238 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom237, !dbg !5797
  %134 = load i32, i32* %arrayidx238, align 4, !dbg !5797
  store i32 %134, i32* %a233, align 4, !dbg !5798
  %135 = load i32, i32* %i, align 4, !dbg !5799
  %mul239 = mul nsw i32 8, %135, !dbg !5800
  %add240 = add nsw i32 %mul239, 6, !dbg !5801
  %idxprom241 = sext i32 %add240 to i64, !dbg !5802
  %arrayidx242 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom241, !dbg !5802
  %136 = load i32, i32* %arrayidx242, align 4, !dbg !5802
  store i32 %136, i32* %b234, align 4, !dbg !5803
  %137 = load i32, i32* %a233, align 4, !dbg !5804
  %138 = load i32, i32* %b234, align 4, !dbg !5805
  %add243 = add nsw i32 %137, %138, !dbg !5806
  %139 = load i32, i32* %i, align 4, !dbg !5807
  %mul244 = mul nsw i32 8, %139, !dbg !5808
  %add245 = add nsw i32 %mul244, 2, !dbg !5809
  %idxprom246 = sext i32 %add245 to i64, !dbg !5810
  %arrayidx247 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom246, !dbg !5810
  store i32 %add243, i32* %arrayidx247, align 4, !dbg !5811
  %140 = load i32, i32* %a233, align 4, !dbg !5812
  %141 = load i32, i32* %b234, align 4, !dbg !5813
  %sub248 = sub nsw i32 %140, %141, !dbg !5814
  %142 = load i32, i32* %i, align 4, !dbg !5815
  %mul249 = mul nsw i32 8, %142, !dbg !5816
  %add250 = add nsw i32 %mul249, 6, !dbg !5817
  %idxprom251 = sext i32 %add250 to i64, !dbg !5818
  %arrayidx252 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom251, !dbg !5818
  store i32 %sub248, i32* %arrayidx252, align 4, !dbg !5819
  call void @llvm.dbg.declare(metadata i32* %a253, metadata !5820, metadata !2614), !dbg !5822
  call void @llvm.dbg.declare(metadata i32* %b254, metadata !5823, metadata !2614), !dbg !5824
  %143 = load i32, i32* %i, align 4, !dbg !5825
  %mul255 = mul nsw i32 8, %143, !dbg !5826
  %add256 = add nsw i32 %mul255, 3, !dbg !5827
  %idxprom257 = sext i32 %add256 to i64, !dbg !5828
  %arrayidx258 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom257, !dbg !5828
  %144 = load i32, i32* %arrayidx258, align 4, !dbg !5828
  store i32 %144, i32* %a253, align 4, !dbg !5829
  %145 = load i32, i32* %i, align 4, !dbg !5830
  %mul259 = mul nsw i32 8, %145, !dbg !5831
  %add260 = add nsw i32 %mul259, 7, !dbg !5832
  %idxprom261 = sext i32 %add260 to i64, !dbg !5833
  %arrayidx262 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom261, !dbg !5833
  %146 = load i32, i32* %arrayidx262, align 4, !dbg !5833
  store i32 %146, i32* %b254, align 4, !dbg !5834
  %147 = load i32, i32* %a253, align 4, !dbg !5835
  %148 = load i32, i32* %b254, align 4, !dbg !5836
  %add263 = add nsw i32 %147, %148, !dbg !5837
  %149 = load i32, i32* %i, align 4, !dbg !5838
  %mul264 = mul nsw i32 8, %149, !dbg !5839
  %add265 = add nsw i32 %mul264, 3, !dbg !5840
  %idxprom266 = sext i32 %add265 to i64, !dbg !5841
  %arrayidx267 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom266, !dbg !5841
  store i32 %add263, i32* %arrayidx267, align 4, !dbg !5842
  %150 = load i32, i32* %a253, align 4, !dbg !5843
  %151 = load i32, i32* %b254, align 4, !dbg !5844
  %sub268 = sub nsw i32 %150, %151, !dbg !5845
  %152 = load i32, i32* %i, align 4, !dbg !5846
  %mul269 = mul nsw i32 8, %152, !dbg !5847
  %add270 = add nsw i32 %mul269, 7, !dbg !5848
  %idxprom271 = sext i32 %add270 to i64, !dbg !5849
  %arrayidx272 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom271, !dbg !5849
  store i32 %sub268, i32* %arrayidx272, align 4, !dbg !5850
  br label %for.inc, !dbg !5851

for.inc:                                          ; preds = %for.body
  %153 = load i32, i32* %i, align 4, !dbg !5852
  %inc = add nsw i32 %153, 1, !dbg !5852
  store i32 %inc, i32* %i, align 4, !dbg !5852
  br label %for.cond, !dbg !5854, !llvm.loop !5855

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5857
  br label %for.cond273, !dbg !5859

for.cond273:                                      ; preds = %for.inc633, %for.end
  %154 = load i32, i32* %i, align 4, !dbg !5860
  %cmp274 = icmp slt i32 %154, 8, !dbg !5863
  br i1 %cmp274, label %for.body276, label %for.end635, !dbg !5864

for.body276:                                      ; preds = %for.cond273
  call void @llvm.dbg.declare(metadata i32* %a277, metadata !5865, metadata !2614), !dbg !5868
  call void @llvm.dbg.declare(metadata i32* %b278, metadata !5869, metadata !2614), !dbg !5870
  %155 = load i32, i32* %i, align 4, !dbg !5871
  %add279 = add nsw i32 0, %155, !dbg !5872
  %idxprom280 = sext i32 %add279 to i64, !dbg !5873
  %arrayidx281 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom280, !dbg !5873
  %156 = load i32, i32* %arrayidx281, align 4, !dbg !5873
  store i32 %156, i32* %a277, align 4, !dbg !5874
  %157 = load i32, i32* %i, align 4, !dbg !5875
  %add282 = add nsw i32 8, %157, !dbg !5876
  %idxprom283 = sext i32 %add282 to i64, !dbg !5877
  %arrayidx284 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom283, !dbg !5877
  %158 = load i32, i32* %arrayidx284, align 4, !dbg !5877
  store i32 %158, i32* %b278, align 4, !dbg !5878
  %159 = load i32, i32* %a277, align 4, !dbg !5879
  %160 = load i32, i32* %b278, align 4, !dbg !5880
  %add285 = add nsw i32 %159, %160, !dbg !5881
  %161 = load i32, i32* %i, align 4, !dbg !5882
  %add286 = add nsw i32 0, %161, !dbg !5883
  %idxprom287 = sext i32 %add286 to i64, !dbg !5884
  %arrayidx288 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom287, !dbg !5884
  store i32 %add285, i32* %arrayidx288, align 4, !dbg !5885
  %162 = load i32, i32* %a277, align 4, !dbg !5886
  %163 = load i32, i32* %b278, align 4, !dbg !5887
  %sub289 = sub nsw i32 %162, %163, !dbg !5888
  %164 = load i32, i32* %i, align 4, !dbg !5889
  %add290 = add nsw i32 8, %164, !dbg !5890
  %idxprom291 = sext i32 %add290 to i64, !dbg !5891
  %arrayidx292 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom291, !dbg !5891
  store i32 %sub289, i32* %arrayidx292, align 4, !dbg !5892
  call void @llvm.dbg.declare(metadata i32* %a293, metadata !5893, metadata !2614), !dbg !5895
  call void @llvm.dbg.declare(metadata i32* %b294, metadata !5896, metadata !2614), !dbg !5897
  %165 = load i32, i32* %i, align 4, !dbg !5898
  %add295 = add nsw i32 16, %165, !dbg !5899
  %idxprom296 = sext i32 %add295 to i64, !dbg !5900
  %arrayidx297 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom296, !dbg !5900
  %166 = load i32, i32* %arrayidx297, align 4, !dbg !5900
  store i32 %166, i32* %a293, align 4, !dbg !5901
  %167 = load i32, i32* %i, align 4, !dbg !5902
  %add298 = add nsw i32 24, %167, !dbg !5903
  %idxprom299 = sext i32 %add298 to i64, !dbg !5904
  %arrayidx300 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom299, !dbg !5904
  %168 = load i32, i32* %arrayidx300, align 4, !dbg !5904
  store i32 %168, i32* %b294, align 4, !dbg !5905
  %169 = load i32, i32* %a293, align 4, !dbg !5906
  %170 = load i32, i32* %b294, align 4, !dbg !5907
  %add301 = add nsw i32 %169, %170, !dbg !5908
  %171 = load i32, i32* %i, align 4, !dbg !5909
  %add302 = add nsw i32 16, %171, !dbg !5910
  %idxprom303 = sext i32 %add302 to i64, !dbg !5911
  %arrayidx304 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom303, !dbg !5911
  store i32 %add301, i32* %arrayidx304, align 4, !dbg !5912
  %172 = load i32, i32* %a293, align 4, !dbg !5913
  %173 = load i32, i32* %b294, align 4, !dbg !5914
  %sub305 = sub nsw i32 %172, %173, !dbg !5915
  %174 = load i32, i32* %i, align 4, !dbg !5916
  %add306 = add nsw i32 24, %174, !dbg !5917
  %idxprom307 = sext i32 %add306 to i64, !dbg !5918
  %arrayidx308 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom307, !dbg !5918
  store i32 %sub305, i32* %arrayidx308, align 4, !dbg !5919
  call void @llvm.dbg.declare(metadata i32* %a309, metadata !5920, metadata !2614), !dbg !5922
  call void @llvm.dbg.declare(metadata i32* %b310, metadata !5923, metadata !2614), !dbg !5924
  %175 = load i32, i32* %i, align 4, !dbg !5925
  %add311 = add nsw i32 32, %175, !dbg !5926
  %idxprom312 = sext i32 %add311 to i64, !dbg !5927
  %arrayidx313 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom312, !dbg !5927
  %176 = load i32, i32* %arrayidx313, align 4, !dbg !5927
  store i32 %176, i32* %a309, align 4, !dbg !5928
  %177 = load i32, i32* %i, align 4, !dbg !5929
  %add314 = add nsw i32 40, %177, !dbg !5930
  %idxprom315 = sext i32 %add314 to i64, !dbg !5931
  %arrayidx316 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom315, !dbg !5931
  %178 = load i32, i32* %arrayidx316, align 4, !dbg !5931
  store i32 %178, i32* %b310, align 4, !dbg !5932
  %179 = load i32, i32* %a309, align 4, !dbg !5933
  %180 = load i32, i32* %b310, align 4, !dbg !5934
  %add317 = add nsw i32 %179, %180, !dbg !5935
  %181 = load i32, i32* %i, align 4, !dbg !5936
  %add318 = add nsw i32 32, %181, !dbg !5937
  %idxprom319 = sext i32 %add318 to i64, !dbg !5938
  %arrayidx320 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom319, !dbg !5938
  store i32 %add317, i32* %arrayidx320, align 4, !dbg !5939
  %182 = load i32, i32* %a309, align 4, !dbg !5940
  %183 = load i32, i32* %b310, align 4, !dbg !5941
  %sub321 = sub nsw i32 %182, %183, !dbg !5942
  %184 = load i32, i32* %i, align 4, !dbg !5943
  %add322 = add nsw i32 40, %184, !dbg !5944
  %idxprom323 = sext i32 %add322 to i64, !dbg !5945
  %arrayidx324 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom323, !dbg !5945
  store i32 %sub321, i32* %arrayidx324, align 4, !dbg !5946
  call void @llvm.dbg.declare(metadata i32* %a325, metadata !5947, metadata !2614), !dbg !5949
  call void @llvm.dbg.declare(metadata i32* %b326, metadata !5950, metadata !2614), !dbg !5951
  %185 = load i32, i32* %i, align 4, !dbg !5952
  %add327 = add nsw i32 48, %185, !dbg !5953
  %idxprom328 = sext i32 %add327 to i64, !dbg !5954
  %arrayidx329 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom328, !dbg !5954
  %186 = load i32, i32* %arrayidx329, align 4, !dbg !5954
  store i32 %186, i32* %a325, align 4, !dbg !5955
  %187 = load i32, i32* %i, align 4, !dbg !5956
  %add330 = add nsw i32 56, %187, !dbg !5957
  %idxprom331 = sext i32 %add330 to i64, !dbg !5958
  %arrayidx332 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom331, !dbg !5958
  %188 = load i32, i32* %arrayidx332, align 4, !dbg !5958
  store i32 %188, i32* %b326, align 4, !dbg !5959
  %189 = load i32, i32* %a325, align 4, !dbg !5960
  %190 = load i32, i32* %b326, align 4, !dbg !5961
  %add333 = add nsw i32 %189, %190, !dbg !5962
  %191 = load i32, i32* %i, align 4, !dbg !5963
  %add334 = add nsw i32 48, %191, !dbg !5964
  %idxprom335 = sext i32 %add334 to i64, !dbg !5965
  %arrayidx336 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom335, !dbg !5965
  store i32 %add333, i32* %arrayidx336, align 4, !dbg !5966
  %192 = load i32, i32* %a325, align 4, !dbg !5967
  %193 = load i32, i32* %b326, align 4, !dbg !5968
  %sub337 = sub nsw i32 %192, %193, !dbg !5969
  %194 = load i32, i32* %i, align 4, !dbg !5970
  %add338 = add nsw i32 56, %194, !dbg !5971
  %idxprom339 = sext i32 %add338 to i64, !dbg !5972
  %arrayidx340 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom339, !dbg !5972
  store i32 %sub337, i32* %arrayidx340, align 4, !dbg !5973
  call void @llvm.dbg.declare(metadata i32* %a341, metadata !5974, metadata !2614), !dbg !5976
  call void @llvm.dbg.declare(metadata i32* %b342, metadata !5977, metadata !2614), !dbg !5978
  %195 = load i32, i32* %i, align 4, !dbg !5979
  %add343 = add nsw i32 0, %195, !dbg !5980
  %idxprom344 = sext i32 %add343 to i64, !dbg !5981
  %arrayidx345 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom344, !dbg !5981
  %196 = load i32, i32* %arrayidx345, align 4, !dbg !5981
  store i32 %196, i32* %a341, align 4, !dbg !5982
  %197 = load i32, i32* %i, align 4, !dbg !5983
  %add346 = add nsw i32 16, %197, !dbg !5984
  %idxprom347 = sext i32 %add346 to i64, !dbg !5985
  %arrayidx348 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom347, !dbg !5985
  %198 = load i32, i32* %arrayidx348, align 4, !dbg !5985
  store i32 %198, i32* %b342, align 4, !dbg !5986
  %199 = load i32, i32* %a341, align 4, !dbg !5987
  %200 = load i32, i32* %b342, align 4, !dbg !5988
  %add349 = add nsw i32 %199, %200, !dbg !5989
  %201 = load i32, i32* %i, align 4, !dbg !5990
  %add350 = add nsw i32 0, %201, !dbg !5991
  %idxprom351 = sext i32 %add350 to i64, !dbg !5992
  %arrayidx352 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom351, !dbg !5992
  store i32 %add349, i32* %arrayidx352, align 4, !dbg !5993
  %202 = load i32, i32* %a341, align 4, !dbg !5994
  %203 = load i32, i32* %b342, align 4, !dbg !5995
  %sub353 = sub nsw i32 %202, %203, !dbg !5996
  %204 = load i32, i32* %i, align 4, !dbg !5997
  %add354 = add nsw i32 16, %204, !dbg !5998
  %idxprom355 = sext i32 %add354 to i64, !dbg !5999
  %arrayidx356 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom355, !dbg !5999
  store i32 %sub353, i32* %arrayidx356, align 4, !dbg !6000
  call void @llvm.dbg.declare(metadata i32* %a357, metadata !6001, metadata !2614), !dbg !6003
  call void @llvm.dbg.declare(metadata i32* %b358, metadata !6004, metadata !2614), !dbg !6005
  %205 = load i32, i32* %i, align 4, !dbg !6006
  %add359 = add nsw i32 8, %205, !dbg !6007
  %idxprom360 = sext i32 %add359 to i64, !dbg !6008
  %arrayidx361 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom360, !dbg !6008
  %206 = load i32, i32* %arrayidx361, align 4, !dbg !6008
  store i32 %206, i32* %a357, align 4, !dbg !6009
  %207 = load i32, i32* %i, align 4, !dbg !6010
  %add362 = add nsw i32 24, %207, !dbg !6011
  %idxprom363 = sext i32 %add362 to i64, !dbg !6012
  %arrayidx364 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom363, !dbg !6012
  %208 = load i32, i32* %arrayidx364, align 4, !dbg !6012
  store i32 %208, i32* %b358, align 4, !dbg !6013
  %209 = load i32, i32* %a357, align 4, !dbg !6014
  %210 = load i32, i32* %b358, align 4, !dbg !6015
  %add365 = add nsw i32 %209, %210, !dbg !6016
  %211 = load i32, i32* %i, align 4, !dbg !6017
  %add366 = add nsw i32 8, %211, !dbg !6018
  %idxprom367 = sext i32 %add366 to i64, !dbg !6019
  %arrayidx368 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom367, !dbg !6019
  store i32 %add365, i32* %arrayidx368, align 4, !dbg !6020
  %212 = load i32, i32* %a357, align 4, !dbg !6021
  %213 = load i32, i32* %b358, align 4, !dbg !6022
  %sub369 = sub nsw i32 %212, %213, !dbg !6023
  %214 = load i32, i32* %i, align 4, !dbg !6024
  %add370 = add nsw i32 24, %214, !dbg !6025
  %idxprom371 = sext i32 %add370 to i64, !dbg !6026
  %arrayidx372 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom371, !dbg !6026
  store i32 %sub369, i32* %arrayidx372, align 4, !dbg !6027
  call void @llvm.dbg.declare(metadata i32* %a373, metadata !6028, metadata !2614), !dbg !6030
  call void @llvm.dbg.declare(metadata i32* %b374, metadata !6031, metadata !2614), !dbg !6032
  %215 = load i32, i32* %i, align 4, !dbg !6033
  %add375 = add nsw i32 32, %215, !dbg !6034
  %idxprom376 = sext i32 %add375 to i64, !dbg !6035
  %arrayidx377 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom376, !dbg !6035
  %216 = load i32, i32* %arrayidx377, align 4, !dbg !6035
  store i32 %216, i32* %a373, align 4, !dbg !6036
  %217 = load i32, i32* %i, align 4, !dbg !6037
  %add378 = add nsw i32 48, %217, !dbg !6038
  %idxprom379 = sext i32 %add378 to i64, !dbg !6039
  %arrayidx380 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom379, !dbg !6039
  %218 = load i32, i32* %arrayidx380, align 4, !dbg !6039
  store i32 %218, i32* %b374, align 4, !dbg !6040
  %219 = load i32, i32* %a373, align 4, !dbg !6041
  %220 = load i32, i32* %b374, align 4, !dbg !6042
  %add381 = add nsw i32 %219, %220, !dbg !6043
  %221 = load i32, i32* %i, align 4, !dbg !6044
  %add382 = add nsw i32 32, %221, !dbg !6045
  %idxprom383 = sext i32 %add382 to i64, !dbg !6046
  %arrayidx384 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom383, !dbg !6046
  store i32 %add381, i32* %arrayidx384, align 4, !dbg !6047
  %222 = load i32, i32* %a373, align 4, !dbg !6048
  %223 = load i32, i32* %b374, align 4, !dbg !6049
  %sub385 = sub nsw i32 %222, %223, !dbg !6050
  %224 = load i32, i32* %i, align 4, !dbg !6051
  %add386 = add nsw i32 48, %224, !dbg !6052
  %idxprom387 = sext i32 %add386 to i64, !dbg !6053
  %arrayidx388 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom387, !dbg !6053
  store i32 %sub385, i32* %arrayidx388, align 4, !dbg !6054
  call void @llvm.dbg.declare(metadata i32* %a389, metadata !6055, metadata !2614), !dbg !6057
  call void @llvm.dbg.declare(metadata i32* %b390, metadata !6058, metadata !2614), !dbg !6059
  %225 = load i32, i32* %i, align 4, !dbg !6060
  %add391 = add nsw i32 40, %225, !dbg !6061
  %idxprom392 = sext i32 %add391 to i64, !dbg !6062
  %arrayidx393 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom392, !dbg !6062
  %226 = load i32, i32* %arrayidx393, align 4, !dbg !6062
  store i32 %226, i32* %a389, align 4, !dbg !6063
  %227 = load i32, i32* %i, align 4, !dbg !6064
  %add394 = add nsw i32 56, %227, !dbg !6065
  %idxprom395 = sext i32 %add394 to i64, !dbg !6066
  %arrayidx396 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom395, !dbg !6066
  %228 = load i32, i32* %arrayidx396, align 4, !dbg !6066
  store i32 %228, i32* %b390, align 4, !dbg !6067
  %229 = load i32, i32* %a389, align 4, !dbg !6068
  %230 = load i32, i32* %b390, align 4, !dbg !6069
  %add397 = add nsw i32 %229, %230, !dbg !6070
  %231 = load i32, i32* %i, align 4, !dbg !6071
  %add398 = add nsw i32 40, %231, !dbg !6072
  %idxprom399 = sext i32 %add398 to i64, !dbg !6073
  %arrayidx400 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom399, !dbg !6073
  store i32 %add397, i32* %arrayidx400, align 4, !dbg !6074
  %232 = load i32, i32* %a389, align 4, !dbg !6075
  %233 = load i32, i32* %b390, align 4, !dbg !6076
  %sub401 = sub nsw i32 %232, %233, !dbg !6077
  %234 = load i32, i32* %i, align 4, !dbg !6078
  %add402 = add nsw i32 56, %234, !dbg !6079
  %idxprom403 = sext i32 %add402 to i64, !dbg !6080
  %arrayidx404 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom403, !dbg !6080
  store i32 %sub401, i32* %arrayidx404, align 4, !dbg !6081
  %235 = load i32, i32* %i, align 4, !dbg !6082
  %add405 = add nsw i32 0, %235, !dbg !6083
  %idxprom406 = sext i32 %add405 to i64, !dbg !6084
  %arrayidx407 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom406, !dbg !6084
  %236 = load i32, i32* %arrayidx407, align 4, !dbg !6084
  %237 = load i32, i32* %i, align 4, !dbg !6085
  %add408 = add nsw i32 32, %237, !dbg !6086
  %idxprom409 = sext i32 %add408 to i64, !dbg !6087
  %arrayidx410 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom409, !dbg !6087
  %238 = load i32, i32* %arrayidx410, align 4, !dbg !6087
  %add411 = add nsw i32 %236, %238, !dbg !6088
  %cmp412 = icmp sge i32 %add411, 0, !dbg !6089
  br i1 %cmp412, label %cond.true, label %cond.false, !dbg !6090

cond.true:                                        ; preds = %for.body276
  %239 = load i32, i32* %i, align 4, !dbg !6091
  %add414 = add nsw i32 0, %239, !dbg !6093
  %idxprom415 = sext i32 %add414 to i64, !dbg !6094
  %arrayidx416 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom415, !dbg !6094
  %240 = load i32, i32* %arrayidx416, align 4, !dbg !6094
  %241 = load i32, i32* %i, align 4, !dbg !6095
  %add417 = add nsw i32 32, %241, !dbg !6096
  %idxprom418 = sext i32 %add417 to i64, !dbg !6097
  %arrayidx419 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom418, !dbg !6097
  %242 = load i32, i32* %arrayidx419, align 4, !dbg !6097
  %add420 = add nsw i32 %240, %242, !dbg !6098
  br label %cond.end, !dbg !6099

cond.false:                                       ; preds = %for.body276
  %243 = load i32, i32* %i, align 4, !dbg !6100
  %add421 = add nsw i32 0, %243, !dbg !6102
  %idxprom422 = sext i32 %add421 to i64, !dbg !6103
  %arrayidx423 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom422, !dbg !6103
  %244 = load i32, i32* %arrayidx423, align 4, !dbg !6103
  %245 = load i32, i32* %i, align 4, !dbg !6104
  %add424 = add nsw i32 32, %245, !dbg !6105
  %idxprom425 = sext i32 %add424 to i64, !dbg !6106
  %arrayidx426 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom425, !dbg !6106
  %246 = load i32, i32* %arrayidx426, align 4, !dbg !6106
  %add427 = add nsw i32 %244, %246, !dbg !6107
  %sub428 = sub nsw i32 0, %add427, !dbg !6108
  br label %cond.end, !dbg !6109

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add420, %cond.true ], [ %sub428, %cond.false ], !dbg !6110
  %247 = load i32, i32* %i, align 4, !dbg !6112
  %add429 = add nsw i32 0, %247, !dbg !6113
  %idxprom430 = sext i32 %add429 to i64, !dbg !6114
  %arrayidx431 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom430, !dbg !6114
  %248 = load i32, i32* %arrayidx431, align 4, !dbg !6114
  %249 = load i32, i32* %i, align 4, !dbg !6115
  %add432 = add nsw i32 32, %249, !dbg !6116
  %idxprom433 = sext i32 %add432 to i64, !dbg !6117
  %arrayidx434 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom433, !dbg !6117
  %250 = load i32, i32* %arrayidx434, align 4, !dbg !6117
  %sub435 = sub nsw i32 %248, %250, !dbg !6118
  %cmp436 = icmp sge i32 %sub435, 0, !dbg !6119
  br i1 %cmp436, label %cond.true438, label %cond.false446, !dbg !6120

cond.true438:                                     ; preds = %cond.end
  %251 = load i32, i32* %i, align 4, !dbg !6121
  %add439 = add nsw i32 0, %251, !dbg !6123
  %idxprom440 = sext i32 %add439 to i64, !dbg !6124
  %arrayidx441 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom440, !dbg !6124
  %252 = load i32, i32* %arrayidx441, align 4, !dbg !6124
  %253 = load i32, i32* %i, align 4, !dbg !6125
  %add442 = add nsw i32 32, %253, !dbg !6126
  %idxprom443 = sext i32 %add442 to i64, !dbg !6127
  %arrayidx444 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom443, !dbg !6127
  %254 = load i32, i32* %arrayidx444, align 4, !dbg !6127
  %sub445 = sub nsw i32 %252, %254, !dbg !6128
  br label %cond.end455, !dbg !6129

cond.false446:                                    ; preds = %cond.end
  %255 = load i32, i32* %i, align 4, !dbg !6130
  %add447 = add nsw i32 0, %255, !dbg !6132
  %idxprom448 = sext i32 %add447 to i64, !dbg !6133
  %arrayidx449 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom448, !dbg !6133
  %256 = load i32, i32* %arrayidx449, align 4, !dbg !6133
  %257 = load i32, i32* %i, align 4, !dbg !6134
  %add450 = add nsw i32 32, %257, !dbg !6135
  %idxprom451 = sext i32 %add450 to i64, !dbg !6136
  %arrayidx452 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom451, !dbg !6136
  %258 = load i32, i32* %arrayidx452, align 4, !dbg !6136
  %sub453 = sub nsw i32 %256, %258, !dbg !6137
  %sub454 = sub nsw i32 0, %sub453, !dbg !6138
  br label %cond.end455, !dbg !6139

cond.end455:                                      ; preds = %cond.false446, %cond.true438
  %cond456 = phi i32 [ %sub445, %cond.true438 ], [ %sub454, %cond.false446 ], !dbg !6140
  %add457 = add nsw i32 %cond, %cond456, !dbg !6142
  %259 = load i32, i32* %i, align 4, !dbg !6143
  %add458 = add nsw i32 8, %259, !dbg !6144
  %idxprom459 = sext i32 %add458 to i64, !dbg !6145
  %arrayidx460 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom459, !dbg !6145
  %260 = load i32, i32* %arrayidx460, align 4, !dbg !6145
  %261 = load i32, i32* %i, align 4, !dbg !6146
  %add461 = add nsw i32 40, %261, !dbg !6147
  %idxprom462 = sext i32 %add461 to i64, !dbg !6148
  %arrayidx463 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom462, !dbg !6148
  %262 = load i32, i32* %arrayidx463, align 4, !dbg !6148
  %add464 = add nsw i32 %260, %262, !dbg !6149
  %cmp465 = icmp sge i32 %add464, 0, !dbg !6150
  br i1 %cmp465, label %cond.true467, label %cond.false475, !dbg !6151

cond.true467:                                     ; preds = %cond.end455
  %263 = load i32, i32* %i, align 4, !dbg !6152
  %add468 = add nsw i32 8, %263, !dbg !6153
  %idxprom469 = sext i32 %add468 to i64, !dbg !6154
  %arrayidx470 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom469, !dbg !6154
  %264 = load i32, i32* %arrayidx470, align 4, !dbg !6154
  %265 = load i32, i32* %i, align 4, !dbg !6155
  %add471 = add nsw i32 40, %265, !dbg !6156
  %idxprom472 = sext i32 %add471 to i64, !dbg !6157
  %arrayidx473 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom472, !dbg !6157
  %266 = load i32, i32* %arrayidx473, align 4, !dbg !6157
  %add474 = add nsw i32 %264, %266, !dbg !6158
  br label %cond.end484, !dbg !6159

cond.false475:                                    ; preds = %cond.end455
  %267 = load i32, i32* %i, align 4, !dbg !6160
  %add476 = add nsw i32 8, %267, !dbg !6161
  %idxprom477 = sext i32 %add476 to i64, !dbg !6162
  %arrayidx478 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom477, !dbg !6162
  %268 = load i32, i32* %arrayidx478, align 4, !dbg !6162
  %269 = load i32, i32* %i, align 4, !dbg !6163
  %add479 = add nsw i32 40, %269, !dbg !6164
  %idxprom480 = sext i32 %add479 to i64, !dbg !6165
  %arrayidx481 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom480, !dbg !6165
  %270 = load i32, i32* %arrayidx481, align 4, !dbg !6165
  %add482 = add nsw i32 %268, %270, !dbg !6166
  %sub483 = sub nsw i32 0, %add482, !dbg !6167
  br label %cond.end484, !dbg !6168

cond.end484:                                      ; preds = %cond.false475, %cond.true467
  %cond485 = phi i32 [ %add474, %cond.true467 ], [ %sub483, %cond.false475 ], !dbg !6169
  %271 = load i32, i32* %i, align 4, !dbg !6170
  %add486 = add nsw i32 8, %271, !dbg !6171
  %idxprom487 = sext i32 %add486 to i64, !dbg !6172
  %arrayidx488 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom487, !dbg !6172
  %272 = load i32, i32* %arrayidx488, align 4, !dbg !6172
  %273 = load i32, i32* %i, align 4, !dbg !6173
  %add489 = add nsw i32 40, %273, !dbg !6174
  %idxprom490 = sext i32 %add489 to i64, !dbg !6175
  %arrayidx491 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom490, !dbg !6175
  %274 = load i32, i32* %arrayidx491, align 4, !dbg !6175
  %sub492 = sub nsw i32 %272, %274, !dbg !6176
  %cmp493 = icmp sge i32 %sub492, 0, !dbg !6177
  br i1 %cmp493, label %cond.true495, label %cond.false503, !dbg !6178

cond.true495:                                     ; preds = %cond.end484
  %275 = load i32, i32* %i, align 4, !dbg !6179
  %add496 = add nsw i32 8, %275, !dbg !6180
  %idxprom497 = sext i32 %add496 to i64, !dbg !6181
  %arrayidx498 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom497, !dbg !6181
  %276 = load i32, i32* %arrayidx498, align 4, !dbg !6181
  %277 = load i32, i32* %i, align 4, !dbg !6182
  %add499 = add nsw i32 40, %277, !dbg !6183
  %idxprom500 = sext i32 %add499 to i64, !dbg !6184
  %arrayidx501 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom500, !dbg !6184
  %278 = load i32, i32* %arrayidx501, align 4, !dbg !6184
  %sub502 = sub nsw i32 %276, %278, !dbg !6185
  br label %cond.end512, !dbg !6186

cond.false503:                                    ; preds = %cond.end484
  %279 = load i32, i32* %i, align 4, !dbg !6187
  %add504 = add nsw i32 8, %279, !dbg !6188
  %idxprom505 = sext i32 %add504 to i64, !dbg !6189
  %arrayidx506 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom505, !dbg !6189
  %280 = load i32, i32* %arrayidx506, align 4, !dbg !6189
  %281 = load i32, i32* %i, align 4, !dbg !6190
  %add507 = add nsw i32 40, %281, !dbg !6191
  %idxprom508 = sext i32 %add507 to i64, !dbg !6192
  %arrayidx509 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom508, !dbg !6192
  %282 = load i32, i32* %arrayidx509, align 4, !dbg !6192
  %sub510 = sub nsw i32 %280, %282, !dbg !6193
  %sub511 = sub nsw i32 0, %sub510, !dbg !6194
  br label %cond.end512, !dbg !6195

cond.end512:                                      ; preds = %cond.false503, %cond.true495
  %cond513 = phi i32 [ %sub502, %cond.true495 ], [ %sub511, %cond.false503 ], !dbg !6196
  %add514 = add nsw i32 %cond485, %cond513, !dbg !6197
  %add515 = add nsw i32 %add457, %add514, !dbg !6198
  %283 = load i32, i32* %i, align 4, !dbg !6199
  %add516 = add nsw i32 16, %283, !dbg !6200
  %idxprom517 = sext i32 %add516 to i64, !dbg !6201
  %arrayidx518 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom517, !dbg !6201
  %284 = load i32, i32* %arrayidx518, align 4, !dbg !6201
  %285 = load i32, i32* %i, align 4, !dbg !6202
  %add519 = add nsw i32 48, %285, !dbg !6203
  %idxprom520 = sext i32 %add519 to i64, !dbg !6204
  %arrayidx521 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom520, !dbg !6204
  %286 = load i32, i32* %arrayidx521, align 4, !dbg !6204
  %add522 = add nsw i32 %284, %286, !dbg !6205
  %cmp523 = icmp sge i32 %add522, 0, !dbg !6206
  br i1 %cmp523, label %cond.true525, label %cond.false533, !dbg !6207

cond.true525:                                     ; preds = %cond.end512
  %287 = load i32, i32* %i, align 4, !dbg !6208
  %add526 = add nsw i32 16, %287, !dbg !6209
  %idxprom527 = sext i32 %add526 to i64, !dbg !6210
  %arrayidx528 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom527, !dbg !6210
  %288 = load i32, i32* %arrayidx528, align 4, !dbg !6210
  %289 = load i32, i32* %i, align 4, !dbg !6211
  %add529 = add nsw i32 48, %289, !dbg !6212
  %idxprom530 = sext i32 %add529 to i64, !dbg !6213
  %arrayidx531 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom530, !dbg !6213
  %290 = load i32, i32* %arrayidx531, align 4, !dbg !6213
  %add532 = add nsw i32 %288, %290, !dbg !6214
  br label %cond.end542, !dbg !6215

cond.false533:                                    ; preds = %cond.end512
  %291 = load i32, i32* %i, align 4, !dbg !6216
  %add534 = add nsw i32 16, %291, !dbg !6217
  %idxprom535 = sext i32 %add534 to i64, !dbg !6218
  %arrayidx536 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom535, !dbg !6218
  %292 = load i32, i32* %arrayidx536, align 4, !dbg !6218
  %293 = load i32, i32* %i, align 4, !dbg !6219
  %add537 = add nsw i32 48, %293, !dbg !6220
  %idxprom538 = sext i32 %add537 to i64, !dbg !6221
  %arrayidx539 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom538, !dbg !6221
  %294 = load i32, i32* %arrayidx539, align 4, !dbg !6221
  %add540 = add nsw i32 %292, %294, !dbg !6222
  %sub541 = sub nsw i32 0, %add540, !dbg !6223
  br label %cond.end542, !dbg !6224

cond.end542:                                      ; preds = %cond.false533, %cond.true525
  %cond543 = phi i32 [ %add532, %cond.true525 ], [ %sub541, %cond.false533 ], !dbg !6225
  %295 = load i32, i32* %i, align 4, !dbg !6226
  %add544 = add nsw i32 16, %295, !dbg !6227
  %idxprom545 = sext i32 %add544 to i64, !dbg !6228
  %arrayidx546 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom545, !dbg !6228
  %296 = load i32, i32* %arrayidx546, align 4, !dbg !6228
  %297 = load i32, i32* %i, align 4, !dbg !6229
  %add547 = add nsw i32 48, %297, !dbg !6230
  %idxprom548 = sext i32 %add547 to i64, !dbg !6231
  %arrayidx549 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom548, !dbg !6231
  %298 = load i32, i32* %arrayidx549, align 4, !dbg !6231
  %sub550 = sub nsw i32 %296, %298, !dbg !6232
  %cmp551 = icmp sge i32 %sub550, 0, !dbg !6233
  br i1 %cmp551, label %cond.true553, label %cond.false561, !dbg !6234

cond.true553:                                     ; preds = %cond.end542
  %299 = load i32, i32* %i, align 4, !dbg !6235
  %add554 = add nsw i32 16, %299, !dbg !6236
  %idxprom555 = sext i32 %add554 to i64, !dbg !6237
  %arrayidx556 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom555, !dbg !6237
  %300 = load i32, i32* %arrayidx556, align 4, !dbg !6237
  %301 = load i32, i32* %i, align 4, !dbg !6238
  %add557 = add nsw i32 48, %301, !dbg !6239
  %idxprom558 = sext i32 %add557 to i64, !dbg !6240
  %arrayidx559 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom558, !dbg !6240
  %302 = load i32, i32* %arrayidx559, align 4, !dbg !6240
  %sub560 = sub nsw i32 %300, %302, !dbg !6241
  br label %cond.end570, !dbg !6242

cond.false561:                                    ; preds = %cond.end542
  %303 = load i32, i32* %i, align 4, !dbg !6243
  %add562 = add nsw i32 16, %303, !dbg !6244
  %idxprom563 = sext i32 %add562 to i64, !dbg !6245
  %arrayidx564 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom563, !dbg !6245
  %304 = load i32, i32* %arrayidx564, align 4, !dbg !6245
  %305 = load i32, i32* %i, align 4, !dbg !6246
  %add565 = add nsw i32 48, %305, !dbg !6247
  %idxprom566 = sext i32 %add565 to i64, !dbg !6248
  %arrayidx567 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom566, !dbg !6248
  %306 = load i32, i32* %arrayidx567, align 4, !dbg !6248
  %sub568 = sub nsw i32 %304, %306, !dbg !6249
  %sub569 = sub nsw i32 0, %sub568, !dbg !6250
  br label %cond.end570, !dbg !6251

cond.end570:                                      ; preds = %cond.false561, %cond.true553
  %cond571 = phi i32 [ %sub560, %cond.true553 ], [ %sub569, %cond.false561 ], !dbg !6252
  %add572 = add nsw i32 %cond543, %cond571, !dbg !6253
  %add573 = add nsw i32 %add515, %add572, !dbg !6254
  %307 = load i32, i32* %i, align 4, !dbg !6255
  %add574 = add nsw i32 24, %307, !dbg !6256
  %idxprom575 = sext i32 %add574 to i64, !dbg !6257
  %arrayidx576 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom575, !dbg !6257
  %308 = load i32, i32* %arrayidx576, align 4, !dbg !6257
  %309 = load i32, i32* %i, align 4, !dbg !6258
  %add577 = add nsw i32 56, %309, !dbg !6259
  %idxprom578 = sext i32 %add577 to i64, !dbg !6260
  %arrayidx579 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom578, !dbg !6260
  %310 = load i32, i32* %arrayidx579, align 4, !dbg !6260
  %add580 = add nsw i32 %308, %310, !dbg !6261
  %cmp581 = icmp sge i32 %add580, 0, !dbg !6262
  br i1 %cmp581, label %cond.true583, label %cond.false591, !dbg !6263

cond.true583:                                     ; preds = %cond.end570
  %311 = load i32, i32* %i, align 4, !dbg !6264
  %add584 = add nsw i32 24, %311, !dbg !6265
  %idxprom585 = sext i32 %add584 to i64, !dbg !6266
  %arrayidx586 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom585, !dbg !6266
  %312 = load i32, i32* %arrayidx586, align 4, !dbg !6266
  %313 = load i32, i32* %i, align 4, !dbg !6267
  %add587 = add nsw i32 56, %313, !dbg !6268
  %idxprom588 = sext i32 %add587 to i64, !dbg !6269
  %arrayidx589 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom588, !dbg !6269
  %314 = load i32, i32* %arrayidx589, align 4, !dbg !6269
  %add590 = add nsw i32 %312, %314, !dbg !6270
  br label %cond.end600, !dbg !6271

cond.false591:                                    ; preds = %cond.end570
  %315 = load i32, i32* %i, align 4, !dbg !6272
  %add592 = add nsw i32 24, %315, !dbg !6273
  %idxprom593 = sext i32 %add592 to i64, !dbg !6274
  %arrayidx594 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom593, !dbg !6274
  %316 = load i32, i32* %arrayidx594, align 4, !dbg !6274
  %317 = load i32, i32* %i, align 4, !dbg !6275
  %add595 = add nsw i32 56, %317, !dbg !6276
  %idxprom596 = sext i32 %add595 to i64, !dbg !6277
  %arrayidx597 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom596, !dbg !6277
  %318 = load i32, i32* %arrayidx597, align 4, !dbg !6277
  %add598 = add nsw i32 %316, %318, !dbg !6278
  %sub599 = sub nsw i32 0, %add598, !dbg !6279
  br label %cond.end600, !dbg !6280

cond.end600:                                      ; preds = %cond.false591, %cond.true583
  %cond601 = phi i32 [ %add590, %cond.true583 ], [ %sub599, %cond.false591 ], !dbg !6281
  %319 = load i32, i32* %i, align 4, !dbg !6282
  %add602 = add nsw i32 24, %319, !dbg !6283
  %idxprom603 = sext i32 %add602 to i64, !dbg !6284
  %arrayidx604 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom603, !dbg !6284
  %320 = load i32, i32* %arrayidx604, align 4, !dbg !6284
  %321 = load i32, i32* %i, align 4, !dbg !6285
  %add605 = add nsw i32 56, %321, !dbg !6286
  %idxprom606 = sext i32 %add605 to i64, !dbg !6287
  %arrayidx607 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom606, !dbg !6287
  %322 = load i32, i32* %arrayidx607, align 4, !dbg !6287
  %sub608 = sub nsw i32 %320, %322, !dbg !6288
  %cmp609 = icmp sge i32 %sub608, 0, !dbg !6289
  br i1 %cmp609, label %cond.true611, label %cond.false619, !dbg !6290

cond.true611:                                     ; preds = %cond.end600
  %323 = load i32, i32* %i, align 4, !dbg !6291
  %add612 = add nsw i32 24, %323, !dbg !6292
  %idxprom613 = sext i32 %add612 to i64, !dbg !6293
  %arrayidx614 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom613, !dbg !6293
  %324 = load i32, i32* %arrayidx614, align 4, !dbg !6293
  %325 = load i32, i32* %i, align 4, !dbg !6294
  %add615 = add nsw i32 56, %325, !dbg !6295
  %idxprom616 = sext i32 %add615 to i64, !dbg !6296
  %arrayidx617 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom616, !dbg !6296
  %326 = load i32, i32* %arrayidx617, align 4, !dbg !6296
  %sub618 = sub nsw i32 %324, %326, !dbg !6297
  br label %cond.end628, !dbg !6298

cond.false619:                                    ; preds = %cond.end600
  %327 = load i32, i32* %i, align 4, !dbg !6299
  %add620 = add nsw i32 24, %327, !dbg !6300
  %idxprom621 = sext i32 %add620 to i64, !dbg !6301
  %arrayidx622 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom621, !dbg !6301
  %328 = load i32, i32* %arrayidx622, align 4, !dbg !6301
  %329 = load i32, i32* %i, align 4, !dbg !6302
  %add623 = add nsw i32 56, %329, !dbg !6303
  %idxprom624 = sext i32 %add623 to i64, !dbg !6304
  %arrayidx625 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 %idxprom624, !dbg !6304
  %330 = load i32, i32* %arrayidx625, align 4, !dbg !6304
  %sub626 = sub nsw i32 %328, %330, !dbg !6305
  %sub627 = sub nsw i32 0, %sub626, !dbg !6306
  br label %cond.end628, !dbg !6307

cond.end628:                                      ; preds = %cond.false619, %cond.true611
  %cond629 = phi i32 [ %sub618, %cond.true611 ], [ %sub627, %cond.false619 ], !dbg !6308
  %add630 = add nsw i32 %cond601, %cond629, !dbg !6309
  %add631 = add nsw i32 %add573, %add630, !dbg !6310
  %331 = load i32, i32* %sum, align 4, !dbg !6311
  %add632 = add nsw i32 %331, %add631, !dbg !6311
  store i32 %add632, i32* %sum, align 4, !dbg !6311
  br label %for.inc633, !dbg !6312

for.inc633:                                       ; preds = %cond.end628
  %332 = load i32, i32* %i, align 4, !dbg !6313
  %inc634 = add nsw i32 %332, 1, !dbg !6313
  store i32 %inc634, i32* %i, align 4, !dbg !6313
  br label %for.cond273, !dbg !6315, !llvm.loop !6316

for.end635:                                       ; preds = %for.cond273
  %arrayidx636 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 0, !dbg !6318
  %333 = load i32, i32* %arrayidx636, align 16, !dbg !6318
  %arrayidx637 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 32, !dbg !6319
  %334 = load i32, i32* %arrayidx637, align 16, !dbg !6319
  %add638 = add nsw i32 %333, %334, !dbg !6320
  %cmp639 = icmp sge i32 %add638, 0, !dbg !6321
  br i1 %cmp639, label %cond.true641, label %cond.false645, !dbg !6322

cond.true641:                                     ; preds = %for.end635
  %arrayidx642 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 0, !dbg !6323
  %335 = load i32, i32* %arrayidx642, align 16, !dbg !6323
  %arrayidx643 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 32, !dbg !6325
  %336 = load i32, i32* %arrayidx643, align 16, !dbg !6325
  %add644 = add nsw i32 %335, %336, !dbg !6326
  br label %cond.end650, !dbg !6327

cond.false645:                                    ; preds = %for.end635
  %arrayidx646 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 0, !dbg !6328
  %337 = load i32, i32* %arrayidx646, align 16, !dbg !6328
  %arrayidx647 = getelementptr inbounds [64 x i32], [64 x i32]* %temp, i64 0, i64 32, !dbg !6330
  %338 = load i32, i32* %arrayidx647, align 16, !dbg !6330
  %add648 = add nsw i32 %337, %338, !dbg !6331
  %sub649 = sub nsw i32 0, %add648, !dbg !6332
  br label %cond.end650, !dbg !6333

cond.end650:                                      ; preds = %cond.false645, %cond.true641
  %cond651 = phi i32 [ %add644, %cond.true641 ], [ %sub649, %cond.false645 ], !dbg !6334
  %339 = load i32, i32* %sum, align 4, !dbg !6336
  %sub652 = sub nsw i32 %339, %cond651, !dbg !6336
  store i32 %sub652, i32* %sum, align 4, !dbg !6336
  %340 = load i32, i32* %sum, align 4, !dbg !6337
  ret i32 %340, !dbg !6338
}

; Function Attrs: nounwind uwtable
define internal i32 @dct_sad16_c(%struct.MpegEncContext* %s, i8* %dst, i8* %src, i64 %stride, i32 %h) #0 !dbg !6339 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !6340, metadata !2614), !dbg !6341
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6342, metadata !2614), !dbg !6343
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6344, metadata !2614), !dbg !6345
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !6346, metadata !2614), !dbg !6347
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6348, metadata !2614), !dbg !6349
  call void @llvm.dbg.declare(metadata i32* %score, metadata !6350, metadata !2614), !dbg !6351
  store i32 0, i32* %score, align 4, !dbg !6351
  %0 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6352
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !6353
  %2 = load i8*, i8** %src.addr, align 8, !dbg !6354
  %3 = load i64, i64* %stride.addr, align 8, !dbg !6355
  %call = call i32 @dct_sad8x8_c(%struct.MpegEncContext* %0, i8* %1, i8* %2, i64 %3, i32 8), !dbg !6356
  %4 = load i32, i32* %score, align 4, !dbg !6357
  %add = add nsw i32 %4, %call, !dbg !6357
  store i32 %add, i32* %score, align 4, !dbg !6357
  %5 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6358
  %6 = load i8*, i8** %dst.addr, align 8, !dbg !6359
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 8, !dbg !6360
  %7 = load i8*, i8** %src.addr, align 8, !dbg !6361
  %add.ptr1 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !6362
  %8 = load i64, i64* %stride.addr, align 8, !dbg !6363
  %call2 = call i32 @dct_sad8x8_c(%struct.MpegEncContext* %5, i8* %add.ptr, i8* %add.ptr1, i64 %8, i32 8), !dbg !6364
  %9 = load i32, i32* %score, align 4, !dbg !6366
  %add3 = add nsw i32 %9, %call2, !dbg !6366
  store i32 %add3, i32* %score, align 4, !dbg !6366
  %10 = load i32, i32* %h.addr, align 4, !dbg !6367
  %cmp = icmp eq i32 %10, 16, !dbg !6369
  br i1 %cmp, label %if.then, label %if.end, !dbg !6370

if.then:                                          ; preds = %entry
  %11 = load i64, i64* %stride.addr, align 8, !dbg !6371
  %mul = mul nsw i64 8, %11, !dbg !6374
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !6375
  %add.ptr4 = getelementptr inbounds i8, i8* %12, i64 %mul, !dbg !6375
  store i8* %add.ptr4, i8** %dst.addr, align 8, !dbg !6375
  %13 = load i64, i64* %stride.addr, align 8, !dbg !6376
  %mul5 = mul nsw i64 8, %13, !dbg !6377
  %14 = load i8*, i8** %src.addr, align 8, !dbg !6378
  %add.ptr6 = getelementptr inbounds i8, i8* %14, i64 %mul5, !dbg !6378
  store i8* %add.ptr6, i8** %src.addr, align 8, !dbg !6378
  %15 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6379
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !6380
  %17 = load i8*, i8** %src.addr, align 8, !dbg !6381
  %18 = load i64, i64* %stride.addr, align 8, !dbg !6382
  %call7 = call i32 @dct_sad8x8_c(%struct.MpegEncContext* %15, i8* %16, i8* %17, i64 %18, i32 8), !dbg !6383
  %19 = load i32, i32* %score, align 4, !dbg !6384
  %add8 = add nsw i32 %19, %call7, !dbg !6384
  store i32 %add8, i32* %score, align 4, !dbg !6384
  %20 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6385
  %21 = load i8*, i8** %dst.addr, align 8, !dbg !6386
  %add.ptr9 = getelementptr inbounds i8, i8* %21, i64 8, !dbg !6387
  %22 = load i8*, i8** %src.addr, align 8, !dbg !6388
  %add.ptr10 = getelementptr inbounds i8, i8* %22, i64 8, !dbg !6389
  %23 = load i64, i64* %stride.addr, align 8, !dbg !6390
  %call11 = call i32 @dct_sad8x8_c(%struct.MpegEncContext* %20, i8* %add.ptr9, i8* %add.ptr10, i64 %23, i32 8), !dbg !6391
  %24 = load i32, i32* %score, align 4, !dbg !6393
  %add12 = add nsw i32 %24, %call11, !dbg !6393
  store i32 %add12, i32* %score, align 4, !dbg !6393
  br label %if.end, !dbg !6394

if.end:                                           ; preds = %if.then, %entry
  %25 = load i32, i32* %score, align 4, !dbg !6395
  ret i32 %25, !dbg !6397
}

; Function Attrs: nounwind uwtable
define internal i32 @dct_sad8x8_c(%struct.MpegEncContext* %s, i8* %src1, i8* %src2, i64 %stride, i32 %h) #0 !dbg !6398 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %src1.addr = alloca i8*, align 8
  %src2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %la_temp = alloca [64 x i16], align 16
  %temp = alloca i16*, align 8
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !6399, metadata !2614), !dbg !6400
  store i8* %src1, i8** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src1.addr, metadata !6401, metadata !2614), !dbg !6402
  store i8* %src2, i8** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src2.addr, metadata !6403, metadata !2614), !dbg !6404
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !6405, metadata !2614), !dbg !6406
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6407, metadata !2614), !dbg !6408
  call void @llvm.dbg.declare(metadata [64 x i16]* %la_temp, metadata !6409, metadata !2614), !dbg !6410
  call void @llvm.dbg.declare(metadata i16** %temp, metadata !6411, metadata !2614), !dbg !6412
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %la_temp, i32 0, i32 0, !dbg !6413
  store i16* %arraydecay, i16** %temp, align 8, !dbg !6412
  %0 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6414
  %pdsp = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %0, i32 0, i32 105, !dbg !6415
  %diff_pixels_unaligned = getelementptr inbounds %struct.PixblockDSPContext, %struct.PixblockDSPContext* %pdsp, i32 0, i32 2, !dbg !6416
  %1 = load void (i16*, i8*, i8*, i64)*, void (i16*, i8*, i8*, i64)** %diff_pixels_unaligned, align 8, !dbg !6416
  %2 = load i16*, i16** %temp, align 8, !dbg !6417
  %3 = load i8*, i8** %src1.addr, align 8, !dbg !6418
  %4 = load i8*, i8** %src2.addr, align 8, !dbg !6419
  %5 = load i64, i64* %stride.addr, align 8, !dbg !6420
  call void %1(i16* %2, i8* %3, i8* %4, i64 %5), !dbg !6414
  %6 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6421
  %fdsp = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %6, i32 0, i32 98, !dbg !6422
  %fdct = getelementptr inbounds %struct.FDCTDSPContext, %struct.FDCTDSPContext* %fdsp, i32 0, i32 0, !dbg !6423
  %7 = load void (i16*)*, void (i16*)** %fdct, align 8, !dbg !6423
  %8 = load i16*, i16** %temp, align 8, !dbg !6424
  call void %7(i16* %8), !dbg !6421
  %9 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6425
  %mecc = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %9, i32 0, i32 102, !dbg !6426
  %sum_abs_dctelem = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %mecc, i32 0, i32 0, !dbg !6427
  %10 = load i32 (i16*)*, i32 (i16*)** %sum_abs_dctelem, align 8, !dbg !6427
  %11 = load i16*, i16** %temp, align 8, !dbg !6428
  %call = call i32 %10(i16* %11), !dbg !6425
  ret i32 %call, !dbg !6429
}

; Function Attrs: nounwind uwtable
define internal i32 @dct_max16_c(%struct.MpegEncContext* %s, i8* %dst, i8* %src, i64 %stride, i32 %h) #0 !dbg !6430 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !6431, metadata !2614), !dbg !6432
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6433, metadata !2614), !dbg !6434
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6435, metadata !2614), !dbg !6436
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !6437, metadata !2614), !dbg !6438
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6439, metadata !2614), !dbg !6440
  call void @llvm.dbg.declare(metadata i32* %score, metadata !6441, metadata !2614), !dbg !6442
  store i32 0, i32* %score, align 4, !dbg !6442
  %0 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6443
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !6444
  %2 = load i8*, i8** %src.addr, align 8, !dbg !6445
  %3 = load i64, i64* %stride.addr, align 8, !dbg !6446
  %call = call i32 @dct_max8x8_c(%struct.MpegEncContext* %0, i8* %1, i8* %2, i64 %3, i32 8), !dbg !6447
  %4 = load i32, i32* %score, align 4, !dbg !6448
  %add = add nsw i32 %4, %call, !dbg !6448
  store i32 %add, i32* %score, align 4, !dbg !6448
  %5 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6449
  %6 = load i8*, i8** %dst.addr, align 8, !dbg !6450
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 8, !dbg !6451
  %7 = load i8*, i8** %src.addr, align 8, !dbg !6452
  %add.ptr1 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !6453
  %8 = load i64, i64* %stride.addr, align 8, !dbg !6454
  %call2 = call i32 @dct_max8x8_c(%struct.MpegEncContext* %5, i8* %add.ptr, i8* %add.ptr1, i64 %8, i32 8), !dbg !6455
  %9 = load i32, i32* %score, align 4, !dbg !6457
  %add3 = add nsw i32 %9, %call2, !dbg !6457
  store i32 %add3, i32* %score, align 4, !dbg !6457
  %10 = load i32, i32* %h.addr, align 4, !dbg !6458
  %cmp = icmp eq i32 %10, 16, !dbg !6460
  br i1 %cmp, label %if.then, label %if.end, !dbg !6461

if.then:                                          ; preds = %entry
  %11 = load i64, i64* %stride.addr, align 8, !dbg !6462
  %mul = mul nsw i64 8, %11, !dbg !6465
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !6466
  %add.ptr4 = getelementptr inbounds i8, i8* %12, i64 %mul, !dbg !6466
  store i8* %add.ptr4, i8** %dst.addr, align 8, !dbg !6466
  %13 = load i64, i64* %stride.addr, align 8, !dbg !6467
  %mul5 = mul nsw i64 8, %13, !dbg !6468
  %14 = load i8*, i8** %src.addr, align 8, !dbg !6469
  %add.ptr6 = getelementptr inbounds i8, i8* %14, i64 %mul5, !dbg !6469
  store i8* %add.ptr6, i8** %src.addr, align 8, !dbg !6469
  %15 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6470
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !6471
  %17 = load i8*, i8** %src.addr, align 8, !dbg !6472
  %18 = load i64, i64* %stride.addr, align 8, !dbg !6473
  %call7 = call i32 @dct_max8x8_c(%struct.MpegEncContext* %15, i8* %16, i8* %17, i64 %18, i32 8), !dbg !6474
  %19 = load i32, i32* %score, align 4, !dbg !6475
  %add8 = add nsw i32 %19, %call7, !dbg !6475
  store i32 %add8, i32* %score, align 4, !dbg !6475
  %20 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6476
  %21 = load i8*, i8** %dst.addr, align 8, !dbg !6477
  %add.ptr9 = getelementptr inbounds i8, i8* %21, i64 8, !dbg !6478
  %22 = load i8*, i8** %src.addr, align 8, !dbg !6479
  %add.ptr10 = getelementptr inbounds i8, i8* %22, i64 8, !dbg !6480
  %23 = load i64, i64* %stride.addr, align 8, !dbg !6481
  %call11 = call i32 @dct_max8x8_c(%struct.MpegEncContext* %20, i8* %add.ptr9, i8* %add.ptr10, i64 %23, i32 8), !dbg !6482
  %24 = load i32, i32* %score, align 4, !dbg !6484
  %add12 = add nsw i32 %24, %call11, !dbg !6484
  store i32 %add12, i32* %score, align 4, !dbg !6484
  br label %if.end, !dbg !6485

if.end:                                           ; preds = %if.then, %entry
  %25 = load i32, i32* %score, align 4, !dbg !6486
  ret i32 %25, !dbg !6488
}

; Function Attrs: nounwind uwtable
define internal i32 @dct_max8x8_c(%struct.MpegEncContext* %s, i8* %src1, i8* %src2, i64 %stride, i32 %h) #0 !dbg !6489 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %src1.addr = alloca i8*, align 8
  %src2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %la_temp = alloca [64 x i16], align 16
  %temp = alloca i16*, align 8
  %sum = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !6490, metadata !2614), !dbg !6491
  store i8* %src1, i8** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src1.addr, metadata !6492, metadata !2614), !dbg !6493
  store i8* %src2, i8** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src2.addr, metadata !6494, metadata !2614), !dbg !6495
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !6496, metadata !2614), !dbg !6497
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6498, metadata !2614), !dbg !6499
  call void @llvm.dbg.declare(metadata [64 x i16]* %la_temp, metadata !6500, metadata !2614), !dbg !6501
  call void @llvm.dbg.declare(metadata i16** %temp, metadata !6502, metadata !2614), !dbg !6503
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %la_temp, i32 0, i32 0, !dbg !6504
  store i16* %arraydecay, i16** %temp, align 8, !dbg !6503
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !6505, metadata !2614), !dbg !6506
  store i32 0, i32* %sum, align 4, !dbg !6506
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6507, metadata !2614), !dbg !6508
  %0 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6509
  %pdsp = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %0, i32 0, i32 105, !dbg !6510
  %diff_pixels_unaligned = getelementptr inbounds %struct.PixblockDSPContext, %struct.PixblockDSPContext* %pdsp, i32 0, i32 2, !dbg !6511
  %1 = load void (i16*, i8*, i8*, i64)*, void (i16*, i8*, i8*, i64)** %diff_pixels_unaligned, align 8, !dbg !6511
  %2 = load i16*, i16** %temp, align 8, !dbg !6512
  %3 = load i8*, i8** %src1.addr, align 8, !dbg !6513
  %4 = load i8*, i8** %src2.addr, align 8, !dbg !6514
  %5 = load i64, i64* %stride.addr, align 8, !dbg !6515
  call void %1(i16* %2, i8* %3, i8* %4, i64 %5), !dbg !6509
  %6 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6516
  %fdsp = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %6, i32 0, i32 98, !dbg !6517
  %fdct = getelementptr inbounds %struct.FDCTDSPContext, %struct.FDCTDSPContext* %fdsp, i32 0, i32 0, !dbg !6518
  %7 = load void (i16*)*, void (i16*)** %fdct, align 8, !dbg !6518
  %8 = load i16*, i16** %temp, align 8, !dbg !6519
  call void %7(i16* %8), !dbg !6516
  store i32 0, i32* %i, align 4, !dbg !6520
  br label %for.cond, !dbg !6522

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !6523
  %cmp = icmp slt i32 %9, 64, !dbg !6526
  br i1 %cmp, label %for.body, label %for.end, !dbg !6527

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %sum, align 4, !dbg !6528
  %11 = load i32, i32* %i, align 4, !dbg !6529
  %idxprom = sext i32 %11 to i64, !dbg !6530
  %12 = load i16*, i16** %temp, align 8, !dbg !6530
  %arrayidx = getelementptr inbounds i16, i16* %12, i64 %idxprom, !dbg !6530
  %13 = load i16, i16* %arrayidx, align 2, !dbg !6530
  %conv = sext i16 %13 to i32, !dbg !6531
  %cmp1 = icmp sge i32 %conv, 0, !dbg !6532
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !6531

cond.true:                                        ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !6533
  %idxprom3 = sext i32 %14 to i64, !dbg !6534
  %15 = load i16*, i16** %temp, align 8, !dbg !6534
  %arrayidx4 = getelementptr inbounds i16, i16* %15, i64 %idxprom3, !dbg !6534
  %16 = load i16, i16* %arrayidx4, align 2, !dbg !6534
  %conv5 = sext i16 %16 to i32, !dbg !6535
  br label %cond.end, !dbg !6536

cond.false:                                       ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !6537
  %idxprom6 = sext i32 %17 to i64, !dbg !6539
  %18 = load i16*, i16** %temp, align 8, !dbg !6539
  %arrayidx7 = getelementptr inbounds i16, i16* %18, i64 %idxprom6, !dbg !6539
  %19 = load i16, i16* %arrayidx7, align 2, !dbg !6539
  %conv8 = sext i16 %19 to i32, !dbg !6540
  %sub = sub nsw i32 0, %conv8, !dbg !6541
  br label %cond.end, !dbg !6542

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %sub, %cond.false ], !dbg !6543
  %cmp9 = icmp sgt i32 %10, %cond, !dbg !6545
  br i1 %cmp9, label %cond.true11, label %cond.false12, !dbg !6546

cond.true11:                                      ; preds = %cond.end
  %20 = load i32, i32* %sum, align 4, !dbg !6547
  br label %cond.end29, !dbg !6549

cond.false12:                                     ; preds = %cond.end
  %21 = load i32, i32* %i, align 4, !dbg !6550
  %idxprom13 = sext i32 %21 to i64, !dbg !6552
  %22 = load i16*, i16** %temp, align 8, !dbg !6552
  %arrayidx14 = getelementptr inbounds i16, i16* %22, i64 %idxprom13, !dbg !6552
  %23 = load i16, i16* %arrayidx14, align 2, !dbg !6552
  %conv15 = sext i16 %23 to i32, !dbg !6553
  %cmp16 = icmp sge i32 %conv15, 0, !dbg !6554
  br i1 %cmp16, label %cond.true18, label %cond.false22, !dbg !6553

cond.true18:                                      ; preds = %cond.false12
  %24 = load i32, i32* %i, align 4, !dbg !6555
  %idxprom19 = sext i32 %24 to i64, !dbg !6557
  %25 = load i16*, i16** %temp, align 8, !dbg !6557
  %arrayidx20 = getelementptr inbounds i16, i16* %25, i64 %idxprom19, !dbg !6557
  %26 = load i16, i16* %arrayidx20, align 2, !dbg !6557
  %conv21 = sext i16 %26 to i32, !dbg !6558
  br label %cond.end27, !dbg !6559

cond.false22:                                     ; preds = %cond.false12
  %27 = load i32, i32* %i, align 4, !dbg !6560
  %idxprom23 = sext i32 %27 to i64, !dbg !6562
  %28 = load i16*, i16** %temp, align 8, !dbg !6562
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !6562
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !6562
  %conv25 = sext i16 %29 to i32, !dbg !6563
  %sub26 = sub nsw i32 0, %conv25, !dbg !6564
  br label %cond.end27, !dbg !6565

cond.end27:                                       ; preds = %cond.false22, %cond.true18
  %cond28 = phi i32 [ %conv21, %cond.true18 ], [ %sub26, %cond.false22 ], !dbg !6566
  br label %cond.end29, !dbg !6568

cond.end29:                                       ; preds = %cond.end27, %cond.true11
  %cond30 = phi i32 [ %20, %cond.true11 ], [ %cond28, %cond.end27 ], !dbg !6569
  store i32 %cond30, i32* %sum, align 4, !dbg !6571
  br label %for.inc, !dbg !6572

for.inc:                                          ; preds = %cond.end29
  %30 = load i32, i32* %i, align 4, !dbg !6573
  %inc = add nsw i32 %30, 1, !dbg !6573
  store i32 %inc, i32* %i, align 4, !dbg !6573
  br label %for.cond, !dbg !6574, !llvm.loop !6575

for.end:                                          ; preds = %for.cond
  %31 = load i32, i32* %sum, align 4, !dbg !6577
  ret i32 %31, !dbg !6578
}

; Function Attrs: nounwind uwtable
define internal i32 @sse16_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #0 !dbg !6579 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  %sq = alloca i32*, align 8
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !6580, metadata !2614), !dbg !6581
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !6582, metadata !2614), !dbg !6583
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !6584, metadata !2614), !dbg !6585
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !6586, metadata !2614), !dbg !6587
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6588, metadata !2614), !dbg !6589
  call void @llvm.dbg.declare(metadata i32* %s, metadata !6590, metadata !2614), !dbg !6591
  store i32 0, i32* %s, align 4, !dbg !6591
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6592, metadata !2614), !dbg !6593
  call void @llvm.dbg.declare(metadata i32** %sq, metadata !6594, metadata !2614), !dbg !6596
  store i32* getelementptr inbounds ([512 x i32], [512 x i32]* @ff_square_tab, i32 0, i64 256), i32** %sq, align 8, !dbg !6596
  store i32 0, i32* %i, align 4, !dbg !6597
  br label %for.cond, !dbg !6599

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6600
  %1 = load i32, i32* %h.addr, align 4, !dbg !6603
  %cmp = icmp slt i32 %0, %1, !dbg !6604
  br i1 %cmp, label %for.body, label %for.end, !dbg !6605

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %pix1.addr, align 8, !dbg !6606
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !6606
  %3 = load i8, i8* %arrayidx, align 1, !dbg !6606
  %conv = zext i8 %3 to i32, !dbg !6606
  %4 = load i8*, i8** %pix2.addr, align 8, !dbg !6608
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !6608
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !6608
  %conv2 = zext i8 %5 to i32, !dbg !6608
  %sub = sub nsw i32 %conv, %conv2, !dbg !6609
  %idxprom = sext i32 %sub to i64, !dbg !6610
  %6 = load i32*, i32** %sq, align 8, !dbg !6610
  %arrayidx3 = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !6610
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !6610
  %8 = load i32, i32* %s, align 4, !dbg !6611
  %add = add i32 %8, %7, !dbg !6611
  store i32 %add, i32* %s, align 4, !dbg !6611
  %9 = load i8*, i8** %pix1.addr, align 8, !dbg !6612
  %arrayidx4 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !6612
  %10 = load i8, i8* %arrayidx4, align 1, !dbg !6612
  %conv5 = zext i8 %10 to i32, !dbg !6612
  %11 = load i8*, i8** %pix2.addr, align 8, !dbg !6613
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !6613
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !6613
  %conv7 = zext i8 %12 to i32, !dbg !6613
  %sub8 = sub nsw i32 %conv5, %conv7, !dbg !6614
  %idxprom9 = sext i32 %sub8 to i64, !dbg !6615
  %13 = load i32*, i32** %sq, align 8, !dbg !6615
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 %idxprom9, !dbg !6615
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !6615
  %15 = load i32, i32* %s, align 4, !dbg !6616
  %add11 = add i32 %15, %14, !dbg !6616
  store i32 %add11, i32* %s, align 4, !dbg !6616
  %16 = load i8*, i8** %pix1.addr, align 8, !dbg !6617
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 2, !dbg !6617
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !6617
  %conv13 = zext i8 %17 to i32, !dbg !6617
  %18 = load i8*, i8** %pix2.addr, align 8, !dbg !6618
  %arrayidx14 = getelementptr inbounds i8, i8* %18, i64 2, !dbg !6618
  %19 = load i8, i8* %arrayidx14, align 1, !dbg !6618
  %conv15 = zext i8 %19 to i32, !dbg !6618
  %sub16 = sub nsw i32 %conv13, %conv15, !dbg !6619
  %idxprom17 = sext i32 %sub16 to i64, !dbg !6620
  %20 = load i32*, i32** %sq, align 8, !dbg !6620
  %arrayidx18 = getelementptr inbounds i32, i32* %20, i64 %idxprom17, !dbg !6620
  %21 = load i32, i32* %arrayidx18, align 4, !dbg !6620
  %22 = load i32, i32* %s, align 4, !dbg !6621
  %add19 = add i32 %22, %21, !dbg !6621
  store i32 %add19, i32* %s, align 4, !dbg !6621
  %23 = load i8*, i8** %pix1.addr, align 8, !dbg !6622
  %arrayidx20 = getelementptr inbounds i8, i8* %23, i64 3, !dbg !6622
  %24 = load i8, i8* %arrayidx20, align 1, !dbg !6622
  %conv21 = zext i8 %24 to i32, !dbg !6622
  %25 = load i8*, i8** %pix2.addr, align 8, !dbg !6623
  %arrayidx22 = getelementptr inbounds i8, i8* %25, i64 3, !dbg !6623
  %26 = load i8, i8* %arrayidx22, align 1, !dbg !6623
  %conv23 = zext i8 %26 to i32, !dbg !6623
  %sub24 = sub nsw i32 %conv21, %conv23, !dbg !6624
  %idxprom25 = sext i32 %sub24 to i64, !dbg !6625
  %27 = load i32*, i32** %sq, align 8, !dbg !6625
  %arrayidx26 = getelementptr inbounds i32, i32* %27, i64 %idxprom25, !dbg !6625
  %28 = load i32, i32* %arrayidx26, align 4, !dbg !6625
  %29 = load i32, i32* %s, align 4, !dbg !6626
  %add27 = add i32 %29, %28, !dbg !6626
  store i32 %add27, i32* %s, align 4, !dbg !6626
  %30 = load i8*, i8** %pix1.addr, align 8, !dbg !6627
  %arrayidx28 = getelementptr inbounds i8, i8* %30, i64 4, !dbg !6627
  %31 = load i8, i8* %arrayidx28, align 1, !dbg !6627
  %conv29 = zext i8 %31 to i32, !dbg !6627
  %32 = load i8*, i8** %pix2.addr, align 8, !dbg !6628
  %arrayidx30 = getelementptr inbounds i8, i8* %32, i64 4, !dbg !6628
  %33 = load i8, i8* %arrayidx30, align 1, !dbg !6628
  %conv31 = zext i8 %33 to i32, !dbg !6628
  %sub32 = sub nsw i32 %conv29, %conv31, !dbg !6629
  %idxprom33 = sext i32 %sub32 to i64, !dbg !6630
  %34 = load i32*, i32** %sq, align 8, !dbg !6630
  %arrayidx34 = getelementptr inbounds i32, i32* %34, i64 %idxprom33, !dbg !6630
  %35 = load i32, i32* %arrayidx34, align 4, !dbg !6630
  %36 = load i32, i32* %s, align 4, !dbg !6631
  %add35 = add i32 %36, %35, !dbg !6631
  store i32 %add35, i32* %s, align 4, !dbg !6631
  %37 = load i8*, i8** %pix1.addr, align 8, !dbg !6632
  %arrayidx36 = getelementptr inbounds i8, i8* %37, i64 5, !dbg !6632
  %38 = load i8, i8* %arrayidx36, align 1, !dbg !6632
  %conv37 = zext i8 %38 to i32, !dbg !6632
  %39 = load i8*, i8** %pix2.addr, align 8, !dbg !6633
  %arrayidx38 = getelementptr inbounds i8, i8* %39, i64 5, !dbg !6633
  %40 = load i8, i8* %arrayidx38, align 1, !dbg !6633
  %conv39 = zext i8 %40 to i32, !dbg !6633
  %sub40 = sub nsw i32 %conv37, %conv39, !dbg !6634
  %idxprom41 = sext i32 %sub40 to i64, !dbg !6635
  %41 = load i32*, i32** %sq, align 8, !dbg !6635
  %arrayidx42 = getelementptr inbounds i32, i32* %41, i64 %idxprom41, !dbg !6635
  %42 = load i32, i32* %arrayidx42, align 4, !dbg !6635
  %43 = load i32, i32* %s, align 4, !dbg !6636
  %add43 = add i32 %43, %42, !dbg !6636
  store i32 %add43, i32* %s, align 4, !dbg !6636
  %44 = load i8*, i8** %pix1.addr, align 8, !dbg !6637
  %arrayidx44 = getelementptr inbounds i8, i8* %44, i64 6, !dbg !6637
  %45 = load i8, i8* %arrayidx44, align 1, !dbg !6637
  %conv45 = zext i8 %45 to i32, !dbg !6637
  %46 = load i8*, i8** %pix2.addr, align 8, !dbg !6638
  %arrayidx46 = getelementptr inbounds i8, i8* %46, i64 6, !dbg !6638
  %47 = load i8, i8* %arrayidx46, align 1, !dbg !6638
  %conv47 = zext i8 %47 to i32, !dbg !6638
  %sub48 = sub nsw i32 %conv45, %conv47, !dbg !6639
  %idxprom49 = sext i32 %sub48 to i64, !dbg !6640
  %48 = load i32*, i32** %sq, align 8, !dbg !6640
  %arrayidx50 = getelementptr inbounds i32, i32* %48, i64 %idxprom49, !dbg !6640
  %49 = load i32, i32* %arrayidx50, align 4, !dbg !6640
  %50 = load i32, i32* %s, align 4, !dbg !6641
  %add51 = add i32 %50, %49, !dbg !6641
  store i32 %add51, i32* %s, align 4, !dbg !6641
  %51 = load i8*, i8** %pix1.addr, align 8, !dbg !6642
  %arrayidx52 = getelementptr inbounds i8, i8* %51, i64 7, !dbg !6642
  %52 = load i8, i8* %arrayidx52, align 1, !dbg !6642
  %conv53 = zext i8 %52 to i32, !dbg !6642
  %53 = load i8*, i8** %pix2.addr, align 8, !dbg !6643
  %arrayidx54 = getelementptr inbounds i8, i8* %53, i64 7, !dbg !6643
  %54 = load i8, i8* %arrayidx54, align 1, !dbg !6643
  %conv55 = zext i8 %54 to i32, !dbg !6643
  %sub56 = sub nsw i32 %conv53, %conv55, !dbg !6644
  %idxprom57 = sext i32 %sub56 to i64, !dbg !6645
  %55 = load i32*, i32** %sq, align 8, !dbg !6645
  %arrayidx58 = getelementptr inbounds i32, i32* %55, i64 %idxprom57, !dbg !6645
  %56 = load i32, i32* %arrayidx58, align 4, !dbg !6645
  %57 = load i32, i32* %s, align 4, !dbg !6646
  %add59 = add i32 %57, %56, !dbg !6646
  store i32 %add59, i32* %s, align 4, !dbg !6646
  %58 = load i8*, i8** %pix1.addr, align 8, !dbg !6647
  %arrayidx60 = getelementptr inbounds i8, i8* %58, i64 8, !dbg !6647
  %59 = load i8, i8* %arrayidx60, align 1, !dbg !6647
  %conv61 = zext i8 %59 to i32, !dbg !6647
  %60 = load i8*, i8** %pix2.addr, align 8, !dbg !6648
  %arrayidx62 = getelementptr inbounds i8, i8* %60, i64 8, !dbg !6648
  %61 = load i8, i8* %arrayidx62, align 1, !dbg !6648
  %conv63 = zext i8 %61 to i32, !dbg !6648
  %sub64 = sub nsw i32 %conv61, %conv63, !dbg !6649
  %idxprom65 = sext i32 %sub64 to i64, !dbg !6650
  %62 = load i32*, i32** %sq, align 8, !dbg !6650
  %arrayidx66 = getelementptr inbounds i32, i32* %62, i64 %idxprom65, !dbg !6650
  %63 = load i32, i32* %arrayidx66, align 4, !dbg !6650
  %64 = load i32, i32* %s, align 4, !dbg !6651
  %add67 = add i32 %64, %63, !dbg !6651
  store i32 %add67, i32* %s, align 4, !dbg !6651
  %65 = load i8*, i8** %pix1.addr, align 8, !dbg !6652
  %arrayidx68 = getelementptr inbounds i8, i8* %65, i64 9, !dbg !6652
  %66 = load i8, i8* %arrayidx68, align 1, !dbg !6652
  %conv69 = zext i8 %66 to i32, !dbg !6652
  %67 = load i8*, i8** %pix2.addr, align 8, !dbg !6653
  %arrayidx70 = getelementptr inbounds i8, i8* %67, i64 9, !dbg !6653
  %68 = load i8, i8* %arrayidx70, align 1, !dbg !6653
  %conv71 = zext i8 %68 to i32, !dbg !6653
  %sub72 = sub nsw i32 %conv69, %conv71, !dbg !6654
  %idxprom73 = sext i32 %sub72 to i64, !dbg !6655
  %69 = load i32*, i32** %sq, align 8, !dbg !6655
  %arrayidx74 = getelementptr inbounds i32, i32* %69, i64 %idxprom73, !dbg !6655
  %70 = load i32, i32* %arrayidx74, align 4, !dbg !6655
  %71 = load i32, i32* %s, align 4, !dbg !6656
  %add75 = add i32 %71, %70, !dbg !6656
  store i32 %add75, i32* %s, align 4, !dbg !6656
  %72 = load i8*, i8** %pix1.addr, align 8, !dbg !6657
  %arrayidx76 = getelementptr inbounds i8, i8* %72, i64 10, !dbg !6657
  %73 = load i8, i8* %arrayidx76, align 1, !dbg !6657
  %conv77 = zext i8 %73 to i32, !dbg !6657
  %74 = load i8*, i8** %pix2.addr, align 8, !dbg !6658
  %arrayidx78 = getelementptr inbounds i8, i8* %74, i64 10, !dbg !6658
  %75 = load i8, i8* %arrayidx78, align 1, !dbg !6658
  %conv79 = zext i8 %75 to i32, !dbg !6658
  %sub80 = sub nsw i32 %conv77, %conv79, !dbg !6659
  %idxprom81 = sext i32 %sub80 to i64, !dbg !6660
  %76 = load i32*, i32** %sq, align 8, !dbg !6660
  %arrayidx82 = getelementptr inbounds i32, i32* %76, i64 %idxprom81, !dbg !6660
  %77 = load i32, i32* %arrayidx82, align 4, !dbg !6660
  %78 = load i32, i32* %s, align 4, !dbg !6661
  %add83 = add i32 %78, %77, !dbg !6661
  store i32 %add83, i32* %s, align 4, !dbg !6661
  %79 = load i8*, i8** %pix1.addr, align 8, !dbg !6662
  %arrayidx84 = getelementptr inbounds i8, i8* %79, i64 11, !dbg !6662
  %80 = load i8, i8* %arrayidx84, align 1, !dbg !6662
  %conv85 = zext i8 %80 to i32, !dbg !6662
  %81 = load i8*, i8** %pix2.addr, align 8, !dbg !6663
  %arrayidx86 = getelementptr inbounds i8, i8* %81, i64 11, !dbg !6663
  %82 = load i8, i8* %arrayidx86, align 1, !dbg !6663
  %conv87 = zext i8 %82 to i32, !dbg !6663
  %sub88 = sub nsw i32 %conv85, %conv87, !dbg !6664
  %idxprom89 = sext i32 %sub88 to i64, !dbg !6665
  %83 = load i32*, i32** %sq, align 8, !dbg !6665
  %arrayidx90 = getelementptr inbounds i32, i32* %83, i64 %idxprom89, !dbg !6665
  %84 = load i32, i32* %arrayidx90, align 4, !dbg !6665
  %85 = load i32, i32* %s, align 4, !dbg !6666
  %add91 = add i32 %85, %84, !dbg !6666
  store i32 %add91, i32* %s, align 4, !dbg !6666
  %86 = load i8*, i8** %pix1.addr, align 8, !dbg !6667
  %arrayidx92 = getelementptr inbounds i8, i8* %86, i64 12, !dbg !6667
  %87 = load i8, i8* %arrayidx92, align 1, !dbg !6667
  %conv93 = zext i8 %87 to i32, !dbg !6667
  %88 = load i8*, i8** %pix2.addr, align 8, !dbg !6668
  %arrayidx94 = getelementptr inbounds i8, i8* %88, i64 12, !dbg !6668
  %89 = load i8, i8* %arrayidx94, align 1, !dbg !6668
  %conv95 = zext i8 %89 to i32, !dbg !6668
  %sub96 = sub nsw i32 %conv93, %conv95, !dbg !6669
  %idxprom97 = sext i32 %sub96 to i64, !dbg !6670
  %90 = load i32*, i32** %sq, align 8, !dbg !6670
  %arrayidx98 = getelementptr inbounds i32, i32* %90, i64 %idxprom97, !dbg !6670
  %91 = load i32, i32* %arrayidx98, align 4, !dbg !6670
  %92 = load i32, i32* %s, align 4, !dbg !6671
  %add99 = add i32 %92, %91, !dbg !6671
  store i32 %add99, i32* %s, align 4, !dbg !6671
  %93 = load i8*, i8** %pix1.addr, align 8, !dbg !6672
  %arrayidx100 = getelementptr inbounds i8, i8* %93, i64 13, !dbg !6672
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !6672
  %conv101 = zext i8 %94 to i32, !dbg !6672
  %95 = load i8*, i8** %pix2.addr, align 8, !dbg !6673
  %arrayidx102 = getelementptr inbounds i8, i8* %95, i64 13, !dbg !6673
  %96 = load i8, i8* %arrayidx102, align 1, !dbg !6673
  %conv103 = zext i8 %96 to i32, !dbg !6673
  %sub104 = sub nsw i32 %conv101, %conv103, !dbg !6674
  %idxprom105 = sext i32 %sub104 to i64, !dbg !6675
  %97 = load i32*, i32** %sq, align 8, !dbg !6675
  %arrayidx106 = getelementptr inbounds i32, i32* %97, i64 %idxprom105, !dbg !6675
  %98 = load i32, i32* %arrayidx106, align 4, !dbg !6675
  %99 = load i32, i32* %s, align 4, !dbg !6676
  %add107 = add i32 %99, %98, !dbg !6676
  store i32 %add107, i32* %s, align 4, !dbg !6676
  %100 = load i8*, i8** %pix1.addr, align 8, !dbg !6677
  %arrayidx108 = getelementptr inbounds i8, i8* %100, i64 14, !dbg !6677
  %101 = load i8, i8* %arrayidx108, align 1, !dbg !6677
  %conv109 = zext i8 %101 to i32, !dbg !6677
  %102 = load i8*, i8** %pix2.addr, align 8, !dbg !6678
  %arrayidx110 = getelementptr inbounds i8, i8* %102, i64 14, !dbg !6678
  %103 = load i8, i8* %arrayidx110, align 1, !dbg !6678
  %conv111 = zext i8 %103 to i32, !dbg !6678
  %sub112 = sub nsw i32 %conv109, %conv111, !dbg !6679
  %idxprom113 = sext i32 %sub112 to i64, !dbg !6680
  %104 = load i32*, i32** %sq, align 8, !dbg !6680
  %arrayidx114 = getelementptr inbounds i32, i32* %104, i64 %idxprom113, !dbg !6680
  %105 = load i32, i32* %arrayidx114, align 4, !dbg !6680
  %106 = load i32, i32* %s, align 4, !dbg !6681
  %add115 = add i32 %106, %105, !dbg !6681
  store i32 %add115, i32* %s, align 4, !dbg !6681
  %107 = load i8*, i8** %pix1.addr, align 8, !dbg !6682
  %arrayidx116 = getelementptr inbounds i8, i8* %107, i64 15, !dbg !6682
  %108 = load i8, i8* %arrayidx116, align 1, !dbg !6682
  %conv117 = zext i8 %108 to i32, !dbg !6682
  %109 = load i8*, i8** %pix2.addr, align 8, !dbg !6683
  %arrayidx118 = getelementptr inbounds i8, i8* %109, i64 15, !dbg !6683
  %110 = load i8, i8* %arrayidx118, align 1, !dbg !6683
  %conv119 = zext i8 %110 to i32, !dbg !6683
  %sub120 = sub nsw i32 %conv117, %conv119, !dbg !6684
  %idxprom121 = sext i32 %sub120 to i64, !dbg !6685
  %111 = load i32*, i32** %sq, align 8, !dbg !6685
  %arrayidx122 = getelementptr inbounds i32, i32* %111, i64 %idxprom121, !dbg !6685
  %112 = load i32, i32* %arrayidx122, align 4, !dbg !6685
  %113 = load i32, i32* %s, align 4, !dbg !6686
  %add123 = add i32 %113, %112, !dbg !6686
  store i32 %add123, i32* %s, align 4, !dbg !6686
  %114 = load i64, i64* %stride.addr, align 8, !dbg !6687
  %115 = load i8*, i8** %pix1.addr, align 8, !dbg !6688
  %add.ptr = getelementptr inbounds i8, i8* %115, i64 %114, !dbg !6688
  store i8* %add.ptr, i8** %pix1.addr, align 8, !dbg !6688
  %116 = load i64, i64* %stride.addr, align 8, !dbg !6689
  %117 = load i8*, i8** %pix2.addr, align 8, !dbg !6690
  %add.ptr124 = getelementptr inbounds i8, i8* %117, i64 %116, !dbg !6690
  store i8* %add.ptr124, i8** %pix2.addr, align 8, !dbg !6690
  br label %for.inc, !dbg !6691

for.inc:                                          ; preds = %for.body
  %118 = load i32, i32* %i, align 4, !dbg !6692
  %inc = add nsw i32 %118, 1, !dbg !6692
  store i32 %inc, i32* %i, align 4, !dbg !6692
  br label %for.cond, !dbg !6694, !llvm.loop !6695

for.end:                                          ; preds = %for.cond
  %119 = load i32, i32* %s, align 4, !dbg !6697
  ret i32 %119, !dbg !6698
}

; Function Attrs: nounwind uwtable
define internal i32 @sse8_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #0 !dbg !6699 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  %sq = alloca i32*, align 8
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !6700, metadata !2614), !dbg !6701
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !6702, metadata !2614), !dbg !6703
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !6704, metadata !2614), !dbg !6705
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !6706, metadata !2614), !dbg !6707
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6708, metadata !2614), !dbg !6709
  call void @llvm.dbg.declare(metadata i32* %s, metadata !6710, metadata !2614), !dbg !6711
  store i32 0, i32* %s, align 4, !dbg !6711
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6712, metadata !2614), !dbg !6713
  call void @llvm.dbg.declare(metadata i32** %sq, metadata !6714, metadata !2614), !dbg !6715
  store i32* getelementptr inbounds ([512 x i32], [512 x i32]* @ff_square_tab, i32 0, i64 256), i32** %sq, align 8, !dbg !6715
  store i32 0, i32* %i, align 4, !dbg !6716
  br label %for.cond, !dbg !6718

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6719
  %1 = load i32, i32* %h.addr, align 4, !dbg !6722
  %cmp = icmp slt i32 %0, %1, !dbg !6723
  br i1 %cmp, label %for.body, label %for.end, !dbg !6724

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %pix1.addr, align 8, !dbg !6725
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !6725
  %3 = load i8, i8* %arrayidx, align 1, !dbg !6725
  %conv = zext i8 %3 to i32, !dbg !6725
  %4 = load i8*, i8** %pix2.addr, align 8, !dbg !6727
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !6727
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !6727
  %conv2 = zext i8 %5 to i32, !dbg !6727
  %sub = sub nsw i32 %conv, %conv2, !dbg !6728
  %idxprom = sext i32 %sub to i64, !dbg !6729
  %6 = load i32*, i32** %sq, align 8, !dbg !6729
  %arrayidx3 = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !6729
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !6729
  %8 = load i32, i32* %s, align 4, !dbg !6730
  %add = add i32 %8, %7, !dbg !6730
  store i32 %add, i32* %s, align 4, !dbg !6730
  %9 = load i8*, i8** %pix1.addr, align 8, !dbg !6731
  %arrayidx4 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !6731
  %10 = load i8, i8* %arrayidx4, align 1, !dbg !6731
  %conv5 = zext i8 %10 to i32, !dbg !6731
  %11 = load i8*, i8** %pix2.addr, align 8, !dbg !6732
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !6732
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !6732
  %conv7 = zext i8 %12 to i32, !dbg !6732
  %sub8 = sub nsw i32 %conv5, %conv7, !dbg !6733
  %idxprom9 = sext i32 %sub8 to i64, !dbg !6734
  %13 = load i32*, i32** %sq, align 8, !dbg !6734
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 %idxprom9, !dbg !6734
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !6734
  %15 = load i32, i32* %s, align 4, !dbg !6735
  %add11 = add i32 %15, %14, !dbg !6735
  store i32 %add11, i32* %s, align 4, !dbg !6735
  %16 = load i8*, i8** %pix1.addr, align 8, !dbg !6736
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 2, !dbg !6736
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !6736
  %conv13 = zext i8 %17 to i32, !dbg !6736
  %18 = load i8*, i8** %pix2.addr, align 8, !dbg !6737
  %arrayidx14 = getelementptr inbounds i8, i8* %18, i64 2, !dbg !6737
  %19 = load i8, i8* %arrayidx14, align 1, !dbg !6737
  %conv15 = zext i8 %19 to i32, !dbg !6737
  %sub16 = sub nsw i32 %conv13, %conv15, !dbg !6738
  %idxprom17 = sext i32 %sub16 to i64, !dbg !6739
  %20 = load i32*, i32** %sq, align 8, !dbg !6739
  %arrayidx18 = getelementptr inbounds i32, i32* %20, i64 %idxprom17, !dbg !6739
  %21 = load i32, i32* %arrayidx18, align 4, !dbg !6739
  %22 = load i32, i32* %s, align 4, !dbg !6740
  %add19 = add i32 %22, %21, !dbg !6740
  store i32 %add19, i32* %s, align 4, !dbg !6740
  %23 = load i8*, i8** %pix1.addr, align 8, !dbg !6741
  %arrayidx20 = getelementptr inbounds i8, i8* %23, i64 3, !dbg !6741
  %24 = load i8, i8* %arrayidx20, align 1, !dbg !6741
  %conv21 = zext i8 %24 to i32, !dbg !6741
  %25 = load i8*, i8** %pix2.addr, align 8, !dbg !6742
  %arrayidx22 = getelementptr inbounds i8, i8* %25, i64 3, !dbg !6742
  %26 = load i8, i8* %arrayidx22, align 1, !dbg !6742
  %conv23 = zext i8 %26 to i32, !dbg !6742
  %sub24 = sub nsw i32 %conv21, %conv23, !dbg !6743
  %idxprom25 = sext i32 %sub24 to i64, !dbg !6744
  %27 = load i32*, i32** %sq, align 8, !dbg !6744
  %arrayidx26 = getelementptr inbounds i32, i32* %27, i64 %idxprom25, !dbg !6744
  %28 = load i32, i32* %arrayidx26, align 4, !dbg !6744
  %29 = load i32, i32* %s, align 4, !dbg !6745
  %add27 = add i32 %29, %28, !dbg !6745
  store i32 %add27, i32* %s, align 4, !dbg !6745
  %30 = load i8*, i8** %pix1.addr, align 8, !dbg !6746
  %arrayidx28 = getelementptr inbounds i8, i8* %30, i64 4, !dbg !6746
  %31 = load i8, i8* %arrayidx28, align 1, !dbg !6746
  %conv29 = zext i8 %31 to i32, !dbg !6746
  %32 = load i8*, i8** %pix2.addr, align 8, !dbg !6747
  %arrayidx30 = getelementptr inbounds i8, i8* %32, i64 4, !dbg !6747
  %33 = load i8, i8* %arrayidx30, align 1, !dbg !6747
  %conv31 = zext i8 %33 to i32, !dbg !6747
  %sub32 = sub nsw i32 %conv29, %conv31, !dbg !6748
  %idxprom33 = sext i32 %sub32 to i64, !dbg !6749
  %34 = load i32*, i32** %sq, align 8, !dbg !6749
  %arrayidx34 = getelementptr inbounds i32, i32* %34, i64 %idxprom33, !dbg !6749
  %35 = load i32, i32* %arrayidx34, align 4, !dbg !6749
  %36 = load i32, i32* %s, align 4, !dbg !6750
  %add35 = add i32 %36, %35, !dbg !6750
  store i32 %add35, i32* %s, align 4, !dbg !6750
  %37 = load i8*, i8** %pix1.addr, align 8, !dbg !6751
  %arrayidx36 = getelementptr inbounds i8, i8* %37, i64 5, !dbg !6751
  %38 = load i8, i8* %arrayidx36, align 1, !dbg !6751
  %conv37 = zext i8 %38 to i32, !dbg !6751
  %39 = load i8*, i8** %pix2.addr, align 8, !dbg !6752
  %arrayidx38 = getelementptr inbounds i8, i8* %39, i64 5, !dbg !6752
  %40 = load i8, i8* %arrayidx38, align 1, !dbg !6752
  %conv39 = zext i8 %40 to i32, !dbg !6752
  %sub40 = sub nsw i32 %conv37, %conv39, !dbg !6753
  %idxprom41 = sext i32 %sub40 to i64, !dbg !6754
  %41 = load i32*, i32** %sq, align 8, !dbg !6754
  %arrayidx42 = getelementptr inbounds i32, i32* %41, i64 %idxprom41, !dbg !6754
  %42 = load i32, i32* %arrayidx42, align 4, !dbg !6754
  %43 = load i32, i32* %s, align 4, !dbg !6755
  %add43 = add i32 %43, %42, !dbg !6755
  store i32 %add43, i32* %s, align 4, !dbg !6755
  %44 = load i8*, i8** %pix1.addr, align 8, !dbg !6756
  %arrayidx44 = getelementptr inbounds i8, i8* %44, i64 6, !dbg !6756
  %45 = load i8, i8* %arrayidx44, align 1, !dbg !6756
  %conv45 = zext i8 %45 to i32, !dbg !6756
  %46 = load i8*, i8** %pix2.addr, align 8, !dbg !6757
  %arrayidx46 = getelementptr inbounds i8, i8* %46, i64 6, !dbg !6757
  %47 = load i8, i8* %arrayidx46, align 1, !dbg !6757
  %conv47 = zext i8 %47 to i32, !dbg !6757
  %sub48 = sub nsw i32 %conv45, %conv47, !dbg !6758
  %idxprom49 = sext i32 %sub48 to i64, !dbg !6759
  %48 = load i32*, i32** %sq, align 8, !dbg !6759
  %arrayidx50 = getelementptr inbounds i32, i32* %48, i64 %idxprom49, !dbg !6759
  %49 = load i32, i32* %arrayidx50, align 4, !dbg !6759
  %50 = load i32, i32* %s, align 4, !dbg !6760
  %add51 = add i32 %50, %49, !dbg !6760
  store i32 %add51, i32* %s, align 4, !dbg !6760
  %51 = load i8*, i8** %pix1.addr, align 8, !dbg !6761
  %arrayidx52 = getelementptr inbounds i8, i8* %51, i64 7, !dbg !6761
  %52 = load i8, i8* %arrayidx52, align 1, !dbg !6761
  %conv53 = zext i8 %52 to i32, !dbg !6761
  %53 = load i8*, i8** %pix2.addr, align 8, !dbg !6762
  %arrayidx54 = getelementptr inbounds i8, i8* %53, i64 7, !dbg !6762
  %54 = load i8, i8* %arrayidx54, align 1, !dbg !6762
  %conv55 = zext i8 %54 to i32, !dbg !6762
  %sub56 = sub nsw i32 %conv53, %conv55, !dbg !6763
  %idxprom57 = sext i32 %sub56 to i64, !dbg !6764
  %55 = load i32*, i32** %sq, align 8, !dbg !6764
  %arrayidx58 = getelementptr inbounds i32, i32* %55, i64 %idxprom57, !dbg !6764
  %56 = load i32, i32* %arrayidx58, align 4, !dbg !6764
  %57 = load i32, i32* %s, align 4, !dbg !6765
  %add59 = add i32 %57, %56, !dbg !6765
  store i32 %add59, i32* %s, align 4, !dbg !6765
  %58 = load i64, i64* %stride.addr, align 8, !dbg !6766
  %59 = load i8*, i8** %pix1.addr, align 8, !dbg !6767
  %add.ptr = getelementptr inbounds i8, i8* %59, i64 %58, !dbg !6767
  store i8* %add.ptr, i8** %pix1.addr, align 8, !dbg !6767
  %60 = load i64, i64* %stride.addr, align 8, !dbg !6768
  %61 = load i8*, i8** %pix2.addr, align 8, !dbg !6769
  %add.ptr60 = getelementptr inbounds i8, i8* %61, i64 %60, !dbg !6769
  store i8* %add.ptr60, i8** %pix2.addr, align 8, !dbg !6769
  br label %for.inc, !dbg !6770

for.inc:                                          ; preds = %for.body
  %62 = load i32, i32* %i, align 4, !dbg !6771
  %inc = add nsw i32 %62, 1, !dbg !6771
  store i32 %inc, i32* %i, align 4, !dbg !6771
  br label %for.cond, !dbg !6773, !llvm.loop !6774

for.end:                                          ; preds = %for.cond
  %63 = load i32, i32* %s, align 4, !dbg !6776
  ret i32 %63, !dbg !6777
}

; Function Attrs: nounwind uwtable
define internal i32 @sse4_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #0 !dbg !6778 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  %sq = alloca i32*, align 8
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !6779, metadata !2614), !dbg !6780
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !6781, metadata !2614), !dbg !6782
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !6783, metadata !2614), !dbg !6784
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !6785, metadata !2614), !dbg !6786
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6787, metadata !2614), !dbg !6788
  call void @llvm.dbg.declare(metadata i32* %s, metadata !6789, metadata !2614), !dbg !6790
  store i32 0, i32* %s, align 4, !dbg !6790
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6791, metadata !2614), !dbg !6792
  call void @llvm.dbg.declare(metadata i32** %sq, metadata !6793, metadata !2614), !dbg !6794
  store i32* getelementptr inbounds ([512 x i32], [512 x i32]* @ff_square_tab, i32 0, i64 256), i32** %sq, align 8, !dbg !6794
  store i32 0, i32* %i, align 4, !dbg !6795
  br label %for.cond, !dbg !6797

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6798
  %1 = load i32, i32* %h.addr, align 4, !dbg !6801
  %cmp = icmp slt i32 %0, %1, !dbg !6802
  br i1 %cmp, label %for.body, label %for.end, !dbg !6803

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %pix1.addr, align 8, !dbg !6804
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !6804
  %3 = load i8, i8* %arrayidx, align 1, !dbg !6804
  %conv = zext i8 %3 to i32, !dbg !6804
  %4 = load i8*, i8** %pix2.addr, align 8, !dbg !6806
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !6806
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !6806
  %conv2 = zext i8 %5 to i32, !dbg !6806
  %sub = sub nsw i32 %conv, %conv2, !dbg !6807
  %idxprom = sext i32 %sub to i64, !dbg !6808
  %6 = load i32*, i32** %sq, align 8, !dbg !6808
  %arrayidx3 = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !6808
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !6808
  %8 = load i32, i32* %s, align 4, !dbg !6809
  %add = add i32 %8, %7, !dbg !6809
  store i32 %add, i32* %s, align 4, !dbg !6809
  %9 = load i8*, i8** %pix1.addr, align 8, !dbg !6810
  %arrayidx4 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !6810
  %10 = load i8, i8* %arrayidx4, align 1, !dbg !6810
  %conv5 = zext i8 %10 to i32, !dbg !6810
  %11 = load i8*, i8** %pix2.addr, align 8, !dbg !6811
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !6811
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !6811
  %conv7 = zext i8 %12 to i32, !dbg !6811
  %sub8 = sub nsw i32 %conv5, %conv7, !dbg !6812
  %idxprom9 = sext i32 %sub8 to i64, !dbg !6813
  %13 = load i32*, i32** %sq, align 8, !dbg !6813
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 %idxprom9, !dbg !6813
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !6813
  %15 = load i32, i32* %s, align 4, !dbg !6814
  %add11 = add i32 %15, %14, !dbg !6814
  store i32 %add11, i32* %s, align 4, !dbg !6814
  %16 = load i8*, i8** %pix1.addr, align 8, !dbg !6815
  %arrayidx12 = getelementptr inbounds i8, i8* %16, i64 2, !dbg !6815
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !6815
  %conv13 = zext i8 %17 to i32, !dbg !6815
  %18 = load i8*, i8** %pix2.addr, align 8, !dbg !6816
  %arrayidx14 = getelementptr inbounds i8, i8* %18, i64 2, !dbg !6816
  %19 = load i8, i8* %arrayidx14, align 1, !dbg !6816
  %conv15 = zext i8 %19 to i32, !dbg !6816
  %sub16 = sub nsw i32 %conv13, %conv15, !dbg !6817
  %idxprom17 = sext i32 %sub16 to i64, !dbg !6818
  %20 = load i32*, i32** %sq, align 8, !dbg !6818
  %arrayidx18 = getelementptr inbounds i32, i32* %20, i64 %idxprom17, !dbg !6818
  %21 = load i32, i32* %arrayidx18, align 4, !dbg !6818
  %22 = load i32, i32* %s, align 4, !dbg !6819
  %add19 = add i32 %22, %21, !dbg !6819
  store i32 %add19, i32* %s, align 4, !dbg !6819
  %23 = load i8*, i8** %pix1.addr, align 8, !dbg !6820
  %arrayidx20 = getelementptr inbounds i8, i8* %23, i64 3, !dbg !6820
  %24 = load i8, i8* %arrayidx20, align 1, !dbg !6820
  %conv21 = zext i8 %24 to i32, !dbg !6820
  %25 = load i8*, i8** %pix2.addr, align 8, !dbg !6821
  %arrayidx22 = getelementptr inbounds i8, i8* %25, i64 3, !dbg !6821
  %26 = load i8, i8* %arrayidx22, align 1, !dbg !6821
  %conv23 = zext i8 %26 to i32, !dbg !6821
  %sub24 = sub nsw i32 %conv21, %conv23, !dbg !6822
  %idxprom25 = sext i32 %sub24 to i64, !dbg !6823
  %27 = load i32*, i32** %sq, align 8, !dbg !6823
  %arrayidx26 = getelementptr inbounds i32, i32* %27, i64 %idxprom25, !dbg !6823
  %28 = load i32, i32* %arrayidx26, align 4, !dbg !6823
  %29 = load i32, i32* %s, align 4, !dbg !6824
  %add27 = add i32 %29, %28, !dbg !6824
  store i32 %add27, i32* %s, align 4, !dbg !6824
  %30 = load i64, i64* %stride.addr, align 8, !dbg !6825
  %31 = load i8*, i8** %pix1.addr, align 8, !dbg !6826
  %add.ptr = getelementptr inbounds i8, i8* %31, i64 %30, !dbg !6826
  store i8* %add.ptr, i8** %pix1.addr, align 8, !dbg !6826
  %32 = load i64, i64* %stride.addr, align 8, !dbg !6827
  %33 = load i8*, i8** %pix2.addr, align 8, !dbg !6828
  %add.ptr28 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !6828
  store i8* %add.ptr28, i8** %pix2.addr, align 8, !dbg !6828
  br label %for.inc, !dbg !6829

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !dbg !6830
  %inc = add nsw i32 %34, 1, !dbg !6830
  store i32 %inc, i32* %i, align 4, !dbg !6830
  br label %for.cond, !dbg !6832, !llvm.loop !6833

for.end:                                          ; preds = %for.cond
  %35 = load i32, i32* %s, align 4, !dbg !6835
  ret i32 %35, !dbg !6836
}

; Function Attrs: nounwind uwtable
define internal i32 @quant_psnr16_c(%struct.MpegEncContext* %s, i8* %dst, i8* %src, i64 %stride, i32 %h) #0 !dbg !6837 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !6838, metadata !2614), !dbg !6839
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6840, metadata !2614), !dbg !6841
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6842, metadata !2614), !dbg !6843
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !6844, metadata !2614), !dbg !6845
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6846, metadata !2614), !dbg !6847
  call void @llvm.dbg.declare(metadata i32* %score, metadata !6848, metadata !2614), !dbg !6849
  store i32 0, i32* %score, align 4, !dbg !6849
  %0 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6850
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !6851
  %2 = load i8*, i8** %src.addr, align 8, !dbg !6852
  %3 = load i64, i64* %stride.addr, align 8, !dbg !6853
  %call = call i32 @quant_psnr8x8_c(%struct.MpegEncContext* %0, i8* %1, i8* %2, i64 %3, i32 8), !dbg !6854
  %4 = load i32, i32* %score, align 4, !dbg !6855
  %add = add nsw i32 %4, %call, !dbg !6855
  store i32 %add, i32* %score, align 4, !dbg !6855
  %5 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6856
  %6 = load i8*, i8** %dst.addr, align 8, !dbg !6857
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 8, !dbg !6858
  %7 = load i8*, i8** %src.addr, align 8, !dbg !6859
  %add.ptr1 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !6860
  %8 = load i64, i64* %stride.addr, align 8, !dbg !6861
  %call2 = call i32 @quant_psnr8x8_c(%struct.MpegEncContext* %5, i8* %add.ptr, i8* %add.ptr1, i64 %8, i32 8), !dbg !6862
  %9 = load i32, i32* %score, align 4, !dbg !6864
  %add3 = add nsw i32 %9, %call2, !dbg !6864
  store i32 %add3, i32* %score, align 4, !dbg !6864
  %10 = load i32, i32* %h.addr, align 4, !dbg !6865
  %cmp = icmp eq i32 %10, 16, !dbg !6867
  br i1 %cmp, label %if.then, label %if.end, !dbg !6868

if.then:                                          ; preds = %entry
  %11 = load i64, i64* %stride.addr, align 8, !dbg !6869
  %mul = mul nsw i64 8, %11, !dbg !6872
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !6873
  %add.ptr4 = getelementptr inbounds i8, i8* %12, i64 %mul, !dbg !6873
  store i8* %add.ptr4, i8** %dst.addr, align 8, !dbg !6873
  %13 = load i64, i64* %stride.addr, align 8, !dbg !6874
  %mul5 = mul nsw i64 8, %13, !dbg !6875
  %14 = load i8*, i8** %src.addr, align 8, !dbg !6876
  %add.ptr6 = getelementptr inbounds i8, i8* %14, i64 %mul5, !dbg !6876
  store i8* %add.ptr6, i8** %src.addr, align 8, !dbg !6876
  %15 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6877
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !6878
  %17 = load i8*, i8** %src.addr, align 8, !dbg !6879
  %18 = load i64, i64* %stride.addr, align 8, !dbg !6880
  %call7 = call i32 @quant_psnr8x8_c(%struct.MpegEncContext* %15, i8* %16, i8* %17, i64 %18, i32 8), !dbg !6881
  %19 = load i32, i32* %score, align 4, !dbg !6882
  %add8 = add nsw i32 %19, %call7, !dbg !6882
  store i32 %add8, i32* %score, align 4, !dbg !6882
  %20 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6883
  %21 = load i8*, i8** %dst.addr, align 8, !dbg !6884
  %add.ptr9 = getelementptr inbounds i8, i8* %21, i64 8, !dbg !6885
  %22 = load i8*, i8** %src.addr, align 8, !dbg !6886
  %add.ptr10 = getelementptr inbounds i8, i8* %22, i64 8, !dbg !6887
  %23 = load i64, i64* %stride.addr, align 8, !dbg !6888
  %call11 = call i32 @quant_psnr8x8_c(%struct.MpegEncContext* %20, i8* %add.ptr9, i8* %add.ptr10, i64 %23, i32 8), !dbg !6889
  %24 = load i32, i32* %score, align 4, !dbg !6891
  %add12 = add nsw i32 %24, %call11, !dbg !6891
  store i32 %add12, i32* %score, align 4, !dbg !6891
  br label %if.end, !dbg !6892

if.end:                                           ; preds = %if.then, %entry
  %25 = load i32, i32* %score, align 4, !dbg !6893
  ret i32 %25, !dbg !6895
}

; Function Attrs: nounwind uwtable
define internal i32 @quant_psnr8x8_c(%struct.MpegEncContext* %s, i8* %src1, i8* %src2, i64 %stride, i32 %h) #0 !dbg !6896 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %src1.addr = alloca i8*, align 8
  %src2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %la_temp = alloca [128 x i16], align 16
  %temp = alloca i16*, align 8
  %bak = alloca i16*, align 8
  %sum = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !6897, metadata !2614), !dbg !6898
  store i8* %src1, i8** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src1.addr, metadata !6899, metadata !2614), !dbg !6900
  store i8* %src2, i8** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src2.addr, metadata !6901, metadata !2614), !dbg !6902
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !6903, metadata !2614), !dbg !6904
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6905, metadata !2614), !dbg !6906
  call void @llvm.dbg.declare(metadata [128 x i16]* %la_temp, metadata !6907, metadata !2614), !dbg !6911
  call void @llvm.dbg.declare(metadata i16** %temp, metadata !6912, metadata !2614), !dbg !6913
  %arraydecay = getelementptr inbounds [128 x i16], [128 x i16]* %la_temp, i32 0, i32 0, !dbg !6914
  store i16* %arraydecay, i16** %temp, align 8, !dbg !6913
  call void @llvm.dbg.declare(metadata i16** %bak, metadata !6915, metadata !2614), !dbg !6917
  %0 = load i16*, i16** %temp, align 8, !dbg !6918
  %add.ptr = getelementptr inbounds i16, i16* %0, i64 64, !dbg !6919
  store i16* %add.ptr, i16** %bak, align 8, !dbg !6917
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !6920, metadata !2614), !dbg !6921
  store i32 0, i32* %sum, align 4, !dbg !6921
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6922, metadata !2614), !dbg !6923
  %1 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6924
  %mb_intra = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1, i32 0, i32 144, !dbg !6925
  store i32 0, i32* %mb_intra, align 8, !dbg !6926
  %2 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6927
  %pdsp = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %2, i32 0, i32 105, !dbg !6928
  %diff_pixels_unaligned = getelementptr inbounds %struct.PixblockDSPContext, %struct.PixblockDSPContext* %pdsp, i32 0, i32 2, !dbg !6929
  %3 = load void (i16*, i8*, i8*, i64)*, void (i16*, i8*, i8*, i64)** %diff_pixels_unaligned, align 8, !dbg !6929
  %4 = load i16*, i16** %temp, align 8, !dbg !6930
  %5 = load i8*, i8** %src1.addr, align 8, !dbg !6931
  %6 = load i8*, i8** %src2.addr, align 8, !dbg !6932
  %7 = load i64, i64* %stride.addr, align 8, !dbg !6933
  call void %3(i16* %4, i8* %5, i8* %6, i64 %7), !dbg !6927
  %8 = load i16*, i16** %bak, align 8, !dbg !6934
  %9 = bitcast i16* %8 to i8*, !dbg !6935
  %10 = load i16*, i16** %temp, align 8, !dbg !6936
  %11 = bitcast i16* %10 to i8*, !dbg !6935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %11, i64 128, i32 2, i1 false), !dbg !6935
  %12 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6937
  %fast_dct_quantize = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %12, i32 0, i32 318, !dbg !6938
  %13 = load i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)** %fast_dct_quantize, align 8, !dbg !6938
  %14 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6939
  %15 = load i16*, i16** %temp, align 8, !dbg !6940
  %16 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6941
  %qscale = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %16, i32 0, i32 78, !dbg !6942
  %17 = load i32, i32* %qscale, align 8, !dbg !6942
  %call = call i32 %13(%struct.MpegEncContext* %14, i16* %15, i32 0, i32 %17, i32* %i), !dbg !6937
  %18 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6943
  %block_last_index = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %18, i32 0, i32 4, !dbg !6944
  %arrayidx = getelementptr inbounds [12 x i32], [12 x i32]* %block_last_index, i64 0, i64 0, !dbg !6943
  store i32 %call, i32* %arrayidx, align 4, !dbg !6945
  %19 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6946
  %dct_unquantize_inter = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %19, i32 0, i32 316, !dbg !6947
  %20 = load void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)** %dct_unquantize_inter, align 8, !dbg !6947
  %21 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6948
  %22 = load i16*, i16** %temp, align 8, !dbg !6949
  %23 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6950
  %qscale1 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %23, i32 0, i32 78, !dbg !6951
  %24 = load i32, i32* %qscale1, align 8, !dbg !6951
  call void %20(%struct.MpegEncContext* %21, i16* %22, i32 0, i32 %24), !dbg !6946
  %25 = load i16*, i16** %temp, align 8, !dbg !6952
  call void @ff_simple_idct_int16_8bit(i16* %25), !dbg !6953
  store i32 0, i32* %i, align 4, !dbg !6954
  br label %for.cond, !dbg !6956

for.cond:                                         ; preds = %for.inc, %entry
  %26 = load i32, i32* %i, align 4, !dbg !6957
  %cmp = icmp slt i32 %26, 64, !dbg !6960
  br i1 %cmp, label %for.body, label %for.end, !dbg !6961

for.body:                                         ; preds = %for.cond
  %27 = load i32, i32* %i, align 4, !dbg !6962
  %idxprom = sext i32 %27 to i64, !dbg !6963
  %28 = load i16*, i16** %temp, align 8, !dbg !6963
  %arrayidx2 = getelementptr inbounds i16, i16* %28, i64 %idxprom, !dbg !6963
  %29 = load i16, i16* %arrayidx2, align 2, !dbg !6963
  %conv = sext i16 %29 to i32, !dbg !6963
  %30 = load i32, i32* %i, align 4, !dbg !6964
  %idxprom3 = sext i32 %30 to i64, !dbg !6965
  %31 = load i16*, i16** %bak, align 8, !dbg !6965
  %arrayidx4 = getelementptr inbounds i16, i16* %31, i64 %idxprom3, !dbg !6965
  %32 = load i16, i16* %arrayidx4, align 2, !dbg !6965
  %conv5 = sext i16 %32 to i32, !dbg !6965
  %sub = sub nsw i32 %conv, %conv5, !dbg !6966
  %33 = load i32, i32* %i, align 4, !dbg !6967
  %idxprom6 = sext i32 %33 to i64, !dbg !6968
  %34 = load i16*, i16** %temp, align 8, !dbg !6968
  %arrayidx7 = getelementptr inbounds i16, i16* %34, i64 %idxprom6, !dbg !6968
  %35 = load i16, i16* %arrayidx7, align 2, !dbg !6968
  %conv8 = sext i16 %35 to i32, !dbg !6968
  %36 = load i32, i32* %i, align 4, !dbg !6969
  %idxprom9 = sext i32 %36 to i64, !dbg !6970
  %37 = load i16*, i16** %bak, align 8, !dbg !6970
  %arrayidx10 = getelementptr inbounds i16, i16* %37, i64 %idxprom9, !dbg !6970
  %38 = load i16, i16* %arrayidx10, align 2, !dbg !6970
  %conv11 = sext i16 %38 to i32, !dbg !6970
  %sub12 = sub nsw i32 %conv8, %conv11, !dbg !6971
  %mul = mul nsw i32 %sub, %sub12, !dbg !6972
  %39 = load i32, i32* %sum, align 4, !dbg !6973
  %add = add nsw i32 %39, %mul, !dbg !6973
  store i32 %add, i32* %sum, align 4, !dbg !6973
  br label %for.inc, !dbg !6974

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %i, align 4, !dbg !6975
  %inc = add nsw i32 %40, 1, !dbg !6975
  store i32 %inc, i32* %i, align 4, !dbg !6975
  br label %for.cond, !dbg !6977, !llvm.loop !6978

for.end:                                          ; preds = %for.cond
  %41 = load i32, i32* %sum, align 4, !dbg !6980
  ret i32 %41, !dbg !6981
}

; Function Attrs: nounwind uwtable
define internal i32 @rd16_c(%struct.MpegEncContext* %s, i8* %dst, i8* %src, i64 %stride, i32 %h) #0 !dbg !6982 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !6983, metadata !2614), !dbg !6984
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6985, metadata !2614), !dbg !6986
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6987, metadata !2614), !dbg !6988
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !6989, metadata !2614), !dbg !6990
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6991, metadata !2614), !dbg !6992
  call void @llvm.dbg.declare(metadata i32* %score, metadata !6993, metadata !2614), !dbg !6994
  store i32 0, i32* %score, align 4, !dbg !6994
  %0 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !6995
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !6996
  %2 = load i8*, i8** %src.addr, align 8, !dbg !6997
  %3 = load i64, i64* %stride.addr, align 8, !dbg !6998
  %call = call i32 @rd8x8_c(%struct.MpegEncContext* %0, i8* %1, i8* %2, i64 %3, i32 8), !dbg !6999
  %4 = load i32, i32* %score, align 4, !dbg !7000
  %add = add nsw i32 %4, %call, !dbg !7000
  store i32 %add, i32* %score, align 4, !dbg !7000
  %5 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7001
  %6 = load i8*, i8** %dst.addr, align 8, !dbg !7002
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 8, !dbg !7003
  %7 = load i8*, i8** %src.addr, align 8, !dbg !7004
  %add.ptr1 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !7005
  %8 = load i64, i64* %stride.addr, align 8, !dbg !7006
  %call2 = call i32 @rd8x8_c(%struct.MpegEncContext* %5, i8* %add.ptr, i8* %add.ptr1, i64 %8, i32 8), !dbg !7007
  %9 = load i32, i32* %score, align 4, !dbg !7009
  %add3 = add nsw i32 %9, %call2, !dbg !7009
  store i32 %add3, i32* %score, align 4, !dbg !7009
  %10 = load i32, i32* %h.addr, align 4, !dbg !7010
  %cmp = icmp eq i32 %10, 16, !dbg !7012
  br i1 %cmp, label %if.then, label %if.end, !dbg !7013

if.then:                                          ; preds = %entry
  %11 = load i64, i64* %stride.addr, align 8, !dbg !7014
  %mul = mul nsw i64 8, %11, !dbg !7017
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !7018
  %add.ptr4 = getelementptr inbounds i8, i8* %12, i64 %mul, !dbg !7018
  store i8* %add.ptr4, i8** %dst.addr, align 8, !dbg !7018
  %13 = load i64, i64* %stride.addr, align 8, !dbg !7019
  %mul5 = mul nsw i64 8, %13, !dbg !7020
  %14 = load i8*, i8** %src.addr, align 8, !dbg !7021
  %add.ptr6 = getelementptr inbounds i8, i8* %14, i64 %mul5, !dbg !7021
  store i8* %add.ptr6, i8** %src.addr, align 8, !dbg !7021
  %15 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7022
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !7023
  %17 = load i8*, i8** %src.addr, align 8, !dbg !7024
  %18 = load i64, i64* %stride.addr, align 8, !dbg !7025
  %call7 = call i32 @rd8x8_c(%struct.MpegEncContext* %15, i8* %16, i8* %17, i64 %18, i32 8), !dbg !7026
  %19 = load i32, i32* %score, align 4, !dbg !7027
  %add8 = add nsw i32 %19, %call7, !dbg !7027
  store i32 %add8, i32* %score, align 4, !dbg !7027
  %20 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7028
  %21 = load i8*, i8** %dst.addr, align 8, !dbg !7029
  %add.ptr9 = getelementptr inbounds i8, i8* %21, i64 8, !dbg !7030
  %22 = load i8*, i8** %src.addr, align 8, !dbg !7031
  %add.ptr10 = getelementptr inbounds i8, i8* %22, i64 8, !dbg !7032
  %23 = load i64, i64* %stride.addr, align 8, !dbg !7033
  %call11 = call i32 @rd8x8_c(%struct.MpegEncContext* %20, i8* %add.ptr9, i8* %add.ptr10, i64 %23, i32 8), !dbg !7034
  %24 = load i32, i32* %score, align 4, !dbg !7036
  %add12 = add nsw i32 %24, %call11, !dbg !7036
  store i32 %add12, i32* %score, align 4, !dbg !7036
  br label %if.end, !dbg !7037

if.end:                                           ; preds = %if.then, %entry
  %25 = load i32, i32* %score, align 4, !dbg !7038
  ret i32 %25, !dbg !7040
}

; Function Attrs: nounwind uwtable
define internal i32 @rd8x8_c(%struct.MpegEncContext* %s, i8* %src1, i8* %src2, i64 %stride, i32 %h) #0 !dbg !7041 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %src1.addr = alloca i8*, align 8
  %src2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %scantable = alloca i8*, align 8
  %la_temp = alloca [64 x i16], align 16
  %temp = alloca i16*, align 8
  %la_lsrc1 = alloca [64 x i8], align 16
  %lsrc1 = alloca i8*, align 8
  %la_lsrc2 = alloca [64 x i8], align 16
  %lsrc2 = alloca i8*, align 8
  %i = alloca i32, align 4
  %last = alloca i32, align 4
  %run = alloca i32, align 4
  %bits = alloca i32, align 4
  %level = alloca i32, align 4
  %distortion = alloca i32, align 4
  %start_i = alloca i32, align 4
  %esc_length = alloca i32, align 4
  %length = alloca i8*, align 8
  %last_length = alloca i8*, align 8
  %j = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !7042, metadata !2614), !dbg !7043
  store i8* %src1, i8** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src1.addr, metadata !7044, metadata !2614), !dbg !7045
  store i8* %src2, i8** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src2.addr, metadata !7046, metadata !2614), !dbg !7047
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !7048, metadata !2614), !dbg !7049
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !7050, metadata !2614), !dbg !7051
  call void @llvm.dbg.declare(metadata i8** %scantable, metadata !7052, metadata !2614), !dbg !7053
  %0 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7054
  %intra_scantable = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %0, i32 0, i32 7, !dbg !7055
  %permutated = getelementptr inbounds %struct.ScanTable, %struct.ScanTable* %intra_scantable, i32 0, i32 1, !dbg !7056
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %permutated, i32 0, i32 0, !dbg !7054
  store i8* %arraydecay, i8** %scantable, align 8, !dbg !7053
  call void @llvm.dbg.declare(metadata [64 x i16]* %la_temp, metadata !7057, metadata !2614), !dbg !7058
  call void @llvm.dbg.declare(metadata i16** %temp, metadata !7059, metadata !2614), !dbg !7060
  %arraydecay1 = getelementptr inbounds [64 x i16], [64 x i16]* %la_temp, i32 0, i32 0, !dbg !7061
  store i16* %arraydecay1, i16** %temp, align 8, !dbg !7060
  call void @llvm.dbg.declare(metadata [64 x i8]* %la_lsrc1, metadata !7062, metadata !2614), !dbg !7063
  call void @llvm.dbg.declare(metadata i8** %lsrc1, metadata !7064, metadata !2614), !dbg !7065
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %la_lsrc1, i32 0, i32 0, !dbg !7066
  store i8* %arraydecay2, i8** %lsrc1, align 8, !dbg !7065
  call void @llvm.dbg.declare(metadata [64 x i8]* %la_lsrc2, metadata !7067, metadata !2614), !dbg !7068
  call void @llvm.dbg.declare(metadata i8** %lsrc2, metadata !7069, metadata !2614), !dbg !7070
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %la_lsrc2, i32 0, i32 0, !dbg !7071
  store i8* %arraydecay3, i8** %lsrc2, align 8, !dbg !7070
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7072, metadata !2614), !dbg !7073
  call void @llvm.dbg.declare(metadata i32* %last, metadata !7074, metadata !2614), !dbg !7075
  call void @llvm.dbg.declare(metadata i32* %run, metadata !7076, metadata !2614), !dbg !7077
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !7078, metadata !2614), !dbg !7079
  call void @llvm.dbg.declare(metadata i32* %level, metadata !7080, metadata !2614), !dbg !7081
  call void @llvm.dbg.declare(metadata i32* %distortion, metadata !7082, metadata !2614), !dbg !7083
  call void @llvm.dbg.declare(metadata i32* %start_i, metadata !7084, metadata !2614), !dbg !7085
  call void @llvm.dbg.declare(metadata i32* %esc_length, metadata !7086, metadata !2614), !dbg !7087
  %1 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7088
  %ac_esc_length = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1, i32 0, i32 159, !dbg !7089
  %2 = load i32, i32* %ac_esc_length, align 4, !dbg !7089
  store i32 %2, i32* %esc_length, align 4, !dbg !7087
  call void @llvm.dbg.declare(metadata i8** %length, metadata !7090, metadata !2614), !dbg !7091
  call void @llvm.dbg.declare(metadata i8** %last_length, metadata !7092, metadata !2614), !dbg !7093
  %3 = load i8*, i8** %lsrc1, align 8, !dbg !7094
  %4 = load i8*, i8** %src1.addr, align 8, !dbg !7095
  %5 = load i64, i64* %stride.addr, align 8, !dbg !7096
  call void @copy_block8(i8* %3, i8* %4, i64 8, i64 %5, i32 8), !dbg !7097
  %6 = load i8*, i8** %lsrc2, align 8, !dbg !7098
  %7 = load i8*, i8** %src2.addr, align 8, !dbg !7099
  %8 = load i64, i64* %stride.addr, align 8, !dbg !7100
  call void @copy_block8(i8* %6, i8* %7, i64 8, i64 %8, i32 8), !dbg !7101
  %9 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7102
  %pdsp = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %9, i32 0, i32 105, !dbg !7103
  %diff_pixels = getelementptr inbounds %struct.PixblockDSPContext, %struct.PixblockDSPContext* %pdsp, i32 0, i32 1, !dbg !7104
  %10 = load void (i16*, i8*, i8*, i64)*, void (i16*, i8*, i8*, i64)** %diff_pixels, align 8, !dbg !7104
  %11 = load i16*, i16** %temp, align 8, !dbg !7105
  %12 = load i8*, i8** %lsrc1, align 8, !dbg !7106
  %13 = load i8*, i8** %lsrc2, align 8, !dbg !7107
  call void %10(i16* %11, i8* %12, i8* %13, i64 8), !dbg !7102
  %14 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7108
  %fast_dct_quantize = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %14, i32 0, i32 318, !dbg !7109
  %15 = load i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)** %fast_dct_quantize, align 8, !dbg !7109
  %16 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7110
  %17 = load i16*, i16** %temp, align 8, !dbg !7111
  %18 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7112
  %qscale = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %18, i32 0, i32 78, !dbg !7113
  %19 = load i32, i32* %qscale, align 8, !dbg !7113
  %call = call i32 %15(%struct.MpegEncContext* %16, i16* %17, i32 0, i32 %19, i32* %i), !dbg !7108
  store i32 %call, i32* %last, align 4, !dbg !7114
  %20 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7115
  %block_last_index = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %20, i32 0, i32 4, !dbg !7116
  %arrayidx = getelementptr inbounds [12 x i32], [12 x i32]* %block_last_index, i64 0, i64 0, !dbg !7115
  store i32 %call, i32* %arrayidx, align 4, !dbg !7117
  store i32 0, i32* %bits, align 4, !dbg !7118
  %21 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7119
  %mb_intra = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %21, i32 0, i32 144, !dbg !7121
  %22 = load i32, i32* %mb_intra, align 8, !dbg !7121
  %tobool = icmp ne i32 %22, 0, !dbg !7119
  br i1 %tobool, label %if.then, label %if.else, !dbg !7122

if.then:                                          ; preds = %entry
  store i32 1, i32* %start_i, align 4, !dbg !7123
  %23 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7125
  %intra_ac_vlc_length = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %23, i32 0, i32 160, !dbg !7126
  %24 = load i8*, i8** %intra_ac_vlc_length, align 8, !dbg !7126
  store i8* %24, i8** %length, align 8, !dbg !7127
  %25 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7128
  %intra_ac_vlc_last_length = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %25, i32 0, i32 161, !dbg !7129
  %26 = load i8*, i8** %intra_ac_vlc_last_length, align 8, !dbg !7129
  store i8* %26, i8** %last_length, align 8, !dbg !7130
  %27 = load i16*, i16** %temp, align 8, !dbg !7131
  %arrayidx4 = getelementptr inbounds i16, i16* %27, i64 0, !dbg !7131
  %28 = load i16, i16* %arrayidx4, align 2, !dbg !7131
  %conv = sext i16 %28 to i32, !dbg !7131
  %add = add nsw i32 %conv, 256, !dbg !7132
  %idxprom = sext i32 %add to i64, !dbg !7133
  %29 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7133
  %luma_dc_vlc_length = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %29, i32 0, i32 166, !dbg !7134
  %30 = load i8*, i8** %luma_dc_vlc_length, align 8, !dbg !7134
  %arrayidx5 = getelementptr inbounds i8, i8* %30, i64 %idxprom, !dbg !7133
  %31 = load i8, i8* %arrayidx5, align 1, !dbg !7133
  %conv6 = zext i8 %31 to i32, !dbg !7133
  %32 = load i32, i32* %bits, align 4, !dbg !7135
  %add7 = add nsw i32 %32, %conv6, !dbg !7135
  store i32 %add7, i32* %bits, align 4, !dbg !7135
  br label %if.end, !dbg !7136

if.else:                                          ; preds = %entry
  store i32 0, i32* %start_i, align 4, !dbg !7137
  %33 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7139
  %inter_ac_vlc_length = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %33, i32 0, i32 164, !dbg !7140
  %34 = load i8*, i8** %inter_ac_vlc_length, align 8, !dbg !7140
  store i8* %34, i8** %length, align 8, !dbg !7141
  %35 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7142
  %inter_ac_vlc_last_length = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %35, i32 0, i32 165, !dbg !7143
  %36 = load i8*, i8** %inter_ac_vlc_last_length, align 8, !dbg !7143
  store i8* %36, i8** %last_length, align 8, !dbg !7144
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %37 = load i32, i32* %last, align 4, !dbg !7145
  %38 = load i32, i32* %start_i, align 4, !dbg !7147
  %cmp = icmp sge i32 %37, %38, !dbg !7148
  br i1 %cmp, label %if.then9, label %if.end55, !dbg !7149

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %run, align 4, !dbg !7150
  %39 = load i32, i32* %start_i, align 4, !dbg !7152
  store i32 %39, i32* %i, align 4, !dbg !7154
  br label %for.cond, !dbg !7155

for.cond:                                         ; preds = %for.inc, %if.then9
  %40 = load i32, i32* %i, align 4, !dbg !7156
  %41 = load i32, i32* %last, align 4, !dbg !7159
  %cmp10 = icmp slt i32 %40, %41, !dbg !7160
  br i1 %cmp10, label %for.body, label %for.end, !dbg !7161

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7162, metadata !2614), !dbg !7164
  %42 = load i32, i32* %i, align 4, !dbg !7165
  %idxprom12 = sext i32 %42 to i64, !dbg !7166
  %43 = load i8*, i8** %scantable, align 8, !dbg !7166
  %arrayidx13 = getelementptr inbounds i8, i8* %43, i64 %idxprom12, !dbg !7166
  %44 = load i8, i8* %arrayidx13, align 1, !dbg !7166
  %conv14 = zext i8 %44 to i32, !dbg !7166
  store i32 %conv14, i32* %j, align 4, !dbg !7164
  %45 = load i32, i32* %j, align 4, !dbg !7167
  %idxprom15 = sext i32 %45 to i64, !dbg !7168
  %46 = load i16*, i16** %temp, align 8, !dbg !7168
  %arrayidx16 = getelementptr inbounds i16, i16* %46, i64 %idxprom15, !dbg !7168
  %47 = load i16, i16* %arrayidx16, align 2, !dbg !7168
  %conv17 = sext i16 %47 to i32, !dbg !7168
  store i32 %conv17, i32* %level, align 4, !dbg !7169
  %48 = load i32, i32* %level, align 4, !dbg !7170
  %tobool18 = icmp ne i32 %48, 0, !dbg !7170
  br i1 %tobool18, label %if.then19, label %if.else32, !dbg !7172

if.then19:                                        ; preds = %for.body
  %49 = load i32, i32* %level, align 4, !dbg !7173
  %add20 = add nsw i32 %49, 64, !dbg !7173
  store i32 %add20, i32* %level, align 4, !dbg !7173
  %50 = load i32, i32* %level, align 4, !dbg !7175
  %and = and i32 %50, -128, !dbg !7177
  %cmp21 = icmp eq i32 %and, 0, !dbg !7178
  br i1 %cmp21, label %if.then23, label %if.else29, !dbg !7179

if.then23:                                        ; preds = %if.then19
  %51 = load i32, i32* %run, align 4, !dbg !7180
  %mul = mul nsw i32 %51, 128, !dbg !7181
  %52 = load i32, i32* %level, align 4, !dbg !7182
  %add24 = add nsw i32 %mul, %52, !dbg !7183
  %idxprom25 = sext i32 %add24 to i64, !dbg !7184
  %53 = load i8*, i8** %length, align 8, !dbg !7184
  %arrayidx26 = getelementptr inbounds i8, i8* %53, i64 %idxprom25, !dbg !7184
  %54 = load i8, i8* %arrayidx26, align 1, !dbg !7184
  %conv27 = zext i8 %54 to i32, !dbg !7184
  %55 = load i32, i32* %bits, align 4, !dbg !7185
  %add28 = add nsw i32 %55, %conv27, !dbg !7185
  store i32 %add28, i32* %bits, align 4, !dbg !7185
  br label %if.end31, !dbg !7186

if.else29:                                        ; preds = %if.then19
  %56 = load i32, i32* %esc_length, align 4, !dbg !7187
  %57 = load i32, i32* %bits, align 4, !dbg !7188
  %add30 = add nsw i32 %57, %56, !dbg !7188
  store i32 %add30, i32* %bits, align 4, !dbg !7188
  br label %if.end31

if.end31:                                         ; preds = %if.else29, %if.then23
  store i32 0, i32* %run, align 4, !dbg !7189
  br label %if.end33, !dbg !7190

if.else32:                                        ; preds = %for.body
  %58 = load i32, i32* %run, align 4, !dbg !7191
  %inc = add nsw i32 %58, 1, !dbg !7191
  store i32 %inc, i32* %run, align 4, !dbg !7191
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.end31
  br label %for.inc, !dbg !7192

for.inc:                                          ; preds = %if.end33
  %59 = load i32, i32* %i, align 4, !dbg !7193
  %inc34 = add nsw i32 %59, 1, !dbg !7193
  store i32 %inc34, i32* %i, align 4, !dbg !7193
  br label %for.cond, !dbg !7195, !llvm.loop !7196

for.end:                                          ; preds = %for.cond
  %60 = load i32, i32* %last, align 4, !dbg !7198
  %idxprom35 = sext i32 %60 to i64, !dbg !7199
  %61 = load i8*, i8** %scantable, align 8, !dbg !7199
  %arrayidx36 = getelementptr inbounds i8, i8* %61, i64 %idxprom35, !dbg !7199
  %62 = load i8, i8* %arrayidx36, align 1, !dbg !7199
  %conv37 = zext i8 %62 to i32, !dbg !7199
  store i32 %conv37, i32* %i, align 4, !dbg !7200
  %63 = load i32, i32* %i, align 4, !dbg !7201
  %idxprom38 = sext i32 %63 to i64, !dbg !7202
  %64 = load i16*, i16** %temp, align 8, !dbg !7202
  %arrayidx39 = getelementptr inbounds i16, i16* %64, i64 %idxprom38, !dbg !7202
  %65 = load i16, i16* %arrayidx39, align 2, !dbg !7202
  %conv40 = sext i16 %65 to i32, !dbg !7202
  %add41 = add nsw i32 %conv40, 64, !dbg !7203
  store i32 %add41, i32* %level, align 4, !dbg !7204
  %66 = load i32, i32* %level, align 4, !dbg !7205
  %and42 = and i32 %66, -128, !dbg !7207
  %cmp43 = icmp eq i32 %and42, 0, !dbg !7208
  br i1 %cmp43, label %if.then45, label %if.else52, !dbg !7209

if.then45:                                        ; preds = %for.end
  %67 = load i32, i32* %run, align 4, !dbg !7210
  %mul46 = mul nsw i32 %67, 128, !dbg !7212
  %68 = load i32, i32* %level, align 4, !dbg !7213
  %add47 = add nsw i32 %mul46, %68, !dbg !7214
  %idxprom48 = sext i32 %add47 to i64, !dbg !7215
  %69 = load i8*, i8** %last_length, align 8, !dbg !7215
  %arrayidx49 = getelementptr inbounds i8, i8* %69, i64 %idxprom48, !dbg !7215
  %70 = load i8, i8* %arrayidx49, align 1, !dbg !7215
  %conv50 = zext i8 %70 to i32, !dbg !7215
  %71 = load i32, i32* %bits, align 4, !dbg !7216
  %add51 = add nsw i32 %71, %conv50, !dbg !7216
  store i32 %add51, i32* %bits, align 4, !dbg !7216
  br label %if.end54, !dbg !7217

if.else52:                                        ; preds = %for.end
  %72 = load i32, i32* %esc_length, align 4, !dbg !7218
  %73 = load i32, i32* %bits, align 4, !dbg !7219
  %add53 = add nsw i32 %73, %72, !dbg !7219
  store i32 %add53, i32* %bits, align 4, !dbg !7219
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then45
  br label %if.end55, !dbg !7220

if.end55:                                         ; preds = %if.end54, %if.end
  %74 = load i32, i32* %last, align 4, !dbg !7221
  %cmp56 = icmp sge i32 %74, 0, !dbg !7223
  br i1 %cmp56, label %if.then58, label %if.end66, !dbg !7224

if.then58:                                        ; preds = %if.end55
  %75 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7225
  %mb_intra59 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %75, i32 0, i32 144, !dbg !7228
  %76 = load i32, i32* %mb_intra59, align 8, !dbg !7228
  %tobool60 = icmp ne i32 %76, 0, !dbg !7225
  br i1 %tobool60, label %if.then61, label %if.else63, !dbg !7229

if.then61:                                        ; preds = %if.then58
  %77 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7230
  %dct_unquantize_intra = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %77, i32 0, i32 315, !dbg !7231
  %78 = load void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)** %dct_unquantize_intra, align 8, !dbg !7231
  %79 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7232
  %80 = load i16*, i16** %temp, align 8, !dbg !7233
  %81 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7234
  %qscale62 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %81, i32 0, i32 78, !dbg !7235
  %82 = load i32, i32* %qscale62, align 8, !dbg !7235
  call void %78(%struct.MpegEncContext* %79, i16* %80, i32 0, i32 %82), !dbg !7230
  br label %if.end65, !dbg !7230

if.else63:                                        ; preds = %if.then58
  %83 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7236
  %dct_unquantize_inter = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %83, i32 0, i32 316, !dbg !7237
  %84 = load void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)** %dct_unquantize_inter, align 8, !dbg !7237
  %85 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7238
  %86 = load i16*, i16** %temp, align 8, !dbg !7239
  %87 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7240
  %qscale64 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %87, i32 0, i32 78, !dbg !7241
  %88 = load i32, i32* %qscale64, align 8, !dbg !7241
  call void %84(%struct.MpegEncContext* %85, i16* %86, i32 0, i32 %88), !dbg !7236
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.then61
  br label %if.end66, !dbg !7242

if.end66:                                         ; preds = %if.end65, %if.end55
  %89 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7243
  %idsp = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %89, i32 0, i32 101, !dbg !7244
  %idct_add = getelementptr inbounds %struct.IDCTDSPContext, %struct.IDCTDSPContext* %idsp, i32 0, i32 5, !dbg !7245
  %90 = load void (i8*, i64, i16*)*, void (i8*, i64, i16*)** %idct_add, align 8, !dbg !7245
  %91 = load i8*, i8** %lsrc2, align 8, !dbg !7246
  %92 = load i16*, i16** %temp, align 8, !dbg !7247
  call void %90(i8* %91, i64 8, i16* %92), !dbg !7243
  %93 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7248
  %mecc = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %93, i32 0, i32 102, !dbg !7249
  %sse = getelementptr inbounds %struct.MECmpContext, %struct.MECmpContext* %mecc, i32 0, i32 2, !dbg !7250
  %arrayidx67 = getelementptr inbounds [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]* %sse, i64 0, i64 1, !dbg !7248
  %94 = load i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*, i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)** %arrayidx67, align 8, !dbg !7248
  %95 = load i8*, i8** %lsrc2, align 8, !dbg !7251
  %96 = load i8*, i8** %lsrc1, align 8, !dbg !7252
  %call68 = call i32 %94(%struct.MpegEncContext* null, i8* %95, i8* %96, i64 8, i32 8), !dbg !7248
  store i32 %call68, i32* %distortion, align 4, !dbg !7253
  %97 = load i32, i32* %distortion, align 4, !dbg !7254
  %98 = load i32, i32* %bits, align 4, !dbg !7255
  %99 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7256
  %qscale69 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %99, i32 0, i32 78, !dbg !7257
  %100 = load i32, i32* %qscale69, align 8, !dbg !7257
  %mul70 = mul nsw i32 %98, %100, !dbg !7258
  %101 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7259
  %qscale71 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %101, i32 0, i32 78, !dbg !7260
  %102 = load i32, i32* %qscale71, align 8, !dbg !7260
  %mul72 = mul nsw i32 %mul70, %102, !dbg !7261
  %mul73 = mul nsw i32 %mul72, 109, !dbg !7262
  %add74 = add nsw i32 %mul73, 64, !dbg !7263
  %shr = ashr i32 %add74, 7, !dbg !7264
  %add75 = add nsw i32 %97, %shr, !dbg !7265
  ret i32 %add75, !dbg !7266
}

; Function Attrs: nounwind uwtable
define internal i32 @bit16_c(%struct.MpegEncContext* %s, i8* %dst, i8* %src, i64 %stride, i32 %h) #0 !dbg !7267 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !7268, metadata !2614), !dbg !7269
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !7270, metadata !2614), !dbg !7271
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !7272, metadata !2614), !dbg !7273
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !7274, metadata !2614), !dbg !7275
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !7276, metadata !2614), !dbg !7277
  call void @llvm.dbg.declare(metadata i32* %score, metadata !7278, metadata !2614), !dbg !7279
  store i32 0, i32* %score, align 4, !dbg !7279
  %0 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7280
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !7281
  %2 = load i8*, i8** %src.addr, align 8, !dbg !7282
  %3 = load i64, i64* %stride.addr, align 8, !dbg !7283
  %call = call i32 @bit8x8_c(%struct.MpegEncContext* %0, i8* %1, i8* %2, i64 %3, i32 8), !dbg !7284
  %4 = load i32, i32* %score, align 4, !dbg !7285
  %add = add nsw i32 %4, %call, !dbg !7285
  store i32 %add, i32* %score, align 4, !dbg !7285
  %5 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7286
  %6 = load i8*, i8** %dst.addr, align 8, !dbg !7287
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 8, !dbg !7288
  %7 = load i8*, i8** %src.addr, align 8, !dbg !7289
  %add.ptr1 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !7290
  %8 = load i64, i64* %stride.addr, align 8, !dbg !7291
  %call2 = call i32 @bit8x8_c(%struct.MpegEncContext* %5, i8* %add.ptr, i8* %add.ptr1, i64 %8, i32 8), !dbg !7292
  %9 = load i32, i32* %score, align 4, !dbg !7294
  %add3 = add nsw i32 %9, %call2, !dbg !7294
  store i32 %add3, i32* %score, align 4, !dbg !7294
  %10 = load i32, i32* %h.addr, align 4, !dbg !7295
  %cmp = icmp eq i32 %10, 16, !dbg !7297
  br i1 %cmp, label %if.then, label %if.end, !dbg !7298

if.then:                                          ; preds = %entry
  %11 = load i64, i64* %stride.addr, align 8, !dbg !7299
  %mul = mul nsw i64 8, %11, !dbg !7302
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !7303
  %add.ptr4 = getelementptr inbounds i8, i8* %12, i64 %mul, !dbg !7303
  store i8* %add.ptr4, i8** %dst.addr, align 8, !dbg !7303
  %13 = load i64, i64* %stride.addr, align 8, !dbg !7304
  %mul5 = mul nsw i64 8, %13, !dbg !7305
  %14 = load i8*, i8** %src.addr, align 8, !dbg !7306
  %add.ptr6 = getelementptr inbounds i8, i8* %14, i64 %mul5, !dbg !7306
  store i8* %add.ptr6, i8** %src.addr, align 8, !dbg !7306
  %15 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7307
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !7308
  %17 = load i8*, i8** %src.addr, align 8, !dbg !7309
  %18 = load i64, i64* %stride.addr, align 8, !dbg !7310
  %call7 = call i32 @bit8x8_c(%struct.MpegEncContext* %15, i8* %16, i8* %17, i64 %18, i32 8), !dbg !7311
  %19 = load i32, i32* %score, align 4, !dbg !7312
  %add8 = add nsw i32 %19, %call7, !dbg !7312
  store i32 %add8, i32* %score, align 4, !dbg !7312
  %20 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7313
  %21 = load i8*, i8** %dst.addr, align 8, !dbg !7314
  %add.ptr9 = getelementptr inbounds i8, i8* %21, i64 8, !dbg !7315
  %22 = load i8*, i8** %src.addr, align 8, !dbg !7316
  %add.ptr10 = getelementptr inbounds i8, i8* %22, i64 8, !dbg !7317
  %23 = load i64, i64* %stride.addr, align 8, !dbg !7318
  %call11 = call i32 @bit8x8_c(%struct.MpegEncContext* %20, i8* %add.ptr9, i8* %add.ptr10, i64 %23, i32 8), !dbg !7319
  %24 = load i32, i32* %score, align 4, !dbg !7321
  %add12 = add nsw i32 %24, %call11, !dbg !7321
  store i32 %add12, i32* %score, align 4, !dbg !7321
  br label %if.end, !dbg !7322

if.end:                                           ; preds = %if.then, %entry
  %25 = load i32, i32* %score, align 4, !dbg !7323
  ret i32 %25, !dbg !7325
}

; Function Attrs: nounwind uwtable
define internal i32 @bit8x8_c(%struct.MpegEncContext* %s, i8* %src1, i8* %src2, i64 %stride, i32 %h) #0 !dbg !7326 {
entry:
  %s.addr = alloca %struct.MpegEncContext*, align 8
  %src1.addr = alloca i8*, align 8
  %src2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %scantable = alloca i8*, align 8
  %la_temp = alloca [64 x i16], align 16
  %temp = alloca i16*, align 8
  %i = alloca i32, align 4
  %last = alloca i32, align 4
  %run = alloca i32, align 4
  %bits = alloca i32, align 4
  %level = alloca i32, align 4
  %start_i = alloca i32, align 4
  %esc_length = alloca i32, align 4
  %length = alloca i8*, align 8
  %last_length = alloca i8*, align 8
  %j = alloca i32, align 4
  store %struct.MpegEncContext* %s, %struct.MpegEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s.addr, metadata !7327, metadata !2614), !dbg !7328
  store i8* %src1, i8** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src1.addr, metadata !7329, metadata !2614), !dbg !7330
  store i8* %src2, i8** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src2.addr, metadata !7331, metadata !2614), !dbg !7332
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !7333, metadata !2614), !dbg !7334
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !7335, metadata !2614), !dbg !7336
  call void @llvm.dbg.declare(metadata i8** %scantable, metadata !7337, metadata !2614), !dbg !7338
  %0 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7339
  %intra_scantable = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %0, i32 0, i32 7, !dbg !7340
  %permutated = getelementptr inbounds %struct.ScanTable, %struct.ScanTable* %intra_scantable, i32 0, i32 1, !dbg !7341
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %permutated, i32 0, i32 0, !dbg !7339
  store i8* %arraydecay, i8** %scantable, align 8, !dbg !7338
  call void @llvm.dbg.declare(metadata [64 x i16]* %la_temp, metadata !7342, metadata !2614), !dbg !7343
  call void @llvm.dbg.declare(metadata i16** %temp, metadata !7344, metadata !2614), !dbg !7345
  %arraydecay1 = getelementptr inbounds [64 x i16], [64 x i16]* %la_temp, i32 0, i32 0, !dbg !7346
  store i16* %arraydecay1, i16** %temp, align 8, !dbg !7345
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7347, metadata !2614), !dbg !7348
  call void @llvm.dbg.declare(metadata i32* %last, metadata !7349, metadata !2614), !dbg !7350
  call void @llvm.dbg.declare(metadata i32* %run, metadata !7351, metadata !2614), !dbg !7352
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !7353, metadata !2614), !dbg !7354
  call void @llvm.dbg.declare(metadata i32* %level, metadata !7355, metadata !2614), !dbg !7356
  call void @llvm.dbg.declare(metadata i32* %start_i, metadata !7357, metadata !2614), !dbg !7358
  call void @llvm.dbg.declare(metadata i32* %esc_length, metadata !7359, metadata !2614), !dbg !7360
  %1 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7361
  %ac_esc_length = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1, i32 0, i32 159, !dbg !7362
  %2 = load i32, i32* %ac_esc_length, align 4, !dbg !7362
  store i32 %2, i32* %esc_length, align 4, !dbg !7360
  call void @llvm.dbg.declare(metadata i8** %length, metadata !7363, metadata !2614), !dbg !7364
  call void @llvm.dbg.declare(metadata i8** %last_length, metadata !7365, metadata !2614), !dbg !7366
  %3 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7367
  %pdsp = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %3, i32 0, i32 105, !dbg !7368
  %diff_pixels_unaligned = getelementptr inbounds %struct.PixblockDSPContext, %struct.PixblockDSPContext* %pdsp, i32 0, i32 2, !dbg !7369
  %4 = load void (i16*, i8*, i8*, i64)*, void (i16*, i8*, i8*, i64)** %diff_pixels_unaligned, align 8, !dbg !7369
  %5 = load i16*, i16** %temp, align 8, !dbg !7370
  %6 = load i8*, i8** %src1.addr, align 8, !dbg !7371
  %7 = load i8*, i8** %src2.addr, align 8, !dbg !7372
  %8 = load i64, i64* %stride.addr, align 8, !dbg !7373
  call void %4(i16* %5, i8* %6, i8* %7, i64 %8), !dbg !7367
  %9 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7374
  %fast_dct_quantize = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %9, i32 0, i32 318, !dbg !7375
  %10 = load i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)** %fast_dct_quantize, align 8, !dbg !7375
  %11 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7376
  %12 = load i16*, i16** %temp, align 8, !dbg !7377
  %13 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7378
  %qscale = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %13, i32 0, i32 78, !dbg !7379
  %14 = load i32, i32* %qscale, align 8, !dbg !7379
  %call = call i32 %10(%struct.MpegEncContext* %11, i16* %12, i32 0, i32 %14, i32* %i), !dbg !7374
  store i32 %call, i32* %last, align 4, !dbg !7380
  %15 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7381
  %block_last_index = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %15, i32 0, i32 4, !dbg !7382
  %arrayidx = getelementptr inbounds [12 x i32], [12 x i32]* %block_last_index, i64 0, i64 0, !dbg !7381
  store i32 %call, i32* %arrayidx, align 4, !dbg !7383
  store i32 0, i32* %bits, align 4, !dbg !7384
  %16 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7385
  %mb_intra = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %16, i32 0, i32 144, !dbg !7387
  %17 = load i32, i32* %mb_intra, align 8, !dbg !7387
  %tobool = icmp ne i32 %17, 0, !dbg !7385
  br i1 %tobool, label %if.then, label %if.else, !dbg !7388

if.then:                                          ; preds = %entry
  store i32 1, i32* %start_i, align 4, !dbg !7389
  %18 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7391
  %intra_ac_vlc_length = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %18, i32 0, i32 160, !dbg !7392
  %19 = load i8*, i8** %intra_ac_vlc_length, align 8, !dbg !7392
  store i8* %19, i8** %length, align 8, !dbg !7393
  %20 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7394
  %intra_ac_vlc_last_length = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %20, i32 0, i32 161, !dbg !7395
  %21 = load i8*, i8** %intra_ac_vlc_last_length, align 8, !dbg !7395
  store i8* %21, i8** %last_length, align 8, !dbg !7396
  %22 = load i16*, i16** %temp, align 8, !dbg !7397
  %arrayidx2 = getelementptr inbounds i16, i16* %22, i64 0, !dbg !7397
  %23 = load i16, i16* %arrayidx2, align 2, !dbg !7397
  %conv = sext i16 %23 to i32, !dbg !7397
  %add = add nsw i32 %conv, 256, !dbg !7398
  %idxprom = sext i32 %add to i64, !dbg !7399
  %24 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7399
  %luma_dc_vlc_length = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %24, i32 0, i32 166, !dbg !7400
  %25 = load i8*, i8** %luma_dc_vlc_length, align 8, !dbg !7400
  %arrayidx3 = getelementptr inbounds i8, i8* %25, i64 %idxprom, !dbg !7399
  %26 = load i8, i8* %arrayidx3, align 1, !dbg !7399
  %conv4 = zext i8 %26 to i32, !dbg !7399
  %27 = load i32, i32* %bits, align 4, !dbg !7401
  %add5 = add nsw i32 %27, %conv4, !dbg !7401
  store i32 %add5, i32* %bits, align 4, !dbg !7401
  br label %if.end, !dbg !7402

if.else:                                          ; preds = %entry
  store i32 0, i32* %start_i, align 4, !dbg !7403
  %28 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7405
  %inter_ac_vlc_length = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %28, i32 0, i32 164, !dbg !7406
  %29 = load i8*, i8** %inter_ac_vlc_length, align 8, !dbg !7406
  store i8* %29, i8** %length, align 8, !dbg !7407
  %30 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s.addr, align 8, !dbg !7408
  %inter_ac_vlc_last_length = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %30, i32 0, i32 165, !dbg !7409
  %31 = load i8*, i8** %inter_ac_vlc_last_length, align 8, !dbg !7409
  store i8* %31, i8** %last_length, align 8, !dbg !7410
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %32 = load i32, i32* %last, align 4, !dbg !7411
  %33 = load i32, i32* %start_i, align 4, !dbg !7413
  %cmp = icmp sge i32 %32, %33, !dbg !7414
  br i1 %cmp, label %if.then7, label %if.end53, !dbg !7415

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %run, align 4, !dbg !7416
  %34 = load i32, i32* %start_i, align 4, !dbg !7418
  store i32 %34, i32* %i, align 4, !dbg !7420
  br label %for.cond, !dbg !7421

for.cond:                                         ; preds = %for.inc, %if.then7
  %35 = load i32, i32* %i, align 4, !dbg !7422
  %36 = load i32, i32* %last, align 4, !dbg !7425
  %cmp8 = icmp slt i32 %35, %36, !dbg !7426
  br i1 %cmp8, label %for.body, label %for.end, !dbg !7427

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7428, metadata !2614), !dbg !7430
  %37 = load i32, i32* %i, align 4, !dbg !7431
  %idxprom10 = sext i32 %37 to i64, !dbg !7432
  %38 = load i8*, i8** %scantable, align 8, !dbg !7432
  %arrayidx11 = getelementptr inbounds i8, i8* %38, i64 %idxprom10, !dbg !7432
  %39 = load i8, i8* %arrayidx11, align 1, !dbg !7432
  %conv12 = zext i8 %39 to i32, !dbg !7432
  store i32 %conv12, i32* %j, align 4, !dbg !7430
  %40 = load i32, i32* %j, align 4, !dbg !7433
  %idxprom13 = sext i32 %40 to i64, !dbg !7434
  %41 = load i16*, i16** %temp, align 8, !dbg !7434
  %arrayidx14 = getelementptr inbounds i16, i16* %41, i64 %idxprom13, !dbg !7434
  %42 = load i16, i16* %arrayidx14, align 2, !dbg !7434
  %conv15 = sext i16 %42 to i32, !dbg !7434
  store i32 %conv15, i32* %level, align 4, !dbg !7435
  %43 = load i32, i32* %level, align 4, !dbg !7436
  %tobool16 = icmp ne i32 %43, 0, !dbg !7436
  br i1 %tobool16, label %if.then17, label %if.else30, !dbg !7438

if.then17:                                        ; preds = %for.body
  %44 = load i32, i32* %level, align 4, !dbg !7439
  %add18 = add nsw i32 %44, 64, !dbg !7439
  store i32 %add18, i32* %level, align 4, !dbg !7439
  %45 = load i32, i32* %level, align 4, !dbg !7441
  %and = and i32 %45, -128, !dbg !7443
  %cmp19 = icmp eq i32 %and, 0, !dbg !7444
  br i1 %cmp19, label %if.then21, label %if.else27, !dbg !7445

if.then21:                                        ; preds = %if.then17
  %46 = load i32, i32* %run, align 4, !dbg !7446
  %mul = mul nsw i32 %46, 128, !dbg !7447
  %47 = load i32, i32* %level, align 4, !dbg !7448
  %add22 = add nsw i32 %mul, %47, !dbg !7449
  %idxprom23 = sext i32 %add22 to i64, !dbg !7450
  %48 = load i8*, i8** %length, align 8, !dbg !7450
  %arrayidx24 = getelementptr inbounds i8, i8* %48, i64 %idxprom23, !dbg !7450
  %49 = load i8, i8* %arrayidx24, align 1, !dbg !7450
  %conv25 = zext i8 %49 to i32, !dbg !7450
  %50 = load i32, i32* %bits, align 4, !dbg !7451
  %add26 = add nsw i32 %50, %conv25, !dbg !7451
  store i32 %add26, i32* %bits, align 4, !dbg !7451
  br label %if.end29, !dbg !7452

if.else27:                                        ; preds = %if.then17
  %51 = load i32, i32* %esc_length, align 4, !dbg !7453
  %52 = load i32, i32* %bits, align 4, !dbg !7454
  %add28 = add nsw i32 %52, %51, !dbg !7454
  store i32 %add28, i32* %bits, align 4, !dbg !7454
  br label %if.end29

if.end29:                                         ; preds = %if.else27, %if.then21
  store i32 0, i32* %run, align 4, !dbg !7455
  br label %if.end31, !dbg !7456

if.else30:                                        ; preds = %for.body
  %53 = load i32, i32* %run, align 4, !dbg !7457
  %inc = add nsw i32 %53, 1, !dbg !7457
  store i32 %inc, i32* %run, align 4, !dbg !7457
  br label %if.end31

if.end31:                                         ; preds = %if.else30, %if.end29
  br label %for.inc, !dbg !7458

for.inc:                                          ; preds = %if.end31
  %54 = load i32, i32* %i, align 4, !dbg !7459
  %inc32 = add nsw i32 %54, 1, !dbg !7459
  store i32 %inc32, i32* %i, align 4, !dbg !7459
  br label %for.cond, !dbg !7461, !llvm.loop !7462

for.end:                                          ; preds = %for.cond
  %55 = load i32, i32* %last, align 4, !dbg !7464
  %idxprom33 = sext i32 %55 to i64, !dbg !7465
  %56 = load i8*, i8** %scantable, align 8, !dbg !7465
  %arrayidx34 = getelementptr inbounds i8, i8* %56, i64 %idxprom33, !dbg !7465
  %57 = load i8, i8* %arrayidx34, align 1, !dbg !7465
  %conv35 = zext i8 %57 to i32, !dbg !7465
  store i32 %conv35, i32* %i, align 4, !dbg !7466
  %58 = load i32, i32* %i, align 4, !dbg !7467
  %idxprom36 = sext i32 %58 to i64, !dbg !7468
  %59 = load i16*, i16** %temp, align 8, !dbg !7468
  %arrayidx37 = getelementptr inbounds i16, i16* %59, i64 %idxprom36, !dbg !7468
  %60 = load i16, i16* %arrayidx37, align 2, !dbg !7468
  %conv38 = sext i16 %60 to i32, !dbg !7468
  %add39 = add nsw i32 %conv38, 64, !dbg !7469
  store i32 %add39, i32* %level, align 4, !dbg !7470
  %61 = load i32, i32* %level, align 4, !dbg !7471
  %and40 = and i32 %61, -128, !dbg !7473
  %cmp41 = icmp eq i32 %and40, 0, !dbg !7474
  br i1 %cmp41, label %if.then43, label %if.else50, !dbg !7475

if.then43:                                        ; preds = %for.end
  %62 = load i32, i32* %run, align 4, !dbg !7476
  %mul44 = mul nsw i32 %62, 128, !dbg !7477
  %63 = load i32, i32* %level, align 4, !dbg !7478
  %add45 = add nsw i32 %mul44, %63, !dbg !7479
  %idxprom46 = sext i32 %add45 to i64, !dbg !7480
  %64 = load i8*, i8** %last_length, align 8, !dbg !7480
  %arrayidx47 = getelementptr inbounds i8, i8* %64, i64 %idxprom46, !dbg !7480
  %65 = load i8, i8* %arrayidx47, align 1, !dbg !7480
  %conv48 = zext i8 %65 to i32, !dbg !7480
  %66 = load i32, i32* %bits, align 4, !dbg !7481
  %add49 = add nsw i32 %66, %conv48, !dbg !7481
  store i32 %add49, i32* %bits, align 4, !dbg !7481
  br label %if.end52, !dbg !7482

if.else50:                                        ; preds = %for.end
  %67 = load i32, i32* %esc_length, align 4, !dbg !7483
  %68 = load i32, i32* %bits, align 4, !dbg !7484
  %add51 = add nsw i32 %68, %67, !dbg !7484
  store i32 %add51, i32* %bits, align 4, !dbg !7484
  br label %if.end52

if.end52:                                         ; preds = %if.else50, %if.then43
  br label %if.end53, !dbg !7485

if.end53:                                         ; preds = %if.end52, %if.end
  %69 = load i32, i32* %bits, align 4, !dbg !7486
  ret i32 %69, !dbg !7487
}

; Function Attrs: nounwind uwtable
define internal i32 @vsad16_c(%struct.MpegEncContext* %c, i8* %s1, i8* %s2, i64 %stride, i32 %h) #0 !dbg !7488 {
entry:
  %c.addr = alloca %struct.MpegEncContext*, align 8
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.MpegEncContext* %c, %struct.MpegEncContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %c.addr, metadata !7489, metadata !2614), !dbg !7490
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !7491, metadata !2614), !dbg !7492
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !7493, metadata !2614), !dbg !7494
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !7495, metadata !2614), !dbg !7496
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !7497, metadata !2614), !dbg !7498
  call void @llvm.dbg.declare(metadata i32* %score, metadata !7499, metadata !2614), !dbg !7500
  store i32 0, i32* %score, align 4, !dbg !7500
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7501, metadata !2614), !dbg !7502
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7503, metadata !2614), !dbg !7504
  store i32 1, i32* %y, align 4, !dbg !7505
  br label %for.cond, !dbg !7507

for.cond:                                         ; preds = %for.inc55, %entry
  %0 = load i32, i32* %y, align 4, !dbg !7508
  %1 = load i32, i32* %h.addr, align 4, !dbg !7511
  %cmp = icmp slt i32 %0, %1, !dbg !7512
  br i1 %cmp, label %for.body, label %for.end57, !dbg !7513

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !7514
  br label %for.cond1, !dbg !7518

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %x, align 4, !dbg !7519
  %cmp2 = icmp slt i32 %2, 16, !dbg !7522
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7523

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %x, align 4, !dbg !7524
  %idxprom = sext i32 %3 to i64, !dbg !7526
  %4 = load i8*, i8** %s1.addr, align 8, !dbg !7526
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !7526
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7526
  %conv = zext i8 %5 to i32, !dbg !7526
  %6 = load i32, i32* %x, align 4, !dbg !7527
  %idxprom4 = sext i32 %6 to i64, !dbg !7528
  %7 = load i8*, i8** %s2.addr, align 8, !dbg !7528
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 %idxprom4, !dbg !7528
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !7528
  %conv6 = zext i8 %8 to i32, !dbg !7528
  %sub = sub nsw i32 %conv, %conv6, !dbg !7529
  %9 = load i32, i32* %x, align 4, !dbg !7530
  %conv7 = sext i32 %9 to i64, !dbg !7530
  %10 = load i64, i64* %stride.addr, align 8, !dbg !7531
  %add = add nsw i64 %conv7, %10, !dbg !7532
  %11 = load i8*, i8** %s1.addr, align 8, !dbg !7533
  %arrayidx8 = getelementptr inbounds i8, i8* %11, i64 %add, !dbg !7533
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !7533
  %conv9 = zext i8 %12 to i32, !dbg !7533
  %sub10 = sub nsw i32 %sub, %conv9, !dbg !7534
  %13 = load i32, i32* %x, align 4, !dbg !7535
  %conv11 = sext i32 %13 to i64, !dbg !7535
  %14 = load i64, i64* %stride.addr, align 8, !dbg !7536
  %add12 = add nsw i64 %conv11, %14, !dbg !7537
  %15 = load i8*, i8** %s2.addr, align 8, !dbg !7538
  %arrayidx13 = getelementptr inbounds i8, i8* %15, i64 %add12, !dbg !7538
  %16 = load i8, i8* %arrayidx13, align 1, !dbg !7538
  %conv14 = zext i8 %16 to i32, !dbg !7538
  %add15 = add nsw i32 %sub10, %conv14, !dbg !7539
  %cmp16 = icmp sge i32 %add15, 0, !dbg !7540
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !7541

cond.true:                                        ; preds = %for.body3
  %17 = load i32, i32* %x, align 4, !dbg !7542
  %idxprom18 = sext i32 %17 to i64, !dbg !7544
  %18 = load i8*, i8** %s1.addr, align 8, !dbg !7544
  %arrayidx19 = getelementptr inbounds i8, i8* %18, i64 %idxprom18, !dbg !7544
  %19 = load i8, i8* %arrayidx19, align 1, !dbg !7544
  %conv20 = zext i8 %19 to i32, !dbg !7544
  %20 = load i32, i32* %x, align 4, !dbg !7545
  %idxprom21 = sext i32 %20 to i64, !dbg !7546
  %21 = load i8*, i8** %s2.addr, align 8, !dbg !7546
  %arrayidx22 = getelementptr inbounds i8, i8* %21, i64 %idxprom21, !dbg !7546
  %22 = load i8, i8* %arrayidx22, align 1, !dbg !7546
  %conv23 = zext i8 %22 to i32, !dbg !7546
  %sub24 = sub nsw i32 %conv20, %conv23, !dbg !7547
  %23 = load i32, i32* %x, align 4, !dbg !7548
  %conv25 = sext i32 %23 to i64, !dbg !7548
  %24 = load i64, i64* %stride.addr, align 8, !dbg !7549
  %add26 = add nsw i64 %conv25, %24, !dbg !7550
  %25 = load i8*, i8** %s1.addr, align 8, !dbg !7551
  %arrayidx27 = getelementptr inbounds i8, i8* %25, i64 %add26, !dbg !7551
  %26 = load i8, i8* %arrayidx27, align 1, !dbg !7551
  %conv28 = zext i8 %26 to i32, !dbg !7551
  %sub29 = sub nsw i32 %sub24, %conv28, !dbg !7552
  %27 = load i32, i32* %x, align 4, !dbg !7553
  %conv30 = sext i32 %27 to i64, !dbg !7553
  %28 = load i64, i64* %stride.addr, align 8, !dbg !7554
  %add31 = add nsw i64 %conv30, %28, !dbg !7555
  %29 = load i8*, i8** %s2.addr, align 8, !dbg !7556
  %arrayidx32 = getelementptr inbounds i8, i8* %29, i64 %add31, !dbg !7556
  %30 = load i8, i8* %arrayidx32, align 1, !dbg !7556
  %conv33 = zext i8 %30 to i32, !dbg !7556
  %add34 = add nsw i32 %sub29, %conv33, !dbg !7557
  br label %cond.end, !dbg !7558

cond.false:                                       ; preds = %for.body3
  %31 = load i32, i32* %x, align 4, !dbg !7559
  %idxprom35 = sext i32 %31 to i64, !dbg !7561
  %32 = load i8*, i8** %s1.addr, align 8, !dbg !7561
  %arrayidx36 = getelementptr inbounds i8, i8* %32, i64 %idxprom35, !dbg !7561
  %33 = load i8, i8* %arrayidx36, align 1, !dbg !7561
  %conv37 = zext i8 %33 to i32, !dbg !7561
  %34 = load i32, i32* %x, align 4, !dbg !7562
  %idxprom38 = sext i32 %34 to i64, !dbg !7563
  %35 = load i8*, i8** %s2.addr, align 8, !dbg !7563
  %arrayidx39 = getelementptr inbounds i8, i8* %35, i64 %idxprom38, !dbg !7563
  %36 = load i8, i8* %arrayidx39, align 1, !dbg !7563
  %conv40 = zext i8 %36 to i32, !dbg !7563
  %sub41 = sub nsw i32 %conv37, %conv40, !dbg !7564
  %37 = load i32, i32* %x, align 4, !dbg !7565
  %conv42 = sext i32 %37 to i64, !dbg !7565
  %38 = load i64, i64* %stride.addr, align 8, !dbg !7566
  %add43 = add nsw i64 %conv42, %38, !dbg !7567
  %39 = load i8*, i8** %s1.addr, align 8, !dbg !7568
  %arrayidx44 = getelementptr inbounds i8, i8* %39, i64 %add43, !dbg !7568
  %40 = load i8, i8* %arrayidx44, align 1, !dbg !7568
  %conv45 = zext i8 %40 to i32, !dbg !7568
  %sub46 = sub nsw i32 %sub41, %conv45, !dbg !7569
  %41 = load i32, i32* %x, align 4, !dbg !7570
  %conv47 = sext i32 %41 to i64, !dbg !7570
  %42 = load i64, i64* %stride.addr, align 8, !dbg !7571
  %add48 = add nsw i64 %conv47, %42, !dbg !7572
  %43 = load i8*, i8** %s2.addr, align 8, !dbg !7573
  %arrayidx49 = getelementptr inbounds i8, i8* %43, i64 %add48, !dbg !7573
  %44 = load i8, i8* %arrayidx49, align 1, !dbg !7573
  %conv50 = zext i8 %44 to i32, !dbg !7573
  %add51 = add nsw i32 %sub46, %conv50, !dbg !7574
  %sub52 = sub nsw i32 0, %add51, !dbg !7575
  br label %cond.end, !dbg !7576

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add34, %cond.true ], [ %sub52, %cond.false ], !dbg !7577
  %45 = load i32, i32* %score, align 4, !dbg !7579
  %add53 = add nsw i32 %45, %cond, !dbg !7579
  store i32 %add53, i32* %score, align 4, !dbg !7579
  br label %for.inc, !dbg !7580

for.inc:                                          ; preds = %cond.end
  %46 = load i32, i32* %x, align 4, !dbg !7581
  %inc = add nsw i32 %46, 1, !dbg !7581
  store i32 %inc, i32* %x, align 4, !dbg !7581
  br label %for.cond1, !dbg !7583, !llvm.loop !7584

for.end:                                          ; preds = %for.cond1
  %47 = load i64, i64* %stride.addr, align 8, !dbg !7586
  %48 = load i8*, i8** %s1.addr, align 8, !dbg !7588
  %add.ptr = getelementptr inbounds i8, i8* %48, i64 %47, !dbg !7588
  store i8* %add.ptr, i8** %s1.addr, align 8, !dbg !7588
  %49 = load i64, i64* %stride.addr, align 8, !dbg !7589
  %50 = load i8*, i8** %s2.addr, align 8, !dbg !7590
  %add.ptr54 = getelementptr inbounds i8, i8* %50, i64 %49, !dbg !7590
  store i8* %add.ptr54, i8** %s2.addr, align 8, !dbg !7590
  br label %for.inc55, !dbg !7591

for.inc55:                                        ; preds = %for.end
  %51 = load i32, i32* %y, align 4, !dbg !7592
  %inc56 = add nsw i32 %51, 1, !dbg !7592
  store i32 %inc56, i32* %y, align 4, !dbg !7592
  br label %for.cond, !dbg !7594, !llvm.loop !7595

for.end57:                                        ; preds = %for.cond
  %52 = load i32, i32* %score, align 4, !dbg !7597
  ret i32 %52, !dbg !7599
}

; Function Attrs: nounwind uwtable
define internal i32 @vsad8_c(%struct.MpegEncContext* %c, i8* %s1, i8* %s2, i64 %stride, i32 %h) #0 !dbg !7600 {
entry:
  %c.addr = alloca %struct.MpegEncContext*, align 8
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.MpegEncContext* %c, %struct.MpegEncContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %c.addr, metadata !7601, metadata !2614), !dbg !7602
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !7603, metadata !2614), !dbg !7604
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !7605, metadata !2614), !dbg !7606
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !7607, metadata !2614), !dbg !7608
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !7609, metadata !2614), !dbg !7610
  call void @llvm.dbg.declare(metadata i32* %score, metadata !7611, metadata !2614), !dbg !7612
  store i32 0, i32* %score, align 4, !dbg !7612
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7613, metadata !2614), !dbg !7614
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7615, metadata !2614), !dbg !7616
  store i32 1, i32* %y, align 4, !dbg !7617
  br label %for.cond, !dbg !7619

for.cond:                                         ; preds = %for.inc55, %entry
  %0 = load i32, i32* %y, align 4, !dbg !7620
  %1 = load i32, i32* %h.addr, align 4, !dbg !7623
  %cmp = icmp slt i32 %0, %1, !dbg !7624
  br i1 %cmp, label %for.body, label %for.end57, !dbg !7625

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !7626
  br label %for.cond1, !dbg !7630

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %x, align 4, !dbg !7631
  %cmp2 = icmp slt i32 %2, 8, !dbg !7634
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7635

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %x, align 4, !dbg !7636
  %idxprom = sext i32 %3 to i64, !dbg !7638
  %4 = load i8*, i8** %s1.addr, align 8, !dbg !7638
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !7638
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7638
  %conv = zext i8 %5 to i32, !dbg !7638
  %6 = load i32, i32* %x, align 4, !dbg !7639
  %idxprom4 = sext i32 %6 to i64, !dbg !7640
  %7 = load i8*, i8** %s2.addr, align 8, !dbg !7640
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 %idxprom4, !dbg !7640
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !7640
  %conv6 = zext i8 %8 to i32, !dbg !7640
  %sub = sub nsw i32 %conv, %conv6, !dbg !7641
  %9 = load i32, i32* %x, align 4, !dbg !7642
  %conv7 = sext i32 %9 to i64, !dbg !7642
  %10 = load i64, i64* %stride.addr, align 8, !dbg !7643
  %add = add nsw i64 %conv7, %10, !dbg !7644
  %11 = load i8*, i8** %s1.addr, align 8, !dbg !7645
  %arrayidx8 = getelementptr inbounds i8, i8* %11, i64 %add, !dbg !7645
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !7645
  %conv9 = zext i8 %12 to i32, !dbg !7645
  %sub10 = sub nsw i32 %sub, %conv9, !dbg !7646
  %13 = load i32, i32* %x, align 4, !dbg !7647
  %conv11 = sext i32 %13 to i64, !dbg !7647
  %14 = load i64, i64* %stride.addr, align 8, !dbg !7648
  %add12 = add nsw i64 %conv11, %14, !dbg !7649
  %15 = load i8*, i8** %s2.addr, align 8, !dbg !7650
  %arrayidx13 = getelementptr inbounds i8, i8* %15, i64 %add12, !dbg !7650
  %16 = load i8, i8* %arrayidx13, align 1, !dbg !7650
  %conv14 = zext i8 %16 to i32, !dbg !7650
  %add15 = add nsw i32 %sub10, %conv14, !dbg !7651
  %cmp16 = icmp sge i32 %add15, 0, !dbg !7652
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !7653

cond.true:                                        ; preds = %for.body3
  %17 = load i32, i32* %x, align 4, !dbg !7654
  %idxprom18 = sext i32 %17 to i64, !dbg !7656
  %18 = load i8*, i8** %s1.addr, align 8, !dbg !7656
  %arrayidx19 = getelementptr inbounds i8, i8* %18, i64 %idxprom18, !dbg !7656
  %19 = load i8, i8* %arrayidx19, align 1, !dbg !7656
  %conv20 = zext i8 %19 to i32, !dbg !7656
  %20 = load i32, i32* %x, align 4, !dbg !7657
  %idxprom21 = sext i32 %20 to i64, !dbg !7658
  %21 = load i8*, i8** %s2.addr, align 8, !dbg !7658
  %arrayidx22 = getelementptr inbounds i8, i8* %21, i64 %idxprom21, !dbg !7658
  %22 = load i8, i8* %arrayidx22, align 1, !dbg !7658
  %conv23 = zext i8 %22 to i32, !dbg !7658
  %sub24 = sub nsw i32 %conv20, %conv23, !dbg !7659
  %23 = load i32, i32* %x, align 4, !dbg !7660
  %conv25 = sext i32 %23 to i64, !dbg !7660
  %24 = load i64, i64* %stride.addr, align 8, !dbg !7661
  %add26 = add nsw i64 %conv25, %24, !dbg !7662
  %25 = load i8*, i8** %s1.addr, align 8, !dbg !7663
  %arrayidx27 = getelementptr inbounds i8, i8* %25, i64 %add26, !dbg !7663
  %26 = load i8, i8* %arrayidx27, align 1, !dbg !7663
  %conv28 = zext i8 %26 to i32, !dbg !7663
  %sub29 = sub nsw i32 %sub24, %conv28, !dbg !7664
  %27 = load i32, i32* %x, align 4, !dbg !7665
  %conv30 = sext i32 %27 to i64, !dbg !7665
  %28 = load i64, i64* %stride.addr, align 8, !dbg !7666
  %add31 = add nsw i64 %conv30, %28, !dbg !7667
  %29 = load i8*, i8** %s2.addr, align 8, !dbg !7668
  %arrayidx32 = getelementptr inbounds i8, i8* %29, i64 %add31, !dbg !7668
  %30 = load i8, i8* %arrayidx32, align 1, !dbg !7668
  %conv33 = zext i8 %30 to i32, !dbg !7668
  %add34 = add nsw i32 %sub29, %conv33, !dbg !7669
  br label %cond.end, !dbg !7670

cond.false:                                       ; preds = %for.body3
  %31 = load i32, i32* %x, align 4, !dbg !7671
  %idxprom35 = sext i32 %31 to i64, !dbg !7673
  %32 = load i8*, i8** %s1.addr, align 8, !dbg !7673
  %arrayidx36 = getelementptr inbounds i8, i8* %32, i64 %idxprom35, !dbg !7673
  %33 = load i8, i8* %arrayidx36, align 1, !dbg !7673
  %conv37 = zext i8 %33 to i32, !dbg !7673
  %34 = load i32, i32* %x, align 4, !dbg !7674
  %idxprom38 = sext i32 %34 to i64, !dbg !7675
  %35 = load i8*, i8** %s2.addr, align 8, !dbg !7675
  %arrayidx39 = getelementptr inbounds i8, i8* %35, i64 %idxprom38, !dbg !7675
  %36 = load i8, i8* %arrayidx39, align 1, !dbg !7675
  %conv40 = zext i8 %36 to i32, !dbg !7675
  %sub41 = sub nsw i32 %conv37, %conv40, !dbg !7676
  %37 = load i32, i32* %x, align 4, !dbg !7677
  %conv42 = sext i32 %37 to i64, !dbg !7677
  %38 = load i64, i64* %stride.addr, align 8, !dbg !7678
  %add43 = add nsw i64 %conv42, %38, !dbg !7679
  %39 = load i8*, i8** %s1.addr, align 8, !dbg !7680
  %arrayidx44 = getelementptr inbounds i8, i8* %39, i64 %add43, !dbg !7680
  %40 = load i8, i8* %arrayidx44, align 1, !dbg !7680
  %conv45 = zext i8 %40 to i32, !dbg !7680
  %sub46 = sub nsw i32 %sub41, %conv45, !dbg !7681
  %41 = load i32, i32* %x, align 4, !dbg !7682
  %conv47 = sext i32 %41 to i64, !dbg !7682
  %42 = load i64, i64* %stride.addr, align 8, !dbg !7683
  %add48 = add nsw i64 %conv47, %42, !dbg !7684
  %43 = load i8*, i8** %s2.addr, align 8, !dbg !7685
  %arrayidx49 = getelementptr inbounds i8, i8* %43, i64 %add48, !dbg !7685
  %44 = load i8, i8* %arrayidx49, align 1, !dbg !7685
  %conv50 = zext i8 %44 to i32, !dbg !7685
  %add51 = add nsw i32 %sub46, %conv50, !dbg !7686
  %sub52 = sub nsw i32 0, %add51, !dbg !7687
  br label %cond.end, !dbg !7688

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add34, %cond.true ], [ %sub52, %cond.false ], !dbg !7689
  %45 = load i32, i32* %score, align 4, !dbg !7691
  %add53 = add nsw i32 %45, %cond, !dbg !7691
  store i32 %add53, i32* %score, align 4, !dbg !7691
  br label %for.inc, !dbg !7692

for.inc:                                          ; preds = %cond.end
  %46 = load i32, i32* %x, align 4, !dbg !7693
  %inc = add nsw i32 %46, 1, !dbg !7693
  store i32 %inc, i32* %x, align 4, !dbg !7693
  br label %for.cond1, !dbg !7695, !llvm.loop !7696

for.end:                                          ; preds = %for.cond1
  %47 = load i64, i64* %stride.addr, align 8, !dbg !7698
  %48 = load i8*, i8** %s1.addr, align 8, !dbg !7700
  %add.ptr = getelementptr inbounds i8, i8* %48, i64 %47, !dbg !7700
  store i8* %add.ptr, i8** %s1.addr, align 8, !dbg !7700
  %49 = load i64, i64* %stride.addr, align 8, !dbg !7701
  %50 = load i8*, i8** %s2.addr, align 8, !dbg !7702
  %add.ptr54 = getelementptr inbounds i8, i8* %50, i64 %49, !dbg !7702
  store i8* %add.ptr54, i8** %s2.addr, align 8, !dbg !7702
  br label %for.inc55, !dbg !7703

for.inc55:                                        ; preds = %for.end
  %51 = load i32, i32* %y, align 4, !dbg !7704
  %inc56 = add nsw i32 %51, 1, !dbg !7704
  store i32 %inc56, i32* %y, align 4, !dbg !7704
  br label %for.cond, !dbg !7706, !llvm.loop !7707

for.end57:                                        ; preds = %for.cond
  %52 = load i32, i32* %score, align 4, !dbg !7709
  ret i32 %52, !dbg !7711
}

; Function Attrs: nounwind uwtable
define internal i32 @vsad_intra16_c(%struct.MpegEncContext* %c, i8* %s, i8* %dummy, i64 %stride, i32 %h) #0 !dbg !7712 {
entry:
  %c.addr = alloca %struct.MpegEncContext*, align 8
  %s.addr = alloca i8*, align 8
  %dummy.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.MpegEncContext* %c, %struct.MpegEncContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %c.addr, metadata !7713, metadata !2614), !dbg !7714
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !7715, metadata !2614), !dbg !7716
  store i8* %dummy, i8** %dummy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dummy.addr, metadata !7717, metadata !2614), !dbg !7718
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !7719, metadata !2614), !dbg !7720
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !7721, metadata !2614), !dbg !7722
  call void @llvm.dbg.declare(metadata i32* %score, metadata !7723, metadata !2614), !dbg !7724
  store i32 0, i32* %score, align 4, !dbg !7724
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7725, metadata !2614), !dbg !7726
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7727, metadata !2614), !dbg !7728
  store i32 1, i32* %y, align 4, !dbg !7729
  br label %for.cond, !dbg !7731

for.cond:                                         ; preds = %for.inc142, %entry
  %0 = load i32, i32* %y, align 4, !dbg !7732
  %1 = load i32, i32* %h.addr, align 4, !dbg !7735
  %cmp = icmp slt i32 %0, %1, !dbg !7736
  br i1 %cmp, label %for.body, label %for.end143, !dbg !7737

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !7738
  br label %for.cond1, !dbg !7742

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %x, align 4, !dbg !7743
  %cmp2 = icmp slt i32 %2, 16, !dbg !7746
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7747

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %x, align 4, !dbg !7748
  %idxprom = sext i32 %3 to i64, !dbg !7751
  %4 = load i8*, i8** %s.addr, align 8, !dbg !7751
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !7751
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7751
  %conv = zext i8 %5 to i32, !dbg !7751
  %6 = load i32, i32* %x, align 4, !dbg !7752
  %conv4 = sext i32 %6 to i64, !dbg !7752
  %7 = load i64, i64* %stride.addr, align 8, !dbg !7753
  %add = add nsw i64 %conv4, %7, !dbg !7754
  %8 = load i8*, i8** %s.addr, align 8, !dbg !7755
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 %add, !dbg !7755
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !7755
  %conv6 = zext i8 %9 to i32, !dbg !7755
  %sub = sub nsw i32 %conv, %conv6, !dbg !7756
  %cmp7 = icmp sge i32 %sub, 0, !dbg !7757
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !7758

cond.true:                                        ; preds = %for.body3
  %10 = load i32, i32* %x, align 4, !dbg !7759
  %idxprom9 = sext i32 %10 to i64, !dbg !7761
  %11 = load i8*, i8** %s.addr, align 8, !dbg !7761
  %arrayidx10 = getelementptr inbounds i8, i8* %11, i64 %idxprom9, !dbg !7761
  %12 = load i8, i8* %arrayidx10, align 1, !dbg !7761
  %conv11 = zext i8 %12 to i32, !dbg !7761
  %13 = load i32, i32* %x, align 4, !dbg !7762
  %conv12 = sext i32 %13 to i64, !dbg !7762
  %14 = load i64, i64* %stride.addr, align 8, !dbg !7763
  %add13 = add nsw i64 %conv12, %14, !dbg !7764
  %15 = load i8*, i8** %s.addr, align 8, !dbg !7765
  %arrayidx14 = getelementptr inbounds i8, i8* %15, i64 %add13, !dbg !7765
  %16 = load i8, i8* %arrayidx14, align 1, !dbg !7765
  %conv15 = zext i8 %16 to i32, !dbg !7765
  %sub16 = sub nsw i32 %conv11, %conv15, !dbg !7766
  br label %cond.end, !dbg !7767

cond.false:                                       ; preds = %for.body3
  %17 = load i32, i32* %x, align 4, !dbg !7768
  %idxprom17 = sext i32 %17 to i64, !dbg !7770
  %18 = load i8*, i8** %s.addr, align 8, !dbg !7770
  %arrayidx18 = getelementptr inbounds i8, i8* %18, i64 %idxprom17, !dbg !7770
  %19 = load i8, i8* %arrayidx18, align 1, !dbg !7770
  %conv19 = zext i8 %19 to i32, !dbg !7770
  %20 = load i32, i32* %x, align 4, !dbg !7771
  %conv20 = sext i32 %20 to i64, !dbg !7771
  %21 = load i64, i64* %stride.addr, align 8, !dbg !7772
  %add21 = add nsw i64 %conv20, %21, !dbg !7773
  %22 = load i8*, i8** %s.addr, align 8, !dbg !7774
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %add21, !dbg !7774
  %23 = load i8, i8* %arrayidx22, align 1, !dbg !7774
  %conv23 = zext i8 %23 to i32, !dbg !7774
  %sub24 = sub nsw i32 %conv19, %conv23, !dbg !7775
  %sub25 = sub nsw i32 0, %sub24, !dbg !7776
  br label %cond.end, !dbg !7777

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub16, %cond.true ], [ %sub25, %cond.false ], !dbg !7778
  %24 = load i32, i32* %x, align 4, !dbg !7780
  %add26 = add nsw i32 %24, 1, !dbg !7781
  %idxprom27 = sext i32 %add26 to i64, !dbg !7782
  %25 = load i8*, i8** %s.addr, align 8, !dbg !7782
  %arrayidx28 = getelementptr inbounds i8, i8* %25, i64 %idxprom27, !dbg !7782
  %26 = load i8, i8* %arrayidx28, align 1, !dbg !7782
  %conv29 = zext i8 %26 to i32, !dbg !7782
  %27 = load i32, i32* %x, align 4, !dbg !7783
  %conv30 = sext i32 %27 to i64, !dbg !7783
  %28 = load i64, i64* %stride.addr, align 8, !dbg !7784
  %add31 = add nsw i64 %conv30, %28, !dbg !7785
  %add32 = add nsw i64 %add31, 1, !dbg !7786
  %29 = load i8*, i8** %s.addr, align 8, !dbg !7787
  %arrayidx33 = getelementptr inbounds i8, i8* %29, i64 %add32, !dbg !7787
  %30 = load i8, i8* %arrayidx33, align 1, !dbg !7787
  %conv34 = zext i8 %30 to i32, !dbg !7787
  %sub35 = sub nsw i32 %conv29, %conv34, !dbg !7788
  %cmp36 = icmp sge i32 %sub35, 0, !dbg !7789
  br i1 %cmp36, label %cond.true38, label %cond.false49, !dbg !7790

cond.true38:                                      ; preds = %cond.end
  %31 = load i32, i32* %x, align 4, !dbg !7791
  %add39 = add nsw i32 %31, 1, !dbg !7793
  %idxprom40 = sext i32 %add39 to i64, !dbg !7794
  %32 = load i8*, i8** %s.addr, align 8, !dbg !7794
  %arrayidx41 = getelementptr inbounds i8, i8* %32, i64 %idxprom40, !dbg !7794
  %33 = load i8, i8* %arrayidx41, align 1, !dbg !7794
  %conv42 = zext i8 %33 to i32, !dbg !7794
  %34 = load i32, i32* %x, align 4, !dbg !7795
  %conv43 = sext i32 %34 to i64, !dbg !7795
  %35 = load i64, i64* %stride.addr, align 8, !dbg !7796
  %add44 = add nsw i64 %conv43, %35, !dbg !7797
  %add45 = add nsw i64 %add44, 1, !dbg !7798
  %36 = load i8*, i8** %s.addr, align 8, !dbg !7799
  %arrayidx46 = getelementptr inbounds i8, i8* %36, i64 %add45, !dbg !7799
  %37 = load i8, i8* %arrayidx46, align 1, !dbg !7799
  %conv47 = zext i8 %37 to i32, !dbg !7799
  %sub48 = sub nsw i32 %conv42, %conv47, !dbg !7800
  br label %cond.end61, !dbg !7801

cond.false49:                                     ; preds = %cond.end
  %38 = load i32, i32* %x, align 4, !dbg !7802
  %add50 = add nsw i32 %38, 1, !dbg !7804
  %idxprom51 = sext i32 %add50 to i64, !dbg !7805
  %39 = load i8*, i8** %s.addr, align 8, !dbg !7805
  %arrayidx52 = getelementptr inbounds i8, i8* %39, i64 %idxprom51, !dbg !7805
  %40 = load i8, i8* %arrayidx52, align 1, !dbg !7805
  %conv53 = zext i8 %40 to i32, !dbg !7805
  %41 = load i32, i32* %x, align 4, !dbg !7806
  %conv54 = sext i32 %41 to i64, !dbg !7806
  %42 = load i64, i64* %stride.addr, align 8, !dbg !7807
  %add55 = add nsw i64 %conv54, %42, !dbg !7808
  %add56 = add nsw i64 %add55, 1, !dbg !7809
  %43 = load i8*, i8** %s.addr, align 8, !dbg !7810
  %arrayidx57 = getelementptr inbounds i8, i8* %43, i64 %add56, !dbg !7810
  %44 = load i8, i8* %arrayidx57, align 1, !dbg !7810
  %conv58 = zext i8 %44 to i32, !dbg !7810
  %sub59 = sub nsw i32 %conv53, %conv58, !dbg !7811
  %sub60 = sub nsw i32 0, %sub59, !dbg !7812
  br label %cond.end61, !dbg !7813

cond.end61:                                       ; preds = %cond.false49, %cond.true38
  %cond62 = phi i32 [ %sub48, %cond.true38 ], [ %sub60, %cond.false49 ], !dbg !7814
  %add63 = add nsw i32 %cond, %cond62, !dbg !7816
  %45 = load i32, i32* %x, align 4, !dbg !7817
  %add64 = add nsw i32 %45, 2, !dbg !7818
  %idxprom65 = sext i32 %add64 to i64, !dbg !7819
  %46 = load i8*, i8** %s.addr, align 8, !dbg !7819
  %arrayidx66 = getelementptr inbounds i8, i8* %46, i64 %idxprom65, !dbg !7819
  %47 = load i8, i8* %arrayidx66, align 1, !dbg !7819
  %conv67 = zext i8 %47 to i32, !dbg !7819
  %48 = load i32, i32* %x, align 4, !dbg !7820
  %add68 = add nsw i32 %48, 2, !dbg !7821
  %conv69 = sext i32 %add68 to i64, !dbg !7820
  %49 = load i64, i64* %stride.addr, align 8, !dbg !7822
  %add70 = add nsw i64 %conv69, %49, !dbg !7823
  %50 = load i8*, i8** %s.addr, align 8, !dbg !7824
  %arrayidx71 = getelementptr inbounds i8, i8* %50, i64 %add70, !dbg !7824
  %51 = load i8, i8* %arrayidx71, align 1, !dbg !7824
  %conv72 = zext i8 %51 to i32, !dbg !7824
  %sub73 = sub nsw i32 %conv67, %conv72, !dbg !7825
  %cmp74 = icmp sge i32 %sub73, 0, !dbg !7826
  br i1 %cmp74, label %cond.true76, label %cond.false87, !dbg !7827

cond.true76:                                      ; preds = %cond.end61
  %52 = load i32, i32* %x, align 4, !dbg !7828
  %add77 = add nsw i32 %52, 2, !dbg !7830
  %idxprom78 = sext i32 %add77 to i64, !dbg !7831
  %53 = load i8*, i8** %s.addr, align 8, !dbg !7831
  %arrayidx79 = getelementptr inbounds i8, i8* %53, i64 %idxprom78, !dbg !7831
  %54 = load i8, i8* %arrayidx79, align 1, !dbg !7831
  %conv80 = zext i8 %54 to i32, !dbg !7831
  %55 = load i32, i32* %x, align 4, !dbg !7832
  %add81 = add nsw i32 %55, 2, !dbg !7833
  %conv82 = sext i32 %add81 to i64, !dbg !7832
  %56 = load i64, i64* %stride.addr, align 8, !dbg !7834
  %add83 = add nsw i64 %conv82, %56, !dbg !7835
  %57 = load i8*, i8** %s.addr, align 8, !dbg !7836
  %arrayidx84 = getelementptr inbounds i8, i8* %57, i64 %add83, !dbg !7836
  %58 = load i8, i8* %arrayidx84, align 1, !dbg !7836
  %conv85 = zext i8 %58 to i32, !dbg !7836
  %sub86 = sub nsw i32 %conv80, %conv85, !dbg !7837
  br label %cond.end99, !dbg !7838

cond.false87:                                     ; preds = %cond.end61
  %59 = load i32, i32* %x, align 4, !dbg !7839
  %add88 = add nsw i32 %59, 2, !dbg !7841
  %idxprom89 = sext i32 %add88 to i64, !dbg !7842
  %60 = load i8*, i8** %s.addr, align 8, !dbg !7842
  %arrayidx90 = getelementptr inbounds i8, i8* %60, i64 %idxprom89, !dbg !7842
  %61 = load i8, i8* %arrayidx90, align 1, !dbg !7842
  %conv91 = zext i8 %61 to i32, !dbg !7842
  %62 = load i32, i32* %x, align 4, !dbg !7843
  %add92 = add nsw i32 %62, 2, !dbg !7844
  %conv93 = sext i32 %add92 to i64, !dbg !7843
  %63 = load i64, i64* %stride.addr, align 8, !dbg !7845
  %add94 = add nsw i64 %conv93, %63, !dbg !7846
  %64 = load i8*, i8** %s.addr, align 8, !dbg !7847
  %arrayidx95 = getelementptr inbounds i8, i8* %64, i64 %add94, !dbg !7847
  %65 = load i8, i8* %arrayidx95, align 1, !dbg !7847
  %conv96 = zext i8 %65 to i32, !dbg !7847
  %sub97 = sub nsw i32 %conv91, %conv96, !dbg !7848
  %sub98 = sub nsw i32 0, %sub97, !dbg !7849
  br label %cond.end99, !dbg !7850

cond.end99:                                       ; preds = %cond.false87, %cond.true76
  %cond100 = phi i32 [ %sub86, %cond.true76 ], [ %sub98, %cond.false87 ], !dbg !7851
  %add101 = add nsw i32 %add63, %cond100, !dbg !7853
  %66 = load i32, i32* %x, align 4, !dbg !7854
  %add102 = add nsw i32 %66, 3, !dbg !7855
  %idxprom103 = sext i32 %add102 to i64, !dbg !7856
  %67 = load i8*, i8** %s.addr, align 8, !dbg !7856
  %arrayidx104 = getelementptr inbounds i8, i8* %67, i64 %idxprom103, !dbg !7856
  %68 = load i8, i8* %arrayidx104, align 1, !dbg !7856
  %conv105 = zext i8 %68 to i32, !dbg !7856
  %69 = load i32, i32* %x, align 4, !dbg !7857
  %add106 = add nsw i32 %69, 3, !dbg !7858
  %conv107 = sext i32 %add106 to i64, !dbg !7857
  %70 = load i64, i64* %stride.addr, align 8, !dbg !7859
  %add108 = add nsw i64 %conv107, %70, !dbg !7860
  %71 = load i8*, i8** %s.addr, align 8, !dbg !7861
  %arrayidx109 = getelementptr inbounds i8, i8* %71, i64 %add108, !dbg !7861
  %72 = load i8, i8* %arrayidx109, align 1, !dbg !7861
  %conv110 = zext i8 %72 to i32, !dbg !7861
  %sub111 = sub nsw i32 %conv105, %conv110, !dbg !7862
  %cmp112 = icmp sge i32 %sub111, 0, !dbg !7863
  br i1 %cmp112, label %cond.true114, label %cond.false125, !dbg !7864

cond.true114:                                     ; preds = %cond.end99
  %73 = load i32, i32* %x, align 4, !dbg !7865
  %add115 = add nsw i32 %73, 3, !dbg !7867
  %idxprom116 = sext i32 %add115 to i64, !dbg !7868
  %74 = load i8*, i8** %s.addr, align 8, !dbg !7868
  %arrayidx117 = getelementptr inbounds i8, i8* %74, i64 %idxprom116, !dbg !7868
  %75 = load i8, i8* %arrayidx117, align 1, !dbg !7868
  %conv118 = zext i8 %75 to i32, !dbg !7868
  %76 = load i32, i32* %x, align 4, !dbg !7869
  %add119 = add nsw i32 %76, 3, !dbg !7870
  %conv120 = sext i32 %add119 to i64, !dbg !7869
  %77 = load i64, i64* %stride.addr, align 8, !dbg !7871
  %add121 = add nsw i64 %conv120, %77, !dbg !7872
  %78 = load i8*, i8** %s.addr, align 8, !dbg !7873
  %arrayidx122 = getelementptr inbounds i8, i8* %78, i64 %add121, !dbg !7873
  %79 = load i8, i8* %arrayidx122, align 1, !dbg !7873
  %conv123 = zext i8 %79 to i32, !dbg !7873
  %sub124 = sub nsw i32 %conv118, %conv123, !dbg !7874
  br label %cond.end137, !dbg !7875

cond.false125:                                    ; preds = %cond.end99
  %80 = load i32, i32* %x, align 4, !dbg !7876
  %add126 = add nsw i32 %80, 3, !dbg !7878
  %idxprom127 = sext i32 %add126 to i64, !dbg !7879
  %81 = load i8*, i8** %s.addr, align 8, !dbg !7879
  %arrayidx128 = getelementptr inbounds i8, i8* %81, i64 %idxprom127, !dbg !7879
  %82 = load i8, i8* %arrayidx128, align 1, !dbg !7879
  %conv129 = zext i8 %82 to i32, !dbg !7879
  %83 = load i32, i32* %x, align 4, !dbg !7880
  %add130 = add nsw i32 %83, 3, !dbg !7881
  %conv131 = sext i32 %add130 to i64, !dbg !7880
  %84 = load i64, i64* %stride.addr, align 8, !dbg !7882
  %add132 = add nsw i64 %conv131, %84, !dbg !7883
  %85 = load i8*, i8** %s.addr, align 8, !dbg !7884
  %arrayidx133 = getelementptr inbounds i8, i8* %85, i64 %add132, !dbg !7884
  %86 = load i8, i8* %arrayidx133, align 1, !dbg !7884
  %conv134 = zext i8 %86 to i32, !dbg !7884
  %sub135 = sub nsw i32 %conv129, %conv134, !dbg !7885
  %sub136 = sub nsw i32 0, %sub135, !dbg !7886
  br label %cond.end137, !dbg !7887

cond.end137:                                      ; preds = %cond.false125, %cond.true114
  %cond138 = phi i32 [ %sub124, %cond.true114 ], [ %sub136, %cond.false125 ], !dbg !7888
  %add139 = add nsw i32 %add101, %cond138, !dbg !7890
  %87 = load i32, i32* %score, align 4, !dbg !7891
  %add140 = add nsw i32 %87, %add139, !dbg !7891
  store i32 %add140, i32* %score, align 4, !dbg !7891
  br label %for.inc, !dbg !7892

for.inc:                                          ; preds = %cond.end137
  %88 = load i32, i32* %x, align 4, !dbg !7893
  %add141 = add nsw i32 %88, 4, !dbg !7893
  store i32 %add141, i32* %x, align 4, !dbg !7893
  br label %for.cond1, !dbg !7895, !llvm.loop !7896

for.end:                                          ; preds = %for.cond1
  %89 = load i64, i64* %stride.addr, align 8, !dbg !7898
  %90 = load i8*, i8** %s.addr, align 8, !dbg !7900
  %add.ptr = getelementptr inbounds i8, i8* %90, i64 %89, !dbg !7900
  store i8* %add.ptr, i8** %s.addr, align 8, !dbg !7900
  br label %for.inc142, !dbg !7901

for.inc142:                                       ; preds = %for.end
  %91 = load i32, i32* %y, align 4, !dbg !7902
  %inc = add nsw i32 %91, 1, !dbg !7902
  store i32 %inc, i32* %y, align 4, !dbg !7902
  br label %for.cond, !dbg !7904, !llvm.loop !7905

for.end143:                                       ; preds = %for.cond
  %92 = load i32, i32* %score, align 4, !dbg !7907
  ret i32 %92, !dbg !7909
}

; Function Attrs: nounwind uwtable
define internal i32 @vsad_intra8_c(%struct.MpegEncContext* %c, i8* %s, i8* %dummy, i64 %stride, i32 %h) #0 !dbg !7910 {
entry:
  %c.addr = alloca %struct.MpegEncContext*, align 8
  %s.addr = alloca i8*, align 8
  %dummy.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.MpegEncContext* %c, %struct.MpegEncContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %c.addr, metadata !7911, metadata !2614), !dbg !7912
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !7913, metadata !2614), !dbg !7914
  store i8* %dummy, i8** %dummy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dummy.addr, metadata !7915, metadata !2614), !dbg !7916
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !7917, metadata !2614), !dbg !7918
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !7919, metadata !2614), !dbg !7920
  call void @llvm.dbg.declare(metadata i32* %score, metadata !7921, metadata !2614), !dbg !7922
  store i32 0, i32* %score, align 4, !dbg !7922
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7923, metadata !2614), !dbg !7924
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7925, metadata !2614), !dbg !7926
  store i32 1, i32* %y, align 4, !dbg !7927
  br label %for.cond, !dbg !7929

for.cond:                                         ; preds = %for.inc142, %entry
  %0 = load i32, i32* %y, align 4, !dbg !7930
  %1 = load i32, i32* %h.addr, align 4, !dbg !7933
  %cmp = icmp slt i32 %0, %1, !dbg !7934
  br i1 %cmp, label %for.body, label %for.end143, !dbg !7935

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !7936
  br label %for.cond1, !dbg !7940

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %x, align 4, !dbg !7941
  %cmp2 = icmp slt i32 %2, 8, !dbg !7944
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7945

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %x, align 4, !dbg !7946
  %idxprom = sext i32 %3 to i64, !dbg !7949
  %4 = load i8*, i8** %s.addr, align 8, !dbg !7949
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !7949
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7949
  %conv = zext i8 %5 to i32, !dbg !7949
  %6 = load i32, i32* %x, align 4, !dbg !7950
  %conv4 = sext i32 %6 to i64, !dbg !7950
  %7 = load i64, i64* %stride.addr, align 8, !dbg !7951
  %add = add nsw i64 %conv4, %7, !dbg !7952
  %8 = load i8*, i8** %s.addr, align 8, !dbg !7953
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 %add, !dbg !7953
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !7953
  %conv6 = zext i8 %9 to i32, !dbg !7953
  %sub = sub nsw i32 %conv, %conv6, !dbg !7954
  %cmp7 = icmp sge i32 %sub, 0, !dbg !7955
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !7956

cond.true:                                        ; preds = %for.body3
  %10 = load i32, i32* %x, align 4, !dbg !7957
  %idxprom9 = sext i32 %10 to i64, !dbg !7959
  %11 = load i8*, i8** %s.addr, align 8, !dbg !7959
  %arrayidx10 = getelementptr inbounds i8, i8* %11, i64 %idxprom9, !dbg !7959
  %12 = load i8, i8* %arrayidx10, align 1, !dbg !7959
  %conv11 = zext i8 %12 to i32, !dbg !7959
  %13 = load i32, i32* %x, align 4, !dbg !7960
  %conv12 = sext i32 %13 to i64, !dbg !7960
  %14 = load i64, i64* %stride.addr, align 8, !dbg !7961
  %add13 = add nsw i64 %conv12, %14, !dbg !7962
  %15 = load i8*, i8** %s.addr, align 8, !dbg !7963
  %arrayidx14 = getelementptr inbounds i8, i8* %15, i64 %add13, !dbg !7963
  %16 = load i8, i8* %arrayidx14, align 1, !dbg !7963
  %conv15 = zext i8 %16 to i32, !dbg !7963
  %sub16 = sub nsw i32 %conv11, %conv15, !dbg !7964
  br label %cond.end, !dbg !7965

cond.false:                                       ; preds = %for.body3
  %17 = load i32, i32* %x, align 4, !dbg !7966
  %idxprom17 = sext i32 %17 to i64, !dbg !7968
  %18 = load i8*, i8** %s.addr, align 8, !dbg !7968
  %arrayidx18 = getelementptr inbounds i8, i8* %18, i64 %idxprom17, !dbg !7968
  %19 = load i8, i8* %arrayidx18, align 1, !dbg !7968
  %conv19 = zext i8 %19 to i32, !dbg !7968
  %20 = load i32, i32* %x, align 4, !dbg !7969
  %conv20 = sext i32 %20 to i64, !dbg !7969
  %21 = load i64, i64* %stride.addr, align 8, !dbg !7970
  %add21 = add nsw i64 %conv20, %21, !dbg !7971
  %22 = load i8*, i8** %s.addr, align 8, !dbg !7972
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %add21, !dbg !7972
  %23 = load i8, i8* %arrayidx22, align 1, !dbg !7972
  %conv23 = zext i8 %23 to i32, !dbg !7972
  %sub24 = sub nsw i32 %conv19, %conv23, !dbg !7973
  %sub25 = sub nsw i32 0, %sub24, !dbg !7974
  br label %cond.end, !dbg !7975

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub16, %cond.true ], [ %sub25, %cond.false ], !dbg !7976
  %24 = load i32, i32* %x, align 4, !dbg !7978
  %add26 = add nsw i32 %24, 1, !dbg !7979
  %idxprom27 = sext i32 %add26 to i64, !dbg !7980
  %25 = load i8*, i8** %s.addr, align 8, !dbg !7980
  %arrayidx28 = getelementptr inbounds i8, i8* %25, i64 %idxprom27, !dbg !7980
  %26 = load i8, i8* %arrayidx28, align 1, !dbg !7980
  %conv29 = zext i8 %26 to i32, !dbg !7980
  %27 = load i32, i32* %x, align 4, !dbg !7981
  %conv30 = sext i32 %27 to i64, !dbg !7981
  %28 = load i64, i64* %stride.addr, align 8, !dbg !7982
  %add31 = add nsw i64 %conv30, %28, !dbg !7983
  %add32 = add nsw i64 %add31, 1, !dbg !7984
  %29 = load i8*, i8** %s.addr, align 8, !dbg !7985
  %arrayidx33 = getelementptr inbounds i8, i8* %29, i64 %add32, !dbg !7985
  %30 = load i8, i8* %arrayidx33, align 1, !dbg !7985
  %conv34 = zext i8 %30 to i32, !dbg !7985
  %sub35 = sub nsw i32 %conv29, %conv34, !dbg !7986
  %cmp36 = icmp sge i32 %sub35, 0, !dbg !7987
  br i1 %cmp36, label %cond.true38, label %cond.false49, !dbg !7988

cond.true38:                                      ; preds = %cond.end
  %31 = load i32, i32* %x, align 4, !dbg !7989
  %add39 = add nsw i32 %31, 1, !dbg !7991
  %idxprom40 = sext i32 %add39 to i64, !dbg !7992
  %32 = load i8*, i8** %s.addr, align 8, !dbg !7992
  %arrayidx41 = getelementptr inbounds i8, i8* %32, i64 %idxprom40, !dbg !7992
  %33 = load i8, i8* %arrayidx41, align 1, !dbg !7992
  %conv42 = zext i8 %33 to i32, !dbg !7992
  %34 = load i32, i32* %x, align 4, !dbg !7993
  %conv43 = sext i32 %34 to i64, !dbg !7993
  %35 = load i64, i64* %stride.addr, align 8, !dbg !7994
  %add44 = add nsw i64 %conv43, %35, !dbg !7995
  %add45 = add nsw i64 %add44, 1, !dbg !7996
  %36 = load i8*, i8** %s.addr, align 8, !dbg !7997
  %arrayidx46 = getelementptr inbounds i8, i8* %36, i64 %add45, !dbg !7997
  %37 = load i8, i8* %arrayidx46, align 1, !dbg !7997
  %conv47 = zext i8 %37 to i32, !dbg !7997
  %sub48 = sub nsw i32 %conv42, %conv47, !dbg !7998
  br label %cond.end61, !dbg !7999

cond.false49:                                     ; preds = %cond.end
  %38 = load i32, i32* %x, align 4, !dbg !8000
  %add50 = add nsw i32 %38, 1, !dbg !8002
  %idxprom51 = sext i32 %add50 to i64, !dbg !8003
  %39 = load i8*, i8** %s.addr, align 8, !dbg !8003
  %arrayidx52 = getelementptr inbounds i8, i8* %39, i64 %idxprom51, !dbg !8003
  %40 = load i8, i8* %arrayidx52, align 1, !dbg !8003
  %conv53 = zext i8 %40 to i32, !dbg !8003
  %41 = load i32, i32* %x, align 4, !dbg !8004
  %conv54 = sext i32 %41 to i64, !dbg !8004
  %42 = load i64, i64* %stride.addr, align 8, !dbg !8005
  %add55 = add nsw i64 %conv54, %42, !dbg !8006
  %add56 = add nsw i64 %add55, 1, !dbg !8007
  %43 = load i8*, i8** %s.addr, align 8, !dbg !8008
  %arrayidx57 = getelementptr inbounds i8, i8* %43, i64 %add56, !dbg !8008
  %44 = load i8, i8* %arrayidx57, align 1, !dbg !8008
  %conv58 = zext i8 %44 to i32, !dbg !8008
  %sub59 = sub nsw i32 %conv53, %conv58, !dbg !8009
  %sub60 = sub nsw i32 0, %sub59, !dbg !8010
  br label %cond.end61, !dbg !8011

cond.end61:                                       ; preds = %cond.false49, %cond.true38
  %cond62 = phi i32 [ %sub48, %cond.true38 ], [ %sub60, %cond.false49 ], !dbg !8012
  %add63 = add nsw i32 %cond, %cond62, !dbg !8014
  %45 = load i32, i32* %x, align 4, !dbg !8015
  %add64 = add nsw i32 %45, 2, !dbg !8016
  %idxprom65 = sext i32 %add64 to i64, !dbg !8017
  %46 = load i8*, i8** %s.addr, align 8, !dbg !8017
  %arrayidx66 = getelementptr inbounds i8, i8* %46, i64 %idxprom65, !dbg !8017
  %47 = load i8, i8* %arrayidx66, align 1, !dbg !8017
  %conv67 = zext i8 %47 to i32, !dbg !8017
  %48 = load i32, i32* %x, align 4, !dbg !8018
  %add68 = add nsw i32 %48, 2, !dbg !8019
  %conv69 = sext i32 %add68 to i64, !dbg !8018
  %49 = load i64, i64* %stride.addr, align 8, !dbg !8020
  %add70 = add nsw i64 %conv69, %49, !dbg !8021
  %50 = load i8*, i8** %s.addr, align 8, !dbg !8022
  %arrayidx71 = getelementptr inbounds i8, i8* %50, i64 %add70, !dbg !8022
  %51 = load i8, i8* %arrayidx71, align 1, !dbg !8022
  %conv72 = zext i8 %51 to i32, !dbg !8022
  %sub73 = sub nsw i32 %conv67, %conv72, !dbg !8023
  %cmp74 = icmp sge i32 %sub73, 0, !dbg !8024
  br i1 %cmp74, label %cond.true76, label %cond.false87, !dbg !8025

cond.true76:                                      ; preds = %cond.end61
  %52 = load i32, i32* %x, align 4, !dbg !8026
  %add77 = add nsw i32 %52, 2, !dbg !8028
  %idxprom78 = sext i32 %add77 to i64, !dbg !8029
  %53 = load i8*, i8** %s.addr, align 8, !dbg !8029
  %arrayidx79 = getelementptr inbounds i8, i8* %53, i64 %idxprom78, !dbg !8029
  %54 = load i8, i8* %arrayidx79, align 1, !dbg !8029
  %conv80 = zext i8 %54 to i32, !dbg !8029
  %55 = load i32, i32* %x, align 4, !dbg !8030
  %add81 = add nsw i32 %55, 2, !dbg !8031
  %conv82 = sext i32 %add81 to i64, !dbg !8030
  %56 = load i64, i64* %stride.addr, align 8, !dbg !8032
  %add83 = add nsw i64 %conv82, %56, !dbg !8033
  %57 = load i8*, i8** %s.addr, align 8, !dbg !8034
  %arrayidx84 = getelementptr inbounds i8, i8* %57, i64 %add83, !dbg !8034
  %58 = load i8, i8* %arrayidx84, align 1, !dbg !8034
  %conv85 = zext i8 %58 to i32, !dbg !8034
  %sub86 = sub nsw i32 %conv80, %conv85, !dbg !8035
  br label %cond.end99, !dbg !8036

cond.false87:                                     ; preds = %cond.end61
  %59 = load i32, i32* %x, align 4, !dbg !8037
  %add88 = add nsw i32 %59, 2, !dbg !8039
  %idxprom89 = sext i32 %add88 to i64, !dbg !8040
  %60 = load i8*, i8** %s.addr, align 8, !dbg !8040
  %arrayidx90 = getelementptr inbounds i8, i8* %60, i64 %idxprom89, !dbg !8040
  %61 = load i8, i8* %arrayidx90, align 1, !dbg !8040
  %conv91 = zext i8 %61 to i32, !dbg !8040
  %62 = load i32, i32* %x, align 4, !dbg !8041
  %add92 = add nsw i32 %62, 2, !dbg !8042
  %conv93 = sext i32 %add92 to i64, !dbg !8041
  %63 = load i64, i64* %stride.addr, align 8, !dbg !8043
  %add94 = add nsw i64 %conv93, %63, !dbg !8044
  %64 = load i8*, i8** %s.addr, align 8, !dbg !8045
  %arrayidx95 = getelementptr inbounds i8, i8* %64, i64 %add94, !dbg !8045
  %65 = load i8, i8* %arrayidx95, align 1, !dbg !8045
  %conv96 = zext i8 %65 to i32, !dbg !8045
  %sub97 = sub nsw i32 %conv91, %conv96, !dbg !8046
  %sub98 = sub nsw i32 0, %sub97, !dbg !8047
  br label %cond.end99, !dbg !8048

cond.end99:                                       ; preds = %cond.false87, %cond.true76
  %cond100 = phi i32 [ %sub86, %cond.true76 ], [ %sub98, %cond.false87 ], !dbg !8049
  %add101 = add nsw i32 %add63, %cond100, !dbg !8051
  %66 = load i32, i32* %x, align 4, !dbg !8052
  %add102 = add nsw i32 %66, 3, !dbg !8053
  %idxprom103 = sext i32 %add102 to i64, !dbg !8054
  %67 = load i8*, i8** %s.addr, align 8, !dbg !8054
  %arrayidx104 = getelementptr inbounds i8, i8* %67, i64 %idxprom103, !dbg !8054
  %68 = load i8, i8* %arrayidx104, align 1, !dbg !8054
  %conv105 = zext i8 %68 to i32, !dbg !8054
  %69 = load i32, i32* %x, align 4, !dbg !8055
  %add106 = add nsw i32 %69, 3, !dbg !8056
  %conv107 = sext i32 %add106 to i64, !dbg !8055
  %70 = load i64, i64* %stride.addr, align 8, !dbg !8057
  %add108 = add nsw i64 %conv107, %70, !dbg !8058
  %71 = load i8*, i8** %s.addr, align 8, !dbg !8059
  %arrayidx109 = getelementptr inbounds i8, i8* %71, i64 %add108, !dbg !8059
  %72 = load i8, i8* %arrayidx109, align 1, !dbg !8059
  %conv110 = zext i8 %72 to i32, !dbg !8059
  %sub111 = sub nsw i32 %conv105, %conv110, !dbg !8060
  %cmp112 = icmp sge i32 %sub111, 0, !dbg !8061
  br i1 %cmp112, label %cond.true114, label %cond.false125, !dbg !8062

cond.true114:                                     ; preds = %cond.end99
  %73 = load i32, i32* %x, align 4, !dbg !8063
  %add115 = add nsw i32 %73, 3, !dbg !8065
  %idxprom116 = sext i32 %add115 to i64, !dbg !8066
  %74 = load i8*, i8** %s.addr, align 8, !dbg !8066
  %arrayidx117 = getelementptr inbounds i8, i8* %74, i64 %idxprom116, !dbg !8066
  %75 = load i8, i8* %arrayidx117, align 1, !dbg !8066
  %conv118 = zext i8 %75 to i32, !dbg !8066
  %76 = load i32, i32* %x, align 4, !dbg !8067
  %add119 = add nsw i32 %76, 3, !dbg !8068
  %conv120 = sext i32 %add119 to i64, !dbg !8067
  %77 = load i64, i64* %stride.addr, align 8, !dbg !8069
  %add121 = add nsw i64 %conv120, %77, !dbg !8070
  %78 = load i8*, i8** %s.addr, align 8, !dbg !8071
  %arrayidx122 = getelementptr inbounds i8, i8* %78, i64 %add121, !dbg !8071
  %79 = load i8, i8* %arrayidx122, align 1, !dbg !8071
  %conv123 = zext i8 %79 to i32, !dbg !8071
  %sub124 = sub nsw i32 %conv118, %conv123, !dbg !8072
  br label %cond.end137, !dbg !8073

cond.false125:                                    ; preds = %cond.end99
  %80 = load i32, i32* %x, align 4, !dbg !8074
  %add126 = add nsw i32 %80, 3, !dbg !8076
  %idxprom127 = sext i32 %add126 to i64, !dbg !8077
  %81 = load i8*, i8** %s.addr, align 8, !dbg !8077
  %arrayidx128 = getelementptr inbounds i8, i8* %81, i64 %idxprom127, !dbg !8077
  %82 = load i8, i8* %arrayidx128, align 1, !dbg !8077
  %conv129 = zext i8 %82 to i32, !dbg !8077
  %83 = load i32, i32* %x, align 4, !dbg !8078
  %add130 = add nsw i32 %83, 3, !dbg !8079
  %conv131 = sext i32 %add130 to i64, !dbg !8078
  %84 = load i64, i64* %stride.addr, align 8, !dbg !8080
  %add132 = add nsw i64 %conv131, %84, !dbg !8081
  %85 = load i8*, i8** %s.addr, align 8, !dbg !8082
  %arrayidx133 = getelementptr inbounds i8, i8* %85, i64 %add132, !dbg !8082
  %86 = load i8, i8* %arrayidx133, align 1, !dbg !8082
  %conv134 = zext i8 %86 to i32, !dbg !8082
  %sub135 = sub nsw i32 %conv129, %conv134, !dbg !8083
  %sub136 = sub nsw i32 0, %sub135, !dbg !8084
  br label %cond.end137, !dbg !8085

cond.end137:                                      ; preds = %cond.false125, %cond.true114
  %cond138 = phi i32 [ %sub124, %cond.true114 ], [ %sub136, %cond.false125 ], !dbg !8086
  %add139 = add nsw i32 %add101, %cond138, !dbg !8088
  %87 = load i32, i32* %score, align 4, !dbg !8089
  %add140 = add nsw i32 %87, %add139, !dbg !8089
  store i32 %add140, i32* %score, align 4, !dbg !8089
  br label %for.inc, !dbg !8090

for.inc:                                          ; preds = %cond.end137
  %88 = load i32, i32* %x, align 4, !dbg !8091
  %add141 = add nsw i32 %88, 4, !dbg !8091
  store i32 %add141, i32* %x, align 4, !dbg !8091
  br label %for.cond1, !dbg !8093, !llvm.loop !8094

for.end:                                          ; preds = %for.cond1
  %89 = load i64, i64* %stride.addr, align 8, !dbg !8096
  %90 = load i8*, i8** %s.addr, align 8, !dbg !8098
  %add.ptr = getelementptr inbounds i8, i8* %90, i64 %89, !dbg !8098
  store i8* %add.ptr, i8** %s.addr, align 8, !dbg !8098
  br label %for.inc142, !dbg !8099

for.inc142:                                       ; preds = %for.end
  %91 = load i32, i32* %y, align 4, !dbg !8100
  %inc = add nsw i32 %91, 1, !dbg !8100
  store i32 %inc, i32* %y, align 4, !dbg !8100
  br label %for.cond, !dbg !8102, !llvm.loop !8103

for.end143:                                       ; preds = %for.cond
  %92 = load i32, i32* %score, align 4, !dbg !8105
  ret i32 %92, !dbg !8107
}

; Function Attrs: nounwind uwtable
define internal i32 @vsse16_c(%struct.MpegEncContext* %c, i8* %s1, i8* %s2, i64 %stride, i32 %h) #0 !dbg !8108 {
entry:
  %c.addr = alloca %struct.MpegEncContext*, align 8
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.MpegEncContext* %c, %struct.MpegEncContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %c.addr, metadata !8109, metadata !2614), !dbg !8110
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !8111, metadata !2614), !dbg !8112
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !8113, metadata !2614), !dbg !8114
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !8115, metadata !2614), !dbg !8116
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !8117, metadata !2614), !dbg !8118
  call void @llvm.dbg.declare(metadata i32* %score, metadata !8119, metadata !2614), !dbg !8120
  store i32 0, i32* %score, align 4, !dbg !8120
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8121, metadata !2614), !dbg !8122
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8123, metadata !2614), !dbg !8124
  store i32 1, i32* %y, align 4, !dbg !8125
  br label %for.cond, !dbg !8127

for.cond:                                         ; preds = %for.inc35, %entry
  %0 = load i32, i32* %y, align 4, !dbg !8128
  %1 = load i32, i32* %h.addr, align 4, !dbg !8131
  %cmp = icmp slt i32 %0, %1, !dbg !8132
  br i1 %cmp, label %for.body, label %for.end37, !dbg !8133

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !8134
  br label %for.cond1, !dbg !8138

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %x, align 4, !dbg !8139
  %cmp2 = icmp slt i32 %2, 16, !dbg !8142
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !8143

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %x, align 4, !dbg !8144
  %idxprom = sext i32 %3 to i64, !dbg !8146
  %4 = load i8*, i8** %s1.addr, align 8, !dbg !8146
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !8146
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8146
  %conv = zext i8 %5 to i32, !dbg !8146
  %6 = load i32, i32* %x, align 4, !dbg !8147
  %idxprom4 = sext i32 %6 to i64, !dbg !8148
  %7 = load i8*, i8** %s2.addr, align 8, !dbg !8148
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 %idxprom4, !dbg !8148
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !8148
  %conv6 = zext i8 %8 to i32, !dbg !8148
  %sub = sub nsw i32 %conv, %conv6, !dbg !8149
  %9 = load i32, i32* %x, align 4, !dbg !8150
  %conv7 = sext i32 %9 to i64, !dbg !8150
  %10 = load i64, i64* %stride.addr, align 8, !dbg !8151
  %add = add nsw i64 %conv7, %10, !dbg !8152
  %11 = load i8*, i8** %s1.addr, align 8, !dbg !8153
  %arrayidx8 = getelementptr inbounds i8, i8* %11, i64 %add, !dbg !8153
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !8153
  %conv9 = zext i8 %12 to i32, !dbg !8153
  %sub10 = sub nsw i32 %sub, %conv9, !dbg !8154
  %13 = load i32, i32* %x, align 4, !dbg !8155
  %conv11 = sext i32 %13 to i64, !dbg !8155
  %14 = load i64, i64* %stride.addr, align 8, !dbg !8156
  %add12 = add nsw i64 %conv11, %14, !dbg !8157
  %15 = load i8*, i8** %s2.addr, align 8, !dbg !8158
  %arrayidx13 = getelementptr inbounds i8, i8* %15, i64 %add12, !dbg !8158
  %16 = load i8, i8* %arrayidx13, align 1, !dbg !8158
  %conv14 = zext i8 %16 to i32, !dbg !8158
  %add15 = add nsw i32 %sub10, %conv14, !dbg !8159
  %17 = load i32, i32* %x, align 4, !dbg !8160
  %idxprom16 = sext i32 %17 to i64, !dbg !8161
  %18 = load i8*, i8** %s1.addr, align 8, !dbg !8161
  %arrayidx17 = getelementptr inbounds i8, i8* %18, i64 %idxprom16, !dbg !8161
  %19 = load i8, i8* %arrayidx17, align 1, !dbg !8161
  %conv18 = zext i8 %19 to i32, !dbg !8161
  %20 = load i32, i32* %x, align 4, !dbg !8162
  %idxprom19 = sext i32 %20 to i64, !dbg !8163
  %21 = load i8*, i8** %s2.addr, align 8, !dbg !8163
  %arrayidx20 = getelementptr inbounds i8, i8* %21, i64 %idxprom19, !dbg !8163
  %22 = load i8, i8* %arrayidx20, align 1, !dbg !8163
  %conv21 = zext i8 %22 to i32, !dbg !8163
  %sub22 = sub nsw i32 %conv18, %conv21, !dbg !8164
  %23 = load i32, i32* %x, align 4, !dbg !8165
  %conv23 = sext i32 %23 to i64, !dbg !8165
  %24 = load i64, i64* %stride.addr, align 8, !dbg !8166
  %add24 = add nsw i64 %conv23, %24, !dbg !8167
  %25 = load i8*, i8** %s1.addr, align 8, !dbg !8168
  %arrayidx25 = getelementptr inbounds i8, i8* %25, i64 %add24, !dbg !8168
  %26 = load i8, i8* %arrayidx25, align 1, !dbg !8168
  %conv26 = zext i8 %26 to i32, !dbg !8168
  %sub27 = sub nsw i32 %sub22, %conv26, !dbg !8169
  %27 = load i32, i32* %x, align 4, !dbg !8170
  %conv28 = sext i32 %27 to i64, !dbg !8170
  %28 = load i64, i64* %stride.addr, align 8, !dbg !8171
  %add29 = add nsw i64 %conv28, %28, !dbg !8172
  %29 = load i8*, i8** %s2.addr, align 8, !dbg !8173
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 %add29, !dbg !8173
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !8173
  %conv31 = zext i8 %30 to i32, !dbg !8173
  %add32 = add nsw i32 %sub27, %conv31, !dbg !8174
  %mul = mul nsw i32 %add15, %add32, !dbg !8175
  %31 = load i32, i32* %score, align 4, !dbg !8176
  %add33 = add nsw i32 %31, %mul, !dbg !8176
  store i32 %add33, i32* %score, align 4, !dbg !8176
  br label %for.inc, !dbg !8177

for.inc:                                          ; preds = %for.body3
  %32 = load i32, i32* %x, align 4, !dbg !8178
  %inc = add nsw i32 %32, 1, !dbg !8178
  store i32 %inc, i32* %x, align 4, !dbg !8178
  br label %for.cond1, !dbg !8180, !llvm.loop !8181

for.end:                                          ; preds = %for.cond1
  %33 = load i64, i64* %stride.addr, align 8, !dbg !8183
  %34 = load i8*, i8** %s1.addr, align 8, !dbg !8185
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 %33, !dbg !8185
  store i8* %add.ptr, i8** %s1.addr, align 8, !dbg !8185
  %35 = load i64, i64* %stride.addr, align 8, !dbg !8186
  %36 = load i8*, i8** %s2.addr, align 8, !dbg !8187
  %add.ptr34 = getelementptr inbounds i8, i8* %36, i64 %35, !dbg !8187
  store i8* %add.ptr34, i8** %s2.addr, align 8, !dbg !8187
  br label %for.inc35, !dbg !8188

for.inc35:                                        ; preds = %for.end
  %37 = load i32, i32* %y, align 4, !dbg !8189
  %inc36 = add nsw i32 %37, 1, !dbg !8189
  store i32 %inc36, i32* %y, align 4, !dbg !8189
  br label %for.cond, !dbg !8191, !llvm.loop !8192

for.end37:                                        ; preds = %for.cond
  %38 = load i32, i32* %score, align 4, !dbg !8194
  ret i32 %38, !dbg !8196
}

; Function Attrs: nounwind uwtable
define internal i32 @vsse8_c(%struct.MpegEncContext* %c, i8* %s1, i8* %s2, i64 %stride, i32 %h) #0 !dbg !8197 {
entry:
  %c.addr = alloca %struct.MpegEncContext*, align 8
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.MpegEncContext* %c, %struct.MpegEncContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %c.addr, metadata !8198, metadata !2614), !dbg !8199
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !8200, metadata !2614), !dbg !8201
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !8202, metadata !2614), !dbg !8203
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !8204, metadata !2614), !dbg !8205
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !8206, metadata !2614), !dbg !8207
  call void @llvm.dbg.declare(metadata i32* %score, metadata !8208, metadata !2614), !dbg !8209
  store i32 0, i32* %score, align 4, !dbg !8209
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8210, metadata !2614), !dbg !8211
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8212, metadata !2614), !dbg !8213
  store i32 1, i32* %y, align 4, !dbg !8214
  br label %for.cond, !dbg !8216

for.cond:                                         ; preds = %for.inc35, %entry
  %0 = load i32, i32* %y, align 4, !dbg !8217
  %1 = load i32, i32* %h.addr, align 4, !dbg !8220
  %cmp = icmp slt i32 %0, %1, !dbg !8221
  br i1 %cmp, label %for.body, label %for.end37, !dbg !8222

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !8223
  br label %for.cond1, !dbg !8227

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %x, align 4, !dbg !8228
  %cmp2 = icmp slt i32 %2, 8, !dbg !8231
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !8232

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %x, align 4, !dbg !8233
  %idxprom = sext i32 %3 to i64, !dbg !8235
  %4 = load i8*, i8** %s1.addr, align 8, !dbg !8235
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !8235
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8235
  %conv = zext i8 %5 to i32, !dbg !8235
  %6 = load i32, i32* %x, align 4, !dbg !8236
  %idxprom4 = sext i32 %6 to i64, !dbg !8237
  %7 = load i8*, i8** %s2.addr, align 8, !dbg !8237
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 %idxprom4, !dbg !8237
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !8237
  %conv6 = zext i8 %8 to i32, !dbg !8237
  %sub = sub nsw i32 %conv, %conv6, !dbg !8238
  %9 = load i32, i32* %x, align 4, !dbg !8239
  %conv7 = sext i32 %9 to i64, !dbg !8239
  %10 = load i64, i64* %stride.addr, align 8, !dbg !8240
  %add = add nsw i64 %conv7, %10, !dbg !8241
  %11 = load i8*, i8** %s1.addr, align 8, !dbg !8242
  %arrayidx8 = getelementptr inbounds i8, i8* %11, i64 %add, !dbg !8242
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !8242
  %conv9 = zext i8 %12 to i32, !dbg !8242
  %sub10 = sub nsw i32 %sub, %conv9, !dbg !8243
  %13 = load i32, i32* %x, align 4, !dbg !8244
  %conv11 = sext i32 %13 to i64, !dbg !8244
  %14 = load i64, i64* %stride.addr, align 8, !dbg !8245
  %add12 = add nsw i64 %conv11, %14, !dbg !8246
  %15 = load i8*, i8** %s2.addr, align 8, !dbg !8247
  %arrayidx13 = getelementptr inbounds i8, i8* %15, i64 %add12, !dbg !8247
  %16 = load i8, i8* %arrayidx13, align 1, !dbg !8247
  %conv14 = zext i8 %16 to i32, !dbg !8247
  %add15 = add nsw i32 %sub10, %conv14, !dbg !8248
  %17 = load i32, i32* %x, align 4, !dbg !8249
  %idxprom16 = sext i32 %17 to i64, !dbg !8250
  %18 = load i8*, i8** %s1.addr, align 8, !dbg !8250
  %arrayidx17 = getelementptr inbounds i8, i8* %18, i64 %idxprom16, !dbg !8250
  %19 = load i8, i8* %arrayidx17, align 1, !dbg !8250
  %conv18 = zext i8 %19 to i32, !dbg !8250
  %20 = load i32, i32* %x, align 4, !dbg !8251
  %idxprom19 = sext i32 %20 to i64, !dbg !8252
  %21 = load i8*, i8** %s2.addr, align 8, !dbg !8252
  %arrayidx20 = getelementptr inbounds i8, i8* %21, i64 %idxprom19, !dbg !8252
  %22 = load i8, i8* %arrayidx20, align 1, !dbg !8252
  %conv21 = zext i8 %22 to i32, !dbg !8252
  %sub22 = sub nsw i32 %conv18, %conv21, !dbg !8253
  %23 = load i32, i32* %x, align 4, !dbg !8254
  %conv23 = sext i32 %23 to i64, !dbg !8254
  %24 = load i64, i64* %stride.addr, align 8, !dbg !8255
  %add24 = add nsw i64 %conv23, %24, !dbg !8256
  %25 = load i8*, i8** %s1.addr, align 8, !dbg !8257
  %arrayidx25 = getelementptr inbounds i8, i8* %25, i64 %add24, !dbg !8257
  %26 = load i8, i8* %arrayidx25, align 1, !dbg !8257
  %conv26 = zext i8 %26 to i32, !dbg !8257
  %sub27 = sub nsw i32 %sub22, %conv26, !dbg !8258
  %27 = load i32, i32* %x, align 4, !dbg !8259
  %conv28 = sext i32 %27 to i64, !dbg !8259
  %28 = load i64, i64* %stride.addr, align 8, !dbg !8260
  %add29 = add nsw i64 %conv28, %28, !dbg !8261
  %29 = load i8*, i8** %s2.addr, align 8, !dbg !8262
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 %add29, !dbg !8262
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !8262
  %conv31 = zext i8 %30 to i32, !dbg !8262
  %add32 = add nsw i32 %sub27, %conv31, !dbg !8263
  %mul = mul nsw i32 %add15, %add32, !dbg !8264
  %31 = load i32, i32* %score, align 4, !dbg !8265
  %add33 = add nsw i32 %31, %mul, !dbg !8265
  store i32 %add33, i32* %score, align 4, !dbg !8265
  br label %for.inc, !dbg !8266

for.inc:                                          ; preds = %for.body3
  %32 = load i32, i32* %x, align 4, !dbg !8267
  %inc = add nsw i32 %32, 1, !dbg !8267
  store i32 %inc, i32* %x, align 4, !dbg !8267
  br label %for.cond1, !dbg !8269, !llvm.loop !8270

for.end:                                          ; preds = %for.cond1
  %33 = load i64, i64* %stride.addr, align 8, !dbg !8272
  %34 = load i8*, i8** %s1.addr, align 8, !dbg !8274
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 %33, !dbg !8274
  store i8* %add.ptr, i8** %s1.addr, align 8, !dbg !8274
  %35 = load i64, i64* %stride.addr, align 8, !dbg !8275
  %36 = load i8*, i8** %s2.addr, align 8, !dbg !8276
  %add.ptr34 = getelementptr inbounds i8, i8* %36, i64 %35, !dbg !8276
  store i8* %add.ptr34, i8** %s2.addr, align 8, !dbg !8276
  br label %for.inc35, !dbg !8277

for.inc35:                                        ; preds = %for.end
  %37 = load i32, i32* %y, align 4, !dbg !8278
  %inc36 = add nsw i32 %37, 1, !dbg !8278
  store i32 %inc36, i32* %y, align 4, !dbg !8278
  br label %for.cond, !dbg !8280, !llvm.loop !8281

for.end37:                                        ; preds = %for.cond
  %38 = load i32, i32* %score, align 4, !dbg !8283
  ret i32 %38, !dbg !8285
}

; Function Attrs: nounwind uwtable
define internal i32 @vsse_intra16_c(%struct.MpegEncContext* %c, i8* %s, i8* %dummy, i64 %stride, i32 %h) #0 !dbg !8286 {
entry:
  %c.addr = alloca %struct.MpegEncContext*, align 8
  %s.addr = alloca i8*, align 8
  %dummy.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.MpegEncContext* %c, %struct.MpegEncContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %c.addr, metadata !8287, metadata !2614), !dbg !8288
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !8289, metadata !2614), !dbg !8290
  store i8* %dummy, i8** %dummy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dummy.addr, metadata !8291, metadata !2614), !dbg !8292
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !8293, metadata !2614), !dbg !8294
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !8295, metadata !2614), !dbg !8296
  call void @llvm.dbg.declare(metadata i32* %score, metadata !8297, metadata !2614), !dbg !8298
  store i32 0, i32* %score, align 4, !dbg !8298
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8299, metadata !2614), !dbg !8300
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8301, metadata !2614), !dbg !8302
  store i32 1, i32* %y, align 4, !dbg !8303
  br label %for.cond, !dbg !8305

for.cond:                                         ; preds = %for.inc83, %entry
  %0 = load i32, i32* %y, align 4, !dbg !8306
  %1 = load i32, i32* %h.addr, align 4, !dbg !8309
  %cmp = icmp slt i32 %0, %1, !dbg !8310
  br i1 %cmp, label %for.body, label %for.end84, !dbg !8311

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !8312
  br label %for.cond1, !dbg !8316

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %x, align 4, !dbg !8317
  %cmp2 = icmp slt i32 %2, 16, !dbg !8320
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !8321

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %x, align 4, !dbg !8322
  %idxprom = sext i32 %3 to i64, !dbg !8325
  %4 = load i8*, i8** %s.addr, align 8, !dbg !8325
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !8325
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8325
  %conv = zext i8 %5 to i32, !dbg !8325
  %6 = load i32, i32* %x, align 4, !dbg !8326
  %conv4 = sext i32 %6 to i64, !dbg !8326
  %7 = load i64, i64* %stride.addr, align 8, !dbg !8327
  %add = add nsw i64 %conv4, %7, !dbg !8328
  %8 = load i8*, i8** %s.addr, align 8, !dbg !8329
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 %add, !dbg !8329
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !8329
  %conv6 = zext i8 %9 to i32, !dbg !8329
  %sub = sub nsw i32 %conv, %conv6, !dbg !8330
  %10 = load i32, i32* %x, align 4, !dbg !8331
  %idxprom7 = sext i32 %10 to i64, !dbg !8332
  %11 = load i8*, i8** %s.addr, align 8, !dbg !8332
  %arrayidx8 = getelementptr inbounds i8, i8* %11, i64 %idxprom7, !dbg !8332
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !8332
  %conv9 = zext i8 %12 to i32, !dbg !8332
  %13 = load i32, i32* %x, align 4, !dbg !8333
  %conv10 = sext i32 %13 to i64, !dbg !8333
  %14 = load i64, i64* %stride.addr, align 8, !dbg !8334
  %add11 = add nsw i64 %conv10, %14, !dbg !8335
  %15 = load i8*, i8** %s.addr, align 8, !dbg !8336
  %arrayidx12 = getelementptr inbounds i8, i8* %15, i64 %add11, !dbg !8336
  %16 = load i8, i8* %arrayidx12, align 1, !dbg !8336
  %conv13 = zext i8 %16 to i32, !dbg !8336
  %sub14 = sub nsw i32 %conv9, %conv13, !dbg !8337
  %mul = mul nsw i32 %sub, %sub14, !dbg !8338
  %17 = load i32, i32* %x, align 4, !dbg !8339
  %add15 = add nsw i32 %17, 1, !dbg !8340
  %idxprom16 = sext i32 %add15 to i64, !dbg !8341
  %18 = load i8*, i8** %s.addr, align 8, !dbg !8341
  %arrayidx17 = getelementptr inbounds i8, i8* %18, i64 %idxprom16, !dbg !8341
  %19 = load i8, i8* %arrayidx17, align 1, !dbg !8341
  %conv18 = zext i8 %19 to i32, !dbg !8341
  %20 = load i32, i32* %x, align 4, !dbg !8342
  %conv19 = sext i32 %20 to i64, !dbg !8342
  %21 = load i64, i64* %stride.addr, align 8, !dbg !8343
  %add20 = add nsw i64 %conv19, %21, !dbg !8344
  %add21 = add nsw i64 %add20, 1, !dbg !8345
  %22 = load i8*, i8** %s.addr, align 8, !dbg !8346
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %add21, !dbg !8346
  %23 = load i8, i8* %arrayidx22, align 1, !dbg !8346
  %conv23 = zext i8 %23 to i32, !dbg !8346
  %sub24 = sub nsw i32 %conv18, %conv23, !dbg !8347
  %24 = load i32, i32* %x, align 4, !dbg !8348
  %add25 = add nsw i32 %24, 1, !dbg !8349
  %idxprom26 = sext i32 %add25 to i64, !dbg !8350
  %25 = load i8*, i8** %s.addr, align 8, !dbg !8350
  %arrayidx27 = getelementptr inbounds i8, i8* %25, i64 %idxprom26, !dbg !8350
  %26 = load i8, i8* %arrayidx27, align 1, !dbg !8350
  %conv28 = zext i8 %26 to i32, !dbg !8350
  %27 = load i32, i32* %x, align 4, !dbg !8351
  %conv29 = sext i32 %27 to i64, !dbg !8351
  %28 = load i64, i64* %stride.addr, align 8, !dbg !8352
  %add30 = add nsw i64 %conv29, %28, !dbg !8353
  %add31 = add nsw i64 %add30, 1, !dbg !8354
  %29 = load i8*, i8** %s.addr, align 8, !dbg !8355
  %arrayidx32 = getelementptr inbounds i8, i8* %29, i64 %add31, !dbg !8355
  %30 = load i8, i8* %arrayidx32, align 1, !dbg !8355
  %conv33 = zext i8 %30 to i32, !dbg !8355
  %sub34 = sub nsw i32 %conv28, %conv33, !dbg !8356
  %mul35 = mul nsw i32 %sub24, %sub34, !dbg !8357
  %add36 = add nsw i32 %mul, %mul35, !dbg !8358
  %31 = load i32, i32* %x, align 4, !dbg !8359
  %add37 = add nsw i32 %31, 2, !dbg !8360
  %idxprom38 = sext i32 %add37 to i64, !dbg !8361
  %32 = load i8*, i8** %s.addr, align 8, !dbg !8361
  %arrayidx39 = getelementptr inbounds i8, i8* %32, i64 %idxprom38, !dbg !8361
  %33 = load i8, i8* %arrayidx39, align 1, !dbg !8361
  %conv40 = zext i8 %33 to i32, !dbg !8361
  %34 = load i32, i32* %x, align 4, !dbg !8362
  %conv41 = sext i32 %34 to i64, !dbg !8362
  %35 = load i64, i64* %stride.addr, align 8, !dbg !8363
  %add42 = add nsw i64 %conv41, %35, !dbg !8364
  %add43 = add nsw i64 %add42, 2, !dbg !8365
  %36 = load i8*, i8** %s.addr, align 8, !dbg !8366
  %arrayidx44 = getelementptr inbounds i8, i8* %36, i64 %add43, !dbg !8366
  %37 = load i8, i8* %arrayidx44, align 1, !dbg !8366
  %conv45 = zext i8 %37 to i32, !dbg !8366
  %sub46 = sub nsw i32 %conv40, %conv45, !dbg !8367
  %38 = load i32, i32* %x, align 4, !dbg !8368
  %add47 = add nsw i32 %38, 2, !dbg !8369
  %idxprom48 = sext i32 %add47 to i64, !dbg !8370
  %39 = load i8*, i8** %s.addr, align 8, !dbg !8370
  %arrayidx49 = getelementptr inbounds i8, i8* %39, i64 %idxprom48, !dbg !8370
  %40 = load i8, i8* %arrayidx49, align 1, !dbg !8370
  %conv50 = zext i8 %40 to i32, !dbg !8370
  %41 = load i32, i32* %x, align 4, !dbg !8371
  %conv51 = sext i32 %41 to i64, !dbg !8371
  %42 = load i64, i64* %stride.addr, align 8, !dbg !8372
  %add52 = add nsw i64 %conv51, %42, !dbg !8373
  %add53 = add nsw i64 %add52, 2, !dbg !8374
  %43 = load i8*, i8** %s.addr, align 8, !dbg !8375
  %arrayidx54 = getelementptr inbounds i8, i8* %43, i64 %add53, !dbg !8375
  %44 = load i8, i8* %arrayidx54, align 1, !dbg !8375
  %conv55 = zext i8 %44 to i32, !dbg !8375
  %sub56 = sub nsw i32 %conv50, %conv55, !dbg !8376
  %mul57 = mul nsw i32 %sub46, %sub56, !dbg !8377
  %add58 = add nsw i32 %add36, %mul57, !dbg !8378
  %45 = load i32, i32* %x, align 4, !dbg !8379
  %add59 = add nsw i32 %45, 3, !dbg !8380
  %idxprom60 = sext i32 %add59 to i64, !dbg !8381
  %46 = load i8*, i8** %s.addr, align 8, !dbg !8381
  %arrayidx61 = getelementptr inbounds i8, i8* %46, i64 %idxprom60, !dbg !8381
  %47 = load i8, i8* %arrayidx61, align 1, !dbg !8381
  %conv62 = zext i8 %47 to i32, !dbg !8381
  %48 = load i32, i32* %x, align 4, !dbg !8382
  %conv63 = sext i32 %48 to i64, !dbg !8382
  %49 = load i64, i64* %stride.addr, align 8, !dbg !8383
  %add64 = add nsw i64 %conv63, %49, !dbg !8384
  %add65 = add nsw i64 %add64, 3, !dbg !8385
  %50 = load i8*, i8** %s.addr, align 8, !dbg !8386
  %arrayidx66 = getelementptr inbounds i8, i8* %50, i64 %add65, !dbg !8386
  %51 = load i8, i8* %arrayidx66, align 1, !dbg !8386
  %conv67 = zext i8 %51 to i32, !dbg !8386
  %sub68 = sub nsw i32 %conv62, %conv67, !dbg !8387
  %52 = load i32, i32* %x, align 4, !dbg !8388
  %add69 = add nsw i32 %52, 3, !dbg !8389
  %idxprom70 = sext i32 %add69 to i64, !dbg !8390
  %53 = load i8*, i8** %s.addr, align 8, !dbg !8390
  %arrayidx71 = getelementptr inbounds i8, i8* %53, i64 %idxprom70, !dbg !8390
  %54 = load i8, i8* %arrayidx71, align 1, !dbg !8390
  %conv72 = zext i8 %54 to i32, !dbg !8390
  %55 = load i32, i32* %x, align 4, !dbg !8391
  %conv73 = sext i32 %55 to i64, !dbg !8391
  %56 = load i64, i64* %stride.addr, align 8, !dbg !8392
  %add74 = add nsw i64 %conv73, %56, !dbg !8393
  %add75 = add nsw i64 %add74, 3, !dbg !8394
  %57 = load i8*, i8** %s.addr, align 8, !dbg !8395
  %arrayidx76 = getelementptr inbounds i8, i8* %57, i64 %add75, !dbg !8395
  %58 = load i8, i8* %arrayidx76, align 1, !dbg !8395
  %conv77 = zext i8 %58 to i32, !dbg !8395
  %sub78 = sub nsw i32 %conv72, %conv77, !dbg !8396
  %mul79 = mul nsw i32 %sub68, %sub78, !dbg !8397
  %add80 = add nsw i32 %add58, %mul79, !dbg !8398
  %59 = load i32, i32* %score, align 4, !dbg !8399
  %add81 = add nsw i32 %59, %add80, !dbg !8399
  store i32 %add81, i32* %score, align 4, !dbg !8399
  br label %for.inc, !dbg !8400

for.inc:                                          ; preds = %for.body3
  %60 = load i32, i32* %x, align 4, !dbg !8401
  %add82 = add nsw i32 %60, 4, !dbg !8401
  store i32 %add82, i32* %x, align 4, !dbg !8401
  br label %for.cond1, !dbg !8403, !llvm.loop !8404

for.end:                                          ; preds = %for.cond1
  %61 = load i64, i64* %stride.addr, align 8, !dbg !8406
  %62 = load i8*, i8** %s.addr, align 8, !dbg !8408
  %add.ptr = getelementptr inbounds i8, i8* %62, i64 %61, !dbg !8408
  store i8* %add.ptr, i8** %s.addr, align 8, !dbg !8408
  br label %for.inc83, !dbg !8409

for.inc83:                                        ; preds = %for.end
  %63 = load i32, i32* %y, align 4, !dbg !8410
  %inc = add nsw i32 %63, 1, !dbg !8410
  store i32 %inc, i32* %y, align 4, !dbg !8410
  br label %for.cond, !dbg !8412, !llvm.loop !8413

for.end84:                                        ; preds = %for.cond
  %64 = load i32, i32* %score, align 4, !dbg !8415
  ret i32 %64, !dbg !8417
}

; Function Attrs: nounwind uwtable
define internal i32 @vsse_intra8_c(%struct.MpegEncContext* %c, i8* %s, i8* %dummy, i64 %stride, i32 %h) #0 !dbg !8418 {
entry:
  %c.addr = alloca %struct.MpegEncContext*, align 8
  %s.addr = alloca i8*, align 8
  %dummy.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.MpegEncContext* %c, %struct.MpegEncContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %c.addr, metadata !8419, metadata !2614), !dbg !8420
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !8421, metadata !2614), !dbg !8422
  store i8* %dummy, i8** %dummy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dummy.addr, metadata !8423, metadata !2614), !dbg !8424
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !8425, metadata !2614), !dbg !8426
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !8427, metadata !2614), !dbg !8428
  call void @llvm.dbg.declare(metadata i32* %score, metadata !8429, metadata !2614), !dbg !8430
  store i32 0, i32* %score, align 4, !dbg !8430
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8431, metadata !2614), !dbg !8432
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8433, metadata !2614), !dbg !8434
  store i32 1, i32* %y, align 4, !dbg !8435
  br label %for.cond, !dbg !8437

for.cond:                                         ; preds = %for.inc83, %entry
  %0 = load i32, i32* %y, align 4, !dbg !8438
  %1 = load i32, i32* %h.addr, align 4, !dbg !8441
  %cmp = icmp slt i32 %0, %1, !dbg !8442
  br i1 %cmp, label %for.body, label %for.end84, !dbg !8443

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !8444
  br label %for.cond1, !dbg !8448

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %x, align 4, !dbg !8449
  %cmp2 = icmp slt i32 %2, 8, !dbg !8452
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !8453

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %x, align 4, !dbg !8454
  %idxprom = sext i32 %3 to i64, !dbg !8457
  %4 = load i8*, i8** %s.addr, align 8, !dbg !8457
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !8457
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8457
  %conv = zext i8 %5 to i32, !dbg !8457
  %6 = load i32, i32* %x, align 4, !dbg !8458
  %conv4 = sext i32 %6 to i64, !dbg !8458
  %7 = load i64, i64* %stride.addr, align 8, !dbg !8459
  %add = add nsw i64 %conv4, %7, !dbg !8460
  %8 = load i8*, i8** %s.addr, align 8, !dbg !8461
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 %add, !dbg !8461
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !8461
  %conv6 = zext i8 %9 to i32, !dbg !8461
  %sub = sub nsw i32 %conv, %conv6, !dbg !8462
  %10 = load i32, i32* %x, align 4, !dbg !8463
  %idxprom7 = sext i32 %10 to i64, !dbg !8464
  %11 = load i8*, i8** %s.addr, align 8, !dbg !8464
  %arrayidx8 = getelementptr inbounds i8, i8* %11, i64 %idxprom7, !dbg !8464
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !8464
  %conv9 = zext i8 %12 to i32, !dbg !8464
  %13 = load i32, i32* %x, align 4, !dbg !8465
  %conv10 = sext i32 %13 to i64, !dbg !8465
  %14 = load i64, i64* %stride.addr, align 8, !dbg !8466
  %add11 = add nsw i64 %conv10, %14, !dbg !8467
  %15 = load i8*, i8** %s.addr, align 8, !dbg !8468
  %arrayidx12 = getelementptr inbounds i8, i8* %15, i64 %add11, !dbg !8468
  %16 = load i8, i8* %arrayidx12, align 1, !dbg !8468
  %conv13 = zext i8 %16 to i32, !dbg !8468
  %sub14 = sub nsw i32 %conv9, %conv13, !dbg !8469
  %mul = mul nsw i32 %sub, %sub14, !dbg !8470
  %17 = load i32, i32* %x, align 4, !dbg !8471
  %add15 = add nsw i32 %17, 1, !dbg !8472
  %idxprom16 = sext i32 %add15 to i64, !dbg !8473
  %18 = load i8*, i8** %s.addr, align 8, !dbg !8473
  %arrayidx17 = getelementptr inbounds i8, i8* %18, i64 %idxprom16, !dbg !8473
  %19 = load i8, i8* %arrayidx17, align 1, !dbg !8473
  %conv18 = zext i8 %19 to i32, !dbg !8473
  %20 = load i32, i32* %x, align 4, !dbg !8474
  %conv19 = sext i32 %20 to i64, !dbg !8474
  %21 = load i64, i64* %stride.addr, align 8, !dbg !8475
  %add20 = add nsw i64 %conv19, %21, !dbg !8476
  %add21 = add nsw i64 %add20, 1, !dbg !8477
  %22 = load i8*, i8** %s.addr, align 8, !dbg !8478
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %add21, !dbg !8478
  %23 = load i8, i8* %arrayidx22, align 1, !dbg !8478
  %conv23 = zext i8 %23 to i32, !dbg !8478
  %sub24 = sub nsw i32 %conv18, %conv23, !dbg !8479
  %24 = load i32, i32* %x, align 4, !dbg !8480
  %add25 = add nsw i32 %24, 1, !dbg !8481
  %idxprom26 = sext i32 %add25 to i64, !dbg !8482
  %25 = load i8*, i8** %s.addr, align 8, !dbg !8482
  %arrayidx27 = getelementptr inbounds i8, i8* %25, i64 %idxprom26, !dbg !8482
  %26 = load i8, i8* %arrayidx27, align 1, !dbg !8482
  %conv28 = zext i8 %26 to i32, !dbg !8482
  %27 = load i32, i32* %x, align 4, !dbg !8483
  %conv29 = sext i32 %27 to i64, !dbg !8483
  %28 = load i64, i64* %stride.addr, align 8, !dbg !8484
  %add30 = add nsw i64 %conv29, %28, !dbg !8485
  %add31 = add nsw i64 %add30, 1, !dbg !8486
  %29 = load i8*, i8** %s.addr, align 8, !dbg !8487
  %arrayidx32 = getelementptr inbounds i8, i8* %29, i64 %add31, !dbg !8487
  %30 = load i8, i8* %arrayidx32, align 1, !dbg !8487
  %conv33 = zext i8 %30 to i32, !dbg !8487
  %sub34 = sub nsw i32 %conv28, %conv33, !dbg !8488
  %mul35 = mul nsw i32 %sub24, %sub34, !dbg !8489
  %add36 = add nsw i32 %mul, %mul35, !dbg !8490
  %31 = load i32, i32* %x, align 4, !dbg !8491
  %add37 = add nsw i32 %31, 2, !dbg !8492
  %idxprom38 = sext i32 %add37 to i64, !dbg !8493
  %32 = load i8*, i8** %s.addr, align 8, !dbg !8493
  %arrayidx39 = getelementptr inbounds i8, i8* %32, i64 %idxprom38, !dbg !8493
  %33 = load i8, i8* %arrayidx39, align 1, !dbg !8493
  %conv40 = zext i8 %33 to i32, !dbg !8493
  %34 = load i32, i32* %x, align 4, !dbg !8494
  %conv41 = sext i32 %34 to i64, !dbg !8494
  %35 = load i64, i64* %stride.addr, align 8, !dbg !8495
  %add42 = add nsw i64 %conv41, %35, !dbg !8496
  %add43 = add nsw i64 %add42, 2, !dbg !8497
  %36 = load i8*, i8** %s.addr, align 8, !dbg !8498
  %arrayidx44 = getelementptr inbounds i8, i8* %36, i64 %add43, !dbg !8498
  %37 = load i8, i8* %arrayidx44, align 1, !dbg !8498
  %conv45 = zext i8 %37 to i32, !dbg !8498
  %sub46 = sub nsw i32 %conv40, %conv45, !dbg !8499
  %38 = load i32, i32* %x, align 4, !dbg !8500
  %add47 = add nsw i32 %38, 2, !dbg !8501
  %idxprom48 = sext i32 %add47 to i64, !dbg !8502
  %39 = load i8*, i8** %s.addr, align 8, !dbg !8502
  %arrayidx49 = getelementptr inbounds i8, i8* %39, i64 %idxprom48, !dbg !8502
  %40 = load i8, i8* %arrayidx49, align 1, !dbg !8502
  %conv50 = zext i8 %40 to i32, !dbg !8502
  %41 = load i32, i32* %x, align 4, !dbg !8503
  %conv51 = sext i32 %41 to i64, !dbg !8503
  %42 = load i64, i64* %stride.addr, align 8, !dbg !8504
  %add52 = add nsw i64 %conv51, %42, !dbg !8505
  %add53 = add nsw i64 %add52, 2, !dbg !8506
  %43 = load i8*, i8** %s.addr, align 8, !dbg !8507
  %arrayidx54 = getelementptr inbounds i8, i8* %43, i64 %add53, !dbg !8507
  %44 = load i8, i8* %arrayidx54, align 1, !dbg !8507
  %conv55 = zext i8 %44 to i32, !dbg !8507
  %sub56 = sub nsw i32 %conv50, %conv55, !dbg !8508
  %mul57 = mul nsw i32 %sub46, %sub56, !dbg !8509
  %add58 = add nsw i32 %add36, %mul57, !dbg !8510
  %45 = load i32, i32* %x, align 4, !dbg !8511
  %add59 = add nsw i32 %45, 3, !dbg !8512
  %idxprom60 = sext i32 %add59 to i64, !dbg !8513
  %46 = load i8*, i8** %s.addr, align 8, !dbg !8513
  %arrayidx61 = getelementptr inbounds i8, i8* %46, i64 %idxprom60, !dbg !8513
  %47 = load i8, i8* %arrayidx61, align 1, !dbg !8513
  %conv62 = zext i8 %47 to i32, !dbg !8513
  %48 = load i32, i32* %x, align 4, !dbg !8514
  %conv63 = sext i32 %48 to i64, !dbg !8514
  %49 = load i64, i64* %stride.addr, align 8, !dbg !8515
  %add64 = add nsw i64 %conv63, %49, !dbg !8516
  %add65 = add nsw i64 %add64, 3, !dbg !8517
  %50 = load i8*, i8** %s.addr, align 8, !dbg !8518
  %arrayidx66 = getelementptr inbounds i8, i8* %50, i64 %add65, !dbg !8518
  %51 = load i8, i8* %arrayidx66, align 1, !dbg !8518
  %conv67 = zext i8 %51 to i32, !dbg !8518
  %sub68 = sub nsw i32 %conv62, %conv67, !dbg !8519
  %52 = load i32, i32* %x, align 4, !dbg !8520
  %add69 = add nsw i32 %52, 3, !dbg !8521
  %idxprom70 = sext i32 %add69 to i64, !dbg !8522
  %53 = load i8*, i8** %s.addr, align 8, !dbg !8522
  %arrayidx71 = getelementptr inbounds i8, i8* %53, i64 %idxprom70, !dbg !8522
  %54 = load i8, i8* %arrayidx71, align 1, !dbg !8522
  %conv72 = zext i8 %54 to i32, !dbg !8522
  %55 = load i32, i32* %x, align 4, !dbg !8523
  %conv73 = sext i32 %55 to i64, !dbg !8523
  %56 = load i64, i64* %stride.addr, align 8, !dbg !8524
  %add74 = add nsw i64 %conv73, %56, !dbg !8525
  %add75 = add nsw i64 %add74, 3, !dbg !8526
  %57 = load i8*, i8** %s.addr, align 8, !dbg !8527
  %arrayidx76 = getelementptr inbounds i8, i8* %57, i64 %add75, !dbg !8527
  %58 = load i8, i8* %arrayidx76, align 1, !dbg !8527
  %conv77 = zext i8 %58 to i32, !dbg !8527
  %sub78 = sub nsw i32 %conv72, %conv77, !dbg !8528
  %mul79 = mul nsw i32 %sub68, %sub78, !dbg !8529
  %add80 = add nsw i32 %add58, %mul79, !dbg !8530
  %59 = load i32, i32* %score, align 4, !dbg !8531
  %add81 = add nsw i32 %59, %add80, !dbg !8531
  store i32 %add81, i32* %score, align 4, !dbg !8531
  br label %for.inc, !dbg !8532

for.inc:                                          ; preds = %for.body3
  %60 = load i32, i32* %x, align 4, !dbg !8533
  %add82 = add nsw i32 %60, 4, !dbg !8533
  store i32 %add82, i32* %x, align 4, !dbg !8533
  br label %for.cond1, !dbg !8535, !llvm.loop !8536

for.end:                                          ; preds = %for.cond1
  %61 = load i64, i64* %stride.addr, align 8, !dbg !8538
  %62 = load i8*, i8** %s.addr, align 8, !dbg !8540
  %add.ptr = getelementptr inbounds i8, i8* %62, i64 %61, !dbg !8540
  store i8* %add.ptr, i8** %s.addr, align 8, !dbg !8540
  br label %for.inc83, !dbg !8541

for.inc83:                                        ; preds = %for.end
  %63 = load i32, i32* %y, align 4, !dbg !8542
  %inc = add nsw i32 %63, 1, !dbg !8542
  store i32 %inc, i32* %y, align 4, !dbg !8542
  br label %for.cond, !dbg !8544, !llvm.loop !8545

for.end84:                                        ; preds = %for.cond
  %64 = load i32, i32* %score, align 4, !dbg !8547
  ret i32 %64, !dbg !8549
}

; Function Attrs: nounwind uwtable
define internal i32 @nsse16_c(%struct.MpegEncContext* %c, i8* %s1, i8* %s2, i64 %stride, i32 %h) #0 !dbg !8550 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.MpegEncContext*, align 8
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score1 = alloca i32, align 4
  %score2 = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.MpegEncContext* %c, %struct.MpegEncContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %c.addr, metadata !8551, metadata !2614), !dbg !8552
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !8553, metadata !2614), !dbg !8554
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !8555, metadata !2614), !dbg !8556
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !8557, metadata !2614), !dbg !8558
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !8559, metadata !2614), !dbg !8560
  call void @llvm.dbg.declare(metadata i32* %score1, metadata !8561, metadata !2614), !dbg !8562
  store i32 0, i32* %score1, align 4, !dbg !8562
  call void @llvm.dbg.declare(metadata i32* %score2, metadata !8563, metadata !2614), !dbg !8564
  store i32 0, i32* %score2, align 4, !dbg !8564
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8565, metadata !2614), !dbg !8566
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8567, metadata !2614), !dbg !8568
  store i32 0, i32* %y, align 4, !dbg !8569
  br label %for.cond, !dbg !8571

for.cond:                                         ; preds = %for.inc151, %entry
  %0 = load i32, i32* %y, align 4, !dbg !8572
  %1 = load i32, i32* %h.addr, align 4, !dbg !8575
  %cmp = icmp slt i32 %0, %1, !dbg !8576
  br i1 %cmp, label %for.body, label %for.end153, !dbg !8577

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !8578
  br label %for.cond1, !dbg !8581

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %x, align 4, !dbg !8582
  %cmp2 = icmp slt i32 %2, 16, !dbg !8585
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !8586

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %x, align 4, !dbg !8587
  %idxprom = sext i32 %3 to i64, !dbg !8588
  %4 = load i8*, i8** %s1.addr, align 8, !dbg !8588
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !8588
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8588
  %conv = zext i8 %5 to i32, !dbg !8588
  %6 = load i32, i32* %x, align 4, !dbg !8589
  %idxprom4 = sext i32 %6 to i64, !dbg !8590
  %7 = load i8*, i8** %s2.addr, align 8, !dbg !8590
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 %idxprom4, !dbg !8590
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !8590
  %conv6 = zext i8 %8 to i32, !dbg !8590
  %sub = sub nsw i32 %conv, %conv6, !dbg !8591
  %9 = load i32, i32* %x, align 4, !dbg !8592
  %idxprom7 = sext i32 %9 to i64, !dbg !8593
  %10 = load i8*, i8** %s1.addr, align 8, !dbg !8593
  %arrayidx8 = getelementptr inbounds i8, i8* %10, i64 %idxprom7, !dbg !8593
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !8593
  %conv9 = zext i8 %11 to i32, !dbg !8593
  %12 = load i32, i32* %x, align 4, !dbg !8594
  %idxprom10 = sext i32 %12 to i64, !dbg !8595
  %13 = load i8*, i8** %s2.addr, align 8, !dbg !8595
  %arrayidx11 = getelementptr inbounds i8, i8* %13, i64 %idxprom10, !dbg !8595
  %14 = load i8, i8* %arrayidx11, align 1, !dbg !8595
  %conv12 = zext i8 %14 to i32, !dbg !8595
  %sub13 = sub nsw i32 %conv9, %conv12, !dbg !8596
  %mul = mul nsw i32 %sub, %sub13, !dbg !8597
  %15 = load i32, i32* %score1, align 4, !dbg !8598
  %add = add nsw i32 %15, %mul, !dbg !8598
  store i32 %add, i32* %score1, align 4, !dbg !8598
  br label %for.inc, !dbg !8599

for.inc:                                          ; preds = %for.body3
  %16 = load i32, i32* %x, align 4, !dbg !8600
  %inc = add nsw i32 %16, 1, !dbg !8600
  store i32 %inc, i32* %x, align 4, !dbg !8600
  br label %for.cond1, !dbg !8602, !llvm.loop !8603

for.end:                                          ; preds = %for.cond1
  %17 = load i32, i32* %y, align 4, !dbg !8605
  %add14 = add nsw i32 %17, 1, !dbg !8607
  %18 = load i32, i32* %h.addr, align 4, !dbg !8608
  %cmp15 = icmp slt i32 %add14, %18, !dbg !8609
  br i1 %cmp15, label %if.then, label %if.end, !dbg !8610

if.then:                                          ; preds = %for.end
  store i32 0, i32* %x, align 4, !dbg !8611
  br label %for.cond17, !dbg !8614

for.cond17:                                       ; preds = %for.inc147, %if.then
  %19 = load i32, i32* %x, align 4, !dbg !8615
  %cmp18 = icmp slt i32 %19, 15, !dbg !8618
  br i1 %cmp18, label %for.body20, label %for.end149, !dbg !8619

for.body20:                                       ; preds = %for.cond17
  %20 = load i32, i32* %x, align 4, !dbg !8620
  %idxprom21 = sext i32 %20 to i64, !dbg !8621
  %21 = load i8*, i8** %s1.addr, align 8, !dbg !8621
  %arrayidx22 = getelementptr inbounds i8, i8* %21, i64 %idxprom21, !dbg !8621
  %22 = load i8, i8* %arrayidx22, align 1, !dbg !8621
  %conv23 = zext i8 %22 to i32, !dbg !8621
  %23 = load i32, i32* %x, align 4, !dbg !8622
  %conv24 = sext i32 %23 to i64, !dbg !8622
  %24 = load i64, i64* %stride.addr, align 8, !dbg !8623
  %add25 = add nsw i64 %conv24, %24, !dbg !8624
  %25 = load i8*, i8** %s1.addr, align 8, !dbg !8625
  %arrayidx26 = getelementptr inbounds i8, i8* %25, i64 %add25, !dbg !8625
  %26 = load i8, i8* %arrayidx26, align 1, !dbg !8625
  %conv27 = zext i8 %26 to i32, !dbg !8625
  %sub28 = sub nsw i32 %conv23, %conv27, !dbg !8626
  %27 = load i32, i32* %x, align 4, !dbg !8627
  %add29 = add nsw i32 %27, 1, !dbg !8628
  %idxprom30 = sext i32 %add29 to i64, !dbg !8629
  %28 = load i8*, i8** %s1.addr, align 8, !dbg !8629
  %arrayidx31 = getelementptr inbounds i8, i8* %28, i64 %idxprom30, !dbg !8629
  %29 = load i8, i8* %arrayidx31, align 1, !dbg !8629
  %conv32 = zext i8 %29 to i32, !dbg !8629
  %sub33 = sub nsw i32 %sub28, %conv32, !dbg !8630
  %30 = load i32, i32* %x, align 4, !dbg !8631
  %conv34 = sext i32 %30 to i64, !dbg !8631
  %31 = load i64, i64* %stride.addr, align 8, !dbg !8632
  %add35 = add nsw i64 %conv34, %31, !dbg !8633
  %add36 = add nsw i64 %add35, 1, !dbg !8634
  %32 = load i8*, i8** %s1.addr, align 8, !dbg !8635
  %arrayidx37 = getelementptr inbounds i8, i8* %32, i64 %add36, !dbg !8635
  %33 = load i8, i8* %arrayidx37, align 1, !dbg !8635
  %conv38 = zext i8 %33 to i32, !dbg !8635
  %add39 = add nsw i32 %sub33, %conv38, !dbg !8636
  %cmp40 = icmp sge i32 %add39, 0, !dbg !8637
  br i1 %cmp40, label %cond.true, label %cond.false, !dbg !8638

cond.true:                                        ; preds = %for.body20
  %34 = load i32, i32* %x, align 4, !dbg !8639
  %idxprom42 = sext i32 %34 to i64, !dbg !8640
  %35 = load i8*, i8** %s1.addr, align 8, !dbg !8640
  %arrayidx43 = getelementptr inbounds i8, i8* %35, i64 %idxprom42, !dbg !8640
  %36 = load i8, i8* %arrayidx43, align 1, !dbg !8640
  %conv44 = zext i8 %36 to i32, !dbg !8640
  %37 = load i32, i32* %x, align 4, !dbg !8641
  %conv45 = sext i32 %37 to i64, !dbg !8641
  %38 = load i64, i64* %stride.addr, align 8, !dbg !8642
  %add46 = add nsw i64 %conv45, %38, !dbg !8643
  %39 = load i8*, i8** %s1.addr, align 8, !dbg !8644
  %arrayidx47 = getelementptr inbounds i8, i8* %39, i64 %add46, !dbg !8644
  %40 = load i8, i8* %arrayidx47, align 1, !dbg !8644
  %conv48 = zext i8 %40 to i32, !dbg !8644
  %sub49 = sub nsw i32 %conv44, %conv48, !dbg !8645
  %41 = load i32, i32* %x, align 4, !dbg !8646
  %add50 = add nsw i32 %41, 1, !dbg !8647
  %idxprom51 = sext i32 %add50 to i64, !dbg !8648
  %42 = load i8*, i8** %s1.addr, align 8, !dbg !8648
  %arrayidx52 = getelementptr inbounds i8, i8* %42, i64 %idxprom51, !dbg !8648
  %43 = load i8, i8* %arrayidx52, align 1, !dbg !8648
  %conv53 = zext i8 %43 to i32, !dbg !8648
  %sub54 = sub nsw i32 %sub49, %conv53, !dbg !8649
  %44 = load i32, i32* %x, align 4, !dbg !8650
  %conv55 = sext i32 %44 to i64, !dbg !8650
  %45 = load i64, i64* %stride.addr, align 8, !dbg !8651
  %add56 = add nsw i64 %conv55, %45, !dbg !8652
  %add57 = add nsw i64 %add56, 1, !dbg !8653
  %46 = load i8*, i8** %s1.addr, align 8, !dbg !8654
  %arrayidx58 = getelementptr inbounds i8, i8* %46, i64 %add57, !dbg !8654
  %47 = load i8, i8* %arrayidx58, align 1, !dbg !8654
  %conv59 = zext i8 %47 to i32, !dbg !8654
  %add60 = add nsw i32 %sub54, %conv59, !dbg !8655
  br label %cond.end, !dbg !8656

cond.false:                                       ; preds = %for.body20
  %48 = load i32, i32* %x, align 4, !dbg !8657
  %idxprom61 = sext i32 %48 to i64, !dbg !8659
  %49 = load i8*, i8** %s1.addr, align 8, !dbg !8659
  %arrayidx62 = getelementptr inbounds i8, i8* %49, i64 %idxprom61, !dbg !8659
  %50 = load i8, i8* %arrayidx62, align 1, !dbg !8659
  %conv63 = zext i8 %50 to i32, !dbg !8659
  %51 = load i32, i32* %x, align 4, !dbg !8660
  %conv64 = sext i32 %51 to i64, !dbg !8660
  %52 = load i64, i64* %stride.addr, align 8, !dbg !8661
  %add65 = add nsw i64 %conv64, %52, !dbg !8662
  %53 = load i8*, i8** %s1.addr, align 8, !dbg !8663
  %arrayidx66 = getelementptr inbounds i8, i8* %53, i64 %add65, !dbg !8663
  %54 = load i8, i8* %arrayidx66, align 1, !dbg !8663
  %conv67 = zext i8 %54 to i32, !dbg !8663
  %sub68 = sub nsw i32 %conv63, %conv67, !dbg !8664
  %55 = load i32, i32* %x, align 4, !dbg !8665
  %add69 = add nsw i32 %55, 1, !dbg !8666
  %idxprom70 = sext i32 %add69 to i64, !dbg !8667
  %56 = load i8*, i8** %s1.addr, align 8, !dbg !8667
  %arrayidx71 = getelementptr inbounds i8, i8* %56, i64 %idxprom70, !dbg !8667
  %57 = load i8, i8* %arrayidx71, align 1, !dbg !8667
  %conv72 = zext i8 %57 to i32, !dbg !8667
  %sub73 = sub nsw i32 %sub68, %conv72, !dbg !8668
  %58 = load i32, i32* %x, align 4, !dbg !8669
  %conv74 = sext i32 %58 to i64, !dbg !8669
  %59 = load i64, i64* %stride.addr, align 8, !dbg !8670
  %add75 = add nsw i64 %conv74, %59, !dbg !8671
  %add76 = add nsw i64 %add75, 1, !dbg !8672
  %60 = load i8*, i8** %s1.addr, align 8, !dbg !8673
  %arrayidx77 = getelementptr inbounds i8, i8* %60, i64 %add76, !dbg !8673
  %61 = load i8, i8* %arrayidx77, align 1, !dbg !8673
  %conv78 = zext i8 %61 to i32, !dbg !8673
  %add79 = add nsw i32 %sub73, %conv78, !dbg !8674
  %sub80 = sub nsw i32 0, %add79, !dbg !8675
  br label %cond.end, !dbg !8676

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add60, %cond.true ], [ %sub80, %cond.false ], !dbg !8677
  %62 = load i32, i32* %x, align 4, !dbg !8679
  %idxprom81 = sext i32 %62 to i64, !dbg !8680
  %63 = load i8*, i8** %s2.addr, align 8, !dbg !8680
  %arrayidx82 = getelementptr inbounds i8, i8* %63, i64 %idxprom81, !dbg !8680
  %64 = load i8, i8* %arrayidx82, align 1, !dbg !8680
  %conv83 = zext i8 %64 to i32, !dbg !8680
  %65 = load i32, i32* %x, align 4, !dbg !8681
  %conv84 = sext i32 %65 to i64, !dbg !8681
  %66 = load i64, i64* %stride.addr, align 8, !dbg !8682
  %add85 = add nsw i64 %conv84, %66, !dbg !8683
  %67 = load i8*, i8** %s2.addr, align 8, !dbg !8684
  %arrayidx86 = getelementptr inbounds i8, i8* %67, i64 %add85, !dbg !8684
  %68 = load i8, i8* %arrayidx86, align 1, !dbg !8684
  %conv87 = zext i8 %68 to i32, !dbg !8684
  %sub88 = sub nsw i32 %conv83, %conv87, !dbg !8685
  %69 = load i32, i32* %x, align 4, !dbg !8686
  %add89 = add nsw i32 %69, 1, !dbg !8687
  %idxprom90 = sext i32 %add89 to i64, !dbg !8688
  %70 = load i8*, i8** %s2.addr, align 8, !dbg !8688
  %arrayidx91 = getelementptr inbounds i8, i8* %70, i64 %idxprom90, !dbg !8688
  %71 = load i8, i8* %arrayidx91, align 1, !dbg !8688
  %conv92 = zext i8 %71 to i32, !dbg !8688
  %sub93 = sub nsw i32 %sub88, %conv92, !dbg !8689
  %72 = load i32, i32* %x, align 4, !dbg !8690
  %conv94 = sext i32 %72 to i64, !dbg !8690
  %73 = load i64, i64* %stride.addr, align 8, !dbg !8691
  %add95 = add nsw i64 %conv94, %73, !dbg !8692
  %add96 = add nsw i64 %add95, 1, !dbg !8693
  %74 = load i8*, i8** %s2.addr, align 8, !dbg !8694
  %arrayidx97 = getelementptr inbounds i8, i8* %74, i64 %add96, !dbg !8694
  %75 = load i8, i8* %arrayidx97, align 1, !dbg !8694
  %conv98 = zext i8 %75 to i32, !dbg !8694
  %add99 = add nsw i32 %sub93, %conv98, !dbg !8695
  %cmp100 = icmp sge i32 %add99, 0, !dbg !8696
  br i1 %cmp100, label %cond.true102, label %cond.false122, !dbg !8697

cond.true102:                                     ; preds = %cond.end
  %76 = load i32, i32* %x, align 4, !dbg !8698
  %idxprom103 = sext i32 %76 to i64, !dbg !8699
  %77 = load i8*, i8** %s2.addr, align 8, !dbg !8699
  %arrayidx104 = getelementptr inbounds i8, i8* %77, i64 %idxprom103, !dbg !8699
  %78 = load i8, i8* %arrayidx104, align 1, !dbg !8699
  %conv105 = zext i8 %78 to i32, !dbg !8699
  %79 = load i32, i32* %x, align 4, !dbg !8700
  %conv106 = sext i32 %79 to i64, !dbg !8700
  %80 = load i64, i64* %stride.addr, align 8, !dbg !8701
  %add107 = add nsw i64 %conv106, %80, !dbg !8702
  %81 = load i8*, i8** %s2.addr, align 8, !dbg !8703
  %arrayidx108 = getelementptr inbounds i8, i8* %81, i64 %add107, !dbg !8703
  %82 = load i8, i8* %arrayidx108, align 1, !dbg !8703
  %conv109 = zext i8 %82 to i32, !dbg !8703
  %sub110 = sub nsw i32 %conv105, %conv109, !dbg !8704
  %83 = load i32, i32* %x, align 4, !dbg !8705
  %add111 = add nsw i32 %83, 1, !dbg !8706
  %idxprom112 = sext i32 %add111 to i64, !dbg !8707
  %84 = load i8*, i8** %s2.addr, align 8, !dbg !8707
  %arrayidx113 = getelementptr inbounds i8, i8* %84, i64 %idxprom112, !dbg !8707
  %85 = load i8, i8* %arrayidx113, align 1, !dbg !8707
  %conv114 = zext i8 %85 to i32, !dbg !8707
  %sub115 = sub nsw i32 %sub110, %conv114, !dbg !8708
  %86 = load i32, i32* %x, align 4, !dbg !8709
  %conv116 = sext i32 %86 to i64, !dbg !8709
  %87 = load i64, i64* %stride.addr, align 8, !dbg !8710
  %add117 = add nsw i64 %conv116, %87, !dbg !8711
  %add118 = add nsw i64 %add117, 1, !dbg !8712
  %88 = load i8*, i8** %s2.addr, align 8, !dbg !8713
  %arrayidx119 = getelementptr inbounds i8, i8* %88, i64 %add118, !dbg !8713
  %89 = load i8, i8* %arrayidx119, align 1, !dbg !8713
  %conv120 = zext i8 %89 to i32, !dbg !8713
  %add121 = add nsw i32 %sub115, %conv120, !dbg !8714
  br label %cond.end143, !dbg !8715

cond.false122:                                    ; preds = %cond.end
  %90 = load i32, i32* %x, align 4, !dbg !8716
  %idxprom123 = sext i32 %90 to i64, !dbg !8717
  %91 = load i8*, i8** %s2.addr, align 8, !dbg !8717
  %arrayidx124 = getelementptr inbounds i8, i8* %91, i64 %idxprom123, !dbg !8717
  %92 = load i8, i8* %arrayidx124, align 1, !dbg !8717
  %conv125 = zext i8 %92 to i32, !dbg !8717
  %93 = load i32, i32* %x, align 4, !dbg !8718
  %conv126 = sext i32 %93 to i64, !dbg !8718
  %94 = load i64, i64* %stride.addr, align 8, !dbg !8719
  %add127 = add nsw i64 %conv126, %94, !dbg !8720
  %95 = load i8*, i8** %s2.addr, align 8, !dbg !8721
  %arrayidx128 = getelementptr inbounds i8, i8* %95, i64 %add127, !dbg !8721
  %96 = load i8, i8* %arrayidx128, align 1, !dbg !8721
  %conv129 = zext i8 %96 to i32, !dbg !8721
  %sub130 = sub nsw i32 %conv125, %conv129, !dbg !8722
  %97 = load i32, i32* %x, align 4, !dbg !8723
  %add131 = add nsw i32 %97, 1, !dbg !8724
  %idxprom132 = sext i32 %add131 to i64, !dbg !8725
  %98 = load i8*, i8** %s2.addr, align 8, !dbg !8725
  %arrayidx133 = getelementptr inbounds i8, i8* %98, i64 %idxprom132, !dbg !8725
  %99 = load i8, i8* %arrayidx133, align 1, !dbg !8725
  %conv134 = zext i8 %99 to i32, !dbg !8725
  %sub135 = sub nsw i32 %sub130, %conv134, !dbg !8726
  %100 = load i32, i32* %x, align 4, !dbg !8727
  %conv136 = sext i32 %100 to i64, !dbg !8727
  %101 = load i64, i64* %stride.addr, align 8, !dbg !8728
  %add137 = add nsw i64 %conv136, %101, !dbg !8729
  %add138 = add nsw i64 %add137, 1, !dbg !8730
  %102 = load i8*, i8** %s2.addr, align 8, !dbg !8731
  %arrayidx139 = getelementptr inbounds i8, i8* %102, i64 %add138, !dbg !8731
  %103 = load i8, i8* %arrayidx139, align 1, !dbg !8731
  %conv140 = zext i8 %103 to i32, !dbg !8731
  %add141 = add nsw i32 %sub135, %conv140, !dbg !8732
  %sub142 = sub nsw i32 0, %add141, !dbg !8733
  br label %cond.end143, !dbg !8734

cond.end143:                                      ; preds = %cond.false122, %cond.true102
  %cond144 = phi i32 [ %add121, %cond.true102 ], [ %sub142, %cond.false122 ], !dbg !8735
  %sub145 = sub nsw i32 %cond, %cond144, !dbg !8736
  %104 = load i32, i32* %score2, align 4, !dbg !8737
  %add146 = add nsw i32 %104, %sub145, !dbg !8737
  store i32 %add146, i32* %score2, align 4, !dbg !8737
  br label %for.inc147, !dbg !8739

for.inc147:                                       ; preds = %cond.end143
  %105 = load i32, i32* %x, align 4, !dbg !8740
  %inc148 = add nsw i32 %105, 1, !dbg !8740
  store i32 %inc148, i32* %x, align 4, !dbg !8740
  br label %for.cond17, !dbg !8741, !llvm.loop !8742

for.end149:                                       ; preds = %for.cond17
  br label %if.end, !dbg !8744

if.end:                                           ; preds = %for.end149, %for.end
  %106 = load i64, i64* %stride.addr, align 8, !dbg !8745
  %107 = load i8*, i8** %s1.addr, align 8, !dbg !8746
  %add.ptr = getelementptr inbounds i8, i8* %107, i64 %106, !dbg !8746
  store i8* %add.ptr, i8** %s1.addr, align 8, !dbg !8746
  %108 = load i64, i64* %stride.addr, align 8, !dbg !8747
  %109 = load i8*, i8** %s2.addr, align 8, !dbg !8748
  %add.ptr150 = getelementptr inbounds i8, i8* %109, i64 %108, !dbg !8748
  store i8* %add.ptr150, i8** %s2.addr, align 8, !dbg !8748
  br label %for.inc151, !dbg !8749

for.inc151:                                       ; preds = %if.end
  %110 = load i32, i32* %y, align 4, !dbg !8750
  %inc152 = add nsw i32 %110, 1, !dbg !8750
  store i32 %inc152, i32* %y, align 4, !dbg !8750
  br label %for.cond, !dbg !8752, !llvm.loop !8753

for.end153:                                       ; preds = %for.cond
  %111 = load %struct.MpegEncContext*, %struct.MpegEncContext** %c.addr, align 8, !dbg !8755
  %tobool = icmp ne %struct.MpegEncContext* %111, null, !dbg !8755
  br i1 %tobool, label %if.then154, label %if.else, !dbg !8757

if.then154:                                       ; preds = %for.end153
  %112 = load i32, i32* %score1, align 4, !dbg !8758
  %113 = load i32, i32* %score2, align 4, !dbg !8759
  %cmp155 = icmp sge i32 %113, 0, !dbg !8760
  br i1 %cmp155, label %cond.true157, label %cond.false158, !dbg !8761

cond.true157:                                     ; preds = %if.then154
  %114 = load i32, i32* %score2, align 4, !dbg !8762
  br label %cond.end160, !dbg !8764

cond.false158:                                    ; preds = %if.then154
  %115 = load i32, i32* %score2, align 4, !dbg !8765
  %sub159 = sub nsw i32 0, %115, !dbg !8767
  br label %cond.end160, !dbg !8768

cond.end160:                                      ; preds = %cond.false158, %cond.true157
  %cond161 = phi i32 [ %114, %cond.true157 ], [ %sub159, %cond.false158 ], !dbg !8769
  %116 = load %struct.MpegEncContext*, %struct.MpegEncContext** %c.addr, align 8, !dbg !8771
  %avctx = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %116, i32 0, i32 10, !dbg !8772
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8772
  %nsse_weight = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %117, i32 0, i32 152, !dbg !8773
  %118 = load i32, i32* %nsse_weight, align 8, !dbg !8773
  %mul162 = mul nsw i32 %cond161, %118, !dbg !8774
  %add163 = add nsw i32 %112, %mul162, !dbg !8775
  store i32 %add163, i32* %retval, align 4, !dbg !8776
  br label %return, !dbg !8776

if.else:                                          ; preds = %for.end153
  %119 = load i32, i32* %score1, align 4, !dbg !8777
  %120 = load i32, i32* %score2, align 4, !dbg !8778
  %cmp164 = icmp sge i32 %120, 0, !dbg !8779
  br i1 %cmp164, label %cond.true166, label %cond.false167, !dbg !8780

cond.true166:                                     ; preds = %if.else
  %121 = load i32, i32* %score2, align 4, !dbg !8781
  br label %cond.end169, !dbg !8782

cond.false167:                                    ; preds = %if.else
  %122 = load i32, i32* %score2, align 4, !dbg !8783
  %sub168 = sub nsw i32 0, %122, !dbg !8784
  br label %cond.end169, !dbg !8785

cond.end169:                                      ; preds = %cond.false167, %cond.true166
  %cond170 = phi i32 [ %121, %cond.true166 ], [ %sub168, %cond.false167 ], !dbg !8786
  %mul171 = mul nsw i32 %cond170, 8, !dbg !8787
  %add172 = add nsw i32 %119, %mul171, !dbg !8788
  store i32 %add172, i32* %retval, align 4, !dbg !8789
  br label %return, !dbg !8789

return:                                           ; preds = %cond.end169, %cond.end160
  %123 = load i32, i32* %retval, align 4, !dbg !8790
  ret i32 %123, !dbg !8790
}

; Function Attrs: nounwind uwtable
define internal i32 @nsse8_c(%struct.MpegEncContext* %c, i8* %s1, i8* %s2, i64 %stride, i32 %h) #0 !dbg !8791 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.MpegEncContext*, align 8
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %score1 = alloca i32, align 4
  %score2 = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.MpegEncContext* %c, %struct.MpegEncContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %c.addr, metadata !8792, metadata !2614), !dbg !8793
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !8794, metadata !2614), !dbg !8795
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !8796, metadata !2614), !dbg !8797
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !8798, metadata !2614), !dbg !8799
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !8800, metadata !2614), !dbg !8801
  call void @llvm.dbg.declare(metadata i32* %score1, metadata !8802, metadata !2614), !dbg !8803
  store i32 0, i32* %score1, align 4, !dbg !8803
  call void @llvm.dbg.declare(metadata i32* %score2, metadata !8804, metadata !2614), !dbg !8805
  store i32 0, i32* %score2, align 4, !dbg !8805
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8806, metadata !2614), !dbg !8807
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8808, metadata !2614), !dbg !8809
  store i32 0, i32* %y, align 4, !dbg !8810
  br label %for.cond, !dbg !8812

for.cond:                                         ; preds = %for.inc151, %entry
  %0 = load i32, i32* %y, align 4, !dbg !8813
  %1 = load i32, i32* %h.addr, align 4, !dbg !8816
  %cmp = icmp slt i32 %0, %1, !dbg !8817
  br i1 %cmp, label %for.body, label %for.end153, !dbg !8818

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !8819
  br label %for.cond1, !dbg !8822

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %x, align 4, !dbg !8823
  %cmp2 = icmp slt i32 %2, 8, !dbg !8826
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !8827

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %x, align 4, !dbg !8828
  %idxprom = sext i32 %3 to i64, !dbg !8829
  %4 = load i8*, i8** %s1.addr, align 8, !dbg !8829
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !8829
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8829
  %conv = zext i8 %5 to i32, !dbg !8829
  %6 = load i32, i32* %x, align 4, !dbg !8830
  %idxprom4 = sext i32 %6 to i64, !dbg !8831
  %7 = load i8*, i8** %s2.addr, align 8, !dbg !8831
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 %idxprom4, !dbg !8831
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !8831
  %conv6 = zext i8 %8 to i32, !dbg !8831
  %sub = sub nsw i32 %conv, %conv6, !dbg !8832
  %9 = load i32, i32* %x, align 4, !dbg !8833
  %idxprom7 = sext i32 %9 to i64, !dbg !8834
  %10 = load i8*, i8** %s1.addr, align 8, !dbg !8834
  %arrayidx8 = getelementptr inbounds i8, i8* %10, i64 %idxprom7, !dbg !8834
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !8834
  %conv9 = zext i8 %11 to i32, !dbg !8834
  %12 = load i32, i32* %x, align 4, !dbg !8835
  %idxprom10 = sext i32 %12 to i64, !dbg !8836
  %13 = load i8*, i8** %s2.addr, align 8, !dbg !8836
  %arrayidx11 = getelementptr inbounds i8, i8* %13, i64 %idxprom10, !dbg !8836
  %14 = load i8, i8* %arrayidx11, align 1, !dbg !8836
  %conv12 = zext i8 %14 to i32, !dbg !8836
  %sub13 = sub nsw i32 %conv9, %conv12, !dbg !8837
  %mul = mul nsw i32 %sub, %sub13, !dbg !8838
  %15 = load i32, i32* %score1, align 4, !dbg !8839
  %add = add nsw i32 %15, %mul, !dbg !8839
  store i32 %add, i32* %score1, align 4, !dbg !8839
  br label %for.inc, !dbg !8840

for.inc:                                          ; preds = %for.body3
  %16 = load i32, i32* %x, align 4, !dbg !8841
  %inc = add nsw i32 %16, 1, !dbg !8841
  store i32 %inc, i32* %x, align 4, !dbg !8841
  br label %for.cond1, !dbg !8843, !llvm.loop !8844

for.end:                                          ; preds = %for.cond1
  %17 = load i32, i32* %y, align 4, !dbg !8846
  %add14 = add nsw i32 %17, 1, !dbg !8848
  %18 = load i32, i32* %h.addr, align 4, !dbg !8849
  %cmp15 = icmp slt i32 %add14, %18, !dbg !8850
  br i1 %cmp15, label %if.then, label %if.end, !dbg !8851

if.then:                                          ; preds = %for.end
  store i32 0, i32* %x, align 4, !dbg !8852
  br label %for.cond17, !dbg !8855

for.cond17:                                       ; preds = %for.inc147, %if.then
  %19 = load i32, i32* %x, align 4, !dbg !8856
  %cmp18 = icmp slt i32 %19, 7, !dbg !8859
  br i1 %cmp18, label %for.body20, label %for.end149, !dbg !8860

for.body20:                                       ; preds = %for.cond17
  %20 = load i32, i32* %x, align 4, !dbg !8861
  %idxprom21 = sext i32 %20 to i64, !dbg !8862
  %21 = load i8*, i8** %s1.addr, align 8, !dbg !8862
  %arrayidx22 = getelementptr inbounds i8, i8* %21, i64 %idxprom21, !dbg !8862
  %22 = load i8, i8* %arrayidx22, align 1, !dbg !8862
  %conv23 = zext i8 %22 to i32, !dbg !8862
  %23 = load i32, i32* %x, align 4, !dbg !8863
  %conv24 = sext i32 %23 to i64, !dbg !8863
  %24 = load i64, i64* %stride.addr, align 8, !dbg !8864
  %add25 = add nsw i64 %conv24, %24, !dbg !8865
  %25 = load i8*, i8** %s1.addr, align 8, !dbg !8866
  %arrayidx26 = getelementptr inbounds i8, i8* %25, i64 %add25, !dbg !8866
  %26 = load i8, i8* %arrayidx26, align 1, !dbg !8866
  %conv27 = zext i8 %26 to i32, !dbg !8866
  %sub28 = sub nsw i32 %conv23, %conv27, !dbg !8867
  %27 = load i32, i32* %x, align 4, !dbg !8868
  %add29 = add nsw i32 %27, 1, !dbg !8869
  %idxprom30 = sext i32 %add29 to i64, !dbg !8870
  %28 = load i8*, i8** %s1.addr, align 8, !dbg !8870
  %arrayidx31 = getelementptr inbounds i8, i8* %28, i64 %idxprom30, !dbg !8870
  %29 = load i8, i8* %arrayidx31, align 1, !dbg !8870
  %conv32 = zext i8 %29 to i32, !dbg !8870
  %sub33 = sub nsw i32 %sub28, %conv32, !dbg !8871
  %30 = load i32, i32* %x, align 4, !dbg !8872
  %conv34 = sext i32 %30 to i64, !dbg !8872
  %31 = load i64, i64* %stride.addr, align 8, !dbg !8873
  %add35 = add nsw i64 %conv34, %31, !dbg !8874
  %add36 = add nsw i64 %add35, 1, !dbg !8875
  %32 = load i8*, i8** %s1.addr, align 8, !dbg !8876
  %arrayidx37 = getelementptr inbounds i8, i8* %32, i64 %add36, !dbg !8876
  %33 = load i8, i8* %arrayidx37, align 1, !dbg !8876
  %conv38 = zext i8 %33 to i32, !dbg !8876
  %add39 = add nsw i32 %sub33, %conv38, !dbg !8877
  %cmp40 = icmp sge i32 %add39, 0, !dbg !8878
  br i1 %cmp40, label %cond.true, label %cond.false, !dbg !8879

cond.true:                                        ; preds = %for.body20
  %34 = load i32, i32* %x, align 4, !dbg !8880
  %idxprom42 = sext i32 %34 to i64, !dbg !8881
  %35 = load i8*, i8** %s1.addr, align 8, !dbg !8881
  %arrayidx43 = getelementptr inbounds i8, i8* %35, i64 %idxprom42, !dbg !8881
  %36 = load i8, i8* %arrayidx43, align 1, !dbg !8881
  %conv44 = zext i8 %36 to i32, !dbg !8881
  %37 = load i32, i32* %x, align 4, !dbg !8882
  %conv45 = sext i32 %37 to i64, !dbg !8882
  %38 = load i64, i64* %stride.addr, align 8, !dbg !8883
  %add46 = add nsw i64 %conv45, %38, !dbg !8884
  %39 = load i8*, i8** %s1.addr, align 8, !dbg !8885
  %arrayidx47 = getelementptr inbounds i8, i8* %39, i64 %add46, !dbg !8885
  %40 = load i8, i8* %arrayidx47, align 1, !dbg !8885
  %conv48 = zext i8 %40 to i32, !dbg !8885
  %sub49 = sub nsw i32 %conv44, %conv48, !dbg !8886
  %41 = load i32, i32* %x, align 4, !dbg !8887
  %add50 = add nsw i32 %41, 1, !dbg !8888
  %idxprom51 = sext i32 %add50 to i64, !dbg !8889
  %42 = load i8*, i8** %s1.addr, align 8, !dbg !8889
  %arrayidx52 = getelementptr inbounds i8, i8* %42, i64 %idxprom51, !dbg !8889
  %43 = load i8, i8* %arrayidx52, align 1, !dbg !8889
  %conv53 = zext i8 %43 to i32, !dbg !8889
  %sub54 = sub nsw i32 %sub49, %conv53, !dbg !8890
  %44 = load i32, i32* %x, align 4, !dbg !8891
  %conv55 = sext i32 %44 to i64, !dbg !8891
  %45 = load i64, i64* %stride.addr, align 8, !dbg !8892
  %add56 = add nsw i64 %conv55, %45, !dbg !8893
  %add57 = add nsw i64 %add56, 1, !dbg !8894
  %46 = load i8*, i8** %s1.addr, align 8, !dbg !8895
  %arrayidx58 = getelementptr inbounds i8, i8* %46, i64 %add57, !dbg !8895
  %47 = load i8, i8* %arrayidx58, align 1, !dbg !8895
  %conv59 = zext i8 %47 to i32, !dbg !8895
  %add60 = add nsw i32 %sub54, %conv59, !dbg !8896
  br label %cond.end, !dbg !8897

cond.false:                                       ; preds = %for.body20
  %48 = load i32, i32* %x, align 4, !dbg !8898
  %idxprom61 = sext i32 %48 to i64, !dbg !8900
  %49 = load i8*, i8** %s1.addr, align 8, !dbg !8900
  %arrayidx62 = getelementptr inbounds i8, i8* %49, i64 %idxprom61, !dbg !8900
  %50 = load i8, i8* %arrayidx62, align 1, !dbg !8900
  %conv63 = zext i8 %50 to i32, !dbg !8900
  %51 = load i32, i32* %x, align 4, !dbg !8901
  %conv64 = sext i32 %51 to i64, !dbg !8901
  %52 = load i64, i64* %stride.addr, align 8, !dbg !8902
  %add65 = add nsw i64 %conv64, %52, !dbg !8903
  %53 = load i8*, i8** %s1.addr, align 8, !dbg !8904
  %arrayidx66 = getelementptr inbounds i8, i8* %53, i64 %add65, !dbg !8904
  %54 = load i8, i8* %arrayidx66, align 1, !dbg !8904
  %conv67 = zext i8 %54 to i32, !dbg !8904
  %sub68 = sub nsw i32 %conv63, %conv67, !dbg !8905
  %55 = load i32, i32* %x, align 4, !dbg !8906
  %add69 = add nsw i32 %55, 1, !dbg !8907
  %idxprom70 = sext i32 %add69 to i64, !dbg !8908
  %56 = load i8*, i8** %s1.addr, align 8, !dbg !8908
  %arrayidx71 = getelementptr inbounds i8, i8* %56, i64 %idxprom70, !dbg !8908
  %57 = load i8, i8* %arrayidx71, align 1, !dbg !8908
  %conv72 = zext i8 %57 to i32, !dbg !8908
  %sub73 = sub nsw i32 %sub68, %conv72, !dbg !8909
  %58 = load i32, i32* %x, align 4, !dbg !8910
  %conv74 = sext i32 %58 to i64, !dbg !8910
  %59 = load i64, i64* %stride.addr, align 8, !dbg !8911
  %add75 = add nsw i64 %conv74, %59, !dbg !8912
  %add76 = add nsw i64 %add75, 1, !dbg !8913
  %60 = load i8*, i8** %s1.addr, align 8, !dbg !8914
  %arrayidx77 = getelementptr inbounds i8, i8* %60, i64 %add76, !dbg !8914
  %61 = load i8, i8* %arrayidx77, align 1, !dbg !8914
  %conv78 = zext i8 %61 to i32, !dbg !8914
  %add79 = add nsw i32 %sub73, %conv78, !dbg !8915
  %sub80 = sub nsw i32 0, %add79, !dbg !8916
  br label %cond.end, !dbg !8917

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add60, %cond.true ], [ %sub80, %cond.false ], !dbg !8918
  %62 = load i32, i32* %x, align 4, !dbg !8920
  %idxprom81 = sext i32 %62 to i64, !dbg !8921
  %63 = load i8*, i8** %s2.addr, align 8, !dbg !8921
  %arrayidx82 = getelementptr inbounds i8, i8* %63, i64 %idxprom81, !dbg !8921
  %64 = load i8, i8* %arrayidx82, align 1, !dbg !8921
  %conv83 = zext i8 %64 to i32, !dbg !8921
  %65 = load i32, i32* %x, align 4, !dbg !8922
  %conv84 = sext i32 %65 to i64, !dbg !8922
  %66 = load i64, i64* %stride.addr, align 8, !dbg !8923
  %add85 = add nsw i64 %conv84, %66, !dbg !8924
  %67 = load i8*, i8** %s2.addr, align 8, !dbg !8925
  %arrayidx86 = getelementptr inbounds i8, i8* %67, i64 %add85, !dbg !8925
  %68 = load i8, i8* %arrayidx86, align 1, !dbg !8925
  %conv87 = zext i8 %68 to i32, !dbg !8925
  %sub88 = sub nsw i32 %conv83, %conv87, !dbg !8926
  %69 = load i32, i32* %x, align 4, !dbg !8927
  %add89 = add nsw i32 %69, 1, !dbg !8928
  %idxprom90 = sext i32 %add89 to i64, !dbg !8929
  %70 = load i8*, i8** %s2.addr, align 8, !dbg !8929
  %arrayidx91 = getelementptr inbounds i8, i8* %70, i64 %idxprom90, !dbg !8929
  %71 = load i8, i8* %arrayidx91, align 1, !dbg !8929
  %conv92 = zext i8 %71 to i32, !dbg !8929
  %sub93 = sub nsw i32 %sub88, %conv92, !dbg !8930
  %72 = load i32, i32* %x, align 4, !dbg !8931
  %conv94 = sext i32 %72 to i64, !dbg !8931
  %73 = load i64, i64* %stride.addr, align 8, !dbg !8932
  %add95 = add nsw i64 %conv94, %73, !dbg !8933
  %add96 = add nsw i64 %add95, 1, !dbg !8934
  %74 = load i8*, i8** %s2.addr, align 8, !dbg !8935
  %arrayidx97 = getelementptr inbounds i8, i8* %74, i64 %add96, !dbg !8935
  %75 = load i8, i8* %arrayidx97, align 1, !dbg !8935
  %conv98 = zext i8 %75 to i32, !dbg !8935
  %add99 = add nsw i32 %sub93, %conv98, !dbg !8936
  %cmp100 = icmp sge i32 %add99, 0, !dbg !8937
  br i1 %cmp100, label %cond.true102, label %cond.false122, !dbg !8938

cond.true102:                                     ; preds = %cond.end
  %76 = load i32, i32* %x, align 4, !dbg !8939
  %idxprom103 = sext i32 %76 to i64, !dbg !8940
  %77 = load i8*, i8** %s2.addr, align 8, !dbg !8940
  %arrayidx104 = getelementptr inbounds i8, i8* %77, i64 %idxprom103, !dbg !8940
  %78 = load i8, i8* %arrayidx104, align 1, !dbg !8940
  %conv105 = zext i8 %78 to i32, !dbg !8940
  %79 = load i32, i32* %x, align 4, !dbg !8941
  %conv106 = sext i32 %79 to i64, !dbg !8941
  %80 = load i64, i64* %stride.addr, align 8, !dbg !8942
  %add107 = add nsw i64 %conv106, %80, !dbg !8943
  %81 = load i8*, i8** %s2.addr, align 8, !dbg !8944
  %arrayidx108 = getelementptr inbounds i8, i8* %81, i64 %add107, !dbg !8944
  %82 = load i8, i8* %arrayidx108, align 1, !dbg !8944
  %conv109 = zext i8 %82 to i32, !dbg !8944
  %sub110 = sub nsw i32 %conv105, %conv109, !dbg !8945
  %83 = load i32, i32* %x, align 4, !dbg !8946
  %add111 = add nsw i32 %83, 1, !dbg !8947
  %idxprom112 = sext i32 %add111 to i64, !dbg !8948
  %84 = load i8*, i8** %s2.addr, align 8, !dbg !8948
  %arrayidx113 = getelementptr inbounds i8, i8* %84, i64 %idxprom112, !dbg !8948
  %85 = load i8, i8* %arrayidx113, align 1, !dbg !8948
  %conv114 = zext i8 %85 to i32, !dbg !8948
  %sub115 = sub nsw i32 %sub110, %conv114, !dbg !8949
  %86 = load i32, i32* %x, align 4, !dbg !8950
  %conv116 = sext i32 %86 to i64, !dbg !8950
  %87 = load i64, i64* %stride.addr, align 8, !dbg !8951
  %add117 = add nsw i64 %conv116, %87, !dbg !8952
  %add118 = add nsw i64 %add117, 1, !dbg !8953
  %88 = load i8*, i8** %s2.addr, align 8, !dbg !8954
  %arrayidx119 = getelementptr inbounds i8, i8* %88, i64 %add118, !dbg !8954
  %89 = load i8, i8* %arrayidx119, align 1, !dbg !8954
  %conv120 = zext i8 %89 to i32, !dbg !8954
  %add121 = add nsw i32 %sub115, %conv120, !dbg !8955
  br label %cond.end143, !dbg !8956

cond.false122:                                    ; preds = %cond.end
  %90 = load i32, i32* %x, align 4, !dbg !8957
  %idxprom123 = sext i32 %90 to i64, !dbg !8958
  %91 = load i8*, i8** %s2.addr, align 8, !dbg !8958
  %arrayidx124 = getelementptr inbounds i8, i8* %91, i64 %idxprom123, !dbg !8958
  %92 = load i8, i8* %arrayidx124, align 1, !dbg !8958
  %conv125 = zext i8 %92 to i32, !dbg !8958
  %93 = load i32, i32* %x, align 4, !dbg !8959
  %conv126 = sext i32 %93 to i64, !dbg !8959
  %94 = load i64, i64* %stride.addr, align 8, !dbg !8960
  %add127 = add nsw i64 %conv126, %94, !dbg !8961
  %95 = load i8*, i8** %s2.addr, align 8, !dbg !8962
  %arrayidx128 = getelementptr inbounds i8, i8* %95, i64 %add127, !dbg !8962
  %96 = load i8, i8* %arrayidx128, align 1, !dbg !8962
  %conv129 = zext i8 %96 to i32, !dbg !8962
  %sub130 = sub nsw i32 %conv125, %conv129, !dbg !8963
  %97 = load i32, i32* %x, align 4, !dbg !8964
  %add131 = add nsw i32 %97, 1, !dbg !8965
  %idxprom132 = sext i32 %add131 to i64, !dbg !8966
  %98 = load i8*, i8** %s2.addr, align 8, !dbg !8966
  %arrayidx133 = getelementptr inbounds i8, i8* %98, i64 %idxprom132, !dbg !8966
  %99 = load i8, i8* %arrayidx133, align 1, !dbg !8966
  %conv134 = zext i8 %99 to i32, !dbg !8966
  %sub135 = sub nsw i32 %sub130, %conv134, !dbg !8967
  %100 = load i32, i32* %x, align 4, !dbg !8968
  %conv136 = sext i32 %100 to i64, !dbg !8968
  %101 = load i64, i64* %stride.addr, align 8, !dbg !8969
  %add137 = add nsw i64 %conv136, %101, !dbg !8970
  %add138 = add nsw i64 %add137, 1, !dbg !8971
  %102 = load i8*, i8** %s2.addr, align 8, !dbg !8972
  %arrayidx139 = getelementptr inbounds i8, i8* %102, i64 %add138, !dbg !8972
  %103 = load i8, i8* %arrayidx139, align 1, !dbg !8972
  %conv140 = zext i8 %103 to i32, !dbg !8972
  %add141 = add nsw i32 %sub135, %conv140, !dbg !8973
  %sub142 = sub nsw i32 0, %add141, !dbg !8974
  br label %cond.end143, !dbg !8975

cond.end143:                                      ; preds = %cond.false122, %cond.true102
  %cond144 = phi i32 [ %add121, %cond.true102 ], [ %sub142, %cond.false122 ], !dbg !8976
  %sub145 = sub nsw i32 %cond, %cond144, !dbg !8977
  %104 = load i32, i32* %score2, align 4, !dbg !8978
  %add146 = add nsw i32 %104, %sub145, !dbg !8978
  store i32 %add146, i32* %score2, align 4, !dbg !8978
  br label %for.inc147, !dbg !8980

for.inc147:                                       ; preds = %cond.end143
  %105 = load i32, i32* %x, align 4, !dbg !8981
  %inc148 = add nsw i32 %105, 1, !dbg !8981
  store i32 %inc148, i32* %x, align 4, !dbg !8981
  br label %for.cond17, !dbg !8982, !llvm.loop !8983

for.end149:                                       ; preds = %for.cond17
  br label %if.end, !dbg !8985

if.end:                                           ; preds = %for.end149, %for.end
  %106 = load i64, i64* %stride.addr, align 8, !dbg !8986
  %107 = load i8*, i8** %s1.addr, align 8, !dbg !8987
  %add.ptr = getelementptr inbounds i8, i8* %107, i64 %106, !dbg !8987
  store i8* %add.ptr, i8** %s1.addr, align 8, !dbg !8987
  %108 = load i64, i64* %stride.addr, align 8, !dbg !8988
  %109 = load i8*, i8** %s2.addr, align 8, !dbg !8989
  %add.ptr150 = getelementptr inbounds i8, i8* %109, i64 %108, !dbg !8989
  store i8* %add.ptr150, i8** %s2.addr, align 8, !dbg !8989
  br label %for.inc151, !dbg !8990

for.inc151:                                       ; preds = %if.end
  %110 = load i32, i32* %y, align 4, !dbg !8991
  %inc152 = add nsw i32 %110, 1, !dbg !8991
  store i32 %inc152, i32* %y, align 4, !dbg !8991
  br label %for.cond, !dbg !8993, !llvm.loop !8994

for.end153:                                       ; preds = %for.cond
  %111 = load %struct.MpegEncContext*, %struct.MpegEncContext** %c.addr, align 8, !dbg !8996
  %tobool = icmp ne %struct.MpegEncContext* %111, null, !dbg !8996
  br i1 %tobool, label %if.then154, label %if.else, !dbg !8998

if.then154:                                       ; preds = %for.end153
  %112 = load i32, i32* %score1, align 4, !dbg !8999
  %113 = load i32, i32* %score2, align 4, !dbg !9000
  %cmp155 = icmp sge i32 %113, 0, !dbg !9001
  br i1 %cmp155, label %cond.true157, label %cond.false158, !dbg !9002

cond.true157:                                     ; preds = %if.then154
  %114 = load i32, i32* %score2, align 4, !dbg !9003
  br label %cond.end160, !dbg !9005

cond.false158:                                    ; preds = %if.then154
  %115 = load i32, i32* %score2, align 4, !dbg !9006
  %sub159 = sub nsw i32 0, %115, !dbg !9008
  br label %cond.end160, !dbg !9009

cond.end160:                                      ; preds = %cond.false158, %cond.true157
  %cond161 = phi i32 [ %114, %cond.true157 ], [ %sub159, %cond.false158 ], !dbg !9010
  %116 = load %struct.MpegEncContext*, %struct.MpegEncContext** %c.addr, align 8, !dbg !9012
  %avctx = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %116, i32 0, i32 10, !dbg !9013
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !9013
  %nsse_weight = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %117, i32 0, i32 152, !dbg !9014
  %118 = load i32, i32* %nsse_weight, align 8, !dbg !9014
  %mul162 = mul nsw i32 %cond161, %118, !dbg !9015
  %add163 = add nsw i32 %112, %mul162, !dbg !9016
  store i32 %add163, i32* %retval, align 4, !dbg !9017
  br label %return, !dbg !9017

if.else:                                          ; preds = %for.end153
  %119 = load i32, i32* %score1, align 4, !dbg !9018
  %120 = load i32, i32* %score2, align 4, !dbg !9019
  %cmp164 = icmp sge i32 %120, 0, !dbg !9020
  br i1 %cmp164, label %cond.true166, label %cond.false167, !dbg !9021

cond.true166:                                     ; preds = %if.else
  %121 = load i32, i32* %score2, align 4, !dbg !9022
  br label %cond.end169, !dbg !9023

cond.false167:                                    ; preds = %if.else
  %122 = load i32, i32* %score2, align 4, !dbg !9024
  %sub168 = sub nsw i32 0, %122, !dbg !9025
  br label %cond.end169, !dbg !9026

cond.end169:                                      ; preds = %cond.false167, %cond.true166
  %cond170 = phi i32 [ %121, %cond.true166 ], [ %sub168, %cond.false167 ], !dbg !9027
  %mul171 = mul nsw i32 %cond170, 8, !dbg !9028
  %add172 = add nsw i32 %119, %mul171, !dbg !9029
  store i32 %add172, i32* %retval, align 4, !dbg !9030
  br label %return, !dbg !9030

return:                                           ; preds = %cond.end169, %cond.end160
  %123 = load i32, i32* %retval, align 4, !dbg !9031
  ret i32 %123, !dbg !9031
}

declare void @ff_dsputil_init_dwt(%struct.MECmpContext*) #3

declare void @ff_me_cmp_init_x86(%struct.MECmpContext*, %struct.AVCodecContext*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @pix_median_abs16_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #5 !dbg !9032 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !9033, metadata !2614), !dbg !9034
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !9035, metadata !2614), !dbg !9036
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !9037, metadata !2614), !dbg !9038
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !9039, metadata !2614), !dbg !9040
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !9041, metadata !2614), !dbg !9042
  call void @llvm.dbg.declare(metadata i32* %s, metadata !9043, metadata !2614), !dbg !9044
  store i32 0, i32* %s, align 4, !dbg !9044
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9045, metadata !2614), !dbg !9046
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9047, metadata !2614), !dbg !9048
  %0 = load i8*, i8** %pix1.addr, align 8, !dbg !9049
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !9049
  %1 = load i8, i8* %arrayidx, align 1, !dbg !9049
  %conv = zext i8 %1 to i32, !dbg !9049
  %2 = load i8*, i8** %pix2.addr, align 8, !dbg !9050
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !9050
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !9050
  %conv2 = zext i8 %3 to i32, !dbg !9050
  %sub = sub nsw i32 %conv, %conv2, !dbg !9051
  %call = call i32 @abs(i32 %sub) #1, !dbg !9052
  %4 = load i32, i32* %s, align 4, !dbg !9053
  %add = add nsw i32 %4, %call, !dbg !9053
  store i32 %add, i32* %s, align 4, !dbg !9053
  %5 = load i8*, i8** %pix1.addr, align 8, !dbg !9054
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !9054
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !9054
  %conv4 = zext i8 %6 to i32, !dbg !9054
  %7 = load i8*, i8** %pix2.addr, align 8, !dbg !9055
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !9055
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !9055
  %conv6 = zext i8 %8 to i32, !dbg !9055
  %sub7 = sub nsw i32 %conv4, %conv6, !dbg !9056
  %9 = load i8*, i8** %pix1.addr, align 8, !dbg !9057
  %arrayidx8 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !9057
  %10 = load i8, i8* %arrayidx8, align 1, !dbg !9057
  %conv9 = zext i8 %10 to i32, !dbg !9057
  %11 = load i8*, i8** %pix2.addr, align 8, !dbg !9058
  %arrayidx10 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !9058
  %12 = load i8, i8* %arrayidx10, align 1, !dbg !9058
  %conv11 = zext i8 %12 to i32, !dbg !9058
  %sub12 = sub nsw i32 %conv9, %conv11, !dbg !9059
  %sub13 = sub nsw i32 %sub7, %sub12, !dbg !9060
  %call14 = call i32 @abs(i32 %sub13) #1, !dbg !9061
  %13 = load i32, i32* %s, align 4, !dbg !9062
  %add15 = add nsw i32 %13, %call14, !dbg !9062
  store i32 %add15, i32* %s, align 4, !dbg !9062
  %14 = load i8*, i8** %pix1.addr, align 8, !dbg !9063
  %arrayidx16 = getelementptr inbounds i8, i8* %14, i64 2, !dbg !9063
  %15 = load i8, i8* %arrayidx16, align 1, !dbg !9063
  %conv17 = zext i8 %15 to i32, !dbg !9063
  %16 = load i8*, i8** %pix2.addr, align 8, !dbg !9064
  %arrayidx18 = getelementptr inbounds i8, i8* %16, i64 2, !dbg !9064
  %17 = load i8, i8* %arrayidx18, align 1, !dbg !9064
  %conv19 = zext i8 %17 to i32, !dbg !9064
  %sub20 = sub nsw i32 %conv17, %conv19, !dbg !9065
  %18 = load i8*, i8** %pix1.addr, align 8, !dbg !9066
  %arrayidx21 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !9066
  %19 = load i8, i8* %arrayidx21, align 1, !dbg !9066
  %conv22 = zext i8 %19 to i32, !dbg !9066
  %20 = load i8*, i8** %pix2.addr, align 8, !dbg !9067
  %arrayidx23 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !9067
  %21 = load i8, i8* %arrayidx23, align 1, !dbg !9067
  %conv24 = zext i8 %21 to i32, !dbg !9067
  %sub25 = sub nsw i32 %conv22, %conv24, !dbg !9068
  %sub26 = sub nsw i32 %sub20, %sub25, !dbg !9069
  %call27 = call i32 @abs(i32 %sub26) #1, !dbg !9070
  %22 = load i32, i32* %s, align 4, !dbg !9071
  %add28 = add nsw i32 %22, %call27, !dbg !9071
  store i32 %add28, i32* %s, align 4, !dbg !9071
  %23 = load i8*, i8** %pix1.addr, align 8, !dbg !9072
  %arrayidx29 = getelementptr inbounds i8, i8* %23, i64 3, !dbg !9072
  %24 = load i8, i8* %arrayidx29, align 1, !dbg !9072
  %conv30 = zext i8 %24 to i32, !dbg !9072
  %25 = load i8*, i8** %pix2.addr, align 8, !dbg !9073
  %arrayidx31 = getelementptr inbounds i8, i8* %25, i64 3, !dbg !9073
  %26 = load i8, i8* %arrayidx31, align 1, !dbg !9073
  %conv32 = zext i8 %26 to i32, !dbg !9073
  %sub33 = sub nsw i32 %conv30, %conv32, !dbg !9074
  %27 = load i8*, i8** %pix1.addr, align 8, !dbg !9075
  %arrayidx34 = getelementptr inbounds i8, i8* %27, i64 2, !dbg !9075
  %28 = load i8, i8* %arrayidx34, align 1, !dbg !9075
  %conv35 = zext i8 %28 to i32, !dbg !9075
  %29 = load i8*, i8** %pix2.addr, align 8, !dbg !9076
  %arrayidx36 = getelementptr inbounds i8, i8* %29, i64 2, !dbg !9076
  %30 = load i8, i8* %arrayidx36, align 1, !dbg !9076
  %conv37 = zext i8 %30 to i32, !dbg !9076
  %sub38 = sub nsw i32 %conv35, %conv37, !dbg !9077
  %sub39 = sub nsw i32 %sub33, %sub38, !dbg !9078
  %call40 = call i32 @abs(i32 %sub39) #1, !dbg !9079
  %31 = load i32, i32* %s, align 4, !dbg !9080
  %add41 = add nsw i32 %31, %call40, !dbg !9080
  store i32 %add41, i32* %s, align 4, !dbg !9080
  %32 = load i8*, i8** %pix1.addr, align 8, !dbg !9081
  %arrayidx42 = getelementptr inbounds i8, i8* %32, i64 4, !dbg !9081
  %33 = load i8, i8* %arrayidx42, align 1, !dbg !9081
  %conv43 = zext i8 %33 to i32, !dbg !9081
  %34 = load i8*, i8** %pix2.addr, align 8, !dbg !9082
  %arrayidx44 = getelementptr inbounds i8, i8* %34, i64 4, !dbg !9082
  %35 = load i8, i8* %arrayidx44, align 1, !dbg !9082
  %conv45 = zext i8 %35 to i32, !dbg !9082
  %sub46 = sub nsw i32 %conv43, %conv45, !dbg !9083
  %36 = load i8*, i8** %pix1.addr, align 8, !dbg !9084
  %arrayidx47 = getelementptr inbounds i8, i8* %36, i64 3, !dbg !9084
  %37 = load i8, i8* %arrayidx47, align 1, !dbg !9084
  %conv48 = zext i8 %37 to i32, !dbg !9084
  %38 = load i8*, i8** %pix2.addr, align 8, !dbg !9085
  %arrayidx49 = getelementptr inbounds i8, i8* %38, i64 3, !dbg !9085
  %39 = load i8, i8* %arrayidx49, align 1, !dbg !9085
  %conv50 = zext i8 %39 to i32, !dbg !9085
  %sub51 = sub nsw i32 %conv48, %conv50, !dbg !9086
  %sub52 = sub nsw i32 %sub46, %sub51, !dbg !9087
  %call53 = call i32 @abs(i32 %sub52) #1, !dbg !9088
  %40 = load i32, i32* %s, align 4, !dbg !9089
  %add54 = add nsw i32 %40, %call53, !dbg !9089
  store i32 %add54, i32* %s, align 4, !dbg !9089
  %41 = load i8*, i8** %pix1.addr, align 8, !dbg !9090
  %arrayidx55 = getelementptr inbounds i8, i8* %41, i64 5, !dbg !9090
  %42 = load i8, i8* %arrayidx55, align 1, !dbg !9090
  %conv56 = zext i8 %42 to i32, !dbg !9090
  %43 = load i8*, i8** %pix2.addr, align 8, !dbg !9091
  %arrayidx57 = getelementptr inbounds i8, i8* %43, i64 5, !dbg !9091
  %44 = load i8, i8* %arrayidx57, align 1, !dbg !9091
  %conv58 = zext i8 %44 to i32, !dbg !9091
  %sub59 = sub nsw i32 %conv56, %conv58, !dbg !9092
  %45 = load i8*, i8** %pix1.addr, align 8, !dbg !9093
  %arrayidx60 = getelementptr inbounds i8, i8* %45, i64 4, !dbg !9093
  %46 = load i8, i8* %arrayidx60, align 1, !dbg !9093
  %conv61 = zext i8 %46 to i32, !dbg !9093
  %47 = load i8*, i8** %pix2.addr, align 8, !dbg !9094
  %arrayidx62 = getelementptr inbounds i8, i8* %47, i64 4, !dbg !9094
  %48 = load i8, i8* %arrayidx62, align 1, !dbg !9094
  %conv63 = zext i8 %48 to i32, !dbg !9094
  %sub64 = sub nsw i32 %conv61, %conv63, !dbg !9095
  %sub65 = sub nsw i32 %sub59, %sub64, !dbg !9096
  %call66 = call i32 @abs(i32 %sub65) #1, !dbg !9097
  %49 = load i32, i32* %s, align 4, !dbg !9098
  %add67 = add nsw i32 %49, %call66, !dbg !9098
  store i32 %add67, i32* %s, align 4, !dbg !9098
  %50 = load i8*, i8** %pix1.addr, align 8, !dbg !9099
  %arrayidx68 = getelementptr inbounds i8, i8* %50, i64 6, !dbg !9099
  %51 = load i8, i8* %arrayidx68, align 1, !dbg !9099
  %conv69 = zext i8 %51 to i32, !dbg !9099
  %52 = load i8*, i8** %pix2.addr, align 8, !dbg !9100
  %arrayidx70 = getelementptr inbounds i8, i8* %52, i64 6, !dbg !9100
  %53 = load i8, i8* %arrayidx70, align 1, !dbg !9100
  %conv71 = zext i8 %53 to i32, !dbg !9100
  %sub72 = sub nsw i32 %conv69, %conv71, !dbg !9101
  %54 = load i8*, i8** %pix1.addr, align 8, !dbg !9102
  %arrayidx73 = getelementptr inbounds i8, i8* %54, i64 5, !dbg !9102
  %55 = load i8, i8* %arrayidx73, align 1, !dbg !9102
  %conv74 = zext i8 %55 to i32, !dbg !9102
  %56 = load i8*, i8** %pix2.addr, align 8, !dbg !9103
  %arrayidx75 = getelementptr inbounds i8, i8* %56, i64 5, !dbg !9103
  %57 = load i8, i8* %arrayidx75, align 1, !dbg !9103
  %conv76 = zext i8 %57 to i32, !dbg !9103
  %sub77 = sub nsw i32 %conv74, %conv76, !dbg !9104
  %sub78 = sub nsw i32 %sub72, %sub77, !dbg !9105
  %call79 = call i32 @abs(i32 %sub78) #1, !dbg !9106
  %58 = load i32, i32* %s, align 4, !dbg !9107
  %add80 = add nsw i32 %58, %call79, !dbg !9107
  store i32 %add80, i32* %s, align 4, !dbg !9107
  %59 = load i8*, i8** %pix1.addr, align 8, !dbg !9108
  %arrayidx81 = getelementptr inbounds i8, i8* %59, i64 7, !dbg !9108
  %60 = load i8, i8* %arrayidx81, align 1, !dbg !9108
  %conv82 = zext i8 %60 to i32, !dbg !9108
  %61 = load i8*, i8** %pix2.addr, align 8, !dbg !9109
  %arrayidx83 = getelementptr inbounds i8, i8* %61, i64 7, !dbg !9109
  %62 = load i8, i8* %arrayidx83, align 1, !dbg !9109
  %conv84 = zext i8 %62 to i32, !dbg !9109
  %sub85 = sub nsw i32 %conv82, %conv84, !dbg !9110
  %63 = load i8*, i8** %pix1.addr, align 8, !dbg !9111
  %arrayidx86 = getelementptr inbounds i8, i8* %63, i64 6, !dbg !9111
  %64 = load i8, i8* %arrayidx86, align 1, !dbg !9111
  %conv87 = zext i8 %64 to i32, !dbg !9111
  %65 = load i8*, i8** %pix2.addr, align 8, !dbg !9112
  %arrayidx88 = getelementptr inbounds i8, i8* %65, i64 6, !dbg !9112
  %66 = load i8, i8* %arrayidx88, align 1, !dbg !9112
  %conv89 = zext i8 %66 to i32, !dbg !9112
  %sub90 = sub nsw i32 %conv87, %conv89, !dbg !9113
  %sub91 = sub nsw i32 %sub85, %sub90, !dbg !9114
  %call92 = call i32 @abs(i32 %sub91) #1, !dbg !9115
  %67 = load i32, i32* %s, align 4, !dbg !9116
  %add93 = add nsw i32 %67, %call92, !dbg !9116
  store i32 %add93, i32* %s, align 4, !dbg !9116
  %68 = load i8*, i8** %pix1.addr, align 8, !dbg !9117
  %arrayidx94 = getelementptr inbounds i8, i8* %68, i64 8, !dbg !9117
  %69 = load i8, i8* %arrayidx94, align 1, !dbg !9117
  %conv95 = zext i8 %69 to i32, !dbg !9117
  %70 = load i8*, i8** %pix2.addr, align 8, !dbg !9118
  %arrayidx96 = getelementptr inbounds i8, i8* %70, i64 8, !dbg !9118
  %71 = load i8, i8* %arrayidx96, align 1, !dbg !9118
  %conv97 = zext i8 %71 to i32, !dbg !9118
  %sub98 = sub nsw i32 %conv95, %conv97, !dbg !9119
  %72 = load i8*, i8** %pix1.addr, align 8, !dbg !9120
  %arrayidx99 = getelementptr inbounds i8, i8* %72, i64 7, !dbg !9120
  %73 = load i8, i8* %arrayidx99, align 1, !dbg !9120
  %conv100 = zext i8 %73 to i32, !dbg !9120
  %74 = load i8*, i8** %pix2.addr, align 8, !dbg !9121
  %arrayidx101 = getelementptr inbounds i8, i8* %74, i64 7, !dbg !9121
  %75 = load i8, i8* %arrayidx101, align 1, !dbg !9121
  %conv102 = zext i8 %75 to i32, !dbg !9121
  %sub103 = sub nsw i32 %conv100, %conv102, !dbg !9122
  %sub104 = sub nsw i32 %sub98, %sub103, !dbg !9123
  %call105 = call i32 @abs(i32 %sub104) #1, !dbg !9124
  %76 = load i32, i32* %s, align 4, !dbg !9125
  %add106 = add nsw i32 %76, %call105, !dbg !9125
  store i32 %add106, i32* %s, align 4, !dbg !9125
  %77 = load i8*, i8** %pix1.addr, align 8, !dbg !9126
  %arrayidx107 = getelementptr inbounds i8, i8* %77, i64 9, !dbg !9126
  %78 = load i8, i8* %arrayidx107, align 1, !dbg !9126
  %conv108 = zext i8 %78 to i32, !dbg !9126
  %79 = load i8*, i8** %pix2.addr, align 8, !dbg !9127
  %arrayidx109 = getelementptr inbounds i8, i8* %79, i64 9, !dbg !9127
  %80 = load i8, i8* %arrayidx109, align 1, !dbg !9127
  %conv110 = zext i8 %80 to i32, !dbg !9127
  %sub111 = sub nsw i32 %conv108, %conv110, !dbg !9128
  %81 = load i8*, i8** %pix1.addr, align 8, !dbg !9129
  %arrayidx112 = getelementptr inbounds i8, i8* %81, i64 8, !dbg !9129
  %82 = load i8, i8* %arrayidx112, align 1, !dbg !9129
  %conv113 = zext i8 %82 to i32, !dbg !9129
  %83 = load i8*, i8** %pix2.addr, align 8, !dbg !9130
  %arrayidx114 = getelementptr inbounds i8, i8* %83, i64 8, !dbg !9130
  %84 = load i8, i8* %arrayidx114, align 1, !dbg !9130
  %conv115 = zext i8 %84 to i32, !dbg !9130
  %sub116 = sub nsw i32 %conv113, %conv115, !dbg !9131
  %sub117 = sub nsw i32 %sub111, %sub116, !dbg !9132
  %call118 = call i32 @abs(i32 %sub117) #1, !dbg !9133
  %85 = load i32, i32* %s, align 4, !dbg !9134
  %add119 = add nsw i32 %85, %call118, !dbg !9134
  store i32 %add119, i32* %s, align 4, !dbg !9134
  %86 = load i8*, i8** %pix1.addr, align 8, !dbg !9135
  %arrayidx120 = getelementptr inbounds i8, i8* %86, i64 10, !dbg !9135
  %87 = load i8, i8* %arrayidx120, align 1, !dbg !9135
  %conv121 = zext i8 %87 to i32, !dbg !9135
  %88 = load i8*, i8** %pix2.addr, align 8, !dbg !9136
  %arrayidx122 = getelementptr inbounds i8, i8* %88, i64 10, !dbg !9136
  %89 = load i8, i8* %arrayidx122, align 1, !dbg !9136
  %conv123 = zext i8 %89 to i32, !dbg !9136
  %sub124 = sub nsw i32 %conv121, %conv123, !dbg !9137
  %90 = load i8*, i8** %pix1.addr, align 8, !dbg !9138
  %arrayidx125 = getelementptr inbounds i8, i8* %90, i64 9, !dbg !9138
  %91 = load i8, i8* %arrayidx125, align 1, !dbg !9138
  %conv126 = zext i8 %91 to i32, !dbg !9138
  %92 = load i8*, i8** %pix2.addr, align 8, !dbg !9139
  %arrayidx127 = getelementptr inbounds i8, i8* %92, i64 9, !dbg !9139
  %93 = load i8, i8* %arrayidx127, align 1, !dbg !9139
  %conv128 = zext i8 %93 to i32, !dbg !9139
  %sub129 = sub nsw i32 %conv126, %conv128, !dbg !9140
  %sub130 = sub nsw i32 %sub124, %sub129, !dbg !9141
  %call131 = call i32 @abs(i32 %sub130) #1, !dbg !9142
  %94 = load i32, i32* %s, align 4, !dbg !9143
  %add132 = add nsw i32 %94, %call131, !dbg !9143
  store i32 %add132, i32* %s, align 4, !dbg !9143
  %95 = load i8*, i8** %pix1.addr, align 8, !dbg !9144
  %arrayidx133 = getelementptr inbounds i8, i8* %95, i64 11, !dbg !9144
  %96 = load i8, i8* %arrayidx133, align 1, !dbg !9144
  %conv134 = zext i8 %96 to i32, !dbg !9144
  %97 = load i8*, i8** %pix2.addr, align 8, !dbg !9145
  %arrayidx135 = getelementptr inbounds i8, i8* %97, i64 11, !dbg !9145
  %98 = load i8, i8* %arrayidx135, align 1, !dbg !9145
  %conv136 = zext i8 %98 to i32, !dbg !9145
  %sub137 = sub nsw i32 %conv134, %conv136, !dbg !9146
  %99 = load i8*, i8** %pix1.addr, align 8, !dbg !9147
  %arrayidx138 = getelementptr inbounds i8, i8* %99, i64 10, !dbg !9147
  %100 = load i8, i8* %arrayidx138, align 1, !dbg !9147
  %conv139 = zext i8 %100 to i32, !dbg !9147
  %101 = load i8*, i8** %pix2.addr, align 8, !dbg !9148
  %arrayidx140 = getelementptr inbounds i8, i8* %101, i64 10, !dbg !9148
  %102 = load i8, i8* %arrayidx140, align 1, !dbg !9148
  %conv141 = zext i8 %102 to i32, !dbg !9148
  %sub142 = sub nsw i32 %conv139, %conv141, !dbg !9149
  %sub143 = sub nsw i32 %sub137, %sub142, !dbg !9150
  %call144 = call i32 @abs(i32 %sub143) #1, !dbg !9151
  %103 = load i32, i32* %s, align 4, !dbg !9152
  %add145 = add nsw i32 %103, %call144, !dbg !9152
  store i32 %add145, i32* %s, align 4, !dbg !9152
  %104 = load i8*, i8** %pix1.addr, align 8, !dbg !9153
  %arrayidx146 = getelementptr inbounds i8, i8* %104, i64 12, !dbg !9153
  %105 = load i8, i8* %arrayidx146, align 1, !dbg !9153
  %conv147 = zext i8 %105 to i32, !dbg !9153
  %106 = load i8*, i8** %pix2.addr, align 8, !dbg !9154
  %arrayidx148 = getelementptr inbounds i8, i8* %106, i64 12, !dbg !9154
  %107 = load i8, i8* %arrayidx148, align 1, !dbg !9154
  %conv149 = zext i8 %107 to i32, !dbg !9154
  %sub150 = sub nsw i32 %conv147, %conv149, !dbg !9155
  %108 = load i8*, i8** %pix1.addr, align 8, !dbg !9156
  %arrayidx151 = getelementptr inbounds i8, i8* %108, i64 11, !dbg !9156
  %109 = load i8, i8* %arrayidx151, align 1, !dbg !9156
  %conv152 = zext i8 %109 to i32, !dbg !9156
  %110 = load i8*, i8** %pix2.addr, align 8, !dbg !9157
  %arrayidx153 = getelementptr inbounds i8, i8* %110, i64 11, !dbg !9157
  %111 = load i8, i8* %arrayidx153, align 1, !dbg !9157
  %conv154 = zext i8 %111 to i32, !dbg !9157
  %sub155 = sub nsw i32 %conv152, %conv154, !dbg !9158
  %sub156 = sub nsw i32 %sub150, %sub155, !dbg !9159
  %call157 = call i32 @abs(i32 %sub156) #1, !dbg !9160
  %112 = load i32, i32* %s, align 4, !dbg !9161
  %add158 = add nsw i32 %112, %call157, !dbg !9161
  store i32 %add158, i32* %s, align 4, !dbg !9161
  %113 = load i8*, i8** %pix1.addr, align 8, !dbg !9162
  %arrayidx159 = getelementptr inbounds i8, i8* %113, i64 13, !dbg !9162
  %114 = load i8, i8* %arrayidx159, align 1, !dbg !9162
  %conv160 = zext i8 %114 to i32, !dbg !9162
  %115 = load i8*, i8** %pix2.addr, align 8, !dbg !9163
  %arrayidx161 = getelementptr inbounds i8, i8* %115, i64 13, !dbg !9163
  %116 = load i8, i8* %arrayidx161, align 1, !dbg !9163
  %conv162 = zext i8 %116 to i32, !dbg !9163
  %sub163 = sub nsw i32 %conv160, %conv162, !dbg !9164
  %117 = load i8*, i8** %pix1.addr, align 8, !dbg !9165
  %arrayidx164 = getelementptr inbounds i8, i8* %117, i64 12, !dbg !9165
  %118 = load i8, i8* %arrayidx164, align 1, !dbg !9165
  %conv165 = zext i8 %118 to i32, !dbg !9165
  %119 = load i8*, i8** %pix2.addr, align 8, !dbg !9166
  %arrayidx166 = getelementptr inbounds i8, i8* %119, i64 12, !dbg !9166
  %120 = load i8, i8* %arrayidx166, align 1, !dbg !9166
  %conv167 = zext i8 %120 to i32, !dbg !9166
  %sub168 = sub nsw i32 %conv165, %conv167, !dbg !9167
  %sub169 = sub nsw i32 %sub163, %sub168, !dbg !9168
  %call170 = call i32 @abs(i32 %sub169) #1, !dbg !9169
  %121 = load i32, i32* %s, align 4, !dbg !9170
  %add171 = add nsw i32 %121, %call170, !dbg !9170
  store i32 %add171, i32* %s, align 4, !dbg !9170
  %122 = load i8*, i8** %pix1.addr, align 8, !dbg !9171
  %arrayidx172 = getelementptr inbounds i8, i8* %122, i64 14, !dbg !9171
  %123 = load i8, i8* %arrayidx172, align 1, !dbg !9171
  %conv173 = zext i8 %123 to i32, !dbg !9171
  %124 = load i8*, i8** %pix2.addr, align 8, !dbg !9172
  %arrayidx174 = getelementptr inbounds i8, i8* %124, i64 14, !dbg !9172
  %125 = load i8, i8* %arrayidx174, align 1, !dbg !9172
  %conv175 = zext i8 %125 to i32, !dbg !9172
  %sub176 = sub nsw i32 %conv173, %conv175, !dbg !9173
  %126 = load i8*, i8** %pix1.addr, align 8, !dbg !9174
  %arrayidx177 = getelementptr inbounds i8, i8* %126, i64 13, !dbg !9174
  %127 = load i8, i8* %arrayidx177, align 1, !dbg !9174
  %conv178 = zext i8 %127 to i32, !dbg !9174
  %128 = load i8*, i8** %pix2.addr, align 8, !dbg !9175
  %arrayidx179 = getelementptr inbounds i8, i8* %128, i64 13, !dbg !9175
  %129 = load i8, i8* %arrayidx179, align 1, !dbg !9175
  %conv180 = zext i8 %129 to i32, !dbg !9175
  %sub181 = sub nsw i32 %conv178, %conv180, !dbg !9176
  %sub182 = sub nsw i32 %sub176, %sub181, !dbg !9177
  %call183 = call i32 @abs(i32 %sub182) #1, !dbg !9178
  %130 = load i32, i32* %s, align 4, !dbg !9179
  %add184 = add nsw i32 %130, %call183, !dbg !9179
  store i32 %add184, i32* %s, align 4, !dbg !9179
  %131 = load i8*, i8** %pix1.addr, align 8, !dbg !9180
  %arrayidx185 = getelementptr inbounds i8, i8* %131, i64 15, !dbg !9180
  %132 = load i8, i8* %arrayidx185, align 1, !dbg !9180
  %conv186 = zext i8 %132 to i32, !dbg !9180
  %133 = load i8*, i8** %pix2.addr, align 8, !dbg !9181
  %arrayidx187 = getelementptr inbounds i8, i8* %133, i64 15, !dbg !9181
  %134 = load i8, i8* %arrayidx187, align 1, !dbg !9181
  %conv188 = zext i8 %134 to i32, !dbg !9181
  %sub189 = sub nsw i32 %conv186, %conv188, !dbg !9182
  %135 = load i8*, i8** %pix1.addr, align 8, !dbg !9183
  %arrayidx190 = getelementptr inbounds i8, i8* %135, i64 14, !dbg !9183
  %136 = load i8, i8* %arrayidx190, align 1, !dbg !9183
  %conv191 = zext i8 %136 to i32, !dbg !9183
  %137 = load i8*, i8** %pix2.addr, align 8, !dbg !9184
  %arrayidx192 = getelementptr inbounds i8, i8* %137, i64 14, !dbg !9184
  %138 = load i8, i8* %arrayidx192, align 1, !dbg !9184
  %conv193 = zext i8 %138 to i32, !dbg !9184
  %sub194 = sub nsw i32 %conv191, %conv193, !dbg !9185
  %sub195 = sub nsw i32 %sub189, %sub194, !dbg !9186
  %call196 = call i32 @abs(i32 %sub195) #1, !dbg !9187
  %139 = load i32, i32* %s, align 4, !dbg !9188
  %add197 = add nsw i32 %139, %call196, !dbg !9188
  store i32 %add197, i32* %s, align 4, !dbg !9188
  %140 = load i64, i64* %stride.addr, align 8, !dbg !9189
  %141 = load i8*, i8** %pix1.addr, align 8, !dbg !9190
  %add.ptr = getelementptr inbounds i8, i8* %141, i64 %140, !dbg !9190
  store i8* %add.ptr, i8** %pix1.addr, align 8, !dbg !9190
  %142 = load i64, i64* %stride.addr, align 8, !dbg !9191
  %143 = load i8*, i8** %pix2.addr, align 8, !dbg !9192
  %add.ptr198 = getelementptr inbounds i8, i8* %143, i64 %142, !dbg !9192
  store i8* %add.ptr198, i8** %pix2.addr, align 8, !dbg !9192
  store i32 1, i32* %i, align 4, !dbg !9193
  br label %for.cond, !dbg !9195

for.cond:                                         ; preds = %for.inc280, %entry
  %144 = load i32, i32* %i, align 4, !dbg !9196
  %145 = load i32, i32* %h.addr, align 4, !dbg !9199
  %cmp = icmp slt i32 %144, %145, !dbg !9200
  br i1 %cmp, label %for.body, label %for.end282, !dbg !9201

for.body:                                         ; preds = %for.cond
  %146 = load i8*, i8** %pix1.addr, align 8, !dbg !9202
  %arrayidx200 = getelementptr inbounds i8, i8* %146, i64 0, !dbg !9202
  %147 = load i8, i8* %arrayidx200, align 1, !dbg !9202
  %conv201 = zext i8 %147 to i32, !dbg !9202
  %148 = load i8*, i8** %pix2.addr, align 8, !dbg !9204
  %arrayidx202 = getelementptr inbounds i8, i8* %148, i64 0, !dbg !9204
  %149 = load i8, i8* %arrayidx202, align 1, !dbg !9204
  %conv203 = zext i8 %149 to i32, !dbg !9204
  %sub204 = sub nsw i32 %conv201, %conv203, !dbg !9205
  %150 = load i64, i64* %stride.addr, align 8, !dbg !9206
  %sub205 = sub nsw i64 0, %150, !dbg !9207
  %151 = load i8*, i8** %pix1.addr, align 8, !dbg !9208
  %arrayidx206 = getelementptr inbounds i8, i8* %151, i64 %sub205, !dbg !9208
  %152 = load i8, i8* %arrayidx206, align 1, !dbg !9208
  %conv207 = zext i8 %152 to i32, !dbg !9208
  %153 = load i64, i64* %stride.addr, align 8, !dbg !9209
  %sub208 = sub nsw i64 0, %153, !dbg !9210
  %154 = load i8*, i8** %pix2.addr, align 8, !dbg !9211
  %arrayidx209 = getelementptr inbounds i8, i8* %154, i64 %sub208, !dbg !9211
  %155 = load i8, i8* %arrayidx209, align 1, !dbg !9211
  %conv210 = zext i8 %155 to i32, !dbg !9211
  %sub211 = sub nsw i32 %conv207, %conv210, !dbg !9212
  %sub212 = sub nsw i32 %sub204, %sub211, !dbg !9213
  %call213 = call i32 @abs(i32 %sub212) #1, !dbg !9214
  %156 = load i32, i32* %s, align 4, !dbg !9215
  %add214 = add nsw i32 %156, %call213, !dbg !9215
  store i32 %add214, i32* %s, align 4, !dbg !9215
  store i32 1, i32* %j, align 4, !dbg !9216
  br label %for.cond215, !dbg !9218

for.cond215:                                      ; preds = %for.inc, %for.body
  %157 = load i32, i32* %j, align 4, !dbg !9219
  %cmp216 = icmp slt i32 %157, 16, !dbg !9222
  br i1 %cmp216, label %for.body218, label %for.end, !dbg !9223

for.body218:                                      ; preds = %for.cond215
  %158 = load i32, i32* %j, align 4, !dbg !9224
  %idxprom = sext i32 %158 to i64, !dbg !9225
  %159 = load i8*, i8** %pix1.addr, align 8, !dbg !9225
  %arrayidx219 = getelementptr inbounds i8, i8* %159, i64 %idxprom, !dbg !9225
  %160 = load i8, i8* %arrayidx219, align 1, !dbg !9225
  %conv220 = zext i8 %160 to i32, !dbg !9225
  %161 = load i32, i32* %j, align 4, !dbg !9226
  %idxprom221 = sext i32 %161 to i64, !dbg !9227
  %162 = load i8*, i8** %pix2.addr, align 8, !dbg !9227
  %arrayidx222 = getelementptr inbounds i8, i8* %162, i64 %idxprom221, !dbg !9227
  %163 = load i8, i8* %arrayidx222, align 1, !dbg !9227
  %conv223 = zext i8 %163 to i32, !dbg !9227
  %sub224 = sub nsw i32 %conv220, %conv223, !dbg !9228
  %164 = load i32, i32* %j, align 4, !dbg !9229
  %conv225 = sext i32 %164 to i64, !dbg !9229
  %165 = load i64, i64* %stride.addr, align 8, !dbg !9230
  %sub226 = sub nsw i64 %conv225, %165, !dbg !9231
  %166 = load i8*, i8** %pix1.addr, align 8, !dbg !9232
  %arrayidx227 = getelementptr inbounds i8, i8* %166, i64 %sub226, !dbg !9232
  %167 = load i8, i8* %arrayidx227, align 1, !dbg !9232
  %conv228 = zext i8 %167 to i32, !dbg !9232
  %168 = load i32, i32* %j, align 4, !dbg !9233
  %conv229 = sext i32 %168 to i64, !dbg !9233
  %169 = load i64, i64* %stride.addr, align 8, !dbg !9234
  %sub230 = sub nsw i64 %conv229, %169, !dbg !9235
  %170 = load i8*, i8** %pix2.addr, align 8, !dbg !9236
  %arrayidx231 = getelementptr inbounds i8, i8* %170, i64 %sub230, !dbg !9236
  %171 = load i8, i8* %arrayidx231, align 1, !dbg !9236
  %conv232 = zext i8 %171 to i32, !dbg !9236
  %sub233 = sub nsw i32 %conv228, %conv232, !dbg !9237
  %172 = load i32, i32* %j, align 4, !dbg !9238
  %sub234 = sub nsw i32 %172, 1, !dbg !9239
  %idxprom235 = sext i32 %sub234 to i64, !dbg !9240
  %173 = load i8*, i8** %pix1.addr, align 8, !dbg !9240
  %arrayidx236 = getelementptr inbounds i8, i8* %173, i64 %idxprom235, !dbg !9240
  %174 = load i8, i8* %arrayidx236, align 1, !dbg !9240
  %conv237 = zext i8 %174 to i32, !dbg !9240
  %175 = load i32, i32* %j, align 4, !dbg !9241
  %sub238 = sub nsw i32 %175, 1, !dbg !9242
  %idxprom239 = sext i32 %sub238 to i64, !dbg !9243
  %176 = load i8*, i8** %pix2.addr, align 8, !dbg !9243
  %arrayidx240 = getelementptr inbounds i8, i8* %176, i64 %idxprom239, !dbg !9243
  %177 = load i8, i8* %arrayidx240, align 1, !dbg !9243
  %conv241 = zext i8 %177 to i32, !dbg !9243
  %sub242 = sub nsw i32 %conv237, %conv241, !dbg !9244
  %178 = load i32, i32* %j, align 4, !dbg !9245
  %conv243 = sext i32 %178 to i64, !dbg !9245
  %179 = load i64, i64* %stride.addr, align 8, !dbg !9246
  %sub244 = sub nsw i64 %conv243, %179, !dbg !9247
  %180 = load i8*, i8** %pix1.addr, align 8, !dbg !9248
  %arrayidx245 = getelementptr inbounds i8, i8* %180, i64 %sub244, !dbg !9248
  %181 = load i8, i8* %arrayidx245, align 1, !dbg !9248
  %conv246 = zext i8 %181 to i32, !dbg !9248
  %182 = load i32, i32* %j, align 4, !dbg !9249
  %conv247 = sext i32 %182 to i64, !dbg !9249
  %183 = load i64, i64* %stride.addr, align 8, !dbg !9250
  %sub248 = sub nsw i64 %conv247, %183, !dbg !9251
  %184 = load i8*, i8** %pix2.addr, align 8, !dbg !9252
  %arrayidx249 = getelementptr inbounds i8, i8* %184, i64 %sub248, !dbg !9252
  %185 = load i8, i8* %arrayidx249, align 1, !dbg !9252
  %conv250 = zext i8 %185 to i32, !dbg !9252
  %sub251 = sub nsw i32 %conv246, %conv250, !dbg !9253
  %186 = load i32, i32* %j, align 4, !dbg !9254
  %sub252 = sub nsw i32 %186, 1, !dbg !9255
  %idxprom253 = sext i32 %sub252 to i64, !dbg !9256
  %187 = load i8*, i8** %pix1.addr, align 8, !dbg !9256
  %arrayidx254 = getelementptr inbounds i8, i8* %187, i64 %idxprom253, !dbg !9256
  %188 = load i8, i8* %arrayidx254, align 1, !dbg !9256
  %conv255 = zext i8 %188 to i32, !dbg !9256
  %189 = load i32, i32* %j, align 4, !dbg !9257
  %sub256 = sub nsw i32 %189, 1, !dbg !9258
  %idxprom257 = sext i32 %sub256 to i64, !dbg !9259
  %190 = load i8*, i8** %pix2.addr, align 8, !dbg !9259
  %arrayidx258 = getelementptr inbounds i8, i8* %190, i64 %idxprom257, !dbg !9259
  %191 = load i8, i8* %arrayidx258, align 1, !dbg !9259
  %conv259 = zext i8 %191 to i32, !dbg !9259
  %sub260 = sub nsw i32 %conv255, %conv259, !dbg !9260
  %add261 = add nsw i32 %sub251, %sub260, !dbg !9261
  %192 = load i32, i32* %j, align 4, !dbg !9262
  %conv262 = sext i32 %192 to i64, !dbg !9262
  %193 = load i64, i64* %stride.addr, align 8, !dbg !9263
  %sub263 = sub nsw i64 %conv262, %193, !dbg !9264
  %sub264 = sub nsw i64 %sub263, 1, !dbg !9265
  %194 = load i8*, i8** %pix1.addr, align 8, !dbg !9266
  %arrayidx265 = getelementptr inbounds i8, i8* %194, i64 %sub264, !dbg !9266
  %195 = load i8, i8* %arrayidx265, align 1, !dbg !9266
  %conv266 = zext i8 %195 to i32, !dbg !9266
  %196 = load i32, i32* %j, align 4, !dbg !9267
  %conv267 = sext i32 %196 to i64, !dbg !9267
  %197 = load i64, i64* %stride.addr, align 8, !dbg !9268
  %sub268 = sub nsw i64 %conv267, %197, !dbg !9269
  %sub269 = sub nsw i64 %sub268, 1, !dbg !9270
  %198 = load i8*, i8** %pix2.addr, align 8, !dbg !9271
  %arrayidx270 = getelementptr inbounds i8, i8* %198, i64 %sub269, !dbg !9271
  %199 = load i8, i8* %arrayidx270, align 1, !dbg !9271
  %conv271 = zext i8 %199 to i32, !dbg !9271
  %sub272 = sub nsw i32 %conv266, %conv271, !dbg !9272
  %sub273 = sub nsw i32 %add261, %sub272, !dbg !9273
  %call274 = call i32 @mid_pred(i32 %sub233, i32 %sub242, i32 %sub273) #1, !dbg !9274
  %sub275 = sub nsw i32 %sub224, %call274, !dbg !9275
  %call276 = call i32 @abs(i32 %sub275) #1, !dbg !9276
  %200 = load i32, i32* %s, align 4, !dbg !9277
  %add277 = add nsw i32 %200, %call276, !dbg !9277
  store i32 %add277, i32* %s, align 4, !dbg !9277
  br label %for.inc, !dbg !9278

for.inc:                                          ; preds = %for.body218
  %201 = load i32, i32* %j, align 4, !dbg !9279
  %inc = add nsw i32 %201, 1, !dbg !9279
  store i32 %inc, i32* %j, align 4, !dbg !9279
  br label %for.cond215, !dbg !9281, !llvm.loop !9282

for.end:                                          ; preds = %for.cond215
  %202 = load i64, i64* %stride.addr, align 8, !dbg !9284
  %203 = load i8*, i8** %pix1.addr, align 8, !dbg !9285
  %add.ptr278 = getelementptr inbounds i8, i8* %203, i64 %202, !dbg !9285
  store i8* %add.ptr278, i8** %pix1.addr, align 8, !dbg !9285
  %204 = load i64, i64* %stride.addr, align 8, !dbg !9286
  %205 = load i8*, i8** %pix2.addr, align 8, !dbg !9287
  %add.ptr279 = getelementptr inbounds i8, i8* %205, i64 %204, !dbg !9287
  store i8* %add.ptr279, i8** %pix2.addr, align 8, !dbg !9287
  br label %for.inc280, !dbg !9288

for.inc280:                                       ; preds = %for.end
  %206 = load i32, i32* %i, align 4, !dbg !9289
  %inc281 = add nsw i32 %206, 1, !dbg !9289
  store i32 %inc281, i32* %i, align 4, !dbg !9289
  br label %for.cond, !dbg !9291, !llvm.loop !9292

for.end282:                                       ; preds = %for.cond
  %207 = load i32, i32* %s, align 4, !dbg !9294
  ret i32 %207, !dbg !9295
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @pix_median_abs8_c(%struct.MpegEncContext* %v, i8* %pix1, i8* %pix2, i64 %stride, i32 %h) #5 !dbg !9296 {
entry:
  %v.addr = alloca %struct.MpegEncContext*, align 8
  %pix1.addr = alloca i8*, align 8
  %pix2.addr = alloca i8*, align 8
  %stride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.MpegEncContext* %v, %struct.MpegEncContext** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %v.addr, metadata !9297, metadata !2614), !dbg !9298
  store i8* %pix1, i8** %pix1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix1.addr, metadata !9299, metadata !2614), !dbg !9300
  store i8* %pix2, i8** %pix2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pix2.addr, metadata !9301, metadata !2614), !dbg !9302
  store i64 %stride, i64* %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %stride.addr, metadata !9303, metadata !2614), !dbg !9304
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !9305, metadata !2614), !dbg !9306
  call void @llvm.dbg.declare(metadata i32* %s, metadata !9307, metadata !2614), !dbg !9308
  store i32 0, i32* %s, align 4, !dbg !9308
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9309, metadata !2614), !dbg !9310
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9311, metadata !2614), !dbg !9312
  %0 = load i8*, i8** %pix1.addr, align 8, !dbg !9313
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !9313
  %1 = load i8, i8* %arrayidx, align 1, !dbg !9313
  %conv = zext i8 %1 to i32, !dbg !9313
  %2 = load i8*, i8** %pix2.addr, align 8, !dbg !9314
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !9314
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !9314
  %conv2 = zext i8 %3 to i32, !dbg !9314
  %sub = sub nsw i32 %conv, %conv2, !dbg !9315
  %call = call i32 @abs(i32 %sub) #1, !dbg !9316
  %4 = load i32, i32* %s, align 4, !dbg !9317
  %add = add nsw i32 %4, %call, !dbg !9317
  store i32 %add, i32* %s, align 4, !dbg !9317
  %5 = load i8*, i8** %pix1.addr, align 8, !dbg !9318
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !9318
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !9318
  %conv4 = zext i8 %6 to i32, !dbg !9318
  %7 = load i8*, i8** %pix2.addr, align 8, !dbg !9319
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !9319
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !9319
  %conv6 = zext i8 %8 to i32, !dbg !9319
  %sub7 = sub nsw i32 %conv4, %conv6, !dbg !9320
  %9 = load i8*, i8** %pix1.addr, align 8, !dbg !9321
  %arrayidx8 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !9321
  %10 = load i8, i8* %arrayidx8, align 1, !dbg !9321
  %conv9 = zext i8 %10 to i32, !dbg !9321
  %11 = load i8*, i8** %pix2.addr, align 8, !dbg !9322
  %arrayidx10 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !9322
  %12 = load i8, i8* %arrayidx10, align 1, !dbg !9322
  %conv11 = zext i8 %12 to i32, !dbg !9322
  %sub12 = sub nsw i32 %conv9, %conv11, !dbg !9323
  %sub13 = sub nsw i32 %sub7, %sub12, !dbg !9324
  %call14 = call i32 @abs(i32 %sub13) #1, !dbg !9325
  %13 = load i32, i32* %s, align 4, !dbg !9326
  %add15 = add nsw i32 %13, %call14, !dbg !9326
  store i32 %add15, i32* %s, align 4, !dbg !9326
  %14 = load i8*, i8** %pix1.addr, align 8, !dbg !9327
  %arrayidx16 = getelementptr inbounds i8, i8* %14, i64 2, !dbg !9327
  %15 = load i8, i8* %arrayidx16, align 1, !dbg !9327
  %conv17 = zext i8 %15 to i32, !dbg !9327
  %16 = load i8*, i8** %pix2.addr, align 8, !dbg !9328
  %arrayidx18 = getelementptr inbounds i8, i8* %16, i64 2, !dbg !9328
  %17 = load i8, i8* %arrayidx18, align 1, !dbg !9328
  %conv19 = zext i8 %17 to i32, !dbg !9328
  %sub20 = sub nsw i32 %conv17, %conv19, !dbg !9329
  %18 = load i8*, i8** %pix1.addr, align 8, !dbg !9330
  %arrayidx21 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !9330
  %19 = load i8, i8* %arrayidx21, align 1, !dbg !9330
  %conv22 = zext i8 %19 to i32, !dbg !9330
  %20 = load i8*, i8** %pix2.addr, align 8, !dbg !9331
  %arrayidx23 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !9331
  %21 = load i8, i8* %arrayidx23, align 1, !dbg !9331
  %conv24 = zext i8 %21 to i32, !dbg !9331
  %sub25 = sub nsw i32 %conv22, %conv24, !dbg !9332
  %sub26 = sub nsw i32 %sub20, %sub25, !dbg !9333
  %call27 = call i32 @abs(i32 %sub26) #1, !dbg !9334
  %22 = load i32, i32* %s, align 4, !dbg !9335
  %add28 = add nsw i32 %22, %call27, !dbg !9335
  store i32 %add28, i32* %s, align 4, !dbg !9335
  %23 = load i8*, i8** %pix1.addr, align 8, !dbg !9336
  %arrayidx29 = getelementptr inbounds i8, i8* %23, i64 3, !dbg !9336
  %24 = load i8, i8* %arrayidx29, align 1, !dbg !9336
  %conv30 = zext i8 %24 to i32, !dbg !9336
  %25 = load i8*, i8** %pix2.addr, align 8, !dbg !9337
  %arrayidx31 = getelementptr inbounds i8, i8* %25, i64 3, !dbg !9337
  %26 = load i8, i8* %arrayidx31, align 1, !dbg !9337
  %conv32 = zext i8 %26 to i32, !dbg !9337
  %sub33 = sub nsw i32 %conv30, %conv32, !dbg !9338
  %27 = load i8*, i8** %pix1.addr, align 8, !dbg !9339
  %arrayidx34 = getelementptr inbounds i8, i8* %27, i64 2, !dbg !9339
  %28 = load i8, i8* %arrayidx34, align 1, !dbg !9339
  %conv35 = zext i8 %28 to i32, !dbg !9339
  %29 = load i8*, i8** %pix2.addr, align 8, !dbg !9340
  %arrayidx36 = getelementptr inbounds i8, i8* %29, i64 2, !dbg !9340
  %30 = load i8, i8* %arrayidx36, align 1, !dbg !9340
  %conv37 = zext i8 %30 to i32, !dbg !9340
  %sub38 = sub nsw i32 %conv35, %conv37, !dbg !9341
  %sub39 = sub nsw i32 %sub33, %sub38, !dbg !9342
  %call40 = call i32 @abs(i32 %sub39) #1, !dbg !9343
  %31 = load i32, i32* %s, align 4, !dbg !9344
  %add41 = add nsw i32 %31, %call40, !dbg !9344
  store i32 %add41, i32* %s, align 4, !dbg !9344
  %32 = load i8*, i8** %pix1.addr, align 8, !dbg !9345
  %arrayidx42 = getelementptr inbounds i8, i8* %32, i64 4, !dbg !9345
  %33 = load i8, i8* %arrayidx42, align 1, !dbg !9345
  %conv43 = zext i8 %33 to i32, !dbg !9345
  %34 = load i8*, i8** %pix2.addr, align 8, !dbg !9346
  %arrayidx44 = getelementptr inbounds i8, i8* %34, i64 4, !dbg !9346
  %35 = load i8, i8* %arrayidx44, align 1, !dbg !9346
  %conv45 = zext i8 %35 to i32, !dbg !9346
  %sub46 = sub nsw i32 %conv43, %conv45, !dbg !9347
  %36 = load i8*, i8** %pix1.addr, align 8, !dbg !9348
  %arrayidx47 = getelementptr inbounds i8, i8* %36, i64 3, !dbg !9348
  %37 = load i8, i8* %arrayidx47, align 1, !dbg !9348
  %conv48 = zext i8 %37 to i32, !dbg !9348
  %38 = load i8*, i8** %pix2.addr, align 8, !dbg !9349
  %arrayidx49 = getelementptr inbounds i8, i8* %38, i64 3, !dbg !9349
  %39 = load i8, i8* %arrayidx49, align 1, !dbg !9349
  %conv50 = zext i8 %39 to i32, !dbg !9349
  %sub51 = sub nsw i32 %conv48, %conv50, !dbg !9350
  %sub52 = sub nsw i32 %sub46, %sub51, !dbg !9351
  %call53 = call i32 @abs(i32 %sub52) #1, !dbg !9352
  %40 = load i32, i32* %s, align 4, !dbg !9353
  %add54 = add nsw i32 %40, %call53, !dbg !9353
  store i32 %add54, i32* %s, align 4, !dbg !9353
  %41 = load i8*, i8** %pix1.addr, align 8, !dbg !9354
  %arrayidx55 = getelementptr inbounds i8, i8* %41, i64 5, !dbg !9354
  %42 = load i8, i8* %arrayidx55, align 1, !dbg !9354
  %conv56 = zext i8 %42 to i32, !dbg !9354
  %43 = load i8*, i8** %pix2.addr, align 8, !dbg !9355
  %arrayidx57 = getelementptr inbounds i8, i8* %43, i64 5, !dbg !9355
  %44 = load i8, i8* %arrayidx57, align 1, !dbg !9355
  %conv58 = zext i8 %44 to i32, !dbg !9355
  %sub59 = sub nsw i32 %conv56, %conv58, !dbg !9356
  %45 = load i8*, i8** %pix1.addr, align 8, !dbg !9357
  %arrayidx60 = getelementptr inbounds i8, i8* %45, i64 4, !dbg !9357
  %46 = load i8, i8* %arrayidx60, align 1, !dbg !9357
  %conv61 = zext i8 %46 to i32, !dbg !9357
  %47 = load i8*, i8** %pix2.addr, align 8, !dbg !9358
  %arrayidx62 = getelementptr inbounds i8, i8* %47, i64 4, !dbg !9358
  %48 = load i8, i8* %arrayidx62, align 1, !dbg !9358
  %conv63 = zext i8 %48 to i32, !dbg !9358
  %sub64 = sub nsw i32 %conv61, %conv63, !dbg !9359
  %sub65 = sub nsw i32 %sub59, %sub64, !dbg !9360
  %call66 = call i32 @abs(i32 %sub65) #1, !dbg !9361
  %49 = load i32, i32* %s, align 4, !dbg !9362
  %add67 = add nsw i32 %49, %call66, !dbg !9362
  store i32 %add67, i32* %s, align 4, !dbg !9362
  %50 = load i8*, i8** %pix1.addr, align 8, !dbg !9363
  %arrayidx68 = getelementptr inbounds i8, i8* %50, i64 6, !dbg !9363
  %51 = load i8, i8* %arrayidx68, align 1, !dbg !9363
  %conv69 = zext i8 %51 to i32, !dbg !9363
  %52 = load i8*, i8** %pix2.addr, align 8, !dbg !9364
  %arrayidx70 = getelementptr inbounds i8, i8* %52, i64 6, !dbg !9364
  %53 = load i8, i8* %arrayidx70, align 1, !dbg !9364
  %conv71 = zext i8 %53 to i32, !dbg !9364
  %sub72 = sub nsw i32 %conv69, %conv71, !dbg !9365
  %54 = load i8*, i8** %pix1.addr, align 8, !dbg !9366
  %arrayidx73 = getelementptr inbounds i8, i8* %54, i64 5, !dbg !9366
  %55 = load i8, i8* %arrayidx73, align 1, !dbg !9366
  %conv74 = zext i8 %55 to i32, !dbg !9366
  %56 = load i8*, i8** %pix2.addr, align 8, !dbg !9367
  %arrayidx75 = getelementptr inbounds i8, i8* %56, i64 5, !dbg !9367
  %57 = load i8, i8* %arrayidx75, align 1, !dbg !9367
  %conv76 = zext i8 %57 to i32, !dbg !9367
  %sub77 = sub nsw i32 %conv74, %conv76, !dbg !9368
  %sub78 = sub nsw i32 %sub72, %sub77, !dbg !9369
  %call79 = call i32 @abs(i32 %sub78) #1, !dbg !9370
  %58 = load i32, i32* %s, align 4, !dbg !9371
  %add80 = add nsw i32 %58, %call79, !dbg !9371
  store i32 %add80, i32* %s, align 4, !dbg !9371
  %59 = load i8*, i8** %pix1.addr, align 8, !dbg !9372
  %arrayidx81 = getelementptr inbounds i8, i8* %59, i64 7, !dbg !9372
  %60 = load i8, i8* %arrayidx81, align 1, !dbg !9372
  %conv82 = zext i8 %60 to i32, !dbg !9372
  %61 = load i8*, i8** %pix2.addr, align 8, !dbg !9373
  %arrayidx83 = getelementptr inbounds i8, i8* %61, i64 7, !dbg !9373
  %62 = load i8, i8* %arrayidx83, align 1, !dbg !9373
  %conv84 = zext i8 %62 to i32, !dbg !9373
  %sub85 = sub nsw i32 %conv82, %conv84, !dbg !9374
  %63 = load i8*, i8** %pix1.addr, align 8, !dbg !9375
  %arrayidx86 = getelementptr inbounds i8, i8* %63, i64 6, !dbg !9375
  %64 = load i8, i8* %arrayidx86, align 1, !dbg !9375
  %conv87 = zext i8 %64 to i32, !dbg !9375
  %65 = load i8*, i8** %pix2.addr, align 8, !dbg !9376
  %arrayidx88 = getelementptr inbounds i8, i8* %65, i64 6, !dbg !9376
  %66 = load i8, i8* %arrayidx88, align 1, !dbg !9376
  %conv89 = zext i8 %66 to i32, !dbg !9376
  %sub90 = sub nsw i32 %conv87, %conv89, !dbg !9377
  %sub91 = sub nsw i32 %sub85, %sub90, !dbg !9378
  %call92 = call i32 @abs(i32 %sub91) #1, !dbg !9379
  %67 = load i32, i32* %s, align 4, !dbg !9380
  %add93 = add nsw i32 %67, %call92, !dbg !9380
  store i32 %add93, i32* %s, align 4, !dbg !9380
  %68 = load i64, i64* %stride.addr, align 8, !dbg !9381
  %69 = load i8*, i8** %pix1.addr, align 8, !dbg !9382
  %add.ptr = getelementptr inbounds i8, i8* %69, i64 %68, !dbg !9382
  store i8* %add.ptr, i8** %pix1.addr, align 8, !dbg !9382
  %70 = load i64, i64* %stride.addr, align 8, !dbg !9383
  %71 = load i8*, i8** %pix2.addr, align 8, !dbg !9384
  %add.ptr94 = getelementptr inbounds i8, i8* %71, i64 %70, !dbg !9384
  store i8* %add.ptr94, i8** %pix2.addr, align 8, !dbg !9384
  store i32 1, i32* %i, align 4, !dbg !9385
  br label %for.cond, !dbg !9387

for.cond:                                         ; preds = %for.inc176, %entry
  %72 = load i32, i32* %i, align 4, !dbg !9388
  %73 = load i32, i32* %h.addr, align 4, !dbg !9391
  %cmp = icmp slt i32 %72, %73, !dbg !9392
  br i1 %cmp, label %for.body, label %for.end178, !dbg !9393

for.body:                                         ; preds = %for.cond
  %74 = load i8*, i8** %pix1.addr, align 8, !dbg !9394
  %arrayidx96 = getelementptr inbounds i8, i8* %74, i64 0, !dbg !9394
  %75 = load i8, i8* %arrayidx96, align 1, !dbg !9394
  %conv97 = zext i8 %75 to i32, !dbg !9394
  %76 = load i8*, i8** %pix2.addr, align 8, !dbg !9396
  %arrayidx98 = getelementptr inbounds i8, i8* %76, i64 0, !dbg !9396
  %77 = load i8, i8* %arrayidx98, align 1, !dbg !9396
  %conv99 = zext i8 %77 to i32, !dbg !9396
  %sub100 = sub nsw i32 %conv97, %conv99, !dbg !9397
  %78 = load i64, i64* %stride.addr, align 8, !dbg !9398
  %sub101 = sub nsw i64 0, %78, !dbg !9399
  %79 = load i8*, i8** %pix1.addr, align 8, !dbg !9400
  %arrayidx102 = getelementptr inbounds i8, i8* %79, i64 %sub101, !dbg !9400
  %80 = load i8, i8* %arrayidx102, align 1, !dbg !9400
  %conv103 = zext i8 %80 to i32, !dbg !9400
  %81 = load i64, i64* %stride.addr, align 8, !dbg !9401
  %sub104 = sub nsw i64 0, %81, !dbg !9402
  %82 = load i8*, i8** %pix2.addr, align 8, !dbg !9403
  %arrayidx105 = getelementptr inbounds i8, i8* %82, i64 %sub104, !dbg !9403
  %83 = load i8, i8* %arrayidx105, align 1, !dbg !9403
  %conv106 = zext i8 %83 to i32, !dbg !9403
  %sub107 = sub nsw i32 %conv103, %conv106, !dbg !9404
  %sub108 = sub nsw i32 %sub100, %sub107, !dbg !9405
  %call109 = call i32 @abs(i32 %sub108) #1, !dbg !9406
  %84 = load i32, i32* %s, align 4, !dbg !9407
  %add110 = add nsw i32 %84, %call109, !dbg !9407
  store i32 %add110, i32* %s, align 4, !dbg !9407
  store i32 1, i32* %j, align 4, !dbg !9408
  br label %for.cond111, !dbg !9410

for.cond111:                                      ; preds = %for.inc, %for.body
  %85 = load i32, i32* %j, align 4, !dbg !9411
  %cmp112 = icmp slt i32 %85, 8, !dbg !9414
  br i1 %cmp112, label %for.body114, label %for.end, !dbg !9415

for.body114:                                      ; preds = %for.cond111
  %86 = load i32, i32* %j, align 4, !dbg !9416
  %idxprom = sext i32 %86 to i64, !dbg !9417
  %87 = load i8*, i8** %pix1.addr, align 8, !dbg !9417
  %arrayidx115 = getelementptr inbounds i8, i8* %87, i64 %idxprom, !dbg !9417
  %88 = load i8, i8* %arrayidx115, align 1, !dbg !9417
  %conv116 = zext i8 %88 to i32, !dbg !9417
  %89 = load i32, i32* %j, align 4, !dbg !9418
  %idxprom117 = sext i32 %89 to i64, !dbg !9419
  %90 = load i8*, i8** %pix2.addr, align 8, !dbg !9419
  %arrayidx118 = getelementptr inbounds i8, i8* %90, i64 %idxprom117, !dbg !9419
  %91 = load i8, i8* %arrayidx118, align 1, !dbg !9419
  %conv119 = zext i8 %91 to i32, !dbg !9419
  %sub120 = sub nsw i32 %conv116, %conv119, !dbg !9420
  %92 = load i32, i32* %j, align 4, !dbg !9421
  %conv121 = sext i32 %92 to i64, !dbg !9421
  %93 = load i64, i64* %stride.addr, align 8, !dbg !9422
  %sub122 = sub nsw i64 %conv121, %93, !dbg !9423
  %94 = load i8*, i8** %pix1.addr, align 8, !dbg !9424
  %arrayidx123 = getelementptr inbounds i8, i8* %94, i64 %sub122, !dbg !9424
  %95 = load i8, i8* %arrayidx123, align 1, !dbg !9424
  %conv124 = zext i8 %95 to i32, !dbg !9424
  %96 = load i32, i32* %j, align 4, !dbg !9425
  %conv125 = sext i32 %96 to i64, !dbg !9425
  %97 = load i64, i64* %stride.addr, align 8, !dbg !9426
  %sub126 = sub nsw i64 %conv125, %97, !dbg !9427
  %98 = load i8*, i8** %pix2.addr, align 8, !dbg !9428
  %arrayidx127 = getelementptr inbounds i8, i8* %98, i64 %sub126, !dbg !9428
  %99 = load i8, i8* %arrayidx127, align 1, !dbg !9428
  %conv128 = zext i8 %99 to i32, !dbg !9428
  %sub129 = sub nsw i32 %conv124, %conv128, !dbg !9429
  %100 = load i32, i32* %j, align 4, !dbg !9430
  %sub130 = sub nsw i32 %100, 1, !dbg !9431
  %idxprom131 = sext i32 %sub130 to i64, !dbg !9432
  %101 = load i8*, i8** %pix1.addr, align 8, !dbg !9432
  %arrayidx132 = getelementptr inbounds i8, i8* %101, i64 %idxprom131, !dbg !9432
  %102 = load i8, i8* %arrayidx132, align 1, !dbg !9432
  %conv133 = zext i8 %102 to i32, !dbg !9432
  %103 = load i32, i32* %j, align 4, !dbg !9433
  %sub134 = sub nsw i32 %103, 1, !dbg !9434
  %idxprom135 = sext i32 %sub134 to i64, !dbg !9435
  %104 = load i8*, i8** %pix2.addr, align 8, !dbg !9435
  %arrayidx136 = getelementptr inbounds i8, i8* %104, i64 %idxprom135, !dbg !9435
  %105 = load i8, i8* %arrayidx136, align 1, !dbg !9435
  %conv137 = zext i8 %105 to i32, !dbg !9435
  %sub138 = sub nsw i32 %conv133, %conv137, !dbg !9436
  %106 = load i32, i32* %j, align 4, !dbg !9437
  %conv139 = sext i32 %106 to i64, !dbg !9437
  %107 = load i64, i64* %stride.addr, align 8, !dbg !9438
  %sub140 = sub nsw i64 %conv139, %107, !dbg !9439
  %108 = load i8*, i8** %pix1.addr, align 8, !dbg !9440
  %arrayidx141 = getelementptr inbounds i8, i8* %108, i64 %sub140, !dbg !9440
  %109 = load i8, i8* %arrayidx141, align 1, !dbg !9440
  %conv142 = zext i8 %109 to i32, !dbg !9440
  %110 = load i32, i32* %j, align 4, !dbg !9441
  %conv143 = sext i32 %110 to i64, !dbg !9441
  %111 = load i64, i64* %stride.addr, align 8, !dbg !9442
  %sub144 = sub nsw i64 %conv143, %111, !dbg !9443
  %112 = load i8*, i8** %pix2.addr, align 8, !dbg !9444
  %arrayidx145 = getelementptr inbounds i8, i8* %112, i64 %sub144, !dbg !9444
  %113 = load i8, i8* %arrayidx145, align 1, !dbg !9444
  %conv146 = zext i8 %113 to i32, !dbg !9444
  %sub147 = sub nsw i32 %conv142, %conv146, !dbg !9445
  %114 = load i32, i32* %j, align 4, !dbg !9446
  %sub148 = sub nsw i32 %114, 1, !dbg !9447
  %idxprom149 = sext i32 %sub148 to i64, !dbg !9448
  %115 = load i8*, i8** %pix1.addr, align 8, !dbg !9448
  %arrayidx150 = getelementptr inbounds i8, i8* %115, i64 %idxprom149, !dbg !9448
  %116 = load i8, i8* %arrayidx150, align 1, !dbg !9448
  %conv151 = zext i8 %116 to i32, !dbg !9448
  %117 = load i32, i32* %j, align 4, !dbg !9449
  %sub152 = sub nsw i32 %117, 1, !dbg !9450
  %idxprom153 = sext i32 %sub152 to i64, !dbg !9451
  %118 = load i8*, i8** %pix2.addr, align 8, !dbg !9451
  %arrayidx154 = getelementptr inbounds i8, i8* %118, i64 %idxprom153, !dbg !9451
  %119 = load i8, i8* %arrayidx154, align 1, !dbg !9451
  %conv155 = zext i8 %119 to i32, !dbg !9451
  %sub156 = sub nsw i32 %conv151, %conv155, !dbg !9452
  %add157 = add nsw i32 %sub147, %sub156, !dbg !9453
  %120 = load i32, i32* %j, align 4, !dbg !9454
  %conv158 = sext i32 %120 to i64, !dbg !9454
  %121 = load i64, i64* %stride.addr, align 8, !dbg !9455
  %sub159 = sub nsw i64 %conv158, %121, !dbg !9456
  %sub160 = sub nsw i64 %sub159, 1, !dbg !9457
  %122 = load i8*, i8** %pix1.addr, align 8, !dbg !9458
  %arrayidx161 = getelementptr inbounds i8, i8* %122, i64 %sub160, !dbg !9458
  %123 = load i8, i8* %arrayidx161, align 1, !dbg !9458
  %conv162 = zext i8 %123 to i32, !dbg !9458
  %124 = load i32, i32* %j, align 4, !dbg !9459
  %conv163 = sext i32 %124 to i64, !dbg !9459
  %125 = load i64, i64* %stride.addr, align 8, !dbg !9460
  %sub164 = sub nsw i64 %conv163, %125, !dbg !9461
  %sub165 = sub nsw i64 %sub164, 1, !dbg !9462
  %126 = load i8*, i8** %pix2.addr, align 8, !dbg !9463
  %arrayidx166 = getelementptr inbounds i8, i8* %126, i64 %sub165, !dbg !9463
  %127 = load i8, i8* %arrayidx166, align 1, !dbg !9463
  %conv167 = zext i8 %127 to i32, !dbg !9463
  %sub168 = sub nsw i32 %conv162, %conv167, !dbg !9464
  %sub169 = sub nsw i32 %add157, %sub168, !dbg !9465
  %call170 = call i32 @mid_pred(i32 %sub129, i32 %sub138, i32 %sub169) #1, !dbg !9466
  %sub171 = sub nsw i32 %sub120, %call170, !dbg !9467
  %call172 = call i32 @abs(i32 %sub171) #1, !dbg !9468
  %128 = load i32, i32* %s, align 4, !dbg !9469
  %add173 = add nsw i32 %128, %call172, !dbg !9469
  store i32 %add173, i32* %s, align 4, !dbg !9469
  br label %for.inc, !dbg !9470

for.inc:                                          ; preds = %for.body114
  %129 = load i32, i32* %j, align 4, !dbg !9471
  %inc = add nsw i32 %129, 1, !dbg !9471
  store i32 %inc, i32* %j, align 4, !dbg !9471
  br label %for.cond111, !dbg !9473, !llvm.loop !9474

for.end:                                          ; preds = %for.cond111
  %130 = load i64, i64* %stride.addr, align 8, !dbg !9476
  %131 = load i8*, i8** %pix1.addr, align 8, !dbg !9477
  %add.ptr174 = getelementptr inbounds i8, i8* %131, i64 %130, !dbg !9477
  store i8* %add.ptr174, i8** %pix1.addr, align 8, !dbg !9477
  %132 = load i64, i64* %stride.addr, align 8, !dbg !9478
  %133 = load i8*, i8** %pix2.addr, align 8, !dbg !9479
  %add.ptr175 = getelementptr inbounds i8, i8* %133, i64 %132, !dbg !9479
  store i8* %add.ptr175, i8** %pix2.addr, align 8, !dbg !9479
  br label %for.inc176, !dbg !9480

for.inc176:                                       ; preds = %for.end
  %134 = load i32, i32* %i, align 4, !dbg !9481
  %inc177 = add nsw i32 %134, 1, !dbg !9481
  store i32 %inc177, i32* %i, align 4, !dbg !9481
  br label %for.cond, !dbg !9483, !llvm.loop !9484

for.end178:                                       ; preds = %for.cond
  %135 = load i32, i32* %s, align 4, !dbg !9486
  ret i32 %135, !dbg !9487
}

; Function Attrs: nounwind readnone
declare i32 @abs(i32) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

declare void @ff_simple_idct_int16_8bit(i16*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @copy_block8(i8* %dst, i8* %src, i64 %dstStride, i64 %srcStride, i32 %h) #5 !dbg !9488 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %dstStride.addr = alloca i64, align 8
  %srcStride.addr = alloca i64, align 8
  %h.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !9492, metadata !2614), !dbg !9493
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !9494, metadata !2614), !dbg !9495
  store i64 %dstStride, i64* %dstStride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dstStride.addr, metadata !9496, metadata !2614), !dbg !9497
  store i64 %srcStride, i64* %srcStride.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %srcStride.addr, metadata !9498, metadata !2614), !dbg !9499
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !9500, metadata !2614), !dbg !9501
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9502, metadata !2614), !dbg !9503
  store i32 0, i32* %i, align 4, !dbg !9504
  br label %for.cond, !dbg !9506

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9507
  %1 = load i32, i32* %h.addr, align 4, !dbg !9510
  %cmp = icmp slt i32 %0, %1, !dbg !9511
  br i1 %cmp, label %for.body, label %for.end, !dbg !9512

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %src.addr, align 8, !dbg !9513
  %3 = bitcast i8* %2 to %union.unaligned_64*, !dbg !9515
  %l = bitcast %union.unaligned_64* %3 to i64*, !dbg !9515
  %4 = load i64, i64* %l, align 1, !dbg !9515
  %5 = load i8*, i8** %dst.addr, align 8, !dbg !9516
  %6 = bitcast i8* %5 to %union.unaligned_64*, !dbg !9517
  %l1 = bitcast %union.unaligned_64* %6 to i64*, !dbg !9517
  store i64 %4, i64* %l1, align 1, !dbg !9518
  %7 = load i64, i64* %dstStride.addr, align 8, !dbg !9519
  %8 = load i8*, i8** %dst.addr, align 8, !dbg !9520
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %7, !dbg !9520
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !9520
  %9 = load i64, i64* %srcStride.addr, align 8, !dbg !9521
  %10 = load i8*, i8** %src.addr, align 8, !dbg !9522
  %add.ptr2 = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !9522
  store i8* %add.ptr2, i8** %src.addr, align 8, !dbg !9522
  br label %for.inc, !dbg !9523

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !9524
  %inc = add nsw i32 %11, 1, !dbg !9524
  store i32 %inc, i32* %i, align 4, !dbg !9524
  br label %for.cond, !dbg !9526, !llvm.loop !9527

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9529
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @mid_pred(i32 %a, i32 %b, i32 %c) #7 !dbg !9530 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9534, metadata !2614), !dbg !9535
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !9536, metadata !2614), !dbg !9537
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9538, metadata !2614), !dbg !9539
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9540, metadata !2614), !dbg !9541
  %0 = load i32, i32* %b.addr, align 4, !dbg !9542
  store i32 %0, i32* %i, align 4, !dbg !9541
  %1 = load i32, i32* %i, align 4, !dbg !9543
  %2 = load i32, i32* %a.addr, align 4, !dbg !9543
  %3 = load i32, i32* %b.addr, align 4, !dbg !9544
  %4 = load i32, i32* %c.addr, align 4, !dbg !9545
  %5 = call { i32, i32 } asm "cmp    $2, $1 \0A\09cmovg  $1, $0 \0A\09cmovg  $2, $1 \0A\09cmp    $3, $1 \0A\09cmovl  $3, $1 \0A\09cmp    $1, $0 \0A\09cmovg  $1, $0 \0A\09", "=&r,=&r,r,r,0,1,~{dirflag},~{fpsr},~{flags}"(i32 %3, i32 %4, i32 %1, i32 %2) #1, !dbg !9543, !srcloc !9546
  %asmresult = extractvalue { i32, i32 } %5, 0, !dbg !9543
  %asmresult1 = extractvalue { i32, i32 } %5, 1, !dbg !9543
  store i32 %asmresult, i32* %i, align 4, !dbg !9543
  store i32 %asmresult1, i32* %a.addr, align 4, !dbg !9543
  %6 = load i32, i32* %i, align 4, !dbg !9547
  ret i32 %6, !dbg !9548
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!954, !955}
!llvm.ident = !{!956}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !925, globals: !939)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--me_cmp.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !25, !46, !56, !516, !716, !733, !739, !769, !779, !803, !809, !827, !851, !870, !880, !888, !900, !909, !916}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !4, line: 221, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!6 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!7 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!8 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!9 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!10 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!11 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!12 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!13 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!14 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!15 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!16 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!17 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!18 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!19 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!20 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!21 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!22 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!23 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!24 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 29, size: 32, align: 32, elements: !27)
!26 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!27 = !{!28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!28 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!29 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!30 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!31 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!32 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!33 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!34 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!35 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!36 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!37 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!38 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!39 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!40 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!41 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!42 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!43 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!44 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!45 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !47, line: 199, size: 32, align: 32, elements: !48)
!47 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!48 = !{!49, !50, !51, !52, !53, !54, !55}
!49 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!50 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!51 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!52 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!53 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!54 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!55 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !57, line: 215, size: 32, align: 32, elements: !58)
!57 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!58 = !{!59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515}
!59 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!60 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!62 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!63 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!64 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!65 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!66 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!67 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!68 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!69 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!70 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!71 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!72 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!73 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!75 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!76 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!78 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!79 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!80 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!81 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!82 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!83 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!84 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!86 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!87 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!88 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!89 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!90 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!93 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!94 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!98 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!99 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!100 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!101 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!102 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!103 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!104 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!105 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!106 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!107 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!108 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!109 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!110 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!111 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!112 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!113 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!114 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!115 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!116 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!117 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!118 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!119 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!121 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!122 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!123 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!124 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!126 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!127 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!128 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!130 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!131 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!132 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!133 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!134 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!135 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!137 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!139 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!141 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!142 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!143 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!144 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!145 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!146 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!147 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!148 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!149 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!150 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!151 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!152 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!154 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!155 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!156 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!157 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!158 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!159 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!160 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!161 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!162 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!164 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!165 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!166 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!168 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!169 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!170 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!171 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!173 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!174 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!175 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!176 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!177 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!180 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!181 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!182 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!183 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!184 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!185 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!186 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!187 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!189 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!191 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!192 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!193 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!194 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!195 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!196 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!197 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!198 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!199 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!200 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!201 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!202 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!203 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!204 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!205 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!206 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!207 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!208 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!209 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!210 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!211 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!212 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!213 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!216 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!217 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!218 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!219 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!221 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!223 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!224 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!225 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!226 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!227 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!228 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!229 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!230 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!231 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!232 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!233 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!234 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!235 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!237 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!238 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!239 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!240 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!241 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!242 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!243 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!244 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!245 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!246 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!247 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!248 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!249 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!250 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!251 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!252 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!253 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!254 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!255 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!256 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!257 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!258 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!259 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!260 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!261 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!262 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!263 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!264 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!265 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!266 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!267 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!268 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!269 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!270 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!271 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!272 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!273 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!276 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!277 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!278 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!279 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!280 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!281 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!282 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!283 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!284 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!285 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!286 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!287 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!288 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!290 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!291 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!292 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!293 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!295 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!300 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!310 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!311 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!312 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!313 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!314 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!315 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!316 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!317 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!318 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!319 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!320 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!321 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!322 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!323 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!324 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!325 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!326 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!327 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!328 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!329 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!330 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!331 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!351 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!352 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!353 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!354 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!357 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!358 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!359 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!360 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!362 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!363 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!364 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!365 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!366 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!367 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!368 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!370 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!372 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!373 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!374 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!375 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!376 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!378 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!379 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!380 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!382 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!383 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!384 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!385 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!386 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!388 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!389 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!390 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!391 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!392 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!393 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!394 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!395 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!396 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!397 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!398 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!400 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!401 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!402 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!403 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!406 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!407 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!408 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!409 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!410 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!411 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!412 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!413 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!414 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!416 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!417 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!418 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!419 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!420 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!421 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!423 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!424 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!425 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!426 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!427 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!428 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!429 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!430 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!431 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!432 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!433 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!434 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!435 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!436 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!437 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!438 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!439 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!440 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!441 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!442 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!443 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!444 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!446 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!447 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!448 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!449 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!450 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!452 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!453 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!454 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!455 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!456 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!457 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!458 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!462 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!463 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!464 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!465 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!466 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!467 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!468 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!469 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!470 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!471 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!472 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!473 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!474 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!475 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!477 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!478 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!479 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!480 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!481 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!482 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!483 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!484 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!485 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!486 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!487 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!488 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!489 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!490 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!491 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!492 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!493 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!494 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!495 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!496 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!497 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!498 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!499 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!500 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!501 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!502 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!503 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!504 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!505 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!506 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!507 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!508 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!509 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!510 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!511 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!512 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!513 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!514 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!515 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!516 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !517, line: 64, size: 32, align: 32, elements: !518)
!517 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!518 = !{!519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715}
!519 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!520 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!521 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!522 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!523 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!524 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!529 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!530 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!531 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!532 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!533 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!534 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!535 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!536 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!537 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!540 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!541 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!542 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!543 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!544 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!545 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!546 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!547 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!548 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!549 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!550 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!553 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!555 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!556 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!557 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!558 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!559 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!562 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!563 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!564 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!565 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!566 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!567 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!574 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!575 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!576 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!577 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!578 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!580 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!582 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!583 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!597 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!598 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!599 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!600 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!601 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!602 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!603 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!604 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!617 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!618 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!619 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!620 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!622 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!623 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!624 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!625 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!626 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!627 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!628 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!629 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!630 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!631 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!637 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!640 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!641 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!642 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!643 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!644 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!645 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!646 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!650 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!651 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!652 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!653 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!662 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!663 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!664 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!665 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!666 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!667 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!668 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!669 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!670 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!671 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!672 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!673 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!674 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!675 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!676 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!677 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!678 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!679 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!680 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!681 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!682 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!683 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!684 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!685 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!686 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!689 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!690 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!691 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!692 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!693 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!694 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!695 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!696 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!697 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!698 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!701 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!702 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!703 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!704 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!705 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!706 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!707 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!708 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!709 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!710 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!711 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!712 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!713 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!714 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!715 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !717, line: 58, size: 32, align: 32, elements: !718)
!717 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!719 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!720 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!721 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!722 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!723 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!724 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!725 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!726 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!727 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!728 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!729 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!730 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!731 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!732 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !57, line: 3865, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738}
!735 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!736 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!737 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!738 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!739 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !57, line: 1175, size: 32, align: 32, elements: !740)
!740 = !{!741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!741 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!742 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!743 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!744 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!745 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!746 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!747 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!748 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!749 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!750 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!751 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!752 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!753 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!754 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!755 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!756 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!757 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!758 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!759 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!760 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!761 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!762 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!763 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!764 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!765 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!766 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!767 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!768 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !47, line: 272, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778}
!771 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!772 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!773 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!774 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!775 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!776 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!777 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!778 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!779 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !780, line: 48, size: 32, align: 32, elements: !781)
!780 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!781 = !{!782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802}
!782 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!783 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!784 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!785 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!786 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!787 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!788 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!789 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!790 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!791 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!792 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!793 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!794 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!795 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!796 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!797 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!798 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!799 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!800 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!801 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!802 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!803 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !517, line: 516, size: 32, align: 32, elements: !804)
!804 = !{!805, !806, !807, !808}
!805 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!806 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!807 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!808 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!809 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !517, line: 440, size: 32, align: 32, elements: !810)
!810 = !{!811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826}
!811 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!812 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!813 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!814 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!815 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!816 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!817 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!818 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!819 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!820 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!821 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!822 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!823 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!824 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!825 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!826 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!827 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !517, line: 464, size: 32, align: 32, elements: !828)
!828 = !{!829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!829 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!830 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!831 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!832 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!833 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!834 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!835 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!836 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!837 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!838 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!839 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!840 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!841 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!842 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!843 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!844 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!845 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!846 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!847 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!848 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!849 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!850 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!851 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !517, line: 493, size: 32, align: 32, elements: !852)
!852 = !{!853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869}
!853 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!854 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!855 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!856 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!857 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!858 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!859 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!860 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!861 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!862 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!863 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!864 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!865 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!866 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!867 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!868 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!869 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !517, line: 538, size: 32, align: 32, elements: !871)
!871 = !{!872, !873, !874, !875, !876, !877, !878, !879}
!872 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!873 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!874 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!875 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!876 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!877 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!878 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!879 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!880 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !57, line: 1534, size: 32, align: 32, elements: !881)
!881 = !{!882, !883, !884, !885, !886, !887}
!882 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!883 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!884 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!885 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!886 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!887 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!888 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !57, line: 810, size: 32, align: 32, elements: !889)
!889 = !{!890, !891, !892, !893, !894, !895, !896, !897, !898, !899}
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!894 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!895 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!896 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!897 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!898 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!899 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!900 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !57, line: 798, size: 32, align: 32, elements: !901)
!901 = !{!902, !903, !904, !905, !906, !907, !908}
!902 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!903 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!904 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!905 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!906 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!907 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!908 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OutputFormat", file: !910, line: 123, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "libavcodec/mpegutils.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!911 = !{!912, !913, !914, !915}
!912 = !DIEnumerator(name: "FMT_MPEG1", value: 0)
!913 = !DIEnumerator(name: "FMT_H261", value: 1)
!914 = !DIEnumerator(name: "FMT_H263", value: 2)
!915 = !DIEnumerator(name: "FMT_MJPEG", value: 3)
!916 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "idct_permutation_type", file: !917, line: 37, size: 32, align: 32, elements: !918)
!917 = !DIFile(filename: "libavcodec/idctdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!918 = !{!919, !920, !921, !922, !923, !924}
!919 = !DIEnumerator(name: "FF_IDCT_PERM_NONE", value: 0)
!920 = !DIEnumerator(name: "FF_IDCT_PERM_LIBMPEG2", value: 1)
!921 = !DIEnumerator(name: "FF_IDCT_PERM_SIMPLE", value: 2)
!922 = !DIEnumerator(name: "FF_IDCT_PERM_TRANSPOSE", value: 3)
!923 = !DIEnumerator(name: "FF_IDCT_PERM_PARTTRANS", value: 4)
!924 = !DIEnumerator(name: "FF_IDCT_PERM_SSE2", value: 5)
!925 = !{!926, !927, !930, !938}
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !928, line: 119, baseType: !929)
!928 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!929 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64, align: 64)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!932 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_64", file: !933, line: 220, size: 64, align: 8, elements: !934)
!933 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!934 = !{!935}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !932, file: !933, line: 220, baseType: !936, size: 64, align: 64)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !928, line: 55, baseType: !937)
!937 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64, align: 64)
!939 = !{!940, !948}
!940 = distinct !DIGlobalVariable(name: "ff_square_tab", scope: !0, file: !941, line: 33, type: !942, isLocal: false, isDefinition: true, variable: [512 x i32]* @ff_square_tab)
!941 = !DIFile(filename: "libavcodec/me_cmp.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 16384, align: 32, elements: !946)
!943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !944)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !928, line: 51, baseType: !945)
!945 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!946 = !{!947}
!947 = !DISubrange(count: 512)
!948 = distinct !DIGlobalVariable(name: "did_fail", scope: !949, file: !941, line: 1016, type: !952, isLocal: true, isDefinition: true, variable: i32* @ff_check_alignment.did_fail)
!949 = distinct !DISubprogram(name: "ff_check_alignment", scope: !941, file: !941, line: 1014, type: !950, isLocal: false, isDefinition: true, scopeLine: 1015, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!950 = !DISubroutineType(types: !951)
!951 = !{!952}
!952 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!953 = !{}
!954 = !{i32 2, !"Dwarf Version", i32 4}
!955 = !{i32 2, !"Debug Info Version", i32 3}
!956 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!957 = distinct !DISubprogram(name: "ff_set_cmp", scope: !941, file: !941, line: 474, type: !958, isLocal: false, isDefinition: true, scopeLine: 475, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!958 = !DISubroutineType(types: !959)
!959 = !{null, !960, !2612, !952}
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64, align: 64)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "MECmpContext", file: !962, line: 80, baseType: !963)
!962 = !DIFile(filename: "libavcodec/me_cmp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MECmpContext", file: !962, line: 53, size: 8640, align: 64, elements: !964)
!964 = !{!965, !972, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2611}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "sum_abs_dctelem", scope: !963, file: !962, line: 54, baseType: !966, size: 64, align: 64)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64, align: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!952, !969}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64, align: 64)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !928, line: 37, baseType: !971)
!971 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "sad", scope: !963, file: !962, line: 56, baseType: !973, size: 384, align: 64, offset: 64)
!973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 384, align: 64, elements: !2207)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "me_cmp_func", file: !962, line: 48, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64, align: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!952, !978, !1167, !1167, !1792, !952}
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !980, line: 81, size: 86208, align: 64, elements: !981)
!980 = !DIFile(filename: "libavcodec/mpegvideo.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!981 = !{!982, !1064, !1065, !1066, !1067, !1071, !1072, !1086, !1087, !1088, !1089, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1793, !1794, !1847, !1849, !1850, !1851, !1852, !1853, !1864, !1865, !1866, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1882, !1883, !1885, !1886, !1887, !1888, !1889, !1890, !1895, !1897, !1898, !1899, !1900, !1901, !1902, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1929, !1930, !1931, !1932, !1948, !1955, !1967, !1983, !2005, !2006, !2019, !2046, !2061, !2075, !2088, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2109, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2122, !2124, !2125, !2126, !2127, !2128, !2129, !2132, !2134, !2136, !2137, !2140, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2209, !2210, !2212, !2213, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2235, !2236, !2237, !2240, !2241, !2242, !2243, !2245, !2247, !2248, !2249, !2250, !2251, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2333, !2334, !2335, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2464, !2465, !2466, !2467, !2471, !2472, !2476, !2480, !2484, !2485, !2490, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2505, !2506, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2524, !2525, !2526, !2576, !2577, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !979, file: !980, line: 82, baseType: !983, size: 64, align: 64)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64, align: 64)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !26, line: 143, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !26, line: 67, size: 640, align: 64, elements: !986)
!986 = !{!987, !991, !995, !1023, !1024, !1025, !1026, !1030, !1036, !1038, !1042}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !985, file: !26, line: 72, baseType: !988, size: 64, align: 64)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!990 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !985, file: !26, line: 78, baseType: !992, size: 64, align: 64, offset: 64)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64, align: 64)
!993 = !DISubroutineType(types: !994)
!994 = !{!988, !926}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !985, file: !26, line: 85, baseType: !996, size: 64, align: 64, offset: 128)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64, align: 64)
!997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !998)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 246, size: 512, align: 64, elements: !999)
!999 = !{!1000, !1001, !1002, !1003, !1004, !1019, !1020, !1021, !1022}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !998, file: !4, line: 247, baseType: !988, size: 64, align: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !998, file: !4, line: 253, baseType: !988, size: 64, align: 64, offset: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !998, file: !4, line: 259, baseType: !952, size: 32, align: 32, offset: 128)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !998, file: !4, line: 260, baseType: !3, size: 32, align: 32, offset: 160)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !998, file: !4, line: 271, baseType: !1005, size: 64, align: 64, offset: 192)
!1005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !998, file: !4, line: 265, size: 64, align: 64, elements: !1006)
!1006 = !{!1007, !1009, !1011, !1012}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1005, file: !4, line: 266, baseType: !1008, size: 64, align: 64)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !928, line: 40, baseType: !929)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1005, file: !4, line: 267, baseType: !1010, size: 64, align: 64)
!1010 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1005, file: !4, line: 268, baseType: !988, size: 64, align: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1005, file: !4, line: 270, baseType: !1013, size: 64, align: 32)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1014, line: 61, baseType: !1015)
!1014 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1014, line: 58, size: 64, align: 32, elements: !1016)
!1016 = !{!1017, !1018}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1015, file: !1014, line: 59, baseType: !952, size: 32, align: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1015, file: !1014, line: 60, baseType: !952, size: 32, align: 32, offset: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !998, file: !4, line: 272, baseType: !1010, size: 64, align: 64, offset: 256)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !998, file: !4, line: 273, baseType: !1010, size: 64, align: 64, offset: 320)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !998, file: !4, line: 275, baseType: !952, size: 32, align: 32, offset: 384)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !998, file: !4, line: 300, baseType: !988, size: 64, align: 64, offset: 448)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !985, file: !26, line: 93, baseType: !952, size: 32, align: 32, offset: 192)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !985, file: !26, line: 99, baseType: !952, size: 32, align: 32, offset: 224)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !985, file: !26, line: 108, baseType: !952, size: 32, align: 32, offset: 256)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !985, file: !26, line: 113, baseType: !1027, size: 64, align: 64, offset: 320)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64, align: 64)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!926, !926, !926}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !985, file: !26, line: 123, baseType: !1031, size: 64, align: 64, offset: 384)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!1034, !1034}
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !985, file: !26, line: 130, baseType: !1037, size: 32, align: 32, offset: 448)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !26, line: 48, baseType: !25)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !985, file: !26, line: 136, baseType: !1039, size: 64, align: 64, offset: 512)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64, align: 64)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!1037, !926}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !985, file: !26, line: 142, baseType: !1043, size: 64, align: 64, offset: 576)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64, align: 64)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!952, !1046, !926, !988, !952}
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64, align: 64)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64, align: 64)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 329, size: 128, align: 64, elements: !1049)
!1049 = !{!1050, !1062, !1063}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1048, file: !4, line: 360, baseType: !1051, size: 64, align: 64)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64, align: 64)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64, align: 64)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !4, line: 324, baseType: !1054)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !4, line: 306, size: 384, align: 64, elements: !1055)
!1055 = !{!1056, !1057, !1058, !1059, !1060, !1061}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1054, file: !4, line: 307, baseType: !988, size: 64, align: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1054, file: !4, line: 313, baseType: !1010, size: 64, align: 64, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1054, file: !4, line: 313, baseType: !1010, size: 64, align: 64, offset: 128)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1054, file: !4, line: 318, baseType: !1010, size: 64, align: 64, offset: 192)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1054, file: !4, line: 318, baseType: !1010, size: 64, align: 64, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1054, file: !4, line: 323, baseType: !952, size: 32, align: 32, offset: 320)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1048, file: !4, line: 364, baseType: !952, size: 32, align: 32, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1048, file: !4, line: 368, baseType: !952, size: 32, align: 32, offset: 96)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "y_dc_scale", scope: !979, file: !980, line: 84, baseType: !952, size: 32, align: 32, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "c_dc_scale", scope: !979, file: !980, line: 84, baseType: !952, size: 32, align: 32, offset: 96)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ac_pred", scope: !979, file: !980, line: 85, baseType: !952, size: 32, align: 32, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "block_last_index", scope: !979, file: !980, line: 86, baseType: !1068, size: 384, align: 32, offset: 160)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 384, align: 32, elements: !1069)
!1069 = !{!1070}
!1070 = !DISubrange(count: 12)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "h263_aic", scope: !979, file: !980, line: 87, baseType: !952, size: 32, align: 32, offset: 544)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "inter_scantable", scope: !979, file: !980, line: 90, baseType: !1073, size: 1088, align: 64, offset: 576)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScanTable", file: !917, line: 35, baseType: !1074)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScanTable", file: !917, line: 31, size: 1088, align: 64, elements: !1075)
!1075 = !{!1076, !1081, !1085}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "scantable", scope: !1074, file: !917, line: 32, baseType: !1077, size: 64, align: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64, align: 64)
!1078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1079)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !928, line: 48, baseType: !1080)
!1080 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "permutated", scope: !1074, file: !917, line: 33, baseType: !1082, size: 512, align: 8, offset: 64)
!1082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1079, size: 512, align: 8, elements: !1083)
!1083 = !{!1084}
!1084 = !DISubrange(count: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "raster_end", scope: !1074, file: !917, line: 34, baseType: !1082, size: 512, align: 8, offset: 576)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "intra_scantable", scope: !979, file: !980, line: 91, baseType: !1073, size: 1088, align: 64, offset: 1664)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "intra_h_scantable", scope: !979, file: !980, line: 92, baseType: !1073, size: 1088, align: 64, offset: 2752)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "intra_v_scantable", scope: !979, file: !980, line: 93, baseType: !1073, size: 1088, align: 64, offset: 3840)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !979, file: !980, line: 98, baseType: !1090, size: 64, align: 64, offset: 4928)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64, align: 64)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !57, line: 1556, size: 8448, align: 64, elements: !1092)
!1092 = !{!1093, !1096, !1097, !1098, !1361, !1362, !1363, !1364, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1516, !1520, !1521, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1698, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1091, file: !57, line: 1561, baseType: !1094, size: 64, align: 64)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64, align: 64)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1091, file: !57, line: 1562, baseType: !952, size: 32, align: 32, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1091, file: !57, line: 1564, baseType: !46, size: 32, align: 32, offset: 96)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1091, file: !57, line: 1565, baseType: !1099, size: 64, align: 64, offset: 128)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !57, line: 3468, size: 1984, align: 64, elements: !1102)
!1102 = !{!1103, !1104, !1105, !1106, !1107, !1108, !1111, !1114, !1117, !1120, !1123, !1124, !1125, !1133, !1134, !1135, !1137, !1143, !1149, !1158, !1162, !1163, !1211, !1332, !1336, !1337, !1341, !1345, !1350, !1354, !1355, !1356}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1101, file: !57, line: 3475, baseType: !988, size: 64, align: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1101, file: !57, line: 3480, baseType: !988, size: 64, align: 64, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1101, file: !57, line: 3481, baseType: !46, size: 32, align: 32, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1101, file: !57, line: 3482, baseType: !56, size: 32, align: 32, offset: 160)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1101, file: !57, line: 3487, baseType: !952, size: 32, align: 32, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1101, file: !57, line: 3488, baseType: !1109, size: 64, align: 64, offset: 256)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64, align: 64)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1101, file: !57, line: 3489, baseType: !1112, size: 64, align: 64, offset: 320)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!1113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1101, file: !57, line: 3490, baseType: !1115, size: 64, align: 64, offset: 384)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1101, file: !57, line: 3491, baseType: !1118, size: 64, align: 64, offset: 448)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64, align: 64)
!1119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1101, file: !57, line: 3492, baseType: !1121, size: 64, align: 64, offset: 512)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64, align: 64)
!1122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !936)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1101, file: !57, line: 3493, baseType: !1079, size: 8, align: 8, offset: 576)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1101, file: !57, line: 3494, baseType: !1094, size: 64, align: 64, offset: 640)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1101, file: !57, line: 3495, baseType: !1126, size: 64, align: 64, offset: 704)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64, align: 64)
!1127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1128)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !57, line: 3404, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !57, line: 3401, size: 128, align: 64, elements: !1130)
!1130 = !{!1131, !1132}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1129, file: !57, line: 3402, baseType: !952, size: 32, align: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1129, file: !57, line: 3403, baseType: !988, size: 64, align: 64, offset: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1101, file: !57, line: 3507, baseType: !988, size: 64, align: 64, offset: 768)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1101, file: !57, line: 3516, baseType: !952, size: 32, align: 32, offset: 832)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1101, file: !57, line: 3517, baseType: !1136, size: 64, align: 64, offset: 896)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64, align: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1101, file: !57, line: 3527, baseType: !1138, size: 64, align: 64, offset: 960)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64, align: 64)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!952, !1141}
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !57, line: 3360, baseType: !1091)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1101, file: !57, line: 3535, baseType: !1144, size: 64, align: 64, offset: 1024)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64, align: 64)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{!952, !1141, !1147}
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64, align: 64)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1142)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1101, file: !57, line: 3541, baseType: !1150, size: 64, align: 64, offset: 1088)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !57, line: 3461, baseType: !1153)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1154, line: 223, size: 128, align: 64, elements: !1155)
!1154 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1155 = !{!1156, !1157}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1153, file: !1154, line: 224, baseType: !1077, size: 64, align: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1153, file: !1154, line: 225, baseType: !1077, size: 64, align: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1101, file: !57, line: 3549, baseType: !1159, size: 64, align: 64, offset: 1152)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64, align: 64)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{null, !1136}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1101, file: !57, line: 3551, baseType: !1138, size: 64, align: 64, offset: 1216)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1101, file: !57, line: 3552, baseType: !1164, size: 64, align: 64, offset: 1280)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64, align: 64)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!952, !1141, !1167, !952, !1168}
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64, align: 64)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64, align: 64)
!1169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1170)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !57, line: 3920, size: 256, align: 64, elements: !1171)
!1171 = !{!1172, !1175, !1176, !1177, !1178, !1210}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1170, file: !57, line: 3921, baseType: !1173, size: 16, align: 16)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !928, line: 49, baseType: !1174)
!1174 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1170, file: !57, line: 3922, baseType: !944, size: 32, align: 32, offset: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1170, file: !57, line: 3923, baseType: !944, size: 32, align: 32, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1170, file: !57, line: 3924, baseType: !945, size: 32, align: 32, offset: 96)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1170, file: !57, line: 3925, baseType: !1179, size: 64, align: 64, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64, align: 64)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !57, line: 3918, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !57, line: 3885, size: 1600, align: 64, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187, !1188, !1189, !1199, !1203, !1205, !1206, !1208, !1209}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1182, file: !57, line: 3886, baseType: !952, size: 32, align: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1182, file: !57, line: 3887, baseType: !952, size: 32, align: 32, offset: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1182, file: !57, line: 3888, baseType: !952, size: 32, align: 32, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1182, file: !57, line: 3889, baseType: !952, size: 32, align: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1182, file: !57, line: 3890, baseType: !952, size: 32, align: 32, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1182, file: !57, line: 3897, baseType: !1190, size: 768, align: 64, offset: 192)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !57, line: 3858, baseType: !1191)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !57, line: 3853, size: 768, align: 64, elements: !1192)
!1192 = !{!1193, !1197}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1191, file: !57, line: 3855, baseType: !1194, size: 512, align: 64)
!1194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1167, size: 512, align: 64, elements: !1195)
!1195 = !{!1196}
!1196 = !DISubrange(count: 8)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1191, file: !57, line: 3857, baseType: !1198, size: 256, align: 32, offset: 512)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 256, align: 32, elements: !1195)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1182, file: !57, line: 3903, baseType: !1200, size: 256, align: 64, offset: 960)
!1200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1167, size: 256, align: 64, elements: !1201)
!1201 = !{!1202}
!1202 = !DISubrange(count: 4)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1182, file: !57, line: 3904, baseType: !1204, size: 128, align: 32, offset: 1216)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 128, align: 32, elements: !1201)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1182, file: !57, line: 3906, baseType: !733, size: 32, align: 32, offset: 1344)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1182, file: !57, line: 3908, baseType: !1207, size: 64, align: 64, offset: 1408)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64, align: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1182, file: !57, line: 3915, baseType: !1207, size: 64, align: 64, offset: 1472)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1182, file: !57, line: 3917, baseType: !952, size: 32, align: 32, offset: 1536)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1170, file: !57, line: 3926, baseType: !1008, size: 64, align: 64, offset: 192)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1101, file: !57, line: 3564, baseType: !1212, size: 64, align: 64, offset: 1344)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64, align: 64)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{!952, !1141, !1215, !1249, !1331}
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !57, line: 1499, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !57, line: 1445, size: 704, align: 64, elements: !1218)
!1218 = !{!1219, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1245, !1246, !1247, !1248}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1217, file: !57, line: 1451, baseType: !1220, size: 64, align: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64, align: 64)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1222, line: 94, baseType: !1223)
!1222 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1222, line: 81, size: 192, align: 64, elements: !1224)
!1224 = !{!1225, !1229, !1230}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1223, file: !1222, line: 82, baseType: !1226, size: 64, align: 64)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64, align: 64)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1222, line: 73, baseType: !1228)
!1228 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1222, line: 73, flags: DIFlagFwdDecl)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1223, file: !1222, line: 89, baseType: !1167, size: 64, align: 64, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1223, file: !1222, line: 93, baseType: !952, size: 32, align: 32, offset: 128)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1217, file: !57, line: 1461, baseType: !1008, size: 64, align: 64, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1217, file: !57, line: 1467, baseType: !1008, size: 64, align: 64, offset: 128)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1217, file: !57, line: 1468, baseType: !1167, size: 64, align: 64, offset: 192)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1217, file: !57, line: 1469, baseType: !952, size: 32, align: 32, offset: 256)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1217, file: !57, line: 1470, baseType: !952, size: 32, align: 32, offset: 288)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1217, file: !57, line: 1474, baseType: !952, size: 32, align: 32, offset: 320)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1217, file: !57, line: 1479, baseType: !1238, size: 64, align: 64, offset: 384)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64, align: 64)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !57, line: 1415, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !57, line: 1411, size: 128, align: 64, elements: !1241)
!1241 = !{!1242, !1243, !1244}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1240, file: !57, line: 1412, baseType: !1167, size: 64, align: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1240, file: !57, line: 1413, baseType: !952, size: 32, align: 32, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1240, file: !57, line: 1414, baseType: !739, size: 32, align: 32, offset: 96)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1217, file: !57, line: 1480, baseType: !952, size: 32, align: 32, offset: 448)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1217, file: !57, line: 1486, baseType: !1008, size: 64, align: 64, offset: 512)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1217, file: !57, line: 1488, baseType: !1008, size: 64, align: 64, offset: 576)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1217, file: !57, line: 1497, baseType: !1008, size: 64, align: 64, offset: 640)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64, align: 64)
!1250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1251)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !780, line: 646, baseType: !1252)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !780, line: 268, size: 4288, align: 64, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1283, !1285, !1286, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1319, !1320, !1321, !1322, !1323, !1324, !1327, !1328, !1329, !1330}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1252, file: !780, line: 282, baseType: !1194, size: 512, align: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1252, file: !780, line: 299, baseType: !1198, size: 256, align: 32, offset: 512)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1252, file: !780, line: 315, baseType: !1257, size: 64, align: 64, offset: 768)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64, align: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1252, file: !780, line: 326, baseType: !952, size: 32, align: 32, offset: 832)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1252, file: !780, line: 326, baseType: !952, size: 32, align: 32, offset: 864)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1252, file: !780, line: 334, baseType: !952, size: 32, align: 32, offset: 896)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1252, file: !780, line: 341, baseType: !952, size: 32, align: 32, offset: 928)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1252, file: !780, line: 346, baseType: !952, size: 32, align: 32, offset: 960)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1252, file: !780, line: 351, baseType: !769, size: 32, align: 32, offset: 992)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1252, file: !780, line: 356, baseType: !1013, size: 64, align: 32, offset: 1024)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1252, file: !780, line: 361, baseType: !1008, size: 64, align: 64, offset: 1088)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1252, file: !780, line: 369, baseType: !1008, size: 64, align: 64, offset: 1152)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1252, file: !780, line: 377, baseType: !1008, size: 64, align: 64, offset: 1216)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1252, file: !780, line: 382, baseType: !952, size: 32, align: 32, offset: 1280)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1252, file: !780, line: 386, baseType: !952, size: 32, align: 32, offset: 1312)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1252, file: !780, line: 391, baseType: !952, size: 32, align: 32, offset: 1344)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1252, file: !780, line: 396, baseType: !926, size: 64, align: 64, offset: 1408)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1252, file: !780, line: 403, baseType: !1273, size: 512, align: 64, offset: 1472)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 512, align: 64, elements: !1195)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1252, file: !780, line: 410, baseType: !952, size: 32, align: 32, offset: 1984)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1252, file: !780, line: 415, baseType: !952, size: 32, align: 32, offset: 2016)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1252, file: !780, line: 420, baseType: !952, size: 32, align: 32, offset: 2048)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1252, file: !780, line: 425, baseType: !952, size: 32, align: 32, offset: 2080)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1252, file: !780, line: 435, baseType: !1008, size: 64, align: 64, offset: 2112)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1252, file: !780, line: 440, baseType: !952, size: 32, align: 32, offset: 2176)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1252, file: !780, line: 445, baseType: !936, size: 64, align: 64, offset: 2240)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1252, file: !780, line: 459, baseType: !1282, size: 512, align: 64, offset: 2304)
!1282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1220, size: 512, align: 64, elements: !1195)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1252, file: !780, line: 473, baseType: !1284, size: 64, align: 64, offset: 2816)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64, align: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1252, file: !780, line: 477, baseType: !952, size: 32, align: 32, offset: 2880)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1252, file: !780, line: 479, baseType: !1287, size: 64, align: 64, offset: 2944)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64, align: 64)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64, align: 64)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !780, line: 207, baseType: !1290)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !780, line: 201, size: 320, align: 64, elements: !1291)
!1291 = !{!1292, !1293, !1294, !1295, !1300}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1290, file: !780, line: 202, baseType: !779, size: 32, align: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1290, file: !780, line: 203, baseType: !1167, size: 64, align: 64, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1290, file: !780, line: 204, baseType: !952, size: 32, align: 32, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1290, file: !780, line: 205, baseType: !1296, size: 64, align: 64, offset: 192)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64, align: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1298, line: 86, baseType: !1299)
!1298 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1299 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1298, line: 86, flags: DIFlagFwdDecl)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1290, file: !780, line: 206, baseType: !1220, size: 64, align: 64, offset: 256)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1252, file: !780, line: 480, baseType: !952, size: 32, align: 32, offset: 3008)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1252, file: !780, line: 505, baseType: !952, size: 32, align: 32, offset: 3040)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1252, file: !780, line: 512, baseType: !803, size: 32, align: 32, offset: 3072)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1252, file: !780, line: 514, baseType: !809, size: 32, align: 32, offset: 3104)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1252, file: !780, line: 516, baseType: !827, size: 32, align: 32, offset: 3136)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1252, file: !780, line: 523, baseType: !851, size: 32, align: 32, offset: 3168)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1252, file: !780, line: 525, baseType: !870, size: 32, align: 32, offset: 3200)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1252, file: !780, line: 532, baseType: !1008, size: 64, align: 64, offset: 3264)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1252, file: !780, line: 539, baseType: !1008, size: 64, align: 64, offset: 3328)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1252, file: !780, line: 547, baseType: !1008, size: 64, align: 64, offset: 3392)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1252, file: !780, line: 554, baseType: !1296, size: 64, align: 64, offset: 3456)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1252, file: !780, line: 563, baseType: !952, size: 32, align: 32, offset: 3520)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1252, file: !780, line: 572, baseType: !952, size: 32, align: 32, offset: 3552)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1252, file: !780, line: 581, baseType: !952, size: 32, align: 32, offset: 3584)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1252, file: !780, line: 588, baseType: !1316, size: 64, align: 64, offset: 3648)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64, align: 64)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !928, line: 36, baseType: !1318)
!1318 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1252, file: !780, line: 593, baseType: !952, size: 32, align: 32, offset: 3712)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1252, file: !780, line: 596, baseType: !952, size: 32, align: 32, offset: 3744)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1252, file: !780, line: 599, baseType: !1220, size: 64, align: 64, offset: 3776)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1252, file: !780, line: 605, baseType: !1220, size: 64, align: 64, offset: 3840)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1252, file: !780, line: 616, baseType: !1220, size: 64, align: 64, offset: 3904)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1252, file: !780, line: 626, baseType: !1325, size: 64, align: 64, offset: 3968)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1326, line: 216, baseType: !937)
!1326 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1252, file: !780, line: 627, baseType: !1325, size: 64, align: 64, offset: 4032)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1252, file: !780, line: 628, baseType: !1325, size: 64, align: 64, offset: 4096)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1252, file: !780, line: 629, baseType: !1325, size: 64, align: 64, offset: 4160)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1252, file: !780, line: 645, baseType: !1220, size: 64, align: 64, offset: 4224)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64, align: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1101, file: !57, line: 3566, baseType: !1333, size: 64, align: 64, offset: 1408)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64, align: 64)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!952, !1141, !926, !1331, !1215}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1101, file: !57, line: 3567, baseType: !1138, size: 64, align: 64, offset: 1472)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1101, file: !57, line: 3576, baseType: !1338, size: 64, align: 64, offset: 1536)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64, align: 64)
!1339 = !DISubroutineType(types: !1340)
!1340 = !{!952, !1141, !1249}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1101, file: !57, line: 3577, baseType: !1342, size: 64, align: 64, offset: 1600)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64, align: 64)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!952, !1141, !1215}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1101, file: !57, line: 3584, baseType: !1346, size: 64, align: 64, offset: 1664)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64, align: 64)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!952, !1141, !1349}
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64, align: 64)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1101, file: !57, line: 3589, baseType: !1351, size: 64, align: 64, offset: 1728)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64, align: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{null, !1141}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1101, file: !57, line: 3594, baseType: !952, size: 32, align: 32, offset: 1792)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1101, file: !57, line: 3600, baseType: !988, size: 64, align: 64, offset: 1856)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1101, file: !57, line: 3609, baseType: !1357, size: 64, align: 64, offset: 1920)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64, align: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64, align: 64)
!1359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1360)
!1360 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !57, line: 3609, flags: DIFlagFwdDecl)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1091, file: !57, line: 1566, baseType: !56, size: 32, align: 32, offset: 192)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1091, file: !57, line: 1581, baseType: !945, size: 32, align: 32, offset: 224)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1091, file: !57, line: 1583, baseType: !926, size: 64, align: 64, offset: 256)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1091, file: !57, line: 1591, baseType: !1365, size: 64, align: 64, offset: 320)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64, align: 64)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1154, line: 129, size: 1664, align: 64, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1372, !1390, !1391, !1397, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1366, file: !1154, line: 136, baseType: !952, size: 32, align: 32)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1366, file: !1154, line: 151, baseType: !952, size: 32, align: 32, offset: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1366, file: !1154, line: 157, baseType: !952, size: 32, align: 32, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1366, file: !1154, line: 159, baseType: !1349, size: 64, align: 64, offset: 128)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1366, file: !1154, line: 161, baseType: !1373, size: 64, align: 64, offset: 192)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1154, line: 117, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1154, line: 100, size: 832, align: 64, elements: !1376)
!1376 = !{!1377, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1375, file: !1154, line: 105, baseType: !1378, size: 256, align: 64)
!1378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1379, size: 256, align: 64, elements: !1201)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64, align: 64)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1222, line: 238, baseType: !1381)
!1381 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1222, line: 238, flags: DIFlagFwdDecl)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1375, file: !1154, line: 110, baseType: !952, size: 32, align: 32, offset: 256)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1375, file: !1154, line: 111, baseType: !952, size: 32, align: 32, offset: 288)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1375, file: !1154, line: 111, baseType: !952, size: 32, align: 32, offset: 320)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1375, file: !1154, line: 112, baseType: !1198, size: 256, align: 32, offset: 352)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1375, file: !1154, line: 113, baseType: !1204, size: 128, align: 32, offset: 608)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1375, file: !1154, line: 114, baseType: !952, size: 32, align: 32, offset: 736)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1375, file: !1154, line: 115, baseType: !952, size: 32, align: 32, offset: 768)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1375, file: !1154, line: 116, baseType: !952, size: 32, align: 32, offset: 800)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1366, file: !1154, line: 163, baseType: !926, size: 64, align: 64, offset: 256)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1366, file: !1154, line: 165, baseType: !1392, size: 128, align: 64, offset: 320)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1154, line: 122, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1154, line: 119, size: 128, align: 64, elements: !1394)
!1394 = !{!1395, !1396}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1393, file: !1154, line: 120, baseType: !1215, size: 64, align: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1393, file: !1154, line: 121, baseType: !1349, size: 64, align: 64, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1366, file: !1154, line: 166, baseType: !1398, size: 128, align: 64, offset: 448)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1154, line: 127, baseType: !1399)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1154, line: 124, size: 128, align: 64, elements: !1400)
!1400 = !{!1401, !1474}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1399, file: !1154, line: 125, baseType: !1402, size: 64, align: 64)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64, align: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64, align: 64)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !57, line: 5794, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !57, line: 5747, size: 512, align: 64, elements: !1406)
!1406 = !{!1407, !1408, !1432, !1436, !1437, !1471, !1472, !1473}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1405, file: !57, line: 5751, baseType: !1094, size: 64, align: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1405, file: !57, line: 5756, baseType: !1409, size: 64, align: 64, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64, align: 64)
!1410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1411)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !57, line: 5796, size: 512, align: 64, elements: !1412)
!1412 = !{!1413, !1414, !1417, !1418, !1419, !1423, !1427, !1431}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1411, file: !57, line: 5797, baseType: !988, size: 64, align: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1411, file: !57, line: 5804, baseType: !1415, size: 64, align: 64, offset: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64, align: 64)
!1416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !56)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1411, file: !57, line: 5815, baseType: !1094, size: 64, align: 64, offset: 128)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1411, file: !57, line: 5825, baseType: !952, size: 32, align: 32, offset: 192)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1411, file: !57, line: 5826, baseType: !1420, size: 64, align: 64, offset: 256)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64, align: 64)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!952, !1403}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1411, file: !57, line: 5827, baseType: !1424, size: 64, align: 64, offset: 320)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64, align: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!952, !1403, !1215}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1411, file: !57, line: 5828, baseType: !1428, size: 64, align: 64, offset: 384)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64, align: 64)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{null, !1403}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1411, file: !57, line: 5829, baseType: !1428, size: 64, align: 64, offset: 448)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1405, file: !57, line: 5762, baseType: !1433, size: 64, align: 64, offset: 128)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64, align: 64)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !57, line: 5735, baseType: !1435)
!1435 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !57, line: 5735, flags: DIFlagFwdDecl)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1405, file: !57, line: 5768, baseType: !926, size: 64, align: 64, offset: 192)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1405, file: !57, line: 5775, baseType: !1438, size: 64, align: 64, offset: 256)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64, align: 64)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !57, line: 4085, baseType: !1440)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !57, line: 3936, size: 1152, align: 64, elements: !1441)
!1441 = !{!1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1440, file: !57, line: 3940, baseType: !46, size: 32, align: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1440, file: !57, line: 3944, baseType: !56, size: 32, align: 32, offset: 32)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1440, file: !57, line: 3948, baseType: !944, size: 32, align: 32, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1440, file: !57, line: 3958, baseType: !1167, size: 64, align: 64, offset: 128)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1440, file: !57, line: 3962, baseType: !952, size: 32, align: 32, offset: 192)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1440, file: !57, line: 3968, baseType: !952, size: 32, align: 32, offset: 224)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1440, file: !57, line: 3973, baseType: !1008, size: 64, align: 64, offset: 256)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1440, file: !57, line: 3986, baseType: !952, size: 32, align: 32, offset: 320)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1440, file: !57, line: 3999, baseType: !952, size: 32, align: 32, offset: 352)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1440, file: !57, line: 4004, baseType: !952, size: 32, align: 32, offset: 384)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1440, file: !57, line: 4005, baseType: !952, size: 32, align: 32, offset: 416)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1440, file: !57, line: 4010, baseType: !952, size: 32, align: 32, offset: 448)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1440, file: !57, line: 4011, baseType: !952, size: 32, align: 32, offset: 480)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1440, file: !57, line: 4020, baseType: !1013, size: 64, align: 32, offset: 512)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1440, file: !57, line: 4025, baseType: !880, size: 32, align: 32, offset: 576)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1440, file: !57, line: 4030, baseType: !803, size: 32, align: 32, offset: 608)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1440, file: !57, line: 4031, baseType: !809, size: 32, align: 32, offset: 640)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1440, file: !57, line: 4032, baseType: !827, size: 32, align: 32, offset: 672)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1440, file: !57, line: 4033, baseType: !851, size: 32, align: 32, offset: 704)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1440, file: !57, line: 4034, baseType: !870, size: 32, align: 32, offset: 736)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1440, file: !57, line: 4039, baseType: !952, size: 32, align: 32, offset: 768)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1440, file: !57, line: 4046, baseType: !936, size: 64, align: 64, offset: 832)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1440, file: !57, line: 4050, baseType: !952, size: 32, align: 32, offset: 896)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1440, file: !57, line: 4054, baseType: !952, size: 32, align: 32, offset: 928)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1440, file: !57, line: 4061, baseType: !952, size: 32, align: 32, offset: 960)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1440, file: !57, line: 4065, baseType: !952, size: 32, align: 32, offset: 992)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1440, file: !57, line: 4073, baseType: !952, size: 32, align: 32, offset: 1024)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1440, file: !57, line: 4080, baseType: !952, size: 32, align: 32, offset: 1056)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1440, file: !57, line: 4084, baseType: !952, size: 32, align: 32, offset: 1088)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1405, file: !57, line: 5781, baseType: !1438, size: 64, align: 64, offset: 320)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1405, file: !57, line: 5787, baseType: !1013, size: 64, align: 32, offset: 384)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1405, file: !57, line: 5793, baseType: !1013, size: 64, align: 32, offset: 448)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1399, file: !1154, line: 126, baseType: !952, size: 32, align: 32, offset: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1366, file: !1154, line: 172, baseType: !1215, size: 64, align: 64, offset: 576)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1366, file: !1154, line: 177, baseType: !1167, size: 64, align: 64, offset: 640)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1366, file: !1154, line: 178, baseType: !945, size: 32, align: 32, offset: 704)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1366, file: !1154, line: 180, baseType: !926, size: 64, align: 64, offset: 768)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1366, file: !1154, line: 185, baseType: !952, size: 32, align: 32, offset: 832)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1366, file: !1154, line: 190, baseType: !926, size: 64, align: 64, offset: 896)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1366, file: !1154, line: 195, baseType: !952, size: 32, align: 32, offset: 960)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1366, file: !1154, line: 200, baseType: !1215, size: 64, align: 64, offset: 1024)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1366, file: !1154, line: 201, baseType: !952, size: 32, align: 32, offset: 1088)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1366, file: !1154, line: 202, baseType: !1349, size: 64, align: 64, offset: 1152)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1366, file: !1154, line: 203, baseType: !952, size: 32, align: 32, offset: 1216)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1366, file: !1154, line: 205, baseType: !952, size: 32, align: 32, offset: 1248)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1366, file: !1154, line: 206, baseType: !952, size: 32, align: 32, offset: 1280)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1366, file: !1154, line: 209, baseType: !1325, size: 64, align: 64, offset: 1344)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1366, file: !1154, line: 212, baseType: !1325, size: 64, align: 64, offset: 1408)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1366, file: !1154, line: 213, baseType: !1349, size: 64, align: 64, offset: 1472)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1366, file: !1154, line: 215, baseType: !952, size: 32, align: 32, offset: 1536)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1366, file: !1154, line: 217, baseType: !952, size: 32, align: 32, offset: 1568)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1366, file: !1154, line: 220, baseType: !952, size: 32, align: 32, offset: 1600)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1091, file: !57, line: 1598, baseType: !926, size: 64, align: 64, offset: 384)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1091, file: !57, line: 1606, baseType: !1008, size: 64, align: 64, offset: 448)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1091, file: !57, line: 1614, baseType: !952, size: 32, align: 32, offset: 512)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1091, file: !57, line: 1622, baseType: !952, size: 32, align: 32, offset: 544)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1091, file: !57, line: 1628, baseType: !952, size: 32, align: 32, offset: 576)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1091, file: !57, line: 1636, baseType: !952, size: 32, align: 32, offset: 608)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1091, file: !57, line: 1643, baseType: !952, size: 32, align: 32, offset: 640)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1091, file: !57, line: 1657, baseType: !1167, size: 64, align: 64, offset: 704)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1091, file: !57, line: 1658, baseType: !952, size: 32, align: 32, offset: 768)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1091, file: !57, line: 1679, baseType: !1013, size: 64, align: 32, offset: 800)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1091, file: !57, line: 1688, baseType: !952, size: 32, align: 32, offset: 864)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1091, file: !57, line: 1712, baseType: !952, size: 32, align: 32, offset: 896)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1091, file: !57, line: 1729, baseType: !952, size: 32, align: 32, offset: 928)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1091, file: !57, line: 1729, baseType: !952, size: 32, align: 32, offset: 960)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1091, file: !57, line: 1744, baseType: !952, size: 32, align: 32, offset: 992)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1091, file: !57, line: 1744, baseType: !952, size: 32, align: 32, offset: 1024)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1091, file: !57, line: 1751, baseType: !952, size: 32, align: 32, offset: 1056)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1091, file: !57, line: 1766, baseType: !516, size: 32, align: 32, offset: 1088)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1091, file: !57, line: 1791, baseType: !1513, size: 64, align: 64, offset: 1152)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64, align: 64)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{null, !1090, !1249, !1331, !952, !952, !952}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1091, file: !57, line: 1808, baseType: !1517, size: 64, align: 64, offset: 1216)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64, align: 64)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!516, !1090, !1112}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1091, file: !57, line: 1816, baseType: !952, size: 32, align: 32, offset: 1280)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1091, file: !57, line: 1825, baseType: !1522, size: 32, align: 32, offset: 1312)
!1522 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1091, file: !57, line: 1830, baseType: !952, size: 32, align: 32, offset: 1344)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1091, file: !57, line: 1838, baseType: !1522, size: 32, align: 32, offset: 1376)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1091, file: !57, line: 1846, baseType: !952, size: 32, align: 32, offset: 1408)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1091, file: !57, line: 1851, baseType: !952, size: 32, align: 32, offset: 1440)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1091, file: !57, line: 1861, baseType: !1522, size: 32, align: 32, offset: 1472)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1091, file: !57, line: 1868, baseType: !1522, size: 32, align: 32, offset: 1504)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1091, file: !57, line: 1875, baseType: !1522, size: 32, align: 32, offset: 1536)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1091, file: !57, line: 1882, baseType: !1522, size: 32, align: 32, offset: 1568)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1091, file: !57, line: 1889, baseType: !1522, size: 32, align: 32, offset: 1600)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1091, file: !57, line: 1896, baseType: !1522, size: 32, align: 32, offset: 1632)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1091, file: !57, line: 1903, baseType: !1522, size: 32, align: 32, offset: 1664)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1091, file: !57, line: 1910, baseType: !952, size: 32, align: 32, offset: 1696)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1091, file: !57, line: 1915, baseType: !952, size: 32, align: 32, offset: 1728)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1091, file: !57, line: 1926, baseType: !1331, size: 64, align: 64, offset: 1792)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1091, file: !57, line: 1935, baseType: !1013, size: 64, align: 32, offset: 1856)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1091, file: !57, line: 1942, baseType: !952, size: 32, align: 32, offset: 1920)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1091, file: !57, line: 1948, baseType: !952, size: 32, align: 32, offset: 1952)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1091, file: !57, line: 1954, baseType: !952, size: 32, align: 32, offset: 1984)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1091, file: !57, line: 1960, baseType: !952, size: 32, align: 32, offset: 2016)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1091, file: !57, line: 1984, baseType: !952, size: 32, align: 32, offset: 2048)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1091, file: !57, line: 1991, baseType: !952, size: 32, align: 32, offset: 2080)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1091, file: !57, line: 1996, baseType: !952, size: 32, align: 32, offset: 2112)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1091, file: !57, line: 2004, baseType: !952, size: 32, align: 32, offset: 2144)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1091, file: !57, line: 2011, baseType: !952, size: 32, align: 32, offset: 2176)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1091, file: !57, line: 2018, baseType: !952, size: 32, align: 32, offset: 2208)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1091, file: !57, line: 2027, baseType: !952, size: 32, align: 32, offset: 2240)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1091, file: !57, line: 2034, baseType: !952, size: 32, align: 32, offset: 2272)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1091, file: !57, line: 2044, baseType: !952, size: 32, align: 32, offset: 2304)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1091, file: !57, line: 2054, baseType: !1552, size: 64, align: 64, offset: 2368)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64, align: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1091, file: !57, line: 2061, baseType: !1552, size: 64, align: 64, offset: 2432)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1091, file: !57, line: 2066, baseType: !952, size: 32, align: 32, offset: 2496)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1091, file: !57, line: 2070, baseType: !952, size: 32, align: 32, offset: 2528)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1091, file: !57, line: 2078, baseType: !952, size: 32, align: 32, offset: 2560)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1091, file: !57, line: 2085, baseType: !952, size: 32, align: 32, offset: 2592)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1091, file: !57, line: 2092, baseType: !952, size: 32, align: 32, offset: 2624)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1091, file: !57, line: 2099, baseType: !952, size: 32, align: 32, offset: 2656)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1091, file: !57, line: 2106, baseType: !952, size: 32, align: 32, offset: 2688)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1091, file: !57, line: 2113, baseType: !952, size: 32, align: 32, offset: 2720)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1091, file: !57, line: 2120, baseType: !952, size: 32, align: 32, offset: 2752)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1091, file: !57, line: 2125, baseType: !952, size: 32, align: 32, offset: 2784)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1091, file: !57, line: 2133, baseType: !952, size: 32, align: 32, offset: 2816)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1091, file: !57, line: 2140, baseType: !952, size: 32, align: 32, offset: 2848)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1091, file: !57, line: 2145, baseType: !952, size: 32, align: 32, offset: 2880)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1091, file: !57, line: 2153, baseType: !952, size: 32, align: 32, offset: 2912)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1091, file: !57, line: 2158, baseType: !952, size: 32, align: 32, offset: 2944)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1091, file: !57, line: 2166, baseType: !809, size: 32, align: 32, offset: 2976)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1091, file: !57, line: 2173, baseType: !827, size: 32, align: 32, offset: 3008)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1091, file: !57, line: 2180, baseType: !851, size: 32, align: 32, offset: 3040)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1091, file: !57, line: 2187, baseType: !803, size: 32, align: 32, offset: 3072)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1091, file: !57, line: 2194, baseType: !870, size: 32, align: 32, offset: 3104)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1091, file: !57, line: 2203, baseType: !952, size: 32, align: 32, offset: 3136)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1091, file: !57, line: 2209, baseType: !880, size: 32, align: 32, offset: 3168)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1091, file: !57, line: 2212, baseType: !952, size: 32, align: 32, offset: 3200)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1091, file: !57, line: 2213, baseType: !952, size: 32, align: 32, offset: 3232)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1091, file: !57, line: 2220, baseType: !716, size: 32, align: 32, offset: 3264)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1091, file: !57, line: 2232, baseType: !952, size: 32, align: 32, offset: 3296)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1091, file: !57, line: 2243, baseType: !952, size: 32, align: 32, offset: 3328)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1091, file: !57, line: 2249, baseType: !952, size: 32, align: 32, offset: 3360)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1091, file: !57, line: 2256, baseType: !952, size: 32, align: 32, offset: 3392)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1091, file: !57, line: 2263, baseType: !936, size: 64, align: 64, offset: 3456)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1091, file: !57, line: 2270, baseType: !936, size: 64, align: 64, offset: 3520)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1091, file: !57, line: 2277, baseType: !888, size: 32, align: 32, offset: 3584)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1091, file: !57, line: 2285, baseType: !716, size: 32, align: 32, offset: 3616)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1091, file: !57, line: 2367, baseType: !1588, size: 64, align: 64, offset: 3648)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64, align: 64)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!952, !1090, !1349, !952}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1091, file: !57, line: 2383, baseType: !952, size: 32, align: 32, offset: 3712)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1091, file: !57, line: 2386, baseType: !1522, size: 32, align: 32, offset: 3744)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1091, file: !57, line: 2387, baseType: !1522, size: 32, align: 32, offset: 3776)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1091, file: !57, line: 2394, baseType: !952, size: 32, align: 32, offset: 3808)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1091, file: !57, line: 2401, baseType: !952, size: 32, align: 32, offset: 3840)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1091, file: !57, line: 2408, baseType: !952, size: 32, align: 32, offset: 3872)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1091, file: !57, line: 2415, baseType: !952, size: 32, align: 32, offset: 3904)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1091, file: !57, line: 2422, baseType: !952, size: 32, align: 32, offset: 3936)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1091, file: !57, line: 2423, baseType: !1600, size: 64, align: 64, offset: 3968)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64, align: 64)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !57, line: 831, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !57, line: 826, size: 128, align: 32, elements: !1603)
!1603 = !{!1604, !1605, !1606, !1607}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1602, file: !57, line: 827, baseType: !952, size: 32, align: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1602, file: !57, line: 828, baseType: !952, size: 32, align: 32, offset: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1602, file: !57, line: 829, baseType: !952, size: 32, align: 32, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1602, file: !57, line: 830, baseType: !1522, size: 32, align: 32, offset: 96)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1091, file: !57, line: 2430, baseType: !1008, size: 64, align: 64, offset: 4032)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1091, file: !57, line: 2437, baseType: !1008, size: 64, align: 64, offset: 4096)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1091, file: !57, line: 2444, baseType: !1522, size: 32, align: 32, offset: 4160)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1091, file: !57, line: 2451, baseType: !1522, size: 32, align: 32, offset: 4192)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1091, file: !57, line: 2458, baseType: !952, size: 32, align: 32, offset: 4224)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1091, file: !57, line: 2469, baseType: !952, size: 32, align: 32, offset: 4256)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1091, file: !57, line: 2475, baseType: !952, size: 32, align: 32, offset: 4288)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1091, file: !57, line: 2481, baseType: !952, size: 32, align: 32, offset: 4320)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1091, file: !57, line: 2485, baseType: !952, size: 32, align: 32, offset: 4352)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1091, file: !57, line: 2489, baseType: !952, size: 32, align: 32, offset: 4384)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1091, file: !57, line: 2493, baseType: !952, size: 32, align: 32, offset: 4416)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1091, file: !57, line: 2501, baseType: !952, size: 32, align: 32, offset: 4448)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1091, file: !57, line: 2506, baseType: !952, size: 32, align: 32, offset: 4480)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1091, file: !57, line: 2510, baseType: !952, size: 32, align: 32, offset: 4512)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1091, file: !57, line: 2514, baseType: !1008, size: 64, align: 64, offset: 4544)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1091, file: !57, line: 2528, baseType: !1624, size: 64, align: 64, offset: 4608)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64, align: 64)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{null, !1090, !926, !952, !952}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1091, file: !57, line: 2534, baseType: !952, size: 32, align: 32, offset: 4672)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1091, file: !57, line: 2545, baseType: !952, size: 32, align: 32, offset: 4704)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1091, file: !57, line: 2547, baseType: !952, size: 32, align: 32, offset: 4736)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1091, file: !57, line: 2549, baseType: !952, size: 32, align: 32, offset: 4768)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1091, file: !57, line: 2551, baseType: !952, size: 32, align: 32, offset: 4800)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1091, file: !57, line: 2553, baseType: !952, size: 32, align: 32, offset: 4832)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1091, file: !57, line: 2555, baseType: !952, size: 32, align: 32, offset: 4864)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1091, file: !57, line: 2557, baseType: !952, size: 32, align: 32, offset: 4896)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1091, file: !57, line: 2559, baseType: !952, size: 32, align: 32, offset: 4928)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1091, file: !57, line: 2563, baseType: !952, size: 32, align: 32, offset: 4960)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1091, file: !57, line: 2571, baseType: !1207, size: 64, align: 64, offset: 4992)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1091, file: !57, line: 2579, baseType: !1207, size: 64, align: 64, offset: 5056)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1091, file: !57, line: 2586, baseType: !952, size: 32, align: 32, offset: 5120)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1091, file: !57, line: 2615, baseType: !952, size: 32, align: 32, offset: 5152)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1091, file: !57, line: 2627, baseType: !952, size: 32, align: 32, offset: 5184)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1091, file: !57, line: 2637, baseType: !952, size: 32, align: 32, offset: 5216)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1091, file: !57, line: 2681, baseType: !952, size: 32, align: 32, offset: 5248)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1091, file: !57, line: 2709, baseType: !1008, size: 64, align: 64, offset: 5312)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1091, file: !57, line: 2716, baseType: !1646, size: 64, align: 64, offset: 5376)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64, align: 64)
!1647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1648)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !57, line: 3636, size: 896, align: 64, elements: !1649)
!1649 = !{!1650, !1651, !1652, !1653, !1654, !1655, !1656, !1660, !1664, !1665, !1666, !1667, !1671, !1672, !1673, !1674, !1675}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1648, file: !57, line: 3642, baseType: !988, size: 64, align: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1648, file: !57, line: 3649, baseType: !46, size: 32, align: 32, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1648, file: !57, line: 3656, baseType: !56, size: 32, align: 32, offset: 96)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1648, file: !57, line: 3663, baseType: !516, size: 32, align: 32, offset: 128)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1648, file: !57, line: 3669, baseType: !952, size: 32, align: 32, offset: 160)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1648, file: !57, line: 3682, baseType: !1346, size: 64, align: 64, offset: 192)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1648, file: !57, line: 3698, baseType: !1657, size: 64, align: 64, offset: 256)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64, align: 64)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!952, !1141, !1077, !944}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1648, file: !57, line: 3712, baseType: !1661, size: 64, align: 64, offset: 320)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64, align: 64)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{!952, !1141, !952, !1077, !944}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1648, file: !57, line: 3726, baseType: !1657, size: 64, align: 64, offset: 384)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1648, file: !57, line: 3737, baseType: !1138, size: 64, align: 64, offset: 448)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1648, file: !57, line: 3746, baseType: !952, size: 32, align: 32, offset: 512)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1648, file: !57, line: 3757, baseType: !1668, size: 64, align: 64, offset: 576)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64, align: 64)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{null, !978}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1648, file: !57, line: 3766, baseType: !1138, size: 64, align: 64, offset: 640)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1648, file: !57, line: 3774, baseType: !1138, size: 64, align: 64, offset: 704)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1648, file: !57, line: 3780, baseType: !952, size: 32, align: 32, offset: 768)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1648, file: !57, line: 3785, baseType: !952, size: 32, align: 32, offset: 800)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1648, file: !57, line: 3795, baseType: !1676, size: 64, align: 64, offset: 832)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64, align: 64)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!952, !1141, !1220}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1091, file: !57, line: 2728, baseType: !926, size: 64, align: 64, offset: 5440)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1091, file: !57, line: 2735, baseType: !1273, size: 512, align: 64, offset: 5504)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1091, file: !57, line: 2742, baseType: !952, size: 32, align: 32, offset: 6016)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1091, file: !57, line: 2755, baseType: !952, size: 32, align: 32, offset: 6048)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1091, file: !57, line: 2776, baseType: !952, size: 32, align: 32, offset: 6080)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1091, file: !57, line: 2783, baseType: !952, size: 32, align: 32, offset: 6112)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1091, file: !57, line: 2791, baseType: !952, size: 32, align: 32, offset: 6144)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1091, file: !57, line: 2802, baseType: !1349, size: 64, align: 64, offset: 6208)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1091, file: !57, line: 2811, baseType: !952, size: 32, align: 32, offset: 6272)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1091, file: !57, line: 2821, baseType: !952, size: 32, align: 32, offset: 6304)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1091, file: !57, line: 2830, baseType: !952, size: 32, align: 32, offset: 6336)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1091, file: !57, line: 2840, baseType: !952, size: 32, align: 32, offset: 6368)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1091, file: !57, line: 2851, baseType: !1692, size: 64, align: 64, offset: 6400)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64, align: 64)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!952, !1090, !1695, !926, !1331, !952, !952}
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64, align: 64)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!952, !1090, !926}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1091, file: !57, line: 2871, baseType: !1699, size: 64, align: 64, offset: 6464)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64, align: 64)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{!952, !1090, !1702, !926, !1331, !952}
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64, align: 64)
!1703 = !DISubroutineType(types: !1704)
!1704 = !{!952, !1090, !926, !952, !952}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1091, file: !57, line: 2878, baseType: !952, size: 32, align: 32, offset: 6528)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1091, file: !57, line: 2885, baseType: !952, size: 32, align: 32, offset: 6560)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1091, file: !57, line: 3005, baseType: !952, size: 32, align: 32, offset: 6592)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1091, file: !57, line: 3013, baseType: !900, size: 32, align: 32, offset: 6624)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1091, file: !57, line: 3020, baseType: !900, size: 32, align: 32, offset: 6656)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1091, file: !57, line: 3027, baseType: !900, size: 32, align: 32, offset: 6688)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1091, file: !57, line: 3037, baseType: !1167, size: 64, align: 64, offset: 6720)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1091, file: !57, line: 3038, baseType: !952, size: 32, align: 32, offset: 6784)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1091, file: !57, line: 3050, baseType: !936, size: 64, align: 64, offset: 6848)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1091, file: !57, line: 3065, baseType: !952, size: 32, align: 32, offset: 6912)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1091, file: !57, line: 3083, baseType: !952, size: 32, align: 32, offset: 6944)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1091, file: !57, line: 3092, baseType: !1013, size: 64, align: 32, offset: 6976)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1091, file: !57, line: 3099, baseType: !516, size: 32, align: 32, offset: 7040)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1091, file: !57, line: 3106, baseType: !1013, size: 64, align: 32, offset: 7072)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1091, file: !57, line: 3113, baseType: !1720, size: 64, align: 64, offset: 7168)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64, align: 64)
!1721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1722)
!1722 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !57, line: 740, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !57, line: 712, size: 384, align: 64, elements: !1724)
!1724 = !{!1725, !1726, !1727, !1728, !1729, !1730, !1733}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1723, file: !57, line: 713, baseType: !56, size: 32, align: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1723, file: !57, line: 714, baseType: !46, size: 32, align: 32, offset: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1723, file: !57, line: 720, baseType: !988, size: 64, align: 64, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1723, file: !57, line: 724, baseType: !988, size: 64, align: 64, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1723, file: !57, line: 728, baseType: !952, size: 32, align: 32, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1723, file: !57, line: 734, baseType: !1731, size: 64, align: 64, offset: 256)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64, align: 64)
!1732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1723, file: !57, line: 739, baseType: !1734, size: 64, align: 64, offset: 320)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64, align: 64)
!1735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1129)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1091, file: !57, line: 3129, baseType: !1008, size: 64, align: 64, offset: 7232)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1091, file: !57, line: 3130, baseType: !1008, size: 64, align: 64, offset: 7296)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1091, file: !57, line: 3131, baseType: !1008, size: 64, align: 64, offset: 7360)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1091, file: !57, line: 3132, baseType: !1008, size: 64, align: 64, offset: 7424)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1091, file: !57, line: 3139, baseType: !1207, size: 64, align: 64, offset: 7488)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1091, file: !57, line: 3147, baseType: !952, size: 32, align: 32, offset: 7552)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1091, file: !57, line: 3165, baseType: !952, size: 32, align: 32, offset: 7584)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1091, file: !57, line: 3172, baseType: !952, size: 32, align: 32, offset: 7616)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1091, file: !57, line: 3180, baseType: !952, size: 32, align: 32, offset: 7648)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1091, file: !57, line: 3191, baseType: !1552, size: 64, align: 64, offset: 7680)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1091, file: !57, line: 3199, baseType: !1167, size: 64, align: 64, offset: 7744)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1091, file: !57, line: 3207, baseType: !1207, size: 64, align: 64, offset: 7808)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1091, file: !57, line: 3214, baseType: !945, size: 32, align: 32, offset: 7872)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1091, file: !57, line: 3224, baseType: !1238, size: 64, align: 64, offset: 7936)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1091, file: !57, line: 3225, baseType: !952, size: 32, align: 32, offset: 8000)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1091, file: !57, line: 3249, baseType: !1220, size: 64, align: 64, offset: 8064)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1091, file: !57, line: 3256, baseType: !952, size: 32, align: 32, offset: 8128)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1091, file: !57, line: 3271, baseType: !952, size: 32, align: 32, offset: 8160)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1091, file: !57, line: 3279, baseType: !1008, size: 64, align: 64, offset: 8192)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1091, file: !57, line: 3301, baseType: !1220, size: 64, align: 64, offset: 8256)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1091, file: !57, line: 3310, baseType: !952, size: 32, align: 32, offset: 8320)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1091, file: !57, line: 3337, baseType: !952, size: 32, align: 32, offset: 8352)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1091, file: !57, line: 3351, baseType: !952, size: 32, align: 32, offset: 8384)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1091, file: !57, line: 3359, baseType: !952, size: 32, align: 32, offset: 8416)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !979, file: !980, line: 100, baseType: !952, size: 32, align: 32, offset: 4992)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !979, file: !980, line: 100, baseType: !952, size: 32, align: 32, offset: 5024)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !979, file: !980, line: 101, baseType: !952, size: 32, align: 32, offset: 5056)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "intra_only", scope: !979, file: !980, line: 102, baseType: !952, size: 32, align: 32, offset: 5088)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !979, file: !980, line: 103, baseType: !1008, size: 64, align: 64, offset: 5120)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "out_format", scope: !979, file: !980, line: 104, baseType: !909, size: 32, align: 32, offset: 5184)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "h263_pred", scope: !979, file: !980, line: 105, baseType: !952, size: 32, align: 32, offset: 5216)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "pb_frame", scope: !979, file: !980, line: 106, baseType: !952, size: 32, align: 32, offset: 5248)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "h263_plus", scope: !979, file: !980, line: 109, baseType: !952, size: 32, align: 32, offset: 5280)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "h263_flv", scope: !979, file: !980, line: 110, baseType: !952, size: 32, align: 32, offset: 5312)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !979, file: !980, line: 112, baseType: !56, size: 32, align: 32, offset: 5344)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_qscale", scope: !979, file: !980, line: 113, baseType: !952, size: 32, align: 32, offset: 5376)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !979, file: !980, line: 114, baseType: !952, size: 32, align: 32, offset: 5408)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !979, file: !980, line: 115, baseType: !952, size: 32, align: 32, offset: 5440)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "luma_elim_threshold", scope: !979, file: !980, line: 116, baseType: !952, size: 32, align: 32, offset: 5472)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_elim_threshold", scope: !979, file: !980, line: 117, baseType: !952, size: 32, align: 32, offset: 5504)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !979, file: !980, line: 118, baseType: !952, size: 32, align: 32, offset: 5536)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !979, file: !980, line: 119, baseType: !952, size: 32, align: 32, offset: 5568)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !979, file: !980, line: 120, baseType: !952, size: 32, align: 32, offset: 5600)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "context_initialized", scope: !979, file: !980, line: 124, baseType: !952, size: 32, align: 32, offset: 5632)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "input_picture_number", scope: !979, file: !980, line: 125, baseType: !952, size: 32, align: 32, offset: 5664)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !979, file: !980, line: 126, baseType: !952, size: 32, align: 32, offset: 5696)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "picture_number", scope: !979, file: !980, line: 127, baseType: !952, size: 32, align: 32, offset: 5728)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "picture_in_gop_number", scope: !979, file: !980, line: 128, baseType: !952, size: 32, align: 32, offset: 5760)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "mb_width", scope: !979, file: !980, line: 129, baseType: !952, size: 32, align: 32, offset: 5792)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "mb_height", scope: !979, file: !980, line: 129, baseType: !952, size: 32, align: 32, offset: 5824)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "mb_stride", scope: !979, file: !980, line: 130, baseType: !952, size: 32, align: 32, offset: 5856)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "b8_stride", scope: !979, file: !980, line: 131, baseType: !952, size: 32, align: 32, offset: 5888)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "h_edge_pos", scope: !979, file: !980, line: 132, baseType: !952, size: 32, align: 32, offset: 5920)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "v_edge_pos", scope: !979, file: !980, line: 132, baseType: !952, size: 32, align: 32, offset: 5952)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num", scope: !979, file: !980, line: 133, baseType: !952, size: 32, align: 32, offset: 5984)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !979, file: !980, line: 134, baseType: !1792, size: 64, align: 64, offset: 6016)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1326, line: 149, baseType: !929)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "uvlinesize", scope: !979, file: !980, line: 135, baseType: !1792, size: 64, align: 64, offset: 6080)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "picture", scope: !979, file: !980, line: 136, baseType: !1795, size: 64, align: 64, offset: 6144)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64, align: 64)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "Picture", file: !1797, line: 91, baseType: !1798)
!1797 = !DIFile(filename: "libavcodec/mpegpicture.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Picture", file: !1797, line: 45, size: 2624, align: 64, elements: !1799)
!1799 = !{!1800, !1802, !1813, !1814, !1815, !1817, !1821, !1822, !1824, !1825, !1826, !1827, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1798, file: !1797, line: 46, baseType: !1801, size: 64, align: 64)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64, align: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !1798, file: !1797, line: 47, baseType: !1803, size: 256, align: 64, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadFrame", file: !1804, line: 40, baseType: !1805)
!1804 = !DIFile(filename: "libavcodec/thread.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadFrame", file: !1804, line: 34, size: 256, align: 64, elements: !1806)
!1806 = !{!1807, !1808, !1812}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1805, file: !1804, line: 35, baseType: !1349, size: 64, align: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1805, file: !1804, line: 36, baseType: !1809, size: 128, align: 64, offset: 64)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1141, size: 128, align: 64, elements: !1810)
!1810 = !{!1811}
!1811 = !DISubrange(count: 2)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1805, file: !1804, line: 39, baseType: !1220, size: 64, align: 64, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table_buf", scope: !1798, file: !1797, line: 49, baseType: !1220, size: 64, align: 64, offset: 320)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1798, file: !1797, line: 50, baseType: !1316, size: 64, align: 64, offset: 384)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val_buf", scope: !1798, file: !1797, line: 52, baseType: !1816, size: 128, align: 64, offset: 448)
!1816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1220, size: 128, align: 64, elements: !1810)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val", scope: !1798, file: !1797, line: 53, baseType: !1818, size: 128, align: 64, offset: 576)
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 128, align: 64, elements: !1810)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64, align: 64)
!1820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 32, align: 16, elements: !1810)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type_buf", scope: !1798, file: !1797, line: 55, baseType: !1220, size: 64, align: 64, offset: 704)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !1798, file: !1797, line: 56, baseType: !1823, size: 64, align: 64, offset: 768)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64, align: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table_buf", scope: !1798, file: !1797, line: 58, baseType: !1220, size: 64, align: 64, offset: 832)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !1798, file: !1797, line: 59, baseType: !1167, size: 64, align: 64, offset: 896)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index_buf", scope: !1798, file: !1797, line: 61, baseType: !1816, size: 128, align: 64, offset: 960)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index", scope: !1798, file: !1797, line: 62, baseType: !1828, size: 128, align: 64, offset: 1088)
!1828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1316, size: 128, align: 64, elements: !1810)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_buf", scope: !1798, file: !1797, line: 64, baseType: !1220, size: 64, align: 64, offset: 1216)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var", scope: !1798, file: !1797, line: 65, baseType: !1552, size: 64, align: 64, offset: 1280)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_buf", scope: !1798, file: !1797, line: 67, baseType: !1220, size: 64, align: 64, offset: 1344)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var", scope: !1798, file: !1797, line: 68, baseType: !1552, size: 64, align: 64, offset: 1408)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mb_width", scope: !1798, file: !1797, line: 70, baseType: !952, size: 32, align: 32, offset: 1472)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mb_height", scope: !1798, file: !1797, line: 71, baseType: !952, size: 32, align: 32, offset: 1504)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "mb_mean_buf", scope: !1798, file: !1797, line: 73, baseType: !1220, size: 64, align: 64, offset: 1536)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "mb_mean", scope: !1798, file: !1797, line: 74, baseType: !1167, size: 64, align: 64, offset: 1600)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_buf", scope: !1798, file: !1797, line: 76, baseType: !1220, size: 64, align: 64, offset: 1664)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_picture_private", scope: !1798, file: !1797, line: 77, baseType: !926, size: 64, align: 64, offset: 1728)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "field_picture", scope: !1798, file: !1797, line: 79, baseType: !952, size: 32, align: 32, offset: 1792)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum", scope: !1798, file: !1797, line: 81, baseType: !1008, size: 64, align: 64, offset: 1856)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum", scope: !1798, file: !1797, line: 82, baseType: !1008, size: 64, align: 64, offset: 1920)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_score", scope: !1798, file: !1797, line: 84, baseType: !952, size: 32, align: 32, offset: 1984)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "needs_realloc", scope: !1798, file: !1797, line: 85, baseType: !952, size: 32, align: 32, offset: 2016)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !1798, file: !1797, line: 87, baseType: !952, size: 32, align: 32, offset: 2048)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1798, file: !1797, line: 88, baseType: !952, size: 32, align: 32, offset: 2080)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "encoding_error", scope: !1798, file: !1797, line: 90, baseType: !1273, size: 512, align: 64, offset: 2112)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "input_picture", scope: !979, file: !980, line: 137, baseType: !1848, size: 64, align: 64, offset: 6208)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64, align: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_input_picture", scope: !979, file: !980, line: 138, baseType: !1848, size: 64, align: 64, offset: 6272)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "user_specified_pts", scope: !979, file: !980, line: 140, baseType: !1008, size: 64, align: 64, offset: 6336)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "dts_delta", scope: !979, file: !980, line: 144, baseType: !1008, size: 64, align: 64, offset: 6400)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_pts", scope: !979, file: !980, line: 148, baseType: !1008, size: 64, align: 64, offset: 6464)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !979, file: !980, line: 151, baseType: !1854, size: 320, align: 64, offset: 6528)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1855, line: 40, baseType: !1856)
!1855 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1855, line: 35, size: 320, align: 64, elements: !1857)
!1857 = !{!1858, !1859, !1860, !1861, !1862, !1863}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1856, file: !1855, line: 36, baseType: !944, size: 32, align: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1856, file: !1855, line: 37, baseType: !952, size: 32, align: 32, offset: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1856, file: !1855, line: 38, baseType: !1167, size: 64, align: 64, offset: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1856, file: !1855, line: 38, baseType: !1167, size: 64, align: 64, offset: 128)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1856, file: !1855, line: 38, baseType: !1167, size: 64, align: 64, offset: 192)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1856, file: !1855, line: 39, baseType: !952, size: 32, align: 32, offset: 256)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "start_mb_y", scope: !979, file: !980, line: 153, baseType: !952, size: 32, align: 32, offset: 6848)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "end_mb_y", scope: !979, file: !980, line: 154, baseType: !952, size: 32, align: 32, offset: 6880)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "thread_context", scope: !979, file: !980, line: 155, baseType: !1867, size: 2048, align: 64, offset: 6912)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !978, size: 2048, align: 64, elements: !1868)
!1868 = !{!1869}
!1869 = !DISubrange(count: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "slice_context_count", scope: !979, file: !980, line: 156, baseType: !952, size: 32, align: 32, offset: 8960)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture", scope: !979, file: !980, line: 162, baseType: !1796, size: 2624, align: 64, offset: 9024)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "next_picture", scope: !979, file: !980, line: 168, baseType: !1796, size: 2624, align: 64, offset: 11648)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "new_picture", scope: !979, file: !980, line: 174, baseType: !1796, size: 2624, align: 64, offset: 14272)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "current_picture", scope: !979, file: !980, line: 180, baseType: !1796, size: 2624, align: 64, offset: 16896)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture_ptr", scope: !979, file: !980, line: 182, baseType: !1795, size: 64, align: 64, offset: 19520)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "next_picture_ptr", scope: !979, file: !980, line: 183, baseType: !1795, size: 64, align: 64, offset: 19584)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "current_picture_ptr", scope: !979, file: !980, line: 184, baseType: !1795, size: 64, align: 64, offset: 19648)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "last_dc", scope: !979, file: !980, line: 185, baseType: !1879, size: 96, align: 32, offset: 19712)
!1879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 96, align: 32, elements: !1880)
!1880 = !{!1881}
!1881 = !DISubrange(count: 3)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "dc_val_base", scope: !979, file: !980, line: 186, baseType: !969, size: 64, align: 64, offset: 19840)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "dc_val", scope: !979, file: !980, line: 187, baseType: !1884, size: 192, align: 64, offset: 19904)
!1884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 192, align: 64, elements: !1880)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "y_dc_scale_table", scope: !979, file: !980, line: 188, baseType: !1077, size: 64, align: 64, offset: 20096)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "c_dc_scale_table", scope: !979, file: !980, line: 189, baseType: !1077, size: 64, align: 64, offset: 20160)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qscale_table", scope: !979, file: !980, line: 190, baseType: !1077, size: 64, align: 64, offset: 20224)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "coded_block_base", scope: !979, file: !980, line: 191, baseType: !1167, size: 64, align: 64, offset: 20288)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "coded_block", scope: !979, file: !980, line: 192, baseType: !1167, size: 64, align: 64, offset: 20352)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ac_val_base", scope: !979, file: !980, line: 193, baseType: !1891, size: 64, align: 64, offset: 20416)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64, align: 64)
!1892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 256, align: 16, elements: !1893)
!1893 = !{!1894}
!1894 = !DISubrange(count: 16)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "ac_val", scope: !979, file: !980, line: 194, baseType: !1896, size: 192, align: 64, offset: 20480)
!1896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 192, align: 64, elements: !1880)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "mb_skipped", scope: !979, file: !980, line: 195, baseType: !952, size: 32, align: 32, offset: 20672)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !979, file: !980, line: 196, baseType: !1167, size: 64, align: 64, offset: 20736)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "mbintra_table", scope: !979, file: !980, line: 198, baseType: !1167, size: 64, align: 64, offset: 20800)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "cbp_table", scope: !979, file: !980, line: 199, baseType: !1167, size: 64, align: 64, offset: 20864)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pred_dir_table", scope: !979, file: !980, line: 200, baseType: !1167, size: 64, align: 64, offset: 20928)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "sc", scope: !979, file: !980, line: 202, baseType: !1903, size: 256, align: 64, offset: 20992)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScratchpadContext", file: !1797, line: 40, baseType: !1904)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScratchpadContext", file: !1797, line: 35, size: 256, align: 64, elements: !1905)
!1905 = !{!1906, !1907, !1908, !1909}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "edge_emu_buffer", scope: !1904, file: !1797, line: 36, baseType: !1167, size: 64, align: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "rd_scratchpad", scope: !1904, file: !1797, line: 37, baseType: !1167, size: 64, align: 64, offset: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "obmc_scratchpad", scope: !1904, file: !1797, line: 38, baseType: !1167, size: 64, align: 64, offset: 128)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "b_scratchpad", scope: !1904, file: !1797, line: 39, baseType: !1167, size: 64, align: 64, offset: 192)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !979, file: !980, line: 204, baseType: !952, size: 32, align: 32, offset: 21248)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qscale", scope: !979, file: !980, line: 205, baseType: !952, size: 32, align: 32, offset: 21280)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "lambda", scope: !979, file: !980, line: 206, baseType: !945, size: 32, align: 32, offset: 21312)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "lambda2", scope: !979, file: !980, line: 207, baseType: !945, size: 32, align: 32, offset: 21344)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "lambda_table", scope: !979, file: !980, line: 208, baseType: !1331, size: 64, align: 64, offset: 21376)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "adaptive_quant", scope: !979, file: !980, line: 209, baseType: !952, size: 32, align: 32, offset: 21440)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "dquant", scope: !979, file: !980, line: 210, baseType: !952, size: 32, align: 32, offset: 21472)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "closed_gop", scope: !979, file: !980, line: 211, baseType: !952, size: 32, align: 32, offset: 21504)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !979, file: !980, line: 212, baseType: !952, size: 32, align: 32, offset: 21536)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !979, file: !980, line: 213, baseType: !952, size: 32, align: 32, offset: 21568)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "last_pict_type", scope: !979, file: !980, line: 214, baseType: !952, size: 32, align: 32, offset: 21600)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "last_non_b_pict_type", scope: !979, file: !980, line: 215, baseType: !952, size: 32, align: 32, offset: 21632)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "droppable", scope: !979, file: !980, line: 216, baseType: !952, size: 32, align: 32, offset: 21664)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate_index", scope: !979, file: !980, line: 217, baseType: !952, size: 32, align: 32, offset: 21696)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg2_frame_rate_ext", scope: !979, file: !980, line: 218, baseType: !1013, size: 64, align: 32, offset: 21728)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "last_lambda_for", scope: !979, file: !980, line: 219, baseType: !1926, size: 160, align: 32, offset: 21792)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 160, align: 32, elements: !1927)
!1927 = !{!1928}
!1928 = !DISubrange(count: 5)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "skipdct", scope: !979, file: !980, line: 220, baseType: !952, size: 32, align: 32, offset: 21952)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "unrestricted_mv", scope: !979, file: !980, line: 223, baseType: !952, size: 32, align: 32, offset: 21984)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "h263_long_vectors", scope: !979, file: !980, line: 224, baseType: !952, size: 32, align: 32, offset: 22016)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !979, file: !980, line: 226, baseType: !1933, size: 256, align: 64, offset: 22080)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockDSPContext", file: !1934, line: 40, baseType: !1935)
!1934 = !DIFile(filename: "libavcodec/blockdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BlockDSPContext", file: !1934, line: 35, size: 256, align: 64, elements: !1936)
!1936 = !{!1937, !1941, !1942}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "clear_block", scope: !1935, file: !1934, line: 36, baseType: !1938, size: 64, align: 64)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64, align: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{null, !969}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "clear_blocks", scope: !1935, file: !1934, line: 37, baseType: !1938, size: 64, align: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "fill_block_tab", scope: !1935, file: !1934, line: 39, baseType: !1943, size: 128, align: 64, offset: 128)
!1943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1944, size: 128, align: 64, elements: !1810)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_fill_func", file: !1934, line: 32, baseType: !1945)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64, align: 64)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{null, !1167, !1079, !1792, !952}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !979, file: !980, line: 227, baseType: !1949, size: 128, align: 64, offset: 22336)
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "FDCTDSPContext", file: !1950, line: 29, baseType: !1951)
!1950 = !DIFile(filename: "libavcodec/fdctdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FDCTDSPContext", file: !1950, line: 26, size: 128, align: 64, elements: !1952)
!1952 = !{!1953, !1954}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "fdct", scope: !1951, file: !1950, line: 27, baseType: !1938, size: 64, align: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "fdct248", scope: !1951, file: !1950, line: 28, baseType: !1938, size: 64, align: 64, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "h264chroma", scope: !979, file: !980, line: 228, baseType: !1956, size: 512, align: 64, offset: 22464)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "H264ChromaContext", file: !1957, line: 30, baseType: !1958)
!1957 = !DIFile(filename: "libavcodec/h264chroma.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H264ChromaContext", file: !1957, line: 27, size: 512, align: 64, elements: !1959)
!1959 = !{!1960, !1966}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "put_h264_chroma_pixels_tab", scope: !1958, file: !1957, line: 28, baseType: !1961, size: 256, align: 64)
!1961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1962, size: 256, align: 64, elements: !1201)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "h264_chroma_mc_func", file: !1957, line: 25, baseType: !1963)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64, align: 64)
!1964 = !DISubroutineType(types: !1965)
!1965 = !{null, !1167, !1167, !1792, !952, !952, !952}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "avg_h264_chroma_pixels_tab", scope: !1958, file: !1957, line: 29, baseType: !1961, size: 256, align: 64, offset: 256)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "hdsp", scope: !979, file: !980, line: 229, baseType: !1968, size: 3328, align: 64, offset: 22976)
!1968 = !DIDerivedType(tag: DW_TAG_typedef, name: "HpelDSPContext", file: !1969, line: 95, baseType: !1970)
!1969 = !DIFile(filename: "libavcodec/hpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HpelDSPContext", file: !1969, line: 45, size: 3328, align: 64, elements: !1971)
!1971 = !{!1972, !1979, !1980, !1981}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_tab", scope: !1970, file: !1969, line: 56, baseType: !1973, size: 1024, align: 64)
!1973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1974, size: 1024, align: 64, elements: !1978)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_pixels_func", file: !1969, line: 38, baseType: !1975)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64, align: 64)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{null, !1167, !1077, !1792, !952}
!1978 = !{!1202, !1202}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "avg_pixels_tab", scope: !1970, file: !1969, line: 68, baseType: !1973, size: 1024, align: 64, offset: 1024)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_pixels_tab", scope: !1970, file: !1969, line: 82, baseType: !1973, size: 1024, align: 64, offset: 2048)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "avg_no_rnd_pixels_tab", scope: !1970, file: !1969, line: 94, baseType: !1982, size: 256, align: 64, offset: 3072)
!1982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1974, size: 256, align: 64, elements: !1201)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "idsp", scope: !979, file: !980, line: 230, baseType: !1984, size: 960, align: 64, offset: 26304)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDCTDSPContext", file: !917, line: 100, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDCTDSPContext", file: !917, line: 53, size: 960, align: 64, elements: !1986)
!1986 = !{!1987, !1994, !1995, !1996, !1997, !2001, !2002, !2003, !2004}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_clamped", scope: !1985, file: !917, line: 55, baseType: !1988, size: 64, align: 64)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64, align: 64)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{null, !1991, !1993, !1792}
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64, align: 64)
!1992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!1993 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1167)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "put_signed_pixels_clamped", scope: !1985, file: !917, line: 58, baseType: !1988, size: 64, align: 64, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "add_pixels_clamped", scope: !1985, file: !917, line: 61, baseType: !1988, size: 64, align: 64, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "idct", scope: !1985, file: !917, line: 65, baseType: !1938, size: 64, align: 64, offset: 192)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "idct_put", scope: !1985, file: !917, line: 72, baseType: !1998, size: 64, align: 64, offset: 256)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64, align: 64)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{null, !1167, !1792, !969}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "idct_add", scope: !1985, file: !917, line: 79, baseType: !1998, size: 64, align: 64, offset: 320)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "idct_permutation", scope: !1985, file: !917, line: 96, baseType: !1082, size: 512, align: 8, offset: 384)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "perm_type", scope: !1985, file: !917, line: 97, baseType: !916, size: 32, align: 32, offset: 896)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg4_studio_profile", scope: !1985, file: !917, line: 99, baseType: !952, size: 32, align: 32, offset: 928)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "mecc", scope: !979, file: !980, line: 231, baseType: !961, size: 8640, align: 64, offset: 27264)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "mdsp", scope: !979, file: !980, line: 232, baseType: !2007, size: 128, align: 64, offset: 35904)
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "MpegVideoDSPContext", file: !2008, line: 41, baseType: !2009)
!2008 = !DIFile(filename: "libavcodec/mpegvideodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MpegVideoDSPContext", file: !2008, line: 28, size: 128, align: 64, elements: !2010)
!2010 = !{!2011, !2015}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "gmc1", scope: !2009, file: !2008, line: 32, baseType: !2012, size: 64, align: 64)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64, align: 64)
!2013 = !DISubroutineType(types: !2014)
!2014 = !{null, !1167, !1167, !952, !952, !952, !952, !952}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "gmc", scope: !2009, file: !2008, line: 37, baseType: !2016, size: 64, align: 64, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64, align: 64)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{null, !1167, !1167, !952, !952, !952, !952, !952, !952, !952, !952, !952, !952, !952, !952}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "mpvencdsp", scope: !979, file: !980, line: 233, baseType: !2020, size: 576, align: 64, offset: 36032)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "MpegvideoEncDSPContext", file: !2021, line: 45, baseType: !2022)
!2021 = !DIFile(filename: "libavcodec/mpegvideoencdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MpegvideoEncDSPContext", file: !2021, line: 32, size: 576, align: 64, elements: !2023)
!2023 = !{!2024, !2028, !2032, !2036, !2037, !2042}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "try_8x8basis", scope: !2022, file: !2021, line: 33, baseType: !2025, size: 64, align: 64)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64, align: 64)
!2026 = !DISubroutineType(types: !2027)
!2027 = !{!952, !969, !969, !969, !952}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "add_8x8basis", scope: !2022, file: !2021, line: 35, baseType: !2029, size: 64, align: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64, align: 64)
!2030 = !DISubroutineType(types: !2031)
!2031 = !{null, !969, !969, !952}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "pix_sum", scope: !2022, file: !2021, line: 37, baseType: !2033, size: 64, align: 64, offset: 128)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64, align: 64)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!952, !1167, !952}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "pix_norm1", scope: !2022, file: !2021, line: 38, baseType: !2033, size: 64, align: 64, offset: 192)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "shrink", scope: !2022, file: !2021, line: 40, baseType: !2038, size: 256, align: 64, offset: 256)
!2038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2039, size: 256, align: 64, elements: !1201)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64, align: 64)
!2040 = !DISubroutineType(types: !2041)
!2041 = !{null, !1167, !952, !1077, !952, !952, !952}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "draw_edges", scope: !2022, file: !2021, line: 43, baseType: !2043, size: 64, align: 64, offset: 512)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64, align: 64)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{null, !1167, !952, !952, !952, !952, !952, !952}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "pdsp", scope: !979, file: !980, line: 234, baseType: !2047, size: 192, align: 64, offset: 36608)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixblockDSPContext", file: !2048, line: 41, baseType: !2049)
!2048 = !DIFile(filename: "libavcodec/pixblockdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PixblockDSPContext", file: !2048, line: 28, size: 192, align: 64, elements: !2050)
!2050 = !{!2051, !2056, !2060}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "get_pixels", scope: !2049, file: !2048, line: 29, baseType: !2052, size: 64, align: 64)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64, align: 64)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{null, !2055, !1077, !1792}
!2055 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !969)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "diff_pixels", scope: !2049, file: !2048, line: 32, baseType: !2057, size: 64, align: 64, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64, align: 64)
!2058 = !DISubroutineType(types: !2059)
!2059 = !{null, !2055, !1077, !1077, !1792}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "diff_pixels_unaligned", scope: !2049, file: !2048, line: 36, baseType: !2057, size: 64, align: 64, offset: 128)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "qdsp", scope: !979, file: !980, line: 235, baseType: !2062, size: 6144, align: 64, offset: 36800)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "QpelDSPContext", file: !2063, line: 76, baseType: !2064)
!2063 = !DIFile(filename: "libavcodec/qpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QpelDSPContext", file: !2063, line: 72, size: 6144, align: 64, elements: !2065)
!2065 = !{!2066, !2073, !2074}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "put_qpel_pixels_tab", scope: !2064, file: !2063, line: 73, baseType: !2067, size: 2048, align: 64)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2068, size: 2048, align: 64, elements: !2072)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "qpel_mc_func", file: !2063, line: 65, baseType: !2069)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64, align: 64)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{null, !1167, !1077, !1792}
!2072 = !{!1811, !1894}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "avg_qpel_pixels_tab", scope: !2064, file: !2063, line: 74, baseType: !2067, size: 2048, align: 64, offset: 2048)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_qpel_pixels_tab", scope: !2064, file: !2063, line: 75, baseType: !2067, size: 2048, align: 64, offset: 4096)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "vdsp", scope: !979, file: !980, line: 236, baseType: !2076, size: 128, align: 64, offset: 42944)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "VideoDSPContext", file: !2077, line: 77, baseType: !2078)
!2077 = !DIFile(filename: "libavcodec/videodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VideoDSPContext", file: !2077, line: 41, size: 128, align: 64, elements: !2079)
!2079 = !{!2080, !2084}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "emulated_edge_mc", scope: !2078, file: !2077, line: 63, baseType: !2081, size: 64, align: 64)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64, align: 64)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{null, !1167, !1077, !1792, !1792, !952, !952, !952, !952, !952, !952}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch", scope: !2078, file: !2077, line: 76, baseType: !2085, size: 64, align: 64, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64, align: 64)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{null, !1167, !1792, !952}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "h263dsp", scope: !979, file: !980, line: 237, baseType: !2089, size: 128, align: 64, offset: 43072)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "H263DSPContext", file: !2090, line: 29, baseType: !2091)
!2090 = !DIFile(filename: "libavcodec/h263dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H263DSPContext", file: !2090, line: 26, size: 128, align: 64, elements: !2092)
!2092 = !{!2093, !2097}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "h263_h_loop_filter", scope: !2091, file: !2090, line: 27, baseType: !2094, size: 64, align: 64)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64, align: 64)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{null, !1167, !952, !952}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "h263_v_loop_filter", scope: !2091, file: !2090, line: 28, baseType: !2094, size: 64, align: 64, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "f_code", scope: !979, file: !980, line: 238, baseType: !952, size: 32, align: 32, offset: 43200)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "b_code", scope: !979, file: !980, line: 239, baseType: !952, size: 32, align: 32, offset: 43232)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "p_mv_table_base", scope: !979, file: !980, line: 240, baseType: !1819, size: 64, align: 64, offset: 43264)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "b_forw_mv_table_base", scope: !979, file: !980, line: 241, baseType: !1819, size: 64, align: 64, offset: 43328)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "b_back_mv_table_base", scope: !979, file: !980, line: 242, baseType: !1819, size: 64, align: 64, offset: 43392)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_forw_mv_table_base", scope: !979, file: !980, line: 243, baseType: !1819, size: 64, align: 64, offset: 43456)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_back_mv_table_base", scope: !979, file: !980, line: 244, baseType: !1819, size: 64, align: 64, offset: 43520)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_mv_table_base", scope: !979, file: !980, line: 245, baseType: !1819, size: 64, align: 64, offset: 43584)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "p_field_mv_table_base", scope: !979, file: !980, line: 246, baseType: !2107, size: 256, align: 64, offset: 43648)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 256, align: 64, elements: !2108)
!2108 = !{!1811, !1811}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_mv_table_base", scope: !979, file: !980, line: 247, baseType: !2110, size: 512, align: 64, offset: 43904)
!2110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 512, align: 64, elements: !2111)
!2111 = !{!1811, !1811, !1811}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "p_mv_table", scope: !979, file: !980, line: 248, baseType: !1819, size: 64, align: 64, offset: 44416)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "b_forw_mv_table", scope: !979, file: !980, line: 249, baseType: !1819, size: 64, align: 64, offset: 44480)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "b_back_mv_table", scope: !979, file: !980, line: 250, baseType: !1819, size: 64, align: 64, offset: 44544)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_forw_mv_table", scope: !979, file: !980, line: 251, baseType: !1819, size: 64, align: 64, offset: 44608)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_back_mv_table", scope: !979, file: !980, line: 252, baseType: !1819, size: 64, align: 64, offset: 44672)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_mv_table", scope: !979, file: !980, line: 253, baseType: !1819, size: 64, align: 64, offset: 44736)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "p_field_mv_table", scope: !979, file: !980, line: 254, baseType: !2107, size: 256, align: 64, offset: 44800)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_mv_table", scope: !979, file: !980, line: 255, baseType: !2110, size: 512, align: 64, offset: 45056)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "p_field_select_table", scope: !979, file: !980, line: 256, baseType: !2121, size: 128, align: 64, offset: 45568)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1167, size: 128, align: 64, elements: !1810)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_select_table", scope: !979, file: !980, line: 257, baseType: !2123, size: 256, align: 64, offset: 45696)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1167, size: 256, align: 64, elements: !2108)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "motion_est", scope: !979, file: !980, line: 258, baseType: !952, size: 32, align: 32, offset: 45952)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !979, file: !980, line: 259, baseType: !952, size: 32, align: 32, offset: 45984)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre", scope: !979, file: !980, line: 260, baseType: !952, size: 32, align: 32, offset: 46016)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "mv_dir", scope: !979, file: !980, line: 261, baseType: !952, size: 32, align: 32, offset: 46048)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "mv_type", scope: !979, file: !980, line: 265, baseType: !952, size: 32, align: 32, offset: 46080)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !979, file: !980, line: 276, baseType: !2130, size: 512, align: 32, offset: 46112)
!2130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 512, align: 32, elements: !2131)
!2131 = !{!1811, !1202, !1811}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "field_select", scope: !979, file: !980, line: 277, baseType: !2133, size: 128, align: 32, offset: 46624)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 128, align: 32, elements: !2108)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "last_mv", scope: !979, file: !980, line: 278, baseType: !2135, size: 256, align: 32, offset: 46752)
!2135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 256, align: 32, elements: !2111)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "fcode_tab", scope: !979, file: !980, line: 279, baseType: !1167, size: 64, align: 64, offset: 47040)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "direct_scale_mv", scope: !979, file: !980, line: 280, baseType: !2138, size: 2048, align: 16, offset: 47104)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 2048, align: 16, elements: !2139)
!2139 = !{!1811, !1084}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "me", scope: !979, file: !980, line: 282, baseType: !2141, size: 4416, align: 64, offset: 49152)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "MotionEstContext", file: !2142, line: 99, baseType: !2143)
!2142 = !DIFile(filename: "libavcodec/motion_est.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MotionEstContext", file: !2142, line: 47, size: 4416, align: 64, elements: !2144)
!2144 = !{!2145, !2146, !2147, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2184, !2185, !2188, !2189, !2194, !2195}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2143, file: !2142, line: 48, baseType: !1141, size: 64, align: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !2143, file: !2142, line: 49, baseType: !952, size: 32, align: 32, offset: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "co_located_mv", scope: !2143, file: !2142, line: 50, baseType: !2148, size: 256, align: 32, offset: 96)
!2148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 256, align: 32, elements: !2149)
!2149 = !{!1202, !1811}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "direct_basis_mv", scope: !2143, file: !2142, line: 51, baseType: !2148, size: 256, align: 32, offset: 352)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "scratchpad", scope: !2143, file: !2142, line: 52, baseType: !1167, size: 64, align: 64, offset: 640)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "best_mb", scope: !2143, file: !2142, line: 54, baseType: !1167, size: 64, align: 64, offset: 704)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "temp_mb", scope: !2143, file: !2142, line: 55, baseType: !2121, size: 128, align: 64, offset: 768)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2143, file: !2142, line: 56, baseType: !1167, size: 64, align: 64, offset: 896)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "best_bits", scope: !2143, file: !2142, line: 57, baseType: !952, size: 32, align: 32, offset: 960)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2143, file: !2142, line: 58, baseType: !1823, size: 64, align: 64, offset: 1024)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "score_map", scope: !2143, file: !2142, line: 59, baseType: !1823, size: 64, align: 64, offset: 1088)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "map_generation", scope: !2143, file: !2142, line: 60, baseType: !945, size: 32, align: 32, offset: 1152)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "pre_penalty_factor", scope: !2143, file: !2142, line: 61, baseType: !952, size: 32, align: 32, offset: 1184)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "penalty_factor", scope: !2143, file: !2142, line: 62, baseType: !952, size: 32, align: 32, offset: 1216)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "sub_penalty_factor", scope: !2143, file: !2142, line: 67, baseType: !952, size: 32, align: 32, offset: 1248)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "mb_penalty_factor", scope: !2143, file: !2142, line: 68, baseType: !952, size: 32, align: 32, offset: 1280)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2143, file: !2142, line: 69, baseType: !952, size: 32, align: 32, offset: 1312)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "sub_flags", scope: !2143, file: !2142, line: 70, baseType: !952, size: 32, align: 32, offset: 1344)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "mb_flags", scope: !2143, file: !2142, line: 71, baseType: !952, size: 32, align: 32, offset: 1376)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "pre_pass", scope: !2143, file: !2142, line: 72, baseType: !952, size: 32, align: 32, offset: 1408)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !2143, file: !2142, line: 73, baseType: !952, size: 32, align: 32, offset: 1440)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2143, file: !2142, line: 74, baseType: !952, size: 32, align: 32, offset: 1472)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2143, file: !2142, line: 75, baseType: !952, size: 32, align: 32, offset: 1504)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2143, file: !2142, line: 76, baseType: !952, size: 32, align: 32, offset: 1536)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2143, file: !2142, line: 77, baseType: !952, size: 32, align: 32, offset: 1568)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "pred_x", scope: !2143, file: !2142, line: 78, baseType: !952, size: 32, align: 32, offset: 1600)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "pred_y", scope: !2143, file: !2142, line: 79, baseType: !952, size: 32, align: 32, offset: 1632)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2143, file: !2142, line: 80, baseType: !2175, size: 1024, align: 64, offset: 1664)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1167, size: 1024, align: 64, elements: !1978)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2143, file: !2142, line: 81, baseType: !2175, size: 1024, align: 64, offset: 2688)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2143, file: !2142, line: 82, baseType: !952, size: 32, align: 32, offset: 3712)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "uvstride", scope: !2143, file: !2142, line: 83, baseType: !952, size: 32, align: 32, offset: 3744)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum_temp", scope: !2143, file: !2142, line: 85, baseType: !1008, size: 64, align: 64, offset: 3776)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum_temp", scope: !2143, file: !2142, line: 86, baseType: !1008, size: 64, align: 64, offset: 3840)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "scene_change_score", scope: !2143, file: !2142, line: 87, baseType: !952, size: 32, align: 32, offset: 3904)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "hpel_put", scope: !2143, file: !2142, line: 89, baseType: !2183, size: 64, align: 64, offset: 3968)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64, align: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "hpel_avg", scope: !2143, file: !2142, line: 90, baseType: !2183, size: 64, align: 64, offset: 4032)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "qpel_put", scope: !2143, file: !2142, line: 91, baseType: !2186, size: 64, align: 64, offset: 4096)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64, align: 64)
!2187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2068, size: 1024, align: 64, elements: !1893)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "qpel_avg", scope: !2143, file: !2142, line: 92, baseType: !2186, size: 64, align: 64, offset: 4160)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "mv_penalty", scope: !2143, file: !2142, line: 93, baseType: !2190, size: 64, align: 64, offset: 4224)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64, align: 64)
!2191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1079, size: 131080, align: 8, elements: !2192)
!2192 = !{!2193}
!2193 = !DISubrange(count: 16385)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "current_mv_penalty", scope: !2143, file: !2142, line: 94, baseType: !1167, size: 64, align: 64, offset: 4288)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "sub_motion_search", scope: !2143, file: !2142, line: 95, baseType: !2196, size: 64, align: 64, offset: 4352)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64, align: 64)
!2197 = !DISubroutineType(types: !2198)
!2198 = !{!952, !978, !1331, !1331, !952, !952, !952, !952, !952}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "no_rounding", scope: !979, file: !980, line: 284, baseType: !952, size: 32, align: 32, offset: 53568)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "mb_x", scope: !979, file: !980, line: 288, baseType: !952, size: 32, align: 32, offset: 53600)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "mb_y", scope: !979, file: !980, line: 288, baseType: !952, size: 32, align: 32, offset: 53632)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "mb_skip_run", scope: !979, file: !980, line: 289, baseType: !952, size: 32, align: 32, offset: 53664)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "mb_intra", scope: !979, file: !980, line: 290, baseType: !952, size: 32, align: 32, offset: 53696)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !979, file: !980, line: 291, baseType: !1552, size: 64, align: 64, offset: 53760)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "block_index", scope: !979, file: !980, line: 293, baseType: !2206, size: 192, align: 32, offset: 53824)
!2206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 192, align: 32, elements: !2207)
!2207 = !{!2208}
!2208 = !DISubrange(count: 6)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "block_wrap", scope: !979, file: !980, line: 294, baseType: !2206, size: 192, align: 32, offset: 54016)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !979, file: !980, line: 295, baseType: !2211, size: 192, align: 64, offset: 54208)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1167, size: 192, align: 64, elements: !1880)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "mb_index2xy", scope: !979, file: !980, line: 297, baseType: !1331, size: 64, align: 64, offset: 54400)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !979, file: !980, line: 300, baseType: !2214, size: 1024, align: 16, offset: 54464)
!2214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1173, size: 1024, align: 16, elements: !1083)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !979, file: !980, line: 301, baseType: !2214, size: 1024, align: 16, offset: 55488)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !979, file: !980, line: 302, baseType: !2214, size: 1024, align: 16, offset: 56512)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_inter_matrix", scope: !979, file: !980, line: 303, baseType: !2214, size: 1024, align: 16, offset: 57536)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "force_duplicated_matrix", scope: !979, file: !980, line: 304, baseType: !952, size: 32, align: 32, offset: 58560)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "intra_quant_bias", scope: !979, file: !980, line: 306, baseType: !952, size: 32, align: 32, offset: 58592)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "inter_quant_bias", scope: !979, file: !980, line: 307, baseType: !952, size: 32, align: 32, offset: 58624)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "min_qcoeff", scope: !979, file: !980, line: 308, baseType: !952, size: 32, align: 32, offset: 58656)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "max_qcoeff", scope: !979, file: !980, line: 309, baseType: !952, size: 32, align: 32, offset: 58688)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "ac_esc_length", scope: !979, file: !980, line: 310, baseType: !952, size: 32, align: 32, offset: 58720)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "intra_ac_vlc_length", scope: !979, file: !980, line: 311, baseType: !1167, size: 64, align: 64, offset: 58752)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "intra_ac_vlc_last_length", scope: !979, file: !980, line: 312, baseType: !1167, size: 64, align: 64, offset: 58816)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "intra_chroma_ac_vlc_length", scope: !979, file: !980, line: 313, baseType: !1167, size: 64, align: 64, offset: 58880)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "intra_chroma_ac_vlc_last_length", scope: !979, file: !980, line: 314, baseType: !1167, size: 64, align: 64, offset: 58944)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "inter_ac_vlc_length", scope: !979, file: !980, line: 315, baseType: !1167, size: 64, align: 64, offset: 59008)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "inter_ac_vlc_last_length", scope: !979, file: !980, line: 316, baseType: !1167, size: 64, align: 64, offset: 59072)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "luma_dc_vlc_length", scope: !979, file: !980, line: 317, baseType: !1167, size: 64, align: 64, offset: 59136)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "coded_score", scope: !979, file: !980, line: 320, baseType: !1068, size: 384, align: 32, offset: 59200)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "q_intra_matrix", scope: !979, file: !980, line: 323, baseType: !2233, size: 64, align: 64, offset: 59584)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64, align: 64)
!2234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 2048, align: 32, elements: !1083)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "q_chroma_intra_matrix", scope: !979, file: !980, line: 324, baseType: !2233, size: 64, align: 64, offset: 59648)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "q_inter_matrix", scope: !979, file: !980, line: 325, baseType: !2233, size: 64, align: 64, offset: 59712)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "q_intra_matrix16", scope: !979, file: !980, line: 327, baseType: !2238, size: 64, align: 64, offset: 59776)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64, align: 64)
!2239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1173, size: 2048, align: 16, elements: !2139)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "q_chroma_intra_matrix16", scope: !979, file: !980, line: 328, baseType: !2238, size: 64, align: 64, offset: 59840)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "q_inter_matrix16", scope: !979, file: !980, line: 329, baseType: !2238, size: 64, align: 64, offset: 59904)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "dct_error_sum", scope: !979, file: !980, line: 332, baseType: !2233, size: 64, align: 64, offset: 59968)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "dct_count", scope: !979, file: !980, line: 333, baseType: !2244, size: 64, align: 32, offset: 60032)
!2244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 64, align: 32, elements: !1810)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "dct_offset", scope: !979, file: !980, line: 334, baseType: !2246, size: 64, align: 64, offset: 60096)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64, align: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "total_bits", scope: !979, file: !980, line: 337, baseType: !1008, size: 64, align: 64, offset: 60160)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !979, file: !980, line: 338, baseType: !952, size: 32, align: 32, offset: 60224)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "stuffing_bits", scope: !979, file: !980, line: 339, baseType: !952, size: 32, align: 32, offset: 60256)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "next_lambda", scope: !979, file: !980, line: 340, baseType: !952, size: 32, align: 32, offset: 60288)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "rc_context", scope: !979, file: !980, line: 341, baseType: !2252, size: 3584, align: 64, offset: 60352)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "RateControlContext", file: !2253, line: 87, baseType: !2254)
!2253 = !DIFile(filename: "libavcodec/ratecontrol.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RateControlContext", file: !2253, line: 63, size: 3584, align: 64, elements: !2255)
!2255 = !{!2256, !2257, !2278, !2279, !2287, !2288, !2289, !2290, !2291, !2292, !2294, !2295, !2296, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !2254, file: !2253, line: 64, baseType: !952, size: 32, align: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2254, file: !2253, line: 65, baseType: !2258, size: 64, align: 64, offset: 64)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64, align: 64)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "RateControlEntry", file: !2253, line: 58, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RateControlEntry", file: !2253, line: 41, size: 640, align: 64, elements: !2261)
!2261 = !{!2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !2260, file: !2253, line: 42, baseType: !952, size: 32, align: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !2260, file: !2253, line: 43, baseType: !1522, size: 32, align: 32, offset: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !2260, file: !2253, line: 44, baseType: !952, size: 32, align: 32, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !2260, file: !2253, line: 45, baseType: !952, size: 32, align: 32, offset: 96)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !2260, file: !2253, line: 46, baseType: !952, size: 32, align: 32, offset: 128)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !2260, file: !2253, line: 47, baseType: !952, size: 32, align: 32, offset: 160)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !2260, file: !2253, line: 48, baseType: !952, size: 32, align: 32, offset: 192)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "expected_bits", scope: !2260, file: !2253, line: 49, baseType: !936, size: 64, align: 64, offset: 256)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "new_pict_type", scope: !2260, file: !2253, line: 50, baseType: !952, size: 32, align: 32, offset: 320)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "new_qscale", scope: !2260, file: !2253, line: 51, baseType: !1522, size: 32, align: 32, offset: 352)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum", scope: !2260, file: !2253, line: 52, baseType: !1008, size: 64, align: 64, offset: 384)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum", scope: !2260, file: !2253, line: 53, baseType: !1008, size: 64, align: 64, offset: 448)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !2260, file: !2253, line: 54, baseType: !952, size: 32, align: 32, offset: 512)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !2260, file: !2253, line: 55, baseType: !952, size: 32, align: 32, offset: 544)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "f_code", scope: !2260, file: !2253, line: 56, baseType: !952, size: 32, align: 32, offset: 576)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "b_code", scope: !2260, file: !2253, line: 57, baseType: !952, size: 32, align: 32, offset: 608)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_index", scope: !2254, file: !2253, line: 66, baseType: !1010, size: 64, align: 64, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !2254, file: !2253, line: 67, baseType: !2280, size: 960, align: 64, offset: 192)
!2280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2281, size: 960, align: 64, elements: !1927)
!2281 = !DIDerivedType(tag: DW_TAG_typedef, name: "Predictor", file: !2253, line: 39, baseType: !2282)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Predictor", file: !2253, line: 35, size: 192, align: 64, elements: !2283)
!2283 = !{!2284, !2285, !2286}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !2282, file: !2253, line: 36, baseType: !1010, size: 64, align: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2282, file: !2253, line: 37, baseType: !1010, size: 64, align: 64, offset: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "decay", scope: !2282, file: !2253, line: 38, baseType: !1010, size: 64, align: 64, offset: 128)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "short_term_qsum", scope: !2254, file: !2253, line: 68, baseType: !1010, size: 64, align: 64, offset: 1152)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "short_term_qcount", scope: !2254, file: !2253, line: 69, baseType: !1010, size: 64, align: 64, offset: 1216)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "pass1_rc_eq_output_sum", scope: !2254, file: !2253, line: 70, baseType: !1010, size: 64, align: 64, offset: 1280)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "pass1_wanted_bits", scope: !2254, file: !2253, line: 71, baseType: !1010, size: 64, align: 64, offset: 1344)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "last_qscale", scope: !2254, file: !2253, line: 72, baseType: !1010, size: 64, align: 64, offset: 1408)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "last_qscale_for", scope: !2254, file: !2253, line: 73, baseType: !2293, size: 320, align: 64, offset: 1472)
!2293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 320, align: 64, elements: !1927)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "last_mc_mb_var_sum", scope: !2254, file: !2253, line: 74, baseType: !1008, size: 64, align: 64, offset: 1792)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "last_mb_var_sum", scope: !2254, file: !2253, line: 75, baseType: !1008, size: 64, align: 64, offset: 1856)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "i_cplx_sum", scope: !2254, file: !2253, line: 76, baseType: !2297, size: 320, align: 64, offset: 1920)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 320, align: 64, elements: !1927)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "p_cplx_sum", scope: !2254, file: !2253, line: 77, baseType: !2297, size: 320, align: 64, offset: 2240)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits_sum", scope: !2254, file: !2253, line: 78, baseType: !2297, size: 320, align: 64, offset: 2560)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_sum", scope: !2254, file: !2253, line: 79, baseType: !2297, size: 320, align: 64, offset: 2880)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count", scope: !2254, file: !2253, line: 80, baseType: !1926, size: 160, align: 32, offset: 3200)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "last_non_b_pict_type", scope: !2254, file: !2253, line: 81, baseType: !952, size: 32, align: 32, offset: 3360)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "non_lavc_opaque", scope: !2254, file: !2253, line: 83, baseType: !926, size: 64, align: 64, offset: 3392)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "dry_run_qscale", scope: !2254, file: !2253, line: 84, baseType: !1522, size: 32, align: 32, offset: 3456)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture_number", scope: !2254, file: !2253, line: 85, baseType: !952, size: 32, align: 32, offset: 3488)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "rc_eq_eval", scope: !2254, file: !2253, line: 86, baseType: !2307, size: 64, align: 64, offset: 3520)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64, align: 64)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVExpr", file: !2309, line: 31, baseType: !2310)
!2309 = !DIFile(filename: "./libavutil/eval.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2310 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVExpr", file: !2309, line: 31, flags: DIFlagFwdDecl)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !979, file: !980, line: 344, baseType: !952, size: 32, align: 32, offset: 63936)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !979, file: !980, line: 345, baseType: !952, size: 32, align: 32, offset: 63968)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !979, file: !980, line: 346, baseType: !952, size: 32, align: 32, offset: 64000)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !979, file: !980, line: 347, baseType: !952, size: 32, align: 32, offset: 64032)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !979, file: !980, line: 348, baseType: !952, size: 32, align: 32, offset: 64064)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !979, file: !980, line: 349, baseType: !952, size: 32, align: 32, offset: 64096)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "b_count", scope: !979, file: !980, line: 350, baseType: !952, size: 32, align: 32, offset: 64128)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !979, file: !980, line: 351, baseType: !952, size: 32, align: 32, offset: 64160)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !979, file: !980, line: 352, baseType: !952, size: 32, align: 32, offset: 64192)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "last_bits", scope: !979, file: !980, line: 353, baseType: !952, size: 32, align: 32, offset: 64224)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "resync_mb_x", scope: !979, file: !980, line: 356, baseType: !952, size: 32, align: 32, offset: 64256)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "resync_mb_y", scope: !979, file: !980, line: 357, baseType: !952, size: 32, align: 32, offset: 64288)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "last_resync_gb", scope: !979, file: !980, line: 358, baseType: !2324, size: 256, align: 64, offset: 64320)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !2325, line: 70, baseType: !2326)
!2325 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !2325, line: 61, size: 256, align: 64, elements: !2327)
!2327 = !{!2328, !2329, !2330, !2331, !2332}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2326, file: !2325, line: 62, baseType: !1077, size: 64, align: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2326, file: !2325, line: 62, baseType: !1077, size: 64, align: 64, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2326, file: !2325, line: 67, baseType: !952, size: 32, align: 32, offset: 128)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !2326, file: !2325, line: 68, baseType: !952, size: 32, align: 32, offset: 160)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !2326, file: !2325, line: 69, baseType: !952, size: 32, align: 32, offset: 192)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num_left", scope: !979, file: !980, line: 359, baseType: !952, size: 32, align: 32, offset: 64576)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "next_p_frame_damaged", scope: !979, file: !980, line: 360, baseType: !952, size: 32, align: 32, offset: 64608)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "parse_context", scope: !979, file: !980, line: 362, baseType: !2336, size: 384, align: 64, offset: 64640)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParseContext", file: !2337, line: 38, baseType: !2338)
!2337 = !DIFile(filename: "libavcodec/parser.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParseContext", file: !2337, line: 28, size: 384, align: 64, elements: !2339)
!2339 = !{!2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2338, file: !2337, line: 29, baseType: !1167, size: 64, align: 64)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2338, file: !2337, line: 30, baseType: !952, size: 32, align: 32, offset: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "last_index", scope: !2338, file: !2337, line: 31, baseType: !952, size: 32, align: 32, offset: 96)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !2338, file: !2337, line: 32, baseType: !945, size: 32, align: 32, offset: 128)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2338, file: !2337, line: 33, baseType: !944, size: 32, align: 32, offset: 160)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "frame_start_found", scope: !2338, file: !2337, line: 34, baseType: !952, size: 32, align: 32, offset: 192)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "overread", scope: !2338, file: !2337, line: 35, baseType: !952, size: 32, align: 32, offset: 224)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "overread_index", scope: !2338, file: !2337, line: 36, baseType: !952, size: 32, align: 32, offset: 256)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "state64", scope: !2338, file: !2337, line: 37, baseType: !936, size: 64, align: 64, offset: 320)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "gob_index", scope: !979, file: !980, line: 365, baseType: !952, size: 32, align: 32, offset: 65024)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "obmc", scope: !979, file: !980, line: 366, baseType: !952, size: 32, align: 32, offset: 65056)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "mb_info", scope: !979, file: !980, line: 367, baseType: !952, size: 32, align: 32, offset: 65088)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "prev_mb_info", scope: !979, file: !980, line: 368, baseType: !952, size: 32, align: 32, offset: 65120)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "last_mb_info", scope: !979, file: !980, line: 368, baseType: !952, size: 32, align: 32, offset: 65152)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "mb_info_ptr", scope: !979, file: !980, line: 369, baseType: !1167, size: 64, align: 64, offset: 65216)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "mb_info_size", scope: !979, file: !980, line: 370, baseType: !952, size: 32, align: 32, offset: 65280)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "ehc_mode", scope: !979, file: !980, line: 371, baseType: !952, size: 32, align: 32, offset: 65312)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "rc_strategy", scope: !979, file: !980, line: 372, baseType: !952, size: 32, align: 32, offset: 65344)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "umvplus", scope: !979, file: !980, line: 375, baseType: !952, size: 32, align: 32, offset: 65376)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "h263_aic_dir", scope: !979, file: !980, line: 376, baseType: !952, size: 32, align: 32, offset: 65408)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "h263_slice_structured", scope: !979, file: !980, line: 377, baseType: !952, size: 32, align: 32, offset: 65440)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "alt_inter_vlc", scope: !979, file: !980, line: 378, baseType: !952, size: 32, align: 32, offset: 65472)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "modified_quant", scope: !979, file: !980, line: 379, baseType: !952, size: 32, align: 32, offset: 65504)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter", scope: !979, file: !980, line: 380, baseType: !952, size: 32, align: 32, offset: 65536)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "custom_pcf", scope: !979, file: !980, line: 381, baseType: !952, size: 32, align: 32, offset: 65568)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "studio_profile", scope: !979, file: !980, line: 384, baseType: !952, size: 32, align: 32, offset: 65600)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "dct_precision", scope: !979, file: !980, line: 385, baseType: !952, size: 32, align: 32, offset: 65632)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "time_increment_bits", scope: !979, file: !980, line: 387, baseType: !952, size: 32, align: 32, offset: 65664)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "last_time_base", scope: !979, file: !980, line: 388, baseType: !952, size: 32, align: 32, offset: 65696)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !979, file: !980, line: 389, baseType: !952, size: 32, align: 32, offset: 65728)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !979, file: !980, line: 390, baseType: !1008, size: 64, align: 64, offset: 65792)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "last_non_b_time", scope: !979, file: !980, line: 391, baseType: !1008, size: 64, align: 64, offset: 65856)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "pp_time", scope: !979, file: !980, line: 392, baseType: !1173, size: 16, align: 16, offset: 65920)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "pb_time", scope: !979, file: !980, line: 393, baseType: !1173, size: 16, align: 16, offset: 65936)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "pp_field_time", scope: !979, file: !980, line: 394, baseType: !1173, size: 16, align: 16, offset: 65952)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "pb_field_time", scope: !979, file: !980, line: 395, baseType: !1173, size: 16, align: 16, offset: 65968)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "real_sprite_warping_points", scope: !979, file: !980, line: 396, baseType: !952, size: 32, align: 32, offset: 65984)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_offset", scope: !979, file: !980, line: 397, baseType: !2133, size: 128, align: 32, offset: 66016)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_delta", scope: !979, file: !980, line: 398, baseType: !2133, size: 128, align: 32, offset: 66144)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "mcsel", scope: !979, file: !980, line: 399, baseType: !952, size: 32, align: 32, offset: 66272)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "quant_precision", scope: !979, file: !980, line: 400, baseType: !952, size: 32, align: 32, offset: 66304)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "quarter_sample", scope: !979, file: !980, line: 401, baseType: !952, size: 32, align: 32, offset: 66336)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "aspect_ratio_info", scope: !979, file: !980, line: 402, baseType: !952, size: 32, align: 32, offset: 66368)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_warping_accuracy", scope: !979, file: !980, line: 403, baseType: !952, size: 32, align: 32, offset: 66400)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "data_partitioning", scope: !979, file: !980, line: 404, baseType: !952, size: 32, align: 32, offset: 66432)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "partitioned_frame", scope: !979, file: !980, line: 405, baseType: !952, size: 32, align: 32, offset: 66464)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "low_delay", scope: !979, file: !980, line: 406, baseType: !952, size: 32, align: 32, offset: 66496)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "vo_type", scope: !979, file: !980, line: 407, baseType: !952, size: 32, align: 32, offset: 66528)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pb", scope: !979, file: !980, line: 408, baseType: !1854, size: 320, align: 64, offset: 66560)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "pb2", scope: !979, file: !980, line: 409, baseType: !1854, size: 320, align: 64, offset: 66880)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !979, file: !980, line: 410, baseType: !952, size: 32, align: 32, offset: 67200)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "padding_bug_score", scope: !979, file: !980, line: 411, baseType: !952, size: 32, align: 32, offset: 67232)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "divx_packed", scope: !979, file: !980, line: 414, baseType: !952, size: 32, align: 32, offset: 67264)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_buffer", scope: !979, file: !980, line: 415, baseType: !1167, size: 64, align: 64, offset: 67328)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_buffer_size", scope: !979, file: !980, line: 416, baseType: !952, size: 32, align: 32, offset: 67392)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bitstream_buffer_size", scope: !979, file: !980, line: 417, baseType: !945, size: 32, align: 32, offset: 67424)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "rv10_version", scope: !979, file: !980, line: 420, baseType: !952, size: 32, align: 32, offset: 67456)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "rv10_first_dc_coded", scope: !979, file: !980, line: 421, baseType: !1879, size: 96, align: 32, offset: 67488)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "mjpeg_ctx", scope: !979, file: !980, line: 424, baseType: !2399, size: 64, align: 64, offset: 67584)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64, align: 64)
!2400 = !DICompositeType(tag: DW_TAG_structure_type, name: "MJpegContext", file: !980, line: 424, flags: DIFlagFwdDecl)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "esc_pos", scope: !979, file: !980, line: 425, baseType: !952, size: 32, align: 32, offset: 67648)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !979, file: !980, line: 426, baseType: !952, size: 32, align: 32, offset: 67680)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "huffman", scope: !979, file: !980, line: 427, baseType: !952, size: 32, align: 32, offset: 67712)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "mv_table_index", scope: !979, file: !980, line: 430, baseType: !952, size: 32, align: 32, offset: 67744)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "rl_table_index", scope: !979, file: !980, line: 431, baseType: !952, size: 32, align: 32, offset: 67776)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "rl_chroma_table_index", scope: !979, file: !980, line: 432, baseType: !952, size: 32, align: 32, offset: 67808)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "dc_table_index", scope: !979, file: !980, line: 433, baseType: !952, size: 32, align: 32, offset: 67840)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "use_skip_mb_code", scope: !979, file: !980, line: 434, baseType: !952, size: 32, align: 32, offset: 67872)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "slice_height", scope: !979, file: !980, line: 435, baseType: !952, size: 32, align: 32, offset: 67904)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "first_slice_line", scope: !979, file: !980, line: 436, baseType: !952, size: 32, align: 32, offset: 67936)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "flipflop_rounding", scope: !979, file: !980, line: 437, baseType: !952, size: 32, align: 32, offset: 67968)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "msmpeg4_version", scope: !979, file: !980, line: 438, baseType: !952, size: 32, align: 32, offset: 68000)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "per_mb_rl_table", scope: !979, file: !980, line: 439, baseType: !952, size: 32, align: 32, offset: 68032)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "esc3_level_length", scope: !979, file: !980, line: 440, baseType: !952, size: 32, align: 32, offset: 68064)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "esc3_run_length", scope: !979, file: !980, line: 441, baseType: !952, size: 32, align: 32, offset: 68096)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ac_stats", scope: !979, file: !980, line: 443, baseType: !2417, size: 64, align: 64, offset: 68160)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64, align: 64)
!2418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 540800, align: 32, elements: !2419)
!2419 = !{!1811, !2420, !2420, !1811}
!2420 = !DISubrange(count: 65)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "inter_intra_pred", scope: !979, file: !980, line: 444, baseType: !952, size: 32, align: 32, offset: 68224)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "mspel", scope: !979, file: !980, line: 445, baseType: !952, size: 32, align: 32, offset: 68256)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !979, file: !980, line: 448, baseType: !2324, size: 256, align: 64, offset: 68288)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "gop_picture_number", scope: !979, file: !980, line: 451, baseType: !952, size: 32, align: 32, offset: 68544)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "last_mv_dir", scope: !979, file: !980, line: 452, baseType: !952, size: 32, align: 32, offset: 68576)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay_ptr", scope: !979, file: !980, line: 453, baseType: !1167, size: 64, align: 64, offset: 68608)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "progressive_sequence", scope: !979, file: !980, line: 456, baseType: !952, size: 32, align: 32, offset: 68672)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_f_code", scope: !979, file: !980, line: 457, baseType: !2133, size: 128, align: 32, offset: 68704)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "picture_structure", scope: !979, file: !980, line: 460, baseType: !952, size: 32, align: 32, offset: 68832)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !979, file: !980, line: 462, baseType: !1008, size: 64, align: 64, offset: 68864)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !979, file: !980, line: 463, baseType: !952, size: 32, align: 32, offset: 68928)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pred_frame_dct", scope: !979, file: !980, line: 464, baseType: !952, size: 32, align: 32, offset: 68960)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !979, file: !980, line: 465, baseType: !952, size: 32, align: 32, offset: 68992)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "concealment_motion_vectors", scope: !979, file: !980, line: 466, baseType: !952, size: 32, align: 32, offset: 69024)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "q_scale_type", scope: !979, file: !980, line: 467, baseType: !952, size: 32, align: 32, offset: 69056)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !979, file: !980, line: 468, baseType: !952, size: 32, align: 32, offset: 69088)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "intra_vlc_format", scope: !979, file: !980, line: 469, baseType: !952, size: 32, align: 32, offset: 69120)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "alternate_scan", scope: !979, file: !980, line: 470, baseType: !952, size: 32, align: 32, offset: 69152)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "seq_disp_ext", scope: !979, file: !980, line: 471, baseType: !952, size: 32, align: 32, offset: 69184)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "video_format", scope: !979, file: !980, line: 472, baseType: !952, size: 32, align: 32, offset: 69216)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_first_field", scope: !979, file: !980, line: 479, baseType: !952, size: 32, align: 32, offset: 69248)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_420_type", scope: !979, file: !980, line: 480, baseType: !952, size: 32, align: 32, offset: 69280)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_format", scope: !979, file: !980, line: 481, baseType: !952, size: 32, align: 32, offset: 69312)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_x_shift", scope: !979, file: !980, line: 485, baseType: !952, size: 32, align: 32, offset: 69344)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_y_shift", scope: !979, file: !980, line: 486, baseType: !952, size: 32, align: 32, offset: 69376)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "progressive_frame", scope: !979, file: !980, line: 488, baseType: !952, size: 32, align: 32, offset: 69408)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "full_pel", scope: !979, file: !980, line: 489, baseType: !2244, size: 64, align: 32, offset: 69440)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_dct", scope: !979, file: !980, line: 490, baseType: !952, size: 32, align: 32, offset: 69504)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "first_field", scope: !979, file: !980, line: 491, baseType: !952, size: 32, align: 32, offset: 69536)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "drop_frame_timecode", scope: !979, file: !980, line: 492, baseType: !952, size: 32, align: 32, offset: 69568)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "scan_offset", scope: !979, file: !980, line: 493, baseType: !952, size: 32, align: 32, offset: 69600)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_mode", scope: !979, file: !980, line: 496, baseType: !952, size: 32, align: 32, offset: 69632)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !979, file: !980, line: 497, baseType: !952, size: 32, align: 32, offset: 69664)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "tc_opt_str", scope: !979, file: !980, line: 499, baseType: !1207, size: 64, align: 64, offset: 69696)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !979, file: !980, line: 500, baseType: !2456, size: 160, align: 32, offset: 69760)
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVTimecode", file: !2457, line: 46, baseType: !2458)
!2457 = !DIFile(filename: "./libavutil/timecode.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2457, line: 41, size: 160, align: 32, elements: !2459)
!2459 = !{!2460, !2461, !2462, !2463}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2458, file: !2457, line: 42, baseType: !952, size: 32, align: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2458, file: !2457, line: 43, baseType: !944, size: 32, align: 32, offset: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !2458, file: !2457, line: 44, baseType: !1013, size: 64, align: 32, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "fps", scope: !2458, file: !2457, line: 45, baseType: !945, size: 32, align: 32, offset: 128)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_lastgob", scope: !979, file: !980, line: 502, baseType: !1167, size: 64, align: 64, offset: 69952)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "swap_uv", scope: !979, file: !980, line: 503, baseType: !952, size: 32, align: 32, offset: 70016)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "pack_pblocks", scope: !979, file: !980, line: 504, baseType: !952, size: 32, align: 32, offset: 70048)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pblocks", scope: !979, file: !980, line: 505, baseType: !2468, size: 768, align: 64, offset: 70080)
!2468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2469, size: 768, align: 64, elements: !1069)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64, align: 64)
!2470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 1024, align: 16, elements: !1083)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !979, file: !980, line: 507, baseType: !2469, size: 64, align: 64, offset: 70848)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !979, file: !980, line: 508, baseType: !2473, size: 64, align: 64, offset: 70912)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64, align: 64)
!2474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 12288, align: 16, elements: !2475)
!2475 = !{!1070, !1084}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !979, file: !980, line: 509, baseType: !2477, size: 64, align: 64, offset: 70976)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64, align: 64)
!2478 = !DISubroutineType(types: !2479)
!2479 = !{!952, !978, !2469}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "block32", scope: !979, file: !980, line: 511, baseType: !2481, size: 64, align: 64, offset: 71040)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64, align: 64)
!2482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2483, size: 24576, align: 32, elements: !2475)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !928, line: 38, baseType: !952)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "dpcm_direction", scope: !979, file: !980, line: 512, baseType: !952, size: 32, align: 32, offset: 71104)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "dpcm_macroblock", scope: !979, file: !980, line: 513, baseType: !2486, size: 64, align: 64, offset: 71168)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 64, align: 64)
!2487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 12288, align: 16, elements: !2488)
!2488 = !{!1881, !2489}
!2489 = !DISubrange(count: 256)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg1_intra", scope: !979, file: !980, line: 520, baseType: !2491, size: 64, align: 64, offset: 71232)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64, align: 64)
!2492 = !DISubroutineType(types: !2493)
!2493 = !{null, !978, !969, !952, !952}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg1_inter", scope: !979, file: !980, line: 522, baseType: !2491, size: 64, align: 64, offset: 71296)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg2_intra", scope: !979, file: !980, line: 524, baseType: !2491, size: 64, align: 64, offset: 71360)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg2_inter", scope: !979, file: !980, line: 526, baseType: !2491, size: 64, align: 64, offset: 71424)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_h263_intra", scope: !979, file: !980, line: 528, baseType: !2491, size: 64, align: 64, offset: 71488)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_h263_inter", scope: !979, file: !980, line: 530, baseType: !2491, size: 64, align: 64, offset: 71552)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_intra", scope: !979, file: !980, line: 532, baseType: !2491, size: 64, align: 64, offset: 71616)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_inter", scope: !979, file: !980, line: 534, baseType: !2491, size: 64, align: 64, offset: 71680)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "dct_quantize", scope: !979, file: !980, line: 536, baseType: !2502, size: 64, align: 64, offset: 71744)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64, align: 64)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{!952, !978, !969, !952, !952, !1331}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "fast_dct_quantize", scope: !979, file: !980, line: 537, baseType: !2502, size: 64, align: 64, offset: 71808)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "denoise_dct", scope: !979, file: !980, line: 538, baseType: !2507, size: 64, align: 64, offset: 71872)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64, align: 64)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{null, !978, !969}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "mpv_flags", scope: !979, file: !980, line: 540, baseType: !952, size: 32, align: 32, offset: 71936)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "quantizer_noise_shaping", scope: !979, file: !980, line: 541, baseType: !952, size: 32, align: 32, offset: 71968)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "rc_qsquish", scope: !979, file: !980, line: 547, baseType: !1522, size: 32, align: 32, offset: 72000)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "rc_qmod_amp", scope: !979, file: !980, line: 548, baseType: !1522, size: 32, align: 32, offset: 72032)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "rc_qmod_freq", scope: !979, file: !980, line: 549, baseType: !952, size: 32, align: 32, offset: 72064)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_cplx", scope: !979, file: !980, line: 550, baseType: !1522, size: 32, align: 32, offset: 72096)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_aggressivity", scope: !979, file: !980, line: 551, baseType: !1522, size: 32, align: 32, offset: 72128)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "border_masking", scope: !979, file: !980, line: 552, baseType: !1522, size: 32, align: 32, offset: 72160)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "lmin", scope: !979, file: !980, line: 553, baseType: !952, size: 32, align: 32, offset: 72192)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "lmax", scope: !979, file: !980, line: 553, baseType: !952, size: 32, align: 32, offset: 72224)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_ignore_qmax", scope: !979, file: !980, line: 554, baseType: !952, size: 32, align: 32, offset: 72256)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "rc_eq", scope: !979, file: !980, line: 556, baseType: !1207, size: 64, align: 64, offset: 72320)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "cplx_tab", scope: !979, file: !980, line: 559, baseType: !2523, size: 64, align: 64, offset: 72384)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64, align: 64)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "bits_tab", scope: !979, file: !980, line: 559, baseType: !2523, size: 64, align: 64, offset: 72448)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "context_reinit", scope: !979, file: !980, line: 563, baseType: !952, size: 32, align: 32, offset: 72512)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "er", scope: !979, file: !980, line: 565, baseType: !2527, size: 12160, align: 64, offset: 72576)
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "ERContext", file: !2528, line: 90, baseType: !2529)
!2528 = !DIFile(filename: "libavcodec/error_resilience.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ERContext", file: !2528, line: 53, size: 12160, align: 64, elements: !2530)
!2530 = !{!2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2575}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2529, file: !2528, line: 54, baseType: !1141, size: 64, align: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "mecc", scope: !2529, file: !2528, line: 55, baseType: !961, size: 8640, align: 64, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "mecc_inited", scope: !2529, file: !2528, line: 56, baseType: !952, size: 32, align: 32, offset: 8704)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "mb_index2xy", scope: !2529, file: !2528, line: 58, baseType: !1331, size: 64, align: 64, offset: 8768)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num", scope: !2529, file: !2528, line: 59, baseType: !952, size: 32, align: 32, offset: 8832)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "mb_width", scope: !2529, file: !2528, line: 60, baseType: !952, size: 32, align: 32, offset: 8864)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "mb_height", scope: !2529, file: !2528, line: 60, baseType: !952, size: 32, align: 32, offset: 8896)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "mb_stride", scope: !2529, file: !2528, line: 61, baseType: !1792, size: 64, align: 64, offset: 8960)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "b8_stride", scope: !2529, file: !2528, line: 62, baseType: !1792, size: 64, align: 64, offset: 9024)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2529, file: !2528, line: 64, baseType: !2541, size: 32, align: 32, offset: 9088)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_int", file: !2542, line: 46, baseType: !952)
!2542 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdatomic.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "error_occurred", scope: !2529, file: !2528, line: 65, baseType: !952, size: 32, align: 32, offset: 9120)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "error_status_table", scope: !2529, file: !2528, line: 66, baseType: !1167, size: 64, align: 64, offset: 9152)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "er_temp_buffer", scope: !2529, file: !2528, line: 67, baseType: !1167, size: 64, align: 64, offset: 9216)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "dc_val", scope: !2529, file: !2528, line: 68, baseType: !1884, size: 192, align: 64, offset: 9280)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !2529, file: !2528, line: 69, baseType: !1167, size: 64, align: 64, offset: 9472)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "mbintra_table", scope: !2529, file: !2528, line: 70, baseType: !1167, size: 64, align: 64, offset: 9536)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !2529, file: !2528, line: 71, baseType: !2130, size: 512, align: 32, offset: 9600)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "cur_pic", scope: !2529, file: !2528, line: 73, baseType: !2551, size: 512, align: 64, offset: 10112)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "ERPicture", file: !2528, line: 51, baseType: !2552)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ERPicture", file: !2528, line: 41, size: 512, align: 64, elements: !2553)
!2553 = !{!2554, !2555, !2557, !2558, !2559, !2560}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2552, file: !2528, line: 42, baseType: !1349, size: 64, align: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !2552, file: !2528, line: 43, baseType: !2556, size: 64, align: 64, offset: 64)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64, align: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val", scope: !2552, file: !2528, line: 46, baseType: !1818, size: 128, align: 64, offset: 128)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index", scope: !2552, file: !2528, line: 47, baseType: !1828, size: 128, align: 64, offset: 256)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !2552, file: !2528, line: 49, baseType: !1823, size: 64, align: 64, offset: 384)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "field_picture", scope: !2552, file: !2528, line: 50, baseType: !952, size: 32, align: 32, offset: 448)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "last_pic", scope: !2529, file: !2528, line: 74, baseType: !2551, size: 512, align: 64, offset: 10624)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "next_pic", scope: !2529, file: !2528, line: 75, baseType: !2551, size: 512, align: 64, offset: 11136)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index_buf", scope: !2529, file: !2528, line: 77, baseType: !1816, size: 128, align: 64, offset: 11648)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val_buf", scope: !2529, file: !2528, line: 78, baseType: !1816, size: 128, align: 64, offset: 11776)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "pp_time", scope: !2529, file: !2528, line: 80, baseType: !1173, size: 16, align: 16, offset: 11904)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "pb_time", scope: !2529, file: !2528, line: 81, baseType: !1173, size: 16, align: 16, offset: 11920)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "quarter_sample", scope: !2529, file: !2528, line: 82, baseType: !952, size: 32, align: 32, offset: 11936)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "partitioned_frame", scope: !2529, file: !2528, line: 83, baseType: !952, size: 32, align: 32, offset: 11968)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !2529, file: !2528, line: 84, baseType: !952, size: 32, align: 32, offset: 12000)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !2529, file: !2528, line: 86, baseType: !2571, size: 64, align: 64, offset: 12032)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64, align: 64)
!2572 = !DISubroutineType(types: !2573)
!2573 = !{null, !926, !952, !952, !952, !2574, !952, !952, !952, !952}
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64, align: 64)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2529, file: !2528, line: 89, baseType: !926, size: 64, align: 64, offset: 12096)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "error_rate", scope: !979, file: !980, line: 567, baseType: !952, size: 32, align: 32, offset: 84736)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_frames", scope: !979, file: !980, line: 570, baseType: !2578, size: 1152, align: 64, offset: 84800)
!2578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1349, size: 1152, align: 64, elements: !2579)
!2579 = !{!2580}
!2580 = !DISubrange(count: 18)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !979, file: !980, line: 571, baseType: !952, size: 32, align: 32, offset: 85952)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !979, file: !980, line: 572, baseType: !952, size: 32, align: 32, offset: 85984)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !979, file: !980, line: 575, baseType: !952, size: 32, align: 32, offset: 86016)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !979, file: !980, line: 576, baseType: !952, size: 32, align: 32, offset: 86048)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !979, file: !980, line: 577, baseType: !952, size: 32, align: 32, offset: 86080)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !979, file: !980, line: 578, baseType: !952, size: 32, align: 32, offset: 86112)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !979, file: !980, line: 580, baseType: !952, size: 32, align: 32, offset: 86144)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !979, file: !980, line: 581, baseType: !952, size: 32, align: 32, offset: 86176)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "sse", scope: !963, file: !962, line: 57, baseType: !973, size: 384, align: 64, offset: 448)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "hadamard8_diff", scope: !963, file: !962, line: 58, baseType: !973, size: 384, align: 64, offset: 832)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "dct_sad", scope: !963, file: !962, line: 59, baseType: !973, size: 384, align: 64, offset: 1216)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "quant_psnr", scope: !963, file: !962, line: 60, baseType: !973, size: 384, align: 64, offset: 1600)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !963, file: !962, line: 61, baseType: !973, size: 384, align: 64, offset: 1984)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !963, file: !962, line: 62, baseType: !973, size: 384, align: 64, offset: 2368)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "vsad", scope: !963, file: !962, line: 63, baseType: !973, size: 384, align: 64, offset: 2752)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "vsse", scope: !963, file: !962, line: 64, baseType: !973, size: 384, align: 64, offset: 3136)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "nsse", scope: !963, file: !962, line: 65, baseType: !973, size: 384, align: 64, offset: 3520)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "w53", scope: !963, file: !962, line: 66, baseType: !973, size: 384, align: 64, offset: 3904)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "w97", scope: !963, file: !962, line: 67, baseType: !973, size: 384, align: 64, offset: 4288)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "dct_max", scope: !963, file: !962, line: 68, baseType: !973, size: 384, align: 64, offset: 4672)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "dct264_sad", scope: !963, file: !962, line: 69, baseType: !973, size: 384, align: 64, offset: 5056)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !963, file: !962, line: 71, baseType: !973, size: 384, align: 64, offset: 5440)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !963, file: !962, line: 72, baseType: !973, size: 384, align: 64, offset: 5824)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !963, file: !962, line: 73, baseType: !973, size: 384, align: 64, offset: 6208)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !963, file: !962, line: 74, baseType: !973, size: 384, align: 64, offset: 6592)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !963, file: !962, line: 75, baseType: !973, size: 384, align: 64, offset: 6976)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !963, file: !962, line: 76, baseType: !973, size: 384, align: 64, offset: 7360)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "pix_abs", scope: !963, file: !962, line: 78, baseType: !2609, size: 512, align: 64, offset: 7744)
!2609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 512, align: 64, elements: !2610)
!2610 = !{!1811, !1202}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "median_sad", scope: !963, file: !962, line: 79, baseType: !973, size: 384, align: 64, offset: 8256)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64, align: 64)
!2613 = !DILocalVariable(name: "c", arg: 1, scope: !957, file: !941, line: 474, type: !960)
!2614 = !DIExpression()
!2615 = !DILocation(line: 474, column: 31, scope: !957)
!2616 = !DILocalVariable(name: "cmp", arg: 2, scope: !957, file: !941, line: 474, type: !2612)
!2617 = !DILocation(line: 474, column: 47, scope: !957)
!2618 = !DILocalVariable(name: "type", arg: 3, scope: !957, file: !941, line: 474, type: !952)
!2619 = !DILocation(line: 474, column: 56, scope: !957)
!2620 = !DILocalVariable(name: "i", scope: !957, file: !941, line: 476, type: !952)
!2621 = !DILocation(line: 476, column: 9, scope: !957)
!2622 = !DILocation(line: 478, column: 12, scope: !957)
!2623 = !DILocation(line: 478, column: 5, scope: !957)
!2624 = !DILocation(line: 480, column: 12, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !957, file: !941, line: 480, column: 5)
!2626 = !DILocation(line: 480, column: 10, scope: !2625)
!2627 = !DILocation(line: 480, column: 17, scope: !2628)
!2628 = !DILexicalBlockFile(scope: !2629, file: !941, discriminator: 1)
!2629 = distinct !DILexicalBlock(scope: !2625, file: !941, line: 480, column: 5)
!2630 = !DILocation(line: 480, column: 19, scope: !2628)
!2631 = !DILocation(line: 480, column: 5, scope: !2628)
!2632 = !DILocation(line: 481, column: 17, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2629, file: !941, line: 480, column: 29)
!2634 = !DILocation(line: 481, column: 22, scope: !2633)
!2635 = !DILocation(line: 481, column: 9, scope: !2633)
!2636 = !DILocation(line: 483, column: 29, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2633, file: !941, line: 481, column: 30)
!2638 = !DILocation(line: 483, column: 22, scope: !2637)
!2639 = !DILocation(line: 483, column: 25, scope: !2637)
!2640 = !DILocation(line: 483, column: 17, scope: !2637)
!2641 = !DILocation(line: 483, column: 13, scope: !2637)
!2642 = !DILocation(line: 483, column: 20, scope: !2637)
!2643 = !DILocation(line: 484, column: 13, scope: !2637)
!2644 = !DILocation(line: 486, column: 36, scope: !2637)
!2645 = !DILocation(line: 486, column: 22, scope: !2637)
!2646 = !DILocation(line: 486, column: 25, scope: !2637)
!2647 = !DILocation(line: 486, column: 17, scope: !2637)
!2648 = !DILocation(line: 486, column: 13, scope: !2637)
!2649 = !DILocation(line: 486, column: 20, scope: !2637)
!2650 = !DILocation(line: 487, column: 13, scope: !2637)
!2651 = !DILocation(line: 489, column: 40, scope: !2637)
!2652 = !DILocation(line: 489, column: 22, scope: !2637)
!2653 = !DILocation(line: 489, column: 25, scope: !2637)
!2654 = !DILocation(line: 489, column: 17, scope: !2637)
!2655 = !DILocation(line: 489, column: 13, scope: !2637)
!2656 = !DILocation(line: 489, column: 20, scope: !2637)
!2657 = !DILocation(line: 490, column: 13, scope: !2637)
!2658 = !DILocation(line: 492, column: 29, scope: !2637)
!2659 = !DILocation(line: 492, column: 22, scope: !2637)
!2660 = !DILocation(line: 492, column: 25, scope: !2637)
!2661 = !DILocation(line: 492, column: 17, scope: !2637)
!2662 = !DILocation(line: 492, column: 13, scope: !2637)
!2663 = !DILocation(line: 492, column: 20, scope: !2637)
!2664 = !DILocation(line: 493, column: 13, scope: !2637)
!2665 = !DILocation(line: 495, column: 33, scope: !2637)
!2666 = !DILocation(line: 495, column: 22, scope: !2637)
!2667 = !DILocation(line: 495, column: 25, scope: !2637)
!2668 = !DILocation(line: 495, column: 17, scope: !2637)
!2669 = !DILocation(line: 495, column: 13, scope: !2637)
!2670 = !DILocation(line: 495, column: 20, scope: !2637)
!2671 = !DILocation(line: 496, column: 13, scope: !2637)
!2672 = !DILocation(line: 498, column: 36, scope: !2637)
!2673 = !DILocation(line: 498, column: 22, scope: !2637)
!2674 = !DILocation(line: 498, column: 25, scope: !2637)
!2675 = !DILocation(line: 498, column: 17, scope: !2637)
!2676 = !DILocation(line: 498, column: 13, scope: !2637)
!2677 = !DILocation(line: 498, column: 20, scope: !2637)
!2678 = !DILocation(line: 499, column: 13, scope: !2637)
!2679 = !DILocation(line: 501, column: 33, scope: !2637)
!2680 = !DILocation(line: 501, column: 22, scope: !2637)
!2681 = !DILocation(line: 501, column: 25, scope: !2637)
!2682 = !DILocation(line: 501, column: 17, scope: !2637)
!2683 = !DILocation(line: 501, column: 13, scope: !2637)
!2684 = !DILocation(line: 501, column: 20, scope: !2637)
!2685 = !DILocation(line: 502, column: 13, scope: !2637)
!2686 = !DILocation(line: 504, column: 36, scope: !2637)
!2687 = !DILocation(line: 504, column: 22, scope: !2637)
!2688 = !DILocation(line: 504, column: 25, scope: !2637)
!2689 = !DILocation(line: 504, column: 17, scope: !2637)
!2690 = !DILocation(line: 504, column: 13, scope: !2637)
!2691 = !DILocation(line: 504, column: 20, scope: !2637)
!2692 = !DILocation(line: 505, column: 13, scope: !2637)
!2693 = !DILocation(line: 507, column: 29, scope: !2637)
!2694 = !DILocation(line: 507, column: 22, scope: !2637)
!2695 = !DILocation(line: 507, column: 25, scope: !2637)
!2696 = !DILocation(line: 507, column: 17, scope: !2637)
!2697 = !DILocation(line: 507, column: 13, scope: !2637)
!2698 = !DILocation(line: 507, column: 20, scope: !2637)
!2699 = !DILocation(line: 508, column: 13, scope: !2637)
!2700 = !DILocation(line: 510, column: 28, scope: !2637)
!2701 = !DILocation(line: 510, column: 22, scope: !2637)
!2702 = !DILocation(line: 510, column: 25, scope: !2637)
!2703 = !DILocation(line: 510, column: 17, scope: !2637)
!2704 = !DILocation(line: 510, column: 13, scope: !2637)
!2705 = !DILocation(line: 510, column: 20, scope: !2637)
!2706 = !DILocation(line: 511, column: 13, scope: !2637)
!2707 = !DILocation(line: 513, column: 30, scope: !2637)
!2708 = !DILocation(line: 513, column: 22, scope: !2637)
!2709 = !DILocation(line: 513, column: 25, scope: !2637)
!2710 = !DILocation(line: 513, column: 17, scope: !2637)
!2711 = !DILocation(line: 513, column: 13, scope: !2637)
!2712 = !DILocation(line: 513, column: 20, scope: !2637)
!2713 = !DILocation(line: 514, column: 13, scope: !2637)
!2714 = !DILocation(line: 516, column: 30, scope: !2637)
!2715 = !DILocation(line: 516, column: 22, scope: !2637)
!2716 = !DILocation(line: 516, column: 25, scope: !2637)
!2717 = !DILocation(line: 516, column: 17, scope: !2637)
!2718 = !DILocation(line: 516, column: 13, scope: !2637)
!2719 = !DILocation(line: 516, column: 20, scope: !2637)
!2720 = !DILocation(line: 517, column: 13, scope: !2637)
!2721 = !DILocation(line: 519, column: 17, scope: !2637)
!2722 = !DILocation(line: 519, column: 13, scope: !2637)
!2723 = !DILocation(line: 519, column: 20, scope: !2637)
!2724 = !DILocation(line: 520, column: 13, scope: !2637)
!2725 = !DILocation(line: 522, column: 30, scope: !2637)
!2726 = !DILocation(line: 522, column: 22, scope: !2637)
!2727 = !DILocation(line: 522, column: 25, scope: !2637)
!2728 = !DILocation(line: 522, column: 17, scope: !2637)
!2729 = !DILocation(line: 522, column: 13, scope: !2637)
!2730 = !DILocation(line: 522, column: 20, scope: !2637)
!2731 = !DILocation(line: 523, column: 13, scope: !2637)
!2732 = !DILocation(line: 526, column: 28, scope: !2637)
!2733 = !DILocation(line: 526, column: 21, scope: !2637)
!2734 = !DILocation(line: 526, column: 24, scope: !2637)
!2735 = !DILocation(line: 526, column: 17, scope: !2637)
!2736 = !DILocation(line: 526, column: 13, scope: !2637)
!2737 = !DILocation(line: 526, column: 19, scope: !2637)
!2738 = !DILocation(line: 527, column: 13, scope: !2637)
!2739 = !DILocation(line: 529, column: 28, scope: !2637)
!2740 = !DILocation(line: 529, column: 21, scope: !2637)
!2741 = !DILocation(line: 529, column: 24, scope: !2637)
!2742 = !DILocation(line: 529, column: 17, scope: !2637)
!2743 = !DILocation(line: 529, column: 13, scope: !2637)
!2744 = !DILocation(line: 529, column: 19, scope: !2637)
!2745 = !DILocation(line: 530, column: 13, scope: !2637)
!2746 = !DILocation(line: 533, column: 13, scope: !2637)
!2747 = !DILocation(line: 535, column: 9, scope: !2637)
!2748 = !DILocation(line: 536, column: 5, scope: !2633)
!2749 = !DILocation(line: 480, column: 25, scope: !2750)
!2750 = !DILexicalBlockFile(scope: !2629, file: !941, discriminator: 2)
!2751 = !DILocation(line: 480, column: 5, scope: !2750)
!2752 = distinct !{!2752, !2753}
!2753 = !DILocation(line: 480, column: 5, scope: !957)
!2754 = !DILocation(line: 537, column: 1, scope: !957)
!2755 = distinct !DISubprogram(name: "zero_cmp", scope: !941, file: !941, line: 468, type: !2756, isLocal: true, isDefinition: true, scopeLine: 470, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!952, !2758, !1167, !1167, !1792, !952}
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64, align: 64)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "MpegEncContext", file: !980, line: 582, baseType: !979)
!2760 = !DILocalVariable(name: "s", arg: 1, scope: !2755, file: !941, line: 468, type: !2758)
!2761 = !DILocation(line: 468, column: 37, scope: !2755)
!2762 = !DILocalVariable(name: "a", arg: 2, scope: !2755, file: !941, line: 468, type: !1167)
!2763 = !DILocation(line: 468, column: 49, scope: !2755)
!2764 = !DILocalVariable(name: "b", arg: 3, scope: !2755, file: !941, line: 468, type: !1167)
!2765 = !DILocation(line: 468, column: 61, scope: !2755)
!2766 = !DILocalVariable(name: "stride", arg: 4, scope: !2755, file: !941, line: 469, type: !1792)
!2767 = !DILocation(line: 469, column: 31, scope: !2755)
!2768 = !DILocalVariable(name: "h", arg: 5, scope: !2755, file: !941, line: 469, type: !952)
!2769 = !DILocation(line: 469, column: 43, scope: !2755)
!2770 = !DILocation(line: 471, column: 5, scope: !2755)
!2771 = !DILocalVariable(name: "la_aligned", scope: !949, file: !941, line: 1017, type: !1204)
!2772 = !DILocation(line: 1017, column: 40, scope: !949)
!2773 = !DILocalVariable(name: "aligned", scope: !949, file: !941, line: 1017, type: !1331)
!2774 = !DILocation(line: 1017, column: 63, scope: !949)
!2775 = !DILocation(line: 1017, column: 74, scope: !949)
!2776 = !DILocation(line: 1019, column: 19, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !949, file: !941, line: 1019, column: 9)
!2778 = !DILocation(line: 1019, column: 9, scope: !2777)
!2779 = !DILocation(line: 1019, column: 27, scope: !2777)
!2780 = !DILocation(line: 1019, column: 9, scope: !949)
!2781 = !DILocation(line: 1020, column: 14, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2783, file: !941, line: 1020, column: 13)
!2783 = distinct !DILexicalBlock(scope: !2777, file: !941, line: 1019, column: 33)
!2784 = !DILocation(line: 1020, column: 13, scope: !2783)
!2785 = !DILocation(line: 1022, column: 13, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2782, file: !941, line: 1020, column: 24)
!2787 = !DILocation(line: 1028, column: 21, scope: !2786)
!2788 = !DILocation(line: 1029, column: 9, scope: !2786)
!2789 = !DILocation(line: 1030, column: 9, scope: !2783)
!2790 = !DILocation(line: 1032, column: 5, scope: !949)
!2791 = !DILocation(line: 1033, column: 1, scope: !949)
!2792 = distinct !DISubprogram(name: "ff_me_cmp_init", scope: !941, file: !941, line: 1035, type: !2793, isLocal: false, isDefinition: true, scopeLine: 1036, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{null, !960, !1141}
!2795 = !DILocalVariable(name: "c", arg: 1, scope: !2792, file: !941, line: 1035, type: !960)
!2796 = !DILocation(line: 1035, column: 57, scope: !2792)
!2797 = !DILocalVariable(name: "avctx", arg: 2, scope: !2792, file: !941, line: 1035, type: !1141)
!2798 = !DILocation(line: 1035, column: 76, scope: !2792)
!2799 = !DILocation(line: 1037, column: 5, scope: !2792)
!2800 = !DILocation(line: 1039, column: 5, scope: !2792)
!2801 = !DILocation(line: 1039, column: 8, scope: !2792)
!2802 = !DILocation(line: 1039, column: 24, scope: !2792)
!2803 = !DILocation(line: 1042, column: 5, scope: !2792)
!2804 = !DILocation(line: 1042, column: 8, scope: !2792)
!2805 = !DILocation(line: 1042, column: 22, scope: !2792)
!2806 = !DILocation(line: 1043, column: 5, scope: !2792)
!2807 = !DILocation(line: 1043, column: 8, scope: !2792)
!2808 = !DILocation(line: 1043, column: 22, scope: !2792)
!2809 = !DILocation(line: 1044, column: 5, scope: !2792)
!2810 = !DILocation(line: 1044, column: 8, scope: !2792)
!2811 = !DILocation(line: 1044, column: 22, scope: !2792)
!2812 = !DILocation(line: 1045, column: 5, scope: !2792)
!2813 = !DILocation(line: 1045, column: 8, scope: !2792)
!2814 = !DILocation(line: 1045, column: 22, scope: !2792)
!2815 = !DILocation(line: 1046, column: 5, scope: !2792)
!2816 = !DILocation(line: 1046, column: 8, scope: !2792)
!2817 = !DILocation(line: 1046, column: 22, scope: !2792)
!2818 = !DILocation(line: 1047, column: 5, scope: !2792)
!2819 = !DILocation(line: 1047, column: 8, scope: !2792)
!2820 = !DILocation(line: 1047, column: 22, scope: !2792)
!2821 = !DILocation(line: 1048, column: 5, scope: !2792)
!2822 = !DILocation(line: 1048, column: 8, scope: !2792)
!2823 = !DILocation(line: 1048, column: 22, scope: !2792)
!2824 = !DILocation(line: 1049, column: 5, scope: !2792)
!2825 = !DILocation(line: 1049, column: 8, scope: !2792)
!2826 = !DILocation(line: 1049, column: 22, scope: !2792)
!2827 = !DILocation(line: 1055, column: 5, scope: !2792)
!2828 = !DILocation(line: 1055, column: 8, scope: !2792)
!2829 = !DILocation(line: 1055, column: 26, scope: !2792)
!2830 = !DILocation(line: 1055, column: 48, scope: !2792)
!2831 = !DILocation(line: 1055, column: 51, scope: !2792)
!2832 = !DILocation(line: 1055, column: 69, scope: !2792)
!2833 = !DILocation(line: 1056, column: 5, scope: !2792)
!2834 = !DILocation(line: 1056, column: 8, scope: !2792)
!2835 = !DILocation(line: 1056, column: 26, scope: !2792)
!2836 = !DILocation(line: 1057, column: 5, scope: !2792)
!2837 = !DILocation(line: 1057, column: 8, scope: !2792)
!2838 = !DILocation(line: 1057, column: 26, scope: !2792)
!2839 = !DILocation(line: 1058, column: 5, scope: !2792)
!2840 = !DILocation(line: 1058, column: 8, scope: !2792)
!2841 = !DILocation(line: 1058, column: 19, scope: !2792)
!2842 = !DILocation(line: 1058, column: 34, scope: !2792)
!2843 = !DILocation(line: 1058, column: 37, scope: !2792)
!2844 = !DILocation(line: 1058, column: 48, scope: !2792)
!2845 = !DILocation(line: 1059, column: 5, scope: !2792)
!2846 = !DILocation(line: 1059, column: 8, scope: !2792)
!2847 = !DILocation(line: 1059, column: 19, scope: !2792)
!2848 = !DILocation(line: 1059, column: 34, scope: !2792)
!2849 = !DILocation(line: 1059, column: 37, scope: !2792)
!2850 = !DILocation(line: 1059, column: 48, scope: !2792)
!2851 = !DILocation(line: 1063, column: 5, scope: !2792)
!2852 = !DILocation(line: 1063, column: 8, scope: !2792)
!2853 = !DILocation(line: 1063, column: 15, scope: !2792)
!2854 = !DILocation(line: 1064, column: 5, scope: !2792)
!2855 = !DILocation(line: 1064, column: 8, scope: !2792)
!2856 = !DILocation(line: 1064, column: 15, scope: !2792)
!2857 = !DILocation(line: 1065, column: 5, scope: !2792)
!2858 = !DILocation(line: 1065, column: 8, scope: !2792)
!2859 = !DILocation(line: 1065, column: 15, scope: !2792)
!2860 = !DILocation(line: 1066, column: 5, scope: !2792)
!2861 = !DILocation(line: 1066, column: 8, scope: !2792)
!2862 = !DILocation(line: 1066, column: 15, scope: !2792)
!2863 = !DILocation(line: 1067, column: 5, scope: !2792)
!2864 = !DILocation(line: 1067, column: 8, scope: !2792)
!2865 = !DILocation(line: 1067, column: 15, scope: !2792)
!2866 = !DILocation(line: 1068, column: 5, scope: !2792)
!2867 = !DILocation(line: 1068, column: 8, scope: !2792)
!2868 = !DILocation(line: 1068, column: 22, scope: !2792)
!2869 = !DILocation(line: 1068, column: 40, scope: !2792)
!2870 = !DILocation(line: 1068, column: 43, scope: !2792)
!2871 = !DILocation(line: 1068, column: 57, scope: !2792)
!2872 = !DILocation(line: 1069, column: 5, scope: !2792)
!2873 = !DILocation(line: 1069, column: 8, scope: !2792)
!2874 = !DILocation(line: 1069, column: 14, scope: !2792)
!2875 = !DILocation(line: 1069, column: 24, scope: !2792)
!2876 = !DILocation(line: 1069, column: 27, scope: !2792)
!2877 = !DILocation(line: 1069, column: 33, scope: !2792)
!2878 = !DILocation(line: 1070, column: 5, scope: !2792)
!2879 = !DILocation(line: 1070, column: 8, scope: !2792)
!2880 = !DILocation(line: 1070, column: 15, scope: !2792)
!2881 = !DILocation(line: 1070, column: 26, scope: !2792)
!2882 = !DILocation(line: 1070, column: 29, scope: !2792)
!2883 = !DILocation(line: 1070, column: 36, scope: !2792)
!2884 = !DILocation(line: 1071, column: 5, scope: !2792)
!2885 = !DILocation(line: 1071, column: 8, scope: !2792)
!2886 = !DILocation(line: 1071, column: 16, scope: !2792)
!2887 = !DILocation(line: 1072, column: 5, scope: !2792)
!2888 = !DILocation(line: 1072, column: 8, scope: !2792)
!2889 = !DILocation(line: 1072, column: 16, scope: !2792)
!2890 = !DILocation(line: 1073, column: 5, scope: !2792)
!2891 = !DILocation(line: 1073, column: 8, scope: !2792)
!2892 = !DILocation(line: 1073, column: 16, scope: !2792)
!2893 = !DILocation(line: 1074, column: 5, scope: !2792)
!2894 = !DILocation(line: 1074, column: 8, scope: !2792)
!2895 = !DILocation(line: 1074, column: 16, scope: !2792)
!2896 = !DILocation(line: 1075, column: 5, scope: !2792)
!2897 = !DILocation(line: 1075, column: 8, scope: !2792)
!2898 = !DILocation(line: 1075, column: 16, scope: !2792)
!2899 = !DILocation(line: 1076, column: 5, scope: !2792)
!2900 = !DILocation(line: 1076, column: 8, scope: !2792)
!2901 = !DILocation(line: 1076, column: 16, scope: !2792)
!2902 = !DILocation(line: 1077, column: 5, scope: !2792)
!2903 = !DILocation(line: 1077, column: 8, scope: !2792)
!2904 = !DILocation(line: 1077, column: 16, scope: !2792)
!2905 = !DILocation(line: 1078, column: 5, scope: !2792)
!2906 = !DILocation(line: 1078, column: 8, scope: !2792)
!2907 = !DILocation(line: 1078, column: 16, scope: !2792)
!2908 = !DILocation(line: 1079, column: 5, scope: !2792)
!2909 = !DILocation(line: 1079, column: 8, scope: !2792)
!2910 = !DILocation(line: 1079, column: 16, scope: !2792)
!2911 = !DILocation(line: 1080, column: 5, scope: !2792)
!2912 = !DILocation(line: 1080, column: 8, scope: !2792)
!2913 = !DILocation(line: 1080, column: 16, scope: !2792)
!2914 = !DILocation(line: 1082, column: 25, scope: !2792)
!2915 = !DILocation(line: 1082, column: 5, scope: !2792)
!2916 = !DILocation(line: 1092, column: 28, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2792, file: !941, line: 1091, column: 9)
!2918 = !DILocation(line: 1092, column: 31, scope: !2917)
!2919 = !DILocation(line: 1092, column: 9, scope: !2917)
!2920 = !DILocation(line: 1096, column: 5, scope: !2792)
!2921 = !DILocation(line: 1096, column: 8, scope: !2792)
!2922 = !DILocation(line: 1096, column: 22, scope: !2792)
!2923 = !DILocation(line: 1097, column: 5, scope: !2792)
!2924 = !DILocation(line: 1097, column: 8, scope: !2792)
!2925 = !DILocation(line: 1097, column: 22, scope: !2792)
!2926 = !DILocation(line: 1098, column: 1, scope: !2792)
!2927 = distinct !DISubprogram(name: "sum_abs_dctelem_c", scope: !941, file: !941, line: 136, type: !967, isLocal: true, isDefinition: true, scopeLine: 137, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!2928 = !DILocalVariable(name: "block", arg: 1, scope: !2927, file: !941, line: 136, type: !969)
!2929 = !DILocation(line: 136, column: 39, scope: !2927)
!2930 = !DILocalVariable(name: "sum", scope: !2927, file: !941, line: 138, type: !952)
!2931 = !DILocation(line: 138, column: 9, scope: !2927)
!2932 = !DILocalVariable(name: "i", scope: !2927, file: !941, line: 138, type: !952)
!2933 = !DILocation(line: 138, column: 18, scope: !2927)
!2934 = !DILocation(line: 140, column: 12, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2927, file: !941, line: 140, column: 5)
!2936 = !DILocation(line: 140, column: 10, scope: !2935)
!2937 = !DILocation(line: 140, column: 17, scope: !2938)
!2938 = !DILexicalBlockFile(scope: !2939, file: !941, discriminator: 1)
!2939 = distinct !DILexicalBlock(scope: !2935, file: !941, line: 140, column: 5)
!2940 = !DILocation(line: 140, column: 19, scope: !2938)
!2941 = !DILocation(line: 140, column: 5, scope: !2938)
!2942 = !DILocation(line: 141, column: 24, scope: !2939)
!2943 = !DILocation(line: 141, column: 18, scope: !2939)
!2944 = !DILocation(line: 141, column: 17, scope: !2939)
!2945 = !DILocation(line: 141, column: 28, scope: !2939)
!2946 = !DILocation(line: 141, column: 42, scope: !2938)
!2947 = !DILocation(line: 141, column: 36, scope: !2938)
!2948 = !DILocation(line: 141, column: 35, scope: !2938)
!2949 = !DILocation(line: 141, column: 17, scope: !2938)
!2950 = !DILocation(line: 141, column: 57, scope: !2951)
!2951 = !DILexicalBlockFile(scope: !2939, file: !941, discriminator: 2)
!2952 = !DILocation(line: 141, column: 51, scope: !2951)
!2953 = !DILocation(line: 141, column: 50, scope: !2951)
!2954 = !DILocation(line: 141, column: 49, scope: !2951)
!2955 = !DILocation(line: 141, column: 17, scope: !2951)
!2956 = !DILocation(line: 141, column: 17, scope: !2957)
!2957 = !DILexicalBlockFile(scope: !2939, file: !941, discriminator: 3)
!2958 = !DILocation(line: 141, column: 13, scope: !2957)
!2959 = !DILocation(line: 141, column: 9, scope: !2957)
!2960 = !DILocation(line: 140, column: 26, scope: !2951)
!2961 = !DILocation(line: 140, column: 5, scope: !2951)
!2962 = distinct !{!2962, !2963}
!2963 = !DILocation(line: 140, column: 5, scope: !2927)
!2964 = !DILocation(line: 142, column: 12, scope: !2927)
!2965 = !DILocation(line: 142, column: 5, scope: !2927)
!2966 = distinct !DISubprogram(name: "pix_abs16_c", scope: !941, file: !941, line: 148, type: !2756, isLocal: true, isDefinition: true, scopeLine: 150, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!2967 = !DILocalVariable(name: "v", arg: 1, scope: !2966, file: !941, line: 148, type: !2758)
!2968 = !DILocation(line: 148, column: 47, scope: !2966)
!2969 = !DILocalVariable(name: "pix1", arg: 2, scope: !2966, file: !941, line: 148, type: !1167)
!2970 = !DILocation(line: 148, column: 59, scope: !2966)
!2971 = !DILocalVariable(name: "pix2", arg: 3, scope: !2966, file: !941, line: 148, type: !1167)
!2972 = !DILocation(line: 148, column: 74, scope: !2966)
!2973 = !DILocalVariable(name: "stride", arg: 4, scope: !2966, file: !941, line: 149, type: !1792)
!2974 = !DILocation(line: 149, column: 41, scope: !2966)
!2975 = !DILocalVariable(name: "h", arg: 5, scope: !2966, file: !941, line: 149, type: !952)
!2976 = !DILocation(line: 149, column: 53, scope: !2966)
!2977 = !DILocalVariable(name: "s", scope: !2966, file: !941, line: 151, type: !952)
!2978 = !DILocation(line: 151, column: 9, scope: !2966)
!2979 = !DILocalVariable(name: "i", scope: !2966, file: !941, line: 151, type: !952)
!2980 = !DILocation(line: 151, column: 16, scope: !2966)
!2981 = !DILocation(line: 153, column: 12, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2966, file: !941, line: 153, column: 5)
!2983 = !DILocation(line: 153, column: 10, scope: !2982)
!2984 = !DILocation(line: 153, column: 17, scope: !2985)
!2985 = !DILexicalBlockFile(scope: !2986, file: !941, discriminator: 1)
!2986 = distinct !DILexicalBlock(scope: !2982, file: !941, line: 153, column: 5)
!2987 = !DILocation(line: 153, column: 21, scope: !2985)
!2988 = !DILocation(line: 153, column: 19, scope: !2985)
!2989 = !DILocation(line: 153, column: 5, scope: !2985)
!2990 = !DILocation(line: 154, column: 18, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2986, file: !941, line: 153, column: 29)
!2992 = !DILocation(line: 154, column: 28, scope: !2991)
!2993 = !DILocation(line: 154, column: 26, scope: !2991)
!2994 = !DILocation(line: 154, column: 14, scope: !2991)
!2995 = !DILocation(line: 154, column: 11, scope: !2991)
!2996 = !DILocation(line: 155, column: 18, scope: !2991)
!2997 = !DILocation(line: 155, column: 28, scope: !2991)
!2998 = !DILocation(line: 155, column: 26, scope: !2991)
!2999 = !DILocation(line: 155, column: 14, scope: !2991)
!3000 = !DILocation(line: 155, column: 11, scope: !2991)
!3001 = !DILocation(line: 156, column: 18, scope: !2991)
!3002 = !DILocation(line: 156, column: 28, scope: !2991)
!3003 = !DILocation(line: 156, column: 26, scope: !2991)
!3004 = !DILocation(line: 156, column: 14, scope: !2991)
!3005 = !DILocation(line: 156, column: 11, scope: !2991)
!3006 = !DILocation(line: 157, column: 18, scope: !2991)
!3007 = !DILocation(line: 157, column: 28, scope: !2991)
!3008 = !DILocation(line: 157, column: 26, scope: !2991)
!3009 = !DILocation(line: 157, column: 14, scope: !2991)
!3010 = !DILocation(line: 157, column: 11, scope: !2991)
!3011 = !DILocation(line: 158, column: 18, scope: !2991)
!3012 = !DILocation(line: 158, column: 28, scope: !2991)
!3013 = !DILocation(line: 158, column: 26, scope: !2991)
!3014 = !DILocation(line: 158, column: 14, scope: !2991)
!3015 = !DILocation(line: 158, column: 11, scope: !2991)
!3016 = !DILocation(line: 159, column: 18, scope: !2991)
!3017 = !DILocation(line: 159, column: 28, scope: !2991)
!3018 = !DILocation(line: 159, column: 26, scope: !2991)
!3019 = !DILocation(line: 159, column: 14, scope: !2991)
!3020 = !DILocation(line: 159, column: 11, scope: !2991)
!3021 = !DILocation(line: 160, column: 18, scope: !2991)
!3022 = !DILocation(line: 160, column: 28, scope: !2991)
!3023 = !DILocation(line: 160, column: 26, scope: !2991)
!3024 = !DILocation(line: 160, column: 14, scope: !2991)
!3025 = !DILocation(line: 160, column: 11, scope: !2991)
!3026 = !DILocation(line: 161, column: 18, scope: !2991)
!3027 = !DILocation(line: 161, column: 28, scope: !2991)
!3028 = !DILocation(line: 161, column: 26, scope: !2991)
!3029 = !DILocation(line: 161, column: 14, scope: !2991)
!3030 = !DILocation(line: 161, column: 11, scope: !2991)
!3031 = !DILocation(line: 162, column: 18, scope: !2991)
!3032 = !DILocation(line: 162, column: 28, scope: !2991)
!3033 = !DILocation(line: 162, column: 26, scope: !2991)
!3034 = !DILocation(line: 162, column: 14, scope: !2991)
!3035 = !DILocation(line: 162, column: 11, scope: !2991)
!3036 = !DILocation(line: 163, column: 18, scope: !2991)
!3037 = !DILocation(line: 163, column: 28, scope: !2991)
!3038 = !DILocation(line: 163, column: 26, scope: !2991)
!3039 = !DILocation(line: 163, column: 14, scope: !2991)
!3040 = !DILocation(line: 163, column: 11, scope: !2991)
!3041 = !DILocation(line: 164, column: 18, scope: !2991)
!3042 = !DILocation(line: 164, column: 29, scope: !2991)
!3043 = !DILocation(line: 164, column: 27, scope: !2991)
!3044 = !DILocation(line: 164, column: 14, scope: !2991)
!3045 = !DILocation(line: 164, column: 11, scope: !2991)
!3046 = !DILocation(line: 165, column: 18, scope: !2991)
!3047 = !DILocation(line: 165, column: 29, scope: !2991)
!3048 = !DILocation(line: 165, column: 27, scope: !2991)
!3049 = !DILocation(line: 165, column: 14, scope: !2991)
!3050 = !DILocation(line: 165, column: 11, scope: !2991)
!3051 = !DILocation(line: 166, column: 18, scope: !2991)
!3052 = !DILocation(line: 166, column: 29, scope: !2991)
!3053 = !DILocation(line: 166, column: 27, scope: !2991)
!3054 = !DILocation(line: 166, column: 14, scope: !2991)
!3055 = !DILocation(line: 166, column: 11, scope: !2991)
!3056 = !DILocation(line: 167, column: 18, scope: !2991)
!3057 = !DILocation(line: 167, column: 29, scope: !2991)
!3058 = !DILocation(line: 167, column: 27, scope: !2991)
!3059 = !DILocation(line: 167, column: 14, scope: !2991)
!3060 = !DILocation(line: 167, column: 11, scope: !2991)
!3061 = !DILocation(line: 168, column: 18, scope: !2991)
!3062 = !DILocation(line: 168, column: 29, scope: !2991)
!3063 = !DILocation(line: 168, column: 27, scope: !2991)
!3064 = !DILocation(line: 168, column: 14, scope: !2991)
!3065 = !DILocation(line: 168, column: 11, scope: !2991)
!3066 = !DILocation(line: 169, column: 18, scope: !2991)
!3067 = !DILocation(line: 169, column: 29, scope: !2991)
!3068 = !DILocation(line: 169, column: 27, scope: !2991)
!3069 = !DILocation(line: 169, column: 14, scope: !2991)
!3070 = !DILocation(line: 169, column: 11, scope: !2991)
!3071 = !DILocation(line: 170, column: 17, scope: !2991)
!3072 = !DILocation(line: 170, column: 14, scope: !2991)
!3073 = !DILocation(line: 171, column: 17, scope: !2991)
!3074 = !DILocation(line: 171, column: 14, scope: !2991)
!3075 = !DILocation(line: 172, column: 5, scope: !2991)
!3076 = !DILocation(line: 153, column: 25, scope: !3077)
!3077 = !DILexicalBlockFile(scope: !2986, file: !941, discriminator: 2)
!3078 = !DILocation(line: 153, column: 5, scope: !3077)
!3079 = distinct !{!3079, !3080}
!3080 = !DILocation(line: 153, column: 5, scope: !2966)
!3081 = !DILocation(line: 173, column: 12, scope: !2966)
!3082 = !DILocation(line: 173, column: 5, scope: !2966)
!3083 = distinct !DISubprogram(name: "pix_abs16_x2_c", scope: !941, file: !941, line: 215, type: !2756, isLocal: true, isDefinition: true, scopeLine: 217, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!3084 = !DILocalVariable(name: "v", arg: 1, scope: !3083, file: !941, line: 215, type: !2758)
!3085 = !DILocation(line: 215, column: 43, scope: !3083)
!3086 = !DILocalVariable(name: "pix1", arg: 2, scope: !3083, file: !941, line: 215, type: !1167)
!3087 = !DILocation(line: 215, column: 55, scope: !3083)
!3088 = !DILocalVariable(name: "pix2", arg: 3, scope: !3083, file: !941, line: 215, type: !1167)
!3089 = !DILocation(line: 215, column: 70, scope: !3083)
!3090 = !DILocalVariable(name: "stride", arg: 4, scope: !3083, file: !941, line: 216, type: !1792)
!3091 = !DILocation(line: 216, column: 37, scope: !3083)
!3092 = !DILocalVariable(name: "h", arg: 5, scope: !3083, file: !941, line: 216, type: !952)
!3093 = !DILocation(line: 216, column: 49, scope: !3083)
!3094 = !DILocalVariable(name: "s", scope: !3083, file: !941, line: 218, type: !952)
!3095 = !DILocation(line: 218, column: 9, scope: !3083)
!3096 = !DILocalVariable(name: "i", scope: !3083, file: !941, line: 218, type: !952)
!3097 = !DILocation(line: 218, column: 16, scope: !3083)
!3098 = !DILocation(line: 220, column: 12, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3083, file: !941, line: 220, column: 5)
!3100 = !DILocation(line: 220, column: 10, scope: !3099)
!3101 = !DILocation(line: 220, column: 17, scope: !3102)
!3102 = !DILexicalBlockFile(scope: !3103, file: !941, discriminator: 1)
!3103 = distinct !DILexicalBlock(scope: !3099, file: !941, line: 220, column: 5)
!3104 = !DILocation(line: 220, column: 21, scope: !3102)
!3105 = !DILocation(line: 220, column: 19, scope: !3102)
!3106 = !DILocation(line: 220, column: 5, scope: !3102)
!3107 = !DILocation(line: 221, column: 18, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3103, file: !941, line: 220, column: 29)
!3109 = !DILocation(line: 221, column: 31, scope: !3108)
!3110 = !DILocation(line: 221, column: 30, scope: !3108)
!3111 = !DILocation(line: 221, column: 43, scope: !3108)
!3112 = !DILocation(line: 221, column: 42, scope: !3108)
!3113 = !DILocation(line: 221, column: 40, scope: !3108)
!3114 = !DILocation(line: 221, column: 52, scope: !3108)
!3115 = !DILocation(line: 221, column: 57, scope: !3108)
!3116 = !DILocation(line: 221, column: 26, scope: !3108)
!3117 = !DILocation(line: 221, column: 14, scope: !3108)
!3118 = !DILocation(line: 221, column: 11, scope: !3108)
!3119 = !DILocation(line: 222, column: 18, scope: !3108)
!3120 = !DILocation(line: 222, column: 31, scope: !3108)
!3121 = !DILocation(line: 222, column: 30, scope: !3108)
!3122 = !DILocation(line: 222, column: 43, scope: !3108)
!3123 = !DILocation(line: 222, column: 42, scope: !3108)
!3124 = !DILocation(line: 222, column: 40, scope: !3108)
!3125 = !DILocation(line: 222, column: 52, scope: !3108)
!3126 = !DILocation(line: 222, column: 57, scope: !3108)
!3127 = !DILocation(line: 222, column: 26, scope: !3108)
!3128 = !DILocation(line: 222, column: 14, scope: !3108)
!3129 = !DILocation(line: 222, column: 11, scope: !3108)
!3130 = !DILocation(line: 223, column: 18, scope: !3108)
!3131 = !DILocation(line: 223, column: 31, scope: !3108)
!3132 = !DILocation(line: 223, column: 30, scope: !3108)
!3133 = !DILocation(line: 223, column: 43, scope: !3108)
!3134 = !DILocation(line: 223, column: 42, scope: !3108)
!3135 = !DILocation(line: 223, column: 40, scope: !3108)
!3136 = !DILocation(line: 223, column: 52, scope: !3108)
!3137 = !DILocation(line: 223, column: 57, scope: !3108)
!3138 = !DILocation(line: 223, column: 26, scope: !3108)
!3139 = !DILocation(line: 223, column: 14, scope: !3108)
!3140 = !DILocation(line: 223, column: 11, scope: !3108)
!3141 = !DILocation(line: 224, column: 18, scope: !3108)
!3142 = !DILocation(line: 224, column: 31, scope: !3108)
!3143 = !DILocation(line: 224, column: 30, scope: !3108)
!3144 = !DILocation(line: 224, column: 43, scope: !3108)
!3145 = !DILocation(line: 224, column: 42, scope: !3108)
!3146 = !DILocation(line: 224, column: 40, scope: !3108)
!3147 = !DILocation(line: 224, column: 52, scope: !3108)
!3148 = !DILocation(line: 224, column: 57, scope: !3108)
!3149 = !DILocation(line: 224, column: 26, scope: !3108)
!3150 = !DILocation(line: 224, column: 14, scope: !3108)
!3151 = !DILocation(line: 224, column: 11, scope: !3108)
!3152 = !DILocation(line: 225, column: 18, scope: !3108)
!3153 = !DILocation(line: 225, column: 31, scope: !3108)
!3154 = !DILocation(line: 225, column: 30, scope: !3108)
!3155 = !DILocation(line: 225, column: 43, scope: !3108)
!3156 = !DILocation(line: 225, column: 42, scope: !3108)
!3157 = !DILocation(line: 225, column: 40, scope: !3108)
!3158 = !DILocation(line: 225, column: 52, scope: !3108)
!3159 = !DILocation(line: 225, column: 57, scope: !3108)
!3160 = !DILocation(line: 225, column: 26, scope: !3108)
!3161 = !DILocation(line: 225, column: 14, scope: !3108)
!3162 = !DILocation(line: 225, column: 11, scope: !3108)
!3163 = !DILocation(line: 226, column: 18, scope: !3108)
!3164 = !DILocation(line: 226, column: 31, scope: !3108)
!3165 = !DILocation(line: 226, column: 30, scope: !3108)
!3166 = !DILocation(line: 226, column: 43, scope: !3108)
!3167 = !DILocation(line: 226, column: 42, scope: !3108)
!3168 = !DILocation(line: 226, column: 40, scope: !3108)
!3169 = !DILocation(line: 226, column: 52, scope: !3108)
!3170 = !DILocation(line: 226, column: 57, scope: !3108)
!3171 = !DILocation(line: 226, column: 26, scope: !3108)
!3172 = !DILocation(line: 226, column: 14, scope: !3108)
!3173 = !DILocation(line: 226, column: 11, scope: !3108)
!3174 = !DILocation(line: 227, column: 18, scope: !3108)
!3175 = !DILocation(line: 227, column: 31, scope: !3108)
!3176 = !DILocation(line: 227, column: 30, scope: !3108)
!3177 = !DILocation(line: 227, column: 43, scope: !3108)
!3178 = !DILocation(line: 227, column: 42, scope: !3108)
!3179 = !DILocation(line: 227, column: 40, scope: !3108)
!3180 = !DILocation(line: 227, column: 52, scope: !3108)
!3181 = !DILocation(line: 227, column: 57, scope: !3108)
!3182 = !DILocation(line: 227, column: 26, scope: !3108)
!3183 = !DILocation(line: 227, column: 14, scope: !3108)
!3184 = !DILocation(line: 227, column: 11, scope: !3108)
!3185 = !DILocation(line: 228, column: 18, scope: !3108)
!3186 = !DILocation(line: 228, column: 31, scope: !3108)
!3187 = !DILocation(line: 228, column: 30, scope: !3108)
!3188 = !DILocation(line: 228, column: 43, scope: !3108)
!3189 = !DILocation(line: 228, column: 42, scope: !3108)
!3190 = !DILocation(line: 228, column: 40, scope: !3108)
!3191 = !DILocation(line: 228, column: 52, scope: !3108)
!3192 = !DILocation(line: 228, column: 57, scope: !3108)
!3193 = !DILocation(line: 228, column: 26, scope: !3108)
!3194 = !DILocation(line: 228, column: 14, scope: !3108)
!3195 = !DILocation(line: 228, column: 11, scope: !3108)
!3196 = !DILocation(line: 229, column: 18, scope: !3108)
!3197 = !DILocation(line: 229, column: 31, scope: !3108)
!3198 = !DILocation(line: 229, column: 30, scope: !3108)
!3199 = !DILocation(line: 229, column: 43, scope: !3108)
!3200 = !DILocation(line: 229, column: 42, scope: !3108)
!3201 = !DILocation(line: 229, column: 40, scope: !3108)
!3202 = !DILocation(line: 229, column: 52, scope: !3108)
!3203 = !DILocation(line: 229, column: 57, scope: !3108)
!3204 = !DILocation(line: 229, column: 26, scope: !3108)
!3205 = !DILocation(line: 229, column: 14, scope: !3108)
!3206 = !DILocation(line: 229, column: 11, scope: !3108)
!3207 = !DILocation(line: 230, column: 18, scope: !3108)
!3208 = !DILocation(line: 230, column: 31, scope: !3108)
!3209 = !DILocation(line: 230, column: 30, scope: !3108)
!3210 = !DILocation(line: 230, column: 43, scope: !3108)
!3211 = !DILocation(line: 230, column: 42, scope: !3108)
!3212 = !DILocation(line: 230, column: 40, scope: !3108)
!3213 = !DILocation(line: 230, column: 53, scope: !3108)
!3214 = !DILocation(line: 230, column: 58, scope: !3108)
!3215 = !DILocation(line: 230, column: 26, scope: !3108)
!3216 = !DILocation(line: 230, column: 14, scope: !3108)
!3217 = !DILocation(line: 230, column: 11, scope: !3108)
!3218 = !DILocation(line: 231, column: 18, scope: !3108)
!3219 = !DILocation(line: 231, column: 32, scope: !3108)
!3220 = !DILocation(line: 231, column: 31, scope: !3108)
!3221 = !DILocation(line: 231, column: 45, scope: !3108)
!3222 = !DILocation(line: 231, column: 44, scope: !3108)
!3223 = !DILocation(line: 231, column: 42, scope: !3108)
!3224 = !DILocation(line: 231, column: 55, scope: !3108)
!3225 = !DILocation(line: 231, column: 60, scope: !3108)
!3226 = !DILocation(line: 231, column: 27, scope: !3108)
!3227 = !DILocation(line: 231, column: 14, scope: !3108)
!3228 = !DILocation(line: 231, column: 11, scope: !3108)
!3229 = !DILocation(line: 232, column: 18, scope: !3108)
!3230 = !DILocation(line: 232, column: 32, scope: !3108)
!3231 = !DILocation(line: 232, column: 31, scope: !3108)
!3232 = !DILocation(line: 232, column: 45, scope: !3108)
!3233 = !DILocation(line: 232, column: 44, scope: !3108)
!3234 = !DILocation(line: 232, column: 42, scope: !3108)
!3235 = !DILocation(line: 232, column: 55, scope: !3108)
!3236 = !DILocation(line: 232, column: 60, scope: !3108)
!3237 = !DILocation(line: 232, column: 27, scope: !3108)
!3238 = !DILocation(line: 232, column: 14, scope: !3108)
!3239 = !DILocation(line: 232, column: 11, scope: !3108)
!3240 = !DILocation(line: 233, column: 18, scope: !3108)
!3241 = !DILocation(line: 233, column: 32, scope: !3108)
!3242 = !DILocation(line: 233, column: 31, scope: !3108)
!3243 = !DILocation(line: 233, column: 45, scope: !3108)
!3244 = !DILocation(line: 233, column: 44, scope: !3108)
!3245 = !DILocation(line: 233, column: 42, scope: !3108)
!3246 = !DILocation(line: 233, column: 55, scope: !3108)
!3247 = !DILocation(line: 233, column: 60, scope: !3108)
!3248 = !DILocation(line: 233, column: 27, scope: !3108)
!3249 = !DILocation(line: 233, column: 14, scope: !3108)
!3250 = !DILocation(line: 233, column: 11, scope: !3108)
!3251 = !DILocation(line: 234, column: 18, scope: !3108)
!3252 = !DILocation(line: 234, column: 32, scope: !3108)
!3253 = !DILocation(line: 234, column: 31, scope: !3108)
!3254 = !DILocation(line: 234, column: 45, scope: !3108)
!3255 = !DILocation(line: 234, column: 44, scope: !3108)
!3256 = !DILocation(line: 234, column: 42, scope: !3108)
!3257 = !DILocation(line: 234, column: 55, scope: !3108)
!3258 = !DILocation(line: 234, column: 60, scope: !3108)
!3259 = !DILocation(line: 234, column: 27, scope: !3108)
!3260 = !DILocation(line: 234, column: 14, scope: !3108)
!3261 = !DILocation(line: 234, column: 11, scope: !3108)
!3262 = !DILocation(line: 235, column: 18, scope: !3108)
!3263 = !DILocation(line: 235, column: 32, scope: !3108)
!3264 = !DILocation(line: 235, column: 31, scope: !3108)
!3265 = !DILocation(line: 235, column: 45, scope: !3108)
!3266 = !DILocation(line: 235, column: 44, scope: !3108)
!3267 = !DILocation(line: 235, column: 42, scope: !3108)
!3268 = !DILocation(line: 235, column: 55, scope: !3108)
!3269 = !DILocation(line: 235, column: 60, scope: !3108)
!3270 = !DILocation(line: 235, column: 27, scope: !3108)
!3271 = !DILocation(line: 235, column: 14, scope: !3108)
!3272 = !DILocation(line: 235, column: 11, scope: !3108)
!3273 = !DILocation(line: 236, column: 18, scope: !3108)
!3274 = !DILocation(line: 236, column: 32, scope: !3108)
!3275 = !DILocation(line: 236, column: 31, scope: !3108)
!3276 = !DILocation(line: 236, column: 45, scope: !3108)
!3277 = !DILocation(line: 236, column: 44, scope: !3108)
!3278 = !DILocation(line: 236, column: 42, scope: !3108)
!3279 = !DILocation(line: 236, column: 55, scope: !3108)
!3280 = !DILocation(line: 236, column: 60, scope: !3108)
!3281 = !DILocation(line: 236, column: 27, scope: !3108)
!3282 = !DILocation(line: 236, column: 14, scope: !3108)
!3283 = !DILocation(line: 236, column: 11, scope: !3108)
!3284 = !DILocation(line: 237, column: 17, scope: !3108)
!3285 = !DILocation(line: 237, column: 14, scope: !3108)
!3286 = !DILocation(line: 238, column: 17, scope: !3108)
!3287 = !DILocation(line: 238, column: 14, scope: !3108)
!3288 = !DILocation(line: 239, column: 5, scope: !3108)
!3289 = !DILocation(line: 220, column: 25, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !3103, file: !941, discriminator: 2)
!3291 = !DILocation(line: 220, column: 5, scope: !3290)
!3292 = distinct !{!3292, !3293}
!3293 = !DILocation(line: 220, column: 5, scope: !3083)
!3294 = !DILocation(line: 240, column: 12, scope: !3083)
!3295 = !DILocation(line: 240, column: 5, scope: !3083)
!3296 = distinct !DISubprogram(name: "pix_abs16_y2_c", scope: !941, file: !941, line: 243, type: !2756, isLocal: true, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!3297 = !DILocalVariable(name: "v", arg: 1, scope: !3296, file: !941, line: 243, type: !2758)
!3298 = !DILocation(line: 243, column: 43, scope: !3296)
!3299 = !DILocalVariable(name: "pix1", arg: 2, scope: !3296, file: !941, line: 243, type: !1167)
!3300 = !DILocation(line: 243, column: 55, scope: !3296)
!3301 = !DILocalVariable(name: "pix2", arg: 3, scope: !3296, file: !941, line: 243, type: !1167)
!3302 = !DILocation(line: 243, column: 70, scope: !3296)
!3303 = !DILocalVariable(name: "stride", arg: 4, scope: !3296, file: !941, line: 244, type: !1792)
!3304 = !DILocation(line: 244, column: 37, scope: !3296)
!3305 = !DILocalVariable(name: "h", arg: 5, scope: !3296, file: !941, line: 244, type: !952)
!3306 = !DILocation(line: 244, column: 49, scope: !3296)
!3307 = !DILocalVariable(name: "s", scope: !3296, file: !941, line: 246, type: !952)
!3308 = !DILocation(line: 246, column: 9, scope: !3296)
!3309 = !DILocalVariable(name: "i", scope: !3296, file: !941, line: 246, type: !952)
!3310 = !DILocation(line: 246, column: 16, scope: !3296)
!3311 = !DILocalVariable(name: "pix3", scope: !3296, file: !941, line: 247, type: !1167)
!3312 = !DILocation(line: 247, column: 14, scope: !3296)
!3313 = !DILocation(line: 247, column: 21, scope: !3296)
!3314 = !DILocation(line: 247, column: 28, scope: !3296)
!3315 = !DILocation(line: 247, column: 26, scope: !3296)
!3316 = !DILocation(line: 249, column: 12, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3296, file: !941, line: 249, column: 5)
!3318 = !DILocation(line: 249, column: 10, scope: !3317)
!3319 = !DILocation(line: 249, column: 17, scope: !3320)
!3320 = !DILexicalBlockFile(scope: !3321, file: !941, discriminator: 1)
!3321 = distinct !DILexicalBlock(scope: !3317, file: !941, line: 249, column: 5)
!3322 = !DILocation(line: 249, column: 21, scope: !3320)
!3323 = !DILocation(line: 249, column: 19, scope: !3320)
!3324 = !DILocation(line: 249, column: 5, scope: !3320)
!3325 = !DILocation(line: 250, column: 18, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3321, file: !941, line: 249, column: 29)
!3327 = !DILocation(line: 250, column: 31, scope: !3326)
!3328 = !DILocation(line: 250, column: 30, scope: !3326)
!3329 = !DILocation(line: 250, column: 43, scope: !3326)
!3330 = !DILocation(line: 250, column: 42, scope: !3326)
!3331 = !DILocation(line: 250, column: 40, scope: !3326)
!3332 = !DILocation(line: 250, column: 52, scope: !3326)
!3333 = !DILocation(line: 250, column: 57, scope: !3326)
!3334 = !DILocation(line: 250, column: 26, scope: !3326)
!3335 = !DILocation(line: 250, column: 14, scope: !3326)
!3336 = !DILocation(line: 250, column: 11, scope: !3326)
!3337 = !DILocation(line: 251, column: 18, scope: !3326)
!3338 = !DILocation(line: 251, column: 31, scope: !3326)
!3339 = !DILocation(line: 251, column: 30, scope: !3326)
!3340 = !DILocation(line: 251, column: 43, scope: !3326)
!3341 = !DILocation(line: 251, column: 42, scope: !3326)
!3342 = !DILocation(line: 251, column: 40, scope: !3326)
!3343 = !DILocation(line: 251, column: 52, scope: !3326)
!3344 = !DILocation(line: 251, column: 57, scope: !3326)
!3345 = !DILocation(line: 251, column: 26, scope: !3326)
!3346 = !DILocation(line: 251, column: 14, scope: !3326)
!3347 = !DILocation(line: 251, column: 11, scope: !3326)
!3348 = !DILocation(line: 252, column: 18, scope: !3326)
!3349 = !DILocation(line: 252, column: 31, scope: !3326)
!3350 = !DILocation(line: 252, column: 30, scope: !3326)
!3351 = !DILocation(line: 252, column: 43, scope: !3326)
!3352 = !DILocation(line: 252, column: 42, scope: !3326)
!3353 = !DILocation(line: 252, column: 40, scope: !3326)
!3354 = !DILocation(line: 252, column: 52, scope: !3326)
!3355 = !DILocation(line: 252, column: 57, scope: !3326)
!3356 = !DILocation(line: 252, column: 26, scope: !3326)
!3357 = !DILocation(line: 252, column: 14, scope: !3326)
!3358 = !DILocation(line: 252, column: 11, scope: !3326)
!3359 = !DILocation(line: 253, column: 18, scope: !3326)
!3360 = !DILocation(line: 253, column: 31, scope: !3326)
!3361 = !DILocation(line: 253, column: 30, scope: !3326)
!3362 = !DILocation(line: 253, column: 43, scope: !3326)
!3363 = !DILocation(line: 253, column: 42, scope: !3326)
!3364 = !DILocation(line: 253, column: 40, scope: !3326)
!3365 = !DILocation(line: 253, column: 52, scope: !3326)
!3366 = !DILocation(line: 253, column: 57, scope: !3326)
!3367 = !DILocation(line: 253, column: 26, scope: !3326)
!3368 = !DILocation(line: 253, column: 14, scope: !3326)
!3369 = !DILocation(line: 253, column: 11, scope: !3326)
!3370 = !DILocation(line: 254, column: 18, scope: !3326)
!3371 = !DILocation(line: 254, column: 31, scope: !3326)
!3372 = !DILocation(line: 254, column: 30, scope: !3326)
!3373 = !DILocation(line: 254, column: 43, scope: !3326)
!3374 = !DILocation(line: 254, column: 42, scope: !3326)
!3375 = !DILocation(line: 254, column: 40, scope: !3326)
!3376 = !DILocation(line: 254, column: 52, scope: !3326)
!3377 = !DILocation(line: 254, column: 57, scope: !3326)
!3378 = !DILocation(line: 254, column: 26, scope: !3326)
!3379 = !DILocation(line: 254, column: 14, scope: !3326)
!3380 = !DILocation(line: 254, column: 11, scope: !3326)
!3381 = !DILocation(line: 255, column: 18, scope: !3326)
!3382 = !DILocation(line: 255, column: 31, scope: !3326)
!3383 = !DILocation(line: 255, column: 30, scope: !3326)
!3384 = !DILocation(line: 255, column: 43, scope: !3326)
!3385 = !DILocation(line: 255, column: 42, scope: !3326)
!3386 = !DILocation(line: 255, column: 40, scope: !3326)
!3387 = !DILocation(line: 255, column: 52, scope: !3326)
!3388 = !DILocation(line: 255, column: 57, scope: !3326)
!3389 = !DILocation(line: 255, column: 26, scope: !3326)
!3390 = !DILocation(line: 255, column: 14, scope: !3326)
!3391 = !DILocation(line: 255, column: 11, scope: !3326)
!3392 = !DILocation(line: 256, column: 18, scope: !3326)
!3393 = !DILocation(line: 256, column: 31, scope: !3326)
!3394 = !DILocation(line: 256, column: 30, scope: !3326)
!3395 = !DILocation(line: 256, column: 43, scope: !3326)
!3396 = !DILocation(line: 256, column: 42, scope: !3326)
!3397 = !DILocation(line: 256, column: 40, scope: !3326)
!3398 = !DILocation(line: 256, column: 52, scope: !3326)
!3399 = !DILocation(line: 256, column: 57, scope: !3326)
!3400 = !DILocation(line: 256, column: 26, scope: !3326)
!3401 = !DILocation(line: 256, column: 14, scope: !3326)
!3402 = !DILocation(line: 256, column: 11, scope: !3326)
!3403 = !DILocation(line: 257, column: 18, scope: !3326)
!3404 = !DILocation(line: 257, column: 31, scope: !3326)
!3405 = !DILocation(line: 257, column: 30, scope: !3326)
!3406 = !DILocation(line: 257, column: 43, scope: !3326)
!3407 = !DILocation(line: 257, column: 42, scope: !3326)
!3408 = !DILocation(line: 257, column: 40, scope: !3326)
!3409 = !DILocation(line: 257, column: 52, scope: !3326)
!3410 = !DILocation(line: 257, column: 57, scope: !3326)
!3411 = !DILocation(line: 257, column: 26, scope: !3326)
!3412 = !DILocation(line: 257, column: 14, scope: !3326)
!3413 = !DILocation(line: 257, column: 11, scope: !3326)
!3414 = !DILocation(line: 258, column: 18, scope: !3326)
!3415 = !DILocation(line: 258, column: 31, scope: !3326)
!3416 = !DILocation(line: 258, column: 30, scope: !3326)
!3417 = !DILocation(line: 258, column: 43, scope: !3326)
!3418 = !DILocation(line: 258, column: 42, scope: !3326)
!3419 = !DILocation(line: 258, column: 40, scope: !3326)
!3420 = !DILocation(line: 258, column: 52, scope: !3326)
!3421 = !DILocation(line: 258, column: 57, scope: !3326)
!3422 = !DILocation(line: 258, column: 26, scope: !3326)
!3423 = !DILocation(line: 258, column: 14, scope: !3326)
!3424 = !DILocation(line: 258, column: 11, scope: !3326)
!3425 = !DILocation(line: 259, column: 18, scope: !3326)
!3426 = !DILocation(line: 259, column: 31, scope: !3326)
!3427 = !DILocation(line: 259, column: 30, scope: !3326)
!3428 = !DILocation(line: 259, column: 43, scope: !3326)
!3429 = !DILocation(line: 259, column: 42, scope: !3326)
!3430 = !DILocation(line: 259, column: 40, scope: !3326)
!3431 = !DILocation(line: 259, column: 52, scope: !3326)
!3432 = !DILocation(line: 259, column: 57, scope: !3326)
!3433 = !DILocation(line: 259, column: 26, scope: !3326)
!3434 = !DILocation(line: 259, column: 14, scope: !3326)
!3435 = !DILocation(line: 259, column: 11, scope: !3326)
!3436 = !DILocation(line: 260, column: 18, scope: !3326)
!3437 = !DILocation(line: 260, column: 32, scope: !3326)
!3438 = !DILocation(line: 260, column: 31, scope: !3326)
!3439 = !DILocation(line: 260, column: 45, scope: !3326)
!3440 = !DILocation(line: 260, column: 44, scope: !3326)
!3441 = !DILocation(line: 260, column: 42, scope: !3326)
!3442 = !DILocation(line: 260, column: 55, scope: !3326)
!3443 = !DILocation(line: 260, column: 60, scope: !3326)
!3444 = !DILocation(line: 260, column: 27, scope: !3326)
!3445 = !DILocation(line: 260, column: 14, scope: !3326)
!3446 = !DILocation(line: 260, column: 11, scope: !3326)
!3447 = !DILocation(line: 261, column: 18, scope: !3326)
!3448 = !DILocation(line: 261, column: 32, scope: !3326)
!3449 = !DILocation(line: 261, column: 31, scope: !3326)
!3450 = !DILocation(line: 261, column: 45, scope: !3326)
!3451 = !DILocation(line: 261, column: 44, scope: !3326)
!3452 = !DILocation(line: 261, column: 42, scope: !3326)
!3453 = !DILocation(line: 261, column: 55, scope: !3326)
!3454 = !DILocation(line: 261, column: 60, scope: !3326)
!3455 = !DILocation(line: 261, column: 27, scope: !3326)
!3456 = !DILocation(line: 261, column: 14, scope: !3326)
!3457 = !DILocation(line: 261, column: 11, scope: !3326)
!3458 = !DILocation(line: 262, column: 18, scope: !3326)
!3459 = !DILocation(line: 262, column: 32, scope: !3326)
!3460 = !DILocation(line: 262, column: 31, scope: !3326)
!3461 = !DILocation(line: 262, column: 45, scope: !3326)
!3462 = !DILocation(line: 262, column: 44, scope: !3326)
!3463 = !DILocation(line: 262, column: 42, scope: !3326)
!3464 = !DILocation(line: 262, column: 55, scope: !3326)
!3465 = !DILocation(line: 262, column: 60, scope: !3326)
!3466 = !DILocation(line: 262, column: 27, scope: !3326)
!3467 = !DILocation(line: 262, column: 14, scope: !3326)
!3468 = !DILocation(line: 262, column: 11, scope: !3326)
!3469 = !DILocation(line: 263, column: 18, scope: !3326)
!3470 = !DILocation(line: 263, column: 32, scope: !3326)
!3471 = !DILocation(line: 263, column: 31, scope: !3326)
!3472 = !DILocation(line: 263, column: 45, scope: !3326)
!3473 = !DILocation(line: 263, column: 44, scope: !3326)
!3474 = !DILocation(line: 263, column: 42, scope: !3326)
!3475 = !DILocation(line: 263, column: 55, scope: !3326)
!3476 = !DILocation(line: 263, column: 60, scope: !3326)
!3477 = !DILocation(line: 263, column: 27, scope: !3326)
!3478 = !DILocation(line: 263, column: 14, scope: !3326)
!3479 = !DILocation(line: 263, column: 11, scope: !3326)
!3480 = !DILocation(line: 264, column: 18, scope: !3326)
!3481 = !DILocation(line: 264, column: 32, scope: !3326)
!3482 = !DILocation(line: 264, column: 31, scope: !3326)
!3483 = !DILocation(line: 264, column: 45, scope: !3326)
!3484 = !DILocation(line: 264, column: 44, scope: !3326)
!3485 = !DILocation(line: 264, column: 42, scope: !3326)
!3486 = !DILocation(line: 264, column: 55, scope: !3326)
!3487 = !DILocation(line: 264, column: 60, scope: !3326)
!3488 = !DILocation(line: 264, column: 27, scope: !3326)
!3489 = !DILocation(line: 264, column: 14, scope: !3326)
!3490 = !DILocation(line: 264, column: 11, scope: !3326)
!3491 = !DILocation(line: 265, column: 18, scope: !3326)
!3492 = !DILocation(line: 265, column: 32, scope: !3326)
!3493 = !DILocation(line: 265, column: 31, scope: !3326)
!3494 = !DILocation(line: 265, column: 45, scope: !3326)
!3495 = !DILocation(line: 265, column: 44, scope: !3326)
!3496 = !DILocation(line: 265, column: 42, scope: !3326)
!3497 = !DILocation(line: 265, column: 55, scope: !3326)
!3498 = !DILocation(line: 265, column: 60, scope: !3326)
!3499 = !DILocation(line: 265, column: 27, scope: !3326)
!3500 = !DILocation(line: 265, column: 14, scope: !3326)
!3501 = !DILocation(line: 265, column: 11, scope: !3326)
!3502 = !DILocation(line: 266, column: 17, scope: !3326)
!3503 = !DILocation(line: 266, column: 14, scope: !3326)
!3504 = !DILocation(line: 267, column: 17, scope: !3326)
!3505 = !DILocation(line: 267, column: 14, scope: !3326)
!3506 = !DILocation(line: 268, column: 17, scope: !3326)
!3507 = !DILocation(line: 268, column: 14, scope: !3326)
!3508 = !DILocation(line: 269, column: 5, scope: !3326)
!3509 = !DILocation(line: 249, column: 25, scope: !3510)
!3510 = !DILexicalBlockFile(scope: !3321, file: !941, discriminator: 2)
!3511 = !DILocation(line: 249, column: 5, scope: !3510)
!3512 = distinct !{!3512, !3513}
!3513 = !DILocation(line: 249, column: 5, scope: !3296)
!3514 = !DILocation(line: 270, column: 12, scope: !3296)
!3515 = !DILocation(line: 270, column: 5, scope: !3296)
!3516 = distinct !DISubprogram(name: "pix_abs16_xy2_c", scope: !941, file: !941, line: 273, type: !2756, isLocal: true, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!3517 = !DILocalVariable(name: "v", arg: 1, scope: !3516, file: !941, line: 273, type: !2758)
!3518 = !DILocation(line: 273, column: 44, scope: !3516)
!3519 = !DILocalVariable(name: "pix1", arg: 2, scope: !3516, file: !941, line: 273, type: !1167)
!3520 = !DILocation(line: 273, column: 56, scope: !3516)
!3521 = !DILocalVariable(name: "pix2", arg: 3, scope: !3516, file: !941, line: 273, type: !1167)
!3522 = !DILocation(line: 273, column: 71, scope: !3516)
!3523 = !DILocalVariable(name: "stride", arg: 4, scope: !3516, file: !941, line: 274, type: !1792)
!3524 = !DILocation(line: 274, column: 38, scope: !3516)
!3525 = !DILocalVariable(name: "h", arg: 5, scope: !3516, file: !941, line: 274, type: !952)
!3526 = !DILocation(line: 274, column: 50, scope: !3516)
!3527 = !DILocalVariable(name: "s", scope: !3516, file: !941, line: 276, type: !952)
!3528 = !DILocation(line: 276, column: 9, scope: !3516)
!3529 = !DILocalVariable(name: "i", scope: !3516, file: !941, line: 276, type: !952)
!3530 = !DILocation(line: 276, column: 16, scope: !3516)
!3531 = !DILocalVariable(name: "pix3", scope: !3516, file: !941, line: 277, type: !1167)
!3532 = !DILocation(line: 277, column: 14, scope: !3516)
!3533 = !DILocation(line: 277, column: 21, scope: !3516)
!3534 = !DILocation(line: 277, column: 28, scope: !3516)
!3535 = !DILocation(line: 277, column: 26, scope: !3516)
!3536 = !DILocation(line: 279, column: 12, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3516, file: !941, line: 279, column: 5)
!3538 = !DILocation(line: 279, column: 10, scope: !3537)
!3539 = !DILocation(line: 279, column: 17, scope: !3540)
!3540 = !DILexicalBlockFile(scope: !3541, file: !941, discriminator: 1)
!3541 = distinct !DILexicalBlock(scope: !3537, file: !941, line: 279, column: 5)
!3542 = !DILocation(line: 279, column: 21, scope: !3540)
!3543 = !DILocation(line: 279, column: 19, scope: !3540)
!3544 = !DILocation(line: 279, column: 5, scope: !3540)
!3545 = !DILocation(line: 280, column: 18, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3541, file: !941, line: 279, column: 29)
!3547 = !DILocation(line: 280, column: 31, scope: !3546)
!3548 = !DILocation(line: 280, column: 30, scope: !3546)
!3549 = !DILocation(line: 280, column: 43, scope: !3546)
!3550 = !DILocation(line: 280, column: 42, scope: !3546)
!3551 = !DILocation(line: 280, column: 40, scope: !3546)
!3552 = !DILocation(line: 280, column: 55, scope: !3546)
!3553 = !DILocation(line: 280, column: 54, scope: !3546)
!3554 = !DILocation(line: 280, column: 52, scope: !3546)
!3555 = !DILocation(line: 280, column: 67, scope: !3546)
!3556 = !DILocation(line: 280, column: 66, scope: !3546)
!3557 = !DILocation(line: 280, column: 64, scope: !3546)
!3558 = !DILocation(line: 280, column: 76, scope: !3546)
!3559 = !DILocation(line: 280, column: 81, scope: !3546)
!3560 = !DILocation(line: 280, column: 26, scope: !3546)
!3561 = !DILocation(line: 280, column: 14, scope: !3546)
!3562 = !DILocation(line: 280, column: 11, scope: !3546)
!3563 = !DILocation(line: 281, column: 18, scope: !3546)
!3564 = !DILocation(line: 281, column: 31, scope: !3546)
!3565 = !DILocation(line: 281, column: 30, scope: !3546)
!3566 = !DILocation(line: 281, column: 43, scope: !3546)
!3567 = !DILocation(line: 281, column: 42, scope: !3546)
!3568 = !DILocation(line: 281, column: 40, scope: !3546)
!3569 = !DILocation(line: 281, column: 55, scope: !3546)
!3570 = !DILocation(line: 281, column: 54, scope: !3546)
!3571 = !DILocation(line: 281, column: 52, scope: !3546)
!3572 = !DILocation(line: 281, column: 67, scope: !3546)
!3573 = !DILocation(line: 281, column: 66, scope: !3546)
!3574 = !DILocation(line: 281, column: 64, scope: !3546)
!3575 = !DILocation(line: 281, column: 76, scope: !3546)
!3576 = !DILocation(line: 281, column: 81, scope: !3546)
!3577 = !DILocation(line: 281, column: 26, scope: !3546)
!3578 = !DILocation(line: 281, column: 14, scope: !3546)
!3579 = !DILocation(line: 281, column: 11, scope: !3546)
!3580 = !DILocation(line: 282, column: 18, scope: !3546)
!3581 = !DILocation(line: 282, column: 31, scope: !3546)
!3582 = !DILocation(line: 282, column: 30, scope: !3546)
!3583 = !DILocation(line: 282, column: 43, scope: !3546)
!3584 = !DILocation(line: 282, column: 42, scope: !3546)
!3585 = !DILocation(line: 282, column: 40, scope: !3546)
!3586 = !DILocation(line: 282, column: 55, scope: !3546)
!3587 = !DILocation(line: 282, column: 54, scope: !3546)
!3588 = !DILocation(line: 282, column: 52, scope: !3546)
!3589 = !DILocation(line: 282, column: 67, scope: !3546)
!3590 = !DILocation(line: 282, column: 66, scope: !3546)
!3591 = !DILocation(line: 282, column: 64, scope: !3546)
!3592 = !DILocation(line: 282, column: 76, scope: !3546)
!3593 = !DILocation(line: 282, column: 81, scope: !3546)
!3594 = !DILocation(line: 282, column: 26, scope: !3546)
!3595 = !DILocation(line: 282, column: 14, scope: !3546)
!3596 = !DILocation(line: 282, column: 11, scope: !3546)
!3597 = !DILocation(line: 283, column: 18, scope: !3546)
!3598 = !DILocation(line: 283, column: 31, scope: !3546)
!3599 = !DILocation(line: 283, column: 30, scope: !3546)
!3600 = !DILocation(line: 283, column: 43, scope: !3546)
!3601 = !DILocation(line: 283, column: 42, scope: !3546)
!3602 = !DILocation(line: 283, column: 40, scope: !3546)
!3603 = !DILocation(line: 283, column: 55, scope: !3546)
!3604 = !DILocation(line: 283, column: 54, scope: !3546)
!3605 = !DILocation(line: 283, column: 52, scope: !3546)
!3606 = !DILocation(line: 283, column: 67, scope: !3546)
!3607 = !DILocation(line: 283, column: 66, scope: !3546)
!3608 = !DILocation(line: 283, column: 64, scope: !3546)
!3609 = !DILocation(line: 283, column: 76, scope: !3546)
!3610 = !DILocation(line: 283, column: 81, scope: !3546)
!3611 = !DILocation(line: 283, column: 26, scope: !3546)
!3612 = !DILocation(line: 283, column: 14, scope: !3546)
!3613 = !DILocation(line: 283, column: 11, scope: !3546)
!3614 = !DILocation(line: 284, column: 18, scope: !3546)
!3615 = !DILocation(line: 284, column: 31, scope: !3546)
!3616 = !DILocation(line: 284, column: 30, scope: !3546)
!3617 = !DILocation(line: 284, column: 43, scope: !3546)
!3618 = !DILocation(line: 284, column: 42, scope: !3546)
!3619 = !DILocation(line: 284, column: 40, scope: !3546)
!3620 = !DILocation(line: 284, column: 55, scope: !3546)
!3621 = !DILocation(line: 284, column: 54, scope: !3546)
!3622 = !DILocation(line: 284, column: 52, scope: !3546)
!3623 = !DILocation(line: 284, column: 67, scope: !3546)
!3624 = !DILocation(line: 284, column: 66, scope: !3546)
!3625 = !DILocation(line: 284, column: 64, scope: !3546)
!3626 = !DILocation(line: 284, column: 76, scope: !3546)
!3627 = !DILocation(line: 284, column: 81, scope: !3546)
!3628 = !DILocation(line: 284, column: 26, scope: !3546)
!3629 = !DILocation(line: 284, column: 14, scope: !3546)
!3630 = !DILocation(line: 284, column: 11, scope: !3546)
!3631 = !DILocation(line: 285, column: 18, scope: !3546)
!3632 = !DILocation(line: 285, column: 31, scope: !3546)
!3633 = !DILocation(line: 285, column: 30, scope: !3546)
!3634 = !DILocation(line: 285, column: 43, scope: !3546)
!3635 = !DILocation(line: 285, column: 42, scope: !3546)
!3636 = !DILocation(line: 285, column: 40, scope: !3546)
!3637 = !DILocation(line: 285, column: 55, scope: !3546)
!3638 = !DILocation(line: 285, column: 54, scope: !3546)
!3639 = !DILocation(line: 285, column: 52, scope: !3546)
!3640 = !DILocation(line: 285, column: 67, scope: !3546)
!3641 = !DILocation(line: 285, column: 66, scope: !3546)
!3642 = !DILocation(line: 285, column: 64, scope: !3546)
!3643 = !DILocation(line: 285, column: 76, scope: !3546)
!3644 = !DILocation(line: 285, column: 81, scope: !3546)
!3645 = !DILocation(line: 285, column: 26, scope: !3546)
!3646 = !DILocation(line: 285, column: 14, scope: !3546)
!3647 = !DILocation(line: 285, column: 11, scope: !3546)
!3648 = !DILocation(line: 286, column: 18, scope: !3546)
!3649 = !DILocation(line: 286, column: 31, scope: !3546)
!3650 = !DILocation(line: 286, column: 30, scope: !3546)
!3651 = !DILocation(line: 286, column: 43, scope: !3546)
!3652 = !DILocation(line: 286, column: 42, scope: !3546)
!3653 = !DILocation(line: 286, column: 40, scope: !3546)
!3654 = !DILocation(line: 286, column: 55, scope: !3546)
!3655 = !DILocation(line: 286, column: 54, scope: !3546)
!3656 = !DILocation(line: 286, column: 52, scope: !3546)
!3657 = !DILocation(line: 286, column: 67, scope: !3546)
!3658 = !DILocation(line: 286, column: 66, scope: !3546)
!3659 = !DILocation(line: 286, column: 64, scope: !3546)
!3660 = !DILocation(line: 286, column: 76, scope: !3546)
!3661 = !DILocation(line: 286, column: 81, scope: !3546)
!3662 = !DILocation(line: 286, column: 26, scope: !3546)
!3663 = !DILocation(line: 286, column: 14, scope: !3546)
!3664 = !DILocation(line: 286, column: 11, scope: !3546)
!3665 = !DILocation(line: 287, column: 18, scope: !3546)
!3666 = !DILocation(line: 287, column: 31, scope: !3546)
!3667 = !DILocation(line: 287, column: 30, scope: !3546)
!3668 = !DILocation(line: 287, column: 43, scope: !3546)
!3669 = !DILocation(line: 287, column: 42, scope: !3546)
!3670 = !DILocation(line: 287, column: 40, scope: !3546)
!3671 = !DILocation(line: 287, column: 55, scope: !3546)
!3672 = !DILocation(line: 287, column: 54, scope: !3546)
!3673 = !DILocation(line: 287, column: 52, scope: !3546)
!3674 = !DILocation(line: 287, column: 67, scope: !3546)
!3675 = !DILocation(line: 287, column: 66, scope: !3546)
!3676 = !DILocation(line: 287, column: 64, scope: !3546)
!3677 = !DILocation(line: 287, column: 76, scope: !3546)
!3678 = !DILocation(line: 287, column: 81, scope: !3546)
!3679 = !DILocation(line: 287, column: 26, scope: !3546)
!3680 = !DILocation(line: 287, column: 14, scope: !3546)
!3681 = !DILocation(line: 287, column: 11, scope: !3546)
!3682 = !DILocation(line: 288, column: 18, scope: !3546)
!3683 = !DILocation(line: 288, column: 31, scope: !3546)
!3684 = !DILocation(line: 288, column: 30, scope: !3546)
!3685 = !DILocation(line: 288, column: 43, scope: !3546)
!3686 = !DILocation(line: 288, column: 42, scope: !3546)
!3687 = !DILocation(line: 288, column: 40, scope: !3546)
!3688 = !DILocation(line: 288, column: 55, scope: !3546)
!3689 = !DILocation(line: 288, column: 54, scope: !3546)
!3690 = !DILocation(line: 288, column: 52, scope: !3546)
!3691 = !DILocation(line: 288, column: 67, scope: !3546)
!3692 = !DILocation(line: 288, column: 66, scope: !3546)
!3693 = !DILocation(line: 288, column: 64, scope: !3546)
!3694 = !DILocation(line: 288, column: 76, scope: !3546)
!3695 = !DILocation(line: 288, column: 81, scope: !3546)
!3696 = !DILocation(line: 288, column: 26, scope: !3546)
!3697 = !DILocation(line: 288, column: 14, scope: !3546)
!3698 = !DILocation(line: 288, column: 11, scope: !3546)
!3699 = !DILocation(line: 289, column: 18, scope: !3546)
!3700 = !DILocation(line: 289, column: 31, scope: !3546)
!3701 = !DILocation(line: 289, column: 30, scope: !3546)
!3702 = !DILocation(line: 289, column: 43, scope: !3546)
!3703 = !DILocation(line: 289, column: 42, scope: !3546)
!3704 = !DILocation(line: 289, column: 40, scope: !3546)
!3705 = !DILocation(line: 289, column: 56, scope: !3546)
!3706 = !DILocation(line: 289, column: 55, scope: !3546)
!3707 = !DILocation(line: 289, column: 53, scope: !3546)
!3708 = !DILocation(line: 289, column: 68, scope: !3546)
!3709 = !DILocation(line: 289, column: 67, scope: !3546)
!3710 = !DILocation(line: 289, column: 65, scope: !3546)
!3711 = !DILocation(line: 289, column: 78, scope: !3546)
!3712 = !DILocation(line: 289, column: 83, scope: !3546)
!3713 = !DILocation(line: 289, column: 26, scope: !3546)
!3714 = !DILocation(line: 289, column: 14, scope: !3546)
!3715 = !DILocation(line: 289, column: 11, scope: !3546)
!3716 = !DILocation(line: 290, column: 18, scope: !3546)
!3717 = !DILocation(line: 290, column: 32, scope: !3546)
!3718 = !DILocation(line: 290, column: 31, scope: !3546)
!3719 = !DILocation(line: 290, column: 45, scope: !3546)
!3720 = !DILocation(line: 290, column: 44, scope: !3546)
!3721 = !DILocation(line: 290, column: 42, scope: !3546)
!3722 = !DILocation(line: 290, column: 58, scope: !3546)
!3723 = !DILocation(line: 290, column: 57, scope: !3546)
!3724 = !DILocation(line: 290, column: 55, scope: !3546)
!3725 = !DILocation(line: 290, column: 71, scope: !3546)
!3726 = !DILocation(line: 290, column: 70, scope: !3546)
!3727 = !DILocation(line: 290, column: 68, scope: !3546)
!3728 = !DILocation(line: 290, column: 81, scope: !3546)
!3729 = !DILocation(line: 290, column: 86, scope: !3546)
!3730 = !DILocation(line: 290, column: 27, scope: !3546)
!3731 = !DILocation(line: 290, column: 14, scope: !3546)
!3732 = !DILocation(line: 290, column: 11, scope: !3546)
!3733 = !DILocation(line: 291, column: 18, scope: !3546)
!3734 = !DILocation(line: 291, column: 32, scope: !3546)
!3735 = !DILocation(line: 291, column: 31, scope: !3546)
!3736 = !DILocation(line: 291, column: 45, scope: !3546)
!3737 = !DILocation(line: 291, column: 44, scope: !3546)
!3738 = !DILocation(line: 291, column: 42, scope: !3546)
!3739 = !DILocation(line: 291, column: 58, scope: !3546)
!3740 = !DILocation(line: 291, column: 57, scope: !3546)
!3741 = !DILocation(line: 291, column: 55, scope: !3546)
!3742 = !DILocation(line: 291, column: 71, scope: !3546)
!3743 = !DILocation(line: 291, column: 70, scope: !3546)
!3744 = !DILocation(line: 291, column: 68, scope: !3546)
!3745 = !DILocation(line: 291, column: 81, scope: !3546)
!3746 = !DILocation(line: 291, column: 86, scope: !3546)
!3747 = !DILocation(line: 291, column: 27, scope: !3546)
!3748 = !DILocation(line: 291, column: 14, scope: !3546)
!3749 = !DILocation(line: 291, column: 11, scope: !3546)
!3750 = !DILocation(line: 292, column: 18, scope: !3546)
!3751 = !DILocation(line: 292, column: 32, scope: !3546)
!3752 = !DILocation(line: 292, column: 31, scope: !3546)
!3753 = !DILocation(line: 292, column: 45, scope: !3546)
!3754 = !DILocation(line: 292, column: 44, scope: !3546)
!3755 = !DILocation(line: 292, column: 42, scope: !3546)
!3756 = !DILocation(line: 292, column: 58, scope: !3546)
!3757 = !DILocation(line: 292, column: 57, scope: !3546)
!3758 = !DILocation(line: 292, column: 55, scope: !3546)
!3759 = !DILocation(line: 292, column: 71, scope: !3546)
!3760 = !DILocation(line: 292, column: 70, scope: !3546)
!3761 = !DILocation(line: 292, column: 68, scope: !3546)
!3762 = !DILocation(line: 292, column: 81, scope: !3546)
!3763 = !DILocation(line: 292, column: 86, scope: !3546)
!3764 = !DILocation(line: 292, column: 27, scope: !3546)
!3765 = !DILocation(line: 292, column: 14, scope: !3546)
!3766 = !DILocation(line: 292, column: 11, scope: !3546)
!3767 = !DILocation(line: 293, column: 18, scope: !3546)
!3768 = !DILocation(line: 293, column: 32, scope: !3546)
!3769 = !DILocation(line: 293, column: 31, scope: !3546)
!3770 = !DILocation(line: 293, column: 45, scope: !3546)
!3771 = !DILocation(line: 293, column: 44, scope: !3546)
!3772 = !DILocation(line: 293, column: 42, scope: !3546)
!3773 = !DILocation(line: 293, column: 58, scope: !3546)
!3774 = !DILocation(line: 293, column: 57, scope: !3546)
!3775 = !DILocation(line: 293, column: 55, scope: !3546)
!3776 = !DILocation(line: 293, column: 71, scope: !3546)
!3777 = !DILocation(line: 293, column: 70, scope: !3546)
!3778 = !DILocation(line: 293, column: 68, scope: !3546)
!3779 = !DILocation(line: 293, column: 81, scope: !3546)
!3780 = !DILocation(line: 293, column: 86, scope: !3546)
!3781 = !DILocation(line: 293, column: 27, scope: !3546)
!3782 = !DILocation(line: 293, column: 14, scope: !3546)
!3783 = !DILocation(line: 293, column: 11, scope: !3546)
!3784 = !DILocation(line: 294, column: 18, scope: !3546)
!3785 = !DILocation(line: 294, column: 32, scope: !3546)
!3786 = !DILocation(line: 294, column: 31, scope: !3546)
!3787 = !DILocation(line: 294, column: 45, scope: !3546)
!3788 = !DILocation(line: 294, column: 44, scope: !3546)
!3789 = !DILocation(line: 294, column: 42, scope: !3546)
!3790 = !DILocation(line: 294, column: 58, scope: !3546)
!3791 = !DILocation(line: 294, column: 57, scope: !3546)
!3792 = !DILocation(line: 294, column: 55, scope: !3546)
!3793 = !DILocation(line: 294, column: 71, scope: !3546)
!3794 = !DILocation(line: 294, column: 70, scope: !3546)
!3795 = !DILocation(line: 294, column: 68, scope: !3546)
!3796 = !DILocation(line: 294, column: 81, scope: !3546)
!3797 = !DILocation(line: 294, column: 86, scope: !3546)
!3798 = !DILocation(line: 294, column: 27, scope: !3546)
!3799 = !DILocation(line: 294, column: 14, scope: !3546)
!3800 = !DILocation(line: 294, column: 11, scope: !3546)
!3801 = !DILocation(line: 295, column: 18, scope: !3546)
!3802 = !DILocation(line: 295, column: 32, scope: !3546)
!3803 = !DILocation(line: 295, column: 31, scope: !3546)
!3804 = !DILocation(line: 295, column: 45, scope: !3546)
!3805 = !DILocation(line: 295, column: 44, scope: !3546)
!3806 = !DILocation(line: 295, column: 42, scope: !3546)
!3807 = !DILocation(line: 295, column: 58, scope: !3546)
!3808 = !DILocation(line: 295, column: 57, scope: !3546)
!3809 = !DILocation(line: 295, column: 55, scope: !3546)
!3810 = !DILocation(line: 295, column: 71, scope: !3546)
!3811 = !DILocation(line: 295, column: 70, scope: !3546)
!3812 = !DILocation(line: 295, column: 68, scope: !3546)
!3813 = !DILocation(line: 295, column: 81, scope: !3546)
!3814 = !DILocation(line: 295, column: 86, scope: !3546)
!3815 = !DILocation(line: 295, column: 27, scope: !3546)
!3816 = !DILocation(line: 295, column: 14, scope: !3546)
!3817 = !DILocation(line: 295, column: 11, scope: !3546)
!3818 = !DILocation(line: 296, column: 17, scope: !3546)
!3819 = !DILocation(line: 296, column: 14, scope: !3546)
!3820 = !DILocation(line: 297, column: 17, scope: !3546)
!3821 = !DILocation(line: 297, column: 14, scope: !3546)
!3822 = !DILocation(line: 298, column: 17, scope: !3546)
!3823 = !DILocation(line: 298, column: 14, scope: !3546)
!3824 = !DILocation(line: 299, column: 5, scope: !3546)
!3825 = !DILocation(line: 279, column: 25, scope: !3826)
!3826 = !DILexicalBlockFile(scope: !3541, file: !941, discriminator: 2)
!3827 = !DILocation(line: 279, column: 5, scope: !3826)
!3828 = distinct !{!3828, !3829}
!3829 = !DILocation(line: 279, column: 5, scope: !3516)
!3830 = !DILocation(line: 300, column: 12, scope: !3516)
!3831 = !DILocation(line: 300, column: 5, scope: !3516)
!3832 = distinct !DISubprogram(name: "pix_abs8_c", scope: !941, file: !941, line: 303, type: !2756, isLocal: true, isDefinition: true, scopeLine: 305, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!3833 = !DILocalVariable(name: "v", arg: 1, scope: !3832, file: !941, line: 303, type: !2758)
!3834 = !DILocation(line: 303, column: 46, scope: !3832)
!3835 = !DILocalVariable(name: "pix1", arg: 2, scope: !3832, file: !941, line: 303, type: !1167)
!3836 = !DILocation(line: 303, column: 58, scope: !3832)
!3837 = !DILocalVariable(name: "pix2", arg: 3, scope: !3832, file: !941, line: 303, type: !1167)
!3838 = !DILocation(line: 303, column: 73, scope: !3832)
!3839 = !DILocalVariable(name: "stride", arg: 4, scope: !3832, file: !941, line: 304, type: !1792)
!3840 = !DILocation(line: 304, column: 40, scope: !3832)
!3841 = !DILocalVariable(name: "h", arg: 5, scope: !3832, file: !941, line: 304, type: !952)
!3842 = !DILocation(line: 304, column: 52, scope: !3832)
!3843 = !DILocalVariable(name: "s", scope: !3832, file: !941, line: 306, type: !952)
!3844 = !DILocation(line: 306, column: 9, scope: !3832)
!3845 = !DILocalVariable(name: "i", scope: !3832, file: !941, line: 306, type: !952)
!3846 = !DILocation(line: 306, column: 16, scope: !3832)
!3847 = !DILocation(line: 308, column: 12, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3832, file: !941, line: 308, column: 5)
!3849 = !DILocation(line: 308, column: 10, scope: !3848)
!3850 = !DILocation(line: 308, column: 17, scope: !3851)
!3851 = !DILexicalBlockFile(scope: !3852, file: !941, discriminator: 1)
!3852 = distinct !DILexicalBlock(scope: !3848, file: !941, line: 308, column: 5)
!3853 = !DILocation(line: 308, column: 21, scope: !3851)
!3854 = !DILocation(line: 308, column: 19, scope: !3851)
!3855 = !DILocation(line: 308, column: 5, scope: !3851)
!3856 = !DILocation(line: 309, column: 18, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3852, file: !941, line: 308, column: 29)
!3858 = !DILocation(line: 309, column: 28, scope: !3857)
!3859 = !DILocation(line: 309, column: 26, scope: !3857)
!3860 = !DILocation(line: 309, column: 14, scope: !3857)
!3861 = !DILocation(line: 309, column: 11, scope: !3857)
!3862 = !DILocation(line: 310, column: 18, scope: !3857)
!3863 = !DILocation(line: 310, column: 28, scope: !3857)
!3864 = !DILocation(line: 310, column: 26, scope: !3857)
!3865 = !DILocation(line: 310, column: 14, scope: !3857)
!3866 = !DILocation(line: 310, column: 11, scope: !3857)
!3867 = !DILocation(line: 311, column: 18, scope: !3857)
!3868 = !DILocation(line: 311, column: 28, scope: !3857)
!3869 = !DILocation(line: 311, column: 26, scope: !3857)
!3870 = !DILocation(line: 311, column: 14, scope: !3857)
!3871 = !DILocation(line: 311, column: 11, scope: !3857)
!3872 = !DILocation(line: 312, column: 18, scope: !3857)
!3873 = !DILocation(line: 312, column: 28, scope: !3857)
!3874 = !DILocation(line: 312, column: 26, scope: !3857)
!3875 = !DILocation(line: 312, column: 14, scope: !3857)
!3876 = !DILocation(line: 312, column: 11, scope: !3857)
!3877 = !DILocation(line: 313, column: 18, scope: !3857)
!3878 = !DILocation(line: 313, column: 28, scope: !3857)
!3879 = !DILocation(line: 313, column: 26, scope: !3857)
!3880 = !DILocation(line: 313, column: 14, scope: !3857)
!3881 = !DILocation(line: 313, column: 11, scope: !3857)
!3882 = !DILocation(line: 314, column: 18, scope: !3857)
!3883 = !DILocation(line: 314, column: 28, scope: !3857)
!3884 = !DILocation(line: 314, column: 26, scope: !3857)
!3885 = !DILocation(line: 314, column: 14, scope: !3857)
!3886 = !DILocation(line: 314, column: 11, scope: !3857)
!3887 = !DILocation(line: 315, column: 18, scope: !3857)
!3888 = !DILocation(line: 315, column: 28, scope: !3857)
!3889 = !DILocation(line: 315, column: 26, scope: !3857)
!3890 = !DILocation(line: 315, column: 14, scope: !3857)
!3891 = !DILocation(line: 315, column: 11, scope: !3857)
!3892 = !DILocation(line: 316, column: 18, scope: !3857)
!3893 = !DILocation(line: 316, column: 28, scope: !3857)
!3894 = !DILocation(line: 316, column: 26, scope: !3857)
!3895 = !DILocation(line: 316, column: 14, scope: !3857)
!3896 = !DILocation(line: 316, column: 11, scope: !3857)
!3897 = !DILocation(line: 317, column: 17, scope: !3857)
!3898 = !DILocation(line: 317, column: 14, scope: !3857)
!3899 = !DILocation(line: 318, column: 17, scope: !3857)
!3900 = !DILocation(line: 318, column: 14, scope: !3857)
!3901 = !DILocation(line: 319, column: 5, scope: !3857)
!3902 = !DILocation(line: 308, column: 25, scope: !3903)
!3903 = !DILexicalBlockFile(scope: !3852, file: !941, discriminator: 2)
!3904 = !DILocation(line: 308, column: 5, scope: !3903)
!3905 = distinct !{!3905, !3906}
!3906 = !DILocation(line: 308, column: 5, scope: !3832)
!3907 = !DILocation(line: 320, column: 12, scope: !3832)
!3908 = !DILocation(line: 320, column: 5, scope: !3832)
!3909 = distinct !DISubprogram(name: "pix_abs8_x2_c", scope: !941, file: !941, line: 354, type: !2756, isLocal: true, isDefinition: true, scopeLine: 356, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!3910 = !DILocalVariable(name: "v", arg: 1, scope: !3909, file: !941, line: 354, type: !2758)
!3911 = !DILocation(line: 354, column: 42, scope: !3909)
!3912 = !DILocalVariable(name: "pix1", arg: 2, scope: !3909, file: !941, line: 354, type: !1167)
!3913 = !DILocation(line: 354, column: 54, scope: !3909)
!3914 = !DILocalVariable(name: "pix2", arg: 3, scope: !3909, file: !941, line: 354, type: !1167)
!3915 = !DILocation(line: 354, column: 69, scope: !3909)
!3916 = !DILocalVariable(name: "stride", arg: 4, scope: !3909, file: !941, line: 355, type: !1792)
!3917 = !DILocation(line: 355, column: 36, scope: !3909)
!3918 = !DILocalVariable(name: "h", arg: 5, scope: !3909, file: !941, line: 355, type: !952)
!3919 = !DILocation(line: 355, column: 48, scope: !3909)
!3920 = !DILocalVariable(name: "s", scope: !3909, file: !941, line: 357, type: !952)
!3921 = !DILocation(line: 357, column: 9, scope: !3909)
!3922 = !DILocalVariable(name: "i", scope: !3909, file: !941, line: 357, type: !952)
!3923 = !DILocation(line: 357, column: 16, scope: !3909)
!3924 = !DILocation(line: 359, column: 12, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3909, file: !941, line: 359, column: 5)
!3926 = !DILocation(line: 359, column: 10, scope: !3925)
!3927 = !DILocation(line: 359, column: 17, scope: !3928)
!3928 = !DILexicalBlockFile(scope: !3929, file: !941, discriminator: 1)
!3929 = distinct !DILexicalBlock(scope: !3925, file: !941, line: 359, column: 5)
!3930 = !DILocation(line: 359, column: 21, scope: !3928)
!3931 = !DILocation(line: 359, column: 19, scope: !3928)
!3932 = !DILocation(line: 359, column: 5, scope: !3928)
!3933 = !DILocation(line: 360, column: 18, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3929, file: !941, line: 359, column: 29)
!3935 = !DILocation(line: 360, column: 31, scope: !3934)
!3936 = !DILocation(line: 360, column: 30, scope: !3934)
!3937 = !DILocation(line: 360, column: 43, scope: !3934)
!3938 = !DILocation(line: 360, column: 42, scope: !3934)
!3939 = !DILocation(line: 360, column: 40, scope: !3934)
!3940 = !DILocation(line: 360, column: 52, scope: !3934)
!3941 = !DILocation(line: 360, column: 57, scope: !3934)
!3942 = !DILocation(line: 360, column: 26, scope: !3934)
!3943 = !DILocation(line: 360, column: 14, scope: !3934)
!3944 = !DILocation(line: 360, column: 11, scope: !3934)
!3945 = !DILocation(line: 361, column: 18, scope: !3934)
!3946 = !DILocation(line: 361, column: 31, scope: !3934)
!3947 = !DILocation(line: 361, column: 30, scope: !3934)
!3948 = !DILocation(line: 361, column: 43, scope: !3934)
!3949 = !DILocation(line: 361, column: 42, scope: !3934)
!3950 = !DILocation(line: 361, column: 40, scope: !3934)
!3951 = !DILocation(line: 361, column: 52, scope: !3934)
!3952 = !DILocation(line: 361, column: 57, scope: !3934)
!3953 = !DILocation(line: 361, column: 26, scope: !3934)
!3954 = !DILocation(line: 361, column: 14, scope: !3934)
!3955 = !DILocation(line: 361, column: 11, scope: !3934)
!3956 = !DILocation(line: 362, column: 18, scope: !3934)
!3957 = !DILocation(line: 362, column: 31, scope: !3934)
!3958 = !DILocation(line: 362, column: 30, scope: !3934)
!3959 = !DILocation(line: 362, column: 43, scope: !3934)
!3960 = !DILocation(line: 362, column: 42, scope: !3934)
!3961 = !DILocation(line: 362, column: 40, scope: !3934)
!3962 = !DILocation(line: 362, column: 52, scope: !3934)
!3963 = !DILocation(line: 362, column: 57, scope: !3934)
!3964 = !DILocation(line: 362, column: 26, scope: !3934)
!3965 = !DILocation(line: 362, column: 14, scope: !3934)
!3966 = !DILocation(line: 362, column: 11, scope: !3934)
!3967 = !DILocation(line: 363, column: 18, scope: !3934)
!3968 = !DILocation(line: 363, column: 31, scope: !3934)
!3969 = !DILocation(line: 363, column: 30, scope: !3934)
!3970 = !DILocation(line: 363, column: 43, scope: !3934)
!3971 = !DILocation(line: 363, column: 42, scope: !3934)
!3972 = !DILocation(line: 363, column: 40, scope: !3934)
!3973 = !DILocation(line: 363, column: 52, scope: !3934)
!3974 = !DILocation(line: 363, column: 57, scope: !3934)
!3975 = !DILocation(line: 363, column: 26, scope: !3934)
!3976 = !DILocation(line: 363, column: 14, scope: !3934)
!3977 = !DILocation(line: 363, column: 11, scope: !3934)
!3978 = !DILocation(line: 364, column: 18, scope: !3934)
!3979 = !DILocation(line: 364, column: 31, scope: !3934)
!3980 = !DILocation(line: 364, column: 30, scope: !3934)
!3981 = !DILocation(line: 364, column: 43, scope: !3934)
!3982 = !DILocation(line: 364, column: 42, scope: !3934)
!3983 = !DILocation(line: 364, column: 40, scope: !3934)
!3984 = !DILocation(line: 364, column: 52, scope: !3934)
!3985 = !DILocation(line: 364, column: 57, scope: !3934)
!3986 = !DILocation(line: 364, column: 26, scope: !3934)
!3987 = !DILocation(line: 364, column: 14, scope: !3934)
!3988 = !DILocation(line: 364, column: 11, scope: !3934)
!3989 = !DILocation(line: 365, column: 18, scope: !3934)
!3990 = !DILocation(line: 365, column: 31, scope: !3934)
!3991 = !DILocation(line: 365, column: 30, scope: !3934)
!3992 = !DILocation(line: 365, column: 43, scope: !3934)
!3993 = !DILocation(line: 365, column: 42, scope: !3934)
!3994 = !DILocation(line: 365, column: 40, scope: !3934)
!3995 = !DILocation(line: 365, column: 52, scope: !3934)
!3996 = !DILocation(line: 365, column: 57, scope: !3934)
!3997 = !DILocation(line: 365, column: 26, scope: !3934)
!3998 = !DILocation(line: 365, column: 14, scope: !3934)
!3999 = !DILocation(line: 365, column: 11, scope: !3934)
!4000 = !DILocation(line: 366, column: 18, scope: !3934)
!4001 = !DILocation(line: 366, column: 31, scope: !3934)
!4002 = !DILocation(line: 366, column: 30, scope: !3934)
!4003 = !DILocation(line: 366, column: 43, scope: !3934)
!4004 = !DILocation(line: 366, column: 42, scope: !3934)
!4005 = !DILocation(line: 366, column: 40, scope: !3934)
!4006 = !DILocation(line: 366, column: 52, scope: !3934)
!4007 = !DILocation(line: 366, column: 57, scope: !3934)
!4008 = !DILocation(line: 366, column: 26, scope: !3934)
!4009 = !DILocation(line: 366, column: 14, scope: !3934)
!4010 = !DILocation(line: 366, column: 11, scope: !3934)
!4011 = !DILocation(line: 367, column: 18, scope: !3934)
!4012 = !DILocation(line: 367, column: 31, scope: !3934)
!4013 = !DILocation(line: 367, column: 30, scope: !3934)
!4014 = !DILocation(line: 367, column: 43, scope: !3934)
!4015 = !DILocation(line: 367, column: 42, scope: !3934)
!4016 = !DILocation(line: 367, column: 40, scope: !3934)
!4017 = !DILocation(line: 367, column: 52, scope: !3934)
!4018 = !DILocation(line: 367, column: 57, scope: !3934)
!4019 = !DILocation(line: 367, column: 26, scope: !3934)
!4020 = !DILocation(line: 367, column: 14, scope: !3934)
!4021 = !DILocation(line: 367, column: 11, scope: !3934)
!4022 = !DILocation(line: 368, column: 17, scope: !3934)
!4023 = !DILocation(line: 368, column: 14, scope: !3934)
!4024 = !DILocation(line: 369, column: 17, scope: !3934)
!4025 = !DILocation(line: 369, column: 14, scope: !3934)
!4026 = !DILocation(line: 370, column: 5, scope: !3934)
!4027 = !DILocation(line: 359, column: 25, scope: !4028)
!4028 = !DILexicalBlockFile(scope: !3929, file: !941, discriminator: 2)
!4029 = !DILocation(line: 359, column: 5, scope: !4028)
!4030 = distinct !{!4030, !4031}
!4031 = !DILocation(line: 359, column: 5, scope: !3909)
!4032 = !DILocation(line: 371, column: 12, scope: !3909)
!4033 = !DILocation(line: 371, column: 5, scope: !3909)
!4034 = distinct !DISubprogram(name: "pix_abs8_y2_c", scope: !941, file: !941, line: 374, type: !2756, isLocal: true, isDefinition: true, scopeLine: 376, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!4035 = !DILocalVariable(name: "v", arg: 1, scope: !4034, file: !941, line: 374, type: !2758)
!4036 = !DILocation(line: 374, column: 42, scope: !4034)
!4037 = !DILocalVariable(name: "pix1", arg: 2, scope: !4034, file: !941, line: 374, type: !1167)
!4038 = !DILocation(line: 374, column: 54, scope: !4034)
!4039 = !DILocalVariable(name: "pix2", arg: 3, scope: !4034, file: !941, line: 374, type: !1167)
!4040 = !DILocation(line: 374, column: 69, scope: !4034)
!4041 = !DILocalVariable(name: "stride", arg: 4, scope: !4034, file: !941, line: 375, type: !1792)
!4042 = !DILocation(line: 375, column: 36, scope: !4034)
!4043 = !DILocalVariable(name: "h", arg: 5, scope: !4034, file: !941, line: 375, type: !952)
!4044 = !DILocation(line: 375, column: 48, scope: !4034)
!4045 = !DILocalVariable(name: "s", scope: !4034, file: !941, line: 377, type: !952)
!4046 = !DILocation(line: 377, column: 9, scope: !4034)
!4047 = !DILocalVariable(name: "i", scope: !4034, file: !941, line: 377, type: !952)
!4048 = !DILocation(line: 377, column: 16, scope: !4034)
!4049 = !DILocalVariable(name: "pix3", scope: !4034, file: !941, line: 378, type: !1167)
!4050 = !DILocation(line: 378, column: 14, scope: !4034)
!4051 = !DILocation(line: 378, column: 21, scope: !4034)
!4052 = !DILocation(line: 378, column: 28, scope: !4034)
!4053 = !DILocation(line: 378, column: 26, scope: !4034)
!4054 = !DILocation(line: 380, column: 12, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4034, file: !941, line: 380, column: 5)
!4056 = !DILocation(line: 380, column: 10, scope: !4055)
!4057 = !DILocation(line: 380, column: 17, scope: !4058)
!4058 = !DILexicalBlockFile(scope: !4059, file: !941, discriminator: 1)
!4059 = distinct !DILexicalBlock(scope: !4055, file: !941, line: 380, column: 5)
!4060 = !DILocation(line: 380, column: 21, scope: !4058)
!4061 = !DILocation(line: 380, column: 19, scope: !4058)
!4062 = !DILocation(line: 380, column: 5, scope: !4058)
!4063 = !DILocation(line: 381, column: 18, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4059, file: !941, line: 380, column: 29)
!4065 = !DILocation(line: 381, column: 31, scope: !4064)
!4066 = !DILocation(line: 381, column: 30, scope: !4064)
!4067 = !DILocation(line: 381, column: 43, scope: !4064)
!4068 = !DILocation(line: 381, column: 42, scope: !4064)
!4069 = !DILocation(line: 381, column: 40, scope: !4064)
!4070 = !DILocation(line: 381, column: 52, scope: !4064)
!4071 = !DILocation(line: 381, column: 57, scope: !4064)
!4072 = !DILocation(line: 381, column: 26, scope: !4064)
!4073 = !DILocation(line: 381, column: 14, scope: !4064)
!4074 = !DILocation(line: 381, column: 11, scope: !4064)
!4075 = !DILocation(line: 382, column: 18, scope: !4064)
!4076 = !DILocation(line: 382, column: 31, scope: !4064)
!4077 = !DILocation(line: 382, column: 30, scope: !4064)
!4078 = !DILocation(line: 382, column: 43, scope: !4064)
!4079 = !DILocation(line: 382, column: 42, scope: !4064)
!4080 = !DILocation(line: 382, column: 40, scope: !4064)
!4081 = !DILocation(line: 382, column: 52, scope: !4064)
!4082 = !DILocation(line: 382, column: 57, scope: !4064)
!4083 = !DILocation(line: 382, column: 26, scope: !4064)
!4084 = !DILocation(line: 382, column: 14, scope: !4064)
!4085 = !DILocation(line: 382, column: 11, scope: !4064)
!4086 = !DILocation(line: 383, column: 18, scope: !4064)
!4087 = !DILocation(line: 383, column: 31, scope: !4064)
!4088 = !DILocation(line: 383, column: 30, scope: !4064)
!4089 = !DILocation(line: 383, column: 43, scope: !4064)
!4090 = !DILocation(line: 383, column: 42, scope: !4064)
!4091 = !DILocation(line: 383, column: 40, scope: !4064)
!4092 = !DILocation(line: 383, column: 52, scope: !4064)
!4093 = !DILocation(line: 383, column: 57, scope: !4064)
!4094 = !DILocation(line: 383, column: 26, scope: !4064)
!4095 = !DILocation(line: 383, column: 14, scope: !4064)
!4096 = !DILocation(line: 383, column: 11, scope: !4064)
!4097 = !DILocation(line: 384, column: 18, scope: !4064)
!4098 = !DILocation(line: 384, column: 31, scope: !4064)
!4099 = !DILocation(line: 384, column: 30, scope: !4064)
!4100 = !DILocation(line: 384, column: 43, scope: !4064)
!4101 = !DILocation(line: 384, column: 42, scope: !4064)
!4102 = !DILocation(line: 384, column: 40, scope: !4064)
!4103 = !DILocation(line: 384, column: 52, scope: !4064)
!4104 = !DILocation(line: 384, column: 57, scope: !4064)
!4105 = !DILocation(line: 384, column: 26, scope: !4064)
!4106 = !DILocation(line: 384, column: 14, scope: !4064)
!4107 = !DILocation(line: 384, column: 11, scope: !4064)
!4108 = !DILocation(line: 385, column: 18, scope: !4064)
!4109 = !DILocation(line: 385, column: 31, scope: !4064)
!4110 = !DILocation(line: 385, column: 30, scope: !4064)
!4111 = !DILocation(line: 385, column: 43, scope: !4064)
!4112 = !DILocation(line: 385, column: 42, scope: !4064)
!4113 = !DILocation(line: 385, column: 40, scope: !4064)
!4114 = !DILocation(line: 385, column: 52, scope: !4064)
!4115 = !DILocation(line: 385, column: 57, scope: !4064)
!4116 = !DILocation(line: 385, column: 26, scope: !4064)
!4117 = !DILocation(line: 385, column: 14, scope: !4064)
!4118 = !DILocation(line: 385, column: 11, scope: !4064)
!4119 = !DILocation(line: 386, column: 18, scope: !4064)
!4120 = !DILocation(line: 386, column: 31, scope: !4064)
!4121 = !DILocation(line: 386, column: 30, scope: !4064)
!4122 = !DILocation(line: 386, column: 43, scope: !4064)
!4123 = !DILocation(line: 386, column: 42, scope: !4064)
!4124 = !DILocation(line: 386, column: 40, scope: !4064)
!4125 = !DILocation(line: 386, column: 52, scope: !4064)
!4126 = !DILocation(line: 386, column: 57, scope: !4064)
!4127 = !DILocation(line: 386, column: 26, scope: !4064)
!4128 = !DILocation(line: 386, column: 14, scope: !4064)
!4129 = !DILocation(line: 386, column: 11, scope: !4064)
!4130 = !DILocation(line: 387, column: 18, scope: !4064)
!4131 = !DILocation(line: 387, column: 31, scope: !4064)
!4132 = !DILocation(line: 387, column: 30, scope: !4064)
!4133 = !DILocation(line: 387, column: 43, scope: !4064)
!4134 = !DILocation(line: 387, column: 42, scope: !4064)
!4135 = !DILocation(line: 387, column: 40, scope: !4064)
!4136 = !DILocation(line: 387, column: 52, scope: !4064)
!4137 = !DILocation(line: 387, column: 57, scope: !4064)
!4138 = !DILocation(line: 387, column: 26, scope: !4064)
!4139 = !DILocation(line: 387, column: 14, scope: !4064)
!4140 = !DILocation(line: 387, column: 11, scope: !4064)
!4141 = !DILocation(line: 388, column: 18, scope: !4064)
!4142 = !DILocation(line: 388, column: 31, scope: !4064)
!4143 = !DILocation(line: 388, column: 30, scope: !4064)
!4144 = !DILocation(line: 388, column: 43, scope: !4064)
!4145 = !DILocation(line: 388, column: 42, scope: !4064)
!4146 = !DILocation(line: 388, column: 40, scope: !4064)
!4147 = !DILocation(line: 388, column: 52, scope: !4064)
!4148 = !DILocation(line: 388, column: 57, scope: !4064)
!4149 = !DILocation(line: 388, column: 26, scope: !4064)
!4150 = !DILocation(line: 388, column: 14, scope: !4064)
!4151 = !DILocation(line: 388, column: 11, scope: !4064)
!4152 = !DILocation(line: 389, column: 17, scope: !4064)
!4153 = !DILocation(line: 389, column: 14, scope: !4064)
!4154 = !DILocation(line: 390, column: 17, scope: !4064)
!4155 = !DILocation(line: 390, column: 14, scope: !4064)
!4156 = !DILocation(line: 391, column: 17, scope: !4064)
!4157 = !DILocation(line: 391, column: 14, scope: !4064)
!4158 = !DILocation(line: 392, column: 5, scope: !4064)
!4159 = !DILocation(line: 380, column: 25, scope: !4160)
!4160 = !DILexicalBlockFile(scope: !4059, file: !941, discriminator: 2)
!4161 = !DILocation(line: 380, column: 5, scope: !4160)
!4162 = distinct !{!4162, !4163}
!4163 = !DILocation(line: 380, column: 5, scope: !4034)
!4164 = !DILocation(line: 393, column: 12, scope: !4034)
!4165 = !DILocation(line: 393, column: 5, scope: !4034)
!4166 = distinct !DISubprogram(name: "pix_abs8_xy2_c", scope: !941, file: !941, line: 396, type: !2756, isLocal: true, isDefinition: true, scopeLine: 398, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!4167 = !DILocalVariable(name: "v", arg: 1, scope: !4166, file: !941, line: 396, type: !2758)
!4168 = !DILocation(line: 396, column: 43, scope: !4166)
!4169 = !DILocalVariable(name: "pix1", arg: 2, scope: !4166, file: !941, line: 396, type: !1167)
!4170 = !DILocation(line: 396, column: 55, scope: !4166)
!4171 = !DILocalVariable(name: "pix2", arg: 3, scope: !4166, file: !941, line: 396, type: !1167)
!4172 = !DILocation(line: 396, column: 70, scope: !4166)
!4173 = !DILocalVariable(name: "stride", arg: 4, scope: !4166, file: !941, line: 397, type: !1792)
!4174 = !DILocation(line: 397, column: 37, scope: !4166)
!4175 = !DILocalVariable(name: "h", arg: 5, scope: !4166, file: !941, line: 397, type: !952)
!4176 = !DILocation(line: 397, column: 49, scope: !4166)
!4177 = !DILocalVariable(name: "s", scope: !4166, file: !941, line: 399, type: !952)
!4178 = !DILocation(line: 399, column: 9, scope: !4166)
!4179 = !DILocalVariable(name: "i", scope: !4166, file: !941, line: 399, type: !952)
!4180 = !DILocation(line: 399, column: 16, scope: !4166)
!4181 = !DILocalVariable(name: "pix3", scope: !4166, file: !941, line: 400, type: !1167)
!4182 = !DILocation(line: 400, column: 14, scope: !4166)
!4183 = !DILocation(line: 400, column: 21, scope: !4166)
!4184 = !DILocation(line: 400, column: 28, scope: !4166)
!4185 = !DILocation(line: 400, column: 26, scope: !4166)
!4186 = !DILocation(line: 402, column: 12, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4166, file: !941, line: 402, column: 5)
!4188 = !DILocation(line: 402, column: 10, scope: !4187)
!4189 = !DILocation(line: 402, column: 17, scope: !4190)
!4190 = !DILexicalBlockFile(scope: !4191, file: !941, discriminator: 1)
!4191 = distinct !DILexicalBlock(scope: !4187, file: !941, line: 402, column: 5)
!4192 = !DILocation(line: 402, column: 21, scope: !4190)
!4193 = !DILocation(line: 402, column: 19, scope: !4190)
!4194 = !DILocation(line: 402, column: 5, scope: !4190)
!4195 = !DILocation(line: 403, column: 18, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4191, file: !941, line: 402, column: 29)
!4197 = !DILocation(line: 403, column: 31, scope: !4196)
!4198 = !DILocation(line: 403, column: 30, scope: !4196)
!4199 = !DILocation(line: 403, column: 43, scope: !4196)
!4200 = !DILocation(line: 403, column: 42, scope: !4196)
!4201 = !DILocation(line: 403, column: 40, scope: !4196)
!4202 = !DILocation(line: 403, column: 55, scope: !4196)
!4203 = !DILocation(line: 403, column: 54, scope: !4196)
!4204 = !DILocation(line: 403, column: 52, scope: !4196)
!4205 = !DILocation(line: 403, column: 67, scope: !4196)
!4206 = !DILocation(line: 403, column: 66, scope: !4196)
!4207 = !DILocation(line: 403, column: 64, scope: !4196)
!4208 = !DILocation(line: 403, column: 76, scope: !4196)
!4209 = !DILocation(line: 403, column: 81, scope: !4196)
!4210 = !DILocation(line: 403, column: 26, scope: !4196)
!4211 = !DILocation(line: 403, column: 14, scope: !4196)
!4212 = !DILocation(line: 403, column: 11, scope: !4196)
!4213 = !DILocation(line: 404, column: 18, scope: !4196)
!4214 = !DILocation(line: 404, column: 31, scope: !4196)
!4215 = !DILocation(line: 404, column: 30, scope: !4196)
!4216 = !DILocation(line: 404, column: 43, scope: !4196)
!4217 = !DILocation(line: 404, column: 42, scope: !4196)
!4218 = !DILocation(line: 404, column: 40, scope: !4196)
!4219 = !DILocation(line: 404, column: 55, scope: !4196)
!4220 = !DILocation(line: 404, column: 54, scope: !4196)
!4221 = !DILocation(line: 404, column: 52, scope: !4196)
!4222 = !DILocation(line: 404, column: 67, scope: !4196)
!4223 = !DILocation(line: 404, column: 66, scope: !4196)
!4224 = !DILocation(line: 404, column: 64, scope: !4196)
!4225 = !DILocation(line: 404, column: 76, scope: !4196)
!4226 = !DILocation(line: 404, column: 81, scope: !4196)
!4227 = !DILocation(line: 404, column: 26, scope: !4196)
!4228 = !DILocation(line: 404, column: 14, scope: !4196)
!4229 = !DILocation(line: 404, column: 11, scope: !4196)
!4230 = !DILocation(line: 405, column: 18, scope: !4196)
!4231 = !DILocation(line: 405, column: 31, scope: !4196)
!4232 = !DILocation(line: 405, column: 30, scope: !4196)
!4233 = !DILocation(line: 405, column: 43, scope: !4196)
!4234 = !DILocation(line: 405, column: 42, scope: !4196)
!4235 = !DILocation(line: 405, column: 40, scope: !4196)
!4236 = !DILocation(line: 405, column: 55, scope: !4196)
!4237 = !DILocation(line: 405, column: 54, scope: !4196)
!4238 = !DILocation(line: 405, column: 52, scope: !4196)
!4239 = !DILocation(line: 405, column: 67, scope: !4196)
!4240 = !DILocation(line: 405, column: 66, scope: !4196)
!4241 = !DILocation(line: 405, column: 64, scope: !4196)
!4242 = !DILocation(line: 405, column: 76, scope: !4196)
!4243 = !DILocation(line: 405, column: 81, scope: !4196)
!4244 = !DILocation(line: 405, column: 26, scope: !4196)
!4245 = !DILocation(line: 405, column: 14, scope: !4196)
!4246 = !DILocation(line: 405, column: 11, scope: !4196)
!4247 = !DILocation(line: 406, column: 18, scope: !4196)
!4248 = !DILocation(line: 406, column: 31, scope: !4196)
!4249 = !DILocation(line: 406, column: 30, scope: !4196)
!4250 = !DILocation(line: 406, column: 43, scope: !4196)
!4251 = !DILocation(line: 406, column: 42, scope: !4196)
!4252 = !DILocation(line: 406, column: 40, scope: !4196)
!4253 = !DILocation(line: 406, column: 55, scope: !4196)
!4254 = !DILocation(line: 406, column: 54, scope: !4196)
!4255 = !DILocation(line: 406, column: 52, scope: !4196)
!4256 = !DILocation(line: 406, column: 67, scope: !4196)
!4257 = !DILocation(line: 406, column: 66, scope: !4196)
!4258 = !DILocation(line: 406, column: 64, scope: !4196)
!4259 = !DILocation(line: 406, column: 76, scope: !4196)
!4260 = !DILocation(line: 406, column: 81, scope: !4196)
!4261 = !DILocation(line: 406, column: 26, scope: !4196)
!4262 = !DILocation(line: 406, column: 14, scope: !4196)
!4263 = !DILocation(line: 406, column: 11, scope: !4196)
!4264 = !DILocation(line: 407, column: 18, scope: !4196)
!4265 = !DILocation(line: 407, column: 31, scope: !4196)
!4266 = !DILocation(line: 407, column: 30, scope: !4196)
!4267 = !DILocation(line: 407, column: 43, scope: !4196)
!4268 = !DILocation(line: 407, column: 42, scope: !4196)
!4269 = !DILocation(line: 407, column: 40, scope: !4196)
!4270 = !DILocation(line: 407, column: 55, scope: !4196)
!4271 = !DILocation(line: 407, column: 54, scope: !4196)
!4272 = !DILocation(line: 407, column: 52, scope: !4196)
!4273 = !DILocation(line: 407, column: 67, scope: !4196)
!4274 = !DILocation(line: 407, column: 66, scope: !4196)
!4275 = !DILocation(line: 407, column: 64, scope: !4196)
!4276 = !DILocation(line: 407, column: 76, scope: !4196)
!4277 = !DILocation(line: 407, column: 81, scope: !4196)
!4278 = !DILocation(line: 407, column: 26, scope: !4196)
!4279 = !DILocation(line: 407, column: 14, scope: !4196)
!4280 = !DILocation(line: 407, column: 11, scope: !4196)
!4281 = !DILocation(line: 408, column: 18, scope: !4196)
!4282 = !DILocation(line: 408, column: 31, scope: !4196)
!4283 = !DILocation(line: 408, column: 30, scope: !4196)
!4284 = !DILocation(line: 408, column: 43, scope: !4196)
!4285 = !DILocation(line: 408, column: 42, scope: !4196)
!4286 = !DILocation(line: 408, column: 40, scope: !4196)
!4287 = !DILocation(line: 408, column: 55, scope: !4196)
!4288 = !DILocation(line: 408, column: 54, scope: !4196)
!4289 = !DILocation(line: 408, column: 52, scope: !4196)
!4290 = !DILocation(line: 408, column: 67, scope: !4196)
!4291 = !DILocation(line: 408, column: 66, scope: !4196)
!4292 = !DILocation(line: 408, column: 64, scope: !4196)
!4293 = !DILocation(line: 408, column: 76, scope: !4196)
!4294 = !DILocation(line: 408, column: 81, scope: !4196)
!4295 = !DILocation(line: 408, column: 26, scope: !4196)
!4296 = !DILocation(line: 408, column: 14, scope: !4196)
!4297 = !DILocation(line: 408, column: 11, scope: !4196)
!4298 = !DILocation(line: 409, column: 18, scope: !4196)
!4299 = !DILocation(line: 409, column: 31, scope: !4196)
!4300 = !DILocation(line: 409, column: 30, scope: !4196)
!4301 = !DILocation(line: 409, column: 43, scope: !4196)
!4302 = !DILocation(line: 409, column: 42, scope: !4196)
!4303 = !DILocation(line: 409, column: 40, scope: !4196)
!4304 = !DILocation(line: 409, column: 55, scope: !4196)
!4305 = !DILocation(line: 409, column: 54, scope: !4196)
!4306 = !DILocation(line: 409, column: 52, scope: !4196)
!4307 = !DILocation(line: 409, column: 67, scope: !4196)
!4308 = !DILocation(line: 409, column: 66, scope: !4196)
!4309 = !DILocation(line: 409, column: 64, scope: !4196)
!4310 = !DILocation(line: 409, column: 76, scope: !4196)
!4311 = !DILocation(line: 409, column: 81, scope: !4196)
!4312 = !DILocation(line: 409, column: 26, scope: !4196)
!4313 = !DILocation(line: 409, column: 14, scope: !4196)
!4314 = !DILocation(line: 409, column: 11, scope: !4196)
!4315 = !DILocation(line: 410, column: 18, scope: !4196)
!4316 = !DILocation(line: 410, column: 31, scope: !4196)
!4317 = !DILocation(line: 410, column: 30, scope: !4196)
!4318 = !DILocation(line: 410, column: 43, scope: !4196)
!4319 = !DILocation(line: 410, column: 42, scope: !4196)
!4320 = !DILocation(line: 410, column: 40, scope: !4196)
!4321 = !DILocation(line: 410, column: 55, scope: !4196)
!4322 = !DILocation(line: 410, column: 54, scope: !4196)
!4323 = !DILocation(line: 410, column: 52, scope: !4196)
!4324 = !DILocation(line: 410, column: 67, scope: !4196)
!4325 = !DILocation(line: 410, column: 66, scope: !4196)
!4326 = !DILocation(line: 410, column: 64, scope: !4196)
!4327 = !DILocation(line: 410, column: 76, scope: !4196)
!4328 = !DILocation(line: 410, column: 81, scope: !4196)
!4329 = !DILocation(line: 410, column: 26, scope: !4196)
!4330 = !DILocation(line: 410, column: 14, scope: !4196)
!4331 = !DILocation(line: 410, column: 11, scope: !4196)
!4332 = !DILocation(line: 411, column: 17, scope: !4196)
!4333 = !DILocation(line: 411, column: 14, scope: !4196)
!4334 = !DILocation(line: 412, column: 17, scope: !4196)
!4335 = !DILocation(line: 412, column: 14, scope: !4196)
!4336 = !DILocation(line: 413, column: 17, scope: !4196)
!4337 = !DILocation(line: 413, column: 14, scope: !4196)
!4338 = !DILocation(line: 414, column: 5, scope: !4196)
!4339 = !DILocation(line: 402, column: 25, scope: !4340)
!4340 = !DILexicalBlockFile(scope: !4191, file: !941, discriminator: 2)
!4341 = !DILocation(line: 402, column: 5, scope: !4340)
!4342 = distinct !{!4342, !4343}
!4343 = !DILocation(line: 402, column: 5, scope: !4166)
!4344 = !DILocation(line: 415, column: 12, scope: !4166)
!4345 = !DILocation(line: 415, column: 5, scope: !4166)
!4346 = distinct !DISubprogram(name: "hadamard8_diff16_c", scope: !941, file: !941, line: 1003, type: !2756, isLocal: true, isDefinition: true, scopeLine: 1003, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!4347 = !DILocalVariable(name: "s", arg: 1, scope: !4346, file: !941, line: 1003, type: !2758)
!4348 = !DILocation(line: 1003, column: 47, scope: !4346)
!4349 = !DILocalVariable(name: "dst", arg: 2, scope: !4346, file: !941, line: 1003, type: !1167)
!4350 = !DILocation(line: 1003, column: 59, scope: !4346)
!4351 = !DILocalVariable(name: "src", arg: 3, scope: !4346, file: !941, line: 1003, type: !1167)
!4352 = !DILocation(line: 1003, column: 73, scope: !4346)
!4353 = !DILocalVariable(name: "stride", arg: 4, scope: !4346, file: !941, line: 1003, type: !1792)
!4354 = !DILocation(line: 1003, column: 88, scope: !4346)
!4355 = !DILocalVariable(name: "h", arg: 5, scope: !4346, file: !941, line: 1003, type: !952)
!4356 = !DILocation(line: 1003, column: 100, scope: !4346)
!4357 = !DILocalVariable(name: "score", scope: !4346, file: !941, line: 1003, type: !952)
!4358 = !DILocation(line: 1003, column: 109, scope: !4346)
!4359 = !DILocation(line: 1003, column: 149, scope: !4346)
!4360 = !DILocation(line: 1003, column: 152, scope: !4346)
!4361 = !DILocation(line: 1003, column: 157, scope: !4346)
!4362 = !DILocation(line: 1003, column: 162, scope: !4346)
!4363 = !DILocation(line: 1003, column: 129, scope: !4346)
!4364 = !DILocation(line: 1003, column: 126, scope: !4346)
!4365 = !DILocation(line: 1003, column: 203, scope: !4346)
!4366 = !DILocation(line: 1003, column: 206, scope: !4346)
!4367 = !DILocation(line: 1003, column: 210, scope: !4346)
!4368 = !DILocation(line: 1003, column: 215, scope: !4346)
!4369 = !DILocation(line: 1003, column: 219, scope: !4346)
!4370 = !DILocation(line: 1003, column: 224, scope: !4346)
!4371 = !DILocation(line: 1003, column: 183, scope: !4372)
!4372 = !DILexicalBlockFile(scope: !4346, file: !941, discriminator: 3)
!4373 = !DILocation(line: 1003, column: 180, scope: !4346)
!4374 = !DILocation(line: 1003, column: 240, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4346, file: !941, line: 1003, column: 240)
!4376 = !DILocation(line: 1003, column: 242, scope: !4375)
!4377 = !DILocation(line: 1003, column: 240, scope: !4346)
!4378 = !DILocation(line: 1003, column: 262, scope: !4379)
!4379 = !DILexicalBlockFile(scope: !4380, file: !941, discriminator: 1)
!4380 = distinct !DILexicalBlock(scope: !4375, file: !941, line: 1003, column: 249)
!4381 = !DILocation(line: 1003, column: 260, scope: !4379)
!4382 = !DILocation(line: 1003, column: 255, scope: !4379)
!4383 = !DILocation(line: 1003, column: 281, scope: !4379)
!4384 = !DILocation(line: 1003, column: 279, scope: !4379)
!4385 = !DILocation(line: 1003, column: 274, scope: !4379)
!4386 = !DILocation(line: 1003, column: 318, scope: !4379)
!4387 = !DILocation(line: 1003, column: 321, scope: !4379)
!4388 = !DILocation(line: 1003, column: 326, scope: !4379)
!4389 = !DILocation(line: 1003, column: 331, scope: !4379)
!4390 = !DILocation(line: 1003, column: 298, scope: !4379)
!4391 = !DILocation(line: 1003, column: 295, scope: !4379)
!4392 = !DILocation(line: 1003, column: 372, scope: !4379)
!4393 = !DILocation(line: 1003, column: 375, scope: !4379)
!4394 = !DILocation(line: 1003, column: 379, scope: !4379)
!4395 = !DILocation(line: 1003, column: 384, scope: !4379)
!4396 = !DILocation(line: 1003, column: 388, scope: !4379)
!4397 = !DILocation(line: 1003, column: 393, scope: !4379)
!4398 = !DILocation(line: 1003, column: 352, scope: !4399)
!4399 = !DILexicalBlockFile(scope: !4379, file: !941, discriminator: 4)
!4400 = !DILocation(line: 1003, column: 349, scope: !4379)
!4401 = !DILocation(line: 1003, column: 405, scope: !4379)
!4402 = !DILocation(line: 1003, column: 414, scope: !4403)
!4403 = !DILexicalBlockFile(scope: !4346, file: !941, discriminator: 2)
!4404 = !DILocation(line: 1003, column: 407, scope: !4403)
!4405 = distinct !DISubprogram(name: "hadamard8_diff8x8_c", scope: !941, file: !941, line: 554, type: !2756, isLocal: true, isDefinition: true, scopeLine: 556, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!4406 = !DILocalVariable(name: "s", arg: 1, scope: !4405, file: !941, line: 554, type: !2758)
!4407 = !DILocation(line: 554, column: 48, scope: !4405)
!4408 = !DILocalVariable(name: "dst", arg: 2, scope: !4405, file: !941, line: 554, type: !1167)
!4409 = !DILocation(line: 554, column: 60, scope: !4405)
!4410 = !DILocalVariable(name: "src", arg: 3, scope: !4405, file: !941, line: 555, type: !1167)
!4411 = !DILocation(line: 555, column: 41, scope: !4405)
!4412 = !DILocalVariable(name: "stride", arg: 4, scope: !4405, file: !941, line: 555, type: !1792)
!4413 = !DILocation(line: 555, column: 56, scope: !4405)
!4414 = !DILocalVariable(name: "h", arg: 5, scope: !4405, file: !941, line: 555, type: !952)
!4415 = !DILocation(line: 555, column: 68, scope: !4405)
!4416 = !DILocalVariable(name: "i", scope: !4405, file: !941, line: 557, type: !952)
!4417 = !DILocation(line: 557, column: 9, scope: !4405)
!4418 = !DILocalVariable(name: "temp", scope: !4405, file: !941, line: 557, type: !2234)
!4419 = !DILocation(line: 557, column: 12, scope: !4405)
!4420 = !DILocalVariable(name: "sum", scope: !4405, file: !941, line: 557, type: !952)
!4421 = !DILocation(line: 557, column: 22, scope: !4405)
!4422 = !DILocation(line: 561, column: 12, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4405, file: !941, line: 561, column: 5)
!4424 = !DILocation(line: 561, column: 10, scope: !4423)
!4425 = !DILocation(line: 561, column: 17, scope: !4426)
!4426 = !DILexicalBlockFile(scope: !4427, file: !941, discriminator: 1)
!4427 = distinct !DILexicalBlock(scope: !4423, file: !941, line: 561, column: 5)
!4428 = !DILocation(line: 561, column: 19, scope: !4426)
!4429 = !DILocation(line: 561, column: 5, scope: !4426)
!4430 = !DILocation(line: 563, column: 32, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4427, file: !941, line: 561, column: 29)
!4432 = !DILocation(line: 563, column: 41, scope: !4431)
!4433 = !DILocation(line: 563, column: 39, scope: !4431)
!4434 = !DILocation(line: 563, column: 43, scope: !4431)
!4435 = !DILocation(line: 563, column: 28, scope: !4431)
!4436 = !DILocation(line: 563, column: 54, scope: !4431)
!4437 = !DILocation(line: 563, column: 63, scope: !4431)
!4438 = !DILocation(line: 563, column: 61, scope: !4431)
!4439 = !DILocation(line: 563, column: 65, scope: !4431)
!4440 = !DILocation(line: 563, column: 50, scope: !4431)
!4441 = !DILocation(line: 563, column: 48, scope: !4431)
!4442 = !DILocation(line: 563, column: 78, scope: !4431)
!4443 = !DILocation(line: 563, column: 87, scope: !4431)
!4444 = !DILocation(line: 563, column: 85, scope: !4431)
!4445 = !DILocation(line: 563, column: 89, scope: !4431)
!4446 = !DILocation(line: 563, column: 74, scope: !4431)
!4447 = !DILocation(line: 563, column: 100, scope: !4431)
!4448 = !DILocation(line: 563, column: 109, scope: !4431)
!4449 = !DILocation(line: 563, column: 107, scope: !4431)
!4450 = !DILocation(line: 563, column: 111, scope: !4431)
!4451 = !DILocation(line: 563, column: 96, scope: !4431)
!4452 = !DILocation(line: 563, column: 94, scope: !4431)
!4453 = !DILocation(line: 563, column: 71, scope: !4431)
!4454 = !DILocation(line: 563, column: 18, scope: !4431)
!4455 = !DILocation(line: 563, column: 16, scope: !4431)
!4456 = !DILocation(line: 563, column: 20, scope: !4431)
!4457 = !DILocation(line: 563, column: 9, scope: !4431)
!4458 = !DILocation(line: 563, column: 25, scope: !4431)
!4459 = !DILocation(line: 563, column: 141, scope: !4431)
!4460 = !DILocation(line: 563, column: 150, scope: !4431)
!4461 = !DILocation(line: 563, column: 148, scope: !4431)
!4462 = !DILocation(line: 563, column: 152, scope: !4431)
!4463 = !DILocation(line: 563, column: 137, scope: !4431)
!4464 = !DILocation(line: 563, column: 163, scope: !4431)
!4465 = !DILocation(line: 563, column: 172, scope: !4431)
!4466 = !DILocation(line: 563, column: 170, scope: !4431)
!4467 = !DILocation(line: 563, column: 174, scope: !4431)
!4468 = !DILocation(line: 563, column: 159, scope: !4431)
!4469 = !DILocation(line: 563, column: 157, scope: !4431)
!4470 = !DILocation(line: 563, column: 187, scope: !4431)
!4471 = !DILocation(line: 563, column: 196, scope: !4431)
!4472 = !DILocation(line: 563, column: 194, scope: !4431)
!4473 = !DILocation(line: 563, column: 198, scope: !4431)
!4474 = !DILocation(line: 563, column: 183, scope: !4431)
!4475 = !DILocation(line: 563, column: 209, scope: !4431)
!4476 = !DILocation(line: 563, column: 218, scope: !4431)
!4477 = !DILocation(line: 563, column: 216, scope: !4431)
!4478 = !DILocation(line: 563, column: 220, scope: !4431)
!4479 = !DILocation(line: 563, column: 205, scope: !4431)
!4480 = !DILocation(line: 563, column: 203, scope: !4431)
!4481 = !DILocation(line: 563, column: 180, scope: !4431)
!4482 = !DILocation(line: 563, column: 127, scope: !4431)
!4483 = !DILocation(line: 563, column: 125, scope: !4431)
!4484 = !DILocation(line: 563, column: 129, scope: !4431)
!4485 = !DILocation(line: 563, column: 118, scope: !4431)
!4486 = !DILocation(line: 563, column: 134, scope: !4431)
!4487 = !DILocation(line: 566, column: 32, scope: !4431)
!4488 = !DILocation(line: 566, column: 41, scope: !4431)
!4489 = !DILocation(line: 566, column: 39, scope: !4431)
!4490 = !DILocation(line: 566, column: 43, scope: !4431)
!4491 = !DILocation(line: 566, column: 28, scope: !4431)
!4492 = !DILocation(line: 566, column: 54, scope: !4431)
!4493 = !DILocation(line: 566, column: 63, scope: !4431)
!4494 = !DILocation(line: 566, column: 61, scope: !4431)
!4495 = !DILocation(line: 566, column: 65, scope: !4431)
!4496 = !DILocation(line: 566, column: 50, scope: !4431)
!4497 = !DILocation(line: 566, column: 48, scope: !4431)
!4498 = !DILocation(line: 566, column: 78, scope: !4431)
!4499 = !DILocation(line: 566, column: 87, scope: !4431)
!4500 = !DILocation(line: 566, column: 85, scope: !4431)
!4501 = !DILocation(line: 566, column: 89, scope: !4431)
!4502 = !DILocation(line: 566, column: 74, scope: !4431)
!4503 = !DILocation(line: 566, column: 100, scope: !4431)
!4504 = !DILocation(line: 566, column: 109, scope: !4431)
!4505 = !DILocation(line: 566, column: 107, scope: !4431)
!4506 = !DILocation(line: 566, column: 111, scope: !4431)
!4507 = !DILocation(line: 566, column: 96, scope: !4431)
!4508 = !DILocation(line: 566, column: 94, scope: !4431)
!4509 = !DILocation(line: 566, column: 71, scope: !4431)
!4510 = !DILocation(line: 566, column: 18, scope: !4431)
!4511 = !DILocation(line: 566, column: 16, scope: !4431)
!4512 = !DILocation(line: 566, column: 20, scope: !4431)
!4513 = !DILocation(line: 566, column: 9, scope: !4431)
!4514 = !DILocation(line: 566, column: 25, scope: !4431)
!4515 = !DILocation(line: 566, column: 141, scope: !4431)
!4516 = !DILocation(line: 566, column: 150, scope: !4431)
!4517 = !DILocation(line: 566, column: 148, scope: !4431)
!4518 = !DILocation(line: 566, column: 152, scope: !4431)
!4519 = !DILocation(line: 566, column: 137, scope: !4431)
!4520 = !DILocation(line: 566, column: 163, scope: !4431)
!4521 = !DILocation(line: 566, column: 172, scope: !4431)
!4522 = !DILocation(line: 566, column: 170, scope: !4431)
!4523 = !DILocation(line: 566, column: 174, scope: !4431)
!4524 = !DILocation(line: 566, column: 159, scope: !4431)
!4525 = !DILocation(line: 566, column: 157, scope: !4431)
!4526 = !DILocation(line: 566, column: 187, scope: !4431)
!4527 = !DILocation(line: 566, column: 196, scope: !4431)
!4528 = !DILocation(line: 566, column: 194, scope: !4431)
!4529 = !DILocation(line: 566, column: 198, scope: !4431)
!4530 = !DILocation(line: 566, column: 183, scope: !4431)
!4531 = !DILocation(line: 566, column: 209, scope: !4431)
!4532 = !DILocation(line: 566, column: 218, scope: !4431)
!4533 = !DILocation(line: 566, column: 216, scope: !4431)
!4534 = !DILocation(line: 566, column: 220, scope: !4431)
!4535 = !DILocation(line: 566, column: 205, scope: !4431)
!4536 = !DILocation(line: 566, column: 203, scope: !4431)
!4537 = !DILocation(line: 566, column: 180, scope: !4431)
!4538 = !DILocation(line: 566, column: 127, scope: !4431)
!4539 = !DILocation(line: 566, column: 125, scope: !4431)
!4540 = !DILocation(line: 566, column: 129, scope: !4431)
!4541 = !DILocation(line: 566, column: 118, scope: !4431)
!4542 = !DILocation(line: 566, column: 134, scope: !4431)
!4543 = !DILocation(line: 569, column: 32, scope: !4431)
!4544 = !DILocation(line: 569, column: 41, scope: !4431)
!4545 = !DILocation(line: 569, column: 39, scope: !4431)
!4546 = !DILocation(line: 569, column: 43, scope: !4431)
!4547 = !DILocation(line: 569, column: 28, scope: !4431)
!4548 = !DILocation(line: 569, column: 54, scope: !4431)
!4549 = !DILocation(line: 569, column: 63, scope: !4431)
!4550 = !DILocation(line: 569, column: 61, scope: !4431)
!4551 = !DILocation(line: 569, column: 65, scope: !4431)
!4552 = !DILocation(line: 569, column: 50, scope: !4431)
!4553 = !DILocation(line: 569, column: 48, scope: !4431)
!4554 = !DILocation(line: 569, column: 78, scope: !4431)
!4555 = !DILocation(line: 569, column: 87, scope: !4431)
!4556 = !DILocation(line: 569, column: 85, scope: !4431)
!4557 = !DILocation(line: 569, column: 89, scope: !4431)
!4558 = !DILocation(line: 569, column: 74, scope: !4431)
!4559 = !DILocation(line: 569, column: 100, scope: !4431)
!4560 = !DILocation(line: 569, column: 109, scope: !4431)
!4561 = !DILocation(line: 569, column: 107, scope: !4431)
!4562 = !DILocation(line: 569, column: 111, scope: !4431)
!4563 = !DILocation(line: 569, column: 96, scope: !4431)
!4564 = !DILocation(line: 569, column: 94, scope: !4431)
!4565 = !DILocation(line: 569, column: 71, scope: !4431)
!4566 = !DILocation(line: 569, column: 18, scope: !4431)
!4567 = !DILocation(line: 569, column: 16, scope: !4431)
!4568 = !DILocation(line: 569, column: 20, scope: !4431)
!4569 = !DILocation(line: 569, column: 9, scope: !4431)
!4570 = !DILocation(line: 569, column: 25, scope: !4431)
!4571 = !DILocation(line: 569, column: 141, scope: !4431)
!4572 = !DILocation(line: 569, column: 150, scope: !4431)
!4573 = !DILocation(line: 569, column: 148, scope: !4431)
!4574 = !DILocation(line: 569, column: 152, scope: !4431)
!4575 = !DILocation(line: 569, column: 137, scope: !4431)
!4576 = !DILocation(line: 569, column: 163, scope: !4431)
!4577 = !DILocation(line: 569, column: 172, scope: !4431)
!4578 = !DILocation(line: 569, column: 170, scope: !4431)
!4579 = !DILocation(line: 569, column: 174, scope: !4431)
!4580 = !DILocation(line: 569, column: 159, scope: !4431)
!4581 = !DILocation(line: 569, column: 157, scope: !4431)
!4582 = !DILocation(line: 569, column: 187, scope: !4431)
!4583 = !DILocation(line: 569, column: 196, scope: !4431)
!4584 = !DILocation(line: 569, column: 194, scope: !4431)
!4585 = !DILocation(line: 569, column: 198, scope: !4431)
!4586 = !DILocation(line: 569, column: 183, scope: !4431)
!4587 = !DILocation(line: 569, column: 209, scope: !4431)
!4588 = !DILocation(line: 569, column: 218, scope: !4431)
!4589 = !DILocation(line: 569, column: 216, scope: !4431)
!4590 = !DILocation(line: 569, column: 220, scope: !4431)
!4591 = !DILocation(line: 569, column: 205, scope: !4431)
!4592 = !DILocation(line: 569, column: 203, scope: !4431)
!4593 = !DILocation(line: 569, column: 180, scope: !4431)
!4594 = !DILocation(line: 569, column: 127, scope: !4431)
!4595 = !DILocation(line: 569, column: 125, scope: !4431)
!4596 = !DILocation(line: 569, column: 129, scope: !4431)
!4597 = !DILocation(line: 569, column: 118, scope: !4431)
!4598 = !DILocation(line: 569, column: 134, scope: !4431)
!4599 = !DILocation(line: 572, column: 32, scope: !4431)
!4600 = !DILocation(line: 572, column: 41, scope: !4431)
!4601 = !DILocation(line: 572, column: 39, scope: !4431)
!4602 = !DILocation(line: 572, column: 43, scope: !4431)
!4603 = !DILocation(line: 572, column: 28, scope: !4431)
!4604 = !DILocation(line: 572, column: 54, scope: !4431)
!4605 = !DILocation(line: 572, column: 63, scope: !4431)
!4606 = !DILocation(line: 572, column: 61, scope: !4431)
!4607 = !DILocation(line: 572, column: 65, scope: !4431)
!4608 = !DILocation(line: 572, column: 50, scope: !4431)
!4609 = !DILocation(line: 572, column: 48, scope: !4431)
!4610 = !DILocation(line: 572, column: 78, scope: !4431)
!4611 = !DILocation(line: 572, column: 87, scope: !4431)
!4612 = !DILocation(line: 572, column: 85, scope: !4431)
!4613 = !DILocation(line: 572, column: 89, scope: !4431)
!4614 = !DILocation(line: 572, column: 74, scope: !4431)
!4615 = !DILocation(line: 572, column: 100, scope: !4431)
!4616 = !DILocation(line: 572, column: 109, scope: !4431)
!4617 = !DILocation(line: 572, column: 107, scope: !4431)
!4618 = !DILocation(line: 572, column: 111, scope: !4431)
!4619 = !DILocation(line: 572, column: 96, scope: !4431)
!4620 = !DILocation(line: 572, column: 94, scope: !4431)
!4621 = !DILocation(line: 572, column: 71, scope: !4431)
!4622 = !DILocation(line: 572, column: 18, scope: !4431)
!4623 = !DILocation(line: 572, column: 16, scope: !4431)
!4624 = !DILocation(line: 572, column: 20, scope: !4431)
!4625 = !DILocation(line: 572, column: 9, scope: !4431)
!4626 = !DILocation(line: 572, column: 25, scope: !4431)
!4627 = !DILocation(line: 572, column: 141, scope: !4431)
!4628 = !DILocation(line: 572, column: 150, scope: !4431)
!4629 = !DILocation(line: 572, column: 148, scope: !4431)
!4630 = !DILocation(line: 572, column: 152, scope: !4431)
!4631 = !DILocation(line: 572, column: 137, scope: !4431)
!4632 = !DILocation(line: 572, column: 163, scope: !4431)
!4633 = !DILocation(line: 572, column: 172, scope: !4431)
!4634 = !DILocation(line: 572, column: 170, scope: !4431)
!4635 = !DILocation(line: 572, column: 174, scope: !4431)
!4636 = !DILocation(line: 572, column: 159, scope: !4431)
!4637 = !DILocation(line: 572, column: 157, scope: !4431)
!4638 = !DILocation(line: 572, column: 187, scope: !4431)
!4639 = !DILocation(line: 572, column: 196, scope: !4431)
!4640 = !DILocation(line: 572, column: 194, scope: !4431)
!4641 = !DILocation(line: 572, column: 198, scope: !4431)
!4642 = !DILocation(line: 572, column: 183, scope: !4431)
!4643 = !DILocation(line: 572, column: 209, scope: !4431)
!4644 = !DILocation(line: 572, column: 218, scope: !4431)
!4645 = !DILocation(line: 572, column: 216, scope: !4431)
!4646 = !DILocation(line: 572, column: 220, scope: !4431)
!4647 = !DILocation(line: 572, column: 205, scope: !4431)
!4648 = !DILocation(line: 572, column: 203, scope: !4431)
!4649 = !DILocation(line: 572, column: 180, scope: !4431)
!4650 = !DILocation(line: 572, column: 127, scope: !4431)
!4651 = !DILocation(line: 572, column: 125, scope: !4431)
!4652 = !DILocation(line: 572, column: 129, scope: !4431)
!4653 = !DILocation(line: 572, column: 118, scope: !4431)
!4654 = !DILocation(line: 572, column: 134, scope: !4431)
!4655 = !DILocalVariable(name: "a", scope: !4656, file: !941, line: 576, type: !952)
!4656 = distinct !DILexicalBlock(scope: !4431, file: !941, line: 576, column: 9)
!4657 = !DILocation(line: 576, column: 15, scope: !4656)
!4658 = !DILocalVariable(name: "b", scope: !4656, file: !941, line: 576, type: !952)
!4659 = !DILocation(line: 576, column: 18, scope: !4656)
!4660 = !DILocation(line: 576, column: 34, scope: !4656)
!4661 = !DILocation(line: 576, column: 32, scope: !4656)
!4662 = !DILocation(line: 576, column: 36, scope: !4656)
!4663 = !DILocation(line: 576, column: 25, scope: !4656)
!4664 = !DILocation(line: 576, column: 23, scope: !4656)
!4665 = !DILocation(line: 576, column: 55, scope: !4656)
!4666 = !DILocation(line: 576, column: 53, scope: !4656)
!4667 = !DILocation(line: 576, column: 57, scope: !4656)
!4668 = !DILocation(line: 576, column: 46, scope: !4656)
!4669 = !DILocation(line: 576, column: 44, scope: !4656)
!4670 = !DILocation(line: 576, column: 81, scope: !4656)
!4671 = !DILocation(line: 576, column: 85, scope: !4656)
!4672 = !DILocation(line: 576, column: 83, scope: !4656)
!4673 = !DILocation(line: 576, column: 72, scope: !4656)
!4674 = !DILocation(line: 576, column: 70, scope: !4656)
!4675 = !DILocation(line: 576, column: 74, scope: !4656)
!4676 = !DILocation(line: 576, column: 63, scope: !4656)
!4677 = !DILocation(line: 576, column: 79, scope: !4656)
!4678 = !DILocation(line: 576, column: 106, scope: !4656)
!4679 = !DILocation(line: 576, column: 110, scope: !4656)
!4680 = !DILocation(line: 576, column: 108, scope: !4656)
!4681 = !DILocation(line: 576, column: 97, scope: !4656)
!4682 = !DILocation(line: 576, column: 95, scope: !4656)
!4683 = !DILocation(line: 576, column: 99, scope: !4656)
!4684 = !DILocation(line: 576, column: 88, scope: !4656)
!4685 = !DILocation(line: 576, column: 104, scope: !4656)
!4686 = !DILocalVariable(name: "a", scope: !4687, file: !941, line: 577, type: !952)
!4687 = distinct !DILexicalBlock(scope: !4431, file: !941, line: 577, column: 9)
!4688 = !DILocation(line: 577, column: 15, scope: !4687)
!4689 = !DILocalVariable(name: "b", scope: !4687, file: !941, line: 577, type: !952)
!4690 = !DILocation(line: 577, column: 18, scope: !4687)
!4691 = !DILocation(line: 577, column: 34, scope: !4687)
!4692 = !DILocation(line: 577, column: 32, scope: !4687)
!4693 = !DILocation(line: 577, column: 36, scope: !4687)
!4694 = !DILocation(line: 577, column: 25, scope: !4687)
!4695 = !DILocation(line: 577, column: 23, scope: !4687)
!4696 = !DILocation(line: 577, column: 55, scope: !4687)
!4697 = !DILocation(line: 577, column: 53, scope: !4687)
!4698 = !DILocation(line: 577, column: 57, scope: !4687)
!4699 = !DILocation(line: 577, column: 46, scope: !4687)
!4700 = !DILocation(line: 577, column: 44, scope: !4687)
!4701 = !DILocation(line: 577, column: 81, scope: !4687)
!4702 = !DILocation(line: 577, column: 85, scope: !4687)
!4703 = !DILocation(line: 577, column: 83, scope: !4687)
!4704 = !DILocation(line: 577, column: 72, scope: !4687)
!4705 = !DILocation(line: 577, column: 70, scope: !4687)
!4706 = !DILocation(line: 577, column: 74, scope: !4687)
!4707 = !DILocation(line: 577, column: 63, scope: !4687)
!4708 = !DILocation(line: 577, column: 79, scope: !4687)
!4709 = !DILocation(line: 577, column: 106, scope: !4687)
!4710 = !DILocation(line: 577, column: 110, scope: !4687)
!4711 = !DILocation(line: 577, column: 108, scope: !4687)
!4712 = !DILocation(line: 577, column: 97, scope: !4687)
!4713 = !DILocation(line: 577, column: 95, scope: !4687)
!4714 = !DILocation(line: 577, column: 99, scope: !4687)
!4715 = !DILocation(line: 577, column: 88, scope: !4687)
!4716 = !DILocation(line: 577, column: 104, scope: !4687)
!4717 = !DILocalVariable(name: "a", scope: !4718, file: !941, line: 578, type: !952)
!4718 = distinct !DILexicalBlock(scope: !4431, file: !941, line: 578, column: 9)
!4719 = !DILocation(line: 578, column: 15, scope: !4718)
!4720 = !DILocalVariable(name: "b", scope: !4718, file: !941, line: 578, type: !952)
!4721 = !DILocation(line: 578, column: 18, scope: !4718)
!4722 = !DILocation(line: 578, column: 34, scope: !4718)
!4723 = !DILocation(line: 578, column: 32, scope: !4718)
!4724 = !DILocation(line: 578, column: 36, scope: !4718)
!4725 = !DILocation(line: 578, column: 25, scope: !4718)
!4726 = !DILocation(line: 578, column: 23, scope: !4718)
!4727 = !DILocation(line: 578, column: 55, scope: !4718)
!4728 = !DILocation(line: 578, column: 53, scope: !4718)
!4729 = !DILocation(line: 578, column: 57, scope: !4718)
!4730 = !DILocation(line: 578, column: 46, scope: !4718)
!4731 = !DILocation(line: 578, column: 44, scope: !4718)
!4732 = !DILocation(line: 578, column: 81, scope: !4718)
!4733 = !DILocation(line: 578, column: 85, scope: !4718)
!4734 = !DILocation(line: 578, column: 83, scope: !4718)
!4735 = !DILocation(line: 578, column: 72, scope: !4718)
!4736 = !DILocation(line: 578, column: 70, scope: !4718)
!4737 = !DILocation(line: 578, column: 74, scope: !4718)
!4738 = !DILocation(line: 578, column: 63, scope: !4718)
!4739 = !DILocation(line: 578, column: 79, scope: !4718)
!4740 = !DILocation(line: 578, column: 106, scope: !4718)
!4741 = !DILocation(line: 578, column: 110, scope: !4718)
!4742 = !DILocation(line: 578, column: 108, scope: !4718)
!4743 = !DILocation(line: 578, column: 97, scope: !4718)
!4744 = !DILocation(line: 578, column: 95, scope: !4718)
!4745 = !DILocation(line: 578, column: 99, scope: !4718)
!4746 = !DILocation(line: 578, column: 88, scope: !4718)
!4747 = !DILocation(line: 578, column: 104, scope: !4718)
!4748 = !DILocalVariable(name: "a", scope: !4749, file: !941, line: 579, type: !952)
!4749 = distinct !DILexicalBlock(scope: !4431, file: !941, line: 579, column: 9)
!4750 = !DILocation(line: 579, column: 15, scope: !4749)
!4751 = !DILocalVariable(name: "b", scope: !4749, file: !941, line: 579, type: !952)
!4752 = !DILocation(line: 579, column: 18, scope: !4749)
!4753 = !DILocation(line: 579, column: 34, scope: !4749)
!4754 = !DILocation(line: 579, column: 32, scope: !4749)
!4755 = !DILocation(line: 579, column: 36, scope: !4749)
!4756 = !DILocation(line: 579, column: 25, scope: !4749)
!4757 = !DILocation(line: 579, column: 23, scope: !4749)
!4758 = !DILocation(line: 579, column: 55, scope: !4749)
!4759 = !DILocation(line: 579, column: 53, scope: !4749)
!4760 = !DILocation(line: 579, column: 57, scope: !4749)
!4761 = !DILocation(line: 579, column: 46, scope: !4749)
!4762 = !DILocation(line: 579, column: 44, scope: !4749)
!4763 = !DILocation(line: 579, column: 81, scope: !4749)
!4764 = !DILocation(line: 579, column: 85, scope: !4749)
!4765 = !DILocation(line: 579, column: 83, scope: !4749)
!4766 = !DILocation(line: 579, column: 72, scope: !4749)
!4767 = !DILocation(line: 579, column: 70, scope: !4749)
!4768 = !DILocation(line: 579, column: 74, scope: !4749)
!4769 = !DILocation(line: 579, column: 63, scope: !4749)
!4770 = !DILocation(line: 579, column: 79, scope: !4749)
!4771 = !DILocation(line: 579, column: 106, scope: !4749)
!4772 = !DILocation(line: 579, column: 110, scope: !4749)
!4773 = !DILocation(line: 579, column: 108, scope: !4749)
!4774 = !DILocation(line: 579, column: 97, scope: !4749)
!4775 = !DILocation(line: 579, column: 95, scope: !4749)
!4776 = !DILocation(line: 579, column: 99, scope: !4749)
!4777 = !DILocation(line: 579, column: 88, scope: !4749)
!4778 = !DILocation(line: 579, column: 104, scope: !4749)
!4779 = !DILocalVariable(name: "a", scope: !4780, file: !941, line: 581, type: !952)
!4780 = distinct !DILexicalBlock(scope: !4431, file: !941, line: 581, column: 9)
!4781 = !DILocation(line: 581, column: 15, scope: !4780)
!4782 = !DILocalVariable(name: "b", scope: !4780, file: !941, line: 581, type: !952)
!4783 = !DILocation(line: 581, column: 18, scope: !4780)
!4784 = !DILocation(line: 581, column: 34, scope: !4780)
!4785 = !DILocation(line: 581, column: 32, scope: !4780)
!4786 = !DILocation(line: 581, column: 36, scope: !4780)
!4787 = !DILocation(line: 581, column: 25, scope: !4780)
!4788 = !DILocation(line: 581, column: 23, scope: !4780)
!4789 = !DILocation(line: 581, column: 55, scope: !4780)
!4790 = !DILocation(line: 581, column: 53, scope: !4780)
!4791 = !DILocation(line: 581, column: 57, scope: !4780)
!4792 = !DILocation(line: 581, column: 46, scope: !4780)
!4793 = !DILocation(line: 581, column: 44, scope: !4780)
!4794 = !DILocation(line: 581, column: 81, scope: !4780)
!4795 = !DILocation(line: 581, column: 85, scope: !4780)
!4796 = !DILocation(line: 581, column: 83, scope: !4780)
!4797 = !DILocation(line: 581, column: 72, scope: !4780)
!4798 = !DILocation(line: 581, column: 70, scope: !4780)
!4799 = !DILocation(line: 581, column: 74, scope: !4780)
!4800 = !DILocation(line: 581, column: 63, scope: !4780)
!4801 = !DILocation(line: 581, column: 79, scope: !4780)
!4802 = !DILocation(line: 581, column: 106, scope: !4780)
!4803 = !DILocation(line: 581, column: 110, scope: !4780)
!4804 = !DILocation(line: 581, column: 108, scope: !4780)
!4805 = !DILocation(line: 581, column: 97, scope: !4780)
!4806 = !DILocation(line: 581, column: 95, scope: !4780)
!4807 = !DILocation(line: 581, column: 99, scope: !4780)
!4808 = !DILocation(line: 581, column: 88, scope: !4780)
!4809 = !DILocation(line: 581, column: 104, scope: !4780)
!4810 = !DILocalVariable(name: "a", scope: !4811, file: !941, line: 582, type: !952)
!4811 = distinct !DILexicalBlock(scope: !4431, file: !941, line: 582, column: 9)
!4812 = !DILocation(line: 582, column: 15, scope: !4811)
!4813 = !DILocalVariable(name: "b", scope: !4811, file: !941, line: 582, type: !952)
!4814 = !DILocation(line: 582, column: 18, scope: !4811)
!4815 = !DILocation(line: 582, column: 34, scope: !4811)
!4816 = !DILocation(line: 582, column: 32, scope: !4811)
!4817 = !DILocation(line: 582, column: 36, scope: !4811)
!4818 = !DILocation(line: 582, column: 25, scope: !4811)
!4819 = !DILocation(line: 582, column: 23, scope: !4811)
!4820 = !DILocation(line: 582, column: 55, scope: !4811)
!4821 = !DILocation(line: 582, column: 53, scope: !4811)
!4822 = !DILocation(line: 582, column: 57, scope: !4811)
!4823 = !DILocation(line: 582, column: 46, scope: !4811)
!4824 = !DILocation(line: 582, column: 44, scope: !4811)
!4825 = !DILocation(line: 582, column: 81, scope: !4811)
!4826 = !DILocation(line: 582, column: 85, scope: !4811)
!4827 = !DILocation(line: 582, column: 83, scope: !4811)
!4828 = !DILocation(line: 582, column: 72, scope: !4811)
!4829 = !DILocation(line: 582, column: 70, scope: !4811)
!4830 = !DILocation(line: 582, column: 74, scope: !4811)
!4831 = !DILocation(line: 582, column: 63, scope: !4811)
!4832 = !DILocation(line: 582, column: 79, scope: !4811)
!4833 = !DILocation(line: 582, column: 106, scope: !4811)
!4834 = !DILocation(line: 582, column: 110, scope: !4811)
!4835 = !DILocation(line: 582, column: 108, scope: !4811)
!4836 = !DILocation(line: 582, column: 97, scope: !4811)
!4837 = !DILocation(line: 582, column: 95, scope: !4811)
!4838 = !DILocation(line: 582, column: 99, scope: !4811)
!4839 = !DILocation(line: 582, column: 88, scope: !4811)
!4840 = !DILocation(line: 582, column: 104, scope: !4811)
!4841 = !DILocalVariable(name: "a", scope: !4842, file: !941, line: 583, type: !952)
!4842 = distinct !DILexicalBlock(scope: !4431, file: !941, line: 583, column: 9)
!4843 = !DILocation(line: 583, column: 15, scope: !4842)
!4844 = !DILocalVariable(name: "b", scope: !4842, file: !941, line: 583, type: !952)
!4845 = !DILocation(line: 583, column: 18, scope: !4842)
!4846 = !DILocation(line: 583, column: 34, scope: !4842)
!4847 = !DILocation(line: 583, column: 32, scope: !4842)
!4848 = !DILocation(line: 583, column: 36, scope: !4842)
!4849 = !DILocation(line: 583, column: 25, scope: !4842)
!4850 = !DILocation(line: 583, column: 23, scope: !4842)
!4851 = !DILocation(line: 583, column: 55, scope: !4842)
!4852 = !DILocation(line: 583, column: 53, scope: !4842)
!4853 = !DILocation(line: 583, column: 57, scope: !4842)
!4854 = !DILocation(line: 583, column: 46, scope: !4842)
!4855 = !DILocation(line: 583, column: 44, scope: !4842)
!4856 = !DILocation(line: 583, column: 81, scope: !4842)
!4857 = !DILocation(line: 583, column: 85, scope: !4842)
!4858 = !DILocation(line: 583, column: 83, scope: !4842)
!4859 = !DILocation(line: 583, column: 72, scope: !4842)
!4860 = !DILocation(line: 583, column: 70, scope: !4842)
!4861 = !DILocation(line: 583, column: 74, scope: !4842)
!4862 = !DILocation(line: 583, column: 63, scope: !4842)
!4863 = !DILocation(line: 583, column: 79, scope: !4842)
!4864 = !DILocation(line: 583, column: 106, scope: !4842)
!4865 = !DILocation(line: 583, column: 110, scope: !4842)
!4866 = !DILocation(line: 583, column: 108, scope: !4842)
!4867 = !DILocation(line: 583, column: 97, scope: !4842)
!4868 = !DILocation(line: 583, column: 95, scope: !4842)
!4869 = !DILocation(line: 583, column: 99, scope: !4842)
!4870 = !DILocation(line: 583, column: 88, scope: !4842)
!4871 = !DILocation(line: 583, column: 104, scope: !4842)
!4872 = !DILocalVariable(name: "a", scope: !4873, file: !941, line: 584, type: !952)
!4873 = distinct !DILexicalBlock(scope: !4431, file: !941, line: 584, column: 9)
!4874 = !DILocation(line: 584, column: 15, scope: !4873)
!4875 = !DILocalVariable(name: "b", scope: !4873, file: !941, line: 584, type: !952)
!4876 = !DILocation(line: 584, column: 18, scope: !4873)
!4877 = !DILocation(line: 584, column: 34, scope: !4873)
!4878 = !DILocation(line: 584, column: 32, scope: !4873)
!4879 = !DILocation(line: 584, column: 36, scope: !4873)
!4880 = !DILocation(line: 584, column: 25, scope: !4873)
!4881 = !DILocation(line: 584, column: 23, scope: !4873)
!4882 = !DILocation(line: 584, column: 55, scope: !4873)
!4883 = !DILocation(line: 584, column: 53, scope: !4873)
!4884 = !DILocation(line: 584, column: 57, scope: !4873)
!4885 = !DILocation(line: 584, column: 46, scope: !4873)
!4886 = !DILocation(line: 584, column: 44, scope: !4873)
!4887 = !DILocation(line: 584, column: 81, scope: !4873)
!4888 = !DILocation(line: 584, column: 85, scope: !4873)
!4889 = !DILocation(line: 584, column: 83, scope: !4873)
!4890 = !DILocation(line: 584, column: 72, scope: !4873)
!4891 = !DILocation(line: 584, column: 70, scope: !4873)
!4892 = !DILocation(line: 584, column: 74, scope: !4873)
!4893 = !DILocation(line: 584, column: 63, scope: !4873)
!4894 = !DILocation(line: 584, column: 79, scope: !4873)
!4895 = !DILocation(line: 584, column: 106, scope: !4873)
!4896 = !DILocation(line: 584, column: 110, scope: !4873)
!4897 = !DILocation(line: 584, column: 108, scope: !4873)
!4898 = !DILocation(line: 584, column: 97, scope: !4873)
!4899 = !DILocation(line: 584, column: 95, scope: !4873)
!4900 = !DILocation(line: 584, column: 99, scope: !4873)
!4901 = !DILocation(line: 584, column: 88, scope: !4873)
!4902 = !DILocation(line: 584, column: 104, scope: !4873)
!4903 = !DILocation(line: 585, column: 5, scope: !4431)
!4904 = !DILocation(line: 561, column: 25, scope: !4905)
!4905 = !DILexicalBlockFile(scope: !4427, file: !941, discriminator: 2)
!4906 = !DILocation(line: 561, column: 5, scope: !4905)
!4907 = distinct !{!4907, !4908}
!4908 = !DILocation(line: 561, column: 5, scope: !4405)
!4909 = !DILocation(line: 587, column: 12, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4405, file: !941, line: 587, column: 5)
!4911 = !DILocation(line: 587, column: 10, scope: !4910)
!4912 = !DILocation(line: 587, column: 17, scope: !4913)
!4913 = !DILexicalBlockFile(scope: !4914, file: !941, discriminator: 1)
!4914 = distinct !DILexicalBlock(scope: !4910, file: !941, line: 587, column: 5)
!4915 = !DILocation(line: 587, column: 19, scope: !4913)
!4916 = !DILocation(line: 587, column: 5, scope: !4913)
!4917 = !DILocalVariable(name: "a", scope: !4918, file: !941, line: 588, type: !952)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !941, line: 588, column: 9)
!4919 = distinct !DILexicalBlock(scope: !4914, file: !941, line: 587, column: 29)
!4920 = !DILocation(line: 588, column: 15, scope: !4918)
!4921 = !DILocalVariable(name: "b", scope: !4918, file: !941, line: 588, type: !952)
!4922 = !DILocation(line: 588, column: 18, scope: !4918)
!4923 = !DILocation(line: 588, column: 38, scope: !4918)
!4924 = !DILocation(line: 588, column: 36, scope: !4918)
!4925 = !DILocation(line: 588, column: 25, scope: !4918)
!4926 = !DILocation(line: 588, column: 23, scope: !4918)
!4927 = !DILocation(line: 588, column: 59, scope: !4918)
!4928 = !DILocation(line: 588, column: 57, scope: !4918)
!4929 = !DILocation(line: 588, column: 46, scope: !4918)
!4930 = !DILocation(line: 588, column: 44, scope: !4918)
!4931 = !DILocation(line: 588, column: 81, scope: !4918)
!4932 = !DILocation(line: 588, column: 85, scope: !4918)
!4933 = !DILocation(line: 588, column: 83, scope: !4918)
!4934 = !DILocation(line: 588, column: 76, scope: !4918)
!4935 = !DILocation(line: 588, column: 74, scope: !4918)
!4936 = !DILocation(line: 588, column: 63, scope: !4918)
!4937 = !DILocation(line: 588, column: 79, scope: !4918)
!4938 = !DILocation(line: 588, column: 106, scope: !4918)
!4939 = !DILocation(line: 588, column: 110, scope: !4918)
!4940 = !DILocation(line: 588, column: 108, scope: !4918)
!4941 = !DILocation(line: 588, column: 101, scope: !4918)
!4942 = !DILocation(line: 588, column: 99, scope: !4918)
!4943 = !DILocation(line: 588, column: 88, scope: !4918)
!4944 = !DILocation(line: 588, column: 104, scope: !4918)
!4945 = !DILocalVariable(name: "a", scope: !4946, file: !941, line: 589, type: !952)
!4946 = distinct !DILexicalBlock(scope: !4919, file: !941, line: 589, column: 9)
!4947 = !DILocation(line: 589, column: 15, scope: !4946)
!4948 = !DILocalVariable(name: "b", scope: !4946, file: !941, line: 589, type: !952)
!4949 = !DILocation(line: 589, column: 18, scope: !4946)
!4950 = !DILocation(line: 589, column: 38, scope: !4946)
!4951 = !DILocation(line: 589, column: 36, scope: !4946)
!4952 = !DILocation(line: 589, column: 25, scope: !4946)
!4953 = !DILocation(line: 589, column: 23, scope: !4946)
!4954 = !DILocation(line: 589, column: 59, scope: !4946)
!4955 = !DILocation(line: 589, column: 57, scope: !4946)
!4956 = !DILocation(line: 589, column: 46, scope: !4946)
!4957 = !DILocation(line: 589, column: 44, scope: !4946)
!4958 = !DILocation(line: 589, column: 81, scope: !4946)
!4959 = !DILocation(line: 589, column: 85, scope: !4946)
!4960 = !DILocation(line: 589, column: 83, scope: !4946)
!4961 = !DILocation(line: 589, column: 76, scope: !4946)
!4962 = !DILocation(line: 589, column: 74, scope: !4946)
!4963 = !DILocation(line: 589, column: 63, scope: !4946)
!4964 = !DILocation(line: 589, column: 79, scope: !4946)
!4965 = !DILocation(line: 589, column: 106, scope: !4946)
!4966 = !DILocation(line: 589, column: 110, scope: !4946)
!4967 = !DILocation(line: 589, column: 108, scope: !4946)
!4968 = !DILocation(line: 589, column: 101, scope: !4946)
!4969 = !DILocation(line: 589, column: 99, scope: !4946)
!4970 = !DILocation(line: 589, column: 88, scope: !4946)
!4971 = !DILocation(line: 589, column: 104, scope: !4946)
!4972 = !DILocalVariable(name: "a", scope: !4973, file: !941, line: 590, type: !952)
!4973 = distinct !DILexicalBlock(scope: !4919, file: !941, line: 590, column: 9)
!4974 = !DILocation(line: 590, column: 15, scope: !4973)
!4975 = !DILocalVariable(name: "b", scope: !4973, file: !941, line: 590, type: !952)
!4976 = !DILocation(line: 590, column: 18, scope: !4973)
!4977 = !DILocation(line: 590, column: 38, scope: !4973)
!4978 = !DILocation(line: 590, column: 36, scope: !4973)
!4979 = !DILocation(line: 590, column: 25, scope: !4973)
!4980 = !DILocation(line: 590, column: 23, scope: !4973)
!4981 = !DILocation(line: 590, column: 59, scope: !4973)
!4982 = !DILocation(line: 590, column: 57, scope: !4973)
!4983 = !DILocation(line: 590, column: 46, scope: !4973)
!4984 = !DILocation(line: 590, column: 44, scope: !4973)
!4985 = !DILocation(line: 590, column: 81, scope: !4973)
!4986 = !DILocation(line: 590, column: 85, scope: !4973)
!4987 = !DILocation(line: 590, column: 83, scope: !4973)
!4988 = !DILocation(line: 590, column: 76, scope: !4973)
!4989 = !DILocation(line: 590, column: 74, scope: !4973)
!4990 = !DILocation(line: 590, column: 63, scope: !4973)
!4991 = !DILocation(line: 590, column: 79, scope: !4973)
!4992 = !DILocation(line: 590, column: 106, scope: !4973)
!4993 = !DILocation(line: 590, column: 110, scope: !4973)
!4994 = !DILocation(line: 590, column: 108, scope: !4973)
!4995 = !DILocation(line: 590, column: 101, scope: !4973)
!4996 = !DILocation(line: 590, column: 99, scope: !4973)
!4997 = !DILocation(line: 590, column: 88, scope: !4973)
!4998 = !DILocation(line: 590, column: 104, scope: !4973)
!4999 = !DILocalVariable(name: "a", scope: !5000, file: !941, line: 591, type: !952)
!5000 = distinct !DILexicalBlock(scope: !4919, file: !941, line: 591, column: 9)
!5001 = !DILocation(line: 591, column: 15, scope: !5000)
!5002 = !DILocalVariable(name: "b", scope: !5000, file: !941, line: 591, type: !952)
!5003 = !DILocation(line: 591, column: 18, scope: !5000)
!5004 = !DILocation(line: 591, column: 38, scope: !5000)
!5005 = !DILocation(line: 591, column: 36, scope: !5000)
!5006 = !DILocation(line: 591, column: 25, scope: !5000)
!5007 = !DILocation(line: 591, column: 23, scope: !5000)
!5008 = !DILocation(line: 591, column: 59, scope: !5000)
!5009 = !DILocation(line: 591, column: 57, scope: !5000)
!5010 = !DILocation(line: 591, column: 46, scope: !5000)
!5011 = !DILocation(line: 591, column: 44, scope: !5000)
!5012 = !DILocation(line: 591, column: 81, scope: !5000)
!5013 = !DILocation(line: 591, column: 85, scope: !5000)
!5014 = !DILocation(line: 591, column: 83, scope: !5000)
!5015 = !DILocation(line: 591, column: 76, scope: !5000)
!5016 = !DILocation(line: 591, column: 74, scope: !5000)
!5017 = !DILocation(line: 591, column: 63, scope: !5000)
!5018 = !DILocation(line: 591, column: 79, scope: !5000)
!5019 = !DILocation(line: 591, column: 106, scope: !5000)
!5020 = !DILocation(line: 591, column: 110, scope: !5000)
!5021 = !DILocation(line: 591, column: 108, scope: !5000)
!5022 = !DILocation(line: 591, column: 101, scope: !5000)
!5023 = !DILocation(line: 591, column: 99, scope: !5000)
!5024 = !DILocation(line: 591, column: 88, scope: !5000)
!5025 = !DILocation(line: 591, column: 104, scope: !5000)
!5026 = !DILocalVariable(name: "a", scope: !5027, file: !941, line: 593, type: !952)
!5027 = distinct !DILexicalBlock(scope: !4919, file: !941, line: 593, column: 9)
!5028 = !DILocation(line: 593, column: 15, scope: !5027)
!5029 = !DILocalVariable(name: "b", scope: !5027, file: !941, line: 593, type: !952)
!5030 = !DILocation(line: 593, column: 18, scope: !5027)
!5031 = !DILocation(line: 593, column: 38, scope: !5027)
!5032 = !DILocation(line: 593, column: 36, scope: !5027)
!5033 = !DILocation(line: 593, column: 25, scope: !5027)
!5034 = !DILocation(line: 593, column: 23, scope: !5027)
!5035 = !DILocation(line: 593, column: 59, scope: !5027)
!5036 = !DILocation(line: 593, column: 57, scope: !5027)
!5037 = !DILocation(line: 593, column: 46, scope: !5027)
!5038 = !DILocation(line: 593, column: 44, scope: !5027)
!5039 = !DILocation(line: 593, column: 81, scope: !5027)
!5040 = !DILocation(line: 593, column: 85, scope: !5027)
!5041 = !DILocation(line: 593, column: 83, scope: !5027)
!5042 = !DILocation(line: 593, column: 76, scope: !5027)
!5043 = !DILocation(line: 593, column: 74, scope: !5027)
!5044 = !DILocation(line: 593, column: 63, scope: !5027)
!5045 = !DILocation(line: 593, column: 79, scope: !5027)
!5046 = !DILocation(line: 593, column: 106, scope: !5027)
!5047 = !DILocation(line: 593, column: 110, scope: !5027)
!5048 = !DILocation(line: 593, column: 108, scope: !5027)
!5049 = !DILocation(line: 593, column: 101, scope: !5027)
!5050 = !DILocation(line: 593, column: 99, scope: !5027)
!5051 = !DILocation(line: 593, column: 88, scope: !5027)
!5052 = !DILocation(line: 593, column: 104, scope: !5027)
!5053 = !DILocalVariable(name: "a", scope: !5054, file: !941, line: 594, type: !952)
!5054 = distinct !DILexicalBlock(scope: !4919, file: !941, line: 594, column: 9)
!5055 = !DILocation(line: 594, column: 15, scope: !5054)
!5056 = !DILocalVariable(name: "b", scope: !5054, file: !941, line: 594, type: !952)
!5057 = !DILocation(line: 594, column: 18, scope: !5054)
!5058 = !DILocation(line: 594, column: 38, scope: !5054)
!5059 = !DILocation(line: 594, column: 36, scope: !5054)
!5060 = !DILocation(line: 594, column: 25, scope: !5054)
!5061 = !DILocation(line: 594, column: 23, scope: !5054)
!5062 = !DILocation(line: 594, column: 59, scope: !5054)
!5063 = !DILocation(line: 594, column: 57, scope: !5054)
!5064 = !DILocation(line: 594, column: 46, scope: !5054)
!5065 = !DILocation(line: 594, column: 44, scope: !5054)
!5066 = !DILocation(line: 594, column: 81, scope: !5054)
!5067 = !DILocation(line: 594, column: 85, scope: !5054)
!5068 = !DILocation(line: 594, column: 83, scope: !5054)
!5069 = !DILocation(line: 594, column: 76, scope: !5054)
!5070 = !DILocation(line: 594, column: 74, scope: !5054)
!5071 = !DILocation(line: 594, column: 63, scope: !5054)
!5072 = !DILocation(line: 594, column: 79, scope: !5054)
!5073 = !DILocation(line: 594, column: 106, scope: !5054)
!5074 = !DILocation(line: 594, column: 110, scope: !5054)
!5075 = !DILocation(line: 594, column: 108, scope: !5054)
!5076 = !DILocation(line: 594, column: 101, scope: !5054)
!5077 = !DILocation(line: 594, column: 99, scope: !5054)
!5078 = !DILocation(line: 594, column: 88, scope: !5054)
!5079 = !DILocation(line: 594, column: 104, scope: !5054)
!5080 = !DILocalVariable(name: "a", scope: !5081, file: !941, line: 595, type: !952)
!5081 = distinct !DILexicalBlock(scope: !4919, file: !941, line: 595, column: 9)
!5082 = !DILocation(line: 595, column: 15, scope: !5081)
!5083 = !DILocalVariable(name: "b", scope: !5081, file: !941, line: 595, type: !952)
!5084 = !DILocation(line: 595, column: 18, scope: !5081)
!5085 = !DILocation(line: 595, column: 38, scope: !5081)
!5086 = !DILocation(line: 595, column: 36, scope: !5081)
!5087 = !DILocation(line: 595, column: 25, scope: !5081)
!5088 = !DILocation(line: 595, column: 23, scope: !5081)
!5089 = !DILocation(line: 595, column: 59, scope: !5081)
!5090 = !DILocation(line: 595, column: 57, scope: !5081)
!5091 = !DILocation(line: 595, column: 46, scope: !5081)
!5092 = !DILocation(line: 595, column: 44, scope: !5081)
!5093 = !DILocation(line: 595, column: 81, scope: !5081)
!5094 = !DILocation(line: 595, column: 85, scope: !5081)
!5095 = !DILocation(line: 595, column: 83, scope: !5081)
!5096 = !DILocation(line: 595, column: 76, scope: !5081)
!5097 = !DILocation(line: 595, column: 74, scope: !5081)
!5098 = !DILocation(line: 595, column: 63, scope: !5081)
!5099 = !DILocation(line: 595, column: 79, scope: !5081)
!5100 = !DILocation(line: 595, column: 106, scope: !5081)
!5101 = !DILocation(line: 595, column: 110, scope: !5081)
!5102 = !DILocation(line: 595, column: 108, scope: !5081)
!5103 = !DILocation(line: 595, column: 101, scope: !5081)
!5104 = !DILocation(line: 595, column: 99, scope: !5081)
!5105 = !DILocation(line: 595, column: 88, scope: !5081)
!5106 = !DILocation(line: 595, column: 104, scope: !5081)
!5107 = !DILocalVariable(name: "a", scope: !5108, file: !941, line: 596, type: !952)
!5108 = distinct !DILexicalBlock(scope: !4919, file: !941, line: 596, column: 9)
!5109 = !DILocation(line: 596, column: 15, scope: !5108)
!5110 = !DILocalVariable(name: "b", scope: !5108, file: !941, line: 596, type: !952)
!5111 = !DILocation(line: 596, column: 18, scope: !5108)
!5112 = !DILocation(line: 596, column: 38, scope: !5108)
!5113 = !DILocation(line: 596, column: 36, scope: !5108)
!5114 = !DILocation(line: 596, column: 25, scope: !5108)
!5115 = !DILocation(line: 596, column: 23, scope: !5108)
!5116 = !DILocation(line: 596, column: 59, scope: !5108)
!5117 = !DILocation(line: 596, column: 57, scope: !5108)
!5118 = !DILocation(line: 596, column: 46, scope: !5108)
!5119 = !DILocation(line: 596, column: 44, scope: !5108)
!5120 = !DILocation(line: 596, column: 81, scope: !5108)
!5121 = !DILocation(line: 596, column: 85, scope: !5108)
!5122 = !DILocation(line: 596, column: 83, scope: !5108)
!5123 = !DILocation(line: 596, column: 76, scope: !5108)
!5124 = !DILocation(line: 596, column: 74, scope: !5108)
!5125 = !DILocation(line: 596, column: 63, scope: !5108)
!5126 = !DILocation(line: 596, column: 79, scope: !5108)
!5127 = !DILocation(line: 596, column: 106, scope: !5108)
!5128 = !DILocation(line: 596, column: 110, scope: !5108)
!5129 = !DILocation(line: 596, column: 108, scope: !5108)
!5130 = !DILocation(line: 596, column: 101, scope: !5108)
!5131 = !DILocation(line: 596, column: 99, scope: !5108)
!5132 = !DILocation(line: 596, column: 88, scope: !5108)
!5133 = !DILocation(line: 596, column: 104, scope: !5108)
!5134 = !DILocation(line: 598, column: 33, scope: !4919)
!5135 = !DILocation(line: 598, column: 31, scope: !4919)
!5136 = !DILocation(line: 598, column: 20, scope: !4919)
!5137 = !DILocation(line: 598, column: 53, scope: !4919)
!5138 = !DILocation(line: 598, column: 51, scope: !4919)
!5139 = !DILocation(line: 598, column: 40, scope: !4919)
!5140 = !DILocation(line: 598, column: 37, scope: !4919)
!5141 = !DILocation(line: 598, column: 58, scope: !4919)
!5142 = !DILocation(line: 598, column: 18, scope: !4919)
!5143 = !DILocation(line: 598, column: 80, scope: !5144)
!5144 = !DILexicalBlockFile(scope: !4919, file: !941, discriminator: 1)
!5145 = !DILocation(line: 598, column: 78, scope: !5144)
!5146 = !DILocation(line: 598, column: 67, scope: !5144)
!5147 = !DILocation(line: 598, column: 100, scope: !5144)
!5148 = !DILocation(line: 598, column: 98, scope: !5144)
!5149 = !DILocation(line: 598, column: 87, scope: !5144)
!5150 = !DILocation(line: 598, column: 84, scope: !5144)
!5151 = !DILocation(line: 598, column: 18, scope: !5144)
!5152 = !DILocation(line: 598, column: 124, scope: !5153)
!5153 = !DILexicalBlockFile(scope: !4919, file: !941, discriminator: 2)
!5154 = !DILocation(line: 598, column: 122, scope: !5153)
!5155 = !DILocation(line: 598, column: 111, scope: !5153)
!5156 = !DILocation(line: 598, column: 144, scope: !5153)
!5157 = !DILocation(line: 598, column: 142, scope: !5153)
!5158 = !DILocation(line: 598, column: 131, scope: !5153)
!5159 = !DILocation(line: 598, column: 128, scope: !5153)
!5160 = !DILocation(line: 598, column: 108, scope: !5153)
!5161 = !DILocation(line: 598, column: 18, scope: !5153)
!5162 = !DILocation(line: 598, column: 18, scope: !5163)
!5163 = !DILexicalBlockFile(scope: !4919, file: !941, discriminator: 3)
!5164 = !DILocation(line: 598, column: 169, scope: !5163)
!5165 = !DILocation(line: 598, column: 167, scope: !5163)
!5166 = !DILocation(line: 598, column: 156, scope: !5163)
!5167 = !DILocation(line: 598, column: 189, scope: !5163)
!5168 = !DILocation(line: 598, column: 187, scope: !5163)
!5169 = !DILocation(line: 598, column: 176, scope: !5163)
!5170 = !DILocation(line: 598, column: 173, scope: !5163)
!5171 = !DILocation(line: 598, column: 194, scope: !5163)
!5172 = !DILocation(line: 598, column: 154, scope: !5163)
!5173 = !DILocation(line: 598, column: 216, scope: !5174)
!5174 = !DILexicalBlockFile(scope: !4919, file: !941, discriminator: 4)
!5175 = !DILocation(line: 598, column: 214, scope: !5174)
!5176 = !DILocation(line: 598, column: 203, scope: !5174)
!5177 = !DILocation(line: 598, column: 236, scope: !5174)
!5178 = !DILocation(line: 598, column: 234, scope: !5174)
!5179 = !DILocation(line: 598, column: 223, scope: !5174)
!5180 = !DILocation(line: 598, column: 220, scope: !5174)
!5181 = !DILocation(line: 598, column: 154, scope: !5174)
!5182 = !DILocation(line: 598, column: 260, scope: !5183)
!5183 = !DILexicalBlockFile(scope: !4919, file: !941, discriminator: 5)
!5184 = !DILocation(line: 598, column: 258, scope: !5183)
!5185 = !DILocation(line: 598, column: 247, scope: !5183)
!5186 = !DILocation(line: 598, column: 280, scope: !5183)
!5187 = !DILocation(line: 598, column: 278, scope: !5183)
!5188 = !DILocation(line: 598, column: 267, scope: !5183)
!5189 = !DILocation(line: 598, column: 264, scope: !5183)
!5190 = !DILocation(line: 598, column: 244, scope: !5183)
!5191 = !DILocation(line: 598, column: 154, scope: !5183)
!5192 = !DILocation(line: 598, column: 154, scope: !5193)
!5193 = !DILexicalBlockFile(scope: !4919, file: !941, discriminator: 6)
!5194 = !DILocation(line: 598, column: 151, scope: !5193)
!5195 = !DILocation(line: 599, column: 33, scope: !4919)
!5196 = !DILocation(line: 599, column: 31, scope: !4919)
!5197 = !DILocation(line: 599, column: 20, scope: !4919)
!5198 = !DILocation(line: 599, column: 53, scope: !4919)
!5199 = !DILocation(line: 599, column: 51, scope: !4919)
!5200 = !DILocation(line: 599, column: 40, scope: !4919)
!5201 = !DILocation(line: 599, column: 37, scope: !4919)
!5202 = !DILocation(line: 599, column: 58, scope: !4919)
!5203 = !DILocation(line: 599, column: 18, scope: !4919)
!5204 = !DILocation(line: 599, column: 80, scope: !5144)
!5205 = !DILocation(line: 599, column: 78, scope: !5144)
!5206 = !DILocation(line: 599, column: 67, scope: !5144)
!5207 = !DILocation(line: 599, column: 100, scope: !5144)
!5208 = !DILocation(line: 599, column: 98, scope: !5144)
!5209 = !DILocation(line: 599, column: 87, scope: !5144)
!5210 = !DILocation(line: 599, column: 84, scope: !5144)
!5211 = !DILocation(line: 599, column: 18, scope: !5144)
!5212 = !DILocation(line: 599, column: 124, scope: !5153)
!5213 = !DILocation(line: 599, column: 122, scope: !5153)
!5214 = !DILocation(line: 599, column: 111, scope: !5153)
!5215 = !DILocation(line: 599, column: 144, scope: !5153)
!5216 = !DILocation(line: 599, column: 142, scope: !5153)
!5217 = !DILocation(line: 599, column: 131, scope: !5153)
!5218 = !DILocation(line: 599, column: 128, scope: !5153)
!5219 = !DILocation(line: 599, column: 108, scope: !5153)
!5220 = !DILocation(line: 599, column: 18, scope: !5153)
!5221 = !DILocation(line: 599, column: 18, scope: !5163)
!5222 = !DILocation(line: 599, column: 169, scope: !5163)
!5223 = !DILocation(line: 599, column: 167, scope: !5163)
!5224 = !DILocation(line: 599, column: 156, scope: !5163)
!5225 = !DILocation(line: 599, column: 189, scope: !5163)
!5226 = !DILocation(line: 599, column: 187, scope: !5163)
!5227 = !DILocation(line: 599, column: 176, scope: !5163)
!5228 = !DILocation(line: 599, column: 173, scope: !5163)
!5229 = !DILocation(line: 599, column: 194, scope: !5163)
!5230 = !DILocation(line: 599, column: 154, scope: !5163)
!5231 = !DILocation(line: 599, column: 216, scope: !5174)
!5232 = !DILocation(line: 599, column: 214, scope: !5174)
!5233 = !DILocation(line: 599, column: 203, scope: !5174)
!5234 = !DILocation(line: 599, column: 236, scope: !5174)
!5235 = !DILocation(line: 599, column: 234, scope: !5174)
!5236 = !DILocation(line: 599, column: 223, scope: !5174)
!5237 = !DILocation(line: 599, column: 220, scope: !5174)
!5238 = !DILocation(line: 599, column: 154, scope: !5174)
!5239 = !DILocation(line: 599, column: 260, scope: !5183)
!5240 = !DILocation(line: 599, column: 258, scope: !5183)
!5241 = !DILocation(line: 599, column: 247, scope: !5183)
!5242 = !DILocation(line: 599, column: 280, scope: !5183)
!5243 = !DILocation(line: 599, column: 278, scope: !5183)
!5244 = !DILocation(line: 599, column: 267, scope: !5183)
!5245 = !DILocation(line: 599, column: 264, scope: !5183)
!5246 = !DILocation(line: 599, column: 244, scope: !5183)
!5247 = !DILocation(line: 599, column: 154, scope: !5183)
!5248 = !DILocation(line: 599, column: 154, scope: !5193)
!5249 = !DILocation(line: 599, column: 151, scope: !5193)
!5250 = !DILocation(line: 598, column: 288, scope: !5251)
!5251 = !DILexicalBlockFile(scope: !4919, file: !941, discriminator: 7)
!5252 = !DILocation(line: 600, column: 33, scope: !4919)
!5253 = !DILocation(line: 600, column: 31, scope: !4919)
!5254 = !DILocation(line: 600, column: 20, scope: !4919)
!5255 = !DILocation(line: 600, column: 53, scope: !4919)
!5256 = !DILocation(line: 600, column: 51, scope: !4919)
!5257 = !DILocation(line: 600, column: 40, scope: !4919)
!5258 = !DILocation(line: 600, column: 37, scope: !4919)
!5259 = !DILocation(line: 600, column: 58, scope: !4919)
!5260 = !DILocation(line: 600, column: 18, scope: !4919)
!5261 = !DILocation(line: 600, column: 80, scope: !5144)
!5262 = !DILocation(line: 600, column: 78, scope: !5144)
!5263 = !DILocation(line: 600, column: 67, scope: !5144)
!5264 = !DILocation(line: 600, column: 100, scope: !5144)
!5265 = !DILocation(line: 600, column: 98, scope: !5144)
!5266 = !DILocation(line: 600, column: 87, scope: !5144)
!5267 = !DILocation(line: 600, column: 84, scope: !5144)
!5268 = !DILocation(line: 600, column: 18, scope: !5144)
!5269 = !DILocation(line: 600, column: 124, scope: !5153)
!5270 = !DILocation(line: 600, column: 122, scope: !5153)
!5271 = !DILocation(line: 600, column: 111, scope: !5153)
!5272 = !DILocation(line: 600, column: 144, scope: !5153)
!5273 = !DILocation(line: 600, column: 142, scope: !5153)
!5274 = !DILocation(line: 600, column: 131, scope: !5153)
!5275 = !DILocation(line: 600, column: 128, scope: !5153)
!5276 = !DILocation(line: 600, column: 108, scope: !5153)
!5277 = !DILocation(line: 600, column: 18, scope: !5153)
!5278 = !DILocation(line: 600, column: 18, scope: !5163)
!5279 = !DILocation(line: 600, column: 169, scope: !5163)
!5280 = !DILocation(line: 600, column: 167, scope: !5163)
!5281 = !DILocation(line: 600, column: 156, scope: !5163)
!5282 = !DILocation(line: 600, column: 189, scope: !5163)
!5283 = !DILocation(line: 600, column: 187, scope: !5163)
!5284 = !DILocation(line: 600, column: 176, scope: !5163)
!5285 = !DILocation(line: 600, column: 173, scope: !5163)
!5286 = !DILocation(line: 600, column: 194, scope: !5163)
!5287 = !DILocation(line: 600, column: 154, scope: !5163)
!5288 = !DILocation(line: 600, column: 216, scope: !5174)
!5289 = !DILocation(line: 600, column: 214, scope: !5174)
!5290 = !DILocation(line: 600, column: 203, scope: !5174)
!5291 = !DILocation(line: 600, column: 236, scope: !5174)
!5292 = !DILocation(line: 600, column: 234, scope: !5174)
!5293 = !DILocation(line: 600, column: 223, scope: !5174)
!5294 = !DILocation(line: 600, column: 220, scope: !5174)
!5295 = !DILocation(line: 600, column: 154, scope: !5174)
!5296 = !DILocation(line: 600, column: 260, scope: !5183)
!5297 = !DILocation(line: 600, column: 258, scope: !5183)
!5298 = !DILocation(line: 600, column: 247, scope: !5183)
!5299 = !DILocation(line: 600, column: 280, scope: !5183)
!5300 = !DILocation(line: 600, column: 278, scope: !5183)
!5301 = !DILocation(line: 600, column: 267, scope: !5183)
!5302 = !DILocation(line: 600, column: 264, scope: !5183)
!5303 = !DILocation(line: 600, column: 244, scope: !5183)
!5304 = !DILocation(line: 600, column: 154, scope: !5183)
!5305 = !DILocation(line: 600, column: 154, scope: !5193)
!5306 = !DILocation(line: 600, column: 151, scope: !5193)
!5307 = !DILocation(line: 599, column: 288, scope: !5251)
!5308 = !DILocation(line: 601, column: 33, scope: !4919)
!5309 = !DILocation(line: 601, column: 31, scope: !4919)
!5310 = !DILocation(line: 601, column: 20, scope: !4919)
!5311 = !DILocation(line: 601, column: 53, scope: !4919)
!5312 = !DILocation(line: 601, column: 51, scope: !4919)
!5313 = !DILocation(line: 601, column: 40, scope: !4919)
!5314 = !DILocation(line: 601, column: 37, scope: !4919)
!5315 = !DILocation(line: 601, column: 58, scope: !4919)
!5316 = !DILocation(line: 601, column: 18, scope: !4919)
!5317 = !DILocation(line: 601, column: 80, scope: !5144)
!5318 = !DILocation(line: 601, column: 78, scope: !5144)
!5319 = !DILocation(line: 601, column: 67, scope: !5144)
!5320 = !DILocation(line: 601, column: 100, scope: !5144)
!5321 = !DILocation(line: 601, column: 98, scope: !5144)
!5322 = !DILocation(line: 601, column: 87, scope: !5144)
!5323 = !DILocation(line: 601, column: 84, scope: !5144)
!5324 = !DILocation(line: 601, column: 18, scope: !5144)
!5325 = !DILocation(line: 601, column: 124, scope: !5153)
!5326 = !DILocation(line: 601, column: 122, scope: !5153)
!5327 = !DILocation(line: 601, column: 111, scope: !5153)
!5328 = !DILocation(line: 601, column: 144, scope: !5153)
!5329 = !DILocation(line: 601, column: 142, scope: !5153)
!5330 = !DILocation(line: 601, column: 131, scope: !5153)
!5331 = !DILocation(line: 601, column: 128, scope: !5153)
!5332 = !DILocation(line: 601, column: 108, scope: !5153)
!5333 = !DILocation(line: 601, column: 18, scope: !5153)
!5334 = !DILocation(line: 601, column: 18, scope: !5163)
!5335 = !DILocation(line: 601, column: 169, scope: !5163)
!5336 = !DILocation(line: 601, column: 167, scope: !5163)
!5337 = !DILocation(line: 601, column: 156, scope: !5163)
!5338 = !DILocation(line: 601, column: 189, scope: !5163)
!5339 = !DILocation(line: 601, column: 187, scope: !5163)
!5340 = !DILocation(line: 601, column: 176, scope: !5163)
!5341 = !DILocation(line: 601, column: 173, scope: !5163)
!5342 = !DILocation(line: 601, column: 194, scope: !5163)
!5343 = !DILocation(line: 601, column: 154, scope: !5163)
!5344 = !DILocation(line: 601, column: 216, scope: !5174)
!5345 = !DILocation(line: 601, column: 214, scope: !5174)
!5346 = !DILocation(line: 601, column: 203, scope: !5174)
!5347 = !DILocation(line: 601, column: 236, scope: !5174)
!5348 = !DILocation(line: 601, column: 234, scope: !5174)
!5349 = !DILocation(line: 601, column: 223, scope: !5174)
!5350 = !DILocation(line: 601, column: 220, scope: !5174)
!5351 = !DILocation(line: 601, column: 154, scope: !5174)
!5352 = !DILocation(line: 601, column: 260, scope: !5183)
!5353 = !DILocation(line: 601, column: 258, scope: !5183)
!5354 = !DILocation(line: 601, column: 247, scope: !5183)
!5355 = !DILocation(line: 601, column: 280, scope: !5183)
!5356 = !DILocation(line: 601, column: 278, scope: !5183)
!5357 = !DILocation(line: 601, column: 267, scope: !5183)
!5358 = !DILocation(line: 601, column: 264, scope: !5183)
!5359 = !DILocation(line: 601, column: 244, scope: !5183)
!5360 = !DILocation(line: 601, column: 154, scope: !5183)
!5361 = !DILocation(line: 601, column: 154, scope: !5193)
!5362 = !DILocation(line: 601, column: 151, scope: !5193)
!5363 = !DILocation(line: 600, column: 288, scope: !5251)
!5364 = !DILocation(line: 598, column: 13, scope: !5365)
!5365 = !DILexicalBlockFile(scope: !4919, file: !941, discriminator: 8)
!5366 = !DILocation(line: 602, column: 5, scope: !4919)
!5367 = !DILocation(line: 587, column: 25, scope: !5368)
!5368 = !DILexicalBlockFile(scope: !4914, file: !941, discriminator: 2)
!5369 = !DILocation(line: 587, column: 5, scope: !5368)
!5370 = distinct !{!5370, !5371}
!5371 = !DILocation(line: 587, column: 5, scope: !4405)
!5372 = !DILocation(line: 603, column: 12, scope: !4405)
!5373 = !DILocation(line: 603, column: 5, scope: !4405)
!5374 = distinct !DISubprogram(name: "hadamard8_intra16_c", scope: !941, file: !941, line: 1004, type: !2756, isLocal: true, isDefinition: true, scopeLine: 1004, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!5375 = !DILocalVariable(name: "s", arg: 1, scope: !5374, file: !941, line: 1004, type: !2758)
!5376 = !DILocation(line: 1004, column: 48, scope: !5374)
!5377 = !DILocalVariable(name: "dst", arg: 2, scope: !5374, file: !941, line: 1004, type: !1167)
!5378 = !DILocation(line: 1004, column: 60, scope: !5374)
!5379 = !DILocalVariable(name: "src", arg: 3, scope: !5374, file: !941, line: 1004, type: !1167)
!5380 = !DILocation(line: 1004, column: 74, scope: !5374)
!5381 = !DILocalVariable(name: "stride", arg: 4, scope: !5374, file: !941, line: 1004, type: !1792)
!5382 = !DILocation(line: 1004, column: 89, scope: !5374)
!5383 = !DILocalVariable(name: "h", arg: 5, scope: !5374, file: !941, line: 1004, type: !952)
!5384 = !DILocation(line: 1004, column: 101, scope: !5374)
!5385 = !DILocalVariable(name: "score", scope: !5374, file: !941, line: 1004, type: !952)
!5386 = !DILocation(line: 1004, column: 110, scope: !5374)
!5387 = !DILocation(line: 1004, column: 151, scope: !5374)
!5388 = !DILocation(line: 1004, column: 154, scope: !5374)
!5389 = !DILocation(line: 1004, column: 159, scope: !5374)
!5390 = !DILocation(line: 1004, column: 164, scope: !5374)
!5391 = !DILocation(line: 1004, column: 130, scope: !5374)
!5392 = !DILocation(line: 1004, column: 127, scope: !5374)
!5393 = !DILocation(line: 1004, column: 206, scope: !5374)
!5394 = !DILocation(line: 1004, column: 209, scope: !5374)
!5395 = !DILocation(line: 1004, column: 213, scope: !5374)
!5396 = !DILocation(line: 1004, column: 218, scope: !5374)
!5397 = !DILocation(line: 1004, column: 222, scope: !5374)
!5398 = !DILocation(line: 1004, column: 227, scope: !5374)
!5399 = !DILocation(line: 1004, column: 185, scope: !5400)
!5400 = !DILexicalBlockFile(scope: !5374, file: !941, discriminator: 3)
!5401 = !DILocation(line: 1004, column: 182, scope: !5374)
!5402 = !DILocation(line: 1004, column: 243, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5374, file: !941, line: 1004, column: 243)
!5404 = !DILocation(line: 1004, column: 245, scope: !5403)
!5405 = !DILocation(line: 1004, column: 243, scope: !5374)
!5406 = !DILocation(line: 1004, column: 265, scope: !5407)
!5407 = !DILexicalBlockFile(scope: !5408, file: !941, discriminator: 1)
!5408 = distinct !DILexicalBlock(scope: !5403, file: !941, line: 1004, column: 252)
!5409 = !DILocation(line: 1004, column: 263, scope: !5407)
!5410 = !DILocation(line: 1004, column: 258, scope: !5407)
!5411 = !DILocation(line: 1004, column: 284, scope: !5407)
!5412 = !DILocation(line: 1004, column: 282, scope: !5407)
!5413 = !DILocation(line: 1004, column: 277, scope: !5407)
!5414 = !DILocation(line: 1004, column: 322, scope: !5407)
!5415 = !DILocation(line: 1004, column: 325, scope: !5407)
!5416 = !DILocation(line: 1004, column: 330, scope: !5407)
!5417 = !DILocation(line: 1004, column: 335, scope: !5407)
!5418 = !DILocation(line: 1004, column: 301, scope: !5407)
!5419 = !DILocation(line: 1004, column: 298, scope: !5407)
!5420 = !DILocation(line: 1004, column: 377, scope: !5407)
!5421 = !DILocation(line: 1004, column: 380, scope: !5407)
!5422 = !DILocation(line: 1004, column: 384, scope: !5407)
!5423 = !DILocation(line: 1004, column: 389, scope: !5407)
!5424 = !DILocation(line: 1004, column: 393, scope: !5407)
!5425 = !DILocation(line: 1004, column: 398, scope: !5407)
!5426 = !DILocation(line: 1004, column: 356, scope: !5427)
!5427 = !DILexicalBlockFile(scope: !5407, file: !941, discriminator: 4)
!5428 = !DILocation(line: 1004, column: 353, scope: !5407)
!5429 = !DILocation(line: 1004, column: 410, scope: !5407)
!5430 = !DILocation(line: 1004, column: 419, scope: !5431)
!5431 = !DILexicalBlockFile(scope: !5374, file: !941, discriminator: 2)
!5432 = !DILocation(line: 1004, column: 412, scope: !5431)
!5433 = distinct !DISubprogram(name: "hadamard8_intra8x8_c", scope: !941, file: !941, line: 606, type: !2756, isLocal: true, isDefinition: true, scopeLine: 608, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!5434 = !DILocalVariable(name: "s", arg: 1, scope: !5433, file: !941, line: 606, type: !2758)
!5435 = !DILocation(line: 606, column: 49, scope: !5433)
!5436 = !DILocalVariable(name: "src", arg: 2, scope: !5433, file: !941, line: 606, type: !1167)
!5437 = !DILocation(line: 606, column: 61, scope: !5433)
!5438 = !DILocalVariable(name: "dummy", arg: 3, scope: !5433, file: !941, line: 607, type: !1167)
!5439 = !DILocation(line: 607, column: 42, scope: !5433)
!5440 = !DILocalVariable(name: "stride", arg: 4, scope: !5433, file: !941, line: 607, type: !1792)
!5441 = !DILocation(line: 607, column: 59, scope: !5433)
!5442 = !DILocalVariable(name: "h", arg: 5, scope: !5433, file: !941, line: 607, type: !952)
!5443 = !DILocation(line: 607, column: 71, scope: !5433)
!5444 = !DILocalVariable(name: "i", scope: !5433, file: !941, line: 609, type: !952)
!5445 = !DILocation(line: 609, column: 9, scope: !5433)
!5446 = !DILocalVariable(name: "temp", scope: !5433, file: !941, line: 609, type: !2234)
!5447 = !DILocation(line: 609, column: 12, scope: !5433)
!5448 = !DILocalVariable(name: "sum", scope: !5433, file: !941, line: 609, type: !952)
!5449 = !DILocation(line: 609, column: 22, scope: !5433)
!5450 = !DILocation(line: 613, column: 12, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5433, file: !941, line: 613, column: 5)
!5452 = !DILocation(line: 613, column: 10, scope: !5451)
!5453 = !DILocation(line: 613, column: 17, scope: !5454)
!5454 = !DILexicalBlockFile(scope: !5455, file: !941, discriminator: 1)
!5455 = distinct !DILexicalBlock(scope: !5451, file: !941, line: 613, column: 5)
!5456 = !DILocation(line: 613, column: 19, scope: !5454)
!5457 = !DILocation(line: 613, column: 5, scope: !5454)
!5458 = !DILocation(line: 615, column: 32, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5455, file: !941, line: 613, column: 29)
!5460 = !DILocation(line: 615, column: 41, scope: !5459)
!5461 = !DILocation(line: 615, column: 39, scope: !5459)
!5462 = !DILocation(line: 615, column: 43, scope: !5459)
!5463 = !DILocation(line: 615, column: 28, scope: !5459)
!5464 = !DILocation(line: 615, column: 27, scope: !5459)
!5465 = !DILocation(line: 615, column: 56, scope: !5459)
!5466 = !DILocation(line: 615, column: 65, scope: !5459)
!5467 = !DILocation(line: 615, column: 63, scope: !5459)
!5468 = !DILocation(line: 615, column: 67, scope: !5459)
!5469 = !DILocation(line: 615, column: 52, scope: !5459)
!5470 = !DILocation(line: 615, column: 51, scope: !5459)
!5471 = !DILocation(line: 615, column: 49, scope: !5459)
!5472 = !DILocation(line: 615, column: 18, scope: !5459)
!5473 = !DILocation(line: 615, column: 16, scope: !5459)
!5474 = !DILocation(line: 615, column: 20, scope: !5459)
!5475 = !DILocation(line: 615, column: 9, scope: !5459)
!5476 = !DILocation(line: 615, column: 25, scope: !5459)
!5477 = !DILocation(line: 615, column: 97, scope: !5459)
!5478 = !DILocation(line: 615, column: 106, scope: !5459)
!5479 = !DILocation(line: 615, column: 104, scope: !5459)
!5480 = !DILocation(line: 615, column: 108, scope: !5459)
!5481 = !DILocation(line: 615, column: 93, scope: !5459)
!5482 = !DILocation(line: 615, column: 92, scope: !5459)
!5483 = !DILocation(line: 615, column: 121, scope: !5459)
!5484 = !DILocation(line: 615, column: 130, scope: !5459)
!5485 = !DILocation(line: 615, column: 128, scope: !5459)
!5486 = !DILocation(line: 615, column: 132, scope: !5459)
!5487 = !DILocation(line: 615, column: 117, scope: !5459)
!5488 = !DILocation(line: 615, column: 116, scope: !5459)
!5489 = !DILocation(line: 615, column: 114, scope: !5459)
!5490 = !DILocation(line: 615, column: 83, scope: !5459)
!5491 = !DILocation(line: 615, column: 81, scope: !5459)
!5492 = !DILocation(line: 615, column: 85, scope: !5459)
!5493 = !DILocation(line: 615, column: 74, scope: !5459)
!5494 = !DILocation(line: 615, column: 90, scope: !5459)
!5495 = !DILocation(line: 617, column: 32, scope: !5459)
!5496 = !DILocation(line: 617, column: 41, scope: !5459)
!5497 = !DILocation(line: 617, column: 39, scope: !5459)
!5498 = !DILocation(line: 617, column: 43, scope: !5459)
!5499 = !DILocation(line: 617, column: 28, scope: !5459)
!5500 = !DILocation(line: 617, column: 27, scope: !5459)
!5501 = !DILocation(line: 617, column: 56, scope: !5459)
!5502 = !DILocation(line: 617, column: 65, scope: !5459)
!5503 = !DILocation(line: 617, column: 63, scope: !5459)
!5504 = !DILocation(line: 617, column: 67, scope: !5459)
!5505 = !DILocation(line: 617, column: 52, scope: !5459)
!5506 = !DILocation(line: 617, column: 51, scope: !5459)
!5507 = !DILocation(line: 617, column: 49, scope: !5459)
!5508 = !DILocation(line: 617, column: 18, scope: !5459)
!5509 = !DILocation(line: 617, column: 16, scope: !5459)
!5510 = !DILocation(line: 617, column: 20, scope: !5459)
!5511 = !DILocation(line: 617, column: 9, scope: !5459)
!5512 = !DILocation(line: 617, column: 25, scope: !5459)
!5513 = !DILocation(line: 617, column: 97, scope: !5459)
!5514 = !DILocation(line: 617, column: 106, scope: !5459)
!5515 = !DILocation(line: 617, column: 104, scope: !5459)
!5516 = !DILocation(line: 617, column: 108, scope: !5459)
!5517 = !DILocation(line: 617, column: 93, scope: !5459)
!5518 = !DILocation(line: 617, column: 92, scope: !5459)
!5519 = !DILocation(line: 617, column: 121, scope: !5459)
!5520 = !DILocation(line: 617, column: 130, scope: !5459)
!5521 = !DILocation(line: 617, column: 128, scope: !5459)
!5522 = !DILocation(line: 617, column: 132, scope: !5459)
!5523 = !DILocation(line: 617, column: 117, scope: !5459)
!5524 = !DILocation(line: 617, column: 116, scope: !5459)
!5525 = !DILocation(line: 617, column: 114, scope: !5459)
!5526 = !DILocation(line: 617, column: 83, scope: !5459)
!5527 = !DILocation(line: 617, column: 81, scope: !5459)
!5528 = !DILocation(line: 617, column: 85, scope: !5459)
!5529 = !DILocation(line: 617, column: 74, scope: !5459)
!5530 = !DILocation(line: 617, column: 90, scope: !5459)
!5531 = !DILocation(line: 619, column: 32, scope: !5459)
!5532 = !DILocation(line: 619, column: 41, scope: !5459)
!5533 = !DILocation(line: 619, column: 39, scope: !5459)
!5534 = !DILocation(line: 619, column: 43, scope: !5459)
!5535 = !DILocation(line: 619, column: 28, scope: !5459)
!5536 = !DILocation(line: 619, column: 27, scope: !5459)
!5537 = !DILocation(line: 619, column: 56, scope: !5459)
!5538 = !DILocation(line: 619, column: 65, scope: !5459)
!5539 = !DILocation(line: 619, column: 63, scope: !5459)
!5540 = !DILocation(line: 619, column: 67, scope: !5459)
!5541 = !DILocation(line: 619, column: 52, scope: !5459)
!5542 = !DILocation(line: 619, column: 51, scope: !5459)
!5543 = !DILocation(line: 619, column: 49, scope: !5459)
!5544 = !DILocation(line: 619, column: 18, scope: !5459)
!5545 = !DILocation(line: 619, column: 16, scope: !5459)
!5546 = !DILocation(line: 619, column: 20, scope: !5459)
!5547 = !DILocation(line: 619, column: 9, scope: !5459)
!5548 = !DILocation(line: 619, column: 25, scope: !5459)
!5549 = !DILocation(line: 619, column: 97, scope: !5459)
!5550 = !DILocation(line: 619, column: 106, scope: !5459)
!5551 = !DILocation(line: 619, column: 104, scope: !5459)
!5552 = !DILocation(line: 619, column: 108, scope: !5459)
!5553 = !DILocation(line: 619, column: 93, scope: !5459)
!5554 = !DILocation(line: 619, column: 92, scope: !5459)
!5555 = !DILocation(line: 619, column: 121, scope: !5459)
!5556 = !DILocation(line: 619, column: 130, scope: !5459)
!5557 = !DILocation(line: 619, column: 128, scope: !5459)
!5558 = !DILocation(line: 619, column: 132, scope: !5459)
!5559 = !DILocation(line: 619, column: 117, scope: !5459)
!5560 = !DILocation(line: 619, column: 116, scope: !5459)
!5561 = !DILocation(line: 619, column: 114, scope: !5459)
!5562 = !DILocation(line: 619, column: 83, scope: !5459)
!5563 = !DILocation(line: 619, column: 81, scope: !5459)
!5564 = !DILocation(line: 619, column: 85, scope: !5459)
!5565 = !DILocation(line: 619, column: 74, scope: !5459)
!5566 = !DILocation(line: 619, column: 90, scope: !5459)
!5567 = !DILocation(line: 621, column: 32, scope: !5459)
!5568 = !DILocation(line: 621, column: 41, scope: !5459)
!5569 = !DILocation(line: 621, column: 39, scope: !5459)
!5570 = !DILocation(line: 621, column: 43, scope: !5459)
!5571 = !DILocation(line: 621, column: 28, scope: !5459)
!5572 = !DILocation(line: 621, column: 27, scope: !5459)
!5573 = !DILocation(line: 621, column: 56, scope: !5459)
!5574 = !DILocation(line: 621, column: 65, scope: !5459)
!5575 = !DILocation(line: 621, column: 63, scope: !5459)
!5576 = !DILocation(line: 621, column: 67, scope: !5459)
!5577 = !DILocation(line: 621, column: 52, scope: !5459)
!5578 = !DILocation(line: 621, column: 51, scope: !5459)
!5579 = !DILocation(line: 621, column: 49, scope: !5459)
!5580 = !DILocation(line: 621, column: 18, scope: !5459)
!5581 = !DILocation(line: 621, column: 16, scope: !5459)
!5582 = !DILocation(line: 621, column: 20, scope: !5459)
!5583 = !DILocation(line: 621, column: 9, scope: !5459)
!5584 = !DILocation(line: 621, column: 25, scope: !5459)
!5585 = !DILocation(line: 621, column: 97, scope: !5459)
!5586 = !DILocation(line: 621, column: 106, scope: !5459)
!5587 = !DILocation(line: 621, column: 104, scope: !5459)
!5588 = !DILocation(line: 621, column: 108, scope: !5459)
!5589 = !DILocation(line: 621, column: 93, scope: !5459)
!5590 = !DILocation(line: 621, column: 92, scope: !5459)
!5591 = !DILocation(line: 621, column: 121, scope: !5459)
!5592 = !DILocation(line: 621, column: 130, scope: !5459)
!5593 = !DILocation(line: 621, column: 128, scope: !5459)
!5594 = !DILocation(line: 621, column: 132, scope: !5459)
!5595 = !DILocation(line: 621, column: 117, scope: !5459)
!5596 = !DILocation(line: 621, column: 116, scope: !5459)
!5597 = !DILocation(line: 621, column: 114, scope: !5459)
!5598 = !DILocation(line: 621, column: 83, scope: !5459)
!5599 = !DILocation(line: 621, column: 81, scope: !5459)
!5600 = !DILocation(line: 621, column: 85, scope: !5459)
!5601 = !DILocation(line: 621, column: 74, scope: !5459)
!5602 = !DILocation(line: 621, column: 90, scope: !5459)
!5603 = !DILocalVariable(name: "a", scope: !5604, file: !941, line: 624, type: !952)
!5604 = distinct !DILexicalBlock(scope: !5459, file: !941, line: 624, column: 9)
!5605 = !DILocation(line: 624, column: 15, scope: !5604)
!5606 = !DILocalVariable(name: "b", scope: !5604, file: !941, line: 624, type: !952)
!5607 = !DILocation(line: 624, column: 18, scope: !5604)
!5608 = !DILocation(line: 624, column: 34, scope: !5604)
!5609 = !DILocation(line: 624, column: 32, scope: !5604)
!5610 = !DILocation(line: 624, column: 36, scope: !5604)
!5611 = !DILocation(line: 624, column: 25, scope: !5604)
!5612 = !DILocation(line: 624, column: 23, scope: !5604)
!5613 = !DILocation(line: 624, column: 55, scope: !5604)
!5614 = !DILocation(line: 624, column: 53, scope: !5604)
!5615 = !DILocation(line: 624, column: 57, scope: !5604)
!5616 = !DILocation(line: 624, column: 46, scope: !5604)
!5617 = !DILocation(line: 624, column: 44, scope: !5604)
!5618 = !DILocation(line: 624, column: 81, scope: !5604)
!5619 = !DILocation(line: 624, column: 85, scope: !5604)
!5620 = !DILocation(line: 624, column: 83, scope: !5604)
!5621 = !DILocation(line: 624, column: 72, scope: !5604)
!5622 = !DILocation(line: 624, column: 70, scope: !5604)
!5623 = !DILocation(line: 624, column: 74, scope: !5604)
!5624 = !DILocation(line: 624, column: 63, scope: !5604)
!5625 = !DILocation(line: 624, column: 79, scope: !5604)
!5626 = !DILocation(line: 624, column: 106, scope: !5604)
!5627 = !DILocation(line: 624, column: 110, scope: !5604)
!5628 = !DILocation(line: 624, column: 108, scope: !5604)
!5629 = !DILocation(line: 624, column: 97, scope: !5604)
!5630 = !DILocation(line: 624, column: 95, scope: !5604)
!5631 = !DILocation(line: 624, column: 99, scope: !5604)
!5632 = !DILocation(line: 624, column: 88, scope: !5604)
!5633 = !DILocation(line: 624, column: 104, scope: !5604)
!5634 = !DILocalVariable(name: "a", scope: !5635, file: !941, line: 625, type: !952)
!5635 = distinct !DILexicalBlock(scope: !5459, file: !941, line: 625, column: 9)
!5636 = !DILocation(line: 625, column: 15, scope: !5635)
!5637 = !DILocalVariable(name: "b", scope: !5635, file: !941, line: 625, type: !952)
!5638 = !DILocation(line: 625, column: 18, scope: !5635)
!5639 = !DILocation(line: 625, column: 34, scope: !5635)
!5640 = !DILocation(line: 625, column: 32, scope: !5635)
!5641 = !DILocation(line: 625, column: 36, scope: !5635)
!5642 = !DILocation(line: 625, column: 25, scope: !5635)
!5643 = !DILocation(line: 625, column: 23, scope: !5635)
!5644 = !DILocation(line: 625, column: 55, scope: !5635)
!5645 = !DILocation(line: 625, column: 53, scope: !5635)
!5646 = !DILocation(line: 625, column: 57, scope: !5635)
!5647 = !DILocation(line: 625, column: 46, scope: !5635)
!5648 = !DILocation(line: 625, column: 44, scope: !5635)
!5649 = !DILocation(line: 625, column: 81, scope: !5635)
!5650 = !DILocation(line: 625, column: 85, scope: !5635)
!5651 = !DILocation(line: 625, column: 83, scope: !5635)
!5652 = !DILocation(line: 625, column: 72, scope: !5635)
!5653 = !DILocation(line: 625, column: 70, scope: !5635)
!5654 = !DILocation(line: 625, column: 74, scope: !5635)
!5655 = !DILocation(line: 625, column: 63, scope: !5635)
!5656 = !DILocation(line: 625, column: 79, scope: !5635)
!5657 = !DILocation(line: 625, column: 106, scope: !5635)
!5658 = !DILocation(line: 625, column: 110, scope: !5635)
!5659 = !DILocation(line: 625, column: 108, scope: !5635)
!5660 = !DILocation(line: 625, column: 97, scope: !5635)
!5661 = !DILocation(line: 625, column: 95, scope: !5635)
!5662 = !DILocation(line: 625, column: 99, scope: !5635)
!5663 = !DILocation(line: 625, column: 88, scope: !5635)
!5664 = !DILocation(line: 625, column: 104, scope: !5635)
!5665 = !DILocalVariable(name: "a", scope: !5666, file: !941, line: 626, type: !952)
!5666 = distinct !DILexicalBlock(scope: !5459, file: !941, line: 626, column: 9)
!5667 = !DILocation(line: 626, column: 15, scope: !5666)
!5668 = !DILocalVariable(name: "b", scope: !5666, file: !941, line: 626, type: !952)
!5669 = !DILocation(line: 626, column: 18, scope: !5666)
!5670 = !DILocation(line: 626, column: 34, scope: !5666)
!5671 = !DILocation(line: 626, column: 32, scope: !5666)
!5672 = !DILocation(line: 626, column: 36, scope: !5666)
!5673 = !DILocation(line: 626, column: 25, scope: !5666)
!5674 = !DILocation(line: 626, column: 23, scope: !5666)
!5675 = !DILocation(line: 626, column: 55, scope: !5666)
!5676 = !DILocation(line: 626, column: 53, scope: !5666)
!5677 = !DILocation(line: 626, column: 57, scope: !5666)
!5678 = !DILocation(line: 626, column: 46, scope: !5666)
!5679 = !DILocation(line: 626, column: 44, scope: !5666)
!5680 = !DILocation(line: 626, column: 81, scope: !5666)
!5681 = !DILocation(line: 626, column: 85, scope: !5666)
!5682 = !DILocation(line: 626, column: 83, scope: !5666)
!5683 = !DILocation(line: 626, column: 72, scope: !5666)
!5684 = !DILocation(line: 626, column: 70, scope: !5666)
!5685 = !DILocation(line: 626, column: 74, scope: !5666)
!5686 = !DILocation(line: 626, column: 63, scope: !5666)
!5687 = !DILocation(line: 626, column: 79, scope: !5666)
!5688 = !DILocation(line: 626, column: 106, scope: !5666)
!5689 = !DILocation(line: 626, column: 110, scope: !5666)
!5690 = !DILocation(line: 626, column: 108, scope: !5666)
!5691 = !DILocation(line: 626, column: 97, scope: !5666)
!5692 = !DILocation(line: 626, column: 95, scope: !5666)
!5693 = !DILocation(line: 626, column: 99, scope: !5666)
!5694 = !DILocation(line: 626, column: 88, scope: !5666)
!5695 = !DILocation(line: 626, column: 104, scope: !5666)
!5696 = !DILocalVariable(name: "a", scope: !5697, file: !941, line: 627, type: !952)
!5697 = distinct !DILexicalBlock(scope: !5459, file: !941, line: 627, column: 9)
!5698 = !DILocation(line: 627, column: 15, scope: !5697)
!5699 = !DILocalVariable(name: "b", scope: !5697, file: !941, line: 627, type: !952)
!5700 = !DILocation(line: 627, column: 18, scope: !5697)
!5701 = !DILocation(line: 627, column: 34, scope: !5697)
!5702 = !DILocation(line: 627, column: 32, scope: !5697)
!5703 = !DILocation(line: 627, column: 36, scope: !5697)
!5704 = !DILocation(line: 627, column: 25, scope: !5697)
!5705 = !DILocation(line: 627, column: 23, scope: !5697)
!5706 = !DILocation(line: 627, column: 55, scope: !5697)
!5707 = !DILocation(line: 627, column: 53, scope: !5697)
!5708 = !DILocation(line: 627, column: 57, scope: !5697)
!5709 = !DILocation(line: 627, column: 46, scope: !5697)
!5710 = !DILocation(line: 627, column: 44, scope: !5697)
!5711 = !DILocation(line: 627, column: 81, scope: !5697)
!5712 = !DILocation(line: 627, column: 85, scope: !5697)
!5713 = !DILocation(line: 627, column: 83, scope: !5697)
!5714 = !DILocation(line: 627, column: 72, scope: !5697)
!5715 = !DILocation(line: 627, column: 70, scope: !5697)
!5716 = !DILocation(line: 627, column: 74, scope: !5697)
!5717 = !DILocation(line: 627, column: 63, scope: !5697)
!5718 = !DILocation(line: 627, column: 79, scope: !5697)
!5719 = !DILocation(line: 627, column: 106, scope: !5697)
!5720 = !DILocation(line: 627, column: 110, scope: !5697)
!5721 = !DILocation(line: 627, column: 108, scope: !5697)
!5722 = !DILocation(line: 627, column: 97, scope: !5697)
!5723 = !DILocation(line: 627, column: 95, scope: !5697)
!5724 = !DILocation(line: 627, column: 99, scope: !5697)
!5725 = !DILocation(line: 627, column: 88, scope: !5697)
!5726 = !DILocation(line: 627, column: 104, scope: !5697)
!5727 = !DILocalVariable(name: "a", scope: !5728, file: !941, line: 629, type: !952)
!5728 = distinct !DILexicalBlock(scope: !5459, file: !941, line: 629, column: 9)
!5729 = !DILocation(line: 629, column: 15, scope: !5728)
!5730 = !DILocalVariable(name: "b", scope: !5728, file: !941, line: 629, type: !952)
!5731 = !DILocation(line: 629, column: 18, scope: !5728)
!5732 = !DILocation(line: 629, column: 34, scope: !5728)
!5733 = !DILocation(line: 629, column: 32, scope: !5728)
!5734 = !DILocation(line: 629, column: 36, scope: !5728)
!5735 = !DILocation(line: 629, column: 25, scope: !5728)
!5736 = !DILocation(line: 629, column: 23, scope: !5728)
!5737 = !DILocation(line: 629, column: 55, scope: !5728)
!5738 = !DILocation(line: 629, column: 53, scope: !5728)
!5739 = !DILocation(line: 629, column: 57, scope: !5728)
!5740 = !DILocation(line: 629, column: 46, scope: !5728)
!5741 = !DILocation(line: 629, column: 44, scope: !5728)
!5742 = !DILocation(line: 629, column: 81, scope: !5728)
!5743 = !DILocation(line: 629, column: 85, scope: !5728)
!5744 = !DILocation(line: 629, column: 83, scope: !5728)
!5745 = !DILocation(line: 629, column: 72, scope: !5728)
!5746 = !DILocation(line: 629, column: 70, scope: !5728)
!5747 = !DILocation(line: 629, column: 74, scope: !5728)
!5748 = !DILocation(line: 629, column: 63, scope: !5728)
!5749 = !DILocation(line: 629, column: 79, scope: !5728)
!5750 = !DILocation(line: 629, column: 106, scope: !5728)
!5751 = !DILocation(line: 629, column: 110, scope: !5728)
!5752 = !DILocation(line: 629, column: 108, scope: !5728)
!5753 = !DILocation(line: 629, column: 97, scope: !5728)
!5754 = !DILocation(line: 629, column: 95, scope: !5728)
!5755 = !DILocation(line: 629, column: 99, scope: !5728)
!5756 = !DILocation(line: 629, column: 88, scope: !5728)
!5757 = !DILocation(line: 629, column: 104, scope: !5728)
!5758 = !DILocalVariable(name: "a", scope: !5759, file: !941, line: 630, type: !952)
!5759 = distinct !DILexicalBlock(scope: !5459, file: !941, line: 630, column: 9)
!5760 = !DILocation(line: 630, column: 15, scope: !5759)
!5761 = !DILocalVariable(name: "b", scope: !5759, file: !941, line: 630, type: !952)
!5762 = !DILocation(line: 630, column: 18, scope: !5759)
!5763 = !DILocation(line: 630, column: 34, scope: !5759)
!5764 = !DILocation(line: 630, column: 32, scope: !5759)
!5765 = !DILocation(line: 630, column: 36, scope: !5759)
!5766 = !DILocation(line: 630, column: 25, scope: !5759)
!5767 = !DILocation(line: 630, column: 23, scope: !5759)
!5768 = !DILocation(line: 630, column: 55, scope: !5759)
!5769 = !DILocation(line: 630, column: 53, scope: !5759)
!5770 = !DILocation(line: 630, column: 57, scope: !5759)
!5771 = !DILocation(line: 630, column: 46, scope: !5759)
!5772 = !DILocation(line: 630, column: 44, scope: !5759)
!5773 = !DILocation(line: 630, column: 81, scope: !5759)
!5774 = !DILocation(line: 630, column: 85, scope: !5759)
!5775 = !DILocation(line: 630, column: 83, scope: !5759)
!5776 = !DILocation(line: 630, column: 72, scope: !5759)
!5777 = !DILocation(line: 630, column: 70, scope: !5759)
!5778 = !DILocation(line: 630, column: 74, scope: !5759)
!5779 = !DILocation(line: 630, column: 63, scope: !5759)
!5780 = !DILocation(line: 630, column: 79, scope: !5759)
!5781 = !DILocation(line: 630, column: 106, scope: !5759)
!5782 = !DILocation(line: 630, column: 110, scope: !5759)
!5783 = !DILocation(line: 630, column: 108, scope: !5759)
!5784 = !DILocation(line: 630, column: 97, scope: !5759)
!5785 = !DILocation(line: 630, column: 95, scope: !5759)
!5786 = !DILocation(line: 630, column: 99, scope: !5759)
!5787 = !DILocation(line: 630, column: 88, scope: !5759)
!5788 = !DILocation(line: 630, column: 104, scope: !5759)
!5789 = !DILocalVariable(name: "a", scope: !5790, file: !941, line: 631, type: !952)
!5790 = distinct !DILexicalBlock(scope: !5459, file: !941, line: 631, column: 9)
!5791 = !DILocation(line: 631, column: 15, scope: !5790)
!5792 = !DILocalVariable(name: "b", scope: !5790, file: !941, line: 631, type: !952)
!5793 = !DILocation(line: 631, column: 18, scope: !5790)
!5794 = !DILocation(line: 631, column: 34, scope: !5790)
!5795 = !DILocation(line: 631, column: 32, scope: !5790)
!5796 = !DILocation(line: 631, column: 36, scope: !5790)
!5797 = !DILocation(line: 631, column: 25, scope: !5790)
!5798 = !DILocation(line: 631, column: 23, scope: !5790)
!5799 = !DILocation(line: 631, column: 55, scope: !5790)
!5800 = !DILocation(line: 631, column: 53, scope: !5790)
!5801 = !DILocation(line: 631, column: 57, scope: !5790)
!5802 = !DILocation(line: 631, column: 46, scope: !5790)
!5803 = !DILocation(line: 631, column: 44, scope: !5790)
!5804 = !DILocation(line: 631, column: 81, scope: !5790)
!5805 = !DILocation(line: 631, column: 85, scope: !5790)
!5806 = !DILocation(line: 631, column: 83, scope: !5790)
!5807 = !DILocation(line: 631, column: 72, scope: !5790)
!5808 = !DILocation(line: 631, column: 70, scope: !5790)
!5809 = !DILocation(line: 631, column: 74, scope: !5790)
!5810 = !DILocation(line: 631, column: 63, scope: !5790)
!5811 = !DILocation(line: 631, column: 79, scope: !5790)
!5812 = !DILocation(line: 631, column: 106, scope: !5790)
!5813 = !DILocation(line: 631, column: 110, scope: !5790)
!5814 = !DILocation(line: 631, column: 108, scope: !5790)
!5815 = !DILocation(line: 631, column: 97, scope: !5790)
!5816 = !DILocation(line: 631, column: 95, scope: !5790)
!5817 = !DILocation(line: 631, column: 99, scope: !5790)
!5818 = !DILocation(line: 631, column: 88, scope: !5790)
!5819 = !DILocation(line: 631, column: 104, scope: !5790)
!5820 = !DILocalVariable(name: "a", scope: !5821, file: !941, line: 632, type: !952)
!5821 = distinct !DILexicalBlock(scope: !5459, file: !941, line: 632, column: 9)
!5822 = !DILocation(line: 632, column: 15, scope: !5821)
!5823 = !DILocalVariable(name: "b", scope: !5821, file: !941, line: 632, type: !952)
!5824 = !DILocation(line: 632, column: 18, scope: !5821)
!5825 = !DILocation(line: 632, column: 34, scope: !5821)
!5826 = !DILocation(line: 632, column: 32, scope: !5821)
!5827 = !DILocation(line: 632, column: 36, scope: !5821)
!5828 = !DILocation(line: 632, column: 25, scope: !5821)
!5829 = !DILocation(line: 632, column: 23, scope: !5821)
!5830 = !DILocation(line: 632, column: 55, scope: !5821)
!5831 = !DILocation(line: 632, column: 53, scope: !5821)
!5832 = !DILocation(line: 632, column: 57, scope: !5821)
!5833 = !DILocation(line: 632, column: 46, scope: !5821)
!5834 = !DILocation(line: 632, column: 44, scope: !5821)
!5835 = !DILocation(line: 632, column: 81, scope: !5821)
!5836 = !DILocation(line: 632, column: 85, scope: !5821)
!5837 = !DILocation(line: 632, column: 83, scope: !5821)
!5838 = !DILocation(line: 632, column: 72, scope: !5821)
!5839 = !DILocation(line: 632, column: 70, scope: !5821)
!5840 = !DILocation(line: 632, column: 74, scope: !5821)
!5841 = !DILocation(line: 632, column: 63, scope: !5821)
!5842 = !DILocation(line: 632, column: 79, scope: !5821)
!5843 = !DILocation(line: 632, column: 106, scope: !5821)
!5844 = !DILocation(line: 632, column: 110, scope: !5821)
!5845 = !DILocation(line: 632, column: 108, scope: !5821)
!5846 = !DILocation(line: 632, column: 97, scope: !5821)
!5847 = !DILocation(line: 632, column: 95, scope: !5821)
!5848 = !DILocation(line: 632, column: 99, scope: !5821)
!5849 = !DILocation(line: 632, column: 88, scope: !5821)
!5850 = !DILocation(line: 632, column: 104, scope: !5821)
!5851 = !DILocation(line: 633, column: 5, scope: !5459)
!5852 = !DILocation(line: 613, column: 25, scope: !5853)
!5853 = !DILexicalBlockFile(scope: !5455, file: !941, discriminator: 2)
!5854 = !DILocation(line: 613, column: 5, scope: !5853)
!5855 = distinct !{!5855, !5856}
!5856 = !DILocation(line: 613, column: 5, scope: !5433)
!5857 = !DILocation(line: 635, column: 12, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5433, file: !941, line: 635, column: 5)
!5859 = !DILocation(line: 635, column: 10, scope: !5858)
!5860 = !DILocation(line: 635, column: 17, scope: !5861)
!5861 = !DILexicalBlockFile(scope: !5862, file: !941, discriminator: 1)
!5862 = distinct !DILexicalBlock(scope: !5858, file: !941, line: 635, column: 5)
!5863 = !DILocation(line: 635, column: 19, scope: !5861)
!5864 = !DILocation(line: 635, column: 5, scope: !5861)
!5865 = !DILocalVariable(name: "a", scope: !5866, file: !941, line: 636, type: !952)
!5866 = distinct !DILexicalBlock(scope: !5867, file: !941, line: 636, column: 9)
!5867 = distinct !DILexicalBlock(scope: !5862, file: !941, line: 635, column: 29)
!5868 = !DILocation(line: 636, column: 15, scope: !5866)
!5869 = !DILocalVariable(name: "b", scope: !5866, file: !941, line: 636, type: !952)
!5870 = !DILocation(line: 636, column: 18, scope: !5866)
!5871 = !DILocation(line: 636, column: 38, scope: !5866)
!5872 = !DILocation(line: 636, column: 36, scope: !5866)
!5873 = !DILocation(line: 636, column: 25, scope: !5866)
!5874 = !DILocation(line: 636, column: 23, scope: !5866)
!5875 = !DILocation(line: 636, column: 59, scope: !5866)
!5876 = !DILocation(line: 636, column: 57, scope: !5866)
!5877 = !DILocation(line: 636, column: 46, scope: !5866)
!5878 = !DILocation(line: 636, column: 44, scope: !5866)
!5879 = !DILocation(line: 636, column: 81, scope: !5866)
!5880 = !DILocation(line: 636, column: 85, scope: !5866)
!5881 = !DILocation(line: 636, column: 83, scope: !5866)
!5882 = !DILocation(line: 636, column: 76, scope: !5866)
!5883 = !DILocation(line: 636, column: 74, scope: !5866)
!5884 = !DILocation(line: 636, column: 63, scope: !5866)
!5885 = !DILocation(line: 636, column: 79, scope: !5866)
!5886 = !DILocation(line: 636, column: 106, scope: !5866)
!5887 = !DILocation(line: 636, column: 110, scope: !5866)
!5888 = !DILocation(line: 636, column: 108, scope: !5866)
!5889 = !DILocation(line: 636, column: 101, scope: !5866)
!5890 = !DILocation(line: 636, column: 99, scope: !5866)
!5891 = !DILocation(line: 636, column: 88, scope: !5866)
!5892 = !DILocation(line: 636, column: 104, scope: !5866)
!5893 = !DILocalVariable(name: "a", scope: !5894, file: !941, line: 637, type: !952)
!5894 = distinct !DILexicalBlock(scope: !5867, file: !941, line: 637, column: 9)
!5895 = !DILocation(line: 637, column: 15, scope: !5894)
!5896 = !DILocalVariable(name: "b", scope: !5894, file: !941, line: 637, type: !952)
!5897 = !DILocation(line: 637, column: 18, scope: !5894)
!5898 = !DILocation(line: 637, column: 38, scope: !5894)
!5899 = !DILocation(line: 637, column: 36, scope: !5894)
!5900 = !DILocation(line: 637, column: 25, scope: !5894)
!5901 = !DILocation(line: 637, column: 23, scope: !5894)
!5902 = !DILocation(line: 637, column: 59, scope: !5894)
!5903 = !DILocation(line: 637, column: 57, scope: !5894)
!5904 = !DILocation(line: 637, column: 46, scope: !5894)
!5905 = !DILocation(line: 637, column: 44, scope: !5894)
!5906 = !DILocation(line: 637, column: 81, scope: !5894)
!5907 = !DILocation(line: 637, column: 85, scope: !5894)
!5908 = !DILocation(line: 637, column: 83, scope: !5894)
!5909 = !DILocation(line: 637, column: 76, scope: !5894)
!5910 = !DILocation(line: 637, column: 74, scope: !5894)
!5911 = !DILocation(line: 637, column: 63, scope: !5894)
!5912 = !DILocation(line: 637, column: 79, scope: !5894)
!5913 = !DILocation(line: 637, column: 106, scope: !5894)
!5914 = !DILocation(line: 637, column: 110, scope: !5894)
!5915 = !DILocation(line: 637, column: 108, scope: !5894)
!5916 = !DILocation(line: 637, column: 101, scope: !5894)
!5917 = !DILocation(line: 637, column: 99, scope: !5894)
!5918 = !DILocation(line: 637, column: 88, scope: !5894)
!5919 = !DILocation(line: 637, column: 104, scope: !5894)
!5920 = !DILocalVariable(name: "a", scope: !5921, file: !941, line: 638, type: !952)
!5921 = distinct !DILexicalBlock(scope: !5867, file: !941, line: 638, column: 9)
!5922 = !DILocation(line: 638, column: 15, scope: !5921)
!5923 = !DILocalVariable(name: "b", scope: !5921, file: !941, line: 638, type: !952)
!5924 = !DILocation(line: 638, column: 18, scope: !5921)
!5925 = !DILocation(line: 638, column: 38, scope: !5921)
!5926 = !DILocation(line: 638, column: 36, scope: !5921)
!5927 = !DILocation(line: 638, column: 25, scope: !5921)
!5928 = !DILocation(line: 638, column: 23, scope: !5921)
!5929 = !DILocation(line: 638, column: 59, scope: !5921)
!5930 = !DILocation(line: 638, column: 57, scope: !5921)
!5931 = !DILocation(line: 638, column: 46, scope: !5921)
!5932 = !DILocation(line: 638, column: 44, scope: !5921)
!5933 = !DILocation(line: 638, column: 81, scope: !5921)
!5934 = !DILocation(line: 638, column: 85, scope: !5921)
!5935 = !DILocation(line: 638, column: 83, scope: !5921)
!5936 = !DILocation(line: 638, column: 76, scope: !5921)
!5937 = !DILocation(line: 638, column: 74, scope: !5921)
!5938 = !DILocation(line: 638, column: 63, scope: !5921)
!5939 = !DILocation(line: 638, column: 79, scope: !5921)
!5940 = !DILocation(line: 638, column: 106, scope: !5921)
!5941 = !DILocation(line: 638, column: 110, scope: !5921)
!5942 = !DILocation(line: 638, column: 108, scope: !5921)
!5943 = !DILocation(line: 638, column: 101, scope: !5921)
!5944 = !DILocation(line: 638, column: 99, scope: !5921)
!5945 = !DILocation(line: 638, column: 88, scope: !5921)
!5946 = !DILocation(line: 638, column: 104, scope: !5921)
!5947 = !DILocalVariable(name: "a", scope: !5948, file: !941, line: 639, type: !952)
!5948 = distinct !DILexicalBlock(scope: !5867, file: !941, line: 639, column: 9)
!5949 = !DILocation(line: 639, column: 15, scope: !5948)
!5950 = !DILocalVariable(name: "b", scope: !5948, file: !941, line: 639, type: !952)
!5951 = !DILocation(line: 639, column: 18, scope: !5948)
!5952 = !DILocation(line: 639, column: 38, scope: !5948)
!5953 = !DILocation(line: 639, column: 36, scope: !5948)
!5954 = !DILocation(line: 639, column: 25, scope: !5948)
!5955 = !DILocation(line: 639, column: 23, scope: !5948)
!5956 = !DILocation(line: 639, column: 59, scope: !5948)
!5957 = !DILocation(line: 639, column: 57, scope: !5948)
!5958 = !DILocation(line: 639, column: 46, scope: !5948)
!5959 = !DILocation(line: 639, column: 44, scope: !5948)
!5960 = !DILocation(line: 639, column: 81, scope: !5948)
!5961 = !DILocation(line: 639, column: 85, scope: !5948)
!5962 = !DILocation(line: 639, column: 83, scope: !5948)
!5963 = !DILocation(line: 639, column: 76, scope: !5948)
!5964 = !DILocation(line: 639, column: 74, scope: !5948)
!5965 = !DILocation(line: 639, column: 63, scope: !5948)
!5966 = !DILocation(line: 639, column: 79, scope: !5948)
!5967 = !DILocation(line: 639, column: 106, scope: !5948)
!5968 = !DILocation(line: 639, column: 110, scope: !5948)
!5969 = !DILocation(line: 639, column: 108, scope: !5948)
!5970 = !DILocation(line: 639, column: 101, scope: !5948)
!5971 = !DILocation(line: 639, column: 99, scope: !5948)
!5972 = !DILocation(line: 639, column: 88, scope: !5948)
!5973 = !DILocation(line: 639, column: 104, scope: !5948)
!5974 = !DILocalVariable(name: "a", scope: !5975, file: !941, line: 641, type: !952)
!5975 = distinct !DILexicalBlock(scope: !5867, file: !941, line: 641, column: 9)
!5976 = !DILocation(line: 641, column: 15, scope: !5975)
!5977 = !DILocalVariable(name: "b", scope: !5975, file: !941, line: 641, type: !952)
!5978 = !DILocation(line: 641, column: 18, scope: !5975)
!5979 = !DILocation(line: 641, column: 38, scope: !5975)
!5980 = !DILocation(line: 641, column: 36, scope: !5975)
!5981 = !DILocation(line: 641, column: 25, scope: !5975)
!5982 = !DILocation(line: 641, column: 23, scope: !5975)
!5983 = !DILocation(line: 641, column: 59, scope: !5975)
!5984 = !DILocation(line: 641, column: 57, scope: !5975)
!5985 = !DILocation(line: 641, column: 46, scope: !5975)
!5986 = !DILocation(line: 641, column: 44, scope: !5975)
!5987 = !DILocation(line: 641, column: 81, scope: !5975)
!5988 = !DILocation(line: 641, column: 85, scope: !5975)
!5989 = !DILocation(line: 641, column: 83, scope: !5975)
!5990 = !DILocation(line: 641, column: 76, scope: !5975)
!5991 = !DILocation(line: 641, column: 74, scope: !5975)
!5992 = !DILocation(line: 641, column: 63, scope: !5975)
!5993 = !DILocation(line: 641, column: 79, scope: !5975)
!5994 = !DILocation(line: 641, column: 106, scope: !5975)
!5995 = !DILocation(line: 641, column: 110, scope: !5975)
!5996 = !DILocation(line: 641, column: 108, scope: !5975)
!5997 = !DILocation(line: 641, column: 101, scope: !5975)
!5998 = !DILocation(line: 641, column: 99, scope: !5975)
!5999 = !DILocation(line: 641, column: 88, scope: !5975)
!6000 = !DILocation(line: 641, column: 104, scope: !5975)
!6001 = !DILocalVariable(name: "a", scope: !6002, file: !941, line: 642, type: !952)
!6002 = distinct !DILexicalBlock(scope: !5867, file: !941, line: 642, column: 9)
!6003 = !DILocation(line: 642, column: 15, scope: !6002)
!6004 = !DILocalVariable(name: "b", scope: !6002, file: !941, line: 642, type: !952)
!6005 = !DILocation(line: 642, column: 18, scope: !6002)
!6006 = !DILocation(line: 642, column: 38, scope: !6002)
!6007 = !DILocation(line: 642, column: 36, scope: !6002)
!6008 = !DILocation(line: 642, column: 25, scope: !6002)
!6009 = !DILocation(line: 642, column: 23, scope: !6002)
!6010 = !DILocation(line: 642, column: 59, scope: !6002)
!6011 = !DILocation(line: 642, column: 57, scope: !6002)
!6012 = !DILocation(line: 642, column: 46, scope: !6002)
!6013 = !DILocation(line: 642, column: 44, scope: !6002)
!6014 = !DILocation(line: 642, column: 81, scope: !6002)
!6015 = !DILocation(line: 642, column: 85, scope: !6002)
!6016 = !DILocation(line: 642, column: 83, scope: !6002)
!6017 = !DILocation(line: 642, column: 76, scope: !6002)
!6018 = !DILocation(line: 642, column: 74, scope: !6002)
!6019 = !DILocation(line: 642, column: 63, scope: !6002)
!6020 = !DILocation(line: 642, column: 79, scope: !6002)
!6021 = !DILocation(line: 642, column: 106, scope: !6002)
!6022 = !DILocation(line: 642, column: 110, scope: !6002)
!6023 = !DILocation(line: 642, column: 108, scope: !6002)
!6024 = !DILocation(line: 642, column: 101, scope: !6002)
!6025 = !DILocation(line: 642, column: 99, scope: !6002)
!6026 = !DILocation(line: 642, column: 88, scope: !6002)
!6027 = !DILocation(line: 642, column: 104, scope: !6002)
!6028 = !DILocalVariable(name: "a", scope: !6029, file: !941, line: 643, type: !952)
!6029 = distinct !DILexicalBlock(scope: !5867, file: !941, line: 643, column: 9)
!6030 = !DILocation(line: 643, column: 15, scope: !6029)
!6031 = !DILocalVariable(name: "b", scope: !6029, file: !941, line: 643, type: !952)
!6032 = !DILocation(line: 643, column: 18, scope: !6029)
!6033 = !DILocation(line: 643, column: 38, scope: !6029)
!6034 = !DILocation(line: 643, column: 36, scope: !6029)
!6035 = !DILocation(line: 643, column: 25, scope: !6029)
!6036 = !DILocation(line: 643, column: 23, scope: !6029)
!6037 = !DILocation(line: 643, column: 59, scope: !6029)
!6038 = !DILocation(line: 643, column: 57, scope: !6029)
!6039 = !DILocation(line: 643, column: 46, scope: !6029)
!6040 = !DILocation(line: 643, column: 44, scope: !6029)
!6041 = !DILocation(line: 643, column: 81, scope: !6029)
!6042 = !DILocation(line: 643, column: 85, scope: !6029)
!6043 = !DILocation(line: 643, column: 83, scope: !6029)
!6044 = !DILocation(line: 643, column: 76, scope: !6029)
!6045 = !DILocation(line: 643, column: 74, scope: !6029)
!6046 = !DILocation(line: 643, column: 63, scope: !6029)
!6047 = !DILocation(line: 643, column: 79, scope: !6029)
!6048 = !DILocation(line: 643, column: 106, scope: !6029)
!6049 = !DILocation(line: 643, column: 110, scope: !6029)
!6050 = !DILocation(line: 643, column: 108, scope: !6029)
!6051 = !DILocation(line: 643, column: 101, scope: !6029)
!6052 = !DILocation(line: 643, column: 99, scope: !6029)
!6053 = !DILocation(line: 643, column: 88, scope: !6029)
!6054 = !DILocation(line: 643, column: 104, scope: !6029)
!6055 = !DILocalVariable(name: "a", scope: !6056, file: !941, line: 644, type: !952)
!6056 = distinct !DILexicalBlock(scope: !5867, file: !941, line: 644, column: 9)
!6057 = !DILocation(line: 644, column: 15, scope: !6056)
!6058 = !DILocalVariable(name: "b", scope: !6056, file: !941, line: 644, type: !952)
!6059 = !DILocation(line: 644, column: 18, scope: !6056)
!6060 = !DILocation(line: 644, column: 38, scope: !6056)
!6061 = !DILocation(line: 644, column: 36, scope: !6056)
!6062 = !DILocation(line: 644, column: 25, scope: !6056)
!6063 = !DILocation(line: 644, column: 23, scope: !6056)
!6064 = !DILocation(line: 644, column: 59, scope: !6056)
!6065 = !DILocation(line: 644, column: 57, scope: !6056)
!6066 = !DILocation(line: 644, column: 46, scope: !6056)
!6067 = !DILocation(line: 644, column: 44, scope: !6056)
!6068 = !DILocation(line: 644, column: 81, scope: !6056)
!6069 = !DILocation(line: 644, column: 85, scope: !6056)
!6070 = !DILocation(line: 644, column: 83, scope: !6056)
!6071 = !DILocation(line: 644, column: 76, scope: !6056)
!6072 = !DILocation(line: 644, column: 74, scope: !6056)
!6073 = !DILocation(line: 644, column: 63, scope: !6056)
!6074 = !DILocation(line: 644, column: 79, scope: !6056)
!6075 = !DILocation(line: 644, column: 106, scope: !6056)
!6076 = !DILocation(line: 644, column: 110, scope: !6056)
!6077 = !DILocation(line: 644, column: 108, scope: !6056)
!6078 = !DILocation(line: 644, column: 101, scope: !6056)
!6079 = !DILocation(line: 644, column: 99, scope: !6056)
!6080 = !DILocation(line: 644, column: 88, scope: !6056)
!6081 = !DILocation(line: 644, column: 104, scope: !6056)
!6082 = !DILocation(line: 647, column: 30, scope: !5867)
!6083 = !DILocation(line: 647, column: 28, scope: !5867)
!6084 = !DILocation(line: 647, column: 17, scope: !5867)
!6085 = !DILocation(line: 647, column: 50, scope: !5867)
!6086 = !DILocation(line: 647, column: 48, scope: !5867)
!6087 = !DILocation(line: 647, column: 37, scope: !5867)
!6088 = !DILocation(line: 647, column: 34, scope: !5867)
!6089 = !DILocation(line: 647, column: 55, scope: !5867)
!6090 = !DILocation(line: 647, column: 15, scope: !5867)
!6091 = !DILocation(line: 647, column: 77, scope: !6092)
!6092 = !DILexicalBlockFile(scope: !5867, file: !941, discriminator: 1)
!6093 = !DILocation(line: 647, column: 75, scope: !6092)
!6094 = !DILocation(line: 647, column: 64, scope: !6092)
!6095 = !DILocation(line: 647, column: 97, scope: !6092)
!6096 = !DILocation(line: 647, column: 95, scope: !6092)
!6097 = !DILocation(line: 647, column: 84, scope: !6092)
!6098 = !DILocation(line: 647, column: 81, scope: !6092)
!6099 = !DILocation(line: 647, column: 15, scope: !6092)
!6100 = !DILocation(line: 647, column: 121, scope: !6101)
!6101 = !DILexicalBlockFile(scope: !5867, file: !941, discriminator: 2)
!6102 = !DILocation(line: 647, column: 119, scope: !6101)
!6103 = !DILocation(line: 647, column: 108, scope: !6101)
!6104 = !DILocation(line: 647, column: 141, scope: !6101)
!6105 = !DILocation(line: 647, column: 139, scope: !6101)
!6106 = !DILocation(line: 647, column: 128, scope: !6101)
!6107 = !DILocation(line: 647, column: 125, scope: !6101)
!6108 = !DILocation(line: 647, column: 105, scope: !6101)
!6109 = !DILocation(line: 647, column: 15, scope: !6101)
!6110 = !DILocation(line: 647, column: 15, scope: !6111)
!6111 = !DILexicalBlockFile(scope: !5867, file: !941, discriminator: 3)
!6112 = !DILocation(line: 647, column: 166, scope: !6111)
!6113 = !DILocation(line: 647, column: 164, scope: !6111)
!6114 = !DILocation(line: 647, column: 153, scope: !6111)
!6115 = !DILocation(line: 647, column: 186, scope: !6111)
!6116 = !DILocation(line: 647, column: 184, scope: !6111)
!6117 = !DILocation(line: 647, column: 173, scope: !6111)
!6118 = !DILocation(line: 647, column: 170, scope: !6111)
!6119 = !DILocation(line: 647, column: 191, scope: !6111)
!6120 = !DILocation(line: 647, column: 151, scope: !6111)
!6121 = !DILocation(line: 647, column: 213, scope: !6122)
!6122 = !DILexicalBlockFile(scope: !5867, file: !941, discriminator: 4)
!6123 = !DILocation(line: 647, column: 211, scope: !6122)
!6124 = !DILocation(line: 647, column: 200, scope: !6122)
!6125 = !DILocation(line: 647, column: 233, scope: !6122)
!6126 = !DILocation(line: 647, column: 231, scope: !6122)
!6127 = !DILocation(line: 647, column: 220, scope: !6122)
!6128 = !DILocation(line: 647, column: 217, scope: !6122)
!6129 = !DILocation(line: 647, column: 151, scope: !6122)
!6130 = !DILocation(line: 647, column: 257, scope: !6131)
!6131 = !DILexicalBlockFile(scope: !5867, file: !941, discriminator: 5)
!6132 = !DILocation(line: 647, column: 255, scope: !6131)
!6133 = !DILocation(line: 647, column: 244, scope: !6131)
!6134 = !DILocation(line: 647, column: 277, scope: !6131)
!6135 = !DILocation(line: 647, column: 275, scope: !6131)
!6136 = !DILocation(line: 647, column: 264, scope: !6131)
!6137 = !DILocation(line: 647, column: 261, scope: !6131)
!6138 = !DILocation(line: 647, column: 241, scope: !6131)
!6139 = !DILocation(line: 647, column: 151, scope: !6131)
!6140 = !DILocation(line: 647, column: 151, scope: !6141)
!6141 = !DILexicalBlockFile(scope: !5867, file: !941, discriminator: 6)
!6142 = !DILocation(line: 647, column: 148, scope: !6141)
!6143 = !DILocation(line: 648, column: 32, scope: !5867)
!6144 = !DILocation(line: 648, column: 30, scope: !5867)
!6145 = !DILocation(line: 648, column: 19, scope: !5867)
!6146 = !DILocation(line: 648, column: 52, scope: !5867)
!6147 = !DILocation(line: 648, column: 50, scope: !5867)
!6148 = !DILocation(line: 648, column: 39, scope: !5867)
!6149 = !DILocation(line: 648, column: 36, scope: !5867)
!6150 = !DILocation(line: 648, column: 57, scope: !5867)
!6151 = !DILocation(line: 648, column: 17, scope: !5867)
!6152 = !DILocation(line: 648, column: 79, scope: !6092)
!6153 = !DILocation(line: 648, column: 77, scope: !6092)
!6154 = !DILocation(line: 648, column: 66, scope: !6092)
!6155 = !DILocation(line: 648, column: 99, scope: !6092)
!6156 = !DILocation(line: 648, column: 97, scope: !6092)
!6157 = !DILocation(line: 648, column: 86, scope: !6092)
!6158 = !DILocation(line: 648, column: 83, scope: !6092)
!6159 = !DILocation(line: 648, column: 17, scope: !6092)
!6160 = !DILocation(line: 648, column: 123, scope: !6101)
!6161 = !DILocation(line: 648, column: 121, scope: !6101)
!6162 = !DILocation(line: 648, column: 110, scope: !6101)
!6163 = !DILocation(line: 648, column: 143, scope: !6101)
!6164 = !DILocation(line: 648, column: 141, scope: !6101)
!6165 = !DILocation(line: 648, column: 130, scope: !6101)
!6166 = !DILocation(line: 648, column: 127, scope: !6101)
!6167 = !DILocation(line: 648, column: 107, scope: !6101)
!6168 = !DILocation(line: 648, column: 17, scope: !6101)
!6169 = !DILocation(line: 648, column: 17, scope: !6111)
!6170 = !DILocation(line: 648, column: 168, scope: !6111)
!6171 = !DILocation(line: 648, column: 166, scope: !6111)
!6172 = !DILocation(line: 648, column: 155, scope: !6111)
!6173 = !DILocation(line: 648, column: 188, scope: !6111)
!6174 = !DILocation(line: 648, column: 186, scope: !6111)
!6175 = !DILocation(line: 648, column: 175, scope: !6111)
!6176 = !DILocation(line: 648, column: 172, scope: !6111)
!6177 = !DILocation(line: 648, column: 193, scope: !6111)
!6178 = !DILocation(line: 648, column: 153, scope: !6111)
!6179 = !DILocation(line: 648, column: 215, scope: !6122)
!6180 = !DILocation(line: 648, column: 213, scope: !6122)
!6181 = !DILocation(line: 648, column: 202, scope: !6122)
!6182 = !DILocation(line: 648, column: 235, scope: !6122)
!6183 = !DILocation(line: 648, column: 233, scope: !6122)
!6184 = !DILocation(line: 648, column: 222, scope: !6122)
!6185 = !DILocation(line: 648, column: 219, scope: !6122)
!6186 = !DILocation(line: 648, column: 153, scope: !6122)
!6187 = !DILocation(line: 648, column: 259, scope: !6131)
!6188 = !DILocation(line: 648, column: 257, scope: !6131)
!6189 = !DILocation(line: 648, column: 246, scope: !6131)
!6190 = !DILocation(line: 648, column: 279, scope: !6131)
!6191 = !DILocation(line: 648, column: 277, scope: !6131)
!6192 = !DILocation(line: 648, column: 266, scope: !6131)
!6193 = !DILocation(line: 648, column: 263, scope: !6131)
!6194 = !DILocation(line: 648, column: 243, scope: !6131)
!6195 = !DILocation(line: 648, column: 153, scope: !6131)
!6196 = !DILocation(line: 648, column: 153, scope: !6141)
!6197 = !DILocation(line: 648, column: 150, scope: !6141)
!6198 = !DILocation(line: 648, column: 13, scope: !6141)
!6199 = !DILocation(line: 649, column: 32, scope: !5867)
!6200 = !DILocation(line: 649, column: 30, scope: !5867)
!6201 = !DILocation(line: 649, column: 19, scope: !5867)
!6202 = !DILocation(line: 649, column: 52, scope: !5867)
!6203 = !DILocation(line: 649, column: 50, scope: !5867)
!6204 = !DILocation(line: 649, column: 39, scope: !5867)
!6205 = !DILocation(line: 649, column: 36, scope: !5867)
!6206 = !DILocation(line: 649, column: 57, scope: !5867)
!6207 = !DILocation(line: 649, column: 17, scope: !5867)
!6208 = !DILocation(line: 649, column: 79, scope: !6092)
!6209 = !DILocation(line: 649, column: 77, scope: !6092)
!6210 = !DILocation(line: 649, column: 66, scope: !6092)
!6211 = !DILocation(line: 649, column: 99, scope: !6092)
!6212 = !DILocation(line: 649, column: 97, scope: !6092)
!6213 = !DILocation(line: 649, column: 86, scope: !6092)
!6214 = !DILocation(line: 649, column: 83, scope: !6092)
!6215 = !DILocation(line: 649, column: 17, scope: !6092)
!6216 = !DILocation(line: 649, column: 123, scope: !6101)
!6217 = !DILocation(line: 649, column: 121, scope: !6101)
!6218 = !DILocation(line: 649, column: 110, scope: !6101)
!6219 = !DILocation(line: 649, column: 143, scope: !6101)
!6220 = !DILocation(line: 649, column: 141, scope: !6101)
!6221 = !DILocation(line: 649, column: 130, scope: !6101)
!6222 = !DILocation(line: 649, column: 127, scope: !6101)
!6223 = !DILocation(line: 649, column: 107, scope: !6101)
!6224 = !DILocation(line: 649, column: 17, scope: !6101)
!6225 = !DILocation(line: 649, column: 17, scope: !6111)
!6226 = !DILocation(line: 649, column: 168, scope: !6111)
!6227 = !DILocation(line: 649, column: 166, scope: !6111)
!6228 = !DILocation(line: 649, column: 155, scope: !6111)
!6229 = !DILocation(line: 649, column: 188, scope: !6111)
!6230 = !DILocation(line: 649, column: 186, scope: !6111)
!6231 = !DILocation(line: 649, column: 175, scope: !6111)
!6232 = !DILocation(line: 649, column: 172, scope: !6111)
!6233 = !DILocation(line: 649, column: 193, scope: !6111)
!6234 = !DILocation(line: 649, column: 153, scope: !6111)
!6235 = !DILocation(line: 649, column: 215, scope: !6122)
!6236 = !DILocation(line: 649, column: 213, scope: !6122)
!6237 = !DILocation(line: 649, column: 202, scope: !6122)
!6238 = !DILocation(line: 649, column: 235, scope: !6122)
!6239 = !DILocation(line: 649, column: 233, scope: !6122)
!6240 = !DILocation(line: 649, column: 222, scope: !6122)
!6241 = !DILocation(line: 649, column: 219, scope: !6122)
!6242 = !DILocation(line: 649, column: 153, scope: !6122)
!6243 = !DILocation(line: 649, column: 259, scope: !6131)
!6244 = !DILocation(line: 649, column: 257, scope: !6131)
!6245 = !DILocation(line: 649, column: 246, scope: !6131)
!6246 = !DILocation(line: 649, column: 279, scope: !6131)
!6247 = !DILocation(line: 649, column: 277, scope: !6131)
!6248 = !DILocation(line: 649, column: 266, scope: !6131)
!6249 = !DILocation(line: 649, column: 263, scope: !6131)
!6250 = !DILocation(line: 649, column: 243, scope: !6131)
!6251 = !DILocation(line: 649, column: 153, scope: !6131)
!6252 = !DILocation(line: 649, column: 153, scope: !6141)
!6253 = !DILocation(line: 649, column: 150, scope: !6141)
!6254 = !DILocation(line: 649, column: 13, scope: !6141)
!6255 = !DILocation(line: 650, column: 32, scope: !5867)
!6256 = !DILocation(line: 650, column: 30, scope: !5867)
!6257 = !DILocation(line: 650, column: 19, scope: !5867)
!6258 = !DILocation(line: 650, column: 52, scope: !5867)
!6259 = !DILocation(line: 650, column: 50, scope: !5867)
!6260 = !DILocation(line: 650, column: 39, scope: !5867)
!6261 = !DILocation(line: 650, column: 36, scope: !5867)
!6262 = !DILocation(line: 650, column: 57, scope: !5867)
!6263 = !DILocation(line: 650, column: 17, scope: !5867)
!6264 = !DILocation(line: 650, column: 79, scope: !6092)
!6265 = !DILocation(line: 650, column: 77, scope: !6092)
!6266 = !DILocation(line: 650, column: 66, scope: !6092)
!6267 = !DILocation(line: 650, column: 99, scope: !6092)
!6268 = !DILocation(line: 650, column: 97, scope: !6092)
!6269 = !DILocation(line: 650, column: 86, scope: !6092)
!6270 = !DILocation(line: 650, column: 83, scope: !6092)
!6271 = !DILocation(line: 650, column: 17, scope: !6092)
!6272 = !DILocation(line: 650, column: 123, scope: !6101)
!6273 = !DILocation(line: 650, column: 121, scope: !6101)
!6274 = !DILocation(line: 650, column: 110, scope: !6101)
!6275 = !DILocation(line: 650, column: 143, scope: !6101)
!6276 = !DILocation(line: 650, column: 141, scope: !6101)
!6277 = !DILocation(line: 650, column: 130, scope: !6101)
!6278 = !DILocation(line: 650, column: 127, scope: !6101)
!6279 = !DILocation(line: 650, column: 107, scope: !6101)
!6280 = !DILocation(line: 650, column: 17, scope: !6101)
!6281 = !DILocation(line: 650, column: 17, scope: !6111)
!6282 = !DILocation(line: 650, column: 168, scope: !6111)
!6283 = !DILocation(line: 650, column: 166, scope: !6111)
!6284 = !DILocation(line: 650, column: 155, scope: !6111)
!6285 = !DILocation(line: 650, column: 188, scope: !6111)
!6286 = !DILocation(line: 650, column: 186, scope: !6111)
!6287 = !DILocation(line: 650, column: 175, scope: !6111)
!6288 = !DILocation(line: 650, column: 172, scope: !6111)
!6289 = !DILocation(line: 650, column: 193, scope: !6111)
!6290 = !DILocation(line: 650, column: 153, scope: !6111)
!6291 = !DILocation(line: 650, column: 215, scope: !6122)
!6292 = !DILocation(line: 650, column: 213, scope: !6122)
!6293 = !DILocation(line: 650, column: 202, scope: !6122)
!6294 = !DILocation(line: 650, column: 235, scope: !6122)
!6295 = !DILocation(line: 650, column: 233, scope: !6122)
!6296 = !DILocation(line: 650, column: 222, scope: !6122)
!6297 = !DILocation(line: 650, column: 219, scope: !6122)
!6298 = !DILocation(line: 650, column: 153, scope: !6122)
!6299 = !DILocation(line: 650, column: 259, scope: !6131)
!6300 = !DILocation(line: 650, column: 257, scope: !6131)
!6301 = !DILocation(line: 650, column: 246, scope: !6131)
!6302 = !DILocation(line: 650, column: 279, scope: !6131)
!6303 = !DILocation(line: 650, column: 277, scope: !6131)
!6304 = !DILocation(line: 650, column: 266, scope: !6131)
!6305 = !DILocation(line: 650, column: 263, scope: !6131)
!6306 = !DILocation(line: 650, column: 243, scope: !6131)
!6307 = !DILocation(line: 650, column: 153, scope: !6131)
!6308 = !DILocation(line: 650, column: 153, scope: !6141)
!6309 = !DILocation(line: 650, column: 150, scope: !6141)
!6310 = !DILocation(line: 650, column: 13, scope: !6141)
!6311 = !DILocation(line: 646, column: 13, scope: !5867)
!6312 = !DILocation(line: 651, column: 5, scope: !5867)
!6313 = !DILocation(line: 635, column: 25, scope: !6314)
!6314 = !DILexicalBlockFile(scope: !5862, file: !941, discriminator: 2)
!6315 = !DILocation(line: 635, column: 5, scope: !6314)
!6316 = distinct !{!6316, !6317}
!6317 = !DILocation(line: 635, column: 5, scope: !5433)
!6318 = !DILocation(line: 653, column: 14, scope: !5433)
!6319 = !DILocation(line: 653, column: 28, scope: !5433)
!6320 = !DILocation(line: 653, column: 26, scope: !5433)
!6321 = !DILocation(line: 653, column: 41, scope: !5433)
!6322 = !DILocation(line: 653, column: 13, scope: !5433)
!6323 = !DILocation(line: 653, column: 49, scope: !6324)
!6324 = !DILexicalBlockFile(scope: !5433, file: !941, discriminator: 1)
!6325 = !DILocation(line: 653, column: 63, scope: !6324)
!6326 = !DILocation(line: 653, column: 61, scope: !6324)
!6327 = !DILocation(line: 653, column: 13, scope: !6324)
!6328 = !DILocation(line: 653, column: 81, scope: !6329)
!6329 = !DILexicalBlockFile(scope: !5433, file: !941, discriminator: 2)
!6330 = !DILocation(line: 653, column: 95, scope: !6329)
!6331 = !DILocation(line: 653, column: 93, scope: !6329)
!6332 = !DILocation(line: 653, column: 79, scope: !6329)
!6333 = !DILocation(line: 653, column: 13, scope: !6329)
!6334 = !DILocation(line: 653, column: 13, scope: !6335)
!6335 = !DILexicalBlockFile(scope: !5433, file: !941, discriminator: 3)
!6336 = !DILocation(line: 653, column: 9, scope: !6335)
!6337 = !DILocation(line: 655, column: 12, scope: !5433)
!6338 = !DILocation(line: 655, column: 5, scope: !5433)
!6339 = distinct !DISubprogram(name: "dct_sad16_c", scope: !941, file: !941, line: 1005, type: !2756, isLocal: true, isDefinition: true, scopeLine: 1005, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!6340 = !DILocalVariable(name: "s", arg: 1, scope: !6339, file: !941, line: 1005, type: !2758)
!6341 = !DILocation(line: 1005, column: 40, scope: !6339)
!6342 = !DILocalVariable(name: "dst", arg: 2, scope: !6339, file: !941, line: 1005, type: !1167)
!6343 = !DILocation(line: 1005, column: 52, scope: !6339)
!6344 = !DILocalVariable(name: "src", arg: 3, scope: !6339, file: !941, line: 1005, type: !1167)
!6345 = !DILocation(line: 1005, column: 66, scope: !6339)
!6346 = !DILocalVariable(name: "stride", arg: 4, scope: !6339, file: !941, line: 1005, type: !1792)
!6347 = !DILocation(line: 1005, column: 81, scope: !6339)
!6348 = !DILocalVariable(name: "h", arg: 5, scope: !6339, file: !941, line: 1005, type: !952)
!6349 = !DILocation(line: 1005, column: 93, scope: !6339)
!6350 = !DILocalVariable(name: "score", scope: !6339, file: !941, line: 1005, type: !952)
!6351 = !DILocation(line: 1005, column: 102, scope: !6339)
!6352 = !DILocation(line: 1005, column: 135, scope: !6339)
!6353 = !DILocation(line: 1005, column: 138, scope: !6339)
!6354 = !DILocation(line: 1005, column: 143, scope: !6339)
!6355 = !DILocation(line: 1005, column: 148, scope: !6339)
!6356 = !DILocation(line: 1005, column: 122, scope: !6339)
!6357 = !DILocation(line: 1005, column: 119, scope: !6339)
!6358 = !DILocation(line: 1005, column: 182, scope: !6339)
!6359 = !DILocation(line: 1005, column: 185, scope: !6339)
!6360 = !DILocation(line: 1005, column: 189, scope: !6339)
!6361 = !DILocation(line: 1005, column: 194, scope: !6339)
!6362 = !DILocation(line: 1005, column: 198, scope: !6339)
!6363 = !DILocation(line: 1005, column: 203, scope: !6339)
!6364 = !DILocation(line: 1005, column: 169, scope: !6365)
!6365 = !DILexicalBlockFile(scope: !6339, file: !941, discriminator: 3)
!6366 = !DILocation(line: 1005, column: 166, scope: !6339)
!6367 = !DILocation(line: 1005, column: 219, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6339, file: !941, line: 1005, column: 219)
!6369 = !DILocation(line: 1005, column: 221, scope: !6368)
!6370 = !DILocation(line: 1005, column: 219, scope: !6339)
!6371 = !DILocation(line: 1005, column: 241, scope: !6372)
!6372 = !DILexicalBlockFile(scope: !6373, file: !941, discriminator: 1)
!6373 = distinct !DILexicalBlock(scope: !6368, file: !941, line: 1005, column: 228)
!6374 = !DILocation(line: 1005, column: 239, scope: !6372)
!6375 = !DILocation(line: 1005, column: 234, scope: !6372)
!6376 = !DILocation(line: 1005, column: 260, scope: !6372)
!6377 = !DILocation(line: 1005, column: 258, scope: !6372)
!6378 = !DILocation(line: 1005, column: 253, scope: !6372)
!6379 = !DILocation(line: 1005, column: 290, scope: !6372)
!6380 = !DILocation(line: 1005, column: 293, scope: !6372)
!6381 = !DILocation(line: 1005, column: 298, scope: !6372)
!6382 = !DILocation(line: 1005, column: 303, scope: !6372)
!6383 = !DILocation(line: 1005, column: 277, scope: !6372)
!6384 = !DILocation(line: 1005, column: 274, scope: !6372)
!6385 = !DILocation(line: 1005, column: 337, scope: !6372)
!6386 = !DILocation(line: 1005, column: 340, scope: !6372)
!6387 = !DILocation(line: 1005, column: 344, scope: !6372)
!6388 = !DILocation(line: 1005, column: 349, scope: !6372)
!6389 = !DILocation(line: 1005, column: 353, scope: !6372)
!6390 = !DILocation(line: 1005, column: 358, scope: !6372)
!6391 = !DILocation(line: 1005, column: 324, scope: !6392)
!6392 = !DILexicalBlockFile(scope: !6372, file: !941, discriminator: 4)
!6393 = !DILocation(line: 1005, column: 321, scope: !6372)
!6394 = !DILocation(line: 1005, column: 370, scope: !6372)
!6395 = !DILocation(line: 1005, column: 379, scope: !6396)
!6396 = !DILexicalBlockFile(scope: !6339, file: !941, discriminator: 2)
!6397 = !DILocation(line: 1005, column: 372, scope: !6396)
!6398 = distinct !DISubprogram(name: "dct_sad8x8_c", scope: !941, file: !941, line: 658, type: !2756, isLocal: true, isDefinition: true, scopeLine: 660, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!6399 = !DILocalVariable(name: "s", arg: 1, scope: !6398, file: !941, line: 658, type: !2758)
!6400 = !DILocation(line: 658, column: 41, scope: !6398)
!6401 = !DILocalVariable(name: "src1", arg: 2, scope: !6398, file: !941, line: 658, type: !1167)
!6402 = !DILocation(line: 658, column: 53, scope: !6398)
!6403 = !DILocalVariable(name: "src2", arg: 3, scope: !6398, file: !941, line: 659, type: !1167)
!6404 = !DILocation(line: 659, column: 34, scope: !6398)
!6405 = !DILocalVariable(name: "stride", arg: 4, scope: !6398, file: !941, line: 659, type: !1792)
!6406 = !DILocation(line: 659, column: 50, scope: !6398)
!6407 = !DILocalVariable(name: "h", arg: 5, scope: !6398, file: !941, line: 659, type: !952)
!6408 = !DILocation(line: 659, column: 62, scope: !6398)
!6409 = !DILocalVariable(name: "la_temp", scope: !6398, file: !941, line: 661, type: !2470)
!6410 = !DILocation(line: 661, column: 44, scope: !6398)
!6411 = !DILocalVariable(name: "temp", scope: !6398, file: !941, line: 661, type: !969)
!6412 = !DILocation(line: 661, column: 69, scope: !6398)
!6413 = !DILocation(line: 661, column: 77, scope: !6398)
!6414 = !DILocation(line: 665, column: 5, scope: !6398)
!6415 = !DILocation(line: 665, column: 8, scope: !6398)
!6416 = !DILocation(line: 665, column: 13, scope: !6398)
!6417 = !DILocation(line: 665, column: 35, scope: !6398)
!6418 = !DILocation(line: 665, column: 41, scope: !6398)
!6419 = !DILocation(line: 665, column: 47, scope: !6398)
!6420 = !DILocation(line: 665, column: 53, scope: !6398)
!6421 = !DILocation(line: 666, column: 5, scope: !6398)
!6422 = !DILocation(line: 666, column: 8, scope: !6398)
!6423 = !DILocation(line: 666, column: 13, scope: !6398)
!6424 = !DILocation(line: 666, column: 18, scope: !6398)
!6425 = !DILocation(line: 667, column: 12, scope: !6398)
!6426 = !DILocation(line: 667, column: 15, scope: !6398)
!6427 = !DILocation(line: 667, column: 20, scope: !6398)
!6428 = !DILocation(line: 667, column: 36, scope: !6398)
!6429 = !DILocation(line: 667, column: 5, scope: !6398)
!6430 = distinct !DISubprogram(name: "dct_max16_c", scope: !941, file: !941, line: 1009, type: !2756, isLocal: true, isDefinition: true, scopeLine: 1009, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!6431 = !DILocalVariable(name: "s", arg: 1, scope: !6430, file: !941, line: 1009, type: !2758)
!6432 = !DILocation(line: 1009, column: 40, scope: !6430)
!6433 = !DILocalVariable(name: "dst", arg: 2, scope: !6430, file: !941, line: 1009, type: !1167)
!6434 = !DILocation(line: 1009, column: 52, scope: !6430)
!6435 = !DILocalVariable(name: "src", arg: 3, scope: !6430, file: !941, line: 1009, type: !1167)
!6436 = !DILocation(line: 1009, column: 66, scope: !6430)
!6437 = !DILocalVariable(name: "stride", arg: 4, scope: !6430, file: !941, line: 1009, type: !1792)
!6438 = !DILocation(line: 1009, column: 81, scope: !6430)
!6439 = !DILocalVariable(name: "h", arg: 5, scope: !6430, file: !941, line: 1009, type: !952)
!6440 = !DILocation(line: 1009, column: 93, scope: !6430)
!6441 = !DILocalVariable(name: "score", scope: !6430, file: !941, line: 1009, type: !952)
!6442 = !DILocation(line: 1009, column: 102, scope: !6430)
!6443 = !DILocation(line: 1009, column: 135, scope: !6430)
!6444 = !DILocation(line: 1009, column: 138, scope: !6430)
!6445 = !DILocation(line: 1009, column: 143, scope: !6430)
!6446 = !DILocation(line: 1009, column: 148, scope: !6430)
!6447 = !DILocation(line: 1009, column: 122, scope: !6430)
!6448 = !DILocation(line: 1009, column: 119, scope: !6430)
!6449 = !DILocation(line: 1009, column: 182, scope: !6430)
!6450 = !DILocation(line: 1009, column: 185, scope: !6430)
!6451 = !DILocation(line: 1009, column: 189, scope: !6430)
!6452 = !DILocation(line: 1009, column: 194, scope: !6430)
!6453 = !DILocation(line: 1009, column: 198, scope: !6430)
!6454 = !DILocation(line: 1009, column: 203, scope: !6430)
!6455 = !DILocation(line: 1009, column: 169, scope: !6456)
!6456 = !DILexicalBlockFile(scope: !6430, file: !941, discriminator: 3)
!6457 = !DILocation(line: 1009, column: 166, scope: !6430)
!6458 = !DILocation(line: 1009, column: 219, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6430, file: !941, line: 1009, column: 219)
!6460 = !DILocation(line: 1009, column: 221, scope: !6459)
!6461 = !DILocation(line: 1009, column: 219, scope: !6430)
!6462 = !DILocation(line: 1009, column: 241, scope: !6463)
!6463 = !DILexicalBlockFile(scope: !6464, file: !941, discriminator: 1)
!6464 = distinct !DILexicalBlock(scope: !6459, file: !941, line: 1009, column: 228)
!6465 = !DILocation(line: 1009, column: 239, scope: !6463)
!6466 = !DILocation(line: 1009, column: 234, scope: !6463)
!6467 = !DILocation(line: 1009, column: 260, scope: !6463)
!6468 = !DILocation(line: 1009, column: 258, scope: !6463)
!6469 = !DILocation(line: 1009, column: 253, scope: !6463)
!6470 = !DILocation(line: 1009, column: 290, scope: !6463)
!6471 = !DILocation(line: 1009, column: 293, scope: !6463)
!6472 = !DILocation(line: 1009, column: 298, scope: !6463)
!6473 = !DILocation(line: 1009, column: 303, scope: !6463)
!6474 = !DILocation(line: 1009, column: 277, scope: !6463)
!6475 = !DILocation(line: 1009, column: 274, scope: !6463)
!6476 = !DILocation(line: 1009, column: 337, scope: !6463)
!6477 = !DILocation(line: 1009, column: 340, scope: !6463)
!6478 = !DILocation(line: 1009, column: 344, scope: !6463)
!6479 = !DILocation(line: 1009, column: 349, scope: !6463)
!6480 = !DILocation(line: 1009, column: 353, scope: !6463)
!6481 = !DILocation(line: 1009, column: 358, scope: !6463)
!6482 = !DILocation(line: 1009, column: 324, scope: !6483)
!6483 = !DILexicalBlockFile(scope: !6463, file: !941, discriminator: 4)
!6484 = !DILocation(line: 1009, column: 321, scope: !6463)
!6485 = !DILocation(line: 1009, column: 370, scope: !6463)
!6486 = !DILocation(line: 1009, column: 379, scope: !6487)
!6487 = !DILexicalBlockFile(scope: !6430, file: !941, discriminator: 2)
!6488 = !DILocation(line: 1009, column: 372, scope: !6487)
!6489 = distinct !DISubprogram(name: "dct_max8x8_c", scope: !941, file: !941, line: 724, type: !2756, isLocal: true, isDefinition: true, scopeLine: 726, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!6490 = !DILocalVariable(name: "s", arg: 1, scope: !6489, file: !941, line: 724, type: !2758)
!6491 = !DILocation(line: 724, column: 41, scope: !6489)
!6492 = !DILocalVariable(name: "src1", arg: 2, scope: !6489, file: !941, line: 724, type: !1167)
!6493 = !DILocation(line: 724, column: 53, scope: !6489)
!6494 = !DILocalVariable(name: "src2", arg: 3, scope: !6489, file: !941, line: 725, type: !1167)
!6495 = !DILocation(line: 725, column: 34, scope: !6489)
!6496 = !DILocalVariable(name: "stride", arg: 4, scope: !6489, file: !941, line: 725, type: !1792)
!6497 = !DILocation(line: 725, column: 50, scope: !6489)
!6498 = !DILocalVariable(name: "h", arg: 5, scope: !6489, file: !941, line: 725, type: !952)
!6499 = !DILocation(line: 725, column: 62, scope: !6489)
!6500 = !DILocalVariable(name: "la_temp", scope: !6489, file: !941, line: 727, type: !2470)
!6501 = !DILocation(line: 727, column: 44, scope: !6489)
!6502 = !DILocalVariable(name: "temp", scope: !6489, file: !941, line: 727, type: !969)
!6503 = !DILocation(line: 727, column: 69, scope: !6489)
!6504 = !DILocation(line: 727, column: 77, scope: !6489)
!6505 = !DILocalVariable(name: "sum", scope: !6489, file: !941, line: 728, type: !952)
!6506 = !DILocation(line: 728, column: 9, scope: !6489)
!6507 = !DILocalVariable(name: "i", scope: !6489, file: !941, line: 728, type: !952)
!6508 = !DILocation(line: 728, column: 18, scope: !6489)
!6509 = !DILocation(line: 732, column: 5, scope: !6489)
!6510 = !DILocation(line: 732, column: 8, scope: !6489)
!6511 = !DILocation(line: 732, column: 13, scope: !6489)
!6512 = !DILocation(line: 732, column: 35, scope: !6489)
!6513 = !DILocation(line: 732, column: 41, scope: !6489)
!6514 = !DILocation(line: 732, column: 47, scope: !6489)
!6515 = !DILocation(line: 732, column: 53, scope: !6489)
!6516 = !DILocation(line: 733, column: 5, scope: !6489)
!6517 = !DILocation(line: 733, column: 8, scope: !6489)
!6518 = !DILocation(line: 733, column: 13, scope: !6489)
!6519 = !DILocation(line: 733, column: 18, scope: !6489)
!6520 = !DILocation(line: 735, column: 12, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6489, file: !941, line: 735, column: 5)
!6522 = !DILocation(line: 735, column: 10, scope: !6521)
!6523 = !DILocation(line: 735, column: 17, scope: !6524)
!6524 = !DILexicalBlockFile(scope: !6525, file: !941, discriminator: 1)
!6525 = distinct !DILexicalBlock(scope: !6521, file: !941, line: 735, column: 5)
!6526 = !DILocation(line: 735, column: 19, scope: !6524)
!6527 = !DILocation(line: 735, column: 5, scope: !6524)
!6528 = !DILocation(line: 736, column: 17, scope: !6525)
!6529 = !DILocation(line: 736, column: 32, scope: !6525)
!6530 = !DILocation(line: 736, column: 27, scope: !6525)
!6531 = !DILocation(line: 736, column: 26, scope: !6525)
!6532 = !DILocation(line: 736, column: 36, scope: !6525)
!6533 = !DILocation(line: 736, column: 49, scope: !6524)
!6534 = !DILocation(line: 736, column: 44, scope: !6524)
!6535 = !DILocation(line: 736, column: 43, scope: !6524)
!6536 = !DILocation(line: 736, column: 26, scope: !6524)
!6537 = !DILocation(line: 736, column: 63, scope: !6538)
!6538 = !DILexicalBlockFile(scope: !6525, file: !941, discriminator: 2)
!6539 = !DILocation(line: 736, column: 58, scope: !6538)
!6540 = !DILocation(line: 736, column: 57, scope: !6538)
!6541 = !DILocation(line: 736, column: 56, scope: !6538)
!6542 = !DILocation(line: 736, column: 26, scope: !6538)
!6543 = !DILocation(line: 736, column: 26, scope: !6544)
!6544 = !DILexicalBlockFile(scope: !6525, file: !941, discriminator: 3)
!6545 = !DILocation(line: 736, column: 22, scope: !6544)
!6546 = !DILocation(line: 736, column: 16, scope: !6544)
!6547 = !DILocation(line: 736, column: 73, scope: !6548)
!6548 = !DILexicalBlockFile(scope: !6525, file: !941, discriminator: 4)
!6549 = !DILocation(line: 736, column: 16, scope: !6548)
!6550 = !DILocation(line: 736, column: 88, scope: !6551)
!6551 = !DILexicalBlockFile(scope: !6525, file: !941, discriminator: 5)
!6552 = !DILocation(line: 736, column: 83, scope: !6551)
!6553 = !DILocation(line: 736, column: 82, scope: !6551)
!6554 = !DILocation(line: 736, column: 92, scope: !6551)
!6555 = !DILocation(line: 736, column: 105, scope: !6556)
!6556 = !DILexicalBlockFile(scope: !6525, file: !941, discriminator: 6)
!6557 = !DILocation(line: 736, column: 100, scope: !6556)
!6558 = !DILocation(line: 736, column: 99, scope: !6556)
!6559 = !DILocation(line: 736, column: 82, scope: !6556)
!6560 = !DILocation(line: 736, column: 119, scope: !6561)
!6561 = !DILexicalBlockFile(scope: !6525, file: !941, discriminator: 7)
!6562 = !DILocation(line: 736, column: 114, scope: !6561)
!6563 = !DILocation(line: 736, column: 113, scope: !6561)
!6564 = !DILocation(line: 736, column: 112, scope: !6561)
!6565 = !DILocation(line: 736, column: 82, scope: !6561)
!6566 = !DILocation(line: 736, column: 82, scope: !6567)
!6567 = !DILexicalBlockFile(scope: !6525, file: !941, discriminator: 8)
!6568 = !DILocation(line: 736, column: 16, scope: !6567)
!6569 = !DILocation(line: 736, column: 16, scope: !6570)
!6570 = !DILexicalBlockFile(scope: !6525, file: !941, discriminator: 9)
!6571 = !DILocation(line: 736, column: 13, scope: !6570)
!6572 = !DILocation(line: 736, column: 9, scope: !6570)
!6573 = !DILocation(line: 735, column: 26, scope: !6538)
!6574 = !DILocation(line: 735, column: 5, scope: !6538)
!6575 = distinct !{!6575, !6576}
!6576 = !DILocation(line: 735, column: 5, scope: !6489)
!6577 = !DILocation(line: 738, column: 12, scope: !6489)
!6578 = !DILocation(line: 738, column: 5, scope: !6489)
!6579 = distinct !DISubprogram(name: "sse16_c", scope: !941, file: !941, line: 106, type: !2756, isLocal: true, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!6580 = !DILocalVariable(name: "v", arg: 1, scope: !6579, file: !941, line: 106, type: !2758)
!6581 = !DILocation(line: 106, column: 36, scope: !6579)
!6582 = !DILocalVariable(name: "pix1", arg: 2, scope: !6579, file: !941, line: 106, type: !1167)
!6583 = !DILocation(line: 106, column: 48, scope: !6579)
!6584 = !DILocalVariable(name: "pix2", arg: 3, scope: !6579, file: !941, line: 106, type: !1167)
!6585 = !DILocation(line: 106, column: 63, scope: !6579)
!6586 = !DILocalVariable(name: "stride", arg: 4, scope: !6579, file: !941, line: 107, type: !1792)
!6587 = !DILocation(line: 107, column: 30, scope: !6579)
!6588 = !DILocalVariable(name: "h", arg: 5, scope: !6579, file: !941, line: 107, type: !952)
!6589 = !DILocation(line: 107, column: 42, scope: !6579)
!6590 = !DILocalVariable(name: "s", scope: !6579, file: !941, line: 109, type: !952)
!6591 = !DILocation(line: 109, column: 9, scope: !6579)
!6592 = !DILocalVariable(name: "i", scope: !6579, file: !941, line: 109, type: !952)
!6593 = !DILocation(line: 109, column: 16, scope: !6579)
!6594 = !DILocalVariable(name: "sq", scope: !6579, file: !941, line: 110, type: !6595)
!6595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64, align: 64)
!6596 = !DILocation(line: 110, column: 21, scope: !6579)
!6597 = !DILocation(line: 112, column: 12, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6579, file: !941, line: 112, column: 5)
!6599 = !DILocation(line: 112, column: 10, scope: !6598)
!6600 = !DILocation(line: 112, column: 17, scope: !6601)
!6601 = !DILexicalBlockFile(scope: !6602, file: !941, discriminator: 1)
!6602 = distinct !DILexicalBlock(scope: !6598, file: !941, line: 112, column: 5)
!6603 = !DILocation(line: 112, column: 21, scope: !6601)
!6604 = !DILocation(line: 112, column: 19, scope: !6601)
!6605 = !DILocation(line: 112, column: 5, scope: !6601)
!6606 = !DILocation(line: 113, column: 17, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6602, file: !941, line: 112, column: 29)
!6608 = !DILocation(line: 113, column: 27, scope: !6607)
!6609 = !DILocation(line: 113, column: 25, scope: !6607)
!6610 = !DILocation(line: 113, column: 14, scope: !6607)
!6611 = !DILocation(line: 113, column: 11, scope: !6607)
!6612 = !DILocation(line: 114, column: 17, scope: !6607)
!6613 = !DILocation(line: 114, column: 27, scope: !6607)
!6614 = !DILocation(line: 114, column: 25, scope: !6607)
!6615 = !DILocation(line: 114, column: 14, scope: !6607)
!6616 = !DILocation(line: 114, column: 11, scope: !6607)
!6617 = !DILocation(line: 115, column: 17, scope: !6607)
!6618 = !DILocation(line: 115, column: 27, scope: !6607)
!6619 = !DILocation(line: 115, column: 25, scope: !6607)
!6620 = !DILocation(line: 115, column: 14, scope: !6607)
!6621 = !DILocation(line: 115, column: 11, scope: !6607)
!6622 = !DILocation(line: 116, column: 17, scope: !6607)
!6623 = !DILocation(line: 116, column: 27, scope: !6607)
!6624 = !DILocation(line: 116, column: 25, scope: !6607)
!6625 = !DILocation(line: 116, column: 14, scope: !6607)
!6626 = !DILocation(line: 116, column: 11, scope: !6607)
!6627 = !DILocation(line: 117, column: 17, scope: !6607)
!6628 = !DILocation(line: 117, column: 27, scope: !6607)
!6629 = !DILocation(line: 117, column: 25, scope: !6607)
!6630 = !DILocation(line: 117, column: 14, scope: !6607)
!6631 = !DILocation(line: 117, column: 11, scope: !6607)
!6632 = !DILocation(line: 118, column: 17, scope: !6607)
!6633 = !DILocation(line: 118, column: 27, scope: !6607)
!6634 = !DILocation(line: 118, column: 25, scope: !6607)
!6635 = !DILocation(line: 118, column: 14, scope: !6607)
!6636 = !DILocation(line: 118, column: 11, scope: !6607)
!6637 = !DILocation(line: 119, column: 17, scope: !6607)
!6638 = !DILocation(line: 119, column: 27, scope: !6607)
!6639 = !DILocation(line: 119, column: 25, scope: !6607)
!6640 = !DILocation(line: 119, column: 14, scope: !6607)
!6641 = !DILocation(line: 119, column: 11, scope: !6607)
!6642 = !DILocation(line: 120, column: 17, scope: !6607)
!6643 = !DILocation(line: 120, column: 27, scope: !6607)
!6644 = !DILocation(line: 120, column: 25, scope: !6607)
!6645 = !DILocation(line: 120, column: 14, scope: !6607)
!6646 = !DILocation(line: 120, column: 11, scope: !6607)
!6647 = !DILocation(line: 121, column: 17, scope: !6607)
!6648 = !DILocation(line: 121, column: 27, scope: !6607)
!6649 = !DILocation(line: 121, column: 25, scope: !6607)
!6650 = !DILocation(line: 121, column: 14, scope: !6607)
!6651 = !DILocation(line: 121, column: 11, scope: !6607)
!6652 = !DILocation(line: 122, column: 17, scope: !6607)
!6653 = !DILocation(line: 122, column: 27, scope: !6607)
!6654 = !DILocation(line: 122, column: 25, scope: !6607)
!6655 = !DILocation(line: 122, column: 14, scope: !6607)
!6656 = !DILocation(line: 122, column: 11, scope: !6607)
!6657 = !DILocation(line: 123, column: 17, scope: !6607)
!6658 = !DILocation(line: 123, column: 28, scope: !6607)
!6659 = !DILocation(line: 123, column: 26, scope: !6607)
!6660 = !DILocation(line: 123, column: 14, scope: !6607)
!6661 = !DILocation(line: 123, column: 11, scope: !6607)
!6662 = !DILocation(line: 124, column: 17, scope: !6607)
!6663 = !DILocation(line: 124, column: 28, scope: !6607)
!6664 = !DILocation(line: 124, column: 26, scope: !6607)
!6665 = !DILocation(line: 124, column: 14, scope: !6607)
!6666 = !DILocation(line: 124, column: 11, scope: !6607)
!6667 = !DILocation(line: 125, column: 17, scope: !6607)
!6668 = !DILocation(line: 125, column: 28, scope: !6607)
!6669 = !DILocation(line: 125, column: 26, scope: !6607)
!6670 = !DILocation(line: 125, column: 14, scope: !6607)
!6671 = !DILocation(line: 125, column: 11, scope: !6607)
!6672 = !DILocation(line: 126, column: 17, scope: !6607)
!6673 = !DILocation(line: 126, column: 28, scope: !6607)
!6674 = !DILocation(line: 126, column: 26, scope: !6607)
!6675 = !DILocation(line: 126, column: 14, scope: !6607)
!6676 = !DILocation(line: 126, column: 11, scope: !6607)
!6677 = !DILocation(line: 127, column: 17, scope: !6607)
!6678 = !DILocation(line: 127, column: 28, scope: !6607)
!6679 = !DILocation(line: 127, column: 26, scope: !6607)
!6680 = !DILocation(line: 127, column: 14, scope: !6607)
!6681 = !DILocation(line: 127, column: 11, scope: !6607)
!6682 = !DILocation(line: 128, column: 17, scope: !6607)
!6683 = !DILocation(line: 128, column: 28, scope: !6607)
!6684 = !DILocation(line: 128, column: 26, scope: !6607)
!6685 = !DILocation(line: 128, column: 14, scope: !6607)
!6686 = !DILocation(line: 128, column: 11, scope: !6607)
!6687 = !DILocation(line: 130, column: 17, scope: !6607)
!6688 = !DILocation(line: 130, column: 14, scope: !6607)
!6689 = !DILocation(line: 131, column: 17, scope: !6607)
!6690 = !DILocation(line: 131, column: 14, scope: !6607)
!6691 = !DILocation(line: 132, column: 5, scope: !6607)
!6692 = !DILocation(line: 112, column: 25, scope: !6693)
!6693 = !DILexicalBlockFile(scope: !6602, file: !941, discriminator: 2)
!6694 = !DILocation(line: 112, column: 5, scope: !6693)
!6695 = distinct !{!6695, !6696}
!6696 = !DILocation(line: 112, column: 5, scope: !6579)
!6697 = !DILocation(line: 133, column: 12, scope: !6579)
!6698 = !DILocation(line: 133, column: 5, scope: !6579)
!6699 = distinct !DISubprogram(name: "sse8_c", scope: !941, file: !941, line: 85, type: !2756, isLocal: true, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!6700 = !DILocalVariable(name: "v", arg: 1, scope: !6699, file: !941, line: 85, type: !2758)
!6701 = !DILocation(line: 85, column: 35, scope: !6699)
!6702 = !DILocalVariable(name: "pix1", arg: 2, scope: !6699, file: !941, line: 85, type: !1167)
!6703 = !DILocation(line: 85, column: 47, scope: !6699)
!6704 = !DILocalVariable(name: "pix2", arg: 3, scope: !6699, file: !941, line: 85, type: !1167)
!6705 = !DILocation(line: 85, column: 62, scope: !6699)
!6706 = !DILocalVariable(name: "stride", arg: 4, scope: !6699, file: !941, line: 86, type: !1792)
!6707 = !DILocation(line: 86, column: 29, scope: !6699)
!6708 = !DILocalVariable(name: "h", arg: 5, scope: !6699, file: !941, line: 86, type: !952)
!6709 = !DILocation(line: 86, column: 41, scope: !6699)
!6710 = !DILocalVariable(name: "s", scope: !6699, file: !941, line: 88, type: !952)
!6711 = !DILocation(line: 88, column: 9, scope: !6699)
!6712 = !DILocalVariable(name: "i", scope: !6699, file: !941, line: 88, type: !952)
!6713 = !DILocation(line: 88, column: 16, scope: !6699)
!6714 = !DILocalVariable(name: "sq", scope: !6699, file: !941, line: 89, type: !6595)
!6715 = !DILocation(line: 89, column: 21, scope: !6699)
!6716 = !DILocation(line: 91, column: 12, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6699, file: !941, line: 91, column: 5)
!6718 = !DILocation(line: 91, column: 10, scope: !6717)
!6719 = !DILocation(line: 91, column: 17, scope: !6720)
!6720 = !DILexicalBlockFile(scope: !6721, file: !941, discriminator: 1)
!6721 = distinct !DILexicalBlock(scope: !6717, file: !941, line: 91, column: 5)
!6722 = !DILocation(line: 91, column: 21, scope: !6720)
!6723 = !DILocation(line: 91, column: 19, scope: !6720)
!6724 = !DILocation(line: 91, column: 5, scope: !6720)
!6725 = !DILocation(line: 92, column: 17, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6721, file: !941, line: 91, column: 29)
!6727 = !DILocation(line: 92, column: 27, scope: !6726)
!6728 = !DILocation(line: 92, column: 25, scope: !6726)
!6729 = !DILocation(line: 92, column: 14, scope: !6726)
!6730 = !DILocation(line: 92, column: 11, scope: !6726)
!6731 = !DILocation(line: 93, column: 17, scope: !6726)
!6732 = !DILocation(line: 93, column: 27, scope: !6726)
!6733 = !DILocation(line: 93, column: 25, scope: !6726)
!6734 = !DILocation(line: 93, column: 14, scope: !6726)
!6735 = !DILocation(line: 93, column: 11, scope: !6726)
!6736 = !DILocation(line: 94, column: 17, scope: !6726)
!6737 = !DILocation(line: 94, column: 27, scope: !6726)
!6738 = !DILocation(line: 94, column: 25, scope: !6726)
!6739 = !DILocation(line: 94, column: 14, scope: !6726)
!6740 = !DILocation(line: 94, column: 11, scope: !6726)
!6741 = !DILocation(line: 95, column: 17, scope: !6726)
!6742 = !DILocation(line: 95, column: 27, scope: !6726)
!6743 = !DILocation(line: 95, column: 25, scope: !6726)
!6744 = !DILocation(line: 95, column: 14, scope: !6726)
!6745 = !DILocation(line: 95, column: 11, scope: !6726)
!6746 = !DILocation(line: 96, column: 17, scope: !6726)
!6747 = !DILocation(line: 96, column: 27, scope: !6726)
!6748 = !DILocation(line: 96, column: 25, scope: !6726)
!6749 = !DILocation(line: 96, column: 14, scope: !6726)
!6750 = !DILocation(line: 96, column: 11, scope: !6726)
!6751 = !DILocation(line: 97, column: 17, scope: !6726)
!6752 = !DILocation(line: 97, column: 27, scope: !6726)
!6753 = !DILocation(line: 97, column: 25, scope: !6726)
!6754 = !DILocation(line: 97, column: 14, scope: !6726)
!6755 = !DILocation(line: 97, column: 11, scope: !6726)
!6756 = !DILocation(line: 98, column: 17, scope: !6726)
!6757 = !DILocation(line: 98, column: 27, scope: !6726)
!6758 = !DILocation(line: 98, column: 25, scope: !6726)
!6759 = !DILocation(line: 98, column: 14, scope: !6726)
!6760 = !DILocation(line: 98, column: 11, scope: !6726)
!6761 = !DILocation(line: 99, column: 17, scope: !6726)
!6762 = !DILocation(line: 99, column: 27, scope: !6726)
!6763 = !DILocation(line: 99, column: 25, scope: !6726)
!6764 = !DILocation(line: 99, column: 14, scope: !6726)
!6765 = !DILocation(line: 99, column: 11, scope: !6726)
!6766 = !DILocation(line: 100, column: 17, scope: !6726)
!6767 = !DILocation(line: 100, column: 14, scope: !6726)
!6768 = !DILocation(line: 101, column: 17, scope: !6726)
!6769 = !DILocation(line: 101, column: 14, scope: !6726)
!6770 = !DILocation(line: 102, column: 5, scope: !6726)
!6771 = !DILocation(line: 91, column: 25, scope: !6772)
!6772 = !DILexicalBlockFile(scope: !6721, file: !941, discriminator: 2)
!6773 = !DILocation(line: 91, column: 5, scope: !6772)
!6774 = distinct !{!6774, !6775}
!6775 = !DILocation(line: 91, column: 5, scope: !6699)
!6776 = !DILocation(line: 103, column: 12, scope: !6699)
!6777 = !DILocation(line: 103, column: 5, scope: !6699)
!6778 = distinct !DISubprogram(name: "sse4_c", scope: !941, file: !941, line: 68, type: !2756, isLocal: true, isDefinition: true, scopeLine: 70, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!6779 = !DILocalVariable(name: "v", arg: 1, scope: !6778, file: !941, line: 68, type: !2758)
!6780 = !DILocation(line: 68, column: 35, scope: !6778)
!6781 = !DILocalVariable(name: "pix1", arg: 2, scope: !6778, file: !941, line: 68, type: !1167)
!6782 = !DILocation(line: 68, column: 47, scope: !6778)
!6783 = !DILocalVariable(name: "pix2", arg: 3, scope: !6778, file: !941, line: 68, type: !1167)
!6784 = !DILocation(line: 68, column: 62, scope: !6778)
!6785 = !DILocalVariable(name: "stride", arg: 4, scope: !6778, file: !941, line: 69, type: !1792)
!6786 = !DILocation(line: 69, column: 29, scope: !6778)
!6787 = !DILocalVariable(name: "h", arg: 5, scope: !6778, file: !941, line: 69, type: !952)
!6788 = !DILocation(line: 69, column: 41, scope: !6778)
!6789 = !DILocalVariable(name: "s", scope: !6778, file: !941, line: 71, type: !952)
!6790 = !DILocation(line: 71, column: 9, scope: !6778)
!6791 = !DILocalVariable(name: "i", scope: !6778, file: !941, line: 71, type: !952)
!6792 = !DILocation(line: 71, column: 16, scope: !6778)
!6793 = !DILocalVariable(name: "sq", scope: !6778, file: !941, line: 72, type: !6595)
!6794 = !DILocation(line: 72, column: 21, scope: !6778)
!6795 = !DILocation(line: 74, column: 12, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6778, file: !941, line: 74, column: 5)
!6797 = !DILocation(line: 74, column: 10, scope: !6796)
!6798 = !DILocation(line: 74, column: 17, scope: !6799)
!6799 = !DILexicalBlockFile(scope: !6800, file: !941, discriminator: 1)
!6800 = distinct !DILexicalBlock(scope: !6796, file: !941, line: 74, column: 5)
!6801 = !DILocation(line: 74, column: 21, scope: !6799)
!6802 = !DILocation(line: 74, column: 19, scope: !6799)
!6803 = !DILocation(line: 74, column: 5, scope: !6799)
!6804 = !DILocation(line: 75, column: 17, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6800, file: !941, line: 74, column: 29)
!6806 = !DILocation(line: 75, column: 27, scope: !6805)
!6807 = !DILocation(line: 75, column: 25, scope: !6805)
!6808 = !DILocation(line: 75, column: 14, scope: !6805)
!6809 = !DILocation(line: 75, column: 11, scope: !6805)
!6810 = !DILocation(line: 76, column: 17, scope: !6805)
!6811 = !DILocation(line: 76, column: 27, scope: !6805)
!6812 = !DILocation(line: 76, column: 25, scope: !6805)
!6813 = !DILocation(line: 76, column: 14, scope: !6805)
!6814 = !DILocation(line: 76, column: 11, scope: !6805)
!6815 = !DILocation(line: 77, column: 17, scope: !6805)
!6816 = !DILocation(line: 77, column: 27, scope: !6805)
!6817 = !DILocation(line: 77, column: 25, scope: !6805)
!6818 = !DILocation(line: 77, column: 14, scope: !6805)
!6819 = !DILocation(line: 77, column: 11, scope: !6805)
!6820 = !DILocation(line: 78, column: 17, scope: !6805)
!6821 = !DILocation(line: 78, column: 27, scope: !6805)
!6822 = !DILocation(line: 78, column: 25, scope: !6805)
!6823 = !DILocation(line: 78, column: 14, scope: !6805)
!6824 = !DILocation(line: 78, column: 11, scope: !6805)
!6825 = !DILocation(line: 79, column: 17, scope: !6805)
!6826 = !DILocation(line: 79, column: 14, scope: !6805)
!6827 = !DILocation(line: 80, column: 17, scope: !6805)
!6828 = !DILocation(line: 80, column: 14, scope: !6805)
!6829 = !DILocation(line: 81, column: 5, scope: !6805)
!6830 = !DILocation(line: 74, column: 25, scope: !6831)
!6831 = !DILexicalBlockFile(scope: !6800, file: !941, discriminator: 2)
!6832 = !DILocation(line: 74, column: 5, scope: !6831)
!6833 = distinct !{!6833, !6834}
!6834 = !DILocation(line: 74, column: 5, scope: !6778)
!6835 = !DILocation(line: 82, column: 12, scope: !6778)
!6836 = !DILocation(line: 82, column: 5, scope: !6778)
!6837 = distinct !DISubprogram(name: "quant_psnr16_c", scope: !941, file: !941, line: 1010, type: !2756, isLocal: true, isDefinition: true, scopeLine: 1010, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!6838 = !DILocalVariable(name: "s", arg: 1, scope: !6837, file: !941, line: 1010, type: !2758)
!6839 = !DILocation(line: 1010, column: 43, scope: !6837)
!6840 = !DILocalVariable(name: "dst", arg: 2, scope: !6837, file: !941, line: 1010, type: !1167)
!6841 = !DILocation(line: 1010, column: 55, scope: !6837)
!6842 = !DILocalVariable(name: "src", arg: 3, scope: !6837, file: !941, line: 1010, type: !1167)
!6843 = !DILocation(line: 1010, column: 69, scope: !6837)
!6844 = !DILocalVariable(name: "stride", arg: 4, scope: !6837, file: !941, line: 1010, type: !1792)
!6845 = !DILocation(line: 1010, column: 84, scope: !6837)
!6846 = !DILocalVariable(name: "h", arg: 5, scope: !6837, file: !941, line: 1010, type: !952)
!6847 = !DILocation(line: 1010, column: 96, scope: !6837)
!6848 = !DILocalVariable(name: "score", scope: !6837, file: !941, line: 1010, type: !952)
!6849 = !DILocation(line: 1010, column: 105, scope: !6837)
!6850 = !DILocation(line: 1010, column: 141, scope: !6837)
!6851 = !DILocation(line: 1010, column: 144, scope: !6837)
!6852 = !DILocation(line: 1010, column: 149, scope: !6837)
!6853 = !DILocation(line: 1010, column: 154, scope: !6837)
!6854 = !DILocation(line: 1010, column: 125, scope: !6837)
!6855 = !DILocation(line: 1010, column: 122, scope: !6837)
!6856 = !DILocation(line: 1010, column: 191, scope: !6837)
!6857 = !DILocation(line: 1010, column: 194, scope: !6837)
!6858 = !DILocation(line: 1010, column: 198, scope: !6837)
!6859 = !DILocation(line: 1010, column: 203, scope: !6837)
!6860 = !DILocation(line: 1010, column: 207, scope: !6837)
!6861 = !DILocation(line: 1010, column: 212, scope: !6837)
!6862 = !DILocation(line: 1010, column: 175, scope: !6863)
!6863 = !DILexicalBlockFile(scope: !6837, file: !941, discriminator: 3)
!6864 = !DILocation(line: 1010, column: 172, scope: !6837)
!6865 = !DILocation(line: 1010, column: 228, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6837, file: !941, line: 1010, column: 228)
!6867 = !DILocation(line: 1010, column: 230, scope: !6866)
!6868 = !DILocation(line: 1010, column: 228, scope: !6837)
!6869 = !DILocation(line: 1010, column: 250, scope: !6870)
!6870 = !DILexicalBlockFile(scope: !6871, file: !941, discriminator: 1)
!6871 = distinct !DILexicalBlock(scope: !6866, file: !941, line: 1010, column: 237)
!6872 = !DILocation(line: 1010, column: 248, scope: !6870)
!6873 = !DILocation(line: 1010, column: 243, scope: !6870)
!6874 = !DILocation(line: 1010, column: 269, scope: !6870)
!6875 = !DILocation(line: 1010, column: 267, scope: !6870)
!6876 = !DILocation(line: 1010, column: 262, scope: !6870)
!6877 = !DILocation(line: 1010, column: 302, scope: !6870)
!6878 = !DILocation(line: 1010, column: 305, scope: !6870)
!6879 = !DILocation(line: 1010, column: 310, scope: !6870)
!6880 = !DILocation(line: 1010, column: 315, scope: !6870)
!6881 = !DILocation(line: 1010, column: 286, scope: !6870)
!6882 = !DILocation(line: 1010, column: 283, scope: !6870)
!6883 = !DILocation(line: 1010, column: 352, scope: !6870)
!6884 = !DILocation(line: 1010, column: 355, scope: !6870)
!6885 = !DILocation(line: 1010, column: 359, scope: !6870)
!6886 = !DILocation(line: 1010, column: 364, scope: !6870)
!6887 = !DILocation(line: 1010, column: 368, scope: !6870)
!6888 = !DILocation(line: 1010, column: 373, scope: !6870)
!6889 = !DILocation(line: 1010, column: 336, scope: !6890)
!6890 = !DILexicalBlockFile(scope: !6870, file: !941, discriminator: 4)
!6891 = !DILocation(line: 1010, column: 333, scope: !6870)
!6892 = !DILocation(line: 1010, column: 385, scope: !6870)
!6893 = !DILocation(line: 1010, column: 394, scope: !6894)
!6894 = !DILexicalBlockFile(scope: !6837, file: !941, discriminator: 2)
!6895 = !DILocation(line: 1010, column: 387, scope: !6894)
!6896 = distinct !DISubprogram(name: "quant_psnr8x8_c", scope: !941, file: !941, line: 741, type: !2756, isLocal: true, isDefinition: true, scopeLine: 743, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!6897 = !DILocalVariable(name: "s", arg: 1, scope: !6896, file: !941, line: 741, type: !2758)
!6898 = !DILocation(line: 741, column: 44, scope: !6896)
!6899 = !DILocalVariable(name: "src1", arg: 2, scope: !6896, file: !941, line: 741, type: !1167)
!6900 = !DILocation(line: 741, column: 56, scope: !6896)
!6901 = !DILocalVariable(name: "src2", arg: 3, scope: !6896, file: !941, line: 742, type: !1167)
!6902 = !DILocation(line: 742, column: 37, scope: !6896)
!6903 = !DILocalVariable(name: "stride", arg: 4, scope: !6896, file: !941, line: 742, type: !1792)
!6904 = !DILocation(line: 742, column: 53, scope: !6896)
!6905 = !DILocalVariable(name: "h", arg: 5, scope: !6896, file: !941, line: 742, type: !952)
!6906 = !DILocation(line: 742, column: 65, scope: !6896)
!6907 = !DILocalVariable(name: "la_temp", scope: !6896, file: !941, line: 744, type: !6908)
!6908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 2048, align: 16, elements: !6909)
!6909 = !{!6910}
!6910 = !DISubrange(count: 128)
!6911 = !DILocation(line: 744, column: 44, scope: !6896)
!6912 = !DILocalVariable(name: "temp", scope: !6896, file: !941, line: 744, type: !969)
!6913 = !DILocation(line: 744, column: 73, scope: !6896)
!6914 = !DILocation(line: 744, column: 81, scope: !6896)
!6915 = !DILocalVariable(name: "bak", scope: !6896, file: !941, line: 745, type: !6916)
!6916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!6917 = !DILocation(line: 745, column: 20, scope: !6896)
!6918 = !DILocation(line: 745, column: 26, scope: !6896)
!6919 = !DILocation(line: 745, column: 31, scope: !6896)
!6920 = !DILocalVariable(name: "sum", scope: !6896, file: !941, line: 746, type: !952)
!6921 = !DILocation(line: 746, column: 9, scope: !6896)
!6922 = !DILocalVariable(name: "i", scope: !6896, file: !941, line: 746, type: !952)
!6923 = !DILocation(line: 746, column: 18, scope: !6896)
!6924 = !DILocation(line: 749, column: 5, scope: !6896)
!6925 = !DILocation(line: 749, column: 8, scope: !6896)
!6926 = !DILocation(line: 749, column: 17, scope: !6896)
!6927 = !DILocation(line: 751, column: 5, scope: !6896)
!6928 = !DILocation(line: 751, column: 8, scope: !6896)
!6929 = !DILocation(line: 751, column: 13, scope: !6896)
!6930 = !DILocation(line: 751, column: 35, scope: !6896)
!6931 = !DILocation(line: 751, column: 41, scope: !6896)
!6932 = !DILocation(line: 751, column: 47, scope: !6896)
!6933 = !DILocation(line: 751, column: 53, scope: !6896)
!6934 = !DILocation(line: 753, column: 12, scope: !6896)
!6935 = !DILocation(line: 753, column: 5, scope: !6896)
!6936 = !DILocation(line: 753, column: 17, scope: !6896)
!6937 = !DILocation(line: 756, column: 9, scope: !6896)
!6938 = !DILocation(line: 756, column: 12, scope: !6896)
!6939 = !DILocation(line: 756, column: 30, scope: !6896)
!6940 = !DILocation(line: 756, column: 33, scope: !6896)
!6941 = !DILocation(line: 756, column: 43, scope: !6896)
!6942 = !DILocation(line: 756, column: 46, scope: !6896)
!6943 = !DILocation(line: 755, column: 5, scope: !6896)
!6944 = !DILocation(line: 755, column: 8, scope: !6896)
!6945 = !DILocation(line: 755, column: 29, scope: !6896)
!6946 = !DILocation(line: 757, column: 5, scope: !6896)
!6947 = !DILocation(line: 757, column: 8, scope: !6896)
!6948 = !DILocation(line: 757, column: 29, scope: !6896)
!6949 = !DILocation(line: 757, column: 32, scope: !6896)
!6950 = !DILocation(line: 757, column: 41, scope: !6896)
!6951 = !DILocation(line: 757, column: 44, scope: !6896)
!6952 = !DILocation(line: 758, column: 31, scope: !6896)
!6953 = !DILocation(line: 758, column: 5, scope: !6896)
!6954 = !DILocation(line: 760, column: 12, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6896, file: !941, line: 760, column: 5)
!6956 = !DILocation(line: 760, column: 10, scope: !6955)
!6957 = !DILocation(line: 760, column: 17, scope: !6958)
!6958 = !DILexicalBlockFile(scope: !6959, file: !941, discriminator: 1)
!6959 = distinct !DILexicalBlock(scope: !6955, file: !941, line: 760, column: 5)
!6960 = !DILocation(line: 760, column: 19, scope: !6958)
!6961 = !DILocation(line: 760, column: 5, scope: !6958)
!6962 = !DILocation(line: 761, column: 22, scope: !6959)
!6963 = !DILocation(line: 761, column: 17, scope: !6959)
!6964 = !DILocation(line: 761, column: 31, scope: !6959)
!6965 = !DILocation(line: 761, column: 27, scope: !6959)
!6966 = !DILocation(line: 761, column: 25, scope: !6959)
!6967 = !DILocation(line: 761, column: 43, scope: !6959)
!6968 = !DILocation(line: 761, column: 38, scope: !6959)
!6969 = !DILocation(line: 761, column: 52, scope: !6959)
!6970 = !DILocation(line: 761, column: 48, scope: !6959)
!6971 = !DILocation(line: 761, column: 46, scope: !6959)
!6972 = !DILocation(line: 761, column: 35, scope: !6959)
!6973 = !DILocation(line: 761, column: 13, scope: !6959)
!6974 = !DILocation(line: 761, column: 9, scope: !6959)
!6975 = !DILocation(line: 760, column: 26, scope: !6976)
!6976 = !DILexicalBlockFile(scope: !6959, file: !941, discriminator: 2)
!6977 = !DILocation(line: 760, column: 5, scope: !6976)
!6978 = distinct !{!6978, !6979}
!6979 = !DILocation(line: 760, column: 5, scope: !6896)
!6980 = !DILocation(line: 763, column: 12, scope: !6896)
!6981 = !DILocation(line: 763, column: 5, scope: !6896)
!6982 = distinct !DISubprogram(name: "rd16_c", scope: !941, file: !941, line: 1011, type: !2756, isLocal: true, isDefinition: true, scopeLine: 1011, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!6983 = !DILocalVariable(name: "s", arg: 1, scope: !6982, file: !941, line: 1011, type: !2758)
!6984 = !DILocation(line: 1011, column: 35, scope: !6982)
!6985 = !DILocalVariable(name: "dst", arg: 2, scope: !6982, file: !941, line: 1011, type: !1167)
!6986 = !DILocation(line: 1011, column: 47, scope: !6982)
!6987 = !DILocalVariable(name: "src", arg: 3, scope: !6982, file: !941, line: 1011, type: !1167)
!6988 = !DILocation(line: 1011, column: 61, scope: !6982)
!6989 = !DILocalVariable(name: "stride", arg: 4, scope: !6982, file: !941, line: 1011, type: !1792)
!6990 = !DILocation(line: 1011, column: 76, scope: !6982)
!6991 = !DILocalVariable(name: "h", arg: 5, scope: !6982, file: !941, line: 1011, type: !952)
!6992 = !DILocation(line: 1011, column: 88, scope: !6982)
!6993 = !DILocalVariable(name: "score", scope: !6982, file: !941, line: 1011, type: !952)
!6994 = !DILocation(line: 1011, column: 97, scope: !6982)
!6995 = !DILocation(line: 1011, column: 125, scope: !6982)
!6996 = !DILocation(line: 1011, column: 128, scope: !6982)
!6997 = !DILocation(line: 1011, column: 133, scope: !6982)
!6998 = !DILocation(line: 1011, column: 138, scope: !6982)
!6999 = !DILocation(line: 1011, column: 117, scope: !6982)
!7000 = !DILocation(line: 1011, column: 114, scope: !6982)
!7001 = !DILocation(line: 1011, column: 167, scope: !6982)
!7002 = !DILocation(line: 1011, column: 170, scope: !6982)
!7003 = !DILocation(line: 1011, column: 174, scope: !6982)
!7004 = !DILocation(line: 1011, column: 179, scope: !6982)
!7005 = !DILocation(line: 1011, column: 183, scope: !6982)
!7006 = !DILocation(line: 1011, column: 188, scope: !6982)
!7007 = !DILocation(line: 1011, column: 159, scope: !7008)
!7008 = !DILexicalBlockFile(scope: !6982, file: !941, discriminator: 3)
!7009 = !DILocation(line: 1011, column: 156, scope: !6982)
!7010 = !DILocation(line: 1011, column: 204, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !6982, file: !941, line: 1011, column: 204)
!7012 = !DILocation(line: 1011, column: 206, scope: !7011)
!7013 = !DILocation(line: 1011, column: 204, scope: !6982)
!7014 = !DILocation(line: 1011, column: 226, scope: !7015)
!7015 = !DILexicalBlockFile(scope: !7016, file: !941, discriminator: 1)
!7016 = distinct !DILexicalBlock(scope: !7011, file: !941, line: 1011, column: 213)
!7017 = !DILocation(line: 1011, column: 224, scope: !7015)
!7018 = !DILocation(line: 1011, column: 219, scope: !7015)
!7019 = !DILocation(line: 1011, column: 245, scope: !7015)
!7020 = !DILocation(line: 1011, column: 243, scope: !7015)
!7021 = !DILocation(line: 1011, column: 238, scope: !7015)
!7022 = !DILocation(line: 1011, column: 270, scope: !7015)
!7023 = !DILocation(line: 1011, column: 273, scope: !7015)
!7024 = !DILocation(line: 1011, column: 278, scope: !7015)
!7025 = !DILocation(line: 1011, column: 283, scope: !7015)
!7026 = !DILocation(line: 1011, column: 262, scope: !7015)
!7027 = !DILocation(line: 1011, column: 259, scope: !7015)
!7028 = !DILocation(line: 1011, column: 312, scope: !7015)
!7029 = !DILocation(line: 1011, column: 315, scope: !7015)
!7030 = !DILocation(line: 1011, column: 319, scope: !7015)
!7031 = !DILocation(line: 1011, column: 324, scope: !7015)
!7032 = !DILocation(line: 1011, column: 328, scope: !7015)
!7033 = !DILocation(line: 1011, column: 333, scope: !7015)
!7034 = !DILocation(line: 1011, column: 304, scope: !7035)
!7035 = !DILexicalBlockFile(scope: !7015, file: !941, discriminator: 4)
!7036 = !DILocation(line: 1011, column: 301, scope: !7015)
!7037 = !DILocation(line: 1011, column: 345, scope: !7015)
!7038 = !DILocation(line: 1011, column: 354, scope: !7039)
!7039 = !DILexicalBlockFile(scope: !6982, file: !941, discriminator: 2)
!7040 = !DILocation(line: 1011, column: 347, scope: !7039)
!7041 = distinct !DISubprogram(name: "rd8x8_c", scope: !941, file: !941, line: 766, type: !2756, isLocal: true, isDefinition: true, scopeLine: 768, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!7042 = !DILocalVariable(name: "s", arg: 1, scope: !7041, file: !941, line: 766, type: !2758)
!7043 = !DILocation(line: 766, column: 36, scope: !7041)
!7044 = !DILocalVariable(name: "src1", arg: 2, scope: !7041, file: !941, line: 766, type: !1167)
!7045 = !DILocation(line: 766, column: 48, scope: !7041)
!7046 = !DILocalVariable(name: "src2", arg: 3, scope: !7041, file: !941, line: 766, type: !1167)
!7047 = !DILocation(line: 766, column: 63, scope: !7041)
!7048 = !DILocalVariable(name: "stride", arg: 4, scope: !7041, file: !941, line: 767, type: !1792)
!7049 = !DILocation(line: 767, column: 30, scope: !7041)
!7050 = !DILocalVariable(name: "h", arg: 5, scope: !7041, file: !941, line: 767, type: !952)
!7051 = !DILocation(line: 767, column: 42, scope: !7041)
!7052 = !DILocalVariable(name: "scantable", scope: !7041, file: !941, line: 769, type: !1077)
!7053 = !DILocation(line: 769, column: 20, scope: !7041)
!7054 = !DILocation(line: 769, column: 32, scope: !7041)
!7055 = !DILocation(line: 769, column: 35, scope: !7041)
!7056 = !DILocation(line: 769, column: 51, scope: !7041)
!7057 = !DILocalVariable(name: "la_temp", scope: !7041, file: !941, line: 770, type: !2470)
!7058 = !DILocation(line: 770, column: 44, scope: !7041)
!7059 = !DILocalVariable(name: "temp", scope: !7041, file: !941, line: 770, type: !969)
!7060 = !DILocation(line: 770, column: 69, scope: !7041)
!7061 = !DILocation(line: 770, column: 77, scope: !7041)
!7062 = !DILocalVariable(name: "la_lsrc1", scope: !7041, file: !941, line: 771, type: !1082)
!7063 = !DILocation(line: 771, column: 44, scope: !7041)
!7064 = !DILocalVariable(name: "lsrc1", scope: !7041, file: !941, line: 771, type: !1167)
!7065 = !DILocation(line: 771, column: 70, scope: !7041)
!7066 = !DILocation(line: 771, column: 79, scope: !7041)
!7067 = !DILocalVariable(name: "la_lsrc2", scope: !7041, file: !941, line: 772, type: !1082)
!7068 = !DILocation(line: 772, column: 44, scope: !7041)
!7069 = !DILocalVariable(name: "lsrc2", scope: !7041, file: !941, line: 772, type: !1167)
!7070 = !DILocation(line: 772, column: 70, scope: !7041)
!7071 = !DILocation(line: 772, column: 79, scope: !7041)
!7072 = !DILocalVariable(name: "i", scope: !7041, file: !941, line: 773, type: !952)
!7073 = !DILocation(line: 773, column: 9, scope: !7041)
!7074 = !DILocalVariable(name: "last", scope: !7041, file: !941, line: 773, type: !952)
!7075 = !DILocation(line: 773, column: 12, scope: !7041)
!7076 = !DILocalVariable(name: "run", scope: !7041, file: !941, line: 773, type: !952)
!7077 = !DILocation(line: 773, column: 18, scope: !7041)
!7078 = !DILocalVariable(name: "bits", scope: !7041, file: !941, line: 773, type: !952)
!7079 = !DILocation(line: 773, column: 23, scope: !7041)
!7080 = !DILocalVariable(name: "level", scope: !7041, file: !941, line: 773, type: !952)
!7081 = !DILocation(line: 773, column: 29, scope: !7041)
!7082 = !DILocalVariable(name: "distortion", scope: !7041, file: !941, line: 773, type: !952)
!7083 = !DILocation(line: 773, column: 36, scope: !7041)
!7084 = !DILocalVariable(name: "start_i", scope: !7041, file: !941, line: 773, type: !952)
!7085 = !DILocation(line: 773, column: 48, scope: !7041)
!7086 = !DILocalVariable(name: "esc_length", scope: !7041, file: !941, line: 774, type: !1116)
!7087 = !DILocation(line: 774, column: 15, scope: !7041)
!7088 = !DILocation(line: 774, column: 28, scope: !7041)
!7089 = !DILocation(line: 774, column: 31, scope: !7041)
!7090 = !DILocalVariable(name: "length", scope: !7041, file: !941, line: 775, type: !1167)
!7091 = !DILocation(line: 775, column: 14, scope: !7041)
!7092 = !DILocalVariable(name: "last_length", scope: !7041, file: !941, line: 775, type: !1167)
!7093 = !DILocation(line: 775, column: 23, scope: !7041)
!7094 = !DILocation(line: 779, column: 17, scope: !7041)
!7095 = !DILocation(line: 779, column: 24, scope: !7041)
!7096 = !DILocation(line: 779, column: 33, scope: !7041)
!7097 = !DILocation(line: 779, column: 5, scope: !7041)
!7098 = !DILocation(line: 780, column: 17, scope: !7041)
!7099 = !DILocation(line: 780, column: 24, scope: !7041)
!7100 = !DILocation(line: 780, column: 33, scope: !7041)
!7101 = !DILocation(line: 780, column: 5, scope: !7041)
!7102 = !DILocation(line: 782, column: 5, scope: !7041)
!7103 = !DILocation(line: 782, column: 8, scope: !7041)
!7104 = !DILocation(line: 782, column: 13, scope: !7041)
!7105 = !DILocation(line: 782, column: 25, scope: !7041)
!7106 = !DILocation(line: 782, column: 31, scope: !7041)
!7107 = !DILocation(line: 782, column: 38, scope: !7041)
!7108 = !DILocation(line: 786, column: 9, scope: !7041)
!7109 = !DILocation(line: 786, column: 12, scope: !7041)
!7110 = !DILocation(line: 786, column: 30, scope: !7041)
!7111 = !DILocation(line: 786, column: 33, scope: !7041)
!7112 = !DILocation(line: 786, column: 43, scope: !7041)
!7113 = !DILocation(line: 786, column: 46, scope: !7041)
!7114 = !DILocation(line: 785, column: 10, scope: !7041)
!7115 = !DILocation(line: 784, column: 5, scope: !7041)
!7116 = !DILocation(line: 784, column: 8, scope: !7041)
!7117 = !DILocation(line: 784, column: 29, scope: !7041)
!7118 = !DILocation(line: 788, column: 10, scope: !7041)
!7119 = !DILocation(line: 790, column: 9, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7041, file: !941, line: 790, column: 9)
!7121 = !DILocation(line: 790, column: 12, scope: !7120)
!7122 = !DILocation(line: 790, column: 9, scope: !7041)
!7123 = !DILocation(line: 791, column: 17, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7120, file: !941, line: 790, column: 22)
!7125 = !DILocation(line: 792, column: 18, scope: !7124)
!7126 = !DILocation(line: 792, column: 21, scope: !7124)
!7127 = !DILocation(line: 792, column: 16, scope: !7124)
!7128 = !DILocation(line: 793, column: 23, scope: !7124)
!7129 = !DILocation(line: 793, column: 26, scope: !7124)
!7130 = !DILocation(line: 793, column: 21, scope: !7124)
!7131 = !DILocation(line: 794, column: 39, scope: !7124)
!7132 = !DILocation(line: 794, column: 47, scope: !7124)
!7133 = !DILocation(line: 794, column: 17, scope: !7124)
!7134 = !DILocation(line: 794, column: 20, scope: !7124)
!7135 = !DILocation(line: 794, column: 14, scope: !7124)
!7136 = !DILocation(line: 795, column: 5, scope: !7124)
!7137 = !DILocation(line: 796, column: 17, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7120, file: !941, line: 795, column: 12)
!7139 = !DILocation(line: 797, column: 18, scope: !7138)
!7140 = !DILocation(line: 797, column: 21, scope: !7138)
!7141 = !DILocation(line: 797, column: 16, scope: !7138)
!7142 = !DILocation(line: 798, column: 23, scope: !7138)
!7143 = !DILocation(line: 798, column: 26, scope: !7138)
!7144 = !DILocation(line: 798, column: 21, scope: !7138)
!7145 = !DILocation(line: 801, column: 9, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7041, file: !941, line: 801, column: 9)
!7147 = !DILocation(line: 801, column: 17, scope: !7146)
!7148 = !DILocation(line: 801, column: 14, scope: !7146)
!7149 = !DILocation(line: 801, column: 9, scope: !7041)
!7150 = !DILocation(line: 802, column: 13, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7146, file: !941, line: 801, column: 26)
!7152 = !DILocation(line: 803, column: 18, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7151, file: !941, line: 803, column: 9)
!7154 = !DILocation(line: 803, column: 16, scope: !7153)
!7155 = !DILocation(line: 803, column: 14, scope: !7153)
!7156 = !DILocation(line: 803, column: 27, scope: !7157)
!7157 = !DILexicalBlockFile(scope: !7158, file: !941, discriminator: 1)
!7158 = distinct !DILexicalBlock(scope: !7153, file: !941, line: 803, column: 9)
!7159 = !DILocation(line: 803, column: 31, scope: !7157)
!7160 = !DILocation(line: 803, column: 29, scope: !7157)
!7161 = !DILocation(line: 803, column: 9, scope: !7157)
!7162 = !DILocalVariable(name: "j", scope: !7163, file: !941, line: 804, type: !952)
!7163 = distinct !DILexicalBlock(scope: !7158, file: !941, line: 803, column: 42)
!7164 = !DILocation(line: 804, column: 17, scope: !7163)
!7165 = !DILocation(line: 804, column: 31, scope: !7163)
!7166 = !DILocation(line: 804, column: 21, scope: !7163)
!7167 = !DILocation(line: 805, column: 26, scope: !7163)
!7168 = !DILocation(line: 805, column: 21, scope: !7163)
!7169 = !DILocation(line: 805, column: 19, scope: !7163)
!7170 = !DILocation(line: 807, column: 17, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7163, file: !941, line: 807, column: 17)
!7172 = !DILocation(line: 807, column: 17, scope: !7163)
!7173 = !DILocation(line: 808, column: 23, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7171, file: !941, line: 807, column: 24)
!7175 = !DILocation(line: 809, column: 22, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7174, file: !941, line: 809, column: 21)
!7177 = !DILocation(line: 809, column: 28, scope: !7176)
!7178 = !DILocation(line: 809, column: 38, scope: !7176)
!7179 = !DILocation(line: 809, column: 21, scope: !7174)
!7180 = !DILocation(line: 810, column: 38, scope: !7176)
!7181 = !DILocation(line: 810, column: 42, scope: !7176)
!7182 = !DILocation(line: 810, column: 50, scope: !7176)
!7183 = !DILocation(line: 810, column: 47, scope: !7176)
!7184 = !DILocation(line: 810, column: 29, scope: !7176)
!7185 = !DILocation(line: 810, column: 26, scope: !7176)
!7186 = !DILocation(line: 810, column: 21, scope: !7176)
!7187 = !DILocation(line: 812, column: 29, scope: !7176)
!7188 = !DILocation(line: 812, column: 26, scope: !7176)
!7189 = !DILocation(line: 813, column: 21, scope: !7174)
!7190 = !DILocation(line: 814, column: 13, scope: !7174)
!7191 = !DILocation(line: 815, column: 20, scope: !7171)
!7192 = !DILocation(line: 816, column: 9, scope: !7163)
!7193 = !DILocation(line: 803, column: 38, scope: !7194)
!7194 = !DILexicalBlockFile(scope: !7158, file: !941, discriminator: 2)
!7195 = !DILocation(line: 803, column: 9, scope: !7194)
!7196 = distinct !{!7196, !7197}
!7197 = !DILocation(line: 803, column: 9, scope: !7151)
!7198 = !DILocation(line: 817, column: 23, scope: !7151)
!7199 = !DILocation(line: 817, column: 13, scope: !7151)
!7200 = !DILocation(line: 817, column: 11, scope: !7151)
!7201 = !DILocation(line: 819, column: 22, scope: !7151)
!7202 = !DILocation(line: 819, column: 17, scope: !7151)
!7203 = !DILocation(line: 819, column: 25, scope: !7151)
!7204 = !DILocation(line: 819, column: 15, scope: !7151)
!7205 = !DILocation(line: 823, column: 14, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7151, file: !941, line: 823, column: 13)
!7207 = !DILocation(line: 823, column: 20, scope: !7206)
!7208 = !DILocation(line: 823, column: 30, scope: !7206)
!7209 = !DILocation(line: 823, column: 13, scope: !7151)
!7210 = !DILocation(line: 824, column: 35, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7206, file: !941, line: 823, column: 36)
!7212 = !DILocation(line: 824, column: 39, scope: !7211)
!7213 = !DILocation(line: 824, column: 47, scope: !7211)
!7214 = !DILocation(line: 824, column: 44, scope: !7211)
!7215 = !DILocation(line: 824, column: 21, scope: !7211)
!7216 = !DILocation(line: 824, column: 18, scope: !7211)
!7217 = !DILocation(line: 825, column: 9, scope: !7211)
!7218 = !DILocation(line: 826, column: 21, scope: !7206)
!7219 = !DILocation(line: 826, column: 18, scope: !7206)
!7220 = !DILocation(line: 827, column: 5, scope: !7151)
!7221 = !DILocation(line: 829, column: 9, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7041, file: !941, line: 829, column: 9)
!7223 = !DILocation(line: 829, column: 14, scope: !7222)
!7224 = !DILocation(line: 829, column: 9, scope: !7041)
!7225 = !DILocation(line: 830, column: 13, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7227, file: !941, line: 830, column: 13)
!7227 = distinct !DILexicalBlock(scope: !7222, file: !941, line: 829, column: 20)
!7228 = !DILocation(line: 830, column: 16, scope: !7226)
!7229 = !DILocation(line: 830, column: 13, scope: !7227)
!7230 = !DILocation(line: 831, column: 13, scope: !7226)
!7231 = !DILocation(line: 831, column: 16, scope: !7226)
!7232 = !DILocation(line: 831, column: 37, scope: !7226)
!7233 = !DILocation(line: 831, column: 40, scope: !7226)
!7234 = !DILocation(line: 831, column: 49, scope: !7226)
!7235 = !DILocation(line: 831, column: 52, scope: !7226)
!7236 = !DILocation(line: 833, column: 13, scope: !7226)
!7237 = !DILocation(line: 833, column: 16, scope: !7226)
!7238 = !DILocation(line: 833, column: 37, scope: !7226)
!7239 = !DILocation(line: 833, column: 40, scope: !7226)
!7240 = !DILocation(line: 833, column: 49, scope: !7226)
!7241 = !DILocation(line: 833, column: 52, scope: !7226)
!7242 = !DILocation(line: 834, column: 5, scope: !7227)
!7243 = !DILocation(line: 836, column: 5, scope: !7041)
!7244 = !DILocation(line: 836, column: 8, scope: !7041)
!7245 = !DILocation(line: 836, column: 13, scope: !7041)
!7246 = !DILocation(line: 836, column: 22, scope: !7041)
!7247 = !DILocation(line: 836, column: 32, scope: !7041)
!7248 = !DILocation(line: 838, column: 18, scope: !7041)
!7249 = !DILocation(line: 838, column: 21, scope: !7041)
!7250 = !DILocation(line: 838, column: 26, scope: !7041)
!7251 = !DILocation(line: 838, column: 38, scope: !7041)
!7252 = !DILocation(line: 838, column: 45, scope: !7041)
!7253 = !DILocation(line: 838, column: 16, scope: !7041)
!7254 = !DILocation(line: 840, column: 12, scope: !7041)
!7255 = !DILocation(line: 840, column: 27, scope: !7041)
!7256 = !DILocation(line: 840, column: 34, scope: !7041)
!7257 = !DILocation(line: 840, column: 37, scope: !7041)
!7258 = !DILocation(line: 840, column: 32, scope: !7041)
!7259 = !DILocation(line: 840, column: 46, scope: !7041)
!7260 = !DILocation(line: 840, column: 49, scope: !7041)
!7261 = !DILocation(line: 840, column: 44, scope: !7041)
!7262 = !DILocation(line: 840, column: 56, scope: !7041)
!7263 = !DILocation(line: 840, column: 62, scope: !7041)
!7264 = !DILocation(line: 840, column: 68, scope: !7041)
!7265 = !DILocation(line: 840, column: 23, scope: !7041)
!7266 = !DILocation(line: 840, column: 5, scope: !7041)
!7267 = distinct !DISubprogram(name: "bit16_c", scope: !941, file: !941, line: 1012, type: !2756, isLocal: true, isDefinition: true, scopeLine: 1012, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!7268 = !DILocalVariable(name: "s", arg: 1, scope: !7267, file: !941, line: 1012, type: !2758)
!7269 = !DILocation(line: 1012, column: 36, scope: !7267)
!7270 = !DILocalVariable(name: "dst", arg: 2, scope: !7267, file: !941, line: 1012, type: !1167)
!7271 = !DILocation(line: 1012, column: 48, scope: !7267)
!7272 = !DILocalVariable(name: "src", arg: 3, scope: !7267, file: !941, line: 1012, type: !1167)
!7273 = !DILocation(line: 1012, column: 62, scope: !7267)
!7274 = !DILocalVariable(name: "stride", arg: 4, scope: !7267, file: !941, line: 1012, type: !1792)
!7275 = !DILocation(line: 1012, column: 77, scope: !7267)
!7276 = !DILocalVariable(name: "h", arg: 5, scope: !7267, file: !941, line: 1012, type: !952)
!7277 = !DILocation(line: 1012, column: 89, scope: !7267)
!7278 = !DILocalVariable(name: "score", scope: !7267, file: !941, line: 1012, type: !952)
!7279 = !DILocation(line: 1012, column: 98, scope: !7267)
!7280 = !DILocation(line: 1012, column: 127, scope: !7267)
!7281 = !DILocation(line: 1012, column: 130, scope: !7267)
!7282 = !DILocation(line: 1012, column: 135, scope: !7267)
!7283 = !DILocation(line: 1012, column: 140, scope: !7267)
!7284 = !DILocation(line: 1012, column: 118, scope: !7267)
!7285 = !DILocation(line: 1012, column: 115, scope: !7267)
!7286 = !DILocation(line: 1012, column: 170, scope: !7267)
!7287 = !DILocation(line: 1012, column: 173, scope: !7267)
!7288 = !DILocation(line: 1012, column: 177, scope: !7267)
!7289 = !DILocation(line: 1012, column: 182, scope: !7267)
!7290 = !DILocation(line: 1012, column: 186, scope: !7267)
!7291 = !DILocation(line: 1012, column: 191, scope: !7267)
!7292 = !DILocation(line: 1012, column: 161, scope: !7293)
!7293 = !DILexicalBlockFile(scope: !7267, file: !941, discriminator: 3)
!7294 = !DILocation(line: 1012, column: 158, scope: !7267)
!7295 = !DILocation(line: 1012, column: 207, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7267, file: !941, line: 1012, column: 207)
!7297 = !DILocation(line: 1012, column: 209, scope: !7296)
!7298 = !DILocation(line: 1012, column: 207, scope: !7267)
!7299 = !DILocation(line: 1012, column: 229, scope: !7300)
!7300 = !DILexicalBlockFile(scope: !7301, file: !941, discriminator: 1)
!7301 = distinct !DILexicalBlock(scope: !7296, file: !941, line: 1012, column: 216)
!7302 = !DILocation(line: 1012, column: 227, scope: !7300)
!7303 = !DILocation(line: 1012, column: 222, scope: !7300)
!7304 = !DILocation(line: 1012, column: 248, scope: !7300)
!7305 = !DILocation(line: 1012, column: 246, scope: !7300)
!7306 = !DILocation(line: 1012, column: 241, scope: !7300)
!7307 = !DILocation(line: 1012, column: 274, scope: !7300)
!7308 = !DILocation(line: 1012, column: 277, scope: !7300)
!7309 = !DILocation(line: 1012, column: 282, scope: !7300)
!7310 = !DILocation(line: 1012, column: 287, scope: !7300)
!7311 = !DILocation(line: 1012, column: 265, scope: !7300)
!7312 = !DILocation(line: 1012, column: 262, scope: !7300)
!7313 = !DILocation(line: 1012, column: 317, scope: !7300)
!7314 = !DILocation(line: 1012, column: 320, scope: !7300)
!7315 = !DILocation(line: 1012, column: 324, scope: !7300)
!7316 = !DILocation(line: 1012, column: 329, scope: !7300)
!7317 = !DILocation(line: 1012, column: 333, scope: !7300)
!7318 = !DILocation(line: 1012, column: 338, scope: !7300)
!7319 = !DILocation(line: 1012, column: 308, scope: !7320)
!7320 = !DILexicalBlockFile(scope: !7300, file: !941, discriminator: 4)
!7321 = !DILocation(line: 1012, column: 305, scope: !7300)
!7322 = !DILocation(line: 1012, column: 350, scope: !7300)
!7323 = !DILocation(line: 1012, column: 359, scope: !7324)
!7324 = !DILexicalBlockFile(scope: !7267, file: !941, discriminator: 2)
!7325 = !DILocation(line: 1012, column: 352, scope: !7324)
!7326 = distinct !DISubprogram(name: "bit8x8_c", scope: !941, file: !941, line: 843, type: !2756, isLocal: true, isDefinition: true, scopeLine: 845, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!7327 = !DILocalVariable(name: "s", arg: 1, scope: !7326, file: !941, line: 843, type: !2758)
!7328 = !DILocation(line: 843, column: 37, scope: !7326)
!7329 = !DILocalVariable(name: "src1", arg: 2, scope: !7326, file: !941, line: 843, type: !1167)
!7330 = !DILocation(line: 843, column: 49, scope: !7326)
!7331 = !DILocalVariable(name: "src2", arg: 3, scope: !7326, file: !941, line: 843, type: !1167)
!7332 = !DILocation(line: 843, column: 64, scope: !7326)
!7333 = !DILocalVariable(name: "stride", arg: 4, scope: !7326, file: !941, line: 844, type: !1792)
!7334 = !DILocation(line: 844, column: 31, scope: !7326)
!7335 = !DILocalVariable(name: "h", arg: 5, scope: !7326, file: !941, line: 844, type: !952)
!7336 = !DILocation(line: 844, column: 43, scope: !7326)
!7337 = !DILocalVariable(name: "scantable", scope: !7326, file: !941, line: 846, type: !1077)
!7338 = !DILocation(line: 846, column: 20, scope: !7326)
!7339 = !DILocation(line: 846, column: 32, scope: !7326)
!7340 = !DILocation(line: 846, column: 35, scope: !7326)
!7341 = !DILocation(line: 846, column: 51, scope: !7326)
!7342 = !DILocalVariable(name: "la_temp", scope: !7326, file: !941, line: 847, type: !2470)
!7343 = !DILocation(line: 847, column: 44, scope: !7326)
!7344 = !DILocalVariable(name: "temp", scope: !7326, file: !941, line: 847, type: !969)
!7345 = !DILocation(line: 847, column: 69, scope: !7326)
!7346 = !DILocation(line: 847, column: 77, scope: !7326)
!7347 = !DILocalVariable(name: "i", scope: !7326, file: !941, line: 848, type: !952)
!7348 = !DILocation(line: 848, column: 9, scope: !7326)
!7349 = !DILocalVariable(name: "last", scope: !7326, file: !941, line: 848, type: !952)
!7350 = !DILocation(line: 848, column: 12, scope: !7326)
!7351 = !DILocalVariable(name: "run", scope: !7326, file: !941, line: 848, type: !952)
!7352 = !DILocation(line: 848, column: 18, scope: !7326)
!7353 = !DILocalVariable(name: "bits", scope: !7326, file: !941, line: 848, type: !952)
!7354 = !DILocation(line: 848, column: 23, scope: !7326)
!7355 = !DILocalVariable(name: "level", scope: !7326, file: !941, line: 848, type: !952)
!7356 = !DILocation(line: 848, column: 29, scope: !7326)
!7357 = !DILocalVariable(name: "start_i", scope: !7326, file: !941, line: 848, type: !952)
!7358 = !DILocation(line: 848, column: 36, scope: !7326)
!7359 = !DILocalVariable(name: "esc_length", scope: !7326, file: !941, line: 849, type: !1116)
!7360 = !DILocation(line: 849, column: 15, scope: !7326)
!7361 = !DILocation(line: 849, column: 28, scope: !7326)
!7362 = !DILocation(line: 849, column: 31, scope: !7326)
!7363 = !DILocalVariable(name: "length", scope: !7326, file: !941, line: 850, type: !1167)
!7364 = !DILocation(line: 850, column: 14, scope: !7326)
!7365 = !DILocalVariable(name: "last_length", scope: !7326, file: !941, line: 850, type: !1167)
!7366 = !DILocation(line: 850, column: 23, scope: !7326)
!7367 = !DILocation(line: 854, column: 5, scope: !7326)
!7368 = !DILocation(line: 854, column: 8, scope: !7326)
!7369 = !DILocation(line: 854, column: 13, scope: !7326)
!7370 = !DILocation(line: 854, column: 35, scope: !7326)
!7371 = !DILocation(line: 854, column: 41, scope: !7326)
!7372 = !DILocation(line: 854, column: 47, scope: !7326)
!7373 = !DILocation(line: 854, column: 53, scope: !7326)
!7374 = !DILocation(line: 858, column: 9, scope: !7326)
!7375 = !DILocation(line: 858, column: 12, scope: !7326)
!7376 = !DILocation(line: 858, column: 30, scope: !7326)
!7377 = !DILocation(line: 858, column: 33, scope: !7326)
!7378 = !DILocation(line: 858, column: 43, scope: !7326)
!7379 = !DILocation(line: 858, column: 46, scope: !7326)
!7380 = !DILocation(line: 857, column: 10, scope: !7326)
!7381 = !DILocation(line: 856, column: 5, scope: !7326)
!7382 = !DILocation(line: 856, column: 8, scope: !7326)
!7383 = !DILocation(line: 856, column: 29, scope: !7326)
!7384 = !DILocation(line: 860, column: 10, scope: !7326)
!7385 = !DILocation(line: 862, column: 9, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7326, file: !941, line: 862, column: 9)
!7387 = !DILocation(line: 862, column: 12, scope: !7386)
!7388 = !DILocation(line: 862, column: 9, scope: !7326)
!7389 = !DILocation(line: 863, column: 17, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7386, file: !941, line: 862, column: 22)
!7391 = !DILocation(line: 864, column: 18, scope: !7390)
!7392 = !DILocation(line: 864, column: 21, scope: !7390)
!7393 = !DILocation(line: 864, column: 16, scope: !7390)
!7394 = !DILocation(line: 865, column: 23, scope: !7390)
!7395 = !DILocation(line: 865, column: 26, scope: !7390)
!7396 = !DILocation(line: 865, column: 21, scope: !7390)
!7397 = !DILocation(line: 866, column: 39, scope: !7390)
!7398 = !DILocation(line: 866, column: 47, scope: !7390)
!7399 = !DILocation(line: 866, column: 17, scope: !7390)
!7400 = !DILocation(line: 866, column: 20, scope: !7390)
!7401 = !DILocation(line: 866, column: 14, scope: !7390)
!7402 = !DILocation(line: 867, column: 5, scope: !7390)
!7403 = !DILocation(line: 868, column: 17, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7386, file: !941, line: 867, column: 12)
!7405 = !DILocation(line: 869, column: 18, scope: !7404)
!7406 = !DILocation(line: 869, column: 21, scope: !7404)
!7407 = !DILocation(line: 869, column: 16, scope: !7404)
!7408 = !DILocation(line: 870, column: 23, scope: !7404)
!7409 = !DILocation(line: 870, column: 26, scope: !7404)
!7410 = !DILocation(line: 870, column: 21, scope: !7404)
!7411 = !DILocation(line: 873, column: 9, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7326, file: !941, line: 873, column: 9)
!7413 = !DILocation(line: 873, column: 17, scope: !7412)
!7414 = !DILocation(line: 873, column: 14, scope: !7412)
!7415 = !DILocation(line: 873, column: 9, scope: !7326)
!7416 = !DILocation(line: 874, column: 13, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7412, file: !941, line: 873, column: 26)
!7418 = !DILocation(line: 875, column: 18, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7417, file: !941, line: 875, column: 9)
!7420 = !DILocation(line: 875, column: 16, scope: !7419)
!7421 = !DILocation(line: 875, column: 14, scope: !7419)
!7422 = !DILocation(line: 875, column: 27, scope: !7423)
!7423 = !DILexicalBlockFile(scope: !7424, file: !941, discriminator: 1)
!7424 = distinct !DILexicalBlock(scope: !7419, file: !941, line: 875, column: 9)
!7425 = !DILocation(line: 875, column: 31, scope: !7423)
!7426 = !DILocation(line: 875, column: 29, scope: !7423)
!7427 = !DILocation(line: 875, column: 9, scope: !7423)
!7428 = !DILocalVariable(name: "j", scope: !7429, file: !941, line: 876, type: !952)
!7429 = distinct !DILexicalBlock(scope: !7424, file: !941, line: 875, column: 42)
!7430 = !DILocation(line: 876, column: 17, scope: !7429)
!7431 = !DILocation(line: 876, column: 31, scope: !7429)
!7432 = !DILocation(line: 876, column: 21, scope: !7429)
!7433 = !DILocation(line: 877, column: 26, scope: !7429)
!7434 = !DILocation(line: 877, column: 21, scope: !7429)
!7435 = !DILocation(line: 877, column: 19, scope: !7429)
!7436 = !DILocation(line: 879, column: 17, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7429, file: !941, line: 879, column: 17)
!7438 = !DILocation(line: 879, column: 17, scope: !7429)
!7439 = !DILocation(line: 880, column: 23, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7437, file: !941, line: 879, column: 24)
!7441 = !DILocation(line: 881, column: 22, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7440, file: !941, line: 881, column: 21)
!7443 = !DILocation(line: 881, column: 28, scope: !7442)
!7444 = !DILocation(line: 881, column: 38, scope: !7442)
!7445 = !DILocation(line: 881, column: 21, scope: !7440)
!7446 = !DILocation(line: 882, column: 38, scope: !7442)
!7447 = !DILocation(line: 882, column: 42, scope: !7442)
!7448 = !DILocation(line: 882, column: 50, scope: !7442)
!7449 = !DILocation(line: 882, column: 47, scope: !7442)
!7450 = !DILocation(line: 882, column: 29, scope: !7442)
!7451 = !DILocation(line: 882, column: 26, scope: !7442)
!7452 = !DILocation(line: 882, column: 21, scope: !7442)
!7453 = !DILocation(line: 884, column: 29, scope: !7442)
!7454 = !DILocation(line: 884, column: 26, scope: !7442)
!7455 = !DILocation(line: 885, column: 21, scope: !7440)
!7456 = !DILocation(line: 886, column: 13, scope: !7440)
!7457 = !DILocation(line: 887, column: 20, scope: !7437)
!7458 = !DILocation(line: 888, column: 9, scope: !7429)
!7459 = !DILocation(line: 875, column: 38, scope: !7460)
!7460 = !DILexicalBlockFile(scope: !7424, file: !941, discriminator: 2)
!7461 = !DILocation(line: 875, column: 9, scope: !7460)
!7462 = distinct !{!7462, !7463}
!7463 = !DILocation(line: 875, column: 9, scope: !7417)
!7464 = !DILocation(line: 889, column: 23, scope: !7417)
!7465 = !DILocation(line: 889, column: 13, scope: !7417)
!7466 = !DILocation(line: 889, column: 11, scope: !7417)
!7467 = !DILocation(line: 891, column: 22, scope: !7417)
!7468 = !DILocation(line: 891, column: 17, scope: !7417)
!7469 = !DILocation(line: 891, column: 25, scope: !7417)
!7470 = !DILocation(line: 891, column: 15, scope: !7417)
!7471 = !DILocation(line: 895, column: 14, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7417, file: !941, line: 895, column: 13)
!7473 = !DILocation(line: 895, column: 20, scope: !7472)
!7474 = !DILocation(line: 895, column: 30, scope: !7472)
!7475 = !DILocation(line: 895, column: 13, scope: !7417)
!7476 = !DILocation(line: 896, column: 35, scope: !7472)
!7477 = !DILocation(line: 896, column: 39, scope: !7472)
!7478 = !DILocation(line: 896, column: 47, scope: !7472)
!7479 = !DILocation(line: 896, column: 44, scope: !7472)
!7480 = !DILocation(line: 896, column: 21, scope: !7472)
!7481 = !DILocation(line: 896, column: 18, scope: !7472)
!7482 = !DILocation(line: 896, column: 13, scope: !7472)
!7483 = !DILocation(line: 898, column: 21, scope: !7472)
!7484 = !DILocation(line: 898, column: 18, scope: !7472)
!7485 = !DILocation(line: 899, column: 5, scope: !7417)
!7486 = !DILocation(line: 901, column: 12, scope: !7326)
!7487 = !DILocation(line: 901, column: 5, scope: !7326)
!7488 = distinct !DISubprogram(name: "vsad16_c", scope: !941, file: !941, line: 943, type: !2756, isLocal: true, isDefinition: true, scopeLine: 943, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!7489 = !DILocalVariable(name: "c", arg: 1, scope: !7488, file: !941, line: 943, type: !2758)
!7490 = !DILocation(line: 943, column: 37, scope: !7488)
!7491 = !DILocalVariable(name: "s1", arg: 2, scope: !7488, file: !941, line: 943, type: !1167)
!7492 = !DILocation(line: 943, column: 49, scope: !7488)
!7493 = !DILocalVariable(name: "s2", arg: 3, scope: !7488, file: !941, line: 943, type: !1167)
!7494 = !DILocation(line: 943, column: 62, scope: !7488)
!7495 = !DILocalVariable(name: "stride", arg: 4, scope: !7488, file: !941, line: 943, type: !1792)
!7496 = !DILocation(line: 943, column: 76, scope: !7488)
!7497 = !DILocalVariable(name: "h", arg: 5, scope: !7488, file: !941, line: 943, type: !952)
!7498 = !DILocation(line: 943, column: 88, scope: !7488)
!7499 = !DILocalVariable(name: "score", scope: !7488, file: !941, line: 943, type: !952)
!7500 = !DILocation(line: 943, column: 97, scope: !7488)
!7501 = !DILocalVariable(name: "x", scope: !7488, file: !941, line: 943, type: !952)
!7502 = !DILocation(line: 943, column: 108, scope: !7488)
!7503 = !DILocalVariable(name: "y", scope: !7488, file: !941, line: 943, type: !952)
!7504 = !DILocation(line: 943, column: 111, scope: !7488)
!7505 = !DILocation(line: 943, column: 121, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7488, file: !941, line: 943, column: 114)
!7507 = !DILocation(line: 943, column: 119, scope: !7506)
!7508 = !DILocation(line: 943, column: 126, scope: !7509)
!7509 = !DILexicalBlockFile(scope: !7510, file: !941, discriminator: 1)
!7510 = distinct !DILexicalBlock(scope: !7506, file: !941, line: 943, column: 114)
!7511 = !DILocation(line: 943, column: 130, scope: !7509)
!7512 = !DILocation(line: 943, column: 128, scope: !7509)
!7513 = !DILocation(line: 943, column: 114, scope: !7509)
!7514 = !DILocation(line: 943, column: 147, scope: !7515)
!7515 = !DILexicalBlockFile(scope: !7516, file: !941, discriminator: 2)
!7516 = distinct !DILexicalBlock(scope: !7517, file: !941, line: 943, column: 140)
!7517 = distinct !DILexicalBlock(scope: !7510, file: !941, line: 943, column: 138)
!7518 = !DILocation(line: 943, column: 145, scope: !7515)
!7519 = !DILocation(line: 943, column: 152, scope: !7520)
!7520 = !DILexicalBlockFile(scope: !7521, file: !941, discriminator: 3)
!7521 = distinct !DILexicalBlock(scope: !7516, file: !941, line: 943, column: 140)
!7522 = !DILocation(line: 943, column: 154, scope: !7520)
!7523 = !DILocation(line: 943, column: 140, scope: !7520)
!7524 = !DILocation(line: 943, column: 179, scope: !7525)
!7525 = !DILexicalBlockFile(scope: !7521, file: !941, discriminator: 4)
!7526 = !DILocation(line: 943, column: 176, scope: !7525)
!7527 = !DILocation(line: 943, column: 187, scope: !7525)
!7528 = !DILocation(line: 943, column: 184, scope: !7525)
!7529 = !DILocation(line: 943, column: 182, scope: !7525)
!7530 = !DILocation(line: 943, column: 195, scope: !7525)
!7531 = !DILocation(line: 943, column: 199, scope: !7525)
!7532 = !DILocation(line: 943, column: 197, scope: !7525)
!7533 = !DILocation(line: 943, column: 192, scope: !7525)
!7534 = !DILocation(line: 943, column: 190, scope: !7525)
!7535 = !DILocation(line: 943, column: 212, scope: !7525)
!7536 = !DILocation(line: 943, column: 216, scope: !7525)
!7537 = !DILocation(line: 943, column: 214, scope: !7525)
!7538 = !DILocation(line: 943, column: 209, scope: !7525)
!7539 = !DILocation(line: 943, column: 207, scope: !7525)
!7540 = !DILocation(line: 943, column: 225, scope: !7525)
!7541 = !DILocation(line: 943, column: 175, scope: !7525)
!7542 = !DILocation(line: 943, column: 236, scope: !7543)
!7543 = !DILexicalBlockFile(scope: !7521, file: !941, discriminator: 5)
!7544 = !DILocation(line: 943, column: 233, scope: !7543)
!7545 = !DILocation(line: 943, column: 244, scope: !7543)
!7546 = !DILocation(line: 943, column: 241, scope: !7543)
!7547 = !DILocation(line: 943, column: 239, scope: !7543)
!7548 = !DILocation(line: 943, column: 252, scope: !7543)
!7549 = !DILocation(line: 943, column: 256, scope: !7543)
!7550 = !DILocation(line: 943, column: 254, scope: !7543)
!7551 = !DILocation(line: 943, column: 249, scope: !7543)
!7552 = !DILocation(line: 943, column: 247, scope: !7543)
!7553 = !DILocation(line: 943, column: 269, scope: !7543)
!7554 = !DILocation(line: 943, column: 273, scope: !7543)
!7555 = !DILocation(line: 943, column: 271, scope: !7543)
!7556 = !DILocation(line: 943, column: 266, scope: !7543)
!7557 = !DILocation(line: 943, column: 264, scope: !7543)
!7558 = !DILocation(line: 943, column: 175, scope: !7543)
!7559 = !DILocation(line: 943, column: 290, scope: !7560)
!7560 = !DILexicalBlockFile(scope: !7521, file: !941, discriminator: 6)
!7561 = !DILocation(line: 943, column: 287, scope: !7560)
!7562 = !DILocation(line: 943, column: 298, scope: !7560)
!7563 = !DILocation(line: 943, column: 295, scope: !7560)
!7564 = !DILocation(line: 943, column: 293, scope: !7560)
!7565 = !DILocation(line: 943, column: 306, scope: !7560)
!7566 = !DILocation(line: 943, column: 310, scope: !7560)
!7567 = !DILocation(line: 943, column: 308, scope: !7560)
!7568 = !DILocation(line: 943, column: 303, scope: !7560)
!7569 = !DILocation(line: 943, column: 301, scope: !7560)
!7570 = !DILocation(line: 943, column: 323, scope: !7560)
!7571 = !DILocation(line: 943, column: 327, scope: !7560)
!7572 = !DILocation(line: 943, column: 325, scope: !7560)
!7573 = !DILocation(line: 943, column: 320, scope: !7560)
!7574 = !DILocation(line: 943, column: 318, scope: !7560)
!7575 = !DILocation(line: 943, column: 285, scope: !7560)
!7576 = !DILocation(line: 943, column: 175, scope: !7560)
!7577 = !DILocation(line: 943, column: 175, scope: !7578)
!7578 = !DILexicalBlockFile(scope: !7521, file: !941, discriminator: 7)
!7579 = !DILocation(line: 943, column: 171, scope: !7578)
!7580 = !DILocation(line: 943, column: 165, scope: !7578)
!7581 = !DILocation(line: 943, column: 161, scope: !7582)
!7582 = !DILexicalBlockFile(scope: !7521, file: !941, discriminator: 8)
!7583 = !DILocation(line: 943, column: 140, scope: !7582)
!7584 = distinct !{!7584, !7585}
!7585 = !DILocation(line: 943, column: 140, scope: !7517)
!7586 = !DILocation(line: 943, column: 345, scope: !7587)
!7587 = !DILexicalBlockFile(scope: !7517, file: !941, discriminator: 9)
!7588 = !DILocation(line: 943, column: 342, scope: !7587)
!7589 = !DILocation(line: 943, column: 359, scope: !7587)
!7590 = !DILocation(line: 943, column: 356, scope: !7587)
!7591 = !DILocation(line: 943, column: 367, scope: !7587)
!7592 = !DILocation(line: 943, column: 134, scope: !7593)
!7593 = !DILexicalBlockFile(scope: !7510, file: !941, discriminator: 10)
!7594 = !DILocation(line: 943, column: 114, scope: !7593)
!7595 = distinct !{!7595, !7596}
!7596 = !DILocation(line: 943, column: 114, scope: !7488)
!7597 = !DILocation(line: 943, column: 376, scope: !7598)
!7598 = !DILexicalBlockFile(scope: !7488, file: !941, discriminator: 11)
!7599 = !DILocation(line: 943, column: 369, scope: !7598)
!7600 = distinct !DISubprogram(name: "vsad8_c", scope: !941, file: !941, line: 942, type: !2756, isLocal: true, isDefinition: true, scopeLine: 942, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!7601 = !DILocalVariable(name: "c", arg: 1, scope: !7600, file: !941, line: 942, type: !2758)
!7602 = !DILocation(line: 942, column: 36, scope: !7600)
!7603 = !DILocalVariable(name: "s1", arg: 2, scope: !7600, file: !941, line: 942, type: !1167)
!7604 = !DILocation(line: 942, column: 48, scope: !7600)
!7605 = !DILocalVariable(name: "s2", arg: 3, scope: !7600, file: !941, line: 942, type: !1167)
!7606 = !DILocation(line: 942, column: 61, scope: !7600)
!7607 = !DILocalVariable(name: "stride", arg: 4, scope: !7600, file: !941, line: 942, type: !1792)
!7608 = !DILocation(line: 942, column: 75, scope: !7600)
!7609 = !DILocalVariable(name: "h", arg: 5, scope: !7600, file: !941, line: 942, type: !952)
!7610 = !DILocation(line: 942, column: 87, scope: !7600)
!7611 = !DILocalVariable(name: "score", scope: !7600, file: !941, line: 942, type: !952)
!7612 = !DILocation(line: 942, column: 96, scope: !7600)
!7613 = !DILocalVariable(name: "x", scope: !7600, file: !941, line: 942, type: !952)
!7614 = !DILocation(line: 942, column: 107, scope: !7600)
!7615 = !DILocalVariable(name: "y", scope: !7600, file: !941, line: 942, type: !952)
!7616 = !DILocation(line: 942, column: 110, scope: !7600)
!7617 = !DILocation(line: 942, column: 120, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7600, file: !941, line: 942, column: 113)
!7619 = !DILocation(line: 942, column: 118, scope: !7618)
!7620 = !DILocation(line: 942, column: 125, scope: !7621)
!7621 = !DILexicalBlockFile(scope: !7622, file: !941, discriminator: 1)
!7622 = distinct !DILexicalBlock(scope: !7618, file: !941, line: 942, column: 113)
!7623 = !DILocation(line: 942, column: 129, scope: !7621)
!7624 = !DILocation(line: 942, column: 127, scope: !7621)
!7625 = !DILocation(line: 942, column: 113, scope: !7621)
!7626 = !DILocation(line: 942, column: 146, scope: !7627)
!7627 = !DILexicalBlockFile(scope: !7628, file: !941, discriminator: 2)
!7628 = distinct !DILexicalBlock(scope: !7629, file: !941, line: 942, column: 139)
!7629 = distinct !DILexicalBlock(scope: !7622, file: !941, line: 942, column: 137)
!7630 = !DILocation(line: 942, column: 144, scope: !7627)
!7631 = !DILocation(line: 942, column: 151, scope: !7632)
!7632 = !DILexicalBlockFile(scope: !7633, file: !941, discriminator: 3)
!7633 = distinct !DILexicalBlock(scope: !7628, file: !941, line: 942, column: 139)
!7634 = !DILocation(line: 942, column: 153, scope: !7632)
!7635 = !DILocation(line: 942, column: 139, scope: !7632)
!7636 = !DILocation(line: 942, column: 177, scope: !7637)
!7637 = !DILexicalBlockFile(scope: !7633, file: !941, discriminator: 4)
!7638 = !DILocation(line: 942, column: 174, scope: !7637)
!7639 = !DILocation(line: 942, column: 185, scope: !7637)
!7640 = !DILocation(line: 942, column: 182, scope: !7637)
!7641 = !DILocation(line: 942, column: 180, scope: !7637)
!7642 = !DILocation(line: 942, column: 193, scope: !7637)
!7643 = !DILocation(line: 942, column: 197, scope: !7637)
!7644 = !DILocation(line: 942, column: 195, scope: !7637)
!7645 = !DILocation(line: 942, column: 190, scope: !7637)
!7646 = !DILocation(line: 942, column: 188, scope: !7637)
!7647 = !DILocation(line: 942, column: 210, scope: !7637)
!7648 = !DILocation(line: 942, column: 214, scope: !7637)
!7649 = !DILocation(line: 942, column: 212, scope: !7637)
!7650 = !DILocation(line: 942, column: 207, scope: !7637)
!7651 = !DILocation(line: 942, column: 205, scope: !7637)
!7652 = !DILocation(line: 942, column: 223, scope: !7637)
!7653 = !DILocation(line: 942, column: 173, scope: !7637)
!7654 = !DILocation(line: 942, column: 234, scope: !7655)
!7655 = !DILexicalBlockFile(scope: !7633, file: !941, discriminator: 5)
!7656 = !DILocation(line: 942, column: 231, scope: !7655)
!7657 = !DILocation(line: 942, column: 242, scope: !7655)
!7658 = !DILocation(line: 942, column: 239, scope: !7655)
!7659 = !DILocation(line: 942, column: 237, scope: !7655)
!7660 = !DILocation(line: 942, column: 250, scope: !7655)
!7661 = !DILocation(line: 942, column: 254, scope: !7655)
!7662 = !DILocation(line: 942, column: 252, scope: !7655)
!7663 = !DILocation(line: 942, column: 247, scope: !7655)
!7664 = !DILocation(line: 942, column: 245, scope: !7655)
!7665 = !DILocation(line: 942, column: 267, scope: !7655)
!7666 = !DILocation(line: 942, column: 271, scope: !7655)
!7667 = !DILocation(line: 942, column: 269, scope: !7655)
!7668 = !DILocation(line: 942, column: 264, scope: !7655)
!7669 = !DILocation(line: 942, column: 262, scope: !7655)
!7670 = !DILocation(line: 942, column: 173, scope: !7655)
!7671 = !DILocation(line: 942, column: 288, scope: !7672)
!7672 = !DILexicalBlockFile(scope: !7633, file: !941, discriminator: 6)
!7673 = !DILocation(line: 942, column: 285, scope: !7672)
!7674 = !DILocation(line: 942, column: 296, scope: !7672)
!7675 = !DILocation(line: 942, column: 293, scope: !7672)
!7676 = !DILocation(line: 942, column: 291, scope: !7672)
!7677 = !DILocation(line: 942, column: 304, scope: !7672)
!7678 = !DILocation(line: 942, column: 308, scope: !7672)
!7679 = !DILocation(line: 942, column: 306, scope: !7672)
!7680 = !DILocation(line: 942, column: 301, scope: !7672)
!7681 = !DILocation(line: 942, column: 299, scope: !7672)
!7682 = !DILocation(line: 942, column: 321, scope: !7672)
!7683 = !DILocation(line: 942, column: 325, scope: !7672)
!7684 = !DILocation(line: 942, column: 323, scope: !7672)
!7685 = !DILocation(line: 942, column: 318, scope: !7672)
!7686 = !DILocation(line: 942, column: 316, scope: !7672)
!7687 = !DILocation(line: 942, column: 283, scope: !7672)
!7688 = !DILocation(line: 942, column: 173, scope: !7672)
!7689 = !DILocation(line: 942, column: 173, scope: !7690)
!7690 = !DILexicalBlockFile(scope: !7633, file: !941, discriminator: 7)
!7691 = !DILocation(line: 942, column: 169, scope: !7690)
!7692 = !DILocation(line: 942, column: 163, scope: !7690)
!7693 = !DILocation(line: 942, column: 159, scope: !7694)
!7694 = !DILexicalBlockFile(scope: !7633, file: !941, discriminator: 8)
!7695 = !DILocation(line: 942, column: 139, scope: !7694)
!7696 = distinct !{!7696, !7697}
!7697 = !DILocation(line: 942, column: 139, scope: !7629)
!7698 = !DILocation(line: 942, column: 343, scope: !7699)
!7699 = !DILexicalBlockFile(scope: !7629, file: !941, discriminator: 9)
!7700 = !DILocation(line: 942, column: 340, scope: !7699)
!7701 = !DILocation(line: 942, column: 357, scope: !7699)
!7702 = !DILocation(line: 942, column: 354, scope: !7699)
!7703 = !DILocation(line: 942, column: 365, scope: !7699)
!7704 = !DILocation(line: 942, column: 133, scope: !7705)
!7705 = !DILexicalBlockFile(scope: !7622, file: !941, discriminator: 10)
!7706 = !DILocation(line: 942, column: 113, scope: !7705)
!7707 = distinct !{!7707, !7708}
!7708 = !DILocation(line: 942, column: 113, scope: !7600)
!7709 = !DILocation(line: 942, column: 374, scope: !7710)
!7710 = !DILexicalBlockFile(scope: !7600, file: !941, discriminator: 11)
!7711 = !DILocation(line: 942, column: 367, scope: !7710)
!7712 = distinct !DISubprogram(name: "vsad_intra16_c", scope: !941, file: !941, line: 924, type: !2756, isLocal: true, isDefinition: true, scopeLine: 924, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!7713 = !DILocalVariable(name: "c", arg: 1, scope: !7712, file: !941, line: 924, type: !2758)
!7714 = !DILocation(line: 924, column: 43, scope: !7712)
!7715 = !DILocalVariable(name: "s", arg: 2, scope: !7712, file: !941, line: 924, type: !1167)
!7716 = !DILocation(line: 924, column: 55, scope: !7712)
!7717 = !DILocalVariable(name: "dummy", arg: 3, scope: !7712, file: !941, line: 924, type: !1167)
!7718 = !DILocation(line: 924, column: 67, scope: !7712)
!7719 = !DILocalVariable(name: "stride", arg: 4, scope: !7712, file: !941, line: 924, type: !1792)
!7720 = !DILocation(line: 924, column: 84, scope: !7712)
!7721 = !DILocalVariable(name: "h", arg: 5, scope: !7712, file: !941, line: 924, type: !952)
!7722 = !DILocation(line: 924, column: 96, scope: !7712)
!7723 = !DILocalVariable(name: "score", scope: !7712, file: !941, line: 924, type: !952)
!7724 = !DILocation(line: 924, column: 105, scope: !7712)
!7725 = !DILocalVariable(name: "x", scope: !7712, file: !941, line: 924, type: !952)
!7726 = !DILocation(line: 924, column: 116, scope: !7712)
!7727 = !DILocalVariable(name: "y", scope: !7712, file: !941, line: 924, type: !952)
!7728 = !DILocation(line: 924, column: 119, scope: !7712)
!7729 = !DILocation(line: 924, column: 129, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7712, file: !941, line: 924, column: 122)
!7731 = !DILocation(line: 924, column: 127, scope: !7730)
!7732 = !DILocation(line: 924, column: 134, scope: !7733)
!7733 = !DILexicalBlockFile(scope: !7734, file: !941, discriminator: 1)
!7734 = distinct !DILexicalBlock(scope: !7730, file: !941, line: 924, column: 122)
!7735 = !DILocation(line: 924, column: 138, scope: !7733)
!7736 = !DILocation(line: 924, column: 136, scope: !7733)
!7737 = !DILocation(line: 924, column: 122, scope: !7733)
!7738 = !DILocation(line: 924, column: 155, scope: !7739)
!7739 = !DILexicalBlockFile(scope: !7740, file: !941, discriminator: 2)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !941, line: 924, column: 148)
!7741 = distinct !DILexicalBlock(scope: !7734, file: !941, line: 924, column: 146)
!7742 = !DILocation(line: 924, column: 153, scope: !7739)
!7743 = !DILocation(line: 924, column: 160, scope: !7744)
!7744 = !DILexicalBlockFile(scope: !7745, file: !941, discriminator: 3)
!7745 = distinct !DILexicalBlock(scope: !7740, file: !941, line: 924, column: 148)
!7746 = !DILocation(line: 924, column: 162, scope: !7744)
!7747 = !DILocation(line: 924, column: 148, scope: !7744)
!7748 = !DILocation(line: 924, column: 191, scope: !7749)
!7749 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 4)
!7750 = distinct !DILexicalBlock(scope: !7745, file: !941, line: 924, column: 176)
!7751 = !DILocation(line: 924, column: 189, scope: !7749)
!7752 = !DILocation(line: 924, column: 198, scope: !7749)
!7753 = !DILocation(line: 924, column: 202, scope: !7749)
!7754 = !DILocation(line: 924, column: 200, scope: !7749)
!7755 = !DILocation(line: 924, column: 196, scope: !7749)
!7756 = !DILocation(line: 924, column: 194, scope: !7749)
!7757 = !DILocation(line: 924, column: 211, scope: !7749)
!7758 = !DILocation(line: 924, column: 188, scope: !7749)
!7759 = !DILocation(line: 924, column: 221, scope: !7760)
!7760 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 5)
!7761 = !DILocation(line: 924, column: 219, scope: !7760)
!7762 = !DILocation(line: 924, column: 228, scope: !7760)
!7763 = !DILocation(line: 924, column: 232, scope: !7760)
!7764 = !DILocation(line: 924, column: 230, scope: !7760)
!7765 = !DILocation(line: 924, column: 226, scope: !7760)
!7766 = !DILocation(line: 924, column: 224, scope: !7760)
!7767 = !DILocation(line: 924, column: 188, scope: !7760)
!7768 = !DILocation(line: 924, column: 248, scope: !7769)
!7769 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 6)
!7770 = !DILocation(line: 924, column: 246, scope: !7769)
!7771 = !DILocation(line: 924, column: 255, scope: !7769)
!7772 = !DILocation(line: 924, column: 259, scope: !7769)
!7773 = !DILocation(line: 924, column: 257, scope: !7769)
!7774 = !DILocation(line: 924, column: 253, scope: !7769)
!7775 = !DILocation(line: 924, column: 251, scope: !7769)
!7776 = !DILocation(line: 924, column: 244, scope: !7769)
!7777 = !DILocation(line: 924, column: 188, scope: !7769)
!7778 = !DILocation(line: 924, column: 188, scope: !7779)
!7779 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 7)
!7780 = !DILocation(line: 924, column: 276, scope: !7779)
!7781 = !DILocation(line: 924, column: 278, scope: !7779)
!7782 = !DILocation(line: 924, column: 274, scope: !7779)
!7783 = !DILocation(line: 924, column: 287, scope: !7779)
!7784 = !DILocation(line: 924, column: 291, scope: !7779)
!7785 = !DILocation(line: 924, column: 289, scope: !7779)
!7786 = !DILocation(line: 924, column: 298, scope: !7779)
!7787 = !DILocation(line: 924, column: 285, scope: !7779)
!7788 = !DILocation(line: 924, column: 283, scope: !7779)
!7789 = !DILocation(line: 924, column: 304, scope: !7779)
!7790 = !DILocation(line: 924, column: 273, scope: !7779)
!7791 = !DILocation(line: 924, column: 314, scope: !7792)
!7792 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 8)
!7793 = !DILocation(line: 924, column: 316, scope: !7792)
!7794 = !DILocation(line: 924, column: 312, scope: !7792)
!7795 = !DILocation(line: 924, column: 325, scope: !7792)
!7796 = !DILocation(line: 924, column: 329, scope: !7792)
!7797 = !DILocation(line: 924, column: 327, scope: !7792)
!7798 = !DILocation(line: 924, column: 336, scope: !7792)
!7799 = !DILocation(line: 924, column: 323, scope: !7792)
!7800 = !DILocation(line: 924, column: 321, scope: !7792)
!7801 = !DILocation(line: 924, column: 273, scope: !7792)
!7802 = !DILocation(line: 924, column: 349, scope: !7803)
!7803 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 9)
!7804 = !DILocation(line: 924, column: 351, scope: !7803)
!7805 = !DILocation(line: 924, column: 347, scope: !7803)
!7806 = !DILocation(line: 924, column: 360, scope: !7803)
!7807 = !DILocation(line: 924, column: 364, scope: !7803)
!7808 = !DILocation(line: 924, column: 362, scope: !7803)
!7809 = !DILocation(line: 924, column: 371, scope: !7803)
!7810 = !DILocation(line: 924, column: 358, scope: !7803)
!7811 = !DILocation(line: 924, column: 356, scope: !7803)
!7812 = !DILocation(line: 924, column: 345, scope: !7803)
!7813 = !DILocation(line: 924, column: 273, scope: !7803)
!7814 = !DILocation(line: 924, column: 273, scope: !7815)
!7815 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 10)
!7816 = !DILocation(line: 924, column: 270, scope: !7815)
!7817 = !DILocation(line: 924, column: 385, scope: !7815)
!7818 = !DILocation(line: 924, column: 387, scope: !7815)
!7819 = !DILocation(line: 924, column: 383, scope: !7815)
!7820 = !DILocation(line: 924, column: 396, scope: !7815)
!7821 = !DILocation(line: 924, column: 398, scope: !7815)
!7822 = !DILocation(line: 924, column: 404, scope: !7815)
!7823 = !DILocation(line: 924, column: 402, scope: !7815)
!7824 = !DILocation(line: 924, column: 394, scope: !7815)
!7825 = !DILocation(line: 924, column: 392, scope: !7815)
!7826 = !DILocation(line: 924, column: 413, scope: !7815)
!7827 = !DILocation(line: 924, column: 382, scope: !7815)
!7828 = !DILocation(line: 924, column: 423, scope: !7829)
!7829 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 11)
!7830 = !DILocation(line: 924, column: 425, scope: !7829)
!7831 = !DILocation(line: 924, column: 421, scope: !7829)
!7832 = !DILocation(line: 924, column: 434, scope: !7829)
!7833 = !DILocation(line: 924, column: 436, scope: !7829)
!7834 = !DILocation(line: 924, column: 442, scope: !7829)
!7835 = !DILocation(line: 924, column: 440, scope: !7829)
!7836 = !DILocation(line: 924, column: 432, scope: !7829)
!7837 = !DILocation(line: 924, column: 430, scope: !7829)
!7838 = !DILocation(line: 924, column: 382, scope: !7829)
!7839 = !DILocation(line: 924, column: 458, scope: !7840)
!7840 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 12)
!7841 = !DILocation(line: 924, column: 460, scope: !7840)
!7842 = !DILocation(line: 924, column: 456, scope: !7840)
!7843 = !DILocation(line: 924, column: 469, scope: !7840)
!7844 = !DILocation(line: 924, column: 471, scope: !7840)
!7845 = !DILocation(line: 924, column: 477, scope: !7840)
!7846 = !DILocation(line: 924, column: 475, scope: !7840)
!7847 = !DILocation(line: 924, column: 467, scope: !7840)
!7848 = !DILocation(line: 924, column: 465, scope: !7840)
!7849 = !DILocation(line: 924, column: 454, scope: !7840)
!7850 = !DILocation(line: 924, column: 382, scope: !7840)
!7851 = !DILocation(line: 924, column: 382, scope: !7852)
!7852 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 13)
!7853 = !DILocation(line: 924, column: 379, scope: !7852)
!7854 = !DILocation(line: 924, column: 494, scope: !7852)
!7855 = !DILocation(line: 924, column: 496, scope: !7852)
!7856 = !DILocation(line: 924, column: 492, scope: !7852)
!7857 = !DILocation(line: 924, column: 505, scope: !7852)
!7858 = !DILocation(line: 924, column: 507, scope: !7852)
!7859 = !DILocation(line: 924, column: 513, scope: !7852)
!7860 = !DILocation(line: 924, column: 511, scope: !7852)
!7861 = !DILocation(line: 924, column: 503, scope: !7852)
!7862 = !DILocation(line: 924, column: 501, scope: !7852)
!7863 = !DILocation(line: 924, column: 522, scope: !7852)
!7864 = !DILocation(line: 924, column: 491, scope: !7852)
!7865 = !DILocation(line: 924, column: 532, scope: !7866)
!7866 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 14)
!7867 = !DILocation(line: 924, column: 534, scope: !7866)
!7868 = !DILocation(line: 924, column: 530, scope: !7866)
!7869 = !DILocation(line: 924, column: 543, scope: !7866)
!7870 = !DILocation(line: 924, column: 545, scope: !7866)
!7871 = !DILocation(line: 924, column: 551, scope: !7866)
!7872 = !DILocation(line: 924, column: 549, scope: !7866)
!7873 = !DILocation(line: 924, column: 541, scope: !7866)
!7874 = !DILocation(line: 924, column: 539, scope: !7866)
!7875 = !DILocation(line: 924, column: 491, scope: !7866)
!7876 = !DILocation(line: 924, column: 567, scope: !7877)
!7877 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 15)
!7878 = !DILocation(line: 924, column: 569, scope: !7877)
!7879 = !DILocation(line: 924, column: 565, scope: !7877)
!7880 = !DILocation(line: 924, column: 578, scope: !7877)
!7881 = !DILocation(line: 924, column: 580, scope: !7877)
!7882 = !DILocation(line: 924, column: 586, scope: !7877)
!7883 = !DILocation(line: 924, column: 584, scope: !7877)
!7884 = !DILocation(line: 924, column: 576, scope: !7877)
!7885 = !DILocation(line: 924, column: 574, scope: !7877)
!7886 = !DILocation(line: 924, column: 563, scope: !7877)
!7887 = !DILocation(line: 924, column: 491, scope: !7877)
!7888 = !DILocation(line: 924, column: 491, scope: !7889)
!7889 = !DILexicalBlockFile(scope: !7750, file: !941, discriminator: 16)
!7890 = !DILocation(line: 924, column: 488, scope: !7889)
!7891 = !DILocation(line: 924, column: 184, scope: !7889)
!7892 = !DILocation(line: 924, column: 598, scope: !7889)
!7893 = !DILocation(line: 924, column: 170, scope: !7894)
!7894 = !DILexicalBlockFile(scope: !7745, file: !941, discriminator: 17)
!7895 = !DILocation(line: 924, column: 148, scope: !7894)
!7896 = distinct !{!7896, !7897}
!7897 = !DILocation(line: 924, column: 148, scope: !7741)
!7898 = !DILocation(line: 924, column: 605, scope: !7899)
!7899 = !DILexicalBlockFile(scope: !7741, file: !941, discriminator: 18)
!7900 = !DILocation(line: 924, column: 602, scope: !7899)
!7901 = !DILocation(line: 924, column: 613, scope: !7899)
!7902 = !DILocation(line: 924, column: 142, scope: !7903)
!7903 = !DILexicalBlockFile(scope: !7734, file: !941, discriminator: 19)
!7904 = !DILocation(line: 924, column: 122, scope: !7903)
!7905 = distinct !{!7905, !7906}
!7906 = !DILocation(line: 924, column: 122, scope: !7712)
!7907 = !DILocation(line: 924, column: 622, scope: !7908)
!7908 = !DILexicalBlockFile(scope: !7712, file: !941, discriminator: 20)
!7909 = !DILocation(line: 924, column: 615, scope: !7908)
!7910 = distinct !DISubprogram(name: "vsad_intra8_c", scope: !941, file: !941, line: 923, type: !2756, isLocal: true, isDefinition: true, scopeLine: 923, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!7911 = !DILocalVariable(name: "c", arg: 1, scope: !7910, file: !941, line: 923, type: !2758)
!7912 = !DILocation(line: 923, column: 42, scope: !7910)
!7913 = !DILocalVariable(name: "s", arg: 2, scope: !7910, file: !941, line: 923, type: !1167)
!7914 = !DILocation(line: 923, column: 54, scope: !7910)
!7915 = !DILocalVariable(name: "dummy", arg: 3, scope: !7910, file: !941, line: 923, type: !1167)
!7916 = !DILocation(line: 923, column: 66, scope: !7910)
!7917 = !DILocalVariable(name: "stride", arg: 4, scope: !7910, file: !941, line: 923, type: !1792)
!7918 = !DILocation(line: 923, column: 83, scope: !7910)
!7919 = !DILocalVariable(name: "h", arg: 5, scope: !7910, file: !941, line: 923, type: !952)
!7920 = !DILocation(line: 923, column: 95, scope: !7910)
!7921 = !DILocalVariable(name: "score", scope: !7910, file: !941, line: 923, type: !952)
!7922 = !DILocation(line: 923, column: 104, scope: !7910)
!7923 = !DILocalVariable(name: "x", scope: !7910, file: !941, line: 923, type: !952)
!7924 = !DILocation(line: 923, column: 115, scope: !7910)
!7925 = !DILocalVariable(name: "y", scope: !7910, file: !941, line: 923, type: !952)
!7926 = !DILocation(line: 923, column: 118, scope: !7910)
!7927 = !DILocation(line: 923, column: 128, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7910, file: !941, line: 923, column: 121)
!7929 = !DILocation(line: 923, column: 126, scope: !7928)
!7930 = !DILocation(line: 923, column: 133, scope: !7931)
!7931 = !DILexicalBlockFile(scope: !7932, file: !941, discriminator: 1)
!7932 = distinct !DILexicalBlock(scope: !7928, file: !941, line: 923, column: 121)
!7933 = !DILocation(line: 923, column: 137, scope: !7931)
!7934 = !DILocation(line: 923, column: 135, scope: !7931)
!7935 = !DILocation(line: 923, column: 121, scope: !7931)
!7936 = !DILocation(line: 923, column: 154, scope: !7937)
!7937 = !DILexicalBlockFile(scope: !7938, file: !941, discriminator: 2)
!7938 = distinct !DILexicalBlock(scope: !7939, file: !941, line: 923, column: 147)
!7939 = distinct !DILexicalBlock(scope: !7932, file: !941, line: 923, column: 145)
!7940 = !DILocation(line: 923, column: 152, scope: !7937)
!7941 = !DILocation(line: 923, column: 159, scope: !7942)
!7942 = !DILexicalBlockFile(scope: !7943, file: !941, discriminator: 3)
!7943 = distinct !DILexicalBlock(scope: !7938, file: !941, line: 923, column: 147)
!7944 = !DILocation(line: 923, column: 161, scope: !7942)
!7945 = !DILocation(line: 923, column: 147, scope: !7942)
!7946 = !DILocation(line: 923, column: 189, scope: !7947)
!7947 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 4)
!7948 = distinct !DILexicalBlock(scope: !7943, file: !941, line: 923, column: 174)
!7949 = !DILocation(line: 923, column: 187, scope: !7947)
!7950 = !DILocation(line: 923, column: 196, scope: !7947)
!7951 = !DILocation(line: 923, column: 200, scope: !7947)
!7952 = !DILocation(line: 923, column: 198, scope: !7947)
!7953 = !DILocation(line: 923, column: 194, scope: !7947)
!7954 = !DILocation(line: 923, column: 192, scope: !7947)
!7955 = !DILocation(line: 923, column: 209, scope: !7947)
!7956 = !DILocation(line: 923, column: 186, scope: !7947)
!7957 = !DILocation(line: 923, column: 219, scope: !7958)
!7958 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 5)
!7959 = !DILocation(line: 923, column: 217, scope: !7958)
!7960 = !DILocation(line: 923, column: 226, scope: !7958)
!7961 = !DILocation(line: 923, column: 230, scope: !7958)
!7962 = !DILocation(line: 923, column: 228, scope: !7958)
!7963 = !DILocation(line: 923, column: 224, scope: !7958)
!7964 = !DILocation(line: 923, column: 222, scope: !7958)
!7965 = !DILocation(line: 923, column: 186, scope: !7958)
!7966 = !DILocation(line: 923, column: 246, scope: !7967)
!7967 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 6)
!7968 = !DILocation(line: 923, column: 244, scope: !7967)
!7969 = !DILocation(line: 923, column: 253, scope: !7967)
!7970 = !DILocation(line: 923, column: 257, scope: !7967)
!7971 = !DILocation(line: 923, column: 255, scope: !7967)
!7972 = !DILocation(line: 923, column: 251, scope: !7967)
!7973 = !DILocation(line: 923, column: 249, scope: !7967)
!7974 = !DILocation(line: 923, column: 242, scope: !7967)
!7975 = !DILocation(line: 923, column: 186, scope: !7967)
!7976 = !DILocation(line: 923, column: 186, scope: !7977)
!7977 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 7)
!7978 = !DILocation(line: 923, column: 274, scope: !7977)
!7979 = !DILocation(line: 923, column: 276, scope: !7977)
!7980 = !DILocation(line: 923, column: 272, scope: !7977)
!7981 = !DILocation(line: 923, column: 285, scope: !7977)
!7982 = !DILocation(line: 923, column: 289, scope: !7977)
!7983 = !DILocation(line: 923, column: 287, scope: !7977)
!7984 = !DILocation(line: 923, column: 296, scope: !7977)
!7985 = !DILocation(line: 923, column: 283, scope: !7977)
!7986 = !DILocation(line: 923, column: 281, scope: !7977)
!7987 = !DILocation(line: 923, column: 302, scope: !7977)
!7988 = !DILocation(line: 923, column: 271, scope: !7977)
!7989 = !DILocation(line: 923, column: 312, scope: !7990)
!7990 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 8)
!7991 = !DILocation(line: 923, column: 314, scope: !7990)
!7992 = !DILocation(line: 923, column: 310, scope: !7990)
!7993 = !DILocation(line: 923, column: 323, scope: !7990)
!7994 = !DILocation(line: 923, column: 327, scope: !7990)
!7995 = !DILocation(line: 923, column: 325, scope: !7990)
!7996 = !DILocation(line: 923, column: 334, scope: !7990)
!7997 = !DILocation(line: 923, column: 321, scope: !7990)
!7998 = !DILocation(line: 923, column: 319, scope: !7990)
!7999 = !DILocation(line: 923, column: 271, scope: !7990)
!8000 = !DILocation(line: 923, column: 347, scope: !8001)
!8001 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 9)
!8002 = !DILocation(line: 923, column: 349, scope: !8001)
!8003 = !DILocation(line: 923, column: 345, scope: !8001)
!8004 = !DILocation(line: 923, column: 358, scope: !8001)
!8005 = !DILocation(line: 923, column: 362, scope: !8001)
!8006 = !DILocation(line: 923, column: 360, scope: !8001)
!8007 = !DILocation(line: 923, column: 369, scope: !8001)
!8008 = !DILocation(line: 923, column: 356, scope: !8001)
!8009 = !DILocation(line: 923, column: 354, scope: !8001)
!8010 = !DILocation(line: 923, column: 343, scope: !8001)
!8011 = !DILocation(line: 923, column: 271, scope: !8001)
!8012 = !DILocation(line: 923, column: 271, scope: !8013)
!8013 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 10)
!8014 = !DILocation(line: 923, column: 268, scope: !8013)
!8015 = !DILocation(line: 923, column: 383, scope: !8013)
!8016 = !DILocation(line: 923, column: 385, scope: !8013)
!8017 = !DILocation(line: 923, column: 381, scope: !8013)
!8018 = !DILocation(line: 923, column: 394, scope: !8013)
!8019 = !DILocation(line: 923, column: 396, scope: !8013)
!8020 = !DILocation(line: 923, column: 402, scope: !8013)
!8021 = !DILocation(line: 923, column: 400, scope: !8013)
!8022 = !DILocation(line: 923, column: 392, scope: !8013)
!8023 = !DILocation(line: 923, column: 390, scope: !8013)
!8024 = !DILocation(line: 923, column: 411, scope: !8013)
!8025 = !DILocation(line: 923, column: 380, scope: !8013)
!8026 = !DILocation(line: 923, column: 421, scope: !8027)
!8027 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 11)
!8028 = !DILocation(line: 923, column: 423, scope: !8027)
!8029 = !DILocation(line: 923, column: 419, scope: !8027)
!8030 = !DILocation(line: 923, column: 432, scope: !8027)
!8031 = !DILocation(line: 923, column: 434, scope: !8027)
!8032 = !DILocation(line: 923, column: 440, scope: !8027)
!8033 = !DILocation(line: 923, column: 438, scope: !8027)
!8034 = !DILocation(line: 923, column: 430, scope: !8027)
!8035 = !DILocation(line: 923, column: 428, scope: !8027)
!8036 = !DILocation(line: 923, column: 380, scope: !8027)
!8037 = !DILocation(line: 923, column: 456, scope: !8038)
!8038 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 12)
!8039 = !DILocation(line: 923, column: 458, scope: !8038)
!8040 = !DILocation(line: 923, column: 454, scope: !8038)
!8041 = !DILocation(line: 923, column: 467, scope: !8038)
!8042 = !DILocation(line: 923, column: 469, scope: !8038)
!8043 = !DILocation(line: 923, column: 475, scope: !8038)
!8044 = !DILocation(line: 923, column: 473, scope: !8038)
!8045 = !DILocation(line: 923, column: 465, scope: !8038)
!8046 = !DILocation(line: 923, column: 463, scope: !8038)
!8047 = !DILocation(line: 923, column: 452, scope: !8038)
!8048 = !DILocation(line: 923, column: 380, scope: !8038)
!8049 = !DILocation(line: 923, column: 380, scope: !8050)
!8050 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 13)
!8051 = !DILocation(line: 923, column: 377, scope: !8050)
!8052 = !DILocation(line: 923, column: 492, scope: !8050)
!8053 = !DILocation(line: 923, column: 494, scope: !8050)
!8054 = !DILocation(line: 923, column: 490, scope: !8050)
!8055 = !DILocation(line: 923, column: 503, scope: !8050)
!8056 = !DILocation(line: 923, column: 505, scope: !8050)
!8057 = !DILocation(line: 923, column: 511, scope: !8050)
!8058 = !DILocation(line: 923, column: 509, scope: !8050)
!8059 = !DILocation(line: 923, column: 501, scope: !8050)
!8060 = !DILocation(line: 923, column: 499, scope: !8050)
!8061 = !DILocation(line: 923, column: 520, scope: !8050)
!8062 = !DILocation(line: 923, column: 489, scope: !8050)
!8063 = !DILocation(line: 923, column: 530, scope: !8064)
!8064 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 14)
!8065 = !DILocation(line: 923, column: 532, scope: !8064)
!8066 = !DILocation(line: 923, column: 528, scope: !8064)
!8067 = !DILocation(line: 923, column: 541, scope: !8064)
!8068 = !DILocation(line: 923, column: 543, scope: !8064)
!8069 = !DILocation(line: 923, column: 549, scope: !8064)
!8070 = !DILocation(line: 923, column: 547, scope: !8064)
!8071 = !DILocation(line: 923, column: 539, scope: !8064)
!8072 = !DILocation(line: 923, column: 537, scope: !8064)
!8073 = !DILocation(line: 923, column: 489, scope: !8064)
!8074 = !DILocation(line: 923, column: 565, scope: !8075)
!8075 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 15)
!8076 = !DILocation(line: 923, column: 567, scope: !8075)
!8077 = !DILocation(line: 923, column: 563, scope: !8075)
!8078 = !DILocation(line: 923, column: 576, scope: !8075)
!8079 = !DILocation(line: 923, column: 578, scope: !8075)
!8080 = !DILocation(line: 923, column: 584, scope: !8075)
!8081 = !DILocation(line: 923, column: 582, scope: !8075)
!8082 = !DILocation(line: 923, column: 574, scope: !8075)
!8083 = !DILocation(line: 923, column: 572, scope: !8075)
!8084 = !DILocation(line: 923, column: 561, scope: !8075)
!8085 = !DILocation(line: 923, column: 489, scope: !8075)
!8086 = !DILocation(line: 923, column: 489, scope: !8087)
!8087 = !DILexicalBlockFile(scope: !7948, file: !941, discriminator: 16)
!8088 = !DILocation(line: 923, column: 486, scope: !8087)
!8089 = !DILocation(line: 923, column: 182, scope: !8087)
!8090 = !DILocation(line: 923, column: 596, scope: !8087)
!8091 = !DILocation(line: 923, column: 168, scope: !8092)
!8092 = !DILexicalBlockFile(scope: !7943, file: !941, discriminator: 17)
!8093 = !DILocation(line: 923, column: 147, scope: !8092)
!8094 = distinct !{!8094, !8095}
!8095 = !DILocation(line: 923, column: 147, scope: !7939)
!8096 = !DILocation(line: 923, column: 603, scope: !8097)
!8097 = !DILexicalBlockFile(scope: !7939, file: !941, discriminator: 18)
!8098 = !DILocation(line: 923, column: 600, scope: !8097)
!8099 = !DILocation(line: 923, column: 611, scope: !8097)
!8100 = !DILocation(line: 923, column: 141, scope: !8101)
!8101 = !DILexicalBlockFile(scope: !7932, file: !941, discriminator: 19)
!8102 = !DILocation(line: 923, column: 121, scope: !8101)
!8103 = distinct !{!8103, !8104}
!8104 = !DILocation(line: 923, column: 121, scope: !7910)
!8105 = !DILocation(line: 923, column: 620, scope: !8106)
!8106 = !DILexicalBlockFile(scope: !7910, file: !941, discriminator: 20)
!8107 = !DILocation(line: 923, column: 613, scope: !8106)
!8108 = distinct !DISubprogram(name: "vsse16_c", scope: !941, file: !941, line: 984, type: !2756, isLocal: true, isDefinition: true, scopeLine: 984, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!8109 = !DILocalVariable(name: "c", arg: 1, scope: !8108, file: !941, line: 984, type: !2758)
!8110 = !DILocation(line: 984, column: 37, scope: !8108)
!8111 = !DILocalVariable(name: "s1", arg: 2, scope: !8108, file: !941, line: 984, type: !1167)
!8112 = !DILocation(line: 984, column: 49, scope: !8108)
!8113 = !DILocalVariable(name: "s2", arg: 3, scope: !8108, file: !941, line: 984, type: !1167)
!8114 = !DILocation(line: 984, column: 62, scope: !8108)
!8115 = !DILocalVariable(name: "stride", arg: 4, scope: !8108, file: !941, line: 984, type: !1792)
!8116 = !DILocation(line: 984, column: 76, scope: !8108)
!8117 = !DILocalVariable(name: "h", arg: 5, scope: !8108, file: !941, line: 984, type: !952)
!8118 = !DILocation(line: 984, column: 88, scope: !8108)
!8119 = !DILocalVariable(name: "score", scope: !8108, file: !941, line: 984, type: !952)
!8120 = !DILocation(line: 984, column: 97, scope: !8108)
!8121 = !DILocalVariable(name: "x", scope: !8108, file: !941, line: 984, type: !952)
!8122 = !DILocation(line: 984, column: 108, scope: !8108)
!8123 = !DILocalVariable(name: "y", scope: !8108, file: !941, line: 984, type: !952)
!8124 = !DILocation(line: 984, column: 111, scope: !8108)
!8125 = !DILocation(line: 984, column: 121, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8108, file: !941, line: 984, column: 114)
!8127 = !DILocation(line: 984, column: 119, scope: !8126)
!8128 = !DILocation(line: 984, column: 126, scope: !8129)
!8129 = !DILexicalBlockFile(scope: !8130, file: !941, discriminator: 1)
!8130 = distinct !DILexicalBlock(scope: !8126, file: !941, line: 984, column: 114)
!8131 = !DILocation(line: 984, column: 130, scope: !8129)
!8132 = !DILocation(line: 984, column: 128, scope: !8129)
!8133 = !DILocation(line: 984, column: 114, scope: !8129)
!8134 = !DILocation(line: 984, column: 147, scope: !8135)
!8135 = !DILexicalBlockFile(scope: !8136, file: !941, discriminator: 2)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !941, line: 984, column: 140)
!8137 = distinct !DILexicalBlock(scope: !8130, file: !941, line: 984, column: 138)
!8138 = !DILocation(line: 984, column: 145, scope: !8135)
!8139 = !DILocation(line: 984, column: 152, scope: !8140)
!8140 = !DILexicalBlockFile(scope: !8141, file: !941, discriminator: 3)
!8141 = distinct !DILexicalBlock(scope: !8136, file: !941, line: 984, column: 140)
!8142 = !DILocation(line: 984, column: 154, scope: !8140)
!8143 = !DILocation(line: 984, column: 140, scope: !8140)
!8144 = !DILocation(line: 984, column: 179, scope: !8145)
!8145 = !DILexicalBlockFile(scope: !8141, file: !941, discriminator: 4)
!8146 = !DILocation(line: 984, column: 176, scope: !8145)
!8147 = !DILocation(line: 984, column: 187, scope: !8145)
!8148 = !DILocation(line: 984, column: 184, scope: !8145)
!8149 = !DILocation(line: 984, column: 182, scope: !8145)
!8150 = !DILocation(line: 984, column: 195, scope: !8145)
!8151 = !DILocation(line: 984, column: 199, scope: !8145)
!8152 = !DILocation(line: 984, column: 197, scope: !8145)
!8153 = !DILocation(line: 984, column: 192, scope: !8145)
!8154 = !DILocation(line: 984, column: 190, scope: !8145)
!8155 = !DILocation(line: 984, column: 212, scope: !8145)
!8156 = !DILocation(line: 984, column: 216, scope: !8145)
!8157 = !DILocation(line: 984, column: 214, scope: !8145)
!8158 = !DILocation(line: 984, column: 209, scope: !8145)
!8159 = !DILocation(line: 984, column: 207, scope: !8145)
!8160 = !DILocation(line: 984, column: 231, scope: !8145)
!8161 = !DILocation(line: 984, column: 228, scope: !8145)
!8162 = !DILocation(line: 984, column: 239, scope: !8145)
!8163 = !DILocation(line: 984, column: 236, scope: !8145)
!8164 = !DILocation(line: 984, column: 234, scope: !8145)
!8165 = !DILocation(line: 984, column: 247, scope: !8145)
!8166 = !DILocation(line: 984, column: 251, scope: !8145)
!8167 = !DILocation(line: 984, column: 249, scope: !8145)
!8168 = !DILocation(line: 984, column: 244, scope: !8145)
!8169 = !DILocation(line: 984, column: 242, scope: !8145)
!8170 = !DILocation(line: 984, column: 264, scope: !8145)
!8171 = !DILocation(line: 984, column: 268, scope: !8145)
!8172 = !DILocation(line: 984, column: 266, scope: !8145)
!8173 = !DILocation(line: 984, column: 261, scope: !8145)
!8174 = !DILocation(line: 984, column: 259, scope: !8145)
!8175 = !DILocation(line: 984, column: 225, scope: !8145)
!8176 = !DILocation(line: 984, column: 171, scope: !8145)
!8177 = !DILocation(line: 984, column: 165, scope: !8145)
!8178 = !DILocation(line: 984, column: 161, scope: !8179)
!8179 = !DILexicalBlockFile(scope: !8141, file: !941, discriminator: 5)
!8180 = !DILocation(line: 984, column: 140, scope: !8179)
!8181 = distinct !{!8181, !8182}
!8182 = !DILocation(line: 984, column: 140, scope: !8137)
!8183 = !DILocation(line: 984, column: 285, scope: !8184)
!8184 = !DILexicalBlockFile(scope: !8137, file: !941, discriminator: 6)
!8185 = !DILocation(line: 984, column: 282, scope: !8184)
!8186 = !DILocation(line: 984, column: 299, scope: !8184)
!8187 = !DILocation(line: 984, column: 296, scope: !8184)
!8188 = !DILocation(line: 984, column: 307, scope: !8184)
!8189 = !DILocation(line: 984, column: 134, scope: !8190)
!8190 = !DILexicalBlockFile(scope: !8130, file: !941, discriminator: 7)
!8191 = !DILocation(line: 984, column: 114, scope: !8190)
!8192 = distinct !{!8192, !8193}
!8193 = !DILocation(line: 984, column: 114, scope: !8108)
!8194 = !DILocation(line: 984, column: 316, scope: !8195)
!8195 = !DILexicalBlockFile(scope: !8108, file: !941, discriminator: 8)
!8196 = !DILocation(line: 984, column: 309, scope: !8195)
!8197 = distinct !DISubprogram(name: "vsse8_c", scope: !941, file: !941, line: 983, type: !2756, isLocal: true, isDefinition: true, scopeLine: 983, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!8198 = !DILocalVariable(name: "c", arg: 1, scope: !8197, file: !941, line: 983, type: !2758)
!8199 = !DILocation(line: 983, column: 36, scope: !8197)
!8200 = !DILocalVariable(name: "s1", arg: 2, scope: !8197, file: !941, line: 983, type: !1167)
!8201 = !DILocation(line: 983, column: 48, scope: !8197)
!8202 = !DILocalVariable(name: "s2", arg: 3, scope: !8197, file: !941, line: 983, type: !1167)
!8203 = !DILocation(line: 983, column: 61, scope: !8197)
!8204 = !DILocalVariable(name: "stride", arg: 4, scope: !8197, file: !941, line: 983, type: !1792)
!8205 = !DILocation(line: 983, column: 75, scope: !8197)
!8206 = !DILocalVariable(name: "h", arg: 5, scope: !8197, file: !941, line: 983, type: !952)
!8207 = !DILocation(line: 983, column: 87, scope: !8197)
!8208 = !DILocalVariable(name: "score", scope: !8197, file: !941, line: 983, type: !952)
!8209 = !DILocation(line: 983, column: 96, scope: !8197)
!8210 = !DILocalVariable(name: "x", scope: !8197, file: !941, line: 983, type: !952)
!8211 = !DILocation(line: 983, column: 107, scope: !8197)
!8212 = !DILocalVariable(name: "y", scope: !8197, file: !941, line: 983, type: !952)
!8213 = !DILocation(line: 983, column: 110, scope: !8197)
!8214 = !DILocation(line: 983, column: 120, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8197, file: !941, line: 983, column: 113)
!8216 = !DILocation(line: 983, column: 118, scope: !8215)
!8217 = !DILocation(line: 983, column: 125, scope: !8218)
!8218 = !DILexicalBlockFile(scope: !8219, file: !941, discriminator: 1)
!8219 = distinct !DILexicalBlock(scope: !8215, file: !941, line: 983, column: 113)
!8220 = !DILocation(line: 983, column: 129, scope: !8218)
!8221 = !DILocation(line: 983, column: 127, scope: !8218)
!8222 = !DILocation(line: 983, column: 113, scope: !8218)
!8223 = !DILocation(line: 983, column: 146, scope: !8224)
!8224 = !DILexicalBlockFile(scope: !8225, file: !941, discriminator: 2)
!8225 = distinct !DILexicalBlock(scope: !8226, file: !941, line: 983, column: 139)
!8226 = distinct !DILexicalBlock(scope: !8219, file: !941, line: 983, column: 137)
!8227 = !DILocation(line: 983, column: 144, scope: !8224)
!8228 = !DILocation(line: 983, column: 151, scope: !8229)
!8229 = !DILexicalBlockFile(scope: !8230, file: !941, discriminator: 3)
!8230 = distinct !DILexicalBlock(scope: !8225, file: !941, line: 983, column: 139)
!8231 = !DILocation(line: 983, column: 153, scope: !8229)
!8232 = !DILocation(line: 983, column: 139, scope: !8229)
!8233 = !DILocation(line: 983, column: 177, scope: !8234)
!8234 = !DILexicalBlockFile(scope: !8230, file: !941, discriminator: 4)
!8235 = !DILocation(line: 983, column: 174, scope: !8234)
!8236 = !DILocation(line: 983, column: 185, scope: !8234)
!8237 = !DILocation(line: 983, column: 182, scope: !8234)
!8238 = !DILocation(line: 983, column: 180, scope: !8234)
!8239 = !DILocation(line: 983, column: 193, scope: !8234)
!8240 = !DILocation(line: 983, column: 197, scope: !8234)
!8241 = !DILocation(line: 983, column: 195, scope: !8234)
!8242 = !DILocation(line: 983, column: 190, scope: !8234)
!8243 = !DILocation(line: 983, column: 188, scope: !8234)
!8244 = !DILocation(line: 983, column: 210, scope: !8234)
!8245 = !DILocation(line: 983, column: 214, scope: !8234)
!8246 = !DILocation(line: 983, column: 212, scope: !8234)
!8247 = !DILocation(line: 983, column: 207, scope: !8234)
!8248 = !DILocation(line: 983, column: 205, scope: !8234)
!8249 = !DILocation(line: 983, column: 229, scope: !8234)
!8250 = !DILocation(line: 983, column: 226, scope: !8234)
!8251 = !DILocation(line: 983, column: 237, scope: !8234)
!8252 = !DILocation(line: 983, column: 234, scope: !8234)
!8253 = !DILocation(line: 983, column: 232, scope: !8234)
!8254 = !DILocation(line: 983, column: 245, scope: !8234)
!8255 = !DILocation(line: 983, column: 249, scope: !8234)
!8256 = !DILocation(line: 983, column: 247, scope: !8234)
!8257 = !DILocation(line: 983, column: 242, scope: !8234)
!8258 = !DILocation(line: 983, column: 240, scope: !8234)
!8259 = !DILocation(line: 983, column: 262, scope: !8234)
!8260 = !DILocation(line: 983, column: 266, scope: !8234)
!8261 = !DILocation(line: 983, column: 264, scope: !8234)
!8262 = !DILocation(line: 983, column: 259, scope: !8234)
!8263 = !DILocation(line: 983, column: 257, scope: !8234)
!8264 = !DILocation(line: 983, column: 223, scope: !8234)
!8265 = !DILocation(line: 983, column: 169, scope: !8234)
!8266 = !DILocation(line: 983, column: 163, scope: !8234)
!8267 = !DILocation(line: 983, column: 159, scope: !8268)
!8268 = !DILexicalBlockFile(scope: !8230, file: !941, discriminator: 5)
!8269 = !DILocation(line: 983, column: 139, scope: !8268)
!8270 = distinct !{!8270, !8271}
!8271 = !DILocation(line: 983, column: 139, scope: !8226)
!8272 = !DILocation(line: 983, column: 283, scope: !8273)
!8273 = !DILexicalBlockFile(scope: !8226, file: !941, discriminator: 6)
!8274 = !DILocation(line: 983, column: 280, scope: !8273)
!8275 = !DILocation(line: 983, column: 297, scope: !8273)
!8276 = !DILocation(line: 983, column: 294, scope: !8273)
!8277 = !DILocation(line: 983, column: 305, scope: !8273)
!8278 = !DILocation(line: 983, column: 133, scope: !8279)
!8279 = !DILexicalBlockFile(scope: !8219, file: !941, discriminator: 7)
!8280 = !DILocation(line: 983, column: 113, scope: !8279)
!8281 = distinct !{!8281, !8282}
!8282 = !DILocation(line: 983, column: 113, scope: !8197)
!8283 = !DILocation(line: 983, column: 314, scope: !8284)
!8284 = !DILexicalBlockFile(scope: !8197, file: !941, discriminator: 8)
!8285 = !DILocation(line: 983, column: 307, scope: !8284)
!8286 = distinct !DISubprogram(name: "vsse_intra16_c", scope: !941, file: !941, line: 966, type: !2756, isLocal: true, isDefinition: true, scopeLine: 966, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!8287 = !DILocalVariable(name: "c", arg: 1, scope: !8286, file: !941, line: 966, type: !2758)
!8288 = !DILocation(line: 966, column: 43, scope: !8286)
!8289 = !DILocalVariable(name: "s", arg: 2, scope: !8286, file: !941, line: 966, type: !1167)
!8290 = !DILocation(line: 966, column: 55, scope: !8286)
!8291 = !DILocalVariable(name: "dummy", arg: 3, scope: !8286, file: !941, line: 966, type: !1167)
!8292 = !DILocation(line: 966, column: 67, scope: !8286)
!8293 = !DILocalVariable(name: "stride", arg: 4, scope: !8286, file: !941, line: 966, type: !1792)
!8294 = !DILocation(line: 966, column: 84, scope: !8286)
!8295 = !DILocalVariable(name: "h", arg: 5, scope: !8286, file: !941, line: 966, type: !952)
!8296 = !DILocation(line: 966, column: 96, scope: !8286)
!8297 = !DILocalVariable(name: "score", scope: !8286, file: !941, line: 966, type: !952)
!8298 = !DILocation(line: 966, column: 105, scope: !8286)
!8299 = !DILocalVariable(name: "x", scope: !8286, file: !941, line: 966, type: !952)
!8300 = !DILocation(line: 966, column: 116, scope: !8286)
!8301 = !DILocalVariable(name: "y", scope: !8286, file: !941, line: 966, type: !952)
!8302 = !DILocation(line: 966, column: 119, scope: !8286)
!8303 = !DILocation(line: 966, column: 129, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8286, file: !941, line: 966, column: 122)
!8305 = !DILocation(line: 966, column: 127, scope: !8304)
!8306 = !DILocation(line: 966, column: 134, scope: !8307)
!8307 = !DILexicalBlockFile(scope: !8308, file: !941, discriminator: 1)
!8308 = distinct !DILexicalBlock(scope: !8304, file: !941, line: 966, column: 122)
!8309 = !DILocation(line: 966, column: 138, scope: !8307)
!8310 = !DILocation(line: 966, column: 136, scope: !8307)
!8311 = !DILocation(line: 966, column: 122, scope: !8307)
!8312 = !DILocation(line: 966, column: 155, scope: !8313)
!8313 = !DILexicalBlockFile(scope: !8314, file: !941, discriminator: 2)
!8314 = distinct !DILexicalBlock(scope: !8315, file: !941, line: 966, column: 148)
!8315 = distinct !DILexicalBlock(scope: !8308, file: !941, line: 966, column: 146)
!8316 = !DILocation(line: 966, column: 153, scope: !8313)
!8317 = !DILocation(line: 966, column: 160, scope: !8318)
!8318 = !DILexicalBlockFile(scope: !8319, file: !941, discriminator: 3)
!8319 = distinct !DILexicalBlock(scope: !8314, file: !941, line: 966, column: 148)
!8320 = !DILocation(line: 966, column: 162, scope: !8318)
!8321 = !DILocation(line: 966, column: 148, scope: !8318)
!8322 = !DILocation(line: 966, column: 191, scope: !8323)
!8323 = !DILexicalBlockFile(scope: !8324, file: !941, discriminator: 4)
!8324 = distinct !DILexicalBlock(scope: !8319, file: !941, line: 966, column: 176)
!8325 = !DILocation(line: 966, column: 189, scope: !8323)
!8326 = !DILocation(line: 966, column: 198, scope: !8323)
!8327 = !DILocation(line: 966, column: 202, scope: !8323)
!8328 = !DILocation(line: 966, column: 200, scope: !8323)
!8329 = !DILocation(line: 966, column: 196, scope: !8323)
!8330 = !DILocation(line: 966, column: 194, scope: !8323)
!8331 = !DILocation(line: 966, column: 216, scope: !8323)
!8332 = !DILocation(line: 966, column: 214, scope: !8323)
!8333 = !DILocation(line: 966, column: 223, scope: !8323)
!8334 = !DILocation(line: 966, column: 227, scope: !8323)
!8335 = !DILocation(line: 966, column: 225, scope: !8323)
!8336 = !DILocation(line: 966, column: 221, scope: !8323)
!8337 = !DILocation(line: 966, column: 219, scope: !8323)
!8338 = !DILocation(line: 966, column: 211, scope: !8323)
!8339 = !DILocation(line: 966, column: 243, scope: !8323)
!8340 = !DILocation(line: 966, column: 245, scope: !8323)
!8341 = !DILocation(line: 966, column: 241, scope: !8323)
!8342 = !DILocation(line: 966, column: 254, scope: !8323)
!8343 = !DILocation(line: 966, column: 258, scope: !8323)
!8344 = !DILocation(line: 966, column: 256, scope: !8323)
!8345 = !DILocation(line: 966, column: 265, scope: !8323)
!8346 = !DILocation(line: 966, column: 252, scope: !8323)
!8347 = !DILocation(line: 966, column: 250, scope: !8323)
!8348 = !DILocation(line: 966, column: 276, scope: !8323)
!8349 = !DILocation(line: 966, column: 278, scope: !8323)
!8350 = !DILocation(line: 966, column: 274, scope: !8323)
!8351 = !DILocation(line: 966, column: 287, scope: !8323)
!8352 = !DILocation(line: 966, column: 291, scope: !8323)
!8353 = !DILocation(line: 966, column: 289, scope: !8323)
!8354 = !DILocation(line: 966, column: 298, scope: !8323)
!8355 = !DILocation(line: 966, column: 285, scope: !8323)
!8356 = !DILocation(line: 966, column: 283, scope: !8323)
!8357 = !DILocation(line: 966, column: 271, scope: !8323)
!8358 = !DILocation(line: 966, column: 237, scope: !8323)
!8359 = !DILocation(line: 966, column: 311, scope: !8323)
!8360 = !DILocation(line: 966, column: 313, scope: !8323)
!8361 = !DILocation(line: 966, column: 309, scope: !8323)
!8362 = !DILocation(line: 966, column: 322, scope: !8323)
!8363 = !DILocation(line: 966, column: 326, scope: !8323)
!8364 = !DILocation(line: 966, column: 324, scope: !8323)
!8365 = !DILocation(line: 966, column: 333, scope: !8323)
!8366 = !DILocation(line: 966, column: 320, scope: !8323)
!8367 = !DILocation(line: 966, column: 318, scope: !8323)
!8368 = !DILocation(line: 966, column: 344, scope: !8323)
!8369 = !DILocation(line: 966, column: 346, scope: !8323)
!8370 = !DILocation(line: 966, column: 342, scope: !8323)
!8371 = !DILocation(line: 966, column: 355, scope: !8323)
!8372 = !DILocation(line: 966, column: 359, scope: !8323)
!8373 = !DILocation(line: 966, column: 357, scope: !8323)
!8374 = !DILocation(line: 966, column: 366, scope: !8323)
!8375 = !DILocation(line: 966, column: 353, scope: !8323)
!8376 = !DILocation(line: 966, column: 351, scope: !8323)
!8377 = !DILocation(line: 966, column: 339, scope: !8323)
!8378 = !DILocation(line: 966, column: 305, scope: !8323)
!8379 = !DILocation(line: 966, column: 379, scope: !8323)
!8380 = !DILocation(line: 966, column: 381, scope: !8323)
!8381 = !DILocation(line: 966, column: 377, scope: !8323)
!8382 = !DILocation(line: 966, column: 390, scope: !8323)
!8383 = !DILocation(line: 966, column: 394, scope: !8323)
!8384 = !DILocation(line: 966, column: 392, scope: !8323)
!8385 = !DILocation(line: 966, column: 401, scope: !8323)
!8386 = !DILocation(line: 966, column: 388, scope: !8323)
!8387 = !DILocation(line: 966, column: 386, scope: !8323)
!8388 = !DILocation(line: 966, column: 412, scope: !8323)
!8389 = !DILocation(line: 966, column: 414, scope: !8323)
!8390 = !DILocation(line: 966, column: 410, scope: !8323)
!8391 = !DILocation(line: 966, column: 423, scope: !8323)
!8392 = !DILocation(line: 966, column: 427, scope: !8323)
!8393 = !DILocation(line: 966, column: 425, scope: !8323)
!8394 = !DILocation(line: 966, column: 434, scope: !8323)
!8395 = !DILocation(line: 966, column: 421, scope: !8323)
!8396 = !DILocation(line: 966, column: 419, scope: !8323)
!8397 = !DILocation(line: 966, column: 407, scope: !8323)
!8398 = !DILocation(line: 966, column: 373, scope: !8323)
!8399 = !DILocation(line: 966, column: 184, scope: !8323)
!8400 = !DILocation(line: 966, column: 442, scope: !8323)
!8401 = !DILocation(line: 966, column: 170, scope: !8402)
!8402 = !DILexicalBlockFile(scope: !8319, file: !941, discriminator: 5)
!8403 = !DILocation(line: 966, column: 148, scope: !8402)
!8404 = distinct !{!8404, !8405}
!8405 = !DILocation(line: 966, column: 148, scope: !8315)
!8406 = !DILocation(line: 966, column: 449, scope: !8407)
!8407 = !DILexicalBlockFile(scope: !8315, file: !941, discriminator: 6)
!8408 = !DILocation(line: 966, column: 446, scope: !8407)
!8409 = !DILocation(line: 966, column: 457, scope: !8407)
!8410 = !DILocation(line: 966, column: 142, scope: !8411)
!8411 = !DILexicalBlockFile(scope: !8308, file: !941, discriminator: 7)
!8412 = !DILocation(line: 966, column: 122, scope: !8411)
!8413 = distinct !{!8413, !8414}
!8414 = !DILocation(line: 966, column: 122, scope: !8286)
!8415 = !DILocation(line: 966, column: 466, scope: !8416)
!8416 = !DILexicalBlockFile(scope: !8286, file: !941, discriminator: 8)
!8417 = !DILocation(line: 966, column: 459, scope: !8416)
!8418 = distinct !DISubprogram(name: "vsse_intra8_c", scope: !941, file: !941, line: 965, type: !2756, isLocal: true, isDefinition: true, scopeLine: 965, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!8419 = !DILocalVariable(name: "c", arg: 1, scope: !8418, file: !941, line: 965, type: !2758)
!8420 = !DILocation(line: 965, column: 42, scope: !8418)
!8421 = !DILocalVariable(name: "s", arg: 2, scope: !8418, file: !941, line: 965, type: !1167)
!8422 = !DILocation(line: 965, column: 54, scope: !8418)
!8423 = !DILocalVariable(name: "dummy", arg: 3, scope: !8418, file: !941, line: 965, type: !1167)
!8424 = !DILocation(line: 965, column: 66, scope: !8418)
!8425 = !DILocalVariable(name: "stride", arg: 4, scope: !8418, file: !941, line: 965, type: !1792)
!8426 = !DILocation(line: 965, column: 83, scope: !8418)
!8427 = !DILocalVariable(name: "h", arg: 5, scope: !8418, file: !941, line: 965, type: !952)
!8428 = !DILocation(line: 965, column: 95, scope: !8418)
!8429 = !DILocalVariable(name: "score", scope: !8418, file: !941, line: 965, type: !952)
!8430 = !DILocation(line: 965, column: 104, scope: !8418)
!8431 = !DILocalVariable(name: "x", scope: !8418, file: !941, line: 965, type: !952)
!8432 = !DILocation(line: 965, column: 115, scope: !8418)
!8433 = !DILocalVariable(name: "y", scope: !8418, file: !941, line: 965, type: !952)
!8434 = !DILocation(line: 965, column: 118, scope: !8418)
!8435 = !DILocation(line: 965, column: 128, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8418, file: !941, line: 965, column: 121)
!8437 = !DILocation(line: 965, column: 126, scope: !8436)
!8438 = !DILocation(line: 965, column: 133, scope: !8439)
!8439 = !DILexicalBlockFile(scope: !8440, file: !941, discriminator: 1)
!8440 = distinct !DILexicalBlock(scope: !8436, file: !941, line: 965, column: 121)
!8441 = !DILocation(line: 965, column: 137, scope: !8439)
!8442 = !DILocation(line: 965, column: 135, scope: !8439)
!8443 = !DILocation(line: 965, column: 121, scope: !8439)
!8444 = !DILocation(line: 965, column: 154, scope: !8445)
!8445 = !DILexicalBlockFile(scope: !8446, file: !941, discriminator: 2)
!8446 = distinct !DILexicalBlock(scope: !8447, file: !941, line: 965, column: 147)
!8447 = distinct !DILexicalBlock(scope: !8440, file: !941, line: 965, column: 145)
!8448 = !DILocation(line: 965, column: 152, scope: !8445)
!8449 = !DILocation(line: 965, column: 159, scope: !8450)
!8450 = !DILexicalBlockFile(scope: !8451, file: !941, discriminator: 3)
!8451 = distinct !DILexicalBlock(scope: !8446, file: !941, line: 965, column: 147)
!8452 = !DILocation(line: 965, column: 161, scope: !8450)
!8453 = !DILocation(line: 965, column: 147, scope: !8450)
!8454 = !DILocation(line: 965, column: 189, scope: !8455)
!8455 = !DILexicalBlockFile(scope: !8456, file: !941, discriminator: 4)
!8456 = distinct !DILexicalBlock(scope: !8451, file: !941, line: 965, column: 174)
!8457 = !DILocation(line: 965, column: 187, scope: !8455)
!8458 = !DILocation(line: 965, column: 196, scope: !8455)
!8459 = !DILocation(line: 965, column: 200, scope: !8455)
!8460 = !DILocation(line: 965, column: 198, scope: !8455)
!8461 = !DILocation(line: 965, column: 194, scope: !8455)
!8462 = !DILocation(line: 965, column: 192, scope: !8455)
!8463 = !DILocation(line: 965, column: 214, scope: !8455)
!8464 = !DILocation(line: 965, column: 212, scope: !8455)
!8465 = !DILocation(line: 965, column: 221, scope: !8455)
!8466 = !DILocation(line: 965, column: 225, scope: !8455)
!8467 = !DILocation(line: 965, column: 223, scope: !8455)
!8468 = !DILocation(line: 965, column: 219, scope: !8455)
!8469 = !DILocation(line: 965, column: 217, scope: !8455)
!8470 = !DILocation(line: 965, column: 209, scope: !8455)
!8471 = !DILocation(line: 965, column: 241, scope: !8455)
!8472 = !DILocation(line: 965, column: 243, scope: !8455)
!8473 = !DILocation(line: 965, column: 239, scope: !8455)
!8474 = !DILocation(line: 965, column: 252, scope: !8455)
!8475 = !DILocation(line: 965, column: 256, scope: !8455)
!8476 = !DILocation(line: 965, column: 254, scope: !8455)
!8477 = !DILocation(line: 965, column: 263, scope: !8455)
!8478 = !DILocation(line: 965, column: 250, scope: !8455)
!8479 = !DILocation(line: 965, column: 248, scope: !8455)
!8480 = !DILocation(line: 965, column: 274, scope: !8455)
!8481 = !DILocation(line: 965, column: 276, scope: !8455)
!8482 = !DILocation(line: 965, column: 272, scope: !8455)
!8483 = !DILocation(line: 965, column: 285, scope: !8455)
!8484 = !DILocation(line: 965, column: 289, scope: !8455)
!8485 = !DILocation(line: 965, column: 287, scope: !8455)
!8486 = !DILocation(line: 965, column: 296, scope: !8455)
!8487 = !DILocation(line: 965, column: 283, scope: !8455)
!8488 = !DILocation(line: 965, column: 281, scope: !8455)
!8489 = !DILocation(line: 965, column: 269, scope: !8455)
!8490 = !DILocation(line: 965, column: 235, scope: !8455)
!8491 = !DILocation(line: 965, column: 309, scope: !8455)
!8492 = !DILocation(line: 965, column: 311, scope: !8455)
!8493 = !DILocation(line: 965, column: 307, scope: !8455)
!8494 = !DILocation(line: 965, column: 320, scope: !8455)
!8495 = !DILocation(line: 965, column: 324, scope: !8455)
!8496 = !DILocation(line: 965, column: 322, scope: !8455)
!8497 = !DILocation(line: 965, column: 331, scope: !8455)
!8498 = !DILocation(line: 965, column: 318, scope: !8455)
!8499 = !DILocation(line: 965, column: 316, scope: !8455)
!8500 = !DILocation(line: 965, column: 342, scope: !8455)
!8501 = !DILocation(line: 965, column: 344, scope: !8455)
!8502 = !DILocation(line: 965, column: 340, scope: !8455)
!8503 = !DILocation(line: 965, column: 353, scope: !8455)
!8504 = !DILocation(line: 965, column: 357, scope: !8455)
!8505 = !DILocation(line: 965, column: 355, scope: !8455)
!8506 = !DILocation(line: 965, column: 364, scope: !8455)
!8507 = !DILocation(line: 965, column: 351, scope: !8455)
!8508 = !DILocation(line: 965, column: 349, scope: !8455)
!8509 = !DILocation(line: 965, column: 337, scope: !8455)
!8510 = !DILocation(line: 965, column: 303, scope: !8455)
!8511 = !DILocation(line: 965, column: 377, scope: !8455)
!8512 = !DILocation(line: 965, column: 379, scope: !8455)
!8513 = !DILocation(line: 965, column: 375, scope: !8455)
!8514 = !DILocation(line: 965, column: 388, scope: !8455)
!8515 = !DILocation(line: 965, column: 392, scope: !8455)
!8516 = !DILocation(line: 965, column: 390, scope: !8455)
!8517 = !DILocation(line: 965, column: 399, scope: !8455)
!8518 = !DILocation(line: 965, column: 386, scope: !8455)
!8519 = !DILocation(line: 965, column: 384, scope: !8455)
!8520 = !DILocation(line: 965, column: 410, scope: !8455)
!8521 = !DILocation(line: 965, column: 412, scope: !8455)
!8522 = !DILocation(line: 965, column: 408, scope: !8455)
!8523 = !DILocation(line: 965, column: 421, scope: !8455)
!8524 = !DILocation(line: 965, column: 425, scope: !8455)
!8525 = !DILocation(line: 965, column: 423, scope: !8455)
!8526 = !DILocation(line: 965, column: 432, scope: !8455)
!8527 = !DILocation(line: 965, column: 419, scope: !8455)
!8528 = !DILocation(line: 965, column: 417, scope: !8455)
!8529 = !DILocation(line: 965, column: 405, scope: !8455)
!8530 = !DILocation(line: 965, column: 371, scope: !8455)
!8531 = !DILocation(line: 965, column: 182, scope: !8455)
!8532 = !DILocation(line: 965, column: 440, scope: !8455)
!8533 = !DILocation(line: 965, column: 168, scope: !8534)
!8534 = !DILexicalBlockFile(scope: !8451, file: !941, discriminator: 5)
!8535 = !DILocation(line: 965, column: 147, scope: !8534)
!8536 = distinct !{!8536, !8537}
!8537 = !DILocation(line: 965, column: 147, scope: !8447)
!8538 = !DILocation(line: 965, column: 447, scope: !8539)
!8539 = !DILexicalBlockFile(scope: !8447, file: !941, discriminator: 6)
!8540 = !DILocation(line: 965, column: 444, scope: !8539)
!8541 = !DILocation(line: 965, column: 455, scope: !8539)
!8542 = !DILocation(line: 965, column: 141, scope: !8543)
!8543 = !DILexicalBlockFile(scope: !8440, file: !941, discriminator: 7)
!8544 = !DILocation(line: 965, column: 121, scope: !8543)
!8545 = distinct !{!8545, !8546}
!8546 = !DILocation(line: 965, column: 121, scope: !8418)
!8547 = !DILocation(line: 965, column: 464, scope: !8548)
!8548 = !DILexicalBlockFile(scope: !8418, file: !941, discriminator: 8)
!8549 = !DILocation(line: 965, column: 457, scope: !8548)
!8550 = distinct !DISubprogram(name: "nsse16_c", scope: !941, file: !941, line: 418, type: !2756, isLocal: true, isDefinition: true, scopeLine: 420, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!8551 = !DILocalVariable(name: "c", arg: 1, scope: !8550, file: !941, line: 418, type: !2758)
!8552 = !DILocation(line: 418, column: 37, scope: !8550)
!8553 = !DILocalVariable(name: "s1", arg: 2, scope: !8550, file: !941, line: 418, type: !1167)
!8554 = !DILocation(line: 418, column: 49, scope: !8550)
!8555 = !DILocalVariable(name: "s2", arg: 3, scope: !8550, file: !941, line: 418, type: !1167)
!8556 = !DILocation(line: 418, column: 62, scope: !8550)
!8557 = !DILocalVariable(name: "stride", arg: 4, scope: !8550, file: !941, line: 419, type: !1792)
!8558 = !DILocation(line: 419, column: 31, scope: !8550)
!8559 = !DILocalVariable(name: "h", arg: 5, scope: !8550, file: !941, line: 419, type: !952)
!8560 = !DILocation(line: 419, column: 43, scope: !8550)
!8561 = !DILocalVariable(name: "score1", scope: !8550, file: !941, line: 421, type: !952)
!8562 = !DILocation(line: 421, column: 9, scope: !8550)
!8563 = !DILocalVariable(name: "score2", scope: !8550, file: !941, line: 421, type: !952)
!8564 = !DILocation(line: 421, column: 21, scope: !8550)
!8565 = !DILocalVariable(name: "x", scope: !8550, file: !941, line: 421, type: !952)
!8566 = !DILocation(line: 421, column: 33, scope: !8550)
!8567 = !DILocalVariable(name: "y", scope: !8550, file: !941, line: 421, type: !952)
!8568 = !DILocation(line: 421, column: 36, scope: !8550)
!8569 = !DILocation(line: 423, column: 12, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8550, file: !941, line: 423, column: 5)
!8571 = !DILocation(line: 423, column: 10, scope: !8570)
!8572 = !DILocation(line: 423, column: 17, scope: !8573)
!8573 = !DILexicalBlockFile(scope: !8574, file: !941, discriminator: 1)
!8574 = distinct !DILexicalBlock(scope: !8570, file: !941, line: 423, column: 5)
!8575 = !DILocation(line: 423, column: 21, scope: !8573)
!8576 = !DILocation(line: 423, column: 19, scope: !8573)
!8577 = !DILocation(line: 423, column: 5, scope: !8573)
!8578 = !DILocation(line: 424, column: 16, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8580, file: !941, line: 424, column: 9)
!8580 = distinct !DILexicalBlock(scope: !8574, file: !941, line: 423, column: 29)
!8581 = !DILocation(line: 424, column: 14, scope: !8579)
!8582 = !DILocation(line: 424, column: 21, scope: !8583)
!8583 = !DILexicalBlockFile(scope: !8584, file: !941, discriminator: 1)
!8584 = distinct !DILexicalBlock(scope: !8579, file: !941, line: 424, column: 9)
!8585 = !DILocation(line: 424, column: 23, scope: !8583)
!8586 = !DILocation(line: 424, column: 9, scope: !8583)
!8587 = !DILocation(line: 425, column: 27, scope: !8584)
!8588 = !DILocation(line: 425, column: 24, scope: !8584)
!8589 = !DILocation(line: 425, column: 35, scope: !8584)
!8590 = !DILocation(line: 425, column: 32, scope: !8584)
!8591 = !DILocation(line: 425, column: 30, scope: !8584)
!8592 = !DILocation(line: 425, column: 45, scope: !8584)
!8593 = !DILocation(line: 425, column: 42, scope: !8584)
!8594 = !DILocation(line: 425, column: 53, scope: !8584)
!8595 = !DILocation(line: 425, column: 50, scope: !8584)
!8596 = !DILocation(line: 425, column: 48, scope: !8584)
!8597 = !DILocation(line: 425, column: 39, scope: !8584)
!8598 = !DILocation(line: 425, column: 20, scope: !8584)
!8599 = !DILocation(line: 425, column: 13, scope: !8584)
!8600 = !DILocation(line: 424, column: 30, scope: !8601)
!8601 = !DILexicalBlockFile(scope: !8584, file: !941, discriminator: 2)
!8602 = !DILocation(line: 424, column: 9, scope: !8601)
!8603 = distinct !{!8603, !8604}
!8604 = !DILocation(line: 424, column: 9, scope: !8580)
!8605 = !DILocation(line: 426, column: 13, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8580, file: !941, line: 426, column: 13)
!8607 = !DILocation(line: 426, column: 15, scope: !8606)
!8608 = !DILocation(line: 426, column: 21, scope: !8606)
!8609 = !DILocation(line: 426, column: 19, scope: !8606)
!8610 = !DILocation(line: 426, column: 13, scope: !8580)
!8611 = !DILocation(line: 427, column: 20, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8613, file: !941, line: 427, column: 13)
!8613 = distinct !DILexicalBlock(scope: !8606, file: !941, line: 426, column: 24)
!8614 = !DILocation(line: 427, column: 18, scope: !8612)
!8615 = !DILocation(line: 427, column: 25, scope: !8616)
!8616 = !DILexicalBlockFile(scope: !8617, file: !941, discriminator: 1)
!8617 = distinct !DILexicalBlock(scope: !8612, file: !941, line: 427, column: 13)
!8618 = !DILocation(line: 427, column: 27, scope: !8616)
!8619 = !DILocation(line: 427, column: 13, scope: !8616)
!8620 = !DILocation(line: 428, column: 32, scope: !8617)
!8621 = !DILocation(line: 428, column: 29, scope: !8617)
!8622 = !DILocation(line: 428, column: 40, scope: !8617)
!8623 = !DILocation(line: 428, column: 44, scope: !8617)
!8624 = !DILocation(line: 428, column: 42, scope: !8617)
!8625 = !DILocation(line: 428, column: 37, scope: !8617)
!8626 = !DILocation(line: 428, column: 35, scope: !8617)
!8627 = !DILocation(line: 428, column: 57, scope: !8617)
!8628 = !DILocation(line: 428, column: 59, scope: !8617)
!8629 = !DILocation(line: 428, column: 54, scope: !8617)
!8630 = !DILocation(line: 428, column: 52, scope: !8617)
!8631 = !DILocation(line: 428, column: 69, scope: !8617)
!8632 = !DILocation(line: 428, column: 73, scope: !8617)
!8633 = !DILocation(line: 428, column: 71, scope: !8617)
!8634 = !DILocation(line: 428, column: 80, scope: !8617)
!8635 = !DILocation(line: 428, column: 66, scope: !8617)
!8636 = !DILocation(line: 428, column: 64, scope: !8617)
!8637 = !DILocation(line: 428, column: 86, scope: !8617)
!8638 = !DILocation(line: 428, column: 28, scope: !8617)
!8639 = !DILocation(line: 428, column: 97, scope: !8616)
!8640 = !DILocation(line: 428, column: 94, scope: !8616)
!8641 = !DILocation(line: 428, column: 105, scope: !8616)
!8642 = !DILocation(line: 428, column: 109, scope: !8616)
!8643 = !DILocation(line: 428, column: 107, scope: !8616)
!8644 = !DILocation(line: 428, column: 102, scope: !8616)
!8645 = !DILocation(line: 428, column: 100, scope: !8616)
!8646 = !DILocation(line: 428, column: 122, scope: !8616)
!8647 = !DILocation(line: 428, column: 124, scope: !8616)
!8648 = !DILocation(line: 428, column: 119, scope: !8616)
!8649 = !DILocation(line: 428, column: 117, scope: !8616)
!8650 = !DILocation(line: 428, column: 134, scope: !8616)
!8651 = !DILocation(line: 428, column: 138, scope: !8616)
!8652 = !DILocation(line: 428, column: 136, scope: !8616)
!8653 = !DILocation(line: 428, column: 145, scope: !8616)
!8654 = !DILocation(line: 428, column: 131, scope: !8616)
!8655 = !DILocation(line: 428, column: 129, scope: !8616)
!8656 = !DILocation(line: 428, column: 28, scope: !8616)
!8657 = !DILocation(line: 428, column: 159, scope: !8658)
!8658 = !DILexicalBlockFile(scope: !8617, file: !941, discriminator: 2)
!8659 = !DILocation(line: 428, column: 156, scope: !8658)
!8660 = !DILocation(line: 428, column: 167, scope: !8658)
!8661 = !DILocation(line: 428, column: 171, scope: !8658)
!8662 = !DILocation(line: 428, column: 169, scope: !8658)
!8663 = !DILocation(line: 428, column: 164, scope: !8658)
!8664 = !DILocation(line: 428, column: 162, scope: !8658)
!8665 = !DILocation(line: 428, column: 184, scope: !8658)
!8666 = !DILocation(line: 428, column: 186, scope: !8658)
!8667 = !DILocation(line: 428, column: 181, scope: !8658)
!8668 = !DILocation(line: 428, column: 179, scope: !8658)
!8669 = !DILocation(line: 428, column: 196, scope: !8658)
!8670 = !DILocation(line: 428, column: 200, scope: !8658)
!8671 = !DILocation(line: 428, column: 198, scope: !8658)
!8672 = !DILocation(line: 428, column: 207, scope: !8658)
!8673 = !DILocation(line: 428, column: 193, scope: !8658)
!8674 = !DILocation(line: 428, column: 191, scope: !8658)
!8675 = !DILocation(line: 428, column: 154, scope: !8658)
!8676 = !DILocation(line: 428, column: 28, scope: !8658)
!8677 = !DILocation(line: 428, column: 28, scope: !8678)
!8678 = !DILexicalBlockFile(scope: !8617, file: !941, discriminator: 3)
!8679 = !DILocation(line: 430, column: 32, scope: !8617)
!8680 = !DILocation(line: 430, column: 29, scope: !8617)
!8681 = !DILocation(line: 430, column: 40, scope: !8617)
!8682 = !DILocation(line: 430, column: 44, scope: !8617)
!8683 = !DILocation(line: 430, column: 42, scope: !8617)
!8684 = !DILocation(line: 430, column: 37, scope: !8617)
!8685 = !DILocation(line: 430, column: 35, scope: !8617)
!8686 = !DILocation(line: 430, column: 57, scope: !8617)
!8687 = !DILocation(line: 430, column: 59, scope: !8617)
!8688 = !DILocation(line: 430, column: 54, scope: !8617)
!8689 = !DILocation(line: 430, column: 52, scope: !8617)
!8690 = !DILocation(line: 430, column: 69, scope: !8617)
!8691 = !DILocation(line: 430, column: 73, scope: !8617)
!8692 = !DILocation(line: 430, column: 71, scope: !8617)
!8693 = !DILocation(line: 430, column: 80, scope: !8617)
!8694 = !DILocation(line: 430, column: 66, scope: !8617)
!8695 = !DILocation(line: 430, column: 64, scope: !8617)
!8696 = !DILocation(line: 430, column: 86, scope: !8617)
!8697 = !DILocation(line: 430, column: 28, scope: !8617)
!8698 = !DILocation(line: 430, column: 97, scope: !8616)
!8699 = !DILocation(line: 430, column: 94, scope: !8616)
!8700 = !DILocation(line: 430, column: 105, scope: !8616)
!8701 = !DILocation(line: 430, column: 109, scope: !8616)
!8702 = !DILocation(line: 430, column: 107, scope: !8616)
!8703 = !DILocation(line: 430, column: 102, scope: !8616)
!8704 = !DILocation(line: 430, column: 100, scope: !8616)
!8705 = !DILocation(line: 430, column: 122, scope: !8616)
!8706 = !DILocation(line: 430, column: 124, scope: !8616)
!8707 = !DILocation(line: 430, column: 119, scope: !8616)
!8708 = !DILocation(line: 430, column: 117, scope: !8616)
!8709 = !DILocation(line: 430, column: 134, scope: !8616)
!8710 = !DILocation(line: 430, column: 138, scope: !8616)
!8711 = !DILocation(line: 430, column: 136, scope: !8616)
!8712 = !DILocation(line: 430, column: 145, scope: !8616)
!8713 = !DILocation(line: 430, column: 131, scope: !8616)
!8714 = !DILocation(line: 430, column: 129, scope: !8616)
!8715 = !DILocation(line: 430, column: 28, scope: !8616)
!8716 = !DILocation(line: 430, column: 159, scope: !8658)
!8717 = !DILocation(line: 430, column: 156, scope: !8658)
!8718 = !DILocation(line: 430, column: 167, scope: !8658)
!8719 = !DILocation(line: 430, column: 171, scope: !8658)
!8720 = !DILocation(line: 430, column: 169, scope: !8658)
!8721 = !DILocation(line: 430, column: 164, scope: !8658)
!8722 = !DILocation(line: 430, column: 162, scope: !8658)
!8723 = !DILocation(line: 430, column: 184, scope: !8658)
!8724 = !DILocation(line: 430, column: 186, scope: !8658)
!8725 = !DILocation(line: 430, column: 181, scope: !8658)
!8726 = !DILocation(line: 430, column: 179, scope: !8658)
!8727 = !DILocation(line: 430, column: 196, scope: !8658)
!8728 = !DILocation(line: 430, column: 200, scope: !8658)
!8729 = !DILocation(line: 430, column: 198, scope: !8658)
!8730 = !DILocation(line: 430, column: 207, scope: !8658)
!8731 = !DILocation(line: 430, column: 193, scope: !8658)
!8732 = !DILocation(line: 430, column: 191, scope: !8658)
!8733 = !DILocation(line: 430, column: 154, scope: !8658)
!8734 = !DILocation(line: 430, column: 28, scope: !8658)
!8735 = !DILocation(line: 430, column: 28, scope: !8678)
!8736 = !DILocation(line: 429, column: 65, scope: !8617)
!8737 = !DILocation(line: 428, column: 24, scope: !8738)
!8738 = !DILexicalBlockFile(scope: !8617, file: !941, discriminator: 4)
!8739 = !DILocation(line: 428, column: 17, scope: !8738)
!8740 = !DILocation(line: 427, column: 34, scope: !8658)
!8741 = !DILocation(line: 427, column: 13, scope: !8658)
!8742 = distinct !{!8742, !8743}
!8743 = !DILocation(line: 427, column: 13, scope: !8613)
!8744 = !DILocation(line: 432, column: 9, scope: !8613)
!8745 = !DILocation(line: 433, column: 15, scope: !8580)
!8746 = !DILocation(line: 433, column: 12, scope: !8580)
!8747 = !DILocation(line: 434, column: 15, scope: !8580)
!8748 = !DILocation(line: 434, column: 12, scope: !8580)
!8749 = !DILocation(line: 435, column: 5, scope: !8580)
!8750 = !DILocation(line: 423, column: 25, scope: !8751)
!8751 = !DILexicalBlockFile(scope: !8574, file: !941, discriminator: 2)
!8752 = !DILocation(line: 423, column: 5, scope: !8751)
!8753 = distinct !{!8753, !8754}
!8754 = !DILocation(line: 423, column: 5, scope: !8550)
!8755 = !DILocation(line: 437, column: 9, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8550, file: !941, line: 437, column: 9)
!8757 = !DILocation(line: 437, column: 9, scope: !8550)
!8758 = !DILocation(line: 438, column: 16, scope: !8756)
!8759 = !DILocation(line: 438, column: 27, scope: !8756)
!8760 = !DILocation(line: 438, column: 35, scope: !8756)
!8761 = !DILocation(line: 438, column: 26, scope: !8756)
!8762 = !DILocation(line: 438, column: 43, scope: !8763)
!8763 = !DILexicalBlockFile(scope: !8756, file: !941, discriminator: 1)
!8764 = !DILocation(line: 438, column: 26, scope: !8763)
!8765 = !DILocation(line: 438, column: 56, scope: !8766)
!8766 = !DILexicalBlockFile(scope: !8756, file: !941, discriminator: 2)
!8767 = !DILocation(line: 438, column: 54, scope: !8766)
!8768 = !DILocation(line: 438, column: 26, scope: !8766)
!8769 = !DILocation(line: 438, column: 26, scope: !8770)
!8770 = !DILexicalBlockFile(scope: !8756, file: !941, discriminator: 3)
!8771 = !DILocation(line: 438, column: 68, scope: !8770)
!8772 = !DILocation(line: 438, column: 71, scope: !8770)
!8773 = !DILocation(line: 438, column: 78, scope: !8770)
!8774 = !DILocation(line: 438, column: 66, scope: !8770)
!8775 = !DILocation(line: 438, column: 23, scope: !8770)
!8776 = !DILocation(line: 438, column: 9, scope: !8770)
!8777 = !DILocation(line: 440, column: 16, scope: !8756)
!8778 = !DILocation(line: 440, column: 27, scope: !8756)
!8779 = !DILocation(line: 440, column: 35, scope: !8756)
!8780 = !DILocation(line: 440, column: 26, scope: !8756)
!8781 = !DILocation(line: 440, column: 43, scope: !8763)
!8782 = !DILocation(line: 440, column: 26, scope: !8763)
!8783 = !DILocation(line: 440, column: 56, scope: !8766)
!8784 = !DILocation(line: 440, column: 54, scope: !8766)
!8785 = !DILocation(line: 440, column: 26, scope: !8766)
!8786 = !DILocation(line: 440, column: 26, scope: !8770)
!8787 = !DILocation(line: 440, column: 66, scope: !8770)
!8788 = !DILocation(line: 440, column: 23, scope: !8770)
!8789 = !DILocation(line: 440, column: 9, scope: !8770)
!8790 = !DILocation(line: 441, column: 1, scope: !8550)
!8791 = distinct !DISubprogram(name: "nsse8_c", scope: !941, file: !941, line: 443, type: !2756, isLocal: true, isDefinition: true, scopeLine: 445, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!8792 = !DILocalVariable(name: "c", arg: 1, scope: !8791, file: !941, line: 443, type: !2758)
!8793 = !DILocation(line: 443, column: 36, scope: !8791)
!8794 = !DILocalVariable(name: "s1", arg: 2, scope: !8791, file: !941, line: 443, type: !1167)
!8795 = !DILocation(line: 443, column: 48, scope: !8791)
!8796 = !DILocalVariable(name: "s2", arg: 3, scope: !8791, file: !941, line: 443, type: !1167)
!8797 = !DILocation(line: 443, column: 61, scope: !8791)
!8798 = !DILocalVariable(name: "stride", arg: 4, scope: !8791, file: !941, line: 444, type: !1792)
!8799 = !DILocation(line: 444, column: 30, scope: !8791)
!8800 = !DILocalVariable(name: "h", arg: 5, scope: !8791, file: !941, line: 444, type: !952)
!8801 = !DILocation(line: 444, column: 42, scope: !8791)
!8802 = !DILocalVariable(name: "score1", scope: !8791, file: !941, line: 446, type: !952)
!8803 = !DILocation(line: 446, column: 9, scope: !8791)
!8804 = !DILocalVariable(name: "score2", scope: !8791, file: !941, line: 446, type: !952)
!8805 = !DILocation(line: 446, column: 21, scope: !8791)
!8806 = !DILocalVariable(name: "x", scope: !8791, file: !941, line: 446, type: !952)
!8807 = !DILocation(line: 446, column: 33, scope: !8791)
!8808 = !DILocalVariable(name: "y", scope: !8791, file: !941, line: 446, type: !952)
!8809 = !DILocation(line: 446, column: 36, scope: !8791)
!8810 = !DILocation(line: 448, column: 12, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8791, file: !941, line: 448, column: 5)
!8812 = !DILocation(line: 448, column: 10, scope: !8811)
!8813 = !DILocation(line: 448, column: 17, scope: !8814)
!8814 = !DILexicalBlockFile(scope: !8815, file: !941, discriminator: 1)
!8815 = distinct !DILexicalBlock(scope: !8811, file: !941, line: 448, column: 5)
!8816 = !DILocation(line: 448, column: 21, scope: !8814)
!8817 = !DILocation(line: 448, column: 19, scope: !8814)
!8818 = !DILocation(line: 448, column: 5, scope: !8814)
!8819 = !DILocation(line: 449, column: 16, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !941, line: 449, column: 9)
!8821 = distinct !DILexicalBlock(scope: !8815, file: !941, line: 448, column: 29)
!8822 = !DILocation(line: 449, column: 14, scope: !8820)
!8823 = !DILocation(line: 449, column: 21, scope: !8824)
!8824 = !DILexicalBlockFile(scope: !8825, file: !941, discriminator: 1)
!8825 = distinct !DILexicalBlock(scope: !8820, file: !941, line: 449, column: 9)
!8826 = !DILocation(line: 449, column: 23, scope: !8824)
!8827 = !DILocation(line: 449, column: 9, scope: !8824)
!8828 = !DILocation(line: 450, column: 27, scope: !8825)
!8829 = !DILocation(line: 450, column: 24, scope: !8825)
!8830 = !DILocation(line: 450, column: 35, scope: !8825)
!8831 = !DILocation(line: 450, column: 32, scope: !8825)
!8832 = !DILocation(line: 450, column: 30, scope: !8825)
!8833 = !DILocation(line: 450, column: 45, scope: !8825)
!8834 = !DILocation(line: 450, column: 42, scope: !8825)
!8835 = !DILocation(line: 450, column: 53, scope: !8825)
!8836 = !DILocation(line: 450, column: 50, scope: !8825)
!8837 = !DILocation(line: 450, column: 48, scope: !8825)
!8838 = !DILocation(line: 450, column: 39, scope: !8825)
!8839 = !DILocation(line: 450, column: 20, scope: !8825)
!8840 = !DILocation(line: 450, column: 13, scope: !8825)
!8841 = !DILocation(line: 449, column: 29, scope: !8842)
!8842 = !DILexicalBlockFile(scope: !8825, file: !941, discriminator: 2)
!8843 = !DILocation(line: 449, column: 9, scope: !8842)
!8844 = distinct !{!8844, !8845}
!8845 = !DILocation(line: 449, column: 9, scope: !8821)
!8846 = !DILocation(line: 451, column: 13, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8821, file: !941, line: 451, column: 13)
!8848 = !DILocation(line: 451, column: 15, scope: !8847)
!8849 = !DILocation(line: 451, column: 21, scope: !8847)
!8850 = !DILocation(line: 451, column: 19, scope: !8847)
!8851 = !DILocation(line: 451, column: 13, scope: !8821)
!8852 = !DILocation(line: 452, column: 20, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8854, file: !941, line: 452, column: 13)
!8854 = distinct !DILexicalBlock(scope: !8847, file: !941, line: 451, column: 24)
!8855 = !DILocation(line: 452, column: 18, scope: !8853)
!8856 = !DILocation(line: 452, column: 25, scope: !8857)
!8857 = !DILexicalBlockFile(scope: !8858, file: !941, discriminator: 1)
!8858 = distinct !DILexicalBlock(scope: !8853, file: !941, line: 452, column: 13)
!8859 = !DILocation(line: 452, column: 27, scope: !8857)
!8860 = !DILocation(line: 452, column: 13, scope: !8857)
!8861 = !DILocation(line: 453, column: 32, scope: !8858)
!8862 = !DILocation(line: 453, column: 29, scope: !8858)
!8863 = !DILocation(line: 453, column: 40, scope: !8858)
!8864 = !DILocation(line: 453, column: 44, scope: !8858)
!8865 = !DILocation(line: 453, column: 42, scope: !8858)
!8866 = !DILocation(line: 453, column: 37, scope: !8858)
!8867 = !DILocation(line: 453, column: 35, scope: !8858)
!8868 = !DILocation(line: 453, column: 57, scope: !8858)
!8869 = !DILocation(line: 453, column: 59, scope: !8858)
!8870 = !DILocation(line: 453, column: 54, scope: !8858)
!8871 = !DILocation(line: 453, column: 52, scope: !8858)
!8872 = !DILocation(line: 453, column: 69, scope: !8858)
!8873 = !DILocation(line: 453, column: 73, scope: !8858)
!8874 = !DILocation(line: 453, column: 71, scope: !8858)
!8875 = !DILocation(line: 453, column: 80, scope: !8858)
!8876 = !DILocation(line: 453, column: 66, scope: !8858)
!8877 = !DILocation(line: 453, column: 64, scope: !8858)
!8878 = !DILocation(line: 453, column: 86, scope: !8858)
!8879 = !DILocation(line: 453, column: 28, scope: !8858)
!8880 = !DILocation(line: 453, column: 97, scope: !8857)
!8881 = !DILocation(line: 453, column: 94, scope: !8857)
!8882 = !DILocation(line: 453, column: 105, scope: !8857)
!8883 = !DILocation(line: 453, column: 109, scope: !8857)
!8884 = !DILocation(line: 453, column: 107, scope: !8857)
!8885 = !DILocation(line: 453, column: 102, scope: !8857)
!8886 = !DILocation(line: 453, column: 100, scope: !8857)
!8887 = !DILocation(line: 453, column: 122, scope: !8857)
!8888 = !DILocation(line: 453, column: 124, scope: !8857)
!8889 = !DILocation(line: 453, column: 119, scope: !8857)
!8890 = !DILocation(line: 453, column: 117, scope: !8857)
!8891 = !DILocation(line: 453, column: 134, scope: !8857)
!8892 = !DILocation(line: 453, column: 138, scope: !8857)
!8893 = !DILocation(line: 453, column: 136, scope: !8857)
!8894 = !DILocation(line: 453, column: 145, scope: !8857)
!8895 = !DILocation(line: 453, column: 131, scope: !8857)
!8896 = !DILocation(line: 453, column: 129, scope: !8857)
!8897 = !DILocation(line: 453, column: 28, scope: !8857)
!8898 = !DILocation(line: 453, column: 159, scope: !8899)
!8899 = !DILexicalBlockFile(scope: !8858, file: !941, discriminator: 2)
!8900 = !DILocation(line: 453, column: 156, scope: !8899)
!8901 = !DILocation(line: 453, column: 167, scope: !8899)
!8902 = !DILocation(line: 453, column: 171, scope: !8899)
!8903 = !DILocation(line: 453, column: 169, scope: !8899)
!8904 = !DILocation(line: 453, column: 164, scope: !8899)
!8905 = !DILocation(line: 453, column: 162, scope: !8899)
!8906 = !DILocation(line: 453, column: 184, scope: !8899)
!8907 = !DILocation(line: 453, column: 186, scope: !8899)
!8908 = !DILocation(line: 453, column: 181, scope: !8899)
!8909 = !DILocation(line: 453, column: 179, scope: !8899)
!8910 = !DILocation(line: 453, column: 196, scope: !8899)
!8911 = !DILocation(line: 453, column: 200, scope: !8899)
!8912 = !DILocation(line: 453, column: 198, scope: !8899)
!8913 = !DILocation(line: 453, column: 207, scope: !8899)
!8914 = !DILocation(line: 453, column: 193, scope: !8899)
!8915 = !DILocation(line: 453, column: 191, scope: !8899)
!8916 = !DILocation(line: 453, column: 154, scope: !8899)
!8917 = !DILocation(line: 453, column: 28, scope: !8899)
!8918 = !DILocation(line: 453, column: 28, scope: !8919)
!8919 = !DILexicalBlockFile(scope: !8858, file: !941, discriminator: 3)
!8920 = !DILocation(line: 455, column: 32, scope: !8858)
!8921 = !DILocation(line: 455, column: 29, scope: !8858)
!8922 = !DILocation(line: 455, column: 40, scope: !8858)
!8923 = !DILocation(line: 455, column: 44, scope: !8858)
!8924 = !DILocation(line: 455, column: 42, scope: !8858)
!8925 = !DILocation(line: 455, column: 37, scope: !8858)
!8926 = !DILocation(line: 455, column: 35, scope: !8858)
!8927 = !DILocation(line: 455, column: 57, scope: !8858)
!8928 = !DILocation(line: 455, column: 59, scope: !8858)
!8929 = !DILocation(line: 455, column: 54, scope: !8858)
!8930 = !DILocation(line: 455, column: 52, scope: !8858)
!8931 = !DILocation(line: 455, column: 69, scope: !8858)
!8932 = !DILocation(line: 455, column: 73, scope: !8858)
!8933 = !DILocation(line: 455, column: 71, scope: !8858)
!8934 = !DILocation(line: 455, column: 80, scope: !8858)
!8935 = !DILocation(line: 455, column: 66, scope: !8858)
!8936 = !DILocation(line: 455, column: 64, scope: !8858)
!8937 = !DILocation(line: 455, column: 86, scope: !8858)
!8938 = !DILocation(line: 455, column: 28, scope: !8858)
!8939 = !DILocation(line: 455, column: 97, scope: !8857)
!8940 = !DILocation(line: 455, column: 94, scope: !8857)
!8941 = !DILocation(line: 455, column: 105, scope: !8857)
!8942 = !DILocation(line: 455, column: 109, scope: !8857)
!8943 = !DILocation(line: 455, column: 107, scope: !8857)
!8944 = !DILocation(line: 455, column: 102, scope: !8857)
!8945 = !DILocation(line: 455, column: 100, scope: !8857)
!8946 = !DILocation(line: 455, column: 122, scope: !8857)
!8947 = !DILocation(line: 455, column: 124, scope: !8857)
!8948 = !DILocation(line: 455, column: 119, scope: !8857)
!8949 = !DILocation(line: 455, column: 117, scope: !8857)
!8950 = !DILocation(line: 455, column: 134, scope: !8857)
!8951 = !DILocation(line: 455, column: 138, scope: !8857)
!8952 = !DILocation(line: 455, column: 136, scope: !8857)
!8953 = !DILocation(line: 455, column: 145, scope: !8857)
!8954 = !DILocation(line: 455, column: 131, scope: !8857)
!8955 = !DILocation(line: 455, column: 129, scope: !8857)
!8956 = !DILocation(line: 455, column: 28, scope: !8857)
!8957 = !DILocation(line: 455, column: 159, scope: !8899)
!8958 = !DILocation(line: 455, column: 156, scope: !8899)
!8959 = !DILocation(line: 455, column: 167, scope: !8899)
!8960 = !DILocation(line: 455, column: 171, scope: !8899)
!8961 = !DILocation(line: 455, column: 169, scope: !8899)
!8962 = !DILocation(line: 455, column: 164, scope: !8899)
!8963 = !DILocation(line: 455, column: 162, scope: !8899)
!8964 = !DILocation(line: 455, column: 184, scope: !8899)
!8965 = !DILocation(line: 455, column: 186, scope: !8899)
!8966 = !DILocation(line: 455, column: 181, scope: !8899)
!8967 = !DILocation(line: 455, column: 179, scope: !8899)
!8968 = !DILocation(line: 455, column: 196, scope: !8899)
!8969 = !DILocation(line: 455, column: 200, scope: !8899)
!8970 = !DILocation(line: 455, column: 198, scope: !8899)
!8971 = !DILocation(line: 455, column: 207, scope: !8899)
!8972 = !DILocation(line: 455, column: 193, scope: !8899)
!8973 = !DILocation(line: 455, column: 191, scope: !8899)
!8974 = !DILocation(line: 455, column: 154, scope: !8899)
!8975 = !DILocation(line: 455, column: 28, scope: !8899)
!8976 = !DILocation(line: 455, column: 28, scope: !8919)
!8977 = !DILocation(line: 454, column: 65, scope: !8858)
!8978 = !DILocation(line: 453, column: 24, scope: !8979)
!8979 = !DILexicalBlockFile(scope: !8858, file: !941, discriminator: 4)
!8980 = !DILocation(line: 453, column: 17, scope: !8979)
!8981 = !DILocation(line: 452, column: 33, scope: !8899)
!8982 = !DILocation(line: 452, column: 13, scope: !8899)
!8983 = distinct !{!8983, !8984}
!8984 = !DILocation(line: 452, column: 13, scope: !8854)
!8985 = !DILocation(line: 457, column: 9, scope: !8854)
!8986 = !DILocation(line: 458, column: 15, scope: !8821)
!8987 = !DILocation(line: 458, column: 12, scope: !8821)
!8988 = !DILocation(line: 459, column: 15, scope: !8821)
!8989 = !DILocation(line: 459, column: 12, scope: !8821)
!8990 = !DILocation(line: 460, column: 5, scope: !8821)
!8991 = !DILocation(line: 448, column: 25, scope: !8992)
!8992 = !DILexicalBlockFile(scope: !8815, file: !941, discriminator: 2)
!8993 = !DILocation(line: 448, column: 5, scope: !8992)
!8994 = distinct !{!8994, !8995}
!8995 = !DILocation(line: 448, column: 5, scope: !8791)
!8996 = !DILocation(line: 462, column: 9, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8791, file: !941, line: 462, column: 9)
!8998 = !DILocation(line: 462, column: 9, scope: !8791)
!8999 = !DILocation(line: 463, column: 16, scope: !8997)
!9000 = !DILocation(line: 463, column: 27, scope: !8997)
!9001 = !DILocation(line: 463, column: 35, scope: !8997)
!9002 = !DILocation(line: 463, column: 26, scope: !8997)
!9003 = !DILocation(line: 463, column: 43, scope: !9004)
!9004 = !DILexicalBlockFile(scope: !8997, file: !941, discriminator: 1)
!9005 = !DILocation(line: 463, column: 26, scope: !9004)
!9006 = !DILocation(line: 463, column: 56, scope: !9007)
!9007 = !DILexicalBlockFile(scope: !8997, file: !941, discriminator: 2)
!9008 = !DILocation(line: 463, column: 54, scope: !9007)
!9009 = !DILocation(line: 463, column: 26, scope: !9007)
!9010 = !DILocation(line: 463, column: 26, scope: !9011)
!9011 = !DILexicalBlockFile(scope: !8997, file: !941, discriminator: 3)
!9012 = !DILocation(line: 463, column: 68, scope: !9011)
!9013 = !DILocation(line: 463, column: 71, scope: !9011)
!9014 = !DILocation(line: 463, column: 78, scope: !9011)
!9015 = !DILocation(line: 463, column: 66, scope: !9011)
!9016 = !DILocation(line: 463, column: 23, scope: !9011)
!9017 = !DILocation(line: 463, column: 9, scope: !9011)
!9018 = !DILocation(line: 465, column: 16, scope: !8997)
!9019 = !DILocation(line: 465, column: 27, scope: !8997)
!9020 = !DILocation(line: 465, column: 35, scope: !8997)
!9021 = !DILocation(line: 465, column: 26, scope: !8997)
!9022 = !DILocation(line: 465, column: 43, scope: !9004)
!9023 = !DILocation(line: 465, column: 26, scope: !9004)
!9024 = !DILocation(line: 465, column: 56, scope: !9007)
!9025 = !DILocation(line: 465, column: 54, scope: !9007)
!9026 = !DILocation(line: 465, column: 26, scope: !9007)
!9027 = !DILocation(line: 465, column: 26, scope: !9011)
!9028 = !DILocation(line: 465, column: 66, scope: !9011)
!9029 = !DILocation(line: 465, column: 23, scope: !9011)
!9030 = !DILocation(line: 465, column: 9, scope: !9011)
!9031 = !DILocation(line: 466, column: 1, scope: !8791)
!9032 = distinct !DISubprogram(name: "pix_median_abs16_c", scope: !941, file: !941, line: 176, type: !2756, isLocal: true, isDefinition: true, scopeLine: 178, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!9033 = !DILocalVariable(name: "v", arg: 1, scope: !9032, file: !941, line: 176, type: !2758)
!9034 = !DILocation(line: 176, column: 54, scope: !9032)
!9035 = !DILocalVariable(name: "pix1", arg: 2, scope: !9032, file: !941, line: 176, type: !1167)
!9036 = !DILocation(line: 176, column: 66, scope: !9032)
!9037 = !DILocalVariable(name: "pix2", arg: 3, scope: !9032, file: !941, line: 176, type: !1167)
!9038 = !DILocation(line: 176, column: 81, scope: !9032)
!9039 = !DILocalVariable(name: "stride", arg: 4, scope: !9032, file: !941, line: 177, type: !1792)
!9040 = !DILocation(line: 177, column: 40, scope: !9032)
!9041 = !DILocalVariable(name: "h", arg: 5, scope: !9032, file: !941, line: 177, type: !952)
!9042 = !DILocation(line: 177, column: 52, scope: !9032)
!9043 = !DILocalVariable(name: "s", scope: !9032, file: !941, line: 179, type: !952)
!9044 = !DILocation(line: 179, column: 9, scope: !9032)
!9045 = !DILocalVariable(name: "i", scope: !9032, file: !941, line: 179, type: !952)
!9046 = !DILocation(line: 179, column: 16, scope: !9032)
!9047 = !DILocalVariable(name: "j", scope: !9032, file: !941, line: 179, type: !952)
!9048 = !DILocation(line: 179, column: 19, scope: !9032)
!9049 = !DILocation(line: 183, column: 15, scope: !9032)
!9050 = !DILocation(line: 183, column: 25, scope: !9032)
!9051 = !DILocation(line: 183, column: 23, scope: !9032)
!9052 = !DILocation(line: 183, column: 10, scope: !9032)
!9053 = !DILocation(line: 183, column: 7, scope: !9032)
!9054 = !DILocation(line: 184, column: 15, scope: !9032)
!9055 = !DILocation(line: 184, column: 25, scope: !9032)
!9056 = !DILocation(line: 184, column: 23, scope: !9032)
!9057 = !DILocation(line: 184, column: 37, scope: !9032)
!9058 = !DILocation(line: 184, column: 47, scope: !9032)
!9059 = !DILocation(line: 184, column: 45, scope: !9032)
!9060 = !DILocation(line: 184, column: 34, scope: !9032)
!9061 = !DILocation(line: 184, column: 10, scope: !9032)
!9062 = !DILocation(line: 184, column: 7, scope: !9032)
!9063 = !DILocation(line: 185, column: 15, scope: !9032)
!9064 = !DILocation(line: 185, column: 25, scope: !9032)
!9065 = !DILocation(line: 185, column: 23, scope: !9032)
!9066 = !DILocation(line: 185, column: 37, scope: !9032)
!9067 = !DILocation(line: 185, column: 47, scope: !9032)
!9068 = !DILocation(line: 185, column: 45, scope: !9032)
!9069 = !DILocation(line: 185, column: 34, scope: !9032)
!9070 = !DILocation(line: 185, column: 10, scope: !9032)
!9071 = !DILocation(line: 185, column: 7, scope: !9032)
!9072 = !DILocation(line: 186, column: 15, scope: !9032)
!9073 = !DILocation(line: 186, column: 25, scope: !9032)
!9074 = !DILocation(line: 186, column: 23, scope: !9032)
!9075 = !DILocation(line: 186, column: 37, scope: !9032)
!9076 = !DILocation(line: 186, column: 47, scope: !9032)
!9077 = !DILocation(line: 186, column: 45, scope: !9032)
!9078 = !DILocation(line: 186, column: 34, scope: !9032)
!9079 = !DILocation(line: 186, column: 10, scope: !9032)
!9080 = !DILocation(line: 186, column: 7, scope: !9032)
!9081 = !DILocation(line: 187, column: 15, scope: !9032)
!9082 = !DILocation(line: 187, column: 25, scope: !9032)
!9083 = !DILocation(line: 187, column: 23, scope: !9032)
!9084 = !DILocation(line: 187, column: 37, scope: !9032)
!9085 = !DILocation(line: 187, column: 47, scope: !9032)
!9086 = !DILocation(line: 187, column: 45, scope: !9032)
!9087 = !DILocation(line: 187, column: 34, scope: !9032)
!9088 = !DILocation(line: 187, column: 10, scope: !9032)
!9089 = !DILocation(line: 187, column: 7, scope: !9032)
!9090 = !DILocation(line: 188, column: 15, scope: !9032)
!9091 = !DILocation(line: 188, column: 25, scope: !9032)
!9092 = !DILocation(line: 188, column: 23, scope: !9032)
!9093 = !DILocation(line: 188, column: 37, scope: !9032)
!9094 = !DILocation(line: 188, column: 47, scope: !9032)
!9095 = !DILocation(line: 188, column: 45, scope: !9032)
!9096 = !DILocation(line: 188, column: 34, scope: !9032)
!9097 = !DILocation(line: 188, column: 10, scope: !9032)
!9098 = !DILocation(line: 188, column: 7, scope: !9032)
!9099 = !DILocation(line: 189, column: 15, scope: !9032)
!9100 = !DILocation(line: 189, column: 25, scope: !9032)
!9101 = !DILocation(line: 189, column: 23, scope: !9032)
!9102 = !DILocation(line: 189, column: 37, scope: !9032)
!9103 = !DILocation(line: 189, column: 47, scope: !9032)
!9104 = !DILocation(line: 189, column: 45, scope: !9032)
!9105 = !DILocation(line: 189, column: 34, scope: !9032)
!9106 = !DILocation(line: 189, column: 10, scope: !9032)
!9107 = !DILocation(line: 189, column: 7, scope: !9032)
!9108 = !DILocation(line: 190, column: 15, scope: !9032)
!9109 = !DILocation(line: 190, column: 25, scope: !9032)
!9110 = !DILocation(line: 190, column: 23, scope: !9032)
!9111 = !DILocation(line: 190, column: 37, scope: !9032)
!9112 = !DILocation(line: 190, column: 47, scope: !9032)
!9113 = !DILocation(line: 190, column: 45, scope: !9032)
!9114 = !DILocation(line: 190, column: 34, scope: !9032)
!9115 = !DILocation(line: 190, column: 10, scope: !9032)
!9116 = !DILocation(line: 190, column: 7, scope: !9032)
!9117 = !DILocation(line: 191, column: 15, scope: !9032)
!9118 = !DILocation(line: 191, column: 25, scope: !9032)
!9119 = !DILocation(line: 191, column: 23, scope: !9032)
!9120 = !DILocation(line: 191, column: 37, scope: !9032)
!9121 = !DILocation(line: 191, column: 47, scope: !9032)
!9122 = !DILocation(line: 191, column: 45, scope: !9032)
!9123 = !DILocation(line: 191, column: 34, scope: !9032)
!9124 = !DILocation(line: 191, column: 10, scope: !9032)
!9125 = !DILocation(line: 191, column: 7, scope: !9032)
!9126 = !DILocation(line: 192, column: 15, scope: !9032)
!9127 = !DILocation(line: 192, column: 25, scope: !9032)
!9128 = !DILocation(line: 192, column: 23, scope: !9032)
!9129 = !DILocation(line: 192, column: 37, scope: !9032)
!9130 = !DILocation(line: 192, column: 47, scope: !9032)
!9131 = !DILocation(line: 192, column: 45, scope: !9032)
!9132 = !DILocation(line: 192, column: 34, scope: !9032)
!9133 = !DILocation(line: 192, column: 10, scope: !9032)
!9134 = !DILocation(line: 192, column: 7, scope: !9032)
!9135 = !DILocation(line: 193, column: 15, scope: !9032)
!9136 = !DILocation(line: 193, column: 26, scope: !9032)
!9137 = !DILocation(line: 193, column: 24, scope: !9032)
!9138 = !DILocation(line: 193, column: 39, scope: !9032)
!9139 = !DILocation(line: 193, column: 49, scope: !9032)
!9140 = !DILocation(line: 193, column: 47, scope: !9032)
!9141 = !DILocation(line: 193, column: 36, scope: !9032)
!9142 = !DILocation(line: 193, column: 10, scope: !9032)
!9143 = !DILocation(line: 193, column: 7, scope: !9032)
!9144 = !DILocation(line: 194, column: 15, scope: !9032)
!9145 = !DILocation(line: 194, column: 26, scope: !9032)
!9146 = !DILocation(line: 194, column: 24, scope: !9032)
!9147 = !DILocation(line: 194, column: 39, scope: !9032)
!9148 = !DILocation(line: 194, column: 50, scope: !9032)
!9149 = !DILocation(line: 194, column: 48, scope: !9032)
!9150 = !DILocation(line: 194, column: 36, scope: !9032)
!9151 = !DILocation(line: 194, column: 10, scope: !9032)
!9152 = !DILocation(line: 194, column: 7, scope: !9032)
!9153 = !DILocation(line: 195, column: 15, scope: !9032)
!9154 = !DILocation(line: 195, column: 26, scope: !9032)
!9155 = !DILocation(line: 195, column: 24, scope: !9032)
!9156 = !DILocation(line: 195, column: 39, scope: !9032)
!9157 = !DILocation(line: 195, column: 50, scope: !9032)
!9158 = !DILocation(line: 195, column: 48, scope: !9032)
!9159 = !DILocation(line: 195, column: 36, scope: !9032)
!9160 = !DILocation(line: 195, column: 10, scope: !9032)
!9161 = !DILocation(line: 195, column: 7, scope: !9032)
!9162 = !DILocation(line: 196, column: 15, scope: !9032)
!9163 = !DILocation(line: 196, column: 26, scope: !9032)
!9164 = !DILocation(line: 196, column: 24, scope: !9032)
!9165 = !DILocation(line: 196, column: 39, scope: !9032)
!9166 = !DILocation(line: 196, column: 50, scope: !9032)
!9167 = !DILocation(line: 196, column: 48, scope: !9032)
!9168 = !DILocation(line: 196, column: 36, scope: !9032)
!9169 = !DILocation(line: 196, column: 10, scope: !9032)
!9170 = !DILocation(line: 196, column: 7, scope: !9032)
!9171 = !DILocation(line: 197, column: 15, scope: !9032)
!9172 = !DILocation(line: 197, column: 26, scope: !9032)
!9173 = !DILocation(line: 197, column: 24, scope: !9032)
!9174 = !DILocation(line: 197, column: 39, scope: !9032)
!9175 = !DILocation(line: 197, column: 50, scope: !9032)
!9176 = !DILocation(line: 197, column: 48, scope: !9032)
!9177 = !DILocation(line: 197, column: 36, scope: !9032)
!9178 = !DILocation(line: 197, column: 10, scope: !9032)
!9179 = !DILocation(line: 197, column: 7, scope: !9032)
!9180 = !DILocation(line: 198, column: 15, scope: !9032)
!9181 = !DILocation(line: 198, column: 26, scope: !9032)
!9182 = !DILocation(line: 198, column: 24, scope: !9032)
!9183 = !DILocation(line: 198, column: 39, scope: !9032)
!9184 = !DILocation(line: 198, column: 50, scope: !9032)
!9185 = !DILocation(line: 198, column: 48, scope: !9032)
!9186 = !DILocation(line: 198, column: 36, scope: !9032)
!9187 = !DILocation(line: 198, column: 10, scope: !9032)
!9188 = !DILocation(line: 198, column: 7, scope: !9032)
!9189 = !DILocation(line: 200, column: 13, scope: !9032)
!9190 = !DILocation(line: 200, column: 10, scope: !9032)
!9191 = !DILocation(line: 201, column: 13, scope: !9032)
!9192 = !DILocation(line: 201, column: 10, scope: !9032)
!9193 = !DILocation(line: 203, column: 12, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9032, file: !941, line: 203, column: 5)
!9195 = !DILocation(line: 203, column: 10, scope: !9194)
!9196 = !DILocation(line: 203, column: 17, scope: !9197)
!9197 = !DILexicalBlockFile(scope: !9198, file: !941, discriminator: 1)
!9198 = distinct !DILexicalBlock(scope: !9194, file: !941, line: 203, column: 5)
!9199 = !DILocation(line: 203, column: 21, scope: !9197)
!9200 = !DILocation(line: 203, column: 19, scope: !9197)
!9201 = !DILocation(line: 203, column: 5, scope: !9197)
!9202 = !DILocation(line: 204, column: 19, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9198, file: !941, line: 203, column: 29)
!9204 = !DILocation(line: 204, column: 29, scope: !9203)
!9205 = !DILocation(line: 204, column: 27, scope: !9203)
!9206 = !DILocation(line: 204, column: 47, scope: !9203)
!9207 = !DILocation(line: 204, column: 46, scope: !9203)
!9208 = !DILocation(line: 204, column: 41, scope: !9203)
!9209 = !DILocation(line: 204, column: 63, scope: !9203)
!9210 = !DILocation(line: 204, column: 62, scope: !9203)
!9211 = !DILocation(line: 204, column: 57, scope: !9203)
!9212 = !DILocation(line: 204, column: 55, scope: !9203)
!9213 = !DILocation(line: 204, column: 38, scope: !9203)
!9214 = !DILocation(line: 204, column: 14, scope: !9203)
!9215 = !DILocation(line: 204, column: 11, scope: !9203)
!9216 = !DILocation(line: 205, column: 16, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9203, file: !941, line: 205, column: 9)
!9218 = !DILocation(line: 205, column: 14, scope: !9217)
!9219 = !DILocation(line: 205, column: 21, scope: !9220)
!9220 = !DILexicalBlockFile(scope: !9221, file: !941, discriminator: 1)
!9221 = distinct !DILexicalBlock(scope: !9217, file: !941, line: 205, column: 9)
!9222 = !DILocation(line: 205, column: 23, scope: !9220)
!9223 = !DILocation(line: 205, column: 9, scope: !9220)
!9224 = !DILocation(line: 206, column: 28, scope: !9221)
!9225 = !DILocation(line: 206, column: 23, scope: !9221)
!9226 = !DILocation(line: 206, column: 38, scope: !9221)
!9227 = !DILocation(line: 206, column: 33, scope: !9221)
!9228 = !DILocation(line: 206, column: 31, scope: !9221)
!9229 = !DILocation(line: 206, column: 59, scope: !9221)
!9230 = !DILocation(line: 206, column: 61, scope: !9221)
!9231 = !DILocation(line: 206, column: 60, scope: !9221)
!9232 = !DILocation(line: 206, column: 54, scope: !9221)
!9233 = !DILocation(line: 206, column: 76, scope: !9221)
!9234 = !DILocation(line: 206, column: 78, scope: !9221)
!9235 = !DILocation(line: 206, column: 77, scope: !9221)
!9236 = !DILocation(line: 206, column: 71, scope: !9221)
!9237 = !DILocation(line: 206, column: 69, scope: !9221)
!9238 = !DILocation(line: 206, column: 94, scope: !9221)
!9239 = !DILocation(line: 206, column: 95, scope: !9221)
!9240 = !DILocation(line: 206, column: 89, scope: !9221)
!9241 = !DILocation(line: 206, column: 106, scope: !9221)
!9242 = !DILocation(line: 206, column: 107, scope: !9221)
!9243 = !DILocation(line: 206, column: 101, scope: !9221)
!9244 = !DILocation(line: 206, column: 99, scope: !9221)
!9245 = !DILocation(line: 206, column: 119, scope: !9221)
!9246 = !DILocation(line: 206, column: 121, scope: !9221)
!9247 = !DILocation(line: 206, column: 120, scope: !9221)
!9248 = !DILocation(line: 206, column: 114, scope: !9221)
!9249 = !DILocation(line: 206, column: 136, scope: !9221)
!9250 = !DILocation(line: 206, column: 138, scope: !9221)
!9251 = !DILocation(line: 206, column: 137, scope: !9221)
!9252 = !DILocation(line: 206, column: 131, scope: !9221)
!9253 = !DILocation(line: 206, column: 129, scope: !9221)
!9254 = !DILocation(line: 206, column: 155, scope: !9221)
!9255 = !DILocation(line: 206, column: 156, scope: !9221)
!9256 = !DILocation(line: 206, column: 150, scope: !9221)
!9257 = !DILocation(line: 206, column: 167, scope: !9221)
!9258 = !DILocation(line: 206, column: 168, scope: !9221)
!9259 = !DILocation(line: 206, column: 162, scope: !9221)
!9260 = !DILocation(line: 206, column: 160, scope: !9221)
!9261 = !DILocation(line: 206, column: 147, scope: !9221)
!9262 = !DILocation(line: 206, column: 181, scope: !9221)
!9263 = !DILocation(line: 206, column: 183, scope: !9221)
!9264 = !DILocation(line: 206, column: 182, scope: !9221)
!9265 = !DILocation(line: 206, column: 189, scope: !9221)
!9266 = !DILocation(line: 206, column: 176, scope: !9221)
!9267 = !DILocation(line: 206, column: 200, scope: !9221)
!9268 = !DILocation(line: 206, column: 202, scope: !9221)
!9269 = !DILocation(line: 206, column: 201, scope: !9221)
!9270 = !DILocation(line: 206, column: 208, scope: !9221)
!9271 = !DILocation(line: 206, column: 195, scope: !9221)
!9272 = !DILocation(line: 206, column: 193, scope: !9221)
!9273 = !DILocation(line: 206, column: 173, scope: !9221)
!9274 = !DILocation(line: 206, column: 44, scope: !9221)
!9275 = !DILocation(line: 206, column: 42, scope: !9221)
!9276 = !DILocation(line: 206, column: 18, scope: !9220)
!9277 = !DILocation(line: 206, column: 15, scope: !9221)
!9278 = !DILocation(line: 206, column: 13, scope: !9221)
!9279 = !DILocation(line: 205, column: 30, scope: !9280)
!9280 = !DILexicalBlockFile(scope: !9221, file: !941, discriminator: 2)
!9281 = !DILocation(line: 205, column: 9, scope: !9280)
!9282 = distinct !{!9282, !9283}
!9283 = !DILocation(line: 205, column: 9, scope: !9203)
!9284 = !DILocation(line: 207, column: 17, scope: !9203)
!9285 = !DILocation(line: 207, column: 14, scope: !9203)
!9286 = !DILocation(line: 208, column: 17, scope: !9203)
!9287 = !DILocation(line: 208, column: 14, scope: !9203)
!9288 = !DILocation(line: 210, column: 5, scope: !9203)
!9289 = !DILocation(line: 203, column: 25, scope: !9290)
!9290 = !DILexicalBlockFile(scope: !9198, file: !941, discriminator: 2)
!9291 = !DILocation(line: 203, column: 5, scope: !9290)
!9292 = distinct !{!9292, !9293}
!9293 = !DILocation(line: 203, column: 5, scope: !9032)
!9294 = !DILocation(line: 212, column: 12, scope: !9032)
!9295 = !DILocation(line: 212, column: 5, scope: !9032)
!9296 = distinct !DISubprogram(name: "pix_median_abs8_c", scope: !941, file: !941, line: 323, type: !2756, isLocal: true, isDefinition: true, scopeLine: 325, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!9297 = !DILocalVariable(name: "v", arg: 1, scope: !9296, file: !941, line: 323, type: !2758)
!9298 = !DILocation(line: 323, column: 53, scope: !9296)
!9299 = !DILocalVariable(name: "pix1", arg: 2, scope: !9296, file: !941, line: 323, type: !1167)
!9300 = !DILocation(line: 323, column: 65, scope: !9296)
!9301 = !DILocalVariable(name: "pix2", arg: 3, scope: !9296, file: !941, line: 323, type: !1167)
!9302 = !DILocation(line: 323, column: 80, scope: !9296)
!9303 = !DILocalVariable(name: "stride", arg: 4, scope: !9296, file: !941, line: 324, type: !1792)
!9304 = !DILocation(line: 324, column: 40, scope: !9296)
!9305 = !DILocalVariable(name: "h", arg: 5, scope: !9296, file: !941, line: 324, type: !952)
!9306 = !DILocation(line: 324, column: 52, scope: !9296)
!9307 = !DILocalVariable(name: "s", scope: !9296, file: !941, line: 326, type: !952)
!9308 = !DILocation(line: 326, column: 9, scope: !9296)
!9309 = !DILocalVariable(name: "i", scope: !9296, file: !941, line: 326, type: !952)
!9310 = !DILocation(line: 326, column: 16, scope: !9296)
!9311 = !DILocalVariable(name: "j", scope: !9296, file: !941, line: 326, type: !952)
!9312 = !DILocation(line: 326, column: 19, scope: !9296)
!9313 = !DILocation(line: 330, column: 15, scope: !9296)
!9314 = !DILocation(line: 330, column: 25, scope: !9296)
!9315 = !DILocation(line: 330, column: 23, scope: !9296)
!9316 = !DILocation(line: 330, column: 10, scope: !9296)
!9317 = !DILocation(line: 330, column: 7, scope: !9296)
!9318 = !DILocation(line: 331, column: 15, scope: !9296)
!9319 = !DILocation(line: 331, column: 25, scope: !9296)
!9320 = !DILocation(line: 331, column: 23, scope: !9296)
!9321 = !DILocation(line: 331, column: 37, scope: !9296)
!9322 = !DILocation(line: 331, column: 47, scope: !9296)
!9323 = !DILocation(line: 331, column: 45, scope: !9296)
!9324 = !DILocation(line: 331, column: 34, scope: !9296)
!9325 = !DILocation(line: 331, column: 10, scope: !9296)
!9326 = !DILocation(line: 331, column: 7, scope: !9296)
!9327 = !DILocation(line: 332, column: 15, scope: !9296)
!9328 = !DILocation(line: 332, column: 25, scope: !9296)
!9329 = !DILocation(line: 332, column: 23, scope: !9296)
!9330 = !DILocation(line: 332, column: 37, scope: !9296)
!9331 = !DILocation(line: 332, column: 47, scope: !9296)
!9332 = !DILocation(line: 332, column: 45, scope: !9296)
!9333 = !DILocation(line: 332, column: 34, scope: !9296)
!9334 = !DILocation(line: 332, column: 10, scope: !9296)
!9335 = !DILocation(line: 332, column: 7, scope: !9296)
!9336 = !DILocation(line: 333, column: 15, scope: !9296)
!9337 = !DILocation(line: 333, column: 25, scope: !9296)
!9338 = !DILocation(line: 333, column: 23, scope: !9296)
!9339 = !DILocation(line: 333, column: 37, scope: !9296)
!9340 = !DILocation(line: 333, column: 47, scope: !9296)
!9341 = !DILocation(line: 333, column: 45, scope: !9296)
!9342 = !DILocation(line: 333, column: 34, scope: !9296)
!9343 = !DILocation(line: 333, column: 10, scope: !9296)
!9344 = !DILocation(line: 333, column: 7, scope: !9296)
!9345 = !DILocation(line: 334, column: 15, scope: !9296)
!9346 = !DILocation(line: 334, column: 25, scope: !9296)
!9347 = !DILocation(line: 334, column: 23, scope: !9296)
!9348 = !DILocation(line: 334, column: 37, scope: !9296)
!9349 = !DILocation(line: 334, column: 47, scope: !9296)
!9350 = !DILocation(line: 334, column: 45, scope: !9296)
!9351 = !DILocation(line: 334, column: 34, scope: !9296)
!9352 = !DILocation(line: 334, column: 10, scope: !9296)
!9353 = !DILocation(line: 334, column: 7, scope: !9296)
!9354 = !DILocation(line: 335, column: 15, scope: !9296)
!9355 = !DILocation(line: 335, column: 25, scope: !9296)
!9356 = !DILocation(line: 335, column: 23, scope: !9296)
!9357 = !DILocation(line: 335, column: 37, scope: !9296)
!9358 = !DILocation(line: 335, column: 47, scope: !9296)
!9359 = !DILocation(line: 335, column: 45, scope: !9296)
!9360 = !DILocation(line: 335, column: 34, scope: !9296)
!9361 = !DILocation(line: 335, column: 10, scope: !9296)
!9362 = !DILocation(line: 335, column: 7, scope: !9296)
!9363 = !DILocation(line: 336, column: 15, scope: !9296)
!9364 = !DILocation(line: 336, column: 25, scope: !9296)
!9365 = !DILocation(line: 336, column: 23, scope: !9296)
!9366 = !DILocation(line: 336, column: 37, scope: !9296)
!9367 = !DILocation(line: 336, column: 47, scope: !9296)
!9368 = !DILocation(line: 336, column: 45, scope: !9296)
!9369 = !DILocation(line: 336, column: 34, scope: !9296)
!9370 = !DILocation(line: 336, column: 10, scope: !9296)
!9371 = !DILocation(line: 336, column: 7, scope: !9296)
!9372 = !DILocation(line: 337, column: 15, scope: !9296)
!9373 = !DILocation(line: 337, column: 25, scope: !9296)
!9374 = !DILocation(line: 337, column: 23, scope: !9296)
!9375 = !DILocation(line: 337, column: 37, scope: !9296)
!9376 = !DILocation(line: 337, column: 47, scope: !9296)
!9377 = !DILocation(line: 337, column: 45, scope: !9296)
!9378 = !DILocation(line: 337, column: 34, scope: !9296)
!9379 = !DILocation(line: 337, column: 10, scope: !9296)
!9380 = !DILocation(line: 337, column: 7, scope: !9296)
!9381 = !DILocation(line: 339, column: 13, scope: !9296)
!9382 = !DILocation(line: 339, column: 10, scope: !9296)
!9383 = !DILocation(line: 340, column: 13, scope: !9296)
!9384 = !DILocation(line: 340, column: 10, scope: !9296)
!9385 = !DILocation(line: 342, column: 12, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9296, file: !941, line: 342, column: 5)
!9387 = !DILocation(line: 342, column: 10, scope: !9386)
!9388 = !DILocation(line: 342, column: 17, scope: !9389)
!9389 = !DILexicalBlockFile(scope: !9390, file: !941, discriminator: 1)
!9390 = distinct !DILexicalBlock(scope: !9386, file: !941, line: 342, column: 5)
!9391 = !DILocation(line: 342, column: 21, scope: !9389)
!9392 = !DILocation(line: 342, column: 19, scope: !9389)
!9393 = !DILocation(line: 342, column: 5, scope: !9389)
!9394 = !DILocation(line: 343, column: 19, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9390, file: !941, line: 342, column: 29)
!9396 = !DILocation(line: 343, column: 29, scope: !9395)
!9397 = !DILocation(line: 343, column: 27, scope: !9395)
!9398 = !DILocation(line: 343, column: 47, scope: !9395)
!9399 = !DILocation(line: 343, column: 46, scope: !9395)
!9400 = !DILocation(line: 343, column: 41, scope: !9395)
!9401 = !DILocation(line: 343, column: 63, scope: !9395)
!9402 = !DILocation(line: 343, column: 62, scope: !9395)
!9403 = !DILocation(line: 343, column: 57, scope: !9395)
!9404 = !DILocation(line: 343, column: 55, scope: !9395)
!9405 = !DILocation(line: 343, column: 38, scope: !9395)
!9406 = !DILocation(line: 343, column: 14, scope: !9395)
!9407 = !DILocation(line: 343, column: 11, scope: !9395)
!9408 = !DILocation(line: 344, column: 16, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9395, file: !941, line: 344, column: 9)
!9410 = !DILocation(line: 344, column: 14, scope: !9409)
!9411 = !DILocation(line: 344, column: 21, scope: !9412)
!9412 = !DILexicalBlockFile(scope: !9413, file: !941, discriminator: 1)
!9413 = distinct !DILexicalBlock(scope: !9409, file: !941, line: 344, column: 9)
!9414 = !DILocation(line: 344, column: 23, scope: !9412)
!9415 = !DILocation(line: 344, column: 9, scope: !9412)
!9416 = !DILocation(line: 345, column: 28, scope: !9413)
!9417 = !DILocation(line: 345, column: 23, scope: !9413)
!9418 = !DILocation(line: 345, column: 38, scope: !9413)
!9419 = !DILocation(line: 345, column: 33, scope: !9413)
!9420 = !DILocation(line: 345, column: 31, scope: !9413)
!9421 = !DILocation(line: 345, column: 59, scope: !9413)
!9422 = !DILocation(line: 345, column: 61, scope: !9413)
!9423 = !DILocation(line: 345, column: 60, scope: !9413)
!9424 = !DILocation(line: 345, column: 54, scope: !9413)
!9425 = !DILocation(line: 345, column: 76, scope: !9413)
!9426 = !DILocation(line: 345, column: 78, scope: !9413)
!9427 = !DILocation(line: 345, column: 77, scope: !9413)
!9428 = !DILocation(line: 345, column: 71, scope: !9413)
!9429 = !DILocation(line: 345, column: 69, scope: !9413)
!9430 = !DILocation(line: 345, column: 94, scope: !9413)
!9431 = !DILocation(line: 345, column: 95, scope: !9413)
!9432 = !DILocation(line: 345, column: 89, scope: !9413)
!9433 = !DILocation(line: 345, column: 106, scope: !9413)
!9434 = !DILocation(line: 345, column: 107, scope: !9413)
!9435 = !DILocation(line: 345, column: 101, scope: !9413)
!9436 = !DILocation(line: 345, column: 99, scope: !9413)
!9437 = !DILocation(line: 345, column: 119, scope: !9413)
!9438 = !DILocation(line: 345, column: 121, scope: !9413)
!9439 = !DILocation(line: 345, column: 120, scope: !9413)
!9440 = !DILocation(line: 345, column: 114, scope: !9413)
!9441 = !DILocation(line: 345, column: 136, scope: !9413)
!9442 = !DILocation(line: 345, column: 138, scope: !9413)
!9443 = !DILocation(line: 345, column: 137, scope: !9413)
!9444 = !DILocation(line: 345, column: 131, scope: !9413)
!9445 = !DILocation(line: 345, column: 129, scope: !9413)
!9446 = !DILocation(line: 345, column: 155, scope: !9413)
!9447 = !DILocation(line: 345, column: 156, scope: !9413)
!9448 = !DILocation(line: 345, column: 150, scope: !9413)
!9449 = !DILocation(line: 345, column: 167, scope: !9413)
!9450 = !DILocation(line: 345, column: 168, scope: !9413)
!9451 = !DILocation(line: 345, column: 162, scope: !9413)
!9452 = !DILocation(line: 345, column: 160, scope: !9413)
!9453 = !DILocation(line: 345, column: 147, scope: !9413)
!9454 = !DILocation(line: 345, column: 181, scope: !9413)
!9455 = !DILocation(line: 345, column: 183, scope: !9413)
!9456 = !DILocation(line: 345, column: 182, scope: !9413)
!9457 = !DILocation(line: 345, column: 189, scope: !9413)
!9458 = !DILocation(line: 345, column: 176, scope: !9413)
!9459 = !DILocation(line: 345, column: 200, scope: !9413)
!9460 = !DILocation(line: 345, column: 202, scope: !9413)
!9461 = !DILocation(line: 345, column: 201, scope: !9413)
!9462 = !DILocation(line: 345, column: 208, scope: !9413)
!9463 = !DILocation(line: 345, column: 195, scope: !9413)
!9464 = !DILocation(line: 345, column: 193, scope: !9413)
!9465 = !DILocation(line: 345, column: 173, scope: !9413)
!9466 = !DILocation(line: 345, column: 44, scope: !9413)
!9467 = !DILocation(line: 345, column: 42, scope: !9413)
!9468 = !DILocation(line: 345, column: 18, scope: !9412)
!9469 = !DILocation(line: 345, column: 15, scope: !9413)
!9470 = !DILocation(line: 345, column: 13, scope: !9413)
!9471 = !DILocation(line: 344, column: 29, scope: !9472)
!9472 = !DILexicalBlockFile(scope: !9413, file: !941, discriminator: 2)
!9473 = !DILocation(line: 344, column: 9, scope: !9472)
!9474 = distinct !{!9474, !9475}
!9475 = !DILocation(line: 344, column: 9, scope: !9395)
!9476 = !DILocation(line: 346, column: 17, scope: !9395)
!9477 = !DILocation(line: 346, column: 14, scope: !9395)
!9478 = !DILocation(line: 347, column: 17, scope: !9395)
!9479 = !DILocation(line: 347, column: 14, scope: !9395)
!9480 = !DILocation(line: 349, column: 5, scope: !9395)
!9481 = !DILocation(line: 342, column: 25, scope: !9482)
!9482 = !DILexicalBlockFile(scope: !9390, file: !941, discriminator: 2)
!9483 = !DILocation(line: 342, column: 5, scope: !9482)
!9484 = distinct !{!9484, !9485}
!9485 = !DILocation(line: 342, column: 5, scope: !9296)
!9486 = !DILocation(line: 351, column: 12, scope: !9296)
!9487 = !DILocation(line: 351, column: 5, scope: !9296)
!9488 = distinct !DISubprogram(name: "copy_block8", scope: !9489, file: !9489, line: 47, type: !9490, isLocal: true, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!9489 = !DIFile(filename: "libavcodec/copy_block.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!9490 = !DISubroutineType(types: !9491)
!9491 = !{null, !1167, !1077, !1792, !1792, !952}
!9492 = !DILocalVariable(name: "dst", arg: 1, scope: !9488, file: !9489, line: 47, type: !1167)
!9493 = !DILocation(line: 47, column: 41, scope: !9488)
!9494 = !DILocalVariable(name: "src", arg: 2, scope: !9488, file: !9489, line: 47, type: !1077)
!9495 = !DILocation(line: 47, column: 61, scope: !9488)
!9496 = !DILocalVariable(name: "dstStride", arg: 3, scope: !9488, file: !9489, line: 47, type: !1792)
!9497 = !DILocation(line: 47, column: 76, scope: !9488)
!9498 = !DILocalVariable(name: "srcStride", arg: 4, scope: !9488, file: !9489, line: 47, type: !1792)
!9499 = !DILocation(line: 47, column: 97, scope: !9488)
!9500 = !DILocalVariable(name: "h", arg: 5, scope: !9488, file: !9489, line: 47, type: !952)
!9501 = !DILocation(line: 47, column: 112, scope: !9488)
!9502 = !DILocalVariable(name: "i", scope: !9488, file: !9489, line: 49, type: !952)
!9503 = !DILocation(line: 49, column: 9, scope: !9488)
!9504 = !DILocation(line: 50, column: 12, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9488, file: !9489, line: 50, column: 5)
!9506 = !DILocation(line: 50, column: 10, scope: !9505)
!9507 = !DILocation(line: 50, column: 17, scope: !9508)
!9508 = !DILexicalBlockFile(scope: !9509, file: !9489, discriminator: 1)
!9509 = distinct !DILexicalBlock(scope: !9505, file: !9489, line: 50, column: 5)
!9510 = !DILocation(line: 50, column: 21, scope: !9508)
!9511 = !DILocation(line: 50, column: 19, scope: !9508)
!9512 = !DILocation(line: 50, column: 5, scope: !9508)
!9513 = !DILocation(line: 51, column: 81, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9509, file: !9489, line: 50, column: 29)
!9515 = !DILocation(line: 51, column: 88, scope: !9514)
!9516 = !DILocation(line: 51, column: 36, scope: !9514)
!9517 = !DILocation(line: 51, column: 43, scope: !9514)
!9518 = !DILocation(line: 51, column: 46, scope: !9514)
!9519 = !DILocation(line: 52, column: 16, scope: !9514)
!9520 = !DILocation(line: 52, column: 13, scope: !9514)
!9521 = !DILocation(line: 53, column: 16, scope: !9514)
!9522 = !DILocation(line: 53, column: 13, scope: !9514)
!9523 = !DILocation(line: 54, column: 5, scope: !9514)
!9524 = !DILocation(line: 50, column: 25, scope: !9525)
!9525 = !DILexicalBlockFile(scope: !9509, file: !9489, discriminator: 2)
!9526 = !DILocation(line: 50, column: 5, scope: !9525)
!9527 = distinct !{!9527, !9528}
!9528 = !DILocation(line: 50, column: 5, scope: !9488)
!9529 = !DILocation(line: 55, column: 1, scope: !9488)
!9530 = distinct !DISubprogram(name: "mid_pred", scope: !9531, file: !9531, line: 76, type: !9532, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !953)
!9531 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!9532 = !DISubroutineType(types: !9533)
!9533 = !{!952, !952, !952, !952}
!9534 = !DILocalVariable(name: "a", arg: 1, scope: !9530, file: !9531, line: 76, type: !952)
!9535 = !DILocation(line: 76, column: 55, scope: !9530)
!9536 = !DILocalVariable(name: "b", arg: 2, scope: !9530, file: !9531, line: 76, type: !952)
!9537 = !DILocation(line: 76, column: 62, scope: !9530)
!9538 = !DILocalVariable(name: "c", arg: 3, scope: !9530, file: !9531, line: 76, type: !952)
!9539 = !DILocation(line: 76, column: 69, scope: !9530)
!9540 = !DILocalVariable(name: "i", scope: !9530, file: !9531, line: 78, type: !952)
!9541 = !DILocation(line: 78, column: 9, scope: !9530)
!9542 = !DILocation(line: 78, column: 11, scope: !9530)
!9543 = !DILocation(line: 79, column: 5, scope: !9530)
!9544 = !DILocation(line: 88, column: 14, scope: !9530)
!9545 = !DILocation(line: 88, column: 22, scope: !9530)
!9546 = !{i32 190476, i32 190493, i32 190522, i32 190551, i32 190580, i32 190609, i32 190638, i32 190667}
!9547 = !DILocation(line: 90, column: 12, scope: !9530)
!9548 = !DILocation(line: 90, column: 5, scope: !9530)
