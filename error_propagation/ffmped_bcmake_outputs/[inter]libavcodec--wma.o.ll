; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--wma.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--wma.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CoefVLCTable = type { i32, i32, i32*, i8*, i16* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.WMACodecContext = type { %struct.AVCodecContext*, %struct.GetBitContext, %struct.PutBitContext, i32, i32, i32, i32, i32, i32, %struct.VLC, [5 x i32], [5 x [25 x i16]], [5 x i32], i32, [5 x i32], [5 x i32], [5 x [16 x i32]], %struct.VLC, [2 x [16 x i32]], [2 x [16 x i32]], [2 x %struct.VLC], [2 x i16*], [2 x float*], [2 x i16*], [2 x %struct.CoefVLCTable*], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [2 x i8], [2 x i32], [20 x i8], [2 x [2048 x float]], [2 x float], [2 x [2048 x float]], [24 x i8], [2 x [2048 x float]], [4096 x float], [5 x %struct.FFTContext], [5 x float*], [8 x i8], [2 x [4096 x float]], [32832 x i8], i32, i32, [8192 x float], i32, float, [2048 x float], [256 x float], [128 x float], [128 x float], %struct.AVFloatDSPContext*, [8 x i8] }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%union.unaligned_32 = type { i32 }

@ff_wma_hgain_huffcodes = constant [37 x i16] [i16 3, i16 743, i16 1, i16 1485, i16 93, i16 1481, i16 94, i16 3, i16 22, i16 11, i16 1, i16 6, i16 1, i16 6, i16 4, i16 5, i16 4, i16 7, i16 3, i16 7, i16 4, i16 10, i16 10, i16 2, i16 3, i16 0, i16 5, i16 2, i16 95, i16 4, i16 3, i16 2, i16 1480, i16 184, i16 1482, i16 1483, i16 1484], align 16
@ff_wma_hgain_huffbits = constant [37 x i8] c"\0A\0C\0A\0D\09\0D\09\08\07\05\05\04\04\03\03\03\04\03\04\04\05\05\06\08\07\0A\08\0A\09\08\09\09\0D\0A\0D\0D\0D", align 16
@ff_wma_lsp_codebook = constant [10 x [16 x float]] [[16 x float] [float 0x3FFFCC1940000000, float 0x3FFFABCEE0000000, float 0x3FFF8C74A0000000, float 0x3FFF66D500000000, float 0x3FFF34C5A0000000, float 0x3FFEEF0C20000000, float 0x3FFE83DC20000000, float 0x3FFDCA6680000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [16 x float] [float 0x3FFF8FC500000000, float 0x3FFF5F9100000000, float 0x3FFF327CA0000000, float 0x3FFF024CE0000000, float 0x3FFECD7B00000000, float 0x3FFE8FC720000000, float 0x3FFE46F4C0000000, float 0x3FFDF1A800000000, float 0x3FFD87C660000000, float 0x3FFD046D20000000, float 0x3FFC6B5160000000, float 0x3FFBB8F200000000, float 0x3FFADD8180000000, float 0x3FF9C0E240000000, float 0x3FF821FB80000000, float 0x3FF54C9BE0000000], [16 x float] [float 0x3FFE6ADE80000000, float 0x3FFDD65200000000, float 0x3FFD58DEA0000000, float 0x3FFCD3B320000000, float 0x3FFC4396C0000000, float 0x3FFBA68E80000000, float 0x3FFAF5DEE0000000, float 0x3FFA32B800000000, float 0x3FF95C3980000000, float 0x3FF84987E0000000, float 0x3FF6FD2100000000, float 0x3FF56E9DA0000000, float 0x3FF3DE41E0000000, float 0x3FF1F63300000000, float 0x3FEEF5BBA0000000, float 0x3FE7B208A0000000], [16 x float] [float 0x3FFC4F9EE0000000, float 0x3FFADA0220000000, float 0x3FF9976740000000, float 0x3FF891D760000000, float 0x3FF7986760000000, float 0x3FF697F7E0000000, float 0x3FF58582C0000000, float 0x3FF45FD380000000, float 0x3FF316AF20000000, float 0x3FF18FFB40000000, float 0x3FEF9F3AC0000000, float 0x3FEBEAA7C0000000, float 0x3FE7CC52A0000000, float 0x3FE32035A0000000, float 0x3FDBA0BFA0000000, float 0x3FC702B5E0000000], [16 x float] [float 0x3FF6F2D340000000, float 0x3FF5204A80000000, float 0x3FF35F31C0000000, float 0x3FF1B14640000000, float 0x3FF0170260000000, float 0x3FECE851A0000000, float 0x3FE9BD7060000000, float 0x3FE6A08940000000, float 0x3FE3563660000000, float 0x3FDFE188A0000000, float 0x3FD8A56720000000, float 0x3FD1592DA0000000, float 0x3FC27105A0000000, float 0x3F6203D8E0000000, float 0xBFC5687E80000000, float 0xBFD7A39BC0000000], [16 x float] [float 0x3FEFF77460000000, float 0x3FEAF0B1C0000000, float 0x3FE6A42580000000, float 0x3FE287B560000000, float 0x3FDE1D9560000000, float 0x3FD7A8AAE0000000, float 0x3FD12B4720000000, float 0x3FC5F818A0000000, float 0x3FB2741780000000, float 0xBF9F5D4D80000000, float 0xBFF667EE80000000, float 0xBFD0152140000000, float 0xBFD7D121A0000000, float 0xBFE0581DE0000000, float 0xBFE4C395C0000000, float 0xBFE9B2D580000000], [16 x float] [float 0x3FD0F84380000000, float 0x3FB029A620000000, float 0xBFB6B66800000000, float 0xBFCB0335E0000000, float 0xBFD3E274C0000000, float 0xBFD9653960000000, float 0xBFDE391800000000, float 0xBFE1555F20000000, float 0xBFE3A98DA0000000, float 0xBFE60FD6C0000000, float 0xBFE8817360000000, float 0xBFEB412220000000, float 0xBFEE7E1480000000, float 0xBFF10AD7A0000000, float 0xBFF3481E60000000, float 0xBFF604D2A0000000], [16 x float] [float 0xBFE142CA20000000, float 0xBFE79B5080000000, float 0xBFEC4BC400000000, float 0xBFF02DCA60000000, float 0xBFF2246AC0000000, float 0xBFF44AF5C0000000, float 0xBFF6BA0A20000000, float 0xBFF9ECE8C0000000, float 0xBFF1A01AE0000000, float 0xBFF2A45AC0000000, float 0xBFF3BBE380000000, float 0xBFF4DDC620000000, float 0xBFF606B080000000, float 0xBFF77F2220000000, float 0xBFF9385A40000000, float 0xBFFAB3F6A0000000], [16 x float] [float 0xBFD8B48D20000000, float 0xBFE1EC4940000000, float 0xBFE56EE0A0000000, float 0xBFE85440A0000000, float 0xBFEAD4AB60000000, float 0xBFED13E9E0000000, float 0xBFEF2BBC40000000, float 0xBFF0975880000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [16 x float] [float 0xBFF8FBB2E0000000, float 0xBFFA8D1140000000, float 0xBFFBA15EA0000000, float 0xBFFC750DA0000000, float 0xBFFD270900000000, float 0xBFFDCB9300000000, float 0xBFFE720820000000, float 0xBFFF2BD8C0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00]], align 16
@.str = private unnamed_addr constant [34 x i8] c"byte_offset_bits %d is too large\0A\00", align 1
@ff_wma_critical_freqs = external constant [25 x i16], align 16
@exponent_band_44100 = internal constant [3 x [25 x i8]] [[25 x i8] c"\0C\04\04\04\04\04\08\08\08\0C\10\14$\00\00\00\00\00\00\00\00\00\00\00\00", [25 x i8] c"\0F\04\08\04\08\08\04\08\08\0C\0C\0C\18\1C(L\00\00\00\00\00\00\00\00\00", [25 x i8] c"\11\04\08\08\04\0C\0C\08\08\18\10\14\18 (<P\98\00\00\00\00\00\00\00"], align 16
@exponent_band_32000 = internal constant [3 x [25 x i8]] [[25 x i8] c"\0B\04\04\08\04\04\0C\10\18\14\1C\04\00\00\00\00\00\00\00\00\00\00\00\00\00", [25 x i8] c"\0F\04\08\04\04\08\08\10\14\0C\14\14\1C(8\08\00\00\00\00\00\00\00\00\00", [25 x i8] c"\10\08\04\08\08\0C\10\14\18(  ,8Pp\10\00\00\00\00\00\00\00\00"], align 16
@exponent_band_22050 = internal constant [3 x [25 x i8]] [[25 x i8] c"\0A\04\08\04\08\08\0C\14\18\18\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [25 x i8] c"\0E\04\08\08\04\0C\0C\10\18\10\14\18 ($\00\00\00\00\00\00\00\00\00\00", [25 x i8] c"\17\04\04\04\08\04\04\08\08\08\08\08\0C\0C\10\10\18\18 ,0<TH\00"], align 16
@ff_sine_windows = external constant [16 x float*], align 16
@coef_vlcs = internal constant [6 x %struct.CoefVLCTable] [%struct.CoefVLCTable { i32 666, i32 60, i32* getelementptr inbounds ([666 x i32], [666 x i32]* @coef0_huffcodes, i32 0, i32 0), i8* getelementptr inbounds ([666 x i8], [666 x i8]* @coef0_huffbits, i32 0, i32 0), i16* getelementptr inbounds ([60 x i16], [60 x i16]* @levels0, i32 0, i32 0) }, %struct.CoefVLCTable { i32 555, i32 40, i32* getelementptr inbounds ([555 x i32], [555 x i32]* @coef1_huffcodes, i32 0, i32 0), i8* getelementptr inbounds ([555 x i8], [555 x i8]* @coef1_huffbits, i32 0, i32 0), i16* getelementptr inbounds ([40 x i16], [40 x i16]* @levels1, i32 0, i32 0) }, %struct.CoefVLCTable { i32 1336, i32 340, i32* getelementptr inbounds ([1336 x i32], [1336 x i32]* @coef2_huffcodes, i32 0, i32 0), i8* getelementptr inbounds ([1336 x i8], [1336 x i8]* @coef2_huffbits, i32 0, i32 0), i16* getelementptr inbounds ([340 x i16], [340 x i16]* @levels2, i32 0, i32 0) }, %struct.CoefVLCTable { i32 1072, i32 180, i32* getelementptr inbounds ([1072 x i32], [1072 x i32]* @coef3_huffcodes, i32 0, i32 0), i8* getelementptr inbounds ([1072 x i8], [1072 x i8]* @coef3_huffbits, i32 0, i32 0), i16* getelementptr inbounds ([180 x i16], [180 x i16]* @levels3, i32 0, i32 0) }, %struct.CoefVLCTable { i32 476, i32 70, i32* getelementptr inbounds ([476 x i32], [476 x i32]* @coef4_huffcodes, i32 0, i32 0), i8* getelementptr inbounds ([476 x i8], [476 x i8]* @coef4_huffbits, i32 0, i32 0), i16* getelementptr inbounds ([70 x i16], [70 x i16]* @levels4, i32 0, i32 0) }, %struct.CoefVLCTable { i32 435, i32 40, i32* getelementptr inbounds ([435 x i32], [435 x i32]* @coef5_huffcodes, i32 0, i32 0), i8* getelementptr inbounds ([435 x i8], [435 x i8]* @coef5_huffbits, i32 0, i32 0), i16* getelementptr inbounds ([40 x i16], [40 x i16]* @levels5, i32 0, i32 0) }], align 16
@.str.1 = private unnamed_addr constant [24 x i8] c"broken escape sequence\0A\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"overflow (%d > %d) in spectral RLE, ignoring\0A\00", align 1
@coef0_huffcodes = internal constant [666 x i32] [i32 600, i32 61, i32 0, i32 5, i32 8, i32 8, i32 12, i32 27, i32 31, i32 21, i32 36, i32 50, i32 58, i32 38, i32 44, i32 47, i32 74, i32 77, i32 97, i32 112, i32 115, i32 72, i32 82, i32 90, i32 93, i32 110, i32 153, i32 158, i32 193, i32 206, i32 228, i32 240, i32 147, i32 158, i32 162, i32 161, i32 184, i32 210, i32 211, i32 302, i32 304, i32 222, i32 301, i32 411, i32 484, i32 313, i32 314, i32 319, i32 335, i32 365, i32 418, i32 636, i32 638, i32 818, i32 828, i32 831, i32 907, i32 918, i32 965, i32 624, i32 636, i32 602, i32 917, i32 584, i32 1213, i32 1275, i32 1634, i32 1633, i32 1819, i32 1254, i32 1279, i32 1638, i32 1820, i32 1818, i32 1823, i32 1940, i32 1334, i32 1250, i32 1934, i32 1262, i32 1304, i32 1333, i32 1275, i32 1933, i32 1328, i32 1664, i32 1679, i32 1483, i32 2405, i32 1702, i32 2407, i32 2431, i32 1666, i32 1710, i32 3280, i32 3624, i32 3859, i32 3871, i32 2549, i32 3283, i32 3857, i32 2342, i32 2404, i32 3890, i32 3858, i32 3888, i32 2406, i32 3339, i32 2664, i32 2961, i32 2503, i32 2931, i32 4858, i32 4893, i32 5113, i32 7328, i32 6556, i32 7290, i32 6540, i32 4680, i32 7284, i32 7268, i32 5022, i32 4861, i32 2679, i32 4860, i32 7291, i32 4810, i32 5324, i32 5330, i32 5347, i32 5340, i32 4828, i32 13124, i32 9624, i32 9788, i32 13115, i32 9702, i32 6684, i32 7740, i32 5346, i32 13268, i32 6673, i32 13129, i32 15566, i32 5345, i32 6708, i32 10046, i32 9767, i32 10047, i32 14574, i32 14705, i32 15463, i32 15457, i32 13117, i32 14530, i32 9791, i32 14541, i32 9784, i32 11841, i32 13599, i32 13128, i32 15462, i32 13666, i32 10633, i32 10197, i32 13116, i32 11855, i32 13371, i32 11743, i32 19400, i32 10688, i32 11863, i32 19570, i32 9655, i32 13639, i32 13632, i32 10707, i32 19525, i32 9659, i32 26112, i32 19571, i32 19406, i32 13691, i32 10662, i32 10706, i32 9790, i32 10634, i32 29059, i32 26114, i32 31064, i32 19302, i32 21373, i32 21365, i32 20457, i32 19303, i32 31135, i32 19401, i32 20990, i32 27195, i32 23478, i32 20392, i32 29327, i32 21366, i32 18732, i32 21374, i32 31066, i32 27196, i32 58645, i32 30855, i32 26682, i32 20985, i32 20989, i32 52330, i32 27274, i32 52333, i32 23475, i32 26683, i32 20988, i32 21368, i32 29326, i32 30854, i32 23479, i32 62116, i32 31067, i32 26684, i32 40897, i32 26685, i32 46930, i32 38520, i32 41960, i32 27335, i32 20976, i32 46937, i32 27379, i32 19307, i32 62112, i32 62125, i32 38595, i32 58648, i32 46940, i32 54360, i32 52331, i32 21372, i32 26538, i32 20458, i32 13370, i32 52337, i32 38527, i32 40900, i32 38594, i32 58646, i32 62113, i32 54364, i32 54365, i32 54366, i32 77753, i32 38526, i32 104495, i32 39043, i32 38596, i32 46931, i32 77752, i32 62120, i32 117281, i32 38597, i32 58650, i32 117287, i32 77628, i32 54385, i32 62122, i32 46939, i32 77755, i32 62121, i32 62124, i32 54362, i32 46927, i32 38600, i32 93841, i32 38602, i32 77759, i32 53415, i32 78083, i32 54550, i32 93849, i32 76989, i32 41962, i32 104489, i32 46933, i32 170919, i32 117288, i32 170917, i32 93843, i32 104492, i32 104488, i32 154004, i32 41963, i32 117289, i32 93840, i32 117285, i32 104493, i32 117286, i32 93851, i32 46934, i32 38524, i32 154007, i32 46943, i32 104659, i32 46935, i32 105002, i32 54363, i32 58647, i32 117284, i32 117283, i32 117282, i32 46936, i32 93847, i32 52500, i32 78080, i32 7, i32 59, i32 107, i32 151, i32 312, i32 293, i32 371, i32 600, i32 821, i32 654, i32 1222, i32 1813, i32 1833, i32 1263, i32 1305, i32 1261, i32 1330, i32 1676, i32 1670, i32 2424, i32 3677, i32 3633, i32 2548, i32 2962, i32 4856, i32 3334, i32 2663, i32 3396, i32 2678, i32 3417, i32 4813, i32 7288, i32 7285, i32 6559, i32 6543, i32 7271, i32 5318, i32 7289, i32 7286, i32 2964, i32 3355, i32 7730, i32 7729, i32 6832, i32 6661, i32 6817, i32 13114, i32 9701, i32 9766, i32 13633, i32 13636, i32 13345, i32 13638, i32 11861, i32 11862, i32 18733, i32 11742, i32 10651, i32 11740, i32 13690, i32 9372, i32 26251, i32 116607, i32 117280, i32 54367, i32 39046, i32 93850, i32 62119, i32 46929, i32 41966, i32 53081, i32 53079, i32 46932, i32 53414, i32 93848, i32 46944, i32 27334, i32 41968, i32 77758, i32 78084, i32 62117, i32 41967, i32 54386, i32 76986, i32 104494, i32 93852, i32 116606, i32 104656, i32 78085, i32 93842, i32 46941, i32 54361, i32 26, i32 192, i32 364, i32 973, i32 848, i32 1659, i32 1310, i32 1705, i32 2548, i32 2930, i32 3337, i32 4681, i32 7741, i32 7329, i32 6687, i32 5921, i32 6794, i32 5864, i32 13127, i32 6709, i32 9373, i32 10650, i32 9622, i32 11854, i32 10635, i32 29058, i32 19526, i32 9658, i32 11840, i32 10198, i32 20456, i32 26119, i32 21264, i32 39044, i32 29409, i32 27197, i32 19306, i32 19578, i32 26115, i32 19579, i32 13352, i32 26117, i32 38500, i32 40896, i32 29150, i32 26113, i32 23474, i32 39045, i32 41954, i32 116255, i32 76987, i32 46928, i32 53080, i32 38525, i32 154005, i32 420013, i32 46938, i32 40898, i32 21375, i32 46942, i32 81838, i32 77756, i32 49, i32 452, i32 1221, i32 1464, i32 3316, i32 2415, i32 3398, i32 7767, i32 6660, i32 9765, i32 13126, i32 10489, i32 19527, i32 29408, i32 19305, i32 13344, i32 31063, i32 26169, i32 31134, i32 31065, i32 30849, i32 19304, i32 40899, i32 40918, i32 52336, i32 41969, i32 76990, i32 58126, i32 58651, i32 27378, i32 76988, i32 116605, i32 62123, i32 77757, i32 109103, i32 41964, i32 54387, i32 21367, i32 41961, i32 104491, i32 58112, i32 77631, i32 53087, i32 38592, i32 232508, i32 93844, i32 93845, i32 77629, i32 170916, i32 170918, i32 116604, i32 436410, i32 218204, i32 210007, i32 420012, i32 436411, i32 93853, i32 58649, i32 154006, i32 77630, i32 54, i32 830, i32 1709, i32 3331, i32 4808, i32 4682, i32 15426, i32 15565, i32 26118, i32 30848, i32 26706, i32 27194, i32 23476, i32 62114, i32 40903, i32 76985, i32 52332, i32 42728, i32 38593, i32 74, i32 853, i32 4857, i32 5352, i32 6846, i32 9654, i32 18734, i32 40902, i32 20991, i32 52335, i32 38603, i32 53361, i32 104657, i32 76984, i32 232509, i32 81839, i32 38601, i32 157, i32 1337, i32 4814, i32 13343, i32 10689, i32 19251, i32 41955, i32 53360, i32 93846, i32 46947, i32 160, i32 2510, i32 14540, i32 13373, i32 20986, i32 39048, i32 77754, i32 223, i32 2677, i32 10663, i32 40901, i32 58113, i32 38523, i32 487, i32 4809, i32 20987, i32 39049, i32 62118, i32 367, i32 7353, i32 53082, i32 76991, i32 38521, i32 626, i32 6677, i32 38522, i32 971, i32 9718, i32 46946, i32 653, i32 15456, i32 53086, i32 850, i32 15564, i32 1839, i32 29062, i32 1260, i32 21369, i32 1678, i32 39047, i32 1703, i32 27377, i32 3625, i32 53083, i32 3889, i32 54384, i32 2502, i32 5115, i32 78082, i32 6565, i32 78081, i32 6531, i32 7269, i32 4687, i32 5319, i32 5926, i32 6847, i32 13060, i32 9764, i32 15425, i32 10199, i32 11741, i32 11860, i32 13372, i32 26116, i32 29057, i32 26170, i32 20393, i32 26171, i32 21265, i32 21370, i32 26681, i32 23477, i32 18735, i32 27376, i32 38599, i32 52334, i32 21371, i32 53084, i32 53078, i32 104658, i32 53085, i32 41965, i32 62115, i32 104490, i32 46945, i32 38598], align 16
@coef0_huffbits = internal constant [666 x i8] calign 16
@levels0 = internal constant [60 x i16] [i16 317, i16 92, i16 62, i16 60, i16 19, i16 17, i16 10, i16 7, i16 6, i16 5, i16 5, i16 3, i16 3, i16 3, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 2, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1], align 16
@coef1_huffcodes = internal constant [555 x i32] [i32 277, i32 2, i32 1, i32 0, i32 13, i32 7, i32 19, i32 29, i32 8, i32 12, i32 35, i32 43, i32 63, i32 23, i32 27, i32 67, i32 73, i32 80, i32 85, i32 84, i32 103, i32 100, i32 123, i32 45, i32 40, i32 42, i32 133, i32 137, i32 43, i32 53, i32 144, i32 145, i32 148, i32 136, i32 193, i32 198, i32 242, i32 227, i32 197, i32 226, i32 54, i32 240, i32 167, i32 205, i32 251, i32 89, i32 278, i32 259, i32 264, i32 299, i32 301, i32 392, i32 302, i32 332, i32 451, i32 391, i32 487, i32 111, i32 148, i32 105, i32 486, i32 458, i32 327, i32 405, i32 167, i32 531, i32 521, i32 771, i32 661, i32 649, i32 652, i32 653, i32 786, i32 816, i32 667, i32 776, i32 808, i32 666, i32 606, i32 965, i32 900, i32 927, i32 919, i32 662, i32 814, i32 818, i32 966, i32 998, i32 301, i32 209, i32 1026, i32 221, i32 353, i32 299, i32 295, i32 1117, i32 1537, i32 1195, i32 1119, i32 1040, i32 1215, i32 1320, i32 1116, i32 1060, i32 1024, i32 1297, i32 1560, i32 1853, i32 1594, i32 1556, i32 1852, i32 1984, i32 1999, i32 2050, i32 2406, i32 2404, i32 2385, i32 2208, i32 838, i32 2051, i32 2642, i32 586, i32 1985, i32 1599, i32 294, i32 1030, i32 1929, i32 2210, i32 2400, i32 2407, i32 3077, i32 3184, i32 3193, i32 2653, i32 3110, i32 3149, i32 882, i32 2213, i32 3080, i32 709, i32 3857, i32 3268, i32 3982, i32 3606, i32 1174, i32 3703, i32 3996, i32 3109, i32 3870, i32 3111, i32 3871, i32 3607, i32 3277, i32 853, i32 3081, i32 3192, i32 3984, i32 1313, i32 855, i32 854, i32 1678, i32 3997, i32 3076, i32 3672, i32 2592, i32 2604, i32 3148, i32 1327, i32 3981, i32 4472, i32 4179, i32 4247, i32 6159, i32 6157, i32 4859, i32 4778, i32 8234, i32 2624, i32 6381, i32 7403, i32 5205, i32 6371, i32 4769, i32 852, i32 851, i32 3868, i32 3195, i32 3127, i32 4125, i32 4811, i32 4418, i32 6525, i32 4245, i32 7739, i32 6251, i32 1416, i32 7210, i32 5304, i32 7738, i32 6380, i32 8006, i32 4858, i32 2643, i32 7400, i32 2645, i32 7209, i32 4475, i32 4178, i32 4768, i32 1417, i32 2384, i32 7211, i32 2640, i32 8331, i32 6158, i32 8231, i32 9558, i32 7712, i32 1767, i32 7208, i32 6522, i32 1668, i32 8354, i32 7970, i32 12312, i32 14799, i32 15909, i32 9559, i32 10572, i32 10406, i32 3345, i32 10409, i32 10617, i32 3398, i32 2646, i32 14798, i32 12492, i32 12954, i32 5277, i32 20751, i32 17692, i32 8232, i32 12953, i32 7405, i32 5305, i32 3973, i32 3194, i32 6144, i32 833, i32 4810, i32 14792, i32 12957, i32 3341, i32 15904, i32 20804, i32 3397, i32 12496, i32 6253, i32 12501, i32 3343, i32 3392, i32 16660, i32 8353, i32 10623, i32 15908, i32 13041, i32 16455, i32 12500, i32 10408, i32 3342, i32 17693, i32 16452, i32 10622, i32 16450, i32 12498, i32 12495, i32 15905, i32 15910, i32 10405, i32 17690, i32 3400, i32 6678, i32 3396, i32 17688, i32 5275, i32 14794, i32 5272, i32 16445, i32 17691, i32 5276, i32 13043, i32 12491, i32 32883, i32 15906, i32 21146, i32 8362, i32 14796, i32 29578, i32 25904, i32 29577, i32 24979, i32 32881, i32 16451, i32 12494, i32 20807, i32 29576, i32 20805, i32 32882, i32 17697, i32 3399, i32 10620, i32 12493, i32 12490, i32 11, i32 12, i32 131, i32 228, i32 72, i32 258, i32 460, i32 501, i32 151, i32 523, i32 292, i32 1107, i32 1575, i32 1593, i32 1541, i32 1303, i32 440, i32 1635, i32 1639, i32 1987, i32 2083, i32 2401, i32 2403, i32 3674, i32 3673, i32 2603, i32 3263, i32 658, i32 2605, i32 2000, i32 2387, i32 3269, i32 3972, i32 1195, i32 5287, i32 1674, i32 4474, i32 1326, i32 5186, i32 1324, i32 3191, i32 3983, i32 1194, i32 4244, i32 6145, i32 4804, i32 10619, i32 2386, i32 7961, i32 1701, i32 4425, i32 4805, i32 6147, i32 8946, i32 12955, i32 17696, i32 5278, i32 3347, i32 7958, i32 7401, i32 4124, i32 1766, i32 14793, i32 24977, i32 31886, i32 24978, i32 51811, i32 14797, i32 24976, i32 26756, i32 26757, i32 29570, i32 3401, i32 3393, i32 17676, i32 5274, i32 12497, i32 32887, i32 15907, i32 6677, i32 59137, i32 59138, i32 32889, i32 33322, i32 41496, i32 30855, i32 16447, i32 21003, i32 21147, i32 59136, i32 17689, i32 7, i32 224, i32 208, i32 923, i32 997, i32 355, i32 1598, i32 1993, i32 2054, i32 2388, i32 4164, i32 8004, i32 6524, i32 8005, i32 2641, i32 8007, i32 2385, i32 1325, i32 8849, i32 2351, i32 2644, i32 3346, i32 10621, i32 3340, i32 5273, i32 12958, i32 13040, i32 8229, i32 14790, i32 2647, i32 15942, i32 3394, i32 29579, i32 20806, i32 16454, i32 32888, i32 20750, i32 30854, i32 10500, i32 16726, i32 16727, i32 24626, i32 12499, i32 35790, i32 16448, i32 16446, i32 42004, i32 66647, i32 32885, i32 26759, i32 31887, i32 14791, i32 29575, i32 32880, i32 35791, i32 84010, i32 66646, i32 84011, i32 6679, i32 26758, i32 17677, i32 19, i32 107, i32 1557, i32 2059, i32 2091, i32 2386, i32 3675, i32 6370, i32 6252, i32 7960, i32 12959, i32 3395, i32 15913, i32 20800, i32 20801, i32 51810, i32 24627, i32 15426, i32 15912, i32 17679, i32 41498, i32 29572, i32 41497, i32 59139, i32 41499, i32 6676, i32 29571, i32 17894, i32 122, i32 300, i32 3276, i32 1679, i32 6146, i32 2642, i32 2387, i32 16453, i32 6688, i32 17695, i32 164, i32 1845, i32 7404, i32 8233, i32 8355, i32 17694, i32 105, i32 3108, i32 8228, i32 13042, i32 20802, i32 406, i32 1315, i32 166, i32 6523, i32 779, i32 2350, i32 1001, i32 15911, i32 352, i32 20803, i32 1618, i32 16449, i32 1844, i32 10407, i32 2063, i32 5251, i32 2428, i32 832, i32 1675, i32 1314, i32 4180, i32 4246, i32 7959, i32 8235, i32 7402, i32 8352, i32 10616, i32 8230, i32 10618, i32 14795, i32 15915, i32 5279, i32 12956, i32 29573, i32 32884, i32 17678, i32 15914, i32 20809, i32 32886, i32 29574, i32 20808], align 16
@coef1_huffbits = internal constant [555 x i8] calign 16
@levels1 = internal constant [40 x i16] [i16 311, i16 91, i16 61, i16 28, i16 10, i16 6, i16 5, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1], align 16
@coef2_huffcodes = internal constant [1336 x i32] [i32 998, i32 246, i32 0, i32 2, i32 6, i32 15, i32 27, i32 40, i32 57, i32 63, i32 107, i32 118, i32 183, i32 232, i32 239, i32 361, i32 423, i32 468, i32 476, i32 708, i32 841, i32 853, i32 913, i32 988, i32 1409, i32 1458, i32 1688, i32 1804, i32 1877, i32 1850, i32 1908, i32 1999, i32 2826, i32 2918, i32 3374, i32 3422, i32 3611, i32 3756, i32 3674, i32 3966, i32 4001, i32 5694, i32 6711, i32 6738, i32 7225, i32 6835, i32 7519, i32 7350, i32 8018, i32 7641, i32 11268, i32 11310, i32 11309, i32 11299, i32 13415, i32 13475, i32 13595, i32 13569, i32 14941, i32 13596, i32 14453, i32 15850, i32 14715, i32 14811, i32 15857, i32 14808, i32 15284, i32 22538, i32 22605, i32 22594, i32 23315, i32 22762, i32 27005, i32 27142, i32 26828, i32 27335, i32 27286, i32 29428, i32 30019, i32 29364, i32 32032, i32 45059, i32 29621, i32 31718, i32 53632, i32 31697, i32 31928, i32 32006, i32 32037, i32 54002, i32 53658, i32 54068, i32 57820, i32 54569, i32 54660, i32 57810, i32 58851, i32 61124, i32 58724, i32 64073, i32 90113, i32 61148, i32 63482, i32 107308, i32 90417, i32 90115, i32 63944, i32 126848, i32 119456, i32 109131, i32 63438, i32 109566, i32 109136, i32 107608, i32 108566, i32 117476, i32 119550, i32 120110, i32 109132, i32 180805, i32 119457, i32 107357, i32 117275, i32 120280, i32 128305, i32 117276, i32 127881, i32 128175, i32 239079, i32 217595, i32 180811, i32 216014, i32 180813, i32 180809, i32 180810, i32 470524, i32 219119, i32 217090, i32 239078, i32 234545, i32 361531, i32 215671, i32 361521, i32 239091, i32 239069, i32 255461, i32 218813, i32 235374, i32 435154, i32 217101, i32 431300, i32 360637, i32 255464, i32 478101, i32 215662, i32 235388, i32 234546, i32 372946, i32 435160, i32 360632, i32 372939, i32 372951, i32 470510, i32 470509, i32 470508, i32 478108, i32 235391, i32 470506, i32 478110, i32 507517, i32 360639, i32 372949, i32 510888, i32 478097, i32 255453, i32 745841, i32 870067, i32 870073, i32 510881, i32 478111, i32 470497, i32 940533, i32 255467, i32 4, i32 21, i32 56, i32 117, i32 232, i32 467, i32 839, i32 924, i32 1680, i32 1866, i32 2912, i32 3731, i32 3956, i32 5693, i32 6746, i32 7460, i32 7358, i32 8011, i32 13416, i32 13666, i32 14663, i32 16002, i32 22532, i32 23314, i32 22531, i32 26989, i32 27294, i32 27004, i32 27000, i32 27387, i32 29874, i32 29429, i32 29632, i32 30017, i32 26948, i32 29879, i32 28883, i32 31657, i32 45233, i32 53679, i32 57821, i32 58850, i32 57763, i32 61123, i32 90415, i32 59745, i32 61146, i32 59278, i32 64072, i32 90412, i32 58641, i32 58725, i32 59731, i32 109130, i32 58781, i32 120108, i32 108561, i32 117479, i32 109564, i32 120109, i32 117455, i32 118533, i32 180820, i32 215666, i32 128172, i32 235371, i32 215665, i32 181977, i32 186483, i32 215658, i32 219111, i32 214604, i32 255477, i32 361523, i32 128314, i32 217098, i32 219114, i32 215667, i32 234543, i32 219109, i32 235381, i32 431309, i32 235378, i32 510885, i32 435183, i32 218243, i32 478104, i32 372929, i32 235376, i32 239063, i32 234547, i32 234548, i32 431310, i32 360638, i32 255487, i32 435180, i32 745839, i32 870065, i32 435153, i32 470501, i32 478062, i32 470505, i32 255744, i32 870070, i32 435177, i32 478057, i32 939637, i32 870072, i32 510890, i32 239057, i32 12, i32 60, i32 235, i32 497, i32 932, i32 1704, i32 2005, i32 3395, i32 3703, i32 5829, i32 7345, i32 11357, i32 14933, i32 14934, i32 15953, i32 15285, i32 23306, i32 27295, i32 29880, i32 32040, i32 53639, i32 54286, i32 54574, i32 54309, i32 60131, i32 57811, i32 90414, i32 58782, i32 61122, i32 58744, i32 58650, i32 58745, i32 58645, i32 59744, i32 53635, i32 53792, i32 53963, i32 58642, i32 93246, i32 90114, i32 93250, i32 117481, i32 214554, i32 119546, i32 107272, i32 108617, i32 118535, i32 127887, i32 215909, i32 180819, i32 126878, i32 117699, i32 117697, i32 180821, i32 127876, i32 361525, i32 181709, i32 239095, i32 180818, i32 234908, i32 181976, i32 239059, i32 437624, i32 435186, i32 510889, i32 745846, i32 470507, i32 235364, i32 255478, i32 239064, i32 477836, i32 435174, i32 431313, i32 437625, i32 1721746, i32 940539, i32 510899, i32 372941, i32 23, i32 181, i32 707, i32 1463, i32 2844, i32 3676, i32 5695, i32 6834, i32 7930, i32 13450, i32 14702, i32 22746, i32 26979, i32 27184, i32 29389, i32 29647, i32 31975, i32 53962, i32 53976, i32 59236, i32 59284, i32 90120, i32 90471, i32 90494, i32 109129, i32 107275, i32 108563, i32 181978, i32 107904, i32 117698, i32 63946, i32 90495, i32 119550, i32 63484, i32 93248, i32 58643, i32 61125, i32 63427, i32 120072, i32 108574, i32 119549, i32 234544, i32 218246, i32 255485, i32 180812, i32 182106, i32 215668, i32 239092, i32 214605, i32 431306, i32 239089, i32 120073, i32 120256, i32 214600, i32 214606, i32 435157, i32 435176, i32 435175, i32 372931, i32 180808, i32 127882, i32 239090, i32 435173, i32 41, i32 360, i32 1420, i32 2919, i32 3997, i32 7229, i32 7359, i32 11296, i32 13597, i32 15862, i32 27385, i32 29365, i32 45527, i32 45234, i32 54282, i32 54571, i32 59730, i32 59287, i32 91075, i32 115616, i32 127878, i32 117281, i32 214613, i32 180807, i32 128315, i32 180816, i32 180815, i32 127877, i32 126813, i32 118549, i32 117482, i32 109322, i32 118553, i32 128317, i32 120258, i32 119547, i32 126808, i32 215672, i32 219116, i32 128307, i32 239073, i32 431314, i32 361602, i32 239086, i32 181980, i32 219115, i32 372932, i32 235384, i32 435169, i32 510900, i32 239073, i32 478056, i32 239087, i32 239058, i32 234532, i32 470498, i32 940534, i32 940535, i32 255746, i32 255468, i32 127883, i32 59, i32 496, i32 1911, i32 4008, i32 7346, i32 11652, i32 14935, i32 15830, i32 26903, i32 27153, i32 32007, i32 60130, i32 59286, i32 63945, i32 63483, i32 90470, i32 90464, i32 109339, i32 109562, i32 186491, i32 119543, i32 235368, i32 127884, i32 214611, i32 214609, i32 435161, i32 217089, i32 240573, i32 231234, i32 234534, i32 215670, i32 239084, i32 215669, i32 217088, i32 218248, i32 118544, i32 181979, i32 219117, i32 219112, i32 219113, i32 239088, i32 431298, i32 745848, i32 470517, i32 234533, i32 234539, i32 478061, i32 478063, i32 745847, i32 745849, i32 478058, i32 745842, i32 361607, i32 255470, i32 255469, i32 470514, i32 470516, i32 510894, i32 435146, i32 462470, i32 216015, i32 435144, i32 89, i32 900, i32 3419, i32 7224, i32 13664, i32 14683, i32 22606, i32 26980, i32 29645, i32 45543, i32 59288, i32 59277, i32 64067, i32 108616, i32 107311, i32 109134, i32 214602, i32 128171, i32 127885, i32 239083, i32 239060, i32 218250, i32 435143, i32 372944, i32 435141, i32 510896, i32 431307, i32 239077, i32 255458, i32 234540, i32 186482, i32 128174, i32 239061, i32 431315, i32 361601, i32 217097, i32 235380, i32 361522, i32 745836, i32 372955, i32 218251, i32 745844, i32 1924501, i32 720972, i32 510898, i32 239077, i32 477839, i32 940537, i32 470518, i32 940541, i32 510893, i32 868989, i32 470271, i32 235386, i32 372953, i32 745837, i32 745835, i32 1721747, i32 510895, i32 372954, i32 113, i32 1003, i32 5635, i32 11372, i32 14689, i32 26824, i32 27185, i32 29373, i32 53954, i32 58651, i32 58854, i32 109563, i32 119551, i32 117477, i32 126812, i32 126814, i32 118547, i32 215661, i32 235373, i32 745834, i32 255474, i32 435140, i32 745833, i32 255452, i32 360633, i32 478105, i32 481124, i32 361524, i32 239065, i32 431194, i32 431193, i32 218252, i32 239081, i32 431191, i32 470513, i32 431198, i32 435038, i32 255745, i32 745832, i32 372957, i32 239070, i32 435138, i32 868984, i32 435148, i32 470525, i32 745829, i32 1441946, i32 510897, i32 868988, i32 745826, i32 947806, i32 1895614, i32 510902, i32 431188, i32 745824, i32 868986, i32 1924502, i32 728429, i32 940532, i32 470504, i32 239067, i32 122, i32 1710, i32 7228, i32 15034, i32 22761, i32 29388, i32 53981, i32 53805, i32 61121, i32 61147, i32 119458, i32 126811, i32 219106, i32 240575, i32 119545, i32 217092, i32 239068, i32 217596, i32 235372, i32 435142, i32 435147, i32 255466, i32 940531, i32 435150, i32 431186, i32 940528, i32 478096, i32 868985, i32 868987, i32 510901, i32 372933, i32 239075, i32 239074, i32 208, i32 1909, i32 7934, i32 15829, i32 29324, i32 31929, i32 57762, i32 60037, i32 61144, i32 107274, i32 109135, i32 239071, i32 217096, i32 239072, i32 255476, i32 255479, i32 728428, i32 361534, i32 215664, i32 470520, i32 478059, i32 868991, i32 470512, i32 372927, i32 372928, i32 870064, i32 470511, i32 940536, i32 1453668, i32 728431, i32 239072, i32 234535, i32 430438, i32 435170, i32 435171, i32 477837, i32 868990, i32 1924503, i32 870068, i32 372952, i32 435155, i32 224, i32 2915, i32 13516, i32 27187, i32 29641, i32 57760, i32 63485, i32 63948, i32 90493, i32 117483, i32 128169, i32 240563, i32 431184, i32 234528, i32 235383, i32 255456, i32 435156, i32 435181, i32 745830, i32 940529, i32 728430, i32 939638, i32 435178, i32 939636, i32 745827, i32 870071, i32 510886, i32 870074, i32 1924500, i32 745828, i32 435185, i32 510882, i32 431185, i32 470522, i32 870075, i32 470519, i32 478100, i32 1895615, i32 940538, i32 1441947, i32 435172, i32 230, i32 3732, i32 14454, i32 28911, i32 54570, i32 90133, i32 90132, i32 109561, i32 118551, i32 215673, i32 214608, i32 255749, i32 435152, i32 361520, i32 478109, i32 507518, i32 372926, i32 235379, i32 435166, i32 251, i32 3963, i32 15831, i32 31696, i32 58780, i32 63949, i32 118552, i32 119551, i32 215674, i32 234537, i32 217100, i32 470496, i32 431190, i32 507516, i32 870069, i32 870066, i32 435165, i32 418, i32 5691, i32 26899, i32 45078, i32 64066, i32 107309, i32 118534, i32 215676, i32 215677, i32 745825, i32 218241, i32 255482, i32 510880, i32 507519, i32 510883, i32 510887, i32 372947, i32 470502, i32 435164, i32 425, i32 6836, i32 27188, i32 54378, i32 90416, i32 126815, i32 128306, i32 128310, i32 234542, i32 361526, i32 435163, i32 431195, i32 457, i32 7328, i32 29323, i32 61145, i32 128313, i32 117277, i32 235365, i32 235366, i32 361529, i32 431197, i32 235367, i32 467, i32 7980, i32 31740, i32 90465, i32 214610, i32 239085, i32 218253, i32 361528, i32 435162, i32 705, i32 11358, i32 54069, i32 109338, i32 186484, i32 217094, i32 218244, i32 372940, i32 478106, i32 470515, i32 435158, i32 730, i32 13491, i32 54702, i32 117486, i32 186481, i32 219107, i32 478103, i32 470521, i32 360634, i32 372948, i32 845, i32 13646, i32 63312, i32 117696, i32 239079, i32 239076, i32 901, i32 14936, i32 93249, i32 181711, i32 255457, i32 478060, i32 939639, i32 435167, i32 912, i32 15952, i32 91074, i32 186486, i32 218242, i32 372950, i32 361530, i32 927, i32 22622, i32 107907, i32 217103, i32 478099, i32 235377, i32 996, i32 26898, i32 93251, i32 219105, i32 1418, i32 26991, i32 128312, i32 372937, i32 435151, i32 1462, i32 27384, i32 128308, i32 361603, i32 435168, i32 1685, i32 32002, i32 117480, i32 361605, i32 1698, i32 30026, i32 219118, i32 235387, i32 1864, i32 29874, i32 215675, i32 1833, i32 45536, i32 214601, i32 255459, i32 1853, i32 53956, i32 255462, i32 1979, i32 45209, i32 235362, i32 372942, i32 431199, i32 2001, i32 54699, i32 235385, i32 2003, i32 54575, i32 235363, i32 431196, i32 2842, i32 53957, i32 218249, i32 3363, i32 60141, i32 255480, i32 3378, i32 90134, i32 255483, i32 3393, i32 59240, i32 239085, i32 3615, i32 90135, i32 360487, i32 3757, i32 64007, i32 431189, i32 3668, i32 90411, i32 3669, i32 107905, i32 3960, i32 107307, i32 360636, i32 435182, i32 3961, i32 109565, i32 3989, i32 109336, i32 435184, i32 5687, i32 109133, i32 5677, i32 128316, i32 435187, i32 6705, i32 108560, i32 235369, i32 6736, i32 117487, i32 6710, i32 107310, i32 6759, i32 127886, i32 6789, i32 126809, i32 6822, i32 126851, i32 7505, i32 180242, i32 7507, i32 186489, i32 7518, i32 217093, i32 7354, i32 118532, i32 431187, i32 7469, i32 217599, i32 7981, i32 186479, i32 7977, i32 217095, i32 11298, i32 217594, i32 11267, i32 239084, i32 11359, i32 239083, i32 11352, i32 215659, i32 13417, i32 218814, i32 11353, i32 215660, i32 13418, i32 239082, i32 13501, i32 13503, i32 218815, i32 14442, i32 15033, i32 361535, i32 14443, i32 239093, i32 14923, i32 234529, i32 15012, i32 239081, i32 14938, i32 14688, i32 235390, i32 15849, i32 14680, i32 15863, i32 14817, i32 255460, i32 14687, i32 431192, i32 16017, i32 15858, i32 234536, i32 22770, i32 16000, i32 435139, i32 16019, i32 431296, i32 22712, i32 372938, i32 22607, i32 431297, i32 22769, i32 26838, i32 27152, i32 27331, i32 27186, i32 28882, i32 26897, i32 29873, i32 29844, i32 27348, i32 27350, i32 29368, i32 27386, i32 29875, i32 30016, i32 29646, i32 45061, i32 29875, i32 29845, i32 29881, i32 54070, i32 31743, i32 30563, i32 29640, i32 32041, i32 46626, i32 53793, i32 53633, i32 45521, i32 29880, i32 45520, i32 53659, i32 53955, i32 45426, i32 53980, i32 46627, i32 54698, i32 54310, i32 53634, i32 59285, i32 57809, i32 54071, i32 59756, i32 58852, i32 58644, i32 60142, i32 90112, i32 59239, i32 57761, i32 59279, i32 90116, i32 63426, i32 59289, i32 58855, i32 58726, i32 59241, i32 63313, i32 61150, i32 64006, i32 90117, i32 64159, i32 108006, i32 59238, i32 90991, i32 61149, i32 61120, i32 107273, i32 118474, i32 91085, i32 63947, i32 61151, i32 107906, i32 90413, i32 58853, i32 109560, i32 107276, i32 117279, i32 91084, i32 107356, i32 117278, i32 109137, i32 91052, i32 108622, i32 107839, i32 118550, i32 119548, i32 107955, i32 109337, i32 108575, i32 120259, i32 93247, i32 120257, i32 119548, i32 128170, i32 108562, i32 128309, i32 118546, i32 108567, i32 90492, i32 109323, i32 119544, i32 126850, i32 186490, i32 120111, i32 128304, i32 109128, i32 218247, i32 119549, i32 128173, i32 118545, i32 214555, i32 218245, i32 117280, i32 117485, i32 117478, i32 109567, i32 214607, i32 215663, i32 126849, i32 214603, i32 236950, i32 127875, i32 128311, i32 118548, i32 181710, i32 217102, i32 180817, i32 117484, i32 127879, i32 214612, i32 219108, i32 186488, i32 217099, i32 218240, i32 239080, i32 218254, i32 215908, i32 128168, i32 217091, i32 255455, i32 186480, i32 219110, i32 255472, i32 126810, i32 239082, i32 127880, i32 255747, i32 180814, i32 239074, i32 217597, i32 181981, i32 255748, i32 217598, i32 186485, i32 372935, i32 235370, i32 239078, i32 234531, i32 361600, i32 180806, i32 239075, i32 186487, i32 255473, i32 240574, i32 361609, i32 255481, i32 219104, i32 240572, i32 372934, i32 430439, i32 430437, i32 255465, i32 234530, i32 235375, i32 235389, i32 255454, i32 435145, i32 363416, i32 239094, i32 239056, i32 361606, i32 435137, i32 255484, i32 372956, i32 218255, i32 234541, i32 431305, i32 361604, i32 239080, i32 478107, i32 478102, i32 431312, i32 361608, i32 239076, i32 234538, i32 470722, i32 235382, i32 372945, i32 372943, i32 239062, i32 940540, i32 372936, i32 255463, i32 510903, i32 462471, i32 510891, i32 372930, i32 431299, i32 477838, i32 255475, i32 435149, i32 470526, i32 473902, i32 470720, i32 431301, i32 361527, i32 431304, i32 470527, i32 234549, i32 361533, i32 435159, i32 470721, i32 860872, i32 431311, i32 745843, i32 255486, i32 360635, i32 940530, i32 745838, i32 745845, i32 239066, i32 372925, i32 431308, i32 361532, i32 431303, i32 478098, i32 470723, i32 431302, i32 745840, i32 510892, i32 726835, i32 510884, i32 745831, i32 470503, i32 470500, i32 435136, i32 255471, i32 1453669, i32 470499, i32 470523, i32 435039, i32 435179], align 16
@coef2_huffbits = internal constant [1336 x i8] calign 16
@levels2 = internal constant [340 x i16] [i16 181, i16 110, i16 78, i16 63, i16 61, i16 62, i16 60, i16 61, i16 33, i16 41, i16 41, i16 19, i16 17, i16 19, i16 12, i16 11, i16 9, i16 11, i16 10, i16 6, i16 8, i16 7, i16 6, i16 4, i16 5, i16 5, i16 4, i16 4, i16 3, i16 4, i16 3, i16 5, i16 3, i16 4, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2, i16 4, i16 2, i16 3, i16 2, i16 3, i16 3, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 3, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 2, i16 1, i16 2, i16 2, i16 2, i16 2, i16 1, i16 2, i16 1, i16 1, i16 1, i16 2, i16 2, i16 1, i16 2, i16 1, i16 2, i16 2, i16 2, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1], align 16
@coef3_huffcodes = internal constant [1072 x i32] [i32 434, i32 105, i32 0, i32 4, i32 6, i32 14, i32 20, i32 25, i32 22, i32 43, i32 48, i32 61, i32 60, i32 90, i32 95, i32 109, i32 126, i32 95, i32 127, i32 182, i32 188, i32 216, i32 242, i32 254, i32 188, i32 252, i32 353, i32 366, i32 372, i32 374, i32 418, i32 483, i32 499, i32 372, i32 378, i32 490, i32 680, i32 708, i32 742, i32 788, i32 838, i32 871, i32 1001, i32 741, i32 750, i32 982, i32 1365, i32 1364, i32 1367, i32 1475, i32 1494, i32 1760, i32 1583, i32 1762, i32 1945, i32 1929, i32 2042, i32 1486, i32 2046, i32 1516, i32 1996, i32 1967, i32 2727, i32 2841, i32 2964, i32 2949, i32 2975, i32 3144, i32 3141, i32 3544, i32 3148, i32 3147, i32 3481, i32 3359, i32 3522, i32 3989, i32 4002, i32 2997, i32 2975, i32 3933, i32 3007, i32 3911, i32 5450, i32 4053, i32 3909, i32 3967, i32 5645, i32 6281, i32 5975, i32 5922, i32 6323, i32 5933, i32 6713, i32 6680, i32 7091, i32 6960, i32 7779, i32 5948, i32 6965, i32 5923, i32 7808, i32 8174, i32 5985, i32 8188, i32 8063, i32 11388, i32 8097, i32 6011, i32 5973, i32 5978, i32 8102, i32 11947, i32 12554, i32 11369, i32 13929, i32 12583, i32 12547, i32 11843, i32 13922, i32 12645, i32 12580, i32 12603, i32 12561, i32 13928, i32 13371, i32 15442, i32 16124, i32 11884, i32 16346, i32 16120, i32 11899, i32 16098, i32 15557, i32 15730, i32 22720, i32 15864, i32 11945, i32 15998, i32 21869, i32 23682, i32 15729, i32 15995, i32 15426, i32 22743, i32 16206, i32 25088, i32 15728, i32 23730, i32 23702, i32 23728, i32 16197, i32 23729, i32 11885, i32 12560, i32 12136, i32 23696, i32 31910, i32 31880, i32 25092, i32 25288, i32 30886, i32 31110, i32 31189, i32 45485, i32 31113, i32 45177, i32 23773, i32 43732, i32 24040, i32 32205, i32 31111, i32 23911, i32 23961, i32 47389, i32 31985, i32 23963, i32 31191, i32 45179, i32 23685, i32 23962, i32 32204, i32 32447, i32 32206, i32 32251, i32 32448, i32 32026, i32 31239, i32 23684, i32 50289, i32 31986, i32 47855, i32 47570, i32 24043, i32 31702, i32 47173, i32 23960, i32 47386, i32 47848, i32 50400, i32 56369, i32 63805, i32 48078, i32 53714, i32 63401, i32 55737, i32 48075, i32 47360, i32 43735, i32 47805, i32 50401, i32 62575, i32 50568, i32 50571, i32 90342, i32 48079, i32 47811, i32 63813, i32 63395, i32 53697, i32 64398, i32 63396, i32 64396, i32 62476, i32 50291, i32 64882, i32 48077, i32 65530, i32 63808, i32 48073, i32 63400, i32 106989, i32 48069, i32 127599, i32 91133, i32 90311, i32 106997, i32 63815, i32 91132, i32 87219, i32 65526, i32 91126, i32 90345, i32 106992, i32 47801, i32 47802, i32 94342, i32 47363, i32 64885, i32 62216, i32 95987, i32 91135, i32 64893, i32 113528, i32 91131, i32 100571, i32 106999, i32 87218, i32 94973, i32 91124, i32 113523, i32 94975, i32 47804, i32 63869, i32 106995, i32 113517, i32 131029, i32 106996, i32 127602, i32 95104, i32 95106, i32 131047, i32 47816, i32 48068, i32 100563, i32 90336, i32 64891, i32 94815, i32 94965, i32 113529, i32 129753, i32 127593, i32 100560, i32 47812, i32 47813, i32 201093, i32 100562, i32 100556, i32 201095, i32 255998, i32 100561, i32 113516, i32 127592, i32 129746, i32 131033, i32 106986, i32 113512, i32 129739, i32 261554, i32 124954, i32 100558, i32 94971, i32 106991, i32 129742, i32 113520, i32 47809, i32 113515, i32 94968, i32 113510, i32 131039, i32 113514, i32 131031, i32 127590, i32 95992, i32 226899, i32 129662, i32 201090, i32 129736, i32 182243, i32 225518, i32 95980, i32 95977, i32 189628, i32 90309, i32 226906, i32 249500, i32 95091, i32 95976, i32 100564, i32 95985, i32 95983, i32 226905, i32 113532, i32 131038, i32 95986, i32 201099, i32 182228, i32 226897, i32 380575, i32 226896, i32 201105, i32 259318, i32 259317, i32 499820, i32 129729, i32 379259, i32 182240, i32 499002, i32 255997, i32 182239, i32 259312, i32 499821, i32 227009, i32 499003, i32 4, i32 20, i32 89, i32 171, i32 184, i32 375, i32 501, i32 498, i32 789, i32 1020, i32 1469, i32 1581, i32 1768, i32 2013, i32 2820, i32 1997, i32 2846, i32 3358, i32 3861, i32 3899, i32 3905, i32 5448, i32 6320, i32 5947, i32 6276, i32 6684, i32 7092, i32 7973, i32 6069, i32 5997, i32 7928, i32 11891, i32 12551, i32 12581, i32 12549, i32 11849, i32 15592, i32 16121, i32 15966, i32 11890, i32 13425, i32 16345, i32 25151, i32 30880, i32 26727, i32 23731, i32 25202, i32 26860, i32 28314, i32 31188, i32 28312, i32 45482, i32 28186, i32 31109, i32 26862, i32 28315, i32 23688, i32 45484, i32 32250, i32 23909, i32 31984, i32 31935, i32 50293, i32 90347, i32 113534, i32 63398, i32 130781, i32 90339, i32 65531, i32 64397, i32 65529, i32 53696, i32 50572, i32 106985, i32 47800, i32 62927, i32 65525, i32 227013, i32 106988, i32 90349, i32 130782, i32 129737, i32 106987, i32 127524, i32 95982, i32 64889, i32 94336, i32 95111, i32 113530, i32 131049, i32 95991, i32 95109, i32 96129, i32 182229, i32 96133, i32 131043, i32 91125, i32 129730, i32 255993, i32 201101, i32 261553, i32 131042, i32 127526, i32 201098, i32 182233, i32 201104, i32 201100, i32 259315, i32 113535, i32 113522, i32 201092, i32 758516, i32 255995, i32 451033, i32 129738, i32 402176, i32 261560, i32 249911, i32 255996, i32 402177, i32 259314, i32 127594, i32 14, i32 99, i32 248, i32 494, i32 887, i32 1015, i32 1763, i32 1484, i32 2821, i32 3538, i32 4052, i32 5934, i32 5930, i32 7715, i32 7981, i32 5987, i32 5993, i32 5996, i32 11893, i32 12548, i32 11969, i32 15960, i32 22591, i32 16226, i32 16196, i32 22725, i32 25148, i32 23796, i32 31703, i32 23965, i32 43730, i32 23910, i32 45481, i32 45176, i32 31998, i32 47384, i32 50287, i32 47385, i32 47175, i32 28187, i32 47179, i32 43736, i32 64884, i32 94964, i32 94337, i32 63868, i32 127603, i32 63392, i32 64892, i32 94967, i32 64890, i32 113527, i32 94974, i32 127600, i32 64883, i32 113531, i32 106940, i32 113533, i32 48067, i32 94966, i32 47851, i32 64399, i32 259316, i32 261556, i32 227016, i32 255994, i32 131024, i32 402179, i32 758517, i32 127585, i32 201097, i32 261557, i32 182235, i32 227017, i32 129750, i32 129745, i32 21, i32 240, i32 736, i32 1422, i32 1495, i32 3149, i32 4001, i32 3035, i32 5974, i32 8048, i32 11289, i32 12604, i32 14095, i32 15552, i32 11944, i32 22726, i32 22727, i32 11959, i32 22736, i32 32024, i32 43608, i32 47176, i32 23966, i32 23916, i32 47180, i32 50569, i32 47361, i32 91128, i32 47817, i32 47557, i32 63804, i32 100568, i32 48071, i32 90348, i32 64879, i32 100569, i32 90346, i32 63399, i32 63812, i32 47787, i32 56378, i32 100559, i32 95995, i32 182232, i32 182231, i32 113525, i32 380574, i32 402178, i32 225517, i32 95988, i32 131025, i32 225519, i32 259320, i32 227015, i32 131041, i32 227014, i32 95999, i32 451032, i32 95990, i32 94343, i32 62925, i32 53, i32 416, i32 1419, i32 2732, i32 2970, i32 5983, i32 7714, i32 7820, i32 8114, i32 12555, i32 22737, i32 21806, i32 23591, i32 26734, i32 31911, i32 50292, i32 56371, i32 31730, i32 24041, i32 31285, i32 47786, i32 47595, i32 64405, i32 47544, i32 95105, i32 127586, i32 100557, i32 94344, i32 94970, i32 63394, i32 129747, i32 47808, i32 226908, i32 130783, i32 127525, i32 129748, i32 182234, i32 380573, i32 255992, i32 123395, i32 100567, i32 84, i32 704, i32 1953, i32 3960, i32 6966, i32 8099, i32 12602, i32 13366, i32 13370, i32 32029, i32 31704, i32 23775, i32 47174, i32 45449, i32 55736, i32 65528, i32 55742, i32 50570, i32 24042, i32 53715, i32 90340, i32 127595, i32 100570, i32 123394, i32 182226, i32 91134, i32 201107, i32 96130, i32 227010, i32 182225, i32 261552, i32 226909, i32 182224, i32 129744, i32 123393, i32 100573, i32 182242, i32 226903, i32 226901, i32 227012, i32 227008, i32 95978, i32 111, i32 975, i32 3541, i32 7971, i32 11361, i32 11984, i32 23892, i32 21805, i32 30851, i32 45480, i32 47388, i32 47807, i32 47362, i32 63402, i32 63397, i32 106984, i32 131030, i32 47806, i32 106943, i32 91123, i32 131032, i32 129751, i32 127605, i32 131036, i32 125, i32 1468, i32 5449, i32 10905, i32 15855, i32 25203, i32 31190, i32 32027, i32 43731, i32 53500, i32 182237, i32 100566, i32 47810, i32 182241, i32 113526, i32 106941, i32 201094, i32 64888, i32 106942, i32 201091, i32 261558, i32 259313, i32 226898, i32 129749, i32 259321, i32 255999, i32 380572, i32 226907, i32 201096, i32 95090, i32 189, i32 1931, i32 7969, i32 15427, i32 15853, i32 43734, i32 32449, i32 63810, i32 23686, i32 94345, i32 47803, i32 131048, i32 182238, i32 127598, i32 129732, i32 259319, i32 226902, i32 129661, i32 227011, i32 261555, i32 201103, i32 129734, i32 248, i32 2029, i32 7933, i32 15994, i32 23697, i32 43737, i32 47852, i32 56370, i32 62574, i32 123392, i32 95994, i32 226910, i32 261559, i32 182230, i32 261561, i32 226900, i32 226904, i32 201102, i32 131035, i32 246, i32 3139, i32 12550, i32 26863, i32 47181, i32 45448, i32 48076, i32 127588, i32 113513, i32 95110, i32 129728, i32 369, i32 3897, i32 15937, i32 26861, i32 55740, i32 63393, i32 113511, i32 131037, i32 95993, i32 441, i32 3965, i32 16227, i32 53501, i32 47594, i32 100572, i32 129731, i32 106994, i32 201106, i32 131044, i32 502, i32 5972, i32 26725, i32 62217, i32 90341, i32 95989, i32 226911, i32 129740, i32 489, i32 6682, i32 25089, i32 61701, i32 95984, i32 735, i32 5974, i32 23917, i32 91130, i32 95981, i32 834, i32 11840, i32 53503, i32 94338, i32 973, i32 10904, i32 65532, i32 182236, i32 129663, i32 1022, i32 14180, i32 65533, i32 95996, i32 129733, i32 759, i32 11985, i32 64407, i32 1418, i32 11996, i32 48072, i32 1492, i32 25149, i32 90344, i32 1582, i32 22576, i32 91129, i32 1771, i32 25093, i32 127604, i32 2014, i32 25289, i32 127589, i32 1481, i32 23774, i32 131027, i32 1492, i32 31112, i32 1998, i32 47177, i32 2843, i32 23689, i32 129735, i32 2963, i32 23683, i32 2974, i32 61775, i32 3146, i32 47559, i32 3540, i32 50288, i32 127601, i32 3896, i32 64406, i32 95979, i32 4000, i32 91127, i32 2994, i32 47387, i32 3006, i32 61698, i32 3908, i32 63814, i32 129741, i32 3961, i32 55741, i32 5453, i32 48070, i32 4050, i32 90343, i32 5931, i32 100555, i32 5982, i32 64886, i32 5980, i32 113521, i32 6303, i32 106990, i32 7972, i32 106998, i32 7079, i32 48074, i32 8061, i32 65535, i32 7982, i32 113509, i32 7093, i32 94969, i32 8175, i32 127596, i32 7998, i32 64887, i32 5986, i32 113518, i32 7929, i32 94972, i32 8096, i32 10935, i32 11850, i32 127591, i32 8115, i32 131034, i32 11842, i32 12545, i32 96128, i32 12605, i32 13429, i32 96132, i32 12582, i32 129743, i32 15441, i32 96131, i32 15936, i32 131045, i32 13923, i32 131040, i32 16015, i32 127597, i32 13372, i32 15553, i32 95997, i32 15941, i32 11968, i32 16225, i32 15854, i32 16344, i32 22590, i32 11845, i32 15961, i32 15618, i32 23784, i32 21864, i32 95998, i32 12137, i32 129752, i32 22721, i32 23683, i32 131046, i32 25201, i32 28188, i32 25287, i32 26849, i32 21807, i32 26724, i32 26726, i32 28313, i32 23740, i32 31909, i32 30881, i32 23682, i32 32207, i32 25147, i32 25150, i32 26856, i32 31286, i32 23964, i32 45175, i32 31987, i32 31284, i32 31908, i32 32025, i32 31186, i32 32028, i32 31705, i32 47178, i32 64404, i32 43733, i32 56368, i32 31731, i32 47854, i32 45178, i32 50290, i32 47390, i32 55738, i32 23967, i32 53502, i32 47558, i32 23687, i32 61774, i32 47853, i32 47406, i32 61699, i32 47556, i32 64401, i32 55739, i32 45483, i32 50573, i32 65534, i32 63803, i32 63809, i32 47850, i32 47391, i32 62924, i32 55743, i32 63811, i32 61700, i32 127584, i32 64402, i32 63807, i32 62374, i32 47815, i32 63403, i32 47814, i32 95107, i32 64877, i32 47849, i32 64878, i32 124751, i32 100554, i32 127527, i32 64403, i32 64400, i32 65527, i32 94341, i32 94339, i32 90337, i32 94340, i32 63806, i32 90338, i32 90310, i32 106993, i32 113519, i32 95108, i32 64880, i32 127587, i32 100565, i32 95142, i32 62926, i32 91122, i32 64881, i32 131026, i32 90308, i32 131028, i32 182227, i32 113524], align 16
@coef3_huffbits = internal constant [1072 x i8] c"\09\07\02\03\04\04\05\05\06\06\06\06\07\07\07\07\07\08\08\08\08\08\08\08\09\09\09\09\09\09\09\09\09\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0C\0B\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0E\0D\0E\0E\0D\0E\0D\0D\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0F\0E\0E\0F\0E\0E\0F\0F\0F\0F\0F\0F\0F\0F\0F\0E\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0E\0F\0F\0F\0F\0F\0F\0F\0F\0F\10\0F\10\10\10\10\0F\0F\10\10\10\10\10\0F\10\10\10\0F\10\0F\0F\10\0F\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\11\10\11\10\11\11\10\11\10\11\10\10\11\11\11\10\11\10\10\11\10\11\10\11\11\10\10\11\11\11\11\11\11\11\11\10\11\11\10\11\11\11\11\11\11\11\11\10\12\11\11\11\11\11\11\11\11\11\11\11\11\10\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\12\11\11\11\11\12\11\11\12\13\11\11\11\12\11\11\11\12\12\12\11\11\11\12\11\11\11\11\11\11\11\11\11\12\12\12\12\12\12\12\12\12\12\11\12\12\12\12\11\12\12\12\11\11\12\12\12\12\13\12\12\13\13\14\12\13\12\13\13\12\13\14\12\13\04\06\07\08\09\09\09\0A\0A\0A\0B\0B\0B\0B\0C\0C\0C\0C\0C\0C\0D\0D\0D\0D\0D\0D\0D\0D\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0F\0F\0F\0F\0F\0F\0F\0F\0F\10\0F\0F\0F\0F\10\10\0F\10\10\0F\10\11\11\11\11\11\10\10\10\10\10\11\11\11\10\12\11\11\11\12\11\11\12\11\11\11\11\11\12\11\12\12\12\11\11\12\13\12\12\11\11\12\12\12\12\13\11\11\12\14\13\13\12\13\12\13\13\13\13\11\05\07\09\0A\0A\0B\0B\0C\0C\0C\0D\0D\0D\0D\0D\0E\0E\0E\0E\0E\0F\0E\0F\0F\0F\0F\0F\10\10\10\10\10\10\10\10\10\10\10\10\0F\10\10\11\11\11\10\11\11\11\11\11\11\11\11\11\11\11\11\11\11\10\10\13\12\12\13\11\13\14\11\12\12\12\12\12\12\06\08\0A\0B\0C\0C\0C\0D\0D\0D\0E\0E\0E\0E\0F\0F\0F\0F\0F\0F\10\10\10\10\10\10\11\11\11\10\10\11\11\11\11\11\11\11\10\10\10\11\12\12\12\11\13\13\12\12\11\12\13\12\11\12\12\13\12\11\11\06\09\0B\0C\0D\0D\0D\0E\0E\0E\0F\0F\0F\0F\0F\10\10\10\10\10\10\11\10\11\11\11\11\11\11\11\12\11\12\11\11\12\12\13\13\11\11\07\0A\0C\0D\0D\0E\0E\0E\0E\0F\10\10\10\10\10\10\10\10\10\10\11\11\11\11\12\11\12\12\12\12\12\12\12\12\11\11\12\12\12\12\12\12\07\0A\0C\0D\0E\0F\0F\0F\0F\10\10\11\11\11\11\11\11\11\11\11\11\12\11\11\08\0B\0D\0E\0F\0F\0F\0F\10\10\12\11\11\12\11\11\12\11\11\12\12\13\12\12\13\13\13\12\12\12\08\0B\0D\0E\0F\10\10\10\10\11\11\11\12\11\12\13\12\12\12\12\12\12\08\0C\0E\0F\0F\10\10\10\11\11\12\12\12\12\12\12\12\12\11\09\0C\0E\0F\10\10\11\11\11\11\12\09\0C\0E\0F\10\11\11\11\12\09\0D\0F\10\11\11\12\11\12\11\09\0D\0F\10\11\12\12\12\0A\0D\0F\10\12\0A\0E\10\11\12\0A\0E\10\11\0A\0E\10\12\12\0A\0E\10\12\12\0B\0F\10\0B\0F\11\0B\0F\11\0B\0F\11\0B\0F\11\0B\0F\11\0C\10\11\0C\0F\0C\10\0C\10\12\0C\10\0C\10\0C\10\0C\10\11\0C\10\12\0C\11\0D\10\0D\10\0D\10\12\0D\10\0D\11\0D\11\0D\11\0D\11\0D\11\0D\11\0D\11\0D\11\0D\10\0D\11\0D\11\0D\11\0E\11\0E\11\0E\11\0E\0E\0E\11\0E\11\0E\0E\12\0E\0E\12\0E\12\0E\12\0E\11\0E\11\0E\11\0E\0E\12\0E\0F\0F\0F\0E\0F\0F\0E\0F\0F\0F\12\0F\12\0F\0F\11\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\10\0F\0F\0F\0F\10\10\10\10\10\0F\0F\0F\0F\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\11\10\10\10\11\10\10\10\11\11\11\11\11\10\11\11\11\11\10\10\10\11\11\11\11\10\11\11\11\11\11\11\11\11\11\11\11\11\11\11\11\12\11", align 16
@levels3 = internal constant [180 x i16] [i16 351, i16 122, i16 76, i16 61, i16 41, i16 42, i16 24, i16 30, i16 22, i16 19, i16 11, i16 9, i16 10, i16 8, i16 5, i16 5, i16 4, i16 5, i16 5, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2, i16 3, i16 2, i16 2, i16 2, i16 3, i16 3, i16 2, i16 2, i16 2, i16 3, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 1, i16 2, i16 2, i16 1, i16 2, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2, i16 2, i16 1, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1], align 16
@coef4_huffcodes = internal constant [476 x i32] [i32 3841, i32 30, i32 0, i32 4, i32 6, i32 13, i32 10, i32 23, i32 29, i32 23, i32 44, i32 49, i32 57, i32 62, i32 57, i32 90, i32 102, i32 112, i32 123, i32 112, i32 119, i32 175, i32 201, i32 242, i32 244, i32 178, i32 227, i32 347, i32 349, i32 385, i32 413, i32 483, i32 453, i32 693, i32 731, i32 824, i32 963, i32 972, i32 1008, i32 717, i32 1018, i32 929, i32 1460, i32 1623, i32 1963, i32 1869, i32 1868, i32 2753, i32 2757, i32 1899, i32 3240, i32 3844, i32 3840, i32 4067, i32 3900, i32 3856, i32 3897, i32 4070, i32 3622, i32 3728, i32 5829, i32 6183, i32 6484, i32 5573, i32 6488, i32 8074, i32 7242, i32 11023, i32 11073, i32 11022, i32 13254, i32 12368, i32 7247, i32 11656, i32 12380, i32 15384, i32 11087, i32 11458, i32 14919, i32 22144, i32 22173, i32 25666, i32 25667, i32 25670, i32 25966, i32 25668, i32 28960, i32 29834, i32 49594, i32 32290, i32 31398, i32 32549, i32 31399, i32 32288, i32 49435, i32 49432, i32 31397, i32 44298, i32 62345, i32 106171, i32 51885, i32 65090, i32 65088, i32 93236, i32 177381, i32 212325, i32 93232, i32 124846, i32 123484, i32 99184, i32 124675, i32 106170, i32 93239, i32 57908, i32 93294, i32 4, i32 42, i32 97, i32 117, i32 203, i32 255, i32 400, i32 491, i32 465, i32 697, i32 775, i32 825, i32 831, i32 1019, i32 948, i32 1548, i32 1657, i32 1605, i32 1661, i32 1930, i32 2019, i32 1865, i32 2756, i32 2770, i32 2787, i32 3088, i32 3094, i32 2769, i32 3316, i32 4066, i32 5510, i32 3741, i32 6641, i32 5732, i32 7718, i32 7480, i32 11085, i32 13253, i32 8130, i32 8131, i32 7464, i32 15389, i32 22926, i32 61588, i32 31396, i32 44344, i32 44044, i32 49434, i32 31210, i32 51329, i32 65092, i32 46645, i32 44045, i32 46622, i32 22919, i32 28961, i32 62338, i32 62343, i32 57911, i32 65095, i32 62339, i32 61585, i32 62341, i32 57907, i32 99054, i32 106168, i32 91710, i32 61587, i32 20, i32 88, i32 345, i32 359, i32 768, i32 980, i32 1461, i32 1949, i32 1898, i32 2919, i32 2912, i32 3845, i32 3312, i32 3863, i32 3733, i32 6178, i32 6419, i32 5826, i32 6191, i32 6489, i32 8139, i32 7719, i32 7232, i32 13255, i32 7803, i32 7241, i32 11657, i32 7715, i32 5728, i32 16146, i32 11462, i32 13281, i32 23348, i32 24730, i32 25961, i32 29832, i32 32289, i32 53087, i32 28972, i32 14493, i32 26575, i32 32552, i32 91711, i32 212327, i32 91709, i32 123485, i32 246187, i32 89156, i32 93238, i32 31, i32 236, i32 803, i32 1458, i32 1951, i32 2754, i32 3862, i32 3742, i32 6486, i32 7695, i32 6634, i32 5734, i32 11145, i32 11010, i32 11660, i32 15387, i32 15385, i32 12981, i32 16284, i32 11471, i32 14487, i32 23349, i32 44290, i32 32553, i32 25665, i32 14468, i32 30856, i32 30798, i32 25960, i32 49595, i32 22918, i32 26572, i32 65097, i32 65096, i32 49596, i32 65089, i32 99185, i32 91708, i32 57905, i32 28958, i32 44297, i32 61586, i32 45, i32 475, i32 1921, i32 3098, i32 3925, i32 5504, i32 7848, i32 11675, i32 12975, i32 16150, i32 15388, i32 30772, i32 15429, i32 14492, i32 26574, i32 25669, i32 49593, i32 30857, i32 32570, i32 30799, i32 32555, i32 44299, i32 61584, i32 49437, i32 59726, i32 28959, i32 59889, i32 62350, i32 31209, i32 44291, i32 61595, i32 51886, i32 65094, i32 177382, i32 59888, i32 106166, i32 424641, i32 424640, i32 212326, i32 62344, i32 113, i32 928, i32 3241, i32 6185, i32 7481, i32 11075, i32 11460, i32 25940, i32 61594, i32 46623, i32 26573, i32 28956, i32 46646, i32 32554, i32 46644, i32 49439, i32 53086, i32 46621, i32 61547, i32 51883, i32 49598, i32 59724, i32 61593, i32 99053, i32 59727, i32 49433, i32 57906, i32 177380, i32 62346, i32 106164, i32 123487, i32 59725, i32 183, i32 1925, i32 5836, i32 12369, i32 13252, i32 25967, i32 14481, i32 28957, i32 51887, i32 61591, i32 29833, i32 61592, i32 51328, i32 51882, i32 62342, i32 106167, i32 93295, i32 62340, i32 99048, i32 99049, i32 57904, i32 124672, i32 212322, i32 212323, i32 212324, i32 93235, i32 57878, i32 253, i32 3093, i32 5733, i32 15434, i32 32571, i32 30870, i32 49436, i32 57877, i32 93234, i32 62347, i32 62349, i32 99050, i32 124673, i32 463583, i32 89158, i32 404, i32 4064, i32 16147, i32 29835, i32 61590, i32 53120, i32 123486, i32 927165, i32 212321, i32 93233, i32 505, i32 6418, i32 22288, i32 62416, i32 49599, i32 769, i32 7716, i32 44296, i32 973, i32 7233, i32 49597, i32 1379, i32 14930, i32 62417, i32 1392, i32 11470, i32 57879, i32 1659, i32 25949, i32 1867, i32 25671, i32 3090, i32 29947, i32 3848, i32 46620, i32 3618, i32 65091, i32 5831, i32 6198, i32 6642, i32 7235, i32 7487, i32 8143, i32 11084, i32 12364, i32 12982, i32 14918, i32 22023, i32 16151, i32 11461, i32 24731, i32 25948, i32 32291, i32 26561, i32 32550, i32 32551, i32 61589, i32 59891, i32 53121, i32 49438, i32 51884, i32 62351, i32 59890, i32 29946, i32 57910, i32 65093, i32 115752, i32 57909, i32 99055, i32 106165, i32 62422, i32 99052, i32 93237, i32 62348, i32 177383, i32 89159, i32 927164, i32 124674, i32 115894, i32 57946, i32 246186, i32 89157, i32 115753, i32 106169, i32 124847, i32 99051, i32 123092, i32 231790], align 16
@coef4_huffbits = internal constant [476 x i8] calign 16
@levels4 = internal constant [70 x i16] [i16 113, i16 68, i16 49, i16 42, i16 40, i16 32, i16 27, i16 15, i16 10, i16 5, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1], align 16
@coef5_huffcodes = internal constant [435 x i32] [i32 839, i32 11, i32 1, i32 1, i32 12, i32 4, i32 16, i32 21, i32 31, i32 11, i32 35, i32 38, i32 41, i32 53, i32 55, i32 1, i32 21, i32 26, i32 29, i32 28, i32 30, i32 78, i32 73, i32 81, i32 120, i32 4, i32 0, i32 8, i32 13, i32 123, i32 5, i32 50, i32 149, i32 145, i32 150, i32 161, i32 217, i32 3, i32 25, i32 97, i32 102, i32 96, i32 23, i32 14, i32 99, i32 416, i32 439, i32 486, i32 487, i32 438, i32 24, i32 488, i32 56, i32 49, i32 5, i32 61, i32 39, i32 490, i32 26, i32 197, i32 249, i32 255, i32 219, i32 592, i32 252, i32 604, i32 8, i32 117, i32 983, i32 979, i32 432, i32 124, i32 970, i32 54, i32 393, i32 1190, i32 1186, i32 1275, i32 192, i32 127, i32 154, i32 785, i32 110, i32 155, i32 1676, i32 1728, i32 1156, i32 18, i32 195, i32 2383, i32 2425, i32 2553, i32 3337, i32 3494, i32 3496, i32 2305, i32 193, i32 883, i32 3336, i32 2554, i32 3467, i32 3461, i32 3462, i32 223, i32 1762, i32 206, i32 3876, i32 2558, i32 503, i32 1985, i32 207, i32 2556, i32 2559, i32 3465, i32 3497, i32 2557, i32 504, i32 6710, i32 4748, i32 4765, i32 6711, i32 406, i32 1002, i32 3979, i32 3475, i32 7749, i32 7768, i32 7755, i32 7769, i32 5105, i32 777, i32 613, i32 776, i32 9274, i32 10209, i32 3977, i32 804, i32 15548, i32 15494, i32 13973, i32 9276, i32 9275, i32 9278, i32 7754, i32 933, i32 13416, i32 13352, i32 15492, i32 10208, i32 9698, i32 6272, i32 407, i32 805, i32 15543, i32 31006, i32 2028, i32 27765, i32 1224, i32 19399, i32 1222, i32 2435, i32 18462, i32 6995, i32 9499, i32 7000, i32 2436, i32 20392, i32 15547, i32 3978, i32 802, i32 13418, i32 9277, i32 806, i32 13417, i32 18463, i32 18461, i32 1862, i32 36914, i32 6992, i32 7443, i32 55524, i32 18459, i32 27764, i32 31083, i32 31081, i32 2437, i32 55523, i32 2438, i32 4002, i32 4865, i32 27772, i32 2439, i32 15544, i32 62639, i32 3720, i32 111040, i32 4046, i32 13291, i32 16234, i32 16233, i32 4047, i32 31007, i32 1225, i32 18545, i32 4045, i32 2434, i32 4044, i32 4003, i32 7442, i32 31084, i32 6983, i32 801, i32 31082, i32 55522, i32 18546, i32 18547, i32 14, i32 20, i32 10, i32 160, i32 18, i32 125, i32 418, i32 59, i32 607, i32 221, i32 636, i32 835, i32 872, i32 875, i32 62, i32 506, i32 1157, i32 435, i32 127, i32 433, i32 414, i32 1210, i32 1965, i32 825, i32 102, i32 1956, i32 1939, i32 1734, i32 126, i32 241, i32 882, i32 2555, i32 3459, i32 3466, i32 2375, i32 2548, i32 464, i32 6921, i32 6987, i32 2028, i32 993, i32 202, i32 1004, i32 9529, i32 20393, i32 6999, i32 13353, i32 15658, i32 3479, i32 935, i32 3520, i32 3478, i32 3521, i32 2027, i32 15546, i32 3139, i32 3137, i32 6994, i32 2031, i32 803, i32 15545, i32 15491, i32 2000, i32 2029, i32 27775, i32 36915, i32 16236, i32 222083, i32 125277, i32 27768, i32 1863, i32 6993, i32 34, i32 22, i32 57, i32 594, i32 121, i32 1158, i32 824, i32 873, i32 3464, i32 38, i32 3463, i32 3915, i32 3458, i32 39, i32 481, i32 6677, i32 1991, i32 4848, i32 480, i32 1744, i32 6678, i32 7748, i32 7775, i32 13968, i32 3472, i32 3138, i32 3503, i32 3474, i32 3968, i32 3323, i32 13359, i32 18559, i32 6982, i32 31080, i32 3477, i32 3473, i32 6997, i32 16232, i32 19398, i32 15549, i32 3969, i32 800, i32 105, i32 254, i32 1749, i32 831, i32 222, i32 1990, i32 7744, i32 3476, i32 3976, i32 15502, i32 13972, i32 3502, i32 3501, i32 615, i32 934, i32 807, i32 18558, i32 2030, i32 1865, i32 1223, i32 13970, i32 6998, i32 4049, i32 31318, i32 27767, i32 36913, i32 1864, i32 27770, i32 31085, i32 13290, i32 27766, i32 4048, i32 222082, i32 123927, i32 1861, i32 20399, i32 55521, i32 16235, i32 125276, i32 20397, i32 158, i32 1213, i32 1660, i32 6920, i32 1003, i32 6981, i32 13969, i32 55525, i32 30980, i32 2433, i32 2026, i32 6644, i32 27773, i32 20395, i32 20396, i32 27774, i32 4864, i32 27771, i32 111, i32 1015, i32 15493, i32 1220, i32 30, i32 1761, i32 13971, i32 6980, i32 577, i32 7750, i32 413, i32 614, i32 1211, i32 9528, i32 1964, i32 6996, i32 2306, i32 18544, i32 3495, i32 2304, i32 389, i32 27769, i32 1763, i32 1001, i32 7828, i32 1005, i32 1010, i32 13358, i32 13419, i32 9498, i32 1221, i32 6273, i32 18460, i32 7001, i32 15495, i32 20398, i32 2025, i32 16237, i32 61962, i32 36912, i32 20394, i32 55526, i32 16239, i32 18458, i32 16238, i32 123926, i32 55527], align 16
@coef5_huffbits = internal constant [435 x i8] calign 16
@levels5 = internal constant [40 x i16] [i16 214, i16 72, i16 42, i16 40, i16 18, i16 4, i16 4, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 1, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1], align 16

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_wma_init(%struct.AVCodecContext* %avctx, i32 %flags2) #0 !dbg !1015 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %flags2.addr = alloca i32, align 4
  %s = alloca %struct.WMACodecContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %bps1 = alloca float, align 4
  %high_freq = alloca float, align 4
  %bps = alloca float, align 4
  %sample_rate1 = alloca i32, align 4
  %coef_vlc_table = alloca i32, align 4
  %nb_max = alloca i32, align 4
  %nb = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %pos = alloca i32, align 4
  %lpos = alloca i32, align 4
  %k = alloca i32, align 4
  %block_len = alloca i32, align 4
  %i217 = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca i32, align 4
  %table = alloca i8*, align 8
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %seed = alloca i32, align 4
  %norm = alloca float, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1741, metadata !1742), !dbg !1743
  store i32 %flags2, i32* %flags2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags2.addr, metadata !1744, metadata !1742), !dbg !1745
  call void @llvm.dbg.declare(metadata %struct.WMACodecContext** %s, metadata !1746, metadata !1742), !dbg !1971
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1972
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1973
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1973
  %2 = bitcast i8* %1 to %struct.WMACodecContext*, !dbg !1972
  store %struct.WMACodecContext* %2, %struct.WMACodecContext** %s, align 8, !dbg !1971
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1974, metadata !1742), !dbg !1975
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1976, metadata !1742), !dbg !1977
  call void @llvm.dbg.declare(metadata float* %bps1, metadata !1978, metadata !1742), !dbg !1979
  call void @llvm.dbg.declare(metadata float* %high_freq, metadata !1980, metadata !1742), !dbg !1981
  call void @llvm.dbg.declare(metadata float* %bps, metadata !1982, metadata !1742), !dbg !1984
  call void @llvm.dbg.declare(metadata i32* %sample_rate1, metadata !1985, metadata !1742), !dbg !1986
  call void @llvm.dbg.declare(metadata i32* %coef_vlc_table, metadata !1987, metadata !1742), !dbg !1988
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1989
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 82, !dbg !1991
  %4 = load i32, i32* %sample_rate, align 8, !dbg !1991
  %cmp = icmp sle i32 %4, 0, !dbg !1992
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1993

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1994
  %sample_rate2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 82, !dbg !1996
  %6 = load i32, i32* %sample_rate2, align 8, !dbg !1996
  %cmp3 = icmp sgt i32 %6, 50000, !dbg !1997
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !1998

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1999
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 83, !dbg !2000
  %8 = load i32, i32* %channels, align 4, !dbg !2000
  %cmp5 = icmp sle i32 %8, 0, !dbg !2001
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !2002

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2003
  %channels7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 83, !dbg !2004
  %10 = load i32, i32* %channels7, align 4, !dbg !2004
  %cmp8 = icmp sgt i32 %10, 2, !dbg !2005
  br i1 %cmp8, label %if.then, label %lor.lhs.false9, !dbg !2006

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2007
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 9, !dbg !2008
  %12 = load i64, i64* %bit_rate, align 8, !dbg !2008
  %cmp10 = icmp sle i64 %12, 0, !dbg !2009
  br i1 %cmp10, label %if.then, label %if.end, !dbg !2010

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !2012
  br label %return, !dbg !2012

if.end:                                           ; preds = %lor.lhs.false9
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2013
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 3, !dbg !2015
  %14 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !2015
  %id = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %14, i32 0, i32 3, !dbg !2016
  %15 = load i32, i32* %id, align 4, !dbg !2016
  %cmp11 = icmp eq i32 %15, 86023, !dbg !2017
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !2018

if.then12:                                        ; preds = %if.end
  %16 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2019
  %version = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %16, i32 0, i32 3, !dbg !2020
  store i32 1, i32* %version, align 16, !dbg !2021
  br label %if.end14, !dbg !2019

if.else:                                          ; preds = %if.end
  %17 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2022
  %version13 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %17, i32 0, i32 3, !dbg !2023
  store i32 2, i32* %version13, align 16, !dbg !2024
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then12
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2025
  %sample_rate15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 82, !dbg !2026
  %19 = load i32, i32* %sample_rate15, align 8, !dbg !2026
  %20 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2027
  %version16 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %20, i32 0, i32 3, !dbg !2028
  %21 = load i32, i32* %version16, align 16, !dbg !2028
  %call = call i32 @ff_wma_get_frame_len_bits(i32 %19, i32 %21, i32 0), !dbg !2029
  %22 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2030
  %frame_len_bits = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %22, i32 0, i32 26, !dbg !2031
  store i32 %call, i32* %frame_len_bits, align 4, !dbg !2032
  %23 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2033
  %frame_len_bits17 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %23, i32 0, i32 26, !dbg !2034
  %24 = load i32, i32* %frame_len_bits17, align 4, !dbg !2034
  %25 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2035
  %next_block_len_bits = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %25, i32 0, i32 30, !dbg !2036
  store i32 %24, i32* %next_block_len_bits, align 4, !dbg !2037
  %26 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2038
  %frame_len_bits18 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %26, i32 0, i32 26, !dbg !2039
  %27 = load i32, i32* %frame_len_bits18, align 4, !dbg !2039
  %28 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2040
  %prev_block_len_bits = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %28, i32 0, i32 31, !dbg !2041
  store i32 %27, i32* %prev_block_len_bits, align 16, !dbg !2042
  %29 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2043
  %frame_len_bits19 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %29, i32 0, i32 26, !dbg !2044
  %30 = load i32, i32* %frame_len_bits19, align 4, !dbg !2044
  %31 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2045
  %block_len_bits = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %31, i32 0, i32 29, !dbg !2046
  store i32 %30, i32* %block_len_bits, align 8, !dbg !2047
  %32 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2048
  %frame_len_bits20 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %32, i32 0, i32 26, !dbg !2049
  %33 = load i32, i32* %frame_len_bits20, align 4, !dbg !2049
  %shl = shl i32 1, %33, !dbg !2050
  %34 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2051
  %frame_len = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %34, i32 0, i32 25, !dbg !2052
  store i32 %shl, i32* %frame_len, align 8, !dbg !2053
  %35 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2054
  %use_variable_block_len = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %35, i32 0, i32 5, !dbg !2056
  %36 = load i32, i32* %use_variable_block_len, align 8, !dbg !2056
  %tobool = icmp ne i32 %36, 0, !dbg !2054
  br i1 %tobool, label %if.then21, label %if.else35, !dbg !2057

if.then21:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i32* %nb_max, metadata !2058, metadata !1742), !dbg !2060
  call void @llvm.dbg.declare(metadata i32* %nb, metadata !2061, metadata !1742), !dbg !2062
  %37 = load i32, i32* %flags2.addr, align 4, !dbg !2063
  %shr = ashr i32 %37, 3, !dbg !2064
  %and = and i32 %shr, 3, !dbg !2065
  %add = add nsw i32 %and, 1, !dbg !2066
  store i32 %add, i32* %nb, align 4, !dbg !2067
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2068
  %bit_rate22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 9, !dbg !2070
  %39 = load i64, i64* %bit_rate22, align 8, !dbg !2070
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2071
  %channels23 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %40, i32 0, i32 83, !dbg !2072
  %41 = load i32, i32* %channels23, align 4, !dbg !2072
  %conv = sext i32 %41 to i64, !dbg !2071
  %div = sdiv i64 %39, %conv, !dbg !2073
  %cmp24 = icmp sge i64 %div, 32000, !dbg !2074
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !2075

if.then26:                                        ; preds = %if.then21
  %42 = load i32, i32* %nb, align 4, !dbg !2076
  %add27 = add nsw i32 %42, 2, !dbg !2076
  store i32 %add27, i32* %nb, align 4, !dbg !2076
  br label %if.end28, !dbg !2077

if.end28:                                         ; preds = %if.then26, %if.then21
  %43 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2078
  %frame_len_bits29 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %43, i32 0, i32 26, !dbg !2079
  %44 = load i32, i32* %frame_len_bits29, align 4, !dbg !2079
  %sub = sub nsw i32 %44, 7, !dbg !2080
  store i32 %sub, i32* %nb_max, align 4, !dbg !2081
  %45 = load i32, i32* %nb, align 4, !dbg !2082
  %46 = load i32, i32* %nb_max, align 4, !dbg !2084
  %cmp30 = icmp sgt i32 %45, %46, !dbg !2085
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !2086

if.then32:                                        ; preds = %if.end28
  %47 = load i32, i32* %nb_max, align 4, !dbg !2087
  store i32 %47, i32* %nb, align 4, !dbg !2088
  br label %if.end33, !dbg !2089

if.end33:                                         ; preds = %if.then32, %if.end28
  %48 = load i32, i32* %nb, align 4, !dbg !2090
  %add34 = add nsw i32 %48, 1, !dbg !2091
  %49 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2092
  %nb_block_sizes = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %49, i32 0, i32 27, !dbg !2093
  store i32 %add34, i32* %nb_block_sizes, align 32, !dbg !2094
  br label %if.end37, !dbg !2095

if.else35:                                        ; preds = %if.end14
  %50 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2096
  %nb_block_sizes36 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %50, i32 0, i32 27, !dbg !2097
  store i32 1, i32* %nb_block_sizes36, align 32, !dbg !2098
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.end33
  %51 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2099
  %use_noise_coding = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %51, i32 0, i32 7, !dbg !2100
  store i32 1, i32* %use_noise_coding, align 32, !dbg !2101
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2102
  %sample_rate38 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %52, i32 0, i32 82, !dbg !2103
  %53 = load i32, i32* %sample_rate38, align 8, !dbg !2103
  %conv39 = sitofp i32 %53 to double, !dbg !2102
  %mul = fmul double %conv39, 5.000000e-01, !dbg !2104
  %conv40 = fptrunc double %mul to float, !dbg !2102
  store float %conv40, float* %high_freq, align 4, !dbg !2105
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2106
  %sample_rate41 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %54, i32 0, i32 82, !dbg !2107
  %55 = load i32, i32* %sample_rate41, align 8, !dbg !2107
  store i32 %55, i32* %sample_rate1, align 4, !dbg !2108
  %56 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2109
  %version42 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %56, i32 0, i32 3, !dbg !2111
  %57 = load i32, i32* %version42, align 16, !dbg !2111
  %cmp43 = icmp eq i32 %57, 2, !dbg !2112
  br i1 %cmp43, label %if.then45, label %if.end70, !dbg !2113

if.then45:                                        ; preds = %if.end37
  %58 = load i32, i32* %sample_rate1, align 4, !dbg !2114
  %cmp46 = icmp sge i32 %58, 44100, !dbg !2117
  br i1 %cmp46, label %if.then48, label %if.else49, !dbg !2118

if.then48:                                        ; preds = %if.then45
  store i32 44100, i32* %sample_rate1, align 4, !dbg !2119
  br label %if.end69, !dbg !2120

if.else49:                                        ; preds = %if.then45
  %59 = load i32, i32* %sample_rate1, align 4, !dbg !2121
  %cmp50 = icmp sge i32 %59, 22050, !dbg !2123
  br i1 %cmp50, label %if.then52, label %if.else53, !dbg !2124

if.then52:                                        ; preds = %if.else49
  store i32 22050, i32* %sample_rate1, align 4, !dbg !2125
  br label %if.end68, !dbg !2126

if.else53:                                        ; preds = %if.else49
  %60 = load i32, i32* %sample_rate1, align 4, !dbg !2127
  %cmp54 = icmp sge i32 %60, 16000, !dbg !2129
  br i1 %cmp54, label %if.then56, label %if.else57, !dbg !2130

if.then56:                                        ; preds = %if.else53
  store i32 16000, i32* %sample_rate1, align 4, !dbg !2131
  br label %if.end67, !dbg !2132

if.else57:                                        ; preds = %if.else53
  %61 = load i32, i32* %sample_rate1, align 4, !dbg !2133
  %cmp58 = icmp sge i32 %61, 11025, !dbg !2135
  br i1 %cmp58, label %if.then60, label %if.else61, !dbg !2136

if.then60:                                        ; preds = %if.else57
  store i32 11025, i32* %sample_rate1, align 4, !dbg !2137
  br label %if.end66, !dbg !2138

if.else61:                                        ; preds = %if.else57
  %62 = load i32, i32* %sample_rate1, align 4, !dbg !2139
  %cmp62 = icmp sge i32 %62, 8000, !dbg !2141
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !2142

if.then64:                                        ; preds = %if.else61
  store i32 8000, i32* %sample_rate1, align 4, !dbg !2143
  br label %if.end65, !dbg !2144

if.end65:                                         ; preds = %if.then64, %if.else61
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then60
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then56
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then52
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then48
  br label %if.end70, !dbg !2145

if.end70:                                         ; preds = %if.end69, %if.end37
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2146
  %bit_rate71 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %63, i32 0, i32 9, !dbg !2147
  %64 = load i64, i64* %bit_rate71, align 8, !dbg !2147
  %conv72 = sitofp i64 %64 to float, !dbg !2148
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2149
  %channels73 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %65, i32 0, i32 83, !dbg !2150
  %66 = load i32, i32* %channels73, align 4, !dbg !2150
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2151
  %sample_rate74 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %67, i32 0, i32 82, !dbg !2152
  %68 = load i32, i32* %sample_rate74, align 8, !dbg !2152
  %mul75 = mul nsw i32 %66, %68, !dbg !2153
  %conv76 = sitofp i32 %mul75 to float, !dbg !2154
  %div77 = fdiv float %conv72, %conv76, !dbg !2155
  store volatile float %div77, float* %bps, align 4, !dbg !2156
  %69 = load volatile float, float* %bps, align 4, !dbg !2157
  %70 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2158
  %frame_len78 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %70, i32 0, i32 25, !dbg !2159
  %71 = load i32, i32* %frame_len78, align 8, !dbg !2159
  %conv79 = sitofp i32 %71 to float, !dbg !2158
  %mul80 = fmul float %69, %conv79, !dbg !2160
  %conv81 = fpext float %mul80 to double, !dbg !2157
  %div82 = fdiv double %conv81, 8.000000e+00, !dbg !2161
  %add83 = fadd double %div82, 5.000000e-01, !dbg !2162
  %conv84 = fptosi double %add83 to i32, !dbg !2163
  %or = or i32 %conv84, 1, !dbg !2164
  %72 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !2165
  %sub85 = sub nsw i32 31, %72, !dbg !2166
  %add86 = add nsw i32 %sub85, 2, !dbg !2167
  %73 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2168
  %byte_offset_bits = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %73, i32 0, i32 8, !dbg !2169
  store i32 %add86, i32* %byte_offset_bits, align 4, !dbg !2170
  %74 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2171
  %byte_offset_bits87 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %74, i32 0, i32 8, !dbg !2173
  %75 = load i32, i32* %byte_offset_bits87, align 4, !dbg !2173
  %add88 = add nsw i32 %75, 3, !dbg !2174
  %cmp89 = icmp sgt i32 %add88, 25, !dbg !2175
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !2176

if.then91:                                        ; preds = %if.end70
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2177
  %77 = bitcast %struct.AVCodecContext* %76 to i8*, !dbg !2177
  %78 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2179
  %byte_offset_bits92 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %78, i32 0, i32 8, !dbg !2180
  %79 = load i32, i32* %byte_offset_bits92, align 4, !dbg !2180
  call void (i8*, i32, i8*, ...) @av_log(i8* %77, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i32 0, i32 0), i32 %79), !dbg !2181
  store i32 -1163346256, i32* %retval, align 4, !dbg !2182
  br label %return, !dbg !2182

if.end93:                                         ; preds = %if.end70
  %80 = load volatile float, float* %bps, align 4, !dbg !2183
  store float %80, float* %bps1, align 4, !dbg !2184
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2185
  %channels94 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %81, i32 0, i32 83, !dbg !2187
  %82 = load i32, i32* %channels94, align 4, !dbg !2187
  %cmp95 = icmp eq i32 %82, 2, !dbg !2188
  br i1 %cmp95, label %if.then97, label %if.end101, !dbg !2189

if.then97:                                        ; preds = %if.end93
  %83 = load volatile float, float* %bps, align 4, !dbg !2190
  %conv98 = fpext float %83 to double, !dbg !2190
  %mul99 = fmul double %conv98, 1.600000e+00, !dbg !2191
  %conv100 = fptrunc double %mul99 to float, !dbg !2190
  store float %conv100, float* %bps1, align 4, !dbg !2192
  br label %if.end101, !dbg !2193

if.end101:                                        ; preds = %if.then97, %if.end93
  %84 = load i32, i32* %sample_rate1, align 4, !dbg !2194
  %cmp102 = icmp eq i32 %84, 44100, !dbg !2196
  br i1 %cmp102, label %if.then104, label %if.else115, !dbg !2197

if.then104:                                       ; preds = %if.end101
  %85 = load float, float* %bps1, align 4, !dbg !2198
  %conv105 = fpext float %85 to double, !dbg !2198
  %cmp106 = fcmp oge double %conv105, 6.100000e-01, !dbg !2201
  br i1 %cmp106, label %if.then108, label %if.else110, !dbg !2202

if.then108:                                       ; preds = %if.then104
  %86 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2203
  %use_noise_coding109 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %86, i32 0, i32 7, !dbg !2204
  store i32 0, i32* %use_noise_coding109, align 32, !dbg !2205
  br label %if.end114, !dbg !2203

if.else110:                                       ; preds = %if.then104
  %87 = load float, float* %high_freq, align 4, !dbg !2206
  %conv111 = fpext float %87 to double, !dbg !2206
  %mul112 = fmul double %conv111, 4.000000e-01, !dbg !2207
  %conv113 = fptrunc double %mul112 to float, !dbg !2206
  store float %conv113, float* %high_freq, align 4, !dbg !2208
  br label %if.end114

if.end114:                                        ; preds = %if.else110, %if.then108
  br label %if.end210, !dbg !2209

if.else115:                                       ; preds = %if.end101
  %88 = load i32, i32* %sample_rate1, align 4, !dbg !2210
  %cmp116 = icmp eq i32 %88, 22050, !dbg !2213
  br i1 %cmp116, label %if.then118, label %if.else138, !dbg !2210

if.then118:                                       ; preds = %if.else115
  %89 = load float, float* %bps1, align 4, !dbg !2214
  %conv119 = fpext float %89 to double, !dbg !2214
  %cmp120 = fcmp oge double %conv119, 1.160000e+00, !dbg !2217
  br i1 %cmp120, label %if.then122, label %if.else124, !dbg !2218

if.then122:                                       ; preds = %if.then118
  %90 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2219
  %use_noise_coding123 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %90, i32 0, i32 7, !dbg !2220
  store i32 0, i32* %use_noise_coding123, align 32, !dbg !2221
  br label %if.end137, !dbg !2219

if.else124:                                       ; preds = %if.then118
  %91 = load float, float* %bps1, align 4, !dbg !2222
  %conv125 = fpext float %91 to double, !dbg !2222
  %cmp126 = fcmp oge double %conv125, 7.200000e-01, !dbg !2224
  br i1 %cmp126, label %if.then128, label %if.else132, !dbg !2225

if.then128:                                       ; preds = %if.else124
  %92 = load float, float* %high_freq, align 4, !dbg !2226
  %conv129 = fpext float %92 to double, !dbg !2226
  %mul130 = fmul double %conv129, 7.000000e-01, !dbg !2227
  %conv131 = fptrunc double %mul130 to float, !dbg !2226
  store float %conv131, float* %high_freq, align 4, !dbg !2228
  br label %if.end136, !dbg !2229

if.else132:                                       ; preds = %if.else124
  %93 = load float, float* %high_freq, align 4, !dbg !2230
  %conv133 = fpext float %93 to double, !dbg !2230
  %mul134 = fmul double %conv133, 6.000000e-01, !dbg !2231
  %conv135 = fptrunc double %mul134 to float, !dbg !2230
  store float %conv135, float* %high_freq, align 4, !dbg !2232
  br label %if.end136

if.end136:                                        ; preds = %if.else132, %if.then128
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.then122
  br label %if.end209, !dbg !2233

if.else138:                                       ; preds = %if.else115
  %94 = load i32, i32* %sample_rate1, align 4, !dbg !2234
  %cmp139 = icmp eq i32 %94, 16000, !dbg !2237
  br i1 %cmp139, label %if.then141, label %if.else154, !dbg !2234

if.then141:                                       ; preds = %if.else138
  %95 = load volatile float, float* %bps, align 4, !dbg !2238
  %conv142 = fpext float %95 to double, !dbg !2238
  %cmp143 = fcmp ogt double %conv142, 5.000000e-01, !dbg !2241
  br i1 %cmp143, label %if.then145, label %if.else149, !dbg !2242

if.then145:                                       ; preds = %if.then141
  %96 = load float, float* %high_freq, align 4, !dbg !2243
  %conv146 = fpext float %96 to double, !dbg !2243
  %mul147 = fmul double %conv146, 5.000000e-01, !dbg !2244
  %conv148 = fptrunc double %mul147 to float, !dbg !2243
  store float %conv148, float* %high_freq, align 4, !dbg !2245
  br label %if.end153, !dbg !2246

if.else149:                                       ; preds = %if.then141
  %97 = load float, float* %high_freq, align 4, !dbg !2247
  %conv150 = fpext float %97 to double, !dbg !2247
  %mul151 = fmul double %conv150, 3.000000e-01, !dbg !2248
  %conv152 = fptrunc double %mul151 to float, !dbg !2247
  store float %conv152, float* %high_freq, align 4, !dbg !2249
  br label %if.end153

if.end153:                                        ; preds = %if.else149, %if.then145
  br label %if.end208, !dbg !2250

if.else154:                                       ; preds = %if.else138
  %98 = load i32, i32* %sample_rate1, align 4, !dbg !2251
  %cmp155 = icmp eq i32 %98, 11025, !dbg !2254
  br i1 %cmp155, label %if.then157, label %if.else161, !dbg !2251

if.then157:                                       ; preds = %if.else154
  %99 = load float, float* %high_freq, align 4, !dbg !2255
  %conv158 = fpext float %99 to double, !dbg !2255
  %mul159 = fmul double %conv158, 7.000000e-01, !dbg !2256
  %conv160 = fptrunc double %mul159 to float, !dbg !2255
  store float %conv160, float* %high_freq, align 4, !dbg !2257
  br label %if.end207, !dbg !2258

if.else161:                                       ; preds = %if.else154
  %100 = load i32, i32* %sample_rate1, align 4, !dbg !2259
  %cmp162 = icmp eq i32 %100, 8000, !dbg !2261
  br i1 %cmp162, label %if.then164, label %if.else184, !dbg !2262

if.then164:                                       ; preds = %if.else161
  %101 = load volatile float, float* %bps, align 4, !dbg !2263
  %conv165 = fpext float %101 to double, !dbg !2263
  %cmp166 = fcmp ole double %conv165, 6.250000e-01, !dbg !2266
  br i1 %cmp166, label %if.then168, label %if.else172, !dbg !2267

if.then168:                                       ; preds = %if.then164
  %102 = load float, float* %high_freq, align 4, !dbg !2268
  %conv169 = fpext float %102 to double, !dbg !2268
  %mul170 = fmul double %conv169, 5.000000e-01, !dbg !2269
  %conv171 = fptrunc double %mul170 to float, !dbg !2268
  store float %conv171, float* %high_freq, align 4, !dbg !2270
  br label %if.end183, !dbg !2271

if.else172:                                       ; preds = %if.then164
  %103 = load volatile float, float* %bps, align 4, !dbg !2272
  %conv173 = fpext float %103 to double, !dbg !2272
  %cmp174 = fcmp ogt double %conv173, 7.500000e-01, !dbg !2274
  br i1 %cmp174, label %if.then176, label %if.else178, !dbg !2275

if.then176:                                       ; preds = %if.else172
  %104 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2276
  %use_noise_coding177 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %104, i32 0, i32 7, !dbg !2277
  store i32 0, i32* %use_noise_coding177, align 32, !dbg !2278
  br label %if.end182, !dbg !2276

if.else178:                                       ; preds = %if.else172
  %105 = load float, float* %high_freq, align 4, !dbg !2279
  %conv179 = fpext float %105 to double, !dbg !2279
  %mul180 = fmul double %conv179, 6.500000e-01, !dbg !2280
  %conv181 = fptrunc double %mul180 to float, !dbg !2279
  store float %conv181, float* %high_freq, align 4, !dbg !2281
  br label %if.end182

if.end182:                                        ; preds = %if.else178, %if.then176
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.then168
  br label %if.end206, !dbg !2282

if.else184:                                       ; preds = %if.else161
  %106 = load volatile float, float* %bps, align 4, !dbg !2283
  %conv185 = fpext float %106 to double, !dbg !2283
  %cmp186 = fcmp oge double %conv185, 8.000000e-01, !dbg !2286
  br i1 %cmp186, label %if.then188, label %if.else192, !dbg !2287

if.then188:                                       ; preds = %if.else184
  %107 = load float, float* %high_freq, align 4, !dbg !2288
  %conv189 = fpext float %107 to double, !dbg !2288
  %mul190 = fmul double %conv189, 7.500000e-01, !dbg !2289
  %conv191 = fptrunc double %mul190 to float, !dbg !2288
  store float %conv191, float* %high_freq, align 4, !dbg !2290
  br label %if.end205, !dbg !2291

if.else192:                                       ; preds = %if.else184
  %108 = load volatile float, float* %bps, align 4, !dbg !2292
  %conv193 = fpext float %108 to double, !dbg !2292
  %cmp194 = fcmp oge double %conv193, 6.000000e-01, !dbg !2294
  br i1 %cmp194, label %if.then196, label %if.else200, !dbg !2295

if.then196:                                       ; preds = %if.else192
  %109 = load float, float* %high_freq, align 4, !dbg !2296
  %conv197 = fpext float %109 to double, !dbg !2296
  %mul198 = fmul double %conv197, 6.000000e-01, !dbg !2297
  %conv199 = fptrunc double %mul198 to float, !dbg !2296
  store float %conv199, float* %high_freq, align 4, !dbg !2298
  br label %if.end204, !dbg !2299

if.else200:                                       ; preds = %if.else192
  %110 = load float, float* %high_freq, align 4, !dbg !2300
  %conv201 = fpext float %110 to double, !dbg !2300
  %mul202 = fmul double %conv201, 5.000000e-01, !dbg !2301
  %conv203 = fptrunc double %mul202 to float, !dbg !2300
  store float %conv203, float* %high_freq, align 4, !dbg !2302
  br label %if.end204

if.end204:                                        ; preds = %if.else200, %if.then196
  br label %if.end205

if.end205:                                        ; preds = %if.end204, %if.then188
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.end183
  br label %if.end207

if.end207:                                        ; preds = %if.end206, %if.then157
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.end153
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.end137
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.end114
  br label %do.body, !dbg !2303, !llvm.loop !2304

do.body:                                          ; preds = %if.end210
  br label %do.end, !dbg !2305

do.end:                                           ; preds = %do.body
  br label %do.body211, !dbg !2308, !llvm.loop !2309

do.body211:                                       ; preds = %do.end
  br label %do.end212, !dbg !2310

do.end212:                                        ; preds = %do.body211
  br label %do.body213, !dbg !2313, !llvm.loop !2314

do.body213:                                       ; preds = %do.end212
  br label %do.end214, !dbg !2315

do.end214:                                        ; preds = %do.body213
  br label %do.body215, !dbg !2318, !llvm.loop !2319

do.body215:                                       ; preds = %do.end214
  br label %do.end216, !dbg !2320

do.end216:                                        ; preds = %do.body215
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2323, metadata !1742), !dbg !2325
  call void @llvm.dbg.declare(metadata i32* %b, metadata !2326, metadata !1742), !dbg !2327
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !2328, metadata !1742), !dbg !2329
  call void @llvm.dbg.declare(metadata i32* %lpos, metadata !2330, metadata !1742), !dbg !2331
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2332, metadata !1742), !dbg !2333
  call void @llvm.dbg.declare(metadata i32* %block_len, metadata !2334, metadata !1742), !dbg !2335
  call void @llvm.dbg.declare(metadata i32* %i217, metadata !2336, metadata !1742), !dbg !2337
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2338, metadata !1742), !dbg !2339
  call void @llvm.dbg.declare(metadata i32* %n, metadata !2340, metadata !1742), !dbg !2341
  call void @llvm.dbg.declare(metadata i8** %table, metadata !2342, metadata !1742), !dbg !2343
  %111 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2344
  %version218 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %111, i32 0, i32 3, !dbg !2346
  %112 = load i32, i32* %version218, align 16, !dbg !2346
  %cmp219 = icmp eq i32 %112, 1, !dbg !2347
  br i1 %cmp219, label %if.then221, label %if.else222, !dbg !2348

if.then221:                                       ; preds = %do.end216
  %113 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2349
  %coefs_start = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %113, i32 0, i32 13, !dbg !2350
  store i32 3, i32* %coefs_start, align 4, !dbg !2351
  br label %if.end224, !dbg !2349

if.else222:                                       ; preds = %do.end216
  %114 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2352
  %coefs_start223 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %114, i32 0, i32 13, !dbg !2353
  store i32 0, i32* %coefs_start223, align 4, !dbg !2354
  br label %if.end224

if.end224:                                        ; preds = %if.else222, %if.then221
  store i32 0, i32* %k, align 4, !dbg !2355
  br label %for.cond, !dbg !2357

for.cond:                                         ; preds = %for.inc426, %if.end224
  %115 = load i32, i32* %k, align 4, !dbg !2358
  %116 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2361
  %nb_block_sizes225 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %116, i32 0, i32 27, !dbg !2362
  %117 = load i32, i32* %nb_block_sizes225, align 32, !dbg !2362
  %cmp226 = icmp slt i32 %115, %117, !dbg !2363
  br i1 %cmp226, label %for.body, label %for.end428, !dbg !2364

for.body:                                         ; preds = %for.cond
  %118 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2365
  %frame_len228 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %118, i32 0, i32 25, !dbg !2367
  %119 = load i32, i32* %frame_len228, align 8, !dbg !2367
  %120 = load i32, i32* %k, align 4, !dbg !2368
  %shr229 = ashr i32 %119, %120, !dbg !2369
  store i32 %shr229, i32* %block_len, align 4, !dbg !2370
  %121 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2371
  %version230 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %121, i32 0, i32 3, !dbg !2373
  %122 = load i32, i32* %version230, align 16, !dbg !2373
  %cmp231 = icmp eq i32 %122, 1, !dbg !2374
  br i1 %cmp231, label %if.then233, label %if.else260, !dbg !2375

if.then233:                                       ; preds = %for.body
  store i32 0, i32* %lpos, align 4, !dbg !2376
  store i32 0, i32* %i217, align 4, !dbg !2378
  br label %for.cond234, !dbg !2380

for.cond234:                                      ; preds = %for.inc, %if.then233
  %123 = load i32, i32* %i217, align 4, !dbg !2381
  %cmp235 = icmp slt i32 %123, 25, !dbg !2384
  br i1 %cmp235, label %for.body237, label %for.end, !dbg !2385

for.body237:                                      ; preds = %for.cond234
  %124 = load i32, i32* %i217, align 4, !dbg !2386
  %idxprom = sext i32 %124 to i64, !dbg !2388
  %arrayidx = getelementptr inbounds [25 x i16], [25 x i16]* @ff_wma_critical_freqs, i64 0, i64 %idxprom, !dbg !2388
  %125 = load i16, i16* %arrayidx, align 2, !dbg !2388
  %conv238 = zext i16 %125 to i32, !dbg !2388
  store i32 %conv238, i32* %a, align 4, !dbg !2389
  %126 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2390
  %sample_rate239 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %126, i32 0, i32 82, !dbg !2391
  %127 = load i32, i32* %sample_rate239, align 8, !dbg !2391
  store i32 %127, i32* %b, align 4, !dbg !2392
  %128 = load i32, i32* %block_len, align 4, !dbg !2393
  %mul240 = mul nsw i32 %128, 2, !dbg !2394
  %129 = load i32, i32* %a, align 4, !dbg !2395
  %mul241 = mul nsw i32 %mul240, %129, !dbg !2396
  %130 = load i32, i32* %b, align 4, !dbg !2397
  %shr242 = ashr i32 %130, 1, !dbg !2398
  %add243 = add nsw i32 %mul241, %shr242, !dbg !2399
  %131 = load i32, i32* %b, align 4, !dbg !2400
  %div244 = sdiv i32 %add243, %131, !dbg !2401
  store i32 %div244, i32* %pos, align 4, !dbg !2402
  %132 = load i32, i32* %pos, align 4, !dbg !2403
  %133 = load i32, i32* %block_len, align 4, !dbg !2405
  %cmp245 = icmp sgt i32 %132, %133, !dbg !2406
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !2407

if.then247:                                       ; preds = %for.body237
  %134 = load i32, i32* %block_len, align 4, !dbg !2408
  store i32 %134, i32* %pos, align 4, !dbg !2409
  br label %if.end248, !dbg !2410

if.end248:                                        ; preds = %if.then247, %for.body237
  %135 = load i32, i32* %pos, align 4, !dbg !2411
  %136 = load i32, i32* %lpos, align 4, !dbg !2412
  %sub249 = sub nsw i32 %135, %136, !dbg !2413
  %conv250 = trunc i32 %sub249 to i16, !dbg !2411
  %137 = load i32, i32* %i217, align 4, !dbg !2414
  %idxprom251 = sext i32 %137 to i64, !dbg !2415
  %138 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2415
  %exponent_bands = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %138, i32 0, i32 11, !dbg !2416
  %arrayidx252 = getelementptr inbounds [5 x [25 x i16]], [5 x [25 x i16]]* %exponent_bands, i64 0, i64 0, !dbg !2415
  %arrayidx253 = getelementptr inbounds [25 x i16], [25 x i16]* %arrayidx252, i64 0, i64 %idxprom251, !dbg !2415
  store i16 %conv250, i16* %arrayidx253, align 2, !dbg !2417
  %139 = load i32, i32* %pos, align 4, !dbg !2418
  %140 = load i32, i32* %block_len, align 4, !dbg !2420
  %cmp254 = icmp sge i32 %139, %140, !dbg !2421
  br i1 %cmp254, label %if.then256, label %if.end257, !dbg !2422

if.then256:                                       ; preds = %if.end248
  %141 = load i32, i32* %i217, align 4, !dbg !2423
  %inc = add nsw i32 %141, 1, !dbg !2423
  store i32 %inc, i32* %i217, align 4, !dbg !2423
  br label %for.end, !dbg !2425

if.end257:                                        ; preds = %if.end248
  %142 = load i32, i32* %pos, align 4, !dbg !2426
  store i32 %142, i32* %lpos, align 4, !dbg !2427
  br label %for.inc, !dbg !2428

for.inc:                                          ; preds = %if.end257
  %143 = load i32, i32* %i217, align 4, !dbg !2429
  %inc258 = add nsw i32 %143, 1, !dbg !2429
  store i32 %inc258, i32* %i217, align 4, !dbg !2429
  br label %for.cond234, !dbg !2431, !llvm.loop !2432

for.end:                                          ; preds = %if.then256, %for.cond234
  %144 = load i32, i32* %i217, align 4, !dbg !2434
  %145 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2435
  %exponent_sizes = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %145, i32 0, i32 10, !dbg !2436
  %arrayidx259 = getelementptr inbounds [5 x i32], [5 x i32]* %exponent_sizes, i64 0, i64 0, !dbg !2435
  store i32 %144, i32* %arrayidx259, align 32, !dbg !2437
  br label %if.end357, !dbg !2438

if.else260:                                       ; preds = %for.body
  store i8* null, i8** %table, align 8, !dbg !2439
  %146 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2441
  %frame_len_bits261 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %146, i32 0, i32 26, !dbg !2442
  %147 = load i32, i32* %frame_len_bits261, align 4, !dbg !2442
  %sub262 = sub nsw i32 %147, 7, !dbg !2443
  %148 = load i32, i32* %k, align 4, !dbg !2444
  %sub263 = sub nsw i32 %sub262, %148, !dbg !2445
  store i32 %sub263, i32* %a, align 4, !dbg !2446
  %149 = load i32, i32* %a, align 4, !dbg !2447
  %cmp264 = icmp slt i32 %149, 3, !dbg !2449
  br i1 %cmp264, label %if.then266, label %if.end292, !dbg !2450

if.then266:                                       ; preds = %if.else260
  %150 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2451
  %sample_rate267 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %150, i32 0, i32 82, !dbg !2454
  %151 = load i32, i32* %sample_rate267, align 8, !dbg !2454
  %cmp268 = icmp sge i32 %151, 44100, !dbg !2455
  br i1 %cmp268, label %if.then270, label %if.else273, !dbg !2456

if.then270:                                       ; preds = %if.then266
  %152 = load i32, i32* %a, align 4, !dbg !2457
  %idxprom271 = sext i32 %152 to i64, !dbg !2458
  %arrayidx272 = getelementptr inbounds [3 x [25 x i8]], [3 x [25 x i8]]* @exponent_band_44100, i64 0, i64 %idxprom271, !dbg !2458
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %arrayidx272, i32 0, i32 0, !dbg !2458
  store i8* %arraydecay, i8** %table, align 8, !dbg !2459
  br label %if.end291, !dbg !2460

if.else273:                                       ; preds = %if.then266
  %153 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2461
  %sample_rate274 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %153, i32 0, i32 82, !dbg !2463
  %154 = load i32, i32* %sample_rate274, align 8, !dbg !2463
  %cmp275 = icmp sge i32 %154, 32000, !dbg !2464
  br i1 %cmp275, label %if.then277, label %if.else281, !dbg !2465

if.then277:                                       ; preds = %if.else273
  %155 = load i32, i32* %a, align 4, !dbg !2466
  %idxprom278 = sext i32 %155 to i64, !dbg !2467
  %arrayidx279 = getelementptr inbounds [3 x [25 x i8]], [3 x [25 x i8]]* @exponent_band_32000, i64 0, i64 %idxprom278, !dbg !2467
  %arraydecay280 = getelementptr inbounds [25 x i8], [25 x i8]* %arrayidx279, i32 0, i32 0, !dbg !2467
  store i8* %arraydecay280, i8** %table, align 8, !dbg !2468
  br label %if.end290, !dbg !2469

if.else281:                                       ; preds = %if.else273
  %156 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2470
  %sample_rate282 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %156, i32 0, i32 82, !dbg !2472
  %157 = load i32, i32* %sample_rate282, align 8, !dbg !2472
  %cmp283 = icmp sge i32 %157, 22050, !dbg !2473
  br i1 %cmp283, label %if.then285, label %if.end289, !dbg !2474

if.then285:                                       ; preds = %if.else281
  %158 = load i32, i32* %a, align 4, !dbg !2475
  %idxprom286 = sext i32 %158 to i64, !dbg !2476
  %arrayidx287 = getelementptr inbounds [3 x [25 x i8]], [3 x [25 x i8]]* @exponent_band_22050, i64 0, i64 %idxprom286, !dbg !2476
  %arraydecay288 = getelementptr inbounds [25 x i8], [25 x i8]* %arrayidx287, i32 0, i32 0, !dbg !2476
  store i8* %arraydecay288, i8** %table, align 8, !dbg !2477
  br label %if.end289, !dbg !2478

if.end289:                                        ; preds = %if.then285, %if.else281
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.then277
  br label %if.end291

if.end291:                                        ; preds = %if.end290, %if.then270
  br label %if.end292, !dbg !2479

if.end292:                                        ; preds = %if.end291, %if.else260
  %159 = load i8*, i8** %table, align 8, !dbg !2480
  %tobool293 = icmp ne i8* %159, null, !dbg !2480
  br i1 %tobool293, label %if.then294, label %if.else314, !dbg !2482

if.then294:                                       ; preds = %if.end292
  %160 = load i8*, i8** %table, align 8, !dbg !2483
  %incdec.ptr = getelementptr inbounds i8, i8* %160, i32 1, !dbg !2483
  store i8* %incdec.ptr, i8** %table, align 8, !dbg !2483
  %161 = load i8, i8* %160, align 1, !dbg !2485
  %conv295 = zext i8 %161 to i32, !dbg !2485
  store i32 %conv295, i32* %n, align 4, !dbg !2486
  store i32 0, i32* %i217, align 4, !dbg !2487
  br label %for.cond296, !dbg !2489

for.cond296:                                      ; preds = %for.inc308, %if.then294
  %162 = load i32, i32* %i217, align 4, !dbg !2490
  %163 = load i32, i32* %n, align 4, !dbg !2493
  %cmp297 = icmp slt i32 %162, %163, !dbg !2494
  br i1 %cmp297, label %for.body299, label %for.end310, !dbg !2495

for.body299:                                      ; preds = %for.cond296
  %164 = load i32, i32* %i217, align 4, !dbg !2496
  %idxprom300 = sext i32 %164 to i64, !dbg !2497
  %165 = load i8*, i8** %table, align 8, !dbg !2497
  %arrayidx301 = getelementptr inbounds i8, i8* %165, i64 %idxprom300, !dbg !2497
  %166 = load i8, i8* %arrayidx301, align 1, !dbg !2497
  %conv302 = zext i8 %166 to i16, !dbg !2497
  %167 = load i32, i32* %i217, align 4, !dbg !2498
  %idxprom303 = sext i32 %167 to i64, !dbg !2499
  %168 = load i32, i32* %k, align 4, !dbg !2500
  %idxprom304 = sext i32 %168 to i64, !dbg !2499
  %169 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2499
  %exponent_bands305 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %169, i32 0, i32 11, !dbg !2501
  %arrayidx306 = getelementptr inbounds [5 x [25 x i16]], [5 x [25 x i16]]* %exponent_bands305, i64 0, i64 %idxprom304, !dbg !2499
  %arrayidx307 = getelementptr inbounds [25 x i16], [25 x i16]* %arrayidx306, i64 0, i64 %idxprom303, !dbg !2499
  store i16 %conv302, i16* %arrayidx307, align 2, !dbg !2502
  br label %for.inc308, !dbg !2499

for.inc308:                                       ; preds = %for.body299
  %170 = load i32, i32* %i217, align 4, !dbg !2503
  %inc309 = add nsw i32 %170, 1, !dbg !2503
  store i32 %inc309, i32* %i217, align 4, !dbg !2503
  br label %for.cond296, !dbg !2505, !llvm.loop !2506

for.end310:                                       ; preds = %for.cond296
  %171 = load i32, i32* %n, align 4, !dbg !2508
  %172 = load i32, i32* %k, align 4, !dbg !2509
  %idxprom311 = sext i32 %172 to i64, !dbg !2510
  %173 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2510
  %exponent_sizes312 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %173, i32 0, i32 10, !dbg !2511
  %arrayidx313 = getelementptr inbounds [5 x i32], [5 x i32]* %exponent_sizes312, i64 0, i64 %idxprom311, !dbg !2510
  store i32 %171, i32* %arrayidx313, align 4, !dbg !2512
  br label %if.end356, !dbg !2513

if.else314:                                       ; preds = %if.end292
  store i32 0, i32* %j, align 4, !dbg !2514
  store i32 0, i32* %lpos, align 4, !dbg !2516
  store i32 0, i32* %i217, align 4, !dbg !2517
  br label %for.cond315, !dbg !2519

for.cond315:                                      ; preds = %for.inc350, %if.else314
  %174 = load i32, i32* %i217, align 4, !dbg !2520
  %cmp316 = icmp slt i32 %174, 25, !dbg !2523
  br i1 %cmp316, label %for.body318, label %for.end352, !dbg !2524

for.body318:                                      ; preds = %for.cond315
  %175 = load i32, i32* %i217, align 4, !dbg !2525
  %idxprom319 = sext i32 %175 to i64, !dbg !2527
  %arrayidx320 = getelementptr inbounds [25 x i16], [25 x i16]* @ff_wma_critical_freqs, i64 0, i64 %idxprom319, !dbg !2527
  %176 = load i16, i16* %arrayidx320, align 2, !dbg !2527
  %conv321 = zext i16 %176 to i32, !dbg !2527
  store i32 %conv321, i32* %a, align 4, !dbg !2528
  %177 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2529
  %sample_rate322 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %177, i32 0, i32 82, !dbg !2530
  %178 = load i32, i32* %sample_rate322, align 8, !dbg !2530
  store i32 %178, i32* %b, align 4, !dbg !2531
  %179 = load i32, i32* %block_len, align 4, !dbg !2532
  %mul323 = mul nsw i32 %179, 2, !dbg !2533
  %180 = load i32, i32* %a, align 4, !dbg !2534
  %mul324 = mul nsw i32 %mul323, %180, !dbg !2535
  %181 = load i32, i32* %b, align 4, !dbg !2536
  %shl325 = shl i32 %181, 1, !dbg !2537
  %add326 = add nsw i32 %mul324, %shl325, !dbg !2538
  %182 = load i32, i32* %b, align 4, !dbg !2539
  %mul327 = mul nsw i32 4, %182, !dbg !2540
  %div328 = sdiv i32 %add326, %mul327, !dbg !2541
  store i32 %div328, i32* %pos, align 4, !dbg !2542
  %183 = load i32, i32* %pos, align 4, !dbg !2543
  %shl329 = shl i32 %183, 2, !dbg !2543
  store i32 %shl329, i32* %pos, align 4, !dbg !2543
  %184 = load i32, i32* %pos, align 4, !dbg !2544
  %185 = load i32, i32* %block_len, align 4, !dbg !2546
  %cmp330 = icmp sgt i32 %184, %185, !dbg !2547
  br i1 %cmp330, label %if.then332, label %if.end333, !dbg !2548

if.then332:                                       ; preds = %for.body318
  %186 = load i32, i32* %block_len, align 4, !dbg !2549
  store i32 %186, i32* %pos, align 4, !dbg !2550
  br label %if.end333, !dbg !2551

if.end333:                                        ; preds = %if.then332, %for.body318
  %187 = load i32, i32* %pos, align 4, !dbg !2552
  %188 = load i32, i32* %lpos, align 4, !dbg !2554
  %cmp334 = icmp sgt i32 %187, %188, !dbg !2555
  br i1 %cmp334, label %if.then336, label %if.end345, !dbg !2556

if.then336:                                       ; preds = %if.end333
  %189 = load i32, i32* %pos, align 4, !dbg !2557
  %190 = load i32, i32* %lpos, align 4, !dbg !2558
  %sub337 = sub nsw i32 %189, %190, !dbg !2559
  %conv338 = trunc i32 %sub337 to i16, !dbg !2557
  %191 = load i32, i32* %j, align 4, !dbg !2560
  %inc339 = add nsw i32 %191, 1, !dbg !2560
  store i32 %inc339, i32* %j, align 4, !dbg !2560
  %idxprom340 = sext i32 %191 to i64, !dbg !2561
  %192 = load i32, i32* %k, align 4, !dbg !2562
  %idxprom341 = sext i32 %192 to i64, !dbg !2561
  %193 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2561
  %exponent_bands342 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %193, i32 0, i32 11, !dbg !2563
  %arrayidx343 = getelementptr inbounds [5 x [25 x i16]], [5 x [25 x i16]]* %exponent_bands342, i64 0, i64 %idxprom341, !dbg !2561
  %arrayidx344 = getelementptr inbounds [25 x i16], [25 x i16]* %arrayidx343, i64 0, i64 %idxprom340, !dbg !2561
  store i16 %conv338, i16* %arrayidx344, align 2, !dbg !2564
  br label %if.end345, !dbg !2561

if.end345:                                        ; preds = %if.then336, %if.end333
  %194 = load i32, i32* %pos, align 4, !dbg !2565
  %195 = load i32, i32* %block_len, align 4, !dbg !2567
  %cmp346 = icmp sge i32 %194, %195, !dbg !2568
  br i1 %cmp346, label %if.then348, label %if.end349, !dbg !2569

if.then348:                                       ; preds = %if.end345
  br label %for.end352, !dbg !2570

if.end349:                                        ; preds = %if.end345
  %196 = load i32, i32* %pos, align 4, !dbg !2571
  store i32 %196, i32* %lpos, align 4, !dbg !2572
  br label %for.inc350, !dbg !2573

for.inc350:                                       ; preds = %if.end349
  %197 = load i32, i32* %i217, align 4, !dbg !2574
  %inc351 = add nsw i32 %197, 1, !dbg !2574
  store i32 %inc351, i32* %i217, align 4, !dbg !2574
  br label %for.cond315, !dbg !2576, !llvm.loop !2577

for.end352:                                       ; preds = %if.then348, %for.cond315
  %198 = load i32, i32* %j, align 4, !dbg !2579
  %199 = load i32, i32* %k, align 4, !dbg !2580
  %idxprom353 = sext i32 %199 to i64, !dbg !2581
  %200 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2581
  %exponent_sizes354 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %200, i32 0, i32 10, !dbg !2582
  %arrayidx355 = getelementptr inbounds [5 x i32], [5 x i32]* %exponent_sizes354, i64 0, i64 %idxprom353, !dbg !2581
  store i32 %198, i32* %arrayidx355, align 4, !dbg !2583
  br label %if.end356

if.end356:                                        ; preds = %for.end352, %for.end310
  br label %if.end357

if.end357:                                        ; preds = %if.end356, %for.end
  %201 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2584
  %frame_len358 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %201, i32 0, i32 25, !dbg !2585
  %202 = load i32, i32* %frame_len358, align 8, !dbg !2585
  %203 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2586
  %frame_len359 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %203, i32 0, i32 25, !dbg !2587
  %204 = load i32, i32* %frame_len359, align 8, !dbg !2587
  %mul360 = mul nsw i32 %204, 9, !dbg !2588
  %div361 = sdiv i32 %mul360, 100, !dbg !2589
  %sub362 = sub nsw i32 %202, %div361, !dbg !2590
  %205 = load i32, i32* %k, align 4, !dbg !2591
  %shr363 = ashr i32 %sub362, %205, !dbg !2592
  %206 = load i32, i32* %k, align 4, !dbg !2593
  %idxprom364 = sext i32 %206 to i64, !dbg !2594
  %207 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2594
  %coefs_end = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %207, i32 0, i32 14, !dbg !2595
  %arrayidx365 = getelementptr inbounds [5 x i32], [5 x i32]* %coefs_end, i64 0, i64 %idxprom364, !dbg !2594
  store i32 %shr363, i32* %arrayidx365, align 4, !dbg !2596
  %208 = load i32, i32* %block_len, align 4, !dbg !2597
  %mul366 = mul nsw i32 %208, 2, !dbg !2598
  %conv367 = sitofp i32 %mul366 to float, !dbg !2597
  %209 = load float, float* %high_freq, align 4, !dbg !2599
  %mul368 = fmul float %conv367, %209, !dbg !2600
  %210 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2601
  %sample_rate369 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %210, i32 0, i32 82, !dbg !2602
  %211 = load i32, i32* %sample_rate369, align 8, !dbg !2602
  %conv370 = sitofp i32 %211 to float, !dbg !2601
  %div371 = fdiv float %mul368, %conv370, !dbg !2603
  %conv372 = fpext float %div371 to double, !dbg !2604
  %add373 = fadd double %conv372, 5.000000e-01, !dbg !2605
  %conv374 = fptosi double %add373 to i32, !dbg !2606
  %212 = load i32, i32* %k, align 4, !dbg !2607
  %idxprom375 = sext i32 %212 to i64, !dbg !2608
  %213 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2608
  %high_band_start = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %213, i32 0, i32 12, !dbg !2609
  %arrayidx376 = getelementptr inbounds [5 x i32], [5 x i32]* %high_band_start, i64 0, i64 %idxprom375, !dbg !2608
  store i32 %conv374, i32* %arrayidx376, align 4, !dbg !2610
  %214 = load i32, i32* %k, align 4, !dbg !2611
  %idxprom377 = sext i32 %214 to i64, !dbg !2612
  %215 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2612
  %exponent_sizes378 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %215, i32 0, i32 10, !dbg !2613
  %arrayidx379 = getelementptr inbounds [5 x i32], [5 x i32]* %exponent_sizes378, i64 0, i64 %idxprom377, !dbg !2612
  %216 = load i32, i32* %arrayidx379, align 4, !dbg !2612
  store i32 %216, i32* %n, align 4, !dbg !2614
  store i32 0, i32* %j, align 4, !dbg !2615
  store i32 0, i32* %pos, align 4, !dbg !2616
  store i32 0, i32* %i217, align 4, !dbg !2617
  br label %for.cond380, !dbg !2619

for.cond380:                                      ; preds = %for.inc421, %if.end357
  %217 = load i32, i32* %i217, align 4, !dbg !2620
  %218 = load i32, i32* %n, align 4, !dbg !2623
  %cmp381 = icmp slt i32 %217, %218, !dbg !2624
  br i1 %cmp381, label %for.body383, label %for.end423, !dbg !2625

for.body383:                                      ; preds = %for.cond380
  call void @llvm.dbg.declare(metadata i32* %start, metadata !2626, metadata !1742), !dbg !2628
  call void @llvm.dbg.declare(metadata i32* %end, metadata !2629, metadata !1742), !dbg !2630
  %219 = load i32, i32* %pos, align 4, !dbg !2631
  store i32 %219, i32* %start, align 4, !dbg !2632
  %220 = load i32, i32* %i217, align 4, !dbg !2633
  %idxprom384 = sext i32 %220 to i64, !dbg !2634
  %221 = load i32, i32* %k, align 4, !dbg !2635
  %idxprom385 = sext i32 %221 to i64, !dbg !2634
  %222 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2634
  %exponent_bands386 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %222, i32 0, i32 11, !dbg !2636
  %arrayidx387 = getelementptr inbounds [5 x [25 x i16]], [5 x [25 x i16]]* %exponent_bands386, i64 0, i64 %idxprom385, !dbg !2634
  %arrayidx388 = getelementptr inbounds [25 x i16], [25 x i16]* %arrayidx387, i64 0, i64 %idxprom384, !dbg !2634
  %223 = load i16, i16* %arrayidx388, align 2, !dbg !2634
  %conv389 = zext i16 %223 to i32, !dbg !2634
  %224 = load i32, i32* %pos, align 4, !dbg !2637
  %add390 = add nsw i32 %224, %conv389, !dbg !2637
  store i32 %add390, i32* %pos, align 4, !dbg !2637
  %225 = load i32, i32* %pos, align 4, !dbg !2638
  store i32 %225, i32* %end, align 4, !dbg !2639
  %226 = load i32, i32* %start, align 4, !dbg !2640
  %227 = load i32, i32* %k, align 4, !dbg !2642
  %idxprom391 = sext i32 %227 to i64, !dbg !2643
  %228 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2643
  %high_band_start392 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %228, i32 0, i32 12, !dbg !2644
  %arrayidx393 = getelementptr inbounds [5 x i32], [5 x i32]* %high_band_start392, i64 0, i64 %idxprom391, !dbg !2643
  %229 = load i32, i32* %arrayidx393, align 4, !dbg !2643
  %cmp394 = icmp slt i32 %226, %229, !dbg !2645
  br i1 %cmp394, label %if.then396, label %if.end400, !dbg !2646

if.then396:                                       ; preds = %for.body383
  %230 = load i32, i32* %k, align 4, !dbg !2647
  %idxprom397 = sext i32 %230 to i64, !dbg !2648
  %231 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2648
  %high_band_start398 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %231, i32 0, i32 12, !dbg !2649
  %arrayidx399 = getelementptr inbounds [5 x i32], [5 x i32]* %high_band_start398, i64 0, i64 %idxprom397, !dbg !2648
  %232 = load i32, i32* %arrayidx399, align 4, !dbg !2648
  store i32 %232, i32* %start, align 4, !dbg !2650
  br label %if.end400, !dbg !2651

if.end400:                                        ; preds = %if.then396, %for.body383
  %233 = load i32, i32* %end, align 4, !dbg !2652
  %234 = load i32, i32* %k, align 4, !dbg !2654
  %idxprom401 = sext i32 %234 to i64, !dbg !2655
  %235 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2655
  %coefs_end402 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %235, i32 0, i32 14, !dbg !2656
  %arrayidx403 = getelementptr inbounds [5 x i32], [5 x i32]* %coefs_end402, i64 0, i64 %idxprom401, !dbg !2655
  %236 = load i32, i32* %arrayidx403, align 4, !dbg !2655
  %cmp404 = icmp sgt i32 %233, %236, !dbg !2657
  br i1 %cmp404, label %if.then406, label %if.end410, !dbg !2658

if.then406:                                       ; preds = %if.end400
  %237 = load i32, i32* %k, align 4, !dbg !2659
  %idxprom407 = sext i32 %237 to i64, !dbg !2660
  %238 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2660
  %coefs_end408 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %238, i32 0, i32 14, !dbg !2661
  %arrayidx409 = getelementptr inbounds [5 x i32], [5 x i32]* %coefs_end408, i64 0, i64 %idxprom407, !dbg !2660
  %239 = load i32, i32* %arrayidx409, align 4, !dbg !2660
  store i32 %239, i32* %end, align 4, !dbg !2662
  br label %if.end410, !dbg !2663

if.end410:                                        ; preds = %if.then406, %if.end400
  %240 = load i32, i32* %end, align 4, !dbg !2664
  %241 = load i32, i32* %start, align 4, !dbg !2666
  %cmp411 = icmp sgt i32 %240, %241, !dbg !2667
  br i1 %cmp411, label %if.then413, label %if.end420, !dbg !2668

if.then413:                                       ; preds = %if.end410
  %242 = load i32, i32* %end, align 4, !dbg !2669
  %243 = load i32, i32* %start, align 4, !dbg !2670
  %sub414 = sub nsw i32 %242, %243, !dbg !2671
  %244 = load i32, i32* %j, align 4, !dbg !2672
  %inc415 = add nsw i32 %244, 1, !dbg !2672
  store i32 %inc415, i32* %j, align 4, !dbg !2672
  %idxprom416 = sext i32 %244 to i64, !dbg !2673
  %245 = load i32, i32* %k, align 4, !dbg !2674
  %idxprom417 = sext i32 %245 to i64, !dbg !2673
  %246 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2673
  %exponent_high_bands = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %246, i32 0, i32 16, !dbg !2675
  %arrayidx418 = getelementptr inbounds [5 x [16 x i32]], [5 x [16 x i32]]* %exponent_high_bands, i64 0, i64 %idxprom417, !dbg !2673
  %arrayidx419 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx418, i64 0, i64 %idxprom416, !dbg !2673
  store i32 %sub414, i32* %arrayidx419, align 4, !dbg !2676
  br label %if.end420, !dbg !2673

if.end420:                                        ; preds = %if.then413, %if.end410
  br label %for.inc421, !dbg !2677

for.inc421:                                       ; preds = %if.end420
  %247 = load i32, i32* %i217, align 4, !dbg !2678
  %inc422 = add nsw i32 %247, 1, !dbg !2678
  store i32 %inc422, i32* %i217, align 4, !dbg !2678
  br label %for.cond380, !dbg !2680, !llvm.loop !2681

for.end423:                                       ; preds = %for.cond380
  %248 = load i32, i32* %j, align 4, !dbg !2683
  %249 = load i32, i32* %k, align 4, !dbg !2684
  %idxprom424 = sext i32 %249 to i64, !dbg !2685
  %250 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2685
  %exponent_high_sizes = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %250, i32 0, i32 15, !dbg !2686
  %arrayidx425 = getelementptr inbounds [5 x i32], [5 x i32]* %exponent_high_sizes, i64 0, i64 %idxprom424, !dbg !2685
  store i32 %248, i32* %arrayidx425, align 4, !dbg !2687
  br label %for.inc426, !dbg !2688

for.inc426:                                       ; preds = %for.end423
  %251 = load i32, i32* %k, align 4, !dbg !2689
  %inc427 = add nsw i32 %251, 1, !dbg !2689
  store i32 %inc427, i32* %k, align 4, !dbg !2689
  br label %for.cond, !dbg !2691, !llvm.loop !2692

for.end428:                                       ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !2694
  br label %for.cond429, !dbg !2696

for.cond429:                                      ; preds = %for.inc442, %for.end428
  %252 = load i32, i32* %i, align 4, !dbg !2697
  %253 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2700
  %nb_block_sizes430 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %253, i32 0, i32 27, !dbg !2701
  %254 = load i32, i32* %nb_block_sizes430, align 32, !dbg !2701
  %cmp431 = icmp slt i32 %252, %254, !dbg !2702
  br i1 %cmp431, label %for.body433, label %for.end444, !dbg !2703

for.body433:                                      ; preds = %for.cond429
  %255 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2704
  %frame_len_bits434 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %255, i32 0, i32 26, !dbg !2706
  %256 = load i32, i32* %frame_len_bits434, align 4, !dbg !2706
  %257 = load i32, i32* %i, align 4, !dbg !2707
  %sub435 = sub nsw i32 %256, %257, !dbg !2708
  call void @ff_init_ff_sine_windows(i32 %sub435), !dbg !2709
  %258 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2710
  %frame_len_bits436 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %258, i32 0, i32 26, !dbg !2711
  %259 = load i32, i32* %frame_len_bits436, align 4, !dbg !2711
  %260 = load i32, i32* %i, align 4, !dbg !2712
  %sub437 = sub nsw i32 %259, %260, !dbg !2713
  %idxprom438 = sext i32 %sub437 to i64, !dbg !2714
  %arrayidx439 = getelementptr inbounds [16 x float*], [16 x float*]* @ff_sine_windows, i64 0, i64 %idxprom438, !dbg !2714
  %261 = load float*, float** %arrayidx439, align 8, !dbg !2714
  %262 = load i32, i32* %i, align 4, !dbg !2715
  %idxprom440 = sext i32 %262 to i64, !dbg !2716
  %263 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2716
  %windows = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %263, i32 0, i32 46, !dbg !2717
  %arrayidx441 = getelementptr inbounds [5 x float*], [5 x float*]* %windows, i64 0, i64 %idxprom440, !dbg !2716
  store float* %261, float** %arrayidx441, align 8, !dbg !2718
  br label %for.inc442, !dbg !2719

for.inc442:                                       ; preds = %for.body433
  %264 = load i32, i32* %i, align 4, !dbg !2720
  %inc443 = add nsw i32 %264, 1, !dbg !2720
  store i32 %inc443, i32* %i, align 4, !dbg !2720
  br label %for.cond429, !dbg !2722, !llvm.loop !2723

for.end444:                                       ; preds = %for.cond429
  %265 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2725
  %reset_block_lengths = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %265, i32 0, i32 28, !dbg !2726
  store i32 1, i32* %reset_block_lengths, align 4, !dbg !2727
  %266 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2728
  %use_noise_coding445 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %266, i32 0, i32 7, !dbg !2730
  %267 = load i32, i32* %use_noise_coding445, align 32, !dbg !2730
  %tobool446 = icmp ne i32 %267, 0, !dbg !2728
  br i1 %tobool446, label %if.then447, label %if.end472, !dbg !2731

if.then447:                                       ; preds = %for.end444
  %268 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2732
  %use_exp_vlc = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %268, i32 0, i32 6, !dbg !2735
  %269 = load i32, i32* %use_exp_vlc, align 4, !dbg !2735
  %tobool448 = icmp ne i32 %269, 0, !dbg !2732
  br i1 %tobool448, label %if.then449, label %if.else450, !dbg !2736

if.then449:                                       ; preds = %if.then447
  %270 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2737
  %noise_mult = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %270, i32 0, i32 54, !dbg !2738
  store float 0x3F947AE140000000, float* %noise_mult, align 4, !dbg !2739
  br label %if.end452, !dbg !2737

if.else450:                                       ; preds = %if.then447
  %271 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2740
  %noise_mult451 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %271, i32 0, i32 54, !dbg !2741
  store float 0x3FA47AE140000000, float* %noise_mult451, align 4, !dbg !2742
  br label %if.end452

if.end452:                                        ; preds = %if.else450, %if.then449
  call void @llvm.dbg.declare(metadata i32* %seed, metadata !2743, metadata !1742), !dbg !2745
  call void @llvm.dbg.declare(metadata float* %norm, metadata !2746, metadata !1742), !dbg !2747
  store i32 1, i32* %seed, align 4, !dbg !2748
  %call453 = call double @sqrt(double 3.000000e+00) #6, !dbg !2749
  %mul454 = fmul double 0x3E00000000000000, %call453, !dbg !2750
  %272 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2751
  %noise_mult455 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %272, i32 0, i32 54, !dbg !2752
  %273 = load float, float* %noise_mult455, align 4, !dbg !2752
  %conv456 = fpext float %273 to double, !dbg !2751
  %mul457 = fmul double %mul454, %conv456, !dbg !2753
  %conv458 = fptrunc double %mul457 to float, !dbg !2754
  store float %conv458, float* %norm, align 4, !dbg !2755
  store i32 0, i32* %i, align 4, !dbg !2756
  br label %for.cond459, !dbg !2758

for.cond459:                                      ; preds = %for.inc469, %if.end452
  %274 = load i32, i32* %i, align 4, !dbg !2759
  %cmp460 = icmp slt i32 %274, 8192, !dbg !2762
  br i1 %cmp460, label %for.body462, label %for.end471, !dbg !2763

for.body462:                                      ; preds = %for.cond459
  %275 = load i32, i32* %seed, align 4, !dbg !2764
  %mul463 = mul i32 %275, 314159, !dbg !2766
  %add464 = add i32 %mul463, 1, !dbg !2767
  store i32 %add464, i32* %seed, align 4, !dbg !2768
  %276 = load i32, i32* %seed, align 4, !dbg !2769
  %conv465 = sitofp i32 %276 to float, !dbg !2770
  %277 = load float, float* %norm, align 4, !dbg !2771
  %mul466 = fmul float %conv465, %277, !dbg !2772
  %278 = load i32, i32* %i, align 4, !dbg !2773
  %idxprom467 = sext i32 %278 to i64, !dbg !2774
  %279 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2774
  %noise_table = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %279, i32 0, i32 52, !dbg !2775
  %arrayidx468 = getelementptr inbounds [8192 x float], [8192 x float]* %noise_table, i64 0, i64 %idxprom467, !dbg !2774
  store float %mul466, float* %arrayidx468, align 4, !dbg !2776
  br label %for.inc469, !dbg !2777

for.inc469:                                       ; preds = %for.body462
  %280 = load i32, i32* %i, align 4, !dbg !2778
  %inc470 = add nsw i32 %280, 1, !dbg !2778
  store i32 %inc470, i32* %i, align 4, !dbg !2778
  br label %for.cond459, !dbg !2780, !llvm.loop !2781

for.end471:                                       ; preds = %for.cond459
  br label %if.end472, !dbg !2783

if.end472:                                        ; preds = %for.end471, %for.end444
  %281 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2784
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %281, i32 0, i32 13, !dbg !2785
  %282 = load i32, i32* %flags, align 4, !dbg !2785
  %and473 = and i32 %282, 8388608, !dbg !2786
  %call474 = call %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32 %and473), !dbg !2787
  %283 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2788
  %fdsp = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %283, i32 0, i32 59, !dbg !2789
  store %struct.AVFloatDSPContext* %call474, %struct.AVFloatDSPContext** %fdsp, align 16, !dbg !2790
  %284 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2791
  %fdsp475 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %284, i32 0, i32 59, !dbg !2793
  %285 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp475, align 16, !dbg !2793
  %tobool476 = icmp ne %struct.AVFloatDSPContext* %285, null, !dbg !2791
  br i1 %tobool476, label %if.end478, label %if.then477, !dbg !2794

if.then477:                                       ; preds = %if.end472
  store i32 -12, i32* %retval, align 4, !dbg !2795
  br label %return, !dbg !2795

if.end478:                                        ; preds = %if.end472
  store i32 2, i32* %coef_vlc_table, align 4, !dbg !2796
  %286 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2797
  %sample_rate479 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %286, i32 0, i32 82, !dbg !2799
  %287 = load i32, i32* %sample_rate479, align 8, !dbg !2799
  %cmp480 = icmp sge i32 %287, 32000, !dbg !2800
  br i1 %cmp480, label %if.then482, label %if.end494, !dbg !2801

if.then482:                                       ; preds = %if.end478
  %288 = load float, float* %bps1, align 4, !dbg !2802
  %conv483 = fpext float %288 to double, !dbg !2802
  %cmp484 = fcmp olt double %conv483, 7.200000e-01, !dbg !2805
  br i1 %cmp484, label %if.then486, label %if.else487, !dbg !2806

if.then486:                                       ; preds = %if.then482
  store i32 0, i32* %coef_vlc_table, align 4, !dbg !2807
  br label %if.end493, !dbg !2808

if.else487:                                       ; preds = %if.then482
  %289 = load float, float* %bps1, align 4, !dbg !2809
  %conv488 = fpext float %289 to double, !dbg !2809
  %cmp489 = fcmp olt double %conv488, 1.160000e+00, !dbg !2811
  br i1 %cmp489, label %if.then491, label %if.end492, !dbg !2812

if.then491:                                       ; preds = %if.else487
  store i32 1, i32* %coef_vlc_table, align 4, !dbg !2813
  br label %if.end492, !dbg !2814

if.end492:                                        ; preds = %if.then491, %if.else487
  br label %if.end493

if.end493:                                        ; preds = %if.end492, %if.then486
  br label %if.end494, !dbg !2815

if.end494:                                        ; preds = %if.end493, %if.end478
  %290 = load i32, i32* %coef_vlc_table, align 4, !dbg !2816
  %mul495 = mul nsw i32 %290, 2, !dbg !2817
  %idxprom496 = sext i32 %mul495 to i64, !dbg !2818
  %arrayidx497 = getelementptr inbounds [6 x %struct.CoefVLCTable], [6 x %struct.CoefVLCTable]* @coef_vlcs, i64 0, i64 %idxprom496, !dbg !2818
  %291 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2819
  %coef_vlcs = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %291, i32 0, i32 24, !dbg !2820
  %arrayidx498 = getelementptr inbounds [2 x %struct.CoefVLCTable*], [2 x %struct.CoefVLCTable*]* %coef_vlcs, i64 0, i64 0, !dbg !2819
  store %struct.CoefVLCTable* %arrayidx497, %struct.CoefVLCTable** %arrayidx498, align 8, !dbg !2821
  %292 = load i32, i32* %coef_vlc_table, align 4, !dbg !2822
  %mul499 = mul nsw i32 %292, 2, !dbg !2823
  %add500 = add nsw i32 %mul499, 1, !dbg !2824
  %idxprom501 = sext i32 %add500 to i64, !dbg !2825
  %arrayidx502 = getelementptr inbounds [6 x %struct.CoefVLCTable], [6 x %struct.CoefVLCTable]* @coef_vlcs, i64 0, i64 %idxprom501, !dbg !2825
  %293 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2826
  %coef_vlcs503 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %293, i32 0, i32 24, !dbg !2827
  %arrayidx504 = getelementptr inbounds [2 x %struct.CoefVLCTable*], [2 x %struct.CoefVLCTable*]* %coef_vlcs503, i64 0, i64 1, !dbg !2826
  store %struct.CoefVLCTable* %arrayidx502, %struct.CoefVLCTable** %arrayidx504, align 8, !dbg !2828
  %294 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2829
  %coef_vlc = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %294, i32 0, i32 20, !dbg !2830
  %arrayidx505 = getelementptr inbounds [2 x %struct.VLC], [2 x %struct.VLC]* %coef_vlc, i64 0, i64 0, !dbg !2829
  %295 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2831
  %run_table = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %295, i32 0, i32 21, !dbg !2832
  %arrayidx506 = getelementptr inbounds [2 x i16*], [2 x i16*]* %run_table, i64 0, i64 0, !dbg !2831
  %296 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2833
  %level_table = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %296, i32 0, i32 22, !dbg !2834
  %arrayidx507 = getelementptr inbounds [2 x float*], [2 x float*]* %level_table, i64 0, i64 0, !dbg !2833
  %297 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2835
  %int_table = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %297, i32 0, i32 23, !dbg !2836
  %arrayidx508 = getelementptr inbounds [2 x i16*], [2 x i16*]* %int_table, i64 0, i64 0, !dbg !2835
  %298 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2837
  %coef_vlcs509 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %298, i32 0, i32 24, !dbg !2838
  %arrayidx510 = getelementptr inbounds [2 x %struct.CoefVLCTable*], [2 x %struct.CoefVLCTable*]* %coef_vlcs509, i64 0, i64 0, !dbg !2837
  %299 = load %struct.CoefVLCTable*, %struct.CoefVLCTable** %arrayidx510, align 8, !dbg !2837
  %call511 = call i32 @init_coef_vlc(%struct.VLC* %arrayidx505, i16** %arrayidx506, float** %arrayidx507, i16** %arrayidx508, %struct.CoefVLCTable* %299), !dbg !2839
  store i32 %call511, i32* %ret, align 4, !dbg !2840
  %300 = load i32, i32* %ret, align 4, !dbg !2841
  %cmp512 = icmp slt i32 %300, 0, !dbg !2843
  br i1 %cmp512, label %if.then514, label %if.end515, !dbg !2844

if.then514:                                       ; preds = %if.end494
  %301 = load i32, i32* %ret, align 4, !dbg !2845
  store i32 %301, i32* %retval, align 4, !dbg !2846
  br label %return, !dbg !2846

if.end515:                                        ; preds = %if.end494
  %302 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2847
  %coef_vlc516 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %302, i32 0, i32 20, !dbg !2848
  %arrayidx517 = getelementptr inbounds [2 x %struct.VLC], [2 x %struct.VLC]* %coef_vlc516, i64 0, i64 1, !dbg !2847
  %303 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2849
  %run_table518 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %303, i32 0, i32 21, !dbg !2850
  %arrayidx519 = getelementptr inbounds [2 x i16*], [2 x i16*]* %run_table518, i64 0, i64 1, !dbg !2849
  %304 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2851
  %level_table520 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %304, i32 0, i32 22, !dbg !2852
  %arrayidx521 = getelementptr inbounds [2 x float*], [2 x float*]* %level_table520, i64 0, i64 1, !dbg !2851
  %305 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2853
  %int_table522 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %305, i32 0, i32 23, !dbg !2854
  %arrayidx523 = getelementptr inbounds [2 x i16*], [2 x i16*]* %int_table522, i64 0, i64 1, !dbg !2853
  %306 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !2855
  %coef_vlcs524 = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %306, i32 0, i32 24, !dbg !2856
  %arrayidx525 = getelementptr inbounds [2 x %struct.CoefVLCTable*], [2 x %struct.CoefVLCTable*]* %coef_vlcs524, i64 0, i64 1, !dbg !2855
  %307 = load %struct.CoefVLCTable*, %struct.CoefVLCTable** %arrayidx525, align 8, !dbg !2855
  %call526 = call i32 @init_coef_vlc(%struct.VLC* %arrayidx517, i16** %arrayidx519, float** %arrayidx521, i16** %arrayidx523, %struct.CoefVLCTable* %307), !dbg !2857
  store i32 %call526, i32* %retval, align 4, !dbg !2858
  br label %return, !dbg !2858

return:                                           ; preds = %if.end515, %if.then514, %if.then477, %if.then91, %if.then
  %308 = load i32, i32* %retval, align 4, !dbg !2859
  ret i32 %308, !dbg !2859
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @ff_wma_get_frame_len_bits(i32, i32, i32) #2

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

declare void @av_log(i8*, i32, i8*, ...) #2

declare void @ff_init_ff_sine_windows(i32) #2

; Function Attrs: nounwind
declare double @sqrt(double) #3

declare %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32) #2

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @init_coef_vlc(%struct.VLC* %vlc, i16** %prun_table, float** %plevel_table, i16** %pint_table, %struct.CoefVLCTable* %vlc_table) #0 !dbg !2860 {
entry:
  %retval = alloca i32, align 4
  %vlc.addr = alloca %struct.VLC*, align 8
  %prun_table.addr = alloca i16**, align 8
  %plevel_table.addr = alloca float**, align 8
  %pint_table.addr = alloca i16**, align 8
  %vlc_table.addr = alloca %struct.CoefVLCTable*, align 8
  %n = alloca i32, align 4
  %table_bits = alloca i8*, align 8
  %table_codes = alloca i32*, align 8
  %levels_table = alloca i16*, align 8
  %run_table = alloca i16*, align 8
  %level_table = alloca i16*, align 8
  %int_table = alloca i16*, align 8
  %flevel_table = alloca float*, align 8
  %i = alloca i32, align 4
  %l = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %level = alloca i32, align 4
  store %struct.VLC* %vlc, %struct.VLC** %vlc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc.addr, metadata !2866, metadata !1742), !dbg !2867
  store i16** %prun_table, i16*** %prun_table.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %prun_table.addr, metadata !2868, metadata !1742), !dbg !2869
  store float** %plevel_table, float*** %plevel_table.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %plevel_table.addr, metadata !2870, metadata !1742), !dbg !2871
  store i16** %pint_table, i16*** %pint_table.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %pint_table.addr, metadata !2872, metadata !1742), !dbg !2873
  store %struct.CoefVLCTable* %vlc_table, %struct.CoefVLCTable** %vlc_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CoefVLCTable** %vlc_table.addr, metadata !2874, metadata !1742), !dbg !2875
  call void @llvm.dbg.declare(metadata i32* %n, metadata !2876, metadata !1742), !dbg !2877
  %0 = load %struct.CoefVLCTable*, %struct.CoefVLCTable** %vlc_table.addr, align 8, !dbg !2878
  %n1 = getelementptr inbounds %struct.CoefVLCTable, %struct.CoefVLCTable* %0, i32 0, i32 0, !dbg !2879
  %1 = load i32, i32* %n1, align 8, !dbg !2879
  store i32 %1, i32* %n, align 4, !dbg !2877
  call void @llvm.dbg.declare(metadata i8** %table_bits, metadata !2880, metadata !1742), !dbg !2881
  %2 = load %struct.CoefVLCTable*, %struct.CoefVLCTable** %vlc_table.addr, align 8, !dbg !2882
  %huffbits = getelementptr inbounds %struct.CoefVLCTable, %struct.CoefVLCTable* %2, i32 0, i32 3, !dbg !2883
  %3 = load i8*, i8** %huffbits, align 8, !dbg !2883
  store i8* %3, i8** %table_bits, align 8, !dbg !2881
  call void @llvm.dbg.declare(metadata i32** %table_codes, metadata !2884, metadata !1742), !dbg !2885
  %4 = load %struct.CoefVLCTable*, %struct.CoefVLCTable** %vlc_table.addr, align 8, !dbg !2886
  %huffcodes = getelementptr inbounds %struct.CoefVLCTable, %struct.CoefVLCTable* %4, i32 0, i32 2, !dbg !2887
  %5 = load i32*, i32** %huffcodes, align 8, !dbg !2887
  store i32* %5, i32** %table_codes, align 8, !dbg !2885
  call void @llvm.dbg.declare(metadata i16** %levels_table, metadata !2888, metadata !1742), !dbg !2889
  %6 = load %struct.CoefVLCTable*, %struct.CoefVLCTable** %vlc_table.addr, align 8, !dbg !2890
  %levels = getelementptr inbounds %struct.CoefVLCTable, %struct.CoefVLCTable* %6, i32 0, i32 4, !dbg !2891
  %7 = load i16*, i16** %levels, align 8, !dbg !2891
  store i16* %7, i16** %levels_table, align 8, !dbg !2889
  call void @llvm.dbg.declare(metadata i16** %run_table, metadata !2892, metadata !1742), !dbg !2893
  call void @llvm.dbg.declare(metadata i16** %level_table, metadata !2894, metadata !1742), !dbg !2895
  call void @llvm.dbg.declare(metadata i16** %int_table, metadata !2896, metadata !1742), !dbg !2897
  call void @llvm.dbg.declare(metadata float** %flevel_table, metadata !2898, metadata !1742), !dbg !2899
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2900, metadata !1742), !dbg !2901
  call void @llvm.dbg.declare(metadata i32* %l, metadata !2902, metadata !1742), !dbg !2903
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2904, metadata !1742), !dbg !2905
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2906, metadata !1742), !dbg !2907
  call void @llvm.dbg.declare(metadata i32* %level, metadata !2908, metadata !1742), !dbg !2909
  %8 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !2910
  %9 = load i32, i32* %n, align 4, !dbg !2911
  %10 = load i8*, i8** %table_bits, align 8, !dbg !2912
  %11 = load i32*, i32** %table_codes, align 8, !dbg !2913
  %12 = bitcast i32* %11 to i8*, !dbg !2913
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* %8, i32 9, i32 %9, i8* %10, i32 1, i32 1, i8* %12, i32 4, i32 4, i8* null, i32 0, i32 0, i32 0), !dbg !2914
  %13 = load i32, i32* %n, align 4, !dbg !2915
  %conv = sext i32 %13 to i64, !dbg !2915
  %call2 = call i8* @av_malloc_array(i64 %conv, i64 2), !dbg !2916
  %14 = bitcast i8* %call2 to i16*, !dbg !2916
  store i16* %14, i16** %run_table, align 8, !dbg !2917
  %15 = load i32, i32* %n, align 4, !dbg !2918
  %conv3 = sext i32 %15 to i64, !dbg !2918
  %call4 = call i8* @av_malloc_array(i64 %conv3, i64 2), !dbg !2919
  %16 = bitcast i8* %call4 to i16*, !dbg !2919
  store i16* %16, i16** %level_table, align 8, !dbg !2920
  %17 = load i32, i32* %n, align 4, !dbg !2921
  %conv5 = sext i32 %17 to i64, !dbg !2921
  %call6 = call i8* @av_malloc_array(i64 %conv5, i64 4), !dbg !2922
  %18 = bitcast i8* %call6 to float*, !dbg !2922
  store float* %18, float** %flevel_table, align 8, !dbg !2923
  %19 = load i32, i32* %n, align 4, !dbg !2924
  %conv7 = sext i32 %19 to i64, !dbg !2924
  %call8 = call i8* @av_malloc_array(i64 %conv7, i64 2), !dbg !2925
  %20 = bitcast i8* %call8 to i16*, !dbg !2925
  store i16* %20, i16** %int_table, align 8, !dbg !2926
  %21 = load i16*, i16** %run_table, align 8, !dbg !2927
  %tobool = icmp ne i16* %21, null, !dbg !2927
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2929

lor.lhs.false:                                    ; preds = %entry
  %22 = load i16*, i16** %level_table, align 8, !dbg !2930
  %tobool9 = icmp ne i16* %22, null, !dbg !2930
  br i1 %tobool9, label %lor.lhs.false10, label %if.then, !dbg !2932

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %23 = load float*, float** %flevel_table, align 8, !dbg !2933
  %tobool11 = icmp ne float* %23, null, !dbg !2933
  br i1 %tobool11, label %lor.lhs.false12, label %if.then, !dbg !2935

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %24 = load i16*, i16** %int_table, align 8, !dbg !2936
  %tobool13 = icmp ne i16* %24, null, !dbg !2936
  br i1 %tobool13, label %if.end, label %if.then, !dbg !2938

if.then:                                          ; preds = %lor.lhs.false12, %lor.lhs.false10, %lor.lhs.false, %entry
  %25 = bitcast i16** %run_table to i8*, !dbg !2939
  call void @av_freep(i8* %25), !dbg !2941
  %26 = bitcast i16** %level_table to i8*, !dbg !2942
  call void @av_freep(i8* %26), !dbg !2943
  %27 = bitcast float** %flevel_table to i8*, !dbg !2944
  call void @av_freep(i8* %27), !dbg !2945
  %28 = bitcast i16** %int_table to i8*, !dbg !2946
  call void @av_freep(i8* %28), !dbg !2947
  store i32 -12, i32* %retval, align 4, !dbg !2948
  br label %return, !dbg !2948

if.end:                                           ; preds = %lor.lhs.false12
  store i32 2, i32* %i, align 4, !dbg !2949
  store i32 1, i32* %level, align 4, !dbg !2950
  store i32 0, i32* %k, align 4, !dbg !2951
  br label %while.cond, !dbg !2952

while.cond:                                       ; preds = %for.end, %if.end
  %29 = load i32, i32* %i, align 4, !dbg !2953
  %30 = load i32, i32* %n, align 4, !dbg !2955
  %cmp = icmp slt i32 %29, %30, !dbg !2956
  br i1 %cmp, label %while.body, label %while.end, !dbg !2957

while.body:                                       ; preds = %while.cond
  %31 = load i32, i32* %i, align 4, !dbg !2958
  %conv15 = trunc i32 %31 to i16, !dbg !2958
  %32 = load i32, i32* %k, align 4, !dbg !2960
  %idxprom = sext i32 %32 to i64, !dbg !2961
  %33 = load i16*, i16** %int_table, align 8, !dbg !2961
  %arrayidx = getelementptr inbounds i16, i16* %33, i64 %idxprom, !dbg !2961
  store i16 %conv15, i16* %arrayidx, align 2, !dbg !2962
  %34 = load i32, i32* %k, align 4, !dbg !2963
  %inc = add nsw i32 %34, 1, !dbg !2963
  store i32 %inc, i32* %k, align 4, !dbg !2963
  %idxprom16 = sext i32 %34 to i64, !dbg !2964
  %35 = load i16*, i16** %levels_table, align 8, !dbg !2964
  %arrayidx17 = getelementptr inbounds i16, i16* %35, i64 %idxprom16, !dbg !2964
  %36 = load i16, i16* %arrayidx17, align 2, !dbg !2964
  %conv18 = zext i16 %36 to i32, !dbg !2964
  store i32 %conv18, i32* %l, align 4, !dbg !2965
  store i32 0, i32* %j, align 4, !dbg !2966
  br label %for.cond, !dbg !2968

for.cond:                                         ; preds = %for.inc, %while.body
  %37 = load i32, i32* %j, align 4, !dbg !2969
  %38 = load i32, i32* %l, align 4, !dbg !2972
  %cmp19 = icmp slt i32 %37, %38, !dbg !2973
  br i1 %cmp19, label %for.body, label %for.end, !dbg !2974

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %j, align 4, !dbg !2975
  %conv21 = trunc i32 %39 to i16, !dbg !2975
  %40 = load i32, i32* %i, align 4, !dbg !2977
  %idxprom22 = sext i32 %40 to i64, !dbg !2978
  %41 = load i16*, i16** %run_table, align 8, !dbg !2978
  %arrayidx23 = getelementptr inbounds i16, i16* %41, i64 %idxprom22, !dbg !2978
  store i16 %conv21, i16* %arrayidx23, align 2, !dbg !2979
  %42 = load i32, i32* %level, align 4, !dbg !2980
  %conv24 = trunc i32 %42 to i16, !dbg !2980
  %43 = load i32, i32* %i, align 4, !dbg !2981
  %idxprom25 = sext i32 %43 to i64, !dbg !2982
  %44 = load i16*, i16** %level_table, align 8, !dbg !2982
  %arrayidx26 = getelementptr inbounds i16, i16* %44, i64 %idxprom25, !dbg !2982
  store i16 %conv24, i16* %arrayidx26, align 2, !dbg !2983
  %45 = load i32, i32* %level, align 4, !dbg !2984
  %conv27 = sitofp i32 %45 to float, !dbg !2984
  %46 = load i32, i32* %i, align 4, !dbg !2985
  %idxprom28 = sext i32 %46 to i64, !dbg !2986
  %47 = load float*, float** %flevel_table, align 8, !dbg !2986
  %arrayidx29 = getelementptr inbounds float, float* %47, i64 %idxprom28, !dbg !2986
  store float %conv27, float* %arrayidx29, align 4, !dbg !2987
  %48 = load i32, i32* %i, align 4, !dbg !2988
  %inc30 = add nsw i32 %48, 1, !dbg !2988
  store i32 %inc30, i32* %i, align 4, !dbg !2988
  br label %for.inc, !dbg !2989

for.inc:                                          ; preds = %for.body
  %49 = load i32, i32* %j, align 4, !dbg !2990
  %inc31 = add nsw i32 %49, 1, !dbg !2990
  store i32 %inc31, i32* %j, align 4, !dbg !2990
  br label %for.cond, !dbg !2992, !llvm.loop !2993

for.end:                                          ; preds = %for.cond
  %50 = load i32, i32* %level, align 4, !dbg !2995
  %inc32 = add nsw i32 %50, 1, !dbg !2995
  store i32 %inc32, i32* %level, align 4, !dbg !2995
  br label %while.cond, !dbg !2996, !llvm.loop !2998

while.end:                                        ; preds = %while.cond
  %51 = load i16*, i16** %run_table, align 8, !dbg !2999
  %52 = load i16**, i16*** %prun_table.addr, align 8, !dbg !3000
  store i16* %51, i16** %52, align 8, !dbg !3001
  %53 = load float*, float** %flevel_table, align 8, !dbg !3002
  %54 = load float**, float*** %plevel_table.addr, align 8, !dbg !3003
  store float* %53, float** %54, align 8, !dbg !3004
  %55 = load i16*, i16** %int_table, align 8, !dbg !3005
  %56 = load i16**, i16*** %pint_table.addr, align 8, !dbg !3006
  store i16* %55, i16** %56, align 8, !dbg !3007
  %57 = load i16*, i16** %level_table, align 8, !dbg !3008
  %58 = bitcast i16* %57 to i8*, !dbg !3008
  call void @av_free(i8* %58), !dbg !3009
  store i32 0, i32* %retval, align 4, !dbg !3010
  br label %return, !dbg !3010

return:                                           ; preds = %while.end, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !3011
  ret i32 %59, !dbg !3011
}

; Function Attrs: nounwind uwtable
define i32 @ff_wma_total_gain_to_bits(i32 %total_gain) #4 !dbg !3012 {
entry:
  %retval = alloca i32, align 4
  %total_gain.addr = alloca i32, align 4
  store i32 %total_gain, i32* %total_gain.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %total_gain.addr, metadata !3015, metadata !1742), !dbg !3016
  %0 = load i32, i32* %total_gain.addr, align 4, !dbg !3017
  %cmp = icmp slt i32 %0, 15, !dbg !3019
  br i1 %cmp, label %if.then, label %if.else, !dbg !3020

if.then:                                          ; preds = %entry
  store i32 13, i32* %retval, align 4, !dbg !3021
  br label %return, !dbg !3021

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %total_gain.addr, align 4, !dbg !3022
  %cmp1 = icmp slt i32 %1, 32, !dbg !3024
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !3025

if.then2:                                         ; preds = %if.else
  store i32 12, i32* %retval, align 4, !dbg !3026
  br label %return, !dbg !3026

if.else3:                                         ; preds = %if.else
  %2 = load i32, i32* %total_gain.addr, align 4, !dbg !3027
  %cmp4 = icmp slt i32 %2, 40, !dbg !3029
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !3030

if.then5:                                         ; preds = %if.else3
  store i32 11, i32* %retval, align 4, !dbg !3031
  br label %return, !dbg !3031

if.else6:                                         ; preds = %if.else3
  %3 = load i32, i32* %total_gain.addr, align 4, !dbg !3032
  %cmp7 = icmp slt i32 %3, 45, !dbg !3034
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !3035

if.then8:                                         ; preds = %if.else6
  store i32 10, i32* %retval, align 4, !dbg !3036
  br label %return, !dbg !3036

if.else9:                                         ; preds = %if.else6
  store i32 9, i32* %retval, align 4, !dbg !3037
  br label %return, !dbg !3037

return:                                           ; preds = %if.else9, %if.then8, %if.then5, %if.then2, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !3038
  ret i32 %4, !dbg !3038
}

; Function Attrs: nounwind uwtable
define i32 @ff_wma_end(%struct.AVCodecContext* %avctx) #4 !dbg !3039 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.WMACodecContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3040, metadata !1742), !dbg !3041
  call void @llvm.dbg.declare(metadata %struct.WMACodecContext** %s, metadata !3042, metadata !1742), !dbg !3043
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3044
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3045
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3045
  %2 = bitcast i8* %1 to %struct.WMACodecContext*, !dbg !3044
  store %struct.WMACodecContext* %2, %struct.WMACodecContext** %s, align 8, !dbg !3043
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3046, metadata !1742), !dbg !3047
  store i32 0, i32* %i, align 4, !dbg !3048
  br label %for.cond, !dbg !3050

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !3051
  %4 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !3054
  %nb_block_sizes = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %4, i32 0, i32 27, !dbg !3055
  %5 = load i32, i32* %nb_block_sizes, align 32, !dbg !3055
  %cmp = icmp slt i32 %3, %5, !dbg !3056
  br i1 %cmp, label %for.body, label %for.end, !dbg !3057

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !3058
  %idxprom = sext i32 %6 to i64, !dbg !3059
  %7 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !3059
  %mdct_ctx = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %7, i32 0, i32 45, !dbg !3060
  %arrayidx = getelementptr inbounds [5 x %struct.FFTContext], [5 x %struct.FFTContext]* %mdct_ctx, i64 0, i64 %idxprom, !dbg !3059
  call void @ff_mdct_end(%struct.FFTContext* %arrayidx), !dbg !3061
  br label %for.inc, !dbg !3061

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !3062
  %inc = add nsw i32 %8, 1, !dbg !3062
  store i32 %inc, i32* %i, align 4, !dbg !3062
  br label %for.cond, !dbg !3064, !llvm.loop !3065

for.end:                                          ; preds = %for.cond
  %9 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !3067
  %use_exp_vlc = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %9, i32 0, i32 6, !dbg !3069
  %10 = load i32, i32* %use_exp_vlc, align 4, !dbg !3069
  %tobool = icmp ne i32 %10, 0, !dbg !3067
  br i1 %tobool, label %if.then, label %if.end, !dbg !3070

if.then:                                          ; preds = %for.end
  %11 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !3071
  %exp_vlc = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %11, i32 0, i32 9, !dbg !3072
  call void @ff_free_vlc(%struct.VLC* %exp_vlc), !dbg !3073
  br label %if.end, !dbg !3073

if.end:                                           ; preds = %if.then, %for.end
  %12 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !3074
  %use_noise_coding = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %12, i32 0, i32 7, !dbg !3076
  %13 = load i32, i32* %use_noise_coding, align 32, !dbg !3076
  %tobool1 = icmp ne i32 %13, 0, !dbg !3074
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !3077

if.then2:                                         ; preds = %if.end
  %14 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !3078
  %hgain_vlc = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %14, i32 0, i32 17, !dbg !3079
  call void @ff_free_vlc(%struct.VLC* %hgain_vlc), !dbg !3080
  br label %if.end3, !dbg !3080

if.end3:                                          ; preds = %if.then2, %if.end
  store i32 0, i32* %i, align 4, !dbg !3081
  br label %for.cond4, !dbg !3083

for.cond4:                                        ; preds = %for.inc15, %if.end3
  %15 = load i32, i32* %i, align 4, !dbg !3084
  %cmp5 = icmp slt i32 %15, 2, !dbg !3087
  br i1 %cmp5, label %for.body6, label %for.end17, !dbg !3088

for.body6:                                        ; preds = %for.cond4
  %16 = load i32, i32* %i, align 4, !dbg !3089
  %idxprom7 = sext i32 %16 to i64, !dbg !3091
  %17 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !3091
  %coef_vlc = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %17, i32 0, i32 20, !dbg !3092
  %arrayidx8 = getelementptr inbounds [2 x %struct.VLC], [2 x %struct.VLC]* %coef_vlc, i64 0, i64 %idxprom7, !dbg !3091
  call void @ff_free_vlc(%struct.VLC* %arrayidx8), !dbg !3093
  %18 = load i32, i32* %i, align 4, !dbg !3094
  %idxprom9 = sext i32 %18 to i64, !dbg !3095
  %19 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !3095
  %run_table = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %19, i32 0, i32 21, !dbg !3096
  %arrayidx10 = getelementptr inbounds [2 x i16*], [2 x i16*]* %run_table, i64 0, i64 %idxprom9, !dbg !3095
  %20 = bitcast i16** %arrayidx10 to i8*, !dbg !3097
  call void @av_freep(i8* %20), !dbg !3098
  %21 = load i32, i32* %i, align 4, !dbg !3099
  %idxprom11 = sext i32 %21 to i64, !dbg !3100
  %22 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !3100
  %level_table = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %22, i32 0, i32 22, !dbg !3101
  %arrayidx12 = getelementptr inbounds [2 x float*], [2 x float*]* %level_table, i64 0, i64 %idxprom11, !dbg !3100
  %23 = bitcast float** %arrayidx12 to i8*, !dbg !3102
  call void @av_freep(i8* %23), !dbg !3103
  %24 = load i32, i32* %i, align 4, !dbg !3104
  %idxprom13 = sext i32 %24 to i64, !dbg !3105
  %25 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !3105
  %int_table = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %25, i32 0, i32 23, !dbg !3106
  %arrayidx14 = getelementptr inbounds [2 x i16*], [2 x i16*]* %int_table, i64 0, i64 %idxprom13, !dbg !3105
  %26 = bitcast i16** %arrayidx14 to i8*, !dbg !3107
  call void @av_freep(i8* %26), !dbg !3108
  br label %for.inc15, !dbg !3109

for.inc15:                                        ; preds = %for.body6
  %27 = load i32, i32* %i, align 4, !dbg !3110
  %inc16 = add nsw i32 %27, 1, !dbg !3110
  store i32 %inc16, i32* %i, align 4, !dbg !3110
  br label %for.cond4, !dbg !3112, !llvm.loop !3113

for.end17:                                        ; preds = %for.cond4
  %28 = load %struct.WMACodecContext*, %struct.WMACodecContext** %s, align 8, !dbg !3115
  %fdsp = getelementptr inbounds %struct.WMACodecContext, %struct.WMACodecContext* %28, i32 0, i32 59, !dbg !3116
  %29 = bitcast %struct.AVFloatDSPContext** %fdsp to i8*, !dbg !3117
  call void @av_freep(i8* %29), !dbg !3118
  ret i32 0, !dbg !3119
}

declare void @ff_mdct_end(%struct.FFTContext*) #2

declare void @ff_free_vlc(%struct.VLC*) #2

declare void @av_freep(i8*) #2

; Function Attrs: nounwind uwtable
define i32 @ff_wma_get_large_val(%struct.GetBitContext* %gb) #4 !dbg !3120 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %n_bits = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3124, metadata !1742), !dbg !3125
  call void @llvm.dbg.declare(metadata i32* %n_bits, metadata !3126, metadata !1742), !dbg !3127
  store i32 8, i32* %n_bits, align 4, !dbg !3127
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3128
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !3130
  %tobool = icmp ne i32 %call, 0, !dbg !3130
  br i1 %tobool, label %if.then, label %if.end10, !dbg !3131

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %n_bits, align 4, !dbg !3132
  %add = add nsw i32 %1, 8, !dbg !3132
  store i32 %add, i32* %n_bits, align 4, !dbg !3132
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3134
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !3136
  %tobool2 = icmp ne i32 %call1, 0, !dbg !3136
  br i1 %tobool2, label %if.then3, label %if.end9, !dbg !3137

if.then3:                                         ; preds = %if.then
  %3 = load i32, i32* %n_bits, align 4, !dbg !3138
  %add4 = add nsw i32 %3, 8, !dbg !3138
  store i32 %add4, i32* %n_bits, align 4, !dbg !3138
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3140
  %call5 = call i32 @get_bits1(%struct.GetBitContext* %4), !dbg !3142
  %tobool6 = icmp ne i32 %call5, 0, !dbg !3142
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !3143

if.then7:                                         ; preds = %if.then3
  %5 = load i32, i32* %n_bits, align 4, !dbg !3144
  %add8 = add nsw i32 %5, 7, !dbg !3144
  store i32 %add8, i32* %n_bits, align 4, !dbg !3144
  br label %if.end, !dbg !3145

if.end:                                           ; preds = %if.then7, %if.then3
  br label %if.end9, !dbg !3146

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end10, !dbg !3147

if.end10:                                         ; preds = %if.end9, %entry
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3148
  %7 = load i32, i32* %n_bits, align 4, !dbg !3149
  %call11 = call i32 @get_bits_long(%struct.GetBitContext* %6, i32 %7), !dbg !3150
  ret i32 %call11, !dbg !3151
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #5 !dbg !3152 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3153, metadata !1742), !dbg !3154
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3155, metadata !1742), !dbg !3156
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3157
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3158
  %1 = load i32, i32* %index1, align 8, !dbg !3158
  store i32 %1, i32* %index, align 4, !dbg !3156
  call void @llvm.dbg.declare(metadata i8* %result, metadata !3159, metadata !1742), !dbg !3160
  %2 = load i32, i32* %index, align 4, !dbg !3161
  %shr = lshr i32 %2, 3, !dbg !3162
  %idxprom = zext i32 %shr to i64, !dbg !3163
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3163
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !3164
  %4 = load i8*, i8** %buffer, align 8, !dbg !3164
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !3163
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3163
  store i8 %5, i8* %result, align 1, !dbg !3160
  %6 = load i32, i32* %index, align 4, !dbg !3165
  %and = and i32 %6, 7, !dbg !3166
  %7 = load i8, i8* %result, align 1, !dbg !3167
  %conv = zext i8 %7 to i32, !dbg !3167
  %shl = shl i32 %conv, %and, !dbg !3167
  %conv2 = trunc i32 %shl to i8, !dbg !3167
  store i8 %conv2, i8* %result, align 1, !dbg !3167
  %8 = load i8, i8* %result, align 1, !dbg !3168
  %conv3 = zext i8 %8 to i32, !dbg !3168
  %shr4 = ashr i32 %conv3, 7, !dbg !3168
  %conv5 = trunc i32 %shr4 to i8, !dbg !3168
  store i8 %conv5, i8* %result, align 1, !dbg !3168
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3169
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !3171
  %10 = load i32, i32* %index6, align 8, !dbg !3171
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3172
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !3173
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3173
  %cmp = icmp slt i32 %10, %12, !dbg !3174
  br i1 %cmp, label %if.then, label %if.end, !dbg !3175

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !3176
  %inc = add i32 %13, 1, !dbg !3176
  store i32 %inc, i32* %index, align 4, !dbg !3176
  br label %if.end, !dbg !3177

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !3178
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3179
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !3180
  store i32 %14, i32* %index8, align 8, !dbg !3181
  %16 = load i8, i8* %result, align 1, !dbg !3182
  %conv9 = zext i8 %16 to i32, !dbg !3182
  ret i32 %conv9, !dbg !3183
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #5 !dbg !3184 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3187, metadata !1742), !dbg !3188
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3189, metadata !1742), !dbg !3190
  %0 = load i32, i32* %n.addr, align 4, !dbg !3191
  %tobool = icmp ne i32 %0, 0, !dbg !3191
  br i1 %tobool, label %if.else, label %if.then, !dbg !3193

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3194
  br label %return, !dbg !3194

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !3196
  %cmp = icmp sle i32 %1, 25, !dbg !3198
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !3199

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3200
  %3 = load i32, i32* %n.addr, align 4, !dbg !3202
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !3203
  store i32 %call, i32* %retval, align 4, !dbg !3204
  br label %return, !dbg !3204

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3205, metadata !1742), !dbg !3207
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3208
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !3209
  %5 = load i32, i32* %n.addr, align 4, !dbg !3210
  %sub = sub nsw i32 %5, 16, !dbg !3211
  %shl = shl i32 %call3, %sub, !dbg !3212
  store i32 %shl, i32* %ret, align 4, !dbg !3207
  %6 = load i32, i32* %ret, align 4, !dbg !3213
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3214
  %8 = load i32, i32* %n.addr, align 4, !dbg !3215
  %sub4 = sub nsw i32 %8, 16, !dbg !3216
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !3217
  %or = or i32 %6, %call5, !dbg !3218
  store i32 %or, i32* %retval, align 4, !dbg !3219
  br label %return, !dbg !3219

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !3220
  ret i32 %9, !dbg !3220
}

; Function Attrs: nounwind uwtable
define i32 @ff_wma_run_level_decode(%struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb, %struct.VLC* %vlc, float* %level_table, i16* %run_table, i32 %version, float* %ptr, i32 %offset, i32 %num_coefs, i32 %block_len, i32 %frame_len_bits, i32 %coef_nb_bits) #4 !dbg !3221 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !3225, metadata !1742), !dbg !3230
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !3225, metadata !1742), !dbg !3245
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !3225, metadata !1742), !dbg !3248
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3250, metadata !1742), !dbg !3251
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3252, metadata !1742), !dbg !3253
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3254, metadata !1742), !dbg !3255
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3256, metadata !1742), !dbg !3257
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3258, metadata !1742), !dbg !3259
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3260, metadata !1742), !dbg !3261
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3262, metadata !1742), !dbg !3263
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3264, metadata !1742), !dbg !3265
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3266, metadata !1742), !dbg !3267
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3268, metadata !1742), !dbg !3269
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3270, metadata !1742), !dbg !3271
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %vlc.addr = alloca %struct.VLC*, align 8
  %level_table.addr = alloca float*, align 8
  %run_table.addr = alloca i16*, align 8
  %version.addr = alloca i32, align 4
  %ptr.addr = alloca float*, align 8
  %offset.addr = alloca i32, align 4
  %num_coefs.addr = alloca i32, align 4
  %block_len.addr = alloca i32, align 4
  %frame_len_bits.addr = alloca i32, align 4
  %coef_nb_bits.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %level = alloca i32, align 4
  %sign = alloca i32, align 4
  %ilvl = alloca i32*, align 8
  %iptr = alloca i32*, align 8
  %coef_mask = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3272, metadata !1742), !dbg !3273
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3274, metadata !1742), !dbg !3275
  store %struct.VLC* %vlc, %struct.VLC** %vlc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc.addr, metadata !3276, metadata !1742), !dbg !3277
  store float* %level_table, float** %level_table.addr, align 8
  call void @llvm.dbg.declare(metadata float** %level_table.addr, metadata !3278, metadata !1742), !dbg !3279
  store i16* %run_table, i16** %run_table.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %run_table.addr, metadata !3280, metadata !1742), !dbg !3281
  store i32 %version, i32* %version.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %version.addr, metadata !3282, metadata !1742), !dbg !3283
  store float* %ptr, float** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ptr.addr, metadata !3284, metadata !1742), !dbg !3285
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !3286, metadata !1742), !dbg !3287
  store i32 %num_coefs, i32* %num_coefs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_coefs.addr, metadata !3288, metadata !1742), !dbg !3289
  store i32 %block_len, i32* %block_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %block_len.addr, metadata !3290, metadata !1742), !dbg !3291
  store i32 %frame_len_bits, i32* %frame_len_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame_len_bits.addr, metadata !3292, metadata !1742), !dbg !3293
  store i32 %coef_nb_bits, i32* %coef_nb_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coef_nb_bits.addr, metadata !3294, metadata !1742), !dbg !3295
  call void @llvm.dbg.declare(metadata i32* %code, metadata !3296, metadata !1742), !dbg !3297
  call void @llvm.dbg.declare(metadata i32* %level, metadata !3298, metadata !1742), !dbg !3299
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !3300, metadata !1742), !dbg !3301
  call void @llvm.dbg.declare(metadata i32** %ilvl, metadata !3302, metadata !1742), !dbg !3303
  %0 = load float*, float** %level_table.addr, align 8, !dbg !3304
  %1 = bitcast float* %0 to i32*, !dbg !3305
  store i32* %1, i32** %ilvl, align 8, !dbg !3303
  call void @llvm.dbg.declare(metadata i32** %iptr, metadata !3306, metadata !1742), !dbg !3307
  %2 = load float*, float** %ptr.addr, align 8, !dbg !3308
  %3 = bitcast float* %2 to i32*, !dbg !3309
  store i32* %3, i32** %iptr, align 8, !dbg !3307
  call void @llvm.dbg.declare(metadata i32* %coef_mask, metadata !3310, metadata !1742), !dbg !3312
  %4 = load i32, i32* %block_len.addr, align 4, !dbg !3313
  %sub = sub nsw i32 %4, 1, !dbg !3314
  store i32 %sub, i32* %coef_mask, align 4, !dbg !3312
  br label %for.cond, !dbg !3315

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %offset.addr, align 4, !dbg !3316
  %6 = load i32, i32* %num_coefs.addr, align 4, !dbg !3318
  %cmp = icmp slt i32 %5, %6, !dbg !3319
  br i1 %cmp, label %for.body, label %for.end, !dbg !3320

for.body:                                         ; preds = %for.cond
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3321
  %8 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !3322
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %8, i32 0, i32 1, !dbg !3323
  %9 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !3323
  store %struct.GetBitContext* %7, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3324
  store [2 x i16]* %9, [2 x i16]** %table.addr.i, align 8, !dbg !3324
  store i32 9, i32* %bits.addr.i, align 4, !dbg !3324
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !3324
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3325
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %10, i32 0, i32 2, !dbg !3326
  %11 = load i32, i32* %index.i, align 8, !dbg !3326
  store i32 %11, i32* %re_index.i, align 4, !dbg !3261
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3327
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 4, !dbg !3328
  %13 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !3328
  store i32 %13, i32* %re_size_plus8.i, align 4, !dbg !3265
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3329
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %14, i32 0, i32 0, !dbg !3330
  %15 = load i8*, i8** %buffer.i, align 8, !dbg !3330
  %16 = load i32, i32* %re_index.i, align 4, !dbg !3331
  %shr.i = lshr i32 %16, 3, !dbg !3332
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !3333
  %add.ptr.i = getelementptr inbounds i8, i8* %15, i64 %idx.ext.i, !dbg !3333
  %17 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !3334
  %l.i = bitcast %union.unaligned_32* %17 to i32*, !dbg !3334
  %18 = load i32, i32* %l.i, align 1, !dbg !3334
  store i32 %18, i32* %x.addr.i.i, align 4, !dbg !3335
  %19 = load i32, i32* %x.addr.i.i, align 4, !dbg !3336
  %shl.i.i = shl i32 %19, 8, !dbg !3337
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !3338
  %20 = load i32, i32* %x.addr.i.i, align 4, !dbg !3339
  %shr.i.i = lshr i32 %20, 8, !dbg !3340
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !3341
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !3342
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !3343
  %21 = load i32, i32* %x.addr.i.i, align 4, !dbg !3344
  %shr3.i.i = lshr i32 %21, 16, !dbg !3345
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !3346
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !3347
  %22 = load i32, i32* %x.addr.i.i, align 4, !dbg !3348
  %shr6.i.i = lshr i32 %22, 16, !dbg !3349
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !3350
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !3351
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !3352
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !3353
  %23 = load i32, i32* %re_index.i, align 4, !dbg !3354
  %and.i = and i32 %23, 7, !dbg !3355
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !3356
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !3357
  %24 = load i32, i32* %re_cache.i, align 4, !dbg !3358
  %25 = load i32, i32* %bits.addr.i, align 4, !dbg !3360
  %conv.i = trunc i32 %25 to i8, !dbg !3360
  %call2.i = call i32 @NEG_USR32(i32 %24, i8 signext %conv.i) #6, !dbg !3361
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !3362
  %26 = load i32, i32* %index1.i, align 4, !dbg !3363
  %idxprom.i = zext i32 %26 to i64, !dbg !3364
  %27 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3364
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %27, i64 %idxprom.i, !dbg !3364
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !3364
  %28 = load i16, i16* %arrayidx3.i, align 2, !dbg !3364
  %conv4.i = sext i16 %28 to i32, !dbg !3364
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !3365
  %29 = load i32, i32* %index1.i, align 4, !dbg !3366
  %idxprom5.i = zext i32 %29 to i64, !dbg !3367
  %30 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3367
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %30, i64 %idxprom5.i, !dbg !3367
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !3367
  %31 = load i16, i16* %arrayidx7.i, align 2, !dbg !3367
  %conv8.i = sext i16 %31 to i32, !dbg !3367
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !3368
  %32 = load i32, i32* %max_depth.addr.i, align 4, !dbg !3369
  %cmp.i = icmp sgt i32 %32, 1, !dbg !3370
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !3371

land.lhs.true.i:                                  ; preds = %for.body
  %33 = load i32, i32* %n.i, align 4, !dbg !3372
  %cmp10.i = icmp slt i32 %33, 0, !dbg !3374
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !3375

if.then.i:                                        ; preds = %land.lhs.true.i
  %34 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3376
  %35 = load i32, i32* %re_index.i, align 4, !dbg !3378
  %36 = load i32, i32* %bits.addr.i, align 4, !dbg !3379
  %add.i = add i32 %35, %36, !dbg !3380
  %cmp12.i = icmp ugt i32 %34, %add.i, !dbg !3381
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !3382

cond.true.i:                                      ; preds = %if.then.i
  %37 = load i32, i32* %re_index.i, align 4, !dbg !3383
  %38 = load i32, i32* %bits.addr.i, align 4, !dbg !3385
  %add14.i = add i32 %37, %38, !dbg !3386
  br label %cond.end.i, !dbg !3387

cond.false.i:                                     ; preds = %if.then.i
  %39 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3388
  br label %cond.end.i, !dbg !3390

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %39, %cond.false.i ], !dbg !3391
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !3392
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3393
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %40, i32 0, i32 0, !dbg !3394
  %41 = load i8*, i8** %buffer15.i, align 8, !dbg !3394
  %42 = load i32, i32* %re_index.i, align 4, !dbg !3395
  %shr16.i = lshr i32 %42, 3, !dbg !3396
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !3397
  %add.ptr18.i = getelementptr inbounds i8, i8* %41, i64 %idx.ext17.i, !dbg !3397
  %43 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !3398
  %l19.i = bitcast %union.unaligned_32* %43 to i32*, !dbg !3398
  %44 = load i32, i32* %l19.i, align 1, !dbg !3398
  store i32 %44, i32* %x.addr.i81.i, align 4, !dbg !3399
  %45 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3400
  %shl.i82.i = shl i32 %45, 8, !dbg !3401
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !3402
  %46 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3403
  %shr.i84.i = lshr i32 %46, 8, !dbg !3404
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !3405
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !3406
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !3407
  %47 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3408
  %shr3.i88.i = lshr i32 %47, 16, !dbg !3409
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !3410
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !3411
  %48 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3412
  %shr6.i91.i = lshr i32 %48, 16, !dbg !3413
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !3414
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !3415
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !3416
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !3417
  %49 = load i32, i32* %re_index.i, align 4, !dbg !3418
  %and21.i = and i32 %49, 7, !dbg !3419
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !3420
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !3421
  %50 = load i32, i32* %n.i, align 4, !dbg !3422
  %sub.i = sub nsw i32 0, %50, !dbg !3423
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !3424
  %51 = load i32, i32* %re_cache.i, align 4, !dbg !3425
  %52 = load i32, i32* %nb_bits.i, align 4, !dbg !3426
  %conv23.i = trunc i32 %52 to i8, !dbg !3426
  %call24.i = call i32 @NEG_USR32(i32 %51, i8 signext %conv23.i) #6, !dbg !3427
  %53 = load i32, i32* %code.i, align 4, !dbg !3429
  %add25.i = add i32 %call24.i, %53, !dbg !3430
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !3431
  %54 = load i32, i32* %index1.i, align 4, !dbg !3432
  %idxprom26.i = zext i32 %54 to i64, !dbg !3433
  %55 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3433
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %55, i64 %idxprom26.i, !dbg !3433
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !3433
  %56 = load i16, i16* %arrayidx28.i, align 2, !dbg !3433
  %conv29.i = sext i16 %56 to i32, !dbg !3433
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !3434
  %57 = load i32, i32* %index1.i, align 4, !dbg !3435
  %idxprom30.i = zext i32 %57 to i64, !dbg !3436
  %58 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3436
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %58, i64 %idxprom30.i, !dbg !3436
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !3436
  %59 = load i16, i16* %arrayidx32.i, align 2, !dbg !3436
  %conv33.i = sext i16 %59 to i32, !dbg !3436
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !3437
  %60 = load i32, i32* %max_depth.addr.i, align 4, !dbg !3438
  %cmp34.i = icmp sgt i32 %60, 2, !dbg !3439
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !3440

land.lhs.true36.i:                                ; preds = %cond.end.i
  %61 = load i32, i32* %n.i, align 4, !dbg !3441
  %cmp37.i = icmp slt i32 %61, 0, !dbg !3443
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !3444

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %62 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3445
  %63 = load i32, i32* %re_index.i, align 4, !dbg !3447
  %64 = load i32, i32* %nb_bits.i, align 4, !dbg !3448
  %add40.i = add i32 %63, %64, !dbg !3449
  %cmp41.i = icmp ugt i32 %62, %add40.i, !dbg !3450
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !3451

cond.true43.i:                                    ; preds = %if.then39.i
  %65 = load i32, i32* %re_index.i, align 4, !dbg !3452
  %66 = load i32, i32* %nb_bits.i, align 4, !dbg !3454
  %add44.i = add i32 %65, %66, !dbg !3455
  br label %cond.end46.i, !dbg !3456

cond.false45.i:                                   ; preds = %if.then39.i
  %67 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3457
  br label %cond.end46.i, !dbg !3459

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %67, %cond.false45.i ], !dbg !3460
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !3461
  %68 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3462
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %68, i32 0, i32 0, !dbg !3463
  %69 = load i8*, i8** %buffer48.i, align 8, !dbg !3463
  %70 = load i32, i32* %re_index.i, align 4, !dbg !3464
  %shr49.i = lshr i32 %70, 3, !dbg !3465
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !3466
  %add.ptr51.i = getelementptr inbounds i8, i8* %69, i64 %idx.ext50.i, !dbg !3466
  %71 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !3467
  %l52.i = bitcast %union.unaligned_32* %71 to i32*, !dbg !3467
  %72 = load i32, i32* %l52.i, align 1, !dbg !3467
  store i32 %72, i32* %x.addr.i96.i, align 4, !dbg !3468
  %73 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3469
  %shl.i97.i = shl i32 %73, 8, !dbg !3470
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !3471
  %74 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3472
  %shr.i99.i = lshr i32 %74, 8, !dbg !3473
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !3474
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !3475
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !3476
  %75 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3477
  %shr3.i103.i = lshr i32 %75, 16, !dbg !3478
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !3479
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !3480
  %76 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3481
  %shr6.i106.i = lshr i32 %76, 16, !dbg !3482
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !3483
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !3484
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !3485
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !3486
  %77 = load i32, i32* %re_index.i, align 4, !dbg !3487
  %and54.i = and i32 %77, 7, !dbg !3488
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !3489
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !3490
  %78 = load i32, i32* %n.i, align 4, !dbg !3491
  %sub56.i = sub nsw i32 0, %78, !dbg !3492
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !3493
  %79 = load i32, i32* %re_cache.i, align 4, !dbg !3494
  %80 = load i32, i32* %nb_bits.i, align 4, !dbg !3495
  %conv57.i = trunc i32 %80 to i8, !dbg !3495
  %call58.i = call i32 @NEG_USR32(i32 %79, i8 signext %conv57.i) #6, !dbg !3496
  %81 = load i32, i32* %code.i, align 4, !dbg !3498
  %add59.i = add i32 %call58.i, %81, !dbg !3499
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !3500
  %82 = load i32, i32* %index1.i, align 4, !dbg !3501
  %idxprom60.i = zext i32 %82 to i64, !dbg !3502
  %83 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3502
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %83, i64 %idxprom60.i, !dbg !3502
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !3502
  %84 = load i16, i16* %arrayidx62.i, align 2, !dbg !3502
  %conv63.i = sext i16 %84 to i32, !dbg !3502
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !3503
  %85 = load i32, i32* %index1.i, align 4, !dbg !3504
  %idxprom64.i = zext i32 %85 to i64, !dbg !3505
  %86 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3505
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %86, i64 %idxprom64.i, !dbg !3505
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !3505
  %87 = load i16, i16* %arrayidx66.i, align 2, !dbg !3505
  %conv67.i = sext i16 %87 to i32, !dbg !3505
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !3506
  br label %if.end.i, !dbg !3507

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !3508

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body
  %88 = load i32, i32* %n.i, align 4, !dbg !3510
  %89 = load i32, i32* %re_cache.i, align 4, !dbg !3513
  %shl70.i = shl i32 %89, %88, !dbg !3513
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !3513
  %90 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3514
  %91 = load i32, i32* %re_index.i, align 4, !dbg !3515
  %92 = load i32, i32* %n.i, align 4, !dbg !3516
  %add71.i = add i32 %91, %92, !dbg !3517
  %cmp72.i = icmp ugt i32 %90, %add71.i, !dbg !3518
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !3519

cond.true74.i:                                    ; preds = %if.end68.i
  %93 = load i32, i32* %re_index.i, align 4, !dbg !3520
  %94 = load i32, i32* %n.i, align 4, !dbg !3522
  %add75.i = add i32 %93, %94, !dbg !3523
  br label %get_vlc2.exit, !dbg !3524

cond.false76.i:                                   ; preds = %if.end68.i
  %95 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3525
  br label %get_vlc2.exit, !dbg !3527

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %95, %cond.false76.i ], !dbg !3528
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !3530
  %96 = load i32, i32* %re_index.i, align 4, !dbg !3531
  %97 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3532
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %97, i32 0, i32 2, !dbg !3533
  store i32 %96, i32* %index80.i, align 8, !dbg !3534
  %98 = load i32, i32* %code.i, align 4, !dbg !3535
  store i32 %98, i32* %code, align 4, !dbg !3536
  %99 = load i32, i32* %code, align 4, !dbg !3537
  %cmp1 = icmp sgt i32 %99, 1, !dbg !3539
  br i1 %cmp1, label %if.then, label %if.else, !dbg !3540

if.then:                                          ; preds = %get_vlc2.exit
  %100 = load i32, i32* %code, align 4, !dbg !3541
  %idxprom = sext i32 %100 to i64, !dbg !3543
  %101 = load i16*, i16** %run_table.addr, align 8, !dbg !3543
  %arrayidx = getelementptr inbounds i16, i16* %101, i64 %idxprom, !dbg !3543
  %102 = load i16, i16* %arrayidx, align 2, !dbg !3543
  %conv = zext i16 %102 to i32, !dbg !3543
  %103 = load i32, i32* %offset.addr, align 4, !dbg !3544
  %add = add nsw i32 %103, %conv, !dbg !3544
  store i32 %add, i32* %offset.addr, align 4, !dbg !3544
  %104 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3545
  %call2 = call i32 @get_bits1(%struct.GetBitContext* %104), !dbg !3546
  %sub3 = sub i32 %call2, 1, !dbg !3547
  store i32 %sub3, i32* %sign, align 4, !dbg !3548
  %105 = load i32, i32* %code, align 4, !dbg !3549
  %idxprom4 = sext i32 %105 to i64, !dbg !3550
  %106 = load i32*, i32** %ilvl, align 8, !dbg !3550
  %arrayidx5 = getelementptr inbounds i32, i32* %106, i64 %idxprom4, !dbg !3550
  %107 = load i32, i32* %arrayidx5, align 4, !dbg !3550
  %108 = load i32, i32* %sign, align 4, !dbg !3551
  %and = and i32 %108, -2147483648, !dbg !3552
  %xor = xor i32 %107, %and, !dbg !3553
  %109 = load i32, i32* %offset.addr, align 4, !dbg !3554
  %110 = load i32, i32* %coef_mask, align 4, !dbg !3555
  %and6 = and i32 %109, %110, !dbg !3556
  %idxprom7 = zext i32 %and6 to i64, !dbg !3557
  %111 = load i32*, i32** %iptr, align 8, !dbg !3557
  %arrayidx8 = getelementptr inbounds i32, i32* %111, i64 %idxprom7, !dbg !3557
  store i32 %xor, i32* %arrayidx8, align 4, !dbg !3558
  br label %if.end48, !dbg !3559

if.else:                                          ; preds = %get_vlc2.exit
  %112 = load i32, i32* %code, align 4, !dbg !3560
  %cmp9 = icmp eq i32 %112, 1, !dbg !3563
  br i1 %cmp9, label %if.then11, label %if.else12, !dbg !3560

if.then11:                                        ; preds = %if.else
  br label %for.end, !dbg !3564

if.else12:                                        ; preds = %if.else
  %113 = load i32, i32* %version.addr, align 4, !dbg !3566
  %tobool = icmp ne i32 %113, 0, !dbg !3566
  br i1 %tobool, label %if.else17, label %if.then13, !dbg !3569

if.then13:                                        ; preds = %if.else12
  %114 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3570
  %115 = load i32, i32* %coef_nb_bits.addr, align 4, !dbg !3572
  %call14 = call i32 @get_bits(%struct.GetBitContext* %114, i32 %115), !dbg !3573
  store i32 %call14, i32* %level, align 4, !dbg !3574
  %116 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3575
  %117 = load i32, i32* %frame_len_bits.addr, align 4, !dbg !3576
  %call15 = call i32 @get_bits(%struct.GetBitContext* %116, i32 %117), !dbg !3577
  %118 = load i32, i32* %offset.addr, align 4, !dbg !3578
  %add16 = add i32 %118, %call15, !dbg !3578
  store i32 %add16, i32* %offset.addr, align 4, !dbg !3578
  br label %if.end38, !dbg !3579

if.else17:                                        ; preds = %if.else12
  %119 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3580
  %call18 = call i32 @ff_wma_get_large_val(%struct.GetBitContext* %119), !dbg !3582
  store i32 %call18, i32* %level, align 4, !dbg !3583
  %120 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3584
  %call19 = call i32 @get_bits1(%struct.GetBitContext* %120), !dbg !3586
  %tobool20 = icmp ne i32 %call19, 0, !dbg !3586
  br i1 %tobool20, label %if.then21, label %if.end37, !dbg !3587

if.then21:                                        ; preds = %if.else17
  %121 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3588
  %call22 = call i32 @get_bits1(%struct.GetBitContext* %121), !dbg !3591
  %tobool23 = icmp ne i32 %call22, 0, !dbg !3591
  br i1 %tobool23, label %if.then24, label %if.else32, !dbg !3592

if.then24:                                        ; preds = %if.then21
  %122 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3593
  %call25 = call i32 @get_bits1(%struct.GetBitContext* %122), !dbg !3596
  %tobool26 = icmp ne i32 %call25, 0, !dbg !3596
  br i1 %tobool26, label %if.then27, label %if.else28, !dbg !3597

if.then27:                                        ; preds = %if.then24
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3598
  %124 = bitcast %struct.AVCodecContext* %123 to i8*, !dbg !3598
  call void (i8*, i32, i8*, ...) @av_log(i8* %124, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0)), !dbg !3600
  store i32 -1, i32* %retval, align 4, !dbg !3601
  br label %return, !dbg !3601

if.else28:                                        ; preds = %if.then24
  %125 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3602
  %126 = load i32, i32* %frame_len_bits.addr, align 4, !dbg !3603
  %call29 = call i32 @get_bits(%struct.GetBitContext* %125, i32 %126), !dbg !3604
  %add30 = add i32 %call29, 4, !dbg !3605
  %127 = load i32, i32* %offset.addr, align 4, !dbg !3606
  %add31 = add i32 %127, %add30, !dbg !3606
  store i32 %add31, i32* %offset.addr, align 4, !dbg !3606
  br label %if.end

if.end:                                           ; preds = %if.else28
  br label %if.end36, !dbg !3607

if.else32:                                        ; preds = %if.then21
  %128 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3608
  %call33 = call i32 @get_bits(%struct.GetBitContext* %128, i32 2), !dbg !3609
  %add34 = add i32 %call33, 1, !dbg !3610
  %129 = load i32, i32* %offset.addr, align 4, !dbg !3611
  %add35 = add i32 %129, %add34, !dbg !3611
  store i32 %add35, i32* %offset.addr, align 4, !dbg !3611
  br label %if.end36

if.end36:                                         ; preds = %if.else32, %if.end
  br label %if.end37, !dbg !3612

if.end37:                                         ; preds = %if.end36, %if.else17
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then13
  %130 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3613
  %call39 = call i32 @get_bits1(%struct.GetBitContext* %130), !dbg !3614
  %sub40 = sub i32 %call39, 1, !dbg !3615
  store i32 %sub40, i32* %sign, align 4, !dbg !3616
  %131 = load i32, i32* %level, align 4, !dbg !3617
  %132 = load i32, i32* %sign, align 4, !dbg !3618
  %xor41 = xor i32 %131, %132, !dbg !3619
  %133 = load i32, i32* %sign, align 4, !dbg !3620
  %sub42 = sub nsw i32 %xor41, %133, !dbg !3621
  %conv43 = sitofp i32 %sub42 to float, !dbg !3622
  %134 = load i32, i32* %offset.addr, align 4, !dbg !3623
  %135 = load i32, i32* %coef_mask, align 4, !dbg !3624
  %and44 = and i32 %134, %135, !dbg !3625
  %idxprom45 = zext i32 %and44 to i64, !dbg !3626
  %136 = load float*, float** %ptr.addr, align 8, !dbg !3626
  %arrayidx46 = getelementptr inbounds float, float* %136, i64 %idxprom45, !dbg !3626
  store float %conv43, float* %arrayidx46, align 4, !dbg !3627
  br label %if.end47

if.end47:                                         ; preds = %if.end38
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then
  br label %for.inc, !dbg !3628

for.inc:                                          ; preds = %if.end48
  %137 = load i32, i32* %offset.addr, align 4, !dbg !3629
  %inc = add nsw i32 %137, 1, !dbg !3629
  store i32 %inc, i32* %offset.addr, align 4, !dbg !3629
  br label %for.cond, !dbg !3631, !llvm.loop !3632

for.end:                                          ; preds = %if.then11, %for.cond
  %138 = load i32, i32* %offset.addr, align 4, !dbg !3633
  %139 = load i32, i32* %num_coefs.addr, align 4, !dbg !3635
  %cmp49 = icmp sgt i32 %138, %139, !dbg !3636
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !3637

if.then51:                                        ; preds = %for.end
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3638
  %141 = bitcast %struct.AVCodecContext* %140 to i8*, !dbg !3638
  %142 = load i32, i32* %offset.addr, align 4, !dbg !3640
  %143 = load i32, i32* %num_coefs.addr, align 4, !dbg !3641
  call void (i8*, i32, i8*, ...) @av_log(i8* %141, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0), i32 %142, i32 %143), !dbg !3642
  store i32 -1, i32* %retval, align 4, !dbg !3643
  br label %return, !dbg !3643

if.end52:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !3644
  br label %return, !dbg !3644

return:                                           ; preds = %if.end52, %if.then51, %if.then27
  %144 = load i32, i32* %retval, align 4, !dbg !3645
  ret i32 %144, !dbg !3645
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !3646 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3225, metadata !1742), !dbg !3647
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3649, metadata !1742), !dbg !3650
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3651, metadata !1742), !dbg !3652
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !3653, metadata !1742), !dbg !3654
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !3655, metadata !1742), !dbg !3656
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3657
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3658
  %1 = load i32, i32* %index, align 8, !dbg !3658
  store i32 %1, i32* %re_index, align 4, !dbg !3656
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !3659, metadata !1742), !dbg !3660
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !3661, metadata !1742), !dbg !3662
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3663
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !3664
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3664
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !3662
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3665
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !3666
  %5 = load i8*, i8** %buffer, align 8, !dbg !3666
  %6 = load i32, i32* %re_index, align 4, !dbg !3667
  %shr = lshr i32 %6, 3, !dbg !3668
  %idx.ext = zext i32 %shr to i64, !dbg !3669
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !3669
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !3670
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !3670
  %8 = load i32, i32* %l, align 1, !dbg !3670
  store i32 %8, i32* %x.addr.i, align 4, !dbg !3671
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !3672
  %shl.i = shl i32 %9, 8, !dbg !3673
  %and.i = and i32 %shl.i, 65280, !dbg !3674
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !3675
  %shr.i = lshr i32 %10, 8, !dbg !3676
  %and1.i = and i32 %shr.i, 255, !dbg !3677
  %or.i = or i32 %and.i, %and1.i, !dbg !3678
  %shl2.i = shl i32 %or.i, 16, !dbg !3679
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !3680
  %shr3.i = lshr i32 %11, 16, !dbg !3681
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3682
  %and5.i = and i32 %shl4.i, 65280, !dbg !3683
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !3684
  %shr6.i = lshr i32 %12, 16, !dbg !3685
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3686
  %and8.i = and i32 %shr7.i, 255, !dbg !3687
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3688
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3689
  %13 = load i32, i32* %re_index, align 4, !dbg !3690
  %and = and i32 %13, 7, !dbg !3691
  %shl = shl i32 %or10.i, %and, !dbg !3692
  store i32 %shl, i32* %re_cache, align 4, !dbg !3693
  %14 = load i32, i32* %re_cache, align 4, !dbg !3694
  %15 = load i32, i32* %n.addr, align 4, !dbg !3695
  %conv = trunc i32 %15 to i8, !dbg !3695
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !3696
  store i32 %call4, i32* %tmp, align 4, !dbg !3697
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !3698
  %17 = load i32, i32* %re_index, align 4, !dbg !3699
  %18 = load i32, i32* %n.addr, align 4, !dbg !3700
  %add = add i32 %17, %18, !dbg !3701
  %cmp = icmp ugt i32 %16, %add, !dbg !3702
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3703

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !3704
  %20 = load i32, i32* %n.addr, align 4, !dbg !3706
  %add6 = add i32 %19, %20, !dbg !3707
  br label %cond.end, !dbg !3708

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !3709
  br label %cond.end, !dbg !3711

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !3712
  store i32 %cond, i32* %re_index, align 4, !dbg !3714
  %22 = load i32, i32* %re_index, align 4, !dbg !3715
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3716
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !3717
  store i32 %22, i32* %index7, align 8, !dbg !3718
  %24 = load i32, i32* %tmp, align 4, !dbg !3719
  ret i32 %24, !dbg !3720
}

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #2

declare i8* @av_malloc_array(i64, i64) #2

declare void @av_free(i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #5 !dbg !3721 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !3725, metadata !1742), !dbg !3726
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !3727, metadata !1742), !dbg !3728
  %0 = load i32, i32* %a.addr, align 4, !dbg !3729
  %1 = load i8, i8* %s.addr, align 1, !dbg !3730
  %conv = sext i8 %1 to i32, !dbg !3730
  %sub = sub nsw i32 0, %conv, !dbg !3731
  %conv1 = trunc i32 %sub to i8, !dbg !3732
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #1, !dbg !3729, !srcloc !3733
  store i32 %2, i32* %a.addr, align 4, !dbg !3729
  %3 = load i32, i32* %a.addr, align 4, !dbg !3734
  ret i32 %3, !dbg !3735
}

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1012, !1013}
!llvm.ident = !{!1014}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !897, globals: !914)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--wma.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887, !893}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !888, line: 77, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!891 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!892 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !888, line: 83, size: 32, align: 32, elements: !894)
!894 = !{!895, !896}
!895 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!896 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!897 = !{!898, !899, !900, !901, !905, !906, !912}
!898 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!899 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!900 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64, align: 64)
!902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !903)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !904, line: 51, baseType: !900)
!904 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64, align: 64)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64, align: 64)
!907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !908)
!908 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !909, line: 221, size: 32, align: 8, elements: !910)
!909 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!910 = !{!911}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !908, file: !909, line: 221, baseType: !903, size: 32, align: 32)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !904, line: 48, baseType: !913)
!913 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!914 = !{!915, !923, !926, !932, !937, !938, !939, !955, !959, !961, !965, !969, !971, !975, !979, !981, !985, !989, !991, !995, !999, !1001, !1005, !1009, !1011}
!915 = distinct !DIGlobalVariable(name: "ff_wma_hgain_huffcodes", scope: !0, file: !916, line: 54, type: !917, isLocal: false, isDefinition: true, variable: [37 x i16]* @ff_wma_hgain_huffcodes)
!916 = !DIFile(filename: "libavcodec/wmadata.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 592, align: 16, elements: !921)
!918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !904, line: 49, baseType: !920)
!920 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!921 = !{!922}
!922 = !DISubrange(count: 37)
!923 = distinct !DIGlobalVariable(name: "ff_wma_hgain_huffbits", scope: !0, file: !916, line: 62, type: !924, isLocal: false, isDefinition: true, variable: [37 x i8]* @ff_wma_hgain_huffbits)
!924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 296, align: 8, elements: !921)
!925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !912)
!926 = distinct !DIGlobalVariable(name: "ff_wma_lsp_codebook", scope: !0, file: !916, line: 68, type: !927, isLocal: false, isDefinition: true, variable: [10 x [16 x float]]* @ff_wma_lsp_codebook)
!927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !928, size: 5120, align: 32, elements: !929)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !898)
!929 = !{!930, !931}
!930 = !DISubrange(count: 10)
!931 = !DISubrange(count: 16)
!932 = distinct !DIGlobalVariable(name: "exponent_band_44100", scope: !0, file: !916, line: 48, type: !933, isLocal: true, isDefinition: true, variable: [3 x [25 x i8]]* @exponent_band_44100)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 600, align: 8, elements: !934)
!934 = !{!935, !936}
!935 = !DISubrange(count: 3)
!936 = !DISubrange(count: 25)
!937 = distinct !DIGlobalVariable(name: "exponent_band_32000", scope: !0, file: !916, line: 42, type: !933, isLocal: true, isDefinition: true, variable: [3 x [25 x i8]]* @exponent_band_32000)
!938 = distinct !DIGlobalVariable(name: "exponent_band_22050", scope: !0, file: !916, line: 35, type: !933, isLocal: true, isDefinition: true, variable: [3 x [25 x i8]]* @exponent_band_22050)
!939 = distinct !DIGlobalVariable(name: "coef_vlcs", scope: !0, file: !916, line: 1375, type: !940, isLocal: true, isDefinition: true, variable: [6 x %struct.CoefVLCTable]* @coef_vlcs)
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !941, size: 1536, align: 64, elements: !953)
!941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !942)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "CoefVLCTable", file: !943, line: 65, baseType: !944)
!943 = !DIFile(filename: "libavcodec/wma.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CoefVLCTable", file: !943, line: 59, size: 256, align: 64, elements: !945)
!945 = !{!946, !947, !948, !949, !951}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !944, file: !943, line: 60, baseType: !899, size: 32, align: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "max_level", scope: !944, file: !943, line: 61, baseType: !899, size: 32, align: 32, offset: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "huffcodes", scope: !944, file: !943, line: 62, baseType: !901, size: 64, align: 64, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "huffbits", scope: !944, file: !943, line: 63, baseType: !950, size: 64, align: 64, offset: 128)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64, align: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !944, file: !943, line: 64, baseType: !952, size: 64, align: 64, offset: 192)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64, align: 64)
!953 = !{!954}
!954 = !DISubrange(count: 6)
!955 = distinct !DIGlobalVariable(name: "coef0_huffcodes", scope: !0, file: !916, line: 88, type: !956, isLocal: true, isDefinition: true, variable: [666 x i32]* @coef0_huffcodes)
!956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 21312, align: 32, elements: !957)
!957 = !{!958}
!958 = !DISubrange(count: 666)
!959 = distinct !DIGlobalVariable(name: "coef0_huffbits", scope: !0, file: !916, line: 175, type: !960, isLocal: true, isDefinition: true, variable: [666 x i8]* @coef0_huffbits)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 5328, align: 8, elements: !957)
!961 = distinct !DIGlobalVariable(name: "levels0", scope: !0, file: !916, line: 1264, type: !962, isLocal: true, isDefinition: true, variable: [60 x i16]* @levels0)
!962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 960, align: 16, elements: !963)
!963 = !{!964}
!964 = !DISubrange(count: 60)
!965 = distinct !DIGlobalVariable(name: "coef1_huffcodes", scope: !0, file: !916, line: 262, type: !966, isLocal: true, isDefinition: true, variable: [555 x i32]* @coef1_huffcodes)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 17760, align: 32, elements: !967)
!967 = !{!968}
!968 = !DISubrange(count: 555)
!969 = distinct !DIGlobalVariable(name: "coef1_huffbits", scope: !0, file: !916, line: 335, type: !970, isLocal: true, isDefinition: true, variable: [555 x i8]* @coef1_huffbits)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 4440, align: 8, elements: !967)
!971 = distinct !DIGlobalVariable(name: "levels1", scope: !0, file: !916, line: 1275, type: !972, isLocal: true, isDefinition: true, variable: [40 x i16]* @levels1)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 640, align: 16, elements: !973)
!973 = !{!974}
!974 = !DISubrange(count: 40)
!975 = distinct !DIGlobalVariable(name: "coef2_huffcodes", scope: !0, file: !916, line: 408, type: !976, isLocal: true, isDefinition: true, variable: [1336 x i32]* @coef2_huffcodes)
!976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 42752, align: 32, elements: !977)
!977 = !{!978}
!978 = !DISubrange(count: 1336)
!979 = distinct !DIGlobalVariable(name: "coef2_huffbits", scope: !0, file: !916, line: 578, type: !980, isLocal: true, isDefinition: true, variable: [1336 x i8]* @coef2_huffbits)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 10688, align: 8, elements: !977)
!981 = distinct !DIGlobalVariable(name: "levels2", scope: !0, file: !916, line: 1283, type: !982, isLocal: true, isDefinition: true, variable: [340 x i16]* @levels2)
!982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 5440, align: 16, elements: !983)
!983 = !{!984}
!984 = !DISubrange(count: 340)
!985 = distinct !DIGlobalVariable(name: "coef3_huffcodes", scope: !0, file: !916, line: 748, type: !986, isLocal: true, isDefinition: true, variable: [1072 x i32]* @coef3_huffcodes)
!986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 34304, align: 32, elements: !987)
!987 = !{!988}
!988 = !DISubrange(count: 1072)
!989 = distinct !DIGlobalVariable(name: "coef3_huffbits", scope: !0, file: !916, line: 885, type: !990, isLocal: true, isDefinition: true, variable: [1072 x i8]* @coef3_huffbits)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 8576, align: 8, elements: !987)
!991 = distinct !DIGlobalVariable(name: "levels3", scope: !0, file: !916, line: 1329, type: !992, isLocal: true, isDefinition: true, variable: [180 x i16]* @levels3)
!992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 2880, align: 16, elements: !993)
!993 = !{!994}
!994 = !DISubrange(count: 180)
!995 = distinct !DIGlobalVariable(name: "coef4_huffcodes", scope: !0, file: !916, line: 1022, type: !996, isLocal: true, isDefinition: true, variable: [476 x i32]* @coef4_huffcodes)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 15232, align: 32, elements: !997)
!997 = !{!998}
!998 = !DISubrange(count: 476)
!999 = distinct !DIGlobalVariable(name: "coef4_huffbits", scope: !0, file: !916, line: 1085, type: !1000, isLocal: true, isDefinition: true, variable: [476 x i8]* @coef4_huffbits)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 3808, align: 8, elements: !997)
!1001 = distinct !DIGlobalVariable(name: "levels4", scope: !0, file: !916, line: 1355, type: !1002, isLocal: true, isDefinition: true, variable: [70 x i16]* @levels4)
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 1120, align: 16, elements: !1003)
!1003 = !{!1004}
!1004 = !DISubrange(count: 70)
!1005 = distinct !DIGlobalVariable(name: "coef5_huffcodes", scope: !0, file: !916, line: 1148, type: !1006, isLocal: true, isDefinition: true, variable: [435 x i32]* @coef5_huffcodes)
!1006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 13920, align: 32, elements: !1007)
!1007 = !{!1008}
!1008 = !DISubrange(count: 435)
!1009 = distinct !DIGlobalVariable(name: "coef5_huffbits", scope: !0, file: !916, line: 1206, type: !1010, isLocal: true, isDefinition: true, variable: [435 x i8]* @coef5_huffbits)
!1010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 3480, align: 8, elements: !1007)
!1011 = distinct !DIGlobalVariable(name: "levels5", scope: !0, file: !916, line: 1367, type: !972, isLocal: true, isDefinition: true, variable: [40 x i16]* @levels5)
!1012 = !{i32 2, !"Dwarf Version", i32 4}
!1013 = !{i32 2, !"Debug Info Version", i32 3}
!1014 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1015 = distinct !DISubprogram(name: "ff_wma_init", scope: !1016, file: !1016, line: 81, type: !1017, isLocal: false, isDefinition: true, scopeLine: 82, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1740)
!1016 = !DIFile(filename: "libavcodec/wma.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!899, !1019, !899}
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64, align: 64)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !1022)
!1022 = !{!1023, !1068, !1069, !1070, !1339, !1340, !1341, !1342, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1495, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1678, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1021, file: !35, line: 1561, baseType: !1024, size: 64, align: 64)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64, align: 64)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !1027)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !1028)
!1028 = !{!1029, !1033, !1038, !1042, !1043, !1044, !1045, !1049, !1055, !1057, !1061}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1027, file: !4, line: 72, baseType: !1030, size: 64, align: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1032 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1027, file: !4, line: 78, baseType: !1034, size: 64, align: 64, offset: 64)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!1030, !1037}
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1027, file: !4, line: 85, baseType: !1039, size: 64, align: 64, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64, align: 64)
!1040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1041 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1027, file: !4, line: 93, baseType: !899, size: 32, align: 32, offset: 192)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1027, file: !4, line: 99, baseType: !899, size: 32, align: 32, offset: 224)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1027, file: !4, line: 108, baseType: !899, size: 32, align: 32, offset: 256)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1027, file: !4, line: 113, baseType: !1046, size: 64, align: 64, offset: 320)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64, align: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!1037, !1037, !1037}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1027, file: !4, line: 123, baseType: !1050, size: 64, align: 64, offset: 384)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64, align: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!1053, !1053}
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64, align: 64)
!1054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1027)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1027, file: !4, line: 130, baseType: !1056, size: 32, align: 32, offset: 448)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1027, file: !4, line: 136, baseType: !1058, size: 64, align: 64, offset: 512)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64, align: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!1056, !1037}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1027, file: !4, line: 142, baseType: !1062, size: 64, align: 64, offset: 576)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64, align: 64)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!899, !1065, !1037, !1030, !899}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64, align: 64)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64, align: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1021, file: !35, line: 1562, baseType: !899, size: 32, align: 32, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1021, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1021, file: !35, line: 1565, baseType: !1071, size: 64, align: 64, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1073)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1078, !1079, !1080, !1089, !1092, !1095, !1098, !1103, !1104, !1105, !1113, !1114, !1115, !1117, !1121, !1127, !1136, !1140, !1141, !1189, !1310, !1314, !1315, !1319, !1323, !1328, !1332, !1333, !1334}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1073, file: !35, line: 3475, baseType: !1030, size: 64, align: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1073, file: !35, line: 3480, baseType: !1030, size: 64, align: 64, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1073, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1073, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1073, file: !35, line: 3487, baseType: !899, size: 32, align: 32, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1073, file: !35, line: 3488, baseType: !1081, size: 64, align: 64, offset: 256)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1083)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1084, line: 61, baseType: !1085)
!1084 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1084, line: 58, size: 64, align: 32, elements: !1086)
!1086 = !{!1087, !1088}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1085, file: !1084, line: 59, baseType: !899, size: 32, align: 32)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1085, file: !1084, line: 60, baseType: !899, size: 32, align: 32, offset: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1073, file: !35, line: 3489, baseType: !1090, size: 64, align: 64, offset: 320)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64, align: 64)
!1091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1073, file: !35, line: 3490, baseType: !1093, size: 64, align: 64, offset: 384)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64, align: 64)
!1094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1073, file: !35, line: 3491, baseType: !1096, size: 64, align: 64, offset: 448)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1073, file: !35, line: 3492, baseType: !1099, size: 64, align: 64, offset: 512)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !904, line: 55, baseType: !1102)
!1102 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1073, file: !35, line: 3493, baseType: !912, size: 8, align: 8, offset: 576)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1073, file: !35, line: 3494, baseType: !1024, size: 64, align: 64, offset: 640)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1073, file: !35, line: 3495, baseType: !1106, size: 64, align: 64, offset: 704)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64, align: 64)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1110)
!1110 = !{!1111, !1112}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1109, file: !35, line: 3402, baseType: !899, size: 32, align: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1109, file: !35, line: 3403, baseType: !1030, size: 64, align: 64, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1073, file: !35, line: 3507, baseType: !1030, size: 64, align: 64, offset: 768)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1073, file: !35, line: 3516, baseType: !899, size: 32, align: 32, offset: 832)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1073, file: !35, line: 3517, baseType: !1116, size: 64, align: 64, offset: 896)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64, align: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1073, file: !35, line: 3527, baseType: !1118, size: 64, align: 64, offset: 960)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64, align: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!899, !1019}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1073, file: !35, line: 3535, baseType: !1122, size: 64, align: 64, offset: 1024)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64, align: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!899, !1019, !1125}
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64, align: 64)
!1126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1073, file: !35, line: 3541, baseType: !1128, size: 64, align: 64, offset: 1088)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64, align: 64)
!1129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1130)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1131)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1132, line: 223, size: 128, align: 64, elements: !1133)
!1132 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1133 = !{!1134, !1135}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1131, file: !1132, line: 224, baseType: !950, size: 64, align: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1131, file: !1132, line: 225, baseType: !950, size: 64, align: 64, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1073, file: !35, line: 3549, baseType: !1137, size: 64, align: 64, offset: 1152)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64, align: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{null, !1116}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1073, file: !35, line: 3551, baseType: !1118, size: 64, align: 64, offset: 1216)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1073, file: !35, line: 3552, baseType: !1142, size: 64, align: 64, offset: 1280)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64, align: 64)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!899, !1019, !1145, !899, !1146}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64, align: 64)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64, align: 64)
!1147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1149)
!1149 = !{!1150, !1151, !1152, !1153, !1154, !1186}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1148, file: !35, line: 3921, baseType: !919, size: 16, align: 16)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1148, file: !35, line: 3922, baseType: !903, size: 32, align: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1148, file: !35, line: 3923, baseType: !903, size: 32, align: 32, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1148, file: !35, line: 3924, baseType: !900, size: 32, align: 32, offset: 96)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1148, file: !35, line: 3925, baseType: !1155, size: 64, align: 64, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64, align: 64)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64, align: 64)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1158)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1159)
!1159 = !{!1160, !1161, !1162, !1163, !1164, !1165, !1175, !1179, !1181, !1182, !1184, !1185}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1158, file: !35, line: 3886, baseType: !899, size: 32, align: 32)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1158, file: !35, line: 3887, baseType: !899, size: 32, align: 32, offset: 32)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1158, file: !35, line: 3888, baseType: !899, size: 32, align: 32, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1158, file: !35, line: 3889, baseType: !899, size: 32, align: 32, offset: 96)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1158, file: !35, line: 3890, baseType: !899, size: 32, align: 32, offset: 128)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1158, file: !35, line: 3897, baseType: !1166, size: 768, align: 64, offset: 192)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1167)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1168)
!1168 = !{!1169, !1173}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1167, file: !35, line: 3855, baseType: !1170, size: 512, align: 64)
!1170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1145, size: 512, align: 64, elements: !1171)
!1171 = !{!1172}
!1172 = !DISubrange(count: 8)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1167, file: !35, line: 3857, baseType: !1174, size: 256, align: 32, offset: 512)
!1174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 256, align: 32, elements: !1171)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1158, file: !35, line: 3903, baseType: !1176, size: 256, align: 64, offset: 960)
!1176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1145, size: 256, align: 64, elements: !1177)
!1177 = !{!1178}
!1178 = !DISubrange(count: 4)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1158, file: !35, line: 3904, baseType: !1180, size: 128, align: 32, offset: 1216)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 128, align: 32, elements: !1177)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1158, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1158, file: !35, line: 3908, baseType: !1183, size: 64, align: 64, offset: 1408)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1158, file: !35, line: 3915, baseType: !1183, size: 64, align: 64, offset: 1472)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1158, file: !35, line: 3917, baseType: !899, size: 32, align: 32, offset: 1536)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1148, file: !35, line: 3926, baseType: !1187, size: 64, align: 64, offset: 192)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !904, line: 40, baseType: !1188)
!1188 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1073, file: !35, line: 3564, baseType: !1190, size: 64, align: 64, offset: 1344)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64, align: 64)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!899, !1019, !1193, !1227, !1309}
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64, align: 64)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1196)
!1196 = !{!1197, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1223, !1224, !1225, !1226}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1195, file: !35, line: 1451, baseType: !1198, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64, align: 64)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1200, line: 94, baseType: !1201)
!1200 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1200, line: 81, size: 192, align: 64, elements: !1202)
!1202 = !{!1203, !1207, !1208}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1201, file: !1200, line: 82, baseType: !1204, size: 64, align: 64)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64, align: 64)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1200, line: 73, baseType: !1206)
!1206 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1200, line: 73, flags: DIFlagFwdDecl)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1201, file: !1200, line: 89, baseType: !1145, size: 64, align: 64, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1201, file: !1200, line: 93, baseType: !899, size: 32, align: 32, offset: 128)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1195, file: !35, line: 1461, baseType: !1187, size: 64, align: 64, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1195, file: !35, line: 1467, baseType: !1187, size: 64, align: 64, offset: 128)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1195, file: !35, line: 1468, baseType: !1145, size: 64, align: 64, offset: 192)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1195, file: !35, line: 1469, baseType: !899, size: 32, align: 32, offset: 256)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1195, file: !35, line: 1470, baseType: !899, size: 32, align: 32, offset: 288)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1195, file: !35, line: 1474, baseType: !899, size: 32, align: 32, offset: 320)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1195, file: !35, line: 1479, baseType: !1216, size: 64, align: 64, offset: 384)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64, align: 64)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1219)
!1219 = !{!1220, !1221, !1222}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1218, file: !35, line: 1412, baseType: !1145, size: 64, align: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1218, file: !35, line: 1413, baseType: !899, size: 32, align: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1218, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1195, file: !35, line: 1480, baseType: !899, size: 32, align: 32, offset: 448)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1195, file: !35, line: 1486, baseType: !1187, size: 64, align: 64, offset: 512)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1195, file: !35, line: 1488, baseType: !1187, size: 64, align: 64, offset: 576)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1195, file: !35, line: 1497, baseType: !1187, size: 64, align: 64, offset: 640)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64, align: 64)
!1228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1229)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1231)
!1231 = !{!1232, !1233, !1234, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1261, !1263, !1264, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1297, !1298, !1299, !1300, !1301, !1302, !1305, !1306, !1307, !1308}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1230, file: !758, line: 282, baseType: !1170, size: 512, align: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1230, file: !758, line: 299, baseType: !1174, size: 256, align: 32, offset: 512)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1230, file: !758, line: 315, baseType: !1235, size: 64, align: 64, offset: 768)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64, align: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1230, file: !758, line: 326, baseType: !899, size: 32, align: 32, offset: 832)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1230, file: !758, line: 326, baseType: !899, size: 32, align: 32, offset: 864)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1230, file: !758, line: 334, baseType: !899, size: 32, align: 32, offset: 896)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1230, file: !758, line: 341, baseType: !899, size: 32, align: 32, offset: 928)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1230, file: !758, line: 346, baseType: !899, size: 32, align: 32, offset: 960)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1230, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1230, file: !758, line: 356, baseType: !1083, size: 64, align: 32, offset: 1024)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1230, file: !758, line: 361, baseType: !1187, size: 64, align: 64, offset: 1088)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1230, file: !758, line: 369, baseType: !1187, size: 64, align: 64, offset: 1152)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1230, file: !758, line: 377, baseType: !1187, size: 64, align: 64, offset: 1216)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1230, file: !758, line: 382, baseType: !899, size: 32, align: 32, offset: 1280)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1230, file: !758, line: 386, baseType: !899, size: 32, align: 32, offset: 1312)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1230, file: !758, line: 391, baseType: !899, size: 32, align: 32, offset: 1344)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1230, file: !758, line: 396, baseType: !1037, size: 64, align: 64, offset: 1408)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1230, file: !758, line: 403, baseType: !1251, size: 512, align: 64, offset: 1472)
!1251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1101, size: 512, align: 64, elements: !1171)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1230, file: !758, line: 410, baseType: !899, size: 32, align: 32, offset: 1984)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1230, file: !758, line: 415, baseType: !899, size: 32, align: 32, offset: 2016)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1230, file: !758, line: 420, baseType: !899, size: 32, align: 32, offset: 2048)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1230, file: !758, line: 425, baseType: !899, size: 32, align: 32, offset: 2080)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1230, file: !758, line: 435, baseType: !1187, size: 64, align: 64, offset: 2112)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1230, file: !758, line: 440, baseType: !899, size: 32, align: 32, offset: 2176)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1230, file: !758, line: 445, baseType: !1101, size: 64, align: 64, offset: 2240)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1230, file: !758, line: 459, baseType: !1260, size: 512, align: 64, offset: 2304)
!1260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1198, size: 512, align: 64, elements: !1171)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1230, file: !758, line: 473, baseType: !1262, size: 64, align: 64, offset: 2816)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64, align: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1230, file: !758, line: 477, baseType: !899, size: 32, align: 32, offset: 2880)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1230, file: !758, line: 479, baseType: !1265, size: 64, align: 64, offset: 2944)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64, align: 64)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64, align: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1268)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1269)
!1269 = !{!1270, !1271, !1272, !1273, !1278}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1268, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1268, file: !758, line: 203, baseType: !1145, size: 64, align: 64, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1268, file: !758, line: 204, baseType: !899, size: 32, align: 32, offset: 128)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1268, file: !758, line: 205, baseType: !1274, size: 64, align: 64, offset: 192)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64, align: 64)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1276, line: 86, baseType: !1277)
!1276 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1277 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1276, line: 86, flags: DIFlagFwdDecl)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1268, file: !758, line: 206, baseType: !1198, size: 64, align: 64, offset: 256)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1230, file: !758, line: 480, baseType: !899, size: 32, align: 32, offset: 3008)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1230, file: !758, line: 505, baseType: !899, size: 32, align: 32, offset: 3040)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1230, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1230, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1230, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1230, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1230, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1230, file: !758, line: 532, baseType: !1187, size: 64, align: 64, offset: 3264)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1230, file: !758, line: 539, baseType: !1187, size: 64, align: 64, offset: 3328)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1230, file: !758, line: 547, baseType: !1187, size: 64, align: 64, offset: 3392)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1230, file: !758, line: 554, baseType: !1274, size: 64, align: 64, offset: 3456)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1230, file: !758, line: 563, baseType: !899, size: 32, align: 32, offset: 3520)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1230, file: !758, line: 572, baseType: !899, size: 32, align: 32, offset: 3552)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1230, file: !758, line: 581, baseType: !899, size: 32, align: 32, offset: 3584)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1230, file: !758, line: 588, baseType: !1294, size: 64, align: 64, offset: 3648)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64, align: 64)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !904, line: 36, baseType: !1296)
!1296 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1230, file: !758, line: 593, baseType: !899, size: 32, align: 32, offset: 3712)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1230, file: !758, line: 596, baseType: !899, size: 32, align: 32, offset: 3744)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1230, file: !758, line: 599, baseType: !1198, size: 64, align: 64, offset: 3776)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1230, file: !758, line: 605, baseType: !1198, size: 64, align: 64, offset: 3840)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1230, file: !758, line: 616, baseType: !1198, size: 64, align: 64, offset: 3904)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1230, file: !758, line: 626, baseType: !1303, size: 64, align: 64, offset: 3968)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1304, line: 216, baseType: !1102)
!1304 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1230, file: !758, line: 627, baseType: !1303, size: 64, align: 64, offset: 4032)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1230, file: !758, line: 628, baseType: !1303, size: 64, align: 64, offset: 4096)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1230, file: !758, line: 629, baseType: !1303, size: 64, align: 64, offset: 4160)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1230, file: !758, line: 645, baseType: !1198, size: 64, align: 64, offset: 4224)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64, align: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1073, file: !35, line: 3566, baseType: !1311, size: 64, align: 64, offset: 1408)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64, align: 64)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!899, !1019, !1037, !1309, !1193}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1073, file: !35, line: 3567, baseType: !1118, size: 64, align: 64, offset: 1472)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1073, file: !35, line: 3576, baseType: !1316, size: 64, align: 64, offset: 1536)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64, align: 64)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!899, !1019, !1227}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1073, file: !35, line: 3577, baseType: !1320, size: 64, align: 64, offset: 1600)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64, align: 64)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!899, !1019, !1193}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1073, file: !35, line: 3584, baseType: !1324, size: 64, align: 64, offset: 1664)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64, align: 64)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!899, !1019, !1327}
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64, align: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1073, file: !35, line: 3589, baseType: !1329, size: 64, align: 64, offset: 1728)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64, align: 64)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{null, !1019}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1073, file: !35, line: 3594, baseType: !899, size: 32, align: 32, offset: 1792)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1073, file: !35, line: 3600, baseType: !1030, size: 64, align: 64, offset: 1856)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1073, file: !35, line: 3609, baseType: !1335, size: 64, align: 64, offset: 1920)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64, align: 64)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64, align: 64)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1021, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1021, file: !35, line: 1581, baseType: !900, size: 32, align: 32, offset: 224)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1021, file: !35, line: 1583, baseType: !1037, size: 64, align: 64, offset: 256)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1021, file: !35, line: 1591, baseType: !1343, size: 64, align: 64, offset: 320)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64, align: 64)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1132, line: 129, size: 1664, align: 64, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349, !1350, !1368, !1369, !1375, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1344, file: !1132, line: 136, baseType: !899, size: 32, align: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1344, file: !1132, line: 151, baseType: !899, size: 32, align: 32, offset: 32)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1344, file: !1132, line: 157, baseType: !899, size: 32, align: 32, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1344, file: !1132, line: 159, baseType: !1327, size: 64, align: 64, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1344, file: !1132, line: 161, baseType: !1351, size: 64, align: 64, offset: 192)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64, align: 64)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1132, line: 117, baseType: !1353)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1132, line: 100, size: 832, align: 64, elements: !1354)
!1354 = !{!1355, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1353, file: !1132, line: 105, baseType: !1356, size: 256, align: 64)
!1356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1357, size: 256, align: 64, elements: !1177)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64, align: 64)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1200, line: 238, baseType: !1359)
!1359 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1200, line: 238, flags: DIFlagFwdDecl)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1353, file: !1132, line: 110, baseType: !899, size: 32, align: 32, offset: 256)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1353, file: !1132, line: 111, baseType: !899, size: 32, align: 32, offset: 288)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1353, file: !1132, line: 111, baseType: !899, size: 32, align: 32, offset: 320)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1353, file: !1132, line: 112, baseType: !1174, size: 256, align: 32, offset: 352)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1353, file: !1132, line: 113, baseType: !1180, size: 128, align: 32, offset: 608)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1353, file: !1132, line: 114, baseType: !899, size: 32, align: 32, offset: 736)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1353, file: !1132, line: 115, baseType: !899, size: 32, align: 32, offset: 768)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1353, file: !1132, line: 116, baseType: !899, size: 32, align: 32, offset: 800)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1344, file: !1132, line: 163, baseType: !1037, size: 64, align: 64, offset: 256)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1344, file: !1132, line: 165, baseType: !1370, size: 128, align: 64, offset: 320)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1132, line: 122, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1132, line: 119, size: 128, align: 64, elements: !1372)
!1372 = !{!1373, !1374}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1371, file: !1132, line: 120, baseType: !1193, size: 64, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1371, file: !1132, line: 121, baseType: !1327, size: 64, align: 64, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1344, file: !1132, line: 166, baseType: !1376, size: 128, align: 64, offset: 448)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1132, line: 127, baseType: !1377)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1132, line: 124, size: 128, align: 64, elements: !1378)
!1378 = !{!1379, !1452}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1377, file: !1132, line: 125, baseType: !1380, size: 64, align: 64)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64, align: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64, align: 64)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !35, line: 5794, baseType: !1383)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !35, line: 5747, size: 512, align: 64, elements: !1384)
!1384 = !{!1385, !1386, !1410, !1414, !1415, !1449, !1450, !1451}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1383, file: !35, line: 5751, baseType: !1024, size: 64, align: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1383, file: !35, line: 5756, baseType: !1387, size: 64, align: 64, offset: 64)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64, align: 64)
!1388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !35, line: 5796, size: 512, align: 64, elements: !1390)
!1390 = !{!1391, !1392, !1395, !1396, !1397, !1401, !1405, !1409}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1389, file: !35, line: 5797, baseType: !1030, size: 64, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1389, file: !35, line: 5804, baseType: !1393, size: 64, align: 64, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64, align: 64)
!1394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1389, file: !35, line: 5815, baseType: !1024, size: 64, align: 64, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1389, file: !35, line: 5825, baseType: !899, size: 32, align: 32, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1389, file: !35, line: 5826, baseType: !1398, size: 64, align: 64, offset: 256)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64, align: 64)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!899, !1381}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1389, file: !35, line: 5827, baseType: !1402, size: 64, align: 64, offset: 320)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64, align: 64)
!1403 = !DISubroutineType(types: !1404)
!1404 = !{!899, !1381, !1193}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1389, file: !35, line: 5828, baseType: !1406, size: 64, align: 64, offset: 384)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64, align: 64)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{null, !1381}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1389, file: !35, line: 5829, baseType: !1406, size: 64, align: 64, offset: 448)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1383, file: !35, line: 5762, baseType: !1411, size: 64, align: 64, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64, align: 64)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !35, line: 5735, baseType: !1413)
!1413 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !35, line: 5735, flags: DIFlagFwdDecl)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1383, file: !35, line: 5768, baseType: !1037, size: 64, align: 64, offset: 192)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1383, file: !35, line: 5775, baseType: !1416, size: 64, align: 64, offset: 256)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64, align: 64)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !35, line: 4085, baseType: !1418)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !35, line: 3936, size: 1152, align: 64, elements: !1419)
!1419 = !{!1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1418, file: !35, line: 3940, baseType: !24, size: 32, align: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1418, file: !35, line: 3944, baseType: !34, size: 32, align: 32, offset: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1418, file: !35, line: 3948, baseType: !903, size: 32, align: 32, offset: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1418, file: !35, line: 3958, baseType: !1145, size: 64, align: 64, offset: 128)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1418, file: !35, line: 3962, baseType: !899, size: 32, align: 32, offset: 192)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1418, file: !35, line: 3968, baseType: !899, size: 32, align: 32, offset: 224)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1418, file: !35, line: 3973, baseType: !1187, size: 64, align: 64, offset: 256)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1418, file: !35, line: 3986, baseType: !899, size: 32, align: 32, offset: 320)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1418, file: !35, line: 3999, baseType: !899, size: 32, align: 32, offset: 352)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1418, file: !35, line: 4004, baseType: !899, size: 32, align: 32, offset: 384)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1418, file: !35, line: 4005, baseType: !899, size: 32, align: 32, offset: 416)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1418, file: !35, line: 4010, baseType: !899, size: 32, align: 32, offset: 448)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1418, file: !35, line: 4011, baseType: !899, size: 32, align: 32, offset: 480)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1418, file: !35, line: 4020, baseType: !1083, size: 64, align: 32, offset: 512)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1418, file: !35, line: 4025, baseType: !858, size: 32, align: 32, offset: 576)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1418, file: !35, line: 4030, baseType: !781, size: 32, align: 32, offset: 608)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1418, file: !35, line: 4031, baseType: !787, size: 32, align: 32, offset: 640)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1418, file: !35, line: 4032, baseType: !805, size: 32, align: 32, offset: 672)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1418, file: !35, line: 4033, baseType: !829, size: 32, align: 32, offset: 704)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1418, file: !35, line: 4034, baseType: !848, size: 32, align: 32, offset: 736)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1418, file: !35, line: 4039, baseType: !899, size: 32, align: 32, offset: 768)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1418, file: !35, line: 4046, baseType: !1101, size: 64, align: 64, offset: 832)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1418, file: !35, line: 4050, baseType: !899, size: 32, align: 32, offset: 896)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1418, file: !35, line: 4054, baseType: !899, size: 32, align: 32, offset: 928)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1418, file: !35, line: 4061, baseType: !899, size: 32, align: 32, offset: 960)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1418, file: !35, line: 4065, baseType: !899, size: 32, align: 32, offset: 992)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1418, file: !35, line: 4073, baseType: !899, size: 32, align: 32, offset: 1024)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1418, file: !35, line: 4080, baseType: !899, size: 32, align: 32, offset: 1056)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1418, file: !35, line: 4084, baseType: !899, size: 32, align: 32, offset: 1088)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1383, file: !35, line: 5781, baseType: !1416, size: 64, align: 64, offset: 320)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1383, file: !35, line: 5787, baseType: !1083, size: 64, align: 32, offset: 384)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1383, file: !35, line: 5793, baseType: !1083, size: 64, align: 32, offset: 448)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1377, file: !1132, line: 126, baseType: !899, size: 32, align: 32, offset: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1344, file: !1132, line: 172, baseType: !1193, size: 64, align: 64, offset: 576)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1344, file: !1132, line: 177, baseType: !1145, size: 64, align: 64, offset: 640)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1344, file: !1132, line: 178, baseType: !900, size: 32, align: 32, offset: 704)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1344, file: !1132, line: 180, baseType: !1037, size: 64, align: 64, offset: 768)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1344, file: !1132, line: 185, baseType: !899, size: 32, align: 32, offset: 832)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1344, file: !1132, line: 190, baseType: !1037, size: 64, align: 64, offset: 896)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1344, file: !1132, line: 195, baseType: !899, size: 32, align: 32, offset: 960)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1344, file: !1132, line: 200, baseType: !1193, size: 64, align: 64, offset: 1024)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1344, file: !1132, line: 201, baseType: !899, size: 32, align: 32, offset: 1088)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1344, file: !1132, line: 202, baseType: !1327, size: 64, align: 64, offset: 1152)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1344, file: !1132, line: 203, baseType: !899, size: 32, align: 32, offset: 1216)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1344, file: !1132, line: 205, baseType: !899, size: 32, align: 32, offset: 1248)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1344, file: !1132, line: 206, baseType: !899, size: 32, align: 32, offset: 1280)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1344, file: !1132, line: 209, baseType: !1303, size: 64, align: 64, offset: 1344)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1344, file: !1132, line: 212, baseType: !1303, size: 64, align: 64, offset: 1408)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1344, file: !1132, line: 213, baseType: !1327, size: 64, align: 64, offset: 1472)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1344, file: !1132, line: 215, baseType: !899, size: 32, align: 32, offset: 1536)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1344, file: !1132, line: 217, baseType: !899, size: 32, align: 32, offset: 1568)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1344, file: !1132, line: 220, baseType: !899, size: 32, align: 32, offset: 1600)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1021, file: !35, line: 1598, baseType: !1037, size: 64, align: 64, offset: 384)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1021, file: !35, line: 1606, baseType: !1187, size: 64, align: 64, offset: 448)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1021, file: !35, line: 1614, baseType: !899, size: 32, align: 32, offset: 512)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1021, file: !35, line: 1622, baseType: !899, size: 32, align: 32, offset: 544)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1021, file: !35, line: 1628, baseType: !899, size: 32, align: 32, offset: 576)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1021, file: !35, line: 1636, baseType: !899, size: 32, align: 32, offset: 608)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1021, file: !35, line: 1643, baseType: !899, size: 32, align: 32, offset: 640)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1021, file: !35, line: 1657, baseType: !1145, size: 64, align: 64, offset: 704)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1021, file: !35, line: 1658, baseType: !899, size: 32, align: 32, offset: 768)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1021, file: !35, line: 1679, baseType: !1083, size: 64, align: 32, offset: 800)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1021, file: !35, line: 1688, baseType: !899, size: 32, align: 32, offset: 864)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1021, file: !35, line: 1712, baseType: !899, size: 32, align: 32, offset: 896)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1021, file: !35, line: 1729, baseType: !899, size: 32, align: 32, offset: 928)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1021, file: !35, line: 1729, baseType: !899, size: 32, align: 32, offset: 960)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1021, file: !35, line: 1744, baseType: !899, size: 32, align: 32, offset: 992)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1021, file: !35, line: 1744, baseType: !899, size: 32, align: 32, offset: 1024)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1021, file: !35, line: 1751, baseType: !899, size: 32, align: 32, offset: 1056)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1021, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1021, file: !35, line: 1791, baseType: !1491, size: 64, align: 64, offset: 1152)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64, align: 64)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{null, !1494, !1227, !1309, !899, !899, !899}
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64, align: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1021, file: !35, line: 1808, baseType: !1496, size: 64, align: 64, offset: 1216)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64, align: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!494, !1494, !1090}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1021, file: !35, line: 1816, baseType: !899, size: 32, align: 32, offset: 1280)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1021, file: !35, line: 1825, baseType: !898, size: 32, align: 32, offset: 1312)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1021, file: !35, line: 1830, baseType: !899, size: 32, align: 32, offset: 1344)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1021, file: !35, line: 1838, baseType: !898, size: 32, align: 32, offset: 1376)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1021, file: !35, line: 1846, baseType: !899, size: 32, align: 32, offset: 1408)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1021, file: !35, line: 1851, baseType: !899, size: 32, align: 32, offset: 1440)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1021, file: !35, line: 1861, baseType: !898, size: 32, align: 32, offset: 1472)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1021, file: !35, line: 1868, baseType: !898, size: 32, align: 32, offset: 1504)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1021, file: !35, line: 1875, baseType: !898, size: 32, align: 32, offset: 1536)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1021, file: !35, line: 1882, baseType: !898, size: 32, align: 32, offset: 1568)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1021, file: !35, line: 1889, baseType: !898, size: 32, align: 32, offset: 1600)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1021, file: !35, line: 1896, baseType: !898, size: 32, align: 32, offset: 1632)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1021, file: !35, line: 1903, baseType: !898, size: 32, align: 32, offset: 1664)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1021, file: !35, line: 1910, baseType: !899, size: 32, align: 32, offset: 1696)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1021, file: !35, line: 1915, baseType: !899, size: 32, align: 32, offset: 1728)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1021, file: !35, line: 1926, baseType: !1309, size: 64, align: 64, offset: 1792)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1021, file: !35, line: 1935, baseType: !1083, size: 64, align: 32, offset: 1856)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1021, file: !35, line: 1942, baseType: !899, size: 32, align: 32, offset: 1920)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1021, file: !35, line: 1948, baseType: !899, size: 32, align: 32, offset: 1952)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1021, file: !35, line: 1954, baseType: !899, size: 32, align: 32, offset: 1984)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1021, file: !35, line: 1960, baseType: !899, size: 32, align: 32, offset: 2016)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1021, file: !35, line: 1984, baseType: !899, size: 32, align: 32, offset: 2048)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1021, file: !35, line: 1991, baseType: !899, size: 32, align: 32, offset: 2080)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1021, file: !35, line: 1996, baseType: !899, size: 32, align: 32, offset: 2112)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1021, file: !35, line: 2004, baseType: !899, size: 32, align: 32, offset: 2144)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1021, file: !35, line: 2011, baseType: !899, size: 32, align: 32, offset: 2176)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1021, file: !35, line: 2018, baseType: !899, size: 32, align: 32, offset: 2208)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1021, file: !35, line: 2027, baseType: !899, size: 32, align: 32, offset: 2240)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1021, file: !35, line: 2034, baseType: !899, size: 32, align: 32, offset: 2272)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1021, file: !35, line: 2044, baseType: !899, size: 32, align: 32, offset: 2304)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1021, file: !35, line: 2054, baseType: !1530, size: 64, align: 64, offset: 2368)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64, align: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1021, file: !35, line: 2061, baseType: !1530, size: 64, align: 64, offset: 2432)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1021, file: !35, line: 2066, baseType: !899, size: 32, align: 32, offset: 2496)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1021, file: !35, line: 2070, baseType: !899, size: 32, align: 32, offset: 2528)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1021, file: !35, line: 2078, baseType: !899, size: 32, align: 32, offset: 2560)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1021, file: !35, line: 2085, baseType: !899, size: 32, align: 32, offset: 2592)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1021, file: !35, line: 2092, baseType: !899, size: 32, align: 32, offset: 2624)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1021, file: !35, line: 2099, baseType: !899, size: 32, align: 32, offset: 2656)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1021, file: !35, line: 2106, baseType: !899, size: 32, align: 32, offset: 2688)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1021, file: !35, line: 2113, baseType: !899, size: 32, align: 32, offset: 2720)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1021, file: !35, line: 2120, baseType: !899, size: 32, align: 32, offset: 2752)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1021, file: !35, line: 2125, baseType: !899, size: 32, align: 32, offset: 2784)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1021, file: !35, line: 2133, baseType: !899, size: 32, align: 32, offset: 2816)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1021, file: !35, line: 2140, baseType: !899, size: 32, align: 32, offset: 2848)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1021, file: !35, line: 2145, baseType: !899, size: 32, align: 32, offset: 2880)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1021, file: !35, line: 2153, baseType: !899, size: 32, align: 32, offset: 2912)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1021, file: !35, line: 2158, baseType: !899, size: 32, align: 32, offset: 2944)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1021, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1021, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1021, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1021, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1021, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1021, file: !35, line: 2203, baseType: !899, size: 32, align: 32, offset: 3136)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1021, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1021, file: !35, line: 2212, baseType: !899, size: 32, align: 32, offset: 3200)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1021, file: !35, line: 2213, baseType: !899, size: 32, align: 32, offset: 3232)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1021, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1021, file: !35, line: 2232, baseType: !899, size: 32, align: 32, offset: 3296)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1021, file: !35, line: 2243, baseType: !899, size: 32, align: 32, offset: 3328)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1021, file: !35, line: 2249, baseType: !899, size: 32, align: 32, offset: 3360)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1021, file: !35, line: 2256, baseType: !899, size: 32, align: 32, offset: 3392)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1021, file: !35, line: 2263, baseType: !1101, size: 64, align: 64, offset: 3456)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1021, file: !35, line: 2270, baseType: !1101, size: 64, align: 64, offset: 3520)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1021, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1021, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1021, file: !35, line: 2367, baseType: !1566, size: 64, align: 64, offset: 3648)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64, align: 64)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!899, !1494, !1327, !899}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1021, file: !35, line: 2383, baseType: !899, size: 32, align: 32, offset: 3712)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1021, file: !35, line: 2386, baseType: !898, size: 32, align: 32, offset: 3744)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1021, file: !35, line: 2387, baseType: !898, size: 32, align: 32, offset: 3776)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1021, file: !35, line: 2394, baseType: !899, size: 32, align: 32, offset: 3808)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1021, file: !35, line: 2401, baseType: !899, size: 32, align: 32, offset: 3840)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1021, file: !35, line: 2408, baseType: !899, size: 32, align: 32, offset: 3872)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1021, file: !35, line: 2415, baseType: !899, size: 32, align: 32, offset: 3904)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1021, file: !35, line: 2422, baseType: !899, size: 32, align: 32, offset: 3936)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1021, file: !35, line: 2423, baseType: !1578, size: 64, align: 64, offset: 3968)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64, align: 64)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !1581)
!1581 = !{!1582, !1583, !1584, !1585}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1580, file: !35, line: 827, baseType: !899, size: 32, align: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1580, file: !35, line: 828, baseType: !899, size: 32, align: 32, offset: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1580, file: !35, line: 829, baseType: !899, size: 32, align: 32, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1580, file: !35, line: 830, baseType: !898, size: 32, align: 32, offset: 96)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1021, file: !35, line: 2430, baseType: !1187, size: 64, align: 64, offset: 4032)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1021, file: !35, line: 2437, baseType: !1187, size: 64, align: 64, offset: 4096)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1021, file: !35, line: 2444, baseType: !898, size: 32, align: 32, offset: 4160)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1021, file: !35, line: 2451, baseType: !898, size: 32, align: 32, offset: 4192)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1021, file: !35, line: 2458, baseType: !899, size: 32, align: 32, offset: 4224)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1021, file: !35, line: 2469, baseType: !899, size: 32, align: 32, offset: 4256)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1021, file: !35, line: 2475, baseType: !899, size: 32, align: 32, offset: 4288)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1021, file: !35, line: 2481, baseType: !899, size: 32, align: 32, offset: 4320)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1021, file: !35, line: 2485, baseType: !899, size: 32, align: 32, offset: 4352)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1021, file: !35, line: 2489, baseType: !899, size: 32, align: 32, offset: 4384)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1021, file: !35, line: 2493, baseType: !899, size: 32, align: 32, offset: 4416)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1021, file: !35, line: 2501, baseType: !899, size: 32, align: 32, offset: 4448)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1021, file: !35, line: 2506, baseType: !899, size: 32, align: 32, offset: 4480)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1021, file: !35, line: 2510, baseType: !899, size: 32, align: 32, offset: 4512)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1021, file: !35, line: 2514, baseType: !1187, size: 64, align: 64, offset: 4544)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1021, file: !35, line: 2528, baseType: !1602, size: 64, align: 64, offset: 4608)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64, align: 64)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{null, !1494, !1037, !899, !899}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1021, file: !35, line: 2534, baseType: !899, size: 32, align: 32, offset: 4672)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1021, file: !35, line: 2545, baseType: !899, size: 32, align: 32, offset: 4704)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1021, file: !35, line: 2547, baseType: !899, size: 32, align: 32, offset: 4736)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1021, file: !35, line: 2549, baseType: !899, size: 32, align: 32, offset: 4768)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1021, file: !35, line: 2551, baseType: !899, size: 32, align: 32, offset: 4800)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1021, file: !35, line: 2553, baseType: !899, size: 32, align: 32, offset: 4832)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1021, file: !35, line: 2555, baseType: !899, size: 32, align: 32, offset: 4864)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1021, file: !35, line: 2557, baseType: !899, size: 32, align: 32, offset: 4896)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1021, file: !35, line: 2559, baseType: !899, size: 32, align: 32, offset: 4928)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1021, file: !35, line: 2563, baseType: !899, size: 32, align: 32, offset: 4960)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1021, file: !35, line: 2571, baseType: !1183, size: 64, align: 64, offset: 4992)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1021, file: !35, line: 2579, baseType: !1183, size: 64, align: 64, offset: 5056)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1021, file: !35, line: 2586, baseType: !899, size: 32, align: 32, offset: 5120)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1021, file: !35, line: 2615, baseType: !899, size: 32, align: 32, offset: 5152)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1021, file: !35, line: 2627, baseType: !899, size: 32, align: 32, offset: 5184)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1021, file: !35, line: 2637, baseType: !899, size: 32, align: 32, offset: 5216)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1021, file: !35, line: 2681, baseType: !899, size: 32, align: 32, offset: 5248)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1021, file: !35, line: 2709, baseType: !1187, size: 64, align: 64, offset: 5312)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1021, file: !35, line: 2716, baseType: !1624, size: 64, align: 64, offset: 5376)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64, align: 64)
!1625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !1627)
!1627 = !{!1628, !1629, !1630, !1631, !1632, !1633, !1634, !1638, !1642, !1643, !1644, !1645, !1651, !1652, !1653, !1654, !1655}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1626, file: !35, line: 3642, baseType: !1030, size: 64, align: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1626, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1626, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1626, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1626, file: !35, line: 3669, baseType: !899, size: 32, align: 32, offset: 160)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1626, file: !35, line: 3682, baseType: !1324, size: 64, align: 64, offset: 192)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1626, file: !35, line: 3698, baseType: !1635, size: 64, align: 64, offset: 256)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64, align: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!899, !1019, !950, !903}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1626, file: !35, line: 3712, baseType: !1639, size: 64, align: 64, offset: 320)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64, align: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!899, !1019, !899, !950, !903}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1626, file: !35, line: 3726, baseType: !1635, size: 64, align: 64, offset: 384)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1626, file: !35, line: 3737, baseType: !1118, size: 64, align: 64, offset: 448)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1626, file: !35, line: 3746, baseType: !899, size: 32, align: 32, offset: 512)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1626, file: !35, line: 3757, baseType: !1646, size: 64, align: 64, offset: 576)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64, align: 64)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{null, !1649}
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64, align: 64)
!1650 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1626, file: !35, line: 3766, baseType: !1118, size: 64, align: 64, offset: 640)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1626, file: !35, line: 3774, baseType: !1118, size: 64, align: 64, offset: 704)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1626, file: !35, line: 3780, baseType: !899, size: 32, align: 32, offset: 768)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1626, file: !35, line: 3785, baseType: !899, size: 32, align: 32, offset: 800)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1626, file: !35, line: 3795, baseType: !1656, size: 64, align: 64, offset: 832)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64, align: 64)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!899, !1019, !1198}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1021, file: !35, line: 2728, baseType: !1037, size: 64, align: 64, offset: 5440)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1021, file: !35, line: 2735, baseType: !1251, size: 512, align: 64, offset: 5504)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1021, file: !35, line: 2742, baseType: !899, size: 32, align: 32, offset: 6016)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1021, file: !35, line: 2755, baseType: !899, size: 32, align: 32, offset: 6048)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1021, file: !35, line: 2776, baseType: !899, size: 32, align: 32, offset: 6080)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1021, file: !35, line: 2783, baseType: !899, size: 32, align: 32, offset: 6112)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1021, file: !35, line: 2791, baseType: !899, size: 32, align: 32, offset: 6144)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1021, file: !35, line: 2802, baseType: !1327, size: 64, align: 64, offset: 6208)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1021, file: !35, line: 2811, baseType: !899, size: 32, align: 32, offset: 6272)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1021, file: !35, line: 2821, baseType: !899, size: 32, align: 32, offset: 6304)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1021, file: !35, line: 2830, baseType: !899, size: 32, align: 32, offset: 6336)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1021, file: !35, line: 2840, baseType: !899, size: 32, align: 32, offset: 6368)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1021, file: !35, line: 2851, baseType: !1672, size: 64, align: 64, offset: 6400)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64, align: 64)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{!899, !1494, !1675, !1037, !1309, !899, !899}
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64, align: 64)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{!899, !1494, !1037}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1021, file: !35, line: 2871, baseType: !1679, size: 64, align: 64, offset: 6464)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64, align: 64)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!899, !1494, !1682, !1037, !1309, !899}
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64, align: 64)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!899, !1494, !1037, !899, !899}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1021, file: !35, line: 2878, baseType: !899, size: 32, align: 32, offset: 6528)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1021, file: !35, line: 2885, baseType: !899, size: 32, align: 32, offset: 6560)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1021, file: !35, line: 3005, baseType: !899, size: 32, align: 32, offset: 6592)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1021, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1021, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1021, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1021, file: !35, line: 3037, baseType: !1145, size: 64, align: 64, offset: 6720)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1021, file: !35, line: 3038, baseType: !899, size: 32, align: 32, offset: 6784)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1021, file: !35, line: 3050, baseType: !1101, size: 64, align: 64, offset: 6848)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1021, file: !35, line: 3065, baseType: !899, size: 32, align: 32, offset: 6912)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1021, file: !35, line: 3083, baseType: !899, size: 32, align: 32, offset: 6944)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1021, file: !35, line: 3092, baseType: !1083, size: 64, align: 32, offset: 6976)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1021, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1021, file: !35, line: 3106, baseType: !1083, size: 64, align: 32, offset: 7072)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1021, file: !35, line: 3113, baseType: !1700, size: 64, align: 64, offset: 7168)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64, align: 64)
!1701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1702)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1708, !1709, !1710, !1713}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1703, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1703, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1703, file: !35, line: 720, baseType: !1030, size: 64, align: 64, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1703, file: !35, line: 724, baseType: !1030, size: 64, align: 64, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1703, file: !35, line: 728, baseType: !899, size: 32, align: 32, offset: 192)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1703, file: !35, line: 734, baseType: !1711, size: 64, align: 64, offset: 256)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64, align: 64)
!1712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1703, file: !35, line: 739, baseType: !1714, size: 64, align: 64, offset: 320)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64, align: 64)
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1109)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1021, file: !35, line: 3129, baseType: !1187, size: 64, align: 64, offset: 7232)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1021, file: !35, line: 3130, baseType: !1187, size: 64, align: 64, offset: 7296)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1021, file: !35, line: 3131, baseType: !1187, size: 64, align: 64, offset: 7360)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1021, file: !35, line: 3132, baseType: !1187, size: 64, align: 64, offset: 7424)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1021, file: !35, line: 3139, baseType: !1183, size: 64, align: 64, offset: 7488)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1021, file: !35, line: 3147, baseType: !899, size: 32, align: 32, offset: 7552)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1021, file: !35, line: 3165, baseType: !899, size: 32, align: 32, offset: 7584)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1021, file: !35, line: 3172, baseType: !899, size: 32, align: 32, offset: 7616)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1021, file: !35, line: 3180, baseType: !899, size: 32, align: 32, offset: 7648)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1021, file: !35, line: 3191, baseType: !1530, size: 64, align: 64, offset: 7680)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1021, file: !35, line: 3199, baseType: !1145, size: 64, align: 64, offset: 7744)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1021, file: !35, line: 3207, baseType: !1183, size: 64, align: 64, offset: 7808)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1021, file: !35, line: 3214, baseType: !900, size: 32, align: 32, offset: 7872)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1021, file: !35, line: 3224, baseType: !1216, size: 64, align: 64, offset: 7936)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1021, file: !35, line: 3225, baseType: !899, size: 32, align: 32, offset: 8000)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1021, file: !35, line: 3249, baseType: !1198, size: 64, align: 64, offset: 8064)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1021, file: !35, line: 3256, baseType: !899, size: 32, align: 32, offset: 8128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1021, file: !35, line: 3271, baseType: !899, size: 32, align: 32, offset: 8160)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1021, file: !35, line: 3279, baseType: !1187, size: 64, align: 64, offset: 8192)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1021, file: !35, line: 3301, baseType: !1198, size: 64, align: 64, offset: 8256)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1021, file: !35, line: 3310, baseType: !899, size: 32, align: 32, offset: 8320)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1021, file: !35, line: 3337, baseType: !899, size: 32, align: 32, offset: 8352)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1021, file: !35, line: 3351, baseType: !899, size: 32, align: 32, offset: 8384)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1021, file: !35, line: 3359, baseType: !899, size: 32, align: 32, offset: 8416)
!1740 = !{}
!1741 = !DILocalVariable(name: "avctx", arg: 1, scope: !1015, file: !1016, line: 81, type: !1019)
!1742 = !DIExpression()
!1743 = !DILocation(line: 81, column: 55, scope: !1015)
!1744 = !DILocalVariable(name: "flags2", arg: 2, scope: !1015, file: !1016, line: 81, type: !899)
!1745 = !DILocation(line: 81, column: 66, scope: !1015)
!1746 = !DILocalVariable(name: "s", scope: !1015, file: !1016, line: 83, type: !1747)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64, align: 64)
!1748 = !DIDerivedType(tag: DW_TAG_typedef, name: "WMACodecContext", file: !943, line: 139, baseType: !1749)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WMACodecContext", file: !943, line: 67, size: 1408512, align: 256, elements: !1750)
!1750 = !{!1751, !1752, !1762, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1794, !1798, !1801, !1802, !1803, !1804, !1805, !1808, !1809, !1812, !1813, !1815, !1817, !1820, !1821, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1837, !1839, !1843, !1845, !1848, !1849, !1855, !1898, !1901, !1904, !1908, !1909, !1910, !1914, !1915, !1916, !1919, !1923, !1927, !1928}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1749, file: !943, line: 68, baseType: !1019, size: 64, align: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1749, file: !943, line: 69, baseType: !1753, size: 256, align: 64, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1754, line: 70, baseType: !1755)
!1754 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1754, line: 61, size: 256, align: 64, elements: !1756)
!1756 = !{!1757, !1758, !1759, !1760, !1761}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1755, file: !1754, line: 62, baseType: !950, size: 64, align: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1755, file: !1754, line: 62, baseType: !950, size: 64, align: 64, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1755, file: !1754, line: 67, baseType: !899, size: 32, align: 32, offset: 128)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1755, file: !1754, line: 68, baseType: !899, size: 32, align: 32, offset: 160)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1755, file: !1754, line: 69, baseType: !899, size: 32, align: 32, offset: 192)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1749, file: !943, line: 70, baseType: !1763, size: 320, align: 64, offset: 320)
!1763 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1764, line: 40, baseType: !1765)
!1764 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1764, line: 35, size: 320, align: 64, elements: !1766)
!1766 = !{!1767, !1768, !1769, !1770, !1771, !1772}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1765, file: !1764, line: 36, baseType: !903, size: 32, align: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1765, file: !1764, line: 37, baseType: !899, size: 32, align: 32, offset: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1765, file: !1764, line: 38, baseType: !1145, size: 64, align: 64, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1765, file: !1764, line: 38, baseType: !1145, size: 64, align: 64, offset: 128)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1765, file: !1764, line: 38, baseType: !1145, size: 64, align: 64, offset: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1765, file: !1764, line: 39, baseType: !899, size: 32, align: 32, offset: 256)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1749, file: !943, line: 71, baseType: !899, size: 32, align: 32, offset: 640)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "use_bit_reservoir", scope: !1749, file: !943, line: 72, baseType: !899, size: 32, align: 32, offset: 672)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "use_variable_block_len", scope: !1749, file: !943, line: 73, baseType: !899, size: 32, align: 32, offset: 704)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "use_exp_vlc", scope: !1749, file: !943, line: 74, baseType: !899, size: 32, align: 32, offset: 736)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "use_noise_coding", scope: !1749, file: !943, line: 75, baseType: !899, size: 32, align: 32, offset: 768)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "byte_offset_bits", scope: !1749, file: !943, line: 76, baseType: !899, size: 32, align: 32, offset: 800)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "exp_vlc", scope: !1749, file: !943, line: 77, baseType: !1780, size: 192, align: 64, offset: 832)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1781, line: 30, baseType: !1782)
!1781 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1781, line: 26, size: 192, align: 64, elements: !1783)
!1783 = !{!1784, !1785, !1792, !1793}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1782, file: !1781, line: 27, baseType: !899, size: 32, align: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1782, file: !1781, line: 28, baseType: !1786, size: 64, align: 64, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64, align: 64)
!1787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1788, size: 32, align: 16, elements: !1790)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !904, line: 37, baseType: !1789)
!1789 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1790 = !{!1791}
!1791 = !DISubrange(count: 2)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1782, file: !1781, line: 29, baseType: !899, size: 32, align: 32, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1782, file: !1781, line: 29, baseType: !899, size: 32, align: 32, offset: 160)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "exponent_sizes", scope: !1749, file: !943, line: 78, baseType: !1795, size: 160, align: 32, offset: 1024)
!1795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 160, align: 32, elements: !1796)
!1796 = !{!1797}
!1797 = !DISubrange(count: 5)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "exponent_bands", scope: !1749, file: !943, line: 79, baseType: !1799, size: 2000, align: 16, offset: 1184)
!1799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !919, size: 2000, align: 16, elements: !1800)
!1800 = !{!1797, !936}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "high_band_start", scope: !1749, file: !943, line: 80, baseType: !1795, size: 160, align: 32, offset: 3200)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "coefs_start", scope: !1749, file: !943, line: 81, baseType: !899, size: 32, align: 32, offset: 3360)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "coefs_end", scope: !1749, file: !943, line: 82, baseType: !1795, size: 160, align: 32, offset: 3392)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "exponent_high_sizes", scope: !1749, file: !943, line: 83, baseType: !1795, size: 160, align: 32, offset: 3552)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "exponent_high_bands", scope: !1749, file: !943, line: 84, baseType: !1806, size: 2560, align: 32, offset: 3712)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 2560, align: 32, elements: !1807)
!1807 = !{!1797, !931}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "hgain_vlc", scope: !1749, file: !943, line: 85, baseType: !1780, size: 192, align: 64, offset: 6272)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "high_band_coded", scope: !1749, file: !943, line: 88, baseType: !1810, size: 1024, align: 32, offset: 6464)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 1024, align: 32, elements: !1811)
!1811 = !{!1791, !931}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "high_band_values", scope: !1749, file: !943, line: 89, baseType: !1810, size: 1024, align: 32, offset: 7488)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "coef_vlc", scope: !1749, file: !943, line: 93, baseType: !1814, size: 384, align: 64, offset: 8512)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1780, size: 384, align: 64, elements: !1790)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "run_table", scope: !1749, file: !943, line: 94, baseType: !1816, size: 128, align: 64, offset: 8896)
!1816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1530, size: 128, align: 64, elements: !1790)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "level_table", scope: !1749, file: !943, line: 95, baseType: !1818, size: 128, align: 64, offset: 9024)
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 128, align: 64, elements: !1790)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64, align: 64)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "int_table", scope: !1749, file: !943, line: 96, baseType: !1816, size: 128, align: 64, offset: 9152)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "coef_vlcs", scope: !1749, file: !943, line: 97, baseType: !1822, size: 128, align: 64, offset: 9280)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1823, size: 128, align: 64, elements: !1790)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64, align: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "frame_len", scope: !1749, file: !943, line: 99, baseType: !899, size: 32, align: 32, offset: 9408)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "frame_len_bits", scope: !1749, file: !943, line: 100, baseType: !899, size: 32, align: 32, offset: 9440)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "nb_block_sizes", scope: !1749, file: !943, line: 101, baseType: !899, size: 32, align: 32, offset: 9472)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "reset_block_lengths", scope: !1749, file: !943, line: 103, baseType: !899, size: 32, align: 32, offset: 9504)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "block_len_bits", scope: !1749, file: !943, line: 104, baseType: !899, size: 32, align: 32, offset: 9536)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "next_block_len_bits", scope: !1749, file: !943, line: 105, baseType: !899, size: 32, align: 32, offset: 9568)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "prev_block_len_bits", scope: !1749, file: !943, line: 106, baseType: !899, size: 32, align: 32, offset: 9600)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "block_len", scope: !1749, file: !943, line: 107, baseType: !899, size: 32, align: 32, offset: 9632)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1749, file: !943, line: 108, baseType: !899, size: 32, align: 32, offset: 9664)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "block_pos", scope: !1749, file: !943, line: 109, baseType: !899, size: 32, align: 32, offset: 9696)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "ms_stereo", scope: !1749, file: !943, line: 110, baseType: !912, size: 8, align: 8, offset: 9728)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "channel_coded", scope: !1749, file: !943, line: 111, baseType: !1836, size: 16, align: 8, offset: 9736)
!1836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 16, align: 8, elements: !1790)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "exponents_bsize", scope: !1749, file: !943, line: 112, baseType: !1838, size: 64, align: 32, offset: 9760)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 64, align: 32, elements: !1790)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "exponents", scope: !1749, file: !943, line: 113, baseType: !1840, size: 131072, align: 32, offset: 9984)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 131072, align: 32, elements: !1841)
!1841 = !{!1791, !1842}
!1842 = !DISubrange(count: 2048)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "max_exponent", scope: !1749, file: !943, line: 114, baseType: !1844, size: 64, align: 32, offset: 141056)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 64, align: 32, elements: !1790)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "coefs1", scope: !1749, file: !943, line: 115, baseType: !1846, size: 131072, align: 32, offset: 141120)
!1846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1847, size: 131072, align: 32, elements: !1841)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "WMACoef", file: !943, line: 57, baseType: !898)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "coefs", scope: !1749, file: !943, line: 116, baseType: !1840, size: 131072, align: 32, offset: 272384)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1749, file: !943, line: 117, baseType: !1850, size: 131072, align: 32, offset: 403456)
!1850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1851, size: 131072, align: 32, elements: !1853)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !1852, line: 35, baseType: !898)
!1852 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1853 = !{!1854}
!1854 = !DISubrange(count: 4096)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ctx", scope: !1749, file: !943, line: 118, baseType: !1856, size: 4480, align: 64, offset: 534528)
!1856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1857, size: 4480, align: 64, elements: !1796)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !1852, line: 41, baseType: !1858)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !888, line: 88, size: 896, align: 64, elements: !1859)
!1859 = !{!1860, !1861, !1862, !1863, !1870, !1871, !1872, !1874, !1875, !1880, !1881, !1887, !1888, !1889, !1895, !1896, !1897}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1858, file: !888, line: 89, baseType: !899, size: 32, align: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1858, file: !888, line: 90, baseType: !899, size: 32, align: 32, offset: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1858, file: !888, line: 91, baseType: !1530, size: 64, align: 64, offset: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1858, file: !888, line: 92, baseType: !1864, size: 64, align: 64, offset: 128)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64, align: 64)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !1852, line: 39, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !1852, line: 37, size: 64, align: 32, elements: !1867)
!1867 = !{!1868, !1869}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !1866, file: !1852, line: 38, baseType: !1851, size: 32, align: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1866, file: !1852, line: 38, baseType: !1851, size: 32, align: 32, offset: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1858, file: !888, line: 93, baseType: !899, size: 32, align: 32, offset: 192)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1858, file: !888, line: 94, baseType: !899, size: 32, align: 32, offset: 224)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1858, file: !888, line: 96, baseType: !1873, size: 64, align: 64, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64, align: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1858, file: !888, line: 97, baseType: !1873, size: 64, align: 64, offset: 320)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1858, file: !888, line: 101, baseType: !1876, size: 64, align: 64, offset: 384)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64, align: 64)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{null, !1879, !1864}
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64, align: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1858, file: !888, line: 106, baseType: !1876, size: 64, align: 64, offset: 448)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1858, file: !888, line: 107, baseType: !1882, size: 64, align: 64, offset: 512)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64, align: 64)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{null, !1879, !1873, !1885}
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64, align: 64)
!1886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1851)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1858, file: !888, line: 108, baseType: !1882, size: 64, align: 64, offset: 576)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1858, file: !888, line: 109, baseType: !1882, size: 64, align: 64, offset: 640)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1858, file: !888, line: 110, baseType: !1890, size: 64, align: 64, offset: 704)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64, align: 64)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{null, !1879, !1893, !1885}
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64, align: 64)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !888, line: 43, baseType: !898)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1858, file: !888, line: 111, baseType: !887, size: 32, align: 32, offset: 768)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1858, file: !888, line: 112, baseType: !893, size: 32, align: 32, offset: 800)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1858, file: !888, line: 113, baseType: !905, size: 64, align: 64, offset: 832)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !1749, file: !943, line: 119, baseType: !1899, size: 320, align: 64, offset: 539008)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1900, size: 320, align: 64, elements: !1796)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64, align: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "frame_out", scope: !1749, file: !943, line: 121, baseType: !1902, size: 262144, align: 32, offset: 539392)
!1902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 262144, align: 32, elements: !1903)
!1903 = !{!1791, !1854}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "last_superframe", scope: !1749, file: !943, line: 123, baseType: !1905, size: 262656, align: 8, offset: 801536)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 262656, align: 8, elements: !1906)
!1906 = !{!1907}
!1907 = !DISubrange(count: 32832)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "last_bitoffset", scope: !1749, file: !943, line: 124, baseType: !899, size: 32, align: 32, offset: 1064192)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "last_superframe_len", scope: !1749, file: !943, line: 125, baseType: !899, size: 32, align: 32, offset: 1064224)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "noise_table", scope: !1749, file: !943, line: 126, baseType: !1911, size: 262144, align: 32, offset: 1064256)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 262144, align: 32, elements: !1912)
!1912 = !{!1913}
!1913 = !DISubrange(count: 8192)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "noise_index", scope: !1749, file: !943, line: 127, baseType: !899, size: 32, align: 32, offset: 1326400)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "noise_mult", scope: !1749, file: !943, line: 128, baseType: !898, size: 32, align: 32, offset: 1326432)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "lsp_cos_table", scope: !1749, file: !943, line: 130, baseType: !1917, size: 65536, align: 32, offset: 1326464)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 65536, align: 32, elements: !1918)
!1918 = !{!1842}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "lsp_pow_e_table", scope: !1749, file: !943, line: 131, baseType: !1920, size: 8192, align: 32, offset: 1392000)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 8192, align: 32, elements: !1921)
!1921 = !{!1922}
!1922 = !DISubrange(count: 256)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "lsp_pow_m_table1", scope: !1749, file: !943, line: 132, baseType: !1924, size: 4096, align: 32, offset: 1400192)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 4096, align: 32, elements: !1925)
!1925 = !{!1926}
!1926 = !DISubrange(count: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "lsp_pow_m_table2", scope: !1749, file: !943, line: 133, baseType: !1924, size: 4096, align: 32, offset: 1404288)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1749, file: !943, line: 134, baseType: !1929, size: 64, align: 64, offset: 1408384)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64, align: 64)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1931, line: 192, baseType: !1932)
!1931 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1931, line: 24, size: 704, align: 64, elements: !1933)
!1933 = !{!1934, !1938, !1942, !1950, !1951, !1952, !1956, !1957, !1958, !1963, !1967}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1932, file: !1931, line: 38, baseType: !1935, size: 64, align: 64)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64, align: 64)
!1936 = !DISubroutineType(types: !1937)
!1937 = !{null, !1819, !1900, !1900, !899}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1932, file: !1931, line: 54, baseType: !1939, size: 64, align: 64, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64, align: 64)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{null, !1819, !1900, !898, !899}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1932, file: !1931, line: 70, baseType: !1943, size: 64, align: 64, offset: 128)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64, align: 64)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{null, !1946, !1948, !1947, !899}
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64, align: 64)
!1947 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64, align: 64)
!1949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1947)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1932, file: !1931, line: 85, baseType: !1939, size: 64, align: 64, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1932, file: !1931, line: 100, baseType: !1943, size: 64, align: 64, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1932, file: !1931, line: 119, baseType: !1953, size: 64, align: 64, offset: 320)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64, align: 64)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{null, !1819, !1900, !1900, !1900, !899}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1932, file: !1931, line: 137, baseType: !1953, size: 64, align: 64, offset: 384)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1932, file: !1931, line: 154, baseType: !1935, size: 64, align: 64, offset: 448)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1932, file: !1931, line: 164, baseType: !1959, size: 64, align: 64, offset: 512)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64, align: 64)
!1960 = !DISubroutineType(types: !1961)
!1961 = !{null, !1962, !1962, !899}
!1962 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1819)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1932, file: !1931, line: 175, baseType: !1964, size: 64, align: 64, offset: 576)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64, align: 64)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!898, !1900, !1900, !899}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1932, file: !1931, line: 190, baseType: !1968, size: 64, align: 64, offset: 640)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64, align: 64)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{null, !1946, !1948, !1948, !899}
!1971 = !DILocation(line: 83, column: 22, scope: !1015)
!1972 = !DILocation(line: 83, column: 26, scope: !1015)
!1973 = !DILocation(line: 83, column: 33, scope: !1015)
!1974 = !DILocalVariable(name: "i", scope: !1015, file: !1016, line: 84, type: !899)
!1975 = !DILocation(line: 84, column: 9, scope: !1015)
!1976 = !DILocalVariable(name: "ret", scope: !1015, file: !1016, line: 84, type: !899)
!1977 = !DILocation(line: 84, column: 12, scope: !1015)
!1978 = !DILocalVariable(name: "bps1", scope: !1015, file: !1016, line: 85, type: !898)
!1979 = !DILocation(line: 85, column: 11, scope: !1015)
!1980 = !DILocalVariable(name: "high_freq", scope: !1015, file: !1016, line: 85, type: !898)
!1981 = !DILocation(line: 85, column: 17, scope: !1015)
!1982 = !DILocalVariable(name: "bps", scope: !1015, file: !1016, line: 86, type: !1983)
!1983 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !898)
!1984 = !DILocation(line: 86, column: 20, scope: !1015)
!1985 = !DILocalVariable(name: "sample_rate1", scope: !1015, file: !1016, line: 87, type: !899)
!1986 = !DILocation(line: 87, column: 9, scope: !1015)
!1987 = !DILocalVariable(name: "coef_vlc_table", scope: !1015, file: !1016, line: 88, type: !899)
!1988 = !DILocation(line: 88, column: 9, scope: !1015)
!1989 = !DILocation(line: 90, column: 9, scope: !1990)
!1990 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 90, column: 9)
!1991 = !DILocation(line: 90, column: 16, scope: !1990)
!1992 = !DILocation(line: 90, column: 28, scope: !1990)
!1993 = !DILocation(line: 90, column: 33, scope: !1990)
!1994 = !DILocation(line: 90, column: 36, scope: !1995)
!1995 = !DILexicalBlockFile(scope: !1990, file: !1016, discriminator: 1)
!1996 = !DILocation(line: 90, column: 43, scope: !1995)
!1997 = !DILocation(line: 90, column: 55, scope: !1995)
!1998 = !DILocation(line: 90, column: 63, scope: !1995)
!1999 = !DILocation(line: 91, column: 9, scope: !1990)
!2000 = !DILocation(line: 91, column: 16, scope: !1990)
!2001 = !DILocation(line: 91, column: 25, scope: !1990)
!2002 = !DILocation(line: 91, column: 30, scope: !1990)
!2003 = !DILocation(line: 91, column: 33, scope: !1995)
!2004 = !DILocation(line: 91, column: 40, scope: !1995)
!2005 = !DILocation(line: 91, column: 49, scope: !1995)
!2006 = !DILocation(line: 91, column: 53, scope: !1995)
!2007 = !DILocation(line: 92, column: 9, scope: !1990)
!2008 = !DILocation(line: 92, column: 16, scope: !1990)
!2009 = !DILocation(line: 92, column: 25, scope: !1990)
!2010 = !DILocation(line: 90, column: 9, scope: !2011)
!2011 = !DILexicalBlockFile(scope: !1015, file: !1016, discriminator: 2)
!2012 = !DILocation(line: 93, column: 9, scope: !1990)
!2013 = !DILocation(line: 96, column: 9, scope: !2014)
!2014 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 96, column: 9)
!2015 = !DILocation(line: 96, column: 16, scope: !2014)
!2016 = !DILocation(line: 96, column: 23, scope: !2014)
!2017 = !DILocation(line: 96, column: 26, scope: !2014)
!2018 = !DILocation(line: 96, column: 9, scope: !1015)
!2019 = !DILocation(line: 97, column: 9, scope: !2014)
!2020 = !DILocation(line: 97, column: 12, scope: !2014)
!2021 = !DILocation(line: 97, column: 20, scope: !2014)
!2022 = !DILocation(line: 99, column: 9, scope: !2014)
!2023 = !DILocation(line: 99, column: 12, scope: !2014)
!2024 = !DILocation(line: 99, column: 20, scope: !2014)
!2025 = !DILocation(line: 102, column: 51, scope: !1015)
!2026 = !DILocation(line: 102, column: 58, scope: !1015)
!2027 = !DILocation(line: 103, column: 51, scope: !1015)
!2028 = !DILocation(line: 103, column: 54, scope: !1015)
!2029 = !DILocation(line: 102, column: 25, scope: !1015)
!2030 = !DILocation(line: 102, column: 5, scope: !1015)
!2031 = !DILocation(line: 102, column: 8, scope: !1015)
!2032 = !DILocation(line: 102, column: 23, scope: !1015)
!2033 = !DILocation(line: 104, column: 30, scope: !1015)
!2034 = !DILocation(line: 104, column: 33, scope: !1015)
!2035 = !DILocation(line: 104, column: 5, scope: !1015)
!2036 = !DILocation(line: 104, column: 8, scope: !1015)
!2037 = !DILocation(line: 104, column: 28, scope: !1015)
!2038 = !DILocation(line: 105, column: 30, scope: !1015)
!2039 = !DILocation(line: 105, column: 33, scope: !1015)
!2040 = !DILocation(line: 105, column: 5, scope: !1015)
!2041 = !DILocation(line: 105, column: 8, scope: !1015)
!2042 = !DILocation(line: 105, column: 28, scope: !1015)
!2043 = !DILocation(line: 106, column: 25, scope: !1015)
!2044 = !DILocation(line: 106, column: 28, scope: !1015)
!2045 = !DILocation(line: 106, column: 5, scope: !1015)
!2046 = !DILocation(line: 106, column: 8, scope: !1015)
!2047 = !DILocation(line: 106, column: 23, scope: !1015)
!2048 = !DILocation(line: 108, column: 25, scope: !1015)
!2049 = !DILocation(line: 108, column: 28, scope: !1015)
!2050 = !DILocation(line: 108, column: 22, scope: !1015)
!2051 = !DILocation(line: 108, column: 5, scope: !1015)
!2052 = !DILocation(line: 108, column: 8, scope: !1015)
!2053 = !DILocation(line: 108, column: 18, scope: !1015)
!2054 = !DILocation(line: 109, column: 9, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 109, column: 9)
!2056 = !DILocation(line: 109, column: 12, scope: !2055)
!2057 = !DILocation(line: 109, column: 9, scope: !1015)
!2058 = !DILocalVariable(name: "nb_max", scope: !2059, file: !1016, line: 110, type: !899)
!2059 = distinct !DILexicalBlock(scope: !2055, file: !1016, line: 109, column: 36)
!2060 = !DILocation(line: 110, column: 13, scope: !2059)
!2061 = !DILocalVariable(name: "nb", scope: !2059, file: !1016, line: 110, type: !899)
!2062 = !DILocation(line: 110, column: 21, scope: !2059)
!2063 = !DILocation(line: 111, column: 16, scope: !2059)
!2064 = !DILocation(line: 111, column: 23, scope: !2059)
!2065 = !DILocation(line: 111, column: 29, scope: !2059)
!2066 = !DILocation(line: 111, column: 34, scope: !2059)
!2067 = !DILocation(line: 111, column: 12, scope: !2059)
!2068 = !DILocation(line: 112, column: 14, scope: !2069)
!2069 = distinct !DILexicalBlock(scope: !2059, file: !1016, line: 112, column: 13)
!2070 = !DILocation(line: 112, column: 21, scope: !2069)
!2071 = !DILocation(line: 112, column: 32, scope: !2069)
!2072 = !DILocation(line: 112, column: 39, scope: !2069)
!2073 = !DILocation(line: 112, column: 30, scope: !2069)
!2074 = !DILocation(line: 112, column: 49, scope: !2069)
!2075 = !DILocation(line: 112, column: 13, scope: !2059)
!2076 = !DILocation(line: 113, column: 16, scope: !2069)
!2077 = !DILocation(line: 113, column: 13, scope: !2069)
!2078 = !DILocation(line: 114, column: 18, scope: !2059)
!2079 = !DILocation(line: 114, column: 21, scope: !2059)
!2080 = !DILocation(line: 114, column: 36, scope: !2059)
!2081 = !DILocation(line: 114, column: 16, scope: !2059)
!2082 = !DILocation(line: 115, column: 13, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !2059, file: !1016, line: 115, column: 13)
!2084 = !DILocation(line: 115, column: 18, scope: !2083)
!2085 = !DILocation(line: 115, column: 16, scope: !2083)
!2086 = !DILocation(line: 115, column: 13, scope: !2059)
!2087 = !DILocation(line: 116, column: 18, scope: !2083)
!2088 = !DILocation(line: 116, column: 16, scope: !2083)
!2089 = !DILocation(line: 116, column: 13, scope: !2083)
!2090 = !DILocation(line: 117, column: 29, scope: !2059)
!2091 = !DILocation(line: 117, column: 32, scope: !2059)
!2092 = !DILocation(line: 117, column: 9, scope: !2059)
!2093 = !DILocation(line: 117, column: 12, scope: !2059)
!2094 = !DILocation(line: 117, column: 27, scope: !2059)
!2095 = !DILocation(line: 118, column: 5, scope: !2059)
!2096 = !DILocation(line: 119, column: 9, scope: !2055)
!2097 = !DILocation(line: 119, column: 12, scope: !2055)
!2098 = !DILocation(line: 119, column: 27, scope: !2055)
!2099 = !DILocation(line: 122, column: 5, scope: !1015)
!2100 = !DILocation(line: 122, column: 8, scope: !1015)
!2101 = !DILocation(line: 122, column: 25, scope: !1015)
!2102 = !DILocation(line: 123, column: 17, scope: !1015)
!2103 = !DILocation(line: 123, column: 24, scope: !1015)
!2104 = !DILocation(line: 123, column: 36, scope: !1015)
!2105 = !DILocation(line: 123, column: 15, scope: !1015)
!2106 = !DILocation(line: 126, column: 20, scope: !1015)
!2107 = !DILocation(line: 126, column: 27, scope: !1015)
!2108 = !DILocation(line: 126, column: 18, scope: !1015)
!2109 = !DILocation(line: 127, column: 9, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 127, column: 9)
!2111 = !DILocation(line: 127, column: 12, scope: !2110)
!2112 = !DILocation(line: 127, column: 20, scope: !2110)
!2113 = !DILocation(line: 127, column: 9, scope: !1015)
!2114 = !DILocation(line: 128, column: 13, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2116, file: !1016, line: 128, column: 13)
!2116 = distinct !DILexicalBlock(scope: !2110, file: !1016, line: 127, column: 26)
!2117 = !DILocation(line: 128, column: 26, scope: !2115)
!2118 = !DILocation(line: 128, column: 13, scope: !2116)
!2119 = !DILocation(line: 129, column: 26, scope: !2115)
!2120 = !DILocation(line: 129, column: 13, scope: !2115)
!2121 = !DILocation(line: 130, column: 18, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !2115, file: !1016, line: 130, column: 18)
!2123 = !DILocation(line: 130, column: 31, scope: !2122)
!2124 = !DILocation(line: 130, column: 18, scope: !2115)
!2125 = !DILocation(line: 131, column: 26, scope: !2122)
!2126 = !DILocation(line: 131, column: 13, scope: !2122)
!2127 = !DILocation(line: 132, column: 18, scope: !2128)
!2128 = distinct !DILexicalBlock(scope: !2122, file: !1016, line: 132, column: 18)
!2129 = !DILocation(line: 132, column: 31, scope: !2128)
!2130 = !DILocation(line: 132, column: 18, scope: !2122)
!2131 = !DILocation(line: 133, column: 26, scope: !2128)
!2132 = !DILocation(line: 133, column: 13, scope: !2128)
!2133 = !DILocation(line: 134, column: 18, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2128, file: !1016, line: 134, column: 18)
!2135 = !DILocation(line: 134, column: 31, scope: !2134)
!2136 = !DILocation(line: 134, column: 18, scope: !2128)
!2137 = !DILocation(line: 135, column: 26, scope: !2134)
!2138 = !DILocation(line: 135, column: 13, scope: !2134)
!2139 = !DILocation(line: 136, column: 18, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2134, file: !1016, line: 136, column: 18)
!2141 = !DILocation(line: 136, column: 31, scope: !2140)
!2142 = !DILocation(line: 136, column: 18, scope: !2134)
!2143 = !DILocation(line: 137, column: 26, scope: !2140)
!2144 = !DILocation(line: 137, column: 13, scope: !2140)
!2145 = !DILocation(line: 138, column: 5, scope: !2116)
!2146 = !DILocation(line: 140, column: 19, scope: !1015)
!2147 = !DILocation(line: 140, column: 26, scope: !1015)
!2148 = !DILocation(line: 140, column: 11, scope: !1015)
!2149 = !DILocation(line: 141, column: 36, scope: !1015)
!2150 = !DILocation(line: 141, column: 43, scope: !1015)
!2151 = !DILocation(line: 141, column: 54, scope: !1015)
!2152 = !DILocation(line: 141, column: 61, scope: !1015)
!2153 = !DILocation(line: 141, column: 52, scope: !1015)
!2154 = !DILocation(line: 141, column: 27, scope: !1015)
!2155 = !DILocation(line: 140, column: 35, scope: !1015)
!2156 = !DILocation(line: 140, column: 9, scope: !1015)
!2157 = !DILocation(line: 142, column: 55, scope: !1015)
!2158 = !DILocation(line: 142, column: 61, scope: !1015)
!2159 = !DILocation(line: 142, column: 64, scope: !1015)
!2160 = !DILocation(line: 142, column: 59, scope: !1015)
!2161 = !DILocation(line: 142, column: 74, scope: !1015)
!2162 = !DILocation(line: 142, column: 80, scope: !1015)
!2163 = !DILocation(line: 142, column: 48, scope: !1015)
!2164 = !DILocation(line: 142, column: 87, scope: !1015)
!2165 = !DILocation(line: 142, column: 33, scope: !1015)
!2166 = !DILocation(line: 142, column: 31, scope: !1015)
!2167 = !DILocation(line: 142, column: 92, scope: !1015)
!2168 = !DILocation(line: 142, column: 5, scope: !1015)
!2169 = !DILocation(line: 142, column: 8, scope: !1015)
!2170 = !DILocation(line: 142, column: 25, scope: !1015)
!2171 = !DILocation(line: 143, column: 9, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 143, column: 9)
!2173 = !DILocation(line: 143, column: 12, scope: !2172)
!2174 = !DILocation(line: 143, column: 29, scope: !2172)
!2175 = !DILocation(line: 143, column: 33, scope: !2172)
!2176 = !DILocation(line: 143, column: 9, scope: !1015)
!2177 = !DILocation(line: 144, column: 16, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2172, file: !1016, line: 143, column: 39)
!2179 = !DILocation(line: 144, column: 65, scope: !2178)
!2180 = !DILocation(line: 144, column: 68, scope: !2178)
!2181 = !DILocation(line: 144, column: 9, scope: !2178)
!2182 = !DILocation(line: 145, column: 9, scope: !2178)
!2183 = !DILocation(line: 150, column: 12, scope: !1015)
!2184 = !DILocation(line: 150, column: 10, scope: !1015)
!2185 = !DILocation(line: 151, column: 9, scope: !2186)
!2186 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 151, column: 9)
!2187 = !DILocation(line: 151, column: 16, scope: !2186)
!2188 = !DILocation(line: 151, column: 25, scope: !2186)
!2189 = !DILocation(line: 151, column: 9, scope: !1015)
!2190 = !DILocation(line: 152, column: 16, scope: !2186)
!2191 = !DILocation(line: 152, column: 20, scope: !2186)
!2192 = !DILocation(line: 152, column: 14, scope: !2186)
!2193 = !DILocation(line: 152, column: 9, scope: !2186)
!2194 = !DILocation(line: 153, column: 9, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 153, column: 9)
!2196 = !DILocation(line: 153, column: 22, scope: !2195)
!2197 = !DILocation(line: 153, column: 9, scope: !1015)
!2198 = !DILocation(line: 154, column: 13, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2200, file: !1016, line: 154, column: 13)
!2200 = distinct !DILexicalBlock(scope: !2195, file: !1016, line: 153, column: 32)
!2201 = !DILocation(line: 154, column: 18, scope: !2199)
!2202 = !DILocation(line: 154, column: 13, scope: !2200)
!2203 = !DILocation(line: 155, column: 13, scope: !2199)
!2204 = !DILocation(line: 155, column: 16, scope: !2199)
!2205 = !DILocation(line: 155, column: 33, scope: !2199)
!2206 = !DILocation(line: 157, column: 25, scope: !2199)
!2207 = !DILocation(line: 157, column: 35, scope: !2199)
!2208 = !DILocation(line: 157, column: 23, scope: !2199)
!2209 = !DILocation(line: 158, column: 5, scope: !2200)
!2210 = !DILocation(line: 158, column: 16, scope: !2211)
!2211 = !DILexicalBlockFile(scope: !2212, file: !1016, discriminator: 1)
!2212 = distinct !DILexicalBlock(scope: !2195, file: !1016, line: 158, column: 16)
!2213 = !DILocation(line: 158, column: 29, scope: !2211)
!2214 = !DILocation(line: 159, column: 13, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2216, file: !1016, line: 159, column: 13)
!2216 = distinct !DILexicalBlock(scope: !2212, file: !1016, line: 158, column: 39)
!2217 = !DILocation(line: 159, column: 18, scope: !2215)
!2218 = !DILocation(line: 159, column: 13, scope: !2216)
!2219 = !DILocation(line: 160, column: 13, scope: !2215)
!2220 = !DILocation(line: 160, column: 16, scope: !2215)
!2221 = !DILocation(line: 160, column: 33, scope: !2215)
!2222 = !DILocation(line: 161, column: 18, scope: !2223)
!2223 = distinct !DILexicalBlock(scope: !2215, file: !1016, line: 161, column: 18)
!2224 = !DILocation(line: 161, column: 23, scope: !2223)
!2225 = !DILocation(line: 161, column: 18, scope: !2215)
!2226 = !DILocation(line: 162, column: 25, scope: !2223)
!2227 = !DILocation(line: 162, column: 35, scope: !2223)
!2228 = !DILocation(line: 162, column: 23, scope: !2223)
!2229 = !DILocation(line: 162, column: 13, scope: !2223)
!2230 = !DILocation(line: 164, column: 25, scope: !2223)
!2231 = !DILocation(line: 164, column: 35, scope: !2223)
!2232 = !DILocation(line: 164, column: 23, scope: !2223)
!2233 = !DILocation(line: 165, column: 5, scope: !2216)
!2234 = !DILocation(line: 165, column: 16, scope: !2235)
!2235 = !DILexicalBlockFile(scope: !2236, file: !1016, discriminator: 1)
!2236 = distinct !DILexicalBlock(scope: !2212, file: !1016, line: 165, column: 16)
!2237 = !DILocation(line: 165, column: 29, scope: !2235)
!2238 = !DILocation(line: 166, column: 13, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2240, file: !1016, line: 166, column: 13)
!2240 = distinct !DILexicalBlock(scope: !2236, file: !1016, line: 165, column: 39)
!2241 = !DILocation(line: 166, column: 17, scope: !2239)
!2242 = !DILocation(line: 166, column: 13, scope: !2240)
!2243 = !DILocation(line: 167, column: 25, scope: !2239)
!2244 = !DILocation(line: 167, column: 35, scope: !2239)
!2245 = !DILocation(line: 167, column: 23, scope: !2239)
!2246 = !DILocation(line: 167, column: 13, scope: !2239)
!2247 = !DILocation(line: 169, column: 25, scope: !2239)
!2248 = !DILocation(line: 169, column: 35, scope: !2239)
!2249 = !DILocation(line: 169, column: 23, scope: !2239)
!2250 = !DILocation(line: 170, column: 5, scope: !2240)
!2251 = !DILocation(line: 170, column: 16, scope: !2252)
!2252 = !DILexicalBlockFile(scope: !2253, file: !1016, discriminator: 1)
!2253 = distinct !DILexicalBlock(scope: !2236, file: !1016, line: 170, column: 16)
!2254 = !DILocation(line: 170, column: 29, scope: !2252)
!2255 = !DILocation(line: 171, column: 21, scope: !2253)
!2256 = !DILocation(line: 171, column: 31, scope: !2253)
!2257 = !DILocation(line: 171, column: 19, scope: !2253)
!2258 = !DILocation(line: 171, column: 9, scope: !2253)
!2259 = !DILocation(line: 172, column: 14, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2253, file: !1016, line: 172, column: 14)
!2261 = !DILocation(line: 172, column: 27, scope: !2260)
!2262 = !DILocation(line: 172, column: 14, scope: !2253)
!2263 = !DILocation(line: 173, column: 13, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2265, file: !1016, line: 173, column: 13)
!2265 = distinct !DILexicalBlock(scope: !2260, file: !1016, line: 172, column: 36)
!2266 = !DILocation(line: 173, column: 17, scope: !2264)
!2267 = !DILocation(line: 173, column: 13, scope: !2265)
!2268 = !DILocation(line: 174, column: 25, scope: !2264)
!2269 = !DILocation(line: 174, column: 35, scope: !2264)
!2270 = !DILocation(line: 174, column: 23, scope: !2264)
!2271 = !DILocation(line: 174, column: 13, scope: !2264)
!2272 = !DILocation(line: 175, column: 18, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2264, file: !1016, line: 175, column: 18)
!2274 = !DILocation(line: 175, column: 22, scope: !2273)
!2275 = !DILocation(line: 175, column: 18, scope: !2264)
!2276 = !DILocation(line: 176, column: 13, scope: !2273)
!2277 = !DILocation(line: 176, column: 16, scope: !2273)
!2278 = !DILocation(line: 176, column: 33, scope: !2273)
!2279 = !DILocation(line: 178, column: 25, scope: !2273)
!2280 = !DILocation(line: 178, column: 35, scope: !2273)
!2281 = !DILocation(line: 178, column: 23, scope: !2273)
!2282 = !DILocation(line: 179, column: 5, scope: !2265)
!2283 = !DILocation(line: 180, column: 13, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2285, file: !1016, line: 180, column: 13)
!2285 = distinct !DILexicalBlock(scope: !2260, file: !1016, line: 179, column: 12)
!2286 = !DILocation(line: 180, column: 17, scope: !2284)
!2287 = !DILocation(line: 180, column: 13, scope: !2285)
!2288 = !DILocation(line: 181, column: 25, scope: !2284)
!2289 = !DILocation(line: 181, column: 35, scope: !2284)
!2290 = !DILocation(line: 181, column: 23, scope: !2284)
!2291 = !DILocation(line: 181, column: 13, scope: !2284)
!2292 = !DILocation(line: 182, column: 18, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2284, file: !1016, line: 182, column: 18)
!2294 = !DILocation(line: 182, column: 22, scope: !2293)
!2295 = !DILocation(line: 182, column: 18, scope: !2284)
!2296 = !DILocation(line: 183, column: 25, scope: !2293)
!2297 = !DILocation(line: 183, column: 35, scope: !2293)
!2298 = !DILocation(line: 183, column: 23, scope: !2293)
!2299 = !DILocation(line: 183, column: 13, scope: !2293)
!2300 = !DILocation(line: 185, column: 25, scope: !2293)
!2301 = !DILocation(line: 185, column: 35, scope: !2293)
!2302 = !DILocation(line: 185, column: 23, scope: !2293)
!2303 = !DILocation(line: 187, column: 5, scope: !1015)
!2304 = distinct !{!2304, !2303}
!2305 = !DILocation(line: 187, column: 64, scope: !2306)
!2306 = !DILexicalBlockFile(scope: !2307, file: !1016, discriminator: 1)
!2307 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 187, column: 8)
!2308 = !DILocation(line: 188, column: 5, scope: !1015)
!2309 = distinct !{!2309, !2308}
!2310 = !DILocation(line: 188, column: 112, scope: !2311)
!2311 = !DILexicalBlockFile(scope: !2312, file: !1016, discriminator: 1)
!2312 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 188, column: 8)
!2313 = !DILocation(line: 191, column: 5, scope: !1015)
!2314 = distinct !{!2314, !2313}
!2315 = !DILocation(line: 191, column: 128, scope: !2316)
!2316 = !DILexicalBlockFile(scope: !2317, file: !1016, discriminator: 1)
!2317 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 191, column: 8)
!2318 = !DILocation(line: 193, column: 5, scope: !1015)
!2319 = distinct !{!2319, !2318}
!2320 = !DILocation(line: 193, column: 153, scope: !2321)
!2321 = !DILexicalBlockFile(scope: !2322, file: !1016, discriminator: 1)
!2322 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 193, column: 8)
!2323 = !DILocalVariable(name: "a", scope: !2324, file: !1016, line: 198, type: !899)
!2324 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 197, column: 5)
!2325 = !DILocation(line: 198, column: 13, scope: !2324)
!2326 = !DILocalVariable(name: "b", scope: !2324, file: !1016, line: 198, type: !899)
!2327 = !DILocation(line: 198, column: 16, scope: !2324)
!2328 = !DILocalVariable(name: "pos", scope: !2324, file: !1016, line: 198, type: !899)
!2329 = !DILocation(line: 198, column: 19, scope: !2324)
!2330 = !DILocalVariable(name: "lpos", scope: !2324, file: !1016, line: 198, type: !899)
!2331 = !DILocation(line: 198, column: 24, scope: !2324)
!2332 = !DILocalVariable(name: "k", scope: !2324, file: !1016, line: 198, type: !899)
!2333 = !DILocation(line: 198, column: 30, scope: !2324)
!2334 = !DILocalVariable(name: "block_len", scope: !2324, file: !1016, line: 198, type: !899)
!2335 = !DILocation(line: 198, column: 33, scope: !2324)
!2336 = !DILocalVariable(name: "i", scope: !2324, file: !1016, line: 198, type: !899)
!2337 = !DILocation(line: 198, column: 44, scope: !2324)
!2338 = !DILocalVariable(name: "j", scope: !2324, file: !1016, line: 198, type: !899)
!2339 = !DILocation(line: 198, column: 47, scope: !2324)
!2340 = !DILocalVariable(name: "n", scope: !2324, file: !1016, line: 198, type: !899)
!2341 = !DILocation(line: 198, column: 50, scope: !2324)
!2342 = !DILocalVariable(name: "table", scope: !2324, file: !1016, line: 199, type: !950)
!2343 = !DILocation(line: 199, column: 24, scope: !2324)
!2344 = !DILocation(line: 201, column: 13, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2324, file: !1016, line: 201, column: 13)
!2346 = !DILocation(line: 201, column: 16, scope: !2345)
!2347 = !DILocation(line: 201, column: 24, scope: !2345)
!2348 = !DILocation(line: 201, column: 13, scope: !2324)
!2349 = !DILocation(line: 202, column: 13, scope: !2345)
!2350 = !DILocation(line: 202, column: 16, scope: !2345)
!2351 = !DILocation(line: 202, column: 28, scope: !2345)
!2352 = !DILocation(line: 204, column: 13, scope: !2345)
!2353 = !DILocation(line: 204, column: 16, scope: !2345)
!2354 = !DILocation(line: 204, column: 28, scope: !2345)
!2355 = !DILocation(line: 205, column: 16, scope: !2356)
!2356 = distinct !DILexicalBlock(scope: !2324, file: !1016, line: 205, column: 9)
!2357 = !DILocation(line: 205, column: 14, scope: !2356)
!2358 = !DILocation(line: 205, column: 21, scope: !2359)
!2359 = !DILexicalBlockFile(scope: !2360, file: !1016, discriminator: 1)
!2360 = distinct !DILexicalBlock(scope: !2356, file: !1016, line: 205, column: 9)
!2361 = !DILocation(line: 205, column: 25, scope: !2359)
!2362 = !DILocation(line: 205, column: 28, scope: !2359)
!2363 = !DILocation(line: 205, column: 23, scope: !2359)
!2364 = !DILocation(line: 205, column: 9, scope: !2359)
!2365 = !DILocation(line: 206, column: 25, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2360, file: !1016, line: 205, column: 49)
!2367 = !DILocation(line: 206, column: 28, scope: !2366)
!2368 = !DILocation(line: 206, column: 41, scope: !2366)
!2369 = !DILocation(line: 206, column: 38, scope: !2366)
!2370 = !DILocation(line: 206, column: 23, scope: !2366)
!2371 = !DILocation(line: 208, column: 17, scope: !2372)
!2372 = distinct !DILexicalBlock(scope: !2366, file: !1016, line: 208, column: 17)
!2373 = !DILocation(line: 208, column: 20, scope: !2372)
!2374 = !DILocation(line: 208, column: 28, scope: !2372)
!2375 = !DILocation(line: 208, column: 17, scope: !2366)
!2376 = !DILocation(line: 209, column: 22, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2372, file: !1016, line: 208, column: 34)
!2378 = !DILocation(line: 210, column: 24, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2377, file: !1016, line: 210, column: 17)
!2380 = !DILocation(line: 210, column: 22, scope: !2379)
!2381 = !DILocation(line: 210, column: 29, scope: !2382)
!2382 = !DILexicalBlockFile(scope: !2383, file: !1016, discriminator: 1)
!2383 = distinct !DILexicalBlock(scope: !2379, file: !1016, line: 210, column: 17)
!2384 = !DILocation(line: 210, column: 31, scope: !2382)
!2385 = !DILocation(line: 210, column: 17, scope: !2382)
!2386 = !DILocation(line: 211, column: 47, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2383, file: !1016, line: 210, column: 42)
!2388 = !DILocation(line: 211, column: 25, scope: !2387)
!2389 = !DILocation(line: 211, column: 23, scope: !2387)
!2390 = !DILocation(line: 212, column: 25, scope: !2387)
!2391 = !DILocation(line: 212, column: 32, scope: !2387)
!2392 = !DILocation(line: 212, column: 23, scope: !2387)
!2393 = !DILocation(line: 213, column: 29, scope: !2387)
!2394 = !DILocation(line: 213, column: 39, scope: !2387)
!2395 = !DILocation(line: 213, column: 45, scope: !2387)
!2396 = !DILocation(line: 213, column: 43, scope: !2387)
!2397 = !DILocation(line: 213, column: 51, scope: !2387)
!2398 = !DILocation(line: 213, column: 53, scope: !2387)
!2399 = !DILocation(line: 213, column: 48, scope: !2387)
!2400 = !DILocation(line: 213, column: 62, scope: !2387)
!2401 = !DILocation(line: 213, column: 60, scope: !2387)
!2402 = !DILocation(line: 213, column: 25, scope: !2387)
!2403 = !DILocation(line: 214, column: 25, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2387, file: !1016, line: 214, column: 25)
!2405 = !DILocation(line: 214, column: 31, scope: !2404)
!2406 = !DILocation(line: 214, column: 29, scope: !2404)
!2407 = !DILocation(line: 214, column: 25, scope: !2387)
!2408 = !DILocation(line: 215, column: 31, scope: !2404)
!2409 = !DILocation(line: 215, column: 29, scope: !2404)
!2410 = !DILocation(line: 215, column: 25, scope: !2404)
!2411 = !DILocation(line: 216, column: 47, scope: !2387)
!2412 = !DILocation(line: 216, column: 53, scope: !2387)
!2413 = !DILocation(line: 216, column: 51, scope: !2387)
!2414 = !DILocation(line: 216, column: 42, scope: !2387)
!2415 = !DILocation(line: 216, column: 21, scope: !2387)
!2416 = !DILocation(line: 216, column: 24, scope: !2387)
!2417 = !DILocation(line: 216, column: 45, scope: !2387)
!2418 = !DILocation(line: 217, column: 25, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2387, file: !1016, line: 217, column: 25)
!2420 = !DILocation(line: 217, column: 32, scope: !2419)
!2421 = !DILocation(line: 217, column: 29, scope: !2419)
!2422 = !DILocation(line: 217, column: 25, scope: !2387)
!2423 = !DILocation(line: 218, column: 26, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2419, file: !1016, line: 217, column: 43)
!2425 = !DILocation(line: 219, column: 25, scope: !2424)
!2426 = !DILocation(line: 221, column: 28, scope: !2387)
!2427 = !DILocation(line: 221, column: 26, scope: !2387)
!2428 = !DILocation(line: 222, column: 17, scope: !2387)
!2429 = !DILocation(line: 210, column: 38, scope: !2430)
!2430 = !DILexicalBlockFile(scope: !2383, file: !1016, discriminator: 2)
!2431 = !DILocation(line: 210, column: 17, scope: !2430)
!2432 = distinct !{!2432, !2433}
!2433 = !DILocation(line: 210, column: 17, scope: !2377)
!2434 = !DILocation(line: 223, column: 40, scope: !2377)
!2435 = !DILocation(line: 223, column: 17, scope: !2377)
!2436 = !DILocation(line: 223, column: 20, scope: !2377)
!2437 = !DILocation(line: 223, column: 38, scope: !2377)
!2438 = !DILocation(line: 224, column: 13, scope: !2377)
!2439 = !DILocation(line: 226, column: 23, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2372, file: !1016, line: 224, column: 20)
!2441 = !DILocation(line: 227, column: 21, scope: !2440)
!2442 = !DILocation(line: 227, column: 24, scope: !2440)
!2443 = !DILocation(line: 227, column: 39, scope: !2440)
!2444 = !DILocation(line: 227, column: 45, scope: !2440)
!2445 = !DILocation(line: 227, column: 43, scope: !2440)
!2446 = !DILocation(line: 227, column: 19, scope: !2440)
!2447 = !DILocation(line: 228, column: 21, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2440, file: !1016, line: 228, column: 21)
!2449 = !DILocation(line: 228, column: 23, scope: !2448)
!2450 = !DILocation(line: 228, column: 21, scope: !2440)
!2451 = !DILocation(line: 229, column: 25, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2453, file: !1016, line: 229, column: 25)
!2453 = distinct !DILexicalBlock(scope: !2448, file: !1016, line: 228, column: 28)
!2454 = !DILocation(line: 229, column: 32, scope: !2452)
!2455 = !DILocation(line: 229, column: 44, scope: !2452)
!2456 = !DILocation(line: 229, column: 25, scope: !2453)
!2457 = !DILocation(line: 230, column: 53, scope: !2452)
!2458 = !DILocation(line: 230, column: 33, scope: !2452)
!2459 = !DILocation(line: 230, column: 31, scope: !2452)
!2460 = !DILocation(line: 230, column: 25, scope: !2452)
!2461 = !DILocation(line: 231, column: 30, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2452, file: !1016, line: 231, column: 30)
!2463 = !DILocation(line: 231, column: 37, scope: !2462)
!2464 = !DILocation(line: 231, column: 49, scope: !2462)
!2465 = !DILocation(line: 231, column: 30, scope: !2452)
!2466 = !DILocation(line: 232, column: 53, scope: !2462)
!2467 = !DILocation(line: 232, column: 33, scope: !2462)
!2468 = !DILocation(line: 232, column: 31, scope: !2462)
!2469 = !DILocation(line: 232, column: 25, scope: !2462)
!2470 = !DILocation(line: 233, column: 30, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2462, file: !1016, line: 233, column: 30)
!2472 = !DILocation(line: 233, column: 37, scope: !2471)
!2473 = !DILocation(line: 233, column: 49, scope: !2471)
!2474 = !DILocation(line: 233, column: 30, scope: !2462)
!2475 = !DILocation(line: 234, column: 53, scope: !2471)
!2476 = !DILocation(line: 234, column: 33, scope: !2471)
!2477 = !DILocation(line: 234, column: 31, scope: !2471)
!2478 = !DILocation(line: 234, column: 25, scope: !2471)
!2479 = !DILocation(line: 235, column: 17, scope: !2453)
!2480 = !DILocation(line: 236, column: 21, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2440, file: !1016, line: 236, column: 21)
!2482 = !DILocation(line: 236, column: 21, scope: !2440)
!2483 = !DILocation(line: 237, column: 31, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2481, file: !1016, line: 236, column: 28)
!2485 = !DILocation(line: 237, column: 25, scope: !2484)
!2486 = !DILocation(line: 237, column: 23, scope: !2484)
!2487 = !DILocation(line: 238, column: 28, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2484, file: !1016, line: 238, column: 21)
!2489 = !DILocation(line: 238, column: 26, scope: !2488)
!2490 = !DILocation(line: 238, column: 33, scope: !2491)
!2491 = !DILexicalBlockFile(scope: !2492, file: !1016, discriminator: 1)
!2492 = distinct !DILexicalBlock(scope: !2488, file: !1016, line: 238, column: 21)
!2493 = !DILocation(line: 238, column: 37, scope: !2491)
!2494 = !DILocation(line: 238, column: 35, scope: !2491)
!2495 = !DILocation(line: 238, column: 21, scope: !2491)
!2496 = !DILocation(line: 239, column: 57, scope: !2492)
!2497 = !DILocation(line: 239, column: 51, scope: !2492)
!2498 = !DILocation(line: 239, column: 46, scope: !2492)
!2499 = !DILocation(line: 239, column: 25, scope: !2492)
!2500 = !DILocation(line: 239, column: 43, scope: !2492)
!2501 = !DILocation(line: 239, column: 28, scope: !2492)
!2502 = !DILocation(line: 239, column: 49, scope: !2492)
!2503 = !DILocation(line: 238, column: 41, scope: !2504)
!2504 = !DILexicalBlockFile(scope: !2492, file: !1016, discriminator: 2)
!2505 = !DILocation(line: 238, column: 21, scope: !2504)
!2506 = distinct !{!2506, !2507}
!2507 = !DILocation(line: 238, column: 21, scope: !2484)
!2508 = !DILocation(line: 240, column: 44, scope: !2484)
!2509 = !DILocation(line: 240, column: 39, scope: !2484)
!2510 = !DILocation(line: 240, column: 21, scope: !2484)
!2511 = !DILocation(line: 240, column: 24, scope: !2484)
!2512 = !DILocation(line: 240, column: 42, scope: !2484)
!2513 = !DILocation(line: 241, column: 17, scope: !2484)
!2514 = !DILocation(line: 242, column: 23, scope: !2515)
!2515 = distinct !DILexicalBlock(scope: !2481, file: !1016, line: 241, column: 24)
!2516 = !DILocation(line: 243, column: 26, scope: !2515)
!2517 = !DILocation(line: 244, column: 28, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2515, file: !1016, line: 244, column: 21)
!2519 = !DILocation(line: 244, column: 26, scope: !2518)
!2520 = !DILocation(line: 244, column: 33, scope: !2521)
!2521 = !DILexicalBlockFile(scope: !2522, file: !1016, discriminator: 1)
!2522 = distinct !DILexicalBlock(scope: !2518, file: !1016, line: 244, column: 21)
!2523 = !DILocation(line: 244, column: 35, scope: !2521)
!2524 = !DILocation(line: 244, column: 21, scope: !2521)
!2525 = !DILocation(line: 245, column: 51, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2522, file: !1016, line: 244, column: 46)
!2527 = !DILocation(line: 245, column: 29, scope: !2526)
!2528 = !DILocation(line: 245, column: 27, scope: !2526)
!2529 = !DILocation(line: 246, column: 29, scope: !2526)
!2530 = !DILocation(line: 246, column: 36, scope: !2526)
!2531 = !DILocation(line: 246, column: 27, scope: !2526)
!2532 = !DILocation(line: 247, column: 33, scope: !2526)
!2533 = !DILocation(line: 247, column: 43, scope: !2526)
!2534 = !DILocation(line: 247, column: 49, scope: !2526)
!2535 = !DILocation(line: 247, column: 47, scope: !2526)
!2536 = !DILocation(line: 247, column: 55, scope: !2526)
!2537 = !DILocation(line: 247, column: 57, scope: !2526)
!2538 = !DILocation(line: 247, column: 52, scope: !2526)
!2539 = !DILocation(line: 247, column: 71, scope: !2526)
!2540 = !DILocation(line: 247, column: 69, scope: !2526)
!2541 = !DILocation(line: 247, column: 64, scope: !2526)
!2542 = !DILocation(line: 247, column: 29, scope: !2526)
!2543 = !DILocation(line: 248, column: 29, scope: !2526)
!2544 = !DILocation(line: 249, column: 29, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2526, file: !1016, line: 249, column: 29)
!2546 = !DILocation(line: 249, column: 35, scope: !2545)
!2547 = !DILocation(line: 249, column: 33, scope: !2545)
!2548 = !DILocation(line: 249, column: 29, scope: !2526)
!2549 = !DILocation(line: 250, column: 35, scope: !2545)
!2550 = !DILocation(line: 250, column: 33, scope: !2545)
!2551 = !DILocation(line: 250, column: 29, scope: !2545)
!2552 = !DILocation(line: 251, column: 29, scope: !2553)
!2553 = distinct !DILexicalBlock(scope: !2526, file: !1016, line: 251, column: 29)
!2554 = !DILocation(line: 251, column: 35, scope: !2553)
!2555 = !DILocation(line: 251, column: 33, scope: !2553)
!2556 = !DILocation(line: 251, column: 29, scope: !2526)
!2557 = !DILocation(line: 252, column: 57, scope: !2553)
!2558 = !DILocation(line: 252, column: 63, scope: !2553)
!2559 = !DILocation(line: 252, column: 61, scope: !2553)
!2560 = !DILocation(line: 252, column: 51, scope: !2553)
!2561 = !DILocation(line: 252, column: 29, scope: !2553)
!2562 = !DILocation(line: 252, column: 47, scope: !2553)
!2563 = !DILocation(line: 252, column: 32, scope: !2553)
!2564 = !DILocation(line: 252, column: 55, scope: !2553)
!2565 = !DILocation(line: 253, column: 29, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2526, file: !1016, line: 253, column: 29)
!2567 = !DILocation(line: 253, column: 36, scope: !2566)
!2568 = !DILocation(line: 253, column: 33, scope: !2566)
!2569 = !DILocation(line: 253, column: 29, scope: !2526)
!2570 = !DILocation(line: 254, column: 29, scope: !2566)
!2571 = !DILocation(line: 255, column: 32, scope: !2526)
!2572 = !DILocation(line: 255, column: 30, scope: !2526)
!2573 = !DILocation(line: 256, column: 21, scope: !2526)
!2574 = !DILocation(line: 244, column: 42, scope: !2575)
!2575 = !DILexicalBlockFile(scope: !2522, file: !1016, discriminator: 2)
!2576 = !DILocation(line: 244, column: 21, scope: !2575)
!2577 = distinct !{!2577, !2578}
!2578 = !DILocation(line: 244, column: 21, scope: !2515)
!2579 = !DILocation(line: 257, column: 44, scope: !2515)
!2580 = !DILocation(line: 257, column: 39, scope: !2515)
!2581 = !DILocation(line: 257, column: 21, scope: !2515)
!2582 = !DILocation(line: 257, column: 24, scope: !2515)
!2583 = !DILocation(line: 257, column: 42, scope: !2515)
!2584 = !DILocation(line: 262, column: 32, scope: !2366)
!2585 = !DILocation(line: 262, column: 35, scope: !2366)
!2586 = !DILocation(line: 262, column: 49, scope: !2366)
!2587 = !DILocation(line: 262, column: 52, scope: !2366)
!2588 = !DILocation(line: 262, column: 62, scope: !2366)
!2589 = !DILocation(line: 262, column: 67, scope: !2366)
!2590 = !DILocation(line: 262, column: 45, scope: !2366)
!2591 = !DILocation(line: 262, column: 78, scope: !2366)
!2592 = !DILocation(line: 262, column: 75, scope: !2366)
!2593 = !DILocation(line: 262, column: 26, scope: !2366)
!2594 = !DILocation(line: 262, column: 13, scope: !2366)
!2595 = !DILocation(line: 262, column: 16, scope: !2366)
!2596 = !DILocation(line: 262, column: 29, scope: !2366)
!2597 = !DILocation(line: 264, column: 45, scope: !2366)
!2598 = !DILocation(line: 264, column: 55, scope: !2366)
!2599 = !DILocation(line: 264, column: 61, scope: !2366)
!2600 = !DILocation(line: 264, column: 59, scope: !2366)
!2601 = !DILocation(line: 265, column: 44, scope: !2366)
!2602 = !DILocation(line: 265, column: 51, scope: !2366)
!2603 = !DILocation(line: 264, column: 72, scope: !2366)
!2604 = !DILocation(line: 264, column: 44, scope: !2366)
!2605 = !DILocation(line: 265, column: 63, scope: !2366)
!2606 = !DILocation(line: 264, column: 37, scope: !2366)
!2607 = !DILocation(line: 264, column: 32, scope: !2366)
!2608 = !DILocation(line: 264, column: 13, scope: !2366)
!2609 = !DILocation(line: 264, column: 16, scope: !2366)
!2610 = !DILocation(line: 264, column: 35, scope: !2366)
!2611 = !DILocation(line: 266, column: 35, scope: !2366)
!2612 = !DILocation(line: 266, column: 17, scope: !2366)
!2613 = !DILocation(line: 266, column: 20, scope: !2366)
!2614 = !DILocation(line: 266, column: 15, scope: !2366)
!2615 = !DILocation(line: 267, column: 15, scope: !2366)
!2616 = !DILocation(line: 268, column: 17, scope: !2366)
!2617 = !DILocation(line: 269, column: 20, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2366, file: !1016, line: 269, column: 13)
!2619 = !DILocation(line: 269, column: 18, scope: !2618)
!2620 = !DILocation(line: 269, column: 25, scope: !2621)
!2621 = !DILexicalBlockFile(scope: !2622, file: !1016, discriminator: 1)
!2622 = distinct !DILexicalBlock(scope: !2618, file: !1016, line: 269, column: 13)
!2623 = !DILocation(line: 269, column: 29, scope: !2621)
!2624 = !DILocation(line: 269, column: 27, scope: !2621)
!2625 = !DILocation(line: 269, column: 13, scope: !2621)
!2626 = !DILocalVariable(name: "start", scope: !2627, file: !1016, line: 270, type: !899)
!2627 = distinct !DILexicalBlock(scope: !2622, file: !1016, line: 269, column: 37)
!2628 = !DILocation(line: 270, column: 21, scope: !2627)
!2629 = !DILocalVariable(name: "end", scope: !2627, file: !1016, line: 270, type: !899)
!2630 = !DILocation(line: 270, column: 28, scope: !2627)
!2631 = !DILocation(line: 271, column: 25, scope: !2627)
!2632 = !DILocation(line: 271, column: 23, scope: !2627)
!2633 = !DILocation(line: 272, column: 45, scope: !2627)
!2634 = !DILocation(line: 272, column: 24, scope: !2627)
!2635 = !DILocation(line: 272, column: 42, scope: !2627)
!2636 = !DILocation(line: 272, column: 27, scope: !2627)
!2637 = !DILocation(line: 272, column: 21, scope: !2627)
!2638 = !DILocation(line: 273, column: 23, scope: !2627)
!2639 = !DILocation(line: 273, column: 21, scope: !2627)
!2640 = !DILocation(line: 274, column: 21, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2627, file: !1016, line: 274, column: 21)
!2642 = !DILocation(line: 274, column: 48, scope: !2641)
!2643 = !DILocation(line: 274, column: 29, scope: !2641)
!2644 = !DILocation(line: 274, column: 32, scope: !2641)
!2645 = !DILocation(line: 274, column: 27, scope: !2641)
!2646 = !DILocation(line: 274, column: 21, scope: !2627)
!2647 = !DILocation(line: 275, column: 48, scope: !2641)
!2648 = !DILocation(line: 275, column: 29, scope: !2641)
!2649 = !DILocation(line: 275, column: 32, scope: !2641)
!2650 = !DILocation(line: 275, column: 27, scope: !2641)
!2651 = !DILocation(line: 275, column: 21, scope: !2641)
!2652 = !DILocation(line: 276, column: 21, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2627, file: !1016, line: 276, column: 21)
!2654 = !DILocation(line: 276, column: 40, scope: !2653)
!2655 = !DILocation(line: 276, column: 27, scope: !2653)
!2656 = !DILocation(line: 276, column: 30, scope: !2653)
!2657 = !DILocation(line: 276, column: 25, scope: !2653)
!2658 = !DILocation(line: 276, column: 21, scope: !2627)
!2659 = !DILocation(line: 277, column: 40, scope: !2653)
!2660 = !DILocation(line: 277, column: 27, scope: !2653)
!2661 = !DILocation(line: 277, column: 30, scope: !2653)
!2662 = !DILocation(line: 277, column: 25, scope: !2653)
!2663 = !DILocation(line: 277, column: 21, scope: !2653)
!2664 = !DILocation(line: 278, column: 21, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2627, file: !1016, line: 278, column: 21)
!2666 = !DILocation(line: 278, column: 27, scope: !2665)
!2667 = !DILocation(line: 278, column: 25, scope: !2665)
!2668 = !DILocation(line: 278, column: 21, scope: !2627)
!2669 = !DILocation(line: 279, column: 54, scope: !2665)
!2670 = !DILocation(line: 279, column: 60, scope: !2665)
!2671 = !DILocation(line: 279, column: 58, scope: !2665)
!2672 = !DILocation(line: 279, column: 48, scope: !2665)
!2673 = !DILocation(line: 279, column: 21, scope: !2665)
!2674 = !DILocation(line: 279, column: 44, scope: !2665)
!2675 = !DILocation(line: 279, column: 24, scope: !2665)
!2676 = !DILocation(line: 279, column: 52, scope: !2665)
!2677 = !DILocation(line: 280, column: 13, scope: !2627)
!2678 = !DILocation(line: 269, column: 33, scope: !2679)
!2679 = !DILexicalBlockFile(scope: !2622, file: !1016, discriminator: 2)
!2680 = !DILocation(line: 269, column: 13, scope: !2679)
!2681 = distinct !{!2681, !2682}
!2682 = !DILocation(line: 269, column: 13, scope: !2366)
!2683 = !DILocation(line: 281, column: 41, scope: !2366)
!2684 = !DILocation(line: 281, column: 36, scope: !2366)
!2685 = !DILocation(line: 281, column: 13, scope: !2366)
!2686 = !DILocation(line: 281, column: 16, scope: !2366)
!2687 = !DILocation(line: 281, column: 39, scope: !2366)
!2688 = !DILocation(line: 282, column: 9, scope: !2366)
!2689 = !DILocation(line: 205, column: 45, scope: !2690)
!2690 = !DILexicalBlockFile(scope: !2360, file: !1016, discriminator: 2)
!2691 = !DILocation(line: 205, column: 9, scope: !2690)
!2692 = distinct !{!2692, !2693}
!2693 = !DILocation(line: 205, column: 9, scope: !2324)
!2694 = !DILocation(line: 300, column: 12, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 300, column: 5)
!2696 = !DILocation(line: 300, column: 10, scope: !2695)
!2697 = !DILocation(line: 300, column: 17, scope: !2698)
!2698 = !DILexicalBlockFile(scope: !2699, file: !1016, discriminator: 1)
!2699 = distinct !DILexicalBlock(scope: !2695, file: !1016, line: 300, column: 5)
!2700 = !DILocation(line: 300, column: 21, scope: !2698)
!2701 = !DILocation(line: 300, column: 24, scope: !2698)
!2702 = !DILocation(line: 300, column: 19, scope: !2698)
!2703 = !DILocation(line: 300, column: 5, scope: !2698)
!2704 = !DILocation(line: 301, column: 33, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2699, file: !1016, line: 300, column: 45)
!2706 = !DILocation(line: 301, column: 36, scope: !2705)
!2707 = !DILocation(line: 301, column: 53, scope: !2705)
!2708 = !DILocation(line: 301, column: 51, scope: !2705)
!2709 = !DILocation(line: 301, column: 9, scope: !2705)
!2710 = !DILocation(line: 302, column: 41, scope: !2705)
!2711 = !DILocation(line: 302, column: 44, scope: !2705)
!2712 = !DILocation(line: 302, column: 61, scope: !2705)
!2713 = !DILocation(line: 302, column: 59, scope: !2705)
!2714 = !DILocation(line: 302, column: 25, scope: !2705)
!2715 = !DILocation(line: 302, column: 20, scope: !2705)
!2716 = !DILocation(line: 302, column: 9, scope: !2705)
!2717 = !DILocation(line: 302, column: 12, scope: !2705)
!2718 = !DILocation(line: 302, column: 23, scope: !2705)
!2719 = !DILocation(line: 303, column: 5, scope: !2705)
!2720 = !DILocation(line: 300, column: 41, scope: !2721)
!2721 = !DILexicalBlockFile(scope: !2699, file: !1016, discriminator: 2)
!2722 = !DILocation(line: 300, column: 5, scope: !2721)
!2723 = distinct !{!2723, !2724}
!2724 = !DILocation(line: 300, column: 5, scope: !1015)
!2725 = !DILocation(line: 305, column: 5, scope: !1015)
!2726 = !DILocation(line: 305, column: 8, scope: !1015)
!2727 = !DILocation(line: 305, column: 28, scope: !1015)
!2728 = !DILocation(line: 307, column: 9, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 307, column: 9)
!2730 = !DILocation(line: 307, column: 12, scope: !2729)
!2731 = !DILocation(line: 307, column: 9, scope: !1015)
!2732 = !DILocation(line: 309, column: 13, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2734, file: !1016, line: 309, column: 13)
!2734 = distinct !DILexicalBlock(scope: !2729, file: !1016, line: 307, column: 30)
!2735 = !DILocation(line: 309, column: 16, scope: !2733)
!2736 = !DILocation(line: 309, column: 13, scope: !2734)
!2737 = !DILocation(line: 310, column: 13, scope: !2733)
!2738 = !DILocation(line: 310, column: 16, scope: !2733)
!2739 = !DILocation(line: 310, column: 27, scope: !2733)
!2740 = !DILocation(line: 312, column: 13, scope: !2733)
!2741 = !DILocation(line: 312, column: 16, scope: !2733)
!2742 = !DILocation(line: 312, column: 27, scope: !2733)
!2743 = !DILocalVariable(name: "seed", scope: !2744, file: !1016, line: 319, type: !900)
!2744 = distinct !DILexicalBlock(scope: !2734, file: !1016, line: 318, column: 9)
!2745 = !DILocation(line: 319, column: 26, scope: !2744)
!2746 = !DILocalVariable(name: "norm", scope: !2744, file: !1016, line: 320, type: !898)
!2747 = !DILocation(line: 320, column: 19, scope: !2744)
!2748 = !DILocation(line: 321, column: 18, scope: !2744)
!2749 = !DILocation(line: 322, column: 50, scope: !2744)
!2750 = !DILocation(line: 322, column: 48, scope: !2744)
!2751 = !DILocation(line: 322, column: 60, scope: !2744)
!2752 = !DILocation(line: 322, column: 63, scope: !2744)
!2753 = !DILocation(line: 322, column: 58, scope: !2744)
!2754 = !DILocation(line: 322, column: 20, scope: !2744)
!2755 = !DILocation(line: 322, column: 18, scope: !2744)
!2756 = !DILocation(line: 323, column: 20, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2744, file: !1016, line: 323, column: 13)
!2758 = !DILocation(line: 323, column: 18, scope: !2757)
!2759 = !DILocation(line: 323, column: 25, scope: !2760)
!2760 = !DILexicalBlockFile(scope: !2761, file: !1016, discriminator: 1)
!2761 = distinct !DILexicalBlock(scope: !2757, file: !1016, line: 323, column: 13)
!2762 = !DILocation(line: 323, column: 27, scope: !2760)
!2763 = !DILocation(line: 323, column: 13, scope: !2760)
!2764 = !DILocation(line: 324, column: 24, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2761, file: !1016, line: 323, column: 40)
!2766 = !DILocation(line: 324, column: 29, scope: !2765)
!2767 = !DILocation(line: 324, column: 38, scope: !2765)
!2768 = !DILocation(line: 324, column: 22, scope: !2765)
!2769 = !DILocation(line: 325, column: 52, scope: !2765)
!2770 = !DILocation(line: 325, column: 37, scope: !2765)
!2771 = !DILocation(line: 325, column: 60, scope: !2765)
!2772 = !DILocation(line: 325, column: 58, scope: !2765)
!2773 = !DILocation(line: 325, column: 32, scope: !2765)
!2774 = !DILocation(line: 325, column: 17, scope: !2765)
!2775 = !DILocation(line: 325, column: 20, scope: !2765)
!2776 = !DILocation(line: 325, column: 35, scope: !2765)
!2777 = !DILocation(line: 326, column: 13, scope: !2765)
!2778 = !DILocation(line: 323, column: 36, scope: !2779)
!2779 = !DILexicalBlockFile(scope: !2761, file: !1016, discriminator: 2)
!2780 = !DILocation(line: 323, column: 13, scope: !2779)
!2781 = distinct !{!2781, !2782}
!2782 = !DILocation(line: 323, column: 13, scope: !2744)
!2783 = !DILocation(line: 329, column: 5, scope: !2734)
!2784 = !DILocation(line: 331, column: 38, scope: !1015)
!2785 = !DILocation(line: 331, column: 45, scope: !1015)
!2786 = !DILocation(line: 331, column: 51, scope: !1015)
!2787 = !DILocation(line: 331, column: 15, scope: !1015)
!2788 = !DILocation(line: 331, column: 5, scope: !1015)
!2789 = !DILocation(line: 331, column: 8, scope: !1015)
!2790 = !DILocation(line: 331, column: 13, scope: !1015)
!2791 = !DILocation(line: 332, column: 10, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 332, column: 9)
!2793 = !DILocation(line: 332, column: 13, scope: !2792)
!2794 = !DILocation(line: 332, column: 9, scope: !1015)
!2795 = !DILocation(line: 333, column: 9, scope: !2792)
!2796 = !DILocation(line: 336, column: 20, scope: !1015)
!2797 = !DILocation(line: 337, column: 9, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 337, column: 9)
!2799 = !DILocation(line: 337, column: 16, scope: !2798)
!2800 = !DILocation(line: 337, column: 28, scope: !2798)
!2801 = !DILocation(line: 337, column: 9, scope: !1015)
!2802 = !DILocation(line: 338, column: 13, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2804, file: !1016, line: 338, column: 13)
!2804 = distinct !DILexicalBlock(scope: !2798, file: !1016, line: 337, column: 38)
!2805 = !DILocation(line: 338, column: 18, scope: !2803)
!2806 = !DILocation(line: 338, column: 13, scope: !2804)
!2807 = !DILocation(line: 339, column: 28, scope: !2803)
!2808 = !DILocation(line: 339, column: 13, scope: !2803)
!2809 = !DILocation(line: 340, column: 18, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2803, file: !1016, line: 340, column: 18)
!2811 = !DILocation(line: 340, column: 23, scope: !2810)
!2812 = !DILocation(line: 340, column: 18, scope: !2803)
!2813 = !DILocation(line: 341, column: 28, scope: !2810)
!2814 = !DILocation(line: 341, column: 13, scope: !2810)
!2815 = !DILocation(line: 342, column: 5, scope: !2804)
!2816 = !DILocation(line: 343, column: 34, scope: !1015)
!2817 = !DILocation(line: 343, column: 49, scope: !1015)
!2818 = !DILocation(line: 343, column: 24, scope: !1015)
!2819 = !DILocation(line: 343, column: 5, scope: !1015)
!2820 = !DILocation(line: 343, column: 8, scope: !1015)
!2821 = !DILocation(line: 343, column: 21, scope: !1015)
!2822 = !DILocation(line: 344, column: 34, scope: !1015)
!2823 = !DILocation(line: 344, column: 49, scope: !1015)
!2824 = !DILocation(line: 344, column: 53, scope: !1015)
!2825 = !DILocation(line: 344, column: 24, scope: !1015)
!2826 = !DILocation(line: 344, column: 5, scope: !1015)
!2827 = !DILocation(line: 344, column: 8, scope: !1015)
!2828 = !DILocation(line: 344, column: 21, scope: !1015)
!2829 = !DILocation(line: 345, column: 26, scope: !1015)
!2830 = !DILocation(line: 345, column: 29, scope: !1015)
!2831 = !DILocation(line: 345, column: 43, scope: !1015)
!2832 = !DILocation(line: 345, column: 46, scope: !1015)
!2833 = !DILocation(line: 345, column: 61, scope: !1015)
!2834 = !DILocation(line: 345, column: 64, scope: !1015)
!2835 = !DILocation(line: 346, column: 26, scope: !1015)
!2836 = !DILocation(line: 346, column: 29, scope: !1015)
!2837 = !DILocation(line: 346, column: 43, scope: !1015)
!2838 = !DILocation(line: 346, column: 46, scope: !1015)
!2839 = !DILocation(line: 345, column: 11, scope: !1015)
!2840 = !DILocation(line: 345, column: 9, scope: !1015)
!2841 = !DILocation(line: 347, column: 9, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !1015, file: !1016, line: 347, column: 9)
!2843 = !DILocation(line: 347, column: 13, scope: !2842)
!2844 = !DILocation(line: 347, column: 9, scope: !1015)
!2845 = !DILocation(line: 348, column: 16, scope: !2842)
!2846 = !DILocation(line: 348, column: 9, scope: !2842)
!2847 = !DILocation(line: 350, column: 27, scope: !1015)
!2848 = !DILocation(line: 350, column: 30, scope: !1015)
!2849 = !DILocation(line: 350, column: 44, scope: !1015)
!2850 = !DILocation(line: 350, column: 47, scope: !1015)
!2851 = !DILocation(line: 350, column: 62, scope: !1015)
!2852 = !DILocation(line: 350, column: 65, scope: !1015)
!2853 = !DILocation(line: 351, column: 27, scope: !1015)
!2854 = !DILocation(line: 351, column: 30, scope: !1015)
!2855 = !DILocation(line: 351, column: 44, scope: !1015)
!2856 = !DILocation(line: 351, column: 47, scope: !1015)
!2857 = !DILocation(line: 350, column: 12, scope: !1015)
!2858 = !DILocation(line: 350, column: 5, scope: !1015)
!2859 = !DILocation(line: 352, column: 1, scope: !1015)
!2860 = distinct !DISubprogram(name: "init_coef_vlc", scope: !1016, file: !1016, line: 34, type: !2861, isLocal: true, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1740)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!899, !2863, !2864, !2865, !2864, !1823}
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64, align: 64)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64, align: 64)
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64, align: 64)
!2866 = !DILocalVariable(name: "vlc", arg: 1, scope: !2860, file: !1016, line: 34, type: !2863)
!2867 = !DILocation(line: 34, column: 53, scope: !2860)
!2868 = !DILocalVariable(name: "prun_table", arg: 2, scope: !2860, file: !1016, line: 34, type: !2864)
!2869 = !DILocation(line: 34, column: 69, scope: !2860)
!2870 = !DILocalVariable(name: "plevel_table", arg: 3, scope: !2860, file: !1016, line: 35, type: !2865)
!2871 = !DILocation(line: 35, column: 42, scope: !2860)
!2872 = !DILocalVariable(name: "pint_table", arg: 4, scope: !2860, file: !1016, line: 35, type: !2864)
!2873 = !DILocation(line: 35, column: 67, scope: !2860)
!2874 = !DILocalVariable(name: "vlc_table", arg: 5, scope: !2860, file: !1016, line: 36, type: !1823)
!2875 = !DILocation(line: 36, column: 54, scope: !2860)
!2876 = !DILocalVariable(name: "n", scope: !2860, file: !1016, line: 38, type: !899)
!2877 = !DILocation(line: 38, column: 9, scope: !2860)
!2878 = !DILocation(line: 38, column: 13, scope: !2860)
!2879 = !DILocation(line: 38, column: 24, scope: !2860)
!2880 = !DILocalVariable(name: "table_bits", scope: !2860, file: !1016, line: 39, type: !950)
!2881 = !DILocation(line: 39, column: 20, scope: !2860)
!2882 = !DILocation(line: 39, column: 33, scope: !2860)
!2883 = !DILocation(line: 39, column: 44, scope: !2860)
!2884 = !DILocalVariable(name: "table_codes", scope: !2860, file: !1016, line: 40, type: !901)
!2885 = !DILocation(line: 40, column: 21, scope: !2860)
!2886 = !DILocation(line: 40, column: 35, scope: !2860)
!2887 = !DILocation(line: 40, column: 46, scope: !2860)
!2888 = !DILocalVariable(name: "levels_table", scope: !2860, file: !1016, line: 41, type: !952)
!2889 = !DILocation(line: 41, column: 21, scope: !2860)
!2890 = !DILocation(line: 41, column: 36, scope: !2860)
!2891 = !DILocation(line: 41, column: 47, scope: !2860)
!2892 = !DILocalVariable(name: "run_table", scope: !2860, file: !1016, line: 42, type: !1530)
!2893 = !DILocation(line: 42, column: 15, scope: !2860)
!2894 = !DILocalVariable(name: "level_table", scope: !2860, file: !1016, line: 42, type: !1530)
!2895 = !DILocation(line: 42, column: 27, scope: !2860)
!2896 = !DILocalVariable(name: "int_table", scope: !2860, file: !1016, line: 42, type: !1530)
!2897 = !DILocation(line: 42, column: 41, scope: !2860)
!2898 = !DILocalVariable(name: "flevel_table", scope: !2860, file: !1016, line: 43, type: !1819)
!2899 = !DILocation(line: 43, column: 12, scope: !2860)
!2900 = !DILocalVariable(name: "i", scope: !2860, file: !1016, line: 44, type: !899)
!2901 = !DILocation(line: 44, column: 9, scope: !2860)
!2902 = !DILocalVariable(name: "l", scope: !2860, file: !1016, line: 44, type: !899)
!2903 = !DILocation(line: 44, column: 12, scope: !2860)
!2904 = !DILocalVariable(name: "j", scope: !2860, file: !1016, line: 44, type: !899)
!2905 = !DILocation(line: 44, column: 15, scope: !2860)
!2906 = !DILocalVariable(name: "k", scope: !2860, file: !1016, line: 44, type: !899)
!2907 = !DILocation(line: 44, column: 18, scope: !2860)
!2908 = !DILocalVariable(name: "level", scope: !2860, file: !1016, line: 44, type: !899)
!2909 = !DILocation(line: 44, column: 21, scope: !2860)
!2910 = !DILocation(line: 46, column: 24, scope: !2860)
!2911 = !DILocation(line: 46, column: 32, scope: !2860)
!2912 = !DILocation(line: 46, column: 35, scope: !2860)
!2913 = !DILocation(line: 46, column: 53, scope: !2860)
!2914 = !DILocation(line: 46, column: 5, scope: !2860)
!2915 = !DILocation(line: 48, column: 33, scope: !2860)
!2916 = !DILocation(line: 48, column: 17, scope: !2860)
!2917 = !DILocation(line: 48, column: 15, scope: !2860)
!2918 = !DILocation(line: 49, column: 35, scope: !2860)
!2919 = !DILocation(line: 49, column: 19, scope: !2860)
!2920 = !DILocation(line: 49, column: 17, scope: !2860)
!2921 = !DILocation(line: 50, column: 36, scope: !2860)
!2922 = !DILocation(line: 50, column: 20, scope: !2860)
!2923 = !DILocation(line: 50, column: 18, scope: !2860)
!2924 = !DILocation(line: 51, column: 33, scope: !2860)
!2925 = !DILocation(line: 51, column: 17, scope: !2860)
!2926 = !DILocation(line: 51, column: 15, scope: !2860)
!2927 = !DILocation(line: 52, column: 10, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2860, file: !1016, line: 52, column: 9)
!2929 = !DILocation(line: 52, column: 20, scope: !2928)
!2930 = !DILocation(line: 52, column: 24, scope: !2931)
!2931 = !DILexicalBlockFile(scope: !2928, file: !1016, discriminator: 1)
!2932 = !DILocation(line: 52, column: 36, scope: !2931)
!2933 = !DILocation(line: 52, column: 40, scope: !2934)
!2934 = !DILexicalBlockFile(scope: !2928, file: !1016, discriminator: 2)
!2935 = !DILocation(line: 52, column: 53, scope: !2934)
!2936 = !DILocation(line: 52, column: 57, scope: !2937)
!2937 = !DILexicalBlockFile(scope: !2928, file: !1016, discriminator: 3)
!2938 = !DILocation(line: 52, column: 9, scope: !2937)
!2939 = !DILocation(line: 53, column: 18, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2928, file: !1016, line: 52, column: 68)
!2941 = !DILocation(line: 53, column: 9, scope: !2940)
!2942 = !DILocation(line: 54, column: 18, scope: !2940)
!2943 = !DILocation(line: 54, column: 9, scope: !2940)
!2944 = !DILocation(line: 55, column: 18, scope: !2940)
!2945 = !DILocation(line: 55, column: 9, scope: !2940)
!2946 = !DILocation(line: 56, column: 18, scope: !2940)
!2947 = !DILocation(line: 56, column: 9, scope: !2940)
!2948 = !DILocation(line: 57, column: 9, scope: !2940)
!2949 = !DILocation(line: 59, column: 7, scope: !2860)
!2950 = !DILocation(line: 60, column: 11, scope: !2860)
!2951 = !DILocation(line: 61, column: 7, scope: !2860)
!2952 = !DILocation(line: 62, column: 5, scope: !2860)
!2953 = !DILocation(line: 62, column: 12, scope: !2954)
!2954 = !DILexicalBlockFile(scope: !2860, file: !1016, discriminator: 1)
!2955 = !DILocation(line: 62, column: 16, scope: !2954)
!2956 = !DILocation(line: 62, column: 14, scope: !2954)
!2957 = !DILocation(line: 62, column: 5, scope: !2954)
!2958 = !DILocation(line: 63, column: 24, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2860, file: !1016, line: 62, column: 19)
!2960 = !DILocation(line: 63, column: 19, scope: !2959)
!2961 = !DILocation(line: 63, column: 9, scope: !2959)
!2962 = !DILocation(line: 63, column: 22, scope: !2959)
!2963 = !DILocation(line: 64, column: 27, scope: !2959)
!2964 = !DILocation(line: 64, column: 13, scope: !2959)
!2965 = !DILocation(line: 64, column: 11, scope: !2959)
!2966 = !DILocation(line: 65, column: 16, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2959, file: !1016, line: 65, column: 9)
!2968 = !DILocation(line: 65, column: 14, scope: !2967)
!2969 = !DILocation(line: 65, column: 21, scope: !2970)
!2970 = !DILexicalBlockFile(scope: !2971, file: !1016, discriminator: 1)
!2971 = distinct !DILexicalBlock(scope: !2967, file: !1016, line: 65, column: 9)
!2972 = !DILocation(line: 65, column: 25, scope: !2970)
!2973 = !DILocation(line: 65, column: 23, scope: !2970)
!2974 = !DILocation(line: 65, column: 9, scope: !2970)
!2975 = !DILocation(line: 66, column: 28, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2971, file: !1016, line: 65, column: 33)
!2977 = !DILocation(line: 66, column: 23, scope: !2976)
!2978 = !DILocation(line: 66, column: 13, scope: !2976)
!2979 = !DILocation(line: 66, column: 26, scope: !2976)
!2980 = !DILocation(line: 67, column: 30, scope: !2976)
!2981 = !DILocation(line: 67, column: 25, scope: !2976)
!2982 = !DILocation(line: 67, column: 13, scope: !2976)
!2983 = !DILocation(line: 67, column: 28, scope: !2976)
!2984 = !DILocation(line: 68, column: 31, scope: !2976)
!2985 = !DILocation(line: 68, column: 26, scope: !2976)
!2986 = !DILocation(line: 68, column: 13, scope: !2976)
!2987 = !DILocation(line: 68, column: 29, scope: !2976)
!2988 = !DILocation(line: 69, column: 14, scope: !2976)
!2989 = !DILocation(line: 70, column: 9, scope: !2976)
!2990 = !DILocation(line: 65, column: 29, scope: !2991)
!2991 = !DILexicalBlockFile(scope: !2971, file: !1016, discriminator: 2)
!2992 = !DILocation(line: 65, column: 9, scope: !2991)
!2993 = distinct !{!2993, !2994}
!2994 = !DILocation(line: 65, column: 9, scope: !2959)
!2995 = !DILocation(line: 71, column: 14, scope: !2959)
!2996 = !DILocation(line: 62, column: 5, scope: !2997)
!2997 = !DILexicalBlockFile(scope: !2860, file: !1016, discriminator: 2)
!2998 = distinct !{!2998, !2952}
!2999 = !DILocation(line: 73, column: 19, scope: !2860)
!3000 = !DILocation(line: 73, column: 6, scope: !2860)
!3001 = !DILocation(line: 73, column: 17, scope: !2860)
!3002 = !DILocation(line: 74, column: 21, scope: !2860)
!3003 = !DILocation(line: 74, column: 6, scope: !2860)
!3004 = !DILocation(line: 74, column: 19, scope: !2860)
!3005 = !DILocation(line: 75, column: 19, scope: !2860)
!3006 = !DILocation(line: 75, column: 6, scope: !2860)
!3007 = !DILocation(line: 75, column: 17, scope: !2860)
!3008 = !DILocation(line: 76, column: 13, scope: !2860)
!3009 = !DILocation(line: 76, column: 5, scope: !2860)
!3010 = !DILocation(line: 78, column: 5, scope: !2860)
!3011 = !DILocation(line: 79, column: 1, scope: !2860)
!3012 = distinct !DISubprogram(name: "ff_wma_total_gain_to_bits", scope: !1016, file: !1016, line: 354, type: !3013, isLocal: false, isDefinition: true, scopeLine: 355, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1740)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{!899, !899}
!3015 = !DILocalVariable(name: "total_gain", arg: 1, scope: !3012, file: !1016, line: 354, type: !899)
!3016 = !DILocation(line: 354, column: 35, scope: !3012)
!3017 = !DILocation(line: 356, column: 9, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3012, file: !1016, line: 356, column: 9)
!3019 = !DILocation(line: 356, column: 20, scope: !3018)
!3020 = !DILocation(line: 356, column: 9, scope: !3012)
!3021 = !DILocation(line: 357, column: 9, scope: !3018)
!3022 = !DILocation(line: 358, column: 14, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3018, file: !1016, line: 358, column: 14)
!3024 = !DILocation(line: 358, column: 25, scope: !3023)
!3025 = !DILocation(line: 358, column: 14, scope: !3018)
!3026 = !DILocation(line: 359, column: 9, scope: !3023)
!3027 = !DILocation(line: 360, column: 14, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3023, file: !1016, line: 360, column: 14)
!3029 = !DILocation(line: 360, column: 25, scope: !3028)
!3030 = !DILocation(line: 360, column: 14, scope: !3023)
!3031 = !DILocation(line: 361, column: 9, scope: !3028)
!3032 = !DILocation(line: 362, column: 14, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3028, file: !1016, line: 362, column: 14)
!3034 = !DILocation(line: 362, column: 25, scope: !3033)
!3035 = !DILocation(line: 362, column: 14, scope: !3028)
!3036 = !DILocation(line: 363, column: 9, scope: !3033)
!3037 = !DILocation(line: 365, column: 9, scope: !3033)
!3038 = !DILocation(line: 366, column: 1, scope: !3012)
!3039 = distinct !DISubprogram(name: "ff_wma_end", scope: !1016, file: !1016, line: 368, type: !1119, isLocal: false, isDefinition: true, scopeLine: 369, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1740)
!3040 = !DILocalVariable(name: "avctx", arg: 1, scope: !3039, file: !1016, line: 368, type: !1019)
!3041 = !DILocation(line: 368, column: 32, scope: !3039)
!3042 = !DILocalVariable(name: "s", scope: !3039, file: !1016, line: 370, type: !1747)
!3043 = !DILocation(line: 370, column: 22, scope: !3039)
!3044 = !DILocation(line: 370, column: 26, scope: !3039)
!3045 = !DILocation(line: 370, column: 33, scope: !3039)
!3046 = !DILocalVariable(name: "i", scope: !3039, file: !1016, line: 371, type: !899)
!3047 = !DILocation(line: 371, column: 9, scope: !3039)
!3048 = !DILocation(line: 373, column: 12, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3039, file: !1016, line: 373, column: 5)
!3050 = !DILocation(line: 373, column: 10, scope: !3049)
!3051 = !DILocation(line: 373, column: 17, scope: !3052)
!3052 = !DILexicalBlockFile(scope: !3053, file: !1016, discriminator: 1)
!3053 = distinct !DILexicalBlock(scope: !3049, file: !1016, line: 373, column: 5)
!3054 = !DILocation(line: 373, column: 21, scope: !3052)
!3055 = !DILocation(line: 373, column: 24, scope: !3052)
!3056 = !DILocation(line: 373, column: 19, scope: !3052)
!3057 = !DILocation(line: 373, column: 5, scope: !3052)
!3058 = !DILocation(line: 374, column: 34, scope: !3053)
!3059 = !DILocation(line: 374, column: 22, scope: !3053)
!3060 = !DILocation(line: 374, column: 25, scope: !3053)
!3061 = !DILocation(line: 374, column: 9, scope: !3053)
!3062 = !DILocation(line: 373, column: 41, scope: !3063)
!3063 = !DILexicalBlockFile(scope: !3053, file: !1016, discriminator: 2)
!3064 = !DILocation(line: 373, column: 5, scope: !3063)
!3065 = distinct !{!3065, !3066}
!3066 = !DILocation(line: 373, column: 5, scope: !3039)
!3067 = !DILocation(line: 376, column: 9, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3039, file: !1016, line: 376, column: 9)
!3069 = !DILocation(line: 376, column: 12, scope: !3068)
!3070 = !DILocation(line: 376, column: 9, scope: !3039)
!3071 = !DILocation(line: 377, column: 22, scope: !3068)
!3072 = !DILocation(line: 377, column: 25, scope: !3068)
!3073 = !DILocation(line: 377, column: 9, scope: !3068)
!3074 = !DILocation(line: 378, column: 9, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3039, file: !1016, line: 378, column: 9)
!3076 = !DILocation(line: 378, column: 12, scope: !3075)
!3077 = !DILocation(line: 378, column: 9, scope: !3039)
!3078 = !DILocation(line: 379, column: 22, scope: !3075)
!3079 = !DILocation(line: 379, column: 25, scope: !3075)
!3080 = !DILocation(line: 379, column: 9, scope: !3075)
!3081 = !DILocation(line: 380, column: 12, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3039, file: !1016, line: 380, column: 5)
!3083 = !DILocation(line: 380, column: 10, scope: !3082)
!3084 = !DILocation(line: 380, column: 17, scope: !3085)
!3085 = !DILexicalBlockFile(scope: !3086, file: !1016, discriminator: 1)
!3086 = distinct !DILexicalBlock(scope: !3082, file: !1016, line: 380, column: 5)
!3087 = !DILocation(line: 380, column: 19, scope: !3085)
!3088 = !DILocation(line: 380, column: 5, scope: !3085)
!3089 = !DILocation(line: 381, column: 34, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3086, file: !1016, line: 380, column: 29)
!3091 = !DILocation(line: 381, column: 22, scope: !3090)
!3092 = !DILocation(line: 381, column: 25, scope: !3090)
!3093 = !DILocation(line: 381, column: 9, scope: !3090)
!3094 = !DILocation(line: 382, column: 32, scope: !3090)
!3095 = !DILocation(line: 382, column: 19, scope: !3090)
!3096 = !DILocation(line: 382, column: 22, scope: !3090)
!3097 = !DILocation(line: 382, column: 18, scope: !3090)
!3098 = !DILocation(line: 382, column: 9, scope: !3090)
!3099 = !DILocation(line: 383, column: 34, scope: !3090)
!3100 = !DILocation(line: 383, column: 19, scope: !3090)
!3101 = !DILocation(line: 383, column: 22, scope: !3090)
!3102 = !DILocation(line: 383, column: 18, scope: !3090)
!3103 = !DILocation(line: 383, column: 9, scope: !3090)
!3104 = !DILocation(line: 384, column: 32, scope: !3090)
!3105 = !DILocation(line: 384, column: 19, scope: !3090)
!3106 = !DILocation(line: 384, column: 22, scope: !3090)
!3107 = !DILocation(line: 384, column: 18, scope: !3090)
!3108 = !DILocation(line: 384, column: 9, scope: !3090)
!3109 = !DILocation(line: 385, column: 5, scope: !3090)
!3110 = !DILocation(line: 380, column: 25, scope: !3111)
!3111 = !DILexicalBlockFile(scope: !3086, file: !1016, discriminator: 2)
!3112 = !DILocation(line: 380, column: 5, scope: !3111)
!3113 = distinct !{!3113, !3114}
!3114 = !DILocation(line: 380, column: 5, scope: !3039)
!3115 = !DILocation(line: 386, column: 15, scope: !3039)
!3116 = !DILocation(line: 386, column: 18, scope: !3039)
!3117 = !DILocation(line: 386, column: 14, scope: !3039)
!3118 = !DILocation(line: 386, column: 5, scope: !3039)
!3119 = !DILocation(line: 388, column: 5, scope: !3039)
!3120 = distinct !DISubprogram(name: "ff_wma_get_large_val", scope: !1016, file: !1016, line: 396, type: !3121, isLocal: false, isDefinition: true, scopeLine: 397, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1740)
!3121 = !DISubroutineType(types: !3122)
!3122 = !{!900, !3123}
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64, align: 64)
!3124 = !DILocalVariable(name: "gb", arg: 1, scope: !3120, file: !1016, line: 396, type: !3123)
!3125 = !DILocation(line: 396, column: 50, scope: !3120)
!3126 = !DILocalVariable(name: "n_bits", scope: !3120, file: !1016, line: 399, type: !899)
!3127 = !DILocation(line: 399, column: 9, scope: !3120)
!3128 = !DILocation(line: 401, column: 19, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3120, file: !1016, line: 401, column: 9)
!3130 = !DILocation(line: 401, column: 9, scope: !3129)
!3131 = !DILocation(line: 401, column: 9, scope: !3120)
!3132 = !DILocation(line: 402, column: 16, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3129, file: !1016, line: 401, column: 24)
!3134 = !DILocation(line: 403, column: 23, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3133, file: !1016, line: 403, column: 13)
!3136 = !DILocation(line: 403, column: 13, scope: !3135)
!3137 = !DILocation(line: 403, column: 13, scope: !3133)
!3138 = !DILocation(line: 404, column: 20, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3135, file: !1016, line: 403, column: 28)
!3140 = !DILocation(line: 405, column: 27, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3139, file: !1016, line: 405, column: 17)
!3142 = !DILocation(line: 405, column: 17, scope: !3141)
!3143 = !DILocation(line: 405, column: 17, scope: !3139)
!3144 = !DILocation(line: 406, column: 24, scope: !3141)
!3145 = !DILocation(line: 406, column: 17, scope: !3141)
!3146 = !DILocation(line: 407, column: 9, scope: !3139)
!3147 = !DILocation(line: 408, column: 5, scope: !3133)
!3148 = !DILocation(line: 409, column: 26, scope: !3120)
!3149 = !DILocation(line: 409, column: 30, scope: !3120)
!3150 = !DILocation(line: 409, column: 12, scope: !3120)
!3151 = !DILocation(line: 409, column: 5, scope: !3120)
!3152 = distinct !DISubprogram(name: "get_bits1", scope: !1754, file: !1754, line: 487, type: !3121, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1740)
!3153 = !DILocalVariable(name: "s", arg: 1, scope: !3152, file: !1754, line: 487, type: !3123)
!3154 = !DILocation(line: 487, column: 53, scope: !3152)
!3155 = !DILocalVariable(name: "index", scope: !3152, file: !1754, line: 499, type: !900)
!3156 = !DILocation(line: 499, column: 18, scope: !3152)
!3157 = !DILocation(line: 499, column: 26, scope: !3152)
!3158 = !DILocation(line: 499, column: 29, scope: !3152)
!3159 = !DILocalVariable(name: "result", scope: !3152, file: !1754, line: 500, type: !912)
!3160 = !DILocation(line: 500, column: 13, scope: !3152)
!3161 = !DILocation(line: 500, column: 32, scope: !3152)
!3162 = !DILocation(line: 500, column: 38, scope: !3152)
!3163 = !DILocation(line: 500, column: 22, scope: !3152)
!3164 = !DILocation(line: 500, column: 25, scope: !3152)
!3165 = !DILocation(line: 505, column: 16, scope: !3152)
!3166 = !DILocation(line: 505, column: 22, scope: !3152)
!3167 = !DILocation(line: 505, column: 12, scope: !3152)
!3168 = !DILocation(line: 506, column: 12, scope: !3152)
!3169 = !DILocation(line: 509, column: 9, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3152, file: !1754, line: 509, column: 9)
!3171 = !DILocation(line: 509, column: 12, scope: !3170)
!3172 = !DILocation(line: 509, column: 20, scope: !3170)
!3173 = !DILocation(line: 509, column: 23, scope: !3170)
!3174 = !DILocation(line: 509, column: 18, scope: !3170)
!3175 = !DILocation(line: 509, column: 9, scope: !3152)
!3176 = !DILocation(line: 511, column: 14, scope: !3170)
!3177 = !DILocation(line: 511, column: 9, scope: !3170)
!3178 = !DILocation(line: 512, column: 16, scope: !3152)
!3179 = !DILocation(line: 512, column: 5, scope: !3152)
!3180 = !DILocation(line: 512, column: 8, scope: !3152)
!3181 = !DILocation(line: 512, column: 14, scope: !3152)
!3182 = !DILocation(line: 514, column: 12, scope: !3152)
!3183 = !DILocation(line: 514, column: 5, scope: !3152)
!3184 = distinct !DISubprogram(name: "get_bits_long", scope: !1754, file: !1754, line: 531, type: !3185, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1740)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!900, !3123, !899}
!3187 = !DILocalVariable(name: "s", arg: 1, scope: !3184, file: !1754, line: 531, type: !3123)
!3188 = !DILocation(line: 531, column: 57, scope: !3184)
!3189 = !DILocalVariable(name: "n", arg: 2, scope: !3184, file: !1754, line: 531, type: !899)
!3190 = !DILocation(line: 531, column: 64, scope: !3184)
!3191 = !DILocation(line: 534, column: 10, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3184, file: !1754, line: 534, column: 9)
!3193 = !DILocation(line: 534, column: 9, scope: !3184)
!3194 = !DILocation(line: 535, column: 9, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3192, file: !1754, line: 534, column: 13)
!3196 = !DILocation(line: 540, column: 16, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3192, file: !1754, line: 540, column: 16)
!3198 = !DILocation(line: 540, column: 18, scope: !3197)
!3199 = !DILocation(line: 540, column: 16, scope: !3192)
!3200 = !DILocation(line: 541, column: 25, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3197, file: !1754, line: 540, column: 25)
!3202 = !DILocation(line: 541, column: 28, scope: !3201)
!3203 = !DILocation(line: 541, column: 16, scope: !3201)
!3204 = !DILocation(line: 541, column: 9, scope: !3201)
!3205 = !DILocalVariable(name: "ret", scope: !3206, file: !1754, line: 547, type: !900)
!3206 = distinct !DILexicalBlock(scope: !3197, file: !1754, line: 542, column: 12)
!3207 = !DILocation(line: 547, column: 18, scope: !3206)
!3208 = !DILocation(line: 547, column: 33, scope: !3206)
!3209 = !DILocation(line: 547, column: 24, scope: !3206)
!3210 = !DILocation(line: 547, column: 44, scope: !3206)
!3211 = !DILocation(line: 547, column: 46, scope: !3206)
!3212 = !DILocation(line: 547, column: 40, scope: !3206)
!3213 = !DILocation(line: 548, column: 16, scope: !3206)
!3214 = !DILocation(line: 548, column: 31, scope: !3206)
!3215 = !DILocation(line: 548, column: 34, scope: !3206)
!3216 = !DILocation(line: 548, column: 36, scope: !3206)
!3217 = !DILocation(line: 548, column: 22, scope: !3206)
!3218 = !DILocation(line: 548, column: 20, scope: !3206)
!3219 = !DILocation(line: 548, column: 9, scope: !3206)
!3220 = !DILocation(line: 552, column: 1, scope: !3184)
!3221 = distinct !DISubprogram(name: "ff_wma_run_level_decode", scope: !1016, file: !1016, line: 428, type: !3222, isLocal: false, isDefinition: true, scopeLine: 434, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1740)
!3222 = !DISubroutineType(types: !3223)
!3223 = !{!899, !1019, !3123, !2863, !1900, !952, !899, !3224, !899, !899, !899, !899, !899}
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64, align: 64)
!3225 = !DILocalVariable(name: "x", arg: 1, scope: !3226, file: !3227, line: 66, type: !903)
!3226 = distinct !DISubprogram(name: "av_bswap32", scope: !3227, file: !3227, line: 66, type: !3228, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1740)
!3227 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3228 = !DISubroutineType(types: !3229)
!3229 = !{!903, !903}
!3230 = !DILocation(line: 66, column: 98, scope: !3226, inlinedAt: !3231)
!3231 = distinct !DILocation(line: 788, column: 601, scope: !3232, inlinedAt: !3241)
!3232 = !DILexicalBlockFile(scope: !3233, file: !1754, discriminator: 11)
!3233 = distinct !DILexicalBlock(scope: !3234, file: !1754, line: 788, column: 490)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !1754, line: 788, column: 466)
!3235 = distinct !DILexicalBlock(scope: !3236, file: !1754, line: 788, column: 154)
!3236 = distinct !DILexicalBlock(scope: !3237, file: !1754, line: 788, column: 130)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !1754, line: 788, column: 8)
!3238 = distinct !DISubprogram(name: "get_vlc2", scope: !1754, file: !1754, line: 762, type: !3239, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1740)
!3239 = !DISubroutineType(types: !3240)
!3240 = !{!899, !3123, !1786, !899, !899}
!3241 = distinct !DILocation(line: 440, column: 16, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3243, file: !1016, line: 439, column: 42)
!3243 = distinct !DILexicalBlock(scope: !3244, file: !1016, line: 439, column: 5)
!3244 = distinct !DILexicalBlock(scope: !3221, file: !1016, line: 439, column: 5)
!3245 = !DILocation(line: 66, column: 98, scope: !3226, inlinedAt: !3246)
!3246 = distinct !DILocation(line: 788, column: 259, scope: !3247, inlinedAt: !3241)
!3247 = !DILexicalBlockFile(scope: !3235, file: !1754, discriminator: 6)
!3248 = !DILocation(line: 66, column: 98, scope: !3226, inlinedAt: !3249)
!3249 = distinct !DILocation(line: 786, column: 16, scope: !3238, inlinedAt: !3241)
!3250 = !DILocalVariable(name: "s", arg: 1, scope: !3238, file: !1754, line: 762, type: !3123)
!3251 = !DILocation(line: 762, column: 74, scope: !3238, inlinedAt: !3241)
!3252 = !DILocalVariable(name: "table", arg: 2, scope: !3238, file: !1754, line: 762, type: !1786)
!3253 = !DILocation(line: 762, column: 87, scope: !3238, inlinedAt: !3241)
!3254 = !DILocalVariable(name: "bits", arg: 3, scope: !3238, file: !1754, line: 763, type: !899)
!3255 = !DILocation(line: 763, column: 42, scope: !3238, inlinedAt: !3241)
!3256 = !DILocalVariable(name: "max_depth", arg: 4, scope: !3238, file: !1754, line: 763, type: !899)
!3257 = !DILocation(line: 763, column: 52, scope: !3238, inlinedAt: !3241)
!3258 = !DILocalVariable(name: "code", scope: !3238, file: !1754, line: 783, type: !899)
!3259 = !DILocation(line: 783, column: 9, scope: !3238, inlinedAt: !3241)
!3260 = !DILocalVariable(name: "re_index", scope: !3238, file: !1754, line: 785, type: !900)
!3261 = !DILocation(line: 785, column: 18, scope: !3238, inlinedAt: !3241)
!3262 = !DILocalVariable(name: "re_cache", scope: !3238, file: !1754, line: 785, type: !900)
!3263 = !DILocation(line: 785, column: 78, scope: !3238, inlinedAt: !3241)
!3264 = !DILocalVariable(name: "re_size_plus8", scope: !3238, file: !1754, line: 785, type: !900)
!3265 = !DILocation(line: 785, column: 101, scope: !3238, inlinedAt: !3241)
!3266 = !DILocalVariable(name: "n", scope: !3237, file: !1754, line: 788, type: !899)
!3267 = !DILocation(line: 788, column: 14, scope: !3237, inlinedAt: !3241)
!3268 = !DILocalVariable(name: "nb_bits", scope: !3237, file: !1754, line: 788, type: !899)
!3269 = !DILocation(line: 788, column: 17, scope: !3237, inlinedAt: !3241)
!3270 = !DILocalVariable(name: "index", scope: !3237, file: !1754, line: 788, type: !900)
!3271 = !DILocation(line: 788, column: 39, scope: !3237, inlinedAt: !3241)
!3272 = !DILocalVariable(name: "avctx", arg: 1, scope: !3221, file: !1016, line: 428, type: !1019)
!3273 = !DILocation(line: 428, column: 45, scope: !3221)
!3274 = !DILocalVariable(name: "gb", arg: 2, scope: !3221, file: !1016, line: 428, type: !3123)
!3275 = !DILocation(line: 428, column: 67, scope: !3221)
!3276 = !DILocalVariable(name: "vlc", arg: 3, scope: !3221, file: !1016, line: 429, type: !2863)
!3277 = !DILocation(line: 429, column: 34, scope: !3221)
!3278 = !DILocalVariable(name: "level_table", arg: 4, scope: !3221, file: !1016, line: 429, type: !1900)
!3279 = !DILocation(line: 429, column: 52, scope: !3221)
!3280 = !DILocalVariable(name: "run_table", arg: 5, scope: !3221, file: !1016, line: 430, type: !952)
!3281 = !DILocation(line: 430, column: 45, scope: !3221)
!3282 = !DILocalVariable(name: "version", arg: 6, scope: !3221, file: !1016, line: 430, type: !899)
!3283 = !DILocation(line: 430, column: 60, scope: !3221)
!3284 = !DILocalVariable(name: "ptr", arg: 7, scope: !3221, file: !1016, line: 431, type: !3224)
!3285 = !DILocation(line: 431, column: 38, scope: !3221)
!3286 = !DILocalVariable(name: "offset", arg: 8, scope: !3221, file: !1016, line: 431, type: !899)
!3287 = !DILocation(line: 431, column: 47, scope: !3221)
!3288 = !DILocalVariable(name: "num_coefs", arg: 9, scope: !3221, file: !1016, line: 431, type: !899)
!3289 = !DILocation(line: 431, column: 59, scope: !3221)
!3290 = !DILocalVariable(name: "block_len", arg: 10, scope: !3221, file: !1016, line: 432, type: !899)
!3291 = !DILocation(line: 432, column: 33, scope: !3221)
!3292 = !DILocalVariable(name: "frame_len_bits", arg: 11, scope: !3221, file: !1016, line: 432, type: !899)
!3293 = !DILocation(line: 432, column: 48, scope: !3221)
!3294 = !DILocalVariable(name: "coef_nb_bits", arg: 12, scope: !3221, file: !1016, line: 433, type: !899)
!3295 = !DILocation(line: 433, column: 33, scope: !3221)
!3296 = !DILocalVariable(name: "code", scope: !3221, file: !1016, line: 435, type: !899)
!3297 = !DILocation(line: 435, column: 9, scope: !3221)
!3298 = !DILocalVariable(name: "level", scope: !3221, file: !1016, line: 435, type: !899)
!3299 = !DILocation(line: 435, column: 15, scope: !3221)
!3300 = !DILocalVariable(name: "sign", scope: !3221, file: !1016, line: 435, type: !899)
!3301 = !DILocation(line: 435, column: 22, scope: !3221)
!3302 = !DILocalVariable(name: "ilvl", scope: !3221, file: !1016, line: 436, type: !901)
!3303 = !DILocation(line: 436, column: 21, scope: !3221)
!3304 = !DILocation(line: 436, column: 47, scope: !3221)
!3305 = !DILocation(line: 436, column: 28, scope: !3221)
!3306 = !DILocalVariable(name: "iptr", scope: !3221, file: !1016, line: 437, type: !905)
!3307 = !DILocation(line: 437, column: 15, scope: !3221)
!3308 = !DILocation(line: 437, column: 35, scope: !3221)
!3309 = !DILocation(line: 437, column: 22, scope: !3221)
!3310 = !DILocalVariable(name: "coef_mask", scope: !3221, file: !1016, line: 438, type: !3311)
!3311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !900)
!3312 = !DILocation(line: 438, column: 24, scope: !3221)
!3313 = !DILocation(line: 438, column: 36, scope: !3221)
!3314 = !DILocation(line: 438, column: 46, scope: !3221)
!3315 = !DILocation(line: 439, column: 5, scope: !3221)
!3316 = !DILocation(line: 439, column: 12, scope: !3317)
!3317 = !DILexicalBlockFile(scope: !3243, file: !1016, discriminator: 1)
!3318 = !DILocation(line: 439, column: 21, scope: !3317)
!3319 = !DILocation(line: 439, column: 19, scope: !3317)
!3320 = !DILocation(line: 439, column: 5, scope: !3317)
!3321 = !DILocation(line: 440, column: 25, scope: !3242)
!3322 = !DILocation(line: 440, column: 29, scope: !3242)
!3323 = !DILocation(line: 440, column: 34, scope: !3242)
!3324 = !DILocation(line: 440, column: 16, scope: !3242)
!3325 = !DILocation(line: 785, column: 30, scope: !3238, inlinedAt: !3241)
!3326 = !DILocation(line: 785, column: 34, scope: !3238, inlinedAt: !3241)
!3327 = !DILocation(line: 785, column: 118, scope: !3238, inlinedAt: !3241)
!3328 = !DILocation(line: 785, column: 122, scope: !3238, inlinedAt: !3241)
!3329 = !DILocation(line: 786, column: 60, scope: !3238, inlinedAt: !3241)
!3330 = !DILocation(line: 786, column: 64, scope: !3238, inlinedAt: !3241)
!3331 = !DILocation(line: 786, column: 74, scope: !3238, inlinedAt: !3241)
!3332 = !DILocation(line: 786, column: 83, scope: !3238, inlinedAt: !3241)
!3333 = !DILocation(line: 786, column: 71, scope: !3238, inlinedAt: !3241)
!3334 = !DILocation(line: 786, column: 92, scope: !3238, inlinedAt: !3241)
!3335 = !DILocation(line: 786, column: 16, scope: !3238, inlinedAt: !3241)
!3336 = !DILocation(line: 68, column: 16, scope: !3226, inlinedAt: !3249)
!3337 = !DILocation(line: 68, column: 19, scope: !3226, inlinedAt: !3249)
!3338 = !DILocation(line: 68, column: 24, scope: !3226, inlinedAt: !3249)
!3339 = !DILocation(line: 68, column: 38, scope: !3226, inlinedAt: !3249)
!3340 = !DILocation(line: 68, column: 41, scope: !3226, inlinedAt: !3249)
!3341 = !DILocation(line: 68, column: 46, scope: !3226, inlinedAt: !3249)
!3342 = !DILocation(line: 68, column: 34, scope: !3226, inlinedAt: !3249)
!3343 = !DILocation(line: 68, column: 57, scope: !3226, inlinedAt: !3249)
!3344 = !DILocation(line: 68, column: 69, scope: !3226, inlinedAt: !3249)
!3345 = !DILocation(line: 68, column: 72, scope: !3226, inlinedAt: !3249)
!3346 = !DILocation(line: 68, column: 79, scope: !3226, inlinedAt: !3249)
!3347 = !DILocation(line: 68, column: 84, scope: !3226, inlinedAt: !3249)
!3348 = !DILocation(line: 68, column: 99, scope: !3226, inlinedAt: !3249)
!3349 = !DILocation(line: 68, column: 102, scope: !3226, inlinedAt: !3249)
!3350 = !DILocation(line: 68, column: 109, scope: !3226, inlinedAt: !3249)
!3351 = !DILocation(line: 68, column: 114, scope: !3226, inlinedAt: !3249)
!3352 = !DILocation(line: 68, column: 94, scope: !3226, inlinedAt: !3249)
!3353 = !DILocation(line: 68, column: 63, scope: !3226, inlinedAt: !3249)
!3354 = !DILocation(line: 786, column: 100, scope: !3238, inlinedAt: !3241)
!3355 = !DILocation(line: 786, column: 109, scope: !3238, inlinedAt: !3241)
!3356 = !DILocation(line: 786, column: 96, scope: !3238, inlinedAt: !3241)
!3357 = !DILocation(line: 786, column: 14, scope: !3238, inlinedAt: !3241)
!3358 = !DILocation(line: 788, column: 64, scope: !3359, inlinedAt: !3241)
!3359 = !DILexicalBlockFile(scope: !3237, file: !1754, discriminator: 1)
!3360 = !DILocation(line: 788, column: 74, scope: !3359, inlinedAt: !3241)
!3361 = !DILocation(line: 788, column: 54, scope: !3359, inlinedAt: !3241)
!3362 = !DILocation(line: 788, column: 52, scope: !3359, inlinedAt: !3241)
!3363 = !DILocation(line: 788, column: 94, scope: !3359, inlinedAt: !3241)
!3364 = !DILocation(line: 788, column: 88, scope: !3359, inlinedAt: !3241)
!3365 = !DILocation(line: 788, column: 86, scope: !3359, inlinedAt: !3241)
!3366 = !DILocation(line: 788, column: 115, scope: !3359, inlinedAt: !3241)
!3367 = !DILocation(line: 788, column: 109, scope: !3359, inlinedAt: !3241)
!3368 = !DILocation(line: 788, column: 107, scope: !3359, inlinedAt: !3241)
!3369 = !DILocation(line: 788, column: 130, scope: !3359, inlinedAt: !3241)
!3370 = !DILocation(line: 788, column: 140, scope: !3359, inlinedAt: !3241)
!3371 = !DILocation(line: 788, column: 144, scope: !3359, inlinedAt: !3241)
!3372 = !DILocation(line: 788, column: 147, scope: !3373, inlinedAt: !3241)
!3373 = !DILexicalBlockFile(scope: !3236, file: !1754, discriminator: 2)
!3374 = !DILocation(line: 788, column: 149, scope: !3373, inlinedAt: !3241)
!3375 = !DILocation(line: 788, column: 130, scope: !3373, inlinedAt: !3241)
!3376 = !DILocation(line: 788, column: 169, scope: !3377, inlinedAt: !3241)
!3377 = !DILexicalBlockFile(scope: !3235, file: !1754, discriminator: 3)
!3378 = !DILocation(line: 788, column: 187, scope: !3377, inlinedAt: !3241)
!3379 = !DILocation(line: 788, column: 199, scope: !3377, inlinedAt: !3241)
!3380 = !DILocation(line: 788, column: 196, scope: !3377, inlinedAt: !3241)
!3381 = !DILocation(line: 788, column: 184, scope: !3377, inlinedAt: !3241)
!3382 = !DILocation(line: 788, column: 168, scope: !3377, inlinedAt: !3241)
!3383 = !DILocation(line: 788, column: 209, scope: !3384, inlinedAt: !3241)
!3384 = !DILexicalBlockFile(scope: !3235, file: !1754, discriminator: 4)
!3385 = !DILocation(line: 788, column: 221, scope: !3384, inlinedAt: !3241)
!3386 = !DILocation(line: 788, column: 218, scope: !3384, inlinedAt: !3241)
!3387 = !DILocation(line: 788, column: 168, scope: !3384, inlinedAt: !3241)
!3388 = !DILocation(line: 788, column: 231, scope: !3389, inlinedAt: !3241)
!3389 = !DILexicalBlockFile(scope: !3235, file: !1754, discriminator: 5)
!3390 = !DILocation(line: 788, column: 168, scope: !3389, inlinedAt: !3241)
!3391 = !DILocation(line: 788, column: 168, scope: !3247, inlinedAt: !3241)
!3392 = !DILocation(line: 788, column: 165, scope: !3247, inlinedAt: !3241)
!3393 = !DILocation(line: 788, column: 303, scope: !3247, inlinedAt: !3241)
!3394 = !DILocation(line: 788, column: 307, scope: !3247, inlinedAt: !3241)
!3395 = !DILocation(line: 788, column: 317, scope: !3247, inlinedAt: !3241)
!3396 = !DILocation(line: 788, column: 326, scope: !3247, inlinedAt: !3241)
!3397 = !DILocation(line: 788, column: 314, scope: !3247, inlinedAt: !3241)
!3398 = !DILocation(line: 788, column: 335, scope: !3247, inlinedAt: !3241)
!3399 = !DILocation(line: 788, column: 259, scope: !3247, inlinedAt: !3241)
!3400 = !DILocation(line: 68, column: 16, scope: !3226, inlinedAt: !3246)
!3401 = !DILocation(line: 68, column: 19, scope: !3226, inlinedAt: !3246)
!3402 = !DILocation(line: 68, column: 24, scope: !3226, inlinedAt: !3246)
!3403 = !DILocation(line: 68, column: 38, scope: !3226, inlinedAt: !3246)
!3404 = !DILocation(line: 68, column: 41, scope: !3226, inlinedAt: !3246)
!3405 = !DILocation(line: 68, column: 46, scope: !3226, inlinedAt: !3246)
!3406 = !DILocation(line: 68, column: 34, scope: !3226, inlinedAt: !3246)
!3407 = !DILocation(line: 68, column: 57, scope: !3226, inlinedAt: !3246)
!3408 = !DILocation(line: 68, column: 69, scope: !3226, inlinedAt: !3246)
!3409 = !DILocation(line: 68, column: 72, scope: !3226, inlinedAt: !3246)
!3410 = !DILocation(line: 68, column: 79, scope: !3226, inlinedAt: !3246)
!3411 = !DILocation(line: 68, column: 84, scope: !3226, inlinedAt: !3246)
!3412 = !DILocation(line: 68, column: 99, scope: !3226, inlinedAt: !3246)
!3413 = !DILocation(line: 68, column: 102, scope: !3226, inlinedAt: !3246)
!3414 = !DILocation(line: 68, column: 109, scope: !3226, inlinedAt: !3246)
!3415 = !DILocation(line: 68, column: 114, scope: !3226, inlinedAt: !3246)
!3416 = !DILocation(line: 68, column: 94, scope: !3226, inlinedAt: !3246)
!3417 = !DILocation(line: 68, column: 63, scope: !3226, inlinedAt: !3246)
!3418 = !DILocation(line: 788, column: 343, scope: !3247, inlinedAt: !3241)
!3419 = !DILocation(line: 788, column: 352, scope: !3247, inlinedAt: !3241)
!3420 = !DILocation(line: 788, column: 339, scope: !3247, inlinedAt: !3241)
!3421 = !DILocation(line: 788, column: 257, scope: !3247, inlinedAt: !3241)
!3422 = !DILocation(line: 788, column: 369, scope: !3247, inlinedAt: !3241)
!3423 = !DILocation(line: 788, column: 368, scope: !3247, inlinedAt: !3241)
!3424 = !DILocation(line: 788, column: 366, scope: !3247, inlinedAt: !3241)
!3425 = !DILocation(line: 788, column: 390, scope: !3247, inlinedAt: !3241)
!3426 = !DILocation(line: 788, column: 400, scope: !3247, inlinedAt: !3241)
!3427 = !DILocation(line: 788, column: 380, scope: !3428, inlinedAt: !3241)
!3428 = !DILexicalBlockFile(scope: !3247, file: !1754, discriminator: 19)
!3429 = !DILocation(line: 788, column: 411, scope: !3247, inlinedAt: !3241)
!3430 = !DILocation(line: 788, column: 409, scope: !3247, inlinedAt: !3241)
!3431 = !DILocation(line: 788, column: 378, scope: !3247, inlinedAt: !3241)
!3432 = !DILocation(line: 788, column: 430, scope: !3247, inlinedAt: !3241)
!3433 = !DILocation(line: 788, column: 424, scope: !3247, inlinedAt: !3241)
!3434 = !DILocation(line: 788, column: 422, scope: !3247, inlinedAt: !3241)
!3435 = !DILocation(line: 788, column: 451, scope: !3247, inlinedAt: !3241)
!3436 = !DILocation(line: 788, column: 445, scope: !3247, inlinedAt: !3241)
!3437 = !DILocation(line: 788, column: 443, scope: !3247, inlinedAt: !3241)
!3438 = !DILocation(line: 788, column: 466, scope: !3247, inlinedAt: !3241)
!3439 = !DILocation(line: 788, column: 476, scope: !3247, inlinedAt: !3241)
!3440 = !DILocation(line: 788, column: 480, scope: !3247, inlinedAt: !3241)
!3441 = !DILocation(line: 788, column: 483, scope: !3442, inlinedAt: !3241)
!3442 = !DILexicalBlockFile(scope: !3234, file: !1754, discriminator: 7)
!3443 = !DILocation(line: 788, column: 485, scope: !3442, inlinedAt: !3241)
!3444 = !DILocation(line: 788, column: 466, scope: !3442, inlinedAt: !3241)
!3445 = !DILocation(line: 788, column: 505, scope: !3446, inlinedAt: !3241)
!3446 = !DILexicalBlockFile(scope: !3233, file: !1754, discriminator: 8)
!3447 = !DILocation(line: 788, column: 523, scope: !3446, inlinedAt: !3241)
!3448 = !DILocation(line: 788, column: 535, scope: !3446, inlinedAt: !3241)
!3449 = !DILocation(line: 788, column: 532, scope: !3446, inlinedAt: !3241)
!3450 = !DILocation(line: 788, column: 520, scope: !3446, inlinedAt: !3241)
!3451 = !DILocation(line: 788, column: 504, scope: !3446, inlinedAt: !3241)
!3452 = !DILocation(line: 788, column: 548, scope: !3453, inlinedAt: !3241)
!3453 = !DILexicalBlockFile(scope: !3233, file: !1754, discriminator: 9)
!3454 = !DILocation(line: 788, column: 560, scope: !3453, inlinedAt: !3241)
!3455 = !DILocation(line: 788, column: 557, scope: !3453, inlinedAt: !3241)
!3456 = !DILocation(line: 788, column: 504, scope: !3453, inlinedAt: !3241)
!3457 = !DILocation(line: 788, column: 573, scope: !3458, inlinedAt: !3241)
!3458 = !DILexicalBlockFile(scope: !3233, file: !1754, discriminator: 10)
!3459 = !DILocation(line: 788, column: 504, scope: !3458, inlinedAt: !3241)
!3460 = !DILocation(line: 788, column: 504, scope: !3232, inlinedAt: !3241)
!3461 = !DILocation(line: 788, column: 501, scope: !3232, inlinedAt: !3241)
!3462 = !DILocation(line: 788, column: 645, scope: !3232, inlinedAt: !3241)
!3463 = !DILocation(line: 788, column: 649, scope: !3232, inlinedAt: !3241)
!3464 = !DILocation(line: 788, column: 659, scope: !3232, inlinedAt: !3241)
!3465 = !DILocation(line: 788, column: 668, scope: !3232, inlinedAt: !3241)
!3466 = !DILocation(line: 788, column: 656, scope: !3232, inlinedAt: !3241)
!3467 = !DILocation(line: 788, column: 677, scope: !3232, inlinedAt: !3241)
!3468 = !DILocation(line: 788, column: 601, scope: !3232, inlinedAt: !3241)
!3469 = !DILocation(line: 68, column: 16, scope: !3226, inlinedAt: !3231)
!3470 = !DILocation(line: 68, column: 19, scope: !3226, inlinedAt: !3231)
!3471 = !DILocation(line: 68, column: 24, scope: !3226, inlinedAt: !3231)
!3472 = !DILocation(line: 68, column: 38, scope: !3226, inlinedAt: !3231)
!3473 = !DILocation(line: 68, column: 41, scope: !3226, inlinedAt: !3231)
!3474 = !DILocation(line: 68, column: 46, scope: !3226, inlinedAt: !3231)
!3475 = !DILocation(line: 68, column: 34, scope: !3226, inlinedAt: !3231)
!3476 = !DILocation(line: 68, column: 57, scope: !3226, inlinedAt: !3231)
!3477 = !DILocation(line: 68, column: 69, scope: !3226, inlinedAt: !3231)
!3478 = !DILocation(line: 68, column: 72, scope: !3226, inlinedAt: !3231)
!3479 = !DILocation(line: 68, column: 79, scope: !3226, inlinedAt: !3231)
!3480 = !DILocation(line: 68, column: 84, scope: !3226, inlinedAt: !3231)
!3481 = !DILocation(line: 68, column: 99, scope: !3226, inlinedAt: !3231)
!3482 = !DILocation(line: 68, column: 102, scope: !3226, inlinedAt: !3231)
!3483 = !DILocation(line: 68, column: 109, scope: !3226, inlinedAt: !3231)
!3484 = !DILocation(line: 68, column: 114, scope: !3226, inlinedAt: !3231)
!3485 = !DILocation(line: 68, column: 94, scope: !3226, inlinedAt: !3231)
!3486 = !DILocation(line: 68, column: 63, scope: !3226, inlinedAt: !3231)
!3487 = !DILocation(line: 788, column: 685, scope: !3232, inlinedAt: !3241)
!3488 = !DILocation(line: 788, column: 694, scope: !3232, inlinedAt: !3241)
!3489 = !DILocation(line: 788, column: 681, scope: !3232, inlinedAt: !3241)
!3490 = !DILocation(line: 788, column: 599, scope: !3232, inlinedAt: !3241)
!3491 = !DILocation(line: 788, column: 711, scope: !3232, inlinedAt: !3241)
!3492 = !DILocation(line: 788, column: 710, scope: !3232, inlinedAt: !3241)
!3493 = !DILocation(line: 788, column: 708, scope: !3232, inlinedAt: !3241)
!3494 = !DILocation(line: 788, column: 732, scope: !3232, inlinedAt: !3241)
!3495 = !DILocation(line: 788, column: 742, scope: !3232, inlinedAt: !3241)
!3496 = !DILocation(line: 788, column: 722, scope: !3497, inlinedAt: !3241)
!3497 = !DILexicalBlockFile(scope: !3232, file: !1754, discriminator: 20)
!3498 = !DILocation(line: 788, column: 753, scope: !3232, inlinedAt: !3241)
!3499 = !DILocation(line: 788, column: 751, scope: !3232, inlinedAt: !3241)
!3500 = !DILocation(line: 788, column: 720, scope: !3232, inlinedAt: !3241)
!3501 = !DILocation(line: 788, column: 772, scope: !3232, inlinedAt: !3241)
!3502 = !DILocation(line: 788, column: 766, scope: !3232, inlinedAt: !3241)
!3503 = !DILocation(line: 788, column: 764, scope: !3232, inlinedAt: !3241)
!3504 = !DILocation(line: 788, column: 793, scope: !3232, inlinedAt: !3241)
!3505 = !DILocation(line: 788, column: 787, scope: !3232, inlinedAt: !3241)
!3506 = !DILocation(line: 788, column: 785, scope: !3232, inlinedAt: !3241)
!3507 = !DILocation(line: 788, column: 804, scope: !3232, inlinedAt: !3241)
!3508 = !DILocation(line: 788, column: 806, scope: !3509, inlinedAt: !3241)
!3509 = !DILexicalBlockFile(scope: !3235, file: !1754, discriminator: 12)
!3510 = !DILocation(line: 788, column: 827, scope: !3511, inlinedAt: !3241)
!3511 = !DILexicalBlockFile(scope: !3512, file: !1754, discriminator: 14)
!3512 = distinct !DILexicalBlock(scope: !3237, file: !1754, line: 788, column: 811)
!3513 = !DILocation(line: 788, column: 822, scope: !3511, inlinedAt: !3241)
!3514 = !DILocation(line: 788, column: 844, scope: !3511, inlinedAt: !3241)
!3515 = !DILocation(line: 788, column: 862, scope: !3511, inlinedAt: !3241)
!3516 = !DILocation(line: 788, column: 874, scope: !3511, inlinedAt: !3241)
!3517 = !DILocation(line: 788, column: 871, scope: !3511, inlinedAt: !3241)
!3518 = !DILocation(line: 788, column: 859, scope: !3511, inlinedAt: !3241)
!3519 = !DILocation(line: 788, column: 843, scope: !3511, inlinedAt: !3241)
!3520 = !DILocation(line: 788, column: 881, scope: !3521, inlinedAt: !3241)
!3521 = !DILexicalBlockFile(scope: !3512, file: !1754, discriminator: 15)
!3522 = !DILocation(line: 788, column: 893, scope: !3521, inlinedAt: !3241)
!3523 = !DILocation(line: 788, column: 890, scope: !3521, inlinedAt: !3241)
!3524 = !DILocation(line: 788, column: 843, scope: !3521, inlinedAt: !3241)
!3525 = !DILocation(line: 788, column: 900, scope: !3526, inlinedAt: !3241)
!3526 = !DILexicalBlockFile(scope: !3512, file: !1754, discriminator: 16)
!3527 = !DILocation(line: 788, column: 843, scope: !3526, inlinedAt: !3241)
!3528 = !DILocation(line: 788, column: 843, scope: !3529, inlinedAt: !3241)
!3529 = !DILexicalBlockFile(scope: !3512, file: !1754, discriminator: 17)
!3530 = !DILocation(line: 788, column: 840, scope: !3529, inlinedAt: !3241)
!3531 = !DILocation(line: 790, column: 18, scope: !3238, inlinedAt: !3241)
!3532 = !DILocation(line: 790, column: 6, scope: !3238, inlinedAt: !3241)
!3533 = !DILocation(line: 790, column: 10, scope: !3238, inlinedAt: !3241)
!3534 = !DILocation(line: 790, column: 16, scope: !3238, inlinedAt: !3241)
!3535 = !DILocation(line: 792, column: 12, scope: !3238, inlinedAt: !3241)
!3536 = !DILocation(line: 440, column: 14, scope: !3242)
!3537 = !DILocation(line: 441, column: 13, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3242, file: !1016, line: 441, column: 13)
!3539 = !DILocation(line: 441, column: 18, scope: !3538)
!3540 = !DILocation(line: 441, column: 13, scope: !3242)
!3541 = !DILocation(line: 443, column: 33, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3538, file: !1016, line: 441, column: 23)
!3543 = !DILocation(line: 443, column: 23, scope: !3542)
!3544 = !DILocation(line: 443, column: 20, scope: !3542)
!3545 = !DILocation(line: 444, column: 30, scope: !3542)
!3546 = !DILocation(line: 444, column: 20, scope: !3542)
!3547 = !DILocation(line: 444, column: 34, scope: !3542)
!3548 = !DILocation(line: 444, column: 18, scope: !3542)
!3549 = !DILocation(line: 445, column: 45, scope: !3542)
!3550 = !DILocation(line: 445, column: 40, scope: !3542)
!3551 = !DILocation(line: 445, column: 54, scope: !3542)
!3552 = !DILocation(line: 445, column: 59, scope: !3542)
!3553 = !DILocation(line: 445, column: 51, scope: !3542)
!3554 = !DILocation(line: 445, column: 18, scope: !3542)
!3555 = !DILocation(line: 445, column: 27, scope: !3542)
!3556 = !DILocation(line: 445, column: 25, scope: !3542)
!3557 = !DILocation(line: 445, column: 13, scope: !3542)
!3558 = !DILocation(line: 445, column: 38, scope: !3542)
!3559 = !DILocation(line: 446, column: 9, scope: !3542)
!3560 = !DILocation(line: 446, column: 20, scope: !3561)
!3561 = !DILexicalBlockFile(scope: !3562, file: !1016, discriminator: 1)
!3562 = distinct !DILexicalBlock(scope: !3538, file: !1016, line: 446, column: 20)
!3563 = !DILocation(line: 446, column: 25, scope: !3561)
!3564 = !DILocation(line: 448, column: 13, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3562, file: !1016, line: 446, column: 31)
!3566 = !DILocation(line: 451, column: 18, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !1016, line: 451, column: 17)
!3568 = distinct !DILexicalBlock(scope: !3562, file: !1016, line: 449, column: 16)
!3569 = !DILocation(line: 451, column: 17, scope: !3568)
!3570 = !DILocation(line: 452, column: 34, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3567, file: !1016, line: 451, column: 27)
!3572 = !DILocation(line: 452, column: 38, scope: !3571)
!3573 = !DILocation(line: 452, column: 25, scope: !3571)
!3574 = !DILocation(line: 452, column: 23, scope: !3571)
!3575 = !DILocation(line: 455, column: 36, scope: !3571)
!3576 = !DILocation(line: 455, column: 40, scope: !3571)
!3577 = !DILocation(line: 455, column: 27, scope: !3571)
!3578 = !DILocation(line: 455, column: 24, scope: !3571)
!3579 = !DILocation(line: 456, column: 13, scope: !3571)
!3580 = !DILocation(line: 457, column: 46, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3567, file: !1016, line: 456, column: 20)
!3582 = !DILocation(line: 457, column: 25, scope: !3581)
!3583 = !DILocation(line: 457, column: 23, scope: !3581)
!3584 = !DILocation(line: 459, column: 31, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3581, file: !1016, line: 459, column: 21)
!3586 = !DILocation(line: 459, column: 21, scope: !3585)
!3587 = !DILocation(line: 459, column: 21, scope: !3581)
!3588 = !DILocation(line: 460, column: 35, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !1016, line: 460, column: 25)
!3590 = distinct !DILexicalBlock(scope: !3585, file: !1016, line: 459, column: 36)
!3591 = !DILocation(line: 460, column: 25, scope: !3589)
!3592 = !DILocation(line: 460, column: 25, scope: !3590)
!3593 = !DILocation(line: 461, column: 39, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !1016, line: 461, column: 29)
!3595 = distinct !DILexicalBlock(scope: !3589, file: !1016, line: 460, column: 40)
!3596 = !DILocation(line: 461, column: 29, scope: !3594)
!3597 = !DILocation(line: 461, column: 29, scope: !3595)
!3598 = !DILocation(line: 462, column: 36, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3594, file: !1016, line: 461, column: 44)
!3600 = !DILocation(line: 462, column: 29, scope: !3599)
!3601 = !DILocation(line: 464, column: 29, scope: !3599)
!3602 = !DILocation(line: 466, column: 48, scope: !3594)
!3603 = !DILocation(line: 466, column: 52, scope: !3594)
!3604 = !DILocation(line: 466, column: 39, scope: !3594)
!3605 = !DILocation(line: 466, column: 68, scope: !3594)
!3606 = !DILocation(line: 466, column: 36, scope: !3594)
!3607 = !DILocation(line: 467, column: 21, scope: !3595)
!3608 = !DILocation(line: 468, column: 44, scope: !3589)
!3609 = !DILocation(line: 468, column: 35, scope: !3589)
!3610 = !DILocation(line: 468, column: 51, scope: !3589)
!3611 = !DILocation(line: 468, column: 32, scope: !3589)
!3612 = !DILocation(line: 469, column: 17, scope: !3590)
!3613 = !DILocation(line: 471, column: 30, scope: !3568)
!3614 = !DILocation(line: 471, column: 20, scope: !3568)
!3615 = !DILocation(line: 471, column: 34, scope: !3568)
!3616 = !DILocation(line: 471, column: 18, scope: !3568)
!3617 = !DILocation(line: 472, column: 40, scope: !3568)
!3618 = !DILocation(line: 472, column: 48, scope: !3568)
!3619 = !DILocation(line: 472, column: 46, scope: !3568)
!3620 = !DILocation(line: 472, column: 56, scope: !3568)
!3621 = !DILocation(line: 472, column: 54, scope: !3568)
!3622 = !DILocation(line: 472, column: 39, scope: !3568)
!3623 = !DILocation(line: 472, column: 17, scope: !3568)
!3624 = !DILocation(line: 472, column: 26, scope: !3568)
!3625 = !DILocation(line: 472, column: 24, scope: !3568)
!3626 = !DILocation(line: 472, column: 13, scope: !3568)
!3627 = !DILocation(line: 472, column: 37, scope: !3568)
!3628 = !DILocation(line: 474, column: 5, scope: !3242)
!3629 = !DILocation(line: 439, column: 38, scope: !3630)
!3630 = !DILexicalBlockFile(scope: !3243, file: !1016, discriminator: 2)
!3631 = !DILocation(line: 439, column: 5, scope: !3630)
!3632 = distinct !{!3632, !3315}
!3633 = !DILocation(line: 476, column: 9, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3221, file: !1016, line: 476, column: 9)
!3635 = !DILocation(line: 476, column: 18, scope: !3634)
!3636 = !DILocation(line: 476, column: 16, scope: !3634)
!3637 = !DILocation(line: 476, column: 9, scope: !3221)
!3638 = !DILocation(line: 477, column: 16, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3634, file: !1016, line: 476, column: 29)
!3640 = !DILocation(line: 479, column: 16, scope: !3639)
!3641 = !DILocation(line: 480, column: 16, scope: !3639)
!3642 = !DILocation(line: 477, column: 9, scope: !3639)
!3643 = !DILocation(line: 482, column: 9, scope: !3639)
!3644 = !DILocation(line: 485, column: 5, scope: !3221)
!3645 = !DILocation(line: 486, column: 1, scope: !3221)
!3646 = distinct !DISubprogram(name: "get_bits", scope: !1754, file: !1754, line: 381, type: !3185, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1740)
!3647 = !DILocation(line: 66, column: 98, scope: !3226, inlinedAt: !3648)
!3648 = distinct !DILocation(line: 401, column: 16, scope: !3646)
!3649 = !DILocalVariable(name: "s", arg: 1, scope: !3646, file: !1754, line: 381, type: !3123)
!3650 = !DILocation(line: 381, column: 52, scope: !3646)
!3651 = !DILocalVariable(name: "n", arg: 2, scope: !3646, file: !1754, line: 381, type: !899)
!3652 = !DILocation(line: 381, column: 59, scope: !3646)
!3653 = !DILocalVariable(name: "tmp", scope: !3646, file: !1754, line: 383, type: !899)
!3654 = !DILocation(line: 383, column: 18, scope: !3646)
!3655 = !DILocalVariable(name: "re_index", scope: !3646, file: !1754, line: 399, type: !900)
!3656 = !DILocation(line: 399, column: 18, scope: !3646)
!3657 = !DILocation(line: 399, column: 30, scope: !3646)
!3658 = !DILocation(line: 399, column: 34, scope: !3646)
!3659 = !DILocalVariable(name: "re_cache", scope: !3646, file: !1754, line: 399, type: !900)
!3660 = !DILocation(line: 399, column: 78, scope: !3646)
!3661 = !DILocalVariable(name: "re_size_plus8", scope: !3646, file: !1754, line: 399, type: !900)
!3662 = !DILocation(line: 399, column: 101, scope: !3646)
!3663 = !DILocation(line: 399, column: 118, scope: !3646)
!3664 = !DILocation(line: 399, column: 122, scope: !3646)
!3665 = !DILocation(line: 401, column: 60, scope: !3646)
!3666 = !DILocation(line: 401, column: 64, scope: !3646)
!3667 = !DILocation(line: 401, column: 74, scope: !3646)
!3668 = !DILocation(line: 401, column: 83, scope: !3646)
!3669 = !DILocation(line: 401, column: 71, scope: !3646)
!3670 = !DILocation(line: 401, column: 92, scope: !3646)
!3671 = !DILocation(line: 401, column: 16, scope: !3646)
!3672 = !DILocation(line: 68, column: 16, scope: !3226, inlinedAt: !3648)
!3673 = !DILocation(line: 68, column: 19, scope: !3226, inlinedAt: !3648)
!3674 = !DILocation(line: 68, column: 24, scope: !3226, inlinedAt: !3648)
!3675 = !DILocation(line: 68, column: 38, scope: !3226, inlinedAt: !3648)
!3676 = !DILocation(line: 68, column: 41, scope: !3226, inlinedAt: !3648)
!3677 = !DILocation(line: 68, column: 46, scope: !3226, inlinedAt: !3648)
!3678 = !DILocation(line: 68, column: 34, scope: !3226, inlinedAt: !3648)
!3679 = !DILocation(line: 68, column: 57, scope: !3226, inlinedAt: !3648)
!3680 = !DILocation(line: 68, column: 69, scope: !3226, inlinedAt: !3648)
!3681 = !DILocation(line: 68, column: 72, scope: !3226, inlinedAt: !3648)
!3682 = !DILocation(line: 68, column: 79, scope: !3226, inlinedAt: !3648)
!3683 = !DILocation(line: 68, column: 84, scope: !3226, inlinedAt: !3648)
!3684 = !DILocation(line: 68, column: 99, scope: !3226, inlinedAt: !3648)
!3685 = !DILocation(line: 68, column: 102, scope: !3226, inlinedAt: !3648)
!3686 = !DILocation(line: 68, column: 109, scope: !3226, inlinedAt: !3648)
!3687 = !DILocation(line: 68, column: 114, scope: !3226, inlinedAt: !3648)
!3688 = !DILocation(line: 68, column: 94, scope: !3226, inlinedAt: !3648)
!3689 = !DILocation(line: 68, column: 63, scope: !3226, inlinedAt: !3648)
!3690 = !DILocation(line: 401, column: 100, scope: !3646)
!3691 = !DILocation(line: 401, column: 109, scope: !3646)
!3692 = !DILocation(line: 401, column: 96, scope: !3646)
!3693 = !DILocation(line: 401, column: 14, scope: !3646)
!3694 = !DILocation(line: 402, column: 21, scope: !3646)
!3695 = !DILocation(line: 402, column: 31, scope: !3646)
!3696 = !DILocation(line: 402, column: 11, scope: !3646)
!3697 = !DILocation(line: 402, column: 9, scope: !3646)
!3698 = !DILocation(line: 403, column: 18, scope: !3646)
!3699 = !DILocation(line: 403, column: 36, scope: !3646)
!3700 = !DILocation(line: 403, column: 48, scope: !3646)
!3701 = !DILocation(line: 403, column: 45, scope: !3646)
!3702 = !DILocation(line: 403, column: 33, scope: !3646)
!3703 = !DILocation(line: 403, column: 17, scope: !3646)
!3704 = !DILocation(line: 403, column: 55, scope: !3705)
!3705 = !DILexicalBlockFile(scope: !3646, file: !1754, discriminator: 1)
!3706 = !DILocation(line: 403, column: 67, scope: !3705)
!3707 = !DILocation(line: 403, column: 64, scope: !3705)
!3708 = !DILocation(line: 403, column: 17, scope: !3705)
!3709 = !DILocation(line: 403, column: 74, scope: !3710)
!3710 = !DILexicalBlockFile(scope: !3646, file: !1754, discriminator: 2)
!3711 = !DILocation(line: 403, column: 17, scope: !3710)
!3712 = !DILocation(line: 403, column: 17, scope: !3713)
!3713 = !DILexicalBlockFile(scope: !3646, file: !1754, discriminator: 3)
!3714 = !DILocation(line: 403, column: 14, scope: !3713)
!3715 = !DILocation(line: 404, column: 18, scope: !3646)
!3716 = !DILocation(line: 404, column: 6, scope: !3646)
!3717 = !DILocation(line: 404, column: 10, scope: !3646)
!3718 = !DILocation(line: 404, column: 16, scope: !3646)
!3719 = !DILocation(line: 406, column: 12, scope: !3646)
!3720 = !DILocation(line: 406, column: 5, scope: !3646)
!3721 = distinct !DISubprogram(name: "NEG_USR32", scope: !3722, file: !3722, line: 124, type: !3723, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1740)
!3722 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3723 = !DISubroutineType(types: !3724)
!3724 = !{!903, !903, !1295}
!3725 = !DILocalVariable(name: "a", arg: 1, scope: !3721, file: !3722, line: 124, type: !903)
!3726 = !DILocation(line: 124, column: 43, scope: !3721)
!3727 = !DILocalVariable(name: "s", arg: 2, scope: !3721, file: !3722, line: 124, type: !1295)
!3728 = !DILocation(line: 124, column: 53, scope: !3721)
!3729 = !DILocation(line: 125, column: 5, scope: !3721)
!3730 = !DILocation(line: 127, column: 29, scope: !3721)
!3731 = !DILocation(line: 127, column: 28, scope: !3721)
!3732 = !DILocation(line: 127, column: 18, scope: !3721)
!3733 = !{i32 190619, i32 190633}
!3734 = !DILocation(line: 129, column: 12, scope: !3721)
!3735 = !DILocation(line: 129, column: 5, scope: !3721)
