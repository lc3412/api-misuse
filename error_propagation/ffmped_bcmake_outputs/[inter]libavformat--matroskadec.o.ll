; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavformat--matroskadec.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavformat--matroskadec.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32 }
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, {}*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, %struct.anon*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, %struct.AVPacketList*, %struct.AVProbeData, [17 x i64], %struct.AVIndexEntry*, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], i64, i8, i8, i32, %struct.AVRational, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext**, i32, i32, %struct.AVCodecContext*, i32, i32, %struct.anon.0, i32, %struct.FFFrac* }
%struct.anon.0 = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.CodecMime = type { [32 x i8], i32 }
%struct.EbmlSyntax = type { i32, i32, i32, i32, %union.anon.1 }
%union.anon.1 = type { i64 }
%struct.CodecTags = type { [22 x i8], i32 }
%struct.AVMetadataConv = type { i8*, i8* }
%union.unaligned_32 = type { i32 }
%struct.MatroskaDemuxContext = type { %struct.AVClass*, %struct.AVFormatContext*, i32, [16 x %struct.MatroskaLevel], i32, i32, i64, double, i8*, i8*, %struct.EbmlBin, %struct.EbmlList, %struct.EbmlList, %struct.EbmlList, %struct.EbmlList, %struct.EbmlList, %struct.EbmlList, i64, %struct.AVPacketList*, %struct.AVPacketList*, i32, i32, i64, i32, [64 x %struct.MatroskaLevel1Element], i32, i32, i64, %struct.MatroskaCluster, i32, i32, i32 }
%struct.MatroskaLevel = type { i64, i64 }
%struct.EbmlBin = type { i32, %struct.AVBufferRef*, i8*, i64 }
%struct.EbmlList = type { i32, i8* }
%struct.MatroskaLevel1Element = type { i64, i64, i32 }
%struct.MatroskaCluster = type { i64, %struct.EbmlList }
%struct.MatroskaAttachment = type { i64, i8*, i8*, %struct.EbmlBin, %struct.AVStream* }
%struct.MatroskaChapter = type { i64, i64, i64, i8*, %struct.AVChapter* }
%struct.Ebml = type { i64, i64, i64, i8*, i64 }
%union.unaligned_64 = type { i64 }
%struct.MatroskaTrack = type { i64, i64, i64, i8*, i8*, %struct.EbmlBin, i8*, double, i64, i64, i64, i64, %struct.MatroskaTrackVideo, %struct.MatroskaTrackAudio, %struct.MatroskaTrackOperation, %struct.EbmlList, i64, i64, %struct.AVStream*, i64, i32, i64, [256 x i32], i32 }
%struct.MatroskaTrackVideo = type { double, i64, i64, i64, i64, %struct.EbmlBin, i64, i64, i64, i64, i64, %struct.EbmlList, %struct.MatroskaTrackVideoProjection }
%struct.MatroskaTrackVideoProjection = type { i64, %struct.EbmlBin, double, double, double }
%struct.MatroskaTrackAudio = type { double, double, i64, i64, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.MatroskaTrackOperation = type { %struct.EbmlList }
%struct.MatroskaSeekhead = type { i64, i64 }
%struct.MatroskaTrackEncoding = type { i64, i64, %struct.MatroskaTrackCompression, %struct.MatroskaTrackEncryption }
%struct.MatroskaTrackCompression = type { i64, %struct.EbmlBin }
%struct.MatroskaTrackEncryption = type { i64, %struct.EbmlBin }
%struct.MatroskaTrackPlane = type { i64, i64 }
%union.unaligned_16 = type { i16 }
%struct.MatroskaIndex = type { i64, %struct.EbmlList }
%struct.MatroskaIndexPos = type { i64, i64 }
%struct.MatroskaTags = type { %struct.MatroskaTagTarget, %struct.EbmlList }
%struct.MatroskaTagTarget = type { i8*, i64, i64, i64, i64 }
%union.av_intfloat64 = type { i64 }
%union.av_intfloat32 = type { i32 }
%union.anon.2 = type { i32 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.AVDictionaryEntry = type { i8*, i8* }
%struct.MatroskaTrackVideoColor = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.MatroskaMasteringMeta }
%struct.MatroskaMasteringMeta = type { double, double, double, double, double, double, double, double, double, double }
%struct.AVContentLightMetadata = type { i32, i32 }
%struct.AVMasteringDisplayMetadata = type { [3 x [2 x %struct.AVRational]], [2 x %struct.AVRational], %struct.AVRational, %struct.AVRational, i32, i32 }
%struct.GetByteContext = type { i8*, i8*, i8* }
%struct.AVSphericalMapping = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MatroskaTag = type { i8*, i8*, i8*, i64, %struct.EbmlList }
%struct.MatroskaBlock = type { i64, i64, i64, %struct.EbmlBin, i64, %struct.EbmlBin, i64 }
%struct.CueDesc = type { i64, i64, i64, i64 }

@.str = private unnamed_addr constant [14 x i8] c"matroska,webm\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"Matroska / WebM\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"mkv,mk3d,mka,mks\00", align 1
@.str.3 = private unnamed_addr constant [56 x i8] c"audio/webm,audio/x-matroska,video/webm,video/x-matroska\00", align 1
@ff_matroska_demuxer = global %struct.AVInputFormat { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), %struct.AVCodecTag** null, %struct.AVClass* null, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3, i32 0, i32 0), %struct.AVInputFormat* null, i32 0, i32 2088, i32 (%struct.AVProbeData*)* @matroska_probe, i32 (%struct.AVFormatContext*)* @matroska_read_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @matroska_read_packet, i32 (%struct.AVFormatContext*)* @matroska_read_close, i32 (%struct.AVFormatContext*, i32, i64, i32)* @matroska_read_seek, i64 (%struct.AVFormatContext*, i32, i64*, i64)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null }, align 8
@.str.4 = private unnamed_addr constant [19 x i8] c"webm_dash_manifest\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"WebM DASH Manifest\00", align 1
@webm_dash_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.126, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([3 x %struct.AVOption], [3 x %struct.AVOption]* @options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_webm_dash_manifest_demuxer = global %struct.AVInputFormat { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i32 0, i32 0), i32 0, i8* null, %struct.AVCodecTag** null, %struct.AVClass* @webm_dash_class, i8* null, %struct.AVInputFormat* null, i32 0, i32 2088, i32 (%struct.AVProbeData*)* null, i32 (%struct.AVFormatContext*)* @webm_dash_manifest_read_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @webm_dash_manifest_read_packet, i32 (%struct.AVFormatContext*)* @matroska_read_close, i32 (%struct.AVFormatContext*, i32, i64, i32)* null, i64 (%struct.AVFormatContext*, i32, i64*, i64)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null }, align 8
@matroska_doctypes = internal constant [2 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0)], align 16
@.str.6 = private unnamed_addr constant [9 x i8] c"matroska\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"webm\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"EBML header parsing failed\0A\00", align 1
@.str.9 = private unnamed_addr constant [46 x i8] c"EBML version %lu, doctype %s, doc version %lu\00", align 1
@.str.10 = private unnamed_addr constant [88 x i8] c"EBML header using unsupported features\0A(EBML version %lu, doctype %s, doc version %lu)\0A\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"Unknown EBML doctype '%s'\0A\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"encoder\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"incomplete attachment\0A\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"mimetype\00", align 1
@ff_mkv_image_mime_tags = external constant [0 x %struct.CodecMime], align 4
@ff_mkv_mime_tags = external constant [0 x %struct.CodecMime], align 4
@.str.17 = private unnamed_addr constant [32 x i8] c"Read error at pos. %lu (0x%lx)\0A\00", align 1
@ff_log2_tab = external constant [256 x i8], align 16
@.str.18 = private unnamed_addr constant [56 x i8] c"Invalid EBML number size tag 0x%02x at pos %lu (0x%lx)\0A\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"Unknown entry 0x%X\0A\00", align 1
@ebml_parse_elem.max_lengths = internal constant [11 x i64] [i64 0, i64 8, i64 8, i64 16777216, i64 16777216, i64 268435456, i64 0, i64 0, i64 0, i64 0, i64 0], align 16
@.str.20 = private unnamed_addr constant [52 x i8] c"Invalid length 0x%lx > 0x%lx for syntax element %i\0A\00", align 1
@.str.21 = private unnamed_addr constant [40 x i8] c"Invalid length 0x%lx > 0x%lx in parent\0A\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"Duplicate element\0A\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"Invalid element\0A\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"Read error\0A\00", align 1
@.str.25 = private unnamed_addr constant [43 x i8] c"File moves beyond max. allowed depth (%d)\0A\00", align 1
@.str.26 = private unnamed_addr constant [49 x i8] c"Too many level1 elements or circular seekheads.\0A\00", align 1
@ebml_syntax = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 440786851, i32 6, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([8 x %struct.EbmlSyntax], [8 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { i8* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @ebml_header to [8 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@.str.28 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@ebml_header = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { i8* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 17143, i32 1, i32 0, i32 0, %union.anon.1 { i64 1 } }, %struct.EbmlSyntax { i32 17139, i32 1, i32 0, i32 8, %union.anon.1 { i64 8 } }, %struct.EbmlSyntax { i32 17138, i32 1, i32 0, i32 16, %union.anon.1 { i64 4 } }, { i32, i32, i32, i32, { i8* } } { i32 17026, i32 3, i32 0, i32 24, { i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i32 0, i32 0) } }, %struct.EbmlSyntax { i32 17029, i32 1, i32 0, i32 32, %union.anon.1 { i64 1 } }, %struct.EbmlSyntax { i32 17030, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 17031, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_segments = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 408125543, i32 6, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([9 x %struct.EbmlSyntax], [9 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_segment to [9 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_info = internal constant [8 x %struct.EbmlSyntax] [%struct.EbmlSyntax { i32 2807729, i32 1, i32 0, i32 288, %union.anon.1 { i64 1000000 } }, %struct.EbmlSyntax { i32 17545, i32 2, i32 0, i32 296, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 31657, i32 4, i32 0, i32 304, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 22337, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 19840, i32 4, i32 0, i32 312, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 17505, i32 5, i32 0, i32 320, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 29604, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer], align 16
@matroska_segment = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 357149030, i32 7, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([8 x %struct.EbmlSyntax], [8 x %struct.EbmlSyntax]* @matroska_info, i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 374648427, i32 7, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_tracks to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 423732329, i32 7, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_attachments to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 272869232, i32 7, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_chapters to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 475249515, i32 7, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_index to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 307544935, i32 7, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_tags to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 290298740, i32 7, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_seekhead to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 524531317, i32 9, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_tracks = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 174, i32 6, i32 1496, i32 352, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([27 x %struct.EbmlSyntax], [27 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { i8* } }, %struct.EbmlSyntax, { i32, i32, i32, i32, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_track to [27 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@.str.33 = private unnamed_addr constant [4 x i8] c"eng\00", align 1
@matroska_track = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { i8* } }, %struct.EbmlSyntax, { i32, i32, i32, i32, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 215, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21358, i32 4, i32 0, i32 24, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 29637, i32 1, i32 0, i32 8, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 131, i32 1, i32 0, i32 16, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 134, i32 3, i32 0, i32 32, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 25506, i32 5, i32 0, i32 40, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 22186, i32 1, i32 0, i32 416, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { i8* } } { i32 2274716, i32 4, i32 0, i32 72, { i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i32 0, i32 0) } }, %struct.EbmlSyntax { i32 2352003, i32 1, i32 0, i32 88, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { double } } { i32 2306383, i32 2, i32 0, i32 80, { double } { double 1.000000e+00 } }, %struct.EbmlSyntax { i32 136, i32 1, i32 0, i32 96, %union.anon.1 { i64 1 } }, %struct.EbmlSyntax { i32 21930, i32 1, i32 0, i32 104, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 224, i32 6, i32 0, i32 120, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([19 x %struct.EbmlSyntax], [19 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_track_video to [19 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 225, i32 6, i32 0, i32 312, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([5 x %struct.EbmlSyntax], [5 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_track_audio to [5 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 226, i32 6, i32 0, i32 384, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_track_operation to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 28032, i32 6, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_track_encodings to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 21998, i32 1, i32 0, i32 456, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 22203, i32 1, i32 0, i32 112, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 185, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 156, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 2459272, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 170, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 3883072, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 2536000, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 28135, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 28152, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_track_video = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 2327523, i32 2, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21680, i32 1, i32 0, i32 8, %union.anon.1 { i64 -1 } }, %struct.EbmlSyntax { i32 21690, i32 1, i32 0, i32 16, %union.anon.1 { i64 -1 } }, %struct.EbmlSyntax { i32 176, i32 1, i32 0, i32 24, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 186, i32 1, i32 0, i32 32, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 3061028, i32 5, i32 0, i32 40, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21440, i32 1, i32 0, i32 104, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 21936, i32 6, i32 184, i32 112, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([15 x %struct.EbmlSyntax], [15 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_track_video_color to [15 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 30320, i32 6, i32 0, i32 128, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, %struct.EbmlSyntax }>* @matroska_track_video_projection to [6 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 21674, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21691, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21708, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21725, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21682, i32 1, i32 0, i32 72, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 154, i32 1, i32 0, i32 80, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 157, i32 1, i32 0, i32 88, %union.anon.1 { i64 2 } }, %struct.EbmlSyntax { i32 21432, i32 1, i32 0, i32 96, %union.anon.1 { i64 15 } }, %struct.EbmlSyntax { i32 21683, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_track_video_color = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 21937, i32 1, i32 0, i32 0, %union.anon.1 { i64 2 } }, %struct.EbmlSyntax { i32 21938, i32 1, i32 0, i32 8, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21939, i32 1, i32 0, i32 16, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21940, i32 1, i32 0, i32 24, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21941, i32 1, i32 0, i32 32, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21942, i32 1, i32 0, i32 40, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21943, i32 1, i32 0, i32 48, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21944, i32 1, i32 0, i32 56, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21945, i32 1, i32 0, i32 64, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21946, i32 1, i32 0, i32 72, %union.anon.1 { i64 2 } }, %struct.EbmlSyntax { i32 21947, i32 1, i32 0, i32 80, %union.anon.1 { i64 2 } }, %struct.EbmlSyntax { i32 21948, i32 1, i32 0, i32 88, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21949, i32 1, i32 0, i32 96, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 21968, i32 6, i32 0, i32 104, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([11 x %struct.EbmlSyntax], [11 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, %struct.EbmlSyntax }>* @matroska_mastering_meta to [11 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_mastering_meta = internal constant <{ { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { double } } { i32 21969, i32 2, i32 0, i32 0, { double } { double -1.000000e+00 } }, { i32, i32, i32, i32, { double } } { i32 21970, i32 2, i32 0, i32 8, { double } { double -1.000000e+00 } }, { i32, i32, i32, i32, { double } } { i32 21971, i32 2, i32 0, i32 16, { double } { double -1.000000e+00 } }, { i32, i32, i32, i32, { double } } { i32 21972, i32 2, i32 0, i32 24, { double } { double -1.000000e+00 } }, { i32, i32, i32, i32, { double } } { i32 21973, i32 2, i32 0, i32 32, { double } { double -1.000000e+00 } }, { i32, i32, i32, i32, { double } } { i32 21974, i32 2, i32 0, i32 40, { double } { double -1.000000e+00 } }, { i32, i32, i32, i32, { double } } { i32 21975, i32 2, i32 0, i32 48, { double } { double -1.000000e+00 } }, { i32, i32, i32, i32, { double } } { i32 21976, i32 2, i32 0, i32 56, { double } { double -1.000000e+00 } }, { i32, i32, i32, i32, { double } } { i32 21978, i32 2, i32 0, i32 72, { double } { double -1.000000e+00 } }, { i32, i32, i32, i32, { double } } { i32 21977, i32 2, i32 0, i32 64, { double } { double -1.000000e+00 } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_track_video_projection = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 30321, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 30322, i32 5, i32 0, i32 8, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { double } } { i32 30323, i32 2, i32 0, i32 40, { double } zeroinitializer }, { i32, i32, i32, i32, { double } } { i32 30324, i32 2, i32 0, i32 48, { double } zeroinitializer }, { i32, i32, i32, i32, { double } } { i32 30325, i32 2, i32 0, i32 56, { double } zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_track_audio = internal constant <{ { i32, i32, i32, i32, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { double } } { i32 181, i32 2, i32 0, i32 0, { double } { double 8.000000e+03 } }, %struct.EbmlSyntax { i32 30901, i32 2, i32 0, i32 8, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 25188, i32 1, i32 0, i32 16, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 159, i32 1, i32 0, i32 24, %union.anon.1 { i64 1 } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_track_operation = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 227, i32 6, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_track_combine_planes to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_track_plane = internal constant [3 x %struct.EbmlSyntax] [%struct.EbmlSyntax { i32 229, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 230, i32 1, i32 0, i32 8, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer], align 16
@matroska_track_combine_planes = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 228, i32 6, i32 16, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([3 x %struct.EbmlSyntax], [3 x %struct.EbmlSyntax]* @matroska_track_plane, i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_track_encodings = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 25152, i32 6, i32 96, i32 400, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_track_encoding to [6 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_track_encoding_compression = internal constant [3 x %struct.EbmlSyntax] [%struct.EbmlSyntax { i32 16980, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 16981, i32 5, i32 0, i32 8, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer], align 16
@matroska_track_encoding_encryption = internal constant [8 x %struct.EbmlSyntax] [%struct.EbmlSyntax { i32 18401, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 18402, i32 5, i32 0, i32 8, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 18407, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 18405, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 18406, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 18404, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 18403, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer], align 16
@matroska_track_encoding = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 20530, i32 1, i32 0, i32 0, %union.anon.1 { i64 1 } }, %struct.EbmlSyntax { i32 20531, i32 1, i32 0, i32 8, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 20532, i32 6, i32 0, i32 16, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([3 x %struct.EbmlSyntax], [3 x %struct.EbmlSyntax]* @matroska_track_encoding_compression, i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 20533, i32 6, i32 0, i32 56, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([8 x %struct.EbmlSyntax], [8 x %struct.EbmlSyntax]* @matroska_track_encoding_encryption, i32 0, i32 0) } }, %struct.EbmlSyntax { i32 20529, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_attachment = internal constant [6 x %struct.EbmlSyntax] [%struct.EbmlSyntax { i32 18094, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 18030, i32 4, i32 0, i32 8, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 18016, i32 3, i32 0, i32 16, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 18012, i32 5, i32 0, i32 24, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 18046, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer], align 16
@matroska_attachments = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 24999, i32 6, i32 64, i32 368, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* @matroska_attachment, i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_chapters = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 17849, i32 6, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_chapter to [6 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_chapter = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 182, i32 6, i32 40, i32 384, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([9 x %struct.EbmlSyntax], [9 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_chapter_entry to [9 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 17852, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 17853, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 17883, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 17885, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_chapter_display = internal constant [4 x %struct.EbmlSyntax] [%struct.EbmlSyntax { i32 133, i32 4, i32 0, i32 24, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 17276, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 17278, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer], align 16
@matroska_chapter_entry = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 145, i32 1, i32 0, i32 0, %union.anon.1 { i64 -9223372036854775808 } }, %struct.EbmlSyntax { i32 146, i32 1, i32 0, i32 8, %union.anon.1 { i64 -9223372036854775808 } }, %struct.EbmlSyntax { i32 29636, i32 1, i32 0, i32 16, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 128, i32 6, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([4 x %struct.EbmlSyntax], [4 x %struct.EbmlSyntax]* @matroska_chapter_display, i32 0, i32 0) } }, %struct.EbmlSyntax { i32 152, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 17816, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 25539, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 182, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_index = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 187, i32 6, i32 24, i32 400, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([3 x %struct.EbmlSyntax], [3 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_index_entry to [3 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_index_pos = internal constant [6 x %struct.EbmlSyntax] [%struct.EbmlSyntax { i32 247, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 241, i32 1, i32 0, i32 8, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 240, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 178, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21368, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer], align 16
@matroska_index_entry = internal constant <{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 179, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 183, i32 6, i32 16, i32 8, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* @matroska_index_pos, i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_tags = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 29555, i32 6, i32 56, i32 416, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([3 x %struct.EbmlSyntax], [3 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_tag to [3 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_tagtargets = internal constant [6 x %struct.EbmlSyntax] [%struct.EbmlSyntax { i32 25546, i32 3, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 26826, i32 1, i32 0, i32 8, %union.anon.1 { i64 50 } }, %struct.EbmlSyntax { i32 25541, i32 1, i32 0, i32 16, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 25540, i32 1, i32 0, i32 24, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 25542, i32 1, i32 0, i32 32, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer], align 16
@matroska_tag = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 26568, i32 6, i32 48, i32 40, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([7 x %struct.EbmlSyntax], [7 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { i8* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_simpletag to [7 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 25536, i32 6, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* @matroska_tagtargets, i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@.str.52 = private unnamed_addr constant [4 x i8] c"und\00", align 1
@matroska_simpletag = internal constant <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { i8* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 17827, i32 4, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 17543, i32 4, i32 0, i32 8, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { i8* } } { i32 17530, i32 3, i32 0, i32 16, { i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i32 0, i32 0) } }, %struct.EbmlSyntax { i32 17540, i32 1, i32 0, i32 24, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 17588, i32 1, i32 0, i32 24, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 26568, i32 6, i32 48, i32 32, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([7 x %struct.EbmlSyntax], [7 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { i8* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_simpletag to [7 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_seekhead_entry = internal constant [3 x %struct.EbmlSyntax] [%struct.EbmlSyntax { i32 21419, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 21420, i32 1, i32 0, i32 8, %union.anon.1 { i64 -1 } }, %struct.EbmlSyntax zeroinitializer], align 16
@matroska_seekhead = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 19899, i32 6, i32 16, i32 432, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([3 x %struct.EbmlSyntax], [3 x %struct.EbmlSyntax]* @matroska_seekhead_entry, i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@.str.55 = private unnamed_addr constant [60 x i8] c"Max EBML element depth (%d) reached, cannot parse further.\0A\00", align 1
@.str.56 = private unnamed_addr constant [14 x i8] c"creation_time\00", align 1
@.str.57 = private unnamed_addr constant [39 x i8] c"Unknown or unsupported track type %lu\0A\00", align 1
@.str.58 = private unnamed_addr constant [53 x i8] c"Invalid sample rate %f, defaulting to 8000 instead.\0A\00", align 1
@.str.59 = private unnamed_addr constant [59 x i8] c"Invalid frame rate %e. Cannot calculate default duration.\0A\00", align 1
@.str.60 = private unnamed_addr constant [42 x i8] c"Multiple combined encodings not supported\00", align 1
@.str.61 = private unnamed_addr constant [26 x i8] c"Unsupported encoding type\00", align 1
@.str.62 = private unnamed_addr constant [37 x i8] c"Failed to decode codec private data\0A\00", align 1
@ff_mkv_codec_tags = external constant [0 x %struct.CodecTags], align 4
@.str.63 = private unnamed_addr constant [11 x i8] c"enc_key_id\00", align 1
@.str.64 = private unnamed_addr constant [16 x i8] c"V_MS/VFW/FOURCC\00", align 1
@ff_codec_bmp_tags = external constant [0 x %struct.AVCodecTag], align 4
@ff_codec_movvideo_tags = external constant [0 x %struct.AVCodecTag], align 4
@.str.65 = private unnamed_addr constant [9 x i8] c"A_MS/ACM\00", align 1
@.str.66 = private unnamed_addr constant [12 x i8] c"A_QUICKTIME\00", align 1
@ff_codec_movaudio_tags = external constant [0 x %struct.AVCodecTag], align 4
@.str.67 = private unnamed_addr constant [12 x i8] c"V_QUICKTIME\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"SMI \00", align 1
@.str.69 = private unnamed_addr constant [26 x i8] c"mov FourCC not found %s.\0A\00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c"SBR\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"alac\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"TTA1\00", align 1
@.str.73 = private unnamed_addr constant [69 x i8] c"Too large audio channel number %lu or bitdepth %lu. Skipping track.\0A\00", align 1
@matroska_parse_tracks.sipr_bit_rate = internal constant [4 x i32] [i32 6504, i32 8496, i32 5000, i32 16000], align 16
@ff_sipr_subpk_size = external constant [4 x i8], align 1
@.str.74 = private unnamed_addr constant [35 x i8] c"Unknown/unsupported AVCodecID %s.\0A\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"language\00", align 1
@.str.76 = private unnamed_addr constant [12 x i8] c"stereo_mode\00", align 1
@ff_matroska_video_stereo_mode = external constant [15 x i8*], align 16
@.str.77 = private unnamed_addr constant [11 x i8] c"alpha_mode\00", align 1
@.str.78 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"%s_%d\00", align 1
@ff_matroska_video_stereo_plane = external constant [3 x i8*], align 16
@.str.80 = private unnamed_addr constant [18 x i8] c"D_WEBVTT/CAPTIONS\00", align 1
@.str.81 = private unnamed_addr constant [22 x i8] c"D_WEBVTT/DESCRIPTIONS\00", align 1
@.str.82 = private unnamed_addr constant [18 x i8] c"D_WEBVTT/METADATA\00", align 1
@.str.83 = private unnamed_addr constant [45 x i8] c"Compression size but no data in headerstrip\0A\00", align 1
@.str.84 = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1
@matroska_aac_profile.aac_profiles = internal constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0)], align 16
@.str.85 = private unnamed_addr constant [5 x i8] c"MAIN\00", align 1
@.str.86 = private unnamed_addr constant [3 x i8] c"LC\00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"SSR\00", align 1
@avpriv_mpeg4audio_sample_rates = external constant [16 x i32], align 16
@.str.88 = private unnamed_addr constant [27 x i8] c"Invalid FLAC private data\0A\00", align 1
@.str.89 = private unnamed_addr constant [34 x i8] c"WAVEFORMATEXTENSIBLE_CHANNEL_MASK\00", align 1
@.str.90 = private unnamed_addr constant [52 x i8] c"Invalid value of WAVEFORMATEXTENSIBLE_CHANNEL_MASK\0A\00", align 1
@.str.91 = private unnamed_addr constant [13 x i8] c"Lavf%d.%d.%d\00", align 1
@.str.92 = private unnamed_addr constant [28 x i8] c"Unknown spherical metadata\0A\00", align 1
@.str.93 = private unnamed_addr constant [52 x i8] c"Invalid bounding rectangle coordinates %u,%u,%u,%u\0A\00", align 1
@.str.94 = private unnamed_addr constant [39 x i8] c"Missing projection private properties\0A\00", align 1
@.str.95 = private unnamed_addr constant [37 x i8] c"Unknown spherical cubemap layout %u\0A\00", align 1
@.str.96 = private unnamed_addr constant [37 x i8] c"Unknown spherical metadata type %lu\0A\00", align 1
@.str.97 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.98 = private unnamed_addr constant [14 x i8] c"buf_size >= 0\00", align 1
@.str.99 = private unnamed_addr constant [26 x i8] c"./libavcodec/bytestream.h\00", align 1
@.str.100 = private unnamed_addr constant [35 x i8] c"Dropping apparently-broken index.\0A\00", align 1
@.str.101 = private unnamed_addr constant [25 x i8] c"Invalid track number %d\0A\00", align 1
@.str.102 = private unnamed_addr constant [62 x i8] c"The tags at index %d refer to a non-existent attachment %ld.\0A\00", align 1
@.str.103 = private unnamed_addr constant [59 x i8] c"The tags at index %d refer to a non-existent chapter %ld.\0A\00", align 1
@.str.104 = private unnamed_addr constant [57 x i8] c"The tags at index %d refer to a non-existent track %ld.\0A\00", align 1
@.str.105 = private unnamed_addr constant [39 x i8] c"Skipping invalid tag with no TagName.\0A\00", align 1
@.str.106 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.107 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@ff_mkv_metadata_conv = external constant [0 x %struct.AVMetadataConv], align 8
@.str.108 = private unnamed_addr constant [33 x i8] c"Cannot append palette to packet\0A\00", align 1
@matroska_cluster_incremental_parsing = internal constant <{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 231, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 160, i32 6, i32 104, i32 8, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([9 x %struct.EbmlSyntax], [9 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_blockgroup to [9 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 163, i32 8, i32 104, i32 8, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([9 x %struct.EbmlSyntax], [9 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_blockgroup to [9 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 167, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 171, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 357149030, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 475249515, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 307544935, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 290298740, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 524531317, i32 9, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_blockgroup = internal constant <{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 161, i32 5, i32 0, i32 24, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 30113, i32 6, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_blockadditions to [2 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 163, i32 5, i32 0, i32 24, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 155, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 30114, i32 10, i32 0, i32 96, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 251, i32 10, i32 0, i32 8, %union.anon.1 { i64 -9223372036854775808 } }, %struct.EbmlSyntax { i32 164, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 1, i32 1, i32 0, i32 16, %union.anon.1 { i64 1 } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_blockmore = internal constant [3 x %struct.EbmlSyntax] [%struct.EbmlSyntax { i32 238, i32 1, i32 0, i32 56, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 165, i32 5, i32 0, i32 64, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer], align 16
@matroska_blockadditions = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 166, i32 6, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([3 x %struct.EbmlSyntax], [3 x %struct.EbmlSyntax]* @matroska_blockmore, i32 0, i32 0) } }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_cluster_incremental = internal constant [6 x %struct.EbmlSyntax] [%struct.EbmlSyntax { i32 231, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 160, i32 9, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 163, i32 9, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 167, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 171, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer], align 16
@matroska_clusters_incremental = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 524531317, i32 6, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* @matroska_cluster_incremental, i32 0, i32 0) } }, %struct.EbmlSyntax { i32 357149030, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 475249515, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 307544935, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 290298740, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@matroska_clusters = internal constant <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 524531317, i32 6, i32 0, i32 0, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_cluster to [6 x %struct.EbmlSyntax]*), i32 0, i32 0) } }, %struct.EbmlSyntax { i32 357149030, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 475249515, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 307544935, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 290298740, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@.str.114 = private unnamed_addr constant [23 x i8] c"EBML block data error\0A\00", align 1
@.str.115 = private unnamed_addr constant [31 x i8] c"Invalid stream %lu or size %u\0A\00", align 1
@.str.116 = private unnamed_addr constant [49 x i8] c"File is broken, keyframes not correctly marked!\0A\00", align 1
@.str.117 = private unnamed_addr constant [21 x i8] c"Invalid packet size\0A\00", align 1
@.str.118 = private unnamed_addr constant [9 x i8] c"size > 0\00", align 1
@.str.119 = private unnamed_addr constant [26 x i8] c"libavformat/matroskadec.c\00", align 1
@.str.120 = private unnamed_addr constant [41 x i8] c"Corrupt int4 RM-style audio packet size\0A\00", align 1
@.str.121 = private unnamed_addr constant [41 x i8] c"Corrupt sipr RM-style audio packet size\0A\00", align 1
@.str.122 = private unnamed_addr constant [44 x i8] c"Corrupt generic RM-style audio packet size\0A\00", align 1
@.str.123 = private unnamed_addr constant [32 x i8] c"Error parsing a wavpack block.\0A\00", align 1
@.str.124 = private unnamed_addr constant [31 x i8] c"Error parsing a prores block.\0A\00", align 1
@matroska_cluster = internal constant <{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }> <{ %struct.EbmlSyntax { i32 231, i32 1, i32 0, i32 0, %union.anon.1 zeroinitializer }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 160, i32 6, i32 104, i32 8, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_blockgroup, i32 0, i32 0) } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } } { i32 163, i32 8, i32 104, i32 8, { %struct.EbmlSyntax* } { %struct.EbmlSyntax* getelementptr inbounds (<{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>, <{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_blockgroup, i32 0, i32 0) } }, %struct.EbmlSyntax { i32 167, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax { i32 171, i32 0, i32 0, i32 0, %union.anon.1 zeroinitializer }, %struct.EbmlSyntax zeroinitializer }>, align 16
@.str.126 = private unnamed_addr constant [27 x i8] c"WebM DASH Manifest demuxer\00", align 1
@options = internal constant [3 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.128, i32 0, i32 0), i32 2076, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.130, i32 0, i32 0), i32 2080, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 2, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.127 = private unnamed_addr constant [5 x i8] c"live\00", align 1
@.str.128 = private unnamed_addr constant [73 x i8] c"flag indicating that the input is a live file that only has the headers.\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"bandwidth\00", align 1
@.str.130 = private unnamed_addr constant [63 x i8] c"bandwidth of this stream to be specified in the DASH manifest.\00", align 1
@.str.131 = private unnamed_addr constant [29 x i8] c"Failed to read file headers\0A\00", align 1
@.str.132 = private unnamed_addr constant [18 x i8] c"No streams found\0A\00", align 1
@.str.133 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.str.134 = private unnamed_addr constant [28 x i8] c"webm_dash_manifest_duration\00", align 1
@.str.135 = private unnamed_addr constant [40 x i8] c"webm_dash_manifest_initialization_range\00", align 1
@.str.136 = private unnamed_addr constant [29 x i8] c"webm_dash_manifest_file_name\00", align 1
@.str.137 = private unnamed_addr constant [32 x i8] c"webm_dash_manifest_track_number\00", align 1
@.str.138 = private unnamed_addr constant [20 x i8] c"Error parsing Cues\0A\00", align 1
@.str.139 = private unnamed_addr constant [29 x i8] c"webm_dash_manifest_bandwidth\00", align 1
@.str.140 = private unnamed_addr constant [30 x i8] c"webm_dash_manifest_cues_start\00", align 1
@.str.141 = private unnamed_addr constant [28 x i8] c"webm_dash_manifest_cues_end\00", align 1
@.str.142 = private unnamed_addr constant [36 x i8] c"webm_dash_manifest_cluster_keyframe\00", align 1
@.str.143 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.144 = private unnamed_addr constant [6 x i8] c"%ld%s\00", align 1
@.str.145 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.146 = private unnamed_addr constant [21 x i8] c"timestamp too long.\0A\00", align 1
@.str.147 = private unnamed_addr constant [34 x i8] c"webm_dash_manifest_cue_timestamps\00", align 1

; Function Attrs: nounwind uwtable
define internal i32 @matroska_probe(%struct.AVProbeData* %p) #0 !dbg !2568 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2569, metadata !2574), !dbg !2575
  %retval = alloca i32, align 4
  %p.addr = alloca %struct.AVProbeData*, align 8
  %total = alloca i64, align 8
  %len_mask = alloca i32, align 4
  %size = alloca i32, align 4
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %probelen = alloca i64, align 8
  store %struct.AVProbeData* %p, %struct.AVProbeData** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVProbeData** %p.addr, metadata !2578, metadata !2574), !dbg !2579
  call void @llvm.dbg.declare(metadata i64* %total, metadata !2580, metadata !2574), !dbg !2581
  store i64 0, i64* %total, align 8, !dbg !2581
  call void @llvm.dbg.declare(metadata i32* %len_mask, metadata !2582, metadata !2574), !dbg !2583
  store i32 128, i32* %len_mask, align 4, !dbg !2583
  call void @llvm.dbg.declare(metadata i32* %size, metadata !2584, metadata !2574), !dbg !2585
  store i32 1, i32* %size, align 4, !dbg !2585
  call void @llvm.dbg.declare(metadata i32* %n, metadata !2586, metadata !2574), !dbg !2587
  store i32 1, i32* %n, align 4, !dbg !2587
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2588, metadata !2574), !dbg !2589
  %0 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2590
  %buf = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i32 0, i32 1, !dbg !2591
  %1 = load i8*, i8** %buf, align 8, !dbg !2591
  %2 = bitcast i8* %1 to %union.unaligned_32*, !dbg !2592
  %l = bitcast %union.unaligned_32* %2 to i32*, !dbg !2592
  %3 = load i32, i32* %l, align 1, !dbg !2592
  store i32 %3, i32* %x.addr.i, align 4, !dbg !2593
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !2594
  %shl.i = shl i32 %4, 8, !dbg !2595
  %and.i = and i32 %shl.i, 65280, !dbg !2596
  %5 = load i32, i32* %x.addr.i, align 4, !dbg !2597
  %shr.i = lshr i32 %5, 8, !dbg !2598
  %and1.i = and i32 %shr.i, 255, !dbg !2599
  %or.i = or i32 %and.i, %and1.i, !dbg !2600
  %shl2.i = shl i32 %or.i, 16, !dbg !2601
  %6 = load i32, i32* %x.addr.i, align 4, !dbg !2602
  %shr3.i = lshr i32 %6, 16, !dbg !2603
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2604
  %and5.i = and i32 %shl4.i, 65280, !dbg !2605
  %7 = load i32, i32* %x.addr.i, align 4, !dbg !2606
  %shr6.i = lshr i32 %7, 16, !dbg !2607
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2608
  %and8.i = and i32 %shr7.i, 255, !dbg !2609
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2610
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2611
  %cmp = icmp ne i32 %or10.i, 440786851, !dbg !2612
  br i1 %cmp, label %if.then, label %if.end, !dbg !2613

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2614
  br label %return, !dbg !2614

if.end:                                           ; preds = %entry
  %8 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2615
  %buf1 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %8, i32 0, i32 1, !dbg !2616
  %9 = load i8*, i8** %buf1, align 8, !dbg !2616
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 4, !dbg !2615
  %10 = load i8, i8* %arrayidx, align 1, !dbg !2615
  %conv = zext i8 %10 to i64, !dbg !2615
  store i64 %conv, i64* %total, align 8, !dbg !2617
  br label %while.cond, !dbg !2618

while.cond:                                       ; preds = %while.body, %if.end
  %11 = load i32, i32* %size, align 4, !dbg !2619
  %cmp2 = icmp sle i32 %11, 8, !dbg !2621
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !2622

land.rhs:                                         ; preds = %while.cond
  %12 = load i64, i64* %total, align 8, !dbg !2623
  %13 = load i32, i32* %len_mask, align 4, !dbg !2625
  %conv4 = sext i32 %13 to i64, !dbg !2625
  %and = and i64 %12, %conv4, !dbg !2626
  %tobool = icmp ne i64 %and, 0, !dbg !2627
  %lnot = xor i1 %tobool, true, !dbg !2627
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %14, label %while.body, label %while.end, !dbg !2628

while.body:                                       ; preds = %land.end
  %15 = load i32, i32* %size, align 4, !dbg !2630
  %inc = add nsw i32 %15, 1, !dbg !2630
  store i32 %inc, i32* %size, align 4, !dbg !2630
  %16 = load i32, i32* %len_mask, align 4, !dbg !2632
  %shr = ashr i32 %16, 1, !dbg !2632
  store i32 %shr, i32* %len_mask, align 4, !dbg !2632
  br label %while.cond, !dbg !2633, !llvm.loop !2635

while.end:                                        ; preds = %land.end
  %17 = load i32, i32* %size, align 4, !dbg !2636
  %cmp5 = icmp sgt i32 %17, 8, !dbg !2638
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !2639

if.then7:                                         ; preds = %while.end
  store i32 0, i32* %retval, align 4, !dbg !2640
  br label %return, !dbg !2640

if.end8:                                          ; preds = %while.end
  %18 = load i32, i32* %len_mask, align 4, !dbg !2641
  %sub = sub nsw i32 %18, 1, !dbg !2642
  %conv9 = sext i32 %sub to i64, !dbg !2643
  %19 = load i64, i64* %total, align 8, !dbg !2644
  %and10 = and i64 %19, %conv9, !dbg !2644
  store i64 %and10, i64* %total, align 8, !dbg !2644
  br label %while.cond11, !dbg !2645

while.cond11:                                     ; preds = %while.body14, %if.end8
  %20 = load i32, i32* %n, align 4, !dbg !2646
  %21 = load i32, i32* %size, align 4, !dbg !2647
  %cmp12 = icmp slt i32 %20, %21, !dbg !2648
  br i1 %cmp12, label %while.body14, label %while.end19, !dbg !2649

while.body14:                                     ; preds = %while.cond11
  %22 = load i64, i64* %total, align 8, !dbg !2650
  %shl = shl i64 %22, 8, !dbg !2651
  %23 = load i32, i32* %n, align 4, !dbg !2652
  %inc15 = add nsw i32 %23, 1, !dbg !2652
  store i32 %inc15, i32* %n, align 4, !dbg !2652
  %add = add nsw i32 4, %23, !dbg !2653
  %idxprom = sext i32 %add to i64, !dbg !2654
  %24 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2654
  %buf16 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %24, i32 0, i32 1, !dbg !2655
  %25 = load i8*, i8** %buf16, align 8, !dbg !2655
  %arrayidx17 = getelementptr inbounds i8, i8* %25, i64 %idxprom, !dbg !2654
  %26 = load i8, i8* %arrayidx17, align 1, !dbg !2654
  %conv18 = zext i8 %26 to i64, !dbg !2654
  %or = or i64 %shl, %conv18, !dbg !2656
  store i64 %or, i64* %total, align 8, !dbg !2657
  br label %while.cond11, !dbg !2658, !llvm.loop !2659

while.end19:                                      ; preds = %while.cond11
  %27 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2660
  %buf_size = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %27, i32 0, i32 2, !dbg !2662
  %28 = load i32, i32* %buf_size, align 8, !dbg !2662
  %conv20 = sext i32 %28 to i64, !dbg !2660
  %29 = load i32, i32* %size, align 4, !dbg !2663
  %add21 = add nsw i32 4, %29, !dbg !2664
  %conv22 = sext i32 %add21 to i64, !dbg !2665
  %30 = load i64, i64* %total, align 8, !dbg !2666
  %add23 = add i64 %conv22, %30, !dbg !2667
  %cmp24 = icmp ult i64 %conv20, %add23, !dbg !2668
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !2669

if.then26:                                        ; preds = %while.end19
  store i32 0, i32* %retval, align 4, !dbg !2670
  br label %return, !dbg !2670

if.end27:                                         ; preds = %while.end19
  store i32 0, i32* %i, align 4, !dbg !2671
  br label %for.cond, !dbg !2673

for.cond:                                         ; preds = %for.inc56, %if.end27
  %31 = load i32, i32* %i, align 4, !dbg !2674
  %conv28 = sext i32 %31 to i64, !dbg !2674
  %cmp29 = icmp ult i64 %conv28, 2, !dbg !2677
  br i1 %cmp29, label %for.body, label %for.end58, !dbg !2678

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %probelen, metadata !2679, metadata !2574), !dbg !2681
  %32 = load i32, i32* %i, align 4, !dbg !2682
  %idxprom31 = sext i32 %32 to i64, !dbg !2683
  %arrayidx32 = getelementptr inbounds [2 x i8*], [2 x i8*]* @matroska_doctypes, i64 0, i64 %idxprom31, !dbg !2683
  %33 = load i8*, i8** %arrayidx32, align 8, !dbg !2683
  %call33 = call i64 @strlen(i8* %33) #10, !dbg !2684
  store i64 %call33, i64* %probelen, align 8, !dbg !2681
  %34 = load i64, i64* %total, align 8, !dbg !2685
  %35 = load i64, i64* %probelen, align 8, !dbg !2687
  %cmp34 = icmp ult i64 %34, %35, !dbg !2688
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !2689

if.then36:                                        ; preds = %for.body
  br label %for.inc56, !dbg !2690

if.end37:                                         ; preds = %for.body
  %36 = load i32, i32* %size, align 4, !dbg !2691
  %add38 = add nsw i32 4, %36, !dbg !2693
  store i32 %add38, i32* %n, align 4, !dbg !2694
  br label %for.cond39, !dbg !2695

for.cond39:                                       ; preds = %for.inc, %if.end37
  %37 = load i32, i32* %n, align 4, !dbg !2696
  %conv40 = sext i32 %37 to i64, !dbg !2696
  %38 = load i32, i32* %size, align 4, !dbg !2699
  %add41 = add nsw i32 4, %38, !dbg !2700
  %conv42 = sext i32 %add41 to i64, !dbg !2701
  %39 = load i64, i64* %total, align 8, !dbg !2702
  %add43 = add i64 %conv42, %39, !dbg !2703
  %40 = load i64, i64* %probelen, align 8, !dbg !2704
  %sub44 = sub i64 %add43, %40, !dbg !2705
  %cmp45 = icmp ule i64 %conv40, %sub44, !dbg !2706
  br i1 %cmp45, label %for.body47, label %for.end, !dbg !2707

for.body47:                                       ; preds = %for.cond39
  %41 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2708
  %buf48 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %41, i32 0, i32 1, !dbg !2710
  %42 = load i8*, i8** %buf48, align 8, !dbg !2710
  %43 = load i32, i32* %n, align 4, !dbg !2711
  %idx.ext = sext i32 %43 to i64, !dbg !2712
  %add.ptr = getelementptr inbounds i8, i8* %42, i64 %idx.ext, !dbg !2712
  %44 = load i32, i32* %i, align 4, !dbg !2713
  %idxprom49 = sext i32 %44 to i64, !dbg !2714
  %arrayidx50 = getelementptr inbounds [2 x i8*], [2 x i8*]* @matroska_doctypes, i64 0, i64 %idxprom49, !dbg !2714
  %45 = load i8*, i8** %arrayidx50, align 8, !dbg !2714
  %46 = load i64, i64* %probelen, align 8, !dbg !2715
  %call51 = call i32 @memcmp(i8* %add.ptr, i8* %45, i64 %46) #10, !dbg !2716
  %tobool52 = icmp ne i32 %call51, 0, !dbg !2716
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !2717

if.then53:                                        ; preds = %for.body47
  store i32 100, i32* %retval, align 4, !dbg !2718
  br label %return, !dbg !2718

if.end54:                                         ; preds = %for.body47
  br label %for.inc, !dbg !2719

for.inc:                                          ; preds = %if.end54
  %47 = load i32, i32* %n, align 4, !dbg !2721
  %inc55 = add nsw i32 %47, 1, !dbg !2721
  store i32 %inc55, i32* %n, align 4, !dbg !2721
  br label %for.cond39, !dbg !2723, !llvm.loop !2724

for.end:                                          ; preds = %for.cond39
  br label %for.inc56, !dbg !2726

for.inc56:                                        ; preds = %for.end, %if.then36
  %48 = load i32, i32* %i, align 4, !dbg !2727
  %inc57 = add nsw i32 %48, 1, !dbg !2727
  store i32 %inc57, i32* %i, align 4, !dbg !2727
  br label %for.cond, !dbg !2729, !llvm.loop !2730

for.end58:                                        ; preds = %for.cond
  store i32 50, i32* %retval, align 4, !dbg !2732
  br label %return, !dbg !2732

return:                                           ; preds = %for.end58, %if.then53, %if.then26, %if.then7, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !2733
  ret i32 %49, !dbg !2733
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_read_header(%struct.AVFormatContext* %s) #0 !dbg !2734 {
entry:
  %s.addr.i303 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i303, metadata !2735, metadata !2574), !dbg !2739
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !2742
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %matroska = alloca %struct.MatroskaDemuxContext*, align 8
  %attachments_list = alloca %struct.EbmlList*, align 8
  %chapters_list = alloca %struct.EbmlList*, align 8
  %attachments1 = alloca %struct.MatroskaAttachment*, align 8
  %chapters2 = alloca %struct.MatroskaChapter*, align 8
  %max_start = alloca i64, align 8
  %pos = alloca i64, align 8
  %ebml = alloca %struct.Ebml, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %res = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !2744, metadata !2574), !dbg !2745
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska, metadata !2746, metadata !2574), !dbg !2747
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2748
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !2749
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2749
  %2 = bitcast i8* %1 to %struct.MatroskaDemuxContext*, !dbg !2748
  store %struct.MatroskaDemuxContext* %2, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2747
  call void @llvm.dbg.declare(metadata %struct.EbmlList** %attachments_list, metadata !2750, metadata !2574), !dbg !2752
  %3 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2753
  %attachments = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %3, i32 0, i32 12, !dbg !2754
  store %struct.EbmlList* %attachments, %struct.EbmlList** %attachments_list, align 8, !dbg !2752
  call void @llvm.dbg.declare(metadata %struct.EbmlList** %chapters_list, metadata !2755, metadata !2574), !dbg !2756
  %4 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2757
  %chapters = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %4, i32 0, i32 13, !dbg !2758
  store %struct.EbmlList* %chapters, %struct.EbmlList** %chapters_list, align 8, !dbg !2756
  call void @llvm.dbg.declare(metadata %struct.MatroskaAttachment** %attachments1, metadata !2759, metadata !2574), !dbg !2769
  call void @llvm.dbg.declare(metadata %struct.MatroskaChapter** %chapters2, metadata !2770, metadata !2574), !dbg !2780
  call void @llvm.dbg.declare(metadata i64* %max_start, metadata !2781, metadata !2574), !dbg !2782
  store i64 0, i64* %max_start, align 8, !dbg !2782
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !2783, metadata !2574), !dbg !2784
  call void @llvm.dbg.declare(metadata %struct.Ebml* %ebml, metadata !2785, metadata !2574), !dbg !2794
  %5 = bitcast %struct.Ebml* %ebml to i8*, !dbg !2794
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 40, i32 8, i1 false), !dbg !2794
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2795, metadata !2574), !dbg !2796
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2797, metadata !2574), !dbg !2798
  call void @llvm.dbg.declare(metadata i32* %res, metadata !2799, metadata !2574), !dbg !2800
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2801
  %7 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2802
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i32 0, i32 1, !dbg !2803
  store %struct.AVFormatContext* %6, %struct.AVFormatContext** %ctx, align 8, !dbg !2804
  %8 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2805
  %cues_parsing_deferred = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %8, i32 0, i32 23, !dbg !2806
  store i32 1, i32* %cues_parsing_deferred, align 8, !dbg !2807
  %9 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2808
  %10 = bitcast %struct.Ebml* %ebml to i8*, !dbg !2810
  %call = call i32 @ebml_parse(%struct.MatroskaDemuxContext* %9, %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @ebml_syntax to [2 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %10), !dbg !2811
  %tobool = icmp ne i32 %call, 0, !dbg !2811
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !2812

lor.lhs.false:                                    ; preds = %entry
  %doctype = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 3, !dbg !2813
  %11 = load i8*, i8** %doctype, align 8, !dbg !2813
  %tobool3 = icmp ne i8* %11, null, !dbg !2815
  br i1 %tobool3, label %if.end, label %if.then, !dbg !2816

if.then:                                          ; preds = %lor.lhs.false, %entry
  %12 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2817
  %ctx4 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %12, i32 0, i32 1, !dbg !2819
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx4, align 8, !dbg !2819
  %14 = bitcast %struct.AVFormatContext* %13 to i8*, !dbg !2817
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i32 0, i32 0)), !dbg !2820
  %15 = bitcast %struct.Ebml* %ebml to i8*, !dbg !2821
  call void @ebml_free(%struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @ebml_syntax to [2 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %15), !dbg !2822
  store i32 -1094995529, i32* %retval, align 4, !dbg !2823
  br label %return, !dbg !2823

if.end:                                           ; preds = %lor.lhs.false
  %version = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 0, !dbg !2824
  %16 = load i64, i64* %version, align 8, !dbg !2824
  %cmp = icmp ugt i64 %16, 1, !dbg !2826
  br i1 %cmp, label %if.then11, label %lor.lhs.false5, !dbg !2827

lor.lhs.false5:                                   ; preds = %if.end
  %max_size = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 1, !dbg !2828
  %17 = load i64, i64* %max_size, align 8, !dbg !2828
  %cmp6 = icmp ugt i64 %17, 8, !dbg !2829
  br i1 %cmp6, label %if.then11, label %lor.lhs.false7, !dbg !2830

lor.lhs.false7:                                   ; preds = %lor.lhs.false5
  %id_length = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 2, !dbg !2831
  %18 = load i64, i64* %id_length, align 8, !dbg !2831
  %cmp8 = icmp ugt i64 %18, 4, !dbg !2832
  br i1 %cmp8, label %if.then11, label %lor.lhs.false9, !dbg !2833

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %doctype_version = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 4, !dbg !2834
  %19 = load i64, i64* %doctype_version, align 8, !dbg !2834
  %cmp10 = icmp ugt i64 %19, 3, !dbg !2835
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !2836

if.then11:                                        ; preds = %lor.lhs.false9, %lor.lhs.false7, %lor.lhs.false5, %if.end
  %20 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2838
  %ctx12 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %20, i32 0, i32 1, !dbg !2840
  %21 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx12, align 8, !dbg !2840
  %22 = bitcast %struct.AVFormatContext* %21 to i8*, !dbg !2838
  %version13 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 0, !dbg !2841
  %23 = load i64, i64* %version13, align 8, !dbg !2841
  %doctype14 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 3, !dbg !2842
  %24 = load i8*, i8** %doctype14, align 8, !dbg !2842
  %doctype_version15 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 4, !dbg !2843
  %25 = load i64, i64* %doctype_version15, align 8, !dbg !2843
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %22, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9, i32 0, i32 0), i64 %23, i8* %24, i64 %25), !dbg !2844
  %26 = bitcast %struct.Ebml* %ebml to i8*, !dbg !2845
  call void @ebml_free(%struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @ebml_syntax to [2 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %26), !dbg !2846
  store i32 -1163346256, i32* %retval, align 4, !dbg !2847
  br label %return, !dbg !2847

if.else:                                          ; preds = %lor.lhs.false9
  %doctype_version16 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 4, !dbg !2848
  %27 = load i64, i64* %doctype_version16, align 8, !dbg !2848
  %cmp17 = icmp eq i64 %27, 3, !dbg !2850
  br i1 %cmp17, label %if.then18, label %if.end23, !dbg !2851

if.then18:                                        ; preds = %if.else
  %28 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2852
  %ctx19 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %28, i32 0, i32 1, !dbg !2854
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx19, align 8, !dbg !2854
  %30 = bitcast %struct.AVFormatContext* %29 to i8*, !dbg !2852
  %version20 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 0, !dbg !2855
  %31 = load i64, i64* %version20, align 8, !dbg !2855
  %doctype21 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 3, !dbg !2856
  %32 = load i8*, i8** %doctype21, align 8, !dbg !2856
  %doctype_version22 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 4, !dbg !2857
  %33 = load i64, i64* %doctype_version22, align 8, !dbg !2857
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 24, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.10, i32 0, i32 0), i64 %31, i8* %32, i64 %33), !dbg !2858
  br label %if.end23, !dbg !2859

if.end23:                                         ; preds = %if.then18, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23
  store i32 0, i32* %i, align 4, !dbg !2860
  br label %for.cond, !dbg !2862

for.cond:                                         ; preds = %for.inc, %if.end24
  %34 = load i32, i32* %i, align 4, !dbg !2863
  %conv = sext i32 %34 to i64, !dbg !2863
  %cmp25 = icmp ult i64 %conv, 2, !dbg !2866
  br i1 %cmp25, label %for.body, label %for.end, !dbg !2867

for.body:                                         ; preds = %for.cond
  %doctype27 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 3, !dbg !2868
  %35 = load i8*, i8** %doctype27, align 8, !dbg !2868
  %36 = load i32, i32* %i, align 4, !dbg !2870
  %idxprom = sext i32 %36 to i64, !dbg !2871
  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* @matroska_doctypes, i64 0, i64 %idxprom, !dbg !2871
  %37 = load i8*, i8** %arrayidx, align 8, !dbg !2871
  %call28 = call i32 @strcmp(i8* %35, i8* %37) #10, !dbg !2872
  %tobool29 = icmp ne i32 %call28, 0, !dbg !2872
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !2873

if.then30:                                        ; preds = %for.body
  br label %for.end, !dbg !2874

if.end31:                                         ; preds = %for.body
  br label %for.inc, !dbg !2875

for.inc:                                          ; preds = %if.end31
  %38 = load i32, i32* %i, align 4, !dbg !2877
  %inc = add nsw i32 %38, 1, !dbg !2877
  store i32 %inc, i32* %i, align 4, !dbg !2877
  br label %for.cond, !dbg !2879, !llvm.loop !2880

for.end:                                          ; preds = %if.then30, %for.cond
  %39 = load i32, i32* %i, align 4, !dbg !2882
  %conv32 = sext i32 %39 to i64, !dbg !2882
  %cmp33 = icmp uge i64 %conv32, 2, !dbg !2884
  br i1 %cmp33, label %if.then35, label %if.end41, !dbg !2885

if.then35:                                        ; preds = %for.end
  %40 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2886
  %41 = bitcast %struct.AVFormatContext* %40 to i8*, !dbg !2886
  %doctype36 = getelementptr inbounds %struct.Ebml, %struct.Ebml* %ebml, i32 0, i32 3, !dbg !2888
  %42 = load i8*, i8** %doctype36, align 8, !dbg !2888
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i32 0, i32 0), i8* %42), !dbg !2889
  %43 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2890
  %ctx37 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %43, i32 0, i32 1, !dbg !2892
  %44 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx37, align 8, !dbg !2892
  %error_recognition = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %44, i32 0, i32 32, !dbg !2893
  %45 = load i32, i32* %error_recognition, align 4, !dbg !2893
  %and = and i32 %45, 8, !dbg !2894
  %tobool38 = icmp ne i32 %and, 0, !dbg !2894
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !2895

if.then39:                                        ; preds = %if.then35
  %46 = bitcast %struct.Ebml* %ebml to i8*, !dbg !2896
  call void @ebml_free(%struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @ebml_syntax to [2 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %46), !dbg !2898
  store i32 -1094995529, i32* %retval, align 4, !dbg !2899
  br label %return, !dbg !2899

if.end40:                                         ; preds = %if.then35
  br label %if.end41, !dbg !2900

if.end41:                                         ; preds = %if.end40, %for.end
  %47 = bitcast %struct.Ebml* %ebml to i8*, !dbg !2901
  call void @ebml_free(%struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @ebml_syntax to [2 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %47), !dbg !2902
  %48 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2903
  %ctx42 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %48, i32 0, i32 1, !dbg !2904
  %49 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx42, align 8, !dbg !2904
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %49, i32 0, i32 4, !dbg !2905
  %50 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2905
  store %struct.AVIOContext* %50, %struct.AVIOContext** %s.addr.i, align 8, !dbg !2906
  %51 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !2907
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %51, i64 0, i32 1) #11, !dbg !2908
  store i64 %call.i, i64* %pos, align 8, !dbg !2909
  %52 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2910
  %53 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2911
  %54 = bitcast %struct.MatroskaDemuxContext* %53 to i8*, !dbg !2911
  %call44 = call i32 @ebml_parse(%struct.MatroskaDemuxContext* %52, %struct.EbmlSyntax* getelementptr inbounds ([2 x %struct.EbmlSyntax], [2 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segments to [2 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %54), !dbg !2912
  store i32 %call44, i32* %res, align 4, !dbg !2913
  br label %while.cond, !dbg !2914

while.cond:                                       ; preds = %if.end51, %if.end41
  %55 = load i32, i32* %res, align 4, !dbg !2915
  %cmp45 = icmp ne i32 %55, 1, !dbg !2916
  br i1 %cmp45, label %while.body, label %while.end, !dbg !2917

while.body:                                       ; preds = %while.cond
  %56 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2918
  %57 = load i64, i64* %pos, align 8, !dbg !2919
  %call47 = call i32 @matroska_resync(%struct.MatroskaDemuxContext* %56, i64 %57), !dbg !2920
  store i32 %call47, i32* %res, align 4, !dbg !2921
  %58 = load i32, i32* %res, align 4, !dbg !2922
  %cmp48 = icmp slt i32 %58, 0, !dbg !2924
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !2925

if.then50:                                        ; preds = %while.body
  br label %fail, !dbg !2926

if.end51:                                         ; preds = %while.body
  %59 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2927
  %ctx52 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %59, i32 0, i32 1, !dbg !2928
  %60 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx52, align 8, !dbg !2928
  %pb53 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %60, i32 0, i32 4, !dbg !2929
  %61 = load %struct.AVIOContext*, %struct.AVIOContext** %pb53, align 8, !dbg !2929
  store %struct.AVIOContext* %61, %struct.AVIOContext** %s.addr.i303, align 8, !dbg !2930
  %62 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i303, align 8, !dbg !2931
  %call.i304 = call i64 @avio_seek(%struct.AVIOContext* %62, i64 0, i32 1) #11, !dbg !2932
  store i64 %call.i304, i64* %pos, align 8, !dbg !2933
  %63 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2934
  %64 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2935
  %65 = bitcast %struct.MatroskaDemuxContext* %64 to i8*, !dbg !2935
  %call55 = call i32 @ebml_parse(%struct.MatroskaDemuxContext* %63, %struct.EbmlSyntax* getelementptr inbounds ([9 x %struct.EbmlSyntax], [9 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_segment to [9 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %65), !dbg !2936
  store i32 %call55, i32* %res, align 4, !dbg !2937
  br label %while.cond, !dbg !2938, !llvm.loop !2940

while.end:                                        ; preds = %while.cond
  %66 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2941
  call void @matroska_execute_seekhead(%struct.MatroskaDemuxContext* %66), !dbg !2942
  %67 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2943
  %time_scale = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %67, i32 0, i32 6, !dbg !2945
  %68 = load i64, i64* %time_scale, align 8, !dbg !2945
  %tobool56 = icmp ne i64 %68, 0, !dbg !2943
  br i1 %tobool56, label %if.end59, label %if.then57, !dbg !2946

if.then57:                                        ; preds = %while.end
  %69 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2947
  %time_scale58 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %69, i32 0, i32 6, !dbg !2948
  store i64 1000000, i64* %time_scale58, align 8, !dbg !2949
  br label %if.end59, !dbg !2947

if.end59:                                         ; preds = %if.then57, %while.end
  %70 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2950
  %duration = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %70, i32 0, i32 7, !dbg !2952
  %71 = load double, double* %duration, align 8, !dbg !2952
  %tobool60 = fcmp une double %71, 0.000000e+00, !dbg !2950
  br i1 %tobool60, label %if.then61, label %if.end69, !dbg !2953

if.then61:                                        ; preds = %if.end59
  %72 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2954
  %duration62 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %72, i32 0, i32 7, !dbg !2955
  %73 = load double, double* %duration62, align 8, !dbg !2955
  %74 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2956
  %time_scale63 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %74, i32 0, i32 6, !dbg !2957
  %75 = load i64, i64* %time_scale63, align 8, !dbg !2957
  %conv64 = uitofp i64 %75 to double, !dbg !2956
  %mul = fmul double %73, %conv64, !dbg !2958
  %mul65 = fmul double %mul, 1.000000e+03, !dbg !2959
  %div = fdiv double %mul65, 1.000000e+06, !dbg !2960
  %conv66 = fptosi double %div to i64, !dbg !2954
  %76 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2961
  %ctx67 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %76, i32 0, i32 1, !dbg !2962
  %77 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx67, align 8, !dbg !2962
  %duration68 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %77, i32 0, i32 11, !dbg !2963
  store i64 %conv66, i64* %duration68, align 8, !dbg !2964
  br label %if.end69, !dbg !2961

if.end69:                                         ; preds = %if.then61, %if.end59
  %78 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2965
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %78, i32 0, i32 29, !dbg !2966
  %79 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2967
  %title = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %79, i32 0, i32 8, !dbg !2968
  %80 = load i8*, i8** %title, align 8, !dbg !2968
  %call70 = call i32 @av_dict_set(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* %80, i32 0), !dbg !2969
  %81 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2970
  %metadata71 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %81, i32 0, i32 29, !dbg !2971
  %82 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2972
  %muxingapp = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %82, i32 0, i32 9, !dbg !2973
  %83 = load i8*, i8** %muxingapp, align 8, !dbg !2973
  %call72 = call i32 @av_dict_set(%struct.AVDictionary** %metadata71, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* %83, i32 0), !dbg !2974
  %84 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2975
  %date_utc = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %84, i32 0, i32 10, !dbg !2977
  %size = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %date_utc, i32 0, i32 0, !dbg !2978
  %85 = load i32, i32* %size, align 8, !dbg !2978
  %cmp73 = icmp eq i32 %85, 8, !dbg !2979
  br i1 %cmp73, label %if.then75, label %if.end79, !dbg !2980

if.then75:                                        ; preds = %if.end69
  %86 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2981
  %metadata76 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %86, i32 0, i32 29, !dbg !2982
  %87 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !2983
  %date_utc77 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %87, i32 0, i32 10, !dbg !2984
  %data = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %date_utc77, i32 0, i32 2, !dbg !2985
  %88 = load i8*, i8** %data, align 8, !dbg !2985
  %89 = bitcast i8* %88 to %union.unaligned_64*, !dbg !2986
  %l = bitcast %union.unaligned_64* %89 to i64*, !dbg !2986
  %90 = load i64, i64* %l, align 1, !dbg !2986
  %call78 = call i64 @av_bswap64(i64 %90) #1, !dbg !2987
  call void @matroska_metadata_creation_time(%struct.AVDictionary** %metadata76, i64 %call78), !dbg !2988
  br label %if.end79, !dbg !2990

if.end79:                                         ; preds = %if.then75, %if.end69
  %91 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2991
  %call80 = call i32 @matroska_parse_tracks(%struct.AVFormatContext* %91), !dbg !2992
  store i32 %call80, i32* %res, align 4, !dbg !2993
  %92 = load i32, i32* %res, align 4, !dbg !2994
  %cmp81 = icmp slt i32 %92, 0, !dbg !2996
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !2997

if.then83:                                        ; preds = %if.end79
  br label %fail, !dbg !2998

if.end84:                                         ; preds = %if.end79
  %93 = load %struct.EbmlList*, %struct.EbmlList** %attachments_list, align 8, !dbg !2999
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %93, i32 0, i32 1, !dbg !3000
  %94 = load i8*, i8** %elem, align 8, !dbg !3000
  %95 = bitcast i8* %94 to %struct.MatroskaAttachment*, !dbg !2999
  store %struct.MatroskaAttachment* %95, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3001
  store i32 0, i32* %j, align 4, !dbg !3002
  br label %for.cond85, !dbg !3004

for.cond85:                                       ; preds = %for.inc239, %if.end84
  %96 = load i32, i32* %j, align 4, !dbg !3005
  %97 = load %struct.EbmlList*, %struct.EbmlList** %attachments_list, align 8, !dbg !3008
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %97, i32 0, i32 0, !dbg !3009
  %98 = load i32, i32* %nb_elem, align 8, !dbg !3009
  %cmp86 = icmp slt i32 %96, %98, !dbg !3010
  br i1 %cmp86, label %for.body88, label %for.end241, !dbg !3011

for.body88:                                       ; preds = %for.cond85
  %99 = load i32, i32* %j, align 4, !dbg !3012
  %idxprom89 = sext i32 %99 to i64, !dbg !3015
  %100 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3015
  %arrayidx90 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %100, i64 %idxprom89, !dbg !3015
  %filename = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx90, i32 0, i32 1, !dbg !3016
  %101 = load i8*, i8** %filename, align 8, !dbg !3016
  %tobool91 = icmp ne i8* %101, null, !dbg !3015
  br i1 %tobool91, label %land.lhs.true, label %if.then107, !dbg !3017

land.lhs.true:                                    ; preds = %for.body88
  %102 = load i32, i32* %j, align 4, !dbg !3018
  %idxprom92 = sext i32 %102 to i64, !dbg !3020
  %103 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3020
  %arrayidx93 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %103, i64 %idxprom92, !dbg !3020
  %mime = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx93, i32 0, i32 2, !dbg !3021
  %104 = load i8*, i8** %mime, align 8, !dbg !3021
  %tobool94 = icmp ne i8* %104, null, !dbg !3020
  br i1 %tobool94, label %land.lhs.true95, label %if.then107, !dbg !3022

land.lhs.true95:                                  ; preds = %land.lhs.true
  %105 = load i32, i32* %j, align 4, !dbg !3023
  %idxprom96 = sext i32 %105 to i64, !dbg !3024
  %106 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3024
  %arrayidx97 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %106, i64 %idxprom96, !dbg !3024
  %bin = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx97, i32 0, i32 3, !dbg !3025
  %data98 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin, i32 0, i32 2, !dbg !3026
  %107 = load i8*, i8** %data98, align 8, !dbg !3026
  %tobool99 = icmp ne i8* %107, null, !dbg !3024
  br i1 %tobool99, label %land.lhs.true100, label %if.then107, !dbg !3027

land.lhs.true100:                                 ; preds = %land.lhs.true95
  %108 = load i32, i32* %j, align 4, !dbg !3028
  %idxprom101 = sext i32 %108 to i64, !dbg !3029
  %109 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3029
  %arrayidx102 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %109, i64 %idxprom101, !dbg !3029
  %bin103 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx102, i32 0, i32 3, !dbg !3030
  %size104 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin103, i32 0, i32 0, !dbg !3031
  %110 = load i32, i32* %size104, align 8, !dbg !3031
  %cmp105 = icmp sgt i32 %110, 0, !dbg !3032
  br i1 %cmp105, label %if.else109, label %if.then107, !dbg !3033

if.then107:                                       ; preds = %land.lhs.true100, %land.lhs.true95, %land.lhs.true, %for.body88
  %111 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3035
  %ctx108 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %111, i32 0, i32 1, !dbg !3037
  %112 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx108, align 8, !dbg !3037
  %113 = bitcast %struct.AVFormatContext* %112 to i8*, !dbg !3035
  call void (i8*, i32, i8*, ...) @av_log(i8* %113, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i32 0, i32 0)), !dbg !3038
  br label %if.end238, !dbg !3039

if.else109:                                       ; preds = %land.lhs.true100
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !3040, metadata !2574), !dbg !3042
  %114 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3043
  %call110 = call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %114, %struct.AVCodec* null), !dbg !3044
  store %struct.AVStream* %call110, %struct.AVStream** %st, align 8, !dbg !3042
  %115 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3045
  %tobool111 = icmp ne %struct.AVStream* %115, null, !dbg !3045
  br i1 %tobool111, label %if.end113, label %if.then112, !dbg !3047

if.then112:                                       ; preds = %if.else109
  br label %for.end241, !dbg !3048

if.end113:                                        ; preds = %if.else109
  %116 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3049
  %metadata114 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %116, i32 0, i32 11, !dbg !3050
  %117 = load i32, i32* %j, align 4, !dbg !3051
  %idxprom115 = sext i32 %117 to i64, !dbg !3052
  %118 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3052
  %arrayidx116 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %118, i64 %idxprom115, !dbg !3052
  %filename117 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx116, i32 0, i32 1, !dbg !3053
  %119 = load i8*, i8** %filename117, align 8, !dbg !3053
  %call118 = call i32 @av_dict_set(%struct.AVDictionary** %metadata114, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0), i8* %119, i32 0), !dbg !3054
  %120 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3055
  %metadata119 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %120, i32 0, i32 11, !dbg !3056
  %121 = load i32, i32* %j, align 4, !dbg !3057
  %idxprom120 = sext i32 %121 to i64, !dbg !3058
  %122 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3058
  %arrayidx121 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %122, i64 %idxprom120, !dbg !3058
  %mime122 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx121, i32 0, i32 2, !dbg !3059
  %123 = load i8*, i8** %mime122, align 8, !dbg !3059
  %call123 = call i32 @av_dict_set(%struct.AVDictionary** %metadata119, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0), i8* %123, i32 0), !dbg !3060
  %124 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3061
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %124, i32 0, i32 19, !dbg !3062
  %125 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !3062
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %125, i32 0, i32 1, !dbg !3063
  store i32 0, i32* %codec_id, align 4, !dbg !3064
  store i32 0, i32* %i, align 4, !dbg !3065
  br label %for.cond124, !dbg !3067

for.cond124:                                      ; preds = %for.inc149, %if.end113
  %126 = load i32, i32* %i, align 4, !dbg !3068
  %idxprom125 = sext i32 %126 to i64, !dbg !3071
  %arrayidx126 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_image_mime_tags, i64 0, i64 %idxprom125, !dbg !3071
  %id = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx126, i32 0, i32 1, !dbg !3072
  %127 = load i32, i32* %id, align 4, !dbg !3072
  %cmp127 = icmp ne i32 %127, 0, !dbg !3073
  br i1 %cmp127, label %for.body129, label %for.end151, !dbg !3074

for.body129:                                      ; preds = %for.cond124
  %128 = load i32, i32* %i, align 4, !dbg !3075
  %idxprom130 = sext i32 %128 to i64, !dbg !3078
  %arrayidx131 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_image_mime_tags, i64 0, i64 %idxprom130, !dbg !3078
  %str = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx131, i32 0, i32 0, !dbg !3079
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %str, i32 0, i32 0, !dbg !3078
  %129 = load i32, i32* %j, align 4, !dbg !3080
  %idxprom132 = sext i32 %129 to i64, !dbg !3081
  %130 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3081
  %arrayidx133 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %130, i64 %idxprom132, !dbg !3081
  %mime134 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx133, i32 0, i32 2, !dbg !3082
  %131 = load i8*, i8** %mime134, align 8, !dbg !3082
  %132 = load i32, i32* %i, align 4, !dbg !3083
  %idxprom135 = sext i32 %132 to i64, !dbg !3084
  %arrayidx136 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_image_mime_tags, i64 0, i64 %idxprom135, !dbg !3084
  %str137 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx136, i32 0, i32 0, !dbg !3085
  %arraydecay138 = getelementptr inbounds [32 x i8], [32 x i8]* %str137, i32 0, i32 0, !dbg !3084
  %call139 = call i64 @strlen(i8* %arraydecay138) #10, !dbg !3086
  %call140 = call i32 @strncmp(i8* %arraydecay, i8* %131, i64 %call139) #10, !dbg !3087
  %tobool141 = icmp ne i32 %call140, 0, !dbg !3087
  br i1 %tobool141, label %if.end148, label %if.then142, !dbg !3088

if.then142:                                       ; preds = %for.body129
  %133 = load i32, i32* %i, align 4, !dbg !3089
  %idxprom143 = sext i32 %133 to i64, !dbg !3091
  %arrayidx144 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_image_mime_tags, i64 0, i64 %idxprom143, !dbg !3091
  %id145 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx144, i32 0, i32 1, !dbg !3092
  %134 = load i32, i32* %id145, align 4, !dbg !3092
  %135 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3093
  %codecpar146 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %135, i32 0, i32 19, !dbg !3094
  %136 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar146, align 8, !dbg !3094
  %codec_id147 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %136, i32 0, i32 1, !dbg !3095
  store i32 %134, i32* %codec_id147, align 4, !dbg !3096
  br label %for.end151, !dbg !3097

if.end148:                                        ; preds = %for.body129
  br label %for.inc149, !dbg !3098

for.inc149:                                       ; preds = %if.end148
  %137 = load i32, i32* %i, align 4, !dbg !3099
  %inc150 = add nsw i32 %137, 1, !dbg !3099
  store i32 %inc150, i32* %i, align 4, !dbg !3099
  br label %for.cond124, !dbg !3101, !llvm.loop !3102

for.end151:                                       ; preds = %if.then142, %for.cond124
  %138 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3104
  %139 = load i32, i32* %j, align 4, !dbg !3105
  %idxprom152 = sext i32 %139 to i64, !dbg !3106
  %140 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3106
  %arrayidx153 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %140, i64 %idxprom152, !dbg !3106
  %stream = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx153, i32 0, i32 4, !dbg !3107
  store %struct.AVStream* %138, %struct.AVStream** %stream, align 8, !dbg !3108
  %141 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3109
  %codecpar154 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %141, i32 0, i32 19, !dbg !3111
  %142 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar154, align 8, !dbg !3111
  %codec_id155 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %142, i32 0, i32 1, !dbg !3112
  %143 = load i32, i32* %codec_id155, align 4, !dbg !3112
  %cmp156 = icmp ne i32 %143, 0, !dbg !3113
  br i1 %cmp156, label %if.then158, label %if.else184, !dbg !3114

if.then158:                                       ; preds = %for.end151
  %144 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3115
  %disposition = getelementptr inbounds %struct.AVStream, %struct.AVStream* %144, i32 0, i32 8, !dbg !3117
  %145 = load i32, i32* %disposition, align 8, !dbg !3118
  %or = or i32 %145, 1024, !dbg !3118
  store i32 %or, i32* %disposition, align 8, !dbg !3118
  %146 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3119
  %codecpar159 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %146, i32 0, i32 19, !dbg !3120
  %147 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar159, align 8, !dbg !3120
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %147, i32 0, i32 0, !dbg !3121
  store i32 0, i32* %codec_type, align 8, !dbg !3122
  %148 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3123
  %attached_pic = getelementptr inbounds %struct.AVStream, %struct.AVStream* %148, i32 0, i32 13, !dbg !3124
  call void @av_init_packet(%struct.AVPacket* %attached_pic), !dbg !3125
  %149 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3126
  %attached_pic160 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %149, i32 0, i32 13, !dbg !3128
  %150 = load i32, i32* %j, align 4, !dbg !3129
  %idxprom161 = sext i32 %150 to i64, !dbg !3130
  %151 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3130
  %arrayidx162 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %151, i64 %idxprom161, !dbg !3130
  %bin163 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx162, i32 0, i32 3, !dbg !3131
  %size164 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin163, i32 0, i32 0, !dbg !3132
  %152 = load i32, i32* %size164, align 8, !dbg !3132
  %call165 = call i32 @av_new_packet(%struct.AVPacket* %attached_pic160, i32 %152), !dbg !3133
  store i32 %call165, i32* %res, align 4, !dbg !3134
  %cmp166 = icmp slt i32 %call165, 0, !dbg !3135
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !3136

if.then168:                                       ; preds = %if.then158
  %153 = load i32, i32* %res, align 4, !dbg !3137
  store i32 %153, i32* %retval, align 4, !dbg !3138
  br label %return, !dbg !3138

if.end169:                                        ; preds = %if.then158
  %154 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3139
  %attached_pic170 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %154, i32 0, i32 13, !dbg !3140
  %data171 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %attached_pic170, i32 0, i32 3, !dbg !3141
  %155 = load i8*, i8** %data171, align 8, !dbg !3141
  %156 = load i32, i32* %j, align 4, !dbg !3142
  %idxprom172 = sext i32 %156 to i64, !dbg !3143
  %157 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3143
  %arrayidx173 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %157, i64 %idxprom172, !dbg !3143
  %bin174 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx173, i32 0, i32 3, !dbg !3144
  %data175 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin174, i32 0, i32 2, !dbg !3145
  %158 = load i8*, i8** %data175, align 8, !dbg !3145
  %159 = load i32, i32* %j, align 4, !dbg !3146
  %idxprom176 = sext i32 %159 to i64, !dbg !3147
  %160 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3147
  %arrayidx177 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %160, i64 %idxprom176, !dbg !3147
  %bin178 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx177, i32 0, i32 3, !dbg !3148
  %size179 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin178, i32 0, i32 0, !dbg !3149
  %161 = load i32, i32* %size179, align 8, !dbg !3149
  %conv180 = sext i32 %161 to i64, !dbg !3147
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %155, i8* %158, i64 %conv180, i32 1, i1 false), !dbg !3150
  %162 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3151
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %162, i32 0, i32 0, !dbg !3152
  %163 = load i32, i32* %index, align 8, !dbg !3152
  %164 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3153
  %attached_pic181 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %164, i32 0, i32 13, !dbg !3154
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %attached_pic181, i32 0, i32 5, !dbg !3155
  store i32 %163, i32* %stream_index, align 4, !dbg !3156
  %165 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3157
  %attached_pic182 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %165, i32 0, i32 13, !dbg !3158
  %flags = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %attached_pic182, i32 0, i32 6, !dbg !3159
  %166 = load i32, i32* %flags, align 8, !dbg !3160
  %or183 = or i32 %166, 1, !dbg !3160
  store i32 %or183, i32* %flags, align 8, !dbg !3160
  br label %if.end237, !dbg !3161

if.else184:                                       ; preds = %for.end151
  %167 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3162
  %codecpar185 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %167, i32 0, i32 19, !dbg !3164
  %168 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar185, align 8, !dbg !3164
  %codec_type186 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %168, i32 0, i32 0, !dbg !3165
  store i32 4, i32* %codec_type186, align 8, !dbg !3166
  %169 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3167
  %codecpar187 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %169, i32 0, i32 19, !dbg !3169
  %170 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar187, align 8, !dbg !3169
  %171 = load i32, i32* %j, align 4, !dbg !3170
  %idxprom188 = sext i32 %171 to i64, !dbg !3171
  %172 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3171
  %arrayidx189 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %172, i64 %idxprom188, !dbg !3171
  %bin190 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx189, i32 0, i32 3, !dbg !3172
  %size191 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin190, i32 0, i32 0, !dbg !3173
  %173 = load i32, i32* %size191, align 8, !dbg !3173
  %call192 = call i32 @ff_alloc_extradata(%struct.AVCodecParameters* %170, i32 %173), !dbg !3174
  %tobool193 = icmp ne i32 %call192, 0, !dbg !3174
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !3175

if.then194:                                       ; preds = %if.else184
  br label %for.end241, !dbg !3176

if.end195:                                        ; preds = %if.else184
  %174 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3177
  %codecpar196 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %174, i32 0, i32 19, !dbg !3178
  %175 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar196, align 8, !dbg !3178
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %175, i32 0, i32 3, !dbg !3179
  %176 = load i8*, i8** %extradata, align 8, !dbg !3179
  %177 = load i32, i32* %j, align 4, !dbg !3180
  %idxprom197 = sext i32 %177 to i64, !dbg !3181
  %178 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3181
  %arrayidx198 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %178, i64 %idxprom197, !dbg !3181
  %bin199 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx198, i32 0, i32 3, !dbg !3182
  %data200 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin199, i32 0, i32 2, !dbg !3183
  %179 = load i8*, i8** %data200, align 8, !dbg !3183
  %180 = load i32, i32* %j, align 4, !dbg !3184
  %idxprom201 = sext i32 %180 to i64, !dbg !3185
  %181 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3185
  %arrayidx202 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %181, i64 %idxprom201, !dbg !3185
  %bin203 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx202, i32 0, i32 3, !dbg !3186
  %size204 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin203, i32 0, i32 0, !dbg !3187
  %182 = load i32, i32* %size204, align 8, !dbg !3187
  %conv205 = sext i32 %182 to i64, !dbg !3185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %176, i8* %179, i64 %conv205, i32 1, i1 false), !dbg !3188
  store i32 0, i32* %i, align 4, !dbg !3189
  br label %for.cond206, !dbg !3191

for.cond206:                                      ; preds = %for.inc234, %if.end195
  %183 = load i32, i32* %i, align 4, !dbg !3192
  %idxprom207 = sext i32 %183 to i64, !dbg !3195
  %arrayidx208 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_mime_tags, i64 0, i64 %idxprom207, !dbg !3195
  %id209 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx208, i32 0, i32 1, !dbg !3196
  %184 = load i32, i32* %id209, align 4, !dbg !3196
  %cmp210 = icmp ne i32 %184, 0, !dbg !3197
  br i1 %cmp210, label %for.body212, label %for.end236, !dbg !3198

for.body212:                                      ; preds = %for.cond206
  %185 = load i32, i32* %i, align 4, !dbg !3199
  %idxprom213 = sext i32 %185 to i64, !dbg !3202
  %arrayidx214 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_mime_tags, i64 0, i64 %idxprom213, !dbg !3202
  %str215 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx214, i32 0, i32 0, !dbg !3203
  %arraydecay216 = getelementptr inbounds [32 x i8], [32 x i8]* %str215, i32 0, i32 0, !dbg !3202
  %186 = load i32, i32* %j, align 4, !dbg !3204
  %idxprom217 = sext i32 %186 to i64, !dbg !3205
  %187 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachments1, align 8, !dbg !3205
  %arrayidx218 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %187, i64 %idxprom217, !dbg !3205
  %mime219 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx218, i32 0, i32 2, !dbg !3206
  %188 = load i8*, i8** %mime219, align 8, !dbg !3206
  %189 = load i32, i32* %i, align 4, !dbg !3207
  %idxprom220 = sext i32 %189 to i64, !dbg !3208
  %arrayidx221 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_mime_tags, i64 0, i64 %idxprom220, !dbg !3208
  %str222 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx221, i32 0, i32 0, !dbg !3209
  %arraydecay223 = getelementptr inbounds [32 x i8], [32 x i8]* %str222, i32 0, i32 0, !dbg !3208
  %call224 = call i64 @strlen(i8* %arraydecay223) #10, !dbg !3210
  %call225 = call i32 @strncmp(i8* %arraydecay216, i8* %188, i64 %call224) #10, !dbg !3211
  %tobool226 = icmp ne i32 %call225, 0, !dbg !3211
  br i1 %tobool226, label %if.end233, label %if.then227, !dbg !3212

if.then227:                                       ; preds = %for.body212
  %190 = load i32, i32* %i, align 4, !dbg !3213
  %idxprom228 = sext i32 %190 to i64, !dbg !3215
  %arrayidx229 = getelementptr inbounds [0 x %struct.CodecMime], [0 x %struct.CodecMime]* @ff_mkv_mime_tags, i64 0, i64 %idxprom228, !dbg !3215
  %id230 = getelementptr inbounds %struct.CodecMime, %struct.CodecMime* %arrayidx229, i32 0, i32 1, !dbg !3216
  %191 = load i32, i32* %id230, align 4, !dbg !3216
  %192 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3217
  %codecpar231 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %192, i32 0, i32 19, !dbg !3218
  %193 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar231, align 8, !dbg !3218
  %codec_id232 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %193, i32 0, i32 1, !dbg !3219
  store i32 %191, i32* %codec_id232, align 4, !dbg !3220
  br label %for.end236, !dbg !3221

if.end233:                                        ; preds = %for.body212
  br label %for.inc234, !dbg !3222

for.inc234:                                       ; preds = %if.end233
  %194 = load i32, i32* %i, align 4, !dbg !3223
  %inc235 = add nsw i32 %194, 1, !dbg !3223
  store i32 %inc235, i32* %i, align 4, !dbg !3223
  br label %for.cond206, !dbg !3225, !llvm.loop !3226

for.end236:                                       ; preds = %if.then227, %for.cond206
  br label %if.end237

if.end237:                                        ; preds = %for.end236, %if.end169
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %if.then107
  br label %for.inc239, !dbg !3228

for.inc239:                                       ; preds = %if.end238
  %195 = load i32, i32* %j, align 4, !dbg !3229
  %inc240 = add nsw i32 %195, 1, !dbg !3229
  store i32 %inc240, i32* %j, align 4, !dbg !3229
  br label %for.cond85, !dbg !3231, !llvm.loop !3232

for.end241:                                       ; preds = %if.then194, %if.then112, %for.cond85
  %196 = load %struct.EbmlList*, %struct.EbmlList** %chapters_list, align 8, !dbg !3234
  %elem242 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %196, i32 0, i32 1, !dbg !3235
  %197 = load i8*, i8** %elem242, align 8, !dbg !3235
  %198 = bitcast i8* %197 to %struct.MatroskaChapter*, !dbg !3234
  store %struct.MatroskaChapter* %198, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3236
  store i32 0, i32* %i, align 4, !dbg !3237
  br label %for.cond243, !dbg !3239

for.cond243:                                      ; preds = %for.inc299, %for.end241
  %199 = load i32, i32* %i, align 4, !dbg !3240
  %200 = load %struct.EbmlList*, %struct.EbmlList** %chapters_list, align 8, !dbg !3243
  %nb_elem244 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %200, i32 0, i32 0, !dbg !3244
  %201 = load i32, i32* %nb_elem244, align 8, !dbg !3244
  %cmp245 = icmp slt i32 %199, %201, !dbg !3245
  br i1 %cmp245, label %for.body247, label %for.end301, !dbg !3246

for.body247:                                      ; preds = %for.cond243
  %202 = load i32, i32* %i, align 4, !dbg !3247
  %idxprom248 = sext i32 %202 to i64, !dbg !3249
  %203 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3249
  %arrayidx249 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %203, i64 %idxprom248, !dbg !3249
  %start = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx249, i32 0, i32 0, !dbg !3250
  %204 = load i64, i64* %start, align 8, !dbg !3250
  %cmp250 = icmp ne i64 %204, -9223372036854775808, !dbg !3251
  br i1 %cmp250, label %land.lhs.true252, label %if.end298, !dbg !3252

land.lhs.true252:                                 ; preds = %for.body247
  %205 = load i32, i32* %i, align 4, !dbg !3253
  %idxprom253 = sext i32 %205 to i64, !dbg !3255
  %206 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3255
  %arrayidx254 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %206, i64 %idxprom253, !dbg !3255
  %uid = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx254, i32 0, i32 2, !dbg !3256
  %207 = load i64, i64* %uid, align 8, !dbg !3256
  %tobool255 = icmp ne i64 %207, 0, !dbg !3255
  br i1 %tobool255, label %land.lhs.true256, label %if.end298, !dbg !3257

land.lhs.true256:                                 ; preds = %land.lhs.true252
  %208 = load i64, i64* %max_start, align 8, !dbg !3258
  %cmp257 = icmp eq i64 %208, 0, !dbg !3259
  br i1 %cmp257, label %if.then265, label %lor.lhs.false259, !dbg !3260

lor.lhs.false259:                                 ; preds = %land.lhs.true256
  %209 = load i32, i32* %i, align 4, !dbg !3261
  %idxprom260 = sext i32 %209 to i64, !dbg !3262
  %210 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3262
  %arrayidx261 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %210, i64 %idxprom260, !dbg !3262
  %start262 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx261, i32 0, i32 0, !dbg !3263
  %211 = load i64, i64* %start262, align 8, !dbg !3263
  %212 = load i64, i64* %max_start, align 8, !dbg !3264
  %cmp263 = icmp ugt i64 %211, %212, !dbg !3265
  br i1 %cmp263, label %if.then265, label %if.end298, !dbg !3266

if.then265:                                       ; preds = %lor.lhs.false259, %land.lhs.true256
  %213 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3268
  %214 = load i32, i32* %i, align 4, !dbg !3270
  %idxprom266 = sext i32 %214 to i64, !dbg !3271
  %215 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3271
  %arrayidx267 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %215, i64 %idxprom266, !dbg !3271
  %uid268 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx267, i32 0, i32 2, !dbg !3272
  %216 = load i64, i64* %uid268, align 8, !dbg !3272
  %conv269 = trunc i64 %216 to i32, !dbg !3271
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !3273
  store i32 1, i32* %num, align 4, !dbg !3273
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !3273
  store i32 1000000000, i32* %den, align 4, !dbg !3273
  %217 = load i32, i32* %i, align 4, !dbg !3274
  %idxprom270 = sext i32 %217 to i64, !dbg !3275
  %218 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3275
  %arrayidx271 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %218, i64 %idxprom270, !dbg !3275
  %start272 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx271, i32 0, i32 0, !dbg !3276
  %219 = load i64, i64* %start272, align 8, !dbg !3276
  %220 = load i32, i32* %i, align 4, !dbg !3277
  %idxprom273 = sext i32 %220 to i64, !dbg !3278
  %221 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3278
  %arrayidx274 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %221, i64 %idxprom273, !dbg !3278
  %end = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx274, i32 0, i32 1, !dbg !3279
  %222 = load i64, i64* %end, align 8, !dbg !3279
  %223 = load i32, i32* %i, align 4, !dbg !3280
  %idxprom275 = sext i32 %223 to i64, !dbg !3281
  %224 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3281
  %arrayidx276 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %224, i64 %idxprom275, !dbg !3281
  %title277 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx276, i32 0, i32 3, !dbg !3282
  %225 = load i8*, i8** %title277, align 8, !dbg !3282
  %226 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !3283
  %227 = load i64, i64* %226, align 4, !dbg !3283
  %call278 = call %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext* %213, i32 %conv269, i64 %227, i64 %219, i64 %222, i8* %225), !dbg !3283
  %228 = load i32, i32* %i, align 4, !dbg !3284
  %idxprom279 = sext i32 %228 to i64, !dbg !3285
  %229 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3285
  %arrayidx280 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %229, i64 %idxprom279, !dbg !3285
  %chapter = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx280, i32 0, i32 4, !dbg !3286
  store %struct.AVChapter* %call278, %struct.AVChapter** %chapter, align 8, !dbg !3287
  %230 = load i32, i32* %i, align 4, !dbg !3288
  %idxprom281 = sext i32 %230 to i64, !dbg !3290
  %231 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3290
  %arrayidx282 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %231, i64 %idxprom281, !dbg !3290
  %chapter283 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx282, i32 0, i32 4, !dbg !3291
  %232 = load %struct.AVChapter*, %struct.AVChapter** %chapter283, align 8, !dbg !3291
  %tobool284 = icmp ne %struct.AVChapter* %232, null, !dbg !3290
  br i1 %tobool284, label %if.then285, label %if.end294, !dbg !3292

if.then285:                                       ; preds = %if.then265
  %233 = load i32, i32* %i, align 4, !dbg !3293
  %idxprom286 = sext i32 %233 to i64, !dbg !3295
  %234 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3295
  %arrayidx287 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %234, i64 %idxprom286, !dbg !3295
  %chapter288 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx287, i32 0, i32 4, !dbg !3296
  %235 = load %struct.AVChapter*, %struct.AVChapter** %chapter288, align 8, !dbg !3296
  %metadata289 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %235, i32 0, i32 4, !dbg !3297
  %236 = load i32, i32* %i, align 4, !dbg !3298
  %idxprom290 = sext i32 %236 to i64, !dbg !3299
  %237 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3299
  %arrayidx291 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %237, i64 %idxprom290, !dbg !3299
  %title292 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx291, i32 0, i32 3, !dbg !3300
  %238 = load i8*, i8** %title292, align 8, !dbg !3300
  %call293 = call i32 @av_dict_set(%struct.AVDictionary** %metadata289, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* %238, i32 0), !dbg !3301
  br label %if.end294, !dbg !3302

if.end294:                                        ; preds = %if.then285, %if.then265
  %239 = load i32, i32* %i, align 4, !dbg !3303
  %idxprom295 = sext i32 %239 to i64, !dbg !3304
  %240 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapters2, align 8, !dbg !3304
  %arrayidx296 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %240, i64 %idxprom295, !dbg !3304
  %start297 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx296, i32 0, i32 0, !dbg !3305
  %241 = load i64, i64* %start297, align 8, !dbg !3305
  store i64 %241, i64* %max_start, align 8, !dbg !3306
  br label %if.end298, !dbg !3307

if.end298:                                        ; preds = %if.end294, %lor.lhs.false259, %land.lhs.true252, %for.body247
  br label %for.inc299, !dbg !3308

for.inc299:                                       ; preds = %if.end298
  %242 = load i32, i32* %i, align 4, !dbg !3310
  %inc300 = add nsw i32 %242, 1, !dbg !3310
  store i32 %inc300, i32* %i, align 4, !dbg !3310
  br label %for.cond243, !dbg !3311, !llvm.loop !3312

for.end301:                                       ; preds = %for.cond243
  %243 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3314
  call void @matroska_add_index_entries(%struct.MatroskaDemuxContext* %243), !dbg !3315
  %244 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3316
  call void @matroska_convert_tags(%struct.AVFormatContext* %244), !dbg !3317
  store i32 0, i32* %retval, align 4, !dbg !3318
  br label %return, !dbg !3318

fail:                                             ; preds = %if.then83, %if.then50
  %245 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3319
  %call302 = call i32 @matroska_read_close(%struct.AVFormatContext* %245), !dbg !3320
  %246 = load i32, i32* %res, align 4, !dbg !3321
  store i32 %246, i32* %retval, align 4, !dbg !3322
  br label %return, !dbg !3322

return:                                           ; preds = %fail, %for.end301, %if.then168, %if.then39, %if.then11, %if.then
  %247 = load i32, i32* %retval, align 4, !dbg !3323
  ret i32 %247, !dbg !3323
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_read_packet(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt) #0 !dbg !3324 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !3327
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %matroska = alloca %struct.MatroskaDemuxContext*, align 8
  %ret = alloca i32, align 4
  %pos = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3330, metadata !2574), !dbg !3331
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !3332, metadata !2574), !dbg !3333
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska, metadata !3334, metadata !2574), !dbg !3335
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3336
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3337
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3337
  %2 = bitcast i8* %1 to %struct.MatroskaDemuxContext*, !dbg !3336
  store %struct.MatroskaDemuxContext* %2, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3335
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3338, metadata !2574), !dbg !3339
  store i32 0, i32* %ret, align 4, !dbg !3339
  br label %while.cond, !dbg !3340

while.cond:                                       ; preds = %if.end7, %entry
  %3 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3341
  %4 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3343
  %call = call i32 @matroska_deliver_packet(%struct.MatroskaDemuxContext* %3, %struct.AVPacket* %4), !dbg !3344
  %tobool = icmp ne i32 %call, 0, !dbg !3345
  br i1 %tobool, label %while.body, label %while.end, !dbg !3345

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !3346, metadata !2574), !dbg !3347
  %5 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3348
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %5, i32 0, i32 1, !dbg !3349
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !3349
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i32 0, i32 4, !dbg !3350
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3350
  store %struct.AVIOContext* %7, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3351
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3352
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %8, i64 0, i32 1) #11, !dbg !3353
  store i64 %call.i, i64* %pos, align 8, !dbg !3347
  %9 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3354
  %done = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %9, i32 0, i32 20, !dbg !3356
  %10 = load i32, i32* %done, align 8, !dbg !3356
  %tobool2 = icmp ne i32 %10, 0, !dbg !3354
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3357

if.then:                                          ; preds = %while.body
  %11 = load i32, i32* %ret, align 4, !dbg !3358
  %cmp = icmp slt i32 %11, 0, !dbg !3359
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3360

cond.true:                                        ; preds = %if.then
  %12 = load i32, i32* %ret, align 4, !dbg !3361
  br label %cond.end, !dbg !3363

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !3364

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ -541478725, %cond.false ], !dbg !3366
  store i32 %cond, i32* %retval, align 4, !dbg !3368
  br label %return, !dbg !3368

if.end:                                           ; preds = %while.body
  %13 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3369
  %call3 = call i32 @matroska_parse_cluster(%struct.MatroskaDemuxContext* %13), !dbg !3371
  %cmp4 = icmp slt i32 %call3, 0, !dbg !3372
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !3373

if.then5:                                         ; preds = %if.end
  %14 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3374
  %15 = load i64, i64* %pos, align 8, !dbg !3375
  %call6 = call i32 @matroska_resync(%struct.MatroskaDemuxContext* %14, i64 %15), !dbg !3376
  store i32 %call6, i32* %ret, align 4, !dbg !3377
  br label %if.end7, !dbg !3378

if.end7:                                          ; preds = %if.then5, %if.end
  br label %while.cond, !dbg !3379, !llvm.loop !3381

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !3382
  br label %return, !dbg !3382

return:                                           ; preds = %while.end, %cond.end
  %16 = load i32, i32* %retval, align 4, !dbg !3383
  ret i32 %16, !dbg !3383
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_read_close(%struct.AVFormatContext* %s) #0 !dbg !3384 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %matroska = alloca %struct.MatroskaDemuxContext*, align 8
  %tracks = alloca %struct.MatroskaTrack*, align 8
  %n = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3385, metadata !2574), !dbg !3386
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska, metadata !3387, metadata !2574), !dbg !3388
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3389
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3390
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3390
  %2 = bitcast i8* %1 to %struct.MatroskaDemuxContext*, !dbg !3389
  store %struct.MatroskaDemuxContext* %2, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3388
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %tracks, metadata !3391, metadata !2574), !dbg !3466
  %3 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3467
  %tracks1 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %3, i32 0, i32 11, !dbg !3468
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks1, i32 0, i32 1, !dbg !3469
  %4 = load i8*, i8** %elem, align 8, !dbg !3469
  %5 = bitcast i8* %4 to %struct.MatroskaTrack*, !dbg !3467
  store %struct.MatroskaTrack* %5, %struct.MatroskaTrack** %tracks, align 8, !dbg !3466
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3470, metadata !2574), !dbg !3471
  %6 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3472
  call void @matroska_clear_queue(%struct.MatroskaDemuxContext* %6), !dbg !3473
  store i32 0, i32* %n, align 4, !dbg !3474
  br label %for.cond, !dbg !3476

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %n, align 4, !dbg !3477
  %8 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3480
  %tracks2 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %8, i32 0, i32 11, !dbg !3481
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks2, i32 0, i32 0, !dbg !3482
  %9 = load i32, i32* %nb_elem, align 8, !dbg !3482
  %cmp = icmp slt i32 %7, %9, !dbg !3483
  br i1 %cmp, label %for.body, label %for.end, !dbg !3484

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %n, align 4, !dbg !3485
  %idxprom = sext i32 %10 to i64, !dbg !3487
  %11 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !3487
  %arrayidx = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %11, i64 %idxprom, !dbg !3487
  %type = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx, i32 0, i32 2, !dbg !3488
  %12 = load i64, i64* %type, align 8, !dbg !3488
  %cmp3 = icmp eq i64 %12, 2, !dbg !3489
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3490

if.then:                                          ; preds = %for.body
  %13 = load i32, i32* %n, align 4, !dbg !3491
  %idxprom4 = sext i32 %13 to i64, !dbg !3492
  %14 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !3492
  %arrayidx5 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %14, i64 %idxprom4, !dbg !3492
  %audio = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx5, i32 0, i32 13, !dbg !3493
  %buf = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio, i32 0, i32 11, !dbg !3494
  %15 = bitcast i8** %buf to i8*, !dbg !3495
  call void @av_freep(i8* %15), !dbg !3496
  br label %if.end, !dbg !3496

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3497

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %n, align 4, !dbg !3499
  %inc = add nsw i32 %16, 1, !dbg !3499
  store i32 %inc, i32* %n, align 4, !dbg !3499
  br label %for.cond, !dbg !3501, !llvm.loop !3502

for.end:                                          ; preds = %for.cond
  %17 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3504
  %current_cluster = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %17, i32 0, i32 28, !dbg !3505
  %18 = bitcast %struct.MatroskaCluster* %current_cluster to i8*, !dbg !3506
  call void @ebml_free(%struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_cluster to [6 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %18), !dbg !3507
  %19 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3508
  %20 = bitcast %struct.MatroskaDemuxContext* %19 to i8*, !dbg !3508
  call void @ebml_free(%struct.EbmlSyntax* getelementptr inbounds ([9 x %struct.EbmlSyntax], [9 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_segment to [9 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %20), !dbg !3509
  ret i32 0, !dbg !3510
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_read_seek(%struct.AVFormatContext* %s, i32 %stream_index, i64 %timestamp, i32 %flags) #0 !dbg !3511 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %stream_index.addr = alloca i32, align 4
  %timestamp.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %matroska = alloca %struct.MatroskaDemuxContext*, align 8
  %tracks = alloca %struct.MatroskaTrack*, align 8
  %st = alloca %struct.AVStream*, align 8
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %index_min = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3514, metadata !2574), !dbg !3515
  store i32 %stream_index, i32* %stream_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stream_index.addr, metadata !3516, metadata !2574), !dbg !3517
  store i64 %timestamp, i64* %timestamp.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timestamp.addr, metadata !3518, metadata !2574), !dbg !3519
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !3520, metadata !2574), !dbg !3521
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska, metadata !3522, metadata !2574), !dbg !3523
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3524
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3525
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3525
  %2 = bitcast i8* %1 to %struct.MatroskaDemuxContext*, !dbg !3524
  store %struct.MatroskaDemuxContext* %2, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3523
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %tracks, metadata !3526, metadata !2574), !dbg !3527
  store %struct.MatroskaTrack* null, %struct.MatroskaTrack** %tracks, align 8, !dbg !3527
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !3528, metadata !2574), !dbg !3529
  %3 = load i32, i32* %stream_index.addr, align 4, !dbg !3530
  %idxprom = sext i32 %3 to i64, !dbg !3531
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3531
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 7, !dbg !3532
  %5 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !3532
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %5, i64 %idxprom, !dbg !3531
  %6 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !3531
  store %struct.AVStream* %6, %struct.AVStream** %st, align 8, !dbg !3529
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3533, metadata !2574), !dbg !3534
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3535, metadata !2574), !dbg !3536
  call void @llvm.dbg.declare(metadata i32* %index_min, metadata !3537, metadata !2574), !dbg !3538
  %7 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3539
  %cues_parsing_deferred = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i32 0, i32 23, !dbg !3541
  %8 = load i32, i32* %cues_parsing_deferred, align 8, !dbg !3541
  %cmp = icmp sgt i32 %8, 0, !dbg !3542
  br i1 %cmp, label %if.then, label %if.end, !dbg !3543

if.then:                                          ; preds = %entry
  %9 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3544
  %cues_parsing_deferred1 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %9, i32 0, i32 23, !dbg !3546
  store i32 0, i32* %cues_parsing_deferred1, align 8, !dbg !3547
  %10 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3548
  call void @matroska_parse_cues(%struct.MatroskaDemuxContext* %10), !dbg !3549
  br label %if.end, !dbg !3550

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3551
  %nb_index_entries = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i32 0, i32 34, !dbg !3553
  %12 = load i32, i32* %nb_index_entries, align 8, !dbg !3553
  %tobool = icmp ne i32 %12, 0, !dbg !3551
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !3554

if.then2:                                         ; preds = %if.end
  br label %err, !dbg !3555

if.end3:                                          ; preds = %if.end
  %13 = load i64, i64* %timestamp.addr, align 8, !dbg !3556
  %14 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3557
  %index_entries = getelementptr inbounds %struct.AVStream, %struct.AVStream* %14, i32 0, i32 33, !dbg !3558
  %15 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries, align 8, !dbg !3558
  %arrayidx4 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %15, i64 0, !dbg !3557
  %timestamp5 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx4, i32 0, i32 1, !dbg !3559
  %16 = load i64, i64* %timestamp5, align 8, !dbg !3559
  %cmp6 = icmp sgt i64 %13, %16, !dbg !3560
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !3561

cond.true:                                        ; preds = %if.end3
  %17 = load i64, i64* %timestamp.addr, align 8, !dbg !3562
  br label %cond.end, !dbg !3564

cond.false:                                       ; preds = %if.end3
  %18 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3565
  %index_entries7 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i32 0, i32 33, !dbg !3567
  %19 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries7, align 8, !dbg !3567
  %arrayidx8 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %19, i64 0, !dbg !3565
  %timestamp9 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx8, i32 0, i32 1, !dbg !3568
  %20 = load i64, i64* %timestamp9, align 8, !dbg !3568
  br label %cond.end, !dbg !3569

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %17, %cond.true ], [ %20, %cond.false ], !dbg !3570
  store i64 %cond, i64* %timestamp.addr, align 8, !dbg !3572
  %21 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3573
  %22 = load i64, i64* %timestamp.addr, align 8, !dbg !3575
  %23 = load i32, i32* %flags.addr, align 4, !dbg !3576
  %call = call i32 @av_index_search_timestamp(%struct.AVStream* %21, i64 %22, i32 %23), !dbg !3577
  store i32 %call, i32* %index, align 4, !dbg !3578
  %cmp10 = icmp slt i32 %call, 0, !dbg !3579
  br i1 %cmp10, label %if.then13, label %lor.lhs.false, !dbg !3580

lor.lhs.false:                                    ; preds = %cond.end
  %24 = load i32, i32* %index, align 4, !dbg !3581
  %25 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3583
  %nb_index_entries11 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %25, i32 0, i32 34, !dbg !3584
  %26 = load i32, i32* %nb_index_entries11, align 8, !dbg !3584
  %sub = sub nsw i32 %26, 1, !dbg !3585
  %cmp12 = icmp eq i32 %24, %sub, !dbg !3586
  br i1 %cmp12, label %if.then13, label %if.end29, !dbg !3587

if.then13:                                        ; preds = %lor.lhs.false, %cond.end
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3588
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %27, i32 0, i32 4, !dbg !3590
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3590
  %29 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3591
  %nb_index_entries14 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %29, i32 0, i32 34, !dbg !3592
  %30 = load i32, i32* %nb_index_entries14, align 8, !dbg !3592
  %sub15 = sub nsw i32 %30, 1, !dbg !3593
  %idxprom16 = sext i32 %sub15 to i64, !dbg !3594
  %31 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3594
  %index_entries17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %31, i32 0, i32 33, !dbg !3595
  %32 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries17, align 8, !dbg !3595
  %arrayidx18 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %32, i64 %idxprom16, !dbg !3594
  %pos = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx18, i32 0, i32 0, !dbg !3596
  %33 = load i64, i64* %pos, align 8, !dbg !3596
  %call19 = call i64 @avio_seek(%struct.AVIOContext* %28, i64 %33, i32 0), !dbg !3597
  %34 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3598
  %current_id = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %34, i32 0, i32 5, !dbg !3599
  store i32 0, i32* %current_id, align 4, !dbg !3600
  br label %while.cond, !dbg !3601

while.cond:                                       ; preds = %if.end28, %if.then13
  %35 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3602
  %36 = load i64, i64* %timestamp.addr, align 8, !dbg !3604
  %37 = load i32, i32* %flags.addr, align 4, !dbg !3605
  %call20 = call i32 @av_index_search_timestamp(%struct.AVStream* %35, i64 %36, i32 %37), !dbg !3606
  store i32 %call20, i32* %index, align 4, !dbg !3607
  %cmp21 = icmp slt i32 %call20, 0, !dbg !3608
  br i1 %cmp21, label %lor.end, label %lor.rhs, !dbg !3609

lor.rhs:                                          ; preds = %while.cond
  %38 = load i32, i32* %index, align 4, !dbg !3610
  %39 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3612
  %nb_index_entries22 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %39, i32 0, i32 34, !dbg !3613
  %40 = load i32, i32* %nb_index_entries22, align 8, !dbg !3613
  %sub23 = sub nsw i32 %40, 1, !dbg !3614
  %cmp24 = icmp eq i32 %38, %sub23, !dbg !3615
  br label %lor.end, !dbg !3616

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %41 = phi i1 [ true, %while.cond ], [ %cmp24, %lor.rhs ]
  br i1 %41, label %while.body, label %while.end, !dbg !3617

while.body:                                       ; preds = %lor.end
  %42 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3619
  call void @matroska_clear_queue(%struct.MatroskaDemuxContext* %42), !dbg !3621
  %43 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3622
  %call25 = call i32 @matroska_parse_cluster(%struct.MatroskaDemuxContext* %43), !dbg !3624
  %cmp26 = icmp slt i32 %call25, 0, !dbg !3625
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !3626

if.then27:                                        ; preds = %while.body
  br label %while.end, !dbg !3627

if.end28:                                         ; preds = %while.body
  br label %while.cond, !dbg !3628, !llvm.loop !3630

while.end:                                        ; preds = %if.then27, %lor.end
  br label %if.end29, !dbg !3631

if.end29:                                         ; preds = %while.end, %lor.lhs.false
  %44 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3632
  call void @matroska_clear_queue(%struct.MatroskaDemuxContext* %44), !dbg !3633
  %45 = load i32, i32* %index, align 4, !dbg !3634
  %cmp30 = icmp slt i32 %45, 0, !dbg !3636
  br i1 %cmp30, label %if.then37, label %lor.lhs.false31, !dbg !3637

lor.lhs.false31:                                  ; preds = %if.end29
  %46 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3638
  %cues_parsing_deferred32 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %46, i32 0, i32 23, !dbg !3640
  %47 = load i32, i32* %cues_parsing_deferred32, align 8, !dbg !3640
  %cmp33 = icmp slt i32 %47, 0, !dbg !3641
  br i1 %cmp33, label %land.lhs.true, label %if.end38, !dbg !3642

land.lhs.true:                                    ; preds = %lor.lhs.false31
  %48 = load i32, i32* %index, align 4, !dbg !3643
  %49 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3645
  %nb_index_entries34 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %49, i32 0, i32 34, !dbg !3646
  %50 = load i32, i32* %nb_index_entries34, align 8, !dbg !3646
  %sub35 = sub nsw i32 %50, 1, !dbg !3647
  %cmp36 = icmp eq i32 %48, %sub35, !dbg !3648
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !3649

if.then37:                                        ; preds = %land.lhs.true, %if.end29
  br label %err, !dbg !3650

if.end38:                                         ; preds = %land.lhs.true, %lor.lhs.false31
  %51 = load i32, i32* %index, align 4, !dbg !3651
  store i32 %51, i32* %index_min, align 4, !dbg !3652
  %52 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3653
  %tracks39 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %52, i32 0, i32 11, !dbg !3654
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks39, i32 0, i32 1, !dbg !3655
  %53 = load i8*, i8** %elem, align 8, !dbg !3655
  %54 = bitcast i8* %53 to %struct.MatroskaTrack*, !dbg !3653
  store %struct.MatroskaTrack* %54, %struct.MatroskaTrack** %tracks, align 8, !dbg !3656
  store i32 0, i32* %i, align 4, !dbg !3657
  br label %for.cond, !dbg !3659

for.cond:                                         ; preds = %for.inc, %if.end38
  %55 = load i32, i32* %i, align 4, !dbg !3660
  %56 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3663
  %tracks40 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %56, i32 0, i32 11, !dbg !3664
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks40, i32 0, i32 0, !dbg !3665
  %57 = load i32, i32* %nb_elem, align 8, !dbg !3665
  %cmp41 = icmp slt i32 %55, %57, !dbg !3666
  br i1 %cmp41, label %for.body, label %for.end, !dbg !3667

for.body:                                         ; preds = %for.cond
  %58 = load i32, i32* %i, align 4, !dbg !3668
  %idxprom42 = sext i32 %58 to i64, !dbg !3670
  %59 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !3670
  %arrayidx43 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %59, i64 %idxprom42, !dbg !3670
  %audio = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx43, i32 0, i32 13, !dbg !3671
  %pkt_cnt = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio, i32 0, i32 9, !dbg !3672
  store i32 0, i32* %pkt_cnt, align 4, !dbg !3673
  %60 = load i32, i32* %i, align 4, !dbg !3674
  %idxprom44 = sext i32 %60 to i64, !dbg !3675
  %61 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !3675
  %arrayidx45 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %61, i64 %idxprom44, !dbg !3675
  %audio46 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx45, i32 0, i32 13, !dbg !3676
  %sub_packet_cnt = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio46, i32 0, i32 8, !dbg !3677
  store i32 0, i32* %sub_packet_cnt, align 8, !dbg !3678
  %62 = load i32, i32* %i, align 4, !dbg !3679
  %idxprom47 = sext i32 %62 to i64, !dbg !3680
  %63 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !3680
  %arrayidx48 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %63, i64 %idxprom47, !dbg !3680
  %audio49 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx48, i32 0, i32 13, !dbg !3681
  %buf_timecode = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio49, i32 0, i32 10, !dbg !3682
  store i64 -9223372036854775808, i64* %buf_timecode, align 8, !dbg !3683
  %64 = load i32, i32* %i, align 4, !dbg !3684
  %idxprom50 = sext i32 %64 to i64, !dbg !3685
  %65 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !3685
  %arrayidx51 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %65, i64 %idxprom50, !dbg !3685
  %end_timecode = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx51, i32 0, i32 19, !dbg !3686
  store i64 0, i64* %end_timecode, align 8, !dbg !3687
  br label %for.inc, !dbg !3688

for.inc:                                          ; preds = %for.body
  %66 = load i32, i32* %i, align 4, !dbg !3689
  %inc = add nsw i32 %66, 1, !dbg !3689
  store i32 %inc, i32* %i, align 4, !dbg !3689
  br label %for.cond, !dbg !3691, !llvm.loop !3692

for.end:                                          ; preds = %for.cond
  %67 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3694
  %pb52 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %67, i32 0, i32 4, !dbg !3695
  %68 = load %struct.AVIOContext*, %struct.AVIOContext** %pb52, align 8, !dbg !3695
  %69 = load i32, i32* %index_min, align 4, !dbg !3696
  %idxprom53 = sext i32 %69 to i64, !dbg !3697
  %70 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3697
  %index_entries54 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %70, i32 0, i32 33, !dbg !3698
  %71 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries54, align 8, !dbg !3698
  %arrayidx55 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %71, i64 %idxprom53, !dbg !3697
  %pos56 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx55, i32 0, i32 0, !dbg !3699
  %72 = load i64, i64* %pos56, align 8, !dbg !3699
  %call57 = call i64 @avio_seek(%struct.AVIOContext* %68, i64 %72, i32 0), !dbg !3700
  %73 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3701
  %current_id58 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %73, i32 0, i32 5, !dbg !3702
  store i32 0, i32* %current_id58, align 4, !dbg !3703
  %74 = load i32, i32* %flags.addr, align 4, !dbg !3704
  %and = and i32 %74, 4, !dbg !3706
  %tobool59 = icmp ne i32 %and, 0, !dbg !3706
  br i1 %tobool59, label %if.then60, label %if.else, !dbg !3707

if.then60:                                        ; preds = %for.end
  %75 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3708
  %skip_to_keyframe = getelementptr inbounds %struct.AVStream, %struct.AVStream* %75, i32 0, i32 43, !dbg !3710
  store i32 0, i32* %skip_to_keyframe, align 4, !dbg !3711
  %76 = load i64, i64* %timestamp.addr, align 8, !dbg !3712
  %77 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3713
  %skip_to_timecode = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %77, i32 0, i32 22, !dbg !3714
  store i64 %76, i64* %skip_to_timecode, align 8, !dbg !3715
  br label %if.end67, !dbg !3716

if.else:                                          ; preds = %for.end
  %78 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3717
  %skip_to_keyframe61 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %78, i32 0, i32 43, !dbg !3719
  store i32 1, i32* %skip_to_keyframe61, align 4, !dbg !3720
  %79 = load i32, i32* %index, align 4, !dbg !3721
  %idxprom62 = sext i32 %79 to i64, !dbg !3722
  %80 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3722
  %index_entries63 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %80, i32 0, i32 33, !dbg !3723
  %81 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries63, align 8, !dbg !3723
  %arrayidx64 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %81, i64 %idxprom62, !dbg !3722
  %timestamp65 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx64, i32 0, i32 1, !dbg !3724
  %82 = load i64, i64* %timestamp65, align 8, !dbg !3724
  %83 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3725
  %skip_to_timecode66 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %83, i32 0, i32 22, !dbg !3726
  store i64 %82, i64* %skip_to_timecode66, align 8, !dbg !3727
  br label %if.end67

if.end67:                                         ; preds = %if.else, %if.then60
  %84 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3728
  %skip_to_keyframe68 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %84, i32 0, i32 21, !dbg !3729
  store i32 1, i32* %skip_to_keyframe68, align 4, !dbg !3730
  %85 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3731
  %done = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %85, i32 0, i32 20, !dbg !3732
  store i32 0, i32* %done, align 8, !dbg !3733
  %86 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3734
  %num_levels = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %86, i32 0, i32 2, !dbg !3735
  store i32 0, i32* %num_levels, align 8, !dbg !3736
  %87 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3737
  %88 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3738
  %89 = load i32, i32* %index, align 4, !dbg !3739
  %idxprom69 = sext i32 %89 to i64, !dbg !3740
  %90 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3740
  %index_entries70 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %90, i32 0, i32 33, !dbg !3741
  %91 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries70, align 8, !dbg !3741
  %arrayidx71 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %91, i64 %idxprom69, !dbg !3740
  %timestamp72 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx71, i32 0, i32 1, !dbg !3742
  %92 = load i64, i64* %timestamp72, align 8, !dbg !3742
  call void @ff_update_cur_dts(%struct.AVFormatContext* %87, %struct.AVStream* %88, i64 %92), !dbg !3743
  store i32 0, i32* %retval, align 4, !dbg !3744
  br label %return, !dbg !3744

err:                                              ; preds = %if.then37, %if.then2
  %93 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3745
  call void @matroska_clear_queue(%struct.MatroskaDemuxContext* %93), !dbg !3746
  %94 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3747
  %current_id73 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %94, i32 0, i32 5, !dbg !3748
  store i32 0, i32* %current_id73, align 4, !dbg !3749
  %95 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3750
  %skip_to_keyframe74 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %95, i32 0, i32 21, !dbg !3751
  store i32 0, i32* %skip_to_keyframe74, align 4, !dbg !3752
  %96 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3753
  %skip_to_keyframe75 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %96, i32 0, i32 43, !dbg !3754
  store i32 0, i32* %skip_to_keyframe75, align 4, !dbg !3755
  %97 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3756
  %done76 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %97, i32 0, i32 20, !dbg !3757
  store i32 0, i32* %done76, align 8, !dbg !3758
  %98 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3759
  %num_levels77 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %98, i32 0, i32 2, !dbg !3760
  store i32 0, i32* %num_levels77, align 8, !dbg !3761
  store i32 -1, i32* %retval, align 4, !dbg !3762
  br label %return, !dbg !3762

return:                                           ; preds = %err, %if.end67
  %99 = load i32, i32* %retval, align 4, !dbg !3763
  ret i32 %99, !dbg !3763
}

; Function Attrs: nounwind uwtable
define internal i32 @webm_dash_manifest_read_header(%struct.AVFormatContext* %s) #0 !dbg !3764 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !3765
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %buf = alloca i8*, align 8
  %ret = alloca i32, align 4
  %init_range = alloca i64, align 8
  %tracks = alloca %struct.MatroskaTrack*, align 8
  %matroska = alloca %struct.MatroskaDemuxContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3769, metadata !2574), !dbg !3770
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3771, metadata !2574), !dbg !3772
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3773, metadata !2574), !dbg !3774
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3775
  %call = call i32 @matroska_read_header(%struct.AVFormatContext* %0), !dbg !3776
  store i32 %call, i32* %ret, align 4, !dbg !3774
  call void @llvm.dbg.declare(metadata i64* %init_range, metadata !3777, metadata !2574), !dbg !3778
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %tracks, metadata !3779, metadata !2574), !dbg !3780
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska, metadata !3781, metadata !2574), !dbg !3782
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3783
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 3, !dbg !3784
  %2 = load i8*, i8** %priv_data, align 8, !dbg !3784
  %3 = bitcast i8* %2 to %struct.MatroskaDemuxContext*, !dbg !3783
  store %struct.MatroskaDemuxContext* %3, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3782
  %4 = load i32, i32* %ret, align 4, !dbg !3785
  %tobool = icmp ne i32 %4, 0, !dbg !3785
  br i1 %tobool, label %if.then, label %if.end, !dbg !3787

if.then:                                          ; preds = %entry
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3788
  %6 = bitcast %struct.AVFormatContext* %5 to i8*, !dbg !3788
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.131, i32 0, i32 0)), !dbg !3790
  store i32 -1, i32* %retval, align 4, !dbg !3791
  br label %return, !dbg !3791

if.end:                                           ; preds = %entry
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3792
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 6, !dbg !3794
  %8 = load i32, i32* %nb_streams, align 4, !dbg !3794
  %tobool1 = icmp ne i32 %8, 0, !dbg !3792
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !3795

if.then2:                                         ; preds = %if.end
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3796
  %call3 = call i32 @matroska_read_close(%struct.AVFormatContext* %9), !dbg !3798
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3799
  %11 = bitcast %struct.AVFormatContext* %10 to i8*, !dbg !3799
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.132, i32 0, i32 0)), !dbg !3800
  store i32 -1094995529, i32* %retval, align 4, !dbg !3801
  br label %return, !dbg !3801

if.end4:                                          ; preds = %if.end
  %12 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3802
  %is_live = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %12, i32 0, i32 30, !dbg !3803
  %13 = load i32, i32* %is_live, align 4, !dbg !3803
  %tobool5 = icmp ne i32 %13, 0, !dbg !3802
  br i1 %tobool5, label %if.end17, label %if.then6, !dbg !3804

if.then6:                                         ; preds = %if.end4
  %14 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3805
  %duration = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %14, i32 0, i32 7, !dbg !3806
  %15 = load double, double* %duration, align 8, !dbg !3806
  %call7 = call i8* (i8*, ...) @av_asprintf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.133, i32 0, i32 0), double %15), !dbg !3807
  store i8* %call7, i8** %buf, align 8, !dbg !3808
  %16 = load i8*, i8** %buf, align 8, !dbg !3809
  %tobool8 = icmp ne i8* %16, null, !dbg !3809
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !3811

if.then9:                                         ; preds = %if.then6
  store i32 -12, i32* %retval, align 4, !dbg !3812
  br label %return, !dbg !3812

if.end10:                                         ; preds = %if.then6
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3814
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %17, i32 0, i32 7, !dbg !3815
  %18 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !3815
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %18, i64 0, !dbg !3814
  %19 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !3814
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i32 0, i32 11, !dbg !3816
  %20 = load i8*, i8** %buf, align 8, !dbg !3817
  %call11 = call i32 @av_dict_set(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.134, i32 0, i32 0), i8* %20, i32 0), !dbg !3818
  %21 = load i8*, i8** %buf, align 8, !dbg !3819
  call void @av_free(i8* %21), !dbg !3820
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3821
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 4, !dbg !3822
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3822
  store %struct.AVIOContext* %23, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3823
  %24 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3824
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %24, i64 0, i32 1) #11, !dbg !3825
  %sub = sub nsw i64 %call.i, 5, !dbg !3826
  store i64 %sub, i64* %init_range, align 8, !dbg !3827
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3828
  %streams13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %25, i32 0, i32 7, !dbg !3829
  %26 = load %struct.AVStream**, %struct.AVStream*** %streams13, align 8, !dbg !3829
  %arrayidx14 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %26, i64 0, !dbg !3828
  %27 = load %struct.AVStream*, %struct.AVStream** %arrayidx14, align 8, !dbg !3828
  %metadata15 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %27, i32 0, i32 11, !dbg !3830
  %28 = load i64, i64* %init_range, align 8, !dbg !3831
  %call16 = call i32 @av_dict_set_int(%struct.AVDictionary** %metadata15, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.135, i32 0, i32 0), i64 %28, i32 0), !dbg !3832
  br label %if.end17, !dbg !3833

if.end17:                                         ; preds = %if.end10, %if.end4
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3834
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %29, i32 0, i32 9, !dbg !3835
  %30 = load i8*, i8** %url, align 8, !dbg !3835
  %call18 = call i8* @strrchr(i8* %30, i32 47) #10, !dbg !3836
  store i8* %call18, i8** %buf, align 8, !dbg !3837
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3838
  %streams19 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %31, i32 0, i32 7, !dbg !3839
  %32 = load %struct.AVStream**, %struct.AVStream*** %streams19, align 8, !dbg !3839
  %arrayidx20 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %32, i64 0, !dbg !3838
  %33 = load %struct.AVStream*, %struct.AVStream** %arrayidx20, align 8, !dbg !3838
  %metadata21 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %33, i32 0, i32 11, !dbg !3840
  %34 = load i8*, i8** %buf, align 8, !dbg !3841
  %tobool22 = icmp ne i8* %34, null, !dbg !3841
  br i1 %tobool22, label %cond.true, label %cond.false, !dbg !3841

cond.true:                                        ; preds = %if.end17
  %35 = load i8*, i8** %buf, align 8, !dbg !3842
  %incdec.ptr = getelementptr inbounds i8, i8* %35, i32 1, !dbg !3842
  store i8* %incdec.ptr, i8** %buf, align 8, !dbg !3842
  br label %cond.end, !dbg !3844

cond.false:                                       ; preds = %if.end17
  %36 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3845
  %url23 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %36, i32 0, i32 9, !dbg !3847
  %37 = load i8*, i8** %url23, align 8, !dbg !3847
  br label %cond.end, !dbg !3848

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %incdec.ptr, %cond.true ], [ %37, %cond.false ], !dbg !3849
  %call24 = call i32 @av_dict_set(%struct.AVDictionary** %metadata21, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.136, i32 0, i32 0), i8* %cond, i32 0), !dbg !3851
  %38 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3852
  %tracks25 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %38, i32 0, i32 11, !dbg !3853
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks25, i32 0, i32 1, !dbg !3854
  %39 = load i8*, i8** %elem, align 8, !dbg !3854
  %40 = bitcast i8* %39 to %struct.MatroskaTrack*, !dbg !3852
  store %struct.MatroskaTrack* %40, %struct.MatroskaTrack** %tracks, align 8, !dbg !3855
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3856
  %streams26 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %41, i32 0, i32 7, !dbg !3857
  %42 = load %struct.AVStream**, %struct.AVStream*** %streams26, align 8, !dbg !3857
  %arrayidx27 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %42, i64 0, !dbg !3856
  %43 = load %struct.AVStream*, %struct.AVStream** %arrayidx27, align 8, !dbg !3856
  %metadata28 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %43, i32 0, i32 11, !dbg !3858
  %44 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !3859
  %arrayidx29 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %44, i64 0, !dbg !3859
  %num = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx29, i32 0, i32 0, !dbg !3860
  %45 = load i64, i64* %num, align 8, !dbg !3860
  %call30 = call i32 @av_dict_set_int(%struct.AVDictionary** %metadata28, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.137, i32 0, i32 0), i64 %45, i32 0), !dbg !3861
  %46 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3862
  %is_live31 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %46, i32 0, i32 30, !dbg !3864
  %47 = load i32, i32* %is_live31, align 4, !dbg !3864
  %tobool32 = icmp ne i32 %47, 0, !dbg !3862
  br i1 %tobool32, label %if.end37, label %if.then33, !dbg !3865

if.then33:                                        ; preds = %cond.end
  %48 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3866
  %49 = load i64, i64* %init_range, align 8, !dbg !3868
  %call34 = call i32 @webm_dash_manifest_cues(%struct.AVFormatContext* %48, i64 %49), !dbg !3869
  store i32 %call34, i32* %ret, align 4, !dbg !3870
  %50 = load i32, i32* %ret, align 4, !dbg !3871
  %cmp = icmp slt i32 %50, 0, !dbg !3873
  br i1 %cmp, label %if.then35, label %if.end36, !dbg !3874

if.then35:                                        ; preds = %if.then33
  %51 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3875
  %52 = bitcast %struct.AVFormatContext* %51 to i8*, !dbg !3875
  call void (i8*, i32, i8*, ...) @av_log(i8* %52, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.138, i32 0, i32 0)), !dbg !3877
  %53 = load i32, i32* %ret, align 4, !dbg !3878
  store i32 %53, i32* %retval, align 4, !dbg !3879
  br label %return, !dbg !3879

if.end36:                                         ; preds = %if.then33
  br label %if.end37, !dbg !3880

if.end37:                                         ; preds = %if.end36, %cond.end
  %54 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3881
  %bandwidth = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %54, i32 0, i32 31, !dbg !3883
  %55 = load i32, i32* %bandwidth, align 8, !dbg !3883
  %cmp38 = icmp sgt i32 %55, 0, !dbg !3884
  br i1 %cmp38, label %if.then39, label %if.end45, !dbg !3885

if.then39:                                        ; preds = %if.end37
  %56 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3886
  %streams40 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %56, i32 0, i32 7, !dbg !3888
  %57 = load %struct.AVStream**, %struct.AVStream*** %streams40, align 8, !dbg !3888
  %arrayidx41 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %57, i64 0, !dbg !3886
  %58 = load %struct.AVStream*, %struct.AVStream** %arrayidx41, align 8, !dbg !3886
  %metadata42 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %58, i32 0, i32 11, !dbg !3889
  %59 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !3890
  %bandwidth43 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %59, i32 0, i32 31, !dbg !3891
  %60 = load i32, i32* %bandwidth43, align 8, !dbg !3891
  %conv = sext i32 %60 to i64, !dbg !3890
  %call44 = call i32 @av_dict_set_int(%struct.AVDictionary** %metadata42, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.139, i32 0, i32 0), i64 %conv, i32 0), !dbg !3892
  br label %if.end45, !dbg !3893

if.end45:                                         ; preds = %if.then39, %if.end37
  store i32 0, i32* %retval, align 4, !dbg !3894
  br label %return, !dbg !3894

return:                                           ; preds = %if.end45, %if.then35, %if.then9, %if.then2, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !3895
  ret i32 %61, !dbg !3895
}

; Function Attrs: nounwind uwtable
define internal i32 @webm_dash_manifest_read_packet(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt) #0 !dbg !3896 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3897, metadata !2574), !dbg !3898
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !3899, metadata !2574), !dbg !3900
  ret i32 -541478725, !dbg !3901
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #2

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define internal i32 @ebml_parse(%struct.MatroskaDemuxContext* %matroska, %struct.EbmlSyntax* %syntax, i8* %data) #0 !dbg !3902 {
entry:
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %syntax.addr = alloca %struct.EbmlSyntax*, align 8
  %data.addr = alloca i8*, align 8
  %id = alloca i64, align 8
  %res = alloca i32, align 4
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !3903, metadata !2574), !dbg !3904
  store %struct.EbmlSyntax* %syntax, %struct.EbmlSyntax** %syntax.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EbmlSyntax** %syntax.addr, metadata !3905, metadata !2574), !dbg !3906
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3907, metadata !2574), !dbg !3908
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !3909
  %current_id = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 5, !dbg !3911
  %1 = load i32, i32* %current_id, align 4, !dbg !3911
  %tobool = icmp ne i32 %1, 0, !dbg !3909
  br i1 %tobool, label %if.end10, label %if.then, !dbg !3912

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %id, metadata !3913, metadata !2574), !dbg !3915
  call void @llvm.dbg.declare(metadata i32* %res, metadata !3916, metadata !2574), !dbg !3917
  %2 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !3918
  %3 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !3919
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %3, i32 0, i32 1, !dbg !3920
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !3920
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 4, !dbg !3921
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3921
  %call = call i32 @ebml_read_num(%struct.MatroskaDemuxContext* %2, %struct.AVIOContext* %5, i32 4, i64* %id), !dbg !3922
  store i32 %call, i32* %res, align 4, !dbg !3917
  %6 = load i32, i32* %res, align 4, !dbg !3923
  %cmp = icmp slt i32 %6, 0, !dbg !3925
  br i1 %cmp, label %if.then1, label %if.end, !dbg !3926

if.then1:                                         ; preds = %if.then
  %7 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !3927
  %is_live = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i32 0, i32 30, !dbg !3929
  %8 = load i32, i32* %is_live, align 4, !dbg !3929
  %tobool2 = icmp ne i32 %8, 0, !dbg !3927
  br i1 %tobool2, label %land.lhs.true, label %cond.false, !dbg !3930

land.lhs.true:                                    ; preds = %if.then1
  %9 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !3931
  %ctx3 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %9, i32 0, i32 1, !dbg !3933
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx3, align 8, !dbg !3933
  %pb4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %10, i32 0, i32 4, !dbg !3934
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb4, align 8, !dbg !3934
  %eof_reached = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %11, i32 0, i32 10, !dbg !3935
  %12 = load i32, i32* %eof_reached, align 8, !dbg !3935
  %tobool5 = icmp ne i32 %12, 0, !dbg !3931
  br i1 %tobool5, label %land.lhs.true6, label %cond.false, !dbg !3936

land.lhs.true6:                                   ; preds = %land.lhs.true
  %13 = load i32, i32* %res, align 4, !dbg !3937
  %cmp7 = icmp eq i32 %13, -541478725, !dbg !3938
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !3939

cond.true:                                        ; preds = %land.lhs.true6
  br label %cond.end, !dbg !3941

cond.false:                                       ; preds = %land.lhs.true6, %land.lhs.true, %if.then1
  %14 = load i32, i32* %res, align 4, !dbg !3943
  br label %cond.end, !dbg !3944

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %14, %cond.false ], !dbg !3946
  store i32 %cond, i32* %retval, align 4, !dbg !3948
  br label %return, !dbg !3948

if.end:                                           ; preds = %if.then
  %15 = load i64, i64* %id, align 8, !dbg !3949
  %16 = load i32, i32* %res, align 4, !dbg !3950
  %mul = mul nsw i32 7, %16, !dbg !3951
  %shl = shl i32 1, %mul, !dbg !3952
  %conv = sext i32 %shl to i64, !dbg !3953
  %or = or i64 %15, %conv, !dbg !3954
  %conv8 = trunc i64 %or to i32, !dbg !3949
  %17 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !3955
  %current_id9 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %17, i32 0, i32 5, !dbg !3956
  store i32 %conv8, i32* %current_id9, align 4, !dbg !3957
  br label %if.end10, !dbg !3958

if.end10:                                         ; preds = %if.end, %entry
  %18 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !3959
  %19 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !3960
  %20 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !3961
  %current_id11 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %20, i32 0, i32 5, !dbg !3962
  %21 = load i32, i32* %current_id11, align 4, !dbg !3962
  %22 = load i8*, i8** %data.addr, align 8, !dbg !3963
  %call12 = call i32 @ebml_parse_id(%struct.MatroskaDemuxContext* %18, %struct.EbmlSyntax* %19, i32 %21, i8* %22), !dbg !3964
  store i32 %call12, i32* %retval, align 4, !dbg !3965
  br label %return, !dbg !3965

return:                                           ; preds = %if.end10, %cond.end
  %23 = load i32, i32* %retval, align 4, !dbg !3966
  ret i32 %23, !dbg !3966
}

declare void @av_log(i8*, i32, i8*, ...) #4

; Function Attrs: nounwind uwtable
define internal void @ebml_free(%struct.EbmlSyntax* %syntax, i8* %data) #0 !dbg !3967 {
entry:
  %syntax.addr = alloca %struct.EbmlSyntax*, align 8
  %data.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %data_off = alloca i8*, align 8
  %list = alloca %struct.EbmlList*, align 8
  %ptr = alloca i8*, align 8
  store %struct.EbmlSyntax* %syntax, %struct.EbmlSyntax** %syntax.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EbmlSyntax** %syntax.addr, metadata !3970, metadata !2574), !dbg !3971
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3972, metadata !2574), !dbg !3973
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3974, metadata !2574), !dbg !3975
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3976, metadata !2574), !dbg !3977
  store i32 0, i32* %i, align 4, !dbg !3978
  br label %for.cond, !dbg !3980

for.cond:                                         ; preds = %for.inc25, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3981
  %idxprom = sext i32 %0 to i64, !dbg !3984
  %1 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !3984
  %arrayidx = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %1, i64 %idxprom, !dbg !3984
  %id = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx, i32 0, i32 0, !dbg !3985
  %2 = load i32, i32* %id, align 8, !dbg !3985
  %tobool = icmp ne i32 %2, 0, !dbg !3986
  br i1 %tobool, label %for.body, label %for.end27, !dbg !3986

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %data_off, metadata !3987, metadata !2574), !dbg !3989
  %3 = load i8*, i8** %data.addr, align 8, !dbg !3990
  %4 = load i32, i32* %i, align 4, !dbg !3991
  %idxprom1 = sext i32 %4 to i64, !dbg !3992
  %5 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !3992
  %arrayidx2 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %5, i64 %idxprom1, !dbg !3992
  %data_offset = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx2, i32 0, i32 3, !dbg !3993
  %6 = load i32, i32* %data_offset, align 4, !dbg !3993
  %idx.ext = sext i32 %6 to i64, !dbg !3994
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !3994
  store i8* %add.ptr, i8** %data_off, align 8, !dbg !3989
  %7 = load i32, i32* %i, align 4, !dbg !3995
  %idxprom3 = sext i32 %7 to i64, !dbg !3996
  %8 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !3996
  %arrayidx4 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %8, i64 %idxprom3, !dbg !3996
  %type = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx4, i32 0, i32 1, !dbg !3997
  %9 = load i32, i32* %type, align 4, !dbg !3997
  switch i32 %9, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb5
    i32 7, label %sw.bb6
    i32 6, label %sw.bb6
  ], !dbg !3998

sw.bb:                                            ; preds = %for.body, %for.body
  %10 = load i8*, i8** %data_off, align 8, !dbg !3999
  call void @av_freep(i8* %10), !dbg !4001
  br label %sw.epilog, !dbg !4002

sw.bb5:                                           ; preds = %for.body
  %11 = load i8*, i8** %data_off, align 8, !dbg !4003
  %12 = bitcast i8* %11 to %struct.EbmlBin*, !dbg !4004
  %buf = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %12, i32 0, i32 1, !dbg !4005
  call void @av_buffer_unref(%struct.AVBufferRef** %buf), !dbg !4006
  br label %sw.epilog, !dbg !4007

sw.bb6:                                           ; preds = %for.body, %for.body
  %13 = load i32, i32* %i, align 4, !dbg !4008
  %idxprom7 = sext i32 %13 to i64, !dbg !4010
  %14 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !4010
  %arrayidx8 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %14, i64 %idxprom7, !dbg !4010
  %list_elem_size = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx8, i32 0, i32 2, !dbg !4011
  %15 = load i32, i32* %list_elem_size, align 8, !dbg !4011
  %tobool9 = icmp ne i32 %15, 0, !dbg !4010
  br i1 %tobool9, label %if.then, label %if.else, !dbg !4012

if.then:                                          ; preds = %sw.bb6
  call void @llvm.dbg.declare(metadata %struct.EbmlList** %list, metadata !4013, metadata !2574), !dbg !4015
  %16 = load i8*, i8** %data_off, align 8, !dbg !4016
  %17 = bitcast i8* %16 to %struct.EbmlList*, !dbg !4016
  store %struct.EbmlList* %17, %struct.EbmlList** %list, align 8, !dbg !4015
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !4017, metadata !2574), !dbg !4018
  %18 = load %struct.EbmlList*, %struct.EbmlList** %list, align 8, !dbg !4019
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %18, i32 0, i32 1, !dbg !4020
  %19 = load i8*, i8** %elem, align 8, !dbg !4020
  store i8* %19, i8** %ptr, align 8, !dbg !4018
  store i32 0, i32* %j, align 4, !dbg !4021
  br label %for.cond10, !dbg !4023

for.cond10:                                       ; preds = %for.inc, %if.then
  %20 = load i32, i32* %j, align 4, !dbg !4024
  %21 = load %struct.EbmlList*, %struct.EbmlList** %list, align 8, !dbg !4027
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %21, i32 0, i32 0, !dbg !4028
  %22 = load i32, i32* %nb_elem, align 8, !dbg !4028
  %cmp = icmp slt i32 %20, %22, !dbg !4029
  br i1 %cmp, label %for.body11, label %for.end, !dbg !4030

for.body11:                                       ; preds = %for.cond10
  %23 = load i32, i32* %i, align 4, !dbg !4031
  %idxprom12 = sext i32 %23 to i64, !dbg !4032
  %24 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !4032
  %arrayidx13 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %24, i64 %idxprom12, !dbg !4032
  %def = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx13, i32 0, i32 4, !dbg !4033
  %n = bitcast %union.anon.1* %def to %struct.EbmlSyntax**, !dbg !4034
  %25 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %n, align 8, !dbg !4034
  %26 = load i8*, i8** %ptr, align 8, !dbg !4035
  call void @ebml_free(%struct.EbmlSyntax* %25, i8* %26), !dbg !4036
  br label %for.inc, !dbg !4036

for.inc:                                          ; preds = %for.body11
  %27 = load i32, i32* %j, align 4, !dbg !4037
  %inc = add nsw i32 %27, 1, !dbg !4037
  store i32 %inc, i32* %j, align 4, !dbg !4037
  %28 = load i32, i32* %i, align 4, !dbg !4038
  %idxprom14 = sext i32 %28 to i64, !dbg !4039
  %29 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !4039
  %arrayidx15 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %29, i64 %idxprom14, !dbg !4039
  %list_elem_size16 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx15, i32 0, i32 2, !dbg !4040
  %30 = load i32, i32* %list_elem_size16, align 8, !dbg !4040
  %31 = load i8*, i8** %ptr, align 8, !dbg !4041
  %idx.ext17 = sext i32 %30 to i64, !dbg !4041
  %add.ptr18 = getelementptr inbounds i8, i8* %31, i64 %idx.ext17, !dbg !4041
  store i8* %add.ptr18, i8** %ptr, align 8, !dbg !4041
  br label %for.cond10, !dbg !4042, !llvm.loop !4044

for.end:                                          ; preds = %for.cond10
  %32 = load %struct.EbmlList*, %struct.EbmlList** %list, align 8, !dbg !4046
  %elem19 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %32, i32 0, i32 1, !dbg !4047
  %33 = bitcast i8** %elem19 to i8*, !dbg !4048
  call void @av_freep(i8* %33), !dbg !4049
  %34 = load %struct.EbmlList*, %struct.EbmlList** %list, align 8, !dbg !4050
  %nb_elem20 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %34, i32 0, i32 0, !dbg !4051
  store i32 0, i32* %nb_elem20, align 8, !dbg !4052
  br label %if.end, !dbg !4053

if.else:                                          ; preds = %sw.bb6
  %35 = load i32, i32* %i, align 4, !dbg !4054
  %idxprom21 = sext i32 %35 to i64, !dbg !4055
  %36 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !4055
  %arrayidx22 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %36, i64 %idxprom21, !dbg !4055
  %def23 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx22, i32 0, i32 4, !dbg !4056
  %n24 = bitcast %union.anon.1* %def23 to %struct.EbmlSyntax**, !dbg !4057
  %37 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %n24, align 8, !dbg !4057
  %38 = load i8*, i8** %data_off, align 8, !dbg !4058
  call void @ebml_free(%struct.EbmlSyntax* %37, i8* %38), !dbg !4059
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  br label %sw.default, !dbg !4060

sw.default:                                       ; preds = %for.body, %if.end
  br label %sw.epilog, !dbg !4062

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb
  br label %for.inc25, !dbg !4063

for.inc25:                                        ; preds = %sw.epilog
  %39 = load i32, i32* %i, align 4, !dbg !4064
  %inc26 = add nsw i32 %39, 1, !dbg !4064
  store i32 %inc26, i32* %i, align 4, !dbg !4064
  br label %for.cond, !dbg !4066, !llvm.loop !4067

for.end27:                                        ; preds = %for.cond
  ret void, !dbg !4069
}

declare void @avpriv_report_missing_feature(i8*, i8*, ...) #4

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @matroska_resync(%struct.MatroskaDemuxContext* %matroska, i64 %last_pos) #0 !dbg !4070 {
entry:
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %last_pos.addr = alloca i64, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %ret = alloca i64, align 8
  %id = alloca i32, align 4
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !4073, metadata !2574), !dbg !4074
  store i64 %last_pos, i64* %last_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %last_pos.addr, metadata !4075, metadata !2574), !dbg !4076
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !4077, metadata !2574), !dbg !4078
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !4079
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 1, !dbg !4080
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !4080
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 4, !dbg !4081
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !4081
  store %struct.AVIOContext* %2, %struct.AVIOContext** %pb, align 8, !dbg !4078
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !4082, metadata !2574), !dbg !4083
  call void @llvm.dbg.declare(metadata i32* %id, metadata !4084, metadata !2574), !dbg !4085
  %3 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !4086
  %current_id = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %3, i32 0, i32 5, !dbg !4087
  store i32 0, i32* %current_id, align 4, !dbg !4088
  %4 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !4089
  %num_levels = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %4, i32 0, i32 2, !dbg !4090
  store i32 0, i32* %num_levels, align 8, !dbg !4091
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4092
  %6 = load i64, i64* %last_pos.addr, align 8, !dbg !4094
  %add = add nsw i64 %6, 1, !dbg !4095
  %call = call i64 @avio_seek(%struct.AVIOContext* %5, i64 %add, i32 0), !dbg !4096
  store i64 %call, i64* %ret, align 8, !dbg !4097
  %cmp = icmp slt i64 %call, 0, !dbg !4098
  br i1 %cmp, label %if.then, label %if.end, !dbg !4099

if.then:                                          ; preds = %entry
  %7 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !4100
  %done = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i32 0, i32 20, !dbg !4102
  store i32 1, i32* %done, align 8, !dbg !4103
  %8 = load i64, i64* %ret, align 8, !dbg !4104
  %conv = trunc i64 %8 to i32, !dbg !4104
  store i32 %conv, i32* %retval, align 4, !dbg !4105
  br label %return, !dbg !4105

if.end:                                           ; preds = %entry
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4106
  %call2 = call i32 @avio_rb32(%struct.AVIOContext* %9), !dbg !4107
  store i32 %call2, i32* %id, align 4, !dbg !4108
  br label %while.cond, !dbg !4109

while.cond:                                       ; preds = %if.end28, %if.end
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4110
  %call3 = call i32 @avio_feof(%struct.AVIOContext* %10), !dbg !4112
  %tobool = icmp ne i32 %call3, 0, !dbg !4113
  %lnot = xor i1 %tobool, true, !dbg !4113
  br i1 %lnot, label %while.body, label %while.end, !dbg !4114

while.body:                                       ; preds = %while.cond
  %11 = load i32, i32* %id, align 4, !dbg !4115
  %cmp4 = icmp eq i32 %11, 357149030, !dbg !4118
  br i1 %cmp4, label %if.then26, label %lor.lhs.false, !dbg !4119

lor.lhs.false:                                    ; preds = %while.body
  %12 = load i32, i32* %id, align 4, !dbg !4120
  %cmp6 = icmp eq i32 %12, 374648427, !dbg !4122
  br i1 %cmp6, label %if.then26, label %lor.lhs.false8, !dbg !4123

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %13 = load i32, i32* %id, align 4, !dbg !4124
  %cmp9 = icmp eq i32 %13, 475249515, !dbg !4125
  br i1 %cmp9, label %if.then26, label %lor.lhs.false11, !dbg !4126

lor.lhs.false11:                                  ; preds = %lor.lhs.false8
  %14 = load i32, i32* %id, align 4, !dbg !4127
  %cmp12 = icmp eq i32 %14, 307544935, !dbg !4128
  br i1 %cmp12, label %if.then26, label %lor.lhs.false14, !dbg !4129

lor.lhs.false14:                                  ; preds = %lor.lhs.false11
  %15 = load i32, i32* %id, align 4, !dbg !4130
  %cmp15 = icmp eq i32 %15, 290298740, !dbg !4131
  br i1 %cmp15, label %if.then26, label %lor.lhs.false17, !dbg !4132

lor.lhs.false17:                                  ; preds = %lor.lhs.false14
  %16 = load i32, i32* %id, align 4, !dbg !4133
  %cmp18 = icmp eq i32 %16, 423732329, !dbg !4134
  br i1 %cmp18, label %if.then26, label %lor.lhs.false20, !dbg !4135

lor.lhs.false20:                                  ; preds = %lor.lhs.false17
  %17 = load i32, i32* %id, align 4, !dbg !4136
  %cmp21 = icmp eq i32 %17, 524531317, !dbg !4137
  br i1 %cmp21, label %if.then26, label %lor.lhs.false23, !dbg !4138

lor.lhs.false23:                                  ; preds = %lor.lhs.false20
  %18 = load i32, i32* %id, align 4, !dbg !4139
  %cmp24 = icmp eq i32 %18, 272869232, !dbg !4140
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !4141

if.then26:                                        ; preds = %lor.lhs.false23, %lor.lhs.false20, %lor.lhs.false17, %lor.lhs.false14, %lor.lhs.false11, %lor.lhs.false8, %lor.lhs.false, %while.body
  %19 = load i32, i32* %id, align 4, !dbg !4143
  %20 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !4145
  %current_id27 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %20, i32 0, i32 5, !dbg !4146
  store i32 %19, i32* %current_id27, align 4, !dbg !4147
  store i32 0, i32* %retval, align 4, !dbg !4148
  br label %return, !dbg !4148

if.end28:                                         ; preds = %lor.lhs.false23
  %21 = load i32, i32* %id, align 4, !dbg !4149
  %shl = shl i32 %21, 8, !dbg !4150
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4151
  %call29 = call i32 @avio_r8(%struct.AVIOContext* %22), !dbg !4152
  %or = or i32 %shl, %call29, !dbg !4153
  store i32 %or, i32* %id, align 4, !dbg !4154
  br label %while.cond, !dbg !4155, !llvm.loop !4157

while.end:                                        ; preds = %while.cond
  %23 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !4158
  %done30 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %23, i32 0, i32 20, !dbg !4159
  store i32 1, i32* %done30, align 8, !dbg !4160
  store i32 -541478725, i32* %retval, align 4, !dbg !4161
  br label %return, !dbg !4161

return:                                           ; preds = %while.end, %if.then26, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !4162
  ret i32 %24, !dbg !4162
}

; Function Attrs: nounwind uwtable
define internal void @matroska_execute_seekhead(%struct.MatroskaDemuxContext* %matroska) #0 !dbg !4163 {
entry:
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %seekhead_list = alloca %struct.EbmlList*, align 8
  %i = alloca i32, align 4
  %seekheads = alloca %struct.MatroskaSeekhead*, align 8
  %id = alloca i32, align 4
  %pos = alloca i64, align 8
  %elem5 = alloca %struct.MatroskaLevel1Element*, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !4166, metadata !2574), !dbg !4167
  call void @llvm.dbg.declare(metadata %struct.EbmlList** %seekhead_list, metadata !4168, metadata !2574), !dbg !4169
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !4170
  %seekhead = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 16, !dbg !4171
  store %struct.EbmlList* %seekhead, %struct.EbmlList** %seekhead_list, align 8, !dbg !4169
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4172, metadata !2574), !dbg !4173
  %1 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !4174
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %1, i32 0, i32 1, !dbg !4176
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !4176
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 4, !dbg !4177
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4177
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %3, i32 0, i32 19, !dbg !4178
  %4 = load i32, i32* %seekable, align 8, !dbg !4178
  %and = and i32 %4, 1, !dbg !4179
  %tobool = icmp ne i32 %and, 0, !dbg !4179
  br i1 %tobool, label %if.end, label %if.then, !dbg !4180

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !4181

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !4182
  br label %for.cond, !dbg !4184

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !4185
  %6 = load %struct.EbmlList*, %struct.EbmlList** %seekhead_list, align 8, !dbg !4188
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %6, i32 0, i32 0, !dbg !4189
  %7 = load i32, i32* %nb_elem, align 8, !dbg !4189
  %cmp = icmp slt i32 %5, %7, !dbg !4190
  br i1 %cmp, label %for.body, label %for.end, !dbg !4191

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MatroskaSeekhead** %seekheads, metadata !4192, metadata !2574), !dbg !4200
  %8 = load %struct.EbmlList*, %struct.EbmlList** %seekhead_list, align 8, !dbg !4201
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %8, i32 0, i32 1, !dbg !4202
  %9 = load i8*, i8** %elem, align 8, !dbg !4202
  %10 = bitcast i8* %9 to %struct.MatroskaSeekhead*, !dbg !4201
  store %struct.MatroskaSeekhead* %10, %struct.MatroskaSeekhead** %seekheads, align 8, !dbg !4200
  call void @llvm.dbg.declare(metadata i32* %id, metadata !4203, metadata !2574), !dbg !4204
  %11 = load i32, i32* %i, align 4, !dbg !4205
  %idxprom = sext i32 %11 to i64, !dbg !4206
  %12 = load %struct.MatroskaSeekhead*, %struct.MatroskaSeekhead** %seekheads, align 8, !dbg !4206
  %arrayidx = getelementptr inbounds %struct.MatroskaSeekhead, %struct.MatroskaSeekhead* %12, i64 %idxprom, !dbg !4206
  %id1 = getelementptr inbounds %struct.MatroskaSeekhead, %struct.MatroskaSeekhead* %arrayidx, i32 0, i32 0, !dbg !4207
  %13 = load i64, i64* %id1, align 8, !dbg !4207
  %conv = trunc i64 %13 to i32, !dbg !4206
  store i32 %conv, i32* %id, align 4, !dbg !4204
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !4208, metadata !2574), !dbg !4209
  %14 = load i32, i32* %i, align 4, !dbg !4210
  %idxprom2 = sext i32 %14 to i64, !dbg !4211
  %15 = load %struct.MatroskaSeekhead*, %struct.MatroskaSeekhead** %seekheads, align 8, !dbg !4211
  %arrayidx3 = getelementptr inbounds %struct.MatroskaSeekhead, %struct.MatroskaSeekhead* %15, i64 %idxprom2, !dbg !4211
  %pos4 = getelementptr inbounds %struct.MatroskaSeekhead, %struct.MatroskaSeekhead* %arrayidx3, i32 0, i32 1, !dbg !4212
  %16 = load i64, i64* %pos4, align 8, !dbg !4212
  store i64 %16, i64* %pos, align 8, !dbg !4209
  call void @llvm.dbg.declare(metadata %struct.MatroskaLevel1Element** %elem5, metadata !4213, metadata !2574), !dbg !4215
  %17 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !4216
  %18 = load i32, i32* %id, align 4, !dbg !4217
  %call = call %struct.MatroskaLevel1Element* @matroska_find_level1_elem(%struct.MatroskaDemuxContext* %17, i32 %18), !dbg !4218
  store %struct.MatroskaLevel1Element* %call, %struct.MatroskaLevel1Element** %elem5, align 8, !dbg !4215
  %19 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %elem5, align 8, !dbg !4219
  %tobool6 = icmp ne %struct.MatroskaLevel1Element* %19, null, !dbg !4219
  br i1 %tobool6, label %lor.lhs.false, label %if.then8, !dbg !4221

lor.lhs.false:                                    ; preds = %for.body
  %20 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %elem5, align 8, !dbg !4222
  %parsed = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %20, i32 0, i32 2, !dbg !4224
  %21 = load i32, i32* %parsed, align 8, !dbg !4224
  %tobool7 = icmp ne i32 %21, 0, !dbg !4222
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !4225

if.then8:                                         ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !4226

if.end9:                                          ; preds = %lor.lhs.false
  %22 = load i64, i64* %pos, align 8, !dbg !4227
  %23 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %elem5, align 8, !dbg !4228
  %pos10 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %23, i32 0, i32 1, !dbg !4229
  store i64 %22, i64* %pos10, align 8, !dbg !4230
  %24 = load i32, i32* %id, align 4, !dbg !4231
  %cmp11 = icmp eq i32 %24, 475249515, !dbg !4233
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !4234

if.then13:                                        ; preds = %if.end9
  br label %for.inc, !dbg !4235

if.end14:                                         ; preds = %if.end9
  %25 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !4236
  %26 = load i64, i64* %pos, align 8, !dbg !4238
  %call15 = call i32 @matroska_parse_seekhead_entry(%struct.MatroskaDemuxContext* %25, i64 %26), !dbg !4239
  %cmp16 = icmp slt i32 %call15, 0, !dbg !4240
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !4241

if.then18:                                        ; preds = %if.end14
  %27 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !4242
  %cues_parsing_deferred = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %27, i32 0, i32 23, !dbg !4244
  store i32 -1, i32* %cues_parsing_deferred, align 8, !dbg !4245
  br label %for.end, !dbg !4246

if.end19:                                         ; preds = %if.end14
  %28 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %elem5, align 8, !dbg !4247
  %parsed20 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %28, i32 0, i32 2, !dbg !4248
  store i32 1, i32* %parsed20, align 8, !dbg !4249
  br label %for.inc, !dbg !4250

for.inc:                                          ; preds = %if.end19, %if.then13, %if.then8
  %29 = load i32, i32* %i, align 4, !dbg !4251
  %inc = add nsw i32 %29, 1, !dbg !4251
  store i32 %inc, i32* %i, align 4, !dbg !4251
  br label %for.cond, !dbg !4253, !llvm.loop !4254

for.end:                                          ; preds = %if.then, %if.then18, %for.cond
  ret void, !dbg !4256
}

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) #4

; Function Attrs: nounwind uwtable
define internal void @matroska_metadata_creation_time(%struct.AVDictionary** %metadata, i64 %date_utc) #0 !dbg !4257 {
entry:
  %metadata.addr = alloca %struct.AVDictionary**, align 8
  %date_utc.addr = alloca i64, align 8
  store %struct.AVDictionary** %metadata, %struct.AVDictionary*** %metadata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %metadata.addr, metadata !4260, metadata !2574), !dbg !4261
  store i64 %date_utc, i64* %date_utc.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %date_utc.addr, metadata !4262, metadata !2574), !dbg !4263
  %0 = load %struct.AVDictionary**, %struct.AVDictionary*** %metadata.addr, align 8, !dbg !4264
  %1 = load i64, i64* %date_utc.addr, align 8, !dbg !4265
  %div = sdiv i64 %1, 1000, !dbg !4266
  %add = add nsw i64 %div, 978307200000000, !dbg !4267
  %call = call i32 @avpriv_dict_set_timestamp(%struct.AVDictionary** %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), i64 %add), !dbg !4268
  ret void, !dbg !4269
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_bswap64(i64 %x) #5 !dbg !4270 {
entry:
  %x.addr.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i5, metadata !2569, metadata !2574), !dbg !4273
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2569, metadata !2574), !dbg !4276
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !4278, metadata !2574), !dbg !4279
  %0 = load i64, i64* %x.addr, align 8, !dbg !4280
  %conv = trunc i64 %0 to i32, !dbg !4280
  store i32 %conv, i32* %x.addr.i, align 4, !dbg !4281
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !4282
  %shl.i = shl i32 %1, 8, !dbg !4283
  %and.i = and i32 %shl.i, 65280, !dbg !4284
  %2 = load i32, i32* %x.addr.i, align 4, !dbg !4285
  %shr.i = lshr i32 %2, 8, !dbg !4286
  %and1.i = and i32 %shr.i, 255, !dbg !4287
  %or.i = or i32 %and.i, %and1.i, !dbg !4288
  %shl2.i = shl i32 %or.i, 16, !dbg !4289
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !4290
  %shr3.i = lshr i32 %3, 16, !dbg !4291
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4292
  %and5.i = and i32 %shl4.i, 65280, !dbg !4293
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !4294
  %shr6.i = lshr i32 %4, 16, !dbg !4295
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4296
  %and8.i = and i32 %shr7.i, 255, !dbg !4297
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4298
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4299
  %conv1 = zext i32 %or10.i to i64, !dbg !4300
  %shl = shl i64 %conv1, 32, !dbg !4301
  %5 = load i64, i64* %x.addr, align 8, !dbg !4302
  %shr = lshr i64 %5, 32, !dbg !4303
  %conv2 = trunc i64 %shr to i32, !dbg !4302
  store i32 %conv2, i32* %x.addr.i5, align 4, !dbg !4304
  %6 = load i32, i32* %x.addr.i5, align 4, !dbg !4305
  %shl.i6 = shl i32 %6, 8, !dbg !4306
  %and.i7 = and i32 %shl.i6, 65280, !dbg !4307
  %7 = load i32, i32* %x.addr.i5, align 4, !dbg !4308
  %shr.i8 = lshr i32 %7, 8, !dbg !4309
  %and1.i9 = and i32 %shr.i8, 255, !dbg !4310
  %or.i10 = or i32 %and.i7, %and1.i9, !dbg !4311
  %shl2.i11 = shl i32 %or.i10, 16, !dbg !4312
  %8 = load i32, i32* %x.addr.i5, align 4, !dbg !4313
  %shr3.i12 = lshr i32 %8, 16, !dbg !4314
  %shl4.i13 = shl i32 %shr3.i12, 8, !dbg !4315
  %and5.i14 = and i32 %shl4.i13, 65280, !dbg !4316
  %9 = load i32, i32* %x.addr.i5, align 4, !dbg !4317
  %shr6.i15 = lshr i32 %9, 16, !dbg !4318
  %shr7.i16 = lshr i32 %shr6.i15, 8, !dbg !4319
  %and8.i17 = and i32 %shr7.i16, 255, !dbg !4320
  %or9.i18 = or i32 %and5.i14, %and8.i17, !dbg !4321
  %or10.i19 = or i32 %shl2.i11, %or9.i18, !dbg !4322
  %conv4 = zext i32 %or10.i19 to i64, !dbg !4323
  %or = or i64 %shl, %conv4, !dbg !4324
  ret i64 %or, !dbg !4325
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_parse_tracks(%struct.AVFormatContext* %s) #0 !dbg !2543 {
entry:
  %x.addr.i1226 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i1226, metadata !2569, metadata !2574), !dbg !4326
  %x.addr.i1222 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i1222, metadata !2569, metadata !2574), !dbg !4341
  %x.addr.i1215 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i1215, metadata !4343, metadata !2574), !dbg !4347
  %x.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i, metadata !4343, metadata !2574), !dbg !4352
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %matroska = alloca %struct.MatroskaDemuxContext*, align 8
  %tracks = alloca %struct.MatroskaTrack*, align 8
  %st = alloca %struct.AVStream*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ret = alloca i32, align 4
  %k = alloca i32, align 4
  %track = alloca %struct.MatroskaTrack*, align 8
  %codec_id = alloca i32, align 4
  %encodings_list = alloca %struct.EbmlList*, align 8
  %encodings3 = alloca %struct.MatroskaTrackEncoding*, align 8
  %extradata = alloca i8*, align 8
  %extradata_size = alloca i32, align 4
  %extradata_offset = alloca i32, align 4
  %fourcc = alloca i32, align 4
  %b = alloca %struct.AVIOContext, align 8
  %key_id_base64 = alloca i8*, align 8
  %bit_depth = alloca i32, align 4
  %default_duration40 = alloca double, align 8
  %b64_size = alloca i32, align 4
  %codec_priv162 = alloca i8*, align 8
  %ret165 = alloca i32, align 4
  %ret283 = alloca i32, align 4
  %sample_size = alloca i16, align 2
  %ret319 = alloca i32, align 4
  %ret372 = alloca i32, align 4
  %.compoundliteral = alloca [32 x i8], align 1
  %profile = alloca i32, align 4
  %sri = alloca i32, align 4
  %flavor = alloca i32, align 4
  %.compoundliteral789 = alloca %struct.AVRational, align 4
  %planes = alloca %struct.MatroskaTrackPlane*, align 8
  %display_width_mul = alloca i32, align 4
  %display_height_mul = alloca i32, align 4
  %buf990 = alloca [32 x i8], align 16
  %ret1051 = alloca i32, align 4
  %.compoundliteral1129 = alloca %struct.AVRational, align 4
  %.compoundliteral1132 = alloca %struct.AVRational, align 4
  %.compoundliteral1153 = alloca %struct.AVRational, align 4
  %.compoundliteral1156 = alloca %struct.AVRational, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4355, metadata !2574), !dbg !4356
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska, metadata !4357, metadata !2574), !dbg !4358
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4359
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !4360
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4360
  %2 = bitcast i8* %1 to %struct.MatroskaDemuxContext*, !dbg !4359
  store %struct.MatroskaDemuxContext* %2, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !4358
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %tracks, metadata !4361, metadata !2574), !dbg !4362
  %3 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !4363
  %tracks1 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %3, i32 0, i32 11, !dbg !4364
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks1, i32 0, i32 1, !dbg !4365
  %4 = load i8*, i8** %elem, align 8, !dbg !4365
  %5 = bitcast i8* %4 to %struct.MatroskaTrack*, !dbg !4363
  store %struct.MatroskaTrack* %5, %struct.MatroskaTrack** %tracks, align 8, !dbg !4362
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !4366, metadata !2574), !dbg !4367
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4368, metadata !2574), !dbg !4369
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4370, metadata !2574), !dbg !4371
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4372, metadata !2574), !dbg !4373
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4374, metadata !2574), !dbg !4375
  store i32 0, i32* %i, align 4, !dbg !4376
  br label %for.cond, !dbg !4377

for.cond:                                         ; preds = %for.inc1212, %entry
  %6 = load i32, i32* %i, align 4, !dbg !4378
  %7 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !4380
  %tracks2 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i32 0, i32 11, !dbg !4381
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks2, i32 0, i32 0, !dbg !4382
  %8 = load i32, i32* %nb_elem, align 8, !dbg !4382
  %cmp = icmp slt i32 %6, %8, !dbg !4383
  br i1 %cmp, label %for.body, label %for.end1214, !dbg !4384

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track, metadata !4385, metadata !2574), !dbg !4386
  %9 = load i32, i32* %i, align 4, !dbg !4387
  %idxprom = sext i32 %9 to i64, !dbg !4388
  %10 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !4388
  %arrayidx = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %10, i64 %idxprom, !dbg !4388
  store %struct.MatroskaTrack* %arrayidx, %struct.MatroskaTrack** %track, align 8, !dbg !4386
  call void @llvm.dbg.declare(metadata i32* %codec_id, metadata !4389, metadata !2574), !dbg !4390
  store i32 0, i32* %codec_id, align 4, !dbg !4390
  call void @llvm.dbg.declare(metadata %struct.EbmlList** %encodings_list, metadata !4391, metadata !2574), !dbg !4392
  %11 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4393
  %encodings = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %11, i32 0, i32 15, !dbg !4394
  store %struct.EbmlList* %encodings, %struct.EbmlList** %encodings_list, align 8, !dbg !4392
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrackEncoding** %encodings3, metadata !4395, metadata !2574), !dbg !4414
  %12 = load %struct.EbmlList*, %struct.EbmlList** %encodings_list, align 8, !dbg !4415
  %elem4 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %12, i32 0, i32 1, !dbg !4416
  %13 = load i8*, i8** %elem4, align 8, !dbg !4416
  %14 = bitcast i8* %13 to %struct.MatroskaTrackEncoding*, !dbg !4415
  store %struct.MatroskaTrackEncoding* %14, %struct.MatroskaTrackEncoding** %encodings3, align 8, !dbg !4414
  call void @llvm.dbg.declare(metadata i8** %extradata, metadata !4417, metadata !2574), !dbg !4418
  store i8* null, i8** %extradata, align 8, !dbg !4418
  call void @llvm.dbg.declare(metadata i32* %extradata_size, metadata !4419, metadata !2574), !dbg !4420
  store i32 0, i32* %extradata_size, align 4, !dbg !4420
  call void @llvm.dbg.declare(metadata i32* %extradata_offset, metadata !4421, metadata !2574), !dbg !4422
  store i32 0, i32* %extradata_offset, align 4, !dbg !4422
  call void @llvm.dbg.declare(metadata i32* %fourcc, metadata !4423, metadata !2574), !dbg !4424
  store i32 0, i32* %fourcc, align 4, !dbg !4424
  call void @llvm.dbg.declare(metadata %struct.AVIOContext* %b, metadata !4425, metadata !2574), !dbg !4426
  call void @llvm.dbg.declare(metadata i8** %key_id_base64, metadata !4427, metadata !2574), !dbg !4428
  store i8* null, i8** %key_id_base64, align 8, !dbg !4428
  call void @llvm.dbg.declare(metadata i32* %bit_depth, metadata !4429, metadata !2574), !dbg !4430
  store i32 -1, i32* %bit_depth, align 4, !dbg !4430
  %15 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4431
  %type = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %15, i32 0, i32 2, !dbg !4433
  %16 = load i64, i64* %type, align 8, !dbg !4433
  %cmp5 = icmp ne i64 %16, 1, !dbg !4434
  br i1 %cmp5, label %land.lhs.true, label %if.end, !dbg !4435

land.lhs.true:                                    ; preds = %for.body
  %17 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4436
  %type6 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %17, i32 0, i32 2, !dbg !4437
  %18 = load i64, i64* %type6, align 8, !dbg !4437
  %cmp7 = icmp ne i64 %18, 2, !dbg !4438
  br i1 %cmp7, label %land.lhs.true8, label %if.end, !dbg !4439

land.lhs.true8:                                   ; preds = %land.lhs.true
  %19 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4440
  %type9 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %19, i32 0, i32 2, !dbg !4441
  %20 = load i64, i64* %type9, align 8, !dbg !4441
  %cmp10 = icmp ne i64 %20, 17, !dbg !4442
  br i1 %cmp10, label %land.lhs.true11, label %if.end, !dbg !4443

land.lhs.true11:                                  ; preds = %land.lhs.true8
  %21 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4444
  %type12 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %21, i32 0, i32 2, !dbg !4445
  %22 = load i64, i64* %type12, align 8, !dbg !4445
  %cmp13 = icmp ne i64 %22, 33, !dbg !4446
  br i1 %cmp13, label %if.then, label %if.end, !dbg !4447

if.then:                                          ; preds = %land.lhs.true11
  %23 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !4449
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %23, i32 0, i32 1, !dbg !4451
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !4451
  %25 = bitcast %struct.AVFormatContext* %24 to i8*, !dbg !4449
  %26 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4452
  %type14 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %26, i32 0, i32 2, !dbg !4453
  %27 = load i64, i64* %type14, align 8, !dbg !4453
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 32, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.57, i32 0, i32 0), i64 %27), !dbg !4454
  br label %for.inc1212, !dbg !4455

if.end:                                           ; preds = %land.lhs.true11, %land.lhs.true8, %land.lhs.true, %for.body
  %28 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4456
  %codec_id15 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %28, i32 0, i32 4, !dbg !4458
  %29 = load i8*, i8** %codec_id15, align 8, !dbg !4458
  %tobool = icmp ne i8* %29, null, !dbg !4456
  br i1 %tobool, label %if.end17, label %if.then16, !dbg !4459

if.then16:                                        ; preds = %if.end
  br label %for.inc1212, !dbg !4460

if.end17:                                         ; preds = %if.end
  %30 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4461
  %audio = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %30, i32 0, i32 13, !dbg !4463
  %samplerate = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio, i32 0, i32 0, !dbg !4464
  %31 = load double, double* %samplerate, align 8, !dbg !4464
  %cmp18 = fcmp olt double %31, 0.000000e+00, !dbg !4465
  br i1 %cmp18, label %if.then26, label %lor.lhs.false, !dbg !4466

lor.lhs.false:                                    ; preds = %if.end17
  %32 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4467
  %audio19 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %32, i32 0, i32 13, !dbg !4469
  %samplerate20 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio19, i32 0, i32 0, !dbg !4470
  %33 = load double, double* %samplerate20, align 8, !dbg !4470
  %cmp21 = fcmp ogt double %33, 0x41DFFFFFFFC00000, !dbg !4471
  br i1 %cmp21, label %if.then26, label %lor.lhs.false22, !dbg !4472

lor.lhs.false22:                                  ; preds = %lor.lhs.false
  %34 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4473
  %audio23 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %34, i32 0, i32 13, !dbg !4474
  %samplerate24 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio23, i32 0, i32 0, !dbg !4475
  %35 = load double, double* %samplerate24, align 8, !dbg !4475
  %cmp25 = fcmp uno double %35, %35, !dbg !4473
  br i1 %cmp25, label %if.then26, label %if.end32, !dbg !4476

if.then26:                                        ; preds = %lor.lhs.false22, %lor.lhs.false, %if.end17
  %36 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !4478
  %ctx27 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %36, i32 0, i32 1, !dbg !4480
  %37 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx27, align 8, !dbg !4480
  %38 = bitcast %struct.AVFormatContext* %37 to i8*, !dbg !4478
  %39 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4481
  %audio28 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %39, i32 0, i32 13, !dbg !4482
  %samplerate29 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio28, i32 0, i32 0, !dbg !4483
  %40 = load double, double* %samplerate29, align 8, !dbg !4483
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 24, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.58, i32 0, i32 0), double %40), !dbg !4484
  %41 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4485
  %audio30 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %41, i32 0, i32 13, !dbg !4486
  %samplerate31 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio30, i32 0, i32 0, !dbg !4487
  store double 8.000000e+03, double* %samplerate31, align 8, !dbg !4488
  br label %if.end32, !dbg !4489

if.end32:                                         ; preds = %if.then26, %lor.lhs.false22
  %42 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4490
  %type33 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %42, i32 0, i32 2, !dbg !4492
  %43 = load i64, i64* %type33, align 8, !dbg !4492
  %cmp34 = icmp eq i64 %43, 1, !dbg !4493
  br i1 %cmp34, label %if.then35, label %if.else76, !dbg !4494

if.then35:                                        ; preds = %if.end32
  %44 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4495
  %default_duration = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %44, i32 0, i32 8, !dbg !4498
  %45 = load i64, i64* %default_duration, align 8, !dbg !4498
  %tobool36 = icmp ne i64 %45, 0, !dbg !4495
  br i1 %tobool36, label %if.end52, label %land.lhs.true37, !dbg !4499

land.lhs.true37:                                  ; preds = %if.then35
  %46 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4500
  %video = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %46, i32 0, i32 12, !dbg !4502
  %frame_rate = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video, i32 0, i32 0, !dbg !4503
  %47 = load double, double* %frame_rate, align 8, !dbg !4503
  %cmp38 = fcmp ogt double %47, 0.000000e+00, !dbg !4504
  br i1 %cmp38, label %if.then39, label %if.end52, !dbg !4505

if.then39:                                        ; preds = %land.lhs.true37
  call void @llvm.dbg.declare(metadata double* %default_duration40, metadata !4506, metadata !2574), !dbg !4508
  %48 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4509
  %video41 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %48, i32 0, i32 12, !dbg !4510
  %frame_rate42 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video41, i32 0, i32 0, !dbg !4511
  %49 = load double, double* %frame_rate42, align 8, !dbg !4511
  %div = fdiv double 1.000000e+09, %49, !dbg !4512
  store double %div, double* %default_duration40, align 8, !dbg !4508
  %50 = load double, double* %default_duration40, align 8, !dbg !4513
  %cmp43 = fcmp ogt double %50, 0x43F0000000000000, !dbg !4515
  br i1 %cmp43, label %if.then46, label %lor.lhs.false44, !dbg !4516

lor.lhs.false44:                                  ; preds = %if.then39
  %51 = load double, double* %default_duration40, align 8, !dbg !4517
  %cmp45 = fcmp olt double %51, 0.000000e+00, !dbg !4519
  br i1 %cmp45, label %if.then46, label %if.else, !dbg !4520

if.then46:                                        ; preds = %lor.lhs.false44, %if.then39
  %52 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !4521
  %ctx47 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %52, i32 0, i32 1, !dbg !4523
  %53 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx47, align 8, !dbg !4523
  %54 = bitcast %struct.AVFormatContext* %53 to i8*, !dbg !4521
  %55 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4524
  %video48 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %55, i32 0, i32 12, !dbg !4525
  %frame_rate49 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video48, i32 0, i32 0, !dbg !4526
  %56 = load double, double* %frame_rate49, align 8, !dbg !4526
  call void (i8*, i32, i8*, ...) @av_log(i8* %54, i32 24, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0), double %56), !dbg !4527
  br label %if.end51, !dbg !4528

if.else:                                          ; preds = %lor.lhs.false44
  %57 = load double, double* %default_duration40, align 8, !dbg !4529
  %conv = fptoui double %57 to i64, !dbg !4529
  %58 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4531
  %default_duration50 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %58, i32 0, i32 8, !dbg !4532
  store i64 %conv, i64* %default_duration50, align 8, !dbg !4533
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then46
  br label %if.end52, !dbg !4534

if.end52:                                         ; preds = %if.end51, %land.lhs.true37, %if.then35
  %59 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4535
  %video53 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %59, i32 0, i32 12, !dbg !4537
  %display_width = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video53, i32 0, i32 1, !dbg !4538
  %60 = load i64, i64* %display_width, align 8, !dbg !4538
  %cmp54 = icmp eq i64 %60, -1, !dbg !4539
  br i1 %cmp54, label %if.then56, label %if.end60, !dbg !4540

if.then56:                                        ; preds = %if.end52
  %61 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4541
  %video57 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %61, i32 0, i32 12, !dbg !4542
  %pixel_width = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video57, i32 0, i32 3, !dbg !4543
  %62 = load i64, i64* %pixel_width, align 8, !dbg !4543
  %63 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4544
  %video58 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %63, i32 0, i32 12, !dbg !4545
  %display_width59 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video58, i32 0, i32 1, !dbg !4546
  store i64 %62, i64* %display_width59, align 8, !dbg !4547
  br label %if.end60, !dbg !4544

if.end60:                                         ; preds = %if.then56, %if.end52
  %64 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4548
  %video61 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %64, i32 0, i32 12, !dbg !4550
  %display_height = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video61, i32 0, i32 2, !dbg !4551
  %65 = load i64, i64* %display_height, align 8, !dbg !4551
  %cmp62 = icmp eq i64 %65, -1, !dbg !4552
  br i1 %cmp62, label %if.then64, label %if.end68, !dbg !4553

if.then64:                                        ; preds = %if.end60
  %66 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4554
  %video65 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %66, i32 0, i32 12, !dbg !4555
  %pixel_height = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video65, i32 0, i32 4, !dbg !4556
  %67 = load i64, i64* %pixel_height, align 8, !dbg !4556
  %68 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4557
  %video66 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %68, i32 0, i32 12, !dbg !4558
  %display_height67 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video66, i32 0, i32 2, !dbg !4559
  store i64 %67, i64* %display_height67, align 8, !dbg !4560
  br label %if.end68, !dbg !4557

if.end68:                                         ; preds = %if.then64, %if.end60
  %69 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4561
  %video69 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %69, i32 0, i32 12, !dbg !4563
  %color_space = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video69, i32 0, i32 5, !dbg !4564
  %size = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %color_space, i32 0, i32 0, !dbg !4565
  %70 = load i32, i32* %size, align 8, !dbg !4565
  %cmp70 = icmp eq i32 %70, 4, !dbg !4566
  br i1 %cmp70, label %if.then72, label %if.end75, !dbg !4567

if.then72:                                        ; preds = %if.end68
  %71 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4568
  %video73 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %71, i32 0, i32 12, !dbg !4569
  %color_space74 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video73, i32 0, i32 5, !dbg !4570
  %data = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %color_space74, i32 0, i32 2, !dbg !4571
  %72 = load i8*, i8** %data, align 8, !dbg !4571
  %73 = bitcast i8* %72 to %union.unaligned_32*, !dbg !4572
  %l = bitcast %union.unaligned_32* %73 to i32*, !dbg !4572
  %74 = load i32, i32* %l, align 1, !dbg !4572
  store i32 %74, i32* %fourcc, align 4, !dbg !4573
  br label %if.end75, !dbg !4574

if.end75:                                         ; preds = %if.then72, %if.end68
  br label %if.end90, !dbg !4575

if.else76:                                        ; preds = %if.end32
  %75 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4576
  %type77 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %75, i32 0, i32 2, !dbg !4579
  %76 = load i64, i64* %type77, align 8, !dbg !4579
  %cmp78 = icmp eq i64 %76, 2, !dbg !4580
  br i1 %cmp78, label %if.then80, label %if.end89, !dbg !4576

if.then80:                                        ; preds = %if.else76
  %77 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4581
  %audio81 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %77, i32 0, i32 13, !dbg !4584
  %out_samplerate = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio81, i32 0, i32 1, !dbg !4585
  %78 = load double, double* %out_samplerate, align 8, !dbg !4585
  %tobool82 = fcmp une double %78, 0.000000e+00, !dbg !4581
  br i1 %tobool82, label %if.end88, label %if.then83, !dbg !4586

if.then83:                                        ; preds = %if.then80
  %79 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4587
  %audio84 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %79, i32 0, i32 13, !dbg !4588
  %samplerate85 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio84, i32 0, i32 0, !dbg !4589
  %80 = load double, double* %samplerate85, align 8, !dbg !4589
  %81 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4590
  %audio86 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %81, i32 0, i32 13, !dbg !4591
  %out_samplerate87 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio86, i32 0, i32 1, !dbg !4592
  store double %80, double* %out_samplerate87, align 8, !dbg !4593
  br label %if.end88, !dbg !4590

if.end88:                                         ; preds = %if.then83, %if.then80
  br label %if.end89, !dbg !4594

if.end89:                                         ; preds = %if.end88, %if.else76
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end75
  %82 = load %struct.EbmlList*, %struct.EbmlList** %encodings_list, align 8, !dbg !4595
  %nb_elem91 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %82, i32 0, i32 0, !dbg !4597
  %83 = load i32, i32* %nb_elem91, align 8, !dbg !4597
  %cmp92 = icmp sgt i32 %83, 1, !dbg !4598
  br i1 %cmp92, label %if.then94, label %if.else96, !dbg !4599

if.then94:                                        ; preds = %if.end90
  %84 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !4600
  %ctx95 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %84, i32 0, i32 1, !dbg !4602
  %85 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx95, align 8, !dbg !4602
  %86 = bitcast %struct.AVFormatContext* %85 to i8*, !dbg !4600
  call void (i8*, i32, i8*, ...) @av_log(i8* %86, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.60, i32 0, i32 0)), !dbg !4603
  br label %if.end213, !dbg !4604

if.else96:                                        ; preds = %if.end90
  %87 = load %struct.EbmlList*, %struct.EbmlList** %encodings_list, align 8, !dbg !4605
  %nb_elem97 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %87, i32 0, i32 0, !dbg !4608
  %88 = load i32, i32* %nb_elem97, align 8, !dbg !4608
  %cmp98 = icmp eq i32 %88, 1, !dbg !4609
  br i1 %cmp98, label %if.then100, label %if.end212, !dbg !4605

if.then100:                                       ; preds = %if.else96
  %89 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings3, align 8, !dbg !4610
  %arrayidx101 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %89, i64 0, !dbg !4610
  %type102 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx101, i32 0, i32 1, !dbg !4613
  %90 = load i64, i64* %type102, align 8, !dbg !4613
  %tobool103 = icmp ne i64 %90, 0, !dbg !4610
  br i1 %tobool103, label %if.then104, label %if.else134, !dbg !4614

if.then104:                                       ; preds = %if.then100
  %91 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings3, align 8, !dbg !4615
  %arrayidx105 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %91, i64 0, !dbg !4615
  %encryption = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx105, i32 0, i32 3, !dbg !4618
  %key_id = getelementptr inbounds %struct.MatroskaTrackEncryption, %struct.MatroskaTrackEncryption* %encryption, i32 0, i32 1, !dbg !4619
  %size106 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %key_id, i32 0, i32 0, !dbg !4620
  %92 = load i32, i32* %size106, align 8, !dbg !4620
  %cmp107 = icmp sgt i32 %92, 0, !dbg !4621
  br i1 %cmp107, label %if.then109, label %if.else130, !dbg !4622

if.then109:                                       ; preds = %if.then104
  call void @llvm.dbg.declare(metadata i32* %b64_size, metadata !4623, metadata !2574), !dbg !4625
  %93 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings3, align 8, !dbg !4626
  %arrayidx110 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %93, i64 0, !dbg !4626
  %encryption111 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx110, i32 0, i32 3, !dbg !4627
  %key_id112 = getelementptr inbounds %struct.MatroskaTrackEncryption, %struct.MatroskaTrackEncryption* %encryption111, i32 0, i32 1, !dbg !4628
  %size113 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %key_id112, i32 0, i32 0, !dbg !4629
  %94 = load i32, i32* %size113, align 8, !dbg !4629
  %add = add nsw i32 %94, 2, !dbg !4630
  %div114 = sdiv i32 %add, 3, !dbg !4631
  %mul = mul nsw i32 %div114, 4, !dbg !4632
  %add115 = add nsw i32 %mul, 1, !dbg !4633
  store i32 %add115, i32* %b64_size, align 4, !dbg !4625
  %95 = load i32, i32* %b64_size, align 4, !dbg !4634
  %conv116 = sext i32 %95 to i64, !dbg !4634
  %call = call noalias i8* @av_malloc(i64 %conv116), !dbg !4635
  store i8* %call, i8** %key_id_base64, align 8, !dbg !4636
  %96 = load i8*, i8** %key_id_base64, align 8, !dbg !4637
  %cmp117 = icmp eq i8* %96, null, !dbg !4639
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !4640

if.then119:                                       ; preds = %if.then109
  store i32 -12, i32* %retval, align 4, !dbg !4641
  br label %return, !dbg !4641

if.end120:                                        ; preds = %if.then109
  %97 = load i8*, i8** %key_id_base64, align 8, !dbg !4642
  %98 = load i32, i32* %b64_size, align 4, !dbg !4643
  %99 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings3, align 8, !dbg !4644
  %arrayidx121 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %99, i64 0, !dbg !4644
  %encryption122 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx121, i32 0, i32 3, !dbg !4645
  %key_id123 = getelementptr inbounds %struct.MatroskaTrackEncryption, %struct.MatroskaTrackEncryption* %encryption122, i32 0, i32 1, !dbg !4646
  %data124 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %key_id123, i32 0, i32 2, !dbg !4647
  %100 = load i8*, i8** %data124, align 8, !dbg !4647
  %101 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings3, align 8, !dbg !4648
  %arrayidx125 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %101, i64 0, !dbg !4648
  %encryption126 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx125, i32 0, i32 3, !dbg !4649
  %key_id127 = getelementptr inbounds %struct.MatroskaTrackEncryption, %struct.MatroskaTrackEncryption* %encryption126, i32 0, i32 1, !dbg !4650
  %size128 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %key_id127, i32 0, i32 0, !dbg !4651
  %102 = load i32, i32* %size128, align 8, !dbg !4651
  %call129 = call i8* @av_base64_encode(i8* %97, i32 %98, i8* %100, i32 %102), !dbg !4652
  br label %if.end133, !dbg !4653

if.else130:                                       ; preds = %if.then104
  %103 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings3, align 8, !dbg !4654
  %arrayidx131 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %103, i64 0, !dbg !4654
  %scope = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx131, i32 0, i32 0, !dbg !4656
  store i64 0, i64* %scope, align 8, !dbg !4657
  %104 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !4658
  %ctx132 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %104, i32 0, i32 1, !dbg !4659
  %105 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx132, align 8, !dbg !4659
  %106 = bitcast %struct.AVFormatContext* %105 to i8*, !dbg !4658
  call void (i8*, i32, i8*, ...) @av_log(i8* %106, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i32 0, i32 0)), !dbg !4660
  br label %if.end133

if.end133:                                        ; preds = %if.else130, %if.end120
  br label %if.end211, !dbg !4661

if.else134:                                       ; preds = %if.then100
  %107 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings3, align 8, !dbg !4662
  %arrayidx135 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %107, i64 0, !dbg !4662
  %compression = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx135, i32 0, i32 2, !dbg !4664
  %algo = getelementptr inbounds %struct.MatroskaTrackCompression, %struct.MatroskaTrackCompression* %compression, i32 0, i32 0, !dbg !4665
  %108 = load i64, i64* %algo, align 8, !dbg !4665
  %cmp136 = icmp ne i64 %108, 0, !dbg !4666
  br i1 %cmp136, label %land.lhs.true138, label %if.else154, !dbg !4667

land.lhs.true138:                                 ; preds = %if.else134
  %109 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings3, align 8, !dbg !4668
  %arrayidx139 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %109, i64 0, !dbg !4668
  %compression140 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx139, i32 0, i32 2, !dbg !4669
  %algo141 = getelementptr inbounds %struct.MatroskaTrackCompression, %struct.MatroskaTrackCompression* %compression140, i32 0, i32 0, !dbg !4670
  %110 = load i64, i64* %algo141, align 8, !dbg !4670
  %cmp142 = icmp ne i64 %110, 2, !dbg !4671
  br i1 %cmp142, label %land.lhs.true144, label %if.else154, !dbg !4672

land.lhs.true144:                                 ; preds = %land.lhs.true138
  %111 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings3, align 8, !dbg !4673
  %arrayidx145 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %111, i64 0, !dbg !4673
  %compression146 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx145, i32 0, i32 2, !dbg !4674
  %algo147 = getelementptr inbounds %struct.MatroskaTrackCompression, %struct.MatroskaTrackCompression* %compression146, i32 0, i32 0, !dbg !4675
  %112 = load i64, i64* %algo147, align 8, !dbg !4675
  %cmp148 = icmp ne i64 %112, 3, !dbg !4676
  br i1 %cmp148, label %if.then150, label %if.else154, !dbg !4677

if.then150:                                       ; preds = %land.lhs.true144
  %113 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings3, align 8, !dbg !4679
  %arrayidx151 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %113, i64 0, !dbg !4679
  %scope152 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx151, i32 0, i32 0, !dbg !4681
  store i64 0, i64* %scope152, align 8, !dbg !4682
  %114 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !4683
  %ctx153 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %114, i32 0, i32 1, !dbg !4684
  %115 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx153, align 8, !dbg !4684
  %116 = bitcast %struct.AVFormatContext* %115 to i8*, !dbg !4683
  call void (i8*, i32, i8*, ...) @av_log(i8* %116, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i32 0, i32 0)), !dbg !4685
  br label %if.end210, !dbg !4686

if.else154:                                       ; preds = %land.lhs.true144, %land.lhs.true138, %if.else134
  %117 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4687
  %codec_priv = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %117, i32 0, i32 5, !dbg !4690
  %size155 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv, i32 0, i32 0, !dbg !4691
  %118 = load i32, i32* %size155, align 8, !dbg !4691
  %tobool156 = icmp ne i32 %118, 0, !dbg !4687
  br i1 %tobool156, label %land.lhs.true157, label %if.end209, !dbg !4692

land.lhs.true157:                                 ; preds = %if.else154
  %119 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings3, align 8, !dbg !4693
  %arrayidx158 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %119, i64 0, !dbg !4693
  %scope159 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx158, i32 0, i32 0, !dbg !4695
  %120 = load i64, i64* %scope159, align 8, !dbg !4695
  %and = and i64 %120, 2, !dbg !4696
  %tobool160 = icmp ne i64 %and, 0, !dbg !4696
  br i1 %tobool160, label %if.then161, label %if.end209, !dbg !4697

if.then161:                                       ; preds = %land.lhs.true157
  call void @llvm.dbg.declare(metadata i8** %codec_priv162, metadata !4698, metadata !2574), !dbg !4700
  %121 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4701
  %codec_priv163 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %121, i32 0, i32 5, !dbg !4702
  %data164 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv163, i32 0, i32 2, !dbg !4703
  %122 = load i8*, i8** %data164, align 8, !dbg !4703
  store i8* %122, i8** %codec_priv162, align 8, !dbg !4700
  call void @llvm.dbg.declare(metadata i32* %ret165, metadata !4704, metadata !2574), !dbg !4705
  %123 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4706
  %codec_priv166 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %123, i32 0, i32 5, !dbg !4707
  %data167 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv166, i32 0, i32 2, !dbg !4708
  %124 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4709
  %codec_priv168 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %124, i32 0, i32 5, !dbg !4710
  %size169 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv168, i32 0, i32 0, !dbg !4711
  %125 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4712
  %call170 = call i32 @matroska_decode_buffer(i8** %data167, i32* %size169, %struct.MatroskaTrack* %125), !dbg !4713
  store i32 %call170, i32* %ret165, align 4, !dbg !4705
  %126 = load i32, i32* %ret165, align 4, !dbg !4714
  %cmp171 = icmp slt i32 %126, 0, !dbg !4716
  br i1 %cmp171, label %if.then173, label %if.end179, !dbg !4717

if.then173:                                       ; preds = %if.then161
  %127 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4718
  %codec_priv174 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %127, i32 0, i32 5, !dbg !4720
  %data175 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv174, i32 0, i32 2, !dbg !4721
  store i8* null, i8** %data175, align 8, !dbg !4722
  %128 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4723
  %codec_priv176 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %128, i32 0, i32 5, !dbg !4724
  %size177 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv176, i32 0, i32 0, !dbg !4725
  store i32 0, i32* %size177, align 8, !dbg !4726
  %129 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !4727
  %ctx178 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %129, i32 0, i32 1, !dbg !4728
  %130 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx178, align 8, !dbg !4728
  %131 = bitcast %struct.AVFormatContext* %130 to i8*, !dbg !4727
  call void (i8*, i32, i8*, ...) @av_log(i8* %131, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.62, i32 0, i32 0)), !dbg !4729
  br label %if.end179, !dbg !4730

if.end179:                                        ; preds = %if.then173, %if.then161
  %132 = load i8*, i8** %codec_priv162, align 8, !dbg !4731
  %133 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4733
  %codec_priv180 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %133, i32 0, i32 5, !dbg !4734
  %data181 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv180, i32 0, i32 2, !dbg !4735
  %134 = load i8*, i8** %data181, align 8, !dbg !4735
  %cmp182 = icmp ne i8* %132, %134, !dbg !4736
  br i1 %cmp182, label %if.then184, label %if.end208, !dbg !4737

if.then184:                                       ; preds = %if.end179
  %135 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4738
  %codec_priv185 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %135, i32 0, i32 5, !dbg !4740
  %buf = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv185, i32 0, i32 1, !dbg !4741
  call void @av_buffer_unref(%struct.AVBufferRef** %buf), !dbg !4742
  %136 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4743
  %codec_priv186 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %136, i32 0, i32 5, !dbg !4745
  %data187 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv186, i32 0, i32 2, !dbg !4746
  %137 = load i8*, i8** %data187, align 8, !dbg !4746
  %tobool188 = icmp ne i8* %137, null, !dbg !4743
  br i1 %tobool188, label %if.then189, label %if.end207, !dbg !4747

if.then189:                                       ; preds = %if.then184
  %138 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4748
  %codec_priv190 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %138, i32 0, i32 5, !dbg !4750
  %data191 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv190, i32 0, i32 2, !dbg !4751
  %139 = load i8*, i8** %data191, align 8, !dbg !4751
  %140 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4752
  %codec_priv192 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %140, i32 0, i32 5, !dbg !4753
  %size193 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv192, i32 0, i32 0, !dbg !4754
  %141 = load i32, i32* %size193, align 8, !dbg !4754
  %add194 = add nsw i32 %141, 64, !dbg !4755
  %call195 = call %struct.AVBufferRef* @av_buffer_create(i8* %139, i32 %add194, void (i8*, i8*)* null, i8* null, i32 0), !dbg !4756
  %142 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4757
  %codec_priv196 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %142, i32 0, i32 5, !dbg !4758
  %buf197 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv196, i32 0, i32 1, !dbg !4759
  store %struct.AVBufferRef* %call195, %struct.AVBufferRef** %buf197, align 8, !dbg !4760
  %143 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4761
  %codec_priv198 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %143, i32 0, i32 5, !dbg !4763
  %buf199 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv198, i32 0, i32 1, !dbg !4764
  %144 = load %struct.AVBufferRef*, %struct.AVBufferRef** %buf199, align 8, !dbg !4764
  %tobool200 = icmp ne %struct.AVBufferRef* %144, null, !dbg !4761
  br i1 %tobool200, label %if.end206, label %if.then201, !dbg !4765

if.then201:                                       ; preds = %if.then189
  %145 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4766
  %codec_priv202 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %145, i32 0, i32 5, !dbg !4768
  %data203 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv202, i32 0, i32 2, !dbg !4769
  %146 = bitcast i8** %data203 to i8*, !dbg !4770
  call void @av_freep(i8* %146), !dbg !4771
  %147 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4772
  %codec_priv204 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %147, i32 0, i32 5, !dbg !4773
  %size205 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv204, i32 0, i32 0, !dbg !4774
  store i32 0, i32* %size205, align 8, !dbg !4775
  store i32 -12, i32* %retval, align 4, !dbg !4776
  br label %return, !dbg !4776

if.end206:                                        ; preds = %if.then189
  br label %if.end207, !dbg !4777

if.end207:                                        ; preds = %if.end206, %if.then184
  br label %if.end208, !dbg !4778

if.end208:                                        ; preds = %if.end207, %if.end179
  br label %if.end209, !dbg !4779

if.end209:                                        ; preds = %if.end208, %land.lhs.true157, %if.else154
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.then150
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.end133
  br label %if.end212, !dbg !4780

if.end212:                                        ; preds = %if.end211, %if.else96
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.then94
  store i32 0, i32* %j, align 4, !dbg !4781
  br label %for.cond214, !dbg !4783

for.cond214:                                      ; preds = %for.inc, %if.end213
  %148 = load i32, i32* %j, align 4, !dbg !4784
  %idxprom215 = sext i32 %148 to i64, !dbg !4787
  %arrayidx216 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 %idxprom215, !dbg !4787
  %id = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx216, i32 0, i32 1, !dbg !4788
  %149 = load i32, i32* %id, align 4, !dbg !4788
  %cmp217 = icmp ne i32 %149, 0, !dbg !4789
  br i1 %cmp217, label %for.body219, label %for.end, !dbg !4790

for.body219:                                      ; preds = %for.cond214
  %150 = load i32, i32* %j, align 4, !dbg !4791
  %idxprom220 = sext i32 %150 to i64, !dbg !4794
  %arrayidx221 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 %idxprom220, !dbg !4794
  %str = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx221, i32 0, i32 0, !dbg !4795
  %arraydecay = getelementptr inbounds [22 x i8], [22 x i8]* %str, i32 0, i32 0, !dbg !4794
  %151 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4796
  %codec_id222 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %151, i32 0, i32 4, !dbg !4797
  %152 = load i8*, i8** %codec_id222, align 8, !dbg !4797
  %153 = load i32, i32* %j, align 4, !dbg !4798
  %idxprom223 = sext i32 %153 to i64, !dbg !4799
  %arrayidx224 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 %idxprom223, !dbg !4799
  %str225 = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx224, i32 0, i32 0, !dbg !4800
  %arraydecay226 = getelementptr inbounds [22 x i8], [22 x i8]* %str225, i32 0, i32 0, !dbg !4799
  %call227 = call i64 @strlen(i8* %arraydecay226) #10, !dbg !4801
  %call228 = call i32 @strncmp(i8* %arraydecay, i8* %152, i64 %call227) #10, !dbg !4802
  %tobool229 = icmp ne i32 %call228, 0, !dbg !4802
  br i1 %tobool229, label %if.end234, label %if.then230, !dbg !4803

if.then230:                                       ; preds = %for.body219
  %154 = load i32, i32* %j, align 4, !dbg !4804
  %idxprom231 = sext i32 %154 to i64, !dbg !4806
  %arrayidx232 = getelementptr inbounds [0 x %struct.CodecTags], [0 x %struct.CodecTags]* @ff_mkv_codec_tags, i64 0, i64 %idxprom231, !dbg !4806
  %id233 = getelementptr inbounds %struct.CodecTags, %struct.CodecTags* %arrayidx232, i32 0, i32 1, !dbg !4807
  %155 = load i32, i32* %id233, align 4, !dbg !4807
  store i32 %155, i32* %codec_id, align 4, !dbg !4808
  br label %for.end, !dbg !4809

if.end234:                                        ; preds = %for.body219
  br label %for.inc, !dbg !4810

for.inc:                                          ; preds = %if.end234
  %156 = load i32, i32* %j, align 4, !dbg !4811
  %inc = add nsw i32 %156, 1, !dbg !4811
  store i32 %inc, i32* %j, align 4, !dbg !4811
  br label %for.cond214, !dbg !4813, !llvm.loop !4814

for.end:                                          ; preds = %if.then230, %for.cond214
  %157 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4816
  %call235 = call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %157, %struct.AVCodec* null), !dbg !4817
  %158 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4818
  %stream = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %158, i32 0, i32 18, !dbg !4819
  store %struct.AVStream* %call235, %struct.AVStream** %stream, align 8, !dbg !4820
  store %struct.AVStream* %call235, %struct.AVStream** %st, align 8, !dbg !4821
  %159 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4822
  %tobool236 = icmp ne %struct.AVStream* %159, null, !dbg !4822
  br i1 %tobool236, label %if.end238, label %if.then237, !dbg !4824

if.then237:                                       ; preds = %for.end
  %160 = load i8*, i8** %key_id_base64, align 8, !dbg !4825
  call void @av_free(i8* %160), !dbg !4827
  store i32 -12, i32* %retval, align 4, !dbg !4828
  br label %return, !dbg !4828

if.end238:                                        ; preds = %for.end
  %161 = load i8*, i8** %key_id_base64, align 8, !dbg !4829
  %tobool239 = icmp ne i8* %161, null, !dbg !4829
  br i1 %tobool239, label %if.then240, label %if.end242, !dbg !4831

if.then240:                                       ; preds = %if.end238
  %162 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4832
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %162, i32 0, i32 11, !dbg !4834
  %163 = load i8*, i8** %key_id_base64, align 8, !dbg !4835
  %call241 = call i32 @av_dict_set(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i32 0, i32 0), i8* %163, i32 0), !dbg !4836
  %164 = bitcast i8** %key_id_base64 to i8*, !dbg !4837
  call void @av_freep(i8* %164), !dbg !4838
  br label %if.end242, !dbg !4839

if.end242:                                        ; preds = %if.then240, %if.end238
  %165 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4840
  %codec_id243 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %165, i32 0, i32 4, !dbg !4841
  %166 = load i8*, i8** %codec_id243, align 8, !dbg !4841
  %call244 = call i32 @strcmp(i8* %166, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.64, i32 0, i32 0)) #10, !dbg !4842
  %tobool245 = icmp ne i32 %call244, 0, !dbg !4842
  br i1 %tobool245, label %if.else269, label %land.lhs.true246, !dbg !4843

land.lhs.true246:                                 ; preds = %if.end242
  %167 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4844
  %codec_priv247 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %167, i32 0, i32 5, !dbg !4845
  %size248 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv247, i32 0, i32 0, !dbg !4846
  %168 = load i32, i32* %size248, align 8, !dbg !4846
  %cmp249 = icmp sge i32 %168, 40, !dbg !4847
  br i1 %cmp249, label %land.lhs.true251, label %if.else269, !dbg !4848

land.lhs.true251:                                 ; preds = %land.lhs.true246
  %169 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4849
  %codec_priv252 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %169, i32 0, i32 5, !dbg !4850
  %data253 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv252, i32 0, i32 2, !dbg !4851
  %170 = load i8*, i8** %data253, align 8, !dbg !4851
  %tobool254 = icmp ne i8* %170, null, !dbg !4849
  br i1 %tobool254, label %if.then255, label %if.else269, !dbg !4852

if.then255:                                       ; preds = %land.lhs.true251
  %171 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4853
  %ms_compat = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %171, i32 0, i32 20, !dbg !4855
  store i32 1, i32* %ms_compat, align 8, !dbg !4856
  %172 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4857
  %codec_priv256 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %172, i32 0, i32 5, !dbg !4858
  %data257 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv256, i32 0, i32 2, !dbg !4859
  %173 = load i8*, i8** %data257, align 8, !dbg !4859
  %add.ptr = getelementptr inbounds i8, i8* %173, i64 14, !dbg !4860
  %174 = bitcast i8* %add.ptr to %union.unaligned_16*, !dbg !4861
  %l258 = bitcast %union.unaligned_16* %174 to i16*, !dbg !4861
  %175 = load i16, i16* %l258, align 1, !dbg !4861
  %conv259 = zext i16 %175 to i32, !dbg !4862
  store i32 %conv259, i32* %bit_depth, align 4, !dbg !4863
  %176 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4864
  %codec_priv260 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %176, i32 0, i32 5, !dbg !4865
  %data261 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv260, i32 0, i32 2, !dbg !4866
  %177 = load i8*, i8** %data261, align 8, !dbg !4866
  %add.ptr262 = getelementptr inbounds i8, i8* %177, i64 16, !dbg !4867
  %178 = bitcast i8* %add.ptr262 to %union.unaligned_32*, !dbg !4868
  %l263 = bitcast %union.unaligned_32* %178 to i32*, !dbg !4868
  %179 = load i32, i32* %l263, align 1, !dbg !4868
  store i32 %179, i32* %fourcc, align 4, !dbg !4869
  %180 = load i32, i32* %fourcc, align 4, !dbg !4870
  %call264 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_bmp_tags, i32 0, i32 0), i32 %180), !dbg !4871
  store i32 %call264, i32* %codec_id, align 4, !dbg !4872
  %181 = load i32, i32* %codec_id, align 4, !dbg !4873
  %tobool265 = icmp ne i32 %181, 0, !dbg !4873
  br i1 %tobool265, label %if.end268, label %if.then266, !dbg !4875

if.then266:                                       ; preds = %if.then255
  %182 = load i32, i32* %fourcc, align 4, !dbg !4876
  %call267 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i32 0, i32 0), i32 %182), !dbg !4877
  store i32 %call267, i32* %codec_id, align 4, !dbg !4878
  br label %if.end268, !dbg !4879

if.end268:                                        ; preds = %if.then266, %if.then255
  store i32 40, i32* %extradata_offset, align 4, !dbg !4880
  br label %if.end769, !dbg !4881

if.else269:                                       ; preds = %land.lhs.true251, %land.lhs.true246, %if.end242
  %183 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4882
  %codec_id270 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %183, i32 0, i32 4, !dbg !4884
  %184 = load i8*, i8** %codec_id270, align 8, !dbg !4884
  %call271 = call i32 @strcmp(i8* %184, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0)) #10, !dbg !4885
  %tobool272 = icmp ne i32 %call271, 0, !dbg !4885
  br i1 %tobool272, label %if.else305, label %land.lhs.true273, !dbg !4886

land.lhs.true273:                                 ; preds = %if.else269
  %185 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4887
  %codec_priv274 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %185, i32 0, i32 5, !dbg !4888
  %size275 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv274, i32 0, i32 0, !dbg !4889
  %186 = load i32, i32* %size275, align 8, !dbg !4889
  %cmp276 = icmp sge i32 %186, 14, !dbg !4890
  br i1 %cmp276, label %land.lhs.true278, label %if.else305, !dbg !4891

land.lhs.true278:                                 ; preds = %land.lhs.true273
  %187 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4892
  %codec_priv279 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %187, i32 0, i32 5, !dbg !4893
  %data280 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv279, i32 0, i32 2, !dbg !4894
  %188 = load i8*, i8** %data280, align 8, !dbg !4894
  %tobool281 = icmp ne i8* %188, null, !dbg !4892
  br i1 %tobool281, label %if.then282, label %if.else305, !dbg !4895

if.then282:                                       ; preds = %land.lhs.true278
  call void @llvm.dbg.declare(metadata i32* %ret283, metadata !4897, metadata !2574), !dbg !4899
  %189 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4900
  %codec_priv284 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %189, i32 0, i32 5, !dbg !4901
  %data285 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv284, i32 0, i32 2, !dbg !4902
  %190 = load i8*, i8** %data285, align 8, !dbg !4902
  %191 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4903
  %codec_priv286 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %191, i32 0, i32 5, !dbg !4904
  %size287 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv286, i32 0, i32 0, !dbg !4905
  %192 = load i32, i32* %size287, align 8, !dbg !4905
  %call288 = call i32 @ffio_init_context(%struct.AVIOContext* %b, i8* %190, i32 %192, i32 0, i8* null, i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null), !dbg !4906
  %193 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4907
  %194 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4908
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %194, i32 0, i32 19, !dbg !4909
  %195 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !4909
  %196 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4910
  %codec_priv289 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %196, i32 0, i32 5, !dbg !4911
  %size290 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv289, i32 0, i32 0, !dbg !4912
  %197 = load i32, i32* %size290, align 8, !dbg !4912
  %call291 = call i32 @ff_get_wav_header(%struct.AVFormatContext* %193, %struct.AVIOContext* %b, %struct.AVCodecParameters* %195, i32 %197, i32 0), !dbg !4913
  store i32 %call291, i32* %ret283, align 4, !dbg !4914
  %198 = load i32, i32* %ret283, align 4, !dbg !4915
  %cmp292 = icmp slt i32 %198, 0, !dbg !4917
  br i1 %cmp292, label %if.then294, label %if.end295, !dbg !4918

if.then294:                                       ; preds = %if.then282
  %199 = load i32, i32* %ret283, align 4, !dbg !4919
  store i32 %199, i32* %retval, align 4, !dbg !4920
  br label %return, !dbg !4920

if.end295:                                        ; preds = %if.then282
  %200 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4921
  %codecpar296 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %200, i32 0, i32 19, !dbg !4922
  %201 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar296, align 8, !dbg !4922
  %codec_id297 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %201, i32 0, i32 1, !dbg !4923
  %202 = load i32, i32* %codec_id297, align 4, !dbg !4923
  store i32 %202, i32* %codec_id, align 4, !dbg !4924
  %203 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4925
  %codecpar298 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %203, i32 0, i32 19, !dbg !4926
  %204 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar298, align 8, !dbg !4926
  %codec_tag = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %204, i32 0, i32 2, !dbg !4927
  %205 = load i32, i32* %codec_tag, align 8, !dbg !4927
  store i32 %205, i32* %fourcc, align 4, !dbg !4928
  %206 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4929
  %codec_priv299 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %206, i32 0, i32 5, !dbg !4930
  %size300 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv299, i32 0, i32 0, !dbg !4931
  %207 = load i32, i32* %size300, align 8, !dbg !4931
  %cmp301 = icmp sgt i32 %207, 18, !dbg !4932
  br i1 %cmp301, label %cond.true, label %cond.false, !dbg !4933

cond.true:                                        ; preds = %if.end295
  br label %cond.end, !dbg !4934

cond.false:                                       ; preds = %if.end295
  %208 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4936
  %codec_priv303 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %208, i32 0, i32 5, !dbg !4938
  %size304 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv303, i32 0, i32 0, !dbg !4939
  %209 = load i32, i32* %size304, align 8, !dbg !4939
  br label %cond.end, !dbg !4940

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 18, %cond.true ], [ %209, %cond.false ], !dbg !4941
  store i32 %cond, i32* %extradata_offset, align 4, !dbg !4943
  br label %if.end768, !dbg !4944

if.else305:                                       ; preds = %land.lhs.true278, %land.lhs.true273, %if.else269
  %210 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4945
  %codec_id306 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %210, i32 0, i32 4, !dbg !4947
  %211 = load i8*, i8** %codec_id306, align 8, !dbg !4947
  %call307 = call i32 @strcmp(i8* %211, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66, i32 0, i32 0)) #10, !dbg !4948
  %tobool308 = icmp ne i32 %call307, 0, !dbg !4948
  br i1 %tobool308, label %if.else358, label %land.lhs.true309, !dbg !4949

land.lhs.true309:                                 ; preds = %if.else305
  %212 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4950
  %codec_priv310 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %212, i32 0, i32 5, !dbg !4951
  %size311 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv310, i32 0, i32 0, !dbg !4952
  %213 = load i32, i32* %size311, align 8, !dbg !4952
  %cmp312 = icmp sge i32 %213, 32, !dbg !4953
  br i1 %cmp312, label %land.lhs.true314, label %if.else358, !dbg !4954

land.lhs.true314:                                 ; preds = %land.lhs.true309
  %214 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4955
  %codec_priv315 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %214, i32 0, i32 5, !dbg !4956
  %data316 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv315, i32 0, i32 2, !dbg !4957
  %215 = load i8*, i8** %data316, align 8, !dbg !4957
  %tobool317 = icmp ne i8* %215, null, !dbg !4958
  br i1 %tobool317, label %if.then318, label %if.else358, !dbg !4959

if.then318:                                       ; preds = %land.lhs.true314
  call void @llvm.dbg.declare(metadata i16* %sample_size, metadata !4961, metadata !2574), !dbg !4962
  call void @llvm.dbg.declare(metadata i32* %ret319, metadata !4963, metadata !2574), !dbg !4964
  %216 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4965
  %call320 = call i32 @get_qt_codec(%struct.MatroskaTrack* %216, i32* %fourcc, i32* %codec_id), !dbg !4966
  store i32 %call320, i32* %ret319, align 4, !dbg !4964
  %217 = load i32, i32* %ret319, align 4, !dbg !4967
  %cmp321 = icmp slt i32 %217, 0, !dbg !4969
  br i1 %cmp321, label %if.then323, label %if.end324, !dbg !4970

if.then323:                                       ; preds = %if.then318
  %218 = load i32, i32* %ret319, align 4, !dbg !4971
  store i32 %218, i32* %retval, align 4, !dbg !4972
  br label %return, !dbg !4972

if.end324:                                        ; preds = %if.then318
  %219 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !4973
  %codec_priv325 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %219, i32 0, i32 5, !dbg !4974
  %data326 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv325, i32 0, i32 2, !dbg !4975
  %220 = load i8*, i8** %data326, align 8, !dbg !4975
  %add.ptr327 = getelementptr inbounds i8, i8* %220, i64 26, !dbg !4976
  %221 = bitcast i8* %add.ptr327 to %union.unaligned_16*, !dbg !4977
  %l328 = bitcast %union.unaligned_16* %221 to i16*, !dbg !4977
  %222 = load i16, i16* %l328, align 1, !dbg !4977
  store i16 %222, i16* %x.addr.i, align 2, !dbg !4978
  %223 = load i16, i16* %x.addr.i, align 2, !dbg !4979
  %conv.i = zext i16 %223 to i32, !dbg !4979
  %shr.i = ashr i32 %conv.i, 8, !dbg !4980
  %224 = load i16, i16* %x.addr.i, align 2, !dbg !4981
  %conv1.i = zext i16 %224 to i32, !dbg !4981
  %shl.i = shl i32 %conv1.i, 8, !dbg !4982
  %or.i = or i32 %shr.i, %shl.i, !dbg !4983
  %conv2.i = trunc i32 %or.i to i16, !dbg !4984
  store i16 %conv2.i, i16* %x.addr.i, align 2, !dbg !4985
  %225 = load i16, i16* %x.addr.i, align 2, !dbg !4986
  store i16 %225, i16* %sample_size, align 2, !dbg !4987
  %226 = load i32, i32* %fourcc, align 4, !dbg !4988
  %cmp330 = icmp eq i32 %226, 0, !dbg !4990
  br i1 %cmp330, label %if.then332, label %if.end346, !dbg !4991

if.then332:                                       ; preds = %if.end324
  %227 = load i16, i16* %sample_size, align 2, !dbg !4992
  %conv333 = zext i16 %227 to i32, !dbg !4992
  %cmp334 = icmp eq i32 %conv333, 8, !dbg !4995
  br i1 %cmp334, label %if.then336, label %if.else338, !dbg !4996

if.then336:                                       ; preds = %if.then332
  store i32 544694642, i32* %fourcc, align 4, !dbg !4997
  %228 = load i32, i32* %fourcc, align 4, !dbg !4999
  %call337 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movaudio_tags, i32 0, i32 0), i32 %228), !dbg !5000
  store i32 %call337, i32* %codec_id, align 4, !dbg !5001
  br label %if.end345, !dbg !5002

if.else338:                                       ; preds = %if.then332
  %229 = load i16, i16* %sample_size, align 2, !dbg !5003
  %conv339 = zext i16 %229 to i32, !dbg !5003
  %cmp340 = icmp eq i32 %conv339, 16, !dbg !5006
  br i1 %cmp340, label %if.then342, label %if.end344, !dbg !5003

if.then342:                                       ; preds = %if.else338
  store i32 1936684916, i32* %fourcc, align 4, !dbg !5007
  %230 = load i32, i32* %fourcc, align 4, !dbg !5009
  %call343 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movaudio_tags, i32 0, i32 0), i32 %230), !dbg !5010
  store i32 %call343, i32* %codec_id, align 4, !dbg !5011
  br label %if.end344, !dbg !5012

if.end344:                                        ; preds = %if.then342, %if.else338
  br label %if.end345

if.end345:                                        ; preds = %if.end344, %if.then336
  br label %if.end346, !dbg !5013

if.end346:                                        ; preds = %if.end345, %if.end324
  %231 = load i32, i32* %fourcc, align 4, !dbg !5014
  %cmp347 = icmp eq i32 %231, 1936684916, !dbg !5016
  br i1 %cmp347, label %land.lhs.true352, label %lor.lhs.false349, !dbg !5017

lor.lhs.false349:                                 ; preds = %if.end346
  %232 = load i32, i32* %fourcc, align 4, !dbg !5018
  %cmp350 = icmp eq i32 %232, 1953984371, !dbg !5019
  br i1 %cmp350, label %land.lhs.true352, label %if.end357, !dbg !5020

land.lhs.true352:                                 ; preds = %lor.lhs.false349, %if.end346
  %233 = load i16, i16* %sample_size, align 2, !dbg !5021
  %conv353 = zext i16 %233 to i32, !dbg !5021
  %cmp354 = icmp eq i32 %conv353, 8, !dbg !5022
  br i1 %cmp354, label %if.then356, label %if.end357, !dbg !5023

if.then356:                                       ; preds = %land.lhs.true352
  store i32 65540, i32* %codec_id, align 4, !dbg !5025
  br label %if.end357, !dbg !5026

if.end357:                                        ; preds = %if.then356, %land.lhs.true352, %lor.lhs.false349
  br label %if.end767, !dbg !5027

if.else358:                                       ; preds = %land.lhs.true314, %land.lhs.true309, %if.else305
  %234 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5028
  %codec_id359 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %234, i32 0, i32 4, !dbg !5030
  %235 = load i8*, i8** %codec_id359, align 8, !dbg !5030
  %call360 = call i32 @strcmp(i8* %235, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i32 0, i32 0)) #10, !dbg !5031
  %tobool361 = icmp ne i32 %call360, 0, !dbg !5031
  br i1 %tobool361, label %if.else420, label %land.lhs.true362, !dbg !5032

land.lhs.true362:                                 ; preds = %if.else358
  %236 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5033
  %codec_priv363 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %236, i32 0, i32 5, !dbg !5034
  %size364 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv363, i32 0, i32 0, !dbg !5035
  %237 = load i32, i32* %size364, align 8, !dbg !5035
  %cmp365 = icmp sge i32 %237, 21, !dbg !5036
  br i1 %cmp365, label %land.lhs.true367, label %if.else420, !dbg !5037

land.lhs.true367:                                 ; preds = %land.lhs.true362
  %238 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5038
  %codec_priv368 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %238, i32 0, i32 5, !dbg !5039
  %data369 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv368, i32 0, i32 2, !dbg !5040
  %239 = load i8*, i8** %data369, align 8, !dbg !5040
  %tobool370 = icmp ne i8* %239, null, !dbg !5041
  br i1 %tobool370, label %if.then371, label %if.else420, !dbg !5042

if.then371:                                       ; preds = %land.lhs.true367
  call void @llvm.dbg.declare(metadata i32* %ret372, metadata !5044, metadata !2574), !dbg !5045
  %240 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5046
  %call373 = call i32 @get_qt_codec(%struct.MatroskaTrack* %240, i32* %fourcc, i32* %codec_id), !dbg !5047
  store i32 %call373, i32* %ret372, align 4, !dbg !5045
  %241 = load i32, i32* %ret372, align 4, !dbg !5048
  %cmp374 = icmp slt i32 %241, 0, !dbg !5050
  br i1 %cmp374, label %if.then376, label %if.end377, !dbg !5051

if.then376:                                       ; preds = %if.then371
  %242 = load i32, i32* %ret372, align 4, !dbg !5052
  store i32 %242, i32* %retval, align 4, !dbg !5053
  br label %return, !dbg !5053

if.end377:                                        ; preds = %if.then371
  %243 = load i32, i32* %codec_id, align 4, !dbg !5054
  %cmp378 = icmp eq i32 %243, 0, !dbg !5056
  br i1 %cmp378, label %land.lhs.true380, label %if.end389, !dbg !5057

land.lhs.true380:                                 ; preds = %if.end377
  %244 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5058
  %codec_priv381 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %244, i32 0, i32 5, !dbg !5060
  %data382 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv381, i32 0, i32 2, !dbg !5061
  %245 = load i8*, i8** %data382, align 8, !dbg !5061
  %add.ptr383 = getelementptr inbounds i8, i8* %245, i64 4, !dbg !5062
  %246 = bitcast i8* %add.ptr383 to %union.unaligned_32*, !dbg !5063
  %l384 = bitcast %union.unaligned_32* %246 to i32*, !dbg !5063
  %247 = load i32, i32* %l384, align 1, !dbg !5063
  %248 = load i32, i32* bitcast ([5 x i8]* @.str.68 to i32*), align 1, !dbg !5064
  %cmp385 = icmp eq i32 %247, %248, !dbg !5065
  br i1 %cmp385, label %if.then387, label %if.end389, !dbg !5066

if.then387:                                       ; preds = %land.lhs.true380
  store i32 860968531, i32* %fourcc, align 4, !dbg !5067
  %249 = load i32, i32* %fourcc, align 4, !dbg !5069
  %call388 = call i32 @ff_codec_get_id(%struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i32 0, i32 0), i32 %249), !dbg !5070
  store i32 %call388, i32* %codec_id, align 4, !dbg !5071
  br label %if.end389, !dbg !5072

if.end389:                                        ; preds = %if.then387, %land.lhs.true380, %if.end377
  %250 = load i32, i32* %codec_id, align 4, !dbg !5073
  %cmp390 = icmp eq i32 %250, 0, !dbg !5075
  br i1 %cmp390, label %if.then392, label %if.end396, !dbg !5076

if.then392:                                       ; preds = %if.end389
  %251 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !5077
  %ctx393 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %251, i32 0, i32 1, !dbg !5078
  %252 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx393, align 8, !dbg !5078
  %253 = bitcast %struct.AVFormatContext* %252 to i8*, !dbg !5077
  %254 = bitcast [32 x i8]* %.compoundliteral to i8*, !dbg !5079
  call void @llvm.memset.p0i8.i64(i8* %254, i8 0, i64 32, i32 1, i1 false), !dbg !5079
  %arrayinit.begin = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral, i64 0, i64 0, !dbg !5080
  store i8 0, i8* %arrayinit.begin, align 1, !dbg !5080
  %arraydecay394 = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral, i32 0, i32 0, !dbg !5079
  %255 = load i32, i32* %fourcc, align 4, !dbg !5081
  %call395 = call i8* @av_fourcc_make_string(i8* %arraydecay394, i32 %255), !dbg !5082
  call void (i8*, i32, i8*, ...) @av_log(i8* %253, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.69, i32 0, i32 0), i8* %call395), !dbg !5084
  br label %if.end396, !dbg !5084

if.end396:                                        ; preds = %if.then392, %if.end389
  %256 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5085
  %codec_priv397 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %256, i32 0, i32 5, !dbg !5086
  %size398 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv397, i32 0, i32 0, !dbg !5087
  %257 = load i32, i32* %size398, align 8, !dbg !5087
  %cmp399 = icmp sge i32 %257, 86, !dbg !5088
  br i1 %cmp399, label %if.then401, label %if.end419, !dbg !5089

if.then401:                                       ; preds = %if.end396
  %258 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5090
  %codec_priv402 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %258, i32 0, i32 5, !dbg !5091
  %data403 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv402, i32 0, i32 2, !dbg !5092
  %259 = load i8*, i8** %data403, align 8, !dbg !5092
  %add.ptr404 = getelementptr inbounds i8, i8* %259, i64 82, !dbg !5093
  %260 = bitcast i8* %add.ptr404 to %union.unaligned_16*, !dbg !5094
  %l405 = bitcast %union.unaligned_16* %260 to i16*, !dbg !5094
  %261 = load i16, i16* %l405, align 1, !dbg !5094
  store i16 %261, i16* %x.addr.i1215, align 2, !dbg !5095
  %262 = load i16, i16* %x.addr.i1215, align 2, !dbg !5096
  %conv.i1216 = zext i16 %262 to i32, !dbg !5096
  %shr.i1217 = ashr i32 %conv.i1216, 8, !dbg !5097
  %263 = load i16, i16* %x.addr.i1215, align 2, !dbg !5098
  %conv1.i1218 = zext i16 %263 to i32, !dbg !5098
  %shl.i1219 = shl i32 %conv1.i1218, 8, !dbg !5099
  %or.i1220 = or i32 %shr.i1217, %shl.i1219, !dbg !5100
  %conv2.i1221 = trunc i32 %or.i1220 to i16, !dbg !5101
  store i16 %conv2.i1221, i16* %x.addr.i1215, align 2, !dbg !5102
  %264 = load i16, i16* %x.addr.i1215, align 2, !dbg !5103
  %conv407 = zext i16 %264 to i32, !dbg !5095
  store i32 %conv407, i32* %bit_depth, align 4, !dbg !5104
  %265 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5105
  %codec_priv408 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %265, i32 0, i32 5, !dbg !5106
  %data409 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv408, i32 0, i32 2, !dbg !5107
  %266 = load i8*, i8** %data409, align 8, !dbg !5107
  %267 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5108
  %codec_priv410 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %267, i32 0, i32 5, !dbg !5109
  %size411 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv410, i32 0, i32 0, !dbg !5110
  %268 = load i32, i32* %size411, align 8, !dbg !5110
  %call412 = call i32 @ffio_init_context(%struct.AVIOContext* %b, i8* %266, i32 %268, i32 0, i8* null, i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null), !dbg !5111
  %269 = load i32, i32* %codec_id, align 4, !dbg !5112
  %270 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5114
  %palette = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %270, i32 0, i32 22, !dbg !5115
  %arraydecay413 = getelementptr inbounds [256 x i32], [256 x i32]* %palette, i32 0, i32 0, !dbg !5114
  %call414 = call i32 @ff_get_qtpalette(i32 %269, %struct.AVIOContext* %b, i32* %arraydecay413), !dbg !5116
  %tobool415 = icmp ne i32 %call414, 0, !dbg !5116
  br i1 %tobool415, label %if.then416, label %if.end418, !dbg !5117

if.then416:                                       ; preds = %if.then401
  %271 = load i32, i32* %bit_depth, align 4, !dbg !5118
  %and417 = and i32 %271, 31, !dbg !5118
  store i32 %and417, i32* %bit_depth, align 4, !dbg !5118
  %272 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5120
  %has_palette = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %272, i32 0, i32 23, !dbg !5121
  store i32 1, i32* %has_palette, align 8, !dbg !5122
  br label %if.end418, !dbg !5123

if.end418:                                        ; preds = %if.then416, %if.then401
  br label %if.end419, !dbg !5124

if.end419:                                        ; preds = %if.end418, %if.end396
  br label %if.end766, !dbg !5125

if.else420:                                       ; preds = %land.lhs.true367, %land.lhs.true362, %if.else358
  %273 = load i32, i32* %codec_id, align 4, !dbg !5126
  %cmp421 = icmp eq i32 %273, 65537, !dbg !5128
  br i1 %cmp421, label %if.then423, label %if.else427, !dbg !5126

if.then423:                                       ; preds = %if.else420
  %274 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5129
  %audio424 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %274, i32 0, i32 13, !dbg !5131
  %bitdepth = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio424, i32 0, i32 2, !dbg !5132
  %275 = load i64, i64* %bitdepth, align 8, !dbg !5132
  switch i64 %275, label %sw.epilog [
    i64 8, label %sw.bb
    i64 24, label %sw.bb425
    i64 32, label %sw.bb426
  ], !dbg !5133

sw.bb:                                            ; preds = %if.then423
  store i32 65541, i32* %codec_id, align 4, !dbg !5134
  br label %sw.epilog, !dbg !5136

sw.bb425:                                         ; preds = %if.then423
  store i32 65549, i32* %codec_id, align 4, !dbg !5137
  br label %sw.epilog, !dbg !5138

sw.bb426:                                         ; preds = %if.then423
  store i32 65545, i32* %codec_id, align 4, !dbg !5139
  br label %sw.epilog, !dbg !5140

sw.epilog:                                        ; preds = %if.then423, %sw.bb426, %sw.bb425, %sw.bb
  br label %if.end765, !dbg !5141

if.else427:                                       ; preds = %if.else420
  %276 = load i32, i32* %codec_id, align 4, !dbg !5142
  %cmp428 = icmp eq i32 %276, 65536, !dbg !5144
  br i1 %cmp428, label %if.then430, label %if.else437, !dbg !5142

if.then430:                                       ; preds = %if.else427
  %277 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5145
  %audio431 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %277, i32 0, i32 13, !dbg !5147
  %bitdepth432 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio431, i32 0, i32 2, !dbg !5148
  %278 = load i64, i64* %bitdepth432, align 8, !dbg !5148
  switch i64 %278, label %sw.epilog436 [
    i64 8, label %sw.bb433
    i64 24, label %sw.bb434
    i64 32, label %sw.bb435
  ], !dbg !5149

sw.bb433:                                         ; preds = %if.then430
  store i32 65541, i32* %codec_id, align 4, !dbg !5150
  br label %sw.epilog436, !dbg !5152

sw.bb434:                                         ; preds = %if.then430
  store i32 65548, i32* %codec_id, align 4, !dbg !5153
  br label %sw.epilog436, !dbg !5154

sw.bb435:                                         ; preds = %if.then430
  store i32 65544, i32* %codec_id, align 4, !dbg !5155
  br label %sw.epilog436, !dbg !5156

sw.epilog436:                                     ; preds = %if.then430, %sw.bb435, %sw.bb434, %sw.bb433
  br label %if.end764, !dbg !5157

if.else437:                                       ; preds = %if.else427
  %279 = load i32, i32* %codec_id, align 4, !dbg !5158
  %cmp438 = icmp eq i32 %279, 65557, !dbg !5160
  br i1 %cmp438, label %land.lhs.true440, label %if.else446, !dbg !5161

land.lhs.true440:                                 ; preds = %if.else437
  %280 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5162
  %audio441 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %280, i32 0, i32 13, !dbg !5163
  %bitdepth442 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio441, i32 0, i32 2, !dbg !5164
  %281 = load i64, i64* %bitdepth442, align 8, !dbg !5164
  %cmp443 = icmp eq i64 %281, 64, !dbg !5165
  br i1 %cmp443, label %if.then445, label %if.else446, !dbg !5166

if.then445:                                       ; preds = %land.lhs.true440
  store i32 65559, i32* %codec_id, align 4, !dbg !5168
  br label %if.end763, !dbg !5170

if.else446:                                       ; preds = %land.lhs.true440, %if.else437
  %282 = load i32, i32* %codec_id, align 4, !dbg !5171
  %cmp447 = icmp eq i32 %282, 86018, !dbg !5173
  br i1 %cmp447, label %land.lhs.true449, label %if.else491, !dbg !5174

land.lhs.true449:                                 ; preds = %if.else446
  %283 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5175
  %codec_priv450 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %283, i32 0, i32 5, !dbg !5177
  %size451 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv450, i32 0, i32 0, !dbg !5178
  %284 = load i32, i32* %size451, align 8, !dbg !5178
  %tobool452 = icmp ne i32 %284, 0, !dbg !5175
  br i1 %tobool452, label %if.else491, label %if.then453, !dbg !5179

if.then453:                                       ; preds = %land.lhs.true449
  call void @llvm.dbg.declare(metadata i32* %profile, metadata !5180, metadata !2574), !dbg !5182
  %285 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5183
  %codec_id454 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %285, i32 0, i32 4, !dbg !5184
  %286 = load i8*, i8** %codec_id454, align 8, !dbg !5184
  %call455 = call i32 @matroska_aac_profile(i8* %286), !dbg !5185
  store i32 %call455, i32* %profile, align 4, !dbg !5182
  call void @llvm.dbg.declare(metadata i32* %sri, metadata !5186, metadata !2574), !dbg !5187
  %287 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5188
  %audio456 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %287, i32 0, i32 13, !dbg !5189
  %samplerate457 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio456, i32 0, i32 0, !dbg !5190
  %288 = load double, double* %samplerate457, align 8, !dbg !5190
  %conv458 = fptosi double %288 to i32, !dbg !5188
  %call459 = call i32 @matroska_aac_sri(i32 %conv458), !dbg !5191
  store i32 %call459, i32* %sri, align 4, !dbg !5187
  %call460 = call noalias i8* @av_mallocz(i64 69), !dbg !5192
  store i8* %call460, i8** %extradata, align 8, !dbg !5193
  %289 = load i8*, i8** %extradata, align 8, !dbg !5194
  %tobool461 = icmp ne i8* %289, null, !dbg !5194
  br i1 %tobool461, label %if.end463, label %if.then462, !dbg !5196

if.then462:                                       ; preds = %if.then453
  store i32 -12, i32* %retval, align 4, !dbg !5197
  br label %return, !dbg !5197

if.end463:                                        ; preds = %if.then453
  %290 = load i32, i32* %profile, align 4, !dbg !5198
  %shl = shl i32 %290, 3, !dbg !5199
  %291 = load i32, i32* %sri, align 4, !dbg !5200
  %and464 = and i32 %291, 14, !dbg !5201
  %shr = ashr i32 %and464, 1, !dbg !5202
  %or = or i32 %shl, %shr, !dbg !5203
  %conv465 = trunc i32 %or to i8, !dbg !5204
  %292 = load i8*, i8** %extradata, align 8, !dbg !5205
  %arrayidx466 = getelementptr inbounds i8, i8* %292, i64 0, !dbg !5205
  store i8 %conv465, i8* %arrayidx466, align 1, !dbg !5206
  %293 = load i32, i32* %sri, align 4, !dbg !5207
  %and467 = and i32 %293, 1, !dbg !5208
  %shl468 = shl i32 %and467, 7, !dbg !5209
  %conv469 = sext i32 %shl468 to i64, !dbg !5210
  %294 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5211
  %audio470 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %294, i32 0, i32 13, !dbg !5212
  %channels = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio470, i32 0, i32 3, !dbg !5213
  %295 = load i64, i64* %channels, align 8, !dbg !5213
  %shl471 = shl i64 %295, 3, !dbg !5214
  %or472 = or i64 %conv469, %shl471, !dbg !5215
  %conv473 = trunc i64 %or472 to i8, !dbg !5210
  %296 = load i8*, i8** %extradata, align 8, !dbg !5216
  %arrayidx474 = getelementptr inbounds i8, i8* %296, i64 1, !dbg !5216
  store i8 %conv473, i8* %arrayidx474, align 1, !dbg !5217
  %297 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5218
  %codec_id475 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %297, i32 0, i32 4, !dbg !5220
  %298 = load i8*, i8** %codec_id475, align 8, !dbg !5220
  %call476 = call i8* @strstr(i8* %298, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i32 0, i32 0)) #10, !dbg !5221
  %tobool477 = icmp ne i8* %call476, null, !dbg !5221
  br i1 %tobool477, label %if.then478, label %if.else489, !dbg !5222

if.then478:                                       ; preds = %if.end463
  %299 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5223
  %audio479 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %299, i32 0, i32 13, !dbg !5225
  %out_samplerate480 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio479, i32 0, i32 1, !dbg !5226
  %300 = load double, double* %out_samplerate480, align 8, !dbg !5226
  %conv481 = fptosi double %300 to i32, !dbg !5223
  %call482 = call i32 @matroska_aac_sri(i32 %conv481), !dbg !5227
  store i32 %call482, i32* %sri, align 4, !dbg !5228
  %301 = load i8*, i8** %extradata, align 8, !dbg !5229
  %arrayidx483 = getelementptr inbounds i8, i8* %301, i64 2, !dbg !5229
  store i8 86, i8* %arrayidx483, align 1, !dbg !5230
  %302 = load i8*, i8** %extradata, align 8, !dbg !5231
  %arrayidx484 = getelementptr inbounds i8, i8* %302, i64 3, !dbg !5231
  store i8 -27, i8* %arrayidx484, align 1, !dbg !5232
  %303 = load i32, i32* %sri, align 4, !dbg !5233
  %shl485 = shl i32 %303, 3, !dbg !5234
  %or486 = or i32 128, %shl485, !dbg !5235
  %conv487 = trunc i32 %or486 to i8, !dbg !5236
  %304 = load i8*, i8** %extradata, align 8, !dbg !5237
  %arrayidx488 = getelementptr inbounds i8, i8* %304, i64 4, !dbg !5237
  store i8 %conv487, i8* %arrayidx488, align 1, !dbg !5238
  store i32 5, i32* %extradata_size, align 4, !dbg !5239
  br label %if.end490, !dbg !5240

if.else489:                                       ; preds = %if.end463
  store i32 2, i32* %extradata_size, align 4, !dbg !5241
  br label %if.end490

if.end490:                                        ; preds = %if.else489, %if.then478
  br label %if.end762, !dbg !5242

if.else491:                                       ; preds = %land.lhs.true449, %if.else446
  %305 = load i32, i32* %codec_id, align 4, !dbg !5243
  %cmp492 = icmp eq i32 %305, 86032, !dbg !5245
  br i1 %cmp492, label %land.lhs.true494, label %if.else525, !dbg !5246

land.lhs.true494:                                 ; preds = %if.else491
  %306 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5247
  %codec_priv495 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %306, i32 0, i32 5, !dbg !5249
  %size496 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv495, i32 0, i32 0, !dbg !5250
  %307 = load i32, i32* %size496, align 8, !dbg !5250
  %tobool497 = icmp ne i32 %307, 0, !dbg !5247
  br i1 %tobool497, label %land.lhs.true498, label %if.else525, !dbg !5251

land.lhs.true498:                                 ; preds = %land.lhs.true494
  %308 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5252
  %codec_priv499 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %308, i32 0, i32 5, !dbg !5254
  %size500 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv499, i32 0, i32 0, !dbg !5255
  %309 = load i32, i32* %size500, align 8, !dbg !5255
  %cmp501 = icmp slt i32 %309, 2147483571, !dbg !5256
  br i1 %cmp501, label %if.then503, label %if.else525, !dbg !5257

if.then503:                                       ; preds = %land.lhs.true498
  %310 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5258
  %codec_priv504 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %310, i32 0, i32 5, !dbg !5259
  %size505 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv504, i32 0, i32 0, !dbg !5260
  %311 = load i32, i32* %size505, align 8, !dbg !5260
  %add506 = add nsw i32 12, %311, !dbg !5261
  store i32 %add506, i32* %extradata_size, align 4, !dbg !5262
  %312 = load i32, i32* %extradata_size, align 4, !dbg !5263
  %add507 = add nsw i32 %312, 64, !dbg !5264
  %conv508 = sext i32 %add507 to i64, !dbg !5263
  %call509 = call noalias i8* @av_mallocz(i64 %conv508), !dbg !5265
  store i8* %call509, i8** %extradata, align 8, !dbg !5266
  %313 = load i8*, i8** %extradata, align 8, !dbg !5267
  %tobool510 = icmp ne i8* %313, null, !dbg !5267
  br i1 %tobool510, label %if.end512, label %if.then511, !dbg !5269

if.then511:                                       ; preds = %if.then503
  store i32 -12, i32* %retval, align 4, !dbg !5270
  br label %return, !dbg !5270

if.end512:                                        ; preds = %if.then503
  %314 = load i32, i32* %extradata_size, align 4, !dbg !5271
  store i32 %314, i32* %x.addr.i1222, align 4, !dbg !5272
  %315 = load i32, i32* %x.addr.i1222, align 4, !dbg !5273
  %shl.i1223 = shl i32 %315, 8, !dbg !5274
  %and.i = and i32 %shl.i1223, 65280, !dbg !5275
  %316 = load i32, i32* %x.addr.i1222, align 4, !dbg !5276
  %shr.i1224 = lshr i32 %316, 8, !dbg !5277
  %and1.i = and i32 %shr.i1224, 255, !dbg !5278
  %or.i1225 = or i32 %and.i, %and1.i, !dbg !5279
  %shl2.i = shl i32 %or.i1225, 16, !dbg !5280
  %317 = load i32, i32* %x.addr.i1222, align 4, !dbg !5281
  %shr3.i = lshr i32 %317, 16, !dbg !5282
  %shl4.i = shl i32 %shr3.i, 8, !dbg !5283
  %and5.i = and i32 %shl4.i, 65280, !dbg !5284
  %318 = load i32, i32* %x.addr.i1222, align 4, !dbg !5285
  %shr6.i = lshr i32 %318, 16, !dbg !5286
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !5287
  %and8.i = and i32 %shr7.i, 255, !dbg !5288
  %or9.i = or i32 %and5.i, %and8.i, !dbg !5289
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !5290
  %319 = load i8*, i8** %extradata, align 8, !dbg !5291
  %320 = bitcast i8* %319 to %union.unaligned_32*, !dbg !5292
  %l514 = bitcast %union.unaligned_32* %320 to i32*, !dbg !5292
  store i32 %or10.i, i32* %l514, align 1, !dbg !5293
  %321 = load i8*, i8** %extradata, align 8, !dbg !5294
  %arrayidx515 = getelementptr inbounds i8, i8* %321, i64 4, !dbg !5294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx515, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i32 0, i32 0), i64 4, i32 1, i1 false), !dbg !5295
  store i32 0, i32* %x.addr.i1226, align 4, !dbg !5296
  %322 = load i32, i32* %x.addr.i1226, align 4, !dbg !5297
  %shl.i1227 = shl i32 %322, 8, !dbg !5298
  %and.i1228 = and i32 %shl.i1227, 65280, !dbg !5299
  %323 = load i32, i32* %x.addr.i1226, align 4, !dbg !5300
  %shr.i1229 = lshr i32 %323, 8, !dbg !5301
  %and1.i1230 = and i32 %shr.i1229, 255, !dbg !5302
  %or.i1231 = or i32 %and.i1228, %and1.i1230, !dbg !5303
  %shl2.i1232 = shl i32 %or.i1231, 16, !dbg !5304
  %324 = load i32, i32* %x.addr.i1226, align 4, !dbg !5305
  %shr3.i1233 = lshr i32 %324, 16, !dbg !5306
  %shl4.i1234 = shl i32 %shr3.i1233, 8, !dbg !5307
  %and5.i1235 = and i32 %shl4.i1234, 65280, !dbg !5308
  %325 = load i32, i32* %x.addr.i1226, align 4, !dbg !5309
  %shr6.i1236 = lshr i32 %325, 16, !dbg !5310
  %shr7.i1237 = lshr i32 %shr6.i1236, 8, !dbg !5311
  %and8.i1238 = and i32 %shr7.i1237, 255, !dbg !5312
  %or9.i1239 = or i32 %and5.i1235, %and8.i1238, !dbg !5313
  %or10.i1240 = or i32 %shl2.i1232, %or9.i1239, !dbg !5314
  %326 = load i8*, i8** %extradata, align 8, !dbg !5315
  %arrayidx517 = getelementptr inbounds i8, i8* %326, i64 8, !dbg !5315
  %327 = bitcast i8* %arrayidx517 to %union.unaligned_32*, !dbg !5316
  %l518 = bitcast %union.unaligned_32* %327 to i32*, !dbg !5316
  store i32 %or10.i1240, i32* %l518, align 1, !dbg !5317
  %328 = load i8*, i8** %extradata, align 8, !dbg !5318
  %arrayidx519 = getelementptr inbounds i8, i8* %328, i64 12, !dbg !5318
  %329 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5319
  %codec_priv520 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %329, i32 0, i32 5, !dbg !5320
  %data521 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv520, i32 0, i32 2, !dbg !5321
  %330 = load i8*, i8** %data521, align 8, !dbg !5321
  %331 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5322
  %codec_priv522 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %331, i32 0, i32 5, !dbg !5323
  %size523 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv522, i32 0, i32 0, !dbg !5324
  %332 = load i32, i32* %size523, align 8, !dbg !5324
  %conv524 = sext i32 %332 to i64, !dbg !5322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx519, i8* %330, i64 %conv524, i32 1, i1 false), !dbg !5325
  br label %if.end761, !dbg !5326

if.else525:                                       ; preds = %land.lhs.true498, %land.lhs.true494, %if.else491
  %333 = load i32, i32* %codec_id, align 4, !dbg !5327
  %cmp526 = icmp eq i32 %333, 86038, !dbg !5330
  br i1 %cmp526, label %if.then528, label %if.else585, !dbg !5327

if.then528:                                       ; preds = %if.else525
  store i32 30, i32* %extradata_size, align 4, !dbg !5331
  %334 = load i32, i32* %extradata_size, align 4, !dbg !5333
  %add529 = add nsw i32 %334, 64, !dbg !5334
  %conv530 = sext i32 %add529 to i64, !dbg !5333
  %call531 = call noalias i8* @av_mallocz(i64 %conv530), !dbg !5335
  store i8* %call531, i8** %extradata, align 8, !dbg !5336
  %335 = load i8*, i8** %extradata, align 8, !dbg !5337
  %tobool532 = icmp ne i8* %335, null, !dbg !5337
  br i1 %tobool532, label %if.end534, label %if.then533, !dbg !5339

if.then533:                                       ; preds = %if.then528
  store i32 -12, i32* %retval, align 4, !dbg !5340
  br label %return, !dbg !5340

if.end534:                                        ; preds = %if.then528
  %336 = load i8*, i8** %extradata, align 8, !dbg !5341
  %337 = load i32, i32* %extradata_size, align 4, !dbg !5342
  %call535 = call i32 @ffio_init_context(%struct.AVIOContext* %b, i8* %336, i32 %337, i32 1, i8* null, i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null), !dbg !5343
  call void @avio_write(%struct.AVIOContext* %b, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0), i32 4), !dbg !5344
  call void @avio_wl16(%struct.AVIOContext* %b, i32 1), !dbg !5345
  %338 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5346
  %audio536 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %338, i32 0, i32 13, !dbg !5348
  %channels537 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio536, i32 0, i32 3, !dbg !5349
  %339 = load i64, i64* %channels537, align 8, !dbg !5349
  %cmp538 = icmp ugt i64 %339, 65535, !dbg !5350
  br i1 %cmp538, label %if.then545, label %lor.lhs.false540, !dbg !5351

lor.lhs.false540:                                 ; preds = %if.end534
  %340 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5352
  %audio541 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %340, i32 0, i32 13, !dbg !5353
  %bitdepth542 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio541, i32 0, i32 2, !dbg !5354
  %341 = load i64, i64* %bitdepth542, align 8, !dbg !5354
  %cmp543 = icmp ugt i64 %341, 65535, !dbg !5355
  br i1 %cmp543, label %if.then545, label %if.end556, !dbg !5356

if.then545:                                       ; preds = %lor.lhs.false540, %if.end534
  %342 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !5358
  %ctx546 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %342, i32 0, i32 1, !dbg !5360
  %343 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx546, align 8, !dbg !5360
  %344 = bitcast %struct.AVFormatContext* %343 to i8*, !dbg !5358
  %345 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5361
  %audio547 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %345, i32 0, i32 13, !dbg !5362
  %channels548 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio547, i32 0, i32 3, !dbg !5363
  %346 = load i64, i64* %channels548, align 8, !dbg !5363
  %347 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5364
  %audio549 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %347, i32 0, i32 13, !dbg !5365
  %bitdepth550 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio549, i32 0, i32 2, !dbg !5366
  %348 = load i64, i64* %bitdepth550, align 8, !dbg !5366
  call void (i8*, i32, i8*, ...) @av_log(i8* %344, i32 24, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.73, i32 0, i32 0), i64 %346, i64 %348), !dbg !5367
  %349 = bitcast i8** %extradata to i8*, !dbg !5368
  call void @av_freep(i8* %349), !dbg !5369
  %350 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !5370
  %ctx551 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %350, i32 0, i32 1, !dbg !5372
  %351 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx551, align 8, !dbg !5372
  %error_recognition = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %351, i32 0, i32 32, !dbg !5373
  %352 = load i32, i32* %error_recognition, align 4, !dbg !5373
  %and552 = and i32 %352, 8, !dbg !5374
  %tobool553 = icmp ne i32 %and552, 0, !dbg !5374
  br i1 %tobool553, label %if.then554, label %if.else555, !dbg !5375

if.then554:                                       ; preds = %if.then545
  store i32 -1094995529, i32* %retval, align 4, !dbg !5376
  br label %return, !dbg !5376

if.else555:                                       ; preds = %if.then545
  br label %for.inc1212, !dbg !5377

if.end556:                                        ; preds = %lor.lhs.false540
  %353 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5378
  %audio557 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %353, i32 0, i32 13, !dbg !5379
  %channels558 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio557, i32 0, i32 3, !dbg !5380
  %354 = load i64, i64* %channels558, align 8, !dbg !5380
  %conv559 = trunc i64 %354 to i32, !dbg !5378
  call void @avio_wl16(%struct.AVIOContext* %b, i32 %conv559), !dbg !5381
  %355 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5382
  %audio560 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %355, i32 0, i32 13, !dbg !5383
  %bitdepth561 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio560, i32 0, i32 2, !dbg !5384
  %356 = load i64, i64* %bitdepth561, align 8, !dbg !5384
  %conv562 = trunc i64 %356 to i32, !dbg !5382
  call void @avio_wl16(%struct.AVIOContext* %b, i32 %conv562), !dbg !5385
  %357 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5386
  %audio563 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %357, i32 0, i32 13, !dbg !5388
  %out_samplerate564 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio563, i32 0, i32 1, !dbg !5389
  %358 = load double, double* %out_samplerate564, align 8, !dbg !5389
  %cmp565 = fcmp olt double %358, 0.000000e+00, !dbg !5390
  br i1 %cmp565, label %if.then572, label %lor.lhs.false567, !dbg !5391

lor.lhs.false567:                                 ; preds = %if.end556
  %359 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5392
  %audio568 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %359, i32 0, i32 13, !dbg !5394
  %out_samplerate569 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio568, i32 0, i32 1, !dbg !5395
  %360 = load double, double* %out_samplerate569, align 8, !dbg !5395
  %cmp570 = fcmp ogt double %360, 0x41DFFFFFFFC00000, !dbg !5396
  br i1 %cmp570, label %if.then572, label %if.end573, !dbg !5397

if.then572:                                       ; preds = %lor.lhs.false567, %if.end556
  store i32 -1094995529, i32* %retval, align 4, !dbg !5398
  br label %return, !dbg !5398

if.end573:                                        ; preds = %lor.lhs.false567
  %361 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5399
  %audio574 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %361, i32 0, i32 13, !dbg !5400
  %out_samplerate575 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio574, i32 0, i32 1, !dbg !5401
  %362 = load double, double* %out_samplerate575, align 8, !dbg !5401
  %conv576 = fptoui double %362 to i32, !dbg !5399
  call void @avio_wl32(%struct.AVIOContext* %b, i32 %conv576), !dbg !5402
  %363 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !5403
  %duration = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %363, i32 0, i32 7, !dbg !5404
  %364 = load double, double* %duration, align 8, !dbg !5404
  %365 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !5405
  %time_scale = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %365, i32 0, i32 6, !dbg !5406
  %366 = load i64, i64* %time_scale, align 8, !dbg !5406
  %conv577 = uitofp i64 %366 to double, !dbg !5405
  %mul578 = fmul double %364, %conv577, !dbg !5407
  %conv579 = fptosi double %mul578 to i64, !dbg !5408
  %367 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5409
  %audio580 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %367, i32 0, i32 13, !dbg !5410
  %out_samplerate581 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio580, i32 0, i32 1, !dbg !5411
  %368 = load double, double* %out_samplerate581, align 8, !dbg !5411
  %conv582 = fptosi double %368 to i64, !dbg !5409
  %call583 = call i64 @av_rescale(i64 %conv579, i64 %conv582, i64 1000000000) #1, !dbg !5412
  %conv584 = trunc i64 %call583 to i32, !dbg !5412
  call void @avio_wl32(%struct.AVIOContext* %b, i32 %conv584), !dbg !5413
  br label %if.end760, !dbg !5414

if.else585:                                       ; preds = %if.else525
  %369 = load i32, i32* %codec_id, align 4, !dbg !5415
  %cmp586 = icmp eq i32 %369, 5, !dbg !5418
  br i1 %cmp586, label %if.then597, label %lor.lhs.false588, !dbg !5419

lor.lhs.false588:                                 ; preds = %if.else585
  %370 = load i32, i32* %codec_id, align 4, !dbg !5420
  %cmp589 = icmp eq i32 %370, 6, !dbg !5421
  br i1 %cmp589, label %if.then597, label %lor.lhs.false591, !dbg !5422

lor.lhs.false591:                                 ; preds = %lor.lhs.false588
  %371 = load i32, i32* %codec_id, align 4, !dbg !5423
  %cmp592 = icmp eq i32 %371, 68, !dbg !5424
  br i1 %cmp592, label %if.then597, label %lor.lhs.false594, !dbg !5425

lor.lhs.false594:                                 ; preds = %lor.lhs.false591
  %372 = load i32, i32* %codec_id, align 4, !dbg !5426
  %cmp595 = icmp eq i32 %372, 69, !dbg !5427
  br i1 %cmp595, label %if.then597, label %if.else598, !dbg !5428

if.then597:                                       ; preds = %lor.lhs.false594, %lor.lhs.false591, %lor.lhs.false588, %if.else585
  store i32 26, i32* %extradata_offset, align 4, !dbg !5430
  br label %if.end759, !dbg !5432

if.else598:                                       ; preds = %lor.lhs.false594
  %373 = load i32, i32* %codec_id, align 4, !dbg !5433
  %cmp599 = icmp eq i32 %373, 77824, !dbg !5436
  br i1 %cmp599, label %if.then601, label %if.else606, !dbg !5433

if.then601:                                       ; preds = %if.else598
  %374 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5437
  %audio602 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %374, i32 0, i32 13, !dbg !5439
  %out_samplerate603 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio602, i32 0, i32 1, !dbg !5440
  store double 8.000000e+03, double* %out_samplerate603, align 8, !dbg !5441
  %375 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5442
  %audio604 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %375, i32 0, i32 13, !dbg !5443
  %channels605 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio604, i32 0, i32 3, !dbg !5444
  store i64 1, i64* %channels605, align 8, !dbg !5445
  br label %if.end758, !dbg !5446

if.else606:                                       ; preds = %if.else598
  %376 = load i32, i32* %codec_id, align 4, !dbg !5447
  %cmp607 = icmp eq i32 %376, 77825, !dbg !5450
  br i1 %cmp607, label %land.lhs.true618, label %lor.lhs.false609, !dbg !5451

lor.lhs.false609:                                 ; preds = %if.else606
  %377 = load i32, i32* %codec_id, align 4, !dbg !5452
  %cmp610 = icmp eq i32 %377, 86036, !dbg !5453
  br i1 %cmp610, label %land.lhs.true618, label %lor.lhs.false612, !dbg !5454

lor.lhs.false612:                                 ; preds = %lor.lhs.false609
  %378 = load i32, i32* %codec_id, align 4, !dbg !5455
  %cmp613 = icmp eq i32 %378, 86047, !dbg !5456
  br i1 %cmp613, label %land.lhs.true618, label %lor.lhs.false615, !dbg !5457

lor.lhs.false615:                                 ; preds = %lor.lhs.false612
  %379 = load i32, i32* %codec_id, align 4, !dbg !5458
  %cmp616 = icmp eq i32 %379, 86057, !dbg !5459
  br i1 %cmp616, label %land.lhs.true618, label %if.else710, !dbg !5460

land.lhs.true618:                                 ; preds = %lor.lhs.false615, %lor.lhs.false612, %lor.lhs.false609, %if.else606
  %380 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5461
  %codec_priv619 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %380, i32 0, i32 5, !dbg !5462
  %data620 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv619, i32 0, i32 2, !dbg !5463
  %381 = load i8*, i8** %data620, align 8, !dbg !5463
  %tobool621 = icmp ne i8* %381, null, !dbg !5461
  br i1 %tobool621, label %if.then622, label %if.else710, !dbg !5464

if.then622:                                       ; preds = %land.lhs.true618
  call void @llvm.dbg.declare(metadata i32* %flavor, metadata !5466, metadata !2574), !dbg !5468
  %382 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5469
  %codec_priv623 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %382, i32 0, i32 5, !dbg !5470
  %data624 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv623, i32 0, i32 2, !dbg !5471
  %383 = load i8*, i8** %data624, align 8, !dbg !5471
  %384 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5472
  %codec_priv625 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %384, i32 0, i32 5, !dbg !5473
  %size626 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv625, i32 0, i32 0, !dbg !5474
  %385 = load i32, i32* %size626, align 8, !dbg !5474
  %call627 = call i32 @ffio_init_context(%struct.AVIOContext* %b, i8* %383, i32 %385, i32 0, i8* null, i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null), !dbg !5475
  %call628 = call i64 @avio_skip(%struct.AVIOContext* %b, i64 22), !dbg !5476
  %call629 = call i32 @avio_rb16(%struct.AVIOContext* %b), !dbg !5477
  store i32 %call629, i32* %flavor, align 4, !dbg !5478
  %call630 = call i32 @avio_rb32(%struct.AVIOContext* %b), !dbg !5479
  %386 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5480
  %audio631 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %386, i32 0, i32 13, !dbg !5481
  %coded_framesize = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio631, i32 0, i32 4, !dbg !5482
  store i32 %call630, i32* %coded_framesize, align 8, !dbg !5483
  %call632 = call i64 @avio_skip(%struct.AVIOContext* %b, i64 12), !dbg !5484
  %call633 = call i32 @avio_rb16(%struct.AVIOContext* %b), !dbg !5485
  %387 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5486
  %audio634 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %387, i32 0, i32 13, !dbg !5487
  %sub_packet_h = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio634, i32 0, i32 5, !dbg !5488
  store i32 %call633, i32* %sub_packet_h, align 4, !dbg !5489
  %call635 = call i32 @avio_rb16(%struct.AVIOContext* %b), !dbg !5490
  %388 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5491
  %audio636 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %388, i32 0, i32 13, !dbg !5492
  %frame_size = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio636, i32 0, i32 6, !dbg !5493
  store i32 %call635, i32* %frame_size, align 8, !dbg !5494
  %call637 = call i32 @avio_rb16(%struct.AVIOContext* %b), !dbg !5495
  %389 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5496
  %audio638 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %389, i32 0, i32 13, !dbg !5497
  %sub_packet_size = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio638, i32 0, i32 7, !dbg !5498
  store i32 %call637, i32* %sub_packet_size, align 4, !dbg !5499
  %390 = load i32, i32* %flavor, align 4, !dbg !5500
  %cmp639 = icmp slt i32 %390, 0, !dbg !5502
  br i1 %cmp639, label %if.then664, label %lor.lhs.false641, !dbg !5503

lor.lhs.false641:                                 ; preds = %if.then622
  %391 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5504
  %audio642 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %391, i32 0, i32 13, !dbg !5505
  %coded_framesize643 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio642, i32 0, i32 4, !dbg !5506
  %392 = load i32, i32* %coded_framesize643, align 8, !dbg !5506
  %cmp644 = icmp sle i32 %392, 0, !dbg !5507
  br i1 %cmp644, label %if.then664, label %lor.lhs.false646, !dbg !5508

lor.lhs.false646:                                 ; preds = %lor.lhs.false641
  %393 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5509
  %audio647 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %393, i32 0, i32 13, !dbg !5510
  %sub_packet_h648 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio647, i32 0, i32 5, !dbg !5511
  %394 = load i32, i32* %sub_packet_h648, align 4, !dbg !5511
  %cmp649 = icmp sle i32 %394, 0, !dbg !5512
  br i1 %cmp649, label %if.then664, label %lor.lhs.false651, !dbg !5513

lor.lhs.false651:                                 ; preds = %lor.lhs.false646
  %395 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5514
  %audio652 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %395, i32 0, i32 13, !dbg !5515
  %frame_size653 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio652, i32 0, i32 6, !dbg !5516
  %396 = load i32, i32* %frame_size653, align 8, !dbg !5516
  %cmp654 = icmp sle i32 %396, 0, !dbg !5517
  br i1 %cmp654, label %if.then664, label %lor.lhs.false656, !dbg !5518

lor.lhs.false656:                                 ; preds = %lor.lhs.false651
  %397 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5519
  %audio657 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %397, i32 0, i32 13, !dbg !5520
  %sub_packet_size658 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio657, i32 0, i32 7, !dbg !5521
  %398 = load i32, i32* %sub_packet_size658, align 4, !dbg !5521
  %cmp659 = icmp sle i32 %398, 0, !dbg !5522
  br i1 %cmp659, label %land.lhs.true661, label %if.end665, !dbg !5523

land.lhs.true661:                                 ; preds = %lor.lhs.false656
  %399 = load i32, i32* %codec_id, align 4, !dbg !5524
  %cmp662 = icmp ne i32 %399, 86057, !dbg !5526
  br i1 %cmp662, label %if.then664, label %if.end665, !dbg !5527

if.then664:                                       ; preds = %land.lhs.true661, %lor.lhs.false651, %lor.lhs.false646, %lor.lhs.false641, %if.then622
  store i32 -1094995529, i32* %retval, align 4, !dbg !5529
  br label %return, !dbg !5529

if.end665:                                        ; preds = %land.lhs.true661, %lor.lhs.false656
  %400 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5530
  %audio666 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %400, i32 0, i32 13, !dbg !5531
  %sub_packet_h667 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio666, i32 0, i32 5, !dbg !5532
  %401 = load i32, i32* %sub_packet_h667, align 4, !dbg !5532
  %conv668 = sext i32 %401 to i64, !dbg !5530
  %402 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5533
  %audio669 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %402, i32 0, i32 13, !dbg !5534
  %frame_size670 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio669, i32 0, i32 6, !dbg !5535
  %403 = load i32, i32* %frame_size670, align 8, !dbg !5535
  %conv671 = sext i32 %403 to i64, !dbg !5533
  %call672 = call i8* @av_malloc_array(i64 %conv668, i64 %conv671), !dbg !5536
  %404 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5537
  %audio673 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %404, i32 0, i32 13, !dbg !5538
  %buf674 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio673, i32 0, i32 11, !dbg !5539
  store i8* %call672, i8** %buf674, align 8, !dbg !5540
  %405 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5541
  %audio675 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %405, i32 0, i32 13, !dbg !5543
  %buf676 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio675, i32 0, i32 11, !dbg !5544
  %406 = load i8*, i8** %buf676, align 8, !dbg !5544
  %tobool677 = icmp ne i8* %406, null, !dbg !5541
  br i1 %tobool677, label %if.end679, label %if.then678, !dbg !5545

if.then678:                                       ; preds = %if.end665
  store i32 -12, i32* %retval, align 4, !dbg !5546
  br label %return, !dbg !5546

if.end679:                                        ; preds = %if.end665
  %407 = load i32, i32* %codec_id, align 4, !dbg !5547
  %cmp680 = icmp eq i32 %407, 77825, !dbg !5549
  br i1 %cmp680, label %if.then682, label %if.else688, !dbg !5550

if.then682:                                       ; preds = %if.end679
  %408 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5551
  %audio683 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %408, i32 0, i32 13, !dbg !5553
  %coded_framesize684 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio683, i32 0, i32 4, !dbg !5554
  %409 = load i32, i32* %coded_framesize684, align 8, !dbg !5554
  %410 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5555
  %codecpar685 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %410, i32 0, i32 19, !dbg !5556
  %411 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar685, align 8, !dbg !5556
  %block_align = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %411, i32 0, i32 24, !dbg !5557
  store i32 %409, i32* %block_align, align 8, !dbg !5558
  %412 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5559
  %codec_priv686 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %412, i32 0, i32 5, !dbg !5560
  %size687 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv686, i32 0, i32 0, !dbg !5561
  store i32 0, i32* %size687, align 8, !dbg !5562
  br label %if.end709, !dbg !5563

if.else688:                                       ; preds = %if.end679
  %413 = load i32, i32* %codec_id, align 4, !dbg !5564
  %cmp689 = icmp eq i32 %413, 86057, !dbg !5567
  br i1 %cmp689, label %land.lhs.true691, label %if.end704, !dbg !5568

land.lhs.true691:                                 ; preds = %if.else688
  %414 = load i32, i32* %flavor, align 4, !dbg !5569
  %cmp692 = icmp slt i32 %414, 4, !dbg !5571
  br i1 %cmp692, label %if.then694, label %if.end704, !dbg !5572

if.then694:                                       ; preds = %land.lhs.true691
  %415 = load i32, i32* %flavor, align 4, !dbg !5573
  %idxprom695 = sext i32 %415 to i64, !dbg !5575
  %arrayidx696 = getelementptr inbounds [4 x i8], [4 x i8]* @ff_sipr_subpk_size, i64 0, i64 %idxprom695, !dbg !5575
  %416 = load i8, i8* %arrayidx696, align 1, !dbg !5575
  %conv697 = zext i8 %416 to i32, !dbg !5575
  %417 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5576
  %audio698 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %417, i32 0, i32 13, !dbg !5577
  %sub_packet_size699 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio698, i32 0, i32 7, !dbg !5578
  store i32 %conv697, i32* %sub_packet_size699, align 4, !dbg !5579
  %418 = load i32, i32* %flavor, align 4, !dbg !5580
  %idxprom700 = sext i32 %418 to i64, !dbg !5581
  %arrayidx701 = getelementptr inbounds [4 x i32], [4 x i32]* @matroska_parse_tracks.sipr_bit_rate, i64 0, i64 %idxprom700, !dbg !5581
  %419 = load i32, i32* %arrayidx701, align 4, !dbg !5581
  %conv702 = sext i32 %419 to i64, !dbg !5581
  %420 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5582
  %codecpar703 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %420, i32 0, i32 19, !dbg !5583
  %421 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar703, align 8, !dbg !5583
  %bit_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %421, i32 0, i32 6, !dbg !5584
  store i64 %conv702, i64* %bit_rate, align 8, !dbg !5585
  br label %if.end704, !dbg !5586

if.end704:                                        ; preds = %if.then694, %land.lhs.true691, %if.else688
  %422 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5587
  %audio705 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %422, i32 0, i32 13, !dbg !5588
  %sub_packet_size706 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio705, i32 0, i32 7, !dbg !5589
  %423 = load i32, i32* %sub_packet_size706, align 4, !dbg !5589
  %424 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5590
  %codecpar707 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %424, i32 0, i32 19, !dbg !5591
  %425 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar707, align 8, !dbg !5591
  %block_align708 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %425, i32 0, i32 24, !dbg !5592
  store i32 %423, i32* %block_align708, align 8, !dbg !5593
  store i32 78, i32* %extradata_offset, align 4, !dbg !5594
  br label %if.end709

if.end709:                                        ; preds = %if.end704, %if.then682
  br label %if.end757, !dbg !5595

if.else710:                                       ; preds = %land.lhs.true618, %lor.lhs.false615
  %426 = load i32, i32* %codec_id, align 4, !dbg !5596
  %cmp711 = icmp eq i32 %426, 86028, !dbg !5599
  br i1 %cmp711, label %land.lhs.true713, label %if.else723, !dbg !5600

land.lhs.true713:                                 ; preds = %if.else710
  %427 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5601
  %codec_priv714 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %427, i32 0, i32 5, !dbg !5603
  %size715 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv714, i32 0, i32 0, !dbg !5604
  %428 = load i32, i32* %size715, align 8, !dbg !5604
  %tobool716 = icmp ne i32 %428, 0, !dbg !5601
  br i1 %tobool716, label %if.then717, label %if.else723, !dbg !5605

if.then717:                                       ; preds = %land.lhs.true713
  %429 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5606
  %430 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5608
  %call718 = call i32 @matroska_parse_flac(%struct.AVFormatContext* %429, %struct.MatroskaTrack* %430, i32* %extradata_offset), !dbg !5609
  store i32 %call718, i32* %ret, align 4, !dbg !5610
  %431 = load i32, i32* %ret, align 4, !dbg !5611
  %cmp719 = icmp slt i32 %431, 0, !dbg !5613
  br i1 %cmp719, label %if.then721, label %if.end722, !dbg !5614

if.then721:                                       ; preds = %if.then717
  %432 = load i32, i32* %ret, align 4, !dbg !5615
  store i32 %432, i32* %retval, align 4, !dbg !5616
  br label %return, !dbg !5616

if.end722:                                        ; preds = %if.then717
  br label %if.end756, !dbg !5617

if.else723:                                       ; preds = %land.lhs.true713, %if.else710
  %433 = load i32, i32* %codec_id, align 4, !dbg !5618
  %cmp724 = icmp eq i32 %433, 147, !dbg !5621
  br i1 %cmp724, label %land.lhs.true726, label %if.else735, !dbg !5622

land.lhs.true726:                                 ; preds = %if.else723
  %434 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5623
  %codec_priv727 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %434, i32 0, i32 5, !dbg !5625
  %size728 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv727, i32 0, i32 0, !dbg !5626
  %435 = load i32, i32* %size728, align 8, !dbg !5626
  %cmp729 = icmp eq i32 %435, 4, !dbg !5627
  br i1 %cmp729, label %if.then731, label %if.else735, !dbg !5628

if.then731:                                       ; preds = %land.lhs.true726
  %436 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5629
  %codec_priv732 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %436, i32 0, i32 5, !dbg !5631
  %data733 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv732, i32 0, i32 2, !dbg !5632
  %437 = load i8*, i8** %data733, align 8, !dbg !5632
  %438 = bitcast i8* %437 to %union.unaligned_32*, !dbg !5633
  %l734 = bitcast %union.unaligned_32* %438 to i32*, !dbg !5633
  %439 = load i32, i32* %l734, align 1, !dbg !5633
  store i32 %439, i32* %fourcc, align 4, !dbg !5634
  br label %if.end755, !dbg !5635

if.else735:                                       ; preds = %land.lhs.true726, %if.else723
  %440 = load i32, i32* %codec_id, align 4, !dbg !5636
  %cmp736 = icmp eq i32 %440, 167, !dbg !5639
  br i1 %cmp736, label %land.lhs.true738, label %if.else745, !dbg !5640

land.lhs.true738:                                 ; preds = %if.else735
  %441 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5641
  %codec_priv739 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %441, i32 0, i32 5, !dbg !5643
  %size740 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv739, i32 0, i32 0, !dbg !5644
  %442 = load i32, i32* %size740, align 8, !dbg !5644
  %tobool741 = icmp ne i32 %442, 0, !dbg !5641
  br i1 %tobool741, label %if.then742, label %if.else745, !dbg !5645

if.then742:                                       ; preds = %land.lhs.true738
  %443 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5646
  %codec_priv743 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %443, i32 0, i32 5, !dbg !5648
  %size744 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv743, i32 0, i32 0, !dbg !5649
  store i32 0, i32* %size744, align 8, !dbg !5650
  br label %if.end754, !dbg !5651

if.else745:                                       ; preds = %land.lhs.true738, %if.else735
  %444 = load i32, i32* %codec_id, align 4, !dbg !5652
  %cmp746 = icmp eq i32 %444, 32797, !dbg !5655
  br i1 %cmp746, label %land.lhs.true748, label %if.end753, !dbg !5656

land.lhs.true748:                                 ; preds = %if.else745
  %445 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5657
  %codec_priv749 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %445, i32 0, i32 5, !dbg !5659
  %size750 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv749, i32 0, i32 0, !dbg !5660
  %446 = load i32, i32* %size750, align 8, !dbg !5660
  %tobool751 = icmp ne i32 %446, 0, !dbg !5657
  br i1 %tobool751, label %if.then752, label %if.end753, !dbg !5661

if.then752:                                       ; preds = %land.lhs.true748
  store i32 4, i32* %extradata_offset, align 4, !dbg !5662
  br label %if.end753, !dbg !5664

if.end753:                                        ; preds = %if.then752, %land.lhs.true748, %if.else745
  br label %if.end754

if.end754:                                        ; preds = %if.end753, %if.then742
  br label %if.end755

if.end755:                                        ; preds = %if.end754, %if.then731
  br label %if.end756

if.end756:                                        ; preds = %if.end755, %if.end722
  br label %if.end757

if.end757:                                        ; preds = %if.end756, %if.end709
  br label %if.end758

if.end758:                                        ; preds = %if.end757, %if.then601
  br label %if.end759

if.end759:                                        ; preds = %if.end758, %if.then597
  br label %if.end760

if.end760:                                        ; preds = %if.end759, %if.end573
  br label %if.end761

if.end761:                                        ; preds = %if.end760, %if.end512
  br label %if.end762

if.end762:                                        ; preds = %if.end761, %if.end490
  br label %if.end763

if.end763:                                        ; preds = %if.end762, %if.then445
  br label %if.end764

if.end764:                                        ; preds = %if.end763, %sw.epilog436
  br label %if.end765

if.end765:                                        ; preds = %if.end764, %sw.epilog
  br label %if.end766

if.end766:                                        ; preds = %if.end765, %if.end419
  br label %if.end767

if.end767:                                        ; preds = %if.end766, %if.end357
  br label %if.end768

if.end768:                                        ; preds = %if.end767, %cond.end
  br label %if.end769

if.end769:                                        ; preds = %if.end768, %if.end268
  %447 = load i32, i32* %extradata_offset, align 4, !dbg !5665
  %448 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5666
  %codec_priv770 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %448, i32 0, i32 5, !dbg !5667
  %size771 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv770, i32 0, i32 0, !dbg !5668
  %449 = load i32, i32* %size771, align 8, !dbg !5669
  %sub = sub nsw i32 %449, %447, !dbg !5669
  store i32 %sub, i32* %size771, align 8, !dbg !5669
  %450 = load i32, i32* %codec_id, align 4, !dbg !5670
  %cmp772 = icmp eq i32 %450, 0, !dbg !5672
  br i1 %cmp772, label %if.then774, label %if.end777, !dbg !5673

if.then774:                                       ; preds = %if.end769
  %451 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !5674
  %ctx775 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %451, i32 0, i32 1, !dbg !5675
  %452 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx775, align 8, !dbg !5675
  %453 = bitcast %struct.AVFormatContext* %452 to i8*, !dbg !5674
  %454 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5676
  %codec_id776 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %454, i32 0, i32 4, !dbg !5677
  %455 = load i8*, i8** %codec_id776, align 8, !dbg !5677
  call void (i8*, i32, i8*, ...) @av_log(i8* %453, i32 32, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.74, i32 0, i32 0), i8* %455), !dbg !5678
  br label %if.end777, !dbg !5678

if.end777:                                        ; preds = %if.then774, %if.end769
  %456 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5679
  %time_scale778 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %456, i32 0, i32 7, !dbg !5681
  %457 = load double, double* %time_scale778, align 8, !dbg !5681
  %cmp779 = fcmp olt double %457, 1.000000e-02, !dbg !5682
  br i1 %cmp779, label %if.then781, label %if.end783, !dbg !5683

if.then781:                                       ; preds = %if.end777
  %458 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5684
  %time_scale782 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %458, i32 0, i32 7, !dbg !5685
  store double 1.000000e+00, double* %time_scale782, align 8, !dbg !5686
  br label %if.end783, !dbg !5684

if.end783:                                        ; preds = %if.then781, %if.end777
  %459 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5687
  %460 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !5688
  %time_scale784 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %460, i32 0, i32 6, !dbg !5689
  %461 = load i64, i64* %time_scale784, align 8, !dbg !5689
  %conv785 = uitofp i64 %461 to double, !dbg !5688
  %462 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5690
  %time_scale786 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %462, i32 0, i32 7, !dbg !5691
  %463 = load double, double* %time_scale786, align 8, !dbg !5691
  %mul787 = fmul double %conv785, %463, !dbg !5692
  %conv788 = fptoui double %mul787 to i32, !dbg !5688
  call void @avpriv_set_pts_info(%struct.AVStream* %459, i32 64, i32 %conv788, i32 1000000000), !dbg !5693
  %464 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5694
  %codec_delay = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %464, i32 0, i32 16, !dbg !5695
  %465 = load i64, i64* %codec_delay, align 8, !dbg !5695
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral789, i32 0, i32 0, !dbg !5696
  store i32 1, i32* %num, align 4, !dbg !5696
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral789, i32 0, i32 1, !dbg !5696
  store i32 1000000000, i32* %den, align 4, !dbg !5696
  %466 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5697
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %466, i32 0, i32 4, !dbg !5698
  %467 = bitcast %struct.AVRational* %.compoundliteral789 to i64*, !dbg !5699
  %468 = load i64, i64* %467, align 4, !dbg !5699
  %469 = bitcast %struct.AVRational* %time_base to i64*, !dbg !5699
  %470 = load i64, i64* %469, align 8, !dbg !5699
  %call790 = call i64 @av_rescale_q(i64 %465, i64 %468, i64 %470) #1, !dbg !5699
  %471 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5700
  %codec_delay_in_track_tb = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %471, i32 0, i32 17, !dbg !5701
  store i64 %call790, i64* %codec_delay_in_track_tb, align 8, !dbg !5702
  %472 = load i32, i32* %codec_id, align 4, !dbg !5703
  %473 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5704
  %codecpar791 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %473, i32 0, i32 19, !dbg !5705
  %474 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar791, align 8, !dbg !5705
  %codec_id792 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %474, i32 0, i32 1, !dbg !5706
  store i32 %472, i32* %codec_id792, align 4, !dbg !5707
  %475 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5708
  %language = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %475, i32 0, i32 6, !dbg !5710
  %476 = load i8*, i8** %language, align 8, !dbg !5710
  %call793 = call i32 @strcmp(i8* %476, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i32 0, i32 0)) #10, !dbg !5711
  %tobool794 = icmp ne i32 %call793, 0, !dbg !5711
  br i1 %tobool794, label %if.then795, label %if.end799, !dbg !5712

if.then795:                                       ; preds = %if.end783
  %477 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5713
  %metadata796 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %477, i32 0, i32 11, !dbg !5714
  %478 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5715
  %language797 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %478, i32 0, i32 6, !dbg !5716
  %479 = load i8*, i8** %language797, align 8, !dbg !5716
  %call798 = call i32 @av_dict_set(%struct.AVDictionary** %metadata796, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* %479, i32 0), !dbg !5717
  br label %if.end799, !dbg !5717

if.end799:                                        ; preds = %if.then795, %if.end783
  %480 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5718
  %metadata800 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %480, i32 0, i32 11, !dbg !5719
  %481 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5720
  %name = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %481, i32 0, i32 3, !dbg !5721
  %482 = load i8*, i8** %name, align 8, !dbg !5721
  %call801 = call i32 @av_dict_set(%struct.AVDictionary** %metadata800, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* %482, i32 0), !dbg !5722
  %483 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5723
  %flag_default = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %483, i32 0, i32 9, !dbg !5725
  %484 = load i64, i64* %flag_default, align 8, !dbg !5725
  %tobool802 = icmp ne i64 %484, 0, !dbg !5723
  br i1 %tobool802, label %if.then803, label %if.end805, !dbg !5726

if.then803:                                       ; preds = %if.end799
  %485 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5727
  %disposition = getelementptr inbounds %struct.AVStream, %struct.AVStream* %485, i32 0, i32 8, !dbg !5728
  %486 = load i32, i32* %disposition, align 8, !dbg !5729
  %or804 = or i32 %486, 1, !dbg !5729
  store i32 %or804, i32* %disposition, align 8, !dbg !5729
  br label %if.end805, !dbg !5727

if.end805:                                        ; preds = %if.then803, %if.end799
  %487 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5730
  %flag_forced = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %487, i32 0, i32 10, !dbg !5732
  %488 = load i64, i64* %flag_forced, align 8, !dbg !5732
  %tobool806 = icmp ne i64 %488, 0, !dbg !5730
  br i1 %tobool806, label %if.then807, label %if.end810, !dbg !5733

if.then807:                                       ; preds = %if.end805
  %489 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5734
  %disposition808 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %489, i32 0, i32 8, !dbg !5735
  %490 = load i32, i32* %disposition808, align 8, !dbg !5736
  %or809 = or i32 %490, 64, !dbg !5736
  store i32 %or809, i32* %disposition808, align 8, !dbg !5736
  br label %if.end810, !dbg !5734

if.end810:                                        ; preds = %if.then807, %if.end805
  %491 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5737
  %codecpar811 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %491, i32 0, i32 19, !dbg !5739
  %492 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar811, align 8, !dbg !5739
  %extradata812 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %492, i32 0, i32 3, !dbg !5740
  %493 = load i8*, i8** %extradata812, align 8, !dbg !5740
  %tobool813 = icmp ne i8* %493, null, !dbg !5737
  br i1 %tobool813, label %if.end848, label %if.then814, !dbg !5741

if.then814:                                       ; preds = %if.end810
  %494 = load i8*, i8** %extradata, align 8, !dbg !5742
  %tobool815 = icmp ne i8* %494, null, !dbg !5742
  br i1 %tobool815, label %if.then816, label %if.else821, !dbg !5745

if.then816:                                       ; preds = %if.then814
  %495 = load i8*, i8** %extradata, align 8, !dbg !5746
  %496 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5748
  %codecpar817 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %496, i32 0, i32 19, !dbg !5749
  %497 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar817, align 8, !dbg !5749
  %extradata818 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %497, i32 0, i32 3, !dbg !5750
  store i8* %495, i8** %extradata818, align 8, !dbg !5751
  %498 = load i32, i32* %extradata_size, align 4, !dbg !5752
  %499 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5753
  %codecpar819 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %499, i32 0, i32 19, !dbg !5754
  %500 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar819, align 8, !dbg !5754
  %extradata_size820 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %500, i32 0, i32 4, !dbg !5755
  store i32 %498, i32* %extradata_size820, align 8, !dbg !5756
  br label %if.end847, !dbg !5757

if.else821:                                       ; preds = %if.then814
  %501 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5758
  %codec_priv822 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %501, i32 0, i32 5, !dbg !5761
  %data823 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv822, i32 0, i32 2, !dbg !5762
  %502 = load i8*, i8** %data823, align 8, !dbg !5762
  %tobool824 = icmp ne i8* %502, null, !dbg !5758
  br i1 %tobool824, label %land.lhs.true825, label %if.end846, !dbg !5763

land.lhs.true825:                                 ; preds = %if.else821
  %503 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5764
  %codec_priv826 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %503, i32 0, i32 5, !dbg !5766
  %size827 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv826, i32 0, i32 0, !dbg !5767
  %504 = load i32, i32* %size827, align 8, !dbg !5767
  %cmp828 = icmp sgt i32 %504, 0, !dbg !5768
  br i1 %cmp828, label %if.then830, label %if.end846, !dbg !5769

if.then830:                                       ; preds = %land.lhs.true825
  %505 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5770
  %codecpar831 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %505, i32 0, i32 19, !dbg !5773
  %506 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar831, align 8, !dbg !5773
  %507 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5774
  %codec_priv832 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %507, i32 0, i32 5, !dbg !5775
  %size833 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv832, i32 0, i32 0, !dbg !5776
  %508 = load i32, i32* %size833, align 8, !dbg !5776
  %call834 = call i32 @ff_alloc_extradata(%struct.AVCodecParameters* %506, i32 %508), !dbg !5777
  %tobool835 = icmp ne i32 %call834, 0, !dbg !5777
  br i1 %tobool835, label %if.then836, label %if.end837, !dbg !5778

if.then836:                                       ; preds = %if.then830
  store i32 -12, i32* %retval, align 4, !dbg !5779
  br label %return, !dbg !5779

if.end837:                                        ; preds = %if.then830
  %509 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5780
  %codecpar838 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %509, i32 0, i32 19, !dbg !5781
  %510 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar838, align 8, !dbg !5781
  %extradata839 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %510, i32 0, i32 3, !dbg !5782
  %511 = load i8*, i8** %extradata839, align 8, !dbg !5782
  %512 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5783
  %codec_priv840 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %512, i32 0, i32 5, !dbg !5784
  %data841 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv840, i32 0, i32 2, !dbg !5785
  %513 = load i8*, i8** %data841, align 8, !dbg !5785
  %514 = load i32, i32* %extradata_offset, align 4, !dbg !5786
  %idx.ext = sext i32 %514 to i64, !dbg !5787
  %add.ptr842 = getelementptr inbounds i8, i8* %513, i64 %idx.ext, !dbg !5787
  %515 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5788
  %codec_priv843 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %515, i32 0, i32 5, !dbg !5789
  %size844 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv843, i32 0, i32 0, !dbg !5790
  %516 = load i32, i32* %size844, align 8, !dbg !5790
  %conv845 = sext i32 %516 to i64, !dbg !5788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %511, i8* %add.ptr842, i64 %conv845, i32 1, i1 false), !dbg !5791
  br label %if.end846, !dbg !5792

if.end846:                                        ; preds = %if.end837, %land.lhs.true825, %if.else821
  br label %if.end847

if.end847:                                        ; preds = %if.end846, %if.then816
  br label %if.end848, !dbg !5793

if.end848:                                        ; preds = %if.end847, %if.end810
  %517 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5794
  %type849 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %517, i32 0, i32 2, !dbg !5796
  %518 = load i64, i64* %type849, align 8, !dbg !5796
  %cmp850 = icmp eq i64 %518, 1, !dbg !5797
  br i1 %cmp850, label %if.then852, label %if.else1071, !dbg !5798

if.then852:                                       ; preds = %if.end848
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrackPlane** %planes, metadata !5799, metadata !2574), !dbg !5807
  %519 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5808
  %operation = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %519, i32 0, i32 14, !dbg !5809
  %combine_planes = getelementptr inbounds %struct.MatroskaTrackOperation, %struct.MatroskaTrackOperation* %operation, i32 0, i32 0, !dbg !5810
  %elem853 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %combine_planes, i32 0, i32 1, !dbg !5811
  %520 = load i8*, i8** %elem853, align 8, !dbg !5811
  %521 = bitcast i8* %520 to %struct.MatroskaTrackPlane*, !dbg !5808
  store %struct.MatroskaTrackPlane* %521, %struct.MatroskaTrackPlane** %planes, align 8, !dbg !5807
  call void @llvm.dbg.declare(metadata i32* %display_width_mul, metadata !5812, metadata !2574), !dbg !5813
  store i32 1, i32* %display_width_mul, align 4, !dbg !5813
  call void @llvm.dbg.declare(metadata i32* %display_height_mul, metadata !5814, metadata !2574), !dbg !5815
  store i32 1, i32* %display_height_mul, align 4, !dbg !5815
  %522 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5816
  %codecpar854 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %522, i32 0, i32 19, !dbg !5817
  %523 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar854, align 8, !dbg !5817
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %523, i32 0, i32 0, !dbg !5818
  store i32 0, i32* %codec_type, align 8, !dbg !5819
  %524 = load i32, i32* %fourcc, align 4, !dbg !5820
  %525 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5821
  %codecpar855 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %525, i32 0, i32 19, !dbg !5822
  %526 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar855, align 8, !dbg !5822
  %codec_tag856 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %526, i32 0, i32 2, !dbg !5823
  store i32 %524, i32* %codec_tag856, align 8, !dbg !5824
  %527 = load i32, i32* %bit_depth, align 4, !dbg !5825
  %cmp857 = icmp sge i32 %527, 0, !dbg !5827
  br i1 %cmp857, label %if.then859, label %if.end861, !dbg !5828

if.then859:                                       ; preds = %if.then852
  %528 = load i32, i32* %bit_depth, align 4, !dbg !5829
  %529 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5830
  %codecpar860 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %529, i32 0, i32 19, !dbg !5831
  %530 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar860, align 8, !dbg !5831
  %bits_per_coded_sample = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %530, i32 0, i32 7, !dbg !5832
  store i32 %528, i32* %bits_per_coded_sample, align 8, !dbg !5833
  br label %if.end861, !dbg !5830

if.end861:                                        ; preds = %if.then859, %if.then852
  %531 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5834
  %video862 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %531, i32 0, i32 12, !dbg !5835
  %pixel_width863 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video862, i32 0, i32 3, !dbg !5836
  %532 = load i64, i64* %pixel_width863, align 8, !dbg !5836
  %conv864 = trunc i64 %532 to i32, !dbg !5834
  %533 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5837
  %codecpar865 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %533, i32 0, i32 19, !dbg !5838
  %534 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar865, align 8, !dbg !5838
  %width = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %534, i32 0, i32 11, !dbg !5839
  store i32 %conv864, i32* %width, align 8, !dbg !5840
  %535 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5841
  %video866 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %535, i32 0, i32 12, !dbg !5842
  %pixel_height867 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video866, i32 0, i32 4, !dbg !5843
  %536 = load i64, i64* %pixel_height867, align 8, !dbg !5843
  %conv868 = trunc i64 %536 to i32, !dbg !5841
  %537 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5844
  %codecpar869 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %537, i32 0, i32 19, !dbg !5845
  %538 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar869, align 8, !dbg !5845
  %height = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %538, i32 0, i32 12, !dbg !5846
  store i32 %conv868, i32* %height, align 4, !dbg !5847
  %539 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5848
  %video870 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %539, i32 0, i32 12, !dbg !5850
  %interlaced = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video870, i32 0, i32 7, !dbg !5851
  %540 = load i64, i64* %interlaced, align 8, !dbg !5851
  %cmp871 = icmp eq i64 %540, 1, !dbg !5852
  br i1 %cmp871, label %if.then873, label %if.else878, !dbg !5853

if.then873:                                       ; preds = %if.end861
  %541 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !5854
  %542 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5855
  %video874 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %542, i32 0, i32 12, !dbg !5856
  %field_order = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video874, i32 0, i32 8, !dbg !5857
  %543 = load i64, i64* %field_order, align 8, !dbg !5857
  %call875 = call i32 @mkv_field_order(%struct.MatroskaDemuxContext* %541, i64 %543), !dbg !5858
  %544 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5859
  %codecpar876 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %544, i32 0, i32 19, !dbg !5860
  %545 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar876, align 8, !dbg !5860
  %field_order877 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %545, i32 0, i32 14, !dbg !5861
  store i32 %call875, i32* %field_order877, align 8, !dbg !5862
  br label %if.end887, !dbg !5859

if.else878:                                       ; preds = %if.end861
  %546 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5863
  %video879 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %546, i32 0, i32 12, !dbg !5865
  %interlaced880 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video879, i32 0, i32 7, !dbg !5866
  %547 = load i64, i64* %interlaced880, align 8, !dbg !5866
  %cmp881 = icmp eq i64 %547, 2, !dbg !5867
  br i1 %cmp881, label %if.then883, label %if.end886, !dbg !5868

if.then883:                                       ; preds = %if.else878
  %548 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5869
  %codecpar884 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %548, i32 0, i32 19, !dbg !5870
  %549 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar884, align 8, !dbg !5870
  %field_order885 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %549, i32 0, i32 14, !dbg !5871
  store i32 1, i32* %field_order885, align 8, !dbg !5872
  br label %if.end886, !dbg !5869

if.end886:                                        ; preds = %if.then883, %if.else878
  br label %if.end887

if.end887:                                        ; preds = %if.end886, %if.then873
  %550 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5873
  %video888 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %550, i32 0, i32 12, !dbg !5875
  %stereo_mode = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video888, i32 0, i32 9, !dbg !5876
  %551 = load i64, i64* %stereo_mode, align 8, !dbg !5876
  %tobool889 = icmp ne i64 %551, 0, !dbg !5873
  br i1 %tobool889, label %land.lhs.true890, label %if.end899, !dbg !5877

land.lhs.true890:                                 ; preds = %if.end887
  %552 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5878
  %video891 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %552, i32 0, i32 12, !dbg !5880
  %stereo_mode892 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video891, i32 0, i32 9, !dbg !5881
  %553 = load i64, i64* %stereo_mode892, align 8, !dbg !5881
  %cmp893 = icmp ult i64 %553, 15, !dbg !5882
  br i1 %cmp893, label %if.then895, label %if.end899, !dbg !5883

if.then895:                                       ; preds = %land.lhs.true890
  %554 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5884
  %video896 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %554, i32 0, i32 12, !dbg !5885
  %stereo_mode897 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video896, i32 0, i32 9, !dbg !5886
  %555 = load i64, i64* %stereo_mode897, align 8, !dbg !5886
  %conv898 = trunc i64 %555 to i32, !dbg !5884
  call void @mkv_stereo_mode_display_mul(i32 %conv898, i32* %display_width_mul, i32* %display_height_mul), !dbg !5887
  br label %if.end899, !dbg !5887

if.end899:                                        ; preds = %if.then895, %land.lhs.true890, %if.end887
  %556 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5888
  %video900 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %556, i32 0, i32 12, !dbg !5890
  %display_unit = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video900, i32 0, i32 6, !dbg !5891
  %557 = load i64, i64* %display_unit, align 8, !dbg !5891
  %cmp901 = icmp ult i64 %557, 4, !dbg !5892
  br i1 %cmp901, label %if.then903, label %if.end924, !dbg !5893

if.then903:                                       ; preds = %if.end899
  %558 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5894
  %sample_aspect_ratio = getelementptr inbounds %struct.AVStream, %struct.AVStream* %558, i32 0, i32 10, !dbg !5896
  %num904 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio, i32 0, i32 0, !dbg !5897
  %559 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5898
  %sample_aspect_ratio905 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %559, i32 0, i32 10, !dbg !5899
  %den906 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio905, i32 0, i32 1, !dbg !5900
  %560 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5901
  %codecpar907 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %560, i32 0, i32 19, !dbg !5902
  %561 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar907, align 8, !dbg !5902
  %height908 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %561, i32 0, i32 12, !dbg !5903
  %562 = load i32, i32* %height908, align 4, !dbg !5903
  %conv909 = sext i32 %562 to i64, !dbg !5901
  %563 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5904
  %video910 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %563, i32 0, i32 12, !dbg !5905
  %display_width911 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video910, i32 0, i32 1, !dbg !5906
  %564 = load i64, i64* %display_width911, align 8, !dbg !5906
  %mul912 = mul i64 %conv909, %564, !dbg !5907
  %565 = load i32, i32* %display_width_mul, align 4, !dbg !5908
  %conv913 = sext i32 %565 to i64, !dbg !5908
  %mul914 = mul i64 %mul912, %conv913, !dbg !5909
  %566 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5910
  %codecpar915 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %566, i32 0, i32 19, !dbg !5911
  %567 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar915, align 8, !dbg !5911
  %width916 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %567, i32 0, i32 11, !dbg !5912
  %568 = load i32, i32* %width916, align 8, !dbg !5912
  %conv917 = sext i32 %568 to i64, !dbg !5910
  %569 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5913
  %video918 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %569, i32 0, i32 12, !dbg !5914
  %display_height919 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video918, i32 0, i32 2, !dbg !5915
  %570 = load i64, i64* %display_height919, align 8, !dbg !5915
  %mul920 = mul i64 %conv917, %570, !dbg !5916
  %571 = load i32, i32* %display_height_mul, align 4, !dbg !5917
  %conv921 = sext i32 %571 to i64, !dbg !5917
  %mul922 = mul i64 %mul920, %conv921, !dbg !5918
  %call923 = call i32 @av_reduce(i32* %num904, i32* %den906, i64 %mul914, i64 %mul922, i64 255), !dbg !5919
  br label %if.end924, !dbg !5920

if.end924:                                        ; preds = %if.then903, %if.end899
  %572 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5921
  %codecpar925 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %572, i32 0, i32 19, !dbg !5923
  %573 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar925, align 8, !dbg !5923
  %codec_id926 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %573, i32 0, i32 1, !dbg !5924
  %574 = load i32, i32* %codec_id926, align 4, !dbg !5924
  %cmp927 = icmp ne i32 %574, 173, !dbg !5925
  br i1 %cmp927, label %if.then929, label %if.end930, !dbg !5926

if.then929:                                       ; preds = %if.end924
  %575 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5927
  %need_parsing = getelementptr inbounds %struct.AVStream, %struct.AVStream* %575, i32 0, i32 28, !dbg !5928
  store i32 2, i32* %need_parsing, align 4, !dbg !5929
  br label %if.end930, !dbg !5927

if.end930:                                        ; preds = %if.then929, %if.end924
  %576 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5930
  %default_duration931 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %576, i32 0, i32 8, !dbg !5932
  %577 = load i64, i64* %default_duration931, align 8, !dbg !5932
  %tobool932 = icmp ne i64 %577, 0, !dbg !5930
  br i1 %tobool932, label %if.then933, label %if.end961, !dbg !5933

if.then933:                                       ; preds = %if.end930
  %578 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5934
  %avg_frame_rate = getelementptr inbounds %struct.AVStream, %struct.AVStream* %578, i32 0, i32 12, !dbg !5936
  %num934 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %avg_frame_rate, i32 0, i32 0, !dbg !5937
  %579 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5938
  %avg_frame_rate935 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %579, i32 0, i32 12, !dbg !5939
  %den936 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %avg_frame_rate935, i32 0, i32 1, !dbg !5940
  %580 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5941
  %default_duration937 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %580, i32 0, i32 8, !dbg !5942
  %581 = load i64, i64* %default_duration937, align 8, !dbg !5942
  %call938 = call i32 @av_reduce(i32* %num934, i32* %den936, i64 1000000000, i64 %581, i64 30000), !dbg !5943
  %582 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5944
  %avg_frame_rate939 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %582, i32 0, i32 12, !dbg !5946
  %num940 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %avg_frame_rate939, i32 0, i32 0, !dbg !5947
  %583 = load i32, i32* %num940, align 8, !dbg !5947
  %conv941 = sext i32 %583 to i64, !dbg !5944
  %584 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5948
  %avg_frame_rate942 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %584, i32 0, i32 12, !dbg !5949
  %den943 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %avg_frame_rate942, i32 0, i32 1, !dbg !5950
  %585 = load i32, i32* %den943, align 4, !dbg !5950
  %conv944 = sext i32 %585 to i64, !dbg !5948
  %mul945 = mul nsw i64 %conv944, 1000, !dbg !5951
  %cmp946 = icmp slt i64 %conv941, %mul945, !dbg !5952
  br i1 %cmp946, label %land.lhs.true948, label %if.end960, !dbg !5953

land.lhs.true948:                                 ; preds = %if.then933
  %586 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5954
  %avg_frame_rate949 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %586, i32 0, i32 12, !dbg !5956
  %num950 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %avg_frame_rate949, i32 0, i32 0, !dbg !5957
  %587 = load i32, i32* %num950, align 8, !dbg !5957
  %conv951 = sext i32 %587 to i64, !dbg !5954
  %588 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5958
  %avg_frame_rate952 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %588, i32 0, i32 12, !dbg !5959
  %den953 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %avg_frame_rate952, i32 0, i32 1, !dbg !5960
  %589 = load i32, i32* %den953, align 4, !dbg !5960
  %conv954 = sext i32 %589 to i64, !dbg !5958
  %mul955 = mul nsw i64 %conv954, 5, !dbg !5961
  %cmp956 = icmp sgt i64 %conv951, %mul955, !dbg !5962
  br i1 %cmp956, label %if.then958, label %if.end960, !dbg !5963

if.then958:                                       ; preds = %land.lhs.true948
  %590 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5965
  %r_frame_rate = getelementptr inbounds %struct.AVStream, %struct.AVStream* %590, i32 0, i32 17, !dbg !5966
  %591 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5967
  %avg_frame_rate959 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %591, i32 0, i32 12, !dbg !5968
  %592 = bitcast %struct.AVRational* %r_frame_rate to i8*, !dbg !5968
  %593 = bitcast %struct.AVRational* %avg_frame_rate959 to i8*, !dbg !5968
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %592, i8* %593, i64 8, i32 8, i1 false), !dbg !5968
  br label %if.end960, !dbg !5965

if.end960:                                        ; preds = %if.then958, %land.lhs.true948, %if.then933
  br label %if.end961, !dbg !5969

if.end961:                                        ; preds = %if.end960, %if.end930
  %594 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5970
  %video962 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %594, i32 0, i32 12, !dbg !5972
  %stereo_mode963 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video962, i32 0, i32 9, !dbg !5973
  %595 = load i64, i64* %stereo_mode963, align 8, !dbg !5973
  %tobool964 = icmp ne i64 %595, 0, !dbg !5970
  br i1 %tobool964, label %land.lhs.true965, label %if.end976, !dbg !5974

land.lhs.true965:                                 ; preds = %if.end961
  %596 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5975
  %video966 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %596, i32 0, i32 12, !dbg !5977
  %stereo_mode967 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video966, i32 0, i32 9, !dbg !5978
  %597 = load i64, i64* %stereo_mode967, align 8, !dbg !5978
  %cmp968 = icmp ult i64 %597, 15, !dbg !5979
  br i1 %cmp968, label %if.then970, label %if.end976, !dbg !5980

if.then970:                                       ; preds = %land.lhs.true965
  %598 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5981
  %metadata971 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %598, i32 0, i32 11, !dbg !5982
  %599 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5983
  %video972 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %599, i32 0, i32 12, !dbg !5984
  %stereo_mode973 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video972, i32 0, i32 9, !dbg !5985
  %600 = load i64, i64* %stereo_mode973, align 8, !dbg !5985
  %arrayidx974 = getelementptr inbounds [15 x i8*], [15 x i8*]* @ff_matroska_video_stereo_mode, i64 0, i64 %600, !dbg !5986
  %601 = load i8*, i8** %arrayidx974, align 8, !dbg !5986
  %call975 = call i32 @av_dict_set(%struct.AVDictionary** %metadata971, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.76, i32 0, i32 0), i8* %601, i32 0), !dbg !5987
  br label %if.end976, !dbg !5987

if.end976:                                        ; preds = %if.then970, %land.lhs.true965, %if.end961
  %602 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !5988
  %video977 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %602, i32 0, i32 12, !dbg !5990
  %alpha_mode = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video977, i32 0, i32 10, !dbg !5991
  %603 = load i64, i64* %alpha_mode, align 8, !dbg !5991
  %tobool978 = icmp ne i64 %603, 0, !dbg !5988
  br i1 %tobool978, label %if.then979, label %if.end982, !dbg !5992

if.then979:                                       ; preds = %if.end976
  %604 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5993
  %metadata980 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %604, i32 0, i32 11, !dbg !5994
  %call981 = call i32 @av_dict_set(%struct.AVDictionary** %metadata980, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.78, i32 0, i32 0), i32 0), !dbg !5995
  br label %if.end982, !dbg !5995

if.end982:                                        ; preds = %if.then979, %if.end976
  store i32 0, i32* %j, align 4, !dbg !5996
  br label %for.cond983, !dbg !5998

for.cond983:                                      ; preds = %for.inc1033, %if.end982
  %605 = load i32, i32* %j, align 4, !dbg !5999
  %606 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6002
  %operation984 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %606, i32 0, i32 14, !dbg !6003
  %combine_planes985 = getelementptr inbounds %struct.MatroskaTrackOperation, %struct.MatroskaTrackOperation* %operation984, i32 0, i32 0, !dbg !6004
  %nb_elem986 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %combine_planes985, i32 0, i32 0, !dbg !6005
  %607 = load i32, i32* %nb_elem986, align 8, !dbg !6005
  %cmp987 = icmp slt i32 %605, %607, !dbg !6006
  br i1 %cmp987, label %for.body989, label %for.end1035, !dbg !6007

for.body989:                                      ; preds = %for.cond983
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf990, metadata !6008, metadata !2574), !dbg !6013
  %608 = load i32, i32* %j, align 4, !dbg !6014
  %idxprom991 = sext i32 %608 to i64, !dbg !6016
  %609 = load %struct.MatroskaTrackPlane*, %struct.MatroskaTrackPlane** %planes, align 8, !dbg !6016
  %arrayidx992 = getelementptr inbounds %struct.MatroskaTrackPlane, %struct.MatroskaTrackPlane* %609, i64 %idxprom991, !dbg !6016
  %type993 = getelementptr inbounds %struct.MatroskaTrackPlane, %struct.MatroskaTrackPlane* %arrayidx992, i32 0, i32 1, !dbg !6017
  %610 = load i64, i64* %type993, align 8, !dbg !6017
  %cmp994 = icmp uge i64 %610, 3, !dbg !6018
  br i1 %cmp994, label %if.then996, label %if.end997, !dbg !6019

if.then996:                                       ; preds = %for.body989
  br label %for.inc1033, !dbg !6020

if.end997:                                        ; preds = %for.body989
  %arraydecay998 = getelementptr inbounds [32 x i8], [32 x i8]* %buf990, i32 0, i32 0, !dbg !6021
  %611 = load i32, i32* %j, align 4, !dbg !6022
  %idxprom999 = sext i32 %611 to i64, !dbg !6023
  %612 = load %struct.MatroskaTrackPlane*, %struct.MatroskaTrackPlane** %planes, align 8, !dbg !6023
  %arrayidx1000 = getelementptr inbounds %struct.MatroskaTrackPlane, %struct.MatroskaTrackPlane* %612, i64 %idxprom999, !dbg !6023
  %type1001 = getelementptr inbounds %struct.MatroskaTrackPlane, %struct.MatroskaTrackPlane* %arrayidx1000, i32 0, i32 1, !dbg !6024
  %613 = load i64, i64* %type1001, align 8, !dbg !6024
  %arrayidx1002 = getelementptr inbounds [3 x i8*], [3 x i8*]* @ff_matroska_video_stereo_plane, i64 0, i64 %613, !dbg !6025
  %614 = load i8*, i8** %arrayidx1002, align 8, !dbg !6025
  %615 = load i32, i32* %i, align 4, !dbg !6026
  %call1003 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay998, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i32 0, i32 0), i8* %614, i32 %615) #11, !dbg !6027
  store i32 0, i32* %k, align 4, !dbg !6028
  br label %for.cond1004, !dbg !6030

for.cond1004:                                     ; preds = %for.inc1030, %if.end997
  %616 = load i32, i32* %k, align 4, !dbg !6031
  %617 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !6034
  %tracks1005 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %617, i32 0, i32 11, !dbg !6035
  %nb_elem1006 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks1005, i32 0, i32 0, !dbg !6036
  %618 = load i32, i32* %nb_elem1006, align 8, !dbg !6036
  %cmp1007 = icmp slt i32 %616, %618, !dbg !6037
  br i1 %cmp1007, label %for.body1009, label %for.end1032, !dbg !6038

for.body1009:                                     ; preds = %for.cond1004
  %619 = load i32, i32* %j, align 4, !dbg !6039
  %idxprom1010 = sext i32 %619 to i64, !dbg !6041
  %620 = load %struct.MatroskaTrackPlane*, %struct.MatroskaTrackPlane** %planes, align 8, !dbg !6041
  %arrayidx1011 = getelementptr inbounds %struct.MatroskaTrackPlane, %struct.MatroskaTrackPlane* %620, i64 %idxprom1010, !dbg !6041
  %uid = getelementptr inbounds %struct.MatroskaTrackPlane, %struct.MatroskaTrackPlane* %arrayidx1011, i32 0, i32 0, !dbg !6042
  %621 = load i64, i64* %uid, align 8, !dbg !6042
  %622 = load i32, i32* %k, align 4, !dbg !6043
  %idxprom1012 = sext i32 %622 to i64, !dbg !6044
  %623 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !6044
  %arrayidx1013 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %623, i64 %idxprom1012, !dbg !6044
  %uid1014 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx1013, i32 0, i32 1, !dbg !6045
  %624 = load i64, i64* %uid1014, align 8, !dbg !6045
  %cmp1015 = icmp eq i64 %621, %624, !dbg !6046
  br i1 %cmp1015, label %land.lhs.true1017, label %if.end1029, !dbg !6047

land.lhs.true1017:                                ; preds = %for.body1009
  %625 = load i32, i32* %k, align 4, !dbg !6048
  %idxprom1018 = sext i32 %625 to i64, !dbg !6050
  %626 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !6050
  %arrayidx1019 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %626, i64 %idxprom1018, !dbg !6050
  %stream1020 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx1019, i32 0, i32 18, !dbg !6051
  %627 = load %struct.AVStream*, %struct.AVStream** %stream1020, align 8, !dbg !6051
  %tobool1021 = icmp ne %struct.AVStream* %627, null, !dbg !6050
  br i1 %tobool1021, label %if.then1022, label %if.end1029, !dbg !6052

if.then1022:                                      ; preds = %land.lhs.true1017
  %628 = load i32, i32* %k, align 4, !dbg !6053
  %idxprom1023 = sext i32 %628 to i64, !dbg !6055
  %629 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !6055
  %arrayidx1024 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %629, i64 %idxprom1023, !dbg !6055
  %stream1025 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx1024, i32 0, i32 18, !dbg !6056
  %630 = load %struct.AVStream*, %struct.AVStream** %stream1025, align 8, !dbg !6056
  %metadata1026 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %630, i32 0, i32 11, !dbg !6057
  %arraydecay1027 = getelementptr inbounds [32 x i8], [32 x i8]* %buf990, i32 0, i32 0, !dbg !6058
  %call1028 = call i32 @av_dict_set(%struct.AVDictionary** %metadata1026, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.76, i32 0, i32 0), i8* %arraydecay1027, i32 0), !dbg !6059
  br label %for.end1032, !dbg !6060

if.end1029:                                       ; preds = %land.lhs.true1017, %for.body1009
  br label %for.inc1030, !dbg !6061

for.inc1030:                                      ; preds = %if.end1029
  %631 = load i32, i32* %k, align 4, !dbg !6063
  %inc1031 = add nsw i32 %631, 1, !dbg !6063
  store i32 %inc1031, i32* %k, align 4, !dbg !6063
  br label %for.cond1004, !dbg !6065, !llvm.loop !6066

for.end1032:                                      ; preds = %if.then1022, %for.cond1004
  br label %for.inc1033, !dbg !6068

for.inc1033:                                      ; preds = %for.end1032, %if.then996
  %632 = load i32, i32* %j, align 4, !dbg !6069
  %inc1034 = add nsw i32 %632, 1, !dbg !6069
  store i32 %inc1034, i32* %j, align 4, !dbg !6069
  br label %for.cond983, !dbg !6071, !llvm.loop !6072

for.end1035:                                      ; preds = %for.cond983
  %633 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6074
  %video1036 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %633, i32 0, i32 12, !dbg !6076
  %stereo_mode1037 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video1036, i32 0, i32 9, !dbg !6077
  %634 = load i64, i64* %stereo_mode1037, align 8, !dbg !6077
  %cmp1038 = icmp ult i64 %634, 15, !dbg !6078
  br i1 %cmp1038, label %land.lhs.true1040, label %if.end1060, !dbg !6079

land.lhs.true1040:                                ; preds = %for.end1035
  %635 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6080
  %video1041 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %635, i32 0, i32 12, !dbg !6081
  %stereo_mode1042 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video1041, i32 0, i32 9, !dbg !6082
  %636 = load i64, i64* %stereo_mode1042, align 8, !dbg !6082
  %cmp1043 = icmp ne i64 %636, 10, !dbg !6083
  br i1 %cmp1043, label %land.lhs.true1045, label %if.end1060, !dbg !6084

land.lhs.true1045:                                ; preds = %land.lhs.true1040
  %637 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6085
  %video1046 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %637, i32 0, i32 12, !dbg !6087
  %stereo_mode1047 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video1046, i32 0, i32 9, !dbg !6088
  %638 = load i64, i64* %stereo_mode1047, align 8, !dbg !6088
  %cmp1048 = icmp ne i64 %638, 12, !dbg !6089
  br i1 %cmp1048, label %if.then1050, label %if.end1060, !dbg !6090

if.then1050:                                      ; preds = %land.lhs.true1045
  call void @llvm.dbg.declare(metadata i32* %ret1051, metadata !6092, metadata !2574), !dbg !6094
  %639 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6095
  %640 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6096
  %video1052 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %640, i32 0, i32 12, !dbg !6097
  %stereo_mode1053 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video1052, i32 0, i32 9, !dbg !6098
  %641 = load i64, i64* %stereo_mode1053, align 8, !dbg !6098
  %conv1054 = trunc i64 %641 to i32, !dbg !6096
  %call1055 = call i32 @ff_mkv_stereo3d_conv(%struct.AVStream* %639, i32 %conv1054), !dbg !6099
  store i32 %call1055, i32* %ret1051, align 4, !dbg !6094
  %642 = load i32, i32* %ret1051, align 4, !dbg !6100
  %cmp1056 = icmp slt i32 %642, 0, !dbg !6102
  br i1 %cmp1056, label %if.then1058, label %if.end1059, !dbg !6103

if.then1058:                                      ; preds = %if.then1050
  %643 = load i32, i32* %ret1051, align 4, !dbg !6104
  store i32 %643, i32* %retval, align 4, !dbg !6105
  br label %return, !dbg !6105

if.end1059:                                       ; preds = %if.then1050
  br label %if.end1060, !dbg !6106

if.end1060:                                       ; preds = %if.end1059, %land.lhs.true1045, %land.lhs.true1040, %for.end1035
  %644 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6107
  %645 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6108
  %call1061 = call i32 @mkv_parse_video_color(%struct.AVStream* %644, %struct.MatroskaTrack* %645), !dbg !6109
  store i32 %call1061, i32* %ret, align 4, !dbg !6110
  %646 = load i32, i32* %ret, align 4, !dbg !6111
  %cmp1062 = icmp slt i32 %646, 0, !dbg !6113
  br i1 %cmp1062, label %if.then1064, label %if.end1065, !dbg !6114

if.then1064:                                      ; preds = %if.end1060
  %647 = load i32, i32* %ret, align 4, !dbg !6115
  store i32 %647, i32* %retval, align 4, !dbg !6116
  br label %return, !dbg !6116

if.end1065:                                       ; preds = %if.end1060
  %648 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6117
  %649 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6118
  %call1066 = call i32 @mkv_parse_video_projection(%struct.AVStream* %648, %struct.MatroskaTrack* %649), !dbg !6119
  store i32 %call1066, i32* %ret, align 4, !dbg !6120
  %650 = load i32, i32* %ret, align 4, !dbg !6121
  %cmp1067 = icmp slt i32 %650, 0, !dbg !6123
  br i1 %cmp1067, label %if.then1069, label %if.end1070, !dbg !6124

if.then1069:                                      ; preds = %if.end1065
  %651 = load i32, i32* %ret, align 4, !dbg !6125
  store i32 %651, i32* %retval, align 4, !dbg !6126
  br label %return, !dbg !6126

if.end1070:                                       ; preds = %if.end1065
  br label %if.end1211, !dbg !6127

if.else1071:                                      ; preds = %if.end848
  %652 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6128
  %type1072 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %652, i32 0, i32 2, !dbg !6131
  %653 = load i64, i64* %type1072, align 8, !dbg !6131
  %cmp1073 = icmp eq i64 %653, 2, !dbg !6132
  br i1 %cmp1073, label %if.then1075, label %if.else1166, !dbg !6128

if.then1075:                                      ; preds = %if.else1071
  %654 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6133
  %codecpar1076 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %654, i32 0, i32 19, !dbg !6135
  %655 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1076, align 8, !dbg !6135
  %codec_type1077 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %655, i32 0, i32 0, !dbg !6136
  store i32 1, i32* %codec_type1077, align 8, !dbg !6137
  %656 = load i32, i32* %fourcc, align 4, !dbg !6138
  %657 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6139
  %codecpar1078 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %657, i32 0, i32 19, !dbg !6140
  %658 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1078, align 8, !dbg !6140
  %codec_tag1079 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %658, i32 0, i32 2, !dbg !6141
  store i32 %656, i32* %codec_tag1079, align 8, !dbg !6142
  %659 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6143
  %audio1080 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %659, i32 0, i32 13, !dbg !6144
  %out_samplerate1081 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio1080, i32 0, i32 1, !dbg !6145
  %660 = load double, double* %out_samplerate1081, align 8, !dbg !6145
  %conv1082 = fptosi double %660 to i32, !dbg !6143
  %661 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6146
  %codecpar1083 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %661, i32 0, i32 19, !dbg !6147
  %662 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1083, align 8, !dbg !6147
  %sample_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %662, i32 0, i32 23, !dbg !6148
  store i32 %conv1082, i32* %sample_rate, align 4, !dbg !6149
  %663 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6150
  %audio1084 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %663, i32 0, i32 13, !dbg !6151
  %channels1085 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio1084, i32 0, i32 3, !dbg !6152
  %664 = load i64, i64* %channels1085, align 8, !dbg !6152
  %conv1086 = trunc i64 %664 to i32, !dbg !6150
  %665 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6153
  %codecpar1087 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %665, i32 0, i32 19, !dbg !6154
  %666 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1087, align 8, !dbg !6154
  %channels1088 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %666, i32 0, i32 22, !dbg !6155
  store i32 %conv1086, i32* %channels1088, align 8, !dbg !6156
  %667 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6157
  %codecpar1089 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %667, i32 0, i32 19, !dbg !6159
  %668 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1089, align 8, !dbg !6159
  %bits_per_coded_sample1090 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %668, i32 0, i32 7, !dbg !6160
  %669 = load i32, i32* %bits_per_coded_sample1090, align 8, !dbg !6160
  %tobool1091 = icmp ne i32 %669, 0, !dbg !6157
  br i1 %tobool1091, label %if.end1098, label %if.then1092, !dbg !6161

if.then1092:                                      ; preds = %if.then1075
  %670 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6162
  %audio1093 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %670, i32 0, i32 13, !dbg !6163
  %bitdepth1094 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio1093, i32 0, i32 2, !dbg !6164
  %671 = load i64, i64* %bitdepth1094, align 8, !dbg !6164
  %conv1095 = trunc i64 %671 to i32, !dbg !6162
  %672 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6165
  %codecpar1096 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %672, i32 0, i32 19, !dbg !6166
  %673 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1096, align 8, !dbg !6166
  %bits_per_coded_sample1097 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %673, i32 0, i32 7, !dbg !6167
  store i32 %conv1095, i32* %bits_per_coded_sample1097, align 8, !dbg !6168
  br label %if.end1098, !dbg !6165

if.end1098:                                       ; preds = %if.then1092, %if.then1075
  %674 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6169
  %codecpar1099 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %674, i32 0, i32 19, !dbg !6171
  %675 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1099, align 8, !dbg !6171
  %codec_id1100 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %675, i32 0, i32 1, !dbg !6172
  %676 = load i32, i32* %codec_id1100, align 4, !dbg !6172
  %cmp1101 = icmp eq i32 %676, 86017, !dbg !6173
  br i1 %cmp1101, label %if.then1113, label %lor.lhs.false1103, !dbg !6174

lor.lhs.false1103:                                ; preds = %if.end1098
  %677 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6175
  %codecpar1104 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %677, i32 0, i32 19, !dbg !6176
  %678 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1104, align 8, !dbg !6176
  %codec_id1105 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %678, i32 0, i32 1, !dbg !6177
  %679 = load i32, i32* %codec_id1105, align 4, !dbg !6177
  %cmp1106 = icmp eq i32 %679, 86045, !dbg !6178
  br i1 %cmp1106, label %if.then1113, label %lor.lhs.false1108, !dbg !6179

lor.lhs.false1108:                                ; preds = %lor.lhs.false1103
  %680 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6180
  %codecpar1109 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %680, i32 0, i32 19, !dbg !6181
  %681 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1109, align 8, !dbg !6181
  %codec_id1110 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %681, i32 0, i32 1, !dbg !6182
  %682 = load i32, i32* %codec_id1110, align 4, !dbg !6182
  %cmp1111 = icmp eq i32 %682, 86060, !dbg !6183
  br i1 %cmp1111, label %if.then1113, label %if.else1115, !dbg !6184

if.then1113:                                      ; preds = %lor.lhs.false1108, %lor.lhs.false1103, %if.end1098
  %683 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6186
  %need_parsing1114 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %683, i32 0, i32 28, !dbg !6187
  store i32 1, i32* %need_parsing1114, align 4, !dbg !6188
  br label %if.end1123, !dbg !6186

if.else1115:                                      ; preds = %lor.lhs.false1108
  %684 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6189
  %codecpar1116 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %684, i32 0, i32 19, !dbg !6191
  %685 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1116, align 8, !dbg !6191
  %codec_id1117 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %685, i32 0, i32 1, !dbg !6192
  %686 = load i32, i32* %codec_id1117, align 4, !dbg !6192
  %cmp1118 = icmp ne i32 %686, 86018, !dbg !6193
  br i1 %cmp1118, label %if.then1120, label %if.end1122, !dbg !6194

if.then1120:                                      ; preds = %if.else1115
  %687 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6195
  %need_parsing1121 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %687, i32 0, i32 28, !dbg !6196
  store i32 2, i32* %need_parsing1121, align 4, !dbg !6197
  br label %if.end1122, !dbg !6195

if.end1122:                                       ; preds = %if.then1120, %if.else1115
  br label %if.end1123

if.end1123:                                       ; preds = %if.end1122, %if.then1113
  %688 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6198
  %codec_delay1124 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %688, i32 0, i32 16, !dbg !6200
  %689 = load i64, i64* %codec_delay1124, align 8, !dbg !6200
  %cmp1125 = icmp ugt i64 %689, 0, !dbg !6201
  br i1 %cmp1125, label %if.then1127, label %if.end1148, !dbg !6202

if.then1127:                                      ; preds = %if.end1123
  %690 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6203
  %codec_delay1128 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %690, i32 0, i32 16, !dbg !6205
  %691 = load i64, i64* %codec_delay1128, align 8, !dbg !6205
  %num1130 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral1129, i32 0, i32 0, !dbg !6206
  store i32 1, i32* %num1130, align 4, !dbg !6206
  %den1131 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral1129, i32 0, i32 1, !dbg !6206
  store i32 1000000000, i32* %den1131, align 4, !dbg !6206
  %num1133 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral1132, i32 0, i32 0, !dbg !6207
  store i32 1, i32* %num1133, align 4, !dbg !6207
  %den1134 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral1132, i32 0, i32 1, !dbg !6207
  %692 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6208
  %codecpar1135 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %692, i32 0, i32 19, !dbg !6209
  %693 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1135, align 8, !dbg !6209
  %codec_id1136 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %693, i32 0, i32 1, !dbg !6210
  %694 = load i32, i32* %codec_id1136, align 4, !dbg !6210
  %cmp1137 = icmp eq i32 %694, 86076, !dbg !6211
  br i1 %cmp1137, label %cond.true1139, label %cond.false1140, !dbg !6208

cond.true1139:                                    ; preds = %if.then1127
  br label %cond.end1143, !dbg !6212

cond.false1140:                                   ; preds = %if.then1127
  %695 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6214
  %codecpar1141 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %695, i32 0, i32 19, !dbg !6215
  %696 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1141, align 8, !dbg !6215
  %sample_rate1142 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %696, i32 0, i32 23, !dbg !6216
  %697 = load i32, i32* %sample_rate1142, align 4, !dbg !6216
  br label %cond.end1143, !dbg !6217

cond.end1143:                                     ; preds = %cond.false1140, %cond.true1139
  %cond1144 = phi i32 [ 48000, %cond.true1139 ], [ %697, %cond.false1140 ], !dbg !6219
  store i32 %cond1144, i32* %den1134, align 4, !dbg !6221
  %698 = bitcast %struct.AVRational* %.compoundliteral1129 to i64*, !dbg !6222
  %699 = load i64, i64* %698, align 4, !dbg !6222
  %700 = bitcast %struct.AVRational* %.compoundliteral1132 to i64*, !dbg !6222
  %701 = load i64, i64* %700, align 4, !dbg !6222
  %call1145 = call i64 @av_rescale_q(i64 %691, i64 %699, i64 %701) #1, !dbg !6222
  %conv1146 = trunc i64 %call1145 to i32, !dbg !6222
  %702 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6223
  %codecpar1147 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %702, i32 0, i32 19, !dbg !6224
  %703 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1147, align 8, !dbg !6224
  %initial_padding = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %703, i32 0, i32 26, !dbg !6225
  store i32 %conv1146, i32* %initial_padding, align 8, !dbg !6226
  br label %if.end1148, !dbg !6227

if.end1148:                                       ; preds = %cond.end1143, %if.end1123
  %704 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6228
  %seek_preroll = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %704, i32 0, i32 11, !dbg !6230
  %705 = load i64, i64* %seek_preroll, align 8, !dbg !6230
  %cmp1149 = icmp ugt i64 %705, 0, !dbg !6231
  br i1 %cmp1149, label %if.then1151, label %if.end1165, !dbg !6232

if.then1151:                                      ; preds = %if.end1148
  %706 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6233
  %seek_preroll1152 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %706, i32 0, i32 11, !dbg !6235
  %707 = load i64, i64* %seek_preroll1152, align 8, !dbg !6235
  %num1154 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral1153, i32 0, i32 0, !dbg !6236
  store i32 1, i32* %num1154, align 4, !dbg !6236
  %den1155 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral1153, i32 0, i32 1, !dbg !6236
  store i32 1000000000, i32* %den1155, align 4, !dbg !6236
  %num1157 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral1156, i32 0, i32 0, !dbg !6237
  store i32 1, i32* %num1157, align 4, !dbg !6237
  %den1158 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral1156, i32 0, i32 1, !dbg !6237
  %708 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6238
  %codecpar1159 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %708, i32 0, i32 19, !dbg !6239
  %709 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1159, align 8, !dbg !6239
  %sample_rate1160 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %709, i32 0, i32 23, !dbg !6240
  %710 = load i32, i32* %sample_rate1160, align 4, !dbg !6240
  store i32 %710, i32* %den1158, align 4, !dbg !6237
  %711 = bitcast %struct.AVRational* %.compoundliteral1153 to i64*, !dbg !6241
  %712 = load i64, i64* %711, align 4, !dbg !6241
  %713 = bitcast %struct.AVRational* %.compoundliteral1156 to i64*, !dbg !6241
  %714 = load i64, i64* %713, align 4, !dbg !6241
  %call1161 = call i64 @av_rescale_q(i64 %707, i64 %712, i64 %714) #1, !dbg !6241
  %conv1162 = trunc i64 %call1161 to i32, !dbg !6241
  %715 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6242
  %codecpar1163 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %715, i32 0, i32 19, !dbg !6243
  %716 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1163, align 8, !dbg !6243
  %seek_preroll1164 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %716, i32 0, i32 28, !dbg !6244
  store i32 %conv1162, i32* %seek_preroll1164, align 8, !dbg !6245
  br label %if.end1165, !dbg !6246

if.end1165:                                       ; preds = %if.then1151, %if.end1148
  br label %if.end1210, !dbg !6247

if.else1166:                                      ; preds = %if.else1071
  %717 = load i32, i32* %codec_id, align 4, !dbg !6248
  %cmp1167 = icmp eq i32 %717, 96265, !dbg !6251
  br i1 %cmp1167, label %if.then1169, label %if.else1195, !dbg !6248

if.then1169:                                      ; preds = %if.else1166
  %718 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6252
  %codecpar1170 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %718, i32 0, i32 19, !dbg !6254
  %719 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1170, align 8, !dbg !6254
  %codec_type1171 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %719, i32 0, i32 0, !dbg !6255
  store i32 3, i32* %codec_type1171, align 8, !dbg !6256
  %720 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6257
  %codec_id1172 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %720, i32 0, i32 4, !dbg !6259
  %721 = load i8*, i8** %codec_id1172, align 8, !dbg !6259
  %call1173 = call i32 @strcmp(i8* %721, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i32 0, i32 0)) #10, !dbg !6260
  %tobool1174 = icmp ne i32 %call1173, 0, !dbg !6260
  br i1 %tobool1174, label %if.else1178, label %if.then1175, !dbg !6261

if.then1175:                                      ; preds = %if.then1169
  %722 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6262
  %disposition1176 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %722, i32 0, i32 8, !dbg !6264
  %723 = load i32, i32* %disposition1176, align 8, !dbg !6265
  %or1177 = or i32 %723, 65536, !dbg !6265
  store i32 %or1177, i32* %disposition1176, align 8, !dbg !6265
  br label %if.end1194, !dbg !6266

if.else1178:                                      ; preds = %if.then1169
  %724 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6267
  %codec_id1179 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %724, i32 0, i32 4, !dbg !6270
  %725 = load i8*, i8** %codec_id1179, align 8, !dbg !6270
  %call1180 = call i32 @strcmp(i8* %725, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.81, i32 0, i32 0)) #10, !dbg !6271
  %tobool1181 = icmp ne i32 %call1180, 0, !dbg !6271
  br i1 %tobool1181, label %if.else1185, label %if.then1182, !dbg !6272

if.then1182:                                      ; preds = %if.else1178
  %726 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6273
  %disposition1183 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %726, i32 0, i32 8, !dbg !6275
  %727 = load i32, i32* %disposition1183, align 8, !dbg !6276
  %or1184 = or i32 %727, 131072, !dbg !6276
  store i32 %or1184, i32* %disposition1183, align 8, !dbg !6276
  br label %if.end1193, !dbg !6277

if.else1185:                                      ; preds = %if.else1178
  %728 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6278
  %codec_id1186 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %728, i32 0, i32 4, !dbg !6281
  %729 = load i8*, i8** %codec_id1186, align 8, !dbg !6281
  %call1187 = call i32 @strcmp(i8* %729, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.82, i32 0, i32 0)) #10, !dbg !6282
  %tobool1188 = icmp ne i32 %call1187, 0, !dbg !6282
  br i1 %tobool1188, label %if.end1192, label %if.then1189, !dbg !6283

if.then1189:                                      ; preds = %if.else1185
  %730 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6284
  %disposition1190 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %730, i32 0, i32 8, !dbg !6286
  %731 = load i32, i32* %disposition1190, align 8, !dbg !6287
  %or1191 = or i32 %731, 262144, !dbg !6287
  store i32 %or1191, i32* %disposition1190, align 8, !dbg !6287
  br label %if.end1192, !dbg !6288

if.end1192:                                       ; preds = %if.then1189, %if.else1185
  br label %if.end1193

if.end1193:                                       ; preds = %if.end1192, %if.then1182
  br label %if.end1194

if.end1194:                                       ; preds = %if.end1193, %if.then1175
  br label %if.end1209, !dbg !6289

if.else1195:                                      ; preds = %if.else1166
  %732 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6290
  %type1196 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %732, i32 0, i32 2, !dbg !6293
  %733 = load i64, i64* %type1196, align 8, !dbg !6293
  %cmp1197 = icmp eq i64 %733, 17, !dbg !6294
  br i1 %cmp1197, label %if.then1199, label %if.end1208, !dbg !6290

if.then1199:                                      ; preds = %if.else1195
  %734 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6295
  %codecpar1200 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %734, i32 0, i32 19, !dbg !6297
  %735 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1200, align 8, !dbg !6297
  %codec_type1201 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %735, i32 0, i32 0, !dbg !6298
  store i32 3, i32* %codec_type1201, align 8, !dbg !6299
  %736 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6300
  %codecpar1202 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %736, i32 0, i32 19, !dbg !6302
  %737 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1202, align 8, !dbg !6302
  %codec_id1203 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %737, i32 0, i32 1, !dbg !6303
  %738 = load i32, i32* %codec_id1203, align 4, !dbg !6303
  %cmp1204 = icmp eq i32 %738, 96269, !dbg !6304
  br i1 %cmp1204, label %if.then1206, label %if.end1207, !dbg !6305

if.then1206:                                      ; preds = %if.then1199
  %739 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !6306
  %contains_ssa = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %739, i32 0, i32 29, !dbg !6307
  store i32 1, i32* %contains_ssa, align 8, !dbg !6308
  br label %if.end1207, !dbg !6306

if.end1207:                                       ; preds = %if.then1206, %if.then1199
  br label %if.end1208, !dbg !6309

if.end1208:                                       ; preds = %if.end1207, %if.else1195
  br label %if.end1209

if.end1209:                                       ; preds = %if.end1208, %if.end1194
  br label %if.end1210

if.end1210:                                       ; preds = %if.end1209, %if.end1165
  br label %if.end1211

if.end1211:                                       ; preds = %if.end1210, %if.end1070
  br label %for.inc1212, !dbg !6310

for.inc1212:                                      ; preds = %if.end1211, %if.else555, %if.then16, %if.then
  %740 = load i32, i32* %i, align 4, !dbg !6311
  %inc1213 = add nsw i32 %740, 1, !dbg !6311
  store i32 %inc1213, i32* %i, align 4, !dbg !6311
  br label %for.cond, !dbg !6313, !llvm.loop !6314

for.end1214:                                      ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6316
  br label %return, !dbg !6316

return:                                           ; preds = %for.end1214, %if.then1069, %if.then1064, %if.then1058, %if.then836, %if.then721, %if.then678, %if.then664, %if.then572, %if.then554, %if.then533, %if.then511, %if.then462, %if.then376, %if.then323, %if.then294, %if.then237, %if.then201, %if.then119
  %741 = load i32, i32* %retval, align 4, !dbg !6317
  ret i32 %741, !dbg !6317
}

declare %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext*, %struct.AVCodec*) #4

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #2

declare void @av_init_packet(%struct.AVPacket*) #4

declare i32 @av_new_packet(%struct.AVPacket*, i32) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

declare i32 @ff_alloc_extradata(%struct.AVCodecParameters*, i32) #4

declare %struct.AVChapter* @avpriv_new_chapter(%struct.AVFormatContext*, i32, i64, i64, i64, i8*) #4

; Function Attrs: nounwind uwtable
define internal void @matroska_add_index_entries(%struct.MatroskaDemuxContext* %matroska) #0 !dbg !6318 {
entry:
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %index_list = alloca %struct.EbmlList*, align 8
  %index = alloca %struct.MatroskaIndex*, align 8
  %index_scale = alloca i64, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %pos_list = alloca %struct.EbmlList*, align 8
  %pos14 = alloca %struct.MatroskaIndexPos*, align 8
  %track = alloca %struct.MatroskaTrack*, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !6319, metadata !2574), !dbg !6320
  call void @llvm.dbg.declare(metadata %struct.EbmlList** %index_list, metadata !6321, metadata !2574), !dbg !6322
  call void @llvm.dbg.declare(metadata %struct.MatroskaIndex** %index, metadata !6323, metadata !2574), !dbg !6330
  call void @llvm.dbg.declare(metadata i64* %index_scale, metadata !6331, metadata !2574), !dbg !6332
  store i64 1, i64* %index_scale, align 8, !dbg !6332
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6333, metadata !2574), !dbg !6334
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6335, metadata !2574), !dbg !6336
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6337
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 1, !dbg !6339
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !6339
  %flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 15, !dbg !6340
  %2 = load i32, i32* %flags, align 8, !dbg !6340
  %and = and i32 %2, 2, !dbg !6341
  %tobool = icmp ne i32 %and, 0, !dbg !6341
  br i1 %tobool, label %if.then, label %if.end, !dbg !6342

if.then:                                          ; preds = %entry
  br label %for.end40, !dbg !6343

if.end:                                           ; preds = %entry
  %3 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6344
  %index1 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %3, i32 0, i32 14, !dbg !6345
  store %struct.EbmlList* %index1, %struct.EbmlList** %index_list, align 8, !dbg !6346
  %4 = load %struct.EbmlList*, %struct.EbmlList** %index_list, align 8, !dbg !6347
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %4, i32 0, i32 1, !dbg !6348
  %5 = load i8*, i8** %elem, align 8, !dbg !6348
  %6 = bitcast i8* %5 to %struct.MatroskaIndex*, !dbg !6347
  store %struct.MatroskaIndex* %6, %struct.MatroskaIndex** %index, align 8, !dbg !6349
  %7 = load %struct.EbmlList*, %struct.EbmlList** %index_list, align 8, !dbg !6350
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %7, i32 0, i32 0, !dbg !6352
  %8 = load i32, i32* %nb_elem, align 8, !dbg !6352
  %cmp = icmp slt i32 %8, 2, !dbg !6353
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6354

if.then2:                                         ; preds = %if.end
  br label %for.end40, !dbg !6355

if.end3:                                          ; preds = %if.end
  %9 = load %struct.MatroskaIndex*, %struct.MatroskaIndex** %index, align 8, !dbg !6356
  %arrayidx = getelementptr inbounds %struct.MatroskaIndex, %struct.MatroskaIndex* %9, i64 1, !dbg !6356
  %time = getelementptr inbounds %struct.MatroskaIndex, %struct.MatroskaIndex* %arrayidx, i32 0, i32 0, !dbg !6358
  %10 = load i64, i64* %time, align 8, !dbg !6358
  %conv = uitofp i64 %10 to double, !dbg !6356
  %11 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6359
  %time_scale = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %11, i32 0, i32 6, !dbg !6360
  %12 = load i64, i64* %time_scale, align 8, !dbg !6360
  %conv4 = uitofp i64 %12 to double, !dbg !6359
  %div = fdiv double 1.000000e+14, %conv4, !dbg !6361
  %cmp5 = fcmp ogt double %conv, %div, !dbg !6362
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !6363

if.then7:                                         ; preds = %if.end3
  %13 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6364
  %ctx8 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %13, i32 0, i32 1, !dbg !6366
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx8, align 8, !dbg !6366
  %15 = bitcast %struct.AVFormatContext* %14 to i8*, !dbg !6364
  call void (i8*, i32, i8*, ...) @av_log(i8* %15, i32 24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.100, i32 0, i32 0)), !dbg !6367
  br label %for.end40, !dbg !6368

if.end9:                                          ; preds = %if.end3
  store i32 0, i32* %i, align 4, !dbg !6369
  br label %for.cond, !dbg !6371

for.cond:                                         ; preds = %for.inc38, %if.end9
  %16 = load i32, i32* %i, align 4, !dbg !6372
  %17 = load %struct.EbmlList*, %struct.EbmlList** %index_list, align 8, !dbg !6375
  %nb_elem10 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %17, i32 0, i32 0, !dbg !6376
  %18 = load i32, i32* %nb_elem10, align 8, !dbg !6376
  %cmp11 = icmp slt i32 %16, %18, !dbg !6377
  br i1 %cmp11, label %for.body, label %for.end40, !dbg !6378

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.EbmlList** %pos_list, metadata !6379, metadata !2574), !dbg !6381
  %19 = load i32, i32* %i, align 4, !dbg !6382
  %idxprom = sext i32 %19 to i64, !dbg !6383
  %20 = load %struct.MatroskaIndex*, %struct.MatroskaIndex** %index, align 8, !dbg !6383
  %arrayidx13 = getelementptr inbounds %struct.MatroskaIndex, %struct.MatroskaIndex* %20, i64 %idxprom, !dbg !6383
  %pos = getelementptr inbounds %struct.MatroskaIndex, %struct.MatroskaIndex* %arrayidx13, i32 0, i32 1, !dbg !6384
  store %struct.EbmlList* %pos, %struct.EbmlList** %pos_list, align 8, !dbg !6381
  call void @llvm.dbg.declare(metadata %struct.MatroskaIndexPos** %pos14, metadata !6385, metadata !2574), !dbg !6392
  %21 = load %struct.EbmlList*, %struct.EbmlList** %pos_list, align 8, !dbg !6393
  %elem15 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %21, i32 0, i32 1, !dbg !6394
  %22 = load i8*, i8** %elem15, align 8, !dbg !6394
  %23 = bitcast i8* %22 to %struct.MatroskaIndexPos*, !dbg !6393
  store %struct.MatroskaIndexPos* %23, %struct.MatroskaIndexPos** %pos14, align 8, !dbg !6392
  store i32 0, i32* %j, align 4, !dbg !6395
  br label %for.cond16, !dbg !6397

for.cond16:                                       ; preds = %for.inc, %for.body
  %24 = load i32, i32* %j, align 4, !dbg !6398
  %25 = load %struct.EbmlList*, %struct.EbmlList** %pos_list, align 8, !dbg !6401
  %nb_elem17 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %25, i32 0, i32 0, !dbg !6402
  %26 = load i32, i32* %nb_elem17, align 8, !dbg !6402
  %cmp18 = icmp slt i32 %24, %26, !dbg !6403
  br i1 %cmp18, label %for.body20, label %for.end, !dbg !6404

for.body20:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track, metadata !6405, metadata !2574), !dbg !6407
  %27 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6408
  %28 = load i32, i32* %j, align 4, !dbg !6409
  %idxprom21 = sext i32 %28 to i64, !dbg !6410
  %29 = load %struct.MatroskaIndexPos*, %struct.MatroskaIndexPos** %pos14, align 8, !dbg !6410
  %arrayidx22 = getelementptr inbounds %struct.MatroskaIndexPos, %struct.MatroskaIndexPos* %29, i64 %idxprom21, !dbg !6410
  %track23 = getelementptr inbounds %struct.MatroskaIndexPos, %struct.MatroskaIndexPos* %arrayidx22, i32 0, i32 0, !dbg !6411
  %30 = load i64, i64* %track23, align 8, !dbg !6411
  %conv24 = trunc i64 %30 to i32, !dbg !6410
  %call = call %struct.MatroskaTrack* @matroska_find_track_by_num(%struct.MatroskaDemuxContext* %27, i32 %conv24), !dbg !6412
  store %struct.MatroskaTrack* %call, %struct.MatroskaTrack** %track, align 8, !dbg !6407
  %31 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6413
  %tobool25 = icmp ne %struct.MatroskaTrack* %31, null, !dbg !6413
  br i1 %tobool25, label %land.lhs.true, label %if.end37, !dbg !6415

land.lhs.true:                                    ; preds = %for.body20
  %32 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6416
  %stream = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %32, i32 0, i32 18, !dbg !6418
  %33 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !6418
  %tobool26 = icmp ne %struct.AVStream* %33, null, !dbg !6416
  br i1 %tobool26, label %if.then27, label %if.end37, !dbg !6419

if.then27:                                        ; preds = %land.lhs.true
  %34 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6420
  %stream28 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %34, i32 0, i32 18, !dbg !6421
  %35 = load %struct.AVStream*, %struct.AVStream** %stream28, align 8, !dbg !6421
  %36 = load i32, i32* %j, align 4, !dbg !6422
  %idxprom29 = sext i32 %36 to i64, !dbg !6423
  %37 = load %struct.MatroskaIndexPos*, %struct.MatroskaIndexPos** %pos14, align 8, !dbg !6423
  %arrayidx30 = getelementptr inbounds %struct.MatroskaIndexPos, %struct.MatroskaIndexPos* %37, i64 %idxprom29, !dbg !6423
  %pos31 = getelementptr inbounds %struct.MatroskaIndexPos, %struct.MatroskaIndexPos* %arrayidx30, i32 0, i32 1, !dbg !6424
  %38 = load i64, i64* %pos31, align 8, !dbg !6424
  %39 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6425
  %segment_start = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %39, i32 0, i32 17, !dbg !6426
  %40 = load i64, i64* %segment_start, align 8, !dbg !6426
  %add = add i64 %38, %40, !dbg !6427
  %41 = load i32, i32* %i, align 4, !dbg !6428
  %idxprom32 = sext i32 %41 to i64, !dbg !6429
  %42 = load %struct.MatroskaIndex*, %struct.MatroskaIndex** %index, align 8, !dbg !6429
  %arrayidx33 = getelementptr inbounds %struct.MatroskaIndex, %struct.MatroskaIndex* %42, i64 %idxprom32, !dbg !6429
  %time34 = getelementptr inbounds %struct.MatroskaIndex, %struct.MatroskaIndex* %arrayidx33, i32 0, i32 0, !dbg !6430
  %43 = load i64, i64* %time34, align 8, !dbg !6430
  %44 = load i64, i64* %index_scale, align 8, !dbg !6431
  %div35 = udiv i64 %43, %44, !dbg !6432
  %call36 = call i32 @av_add_index_entry(%struct.AVStream* %35, i64 %add, i64 %div35, i32 0, i32 0, i32 1), !dbg !6433
  br label %if.end37, !dbg !6433

if.end37:                                         ; preds = %if.then27, %land.lhs.true, %for.body20
  br label %for.inc, !dbg !6434

for.inc:                                          ; preds = %if.end37
  %45 = load i32, i32* %j, align 4, !dbg !6435
  %inc = add nsw i32 %45, 1, !dbg !6435
  store i32 %inc, i32* %j, align 4, !dbg !6435
  br label %for.cond16, !dbg !6437, !llvm.loop !6438

for.end:                                          ; preds = %for.cond16
  br label %for.inc38, !dbg !6440

for.inc38:                                        ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !dbg !6441
  %inc39 = add nsw i32 %46, 1, !dbg !6441
  store i32 %inc39, i32* %i, align 4, !dbg !6441
  br label %for.cond, !dbg !6443, !llvm.loop !6444

for.end40:                                        ; preds = %if.then, %if.then2, %if.then7, %for.cond
  ret void, !dbg !6446
}

; Function Attrs: nounwind uwtable
define internal void @matroska_convert_tags(%struct.AVFormatContext* %s) #0 !dbg !6447 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %matroska = alloca %struct.MatroskaDemuxContext*, align 8
  %tags = alloca %struct.MatroskaTags*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %attachment = alloca %struct.MatroskaAttachment*, align 8
  %found = alloca i32, align 4
  %chapter = alloca %struct.MatroskaChapter*, align 8
  %found38 = alloca i32, align 4
  %track = alloca %struct.MatroskaTrack*, align 8
  %found83 = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !6450, metadata !2574), !dbg !6451
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska, metadata !6452, metadata !2574), !dbg !6453
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6454
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !6455
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6455
  %2 = bitcast i8* %1 to %struct.MatroskaDemuxContext*, !dbg !6454
  store %struct.MatroskaDemuxContext* %2, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !6453
  call void @llvm.dbg.declare(metadata %struct.MatroskaTags** %tags, metadata !6456, metadata !2574), !dbg !6471
  %3 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !6472
  %tags1 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %3, i32 0, i32 15, !dbg !6473
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tags1, i32 0, i32 1, !dbg !6474
  %4 = load i8*, i8** %elem, align 8, !dbg !6474
  %5 = bitcast i8* %4 to %struct.MatroskaTags*, !dbg !6472
  store %struct.MatroskaTags* %5, %struct.MatroskaTags** %tags, align 8, !dbg !6471
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6475, metadata !2574), !dbg !6476
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6477, metadata !2574), !dbg !6478
  store i32 0, i32* %i, align 4, !dbg !6479
  br label %for.cond, !dbg !6481

for.cond:                                         ; preds = %for.inc132, %entry
  %6 = load i32, i32* %i, align 4, !dbg !6482
  %7 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !6485
  %tags2 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i32 0, i32 15, !dbg !6486
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tags2, i32 0, i32 0, !dbg !6487
  %8 = load i32, i32* %nb_elem, align 8, !dbg !6487
  %cmp = icmp slt i32 %6, %8, !dbg !6488
  br i1 %cmp, label %for.body, label %for.end134, !dbg !6489

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !6490
  %idxprom = sext i32 %9 to i64, !dbg !6493
  %10 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6493
  %arrayidx = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %10, i64 %idxprom, !dbg !6493
  %target = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx, i32 0, i32 0, !dbg !6494
  %attachuid = getelementptr inbounds %struct.MatroskaTagTarget, %struct.MatroskaTagTarget* %target, i32 0, i32 4, !dbg !6495
  %11 = load i64, i64* %attachuid, align 8, !dbg !6495
  %tobool = icmp ne i64 %11, 0, !dbg !6493
  br i1 %tobool, label %if.then, label %if.else, !dbg !6496

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MatroskaAttachment** %attachment, metadata !6497, metadata !2574), !dbg !6499
  %12 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !6500
  %attachments = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %12, i32 0, i32 12, !dbg !6501
  %elem3 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %attachments, i32 0, i32 1, !dbg !6502
  %13 = load i8*, i8** %elem3, align 8, !dbg !6502
  %14 = bitcast i8* %13 to %struct.MatroskaAttachment*, !dbg !6500
  store %struct.MatroskaAttachment* %14, %struct.MatroskaAttachment** %attachment, align 8, !dbg !6499
  call void @llvm.dbg.declare(metadata i32* %found, metadata !6503, metadata !2574), !dbg !6504
  store i32 0, i32* %found, align 4, !dbg !6504
  store i32 0, i32* %j, align 4, !dbg !6505
  br label %for.cond4, !dbg !6507

for.cond4:                                        ; preds = %for.inc, %if.then
  %15 = load i32, i32* %j, align 4, !dbg !6508
  %16 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !6511
  %attachments5 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %16, i32 0, i32 12, !dbg !6512
  %nb_elem6 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %attachments5, i32 0, i32 0, !dbg !6513
  %17 = load i32, i32* %nb_elem6, align 8, !dbg !6513
  %cmp7 = icmp slt i32 %15, %17, !dbg !6514
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !6515

for.body8:                                        ; preds = %for.cond4
  %18 = load i32, i32* %j, align 4, !dbg !6516
  %idxprom9 = sext i32 %18 to i64, !dbg !6519
  %19 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachment, align 8, !dbg !6519
  %arrayidx10 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %19, i64 %idxprom9, !dbg !6519
  %uid = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx10, i32 0, i32 0, !dbg !6520
  %20 = load i64, i64* %uid, align 8, !dbg !6520
  %21 = load i32, i32* %i, align 4, !dbg !6521
  %idxprom11 = sext i32 %21 to i64, !dbg !6522
  %22 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6522
  %arrayidx12 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %22, i64 %idxprom11, !dbg !6522
  %target13 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx12, i32 0, i32 0, !dbg !6523
  %attachuid14 = getelementptr inbounds %struct.MatroskaTagTarget, %struct.MatroskaTagTarget* %target13, i32 0, i32 4, !dbg !6524
  %23 = load i64, i64* %attachuid14, align 8, !dbg !6524
  %cmp15 = icmp eq i64 %20, %23, !dbg !6525
  br i1 %cmp15, label %land.lhs.true, label %if.end, !dbg !6526

land.lhs.true:                                    ; preds = %for.body8
  %24 = load i32, i32* %j, align 4, !dbg !6527
  %idxprom16 = sext i32 %24 to i64, !dbg !6528
  %25 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachment, align 8, !dbg !6528
  %arrayidx17 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %25, i64 %idxprom16, !dbg !6528
  %stream = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx17, i32 0, i32 4, !dbg !6529
  %26 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !6529
  %tobool18 = icmp ne %struct.AVStream* %26, null, !dbg !6528
  br i1 %tobool18, label %if.then19, label %if.end, !dbg !6530

if.then19:                                        ; preds = %land.lhs.true
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6532
  %28 = load i32, i32* %i, align 4, !dbg !6534
  %idxprom20 = sext i32 %28 to i64, !dbg !6535
  %29 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6535
  %arrayidx21 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %29, i64 %idxprom20, !dbg !6535
  %tag = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx21, i32 0, i32 1, !dbg !6536
  %30 = load i32, i32* %j, align 4, !dbg !6537
  %idxprom22 = sext i32 %30 to i64, !dbg !6538
  %31 = load %struct.MatroskaAttachment*, %struct.MatroskaAttachment** %attachment, align 8, !dbg !6538
  %arrayidx23 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %31, i64 %idxprom22, !dbg !6538
  %stream24 = getelementptr inbounds %struct.MatroskaAttachment, %struct.MatroskaAttachment* %arrayidx23, i32 0, i32 4, !dbg !6539
  %32 = load %struct.AVStream*, %struct.AVStream** %stream24, align 8, !dbg !6539
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %32, i32 0, i32 11, !dbg !6540
  call void @matroska_convert_tag(%struct.AVFormatContext* %27, %struct.EbmlList* %tag, %struct.AVDictionary** %metadata, i8* null), !dbg !6541
  store i32 1, i32* %found, align 4, !dbg !6542
  br label %if.end, !dbg !6543

if.end:                                           ; preds = %if.then19, %land.lhs.true, %for.body8
  br label %for.inc, !dbg !6544

for.inc:                                          ; preds = %if.end
  %33 = load i32, i32* %j, align 4, !dbg !6545
  %inc = add nsw i32 %33, 1, !dbg !6545
  store i32 %inc, i32* %j, align 4, !dbg !6545
  br label %for.cond4, !dbg !6547, !llvm.loop !6548

for.end:                                          ; preds = %for.cond4
  %34 = load i32, i32* %found, align 4, !dbg !6550
  %tobool25 = icmp ne i32 %34, 0, !dbg !6550
  br i1 %tobool25, label %if.end31, label %if.then26, !dbg !6552

if.then26:                                        ; preds = %for.end
  %35 = load i32, i32* %i, align 4, !dbg !6553
  %36 = load i32, i32* %i, align 4, !dbg !6555
  %idxprom27 = sext i32 %36 to i64, !dbg !6556
  %37 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6556
  %arrayidx28 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %37, i64 %idxprom27, !dbg !6556
  %target29 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx28, i32 0, i32 0, !dbg !6557
  %attachuid30 = getelementptr inbounds %struct.MatroskaTagTarget, %struct.MatroskaTagTarget* %target29, i32 0, i32 4, !dbg !6558
  %38 = load i64, i64* %attachuid30, align 8, !dbg !6558
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.102, i32 0, i32 0), i32 %35, i64 %38), !dbg !6559
  br label %if.end31, !dbg !6560

if.end31:                                         ; preds = %if.then26, %for.end
  br label %if.end131, !dbg !6561

if.else:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !6562
  %idxprom32 = sext i32 %39 to i64, !dbg !6565
  %40 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6565
  %arrayidx33 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %40, i64 %idxprom32, !dbg !6565
  %target34 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx33, i32 0, i32 0, !dbg !6566
  %chapteruid = getelementptr inbounds %struct.MatroskaTagTarget, %struct.MatroskaTagTarget* %target34, i32 0, i32 3, !dbg !6567
  %41 = load i64, i64* %chapteruid, align 8, !dbg !6567
  %tobool35 = icmp ne i64 %41, 0, !dbg !6565
  br i1 %tobool35, label %if.then36, label %if.else76, !dbg !6565

if.then36:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.MatroskaChapter** %chapter, metadata !6568, metadata !2574), !dbg !6570
  %42 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !6571
  %chapters = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %42, i32 0, i32 13, !dbg !6572
  %elem37 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %chapters, i32 0, i32 1, !dbg !6573
  %43 = load i8*, i8** %elem37, align 8, !dbg !6573
  %44 = bitcast i8* %43 to %struct.MatroskaChapter*, !dbg !6571
  store %struct.MatroskaChapter* %44, %struct.MatroskaChapter** %chapter, align 8, !dbg !6570
  call void @llvm.dbg.declare(metadata i32* %found38, metadata !6574, metadata !2574), !dbg !6575
  store i32 0, i32* %found38, align 4, !dbg !6575
  store i32 0, i32* %j, align 4, !dbg !6576
  br label %for.cond39, !dbg !6578

for.cond39:                                       ; preds = %for.inc66, %if.then36
  %45 = load i32, i32* %j, align 4, !dbg !6579
  %46 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !6582
  %chapters40 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %46, i32 0, i32 13, !dbg !6583
  %nb_elem41 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %chapters40, i32 0, i32 0, !dbg !6584
  %47 = load i32, i32* %nb_elem41, align 8, !dbg !6584
  %cmp42 = icmp slt i32 %45, %47, !dbg !6585
  br i1 %cmp42, label %for.body43, label %for.end68, !dbg !6586

for.body43:                                       ; preds = %for.cond39
  %48 = load i32, i32* %j, align 4, !dbg !6587
  %idxprom44 = sext i32 %48 to i64, !dbg !6590
  %49 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapter, align 8, !dbg !6590
  %arrayidx45 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %49, i64 %idxprom44, !dbg !6590
  %uid46 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx45, i32 0, i32 2, !dbg !6591
  %50 = load i64, i64* %uid46, align 8, !dbg !6591
  %51 = load i32, i32* %i, align 4, !dbg !6592
  %idxprom47 = sext i32 %51 to i64, !dbg !6593
  %52 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6593
  %arrayidx48 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %52, i64 %idxprom47, !dbg !6593
  %target49 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx48, i32 0, i32 0, !dbg !6594
  %chapteruid50 = getelementptr inbounds %struct.MatroskaTagTarget, %struct.MatroskaTagTarget* %target49, i32 0, i32 3, !dbg !6595
  %53 = load i64, i64* %chapteruid50, align 8, !dbg !6595
  %cmp51 = icmp eq i64 %50, %53, !dbg !6596
  br i1 %cmp51, label %land.lhs.true52, label %if.end65, !dbg !6597

land.lhs.true52:                                  ; preds = %for.body43
  %54 = load i32, i32* %j, align 4, !dbg !6598
  %idxprom53 = sext i32 %54 to i64, !dbg !6599
  %55 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapter, align 8, !dbg !6599
  %arrayidx54 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %55, i64 %idxprom53, !dbg !6599
  %chapter55 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx54, i32 0, i32 4, !dbg !6600
  %56 = load %struct.AVChapter*, %struct.AVChapter** %chapter55, align 8, !dbg !6600
  %tobool56 = icmp ne %struct.AVChapter* %56, null, !dbg !6599
  br i1 %tobool56, label %if.then57, label %if.end65, !dbg !6601

if.then57:                                        ; preds = %land.lhs.true52
  %57 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6603
  %58 = load i32, i32* %i, align 4, !dbg !6605
  %idxprom58 = sext i32 %58 to i64, !dbg !6606
  %59 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6606
  %arrayidx59 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %59, i64 %idxprom58, !dbg !6606
  %tag60 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx59, i32 0, i32 1, !dbg !6607
  %60 = load i32, i32* %j, align 4, !dbg !6608
  %idxprom61 = sext i32 %60 to i64, !dbg !6609
  %61 = load %struct.MatroskaChapter*, %struct.MatroskaChapter** %chapter, align 8, !dbg !6609
  %arrayidx62 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %61, i64 %idxprom61, !dbg !6609
  %chapter63 = getelementptr inbounds %struct.MatroskaChapter, %struct.MatroskaChapter* %arrayidx62, i32 0, i32 4, !dbg !6610
  %62 = load %struct.AVChapter*, %struct.AVChapter** %chapter63, align 8, !dbg !6610
  %metadata64 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %62, i32 0, i32 4, !dbg !6611
  call void @matroska_convert_tag(%struct.AVFormatContext* %57, %struct.EbmlList* %tag60, %struct.AVDictionary** %metadata64, i8* null), !dbg !6612
  store i32 1, i32* %found38, align 4, !dbg !6613
  br label %if.end65, !dbg !6614

if.end65:                                         ; preds = %if.then57, %land.lhs.true52, %for.body43
  br label %for.inc66, !dbg !6615

for.inc66:                                        ; preds = %if.end65
  %63 = load i32, i32* %j, align 4, !dbg !6616
  %inc67 = add nsw i32 %63, 1, !dbg !6616
  store i32 %inc67, i32* %j, align 4, !dbg !6616
  br label %for.cond39, !dbg !6618, !llvm.loop !6619

for.end68:                                        ; preds = %for.cond39
  %64 = load i32, i32* %found38, align 4, !dbg !6621
  %tobool69 = icmp ne i32 %64, 0, !dbg !6621
  br i1 %tobool69, label %if.end75, label %if.then70, !dbg !6623

if.then70:                                        ; preds = %for.end68
  %65 = load i32, i32* %i, align 4, !dbg !6624
  %66 = load i32, i32* %i, align 4, !dbg !6626
  %idxprom71 = sext i32 %66 to i64, !dbg !6627
  %67 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6627
  %arrayidx72 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %67, i64 %idxprom71, !dbg !6627
  %target73 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx72, i32 0, i32 0, !dbg !6628
  %chapteruid74 = getelementptr inbounds %struct.MatroskaTagTarget, %struct.MatroskaTagTarget* %target73, i32 0, i32 3, !dbg !6629
  %68 = load i64, i64* %chapteruid74, align 8, !dbg !6629
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.103, i32 0, i32 0), i32 %65, i64 %68), !dbg !6630
  br label %if.end75, !dbg !6631

if.end75:                                         ; preds = %if.then70, %for.end68
  br label %if.end130, !dbg !6632

if.else76:                                        ; preds = %if.else
  %69 = load i32, i32* %i, align 4, !dbg !6633
  %idxprom77 = sext i32 %69 to i64, !dbg !6636
  %70 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6636
  %arrayidx78 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %70, i64 %idxprom77, !dbg !6636
  %target79 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx78, i32 0, i32 0, !dbg !6637
  %trackuid = getelementptr inbounds %struct.MatroskaTagTarget, %struct.MatroskaTagTarget* %target79, i32 0, i32 2, !dbg !6638
  %71 = load i64, i64* %trackuid, align 8, !dbg !6638
  %tobool80 = icmp ne i64 %71, 0, !dbg !6636
  br i1 %tobool80, label %if.then81, label %if.else121, !dbg !6636

if.then81:                                        ; preds = %if.else76
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track, metadata !6639, metadata !2574), !dbg !6641
  %72 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !6642
  %tracks = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %72, i32 0, i32 11, !dbg !6643
  %elem82 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks, i32 0, i32 1, !dbg !6644
  %73 = load i8*, i8** %elem82, align 8, !dbg !6644
  %74 = bitcast i8* %73 to %struct.MatroskaTrack*, !dbg !6642
  store %struct.MatroskaTrack* %74, %struct.MatroskaTrack** %track, align 8, !dbg !6641
  call void @llvm.dbg.declare(metadata i32* %found83, metadata !6645, metadata !2574), !dbg !6646
  store i32 0, i32* %found83, align 4, !dbg !6646
  store i32 0, i32* %j, align 4, !dbg !6647
  br label %for.cond84, !dbg !6649

for.cond84:                                       ; preds = %for.inc111, %if.then81
  %75 = load i32, i32* %j, align 4, !dbg !6650
  %76 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !6653
  %tracks85 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %76, i32 0, i32 11, !dbg !6654
  %nb_elem86 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks85, i32 0, i32 0, !dbg !6655
  %77 = load i32, i32* %nb_elem86, align 8, !dbg !6655
  %cmp87 = icmp slt i32 %75, %77, !dbg !6656
  br i1 %cmp87, label %for.body88, label %for.end113, !dbg !6657

for.body88:                                       ; preds = %for.cond84
  %78 = load i32, i32* %j, align 4, !dbg !6658
  %idxprom89 = sext i32 %78 to i64, !dbg !6661
  %79 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6661
  %arrayidx90 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %79, i64 %idxprom89, !dbg !6661
  %uid91 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx90, i32 0, i32 1, !dbg !6662
  %80 = load i64, i64* %uid91, align 8, !dbg !6662
  %81 = load i32, i32* %i, align 4, !dbg !6663
  %idxprom92 = sext i32 %81 to i64, !dbg !6664
  %82 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6664
  %arrayidx93 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %82, i64 %idxprom92, !dbg !6664
  %target94 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx93, i32 0, i32 0, !dbg !6665
  %trackuid95 = getelementptr inbounds %struct.MatroskaTagTarget, %struct.MatroskaTagTarget* %target94, i32 0, i32 2, !dbg !6666
  %83 = load i64, i64* %trackuid95, align 8, !dbg !6666
  %cmp96 = icmp eq i64 %80, %83, !dbg !6667
  br i1 %cmp96, label %land.lhs.true97, label %if.end110, !dbg !6668

land.lhs.true97:                                  ; preds = %for.body88
  %84 = load i32, i32* %j, align 4, !dbg !6669
  %idxprom98 = sext i32 %84 to i64, !dbg !6670
  %85 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6670
  %arrayidx99 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %85, i64 %idxprom98, !dbg !6670
  %stream100 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx99, i32 0, i32 18, !dbg !6671
  %86 = load %struct.AVStream*, %struct.AVStream** %stream100, align 8, !dbg !6671
  %tobool101 = icmp ne %struct.AVStream* %86, null, !dbg !6670
  br i1 %tobool101, label %if.then102, label %if.end110, !dbg !6672

if.then102:                                       ; preds = %land.lhs.true97
  %87 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6674
  %88 = load i32, i32* %i, align 4, !dbg !6676
  %idxprom103 = sext i32 %88 to i64, !dbg !6677
  %89 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6677
  %arrayidx104 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %89, i64 %idxprom103, !dbg !6677
  %tag105 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx104, i32 0, i32 1, !dbg !6678
  %90 = load i32, i32* %j, align 4, !dbg !6679
  %idxprom106 = sext i32 %90 to i64, !dbg !6680
  %91 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !6680
  %arrayidx107 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %91, i64 %idxprom106, !dbg !6680
  %stream108 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx107, i32 0, i32 18, !dbg !6681
  %92 = load %struct.AVStream*, %struct.AVStream** %stream108, align 8, !dbg !6681
  %metadata109 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %92, i32 0, i32 11, !dbg !6682
  call void @matroska_convert_tag(%struct.AVFormatContext* %87, %struct.EbmlList* %tag105, %struct.AVDictionary** %metadata109, i8* null), !dbg !6683
  store i32 1, i32* %found83, align 4, !dbg !6684
  br label %if.end110, !dbg !6685

if.end110:                                        ; preds = %if.then102, %land.lhs.true97, %for.body88
  br label %for.inc111, !dbg !6686

for.inc111:                                       ; preds = %if.end110
  %93 = load i32, i32* %j, align 4, !dbg !6687
  %inc112 = add nsw i32 %93, 1, !dbg !6687
  store i32 %inc112, i32* %j, align 4, !dbg !6687
  br label %for.cond84, !dbg !6689, !llvm.loop !6690

for.end113:                                       ; preds = %for.cond84
  %94 = load i32, i32* %found83, align 4, !dbg !6692
  %tobool114 = icmp ne i32 %94, 0, !dbg !6692
  br i1 %tobool114, label %if.end120, label %if.then115, !dbg !6694

if.then115:                                       ; preds = %for.end113
  %95 = load i32, i32* %i, align 4, !dbg !6695
  %96 = load i32, i32* %i, align 4, !dbg !6697
  %idxprom116 = sext i32 %96 to i64, !dbg !6698
  %97 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6698
  %arrayidx117 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %97, i64 %idxprom116, !dbg !6698
  %target118 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx117, i32 0, i32 0, !dbg !6699
  %trackuid119 = getelementptr inbounds %struct.MatroskaTagTarget, %struct.MatroskaTagTarget* %target118, i32 0, i32 2, !dbg !6700
  %98 = load i64, i64* %trackuid119, align 8, !dbg !6700
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.104, i32 0, i32 0), i32 %95, i64 %98), !dbg !6701
  br label %if.end120, !dbg !6702

if.end120:                                        ; preds = %if.then115, %for.end113
  br label %if.end129, !dbg !6703

if.else121:                                       ; preds = %if.else76
  %99 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6704
  %100 = load i32, i32* %i, align 4, !dbg !6706
  %idxprom122 = sext i32 %100 to i64, !dbg !6707
  %101 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6707
  %arrayidx123 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %101, i64 %idxprom122, !dbg !6707
  %tag124 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx123, i32 0, i32 1, !dbg !6708
  %102 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6709
  %metadata125 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %102, i32 0, i32 29, !dbg !6710
  %103 = load i32, i32* %i, align 4, !dbg !6711
  %idxprom126 = sext i32 %103 to i64, !dbg !6712
  %104 = load %struct.MatroskaTags*, %struct.MatroskaTags** %tags, align 8, !dbg !6712
  %arrayidx127 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %104, i64 %idxprom126, !dbg !6712
  %target128 = getelementptr inbounds %struct.MatroskaTags, %struct.MatroskaTags* %arrayidx127, i32 0, i32 0, !dbg !6713
  %type = getelementptr inbounds %struct.MatroskaTagTarget, %struct.MatroskaTagTarget* %target128, i32 0, i32 0, !dbg !6714
  %105 = load i8*, i8** %type, align 8, !dbg !6714
  call void @matroska_convert_tag(%struct.AVFormatContext* %99, %struct.EbmlList* %tag124, %struct.AVDictionary** %metadata125, i8* %105), !dbg !6715
  br label %if.end129

if.end129:                                        ; preds = %if.else121, %if.end120
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end75
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.end31
  br label %for.inc132, !dbg !6716

for.inc132:                                       ; preds = %if.end131
  %106 = load i32, i32* %i, align 4, !dbg !6717
  %inc133 = add nsw i32 %106, 1, !dbg !6717
  store i32 %inc133, i32* %i, align 4, !dbg !6717
  br label %for.cond, !dbg !6719, !llvm.loop !6720

for.end134:                                       ; preds = %for.cond
  ret void, !dbg !6722
}

; Function Attrs: nounwind uwtable
define internal i32 @ebml_read_num(%struct.MatroskaDemuxContext* %matroska, %struct.AVIOContext* %pb, i32 %max_size, i64* %number) #0 !dbg !6723 {
entry:
  %s.addr.i26 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i26, metadata !2735, metadata !2574), !dbg !6726
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !6730
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %max_size.addr = alloca i32, align 4
  %number.addr = alloca i64*, align 8
  %read = alloca i32, align 4
  %n = alloca i32, align 4
  %total = alloca i64, align 8
  %pos = alloca i64, align 8
  %pos11 = alloca i64, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !6736, metadata !2574), !dbg !6737
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !6738, metadata !2574), !dbg !6739
  store i32 %max_size, i32* %max_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_size.addr, metadata !6740, metadata !2574), !dbg !6741
  store i64* %number, i64** %number.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %number.addr, metadata !6742, metadata !2574), !dbg !6743
  call void @llvm.dbg.declare(metadata i32* %read, metadata !6744, metadata !2574), !dbg !6745
  store i32 1, i32* %read, align 4, !dbg !6745
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6746, metadata !2574), !dbg !6747
  store i32 1, i32* %n, align 4, !dbg !6747
  call void @llvm.dbg.declare(metadata i64* %total, metadata !6748, metadata !2574), !dbg !6749
  store i64 0, i64* %total, align 8, !dbg !6749
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6750
  %call = call i32 @avio_r8(%struct.AVIOContext* %0), !dbg !6751
  %conv = sext i32 %call to i64, !dbg !6751
  store i64 %conv, i64* %total, align 8, !dbg !6752
  %tobool = icmp ne i64 %conv, 0, !dbg !6752
  br i1 %tobool, label %if.end7, label %if.then, !dbg !6753

if.then:                                          ; preds = %entry
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6754
  %call1 = call i32 @avio_feof(%struct.AVIOContext* %1), !dbg !6755
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6755
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !6756

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6757, metadata !2574), !dbg !6758
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6759
  store %struct.AVIOContext* %2, %struct.AVIOContext** %s.addr.i, align 8, !dbg !6760
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !6761
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %3, i64 0, i32 1) #11, !dbg !6762
  store i64 %call.i, i64* %pos, align 8, !dbg !6758
  %4 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6763
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %4, i32 0, i32 1, !dbg !6764
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !6764
  %6 = bitcast %struct.AVFormatContext* %5 to i8*, !dbg !6763
  %7 = load i64, i64* %pos, align 8, !dbg !6765
  %8 = load i64, i64* %pos, align 8, !dbg !6766
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i64 %7, i64 %8), !dbg !6767
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6768
  %error = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %9, i32 0, i32 16, !dbg !6769
  %10 = load i32, i32* %error, align 8, !dbg !6769
  %tobool5 = icmp ne i32 %10, 0, !dbg !6768
  br i1 %tobool5, label %cond.true, label %cond.false, !dbg !6768

cond.true:                                        ; preds = %if.then3
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6770
  %error6 = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %11, i32 0, i32 16, !dbg !6772
  %12 = load i32, i32* %error6, align 8, !dbg !6772
  br label %cond.end, !dbg !6773

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !6774

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ -5, %cond.false ], !dbg !6776
  store i32 %cond, i32* %retval, align 4, !dbg !6778
  br label %return, !dbg !6778

if.end:                                           ; preds = %if.then
  store i32 -541478725, i32* %retval, align 4, !dbg !6779
  br label %return, !dbg !6779

if.end7:                                          ; preds = %entry
  %13 = load i64, i64* %total, align 8, !dbg !6780
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @ff_log2_tab, i64 0, i64 %13, !dbg !6781
  %14 = load i8, i8* %arrayidx, align 1, !dbg !6781
  %conv8 = zext i8 %14 to i32, !dbg !6781
  %sub = sub nsw i32 8, %conv8, !dbg !6782
  store i32 %sub, i32* %read, align 4, !dbg !6783
  %15 = load i32, i32* %read, align 4, !dbg !6784
  %16 = load i32, i32* %max_size.addr, align 4, !dbg !6785
  %cmp = icmp sgt i32 %15, %16, !dbg !6786
  br i1 %cmp, label %if.then10, label %if.end17, !dbg !6787

if.then10:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i64* %pos11, metadata !6788, metadata !2574), !dbg !6789
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6790
  store %struct.AVIOContext* %17, %struct.AVIOContext** %s.addr.i26, align 8, !dbg !6791
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i26, align 8, !dbg !6792
  %call.i27 = call i64 @avio_seek(%struct.AVIOContext* %18, i64 0, i32 1) #11, !dbg !6793
  %sub13 = sub nsw i64 %call.i27, 1, !dbg !6794
  store i64 %sub13, i64* %pos11, align 8, !dbg !6789
  %19 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6795
  %ctx14 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %19, i32 0, i32 1, !dbg !6796
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx14, align 8, !dbg !6796
  %21 = bitcast %struct.AVFormatContext* %20 to i8*, !dbg !6795
  %22 = load i64, i64* %total, align 8, !dbg !6797
  %conv15 = trunc i64 %22 to i8, !dbg !6798
  %conv16 = zext i8 %conv15 to i32, !dbg !6798
  %23 = load i64, i64* %pos11, align 8, !dbg !6799
  %24 = load i64, i64* %pos11, align 8, !dbg !6800
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.18, i32 0, i32 0), i32 %conv16, i64 %23, i64 %24), !dbg !6801
  store i32 -1094995529, i32* %retval, align 4, !dbg !6802
  br label %return, !dbg !6802

if.end17:                                         ; preds = %if.end7
  %25 = load i64, i64* %total, align 8, !dbg !6803
  %arrayidx18 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_log2_tab, i64 0, i64 %25, !dbg !6804
  %26 = load i8, i8* %arrayidx18, align 1, !dbg !6804
  %conv19 = zext i8 %26 to i32, !dbg !6804
  %shl = shl i32 1, %conv19, !dbg !6805
  %conv20 = sext i32 %shl to i64, !dbg !6806
  %27 = load i64, i64* %total, align 8, !dbg !6807
  %xor = xor i64 %27, %conv20, !dbg !6807
  store i64 %xor, i64* %total, align 8, !dbg !6807
  br label %while.cond, !dbg !6808

while.cond:                                       ; preds = %while.body, %if.end17
  %28 = load i32, i32* %n, align 4, !dbg !6809
  %inc = add nsw i32 %28, 1, !dbg !6809
  store i32 %inc, i32* %n, align 4, !dbg !6809
  %29 = load i32, i32* %read, align 4, !dbg !6811
  %cmp21 = icmp slt i32 %28, %29, !dbg !6812
  br i1 %cmp21, label %while.body, label %while.end, !dbg !6813

while.body:                                       ; preds = %while.cond
  %30 = load i64, i64* %total, align 8, !dbg !6814
  %shl23 = shl i64 %30, 8, !dbg !6815
  %31 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6816
  %call24 = call i32 @avio_r8(%struct.AVIOContext* %31), !dbg !6817
  %conv25 = sext i32 %call24 to i64, !dbg !6817
  %or = or i64 %shl23, %conv25, !dbg !6818
  store i64 %or, i64* %total, align 8, !dbg !6819
  br label %while.cond, !dbg !6820, !llvm.loop !6822

while.end:                                        ; preds = %while.cond
  %32 = load i64, i64* %total, align 8, !dbg !6823
  %33 = load i64*, i64** %number.addr, align 8, !dbg !6824
  store i64 %32, i64* %33, align 8, !dbg !6825
  %34 = load i32, i32* %read, align 4, !dbg !6826
  store i32 %34, i32* %retval, align 4, !dbg !6827
  br label %return, !dbg !6827

return:                                           ; preds = %while.end, %if.then10, %if.end, %cond.end
  %35 = load i32, i32* %retval, align 4, !dbg !6828
  ret i32 %35, !dbg !6828
}

; Function Attrs: nounwind uwtable
define internal i32 @ebml_parse_id(%struct.MatroskaDemuxContext* %matroska, %struct.EbmlSyntax* %syntax, i32 %id, i8* %data) #0 !dbg !6829 {
entry:
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %syntax.addr = alloca %struct.EbmlSyntax*, align 8
  %id.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !6832, metadata !2574), !dbg !6833
  store %struct.EbmlSyntax* %syntax, %struct.EbmlSyntax** %syntax.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EbmlSyntax** %syntax.addr, metadata !6834, metadata !2574), !dbg !6835
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !6836, metadata !2574), !dbg !6837
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6838, metadata !2574), !dbg !6839
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6840, metadata !2574), !dbg !6841
  store i32 0, i32* %i, align 4, !dbg !6842
  br label %for.cond, !dbg !6844

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6845
  %idxprom = sext i32 %0 to i64, !dbg !6848
  %1 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6848
  %arrayidx = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %1, i64 %idxprom, !dbg !6848
  %id1 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx, i32 0, i32 0, !dbg !6849
  %2 = load i32, i32* %id1, align 8, !dbg !6849
  %tobool = icmp ne i32 %2, 0, !dbg !6850
  br i1 %tobool, label %for.body, label %for.end, !dbg !6850

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %id.addr, align 4, !dbg !6851
  %4 = load i32, i32* %i, align 4, !dbg !6853
  %idxprom2 = sext i32 %4 to i64, !dbg !6854
  %5 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6854
  %arrayidx3 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %5, i64 %idxprom2, !dbg !6854
  %id4 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx3, i32 0, i32 0, !dbg !6855
  %6 = load i32, i32* %id4, align 8, !dbg !6855
  %cmp = icmp eq i32 %3, %6, !dbg !6856
  br i1 %cmp, label %if.then, label %if.end, !dbg !6857

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !6858

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6859

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !6861
  %inc = add nsw i32 %7, 1, !dbg !6861
  store i32 %inc, i32* %i, align 4, !dbg !6861
  br label %for.cond, !dbg !6863, !llvm.loop !6864

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !6866
  %idxprom5 = sext i32 %8 to i64, !dbg !6868
  %9 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6868
  %arrayidx6 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %9, i64 %idxprom5, !dbg !6868
  %id7 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx6, i32 0, i32 0, !dbg !6869
  %10 = load i32, i32* %id7, align 8, !dbg !6869
  %tobool8 = icmp ne i32 %10, 0, !dbg !6868
  br i1 %tobool8, label %if.end18, label %land.lhs.true, !dbg !6870

land.lhs.true:                                    ; preds = %for.end
  %11 = load i32, i32* %id.addr, align 4, !dbg !6871
  %cmp9 = icmp eq i32 %11, 524531317, !dbg !6873
  br i1 %cmp9, label %land.lhs.true10, label %if.end18, !dbg !6874

land.lhs.true10:                                  ; preds = %land.lhs.true
  %12 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6875
  %num_levels = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %12, i32 0, i32 2, !dbg !6876
  %13 = load i32, i32* %num_levels, align 8, !dbg !6876
  %cmp11 = icmp sgt i32 %13, 0, !dbg !6877
  br i1 %cmp11, label %land.lhs.true12, label %if.end18, !dbg !6878

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %14 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6879
  %num_levels13 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %14, i32 0, i32 2, !dbg !6880
  %15 = load i32, i32* %num_levels13, align 8, !dbg !6880
  %sub = sub nsw i32 %15, 1, !dbg !6881
  %idxprom14 = sext i32 %sub to i64, !dbg !6882
  %16 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6882
  %levels = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %16, i32 0, i32 3, !dbg !6883
  %arrayidx15 = getelementptr inbounds [16 x %struct.MatroskaLevel], [16 x %struct.MatroskaLevel]* %levels, i64 0, i64 %idxprom14, !dbg !6882
  %length = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %arrayidx15, i32 0, i32 1, !dbg !6884
  %17 = load i64, i64* %length, align 8, !dbg !6884
  %cmp16 = icmp eq i64 %17, 72057594037927935, !dbg !6885
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !6886

if.then17:                                        ; preds = %land.lhs.true12
  store i32 0, i32* %retval, align 4, !dbg !6888
  br label %return, !dbg !6888

if.end18:                                         ; preds = %land.lhs.true12, %land.lhs.true10, %land.lhs.true, %for.end
  %18 = load i32, i32* %i, align 4, !dbg !6889
  %idxprom19 = sext i32 %18 to i64, !dbg !6891
  %19 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6891
  %arrayidx20 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %19, i64 %idxprom19, !dbg !6891
  %id21 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx20, i32 0, i32 0, !dbg !6892
  %20 = load i32, i32* %id21, align 8, !dbg !6892
  %tobool22 = icmp ne i32 %20, 0, !dbg !6891
  br i1 %tobool22, label %if.end28, label %land.lhs.true23, !dbg !6893

land.lhs.true23:                                  ; preds = %if.end18
  %21 = load i32, i32* %id.addr, align 4, !dbg !6894
  %cmp24 = icmp ne i32 %21, 236, !dbg !6896
  br i1 %cmp24, label %land.lhs.true25, label %if.end28, !dbg !6897

land.lhs.true25:                                  ; preds = %land.lhs.true23
  %22 = load i32, i32* %id.addr, align 4, !dbg !6898
  %cmp26 = icmp ne i32 %22, 191, !dbg !6900
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !6901

if.then27:                                        ; preds = %land.lhs.true25
  %23 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6902
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %23, i32 0, i32 1, !dbg !6904
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !6904
  %25 = bitcast %struct.AVFormatContext* %24 to i8*, !dbg !6902
  %26 = load i32, i32* %id.addr, align 4, !dbg !6905
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i32 0, i32 0), i32 %26), !dbg !6906
  br label %if.end28, !dbg !6907

if.end28:                                         ; preds = %if.then27, %land.lhs.true25, %land.lhs.true23, %if.end18
  %27 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6908
  %28 = load i32, i32* %i, align 4, !dbg !6909
  %idxprom29 = sext i32 %28 to i64, !dbg !6910
  %29 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6910
  %arrayidx30 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %29, i64 %idxprom29, !dbg !6910
  %30 = load i8*, i8** %data.addr, align 8, !dbg !6911
  %call = call i32 @ebml_parse_elem(%struct.MatroskaDemuxContext* %27, %struct.EbmlSyntax* %arrayidx30, i8* %30), !dbg !6912
  store i32 %call, i32* %retval, align 4, !dbg !6913
  br label %return, !dbg !6913

return:                                           ; preds = %if.end28, %if.then17
  %31 = load i32, i32* %retval, align 4, !dbg !6914
  ret i32 %31, !dbg !6914
}

declare i32 @avio_r8(%struct.AVIOContext*) #4

declare i32 @avio_feof(%struct.AVIOContext*) #4

; Function Attrs: nounwind uwtable
define internal i32 @ebml_parse_elem(%struct.MatroskaDemuxContext* %matroska, %struct.EbmlSyntax* %syntax, i8* %data) #0 !dbg !2389 {
entry:
  %s.addr.i141 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i141, metadata !2735, metadata !2574), !dbg !6915
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !6919
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %syntax.addr = alloca %struct.EbmlSyntax*, align 8
  %data.addr = alloca i8*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %id = alloca i32, align 4
  %length = alloca i64, align 8
  %res = alloca i32, align 4
  %newelem = alloca i8*, align 8
  %level1_elem = alloca %struct.MatroskaLevel1Element*, align 8
  %list = alloca %struct.EbmlList*, align 8
  %level = alloca %struct.MatroskaLevel*, align 8
  %pb48 = alloca %struct.AVIOContext*, align 8
  %pos = alloca i64, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !6925, metadata !2574), !dbg !6926
  store %struct.EbmlSyntax* %syntax, %struct.EbmlSyntax** %syntax.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EbmlSyntax** %syntax.addr, metadata !6927, metadata !2574), !dbg !6928
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6929, metadata !2574), !dbg !6930
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !6931, metadata !2574), !dbg !6932
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !6933
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 1, !dbg !6934
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !6934
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 4, !dbg !6935
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !6935
  store %struct.AVIOContext* %2, %struct.AVIOContext** %pb, align 8, !dbg !6932
  call void @llvm.dbg.declare(metadata i32* %id, metadata !6936, metadata !2574), !dbg !6937
  %3 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6938
  %id2 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %3, i32 0, i32 0, !dbg !6939
  %4 = load i32, i32* %id2, align 8, !dbg !6939
  store i32 %4, i32* %id, align 4, !dbg !6937
  call void @llvm.dbg.declare(metadata i64* %length, metadata !6940, metadata !2574), !dbg !6941
  call void @llvm.dbg.declare(metadata i32* %res, metadata !6942, metadata !2574), !dbg !6943
  call void @llvm.dbg.declare(metadata i8** %newelem, metadata !6944, metadata !2574), !dbg !6945
  call void @llvm.dbg.declare(metadata %struct.MatroskaLevel1Element** %level1_elem, metadata !6946, metadata !2574), !dbg !6947
  %5 = load i8*, i8** %data.addr, align 8, !dbg !6948
  %6 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6949
  %data_offset = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %6, i32 0, i32 3, !dbg !6950
  %7 = load i32, i32* %data_offset, align 4, !dbg !6950
  %idx.ext = sext i32 %7 to i64, !dbg !6951
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !6951
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !6952
  %8 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6953
  %list_elem_size = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %8, i32 0, i32 2, !dbg !6955
  %9 = load i32, i32* %list_elem_size, align 8, !dbg !6955
  %tobool = icmp ne i32 %9, 0, !dbg !6953
  br i1 %tobool, label %if.then, label %if.end16, !dbg !6956

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.EbmlList** %list, metadata !6957, metadata !2574), !dbg !6959
  %10 = load i8*, i8** %data.addr, align 8, !dbg !6960
  %11 = bitcast i8* %10 to %struct.EbmlList*, !dbg !6960
  store %struct.EbmlList* %11, %struct.EbmlList** %list, align 8, !dbg !6959
  %12 = load %struct.EbmlList*, %struct.EbmlList** %list, align 8, !dbg !6961
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %12, i32 0, i32 1, !dbg !6962
  %13 = load i8*, i8** %elem, align 8, !dbg !6962
  %14 = load %struct.EbmlList*, %struct.EbmlList** %list, align 8, !dbg !6963
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %14, i32 0, i32 0, !dbg !6964
  %15 = load i32, i32* %nb_elem, align 8, !dbg !6964
  %add = add nsw i32 %15, 1, !dbg !6965
  %conv = sext i32 %add to i64, !dbg !6963
  %16 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6966
  %list_elem_size3 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %16, i32 0, i32 2, !dbg !6967
  %17 = load i32, i32* %list_elem_size3, align 8, !dbg !6967
  %conv4 = sext i32 %17 to i64, !dbg !6966
  %call = call i8* @av_realloc_array(i8* %13, i64 %conv, i64 %conv4), !dbg !6968
  store i8* %call, i8** %newelem, align 8, !dbg !6969
  %18 = load i8*, i8** %newelem, align 8, !dbg !6970
  %tobool5 = icmp ne i8* %18, null, !dbg !6970
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !6972

if.then6:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !6973
  br label %return, !dbg !6973

if.end:                                           ; preds = %if.then
  %19 = load i8*, i8** %newelem, align 8, !dbg !6974
  %20 = load %struct.EbmlList*, %struct.EbmlList** %list, align 8, !dbg !6975
  %elem7 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %20, i32 0, i32 1, !dbg !6976
  store i8* %19, i8** %elem7, align 8, !dbg !6977
  %21 = load %struct.EbmlList*, %struct.EbmlList** %list, align 8, !dbg !6978
  %elem8 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %21, i32 0, i32 1, !dbg !6979
  %22 = load i8*, i8** %elem8, align 8, !dbg !6979
  %23 = load %struct.EbmlList*, %struct.EbmlList** %list, align 8, !dbg !6980
  %nb_elem9 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %23, i32 0, i32 0, !dbg !6981
  %24 = load i32, i32* %nb_elem9, align 8, !dbg !6981
  %25 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6982
  %list_elem_size10 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %25, i32 0, i32 2, !dbg !6983
  %26 = load i32, i32* %list_elem_size10, align 8, !dbg !6983
  %mul = mul nsw i32 %24, %26, !dbg !6984
  %idx.ext11 = sext i32 %mul to i64, !dbg !6985
  %add.ptr12 = getelementptr inbounds i8, i8* %22, i64 %idx.ext11, !dbg !6985
  store i8* %add.ptr12, i8** %data.addr, align 8, !dbg !6986
  %27 = load i8*, i8** %data.addr, align 8, !dbg !6987
  %28 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6988
  %list_elem_size13 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %28, i32 0, i32 2, !dbg !6989
  %29 = load i32, i32* %list_elem_size13, align 8, !dbg !6989
  %conv14 = sext i32 %29 to i64, !dbg !6988
  call void @llvm.memset.p0i8.i64(i8* %27, i8 0, i64 %conv14, i32 1, i1 false), !dbg !6990
  %30 = load %struct.EbmlList*, %struct.EbmlList** %list, align 8, !dbg !6991
  %nb_elem15 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %30, i32 0, i32 0, !dbg !6992
  %31 = load i32, i32* %nb_elem15, align 8, !dbg !6993
  %inc = add nsw i32 %31, 1, !dbg !6993
  store i32 %inc, i32* %nb_elem15, align 8, !dbg !6993
  br label %if.end16, !dbg !6994

if.end16:                                         ; preds = %if.end, %entry
  %32 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6995
  %type = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %32, i32 0, i32 1, !dbg !6996
  %33 = load i32, i32* %type, align 4, !dbg !6996
  %cmp = icmp ne i32 %33, 8, !dbg !6997
  br i1 %cmp, label %land.lhs.true, label %if.end68, !dbg !6998

land.lhs.true:                                    ; preds = %if.end16
  %34 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !6999
  %type18 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %34, i32 0, i32 1, !dbg !7001
  %35 = load i32, i32* %type18, align 4, !dbg !7001
  %cmp19 = icmp ne i32 %35, 9, !dbg !7002
  br i1 %cmp19, label %if.then21, label %if.end68, !dbg !7003

if.then21:                                        ; preds = %land.lhs.true
  %36 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7004
  %current_id = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %36, i32 0, i32 5, !dbg !7005
  store i32 0, i32* %current_id, align 4, !dbg !7006
  %37 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7007
  %38 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7009
  %call22 = call i32 @ebml_read_length(%struct.MatroskaDemuxContext* %37, %struct.AVIOContext* %38, i64* %length), !dbg !7010
  store i32 %call22, i32* %res, align 4, !dbg !7011
  %cmp23 = icmp slt i32 %call22, 0, !dbg !7012
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !7013

if.then25:                                        ; preds = %if.then21
  %39 = load i32, i32* %res, align 4, !dbg !7014
  store i32 %39, i32* %retval, align 4, !dbg !7015
  br label %return, !dbg !7015

if.end26:                                         ; preds = %if.then21
  %40 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7016
  %type27 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %40, i32 0, i32 1, !dbg !7018
  %41 = load i32, i32* %type27, align 4, !dbg !7018
  %idxprom = zext i32 %41 to i64, !dbg !7019
  %arrayidx = getelementptr inbounds [11 x i64], [11 x i64]* @ebml_parse_elem.max_lengths, i64 0, i64 %idxprom, !dbg !7019
  %42 = load i64, i64* %arrayidx, align 8, !dbg !7019
  %tobool28 = icmp ne i64 %42, 0, !dbg !7019
  br i1 %tobool28, label %land.lhs.true29, label %if.end41, !dbg !7020

land.lhs.true29:                                  ; preds = %if.end26
  %43 = load i64, i64* %length, align 8, !dbg !7021
  %44 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7023
  %type30 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %44, i32 0, i32 1, !dbg !7024
  %45 = load i32, i32* %type30, align 4, !dbg !7024
  %idxprom31 = zext i32 %45 to i64, !dbg !7025
  %arrayidx32 = getelementptr inbounds [11 x i64], [11 x i64]* @ebml_parse_elem.max_lengths, i64 0, i64 %idxprom31, !dbg !7025
  %46 = load i64, i64* %arrayidx32, align 8, !dbg !7025
  %cmp33 = icmp ugt i64 %43, %46, !dbg !7026
  br i1 %cmp33, label %if.then35, label %if.end41, !dbg !7027

if.then35:                                        ; preds = %land.lhs.true29
  %47 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7028
  %ctx36 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %47, i32 0, i32 1, !dbg !7030
  %48 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx36, align 8, !dbg !7030
  %49 = bitcast %struct.AVFormatContext* %48 to i8*, !dbg !7028
  %50 = load i64, i64* %length, align 8, !dbg !7031
  %51 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7032
  %type37 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %51, i32 0, i32 1, !dbg !7033
  %52 = load i32, i32* %type37, align 4, !dbg !7033
  %idxprom38 = zext i32 %52 to i64, !dbg !7034
  %arrayidx39 = getelementptr inbounds [11 x i64], [11 x i64]* @ebml_parse_elem.max_lengths, i64 0, i64 %idxprom38, !dbg !7034
  %53 = load i64, i64* %arrayidx39, align 8, !dbg !7034
  %54 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7035
  %type40 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %54, i32 0, i32 1, !dbg !7036
  %55 = load i32, i32* %type40, align 4, !dbg !7036
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.20, i32 0, i32 0), i64 %50, i64 %53, i32 %55), !dbg !7037
  store i32 -1094995529, i32* %retval, align 4, !dbg !7038
  br label %return, !dbg !7038

if.end41:                                         ; preds = %land.lhs.true29, %if.end26
  %56 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7039
  %num_levels = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %56, i32 0, i32 2, !dbg !7040
  %57 = load i32, i32* %num_levels, align 8, !dbg !7040
  %cmp42 = icmp sgt i32 %57, 0, !dbg !7041
  br i1 %cmp42, label %if.then44, label %if.end67, !dbg !7042

if.then44:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata %struct.MatroskaLevel** %level, metadata !7043, metadata !2574), !dbg !7045
  %58 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7046
  %num_levels45 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %58, i32 0, i32 2, !dbg !7047
  %59 = load i32, i32* %num_levels45, align 8, !dbg !7047
  %sub = sub nsw i32 %59, 1, !dbg !7048
  %idxprom46 = sext i32 %sub to i64, !dbg !7049
  %60 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7049
  %levels = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %60, i32 0, i32 3, !dbg !7050
  %arrayidx47 = getelementptr inbounds [16 x %struct.MatroskaLevel], [16 x %struct.MatroskaLevel]* %levels, i64 0, i64 %idxprom46, !dbg !7049
  store %struct.MatroskaLevel* %arrayidx47, %struct.MatroskaLevel** %level, align 8, !dbg !7045
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb48, metadata !7051, metadata !2574), !dbg !7052
  %61 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7053
  %ctx49 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %61, i32 0, i32 1, !dbg !7054
  %62 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx49, align 8, !dbg !7054
  %pb50 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %62, i32 0, i32 4, !dbg !7055
  %63 = load %struct.AVIOContext*, %struct.AVIOContext** %pb50, align 8, !dbg !7055
  store %struct.AVIOContext* %63, %struct.AVIOContext** %pb48, align 8, !dbg !7052
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !7056, metadata !2574), !dbg !7057
  %64 = load %struct.AVIOContext*, %struct.AVIOContext** %pb48, align 8, !dbg !7058
  store %struct.AVIOContext* %64, %struct.AVIOContext** %s.addr.i, align 8, !dbg !7059
  %65 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !7060
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %65, i64 0, i32 1) #11, !dbg !7061
  store i64 %call.i, i64* %pos, align 8, !dbg !7057
  %66 = load %struct.MatroskaLevel*, %struct.MatroskaLevel** %level, align 8, !dbg !7062
  %length52 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %66, i32 0, i32 1, !dbg !7064
  %67 = load i64, i64* %length52, align 8, !dbg !7064
  %cmp53 = icmp ne i64 %67, -1, !dbg !7065
  br i1 %cmp53, label %land.lhs.true55, label %if.end66, !dbg !7066

land.lhs.true55:                                  ; preds = %if.then44
  %68 = load i64, i64* %pos, align 8, !dbg !7067
  %69 = load i64, i64* %length, align 8, !dbg !7068
  %add56 = add i64 %68, %69, !dbg !7069
  %70 = load %struct.MatroskaLevel*, %struct.MatroskaLevel** %level, align 8, !dbg !7070
  %start = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %70, i32 0, i32 0, !dbg !7071
  %71 = load i64, i64* %start, align 8, !dbg !7071
  %72 = load %struct.MatroskaLevel*, %struct.MatroskaLevel** %level, align 8, !dbg !7072
  %length57 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %72, i32 0, i32 1, !dbg !7073
  %73 = load i64, i64* %length57, align 8, !dbg !7073
  %add58 = add i64 %71, %73, !dbg !7074
  %cmp59 = icmp ugt i64 %add56, %add58, !dbg !7075
  br i1 %cmp59, label %if.then61, label %if.end66, !dbg !7076

if.then61:                                        ; preds = %land.lhs.true55
  %74 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7078
  %ctx62 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %74, i32 0, i32 1, !dbg !7080
  %75 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx62, align 8, !dbg !7080
  %76 = bitcast %struct.AVFormatContext* %75 to i8*, !dbg !7078
  %77 = load i64, i64* %length, align 8, !dbg !7081
  %78 = load %struct.MatroskaLevel*, %struct.MatroskaLevel** %level, align 8, !dbg !7082
  %start63 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %78, i32 0, i32 0, !dbg !7083
  %79 = load i64, i64* %start63, align 8, !dbg !7083
  %80 = load %struct.MatroskaLevel*, %struct.MatroskaLevel** %level, align 8, !dbg !7084
  %length64 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %80, i32 0, i32 1, !dbg !7085
  %81 = load i64, i64* %length64, align 8, !dbg !7085
  %add65 = add i64 %79, %81, !dbg !7086
  call void (i8*, i32, i8*, ...) @av_log(i8* %76, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.21, i32 0, i32 0), i64 %77, i64 %add65), !dbg !7087
  store i32 -1094995529, i32* %retval, align 4, !dbg !7088
  br label %return, !dbg !7088

if.end66:                                         ; preds = %land.lhs.true55, %if.then44
  br label %if.end67, !dbg !7089

if.end67:                                         ; preds = %if.end66, %if.end41
  br label %if.end68, !dbg !7090

if.end68:                                         ; preds = %if.end67, %land.lhs.true, %if.end16
  %82 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7091
  %type69 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %82, i32 0, i32 1, !dbg !7092
  %83 = load i32, i32* %type69, align 4, !dbg !7092
  switch i32 %83, label %sw.default [
    i32 1, label %sw.bb
    i32 10, label %sw.bb72
    i32 2, label %sw.bb75
    i32 3, label %sw.bb78
    i32 4, label %sw.bb78
    i32 5, label %sw.bb81
    i32 7, label %sw.bb84
    i32 6, label %sw.bb84
    i32 8, label %sw.bb116
    i32 9, label %sw.bb120
  ], !dbg !7093

sw.bb:                                            ; preds = %if.end68
  %84 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7094
  %85 = load i64, i64* %length, align 8, !dbg !7095
  %conv70 = trunc i64 %85 to i32, !dbg !7095
  %86 = load i8*, i8** %data.addr, align 8, !dbg !7096
  %87 = bitcast i8* %86 to i64*, !dbg !7096
  %call71 = call i32 @ebml_read_uint(%struct.AVIOContext* %84, i32 %conv70, i64* %87), !dbg !7097
  store i32 %call71, i32* %res, align 4, !dbg !7098
  br label %sw.epilog, !dbg !7099

sw.bb72:                                          ; preds = %if.end68
  %88 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7100
  %89 = load i64, i64* %length, align 8, !dbg !7101
  %conv73 = trunc i64 %89 to i32, !dbg !7101
  %90 = load i8*, i8** %data.addr, align 8, !dbg !7102
  %91 = bitcast i8* %90 to i64*, !dbg !7102
  %call74 = call i32 @ebml_read_sint(%struct.AVIOContext* %88, i32 %conv73, i64* %91), !dbg !7103
  store i32 %call74, i32* %res, align 4, !dbg !7104
  br label %sw.epilog, !dbg !7105

sw.bb75:                                          ; preds = %if.end68
  %92 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7106
  %93 = load i64, i64* %length, align 8, !dbg !7107
  %conv76 = trunc i64 %93 to i32, !dbg !7107
  %94 = load i8*, i8** %data.addr, align 8, !dbg !7108
  %95 = bitcast i8* %94 to double*, !dbg !7108
  %call77 = call i32 @ebml_read_float(%struct.AVIOContext* %92, i32 %conv76, double* %95), !dbg !7109
  store i32 %call77, i32* %res, align 4, !dbg !7110
  br label %sw.epilog, !dbg !7111

sw.bb78:                                          ; preds = %if.end68, %if.end68
  %96 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7112
  %97 = load i64, i64* %length, align 8, !dbg !7113
  %conv79 = trunc i64 %97 to i32, !dbg !7113
  %98 = load i8*, i8** %data.addr, align 8, !dbg !7114
  %99 = bitcast i8* %98 to i8**, !dbg !7114
  %call80 = call i32 @ebml_read_ascii(%struct.AVIOContext* %96, i32 %conv79, i8** %99), !dbg !7115
  store i32 %call80, i32* %res, align 4, !dbg !7116
  br label %sw.epilog, !dbg !7117

sw.bb81:                                          ; preds = %if.end68
  %100 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7118
  %101 = load i64, i64* %length, align 8, !dbg !7119
  %conv82 = trunc i64 %101 to i32, !dbg !7119
  %102 = load i8*, i8** %data.addr, align 8, !dbg !7120
  %103 = bitcast i8* %102 to %struct.EbmlBin*, !dbg !7120
  %call83 = call i32 @ebml_read_binary(%struct.AVIOContext* %100, i32 %conv82, %struct.EbmlBin* %103), !dbg !7121
  store i32 %call83, i32* %res, align 4, !dbg !7122
  br label %sw.epilog, !dbg !7123

sw.bb84:                                          ; preds = %if.end68, %if.end68
  %104 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7124
  %105 = load i64, i64* %length, align 8, !dbg !7126
  %call85 = call i32 @ebml_read_master(%struct.MatroskaDemuxContext* %104, i64 %105), !dbg !7127
  store i32 %call85, i32* %res, align 4, !dbg !7128
  %cmp86 = icmp slt i32 %call85, 0, !dbg !7129
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !7130

if.then88:                                        ; preds = %sw.bb84
  %106 = load i32, i32* %res, align 4, !dbg !7131
  store i32 %106, i32* %retval, align 4, !dbg !7132
  br label %return, !dbg !7132

if.end89:                                         ; preds = %sw.bb84
  %107 = load i32, i32* %id, align 4, !dbg !7133
  %cmp90 = icmp eq i32 %107, 408125543, !dbg !7134
  br i1 %cmp90, label %if.then92, label %if.end96, !dbg !7135

if.then92:                                        ; preds = %if.end89
  %108 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7136
  %ctx93 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %108, i32 0, i32 1, !dbg !7137
  %109 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx93, align 8, !dbg !7137
  %pb94 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %109, i32 0, i32 4, !dbg !7138
  %110 = load %struct.AVIOContext*, %struct.AVIOContext** %pb94, align 8, !dbg !7138
  store %struct.AVIOContext* %110, %struct.AVIOContext** %s.addr.i141, align 8, !dbg !7139
  %111 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i141, align 8, !dbg !7140
  %call.i142 = call i64 @avio_seek(%struct.AVIOContext* %111, i64 0, i32 1) #11, !dbg !7141
  %112 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7142
  %segment_start = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %112, i32 0, i32 17, !dbg !7143
  store i64 %call.i142, i64* %segment_start, align 8, !dbg !7144
  br label %if.end96, !dbg !7142

if.end96:                                         ; preds = %if.then92, %if.end89
  %113 = load i32, i32* %id, align 4, !dbg !7145
  %cmp97 = icmp eq i32 %113, 475249515, !dbg !7147
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !7148

if.then99:                                        ; preds = %if.end96
  %114 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7149
  %cues_parsing_deferred = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %114, i32 0, i32 23, !dbg !7150
  store i32 0, i32* %cues_parsing_deferred, align 8, !dbg !7151
  br label %if.end100, !dbg !7149

if.end100:                                        ; preds = %if.then99, %if.end96
  %115 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7152
  %type101 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %115, i32 0, i32 1, !dbg !7154
  %116 = load i32, i32* %type101, align 4, !dbg !7154
  %cmp102 = icmp eq i32 %116, 7, !dbg !7155
  br i1 %cmp102, label %land.lhs.true104, label %if.end114, !dbg !7156

land.lhs.true104:                                 ; preds = %if.end100
  %117 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7157
  %118 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7158
  %id105 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %118, i32 0, i32 0, !dbg !7159
  %119 = load i32, i32* %id105, align 8, !dbg !7159
  %call106 = call %struct.MatroskaLevel1Element* @matroska_find_level1_elem(%struct.MatroskaDemuxContext* %117, i32 %119), !dbg !7160
  store %struct.MatroskaLevel1Element* %call106, %struct.MatroskaLevel1Element** %level1_elem, align 8, !dbg !7161
  %tobool107 = icmp ne %struct.MatroskaLevel1Element* %call106, null, !dbg !7161
  br i1 %tobool107, label %if.then108, label %if.end114, !dbg !7162

if.then108:                                       ; preds = %land.lhs.true104
  %120 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %level1_elem, align 8, !dbg !7164
  %parsed = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %120, i32 0, i32 2, !dbg !7167
  %121 = load i32, i32* %parsed, align 8, !dbg !7167
  %tobool109 = icmp ne i32 %121, 0, !dbg !7164
  br i1 %tobool109, label %if.then110, label %if.end112, !dbg !7168

if.then110:                                       ; preds = %if.then108
  %122 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7169
  %ctx111 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %122, i32 0, i32 1, !dbg !7170
  %123 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx111, align 8, !dbg !7170
  %124 = bitcast %struct.AVFormatContext* %123 to i8*, !dbg !7169
  call void (i8*, i32, i8*, ...) @av_log(i8* %124, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0)), !dbg !7171
  br label %if.end112, !dbg !7171

if.end112:                                        ; preds = %if.then110, %if.then108
  %125 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %level1_elem, align 8, !dbg !7172
  %parsed113 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %125, i32 0, i32 2, !dbg !7173
  store i32 1, i32* %parsed113, align 8, !dbg !7174
  br label %if.end114, !dbg !7175

if.end114:                                        ; preds = %if.end112, %land.lhs.true104, %if.end100
  %126 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7176
  %127 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7177
  %def = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %127, i32 0, i32 4, !dbg !7178
  %n = bitcast %union.anon.1* %def to %struct.EbmlSyntax**, !dbg !7179
  %128 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %n, align 8, !dbg !7179
  %129 = load i8*, i8** %data.addr, align 8, !dbg !7180
  %call115 = call i32 @ebml_parse_nest(%struct.MatroskaDemuxContext* %126, %struct.EbmlSyntax* %128, i8* %129), !dbg !7181
  store i32 %call115, i32* %retval, align 4, !dbg !7182
  br label %return, !dbg !7182

sw.bb116:                                         ; preds = %if.end68
  %130 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7183
  %131 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7184
  %def117 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %131, i32 0, i32 4, !dbg !7185
  %n118 = bitcast %union.anon.1* %def117 to %struct.EbmlSyntax**, !dbg !7186
  %132 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %n118, align 8, !dbg !7186
  %133 = load i32, i32* %id, align 4, !dbg !7187
  %134 = load i8*, i8** %data.addr, align 8, !dbg !7188
  %call119 = call i32 @ebml_parse_id(%struct.MatroskaDemuxContext* %130, %struct.EbmlSyntax* %132, i32 %133, i8* %134), !dbg !7189
  store i32 %call119, i32* %retval, align 4, !dbg !7190
  br label %return, !dbg !7190

sw.bb120:                                         ; preds = %if.end68
  store i32 1, i32* %retval, align 4, !dbg !7191
  br label %return, !dbg !7191

sw.default:                                       ; preds = %if.end68
  %135 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7192
  %136 = load i64, i64* %length, align 8, !dbg !7194
  %conv121 = trunc i64 %136 to i32, !dbg !7194
  %call122 = call i32 @ffio_limit(%struct.AVIOContext* %135, i32 %conv121), !dbg !7195
  %conv123 = sext i32 %call122 to i64, !dbg !7195
  %137 = load i64, i64* %length, align 8, !dbg !7196
  %cmp124 = icmp ne i64 %conv123, %137, !dbg !7197
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !7198

if.then126:                                       ; preds = %sw.default
  store i32 -5, i32* %retval, align 4, !dbg !7199
  br label %return, !dbg !7199

if.end127:                                        ; preds = %sw.default
  %138 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7200
  %139 = load i64, i64* %length, align 8, !dbg !7201
  %call128 = call i64 @avio_skip(%struct.AVIOContext* %138, i64 %139), !dbg !7202
  %cmp129 = icmp slt i64 %call128, 0, !dbg !7203
  %cond = select i1 %cmp129, i32 -5, i32 0, !dbg !7202
  store i32 %cond, i32* %retval, align 4, !dbg !7204
  br label %return, !dbg !7204

sw.epilog:                                        ; preds = %sw.bb81, %sw.bb78, %sw.bb75, %sw.bb72, %sw.bb
  %140 = load i32, i32* %res, align 4, !dbg !7205
  %cmp131 = icmp eq i32 %140, -1094995529, !dbg !7207
  br i1 %cmp131, label %if.then133, label %if.else, !dbg !7208

if.then133:                                       ; preds = %sw.epilog
  %141 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7209
  %ctx134 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %141, i32 0, i32 1, !dbg !7210
  %142 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx134, align 8, !dbg !7210
  %143 = bitcast %struct.AVFormatContext* %142 to i8*, !dbg !7209
  call void (i8*, i32, i8*, ...) @av_log(i8* %143, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0)), !dbg !7211
  br label %if.end140, !dbg !7211

if.else:                                          ; preds = %sw.epilog
  %144 = load i32, i32* %res, align 4, !dbg !7212
  %cmp135 = icmp eq i32 %144, -5, !dbg !7214
  br i1 %cmp135, label %if.then137, label %if.end139, !dbg !7215

if.then137:                                       ; preds = %if.else
  %145 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7216
  %ctx138 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %145, i32 0, i32 1, !dbg !7217
  %146 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx138, align 8, !dbg !7217
  %147 = bitcast %struct.AVFormatContext* %146 to i8*, !dbg !7216
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i32 0, i32 0)), !dbg !7218
  br label %if.end139, !dbg !7218

if.end139:                                        ; preds = %if.then137, %if.else
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.then133
  %148 = load i32, i32* %res, align 4, !dbg !7219
  store i32 %148, i32* %retval, align 4, !dbg !7220
  br label %return, !dbg !7220

return:                                           ; preds = %if.end140, %if.end127, %if.then126, %sw.bb120, %sw.bb116, %if.end114, %if.then88, %if.then61, %if.then35, %if.then25, %if.then6
  %149 = load i32, i32* %retval, align 4, !dbg !7221
  ret i32 %149, !dbg !7221
}

declare i8* @av_realloc_array(i8*, i64, i64) #4

; Function Attrs: nounwind uwtable
define internal i32 @ebml_read_length(%struct.MatroskaDemuxContext* %matroska, %struct.AVIOContext* %pb, i64* %number) #0 !dbg !7222 {
entry:
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %number.addr = alloca i64*, align 8
  %res = alloca i32, align 4
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !7225, metadata !2574), !dbg !7226
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7227, metadata !2574), !dbg !7228
  store i64* %number, i64** %number.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %number.addr, metadata !7229, metadata !2574), !dbg !7230
  call void @llvm.dbg.declare(metadata i32* %res, metadata !7231, metadata !2574), !dbg !7232
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7233
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7234
  %2 = load i64*, i64** %number.addr, align 8, !dbg !7235
  %call = call i32 @ebml_read_num(%struct.MatroskaDemuxContext* %0, %struct.AVIOContext* %1, i32 8, i64* %2), !dbg !7236
  store i32 %call, i32* %res, align 4, !dbg !7232
  %3 = load i32, i32* %res, align 4, !dbg !7237
  %cmp = icmp sgt i32 %3, 0, !dbg !7239
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7240

land.lhs.true:                                    ; preds = %entry
  %4 = load i64*, i64** %number.addr, align 8, !dbg !7241
  %5 = load i64, i64* %4, align 8, !dbg !7243
  %add = add i64 %5, 1, !dbg !7244
  %6 = load i32, i32* %res, align 4, !dbg !7245
  %mul = mul nsw i32 7, %6, !dbg !7246
  %sh_prom = zext i32 %mul to i64, !dbg !7247
  %shl = shl i64 1, %sh_prom, !dbg !7247
  %cmp1 = icmp eq i64 %add, %shl, !dbg !7248
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7249

if.then:                                          ; preds = %land.lhs.true
  %7 = load i64*, i64** %number.addr, align 8, !dbg !7250
  store i64 72057594037927935, i64* %7, align 8, !dbg !7251
  br label %if.end, !dbg !7252

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load i32, i32* %res, align 4, !dbg !7253
  ret i32 %8, !dbg !7254
}

; Function Attrs: nounwind uwtable
define internal i32 @ebml_read_uint(%struct.AVIOContext* %pb, i32 %size, i64* %num) #0 !dbg !7255 {
entry:
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %size.addr = alloca i32, align 4
  %num.addr = alloca i64*, align 8
  %n = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7258, metadata !2574), !dbg !7259
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7260, metadata !2574), !dbg !7261
  store i64* %num, i64** %num.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %num.addr, metadata !7262, metadata !2574), !dbg !7263
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7264, metadata !2574), !dbg !7265
  store i32 0, i32* %n, align 4, !dbg !7265
  %0 = load i32, i32* %size.addr, align 4, !dbg !7266
  %cmp = icmp sgt i32 %0, 8, !dbg !7268
  br i1 %cmp, label %if.then, label %if.end, !dbg !7269

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !7270
  br label %return, !dbg !7270

if.end:                                           ; preds = %entry
  %1 = load i64*, i64** %num.addr, align 8, !dbg !7271
  store i64 0, i64* %1, align 8, !dbg !7272
  br label %while.cond, !dbg !7273

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i32, i32* %n, align 4, !dbg !7274
  %inc = add nsw i32 %2, 1, !dbg !7274
  store i32 %inc, i32* %n, align 4, !dbg !7274
  %3 = load i32, i32* %size.addr, align 4, !dbg !7276
  %cmp1 = icmp slt i32 %2, %3, !dbg !7277
  br i1 %cmp1, label %while.body, label %while.end, !dbg !7278

while.body:                                       ; preds = %while.cond
  %4 = load i64*, i64** %num.addr, align 8, !dbg !7279
  %5 = load i64, i64* %4, align 8, !dbg !7280
  %shl = shl i64 %5, 8, !dbg !7281
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7282
  %call = call i32 @avio_r8(%struct.AVIOContext* %6), !dbg !7283
  %conv = sext i32 %call to i64, !dbg !7283
  %or = or i64 %shl, %conv, !dbg !7284
  %7 = load i64*, i64** %num.addr, align 8, !dbg !7285
  store i64 %or, i64* %7, align 8, !dbg !7286
  br label %while.cond, !dbg !7287, !llvm.loop !7289

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !7290
  br label %return, !dbg !7290

return:                                           ; preds = %while.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7291
  ret i32 %8, !dbg !7291
}

; Function Attrs: nounwind uwtable
define internal i32 @ebml_read_sint(%struct.AVIOContext* %pb, i32 %size, i64* %num) #0 !dbg !7292 {
entry:
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %size.addr = alloca i32, align 4
  %num.addr = alloca i64*, align 8
  %n = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7295, metadata !2574), !dbg !7296
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7297, metadata !2574), !dbg !7298
  store i64* %num, i64** %num.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %num.addr, metadata !7299, metadata !2574), !dbg !7300
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7301, metadata !2574), !dbg !7302
  store i32 1, i32* %n, align 4, !dbg !7302
  %0 = load i32, i32* %size.addr, align 4, !dbg !7303
  %cmp = icmp sgt i32 %0, 8, !dbg !7305
  br i1 %cmp, label %if.then, label %if.end, !dbg !7306

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !7307
  br label %return, !dbg !7307

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %size.addr, align 4, !dbg !7308
  %cmp1 = icmp eq i32 %1, 0, !dbg !7310
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !7311

if.then2:                                         ; preds = %if.end
  %2 = load i64*, i64** %num.addr, align 8, !dbg !7312
  store i64 0, i64* %2, align 8, !dbg !7314
  br label %if.end8, !dbg !7315

if.else:                                          ; preds = %if.end
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7316
  %call = call i32 @avio_r8(%struct.AVIOContext* %3), !dbg !7318
  %call3 = call i32 @sign_extend(i32 %call, i32 8) #1, !dbg !7319
  %conv = sext i32 %call3 to i64, !dbg !7321
  %4 = load i64*, i64** %num.addr, align 8, !dbg !7322
  store i64 %conv, i64* %4, align 8, !dbg !7323
  br label %while.cond, !dbg !7324

while.cond:                                       ; preds = %while.body, %if.else
  %5 = load i32, i32* %n, align 4, !dbg !7325
  %inc = add nsw i32 %5, 1, !dbg !7325
  store i32 %inc, i32* %n, align 4, !dbg !7325
  %6 = load i32, i32* %size.addr, align 4, !dbg !7326
  %cmp4 = icmp slt i32 %5, %6, !dbg !7327
  br i1 %cmp4, label %while.body, label %while.end, !dbg !7328

while.body:                                       ; preds = %while.cond
  %7 = load i64*, i64** %num.addr, align 8, !dbg !7329
  %8 = load i64, i64* %7, align 8, !dbg !7330
  %shl = shl i64 %8, 8, !dbg !7331
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7332
  %call6 = call i32 @avio_r8(%struct.AVIOContext* %9), !dbg !7333
  %conv7 = sext i32 %call6 to i64, !dbg !7333
  %or = or i64 %shl, %conv7, !dbg !7334
  %10 = load i64*, i64** %num.addr, align 8, !dbg !7335
  store i64 %or, i64* %10, align 8, !dbg !7336
  br label %while.cond, !dbg !7337, !llvm.loop !7339

while.end:                                        ; preds = %while.cond
  br label %if.end8

if.end8:                                          ; preds = %while.end, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !7340
  br label %return, !dbg !7340

return:                                           ; preds = %if.end8, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !7341
  ret i32 %11, !dbg !7341
}

; Function Attrs: nounwind uwtable
define internal i32 @ebml_read_float(%struct.AVIOContext* %pb, i32 %size, double* %num) #0 !dbg !7342 {
entry:
  %i.addr.i13 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i13, metadata !7345, metadata !2574), !dbg !7350
  %v.i14 = alloca %union.av_intfloat64, align 8
  call void @llvm.dbg.declare(metadata %union.av_intfloat64* %v.i14, metadata !7356, metadata !2574), !dbg !7361
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !7362, metadata !2574), !dbg !7366
  %v.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i, metadata !7369, metadata !2574), !dbg !7374
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %size.addr = alloca i32, align 4
  %num.addr = alloca double*, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7375, metadata !2574), !dbg !7376
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7377, metadata !2574), !dbg !7378
  store double* %num, double** %num.addr, align 8
  call void @llvm.dbg.declare(metadata double** %num.addr, metadata !7379, metadata !2574), !dbg !7380
  %0 = load i32, i32* %size.addr, align 4, !dbg !7381
  %cmp = icmp eq i32 %0, 0, !dbg !7382
  br i1 %cmp, label %if.then, label %if.else, !dbg !7383

if.then:                                          ; preds = %entry
  %1 = load double*, double** %num.addr, align 8, !dbg !7384
  store double 0.000000e+00, double* %1, align 8, !dbg !7385
  br label %if.end12, !dbg !7386

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %size.addr, align 4, !dbg !7387
  %cmp1 = icmp eq i32 %2, 4, !dbg !7388
  br i1 %cmp1, label %if.then2, label %if.else4, !dbg !7389

if.then2:                                         ; preds = %if.else
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7390
  %call = call i32 @avio_rb32(%struct.AVIOContext* %3), !dbg !7391
  store i32 %call, i32* %i.addr.i, align 4, !dbg !7392
  %4 = load i32, i32* %i.addr.i, align 4, !dbg !7393
  %i1.i = bitcast %union.av_intfloat32* %v.i to i32*, !dbg !7394
  store i32 %4, i32* %i1.i, align 4, !dbg !7395
  %f.i = bitcast %union.av_intfloat32* %v.i to float*, !dbg !7396
  %5 = load float, float* %f.i, align 4, !dbg !7396
  %conv = fpext float %5 to double, !dbg !7397
  %6 = load double*, double** %num.addr, align 8, !dbg !7398
  store double %conv, double* %6, align 8, !dbg !7399
  br label %if.end11, !dbg !7400

if.else4:                                         ; preds = %if.else
  %7 = load i32, i32* %size.addr, align 4, !dbg !7401
  %cmp5 = icmp eq i32 %7, 8, !dbg !7402
  br i1 %cmp5, label %if.then7, label %if.else10, !dbg !7403

if.then7:                                         ; preds = %if.else4
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7404
  %call8 = call i64 @avio_rb64(%struct.AVIOContext* %8), !dbg !7405
  store i64 %call8, i64* %i.addr.i13, align 8, !dbg !7406
  %9 = load i64, i64* %i.addr.i13, align 8, !dbg !7407
  %i1.i15 = bitcast %union.av_intfloat64* %v.i14 to i64*, !dbg !7408
  store i64 %9, i64* %i1.i15, align 8, !dbg !7409
  %f.i16 = bitcast %union.av_intfloat64* %v.i14 to double*, !dbg !7410
  %10 = load double, double* %f.i16, align 8, !dbg !7410
  %11 = load double*, double** %num.addr, align 8, !dbg !7411
  store double %10, double* %11, align 8, !dbg !7412
  br label %if.end, !dbg !7413

if.else10:                                        ; preds = %if.else4
  store i32 -1094995529, i32* %retval, align 4, !dbg !7414
  br label %return, !dbg !7414

if.end:                                           ; preds = %if.then7
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then2
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  store i32 0, i32* %retval, align 4, !dbg !7415
  br label %return, !dbg !7415

return:                                           ; preds = %if.end12, %if.else10
  %12 = load i32, i32* %retval, align 4, !dbg !7416
  ret i32 %12, !dbg !7416
}

; Function Attrs: nounwind uwtable
define internal i32 @ebml_read_ascii(%struct.AVIOContext* %pb, i32 %size, i8** %str) #0 !dbg !7417 {
entry:
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %size.addr = alloca i32, align 4
  %str.addr = alloca i8**, align 8
  %res = alloca i8*, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7421, metadata !2574), !dbg !7422
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7423, metadata !2574), !dbg !7424
  store i8** %str, i8*** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !7425, metadata !2574), !dbg !7426
  call void @llvm.dbg.declare(metadata i8** %res, metadata !7427, metadata !2574), !dbg !7428
  %0 = load i32, i32* %size.addr, align 4, !dbg !7429
  %add = add nsw i32 %0, 1, !dbg !7431
  %conv = sext i32 %add to i64, !dbg !7429
  %call = call noalias i8* @av_malloc(i64 %conv), !dbg !7432
  store i8* %call, i8** %res, align 8, !dbg !7433
  %tobool = icmp ne i8* %call, null, !dbg !7433
  br i1 %tobool, label %if.end, label %if.then, !dbg !7434

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7435
  br label %return, !dbg !7435

if.end:                                           ; preds = %entry
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7436
  %2 = load i8*, i8** %res, align 8, !dbg !7438
  %3 = load i32, i32* %size.addr, align 4, !dbg !7439
  %call1 = call i32 @avio_read(%struct.AVIOContext* %1, i8* %2, i32 %3), !dbg !7440
  %4 = load i32, i32* %size.addr, align 4, !dbg !7441
  %cmp = icmp ne i32 %call1, %4, !dbg !7442
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !7443

if.then3:                                         ; preds = %if.end
  %5 = load i8*, i8** %res, align 8, !dbg !7444
  call void @av_free(i8* %5), !dbg !7446
  store i32 -5, i32* %retval, align 4, !dbg !7447
  br label %return, !dbg !7447

if.end4:                                          ; preds = %if.end
  %6 = load i32, i32* %size.addr, align 4, !dbg !7448
  %idxprom = sext i32 %6 to i64, !dbg !7449
  %7 = load i8*, i8** %res, align 8, !dbg !7450
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !7449
  store i8 0, i8* %arrayidx, align 1, !dbg !7451
  %8 = load i8**, i8*** %str.addr, align 8, !dbg !7452
  %9 = load i8*, i8** %8, align 8, !dbg !7453
  call void @av_free(i8* %9), !dbg !7454
  %10 = load i8*, i8** %res, align 8, !dbg !7455
  %11 = load i8**, i8*** %str.addr, align 8, !dbg !7456
  store i8* %10, i8** %11, align 8, !dbg !7457
  store i32 0, i32* %retval, align 4, !dbg !7458
  br label %return, !dbg !7458

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7459
  ret i32 %12, !dbg !7459
}

; Function Attrs: nounwind uwtable
define internal i32 @ebml_read_binary(%struct.AVIOContext* %pb, i32 %length, %struct.EbmlBin* %bin) #0 !dbg !7460 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !7463
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %length.addr = alloca i32, align 4
  %bin.addr = alloca %struct.EbmlBin*, align 8
  %ret = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7465, metadata !2574), !dbg !7466
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !7467, metadata !2574), !dbg !7468
  store %struct.EbmlBin* %bin, %struct.EbmlBin** %bin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EbmlBin** %bin.addr, metadata !7469, metadata !2574), !dbg !7470
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7471, metadata !2574), !dbg !7472
  %0 = load %struct.EbmlBin*, %struct.EbmlBin** %bin.addr, align 8, !dbg !7473
  %buf = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %0, i32 0, i32 1, !dbg !7474
  %1 = load i32, i32* %length.addr, align 4, !dbg !7475
  %add = add nsw i32 %1, 64, !dbg !7476
  %call = call i32 @av_buffer_realloc(%struct.AVBufferRef** %buf, i32 %add), !dbg !7477
  store i32 %call, i32* %ret, align 4, !dbg !7478
  %2 = load i32, i32* %ret, align 4, !dbg !7479
  %cmp = icmp slt i32 %2, 0, !dbg !7481
  br i1 %cmp, label %if.then, label %if.end, !dbg !7482

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !7483
  store i32 %3, i32* %retval, align 4, !dbg !7484
  br label %return, !dbg !7484

if.end:                                           ; preds = %entry
  %4 = load %struct.EbmlBin*, %struct.EbmlBin** %bin.addr, align 8, !dbg !7485
  %buf1 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %4, i32 0, i32 1, !dbg !7486
  %5 = load %struct.AVBufferRef*, %struct.AVBufferRef** %buf1, align 8, !dbg !7486
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %5, i32 0, i32 1, !dbg !7487
  %6 = load i8*, i8** %data, align 8, !dbg !7487
  %7 = load i32, i32* %length.addr, align 4, !dbg !7488
  %idx.ext = sext i32 %7 to i64, !dbg !7489
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !7489
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 0, i64 64, i32 1, i1 false), !dbg !7490
  %8 = load %struct.EbmlBin*, %struct.EbmlBin** %bin.addr, align 8, !dbg !7491
  %buf2 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %8, i32 0, i32 1, !dbg !7492
  %9 = load %struct.AVBufferRef*, %struct.AVBufferRef** %buf2, align 8, !dbg !7492
  %data3 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %9, i32 0, i32 1, !dbg !7493
  %10 = load i8*, i8** %data3, align 8, !dbg !7493
  %11 = load %struct.EbmlBin*, %struct.EbmlBin** %bin.addr, align 8, !dbg !7494
  %data4 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %11, i32 0, i32 2, !dbg !7495
  store i8* %10, i8** %data4, align 8, !dbg !7496
  %12 = load i32, i32* %length.addr, align 4, !dbg !7497
  %13 = load %struct.EbmlBin*, %struct.EbmlBin** %bin.addr, align 8, !dbg !7498
  %size = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %13, i32 0, i32 0, !dbg !7499
  store i32 %12, i32* %size, align 8, !dbg !7500
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7501
  store %struct.AVIOContext* %14, %struct.AVIOContext** %s.addr.i, align 8, !dbg !7502
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !7503
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %15, i64 0, i32 1) #11, !dbg !7504
  %16 = load %struct.EbmlBin*, %struct.EbmlBin** %bin.addr, align 8, !dbg !7505
  %pos = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %16, i32 0, i32 3, !dbg !7506
  store i64 %call.i, i64* %pos, align 8, !dbg !7507
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7508
  %18 = load %struct.EbmlBin*, %struct.EbmlBin** %bin.addr, align 8, !dbg !7510
  %data6 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %18, i32 0, i32 2, !dbg !7511
  %19 = load i8*, i8** %data6, align 8, !dbg !7511
  %20 = load i32, i32* %length.addr, align 4, !dbg !7512
  %call7 = call i32 @avio_read(%struct.AVIOContext* %17, i8* %19, i32 %20), !dbg !7513
  %21 = load i32, i32* %length.addr, align 4, !dbg !7514
  %cmp8 = icmp ne i32 %call7, %21, !dbg !7515
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !7516

if.then9:                                         ; preds = %if.end
  %22 = load %struct.EbmlBin*, %struct.EbmlBin** %bin.addr, align 8, !dbg !7517
  %buf10 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %22, i32 0, i32 1, !dbg !7519
  call void @av_buffer_unref(%struct.AVBufferRef** %buf10), !dbg !7520
  %23 = load %struct.EbmlBin*, %struct.EbmlBin** %bin.addr, align 8, !dbg !7521
  %data11 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %23, i32 0, i32 2, !dbg !7522
  store i8* null, i8** %data11, align 8, !dbg !7523
  %24 = load %struct.EbmlBin*, %struct.EbmlBin** %bin.addr, align 8, !dbg !7524
  %size12 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %24, i32 0, i32 0, !dbg !7525
  store i32 0, i32* %size12, align 8, !dbg !7526
  store i32 -5, i32* %retval, align 4, !dbg !7527
  br label %return, !dbg !7527

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7528
  br label %return, !dbg !7528

return:                                           ; preds = %if.end13, %if.then9, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !7529
  ret i32 %25, !dbg !7529
}

; Function Attrs: nounwind uwtable
define internal i32 @ebml_read_master(%struct.MatroskaDemuxContext* %matroska, i64 %length) #0 !dbg !7530 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !7533
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %length.addr = alloca i64, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %level = alloca %struct.MatroskaLevel*, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !7535, metadata !2574), !dbg !7536
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !7537, metadata !2574), !dbg !7538
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !7539, metadata !2574), !dbg !7540
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7541
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 1, !dbg !7542
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !7542
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 4, !dbg !7543
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !7543
  store %struct.AVIOContext* %2, %struct.AVIOContext** %pb, align 8, !dbg !7540
  call void @llvm.dbg.declare(metadata %struct.MatroskaLevel** %level, metadata !7544, metadata !2574), !dbg !7545
  %3 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7546
  %num_levels = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %3, i32 0, i32 2, !dbg !7548
  %4 = load i32, i32* %num_levels, align 8, !dbg !7548
  %cmp = icmp sge i32 %4, 16, !dbg !7549
  br i1 %cmp, label %if.then, label %if.end, !dbg !7550

if.then:                                          ; preds = %entry
  %5 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7551
  %ctx2 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %5, i32 0, i32 1, !dbg !7553
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx2, align 8, !dbg !7553
  %7 = bitcast %struct.AVFormatContext* %6 to i8*, !dbg !7551
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.25, i32 0, i32 0), i32 16), !dbg !7554
  store i32 -38, i32* %retval, align 4, !dbg !7555
  br label %return, !dbg !7555

if.end:                                           ; preds = %entry
  %8 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7556
  %num_levels3 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %8, i32 0, i32 2, !dbg !7557
  %9 = load i32, i32* %num_levels3, align 8, !dbg !7558
  %inc = add nsw i32 %9, 1, !dbg !7558
  store i32 %inc, i32* %num_levels3, align 8, !dbg !7558
  %idxprom = sext i32 %9 to i64, !dbg !7559
  %10 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7559
  %levels = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %10, i32 0, i32 3, !dbg !7560
  %arrayidx = getelementptr inbounds [16 x %struct.MatroskaLevel], [16 x %struct.MatroskaLevel]* %levels, i64 0, i64 %idxprom, !dbg !7559
  store %struct.MatroskaLevel* %arrayidx, %struct.MatroskaLevel** %level, align 8, !dbg !7561
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7562
  store %struct.AVIOContext* %11, %struct.AVIOContext** %s.addr.i, align 8, !dbg !7563
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !7564
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %12, i64 0, i32 1) #11, !dbg !7565
  %13 = load %struct.MatroskaLevel*, %struct.MatroskaLevel** %level, align 8, !dbg !7566
  %start = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %13, i32 0, i32 0, !dbg !7567
  store i64 %call.i, i64* %start, align 8, !dbg !7568
  %14 = load i64, i64* %length.addr, align 8, !dbg !7569
  %15 = load %struct.MatroskaLevel*, %struct.MatroskaLevel** %level, align 8, !dbg !7570
  %length4 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %15, i32 0, i32 1, !dbg !7571
  store i64 %14, i64* %length4, align 8, !dbg !7572
  store i32 0, i32* %retval, align 4, !dbg !7573
  br label %return, !dbg !7573

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !7574
  ret i32 %16, !dbg !7574
}

; Function Attrs: nounwind uwtable
define internal %struct.MatroskaLevel1Element* @matroska_find_level1_elem(%struct.MatroskaDemuxContext* %matroska, i32 %id) #0 !dbg !7575 {
entry:
  %retval = alloca %struct.MatroskaLevel1Element*, align 8
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %id.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %elem = alloca %struct.MatroskaLevel1Element*, align 8
  %.compoundliteral = alloca %struct.MatroskaLevel1Element, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !7578, metadata !2574), !dbg !7579
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !7580, metadata !2574), !dbg !7581
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7582, metadata !2574), !dbg !7583
  call void @llvm.dbg.declare(metadata %struct.MatroskaLevel1Element** %elem, metadata !7584, metadata !2574), !dbg !7585
  %0 = load i32, i32* %id.addr, align 4, !dbg !7586
  %call = call i32 @is_ebml_id_valid(i32 %0), !dbg !7588
  %tobool = icmp ne i32 %call, 0, !dbg !7588
  br i1 %tobool, label %if.end, label %if.then, !dbg !7589

if.then:                                          ; preds = %entry
  store %struct.MatroskaLevel1Element* null, %struct.MatroskaLevel1Element** %retval, align 8, !dbg !7590
  br label %return, !dbg !7590

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %id.addr, align 4, !dbg !7591
  %cmp = icmp eq i32 %1, 524531317, !dbg !7593
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !7594

if.then1:                                         ; preds = %if.end
  store %struct.MatroskaLevel1Element* null, %struct.MatroskaLevel1Element** %retval, align 8, !dbg !7595
  br label %return, !dbg !7595

if.end2:                                          ; preds = %if.end
  %2 = load i32, i32* %id.addr, align 4, !dbg !7596
  %cmp3 = icmp ne i32 %2, 290298740, !dbg !7598
  br i1 %cmp3, label %if.then4, label %if.end14, !dbg !7599

if.then4:                                         ; preds = %if.end2
  store i32 0, i32* %i, align 4, !dbg !7600
  br label %for.cond, !dbg !7603

for.cond:                                         ; preds = %for.inc, %if.then4
  %3 = load i32, i32* %i, align 4, !dbg !7604
  %4 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7607
  %num_level1_elems = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %4, i32 0, i32 25, !dbg !7608
  %5 = load i32, i32* %num_level1_elems, align 8, !dbg !7608
  %cmp5 = icmp slt i32 %3, %5, !dbg !7609
  br i1 %cmp5, label %for.body, label %for.end, !dbg !7610

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !7611
  %idxprom = sext i32 %6 to i64, !dbg !7614
  %7 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7614
  %level1_elems = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i32 0, i32 24, !dbg !7615
  %arrayidx = getelementptr inbounds [64 x %struct.MatroskaLevel1Element], [64 x %struct.MatroskaLevel1Element]* %level1_elems, i64 0, i64 %idxprom, !dbg !7614
  %id6 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %arrayidx, i32 0, i32 0, !dbg !7616
  %8 = load i64, i64* %id6, align 8, !dbg !7616
  %9 = load i32, i32* %id.addr, align 4, !dbg !7617
  %conv = zext i32 %9 to i64, !dbg !7617
  %cmp7 = icmp eq i64 %8, %conv, !dbg !7618
  br i1 %cmp7, label %if.then9, label %if.end13, !dbg !7619

if.then9:                                         ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !7620
  %idxprom10 = sext i32 %10 to i64, !dbg !7621
  %11 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7621
  %level1_elems11 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %11, i32 0, i32 24, !dbg !7622
  %arrayidx12 = getelementptr inbounds [64 x %struct.MatroskaLevel1Element], [64 x %struct.MatroskaLevel1Element]* %level1_elems11, i64 0, i64 %idxprom10, !dbg !7621
  store %struct.MatroskaLevel1Element* %arrayidx12, %struct.MatroskaLevel1Element** %retval, align 8, !dbg !7623
  br label %return, !dbg !7623

if.end13:                                         ; preds = %for.body
  br label %for.inc, !dbg !7624

for.inc:                                          ; preds = %if.end13
  %12 = load i32, i32* %i, align 4, !dbg !7625
  %inc = add nsw i32 %12, 1, !dbg !7625
  store i32 %inc, i32* %i, align 4, !dbg !7625
  br label %for.cond, !dbg !7627, !llvm.loop !7628

for.end:                                          ; preds = %for.cond
  br label %if.end14, !dbg !7630

if.end14:                                         ; preds = %for.end, %if.end2
  %13 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7631
  %num_level1_elems15 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %13, i32 0, i32 25, !dbg !7633
  %14 = load i32, i32* %num_level1_elems15, align 8, !dbg !7633
  %conv16 = sext i32 %14 to i64, !dbg !7631
  %cmp17 = icmp uge i64 %conv16, 64, !dbg !7634
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !7635

if.then19:                                        ; preds = %if.end14
  %15 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7636
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %15, i32 0, i32 1, !dbg !7638
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !7638
  %17 = bitcast %struct.AVFormatContext* %16 to i8*, !dbg !7636
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26, i32 0, i32 0)), !dbg !7639
  store %struct.MatroskaLevel1Element* null, %struct.MatroskaLevel1Element** %retval, align 8, !dbg !7640
  br label %return, !dbg !7640

if.end20:                                         ; preds = %if.end14
  %18 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7641
  %num_level1_elems21 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %18, i32 0, i32 25, !dbg !7642
  %19 = load i32, i32* %num_level1_elems21, align 8, !dbg !7643
  %inc22 = add nsw i32 %19, 1, !dbg !7643
  store i32 %inc22, i32* %num_level1_elems21, align 8, !dbg !7643
  %idxprom23 = sext i32 %19 to i64, !dbg !7644
  %20 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7644
  %level1_elems24 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %20, i32 0, i32 24, !dbg !7645
  %arrayidx25 = getelementptr inbounds [64 x %struct.MatroskaLevel1Element], [64 x %struct.MatroskaLevel1Element]* %level1_elems24, i64 0, i64 %idxprom23, !dbg !7644
  store %struct.MatroskaLevel1Element* %arrayidx25, %struct.MatroskaLevel1Element** %elem, align 8, !dbg !7646
  %21 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %elem, align 8, !dbg !7647
  %id26 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %.compoundliteral, i32 0, i32 0, !dbg !7648
  %22 = load i32, i32* %id.addr, align 4, !dbg !7649
  %conv27 = zext i32 %22 to i64, !dbg !7649
  store i64 %conv27, i64* %id26, align 8, !dbg !7648
  %pos = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %.compoundliteral, i32 0, i32 1, !dbg !7648
  store i64 0, i64* %pos, align 8, !dbg !7648
  %parsed = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %.compoundliteral, i32 0, i32 2, !dbg !7648
  store i32 0, i32* %parsed, align 8, !dbg !7648
  %23 = bitcast %struct.MatroskaLevel1Element* %21 to i8*, !dbg !7650
  %24 = bitcast %struct.MatroskaLevel1Element* %.compoundliteral to i8*, !dbg !7650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 24, i32 8, i1 false), !dbg !7650
  %25 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %elem, align 8, !dbg !7651
  store %struct.MatroskaLevel1Element* %25, %struct.MatroskaLevel1Element** %retval, align 8, !dbg !7652
  br label %return, !dbg !7652

return:                                           ; preds = %if.end20, %if.then19, %if.then9, %if.then1, %if.then
  %26 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %retval, align 8, !dbg !7653
  ret %struct.MatroskaLevel1Element* %26, !dbg !7653
}

; Function Attrs: nounwind uwtable
define internal i32 @ebml_parse_nest(%struct.MatroskaDemuxContext* %matroska, %struct.EbmlSyntax* %syntax, i8* %data) #0 !dbg !7654 {
entry:
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %syntax.addr = alloca %struct.EbmlSyntax*, align 8
  %data.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %res = alloca i32, align 4
  %dst = alloca i8**, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !7655, metadata !2574), !dbg !7656
  store %struct.EbmlSyntax* %syntax, %struct.EbmlSyntax** %syntax.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EbmlSyntax** %syntax.addr, metadata !7657, metadata !2574), !dbg !7658
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7659, metadata !2574), !dbg !7660
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7661, metadata !2574), !dbg !7662
  call void @llvm.dbg.declare(metadata i32* %res, metadata !7663, metadata !2574), !dbg !7664
  store i32 0, i32* %res, align 4, !dbg !7664
  store i32 0, i32* %i, align 4, !dbg !7665
  br label %for.cond, !dbg !7667

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7668
  %idxprom = sext i32 %0 to i64, !dbg !7671
  %1 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7671
  %arrayidx = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %1, i64 %idxprom, !dbg !7671
  %id = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx, i32 0, i32 0, !dbg !7672
  %2 = load i32, i32* %id, align 8, !dbg !7672
  %tobool = icmp ne i32 %2, 0, !dbg !7673
  br i1 %tobool, label %for.body, label %for.end, !dbg !7673

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !7674
  %idxprom1 = sext i32 %3 to i64, !dbg !7675
  %4 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7675
  %arrayidx2 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %4, i64 %idxprom1, !dbg !7675
  %type = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx2, i32 0, i32 1, !dbg !7676
  %5 = load i32, i32* %type, align 4, !dbg !7676
  switch i32 %5, label %sw.epilog [
    i32 10, label %sw.bb
    i32 1, label %sw.bb8
    i32 2, label %sw.bb17
    i32 3, label %sw.bb26
    i32 4, label %sw.bb26
  ], !dbg !7677

sw.bb:                                            ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !7678
  %idxprom3 = sext i32 %6 to i64, !dbg !7680
  %7 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7680
  %arrayidx4 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %7, i64 %idxprom3, !dbg !7680
  %def = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx4, i32 0, i32 4, !dbg !7681
  %i5 = bitcast %union.anon.1* %def to i64*, !dbg !7682
  %8 = load i64, i64* %i5, align 8, !dbg !7682
  %9 = load i8*, i8** %data.addr, align 8, !dbg !7683
  %10 = load i32, i32* %i, align 4, !dbg !7684
  %idxprom6 = sext i32 %10 to i64, !dbg !7685
  %11 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7685
  %arrayidx7 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %11, i64 %idxprom6, !dbg !7685
  %data_offset = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx7, i32 0, i32 3, !dbg !7686
  %12 = load i32, i32* %data_offset, align 4, !dbg !7686
  %idx.ext = sext i32 %12 to i64, !dbg !7687
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %idx.ext, !dbg !7687
  %13 = bitcast i8* %add.ptr to i64*, !dbg !7688
  store i64 %8, i64* %13, align 8, !dbg !7689
  br label %sw.epilog, !dbg !7690

sw.bb8:                                           ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !7691
  %idxprom9 = sext i32 %14 to i64, !dbg !7692
  %15 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7692
  %arrayidx10 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %15, i64 %idxprom9, !dbg !7692
  %def11 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx10, i32 0, i32 4, !dbg !7693
  %u = bitcast %union.anon.1* %def11 to i64*, !dbg !7694
  %16 = load i64, i64* %u, align 8, !dbg !7694
  %17 = load i8*, i8** %data.addr, align 8, !dbg !7695
  %18 = load i32, i32* %i, align 4, !dbg !7696
  %idxprom12 = sext i32 %18 to i64, !dbg !7697
  %19 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7697
  %arrayidx13 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %19, i64 %idxprom12, !dbg !7697
  %data_offset14 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx13, i32 0, i32 3, !dbg !7698
  %20 = load i32, i32* %data_offset14, align 4, !dbg !7698
  %idx.ext15 = sext i32 %20 to i64, !dbg !7699
  %add.ptr16 = getelementptr inbounds i8, i8* %17, i64 %idx.ext15, !dbg !7699
  %21 = bitcast i8* %add.ptr16 to i64*, !dbg !7700
  store i64 %16, i64* %21, align 8, !dbg !7701
  br label %sw.epilog, !dbg !7702

sw.bb17:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !7703
  %idxprom18 = sext i32 %22 to i64, !dbg !7704
  %23 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7704
  %arrayidx19 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %23, i64 %idxprom18, !dbg !7704
  %def20 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx19, i32 0, i32 4, !dbg !7705
  %f = bitcast %union.anon.1* %def20 to double*, !dbg !7706
  %24 = load double, double* %f, align 8, !dbg !7706
  %25 = load i8*, i8** %data.addr, align 8, !dbg !7707
  %26 = load i32, i32* %i, align 4, !dbg !7708
  %idxprom21 = sext i32 %26 to i64, !dbg !7709
  %27 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7709
  %arrayidx22 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %27, i64 %idxprom21, !dbg !7709
  %data_offset23 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx22, i32 0, i32 3, !dbg !7710
  %28 = load i32, i32* %data_offset23, align 4, !dbg !7710
  %idx.ext24 = sext i32 %28 to i64, !dbg !7711
  %add.ptr25 = getelementptr inbounds i8, i8* %25, i64 %idx.ext24, !dbg !7711
  %29 = bitcast i8* %add.ptr25 to double*, !dbg !7712
  store double %24, double* %29, align 8, !dbg !7713
  br label %sw.epilog, !dbg !7714

sw.bb26:                                          ; preds = %for.body, %for.body
  %30 = load i32, i32* %i, align 4, !dbg !7715
  %idxprom27 = sext i32 %30 to i64, !dbg !7717
  %31 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7717
  %arrayidx28 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %31, i64 %idxprom27, !dbg !7717
  %def29 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx28, i32 0, i32 4, !dbg !7718
  %s = bitcast %union.anon.1* %def29 to i8**, !dbg !7719
  %32 = load i8*, i8** %s, align 8, !dbg !7719
  %tobool30 = icmp ne i8* %32, null, !dbg !7717
  br i1 %tobool30, label %if.then, label %if.end42, !dbg !7720

if.then:                                          ; preds = %sw.bb26
  call void @llvm.dbg.declare(metadata i8*** %dst, metadata !7721, metadata !2574), !dbg !7723
  %33 = load i8*, i8** %data.addr, align 8, !dbg !7724
  %34 = load i32, i32* %i, align 4, !dbg !7725
  %idxprom31 = sext i32 %34 to i64, !dbg !7726
  %35 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7726
  %arrayidx32 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %35, i64 %idxprom31, !dbg !7726
  %data_offset33 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx32, i32 0, i32 3, !dbg !7727
  %36 = load i32, i32* %data_offset33, align 4, !dbg !7727
  %idx.ext34 = sext i32 %36 to i64, !dbg !7728
  %add.ptr35 = getelementptr inbounds i8, i8* %33, i64 %idx.ext34, !dbg !7728
  %37 = bitcast i8* %add.ptr35 to i8**, !dbg !7729
  store i8** %37, i8*** %dst, align 8, !dbg !7723
  %38 = load i32, i32* %i, align 4, !dbg !7730
  %idxprom36 = sext i32 %38 to i64, !dbg !7731
  %39 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7731
  %arrayidx37 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %39, i64 %idxprom36, !dbg !7731
  %def38 = getelementptr inbounds %struct.EbmlSyntax, %struct.EbmlSyntax* %arrayidx37, i32 0, i32 4, !dbg !7732
  %s39 = bitcast %union.anon.1* %def38 to i8**, !dbg !7733
  %40 = load i8*, i8** %s39, align 8, !dbg !7733
  %call = call noalias i8* @av_strdup(i8* %40), !dbg !7734
  %41 = load i8**, i8*** %dst, align 8, !dbg !7735
  store i8* %call, i8** %41, align 8, !dbg !7736
  %42 = load i8**, i8*** %dst, align 8, !dbg !7737
  %43 = load i8*, i8** %42, align 8, !dbg !7739
  %tobool40 = icmp ne i8* %43, null, !dbg !7739
  br i1 %tobool40, label %if.end, label %if.then41, !dbg !7740

if.then41:                                        ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !7741
  br label %return, !dbg !7741

if.end:                                           ; preds = %if.then
  br label %if.end42, !dbg !7742

if.end42:                                         ; preds = %if.end, %sw.bb26
  br label %sw.epilog, !dbg !7743

sw.epilog:                                        ; preds = %for.body, %if.end42, %sw.bb17, %sw.bb8, %sw.bb
  br label %for.inc, !dbg !7744

for.inc:                                          ; preds = %sw.epilog
  %44 = load i32, i32* %i, align 4, !dbg !7745
  %inc = add nsw i32 %44, 1, !dbg !7745
  store i32 %inc, i32* %i, align 4, !dbg !7745
  br label %for.cond, !dbg !7747, !llvm.loop !7748

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !7750

while.cond:                                       ; preds = %while.body, %for.end
  %45 = load i32, i32* %res, align 4, !dbg !7751
  %tobool43 = icmp ne i32 %45, 0, !dbg !7751
  br i1 %tobool43, label %land.end, label %land.rhs, !dbg !7753

land.rhs:                                         ; preds = %while.cond
  %46 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7754
  %call44 = call i32 @ebml_level_end(%struct.MatroskaDemuxContext* %46), !dbg !7756
  %tobool45 = icmp ne i32 %call44, 0, !dbg !7757
  %lnot = xor i1 %tobool45, true, !dbg !7757
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %47 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %47, label %while.body, label %while.end, !dbg !7758

while.body:                                       ; preds = %land.end
  %48 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7760
  %49 = load %struct.EbmlSyntax*, %struct.EbmlSyntax** %syntax.addr, align 8, !dbg !7761
  %50 = load i8*, i8** %data.addr, align 8, !dbg !7762
  %call46 = call i32 @ebml_parse(%struct.MatroskaDemuxContext* %48, %struct.EbmlSyntax* %49, i8* %50), !dbg !7763
  store i32 %call46, i32* %res, align 4, !dbg !7764
  br label %while.cond, !dbg !7765, !llvm.loop !7767

while.end:                                        ; preds = %land.end
  %51 = load i32, i32* %res, align 4, !dbg !7768
  store i32 %51, i32* %retval, align 4, !dbg !7769
  br label %return, !dbg !7769

return:                                           ; preds = %while.end, %if.then41
  %52 = load i32, i32* %retval, align 4, !dbg !7770
  ret i32 %52, !dbg !7770
}

declare i32 @ffio_limit(%struct.AVIOContext*, i32) #4

declare i64 @avio_skip(%struct.AVIOContext*, i64) #4

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @sign_extend(i32 %val, i32 %bits) #5 !dbg !7771 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %v = alloca %union.anon.2, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7775, metadata !2574), !dbg !7776
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !7777, metadata !2574), !dbg !7778
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !7779, metadata !2574), !dbg !7780
  %0 = load i32, i32* %bits.addr, align 4, !dbg !7781
  %conv = zext i32 %0 to i64, !dbg !7781
  %sub = sub i64 32, %conv, !dbg !7782
  %conv1 = trunc i64 %sub to i32, !dbg !7783
  store i32 %conv1, i32* %shift, align 4, !dbg !7780
  call void @llvm.dbg.declare(metadata %union.anon.2* %v, metadata !7784, metadata !2574), !dbg !7789
  %u = bitcast %union.anon.2* %v to i32*, !dbg !7790
  %1 = load i32, i32* %val.addr, align 4, !dbg !7791
  %2 = load i32, i32* %shift, align 4, !dbg !7792
  %shl = shl i32 %1, %2, !dbg !7793
  store i32 %shl, i32* %u, align 4, !dbg !7790
  %s = bitcast %union.anon.2* %v to i32*, !dbg !7794
  %3 = load i32, i32* %s, align 4, !dbg !7794
  %4 = load i32, i32* %shift, align 4, !dbg !7795
  %shr = ashr i32 %3, %4, !dbg !7796
  ret i32 %shr, !dbg !7797
}

declare i32 @avio_rb32(%struct.AVIOContext*) #4

declare i64 @avio_rb64(%struct.AVIOContext*) #4

declare noalias i8* @av_malloc(i64) #4

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) #4

declare void @av_free(i8*) #4

declare i32 @av_buffer_realloc(%struct.AVBufferRef**, i32) #4

declare void @av_buffer_unref(%struct.AVBufferRef**) #4

; Function Attrs: nounwind uwtable
define internal i32 @is_ebml_id_valid(i32 %id) #0 !dbg !7798 {
entry:
  %id.addr = alloca i32, align 4
  %bits = alloca i32, align 4
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !7801, metadata !2574), !dbg !7802
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !7803, metadata !2574), !dbg !7804
  %0 = load i32, i32* %id.addr, align 4, !dbg !7805
  %or = or i32 %0, 1, !dbg !7806
  %1 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !7807
  %sub = sub nsw i32 31, %1, !dbg !7808
  store i32 %sub, i32* %bits, align 4, !dbg !7804
  %2 = load i32, i32* %id.addr, align 4, !dbg !7809
  %tobool = icmp ne i32 %2, 0, !dbg !7809
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7810

land.rhs:                                         ; preds = %entry
  %3 = load i32, i32* %bits, align 4, !dbg !7811
  %add = add i32 %3, 7, !dbg !7813
  %div = udiv i32 %add, 8, !dbg !7814
  %4 = load i32, i32* %bits, align 4, !dbg !7815
  %rem = urem i32 %4, 8, !dbg !7816
  %sub1 = sub i32 8, %rem, !dbg !7817
  %cmp = icmp eq i32 %div, %sub1, !dbg !7818
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ]
  %land.ext = zext i1 %5 to i32, !dbg !7819
  ret i32 %land.ext, !dbg !7821
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

declare noalias i8* @av_strdup(i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @ebml_level_end(%struct.MatroskaDemuxContext* %matroska) #0 !dbg !7822 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !7825
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %pos = alloca i64, align 8
  %level = alloca %struct.MatroskaLevel*, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !7827, metadata !2574), !dbg !7828
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !7829, metadata !2574), !dbg !7830
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7831
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 1, !dbg !7832
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !7832
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 4, !dbg !7833
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !7833
  store %struct.AVIOContext* %2, %struct.AVIOContext** %pb, align 8, !dbg !7830
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !7834, metadata !2574), !dbg !7835
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7836
  store %struct.AVIOContext* %3, %struct.AVIOContext** %s.addr.i, align 8, !dbg !7837
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !7838
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %4, i64 0, i32 1) #11, !dbg !7839
  store i64 %call.i, i64* %pos, align 8, !dbg !7835
  %5 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7840
  %num_levels = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %5, i32 0, i32 2, !dbg !7842
  %6 = load i32, i32* %num_levels, align 8, !dbg !7842
  %cmp = icmp sgt i32 %6, 0, !dbg !7843
  br i1 %cmp, label %if.then, label %if.end7, !dbg !7844

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MatroskaLevel** %level, metadata !7845, metadata !2574), !dbg !7847
  %7 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7848
  %num_levels2 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i32 0, i32 2, !dbg !7849
  %8 = load i32, i32* %num_levels2, align 8, !dbg !7849
  %sub = sub nsw i32 %8, 1, !dbg !7850
  %idxprom = sext i32 %sub to i64, !dbg !7851
  %9 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7851
  %levels = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %9, i32 0, i32 3, !dbg !7852
  %arrayidx = getelementptr inbounds [16 x %struct.MatroskaLevel], [16 x %struct.MatroskaLevel]* %levels, i64 0, i64 %idxprom, !dbg !7851
  store %struct.MatroskaLevel* %arrayidx, %struct.MatroskaLevel** %level, align 8, !dbg !7847
  %10 = load i64, i64* %pos, align 8, !dbg !7853
  %11 = load %struct.MatroskaLevel*, %struct.MatroskaLevel** %level, align 8, !dbg !7855
  %start = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %11, i32 0, i32 0, !dbg !7856
  %12 = load i64, i64* %start, align 8, !dbg !7856
  %sub3 = sub i64 %10, %12, !dbg !7857
  %13 = load %struct.MatroskaLevel*, %struct.MatroskaLevel** %level, align 8, !dbg !7858
  %length = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %13, i32 0, i32 1, !dbg !7859
  %14 = load i64, i64* %length, align 8, !dbg !7859
  %cmp4 = icmp uge i64 %sub3, %14, !dbg !7860
  br i1 %cmp4, label %if.then5, label %lor.lhs.false, !dbg !7861

lor.lhs.false:                                    ; preds = %if.then
  %15 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7862
  %current_id = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %15, i32 0, i32 5, !dbg !7864
  %16 = load i32, i32* %current_id, align 4, !dbg !7864
  %tobool = icmp ne i32 %16, 0, !dbg !7862
  br i1 %tobool, label %if.then5, label %if.end, !dbg !7865

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %17 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7866
  %num_levels6 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %17, i32 0, i32 2, !dbg !7868
  %18 = load i32, i32* %num_levels6, align 8, !dbg !7869
  %dec = add nsw i32 %18, -1, !dbg !7869
  store i32 %dec, i32* %num_levels6, align 8, !dbg !7869
  store i32 1, i32* %retval, align 4, !dbg !7870
  br label %return, !dbg !7870

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end7, !dbg !7871

if.end7:                                          ; preds = %if.end, %entry
  %19 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7872
  %is_live = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %19, i32 0, i32 30, !dbg !7873
  %20 = load i32, i32* %is_live, align 4, !dbg !7873
  %tobool8 = icmp ne i32 %20, 0, !dbg !7872
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !7874

land.rhs:                                         ; preds = %if.end7
  %21 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7875
  %ctx9 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %21, i32 0, i32 1, !dbg !7877
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx9, align 8, !dbg !7877
  %pb10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 4, !dbg !7878
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %pb10, align 8, !dbg !7878
  %eof_reached = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %23, i32 0, i32 10, !dbg !7879
  %24 = load i32, i32* %eof_reached, align 8, !dbg !7879
  %tobool11 = icmp ne i32 %24, 0, !dbg !7880
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end7
  %25 = phi i1 [ false, %if.end7 ], [ %tobool11, %land.rhs ]
  %cond = select i1 %25, i32 1, i32 0, !dbg !7881
  store i32 %cond, i32* %retval, align 4, !dbg !7883
  br label %return, !dbg !7883

return:                                           ; preds = %land.end, %if.then5
  %26 = load i32, i32* %retval, align 4, !dbg !7884
  ret i32 %26, !dbg !7884
}

declare void @av_freep(i8*) #4

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @matroska_parse_seekhead_entry(%struct.MatroskaDemuxContext* %matroska, i64 %pos) #0 !dbg !7885 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !7886
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %pos.addr = alloca i64, align 8
  %level_up = alloca i32, align 4
  %saved_id = alloca i32, align 4
  %before_pos = alloca i64, align 8
  %level = alloca %struct.MatroskaLevel, align 8
  %offset = alloca i64, align 8
  %ret = alloca i32, align 4
  %length13 = alloca i64, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !7888, metadata !2574), !dbg !7889
  store i64 %pos, i64* %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pos.addr, metadata !7890, metadata !2574), !dbg !7891
  call void @llvm.dbg.declare(metadata i32* %level_up, metadata !7892, metadata !2574), !dbg !7893
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7894
  %level_up1 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 4, !dbg !7895
  %1 = load i32, i32* %level_up1, align 8, !dbg !7895
  store i32 %1, i32* %level_up, align 4, !dbg !7893
  call void @llvm.dbg.declare(metadata i32* %saved_id, metadata !7896, metadata !2574), !dbg !7897
  %2 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7898
  %current_id = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %2, i32 0, i32 5, !dbg !7899
  %3 = load i32, i32* %current_id, align 4, !dbg !7899
  store i32 %3, i32* %saved_id, align 4, !dbg !7897
  call void @llvm.dbg.declare(metadata i64* %before_pos, metadata !7900, metadata !2574), !dbg !7901
  %4 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7902
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %4, i32 0, i32 1, !dbg !7903
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !7903
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 4, !dbg !7904
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7904
  store %struct.AVIOContext* %6, %struct.AVIOContext** %s.addr.i, align 8, !dbg !7905
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !7906
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %7, i64 0, i32 1) #11, !dbg !7907
  store i64 %call.i, i64* %before_pos, align 8, !dbg !7901
  call void @llvm.dbg.declare(metadata %struct.MatroskaLevel* %level, metadata !7908, metadata !2574), !dbg !7909
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !7910, metadata !2574), !dbg !7911
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7912, metadata !2574), !dbg !7913
  store i32 0, i32* %ret, align 4, !dbg !7913
  %8 = load i64, i64* %pos.addr, align 8, !dbg !7914
  %9 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7915
  %segment_start = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %9, i32 0, i32 17, !dbg !7916
  %10 = load i64, i64* %segment_start, align 8, !dbg !7916
  %add = add i64 %8, %10, !dbg !7917
  store i64 %add, i64* %offset, align 8, !dbg !7918
  %11 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7919
  %ctx2 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %11, i32 0, i32 1, !dbg !7921
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx2, align 8, !dbg !7921
  %pb3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i32 0, i32 4, !dbg !7922
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb3, align 8, !dbg !7922
  %14 = load i64, i64* %offset, align 8, !dbg !7923
  %call4 = call i64 @avio_seek(%struct.AVIOContext* %13, i64 %14, i32 0), !dbg !7924
  %15 = load i64, i64* %offset, align 8, !dbg !7925
  %cmp = icmp eq i64 %call4, %15, !dbg !7926
  br i1 %cmp, label %if.then, label %if.end22, !dbg !7927

if.then:                                          ; preds = %entry
  %16 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7928
  %num_levels = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %16, i32 0, i32 2, !dbg !7931
  %17 = load i32, i32* %num_levels, align 8, !dbg !7931
  %cmp5 = icmp eq i32 %17, 16, !dbg !7932
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !7933

if.then6:                                         ; preds = %if.then
  %18 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7934
  %ctx7 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %18, i32 0, i32 1, !dbg !7936
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx7, align 8, !dbg !7936
  %20 = bitcast %struct.AVFormatContext* %19 to i8*, !dbg !7934
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 32, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.55, i32 0, i32 0), i32 16), !dbg !7937
  store i32 -1094995529, i32* %ret, align 4, !dbg !7938
  br label %if.end21, !dbg !7939

if.else:                                          ; preds = %if.then
  %start = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %level, i32 0, i32 0, !dbg !7940
  store i64 0, i64* %start, align 8, !dbg !7942
  %length = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %level, i32 0, i32 1, !dbg !7943
  store i64 -1, i64* %length, align 8, !dbg !7944
  %21 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7945
  %num_levels8 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %21, i32 0, i32 2, !dbg !7946
  %22 = load i32, i32* %num_levels8, align 8, !dbg !7946
  %idxprom = sext i32 %22 to i64, !dbg !7947
  %23 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7947
  %levels = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %23, i32 0, i32 3, !dbg !7948
  %arrayidx = getelementptr inbounds [16 x %struct.MatroskaLevel], [16 x %struct.MatroskaLevel]* %levels, i64 0, i64 %idxprom, !dbg !7947
  %24 = bitcast %struct.MatroskaLevel* %arrayidx to i8*, !dbg !7949
  %25 = bitcast %struct.MatroskaLevel* %level to i8*, !dbg !7949
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 16, i32 8, i1 false), !dbg !7949
  %26 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7950
  %num_levels9 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %26, i32 0, i32 2, !dbg !7951
  %27 = load i32, i32* %num_levels9, align 8, !dbg !7952
  %inc = add nsw i32 %27, 1, !dbg !7952
  store i32 %inc, i32* %num_levels9, align 8, !dbg !7952
  %28 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7953
  %current_id10 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %28, i32 0, i32 5, !dbg !7954
  store i32 0, i32* %current_id10, align 4, !dbg !7955
  %29 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7956
  %30 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7957
  %31 = bitcast %struct.MatroskaDemuxContext* %30 to i8*, !dbg !7957
  %call11 = call i32 @ebml_parse(%struct.MatroskaDemuxContext* %29, %struct.EbmlSyntax* getelementptr inbounds ([9 x %struct.EbmlSyntax], [9 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_segment to [9 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %31), !dbg !7958
  store i32 %call11, i32* %ret, align 4, !dbg !7959
  br label %while.cond, !dbg !7960

while.cond:                                       ; preds = %if.end, %if.else
  %32 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7961
  %num_levels12 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %32, i32 0, i32 2, !dbg !7963
  %33 = load i32, i32* %num_levels12, align 8, !dbg !7963
  %tobool = icmp ne i32 %33, 0, !dbg !7964
  br i1 %tobool, label %while.body, label %while.end, !dbg !7964

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %length13, metadata !7965, metadata !2574), !dbg !7967
  %34 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7968
  %num_levels14 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %34, i32 0, i32 2, !dbg !7969
  %35 = load i32, i32* %num_levels14, align 8, !dbg !7970
  %dec = add nsw i32 %35, -1, !dbg !7970
  store i32 %dec, i32* %num_levels14, align 8, !dbg !7970
  %idxprom15 = sext i32 %dec to i64, !dbg !7971
  %36 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7971
  %levels16 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %36, i32 0, i32 3, !dbg !7972
  %arrayidx17 = getelementptr inbounds [16 x %struct.MatroskaLevel], [16 x %struct.MatroskaLevel]* %levels16, i64 0, i64 %idxprom15, !dbg !7971
  %length18 = getelementptr inbounds %struct.MatroskaLevel, %struct.MatroskaLevel* %arrayidx17, i32 0, i32 1, !dbg !7973
  %37 = load i64, i64* %length18, align 8, !dbg !7973
  store i64 %37, i64* %length13, align 8, !dbg !7967
  %38 = load i64, i64* %length13, align 8, !dbg !7974
  %cmp19 = icmp eq i64 %38, -1, !dbg !7976
  br i1 %cmp19, label %if.then20, label %if.end, !dbg !7977

if.then20:                                        ; preds = %while.body
  br label %while.end, !dbg !7978

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !7979, !llvm.loop !7981

while.end:                                        ; preds = %if.then20, %while.cond
  br label %if.end21

if.end21:                                         ; preds = %while.end, %if.then6
  br label %if.end22, !dbg !7982

if.end22:                                         ; preds = %if.end21, %entry
  %39 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7983
  %ctx23 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %39, i32 0, i32 1, !dbg !7984
  %40 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx23, align 8, !dbg !7984
  %pb24 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %40, i32 0, i32 4, !dbg !7985
  %41 = load %struct.AVIOContext*, %struct.AVIOContext** %pb24, align 8, !dbg !7985
  %42 = load i64, i64* %before_pos, align 8, !dbg !7986
  %call25 = call i64 @avio_seek(%struct.AVIOContext* %41, i64 %42, i32 0), !dbg !7987
  %43 = load i32, i32* %level_up, align 4, !dbg !7988
  %44 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7989
  %level_up26 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %44, i32 0, i32 4, !dbg !7990
  store i32 %43, i32* %level_up26, align 8, !dbg !7991
  %45 = load i32, i32* %saved_id, align 4, !dbg !7992
  %46 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !7993
  %current_id27 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %46, i32 0, i32 5, !dbg !7994
  store i32 %45, i32* %current_id27, align 4, !dbg !7995
  %47 = load i32, i32* %ret, align 4, !dbg !7996
  ret i32 %47, !dbg !7997
}

declare i32 @avpriv_dict_set_timestamp(%struct.AVDictionary**, i8*, i64) #4

declare i8* @av_base64_encode(i8*, i32, i8*, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @matroska_decode_buffer(i8** %buf, i32* %buf_size, %struct.MatroskaTrack* %track) #0 !dbg !7998 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8**, align 8
  %buf_size.addr = alloca i32*, align 8
  %track.addr = alloca %struct.MatroskaTrack*, align 8
  %encodings = alloca %struct.MatroskaTrackEncoding*, align 8
  %data = alloca i8*, align 8
  %isize = alloca i32, align 4
  %pkt_data = alloca i8*, align 8
  %newpktdata = alloca i8*, align 8
  %pkt_size = alloca i32, align 4
  %result = alloca i32, align 4
  %olen = alloca i32, align 4
  %header_size = alloca i32, align 4
  %header = alloca i8*, align 8
  %zstream = alloca %struct.z_stream_s, align 8
  store i8** %buf, i8*** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buf.addr, metadata !8001, metadata !2574), !dbg !8002
  store i32* %buf_size, i32** %buf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %buf_size.addr, metadata !8003, metadata !2574), !dbg !8004
  store %struct.MatroskaTrack* %track, %struct.MatroskaTrack** %track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track.addr, metadata !8005, metadata !2574), !dbg !8006
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrackEncoding** %encodings, metadata !8007, metadata !2574), !dbg !8008
  %0 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8009
  %encodings1 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %0, i32 0, i32 15, !dbg !8010
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %encodings1, i32 0, i32 1, !dbg !8011
  %1 = load i8*, i8** %elem, align 8, !dbg !8011
  %2 = bitcast i8* %1 to %struct.MatroskaTrackEncoding*, !dbg !8009
  store %struct.MatroskaTrackEncoding* %2, %struct.MatroskaTrackEncoding** %encodings, align 8, !dbg !8008
  call void @llvm.dbg.declare(metadata i8** %data, metadata !8012, metadata !2574), !dbg !8013
  %3 = load i8**, i8*** %buf.addr, align 8, !dbg !8014
  %4 = load i8*, i8** %3, align 8, !dbg !8015
  store i8* %4, i8** %data, align 8, !dbg !8013
  call void @llvm.dbg.declare(metadata i32* %isize, metadata !8016, metadata !2574), !dbg !8017
  %5 = load i32*, i32** %buf_size.addr, align 8, !dbg !8018
  %6 = load i32, i32* %5, align 4, !dbg !8019
  store i32 %6, i32* %isize, align 4, !dbg !8017
  call void @llvm.dbg.declare(metadata i8** %pkt_data, metadata !8020, metadata !2574), !dbg !8021
  store i8* null, i8** %pkt_data, align 8, !dbg !8021
  call void @llvm.dbg.declare(metadata i8** %newpktdata, metadata !8022, metadata !2574), !dbg !8023
  call void @llvm.dbg.declare(metadata i32* %pkt_size, metadata !8024, metadata !2574), !dbg !8025
  %7 = load i32, i32* %isize, align 4, !dbg !8026
  store i32 %7, i32* %pkt_size, align 4, !dbg !8025
  call void @llvm.dbg.declare(metadata i32* %result, metadata !8027, metadata !2574), !dbg !8028
  store i32 0, i32* %result, align 4, !dbg !8028
  call void @llvm.dbg.declare(metadata i32* %olen, metadata !8029, metadata !2574), !dbg !8030
  %8 = load i32, i32* %pkt_size, align 4, !dbg !8031
  %cmp = icmp uge i32 %8, 10000000, !dbg !8033
  br i1 %cmp, label %if.then, label %if.end, !dbg !8034

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !8035
  br label %return, !dbg !8035

if.end:                                           ; preds = %entry
  %9 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings, align 8, !dbg !8036
  %arrayidx = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %9, i64 0, !dbg !8036
  %compression = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx, i32 0, i32 2, !dbg !8037
  %algo = getelementptr inbounds %struct.MatroskaTrackCompression, %struct.MatroskaTrackCompression* %compression, i32 0, i32 0, !dbg !8038
  %10 = load i64, i64* %algo, align 8, !dbg !8038
  switch i64 %10, label %sw.default [
    i64 3, label %sw.bb
    i64 2, label %sw.bb20
    i64 0, label %sw.bb36
  ], !dbg !8039

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %header_size, metadata !8040, metadata !2574), !dbg !8043
  %11 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings, align 8, !dbg !8044
  %arrayidx2 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %11, i64 0, !dbg !8044
  %compression3 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx2, i32 0, i32 2, !dbg !8045
  %settings = getelementptr inbounds %struct.MatroskaTrackCompression, %struct.MatroskaTrackCompression* %compression3, i32 0, i32 1, !dbg !8046
  %size = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %settings, i32 0, i32 0, !dbg !8047
  %12 = load i32, i32* %size, align 8, !dbg !8047
  store i32 %12, i32* %header_size, align 4, !dbg !8043
  call void @llvm.dbg.declare(metadata i8** %header, metadata !8048, metadata !2574), !dbg !8049
  %13 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings, align 8, !dbg !8050
  %arrayidx4 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %13, i64 0, !dbg !8050
  %compression5 = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %arrayidx4, i32 0, i32 2, !dbg !8051
  %settings6 = getelementptr inbounds %struct.MatroskaTrackCompression, %struct.MatroskaTrackCompression* %compression5, i32 0, i32 1, !dbg !8052
  %data7 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %settings6, i32 0, i32 2, !dbg !8053
  %14 = load i8*, i8** %data7, align 8, !dbg !8053
  store i8* %14, i8** %header, align 8, !dbg !8049
  %15 = load i32, i32* %header_size, align 4, !dbg !8054
  %tobool = icmp ne i32 %15, 0, !dbg !8054
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !8056

land.lhs.true:                                    ; preds = %sw.bb
  %16 = load i8*, i8** %header, align 8, !dbg !8057
  %tobool8 = icmp ne i8* %16, null, !dbg !8057
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !8059

if.then9:                                         ; preds = %land.lhs.true
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.83, i32 0, i32 0)), !dbg !8060
  store i32 -1, i32* %retval, align 4, !dbg !8062
  br label %return, !dbg !8062

if.end10:                                         ; preds = %land.lhs.true, %sw.bb
  %17 = load i32, i32* %header_size, align 4, !dbg !8063
  %tobool11 = icmp ne i32 %17, 0, !dbg !8063
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8065

if.then12:                                        ; preds = %if.end10
  store i32 0, i32* %retval, align 4, !dbg !8066
  br label %return, !dbg !8066

if.end13:                                         ; preds = %if.end10
  %18 = load i32, i32* %isize, align 4, !dbg !8067
  %19 = load i32, i32* %header_size, align 4, !dbg !8068
  %add = add nsw i32 %18, %19, !dbg !8069
  store i32 %add, i32* %pkt_size, align 4, !dbg !8070
  %20 = load i32, i32* %pkt_size, align 4, !dbg !8071
  %add14 = add nsw i32 %20, 64, !dbg !8072
  %conv = sext i32 %add14 to i64, !dbg !8071
  %call = call noalias i8* @av_malloc(i64 %conv), !dbg !8073
  store i8* %call, i8** %pkt_data, align 8, !dbg !8074
  %21 = load i8*, i8** %pkt_data, align 8, !dbg !8075
  %tobool15 = icmp ne i8* %21, null, !dbg !8075
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !8077

if.then16:                                        ; preds = %if.end13
  store i32 -12, i32* %retval, align 4, !dbg !8078
  br label %return, !dbg !8078

if.end17:                                         ; preds = %if.end13
  %22 = load i8*, i8** %pkt_data, align 8, !dbg !8079
  %23 = load i8*, i8** %header, align 8, !dbg !8080
  %24 = load i32, i32* %header_size, align 4, !dbg !8081
  %conv18 = sext i32 %24 to i64, !dbg !8081
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 %conv18, i32 1, i1 false), !dbg !8082
  %25 = load i8*, i8** %pkt_data, align 8, !dbg !8083
  %26 = load i32, i32* %header_size, align 4, !dbg !8084
  %idx.ext = sext i32 %26 to i64, !dbg !8085
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %idx.ext, !dbg !8085
  %27 = load i8*, i8** %data, align 8, !dbg !8086
  %28 = load i32, i32* %isize, align 4, !dbg !8087
  %conv19 = sext i32 %28 to i64, !dbg !8087
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %27, i64 %conv19, i32 1, i1 false), !dbg !8088
  br label %sw.epilog, !dbg !8089

sw.bb20:                                          ; preds = %if.end
  br label %do.body, !dbg !8090, !llvm.loop !8091

do.body:                                          ; preds = %land.end, %sw.bb20
  %29 = load i32, i32* %pkt_size, align 4, !dbg !8092
  %mul = mul nsw i32 %29, 3, !dbg !8092
  store i32 %mul, i32* %pkt_size, align 4, !dbg !8092
  store i32 %mul, i32* %olen, align 4, !dbg !8094
  %30 = load i8*, i8** %pkt_data, align 8, !dbg !8095
  %31 = load i32, i32* %pkt_size, align 4, !dbg !8096
  %add21 = add nsw i32 %31, 12, !dbg !8097
  %add22 = add nsw i32 %add21, 64, !dbg !8098
  %conv23 = sext i32 %add22 to i64, !dbg !8096
  %call24 = call i8* @av_realloc(i8* %30, i64 %conv23), !dbg !8099
  store i8* %call24, i8** %newpktdata, align 8, !dbg !8100
  %32 = load i8*, i8** %newpktdata, align 8, !dbg !8101
  %tobool25 = icmp ne i8* %32, null, !dbg !8101
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !8103

if.then26:                                        ; preds = %do.body
  store i32 -12, i32* %result, align 4, !dbg !8104
  br label %failed, !dbg !8106

if.end27:                                         ; preds = %do.body
  %33 = load i8*, i8** %newpktdata, align 8, !dbg !8107
  store i8* %33, i8** %pkt_data, align 8, !dbg !8108
  %34 = load i8*, i8** %pkt_data, align 8, !dbg !8109
  %35 = load i8*, i8** %data, align 8, !dbg !8110
  %call28 = call i32 @av_lzo1x_decode(i8* %34, i32* %olen, i8* %35, i32* %isize), !dbg !8111
  store i32 %call28, i32* %result, align 4, !dbg !8112
  br label %do.cond, !dbg !8113

do.cond:                                          ; preds = %if.end27
  %36 = load i32, i32* %result, align 4, !dbg !8114
  %cmp29 = icmp eq i32 %36, 2, !dbg !8116
  br i1 %cmp29, label %land.rhs, label %land.end, !dbg !8117

land.rhs:                                         ; preds = %do.cond
  %37 = load i32, i32* %pkt_size, align 4, !dbg !8118
  %cmp31 = icmp slt i32 %37, 10000000, !dbg !8120
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %38 = phi i1 [ false, %do.cond ], [ %cmp31, %land.rhs ]
  br i1 %38, label %do.body, label %do.end, !dbg !8121, !llvm.loop !8091

do.end:                                           ; preds = %land.end
  %39 = load i32, i32* %result, align 4, !dbg !8123
  %tobool33 = icmp ne i32 %39, 0, !dbg !8123
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !8125

if.then34:                                        ; preds = %do.end
  store i32 -1094995529, i32* %result, align 4, !dbg !8126
  br label %failed, !dbg !8128

if.end35:                                         ; preds = %do.end
  %40 = load i32, i32* %olen, align 4, !dbg !8129
  %41 = load i32, i32* %pkt_size, align 4, !dbg !8130
  %sub = sub nsw i32 %41, %40, !dbg !8130
  store i32 %sub, i32* %pkt_size, align 4, !dbg !8130
  br label %sw.epilog, !dbg !8131

sw.bb36:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.z_stream_s* %zstream, metadata !8132, metadata !2574), !dbg !8171
  %42 = bitcast %struct.z_stream_s* %zstream to i8*, !dbg !8171
  call void @llvm.memset.p0i8.i64(i8* %42, i8 0, i64 112, i32 8, i1 false), !dbg !8171
  %call37 = call i32 @inflateInit_(%struct.z_stream_s* %zstream, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.84, i32 0, i32 0), i32 112), !dbg !8172
  %cmp38 = icmp ne i32 %call37, 0, !dbg !8174
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !8175

if.then40:                                        ; preds = %sw.bb36
  store i32 -1, i32* %retval, align 4, !dbg !8176
  br label %return, !dbg !8176

if.end41:                                         ; preds = %sw.bb36
  %43 = load i8*, i8** %data, align 8, !dbg !8177
  %next_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream, i32 0, i32 0, !dbg !8178
  store i8* %43, i8** %next_in, align 8, !dbg !8179
  %44 = load i32, i32* %isize, align 4, !dbg !8180
  %avail_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream, i32 0, i32 1, !dbg !8181
  store i32 %44, i32* %avail_in, align 8, !dbg !8182
  br label %do.body42, !dbg !8183, !llvm.loop !8184

do.body42:                                        ; preds = %land.end63, %if.end41
  %45 = load i32, i32* %pkt_size, align 4, !dbg !8185
  %mul43 = mul nsw i32 %45, 3, !dbg !8185
  store i32 %mul43, i32* %pkt_size, align 4, !dbg !8185
  %46 = load i8*, i8** %pkt_data, align 8, !dbg !8187
  %47 = load i32, i32* %pkt_size, align 4, !dbg !8188
  %add44 = add nsw i32 %47, 64, !dbg !8189
  %conv45 = sext i32 %add44 to i64, !dbg !8188
  %call46 = call i8* @av_realloc(i8* %46, i64 %conv45), !dbg !8190
  store i8* %call46, i8** %newpktdata, align 8, !dbg !8191
  %48 = load i8*, i8** %newpktdata, align 8, !dbg !8192
  %tobool47 = icmp ne i8* %48, null, !dbg !8192
  br i1 %tobool47, label %if.end50, label %if.then48, !dbg !8194

if.then48:                                        ; preds = %do.body42
  %call49 = call i32 @inflateEnd(%struct.z_stream_s* %zstream), !dbg !8195
  store i32 -12, i32* %result, align 4, !dbg !8197
  br label %failed, !dbg !8198

if.end50:                                         ; preds = %do.body42
  %49 = load i8*, i8** %newpktdata, align 8, !dbg !8199
  store i8* %49, i8** %pkt_data, align 8, !dbg !8200
  %50 = load i32, i32* %pkt_size, align 4, !dbg !8201
  %conv51 = sext i32 %50 to i64, !dbg !8201
  %total_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream, i32 0, i32 5, !dbg !8202
  %51 = load i64, i64* %total_out, align 8, !dbg !8202
  %sub52 = sub i64 %conv51, %51, !dbg !8203
  %conv53 = trunc i64 %sub52 to i32, !dbg !8201
  %avail_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream, i32 0, i32 4, !dbg !8204
  store i32 %conv53, i32* %avail_out, align 8, !dbg !8205
  %52 = load i8*, i8** %pkt_data, align 8, !dbg !8206
  %total_out54 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream, i32 0, i32 5, !dbg !8207
  %53 = load i64, i64* %total_out54, align 8, !dbg !8207
  %add.ptr55 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !8208
  %next_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream, i32 0, i32 3, !dbg !8209
  store i8* %add.ptr55, i8** %next_out, align 8, !dbg !8210
  %call56 = call i32 @inflate(%struct.z_stream_s* %zstream, i32 0), !dbg !8211
  store i32 %call56, i32* %result, align 4, !dbg !8212
  br label %do.cond57, !dbg !8213

do.cond57:                                        ; preds = %if.end50
  %54 = load i32, i32* %result, align 4, !dbg !8214
  %cmp58 = icmp eq i32 %54, 0, !dbg !8216
  br i1 %cmp58, label %land.rhs60, label %land.end63, !dbg !8217

land.rhs60:                                       ; preds = %do.cond57
  %55 = load i32, i32* %pkt_size, align 4, !dbg !8218
  %cmp61 = icmp slt i32 %55, 10000000, !dbg !8220
  br label %land.end63

land.end63:                                       ; preds = %land.rhs60, %do.cond57
  %56 = phi i1 [ false, %do.cond57 ], [ %cmp61, %land.rhs60 ]
  br i1 %56, label %do.body42, label %do.end64, !dbg !8221, !llvm.loop !8184

do.end64:                                         ; preds = %land.end63
  %total_out65 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream, i32 0, i32 5, !dbg !8223
  %57 = load i64, i64* %total_out65, align 8, !dbg !8223
  %conv66 = trunc i64 %57 to i32, !dbg !8224
  store i32 %conv66, i32* %pkt_size, align 4, !dbg !8225
  %call67 = call i32 @inflateEnd(%struct.z_stream_s* %zstream), !dbg !8226
  %58 = load i32, i32* %result, align 4, !dbg !8227
  %cmp68 = icmp ne i32 %58, 1, !dbg !8229
  br i1 %cmp68, label %if.then70, label %if.end75, !dbg !8230

if.then70:                                        ; preds = %do.end64
  %59 = load i32, i32* %result, align 4, !dbg !8231
  %cmp71 = icmp eq i32 %59, -4, !dbg !8234
  br i1 %cmp71, label %if.then73, label %if.else, !dbg !8235

if.then73:                                        ; preds = %if.then70
  store i32 -12, i32* %result, align 4, !dbg !8236
  br label %if.end74, !dbg !8237

if.else:                                          ; preds = %if.then70
  store i32 -1094995529, i32* %result, align 4, !dbg !8238
  br label %if.end74

if.end74:                                         ; preds = %if.else, %if.then73
  br label %failed, !dbg !8239

if.end75:                                         ; preds = %do.end64
  br label %sw.epilog, !dbg !8240

sw.default:                                       ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !8241
  br label %return, !dbg !8241

sw.epilog:                                        ; preds = %if.end75, %if.end35, %if.end17
  %60 = load i8*, i8** %pkt_data, align 8, !dbg !8242
  %61 = load i32, i32* %pkt_size, align 4, !dbg !8243
  %idx.ext76 = sext i32 %61 to i64, !dbg !8244
  %add.ptr77 = getelementptr inbounds i8, i8* %60, i64 %idx.ext76, !dbg !8244
  call void @llvm.memset.p0i8.i64(i8* %add.ptr77, i8 0, i64 64, i32 1, i1 false), !dbg !8245
  %62 = load i8*, i8** %pkt_data, align 8, !dbg !8246
  %63 = load i8**, i8*** %buf.addr, align 8, !dbg !8247
  store i8* %62, i8** %63, align 8, !dbg !8248
  %64 = load i32, i32* %pkt_size, align 4, !dbg !8249
  %65 = load i32*, i32** %buf_size.addr, align 8, !dbg !8250
  store i32 %64, i32* %65, align 4, !dbg !8251
  store i32 0, i32* %retval, align 4, !dbg !8252
  br label %return, !dbg !8252

failed:                                           ; preds = %if.end74, %if.then48, %if.then34, %if.then26
  %66 = load i8*, i8** %pkt_data, align 8, !dbg !8253
  call void @av_free(i8* %66), !dbg !8254
  %67 = load i32, i32* %result, align 4, !dbg !8255
  store i32 %67, i32* %retval, align 4, !dbg !8256
  br label %return, !dbg !8256

return:                                           ; preds = %failed, %sw.epilog, %sw.default, %if.then40, %if.then16, %if.then12, %if.then9, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !8257
  ret i32 %68, !dbg !8257
}

declare %struct.AVBufferRef* @av_buffer_create(i8*, i32, void (i8*, i8*)*, i8*, i32) #4

declare i32 @ff_codec_get_id(%struct.AVCodecTag*, i32) #4

declare i32 @ffio_init_context(%struct.AVIOContext*, i8*, i32, i32, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*) #4

declare i32 @ff_get_wav_header(%struct.AVFormatContext*, %struct.AVIOContext*, %struct.AVCodecParameters*, i32, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @get_qt_codec(%struct.MatroskaTrack* %track, i32* %fourcc, i32* %codec_id) #0 !dbg !8258 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2569, metadata !2574), !dbg !8263
  %retval = alloca i32, align 4
  %track.addr = alloca %struct.MatroskaTrack*, align 8
  %fourcc.addr = alloca i32*, align 8
  %codec_id.addr = alloca i32*, align 8
  %codec_tags = alloca %struct.AVCodecTag*, align 8
  %ret = alloca i32, align 4
  store %struct.MatroskaTrack* %track, %struct.MatroskaTrack** %track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track.addr, metadata !8267, metadata !2574), !dbg !8268
  store i32* %fourcc, i32** %fourcc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fourcc.addr, metadata !8269, metadata !2574), !dbg !8270
  store i32* %codec_id, i32** %codec_id.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %codec_id.addr, metadata !8271, metadata !2574), !dbg !8272
  call void @llvm.dbg.declare(metadata %struct.AVCodecTag** %codec_tags, metadata !8273, metadata !2574), !dbg !8277
  %0 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8278
  %type = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %0, i32 0, i32 2, !dbg !8279
  %1 = load i64, i64* %type, align 8, !dbg !8279
  %cmp = icmp eq i64 %1, 1, !dbg !8280
  %cond = select i1 %cmp, %struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movvideo_tags, i32 0, i32 0), %struct.AVCodecTag* getelementptr inbounds ([0 x %struct.AVCodecTag], [0 x %struct.AVCodecTag]* @ff_codec_movaudio_tags, i32 0, i32 0), !dbg !8278
  store %struct.AVCodecTag* %cond, %struct.AVCodecTag** %codec_tags, align 8, !dbg !8281
  %2 = load %struct.AVCodecTag*, %struct.AVCodecTag** %codec_tags, align 8, !dbg !8282
  %3 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8283
  %codec_priv = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %3, i32 0, i32 5, !dbg !8284
  %data = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv, i32 0, i32 2, !dbg !8285
  %4 = load i8*, i8** %data, align 8, !dbg !8285
  %5 = bitcast i8* %4 to %union.unaligned_32*, !dbg !8286
  %l = bitcast %union.unaligned_32* %5 to i32*, !dbg !8286
  %6 = load i32, i32* %l, align 1, !dbg !8286
  %call = call i32 @ff_codec_get_id(%struct.AVCodecTag* %2, i32 %6), !dbg !8287
  %tobool = icmp ne i32 %call, 0, !dbg !8287
  br i1 %tobool, label %if.then, label %if.end27, !dbg !8288

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8289, metadata !2574), !dbg !8290
  %7 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8291
  %codec_priv1 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %7, i32 0, i32 5, !dbg !8292
  %buf = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv1, i32 0, i32 1, !dbg !8293
  %8 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8294
  %codec_priv2 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %8, i32 0, i32 5, !dbg !8295
  %size = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv2, i32 0, i32 0, !dbg !8296
  %9 = load i32, i32* %size, align 8, !dbg !8296
  %add = add nsw i32 %9, 4, !dbg !8297
  %add3 = add nsw i32 %add, 64, !dbg !8298
  %call4 = call i32 @av_buffer_realloc(%struct.AVBufferRef** %buf, i32 %add3), !dbg !8299
  store i32 %call4, i32* %ret, align 4, !dbg !8290
  %10 = load i32, i32* %ret, align 4, !dbg !8300
  %cmp5 = icmp slt i32 %10, 0, !dbg !8302
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !8303

if.then6:                                         ; preds = %if.then
  %11 = load i32, i32* %ret, align 4, !dbg !8304
  store i32 %11, i32* %retval, align 4, !dbg !8305
  br label %return, !dbg !8305

if.end:                                           ; preds = %if.then
  %12 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8306
  %codec_priv7 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %12, i32 0, i32 5, !dbg !8307
  %buf8 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv7, i32 0, i32 1, !dbg !8308
  %13 = load %struct.AVBufferRef*, %struct.AVBufferRef** %buf8, align 8, !dbg !8308
  %data9 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %13, i32 0, i32 1, !dbg !8309
  %14 = load i8*, i8** %data9, align 8, !dbg !8309
  %15 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8310
  %codec_priv10 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %15, i32 0, i32 5, !dbg !8311
  %data11 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv10, i32 0, i32 2, !dbg !8312
  store i8* %14, i8** %data11, align 8, !dbg !8313
  %16 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8314
  %codec_priv12 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %16, i32 0, i32 5, !dbg !8315
  %data13 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv12, i32 0, i32 2, !dbg !8316
  %17 = load i8*, i8** %data13, align 8, !dbg !8316
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 4, !dbg !8317
  %18 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8318
  %codec_priv14 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %18, i32 0, i32 5, !dbg !8319
  %data15 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv14, i32 0, i32 2, !dbg !8320
  %19 = load i8*, i8** %data15, align 8, !dbg !8320
  %20 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8321
  %codec_priv16 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %20, i32 0, i32 5, !dbg !8322
  %size17 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv16, i32 0, i32 0, !dbg !8323
  %21 = load i32, i32* %size17, align 8, !dbg !8323
  %conv = sext i32 %21 to i64, !dbg !8321
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %add.ptr, i8* %19, i64 %conv, i32 1, i1 false), !dbg !8324
  %22 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8325
  %codec_priv18 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %22, i32 0, i32 5, !dbg !8326
  %size19 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv18, i32 0, i32 0, !dbg !8327
  %23 = load i32, i32* %size19, align 8, !dbg !8328
  %add20 = add nsw i32 %23, 4, !dbg !8328
  store i32 %add20, i32* %size19, align 8, !dbg !8328
  %24 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8329
  %codec_priv21 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %24, i32 0, i32 5, !dbg !8330
  %size22 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv21, i32 0, i32 0, !dbg !8331
  %25 = load i32, i32* %size22, align 8, !dbg !8331
  store i32 %25, i32* %x.addr.i, align 4, !dbg !8332
  %26 = load i32, i32* %x.addr.i, align 4, !dbg !8333
  %shl.i = shl i32 %26, 8, !dbg !8334
  %and.i = and i32 %shl.i, 65280, !dbg !8335
  %27 = load i32, i32* %x.addr.i, align 4, !dbg !8336
  %shr.i = lshr i32 %27, 8, !dbg !8337
  %and1.i = and i32 %shr.i, 255, !dbg !8338
  %or.i = or i32 %and.i, %and1.i, !dbg !8339
  %shl2.i = shl i32 %or.i, 16, !dbg !8340
  %28 = load i32, i32* %x.addr.i, align 4, !dbg !8341
  %shr3.i = lshr i32 %28, 16, !dbg !8342
  %shl4.i = shl i32 %shr3.i, 8, !dbg !8343
  %and5.i = and i32 %shl4.i, 65280, !dbg !8344
  %29 = load i32, i32* %x.addr.i, align 4, !dbg !8345
  %shr6.i = lshr i32 %29, 16, !dbg !8346
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !8347
  %and8.i = and i32 %shr7.i, 255, !dbg !8348
  %or9.i = or i32 %and5.i, %and8.i, !dbg !8349
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !8350
  %30 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8351
  %codec_priv24 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %30, i32 0, i32 5, !dbg !8352
  %data25 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv24, i32 0, i32 2, !dbg !8353
  %31 = load i8*, i8** %data25, align 8, !dbg !8353
  %32 = bitcast i8* %31 to %union.unaligned_32*, !dbg !8354
  %l26 = bitcast %union.unaligned_32* %32 to i32*, !dbg !8354
  store i32 %or10.i, i32* %l26, align 1, !dbg !8355
  br label %if.end27, !dbg !8356

if.end27:                                         ; preds = %if.end, %entry
  %33 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8357
  %codec_priv28 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %33, i32 0, i32 5, !dbg !8358
  %data29 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv28, i32 0, i32 2, !dbg !8359
  %34 = load i8*, i8** %data29, align 8, !dbg !8359
  %add.ptr30 = getelementptr inbounds i8, i8* %34, i64 4, !dbg !8360
  %35 = bitcast i8* %add.ptr30 to %union.unaligned_32*, !dbg !8361
  %l31 = bitcast %union.unaligned_32* %35 to i32*, !dbg !8361
  %36 = load i32, i32* %l31, align 1, !dbg !8361
  %37 = load i32*, i32** %fourcc.addr, align 8, !dbg !8362
  store i32 %36, i32* %37, align 4, !dbg !8363
  %38 = load %struct.AVCodecTag*, %struct.AVCodecTag** %codec_tags, align 8, !dbg !8364
  %39 = load i32*, i32** %fourcc.addr, align 8, !dbg !8365
  %40 = load i32, i32* %39, align 4, !dbg !8366
  %call32 = call i32 @ff_codec_get_id(%struct.AVCodecTag* %38, i32 %40), !dbg !8367
  %41 = load i32*, i32** %codec_id.addr, align 8, !dbg !8368
  store i32 %call32, i32* %41, align 4, !dbg !8369
  store i32 0, i32* %retval, align 4, !dbg !8370
  br label %return, !dbg !8370

return:                                           ; preds = %if.end27, %if.then6
  %42 = load i32, i32* %retval, align 4, !dbg !8371
  ret i32 %42, !dbg !8371
}

declare i8* @av_fourcc_make_string(i8*, i32) #4

declare i32 @ff_get_qtpalette(i32, %struct.AVIOContext*, i32*) #4

; Function Attrs: nounwind uwtable
define internal i32 @matroska_aac_profile(i8* %codec_id) #0 !dbg !2548 {
entry:
  %codec_id.addr = alloca i8*, align 8
  %profile = alloca i32, align 4
  store i8* %codec_id, i8** %codec_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %codec_id.addr, metadata !8372, metadata !2574), !dbg !8373
  call void @llvm.dbg.declare(metadata i32* %profile, metadata !8374, metadata !2574), !dbg !8375
  store i32 0, i32* %profile, align 4, !dbg !8376
  br label %for.cond, !dbg !8378

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %profile, align 4, !dbg !8379
  %conv = sext i32 %0 to i64, !dbg !8379
  %cmp = icmp ult i64 %conv, 3, !dbg !8382
  br i1 %cmp, label %for.body, label %for.end, !dbg !8383

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %codec_id.addr, align 8, !dbg !8384
  %2 = load i32, i32* %profile, align 4, !dbg !8386
  %idxprom = sext i32 %2 to i64, !dbg !8387
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* @matroska_aac_profile.aac_profiles, i64 0, i64 %idxprom, !dbg !8387
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !8387
  %call = call i8* @strstr(i8* %1, i8* %3) #10, !dbg !8388
  %tobool = icmp ne i8* %call, null, !dbg !8388
  br i1 %tobool, label %if.then, label %if.end, !dbg !8389

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !8390

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8391

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %profile, align 4, !dbg !8393
  %inc = add nsw i32 %4, 1, !dbg !8393
  store i32 %inc, i32* %profile, align 4, !dbg !8393
  br label %for.cond, !dbg !8395, !llvm.loop !8396

for.end:                                          ; preds = %if.then, %for.cond
  %5 = load i32, i32* %profile, align 4, !dbg !8398
  %add = add nsw i32 %5, 1, !dbg !8399
  ret i32 %add, !dbg !8400
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_aac_sri(i32 %samplerate) #0 !dbg !8401 {
entry:
  %samplerate.addr = alloca i32, align 4
  %sri = alloca i32, align 4
  store i32 %samplerate, i32* %samplerate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samplerate.addr, metadata !8404, metadata !2574), !dbg !8405
  call void @llvm.dbg.declare(metadata i32* %sri, metadata !8406, metadata !2574), !dbg !8407
  store i32 0, i32* %sri, align 4, !dbg !8408
  br label %for.cond, !dbg !8410

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %sri, align 4, !dbg !8411
  %conv = sext i32 %0 to i64, !dbg !8411
  %cmp = icmp ult i64 %conv, 16, !dbg !8414
  br i1 %cmp, label %for.body, label %for.end, !dbg !8415

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %sri, align 4, !dbg !8416
  %idxprom = sext i32 %1 to i64, !dbg !8418
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 %idxprom, !dbg !8418
  %2 = load i32, i32* %arrayidx, align 4, !dbg !8418
  %3 = load i32, i32* %samplerate.addr, align 4, !dbg !8419
  %cmp2 = icmp eq i32 %2, %3, !dbg !8420
  br i1 %cmp2, label %if.then, label %if.end, !dbg !8421

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !8422

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8423

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %sri, align 4, !dbg !8425
  %inc = add nsw i32 %4, 1, !dbg !8425
  store i32 %inc, i32* %sri, align 4, !dbg !8425
  br label %for.cond, !dbg !8427, !llvm.loop !8428

for.end:                                          ; preds = %if.then, %for.cond
  %5 = load i32, i32* %sri, align 4, !dbg !8430
  ret i32 %5, !dbg !8431
}

declare noalias i8* @av_mallocz(i64) #4

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #2

declare void @avio_write(%struct.AVIOContext*, i8*, i32) #4

declare void @avio_wl16(%struct.AVIOContext*, i32) #4

declare void @avio_wl32(%struct.AVIOContext*, i32) #4

; Function Attrs: nounwind readnone
declare i64 @av_rescale(i64, i64, i64) #6

declare i32 @avio_rb16(%struct.AVIOContext*) #4

declare i8* @av_malloc_array(i64, i64) #4

; Function Attrs: nounwind uwtable
define internal i32 @matroska_parse_flac(%struct.AVFormatContext* %s, %struct.MatroskaTrack* %track, i32* %offset) #0 !dbg !8432 {
entry:
  %b.addr.i9.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i9.i, metadata !8435, metadata !2574), !dbg !8440
  %b.addr.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i, metadata !8448, metadata !2574), !dbg !8450
  %block_header.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %block_header.addr.i, metadata !8452, metadata !2574), !dbg !8453
  %last.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %last.addr.i, metadata !8454, metadata !2574), !dbg !8455
  %type.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %type.addr.i, metadata !8456, metadata !2574), !dbg !8457
  %size.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %size.addr.i, metadata !8458, metadata !2574), !dbg !8459
  %tmp.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tmp.i, metadata !8460, metadata !2574), !dbg !8461
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %track.addr = alloca %struct.MatroskaTrack*, align 8
  %offset.addr = alloca i32*, align 8
  %st = alloca %struct.AVStream*, align 8
  %p = alloca i8*, align 8
  %size = alloca i32, align 4
  %block_last = alloca i32, align 4
  %block_type = alloca i32, align 4
  %block_size = alloca i32, align 4
  %dict = alloca %struct.AVDictionary*, align 8
  %chmask = alloca %struct.AVDictionaryEntry*, align 8
  %mask = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8462, metadata !2574), !dbg !8463
  store %struct.MatroskaTrack* %track, %struct.MatroskaTrack** %track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track.addr, metadata !8464, metadata !2574), !dbg !8465
  store i32* %offset, i32** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offset.addr, metadata !8466, metadata !2574), !dbg !8467
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !8468, metadata !2574), !dbg !8469
  %0 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8470
  %stream = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %0, i32 0, i32 18, !dbg !8471
  %1 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8471
  store %struct.AVStream* %1, %struct.AVStream** %st, align 8, !dbg !8469
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8472, metadata !2574), !dbg !8473
  %2 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8474
  %codec_priv = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %2, i32 0, i32 5, !dbg !8475
  %data = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv, i32 0, i32 2, !dbg !8476
  %3 = load i8*, i8** %data, align 8, !dbg !8476
  store i8* %3, i8** %p, align 8, !dbg !8473
  call void @llvm.dbg.declare(metadata i32* %size, metadata !8477, metadata !2574), !dbg !8478
  %4 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8479
  %codec_priv1 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %4, i32 0, i32 5, !dbg !8480
  %size2 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv1, i32 0, i32 0, !dbg !8481
  %5 = load i32, i32* %size2, align 8, !dbg !8481
  store i32 %5, i32* %size, align 4, !dbg !8478
  %6 = load i32, i32* %size, align 4, !dbg !8482
  %cmp = icmp slt i32 %6, 42, !dbg !8484
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8485

lor.lhs.false:                                    ; preds = %entry
  %7 = load i8*, i8** %p, align 8, !dbg !8486
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 4, !dbg !8486
  %8 = load i8, i8* %arrayidx, align 1, !dbg !8486
  %conv = zext i8 %8 to i32, !dbg !8486
  %and = and i32 %conv, 127, !dbg !8488
  %tobool = icmp ne i32 %and, 0, !dbg !8488
  br i1 %tobool, label %if.then, label %if.end, !dbg !8489

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8490
  %10 = bitcast %struct.AVFormatContext* %9 to i8*, !dbg !8490
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i32 0, i32 0)), !dbg !8492
  %11 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8493
  %codec_priv3 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %11, i32 0, i32 5, !dbg !8494
  %size4 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv3, i32 0, i32 0, !dbg !8495
  store i32 0, i32* %size4, align 8, !dbg !8496
  store i32 0, i32* %retval, align 4, !dbg !8497
  br label %return, !dbg !8497

if.end:                                           ; preds = %lor.lhs.false
  %12 = load i32*, i32** %offset.addr, align 8, !dbg !8498
  store i32 8, i32* %12, align 4, !dbg !8499
  %13 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8500
  %codec_priv5 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %13, i32 0, i32 5, !dbg !8501
  %size6 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv5, i32 0, i32 0, !dbg !8502
  store i32 42, i32* %size6, align 8, !dbg !8503
  %14 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8504
  %codec_priv7 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %14, i32 0, i32 5, !dbg !8505
  %size8 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv7, i32 0, i32 0, !dbg !8506
  %15 = load i32, i32* %size8, align 8, !dbg !8506
  %16 = load i8*, i8** %p, align 8, !dbg !8507
  %idx.ext = sext i32 %15 to i64, !dbg !8507
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %idx.ext, !dbg !8507
  store i8* %add.ptr, i8** %p, align 8, !dbg !8507
  %17 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8508
  %codec_priv9 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %17, i32 0, i32 5, !dbg !8509
  %size10 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %codec_priv9, i32 0, i32 0, !dbg !8510
  %18 = load i32, i32* %size10, align 8, !dbg !8510
  %19 = load i32, i32* %size, align 4, !dbg !8511
  %sub = sub nsw i32 %19, %18, !dbg !8511
  store i32 %sub, i32* %size, align 4, !dbg !8511
  br label %while.cond, !dbg !8512

while.cond:                                       ; preds = %if.end33, %if.end
  %20 = load i32, i32* %size, align 4, !dbg !8513
  %cmp11 = icmp sge i32 %20, 4, !dbg !8515
  br i1 %cmp11, label %while.body, label %while.end, !dbg !8516

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %block_last, metadata !8517, metadata !2574), !dbg !8518
  call void @llvm.dbg.declare(metadata i32* %block_type, metadata !8519, metadata !2574), !dbg !8520
  call void @llvm.dbg.declare(metadata i32* %block_size, metadata !8521, metadata !2574), !dbg !8522
  %21 = load i8*, i8** %p, align 8, !dbg !8523
  store i8* %21, i8** %block_header.addr.i, align 8, !dbg !8524
  store i32* %block_last, i32** %last.addr.i, align 8, !dbg !8524
  store i32* %block_type, i32** %type.addr.i, align 8, !dbg !8524
  store i32* %block_size, i32** %size.addr.i, align 8, !dbg !8524
  store i8** %block_header.addr.i, i8*** %b.addr.i.i, align 8, !dbg !8525
  %22 = load i8**, i8*** %b.addr.i.i, align 8, !dbg !8526
  %23 = load i8*, i8** %22, align 8, !dbg !8527
  %add.ptr.i.i = getelementptr inbounds i8, i8* %23, i64 1, !dbg !8527
  store i8* %add.ptr.i.i, i8** %22, align 8, !dbg !8527
  %24 = load i8**, i8*** %b.addr.i.i, align 8, !dbg !8528
  %25 = load i8*, i8** %24, align 8, !dbg !8529
  %add.ptr1.i.i = getelementptr inbounds i8, i8* %25, i64 -1, !dbg !8530
  %26 = load i8, i8* %add.ptr1.i.i, align 1, !dbg !8531
  %conv.i.i = zext i8 %26 to i32, !dbg !8532
  store i32 %conv.i.i, i32* %tmp.i, align 4, !dbg !8461
  %27 = load i32*, i32** %last.addr.i, align 8, !dbg !8533
  %tobool.i = icmp ne i32* %27, null, !dbg !8533
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !8535

if.then.i:                                        ; preds = %while.body
  %28 = load i32, i32* %tmp.i, align 4, !dbg !8536
  %and.i = and i32 %28, 128, !dbg !8537
  %29 = load i32*, i32** %last.addr.i, align 8, !dbg !8538
  store i32 %and.i, i32* %29, align 4, !dbg !8539
  br label %if.end.i, !dbg !8540

if.end.i:                                         ; preds = %if.then.i, %while.body
  %30 = load i32*, i32** %type.addr.i, align 8, !dbg !8541
  %tobool1.i = icmp ne i32* %30, null, !dbg !8541
  br i1 %tobool1.i, label %if.then2.i, label %if.end4.i, !dbg !8543

if.then2.i:                                       ; preds = %if.end.i
  %31 = load i32, i32* %tmp.i, align 4, !dbg !8544
  %and3.i = and i32 %31, 127, !dbg !8545
  %32 = load i32*, i32** %type.addr.i, align 8, !dbg !8546
  store i32 %and3.i, i32* %32, align 4, !dbg !8547
  br label %if.end4.i, !dbg !8548

if.end4.i:                                        ; preds = %if.then2.i, %if.end.i
  %33 = load i32*, i32** %size.addr.i, align 8, !dbg !8549
  %tobool5.i = icmp ne i32* %33, null, !dbg !8549
  br i1 %tobool5.i, label %if.then6.i, label %flac_parse_block_header.exit, !dbg !8550

if.then6.i:                                       ; preds = %if.end4.i
  store i8** %block_header.addr.i, i8*** %b.addr.i9.i, align 8, !dbg !8551
  %34 = load i8**, i8*** %b.addr.i9.i, align 8, !dbg !8552
  %35 = load i8*, i8** %34, align 8, !dbg !8553
  %add.ptr.i10.i = getelementptr inbounds i8, i8* %35, i64 3, !dbg !8553
  store i8* %add.ptr.i10.i, i8** %34, align 8, !dbg !8553
  %36 = load i8**, i8*** %b.addr.i9.i, align 8, !dbg !8554
  %37 = load i8*, i8** %36, align 8, !dbg !8555
  %add.ptr1.i11.i = getelementptr inbounds i8, i8* %37, i64 -3, !dbg !8556
  %38 = load i8, i8* %add.ptr1.i11.i, align 1, !dbg !8557
  %conv.i12.i = zext i8 %38 to i32, !dbg !8557
  %shl.i.i = shl i32 %conv.i12.i, 16, !dbg !8558
  %39 = load i8**, i8*** %b.addr.i9.i, align 8, !dbg !8559
  %40 = load i8*, i8** %39, align 8, !dbg !8560
  %add.ptr2.i.i = getelementptr inbounds i8, i8* %40, i64 -3, !dbg !8561
  %arrayidx3.i.i = getelementptr inbounds i8, i8* %add.ptr2.i.i, i64 1, !dbg !8562
  %41 = load i8, i8* %arrayidx3.i.i, align 1, !dbg !8562
  %conv4.i.i = zext i8 %41 to i32, !dbg !8562
  %shl5.i.i = shl i32 %conv4.i.i, 8, !dbg !8563
  %or.i.i = or i32 %shl.i.i, %shl5.i.i, !dbg !8564
  %42 = load i8**, i8*** %b.addr.i9.i, align 8, !dbg !8565
  %43 = load i8*, i8** %42, align 8, !dbg !8566
  %add.ptr6.i.i = getelementptr inbounds i8, i8* %43, i64 -3, !dbg !8567
  %arrayidx7.i.i = getelementptr inbounds i8, i8* %add.ptr6.i.i, i64 2, !dbg !8568
  %44 = load i8, i8* %arrayidx7.i.i, align 1, !dbg !8568
  %conv8.i.i = zext i8 %44 to i32, !dbg !8568
  %or9.i.i = or i32 %or.i.i, %conv8.i.i, !dbg !8569
  %45 = load i32*, i32** %size.addr.i, align 8, !dbg !8570
  store i32 %or9.i.i, i32* %45, align 4, !dbg !8571
  br label %flac_parse_block_header.exit, !dbg !8572

flac_parse_block_header.exit:                     ; preds = %if.end4.i, %if.then6.i
  %46 = load i8*, i8** %p, align 8, !dbg !8573
  %add.ptr13 = getelementptr inbounds i8, i8* %46, i64 4, !dbg !8573
  store i8* %add.ptr13, i8** %p, align 8, !dbg !8573
  %47 = load i32, i32* %size, align 4, !dbg !8574
  %sub14 = sub nsw i32 %47, 4, !dbg !8574
  store i32 %sub14, i32* %size, align 4, !dbg !8574
  %48 = load i32, i32* %block_size, align 4, !dbg !8575
  %49 = load i32, i32* %size, align 4, !dbg !8577
  %cmp15 = icmp sgt i32 %48, %49, !dbg !8578
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !8579

if.then17:                                        ; preds = %flac_parse_block_header.exit
  store i32 0, i32* %retval, align 4, !dbg !8580
  br label %return, !dbg !8580

if.end18:                                         ; preds = %flac_parse_block_header.exit
  %50 = load i32, i32* %block_type, align 4, !dbg !8581
  %cmp19 = icmp eq i32 %50, 4, !dbg !8583
  br i1 %cmp19, label %if.then21, label %if.end33, !dbg !8584

if.then21:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %dict, metadata !8585, metadata !2574), !dbg !8587
  store %struct.AVDictionary* null, %struct.AVDictionary** %dict, align 8, !dbg !8587
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %chmask, metadata !8588, metadata !2574), !dbg !8595
  %51 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8596
  %52 = load i8*, i8** %p, align 8, !dbg !8597
  %53 = load i32, i32* %block_size, align 4, !dbg !8598
  %call = call i32 @ff_vorbis_comment(%struct.AVFormatContext* %51, %struct.AVDictionary** %dict, i8* %52, i32 %53, i32 0), !dbg !8599
  %54 = load %struct.AVDictionary*, %struct.AVDictionary** %dict, align 8, !dbg !8600
  %call22 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %54, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.89, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !8601
  store %struct.AVDictionaryEntry* %call22, %struct.AVDictionaryEntry** %chmask, align 8, !dbg !8602
  %55 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %chmask, align 8, !dbg !8603
  %tobool23 = icmp ne %struct.AVDictionaryEntry* %55, null, !dbg !8603
  br i1 %tobool23, label %if.then24, label %if.end32, !dbg !8605

if.then24:                                        ; preds = %if.then21
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !8606, metadata !2574), !dbg !8608
  %56 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %chmask, align 8, !dbg !8609
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %56, i32 0, i32 1, !dbg !8610
  %57 = load i8*, i8** %value, align 8, !dbg !8610
  %call25 = call i64 @strtol(i8* %57, i8** null, i32 0) #11, !dbg !8611
  store i64 %call25, i64* %mask, align 8, !dbg !8608
  %58 = load i64, i64* %mask, align 8, !dbg !8612
  %tobool26 = icmp ne i64 %58, 0, !dbg !8612
  br i1 %tobool26, label %lor.lhs.false27, label %if.then30, !dbg !8614

lor.lhs.false27:                                  ; preds = %if.then24
  %59 = load i64, i64* %mask, align 8, !dbg !8615
  %and28 = and i64 %59, -262144, !dbg !8617
  %tobool29 = icmp ne i64 %and28, 0, !dbg !8617
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !8618

if.then30:                                        ; preds = %lor.lhs.false27, %if.then24
  %60 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8619
  %61 = bitcast %struct.AVFormatContext* %60 to i8*, !dbg !8619
  call void (i8*, i32, i8*, ...) @av_log(i8* %61, i32 24, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.90, i32 0, i32 0)), !dbg !8621
  br label %if.end31, !dbg !8622

if.else:                                          ; preds = %lor.lhs.false27
  %62 = load i64, i64* %mask, align 8, !dbg !8623
  %63 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !8624
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %63, i32 0, i32 19, !dbg !8625
  %64 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !8625
  %channel_layout = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %64, i32 0, i32 21, !dbg !8626
  store i64 %62, i64* %channel_layout, align 8, !dbg !8627
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then30
  br label %if.end32, !dbg !8628

if.end32:                                         ; preds = %if.end31, %if.then21
  call void @av_dict_free(%struct.AVDictionary** %dict), !dbg !8629
  br label %if.end33, !dbg !8630

if.end33:                                         ; preds = %if.end32, %if.end18
  %65 = load i32, i32* %block_size, align 4, !dbg !8631
  %66 = load i8*, i8** %p, align 8, !dbg !8632
  %idx.ext34 = sext i32 %65 to i64, !dbg !8632
  %add.ptr35 = getelementptr inbounds i8, i8* %66, i64 %idx.ext34, !dbg !8632
  store i8* %add.ptr35, i8** %p, align 8, !dbg !8632
  %67 = load i32, i32* %block_size, align 4, !dbg !8633
  %68 = load i32, i32* %size, align 4, !dbg !8634
  %sub36 = sub nsw i32 %68, %67, !dbg !8634
  store i32 %sub36, i32* %size, align 4, !dbg !8634
  br label %while.cond, !dbg !8635, !llvm.loop !8637

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !8638
  br label %return, !dbg !8638

return:                                           ; preds = %while.end, %if.then17, %if.then
  %69 = load i32, i32* %retval, align 4, !dbg !8639
  ret i32 %69, !dbg !8639
}

declare void @avpriv_set_pts_info(%struct.AVStream*, i32, i32, i32) #4

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) #6

; Function Attrs: nounwind uwtable
define internal i32 @mkv_field_order(%struct.MatroskaDemuxContext* %matroska, i64 %field_order) #0 !dbg !8640 {
entry:
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %field_order.addr = alloca i64, align 8
  %major = alloca i32, align 4
  %minor = alloca i32, align 4
  %micro = alloca i32, align 4
  %bttb = alloca i32, align 4
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !8641, metadata !2574), !dbg !8642
  store i64 %field_order, i64* %field_order.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %field_order.addr, metadata !8643, metadata !2574), !dbg !8644
  call void @llvm.dbg.declare(metadata i32* %major, metadata !8645, metadata !2574), !dbg !8646
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !8647, metadata !2574), !dbg !8648
  call void @llvm.dbg.declare(metadata i32* %micro, metadata !8649, metadata !2574), !dbg !8650
  call void @llvm.dbg.declare(metadata i32* %bttb, metadata !8651, metadata !2574), !dbg !8652
  store i32 0, i32* %bttb, align 4, !dbg !8652
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !8653
  %muxingapp = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 9, !dbg !8655
  %1 = load i8*, i8** %muxingapp, align 8, !dbg !8655
  %tobool = icmp ne i8* %1, null, !dbg !8653
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8656

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !8657
  %muxingapp1 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %2, i32 0, i32 9, !dbg !8659
  %3 = load i8*, i8** %muxingapp1, align 8, !dbg !8659
  %call = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.91, i32 0, i32 0), i32* %major, i32* %minor, i32* %micro) #11, !dbg !8660
  %cmp = icmp eq i32 %call, 3, !dbg !8661
  br i1 %cmp, label %if.then, label %if.end, !dbg !8662

if.then:                                          ; preds = %land.lhs.true
  %4 = load i32, i32* %major, align 4, !dbg !8663
  %cmp2 = icmp eq i32 %4, 57, !dbg !8664
  br i1 %cmp2, label %land.lhs.true3, label %land.end, !dbg !8665

land.lhs.true3:                                   ; preds = %if.then
  %5 = load i32, i32* %minor, align 4, !dbg !8666
  %cmp4 = icmp sge i32 %5, 36, !dbg !8667
  br i1 %cmp4, label %land.lhs.true5, label %land.end, !dbg !8668

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %6 = load i32, i32* %minor, align 4, !dbg !8669
  %cmp6 = icmp sle i32 %6, 51, !dbg !8671
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !8672

land.rhs:                                         ; preds = %land.lhs.true5
  %7 = load i32, i32* %micro, align 4, !dbg !8673
  %cmp7 = icmp sge i32 %7, 100, !dbg !8675
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true5, %land.lhs.true3, %if.then
  %8 = phi i1 [ false, %land.lhs.true5 ], [ false, %land.lhs.true3 ], [ false, %if.then ], [ %cmp7, %land.rhs ]
  %land.ext = zext i1 %8 to i32, !dbg !8676
  store i32 %land.ext, i32* %bttb, align 4, !dbg !8678
  br label %if.end, !dbg !8679

if.end:                                           ; preds = %land.end, %land.lhs.true, %entry
  %9 = load i64, i64* %field_order.addr, align 8, !dbg !8680
  switch i64 %9, label %sw.default [
    i64 0, label %sw.bb
    i64 2, label %sw.bb8
    i64 1, label %sw.bb9
    i64 6, label %sw.bb10
    i64 14, label %sw.bb11
    i64 9, label %sw.bb13
  ], !dbg !8681

sw.bb:                                            ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !8682
  br label %return, !dbg !8682

sw.bb8:                                           ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8684
  br label %return, !dbg !8684

sw.bb9:                                           ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !8685
  br label %return, !dbg !8685

sw.bb10:                                          ; preds = %if.end
  store i32 3, i32* %retval, align 4, !dbg !8686
  br label %return, !dbg !8686

sw.bb11:                                          ; preds = %if.end
  %10 = load i32, i32* %bttb, align 4, !dbg !8687
  %tobool12 = icmp ne i32 %10, 0, !dbg !8687
  %cond = select i1 %tobool12, i32 4, i32 5, !dbg !8687
  store i32 %cond, i32* %retval, align 4, !dbg !8688
  br label %return, !dbg !8688

sw.bb13:                                          ; preds = %if.end
  %11 = load i32, i32* %bttb, align 4, !dbg !8689
  %tobool14 = icmp ne i32 %11, 0, !dbg !8689
  %cond15 = select i1 %tobool14, i32 5, i32 4, !dbg !8689
  store i32 %cond15, i32* %retval, align 4, !dbg !8690
  br label %return, !dbg !8690

sw.default:                                       ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8691
  br label %return, !dbg !8691

return:                                           ; preds = %sw.default, %sw.bb13, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb
  %12 = load i32, i32* %retval, align 4, !dbg !8692
  ret i32 %12, !dbg !8692
}

; Function Attrs: nounwind uwtable
define internal void @mkv_stereo_mode_display_mul(i32 %stereo_mode, i32* %h_width, i32* %h_height) #0 !dbg !8693 {
entry:
  %stereo_mode.addr = alloca i32, align 4
  %h_width.addr = alloca i32*, align 8
  %h_height.addr = alloca i32*, align 8
  store i32 %stereo_mode, i32* %stereo_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stereo_mode.addr, metadata !8696, metadata !2574), !dbg !8697
  store i32* %h_width, i32** %h_width.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %h_width.addr, metadata !8698, metadata !2574), !dbg !8699
  store i32* %h_height, i32** %h_height.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %h_height.addr, metadata !8700, metadata !2574), !dbg !8701
  %0 = load i32, i32* %stereo_mode.addr, align 4, !dbg !8702
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 14, label %sw.bb
    i32 13, label %sw.bb
    i32 11, label %sw.bb1
    i32 1, label %sw.bb1
    i32 8, label %sw.bb1
    i32 9, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb2
    i32 6, label %sw.bb2
    i32 7, label %sw.bb2
  ], !dbg !8703

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !8704

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry
  %1 = load i32*, i32** %h_width.addr, align 8, !dbg !8706
  store i32 2, i32* %1, align 4, !dbg !8707
  br label %sw.epilog, !dbg !8708

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry
  %2 = load i32*, i32** %h_height.addr, align 8, !dbg !8709
  store i32 2, i32* %2, align 4, !dbg !8710
  br label %sw.epilog, !dbg !8711

sw.epilog:                                        ; preds = %entry, %sw.bb2, %sw.bb1, %sw.bb
  ret void, !dbg !8712
}

declare i32 @av_reduce(i32*, i32*, i64, i64, i64) #4

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #7

declare i32 @ff_mkv_stereo3d_conv(%struct.AVStream*, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @mkv_parse_video_color(%struct.AVStream* %st, %struct.MatroskaTrack* %track) #0 !dbg !8713 {
entry:
  %retval = alloca i32, align 4
  %st.addr = alloca %struct.AVStream*, align 8
  %track.addr = alloca %struct.MatroskaTrack*, align 8
  %color = alloca %struct.MatroskaTrackVideoColor*, align 8
  %mastering_meta = alloca %struct.MatroskaMasteringMeta*, align 8
  %has_mastering_primaries = alloca i32, align 4
  %has_mastering_luminance = alloca i32, align 4
  %size = alloca i64, align 8
  %ret = alloca i32, align 4
  %metadata = alloca %struct.AVContentLightMetadata*, align 8
  %chroma_den = alloca i32, align 4
  %luma_den = alloca i32, align 4
  %metadata100 = alloca %struct.AVMasteringDisplayMetadata*, align 8
  %coerce = alloca %struct.AVRational, align 4
  %coerce120 = alloca %struct.AVRational, align 4
  %coerce129 = alloca %struct.AVRational, align 4
  %coerce138 = alloca %struct.AVRational, align 4
  %coerce147 = alloca %struct.AVRational, align 4
  %coerce156 = alloca %struct.AVRational, align 4
  %coerce163 = alloca %struct.AVRational, align 4
  %coerce171 = alloca %struct.AVRational, align 4
  %coerce181 = alloca %struct.AVRational, align 4
  %coerce187 = alloca %struct.AVRational, align 4
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !8718, metadata !2574), !dbg !8719
  store %struct.MatroskaTrack* %track, %struct.MatroskaTrack** %track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track.addr, metadata !8720, metadata !2574), !dbg !8721
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrackVideoColor** %color, metadata !8722, metadata !2574), !dbg !8755
  %0 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8756
  %video = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %0, i32 0, i32 12, !dbg !8757
  %color1 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video, i32 0, i32 11, !dbg !8758
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %color1, i32 0, i32 1, !dbg !8759
  %1 = load i8*, i8** %elem, align 8, !dbg !8759
  %2 = bitcast i8* %1 to %struct.MatroskaTrackVideoColor*, !dbg !8756
  store %struct.MatroskaTrackVideoColor* %2, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8755
  call void @llvm.dbg.declare(metadata %struct.MatroskaMasteringMeta** %mastering_meta, metadata !8760, metadata !2574), !dbg !8763
  call void @llvm.dbg.declare(metadata i32* %has_mastering_primaries, metadata !8764, metadata !2574), !dbg !8765
  call void @llvm.dbg.declare(metadata i32* %has_mastering_luminance, metadata !8766, metadata !2574), !dbg !8767
  %3 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !8768
  %video2 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %3, i32 0, i32 12, !dbg !8770
  %color3 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video2, i32 0, i32 11, !dbg !8771
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %color3, i32 0, i32 0, !dbg !8772
  %4 = load i32, i32* %nb_elem, align 8, !dbg !8772
  %tobool = icmp ne i32 %4, 0, !dbg !8768
  br i1 %tobool, label %if.end, label %if.then, !dbg !8773

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8774
  br label %return, !dbg !8774

if.end:                                           ; preds = %entry
  %5 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8775
  %mastering_meta4 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %5, i32 0, i32 13, !dbg !8776
  store %struct.MatroskaMasteringMeta* %mastering_meta4, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !8777
  %6 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !8778
  %r_x = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %6, i32 0, i32 0, !dbg !8779
  %7 = load double, double* %r_x, align 8, !dbg !8779
  %cmp = fcmp ogt double %7, 0.000000e+00, !dbg !8780
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !8781

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !8782
  %r_y = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %8, i32 0, i32 1, !dbg !8784
  %9 = load double, double* %r_y, align 8, !dbg !8784
  %cmp5 = fcmp ogt double %9, 0.000000e+00, !dbg !8785
  br i1 %cmp5, label %land.lhs.true6, label %land.end, !dbg !8786

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !8787
  %g_x = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %10, i32 0, i32 2, !dbg !8788
  %11 = load double, double* %g_x, align 8, !dbg !8788
  %cmp7 = fcmp ogt double %11, 0.000000e+00, !dbg !8789
  br i1 %cmp7, label %land.lhs.true8, label %land.end, !dbg !8790

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %12 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !8791
  %g_y = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %12, i32 0, i32 3, !dbg !8792
  %13 = load double, double* %g_y, align 8, !dbg !8792
  %cmp9 = fcmp ogt double %13, 0.000000e+00, !dbg !8793
  br i1 %cmp9, label %land.lhs.true10, label %land.end, !dbg !8794

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %14 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !8795
  %b_x = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %14, i32 0, i32 4, !dbg !8796
  %15 = load double, double* %b_x, align 8, !dbg !8796
  %cmp11 = fcmp ogt double %15, 0.000000e+00, !dbg !8797
  br i1 %cmp11, label %land.lhs.true12, label %land.end, !dbg !8798

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %16 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !8799
  %b_y = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %16, i32 0, i32 5, !dbg !8800
  %17 = load double, double* %b_y, align 8, !dbg !8800
  %cmp13 = fcmp ogt double %17, 0.000000e+00, !dbg !8801
  br i1 %cmp13, label %land.lhs.true14, label %land.end, !dbg !8802

land.lhs.true14:                                  ; preds = %land.lhs.true12
  %18 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !8803
  %white_x = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %18, i32 0, i32 6, !dbg !8804
  %19 = load double, double* %white_x, align 8, !dbg !8804
  %cmp15 = fcmp ogt double %19, 0.000000e+00, !dbg !8805
  br i1 %cmp15, label %land.rhs, label %land.end, !dbg !8806

land.rhs:                                         ; preds = %land.lhs.true14
  %20 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !8807
  %white_y = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %20, i32 0, i32 7, !dbg !8808
  %21 = load double, double* %white_y, align 8, !dbg !8808
  %cmp16 = fcmp ogt double %21, 0.000000e+00, !dbg !8809
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true14, %land.lhs.true12, %land.lhs.true10, %land.lhs.true8, %land.lhs.true6, %land.lhs.true, %if.end
  %22 = phi i1 [ false, %land.lhs.true14 ], [ false, %land.lhs.true12 ], [ false, %land.lhs.true10 ], [ false, %land.lhs.true8 ], [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %if.end ], [ %cmp16, %land.rhs ]
  %land.ext = zext i1 %22 to i32, !dbg !8810
  store i32 %land.ext, i32* %has_mastering_primaries, align 4, !dbg !8812
  %23 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !8813
  %max_luminance = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %23, i32 0, i32 8, !dbg !8814
  %24 = load double, double* %max_luminance, align 8, !dbg !8814
  %cmp17 = fcmp ogt double %24, 0.000000e+00, !dbg !8815
  %conv = zext i1 %cmp17 to i32, !dbg !8815
  store i32 %conv, i32* %has_mastering_luminance, align 4, !dbg !8816
  %25 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8817
  %matrix_coefficients = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %25, i32 0, i32 0, !dbg !8819
  %26 = load i64, i64* %matrix_coefficients, align 8, !dbg !8819
  %cmp18 = icmp ne i64 %26, 3, !dbg !8820
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !8821

if.then20:                                        ; preds = %land.end
  %27 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8822
  %matrix_coefficients21 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %27, i32 0, i32 0, !dbg !8823
  %28 = load i64, i64* %matrix_coefficients21, align 8, !dbg !8823
  %conv22 = trunc i64 %28 to i32, !dbg !8822
  %29 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !8824
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %29, i32 0, i32 19, !dbg !8825
  %30 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !8825
  %color_space = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %30, i32 0, i32 18, !dbg !8826
  store i32 %conv22, i32* %color_space, align 8, !dbg !8827
  br label %if.end23, !dbg !8824

if.end23:                                         ; preds = %if.then20, %land.end
  %31 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8828
  %primaries = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %31, i32 0, i32 10, !dbg !8830
  %32 = load i64, i64* %primaries, align 8, !dbg !8830
  %cmp24 = icmp ne i64 %32, 3, !dbg !8831
  br i1 %cmp24, label %land.lhs.true26, label %if.end34, !dbg !8832

land.lhs.true26:                                  ; preds = %if.end23
  %33 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8833
  %primaries27 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %33, i32 0, i32 10, !dbg !8834
  %34 = load i64, i64* %primaries27, align 8, !dbg !8834
  %cmp28 = icmp ne i64 %34, 0, !dbg !8835
  br i1 %cmp28, label %if.then30, label %if.end34, !dbg !8836

if.then30:                                        ; preds = %land.lhs.true26
  %35 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8837
  %primaries31 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %35, i32 0, i32 10, !dbg !8838
  %36 = load i64, i64* %primaries31, align 8, !dbg !8838
  %conv32 = trunc i64 %36 to i32, !dbg !8837
  %37 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !8839
  %codecpar33 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i32 0, i32 19, !dbg !8840
  %38 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar33, align 8, !dbg !8840
  %color_primaries = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %38, i32 0, i32 16, !dbg !8841
  store i32 %conv32, i32* %color_primaries, align 8, !dbg !8842
  br label %if.end34, !dbg !8839

if.end34:                                         ; preds = %if.then30, %land.lhs.true26, %if.end23
  %39 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8843
  %transfer_characteristics = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %39, i32 0, i32 9, !dbg !8845
  %40 = load i64, i64* %transfer_characteristics, align 8, !dbg !8845
  %cmp35 = icmp ne i64 %40, 3, !dbg !8846
  br i1 %cmp35, label %land.lhs.true37, label %if.end45, !dbg !8847

land.lhs.true37:                                  ; preds = %if.end34
  %41 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8848
  %transfer_characteristics38 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %41, i32 0, i32 9, !dbg !8849
  %42 = load i64, i64* %transfer_characteristics38, align 8, !dbg !8849
  %cmp39 = icmp ne i64 %42, 0, !dbg !8850
  br i1 %cmp39, label %if.then41, label %if.end45, !dbg !8851

if.then41:                                        ; preds = %land.lhs.true37
  %43 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8852
  %transfer_characteristics42 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %43, i32 0, i32 9, !dbg !8853
  %44 = load i64, i64* %transfer_characteristics42, align 8, !dbg !8853
  %conv43 = trunc i64 %44 to i32, !dbg !8852
  %45 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !8854
  %codecpar44 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %45, i32 0, i32 19, !dbg !8855
  %46 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar44, align 8, !dbg !8855
  %color_trc = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %46, i32 0, i32 17, !dbg !8856
  store i32 %conv43, i32* %color_trc, align 4, !dbg !8857
  br label %if.end45, !dbg !8854

if.end45:                                         ; preds = %if.then41, %land.lhs.true37, %if.end34
  %47 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8858
  %range = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %47, i32 0, i32 8, !dbg !8860
  %48 = load i64, i64* %range, align 8, !dbg !8860
  %cmp46 = icmp ne i64 %48, 0, !dbg !8861
  br i1 %cmp46, label %land.lhs.true48, label %if.end56, !dbg !8862

land.lhs.true48:                                  ; preds = %if.end45
  %49 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8863
  %range49 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %49, i32 0, i32 8, !dbg !8864
  %50 = load i64, i64* %range49, align 8, !dbg !8864
  %cmp50 = icmp ule i64 %50, 2, !dbg !8865
  br i1 %cmp50, label %if.then52, label %if.end56, !dbg !8866

if.then52:                                        ; preds = %land.lhs.true48
  %51 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8867
  %range53 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %51, i32 0, i32 8, !dbg !8868
  %52 = load i64, i64* %range53, align 8, !dbg !8868
  %conv54 = trunc i64 %52 to i32, !dbg !8867
  %53 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !8869
  %codecpar55 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %53, i32 0, i32 19, !dbg !8870
  %54 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar55, align 8, !dbg !8870
  %color_range = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %54, i32 0, i32 15, !dbg !8871
  store i32 %conv54, i32* %color_range, align 4, !dbg !8872
  br label %if.end56, !dbg !8869

if.end56:                                         ; preds = %if.then52, %land.lhs.true48, %if.end45
  %55 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8873
  %chroma_siting_horz = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %55, i32 0, i32 6, !dbg !8875
  %56 = load i64, i64* %chroma_siting_horz, align 8, !dbg !8875
  %cmp57 = icmp ne i64 %56, 0, !dbg !8876
  br i1 %cmp57, label %land.lhs.true59, label %if.end78, !dbg !8877

land.lhs.true59:                                  ; preds = %if.end56
  %57 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8878
  %chroma_siting_vert = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %57, i32 0, i32 7, !dbg !8879
  %58 = load i64, i64* %chroma_siting_vert, align 8, !dbg !8879
  %cmp60 = icmp ne i64 %58, 0, !dbg !8880
  br i1 %cmp60, label %land.lhs.true62, label %if.end78, !dbg !8881

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %59 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8882
  %chroma_siting_horz63 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %59, i32 0, i32 6, !dbg !8883
  %60 = load i64, i64* %chroma_siting_horz63, align 8, !dbg !8883
  %cmp64 = icmp ult i64 %60, 3, !dbg !8884
  br i1 %cmp64, label %land.lhs.true66, label %if.end78, !dbg !8885

land.lhs.true66:                                  ; preds = %land.lhs.true62
  %61 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8886
  %chroma_siting_vert67 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %61, i32 0, i32 7, !dbg !8887
  %62 = load i64, i64* %chroma_siting_vert67, align 8, !dbg !8887
  %cmp68 = icmp ult i64 %62, 3, !dbg !8888
  br i1 %cmp68, label %if.then70, label %if.end78, !dbg !8889

if.then70:                                        ; preds = %land.lhs.true66
  %63 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8890
  %chroma_siting_horz71 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %63, i32 0, i32 6, !dbg !8892
  %64 = load i64, i64* %chroma_siting_horz71, align 8, !dbg !8892
  %sub = sub i64 %64, 1, !dbg !8893
  %shl = shl i64 %sub, 7, !dbg !8894
  %conv72 = trunc i64 %shl to i32, !dbg !8895
  %65 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8896
  %chroma_siting_vert73 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %65, i32 0, i32 7, !dbg !8897
  %66 = load i64, i64* %chroma_siting_vert73, align 8, !dbg !8897
  %sub74 = sub i64 %66, 1, !dbg !8898
  %shl75 = shl i64 %sub74, 7, !dbg !8899
  %conv76 = trunc i64 %shl75 to i32, !dbg !8900
  %call = call i32 @avcodec_chroma_pos_to_enum(i32 %conv72, i32 %conv76), !dbg !8901
  %67 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !8902
  %codecpar77 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %67, i32 0, i32 19, !dbg !8903
  %68 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar77, align 8, !dbg !8903
  %chroma_location = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %68, i32 0, i32 19, !dbg !8904
  store i32 %call, i32* %chroma_location, align 4, !dbg !8905
  br label %if.end78, !dbg !8906

if.end78:                                         ; preds = %if.then70, %land.lhs.true66, %land.lhs.true62, %land.lhs.true59, %if.end56
  %69 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8907
  %max_cll = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %69, i32 0, i32 11, !dbg !8909
  %70 = load i64, i64* %max_cll, align 8, !dbg !8909
  %tobool79 = icmp ne i64 %70, 0, !dbg !8907
  br i1 %tobool79, label %land.lhs.true80, label %if.end96, !dbg !8910

land.lhs.true80:                                  ; preds = %if.end78
  %71 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8911
  %max_fall = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %71, i32 0, i32 12, !dbg !8913
  %72 = load i64, i64* %max_fall, align 8, !dbg !8913
  %tobool81 = icmp ne i64 %72, 0, !dbg !8911
  br i1 %tobool81, label %if.then82, label %if.end96, !dbg !8914

if.then82:                                        ; preds = %land.lhs.true80
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8915, metadata !2574), !dbg !8917
  store i64 0, i64* %size, align 8, !dbg !8917
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8918, metadata !2574), !dbg !8919
  call void @llvm.dbg.declare(metadata %struct.AVContentLightMetadata** %metadata, metadata !8920, metadata !2574), !dbg !8927
  %call83 = call %struct.AVContentLightMetadata* @av_content_light_metadata_alloc(i64* %size), !dbg !8928
  store %struct.AVContentLightMetadata* %call83, %struct.AVContentLightMetadata** %metadata, align 8, !dbg !8927
  %73 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %metadata, align 8, !dbg !8929
  %tobool84 = icmp ne %struct.AVContentLightMetadata* %73, null, !dbg !8929
  br i1 %tobool84, label %if.end86, label %if.then85, !dbg !8931

if.then85:                                        ; preds = %if.then82
  store i32 -12, i32* %retval, align 4, !dbg !8932
  br label %return, !dbg !8932

if.end86:                                         ; preds = %if.then82
  %74 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !8933
  %75 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %metadata, align 8, !dbg !8934
  %76 = bitcast %struct.AVContentLightMetadata* %75 to i8*, !dbg !8935
  %77 = load i64, i64* %size, align 8, !dbg !8936
  %call87 = call i32 @av_stream_add_side_data(%struct.AVStream* %74, i32 22, i8* %76, i64 %77), !dbg !8937
  store i32 %call87, i32* %ret, align 4, !dbg !8938
  %78 = load i32, i32* %ret, align 4, !dbg !8939
  %cmp88 = icmp slt i32 %78, 0, !dbg !8941
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !8942

if.then90:                                        ; preds = %if.end86
  %79 = bitcast %struct.AVContentLightMetadata** %metadata to i8*, !dbg !8943
  call void @av_freep(i8* %79), !dbg !8945
  %80 = load i32, i32* %ret, align 4, !dbg !8946
  store i32 %80, i32* %retval, align 4, !dbg !8947
  br label %return, !dbg !8947

if.end91:                                         ; preds = %if.end86
  %81 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8948
  %max_cll92 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %81, i32 0, i32 11, !dbg !8949
  %82 = load i64, i64* %max_cll92, align 8, !dbg !8949
  %conv93 = trunc i64 %82 to i32, !dbg !8948
  %83 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %metadata, align 8, !dbg !8950
  %MaxCLL = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %83, i32 0, i32 0, !dbg !8951
  store i32 %conv93, i32* %MaxCLL, align 4, !dbg !8952
  %84 = load %struct.MatroskaTrackVideoColor*, %struct.MatroskaTrackVideoColor** %color, align 8, !dbg !8953
  %max_fall94 = getelementptr inbounds %struct.MatroskaTrackVideoColor, %struct.MatroskaTrackVideoColor* %84, i32 0, i32 12, !dbg !8954
  %85 = load i64, i64* %max_fall94, align 8, !dbg !8954
  %conv95 = trunc i64 %85 to i32, !dbg !8953
  %86 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %metadata, align 8, !dbg !8955
  %MaxFALL = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %86, i32 0, i32 1, !dbg !8956
  store i32 %conv95, i32* %MaxFALL, align 4, !dbg !8957
  br label %if.end96, !dbg !8958

if.end96:                                         ; preds = %if.end91, %land.lhs.true80, %if.end78
  %87 = load i32, i32* %has_mastering_primaries, align 4, !dbg !8959
  %tobool97 = icmp ne i32 %87, 0, !dbg !8959
  br i1 %tobool97, label %if.then99, label %lor.lhs.false, !dbg !8961

lor.lhs.false:                                    ; preds = %if.end96
  %88 = load i32, i32* %has_mastering_luminance, align 4, !dbg !8962
  %tobool98 = icmp ne i32 %88, 0, !dbg !8962
  br i1 %tobool98, label %if.then99, label %if.end189, !dbg !8964

if.then99:                                        ; preds = %lor.lhs.false, %if.end96
  call void @llvm.dbg.declare(metadata i32* %chroma_den, metadata !8965, metadata !2574), !dbg !8967
  store i32 50000, i32* %chroma_den, align 4, !dbg !8967
  call void @llvm.dbg.declare(metadata i32* %luma_den, metadata !8968, metadata !2574), !dbg !8969
  store i32 10000, i32* %luma_den, align 4, !dbg !8969
  call void @llvm.dbg.declare(metadata %struct.AVMasteringDisplayMetadata** %metadata100, metadata !8970, metadata !2574), !dbg !8971
  %89 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !8972
  %call101 = call i8* @av_stream_new_side_data(%struct.AVStream* %89, i32 20, i32 88), !dbg !8973
  %90 = bitcast i8* %call101 to %struct.AVMasteringDisplayMetadata*, !dbg !8974
  store %struct.AVMasteringDisplayMetadata* %90, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !8971
  %91 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !8975
  %tobool102 = icmp ne %struct.AVMasteringDisplayMetadata* %91, null, !dbg !8975
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !8977

if.then103:                                       ; preds = %if.then99
  store i32 -12, i32* %retval, align 4, !dbg !8978
  br label %return, !dbg !8978

if.end104:                                        ; preds = %if.then99
  %92 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !8980
  %93 = bitcast %struct.AVMasteringDisplayMetadata* %92 to i8*, !dbg !8981
  call void @llvm.memset.p0i8.i64(i8* %93, i8 0, i64 88, i32 4, i1 false), !dbg !8981
  %94 = load i32, i32* %has_mastering_primaries, align 4, !dbg !8982
  %tobool105 = icmp ne i32 %94, 0, !dbg !8982
  br i1 %tobool105, label %if.then106, label %if.end172, !dbg !8984

if.then106:                                       ; preds = %if.end104
  %95 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !8985
  %display_primaries = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %95, i32 0, i32 0, !dbg !8987
  %arrayidx = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries, i64 0, i64 0, !dbg !8985
  %arrayidx107 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx, i64 0, i64 0, !dbg !8985
  %96 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !8988
  %r_x108 = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %96, i32 0, i32 0, !dbg !8989
  %97 = load double, double* %r_x108, align 8, !dbg !8989
  %mul = fmul double %97, 5.000000e+04, !dbg !8990
  %call109 = call double @round(double %mul) #1, !dbg !8991
  %conv110 = fptosi double %call109 to i32, !dbg !8991
  %call111 = call i64 @av_make_q(i32 %conv110, i32 50000), !dbg !8992
  %98 = bitcast %struct.AVRational* %coerce to i64*, !dbg !8992
  store i64 %call111, i64* %98, align 4, !dbg !8992
  %99 = bitcast %struct.AVRational* %arrayidx107 to i8*, !dbg !8992
  %100 = bitcast %struct.AVRational* %coerce to i8*, !dbg !8992
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 4, i1 false), !dbg !8993
  %101 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !8995
  %display_primaries112 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %101, i32 0, i32 0, !dbg !8996
  %arrayidx113 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries112, i64 0, i64 0, !dbg !8995
  %arrayidx114 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx113, i64 0, i64 1, !dbg !8995
  %102 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !8997
  %r_y115 = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %102, i32 0, i32 1, !dbg !8998
  %103 = load double, double* %r_y115, align 8, !dbg !8998
  %mul116 = fmul double %103, 5.000000e+04, !dbg !8999
  %call117 = call double @round(double %mul116) #1, !dbg !9000
  %conv118 = fptosi double %call117 to i32, !dbg !9000
  %call119 = call i64 @av_make_q(i32 %conv118, i32 50000), !dbg !9001
  %104 = bitcast %struct.AVRational* %coerce120 to i64*, !dbg !9001
  store i64 %call119, i64* %104, align 4, !dbg !9001
  %105 = bitcast %struct.AVRational* %arrayidx114 to i8*, !dbg !9001
  %106 = bitcast %struct.AVRational* %coerce120 to i8*, !dbg !9001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %106, i64 8, i32 4, i1 false), !dbg !9002
  %107 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !9003
  %display_primaries121 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %107, i32 0, i32 0, !dbg !9004
  %arrayidx122 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries121, i64 0, i64 1, !dbg !9003
  %arrayidx123 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx122, i64 0, i64 0, !dbg !9003
  %108 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !9005
  %g_x124 = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %108, i32 0, i32 2, !dbg !9006
  %109 = load double, double* %g_x124, align 8, !dbg !9006
  %mul125 = fmul double %109, 5.000000e+04, !dbg !9007
  %call126 = call double @round(double %mul125) #1, !dbg !9008
  %conv127 = fptosi double %call126 to i32, !dbg !9008
  %call128 = call i64 @av_make_q(i32 %conv127, i32 50000), !dbg !9009
  %110 = bitcast %struct.AVRational* %coerce129 to i64*, !dbg !9009
  store i64 %call128, i64* %110, align 4, !dbg !9009
  %111 = bitcast %struct.AVRational* %arrayidx123 to i8*, !dbg !9009
  %112 = bitcast %struct.AVRational* %coerce129 to i8*, !dbg !9009
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %112, i64 8, i32 4, i1 false), !dbg !9010
  %113 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !9011
  %display_primaries130 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %113, i32 0, i32 0, !dbg !9012
  %arrayidx131 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries130, i64 0, i64 1, !dbg !9011
  %arrayidx132 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx131, i64 0, i64 1, !dbg !9011
  %114 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !9013
  %g_y133 = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %114, i32 0, i32 3, !dbg !9014
  %115 = load double, double* %g_y133, align 8, !dbg !9014
  %mul134 = fmul double %115, 5.000000e+04, !dbg !9015
  %call135 = call double @round(double %mul134) #1, !dbg !9016
  %conv136 = fptosi double %call135 to i32, !dbg !9016
  %call137 = call i64 @av_make_q(i32 %conv136, i32 50000), !dbg !9017
  %116 = bitcast %struct.AVRational* %coerce138 to i64*, !dbg !9017
  store i64 %call137, i64* %116, align 4, !dbg !9017
  %117 = bitcast %struct.AVRational* %arrayidx132 to i8*, !dbg !9017
  %118 = bitcast %struct.AVRational* %coerce138 to i8*, !dbg !9017
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %117, i8* %118, i64 8, i32 4, i1 false), !dbg !9018
  %119 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !9019
  %display_primaries139 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %119, i32 0, i32 0, !dbg !9020
  %arrayidx140 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries139, i64 0, i64 2, !dbg !9019
  %arrayidx141 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx140, i64 0, i64 0, !dbg !9019
  %120 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !9021
  %b_x142 = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %120, i32 0, i32 4, !dbg !9022
  %121 = load double, double* %b_x142, align 8, !dbg !9022
  %mul143 = fmul double %121, 5.000000e+04, !dbg !9023
  %call144 = call double @round(double %mul143) #1, !dbg !9024
  %conv145 = fptosi double %call144 to i32, !dbg !9024
  %call146 = call i64 @av_make_q(i32 %conv145, i32 50000), !dbg !9025
  %122 = bitcast %struct.AVRational* %coerce147 to i64*, !dbg !9025
  store i64 %call146, i64* %122, align 4, !dbg !9025
  %123 = bitcast %struct.AVRational* %arrayidx141 to i8*, !dbg !9025
  %124 = bitcast %struct.AVRational* %coerce147 to i8*, !dbg !9025
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %123, i8* %124, i64 8, i32 4, i1 false), !dbg !9026
  %125 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !9027
  %display_primaries148 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %125, i32 0, i32 0, !dbg !9028
  %arrayidx149 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries148, i64 0, i64 2, !dbg !9027
  %arrayidx150 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx149, i64 0, i64 1, !dbg !9027
  %126 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !9029
  %b_y151 = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %126, i32 0, i32 5, !dbg !9030
  %127 = load double, double* %b_y151, align 8, !dbg !9030
  %mul152 = fmul double %127, 5.000000e+04, !dbg !9031
  %call153 = call double @round(double %mul152) #1, !dbg !9032
  %conv154 = fptosi double %call153 to i32, !dbg !9032
  %call155 = call i64 @av_make_q(i32 %conv154, i32 50000), !dbg !9033
  %128 = bitcast %struct.AVRational* %coerce156 to i64*, !dbg !9033
  store i64 %call155, i64* %128, align 4, !dbg !9033
  %129 = bitcast %struct.AVRational* %arrayidx150 to i8*, !dbg !9033
  %130 = bitcast %struct.AVRational* %coerce156 to i8*, !dbg !9033
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %129, i8* %130, i64 8, i32 4, i1 false), !dbg !9034
  %131 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !9035
  %white_point = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %131, i32 0, i32 1, !dbg !9036
  %arrayidx157 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %white_point, i64 0, i64 0, !dbg !9035
  %132 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !9037
  %white_x158 = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %132, i32 0, i32 6, !dbg !9038
  %133 = load double, double* %white_x158, align 8, !dbg !9038
  %mul159 = fmul double %133, 5.000000e+04, !dbg !9039
  %call160 = call double @round(double %mul159) #1, !dbg !9040
  %conv161 = fptosi double %call160 to i32, !dbg !9040
  %call162 = call i64 @av_make_q(i32 %conv161, i32 50000), !dbg !9041
  %134 = bitcast %struct.AVRational* %coerce163 to i64*, !dbg !9041
  store i64 %call162, i64* %134, align 4, !dbg !9041
  %135 = bitcast %struct.AVRational* %arrayidx157 to i8*, !dbg !9041
  %136 = bitcast %struct.AVRational* %coerce163 to i8*, !dbg !9041
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %136, i64 8, i32 4, i1 false), !dbg !9042
  %137 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !9043
  %white_point164 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %137, i32 0, i32 1, !dbg !9044
  %arrayidx165 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %white_point164, i64 0, i64 1, !dbg !9043
  %138 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !9045
  %white_y166 = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %138, i32 0, i32 7, !dbg !9046
  %139 = load double, double* %white_y166, align 8, !dbg !9046
  %mul167 = fmul double %139, 5.000000e+04, !dbg !9047
  %call168 = call double @round(double %mul167) #1, !dbg !9048
  %conv169 = fptosi double %call168 to i32, !dbg !9048
  %call170 = call i64 @av_make_q(i32 %conv169, i32 50000), !dbg !9049
  %140 = bitcast %struct.AVRational* %coerce171 to i64*, !dbg !9049
  store i64 %call170, i64* %140, align 4, !dbg !9049
  %141 = bitcast %struct.AVRational* %arrayidx165 to i8*, !dbg !9049
  %142 = bitcast %struct.AVRational* %coerce171 to i8*, !dbg !9049
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 8, i32 4, i1 false), !dbg !9050
  %143 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !9051
  %has_primaries = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %143, i32 0, i32 4, !dbg !9052
  store i32 1, i32* %has_primaries, align 4, !dbg !9053
  br label %if.end172, !dbg !9054

if.end172:                                        ; preds = %if.then106, %if.end104
  %144 = load i32, i32* %has_mastering_luminance, align 4, !dbg !9055
  %tobool173 = icmp ne i32 %144, 0, !dbg !9055
  br i1 %tobool173, label %if.then174, label %if.end188, !dbg !9057

if.then174:                                       ; preds = %if.end172
  %145 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !9058
  %max_luminance175 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %145, i32 0, i32 3, !dbg !9060
  %146 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !9061
  %max_luminance176 = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %146, i32 0, i32 8, !dbg !9062
  %147 = load double, double* %max_luminance176, align 8, !dbg !9062
  %mul177 = fmul double %147, 1.000000e+04, !dbg !9063
  %call178 = call double @round(double %mul177) #1, !dbg !9064
  %conv179 = fptosi double %call178 to i32, !dbg !9064
  %call180 = call i64 @av_make_q(i32 %conv179, i32 10000), !dbg !9065
  %148 = bitcast %struct.AVRational* %coerce181 to i64*, !dbg !9065
  store i64 %call180, i64* %148, align 4, !dbg !9065
  %149 = bitcast %struct.AVRational* %max_luminance175 to i8*, !dbg !9065
  %150 = bitcast %struct.AVRational* %coerce181 to i8*, !dbg !9065
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %150, i64 8, i32 4, i1 false), !dbg !9066
  %151 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !9068
  %min_luminance = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %151, i32 0, i32 2, !dbg !9069
  %152 = load %struct.MatroskaMasteringMeta*, %struct.MatroskaMasteringMeta** %mastering_meta, align 8, !dbg !9070
  %min_luminance182 = getelementptr inbounds %struct.MatroskaMasteringMeta, %struct.MatroskaMasteringMeta* %152, i32 0, i32 9, !dbg !9071
  %153 = load double, double* %min_luminance182, align 8, !dbg !9071
  %mul183 = fmul double %153, 1.000000e+04, !dbg !9072
  %call184 = call double @round(double %mul183) #1, !dbg !9073
  %conv185 = fptosi double %call184 to i32, !dbg !9073
  %call186 = call i64 @av_make_q(i32 %conv185, i32 10000), !dbg !9074
  %154 = bitcast %struct.AVRational* %coerce187 to i64*, !dbg !9074
  store i64 %call186, i64* %154, align 4, !dbg !9074
  %155 = bitcast %struct.AVRational* %min_luminance to i8*, !dbg !9074
  %156 = bitcast %struct.AVRational* %coerce187 to i8*, !dbg !9074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %155, i8* %156, i64 8, i32 4, i1 false), !dbg !9075
  %157 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata100, align 8, !dbg !9076
  %has_luminance = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %157, i32 0, i32 5, !dbg !9077
  store i32 1, i32* %has_luminance, align 4, !dbg !9078
  br label %if.end188, !dbg !9079

if.end188:                                        ; preds = %if.then174, %if.end172
  br label %if.end189, !dbg !9080

if.end189:                                        ; preds = %if.end188, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !9081
  br label %return, !dbg !9081

return:                                           ; preds = %if.end189, %if.then103, %if.then90, %if.then85, %if.then
  %158 = load i32, i32* %retval, align 4, !dbg !9082
  ret i32 %158, !dbg !9082
}

; Function Attrs: nounwind uwtable
define internal i32 @mkv_parse_video_projection(%struct.AVStream* %st, %struct.MatroskaTrack* %track) #0 !dbg !9083 {
entry:
  %x.addr.i.i.i.i255 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i255, metadata !2569, metadata !2574), !dbg !9084
  %b.addr.i.i.i256 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i256, metadata !9105, metadata !2574), !dbg !9106
  %g.addr.i.i257 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i257, metadata !9107, metadata !2574), !dbg !9108
  %retval.i258 = alloca i32, align 4
  %g.addr.i259 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i259, metadata !9109, metadata !2574), !dbg !9110
  %x.addr.i.i.i.i221 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i221, metadata !2569, metadata !2574), !dbg !9111
  %b.addr.i.i.i222 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i222, metadata !9105, metadata !2574), !dbg !9116
  %g.addr.i.i223 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i223, metadata !9107, metadata !2574), !dbg !9117
  %retval.i224 = alloca i32, align 4
  %g.addr.i225 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i225, metadata !9109, metadata !2574), !dbg !9118
  %x.addr.i.i.i.i187 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i187, metadata !2569, metadata !2574), !dbg !9119
  %b.addr.i.i.i188 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i188, metadata !9105, metadata !2574), !dbg !9124
  %g.addr.i.i189 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i189, metadata !9107, metadata !2574), !dbg !9125
  %retval.i190 = alloca i32, align 4
  %g.addr.i191 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i191, metadata !9109, metadata !2574), !dbg !9126
  %x.addr.i.i.i.i153 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i153, metadata !2569, metadata !2574), !dbg !9127
  %b.addr.i.i.i154 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i154, metadata !9105, metadata !2574), !dbg !9132
  %g.addr.i.i155 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i155, metadata !9107, metadata !2574), !dbg !9133
  %retval.i156 = alloca i32, align 4
  %g.addr.i157 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i157, metadata !9109, metadata !2574), !dbg !9134
  %x.addr.i.i.i.i119 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i119, metadata !2569, metadata !2574), !dbg !9135
  %b.addr.i.i.i120 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i120, metadata !9105, metadata !2574), !dbg !9143
  %g.addr.i.i121 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i121, metadata !9107, metadata !2574), !dbg !9144
  %retval.i122 = alloca i32, align 4
  %g.addr.i123 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i123, metadata !9109, metadata !2574), !dbg !9145
  %x.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i, metadata !2569, metadata !2574), !dbg !9146
  %b.addr.i.i.i102 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i102, metadata !9105, metadata !2574), !dbg !9151
  %g.addr.i.i103 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i103, metadata !9107, metadata !2574), !dbg !9152
  %retval.i104 = alloca i32, align 4
  %g.addr.i105 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i105, metadata !9109, metadata !2574), !dbg !9153
  %g.addr.i94 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i94, metadata !9154, metadata !2574), !dbg !9158
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !9160, metadata !2574), !dbg !9161
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !8448, metadata !2574), !dbg !9162
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !9170, metadata !2574), !dbg !9171
  %retval.i = alloca i32, align 4
  %g.addr.i89 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i89, metadata !9172, metadata !2574), !dbg !9173
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !9174, metadata !2574), !dbg !9178
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !9180, metadata !2574), !dbg !9181
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !9182, metadata !2574), !dbg !9183
  %retval = alloca i32, align 4
  %st.addr = alloca %struct.AVStream*, align 8
  %track.addr = alloca %struct.MatroskaTrack*, align 8
  %spherical = alloca %struct.AVSphericalMapping*, align 8
  %projection = alloca i32, align 4
  %spherical_size = alloca i64, align 8
  %l = alloca i32, align 4
  %t = alloca i32, align 4
  %r = alloca i32, align 4
  %b = alloca i32, align 4
  %padding = alloca i32, align 4
  %ret = alloca i32, align 4
  %gb = alloca %struct.GetByteContext, align 8
  %layout = alloca i32, align 4
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !9184, metadata !2574), !dbg !9185
  store %struct.MatroskaTrack* %track, %struct.MatroskaTrack** %track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track.addr, metadata !9186, metadata !2574), !dbg !9187
  call void @llvm.dbg.declare(metadata %struct.AVSphericalMapping** %spherical, metadata !9188, metadata !2574), !dbg !9202
  call void @llvm.dbg.declare(metadata i32* %projection, metadata !9203, metadata !2574), !dbg !9204
  call void @llvm.dbg.declare(metadata i64* %spherical_size, metadata !9205, metadata !2574), !dbg !9206
  call void @llvm.dbg.declare(metadata i32* %l, metadata !9207, metadata !2574), !dbg !9208
  store i32 0, i32* %l, align 4, !dbg !9208
  call void @llvm.dbg.declare(metadata i32* %t, metadata !9209, metadata !2574), !dbg !9210
  store i32 0, i32* %t, align 4, !dbg !9210
  call void @llvm.dbg.declare(metadata i32* %r, metadata !9211, metadata !2574), !dbg !9212
  store i32 0, i32* %r, align 4, !dbg !9212
  call void @llvm.dbg.declare(metadata i32* %b, metadata !9213, metadata !2574), !dbg !9214
  store i32 0, i32* %b, align 4, !dbg !9214
  call void @llvm.dbg.declare(metadata i32* %padding, metadata !9215, metadata !2574), !dbg !9216
  store i32 0, i32* %padding, align 4, !dbg !9216
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9217, metadata !2574), !dbg !9218
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gb, metadata !9219, metadata !2574), !dbg !9220
  %0 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !9221
  %video = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %0, i32 0, i32 12, !dbg !9222
  %projection1 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video, i32 0, i32 12, !dbg !9223
  %private = getelementptr inbounds %struct.MatroskaTrackVideoProjection, %struct.MatroskaTrackVideoProjection* %projection1, i32 0, i32 1, !dbg !9224
  %data = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %private, i32 0, i32 2, !dbg !9225
  %1 = load i8*, i8** %data, align 8, !dbg !9225
  %2 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !9226
  %video2 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %2, i32 0, i32 12, !dbg !9227
  %projection3 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video2, i32 0, i32 12, !dbg !9228
  %private4 = getelementptr inbounds %struct.MatroskaTrackVideoProjection, %struct.MatroskaTrackVideoProjection* %projection3, i32 0, i32 1, !dbg !9229
  %size = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %private4, i32 0, i32 0, !dbg !9230
  %3 = load i32, i32* %size, align 8, !dbg !9230
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i, align 8, !dbg !9231
  store i8* %1, i8** %buf.addr.i, align 8, !dbg !9231
  store i32 %3, i32* %buf_size.addr.i, align 4, !dbg !9231
  %4 = load i32, i32* %buf_size.addr.i, align 4, !dbg !9232
  %cmp.i = icmp sge i32 %4, 0, !dbg !9236
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !9237

if.then.i:                                        ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.99, i32 0, i32 0), i32 137) #11, !dbg !9238
  call void @abort() #12, !dbg !9241
  unreachable, !dbg !9243

bytestream2_init.exit:                            ; preds = %entry
  %5 = load i8*, i8** %buf.addr.i, align 8, !dbg !9244
  %6 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !9245
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %6, i32 0, i32 0, !dbg !9246
  store i8* %5, i8** %buffer.i, align 8, !dbg !9247
  %7 = load i8*, i8** %buf.addr.i, align 8, !dbg !9248
  %8 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !9249
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %8, i32 0, i32 2, !dbg !9250
  store i8* %7, i8** %buffer_start.i, align 8, !dbg !9251
  %9 = load i8*, i8** %buf.addr.i, align 8, !dbg !9252
  %10 = load i32, i32* %buf_size.addr.i, align 4, !dbg !9253
  %idx.ext.i = sext i32 %10 to i64, !dbg !9254
  %add.ptr.i = getelementptr inbounds i8, i8* %9, i64 %idx.ext.i, !dbg !9254
  %11 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !9255
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %11, i32 0, i32 1, !dbg !9256
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !9257
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i89, align 8, !dbg !9258
  %12 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i89, align 8, !dbg !9259
  %buffer_end.i90 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %12, i32 0, i32 1, !dbg !9261
  %13 = load i8*, i8** %buffer_end.i90, align 8, !dbg !9261
  %14 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i89, align 8, !dbg !9262
  %buffer.i91 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %14, i32 0, i32 0, !dbg !9263
  %15 = load i8*, i8** %buffer.i91, align 8, !dbg !9263
  %sub.ptr.lhs.cast.i = ptrtoint i8* %13 to i64, !dbg !9264
  %sub.ptr.rhs.cast.i = ptrtoint i8* %15 to i64, !dbg !9264
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !9264
  %cmp.i92 = icmp slt i64 %sub.ptr.sub.i, 1, !dbg !9265
  br i1 %cmp.i92, label %if.then.i93, label %if.end.i, !dbg !9266

if.then.i93:                                      ; preds = %bytestream2_init.exit
  %16 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i89, align 8, !dbg !9267
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %16, i32 0, i32 1, !dbg !9270
  %17 = load i8*, i8** %buffer_end1.i, align 8, !dbg !9270
  %18 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i89, align 8, !dbg !9271
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %18, i32 0, i32 0, !dbg !9272
  store i8* %17, i8** %buffer2.i, align 8, !dbg !9273
  store i32 0, i32* %retval.i, align 4, !dbg !9274
  br label %bytestream2_get_byte.exit, !dbg !9274

if.end.i:                                         ; preds = %bytestream2_init.exit
  %19 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i89, align 8, !dbg !9275
  store %struct.GetByteContext* %19, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !9276
  %20 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !9277
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %20, i32 0, i32 0, !dbg !9278
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !9279
  %21 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !9280
  %22 = load i8*, i8** %21, align 8, !dbg !9281
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %22, i64 1, !dbg !9281
  store i8* %add.ptr.i.i.i, i8** %21, align 8, !dbg !9281
  %23 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !9282
  %24 = load i8*, i8** %23, align 8, !dbg !9283
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %24, i64 -1, !dbg !9284
  %25 = load i8, i8* %add.ptr1.i.i.i, align 1, !dbg !9285
  %conv.i.i.i = zext i8 %25 to i32, !dbg !9286
  store i32 %conv.i.i.i, i32* %retval.i, align 4, !dbg !9287
  br label %bytestream2_get_byte.exit, !dbg !9287

bytestream2_get_byte.exit:                        ; preds = %if.then.i93, %if.end.i
  %26 = load i32, i32* %retval.i, align 4, !dbg !9288
  %cmp = icmp ne i32 %26, 0, !dbg !9290
  br i1 %cmp, label %if.then, label %if.end, !dbg !9291

if.then:                                          ; preds = %bytestream2_get_byte.exit
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.92, i32 0, i32 0)), !dbg !9292
  store i32 0, i32* %retval, align 4, !dbg !9294
  br label %return, !dbg !9294

if.end:                                           ; preds = %bytestream2_get_byte.exit
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i94, align 8, !dbg !9295
  store i32 3, i32* %size.addr.i, align 4, !dbg !9295
  %27 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i94, align 8, !dbg !9296
  %buffer_end.i95 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %27, i32 0, i32 1, !dbg !9297
  %28 = load i8*, i8** %buffer_end.i95, align 8, !dbg !9297
  %29 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i94, align 8, !dbg !9298
  %buffer.i96 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %29, i32 0, i32 0, !dbg !9299
  %30 = load i8*, i8** %buffer.i96, align 8, !dbg !9299
  %sub.ptr.lhs.cast.i97 = ptrtoint i8* %28 to i64, !dbg !9300
  %sub.ptr.rhs.cast.i98 = ptrtoint i8* %30 to i64, !dbg !9300
  %sub.ptr.sub.i99 = sub i64 %sub.ptr.lhs.cast.i97, %sub.ptr.rhs.cast.i98, !dbg !9300
  %31 = load i32, i32* %size.addr.i, align 4, !dbg !9301
  %conv.i = zext i32 %31 to i64, !dbg !9302
  %cmp.i100 = icmp sgt i64 %sub.ptr.sub.i99, %conv.i, !dbg !9303
  br i1 %cmp.i100, label %cond.true.i, label %cond.false.i, !dbg !9304

cond.true.i:                                      ; preds = %if.end
  %32 = load i32, i32* %size.addr.i, align 4, !dbg !9305
  %conv2.i = zext i32 %32 to i64, !dbg !9307
  br label %bytestream2_skip.exit, !dbg !9308

cond.false.i:                                     ; preds = %if.end
  %33 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i94, align 8, !dbg !9309
  %buffer_end3.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %33, i32 0, i32 1, !dbg !9311
  %34 = load i8*, i8** %buffer_end3.i, align 8, !dbg !9311
  %35 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i94, align 8, !dbg !9312
  %buffer4.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %35, i32 0, i32 0, !dbg !9313
  %36 = load i8*, i8** %buffer4.i, align 8, !dbg !9313
  %sub.ptr.lhs.cast5.i = ptrtoint i8* %34 to i64, !dbg !9314
  %sub.ptr.rhs.cast6.i = ptrtoint i8* %36 to i64, !dbg !9314
  %sub.ptr.sub7.i = sub i64 %sub.ptr.lhs.cast5.i, %sub.ptr.rhs.cast6.i, !dbg !9314
  br label %bytestream2_skip.exit, !dbg !9315

bytestream2_skip.exit:                            ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv2.i, %cond.true.i ], [ %sub.ptr.sub7.i, %cond.false.i ], !dbg !9316
  %37 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i94, align 8, !dbg !9318
  %buffer8.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %37, i32 0, i32 0, !dbg !9319
  %38 = load i8*, i8** %buffer8.i, align 8, !dbg !9320
  %add.ptr.i101 = getelementptr inbounds i8, i8* %38, i64 %cond.i, !dbg !9320
  store i8* %add.ptr.i101, i8** %buffer8.i, align 8, !dbg !9320
  %39 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !9321
  %video5 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %39, i32 0, i32 12, !dbg !9322
  %projection6 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video5, i32 0, i32 12, !dbg !9323
  %type = getelementptr inbounds %struct.MatroskaTrackVideoProjection, %struct.MatroskaTrackVideoProjection* %projection6, i32 0, i32 0, !dbg !9324
  %40 = load i64, i64* %type, align 8, !dbg !9324
  switch i64 %40, label %sw.default [
    i64 1, label %sw.bb
    i64 2, label %sw.bb39
    i64 0, label %sw.bb61
  ], !dbg !9325

sw.bb:                                            ; preds = %bytestream2_skip.exit
  %41 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !9326
  %video7 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %41, i32 0, i32 12, !dbg !9327
  %projection8 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video7, i32 0, i32 12, !dbg !9328
  %private9 = getelementptr inbounds %struct.MatroskaTrackVideoProjection, %struct.MatroskaTrackVideoProjection* %projection8, i32 0, i32 1, !dbg !9329
  %size10 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %private9, i32 0, i32 0, !dbg !9330
  %42 = load i32, i32* %size10, align 8, !dbg !9330
  %cmp11 = icmp eq i32 %42, 20, !dbg !9331
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !9332

if.then12:                                        ; preds = %sw.bb
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i259, align 8, !dbg !9333
  %43 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i259, align 8, !dbg !9334
  %buffer_end.i260 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %43, i32 0, i32 1, !dbg !9336
  %44 = load i8*, i8** %buffer_end.i260, align 8, !dbg !9336
  %45 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i259, align 8, !dbg !9337
  %buffer.i261 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %45, i32 0, i32 0, !dbg !9338
  %46 = load i8*, i8** %buffer.i261, align 8, !dbg !9338
  %sub.ptr.lhs.cast.i262 = ptrtoint i8* %44 to i64, !dbg !9339
  %sub.ptr.rhs.cast.i263 = ptrtoint i8* %46 to i64, !dbg !9339
  %sub.ptr.sub.i264 = sub i64 %sub.ptr.lhs.cast.i262, %sub.ptr.rhs.cast.i263, !dbg !9339
  %cmp.i265 = icmp slt i64 %sub.ptr.sub.i264, 4, !dbg !9340
  br i1 %cmp.i265, label %if.then.i268, label %if.end.i287, !dbg !9341

if.then.i268:                                     ; preds = %if.then12
  %47 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i259, align 8, !dbg !9342
  %buffer_end1.i266 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %47, i32 0, i32 1, !dbg !9345
  %48 = load i8*, i8** %buffer_end1.i266, align 8, !dbg !9345
  %49 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i259, align 8, !dbg !9346
  %buffer2.i267 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %49, i32 0, i32 0, !dbg !9347
  store i8* %48, i8** %buffer2.i267, align 8, !dbg !9348
  store i32 0, i32* %retval.i258, align 4, !dbg !9349
  br label %bytestream2_get_be32.exit288, !dbg !9349

if.end.i287:                                      ; preds = %if.then12
  %50 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i259, align 8, !dbg !9350
  store %struct.GetByteContext* %50, %struct.GetByteContext** %g.addr.i.i257, align 8, !dbg !9351
  %51 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i257, align 8, !dbg !9352
  %buffer.i.i269 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %51, i32 0, i32 0, !dbg !9353
  store i8** %buffer.i.i269, i8*** %b.addr.i.i.i256, align 8, !dbg !9354
  %52 = load i8**, i8*** %b.addr.i.i.i256, align 8, !dbg !9355
  %53 = load i8*, i8** %52, align 8, !dbg !9356
  %add.ptr.i.i.i270 = getelementptr inbounds i8, i8* %53, i64 4, !dbg !9356
  store i8* %add.ptr.i.i.i270, i8** %52, align 8, !dbg !9356
  %54 = load i8**, i8*** %b.addr.i.i.i256, align 8, !dbg !9357
  %55 = load i8*, i8** %54, align 8, !dbg !9358
  %add.ptr1.i.i.i271 = getelementptr inbounds i8, i8* %55, i64 -4, !dbg !9359
  %56 = bitcast i8* %add.ptr1.i.i.i271 to %union.unaligned_32*, !dbg !9360
  %l.i.i.i272 = bitcast %union.unaligned_32* %56 to i32*, !dbg !9360
  %57 = load i32, i32* %l.i.i.i272, align 1, !dbg !9360
  store i32 %57, i32* %x.addr.i.i.i.i255, align 4, !dbg !9361
  %58 = load i32, i32* %x.addr.i.i.i.i255, align 4, !dbg !9362
  %shl.i.i.i.i273 = shl i32 %58, 8, !dbg !9363
  %and.i.i.i.i274 = and i32 %shl.i.i.i.i273, 65280, !dbg !9364
  %59 = load i32, i32* %x.addr.i.i.i.i255, align 4, !dbg !9365
  %shr.i.i.i.i275 = lshr i32 %59, 8, !dbg !9366
  %and1.i.i.i.i276 = and i32 %shr.i.i.i.i275, 255, !dbg !9367
  %or.i.i.i.i277 = or i32 %and.i.i.i.i274, %and1.i.i.i.i276, !dbg !9368
  %shl2.i.i.i.i278 = shl i32 %or.i.i.i.i277, 16, !dbg !9369
  %60 = load i32, i32* %x.addr.i.i.i.i255, align 4, !dbg !9370
  %shr3.i.i.i.i279 = lshr i32 %60, 16, !dbg !9371
  %shl4.i.i.i.i280 = shl i32 %shr3.i.i.i.i279, 8, !dbg !9372
  %and5.i.i.i.i281 = and i32 %shl4.i.i.i.i280, 65280, !dbg !9373
  %61 = load i32, i32* %x.addr.i.i.i.i255, align 4, !dbg !9374
  %shr6.i.i.i.i282 = lshr i32 %61, 16, !dbg !9375
  %shr7.i.i.i.i283 = lshr i32 %shr6.i.i.i.i282, 8, !dbg !9376
  %and8.i.i.i.i284 = and i32 %shr7.i.i.i.i283, 255, !dbg !9377
  %or9.i.i.i.i285 = or i32 %and5.i.i.i.i281, %and8.i.i.i.i284, !dbg !9378
  %or10.i.i.i.i286 = or i32 %shl2.i.i.i.i278, %or9.i.i.i.i285, !dbg !9379
  store i32 %or10.i.i.i.i286, i32* %retval.i258, align 4, !dbg !9380
  br label %bytestream2_get_be32.exit288, !dbg !9380

bytestream2_get_be32.exit288:                     ; preds = %if.then.i268, %if.end.i287
  %62 = load i32, i32* %retval.i258, align 4, !dbg !9381
  store i32 %62, i32* %t, align 4, !dbg !9383
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i225, align 8, !dbg !9384
  %63 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i225, align 8, !dbg !9385
  %buffer_end.i226 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %63, i32 0, i32 1, !dbg !9386
  %64 = load i8*, i8** %buffer_end.i226, align 8, !dbg !9386
  %65 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i225, align 8, !dbg !9387
  %buffer.i227 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %65, i32 0, i32 0, !dbg !9388
  %66 = load i8*, i8** %buffer.i227, align 8, !dbg !9388
  %sub.ptr.lhs.cast.i228 = ptrtoint i8* %64 to i64, !dbg !9389
  %sub.ptr.rhs.cast.i229 = ptrtoint i8* %66 to i64, !dbg !9389
  %sub.ptr.sub.i230 = sub i64 %sub.ptr.lhs.cast.i228, %sub.ptr.rhs.cast.i229, !dbg !9389
  %cmp.i231 = icmp slt i64 %sub.ptr.sub.i230, 4, !dbg !9390
  br i1 %cmp.i231, label %if.then.i234, label %if.end.i253, !dbg !9391

if.then.i234:                                     ; preds = %bytestream2_get_be32.exit288
  %67 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i225, align 8, !dbg !9392
  %buffer_end1.i232 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %67, i32 0, i32 1, !dbg !9393
  %68 = load i8*, i8** %buffer_end1.i232, align 8, !dbg !9393
  %69 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i225, align 8, !dbg !9394
  %buffer2.i233 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %69, i32 0, i32 0, !dbg !9395
  store i8* %68, i8** %buffer2.i233, align 8, !dbg !9396
  store i32 0, i32* %retval.i224, align 4, !dbg !9397
  br label %bytestream2_get_be32.exit254, !dbg !9397

if.end.i253:                                      ; preds = %bytestream2_get_be32.exit288
  %70 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i225, align 8, !dbg !9398
  store %struct.GetByteContext* %70, %struct.GetByteContext** %g.addr.i.i223, align 8, !dbg !9399
  %71 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i223, align 8, !dbg !9400
  %buffer.i.i235 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %71, i32 0, i32 0, !dbg !9401
  store i8** %buffer.i.i235, i8*** %b.addr.i.i.i222, align 8, !dbg !9402
  %72 = load i8**, i8*** %b.addr.i.i.i222, align 8, !dbg !9403
  %73 = load i8*, i8** %72, align 8, !dbg !9404
  %add.ptr.i.i.i236 = getelementptr inbounds i8, i8* %73, i64 4, !dbg !9404
  store i8* %add.ptr.i.i.i236, i8** %72, align 8, !dbg !9404
  %74 = load i8**, i8*** %b.addr.i.i.i222, align 8, !dbg !9405
  %75 = load i8*, i8** %74, align 8, !dbg !9406
  %add.ptr1.i.i.i237 = getelementptr inbounds i8, i8* %75, i64 -4, !dbg !9407
  %76 = bitcast i8* %add.ptr1.i.i.i237 to %union.unaligned_32*, !dbg !9408
  %l.i.i.i238 = bitcast %union.unaligned_32* %76 to i32*, !dbg !9408
  %77 = load i32, i32* %l.i.i.i238, align 1, !dbg !9408
  store i32 %77, i32* %x.addr.i.i.i.i221, align 4, !dbg !9409
  %78 = load i32, i32* %x.addr.i.i.i.i221, align 4, !dbg !9410
  %shl.i.i.i.i239 = shl i32 %78, 8, !dbg !9411
  %and.i.i.i.i240 = and i32 %shl.i.i.i.i239, 65280, !dbg !9412
  %79 = load i32, i32* %x.addr.i.i.i.i221, align 4, !dbg !9413
  %shr.i.i.i.i241 = lshr i32 %79, 8, !dbg !9414
  %and1.i.i.i.i242 = and i32 %shr.i.i.i.i241, 255, !dbg !9415
  %or.i.i.i.i243 = or i32 %and.i.i.i.i240, %and1.i.i.i.i242, !dbg !9416
  %shl2.i.i.i.i244 = shl i32 %or.i.i.i.i243, 16, !dbg !9417
  %80 = load i32, i32* %x.addr.i.i.i.i221, align 4, !dbg !9418
  %shr3.i.i.i.i245 = lshr i32 %80, 16, !dbg !9419
  %shl4.i.i.i.i246 = shl i32 %shr3.i.i.i.i245, 8, !dbg !9420
  %and5.i.i.i.i247 = and i32 %shl4.i.i.i.i246, 65280, !dbg !9421
  %81 = load i32, i32* %x.addr.i.i.i.i221, align 4, !dbg !9422
  %shr6.i.i.i.i248 = lshr i32 %81, 16, !dbg !9423
  %shr7.i.i.i.i249 = lshr i32 %shr6.i.i.i.i248, 8, !dbg !9424
  %and8.i.i.i.i250 = and i32 %shr7.i.i.i.i249, 255, !dbg !9425
  %or9.i.i.i.i251 = or i32 %and5.i.i.i.i247, %and8.i.i.i.i250, !dbg !9426
  %or10.i.i.i.i252 = or i32 %shl2.i.i.i.i244, %or9.i.i.i.i251, !dbg !9427
  store i32 %or10.i.i.i.i252, i32* %retval.i224, align 4, !dbg !9428
  br label %bytestream2_get_be32.exit254, !dbg !9428

bytestream2_get_be32.exit254:                     ; preds = %if.then.i234, %if.end.i253
  %82 = load i32, i32* %retval.i224, align 4, !dbg !9429
  store i32 %82, i32* %b, align 4, !dbg !9430
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i191, align 8, !dbg !9431
  %83 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i191, align 8, !dbg !9432
  %buffer_end.i192 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %83, i32 0, i32 1, !dbg !9433
  %84 = load i8*, i8** %buffer_end.i192, align 8, !dbg !9433
  %85 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i191, align 8, !dbg !9434
  %buffer.i193 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %85, i32 0, i32 0, !dbg !9435
  %86 = load i8*, i8** %buffer.i193, align 8, !dbg !9435
  %sub.ptr.lhs.cast.i194 = ptrtoint i8* %84 to i64, !dbg !9436
  %sub.ptr.rhs.cast.i195 = ptrtoint i8* %86 to i64, !dbg !9436
  %sub.ptr.sub.i196 = sub i64 %sub.ptr.lhs.cast.i194, %sub.ptr.rhs.cast.i195, !dbg !9436
  %cmp.i197 = icmp slt i64 %sub.ptr.sub.i196, 4, !dbg !9437
  br i1 %cmp.i197, label %if.then.i200, label %if.end.i219, !dbg !9438

if.then.i200:                                     ; preds = %bytestream2_get_be32.exit254
  %87 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i191, align 8, !dbg !9439
  %buffer_end1.i198 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %87, i32 0, i32 1, !dbg !9440
  %88 = load i8*, i8** %buffer_end1.i198, align 8, !dbg !9440
  %89 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i191, align 8, !dbg !9441
  %buffer2.i199 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %89, i32 0, i32 0, !dbg !9442
  store i8* %88, i8** %buffer2.i199, align 8, !dbg !9443
  store i32 0, i32* %retval.i190, align 4, !dbg !9444
  br label %bytestream2_get_be32.exit220, !dbg !9444

if.end.i219:                                      ; preds = %bytestream2_get_be32.exit254
  %90 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i191, align 8, !dbg !9445
  store %struct.GetByteContext* %90, %struct.GetByteContext** %g.addr.i.i189, align 8, !dbg !9446
  %91 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i189, align 8, !dbg !9447
  %buffer.i.i201 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %91, i32 0, i32 0, !dbg !9448
  store i8** %buffer.i.i201, i8*** %b.addr.i.i.i188, align 8, !dbg !9449
  %92 = load i8**, i8*** %b.addr.i.i.i188, align 8, !dbg !9450
  %93 = load i8*, i8** %92, align 8, !dbg !9451
  %add.ptr.i.i.i202 = getelementptr inbounds i8, i8* %93, i64 4, !dbg !9451
  store i8* %add.ptr.i.i.i202, i8** %92, align 8, !dbg !9451
  %94 = load i8**, i8*** %b.addr.i.i.i188, align 8, !dbg !9452
  %95 = load i8*, i8** %94, align 8, !dbg !9453
  %add.ptr1.i.i.i203 = getelementptr inbounds i8, i8* %95, i64 -4, !dbg !9454
  %96 = bitcast i8* %add.ptr1.i.i.i203 to %union.unaligned_32*, !dbg !9455
  %l.i.i.i204 = bitcast %union.unaligned_32* %96 to i32*, !dbg !9455
  %97 = load i32, i32* %l.i.i.i204, align 1, !dbg !9455
  store i32 %97, i32* %x.addr.i.i.i.i187, align 4, !dbg !9456
  %98 = load i32, i32* %x.addr.i.i.i.i187, align 4, !dbg !9457
  %shl.i.i.i.i205 = shl i32 %98, 8, !dbg !9458
  %and.i.i.i.i206 = and i32 %shl.i.i.i.i205, 65280, !dbg !9459
  %99 = load i32, i32* %x.addr.i.i.i.i187, align 4, !dbg !9460
  %shr.i.i.i.i207 = lshr i32 %99, 8, !dbg !9461
  %and1.i.i.i.i208 = and i32 %shr.i.i.i.i207, 255, !dbg !9462
  %or.i.i.i.i209 = or i32 %and.i.i.i.i206, %and1.i.i.i.i208, !dbg !9463
  %shl2.i.i.i.i210 = shl i32 %or.i.i.i.i209, 16, !dbg !9464
  %100 = load i32, i32* %x.addr.i.i.i.i187, align 4, !dbg !9465
  %shr3.i.i.i.i211 = lshr i32 %100, 16, !dbg !9466
  %shl4.i.i.i.i212 = shl i32 %shr3.i.i.i.i211, 8, !dbg !9467
  %and5.i.i.i.i213 = and i32 %shl4.i.i.i.i212, 65280, !dbg !9468
  %101 = load i32, i32* %x.addr.i.i.i.i187, align 4, !dbg !9469
  %shr6.i.i.i.i214 = lshr i32 %101, 16, !dbg !9470
  %shr7.i.i.i.i215 = lshr i32 %shr6.i.i.i.i214, 8, !dbg !9471
  %and8.i.i.i.i216 = and i32 %shr7.i.i.i.i215, 255, !dbg !9472
  %or9.i.i.i.i217 = or i32 %and5.i.i.i.i213, %and8.i.i.i.i216, !dbg !9473
  %or10.i.i.i.i218 = or i32 %shl2.i.i.i.i210, %or9.i.i.i.i217, !dbg !9474
  store i32 %or10.i.i.i.i218, i32* %retval.i190, align 4, !dbg !9475
  br label %bytestream2_get_be32.exit220, !dbg !9475

bytestream2_get_be32.exit220:                     ; preds = %if.then.i200, %if.end.i219
  %102 = load i32, i32* %retval.i190, align 4, !dbg !9476
  store i32 %102, i32* %l, align 4, !dbg !9477
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i157, align 8, !dbg !9478
  %103 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i157, align 8, !dbg !9479
  %buffer_end.i158 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %103, i32 0, i32 1, !dbg !9480
  %104 = load i8*, i8** %buffer_end.i158, align 8, !dbg !9480
  %105 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i157, align 8, !dbg !9481
  %buffer.i159 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %105, i32 0, i32 0, !dbg !9482
  %106 = load i8*, i8** %buffer.i159, align 8, !dbg !9482
  %sub.ptr.lhs.cast.i160 = ptrtoint i8* %104 to i64, !dbg !9483
  %sub.ptr.rhs.cast.i161 = ptrtoint i8* %106 to i64, !dbg !9483
  %sub.ptr.sub.i162 = sub i64 %sub.ptr.lhs.cast.i160, %sub.ptr.rhs.cast.i161, !dbg !9483
  %cmp.i163 = icmp slt i64 %sub.ptr.sub.i162, 4, !dbg !9484
  br i1 %cmp.i163, label %if.then.i166, label %if.end.i185, !dbg !9485

if.then.i166:                                     ; preds = %bytestream2_get_be32.exit220
  %107 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i157, align 8, !dbg !9486
  %buffer_end1.i164 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %107, i32 0, i32 1, !dbg !9487
  %108 = load i8*, i8** %buffer_end1.i164, align 8, !dbg !9487
  %109 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i157, align 8, !dbg !9488
  %buffer2.i165 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %109, i32 0, i32 0, !dbg !9489
  store i8* %108, i8** %buffer2.i165, align 8, !dbg !9490
  store i32 0, i32* %retval.i156, align 4, !dbg !9491
  br label %bytestream2_get_be32.exit186, !dbg !9491

if.end.i185:                                      ; preds = %bytestream2_get_be32.exit220
  %110 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i157, align 8, !dbg !9492
  store %struct.GetByteContext* %110, %struct.GetByteContext** %g.addr.i.i155, align 8, !dbg !9493
  %111 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i155, align 8, !dbg !9494
  %buffer.i.i167 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %111, i32 0, i32 0, !dbg !9495
  store i8** %buffer.i.i167, i8*** %b.addr.i.i.i154, align 8, !dbg !9496
  %112 = load i8**, i8*** %b.addr.i.i.i154, align 8, !dbg !9497
  %113 = load i8*, i8** %112, align 8, !dbg !9498
  %add.ptr.i.i.i168 = getelementptr inbounds i8, i8* %113, i64 4, !dbg !9498
  store i8* %add.ptr.i.i.i168, i8** %112, align 8, !dbg !9498
  %114 = load i8**, i8*** %b.addr.i.i.i154, align 8, !dbg !9499
  %115 = load i8*, i8** %114, align 8, !dbg !9500
  %add.ptr1.i.i.i169 = getelementptr inbounds i8, i8* %115, i64 -4, !dbg !9501
  %116 = bitcast i8* %add.ptr1.i.i.i169 to %union.unaligned_32*, !dbg !9502
  %l.i.i.i170 = bitcast %union.unaligned_32* %116 to i32*, !dbg !9502
  %117 = load i32, i32* %l.i.i.i170, align 1, !dbg !9502
  store i32 %117, i32* %x.addr.i.i.i.i153, align 4, !dbg !9503
  %118 = load i32, i32* %x.addr.i.i.i.i153, align 4, !dbg !9504
  %shl.i.i.i.i171 = shl i32 %118, 8, !dbg !9505
  %and.i.i.i.i172 = and i32 %shl.i.i.i.i171, 65280, !dbg !9506
  %119 = load i32, i32* %x.addr.i.i.i.i153, align 4, !dbg !9507
  %shr.i.i.i.i173 = lshr i32 %119, 8, !dbg !9508
  %and1.i.i.i.i174 = and i32 %shr.i.i.i.i173, 255, !dbg !9509
  %or.i.i.i.i175 = or i32 %and.i.i.i.i172, %and1.i.i.i.i174, !dbg !9510
  %shl2.i.i.i.i176 = shl i32 %or.i.i.i.i175, 16, !dbg !9511
  %120 = load i32, i32* %x.addr.i.i.i.i153, align 4, !dbg !9512
  %shr3.i.i.i.i177 = lshr i32 %120, 16, !dbg !9513
  %shl4.i.i.i.i178 = shl i32 %shr3.i.i.i.i177, 8, !dbg !9514
  %and5.i.i.i.i179 = and i32 %shl4.i.i.i.i178, 65280, !dbg !9515
  %121 = load i32, i32* %x.addr.i.i.i.i153, align 4, !dbg !9516
  %shr6.i.i.i.i180 = lshr i32 %121, 16, !dbg !9517
  %shr7.i.i.i.i181 = lshr i32 %shr6.i.i.i.i180, 8, !dbg !9518
  %and8.i.i.i.i182 = and i32 %shr7.i.i.i.i181, 255, !dbg !9519
  %or9.i.i.i.i183 = or i32 %and5.i.i.i.i179, %and8.i.i.i.i182, !dbg !9520
  %or10.i.i.i.i184 = or i32 %shl2.i.i.i.i176, %or9.i.i.i.i183, !dbg !9521
  store i32 %or10.i.i.i.i184, i32* %retval.i156, align 4, !dbg !9522
  br label %bytestream2_get_be32.exit186, !dbg !9522

bytestream2_get_be32.exit186:                     ; preds = %if.then.i166, %if.end.i185
  %122 = load i32, i32* %retval.i156, align 4, !dbg !9523
  store i32 %122, i32* %r, align 4, !dbg !9524
  %123 = load i32, i32* %b, align 4, !dbg !9525
  %124 = load i32, i32* %t, align 4, !dbg !9527
  %sub = sub i32 -1, %124, !dbg !9528
  %cmp17 = icmp uge i32 %123, %sub, !dbg !9529
  br i1 %cmp17, label %if.then20, label %lor.lhs.false, !dbg !9530

lor.lhs.false:                                    ; preds = %bytestream2_get_be32.exit186
  %125 = load i32, i32* %r, align 4, !dbg !9531
  %126 = load i32, i32* %l, align 4, !dbg !9533
  %sub18 = sub i32 -1, %126, !dbg !9534
  %cmp19 = icmp uge i32 %125, %sub18, !dbg !9535
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !9536

if.then20:                                        ; preds = %lor.lhs.false, %bytestream2_get_be32.exit186
  %127 = load i32, i32* %l, align 4, !dbg !9537
  %128 = load i32, i32* %t, align 4, !dbg !9539
  %129 = load i32, i32* %r, align 4, !dbg !9540
  %130 = load i32, i32* %b, align 4, !dbg !9541
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.93, i32 0, i32 0), i32 %127, i32 %128, i32 %129, i32 %130), !dbg !9542
  store i32 -1094995529, i32* %retval, align 4, !dbg !9543
  br label %return, !dbg !9543

if.end21:                                         ; preds = %lor.lhs.false
  br label %if.end29, !dbg !9544

if.else:                                          ; preds = %sw.bb
  %131 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !9545
  %video22 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %131, i32 0, i32 12, !dbg !9548
  %projection23 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video22, i32 0, i32 12, !dbg !9549
  %private24 = getelementptr inbounds %struct.MatroskaTrackVideoProjection, %struct.MatroskaTrackVideoProjection* %projection23, i32 0, i32 1, !dbg !9550
  %size25 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %private24, i32 0, i32 0, !dbg !9551
  %132 = load i32, i32* %size25, align 8, !dbg !9551
  %cmp26 = icmp ne i32 %132, 0, !dbg !9552
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !9545

if.then27:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.92, i32 0, i32 0)), !dbg !9553
  store i32 -1094995529, i32* %retval, align 4, !dbg !9555
  br label %return, !dbg !9555

if.end28:                                         ; preds = %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end21
  %133 = load i32, i32* %l, align 4, !dbg !9556
  %tobool = icmp ne i32 %133, 0, !dbg !9556
  br i1 %tobool, label %if.then36, label %lor.lhs.false30, !dbg !9558

lor.lhs.false30:                                  ; preds = %if.end29
  %134 = load i32, i32* %t, align 4, !dbg !9559
  %tobool31 = icmp ne i32 %134, 0, !dbg !9559
  br i1 %tobool31, label %if.then36, label %lor.lhs.false32, !dbg !9561

lor.lhs.false32:                                  ; preds = %lor.lhs.false30
  %135 = load i32, i32* %r, align 4, !dbg !9562
  %tobool33 = icmp ne i32 %135, 0, !dbg !9562
  br i1 %tobool33, label %if.then36, label %lor.lhs.false34, !dbg !9564

lor.lhs.false34:                                  ; preds = %lor.lhs.false32
  %136 = load i32, i32* %b, align 4, !dbg !9565
  %tobool35 = icmp ne i32 %136, 0, !dbg !9565
  br i1 %tobool35, label %if.then36, label %if.else37, !dbg !9567

if.then36:                                        ; preds = %lor.lhs.false34, %lor.lhs.false32, %lor.lhs.false30, %if.end29
  store i32 2, i32* %projection, align 4, !dbg !9568
  br label %if.end38, !dbg !9569

if.else37:                                        ; preds = %lor.lhs.false34
  store i32 0, i32* %projection, align 4, !dbg !9570
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  br label %sw.epilog, !dbg !9571

sw.bb39:                                          ; preds = %bytestream2_skip.exit
  %137 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !9572
  %video40 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %137, i32 0, i32 12, !dbg !9573
  %projection41 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video40, i32 0, i32 12, !dbg !9574
  %private42 = getelementptr inbounds %struct.MatroskaTrackVideoProjection, %struct.MatroskaTrackVideoProjection* %projection41, i32 0, i32 1, !dbg !9575
  %size43 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %private42, i32 0, i32 0, !dbg !9576
  %138 = load i32, i32* %size43, align 8, !dbg !9576
  %cmp44 = icmp slt i32 %138, 4, !dbg !9577
  br i1 %cmp44, label %if.then45, label %if.else46, !dbg !9578

if.then45:                                        ; preds = %sw.bb39
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.94, i32 0, i32 0)), !dbg !9579
  store i32 -1094995529, i32* %retval, align 4, !dbg !9581
  br label %return, !dbg !9581

if.else46:                                        ; preds = %sw.bb39
  %139 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !9582
  %video47 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %139, i32 0, i32 12, !dbg !9583
  %projection48 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video47, i32 0, i32 12, !dbg !9584
  %private49 = getelementptr inbounds %struct.MatroskaTrackVideoProjection, %struct.MatroskaTrackVideoProjection* %projection48, i32 0, i32 1, !dbg !9585
  %size50 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %private49, i32 0, i32 0, !dbg !9586
  %140 = load i32, i32* %size50, align 8, !dbg !9586
  %cmp51 = icmp eq i32 %140, 12, !dbg !9587
  br i1 %cmp51, label %if.then52, label %if.else58, !dbg !9588

if.then52:                                        ; preds = %if.else46
  call void @llvm.dbg.declare(metadata i32* %layout, metadata !9589, metadata !2574), !dbg !9590
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i123, align 8, !dbg !9591
  %141 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i123, align 8, !dbg !9592
  %buffer_end.i124 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %141, i32 0, i32 1, !dbg !9593
  %142 = load i8*, i8** %buffer_end.i124, align 8, !dbg !9593
  %143 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i123, align 8, !dbg !9594
  %buffer.i125 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %143, i32 0, i32 0, !dbg !9595
  %144 = load i8*, i8** %buffer.i125, align 8, !dbg !9595
  %sub.ptr.lhs.cast.i126 = ptrtoint i8* %142 to i64, !dbg !9596
  %sub.ptr.rhs.cast.i127 = ptrtoint i8* %144 to i64, !dbg !9596
  %sub.ptr.sub.i128 = sub i64 %sub.ptr.lhs.cast.i126, %sub.ptr.rhs.cast.i127, !dbg !9596
  %cmp.i129 = icmp slt i64 %sub.ptr.sub.i128, 4, !dbg !9597
  br i1 %cmp.i129, label %if.then.i132, label %if.end.i151, !dbg !9598

if.then.i132:                                     ; preds = %if.then52
  %145 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i123, align 8, !dbg !9599
  %buffer_end1.i130 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %145, i32 0, i32 1, !dbg !9600
  %146 = load i8*, i8** %buffer_end1.i130, align 8, !dbg !9600
  %147 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i123, align 8, !dbg !9601
  %buffer2.i131 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %147, i32 0, i32 0, !dbg !9602
  store i8* %146, i8** %buffer2.i131, align 8, !dbg !9603
  store i32 0, i32* %retval.i122, align 4, !dbg !9604
  br label %bytestream2_get_be32.exit152, !dbg !9604

if.end.i151:                                      ; preds = %if.then52
  %148 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i123, align 8, !dbg !9605
  store %struct.GetByteContext* %148, %struct.GetByteContext** %g.addr.i.i121, align 8, !dbg !9606
  %149 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i121, align 8, !dbg !9607
  %buffer.i.i133 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %149, i32 0, i32 0, !dbg !9608
  store i8** %buffer.i.i133, i8*** %b.addr.i.i.i120, align 8, !dbg !9609
  %150 = load i8**, i8*** %b.addr.i.i.i120, align 8, !dbg !9610
  %151 = load i8*, i8** %150, align 8, !dbg !9611
  %add.ptr.i.i.i134 = getelementptr inbounds i8, i8* %151, i64 4, !dbg !9611
  store i8* %add.ptr.i.i.i134, i8** %150, align 8, !dbg !9611
  %152 = load i8**, i8*** %b.addr.i.i.i120, align 8, !dbg !9612
  %153 = load i8*, i8** %152, align 8, !dbg !9613
  %add.ptr1.i.i.i135 = getelementptr inbounds i8, i8* %153, i64 -4, !dbg !9614
  %154 = bitcast i8* %add.ptr1.i.i.i135 to %union.unaligned_32*, !dbg !9615
  %l.i.i.i136 = bitcast %union.unaligned_32* %154 to i32*, !dbg !9615
  %155 = load i32, i32* %l.i.i.i136, align 1, !dbg !9615
  store i32 %155, i32* %x.addr.i.i.i.i119, align 4, !dbg !9616
  %156 = load i32, i32* %x.addr.i.i.i.i119, align 4, !dbg !9617
  %shl.i.i.i.i137 = shl i32 %156, 8, !dbg !9618
  %and.i.i.i.i138 = and i32 %shl.i.i.i.i137, 65280, !dbg !9619
  %157 = load i32, i32* %x.addr.i.i.i.i119, align 4, !dbg !9620
  %shr.i.i.i.i139 = lshr i32 %157, 8, !dbg !9621
  %and1.i.i.i.i140 = and i32 %shr.i.i.i.i139, 255, !dbg !9622
  %or.i.i.i.i141 = or i32 %and.i.i.i.i138, %and1.i.i.i.i140, !dbg !9623
  %shl2.i.i.i.i142 = shl i32 %or.i.i.i.i141, 16, !dbg !9624
  %158 = load i32, i32* %x.addr.i.i.i.i119, align 4, !dbg !9625
  %shr3.i.i.i.i143 = lshr i32 %158, 16, !dbg !9626
  %shl4.i.i.i.i144 = shl i32 %shr3.i.i.i.i143, 8, !dbg !9627
  %and5.i.i.i.i145 = and i32 %shl4.i.i.i.i144, 65280, !dbg !9628
  %159 = load i32, i32* %x.addr.i.i.i.i119, align 4, !dbg !9629
  %shr6.i.i.i.i146 = lshr i32 %159, 16, !dbg !9630
  %shr7.i.i.i.i147 = lshr i32 %shr6.i.i.i.i146, 8, !dbg !9631
  %and8.i.i.i.i148 = and i32 %shr7.i.i.i.i147, 255, !dbg !9632
  %or9.i.i.i.i149 = or i32 %and5.i.i.i.i145, %and8.i.i.i.i148, !dbg !9633
  %or10.i.i.i.i150 = or i32 %shl2.i.i.i.i142, %or9.i.i.i.i149, !dbg !9634
  store i32 %or10.i.i.i.i150, i32* %retval.i122, align 4, !dbg !9635
  br label %bytestream2_get_be32.exit152, !dbg !9635

bytestream2_get_be32.exit152:                     ; preds = %if.then.i132, %if.end.i151
  %160 = load i32, i32* %retval.i122, align 4, !dbg !9636
  store i32 %160, i32* %layout, align 4, !dbg !9590
  %161 = load i32, i32* %layout, align 4, !dbg !9637
  %tobool54 = icmp ne i32 %161, 0, !dbg !9637
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !9639

if.then55:                                        ; preds = %bytestream2_get_be32.exit152
  %162 = load i32, i32* %layout, align 4, !dbg !9640
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.95, i32 0, i32 0), i32 %162), !dbg !9642
  store i32 0, i32* %retval, align 4, !dbg !9643
  br label %return, !dbg !9643

if.end56:                                         ; preds = %bytestream2_get_be32.exit152
  store i32 1, i32* %projection, align 4, !dbg !9644
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i105, align 8, !dbg !9645
  %163 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i105, align 8, !dbg !9646
  %buffer_end.i106 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %163, i32 0, i32 1, !dbg !9647
  %164 = load i8*, i8** %buffer_end.i106, align 8, !dbg !9647
  %165 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i105, align 8, !dbg !9648
  %buffer.i107 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %165, i32 0, i32 0, !dbg !9649
  %166 = load i8*, i8** %buffer.i107, align 8, !dbg !9649
  %sub.ptr.lhs.cast.i108 = ptrtoint i8* %164 to i64, !dbg !9650
  %sub.ptr.rhs.cast.i109 = ptrtoint i8* %166 to i64, !dbg !9650
  %sub.ptr.sub.i110 = sub i64 %sub.ptr.lhs.cast.i108, %sub.ptr.rhs.cast.i109, !dbg !9650
  %cmp.i111 = icmp slt i64 %sub.ptr.sub.i110, 4, !dbg !9651
  br i1 %cmp.i111, label %if.then.i114, label %if.end.i118, !dbg !9652

if.then.i114:                                     ; preds = %if.end56
  %167 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i105, align 8, !dbg !9653
  %buffer_end1.i112 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %167, i32 0, i32 1, !dbg !9654
  %168 = load i8*, i8** %buffer_end1.i112, align 8, !dbg !9654
  %169 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i105, align 8, !dbg !9655
  %buffer2.i113 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %169, i32 0, i32 0, !dbg !9656
  store i8* %168, i8** %buffer2.i113, align 8, !dbg !9657
  store i32 0, i32* %retval.i104, align 4, !dbg !9658
  br label %bytestream2_get_be32.exit, !dbg !9658

if.end.i118:                                      ; preds = %if.end56
  %170 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i105, align 8, !dbg !9659
  store %struct.GetByteContext* %170, %struct.GetByteContext** %g.addr.i.i103, align 8, !dbg !9660
  %171 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i103, align 8, !dbg !9661
  %buffer.i.i115 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %171, i32 0, i32 0, !dbg !9662
  store i8** %buffer.i.i115, i8*** %b.addr.i.i.i102, align 8, !dbg !9663
  %172 = load i8**, i8*** %b.addr.i.i.i102, align 8, !dbg !9664
  %173 = load i8*, i8** %172, align 8, !dbg !9665
  %add.ptr.i.i.i116 = getelementptr inbounds i8, i8* %173, i64 4, !dbg !9665
  store i8* %add.ptr.i.i.i116, i8** %172, align 8, !dbg !9665
  %174 = load i8**, i8*** %b.addr.i.i.i102, align 8, !dbg !9666
  %175 = load i8*, i8** %174, align 8, !dbg !9667
  %add.ptr1.i.i.i117 = getelementptr inbounds i8, i8* %175, i64 -4, !dbg !9668
  %176 = bitcast i8* %add.ptr1.i.i.i117 to %union.unaligned_32*, !dbg !9669
  %l.i.i.i = bitcast %union.unaligned_32* %176 to i32*, !dbg !9669
  %177 = load i32, i32* %l.i.i.i, align 1, !dbg !9669
  store i32 %177, i32* %x.addr.i.i.i.i, align 4, !dbg !9670
  %178 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !9671
  %shl.i.i.i.i = shl i32 %178, 8, !dbg !9672
  %and.i.i.i.i = and i32 %shl.i.i.i.i, 65280, !dbg !9673
  %179 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !9674
  %shr.i.i.i.i = lshr i32 %179, 8, !dbg !9675
  %and1.i.i.i.i = and i32 %shr.i.i.i.i, 255, !dbg !9676
  %or.i.i.i.i = or i32 %and.i.i.i.i, %and1.i.i.i.i, !dbg !9677
  %shl2.i.i.i.i = shl i32 %or.i.i.i.i, 16, !dbg !9678
  %180 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !9679
  %shr3.i.i.i.i = lshr i32 %180, 16, !dbg !9680
  %shl4.i.i.i.i = shl i32 %shr3.i.i.i.i, 8, !dbg !9681
  %and5.i.i.i.i = and i32 %shl4.i.i.i.i, 65280, !dbg !9682
  %181 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !9683
  %shr6.i.i.i.i = lshr i32 %181, 16, !dbg !9684
  %shr7.i.i.i.i = lshr i32 %shr6.i.i.i.i, 8, !dbg !9685
  %and8.i.i.i.i = and i32 %shr7.i.i.i.i, 255, !dbg !9686
  %or9.i.i.i.i = or i32 %and5.i.i.i.i, %and8.i.i.i.i, !dbg !9687
  %or10.i.i.i.i = or i32 %shl2.i.i.i.i, %or9.i.i.i.i, !dbg !9688
  store i32 %or10.i.i.i.i, i32* %retval.i104, align 4, !dbg !9689
  br label %bytestream2_get_be32.exit, !dbg !9689

bytestream2_get_be32.exit:                        ; preds = %if.then.i114, %if.end.i118
  %182 = load i32, i32* %retval.i104, align 4, !dbg !9690
  store i32 %182, i32* %padding, align 4, !dbg !9691
  br label %if.end59, !dbg !9692

if.else58:                                        ; preds = %if.else46
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.92, i32 0, i32 0)), !dbg !9693
  store i32 -1094995529, i32* %retval, align 4, !dbg !9695
  br label %return, !dbg !9695

if.end59:                                         ; preds = %bytestream2_get_be32.exit
  br label %if.end60

if.end60:                                         ; preds = %if.end59
  br label %sw.epilog, !dbg !9696

sw.bb61:                                          ; preds = %bytestream2_skip.exit
  store i32 0, i32* %retval, align 4, !dbg !9697
  br label %return, !dbg !9697

sw.default:                                       ; preds = %bytestream2_skip.exit
  %183 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !9698
  %video62 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %183, i32 0, i32 12, !dbg !9699
  %projection63 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video62, i32 0, i32 12, !dbg !9700
  %type64 = getelementptr inbounds %struct.MatroskaTrackVideoProjection, %struct.MatroskaTrackVideoProjection* %projection63, i32 0, i32 0, !dbg !9701
  %184 = load i64, i64* %type64, align 8, !dbg !9701
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.96, i32 0, i32 0), i64 %184), !dbg !9702
  store i32 0, i32* %retval, align 4, !dbg !9703
  br label %return, !dbg !9703

sw.epilog:                                        ; preds = %if.end60, %if.end38
  %call65 = call %struct.AVSphericalMapping* @av_spherical_alloc(i64* %spherical_size), !dbg !9704
  store %struct.AVSphericalMapping* %call65, %struct.AVSphericalMapping** %spherical, align 8, !dbg !9705
  %185 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !9706
  %tobool66 = icmp ne %struct.AVSphericalMapping* %185, null, !dbg !9706
  br i1 %tobool66, label %if.end68, label %if.then67, !dbg !9708

if.then67:                                        ; preds = %sw.epilog
  store i32 -12, i32* %retval, align 4, !dbg !9709
  br label %return, !dbg !9709

if.end68:                                         ; preds = %sw.epilog
  %186 = load i32, i32* %projection, align 4, !dbg !9710
  %187 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !9711
  %projection69 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %187, i32 0, i32 0, !dbg !9712
  store i32 %186, i32* %projection69, align 4, !dbg !9713
  %188 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !9714
  %video70 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %188, i32 0, i32 12, !dbg !9715
  %projection71 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video70, i32 0, i32 12, !dbg !9716
  %yaw = getelementptr inbounds %struct.MatroskaTrackVideoProjection, %struct.MatroskaTrackVideoProjection* %projection71, i32 0, i32 2, !dbg !9717
  %189 = load double, double* %yaw, align 8, !dbg !9717
  %mul = fmul double %189, 6.553600e+04, !dbg !9718
  %conv = fptosi double %mul to i32, !dbg !9719
  %190 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !9720
  %yaw72 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %190, i32 0, i32 1, !dbg !9721
  store i32 %conv, i32* %yaw72, align 4, !dbg !9722
  %191 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !9723
  %video73 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %191, i32 0, i32 12, !dbg !9724
  %projection74 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video73, i32 0, i32 12, !dbg !9725
  %pitch = getelementptr inbounds %struct.MatroskaTrackVideoProjection, %struct.MatroskaTrackVideoProjection* %projection74, i32 0, i32 3, !dbg !9726
  %192 = load double, double* %pitch, align 8, !dbg !9726
  %mul75 = fmul double %192, 6.553600e+04, !dbg !9727
  %conv76 = fptosi double %mul75 to i32, !dbg !9728
  %193 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !9729
  %pitch77 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %193, i32 0, i32 2, !dbg !9730
  store i32 %conv76, i32* %pitch77, align 4, !dbg !9731
  %194 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !9732
  %video78 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %194, i32 0, i32 12, !dbg !9733
  %projection79 = getelementptr inbounds %struct.MatroskaTrackVideo, %struct.MatroskaTrackVideo* %video78, i32 0, i32 12, !dbg !9734
  %roll = getelementptr inbounds %struct.MatroskaTrackVideoProjection, %struct.MatroskaTrackVideoProjection* %projection79, i32 0, i32 4, !dbg !9735
  %195 = load double, double* %roll, align 8, !dbg !9735
  %mul80 = fmul double %195, 6.553600e+04, !dbg !9736
  %conv81 = fptosi double %mul80 to i32, !dbg !9737
  %196 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !9738
  %roll82 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %196, i32 0, i32 3, !dbg !9739
  store i32 %conv81, i32* %roll82, align 4, !dbg !9740
  %197 = load i32, i32* %padding, align 4, !dbg !9741
  %198 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !9742
  %padding83 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %198, i32 0, i32 8, !dbg !9743
  store i32 %197, i32* %padding83, align 4, !dbg !9744
  %199 = load i32, i32* %l, align 4, !dbg !9745
  %200 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !9746
  %bound_left = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %200, i32 0, i32 4, !dbg !9747
  store i32 %199, i32* %bound_left, align 4, !dbg !9748
  %201 = load i32, i32* %t, align 4, !dbg !9749
  %202 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !9750
  %bound_top = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %202, i32 0, i32 5, !dbg !9751
  store i32 %201, i32* %bound_top, align 4, !dbg !9752
  %203 = load i32, i32* %r, align 4, !dbg !9753
  %204 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !9754
  %bound_right = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %204, i32 0, i32 6, !dbg !9755
  store i32 %203, i32* %bound_right, align 4, !dbg !9756
  %205 = load i32, i32* %b, align 4, !dbg !9757
  %206 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !9758
  %bound_bottom = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %206, i32 0, i32 7, !dbg !9759
  store i32 %205, i32* %bound_bottom, align 4, !dbg !9760
  %207 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9761
  %208 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !9762
  %209 = bitcast %struct.AVSphericalMapping* %208 to i8*, !dbg !9763
  %210 = load i64, i64* %spherical_size, align 8, !dbg !9764
  %call84 = call i32 @av_stream_add_side_data(%struct.AVStream* %207, i32 21, i8* %209, i64 %210), !dbg !9765
  store i32 %call84, i32* %ret, align 4, !dbg !9766
  %211 = load i32, i32* %ret, align 4, !dbg !9767
  %cmp85 = icmp slt i32 %211, 0, !dbg !9769
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !9770

if.then87:                                        ; preds = %if.end68
  %212 = bitcast %struct.AVSphericalMapping** %spherical to i8*, !dbg !9771
  call void @av_freep(i8* %212), !dbg !9773
  %213 = load i32, i32* %ret, align 4, !dbg !9774
  store i32 %213, i32* %retval, align 4, !dbg !9775
  br label %return, !dbg !9775

if.end88:                                         ; preds = %if.end68
  store i32 0, i32* %retval, align 4, !dbg !9776
  br label %return, !dbg !9776

return:                                           ; preds = %if.end88, %if.then87, %if.then67, %sw.default, %sw.bb61, %if.else58, %if.then55, %if.then45, %if.then27, %if.then20, %if.then
  %214 = load i32, i32* %retval, align 4, !dbg !9777
  ret i32 %214, !dbg !9777
}

declare i8* @av_realloc(i8*, i64) #4

declare i32 @av_lzo1x_decode(i8*, i32*, i8*, i32*) #4

declare i32 @inflateInit_(%struct.z_stream_s*, i8*, i32) #4

declare i32 @inflateEnd(%struct.z_stream_s*) #4

declare i32 @inflate(%struct.z_stream_s*, i32) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

declare i32 @ff_vorbis_comment(%struct.AVFormatContext*, %struct.AVDictionary**, i8*, i32, i32) #4

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) #4

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #7

declare void @av_dict_free(%struct.AVDictionary**) #4

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #7

declare i32 @avcodec_chroma_pos_to_enum(i32, i32) #4

declare %struct.AVContentLightMetadata* @av_content_light_metadata_alloc(i64*) #4

declare i32 @av_stream_add_side_data(%struct.AVStream*, i32, i8*, i64) #4

declare i8* @av_stream_new_side_data(%struct.AVStream*, i32, i32) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @av_make_q(i32 %num, i32 %den) #8 !dbg !9778 {
entry:
  %retval = alloca %struct.AVRational, align 4
  %num.addr = alloca i32, align 4
  %den.addr = alloca i32, align 4
  %r = alloca %struct.AVRational, align 4
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !9781, metadata !2574), !dbg !9782
  store i32 %den, i32* %den.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %den.addr, metadata !9783, metadata !2574), !dbg !9784
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r, metadata !9785, metadata !2574), !dbg !9786
  %num1 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r, i32 0, i32 0, !dbg !9787
  %0 = load i32, i32* %num.addr, align 4, !dbg !9788
  store i32 %0, i32* %num1, align 4, !dbg !9787
  %den2 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r, i32 0, i32 1, !dbg !9787
  %1 = load i32, i32* %den.addr, align 4, !dbg !9789
  store i32 %1, i32* %den2, align 4, !dbg !9787
  %2 = bitcast %struct.AVRational* %retval to i8*, !dbg !9790
  %3 = bitcast %struct.AVRational* %r to i8*, !dbg !9790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 8, i32 4, i1 false), !dbg !9790
  %4 = bitcast %struct.AVRational* %retval to i64*, !dbg !9791
  %5 = load i64, i64* %4, align 4, !dbg !9791
  ret i64 %5, !dbg !9791
}

; Function Attrs: nounwind readnone
declare double @round(double) #6

declare %struct.AVSphericalMapping* @av_spherical_alloc(i64*) #4

; Function Attrs: noreturn nounwind
declare void @abort() #9

; Function Attrs: nounwind uwtable
define internal %struct.MatroskaTrack* @matroska_find_track_by_num(%struct.MatroskaDemuxContext* %matroska, i32 %num) #0 !dbg !9792 {
entry:
  %retval = alloca %struct.MatroskaTrack*, align 8
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %num.addr = alloca i32, align 4
  %tracks = alloca %struct.MatroskaTrack*, align 8
  %i = alloca i32, align 4
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !9795, metadata !2574), !dbg !9796
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !9797, metadata !2574), !dbg !9798
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %tracks, metadata !9799, metadata !2574), !dbg !9800
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !9801
  %tracks1 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 11, !dbg !9802
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks1, i32 0, i32 1, !dbg !9803
  %1 = load i8*, i8** %elem, align 8, !dbg !9803
  %2 = bitcast i8* %1 to %struct.MatroskaTrack*, !dbg !9801
  store %struct.MatroskaTrack* %2, %struct.MatroskaTrack** %tracks, align 8, !dbg !9800
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9804, metadata !2574), !dbg !9805
  store i32 0, i32* %i, align 4, !dbg !9806
  br label %for.cond, !dbg !9808

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !9809
  %4 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !9812
  %tracks2 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %4, i32 0, i32 11, !dbg !9813
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks2, i32 0, i32 0, !dbg !9814
  %5 = load i32, i32* %nb_elem, align 8, !dbg !9814
  %cmp = icmp slt i32 %3, %5, !dbg !9815
  br i1 %cmp, label %for.body, label %for.end, !dbg !9816

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !9817
  %idxprom = sext i32 %6 to i64, !dbg !9819
  %7 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !9819
  %arrayidx = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %7, i64 %idxprom, !dbg !9819
  %num3 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %arrayidx, i32 0, i32 0, !dbg !9820
  %8 = load i64, i64* %num3, align 8, !dbg !9820
  %9 = load i32, i32* %num.addr, align 4, !dbg !9821
  %conv = sext i32 %9 to i64, !dbg !9821
  %cmp4 = icmp eq i64 %8, %conv, !dbg !9822
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9823

if.then:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !9824
  %idxprom6 = sext i32 %10 to i64, !dbg !9825
  %11 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !9825
  %arrayidx7 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %11, i64 %idxprom6, !dbg !9825
  store %struct.MatroskaTrack* %arrayidx7, %struct.MatroskaTrack** %retval, align 8, !dbg !9826
  br label %return, !dbg !9826

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9827

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !9829
  %inc = add nsw i32 %12, 1, !dbg !9829
  store i32 %inc, i32* %i, align 4, !dbg !9829
  br label %for.cond, !dbg !9831, !llvm.loop !9832

for.end:                                          ; preds = %for.cond
  %13 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !9834
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %13, i32 0, i32 1, !dbg !9835
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !9835
  %15 = bitcast %struct.AVFormatContext* %14 to i8*, !dbg !9834
  %16 = load i32, i32* %num.addr, align 4, !dbg !9836
  call void (i8*, i32, i8*, ...) @av_log(i8* %15, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.101, i32 0, i32 0), i32 %16), !dbg !9837
  store %struct.MatroskaTrack* null, %struct.MatroskaTrack** %retval, align 8, !dbg !9838
  br label %return, !dbg !9838

return:                                           ; preds = %for.end, %if.then
  %17 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %retval, align 8, !dbg !9839
  ret %struct.MatroskaTrack* %17, !dbg !9839
}

declare i32 @av_add_index_entry(%struct.AVStream*, i64, i64, i32, i32, i32) #4

; Function Attrs: nounwind uwtable
define internal void @matroska_convert_tag(%struct.AVFormatContext* %s, %struct.EbmlList* %list, %struct.AVDictionary** %metadata, i8* %prefix) #0 !dbg !9840 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %list.addr = alloca %struct.EbmlList*, align 8
  %metadata.addr = alloca %struct.AVDictionary**, align 8
  %prefix.addr = alloca i8*, align 8
  %tags = alloca %struct.MatroskaTag*, align 8
  %key = alloca [1024 x i8], align 16
  %i = alloca i32, align 4
  %lang = alloca i8*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9843, metadata !2574), !dbg !9844
  store %struct.EbmlList* %list, %struct.EbmlList** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EbmlList** %list.addr, metadata !9845, metadata !2574), !dbg !9846
  store %struct.AVDictionary** %metadata, %struct.AVDictionary*** %metadata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %metadata.addr, metadata !9847, metadata !2574), !dbg !9848
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !9849, metadata !2574), !dbg !9850
  call void @llvm.dbg.declare(metadata %struct.MatroskaTag** %tags, metadata !9851, metadata !2574), !dbg !9861
  %0 = load %struct.EbmlList*, %struct.EbmlList** %list.addr, align 8, !dbg !9862
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %0, i32 0, i32 1, !dbg !9863
  %1 = load i8*, i8** %elem, align 8, !dbg !9863
  %2 = bitcast i8* %1 to %struct.MatroskaTag*, !dbg !9862
  store %struct.MatroskaTag* %2, %struct.MatroskaTag** %tags, align 8, !dbg !9861
  call void @llvm.dbg.declare(metadata [1024 x i8]* %key, metadata !9864, metadata !2574), !dbg !9865
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9866, metadata !2574), !dbg !9867
  store i32 0, i32* %i, align 4, !dbg !9868
  br label %for.cond, !dbg !9870

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !9871
  %4 = load %struct.EbmlList*, %struct.EbmlList** %list.addr, align 8, !dbg !9874
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %4, i32 0, i32 0, !dbg !9875
  %5 = load i32, i32* %nb_elem, align 8, !dbg !9875
  %cmp = icmp slt i32 %3, %5, !dbg !9876
  br i1 %cmp, label %for.body, label %for.end, !dbg !9877

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %lang, metadata !9878, metadata !2574), !dbg !9880
  %6 = load i32, i32* %i, align 4, !dbg !9881
  %idxprom = sext i32 %6 to i64, !dbg !9882
  %7 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9882
  %arrayidx = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %7, i64 %idxprom, !dbg !9882
  %lang1 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx, i32 0, i32 2, !dbg !9883
  %8 = load i8*, i8** %lang1, align 8, !dbg !9883
  %tobool = icmp ne i8* %8, null, !dbg !9882
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !9884

land.lhs.true:                                    ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !9885
  %idxprom2 = sext i32 %9 to i64, !dbg !9886
  %10 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9886
  %arrayidx3 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %10, i64 %idxprom2, !dbg !9886
  %lang4 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx3, i32 0, i32 2, !dbg !9887
  %11 = load i8*, i8** %lang4, align 8, !dbg !9887
  %call = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i32 0, i32 0)) #10, !dbg !9888
  %tobool5 = icmp ne i32 %call, 0, !dbg !9888
  br i1 %tobool5, label %cond.true, label %cond.false, !dbg !9889

cond.true:                                        ; preds = %land.lhs.true
  %12 = load i32, i32* %i, align 4, !dbg !9891
  %idxprom6 = sext i32 %12 to i64, !dbg !9892
  %13 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9892
  %arrayidx7 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %13, i64 %idxprom6, !dbg !9892
  %lang8 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx7, i32 0, i32 2, !dbg !9893
  %14 = load i8*, i8** %lang8, align 8, !dbg !9893
  br label %cond.end, !dbg !9894

cond.false:                                       ; preds = %land.lhs.true, %for.body
  br label %cond.end, !dbg !9896

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %14, %cond.true ], [ null, %cond.false ], !dbg !9898
  store i8* %cond, i8** %lang, align 8, !dbg !9900
  %15 = load i32, i32* %i, align 4, !dbg !9901
  %idxprom9 = sext i32 %15 to i64, !dbg !9903
  %16 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9903
  %arrayidx10 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %16, i64 %idxprom9, !dbg !9903
  %name = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx10, i32 0, i32 0, !dbg !9904
  %17 = load i8*, i8** %name, align 8, !dbg !9904
  %tobool11 = icmp ne i8* %17, null, !dbg !9903
  br i1 %tobool11, label %if.end, label %if.then, !dbg !9905

if.then:                                          ; preds = %cond.end
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9906
  %19 = bitcast %struct.AVFormatContext* %18 to i8*, !dbg !9906
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 24, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.105, i32 0, i32 0)), !dbg !9908
  br label %for.inc, !dbg !9909

if.end:                                           ; preds = %cond.end
  %20 = load i8*, i8** %prefix.addr, align 8, !dbg !9910
  %tobool12 = icmp ne i8* %20, null, !dbg !9910
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !9912

if.then13:                                        ; preds = %if.end
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %key, i32 0, i32 0, !dbg !9913
  %21 = load i8*, i8** %prefix.addr, align 8, !dbg !9914
  %22 = load i32, i32* %i, align 4, !dbg !9915
  %idxprom14 = sext i32 %22 to i64, !dbg !9916
  %23 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9916
  %arrayidx15 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %23, i64 %idxprom14, !dbg !9916
  %name16 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx15, i32 0, i32 0, !dbg !9917
  %24 = load i8*, i8** %name16, align 8, !dbg !9917
  %call17 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 1024, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.106, i32 0, i32 0), i8* %21, i8* %24) #11, !dbg !9918
  br label %if.end23, !dbg !9918

if.else:                                          ; preds = %if.end
  %arraydecay18 = getelementptr inbounds [1024 x i8], [1024 x i8]* %key, i32 0, i32 0, !dbg !9919
  %25 = load i32, i32* %i, align 4, !dbg !9920
  %idxprom19 = sext i32 %25 to i64, !dbg !9921
  %26 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9921
  %arrayidx20 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %26, i64 %idxprom19, !dbg !9921
  %name21 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx20, i32 0, i32 0, !dbg !9922
  %27 = load i8*, i8** %name21, align 8, !dbg !9922
  %call22 = call i64 @av_strlcpy(i8* %arraydecay18, i8* %27, i64 1024), !dbg !9923
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then13
  %28 = load i32, i32* %i, align 4, !dbg !9924
  %idxprom24 = sext i32 %28 to i64, !dbg !9926
  %29 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9926
  %arrayidx25 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %29, i64 %idxprom24, !dbg !9926
  %def = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx25, i32 0, i32 3, !dbg !9927
  %30 = load i64, i64* %def, align 8, !dbg !9927
  %tobool26 = icmp ne i64 %30, 0, !dbg !9926
  br i1 %tobool26, label %if.then28, label %lor.lhs.false, !dbg !9928

lor.lhs.false:                                    ; preds = %if.end23
  %31 = load i8*, i8** %lang, align 8, !dbg !9929
  %tobool27 = icmp ne i8* %31, null, !dbg !9929
  br i1 %tobool27, label %if.end43, label %if.then28, !dbg !9931

if.then28:                                        ; preds = %lor.lhs.false, %if.end23
  %32 = load %struct.AVDictionary**, %struct.AVDictionary*** %metadata.addr, align 8, !dbg !9932
  %arraydecay29 = getelementptr inbounds [1024 x i8], [1024 x i8]* %key, i32 0, i32 0, !dbg !9934
  %33 = load i32, i32* %i, align 4, !dbg !9935
  %idxprom30 = sext i32 %33 to i64, !dbg !9936
  %34 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9936
  %arrayidx31 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %34, i64 %idxprom30, !dbg !9936
  %string = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx31, i32 0, i32 1, !dbg !9937
  %35 = load i8*, i8** %string, align 8, !dbg !9937
  %call32 = call i32 @av_dict_set(%struct.AVDictionary** %32, i8* %arraydecay29, i8* %35, i32 0), !dbg !9938
  %36 = load i32, i32* %i, align 4, !dbg !9939
  %idxprom33 = sext i32 %36 to i64, !dbg !9941
  %37 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9941
  %arrayidx34 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %37, i64 %idxprom33, !dbg !9941
  %sub = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx34, i32 0, i32 4, !dbg !9942
  %nb_elem35 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %sub, i32 0, i32 0, !dbg !9943
  %38 = load i32, i32* %nb_elem35, align 8, !dbg !9943
  %tobool36 = icmp ne i32 %38, 0, !dbg !9941
  br i1 %tobool36, label %if.then37, label %if.end42, !dbg !9944

if.then37:                                        ; preds = %if.then28
  %39 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9945
  %40 = load i32, i32* %i, align 4, !dbg !9946
  %idxprom38 = sext i32 %40 to i64, !dbg !9947
  %41 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9947
  %arrayidx39 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %41, i64 %idxprom38, !dbg !9947
  %sub40 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx39, i32 0, i32 4, !dbg !9948
  %42 = load %struct.AVDictionary**, %struct.AVDictionary*** %metadata.addr, align 8, !dbg !9949
  %arraydecay41 = getelementptr inbounds [1024 x i8], [1024 x i8]* %key, i32 0, i32 0, !dbg !9950
  call void @matroska_convert_tag(%struct.AVFormatContext* %39, %struct.EbmlList* %sub40, %struct.AVDictionary** %42, i8* %arraydecay41), !dbg !9951
  br label %if.end42, !dbg !9951

if.end42:                                         ; preds = %if.then37, %if.then28
  br label %if.end43, !dbg !9952

if.end43:                                         ; preds = %if.end42, %lor.lhs.false
  %43 = load i8*, i8** %lang, align 8, !dbg !9953
  %tobool44 = icmp ne i8* %43, null, !dbg !9953
  br i1 %tobool44, label %if.then45, label %if.end66, !dbg !9955

if.then45:                                        ; preds = %if.end43
  %arraydecay46 = getelementptr inbounds [1024 x i8], [1024 x i8]* %key, i32 0, i32 0, !dbg !9956
  %call47 = call i64 @av_strlcat(i8* %arraydecay46, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.107, i32 0, i32 0), i64 1024), !dbg !9958
  %arraydecay48 = getelementptr inbounds [1024 x i8], [1024 x i8]* %key, i32 0, i32 0, !dbg !9959
  %44 = load i8*, i8** %lang, align 8, !dbg !9960
  %call49 = call i64 @av_strlcat(i8* %arraydecay48, i8* %44, i64 1024), !dbg !9961
  %45 = load %struct.AVDictionary**, %struct.AVDictionary*** %metadata.addr, align 8, !dbg !9962
  %arraydecay50 = getelementptr inbounds [1024 x i8], [1024 x i8]* %key, i32 0, i32 0, !dbg !9963
  %46 = load i32, i32* %i, align 4, !dbg !9964
  %idxprom51 = sext i32 %46 to i64, !dbg !9965
  %47 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9965
  %arrayidx52 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %47, i64 %idxprom51, !dbg !9965
  %string53 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx52, i32 0, i32 1, !dbg !9966
  %48 = load i8*, i8** %string53, align 8, !dbg !9966
  %call54 = call i32 @av_dict_set(%struct.AVDictionary** %45, i8* %arraydecay50, i8* %48, i32 0), !dbg !9967
  %49 = load i32, i32* %i, align 4, !dbg !9968
  %idxprom55 = sext i32 %49 to i64, !dbg !9970
  %50 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9970
  %arrayidx56 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %50, i64 %idxprom55, !dbg !9970
  %sub57 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx56, i32 0, i32 4, !dbg !9971
  %nb_elem58 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %sub57, i32 0, i32 0, !dbg !9972
  %51 = load i32, i32* %nb_elem58, align 8, !dbg !9972
  %tobool59 = icmp ne i32 %51, 0, !dbg !9970
  br i1 %tobool59, label %if.then60, label %if.end65, !dbg !9973

if.then60:                                        ; preds = %if.then45
  %52 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9974
  %53 = load i32, i32* %i, align 4, !dbg !9975
  %idxprom61 = sext i32 %53 to i64, !dbg !9976
  %54 = load %struct.MatroskaTag*, %struct.MatroskaTag** %tags, align 8, !dbg !9976
  %arrayidx62 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %54, i64 %idxprom61, !dbg !9976
  %sub63 = getelementptr inbounds %struct.MatroskaTag, %struct.MatroskaTag* %arrayidx62, i32 0, i32 4, !dbg !9977
  %55 = load %struct.AVDictionary**, %struct.AVDictionary*** %metadata.addr, align 8, !dbg !9978
  %arraydecay64 = getelementptr inbounds [1024 x i8], [1024 x i8]* %key, i32 0, i32 0, !dbg !9979
  call void @matroska_convert_tag(%struct.AVFormatContext* %52, %struct.EbmlList* %sub63, %struct.AVDictionary** %55, i8* %arraydecay64), !dbg !9980
  br label %if.end65, !dbg !9980

if.end65:                                         ; preds = %if.then60, %if.then45
  br label %if.end66, !dbg !9981

if.end66:                                         ; preds = %if.end65, %if.end43
  br label %for.inc, !dbg !9982

for.inc:                                          ; preds = %if.end66, %if.then
  %56 = load i32, i32* %i, align 4, !dbg !9983
  %inc = add nsw i32 %56, 1, !dbg !9983
  store i32 %inc, i32* %i, align 4, !dbg !9983
  br label %for.cond, !dbg !9985, !llvm.loop !9986

for.end:                                          ; preds = %for.cond
  %57 = load %struct.AVDictionary**, %struct.AVDictionary*** %metadata.addr, align 8, !dbg !9988
  call void @ff_metadata_conv(%struct.AVDictionary** %57, %struct.AVMetadataConv* null, %struct.AVMetadataConv* getelementptr inbounds ([0 x %struct.AVMetadataConv], [0 x %struct.AVMetadataConv]* @ff_mkv_metadata_conv, i32 0, i32 0)), !dbg !9989
  ret void, !dbg !9990
}

declare i64 @av_strlcpy(i8*, i8*, i64) #4

declare i64 @av_strlcat(i8*, i8*, i64) #4

declare void @ff_metadata_conv(%struct.AVDictionary**, %struct.AVMetadataConv*, %struct.AVMetadataConv*) #4

; Function Attrs: nounwind uwtable
define internal i32 @matroska_deliver_packet(%struct.MatroskaDemuxContext* %matroska, %struct.AVPacket* %pkt) #0 !dbg !9991 {
entry:
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %tracks = alloca %struct.MatroskaTrack*, align 8
  %track = alloca %struct.MatroskaTrack*, align 8
  %pal = alloca i8*, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !9994, metadata !2574), !dbg !9995
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !9996, metadata !2574), !dbg !9997
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !9998
  %queue = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 18, !dbg !10000
  %1 = load %struct.AVPacketList*, %struct.AVPacketList** %queue, align 8, !dbg !10000
  %tobool = icmp ne %struct.AVPacketList* %1, null, !dbg !9998
  br i1 %tobool, label %if.then, label %if.end10, !dbg !10001

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %tracks, metadata !10002, metadata !2574), !dbg !10004
  %2 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10005
  %tracks1 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %2, i32 0, i32 11, !dbg !10006
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %tracks1, i32 0, i32 1, !dbg !10007
  %3 = load i8*, i8** %elem, align 8, !dbg !10007
  %4 = bitcast i8* %3 to %struct.MatroskaTrack*, !dbg !10005
  store %struct.MatroskaTrack* %4, %struct.MatroskaTrack** %tracks, align 8, !dbg !10004
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track, metadata !10008, metadata !2574), !dbg !10009
  %5 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10010
  %queue2 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %5, i32 0, i32 18, !dbg !10011
  %6 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10012
  %queue_end = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %6, i32 0, i32 19, !dbg !10013
  %7 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10014
  %call = call i32 @ff_packet_list_get(%struct.AVPacketList** %queue2, %struct.AVPacketList** %queue_end, %struct.AVPacket* %7), !dbg !10015
  %8 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10016
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i32 0, i32 5, !dbg !10017
  %9 = load i32, i32* %stream_index, align 4, !dbg !10017
  %idxprom = sext i32 %9 to i64, !dbg !10018
  %10 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %tracks, align 8, !dbg !10018
  %arrayidx = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %10, i64 %idxprom, !dbg !10018
  store %struct.MatroskaTrack* %arrayidx, %struct.MatroskaTrack** %track, align 8, !dbg !10019
  %11 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10020
  %has_palette = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %11, i32 0, i32 23, !dbg !10022
  %12 = load i32, i32* %has_palette, align 8, !dbg !10022
  %tobool3 = icmp ne i32 %12, 0, !dbg !10020
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !10023

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %pal, metadata !10024, metadata !2574), !dbg !10026
  %13 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !10027
  %call5 = call i8* @av_packet_new_side_data(%struct.AVPacket* %13, i32 0, i32 1024), !dbg !10028
  store i8* %call5, i8** %pal, align 8, !dbg !10026
  %14 = load i8*, i8** %pal, align 8, !dbg !10029
  %tobool6 = icmp ne i8* %14, null, !dbg !10029
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !10031

if.then7:                                         ; preds = %if.then4
  %15 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10032
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %15, i32 0, i32 1, !dbg !10034
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !10034
  %17 = bitcast %struct.AVFormatContext* %16 to i8*, !dbg !10032
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.108, i32 0, i32 0)), !dbg !10035
  br label %if.end, !dbg !10036

if.else:                                          ; preds = %if.then4
  %18 = load i8*, i8** %pal, align 8, !dbg !10037
  %19 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10039
  %palette = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %19, i32 0, i32 22, !dbg !10040
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %palette, i32 0, i32 0, !dbg !10041
  %20 = bitcast i32* %arraydecay to i8*, !dbg !10041
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %20, i64 1024, i32 1, i1 false), !dbg !10041
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %21 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10042
  %has_palette8 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %21, i32 0, i32 23, !dbg !10043
  store i32 0, i32* %has_palette8, align 8, !dbg !10044
  br label %if.end9, !dbg !10045

if.end9:                                          ; preds = %if.end, %if.then
  store i32 0, i32* %retval, align 4, !dbg !10046
  br label %return, !dbg !10046

if.end10:                                         ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !10047
  br label %return, !dbg !10047

return:                                           ; preds = %if.end10, %if.end9
  %22 = load i32, i32* %retval, align 4, !dbg !10048
  ret i32 %22, !dbg !10048
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_parse_cluster(%struct.MatroskaDemuxContext* %matroska) #0 !dbg !10049 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !10050
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %cluster = alloca %struct.MatroskaCluster, align 8
  %blocks_list = alloca %struct.EbmlList*, align 8
  %blocks = alloca %struct.MatroskaBlock*, align 8
  %i = alloca i32, align 4
  %res = alloca i32, align 4
  %pos = alloca i64, align 8
  %is_keyframe = alloca i32, align 4
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !10052, metadata !2574), !dbg !10053
  call void @llvm.dbg.declare(metadata %struct.MatroskaCluster* %cluster, metadata !10054, metadata !2574), !dbg !10055
  %0 = bitcast %struct.MatroskaCluster* %cluster to i8*, !dbg !10055
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 24, i32 8, i1 false), !dbg !10055
  call void @llvm.dbg.declare(metadata %struct.EbmlList** %blocks_list, metadata !10056, metadata !2574), !dbg !10057
  call void @llvm.dbg.declare(metadata %struct.MatroskaBlock** %blocks, metadata !10058, metadata !2574), !dbg !10070
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10071, metadata !2574), !dbg !10072
  call void @llvm.dbg.declare(metadata i32* %res, metadata !10073, metadata !2574), !dbg !10074
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !10075, metadata !2574), !dbg !10076
  %1 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10077
  %contains_ssa = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %1, i32 0, i32 29, !dbg !10079
  %2 = load i32, i32* %contains_ssa, align 8, !dbg !10079
  %tobool = icmp ne i32 %2, 0, !dbg !10077
  br i1 %tobool, label %if.end, label %if.then, !dbg !10080

if.then:                                          ; preds = %entry
  %3 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10081
  %call = call i32 @matroska_parse_cluster_incremental(%struct.MatroskaDemuxContext* %3), !dbg !10082
  store i32 %call, i32* %retval, align 4, !dbg !10083
  br label %return, !dbg !10083

if.end:                                           ; preds = %entry
  %4 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10084
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %4, i32 0, i32 1, !dbg !10085
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !10085
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 4, !dbg !10086
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !10086
  store %struct.AVIOContext* %6, %struct.AVIOContext** %s.addr.i, align 8, !dbg !10087
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !10088
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %7, i64 0, i32 1) #11, !dbg !10089
  store i64 %call.i, i64* %pos, align 8, !dbg !10090
  %8 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10091
  %current_id = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %8, i32 0, i32 5, !dbg !10093
  %9 = load i32, i32* %current_id, align 4, !dbg !10093
  %tobool2 = icmp ne i32 %9, 0, !dbg !10091
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10094

if.then3:                                         ; preds = %if.end
  %10 = load i64, i64* %pos, align 8, !dbg !10095
  %sub = sub nsw i64 %10, 4, !dbg !10095
  store i64 %sub, i64* %pos, align 8, !dbg !10095
  br label %if.end4, !dbg !10096

if.end4:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10097
  %12 = bitcast %struct.MatroskaCluster* %cluster to i8*, !dbg !10098
  %call5 = call i32 @ebml_parse(%struct.MatroskaDemuxContext* %11, %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_clusters to [6 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %12), !dbg !10099
  store i32 %call5, i32* %res, align 4, !dbg !10100
  %blocks6 = getelementptr inbounds %struct.MatroskaCluster, %struct.MatroskaCluster* %cluster, i32 0, i32 1, !dbg !10101
  store %struct.EbmlList* %blocks6, %struct.EbmlList** %blocks_list, align 8, !dbg !10102
  %13 = load %struct.EbmlList*, %struct.EbmlList** %blocks_list, align 8, !dbg !10103
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %13, i32 0, i32 1, !dbg !10104
  %14 = load i8*, i8** %elem, align 8, !dbg !10104
  %15 = bitcast i8* %14 to %struct.MatroskaBlock*, !dbg !10103
  store %struct.MatroskaBlock* %15, %struct.MatroskaBlock** %blocks, align 8, !dbg !10105
  store i32 0, i32* %i, align 4, !dbg !10106
  br label %for.cond, !dbg !10108

for.cond:                                         ; preds = %for.inc, %if.end4
  %16 = load i32, i32* %i, align 4, !dbg !10109
  %17 = load %struct.EbmlList*, %struct.EbmlList** %blocks_list, align 8, !dbg !10112
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %17, i32 0, i32 0, !dbg !10113
  %18 = load i32, i32* %nb_elem, align 8, !dbg !10113
  %cmp = icmp slt i32 %16, %18, !dbg !10114
  br i1 %cmp, label %for.body, label %for.end, !dbg !10115

for.body:                                         ; preds = %for.cond
  %19 = load i32, i32* %i, align 4, !dbg !10116
  %idxprom = sext i32 %19 to i64, !dbg !10118
  %20 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10118
  %arrayidx = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %20, i64 %idxprom, !dbg !10118
  %bin = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx, i32 0, i32 3, !dbg !10119
  %size = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin, i32 0, i32 0, !dbg !10120
  %21 = load i32, i32* %size, align 8, !dbg !10120
  %cmp7 = icmp sgt i32 %21, 0, !dbg !10121
  br i1 %cmp7, label %land.lhs.true, label %if.end39, !dbg !10122

land.lhs.true:                                    ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !10123
  %idxprom8 = sext i32 %22 to i64, !dbg !10125
  %23 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10125
  %arrayidx9 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %23, i64 %idxprom8, !dbg !10125
  %bin10 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx9, i32 0, i32 3, !dbg !10126
  %data = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin10, i32 0, i32 2, !dbg !10127
  %24 = load i8*, i8** %data, align 8, !dbg !10127
  %tobool11 = icmp ne i8* %24, null, !dbg !10125
  br i1 %tobool11, label %if.then12, label %if.end39, !dbg !10128

if.then12:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %is_keyframe, metadata !10129, metadata !2574), !dbg !10131
  %25 = load i32, i32* %i, align 4, !dbg !10132
  %idxprom13 = sext i32 %25 to i64, !dbg !10133
  %26 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10133
  %arrayidx14 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %26, i64 %idxprom13, !dbg !10133
  %non_simple = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx14, i32 0, i32 2, !dbg !10134
  %27 = load i64, i64* %non_simple, align 8, !dbg !10134
  %tobool15 = icmp ne i64 %27, 0, !dbg !10133
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !10133

cond.true:                                        ; preds = %if.then12
  %28 = load i32, i32* %i, align 4, !dbg !10135
  %idxprom16 = sext i32 %28 to i64, !dbg !10137
  %29 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10137
  %arrayidx17 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %29, i64 %idxprom16, !dbg !10137
  %reference = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx17, i32 0, i32 1, !dbg !10138
  %30 = load i64, i64* %reference, align 8, !dbg !10138
  %cmp18 = icmp eq i64 %30, -9223372036854775808, !dbg !10139
  %conv = zext i1 %cmp18 to i32, !dbg !10139
  br label %cond.end, !dbg !10140

cond.false:                                       ; preds = %if.then12
  br label %cond.end, !dbg !10141

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ -1, %cond.false ], !dbg !10143
  store i32 %cond, i32* %is_keyframe, align 4, !dbg !10145
  %31 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10146
  %32 = load i32, i32* %i, align 4, !dbg !10147
  %idxprom19 = sext i32 %32 to i64, !dbg !10148
  %33 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10148
  %arrayidx20 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %33, i64 %idxprom19, !dbg !10148
  %bin21 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx20, i32 0, i32 3, !dbg !10149
  %buf = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin21, i32 0, i32 1, !dbg !10150
  %34 = load %struct.AVBufferRef*, %struct.AVBufferRef** %buf, align 8, !dbg !10150
  %35 = load i32, i32* %i, align 4, !dbg !10151
  %idxprom22 = sext i32 %35 to i64, !dbg !10152
  %36 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10152
  %arrayidx23 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %36, i64 %idxprom22, !dbg !10152
  %bin24 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx23, i32 0, i32 3, !dbg !10153
  %data25 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin24, i32 0, i32 2, !dbg !10154
  %37 = load i8*, i8** %data25, align 8, !dbg !10154
  %38 = load i32, i32* %i, align 4, !dbg !10155
  %idxprom26 = sext i32 %38 to i64, !dbg !10156
  %39 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10156
  %arrayidx27 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %39, i64 %idxprom26, !dbg !10156
  %bin28 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx27, i32 0, i32 3, !dbg !10157
  %size29 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin28, i32 0, i32 0, !dbg !10158
  %40 = load i32, i32* %size29, align 8, !dbg !10158
  %41 = load i32, i32* %i, align 4, !dbg !10159
  %idxprom30 = sext i32 %41 to i64, !dbg !10160
  %42 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10160
  %arrayidx31 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %42, i64 %idxprom30, !dbg !10160
  %bin32 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx31, i32 0, i32 3, !dbg !10161
  %pos33 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin32, i32 0, i32 3, !dbg !10162
  %43 = load i64, i64* %pos33, align 8, !dbg !10162
  %timecode = getelementptr inbounds %struct.MatroskaCluster, %struct.MatroskaCluster* %cluster, i32 0, i32 0, !dbg !10163
  %44 = load i64, i64* %timecode, align 8, !dbg !10163
  %45 = load i32, i32* %i, align 4, !dbg !10164
  %idxprom34 = sext i32 %45 to i64, !dbg !10165
  %46 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10165
  %arrayidx35 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %46, i64 %idxprom34, !dbg !10165
  %duration = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx35, i32 0, i32 0, !dbg !10166
  %47 = load i64, i64* %duration, align 8, !dbg !10166
  %48 = load i32, i32* %is_keyframe, align 4, !dbg !10167
  %49 = load i64, i64* %pos, align 8, !dbg !10168
  %50 = load i32, i32* %i, align 4, !dbg !10169
  %idxprom36 = sext i32 %50 to i64, !dbg !10170
  %51 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10170
  %arrayidx37 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %51, i64 %idxprom36, !dbg !10170
  %discard_padding = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx37, i32 0, i32 6, !dbg !10171
  %52 = load i64, i64* %discard_padding, align 8, !dbg !10171
  %call38 = call i32 @matroska_parse_block(%struct.MatroskaDemuxContext* %31, %struct.AVBufferRef* %34, i8* %37, i32 %40, i64 %43, i64 %44, i64 %47, i32 %48, i8* null, i64 0, i32 0, i64 %49, i64 %52), !dbg !10172
  store i32 %call38, i32* %res, align 4, !dbg !10173
  br label %if.end39, !dbg !10174

if.end39:                                         ; preds = %cond.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !10175

for.inc:                                          ; preds = %if.end39
  %53 = load i32, i32* %i, align 4, !dbg !10177
  %inc = add nsw i32 %53, 1, !dbg !10177
  store i32 %inc, i32* %i, align 4, !dbg !10177
  br label %for.cond, !dbg !10179, !llvm.loop !10180

for.end:                                          ; preds = %for.cond
  %54 = bitcast %struct.MatroskaCluster* %cluster to i8*, !dbg !10182
  call void @ebml_free(%struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_cluster to [6 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %54), !dbg !10183
  %55 = load i32, i32* %res, align 4, !dbg !10184
  store i32 %55, i32* %retval, align 4, !dbg !10185
  br label %return, !dbg !10185

return:                                           ; preds = %for.end, %if.then
  %56 = load i32, i32* %retval, align 4, !dbg !10186
  ret i32 %56, !dbg !10186
}

declare i32 @ff_packet_list_get(%struct.AVPacketList**, %struct.AVPacketList**, %struct.AVPacket*) #4

declare i8* @av_packet_new_side_data(%struct.AVPacket*, i32, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @matroska_parse_cluster_incremental(%struct.MatroskaDemuxContext* %matroska) #0 !dbg !10187 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !10188
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %blocks_list = alloca %struct.EbmlList*, align 8
  %blocks = alloca %struct.MatroskaBlock*, align 8
  %i = alloca i32, align 4
  %res = alloca i32, align 4
  %is_keyframe = alloca i32, align 4
  %additional = alloca i8*, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !10192, metadata !2574), !dbg !10193
  call void @llvm.dbg.declare(metadata %struct.EbmlList** %blocks_list, metadata !10194, metadata !2574), !dbg !10195
  call void @llvm.dbg.declare(metadata %struct.MatroskaBlock** %blocks, metadata !10196, metadata !2574), !dbg !10197
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10198, metadata !2574), !dbg !10199
  call void @llvm.dbg.declare(metadata i32* %res, metadata !10200, metadata !2574), !dbg !10201
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10202
  %1 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10203
  %current_cluster = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %1, i32 0, i32 28, !dbg !10204
  %2 = bitcast %struct.MatroskaCluster* %current_cluster to i8*, !dbg !10205
  %call = call i32 @ebml_parse(%struct.MatroskaDemuxContext* %0, %struct.EbmlSyntax* getelementptr inbounds ([11 x %struct.EbmlSyntax], [11 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_cluster_incremental_parsing to [11 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %2), !dbg !10206
  store i32 %call, i32* %res, align 4, !dbg !10207
  %3 = load i32, i32* %res, align 4, !dbg !10208
  %cmp = icmp eq i32 %3, 1, !dbg !10209
  br i1 %cmp, label %if.then, label %if.end18, !dbg !10210

if.then:                                          ; preds = %entry
  %4 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10211
  %current_cluster_pos = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %4, i32 0, i32 27, !dbg !10213
  %5 = load i64, i64* %current_cluster_pos, align 8, !dbg !10213
  %tobool = icmp ne i64 %5, 0, !dbg !10211
  br i1 %tobool, label %if.then1, label %if.end, !dbg !10214

if.then1:                                         ; preds = %if.then
  %6 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10215
  %call2 = call i32 @ebml_level_end(%struct.MatroskaDemuxContext* %6), !dbg !10216
  br label %if.end, !dbg !10216

if.end:                                           ; preds = %if.then1, %if.then
  %7 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10217
  %current_cluster3 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i32 0, i32 28, !dbg !10218
  %8 = bitcast %struct.MatroskaCluster* %current_cluster3 to i8*, !dbg !10219
  call void @ebml_free(%struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_cluster to [6 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %8), !dbg !10220
  %9 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10221
  %current_cluster4 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %9, i32 0, i32 28, !dbg !10222
  %10 = bitcast %struct.MatroskaCluster* %current_cluster4 to i8*, !dbg !10223
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 24, i32 8, i1 false), !dbg !10223
  %11 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10224
  %current_cluster_num_blocks = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %11, i32 0, i32 26, !dbg !10225
  store i32 0, i32* %current_cluster_num_blocks, align 4, !dbg !10226
  %12 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10227
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %12, i32 0, i32 1, !dbg !10228
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !10228
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i32 0, i32 4, !dbg !10229
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !10229
  store %struct.AVIOContext* %14, %struct.AVIOContext** %s.addr.i, align 8, !dbg !10230
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !10231
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %15, i64 0, i32 1) #11, !dbg !10232
  %16 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10233
  %current_cluster_pos6 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %16, i32 0, i32 27, !dbg !10234
  store i64 %call.i, i64* %current_cluster_pos6, align 8, !dbg !10235
  %17 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10236
  %current_id = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %17, i32 0, i32 5, !dbg !10238
  %18 = load i32, i32* %current_id, align 4, !dbg !10238
  %tobool7 = icmp ne i32 %18, 0, !dbg !10236
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !10239

if.then8:                                         ; preds = %if.end
  %19 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10240
  %current_cluster_pos9 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %19, i32 0, i32 27, !dbg !10241
  %20 = load i64, i64* %current_cluster_pos9, align 8, !dbg !10242
  %sub = sub nsw i64 %20, 4, !dbg !10242
  store i64 %sub, i64* %current_cluster_pos9, align 8, !dbg !10242
  br label %if.end10, !dbg !10240

if.end10:                                         ; preds = %if.then8, %if.end
  %21 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10243
  %22 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10244
  %current_cluster11 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %22, i32 0, i32 28, !dbg !10245
  %23 = bitcast %struct.MatroskaCluster* %current_cluster11 to i8*, !dbg !10246
  %call12 = call i32 @ebml_parse(%struct.MatroskaDemuxContext* %21, %struct.EbmlSyntax* getelementptr inbounds ([6 x %struct.EbmlSyntax], [6 x %struct.EbmlSyntax]* bitcast (<{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_clusters_incremental to [6 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %23), !dbg !10247
  store i32 %call12, i32* %res, align 4, !dbg !10248
  %24 = load i32, i32* %res, align 4, !dbg !10249
  %cmp13 = icmp eq i32 %24, 1, !dbg !10251
  br i1 %cmp13, label %if.then14, label %if.end17, !dbg !10252

if.then14:                                        ; preds = %if.end10
  %25 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10253
  %26 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10254
  %current_cluster15 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %26, i32 0, i32 28, !dbg !10255
  %27 = bitcast %struct.MatroskaCluster* %current_cluster15 to i8*, !dbg !10256
  %call16 = call i32 @ebml_parse(%struct.MatroskaDemuxContext* %25, %struct.EbmlSyntax* getelementptr inbounds ([11 x %struct.EbmlSyntax], [11 x %struct.EbmlSyntax]* bitcast (<{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_cluster_incremental_parsing to [11 x %struct.EbmlSyntax]*), i32 0, i32 0), i8* %27), !dbg !10257
  store i32 %call16, i32* %res, align 4, !dbg !10258
  br label %if.end17, !dbg !10259

if.end17:                                         ; preds = %if.then14, %if.end10
  br label %if.end18, !dbg !10260

if.end18:                                         ; preds = %if.end17, %entry
  %28 = load i32, i32* %res, align 4, !dbg !10261
  %tobool19 = icmp ne i32 %28, 0, !dbg !10261
  br i1 %tobool19, label %if.end95, label %land.lhs.true, !dbg !10263

land.lhs.true:                                    ; preds = %if.end18
  %29 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10264
  %current_cluster_num_blocks20 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %29, i32 0, i32 26, !dbg !10265
  %30 = load i32, i32* %current_cluster_num_blocks20, align 4, !dbg !10265
  %31 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10266
  %current_cluster21 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %31, i32 0, i32 28, !dbg !10267
  %blocks22 = getelementptr inbounds %struct.MatroskaCluster, %struct.MatroskaCluster* %current_cluster21, i32 0, i32 1, !dbg !10268
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %blocks22, i32 0, i32 0, !dbg !10269
  %32 = load i32, i32* %nb_elem, align 8, !dbg !10269
  %cmp23 = icmp slt i32 %30, %32, !dbg !10270
  br i1 %cmp23, label %if.then24, label %if.end95, !dbg !10271

if.then24:                                        ; preds = %land.lhs.true
  %33 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10273
  %current_cluster25 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %33, i32 0, i32 28, !dbg !10275
  %blocks26 = getelementptr inbounds %struct.MatroskaCluster, %struct.MatroskaCluster* %current_cluster25, i32 0, i32 1, !dbg !10276
  store %struct.EbmlList* %blocks26, %struct.EbmlList** %blocks_list, align 8, !dbg !10277
  %34 = load %struct.EbmlList*, %struct.EbmlList** %blocks_list, align 8, !dbg !10278
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %34, i32 0, i32 1, !dbg !10279
  %35 = load i8*, i8** %elem, align 8, !dbg !10279
  %36 = bitcast i8* %35 to %struct.MatroskaBlock*, !dbg !10278
  store %struct.MatroskaBlock* %36, %struct.MatroskaBlock** %blocks, align 8, !dbg !10280
  %37 = load %struct.EbmlList*, %struct.EbmlList** %blocks_list, align 8, !dbg !10281
  %nb_elem27 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %37, i32 0, i32 0, !dbg !10282
  %38 = load i32, i32* %nb_elem27, align 8, !dbg !10282
  %39 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10283
  %current_cluster_num_blocks28 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %39, i32 0, i32 26, !dbg !10284
  store i32 %38, i32* %current_cluster_num_blocks28, align 4, !dbg !10285
  %40 = load %struct.EbmlList*, %struct.EbmlList** %blocks_list, align 8, !dbg !10286
  %nb_elem29 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %40, i32 0, i32 0, !dbg !10287
  %41 = load i32, i32* %nb_elem29, align 8, !dbg !10287
  %sub30 = sub nsw i32 %41, 1, !dbg !10288
  store i32 %sub30, i32* %i, align 4, !dbg !10289
  %42 = load i32, i32* %i, align 4, !dbg !10290
  %idxprom = sext i32 %42 to i64, !dbg !10292
  %43 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10292
  %arrayidx = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %43, i64 %idxprom, !dbg !10292
  %bin = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx, i32 0, i32 3, !dbg !10293
  %size = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin, i32 0, i32 0, !dbg !10294
  %44 = load i32, i32* %size, align 8, !dbg !10294
  %cmp31 = icmp sgt i32 %44, 0, !dbg !10295
  br i1 %cmp31, label %land.lhs.true32, label %if.end94, !dbg !10296

land.lhs.true32:                                  ; preds = %if.then24
  %45 = load i32, i32* %i, align 4, !dbg !10297
  %idxprom33 = sext i32 %45 to i64, !dbg !10299
  %46 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10299
  %arrayidx34 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %46, i64 %idxprom33, !dbg !10299
  %bin35 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx34, i32 0, i32 3, !dbg !10300
  %data = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin35, i32 0, i32 2, !dbg !10301
  %47 = load i8*, i8** %data, align 8, !dbg !10301
  %tobool36 = icmp ne i8* %47, null, !dbg !10299
  br i1 %tobool36, label %if.then37, label %if.end94, !dbg !10302

if.then37:                                        ; preds = %land.lhs.true32
  call void @llvm.dbg.declare(metadata i32* %is_keyframe, metadata !10303, metadata !2574), !dbg !10305
  %48 = load i32, i32* %i, align 4, !dbg !10306
  %idxprom38 = sext i32 %48 to i64, !dbg !10307
  %49 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10307
  %arrayidx39 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %49, i64 %idxprom38, !dbg !10307
  %non_simple = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx39, i32 0, i32 2, !dbg !10308
  %50 = load i64, i64* %non_simple, align 8, !dbg !10308
  %tobool40 = icmp ne i64 %50, 0, !dbg !10307
  br i1 %tobool40, label %cond.true, label %cond.false, !dbg !10307

cond.true:                                        ; preds = %if.then37
  %51 = load i32, i32* %i, align 4, !dbg !10309
  %idxprom41 = sext i32 %51 to i64, !dbg !10311
  %52 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10311
  %arrayidx42 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %52, i64 %idxprom41, !dbg !10311
  %reference = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx42, i32 0, i32 1, !dbg !10312
  %53 = load i64, i64* %reference, align 8, !dbg !10312
  %cmp43 = icmp eq i64 %53, -9223372036854775808, !dbg !10313
  %conv = zext i1 %cmp43 to i32, !dbg !10313
  br label %cond.end, !dbg !10314

cond.false:                                       ; preds = %if.then37
  br label %cond.end, !dbg !10315

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ -1, %cond.false ], !dbg !10317
  store i32 %cond, i32* %is_keyframe, align 4, !dbg !10319
  call void @llvm.dbg.declare(metadata i8** %additional, metadata !10320, metadata !2574), !dbg !10321
  %54 = load i32, i32* %i, align 4, !dbg !10322
  %idxprom44 = sext i32 %54 to i64, !dbg !10323
  %55 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10323
  %arrayidx45 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %55, i64 %idxprom44, !dbg !10323
  %additional46 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx45, i32 0, i32 5, !dbg !10324
  %size47 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %additional46, i32 0, i32 0, !dbg !10325
  %56 = load i32, i32* %size47, align 8, !dbg !10325
  %cmp48 = icmp sgt i32 %56, 0, !dbg !10326
  br i1 %cmp48, label %cond.true50, label %cond.false55, !dbg !10323

cond.true50:                                      ; preds = %cond.end
  %57 = load i32, i32* %i, align 4, !dbg !10327
  %idxprom51 = sext i32 %57 to i64, !dbg !10328
  %58 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10328
  %arrayidx52 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %58, i64 %idxprom51, !dbg !10328
  %additional53 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx52, i32 0, i32 5, !dbg !10329
  %data54 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %additional53, i32 0, i32 2, !dbg !10330
  %59 = load i8*, i8** %data54, align 8, !dbg !10330
  br label %cond.end56, !dbg !10331

cond.false55:                                     ; preds = %cond.end
  br label %cond.end56, !dbg !10332

cond.end56:                                       ; preds = %cond.false55, %cond.true50
  %cond57 = phi i8* [ %59, %cond.true50 ], [ null, %cond.false55 ], !dbg !10333
  store i8* %cond57, i8** %additional, align 8, !dbg !10334
  %60 = load i32, i32* %i, align 4, !dbg !10335
  %idxprom58 = sext i32 %60 to i64, !dbg !10337
  %61 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10337
  %arrayidx59 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %61, i64 %idxprom58, !dbg !10337
  %non_simple60 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx59, i32 0, i32 2, !dbg !10338
  %62 = load i64, i64* %non_simple60, align 8, !dbg !10338
  %tobool61 = icmp ne i64 %62, 0, !dbg !10337
  br i1 %tobool61, label %if.end65, label %if.then62, !dbg !10339

if.then62:                                        ; preds = %cond.end56
  %63 = load i32, i32* %i, align 4, !dbg !10340
  %idxprom63 = sext i32 %63 to i64, !dbg !10341
  %64 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10341
  %arrayidx64 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %64, i64 %idxprom63, !dbg !10341
  %duration = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx64, i32 0, i32 0, !dbg !10342
  store i64 0, i64* %duration, align 8, !dbg !10343
  br label %if.end65, !dbg !10341

if.end65:                                         ; preds = %if.then62, %cond.end56
  %65 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10344
  %66 = load i32, i32* %i, align 4, !dbg !10345
  %idxprom66 = sext i32 %66 to i64, !dbg !10346
  %67 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10346
  %arrayidx67 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %67, i64 %idxprom66, !dbg !10346
  %bin68 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx67, i32 0, i32 3, !dbg !10347
  %buf = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin68, i32 0, i32 1, !dbg !10348
  %68 = load %struct.AVBufferRef*, %struct.AVBufferRef** %buf, align 8, !dbg !10348
  %69 = load i32, i32* %i, align 4, !dbg !10349
  %idxprom69 = sext i32 %69 to i64, !dbg !10350
  %70 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10350
  %arrayidx70 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %70, i64 %idxprom69, !dbg !10350
  %bin71 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx70, i32 0, i32 3, !dbg !10351
  %data72 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin71, i32 0, i32 2, !dbg !10352
  %71 = load i8*, i8** %data72, align 8, !dbg !10352
  %72 = load i32, i32* %i, align 4, !dbg !10353
  %idxprom73 = sext i32 %72 to i64, !dbg !10354
  %73 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10354
  %arrayidx74 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %73, i64 %idxprom73, !dbg !10354
  %bin75 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx74, i32 0, i32 3, !dbg !10355
  %size76 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin75, i32 0, i32 0, !dbg !10356
  %74 = load i32, i32* %size76, align 8, !dbg !10356
  %75 = load i32, i32* %i, align 4, !dbg !10357
  %idxprom77 = sext i32 %75 to i64, !dbg !10358
  %76 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10358
  %arrayidx78 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %76, i64 %idxprom77, !dbg !10358
  %bin79 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx78, i32 0, i32 3, !dbg !10359
  %pos = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %bin79, i32 0, i32 3, !dbg !10360
  %77 = load i64, i64* %pos, align 8, !dbg !10360
  %78 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10361
  %current_cluster80 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %78, i32 0, i32 28, !dbg !10362
  %timecode = getelementptr inbounds %struct.MatroskaCluster, %struct.MatroskaCluster* %current_cluster80, i32 0, i32 0, !dbg !10363
  %79 = load i64, i64* %timecode, align 8, !dbg !10363
  %80 = load i32, i32* %i, align 4, !dbg !10364
  %idxprom81 = sext i32 %80 to i64, !dbg !10365
  %81 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10365
  %arrayidx82 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %81, i64 %idxprom81, !dbg !10365
  %duration83 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx82, i32 0, i32 0, !dbg !10366
  %82 = load i64, i64* %duration83, align 8, !dbg !10366
  %83 = load i32, i32* %is_keyframe, align 4, !dbg !10367
  %84 = load i8*, i8** %additional, align 8, !dbg !10368
  %85 = load i32, i32* %i, align 4, !dbg !10369
  %idxprom84 = sext i32 %85 to i64, !dbg !10370
  %86 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10370
  %arrayidx85 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %86, i64 %idxprom84, !dbg !10370
  %additional_id = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx85, i32 0, i32 4, !dbg !10371
  %87 = load i64, i64* %additional_id, align 8, !dbg !10371
  %88 = load i32, i32* %i, align 4, !dbg !10372
  %idxprom86 = sext i32 %88 to i64, !dbg !10373
  %89 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10373
  %arrayidx87 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %89, i64 %idxprom86, !dbg !10373
  %additional88 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx87, i32 0, i32 5, !dbg !10374
  %size89 = getelementptr inbounds %struct.EbmlBin, %struct.EbmlBin* %additional88, i32 0, i32 0, !dbg !10375
  %90 = load i32, i32* %size89, align 8, !dbg !10375
  %91 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10376
  %current_cluster_pos90 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %91, i32 0, i32 27, !dbg !10377
  %92 = load i64, i64* %current_cluster_pos90, align 8, !dbg !10377
  %93 = load i32, i32* %i, align 4, !dbg !10378
  %idxprom91 = sext i32 %93 to i64, !dbg !10379
  %94 = load %struct.MatroskaBlock*, %struct.MatroskaBlock** %blocks, align 8, !dbg !10379
  %arrayidx92 = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %94, i64 %idxprom91, !dbg !10379
  %discard_padding = getelementptr inbounds %struct.MatroskaBlock, %struct.MatroskaBlock* %arrayidx92, i32 0, i32 6, !dbg !10380
  %95 = load i64, i64* %discard_padding, align 8, !dbg !10380
  %call93 = call i32 @matroska_parse_block(%struct.MatroskaDemuxContext* %65, %struct.AVBufferRef* %68, i8* %71, i32 %74, i64 %77, i64 %79, i64 %82, i32 %83, i8* %84, i64 %87, i32 %90, i64 %92, i64 %95), !dbg !10381
  store i32 %call93, i32* %res, align 4, !dbg !10382
  br label %if.end94, !dbg !10383

if.end94:                                         ; preds = %if.end65, %land.lhs.true32, %if.then24
  br label %if.end95, !dbg !10384

if.end95:                                         ; preds = %if.end94, %land.lhs.true, %if.end18
  %96 = load i32, i32* %res, align 4, !dbg !10385
  ret i32 %96, !dbg !10386
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_parse_block(%struct.MatroskaDemuxContext* %matroska, %struct.AVBufferRef* %buf, i8* %data, i32 %size, i64 %pos, i64 %cluster_time, i64 %block_duration, i32 %is_keyframe, i8* %additional, i64 %additional_id, i32 %additional_size, i64 %cluster_pos, i64 %discard_padding) #0 !dbg !10387 {
entry:
  %x.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i, metadata !4343, metadata !2574), !dbg !10390
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %buf.addr = alloca %struct.AVBufferRef*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %pos.addr = alloca i64, align 8
  %cluster_time.addr = alloca i64, align 8
  %block_duration.addr = alloca i64, align 8
  %is_keyframe.addr = alloca i32, align 4
  %additional.addr = alloca i8*, align 8
  %additional_id.addr = alloca i64, align 8
  %additional_size.addr = alloca i32, align 4
  %cluster_pos.addr = alloca i64, align 8
  %discard_padding.addr = alloca i64, align 8
  %timecode = alloca i64, align 8
  %track = alloca %struct.MatroskaTrack*, align 8
  %res = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %block_time = alloca i16, align 2
  %lace_size = alloca i32*, align 8
  %n = alloca i32, align 4
  %flags = alloca i32, align 4
  %laces = alloca i32, align 4
  %num = alloca i64, align 8
  %trust_default_duration = alloca i32, align 4
  %lace_duration = alloca i64, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !10392, metadata !2574), !dbg !10393
  store %struct.AVBufferRef* %buf, %struct.AVBufferRef** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBufferRef** %buf.addr, metadata !10394, metadata !2574), !dbg !10395
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10396, metadata !2574), !dbg !10397
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10398, metadata !2574), !dbg !10399
  store i64 %pos, i64* %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pos.addr, metadata !10400, metadata !2574), !dbg !10401
  store i64 %cluster_time, i64* %cluster_time.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cluster_time.addr, metadata !10402, metadata !2574), !dbg !10403
  store i64 %block_duration, i64* %block_duration.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %block_duration.addr, metadata !10404, metadata !2574), !dbg !10405
  store i32 %is_keyframe, i32* %is_keyframe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_keyframe.addr, metadata !10406, metadata !2574), !dbg !10407
  store i8* %additional, i8** %additional.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %additional.addr, metadata !10408, metadata !2574), !dbg !10409
  store i64 %additional_id, i64* %additional_id.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %additional_id.addr, metadata !10410, metadata !2574), !dbg !10411
  store i32 %additional_size, i32* %additional_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %additional_size.addr, metadata !10412, metadata !2574), !dbg !10413
  store i64 %cluster_pos, i64* %cluster_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cluster_pos.addr, metadata !10414, metadata !2574), !dbg !10415
  store i64 %discard_padding, i64* %discard_padding.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %discard_padding.addr, metadata !10416, metadata !2574), !dbg !10417
  call void @llvm.dbg.declare(metadata i64* %timecode, metadata !10418, metadata !2574), !dbg !10419
  store i64 -9223372036854775808, i64* %timecode, align 8, !dbg !10419
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track, metadata !10420, metadata !2574), !dbg !10421
  call void @llvm.dbg.declare(metadata i32* %res, metadata !10422, metadata !2574), !dbg !10423
  store i32 0, i32* %res, align 4, !dbg !10423
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !10424, metadata !2574), !dbg !10425
  call void @llvm.dbg.declare(metadata i16* %block_time, metadata !10426, metadata !2574), !dbg !10429
  call void @llvm.dbg.declare(metadata i32** %lace_size, metadata !10430, metadata !2574), !dbg !10431
  store i32* null, i32** %lace_size, align 8, !dbg !10431
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10432, metadata !2574), !dbg !10433
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !10434, metadata !2574), !dbg !10435
  call void @llvm.dbg.declare(metadata i32* %laces, metadata !10436, metadata !2574), !dbg !10437
  store i32 0, i32* %laces, align 4, !dbg !10437
  call void @llvm.dbg.declare(metadata i64* %num, metadata !10438, metadata !2574), !dbg !10439
  call void @llvm.dbg.declare(metadata i32* %trust_default_duration, metadata !10440, metadata !2574), !dbg !10441
  store i32 1, i32* %trust_default_duration, align 4, !dbg !10441
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10442
  %1 = load i8*, i8** %data.addr, align 8, !dbg !10444
  %2 = load i32, i32* %size.addr, align 4, !dbg !10445
  %call = call i32 @matroska_ebmlnum_uint(%struct.MatroskaDemuxContext* %0, i8* %1, i32 %2, i64* %num), !dbg !10446
  store i32 %call, i32* %n, align 4, !dbg !10447
  %cmp = icmp slt i32 %call, 0, !dbg !10448
  br i1 %cmp, label %if.then, label %if.end, !dbg !10449

if.then:                                          ; preds = %entry
  %3 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10450
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %3, i32 0, i32 1, !dbg !10452
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !10452
  %5 = bitcast %struct.AVFormatContext* %4 to i8*, !dbg !10450
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.114, i32 0, i32 0)), !dbg !10453
  %6 = load i32, i32* %n, align 4, !dbg !10454
  store i32 %6, i32* %retval, align 4, !dbg !10455
  br label %return, !dbg !10455

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %n, align 4, !dbg !10456
  %8 = load i8*, i8** %data.addr, align 8, !dbg !10457
  %idx.ext = sext i32 %7 to i64, !dbg !10457
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !10457
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !10457
  %9 = load i32, i32* %n, align 4, !dbg !10458
  %10 = load i32, i32* %size.addr, align 4, !dbg !10459
  %sub = sub nsw i32 %10, %9, !dbg !10459
  store i32 %sub, i32* %size.addr, align 4, !dbg !10459
  %11 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10460
  %12 = load i64, i64* %num, align 8, !dbg !10461
  %conv = trunc i64 %12 to i32, !dbg !10461
  %call1 = call %struct.MatroskaTrack* @matroska_find_track_by_num(%struct.MatroskaDemuxContext* %11, i32 %conv), !dbg !10462
  store %struct.MatroskaTrack* %call1, %struct.MatroskaTrack** %track, align 8, !dbg !10463
  %13 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10464
  %tobool = icmp ne %struct.MatroskaTrack* %13, null, !dbg !10464
  br i1 %tobool, label %lor.lhs.false, label %if.then3, !dbg !10466

lor.lhs.false:                                    ; preds = %if.end
  %14 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10467
  %stream = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %14, i32 0, i32 18, !dbg !10469
  %15 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !10469
  %tobool2 = icmp ne %struct.AVStream* %15, null, !dbg !10467
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !10470

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %16 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10471
  %ctx4 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %16, i32 0, i32 1, !dbg !10473
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx4, align 8, !dbg !10473
  %18 = bitcast %struct.AVFormatContext* %17 to i8*, !dbg !10471
  %19 = load i64, i64* %num, align 8, !dbg !10474
  %20 = load i32, i32* %size.addr, align 4, !dbg !10475
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.115, i32 0, i32 0), i64 %19, i32 %20), !dbg !10476
  store i32 -1094995529, i32* %retval, align 4, !dbg !10477
  br label %return, !dbg !10477

if.else:                                          ; preds = %lor.lhs.false
  %21 = load i32, i32* %size.addr, align 4, !dbg !10478
  %cmp5 = icmp sle i32 %21, 3, !dbg !10480
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !10481

if.then7:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !10482
  br label %return, !dbg !10482

if.end8:                                          ; preds = %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8
  %22 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10483
  %stream10 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %22, i32 0, i32 18, !dbg !10484
  %23 = load %struct.AVStream*, %struct.AVStream** %stream10, align 8, !dbg !10484
  store %struct.AVStream* %23, %struct.AVStream** %st, align 8, !dbg !10485
  %24 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10486
  %discard = getelementptr inbounds %struct.AVStream, %struct.AVStream* %24, i32 0, i32 9, !dbg !10488
  %25 = load i32, i32* %discard, align 4, !dbg !10488
  %cmp11 = icmp sge i32 %25, 48, !dbg !10489
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !10490

if.then13:                                        ; preds = %if.end9
  %26 = load i32, i32* %res, align 4, !dbg !10491
  store i32 %26, i32* %retval, align 4, !dbg !10492
  br label %return, !dbg !10492

if.end14:                                         ; preds = %if.end9
  %27 = load i8*, i8** %data.addr, align 8, !dbg !10493
  %28 = bitcast i8* %27 to %union.unaligned_16*, !dbg !10494
  %l = bitcast %union.unaligned_16* %28 to i16*, !dbg !10494
  %29 = load i16, i16* %l, align 1, !dbg !10494
  store i16 %29, i16* %x.addr.i, align 2, !dbg !10495
  %30 = load i16, i16* %x.addr.i, align 2, !dbg !10496
  %conv.i = zext i16 %30 to i32, !dbg !10496
  %shr.i = ashr i32 %conv.i, 8, !dbg !10497
  %31 = load i16, i16* %x.addr.i, align 2, !dbg !10498
  %conv1.i = zext i16 %31 to i32, !dbg !10498
  %shl.i = shl i32 %conv1.i, 8, !dbg !10499
  %or.i = or i32 %shr.i, %shl.i, !dbg !10500
  %conv2.i = trunc i32 %or.i to i16, !dbg !10501
  store i16 %conv2.i, i16* %x.addr.i, align 2, !dbg !10502
  %32 = load i16, i16* %x.addr.i, align 2, !dbg !10503
  %conv16 = zext i16 %32 to i32, !dbg !10495
  %call17 = call i32 @sign_extend(i32 %conv16, i32 16) #1, !dbg !10504
  %conv18 = trunc i32 %call17 to i16, !dbg !10506
  store i16 %conv18, i16* %block_time, align 2, !dbg !10507
  %33 = load i8*, i8** %data.addr, align 8, !dbg !10508
  %add.ptr19 = getelementptr inbounds i8, i8* %33, i64 2, !dbg !10508
  store i8* %add.ptr19, i8** %data.addr, align 8, !dbg !10508
  %34 = load i8*, i8** %data.addr, align 8, !dbg !10509
  %incdec.ptr = getelementptr inbounds i8, i8* %34, i32 1, !dbg !10509
  store i8* %incdec.ptr, i8** %data.addr, align 8, !dbg !10509
  %35 = load i8, i8* %34, align 1, !dbg !10510
  %conv20 = zext i8 %35 to i32, !dbg !10510
  store i32 %conv20, i32* %flags, align 4, !dbg !10511
  %36 = load i32, i32* %size.addr, align 4, !dbg !10512
  %sub21 = sub nsw i32 %36, 3, !dbg !10512
  store i32 %sub21, i32* %size.addr, align 4, !dbg !10512
  %37 = load i32, i32* %is_keyframe.addr, align 4, !dbg !10513
  %cmp22 = icmp eq i32 %37, -1, !dbg !10515
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !10516

if.then24:                                        ; preds = %if.end14
  %38 = load i32, i32* %flags, align 4, !dbg !10517
  %and = and i32 %38, 128, !dbg !10518
  %tobool25 = icmp ne i32 %and, 0, !dbg !10517
  %cond = select i1 %tobool25, i32 1, i32 0, !dbg !10517
  store i32 %cond, i32* %is_keyframe.addr, align 4, !dbg !10519
  br label %if.end26, !dbg !10520

if.end26:                                         ; preds = %if.then24, %if.end14
  %39 = load i64, i64* %cluster_time.addr, align 8, !dbg !10521
  %cmp27 = icmp ne i64 %39, -1, !dbg !10523
  br i1 %cmp27, label %land.lhs.true, label %if.end53, !dbg !10524

land.lhs.true:                                    ; preds = %if.end26
  %40 = load i16, i16* %block_time, align 2, !dbg !10525
  %conv29 = sext i16 %40 to i32, !dbg !10525
  %cmp30 = icmp sge i32 %conv29, 0, !dbg !10526
  br i1 %cmp30, label %if.then38, label %lor.lhs.false32, !dbg !10527

lor.lhs.false32:                                  ; preds = %land.lhs.true
  %41 = load i64, i64* %cluster_time.addr, align 8, !dbg !10528
  %42 = load i16, i16* %block_time, align 2, !dbg !10530
  %conv33 = sext i16 %42 to i32, !dbg !10530
  %sub34 = sub nsw i32 0, %conv33, !dbg !10531
  %conv35 = sext i32 %sub34 to i64, !dbg !10531
  %cmp36 = icmp uge i64 %41, %conv35, !dbg !10532
  br i1 %cmp36, label %if.then38, label %if.end53, !dbg !10533

if.then38:                                        ; preds = %lor.lhs.false32, %land.lhs.true
  %43 = load i64, i64* %cluster_time.addr, align 8, !dbg !10534
  %44 = load i16, i16* %block_time, align 2, !dbg !10536
  %conv39 = sext i16 %44 to i64, !dbg !10536
  %add = add i64 %43, %conv39, !dbg !10537
  %45 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10538
  %codec_delay_in_track_tb = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %45, i32 0, i32 17, !dbg !10539
  %46 = load i64, i64* %codec_delay_in_track_tb, align 8, !dbg !10539
  %sub40 = sub i64 %add, %46, !dbg !10540
  store i64 %sub40, i64* %timecode, align 8, !dbg !10541
  %47 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10542
  %type = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %47, i32 0, i32 2, !dbg !10544
  %48 = load i64, i64* %type, align 8, !dbg !10544
  %cmp41 = icmp eq i64 %48, 17, !dbg !10545
  br i1 %cmp41, label %land.lhs.true43, label %if.end47, !dbg !10546

land.lhs.true43:                                  ; preds = %if.then38
  %49 = load i64, i64* %timecode, align 8, !dbg !10547
  %50 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10548
  %end_timecode = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %50, i32 0, i32 19, !dbg !10549
  %51 = load i64, i64* %end_timecode, align 8, !dbg !10549
  %cmp44 = icmp ult i64 %49, %51, !dbg !10550
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !10551

if.then46:                                        ; preds = %land.lhs.true43
  store i32 0, i32* %is_keyframe.addr, align 4, !dbg !10553
  br label %if.end47, !dbg !10554

if.end47:                                         ; preds = %if.then46, %land.lhs.true43, %if.then38
  %52 = load i32, i32* %is_keyframe.addr, align 4, !dbg !10555
  %tobool48 = icmp ne i32 %52, 0, !dbg !10555
  br i1 %tobool48, label %if.then49, label %if.end52, !dbg !10557

if.then49:                                        ; preds = %if.end47
  %53 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10558
  %ctx50 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %53, i32 0, i32 1, !dbg !10560
  %54 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx50, align 8, !dbg !10560
  %55 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10561
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %55, i32 0, i32 0, !dbg !10562
  %56 = load i32, i32* %index, align 8, !dbg !10562
  call void @ff_reduce_index(%struct.AVFormatContext* %54, i32 %56), !dbg !10563
  %57 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10564
  %58 = load i64, i64* %cluster_pos.addr, align 8, !dbg !10565
  %59 = load i64, i64* %timecode, align 8, !dbg !10566
  %call51 = call i32 @av_add_index_entry(%struct.AVStream* %57, i64 %58, i64 %59, i32 0, i32 0, i32 1), !dbg !10567
  br label %if.end52, !dbg !10568

if.end52:                                         ; preds = %if.then49, %if.end47
  br label %if.end53, !dbg !10569

if.end53:                                         ; preds = %if.end52, %lor.lhs.false32, %if.end26
  %60 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10570
  %skip_to_keyframe = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %60, i32 0, i32 21, !dbg !10572
  %61 = load i32, i32* %skip_to_keyframe, align 4, !dbg !10572
  %tobool54 = icmp ne i32 %61, 0, !dbg !10570
  br i1 %tobool54, label %land.lhs.true55, label %if.end75, !dbg !10573

land.lhs.true55:                                  ; preds = %if.end53
  %62 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10574
  %type56 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %62, i32 0, i32 2, !dbg !10575
  %63 = load i64, i64* %type56, align 8, !dbg !10575
  %cmp57 = icmp ne i64 %63, 17, !dbg !10576
  br i1 %cmp57, label %if.then59, label %if.end75, !dbg !10577

if.then59:                                        ; preds = %land.lhs.true55
  %64 = load i64, i64* %timecode, align 8, !dbg !10578
  %65 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10581
  %skip_to_timecode = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %65, i32 0, i32 22, !dbg !10582
  %66 = load i64, i64* %skip_to_timecode, align 8, !dbg !10582
  %cmp60 = icmp slt i64 %64, %66, !dbg !10583
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !10584

if.then62:                                        ; preds = %if.then59
  %67 = load i32, i32* %res, align 4, !dbg !10585
  store i32 %67, i32* %retval, align 4, !dbg !10586
  br label %return, !dbg !10586

if.end63:                                         ; preds = %if.then59
  %68 = load i32, i32* %is_keyframe.addr, align 4, !dbg !10587
  %tobool64 = icmp ne i32 %68, 0, !dbg !10587
  br i1 %tobool64, label %if.then65, label %if.else67, !dbg !10589

if.then65:                                        ; preds = %if.end63
  %69 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10590
  %skip_to_keyframe66 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %69, i32 0, i32 21, !dbg !10591
  store i32 0, i32* %skip_to_keyframe66, align 4, !dbg !10592
  br label %if.end74, !dbg !10590

if.else67:                                        ; preds = %if.end63
  %70 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10593
  %skip_to_keyframe68 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %70, i32 0, i32 43, !dbg !10595
  %71 = load i32, i32* %skip_to_keyframe68, align 4, !dbg !10595
  %tobool69 = icmp ne i32 %71, 0, !dbg !10593
  br i1 %tobool69, label %if.end73, label %if.then70, !dbg !10596

if.then70:                                        ; preds = %if.else67
  %72 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10597
  %ctx71 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %72, i32 0, i32 1, !dbg !10599
  %73 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx71, align 8, !dbg !10599
  %74 = bitcast %struct.AVFormatContext* %73 to i8*, !dbg !10597
  call void (i8*, i32, i8*, ...) @av_log(i8* %74, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.116, i32 0, i32 0)), !dbg !10600
  %75 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10601
  %skip_to_keyframe72 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %75, i32 0, i32 21, !dbg !10602
  store i32 0, i32* %skip_to_keyframe72, align 4, !dbg !10603
  br label %if.end73, !dbg !10604

if.end73:                                         ; preds = %if.then70, %if.else67
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then65
  br label %if.end75, !dbg !10605

if.end75:                                         ; preds = %if.end74, %land.lhs.true55, %if.end53
  %76 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10606
  %77 = load i32, i32* %flags, align 4, !dbg !10607
  %and76 = and i32 %77, 6, !dbg !10608
  %shr = ashr i32 %and76, 1, !dbg !10609
  %call77 = call i32 @matroska_parse_laces(%struct.MatroskaDemuxContext* %76, i8** %data.addr, i32* %size.addr, i32 %shr, i32** %lace_size, i32* %laces), !dbg !10610
  store i32 %call77, i32* %res, align 4, !dbg !10611
  %78 = load i32, i32* %res, align 4, !dbg !10612
  %tobool78 = icmp ne i32 %78, 0, !dbg !10612
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !10614

if.then79:                                        ; preds = %if.end75
  br label %end, !dbg !10615

if.end80:                                         ; preds = %if.end75
  %79 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10616
  %audio = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %79, i32 0, i32 13, !dbg !10618
  %samplerate = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio, i32 0, i32 0, !dbg !10619
  %80 = load double, double* %samplerate, align 8, !dbg !10619
  %cmp81 = fcmp oeq double %80, 8.000000e+03, !dbg !10620
  br i1 %cmp81, label %if.then83, label %if.end99, !dbg !10621

if.then83:                                        ; preds = %if.end80
  %81 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10622
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %81, i32 0, i32 19, !dbg !10625
  %82 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !10625
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %82, i32 0, i32 1, !dbg !10626
  %83 = load i32, i32* %codec_id, align 4, !dbg !10626
  %cmp84 = icmp eq i32 %83, 86019, !dbg !10627
  br i1 %cmp84, label %if.then86, label %if.end98, !dbg !10628

if.then86:                                        ; preds = %if.then83
  %84 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10629
  %audio87 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %84, i32 0, i32 13, !dbg !10632
  %samplerate88 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio87, i32 0, i32 0, !dbg !10633
  %85 = load double, double* %samplerate88, align 8, !dbg !10633
  %86 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10634
  %codecpar89 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %86, i32 0, i32 19, !dbg !10635
  %87 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar89, align 8, !dbg !10635
  %sample_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %87, i32 0, i32 23, !dbg !10636
  %88 = load i32, i32* %sample_rate, align 4, !dbg !10636
  %conv90 = sitofp i32 %88 to double, !dbg !10634
  %cmp91 = fcmp une double %85, %conv90, !dbg !10637
  br i1 %cmp91, label %if.then96, label %lor.lhs.false93, !dbg !10638

lor.lhs.false93:                                  ; preds = %if.then86
  %89 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10639
  %codecpar94 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %89, i32 0, i32 19, !dbg !10641
  %90 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar94, align 8, !dbg !10641
  %frame_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %90, i32 0, i32 25, !dbg !10642
  %91 = load i32, i32* %frame_size, align 4, !dbg !10642
  %tobool95 = icmp ne i32 %91, 0, !dbg !10639
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !10643

if.then96:                                        ; preds = %lor.lhs.false93, %if.then86
  store i32 0, i32* %trust_default_duration, align 4, !dbg !10644
  br label %if.end97, !dbg !10645

if.end97:                                         ; preds = %if.then96, %lor.lhs.false93
  br label %if.end98, !dbg !10646

if.end98:                                         ; preds = %if.end97, %if.then83
  br label %if.end99, !dbg !10647

if.end99:                                         ; preds = %if.end98, %if.end80
  %92 = load i64, i64* %block_duration.addr, align 8, !dbg !10648
  %tobool100 = icmp ne i64 %92, 0, !dbg !10648
  br i1 %tobool100, label %if.end105, label %land.lhs.true101, !dbg !10650

land.lhs.true101:                                 ; preds = %if.end99
  %93 = load i32, i32* %trust_default_duration, align 4, !dbg !10651
  %tobool102 = icmp ne i32 %93, 0, !dbg !10651
  br i1 %tobool102, label %if.then103, label %if.end105, !dbg !10653

if.then103:                                       ; preds = %land.lhs.true101
  %94 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10654
  %default_duration = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %94, i32 0, i32 8, !dbg !10655
  %95 = load i64, i64* %default_duration, align 8, !dbg !10655
  %96 = load i32, i32* %laces, align 4, !dbg !10656
  %conv104 = sext i32 %96 to i64, !dbg !10656
  %mul = mul i64 %95, %conv104, !dbg !10657
  %97 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10658
  %time_scale = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %97, i32 0, i32 6, !dbg !10659
  %98 = load i64, i64* %time_scale, align 8, !dbg !10659
  %div = udiv i64 %mul, %98, !dbg !10660
  store i64 %div, i64* %block_duration.addr, align 8, !dbg !10661
  br label %if.end105, !dbg !10662

if.end105:                                        ; preds = %if.then103, %land.lhs.true101, %if.end99
  %99 = load i64, i64* %cluster_time.addr, align 8, !dbg !10663
  %cmp106 = icmp ne i64 %99, -1, !dbg !10665
  br i1 %cmp106, label %land.lhs.true108, label %if.end127, !dbg !10666

land.lhs.true108:                                 ; preds = %if.end105
  %100 = load i16, i16* %block_time, align 2, !dbg !10667
  %conv109 = sext i16 %100 to i32, !dbg !10667
  %cmp110 = icmp sge i32 %conv109, 0, !dbg !10669
  br i1 %cmp110, label %if.then118, label %lor.lhs.false112, !dbg !10670

lor.lhs.false112:                                 ; preds = %land.lhs.true108
  %101 = load i64, i64* %cluster_time.addr, align 8, !dbg !10671
  %102 = load i16, i16* %block_time, align 2, !dbg !10673
  %conv113 = sext i16 %102 to i32, !dbg !10673
  %sub114 = sub nsw i32 0, %conv113, !dbg !10674
  %conv115 = sext i32 %sub114 to i64, !dbg !10674
  %cmp116 = icmp uge i64 %101, %conv115, !dbg !10675
  br i1 %cmp116, label %if.then118, label %if.end127, !dbg !10676

if.then118:                                       ; preds = %lor.lhs.false112, %land.lhs.true108
  %103 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10677
  %end_timecode119 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %103, i32 0, i32 19, !dbg !10678
  %104 = load i64, i64* %end_timecode119, align 8, !dbg !10678
  %105 = load i64, i64* %timecode, align 8, !dbg !10679
  %106 = load i64, i64* %block_duration.addr, align 8, !dbg !10680
  %add120 = add i64 %105, %106, !dbg !10681
  %cmp121 = icmp ugt i64 %104, %add120, !dbg !10682
  br i1 %cmp121, label %cond.true, label %cond.false, !dbg !10683

cond.true:                                        ; preds = %if.then118
  %107 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10684
  %end_timecode123 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %107, i32 0, i32 19, !dbg !10685
  %108 = load i64, i64* %end_timecode123, align 8, !dbg !10685
  br label %cond.end, !dbg !10686

cond.false:                                       ; preds = %if.then118
  %109 = load i64, i64* %timecode, align 8, !dbg !10687
  %110 = load i64, i64* %block_duration.addr, align 8, !dbg !10688
  %add124 = add i64 %109, %110, !dbg !10689
  br label %cond.end, !dbg !10690

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond125 = phi i64 [ %108, %cond.true ], [ %add124, %cond.false ], !dbg !10691
  %111 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10693
  %end_timecode126 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %111, i32 0, i32 19, !dbg !10694
  store i64 %cond125, i64* %end_timecode126, align 8, !dbg !10695
  br label %if.end127, !dbg !10693

if.end127:                                        ; preds = %cond.end, %lor.lhs.false112, %if.end105
  store i32 0, i32* %n, align 4, !dbg !10696
  br label %for.cond, !dbg !10698

for.cond:                                         ; preds = %for.inc, %if.end127
  %112 = load i32, i32* %n, align 4, !dbg !10699
  %113 = load i32, i32* %laces, align 4, !dbg !10702
  %cmp128 = icmp slt i32 %112, %113, !dbg !10703
  br i1 %cmp128, label %for.body, label %for.end, !dbg !10704

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %lace_duration, metadata !10705, metadata !2574), !dbg !10707
  %114 = load i64, i64* %block_duration.addr, align 8, !dbg !10708
  %115 = load i32, i32* %n, align 4, !dbg !10709
  %add130 = add nsw i32 %115, 1, !dbg !10710
  %conv131 = sext i32 %add130 to i64, !dbg !10711
  %mul132 = mul i64 %114, %conv131, !dbg !10712
  %116 = load i32, i32* %laces, align 4, !dbg !10713
  %conv133 = sext i32 %116 to i64, !dbg !10713
  %div134 = udiv i64 %mul132, %conv133, !dbg !10714
  %117 = load i64, i64* %block_duration.addr, align 8, !dbg !10715
  %118 = load i32, i32* %n, align 4, !dbg !10716
  %conv135 = sext i32 %118 to i64, !dbg !10716
  %mul136 = mul i64 %117, %conv135, !dbg !10717
  %119 = load i32, i32* %laces, align 4, !dbg !10718
  %conv137 = sext i32 %119 to i64, !dbg !10718
  %div138 = udiv i64 %mul136, %conv137, !dbg !10719
  %sub139 = sub i64 %div134, %div138, !dbg !10720
  store i64 %sub139, i64* %lace_duration, align 8, !dbg !10707
  %120 = load i32, i32* %n, align 4, !dbg !10721
  %idxprom = sext i32 %120 to i64, !dbg !10723
  %121 = load i32*, i32** %lace_size, align 8, !dbg !10723
  %arrayidx = getelementptr inbounds i32, i32* %121, i64 %idxprom, !dbg !10723
  %122 = load i32, i32* %arrayidx, align 4, !dbg !10723
  %123 = load i32, i32* %size.addr, align 4, !dbg !10724
  %cmp140 = icmp ugt i32 %122, %123, !dbg !10725
  br i1 %cmp140, label %if.then142, label %if.end144, !dbg !10726

if.then142:                                       ; preds = %for.body
  %124 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10727
  %ctx143 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %124, i32 0, i32 1, !dbg !10729
  %125 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx143, align 8, !dbg !10729
  %126 = bitcast %struct.AVFormatContext* %125 to i8*, !dbg !10727
  call void (i8*, i32, i8*, ...) @av_log(i8* %126, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.117, i32 0, i32 0)), !dbg !10730
  br label %for.end, !dbg !10731

if.end144:                                        ; preds = %for.body
  %127 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10732
  %codecpar145 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %127, i32 0, i32 19, !dbg !10734
  %128 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar145, align 8, !dbg !10734
  %codec_id146 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %128, i32 0, i32 1, !dbg !10735
  %129 = load i32, i32* %codec_id146, align 4, !dbg !10735
  %cmp147 = icmp eq i32 %129, 77825, !dbg !10736
  br i1 %cmp147, label %land.lhs.true164, label %lor.lhs.false149, !dbg !10737

lor.lhs.false149:                                 ; preds = %if.end144
  %130 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10738
  %codecpar150 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %130, i32 0, i32 19, !dbg !10739
  %131 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar150, align 8, !dbg !10739
  %codec_id151 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %131, i32 0, i32 1, !dbg !10740
  %132 = load i32, i32* %codec_id151, align 4, !dbg !10740
  %cmp152 = icmp eq i32 %132, 86036, !dbg !10741
  br i1 %cmp152, label %land.lhs.true164, label %lor.lhs.false154, !dbg !10742

lor.lhs.false154:                                 ; preds = %lor.lhs.false149
  %133 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10743
  %codecpar155 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %133, i32 0, i32 19, !dbg !10744
  %134 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar155, align 8, !dbg !10744
  %codec_id156 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %134, i32 0, i32 1, !dbg !10745
  %135 = load i32, i32* %codec_id156, align 4, !dbg !10745
  %cmp157 = icmp eq i32 %135, 86057, !dbg !10746
  br i1 %cmp157, label %land.lhs.true164, label %lor.lhs.false159, !dbg !10747

lor.lhs.false159:                                 ; preds = %lor.lhs.false154
  %136 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10748
  %codecpar160 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %136, i32 0, i32 19, !dbg !10749
  %137 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar160, align 8, !dbg !10749
  %codec_id161 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %137, i32 0, i32 1, !dbg !10750
  %138 = load i32, i32* %codec_id161, align 4, !dbg !10750
  %cmp162 = icmp eq i32 %138, 86047, !dbg !10751
  br i1 %cmp162, label %land.lhs.true164, label %if.else177, !dbg !10752

land.lhs.true164:                                 ; preds = %lor.lhs.false159, %lor.lhs.false154, %lor.lhs.false149, %if.end144
  %139 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10753
  %codecpar165 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %139, i32 0, i32 19, !dbg !10754
  %140 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar165, align 8, !dbg !10754
  %block_align = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %140, i32 0, i32 24, !dbg !10755
  %141 = load i32, i32* %block_align, align 8, !dbg !10755
  %tobool166 = icmp ne i32 %141, 0, !dbg !10753
  br i1 %tobool166, label %land.lhs.true167, label %if.else177, !dbg !10756

land.lhs.true167:                                 ; preds = %land.lhs.true164
  %142 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10757
  %audio168 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %142, i32 0, i32 13, !dbg !10759
  %sub_packet_size = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio168, i32 0, i32 7, !dbg !10760
  %143 = load i32, i32* %sub_packet_size, align 4, !dbg !10760
  %tobool169 = icmp ne i32 %143, 0, !dbg !10757
  br i1 %tobool169, label %if.then170, label %if.else177, !dbg !10761

if.then170:                                       ; preds = %land.lhs.true167
  %144 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10763
  %145 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10765
  %146 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10766
  %147 = load i8*, i8** %data.addr, align 8, !dbg !10767
  %148 = load i32, i32* %n, align 4, !dbg !10768
  %idxprom171 = sext i32 %148 to i64, !dbg !10769
  %149 = load i32*, i32** %lace_size, align 8, !dbg !10769
  %arrayidx172 = getelementptr inbounds i32, i32* %149, i64 %idxprom171, !dbg !10769
  %150 = load i32, i32* %arrayidx172, align 4, !dbg !10769
  %151 = load i64, i64* %timecode, align 8, !dbg !10770
  %152 = load i64, i64* %pos.addr, align 8, !dbg !10771
  %call173 = call i32 @matroska_parse_rm_audio(%struct.MatroskaDemuxContext* %144, %struct.MatroskaTrack* %145, %struct.AVStream* %146, i8* %147, i32 %150, i64 %151, i64 %152), !dbg !10772
  store i32 %call173, i32* %res, align 4, !dbg !10773
  %153 = load i32, i32* %res, align 4, !dbg !10774
  %tobool174 = icmp ne i32 %153, 0, !dbg !10774
  br i1 %tobool174, label %if.then175, label %if.end176, !dbg !10776

if.then175:                                       ; preds = %if.then170
  br label %end, !dbg !10777

if.end176:                                        ; preds = %if.then170
  br label %if.end202, !dbg !10778

if.else177:                                       ; preds = %land.lhs.true167, %land.lhs.true164, %lor.lhs.false159
  %154 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10779
  %codecpar178 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %154, i32 0, i32 19, !dbg !10782
  %155 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar178, align 8, !dbg !10782
  %codec_id179 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %155, i32 0, i32 1, !dbg !10783
  %156 = load i32, i32* %codec_id179, align 4, !dbg !10783
  %cmp180 = icmp eq i32 %156, 96265, !dbg !10784
  br i1 %cmp180, label %if.then182, label %if.else189, !dbg !10779

if.then182:                                       ; preds = %if.else177
  %157 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10785
  %158 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10787
  %159 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10788
  %160 = load i8*, i8** %data.addr, align 8, !dbg !10789
  %161 = load i32, i32* %n, align 4, !dbg !10790
  %idxprom183 = sext i32 %161 to i64, !dbg !10791
  %162 = load i32*, i32** %lace_size, align 8, !dbg !10791
  %arrayidx184 = getelementptr inbounds i32, i32* %162, i64 %idxprom183, !dbg !10791
  %163 = load i32, i32* %arrayidx184, align 4, !dbg !10791
  %164 = load i64, i64* %timecode, align 8, !dbg !10792
  %165 = load i64, i64* %lace_duration, align 8, !dbg !10793
  %166 = load i64, i64* %pos.addr, align 8, !dbg !10794
  %call185 = call i32 @matroska_parse_webvtt(%struct.MatroskaDemuxContext* %157, %struct.MatroskaTrack* %158, %struct.AVStream* %159, i8* %160, i32 %163, i64 %164, i64 %165, i64 %166), !dbg !10795
  store i32 %call185, i32* %res, align 4, !dbg !10796
  %167 = load i32, i32* %res, align 4, !dbg !10797
  %tobool186 = icmp ne i32 %167, 0, !dbg !10797
  br i1 %tobool186, label %if.then187, label %if.end188, !dbg !10799

if.then187:                                       ; preds = %if.then182
  br label %end, !dbg !10800

if.end188:                                        ; preds = %if.then182
  br label %if.end201, !dbg !10801

if.else189:                                       ; preds = %if.else177
  %168 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10802
  %169 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track, align 8, !dbg !10804
  %170 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10805
  %171 = load %struct.AVBufferRef*, %struct.AVBufferRef** %buf.addr, align 8, !dbg !10806
  %172 = load i8*, i8** %data.addr, align 8, !dbg !10807
  %173 = load i32, i32* %n, align 4, !dbg !10808
  %idxprom190 = sext i32 %173 to i64, !dbg !10809
  %174 = load i32*, i32** %lace_size, align 8, !dbg !10809
  %arrayidx191 = getelementptr inbounds i32, i32* %174, i64 %idxprom190, !dbg !10809
  %175 = load i32, i32* %arrayidx191, align 4, !dbg !10809
  %176 = load i64, i64* %timecode, align 8, !dbg !10810
  %177 = load i64, i64* %lace_duration, align 8, !dbg !10811
  %178 = load i64, i64* %pos.addr, align 8, !dbg !10812
  %179 = load i32, i32* %n, align 4, !dbg !10813
  %tobool192 = icmp ne i32 %179, 0, !dbg !10813
  br i1 %tobool192, label %cond.false194, label %cond.true193, !dbg !10814

cond.true193:                                     ; preds = %if.else189
  %180 = load i32, i32* %is_keyframe.addr, align 4, !dbg !10815
  br label %cond.end195, !dbg !10817

cond.false194:                                    ; preds = %if.else189
  br label %cond.end195, !dbg !10818

cond.end195:                                      ; preds = %cond.false194, %cond.true193
  %cond196 = phi i32 [ %180, %cond.true193 ], [ 0, %cond.false194 ], !dbg !10820
  %181 = load i8*, i8** %additional.addr, align 8, !dbg !10822
  %182 = load i64, i64* %additional_id.addr, align 8, !dbg !10823
  %183 = load i32, i32* %additional_size.addr, align 4, !dbg !10824
  %184 = load i64, i64* %discard_padding.addr, align 8, !dbg !10825
  %call197 = call i32 @matroska_parse_frame(%struct.MatroskaDemuxContext* %168, %struct.MatroskaTrack* %169, %struct.AVStream* %170, %struct.AVBufferRef* %171, i8* %172, i32 %175, i64 %176, i64 %177, i64 %178, i32 %cond196, i8* %181, i64 %182, i32 %183, i64 %184), !dbg !10826
  store i32 %call197, i32* %res, align 4, !dbg !10827
  %185 = load i32, i32* %res, align 4, !dbg !10828
  %tobool198 = icmp ne i32 %185, 0, !dbg !10828
  br i1 %tobool198, label %if.then199, label %if.end200, !dbg !10830

if.then199:                                       ; preds = %cond.end195
  br label %end, !dbg !10831

if.end200:                                        ; preds = %cond.end195
  br label %if.end201

if.end201:                                        ; preds = %if.end200, %if.end188
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.end176
  %186 = load i64, i64* %timecode, align 8, !dbg !10832
  %cmp203 = icmp ne i64 %186, -9223372036854775808, !dbg !10834
  br i1 %cmp203, label %if.then205, label %if.end212, !dbg !10835

if.then205:                                       ; preds = %if.end202
  %187 = load i64, i64* %lace_duration, align 8, !dbg !10836
  %tobool206 = icmp ne i64 %187, 0, !dbg !10836
  br i1 %tobool206, label %cond.true207, label %cond.false209, !dbg !10836

cond.true207:                                     ; preds = %if.then205
  %188 = load i64, i64* %timecode, align 8, !dbg !10837
  %189 = load i64, i64* %lace_duration, align 8, !dbg !10839
  %add208 = add i64 %188, %189, !dbg !10840
  br label %cond.end210, !dbg !10841

cond.false209:                                    ; preds = %if.then205
  br label %cond.end210, !dbg !10842

cond.end210:                                      ; preds = %cond.false209, %cond.true207
  %cond211 = phi i64 [ %add208, %cond.true207 ], [ -9223372036854775808, %cond.false209 ], !dbg !10844
  store i64 %cond211, i64* %timecode, align 8, !dbg !10846
  br label %if.end212, !dbg !10847

if.end212:                                        ; preds = %cond.end210, %if.end202
  %190 = load i32, i32* %n, align 4, !dbg !10848
  %idxprom213 = sext i32 %190 to i64, !dbg !10849
  %191 = load i32*, i32** %lace_size, align 8, !dbg !10849
  %arrayidx214 = getelementptr inbounds i32, i32* %191, i64 %idxprom213, !dbg !10849
  %192 = load i32, i32* %arrayidx214, align 4, !dbg !10849
  %193 = load i8*, i8** %data.addr, align 8, !dbg !10850
  %idx.ext215 = zext i32 %192 to i64, !dbg !10850
  %add.ptr216 = getelementptr inbounds i8, i8* %193, i64 %idx.ext215, !dbg !10850
  store i8* %add.ptr216, i8** %data.addr, align 8, !dbg !10850
  %194 = load i32, i32* %n, align 4, !dbg !10851
  %idxprom217 = sext i32 %194 to i64, !dbg !10852
  %195 = load i32*, i32** %lace_size, align 8, !dbg !10852
  %arrayidx218 = getelementptr inbounds i32, i32* %195, i64 %idxprom217, !dbg !10852
  %196 = load i32, i32* %arrayidx218, align 4, !dbg !10852
  %197 = load i32, i32* %size.addr, align 4, !dbg !10853
  %sub219 = sub i32 %197, %196, !dbg !10853
  store i32 %sub219, i32* %size.addr, align 4, !dbg !10853
  br label %for.inc, !dbg !10854

for.inc:                                          ; preds = %if.end212
  %198 = load i32, i32* %n, align 4, !dbg !10855
  %inc = add nsw i32 %198, 1, !dbg !10855
  store i32 %inc, i32* %n, align 4, !dbg !10855
  br label %for.cond, !dbg !10857, !llvm.loop !10858

for.end:                                          ; preds = %if.then142, %for.cond
  br label %end, !dbg !10860

end:                                              ; preds = %for.end, %if.then199, %if.then187, %if.then175, %if.then79
  %199 = load i32*, i32** %lace_size, align 8, !dbg !10862
  %200 = bitcast i32* %199 to i8*, !dbg !10862
  call void @av_free(i8* %200), !dbg !10863
  %201 = load i32, i32* %res, align 4, !dbg !10864
  store i32 %201, i32* %retval, align 4, !dbg !10865
  br label %return, !dbg !10865

return:                                           ; preds = %end, %if.then62, %if.then13, %if.then7, %if.then3, %if.then
  %202 = load i32, i32* %retval, align 4, !dbg !10866
  ret i32 %202, !dbg !10866
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_ebmlnum_uint(%struct.MatroskaDemuxContext* %matroska, i8* %data, i32 %size, i64* %num) #0 !dbg !10867 {
entry:
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %num.addr = alloca i64*, align 8
  %pb = alloca %struct.AVIOContext, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !10870, metadata !2574), !dbg !10871
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10872, metadata !2574), !dbg !10873
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10874, metadata !2574), !dbg !10875
  store i64* %num, i64** %num.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %num.addr, metadata !10876, metadata !2574), !dbg !10877
  call void @llvm.dbg.declare(metadata %struct.AVIOContext* %pb, metadata !10878, metadata !2574), !dbg !10879
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10880
  %1 = load i32, i32* %size.addr, align 4, !dbg !10881
  %call = call i32 @ffio_init_context(%struct.AVIOContext* %pb, i8* %0, i32 %1, i32 0, i8* null, i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null), !dbg !10882
  %2 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !10883
  %3 = load i32, i32* %size.addr, align 4, !dbg !10884
  %cmp = icmp ugt i32 %3, 8, !dbg !10885
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10886

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10887

cond.false:                                       ; preds = %entry
  %4 = load i32, i32* %size.addr, align 4, !dbg !10889
  br label %cond.end, !dbg !10891

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8, %cond.true ], [ %4, %cond.false ], !dbg !10892
  %5 = load i64*, i64** %num.addr, align 8, !dbg !10894
  %call1 = call i32 @ebml_read_num(%struct.MatroskaDemuxContext* %2, %struct.AVIOContext* %pb, i32 %cond, i64* %5), !dbg !10895
  ret i32 %call1, !dbg !10896
}

declare void @ff_reduce_index(%struct.AVFormatContext*, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @matroska_parse_laces(%struct.MatroskaDemuxContext* %matroska, i8** %buf, i32* %buf_size, i32 %type, i32** %lace_buf, i32* %laces) #0 !dbg !10897 {
entry:
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %buf.addr = alloca i8**, align 8
  %buf_size.addr = alloca i32*, align 8
  %type.addr = alloca i32, align 4
  %lace_buf.addr = alloca i32**, align 8
  %laces.addr = alloca i32*, align 8
  %res = alloca i32, align 4
  %n = alloca i32, align 4
  %size = alloca i32, align 4
  %data = alloca i8*, align 8
  %lace_size = alloca i32*, align 8
  %temp = alloca i8, align 1
  %total = alloca i32, align 4
  %num = alloca i64, align 8
  %total53 = alloca i64, align 8
  %snum = alloca i64, align 8
  %r = alloca i32, align 4
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !10901, metadata !2574), !dbg !10902
  store i8** %buf, i8*** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buf.addr, metadata !10903, metadata !2574), !dbg !10904
  store i32* %buf_size, i32** %buf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %buf_size.addr, metadata !10905, metadata !2574), !dbg !10906
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10907, metadata !2574), !dbg !10908
  store i32** %lace_buf, i32*** %lace_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i32*** %lace_buf.addr, metadata !10909, metadata !2574), !dbg !10910
  store i32* %laces, i32** %laces.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %laces.addr, metadata !10911, metadata !2574), !dbg !10912
  call void @llvm.dbg.declare(metadata i32* %res, metadata !10913, metadata !2574), !dbg !10914
  store i32 0, i32* %res, align 4, !dbg !10914
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10915, metadata !2574), !dbg !10916
  call void @llvm.dbg.declare(metadata i32* %size, metadata !10917, metadata !2574), !dbg !10918
  %0 = load i32*, i32** %buf_size.addr, align 8, !dbg !10919
  %1 = load i32, i32* %0, align 4, !dbg !10920
  store i32 %1, i32* %size, align 4, !dbg !10918
  call void @llvm.dbg.declare(metadata i8** %data, metadata !10921, metadata !2574), !dbg !10922
  %2 = load i8**, i8*** %buf.addr, align 8, !dbg !10923
  %3 = load i8*, i8** %2, align 8, !dbg !10924
  store i8* %3, i8** %data, align 8, !dbg !10922
  call void @llvm.dbg.declare(metadata i32** %lace_size, metadata !10925, metadata !2574), !dbg !10926
  %4 = load i32, i32* %type.addr, align 4, !dbg !10927
  %tobool = icmp ne i32 %4, 0, !dbg !10927
  br i1 %tobool, label %if.end3, label %if.then, !dbg !10929

if.then:                                          ; preds = %entry
  %5 = load i32*, i32** %laces.addr, align 8, !dbg !10930
  store i32 1, i32* %5, align 4, !dbg !10932
  %call = call noalias i8* @av_mallocz(i64 4), !dbg !10933
  %6 = bitcast i8* %call to i32*, !dbg !10933
  %7 = load i32**, i32*** %lace_buf.addr, align 8, !dbg !10934
  store i32* %6, i32** %7, align 8, !dbg !10935
  %8 = load i32**, i32*** %lace_buf.addr, align 8, !dbg !10936
  %9 = load i32*, i32** %8, align 8, !dbg !10938
  %tobool1 = icmp ne i32* %9, null, !dbg !10938
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !10939

if.then2:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !10940
  br label %return, !dbg !10940

if.end:                                           ; preds = %if.then
  %10 = load i32, i32* %size, align 4, !dbg !10941
  %11 = load i32**, i32*** %lace_buf.addr, align 8, !dbg !10942
  %arrayidx = getelementptr inbounds i32*, i32** %11, i64 0, !dbg !10942
  %12 = load i32*, i32** %arrayidx, align 8, !dbg !10942
  store i32 %10, i32* %12, align 4, !dbg !10943
  store i32 0, i32* %retval, align 4, !dbg !10944
  br label %return, !dbg !10944

if.end3:                                          ; preds = %entry
  br label %do.body, !dbg !10945, !llvm.loop !10946

do.body:                                          ; preds = %if.end3
  %13 = load i32, i32* %size, align 4, !dbg !10947
  %cmp = icmp sgt i32 %13, 0, !dbg !10951
  br i1 %cmp, label %if.end5, label %if.then4, !dbg !10952

if.then4:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.119, i32 0, i32 0), i32 2808), !dbg !10953
  call void @abort() #12, !dbg !10956
  unreachable, !dbg !10958

if.end5:                                          ; preds = %do.body
  br label %do.end, !dbg !10959

do.end:                                           ; preds = %if.end5
  %14 = load i8*, i8** %data, align 8, !dbg !10961
  %15 = load i8, i8* %14, align 1, !dbg !10962
  %conv = zext i8 %15 to i32, !dbg !10962
  %add = add nsw i32 %conv, 1, !dbg !10963
  %16 = load i32*, i32** %laces.addr, align 8, !dbg !10964
  store i32 %add, i32* %16, align 4, !dbg !10965
  %17 = load i8*, i8** %data, align 8, !dbg !10966
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 1, !dbg !10966
  store i8* %add.ptr, i8** %data, align 8, !dbg !10966
  %18 = load i32, i32* %size, align 4, !dbg !10967
  %sub = sub nsw i32 %18, 1, !dbg !10967
  store i32 %sub, i32* %size, align 4, !dbg !10967
  %19 = load i32*, i32** %laces.addr, align 8, !dbg !10968
  %20 = load i32, i32* %19, align 4, !dbg !10969
  %conv6 = sext i32 %20 to i64, !dbg !10969
  %mul = mul i64 %conv6, 4, !dbg !10970
  %call7 = call noalias i8* @av_mallocz(i64 %mul), !dbg !10971
  %21 = bitcast i8* %call7 to i32*, !dbg !10971
  store i32* %21, i32** %lace_size, align 8, !dbg !10972
  %22 = load i32*, i32** %lace_size, align 8, !dbg !10973
  %tobool8 = icmp ne i32* %22, null, !dbg !10973
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !10975

if.then9:                                         ; preds = %do.end
  store i32 -12, i32* %retval, align 4, !dbg !10976
  br label %return, !dbg !10976

if.end10:                                         ; preds = %do.end
  %23 = load i32, i32* %type.addr, align 4, !dbg !10977
  switch i32 %23, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb39
    i32 3, label %sw.bb52
  ], !dbg !10978

sw.bb:                                            ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8* %temp, metadata !10979, metadata !2574), !dbg !10982
  call void @llvm.dbg.declare(metadata i32* %total, metadata !10983, metadata !2574), !dbg !10984
  store i32 0, i32* %total, align 4, !dbg !10984
  store i32 0, i32* %n, align 4, !dbg !10985
  br label %for.cond, !dbg !10987

for.cond:                                         ; preds = %for.inc, %sw.bb
  %24 = load i32, i32* %res, align 4, !dbg !10988
  %cmp11 = icmp eq i32 %24, 0, !dbg !10991
  br i1 %cmp11, label %land.rhs, label %land.end, !dbg !10992

land.rhs:                                         ; preds = %for.cond
  %25 = load i32, i32* %n, align 4, !dbg !10993
  %26 = load i32*, i32** %laces.addr, align 8, !dbg !10995
  %27 = load i32, i32* %26, align 4, !dbg !10996
  %sub13 = sub nsw i32 %27, 1, !dbg !10997
  %cmp14 = icmp slt i32 %25, %sub13, !dbg !10998
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %28 = phi i1 [ false, %for.cond ], [ %cmp14, %land.rhs ]
  br i1 %28, label %for.body, label %for.end, !dbg !10999

for.body:                                         ; preds = %land.end
  br label %while.body, !dbg !11001

while.body:                                       ; preds = %for.body, %if.end31
  %29 = load i32, i32* %size, align 4, !dbg !11003
  %30 = load i32, i32* %total, align 4, !dbg !11006
  %cmp16 = icmp ule i32 %29, %30, !dbg !11007
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !11008

if.then18:                                        ; preds = %while.body
  store i32 -1094995529, i32* %res, align 4, !dbg !11009
  br label %while.end, !dbg !11011

if.end19:                                         ; preds = %while.body
  %31 = load i8*, i8** %data, align 8, !dbg !11012
  %32 = load i8, i8* %31, align 1, !dbg !11013
  store i8 %32, i8* %temp, align 1, !dbg !11014
  %33 = load i8, i8* %temp, align 1, !dbg !11015
  %conv20 = zext i8 %33 to i32, !dbg !11015
  %34 = load i32, i32* %total, align 4, !dbg !11016
  %add21 = add i32 %34, %conv20, !dbg !11016
  store i32 %add21, i32* %total, align 4, !dbg !11016
  %35 = load i8, i8* %temp, align 1, !dbg !11017
  %conv22 = zext i8 %35 to i32, !dbg !11017
  %36 = load i32, i32* %n, align 4, !dbg !11018
  %idxprom = sext i32 %36 to i64, !dbg !11019
  %37 = load i32*, i32** %lace_size, align 8, !dbg !11019
  %arrayidx23 = getelementptr inbounds i32, i32* %37, i64 %idxprom, !dbg !11019
  %38 = load i32, i32* %arrayidx23, align 4, !dbg !11020
  %add24 = add i32 %38, %conv22, !dbg !11020
  store i32 %add24, i32* %arrayidx23, align 4, !dbg !11020
  %39 = load i8*, i8** %data, align 8, !dbg !11021
  %add.ptr25 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !11021
  store i8* %add.ptr25, i8** %data, align 8, !dbg !11021
  %40 = load i32, i32* %size, align 4, !dbg !11022
  %sub26 = sub nsw i32 %40, 1, !dbg !11022
  store i32 %sub26, i32* %size, align 4, !dbg !11022
  %41 = load i8, i8* %temp, align 1, !dbg !11023
  %conv27 = zext i8 %41 to i32, !dbg !11023
  %cmp28 = icmp ne i32 %conv27, 255, !dbg !11025
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !11026

if.then30:                                        ; preds = %if.end19
  br label %while.end, !dbg !11027

if.end31:                                         ; preds = %if.end19
  br label %while.body, !dbg !11028, !llvm.loop !11030

while.end:                                        ; preds = %if.then30, %if.then18
  br label %for.inc, !dbg !11031

for.inc:                                          ; preds = %while.end
  %42 = load i32, i32* %n, align 4, !dbg !11032
  %inc = add nsw i32 %42, 1, !dbg !11032
  store i32 %inc, i32* %n, align 4, !dbg !11032
  br label %for.cond, !dbg !11034, !llvm.loop !11035

for.end:                                          ; preds = %land.end
  %43 = load i32, i32* %size, align 4, !dbg !11037
  %44 = load i32, i32* %total, align 4, !dbg !11039
  %cmp32 = icmp ule i32 %43, %44, !dbg !11040
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !11041

if.then34:                                        ; preds = %for.end
  store i32 -1094995529, i32* %res, align 4, !dbg !11042
  br label %sw.epilog, !dbg !11044

if.end35:                                         ; preds = %for.end
  %45 = load i32, i32* %size, align 4, !dbg !11045
  %46 = load i32, i32* %total, align 4, !dbg !11046
  %sub36 = sub i32 %45, %46, !dbg !11047
  %47 = load i32, i32* %n, align 4, !dbg !11048
  %idxprom37 = sext i32 %47 to i64, !dbg !11049
  %48 = load i32*, i32** %lace_size, align 8, !dbg !11049
  %arrayidx38 = getelementptr inbounds i32, i32* %48, i64 %idxprom37, !dbg !11049
  store i32 %sub36, i32* %arrayidx38, align 4, !dbg !11050
  br label %sw.epilog, !dbg !11051

sw.bb39:                                          ; preds = %if.end10
  %49 = load i32, i32* %size, align 4, !dbg !11052
  %50 = load i32*, i32** %laces.addr, align 8, !dbg !11054
  %51 = load i32, i32* %50, align 4, !dbg !11055
  %rem = srem i32 %49, %51, !dbg !11056
  %tobool40 = icmp ne i32 %rem, 0, !dbg !11056
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !11057

if.then41:                                        ; preds = %sw.bb39
  store i32 -1094995529, i32* %res, align 4, !dbg !11058
  br label %sw.epilog, !dbg !11060

if.end42:                                         ; preds = %sw.bb39
  store i32 0, i32* %n, align 4, !dbg !11061
  br label %for.cond43, !dbg !11063

for.cond43:                                       ; preds = %for.inc49, %if.end42
  %52 = load i32, i32* %n, align 4, !dbg !11064
  %53 = load i32*, i32** %laces.addr, align 8, !dbg !11067
  %54 = load i32, i32* %53, align 4, !dbg !11068
  %cmp44 = icmp slt i32 %52, %54, !dbg !11069
  br i1 %cmp44, label %for.body46, label %for.end51, !dbg !11070

for.body46:                                       ; preds = %for.cond43
  %55 = load i32, i32* %size, align 4, !dbg !11071
  %56 = load i32*, i32** %laces.addr, align 8, !dbg !11072
  %57 = load i32, i32* %56, align 4, !dbg !11073
  %div = sdiv i32 %55, %57, !dbg !11074
  %58 = load i32, i32* %n, align 4, !dbg !11075
  %idxprom47 = sext i32 %58 to i64, !dbg !11076
  %59 = load i32*, i32** %lace_size, align 8, !dbg !11076
  %arrayidx48 = getelementptr inbounds i32, i32* %59, i64 %idxprom47, !dbg !11076
  store i32 %div, i32* %arrayidx48, align 4, !dbg !11077
  br label %for.inc49, !dbg !11076

for.inc49:                                        ; preds = %for.body46
  %60 = load i32, i32* %n, align 4, !dbg !11078
  %inc50 = add nsw i32 %60, 1, !dbg !11078
  store i32 %inc50, i32* %n, align 4, !dbg !11078
  br label %for.cond43, !dbg !11080, !llvm.loop !11081

for.end51:                                        ; preds = %for.cond43
  br label %sw.epilog, !dbg !11083

sw.bb52:                                          ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i64* %num, metadata !11084, metadata !2574), !dbg !11086
  call void @llvm.dbg.declare(metadata i64* %total53, metadata !11087, metadata !2574), !dbg !11088
  %61 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11089
  %62 = load i8*, i8** %data, align 8, !dbg !11090
  %63 = load i32, i32* %size, align 4, !dbg !11091
  %call54 = call i32 @matroska_ebmlnum_uint(%struct.MatroskaDemuxContext* %61, i8* %62, i32 %63, i64* %num), !dbg !11092
  store i32 %call54, i32* %n, align 4, !dbg !11093
  %64 = load i32, i32* %n, align 4, !dbg !11094
  %cmp55 = icmp slt i32 %64, 0, !dbg !11096
  br i1 %cmp55, label %if.then59, label %lor.lhs.false, !dbg !11097

lor.lhs.false:                                    ; preds = %sw.bb52
  %65 = load i64, i64* %num, align 8, !dbg !11098
  %cmp57 = icmp ugt i64 %65, 2147483647, !dbg !11100
  br i1 %cmp57, label %if.then59, label %if.end62, !dbg !11101

if.then59:                                        ; preds = %lor.lhs.false, %sw.bb52
  %66 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11102
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %66, i32 0, i32 1, !dbg !11104
  %67 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !11104
  %68 = bitcast %struct.AVFormatContext* %67 to i8*, !dbg !11102
  call void (i8*, i32, i8*, ...) @av_log(i8* %68, i32 32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.114, i32 0, i32 0)), !dbg !11105
  %69 = load i32, i32* %n, align 4, !dbg !11106
  %cmp60 = icmp slt i32 %69, 0, !dbg !11107
  br i1 %cmp60, label %cond.true, label %cond.false, !dbg !11106

cond.true:                                        ; preds = %if.then59
  %70 = load i32, i32* %n, align 4, !dbg !11108
  br label %cond.end, !dbg !11110

cond.false:                                       ; preds = %if.then59
  br label %cond.end, !dbg !11111

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %70, %cond.true ], [ -1094995529, %cond.false ], !dbg !11113
  store i32 %cond, i32* %res, align 4, !dbg !11115
  br label %sw.epilog, !dbg !11116

if.end62:                                         ; preds = %lor.lhs.false
  %71 = load i32, i32* %n, align 4, !dbg !11117
  %72 = load i8*, i8** %data, align 8, !dbg !11118
  %idx.ext = sext i32 %71 to i64, !dbg !11118
  %add.ptr63 = getelementptr inbounds i8, i8* %72, i64 %idx.ext, !dbg !11118
  store i8* %add.ptr63, i8** %data, align 8, !dbg !11118
  %73 = load i32, i32* %n, align 4, !dbg !11119
  %74 = load i32, i32* %size, align 4, !dbg !11120
  %sub64 = sub nsw i32 %74, %73, !dbg !11120
  store i32 %sub64, i32* %size, align 4, !dbg !11120
  %75 = load i64, i64* %num, align 8, !dbg !11121
  %conv65 = trunc i64 %75 to i32, !dbg !11121
  %76 = load i32*, i32** %lace_size, align 8, !dbg !11122
  %arrayidx66 = getelementptr inbounds i32, i32* %76, i64 0, !dbg !11122
  store i32 %conv65, i32* %arrayidx66, align 4, !dbg !11123
  %conv67 = zext i32 %conv65 to i64, !dbg !11122
  store i64 %conv67, i64* %total53, align 8, !dbg !11124
  store i32 1, i32* %n, align 4, !dbg !11125
  br label %for.cond68, !dbg !11127

for.cond68:                                       ; preds = %for.inc112, %if.end62
  %77 = load i32, i32* %res, align 4, !dbg !11128
  %cmp69 = icmp eq i32 %77, 0, !dbg !11131
  br i1 %cmp69, label %land.rhs71, label %land.end75, !dbg !11132

land.rhs71:                                       ; preds = %for.cond68
  %78 = load i32, i32* %n, align 4, !dbg !11133
  %79 = load i32*, i32** %laces.addr, align 8, !dbg !11135
  %80 = load i32, i32* %79, align 4, !dbg !11136
  %sub72 = sub nsw i32 %80, 1, !dbg !11137
  %cmp73 = icmp slt i32 %78, %sub72, !dbg !11138
  br label %land.end75

land.end75:                                       ; preds = %land.rhs71, %for.cond68
  %81 = phi i1 [ false, %for.cond68 ], [ %cmp73, %land.rhs71 ]
  br i1 %81, label %for.body76, label %for.end114, !dbg !11139

for.body76:                                       ; preds = %land.end75
  call void @llvm.dbg.declare(metadata i64* %snum, metadata !11141, metadata !2574), !dbg !11143
  call void @llvm.dbg.declare(metadata i32* %r, metadata !11144, metadata !2574), !dbg !11145
  %82 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11146
  %83 = load i8*, i8** %data, align 8, !dbg !11147
  %84 = load i32, i32* %size, align 4, !dbg !11148
  %call77 = call i32 @matroska_ebmlnum_sint(%struct.MatroskaDemuxContext* %82, i8* %83, i32 %84, i64* %snum), !dbg !11149
  store i32 %call77, i32* %r, align 4, !dbg !11150
  %85 = load i32, i32* %r, align 4, !dbg !11151
  %cmp78 = icmp slt i32 %85, 0, !dbg !11153
  br i1 %cmp78, label %if.then88, label %lor.lhs.false80, !dbg !11154

lor.lhs.false80:                                  ; preds = %for.body76
  %86 = load i32, i32* %n, align 4, !dbg !11155
  %sub81 = sub nsw i32 %86, 1, !dbg !11157
  %idxprom82 = sext i32 %sub81 to i64, !dbg !11158
  %87 = load i32*, i32** %lace_size, align 8, !dbg !11158
  %arrayidx83 = getelementptr inbounds i32, i32* %87, i64 %idxprom82, !dbg !11158
  %88 = load i32, i32* %arrayidx83, align 4, !dbg !11158
  %conv84 = zext i32 %88 to i64, !dbg !11158
  %89 = load i64, i64* %snum, align 8, !dbg !11159
  %add85 = add nsw i64 %conv84, %89, !dbg !11160
  %cmp86 = icmp ugt i64 %add85, 2147483647, !dbg !11161
  br i1 %cmp86, label %if.then88, label %if.end96, !dbg !11162

if.then88:                                        ; preds = %lor.lhs.false80, %for.body76
  %90 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11163
  %ctx89 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %90, i32 0, i32 1, !dbg !11165
  %91 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx89, align 8, !dbg !11165
  %92 = bitcast %struct.AVFormatContext* %91 to i8*, !dbg !11163
  call void (i8*, i32, i8*, ...) @av_log(i8* %92, i32 32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.114, i32 0, i32 0)), !dbg !11166
  %93 = load i32, i32* %r, align 4, !dbg !11167
  %cmp90 = icmp slt i32 %93, 0, !dbg !11168
  br i1 %cmp90, label %cond.true92, label %cond.false93, !dbg !11167

cond.true92:                                      ; preds = %if.then88
  %94 = load i32, i32* %r, align 4, !dbg !11169
  br label %cond.end94, !dbg !11171

cond.false93:                                     ; preds = %if.then88
  br label %cond.end94, !dbg !11172

cond.end94:                                       ; preds = %cond.false93, %cond.true92
  %cond95 = phi i32 [ %94, %cond.true92 ], [ -1094995529, %cond.false93 ], !dbg !11174
  store i32 %cond95, i32* %res, align 4, !dbg !11176
  br label %for.end114, !dbg !11177

if.end96:                                         ; preds = %lor.lhs.false80
  %95 = load i32, i32* %r, align 4, !dbg !11178
  %96 = load i8*, i8** %data, align 8, !dbg !11179
  %idx.ext97 = sext i32 %95 to i64, !dbg !11179
  %add.ptr98 = getelementptr inbounds i8, i8* %96, i64 %idx.ext97, !dbg !11179
  store i8* %add.ptr98, i8** %data, align 8, !dbg !11179
  %97 = load i32, i32* %r, align 4, !dbg !11180
  %98 = load i32, i32* %size, align 4, !dbg !11181
  %sub99 = sub nsw i32 %98, %97, !dbg !11181
  store i32 %sub99, i32* %size, align 4, !dbg !11181
  %99 = load i32, i32* %n, align 4, !dbg !11182
  %sub100 = sub nsw i32 %99, 1, !dbg !11183
  %idxprom101 = sext i32 %sub100 to i64, !dbg !11184
  %100 = load i32*, i32** %lace_size, align 8, !dbg !11184
  %arrayidx102 = getelementptr inbounds i32, i32* %100, i64 %idxprom101, !dbg !11184
  %101 = load i32, i32* %arrayidx102, align 4, !dbg !11184
  %conv103 = zext i32 %101 to i64, !dbg !11184
  %102 = load i64, i64* %snum, align 8, !dbg !11185
  %add104 = add nsw i64 %conv103, %102, !dbg !11186
  %conv105 = trunc i64 %add104 to i32, !dbg !11184
  %103 = load i32, i32* %n, align 4, !dbg !11187
  %idxprom106 = sext i32 %103 to i64, !dbg !11188
  %104 = load i32*, i32** %lace_size, align 8, !dbg !11188
  %arrayidx107 = getelementptr inbounds i32, i32* %104, i64 %idxprom106, !dbg !11188
  store i32 %conv105, i32* %arrayidx107, align 4, !dbg !11189
  %105 = load i32, i32* %n, align 4, !dbg !11190
  %idxprom108 = sext i32 %105 to i64, !dbg !11191
  %106 = load i32*, i32** %lace_size, align 8, !dbg !11191
  %arrayidx109 = getelementptr inbounds i32, i32* %106, i64 %idxprom108, !dbg !11191
  %107 = load i32, i32* %arrayidx109, align 4, !dbg !11191
  %conv110 = zext i32 %107 to i64, !dbg !11191
  %108 = load i64, i64* %total53, align 8, !dbg !11192
  %add111 = add i64 %108, %conv110, !dbg !11192
  store i64 %add111, i64* %total53, align 8, !dbg !11192
  br label %for.inc112, !dbg !11193

for.inc112:                                       ; preds = %if.end96
  %109 = load i32, i32* %n, align 4, !dbg !11194
  %inc113 = add nsw i32 %109, 1, !dbg !11194
  store i32 %inc113, i32* %n, align 4, !dbg !11194
  br label %for.cond68, !dbg !11196, !llvm.loop !11197

for.end114:                                       ; preds = %cond.end94, %land.end75
  %110 = load i32, i32* %size, align 4, !dbg !11199
  %conv115 = sext i32 %110 to i64, !dbg !11199
  %111 = load i64, i64* %total53, align 8, !dbg !11201
  %cmp116 = icmp ule i64 %conv115, %111, !dbg !11202
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !11203

if.then118:                                       ; preds = %for.end114
  store i32 -1094995529, i32* %res, align 4, !dbg !11204
  br label %sw.epilog, !dbg !11206

if.end119:                                        ; preds = %for.end114
  %112 = load i32, i32* %size, align 4, !dbg !11207
  %conv120 = sext i32 %112 to i64, !dbg !11207
  %113 = load i64, i64* %total53, align 8, !dbg !11208
  %sub121 = sub i64 %conv120, %113, !dbg !11209
  %conv122 = trunc i64 %sub121 to i32, !dbg !11207
  %114 = load i32*, i32** %laces.addr, align 8, !dbg !11210
  %115 = load i32, i32* %114, align 4, !dbg !11211
  %sub123 = sub nsw i32 %115, 1, !dbg !11212
  %idxprom124 = sext i32 %sub123 to i64, !dbg !11213
  %116 = load i32*, i32** %lace_size, align 8, !dbg !11213
  %arrayidx125 = getelementptr inbounds i32, i32* %116, i64 %idxprom124, !dbg !11213
  store i32 %conv122, i32* %arrayidx125, align 4, !dbg !11214
  br label %sw.epilog, !dbg !11215

sw.epilog:                                        ; preds = %if.end10, %if.end119, %if.then118, %cond.end, %for.end51, %if.then41, %if.end35, %if.then34
  %117 = load i8*, i8** %data, align 8, !dbg !11216
  %118 = load i8**, i8*** %buf.addr, align 8, !dbg !11217
  store i8* %117, i8** %118, align 8, !dbg !11218
  %119 = load i32*, i32** %lace_size, align 8, !dbg !11219
  %120 = load i32**, i32*** %lace_buf.addr, align 8, !dbg !11220
  store i32* %119, i32** %120, align 8, !dbg !11221
  %121 = load i32, i32* %size, align 4, !dbg !11222
  %122 = load i32*, i32** %buf_size.addr, align 8, !dbg !11223
  store i32 %121, i32* %122, align 4, !dbg !11224
  %123 = load i32, i32* %res, align 4, !dbg !11225
  store i32 %123, i32* %retval, align 4, !dbg !11226
  br label %return, !dbg !11226

return:                                           ; preds = %sw.epilog, %if.then9, %if.end, %if.then2
  %124 = load i32, i32* %retval, align 4, !dbg !11227
  ret i32 %124, !dbg !11227
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_parse_rm_audio(%struct.MatroskaDemuxContext* %matroska, %struct.MatroskaTrack* %track, %struct.AVStream* %st, i8* %data, i32 %size, i64 %timecode, i64 %pos) #0 !dbg !11228 {
entry:
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %track.addr = alloca %struct.MatroskaTrack*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %timecode.addr = alloca i64, align 8
  %pos.addr = alloca i64, align 8
  %a = alloca i32, align 4
  %sps = alloca i32, align 4
  %cfs = alloca i32, align 4
  %h = alloca i32, align 4
  %y = alloca i32, align 4
  %w = alloca i32, align 4
  %x = alloca i32, align 4
  %ret = alloca i32, align 4
  %pktl = alloca %struct.AVPacket, align 8
  %pkt = alloca %struct.AVPacket*, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !11231, metadata !2574), !dbg !11232
  store %struct.MatroskaTrack* %track, %struct.MatroskaTrack** %track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track.addr, metadata !11233, metadata !2574), !dbg !11234
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !11235, metadata !2574), !dbg !11236
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11237, metadata !2574), !dbg !11238
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11239, metadata !2574), !dbg !11240
  store i64 %timecode, i64* %timecode.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timecode.addr, metadata !11241, metadata !2574), !dbg !11242
  store i64 %pos, i64* %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pos.addr, metadata !11243, metadata !2574), !dbg !11244
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11245, metadata !2574), !dbg !11246
  %0 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11247
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i32 0, i32 19, !dbg !11248
  %1 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !11248
  %block_align = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i32 0, i32 24, !dbg !11249
  %2 = load i32, i32* %block_align, align 8, !dbg !11249
  store i32 %2, i32* %a, align 4, !dbg !11246
  call void @llvm.dbg.declare(metadata i32* %sps, metadata !11250, metadata !2574), !dbg !11251
  %3 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11252
  %audio = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %3, i32 0, i32 13, !dbg !11253
  %sub_packet_size = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio, i32 0, i32 7, !dbg !11254
  %4 = load i32, i32* %sub_packet_size, align 4, !dbg !11254
  store i32 %4, i32* %sps, align 4, !dbg !11251
  call void @llvm.dbg.declare(metadata i32* %cfs, metadata !11255, metadata !2574), !dbg !11256
  %5 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11257
  %audio1 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %5, i32 0, i32 13, !dbg !11258
  %coded_framesize = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio1, i32 0, i32 4, !dbg !11259
  %6 = load i32, i32* %coded_framesize, align 8, !dbg !11259
  store i32 %6, i32* %cfs, align 4, !dbg !11256
  call void @llvm.dbg.declare(metadata i32* %h, metadata !11260, metadata !2574), !dbg !11261
  %7 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11262
  %audio2 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %7, i32 0, i32 13, !dbg !11263
  %sub_packet_h = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio2, i32 0, i32 5, !dbg !11264
  %8 = load i32, i32* %sub_packet_h, align 4, !dbg !11264
  store i32 %8, i32* %h, align 4, !dbg !11261
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11265, metadata !2574), !dbg !11266
  %9 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11267
  %audio3 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %9, i32 0, i32 13, !dbg !11268
  %sub_packet_cnt = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio3, i32 0, i32 8, !dbg !11269
  %10 = load i32, i32* %sub_packet_cnt, align 8, !dbg !11269
  store i32 %10, i32* %y, align 4, !dbg !11266
  call void @llvm.dbg.declare(metadata i32* %w, metadata !11270, metadata !2574), !dbg !11271
  %11 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11272
  %audio4 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %11, i32 0, i32 13, !dbg !11273
  %frame_size = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio4, i32 0, i32 6, !dbg !11274
  %12 = load i32, i32* %frame_size, align 8, !dbg !11274
  store i32 %12, i32* %w, align 4, !dbg !11271
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11275, metadata !2574), !dbg !11276
  %13 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11277
  %audio5 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %13, i32 0, i32 13, !dbg !11279
  %pkt_cnt = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio5, i32 0, i32 9, !dbg !11280
  %14 = load i32, i32* %pkt_cnt, align 4, !dbg !11280
  %tobool = icmp ne i32 %14, 0, !dbg !11277
  br i1 %tobool, label %if.end100, label %if.then, !dbg !11281

if.then:                                          ; preds = %entry
  %15 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11282
  %audio6 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %15, i32 0, i32 13, !dbg !11285
  %sub_packet_cnt7 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio6, i32 0, i32 8, !dbg !11286
  %16 = load i32, i32* %sub_packet_cnt7, align 8, !dbg !11286
  %cmp = icmp eq i32 %16, 0, !dbg !11287
  br i1 %cmp, label %if.then8, label %if.end, !dbg !11288

if.then8:                                         ; preds = %if.then
  %17 = load i64, i64* %timecode.addr, align 8, !dbg !11289
  %18 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11290
  %audio9 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %18, i32 0, i32 13, !dbg !11291
  %buf_timecode = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio9, i32 0, i32 10, !dbg !11292
  store i64 %17, i64* %buf_timecode, align 8, !dbg !11293
  br label %if.end, !dbg !11290

if.end:                                           ; preds = %if.then8, %if.then
  %19 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11294
  %codecpar10 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i32 0, i32 19, !dbg !11296
  %20 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar10, align 8, !dbg !11296
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %20, i32 0, i32 1, !dbg !11297
  %21 = load i32, i32* %codec_id, align 4, !dbg !11297
  %cmp11 = icmp eq i32 %21, 77825, !dbg !11298
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !11299

if.then12:                                        ; preds = %if.end
  %22 = load i32, i32* %size.addr, align 4, !dbg !11300
  %23 = load i32, i32* %cfs, align 4, !dbg !11303
  %24 = load i32, i32* %h, align 4, !dbg !11304
  %mul = mul nsw i32 %23, %24, !dbg !11305
  %div = sdiv i32 %mul, 2, !dbg !11306
  %cmp13 = icmp slt i32 %22, %div, !dbg !11307
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !11308

if.then14:                                        ; preds = %if.then12
  %25 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11309
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %25, i32 0, i32 1, !dbg !11311
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !11311
  %27 = bitcast %struct.AVFormatContext* %26 to i8*, !dbg !11309
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.120, i32 0, i32 0)), !dbg !11312
  store i32 -1094995529, i32* %retval, align 4, !dbg !11313
  br label %return, !dbg !11313

if.end15:                                         ; preds = %if.then12
  store i32 0, i32* %x, align 4, !dbg !11314
  br label %for.cond, !dbg !11316

for.cond:                                         ; preds = %for.inc, %if.end15
  %28 = load i32, i32* %x, align 4, !dbg !11317
  %29 = load i32, i32* %h, align 4, !dbg !11320
  %div16 = sdiv i32 %29, 2, !dbg !11321
  %cmp17 = icmp slt i32 %28, %div16, !dbg !11322
  br i1 %cmp17, label %for.body, label %for.end, !dbg !11323

for.body:                                         ; preds = %for.cond
  %30 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11324
  %audio18 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %30, i32 0, i32 13, !dbg !11325
  %buf = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio18, i32 0, i32 11, !dbg !11326
  %31 = load i8*, i8** %buf, align 8, !dbg !11326
  %32 = load i32, i32* %x, align 4, !dbg !11327
  %mul19 = mul nsw i32 %32, 2, !dbg !11328
  %33 = load i32, i32* %w, align 4, !dbg !11329
  %mul20 = mul nsw i32 %mul19, %33, !dbg !11330
  %idx.ext = sext i32 %mul20 to i64, !dbg !11331
  %add.ptr = getelementptr inbounds i8, i8* %31, i64 %idx.ext, !dbg !11331
  %34 = load i32, i32* %y, align 4, !dbg !11332
  %35 = load i32, i32* %cfs, align 4, !dbg !11333
  %mul21 = mul nsw i32 %34, %35, !dbg !11334
  %idx.ext22 = sext i32 %mul21 to i64, !dbg !11335
  %add.ptr23 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext22, !dbg !11335
  %36 = load i8*, i8** %data.addr, align 8, !dbg !11336
  %37 = load i32, i32* %x, align 4, !dbg !11337
  %38 = load i32, i32* %cfs, align 4, !dbg !11338
  %mul24 = mul nsw i32 %37, %38, !dbg !11339
  %idx.ext25 = sext i32 %mul24 to i64, !dbg !11340
  %add.ptr26 = getelementptr inbounds i8, i8* %36, i64 %idx.ext25, !dbg !11340
  %39 = load i32, i32* %cfs, align 4, !dbg !11341
  %conv = sext i32 %39 to i64, !dbg !11341
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr23, i8* %add.ptr26, i64 %conv, i32 1, i1 false), !dbg !11342
  br label %for.inc, !dbg !11342

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %x, align 4, !dbg !11343
  %inc = add nsw i32 %40, 1, !dbg !11343
  store i32 %inc, i32* %x, align 4, !dbg !11343
  br label %for.cond, !dbg !11345, !llvm.loop !11346

for.end:                                          ; preds = %for.cond
  br label %if.end78, !dbg !11348

if.else:                                          ; preds = %if.end
  %41 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11349
  %codecpar27 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %41, i32 0, i32 19, !dbg !11352
  %42 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar27, align 8, !dbg !11352
  %codec_id28 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %42, i32 0, i32 1, !dbg !11353
  %43 = load i32, i32* %codec_id28, align 4, !dbg !11353
  %cmp29 = icmp eq i32 %43, 86057, !dbg !11354
  br i1 %cmp29, label %if.then31, label %if.else43, !dbg !11349

if.then31:                                        ; preds = %if.else
  %44 = load i32, i32* %size.addr, align 4, !dbg !11355
  %45 = load i32, i32* %w, align 4, !dbg !11358
  %cmp32 = icmp slt i32 %44, %45, !dbg !11359
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !11360

if.then34:                                        ; preds = %if.then31
  %46 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11361
  %ctx35 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %46, i32 0, i32 1, !dbg !11363
  %47 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx35, align 8, !dbg !11363
  %48 = bitcast %struct.AVFormatContext* %47 to i8*, !dbg !11361
  call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.121, i32 0, i32 0)), !dbg !11364
  store i32 -1094995529, i32* %retval, align 4, !dbg !11365
  br label %return, !dbg !11365

if.end36:                                         ; preds = %if.then31
  %49 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11366
  %audio37 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %49, i32 0, i32 13, !dbg !11367
  %buf38 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio37, i32 0, i32 11, !dbg !11368
  %50 = load i8*, i8** %buf38, align 8, !dbg !11368
  %51 = load i32, i32* %y, align 4, !dbg !11369
  %52 = load i32, i32* %w, align 4, !dbg !11370
  %mul39 = mul nsw i32 %51, %52, !dbg !11371
  %idx.ext40 = sext i32 %mul39 to i64, !dbg !11372
  %add.ptr41 = getelementptr inbounds i8, i8* %50, i64 %idx.ext40, !dbg !11372
  %53 = load i8*, i8** %data.addr, align 8, !dbg !11373
  %54 = load i32, i32* %w, align 4, !dbg !11374
  %conv42 = sext i32 %54 to i64, !dbg !11374
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr41, i8* %53, i64 %conv42, i32 1, i1 false), !dbg !11375
  br label %if.end77, !dbg !11376

if.else43:                                        ; preds = %if.else
  %55 = load i32, i32* %size.addr, align 4, !dbg !11377
  %56 = load i32, i32* %sps, align 4, !dbg !11380
  %57 = load i32, i32* %w, align 4, !dbg !11381
  %mul44 = mul nsw i32 %56, %57, !dbg !11382
  %58 = load i32, i32* %sps, align 4, !dbg !11383
  %div45 = sdiv i32 %mul44, %58, !dbg !11384
  %cmp46 = icmp slt i32 %55, %div45, !dbg !11385
  br i1 %cmp46, label %if.then52, label %lor.lhs.false, !dbg !11386

lor.lhs.false:                                    ; preds = %if.else43
  %59 = load i32, i32* %h, align 4, !dbg !11387
  %cmp48 = icmp sle i32 %59, 0, !dbg !11389
  br i1 %cmp48, label %if.then52, label %lor.lhs.false50, !dbg !11390

lor.lhs.false50:                                  ; preds = %lor.lhs.false
  %60 = load i32, i32* %w, align 4, !dbg !11391
  %61 = load i32, i32* %sps, align 4, !dbg !11393
  %rem = srem i32 %60, %61, !dbg !11394
  %tobool51 = icmp ne i32 %rem, 0, !dbg !11394
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !11395

if.then52:                                        ; preds = %lor.lhs.false50, %lor.lhs.false, %if.else43
  %62 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11396
  %ctx53 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %62, i32 0, i32 1, !dbg !11398
  %63 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx53, align 8, !dbg !11398
  %64 = bitcast %struct.AVFormatContext* %63 to i8*, !dbg !11396
  call void (i8*, i32, i8*, ...) @av_log(i8* %64, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.122, i32 0, i32 0)), !dbg !11399
  store i32 -1094995529, i32* %retval, align 4, !dbg !11400
  br label %return, !dbg !11400

if.end54:                                         ; preds = %lor.lhs.false50
  store i32 0, i32* %x, align 4, !dbg !11401
  br label %for.cond55, !dbg !11403

for.cond55:                                       ; preds = %for.inc74, %if.end54
  %65 = load i32, i32* %x, align 4, !dbg !11404
  %66 = load i32, i32* %w, align 4, !dbg !11407
  %67 = load i32, i32* %sps, align 4, !dbg !11408
  %div56 = sdiv i32 %66, %67, !dbg !11409
  %cmp57 = icmp slt i32 %65, %div56, !dbg !11410
  br i1 %cmp57, label %for.body59, label %for.end76, !dbg !11411

for.body59:                                       ; preds = %for.cond55
  %68 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11412
  %audio60 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %68, i32 0, i32 13, !dbg !11413
  %buf61 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio60, i32 0, i32 11, !dbg !11414
  %69 = load i8*, i8** %buf61, align 8, !dbg !11414
  %70 = load i32, i32* %sps, align 4, !dbg !11415
  %71 = load i32, i32* %h, align 4, !dbg !11416
  %72 = load i32, i32* %x, align 4, !dbg !11417
  %mul62 = mul nsw i32 %71, %72, !dbg !11418
  %73 = load i32, i32* %h, align 4, !dbg !11419
  %add = add nsw i32 %73, 1, !dbg !11420
  %div63 = sdiv i32 %add, 2, !dbg !11421
  %74 = load i32, i32* %y, align 4, !dbg !11422
  %and = and i32 %74, 1, !dbg !11423
  %mul64 = mul nsw i32 %div63, %and, !dbg !11424
  %add65 = add nsw i32 %mul62, %mul64, !dbg !11425
  %75 = load i32, i32* %y, align 4, !dbg !11426
  %shr = ashr i32 %75, 1, !dbg !11427
  %add66 = add nsw i32 %add65, %shr, !dbg !11428
  %mul67 = mul nsw i32 %70, %add66, !dbg !11429
  %idx.ext68 = sext i32 %mul67 to i64, !dbg !11430
  %add.ptr69 = getelementptr inbounds i8, i8* %69, i64 %idx.ext68, !dbg !11430
  %76 = load i8*, i8** %data.addr, align 8, !dbg !11431
  %77 = load i32, i32* %x, align 4, !dbg !11432
  %78 = load i32, i32* %sps, align 4, !dbg !11433
  %mul70 = mul nsw i32 %77, %78, !dbg !11434
  %idx.ext71 = sext i32 %mul70 to i64, !dbg !11435
  %add.ptr72 = getelementptr inbounds i8, i8* %76, i64 %idx.ext71, !dbg !11435
  %79 = load i32, i32* %sps, align 4, !dbg !11436
  %conv73 = sext i32 %79 to i64, !dbg !11436
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr69, i8* %add.ptr72, i64 %conv73, i32 1, i1 false), !dbg !11437
  br label %for.inc74, !dbg !11437

for.inc74:                                        ; preds = %for.body59
  %80 = load i32, i32* %x, align 4, !dbg !11438
  %inc75 = add nsw i32 %80, 1, !dbg !11438
  store i32 %inc75, i32* %x, align 4, !dbg !11438
  br label %for.cond55, !dbg !11440, !llvm.loop !11441

for.end76:                                        ; preds = %for.cond55
  br label %if.end77

if.end77:                                         ; preds = %for.end76, %if.end36
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %for.end
  %81 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11443
  %audio79 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %81, i32 0, i32 13, !dbg !11445
  %sub_packet_cnt80 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio79, i32 0, i32 8, !dbg !11446
  %82 = load i32, i32* %sub_packet_cnt80, align 8, !dbg !11447
  %inc81 = add nsw i32 %82, 1, !dbg !11447
  store i32 %inc81, i32* %sub_packet_cnt80, align 8, !dbg !11447
  %83 = load i32, i32* %h, align 4, !dbg !11448
  %cmp82 = icmp sge i32 %inc81, %83, !dbg !11449
  br i1 %cmp82, label %if.then84, label %if.end99, !dbg !11450

if.then84:                                        ; preds = %if.end78
  %84 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11451
  %codecpar85 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %84, i32 0, i32 19, !dbg !11454
  %85 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar85, align 8, !dbg !11454
  %codec_id86 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %85, i32 0, i32 1, !dbg !11455
  %86 = load i32, i32* %codec_id86, align 4, !dbg !11455
  %cmp87 = icmp eq i32 %86, 86057, !dbg !11456
  br i1 %cmp87, label %if.then89, label %if.end92, !dbg !11457

if.then89:                                        ; preds = %if.then84
  %87 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11458
  %audio90 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %87, i32 0, i32 13, !dbg !11459
  %buf91 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio90, i32 0, i32 11, !dbg !11460
  %88 = load i8*, i8** %buf91, align 8, !dbg !11460
  %89 = load i32, i32* %h, align 4, !dbg !11461
  %90 = load i32, i32* %w, align 4, !dbg !11462
  call void @ff_rm_reorder_sipr_data(i8* %88, i32 %89, i32 %90), !dbg !11463
  br label %if.end92, !dbg !11463

if.end92:                                         ; preds = %if.then89, %if.then84
  %91 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11464
  %audio93 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %91, i32 0, i32 13, !dbg !11465
  %sub_packet_cnt94 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio93, i32 0, i32 8, !dbg !11466
  store i32 0, i32* %sub_packet_cnt94, align 8, !dbg !11467
  %92 = load i32, i32* %h, align 4, !dbg !11468
  %93 = load i32, i32* %w, align 4, !dbg !11469
  %mul95 = mul nsw i32 %92, %93, !dbg !11470
  %94 = load i32, i32* %a, align 4, !dbg !11471
  %div96 = sdiv i32 %mul95, %94, !dbg !11472
  %95 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11473
  %audio97 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %95, i32 0, i32 13, !dbg !11474
  %pkt_cnt98 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio97, i32 0, i32 9, !dbg !11475
  store i32 %div96, i32* %pkt_cnt98, align 4, !dbg !11476
  br label %if.end99, !dbg !11477

if.end99:                                         ; preds = %if.end92, %if.end78
  br label %if.end100, !dbg !11478

if.end100:                                        ; preds = %if.end99, %entry
  br label %while.cond, !dbg !11479

while.cond:                                       ; preds = %if.end128, %if.end100
  %96 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11480
  %audio101 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %96, i32 0, i32 13, !dbg !11482
  %pkt_cnt102 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio101, i32 0, i32 9, !dbg !11483
  %97 = load i32, i32* %pkt_cnt102, align 4, !dbg !11483
  %tobool103 = icmp ne i32 %97, 0, !dbg !11484
  br i1 %tobool103, label %while.body, label %while.end, !dbg !11484

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11485, metadata !2574), !dbg !11487
  call void @llvm.dbg.declare(metadata %struct.AVPacket* %pktl, metadata !11488, metadata !2574), !dbg !11489
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt, metadata !11490, metadata !2574), !dbg !11491
  store %struct.AVPacket* %pktl, %struct.AVPacket** %pkt, align 8, !dbg !11491
  %98 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11492
  %99 = load i32, i32* %a, align 4, !dbg !11493
  %call = call i32 @av_new_packet(%struct.AVPacket* %98, i32 %99), !dbg !11494
  store i32 %call, i32* %ret, align 4, !dbg !11495
  %100 = load i32, i32* %ret, align 4, !dbg !11496
  %cmp104 = icmp slt i32 %100, 0, !dbg !11498
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !11499

if.then106:                                       ; preds = %while.body
  %101 = load i32, i32* %ret, align 4, !dbg !11500
  store i32 %101, i32* %retval, align 4, !dbg !11502
  br label %return, !dbg !11502

if.end107:                                        ; preds = %while.body
  %102 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11503
  %data108 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %102, i32 0, i32 3, !dbg !11504
  %103 = load i8*, i8** %data108, align 8, !dbg !11504
  %104 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11505
  %audio109 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %104, i32 0, i32 13, !dbg !11506
  %buf110 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio109, i32 0, i32 11, !dbg !11507
  %105 = load i8*, i8** %buf110, align 8, !dbg !11507
  %106 = load i32, i32* %a, align 4, !dbg !11508
  %107 = load i32, i32* %h, align 4, !dbg !11509
  %108 = load i32, i32* %w, align 4, !dbg !11510
  %mul111 = mul nsw i32 %107, %108, !dbg !11511
  %109 = load i32, i32* %a, align 4, !dbg !11512
  %div112 = sdiv i32 %mul111, %109, !dbg !11513
  %110 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11514
  %audio113 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %110, i32 0, i32 13, !dbg !11515
  %pkt_cnt114 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio113, i32 0, i32 9, !dbg !11516
  %111 = load i32, i32* %pkt_cnt114, align 4, !dbg !11517
  %dec = add nsw i32 %111, -1, !dbg !11517
  store i32 %dec, i32* %pkt_cnt114, align 4, !dbg !11517
  %sub = sub nsw i32 %div112, %111, !dbg !11518
  %mul115 = mul nsw i32 %106, %sub, !dbg !11519
  %idx.ext116 = sext i32 %mul115 to i64, !dbg !11520
  %add.ptr117 = getelementptr inbounds i8, i8* %105, i64 %idx.ext116, !dbg !11520
  %112 = load i32, i32* %a, align 4, !dbg !11521
  %conv118 = sext i32 %112 to i64, !dbg !11521
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %add.ptr117, i64 %conv118, i32 1, i1 false), !dbg !11522
  %113 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11523
  %audio119 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %113, i32 0, i32 13, !dbg !11524
  %buf_timecode120 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio119, i32 0, i32 10, !dbg !11525
  %114 = load i64, i64* %buf_timecode120, align 8, !dbg !11525
  %115 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11526
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %115, i32 0, i32 1, !dbg !11527
  store i64 %114, i64* %pts, align 8, !dbg !11528
  %116 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11529
  %audio121 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %116, i32 0, i32 13, !dbg !11530
  %buf_timecode122 = getelementptr inbounds %struct.MatroskaTrackAudio, %struct.MatroskaTrackAudio* %audio121, i32 0, i32 10, !dbg !11531
  store i64 -9223372036854775808, i64* %buf_timecode122, align 8, !dbg !11532
  %117 = load i64, i64* %pos.addr, align 8, !dbg !11533
  %118 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11534
  %pos123 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %118, i32 0, i32 10, !dbg !11535
  store i64 %117, i64* %pos123, align 8, !dbg !11536
  %119 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11537
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %119, i32 0, i32 0, !dbg !11538
  %120 = load i32, i32* %index, align 8, !dbg !11538
  %121 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11539
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %121, i32 0, i32 5, !dbg !11540
  store i32 %120, i32* %stream_index, align 4, !dbg !11541
  %122 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11542
  %queue = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %122, i32 0, i32 18, !dbg !11543
  %123 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11544
  %queue_end = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %123, i32 0, i32 19, !dbg !11545
  %124 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11546
  %call124 = call i32 @ff_packet_list_put(%struct.AVPacketList** %queue, %struct.AVPacketList** %queue_end, %struct.AVPacket* %124, i32 0), !dbg !11547
  store i32 %call124, i32* %ret, align 4, !dbg !11548
  %125 = load i32, i32* %ret, align 4, !dbg !11549
  %cmp125 = icmp slt i32 %125, 0, !dbg !11551
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !11552

if.then127:                                       ; preds = %if.end107
  %126 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11553
  call void @av_packet_unref(%struct.AVPacket* %126), !dbg !11555
  store i32 -12, i32* %retval, align 4, !dbg !11556
  br label %return, !dbg !11556

if.end128:                                        ; preds = %if.end107
  br label %while.cond, !dbg !11557, !llvm.loop !11559

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !11560
  br label %return, !dbg !11560

return:                                           ; preds = %while.end, %if.then127, %if.then106, %if.then52, %if.then34, %if.then14
  %127 = load i32, i32* %retval, align 4, !dbg !11561
  ret i32 %127, !dbg !11561
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_parse_webvtt(%struct.MatroskaDemuxContext* %matroska, %struct.MatroskaTrack* %track, %struct.AVStream* %st, i8* %data, i32 %data_len, i64 %timecode, i64 %duration, i64 %pos) #0 !dbg !11562 {
entry:
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %track.addr = alloca %struct.MatroskaTrack*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %data.addr = alloca i8*, align 8
  %data_len.addr = alloca i32, align 4
  %timecode.addr = alloca i64, align 8
  %duration.addr = alloca i64, align 8
  %pos.addr = alloca i64, align 8
  %pktl = alloca %struct.AVPacket, align 8
  %pkt = alloca %struct.AVPacket*, align 8
  %id = alloca i8*, align 8
  %settings = alloca i8*, align 8
  %text = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %id_len = alloca i32, align 4
  %settings_len = alloca i32, align 4
  %text_len = alloca i32, align 4
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  %err = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i8, align 1
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !11565, metadata !2574), !dbg !11566
  store %struct.MatroskaTrack* %track, %struct.MatroskaTrack** %track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track.addr, metadata !11567, metadata !2574), !dbg !11568
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !11569, metadata !2574), !dbg !11570
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11571, metadata !2574), !dbg !11572
  store i32 %data_len, i32* %data_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_len.addr, metadata !11573, metadata !2574), !dbg !11574
  store i64 %timecode, i64* %timecode.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timecode.addr, metadata !11575, metadata !2574), !dbg !11576
  store i64 %duration, i64* %duration.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %duration.addr, metadata !11577, metadata !2574), !dbg !11578
  store i64 %pos, i64* %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pos.addr, metadata !11579, metadata !2574), !dbg !11580
  call void @llvm.dbg.declare(metadata %struct.AVPacket* %pktl, metadata !11581, metadata !2574), !dbg !11582
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt, metadata !11583, metadata !2574), !dbg !11584
  store %struct.AVPacket* %pktl, %struct.AVPacket** %pkt, align 8, !dbg !11584
  call void @llvm.dbg.declare(metadata i8** %id, metadata !11585, metadata !2574), !dbg !11586
  call void @llvm.dbg.declare(metadata i8** %settings, metadata !11587, metadata !2574), !dbg !11588
  call void @llvm.dbg.declare(metadata i8** %text, metadata !11589, metadata !2574), !dbg !11590
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !11591, metadata !2574), !dbg !11592
  call void @llvm.dbg.declare(metadata i32* %id_len, metadata !11593, metadata !2574), !dbg !11594
  call void @llvm.dbg.declare(metadata i32* %settings_len, metadata !11595, metadata !2574), !dbg !11596
  call void @llvm.dbg.declare(metadata i32* %text_len, metadata !11597, metadata !2574), !dbg !11598
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11599, metadata !2574), !dbg !11600
  call void @llvm.dbg.declare(metadata i8** %q, metadata !11601, metadata !2574), !dbg !11602
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11603, metadata !2574), !dbg !11604
  %0 = load i32, i32* %data_len.addr, align 4, !dbg !11605
  %cmp = icmp sle i32 %0, 0, !dbg !11607
  br i1 %cmp, label %if.then, label %if.end, !dbg !11608

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !11609
  br label %return, !dbg !11609

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %data.addr, align 8, !dbg !11610
  store i8* %1, i8** %p, align 8, !dbg !11611
  %2 = load i8*, i8** %data.addr, align 8, !dbg !11612
  %3 = load i32, i32* %data_len.addr, align 4, !dbg !11613
  %idx.ext = sext i32 %3 to i64, !dbg !11614
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !11614
  store i8* %add.ptr, i8** %q, align 8, !dbg !11615
  %4 = load i8*, i8** %p, align 8, !dbg !11616
  store i8* %4, i8** %id, align 8, !dbg !11617
  store i32 -1, i32* %id_len, align 4, !dbg !11618
  br label %while.cond, !dbg !11619

while.cond:                                       ; preds = %if.end14, %if.end
  %5 = load i8*, i8** %p, align 8, !dbg !11620
  %6 = load i8*, i8** %q, align 8, !dbg !11622
  %cmp1 = icmp ult i8* %5, %6, !dbg !11623
  br i1 %cmp1, label %while.body, label %while.end, !dbg !11624

while.body:                                       ; preds = %while.cond
  %7 = load i8*, i8** %p, align 8, !dbg !11625
  %8 = load i8, i8* %7, align 1, !dbg !11628
  %conv = zext i8 %8 to i32, !dbg !11628
  %cmp2 = icmp eq i32 %conv, 13, !dbg !11629
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !11630

lor.lhs.false:                                    ; preds = %while.body
  %9 = load i8*, i8** %p, align 8, !dbg !11631
  %10 = load i8, i8* %9, align 1, !dbg !11633
  %conv4 = zext i8 %10 to i32, !dbg !11633
  %cmp5 = icmp eq i32 %conv4, 10, !dbg !11634
  br i1 %cmp5, label %if.then7, label %if.end14, !dbg !11635

if.then7:                                         ; preds = %lor.lhs.false, %while.body
  %11 = load i8*, i8** %p, align 8, !dbg !11636
  %12 = load i8*, i8** %id, align 8, !dbg !11638
  %sub.ptr.lhs.cast = ptrtoint i8* %11 to i64, !dbg !11639
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !11639
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11639
  %conv8 = trunc i64 %sub.ptr.sub to i32, !dbg !11636
  store i32 %conv8, i32* %id_len, align 4, !dbg !11640
  %13 = load i8*, i8** %p, align 8, !dbg !11641
  %14 = load i8, i8* %13, align 1, !dbg !11643
  %conv9 = zext i8 %14 to i32, !dbg !11643
  %cmp10 = icmp eq i32 %conv9, 13, !dbg !11644
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !11645

if.then12:                                        ; preds = %if.then7
  %15 = load i8*, i8** %p, align 8, !dbg !11646
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !11646
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !11646
  br label %if.end13, !dbg !11647

if.end13:                                         ; preds = %if.then12, %if.then7
  br label %while.end, !dbg !11648

if.end14:                                         ; preds = %lor.lhs.false
  %16 = load i8*, i8** %p, align 8, !dbg !11649
  %incdec.ptr15 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !11649
  store i8* %incdec.ptr15, i8** %p, align 8, !dbg !11649
  br label %while.cond, !dbg !11650, !llvm.loop !11652

while.end:                                        ; preds = %if.end13, %while.cond
  %17 = load i8*, i8** %p, align 8, !dbg !11653
  %18 = load i8*, i8** %q, align 8, !dbg !11655
  %cmp16 = icmp uge i8* %17, %18, !dbg !11656
  br i1 %cmp16, label %if.then22, label %lor.lhs.false18, !dbg !11657

lor.lhs.false18:                                  ; preds = %while.end
  %19 = load i8*, i8** %p, align 8, !dbg !11658
  %20 = load i8, i8* %19, align 1, !dbg !11660
  %conv19 = zext i8 %20 to i32, !dbg !11660
  %cmp20 = icmp ne i32 %conv19, 10, !dbg !11661
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !11662

if.then22:                                        ; preds = %lor.lhs.false18, %while.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !11663
  br label %return, !dbg !11663

if.end23:                                         ; preds = %lor.lhs.false18
  %21 = load i8*, i8** %p, align 8, !dbg !11664
  %incdec.ptr24 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !11664
  store i8* %incdec.ptr24, i8** %p, align 8, !dbg !11664
  %22 = load i8*, i8** %p, align 8, !dbg !11665
  store i8* %22, i8** %settings, align 8, !dbg !11666
  store i32 -1, i32* %settings_len, align 4, !dbg !11667
  br label %while.cond25, !dbg !11668

while.cond25:                                     ; preds = %if.end47, %if.end23
  %23 = load i8*, i8** %p, align 8, !dbg !11669
  %24 = load i8*, i8** %q, align 8, !dbg !11670
  %cmp26 = icmp ult i8* %23, %24, !dbg !11671
  br i1 %cmp26, label %while.body28, label %while.end49, !dbg !11672

while.body28:                                     ; preds = %while.cond25
  %25 = load i8*, i8** %p, align 8, !dbg !11673
  %26 = load i8, i8* %25, align 1, !dbg !11676
  %conv29 = zext i8 %26 to i32, !dbg !11676
  %cmp30 = icmp eq i32 %conv29, 13, !dbg !11677
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !11678

lor.lhs.false32:                                  ; preds = %while.body28
  %27 = load i8*, i8** %p, align 8, !dbg !11679
  %28 = load i8, i8* %27, align 1, !dbg !11681
  %conv33 = zext i8 %28 to i32, !dbg !11681
  %cmp34 = icmp eq i32 %conv33, 10, !dbg !11682
  br i1 %cmp34, label %if.then36, label %if.end47, !dbg !11683

if.then36:                                        ; preds = %lor.lhs.false32, %while.body28
  %29 = load i8*, i8** %p, align 8, !dbg !11684
  %30 = load i8*, i8** %settings, align 8, !dbg !11686
  %sub.ptr.lhs.cast37 = ptrtoint i8* %29 to i64, !dbg !11687
  %sub.ptr.rhs.cast38 = ptrtoint i8* %30 to i64, !dbg !11687
  %sub.ptr.sub39 = sub i64 %sub.ptr.lhs.cast37, %sub.ptr.rhs.cast38, !dbg !11687
  %conv40 = trunc i64 %sub.ptr.sub39 to i32, !dbg !11684
  store i32 %conv40, i32* %settings_len, align 4, !dbg !11688
  %31 = load i8*, i8** %p, align 8, !dbg !11689
  %32 = load i8, i8* %31, align 1, !dbg !11691
  %conv41 = zext i8 %32 to i32, !dbg !11691
  %cmp42 = icmp eq i32 %conv41, 13, !dbg !11692
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !11693

if.then44:                                        ; preds = %if.then36
  %33 = load i8*, i8** %p, align 8, !dbg !11694
  %incdec.ptr45 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !11694
  store i8* %incdec.ptr45, i8** %p, align 8, !dbg !11694
  br label %if.end46, !dbg !11695

if.end46:                                         ; preds = %if.then44, %if.then36
  br label %while.end49, !dbg !11696

if.end47:                                         ; preds = %lor.lhs.false32
  %34 = load i8*, i8** %p, align 8, !dbg !11697
  %incdec.ptr48 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !11697
  store i8* %incdec.ptr48, i8** %p, align 8, !dbg !11697
  br label %while.cond25, !dbg !11698, !llvm.loop !11699

while.end49:                                      ; preds = %if.end46, %while.cond25
  %35 = load i8*, i8** %p, align 8, !dbg !11700
  %36 = load i8*, i8** %q, align 8, !dbg !11702
  %cmp50 = icmp uge i8* %35, %36, !dbg !11703
  br i1 %cmp50, label %if.then56, label %lor.lhs.false52, !dbg !11704

lor.lhs.false52:                                  ; preds = %while.end49
  %37 = load i8*, i8** %p, align 8, !dbg !11705
  %38 = load i8, i8* %37, align 1, !dbg !11707
  %conv53 = zext i8 %38 to i32, !dbg !11707
  %cmp54 = icmp ne i32 %conv53, 10, !dbg !11708
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !11709

if.then56:                                        ; preds = %lor.lhs.false52, %while.end49
  store i32 -1094995529, i32* %retval, align 4, !dbg !11710
  br label %return, !dbg !11710

if.end57:                                         ; preds = %lor.lhs.false52
  %39 = load i8*, i8** %p, align 8, !dbg !11711
  %incdec.ptr58 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !11711
  store i8* %incdec.ptr58, i8** %p, align 8, !dbg !11711
  %40 = load i8*, i8** %p, align 8, !dbg !11712
  store i8* %40, i8** %text, align 8, !dbg !11713
  %41 = load i8*, i8** %q, align 8, !dbg !11714
  %42 = load i8*, i8** %p, align 8, !dbg !11715
  %sub.ptr.lhs.cast59 = ptrtoint i8* %41 to i64, !dbg !11716
  %sub.ptr.rhs.cast60 = ptrtoint i8* %42 to i64, !dbg !11716
  %sub.ptr.sub61 = sub i64 %sub.ptr.lhs.cast59, %sub.ptr.rhs.cast60, !dbg !11716
  %conv62 = trunc i64 %sub.ptr.sub61 to i32, !dbg !11714
  store i32 %conv62, i32* %text_len, align 4, !dbg !11717
  br label %while.cond63, !dbg !11718

while.cond63:                                     ; preds = %if.end74, %if.end57
  %43 = load i32, i32* %text_len, align 4, !dbg !11719
  %cmp64 = icmp sgt i32 %43, 0, !dbg !11720
  br i1 %cmp64, label %while.body66, label %while.end75, !dbg !11721

while.body66:                                     ; preds = %while.cond63
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11722, metadata !2574), !dbg !11724
  %44 = load i32, i32* %text_len, align 4, !dbg !11725
  %sub = sub nsw i32 %44, 1, !dbg !11726
  store i32 %sub, i32* %len, align 4, !dbg !11724
  call void @llvm.dbg.declare(metadata i8* %c, metadata !11727, metadata !2574), !dbg !11728
  %45 = load i32, i32* %len, align 4, !dbg !11729
  %idxprom = sext i32 %45 to i64, !dbg !11730
  %46 = load i8*, i8** %p, align 8, !dbg !11730
  %arrayidx = getelementptr inbounds i8, i8* %46, i64 %idxprom, !dbg !11730
  %47 = load i8, i8* %arrayidx, align 1, !dbg !11730
  store i8 %47, i8* %c, align 1, !dbg !11728
  %48 = load i8, i8* %c, align 1, !dbg !11731
  %conv67 = zext i8 %48 to i32, !dbg !11731
  %cmp68 = icmp ne i32 %conv67, 13, !dbg !11733
  br i1 %cmp68, label %land.lhs.true, label %if.end74, !dbg !11734

land.lhs.true:                                    ; preds = %while.body66
  %49 = load i8, i8* %c, align 1, !dbg !11735
  %conv70 = zext i8 %49 to i32, !dbg !11735
  %cmp71 = icmp ne i32 %conv70, 10, !dbg !11737
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !11738

if.then73:                                        ; preds = %land.lhs.true
  br label %while.end75, !dbg !11739

if.end74:                                         ; preds = %land.lhs.true, %while.body66
  %50 = load i32, i32* %len, align 4, !dbg !11740
  store i32 %50, i32* %text_len, align 4, !dbg !11741
  br label %while.cond63, !dbg !11742, !llvm.loop !11743

while.end75:                                      ; preds = %if.then73, %while.cond63
  %51 = load i32, i32* %text_len, align 4, !dbg !11744
  %cmp76 = icmp sle i32 %51, 0, !dbg !11746
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !11747

if.then78:                                        ; preds = %while.end75
  store i32 -1094995529, i32* %retval, align 4, !dbg !11748
  br label %return, !dbg !11748

if.end79:                                         ; preds = %while.end75
  %52 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11749
  %53 = load i32, i32* %text_len, align 4, !dbg !11750
  %call = call i32 @av_new_packet(%struct.AVPacket* %52, i32 %53), !dbg !11751
  store i32 %call, i32* %err, align 4, !dbg !11752
  %54 = load i32, i32* %err, align 4, !dbg !11753
  %cmp80 = icmp slt i32 %54, 0, !dbg !11755
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !11756

if.then82:                                        ; preds = %if.end79
  %55 = load i32, i32* %err, align 4, !dbg !11757
  store i32 %55, i32* %retval, align 4, !dbg !11759
  br label %return, !dbg !11759

if.end83:                                         ; preds = %if.end79
  %56 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11760
  %data84 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %56, i32 0, i32 3, !dbg !11761
  %57 = load i8*, i8** %data84, align 8, !dbg !11761
  %58 = load i8*, i8** %text, align 8, !dbg !11762
  %59 = load i32, i32* %text_len, align 4, !dbg !11763
  %conv85 = sext i32 %59 to i64, !dbg !11763
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 %conv85, i32 1, i1 false), !dbg !11764
  %60 = load i32, i32* %id_len, align 4, !dbg !11765
  %cmp86 = icmp sgt i32 %60, 0, !dbg !11767
  br i1 %cmp86, label %if.then88, label %if.end93, !dbg !11768

if.then88:                                        ; preds = %if.end83
  %61 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11769
  %62 = load i32, i32* %id_len, align 4, !dbg !11771
  %call89 = call i8* @av_packet_new_side_data(%struct.AVPacket* %61, i32 16, i32 %62), !dbg !11772
  store i8* %call89, i8** %buf, align 8, !dbg !11773
  %63 = load i8*, i8** %buf, align 8, !dbg !11774
  %tobool = icmp ne i8* %63, null, !dbg !11774
  br i1 %tobool, label %if.end91, label %if.then90, !dbg !11776

if.then90:                                        ; preds = %if.then88
  %64 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11777
  call void @av_packet_unref(%struct.AVPacket* %64), !dbg !11779
  store i32 -12, i32* %retval, align 4, !dbg !11780
  br label %return, !dbg !11780

if.end91:                                         ; preds = %if.then88
  %65 = load i8*, i8** %buf, align 8, !dbg !11781
  %66 = load i8*, i8** %id, align 8, !dbg !11782
  %67 = load i32, i32* %id_len, align 4, !dbg !11783
  %conv92 = sext i32 %67 to i64, !dbg !11783
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 %conv92, i32 1, i1 false), !dbg !11784
  br label %if.end93, !dbg !11785

if.end93:                                         ; preds = %if.end91, %if.end83
  %68 = load i32, i32* %settings_len, align 4, !dbg !11786
  %cmp94 = icmp sgt i32 %68, 0, !dbg !11788
  br i1 %cmp94, label %if.then96, label %if.end102, !dbg !11789

if.then96:                                        ; preds = %if.end93
  %69 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11790
  %70 = load i32, i32* %settings_len, align 4, !dbg !11792
  %call97 = call i8* @av_packet_new_side_data(%struct.AVPacket* %69, i32 17, i32 %70), !dbg !11793
  store i8* %call97, i8** %buf, align 8, !dbg !11794
  %71 = load i8*, i8** %buf, align 8, !dbg !11795
  %tobool98 = icmp ne i8* %71, null, !dbg !11795
  br i1 %tobool98, label %if.end100, label %if.then99, !dbg !11797

if.then99:                                        ; preds = %if.then96
  %72 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11798
  call void @av_packet_unref(%struct.AVPacket* %72), !dbg !11800
  store i32 -12, i32* %retval, align 4, !dbg !11801
  br label %return, !dbg !11801

if.end100:                                        ; preds = %if.then96
  %73 = load i8*, i8** %buf, align 8, !dbg !11802
  %74 = load i8*, i8** %settings, align 8, !dbg !11803
  %75 = load i32, i32* %settings_len, align 4, !dbg !11804
  %conv101 = sext i32 %75 to i64, !dbg !11804
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 %conv101, i32 1, i1 false), !dbg !11805
  br label %if.end102, !dbg !11806

if.end102:                                        ; preds = %if.end100, %if.end93
  %76 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11807
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %76, i32 0, i32 0, !dbg !11808
  %77 = load i32, i32* %index, align 8, !dbg !11808
  %78 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11809
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %78, i32 0, i32 5, !dbg !11810
  store i32 %77, i32* %stream_index, align 4, !dbg !11811
  %79 = load i64, i64* %timecode.addr, align 8, !dbg !11812
  %80 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11813
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %80, i32 0, i32 1, !dbg !11814
  store i64 %79, i64* %pts, align 8, !dbg !11815
  %81 = load i64, i64* %duration.addr, align 8, !dbg !11816
  %82 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11817
  %duration103 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %82, i32 0, i32 9, !dbg !11818
  store i64 %81, i64* %duration103, align 8, !dbg !11819
  %83 = load i64, i64* %pos.addr, align 8, !dbg !11820
  %84 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11821
  %pos104 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %84, i32 0, i32 10, !dbg !11822
  store i64 %83, i64* %pos104, align 8, !dbg !11823
  %85 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11824
  %queue = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %85, i32 0, i32 18, !dbg !11825
  %86 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11826
  %queue_end = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %86, i32 0, i32 19, !dbg !11827
  %87 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11828
  %call105 = call i32 @ff_packet_list_put(%struct.AVPacketList** %queue, %struct.AVPacketList** %queue_end, %struct.AVPacket* %87, i32 0), !dbg !11829
  store i32 %call105, i32* %err, align 4, !dbg !11830
  %88 = load i32, i32* %err, align 4, !dbg !11831
  %cmp106 = icmp slt i32 %88, 0, !dbg !11833
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !11834

if.then108:                                       ; preds = %if.end102
  %89 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11835
  call void @av_packet_unref(%struct.AVPacket* %89), !dbg !11837
  store i32 -12, i32* %retval, align 4, !dbg !11838
  br label %return, !dbg !11838

if.end109:                                        ; preds = %if.end102
  store i32 0, i32* %retval, align 4, !dbg !11839
  br label %return, !dbg !11839

return:                                           ; preds = %if.end109, %if.then108, %if.then99, %if.then90, %if.then82, %if.then78, %if.then56, %if.then22, %if.then
  %90 = load i32, i32* %retval, align 4, !dbg !11840
  ret i32 %90, !dbg !11840
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_parse_frame(%struct.MatroskaDemuxContext* %matroska, %struct.MatroskaTrack* %track, %struct.AVStream* %st, %struct.AVBufferRef* %buf, i8* %data, i32 %pkt_size, i64 %timecode, i64 %lace_duration, i64 %pos, i32 %is_keyframe, i8* %additional, i64 %additional_id, i32 %additional_size, i64 %discard_padding) #0 !dbg !11841 {
entry:
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %track.addr = alloca %struct.MatroskaTrack*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %buf.addr = alloca %struct.AVBufferRef*, align 8
  %data.addr = alloca i8*, align 8
  %pkt_size.addr = alloca i32, align 4
  %timecode.addr = alloca i64, align 8
  %lace_duration.addr = alloca i64, align 8
  %pos.addr = alloca i64, align 8
  %is_keyframe.addr = alloca i32, align 4
  %additional.addr = alloca i8*, align 8
  %additional_id.addr = alloca i64, align 8
  %additional_size.addr = alloca i32, align 4
  %discard_padding.addr = alloca i64, align 8
  %encodings = alloca %struct.MatroskaTrackEncoding*, align 8
  %pkt_data = alloca i8*, align 8
  %res = alloca i32, align 4
  %pktl = alloca %struct.AVPacket, align 8
  %pkt = alloca %struct.AVPacket*, align 8
  %wv_data = alloca i8*, align 8
  %pr_data = alloca i8*, align 8
  %side_data = alloca i8*, align 8
  %side_data53 = alloca i8*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  %.compoundliteral58 = alloca %struct.AVRational, align 4
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !11844, metadata !2574), !dbg !11845
  store %struct.MatroskaTrack* %track, %struct.MatroskaTrack** %track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track.addr, metadata !11846, metadata !2574), !dbg !11847
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !11848, metadata !2574), !dbg !11849
  store %struct.AVBufferRef* %buf, %struct.AVBufferRef** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBufferRef** %buf.addr, metadata !11850, metadata !2574), !dbg !11851
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11852, metadata !2574), !dbg !11853
  store i32 %pkt_size, i32* %pkt_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pkt_size.addr, metadata !11854, metadata !2574), !dbg !11855
  store i64 %timecode, i64* %timecode.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timecode.addr, metadata !11856, metadata !2574), !dbg !11857
  store i64 %lace_duration, i64* %lace_duration.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %lace_duration.addr, metadata !11858, metadata !2574), !dbg !11859
  store i64 %pos, i64* %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pos.addr, metadata !11860, metadata !2574), !dbg !11861
  store i32 %is_keyframe, i32* %is_keyframe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_keyframe.addr, metadata !11862, metadata !2574), !dbg !11863
  store i8* %additional, i8** %additional.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %additional.addr, metadata !11864, metadata !2574), !dbg !11865
  store i64 %additional_id, i64* %additional_id.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %additional_id.addr, metadata !11866, metadata !2574), !dbg !11867
  store i32 %additional_size, i32* %additional_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %additional_size.addr, metadata !11868, metadata !2574), !dbg !11869
  store i64 %discard_padding, i64* %discard_padding.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %discard_padding.addr, metadata !11870, metadata !2574), !dbg !11871
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrackEncoding** %encodings, metadata !11872, metadata !2574), !dbg !11873
  %0 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11874
  %encodings1 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %0, i32 0, i32 15, !dbg !11875
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %encodings1, i32 0, i32 1, !dbg !11876
  %1 = load i8*, i8** %elem, align 8, !dbg !11876
  %2 = bitcast i8* %1 to %struct.MatroskaTrackEncoding*, !dbg !11874
  store %struct.MatroskaTrackEncoding* %2, %struct.MatroskaTrackEncoding** %encodings, align 8, !dbg !11873
  call void @llvm.dbg.declare(metadata i8** %pkt_data, metadata !11877, metadata !2574), !dbg !11878
  %3 = load i8*, i8** %data.addr, align 8, !dbg !11879
  store i8* %3, i8** %pkt_data, align 8, !dbg !11878
  call void @llvm.dbg.declare(metadata i32* %res, metadata !11880, metadata !2574), !dbg !11881
  call void @llvm.dbg.declare(metadata %struct.AVPacket* %pktl, metadata !11882, metadata !2574), !dbg !11883
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt, metadata !11884, metadata !2574), !dbg !11885
  store %struct.AVPacket* %pktl, %struct.AVPacket** %pkt, align 8, !dbg !11885
  %4 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings, align 8, !dbg !11886
  %tobool = icmp ne %struct.MatroskaTrackEncoding* %4, null, !dbg !11886
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !11888

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings, align 8, !dbg !11889
  %type = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %5, i32 0, i32 1, !dbg !11891
  %6 = load i64, i64* %type, align 8, !dbg !11891
  %tobool2 = icmp ne i64 %6, 0, !dbg !11889
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !11892

land.lhs.true3:                                   ; preds = %land.lhs.true
  %7 = load %struct.MatroskaTrackEncoding*, %struct.MatroskaTrackEncoding** %encodings, align 8, !dbg !11893
  %scope = getelementptr inbounds %struct.MatroskaTrackEncoding, %struct.MatroskaTrackEncoding* %7, i32 0, i32 0, !dbg !11895
  %8 = load i64, i64* %scope, align 8, !dbg !11895
  %and = and i64 %8, 1, !dbg !11896
  %tobool4 = icmp ne i64 %and, 0, !dbg !11896
  br i1 %tobool4, label %if.then, label %if.end6, !dbg !11897

if.then:                                          ; preds = %land.lhs.true3
  %9 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11898
  %call = call i32 @matroska_decode_buffer(i8** %pkt_data, i32* %pkt_size.addr, %struct.MatroskaTrack* %9), !dbg !11900
  store i32 %call, i32* %res, align 4, !dbg !11901
  %10 = load i32, i32* %res, align 4, !dbg !11902
  %cmp = icmp slt i32 %10, 0, !dbg !11904
  br i1 %cmp, label %if.then5, label %if.end, !dbg !11905

if.then5:                                         ; preds = %if.then
  %11 = load i32, i32* %res, align 4, !dbg !11906
  store i32 %11, i32* %retval, align 4, !dbg !11907
  br label %return, !dbg !11907

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !11908

if.end6:                                          ; preds = %if.end, %land.lhs.true3, %land.lhs.true, %entry
  %12 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11909
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %12, i32 0, i32 19, !dbg !11911
  %13 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !11911
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %13, i32 0, i32 1, !dbg !11912
  %14 = load i32, i32* %codec_id, align 4, !dbg !11912
  %cmp7 = icmp eq i32 %14, 86041, !dbg !11913
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !11914

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i8** %wv_data, metadata !11915, metadata !2574), !dbg !11917
  %15 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11918
  %16 = load i8*, i8** %pkt_data, align 8, !dbg !11919
  %call9 = call i32 @matroska_parse_wavpack(%struct.MatroskaTrack* %15, i8* %16, i8** %wv_data, i32* %pkt_size.addr), !dbg !11920
  store i32 %call9, i32* %res, align 4, !dbg !11921
  %17 = load i32, i32* %res, align 4, !dbg !11922
  %cmp10 = icmp slt i32 %17, 0, !dbg !11924
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11925

if.then11:                                        ; preds = %if.then8
  %18 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11926
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %18, i32 0, i32 1, !dbg !11928
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !11928
  %20 = bitcast %struct.AVFormatContext* %19 to i8*, !dbg !11926
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.123, i32 0, i32 0)), !dbg !11929
  br label %fail, !dbg !11930

if.end12:                                         ; preds = %if.then8
  %21 = load i8*, i8** %pkt_data, align 8, !dbg !11931
  %22 = load i8*, i8** %data.addr, align 8, !dbg !11933
  %cmp13 = icmp ne i8* %21, %22, !dbg !11934
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !11935

if.then14:                                        ; preds = %if.end12
  %23 = bitcast i8** %pkt_data to i8*, !dbg !11936
  call void @av_freep(i8* %23), !dbg !11937
  br label %if.end15, !dbg !11937

if.end15:                                         ; preds = %if.then14, %if.end12
  %24 = load i8*, i8** %wv_data, align 8, !dbg !11938
  store i8* %24, i8** %pkt_data, align 8, !dbg !11939
  br label %if.end16, !dbg !11940

if.end16:                                         ; preds = %if.end15, %if.end6
  %25 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11941
  %codecpar17 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %25, i32 0, i32 19, !dbg !11943
  %26 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar17, align 8, !dbg !11943
  %codec_id18 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %26, i32 0, i32 1, !dbg !11944
  %27 = load i32, i32* %codec_id18, align 4, !dbg !11944
  %cmp19 = icmp eq i32 %27, 147, !dbg !11945
  br i1 %cmp19, label %if.then20, label %if.end29, !dbg !11946

if.then20:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i8** %pr_data, metadata !11947, metadata !2574), !dbg !11949
  %28 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !11950
  %29 = load i8*, i8** %pkt_data, align 8, !dbg !11951
  %call21 = call i32 @matroska_parse_prores(%struct.MatroskaTrack* %28, i8* %29, i8** %pr_data, i32* %pkt_size.addr), !dbg !11952
  store i32 %call21, i32* %res, align 4, !dbg !11953
  %30 = load i32, i32* %res, align 4, !dbg !11954
  %cmp22 = icmp slt i32 %30, 0, !dbg !11956
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !11957

if.then23:                                        ; preds = %if.then20
  %31 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !11958
  %ctx24 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %31, i32 0, i32 1, !dbg !11960
  %32 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx24, align 8, !dbg !11960
  %33 = bitcast %struct.AVFormatContext* %32 to i8*, !dbg !11958
  call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.124, i32 0, i32 0)), !dbg !11961
  br label %fail, !dbg !11962

if.end25:                                         ; preds = %if.then20
  %34 = load i8*, i8** %pkt_data, align 8, !dbg !11963
  %35 = load i8*, i8** %data.addr, align 8, !dbg !11965
  %cmp26 = icmp ne i8* %34, %35, !dbg !11966
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !11967

if.then27:                                        ; preds = %if.end25
  %36 = bitcast i8** %pkt_data to i8*, !dbg !11968
  call void @av_freep(i8* %36), !dbg !11969
  br label %if.end28, !dbg !11969

if.end28:                                         ; preds = %if.then27, %if.end25
  %37 = load i8*, i8** %pr_data, align 8, !dbg !11970
  store i8* %37, i8** %pkt_data, align 8, !dbg !11971
  br label %if.end29, !dbg !11972

if.end29:                                         ; preds = %if.end28, %if.end16
  %38 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11973
  call void @av_init_packet(%struct.AVPacket* %38), !dbg !11974
  %39 = load i8*, i8** %pkt_data, align 8, !dbg !11975
  %40 = load i8*, i8** %data.addr, align 8, !dbg !11977
  %cmp30 = icmp ne i8* %39, %40, !dbg !11978
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !11979

if.then31:                                        ; preds = %if.end29
  %41 = load i8*, i8** %pkt_data, align 8, !dbg !11980
  %42 = load i32, i32* %pkt_size.addr, align 4, !dbg !11981
  %add = add nsw i32 %42, 64, !dbg !11982
  %call32 = call %struct.AVBufferRef* @av_buffer_create(i8* %41, i32 %add, void (i8*, i8*)* null, i8* null, i32 0), !dbg !11983
  %43 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11984
  %buf33 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %43, i32 0, i32 0, !dbg !11985
  store %struct.AVBufferRef* %call32, %struct.AVBufferRef** %buf33, align 8, !dbg !11986
  br label %if.end36, !dbg !11984

if.else:                                          ; preds = %if.end29
  %44 = load %struct.AVBufferRef*, %struct.AVBufferRef** %buf.addr, align 8, !dbg !11987
  %call34 = call %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef* %44), !dbg !11988
  %45 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11989
  %buf35 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %45, i32 0, i32 0, !dbg !11990
  store %struct.AVBufferRef* %call34, %struct.AVBufferRef** %buf35, align 8, !dbg !11991
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then31
  %46 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !11992
  %buf37 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %46, i32 0, i32 0, !dbg !11994
  %47 = load %struct.AVBufferRef*, %struct.AVBufferRef** %buf37, align 8, !dbg !11994
  %tobool38 = icmp ne %struct.AVBufferRef* %47, null, !dbg !11992
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !11995

if.then39:                                        ; preds = %if.end36
  store i32 -12, i32* %res, align 4, !dbg !11996
  br label %fail, !dbg !11998

if.end40:                                         ; preds = %if.end36
  %48 = load i8*, i8** %pkt_data, align 8, !dbg !11999
  %49 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12000
  %data41 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %49, i32 0, i32 3, !dbg !12001
  store i8* %48, i8** %data41, align 8, !dbg !12002
  %50 = load i32, i32* %pkt_size.addr, align 4, !dbg !12003
  %51 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12004
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %51, i32 0, i32 4, !dbg !12005
  store i32 %50, i32* %size, align 8, !dbg !12006
  %52 = load i32, i32* %is_keyframe.addr, align 4, !dbg !12007
  %53 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12008
  %flags = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %53, i32 0, i32 6, !dbg !12009
  store i32 %52, i32* %flags, align 8, !dbg !12010
  %54 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !12011
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %54, i32 0, i32 0, !dbg !12012
  %55 = load i32, i32* %index, align 8, !dbg !12012
  %56 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12013
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %56, i32 0, i32 5, !dbg !12014
  store i32 %55, i32* %stream_index, align 4, !dbg !12015
  %57 = load i32, i32* %additional_size.addr, align 4, !dbg !12016
  %cmp42 = icmp sgt i32 %57, 0, !dbg !12018
  br i1 %cmp42, label %if.then43, label %if.end50, !dbg !12019

if.then43:                                        ; preds = %if.end40
  call void @llvm.dbg.declare(metadata i8** %side_data, metadata !12020, metadata !2574), !dbg !12022
  %58 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12023
  %59 = load i32, i32* %additional_size.addr, align 4, !dbg !12024
  %add44 = add nsw i32 %59, 8, !dbg !12025
  %call45 = call i8* @av_packet_new_side_data(%struct.AVPacket* %58, i32 15, i32 %add44), !dbg !12026
  store i8* %call45, i8** %side_data, align 8, !dbg !12022
  %60 = load i8*, i8** %side_data, align 8, !dbg !12027
  %tobool46 = icmp ne i8* %60, null, !dbg !12027
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !12029

if.then47:                                        ; preds = %if.then43
  %61 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12030
  call void @av_packet_unref(%struct.AVPacket* %61), !dbg !12032
  store i32 -12, i32* %retval, align 4, !dbg !12033
  br label %return, !dbg !12033

if.end48:                                         ; preds = %if.then43
  %62 = load i64, i64* %additional_id.addr, align 8, !dbg !12034
  %call49 = call i64 @av_bswap64(i64 %62) #1, !dbg !12035
  %63 = load i8*, i8** %side_data, align 8, !dbg !12036
  %64 = bitcast i8* %63 to %union.unaligned_64*, !dbg !12037
  %l = bitcast %union.unaligned_64* %64 to i64*, !dbg !12037
  store i64 %call49, i64* %l, align 1, !dbg !12038
  %65 = load i8*, i8** %side_data, align 8, !dbg !12039
  %add.ptr = getelementptr inbounds i8, i8* %65, i64 8, !dbg !12040
  %66 = load i8*, i8** %additional.addr, align 8, !dbg !12041
  %67 = load i32, i32* %additional_size.addr, align 4, !dbg !12042
  %conv = sext i32 %67 to i64, !dbg !12042
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %66, i64 %conv, i32 1, i1 false), !dbg !12043
  br label %if.end50, !dbg !12044

if.end50:                                         ; preds = %if.end48, %if.end40
  %68 = load i64, i64* %discard_padding.addr, align 8, !dbg !12045
  %tobool51 = icmp ne i64 %68, 0, !dbg !12045
  br i1 %tobool51, label %if.then52, label %if.end73, !dbg !12047

if.then52:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i8** %side_data53, metadata !12048, metadata !2574), !dbg !12050
  %69 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12051
  %call54 = call i8* @av_packet_new_side_data(%struct.AVPacket* %69, i32 11, i32 10), !dbg !12052
  store i8* %call54, i8** %side_data53, align 8, !dbg !12050
  %70 = load i8*, i8** %side_data53, align 8, !dbg !12053
  %tobool55 = icmp ne i8* %70, null, !dbg !12053
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !12055

if.then56:                                        ; preds = %if.then52
  %71 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12056
  call void @av_packet_unref(%struct.AVPacket* %71), !dbg !12058
  store i32 -12, i32* %retval, align 4, !dbg !12059
  br label %return, !dbg !12059

if.end57:                                         ; preds = %if.then52
  %72 = load i64, i64* %discard_padding.addr, align 8, !dbg !12060
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !12061
  store i32 1, i32* %num, align 4, !dbg !12061
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !12061
  store i32 1000000000, i32* %den, align 4, !dbg !12061
  %num59 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral58, i32 0, i32 0, !dbg !12062
  store i32 1, i32* %num59, align 4, !dbg !12062
  %den60 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral58, i32 0, i32 1, !dbg !12062
  %73 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !12063
  %codecpar61 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %73, i32 0, i32 19, !dbg !12064
  %74 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar61, align 8, !dbg !12064
  %sample_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %74, i32 0, i32 23, !dbg !12065
  %75 = load i32, i32* %sample_rate, align 4, !dbg !12065
  store i32 %75, i32* %den60, align 4, !dbg !12062
  %76 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !12066
  %77 = load i64, i64* %76, align 4, !dbg !12066
  %78 = bitcast %struct.AVRational* %.compoundliteral58 to i64*, !dbg !12066
  %79 = load i64, i64* %78, align 4, !dbg !12066
  %call62 = call i64 @av_rescale_q(i64 %72, i64 %77, i64 %79) #1, !dbg !12066
  store i64 %call62, i64* %discard_padding.addr, align 8, !dbg !12067
  %80 = load i64, i64* %discard_padding.addr, align 8, !dbg !12068
  %cmp63 = icmp sgt i64 %80, 0, !dbg !12070
  br i1 %cmp63, label %if.then65, label %if.else69, !dbg !12071

if.then65:                                        ; preds = %if.end57
  %81 = load i64, i64* %discard_padding.addr, align 8, !dbg !12072
  %conv66 = trunc i64 %81 to i32, !dbg !12074
  %82 = load i8*, i8** %side_data53, align 8, !dbg !12075
  %add.ptr67 = getelementptr inbounds i8, i8* %82, i64 4, !dbg !12076
  %83 = bitcast i8* %add.ptr67 to %union.unaligned_32*, !dbg !12077
  %l68 = bitcast %union.unaligned_32* %83 to i32*, !dbg !12077
  store i32 %conv66, i32* %l68, align 1, !dbg !12078
  br label %if.end72, !dbg !12079

if.else69:                                        ; preds = %if.end57
  %84 = load i64, i64* %discard_padding.addr, align 8, !dbg !12080
  %sub = sub nsw i64 0, %84, !dbg !12082
  %conv70 = trunc i64 %sub to i32, !dbg !12083
  %85 = load i8*, i8** %side_data53, align 8, !dbg !12084
  %86 = bitcast i8* %85 to %union.unaligned_32*, !dbg !12085
  %l71 = bitcast %union.unaligned_32* %86 to i32*, !dbg !12085
  store i32 %conv70, i32* %l71, align 1, !dbg !12086
  br label %if.end72

if.end72:                                         ; preds = %if.else69, %if.then65
  br label %if.end73, !dbg !12087

if.end73:                                         ; preds = %if.end72, %if.end50
  %87 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !12088
  %ms_compat = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %87, i32 0, i32 20, !dbg !12090
  %88 = load i32, i32* %ms_compat, align 8, !dbg !12090
  %tobool74 = icmp ne i32 %88, 0, !dbg !12088
  br i1 %tobool74, label %if.then75, label %if.else76, !dbg !12091

if.then75:                                        ; preds = %if.end73
  %89 = load i64, i64* %timecode.addr, align 8, !dbg !12092
  %90 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12093
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %90, i32 0, i32 2, !dbg !12094
  store i64 %89, i64* %dts, align 8, !dbg !12095
  br label %if.end77, !dbg !12093

if.else76:                                        ; preds = %if.end73
  %91 = load i64, i64* %timecode.addr, align 8, !dbg !12096
  %92 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12097
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %92, i32 0, i32 1, !dbg !12098
  store i64 %91, i64* %pts, align 8, !dbg !12099
  br label %if.end77

if.end77:                                         ; preds = %if.else76, %if.then75
  %93 = load i64, i64* %pos.addr, align 8, !dbg !12100
  %94 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12101
  %pos78 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %94, i32 0, i32 10, !dbg !12102
  store i64 %93, i64* %pos78, align 8, !dbg !12103
  %95 = load i64, i64* %lace_duration.addr, align 8, !dbg !12104
  %96 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12105
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %96, i32 0, i32 9, !dbg !12106
  store i64 %95, i64* %duration, align 8, !dbg !12107
  %97 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !12108
  %codecpar79 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %97, i32 0, i32 19, !dbg !12110
  %98 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar79, align 8, !dbg !12110
  %codec_id80 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %98, i32 0, i32 1, !dbg !12111
  %99 = load i32, i32* %codec_id80, align 4, !dbg !12111
  %cmp81 = icmp eq i32 %99, 96264, !dbg !12112
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !12113

if.then83:                                        ; preds = %if.end77
  %100 = load i64, i64* %lace_duration.addr, align 8, !dbg !12114
  %101 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12116
  %convergence_duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %101, i32 0, i32 11, !dbg !12117
  store i64 %100, i64* %convergence_duration, align 8, !dbg !12118
  br label %if.end84, !dbg !12119

if.end84:                                         ; preds = %if.then83, %if.end77
  %102 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !12120
  %queue = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %102, i32 0, i32 18, !dbg !12121
  %103 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !12122
  %queue_end = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %103, i32 0, i32 19, !dbg !12123
  %104 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12124
  %call85 = call i32 @ff_packet_list_put(%struct.AVPacketList** %queue, %struct.AVPacketList** %queue_end, %struct.AVPacket* %104, i32 0), !dbg !12125
  store i32 %call85, i32* %res, align 4, !dbg !12126
  %105 = load i32, i32* %res, align 4, !dbg !12127
  %cmp86 = icmp slt i32 %105, 0, !dbg !12129
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !12130

if.then88:                                        ; preds = %if.end84
  %106 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !12131
  call void @av_packet_unref(%struct.AVPacket* %106), !dbg !12133
  store i32 -12, i32* %retval, align 4, !dbg !12134
  br label %return, !dbg !12134

if.end89:                                         ; preds = %if.end84
  store i32 0, i32* %retval, align 4, !dbg !12135
  br label %return, !dbg !12135

fail:                                             ; preds = %if.then39, %if.then23, %if.then11
  %107 = load i8*, i8** %pkt_data, align 8, !dbg !12136
  %108 = load i8*, i8** %data.addr, align 8, !dbg !12138
  %cmp90 = icmp ne i8* %107, %108, !dbg !12139
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !12140

if.then92:                                        ; preds = %fail
  %109 = bitcast i8** %pkt_data to i8*, !dbg !12141
  call void @av_freep(i8* %109), !dbg !12142
  br label %if.end93, !dbg !12142

if.end93:                                         ; preds = %if.then92, %fail
  %110 = load i32, i32* %res, align 4, !dbg !12143
  store i32 %110, i32* %retval, align 4, !dbg !12144
  br label %return, !dbg !12144

return:                                           ; preds = %if.end93, %if.end89, %if.then88, %if.then56, %if.then47, %if.then5
  %111 = load i32, i32* %retval, align 4, !dbg !12145
  ret i32 %111, !dbg !12145
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_ebmlnum_sint(%struct.MatroskaDemuxContext* %matroska, i8* %data, i32 %size, i64* %num) #0 !dbg !12146 {
entry:
  %retval = alloca i32, align 4
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %num.addr = alloca i64*, align 8
  %unum = alloca i64, align 8
  %res = alloca i32, align 4
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !12149, metadata !2574), !dbg !12150
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12151, metadata !2574), !dbg !12152
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12153, metadata !2574), !dbg !12154
  store i64* %num, i64** %num.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %num.addr, metadata !12155, metadata !2574), !dbg !12156
  call void @llvm.dbg.declare(metadata i64* %unum, metadata !12157, metadata !2574), !dbg !12158
  call void @llvm.dbg.declare(metadata i32* %res, metadata !12159, metadata !2574), !dbg !12160
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !12161
  %1 = load i8*, i8** %data.addr, align 8, !dbg !12163
  %2 = load i32, i32* %size.addr, align 4, !dbg !12164
  %call = call i32 @matroska_ebmlnum_uint(%struct.MatroskaDemuxContext* %0, i8* %1, i32 %2, i64* %unum), !dbg !12165
  store i32 %call, i32* %res, align 4, !dbg !12166
  %cmp = icmp slt i32 %call, 0, !dbg !12167
  br i1 %cmp, label %if.then, label %if.end, !dbg !12168

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %res, align 4, !dbg !12169
  store i32 %3, i32* %retval, align 4, !dbg !12170
  br label %return, !dbg !12170

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %unum, align 8, !dbg !12171
  %5 = load i32, i32* %res, align 4, !dbg !12172
  %mul = mul nsw i32 7, %5, !dbg !12173
  %sub = sub nsw i32 %mul, 1, !dbg !12174
  %sh_prom = zext i32 %sub to i64, !dbg !12175
  %shl = shl i64 1, %sh_prom, !dbg !12175
  %sub1 = sub nsw i64 %shl, 1, !dbg !12176
  %sub2 = sub i64 %4, %sub1, !dbg !12177
  %6 = load i64*, i64** %num.addr, align 8, !dbg !12178
  store i64 %sub2, i64* %6, align 8, !dbg !12179
  %7 = load i32, i32* %res, align 4, !dbg !12180
  store i32 %7, i32* %retval, align 4, !dbg !12181
  br label %return, !dbg !12181

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !12182
  ret i32 %8, !dbg !12182
}

declare void @ff_rm_reorder_sipr_data(i8*, i32, i32) #4

declare i32 @ff_packet_list_put(%struct.AVPacketList**, %struct.AVPacketList**, %struct.AVPacket*, i32) #4

declare void @av_packet_unref(%struct.AVPacket*) #4

; Function Attrs: nounwind uwtable
define internal i32 @matroska_parse_wavpack(%struct.MatroskaTrack* %track, i8* %src, i8** %pdst, i32* %size) #0 !dbg !12183 {
entry:
  %retval = alloca i32, align 4
  %track.addr = alloca %struct.MatroskaTrack*, align 8
  %src.addr = alloca i8*, align 8
  %pdst.addr = alloca i8**, align 8
  %size.addr = alloca i32*, align 8
  %dst = alloca i8*, align 8
  %dstlen = alloca i32, align 4
  %srclen = alloca i32, align 4
  %samples = alloca i32, align 4
  %ver = alloca i16, align 2
  %ret = alloca i32, align 4
  %offset = alloca i32, align 4
  %multiblock = alloca i32, align 4
  %blocksize = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %flags = alloca i32, align 4
  %crc = alloca i32, align 4
  store %struct.MatroskaTrack* %track, %struct.MatroskaTrack** %track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track.addr, metadata !12186, metadata !2574), !dbg !12187
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !12188, metadata !2574), !dbg !12189
  store i8** %pdst, i8*** %pdst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %pdst.addr, metadata !12190, metadata !2574), !dbg !12191
  store i32* %size, i32** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %size.addr, metadata !12192, metadata !2574), !dbg !12193
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !12194, metadata !2574), !dbg !12195
  store i8* null, i8** %dst, align 8, !dbg !12195
  call void @llvm.dbg.declare(metadata i32* %dstlen, metadata !12196, metadata !2574), !dbg !12197
  store i32 0, i32* %dstlen, align 4, !dbg !12197
  call void @llvm.dbg.declare(metadata i32* %srclen, metadata !12198, metadata !2574), !dbg !12199
  %0 = load i32*, i32** %size.addr, align 8, !dbg !12200
  %1 = load i32, i32* %0, align 4, !dbg !12201
  store i32 %1, i32* %srclen, align 4, !dbg !12199
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !12202, metadata !2574), !dbg !12203
  call void @llvm.dbg.declare(metadata i16* %ver, metadata !12204, metadata !2574), !dbg !12205
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12206, metadata !2574), !dbg !12207
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !12208, metadata !2574), !dbg !12209
  store i32 0, i32* %offset, align 4, !dbg !12209
  %2 = load i32, i32* %srclen, align 4, !dbg !12210
  %cmp = icmp slt i32 %2, 12, !dbg !12212
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12213

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !12214
  %stream = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %3, i32 0, i32 18, !dbg !12216
  %4 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12216
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %4, i32 0, i32 19, !dbg !12217
  %5 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !12217
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %5, i32 0, i32 4, !dbg !12218
  %6 = load i32, i32* %extradata_size, align 8, !dbg !12218
  %cmp1 = icmp slt i32 %6, 2, !dbg !12219
  br i1 %cmp1, label %if.then, label %if.end, !dbg !12220

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !12221
  br label %return, !dbg !12221

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.MatroskaTrack*, %struct.MatroskaTrack** %track.addr, align 8, !dbg !12222
  %stream2 = getelementptr inbounds %struct.MatroskaTrack, %struct.MatroskaTrack* %7, i32 0, i32 18, !dbg !12223
  %8 = load %struct.AVStream*, %struct.AVStream** %stream2, align 8, !dbg !12223
  %codecpar3 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %8, i32 0, i32 19, !dbg !12224
  %9 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar3, align 8, !dbg !12224
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %9, i32 0, i32 3, !dbg !12225
  %10 = load i8*, i8** %extradata, align 8, !dbg !12225
  %11 = bitcast i8* %10 to %union.unaligned_16*, !dbg !12226
  %l = bitcast %union.unaligned_16* %11 to i16*, !dbg !12226
  %12 = load i16, i16* %l, align 1, !dbg !12226
  store i16 %12, i16* %ver, align 2, !dbg !12227
  %13 = load i8*, i8** %src.addr, align 8, !dbg !12228
  %14 = bitcast i8* %13 to %union.unaligned_32*, !dbg !12229
  %l4 = bitcast %union.unaligned_32* %14 to i32*, !dbg !12229
  %15 = load i32, i32* %l4, align 1, !dbg !12229
  store i32 %15, i32* %samples, align 4, !dbg !12230
  %16 = load i8*, i8** %src.addr, align 8, !dbg !12231
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 4, !dbg !12231
  store i8* %add.ptr, i8** %src.addr, align 8, !dbg !12231
  %17 = load i32, i32* %srclen, align 4, !dbg !12232
  %sub = sub nsw i32 %17, 4, !dbg !12232
  store i32 %sub, i32* %srclen, align 4, !dbg !12232
  br label %while.cond, !dbg !12233

while.cond:                                       ; preds = %if.end32, %if.end
  %18 = load i32, i32* %srclen, align 4, !dbg !12234
  %cmp5 = icmp sge i32 %18, 8, !dbg !12236
  br i1 %cmp5, label %while.body, label %while.end, !dbg !12237

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %multiblock, metadata !12238, metadata !2574), !dbg !12240
  call void @llvm.dbg.declare(metadata i32* %blocksize, metadata !12241, metadata !2574), !dbg !12242
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !12243, metadata !2574), !dbg !12244
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !12245, metadata !2574), !dbg !12246
  %19 = load i8*, i8** %src.addr, align 8, !dbg !12247
  %20 = bitcast i8* %19 to %union.unaligned_32*, !dbg !12248
  %l7 = bitcast %union.unaligned_32* %20 to i32*, !dbg !12248
  %21 = load i32, i32* %l7, align 1, !dbg !12248
  store i32 %21, i32* %flags, align 4, !dbg !12246
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !12249, metadata !2574), !dbg !12250
  %22 = load i8*, i8** %src.addr, align 8, !dbg !12251
  %add.ptr9 = getelementptr inbounds i8, i8* %22, i64 4, !dbg !12252
  %23 = bitcast i8* %add.ptr9 to %union.unaligned_32*, !dbg !12253
  %l10 = bitcast %union.unaligned_32* %23 to i32*, !dbg !12253
  %24 = load i32, i32* %l10, align 1, !dbg !12253
  store i32 %24, i32* %crc, align 4, !dbg !12250
  %25 = load i8*, i8** %src.addr, align 8, !dbg !12254
  %add.ptr11 = getelementptr inbounds i8, i8* %25, i64 8, !dbg !12254
  store i8* %add.ptr11, i8** %src.addr, align 8, !dbg !12254
  %26 = load i32, i32* %srclen, align 4, !dbg !12255
  %sub12 = sub nsw i32 %26, 8, !dbg !12255
  store i32 %sub12, i32* %srclen, align 4, !dbg !12255
  %27 = load i32, i32* %flags, align 4, !dbg !12256
  %and = and i32 %27, 6144, !dbg !12257
  %cmp13 = icmp ne i32 %and, 6144, !dbg !12258
  %conv = zext i1 %cmp13 to i32, !dbg !12258
  store i32 %conv, i32* %multiblock, align 4, !dbg !12259
  %28 = load i32, i32* %multiblock, align 4, !dbg !12260
  %tobool = icmp ne i32 %28, 0, !dbg !12260
  br i1 %tobool, label %if.then14, label %if.else, !dbg !12262

if.then14:                                        ; preds = %while.body
  %29 = load i32, i32* %srclen, align 4, !dbg !12263
  %cmp15 = icmp slt i32 %29, 4, !dbg !12266
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !12267

if.then17:                                        ; preds = %if.then14
  store i32 -1094995529, i32* %ret, align 4, !dbg !12268
  br label %fail, !dbg !12270

if.end18:                                         ; preds = %if.then14
  %30 = load i8*, i8** %src.addr, align 8, !dbg !12271
  %31 = bitcast i8* %30 to %union.unaligned_32*, !dbg !12272
  %l19 = bitcast %union.unaligned_32* %31 to i32*, !dbg !12272
  %32 = load i32, i32* %l19, align 1, !dbg !12272
  store i32 %32, i32* %blocksize, align 4, !dbg !12273
  %33 = load i8*, i8** %src.addr, align 8, !dbg !12274
  %add.ptr20 = getelementptr inbounds i8, i8* %33, i64 4, !dbg !12274
  store i8* %add.ptr20, i8** %src.addr, align 8, !dbg !12274
  %34 = load i32, i32* %srclen, align 4, !dbg !12275
  %sub21 = sub nsw i32 %34, 4, !dbg !12275
  store i32 %sub21, i32* %srclen, align 4, !dbg !12275
  br label %if.end22, !dbg !12276

if.else:                                          ; preds = %while.body
  %35 = load i32, i32* %srclen, align 4, !dbg !12277
  store i32 %35, i32* %blocksize, align 4, !dbg !12278
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.end18
  %36 = load i32, i32* %blocksize, align 4, !dbg !12279
  %37 = load i32, i32* %srclen, align 4, !dbg !12281
  %cmp23 = icmp ugt i32 %36, %37, !dbg !12282
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !12283

if.then25:                                        ; preds = %if.end22
  store i32 -1094995529, i32* %ret, align 4, !dbg !12284
  br label %fail, !dbg !12286

if.end26:                                         ; preds = %if.end22
  %38 = load i8*, i8** %dst, align 8, !dbg !12287
  %39 = load i32, i32* %dstlen, align 4, !dbg !12288
  %40 = load i32, i32* %blocksize, align 4, !dbg !12289
  %add = add i32 %39, %40, !dbg !12290
  %add27 = add i32 %add, 32, !dbg !12291
  %add28 = add i32 %add27, 64, !dbg !12292
  %conv29 = zext i32 %add28 to i64, !dbg !12288
  %call = call i8* @av_realloc(i8* %38, i64 %conv29), !dbg !12293
  store i8* %call, i8** %tmp, align 8, !dbg !12294
  %41 = load i8*, i8** %tmp, align 8, !dbg !12295
  %tobool30 = icmp ne i8* %41, null, !dbg !12295
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !12297

if.then31:                                        ; preds = %if.end26
  store i32 -12, i32* %ret, align 4, !dbg !12298
  br label %fail, !dbg !12300

if.end32:                                         ; preds = %if.end26
  %42 = load i8*, i8** %tmp, align 8, !dbg !12301
  store i8* %42, i8** %dst, align 8, !dbg !12302
  %43 = load i32, i32* %blocksize, align 4, !dbg !12303
  %add33 = add i32 %43, 32, !dbg !12304
  %44 = load i32, i32* %dstlen, align 4, !dbg !12305
  %add34 = add i32 %44, %add33, !dbg !12305
  store i32 %add34, i32* %dstlen, align 4, !dbg !12305
  %45 = load i8*, i8** %dst, align 8, !dbg !12306
  %46 = load i32, i32* %offset, align 4, !dbg !12307
  %idx.ext = sext i32 %46 to i64, !dbg !12308
  %add.ptr35 = getelementptr inbounds i8, i8* %45, i64 %idx.ext, !dbg !12308
  %47 = bitcast i8* %add.ptr35 to %union.unaligned_32*, !dbg !12309
  %l36 = bitcast %union.unaligned_32* %47 to i32*, !dbg !12309
  store i32 1802532471, i32* %l36, align 1, !dbg !12310
  %48 = load i32, i32* %blocksize, align 4, !dbg !12311
  %add37 = add i32 %48, 24, !dbg !12312
  %49 = load i8*, i8** %dst, align 8, !dbg !12313
  %50 = load i32, i32* %offset, align 4, !dbg !12314
  %idx.ext38 = sext i32 %50 to i64, !dbg !12315
  %add.ptr39 = getelementptr inbounds i8, i8* %49, i64 %idx.ext38, !dbg !12315
  %add.ptr40 = getelementptr inbounds i8, i8* %add.ptr39, i64 4, !dbg !12316
  %51 = bitcast i8* %add.ptr40 to %union.unaligned_32*, !dbg !12317
  %l41 = bitcast %union.unaligned_32* %51 to i32*, !dbg !12317
  store i32 %add37, i32* %l41, align 1, !dbg !12318
  %52 = load i16, i16* %ver, align 2, !dbg !12319
  %53 = load i8*, i8** %dst, align 8, !dbg !12320
  %54 = load i32, i32* %offset, align 4, !dbg !12321
  %idx.ext42 = sext i32 %54 to i64, !dbg !12322
  %add.ptr43 = getelementptr inbounds i8, i8* %53, i64 %idx.ext42, !dbg !12322
  %add.ptr44 = getelementptr inbounds i8, i8* %add.ptr43, i64 8, !dbg !12323
  %55 = bitcast i8* %add.ptr44 to %union.unaligned_16*, !dbg !12324
  %l45 = bitcast %union.unaligned_16* %55 to i16*, !dbg !12324
  store i16 %52, i16* %l45, align 1, !dbg !12325
  %56 = load i8*, i8** %dst, align 8, !dbg !12326
  %57 = load i32, i32* %offset, align 4, !dbg !12327
  %idx.ext46 = sext i32 %57 to i64, !dbg !12328
  %add.ptr47 = getelementptr inbounds i8, i8* %56, i64 %idx.ext46, !dbg !12328
  %add.ptr48 = getelementptr inbounds i8, i8* %add.ptr47, i64 10, !dbg !12329
  %58 = bitcast i8* %add.ptr48 to %union.unaligned_16*, !dbg !12330
  %l49 = bitcast %union.unaligned_16* %58 to i16*, !dbg !12330
  store i16 0, i16* %l49, align 1, !dbg !12331
  %59 = load i8*, i8** %dst, align 8, !dbg !12332
  %60 = load i32, i32* %offset, align 4, !dbg !12333
  %idx.ext50 = sext i32 %60 to i64, !dbg !12334
  %add.ptr51 = getelementptr inbounds i8, i8* %59, i64 %idx.ext50, !dbg !12334
  %add.ptr52 = getelementptr inbounds i8, i8* %add.ptr51, i64 12, !dbg !12335
  %61 = bitcast i8* %add.ptr52 to %union.unaligned_32*, !dbg !12336
  %l53 = bitcast %union.unaligned_32* %61 to i32*, !dbg !12336
  store i32 0, i32* %l53, align 1, !dbg !12337
  %62 = load i8*, i8** %dst, align 8, !dbg !12338
  %63 = load i32, i32* %offset, align 4, !dbg !12339
  %idx.ext54 = sext i32 %63 to i64, !dbg !12340
  %add.ptr55 = getelementptr inbounds i8, i8* %62, i64 %idx.ext54, !dbg !12340
  %add.ptr56 = getelementptr inbounds i8, i8* %add.ptr55, i64 16, !dbg !12341
  %64 = bitcast i8* %add.ptr56 to %union.unaligned_32*, !dbg !12342
  %l57 = bitcast %union.unaligned_32* %64 to i32*, !dbg !12342
  store i32 0, i32* %l57, align 1, !dbg !12343
  %65 = load i32, i32* %samples, align 4, !dbg !12344
  %66 = load i8*, i8** %dst, align 8, !dbg !12345
  %67 = load i32, i32* %offset, align 4, !dbg !12346
  %idx.ext58 = sext i32 %67 to i64, !dbg !12347
  %add.ptr59 = getelementptr inbounds i8, i8* %66, i64 %idx.ext58, !dbg !12347
  %add.ptr60 = getelementptr inbounds i8, i8* %add.ptr59, i64 20, !dbg !12348
  %68 = bitcast i8* %add.ptr60 to %union.unaligned_32*, !dbg !12349
  %l61 = bitcast %union.unaligned_32* %68 to i32*, !dbg !12349
  store i32 %65, i32* %l61, align 1, !dbg !12350
  %69 = load i32, i32* %flags, align 4, !dbg !12351
  %70 = load i8*, i8** %dst, align 8, !dbg !12352
  %71 = load i32, i32* %offset, align 4, !dbg !12353
  %idx.ext62 = sext i32 %71 to i64, !dbg !12354
  %add.ptr63 = getelementptr inbounds i8, i8* %70, i64 %idx.ext62, !dbg !12354
  %add.ptr64 = getelementptr inbounds i8, i8* %add.ptr63, i64 24, !dbg !12355
  %72 = bitcast i8* %add.ptr64 to %union.unaligned_32*, !dbg !12356
  %l65 = bitcast %union.unaligned_32* %72 to i32*, !dbg !12356
  store i32 %69, i32* %l65, align 1, !dbg !12357
  %73 = load i32, i32* %crc, align 4, !dbg !12358
  %74 = load i8*, i8** %dst, align 8, !dbg !12359
  %75 = load i32, i32* %offset, align 4, !dbg !12360
  %idx.ext66 = sext i32 %75 to i64, !dbg !12361
  %add.ptr67 = getelementptr inbounds i8, i8* %74, i64 %idx.ext66, !dbg !12361
  %add.ptr68 = getelementptr inbounds i8, i8* %add.ptr67, i64 28, !dbg !12362
  %76 = bitcast i8* %add.ptr68 to %union.unaligned_32*, !dbg !12363
  %l69 = bitcast %union.unaligned_32* %76 to i32*, !dbg !12363
  store i32 %73, i32* %l69, align 1, !dbg !12364
  %77 = load i8*, i8** %dst, align 8, !dbg !12365
  %78 = load i32, i32* %offset, align 4, !dbg !12366
  %idx.ext70 = sext i32 %78 to i64, !dbg !12367
  %add.ptr71 = getelementptr inbounds i8, i8* %77, i64 %idx.ext70, !dbg !12367
  %add.ptr72 = getelementptr inbounds i8, i8* %add.ptr71, i64 32, !dbg !12368
  %79 = load i8*, i8** %src.addr, align 8, !dbg !12369
  %80 = load i32, i32* %blocksize, align 4, !dbg !12370
  %conv73 = zext i32 %80 to i64, !dbg !12370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr72, i8* %79, i64 %conv73, i32 1, i1 false), !dbg !12371
  %81 = load i32, i32* %blocksize, align 4, !dbg !12372
  %82 = load i8*, i8** %src.addr, align 8, !dbg !12373
  %idx.ext74 = zext i32 %81 to i64, !dbg !12373
  %add.ptr75 = getelementptr inbounds i8, i8* %82, i64 %idx.ext74, !dbg !12373
  store i8* %add.ptr75, i8** %src.addr, align 8, !dbg !12373
  %83 = load i32, i32* %blocksize, align 4, !dbg !12374
  %84 = load i32, i32* %srclen, align 4, !dbg !12375
  %sub76 = sub i32 %84, %83, !dbg !12375
  store i32 %sub76, i32* %srclen, align 4, !dbg !12375
  %85 = load i32, i32* %blocksize, align 4, !dbg !12376
  %add77 = add i32 %85, 32, !dbg !12377
  %86 = load i32, i32* %offset, align 4, !dbg !12378
  %add78 = add i32 %86, %add77, !dbg !12378
  store i32 %add78, i32* %offset, align 4, !dbg !12378
  br label %while.cond, !dbg !12379, !llvm.loop !12381

while.end:                                        ; preds = %while.cond
  %87 = load i8*, i8** %dst, align 8, !dbg !12382
  %88 = load i32, i32* %dstlen, align 4, !dbg !12383
  %idx.ext79 = sext i32 %88 to i64, !dbg !12384
  %add.ptr80 = getelementptr inbounds i8, i8* %87, i64 %idx.ext79, !dbg !12384
  call void @llvm.memset.p0i8.i64(i8* %add.ptr80, i8 0, i64 64, i32 1, i1 false), !dbg !12385
  %89 = load i8*, i8** %dst, align 8, !dbg !12386
  %90 = load i8**, i8*** %pdst.addr, align 8, !dbg !12387
  store i8* %89, i8** %90, align 8, !dbg !12388
  %91 = load i32, i32* %dstlen, align 4, !dbg !12389
  %92 = load i32*, i32** %size.addr, align 8, !dbg !12390
  store i32 %91, i32* %92, align 4, !dbg !12391
  store i32 0, i32* %retval, align 4, !dbg !12392
  br label %return, !dbg !12392

fail:                                             ; preds = %if.then31, %if.then25, %if.then17
  %93 = bitcast i8** %dst to i8*, !dbg !12393
  call void @av_freep(i8* %93), !dbg !12394
  %94 = load i32, i32* %ret, align 4, !dbg !12395
  store i32 %94, i32* %retval, align 4, !dbg !12396
  br label %return, !dbg !12396

return:                                           ; preds = %fail, %while.end, %if.then
  %95 = load i32, i32* %retval, align 4, !dbg !12397
  ret i32 %95, !dbg !12397
}

; Function Attrs: nounwind uwtable
define internal i32 @matroska_parse_prores(%struct.MatroskaTrack* %track, i8* %src, i8** %pdst, i32* %size) #0 !dbg !12398 {
entry:
  %x.addr.i29 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i29, metadata !2569, metadata !2574), !dbg !12399
  %x.addr.i14 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i14, metadata !2569, metadata !2574), !dbg !12403
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2569, metadata !2574), !dbg !12405
  %retval = alloca i32, align 4
  %track.addr = alloca %struct.MatroskaTrack*, align 8
  %src.addr = alloca i8*, align 8
  %pdst.addr = alloca i8**, align 8
  %size.addr = alloca i32*, align 8
  %dst = alloca i8*, align 8
  %dstlen = alloca i32, align 4
  store %struct.MatroskaTrack* %track, %struct.MatroskaTrack** %track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaTrack** %track.addr, metadata !12407, metadata !2574), !dbg !12408
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !12409, metadata !2574), !dbg !12410
  store i8** %pdst, i8*** %pdst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %pdst.addr, metadata !12411, metadata !2574), !dbg !12412
  store i32* %size, i32** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %size.addr, metadata !12413, metadata !2574), !dbg !12414
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !12415, metadata !2574), !dbg !12416
  %0 = load i8*, i8** %src.addr, align 8, !dbg !12417
  store i8* %0, i8** %dst, align 8, !dbg !12416
  call void @llvm.dbg.declare(metadata i32* %dstlen, metadata !12418, metadata !2574), !dbg !12419
  %1 = load i32*, i32** %size.addr, align 8, !dbg !12420
  %2 = load i32, i32* %1, align 4, !dbg !12421
  store i32 %2, i32* %dstlen, align 4, !dbg !12419
  %3 = load i8*, i8** %src.addr, align 8, !dbg !12422
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 4, !dbg !12422
  %4 = bitcast i8* %arrayidx to %union.unaligned_32*, !dbg !12423
  %l = bitcast %union.unaligned_32* %4 to i32*, !dbg !12423
  %5 = load i32, i32* %l, align 1, !dbg !12423
  store i32 %5, i32* %x.addr.i, align 4, !dbg !12424
  %6 = load i32, i32* %x.addr.i, align 4, !dbg !12425
  %shl.i = shl i32 %6, 8, !dbg !12426
  %and.i = and i32 %shl.i, 65280, !dbg !12427
  %7 = load i32, i32* %x.addr.i, align 4, !dbg !12428
  %shr.i = lshr i32 %7, 8, !dbg !12429
  %and1.i = and i32 %shr.i, 255, !dbg !12430
  %or.i = or i32 %and.i, %and1.i, !dbg !12431
  %shl2.i = shl i32 %or.i, 16, !dbg !12432
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !12433
  %shr3.i = lshr i32 %8, 16, !dbg !12434
  %shl4.i = shl i32 %shr3.i, 8, !dbg !12435
  %and5.i = and i32 %shl4.i, 65280, !dbg !12436
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !12437
  %shr6.i = lshr i32 %9, 16, !dbg !12438
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !12439
  %and8.i = and i32 %shr7.i, 255, !dbg !12440
  %or9.i = or i32 %and5.i, %and8.i, !dbg !12441
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !12442
  %cmp = icmp ne i32 %or10.i, 1768124518, !dbg !12443
  br i1 %cmp, label %if.then, label %if.end13, !dbg !12444

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %dstlen, align 4, !dbg !12445
  %add = add nsw i32 %10, 8, !dbg !12446
  %add1 = add nsw i32 %add, 64, !dbg !12447
  %conv = sext i32 %add1 to i64, !dbg !12445
  %call2 = call noalias i8* @av_malloc(i64 %conv), !dbg !12448
  store i8* %call2, i8** %dst, align 8, !dbg !12449
  %11 = load i8*, i8** %dst, align 8, !dbg !12450
  %tobool = icmp ne i8* %11, null, !dbg !12450
  br i1 %tobool, label %if.end, label %if.then3, !dbg !12452

if.then3:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !12453
  br label %return, !dbg !12453

if.end:                                           ; preds = %if.then
  %12 = load i32, i32* %dstlen, align 4, !dbg !12454
  store i32 %12, i32* %x.addr.i29, align 4, !dbg !12455
  %13 = load i32, i32* %x.addr.i29, align 4, !dbg !12456
  %shl.i30 = shl i32 %13, 8, !dbg !12457
  %and.i31 = and i32 %shl.i30, 65280, !dbg !12458
  %14 = load i32, i32* %x.addr.i29, align 4, !dbg !12459
  %shr.i32 = lshr i32 %14, 8, !dbg !12460
  %and1.i33 = and i32 %shr.i32, 255, !dbg !12461
  %or.i34 = or i32 %and.i31, %and1.i33, !dbg !12462
  %shl2.i35 = shl i32 %or.i34, 16, !dbg !12463
  %15 = load i32, i32* %x.addr.i29, align 4, !dbg !12464
  %shr3.i36 = lshr i32 %15, 16, !dbg !12465
  %shl4.i37 = shl i32 %shr3.i36, 8, !dbg !12466
  %and5.i38 = and i32 %shl4.i37, 65280, !dbg !12467
  %16 = load i32, i32* %x.addr.i29, align 4, !dbg !12468
  %shr6.i39 = lshr i32 %16, 16, !dbg !12469
  %shr7.i40 = lshr i32 %shr6.i39, 8, !dbg !12470
  %and8.i41 = and i32 %shr7.i40, 255, !dbg !12471
  %or9.i42 = or i32 %and5.i38, %and8.i41, !dbg !12472
  %or10.i43 = or i32 %shl2.i35, %or9.i42, !dbg !12473
  %17 = load i8*, i8** %dst, align 8, !dbg !12474
  %18 = bitcast i8* %17 to %union.unaligned_32*, !dbg !12475
  %l5 = bitcast %union.unaligned_32* %18 to i32*, !dbg !12475
  store i32 %or10.i43, i32* %l5, align 1, !dbg !12476
  store i32 1768124518, i32* %x.addr.i14, align 4, !dbg !12477
  %19 = load i32, i32* %x.addr.i14, align 4, !dbg !12478
  %shl.i15 = shl i32 %19, 8, !dbg !12479
  %and.i16 = and i32 %shl.i15, 65280, !dbg !12480
  %20 = load i32, i32* %x.addr.i14, align 4, !dbg !12481
  %shr.i17 = lshr i32 %20, 8, !dbg !12482
  %and1.i18 = and i32 %shr.i17, 255, !dbg !12483
  %or.i19 = or i32 %and.i16, %and1.i18, !dbg !12484
  %shl2.i20 = shl i32 %or.i19, 16, !dbg !12485
  %21 = load i32, i32* %x.addr.i14, align 4, !dbg !12486
  %shr3.i21 = lshr i32 %21, 16, !dbg !12487
  %shl4.i22 = shl i32 %shr3.i21, 8, !dbg !12488
  %and5.i23 = and i32 %shl4.i22, 65280, !dbg !12489
  %22 = load i32, i32* %x.addr.i14, align 4, !dbg !12490
  %shr6.i24 = lshr i32 %22, 16, !dbg !12491
  %shr7.i25 = lshr i32 %shr6.i24, 8, !dbg !12492
  %and8.i26 = and i32 %shr7.i25, 255, !dbg !12493
  %or9.i27 = or i32 %and5.i23, %and8.i26, !dbg !12494
  %or10.i28 = or i32 %shl2.i20, %or9.i27, !dbg !12495
  %23 = load i8*, i8** %dst, align 8, !dbg !12496
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 4, !dbg !12497
  %24 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !12498
  %l7 = bitcast %union.unaligned_32* %24 to i32*, !dbg !12498
  store i32 %or10.i28, i32* %l7, align 1, !dbg !12499
  %25 = load i8*, i8** %dst, align 8, !dbg !12500
  %add.ptr8 = getelementptr inbounds i8, i8* %25, i64 8, !dbg !12501
  %26 = load i8*, i8** %src.addr, align 8, !dbg !12502
  %27 = load i32, i32* %dstlen, align 4, !dbg !12503
  %conv9 = sext i32 %27 to i64, !dbg !12503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr8, i8* %26, i64 %conv9, i32 1, i1 false), !dbg !12504
  %28 = load i8*, i8** %dst, align 8, !dbg !12505
  %add.ptr10 = getelementptr inbounds i8, i8* %28, i64 8, !dbg !12506
  %29 = load i32, i32* %dstlen, align 4, !dbg !12507
  %idx.ext = sext i32 %29 to i64, !dbg !12508
  %add.ptr11 = getelementptr inbounds i8, i8* %add.ptr10, i64 %idx.ext, !dbg !12508
  call void @llvm.memset.p0i8.i64(i8* %add.ptr11, i8 0, i64 64, i32 1, i1 false), !dbg !12509
  %30 = load i32, i32* %dstlen, align 4, !dbg !12510
  %add12 = add nsw i32 %30, 8, !dbg !12510
  store i32 %add12, i32* %dstlen, align 4, !dbg !12510
  br label %if.end13, !dbg !12511

if.end13:                                         ; preds = %if.end, %entry
  %31 = load i8*, i8** %dst, align 8, !dbg !12512
  %32 = load i8**, i8*** %pdst.addr, align 8, !dbg !12513
  store i8* %31, i8** %32, align 8, !dbg !12514
  %33 = load i32, i32* %dstlen, align 4, !dbg !12515
  %34 = load i32*, i32** %size.addr, align 8, !dbg !12516
  store i32 %33, i32* %34, align 4, !dbg !12517
  store i32 0, i32* %retval, align 4, !dbg !12518
  br label %return, !dbg !12518

return:                                           ; preds = %if.end13, %if.then3
  %35 = load i32, i32* %retval, align 4, !dbg !12519
  ret i32 %35, !dbg !12519
}

declare %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef*) #4

; Function Attrs: nounwind uwtable
define internal void @matroska_clear_queue(%struct.MatroskaDemuxContext* %matroska) #0 !dbg !12520 {
entry:
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !12521, metadata !2574), !dbg !12522
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !12523
  %queue = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 18, !dbg !12524
  %1 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !12525
  %queue_end = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %1, i32 0, i32 19, !dbg !12526
  call void @ff_packet_list_free(%struct.AVPacketList** %queue, %struct.AVPacketList** %queue_end), !dbg !12527
  ret void, !dbg !12528
}

declare void @ff_packet_list_free(%struct.AVPacketList**, %struct.AVPacketList**) #4

; Function Attrs: nounwind uwtable
define internal void @matroska_parse_cues(%struct.MatroskaDemuxContext* %matroska) #0 !dbg !12529 {
entry:
  %matroska.addr = alloca %struct.MatroskaDemuxContext*, align 8
  %i = alloca i32, align 4
  %elem = alloca %struct.MatroskaLevel1Element*, align 8
  store %struct.MatroskaDemuxContext* %matroska, %struct.MatroskaDemuxContext** %matroska.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska.addr, metadata !12530, metadata !2574), !dbg !12531
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12532, metadata !2574), !dbg !12533
  %0 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !12534
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %0, i32 0, i32 1, !dbg !12536
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !12536
  %flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 15, !dbg !12537
  %2 = load i32, i32* %flags, align 8, !dbg !12537
  %and = and i32 %2, 2, !dbg !12538
  %tobool = icmp ne i32 %and, 0, !dbg !12538
  br i1 %tobool, label %if.then, label %if.end, !dbg !12539

if.then:                                          ; preds = %entry
  br label %return, !dbg !12540

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !12541
  br label %for.cond, !dbg !12543

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !12544
  %4 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !12547
  %num_level1_elems = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %4, i32 0, i32 25, !dbg !12548
  %5 = load i32, i32* %num_level1_elems, align 8, !dbg !12548
  %cmp = icmp slt i32 %3, %5, !dbg !12549
  br i1 %cmp, label %for.body, label %for.end, !dbg !12550

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MatroskaLevel1Element** %elem, metadata !12551, metadata !2574), !dbg !12553
  %6 = load i32, i32* %i, align 4, !dbg !12554
  %idxprom = sext i32 %6 to i64, !dbg !12555
  %7 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !12555
  %level1_elems = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %7, i32 0, i32 24, !dbg !12556
  %arrayidx = getelementptr inbounds [64 x %struct.MatroskaLevel1Element], [64 x %struct.MatroskaLevel1Element]* %level1_elems, i64 0, i64 %idxprom, !dbg !12555
  store %struct.MatroskaLevel1Element* %arrayidx, %struct.MatroskaLevel1Element** %elem, align 8, !dbg !12553
  %8 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %elem, align 8, !dbg !12557
  %id = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %8, i32 0, i32 0, !dbg !12559
  %9 = load i64, i64* %id, align 8, !dbg !12559
  %cmp1 = icmp eq i64 %9, 475249515, !dbg !12560
  br i1 %cmp1, label %land.lhs.true, label %if.end8, !dbg !12561

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %elem, align 8, !dbg !12562
  %parsed = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %10, i32 0, i32 2, !dbg !12564
  %11 = load i32, i32* %parsed, align 8, !dbg !12564
  %tobool2 = icmp ne i32 %11, 0, !dbg !12562
  br i1 %tobool2, label %if.end8, label %if.then3, !dbg !12565

if.then3:                                         ; preds = %land.lhs.true
  %12 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !12566
  %13 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %elem, align 8, !dbg !12569
  %pos = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %13, i32 0, i32 1, !dbg !12570
  %14 = load i64, i64* %pos, align 8, !dbg !12570
  %call = call i32 @matroska_parse_seekhead_entry(%struct.MatroskaDemuxContext* %12, i64 %14), !dbg !12571
  %cmp4 = icmp slt i32 %call, 0, !dbg !12572
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12573

if.then5:                                         ; preds = %if.then3
  %15 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !12574
  %cues_parsing_deferred = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %15, i32 0, i32 23, !dbg !12575
  store i32 -1, i32* %cues_parsing_deferred, align 8, !dbg !12576
  br label %if.end6, !dbg !12574

if.end6:                                          ; preds = %if.then5, %if.then3
  %16 = load %struct.MatroskaLevel1Element*, %struct.MatroskaLevel1Element** %elem, align 8, !dbg !12577
  %parsed7 = getelementptr inbounds %struct.MatroskaLevel1Element, %struct.MatroskaLevel1Element* %16, i32 0, i32 2, !dbg !12578
  store i32 1, i32* %parsed7, align 8, !dbg !12579
  br label %for.end, !dbg !12580

if.end8:                                          ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !12581

for.inc:                                          ; preds = %if.end8
  %17 = load i32, i32* %i, align 4, !dbg !12582
  %inc = add nsw i32 %17, 1, !dbg !12582
  store i32 %inc, i32* %i, align 4, !dbg !12582
  br label %for.cond, !dbg !12584, !llvm.loop !12585

for.end:                                          ; preds = %if.end6, %for.cond
  %18 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska.addr, align 8, !dbg !12587
  call void @matroska_add_index_entries(%struct.MatroskaDemuxContext* %18), !dbg !12588
  br label %return, !dbg !12589

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !12590
}

declare i32 @av_index_search_timestamp(%struct.AVStream*, i64, i32) #4

declare void @ff_update_cur_dts(%struct.AVFormatContext*, %struct.AVStream*, i64) #4

declare i8* @av_default_item_name(i8*) #4

declare i8* @av_asprintf(i8*, ...) #4

declare i32 @av_dict_set_int(%struct.AVDictionary**, i8*, i64, i32) #4

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @webm_dash_manifest_cues(%struct.AVFormatContext* %s, i64 %init_range) #0 !dbg !12592 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !12595
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %init_range.addr = alloca i64, align 8
  %matroska = alloca %struct.MatroskaDemuxContext*, align 8
  %seekhead_list = alloca %struct.EbmlList*, align 8
  %seekhead1 = alloca %struct.MatroskaSeekhead*, align 8
  %buf = alloca i8*, align 8
  %cues_start = alloca i64, align 8
  %cues_end = alloca i64, align 8
  %before_pos = alloca i64, align 8
  %bandwidth = alloca i64, align 8
  %i = alloca i32, align 4
  %end = alloca i32, align 4
  %cues_length = alloca i64, align 8
  %cues_id = alloca i64, align 8
  %bytes_read = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !12597, metadata !2574), !dbg !12598
  store i64 %init_range, i64* %init_range.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %init_range.addr, metadata !12599, metadata !2574), !dbg !12600
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska, metadata !12601, metadata !2574), !dbg !12602
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12603
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !12604
  %1 = load i8*, i8** %priv_data, align 8, !dbg !12604
  %2 = bitcast i8* %1 to %struct.MatroskaDemuxContext*, !dbg !12603
  store %struct.MatroskaDemuxContext* %2, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12602
  call void @llvm.dbg.declare(metadata %struct.EbmlList** %seekhead_list, metadata !12605, metadata !2574), !dbg !12606
  %3 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12607
  %seekhead = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %3, i32 0, i32 16, !dbg !12608
  store %struct.EbmlList* %seekhead, %struct.EbmlList** %seekhead_list, align 8, !dbg !12606
  call void @llvm.dbg.declare(metadata %struct.MatroskaSeekhead** %seekhead1, metadata !12609, metadata !2574), !dbg !12610
  %4 = load %struct.EbmlList*, %struct.EbmlList** %seekhead_list, align 8, !dbg !12611
  %elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %4, i32 0, i32 1, !dbg !12612
  %5 = load i8*, i8** %elem, align 8, !dbg !12612
  %6 = bitcast i8* %5 to %struct.MatroskaSeekhead*, !dbg !12611
  store %struct.MatroskaSeekhead* %6, %struct.MatroskaSeekhead** %seekhead1, align 8, !dbg !12610
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !12613, metadata !2574), !dbg !12614
  call void @llvm.dbg.declare(metadata i64* %cues_start, metadata !12615, metadata !2574), !dbg !12616
  store i64 -1, i64* %cues_start, align 8, !dbg !12616
  call void @llvm.dbg.declare(metadata i64* %cues_end, metadata !12617, metadata !2574), !dbg !12618
  store i64 -1, i64* %cues_end, align 8, !dbg !12618
  call void @llvm.dbg.declare(metadata i64* %before_pos, metadata !12619, metadata !2574), !dbg !12620
  call void @llvm.dbg.declare(metadata i64* %bandwidth, metadata !12621, metadata !2574), !dbg !12622
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12623, metadata !2574), !dbg !12624
  call void @llvm.dbg.declare(metadata i32* %end, metadata !12625, metadata !2574), !dbg !12626
  store i32 0, i32* %end, align 4, !dbg !12626
  store i32 0, i32* %i, align 4, !dbg !12627
  br label %for.cond, !dbg !12629

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !12630
  %8 = load %struct.EbmlList*, %struct.EbmlList** %seekhead_list, align 8, !dbg !12633
  %nb_elem = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %8, i32 0, i32 0, !dbg !12634
  %9 = load i32, i32* %nb_elem, align 8, !dbg !12634
  %cmp = icmp slt i32 %7, %9, !dbg !12635
  br i1 %cmp, label %for.body, label %for.end, !dbg !12636

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !12637
  %idxprom = sext i32 %10 to i64, !dbg !12639
  %11 = load %struct.MatroskaSeekhead*, %struct.MatroskaSeekhead** %seekhead1, align 8, !dbg !12639
  %arrayidx = getelementptr inbounds %struct.MatroskaSeekhead, %struct.MatroskaSeekhead* %11, i64 %idxprom, !dbg !12639
  %id = getelementptr inbounds %struct.MatroskaSeekhead, %struct.MatroskaSeekhead* %arrayidx, i32 0, i32 0, !dbg !12640
  %12 = load i64, i64* %id, align 8, !dbg !12640
  %cmp2 = icmp eq i64 %12, 475249515, !dbg !12641
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12642

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !12643

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12644

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !12646
  %inc = add nsw i32 %13, 1, !dbg !12646
  store i32 %inc, i32* %i, align 4, !dbg !12646
  br label %for.cond, !dbg !12648, !llvm.loop !12649

for.end:                                          ; preds = %if.then, %for.cond
  %14 = load i32, i32* %i, align 4, !dbg !12651
  %15 = load %struct.EbmlList*, %struct.EbmlList** %seekhead_list, align 8, !dbg !12653
  %nb_elem3 = getelementptr inbounds %struct.EbmlList, %struct.EbmlList* %15, i32 0, i32 0, !dbg !12654
  %16 = load i32, i32* %nb_elem3, align 8, !dbg !12654
  %cmp4 = icmp sge i32 %14, %16, !dbg !12655
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12656

if.then5:                                         ; preds = %for.end
  store i32 -1, i32* %retval, align 4, !dbg !12657
  br label %return, !dbg !12657

if.end6:                                          ; preds = %for.end
  %17 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12659
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %17, i32 0, i32 1, !dbg !12660
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !12660
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i32 0, i32 4, !dbg !12661
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !12661
  store %struct.AVIOContext* %19, %struct.AVIOContext** %s.addr.i, align 8, !dbg !12662
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !12663
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %20, i64 0, i32 1) #11, !dbg !12664
  store i64 %call.i, i64* %before_pos, align 8, !dbg !12665
  %21 = load i32, i32* %i, align 4, !dbg !12666
  %idxprom7 = sext i32 %21 to i64, !dbg !12667
  %22 = load %struct.MatroskaSeekhead*, %struct.MatroskaSeekhead** %seekhead1, align 8, !dbg !12667
  %arrayidx8 = getelementptr inbounds %struct.MatroskaSeekhead, %struct.MatroskaSeekhead* %22, i64 %idxprom7, !dbg !12667
  %pos = getelementptr inbounds %struct.MatroskaSeekhead, %struct.MatroskaSeekhead* %arrayidx8, i32 0, i32 1, !dbg !12668
  %23 = load i64, i64* %pos, align 8, !dbg !12668
  %24 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12669
  %segment_start = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %24, i32 0, i32 17, !dbg !12670
  %25 = load i64, i64* %segment_start, align 8, !dbg !12670
  %add = add i64 %23, %25, !dbg !12671
  store i64 %add, i64* %cues_start, align 8, !dbg !12672
  %26 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12673
  %ctx9 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %26, i32 0, i32 1, !dbg !12675
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx9, align 8, !dbg !12675
  %pb10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %27, i32 0, i32 4, !dbg !12676
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb10, align 8, !dbg !12676
  %29 = load i64, i64* %cues_start, align 8, !dbg !12677
  %call11 = call i64 @avio_seek(%struct.AVIOContext* %28, i64 %29, i32 0), !dbg !12678
  %30 = load i64, i64* %cues_start, align 8, !dbg !12679
  %cmp12 = icmp eq i64 %call11, %30, !dbg !12680
  br i1 %cmp12, label %if.then13, label %if.end25, !dbg !12681

if.then13:                                        ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i64* %cues_length, metadata !12682, metadata !2574), !dbg !12684
  store i64 0, i64* %cues_length, align 8, !dbg !12684
  call void @llvm.dbg.declare(metadata i64* %cues_id, metadata !12685, metadata !2574), !dbg !12686
  store i64 0, i64* %cues_id, align 8, !dbg !12686
  call void @llvm.dbg.declare(metadata i64* %bytes_read, metadata !12687, metadata !2574), !dbg !12688
  store i64 0, i64* %bytes_read, align 8, !dbg !12688
  %31 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12689
  %32 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12690
  %ctx14 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %32, i32 0, i32 1, !dbg !12691
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx14, align 8, !dbg !12691
  %pb15 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %33, i32 0, i32 4, !dbg !12692
  %34 = load %struct.AVIOContext*, %struct.AVIOContext** %pb15, align 8, !dbg !12692
  %call16 = call i32 @ebml_read_num(%struct.MatroskaDemuxContext* %31, %struct.AVIOContext* %34, i32 4, i64* %cues_id), !dbg !12693
  %conv = sext i32 %call16 to i64, !dbg !12693
  %35 = load i64, i64* %bytes_read, align 8, !dbg !12694
  %add17 = add i64 %35, %conv, !dbg !12694
  store i64 %add17, i64* %bytes_read, align 8, !dbg !12694
  %36 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12695
  %37 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12696
  %ctx18 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %37, i32 0, i32 1, !dbg !12697
  %38 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx18, align 8, !dbg !12697
  %pb19 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %38, i32 0, i32 4, !dbg !12698
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %pb19, align 8, !dbg !12698
  %call20 = call i32 @ebml_read_length(%struct.MatroskaDemuxContext* %36, %struct.AVIOContext* %39, i64* %cues_length), !dbg !12699
  %conv21 = sext i32 %call20 to i64, !dbg !12699
  %40 = load i64, i64* %bytes_read, align 8, !dbg !12700
  %add22 = add i64 %40, %conv21, !dbg !12700
  store i64 %add22, i64* %bytes_read, align 8, !dbg !12700
  %41 = load i64, i64* %cues_start, align 8, !dbg !12701
  %42 = load i64, i64* %cues_length, align 8, !dbg !12702
  %add23 = add i64 %41, %42, !dbg !12703
  %43 = load i64, i64* %bytes_read, align 8, !dbg !12704
  %add24 = add i64 %add23, %43, !dbg !12705
  %sub = sub i64 %add24, 1, !dbg !12706
  store i64 %sub, i64* %cues_end, align 8, !dbg !12707
  br label %if.end25, !dbg !12708

if.end25:                                         ; preds = %if.then13, %if.end6
  %44 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12709
  %ctx26 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %44, i32 0, i32 1, !dbg !12710
  %45 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx26, align 8, !dbg !12710
  %pb27 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %45, i32 0, i32 4, !dbg !12711
  %46 = load %struct.AVIOContext*, %struct.AVIOContext** %pb27, align 8, !dbg !12711
  %47 = load i64, i64* %before_pos, align 8, !dbg !12712
  %call28 = call i64 @avio_seek(%struct.AVIOContext* %46, i64 %47, i32 0), !dbg !12713
  %48 = load i64, i64* %cues_start, align 8, !dbg !12714
  %cmp29 = icmp eq i64 %48, -1, !dbg !12716
  br i1 %cmp29, label %if.then33, label %lor.lhs.false, !dbg !12717

lor.lhs.false:                                    ; preds = %if.end25
  %49 = load i64, i64* %cues_end, align 8, !dbg !12718
  %cmp31 = icmp eq i64 %49, -1, !dbg !12720
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !12721

if.then33:                                        ; preds = %lor.lhs.false, %if.end25
  store i32 -1, i32* %retval, align 4, !dbg !12722
  br label %return, !dbg !12722

if.end34:                                         ; preds = %lor.lhs.false
  %50 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12724
  call void @matroska_parse_cues(%struct.MatroskaDemuxContext* %50), !dbg !12725
  %51 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12726
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %51, i32 0, i32 7, !dbg !12727
  %52 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !12727
  %arrayidx35 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %52, i64 0, !dbg !12726
  %53 = load %struct.AVStream*, %struct.AVStream** %arrayidx35, align 8, !dbg !12726
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %53, i32 0, i32 11, !dbg !12728
  %54 = load i64, i64* %cues_start, align 8, !dbg !12729
  %call36 = call i32 @av_dict_set_int(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.140, i32 0, i32 0), i64 %54, i32 0), !dbg !12730
  %55 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12731
  %streams37 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %55, i32 0, i32 7, !dbg !12732
  %56 = load %struct.AVStream**, %struct.AVStream*** %streams37, align 8, !dbg !12732
  %arrayidx38 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %56, i64 0, !dbg !12731
  %57 = load %struct.AVStream*, %struct.AVStream** %arrayidx38, align 8, !dbg !12731
  %metadata39 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %57, i32 0, i32 11, !dbg !12733
  %58 = load i64, i64* %cues_end, align 8, !dbg !12734
  %call40 = call i32 @av_dict_set_int(%struct.AVDictionary** %metadata39, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.141, i32 0, i32 0), i64 %58, i32 0), !dbg !12735
  %59 = load i64, i64* %cues_start, align 8, !dbg !12736
  %60 = load i64, i64* %init_range.addr, align 8, !dbg !12738
  %cmp41 = icmp sle i64 %59, %60, !dbg !12739
  br i1 %cmp41, label %if.then43, label %if.end49, !dbg !12740

if.then43:                                        ; preds = %if.end34
  %61 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12741
  %streams44 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %61, i32 0, i32 7, !dbg !12742
  %62 = load %struct.AVStream**, %struct.AVStream*** %streams44, align 8, !dbg !12742
  %arrayidx45 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %62, i64 0, !dbg !12741
  %63 = load %struct.AVStream*, %struct.AVStream** %arrayidx45, align 8, !dbg !12741
  %metadata46 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %63, i32 0, i32 11, !dbg !12743
  %64 = load i64, i64* %cues_start, align 8, !dbg !12744
  %sub47 = sub nsw i64 %64, 1, !dbg !12745
  %call48 = call i32 @av_dict_set_int(%struct.AVDictionary** %metadata46, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.135, i32 0, i32 0), i64 %sub47, i32 0), !dbg !12746
  br label %if.end49, !dbg !12746

if.end49:                                         ; preds = %if.then43, %if.end34
  %65 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12747
  %66 = load i64, i64* %cues_start, align 8, !dbg !12748
  %call50 = call i64 @webm_dash_manifest_compute_bandwidth(%struct.AVFormatContext* %65, i64 %66), !dbg !12749
  store i64 %call50, i64* %bandwidth, align 8, !dbg !12750
  %67 = load i64, i64* %bandwidth, align 8, !dbg !12751
  %cmp51 = icmp slt i64 %67, 0, !dbg !12753
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !12754

if.then53:                                        ; preds = %if.end49
  store i32 -1, i32* %retval, align 4, !dbg !12755
  br label %return, !dbg !12755

if.end54:                                         ; preds = %if.end49
  %68 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12757
  %streams55 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %68, i32 0, i32 7, !dbg !12758
  %69 = load %struct.AVStream**, %struct.AVStream*** %streams55, align 8, !dbg !12758
  %arrayidx56 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %69, i64 0, !dbg !12757
  %70 = load %struct.AVStream*, %struct.AVStream** %arrayidx56, align 8, !dbg !12757
  %metadata57 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %70, i32 0, i32 11, !dbg !12759
  %71 = load i64, i64* %bandwidth, align 8, !dbg !12760
  %call58 = call i32 @av_dict_set_int(%struct.AVDictionary** %metadata57, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.139, i32 0, i32 0), i64 %71, i32 0), !dbg !12761
  %72 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12762
  %streams59 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %72, i32 0, i32 7, !dbg !12763
  %73 = load %struct.AVStream**, %struct.AVStream*** %streams59, align 8, !dbg !12763
  %arrayidx60 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %73, i64 0, !dbg !12762
  %74 = load %struct.AVStream*, %struct.AVStream** %arrayidx60, align 8, !dbg !12762
  %metadata61 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %74, i32 0, i32 11, !dbg !12764
  %75 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12765
  %call62 = call i32 @webm_clusters_start_with_keyframe(%struct.AVFormatContext* %75), !dbg !12766
  %conv63 = sext i32 %call62 to i64, !dbg !12766
  %call64 = call i32 @av_dict_set_int(%struct.AVDictionary** %metadata61, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.142, i32 0, i32 0), i64 %conv63, i32 0), !dbg !12767
  %76 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12769
  %streams65 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %76, i32 0, i32 7, !dbg !12770
  %77 = load %struct.AVStream**, %struct.AVStream*** %streams65, align 8, !dbg !12770
  %arrayidx66 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %77, i64 0, !dbg !12769
  %78 = load %struct.AVStream*, %struct.AVStream** %arrayidx66, align 8, !dbg !12769
  %nb_index_entries = getelementptr inbounds %struct.AVStream, %struct.AVStream* %78, i32 0, i32 34, !dbg !12771
  %79 = load i32, i32* %nb_index_entries, align 8, !dbg !12771
  %conv67 = sext i32 %79 to i64, !dbg !12769
  %call68 = call i8* @av_malloc_array(i64 %conv67, i64 20), !dbg !12772
  store i8* %call68, i8** %buf, align 8, !dbg !12773
  %80 = load i8*, i8** %buf, align 8, !dbg !12774
  %tobool = icmp ne i8* %80, null, !dbg !12774
  br i1 %tobool, label %if.end70, label %if.then69, !dbg !12776

if.then69:                                        ; preds = %if.end54
  store i32 -1, i32* %retval, align 4, !dbg !12777
  br label %return, !dbg !12777

if.end70:                                         ; preds = %if.end54
  %81 = load i8*, i8** %buf, align 8, !dbg !12779
  %call71 = call i8* @strcpy(i8* %81, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.143, i32 0, i32 0)) #11, !dbg !12780
  store i32 0, i32* %i, align 4, !dbg !12781
  br label %for.cond72, !dbg !12783

for.cond72:                                       ; preds = %for.inc104, %if.end70
  %82 = load i32, i32* %i, align 4, !dbg !12784
  %83 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12787
  %streams73 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %83, i32 0, i32 7, !dbg !12788
  %84 = load %struct.AVStream**, %struct.AVStream*** %streams73, align 8, !dbg !12788
  %arrayidx74 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %84, i64 0, !dbg !12787
  %85 = load %struct.AVStream*, %struct.AVStream** %arrayidx74, align 8, !dbg !12787
  %nb_index_entries75 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %85, i32 0, i32 34, !dbg !12789
  %86 = load i32, i32* %nb_index_entries75, align 8, !dbg !12789
  %cmp76 = icmp slt i32 %82, %86, !dbg !12790
  br i1 %cmp76, label %for.body78, label %for.end106, !dbg !12791

for.body78:                                       ; preds = %for.cond72
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12792, metadata !2574), !dbg !12794
  %87 = load i8*, i8** %buf, align 8, !dbg !12795
  %88 = load i32, i32* %end, align 4, !dbg !12796
  %idx.ext = sext i32 %88 to i64, !dbg !12797
  %add.ptr = getelementptr inbounds i8, i8* %87, i64 %idx.ext, !dbg !12797
  %89 = load i32, i32* %i, align 4, !dbg !12798
  %idxprom79 = sext i32 %89 to i64, !dbg !12799
  %90 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12799
  %streams80 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %90, i32 0, i32 7, !dbg !12800
  %91 = load %struct.AVStream**, %struct.AVStream*** %streams80, align 8, !dbg !12800
  %arrayidx81 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %91, i64 0, !dbg !12799
  %92 = load %struct.AVStream*, %struct.AVStream** %arrayidx81, align 8, !dbg !12799
  %index_entries = getelementptr inbounds %struct.AVStream, %struct.AVStream* %92, i32 0, i32 33, !dbg !12801
  %93 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries, align 8, !dbg !12801
  %arrayidx82 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %93, i64 %idxprom79, !dbg !12799
  %timestamp = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx82, i32 0, i32 1, !dbg !12802
  %94 = load i64, i64* %timestamp, align 8, !dbg !12802
  %95 = load i32, i32* %i, align 4, !dbg !12803
  %96 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12804
  %streams83 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %96, i32 0, i32 7, !dbg !12805
  %97 = load %struct.AVStream**, %struct.AVStream*** %streams83, align 8, !dbg !12805
  %arrayidx84 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %97, i64 0, !dbg !12804
  %98 = load %struct.AVStream*, %struct.AVStream** %arrayidx84, align 8, !dbg !12804
  %nb_index_entries85 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i32 0, i32 34, !dbg !12806
  %99 = load i32, i32* %nb_index_entries85, align 8, !dbg !12806
  %sub86 = sub nsw i32 %99, 1, !dbg !12807
  %cmp87 = icmp ne i32 %95, %sub86, !dbg !12808
  %cond = select i1 %cmp87, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.143, i32 0, i32 0), !dbg !12803
  %call89 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr, i64 20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.144, i32 0, i32 0), i64 %94, i8* %cond) #11, !dbg !12809
  store i32 %call89, i32* %ret, align 4, !dbg !12794
  %100 = load i32, i32* %ret, align 4, !dbg !12810
  %cmp90 = icmp sle i32 %100, 0, !dbg !12812
  br i1 %cmp90, label %if.then101, label %lor.lhs.false92, !dbg !12813

lor.lhs.false92:                                  ; preds = %for.body78
  %101 = load i32, i32* %ret, align 4, !dbg !12814
  %cmp93 = icmp eq i32 %101, 20, !dbg !12816
  br i1 %cmp93, label %land.lhs.true, label %if.end102, !dbg !12817

land.lhs.true:                                    ; preds = %lor.lhs.false92
  %102 = load i32, i32* %i, align 4, !dbg !12818
  %103 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12820
  %streams95 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %103, i32 0, i32 7, !dbg !12821
  %104 = load %struct.AVStream**, %struct.AVStream*** %streams95, align 8, !dbg !12821
  %arrayidx96 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %104, i64 0, !dbg !12820
  %105 = load %struct.AVStream*, %struct.AVStream** %arrayidx96, align 8, !dbg !12820
  %nb_index_entries97 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %105, i32 0, i32 34, !dbg !12822
  %106 = load i32, i32* %nb_index_entries97, align 8, !dbg !12822
  %sub98 = sub nsw i32 %106, 1, !dbg !12823
  %cmp99 = icmp eq i32 %102, %sub98, !dbg !12824
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !12825

if.then101:                                       ; preds = %land.lhs.true, %for.body78
  %107 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12826
  %108 = bitcast %struct.AVFormatContext* %107 to i8*, !dbg !12826
  call void (i8*, i32, i8*, ...) @av_log(i8* %108, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.146, i32 0, i32 0)), !dbg !12828
  %109 = load i8*, i8** %buf, align 8, !dbg !12829
  call void @av_free(i8* %109), !dbg !12830
  store i32 -1094995529, i32* %retval, align 4, !dbg !12831
  br label %return, !dbg !12831

if.end102:                                        ; preds = %land.lhs.true, %lor.lhs.false92
  %110 = load i32, i32* %ret, align 4, !dbg !12832
  %111 = load i32, i32* %end, align 4, !dbg !12833
  %add103 = add nsw i32 %111, %110, !dbg !12833
  store i32 %add103, i32* %end, align 4, !dbg !12833
  br label %for.inc104, !dbg !12834

for.inc104:                                       ; preds = %if.end102
  %112 = load i32, i32* %i, align 4, !dbg !12835
  %inc105 = add nsw i32 %112, 1, !dbg !12835
  store i32 %inc105, i32* %i, align 4, !dbg !12835
  br label %for.cond72, !dbg !12837, !llvm.loop !12838

for.end106:                                       ; preds = %for.cond72
  %113 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12840
  %streams107 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %113, i32 0, i32 7, !dbg !12841
  %114 = load %struct.AVStream**, %struct.AVStream*** %streams107, align 8, !dbg !12841
  %arrayidx108 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %114, i64 0, !dbg !12840
  %115 = load %struct.AVStream*, %struct.AVStream** %arrayidx108, align 8, !dbg !12840
  %metadata109 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %115, i32 0, i32 11, !dbg !12842
  %116 = load i8*, i8** %buf, align 8, !dbg !12843
  %call110 = call i32 @av_dict_set(%struct.AVDictionary** %metadata109, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.147, i32 0, i32 0), i8* %116, i32 0), !dbg !12844
  %117 = load i8*, i8** %buf, align 8, !dbg !12845
  call void @av_free(i8* %117), !dbg !12846
  store i32 0, i32* %retval, align 4, !dbg !12847
  br label %return, !dbg !12847

return:                                           ; preds = %for.end106, %if.then101, %if.then69, %if.then53, %if.then33, %if.then5
  %118 = load i32, i32* %retval, align 4, !dbg !12848
  ret i32 %118, !dbg !12848
}

; Function Attrs: nounwind uwtable
define internal i64 @webm_dash_manifest_compute_bandwidth(%struct.AVFormatContext* %s, i64 %cues_start) #0 !dbg !12849 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %cues_start.addr = alloca i64, align 8
  %matroska = alloca %struct.MatroskaDemuxContext*, align 8
  %st = alloca %struct.AVStream*, align 8
  %bandwidth = alloca double, align 8
  %i = alloca i32, align 4
  %prebuffer_ns = alloca i64, align 8
  %time_ns = alloca i64, align 8
  %nano_seconds_per_second = alloca double, align 8
  %prebuffered_ns = alloca i64, align 8
  %prebuffer_bytes = alloca double, align 8
  %temp_prebuffer_ns = alloca i64, align 8
  %pre_bytes = alloca i64, align 8
  %pre_ns = alloca i64, align 8
  %pre_sec = alloca double, align 8
  %prebuffer = alloca double, align 8
  %bits_per_second = alloca double, align 8
  %desc_beg = alloca %struct.CueDesc, align 8
  %desc_end = alloca %struct.CueDesc, align 8
  %tmp = alloca %struct.CueDesc, align 8
  %desc_bytes = alloca i64, align 8
  %desc_ns = alloca i64, align 8
  %desc_sec = alloca double, align 8
  %calc_bits_per_second = alloca double, align 8
  %percent = alloca double, align 8
  %mod_bits_per_second = alloca double, align 8
  %search_sec = alloca double, align 8
  %bps = alloca i64, align 8
  %min_buffer = alloca double, align 8
  %buffer = alloca double, align 8
  %sec_to_download = alloca double, align 8
  %rv = alloca i32, align 4
  %tmp85 = alloca %struct.CueDesc, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !12852, metadata !2574), !dbg !12853
  store i64 %cues_start, i64* %cues_start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cues_start.addr, metadata !12854, metadata !2574), !dbg !12855
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska, metadata !12856, metadata !2574), !dbg !12857
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12858
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !12859
  %1 = load i8*, i8** %priv_data, align 8, !dbg !12859
  %2 = bitcast i8* %1 to %struct.MatroskaDemuxContext*, !dbg !12858
  store %struct.MatroskaDemuxContext* %2, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12857
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !12860, metadata !2574), !dbg !12861
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12862
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 7, !dbg !12863
  %4 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !12863
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %4, i64 0, !dbg !12862
  %5 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !12862
  store %struct.AVStream* %5, %struct.AVStream** %st, align 8, !dbg !12861
  call void @llvm.dbg.declare(metadata double* %bandwidth, metadata !12864, metadata !2574), !dbg !12865
  store double 0.000000e+00, double* %bandwidth, align 8, !dbg !12865
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12866, metadata !2574), !dbg !12867
  store i32 0, i32* %i, align 4, !dbg !12868
  br label %for.cond, !dbg !12870

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !12871
  %7 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12874
  %nb_index_entries = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 34, !dbg !12875
  %8 = load i32, i32* %nb_index_entries, align 8, !dbg !12875
  %cmp = icmp slt i32 %6, %8, !dbg !12876
  br i1 %cmp, label %for.body, label %for.end, !dbg !12877

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %prebuffer_ns, metadata !12878, metadata !2574), !dbg !12880
  store i64 1000000000, i64* %prebuffer_ns, align 8, !dbg !12880
  call void @llvm.dbg.declare(metadata i64* %time_ns, metadata !12881, metadata !2574), !dbg !12882
  %9 = load i32, i32* %i, align 4, !dbg !12883
  %idxprom = sext i32 %9 to i64, !dbg !12884
  %10 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12884
  %index_entries = getelementptr inbounds %struct.AVStream, %struct.AVStream* %10, i32 0, i32 33, !dbg !12885
  %11 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries, align 8, !dbg !12885
  %arrayidx1 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %11, i64 %idxprom, !dbg !12884
  %timestamp = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx1, i32 0, i32 1, !dbg !12886
  %12 = load i64, i64* %timestamp, align 8, !dbg !12886
  %13 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12887
  %time_scale = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %13, i32 0, i32 6, !dbg !12888
  %14 = load i64, i64* %time_scale, align 8, !dbg !12888
  %mul = mul i64 %12, %14, !dbg !12889
  store i64 %mul, i64* %time_ns, align 8, !dbg !12882
  call void @llvm.dbg.declare(metadata double* %nano_seconds_per_second, metadata !12890, metadata !2574), !dbg !12891
  store double 1.000000e+09, double* %nano_seconds_per_second, align 8, !dbg !12891
  call void @llvm.dbg.declare(metadata i64* %prebuffered_ns, metadata !12892, metadata !2574), !dbg !12893
  %15 = load i64, i64* %time_ns, align 8, !dbg !12894
  %16 = load i64, i64* %prebuffer_ns, align 8, !dbg !12895
  %add = add nsw i64 %15, %16, !dbg !12896
  store i64 %add, i64* %prebuffered_ns, align 8, !dbg !12893
  call void @llvm.dbg.declare(metadata double* %prebuffer_bytes, metadata !12897, metadata !2574), !dbg !12898
  store double 0.000000e+00, double* %prebuffer_bytes, align 8, !dbg !12898
  call void @llvm.dbg.declare(metadata i64* %temp_prebuffer_ns, metadata !12899, metadata !2574), !dbg !12900
  %17 = load i64, i64* %prebuffer_ns, align 8, !dbg !12901
  store i64 %17, i64* %temp_prebuffer_ns, align 8, !dbg !12900
  call void @llvm.dbg.declare(metadata i64* %pre_bytes, metadata !12902, metadata !2574), !dbg !12903
  call void @llvm.dbg.declare(metadata i64* %pre_ns, metadata !12904, metadata !2574), !dbg !12905
  call void @llvm.dbg.declare(metadata double* %pre_sec, metadata !12906, metadata !2574), !dbg !12907
  call void @llvm.dbg.declare(metadata double* %prebuffer, metadata !12908, metadata !2574), !dbg !12909
  call void @llvm.dbg.declare(metadata double* %bits_per_second, metadata !12910, metadata !2574), !dbg !12911
  call void @llvm.dbg.declare(metadata %struct.CueDesc* %desc_beg, metadata !12912, metadata !2574), !dbg !12920
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12921
  %19 = load i64, i64* %time_ns, align 8, !dbg !12922
  %20 = load i64, i64* %cues_start.addr, align 8, !dbg !12923
  call void @get_cue_desc(%struct.CueDesc* sret %desc_beg, %struct.AVFormatContext* %18, i64 %19, i64 %20), !dbg !12924
  call void @llvm.dbg.declare(metadata %struct.CueDesc* %desc_end, metadata !12925, metadata !2574), !dbg !12926
  %21 = bitcast %struct.CueDesc* %desc_end to i8*, !dbg !12927
  %22 = bitcast %struct.CueDesc* %desc_beg to i8*, !dbg !12927
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 32, i32 8, i1 false), !dbg !12927
  br label %while.cond, !dbg !12928

while.cond:                                       ; preds = %while.body, %for.body
  %start_time_ns = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 0, !dbg !12929
  %23 = load i64, i64* %start_time_ns, align 8, !dbg !12929
  %cmp2 = icmp ne i64 %23, -1, !dbg !12931
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !12932

land.rhs:                                         ; preds = %while.cond
  %end_time_ns = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 1, !dbg !12933
  %24 = load i64, i64* %end_time_ns, align 8, !dbg !12933
  %25 = load i64, i64* %prebuffered_ns, align 8, !dbg !12935
  %cmp3 = icmp slt i64 %24, %25, !dbg !12936
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %26 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ]
  br i1 %26, label %while.body, label %while.end, !dbg !12937

while.body:                                       ; preds = %land.end
  %end_offset = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 3, !dbg !12939
  %27 = load i64, i64* %end_offset, align 8, !dbg !12939
  %start_offset = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 2, !dbg !12941
  %28 = load i64, i64* %start_offset, align 8, !dbg !12941
  %sub = sub nsw i64 %27, %28, !dbg !12942
  %conv = sitofp i64 %sub to double, !dbg !12943
  %29 = load double, double* %prebuffer_bytes, align 8, !dbg !12944
  %add4 = fadd double %29, %conv, !dbg !12944
  store double %add4, double* %prebuffer_bytes, align 8, !dbg !12944
  %end_time_ns5 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 1, !dbg !12945
  %30 = load i64, i64* %end_time_ns5, align 8, !dbg !12945
  %start_time_ns6 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 0, !dbg !12946
  %31 = load i64, i64* %start_time_ns6, align 8, !dbg !12946
  %sub7 = sub nsw i64 %30, %31, !dbg !12947
  %32 = load i64, i64* %temp_prebuffer_ns, align 8, !dbg !12948
  %sub8 = sub nsw i64 %32, %sub7, !dbg !12948
  store i64 %sub8, i64* %temp_prebuffer_ns, align 8, !dbg !12948
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12949
  %end_time_ns9 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 1, !dbg !12950
  %34 = load i64, i64* %end_time_ns9, align 8, !dbg !12950
  %35 = load i64, i64* %cues_start.addr, align 8, !dbg !12951
  call void @get_cue_desc(%struct.CueDesc* sret %tmp, %struct.AVFormatContext* %33, i64 %34, i64 %35), !dbg !12952
  %36 = bitcast %struct.CueDesc* %desc_end to i8*, !dbg !12952
  %37 = bitcast %struct.CueDesc* %tmp to i8*, !dbg !12952
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 32, i32 8, i1 false), !dbg !12953
  br label %while.cond, !dbg !12955, !llvm.loop !12957

while.end:                                        ; preds = %land.end
  %start_time_ns10 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 0, !dbg !12958
  %38 = load i64, i64* %start_time_ns10, align 8, !dbg !12958
  %cmp11 = icmp eq i64 %38, -1, !dbg !12960
  br i1 %cmp11, label %if.then, label %if.else, !dbg !12961

if.then:                                          ; preds = %while.end
  %39 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12962
  %duration = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %39, i32 0, i32 7, !dbg !12965
  %40 = load double, double* %duration, align 8, !dbg !12965
  %41 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !12966
  %time_scale13 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %41, i32 0, i32 6, !dbg !12967
  %42 = load i64, i64* %time_scale13, align 8, !dbg !12967
  %conv14 = uitofp i64 %42 to double, !dbg !12966
  %mul15 = fmul double %40, %conv14, !dbg !12968
  %43 = load i64, i64* %prebuffered_ns, align 8, !dbg !12969
  %conv16 = sitofp i64 %43 to double, !dbg !12969
  %cmp17 = fcmp oge double %mul15, %conv16, !dbg !12970
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !12971

if.then19:                                        ; preds = %if.then
  store i64 -1, i64* %retval, align 8, !dbg !12972
  br label %return, !dbg !12972

if.end:                                           ; preds = %if.then
  store double 0.000000e+00, double* %bits_per_second, align 8, !dbg !12973
  br label %if.end89, !dbg !12974

if.else:                                          ; preds = %while.end
  %end_offset20 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 3, !dbg !12975
  %44 = load i64, i64* %end_offset20, align 8, !dbg !12975
  %start_offset21 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 2, !dbg !12977
  %45 = load i64, i64* %start_offset21, align 8, !dbg !12977
  %sub22 = sub nsw i64 %44, %45, !dbg !12978
  store i64 %sub22, i64* %pre_bytes, align 8, !dbg !12979
  %end_time_ns23 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 1, !dbg !12980
  %46 = load i64, i64* %end_time_ns23, align 8, !dbg !12980
  %start_time_ns24 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 0, !dbg !12981
  %47 = load i64, i64* %start_time_ns24, align 8, !dbg !12981
  %sub25 = sub nsw i64 %46, %47, !dbg !12982
  store i64 %sub25, i64* %pre_ns, align 8, !dbg !12983
  %48 = load i64, i64* %pre_ns, align 8, !dbg !12984
  %conv26 = sitofp i64 %48 to double, !dbg !12984
  %49 = load double, double* %nano_seconds_per_second, align 8, !dbg !12985
  %div = fdiv double %conv26, %49, !dbg !12986
  store double %div, double* %pre_sec, align 8, !dbg !12987
  %50 = load i64, i64* %pre_bytes, align 8, !dbg !12988
  %conv27 = sitofp i64 %50 to double, !dbg !12988
  %51 = load i64, i64* %temp_prebuffer_ns, align 8, !dbg !12989
  %conv28 = sitofp i64 %51 to double, !dbg !12989
  %52 = load double, double* %nano_seconds_per_second, align 8, !dbg !12990
  %div29 = fdiv double %conv28, %52, !dbg !12991
  %53 = load double, double* %pre_sec, align 8, !dbg !12992
  %div30 = fdiv double %div29, %53, !dbg !12993
  %mul31 = fmul double %conv27, %div30, !dbg !12994
  %54 = load double, double* %prebuffer_bytes, align 8, !dbg !12995
  %add32 = fadd double %54, %mul31, !dbg !12995
  store double %add32, double* %prebuffer_bytes, align 8, !dbg !12995
  %55 = load i64, i64* %prebuffer_ns, align 8, !dbg !12996
  %conv33 = sitofp i64 %55 to double, !dbg !12996
  %56 = load double, double* %nano_seconds_per_second, align 8, !dbg !12997
  %div34 = fdiv double %conv33, %56, !dbg !12998
  store double %div34, double* %prebuffer, align 8, !dbg !12999
  store double 0.000000e+00, double* %bits_per_second, align 8, !dbg !13000
  br label %do.body, !dbg !13001, !llvm.loop !13002

do.body:                                          ; preds = %do.cond, %if.else
  call void @llvm.dbg.declare(metadata i64* %desc_bytes, metadata !13003, metadata !2574), !dbg !13005
  %end_offset36 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 3, !dbg !13006
  %57 = load i64, i64* %end_offset36, align 8, !dbg !13006
  %start_offset37 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_beg, i32 0, i32 2, !dbg !13007
  %58 = load i64, i64* %start_offset37, align 8, !dbg !13007
  %sub38 = sub nsw i64 %57, %58, !dbg !13008
  store i64 %sub38, i64* %desc_bytes, align 8, !dbg !13005
  call void @llvm.dbg.declare(metadata i64* %desc_ns, metadata !13009, metadata !2574), !dbg !13010
  %end_time_ns40 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 1, !dbg !13011
  %59 = load i64, i64* %end_time_ns40, align 8, !dbg !13011
  %start_time_ns41 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_beg, i32 0, i32 0, !dbg !13012
  %60 = load i64, i64* %start_time_ns41, align 8, !dbg !13012
  %sub42 = sub nsw i64 %59, %60, !dbg !13013
  store i64 %sub42, i64* %desc_ns, align 8, !dbg !13010
  call void @llvm.dbg.declare(metadata double* %desc_sec, metadata !13014, metadata !2574), !dbg !13015
  %61 = load i64, i64* %desc_ns, align 8, !dbg !13016
  %conv44 = sitofp i64 %61 to double, !dbg !13016
  %62 = load double, double* %nano_seconds_per_second, align 8, !dbg !13017
  %div45 = fdiv double %conv44, %62, !dbg !13018
  store double %div45, double* %desc_sec, align 8, !dbg !13015
  call void @llvm.dbg.declare(metadata double* %calc_bits_per_second, metadata !13019, metadata !2574), !dbg !13020
  %63 = load i64, i64* %desc_bytes, align 8, !dbg !13021
  %mul47 = mul nsw i64 %63, 8, !dbg !13022
  %conv48 = sitofp i64 %mul47 to double, !dbg !13023
  %64 = load double, double* %desc_sec, align 8, !dbg !13024
  %div49 = fdiv double %conv48, %64, !dbg !13025
  store double %div49, double* %calc_bits_per_second, align 8, !dbg !13020
  call void @llvm.dbg.declare(metadata double* %percent, metadata !13026, metadata !2574), !dbg !13027
  %65 = load i64, i64* %desc_bytes, align 8, !dbg !13028
  %conv51 = sitofp i64 %65 to double, !dbg !13028
  %66 = load double, double* %prebuffer_bytes, align 8, !dbg !13029
  %sub52 = fsub double %conv51, %66, !dbg !13030
  %67 = load i64, i64* %desc_bytes, align 8, !dbg !13031
  %conv53 = sitofp i64 %67 to double, !dbg !13031
  %div54 = fdiv double %sub52, %conv53, !dbg !13032
  store double %div54, double* %percent, align 8, !dbg !13027
  call void @llvm.dbg.declare(metadata double* %mod_bits_per_second, metadata !13033, metadata !2574), !dbg !13034
  %68 = load double, double* %calc_bits_per_second, align 8, !dbg !13035
  %69 = load double, double* %percent, align 8, !dbg !13036
  %mul56 = fmul double %68, %69, !dbg !13037
  store double %mul56, double* %mod_bits_per_second, align 8, !dbg !13034
  %70 = load double, double* %prebuffer, align 8, !dbg !13038
  %71 = load double, double* %desc_sec, align 8, !dbg !13040
  %cmp57 = fcmp olt double %70, %71, !dbg !13041
  br i1 %cmp57, label %if.then59, label %if.end83, !dbg !13042

if.then59:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata double* %search_sec, metadata !13043, metadata !2574), !dbg !13045
  %72 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13046
  %duration61 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %72, i32 0, i32 7, !dbg !13047
  %73 = load double, double* %duration61, align 8, !dbg !13047
  %74 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13048
  %time_scale62 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %74, i32 0, i32 6, !dbg !13049
  %75 = load i64, i64* %time_scale62, align 8, !dbg !13049
  %conv63 = uitofp i64 %75 to double, !dbg !13048
  %mul64 = fmul double %73, %conv63, !dbg !13050
  %76 = load double, double* %nano_seconds_per_second, align 8, !dbg !13051
  %div65 = fdiv double %mul64, %76, !dbg !13052
  store double %div65, double* %search_sec, align 8, !dbg !13045
  call void @llvm.dbg.declare(metadata i64* %bps, metadata !13053, metadata !2574), !dbg !13054
  %77 = load double, double* %mod_bits_per_second, align 8, !dbg !13055
  %conv67 = fptosi double %77 to i64, !dbg !13056
  %add68 = add nsw i64 %conv67, 1, !dbg !13057
  store i64 %add68, i64* %bps, align 8, !dbg !13054
  call void @llvm.dbg.declare(metadata double* %min_buffer, metadata !13058, metadata !2574), !dbg !13060
  store double 0.000000e+00, double* %min_buffer, align 8, !dbg !13060
  call void @llvm.dbg.declare(metadata double* %buffer, metadata !13061, metadata !2574), !dbg !13062
  %78 = load double, double* %prebuffer, align 8, !dbg !13063
  store double %78, double* %buffer, align 8, !dbg !13062
  call void @llvm.dbg.declare(metadata double* %sec_to_download, metadata !13064, metadata !2574), !dbg !13065
  store double 0.000000e+00, double* %sec_to_download, align 8, !dbg !13065
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !13066, metadata !2574), !dbg !13067
  %79 = load i64, i64* %prebuffered_ns, align 8, !dbg !13068
  %80 = load double, double* %search_sec, align 8, !dbg !13069
  %81 = load i64, i64* %bps, align 8, !dbg !13070
  %82 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13071
  %83 = load i64, i64* %cues_start.addr, align 8, !dbg !13072
  %call = call i32 @buffer_size_after_time_downloaded(i64 %79, double %80, i64 %81, double 0.000000e+00, double* %buffer, double* %sec_to_download, %struct.AVFormatContext* %82, i64 %83), !dbg !13073
  store i32 %call, i32* %rv, align 4, !dbg !13067
  %84 = load i32, i32* %rv, align 4, !dbg !13074
  %cmp73 = icmp slt i32 %84, 0, !dbg !13076
  br i1 %cmp73, label %if.then75, label %if.else76, !dbg !13077

if.then75:                                        ; preds = %if.then59
  store i64 -1, i64* %retval, align 8, !dbg !13078
  br label %return, !dbg !13078

if.else76:                                        ; preds = %if.then59
  %85 = load i32, i32* %rv, align 4, !dbg !13080
  %cmp77 = icmp eq i32 %85, 0, !dbg !13082
  br i1 %cmp77, label %if.then79, label %if.end81, !dbg !13083

if.then79:                                        ; preds = %if.else76
  %86 = load i64, i64* %bps, align 8, !dbg !13084
  %conv80 = sitofp i64 %86 to double, !dbg !13086
  store double %conv80, double* %bits_per_second, align 8, !dbg !13087
  br label %do.end, !dbg !13088

if.end81:                                         ; preds = %if.else76
  br label %if.end82

if.end82:                                         ; preds = %if.end81
  br label %if.end83, !dbg !13089

if.end83:                                         ; preds = %if.end82, %do.body
  %87 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13090
  %end_time_ns84 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 1, !dbg !13091
  %88 = load i64, i64* %end_time_ns84, align 8, !dbg !13091
  %89 = load i64, i64* %cues_start.addr, align 8, !dbg !13092
  call void @get_cue_desc(%struct.CueDesc* sret %tmp85, %struct.AVFormatContext* %87, i64 %88, i64 %89), !dbg !13093
  %90 = bitcast %struct.CueDesc* %desc_end to i8*, !dbg !13093
  %91 = bitcast %struct.CueDesc* %tmp85 to i8*, !dbg !13093
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 32, i32 8, i1 false), !dbg !13094
  br label %do.cond, !dbg !13096

do.cond:                                          ; preds = %if.end83
  %start_time_ns86 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_end, i32 0, i32 0, !dbg !13097
  %92 = load i64, i64* %start_time_ns86, align 8, !dbg !13097
  %cmp87 = icmp ne i64 %92, -1, !dbg !13099
  br i1 %cmp87, label %do.body, label %do.end, !dbg !13100, !llvm.loop !13002

do.end:                                           ; preds = %do.cond, %if.then79
  br label %if.end89

if.end89:                                         ; preds = %do.end, %if.end
  %93 = load double, double* %bandwidth, align 8, !dbg !13101
  %94 = load double, double* %bits_per_second, align 8, !dbg !13103
  %cmp90 = fcmp olt double %93, %94, !dbg !13104
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !13105

if.then92:                                        ; preds = %if.end89
  %95 = load double, double* %bits_per_second, align 8, !dbg !13106
  store double %95, double* %bandwidth, align 8, !dbg !13108
  br label %if.end93, !dbg !13109

if.end93:                                         ; preds = %if.then92, %if.end89
  br label %for.inc, !dbg !13110

for.inc:                                          ; preds = %if.end93
  %96 = load i32, i32* %i, align 4, !dbg !13111
  %inc = add nsw i32 %96, 1, !dbg !13111
  store i32 %inc, i32* %i, align 4, !dbg !13111
  br label %for.cond, !dbg !13113, !llvm.loop !13114

for.end:                                          ; preds = %for.cond
  %97 = load double, double* %bandwidth, align 8, !dbg !13116
  %conv94 = fptosi double %97 to i64, !dbg !13117
  store i64 %conv94, i64* %retval, align 8, !dbg !13118
  br label %return, !dbg !13118

return:                                           ; preds = %for.end, %if.then75, %if.then19
  %98 = load i64, i64* %retval, align 8, !dbg !13119
  ret i64 %98, !dbg !13119
}

; Function Attrs: nounwind uwtable
define internal i32 @webm_clusters_start_with_keyframe(%struct.AVFormatContext* %s) #0 !dbg !13120 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2735, metadata !2574), !dbg !13121
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %matroska = alloca %struct.MatroskaDemuxContext*, align 8
  %cluster_pos = alloca i64, align 8
  %before_pos = alloca i64, align 8
  %index = alloca i32, align 4
  %rv = alloca i32, align 4
  %cluster_id = alloca i64, align 8
  %cluster_length = alloca i64, align 8
  %pkt = alloca %struct.AVPacket*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !13123, metadata !2574), !dbg !13124
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska, metadata !13125, metadata !2574), !dbg !13126
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13127
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !13128
  %1 = load i8*, i8** %priv_data, align 8, !dbg !13128
  %2 = bitcast i8* %1 to %struct.MatroskaDemuxContext*, !dbg !13127
  store %struct.MatroskaDemuxContext* %2, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13126
  call void @llvm.dbg.declare(metadata i64* %cluster_pos, metadata !13129, metadata !2574), !dbg !13130
  call void @llvm.dbg.declare(metadata i64* %before_pos, metadata !13131, metadata !2574), !dbg !13132
  call void @llvm.dbg.declare(metadata i32* %index, metadata !13133, metadata !2574), !dbg !13134
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !13135, metadata !2574), !dbg !13136
  store i32 1, i32* %rv, align 4, !dbg !13136
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13137
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 7, !dbg !13139
  %4 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !13139
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %4, i64 0, !dbg !13137
  %5 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !13137
  %nb_index_entries = getelementptr inbounds %struct.AVStream, %struct.AVStream* %5, i32 0, i32 34, !dbg !13140
  %6 = load i32, i32* %nb_index_entries, align 8, !dbg !13140
  %cmp = icmp sle i32 %6, 0, !dbg !13141
  br i1 %cmp, label %if.then, label %if.end, !dbg !13142

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13143
  br label %return, !dbg !13143

if.end:                                           ; preds = %entry
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13145
  %streams1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 7, !dbg !13146
  %8 = load %struct.AVStream**, %struct.AVStream*** %streams1, align 8, !dbg !13146
  %arrayidx2 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %8, i64 0, !dbg !13145
  %9 = load %struct.AVStream*, %struct.AVStream** %arrayidx2, align 8, !dbg !13145
  %call = call i32 @av_index_search_timestamp(%struct.AVStream* %9, i64 0, i32 0), !dbg !13147
  store i32 %call, i32* %index, align 4, !dbg !13148
  %10 = load i32, i32* %index, align 4, !dbg !13149
  %cmp3 = icmp slt i32 %10, 0, !dbg !13151
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !13152

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13153
  br label %return, !dbg !13153

if.end5:                                          ; preds = %if.end
  %11 = load i32, i32* %index, align 4, !dbg !13155
  %idxprom = sext i32 %11 to i64, !dbg !13156
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13156
  %streams6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i32 0, i32 7, !dbg !13157
  %13 = load %struct.AVStream**, %struct.AVStream*** %streams6, align 8, !dbg !13157
  %arrayidx7 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %13, i64 0, !dbg !13156
  %14 = load %struct.AVStream*, %struct.AVStream** %arrayidx7, align 8, !dbg !13156
  %index_entries = getelementptr inbounds %struct.AVStream, %struct.AVStream* %14, i32 0, i32 33, !dbg !13158
  %15 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries, align 8, !dbg !13158
  %arrayidx8 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %15, i64 %idxprom, !dbg !13156
  %pos = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx8, i32 0, i32 0, !dbg !13159
  %16 = load i64, i64* %pos, align 8, !dbg !13159
  store i64 %16, i64* %cluster_pos, align 8, !dbg !13160
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13161
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %17, i32 0, i32 4, !dbg !13162
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !13162
  store %struct.AVIOContext* %18, %struct.AVIOContext** %s.addr.i, align 8, !dbg !13163
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !13164
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %19, i64 0, i32 1) #11, !dbg !13165
  store i64 %call.i, i64* %before_pos, align 8, !dbg !13166
  br label %while.body, !dbg !13167

while.body:                                       ; preds = %if.end5, %if.end31
  call void @llvm.dbg.declare(metadata i64* %cluster_id, metadata !13168, metadata !2574), !dbg !13170
  store i64 0, i64* %cluster_id, align 8, !dbg !13170
  call void @llvm.dbg.declare(metadata i64* %cluster_length, metadata !13171, metadata !2574), !dbg !13172
  store i64 0, i64* %cluster_length, align 8, !dbg !13172
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt, metadata !13173, metadata !2574), !dbg !13174
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13175
  %pb10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 4, !dbg !13176
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb10, align 8, !dbg !13176
  %22 = load i64, i64* %cluster_pos, align 8, !dbg !13177
  %call11 = call i64 @avio_seek(%struct.AVIOContext* %21, i64 %22, i32 0), !dbg !13178
  %23 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13179
  %24 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13180
  %ctx = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %24, i32 0, i32 1, !dbg !13181
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !13181
  %pb12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %25, i32 0, i32 4, !dbg !13182
  %26 = load %struct.AVIOContext*, %struct.AVIOContext** %pb12, align 8, !dbg !13182
  %call13 = call i32 @ebml_read_num(%struct.MatroskaDemuxContext* %23, %struct.AVIOContext* %26, i32 4, i64* %cluster_id), !dbg !13183
  %27 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13184
  %28 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13185
  %ctx14 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %28, i32 0, i32 1, !dbg !13186
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx14, align 8, !dbg !13186
  %pb15 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %29, i32 0, i32 4, !dbg !13187
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %pb15, align 8, !dbg !13187
  %call16 = call i32 @ebml_read_length(%struct.MatroskaDemuxContext* %27, %struct.AVIOContext* %30, i64* %cluster_length), !dbg !13188
  %31 = load i64, i64* %cluster_id, align 8, !dbg !13189
  %cmp17 = icmp ne i64 %31, 256095861, !dbg !13191
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !13192

if.then18:                                        ; preds = %while.body
  br label %while.end, !dbg !13193

if.end19:                                         ; preds = %while.body
  %32 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13195
  %pb20 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %32, i32 0, i32 4, !dbg !13196
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %pb20, align 8, !dbg !13196
  %34 = load i64, i64* %cluster_pos, align 8, !dbg !13197
  %call21 = call i64 @avio_seek(%struct.AVIOContext* %33, i64 %34, i32 0), !dbg !13198
  %35 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13199
  %current_id = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %35, i32 0, i32 5, !dbg !13200
  store i32 0, i32* %current_id, align 4, !dbg !13201
  %36 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13202
  call void @matroska_clear_queue(%struct.MatroskaDemuxContext* %36), !dbg !13203
  %37 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13204
  %call22 = call i32 @matroska_parse_cluster(%struct.MatroskaDemuxContext* %37), !dbg !13206
  %cmp23 = icmp slt i32 %call22, 0, !dbg !13207
  br i1 %cmp23, label %if.then24, label %lor.lhs.false, !dbg !13208

lor.lhs.false:                                    ; preds = %if.end19
  %38 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13209
  %queue = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %38, i32 0, i32 18, !dbg !13210
  %39 = load %struct.AVPacketList*, %struct.AVPacketList** %queue, align 8, !dbg !13210
  %tobool = icmp ne %struct.AVPacketList* %39, null, !dbg !13209
  br i1 %tobool, label %if.end25, label %if.then24, !dbg !13211

if.then24:                                        ; preds = %lor.lhs.false, %if.end19
  br label %while.end, !dbg !13213

if.end25:                                         ; preds = %lor.lhs.false
  %40 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13215
  %queue26 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %40, i32 0, i32 18, !dbg !13216
  %41 = load %struct.AVPacketList*, %struct.AVPacketList** %queue26, align 8, !dbg !13216
  %pkt27 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %41, i32 0, i32 0, !dbg !13217
  store %struct.AVPacket* %pkt27, %struct.AVPacket** %pkt, align 8, !dbg !13218
  %42 = load i64, i64* %cluster_length, align 8, !dbg !13219
  %add = add nsw i64 %42, 12, !dbg !13220
  %43 = load i64, i64* %cluster_pos, align 8, !dbg !13221
  %add28 = add nsw i64 %43, %add, !dbg !13221
  store i64 %add28, i64* %cluster_pos, align 8, !dbg !13221
  %44 = load %struct.AVPacket*, %struct.AVPacket** %pkt, align 8, !dbg !13222
  %flags = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %44, i32 0, i32 6, !dbg !13224
  %45 = load i32, i32* %flags, align 8, !dbg !13224
  %and = and i32 %45, 1, !dbg !13225
  %tobool29 = icmp ne i32 %and, 0, !dbg !13225
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !13226

if.then30:                                        ; preds = %if.end25
  store i32 0, i32* %rv, align 4, !dbg !13227
  br label %while.end, !dbg !13229

if.end31:                                         ; preds = %if.end25
  br label %while.body, !dbg !13230, !llvm.loop !13232

while.end:                                        ; preds = %if.then30, %if.then24, %if.then18
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13233
  %pb32 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %46, i32 0, i32 4, !dbg !13234
  %47 = load %struct.AVIOContext*, %struct.AVIOContext** %pb32, align 8, !dbg !13234
  %48 = load i64, i64* %before_pos, align 8, !dbg !13235
  %call33 = call i64 @avio_seek(%struct.AVIOContext* %47, i64 %48, i32 0), !dbg !13236
  %49 = load i32, i32* %rv, align 4, !dbg !13237
  store i32 %49, i32* %retval, align 4, !dbg !13238
  br label %return, !dbg !13238

return:                                           ; preds = %while.end, %if.then4, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !13239
  ret i32 %50, !dbg !13239
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #7

; Function Attrs: nounwind uwtable
define internal void @get_cue_desc(%struct.CueDesc* noalias sret %agg.result, %struct.AVFormatContext* %s, i64 %ts, i64 %cues_start) #0 !dbg !13240 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %ts.addr = alloca i64, align 8
  %cues_start.addr = alloca i64, align 8
  %matroska = alloca %struct.MatroskaDemuxContext*, align 8
  %cue_desc = alloca %struct.CueDesc, align 8
  %i = alloca i32, align 4
  %nb_index_entries = alloca i32, align 4
  %index_entries = alloca %struct.AVIndexEntry*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !13243, metadata !2574), !dbg !13244
  store i64 %ts, i64* %ts.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ts.addr, metadata !13245, metadata !2574), !dbg !13246
  store i64 %cues_start, i64* %cues_start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cues_start.addr, metadata !13247, metadata !2574), !dbg !13248
  call void @llvm.dbg.declare(metadata %struct.MatroskaDemuxContext** %matroska, metadata !13249, metadata !2574), !dbg !13250
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13251
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !13252
  %1 = load i8*, i8** %priv_data, align 8, !dbg !13252
  %2 = bitcast i8* %1 to %struct.MatroskaDemuxContext*, !dbg !13251
  store %struct.MatroskaDemuxContext* %2, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13250
  call void @llvm.dbg.declare(metadata %struct.CueDesc* %cue_desc, metadata !13253, metadata !2574), !dbg !13254
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13255, metadata !2574), !dbg !13256
  call void @llvm.dbg.declare(metadata i32* %nb_index_entries, metadata !13257, metadata !2574), !dbg !13258
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13259
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 7, !dbg !13260
  %4 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !13260
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %4, i64 0, !dbg !13259
  %5 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !13259
  %nb_index_entries1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %5, i32 0, i32 34, !dbg !13261
  %6 = load i32, i32* %nb_index_entries1, align 8, !dbg !13261
  store i32 %6, i32* %nb_index_entries, align 4, !dbg !13258
  call void @llvm.dbg.declare(metadata %struct.AVIndexEntry** %index_entries, metadata !13262, metadata !2574), !dbg !13263
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13264
  %streams2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 7, !dbg !13265
  %8 = load %struct.AVStream**, %struct.AVStream*** %streams2, align 8, !dbg !13265
  %arrayidx3 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %8, i64 0, !dbg !13264
  %9 = load %struct.AVStream*, %struct.AVStream** %arrayidx3, align 8, !dbg !13264
  %index_entries4 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %9, i32 0, i32 33, !dbg !13266
  %10 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries4, align 8, !dbg !13266
  store %struct.AVIndexEntry* %10, %struct.AVIndexEntry** %index_entries, align 8, !dbg !13263
  %11 = load i64, i64* %ts.addr, align 8, !dbg !13267
  %conv = sitofp i64 %11 to double, !dbg !13267
  %12 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13269
  %duration = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %12, i32 0, i32 7, !dbg !13270
  %13 = load double, double* %duration, align 8, !dbg !13270
  %14 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13271
  %time_scale = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %14, i32 0, i32 6, !dbg !13272
  %15 = load i64, i64* %time_scale, align 8, !dbg !13272
  %conv5 = uitofp i64 %15 to double, !dbg !13271
  %mul = fmul double %13, %conv5, !dbg !13273
  %cmp = fcmp oge double %conv, %mul, !dbg !13274
  br i1 %cmp, label %if.then, label %if.end, !dbg !13275

if.then:                                          ; preds = %entry
  %start_time_ns = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %agg.result, i32 0, i32 0, !dbg !13276
  store i64 -1, i64* %start_time_ns, align 8, !dbg !13276
  %end_time_ns = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %agg.result, i32 0, i32 1, !dbg !13276
  store i64 -1, i64* %end_time_ns, align 8, !dbg !13276
  %start_offset = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %agg.result, i32 0, i32 2, !dbg !13276
  store i64 -1, i64* %start_offset, align 8, !dbg !13276
  %end_offset = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %agg.result, i32 0, i32 3, !dbg !13276
  store i64 -1, i64* %end_offset, align 8, !dbg !13276
  br label %return, !dbg !13278

if.end:                                           ; preds = %entry
  store i32 1, i32* %i, align 4, !dbg !13279
  br label %for.cond, !dbg !13281

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load i32, i32* %i, align 4, !dbg !13282
  %17 = load i32, i32* %nb_index_entries, align 4, !dbg !13285
  %cmp7 = icmp slt i32 %16, %17, !dbg !13286
  br i1 %cmp7, label %for.body, label %for.end, !dbg !13287

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !13288
  %sub = sub nsw i32 %18, 1, !dbg !13291
  %idxprom = sext i32 %sub to i64, !dbg !13292
  %19 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries, align 8, !dbg !13292
  %arrayidx9 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %19, i64 %idxprom, !dbg !13292
  %timestamp = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx9, i32 0, i32 1, !dbg !13293
  %20 = load i64, i64* %timestamp, align 8, !dbg !13293
  %21 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13294
  %time_scale10 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %21, i32 0, i32 6, !dbg !13295
  %22 = load i64, i64* %time_scale10, align 8, !dbg !13295
  %mul11 = mul i64 %20, %22, !dbg !13296
  %23 = load i64, i64* %ts.addr, align 8, !dbg !13297
  %cmp12 = icmp ule i64 %mul11, %23, !dbg !13298
  br i1 %cmp12, label %land.lhs.true, label %if.end22, !dbg !13299

land.lhs.true:                                    ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !13300
  %idxprom14 = sext i32 %24 to i64, !dbg !13301
  %25 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries, align 8, !dbg !13301
  %arrayidx15 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %25, i64 %idxprom14, !dbg !13301
  %timestamp16 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx15, i32 0, i32 1, !dbg !13302
  %26 = load i64, i64* %timestamp16, align 8, !dbg !13302
  %27 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13303
  %time_scale17 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %27, i32 0, i32 6, !dbg !13304
  %28 = load i64, i64* %time_scale17, align 8, !dbg !13304
  %mul18 = mul i64 %26, %28, !dbg !13305
  %29 = load i64, i64* %ts.addr, align 8, !dbg !13306
  %cmp19 = icmp ugt i64 %mul18, %29, !dbg !13307
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !13308

if.then21:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !13310

if.end22:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !13312

for.inc:                                          ; preds = %if.end22
  %30 = load i32, i32* %i, align 4, !dbg !13313
  %inc = add nsw i32 %30, 1, !dbg !13313
  store i32 %inc, i32* %i, align 4, !dbg !13313
  br label %for.cond, !dbg !13315, !llvm.loop !13316

for.end:                                          ; preds = %if.then21, %for.cond
  %31 = load i32, i32* %i, align 4, !dbg !13318
  %dec = add nsw i32 %31, -1, !dbg !13318
  store i32 %dec, i32* %i, align 4, !dbg !13318
  %32 = load i32, i32* %i, align 4, !dbg !13319
  %idxprom23 = sext i32 %32 to i64, !dbg !13320
  %33 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries, align 8, !dbg !13320
  %arrayidx24 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %33, i64 %idxprom23, !dbg !13320
  %timestamp25 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx24, i32 0, i32 1, !dbg !13321
  %34 = load i64, i64* %timestamp25, align 8, !dbg !13321
  %35 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13322
  %time_scale26 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %35, i32 0, i32 6, !dbg !13323
  %36 = load i64, i64* %time_scale26, align 8, !dbg !13323
  %mul27 = mul i64 %34, %36, !dbg !13324
  %start_time_ns28 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %cue_desc, i32 0, i32 0, !dbg !13325
  store i64 %mul27, i64* %start_time_ns28, align 8, !dbg !13326
  %37 = load i32, i32* %i, align 4, !dbg !13327
  %idxprom29 = sext i32 %37 to i64, !dbg !13328
  %38 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries, align 8, !dbg !13328
  %arrayidx30 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %38, i64 %idxprom29, !dbg !13328
  %pos = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx30, i32 0, i32 0, !dbg !13329
  %39 = load i64, i64* %pos, align 8, !dbg !13329
  %40 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13330
  %segment_start = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %40, i32 0, i32 17, !dbg !13331
  %41 = load i64, i64* %segment_start, align 8, !dbg !13331
  %sub31 = sub nsw i64 %39, %41, !dbg !13332
  %start_offset32 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %cue_desc, i32 0, i32 2, !dbg !13333
  store i64 %sub31, i64* %start_offset32, align 8, !dbg !13334
  %42 = load i32, i32* %i, align 4, !dbg !13335
  %43 = load i32, i32* %nb_index_entries, align 4, !dbg !13337
  %sub33 = sub nsw i32 %43, 1, !dbg !13338
  %cmp34 = icmp ne i32 %42, %sub33, !dbg !13339
  br i1 %cmp34, label %if.then36, label %if.else, !dbg !13340

if.then36:                                        ; preds = %for.end
  %44 = load i32, i32* %i, align 4, !dbg !13341
  %add = add nsw i32 %44, 1, !dbg !13343
  %idxprom37 = sext i32 %add to i64, !dbg !13344
  %45 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries, align 8, !dbg !13344
  %arrayidx38 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %45, i64 %idxprom37, !dbg !13344
  %timestamp39 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx38, i32 0, i32 1, !dbg !13345
  %46 = load i64, i64* %timestamp39, align 8, !dbg !13345
  %47 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13346
  %time_scale40 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %47, i32 0, i32 6, !dbg !13347
  %48 = load i64, i64* %time_scale40, align 8, !dbg !13347
  %mul41 = mul i64 %46, %48, !dbg !13348
  %end_time_ns42 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %cue_desc, i32 0, i32 1, !dbg !13349
  store i64 %mul41, i64* %end_time_ns42, align 8, !dbg !13350
  %49 = load i32, i32* %i, align 4, !dbg !13351
  %add43 = add nsw i32 %49, 1, !dbg !13352
  %idxprom44 = sext i32 %add43 to i64, !dbg !13353
  %50 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %index_entries, align 8, !dbg !13353
  %arrayidx45 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %50, i64 %idxprom44, !dbg !13353
  %pos46 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx45, i32 0, i32 0, !dbg !13354
  %51 = load i64, i64* %pos46, align 8, !dbg !13354
  %52 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13355
  %segment_start47 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %52, i32 0, i32 17, !dbg !13356
  %53 = load i64, i64* %segment_start47, align 8, !dbg !13356
  %sub48 = sub nsw i64 %51, %53, !dbg !13357
  %end_offset49 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %cue_desc, i32 0, i32 3, !dbg !13358
  store i64 %sub48, i64* %end_offset49, align 8, !dbg !13359
  br label %if.end59, !dbg !13360

if.else:                                          ; preds = %for.end
  %54 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13361
  %duration50 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %54, i32 0, i32 7, !dbg !13363
  %55 = load double, double* %duration50, align 8, !dbg !13363
  %56 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13364
  %time_scale51 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %56, i32 0, i32 6, !dbg !13365
  %57 = load i64, i64* %time_scale51, align 8, !dbg !13365
  %conv52 = uitofp i64 %57 to double, !dbg !13364
  %mul53 = fmul double %55, %conv52, !dbg !13366
  %conv54 = fptosi double %mul53 to i64, !dbg !13361
  %end_time_ns55 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %cue_desc, i32 0, i32 1, !dbg !13367
  store i64 %conv54, i64* %end_time_ns55, align 8, !dbg !13368
  %58 = load i64, i64* %cues_start.addr, align 8, !dbg !13369
  %59 = load %struct.MatroskaDemuxContext*, %struct.MatroskaDemuxContext** %matroska, align 8, !dbg !13370
  %segment_start56 = getelementptr inbounds %struct.MatroskaDemuxContext, %struct.MatroskaDemuxContext* %59, i32 0, i32 17, !dbg !13371
  %60 = load i64, i64* %segment_start56, align 8, !dbg !13371
  %sub57 = sub nsw i64 %58, %60, !dbg !13372
  %end_offset58 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %cue_desc, i32 0, i32 3, !dbg !13373
  store i64 %sub57, i64* %end_offset58, align 8, !dbg !13374
  br label %if.end59

if.end59:                                         ; preds = %if.else, %if.then36
  %61 = bitcast %struct.CueDesc* %agg.result to i8*, !dbg !13375
  %62 = bitcast %struct.CueDesc* %cue_desc to i8*, !dbg !13375
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 32, i32 8, i1 false), !dbg !13375
  br label %return, !dbg !13376

return:                                           ; preds = %if.end59, %if.then
  ret void, !dbg !13377
}

; Function Attrs: nounwind uwtable
define internal i32 @buffer_size_after_time_downloaded(i64 %time_ns, double %search_sec, i64 %bps, double %min_buffer, double* %buffer, double* %sec_to_download, %struct.AVFormatContext* %s, i64 %cues_start) #0 !dbg !13378 {
entry:
  %retval = alloca i32, align 4
  %time_ns.addr = alloca i64, align 8
  %search_sec.addr = alloca double, align 8
  %bps.addr = alloca i64, align 8
  %min_buffer.addr = alloca double, align 8
  %buffer.addr = alloca double*, align 8
  %sec_to_download.addr = alloca double*, align 8
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %cues_start.addr = alloca i64, align 8
  %nano_seconds_per_second = alloca double, align 8
  %time_sec = alloca double, align 8
  %rv = alloca i32, align 4
  %time_to_search_ns = alloca i64, align 8
  %end_time_ns = alloca i64, align 8
  %sec_downloaded = alloca double, align 8
  %desc_curr = alloca %struct.CueDesc, align 8
  %cue_nano = alloca i64, align 8
  %percent = alloca double, align 8
  %cueBytes = alloca double, align 8
  %timeToDownload = alloca double, align 8
  %desc_end_time_sec = alloca double, align 8
  %percent_to_sub = alloca double, align 8
  %tmp = alloca %struct.CueDesc, align 8
  %desc_bytes = alloca i64, align 8
  %desc_ns = alloca i64, align 8
  %desc_sec = alloca double, align 8
  %bits = alloca double, align 8
  %time_to_download = alloca double, align 8
  %desc_end_time_sec72 = alloca double, align 8
  %percent_to_sub77 = alloca double, align 8
  %tmp94 = alloca %struct.CueDesc, align 8
  store i64 %time_ns, i64* %time_ns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %time_ns.addr, metadata !13381, metadata !2574), !dbg !13382
  store double %search_sec, double* %search_sec.addr, align 8
  call void @llvm.dbg.declare(metadata double* %search_sec.addr, metadata !13383, metadata !2574), !dbg !13384
  store i64 %bps, i64* %bps.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bps.addr, metadata !13385, metadata !2574), !dbg !13386
  store double %min_buffer, double* %min_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata double* %min_buffer.addr, metadata !13387, metadata !2574), !dbg !13388
  store double* %buffer, double** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata double** %buffer.addr, metadata !13389, metadata !2574), !dbg !13390
  store double* %sec_to_download, double** %sec_to_download.addr, align 8
  call void @llvm.dbg.declare(metadata double** %sec_to_download.addr, metadata !13391, metadata !2574), !dbg !13392
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !13393, metadata !2574), !dbg !13394
  store i64 %cues_start, i64* %cues_start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cues_start.addr, metadata !13395, metadata !2574), !dbg !13396
  call void @llvm.dbg.declare(metadata double* %nano_seconds_per_second, metadata !13397, metadata !2574), !dbg !13398
  store double 1.000000e+09, double* %nano_seconds_per_second, align 8, !dbg !13398
  call void @llvm.dbg.declare(metadata double* %time_sec, metadata !13399, metadata !2574), !dbg !13400
  %0 = load i64, i64* %time_ns.addr, align 8, !dbg !13401
  %conv = sitofp i64 %0 to double, !dbg !13401
  %1 = load double, double* %nano_seconds_per_second, align 8, !dbg !13402
  %div = fdiv double %conv, %1, !dbg !13403
  store double %div, double* %time_sec, align 8, !dbg !13400
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !13404, metadata !2574), !dbg !13405
  store i32 0, i32* %rv, align 4, !dbg !13405
  call void @llvm.dbg.declare(metadata i64* %time_to_search_ns, metadata !13406, metadata !2574), !dbg !13407
  %2 = load double, double* %search_sec.addr, align 8, !dbg !13408
  %3 = load double, double* %nano_seconds_per_second, align 8, !dbg !13409
  %mul = fmul double %2, %3, !dbg !13410
  %conv1 = fptosi double %mul to i64, !dbg !13411
  store i64 %conv1, i64* %time_to_search_ns, align 8, !dbg !13407
  call void @llvm.dbg.declare(metadata i64* %end_time_ns, metadata !13412, metadata !2574), !dbg !13413
  %4 = load i64, i64* %time_ns.addr, align 8, !dbg !13414
  %5 = load i64, i64* %time_to_search_ns, align 8, !dbg !13415
  %add = add nsw i64 %4, %5, !dbg !13416
  store i64 %add, i64* %end_time_ns, align 8, !dbg !13413
  call void @llvm.dbg.declare(metadata double* %sec_downloaded, metadata !13417, metadata !2574), !dbg !13418
  store double 0.000000e+00, double* %sec_downloaded, align 8, !dbg !13418
  call void @llvm.dbg.declare(metadata %struct.CueDesc* %desc_curr, metadata !13419, metadata !2574), !dbg !13420
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13421
  %7 = load i64, i64* %time_ns.addr, align 8, !dbg !13422
  %8 = load i64, i64* %cues_start.addr, align 8, !dbg !13423
  call void @get_cue_desc(%struct.CueDesc* sret %desc_curr, %struct.AVFormatContext* %6, i64 %7, i64 %8), !dbg !13424
  %start_time_ns = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 0, !dbg !13425
  %9 = load i64, i64* %start_time_ns, align 8, !dbg !13425
  %cmp = icmp eq i64 %9, -1, !dbg !13427
  br i1 %cmp, label %if.then, label %if.end, !dbg !13428

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !13429
  br label %return, !dbg !13429

if.end:                                           ; preds = %entry
  %10 = load double*, double** %sec_to_download.addr, align 8, !dbg !13430
  store double 0.000000e+00, double* %10, align 8, !dbg !13431
  %11 = load i64, i64* %time_ns.addr, align 8, !dbg !13432
  %start_time_ns3 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 0, !dbg !13434
  %12 = load i64, i64* %start_time_ns3, align 8, !dbg !13434
  %cmp4 = icmp sgt i64 %11, %12, !dbg !13435
  br i1 %cmp4, label %if.then6, label %if.end43, !dbg !13436

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %cue_nano, metadata !13437, metadata !2574), !dbg !13439
  %end_time_ns7 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 1, !dbg !13440
  %13 = load i64, i64* %end_time_ns7, align 8, !dbg !13440
  %14 = load i64, i64* %time_ns.addr, align 8, !dbg !13441
  %sub = sub nsw i64 %13, %14, !dbg !13442
  store i64 %sub, i64* %cue_nano, align 8, !dbg !13439
  call void @llvm.dbg.declare(metadata double* %percent, metadata !13443, metadata !2574), !dbg !13444
  %15 = load i64, i64* %cue_nano, align 8, !dbg !13445
  %conv8 = sitofp i64 %15 to double, !dbg !13446
  %end_time_ns9 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 1, !dbg !13447
  %16 = load i64, i64* %end_time_ns9, align 8, !dbg !13447
  %start_time_ns10 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 0, !dbg !13448
  %17 = load i64, i64* %start_time_ns10, align 8, !dbg !13448
  %sub11 = sub nsw i64 %16, %17, !dbg !13449
  %conv12 = sitofp i64 %sub11 to double, !dbg !13450
  %div13 = fdiv double %conv8, %conv12, !dbg !13451
  store double %div13, double* %percent, align 8, !dbg !13444
  call void @llvm.dbg.declare(metadata double* %cueBytes, metadata !13452, metadata !2574), !dbg !13453
  %end_offset = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 3, !dbg !13454
  %18 = load i64, i64* %end_offset, align 8, !dbg !13454
  %start_offset = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 2, !dbg !13455
  %19 = load i64, i64* %start_offset, align 8, !dbg !13455
  %sub14 = sub nsw i64 %18, %19, !dbg !13456
  %conv15 = sitofp i64 %sub14 to double, !dbg !13457
  %20 = load double, double* %percent, align 8, !dbg !13458
  %mul16 = fmul double %conv15, %20, !dbg !13459
  store double %mul16, double* %cueBytes, align 8, !dbg !13453
  call void @llvm.dbg.declare(metadata double* %timeToDownload, metadata !13460, metadata !2574), !dbg !13461
  %21 = load double, double* %cueBytes, align 8, !dbg !13462
  %mul17 = fmul double %21, 8.000000e+00, !dbg !13463
  %22 = load i64, i64* %bps.addr, align 8, !dbg !13464
  %conv18 = sitofp i64 %22 to double, !dbg !13464
  %div19 = fdiv double %mul17, %conv18, !dbg !13465
  store double %div19, double* %timeToDownload, align 8, !dbg !13461
  %23 = load i64, i64* %cue_nano, align 8, !dbg !13466
  %conv20 = sitofp i64 %23 to double, !dbg !13466
  %24 = load double, double* %nano_seconds_per_second, align 8, !dbg !13467
  %div21 = fdiv double %conv20, %24, !dbg !13468
  %25 = load double, double* %timeToDownload, align 8, !dbg !13469
  %sub22 = fsub double %div21, %25, !dbg !13470
  %26 = load double, double* %sec_downloaded, align 8, !dbg !13471
  %add23 = fadd double %26, %sub22, !dbg !13471
  store double %add23, double* %sec_downloaded, align 8, !dbg !13471
  %27 = load double, double* %timeToDownload, align 8, !dbg !13472
  %28 = load double*, double** %sec_to_download.addr, align 8, !dbg !13473
  %29 = load double, double* %28, align 8, !dbg !13474
  %add24 = fadd double %29, %27, !dbg !13474
  store double %add24, double* %28, align 8, !dbg !13474
  %end_time_ns25 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 1, !dbg !13475
  %30 = load i64, i64* %end_time_ns25, align 8, !dbg !13475
  %31 = load i64, i64* %end_time_ns, align 8, !dbg !13477
  %cmp26 = icmp sge i64 %30, %31, !dbg !13478
  br i1 %cmp26, label %if.then28, label %if.end36, !dbg !13479

if.then28:                                        ; preds = %if.then6
  call void @llvm.dbg.declare(metadata double* %desc_end_time_sec, metadata !13480, metadata !2574), !dbg !13482
  %end_time_ns29 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 1, !dbg !13483
  %32 = load i64, i64* %end_time_ns29, align 8, !dbg !13483
  %conv30 = sitofp i64 %32 to double, !dbg !13484
  %33 = load double, double* %nano_seconds_per_second, align 8, !dbg !13485
  %div31 = fdiv double %conv30, %33, !dbg !13486
  store double %div31, double* %desc_end_time_sec, align 8, !dbg !13482
  call void @llvm.dbg.declare(metadata double* %percent_to_sub, metadata !13487, metadata !2574), !dbg !13488
  %34 = load double, double* %search_sec.addr, align 8, !dbg !13489
  %35 = load double, double* %desc_end_time_sec, align 8, !dbg !13490
  %36 = load double, double* %time_sec, align 8, !dbg !13491
  %sub32 = fsub double %35, %36, !dbg !13492
  %div33 = fdiv double %34, %sub32, !dbg !13493
  store double %div33, double* %percent_to_sub, align 8, !dbg !13488
  %37 = load double, double* %percent_to_sub, align 8, !dbg !13494
  %38 = load double, double* %sec_downloaded, align 8, !dbg !13495
  %mul34 = fmul double %37, %38, !dbg !13496
  store double %mul34, double* %sec_downloaded, align 8, !dbg !13497
  %39 = load double, double* %percent_to_sub, align 8, !dbg !13498
  %40 = load double*, double** %sec_to_download.addr, align 8, !dbg !13499
  %41 = load double, double* %40, align 8, !dbg !13500
  %mul35 = fmul double %39, %41, !dbg !13501
  %42 = load double*, double** %sec_to_download.addr, align 8, !dbg !13502
  store double %mul35, double* %42, align 8, !dbg !13503
  br label %if.end36, !dbg !13504

if.end36:                                         ; preds = %if.then28, %if.then6
  %43 = load double, double* %sec_downloaded, align 8, !dbg !13505
  %44 = load double*, double** %buffer.addr, align 8, !dbg !13507
  %45 = load double, double* %44, align 8, !dbg !13508
  %add37 = fadd double %43, %45, !dbg !13509
  %46 = load double, double* %min_buffer.addr, align 8, !dbg !13510
  %cmp38 = fcmp ole double %add37, %46, !dbg !13511
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !13512

if.then40:                                        ; preds = %if.end36
  store i32 1, i32* %retval, align 4, !dbg !13513
  br label %return, !dbg !13513

if.end41:                                         ; preds = %if.end36
  %47 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13515
  %end_time_ns42 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 1, !dbg !13516
  %48 = load i64, i64* %end_time_ns42, align 8, !dbg !13516
  %49 = load i64, i64* %cues_start.addr, align 8, !dbg !13517
  call void @get_cue_desc(%struct.CueDesc* sret %tmp, %struct.AVFormatContext* %47, i64 %48, i64 %49), !dbg !13518
  %50 = bitcast %struct.CueDesc* %desc_curr to i8*, !dbg !13518
  %51 = bitcast %struct.CueDesc* %tmp to i8*, !dbg !13518
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 32, i32 8, i1 false), !dbg !13519
  br label %if.end43, !dbg !13521

if.end43:                                         ; preds = %if.end41, %if.end
  br label %while.cond, !dbg !13522

while.cond:                                       ; preds = %if.end92, %if.end43
  %start_time_ns44 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 0, !dbg !13523
  %52 = load i64, i64* %start_time_ns44, align 8, !dbg !13523
  %cmp45 = icmp ne i64 %52, -1, !dbg !13525
  br i1 %cmp45, label %while.body, label %while.end, !dbg !13526

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %desc_bytes, metadata !13527, metadata !2574), !dbg !13529
  %end_offset48 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 3, !dbg !13530
  %53 = load i64, i64* %end_offset48, align 8, !dbg !13530
  %start_offset49 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 2, !dbg !13531
  %54 = load i64, i64* %start_offset49, align 8, !dbg !13531
  %sub50 = sub nsw i64 %53, %54, !dbg !13532
  store i64 %sub50, i64* %desc_bytes, align 8, !dbg !13529
  call void @llvm.dbg.declare(metadata i64* %desc_ns, metadata !13533, metadata !2574), !dbg !13534
  %end_time_ns52 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 1, !dbg !13535
  %55 = load i64, i64* %end_time_ns52, align 8, !dbg !13535
  %start_time_ns53 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 0, !dbg !13536
  %56 = load i64, i64* %start_time_ns53, align 8, !dbg !13536
  %sub54 = sub nsw i64 %55, %56, !dbg !13537
  store i64 %sub54, i64* %desc_ns, align 8, !dbg !13534
  call void @llvm.dbg.declare(metadata double* %desc_sec, metadata !13538, metadata !2574), !dbg !13539
  %57 = load i64, i64* %desc_ns, align 8, !dbg !13540
  %conv56 = sitofp i64 %57 to double, !dbg !13540
  %58 = load double, double* %nano_seconds_per_second, align 8, !dbg !13541
  %div57 = fdiv double %conv56, %58, !dbg !13542
  store double %div57, double* %desc_sec, align 8, !dbg !13539
  call void @llvm.dbg.declare(metadata double* %bits, metadata !13543, metadata !2574), !dbg !13544
  %59 = load i64, i64* %desc_bytes, align 8, !dbg !13545
  %conv59 = sitofp i64 %59 to double, !dbg !13545
  %mul60 = fmul double %conv59, 8.000000e+00, !dbg !13546
  store double %mul60, double* %bits, align 8, !dbg !13544
  call void @llvm.dbg.declare(metadata double* %time_to_download, metadata !13547, metadata !2574), !dbg !13548
  %60 = load double, double* %bits, align 8, !dbg !13549
  %61 = load i64, i64* %bps.addr, align 8, !dbg !13550
  %conv62 = sitofp i64 %61 to double, !dbg !13550
  %div63 = fdiv double %60, %conv62, !dbg !13551
  store double %div63, double* %time_to_download, align 8, !dbg !13548
  %62 = load double, double* %desc_sec, align 8, !dbg !13552
  %63 = load double, double* %time_to_download, align 8, !dbg !13553
  %sub64 = fsub double %62, %63, !dbg !13554
  %64 = load double, double* %sec_downloaded, align 8, !dbg !13555
  %add65 = fadd double %64, %sub64, !dbg !13555
  store double %add65, double* %sec_downloaded, align 8, !dbg !13555
  %65 = load double, double* %time_to_download, align 8, !dbg !13556
  %66 = load double*, double** %sec_to_download.addr, align 8, !dbg !13557
  %67 = load double, double* %66, align 8, !dbg !13558
  %add66 = fadd double %67, %65, !dbg !13558
  store double %add66, double* %66, align 8, !dbg !13558
  %end_time_ns67 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 1, !dbg !13559
  %68 = load i64, i64* %end_time_ns67, align 8, !dbg !13559
  %69 = load i64, i64* %end_time_ns, align 8, !dbg !13561
  %cmp68 = icmp sge i64 %68, %69, !dbg !13562
  br i1 %cmp68, label %if.then70, label %if.end87, !dbg !13563

if.then70:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata double* %desc_end_time_sec72, metadata !13564, metadata !2574), !dbg !13566
  %end_time_ns73 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 1, !dbg !13567
  %70 = load i64, i64* %end_time_ns73, align 8, !dbg !13567
  %conv74 = sitofp i64 %70 to double, !dbg !13568
  %71 = load double, double* %nano_seconds_per_second, align 8, !dbg !13569
  %div75 = fdiv double %conv74, %71, !dbg !13570
  store double %div75, double* %desc_end_time_sec72, align 8, !dbg !13566
  call void @llvm.dbg.declare(metadata double* %percent_to_sub77, metadata !13571, metadata !2574), !dbg !13572
  %72 = load double, double* %search_sec.addr, align 8, !dbg !13573
  %73 = load double, double* %desc_end_time_sec72, align 8, !dbg !13574
  %74 = load double, double* %time_sec, align 8, !dbg !13575
  %sub78 = fsub double %73, %74, !dbg !13576
  %div79 = fdiv double %72, %sub78, !dbg !13577
  store double %div79, double* %percent_to_sub77, align 8, !dbg !13572
  %75 = load double, double* %percent_to_sub77, align 8, !dbg !13578
  %76 = load double, double* %sec_downloaded, align 8, !dbg !13579
  %mul80 = fmul double %75, %76, !dbg !13580
  store double %mul80, double* %sec_downloaded, align 8, !dbg !13581
  %77 = load double, double* %percent_to_sub77, align 8, !dbg !13582
  %78 = load double*, double** %sec_to_download.addr, align 8, !dbg !13583
  %79 = load double, double* %78, align 8, !dbg !13584
  %mul81 = fmul double %77, %79, !dbg !13585
  %80 = load double*, double** %sec_to_download.addr, align 8, !dbg !13586
  store double %mul81, double* %80, align 8, !dbg !13587
  %81 = load double, double* %sec_downloaded, align 8, !dbg !13588
  %82 = load double*, double** %buffer.addr, align 8, !dbg !13590
  %83 = load double, double* %82, align 8, !dbg !13591
  %add82 = fadd double %81, %83, !dbg !13592
  %84 = load double, double* %min_buffer.addr, align 8, !dbg !13593
  %cmp83 = fcmp ole double %add82, %84, !dbg !13594
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !13595

if.then85:                                        ; preds = %if.then70
  store i32 1, i32* %rv, align 4, !dbg !13596
  br label %if.end86, !dbg !13597

if.end86:                                         ; preds = %if.then85, %if.then70
  br label %while.end, !dbg !13598

if.end87:                                         ; preds = %while.body
  %85 = load double, double* %sec_downloaded, align 8, !dbg !13599
  %86 = load double*, double** %buffer.addr, align 8, !dbg !13601
  %87 = load double, double* %86, align 8, !dbg !13602
  %add88 = fadd double %85, %87, !dbg !13603
  %88 = load double, double* %min_buffer.addr, align 8, !dbg !13604
  %cmp89 = fcmp ole double %add88, %88, !dbg !13605
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !13606

if.then91:                                        ; preds = %if.end87
  store i32 1, i32* %rv, align 4, !dbg !13607
  br label %while.end, !dbg !13609

if.end92:                                         ; preds = %if.end87
  %89 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !13610
  %end_time_ns93 = getelementptr inbounds %struct.CueDesc, %struct.CueDesc* %desc_curr, i32 0, i32 1, !dbg !13611
  %90 = load i64, i64* %end_time_ns93, align 8, !dbg !13611
  %91 = load i64, i64* %cues_start.addr, align 8, !dbg !13612
  call void @get_cue_desc(%struct.CueDesc* sret %tmp94, %struct.AVFormatContext* %89, i64 %90, i64 %91), !dbg !13613
  %92 = bitcast %struct.CueDesc* %desc_curr to i8*, !dbg !13613
  %93 = bitcast %struct.CueDesc* %tmp94 to i8*, !dbg !13613
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 32, i32 8, i1 false), !dbg !13614
  br label %while.cond, !dbg !13616, !llvm.loop !13618

while.end:                                        ; preds = %if.then91, %if.end86, %while.cond
  %94 = load double*, double** %buffer.addr, align 8, !dbg !13619
  %95 = load double, double* %94, align 8, !dbg !13620
  %96 = load double, double* %sec_downloaded, align 8, !dbg !13621
  %add95 = fadd double %95, %96, !dbg !13622
  %97 = load double*, double** %buffer.addr, align 8, !dbg !13623
  store double %add95, double* %97, align 8, !dbg !13624
  %98 = load i32, i32* %rv, align 4, !dbg !13625
  store i32 %98, i32* %retval, align 4, !dbg !13626
  br label %return, !dbg !13626

return:                                           ; preds = %while.end, %if.then40, %if.then
  %99 = load i32, i32* %retval, align 4, !dbg !13627
  ret i32 %99, !dbg !13627
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2565, !2566}
!llvm.ident = !{!2567}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1029, globals: !1115)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavformat--matroskadec.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !463, !485, !506, !536, !547, !571, !578, !596, !620, !639, !649, !658, !667, !866, !883, !889, !897, !909, !918, !927, !933, !938, !953, !964, !970, !975, !993, !1000, !1011, !1017, !1023}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !4, line: 215, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462}
!6 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!7 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!8 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!9 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!10 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!11 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!12 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!13 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!14 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!15 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!16 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!17 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!19 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!20 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!21 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!22 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!23 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!24 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!25 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!26 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!27 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!28 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!29 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!30 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!31 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!32 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!33 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!34 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!35 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!36 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!37 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!38 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!39 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!40 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!41 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!43 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!44 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!45 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!46 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!47 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!48 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!49 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!50 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!53 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!54 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!55 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!56 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!57 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!58 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!59 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!60 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!61 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!62 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!63 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!64 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!65 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!66 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!67 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!68 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!69 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!70 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!71 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!72 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!73 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!74 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!75 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!76 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!78 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!79 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!80 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!81 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!82 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!83 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!84 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!86 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!87 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!88 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!89 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!90 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!91 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!93 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!94 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!95 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!97 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!98 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!99 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!100 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!101 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!102 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!103 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!104 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!105 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!106 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!107 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!108 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!109 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!110 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!112 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!113 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!114 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!115 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!116 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!117 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!118 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!119 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!120 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!121 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!122 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!123 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!125 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!126 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!127 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!128 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!129 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!130 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!131 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!133 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!134 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!136 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!137 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!139 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!141 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!142 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!143 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!144 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!147 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!148 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!149 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!150 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!151 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!152 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!153 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!154 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!155 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!156 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!157 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!158 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!159 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!160 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!161 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!163 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!164 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!165 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!166 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!167 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!168 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!169 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!170 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!171 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!173 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!174 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!175 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!176 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!177 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!178 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!179 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!180 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!181 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!182 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!183 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!184 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!185 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!186 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!187 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!189 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!190 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!191 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!192 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!193 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!194 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!195 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!197 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!198 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!199 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!200 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!201 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!202 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!203 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!204 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!205 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!206 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!207 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!209 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!210 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!211 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!212 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!213 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!215 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!216 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!217 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!218 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!219 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!220 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!221 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!222 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!223 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!224 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!225 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!226 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!227 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!228 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!229 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!230 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!231 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!232 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!233 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!235 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!237 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!238 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!239 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!240 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!241 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!242 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!243 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!244 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!245 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!247 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!248 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!249 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!250 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!251 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!269 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!279 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!280 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!281 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!282 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!283 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!284 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!285 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!286 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!287 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!288 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!320 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!321 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!322 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!323 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!325 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!326 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!327 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!328 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!329 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!330 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!331 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!332 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!333 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!334 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!335 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!336 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!337 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!338 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!339 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!341 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!342 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!343 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!344 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!345 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!348 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!349 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!350 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!351 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!352 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!353 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!354 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!355 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!356 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!357 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!358 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!359 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!362 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!363 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!364 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!365 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!366 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!367 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!370 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!371 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!372 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!373 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!374 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!376 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!377 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!378 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!379 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!381 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!382 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!383 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!384 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!385 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!386 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!387 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!389 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!390 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!391 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!392 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!393 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!394 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!395 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!396 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!397 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!398 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!399 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!400 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!403 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!404 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!405 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!407 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!408 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!409 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!410 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!411 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!412 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!413 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!416 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!417 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!418 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!419 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!420 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!422 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!424 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!425 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!426 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!427 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!428 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!429 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!430 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!431 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!432 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!434 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!435 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!436 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!437 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!438 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!439 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!441 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!442 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!444 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!446 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!447 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!448 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!449 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!450 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!451 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!452 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!453 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!454 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!455 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!456 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!457 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!458 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!459 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!462 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!463 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !464, line: 221, size: 32, align: 32, elements: !465)
!464 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!465 = !{!466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484}
!466 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!467 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!468 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!469 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!470 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!471 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!472 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!473 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!474 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!475 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!476 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!477 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!478 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!479 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!480 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!481 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!482 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!483 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!484 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!485 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !486, line: 29, size: 32, align: 32, elements: !487)
!486 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!487 = !{!488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505}
!488 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!489 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!490 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!491 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!492 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!493 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!494 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!495 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!496 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!497 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!498 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!499 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!500 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!501 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!502 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!503 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!504 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!505 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!506 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !4, line: 1175, size: 32, align: 32, elements: !507)
!507 = !{!508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535}
!508 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!509 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!510 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!511 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!512 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!513 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!514 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!515 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!516 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!517 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!518 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!519 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!520 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!521 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!522 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!523 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!524 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!525 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!526 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!527 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!528 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!529 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!530 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!531 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!532 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!533 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!534 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!535 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!536 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !537, line: 272, size: 32, align: 32, elements: !538)
!537 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!538 = !{!539, !540, !541, !542, !543, !544, !545, !546}
!539 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!540 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!541 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!542 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!543 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!544 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!545 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!546 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!547 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !548, line: 48, size: 32, align: 32, elements: !549)
!548 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!549 = !{!550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570}
!550 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!551 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!552 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!553 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!554 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!555 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!556 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!557 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!558 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!559 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!560 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!561 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!562 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!563 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!564 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!565 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!566 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!567 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!568 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!569 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!570 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!571 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !572, line: 516, size: 32, align: 32, elements: !573)
!572 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!573 = !{!574, !575, !576, !577}
!574 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!575 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!576 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!577 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!578 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !572, line: 440, size: 32, align: 32, elements: !579)
!579 = !{!580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595}
!580 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!581 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!582 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!583 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!584 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!585 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!586 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!587 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!588 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!589 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!590 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!591 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!592 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!593 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!594 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!595 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!596 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !572, line: 464, size: 32, align: 32, elements: !597)
!597 = !{!598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619}
!598 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!599 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!600 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!601 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!602 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!603 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!604 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!605 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!606 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!607 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!608 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!609 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!610 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!611 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!612 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!613 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!614 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!615 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!616 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!617 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!618 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!619 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!620 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !572, line: 493, size: 32, align: 32, elements: !621)
!621 = !{!622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638}
!622 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!623 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!624 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!625 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!626 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!627 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!628 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!629 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!630 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!631 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!632 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!633 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!634 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!635 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!636 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!637 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!638 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!639 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !572, line: 538, size: 32, align: 32, elements: !640)
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648}
!641 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!642 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!643 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!644 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!645 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!646 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!647 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!648 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!649 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVIODataMarkerType", file: !650, line: 111, size: 32, align: 32, elements: !651)
!650 = !DIFile(filename: "libavformat/avio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!651 = !{!652, !653, !654, !655, !656, !657}
!652 = !DIEnumerator(name: "AVIO_DATA_MARKER_HEADER", value: 0)
!653 = !DIEnumerator(name: "AVIO_DATA_MARKER_SYNC_POINT", value: 1)
!654 = !DIEnumerator(name: "AVIO_DATA_MARKER_BOUNDARY_POINT", value: 2)
!655 = !DIEnumerator(name: "AVIO_DATA_MARKER_UNKNOWN", value: 3)
!656 = !DIEnumerator(name: "AVIO_DATA_MARKER_TRAILER", value: 4)
!657 = !DIEnumerator(name: "AVIO_DATA_MARKER_FLUSH_POINT", value: 5)
!658 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !537, line: 199, size: 32, align: 32, elements: !659)
!659 = !{!660, !661, !662, !663, !664, !665, !666}
!660 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!661 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!662 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!663 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!664 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!665 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!666 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!667 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !572, line: 64, size: 32, align: 32, elements: !668)
!668 = !{!669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865}
!669 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!672 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!673 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!674 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!675 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!676 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!677 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!679 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!680 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!681 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!682 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!683 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!684 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!685 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!686 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!687 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!688 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!689 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!690 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!691 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!692 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!694 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!695 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!696 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!697 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!698 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!701 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!702 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!703 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!704 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!705 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!706 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!707 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!708 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!709 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!710 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!711 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!712 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!713 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!714 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!715 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!716 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!717 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!718 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!719 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!720 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!721 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!722 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!723 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!724 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!725 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!726 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!727 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!728 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!729 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!730 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!731 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!732 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!733 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!734 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!735 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!736 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!737 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!738 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!739 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!740 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!741 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!742 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!743 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!744 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!745 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!746 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!747 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!748 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!749 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!750 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!751 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!752 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!753 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!754 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!755 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!756 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!757 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!758 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!759 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!760 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!761 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!762 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!763 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!764 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!765 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!766 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!767 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!768 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!769 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!770 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!771 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!772 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!773 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!774 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!775 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!776 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!777 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!778 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!779 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!780 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!781 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!782 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!783 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!784 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!785 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!786 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!787 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!788 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!789 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!790 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!791 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!792 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!793 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!794 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!795 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!796 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!797 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!798 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!799 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!800 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!801 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!802 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!803 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!804 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!805 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!806 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!807 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!808 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!809 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!810 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!811 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!812 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!813 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!814 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!815 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!816 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!817 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!818 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!819 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!820 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!821 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!822 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!823 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!824 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!825 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!826 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!827 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!828 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!829 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!830 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!831 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!832 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!833 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!834 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!835 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!836 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!837 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!838 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!839 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!840 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!841 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!842 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!843 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!844 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!845 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!846 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!847 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!848 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!849 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!850 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!851 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!852 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!853 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!854 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!855 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!856 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!857 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!858 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!859 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!860 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!861 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!862 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!863 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!864 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!865 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !867, line: 58, size: 32, align: 32, elements: !868)
!867 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!868 = !{!869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882}
!869 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!870 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!871 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!872 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!873 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!874 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!875 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!876 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!877 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!878 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!879 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!880 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!881 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!882 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!883 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !4, line: 3865, size: 32, align: 32, elements: !884)
!884 = !{!885, !886, !887, !888}
!885 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!886 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!887 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!888 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!889 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !4, line: 1534, size: 32, align: 32, elements: !890)
!890 = !{!891, !892, !893, !894, !895, !896}
!891 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!892 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!893 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!894 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!895 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!896 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !4, line: 810, size: 32, align: 32, elements: !898)
!898 = !{!899, !900, !901, !902, !903, !904, !905, !906, !907, !908}
!899 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!900 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!901 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!902 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!903 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!904 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!905 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!906 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!907 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!908 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !4, line: 798, size: 32, align: 32, elements: !910)
!910 = !{!911, !912, !913, !914, !915, !916, !917}
!911 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!912 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!913 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!914 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!915 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!916 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!917 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStreamParseType", file: !919, line: 782, size: 32, align: 32, elements: !920)
!919 = !DIFile(filename: "libavformat/avformat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!920 = !{!921, !922, !923, !924, !925, !926}
!921 = !DIEnumerator(name: "AVSTREAM_PARSE_NONE", value: 0)
!922 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL", value: 1)
!923 = !DIEnumerator(name: "AVSTREAM_PARSE_HEADERS", value: 2)
!924 = !DIEnumerator(name: "AVSTREAM_PARSE_TIMESTAMPS", value: 3)
!925 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_ONCE", value: 4)
!926 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_RAW", value: 5)
!927 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureStructure", file: !4, line: 5085, size: 32, align: 32, elements: !928)
!928 = !{!929, !930, !931, !932}
!929 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_UNKNOWN", value: 0)
!930 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_TOP_FIELD", value: 1)
!931 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_BOTTOM_FIELD", value: 2)
!932 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_FRAME", value: 3)
!933 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDurationEstimationMethod", file: !919, line: 1315, size: 32, align: 32, elements: !934)
!934 = !{!935, !936, !937}
!935 = !DIEnumerator(name: "AVFMT_DURATION_FROM_PTS", value: 0)
!936 = !DIEnumerator(name: "AVFMT_DURATION_FROM_STREAM", value: 1)
!937 = !DIEnumerator(name: "AVFMT_DURATION_FROM_BITRATE", value: 2)
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !939, line: 71, size: 32, align: 32, elements: !940)
!939 = !DIFile(filename: "libavformat/matroskadec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!940 = !{!941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952}
!941 = !DIEnumerator(name: "EBML_NONE", value: 0)
!942 = !DIEnumerator(name: "EBML_UINT", value: 1)
!943 = !DIEnumerator(name: "EBML_FLOAT", value: 2)
!944 = !DIEnumerator(name: "EBML_STR", value: 3)
!945 = !DIEnumerator(name: "EBML_UTF8", value: 4)
!946 = !DIEnumerator(name: "EBML_BIN", value: 5)
!947 = !DIEnumerator(name: "EBML_NEST", value: 6)
!948 = !DIEnumerator(name: "EBML_LEVEL1", value: 7)
!949 = !DIEnumerator(name: "EBML_PASS", value: 8)
!950 = !DIEnumerator(name: "EBML_STOP", value: 9)
!951 = !DIEnumerator(name: "EBML_SINT", value: 10)
!952 = !DIEnumerator(name: "EBML_TYPE_COUNT", value: 11)
!953 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !954, line: 267, size: 32, align: 32, elements: !955)
!954 = !DIFile(filename: "libavformat/matroska.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!955 = !{!956, !957, !958, !959, !960, !961, !962, !963}
!956 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_NONE", value: 0)
!957 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_VIDEO", value: 1)
!958 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_AUDIO", value: 2)
!959 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_COMPLEX", value: 3)
!960 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_LOGO", value: 16)
!961 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_SUBTITLE", value: 17)
!962 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_CONTROL", value: 32)
!963 = !DIEnumerator(name: "MATROSKA_TRACK_TYPE_METADATA", value: 33)
!964 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !954, line: 278, size: 32, align: 32, elements: !965)
!965 = !{!966, !967, !968, !969}
!966 = !DIEnumerator(name: "MATROSKA_TRACK_ENCODING_COMP_ZLIB", value: 0)
!967 = !DIEnumerator(name: "MATROSKA_TRACK_ENCODING_COMP_BZLIB", value: 1)
!968 = !DIEnumerator(name: "MATROSKA_TRACK_ENCODING_COMP_LZO", value: 2)
!969 = !DIEnumerator(name: "MATROSKA_TRACK_ENCODING_COMP_HEADERSTRIP", value: 3)
!970 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !954, line: 285, size: 32, align: 32, elements: !971)
!971 = !{!972, !973, !974}
!972 = !DIEnumerator(name: "MATROSKA_VIDEO_INTERLACE_FLAG_UNDETERMINED", value: 0)
!973 = !DIEnumerator(name: "MATROSKA_VIDEO_INTERLACE_FLAG_INTERLACED", value: 1)
!974 = !DIEnumerator(name: "MATROSKA_VIDEO_INTERLACE_FLAG_PROGRESSIVE", value: 2)
!975 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !954, line: 300, size: 32, align: 32, elements: !976)
!976 = !{!977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992}
!977 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_MONO", value: 0)
!978 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_LEFT_RIGHT", value: 1)
!979 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_BOTTOM_TOP", value: 2)
!980 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_TOP_BOTTOM", value: 3)
!981 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_CHECKERBOARD_RL", value: 4)
!982 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_CHECKERBOARD_LR", value: 5)
!983 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_ROW_INTERLEAVED_RL", value: 6)
!984 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_ROW_INTERLEAVED_LR", value: 7)
!985 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_COL_INTERLEAVED_RL", value: 8)
!986 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_COL_INTERLEAVED_LR", value: 9)
!987 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_ANAGLYPH_CYAN_RED", value: 10)
!988 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_RIGHT_LEFT", value: 11)
!989 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_ANAGLYPH_GREEN_MAG", value: 12)
!990 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_BOTH_EYES_BLOCK_LR", value: 13)
!991 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_BOTH_EYES_BLOCK_RL", value: 14)
!992 = !DIEnumerator(name: "MATROSKA_VIDEO_STEREOMODE_TYPE_NB", value: 15)
!993 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !954, line: 319, size: 32, align: 32, elements: !994)
!994 = !{!995, !996, !997, !998, !999}
!995 = !DIEnumerator(name: "MATROSKA_VIDEO_DISPLAYUNIT_PIXELS", value: 0)
!996 = !DIEnumerator(name: "MATROSKA_VIDEO_DISPLAYUNIT_CENTIMETERS", value: 1)
!997 = !DIEnumerator(name: "MATROSKA_VIDEO_DISPLAYUNIT_INCHES", value: 2)
!998 = !DIEnumerator(name: "MATROSKA_VIDEO_DISPLAYUNIT_DAR", value: 3)
!999 = !DIEnumerator(name: "MATROSKA_VIDEO_DISPLAYUNIT_UNKNOWN", value: 4)
!1000 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1001, line: 47, size: 32, align: 32, elements: !1002)
!1001 = !DIFile(filename: "./libavcodec/flac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1002 = !{!1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010}
!1003 = !DIEnumerator(name: "FLAC_METADATA_TYPE_STREAMINFO", value: 0)
!1004 = !DIEnumerator(name: "FLAC_METADATA_TYPE_PADDING", value: 1)
!1005 = !DIEnumerator(name: "FLAC_METADATA_TYPE_APPLICATION", value: 2)
!1006 = !DIEnumerator(name: "FLAC_METADATA_TYPE_SEEKTABLE", value: 3)
!1007 = !DIEnumerator(name: "FLAC_METADATA_TYPE_VORBIS_COMMENT", value: 4)
!1008 = !DIEnumerator(name: "FLAC_METADATA_TYPE_CUESHEET", value: 5)
!1009 = !DIEnumerator(name: "FLAC_METADATA_TYPE_PICTURE", value: 6)
!1010 = !DIEnumerator(name: "FLAC_METADATA_TYPE_INVALID", value: 127)
!1011 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !954, line: 327, size: 32, align: 32, elements: !1012)
!1012 = !{!1013, !1014, !1015, !1016}
!1013 = !DIEnumerator(name: "MATROSKA_COLOUR_CHROMASITINGHORZ_UNDETERMINED", value: 0)
!1014 = !DIEnumerator(name: "MATROSKA_COLOUR_CHROMASITINGHORZ_LEFT", value: 1)
!1015 = !DIEnumerator(name: "MATROSKA_COLOUR_CHROMASITINGHORZ_HALF", value: 2)
!1016 = !DIEnumerator(name: "MATROSKA_COLOUR_CHROMASITINGHORZ_NB", value: 3)
!1017 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !954, line: 334, size: 32, align: 32, elements: !1018)
!1018 = !{!1019, !1020, !1021, !1022}
!1019 = !DIEnumerator(name: "MATROSKA_COLOUR_CHROMASITINGVERT_UNDETERMINED", value: 0)
!1020 = !DIEnumerator(name: "MATROSKA_COLOUR_CHROMASITINGVERT_TOP", value: 1)
!1021 = !DIEnumerator(name: "MATROSKA_COLOUR_CHROMASITINGVERT_HALF", value: 2)
!1022 = !DIEnumerator(name: "MATROSKA_COLOUR_CHROMASITINGVERT_NB", value: 3)
!1023 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSphericalProjection", file: !1024, line: 51, size: 32, align: 32, elements: !1025)
!1024 = !DIFile(filename: "./libavutil/spherical.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1025 = !{!1026, !1027, !1028}
!1026 = !DIEnumerator(name: "AV_SPHERICAL_EQUIRECTANGULAR", value: 0)
!1027 = !DIEnumerator(name: "AV_SPHERICAL_CUBEMAP", value: 1)
!1028 = !DIEnumerator(name: "AV_SPHERICAL_EQUIRECTANGULAR_TILE", value: 2)
!1029 = !{!1030, !1039, !1038, !1040, !1047, !1049, !1051, !1045, !1053, !1054, !1055, !1056, !1058, !1059, !1078, !1079, !1086, !1087, !1089, !1112, !1113, !1114, !1057}
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1033, line: 221, size: 32, align: 8, elements: !1034)
!1033 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1034 = !{!1035}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1032, file: !1033, line: 221, baseType: !1036, size: 32, align: 32)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1037, line: 51, baseType: !1038)
!1037 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1038 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1039 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64, align: 64)
!1041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_64", file: !1033, line: 220, size: 64, align: 8, elements: !1043)
!1043 = !{!1044}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1042, file: !1033, line: 220, baseType: !1045, size: 64, align: 64)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1037, line: 55, baseType: !1046)
!1046 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1037, line: 40, baseType: !1048)
!1048 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1037, line: 48, baseType: !1050)
!1050 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64, align: 64)
!1052 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64, align: 64)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64, align: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64, align: 64)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64, align: 64)
!1057 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64, align: 64)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64, align: 64)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "EbmlBin", file: !939, line: 110, baseType: !1061)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EbmlBin", file: !939, line: 105, size: 256, align: 64, elements: !1062)
!1062 = !{!1063, !1064, !1076, !1077}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1061, file: !939, line: 106, baseType: !1039, size: 32, align: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1061, file: !939, line: 107, baseType: !1065, size: 64, align: 64, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64, align: 64)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1067, line: 94, baseType: !1068)
!1067 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1067, line: 81, size: 192, align: 64, elements: !1069)
!1069 = !{!1070, !1074, !1075}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1068, file: !1067, line: 82, baseType: !1071, size: 64, align: 64)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1067, line: 73, baseType: !1073)
!1073 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1067, line: 73, flags: DIFlagFwdDecl)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1068, file: !1067, line: 89, baseType: !1053, size: 64, align: 64, offset: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1068, file: !1067, line: 93, baseType: !1039, size: 32, align: 32, offset: 128)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1061, file: !939, line: 108, baseType: !1053, size: 64, align: 64, offset: 128)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1061, file: !939, line: 109, baseType: !1047, size: 64, align: 64, offset: 192)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64, align: 64)
!1080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1081)
!1081 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !1033, line: 222, size: 16, align: 8, elements: !1082)
!1082 = !{!1083}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1081, file: !1033, line: 222, baseType: !1084, size: 16, align: 16)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1037, line: 49, baseType: !1085)
!1085 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64, align: 64)
!1088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVMasteringDisplayMetadata", file: !1091, line: 69, baseType: !1092)
!1091 = !DIFile(filename: "./libavutil/mastering_display_metadata.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVMasteringDisplayMetadata", file: !1091, line: 38, size: 704, align: 32, elements: !1093)
!1093 = !{!1094, !1105, !1108, !1109, !1110, !1111}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "display_primaries", scope: !1092, file: !1091, line: 42, baseType: !1095, size: 384, align: 32)
!1095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1096, size: 384, align: 32, elements: !1102)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1097, line: 61, baseType: !1098)
!1097 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1097, line: 58, size: 64, align: 32, elements: !1099)
!1099 = !{!1100, !1101}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1098, file: !1097, line: 59, baseType: !1039, size: 32, align: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1098, file: !1097, line: 60, baseType: !1039, size: 32, align: 32, offset: 32)
!1102 = !{!1103, !1104}
!1103 = !DISubrange(count: 3)
!1104 = !DISubrange(count: 2)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !1092, file: !1091, line: 47, baseType: !1106, size: 128, align: 32, offset: 384)
!1106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1096, size: 128, align: 32, elements: !1107)
!1107 = !{!1104}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "min_luminance", scope: !1092, file: !1091, line: 52, baseType: !1096, size: 64, align: 32, offset: 512)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "max_luminance", scope: !1092, file: !1091, line: 57, baseType: !1096, size: 64, align: 32, offset: 576)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "has_primaries", scope: !1092, file: !1091, line: 62, baseType: !1039, size: 32, align: 32, offset: 640)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "has_luminance", scope: !1092, file: !1091, line: 67, baseType: !1039, size: 32, align: 32, offset: 672)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1037, line: 38, baseType: !1039)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64, align: 64)
!1115 = !{!1116, !2385, !2386, !2388, !2482, !2485, !2487, !2488, !2492, !2493, !2494, !2498, !2502, !2506, !2508, !2512, !2514, !2515, !2516, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2530, !2531, !2532, !2533, !2534, !2535, !2539, !2540, !2541, !2542, !2547, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561}
!1116 = distinct !DIGlobalVariable(name: "ff_matroska_demuxer", scope: !0, file: !939, line: 4039, type: !1117, isLocal: false, isDefinition: true, variable: %struct.AVInputFormat* @ff_matroska_demuxer)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVInputFormat", file: !919, line: 777, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVInputFormat", file: !919, line: 633, size: 1344, align: 64, elements: !1119)
!1119 = !{!1120, !1123, !1124, !1125, !1126, !1136, !1208, !1209, !1211, !1212, !1213, !1226, !2366, !2367, !2368, !2372, !2376, !2377, !2378, !2382, !2383, !2384}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1118, file: !919, line: 638, baseType: !1121, size: 64, align: 64)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64, align: 64)
!1122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1118, file: !919, line: 645, baseType: !1121, size: 64, align: 64, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1118, file: !919, line: 652, baseType: !1039, size: 32, align: 32, offset: 128)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1118, file: !919, line: 659, baseType: !1121, size: 64, align: 64, offset: 192)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1118, file: !919, line: 661, baseType: !1127, size: 64, align: 64, offset: 256)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64, align: 64)
!1128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1129)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64, align: 64)
!1130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1131)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecTag", file: !1132, line: 44, size: 64, align: 32, elements: !1133)
!1132 = !DIFile(filename: "libavformat/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1133 = !{!1134, !1135}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1131, file: !1132, line: 45, baseType: !3, size: 32, align: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1131, file: !1132, line: 46, baseType: !1038, size: 32, align: 32, offset: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1118, file: !919, line: 663, baseType: !1137, size: 64, align: 64, offset: 320)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64, align: 64)
!1138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1139)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !486, line: 143, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !486, line: 67, size: 640, align: 64, elements: !1141)
!1141 = !{!1142, !1143, !1147, !1167, !1168, !1169, !1170, !1174, !1180, !1182, !1186}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1140, file: !486, line: 72, baseType: !1121, size: 64, align: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1140, file: !486, line: 78, baseType: !1144, size: 64, align: 64, offset: 64)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64, align: 64)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{!1121, !1078}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1140, file: !486, line: 85, baseType: !1148, size: 64, align: 64, offset: 128)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64, align: 64)
!1149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1150)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !464, line: 246, size: 512, align: 64, elements: !1151)
!1151 = !{!1152, !1153, !1154, !1155, !1156, !1163, !1164, !1165, !1166}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1150, file: !464, line: 247, baseType: !1121, size: 64, align: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1150, file: !464, line: 253, baseType: !1121, size: 64, align: 64, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1150, file: !464, line: 259, baseType: !1039, size: 32, align: 32, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1150, file: !464, line: 260, baseType: !463, size: 32, align: 32, offset: 160)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1150, file: !464, line: 271, baseType: !1157, size: 64, align: 64, offset: 192)
!1157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1150, file: !464, line: 265, size: 64, align: 64, elements: !1158)
!1158 = !{!1159, !1160, !1161, !1162}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1157, file: !464, line: 266, baseType: !1047, size: 64, align: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1157, file: !464, line: 267, baseType: !1057, size: 64, align: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1157, file: !464, line: 268, baseType: !1121, size: 64, align: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1157, file: !464, line: 270, baseType: !1096, size: 64, align: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1150, file: !464, line: 272, baseType: !1057, size: 64, align: 64, offset: 256)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1150, file: !464, line: 273, baseType: !1057, size: 64, align: 64, offset: 320)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1150, file: !464, line: 275, baseType: !1039, size: 32, align: 32, offset: 384)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1150, file: !464, line: 300, baseType: !1121, size: 64, align: 64, offset: 448)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1140, file: !486, line: 93, baseType: !1039, size: 32, align: 32, offset: 192)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1140, file: !486, line: 99, baseType: !1039, size: 32, align: 32, offset: 224)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1140, file: !486, line: 108, baseType: !1039, size: 32, align: 32, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1140, file: !486, line: 113, baseType: !1171, size: 64, align: 64, offset: 320)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64, align: 64)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!1078, !1078, !1078}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1140, file: !486, line: 123, baseType: !1175, size: 64, align: 64, offset: 384)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64, align: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!1178, !1178}
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64, align: 64)
!1179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1140)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1140, file: !486, line: 130, baseType: !1181, size: 32, align: 32, offset: 448)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !486, line: 48, baseType: !485)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1140, file: !486, line: 136, baseType: !1183, size: 64, align: 64, offset: 512)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64, align: 64)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!1181, !1078}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1140, file: !486, line: 142, baseType: !1187, size: 64, align: 64, offset: 576)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!1039, !1190, !1078, !1121, !1039}
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64, align: 64)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64, align: 64)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !464, line: 329, size: 128, align: 64, elements: !1193)
!1193 = !{!1194, !1206, !1207}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1192, file: !464, line: 360, baseType: !1195, size: 64, align: 64)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64, align: 64)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !464, line: 324, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !464, line: 306, size: 384, align: 64, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1203, !1204, !1205}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1198, file: !464, line: 307, baseType: !1121, size: 64, align: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1198, file: !464, line: 313, baseType: !1057, size: 64, align: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1198, file: !464, line: 313, baseType: !1057, size: 64, align: 64, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1198, file: !464, line: 318, baseType: !1057, size: 64, align: 64, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1198, file: !464, line: 318, baseType: !1057, size: 64, align: 64, offset: 256)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1198, file: !464, line: 323, baseType: !1039, size: 32, align: 32, offset: 320)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1192, file: !464, line: 364, baseType: !1039, size: 32, align: 32, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1192, file: !464, line: 368, baseType: !1039, size: 32, align: 32, offset: 96)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1118, file: !919, line: 670, baseType: !1121, size: 64, align: 64, offset: 384)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1118, file: !919, line: 679, baseType: !1210, size: 64, align: 64, offset: 448)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64, align: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "raw_codec_id", scope: !1118, file: !919, line: 684, baseType: !1039, size: 32, align: 32, offset: 512)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1118, file: !919, line: 689, baseType: !1039, size: 32, align: 32, offset: 544)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "read_probe", scope: !1118, file: !919, line: 696, baseType: !1214, size: 64, align: 64, offset: 576)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64, align: 64)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!1039, !1217}
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProbeData", file: !919, line: 453, baseType: !1219)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProbeData", file: !919, line: 448, size: 256, align: 64, elements: !1220)
!1220 = !{!1221, !1222, !1224, !1225}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1219, file: !919, line: 449, baseType: !1121, size: 64, align: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1219, file: !919, line: 450, baseType: !1223, size: 64, align: 64, offset: 64)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64, align: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !1219, file: !919, line: 451, baseType: !1039, size: 32, align: 32, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1219, file: !919, line: 452, baseType: !1121, size: 64, align: 64, offset: 192)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !1118, file: !919, line: 703, baseType: !1227, size: 64, align: 64, offset: 640)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64, align: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!1039, !1230}
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatContext", file: !919, line: 1337, size: 11968, align: 64, elements: !1232)
!1232 = !{!1233, !1234, !1235, !1410, !1411, !1474, !1475, !1476, !2223, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2277, !2278, !2279, !2280, !2281, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2332, !2333, !2336, !2337, !2338, !2339, !2340, !2341, !2343, !2344, !2345, !2346, !2354, !2355, !2359, !2363, !2364, !2365}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1231, file: !919, line: 1342, baseType: !1137, size: 64, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "iformat", scope: !1231, file: !919, line: 1349, baseType: !1210, size: 64, align: 64, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "oformat", scope: !1231, file: !919, line: 1356, baseType: !1236, size: 64, align: 64, offset: 128)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64, align: 64)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOutputFormat", file: !919, line: 497, size: 1600, align: 64, elements: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1279, !1280, !1284, !1288, !1292, !1298, !1385, !1391, !1397, !1398, !1399, !1400, !1404}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1237, file: !919, line: 498, baseType: !1121, size: 64, align: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1237, file: !919, line: 504, baseType: !1121, size: 64, align: 64, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1237, file: !919, line: 505, baseType: !1121, size: 64, align: 64, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1237, file: !919, line: 506, baseType: !1121, size: 64, align: 64, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1237, file: !919, line: 508, baseType: !3, size: 32, align: 32, offset: 256)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1237, file: !919, line: 509, baseType: !3, size: 32, align: 32, offset: 288)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1237, file: !919, line: 510, baseType: !3, size: 32, align: 32, offset: 320)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1237, file: !919, line: 517, baseType: !1039, size: 32, align: 32, offset: 352)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1237, file: !919, line: 523, baseType: !1127, size: 64, align: 64, offset: 384)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1237, file: !919, line: 526, baseType: !1137, size: 64, align: 64, offset: 448)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1237, file: !919, line: 535, baseType: !1236, size: 64, align: 64, offset: 512)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1237, file: !919, line: 539, baseType: !1039, size: 32, align: 32, offset: 576)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !1237, file: !919, line: 541, baseType: !1227, size: 64, align: 64, offset: 640)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1237, file: !919, line: 549, baseType: !1253, size: 64, align: 64, offset: 704)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64, align: 64)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!1039, !1230, !1256}
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64, align: 64)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !4, line: 1499, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !4, line: 1445, size: 704, align: 64, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1275, !1276, !1277, !1278}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1258, file: !4, line: 1451, baseType: !1065, size: 64, align: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1258, file: !4, line: 1461, baseType: !1047, size: 64, align: 64, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1258, file: !4, line: 1467, baseType: !1047, size: 64, align: 64, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1258, file: !4, line: 1468, baseType: !1053, size: 64, align: 64, offset: 192)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1258, file: !4, line: 1469, baseType: !1039, size: 32, align: 32, offset: 256)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1258, file: !4, line: 1470, baseType: !1039, size: 32, align: 32, offset: 288)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1258, file: !4, line: 1474, baseType: !1039, size: 32, align: 32, offset: 320)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1258, file: !4, line: 1479, baseType: !1268, size: 64, align: 64, offset: 384)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64, align: 64)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !4, line: 1415, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !4, line: 1411, size: 128, align: 64, elements: !1271)
!1271 = !{!1272, !1273, !1274}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1270, file: !4, line: 1412, baseType: !1053, size: 64, align: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1270, file: !4, line: 1413, baseType: !1039, size: 32, align: 32, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1270, file: !4, line: 1414, baseType: !506, size: 32, align: 32, offset: 96)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1258, file: !4, line: 1480, baseType: !1039, size: 32, align: 32, offset: 448)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1258, file: !4, line: 1486, baseType: !1047, size: 64, align: 64, offset: 512)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1258, file: !4, line: 1488, baseType: !1047, size: 64, align: 64, offset: 576)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1258, file: !4, line: 1497, baseType: !1047, size: 64, align: 64, offset: 640)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "write_trailer", scope: !1237, file: !919, line: 550, baseType: !1227, size: 64, align: 64, offset: 768)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "interleave_packet", scope: !1237, file: !919, line: 554, baseType: !1281, size: 64, align: 64, offset: 832)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64, align: 64)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!1039, !1230, !1256, !1256, !1039}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "query_codec", scope: !1237, file: !919, line: 563, baseType: !1285, size: 64, align: 64, offset: 896)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64, align: 64)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!1039, !3, !1039}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "get_output_timestamp", scope: !1237, file: !919, line: 565, baseType: !1289, size: 64, align: 64, offset: 960)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64, align: 64)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{null, !1230, !1039, !1054, !1054}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "control_message", scope: !1237, file: !919, line: 570, baseType: !1293, size: 64, align: 64, offset: 1024)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64, align: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!1039, !1230, !1039, !1078, !1296}
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1297, line: 216, baseType: !1046)
!1297 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "write_uncoded_frame", scope: !1237, file: !919, line: 581, baseType: !1299, size: 64, align: 64, offset: 1088)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64, align: 64)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!1039, !1230, !1039, !1302, !1038}
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64, align: 64)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64, align: 64)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !548, line: 646, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !548, line: 268, size: 4288, align: 64, elements: !1306)
!1306 = !{!1307, !1311, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1339, !1341, !1342, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1305, file: !548, line: 282, baseType: !1308, size: 512, align: 64)
!1308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 512, align: 64, elements: !1309)
!1309 = !{!1310}
!1310 = !DISubrange(count: 8)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1305, file: !548, line: 299, baseType: !1312, size: 256, align: 32, offset: 512)
!1312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 256, align: 32, elements: !1309)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1305, file: !548, line: 315, baseType: !1058, size: 64, align: 64, offset: 768)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1305, file: !548, line: 326, baseType: !1039, size: 32, align: 32, offset: 832)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1305, file: !548, line: 326, baseType: !1039, size: 32, align: 32, offset: 864)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1305, file: !548, line: 334, baseType: !1039, size: 32, align: 32, offset: 896)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1305, file: !548, line: 341, baseType: !1039, size: 32, align: 32, offset: 928)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1305, file: !548, line: 346, baseType: !1039, size: 32, align: 32, offset: 960)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1305, file: !548, line: 351, baseType: !536, size: 32, align: 32, offset: 992)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1305, file: !548, line: 356, baseType: !1096, size: 64, align: 32, offset: 1024)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1305, file: !548, line: 361, baseType: !1047, size: 64, align: 64, offset: 1088)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1305, file: !548, line: 369, baseType: !1047, size: 64, align: 64, offset: 1152)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1305, file: !548, line: 377, baseType: !1047, size: 64, align: 64, offset: 1216)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1305, file: !548, line: 382, baseType: !1039, size: 32, align: 32, offset: 1280)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1305, file: !548, line: 386, baseType: !1039, size: 32, align: 32, offset: 1312)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1305, file: !548, line: 391, baseType: !1039, size: 32, align: 32, offset: 1344)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1305, file: !548, line: 396, baseType: !1078, size: 64, align: 64, offset: 1408)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1305, file: !548, line: 403, baseType: !1329, size: 512, align: 64, offset: 1472)
!1329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1045, size: 512, align: 64, elements: !1309)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1305, file: !548, line: 410, baseType: !1039, size: 32, align: 32, offset: 1984)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1305, file: !548, line: 415, baseType: !1039, size: 32, align: 32, offset: 2016)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1305, file: !548, line: 420, baseType: !1039, size: 32, align: 32, offset: 2048)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1305, file: !548, line: 425, baseType: !1039, size: 32, align: 32, offset: 2080)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1305, file: !548, line: 435, baseType: !1047, size: 64, align: 64, offset: 2112)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1305, file: !548, line: 440, baseType: !1039, size: 32, align: 32, offset: 2176)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1305, file: !548, line: 445, baseType: !1045, size: 64, align: 64, offset: 2240)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1305, file: !548, line: 459, baseType: !1338, size: 512, align: 64, offset: 2304)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1065, size: 512, align: 64, elements: !1309)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1305, file: !548, line: 473, baseType: !1340, size: 64, align: 64, offset: 2816)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64, align: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1305, file: !548, line: 477, baseType: !1039, size: 32, align: 32, offset: 2880)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1305, file: !548, line: 479, baseType: !1343, size: 64, align: 64, offset: 2944)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64, align: 64)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64, align: 64)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !548, line: 207, baseType: !1346)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !548, line: 201, size: 320, align: 64, elements: !1347)
!1347 = !{!1348, !1349, !1350, !1351, !1356}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1346, file: !548, line: 202, baseType: !547, size: 32, align: 32)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1346, file: !548, line: 203, baseType: !1053, size: 64, align: 64, offset: 64)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1346, file: !548, line: 204, baseType: !1039, size: 32, align: 32, offset: 128)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1346, file: !548, line: 205, baseType: !1352, size: 64, align: 64, offset: 192)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64, align: 64)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1354, line: 86, baseType: !1355)
!1354 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1355 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1354, line: 86, flags: DIFlagFwdDecl)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1346, file: !548, line: 206, baseType: !1065, size: 64, align: 64, offset: 256)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1305, file: !548, line: 480, baseType: !1039, size: 32, align: 32, offset: 3008)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1305, file: !548, line: 505, baseType: !1039, size: 32, align: 32, offset: 3040)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1305, file: !548, line: 512, baseType: !571, size: 32, align: 32, offset: 3072)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1305, file: !548, line: 514, baseType: !578, size: 32, align: 32, offset: 3104)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1305, file: !548, line: 516, baseType: !596, size: 32, align: 32, offset: 3136)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1305, file: !548, line: 523, baseType: !620, size: 32, align: 32, offset: 3168)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1305, file: !548, line: 525, baseType: !639, size: 32, align: 32, offset: 3200)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1305, file: !548, line: 532, baseType: !1047, size: 64, align: 64, offset: 3264)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1305, file: !548, line: 539, baseType: !1047, size: 64, align: 64, offset: 3328)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1305, file: !548, line: 547, baseType: !1047, size: 64, align: 64, offset: 3392)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1305, file: !548, line: 554, baseType: !1352, size: 64, align: 64, offset: 3456)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1305, file: !548, line: 563, baseType: !1039, size: 32, align: 32, offset: 3520)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1305, file: !548, line: 572, baseType: !1039, size: 32, align: 32, offset: 3552)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1305, file: !548, line: 581, baseType: !1039, size: 32, align: 32, offset: 3584)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1305, file: !548, line: 588, baseType: !1372, size: 64, align: 64, offset: 3648)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64, align: 64)
!1373 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1037, line: 36, baseType: !1374)
!1374 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1305, file: !548, line: 593, baseType: !1039, size: 32, align: 32, offset: 3712)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1305, file: !548, line: 596, baseType: !1039, size: 32, align: 32, offset: 3744)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1305, file: !548, line: 599, baseType: !1065, size: 64, align: 64, offset: 3776)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1305, file: !548, line: 605, baseType: !1065, size: 64, align: 64, offset: 3840)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1305, file: !548, line: 616, baseType: !1065, size: 64, align: 64, offset: 3904)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1305, file: !548, line: 626, baseType: !1296, size: 64, align: 64, offset: 3968)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1305, file: !548, line: 627, baseType: !1296, size: 64, align: 64, offset: 4032)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1305, file: !548, line: 628, baseType: !1296, size: 64, align: 64, offset: 4096)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1305, file: !548, line: 629, baseType: !1296, size: 64, align: 64, offset: 4160)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1305, file: !548, line: 645, baseType: !1065, size: 64, align: 64, offset: 4224)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1237, file: !919, line: 587, baseType: !1386, size: 64, align: 64, offset: 1152)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64, align: 64)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!1039, !1230, !1389}
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64, align: 64)
!1390 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceInfoList", file: !919, line: 328, flags: DIFlagFwdDecl)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1237, file: !919, line: 592, baseType: !1392, size: 64, align: 64, offset: 1216)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64, align: 64)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!1039, !1230, !1395}
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64, align: 64)
!1396 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceCapabilitiesQuery", file: !919, line: 329, flags: DIFlagFwdDecl)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1237, file: !919, line: 597, baseType: !1392, size: 64, align: 64, offset: 1280)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1237, file: !919, line: 598, baseType: !3, size: 32, align: 32, offset: 1344)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1237, file: !919, line: 608, baseType: !1227, size: 64, align: 64, offset: 1408)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "deinit", scope: !1237, file: !919, line: 617, baseType: !1401, size: 64, align: 64, offset: 1472)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64, align: 64)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{null, !1230}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "check_bitstream", scope: !1237, file: !919, line: 623, baseType: !1405, size: 64, align: 64, offset: 1536)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64, align: 64)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{!1039, !1230, !1408}
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64, align: 64)
!1409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1257)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1231, file: !919, line: 1365, baseType: !1078, size: 64, align: 64, offset: 192)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1231, file: !919, line: 1379, baseType: !1412, size: 64, align: 64, offset: 256)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64, align: 64)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOContext", file: !650, line: 352, baseType: !1414)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOContext", file: !650, line: 161, size: 2112, align: 64, elements: !1415)
!1415 = !{!1416, !1417, !1418, !1419, !1420, !1421, !1422, !1426, !1427, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1441, !1442, !1446, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1464, !1465, !1466, !1467, !1471, !1472, !1473}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1414, file: !650, line: 174, baseType: !1137, size: 64, align: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1414, file: !650, line: 226, baseType: !1223, size: 64, align: 64, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !1414, file: !650, line: 227, baseType: !1039, size: 32, align: 32, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1414, file: !650, line: 228, baseType: !1223, size: 64, align: 64, offset: 192)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1414, file: !650, line: 229, baseType: !1223, size: 64, align: 64, offset: 256)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1414, file: !650, line: 233, baseType: !1078, size: 64, align: 64, offset: 320)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1414, file: !650, line: 235, baseType: !1423, size: 64, align: 64, offset: 384)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64, align: 64)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{!1039, !1078, !1053, !1039}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1414, file: !650, line: 236, baseType: !1423, size: 64, align: 64, offset: 448)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !1414, file: !650, line: 237, baseType: !1428, size: 64, align: 64, offset: 512)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64, align: 64)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!1047, !1078, !1047, !1039}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1414, file: !650, line: 238, baseType: !1047, size: 64, align: 64, offset: 576)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "eof_reached", scope: !1414, file: !650, line: 239, baseType: !1039, size: 32, align: 32, offset: 640)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "write_flag", scope: !1414, file: !650, line: 240, baseType: !1039, size: 32, align: 32, offset: 672)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "max_packet_size", scope: !1414, file: !650, line: 241, baseType: !1039, size: 32, align: 32, offset: 704)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !1414, file: !650, line: 242, baseType: !1046, size: 64, align: 64, offset: 768)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_ptr", scope: !1414, file: !650, line: 243, baseType: !1223, size: 64, align: 64, offset: 832)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "update_checksum", scope: !1414, file: !650, line: 244, baseType: !1438, size: 64, align: 64, offset: 896)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64, align: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!1046, !1046, !1087, !1038}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1414, file: !650, line: 245, baseType: !1039, size: 32, align: 32, offset: 960)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1414, file: !650, line: 249, baseType: !1443, size: 64, align: 64, offset: 1024)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64, align: 64)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!1039, !1078, !1039}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1414, file: !650, line: 255, baseType: !1447, size: 64, align: 64, offset: 1088)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64, align: 64)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!1047, !1078, !1039, !1047, !1039}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "seekable", scope: !1414, file: !650, line: 260, baseType: !1039, size: 32, align: 32, offset: 1152)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "maxsize", scope: !1414, file: !650, line: 266, baseType: !1047, size: 64, align: 64, offset: 1216)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "direct", scope: !1414, file: !650, line: 273, baseType: !1039, size: 32, align: 32, offset: 1280)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_read", scope: !1414, file: !650, line: 279, baseType: !1047, size: 64, align: 64, offset: 1344)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "seek_count", scope: !1414, file: !650, line: 285, baseType: !1039, size: 32, align: 32, offset: 1408)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "writeout_count", scope: !1414, file: !650, line: 291, baseType: !1039, size: 32, align: 32, offset: 1440)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "orig_buffer_size", scope: !1414, file: !650, line: 298, baseType: !1039, size: 32, align: 32, offset: 1472)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_threshold", scope: !1414, file: !650, line: 304, baseType: !1039, size: 32, align: 32, offset: 1504)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1414, file: !650, line: 309, baseType: !1121, size: 64, align: 64, offset: 1536)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1414, file: !650, line: 314, baseType: !1121, size: 64, align: 64, offset: 1600)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "write_data_type", scope: !1414, file: !650, line: 319, baseType: !1461, size: 64, align: 64, offset: 1664)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64, align: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!1039, !1078, !1053, !1039, !649, !1047}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_boundary_point", scope: !1414, file: !650, line: 326, baseType: !1039, size: 32, align: 32, offset: 1728)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "current_type", scope: !1414, file: !650, line: 331, baseType: !649, size: 32, align: 32, offset: 1760)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !1414, file: !650, line: 332, baseType: !1047, size: 64, align: 64, offset: 1792)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_get", scope: !1414, file: !650, line: 338, baseType: !1468, size: 64, align: 64, offset: 1856)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64, align: 64)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!1039, !1078}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !1414, file: !650, line: 340, baseType: !1047, size: 64, align: 64, offset: 1920)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr_max", scope: !1414, file: !650, line: 346, baseType: !1223, size: 64, align: 64, offset: 1984)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "min_packet_size", scope: !1414, file: !650, line: 351, baseType: !1039, size: 32, align: 32, offset: 2048)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_flags", scope: !1231, file: !919, line: 1386, baseType: !1039, size: 32, align: 32, offset: 320)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streams", scope: !1231, file: !919, line: 1393, baseType: !1038, size: 32, align: 32, offset: 352)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !1231, file: !919, line: 1405, baseType: !1477, size: 64, align: 64, offset: 384)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64, align: 64)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64, align: 64)
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStream", file: !919, line: 1223, baseType: !1480)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStream", file: !919, line: 865, size: 6144, align: 64, elements: !1481)
!1481 = !{!1482, !1483, !1484, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2148, !2154, !2155, !2159, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2191, !2192, !2193, !2194, !2195, !2196}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1480, file: !919, line: 866, baseType: !1039, size: 32, align: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1480, file: !919, line: 872, baseType: !1039, size: 32, align: 32, offset: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1480, file: !919, line: 878, baseType: !1485, size: 64, align: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64, align: 64)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !4, line: 3360, baseType: !1487)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !4, line: 1556, size: 8448, align: 64, elements: !1488)
!1488 = !{!1489, !1490, !1491, !1492, !1630, !1631, !1632, !1633, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1786, !1790, !1791, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1970, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1487, file: !4, line: 1561, baseType: !1137, size: 64, align: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1487, file: !4, line: 1562, baseType: !1039, size: 32, align: 32, offset: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1487, file: !4, line: 1564, baseType: !658, size: 32, align: 32, offset: 96)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1487, file: !4, line: 1565, baseType: !1493, size: 64, align: 64, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64, align: 64)
!1494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1495)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !4, line: 3468, size: 1984, align: 64, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500, !1501, !1502, !1505, !1508, !1511, !1514, !1517, !1518, !1519, !1527, !1528, !1529, !1531, !1535, !1541, !1550, !1554, !1555, !1595, !1602, !1606, !1607, !1611, !1615, !1619, !1623, !1624, !1625}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1495, file: !4, line: 3475, baseType: !1121, size: 64, align: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1495, file: !4, line: 3480, baseType: !1121, size: 64, align: 64, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1495, file: !4, line: 3481, baseType: !658, size: 32, align: 32, offset: 128)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1495, file: !4, line: 3482, baseType: !3, size: 32, align: 32, offset: 160)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1495, file: !4, line: 3487, baseType: !1039, size: 32, align: 32, offset: 192)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1495, file: !4, line: 3488, baseType: !1503, size: 64, align: 64, offset: 256)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64, align: 64)
!1504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1096)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1495, file: !4, line: 3489, baseType: !1506, size: 64, align: 64, offset: 320)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64, align: 64)
!1507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !667)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1495, file: !4, line: 3490, baseType: !1509, size: 64, align: 64, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64, align: 64)
!1510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1495, file: !4, line: 3491, baseType: !1512, size: 64, align: 64, offset: 448)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64, align: 64)
!1513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !866)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1495, file: !4, line: 3492, baseType: !1515, size: 64, align: 64, offset: 512)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64, align: 64)
!1516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1495, file: !4, line: 3493, baseType: !1049, size: 8, align: 8, offset: 576)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1495, file: !4, line: 3494, baseType: !1137, size: 64, align: 64, offset: 640)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1495, file: !4, line: 3495, baseType: !1520, size: 64, align: 64, offset: 704)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64, align: 64)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !4, line: 3404, baseType: !1523)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !4, line: 3401, size: 128, align: 64, elements: !1524)
!1524 = !{!1525, !1526}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1523, file: !4, line: 3402, baseType: !1039, size: 32, align: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1523, file: !4, line: 3403, baseType: !1121, size: 64, align: 64, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1495, file: !4, line: 3507, baseType: !1121, size: 64, align: 64, offset: 768)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1495, file: !4, line: 3516, baseType: !1039, size: 32, align: 32, offset: 832)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1495, file: !4, line: 3517, baseType: !1530, size: 64, align: 64, offset: 896)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64, align: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1495, file: !4, line: 3527, baseType: !1532, size: 64, align: 64, offset: 960)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64, align: 64)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!1039, !1485}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1495, file: !4, line: 3535, baseType: !1536, size: 64, align: 64, offset: 1024)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64, align: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!1039, !1485, !1539}
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64, align: 64)
!1540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1486)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1495, file: !4, line: 3541, baseType: !1542, size: 64, align: 64, offset: 1088)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64, align: 64)
!1543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1544)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !4, line: 3461, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1546, line: 223, size: 128, align: 64, elements: !1547)
!1546 = !DIFile(filename: "./libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1547 = !{!1548, !1549}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1545, file: !1546, line: 224, baseType: !1087, size: 64, align: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1545, file: !1546, line: 225, baseType: !1087, size: 64, align: 64, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1495, file: !4, line: 3549, baseType: !1551, size: 64, align: 64, offset: 1152)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64, align: 64)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{null, !1530}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1495, file: !4, line: 3551, baseType: !1532, size: 64, align: 64, offset: 1216)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1495, file: !4, line: 3552, baseType: !1556, size: 64, align: 64, offset: 1280)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64, align: 64)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!1039, !1485, !1053, !1039, !1559}
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64, align: 64)
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !4, line: 3920, size: 256, align: 64, elements: !1562)
!1562 = !{!1563, !1564, !1565, !1566, !1567, !1594}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1561, file: !4, line: 3921, baseType: !1084, size: 16, align: 16)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1561, file: !4, line: 3922, baseType: !1036, size: 32, align: 32, offset: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1561, file: !4, line: 3923, baseType: !1036, size: 32, align: 32, offset: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1561, file: !4, line: 3924, baseType: !1038, size: 32, align: 32, offset: 96)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1561, file: !4, line: 3925, baseType: !1568, size: 64, align: 64, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64, align: 64)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64, align: 64)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !4, line: 3918, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !4, line: 3885, size: 1600, align: 64, elements: !1572)
!1572 = !{!1573, !1574, !1575, !1576, !1577, !1578, !1584, !1588, !1590, !1591, !1592, !1593}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1571, file: !4, line: 3886, baseType: !1039, size: 32, align: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1571, file: !4, line: 3887, baseType: !1039, size: 32, align: 32, offset: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1571, file: !4, line: 3888, baseType: !1039, size: 32, align: 32, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1571, file: !4, line: 3889, baseType: !1039, size: 32, align: 32, offset: 96)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1571, file: !4, line: 3890, baseType: !1039, size: 32, align: 32, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1571, file: !4, line: 3897, baseType: !1579, size: 768, align: 64, offset: 192)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !4, line: 3858, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !4, line: 3853, size: 768, align: 64, elements: !1581)
!1581 = !{!1582, !1583}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1580, file: !4, line: 3855, baseType: !1308, size: 512, align: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1580, file: !4, line: 3857, baseType: !1312, size: 256, align: 32, offset: 512)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1571, file: !4, line: 3903, baseType: !1585, size: 256, align: 64, offset: 960)
!1585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 256, align: 64, elements: !1586)
!1586 = !{!1587}
!1587 = !DISubrange(count: 4)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1571, file: !4, line: 3904, baseType: !1589, size: 128, align: 32, offset: 1216)
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 128, align: 32, elements: !1586)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1571, file: !4, line: 3906, baseType: !883, size: 32, align: 32, offset: 1344)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1571, file: !4, line: 3908, baseType: !1051, size: 64, align: 64, offset: 1408)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1571, file: !4, line: 3915, baseType: !1051, size: 64, align: 64, offset: 1472)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1571, file: !4, line: 3917, baseType: !1039, size: 32, align: 32, offset: 1536)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1561, file: !4, line: 3926, baseType: !1047, size: 64, align: 64, offset: 192)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1495, file: !4, line: 3564, baseType: !1596, size: 64, align: 64, offset: 1344)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64, align: 64)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!1039, !1485, !1256, !1599, !1601}
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64, align: 64)
!1600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1304)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64, align: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1495, file: !4, line: 3566, baseType: !1603, size: 64, align: 64, offset: 1408)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64, align: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1039, !1485, !1078, !1601, !1256}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1495, file: !4, line: 3567, baseType: !1532, size: 64, align: 64, offset: 1472)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1495, file: !4, line: 3576, baseType: !1608, size: 64, align: 64, offset: 1536)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64, align: 64)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!1039, !1485, !1599}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1495, file: !4, line: 3577, baseType: !1612, size: 64, align: 64, offset: 1600)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64, align: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{!1039, !1485, !1256}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1495, file: !4, line: 3584, baseType: !1616, size: 64, align: 64, offset: 1664)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64, align: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!1039, !1485, !1303}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1495, file: !4, line: 3589, baseType: !1620, size: 64, align: 64, offset: 1728)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64, align: 64)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{null, !1485}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1495, file: !4, line: 3594, baseType: !1039, size: 32, align: 32, offset: 1792)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1495, file: !4, line: 3600, baseType: !1121, size: 64, align: 64, offset: 1856)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1495, file: !4, line: 3609, baseType: !1626, size: 64, align: 64, offset: 1920)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64, align: 64)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64, align: 64)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1629)
!1629 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !4, line: 3609, flags: DIFlagFwdDecl)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1487, file: !4, line: 1566, baseType: !3, size: 32, align: 32, offset: 192)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1487, file: !4, line: 1581, baseType: !1038, size: 32, align: 32, offset: 224)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1487, file: !4, line: 1583, baseType: !1078, size: 64, align: 64, offset: 256)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1487, file: !4, line: 1591, baseType: !1634, size: 64, align: 64, offset: 320)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64, align: 64)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1546, line: 129, size: 1664, align: 64, elements: !1636)
!1636 = !{!1637, !1638, !1639, !1640, !1641, !1659, !1660, !1666, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1635, file: !1546, line: 136, baseType: !1039, size: 32, align: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1635, file: !1546, line: 151, baseType: !1039, size: 32, align: 32, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1635, file: !1546, line: 157, baseType: !1039, size: 32, align: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1635, file: !1546, line: 159, baseType: !1303, size: 64, align: 64, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1635, file: !1546, line: 161, baseType: !1642, size: 64, align: 64, offset: 192)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64, align: 64)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1546, line: 117, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1546, line: 100, size: 832, align: 64, elements: !1645)
!1645 = !{!1646, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1644, file: !1546, line: 105, baseType: !1647, size: 256, align: 64)
!1647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1648, size: 256, align: 64, elements: !1586)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1067, line: 238, baseType: !1650)
!1650 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1067, line: 238, flags: DIFlagFwdDecl)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1644, file: !1546, line: 110, baseType: !1039, size: 32, align: 32, offset: 256)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1644, file: !1546, line: 111, baseType: !1039, size: 32, align: 32, offset: 288)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1644, file: !1546, line: 111, baseType: !1039, size: 32, align: 32, offset: 320)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1644, file: !1546, line: 112, baseType: !1312, size: 256, align: 32, offset: 352)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1644, file: !1546, line: 113, baseType: !1589, size: 128, align: 32, offset: 608)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1644, file: !1546, line: 114, baseType: !1039, size: 32, align: 32, offset: 736)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1644, file: !1546, line: 115, baseType: !1039, size: 32, align: 32, offset: 768)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1644, file: !1546, line: 116, baseType: !1039, size: 32, align: 32, offset: 800)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1635, file: !1546, line: 163, baseType: !1078, size: 64, align: 64, offset: 256)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1635, file: !1546, line: 165, baseType: !1661, size: 128, align: 64, offset: 320)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1546, line: 122, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1546, line: 119, size: 128, align: 64, elements: !1663)
!1663 = !{!1664, !1665}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1662, file: !1546, line: 120, baseType: !1256, size: 64, align: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1662, file: !1546, line: 121, baseType: !1303, size: 64, align: 64, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1635, file: !1546, line: 166, baseType: !1667, size: 128, align: 64, offset: 448)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1546, line: 127, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1546, line: 124, size: 128, align: 64, elements: !1669)
!1669 = !{!1670, !1743}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1668, file: !1546, line: 125, baseType: !1671, size: 64, align: 64)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64, align: 64)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64, align: 64)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !4, line: 5794, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !4, line: 5747, size: 512, align: 64, elements: !1675)
!1675 = !{!1676, !1677, !1701, !1705, !1706, !1740, !1741, !1742}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1674, file: !4, line: 5751, baseType: !1137, size: 64, align: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1674, file: !4, line: 5756, baseType: !1678, size: 64, align: 64, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64, align: 64)
!1679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !4, line: 5796, size: 512, align: 64, elements: !1681)
!1681 = !{!1682, !1683, !1686, !1687, !1688, !1692, !1696, !1700}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1680, file: !4, line: 5797, baseType: !1121, size: 64, align: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1680, file: !4, line: 5804, baseType: !1684, size: 64, align: 64, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64, align: 64)
!1685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1680, file: !4, line: 5815, baseType: !1137, size: 64, align: 64, offset: 128)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1680, file: !4, line: 5825, baseType: !1039, size: 32, align: 32, offset: 192)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1680, file: !4, line: 5826, baseType: !1689, size: 64, align: 64, offset: 256)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64, align: 64)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!1039, !1672}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1680, file: !4, line: 5827, baseType: !1693, size: 64, align: 64, offset: 320)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64, align: 64)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{!1039, !1672, !1256}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1680, file: !4, line: 5828, baseType: !1697, size: 64, align: 64, offset: 384)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64, align: 64)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{null, !1672}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1680, file: !4, line: 5829, baseType: !1697, size: 64, align: 64, offset: 448)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1674, file: !4, line: 5762, baseType: !1702, size: 64, align: 64, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64, align: 64)
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !4, line: 5735, baseType: !1704)
!1704 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !4, line: 5735, flags: DIFlagFwdDecl)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1674, file: !4, line: 5768, baseType: !1078, size: 64, align: 64, offset: 192)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1674, file: !4, line: 5775, baseType: !1707, size: 64, align: 64, offset: 256)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64, align: 64)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !4, line: 4085, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !4, line: 3936, size: 1152, align: 64, elements: !1710)
!1710 = !{!1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1709, file: !4, line: 3940, baseType: !658, size: 32, align: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1709, file: !4, line: 3944, baseType: !3, size: 32, align: 32, offset: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1709, file: !4, line: 3948, baseType: !1036, size: 32, align: 32, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1709, file: !4, line: 3958, baseType: !1053, size: 64, align: 64, offset: 128)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1709, file: !4, line: 3962, baseType: !1039, size: 32, align: 32, offset: 192)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1709, file: !4, line: 3968, baseType: !1039, size: 32, align: 32, offset: 224)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1709, file: !4, line: 3973, baseType: !1047, size: 64, align: 64, offset: 256)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1709, file: !4, line: 3986, baseType: !1039, size: 32, align: 32, offset: 320)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1709, file: !4, line: 3999, baseType: !1039, size: 32, align: 32, offset: 352)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1709, file: !4, line: 4004, baseType: !1039, size: 32, align: 32, offset: 384)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1709, file: !4, line: 4005, baseType: !1039, size: 32, align: 32, offset: 416)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1709, file: !4, line: 4010, baseType: !1039, size: 32, align: 32, offset: 448)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1709, file: !4, line: 4011, baseType: !1039, size: 32, align: 32, offset: 480)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1709, file: !4, line: 4020, baseType: !1096, size: 64, align: 32, offset: 512)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1709, file: !4, line: 4025, baseType: !889, size: 32, align: 32, offset: 576)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1709, file: !4, line: 4030, baseType: !571, size: 32, align: 32, offset: 608)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1709, file: !4, line: 4031, baseType: !578, size: 32, align: 32, offset: 640)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1709, file: !4, line: 4032, baseType: !596, size: 32, align: 32, offset: 672)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1709, file: !4, line: 4033, baseType: !620, size: 32, align: 32, offset: 704)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1709, file: !4, line: 4034, baseType: !639, size: 32, align: 32, offset: 736)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1709, file: !4, line: 4039, baseType: !1039, size: 32, align: 32, offset: 768)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1709, file: !4, line: 4046, baseType: !1045, size: 64, align: 64, offset: 832)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1709, file: !4, line: 4050, baseType: !1039, size: 32, align: 32, offset: 896)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1709, file: !4, line: 4054, baseType: !1039, size: 32, align: 32, offset: 928)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1709, file: !4, line: 4061, baseType: !1039, size: 32, align: 32, offset: 960)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1709, file: !4, line: 4065, baseType: !1039, size: 32, align: 32, offset: 992)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1709, file: !4, line: 4073, baseType: !1039, size: 32, align: 32, offset: 1024)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1709, file: !4, line: 4080, baseType: !1039, size: 32, align: 32, offset: 1056)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1709, file: !4, line: 4084, baseType: !1039, size: 32, align: 32, offset: 1088)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1674, file: !4, line: 5781, baseType: !1707, size: 64, align: 64, offset: 320)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1674, file: !4, line: 5787, baseType: !1096, size: 64, align: 32, offset: 384)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1674, file: !4, line: 5793, baseType: !1096, size: 64, align: 32, offset: 448)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1668, file: !1546, line: 126, baseType: !1039, size: 32, align: 32, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1635, file: !1546, line: 172, baseType: !1256, size: 64, align: 64, offset: 576)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1635, file: !1546, line: 177, baseType: !1053, size: 64, align: 64, offset: 640)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1635, file: !1546, line: 178, baseType: !1038, size: 32, align: 32, offset: 704)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1635, file: !1546, line: 180, baseType: !1078, size: 64, align: 64, offset: 768)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1635, file: !1546, line: 185, baseType: !1039, size: 32, align: 32, offset: 832)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1635, file: !1546, line: 190, baseType: !1078, size: 64, align: 64, offset: 896)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1635, file: !1546, line: 195, baseType: !1039, size: 32, align: 32, offset: 960)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1635, file: !1546, line: 200, baseType: !1256, size: 64, align: 64, offset: 1024)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1635, file: !1546, line: 201, baseType: !1039, size: 32, align: 32, offset: 1088)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1635, file: !1546, line: 202, baseType: !1303, size: 64, align: 64, offset: 1152)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1635, file: !1546, line: 203, baseType: !1039, size: 32, align: 32, offset: 1216)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1635, file: !1546, line: 205, baseType: !1039, size: 32, align: 32, offset: 1248)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1635, file: !1546, line: 206, baseType: !1039, size: 32, align: 32, offset: 1280)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1635, file: !1546, line: 209, baseType: !1296, size: 64, align: 64, offset: 1344)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1635, file: !1546, line: 212, baseType: !1296, size: 64, align: 64, offset: 1408)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1635, file: !1546, line: 213, baseType: !1303, size: 64, align: 64, offset: 1472)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1635, file: !1546, line: 215, baseType: !1039, size: 32, align: 32, offset: 1536)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1635, file: !1546, line: 217, baseType: !1039, size: 32, align: 32, offset: 1568)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1635, file: !1546, line: 220, baseType: !1039, size: 32, align: 32, offset: 1600)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1487, file: !4, line: 1598, baseType: !1078, size: 64, align: 64, offset: 384)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1487, file: !4, line: 1606, baseType: !1047, size: 64, align: 64, offset: 448)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1487, file: !4, line: 1614, baseType: !1039, size: 32, align: 32, offset: 512)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1487, file: !4, line: 1622, baseType: !1039, size: 32, align: 32, offset: 544)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1487, file: !4, line: 1628, baseType: !1039, size: 32, align: 32, offset: 576)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1487, file: !4, line: 1636, baseType: !1039, size: 32, align: 32, offset: 608)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1487, file: !4, line: 1643, baseType: !1039, size: 32, align: 32, offset: 640)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1487, file: !4, line: 1657, baseType: !1053, size: 64, align: 64, offset: 704)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1487, file: !4, line: 1658, baseType: !1039, size: 32, align: 32, offset: 768)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1487, file: !4, line: 1679, baseType: !1096, size: 64, align: 32, offset: 800)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1487, file: !4, line: 1688, baseType: !1039, size: 32, align: 32, offset: 864)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1487, file: !4, line: 1712, baseType: !1039, size: 32, align: 32, offset: 896)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1487, file: !4, line: 1729, baseType: !1039, size: 32, align: 32, offset: 928)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1487, file: !4, line: 1729, baseType: !1039, size: 32, align: 32, offset: 960)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1487, file: !4, line: 1744, baseType: !1039, size: 32, align: 32, offset: 992)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1487, file: !4, line: 1744, baseType: !1039, size: 32, align: 32, offset: 1024)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1487, file: !4, line: 1751, baseType: !1039, size: 32, align: 32, offset: 1056)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1487, file: !4, line: 1766, baseType: !667, size: 32, align: 32, offset: 1088)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1487, file: !4, line: 1791, baseType: !1782, size: 64, align: 64, offset: 1152)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64, align: 64)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{null, !1785, !1599, !1601, !1039, !1039, !1039}
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64, align: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1487, file: !4, line: 1808, baseType: !1787, size: 64, align: 64, offset: 1216)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64, align: 64)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!667, !1785, !1506}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1487, file: !4, line: 1816, baseType: !1039, size: 32, align: 32, offset: 1280)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1487, file: !4, line: 1825, baseType: !1792, size: 32, align: 32, offset: 1312)
!1792 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1487, file: !4, line: 1830, baseType: !1039, size: 32, align: 32, offset: 1344)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1487, file: !4, line: 1838, baseType: !1792, size: 32, align: 32, offset: 1376)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1487, file: !4, line: 1846, baseType: !1039, size: 32, align: 32, offset: 1408)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1487, file: !4, line: 1851, baseType: !1039, size: 32, align: 32, offset: 1440)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1487, file: !4, line: 1861, baseType: !1792, size: 32, align: 32, offset: 1472)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1487, file: !4, line: 1868, baseType: !1792, size: 32, align: 32, offset: 1504)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1487, file: !4, line: 1875, baseType: !1792, size: 32, align: 32, offset: 1536)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1487, file: !4, line: 1882, baseType: !1792, size: 32, align: 32, offset: 1568)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1487, file: !4, line: 1889, baseType: !1792, size: 32, align: 32, offset: 1600)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1487, file: !4, line: 1896, baseType: !1792, size: 32, align: 32, offset: 1632)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1487, file: !4, line: 1903, baseType: !1792, size: 32, align: 32, offset: 1664)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1487, file: !4, line: 1910, baseType: !1039, size: 32, align: 32, offset: 1696)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1487, file: !4, line: 1915, baseType: !1039, size: 32, align: 32, offset: 1728)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1487, file: !4, line: 1926, baseType: !1601, size: 64, align: 64, offset: 1792)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1487, file: !4, line: 1935, baseType: !1096, size: 64, align: 32, offset: 1856)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1487, file: !4, line: 1942, baseType: !1039, size: 32, align: 32, offset: 1920)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1487, file: !4, line: 1948, baseType: !1039, size: 32, align: 32, offset: 1952)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1487, file: !4, line: 1954, baseType: !1039, size: 32, align: 32, offset: 1984)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1487, file: !4, line: 1960, baseType: !1039, size: 32, align: 32, offset: 2016)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1487, file: !4, line: 1984, baseType: !1039, size: 32, align: 32, offset: 2048)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1487, file: !4, line: 1991, baseType: !1039, size: 32, align: 32, offset: 2080)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1487, file: !4, line: 1996, baseType: !1039, size: 32, align: 32, offset: 2112)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1487, file: !4, line: 2004, baseType: !1039, size: 32, align: 32, offset: 2144)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1487, file: !4, line: 2011, baseType: !1039, size: 32, align: 32, offset: 2176)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1487, file: !4, line: 2018, baseType: !1039, size: 32, align: 32, offset: 2208)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1487, file: !4, line: 2027, baseType: !1039, size: 32, align: 32, offset: 2240)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1487, file: !4, line: 2034, baseType: !1039, size: 32, align: 32, offset: 2272)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1487, file: !4, line: 2044, baseType: !1039, size: 32, align: 32, offset: 2304)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1487, file: !4, line: 2054, baseType: !1822, size: 64, align: 64, offset: 2368)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64, align: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1487, file: !4, line: 2061, baseType: !1822, size: 64, align: 64, offset: 2432)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1487, file: !4, line: 2066, baseType: !1039, size: 32, align: 32, offset: 2496)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1487, file: !4, line: 2070, baseType: !1039, size: 32, align: 32, offset: 2528)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1487, file: !4, line: 2078, baseType: !1039, size: 32, align: 32, offset: 2560)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1487, file: !4, line: 2085, baseType: !1039, size: 32, align: 32, offset: 2592)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1487, file: !4, line: 2092, baseType: !1039, size: 32, align: 32, offset: 2624)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1487, file: !4, line: 2099, baseType: !1039, size: 32, align: 32, offset: 2656)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1487, file: !4, line: 2106, baseType: !1039, size: 32, align: 32, offset: 2688)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1487, file: !4, line: 2113, baseType: !1039, size: 32, align: 32, offset: 2720)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1487, file: !4, line: 2120, baseType: !1039, size: 32, align: 32, offset: 2752)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1487, file: !4, line: 2125, baseType: !1039, size: 32, align: 32, offset: 2784)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1487, file: !4, line: 2133, baseType: !1039, size: 32, align: 32, offset: 2816)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1487, file: !4, line: 2140, baseType: !1039, size: 32, align: 32, offset: 2848)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1487, file: !4, line: 2145, baseType: !1039, size: 32, align: 32, offset: 2880)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1487, file: !4, line: 2153, baseType: !1039, size: 32, align: 32, offset: 2912)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1487, file: !4, line: 2158, baseType: !1039, size: 32, align: 32, offset: 2944)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1487, file: !4, line: 2166, baseType: !578, size: 32, align: 32, offset: 2976)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1487, file: !4, line: 2173, baseType: !596, size: 32, align: 32, offset: 3008)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1487, file: !4, line: 2180, baseType: !620, size: 32, align: 32, offset: 3040)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1487, file: !4, line: 2187, baseType: !571, size: 32, align: 32, offset: 3072)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1487, file: !4, line: 2194, baseType: !639, size: 32, align: 32, offset: 3104)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1487, file: !4, line: 2203, baseType: !1039, size: 32, align: 32, offset: 3136)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1487, file: !4, line: 2209, baseType: !889, size: 32, align: 32, offset: 3168)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1487, file: !4, line: 2212, baseType: !1039, size: 32, align: 32, offset: 3200)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1487, file: !4, line: 2213, baseType: !1039, size: 32, align: 32, offset: 3232)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1487, file: !4, line: 2220, baseType: !866, size: 32, align: 32, offset: 3264)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1487, file: !4, line: 2232, baseType: !1039, size: 32, align: 32, offset: 3296)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1487, file: !4, line: 2243, baseType: !1039, size: 32, align: 32, offset: 3328)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1487, file: !4, line: 2249, baseType: !1039, size: 32, align: 32, offset: 3360)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1487, file: !4, line: 2256, baseType: !1039, size: 32, align: 32, offset: 3392)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1487, file: !4, line: 2263, baseType: !1045, size: 64, align: 64, offset: 3456)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1487, file: !4, line: 2270, baseType: !1045, size: 64, align: 64, offset: 3520)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1487, file: !4, line: 2277, baseType: !897, size: 32, align: 32, offset: 3584)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1487, file: !4, line: 2285, baseType: !866, size: 32, align: 32, offset: 3616)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1487, file: !4, line: 2367, baseType: !1858, size: 64, align: 64, offset: 3648)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64, align: 64)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!1039, !1785, !1303, !1039}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1487, file: !4, line: 2383, baseType: !1039, size: 32, align: 32, offset: 3712)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1487, file: !4, line: 2386, baseType: !1792, size: 32, align: 32, offset: 3744)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1487, file: !4, line: 2387, baseType: !1792, size: 32, align: 32, offset: 3776)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1487, file: !4, line: 2394, baseType: !1039, size: 32, align: 32, offset: 3808)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1487, file: !4, line: 2401, baseType: !1039, size: 32, align: 32, offset: 3840)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1487, file: !4, line: 2408, baseType: !1039, size: 32, align: 32, offset: 3872)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1487, file: !4, line: 2415, baseType: !1039, size: 32, align: 32, offset: 3904)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1487, file: !4, line: 2422, baseType: !1039, size: 32, align: 32, offset: 3936)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1487, file: !4, line: 2423, baseType: !1870, size: 64, align: 64, offset: 3968)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64, align: 64)
!1871 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !4, line: 831, baseType: !1872)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !4, line: 826, size: 128, align: 32, elements: !1873)
!1873 = !{!1874, !1875, !1876, !1877}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1872, file: !4, line: 827, baseType: !1039, size: 32, align: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1872, file: !4, line: 828, baseType: !1039, size: 32, align: 32, offset: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1872, file: !4, line: 829, baseType: !1039, size: 32, align: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1872, file: !4, line: 830, baseType: !1792, size: 32, align: 32, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1487, file: !4, line: 2430, baseType: !1047, size: 64, align: 64, offset: 4032)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1487, file: !4, line: 2437, baseType: !1047, size: 64, align: 64, offset: 4096)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1487, file: !4, line: 2444, baseType: !1792, size: 32, align: 32, offset: 4160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1487, file: !4, line: 2451, baseType: !1792, size: 32, align: 32, offset: 4192)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1487, file: !4, line: 2458, baseType: !1039, size: 32, align: 32, offset: 4224)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1487, file: !4, line: 2469, baseType: !1039, size: 32, align: 32, offset: 4256)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1487, file: !4, line: 2475, baseType: !1039, size: 32, align: 32, offset: 4288)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1487, file: !4, line: 2481, baseType: !1039, size: 32, align: 32, offset: 4320)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1487, file: !4, line: 2485, baseType: !1039, size: 32, align: 32, offset: 4352)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1487, file: !4, line: 2489, baseType: !1039, size: 32, align: 32, offset: 4384)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1487, file: !4, line: 2493, baseType: !1039, size: 32, align: 32, offset: 4416)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1487, file: !4, line: 2501, baseType: !1039, size: 32, align: 32, offset: 4448)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1487, file: !4, line: 2506, baseType: !1039, size: 32, align: 32, offset: 4480)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1487, file: !4, line: 2510, baseType: !1039, size: 32, align: 32, offset: 4512)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1487, file: !4, line: 2514, baseType: !1047, size: 64, align: 64, offset: 4544)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1487, file: !4, line: 2528, baseType: !1894, size: 64, align: 64, offset: 4608)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64, align: 64)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{null, !1785, !1078, !1039, !1039}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1487, file: !4, line: 2534, baseType: !1039, size: 32, align: 32, offset: 4672)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1487, file: !4, line: 2545, baseType: !1039, size: 32, align: 32, offset: 4704)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1487, file: !4, line: 2547, baseType: !1039, size: 32, align: 32, offset: 4736)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1487, file: !4, line: 2549, baseType: !1039, size: 32, align: 32, offset: 4768)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1487, file: !4, line: 2551, baseType: !1039, size: 32, align: 32, offset: 4800)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1487, file: !4, line: 2553, baseType: !1039, size: 32, align: 32, offset: 4832)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1487, file: !4, line: 2555, baseType: !1039, size: 32, align: 32, offset: 4864)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1487, file: !4, line: 2557, baseType: !1039, size: 32, align: 32, offset: 4896)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1487, file: !4, line: 2559, baseType: !1039, size: 32, align: 32, offset: 4928)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1487, file: !4, line: 2563, baseType: !1039, size: 32, align: 32, offset: 4960)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1487, file: !4, line: 2571, baseType: !1051, size: 64, align: 64, offset: 4992)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1487, file: !4, line: 2579, baseType: !1051, size: 64, align: 64, offset: 5056)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1487, file: !4, line: 2586, baseType: !1039, size: 32, align: 32, offset: 5120)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1487, file: !4, line: 2615, baseType: !1039, size: 32, align: 32, offset: 5152)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1487, file: !4, line: 2627, baseType: !1039, size: 32, align: 32, offset: 5184)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1487, file: !4, line: 2637, baseType: !1039, size: 32, align: 32, offset: 5216)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1487, file: !4, line: 2681, baseType: !1039, size: 32, align: 32, offset: 5248)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1487, file: !4, line: 2709, baseType: !1047, size: 64, align: 64, offset: 5312)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1487, file: !4, line: 2716, baseType: !1916, size: 64, align: 64, offset: 5376)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64, align: 64)
!1917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !4, line: 3636, size: 896, align: 64, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1930, !1934, !1935, !1936, !1937, !1943, !1944, !1945, !1946, !1947}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1918, file: !4, line: 3642, baseType: !1121, size: 64, align: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1918, file: !4, line: 3649, baseType: !658, size: 32, align: 32, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1918, file: !4, line: 3656, baseType: !3, size: 32, align: 32, offset: 96)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1918, file: !4, line: 3663, baseType: !667, size: 32, align: 32, offset: 128)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1918, file: !4, line: 3669, baseType: !1039, size: 32, align: 32, offset: 160)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1918, file: !4, line: 3682, baseType: !1616, size: 64, align: 64, offset: 192)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1918, file: !4, line: 3698, baseType: !1927, size: 64, align: 64, offset: 256)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64, align: 64)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!1039, !1485, !1087, !1036}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1918, file: !4, line: 3712, baseType: !1931, size: 64, align: 64, offset: 320)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64, align: 64)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{!1039, !1485, !1039, !1087, !1036}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1918, file: !4, line: 3726, baseType: !1927, size: 64, align: 64, offset: 384)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1918, file: !4, line: 3737, baseType: !1532, size: 64, align: 64, offset: 448)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1918, file: !4, line: 3746, baseType: !1039, size: 32, align: 32, offset: 512)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1918, file: !4, line: 3757, baseType: !1938, size: 64, align: 64, offset: 576)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64, align: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{null, !1941}
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64, align: 64)
!1942 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !4, line: 3617, flags: DIFlagFwdDecl)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1918, file: !4, line: 3766, baseType: !1532, size: 64, align: 64, offset: 640)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1918, file: !4, line: 3774, baseType: !1532, size: 64, align: 64, offset: 704)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1918, file: !4, line: 3780, baseType: !1039, size: 32, align: 32, offset: 768)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1918, file: !4, line: 3785, baseType: !1039, size: 32, align: 32, offset: 800)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1918, file: !4, line: 3795, baseType: !1948, size: 64, align: 64, offset: 832)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64, align: 64)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{!1039, !1485, !1065}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1487, file: !4, line: 2728, baseType: !1078, size: 64, align: 64, offset: 5440)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1487, file: !4, line: 2735, baseType: !1329, size: 512, align: 64, offset: 5504)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1487, file: !4, line: 2742, baseType: !1039, size: 32, align: 32, offset: 6016)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1487, file: !4, line: 2755, baseType: !1039, size: 32, align: 32, offset: 6048)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1487, file: !4, line: 2776, baseType: !1039, size: 32, align: 32, offset: 6080)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1487, file: !4, line: 2783, baseType: !1039, size: 32, align: 32, offset: 6112)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1487, file: !4, line: 2791, baseType: !1039, size: 32, align: 32, offset: 6144)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1487, file: !4, line: 2802, baseType: !1303, size: 64, align: 64, offset: 6208)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1487, file: !4, line: 2811, baseType: !1039, size: 32, align: 32, offset: 6272)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1487, file: !4, line: 2821, baseType: !1039, size: 32, align: 32, offset: 6304)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1487, file: !4, line: 2830, baseType: !1039, size: 32, align: 32, offset: 6336)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1487, file: !4, line: 2840, baseType: !1039, size: 32, align: 32, offset: 6368)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1487, file: !4, line: 2851, baseType: !1964, size: 64, align: 64, offset: 6400)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64, align: 64)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!1039, !1785, !1967, !1078, !1601, !1039, !1039}
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64, align: 64)
!1968 = !DISubroutineType(types: !1969)
!1969 = !{!1039, !1785, !1078}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1487, file: !4, line: 2871, baseType: !1971, size: 64, align: 64, offset: 6464)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64, align: 64)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!1039, !1785, !1974, !1078, !1601, !1039}
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64, align: 64)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!1039, !1785, !1078, !1039, !1039}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1487, file: !4, line: 2878, baseType: !1039, size: 32, align: 32, offset: 6528)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1487, file: !4, line: 2885, baseType: !1039, size: 32, align: 32, offset: 6560)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1487, file: !4, line: 3005, baseType: !1039, size: 32, align: 32, offset: 6592)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1487, file: !4, line: 3013, baseType: !909, size: 32, align: 32, offset: 6624)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1487, file: !4, line: 3020, baseType: !909, size: 32, align: 32, offset: 6656)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1487, file: !4, line: 3027, baseType: !909, size: 32, align: 32, offset: 6688)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1487, file: !4, line: 3037, baseType: !1053, size: 64, align: 64, offset: 6720)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1487, file: !4, line: 3038, baseType: !1039, size: 32, align: 32, offset: 6784)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1487, file: !4, line: 3050, baseType: !1045, size: 64, align: 64, offset: 6848)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1487, file: !4, line: 3065, baseType: !1039, size: 32, align: 32, offset: 6912)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1487, file: !4, line: 3083, baseType: !1039, size: 32, align: 32, offset: 6944)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1487, file: !4, line: 3092, baseType: !1096, size: 64, align: 32, offset: 6976)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1487, file: !4, line: 3099, baseType: !667, size: 32, align: 32, offset: 7040)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1487, file: !4, line: 3106, baseType: !1096, size: 64, align: 32, offset: 7072)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1487, file: !4, line: 3113, baseType: !1992, size: 64, align: 64, offset: 7168)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64, align: 64)
!1993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1994)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !4, line: 740, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !4, line: 712, size: 384, align: 64, elements: !1996)
!1996 = !{!1997, !1998, !1999, !2000, !2001, !2002, !2005}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1995, file: !4, line: 713, baseType: !3, size: 32, align: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1995, file: !4, line: 714, baseType: !658, size: 32, align: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1995, file: !4, line: 720, baseType: !1121, size: 64, align: 64, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1995, file: !4, line: 724, baseType: !1121, size: 64, align: 64, offset: 128)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1995, file: !4, line: 728, baseType: !1039, size: 32, align: 32, offset: 192)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1995, file: !4, line: 734, baseType: !2003, size: 64, align: 64, offset: 256)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64, align: 64)
!2004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1121)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1995, file: !4, line: 739, baseType: !2006, size: 64, align: 64, offset: 320)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64, align: 64)
!2007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1523)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1487, file: !4, line: 3129, baseType: !1047, size: 64, align: 64, offset: 7232)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1487, file: !4, line: 3130, baseType: !1047, size: 64, align: 64, offset: 7296)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1487, file: !4, line: 3131, baseType: !1047, size: 64, align: 64, offset: 7360)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1487, file: !4, line: 3132, baseType: !1047, size: 64, align: 64, offset: 7424)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1487, file: !4, line: 3139, baseType: !1051, size: 64, align: 64, offset: 7488)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1487, file: !4, line: 3147, baseType: !1039, size: 32, align: 32, offset: 7552)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1487, file: !4, line: 3165, baseType: !1039, size: 32, align: 32, offset: 7584)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1487, file: !4, line: 3172, baseType: !1039, size: 32, align: 32, offset: 7616)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1487, file: !4, line: 3180, baseType: !1039, size: 32, align: 32, offset: 7648)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1487, file: !4, line: 3191, baseType: !1822, size: 64, align: 64, offset: 7680)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1487, file: !4, line: 3199, baseType: !1053, size: 64, align: 64, offset: 7744)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1487, file: !4, line: 3207, baseType: !1051, size: 64, align: 64, offset: 7808)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1487, file: !4, line: 3214, baseType: !1038, size: 32, align: 32, offset: 7872)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1487, file: !4, line: 3224, baseType: !1268, size: 64, align: 64, offset: 7936)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1487, file: !4, line: 3225, baseType: !1039, size: 32, align: 32, offset: 8000)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1487, file: !4, line: 3249, baseType: !1065, size: 64, align: 64, offset: 8064)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1487, file: !4, line: 3256, baseType: !1039, size: 32, align: 32, offset: 8128)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1487, file: !4, line: 3271, baseType: !1039, size: 32, align: 32, offset: 8160)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1487, file: !4, line: 3279, baseType: !1047, size: 64, align: 64, offset: 8192)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1487, file: !4, line: 3301, baseType: !1065, size: 64, align: 64, offset: 8256)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1487, file: !4, line: 3310, baseType: !1039, size: 32, align: 32, offset: 8320)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1487, file: !4, line: 3337, baseType: !1039, size: 32, align: 32, offset: 8352)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1487, file: !4, line: 3351, baseType: !1039, size: 32, align: 32, offset: 8384)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1487, file: !4, line: 3359, baseType: !1039, size: 32, align: 32, offset: 8416)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1480, file: !919, line: 880, baseType: !1078, size: 64, align: 64, offset: 128)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1480, file: !919, line: 894, baseType: !1096, size: 64, align: 32, offset: 192)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1480, file: !919, line: 904, baseType: !1047, size: 64, align: 64, offset: 256)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1480, file: !919, line: 914, baseType: !1047, size: 64, align: 64, offset: 320)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "nb_frames", scope: !1480, file: !919, line: 916, baseType: !1047, size: 64, align: 64, offset: 384)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "disposition", scope: !1480, file: !919, line: 918, baseType: !1039, size: 32, align: 32, offset: 448)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !1480, file: !919, line: 920, baseType: !909, size: 32, align: 32, offset: 480)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1480, file: !919, line: 927, baseType: !1096, size: 64, align: 32, offset: 512)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1480, file: !919, line: 929, baseType: !1352, size: 64, align: 64, offset: 576)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "avg_frame_rate", scope: !1480, file: !919, line: 938, baseType: !1096, size: 64, align: 32, offset: 640)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "attached_pic", scope: !1480, file: !919, line: 947, baseType: !1257, size: 704, align: 64, offset: 704)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1480, file: !919, line: 967, baseType: !1268, size: 64, align: 64, offset: 1408)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1480, file: !919, line: 971, baseType: !1039, size: 32, align: 32, offset: 1472)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1480, file: !919, line: 978, baseType: !1039, size: 32, align: 32, offset: 1504)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "r_frame_rate", scope: !1480, file: !919, line: 989, baseType: !1096, size: 64, align: 32, offset: 1536)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "recommended_encoder_configuration", scope: !1480, file: !919, line: 1000, baseType: !1051, size: 64, align: 64, offset: 1600)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "codecpar", scope: !1480, file: !919, line: 1012, baseType: !1707, size: 64, align: 64, offset: 1664)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1480, file: !919, line: 1055, baseType: !2050, size: 64, align: 64, offset: 1728)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64, align: 64)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1480, file: !919, line: 1028, size: 832, align: 64, elements: !2052)
!2052 = !{!2053, !2054, !2055, !2056, !2057, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !2051, file: !919, line: 1029, baseType: !1047, size: 64, align: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gcd", scope: !2051, file: !919, line: 1030, baseType: !1047, size: 64, align: 64, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "duration_count", scope: !2051, file: !919, line: 1031, baseType: !1039, size: 32, align: 32, offset: 128)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "rfps_duration_sum", scope: !2051, file: !919, line: 1032, baseType: !1047, size: 64, align: 64, offset: 192)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "duration_error", scope: !2051, file: !919, line: 1033, baseType: !2058, size: 64, align: 64, offset: 256)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64, align: 64)
!2059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 51072, align: 64, elements: !2060)
!2060 = !{!1104, !2061}
!2061 = !DISubrange(count: 399)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration", scope: !2051, file: !919, line: 1034, baseType: !1047, size: 64, align: 64, offset: 320)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration_fields", scope: !2051, file: !919, line: 1035, baseType: !1047, size: 64, align: 64, offset: 384)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "frame_delay_evidence", scope: !2051, file: !919, line: 1036, baseType: !1039, size: 32, align: 32, offset: 448)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "found_decoder", scope: !2051, file: !919, line: 1043, baseType: !1039, size: 32, align: 32, offset: 480)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "last_duration", scope: !2051, file: !919, line: 1045, baseType: !1047, size: 64, align: 64, offset: 512)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts", scope: !2051, file: !919, line: 1050, baseType: !1047, size: 64, align: 64, offset: 576)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts_idx", scope: !2051, file: !919, line: 1051, baseType: !1039, size: 32, align: 32, offset: 640)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts", scope: !2051, file: !919, line: 1052, baseType: !1047, size: 64, align: 64, offset: 704)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts_idx", scope: !2051, file: !919, line: 1053, baseType: !1039, size: 32, align: 32, offset: 768)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_bits", scope: !1480, file: !919, line: 1057, baseType: !1039, size: 32, align: 32, offset: 1792)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "first_dts", scope: !1480, file: !919, line: 1067, baseType: !1047, size: 64, align: 64, offset: 1856)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "cur_dts", scope: !1480, file: !919, line: 1068, baseType: !1047, size: 64, align: 64, offset: 1920)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_pts", scope: !1480, file: !919, line: 1069, baseType: !1047, size: 64, align: 64, offset: 1984)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_duration", scope: !1480, file: !919, line: 1070, baseType: !1039, size: 32, align: 32, offset: 2048)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "probe_packets", scope: !1480, file: !919, line: 1075, baseType: !1039, size: 32, align: 32, offset: 2080)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_nb_frames", scope: !1480, file: !919, line: 1080, baseType: !1039, size: 32, align: 32, offset: 2112)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "need_parsing", scope: !1480, file: !919, line: 1083, baseType: !918, size: 32, align: 32, offset: 2144)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !1480, file: !919, line: 1084, baseType: !2080, size: 64, align: 64, offset: 2176)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64, align: 64)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParserContext", file: !4, line: 5092, size: 2816, align: 64, elements: !2082)
!2082 = !{!2083, !2084, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !2081, file: !4, line: 5093, baseType: !1078, size: 64, align: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !2081, file: !4, line: 5094, baseType: !2085, size: 64, align: 64, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64, align: 64)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParser", file: !4, line: 5259, size: 512, align: 64, elements: !2087)
!2087 = !{!2088, !2092, !2093, !2099, !2104, !2108, !2112}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !2086, file: !4, line: 5260, baseType: !2089, size: 160, align: 32)
!2089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 160, align: 32, elements: !2090)
!2090 = !{!2091}
!2091 = !DISubrange(count: 5)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2086, file: !4, line: 5261, baseType: !1039, size: 32, align: 32, offset: 160)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "parser_init", scope: !2086, file: !4, line: 5262, baseType: !2094, size: 64, align: 64, offset: 192)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64, align: 64)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!1039, !2097}
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64, align: 64)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParserContext", file: !4, line: 5257, baseType: !2081)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "parser_parse", scope: !2086, file: !4, line: 5265, baseType: !2100, size: 64, align: 64, offset: 256)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64, align: 64)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!1039, !2097, !1485, !2103, !1601, !1087, !1039}
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64, align: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "parser_close", scope: !2086, file: !4, line: 5269, baseType: !2105, size: 64, align: 64, offset: 320)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64, align: 64)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{null, !2097}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2086, file: !4, line: 5270, baseType: !2109, size: 64, align: 64, offset: 384)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64, align: 64)
!2110 = !DISubroutineType(types: !2111)
!2111 = !{!1039, !1485, !1087, !1039}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2086, file: !4, line: 5271, baseType: !2085, size: 64, align: 64, offset: 448)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2081, file: !4, line: 5095, baseType: !1047, size: 64, align: 64, offset: 128)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "cur_offset", scope: !2081, file: !4, line: 5096, baseType: !1047, size: 64, align: 64, offset: 192)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "next_frame_offset", scope: !2081, file: !4, line: 5098, baseType: !1047, size: 64, align: 64, offset: 256)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !2081, file: !4, line: 5100, baseType: !1039, size: 32, align: 32, offset: 320)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !2081, file: !4, line: 5110, baseType: !1039, size: 32, align: 32, offset: 352)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2081, file: !4, line: 5111, baseType: !1047, size: 64, align: 64, offset: 384)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !2081, file: !4, line: 5112, baseType: !1047, size: 64, align: 64, offset: 448)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "last_pts", scope: !2081, file: !4, line: 5115, baseType: !1047, size: 64, align: 64, offset: 512)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !2081, file: !4, line: 5116, baseType: !1047, size: 64, align: 64, offset: 576)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_timestamp", scope: !2081, file: !4, line: 5117, baseType: !1039, size: 32, align: 32, offset: 640)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_start_index", scope: !2081, file: !4, line: 5120, baseType: !1039, size: 32, align: 32, offset: 672)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_offset", scope: !2081, file: !4, line: 5121, baseType: !2125, size: 256, align: 64, offset: 704)
!2125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1047, size: 256, align: 64, elements: !1586)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pts", scope: !2081, file: !4, line: 5122, baseType: !2125, size: 256, align: 64, offset: 960)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_dts", scope: !2081, file: !4, line: 5123, baseType: !2125, size: 256, align: 64, offset: 1216)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2081, file: !4, line: 5125, baseType: !1039, size: 32, align: 32, offset: 1472)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2081, file: !4, line: 5132, baseType: !1047, size: 64, align: 64, offset: 1536)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_end", scope: !2081, file: !4, line: 5133, baseType: !2125, size: 256, align: 64, offset: 1600)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !2081, file: !4, line: 5141, baseType: !1039, size: 32, align: 32, offset: 1856)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !2081, file: !4, line: 5148, baseType: !1047, size: 64, align: 64, offset: 1920)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "dts_sync_point", scope: !2081, file: !4, line: 5161, baseType: !1039, size: 32, align: 32, offset: 1984)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ref_dts_delta", scope: !2081, file: !4, line: 5176, baseType: !1039, size: 32, align: 32, offset: 2016)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "pts_dts_delta", scope: !2081, file: !4, line: 5190, baseType: !1039, size: 32, align: 32, offset: 2048)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pos", scope: !2081, file: !4, line: 5197, baseType: !2125, size: 256, align: 64, offset: 2112)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2081, file: !4, line: 5202, baseType: !1047, size: 64, align: 64, offset: 2368)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !2081, file: !4, line: 5207, baseType: !1047, size: 64, align: 64, offset: 2432)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2081, file: !4, line: 5214, baseType: !1039, size: 32, align: 32, offset: 2496)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !2081, file: !4, line: 5216, baseType: !889, size: 32, align: 32, offset: 2528)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "picture_structure", scope: !2081, file: !4, line: 5226, baseType: !927, size: 32, align: 32, offset: 2560)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "output_picture_number", scope: !2081, file: !4, line: 5234, baseType: !1039, size: 32, align: 32, offset: 2592)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2081, file: !4, line: 5239, baseType: !1039, size: 32, align: 32, offset: 2624)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2081, file: !4, line: 5240, baseType: !1039, size: 32, align: 32, offset: 2656)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !2081, file: !4, line: 5245, baseType: !1039, size: 32, align: 32, offset: 2688)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !2081, file: !4, line: 5246, baseType: !1039, size: 32, align: 32, offset: 2720)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2081, file: !4, line: 5256, baseType: !1039, size: 32, align: 32, offset: 2752)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "last_in_packet_buffer", scope: !1480, file: !919, line: 1089, baseType: !2149, size: 64, align: 64, offset: 2240)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64, align: 64)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketList", file: !919, line: 2003, size: 768, align: 64, elements: !2151)
!2151 = !{!2152, !2153}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2150, file: !919, line: 2004, baseType: !1257, size: 704, align: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2150, file: !919, line: 2005, baseType: !2149, size: 64, align: 64, offset: 704)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "probe_data", scope: !1480, file: !919, line: 1090, baseType: !1218, size: 256, align: 64, offset: 2304)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "pts_buffer", scope: !1480, file: !919, line: 1092, baseType: !2156, size: 1088, align: 64, offset: 2560)
!2156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1047, size: 1088, align: 64, elements: !2157)
!2157 = !{!2158}
!2158 = !DISubrange(count: 17)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries", scope: !1480, file: !919, line: 1094, baseType: !2160, size: 64, align: 64, offset: 3648)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64, align: 64)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIndexEntry", file: !919, line: 808, baseType: !2162)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIndexEntry", file: !919, line: 793, size: 192, align: 64, elements: !2163)
!2163 = !{!2164, !2165, !2166, !2167, !2168}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2162, file: !919, line: 794, baseType: !1047, size: 64, align: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !2162, file: !919, line: 795, baseType: !1047, size: 64, align: 64, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2162, file: !919, line: 805, baseType: !1039, size: 2, align: 32, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2162, file: !919, line: 806, baseType: !1039, size: 30, align: 32, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "min_distance", scope: !2162, file: !919, line: 807, baseType: !1039, size: 32, align: 32, offset: 160)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index_entries", scope: !1480, file: !919, line: 1096, baseType: !1039, size: 32, align: 32, offset: 3712)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries_allocated_size", scope: !1480, file: !919, line: 1097, baseType: !1038, size: 32, align: 32, offset: 3744)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "stream_identifier", scope: !1480, file: !919, line: 1104, baseType: !1039, size: 32, align: 32, offset: 3776)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !1480, file: !919, line: 1109, baseType: !1039, size: 32, align: 32, offset: 3808)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !1480, file: !919, line: 1110, baseType: !1039, size: 32, align: 32, offset: 3840)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_stream_idx", scope: !1480, file: !919, line: 1111, baseType: !1039, size: 32, align: 32, offset: 3872)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_size", scope: !1480, file: !919, line: 1113, baseType: !1047, size: 64, align: 64, offset: 3904)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_duration", scope: !1480, file: !919, line: 1114, baseType: !1047, size: 64, align: 64, offset: 3968)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "request_probe", scope: !1480, file: !919, line: 1123, baseType: !1039, size: 32, align: 32, offset: 4032)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "skip_to_keyframe", scope: !1480, file: !919, line: 1128, baseType: !1039, size: 32, align: 32, offset: 4064)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1480, file: !919, line: 1133, baseType: !1039, size: 32, align: 32, offset: 4096)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "start_skip_samples", scope: !1480, file: !919, line: 1142, baseType: !1047, size: 64, align: 64, offset: 4160)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "first_discard_sample", scope: !1480, file: !919, line: 1150, baseType: !1047, size: 64, align: 64, offset: 4224)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "last_discard_sample", scope: !1480, file: !919, line: 1157, baseType: !1047, size: 64, align: 64, offset: 4288)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "nb_decoded_frames", scope: !1480, file: !919, line: 1163, baseType: !1039, size: 32, align: 32, offset: 4352)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "mux_ts_offset", scope: !1480, file: !919, line: 1169, baseType: !1047, size: 64, align: 64, offset: 4416)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !1480, file: !919, line: 1174, baseType: !1047, size: 64, align: 64, offset: 4480)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !1480, file: !919, line: 1186, baseType: !1039, size: 32, align: 32, offset: 4544)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "update_initial_durations_done", scope: !1480, file: !919, line: 1191, baseType: !1039, size: 32, align: 32, offset: 4576)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error", scope: !1480, file: !919, line: 1196, baseType: !2156, size: 1088, align: 64, offset: 4608)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error_count", scope: !1480, file: !919, line: 1197, baseType: !2190, size: 136, align: 8, offset: 5696)
!2190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 136, align: 8, elements: !2157)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts_for_order_check", scope: !1480, file: !919, line: 1202, baseType: !1047, size: 64, align: 64, offset: 5888)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ordered", scope: !1480, file: !919, line: 1203, baseType: !1049, size: 8, align: 8, offset: 5952)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "dts_misordered", scope: !1480, file: !919, line: 1204, baseType: !1049, size: 8, align: 8, offset: 5960)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !1480, file: !919, line: 1209, baseType: !1039, size: 32, align: 32, offset: 5984)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "display_aspect_ratio", scope: !1480, file: !919, line: 1216, baseType: !1096, size: 64, align: 32, offset: 6016)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1480, file: !919, line: 1222, baseType: !2197, size: 64, align: 64, offset: 6080)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64, align: 64)
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStreamInternal", file: !919, line: 840, baseType: !2199)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStreamInternal", file: !1132, line: 149, size: 640, align: 64, elements: !2200)
!2200 = !{!2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2214, !2215}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "reorder", scope: !2199, file: !1132, line: 154, baseType: !1039, size: 32, align: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "bsfcs", scope: !2199, file: !1132, line: 161, baseType: !1671, size: 64, align: 64, offset: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfcs", scope: !2199, file: !1132, line: 162, baseType: !1039, size: 32, align: 32, offset: 128)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_checked", scope: !2199, file: !1132, line: 167, baseType: !1039, size: 32, align: 32, offset: 160)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2199, file: !1132, line: 172, baseType: !1485, size: 64, align: 64, offset: 192)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "avctx_inited", scope: !2199, file: !1132, line: 176, baseType: !1039, size: 32, align: 32, offset: 256)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "orig_codec_id", scope: !2199, file: !1132, line: 178, baseType: !3, size: 32, align: 32, offset: 288)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "extract_extradata", scope: !2199, file: !1132, line: 187, baseType: !2209, size: 192, align: 64, offset: 320)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2199, file: !1132, line: 183, size: 192, align: 64, elements: !2210)
!2210 = !{!2211, !2212, !2213}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "bsf", scope: !2209, file: !1132, line: 184, baseType: !1672, size: 64, align: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2209, file: !1132, line: 185, baseType: !1256, size: 64, align: 64, offset: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "inited", scope: !2209, file: !1132, line: 186, baseType: !1039, size: 32, align: 32, offset: 128)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "need_context_update", scope: !2199, file: !1132, line: 192, baseType: !1039, size: 32, align: 32, offset: 512)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "priv_pts", scope: !2199, file: !1132, line: 194, baseType: !2216, size: 64, align: 64, offset: 576)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64, align: 64)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrac", file: !1132, line: 63, baseType: !2218)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrac", file: !1132, line: 61, size: 192, align: 64, elements: !2219)
!2219 = !{!2220, !2221, !2222}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2218, file: !1132, line: 62, baseType: !1047, size: 64, align: 64)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2218, file: !1132, line: 62, baseType: !1047, size: 64, align: 64, offset: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !2218, file: !1132, line: 62, baseType: !1047, size: 64, align: 64, offset: 128)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1231, file: !919, line: 1417, baseType: !2224, size: 8192, align: 8, offset: 448)
!2224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1052, size: 8192, align: 8, elements: !2225)
!2225 = !{!2226}
!2226 = !DISubrange(count: 1024)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1231, file: !919, line: 1433, baseType: !1051, size: 64, align: 64, offset: 8640)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1231, file: !919, line: 1442, baseType: !1047, size: 64, align: 64, offset: 8704)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1231, file: !919, line: 1452, baseType: !1047, size: 64, align: 64, offset: 8768)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1231, file: !919, line: 1459, baseType: !1047, size: 64, align: 64, offset: 8832)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "packet_size", scope: !1231, file: !919, line: 1461, baseType: !1038, size: 32, align: 32, offset: 8896)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "max_delay", scope: !1231, file: !919, line: 1462, baseType: !1039, size: 32, align: 32, offset: 8928)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1231, file: !919, line: 1468, baseType: !1039, size: 32, align: 32, offset: 8960)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "probesize", scope: !1231, file: !919, line: 1503, baseType: !1047, size: 64, align: 64, offset: 9024)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "max_analyze_duration", scope: !1231, file: !919, line: 1511, baseType: !1047, size: 64, align: 64, offset: 9088)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1231, file: !919, line: 1513, baseType: !1087, size: 64, align: 64, offset: 9152)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1231, file: !919, line: 1514, baseType: !1039, size: 32, align: 32, offset: 9216)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "nb_programs", scope: !1231, file: !919, line: 1516, baseType: !1038, size: 32, align: 32, offset: 9248)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "programs", scope: !1231, file: !919, line: 1517, baseType: !2240, size: 64, align: 64, offset: 9280)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64, align: 64)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64, align: 64)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProgram", file: !919, line: 1284, baseType: !2243)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProgram", file: !919, line: 1259, size: 704, align: 64, elements: !2244)
!2244 = !{!2245, !2246, !2247, !2248, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2243, file: !919, line: 1260, baseType: !1039, size: 32, align: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2243, file: !919, line: 1261, baseType: !1039, size: 32, align: 32, offset: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !2243, file: !919, line: 1262, baseType: !909, size: 32, align: 32, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !2243, file: !919, line: 1263, baseType: !2249, size: 64, align: 64, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64, align: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "nb_stream_indexes", scope: !2243, file: !919, line: 1264, baseType: !1038, size: 32, align: 32, offset: 192)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2243, file: !919, line: 1265, baseType: !1352, size: 64, align: 64, offset: 256)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !2243, file: !919, line: 1267, baseType: !1039, size: 32, align: 32, offset: 320)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_pid", scope: !2243, file: !919, line: 1268, baseType: !1039, size: 32, align: 32, offset: 352)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "pcr_pid", scope: !2243, file: !919, line: 1269, baseType: !1039, size: 32, align: 32, offset: 384)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !2243, file: !919, line: 1270, baseType: !1039, size: 32, align: 32, offset: 416)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2243, file: !919, line: 1279, baseType: !1047, size: 64, align: 64, offset: 448)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "end_time", scope: !2243, file: !919, line: 1280, baseType: !1047, size: 64, align: 64, offset: 512)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !2243, file: !919, line: 1282, baseType: !1047, size: 64, align: 64, offset: 576)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !2243, file: !919, line: 1283, baseType: !1039, size: 32, align: 32, offset: 640)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec_id", scope: !1231, file: !919, line: 1523, baseType: !3, size: 32, align: 32, offset: 9344)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec_id", scope: !1231, file: !919, line: 1529, baseType: !3, size: 32, align: 32, offset: 9376)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec_id", scope: !1231, file: !919, line: 1535, baseType: !3, size: 32, align: 32, offset: 9408)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "max_index_size", scope: !1231, file: !919, line: 1547, baseType: !1038, size: 32, align: 32, offset: 9440)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "max_picture_buffer", scope: !1231, file: !919, line: 1553, baseType: !1038, size: 32, align: 32, offset: 9472)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "nb_chapters", scope: !1231, file: !919, line: 1566, baseType: !1038, size: 32, align: 32, offset: 9504)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "chapters", scope: !1231, file: !919, line: 1567, baseType: !2267, size: 64, align: 64, offset: 9536)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64, align: 64)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64, align: 64)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVChapter", file: !919, line: 1299, baseType: !2270)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVChapter", file: !919, line: 1294, size: 320, align: 64, elements: !2271)
!2271 = !{!2272, !2273, !2274, !2275, !2276}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2270, file: !919, line: 1295, baseType: !1039, size: 32, align: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !2270, file: !919, line: 1296, baseType: !1096, size: 64, align: 32, offset: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2270, file: !919, line: 1297, baseType: !1047, size: 64, align: 64, offset: 128)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2270, file: !919, line: 1297, baseType: !1047, size: 64, align: 64, offset: 192)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2270, file: !919, line: 1298, baseType: !1352, size: 64, align: 64, offset: 256)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1231, file: !919, line: 1577, baseType: !1352, size: 64, align: 64, offset: 9600)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_realtime", scope: !1231, file: !919, line: 1590, baseType: !1047, size: 64, align: 64, offset: 9664)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "fps_probe_size", scope: !1231, file: !919, line: 1597, baseType: !1039, size: 32, align: 32, offset: 9728)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "error_recognition", scope: !1231, file: !919, line: 1604, baseType: !1039, size: 32, align: 32, offset: 9760)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_callback", scope: !1231, file: !919, line: 1615, baseType: !2282, size: 128, align: 64, offset: 9792)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOInterruptCB", file: !650, line: 61, baseType: !2283)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOInterruptCB", file: !650, line: 58, size: 128, align: 64, elements: !2284)
!2284 = !{!2285, !2286}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2283, file: !650, line: 59, baseType: !1468, size: 64, align: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2283, file: !650, line: 60, baseType: !1078, size: 64, align: 64, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1231, file: !919, line: 1620, baseType: !1039, size: 32, align: 32, offset: 9920)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "max_interleave_delta", scope: !1231, file: !919, line: 1639, baseType: !1047, size: 64, align: 64, offset: 9984)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1231, file: !919, line: 1645, baseType: !1039, size: 32, align: 32, offset: 10048)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1231, file: !919, line: 1652, baseType: !1039, size: 32, align: 32, offset: 10080)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "max_ts_probe", scope: !1231, file: !919, line: 1659, baseType: !1039, size: 32, align: 32, offset: 10112)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts", scope: !1231, file: !919, line: 1668, baseType: !1039, size: 32, align: 32, offset: 10144)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "ts_id", scope: !1231, file: !919, line: 1677, baseType: !1039, size: 32, align: 32, offset: 10176)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "audio_preload", scope: !1231, file: !919, line: 1685, baseType: !1039, size: 32, align: 32, offset: 10208)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_duration", scope: !1231, file: !919, line: 1693, baseType: !1039, size: 32, align: 32, offset: 10240)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_size", scope: !1231, file: !919, line: 1701, baseType: !1039, size: 32, align: 32, offset: 10272)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "use_wallclock_as_timestamps", scope: !1231, file: !919, line: 1709, baseType: !1039, size: 32, align: 32, offset: 10304)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "avio_flags", scope: !1231, file: !919, line: 1716, baseType: !1039, size: 32, align: 32, offset: 10336)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "duration_estimation_method", scope: !1231, file: !919, line: 1724, baseType: !933, size: 32, align: 32, offset: 10368)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "skip_initial_bytes", scope: !1231, file: !919, line: 1731, baseType: !1047, size: 64, align: 64, offset: 10432)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "correct_ts_overflow", scope: !1231, file: !919, line: 1738, baseType: !1038, size: 32, align: 32, offset: 10496)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "seek2any", scope: !1231, file: !919, line: 1745, baseType: !1039, size: 32, align: 32, offset: 10528)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "flush_packets", scope: !1231, file: !919, line: 1752, baseType: !1039, size: 32, align: 32, offset: 10560)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "probe_score", scope: !1231, file: !919, line: 1761, baseType: !1039, size: 32, align: 32, offset: 10592)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "format_probesize", scope: !1231, file: !919, line: 1768, baseType: !1039, size: 32, align: 32, offset: 10624)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1231, file: !919, line: 1776, baseType: !1051, size: 64, align: 64, offset: 10688)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "format_whitelist", scope: !1231, file: !919, line: 1784, baseType: !1051, size: 64, align: 64, offset: 10752)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1231, file: !919, line: 1790, baseType: !2309, size: 64, align: 64, offset: 10816)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64, align: 64)
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatInternal", file: !919, line: 1321, baseType: !2311)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatInternal", file: !1132, line: 66, size: 1088, align: 64, elements: !2312)
!2312 = !{!2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "nb_interleaved_streams", scope: !2311, file: !1132, line: 71, baseType: !1039, size: 32, align: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "packet_buffer", scope: !2311, file: !1132, line: 78, baseType: !2149, size: 64, align: 64, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "packet_buffer_end", scope: !2311, file: !1132, line: 79, baseType: !2149, size: 64, align: 64, offset: 128)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "data_offset", scope: !2311, file: !1132, line: 82, baseType: !1047, size: 64, align: 64, offset: 192)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer", scope: !2311, file: !1132, line: 90, baseType: !2149, size: 64, align: 64, offset: 256)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer_end", scope: !2311, file: !1132, line: 91, baseType: !2149, size: 64, align: 64, offset: 320)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "parse_queue", scope: !2311, file: !1132, line: 95, baseType: !2149, size: 64, align: 64, offset: 384)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "parse_queue_end", scope: !2311, file: !1132, line: 96, baseType: !2149, size: 64, align: 64, offset: 448)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer_remaining_size", scope: !2311, file: !1132, line: 101, baseType: !1039, size: 32, align: 32, offset: 512)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2311, file: !1132, line: 108, baseType: !1047, size: 64, align: 64, offset: 576)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "offset_timebase", scope: !2311, file: !1132, line: 113, baseType: !1096, size: 64, align: 32, offset: 640)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "missing_ts_warning", scope: !2311, file: !1132, line: 116, baseType: !1039, size: 32, align: 32, offset: 704)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !2311, file: !1132, line: 119, baseType: !1039, size: 32, align: 32, offset: 736)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts_use_pts", scope: !2311, file: !1132, line: 121, baseType: !1039, size: 32, align: 32, offset: 768)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "shortest_end", scope: !2311, file: !1132, line: 126, baseType: !1047, size: 64, align: 64, offset: 832)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2311, file: !1132, line: 131, baseType: !1039, size: 32, align: 32, offset: 896)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "streams_initialized", scope: !2311, file: !1132, line: 136, baseType: !1039, size: 32, align: 32, offset: 928)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "id3v2_meta", scope: !2311, file: !1132, line: 141, baseType: !1352, size: 64, align: 64, offset: 960)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_codec_framerate", scope: !2311, file: !1132, line: 146, baseType: !1039, size: 32, align: 32, offset: 1024)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "io_repositioned", scope: !1231, file: !919, line: 1798, baseType: !1039, size: 32, align: 32, offset: 10880)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1231, file: !919, line: 1806, baseType: !2334, size: 64, align: 64, offset: 10944)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64, align: 64)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !4, line: 3610, baseType: !1495)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1231, file: !919, line: 1814, baseType: !2334, size: 64, align: 64, offset: 11008)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1231, file: !919, line: 1822, baseType: !2334, size: 64, align: 64, offset: 11072)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1231, file: !919, line: 1830, baseType: !2334, size: 64, align: 64, offset: 11136)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_header_padding", scope: !1231, file: !919, line: 1837, baseType: !1039, size: 32, align: 32, offset: 11200)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1231, file: !919, line: 1843, baseType: !1078, size: 64, align: 64, offset: 11264)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "control_message_cb", scope: !1231, file: !919, line: 1848, baseType: !2342, size: 64, align: 64, offset: 11328)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_format_control_message", file: !919, line: 1305, baseType: !1293)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "output_ts_offset", scope: !1231, file: !919, line: 1854, baseType: !1047, size: 64, align: 64, offset: 11392)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1231, file: !919, line: 1862, baseType: !1053, size: 64, align: 64, offset: 11456)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec_id", scope: !1231, file: !919, line: 1868, baseType: !3, size: 32, align: 32, offset: 11520)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "open_cb", scope: !1231, file: !919, line: 1889, baseType: !2347, size: 64, align: 64, offset: 11584)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 64, align: 64)
!2348 = !DISubroutineType(types: !2349)
!2349 = !{!1039, !1230, !2350, !1121, !1039, !2351, !2353}
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64, align: 64)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64, align: 64)
!2352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2282)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64, align: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1231, file: !919, line: 1897, baseType: !1051, size: 64, align: 64, offset: 11648)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "io_open", scope: !1231, file: !919, line: 1919, baseType: !2356, size: 64, align: 64, offset: 11712)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64, align: 64)
!2357 = !DISubroutineType(types: !2358)
!2358 = !{!1039, !1230, !2350, !1121, !1039, !2353}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "io_close", scope: !1231, file: !919, line: 1925, baseType: !2360, size: 64, align: 64, offset: 11776)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64, align: 64)
!2361 = !DISubroutineType(types: !2362)
!2362 = !{null, !1230, !1412}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1231, file: !919, line: 1932, baseType: !1051, size: 64, align: 64, offset: 11840)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "max_streams", scope: !1231, file: !919, line: 1939, baseType: !1039, size: 32, align: 32, offset: 11904)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "skip_estimate_duration_from_pts", scope: !1231, file: !919, line: 1946, baseType: !1039, size: 32, align: 32, offset: 11936)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1118, file: !919, line: 714, baseType: !1253, size: 64, align: 64, offset: 704)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "read_close", scope: !1118, file: !919, line: 720, baseType: !1227, size: 64, align: 64, offset: 768)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1118, file: !919, line: 730, baseType: !2369, size: 64, align: 64, offset: 832)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64, align: 64)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{!1039, !1230, !1039, !1047, !1039}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "read_timestamp", scope: !1118, file: !919, line: 737, baseType: !2373, size: 64, align: 64, offset: 896)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64, align: 64)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!1047, !1230, !1039, !1054, !1047}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "read_play", scope: !1118, file: !919, line: 744, baseType: !1227, size: 64, align: 64, offset: 960)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1118, file: !919, line: 750, baseType: !1227, size: 64, align: 64, offset: 1024)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek2", scope: !1118, file: !919, line: 758, baseType: !2379, size: 64, align: 64, offset: 1088)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64, align: 64)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!1039, !1230, !1039, !1047, !1047, !1047, !1039}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1118, file: !919, line: 764, baseType: !1386, size: 64, align: 64, offset: 1152)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1118, file: !919, line: 770, baseType: !1392, size: 64, align: 64, offset: 1216)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1118, file: !919, line: 776, baseType: !1392, size: 64, align: 64, offset: 1280)
!2385 = distinct !DIGlobalVariable(name: "ff_webm_dash_manifest_demuxer", scope: !0, file: !939, line: 4052, type: !1117, isLocal: false, isDefinition: true, variable: %struct.AVInputFormat* @ff_webm_dash_manifest_demuxer)
!2386 = distinct !DIGlobalVariable(name: "matroska_doctypes", scope: !0, file: !939, line: 759, type: !2387, isLocal: true, isDefinition: true, variable: [2 x i8*]* @matroska_doctypes)
!2387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2004, size: 128, align: 64, elements: !1107)
!2388 = distinct !DIGlobalVariable(name: "max_lengths", scope: !2389, file: !939, line: 1161, type: !2479, isLocal: true, isDefinition: true, variable: [11 x i64]* @ebml_parse_elem.max_lengths)
!2389 = distinct !DISubprogram(name: "ebml_parse_elem", scope: !939, file: !939, line: 1158, type: !2390, isLocal: true, isDefinition: true, scopeLine: 1160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!2390 = !DISubroutineType(types: !2391)
!2391 = !{!1039, !2392, !2459, !1078}
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64, align: 64)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaDemuxContext", file: !939, line: 370, baseType: !2394)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaDemuxContext", file: !939, line: 316, size: 16704, align: 64, elements: !2395)
!2395 = !{!2396, !2397, !2400, !2401, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2432, !2433, !2434, !2435, !2436, !2437, !2447, !2448, !2449, !2450, !2456, !2457, !2458}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2394, file: !939, line: 317, baseType: !1137, size: 64, align: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !2394, file: !939, line: 318, baseType: !2398, size: 64, align: 64, offset: 64)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64, align: 64)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatContext", file: !919, line: 1947, baseType: !1231)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "num_levels", scope: !2394, file: !939, line: 321, baseType: !1039, size: 32, align: 32, offset: 128)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !2394, file: !939, line: 322, baseType: !2402, size: 2048, align: 64, offset: 192)
!2402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2403, size: 2048, align: 64, elements: !2408)
!2403 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaLevel", file: !939, line: 303, baseType: !2404)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaLevel", file: !939, line: 300, size: 128, align: 64, elements: !2405)
!2405 = !{!2406, !2407}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2404, file: !939, line: 301, baseType: !1045, size: 64, align: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2404, file: !939, line: 302, baseType: !1045, size: 64, align: 64, offset: 64)
!2408 = !{!2409}
!2409 = !DISubrange(count: 16)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "level_up", scope: !2394, file: !939, line: 323, baseType: !1039, size: 32, align: 32, offset: 2240)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "current_id", scope: !2394, file: !939, line: 324, baseType: !1036, size: 32, align: 32, offset: 2272)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "time_scale", scope: !2394, file: !939, line: 326, baseType: !1045, size: 64, align: 64, offset: 2304)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2394, file: !939, line: 327, baseType: !1057, size: 64, align: 64, offset: 2368)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !2394, file: !939, line: 328, baseType: !1051, size: 64, align: 64, offset: 2432)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "muxingapp", scope: !2394, file: !939, line: 329, baseType: !1051, size: 64, align: 64, offset: 2496)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "date_utc", scope: !2394, file: !939, line: 330, baseType: !1060, size: 256, align: 64, offset: 2560)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !2394, file: !939, line: 331, baseType: !2418, size: 128, align: 64, offset: 2816)
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "EbmlList", file: !939, line: 103, baseType: !2419)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EbmlList", file: !939, line: 100, size: 128, align: 64, elements: !2420)
!2420 = !{!2421, !2422}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "nb_elem", scope: !2419, file: !939, line: 101, baseType: !1039, size: 32, align: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !2419, file: !939, line: 102, baseType: !1078, size: 64, align: 64, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "attachments", scope: !2394, file: !939, line: 332, baseType: !2418, size: 128, align: 64, offset: 2944)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "chapters", scope: !2394, file: !939, line: 333, baseType: !2418, size: 128, align: 64, offset: 3072)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2394, file: !939, line: 334, baseType: !2418, size: 128, align: 64, offset: 3200)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2394, file: !939, line: 335, baseType: !2418, size: 128, align: 64, offset: 3328)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "seekhead", scope: !2394, file: !939, line: 336, baseType: !2418, size: 128, align: 64, offset: 3456)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "segment_start", scope: !2394, file: !939, line: 339, baseType: !1047, size: 64, align: 64, offset: 3584)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2394, file: !939, line: 342, baseType: !2430, size: 64, align: 64, offset: 3648)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64, align: 64)
!2431 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketList", file: !919, line: 2006, baseType: !2150)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "queue_end", scope: !2394, file: !939, line: 343, baseType: !2430, size: 64, align: 64, offset: 3712)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2394, file: !939, line: 345, baseType: !1039, size: 32, align: 32, offset: 3776)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "skip_to_keyframe", scope: !2394, file: !939, line: 348, baseType: !1039, size: 32, align: 32, offset: 3808)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "skip_to_timecode", scope: !2394, file: !939, line: 349, baseType: !1045, size: 64, align: 64, offset: 3840)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "cues_parsing_deferred", scope: !2394, file: !939, line: 352, baseType: !1039, size: 32, align: 32, offset: 3904)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "level1_elems", scope: !2394, file: !939, line: 355, baseType: !2438, size: 12288, align: 64, offset: 3968)
!2438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2439, size: 12288, align: 64, elements: !2445)
!2439 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaLevel1Element", file: !939, line: 314, baseType: !2440)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaLevel1Element", file: !939, line: 310, size: 192, align: 64, elements: !2441)
!2441 = !{!2442, !2443, !2444}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2440, file: !939, line: 311, baseType: !1045, size: 64, align: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2440, file: !939, line: 312, baseType: !1045, size: 64, align: 64, offset: 64)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "parsed", scope: !2440, file: !939, line: 313, baseType: !1039, size: 32, align: 32, offset: 128)
!2445 = !{!2446}
!2446 = !DISubrange(count: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "num_level1_elems", scope: !2394, file: !939, line: 356, baseType: !1039, size: 32, align: 32, offset: 16256)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "current_cluster_num_blocks", scope: !2394, file: !939, line: 358, baseType: !1039, size: 32, align: 32, offset: 16288)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "current_cluster_pos", scope: !2394, file: !939, line: 359, baseType: !1047, size: 64, align: 64, offset: 16320)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "current_cluster", scope: !2394, file: !939, line: 360, baseType: !2451, size: 192, align: 64, offset: 16384)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaCluster", file: !939, line: 308, baseType: !2452)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaCluster", file: !939, line: 305, size: 192, align: 64, elements: !2453)
!2453 = !{!2454, !2455}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "timecode", scope: !2452, file: !939, line: 306, baseType: !1045, size: 64, align: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2452, file: !939, line: 307, baseType: !2418, size: 128, align: 64, offset: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "contains_ssa", scope: !2394, file: !939, line: 363, baseType: !1039, size: 32, align: 32, offset: 16576)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "is_live", scope: !2394, file: !939, line: 366, baseType: !1039, size: 32, align: 32, offset: 16608)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth", scope: !2394, file: !939, line: 369, baseType: !1039, size: 32, align: 32, offset: 16640)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64, align: 64)
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "EbmlSyntax", file: !939, line: 98, baseType: !2461)
!2461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2462)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EbmlSyntax", file: !939, line: 86, size: 192, align: 64, elements: !2463)
!2463 = !{!2464, !2465, !2467, !2468, !2469}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2462, file: !939, line: 87, baseType: !1036, size: 32, align: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2462, file: !939, line: 88, baseType: !2466, size: 32, align: 32, offset: 32)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "EbmlType", file: !939, line: 84, baseType: !938)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "list_elem_size", scope: !2462, file: !939, line: 89, baseType: !1039, size: 32, align: 32, offset: 64)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "data_offset", scope: !2462, file: !939, line: 90, baseType: !1039, size: 32, align: 32, offset: 96)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !2462, file: !939, line: 97, baseType: !2470, size: 64, align: 64, offset: 128)
!2470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2462, file: !939, line: 91, size: 64, align: 64, elements: !2471)
!2471 = !{!2472, !2473, !2474, !2475, !2476}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2470, file: !939, line: 92, baseType: !1047, size: 64, align: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2470, file: !939, line: 93, baseType: !1045, size: 64, align: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2470, file: !939, line: 94, baseType: !1057, size: 64, align: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2470, file: !939, line: 95, baseType: !1121, size: 64, align: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2470, file: !939, line: 96, baseType: !2477, size: 64, align: 64)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64, align: 64)
!2478 = !{}
!2479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1516, size: 704, align: 64, elements: !2480)
!2480 = !{!2481}
!2481 = !DISubrange(count: 11)
!2482 = distinct !DIGlobalVariable(name: "ebml_syntax", scope: !0, file: !939, line: 393, type: !2483, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @ebml_syntax)
!2483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 384, align: 64, elements: !1107)
!2484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2460)
!2485 = distinct !DIGlobalVariable(name: "ebml_header", scope: !0, file: !939, line: 382, type: !2486, isLocal: true, isDefinition: true, variable: <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { i8* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @ebml_header)
!2486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 1536, align: 64, elements: !1309)
!2487 = distinct !DIGlobalVariable(name: "matroska_segments", scope: !0, file: !939, line: 681, type: !2483, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_segments)
!2488 = distinct !DIGlobalVariable(name: "matroska_segment", scope: !0, file: !939, line: 669, type: !2489, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_segment)
!2489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 1728, align: 64, elements: !2490)
!2490 = !{!2491}
!2491 = !DISubrange(count: 9)
!2492 = distinct !DIGlobalVariable(name: "matroska_info", scope: !0, file: !939, line: 398, type: !2486, isLocal: true, isDefinition: true, variable: [8 x %struct.EbmlSyntax]* @matroska_info)
!2493 = distinct !DIGlobalVariable(name: "matroska_tracks", scope: !0, file: !939, line: 556, type: !2483, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_tracks)
!2494 = distinct !DIGlobalVariable(name: "matroska_track", scope: !0, file: !939, line: 526, type: !2495, isLocal: true, isDefinition: true, variable: <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { i8* } }, %struct.EbmlSyntax, { i32, i32, i32, i32, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_track)
!2495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 5184, align: 64, elements: !2496)
!2496 = !{!2497}
!2497 = !DISubrange(count: 27)
!2498 = distinct !DIGlobalVariable(name: "matroska_track_video", scope: !0, file: !939, line: 450, type: !2499, isLocal: true, isDefinition: true, variable: <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_track_video)
!2499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 3648, align: 64, elements: !2500)
!2500 = !{!2501}
!2501 = !DISubrange(count: 19)
!2502 = distinct !DIGlobalVariable(name: "matroska_track_video_color", scope: !0, file: !939, line: 423, type: !2503, isLocal: true, isDefinition: true, variable: <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_track_video_color)
!2503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 2880, align: 64, elements: !2504)
!2504 = !{!2505}
!2505 = !DISubrange(count: 15)
!2506 = distinct !DIGlobalVariable(name: "matroska_mastering_meta", scope: !0, file: !939, line: 409, type: !2507, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, %struct.EbmlSyntax }>* @matroska_mastering_meta)
!2507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 2112, align: 64, elements: !2480)
!2508 = distinct !DIGlobalVariable(name: "matroska_track_video_projection", scope: !0, file: !939, line: 441, type: !2509, isLocal: true, isDefinition: true, variable: <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, { i32, i32, i32, i32, { double } }, %struct.EbmlSyntax }>* @matroska_track_video_projection)
!2509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 1152, align: 64, elements: !2510)
!2510 = !{!2511}
!2511 = !DISubrange(count: 6)
!2512 = distinct !DIGlobalVariable(name: "matroska_track_audio", scope: !0, file: !939, line: 472, type: !2513, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { double } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_track_audio)
!2513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 960, align: 64, elements: !2090)
!2514 = distinct !DIGlobalVariable(name: "matroska_track_operation", scope: !0, file: !939, line: 521, type: !2483, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_track_operation)
!2515 = distinct !DIGlobalVariable(name: "matroska_track_combine_planes", scope: !0, file: !939, line: 516, type: !2483, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_track_combine_planes)
!2516 = distinct !DIGlobalVariable(name: "matroska_track_plane", scope: !0, file: !939, line: 510, type: !2517, isLocal: true, isDefinition: true, variable: [3 x %struct.EbmlSyntax]* @matroska_track_plane)
!2517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 576, align: 64, elements: !2518)
!2518 = !{!1103}
!2519 = distinct !DIGlobalVariable(name: "matroska_track_encodings", scope: !0, file: !939, line: 505, type: !2483, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_track_encodings)
!2520 = distinct !DIGlobalVariable(name: "matroska_track_encoding", scope: !0, file: !939, line: 496, type: !2509, isLocal: true, isDefinition: true, variable: <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_track_encoding)
!2521 = distinct !DIGlobalVariable(name: "matroska_track_encoding_compression", scope: !0, file: !939, line: 480, type: !2517, isLocal: true, isDefinition: true, variable: [3 x %struct.EbmlSyntax]* @matroska_track_encoding_compression)
!2522 = distinct !DIGlobalVariable(name: "matroska_track_encoding_encryption", scope: !0, file: !939, line: 486, type: !2486, isLocal: true, isDefinition: true, variable: [8 x %struct.EbmlSyntax]* @matroska_track_encoding_encryption)
!2523 = distinct !DIGlobalVariable(name: "matroska_attachments", scope: !0, file: !939, line: 570, type: !2483, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_attachments)
!2524 = distinct !DIGlobalVariable(name: "matroska_attachment", scope: !0, file: !939, line: 561, type: !2509, isLocal: true, isDefinition: true, variable: [6 x %struct.EbmlSyntax]* @matroska_attachment)
!2525 = distinct !DIGlobalVariable(name: "matroska_chapters", scope: !0, file: !939, line: 603, type: !2483, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_chapters)
!2526 = distinct !DIGlobalVariable(name: "matroska_chapter", scope: !0, file: !939, line: 594, type: !2509, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_chapter)
!2527 = distinct !DIGlobalVariable(name: "matroska_chapter_entry", scope: !0, file: !939, line: 582, type: !2489, isLocal: true, isDefinition: true, variable: <{ %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_chapter_entry)
!2528 = distinct !DIGlobalVariable(name: "matroska_chapter_display", scope: !0, file: !939, line: 575, type: !2529, isLocal: true, isDefinition: true, variable: [4 x %struct.EbmlSyntax]* @matroska_chapter_display)
!2529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 768, align: 64, elements: !1586)
!2530 = distinct !DIGlobalVariable(name: "matroska_index", scope: !0, file: !939, line: 623, type: !2483, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_index)
!2531 = distinct !DIGlobalVariable(name: "matroska_index_entry", scope: !0, file: !939, line: 617, type: !2517, isLocal: true, isDefinition: true, variable: <{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_index_entry)
!2532 = distinct !DIGlobalVariable(name: "matroska_index_pos", scope: !0, file: !939, line: 608, type: !2509, isLocal: true, isDefinition: true, variable: [6 x %struct.EbmlSyntax]* @matroska_index_pos)
!2533 = distinct !DIGlobalVariable(name: "matroska_tags", scope: !0, file: !939, line: 653, type: !2483, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_tags)
!2534 = distinct !DIGlobalVariable(name: "matroska_tag", scope: !0, file: !939, line: 647, type: !2517, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_tag)
!2535 = distinct !DIGlobalVariable(name: "matroska_simpletag", scope: !0, file: !939, line: 628, type: !2536, isLocal: true, isDefinition: true, variable: <{ %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { i8* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_simpletag)
!2536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 1344, align: 64, elements: !2537)
!2537 = !{!2538}
!2538 = !DISubrange(count: 7)
!2539 = distinct !DIGlobalVariable(name: "matroska_tagtargets", scope: !0, file: !939, line: 638, type: !2509, isLocal: true, isDefinition: true, variable: [6 x %struct.EbmlSyntax]* @matroska_tagtargets)
!2540 = distinct !DIGlobalVariable(name: "matroska_seekhead", scope: !0, file: !939, line: 664, type: !2483, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_seekhead)
!2541 = distinct !DIGlobalVariable(name: "matroska_seekhead_entry", scope: !0, file: !939, line: 658, type: !2517, isLocal: true, isDefinition: true, variable: [3 x %struct.EbmlSyntax]* @matroska_seekhead_entry)
!2542 = distinct !DIGlobalVariable(name: "sipr_bit_rate", scope: !2543, file: !939, line: 2419, type: !2546, isLocal: true, isDefinition: true, variable: [4 x i32]* @matroska_parse_tracks.sipr_bit_rate)
!2543 = distinct !DISubprogram(name: "matroska_parse_tracks", scope: !939, file: !939, line: 2077, type: !2544, isLocal: true, isDefinition: true, scopeLine: 2078, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!1039, !2398}
!2546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1510, size: 128, align: 32, elements: !1586)
!2547 = distinct !DIGlobalVariable(name: "aac_profiles", scope: !2548, file: !939, line: 1724, type: !2551, isLocal: true, isDefinition: true, variable: [3 x i8*]* @matroska_aac_profile.aac_profiles)
!2548 = distinct !DISubprogram(name: "matroska_aac_profile", scope: !939, file: !939, line: 1722, type: !2549, isLocal: true, isDefinition: true, scopeLine: 1723, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!2549 = !DISubroutineType(types: !2550)
!2550 = !{!1039, !1051}
!2551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2004, size: 192, align: 64, elements: !2518)
!2552 = distinct !DIGlobalVariable(name: "matroska_cluster_incremental_parsing", scope: !0, file: !939, line: 727, type: !2507, isLocal: true, isDefinition: true, variable: <{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_cluster_incremental_parsing)
!2553 = distinct !DIGlobalVariable(name: "matroska_blockgroup", scope: !0, file: !939, line: 697, type: !2489, isLocal: true, isDefinition: true, variable: <{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_blockgroup)
!2554 = distinct !DIGlobalVariable(name: "matroska_blockadditions", scope: !0, file: !939, line: 692, type: !2483, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax }>* @matroska_blockadditions)
!2555 = distinct !DIGlobalVariable(name: "matroska_blockmore", scope: !0, file: !939, line: 686, type: !2517, isLocal: true, isDefinition: true, variable: [3 x %struct.EbmlSyntax]* @matroska_blockmore)
!2556 = distinct !DIGlobalVariable(name: "matroska_clusters_incremental", scope: !0, file: !939, line: 750, type: !2509, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_clusters_incremental)
!2557 = distinct !DIGlobalVariable(name: "matroska_cluster_incremental", scope: !0, file: !939, line: 741, type: !2509, isLocal: true, isDefinition: true, variable: [6 x %struct.EbmlSyntax]* @matroska_cluster_incremental)
!2558 = distinct !DIGlobalVariable(name: "matroska_clusters", scope: !0, file: !939, line: 718, type: !2509, isLocal: true, isDefinition: true, variable: <{ { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_clusters)
!2559 = distinct !DIGlobalVariable(name: "matroska_cluster", scope: !0, file: !939, line: 709, type: !2509, isLocal: true, isDefinition: true, variable: <{ %struct.EbmlSyntax, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, { i32, i32, i32, i32, { %struct.EbmlSyntax* } }, %struct.EbmlSyntax, %struct.EbmlSyntax, %struct.EbmlSyntax }>* @matroska_cluster)
!2560 = distinct !DIGlobalVariable(name: "webm_dash_class", scope: !0, file: !939, line: 4032, type: !1138, isLocal: true, isDefinition: true, variable: %struct.AVClass* @webm_dash_class)
!2561 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !939, line: 4026, type: !2562, isLocal: true, isDefinition: true, variable: [3 x %struct.AVOption]* @options)
!2562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2563, size: 1536, align: 64, elements: !2518)
!2563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2564)
!2564 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !464, line: 301, baseType: !1150)
!2565 = !{i32 2, !"Dwarf Version", i32 4}
!2566 = !{i32 2, !"Debug Info Version", i32 3}
!2567 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2568 = distinct !DISubprogram(name: "matroska_probe", scope: !939, file: !939, line: 1296, type: !1215, isLocal: true, isDefinition: true, scopeLine: 1297, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!2569 = !DILocalVariable(name: "x", arg: 1, scope: !2570, file: !2571, line: 66, type: !1036)
!2570 = distinct !DISubprogram(name: "av_bswap32", scope: !2571, file: !2571, line: 66, type: !2572, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!2571 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2572 = !DISubroutineType(types: !2573)
!2573 = !{!1036, !1036}
!2574 = !DIExpression()
!2575 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !2576)
!2576 = distinct !DILocation(line: 1302, column: 9, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2568, file: !939, line: 1302, column: 9)
!2578 = !DILocalVariable(name: "p", arg: 1, scope: !2568, file: !939, line: 1296, type: !1217)
!2579 = !DILocation(line: 1296, column: 40, scope: !2568)
!2580 = !DILocalVariable(name: "total", scope: !2568, file: !939, line: 1298, type: !1045)
!2581 = !DILocation(line: 1298, column: 14, scope: !2568)
!2582 = !DILocalVariable(name: "len_mask", scope: !2568, file: !939, line: 1299, type: !1039)
!2583 = !DILocation(line: 1299, column: 9, scope: !2568)
!2584 = !DILocalVariable(name: "size", scope: !2568, file: !939, line: 1299, type: !1039)
!2585 = !DILocation(line: 1299, column: 26, scope: !2568)
!2586 = !DILocalVariable(name: "n", scope: !2568, file: !939, line: 1299, type: !1039)
!2587 = !DILocation(line: 1299, column: 36, scope: !2568)
!2588 = !DILocalVariable(name: "i", scope: !2568, file: !939, line: 1299, type: !1039)
!2589 = !DILocation(line: 1299, column: 43, scope: !2568)
!2590 = !DILocation(line: 1302, column: 52, scope: !2577)
!2591 = !DILocation(line: 1302, column: 55, scope: !2577)
!2592 = !DILocation(line: 1302, column: 62, scope: !2577)
!2593 = !DILocation(line: 1302, column: 9, scope: !2577)
!2594 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !2576)
!2595 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !2576)
!2596 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !2576)
!2597 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !2576)
!2598 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !2576)
!2599 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !2576)
!2600 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !2576)
!2601 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !2576)
!2602 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !2576)
!2603 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !2576)
!2604 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !2576)
!2605 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !2576)
!2606 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !2576)
!2607 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !2576)
!2608 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !2576)
!2609 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !2576)
!2610 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !2576)
!2611 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !2576)
!2612 = !DILocation(line: 1302, column: 66, scope: !2577)
!2613 = !DILocation(line: 1302, column: 9, scope: !2568)
!2614 = !DILocation(line: 1303, column: 9, scope: !2577)
!2615 = !DILocation(line: 1306, column: 13, scope: !2568)
!2616 = !DILocation(line: 1306, column: 16, scope: !2568)
!2617 = !DILocation(line: 1306, column: 11, scope: !2568)
!2618 = !DILocation(line: 1307, column: 5, scope: !2568)
!2619 = !DILocation(line: 1307, column: 12, scope: !2620)
!2620 = !DILexicalBlockFile(scope: !2568, file: !939, discriminator: 1)
!2621 = !DILocation(line: 1307, column: 17, scope: !2620)
!2622 = !DILocation(line: 1307, column: 22, scope: !2620)
!2623 = !DILocation(line: 1307, column: 27, scope: !2624)
!2624 = !DILexicalBlockFile(scope: !2568, file: !939, discriminator: 2)
!2625 = !DILocation(line: 1307, column: 35, scope: !2624)
!2626 = !DILocation(line: 1307, column: 33, scope: !2624)
!2627 = !DILocation(line: 1307, column: 25, scope: !2624)
!2628 = !DILocation(line: 1307, column: 5, scope: !2629)
!2629 = !DILexicalBlockFile(scope: !2568, file: !939, discriminator: 3)
!2630 = !DILocation(line: 1308, column: 13, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2568, file: !939, line: 1307, column: 46)
!2632 = !DILocation(line: 1309, column: 18, scope: !2631)
!2633 = !DILocation(line: 1307, column: 5, scope: !2634)
!2634 = !DILexicalBlockFile(scope: !2568, file: !939, discriminator: 4)
!2635 = distinct !{!2635, !2618}
!2636 = !DILocation(line: 1311, column: 9, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2568, file: !939, line: 1311, column: 9)
!2638 = !DILocation(line: 1311, column: 14, scope: !2637)
!2639 = !DILocation(line: 1311, column: 9, scope: !2568)
!2640 = !DILocation(line: 1312, column: 9, scope: !2637)
!2641 = !DILocation(line: 1313, column: 15, scope: !2568)
!2642 = !DILocation(line: 1313, column: 24, scope: !2568)
!2643 = !DILocation(line: 1313, column: 14, scope: !2568)
!2644 = !DILocation(line: 1313, column: 11, scope: !2568)
!2645 = !DILocation(line: 1314, column: 5, scope: !2568)
!2646 = !DILocation(line: 1314, column: 12, scope: !2620)
!2647 = !DILocation(line: 1314, column: 16, scope: !2620)
!2648 = !DILocation(line: 1314, column: 14, scope: !2620)
!2649 = !DILocation(line: 1314, column: 5, scope: !2620)
!2650 = !DILocation(line: 1315, column: 18, scope: !2568)
!2651 = !DILocation(line: 1315, column: 24, scope: !2568)
!2652 = !DILocation(line: 1315, column: 44, scope: !2568)
!2653 = !DILocation(line: 1315, column: 41, scope: !2568)
!2654 = !DILocation(line: 1315, column: 32, scope: !2568)
!2655 = !DILocation(line: 1315, column: 35, scope: !2568)
!2656 = !DILocation(line: 1315, column: 30, scope: !2568)
!2657 = !DILocation(line: 1315, column: 15, scope: !2568)
!2658 = !DILocation(line: 1314, column: 5, scope: !2624)
!2659 = distinct !{!2659, !2645}
!2660 = !DILocation(line: 1318, column: 9, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2568, file: !939, line: 1318, column: 9)
!2662 = !DILocation(line: 1318, column: 12, scope: !2661)
!2663 = !DILocation(line: 1318, column: 27, scope: !2661)
!2664 = !DILocation(line: 1318, column: 25, scope: !2661)
!2665 = !DILocation(line: 1318, column: 23, scope: !2661)
!2666 = !DILocation(line: 1318, column: 34, scope: !2661)
!2667 = !DILocation(line: 1318, column: 32, scope: !2661)
!2668 = !DILocation(line: 1318, column: 21, scope: !2661)
!2669 = !DILocation(line: 1318, column: 9, scope: !2568)
!2670 = !DILocation(line: 1319, column: 9, scope: !2661)
!2671 = !DILocation(line: 1325, column: 12, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2568, file: !939, line: 1325, column: 5)
!2673 = !DILocation(line: 1325, column: 10, scope: !2672)
!2674 = !DILocation(line: 1325, column: 17, scope: !2675)
!2675 = !DILexicalBlockFile(scope: !2676, file: !939, discriminator: 1)
!2676 = distinct !DILexicalBlock(scope: !2672, file: !939, line: 1325, column: 5)
!2677 = !DILocation(line: 1325, column: 19, scope: !2675)
!2678 = !DILocation(line: 1325, column: 5, scope: !2675)
!2679 = !DILocalVariable(name: "probelen", scope: !2680, file: !939, line: 1326, type: !1296)
!2680 = distinct !DILexicalBlock(scope: !2676, file: !939, line: 1325, column: 88)
!2681 = !DILocation(line: 1326, column: 16, scope: !2680)
!2682 = !DILocation(line: 1326, column: 52, scope: !2680)
!2683 = !DILocation(line: 1326, column: 34, scope: !2680)
!2684 = !DILocation(line: 1326, column: 27, scope: !2680)
!2685 = !DILocation(line: 1327, column: 13, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2680, file: !939, line: 1327, column: 13)
!2687 = !DILocation(line: 1327, column: 21, scope: !2686)
!2688 = !DILocation(line: 1327, column: 19, scope: !2686)
!2689 = !DILocation(line: 1327, column: 13, scope: !2680)
!2690 = !DILocation(line: 1328, column: 13, scope: !2686)
!2691 = !DILocation(line: 1329, column: 22, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2680, file: !939, line: 1329, column: 9)
!2693 = !DILocation(line: 1329, column: 20, scope: !2692)
!2694 = !DILocation(line: 1329, column: 16, scope: !2692)
!2695 = !DILocation(line: 1329, column: 14, scope: !2692)
!2696 = !DILocation(line: 1329, column: 28, scope: !2697)
!2697 = !DILexicalBlockFile(scope: !2698, file: !939, discriminator: 1)
!2698 = distinct !DILexicalBlock(scope: !2692, file: !939, line: 1329, column: 9)
!2699 = !DILocation(line: 1329, column: 37, scope: !2697)
!2700 = !DILocation(line: 1329, column: 35, scope: !2697)
!2701 = !DILocation(line: 1329, column: 33, scope: !2697)
!2702 = !DILocation(line: 1329, column: 44, scope: !2697)
!2703 = !DILocation(line: 1329, column: 42, scope: !2697)
!2704 = !DILocation(line: 1329, column: 52, scope: !2697)
!2705 = !DILocation(line: 1329, column: 50, scope: !2697)
!2706 = !DILocation(line: 1329, column: 30, scope: !2697)
!2707 = !DILocation(line: 1329, column: 9, scope: !2697)
!2708 = !DILocation(line: 1330, column: 25, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2698, file: !939, line: 1330, column: 17)
!2710 = !DILocation(line: 1330, column: 28, scope: !2709)
!2711 = !DILocation(line: 1330, column: 34, scope: !2709)
!2712 = !DILocation(line: 1330, column: 32, scope: !2709)
!2713 = !DILocation(line: 1330, column: 55, scope: !2709)
!2714 = !DILocation(line: 1330, column: 37, scope: !2709)
!2715 = !DILocation(line: 1330, column: 59, scope: !2709)
!2716 = !DILocation(line: 1330, column: 18, scope: !2709)
!2717 = !DILocation(line: 1330, column: 17, scope: !2698)
!2718 = !DILocation(line: 1331, column: 17, scope: !2709)
!2719 = !DILocation(line: 1330, column: 67, scope: !2720)
!2720 = !DILexicalBlockFile(scope: !2709, file: !939, discriminator: 1)
!2721 = !DILocation(line: 1329, column: 63, scope: !2722)
!2722 = !DILexicalBlockFile(scope: !2698, file: !939, discriminator: 2)
!2723 = !DILocation(line: 1329, column: 9, scope: !2722)
!2724 = distinct !{!2724, !2725}
!2725 = !DILocation(line: 1329, column: 9, scope: !2680)
!2726 = !DILocation(line: 1332, column: 5, scope: !2680)
!2727 = !DILocation(line: 1325, column: 84, scope: !2728)
!2728 = !DILexicalBlockFile(scope: !2676, file: !939, discriminator: 2)
!2729 = !DILocation(line: 1325, column: 5, scope: !2728)
!2730 = distinct !{!2730, !2731}
!2731 = !DILocation(line: 1325, column: 5, scope: !2568)
!2732 = !DILocation(line: 1335, column: 5, scope: !2568)
!2733 = !DILocation(line: 1336, column: 1, scope: !2568)
!2734 = distinct !DISubprogram(name: "matroska_read_header", scope: !939, file: !939, line: 2601, type: !2544, isLocal: true, isDefinition: true, scopeLine: 2602, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!2735 = !DILocalVariable(name: "s", arg: 1, scope: !2736, file: !650, line: 557, type: !1412)
!2736 = distinct !DISubprogram(name: "avio_tell", scope: !650, file: !650, line: 557, type: !2737, isLocal: true, isDefinition: true, scopeLine: 558, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{!1047, !1412}
!2739 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !2740)
!2740 = distinct !DILocation(line: 2657, column: 15, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2734, file: !939, line: 2653, column: 22)
!2742 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !2743)
!2743 = distinct !DILocation(line: 2650, column: 11, scope: !2734)
!2744 = !DILocalVariable(name: "s", arg: 1, scope: !2734, file: !939, line: 2601, type: !2398)
!2745 = !DILocation(line: 2601, column: 50, scope: !2734)
!2746 = !DILocalVariable(name: "matroska", scope: !2734, file: !939, line: 2603, type: !2392)
!2747 = !DILocation(line: 2603, column: 27, scope: !2734)
!2748 = !DILocation(line: 2603, column: 38, scope: !2734)
!2749 = !DILocation(line: 2603, column: 41, scope: !2734)
!2750 = !DILocalVariable(name: "attachments_list", scope: !2734, file: !939, line: 2604, type: !2751)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64, align: 64)
!2752 = !DILocation(line: 2604, column: 15, scope: !2734)
!2753 = !DILocation(line: 2604, column: 35, scope: !2734)
!2754 = !DILocation(line: 2604, column: 45, scope: !2734)
!2755 = !DILocalVariable(name: "chapters_list", scope: !2734, file: !939, line: 2605, type: !2751)
!2756 = !DILocation(line: 2605, column: 15, scope: !2734)
!2757 = !DILocation(line: 2605, column: 32, scope: !2734)
!2758 = !DILocation(line: 2605, column: 42, scope: !2734)
!2759 = !DILocalVariable(name: "attachments", scope: !2734, file: !939, line: 2606, type: !2760)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64, align: 64)
!2761 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaAttachment", file: !939, line: 253, baseType: !2762)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaAttachment", file: !939, line: 246, size: 512, align: 64, elements: !2763)
!2763 = !{!2764, !2765, !2766, !2767, !2768}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2762, file: !939, line: 247, baseType: !1045, size: 64, align: 64)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !2762, file: !939, line: 248, baseType: !1051, size: 64, align: 64, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "mime", scope: !2762, file: !939, line: 249, baseType: !1051, size: 64, align: 64, offset: 128)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "bin", scope: !2762, file: !939, line: 250, baseType: !1060, size: 256, align: 64, offset: 192)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !2762, file: !939, line: 252, baseType: !1478, size: 64, align: 64, offset: 448)
!2769 = !DILocation(line: 2606, column: 25, scope: !2734)
!2770 = !DILocalVariable(name: "chapters", scope: !2734, file: !939, line: 2607, type: !2771)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64, align: 64)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaChapter", file: !939, line: 262, baseType: !2773)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaChapter", file: !939, line: 255, size: 320, align: 64, elements: !2774)
!2774 = !{!2775, !2776, !2777, !2778, !2779}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2773, file: !939, line: 256, baseType: !1045, size: 64, align: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2773, file: !939, line: 257, baseType: !1045, size: 64, align: 64, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2773, file: !939, line: 258, baseType: !1045, size: 64, align: 64, offset: 128)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !2773, file: !939, line: 259, baseType: !1051, size: 64, align: 64, offset: 192)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "chapter", scope: !2773, file: !939, line: 261, baseType: !2268, size: 64, align: 64, offset: 256)
!2780 = !DILocation(line: 2607, column: 22, scope: !2734)
!2781 = !DILocalVariable(name: "max_start", scope: !2734, file: !939, line: 2608, type: !1045)
!2782 = !DILocation(line: 2608, column: 14, scope: !2734)
!2783 = !DILocalVariable(name: "pos", scope: !2734, file: !939, line: 2609, type: !1047)
!2784 = !DILocation(line: 2609, column: 13, scope: !2734)
!2785 = !DILocalVariable(name: "ebml", scope: !2734, file: !939, line: 2610, type: !2786)
!2786 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ebml", file: !939, line: 118, baseType: !2787)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Ebml", file: !939, line: 112, size: 320, align: 64, elements: !2788)
!2788 = !{!2789, !2790, !2791, !2792, !2793}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2787, file: !939, line: 113, baseType: !1045, size: 64, align: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2787, file: !939, line: 114, baseType: !1045, size: 64, align: 64, offset: 64)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "id_length", scope: !2787, file: !939, line: 115, baseType: !1045, size: 64, align: 64, offset: 128)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "doctype", scope: !2787, file: !939, line: 116, baseType: !1051, size: 64, align: 64, offset: 192)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "doctype_version", scope: !2787, file: !939, line: 117, baseType: !1045, size: 64, align: 64, offset: 256)
!2794 = !DILocation(line: 2610, column: 10, scope: !2734)
!2795 = !DILocalVariable(name: "i", scope: !2734, file: !939, line: 2611, type: !1039)
!2796 = !DILocation(line: 2611, column: 9, scope: !2734)
!2797 = !DILocalVariable(name: "j", scope: !2734, file: !939, line: 2611, type: !1039)
!2798 = !DILocation(line: 2611, column: 12, scope: !2734)
!2799 = !DILocalVariable(name: "res", scope: !2734, file: !939, line: 2611, type: !1039)
!2800 = !DILocation(line: 2611, column: 15, scope: !2734)
!2801 = !DILocation(line: 2613, column: 21, scope: !2734)
!2802 = !DILocation(line: 2613, column: 5, scope: !2734)
!2803 = !DILocation(line: 2613, column: 15, scope: !2734)
!2804 = !DILocation(line: 2613, column: 19, scope: !2734)
!2805 = !DILocation(line: 2614, column: 5, scope: !2734)
!2806 = !DILocation(line: 2614, column: 15, scope: !2734)
!2807 = !DILocation(line: 2614, column: 37, scope: !2734)
!2808 = !DILocation(line: 2617, column: 20, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2734, file: !939, line: 2617, column: 9)
!2810 = !DILocation(line: 2617, column: 43, scope: !2809)
!2811 = !DILocation(line: 2617, column: 9, scope: !2809)
!2812 = !DILocation(line: 2617, column: 50, scope: !2809)
!2813 = !DILocation(line: 2617, column: 59, scope: !2814)
!2814 = !DILexicalBlockFile(scope: !2809, file: !939, discriminator: 1)
!2815 = !DILocation(line: 2617, column: 54, scope: !2814)
!2816 = !DILocation(line: 2617, column: 9, scope: !2814)
!2817 = !DILocation(line: 2618, column: 16, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2809, file: !939, line: 2617, column: 68)
!2819 = !DILocation(line: 2618, column: 26, scope: !2818)
!2820 = !DILocation(line: 2618, column: 9, scope: !2818)
!2821 = !DILocation(line: 2619, column: 32, scope: !2818)
!2822 = !DILocation(line: 2619, column: 9, scope: !2818)
!2823 = !DILocation(line: 2620, column: 9, scope: !2818)
!2824 = !DILocation(line: 2622, column: 14, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2734, file: !939, line: 2622, column: 9)
!2826 = !DILocation(line: 2622, column: 22, scope: !2825)
!2827 = !DILocation(line: 2622, column: 26, scope: !2825)
!2828 = !DILocation(line: 2623, column: 14, scope: !2825)
!2829 = !DILocation(line: 2623, column: 23, scope: !2825)
!2830 = !DILocation(line: 2623, column: 42, scope: !2825)
!2831 = !DILocation(line: 2624, column: 14, scope: !2825)
!2832 = !DILocation(line: 2624, column: 24, scope: !2825)
!2833 = !DILocation(line: 2624, column: 43, scope: !2825)
!2834 = !DILocation(line: 2625, column: 14, scope: !2825)
!2835 = !DILocation(line: 2625, column: 30, scope: !2825)
!2836 = !DILocation(line: 2622, column: 9, scope: !2837)
!2837 = !DILexicalBlockFile(scope: !2734, file: !939, discriminator: 1)
!2838 = !DILocation(line: 2626, column: 39, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2825, file: !939, line: 2625, column: 35)
!2840 = !DILocation(line: 2626, column: 49, scope: !2839)
!2841 = !DILocation(line: 2628, column: 44, scope: !2839)
!2842 = !DILocation(line: 2628, column: 58, scope: !2839)
!2843 = !DILocation(line: 2628, column: 72, scope: !2839)
!2844 = !DILocation(line: 2626, column: 9, scope: !2839)
!2845 = !DILocation(line: 2629, column: 32, scope: !2839)
!2846 = !DILocation(line: 2629, column: 9, scope: !2839)
!2847 = !DILocation(line: 2630, column: 9, scope: !2839)
!2848 = !DILocation(line: 2631, column: 21, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2825, file: !939, line: 2631, column: 16)
!2850 = !DILocation(line: 2631, column: 37, scope: !2849)
!2851 = !DILocation(line: 2631, column: 16, scope: !2825)
!2852 = !DILocation(line: 2632, column: 16, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2849, file: !939, line: 2631, column: 43)
!2854 = !DILocation(line: 2632, column: 26, scope: !2853)
!2855 = !DILocation(line: 2635, column: 21, scope: !2853)
!2856 = !DILocation(line: 2635, column: 35, scope: !2853)
!2857 = !DILocation(line: 2635, column: 49, scope: !2853)
!2858 = !DILocation(line: 2632, column: 9, scope: !2853)
!2859 = !DILocation(line: 2636, column: 5, scope: !2853)
!2860 = !DILocation(line: 2637, column: 12, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2734, file: !939, line: 2637, column: 5)
!2862 = !DILocation(line: 2637, column: 10, scope: !2861)
!2863 = !DILocation(line: 2637, column: 17, scope: !2864)
!2864 = !DILexicalBlockFile(scope: !2865, file: !939, discriminator: 1)
!2865 = distinct !DILexicalBlock(scope: !2861, file: !939, line: 2637, column: 5)
!2866 = !DILocation(line: 2637, column: 19, scope: !2864)
!2867 = !DILocation(line: 2637, column: 5, scope: !2864)
!2868 = !DILocation(line: 2638, column: 26, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2865, file: !939, line: 2638, column: 13)
!2870 = !DILocation(line: 2638, column: 53, scope: !2869)
!2871 = !DILocation(line: 2638, column: 35, scope: !2869)
!2872 = !DILocation(line: 2638, column: 14, scope: !2869)
!2873 = !DILocation(line: 2638, column: 13, scope: !2865)
!2874 = !DILocation(line: 2639, column: 13, scope: !2869)
!2875 = !DILocation(line: 2638, column: 55, scope: !2876)
!2876 = !DILexicalBlockFile(scope: !2869, file: !939, discriminator: 1)
!2877 = !DILocation(line: 2637, column: 84, scope: !2878)
!2878 = !DILexicalBlockFile(scope: !2865, file: !939, discriminator: 2)
!2879 = !DILocation(line: 2637, column: 5, scope: !2878)
!2880 = distinct !{!2880, !2881}
!2881 = !DILocation(line: 2637, column: 5, scope: !2734)
!2882 = !DILocation(line: 2640, column: 9, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2734, file: !939, line: 2640, column: 9)
!2884 = !DILocation(line: 2640, column: 11, scope: !2883)
!2885 = !DILocation(line: 2640, column: 9, scope: !2734)
!2886 = !DILocation(line: 2641, column: 16, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2883, file: !939, line: 2640, column: 76)
!2888 = !DILocation(line: 2641, column: 59, scope: !2887)
!2889 = !DILocation(line: 2641, column: 9, scope: !2887)
!2890 = !DILocation(line: 2642, column: 13, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2887, file: !939, line: 2642, column: 13)
!2892 = !DILocation(line: 2642, column: 23, scope: !2891)
!2893 = !DILocation(line: 2642, column: 28, scope: !2891)
!2894 = !DILocation(line: 2642, column: 46, scope: !2891)
!2895 = !DILocation(line: 2642, column: 13, scope: !2887)
!2896 = !DILocation(line: 2643, column: 36, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2891, file: !939, line: 2642, column: 56)
!2898 = !DILocation(line: 2643, column: 13, scope: !2897)
!2899 = !DILocation(line: 2644, column: 13, scope: !2897)
!2900 = !DILocation(line: 2646, column: 5, scope: !2887)
!2901 = !DILocation(line: 2647, column: 28, scope: !2734)
!2902 = !DILocation(line: 2647, column: 5, scope: !2734)
!2903 = !DILocation(line: 2650, column: 21, scope: !2734)
!2904 = !DILocation(line: 2650, column: 31, scope: !2734)
!2905 = !DILocation(line: 2650, column: 36, scope: !2734)
!2906 = !DILocation(line: 2650, column: 11, scope: !2734)
!2907 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !2743)
!2908 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !2743)
!2909 = !DILocation(line: 2650, column: 9, scope: !2734)
!2910 = !DILocation(line: 2651, column: 22, scope: !2734)
!2911 = !DILocation(line: 2651, column: 51, scope: !2734)
!2912 = !DILocation(line: 2651, column: 11, scope: !2734)
!2913 = !DILocation(line: 2651, column: 9, scope: !2734)
!2914 = !DILocation(line: 2653, column: 5, scope: !2734)
!2915 = !DILocation(line: 2653, column: 12, scope: !2837)
!2916 = !DILocation(line: 2653, column: 16, scope: !2837)
!2917 = !DILocation(line: 2653, column: 5, scope: !2837)
!2918 = !DILocation(line: 2654, column: 31, scope: !2741)
!2919 = !DILocation(line: 2654, column: 41, scope: !2741)
!2920 = !DILocation(line: 2654, column: 15, scope: !2741)
!2921 = !DILocation(line: 2654, column: 13, scope: !2741)
!2922 = !DILocation(line: 2655, column: 13, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2741, file: !939, line: 2655, column: 13)
!2924 = !DILocation(line: 2655, column: 17, scope: !2923)
!2925 = !DILocation(line: 2655, column: 13, scope: !2741)
!2926 = !DILocation(line: 2656, column: 13, scope: !2923)
!2927 = !DILocation(line: 2657, column: 25, scope: !2741)
!2928 = !DILocation(line: 2657, column: 35, scope: !2741)
!2929 = !DILocation(line: 2657, column: 40, scope: !2741)
!2930 = !DILocation(line: 2657, column: 15, scope: !2741)
!2931 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !2740)
!2932 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !2740)
!2933 = !DILocation(line: 2657, column: 13, scope: !2741)
!2934 = !DILocation(line: 2658, column: 26, scope: !2741)
!2935 = !DILocation(line: 2658, column: 54, scope: !2741)
!2936 = !DILocation(line: 2658, column: 15, scope: !2741)
!2937 = !DILocation(line: 2658, column: 13, scope: !2741)
!2938 = !DILocation(line: 2653, column: 5, scope: !2939)
!2939 = !DILexicalBlockFile(scope: !2734, file: !939, discriminator: 2)
!2940 = distinct !{!2940, !2914}
!2941 = !DILocation(line: 2660, column: 31, scope: !2734)
!2942 = !DILocation(line: 2660, column: 5, scope: !2734)
!2943 = !DILocation(line: 2662, column: 10, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2734, file: !939, line: 2662, column: 9)
!2945 = !DILocation(line: 2662, column: 20, scope: !2944)
!2946 = !DILocation(line: 2662, column: 9, scope: !2734)
!2947 = !DILocation(line: 2663, column: 9, scope: !2944)
!2948 = !DILocation(line: 2663, column: 19, scope: !2944)
!2949 = !DILocation(line: 2663, column: 30, scope: !2944)
!2950 = !DILocation(line: 2664, column: 9, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2734, file: !939, line: 2664, column: 9)
!2952 = !DILocation(line: 2664, column: 19, scope: !2951)
!2953 = !DILocation(line: 2664, column: 9, scope: !2734)
!2954 = !DILocation(line: 2665, column: 35, scope: !2951)
!2955 = !DILocation(line: 2665, column: 45, scope: !2951)
!2956 = !DILocation(line: 2665, column: 56, scope: !2951)
!2957 = !DILocation(line: 2665, column: 66, scope: !2951)
!2958 = !DILocation(line: 2665, column: 54, scope: !2951)
!2959 = !DILocation(line: 2665, column: 77, scope: !2951)
!2960 = !DILocation(line: 2666, column: 40, scope: !2951)
!2961 = !DILocation(line: 2665, column: 9, scope: !2951)
!2962 = !DILocation(line: 2665, column: 19, scope: !2951)
!2963 = !DILocation(line: 2665, column: 24, scope: !2951)
!2964 = !DILocation(line: 2665, column: 33, scope: !2951)
!2965 = !DILocation(line: 2667, column: 18, scope: !2734)
!2966 = !DILocation(line: 2667, column: 21, scope: !2734)
!2967 = !DILocation(line: 2667, column: 40, scope: !2734)
!2968 = !DILocation(line: 2667, column: 50, scope: !2734)
!2969 = !DILocation(line: 2667, column: 5, scope: !2734)
!2970 = !DILocation(line: 2668, column: 18, scope: !2734)
!2971 = !DILocation(line: 2668, column: 21, scope: !2734)
!2972 = !DILocation(line: 2668, column: 42, scope: !2734)
!2973 = !DILocation(line: 2668, column: 52, scope: !2734)
!2974 = !DILocation(line: 2668, column: 5, scope: !2734)
!2975 = !DILocation(line: 2670, column: 9, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2734, file: !939, line: 2670, column: 9)
!2977 = !DILocation(line: 2670, column: 19, scope: !2976)
!2978 = !DILocation(line: 2670, column: 28, scope: !2976)
!2979 = !DILocation(line: 2670, column: 33, scope: !2976)
!2980 = !DILocation(line: 2670, column: 9, scope: !2734)
!2981 = !DILocation(line: 2671, column: 42, scope: !2976)
!2982 = !DILocation(line: 2671, column: 45, scope: !2976)
!2983 = !DILocation(line: 2671, column: 98, scope: !2976)
!2984 = !DILocation(line: 2671, column: 108, scope: !2976)
!2985 = !DILocation(line: 2671, column: 117, scope: !2976)
!2986 = !DILocation(line: 2671, column: 125, scope: !2976)
!2987 = !DILocation(line: 2671, column: 55, scope: !2976)
!2988 = !DILocation(line: 2671, column: 9, scope: !2989)
!2989 = !DILexicalBlockFile(scope: !2976, file: !939, discriminator: 1)
!2990 = !DILocation(line: 2671, column: 9, scope: !2976)
!2991 = !DILocation(line: 2673, column: 33, scope: !2734)
!2992 = !DILocation(line: 2673, column: 11, scope: !2734)
!2993 = !DILocation(line: 2673, column: 9, scope: !2734)
!2994 = !DILocation(line: 2674, column: 9, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2734, file: !939, line: 2674, column: 9)
!2996 = !DILocation(line: 2674, column: 13, scope: !2995)
!2997 = !DILocation(line: 2674, column: 9, scope: !2734)
!2998 = !DILocation(line: 2675, column: 9, scope: !2995)
!2999 = !DILocation(line: 2677, column: 19, scope: !2734)
!3000 = !DILocation(line: 2677, column: 37, scope: !2734)
!3001 = !DILocation(line: 2677, column: 17, scope: !2734)
!3002 = !DILocation(line: 2678, column: 12, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2734, file: !939, line: 2678, column: 5)
!3004 = !DILocation(line: 2678, column: 10, scope: !3003)
!3005 = !DILocation(line: 2678, column: 17, scope: !3006)
!3006 = !DILexicalBlockFile(scope: !3007, file: !939, discriminator: 1)
!3007 = distinct !DILexicalBlock(scope: !3003, file: !939, line: 2678, column: 5)
!3008 = !DILocation(line: 2678, column: 21, scope: !3006)
!3009 = !DILocation(line: 2678, column: 39, scope: !3006)
!3010 = !DILocation(line: 2678, column: 19, scope: !3006)
!3011 = !DILocation(line: 2678, column: 5, scope: !3006)
!3012 = !DILocation(line: 2679, column: 27, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3014, file: !939, line: 2679, column: 13)
!3014 = distinct !DILexicalBlock(scope: !3007, file: !939, line: 2678, column: 53)
!3015 = !DILocation(line: 2679, column: 15, scope: !3013)
!3016 = !DILocation(line: 2679, column: 30, scope: !3013)
!3017 = !DILocation(line: 2679, column: 39, scope: !3013)
!3018 = !DILocation(line: 2679, column: 54, scope: !3019)
!3019 = !DILexicalBlockFile(scope: !3013, file: !939, discriminator: 1)
!3020 = !DILocation(line: 2679, column: 42, scope: !3019)
!3021 = !DILocation(line: 2679, column: 57, scope: !3019)
!3022 = !DILocation(line: 2679, column: 62, scope: !3019)
!3023 = !DILocation(line: 2680, column: 27, scope: !3013)
!3024 = !DILocation(line: 2680, column: 15, scope: !3013)
!3025 = !DILocation(line: 2680, column: 30, scope: !3013)
!3026 = !DILocation(line: 2680, column: 34, scope: !3013)
!3027 = !DILocation(line: 2680, column: 39, scope: !3013)
!3028 = !DILocation(line: 2680, column: 54, scope: !3019)
!3029 = !DILocation(line: 2680, column: 42, scope: !3019)
!3030 = !DILocation(line: 2680, column: 57, scope: !3019)
!3031 = !DILocation(line: 2680, column: 61, scope: !3019)
!3032 = !DILocation(line: 2680, column: 66, scope: !3019)
!3033 = !DILocation(line: 2679, column: 13, scope: !3034)
!3034 = !DILexicalBlockFile(scope: !3014, file: !939, discriminator: 2)
!3035 = !DILocation(line: 2681, column: 20, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3013, file: !939, line: 2680, column: 72)
!3037 = !DILocation(line: 2681, column: 30, scope: !3036)
!3038 = !DILocation(line: 2681, column: 13, scope: !3036)
!3039 = !DILocation(line: 2682, column: 9, scope: !3036)
!3040 = !DILocalVariable(name: "st", scope: !3041, file: !939, line: 2683, type: !1478)
!3041 = distinct !DILexicalBlock(scope: !3013, file: !939, line: 2682, column: 16)
!3042 = !DILocation(line: 2683, column: 23, scope: !3041)
!3043 = !DILocation(line: 2683, column: 48, scope: !3041)
!3044 = !DILocation(line: 2683, column: 28, scope: !3041)
!3045 = !DILocation(line: 2684, column: 18, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3041, file: !939, line: 2684, column: 17)
!3047 = !DILocation(line: 2684, column: 17, scope: !3041)
!3048 = !DILocation(line: 2685, column: 17, scope: !3046)
!3049 = !DILocation(line: 2686, column: 26, scope: !3041)
!3050 = !DILocation(line: 2686, column: 30, scope: !3041)
!3051 = !DILocation(line: 2686, column: 64, scope: !3041)
!3052 = !DILocation(line: 2686, column: 52, scope: !3041)
!3053 = !DILocation(line: 2686, column: 67, scope: !3041)
!3054 = !DILocation(line: 2686, column: 13, scope: !3041)
!3055 = !DILocation(line: 2687, column: 26, scope: !3041)
!3056 = !DILocation(line: 2687, column: 30, scope: !3041)
!3057 = !DILocation(line: 2687, column: 64, scope: !3041)
!3058 = !DILocation(line: 2687, column: 52, scope: !3041)
!3059 = !DILocation(line: 2687, column: 67, scope: !3041)
!3060 = !DILocation(line: 2687, column: 13, scope: !3041)
!3061 = !DILocation(line: 2688, column: 13, scope: !3041)
!3062 = !DILocation(line: 2688, column: 17, scope: !3041)
!3063 = !DILocation(line: 2688, column: 27, scope: !3041)
!3064 = !DILocation(line: 2688, column: 36, scope: !3041)
!3065 = !DILocation(line: 2690, column: 20, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3041, file: !939, line: 2690, column: 13)
!3067 = !DILocation(line: 2690, column: 18, scope: !3066)
!3068 = !DILocation(line: 2690, column: 48, scope: !3069)
!3069 = !DILexicalBlockFile(scope: !3070, file: !939, discriminator: 1)
!3070 = distinct !DILexicalBlock(scope: !3066, file: !939, line: 2690, column: 13)
!3071 = !DILocation(line: 2690, column: 25, scope: !3069)
!3072 = !DILocation(line: 2690, column: 51, scope: !3069)
!3073 = !DILocation(line: 2690, column: 54, scope: !3069)
!3074 = !DILocation(line: 2690, column: 13, scope: !3069)
!3075 = !DILocation(line: 2691, column: 53, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3077, file: !939, line: 2691, column: 21)
!3077 = distinct !DILexicalBlock(scope: !3070, file: !939, line: 2690, column: 80)
!3078 = !DILocation(line: 2691, column: 30, scope: !3076)
!3079 = !DILocation(line: 2691, column: 56, scope: !3076)
!3080 = !DILocation(line: 2691, column: 73, scope: !3076)
!3081 = !DILocation(line: 2691, column: 61, scope: !3076)
!3082 = !DILocation(line: 2691, column: 76, scope: !3076)
!3083 = !DILocation(line: 2692, column: 60, scope: !3076)
!3084 = !DILocation(line: 2692, column: 37, scope: !3076)
!3085 = !DILocation(line: 2692, column: 63, scope: !3076)
!3086 = !DILocation(line: 2692, column: 30, scope: !3076)
!3087 = !DILocation(line: 2691, column: 22, scope: !3076)
!3088 = !DILocation(line: 2691, column: 21, scope: !3077)
!3089 = !DILocation(line: 2693, column: 69, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3076, file: !939, line: 2692, column: 70)
!3091 = !DILocation(line: 2693, column: 46, scope: !3090)
!3092 = !DILocation(line: 2693, column: 72, scope: !3090)
!3093 = !DILocation(line: 2693, column: 21, scope: !3090)
!3094 = !DILocation(line: 2693, column: 25, scope: !3090)
!3095 = !DILocation(line: 2693, column: 35, scope: !3090)
!3096 = !DILocation(line: 2693, column: 44, scope: !3090)
!3097 = !DILocation(line: 2694, column: 21, scope: !3090)
!3098 = !DILocation(line: 2696, column: 13, scope: !3077)
!3099 = !DILocation(line: 2690, column: 76, scope: !3100)
!3100 = !DILexicalBlockFile(scope: !3070, file: !939, discriminator: 2)
!3101 = !DILocation(line: 2690, column: 13, scope: !3100)
!3102 = distinct !{!3102, !3103}
!3103 = !DILocation(line: 2690, column: 13, scope: !3041)
!3104 = !DILocation(line: 2698, column: 37, scope: !3041)
!3105 = !DILocation(line: 2698, column: 25, scope: !3041)
!3106 = !DILocation(line: 2698, column: 13, scope: !3041)
!3107 = !DILocation(line: 2698, column: 28, scope: !3041)
!3108 = !DILocation(line: 2698, column: 35, scope: !3041)
!3109 = !DILocation(line: 2700, column: 17, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3041, file: !939, line: 2700, column: 17)
!3111 = !DILocation(line: 2700, column: 21, scope: !3110)
!3112 = !DILocation(line: 2700, column: 31, scope: !3110)
!3113 = !DILocation(line: 2700, column: 40, scope: !3110)
!3114 = !DILocation(line: 2700, column: 17, scope: !3041)
!3115 = !DILocation(line: 2701, column: 17, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3110, file: !939, line: 2700, column: 61)
!3117 = !DILocation(line: 2701, column: 21, scope: !3116)
!3118 = !DILocation(line: 2701, column: 33, scope: !3116)
!3119 = !DILocation(line: 2702, column: 17, scope: !3116)
!3120 = !DILocation(line: 2702, column: 21, scope: !3116)
!3121 = !DILocation(line: 2702, column: 31, scope: !3116)
!3122 = !DILocation(line: 2702, column: 42, scope: !3116)
!3123 = !DILocation(line: 2704, column: 33, scope: !3116)
!3124 = !DILocation(line: 2704, column: 37, scope: !3116)
!3125 = !DILocation(line: 2704, column: 17, scope: !3116)
!3126 = !DILocation(line: 2705, column: 43, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3116, file: !939, line: 2705, column: 21)
!3128 = !DILocation(line: 2705, column: 47, scope: !3127)
!3129 = !DILocation(line: 2705, column: 73, scope: !3127)
!3130 = !DILocation(line: 2705, column: 61, scope: !3127)
!3131 = !DILocation(line: 2705, column: 76, scope: !3127)
!3132 = !DILocation(line: 2705, column: 80, scope: !3127)
!3133 = !DILocation(line: 2705, column: 28, scope: !3127)
!3134 = !DILocation(line: 2705, column: 26, scope: !3127)
!3135 = !DILocation(line: 2705, column: 87, scope: !3127)
!3136 = !DILocation(line: 2705, column: 21, scope: !3116)
!3137 = !DILocation(line: 2706, column: 28, scope: !3127)
!3138 = !DILocation(line: 2706, column: 21, scope: !3127)
!3139 = !DILocation(line: 2707, column: 24, scope: !3116)
!3140 = !DILocation(line: 2707, column: 28, scope: !3116)
!3141 = !DILocation(line: 2707, column: 41, scope: !3116)
!3142 = !DILocation(line: 2707, column: 59, scope: !3116)
!3143 = !DILocation(line: 2707, column: 47, scope: !3116)
!3144 = !DILocation(line: 2707, column: 62, scope: !3116)
!3145 = !DILocation(line: 2707, column: 66, scope: !3116)
!3146 = !DILocation(line: 2707, column: 84, scope: !3116)
!3147 = !DILocation(line: 2707, column: 72, scope: !3116)
!3148 = !DILocation(line: 2707, column: 87, scope: !3116)
!3149 = !DILocation(line: 2707, column: 91, scope: !3116)
!3150 = !DILocation(line: 2707, column: 17, scope: !3116)
!3151 = !DILocation(line: 2708, column: 49, scope: !3116)
!3152 = !DILocation(line: 2708, column: 53, scope: !3116)
!3153 = !DILocation(line: 2708, column: 17, scope: !3116)
!3154 = !DILocation(line: 2708, column: 21, scope: !3116)
!3155 = !DILocation(line: 2708, column: 34, scope: !3116)
!3156 = !DILocation(line: 2708, column: 47, scope: !3116)
!3157 = !DILocation(line: 2709, column: 17, scope: !3116)
!3158 = !DILocation(line: 2709, column: 21, scope: !3116)
!3159 = !DILocation(line: 2709, column: 34, scope: !3116)
!3160 = !DILocation(line: 2709, column: 40, scope: !3116)
!3161 = !DILocation(line: 2710, column: 13, scope: !3116)
!3162 = !DILocation(line: 2711, column: 17, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3110, file: !939, line: 2710, column: 20)
!3164 = !DILocation(line: 2711, column: 21, scope: !3163)
!3165 = !DILocation(line: 2711, column: 31, scope: !3163)
!3166 = !DILocation(line: 2711, column: 42, scope: !3163)
!3167 = !DILocation(line: 2712, column: 40, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3163, file: !939, line: 2712, column: 21)
!3169 = !DILocation(line: 2712, column: 44, scope: !3168)
!3170 = !DILocation(line: 2712, column: 66, scope: !3168)
!3171 = !DILocation(line: 2712, column: 54, scope: !3168)
!3172 = !DILocation(line: 2712, column: 69, scope: !3168)
!3173 = !DILocation(line: 2712, column: 73, scope: !3168)
!3174 = !DILocation(line: 2712, column: 21, scope: !3168)
!3175 = !DILocation(line: 2712, column: 21, scope: !3163)
!3176 = !DILocation(line: 2713, column: 21, scope: !3168)
!3177 = !DILocation(line: 2714, column: 24, scope: !3163)
!3178 = !DILocation(line: 2714, column: 28, scope: !3163)
!3179 = !DILocation(line: 2714, column: 38, scope: !3163)
!3180 = !DILocation(line: 2714, column: 61, scope: !3163)
!3181 = !DILocation(line: 2714, column: 49, scope: !3163)
!3182 = !DILocation(line: 2714, column: 64, scope: !3163)
!3183 = !DILocation(line: 2714, column: 68, scope: !3163)
!3184 = !DILocation(line: 2715, column: 36, scope: !3163)
!3185 = !DILocation(line: 2715, column: 24, scope: !3163)
!3186 = !DILocation(line: 2715, column: 39, scope: !3163)
!3187 = !DILocation(line: 2715, column: 43, scope: !3163)
!3188 = !DILocation(line: 2714, column: 17, scope: !3163)
!3189 = !DILocation(line: 2717, column: 24, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3163, file: !939, line: 2717, column: 17)
!3191 = !DILocation(line: 2717, column: 22, scope: !3190)
!3192 = !DILocation(line: 2717, column: 46, scope: !3193)
!3193 = !DILexicalBlockFile(scope: !3194, file: !939, discriminator: 1)
!3194 = distinct !DILexicalBlock(scope: !3190, file: !939, line: 2717, column: 17)
!3195 = !DILocation(line: 2717, column: 29, scope: !3193)
!3196 = !DILocation(line: 2717, column: 49, scope: !3193)
!3197 = !DILocation(line: 2717, column: 52, scope: !3193)
!3198 = !DILocation(line: 2717, column: 17, scope: !3193)
!3199 = !DILocation(line: 2718, column: 51, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3201, file: !939, line: 2718, column: 25)
!3201 = distinct !DILexicalBlock(scope: !3194, file: !939, line: 2717, column: 78)
!3202 = !DILocation(line: 2718, column: 34, scope: !3200)
!3203 = !DILocation(line: 2718, column: 54, scope: !3200)
!3204 = !DILocation(line: 2718, column: 71, scope: !3200)
!3205 = !DILocation(line: 2718, column: 59, scope: !3200)
!3206 = !DILocation(line: 2718, column: 74, scope: !3200)
!3207 = !DILocation(line: 2719, column: 57, scope: !3200)
!3208 = !DILocation(line: 2719, column: 40, scope: !3200)
!3209 = !DILocation(line: 2719, column: 60, scope: !3200)
!3210 = !DILocation(line: 2719, column: 33, scope: !3200)
!3211 = !DILocation(line: 2718, column: 26, scope: !3200)
!3212 = !DILocation(line: 2718, column: 25, scope: !3201)
!3213 = !DILocation(line: 2720, column: 67, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3200, file: !939, line: 2719, column: 67)
!3215 = !DILocation(line: 2720, column: 50, scope: !3214)
!3216 = !DILocation(line: 2720, column: 70, scope: !3214)
!3217 = !DILocation(line: 2720, column: 25, scope: !3214)
!3218 = !DILocation(line: 2720, column: 29, scope: !3214)
!3219 = !DILocation(line: 2720, column: 39, scope: !3214)
!3220 = !DILocation(line: 2720, column: 48, scope: !3214)
!3221 = !DILocation(line: 2721, column: 25, scope: !3214)
!3222 = !DILocation(line: 2723, column: 17, scope: !3201)
!3223 = !DILocation(line: 2717, column: 74, scope: !3224)
!3224 = !DILexicalBlockFile(scope: !3194, file: !939, discriminator: 2)
!3225 = !DILocation(line: 2717, column: 17, scope: !3224)
!3226 = distinct !{!3226, !3227}
!3227 = !DILocation(line: 2717, column: 17, scope: !3163)
!3228 = !DILocation(line: 2726, column: 5, scope: !3014)
!3229 = !DILocation(line: 2678, column: 49, scope: !3230)
!3230 = !DILexicalBlockFile(scope: !3007, file: !939, discriminator: 2)
!3231 = !DILocation(line: 2678, column: 5, scope: !3230)
!3232 = distinct !{!3232, !3233}
!3233 = !DILocation(line: 2678, column: 5, scope: !2734)
!3234 = !DILocation(line: 2728, column: 16, scope: !2734)
!3235 = !DILocation(line: 2728, column: 31, scope: !2734)
!3236 = !DILocation(line: 2728, column: 14, scope: !2734)
!3237 = !DILocation(line: 2729, column: 12, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !2734, file: !939, line: 2729, column: 5)
!3239 = !DILocation(line: 2729, column: 10, scope: !3238)
!3240 = !DILocation(line: 2729, column: 17, scope: !3241)
!3241 = !DILexicalBlockFile(scope: !3242, file: !939, discriminator: 1)
!3242 = distinct !DILexicalBlock(scope: !3238, file: !939, line: 2729, column: 5)
!3243 = !DILocation(line: 2729, column: 21, scope: !3241)
!3244 = !DILocation(line: 2729, column: 36, scope: !3241)
!3245 = !DILocation(line: 2729, column: 19, scope: !3241)
!3246 = !DILocation(line: 2729, column: 5, scope: !3241)
!3247 = !DILocation(line: 2730, column: 22, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3242, file: !939, line: 2730, column: 13)
!3249 = !DILocation(line: 2730, column: 13, scope: !3248)
!3250 = !DILocation(line: 2730, column: 25, scope: !3248)
!3251 = !DILocation(line: 2730, column: 31, scope: !3248)
!3252 = !DILocation(line: 2730, column: 66, scope: !3248)
!3253 = !DILocation(line: 2730, column: 78, scope: !3254)
!3254 = !DILexicalBlockFile(scope: !3248, file: !939, discriminator: 1)
!3255 = !DILocation(line: 2730, column: 69, scope: !3254)
!3256 = !DILocation(line: 2730, column: 81, scope: !3254)
!3257 = !DILocation(line: 2730, column: 85, scope: !3254)
!3258 = !DILocation(line: 2731, column: 14, scope: !3248)
!3259 = !DILocation(line: 2731, column: 24, scope: !3248)
!3260 = !DILocation(line: 2731, column: 29, scope: !3248)
!3261 = !DILocation(line: 2731, column: 41, scope: !3254)
!3262 = !DILocation(line: 2731, column: 32, scope: !3254)
!3263 = !DILocation(line: 2731, column: 44, scope: !3254)
!3264 = !DILocation(line: 2731, column: 52, scope: !3254)
!3265 = !DILocation(line: 2731, column: 50, scope: !3254)
!3266 = !DILocation(line: 2730, column: 13, scope: !3267)
!3267 = !DILexicalBlockFile(scope: !3242, file: !939, discriminator: 2)
!3268 = !DILocation(line: 2733, column: 36, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3248, file: !939, line: 2731, column: 64)
!3270 = !DILocation(line: 2733, column: 48, scope: !3269)
!3271 = !DILocation(line: 2733, column: 39, scope: !3269)
!3272 = !DILocation(line: 2733, column: 51, scope: !3269)
!3273 = !DILocation(line: 2734, column: 49, scope: !3269)
!3274 = !DILocation(line: 2735, column: 45, scope: !3269)
!3275 = !DILocation(line: 2735, column: 36, scope: !3269)
!3276 = !DILocation(line: 2735, column: 48, scope: !3269)
!3277 = !DILocation(line: 2735, column: 64, scope: !3269)
!3278 = !DILocation(line: 2735, column: 55, scope: !3269)
!3279 = !DILocation(line: 2735, column: 67, scope: !3269)
!3280 = !DILocation(line: 2736, column: 45, scope: !3269)
!3281 = !DILocation(line: 2736, column: 36, scope: !3269)
!3282 = !DILocation(line: 2736, column: 48, scope: !3269)
!3283 = !DILocation(line: 2733, column: 17, scope: !3269)
!3284 = !DILocation(line: 2732, column: 22, scope: !3269)
!3285 = !DILocation(line: 2732, column: 13, scope: !3269)
!3286 = !DILocation(line: 2732, column: 25, scope: !3269)
!3287 = !DILocation(line: 2732, column: 33, scope: !3269)
!3288 = !DILocation(line: 2737, column: 26, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3269, file: !939, line: 2737, column: 17)
!3290 = !DILocation(line: 2737, column: 17, scope: !3289)
!3291 = !DILocation(line: 2737, column: 29, scope: !3289)
!3292 = !DILocation(line: 2737, column: 17, scope: !3269)
!3293 = !DILocation(line: 2738, column: 39, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3289, file: !939, line: 2737, column: 38)
!3295 = !DILocation(line: 2738, column: 30, scope: !3294)
!3296 = !DILocation(line: 2738, column: 42, scope: !3294)
!3297 = !DILocation(line: 2738, column: 51, scope: !3294)
!3298 = !DILocation(line: 2739, column: 47, scope: !3294)
!3299 = !DILocation(line: 2739, column: 38, scope: !3294)
!3300 = !DILocation(line: 2739, column: 50, scope: !3294)
!3301 = !DILocation(line: 2738, column: 17, scope: !3294)
!3302 = !DILocation(line: 2740, column: 13, scope: !3294)
!3303 = !DILocation(line: 2741, column: 34, scope: !3269)
!3304 = !DILocation(line: 2741, column: 25, scope: !3269)
!3305 = !DILocation(line: 2741, column: 37, scope: !3269)
!3306 = !DILocation(line: 2741, column: 23, scope: !3269)
!3307 = !DILocation(line: 2742, column: 9, scope: !3269)
!3308 = !DILocation(line: 2731, column: 61, scope: !3309)
!3309 = !DILexicalBlockFile(scope: !3248, file: !939, discriminator: 2)
!3310 = !DILocation(line: 2729, column: 46, scope: !3267)
!3311 = !DILocation(line: 2729, column: 5, scope: !3267)
!3312 = distinct !{!3312, !3313}
!3313 = !DILocation(line: 2729, column: 5, scope: !2734)
!3314 = !DILocation(line: 2744, column: 32, scope: !2734)
!3315 = !DILocation(line: 2744, column: 5, scope: !2734)
!3316 = !DILocation(line: 2746, column: 27, scope: !2734)
!3317 = !DILocation(line: 2746, column: 5, scope: !2734)
!3318 = !DILocation(line: 2748, column: 5, scope: !2734)
!3319 = !DILocation(line: 2750, column: 25, scope: !2734)
!3320 = !DILocation(line: 2750, column: 5, scope: !2734)
!3321 = !DILocation(line: 2751, column: 12, scope: !2734)
!3322 = !DILocation(line: 2751, column: 5, scope: !2734)
!3323 = !DILocation(line: 2752, column: 1, scope: !2734)
!3324 = distinct !DISubprogram(name: "matroska_read_packet", scope: !939, file: !939, line: 3543, type: !3325, isLocal: true, isDefinition: true, scopeLine: 3544, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!1039, !2398, !1256}
!3327 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !3328)
!3328 = distinct !DILocation(line: 3549, column: 23, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3324, file: !939, line: 3548, column: 52)
!3330 = !DILocalVariable(name: "s", arg: 1, scope: !3324, file: !939, line: 3543, type: !2398)
!3331 = !DILocation(line: 3543, column: 50, scope: !3324)
!3332 = !DILocalVariable(name: "pkt", arg: 2, scope: !3324, file: !939, line: 3543, type: !1256)
!3333 = !DILocation(line: 3543, column: 63, scope: !3324)
!3334 = !DILocalVariable(name: "matroska", scope: !3324, file: !939, line: 3545, type: !2392)
!3335 = !DILocation(line: 3545, column: 27, scope: !3324)
!3336 = !DILocation(line: 3545, column: 38, scope: !3324)
!3337 = !DILocation(line: 3545, column: 41, scope: !3324)
!3338 = !DILocalVariable(name: "ret", scope: !3324, file: !939, line: 3546, type: !1039)
!3339 = !DILocation(line: 3546, column: 9, scope: !3324)
!3340 = !DILocation(line: 3548, column: 5, scope: !3324)
!3341 = !DILocation(line: 3548, column: 36, scope: !3342)
!3342 = !DILexicalBlockFile(scope: !3324, file: !939, discriminator: 1)
!3343 = !DILocation(line: 3548, column: 46, scope: !3342)
!3344 = !DILocation(line: 3548, column: 12, scope: !3342)
!3345 = !DILocation(line: 3548, column: 5, scope: !3342)
!3346 = !DILocalVariable(name: "pos", scope: !3329, file: !939, line: 3549, type: !1047)
!3347 = !DILocation(line: 3549, column: 17, scope: !3329)
!3348 = !DILocation(line: 3549, column: 33, scope: !3329)
!3349 = !DILocation(line: 3549, column: 43, scope: !3329)
!3350 = !DILocation(line: 3549, column: 48, scope: !3329)
!3351 = !DILocation(line: 3549, column: 23, scope: !3329)
!3352 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !3328)
!3353 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !3328)
!3354 = !DILocation(line: 3550, column: 13, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3329, file: !939, line: 3550, column: 13)
!3356 = !DILocation(line: 3550, column: 23, scope: !3355)
!3357 = !DILocation(line: 3550, column: 13, scope: !3329)
!3358 = !DILocation(line: 3551, column: 21, scope: !3355)
!3359 = !DILocation(line: 3551, column: 25, scope: !3355)
!3360 = !DILocation(line: 3551, column: 20, scope: !3355)
!3361 = !DILocation(line: 3551, column: 32, scope: !3362)
!3362 = !DILexicalBlockFile(scope: !3355, file: !939, discriminator: 1)
!3363 = !DILocation(line: 3551, column: 20, scope: !3362)
!3364 = !DILocation(line: 3551, column: 20, scope: !3365)
!3365 = !DILexicalBlockFile(scope: !3355, file: !939, discriminator: 2)
!3366 = !DILocation(line: 3551, column: 20, scope: !3367)
!3367 = !DILexicalBlockFile(scope: !3355, file: !939, discriminator: 3)
!3368 = !DILocation(line: 3551, column: 13, scope: !3367)
!3369 = !DILocation(line: 3552, column: 36, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3329, file: !939, line: 3552, column: 13)
!3371 = !DILocation(line: 3552, column: 13, scope: !3370)
!3372 = !DILocation(line: 3552, column: 46, scope: !3370)
!3373 = !DILocation(line: 3552, column: 13, scope: !3329)
!3374 = !DILocation(line: 3553, column: 35, scope: !3370)
!3375 = !DILocation(line: 3553, column: 45, scope: !3370)
!3376 = !DILocation(line: 3553, column: 19, scope: !3370)
!3377 = !DILocation(line: 3553, column: 17, scope: !3370)
!3378 = !DILocation(line: 3553, column: 13, scope: !3370)
!3379 = !DILocation(line: 3548, column: 5, scope: !3380)
!3380 = !DILexicalBlockFile(scope: !3324, file: !939, discriminator: 2)
!3381 = distinct !{!3381, !3340}
!3382 = !DILocation(line: 3556, column: 5, scope: !3324)
!3383 = !DILocation(line: 3557, column: 1, scope: !3324)
!3384 = distinct !DISubprogram(name: "matroska_read_close", scope: !939, file: !939, line: 3627, type: !2544, isLocal: true, isDefinition: true, scopeLine: 3628, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!3385 = !DILocalVariable(name: "s", arg: 1, scope: !3384, file: !939, line: 3627, type: !2398)
!3386 = !DILocation(line: 3627, column: 49, scope: !3384)
!3387 = !DILocalVariable(name: "matroska", scope: !3384, file: !939, line: 3629, type: !2392)
!3388 = !DILocation(line: 3629, column: 27, scope: !3384)
!3389 = !DILocation(line: 3629, column: 38, scope: !3384)
!3390 = !DILocation(line: 3629, column: 41, scope: !3384)
!3391 = !DILocalVariable(name: "tracks", scope: !3384, file: !939, line: 3630, type: !3392)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64, align: 64)
!3393 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTrack", file: !939, line: 244, baseType: !3394)
!3394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTrack", file: !939, line: 217, size: 11968, align: 64, elements: !3395)
!3395 = !{!3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3433, !3449, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3465}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3394, file: !939, line: 218, baseType: !1045, size: 64, align: 64)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3394, file: !939, line: 219, baseType: !1045, size: 64, align: 64, offset: 64)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3394, file: !939, line: 220, baseType: !1045, size: 64, align: 64, offset: 128)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3394, file: !939, line: 221, baseType: !1051, size: 64, align: 64, offset: 192)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !3394, file: !939, line: 222, baseType: !1051, size: 64, align: 64, offset: 256)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "codec_priv", scope: !3394, file: !939, line: 223, baseType: !1060, size: 256, align: 64, offset: 320)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !3394, file: !939, line: 224, baseType: !1051, size: 64, align: 64, offset: 576)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "time_scale", scope: !3394, file: !939, line: 225, baseType: !1057, size: 64, align: 64, offset: 640)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "default_duration", scope: !3394, file: !939, line: 226, baseType: !1045, size: 64, align: 64, offset: 704)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "flag_default", scope: !3394, file: !939, line: 227, baseType: !1045, size: 64, align: 64, offset: 768)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forced", scope: !3394, file: !939, line: 228, baseType: !1045, size: 64, align: 64, offset: 832)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !3394, file: !939, line: 229, baseType: !1045, size: 64, align: 64, offset: 896)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "video", scope: !3394, file: !939, line: 230, baseType: !3409, size: 1536, align: 64, offset: 960)
!3409 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTrackVideo", file: !939, line: 189, baseType: !3410)
!3410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTrackVideo", file: !939, line: 175, size: 1536, align: 64, elements: !3411)
!3411 = !{!3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate", scope: !3410, file: !939, line: 176, baseType: !1057, size: 64, align: 64)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "display_width", scope: !3410, file: !939, line: 177, baseType: !1045, size: 64, align: 64, offset: 64)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "display_height", scope: !3410, file: !939, line: 178, baseType: !1045, size: 64, align: 64, offset: 128)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_width", scope: !3410, file: !939, line: 179, baseType: !1045, size: 64, align: 64, offset: 192)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_height", scope: !3410, file: !939, line: 180, baseType: !1045, size: 64, align: 64, offset: 256)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !3410, file: !939, line: 181, baseType: !1060, size: 256, align: 64, offset: 320)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "display_unit", scope: !3410, file: !939, line: 182, baseType: !1045, size: 64, align: 64, offset: 576)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced", scope: !3410, file: !939, line: 183, baseType: !1045, size: 64, align: 64, offset: 640)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !3410, file: !939, line: 184, baseType: !1045, size: 64, align: 64, offset: 704)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_mode", scope: !3410, file: !939, line: 185, baseType: !1045, size: 64, align: 64, offset: 768)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !3410, file: !939, line: 186, baseType: !1045, size: 64, align: 64, offset: 832)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !3410, file: !939, line: 187, baseType: !2418, size: 128, align: 64, offset: 896)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "projection", scope: !3410, file: !939, line: 188, baseType: !3425, size: 512, align: 64, offset: 1024)
!3425 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTrackVideoProjection", file: !939, line: 173, baseType: !3426)
!3426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTrackVideoProjection", file: !939, line: 167, size: 512, align: 64, elements: !3427)
!3427 = !{!3428, !3429, !3430, !3431, !3432}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3426, file: !939, line: 168, baseType: !1045, size: 64, align: 64)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3426, file: !939, line: 169, baseType: !1060, size: 256, align: 64, offset: 64)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "yaw", scope: !3426, file: !939, line: 170, baseType: !1057, size: 64, align: 64, offset: 320)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !3426, file: !939, line: 171, baseType: !1057, size: 64, align: 64, offset: 384)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !3426, file: !939, line: 172, baseType: !1057, size: 64, align: 64, offset: 448)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !3394, file: !939, line: 231, baseType: !3434, size: 576, align: 64, offset: 2496)
!3434 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTrackAudio", file: !939, line: 206, baseType: !3435)
!3435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTrackAudio", file: !939, line: 191, size: 576, align: 64, elements: !3436)
!3436 = !{!3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "samplerate", scope: !3435, file: !939, line: 192, baseType: !1057, size: 64, align: 64)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "out_samplerate", scope: !3435, file: !939, line: 193, baseType: !1057, size: 64, align: 64, offset: 64)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "bitdepth", scope: !3435, file: !939, line: 194, baseType: !1045, size: 64, align: 64, offset: 128)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !3435, file: !939, line: 195, baseType: !1045, size: 64, align: 64, offset: 192)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "coded_framesize", scope: !3435, file: !939, line: 198, baseType: !1039, size: 32, align: 32, offset: 256)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "sub_packet_h", scope: !3435, file: !939, line: 199, baseType: !1039, size: 32, align: 32, offset: 288)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !3435, file: !939, line: 200, baseType: !1039, size: 32, align: 32, offset: 320)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "sub_packet_size", scope: !3435, file: !939, line: 201, baseType: !1039, size: 32, align: 32, offset: 352)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "sub_packet_cnt", scope: !3435, file: !939, line: 202, baseType: !1039, size: 32, align: 32, offset: 384)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_cnt", scope: !3435, file: !939, line: 203, baseType: !1039, size: 32, align: 32, offset: 416)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "buf_timecode", scope: !3435, file: !939, line: 204, baseType: !1045, size: 64, align: 64, offset: 448)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3435, file: !939, line: 205, baseType: !1053, size: 64, align: 64, offset: 512)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "operation", scope: !3394, file: !939, line: 232, baseType: !3450, size: 128, align: 64, offset: 3072)
!3450 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTrackOperation", file: !939, line: 215, baseType: !3451)
!3451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTrackOperation", file: !939, line: 213, size: 128, align: 64, elements: !3452)
!3452 = !{!3453}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "combine_planes", scope: !3451, file: !939, line: 214, baseType: !2418, size: 128, align: 64)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "encodings", scope: !3394, file: !939, line: 233, baseType: !2418, size: 128, align: 64, offset: 3200)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "codec_delay", scope: !3394, file: !939, line: 234, baseType: !1045, size: 64, align: 64, offset: 3328)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "codec_delay_in_track_tb", scope: !3394, file: !939, line: 235, baseType: !1045, size: 64, align: 64, offset: 3392)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !3394, file: !939, line: 237, baseType: !1478, size: 64, align: 64, offset: 3456)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "end_timecode", scope: !3394, file: !939, line: 238, baseType: !1047, size: 64, align: 64, offset: 3520)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "ms_compat", scope: !3394, file: !939, line: 239, baseType: !1039, size: 32, align: 32, offset: 3584)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "max_block_additional_id", scope: !3394, file: !939, line: 240, baseType: !1045, size: 64, align: 64, offset: 3648)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !3394, file: !939, line: 242, baseType: !3462, size: 8192, align: 32, offset: 3712)
!3462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1036, size: 8192, align: 32, elements: !3463)
!3463 = !{!3464}
!3464 = !DISubrange(count: 256)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "has_palette", scope: !3394, file: !939, line: 243, baseType: !1039, size: 32, align: 32, offset: 11904)
!3466 = !DILocation(line: 3630, column: 20, scope: !3384)
!3467 = !DILocation(line: 3630, column: 29, scope: !3384)
!3468 = !DILocation(line: 3630, column: 39, scope: !3384)
!3469 = !DILocation(line: 3630, column: 46, scope: !3384)
!3470 = !DILocalVariable(name: "n", scope: !3384, file: !939, line: 3631, type: !1039)
!3471 = !DILocation(line: 3631, column: 9, scope: !3384)
!3472 = !DILocation(line: 3633, column: 26, scope: !3384)
!3473 = !DILocation(line: 3633, column: 5, scope: !3384)
!3474 = !DILocation(line: 3635, column: 12, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3384, file: !939, line: 3635, column: 5)
!3476 = !DILocation(line: 3635, column: 10, scope: !3475)
!3477 = !DILocation(line: 3635, column: 17, scope: !3478)
!3478 = !DILexicalBlockFile(scope: !3479, file: !939, discriminator: 1)
!3479 = distinct !DILexicalBlock(scope: !3475, file: !939, line: 3635, column: 5)
!3480 = !DILocation(line: 3635, column: 21, scope: !3478)
!3481 = !DILocation(line: 3635, column: 31, scope: !3478)
!3482 = !DILocation(line: 3635, column: 38, scope: !3478)
!3483 = !DILocation(line: 3635, column: 19, scope: !3478)
!3484 = !DILocation(line: 3635, column: 5, scope: !3478)
!3485 = !DILocation(line: 3636, column: 20, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3479, file: !939, line: 3636, column: 13)
!3487 = !DILocation(line: 3636, column: 13, scope: !3486)
!3488 = !DILocation(line: 3636, column: 23, scope: !3486)
!3489 = !DILocation(line: 3636, column: 28, scope: !3486)
!3490 = !DILocation(line: 3636, column: 13, scope: !3479)
!3491 = !DILocation(line: 3637, column: 30, scope: !3486)
!3492 = !DILocation(line: 3637, column: 23, scope: !3486)
!3493 = !DILocation(line: 3637, column: 33, scope: !3486)
!3494 = !DILocation(line: 3637, column: 39, scope: !3486)
!3495 = !DILocation(line: 3637, column: 22, scope: !3486)
!3496 = !DILocation(line: 3637, column: 13, scope: !3486)
!3497 = !DILocation(line: 3636, column: 31, scope: !3498)
!3498 = !DILexicalBlockFile(scope: !3486, file: !939, discriminator: 1)
!3499 = !DILocation(line: 3635, column: 48, scope: !3500)
!3500 = !DILexicalBlockFile(scope: !3479, file: !939, discriminator: 2)
!3501 = !DILocation(line: 3635, column: 5, scope: !3500)
!3502 = distinct !{!3502, !3503}
!3503 = !DILocation(line: 3635, column: 5, scope: !3384)
!3504 = !DILocation(line: 3638, column: 34, scope: !3384)
!3505 = !DILocation(line: 3638, column: 44, scope: !3384)
!3506 = !DILocation(line: 3638, column: 33, scope: !3384)
!3507 = !DILocation(line: 3638, column: 5, scope: !3384)
!3508 = !DILocation(line: 3639, column: 33, scope: !3384)
!3509 = !DILocation(line: 3639, column: 5, scope: !3384)
!3510 = !DILocation(line: 3641, column: 5, scope: !3384)
!3511 = distinct !DISubprogram(name: "matroska_read_seek", scope: !939, file: !939, line: 3559, type: !3512, isLocal: true, isDefinition: true, scopeLine: 3561, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{!1039, !2398, !1039, !1047, !1039}
!3514 = !DILocalVariable(name: "s", arg: 1, scope: !3511, file: !939, line: 3559, type: !2398)
!3515 = !DILocation(line: 3559, column: 48, scope: !3511)
!3516 = !DILocalVariable(name: "stream_index", arg: 2, scope: !3511, file: !939, line: 3559, type: !1039)
!3517 = !DILocation(line: 3559, column: 55, scope: !3511)
!3518 = !DILocalVariable(name: "timestamp", arg: 3, scope: !3511, file: !939, line: 3560, type: !1047)
!3519 = !DILocation(line: 3560, column: 39, scope: !3511)
!3520 = !DILocalVariable(name: "flags", arg: 4, scope: !3511, file: !939, line: 3560, type: !1039)
!3521 = !DILocation(line: 3560, column: 54, scope: !3511)
!3522 = !DILocalVariable(name: "matroska", scope: !3511, file: !939, line: 3562, type: !2392)
!3523 = !DILocation(line: 3562, column: 27, scope: !3511)
!3524 = !DILocation(line: 3562, column: 38, scope: !3511)
!3525 = !DILocation(line: 3562, column: 41, scope: !3511)
!3526 = !DILocalVariable(name: "tracks", scope: !3511, file: !939, line: 3563, type: !3392)
!3527 = !DILocation(line: 3563, column: 20, scope: !3511)
!3528 = !DILocalVariable(name: "st", scope: !3511, file: !939, line: 3564, type: !1478)
!3529 = !DILocation(line: 3564, column: 15, scope: !3511)
!3530 = !DILocation(line: 3564, column: 31, scope: !3511)
!3531 = !DILocation(line: 3564, column: 20, scope: !3511)
!3532 = !DILocation(line: 3564, column: 23, scope: !3511)
!3533 = !DILocalVariable(name: "i", scope: !3511, file: !939, line: 3565, type: !1039)
!3534 = !DILocation(line: 3565, column: 9, scope: !3511)
!3535 = !DILocalVariable(name: "index", scope: !3511, file: !939, line: 3565, type: !1039)
!3536 = !DILocation(line: 3565, column: 12, scope: !3511)
!3537 = !DILocalVariable(name: "index_min", scope: !3511, file: !939, line: 3565, type: !1039)
!3538 = !DILocation(line: 3565, column: 19, scope: !3511)
!3539 = !DILocation(line: 3568, column: 9, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3511, file: !939, line: 3568, column: 9)
!3541 = !DILocation(line: 3568, column: 19, scope: !3540)
!3542 = !DILocation(line: 3568, column: 41, scope: !3540)
!3543 = !DILocation(line: 3568, column: 9, scope: !3511)
!3544 = !DILocation(line: 3569, column: 9, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3540, file: !939, line: 3568, column: 46)
!3546 = !DILocation(line: 3569, column: 19, scope: !3545)
!3547 = !DILocation(line: 3569, column: 41, scope: !3545)
!3548 = !DILocation(line: 3570, column: 29, scope: !3545)
!3549 = !DILocation(line: 3570, column: 9, scope: !3545)
!3550 = !DILocation(line: 3571, column: 5, scope: !3545)
!3551 = !DILocation(line: 3573, column: 10, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3511, file: !939, line: 3573, column: 9)
!3553 = !DILocation(line: 3573, column: 14, scope: !3552)
!3554 = !DILocation(line: 3573, column: 9, scope: !3511)
!3555 = !DILocation(line: 3574, column: 9, scope: !3552)
!3556 = !DILocation(line: 3575, column: 19, scope: !3511)
!3557 = !DILocation(line: 3575, column: 33, scope: !3511)
!3558 = !DILocation(line: 3575, column: 37, scope: !3511)
!3559 = !DILocation(line: 3575, column: 54, scope: !3511)
!3560 = !DILocation(line: 3575, column: 30, scope: !3511)
!3561 = !DILocation(line: 3575, column: 18, scope: !3511)
!3562 = !DILocation(line: 3575, column: 68, scope: !3563)
!3563 = !DILexicalBlockFile(scope: !3511, file: !939, discriminator: 1)
!3564 = !DILocation(line: 3575, column: 18, scope: !3563)
!3565 = !DILocation(line: 3575, column: 82, scope: !3566)
!3566 = !DILexicalBlockFile(scope: !3511, file: !939, discriminator: 2)
!3567 = !DILocation(line: 3575, column: 86, scope: !3566)
!3568 = !DILocation(line: 3575, column: 103, scope: !3566)
!3569 = !DILocation(line: 3575, column: 18, scope: !3566)
!3570 = !DILocation(line: 3575, column: 18, scope: !3571)
!3571 = !DILexicalBlockFile(scope: !3511, file: !939, discriminator: 3)
!3572 = !DILocation(line: 3575, column: 15, scope: !3571)
!3573 = !DILocation(line: 3577, column: 44, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3511, file: !939, line: 3577, column: 9)
!3575 = !DILocation(line: 3577, column: 48, scope: !3574)
!3576 = !DILocation(line: 3577, column: 59, scope: !3574)
!3577 = !DILocation(line: 3577, column: 18, scope: !3574)
!3578 = !DILocation(line: 3577, column: 16, scope: !3574)
!3579 = !DILocation(line: 3577, column: 67, scope: !3574)
!3580 = !DILocation(line: 3577, column: 71, scope: !3574)
!3581 = !DILocation(line: 3577, column: 74, scope: !3582)
!3582 = !DILexicalBlockFile(scope: !3574, file: !939, discriminator: 1)
!3583 = !DILocation(line: 3577, column: 83, scope: !3582)
!3584 = !DILocation(line: 3577, column: 87, scope: !3582)
!3585 = !DILocation(line: 3577, column: 104, scope: !3582)
!3586 = !DILocation(line: 3577, column: 80, scope: !3582)
!3587 = !DILocation(line: 3577, column: 9, scope: !3582)
!3588 = !DILocation(line: 3578, column: 19, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3574, file: !939, line: 3577, column: 109)
!3590 = !DILocation(line: 3578, column: 22, scope: !3589)
!3591 = !DILocation(line: 3578, column: 44, scope: !3589)
!3592 = !DILocation(line: 3578, column: 48, scope: !3589)
!3593 = !DILocation(line: 3578, column: 65, scope: !3589)
!3594 = !DILocation(line: 3578, column: 26, scope: !3589)
!3595 = !DILocation(line: 3578, column: 30, scope: !3589)
!3596 = !DILocation(line: 3578, column: 70, scope: !3589)
!3597 = !DILocation(line: 3578, column: 9, scope: !3589)
!3598 = !DILocation(line: 3580, column: 9, scope: !3589)
!3599 = !DILocation(line: 3580, column: 19, scope: !3589)
!3600 = !DILocation(line: 3580, column: 30, scope: !3589)
!3601 = !DILocation(line: 3581, column: 9, scope: !3589)
!3602 = !DILocation(line: 3581, column: 51, scope: !3603)
!3603 = !DILexicalBlockFile(scope: !3589, file: !939, discriminator: 1)
!3604 = !DILocation(line: 3581, column: 55, scope: !3603)
!3605 = !DILocation(line: 3581, column: 66, scope: !3603)
!3606 = !DILocation(line: 3581, column: 25, scope: !3603)
!3607 = !DILocation(line: 3581, column: 23, scope: !3603)
!3608 = !DILocation(line: 3581, column: 74, scope: !3603)
!3609 = !DILocation(line: 3581, column: 78, scope: !3603)
!3610 = !DILocation(line: 3581, column: 81, scope: !3611)
!3611 = !DILexicalBlockFile(scope: !3589, file: !939, discriminator: 2)
!3612 = !DILocation(line: 3581, column: 90, scope: !3611)
!3613 = !DILocation(line: 3581, column: 94, scope: !3611)
!3614 = !DILocation(line: 3581, column: 111, scope: !3611)
!3615 = !DILocation(line: 3581, column: 87, scope: !3611)
!3616 = !DILocation(line: 3581, column: 78, scope: !3611)
!3617 = !DILocation(line: 3581, column: 9, scope: !3618)
!3618 = !DILexicalBlockFile(scope: !3589, file: !939, discriminator: 3)
!3619 = !DILocation(line: 3582, column: 34, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3589, file: !939, line: 3581, column: 116)
!3621 = !DILocation(line: 3582, column: 13, scope: !3620)
!3622 = !DILocation(line: 3583, column: 40, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3620, file: !939, line: 3583, column: 17)
!3624 = !DILocation(line: 3583, column: 17, scope: !3623)
!3625 = !DILocation(line: 3583, column: 50, scope: !3623)
!3626 = !DILocation(line: 3583, column: 17, scope: !3620)
!3627 = !DILocation(line: 3584, column: 17, scope: !3623)
!3628 = !DILocation(line: 3581, column: 9, scope: !3629)
!3629 = !DILexicalBlockFile(scope: !3589, file: !939, discriminator: 4)
!3630 = distinct !{!3630, !3601}
!3631 = !DILocation(line: 3586, column: 5, scope: !3589)
!3632 = !DILocation(line: 3588, column: 26, scope: !3511)
!3633 = !DILocation(line: 3588, column: 5, scope: !3511)
!3634 = !DILocation(line: 3589, column: 9, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3511, file: !939, line: 3589, column: 9)
!3636 = !DILocation(line: 3589, column: 15, scope: !3635)
!3637 = !DILocation(line: 3589, column: 19, scope: !3635)
!3638 = !DILocation(line: 3589, column: 23, scope: !3639)
!3639 = !DILexicalBlockFile(scope: !3635, file: !939, discriminator: 1)
!3640 = !DILocation(line: 3589, column: 33, scope: !3639)
!3641 = !DILocation(line: 3589, column: 55, scope: !3639)
!3642 = !DILocation(line: 3589, column: 59, scope: !3639)
!3643 = !DILocation(line: 3589, column: 62, scope: !3644)
!3644 = !DILexicalBlockFile(scope: !3635, file: !939, discriminator: 2)
!3645 = !DILocation(line: 3589, column: 71, scope: !3644)
!3646 = !DILocation(line: 3589, column: 75, scope: !3644)
!3647 = !DILocation(line: 3589, column: 92, scope: !3644)
!3648 = !DILocation(line: 3589, column: 68, scope: !3644)
!3649 = !DILocation(line: 3589, column: 9, scope: !3644)
!3650 = !DILocation(line: 3590, column: 9, scope: !3635)
!3651 = !DILocation(line: 3592, column: 17, scope: !3511)
!3652 = !DILocation(line: 3592, column: 15, scope: !3511)
!3653 = !DILocation(line: 3593, column: 14, scope: !3511)
!3654 = !DILocation(line: 3593, column: 24, scope: !3511)
!3655 = !DILocation(line: 3593, column: 31, scope: !3511)
!3656 = !DILocation(line: 3593, column: 12, scope: !3511)
!3657 = !DILocation(line: 3594, column: 12, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3511, file: !939, line: 3594, column: 5)
!3659 = !DILocation(line: 3594, column: 10, scope: !3658)
!3660 = !DILocation(line: 3594, column: 17, scope: !3661)
!3661 = !DILexicalBlockFile(scope: !3662, file: !939, discriminator: 1)
!3662 = distinct !DILexicalBlock(scope: !3658, file: !939, line: 3594, column: 5)
!3663 = !DILocation(line: 3594, column: 21, scope: !3661)
!3664 = !DILocation(line: 3594, column: 31, scope: !3661)
!3665 = !DILocation(line: 3594, column: 38, scope: !3661)
!3666 = !DILocation(line: 3594, column: 19, scope: !3661)
!3667 = !DILocation(line: 3594, column: 5, scope: !3661)
!3668 = !DILocation(line: 3595, column: 16, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3662, file: !939, line: 3594, column: 52)
!3670 = !DILocation(line: 3595, column: 9, scope: !3669)
!3671 = !DILocation(line: 3595, column: 19, scope: !3669)
!3672 = !DILocation(line: 3595, column: 25, scope: !3669)
!3673 = !DILocation(line: 3595, column: 33, scope: !3669)
!3674 = !DILocation(line: 3596, column: 16, scope: !3669)
!3675 = !DILocation(line: 3596, column: 9, scope: !3669)
!3676 = !DILocation(line: 3596, column: 19, scope: !3669)
!3677 = !DILocation(line: 3596, column: 25, scope: !3669)
!3678 = !DILocation(line: 3596, column: 40, scope: !3669)
!3679 = !DILocation(line: 3597, column: 16, scope: !3669)
!3680 = !DILocation(line: 3597, column: 9, scope: !3669)
!3681 = !DILocation(line: 3597, column: 19, scope: !3669)
!3682 = !DILocation(line: 3597, column: 25, scope: !3669)
!3683 = !DILocation(line: 3597, column: 38, scope: !3669)
!3684 = !DILocation(line: 3598, column: 16, scope: !3669)
!3685 = !DILocation(line: 3598, column: 9, scope: !3669)
!3686 = !DILocation(line: 3598, column: 19, scope: !3669)
!3687 = !DILocation(line: 3598, column: 32, scope: !3669)
!3688 = !DILocation(line: 3599, column: 5, scope: !3669)
!3689 = !DILocation(line: 3594, column: 48, scope: !3690)
!3690 = !DILexicalBlockFile(scope: !3662, file: !939, discriminator: 2)
!3691 = !DILocation(line: 3594, column: 5, scope: !3690)
!3692 = distinct !{!3692, !3693}
!3693 = !DILocation(line: 3594, column: 5, scope: !3511)
!3694 = !DILocation(line: 3601, column: 15, scope: !3511)
!3695 = !DILocation(line: 3601, column: 18, scope: !3511)
!3696 = !DILocation(line: 3601, column: 40, scope: !3511)
!3697 = !DILocation(line: 3601, column: 22, scope: !3511)
!3698 = !DILocation(line: 3601, column: 26, scope: !3511)
!3699 = !DILocation(line: 3601, column: 51, scope: !3511)
!3700 = !DILocation(line: 3601, column: 5, scope: !3511)
!3701 = !DILocation(line: 3602, column: 5, scope: !3511)
!3702 = !DILocation(line: 3602, column: 15, scope: !3511)
!3703 = !DILocation(line: 3602, column: 26, scope: !3511)
!3704 = !DILocation(line: 3603, column: 9, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3511, file: !939, line: 3603, column: 9)
!3706 = !DILocation(line: 3603, column: 15, scope: !3705)
!3707 = !DILocation(line: 3603, column: 9, scope: !3511)
!3708 = !DILocation(line: 3604, column: 9, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3705, file: !939, line: 3603, column: 20)
!3710 = !DILocation(line: 3604, column: 13, scope: !3709)
!3711 = !DILocation(line: 3604, column: 30, scope: !3709)
!3712 = !DILocation(line: 3605, column: 38, scope: !3709)
!3713 = !DILocation(line: 3605, column: 9, scope: !3709)
!3714 = !DILocation(line: 3605, column: 19, scope: !3709)
!3715 = !DILocation(line: 3605, column: 36, scope: !3709)
!3716 = !DILocation(line: 3606, column: 5, scope: !3709)
!3717 = !DILocation(line: 3607, column: 9, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3705, file: !939, line: 3606, column: 12)
!3719 = !DILocation(line: 3607, column: 13, scope: !3718)
!3720 = !DILocation(line: 3607, column: 30, scope: !3718)
!3721 = !DILocation(line: 3608, column: 56, scope: !3718)
!3722 = !DILocation(line: 3608, column: 38, scope: !3718)
!3723 = !DILocation(line: 3608, column: 42, scope: !3718)
!3724 = !DILocation(line: 3608, column: 63, scope: !3718)
!3725 = !DILocation(line: 3608, column: 9, scope: !3718)
!3726 = !DILocation(line: 3608, column: 19, scope: !3718)
!3727 = !DILocation(line: 3608, column: 36, scope: !3718)
!3728 = !DILocation(line: 3610, column: 5, scope: !3511)
!3729 = !DILocation(line: 3610, column: 15, scope: !3511)
!3730 = !DILocation(line: 3610, column: 32, scope: !3511)
!3731 = !DILocation(line: 3611, column: 5, scope: !3511)
!3732 = !DILocation(line: 3611, column: 15, scope: !3511)
!3733 = !DILocation(line: 3611, column: 20, scope: !3511)
!3734 = !DILocation(line: 3612, column: 5, scope: !3511)
!3735 = !DILocation(line: 3612, column: 15, scope: !3511)
!3736 = !DILocation(line: 3612, column: 26, scope: !3511)
!3737 = !DILocation(line: 3613, column: 23, scope: !3511)
!3738 = !DILocation(line: 3613, column: 26, scope: !3511)
!3739 = !DILocation(line: 3613, column: 48, scope: !3511)
!3740 = !DILocation(line: 3613, column: 30, scope: !3511)
!3741 = !DILocation(line: 3613, column: 34, scope: !3511)
!3742 = !DILocation(line: 3613, column: 55, scope: !3511)
!3743 = !DILocation(line: 3613, column: 5, scope: !3511)
!3744 = !DILocation(line: 3614, column: 5, scope: !3511)
!3745 = !DILocation(line: 3618, column: 26, scope: !3511)
!3746 = !DILocation(line: 3618, column: 5, scope: !3511)
!3747 = !DILocation(line: 3619, column: 5, scope: !3511)
!3748 = !DILocation(line: 3619, column: 15, scope: !3511)
!3749 = !DILocation(line: 3619, column: 26, scope: !3511)
!3750 = !DILocation(line: 3621, column: 5, scope: !3511)
!3751 = !DILocation(line: 3621, column: 15, scope: !3511)
!3752 = !DILocation(line: 3621, column: 32, scope: !3511)
!3753 = !DILocation(line: 3620, column: 5, scope: !3511)
!3754 = !DILocation(line: 3620, column: 9, scope: !3511)
!3755 = !DILocation(line: 3620, column: 26, scope: !3511)
!3756 = !DILocation(line: 3622, column: 5, scope: !3511)
!3757 = !DILocation(line: 3622, column: 15, scope: !3511)
!3758 = !DILocation(line: 3622, column: 20, scope: !3511)
!3759 = !DILocation(line: 3623, column: 5, scope: !3511)
!3760 = !DILocation(line: 3623, column: 15, scope: !3511)
!3761 = !DILocation(line: 3623, column: 26, scope: !3511)
!3762 = !DILocation(line: 3624, column: 5, scope: !3511)
!3763 = !DILocation(line: 3625, column: 1, scope: !3511)
!3764 = distinct !DISubprogram(name: "webm_dash_manifest_read_header", scope: !939, file: !939, line: 3966, type: !2544, isLocal: true, isDefinition: true, scopeLine: 3967, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!3765 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !3766)
!3766 = distinct !DILocation(line: 3991, column: 22, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3768, file: !939, line: 3983, column: 29)
!3768 = distinct !DILexicalBlock(scope: !3764, file: !939, line: 3983, column: 9)
!3769 = !DILocalVariable(name: "s", arg: 1, scope: !3764, file: !939, line: 3966, type: !2398)
!3770 = !DILocation(line: 3966, column: 60, scope: !3764)
!3771 = !DILocalVariable(name: "buf", scope: !3764, file: !939, line: 3968, type: !1051)
!3772 = !DILocation(line: 3968, column: 11, scope: !3764)
!3773 = !DILocalVariable(name: "ret", scope: !3764, file: !939, line: 3969, type: !1039)
!3774 = !DILocation(line: 3969, column: 9, scope: !3764)
!3775 = !DILocation(line: 3969, column: 36, scope: !3764)
!3776 = !DILocation(line: 3969, column: 15, scope: !3764)
!3777 = !DILocalVariable(name: "init_range", scope: !3764, file: !939, line: 3970, type: !1047)
!3778 = !DILocation(line: 3970, column: 13, scope: !3764)
!3779 = !DILocalVariable(name: "tracks", scope: !3764, file: !939, line: 3971, type: !3392)
!3780 = !DILocation(line: 3971, column: 20, scope: !3764)
!3781 = !DILocalVariable(name: "matroska", scope: !3764, file: !939, line: 3972, type: !2392)
!3782 = !DILocation(line: 3972, column: 27, scope: !3764)
!3783 = !DILocation(line: 3972, column: 38, scope: !3764)
!3784 = !DILocation(line: 3972, column: 41, scope: !3764)
!3785 = !DILocation(line: 3973, column: 9, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3764, file: !939, line: 3973, column: 9)
!3787 = !DILocation(line: 3973, column: 9, scope: !3764)
!3788 = !DILocation(line: 3974, column: 16, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3786, file: !939, line: 3973, column: 14)
!3790 = !DILocation(line: 3974, column: 9, scope: !3789)
!3791 = !DILocation(line: 3975, column: 9, scope: !3789)
!3792 = !DILocation(line: 3977, column: 10, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3764, file: !939, line: 3977, column: 9)
!3794 = !DILocation(line: 3977, column: 13, scope: !3793)
!3795 = !DILocation(line: 3977, column: 9, scope: !3764)
!3796 = !DILocation(line: 3978, column: 29, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3793, file: !939, line: 3977, column: 25)
!3798 = !DILocation(line: 3978, column: 9, scope: !3797)
!3799 = !DILocation(line: 3979, column: 16, scope: !3797)
!3800 = !DILocation(line: 3979, column: 9, scope: !3797)
!3801 = !DILocation(line: 3980, column: 9, scope: !3797)
!3802 = !DILocation(line: 3983, column: 10, scope: !3768)
!3803 = !DILocation(line: 3983, column: 20, scope: !3768)
!3804 = !DILocation(line: 3983, column: 9, scope: !3764)
!3805 = !DILocation(line: 3984, column: 33, scope: !3767)
!3806 = !DILocation(line: 3984, column: 43, scope: !3767)
!3807 = !DILocation(line: 3984, column: 15, scope: !3767)
!3808 = !DILocation(line: 3984, column: 13, scope: !3767)
!3809 = !DILocation(line: 3985, column: 14, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3767, file: !939, line: 3985, column: 13)
!3811 = !DILocation(line: 3985, column: 13, scope: !3767)
!3812 = !DILocation(line: 3985, column: 19, scope: !3813)
!3813 = !DILexicalBlockFile(scope: !3810, file: !939, discriminator: 1)
!3814 = !DILocation(line: 3986, column: 22, scope: !3767)
!3815 = !DILocation(line: 3986, column: 25, scope: !3767)
!3816 = !DILocation(line: 3986, column: 37, scope: !3767)
!3817 = !DILocation(line: 3986, column: 78, scope: !3767)
!3818 = !DILocation(line: 3986, column: 9, scope: !3767)
!3819 = !DILocation(line: 3987, column: 17, scope: !3767)
!3820 = !DILocation(line: 3987, column: 9, scope: !3767)
!3821 = !DILocation(line: 3991, column: 32, scope: !3767)
!3822 = !DILocation(line: 3991, column: 35, scope: !3767)
!3823 = !DILocation(line: 3991, column: 22, scope: !3767)
!3824 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !3766)
!3825 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !3766)
!3826 = !DILocation(line: 3991, column: 39, scope: !3767)
!3827 = !DILocation(line: 3991, column: 20, scope: !3767)
!3828 = !DILocation(line: 3992, column: 26, scope: !3767)
!3829 = !DILocation(line: 3992, column: 29, scope: !3767)
!3830 = !DILocation(line: 3992, column: 41, scope: !3767)
!3831 = !DILocation(line: 3992, column: 94, scope: !3767)
!3832 = !DILocation(line: 3992, column: 9, scope: !3767)
!3833 = !DILocation(line: 3993, column: 5, scope: !3767)
!3834 = !DILocation(line: 3996, column: 19, scope: !3764)
!3835 = !DILocation(line: 3996, column: 22, scope: !3764)
!3836 = !DILocation(line: 3996, column: 11, scope: !3764)
!3837 = !DILocation(line: 3996, column: 9, scope: !3764)
!3838 = !DILocation(line: 3997, column: 18, scope: !3764)
!3839 = !DILocation(line: 3997, column: 21, scope: !3764)
!3840 = !DILocation(line: 3997, column: 33, scope: !3764)
!3841 = !DILocation(line: 3997, column: 75, scope: !3764)
!3842 = !DILocation(line: 3997, column: 81, scope: !3843)
!3843 = !DILexicalBlockFile(scope: !3764, file: !939, discriminator: 1)
!3844 = !DILocation(line: 3997, column: 75, scope: !3843)
!3845 = !DILocation(line: 3997, column: 89, scope: !3846)
!3846 = !DILexicalBlockFile(scope: !3764, file: !939, discriminator: 2)
!3847 = !DILocation(line: 3997, column: 92, scope: !3846)
!3848 = !DILocation(line: 3997, column: 75, scope: !3846)
!3849 = !DILocation(line: 3997, column: 75, scope: !3850)
!3850 = !DILexicalBlockFile(scope: !3764, file: !939, discriminator: 3)
!3851 = !DILocation(line: 3997, column: 5, scope: !3850)
!3852 = !DILocation(line: 4000, column: 14, scope: !3764)
!3853 = !DILocation(line: 4000, column: 24, scope: !3764)
!3854 = !DILocation(line: 4000, column: 31, scope: !3764)
!3855 = !DILocation(line: 4000, column: 12, scope: !3764)
!3856 = !DILocation(line: 4001, column: 22, scope: !3764)
!3857 = !DILocation(line: 4001, column: 25, scope: !3764)
!3858 = !DILocation(line: 4001, column: 37, scope: !3764)
!3859 = !DILocation(line: 4001, column: 82, scope: !3764)
!3860 = !DILocation(line: 4001, column: 92, scope: !3764)
!3861 = !DILocation(line: 4001, column: 5, scope: !3764)
!3862 = !DILocation(line: 4004, column: 10, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3764, file: !939, line: 4004, column: 9)
!3864 = !DILocation(line: 4004, column: 20, scope: !3863)
!3865 = !DILocation(line: 4004, column: 9, scope: !3764)
!3866 = !DILocation(line: 4005, column: 39, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3863, file: !939, line: 4004, column: 29)
!3868 = !DILocation(line: 4005, column: 42, scope: !3867)
!3869 = !DILocation(line: 4005, column: 15, scope: !3867)
!3870 = !DILocation(line: 4005, column: 13, scope: !3867)
!3871 = !DILocation(line: 4006, column: 13, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3867, file: !939, line: 4006, column: 13)
!3873 = !DILocation(line: 4006, column: 17, scope: !3872)
!3874 = !DILocation(line: 4006, column: 13, scope: !3867)
!3875 = !DILocation(line: 4007, column: 20, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3872, file: !939, line: 4006, column: 22)
!3877 = !DILocation(line: 4007, column: 13, scope: !3876)
!3878 = !DILocation(line: 4008, column: 20, scope: !3876)
!3879 = !DILocation(line: 4008, column: 13, scope: !3876)
!3880 = !DILocation(line: 4010, column: 5, scope: !3867)
!3881 = !DILocation(line: 4013, column: 9, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3764, file: !939, line: 4013, column: 9)
!3883 = !DILocation(line: 4013, column: 19, scope: !3882)
!3884 = !DILocation(line: 4013, column: 29, scope: !3882)
!3885 = !DILocation(line: 4013, column: 9, scope: !3764)
!3886 = !DILocation(line: 4014, column: 26, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3882, file: !939, line: 4013, column: 34)
!3888 = !DILocation(line: 4014, column: 29, scope: !3887)
!3889 = !DILocation(line: 4014, column: 41, scope: !3887)
!3890 = !DILocation(line: 4015, column: 25, scope: !3887)
!3891 = !DILocation(line: 4015, column: 35, scope: !3887)
!3892 = !DILocation(line: 4014, column: 9, scope: !3887)
!3893 = !DILocation(line: 4016, column: 5, scope: !3887)
!3894 = !DILocation(line: 4017, column: 5, scope: !3764)
!3895 = !DILocation(line: 4018, column: 1, scope: !3764)
!3896 = distinct !DISubprogram(name: "webm_dash_manifest_read_packet", scope: !939, file: !939, line: 4020, type: !3325, isLocal: true, isDefinition: true, scopeLine: 4021, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!3897 = !DILocalVariable(name: "s", arg: 1, scope: !3896, file: !939, line: 4020, type: !2398)
!3898 = !DILocation(line: 4020, column: 60, scope: !3896)
!3899 = !DILocalVariable(name: "pkt", arg: 2, scope: !3896, file: !939, line: 4020, type: !1256)
!3900 = !DILocation(line: 4020, column: 73, scope: !3896)
!3901 = !DILocation(line: 4022, column: 5, scope: !3896)
!3902 = distinct !DISubprogram(name: "ebml_parse", scope: !939, file: !939, line: 1060, type: !2390, isLocal: true, isDefinition: true, scopeLine: 1062, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!3903 = !DILocalVariable(name: "matroska", arg: 1, scope: !3902, file: !939, line: 1060, type: !2392)
!3904 = !DILocation(line: 1060, column: 45, scope: !3902)
!3905 = !DILocalVariable(name: "syntax", arg: 2, scope: !3902, file: !939, line: 1060, type: !2459)
!3906 = !DILocation(line: 1060, column: 67, scope: !3902)
!3907 = !DILocalVariable(name: "data", arg: 3, scope: !3902, file: !939, line: 1061, type: !1078)
!3908 = !DILocation(line: 1061, column: 29, scope: !3902)
!3909 = !DILocation(line: 1063, column: 10, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3902, file: !939, line: 1063, column: 9)
!3911 = !DILocation(line: 1063, column: 20, scope: !3910)
!3912 = !DILocation(line: 1063, column: 9, scope: !3902)
!3913 = !DILocalVariable(name: "id", scope: !3914, file: !939, line: 1064, type: !1045)
!3914 = distinct !DILexicalBlock(scope: !3910, file: !939, line: 1063, column: 32)
!3915 = !DILocation(line: 1064, column: 18, scope: !3914)
!3916 = !DILocalVariable(name: "res", scope: !3914, file: !939, line: 1065, type: !1039)
!3917 = !DILocation(line: 1065, column: 13, scope: !3914)
!3918 = !DILocation(line: 1065, column: 33, scope: !3914)
!3919 = !DILocation(line: 1065, column: 43, scope: !3914)
!3920 = !DILocation(line: 1065, column: 53, scope: !3914)
!3921 = !DILocation(line: 1065, column: 58, scope: !3914)
!3922 = !DILocation(line: 1065, column: 19, scope: !3914)
!3923 = !DILocation(line: 1066, column: 13, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3914, file: !939, line: 1066, column: 13)
!3925 = !DILocation(line: 1066, column: 17, scope: !3924)
!3926 = !DILocation(line: 1066, column: 13, scope: !3914)
!3927 = !DILocation(line: 1068, column: 21, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3924, file: !939, line: 1066, column: 22)
!3929 = !DILocation(line: 1068, column: 31, scope: !3928)
!3930 = !DILocation(line: 1068, column: 39, scope: !3928)
!3931 = !DILocation(line: 1068, column: 42, scope: !3932)
!3932 = !DILexicalBlockFile(scope: !3928, file: !939, discriminator: 1)
!3933 = !DILocation(line: 1068, column: 52, scope: !3932)
!3934 = !DILocation(line: 1068, column: 57, scope: !3932)
!3935 = !DILocation(line: 1068, column: 61, scope: !3932)
!3936 = !DILocation(line: 1068, column: 73, scope: !3932)
!3937 = !DILocation(line: 1069, column: 21, scope: !3928)
!3938 = !DILocation(line: 1069, column: 25, scope: !3928)
!3939 = !DILocation(line: 1068, column: 20, scope: !3940)
!3940 = !DILexicalBlockFile(scope: !3928, file: !939, discriminator: 2)
!3941 = !DILocation(line: 1068, column: 20, scope: !3942)
!3942 = !DILexicalBlockFile(scope: !3928, file: !939, discriminator: 3)
!3943 = !DILocation(line: 1069, column: 108, scope: !3932)
!3944 = !DILocation(line: 1068, column: 20, scope: !3945)
!3945 = !DILexicalBlockFile(scope: !3928, file: !939, discriminator: 4)
!3946 = !DILocation(line: 1068, column: 20, scope: !3947)
!3947 = !DILexicalBlockFile(scope: !3928, file: !939, discriminator: 5)
!3948 = !DILocation(line: 1068, column: 13, scope: !3947)
!3949 = !DILocation(line: 1071, column: 32, scope: !3914)
!3950 = !DILocation(line: 1071, column: 46, scope: !3914)
!3951 = !DILocation(line: 1071, column: 44, scope: !3914)
!3952 = !DILocation(line: 1071, column: 39, scope: !3914)
!3953 = !DILocation(line: 1071, column: 37, scope: !3914)
!3954 = !DILocation(line: 1071, column: 35, scope: !3914)
!3955 = !DILocation(line: 1071, column: 9, scope: !3914)
!3956 = !DILocation(line: 1071, column: 19, scope: !3914)
!3957 = !DILocation(line: 1071, column: 30, scope: !3914)
!3958 = !DILocation(line: 1072, column: 5, scope: !3914)
!3959 = !DILocation(line: 1073, column: 26, scope: !3902)
!3960 = !DILocation(line: 1073, column: 36, scope: !3902)
!3961 = !DILocation(line: 1073, column: 44, scope: !3902)
!3962 = !DILocation(line: 1073, column: 54, scope: !3902)
!3963 = !DILocation(line: 1073, column: 66, scope: !3902)
!3964 = !DILocation(line: 1073, column: 12, scope: !3902)
!3965 = !DILocation(line: 1073, column: 5, scope: !3902)
!3966 = !DILocation(line: 1074, column: 1, scope: !3902)
!3967 = distinct !DISubprogram(name: "ebml_free", scope: !939, file: !939, line: 1262, type: !3968, isLocal: true, isDefinition: true, scopeLine: 1263, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{null, !2459, !1078}
!3970 = !DILocalVariable(name: "syntax", arg: 1, scope: !3967, file: !939, line: 1262, type: !2459)
!3971 = !DILocation(line: 1262, column: 35, scope: !3967)
!3972 = !DILocalVariable(name: "data", arg: 2, scope: !3967, file: !939, line: 1262, type: !1078)
!3973 = !DILocation(line: 1262, column: 49, scope: !3967)
!3974 = !DILocalVariable(name: "i", scope: !3967, file: !939, line: 1264, type: !1039)
!3975 = !DILocation(line: 1264, column: 9, scope: !3967)
!3976 = !DILocalVariable(name: "j", scope: !3967, file: !939, line: 1264, type: !1039)
!3977 = !DILocation(line: 1264, column: 12, scope: !3967)
!3978 = !DILocation(line: 1265, column: 12, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3967, file: !939, line: 1265, column: 5)
!3980 = !DILocation(line: 1265, column: 10, scope: !3979)
!3981 = !DILocation(line: 1265, column: 24, scope: !3982)
!3982 = !DILexicalBlockFile(scope: !3983, file: !939, discriminator: 1)
!3983 = distinct !DILexicalBlock(scope: !3979, file: !939, line: 1265, column: 5)
!3984 = !DILocation(line: 1265, column: 17, scope: !3982)
!3985 = !DILocation(line: 1265, column: 27, scope: !3982)
!3986 = !DILocation(line: 1265, column: 5, scope: !3982)
!3987 = !DILocalVariable(name: "data_off", scope: !3988, file: !939, line: 1266, type: !1078)
!3988 = distinct !DILexicalBlock(scope: !3983, file: !939, line: 1265, column: 36)
!3989 = !DILocation(line: 1266, column: 15, scope: !3988)
!3990 = !DILocation(line: 1266, column: 35, scope: !3988)
!3991 = !DILocation(line: 1266, column: 49, scope: !3988)
!3992 = !DILocation(line: 1266, column: 42, scope: !3988)
!3993 = !DILocation(line: 1266, column: 52, scope: !3988)
!3994 = !DILocation(line: 1266, column: 40, scope: !3988)
!3995 = !DILocation(line: 1267, column: 24, scope: !3988)
!3996 = !DILocation(line: 1267, column: 17, scope: !3988)
!3997 = !DILocation(line: 1267, column: 27, scope: !3988)
!3998 = !DILocation(line: 1267, column: 9, scope: !3988)
!3999 = !DILocation(line: 1270, column: 22, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3988, file: !939, line: 1267, column: 33)
!4001 = !DILocation(line: 1270, column: 13, scope: !4000)
!4002 = !DILocation(line: 1271, column: 13, scope: !4000)
!4003 = !DILocation(line: 1273, column: 43, scope: !4000)
!4004 = !DILocation(line: 1273, column: 31, scope: !4000)
!4005 = !DILocation(line: 1273, column: 54, scope: !4000)
!4006 = !DILocation(line: 1273, column: 13, scope: !4000)
!4007 = !DILocation(line: 1274, column: 13, scope: !4000)
!4008 = !DILocation(line: 1277, column: 24, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4000, file: !939, line: 1277, column: 17)
!4010 = !DILocation(line: 1277, column: 17, scope: !4009)
!4011 = !DILocation(line: 1277, column: 27, scope: !4009)
!4012 = !DILocation(line: 1277, column: 17, scope: !4000)
!4013 = !DILocalVariable(name: "list", scope: !4014, file: !939, line: 1278, type: !2751)
!4014 = distinct !DILexicalBlock(scope: !4009, file: !939, line: 1277, column: 43)
!4015 = !DILocation(line: 1278, column: 27, scope: !4014)
!4016 = !DILocation(line: 1278, column: 34, scope: !4014)
!4017 = !DILocalVariable(name: "ptr", scope: !4014, file: !939, line: 1279, type: !1051)
!4018 = !DILocation(line: 1279, column: 23, scope: !4014)
!4019 = !DILocation(line: 1279, column: 29, scope: !4014)
!4020 = !DILocation(line: 1279, column: 35, scope: !4014)
!4021 = !DILocation(line: 1280, column: 24, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4014, file: !939, line: 1280, column: 17)
!4023 = !DILocation(line: 1280, column: 22, scope: !4022)
!4024 = !DILocation(line: 1280, column: 29, scope: !4025)
!4025 = !DILexicalBlockFile(scope: !4026, file: !939, discriminator: 1)
!4026 = distinct !DILexicalBlock(scope: !4022, file: !939, line: 1280, column: 17)
!4027 = !DILocation(line: 1280, column: 33, scope: !4025)
!4028 = !DILocation(line: 1280, column: 39, scope: !4025)
!4029 = !DILocation(line: 1280, column: 31, scope: !4025)
!4030 = !DILocation(line: 1280, column: 17, scope: !4025)
!4031 = !DILocation(line: 1282, column: 38, scope: !4026)
!4032 = !DILocation(line: 1282, column: 31, scope: !4026)
!4033 = !DILocation(line: 1282, column: 41, scope: !4026)
!4034 = !DILocation(line: 1282, column: 45, scope: !4026)
!4035 = !DILocation(line: 1282, column: 48, scope: !4026)
!4036 = !DILocation(line: 1282, column: 21, scope: !4026)
!4037 = !DILocation(line: 1281, column: 23, scope: !4026)
!4038 = !DILocation(line: 1281, column: 41, scope: !4026)
!4039 = !DILocation(line: 1281, column: 34, scope: !4026)
!4040 = !DILocation(line: 1281, column: 44, scope: !4026)
!4041 = !DILocation(line: 1281, column: 31, scope: !4026)
!4042 = !DILocation(line: 1280, column: 17, scope: !4043)
!4043 = !DILexicalBlockFile(scope: !4026, file: !939, discriminator: 2)
!4044 = distinct !{!4044, !4045}
!4045 = !DILocation(line: 1280, column: 17, scope: !4014)
!4046 = !DILocation(line: 1283, column: 27, scope: !4014)
!4047 = !DILocation(line: 1283, column: 33, scope: !4014)
!4048 = !DILocation(line: 1283, column: 26, scope: !4014)
!4049 = !DILocation(line: 1283, column: 17, scope: !4014)
!4050 = !DILocation(line: 1284, column: 17, scope: !4014)
!4051 = !DILocation(line: 1284, column: 23, scope: !4014)
!4052 = !DILocation(line: 1284, column: 31, scope: !4014)
!4053 = !DILocation(line: 1285, column: 13, scope: !4014)
!4054 = !DILocation(line: 1286, column: 34, scope: !4009)
!4055 = !DILocation(line: 1286, column: 27, scope: !4009)
!4056 = !DILocation(line: 1286, column: 37, scope: !4009)
!4057 = !DILocation(line: 1286, column: 41, scope: !4009)
!4058 = !DILocation(line: 1286, column: 44, scope: !4009)
!4059 = !DILocation(line: 1286, column: 17, scope: !4009)
!4060 = !DILocation(line: 1277, column: 27, scope: !4061)
!4061 = !DILexicalBlockFile(scope: !4009, file: !939, discriminator: 1)
!4062 = !DILocation(line: 1288, column: 13, scope: !4000)
!4063 = !DILocation(line: 1290, column: 5, scope: !3988)
!4064 = !DILocation(line: 1265, column: 32, scope: !4065)
!4065 = !DILexicalBlockFile(scope: !3983, file: !939, discriminator: 2)
!4066 = !DILocation(line: 1265, column: 5, scope: !4065)
!4067 = distinct !{!4067, !4068}
!4068 = !DILocation(line: 1265, column: 5, scope: !3967)
!4069 = !DILocation(line: 1291, column: 1, scope: !3967)
!4070 = distinct !DISubprogram(name: "matroska_resync", scope: !939, file: !939, line: 763, type: !4071, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!4071 = !DISubroutineType(types: !4072)
!4072 = !{!1039, !2392, !1047}
!4073 = !DILocalVariable(name: "matroska", arg: 1, scope: !4070, file: !939, line: 763, type: !2392)
!4074 = !DILocation(line: 763, column: 50, scope: !4070)
!4075 = !DILocalVariable(name: "last_pos", arg: 2, scope: !4070, file: !939, line: 763, type: !1047)
!4076 = !DILocation(line: 763, column: 68, scope: !4070)
!4077 = !DILocalVariable(name: "pb", scope: !4070, file: !939, line: 765, type: !1412)
!4078 = !DILocation(line: 765, column: 18, scope: !4070)
!4079 = !DILocation(line: 765, column: 23, scope: !4070)
!4080 = !DILocation(line: 765, column: 33, scope: !4070)
!4081 = !DILocation(line: 765, column: 38, scope: !4070)
!4082 = !DILocalVariable(name: "ret", scope: !4070, file: !939, line: 766, type: !1047)
!4083 = !DILocation(line: 766, column: 13, scope: !4070)
!4084 = !DILocalVariable(name: "id", scope: !4070, file: !939, line: 767, type: !1036)
!4085 = !DILocation(line: 767, column: 14, scope: !4070)
!4086 = !DILocation(line: 768, column: 5, scope: !4070)
!4087 = !DILocation(line: 768, column: 15, scope: !4070)
!4088 = !DILocation(line: 768, column: 26, scope: !4070)
!4089 = !DILocation(line: 769, column: 5, scope: !4070)
!4090 = !DILocation(line: 769, column: 15, scope: !4070)
!4091 = !DILocation(line: 769, column: 26, scope: !4070)
!4092 = !DILocation(line: 772, column: 26, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4070, file: !939, line: 772, column: 9)
!4094 = !DILocation(line: 772, column: 30, scope: !4093)
!4095 = !DILocation(line: 772, column: 39, scope: !4093)
!4096 = !DILocation(line: 772, column: 16, scope: !4093)
!4097 = !DILocation(line: 772, column: 14, scope: !4093)
!4098 = !DILocation(line: 772, column: 54, scope: !4093)
!4099 = !DILocation(line: 772, column: 9, scope: !4070)
!4100 = !DILocation(line: 773, column: 9, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4093, file: !939, line: 772, column: 59)
!4102 = !DILocation(line: 773, column: 19, scope: !4101)
!4103 = !DILocation(line: 773, column: 24, scope: !4101)
!4104 = !DILocation(line: 774, column: 16, scope: !4101)
!4105 = !DILocation(line: 774, column: 9, scope: !4101)
!4106 = !DILocation(line: 777, column: 20, scope: !4070)
!4107 = !DILocation(line: 777, column: 10, scope: !4070)
!4108 = !DILocation(line: 777, column: 8, scope: !4070)
!4109 = !DILocation(line: 780, column: 5, scope: !4070)
!4110 = !DILocation(line: 780, column: 23, scope: !4111)
!4111 = !DILexicalBlockFile(scope: !4070, file: !939, discriminator: 1)
!4112 = !DILocation(line: 780, column: 13, scope: !4111)
!4113 = !DILocation(line: 780, column: 12, scope: !4111)
!4114 = !DILocation(line: 780, column: 5, scope: !4111)
!4115 = !DILocation(line: 781, column: 13, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !939, line: 781, column: 13)
!4117 = distinct !DILexicalBlock(scope: !4070, file: !939, line: 780, column: 28)
!4118 = !DILocation(line: 781, column: 16, scope: !4116)
!4119 = !DILocation(line: 781, column: 30, scope: !4116)
!4120 = !DILocation(line: 781, column: 33, scope: !4121)
!4121 = !DILexicalBlockFile(scope: !4116, file: !939, discriminator: 1)
!4122 = !DILocation(line: 781, column: 36, scope: !4121)
!4123 = !DILocation(line: 781, column: 50, scope: !4121)
!4124 = !DILocation(line: 782, column: 13, scope: !4116)
!4125 = !DILocation(line: 782, column: 16, scope: !4116)
!4126 = !DILocation(line: 782, column: 30, scope: !4116)
!4127 = !DILocation(line: 782, column: 33, scope: !4121)
!4128 = !DILocation(line: 782, column: 36, scope: !4121)
!4129 = !DILocation(line: 782, column: 50, scope: !4121)
!4130 = !DILocation(line: 783, column: 13, scope: !4116)
!4131 = !DILocation(line: 783, column: 16, scope: !4116)
!4132 = !DILocation(line: 783, column: 30, scope: !4116)
!4133 = !DILocation(line: 783, column: 33, scope: !4121)
!4134 = !DILocation(line: 783, column: 36, scope: !4121)
!4135 = !DILocation(line: 783, column: 50, scope: !4121)
!4136 = !DILocation(line: 784, column: 13, scope: !4116)
!4137 = !DILocation(line: 784, column: 16, scope: !4116)
!4138 = !DILocation(line: 784, column: 30, scope: !4116)
!4139 = !DILocation(line: 784, column: 33, scope: !4121)
!4140 = !DILocation(line: 784, column: 36, scope: !4121)
!4141 = !DILocation(line: 781, column: 13, scope: !4142)
!4142 = !DILexicalBlockFile(scope: !4117, file: !939, discriminator: 2)
!4143 = !DILocation(line: 785, column: 36, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4116, file: !939, line: 784, column: 51)
!4145 = !DILocation(line: 785, column: 13, scope: !4144)
!4146 = !DILocation(line: 785, column: 23, scope: !4144)
!4147 = !DILocation(line: 785, column: 34, scope: !4144)
!4148 = !DILocation(line: 786, column: 13, scope: !4144)
!4149 = !DILocation(line: 788, column: 15, scope: !4117)
!4150 = !DILocation(line: 788, column: 18, scope: !4117)
!4151 = !DILocation(line: 788, column: 34, scope: !4117)
!4152 = !DILocation(line: 788, column: 26, scope: !4117)
!4153 = !DILocation(line: 788, column: 24, scope: !4117)
!4154 = !DILocation(line: 788, column: 12, scope: !4117)
!4155 = !DILocation(line: 780, column: 5, scope: !4156)
!4156 = !DILexicalBlockFile(scope: !4070, file: !939, discriminator: 2)
!4157 = distinct !{!4157, !4109}
!4158 = !DILocation(line: 791, column: 5, scope: !4070)
!4159 = !DILocation(line: 791, column: 15, scope: !4070)
!4160 = !DILocation(line: 791, column: 20, scope: !4070)
!4161 = !DILocation(line: 792, column: 5, scope: !4070)
!4162 = !DILocation(line: 793, column: 1, scope: !4070)
!4163 = distinct !DISubprogram(name: "matroska_execute_seekhead", scope: !939, file: !939, line: 1636, type: !4164, isLocal: true, isDefinition: true, scopeLine: 1637, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!4164 = !DISubroutineType(types: !4165)
!4165 = !{null, !2392}
!4166 = !DILocalVariable(name: "matroska", arg: 1, scope: !4163, file: !939, line: 1636, type: !2392)
!4167 = !DILocation(line: 1636, column: 61, scope: !4163)
!4168 = !DILocalVariable(name: "seekhead_list", scope: !4163, file: !939, line: 1638, type: !2751)
!4169 = !DILocation(line: 1638, column: 15, scope: !4163)
!4170 = !DILocation(line: 1638, column: 32, scope: !4163)
!4171 = !DILocation(line: 1638, column: 42, scope: !4163)
!4172 = !DILocalVariable(name: "i", scope: !4163, file: !939, line: 1639, type: !1039)
!4173 = !DILocation(line: 1639, column: 9, scope: !4163)
!4174 = !DILocation(line: 1642, column: 11, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4163, file: !939, line: 1642, column: 9)
!4176 = !DILocation(line: 1642, column: 21, scope: !4175)
!4177 = !DILocation(line: 1642, column: 26, scope: !4175)
!4178 = !DILocation(line: 1642, column: 30, scope: !4175)
!4179 = !DILocation(line: 1642, column: 39, scope: !4175)
!4180 = !DILocation(line: 1642, column: 9, scope: !4163)
!4181 = !DILocation(line: 1643, column: 9, scope: !4175)
!4182 = !DILocation(line: 1645, column: 12, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4163, file: !939, line: 1645, column: 5)
!4184 = !DILocation(line: 1645, column: 10, scope: !4183)
!4185 = !DILocation(line: 1645, column: 17, scope: !4186)
!4186 = !DILexicalBlockFile(scope: !4187, file: !939, discriminator: 1)
!4187 = distinct !DILexicalBlock(scope: !4183, file: !939, line: 1645, column: 5)
!4188 = !DILocation(line: 1645, column: 21, scope: !4186)
!4189 = !DILocation(line: 1645, column: 36, scope: !4186)
!4190 = !DILocation(line: 1645, column: 19, scope: !4186)
!4191 = !DILocation(line: 1645, column: 5, scope: !4186)
!4192 = !DILocalVariable(name: "seekheads", scope: !4193, file: !939, line: 1646, type: !4194)
!4193 = distinct !DILexicalBlock(scope: !4187, file: !939, line: 1645, column: 50)
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64, align: 64)
!4195 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaSeekhead", file: !939, line: 298, baseType: !4196)
!4196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaSeekhead", file: !939, line: 295, size: 128, align: 64, elements: !4197)
!4197 = !{!4198, !4199}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4196, file: !939, line: 296, baseType: !1045, size: 64, align: 64)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4196, file: !939, line: 297, baseType: !1045, size: 64, align: 64, offset: 64)
!4200 = !DILocation(line: 1646, column: 27, scope: !4193)
!4201 = !DILocation(line: 1646, column: 39, scope: !4193)
!4202 = !DILocation(line: 1646, column: 54, scope: !4193)
!4203 = !DILocalVariable(name: "id", scope: !4193, file: !939, line: 1647, type: !1036)
!4204 = !DILocation(line: 1647, column: 18, scope: !4193)
!4205 = !DILocation(line: 1647, column: 33, scope: !4193)
!4206 = !DILocation(line: 1647, column: 23, scope: !4193)
!4207 = !DILocation(line: 1647, column: 36, scope: !4193)
!4208 = !DILocalVariable(name: "pos", scope: !4193, file: !939, line: 1648, type: !1045)
!4209 = !DILocation(line: 1648, column: 18, scope: !4193)
!4210 = !DILocation(line: 1648, column: 34, scope: !4193)
!4211 = !DILocation(line: 1648, column: 24, scope: !4193)
!4212 = !DILocation(line: 1648, column: 37, scope: !4193)
!4213 = !DILocalVariable(name: "elem", scope: !4193, file: !939, line: 1650, type: !4214)
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64, align: 64)
!4215 = !DILocation(line: 1650, column: 32, scope: !4193)
!4216 = !DILocation(line: 1650, column: 65, scope: !4193)
!4217 = !DILocation(line: 1650, column: 75, scope: !4193)
!4218 = !DILocation(line: 1650, column: 39, scope: !4193)
!4219 = !DILocation(line: 1651, column: 14, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4193, file: !939, line: 1651, column: 13)
!4221 = !DILocation(line: 1651, column: 19, scope: !4220)
!4222 = !DILocation(line: 1651, column: 22, scope: !4223)
!4223 = !DILexicalBlockFile(scope: !4220, file: !939, discriminator: 1)
!4224 = !DILocation(line: 1651, column: 28, scope: !4223)
!4225 = !DILocation(line: 1651, column: 13, scope: !4223)
!4226 = !DILocation(line: 1652, column: 13, scope: !4220)
!4227 = !DILocation(line: 1654, column: 21, scope: !4193)
!4228 = !DILocation(line: 1654, column: 9, scope: !4193)
!4229 = !DILocation(line: 1654, column: 15, scope: !4193)
!4230 = !DILocation(line: 1654, column: 19, scope: !4193)
!4231 = !DILocation(line: 1657, column: 13, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4193, file: !939, line: 1657, column: 13)
!4233 = !DILocation(line: 1657, column: 16, scope: !4232)
!4234 = !DILocation(line: 1657, column: 13, scope: !4193)
!4235 = !DILocation(line: 1658, column: 13, scope: !4232)
!4236 = !DILocation(line: 1660, column: 43, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4193, file: !939, line: 1660, column: 13)
!4238 = !DILocation(line: 1660, column: 53, scope: !4237)
!4239 = !DILocation(line: 1660, column: 13, scope: !4237)
!4240 = !DILocation(line: 1660, column: 58, scope: !4237)
!4241 = !DILocation(line: 1660, column: 13, scope: !4193)
!4242 = !DILocation(line: 1662, column: 13, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4237, file: !939, line: 1660, column: 63)
!4244 = !DILocation(line: 1662, column: 23, scope: !4243)
!4245 = !DILocation(line: 1662, column: 45, scope: !4243)
!4246 = !DILocation(line: 1663, column: 13, scope: !4243)
!4247 = !DILocation(line: 1666, column: 9, scope: !4193)
!4248 = !DILocation(line: 1666, column: 15, scope: !4193)
!4249 = !DILocation(line: 1666, column: 22, scope: !4193)
!4250 = !DILocation(line: 1667, column: 5, scope: !4193)
!4251 = !DILocation(line: 1645, column: 46, scope: !4252)
!4252 = !DILexicalBlockFile(scope: !4187, file: !939, discriminator: 2)
!4253 = !DILocation(line: 1645, column: 5, scope: !4252)
!4254 = distinct !{!4254, !4255}
!4255 = !DILocation(line: 1645, column: 5, scope: !4163)
!4256 = !DILocation(line: 1668, column: 1, scope: !4163)
!4257 = distinct !DISubprogram(name: "matroska_metadata_creation_time", scope: !939, file: !939, line: 1743, type: !4258, isLocal: true, isDefinition: true, scopeLine: 1744, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!4258 = !DISubroutineType(types: !4259)
!4259 = !{null, !2353, !1047}
!4260 = !DILocalVariable(name: "metadata", arg: 1, scope: !4257, file: !939, line: 1743, type: !2353)
!4261 = !DILocation(line: 1743, column: 60, scope: !4257)
!4262 = !DILocalVariable(name: "date_utc", arg: 2, scope: !4257, file: !939, line: 1743, type: !1047)
!4263 = !DILocation(line: 1743, column: 78, scope: !4257)
!4264 = !DILocation(line: 1746, column: 31, scope: !4257)
!4265 = !DILocation(line: 1746, column: 58, scope: !4257)
!4266 = !DILocation(line: 1746, column: 67, scope: !4257)
!4267 = !DILocation(line: 1746, column: 74, scope: !4257)
!4268 = !DILocation(line: 1746, column: 5, scope: !4257)
!4269 = !DILocation(line: 1747, column: 1, scope: !4257)
!4270 = distinct !DISubprogram(name: "av_bswap64", scope: !2571, file: !2571, line: 73, type: !4271, isLocal: true, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!4271 = !DISubroutineType(types: !4272)
!4272 = !{!1045, !1045}
!4273 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !4274)
!4274 = distinct !DILocation(line: 75, column: 44, scope: !4275)
!4275 = !DILexicalBlockFile(scope: !4270, file: !2571, discriminator: 1)
!4276 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !4277)
!4277 = distinct !DILocation(line: 75, column: 22, scope: !4270)
!4278 = !DILocalVariable(name: "x", arg: 1, scope: !4270, file: !2571, line: 73, type: !1045)
!4279 = !DILocation(line: 73, column: 67, scope: !4270)
!4280 = !DILocation(line: 75, column: 33, scope: !4270)
!4281 = !DILocation(line: 75, column: 22, scope: !4270)
!4282 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !4277)
!4283 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !4277)
!4284 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !4277)
!4285 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !4277)
!4286 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !4277)
!4287 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !4277)
!4288 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !4277)
!4289 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !4277)
!4290 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !4277)
!4291 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !4277)
!4292 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !4277)
!4293 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !4277)
!4294 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !4277)
!4295 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !4277)
!4296 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !4277)
!4297 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !4277)
!4298 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !4277)
!4299 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !4277)
!4300 = !DILocation(line: 75, column: 12, scope: !4270)
!4301 = !DILocation(line: 75, column: 36, scope: !4270)
!4302 = !DILocation(line: 75, column: 55, scope: !4270)
!4303 = !DILocation(line: 75, column: 57, scope: !4270)
!4304 = !DILocation(line: 75, column: 44, scope: !4275)
!4305 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !4274)
!4306 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !4274)
!4307 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !4274)
!4308 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !4274)
!4309 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !4274)
!4310 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !4274)
!4311 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !4274)
!4312 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !4274)
!4313 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !4274)
!4314 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !4274)
!4315 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !4274)
!4316 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !4274)
!4317 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !4274)
!4318 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !4274)
!4319 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !4274)
!4320 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !4274)
!4321 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !4274)
!4322 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !4274)
!4323 = !DILocation(line: 75, column: 44, scope: !4270)
!4324 = !DILocation(line: 75, column: 42, scope: !4270)
!4325 = !DILocation(line: 75, column: 5, scope: !4270)
!4326 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !4327)
!4327 = distinct !DILocation(line: 2347, column: 63, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !939, line: 2336, column: 125)
!4329 = distinct !DILexicalBlock(scope: !4330, file: !939, line: 2336, column: 20)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !939, line: 2320, column: 20)
!4331 = distinct !DILexicalBlock(scope: !4332, file: !939, line: 2317, column: 20)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !939, line: 2305, column: 20)
!4333 = distinct !DILexicalBlock(scope: !4334, file: !939, line: 2293, column: 20)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !939, line: 2270, column: 20)
!4335 = distinct !DILexicalBlock(scope: !4336, file: !939, line: 2248, column: 20)
!4336 = distinct !DILexicalBlock(scope: !4337, file: !939, line: 2235, column: 20)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2223, column: 13)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !939, line: 2085, column: 52)
!4339 = distinct !DILexicalBlock(scope: !4340, file: !939, line: 2085, column: 5)
!4340 = distinct !DILexicalBlock(scope: !2543, file: !939, line: 2085, column: 5)
!4341 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !4342)
!4342 = distinct !DILocation(line: 2345, column: 59, scope: !4328)
!4343 = !DILocalVariable(name: "x", arg: 1, scope: !4344, file: !2571, line: 58, type: !1084)
!4344 = distinct !DISubprogram(name: "av_bswap16", scope: !2571, file: !2571, line: 58, type: !4345, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!4345 = !DISubroutineType(types: !4346)
!4346 = !{!1084, !1084}
!4347 = !DILocation(line: 58, column: 98, scope: !4344, inlinedAt: !4348)
!4348 = distinct !DILocation(line: 2284, column: 29, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !939, line: 2283, column: 47)
!4350 = distinct !DILexicalBlock(scope: !4351, file: !939, line: 2283, column: 17)
!4351 = distinct !DILexicalBlock(scope: !4334, file: !939, line: 2272, column: 46)
!4352 = !DILocation(line: 58, column: 98, scope: !4344, inlinedAt: !4353)
!4353 = distinct !DILocation(line: 2256, column: 27, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4335, file: !939, line: 2251, column: 49)
!4355 = !DILocalVariable(name: "s", arg: 1, scope: !2543, file: !939, line: 2077, type: !2398)
!4356 = !DILocation(line: 2077, column: 51, scope: !2543)
!4357 = !DILocalVariable(name: "matroska", scope: !2543, file: !939, line: 2079, type: !2392)
!4358 = !DILocation(line: 2079, column: 27, scope: !2543)
!4359 = !DILocation(line: 2079, column: 38, scope: !2543)
!4360 = !DILocation(line: 2079, column: 41, scope: !2543)
!4361 = !DILocalVariable(name: "tracks", scope: !2543, file: !939, line: 2080, type: !3392)
!4362 = !DILocation(line: 2080, column: 20, scope: !2543)
!4363 = !DILocation(line: 2080, column: 29, scope: !2543)
!4364 = !DILocation(line: 2080, column: 39, scope: !2543)
!4365 = !DILocation(line: 2080, column: 46, scope: !2543)
!4366 = !DILocalVariable(name: "st", scope: !2543, file: !939, line: 2081, type: !1478)
!4367 = !DILocation(line: 2081, column: 15, scope: !2543)
!4368 = !DILocalVariable(name: "i", scope: !2543, file: !939, line: 2082, type: !1039)
!4369 = !DILocation(line: 2082, column: 9, scope: !2543)
!4370 = !DILocalVariable(name: "j", scope: !2543, file: !939, line: 2082, type: !1039)
!4371 = !DILocation(line: 2082, column: 12, scope: !2543)
!4372 = !DILocalVariable(name: "ret", scope: !2543, file: !939, line: 2082, type: !1039)
!4373 = !DILocation(line: 2082, column: 15, scope: !2543)
!4374 = !DILocalVariable(name: "k", scope: !2543, file: !939, line: 2083, type: !1039)
!4375 = !DILocation(line: 2083, column: 9, scope: !2543)
!4376 = !DILocation(line: 2085, column: 12, scope: !4340)
!4377 = !DILocation(line: 2085, column: 10, scope: !4340)
!4378 = !DILocation(line: 2085, column: 17, scope: !4379)
!4379 = !DILexicalBlockFile(scope: !4339, file: !939, discriminator: 1)
!4380 = !DILocation(line: 2085, column: 21, scope: !4379)
!4381 = !DILocation(line: 2085, column: 31, scope: !4379)
!4382 = !DILocation(line: 2085, column: 38, scope: !4379)
!4383 = !DILocation(line: 2085, column: 19, scope: !4379)
!4384 = !DILocation(line: 2085, column: 5, scope: !4379)
!4385 = !DILocalVariable(name: "track", scope: !4338, file: !939, line: 2086, type: !3392)
!4386 = !DILocation(line: 2086, column: 24, scope: !4338)
!4387 = !DILocation(line: 2086, column: 40, scope: !4338)
!4388 = !DILocation(line: 2086, column: 33, scope: !4338)
!4389 = !DILocalVariable(name: "codec_id", scope: !4338, file: !939, line: 2087, type: !3)
!4390 = !DILocation(line: 2087, column: 24, scope: !4338)
!4391 = !DILocalVariable(name: "encodings_list", scope: !4338, file: !939, line: 2088, type: !2751)
!4392 = !DILocation(line: 2088, column: 19, scope: !4338)
!4393 = !DILocation(line: 2088, column: 37, scope: !4338)
!4394 = !DILocation(line: 2088, column: 44, scope: !4338)
!4395 = !DILocalVariable(name: "encodings", scope: !4338, file: !939, line: 2089, type: !4396)
!4396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4397, size: 64, align: 64)
!4397 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTrackEncoding", file: !939, line: 135, baseType: !4398)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTrackEncoding", file: !939, line: 130, size: 768, align: 64, elements: !4399)
!4399 = !{!4400, !4401, !4402, !4408}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "scope", scope: !4398, file: !939, line: 131, baseType: !1045, size: 64, align: 64)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4398, file: !939, line: 132, baseType: !1045, size: 64, align: 64, offset: 64)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !4398, file: !939, line: 133, baseType: !4403, size: 320, align: 64, offset: 128)
!4403 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTrackCompression", file: !939, line: 123, baseType: !4404)
!4404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTrackCompression", file: !939, line: 120, size: 320, align: 64, elements: !4405)
!4405 = !{!4406, !4407}
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !4404, file: !939, line: 121, baseType: !1045, size: 64, align: 64)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !4404, file: !939, line: 122, baseType: !1060, size: 256, align: 64, offset: 64)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "encryption", scope: !4398, file: !939, line: 134, baseType: !4409, size: 320, align: 64, offset: 448)
!4409 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTrackEncryption", file: !939, line: 128, baseType: !4410)
!4410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTrackEncryption", file: !939, line: 125, size: 320, align: 64, elements: !4411)
!4411 = !{!4412, !4413}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !4410, file: !939, line: 126, baseType: !1045, size: 64, align: 64)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "key_id", scope: !4410, file: !939, line: 127, baseType: !1060, size: 256, align: 64, offset: 64)
!4414 = !DILocation(line: 2089, column: 32, scope: !4338)
!4415 = !DILocation(line: 2089, column: 44, scope: !4338)
!4416 = !DILocation(line: 2089, column: 60, scope: !4338)
!4417 = !DILocalVariable(name: "extradata", scope: !4338, file: !939, line: 2090, type: !1053)
!4418 = !DILocation(line: 2090, column: 18, scope: !4338)
!4419 = !DILocalVariable(name: "extradata_size", scope: !4338, file: !939, line: 2091, type: !1039)
!4420 = !DILocation(line: 2091, column: 13, scope: !4338)
!4421 = !DILocalVariable(name: "extradata_offset", scope: !4338, file: !939, line: 2092, type: !1039)
!4422 = !DILocation(line: 2092, column: 13, scope: !4338)
!4423 = !DILocalVariable(name: "fourcc", scope: !4338, file: !939, line: 2093, type: !1036)
!4424 = !DILocation(line: 2093, column: 18, scope: !4338)
!4425 = !DILocalVariable(name: "b", scope: !4338, file: !939, line: 2094, type: !1413)
!4426 = !DILocation(line: 2094, column: 21, scope: !4338)
!4427 = !DILocalVariable(name: "key_id_base64", scope: !4338, file: !939, line: 2095, type: !1051)
!4428 = !DILocation(line: 2095, column: 15, scope: !4338)
!4429 = !DILocalVariable(name: "bit_depth", scope: !4338, file: !939, line: 2096, type: !1039)
!4430 = !DILocation(line: 2096, column: 13, scope: !4338)
!4431 = !DILocation(line: 2099, column: 13, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2099, column: 13)
!4433 = !DILocation(line: 2099, column: 20, scope: !4432)
!4434 = !DILocation(line: 2099, column: 25, scope: !4432)
!4435 = !DILocation(line: 2099, column: 54, scope: !4432)
!4436 = !DILocation(line: 2100, column: 13, scope: !4432)
!4437 = !DILocation(line: 2100, column: 20, scope: !4432)
!4438 = !DILocation(line: 2100, column: 25, scope: !4432)
!4439 = !DILocation(line: 2100, column: 54, scope: !4432)
!4440 = !DILocation(line: 2101, column: 13, scope: !4432)
!4441 = !DILocation(line: 2101, column: 20, scope: !4432)
!4442 = !DILocation(line: 2101, column: 25, scope: !4432)
!4443 = !DILocation(line: 2101, column: 57, scope: !4432)
!4444 = !DILocation(line: 2102, column: 13, scope: !4432)
!4445 = !DILocation(line: 2102, column: 20, scope: !4432)
!4446 = !DILocation(line: 2102, column: 25, scope: !4432)
!4447 = !DILocation(line: 2099, column: 13, scope: !4448)
!4448 = !DILexicalBlockFile(scope: !4338, file: !939, discriminator: 1)
!4449 = !DILocation(line: 2103, column: 20, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4432, file: !939, line: 2102, column: 58)
!4451 = !DILocation(line: 2103, column: 30, scope: !4450)
!4452 = !DILocation(line: 2105, column: 20, scope: !4450)
!4453 = !DILocation(line: 2105, column: 27, scope: !4450)
!4454 = !DILocation(line: 2103, column: 13, scope: !4450)
!4455 = !DILocation(line: 2106, column: 13, scope: !4450)
!4456 = !DILocation(line: 2108, column: 14, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2108, column: 13)
!4458 = !DILocation(line: 2108, column: 21, scope: !4457)
!4459 = !DILocation(line: 2108, column: 13, scope: !4338)
!4460 = !DILocation(line: 2109, column: 13, scope: !4457)
!4461 = !DILocation(line: 2111, column: 13, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2111, column: 13)
!4463 = !DILocation(line: 2111, column: 20, scope: !4462)
!4464 = !DILocation(line: 2111, column: 26, scope: !4462)
!4465 = !DILocation(line: 2111, column: 37, scope: !4462)
!4466 = !DILocation(line: 2111, column: 41, scope: !4462)
!4467 = !DILocation(line: 2111, column: 44, scope: !4468)
!4468 = !DILexicalBlockFile(scope: !4462, file: !939, discriminator: 1)
!4469 = !DILocation(line: 2111, column: 51, scope: !4468)
!4470 = !DILocation(line: 2111, column: 57, scope: !4468)
!4471 = !DILocation(line: 2111, column: 68, scope: !4468)
!4472 = !DILocation(line: 2111, column: 81, scope: !4468)
!4473 = !DILocation(line: 2112, column: 12, scope: !4462)
!4474 = !DILocation(line: 2112, column: 19, scope: !4462)
!4475 = !DILocation(line: 2112, column: 25, scope: !4462)
!4476 = !DILocation(line: 2111, column: 13, scope: !4477)
!4477 = !DILexicalBlockFile(scope: !4338, file: !939, discriminator: 2)
!4478 = !DILocation(line: 2113, column: 20, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4462, file: !939, line: 2112, column: 44)
!4480 = !DILocation(line: 2113, column: 30, scope: !4479)
!4481 = !DILocation(line: 2115, column: 20, scope: !4479)
!4482 = !DILocation(line: 2115, column: 27, scope: !4479)
!4483 = !DILocation(line: 2115, column: 33, scope: !4479)
!4484 = !DILocation(line: 2113, column: 13, scope: !4479)
!4485 = !DILocation(line: 2116, column: 13, scope: !4479)
!4486 = !DILocation(line: 2116, column: 20, scope: !4479)
!4487 = !DILocation(line: 2116, column: 26, scope: !4479)
!4488 = !DILocation(line: 2116, column: 37, scope: !4479)
!4489 = !DILocation(line: 2117, column: 9, scope: !4479)
!4490 = !DILocation(line: 2119, column: 13, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2119, column: 13)
!4492 = !DILocation(line: 2119, column: 20, scope: !4491)
!4493 = !DILocation(line: 2119, column: 25, scope: !4491)
!4494 = !DILocation(line: 2119, column: 13, scope: !4338)
!4495 = !DILocation(line: 2120, column: 18, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4497, file: !939, line: 2120, column: 17)
!4497 = distinct !DILexicalBlock(scope: !4491, file: !939, line: 2119, column: 55)
!4498 = !DILocation(line: 2120, column: 25, scope: !4496)
!4499 = !DILocation(line: 2120, column: 42, scope: !4496)
!4500 = !DILocation(line: 2120, column: 45, scope: !4501)
!4501 = !DILexicalBlockFile(scope: !4496, file: !939, discriminator: 1)
!4502 = !DILocation(line: 2120, column: 52, scope: !4501)
!4503 = !DILocation(line: 2120, column: 58, scope: !4501)
!4504 = !DILocation(line: 2120, column: 69, scope: !4501)
!4505 = !DILocation(line: 2120, column: 17, scope: !4501)
!4506 = !DILocalVariable(name: "default_duration", scope: !4507, file: !939, line: 2121, type: !1057)
!4507 = distinct !DILexicalBlock(scope: !4496, file: !939, line: 2120, column: 74)
!4508 = !DILocation(line: 2121, column: 24, scope: !4507)
!4509 = !DILocation(line: 2121, column: 56, scope: !4507)
!4510 = !DILocation(line: 2121, column: 63, scope: !4507)
!4511 = !DILocation(line: 2121, column: 69, scope: !4507)
!4512 = !DILocation(line: 2121, column: 54, scope: !4507)
!4513 = !DILocation(line: 2122, column: 21, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4507, file: !939, line: 2122, column: 21)
!4515 = !DILocation(line: 2122, column: 38, scope: !4514)
!4516 = !DILocation(line: 2122, column: 50, scope: !4514)
!4517 = !DILocation(line: 2122, column: 53, scope: !4518)
!4518 = !DILexicalBlockFile(scope: !4514, file: !939, discriminator: 1)
!4519 = !DILocation(line: 2122, column: 70, scope: !4518)
!4520 = !DILocation(line: 2122, column: 21, scope: !4518)
!4521 = !DILocation(line: 2123, column: 28, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4514, file: !939, line: 2122, column: 75)
!4523 = !DILocation(line: 2123, column: 38, scope: !4522)
!4524 = !DILocation(line: 2125, column: 26, scope: !4522)
!4525 = !DILocation(line: 2125, column: 33, scope: !4522)
!4526 = !DILocation(line: 2125, column: 39, scope: !4522)
!4527 = !DILocation(line: 2123, column: 21, scope: !4522)
!4528 = !DILocation(line: 2126, column: 17, scope: !4522)
!4529 = !DILocation(line: 2127, column: 47, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4514, file: !939, line: 2126, column: 24)
!4531 = !DILocation(line: 2127, column: 21, scope: !4530)
!4532 = !DILocation(line: 2127, column: 28, scope: !4530)
!4533 = !DILocation(line: 2127, column: 45, scope: !4530)
!4534 = !DILocation(line: 2129, column: 13, scope: !4507)
!4535 = !DILocation(line: 2130, column: 17, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4497, file: !939, line: 2130, column: 17)
!4537 = !DILocation(line: 2130, column: 24, scope: !4536)
!4538 = !DILocation(line: 2130, column: 30, scope: !4536)
!4539 = !DILocation(line: 2130, column: 44, scope: !4536)
!4540 = !DILocation(line: 2130, column: 17, scope: !4497)
!4541 = !DILocation(line: 2131, column: 46, scope: !4536)
!4542 = !DILocation(line: 2131, column: 53, scope: !4536)
!4543 = !DILocation(line: 2131, column: 59, scope: !4536)
!4544 = !DILocation(line: 2131, column: 17, scope: !4536)
!4545 = !DILocation(line: 2131, column: 24, scope: !4536)
!4546 = !DILocation(line: 2131, column: 30, scope: !4536)
!4547 = !DILocation(line: 2131, column: 44, scope: !4536)
!4548 = !DILocation(line: 2132, column: 17, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4497, file: !939, line: 2132, column: 17)
!4550 = !DILocation(line: 2132, column: 24, scope: !4549)
!4551 = !DILocation(line: 2132, column: 30, scope: !4549)
!4552 = !DILocation(line: 2132, column: 45, scope: !4549)
!4553 = !DILocation(line: 2132, column: 17, scope: !4497)
!4554 = !DILocation(line: 2133, column: 47, scope: !4549)
!4555 = !DILocation(line: 2133, column: 54, scope: !4549)
!4556 = !DILocation(line: 2133, column: 60, scope: !4549)
!4557 = !DILocation(line: 2133, column: 17, scope: !4549)
!4558 = !DILocation(line: 2133, column: 24, scope: !4549)
!4559 = !DILocation(line: 2133, column: 30, scope: !4549)
!4560 = !DILocation(line: 2133, column: 45, scope: !4549)
!4561 = !DILocation(line: 2134, column: 17, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4497, file: !939, line: 2134, column: 17)
!4563 = !DILocation(line: 2134, column: 24, scope: !4562)
!4564 = !DILocation(line: 2134, column: 30, scope: !4562)
!4565 = !DILocation(line: 2134, column: 42, scope: !4562)
!4566 = !DILocation(line: 2134, column: 47, scope: !4562)
!4567 = !DILocation(line: 2134, column: 17, scope: !4497)
!4568 = !DILocation(line: 2135, column: 58, scope: !4562)
!4569 = !DILocation(line: 2135, column: 65, scope: !4562)
!4570 = !DILocation(line: 2135, column: 71, scope: !4562)
!4571 = !DILocation(line: 2135, column: 83, scope: !4562)
!4572 = !DILocation(line: 2135, column: 91, scope: !4562)
!4573 = !DILocation(line: 2135, column: 24, scope: !4562)
!4574 = !DILocation(line: 2135, column: 17, scope: !4562)
!4575 = !DILocation(line: 2136, column: 9, scope: !4497)
!4576 = !DILocation(line: 2136, column: 20, scope: !4577)
!4577 = !DILexicalBlockFile(scope: !4578, file: !939, discriminator: 1)
!4578 = distinct !DILexicalBlock(scope: !4491, file: !939, line: 2136, column: 20)
!4579 = !DILocation(line: 2136, column: 27, scope: !4577)
!4580 = !DILocation(line: 2136, column: 32, scope: !4577)
!4581 = !DILocation(line: 2137, column: 18, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !939, line: 2137, column: 17)
!4583 = distinct !DILexicalBlock(scope: !4578, file: !939, line: 2136, column: 62)
!4584 = !DILocation(line: 2137, column: 25, scope: !4582)
!4585 = !DILocation(line: 2137, column: 31, scope: !4582)
!4586 = !DILocation(line: 2137, column: 17, scope: !4583)
!4587 = !DILocation(line: 2138, column: 47, scope: !4582)
!4588 = !DILocation(line: 2138, column: 54, scope: !4582)
!4589 = !DILocation(line: 2138, column: 60, scope: !4582)
!4590 = !DILocation(line: 2138, column: 17, scope: !4582)
!4591 = !DILocation(line: 2138, column: 24, scope: !4582)
!4592 = !DILocation(line: 2138, column: 30, scope: !4582)
!4593 = !DILocation(line: 2138, column: 45, scope: !4582)
!4594 = !DILocation(line: 2139, column: 9, scope: !4583)
!4595 = !DILocation(line: 2140, column: 13, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2140, column: 13)
!4597 = !DILocation(line: 2140, column: 29, scope: !4596)
!4598 = !DILocation(line: 2140, column: 37, scope: !4596)
!4599 = !DILocation(line: 2140, column: 13, scope: !4338)
!4600 = !DILocation(line: 2141, column: 20, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4596, file: !939, line: 2140, column: 42)
!4602 = !DILocation(line: 2141, column: 30, scope: !4601)
!4603 = !DILocation(line: 2141, column: 13, scope: !4601)
!4604 = !DILocation(line: 2143, column: 9, scope: !4601)
!4605 = !DILocation(line: 2143, column: 20, scope: !4606)
!4606 = !DILexicalBlockFile(scope: !4607, file: !939, discriminator: 1)
!4607 = distinct !DILexicalBlock(scope: !4596, file: !939, line: 2143, column: 20)
!4608 = !DILocation(line: 2143, column: 36, scope: !4606)
!4609 = !DILocation(line: 2143, column: 44, scope: !4606)
!4610 = !DILocation(line: 2144, column: 17, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4612, file: !939, line: 2144, column: 17)
!4612 = distinct !DILexicalBlock(scope: !4607, file: !939, line: 2143, column: 50)
!4613 = !DILocation(line: 2144, column: 30, scope: !4611)
!4614 = !DILocation(line: 2144, column: 17, scope: !4612)
!4615 = !DILocation(line: 2145, column: 21, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !939, line: 2145, column: 21)
!4617 = distinct !DILexicalBlock(scope: !4611, file: !939, line: 2144, column: 36)
!4618 = !DILocation(line: 2145, column: 34, scope: !4616)
!4619 = !DILocation(line: 2145, column: 45, scope: !4616)
!4620 = !DILocation(line: 2145, column: 52, scope: !4616)
!4621 = !DILocation(line: 2145, column: 57, scope: !4616)
!4622 = !DILocation(line: 2145, column: 21, scope: !4617)
!4623 = !DILocalVariable(name: "b64_size", scope: !4624, file: !939, line: 2148, type: !1510)
!4624 = distinct !DILexicalBlock(scope: !4616, file: !939, line: 2145, column: 62)
!4625 = !DILocation(line: 2148, column: 31, scope: !4624)
!4626 = !DILocation(line: 2148, column: 45, scope: !4624)
!4627 = !DILocation(line: 2148, column: 58, scope: !4624)
!4628 = !DILocation(line: 2148, column: 69, scope: !4624)
!4629 = !DILocation(line: 2148, column: 76, scope: !4624)
!4630 = !DILocation(line: 2148, column: 81, scope: !4624)
!4631 = !DILocation(line: 2148, column: 85, scope: !4624)
!4632 = !DILocation(line: 2148, column: 89, scope: !4624)
!4633 = !DILocation(line: 2148, column: 93, scope: !4624)
!4634 = !DILocation(line: 2149, column: 47, scope: !4624)
!4635 = !DILocation(line: 2149, column: 37, scope: !4624)
!4636 = !DILocation(line: 2149, column: 35, scope: !4624)
!4637 = !DILocation(line: 2150, column: 25, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4624, file: !939, line: 2150, column: 25)
!4639 = !DILocation(line: 2150, column: 39, scope: !4638)
!4640 = !DILocation(line: 2150, column: 25, scope: !4624)
!4641 = !DILocation(line: 2151, column: 25, scope: !4638)
!4642 = !DILocation(line: 2153, column: 38, scope: !4624)
!4643 = !DILocation(line: 2153, column: 53, scope: !4624)
!4644 = !DILocation(line: 2154, column: 38, scope: !4624)
!4645 = !DILocation(line: 2154, column: 51, scope: !4624)
!4646 = !DILocation(line: 2154, column: 62, scope: !4624)
!4647 = !DILocation(line: 2154, column: 69, scope: !4624)
!4648 = !DILocation(line: 2155, column: 38, scope: !4624)
!4649 = !DILocation(line: 2155, column: 51, scope: !4624)
!4650 = !DILocation(line: 2155, column: 62, scope: !4624)
!4651 = !DILocation(line: 2155, column: 69, scope: !4624)
!4652 = !DILocation(line: 2153, column: 21, scope: !4624)
!4653 = !DILocation(line: 2156, column: 17, scope: !4624)
!4654 = !DILocation(line: 2157, column: 21, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4616, file: !939, line: 2156, column: 24)
!4656 = !DILocation(line: 2157, column: 34, scope: !4655)
!4657 = !DILocation(line: 2157, column: 40, scope: !4655)
!4658 = !DILocation(line: 2158, column: 28, scope: !4655)
!4659 = !DILocation(line: 2158, column: 38, scope: !4655)
!4660 = !DILocation(line: 2158, column: 21, scope: !4655)
!4661 = !DILocation(line: 2161, column: 13, scope: !4617)
!4662 = !DILocation(line: 2163, column: 18, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4611, file: !939, line: 2163, column: 18)
!4664 = !DILocation(line: 2163, column: 31, scope: !4663)
!4665 = !DILocation(line: 2163, column: 43, scope: !4663)
!4666 = !DILocation(line: 2163, column: 48, scope: !4663)
!4667 = !DILocation(line: 2163, column: 85, scope: !4663)
!4668 = !DILocation(line: 2169, column: 18, scope: !4663)
!4669 = !DILocation(line: 2169, column: 31, scope: !4663)
!4670 = !DILocation(line: 2169, column: 43, scope: !4663)
!4671 = !DILocation(line: 2169, column: 48, scope: !4663)
!4672 = !DILocation(line: 2169, column: 84, scope: !4663)
!4673 = !DILocation(line: 2171, column: 18, scope: !4663)
!4674 = !DILocation(line: 2171, column: 31, scope: !4663)
!4675 = !DILocation(line: 2171, column: 43, scope: !4663)
!4676 = !DILocation(line: 2171, column: 48, scope: !4663)
!4677 = !DILocation(line: 2163, column: 18, scope: !4678)
!4678 = !DILexicalBlockFile(scope: !4611, file: !939, discriminator: 1)
!4679 = !DILocation(line: 2172, column: 17, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4663, file: !939, line: 2171, column: 93)
!4681 = !DILocation(line: 2172, column: 30, scope: !4680)
!4682 = !DILocation(line: 2172, column: 36, scope: !4680)
!4683 = !DILocation(line: 2173, column: 24, scope: !4680)
!4684 = !DILocation(line: 2173, column: 34, scope: !4680)
!4685 = !DILocation(line: 2173, column: 17, scope: !4680)
!4686 = !DILocation(line: 2175, column: 13, scope: !4680)
!4687 = !DILocation(line: 2175, column: 24, scope: !4688)
!4688 = !DILexicalBlockFile(scope: !4689, file: !939, discriminator: 1)
!4689 = distinct !DILexicalBlock(scope: !4663, file: !939, line: 2175, column: 24)
!4690 = !DILocation(line: 2175, column: 31, scope: !4688)
!4691 = !DILocation(line: 2175, column: 42, scope: !4688)
!4692 = !DILocation(line: 2175, column: 47, scope: !4688)
!4693 = !DILocation(line: 2175, column: 50, scope: !4694)
!4694 = !DILexicalBlockFile(scope: !4689, file: !939, discriminator: 2)
!4695 = !DILocation(line: 2175, column: 63, scope: !4694)
!4696 = !DILocation(line: 2175, column: 69, scope: !4694)
!4697 = !DILocation(line: 2175, column: 24, scope: !4694)
!4698 = !DILocalVariable(name: "codec_priv", scope: !4699, file: !939, line: 2176, type: !1053)
!4699 = distinct !DILexicalBlock(scope: !4689, file: !939, line: 2175, column: 74)
!4700 = !DILocation(line: 2176, column: 26, scope: !4699)
!4701 = !DILocation(line: 2176, column: 39, scope: !4699)
!4702 = !DILocation(line: 2176, column: 46, scope: !4699)
!4703 = !DILocation(line: 2176, column: 57, scope: !4699)
!4704 = !DILocalVariable(name: "ret", scope: !4699, file: !939, line: 2177, type: !1039)
!4705 = !DILocation(line: 2177, column: 21, scope: !4699)
!4706 = !DILocation(line: 2177, column: 51, scope: !4699)
!4707 = !DILocation(line: 2177, column: 58, scope: !4699)
!4708 = !DILocation(line: 2177, column: 69, scope: !4699)
!4709 = !DILocation(line: 2178, column: 51, scope: !4699)
!4710 = !DILocation(line: 2178, column: 58, scope: !4699)
!4711 = !DILocation(line: 2178, column: 69, scope: !4699)
!4712 = !DILocation(line: 2179, column: 50, scope: !4699)
!4713 = !DILocation(line: 2177, column: 27, scope: !4699)
!4714 = !DILocation(line: 2180, column: 21, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4699, file: !939, line: 2180, column: 21)
!4716 = !DILocation(line: 2180, column: 25, scope: !4715)
!4717 = !DILocation(line: 2180, column: 21, scope: !4699)
!4718 = !DILocation(line: 2181, column: 21, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4715, file: !939, line: 2180, column: 30)
!4720 = !DILocation(line: 2181, column: 28, scope: !4719)
!4721 = !DILocation(line: 2181, column: 39, scope: !4719)
!4722 = !DILocation(line: 2181, column: 44, scope: !4719)
!4723 = !DILocation(line: 2182, column: 21, scope: !4719)
!4724 = !DILocation(line: 2182, column: 28, scope: !4719)
!4725 = !DILocation(line: 2182, column: 39, scope: !4719)
!4726 = !DILocation(line: 2182, column: 44, scope: !4719)
!4727 = !DILocation(line: 2183, column: 28, scope: !4719)
!4728 = !DILocation(line: 2183, column: 38, scope: !4719)
!4729 = !DILocation(line: 2183, column: 21, scope: !4719)
!4730 = !DILocation(line: 2185, column: 17, scope: !4719)
!4731 = !DILocation(line: 2187, column: 21, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4699, file: !939, line: 2187, column: 21)
!4733 = !DILocation(line: 2187, column: 35, scope: !4732)
!4734 = !DILocation(line: 2187, column: 42, scope: !4732)
!4735 = !DILocation(line: 2187, column: 53, scope: !4732)
!4736 = !DILocation(line: 2187, column: 32, scope: !4732)
!4737 = !DILocation(line: 2187, column: 21, scope: !4699)
!4738 = !DILocation(line: 2188, column: 38, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4732, file: !939, line: 2187, column: 59)
!4740 = !DILocation(line: 2188, column: 45, scope: !4739)
!4741 = !DILocation(line: 2188, column: 56, scope: !4739)
!4742 = !DILocation(line: 2188, column: 21, scope: !4739)
!4743 = !DILocation(line: 2189, column: 25, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4739, file: !939, line: 2189, column: 25)
!4745 = !DILocation(line: 2189, column: 32, scope: !4744)
!4746 = !DILocation(line: 2189, column: 43, scope: !4744)
!4747 = !DILocation(line: 2189, column: 25, scope: !4739)
!4748 = !DILocation(line: 2190, column: 66, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4744, file: !939, line: 2189, column: 49)
!4750 = !DILocation(line: 2190, column: 73, scope: !4749)
!4751 = !DILocation(line: 2190, column: 84, scope: !4749)
!4752 = !DILocation(line: 2191, column: 66, scope: !4749)
!4753 = !DILocation(line: 2191, column: 73, scope: !4749)
!4754 = !DILocation(line: 2191, column: 84, scope: !4749)
!4755 = !DILocation(line: 2191, column: 89, scope: !4749)
!4756 = !DILocation(line: 2190, column: 49, scope: !4749)
!4757 = !DILocation(line: 2190, column: 25, scope: !4749)
!4758 = !DILocation(line: 2190, column: 32, scope: !4749)
!4759 = !DILocation(line: 2190, column: 43, scope: !4749)
!4760 = !DILocation(line: 2190, column: 47, scope: !4749)
!4761 = !DILocation(line: 2193, column: 30, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4749, file: !939, line: 2193, column: 29)
!4763 = !DILocation(line: 2193, column: 37, scope: !4762)
!4764 = !DILocation(line: 2193, column: 48, scope: !4762)
!4765 = !DILocation(line: 2193, column: 29, scope: !4749)
!4766 = !DILocation(line: 2194, column: 39, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4762, file: !939, line: 2193, column: 53)
!4768 = !DILocation(line: 2194, column: 46, scope: !4767)
!4769 = !DILocation(line: 2194, column: 57, scope: !4767)
!4770 = !DILocation(line: 2194, column: 38, scope: !4767)
!4771 = !DILocation(line: 2194, column: 29, scope: !4767)
!4772 = !DILocation(line: 2195, column: 29, scope: !4767)
!4773 = !DILocation(line: 2195, column: 36, scope: !4767)
!4774 = !DILocation(line: 2195, column: 47, scope: !4767)
!4775 = !DILocation(line: 2195, column: 52, scope: !4767)
!4776 = !DILocation(line: 2196, column: 29, scope: !4767)
!4777 = !DILocation(line: 2198, column: 21, scope: !4749)
!4778 = !DILocation(line: 2199, column: 17, scope: !4739)
!4779 = !DILocation(line: 2200, column: 13, scope: !4699)
!4780 = !DILocation(line: 2201, column: 9, scope: !4612)
!4781 = !DILocation(line: 2203, column: 16, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2203, column: 9)
!4783 = !DILocation(line: 2203, column: 14, scope: !4782)
!4784 = !DILocation(line: 2203, column: 39, scope: !4785)
!4785 = !DILexicalBlockFile(scope: !4786, file: !939, discriminator: 1)
!4786 = distinct !DILexicalBlock(scope: !4782, file: !939, line: 2203, column: 9)
!4787 = !DILocation(line: 2203, column: 21, scope: !4785)
!4788 = !DILocation(line: 2203, column: 42, scope: !4785)
!4789 = !DILocation(line: 2203, column: 45, scope: !4785)
!4790 = !DILocation(line: 2203, column: 9, scope: !4785)
!4791 = !DILocation(line: 2204, column: 44, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !939, line: 2204, column: 17)
!4793 = distinct !DILexicalBlock(scope: !4786, file: !939, line: 2203, column: 71)
!4794 = !DILocation(line: 2204, column: 26, scope: !4792)
!4795 = !DILocation(line: 2204, column: 47, scope: !4792)
!4796 = !DILocation(line: 2204, column: 52, scope: !4792)
!4797 = !DILocation(line: 2204, column: 59, scope: !4792)
!4798 = !DILocation(line: 2205, column: 51, scope: !4792)
!4799 = !DILocation(line: 2205, column: 33, scope: !4792)
!4800 = !DILocation(line: 2205, column: 54, scope: !4792)
!4801 = !DILocation(line: 2205, column: 26, scope: !4792)
!4802 = !DILocation(line: 2204, column: 18, scope: !4792)
!4803 = !DILocation(line: 2204, column: 17, scope: !4793)
!4804 = !DILocation(line: 2206, column: 46, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4792, file: !939, line: 2205, column: 61)
!4806 = !DILocation(line: 2206, column: 28, scope: !4805)
!4807 = !DILocation(line: 2206, column: 49, scope: !4805)
!4808 = !DILocation(line: 2206, column: 26, scope: !4805)
!4809 = !DILocation(line: 2207, column: 17, scope: !4805)
!4810 = !DILocation(line: 2209, column: 9, scope: !4793)
!4811 = !DILocation(line: 2203, column: 67, scope: !4812)
!4812 = !DILexicalBlockFile(scope: !4786, file: !939, discriminator: 2)
!4813 = !DILocation(line: 2203, column: 9, scope: !4812)
!4814 = distinct !{!4814, !4815}
!4815 = !DILocation(line: 2203, column: 9, scope: !4338)
!4816 = !DILocation(line: 2211, column: 50, scope: !4338)
!4817 = !DILocation(line: 2211, column: 30, scope: !4338)
!4818 = !DILocation(line: 2211, column: 14, scope: !4338)
!4819 = !DILocation(line: 2211, column: 21, scope: !4338)
!4820 = !DILocation(line: 2211, column: 28, scope: !4338)
!4821 = !DILocation(line: 2211, column: 12, scope: !4338)
!4822 = !DILocation(line: 2212, column: 14, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2212, column: 13)
!4824 = !DILocation(line: 2212, column: 13, scope: !4338)
!4825 = !DILocation(line: 2213, column: 21, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4823, file: !939, line: 2212, column: 18)
!4827 = !DILocation(line: 2213, column: 13, scope: !4826)
!4828 = !DILocation(line: 2214, column: 13, scope: !4826)
!4829 = !DILocation(line: 2217, column: 13, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2217, column: 13)
!4831 = !DILocation(line: 2217, column: 13, scope: !4338)
!4832 = !DILocation(line: 2219, column: 26, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4830, file: !939, line: 2217, column: 28)
!4834 = !DILocation(line: 2219, column: 30, scope: !4833)
!4835 = !DILocation(line: 2219, column: 54, scope: !4833)
!4836 = !DILocation(line: 2219, column: 13, scope: !4833)
!4837 = !DILocation(line: 2220, column: 22, scope: !4833)
!4838 = !DILocation(line: 2220, column: 13, scope: !4833)
!4839 = !DILocation(line: 2221, column: 9, scope: !4833)
!4840 = !DILocation(line: 2223, column: 21, scope: !4337)
!4841 = !DILocation(line: 2223, column: 28, scope: !4337)
!4842 = !DILocation(line: 2223, column: 14, scope: !4337)
!4843 = !DILocation(line: 2223, column: 57, scope: !4337)
!4844 = !DILocation(line: 2224, column: 14, scope: !4337)
!4845 = !DILocation(line: 2224, column: 21, scope: !4337)
!4846 = !DILocation(line: 2224, column: 32, scope: !4337)
!4847 = !DILocation(line: 2224, column: 37, scope: !4337)
!4848 = !DILocation(line: 2224, column: 43, scope: !4337)
!4849 = !DILocation(line: 2225, column: 13, scope: !4337)
!4850 = !DILocation(line: 2225, column: 20, scope: !4337)
!4851 = !DILocation(line: 2225, column: 31, scope: !4337)
!4852 = !DILocation(line: 2223, column: 13, scope: !4448)
!4853 = !DILocation(line: 2226, column: 13, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4337, file: !939, line: 2225, column: 37)
!4855 = !DILocation(line: 2226, column: 20, scope: !4854)
!4856 = !DILocation(line: 2226, column: 30, scope: !4854)
!4857 = !DILocation(line: 2227, column: 57, scope: !4854)
!4858 = !DILocation(line: 2227, column: 64, scope: !4854)
!4859 = !DILocation(line: 2227, column: 75, scope: !4854)
!4860 = !DILocation(line: 2227, column: 80, scope: !4854)
!4861 = !DILocation(line: 2227, column: 88, scope: !4854)
!4862 = !DILocation(line: 2227, column: 25, scope: !4854)
!4863 = !DILocation(line: 2227, column: 23, scope: !4854)
!4864 = !DILocation(line: 2228, column: 54, scope: !4854)
!4865 = !DILocation(line: 2228, column: 61, scope: !4854)
!4866 = !DILocation(line: 2228, column: 72, scope: !4854)
!4867 = !DILocation(line: 2228, column: 77, scope: !4854)
!4868 = !DILocation(line: 2228, column: 85, scope: !4854)
!4869 = !DILocation(line: 2228, column: 20, scope: !4854)
!4870 = !DILocation(line: 2230, column: 51, scope: !4854)
!4871 = !DILocation(line: 2229, column: 24, scope: !4854)
!4872 = !DILocation(line: 2229, column: 22, scope: !4854)
!4873 = !DILocation(line: 2231, column: 18, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4854, file: !939, line: 2231, column: 17)
!4875 = !DILocation(line: 2231, column: 17, scope: !4854)
!4876 = !DILocation(line: 2233, column: 51, scope: !4874)
!4877 = !DILocation(line: 2232, column: 28, scope: !4874)
!4878 = !DILocation(line: 2232, column: 26, scope: !4874)
!4879 = !DILocation(line: 2232, column: 17, scope: !4874)
!4880 = !DILocation(line: 2234, column: 30, scope: !4854)
!4881 = !DILocation(line: 2235, column: 9, scope: !4854)
!4882 = !DILocation(line: 2235, column: 28, scope: !4883)
!4883 = !DILexicalBlockFile(scope: !4336, file: !939, discriminator: 1)
!4884 = !DILocation(line: 2235, column: 35, scope: !4883)
!4885 = !DILocation(line: 2235, column: 21, scope: !4883)
!4886 = !DILocation(line: 2235, column: 57, scope: !4883)
!4887 = !DILocation(line: 2236, column: 20, scope: !4336)
!4888 = !DILocation(line: 2236, column: 27, scope: !4336)
!4889 = !DILocation(line: 2236, column: 38, scope: !4336)
!4890 = !DILocation(line: 2236, column: 43, scope: !4336)
!4891 = !DILocation(line: 2236, column: 49, scope: !4336)
!4892 = !DILocation(line: 2237, column: 20, scope: !4336)
!4893 = !DILocation(line: 2237, column: 27, scope: !4336)
!4894 = !DILocation(line: 2237, column: 38, scope: !4336)
!4895 = !DILocation(line: 2235, column: 20, scope: !4896)
!4896 = !DILexicalBlockFile(scope: !4337, file: !939, discriminator: 2)
!4897 = !DILocalVariable(name: "ret", scope: !4898, file: !939, line: 2238, type: !1039)
!4898 = distinct !DILexicalBlock(scope: !4336, file: !939, line: 2237, column: 44)
!4899 = !DILocation(line: 2238, column: 17, scope: !4898)
!4900 = !DILocation(line: 2239, column: 35, scope: !4898)
!4901 = !DILocation(line: 2239, column: 42, scope: !4898)
!4902 = !DILocation(line: 2239, column: 53, scope: !4898)
!4903 = !DILocation(line: 2240, column: 31, scope: !4898)
!4904 = !DILocation(line: 2240, column: 38, scope: !4898)
!4905 = !DILocation(line: 2240, column: 49, scope: !4898)
!4906 = !DILocation(line: 2239, column: 13, scope: !4898)
!4907 = !DILocation(line: 2242, column: 37, scope: !4898)
!4908 = !DILocation(line: 2242, column: 44, scope: !4898)
!4909 = !DILocation(line: 2242, column: 48, scope: !4898)
!4910 = !DILocation(line: 2242, column: 58, scope: !4898)
!4911 = !DILocation(line: 2242, column: 65, scope: !4898)
!4912 = !DILocation(line: 2242, column: 76, scope: !4898)
!4913 = !DILocation(line: 2242, column: 19, scope: !4898)
!4914 = !DILocation(line: 2242, column: 17, scope: !4898)
!4915 = !DILocation(line: 2243, column: 17, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4898, file: !939, line: 2243, column: 17)
!4917 = !DILocation(line: 2243, column: 21, scope: !4916)
!4918 = !DILocation(line: 2243, column: 17, scope: !4898)
!4919 = !DILocation(line: 2244, column: 24, scope: !4916)
!4920 = !DILocation(line: 2244, column: 17, scope: !4916)
!4921 = !DILocation(line: 2245, column: 24, scope: !4898)
!4922 = !DILocation(line: 2245, column: 28, scope: !4898)
!4923 = !DILocation(line: 2245, column: 38, scope: !4898)
!4924 = !DILocation(line: 2245, column: 22, scope: !4898)
!4925 = !DILocation(line: 2246, column: 22, scope: !4898)
!4926 = !DILocation(line: 2246, column: 26, scope: !4898)
!4927 = !DILocation(line: 2246, column: 36, scope: !4898)
!4928 = !DILocation(line: 2246, column: 20, scope: !4898)
!4929 = !DILocation(line: 2247, column: 34, scope: !4898)
!4930 = !DILocation(line: 2247, column: 41, scope: !4898)
!4931 = !DILocation(line: 2247, column: 52, scope: !4898)
!4932 = !DILocation(line: 2247, column: 58, scope: !4898)
!4933 = !DILocation(line: 2247, column: 33, scope: !4898)
!4934 = !DILocation(line: 2247, column: 33, scope: !4935)
!4935 = !DILexicalBlockFile(scope: !4898, file: !939, discriminator: 1)
!4936 = !DILocation(line: 2247, column: 75, scope: !4937)
!4937 = !DILexicalBlockFile(scope: !4898, file: !939, discriminator: 2)
!4938 = !DILocation(line: 2247, column: 82, scope: !4937)
!4939 = !DILocation(line: 2247, column: 93, scope: !4937)
!4940 = !DILocation(line: 2247, column: 33, scope: !4937)
!4941 = !DILocation(line: 2247, column: 33, scope: !4942)
!4942 = !DILexicalBlockFile(scope: !4898, file: !939, discriminator: 3)
!4943 = !DILocation(line: 2247, column: 30, scope: !4942)
!4944 = !DILocation(line: 2248, column: 9, scope: !4898)
!4945 = !DILocation(line: 2248, column: 28, scope: !4946)
!4946 = !DILexicalBlockFile(scope: !4335, file: !939, discriminator: 1)
!4947 = !DILocation(line: 2248, column: 35, scope: !4946)
!4948 = !DILocation(line: 2248, column: 21, scope: !4946)
!4949 = !DILocation(line: 2250, column: 20, scope: !4335)
!4950 = !DILocation(line: 2250, column: 24, scope: !4946)
!4951 = !DILocation(line: 2250, column: 31, scope: !4946)
!4952 = !DILocation(line: 2250, column: 42, scope: !4946)
!4953 = !DILocation(line: 2250, column: 47, scope: !4946)
!4954 = !DILocation(line: 2251, column: 20, scope: !4335)
!4955 = !DILocation(line: 2251, column: 24, scope: !4946)
!4956 = !DILocation(line: 2251, column: 31, scope: !4946)
!4957 = !DILocation(line: 2251, column: 42, scope: !4946)
!4958 = !DILocation(line: 2251, column: 23, scope: !4946)
!4959 = !DILocation(line: 2248, column: 20, scope: !4960)
!4960 = !DILexicalBlockFile(scope: !4336, file: !939, discriminator: 2)
!4961 = !DILocalVariable(name: "sample_size", scope: !4354, file: !939, line: 2252, type: !1084)
!4962 = !DILocation(line: 2252, column: 22, scope: !4354)
!4963 = !DILocalVariable(name: "ret", scope: !4354, file: !939, line: 2253, type: !1039)
!4964 = !DILocation(line: 2253, column: 17, scope: !4354)
!4965 = !DILocation(line: 2253, column: 36, scope: !4354)
!4966 = !DILocation(line: 2253, column: 23, scope: !4354)
!4967 = !DILocation(line: 2254, column: 17, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4354, file: !939, line: 2254, column: 17)
!4969 = !DILocation(line: 2254, column: 21, scope: !4968)
!4970 = !DILocation(line: 2254, column: 17, scope: !4354)
!4971 = !DILocation(line: 2255, column: 24, scope: !4968)
!4972 = !DILocation(line: 2255, column: 17, scope: !4968)
!4973 = !DILocation(line: 2256, column: 70, scope: !4354)
!4974 = !DILocation(line: 2256, column: 77, scope: !4354)
!4975 = !DILocation(line: 2256, column: 88, scope: !4354)
!4976 = !DILocation(line: 2256, column: 93, scope: !4354)
!4977 = !DILocation(line: 2256, column: 101, scope: !4354)
!4978 = !DILocation(line: 2256, column: 27, scope: !4354)
!4979 = !DILocation(line: 60, column: 9, scope: !4344, inlinedAt: !4353)
!4980 = !DILocation(line: 60, column: 10, scope: !4344, inlinedAt: !4353)
!4981 = !DILocation(line: 60, column: 18, scope: !4344, inlinedAt: !4353)
!4982 = !DILocation(line: 60, column: 19, scope: !4344, inlinedAt: !4353)
!4983 = !DILocation(line: 60, column: 15, scope: !4344, inlinedAt: !4353)
!4984 = !DILocation(line: 60, column: 8, scope: !4344, inlinedAt: !4353)
!4985 = !DILocation(line: 60, column: 6, scope: !4344, inlinedAt: !4353)
!4986 = !DILocation(line: 61, column: 12, scope: !4344, inlinedAt: !4353)
!4987 = !DILocation(line: 2256, column: 25, scope: !4354)
!4988 = !DILocation(line: 2257, column: 17, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4354, file: !939, line: 2257, column: 17)
!4990 = !DILocation(line: 2257, column: 24, scope: !4989)
!4991 = !DILocation(line: 2257, column: 17, scope: !4354)
!4992 = !DILocation(line: 2258, column: 21, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !939, line: 2258, column: 21)
!4994 = distinct !DILexicalBlock(scope: !4989, file: !939, line: 2257, column: 30)
!4995 = !DILocation(line: 2258, column: 33, scope: !4993)
!4996 = !DILocation(line: 2258, column: 21, scope: !4994)
!4997 = !DILocation(line: 2259, column: 28, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4993, file: !939, line: 2258, column: 39)
!4999 = !DILocation(line: 2260, column: 72, scope: !4998)
!5000 = !DILocation(line: 2260, column: 32, scope: !4998)
!5001 = !DILocation(line: 2260, column: 30, scope: !4998)
!5002 = !DILocation(line: 2261, column: 17, scope: !4998)
!5003 = !DILocation(line: 2261, column: 28, scope: !5004)
!5004 = !DILexicalBlockFile(scope: !5005, file: !939, discriminator: 1)
!5005 = distinct !DILexicalBlock(scope: !4993, file: !939, line: 2261, column: 28)
!5006 = !DILocation(line: 2261, column: 40, scope: !5004)
!5007 = !DILocation(line: 2262, column: 28, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5005, file: !939, line: 2261, column: 47)
!5009 = !DILocation(line: 2263, column: 72, scope: !5008)
!5010 = !DILocation(line: 2263, column: 32, scope: !5008)
!5011 = !DILocation(line: 2263, column: 30, scope: !5008)
!5012 = !DILocation(line: 2264, column: 17, scope: !5008)
!5013 = !DILocation(line: 2265, column: 13, scope: !4994)
!5014 = !DILocation(line: 2266, column: 18, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4354, file: !939, line: 2266, column: 17)
!5016 = !DILocation(line: 2266, column: 25, scope: !5015)
!5017 = !DILocation(line: 2266, column: 93, scope: !5015)
!5018 = !DILocation(line: 2267, column: 21, scope: !5015)
!5019 = !DILocation(line: 2267, column: 28, scope: !5015)
!5020 = !DILocation(line: 2267, column: 97, scope: !5015)
!5021 = !DILocation(line: 2268, column: 21, scope: !5015)
!5022 = !DILocation(line: 2268, column: 33, scope: !5015)
!5023 = !DILocation(line: 2266, column: 17, scope: !5024)
!5024 = !DILexicalBlockFile(scope: !4354, file: !939, discriminator: 1)
!5025 = !DILocation(line: 2269, column: 26, scope: !5015)
!5026 = !DILocation(line: 2269, column: 17, scope: !5015)
!5027 = !DILocation(line: 2270, column: 9, scope: !4354)
!5028 = !DILocation(line: 2270, column: 28, scope: !5029)
!5029 = !DILexicalBlockFile(scope: !4334, file: !939, discriminator: 1)
!5030 = !DILocation(line: 2270, column: 35, scope: !5029)
!5031 = !DILocation(line: 2270, column: 21, scope: !5029)
!5032 = !DILocation(line: 2270, column: 60, scope: !5029)
!5033 = !DILocation(line: 2271, column: 21, scope: !4334)
!5034 = !DILocation(line: 2271, column: 28, scope: !4334)
!5035 = !DILocation(line: 2271, column: 39, scope: !4334)
!5036 = !DILocation(line: 2271, column: 44, scope: !4334)
!5037 = !DILocation(line: 2271, column: 51, scope: !4334)
!5038 = !DILocation(line: 2272, column: 21, scope: !4334)
!5039 = !DILocation(line: 2272, column: 28, scope: !4334)
!5040 = !DILocation(line: 2272, column: 39, scope: !4334)
!5041 = !DILocation(line: 2272, column: 20, scope: !4334)
!5042 = !DILocation(line: 2270, column: 20, scope: !5043)
!5043 = !DILexicalBlockFile(scope: !4335, file: !939, discriminator: 2)
!5044 = !DILocalVariable(name: "ret", scope: !4351, file: !939, line: 2273, type: !1039)
!5045 = !DILocation(line: 2273, column: 17, scope: !4351)
!5046 = !DILocation(line: 2273, column: 36, scope: !4351)
!5047 = !DILocation(line: 2273, column: 23, scope: !4351)
!5048 = !DILocation(line: 2274, column: 17, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !4351, file: !939, line: 2274, column: 17)
!5050 = !DILocation(line: 2274, column: 21, scope: !5049)
!5051 = !DILocation(line: 2274, column: 17, scope: !4351)
!5052 = !DILocation(line: 2275, column: 24, scope: !5049)
!5053 = !DILocation(line: 2275, column: 17, scope: !5049)
!5054 = !DILocation(line: 2276, column: 17, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !4351, file: !939, line: 2276, column: 17)
!5056 = !DILocation(line: 2276, column: 26, scope: !5055)
!5057 = !DILocation(line: 2276, column: 46, scope: !5055)
!5058 = !DILocation(line: 2276, column: 81, scope: !5059)
!5059 = !DILexicalBlockFile(scope: !5055, file: !939, discriminator: 1)
!5060 = !DILocation(line: 2276, column: 88, scope: !5059)
!5061 = !DILocation(line: 2276, column: 99, scope: !5059)
!5062 = !DILocation(line: 2276, column: 103, scope: !5059)
!5063 = !DILocation(line: 2276, column: 109, scope: !5059)
!5064 = !DILocation(line: 2276, column: 157, scope: !5059)
!5065 = !DILocation(line: 2276, column: 112, scope: !5059)
!5066 = !DILocation(line: 2276, column: 17, scope: !5059)
!5067 = !DILocation(line: 2277, column: 24, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5055, file: !939, line: 2276, column: 161)
!5069 = !DILocation(line: 2278, column: 68, scope: !5068)
!5070 = !DILocation(line: 2278, column: 28, scope: !5068)
!5071 = !DILocation(line: 2278, column: 26, scope: !5068)
!5072 = !DILocation(line: 2279, column: 13, scope: !5068)
!5073 = !DILocation(line: 2280, column: 17, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !4351, file: !939, line: 2280, column: 17)
!5075 = !DILocation(line: 2280, column: 26, scope: !5074)
!5076 = !DILocation(line: 2280, column: 17, scope: !4351)
!5077 = !DILocation(line: 2281, column: 24, scope: !5074)
!5078 = !DILocation(line: 2281, column: 34, scope: !5074)
!5079 = !DILocation(line: 2282, column: 76, scope: !5074)
!5080 = !DILocation(line: 2282, column: 86, scope: !5074)
!5081 = !DILocation(line: 2282, column: 91, scope: !5074)
!5082 = !DILocation(line: 2282, column: 54, scope: !5083)
!5083 = !DILexicalBlockFile(scope: !5074, file: !939, discriminator: 1)
!5084 = !DILocation(line: 2281, column: 17, scope: !5074)
!5085 = !DILocation(line: 2283, column: 17, scope: !4350)
!5086 = !DILocation(line: 2283, column: 24, scope: !4350)
!5087 = !DILocation(line: 2283, column: 35, scope: !4350)
!5088 = !DILocation(line: 2283, column: 40, scope: !4350)
!5089 = !DILocation(line: 2283, column: 17, scope: !4351)
!5090 = !DILocation(line: 2284, column: 72, scope: !4349)
!5091 = !DILocation(line: 2284, column: 79, scope: !4349)
!5092 = !DILocation(line: 2284, column: 90, scope: !4349)
!5093 = !DILocation(line: 2284, column: 95, scope: !4349)
!5094 = !DILocation(line: 2284, column: 103, scope: !4349)
!5095 = !DILocation(line: 2284, column: 29, scope: !4349)
!5096 = !DILocation(line: 60, column: 9, scope: !4344, inlinedAt: !4348)
!5097 = !DILocation(line: 60, column: 10, scope: !4344, inlinedAt: !4348)
!5098 = !DILocation(line: 60, column: 18, scope: !4344, inlinedAt: !4348)
!5099 = !DILocation(line: 60, column: 19, scope: !4344, inlinedAt: !4348)
!5100 = !DILocation(line: 60, column: 15, scope: !4344, inlinedAt: !4348)
!5101 = !DILocation(line: 60, column: 8, scope: !4344, inlinedAt: !4348)
!5102 = !DILocation(line: 60, column: 6, scope: !4344, inlinedAt: !4348)
!5103 = !DILocation(line: 61, column: 12, scope: !4344, inlinedAt: !4348)
!5104 = !DILocation(line: 2284, column: 27, scope: !4349)
!5105 = !DILocation(line: 2285, column: 39, scope: !4349)
!5106 = !DILocation(line: 2285, column: 46, scope: !4349)
!5107 = !DILocation(line: 2285, column: 57, scope: !4349)
!5108 = !DILocation(line: 2286, column: 35, scope: !4349)
!5109 = !DILocation(line: 2286, column: 42, scope: !4349)
!5110 = !DILocation(line: 2286, column: 53, scope: !4349)
!5111 = !DILocation(line: 2285, column: 17, scope: !4349)
!5112 = !DILocation(line: 2288, column: 38, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !4349, file: !939, line: 2288, column: 21)
!5114 = !DILocation(line: 2288, column: 52, scope: !5113)
!5115 = !DILocation(line: 2288, column: 59, scope: !5113)
!5116 = !DILocation(line: 2288, column: 21, scope: !5113)
!5117 = !DILocation(line: 2288, column: 21, scope: !4349)
!5118 = !DILocation(line: 2289, column: 31, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5113, file: !939, line: 2288, column: 69)
!5120 = !DILocation(line: 2290, column: 21, scope: !5119)
!5121 = !DILocation(line: 2290, column: 28, scope: !5119)
!5122 = !DILocation(line: 2290, column: 40, scope: !5119)
!5123 = !DILocation(line: 2291, column: 17, scope: !5119)
!5124 = !DILocation(line: 2292, column: 13, scope: !4349)
!5125 = !DILocation(line: 2293, column: 9, scope: !4351)
!5126 = !DILocation(line: 2293, column: 20, scope: !5127)
!5127 = !DILexicalBlockFile(scope: !4333, file: !939, discriminator: 1)
!5128 = !DILocation(line: 2293, column: 29, scope: !5127)
!5129 = !DILocation(line: 2294, column: 21, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !4333, file: !939, line: 2293, column: 55)
!5131 = !DILocation(line: 2294, column: 28, scope: !5130)
!5132 = !DILocation(line: 2294, column: 34, scope: !5130)
!5133 = !DILocation(line: 2294, column: 13, scope: !5130)
!5134 = !DILocation(line: 2296, column: 26, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5130, file: !939, line: 2294, column: 44)
!5136 = !DILocation(line: 2297, column: 17, scope: !5135)
!5137 = !DILocation(line: 2299, column: 26, scope: !5135)
!5138 = !DILocation(line: 2300, column: 17, scope: !5135)
!5139 = !DILocation(line: 2302, column: 26, scope: !5135)
!5140 = !DILocation(line: 2303, column: 17, scope: !5135)
!5141 = !DILocation(line: 2305, column: 9, scope: !5130)
!5142 = !DILocation(line: 2305, column: 20, scope: !5143)
!5143 = !DILexicalBlockFile(scope: !4332, file: !939, discriminator: 1)
!5144 = !DILocation(line: 2305, column: 29, scope: !5143)
!5145 = !DILocation(line: 2306, column: 21, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !4332, file: !939, line: 2305, column: 55)
!5147 = !DILocation(line: 2306, column: 28, scope: !5146)
!5148 = !DILocation(line: 2306, column: 34, scope: !5146)
!5149 = !DILocation(line: 2306, column: 13, scope: !5146)
!5150 = !DILocation(line: 2308, column: 26, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5146, file: !939, line: 2306, column: 44)
!5152 = !DILocation(line: 2309, column: 17, scope: !5151)
!5153 = !DILocation(line: 2311, column: 26, scope: !5151)
!5154 = !DILocation(line: 2312, column: 17, scope: !5151)
!5155 = !DILocation(line: 2314, column: 26, scope: !5151)
!5156 = !DILocation(line: 2315, column: 17, scope: !5151)
!5157 = !DILocation(line: 2317, column: 9, scope: !5146)
!5158 = !DILocation(line: 2317, column: 20, scope: !5159)
!5159 = !DILexicalBlockFile(scope: !4331, file: !939, discriminator: 1)
!5160 = !DILocation(line: 2317, column: 29, scope: !5159)
!5161 = !DILocation(line: 2317, column: 54, scope: !5159)
!5162 = !DILocation(line: 2318, column: 20, scope: !4331)
!5163 = !DILocation(line: 2318, column: 27, scope: !4331)
!5164 = !DILocation(line: 2318, column: 33, scope: !4331)
!5165 = !DILocation(line: 2318, column: 42, scope: !4331)
!5166 = !DILocation(line: 2317, column: 20, scope: !5167)
!5167 = !DILexicalBlockFile(scope: !4332, file: !939, discriminator: 2)
!5168 = !DILocation(line: 2319, column: 22, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !4331, file: !939, line: 2318, column: 49)
!5170 = !DILocation(line: 2320, column: 9, scope: !5169)
!5171 = !DILocation(line: 2320, column: 20, scope: !5172)
!5172 = !DILexicalBlockFile(scope: !4330, file: !939, discriminator: 1)
!5173 = !DILocation(line: 2320, column: 29, scope: !5172)
!5174 = !DILocation(line: 2320, column: 48, scope: !5172)
!5175 = !DILocation(line: 2320, column: 52, scope: !5176)
!5176 = !DILexicalBlockFile(scope: !4330, file: !939, discriminator: 2)
!5177 = !DILocation(line: 2320, column: 59, scope: !5176)
!5178 = !DILocation(line: 2320, column: 70, scope: !5176)
!5179 = !DILocation(line: 2320, column: 20, scope: !5176)
!5180 = !DILocalVariable(name: "profile", scope: !5181, file: !939, line: 2321, type: !1039)
!5181 = distinct !DILexicalBlock(scope: !4330, file: !939, line: 2320, column: 76)
!5182 = !DILocation(line: 2321, column: 17, scope: !5181)
!5183 = !DILocation(line: 2321, column: 48, scope: !5181)
!5184 = !DILocation(line: 2321, column: 55, scope: !5181)
!5185 = !DILocation(line: 2321, column: 27, scope: !5181)
!5186 = !DILocalVariable(name: "sri", scope: !5181, file: !939, line: 2322, type: !1039)
!5187 = !DILocation(line: 2322, column: 17, scope: !5181)
!5188 = !DILocation(line: 2322, column: 40, scope: !5181)
!5189 = !DILocation(line: 2322, column: 47, scope: !5181)
!5190 = !DILocation(line: 2322, column: 53, scope: !5181)
!5191 = !DILocation(line: 2322, column: 23, scope: !5181)
!5192 = !DILocation(line: 2323, column: 25, scope: !5181)
!5193 = !DILocation(line: 2323, column: 23, scope: !5181)
!5194 = !DILocation(line: 2324, column: 18, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5181, file: !939, line: 2324, column: 17)
!5196 = !DILocation(line: 2324, column: 17, scope: !5181)
!5197 = !DILocation(line: 2325, column: 17, scope: !5195)
!5198 = !DILocation(line: 2326, column: 29, scope: !5181)
!5199 = !DILocation(line: 2326, column: 37, scope: !5181)
!5200 = !DILocation(line: 2326, column: 47, scope: !5181)
!5201 = !DILocation(line: 2326, column: 51, scope: !5181)
!5202 = !DILocation(line: 2326, column: 59, scope: !5181)
!5203 = !DILocation(line: 2326, column: 43, scope: !5181)
!5204 = !DILocation(line: 2326, column: 28, scope: !5181)
!5205 = !DILocation(line: 2326, column: 13, scope: !5181)
!5206 = !DILocation(line: 2326, column: 26, scope: !5181)
!5207 = !DILocation(line: 2327, column: 30, scope: !5181)
!5208 = !DILocation(line: 2327, column: 34, scope: !5181)
!5209 = !DILocation(line: 2327, column: 42, scope: !5181)
!5210 = !DILocation(line: 2327, column: 28, scope: !5181)
!5211 = !DILocation(line: 2327, column: 51, scope: !5181)
!5212 = !DILocation(line: 2327, column: 58, scope: !5181)
!5213 = !DILocation(line: 2327, column: 64, scope: !5181)
!5214 = !DILocation(line: 2327, column: 73, scope: !5181)
!5215 = !DILocation(line: 2327, column: 48, scope: !5181)
!5216 = !DILocation(line: 2327, column: 13, scope: !5181)
!5217 = !DILocation(line: 2327, column: 26, scope: !5181)
!5218 = !DILocation(line: 2328, column: 24, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5181, file: !939, line: 2328, column: 17)
!5220 = !DILocation(line: 2328, column: 31, scope: !5219)
!5221 = !DILocation(line: 2328, column: 17, scope: !5219)
!5222 = !DILocation(line: 2328, column: 17, scope: !5181)
!5223 = !DILocation(line: 2329, column: 40, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5219, file: !939, line: 2328, column: 49)
!5225 = !DILocation(line: 2329, column: 47, scope: !5224)
!5226 = !DILocation(line: 2329, column: 53, scope: !5224)
!5227 = !DILocation(line: 2329, column: 23, scope: !5224)
!5228 = !DILocation(line: 2329, column: 21, scope: !5224)
!5229 = !DILocation(line: 2330, column: 17, scope: !5224)
!5230 = !DILocation(line: 2330, column: 30, scope: !5224)
!5231 = !DILocation(line: 2331, column: 17, scope: !5224)
!5232 = !DILocation(line: 2331, column: 30, scope: !5224)
!5233 = !DILocation(line: 2332, column: 40, scope: !5224)
!5234 = !DILocation(line: 2332, column: 44, scope: !5224)
!5235 = !DILocation(line: 2332, column: 37, scope: !5224)
!5236 = !DILocation(line: 2332, column: 32, scope: !5224)
!5237 = !DILocation(line: 2332, column: 17, scope: !5224)
!5238 = !DILocation(line: 2332, column: 30, scope: !5224)
!5239 = !DILocation(line: 2333, column: 32, scope: !5224)
!5240 = !DILocation(line: 2334, column: 13, scope: !5224)
!5241 = !DILocation(line: 2335, column: 32, scope: !5219)
!5242 = !DILocation(line: 2336, column: 9, scope: !5181)
!5243 = !DILocation(line: 2336, column: 20, scope: !5244)
!5244 = !DILexicalBlockFile(scope: !4329, file: !939, discriminator: 1)
!5245 = !DILocation(line: 2336, column: 29, scope: !5244)
!5246 = !DILocation(line: 2336, column: 49, scope: !5244)
!5247 = !DILocation(line: 2336, column: 52, scope: !5248)
!5248 = !DILexicalBlockFile(scope: !4329, file: !939, discriminator: 2)
!5249 = !DILocation(line: 2336, column: 59, scope: !5248)
!5250 = !DILocation(line: 2336, column: 70, scope: !5248)
!5251 = !DILocation(line: 2336, column: 75, scope: !5248)
!5252 = !DILocation(line: 2336, column: 78, scope: !5253)
!5253 = !DILexicalBlockFile(scope: !4329, file: !939, discriminator: 3)
!5254 = !DILocation(line: 2336, column: 85, scope: !5253)
!5255 = !DILocation(line: 2336, column: 96, scope: !5253)
!5256 = !DILocation(line: 2336, column: 101, scope: !5253)
!5257 = !DILocation(line: 2336, column: 20, scope: !5253)
!5258 = !DILocation(line: 2340, column: 35, scope: !4328)
!5259 = !DILocation(line: 2340, column: 42, scope: !4328)
!5260 = !DILocation(line: 2340, column: 53, scope: !4328)
!5261 = !DILocation(line: 2340, column: 33, scope: !4328)
!5262 = !DILocation(line: 2340, column: 28, scope: !4328)
!5263 = !DILocation(line: 2341, column: 36, scope: !4328)
!5264 = !DILocation(line: 2341, column: 51, scope: !4328)
!5265 = !DILocation(line: 2341, column: 25, scope: !4328)
!5266 = !DILocation(line: 2341, column: 23, scope: !4328)
!5267 = !DILocation(line: 2343, column: 18, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !4328, file: !939, line: 2343, column: 17)
!5269 = !DILocation(line: 2343, column: 17, scope: !4328)
!5270 = !DILocation(line: 2344, column: 17, scope: !5268)
!5271 = !DILocation(line: 2345, column: 70, scope: !4328)
!5272 = !DILocation(line: 2345, column: 59, scope: !4328)
!5273 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !4342)
!5274 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !4342)
!5275 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !4342)
!5276 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !4342)
!5277 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !4342)
!5278 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !4342)
!5279 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !4342)
!5280 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !4342)
!5281 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !4342)
!5282 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !4342)
!5283 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !4342)
!5284 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !4342)
!5285 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !4342)
!5286 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !4342)
!5287 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !4342)
!5288 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !4342)
!5289 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !4342)
!5290 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !4342)
!5291 = !DILocation(line: 2345, column: 40, scope: !4328)
!5292 = !DILocation(line: 2345, column: 53, scope: !4328)
!5293 = !DILocation(line: 2345, column: 56, scope: !4328)
!5294 = !DILocation(line: 2346, column: 21, scope: !4328)
!5295 = !DILocation(line: 2346, column: 13, scope: !4328)
!5296 = !DILocation(line: 2347, column: 63, scope: !4328)
!5297 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !4327)
!5298 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !4327)
!5299 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !4327)
!5300 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !4327)
!5301 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !4327)
!5302 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !4327)
!5303 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !4327)
!5304 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !4327)
!5305 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !4327)
!5306 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !4327)
!5307 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !4327)
!5308 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !4327)
!5309 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !4327)
!5310 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !4327)
!5311 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !4327)
!5312 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !4327)
!5313 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !4327)
!5314 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !4327)
!5315 = !DILocation(line: 2347, column: 41, scope: !4328)
!5316 = !DILocation(line: 2347, column: 57, scope: !4328)
!5317 = !DILocation(line: 2347, column: 60, scope: !4328)
!5318 = !DILocation(line: 2348, column: 21, scope: !4328)
!5319 = !DILocation(line: 2348, column: 36, scope: !4328)
!5320 = !DILocation(line: 2348, column: 43, scope: !4328)
!5321 = !DILocation(line: 2348, column: 54, scope: !4328)
!5322 = !DILocation(line: 2349, column: 20, scope: !4328)
!5323 = !DILocation(line: 2349, column: 27, scope: !4328)
!5324 = !DILocation(line: 2349, column: 38, scope: !4328)
!5325 = !DILocation(line: 2348, column: 13, scope: !4328)
!5326 = !DILocation(line: 2350, column: 9, scope: !4328)
!5327 = !DILocation(line: 2350, column: 20, scope: !5328)
!5328 = !DILexicalBlockFile(scope: !5329, file: !939, discriminator: 1)
!5329 = distinct !DILexicalBlock(scope: !4329, file: !939, line: 2350, column: 20)
!5330 = !DILocation(line: 2350, column: 29, scope: !5328)
!5331 = !DILocation(line: 2351, column: 28, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5329, file: !939, line: 2350, column: 49)
!5333 = !DILocation(line: 2352, column: 36, scope: !5332)
!5334 = !DILocation(line: 2352, column: 51, scope: !5332)
!5335 = !DILocation(line: 2352, column: 25, scope: !5332)
!5336 = !DILocation(line: 2352, column: 23, scope: !5332)
!5337 = !DILocation(line: 2353, column: 18, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5332, file: !939, line: 2353, column: 17)
!5339 = !DILocation(line: 2353, column: 17, scope: !5332)
!5340 = !DILocation(line: 2354, column: 17, scope: !5338)
!5341 = !DILocation(line: 2355, column: 35, scope: !5332)
!5342 = !DILocation(line: 2355, column: 46, scope: !5332)
!5343 = !DILocation(line: 2355, column: 13, scope: !5332)
!5344 = !DILocation(line: 2357, column: 13, scope: !5332)
!5345 = !DILocation(line: 2358, column: 13, scope: !5332)
!5346 = !DILocation(line: 2359, column: 17, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5332, file: !939, line: 2359, column: 17)
!5348 = !DILocation(line: 2359, column: 24, scope: !5347)
!5349 = !DILocation(line: 2359, column: 30, scope: !5347)
!5350 = !DILocation(line: 2359, column: 39, scope: !5347)
!5351 = !DILocation(line: 2359, column: 51, scope: !5347)
!5352 = !DILocation(line: 2360, column: 17, scope: !5347)
!5353 = !DILocation(line: 2360, column: 24, scope: !5347)
!5354 = !DILocation(line: 2360, column: 30, scope: !5347)
!5355 = !DILocation(line: 2360, column: 39, scope: !5347)
!5356 = !DILocation(line: 2359, column: 17, scope: !5357)
!5357 = !DILexicalBlockFile(scope: !5332, file: !939, discriminator: 1)
!5358 = !DILocation(line: 2361, column: 24, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5347, file: !939, line: 2360, column: 52)
!5360 = !DILocation(line: 2361, column: 34, scope: !5359)
!5361 = !DILocation(line: 2364, column: 24, scope: !5359)
!5362 = !DILocation(line: 2364, column: 31, scope: !5359)
!5363 = !DILocation(line: 2364, column: 37, scope: !5359)
!5364 = !DILocation(line: 2364, column: 47, scope: !5359)
!5365 = !DILocation(line: 2364, column: 54, scope: !5359)
!5366 = !DILocation(line: 2364, column: 60, scope: !5359)
!5367 = !DILocation(line: 2361, column: 17, scope: !5359)
!5368 = !DILocation(line: 2365, column: 26, scope: !5359)
!5369 = !DILocation(line: 2365, column: 17, scope: !5359)
!5370 = !DILocation(line: 2366, column: 21, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5359, file: !939, line: 2366, column: 21)
!5372 = !DILocation(line: 2366, column: 31, scope: !5371)
!5373 = !DILocation(line: 2366, column: 36, scope: !5371)
!5374 = !DILocation(line: 2366, column: 54, scope: !5371)
!5375 = !DILocation(line: 2366, column: 21, scope: !5359)
!5376 = !DILocation(line: 2367, column: 21, scope: !5371)
!5377 = !DILocation(line: 2369, column: 21, scope: !5371)
!5378 = !DILocation(line: 2371, column: 27, scope: !5332)
!5379 = !DILocation(line: 2371, column: 34, scope: !5332)
!5380 = !DILocation(line: 2371, column: 40, scope: !5332)
!5381 = !DILocation(line: 2371, column: 13, scope: !5332)
!5382 = !DILocation(line: 2372, column: 27, scope: !5332)
!5383 = !DILocation(line: 2372, column: 34, scope: !5332)
!5384 = !DILocation(line: 2372, column: 40, scope: !5332)
!5385 = !DILocation(line: 2372, column: 13, scope: !5332)
!5386 = !DILocation(line: 2373, column: 17, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5332, file: !939, line: 2373, column: 17)
!5388 = !DILocation(line: 2373, column: 24, scope: !5387)
!5389 = !DILocation(line: 2373, column: 30, scope: !5387)
!5390 = !DILocation(line: 2373, column: 45, scope: !5387)
!5391 = !DILocation(line: 2373, column: 49, scope: !5387)
!5392 = !DILocation(line: 2373, column: 52, scope: !5393)
!5393 = !DILexicalBlockFile(scope: !5387, file: !939, discriminator: 1)
!5394 = !DILocation(line: 2373, column: 59, scope: !5393)
!5395 = !DILocation(line: 2373, column: 65, scope: !5393)
!5396 = !DILocation(line: 2373, column: 80, scope: !5393)
!5397 = !DILocation(line: 2373, column: 17, scope: !5393)
!5398 = !DILocation(line: 2374, column: 17, scope: !5387)
!5399 = !DILocation(line: 2375, column: 27, scope: !5332)
!5400 = !DILocation(line: 2375, column: 34, scope: !5332)
!5401 = !DILocation(line: 2375, column: 40, scope: !5332)
!5402 = !DILocation(line: 2375, column: 13, scope: !5332)
!5403 = !DILocation(line: 2376, column: 39, scope: !5332)
!5404 = !DILocation(line: 2376, column: 49, scope: !5332)
!5405 = !DILocation(line: 2376, column: 60, scope: !5332)
!5406 = !DILocation(line: 2376, column: 70, scope: !5332)
!5407 = !DILocation(line: 2376, column: 58, scope: !5332)
!5408 = !DILocation(line: 2376, column: 38, scope: !5332)
!5409 = !DILocation(line: 2377, column: 38, scope: !5332)
!5410 = !DILocation(line: 2377, column: 45, scope: !5332)
!5411 = !DILocation(line: 2377, column: 51, scope: !5332)
!5412 = !DILocation(line: 2376, column: 27, scope: !5332)
!5413 = !DILocation(line: 2376, column: 13, scope: !5357)
!5414 = !DILocation(line: 2379, column: 9, scope: !5332)
!5415 = !DILocation(line: 2379, column: 20, scope: !5416)
!5416 = !DILexicalBlockFile(scope: !5417, file: !939, discriminator: 1)
!5417 = distinct !DILexicalBlock(scope: !5329, file: !939, line: 2379, column: 20)
!5418 = !DILocation(line: 2379, column: 29, scope: !5416)
!5419 = !DILocation(line: 2379, column: 49, scope: !5416)
!5420 = !DILocation(line: 2380, column: 20, scope: !5417)
!5421 = !DILocation(line: 2380, column: 29, scope: !5417)
!5422 = !DILocation(line: 2380, column: 49, scope: !5417)
!5423 = !DILocation(line: 2381, column: 20, scope: !5417)
!5424 = !DILocation(line: 2381, column: 29, scope: !5417)
!5425 = !DILocation(line: 2381, column: 49, scope: !5417)
!5426 = !DILocation(line: 2382, column: 20, scope: !5417)
!5427 = !DILocation(line: 2382, column: 29, scope: !5417)
!5428 = !DILocation(line: 2379, column: 20, scope: !5429)
!5429 = !DILexicalBlockFile(scope: !5329, file: !939, discriminator: 2)
!5430 = !DILocation(line: 2383, column: 30, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5417, file: !939, line: 2382, column: 50)
!5432 = !DILocation(line: 2384, column: 9, scope: !5431)
!5433 = !DILocation(line: 2384, column: 20, scope: !5434)
!5434 = !DILexicalBlockFile(scope: !5435, file: !939, discriminator: 1)
!5435 = distinct !DILexicalBlock(scope: !5417, file: !939, line: 2384, column: 20)
!5436 = !DILocation(line: 2384, column: 29, scope: !5434)
!5437 = !DILocation(line: 2385, column: 13, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5435, file: !939, line: 2384, column: 52)
!5439 = !DILocation(line: 2385, column: 20, scope: !5438)
!5440 = !DILocation(line: 2385, column: 26, scope: !5438)
!5441 = !DILocation(line: 2385, column: 41, scope: !5438)
!5442 = !DILocation(line: 2386, column: 13, scope: !5438)
!5443 = !DILocation(line: 2386, column: 20, scope: !5438)
!5444 = !DILocation(line: 2386, column: 26, scope: !5438)
!5445 = !DILocation(line: 2386, column: 35, scope: !5438)
!5446 = !DILocation(line: 2387, column: 9, scope: !5438)
!5447 = !DILocation(line: 2387, column: 21, scope: !5448)
!5448 = !DILexicalBlockFile(scope: !5449, file: !939, discriminator: 1)
!5449 = distinct !DILexicalBlock(scope: !5435, file: !939, line: 2387, column: 20)
!5450 = !DILocation(line: 2387, column: 30, scope: !5448)
!5451 = !DILocation(line: 2387, column: 52, scope: !5448)
!5452 = !DILocation(line: 2388, column: 21, scope: !5449)
!5453 = !DILocation(line: 2388, column: 30, scope: !5449)
!5454 = !DILocation(line: 2388, column: 50, scope: !5449)
!5455 = !DILocation(line: 2389, column: 21, scope: !5449)
!5456 = !DILocation(line: 2389, column: 30, scope: !5449)
!5457 = !DILocation(line: 2389, column: 52, scope: !5449)
!5458 = !DILocation(line: 2390, column: 21, scope: !5449)
!5459 = !DILocation(line: 2390, column: 30, scope: !5449)
!5460 = !DILocation(line: 2391, column: 23, scope: !5449)
!5461 = !DILocation(line: 2391, column: 26, scope: !5448)
!5462 = !DILocation(line: 2391, column: 33, scope: !5448)
!5463 = !DILocation(line: 2391, column: 44, scope: !5448)
!5464 = !DILocation(line: 2387, column: 20, scope: !5465)
!5465 = !DILexicalBlockFile(scope: !5435, file: !939, discriminator: 2)
!5466 = !DILocalVariable(name: "flavor", scope: !5467, file: !939, line: 2392, type: !1039)
!5467 = distinct !DILexicalBlock(scope: !5449, file: !939, line: 2391, column: 50)
!5468 = !DILocation(line: 2392, column: 17, scope: !5467)
!5469 = !DILocation(line: 2394, column: 35, scope: !5467)
!5470 = !DILocation(line: 2394, column: 42, scope: !5467)
!5471 = !DILocation(line: 2394, column: 53, scope: !5467)
!5472 = !DILocation(line: 2395, column: 31, scope: !5467)
!5473 = !DILocation(line: 2395, column: 38, scope: !5467)
!5474 = !DILocation(line: 2395, column: 49, scope: !5467)
!5475 = !DILocation(line: 2394, column: 13, scope: !5467)
!5476 = !DILocation(line: 2397, column: 13, scope: !5467)
!5477 = !DILocation(line: 2398, column: 22, scope: !5467)
!5478 = !DILocation(line: 2398, column: 20, scope: !5467)
!5479 = !DILocation(line: 2399, column: 44, scope: !5467)
!5480 = !DILocation(line: 2399, column: 13, scope: !5467)
!5481 = !DILocation(line: 2399, column: 20, scope: !5467)
!5482 = !DILocation(line: 2399, column: 26, scope: !5467)
!5483 = !DILocation(line: 2399, column: 42, scope: !5467)
!5484 = !DILocation(line: 2400, column: 13, scope: !5467)
!5485 = !DILocation(line: 2401, column: 41, scope: !5467)
!5486 = !DILocation(line: 2401, column: 13, scope: !5467)
!5487 = !DILocation(line: 2401, column: 20, scope: !5467)
!5488 = !DILocation(line: 2401, column: 26, scope: !5467)
!5489 = !DILocation(line: 2401, column: 39, scope: !5467)
!5490 = !DILocation(line: 2402, column: 39, scope: !5467)
!5491 = !DILocation(line: 2402, column: 13, scope: !5467)
!5492 = !DILocation(line: 2402, column: 20, scope: !5467)
!5493 = !DILocation(line: 2402, column: 26, scope: !5467)
!5494 = !DILocation(line: 2402, column: 37, scope: !5467)
!5495 = !DILocation(line: 2403, column: 44, scope: !5467)
!5496 = !DILocation(line: 2403, column: 13, scope: !5467)
!5497 = !DILocation(line: 2403, column: 20, scope: !5467)
!5498 = !DILocation(line: 2403, column: 26, scope: !5467)
!5499 = !DILocation(line: 2403, column: 42, scope: !5467)
!5500 = !DILocation(line: 2404, column: 17, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5467, file: !939, line: 2404, column: 17)
!5502 = !DILocation(line: 2404, column: 24, scope: !5501)
!5503 = !DILocation(line: 2404, column: 28, scope: !5501)
!5504 = !DILocation(line: 2405, column: 17, scope: !5501)
!5505 = !DILocation(line: 2405, column: 24, scope: !5501)
!5506 = !DILocation(line: 2405, column: 30, scope: !5501)
!5507 = !DILocation(line: 2405, column: 46, scope: !5501)
!5508 = !DILocation(line: 2405, column: 51, scope: !5501)
!5509 = !DILocation(line: 2406, column: 17, scope: !5501)
!5510 = !DILocation(line: 2406, column: 24, scope: !5501)
!5511 = !DILocation(line: 2406, column: 30, scope: !5501)
!5512 = !DILocation(line: 2406, column: 43, scope: !5501)
!5513 = !DILocation(line: 2406, column: 48, scope: !5501)
!5514 = !DILocation(line: 2407, column: 17, scope: !5501)
!5515 = !DILocation(line: 2407, column: 24, scope: !5501)
!5516 = !DILocation(line: 2407, column: 30, scope: !5501)
!5517 = !DILocation(line: 2407, column: 41, scope: !5501)
!5518 = !DILocation(line: 2407, column: 46, scope: !5501)
!5519 = !DILocation(line: 2408, column: 17, scope: !5501)
!5520 = !DILocation(line: 2408, column: 24, scope: !5501)
!5521 = !DILocation(line: 2408, column: 30, scope: !5501)
!5522 = !DILocation(line: 2408, column: 46, scope: !5501)
!5523 = !DILocation(line: 2408, column: 51, scope: !5501)
!5524 = !DILocation(line: 2408, column: 54, scope: !5525)
!5525 = !DILexicalBlockFile(scope: !5501, file: !939, discriminator: 1)
!5526 = !DILocation(line: 2408, column: 63, scope: !5525)
!5527 = !DILocation(line: 2404, column: 17, scope: !5528)
!5528 = !DILexicalBlockFile(scope: !5467, file: !939, discriminator: 1)
!5529 = !DILocation(line: 2409, column: 17, scope: !5501)
!5530 = !DILocation(line: 2410, column: 48, scope: !5467)
!5531 = !DILocation(line: 2410, column: 55, scope: !5467)
!5532 = !DILocation(line: 2410, column: 61, scope: !5467)
!5533 = !DILocation(line: 2411, column: 48, scope: !5467)
!5534 = !DILocation(line: 2411, column: 55, scope: !5467)
!5535 = !DILocation(line: 2411, column: 61, scope: !5467)
!5536 = !DILocation(line: 2410, column: 32, scope: !5467)
!5537 = !DILocation(line: 2410, column: 13, scope: !5467)
!5538 = !DILocation(line: 2410, column: 20, scope: !5467)
!5539 = !DILocation(line: 2410, column: 26, scope: !5467)
!5540 = !DILocation(line: 2410, column: 30, scope: !5467)
!5541 = !DILocation(line: 2412, column: 18, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5467, file: !939, line: 2412, column: 17)
!5543 = !DILocation(line: 2412, column: 25, scope: !5542)
!5544 = !DILocation(line: 2412, column: 31, scope: !5542)
!5545 = !DILocation(line: 2412, column: 17, scope: !5467)
!5546 = !DILocation(line: 2413, column: 17, scope: !5542)
!5547 = !DILocation(line: 2414, column: 17, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5467, file: !939, line: 2414, column: 17)
!5549 = !DILocation(line: 2414, column: 26, scope: !5548)
!5550 = !DILocation(line: 2414, column: 17, scope: !5467)
!5551 = !DILocation(line: 2415, column: 45, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5548, file: !939, line: 2414, column: 49)
!5553 = !DILocation(line: 2415, column: 52, scope: !5552)
!5554 = !DILocation(line: 2415, column: 58, scope: !5552)
!5555 = !DILocation(line: 2415, column: 17, scope: !5552)
!5556 = !DILocation(line: 2415, column: 21, scope: !5552)
!5557 = !DILocation(line: 2415, column: 31, scope: !5552)
!5558 = !DILocation(line: 2415, column: 43, scope: !5552)
!5559 = !DILocation(line: 2416, column: 17, scope: !5552)
!5560 = !DILocation(line: 2416, column: 24, scope: !5552)
!5561 = !DILocation(line: 2416, column: 35, scope: !5552)
!5562 = !DILocation(line: 2416, column: 40, scope: !5552)
!5563 = !DILocation(line: 2417, column: 13, scope: !5552)
!5564 = !DILocation(line: 2418, column: 21, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5566, file: !939, line: 2418, column: 21)
!5566 = distinct !DILexicalBlock(scope: !5548, file: !939, line: 2417, column: 20)
!5567 = !DILocation(line: 2418, column: 30, scope: !5565)
!5568 = !DILocation(line: 2418, column: 50, scope: !5565)
!5569 = !DILocation(line: 2418, column: 53, scope: !5570)
!5570 = !DILexicalBlockFile(scope: !5565, file: !939, discriminator: 1)
!5571 = !DILocation(line: 2418, column: 60, scope: !5570)
!5572 = !DILocation(line: 2418, column: 21, scope: !5570)
!5573 = !DILocation(line: 2420, column: 71, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5565, file: !939, line: 2418, column: 65)
!5575 = !DILocation(line: 2420, column: 52, scope: !5574)
!5576 = !DILocation(line: 2420, column: 21, scope: !5574)
!5577 = !DILocation(line: 2420, column: 28, scope: !5574)
!5578 = !DILocation(line: 2420, column: 34, scope: !5574)
!5579 = !DILocation(line: 2420, column: 50, scope: !5574)
!5580 = !DILocation(line: 2421, column: 60, scope: !5574)
!5581 = !DILocation(line: 2421, column: 46, scope: !5574)
!5582 = !DILocation(line: 2421, column: 21, scope: !5574)
!5583 = !DILocation(line: 2421, column: 25, scope: !5574)
!5584 = !DILocation(line: 2421, column: 35, scope: !5574)
!5585 = !DILocation(line: 2421, column: 44, scope: !5574)
!5586 = !DILocation(line: 2422, column: 17, scope: !5574)
!5587 = !DILocation(line: 2423, column: 45, scope: !5566)
!5588 = !DILocation(line: 2423, column: 52, scope: !5566)
!5589 = !DILocation(line: 2423, column: 58, scope: !5566)
!5590 = !DILocation(line: 2423, column: 17, scope: !5566)
!5591 = !DILocation(line: 2423, column: 21, scope: !5566)
!5592 = !DILocation(line: 2423, column: 31, scope: !5566)
!5593 = !DILocation(line: 2423, column: 43, scope: !5566)
!5594 = !DILocation(line: 2424, column: 34, scope: !5566)
!5595 = !DILocation(line: 2426, column: 9, scope: !5467)
!5596 = !DILocation(line: 2426, column: 20, scope: !5597)
!5597 = !DILexicalBlockFile(scope: !5598, file: !939, discriminator: 1)
!5598 = distinct !DILexicalBlock(scope: !5449, file: !939, line: 2426, column: 20)
!5599 = !DILocation(line: 2426, column: 29, scope: !5597)
!5600 = !DILocation(line: 2426, column: 49, scope: !5597)
!5601 = !DILocation(line: 2426, column: 52, scope: !5602)
!5602 = !DILexicalBlockFile(scope: !5598, file: !939, discriminator: 2)
!5603 = !DILocation(line: 2426, column: 59, scope: !5602)
!5604 = !DILocation(line: 2426, column: 70, scope: !5602)
!5605 = !DILocation(line: 2426, column: 20, scope: !5602)
!5606 = !DILocation(line: 2427, column: 39, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5598, file: !939, line: 2426, column: 76)
!5608 = !DILocation(line: 2427, column: 42, scope: !5607)
!5609 = !DILocation(line: 2427, column: 19, scope: !5607)
!5610 = !DILocation(line: 2427, column: 17, scope: !5607)
!5611 = !DILocation(line: 2428, column: 17, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5607, file: !939, line: 2428, column: 17)
!5613 = !DILocation(line: 2428, column: 21, scope: !5612)
!5614 = !DILocation(line: 2428, column: 17, scope: !5607)
!5615 = !DILocation(line: 2429, column: 24, scope: !5612)
!5616 = !DILocation(line: 2429, column: 17, scope: !5612)
!5617 = !DILocation(line: 2430, column: 9, scope: !5607)
!5618 = !DILocation(line: 2430, column: 20, scope: !5619)
!5619 = !DILexicalBlockFile(scope: !5620, file: !939, discriminator: 1)
!5620 = distinct !DILexicalBlock(scope: !5598, file: !939, line: 2430, column: 20)
!5621 = !DILocation(line: 2430, column: 29, scope: !5619)
!5622 = !DILocation(line: 2430, column: 51, scope: !5619)
!5623 = !DILocation(line: 2430, column: 54, scope: !5624)
!5624 = !DILexicalBlockFile(scope: !5620, file: !939, discriminator: 2)
!5625 = !DILocation(line: 2430, column: 61, scope: !5624)
!5626 = !DILocation(line: 2430, column: 72, scope: !5624)
!5627 = !DILocation(line: 2430, column: 77, scope: !5624)
!5628 = !DILocation(line: 2430, column: 20, scope: !5624)
!5629 = !DILocation(line: 2431, column: 54, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5620, file: !939, line: 2430, column: 83)
!5631 = !DILocation(line: 2431, column: 61, scope: !5630)
!5632 = !DILocation(line: 2431, column: 72, scope: !5630)
!5633 = !DILocation(line: 2431, column: 80, scope: !5630)
!5634 = !DILocation(line: 2431, column: 20, scope: !5630)
!5635 = !DILocation(line: 2432, column: 9, scope: !5630)
!5636 = !DILocation(line: 2432, column: 20, scope: !5637)
!5637 = !DILexicalBlockFile(scope: !5638, file: !939, discriminator: 1)
!5638 = distinct !DILexicalBlock(scope: !5620, file: !939, line: 2432, column: 20)
!5639 = !DILocation(line: 2432, column: 29, scope: !5637)
!5640 = !DILocation(line: 2432, column: 48, scope: !5637)
!5641 = !DILocation(line: 2432, column: 51, scope: !5642)
!5642 = !DILexicalBlockFile(scope: !5638, file: !939, discriminator: 2)
!5643 = !DILocation(line: 2432, column: 58, scope: !5642)
!5644 = !DILocation(line: 2432, column: 69, scope: !5642)
!5645 = !DILocation(line: 2432, column: 20, scope: !5642)
!5646 = !DILocation(line: 2435, column: 13, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5638, file: !939, line: 2432, column: 75)
!5648 = !DILocation(line: 2435, column: 20, scope: !5647)
!5649 = !DILocation(line: 2435, column: 31, scope: !5647)
!5650 = !DILocation(line: 2435, column: 36, scope: !5647)
!5651 = !DILocation(line: 2436, column: 9, scope: !5647)
!5652 = !DILocation(line: 2436, column: 20, scope: !5653)
!5653 = !DILexicalBlockFile(scope: !5654, file: !939, discriminator: 1)
!5654 = distinct !DILexicalBlock(scope: !5638, file: !939, line: 2436, column: 20)
!5655 = !DILocation(line: 2436, column: 29, scope: !5653)
!5656 = !DILocation(line: 2436, column: 48, scope: !5653)
!5657 = !DILocation(line: 2436, column: 51, scope: !5658)
!5658 = !DILexicalBlockFile(scope: !5654, file: !939, discriminator: 2)
!5659 = !DILocation(line: 2436, column: 58, scope: !5658)
!5660 = !DILocation(line: 2436, column: 69, scope: !5658)
!5661 = !DILocation(line: 2436, column: 20, scope: !5658)
!5662 = !DILocation(line: 2439, column: 30, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5654, file: !939, line: 2436, column: 75)
!5664 = !DILocation(line: 2440, column: 9, scope: !5663)
!5665 = !DILocation(line: 2441, column: 35, scope: !4338)
!5666 = !DILocation(line: 2441, column: 9, scope: !4338)
!5667 = !DILocation(line: 2441, column: 16, scope: !4338)
!5668 = !DILocation(line: 2441, column: 27, scope: !4338)
!5669 = !DILocation(line: 2441, column: 32, scope: !4338)
!5670 = !DILocation(line: 2443, column: 13, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2443, column: 13)
!5672 = !DILocation(line: 2443, column: 22, scope: !5671)
!5673 = !DILocation(line: 2443, column: 13, scope: !4338)
!5674 = !DILocation(line: 2444, column: 20, scope: !5671)
!5675 = !DILocation(line: 2444, column: 30, scope: !5671)
!5676 = !DILocation(line: 2445, column: 59, scope: !5671)
!5677 = !DILocation(line: 2445, column: 66, scope: !5671)
!5678 = !DILocation(line: 2444, column: 13, scope: !5671)
!5679 = !DILocation(line: 2447, column: 13, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2447, column: 13)
!5681 = !DILocation(line: 2447, column: 20, scope: !5680)
!5682 = !DILocation(line: 2447, column: 31, scope: !5680)
!5683 = !DILocation(line: 2447, column: 13, scope: !4338)
!5684 = !DILocation(line: 2448, column: 13, scope: !5680)
!5685 = !DILocation(line: 2448, column: 20, scope: !5680)
!5686 = !DILocation(line: 2448, column: 31, scope: !5680)
!5687 = !DILocation(line: 2449, column: 29, scope: !4338)
!5688 = !DILocation(line: 2449, column: 37, scope: !4338)
!5689 = !DILocation(line: 2449, column: 47, scope: !4338)
!5690 = !DILocation(line: 2449, column: 60, scope: !4338)
!5691 = !DILocation(line: 2449, column: 67, scope: !4338)
!5692 = !DILocation(line: 2449, column: 58, scope: !4338)
!5693 = !DILocation(line: 2449, column: 9, scope: !4338)
!5694 = !DILocation(line: 2453, column: 55, scope: !4338)
!5695 = !DILocation(line: 2453, column: 62, scope: !4338)
!5696 = !DILocation(line: 2454, column: 55, scope: !4338)
!5697 = !DILocation(line: 2455, column: 43, scope: !4338)
!5698 = !DILocation(line: 2455, column: 47, scope: !4338)
!5699 = !DILocation(line: 2453, column: 42, scope: !4338)
!5700 = !DILocation(line: 2453, column: 9, scope: !4338)
!5701 = !DILocation(line: 2453, column: 16, scope: !4338)
!5702 = !DILocation(line: 2453, column: 40, scope: !4338)
!5703 = !DILocation(line: 2457, column: 34, scope: !4338)
!5704 = !DILocation(line: 2457, column: 9, scope: !4338)
!5705 = !DILocation(line: 2457, column: 13, scope: !4338)
!5706 = !DILocation(line: 2457, column: 23, scope: !4338)
!5707 = !DILocation(line: 2457, column: 32, scope: !4338)
!5708 = !DILocation(line: 2459, column: 20, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2459, column: 13)
!5710 = !DILocation(line: 2459, column: 27, scope: !5709)
!5711 = !DILocation(line: 2459, column: 13, scope: !5709)
!5712 = !DILocation(line: 2459, column: 13, scope: !4338)
!5713 = !DILocation(line: 2460, column: 26, scope: !5709)
!5714 = !DILocation(line: 2460, column: 30, scope: !5709)
!5715 = !DILocation(line: 2460, column: 52, scope: !5709)
!5716 = !DILocation(line: 2460, column: 59, scope: !5709)
!5717 = !DILocation(line: 2460, column: 13, scope: !5709)
!5718 = !DILocation(line: 2461, column: 22, scope: !4338)
!5719 = !DILocation(line: 2461, column: 26, scope: !4338)
!5720 = !DILocation(line: 2461, column: 45, scope: !4338)
!5721 = !DILocation(line: 2461, column: 52, scope: !4338)
!5722 = !DILocation(line: 2461, column: 9, scope: !4338)
!5723 = !DILocation(line: 2463, column: 13, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2463, column: 13)
!5725 = !DILocation(line: 2463, column: 20, scope: !5724)
!5726 = !DILocation(line: 2463, column: 13, scope: !4338)
!5727 = !DILocation(line: 2464, column: 13, scope: !5724)
!5728 = !DILocation(line: 2464, column: 17, scope: !5724)
!5729 = !DILocation(line: 2464, column: 29, scope: !5724)
!5730 = !DILocation(line: 2465, column: 13, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2465, column: 13)
!5732 = !DILocation(line: 2465, column: 20, scope: !5731)
!5733 = !DILocation(line: 2465, column: 13, scope: !4338)
!5734 = !DILocation(line: 2466, column: 13, scope: !5731)
!5735 = !DILocation(line: 2466, column: 17, scope: !5731)
!5736 = !DILocation(line: 2466, column: 29, scope: !5731)
!5737 = !DILocation(line: 2468, column: 14, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2468, column: 13)
!5739 = !DILocation(line: 2468, column: 18, scope: !5738)
!5740 = !DILocation(line: 2468, column: 28, scope: !5738)
!5741 = !DILocation(line: 2468, column: 13, scope: !4338)
!5742 = !DILocation(line: 2469, column: 17, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5744, file: !939, line: 2469, column: 17)
!5744 = distinct !DILexicalBlock(scope: !5738, file: !939, line: 2468, column: 39)
!5745 = !DILocation(line: 2469, column: 17, scope: !5744)
!5746 = !DILocation(line: 2470, column: 43, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5743, file: !939, line: 2469, column: 28)
!5748 = !DILocation(line: 2470, column: 17, scope: !5747)
!5749 = !DILocation(line: 2470, column: 21, scope: !5747)
!5750 = !DILocation(line: 2470, column: 31, scope: !5747)
!5751 = !DILocation(line: 2470, column: 41, scope: !5747)
!5752 = !DILocation(line: 2471, column: 48, scope: !5747)
!5753 = !DILocation(line: 2471, column: 17, scope: !5747)
!5754 = !DILocation(line: 2471, column: 21, scope: !5747)
!5755 = !DILocation(line: 2471, column: 31, scope: !5747)
!5756 = !DILocation(line: 2471, column: 46, scope: !5747)
!5757 = !DILocation(line: 2472, column: 13, scope: !5747)
!5758 = !DILocation(line: 2472, column: 24, scope: !5759)
!5759 = !DILexicalBlockFile(scope: !5760, file: !939, discriminator: 1)
!5760 = distinct !DILexicalBlock(scope: !5743, file: !939, line: 2472, column: 24)
!5761 = !DILocation(line: 2472, column: 31, scope: !5759)
!5762 = !DILocation(line: 2472, column: 42, scope: !5759)
!5763 = !DILocation(line: 2472, column: 47, scope: !5759)
!5764 = !DILocation(line: 2472, column: 50, scope: !5765)
!5765 = !DILexicalBlockFile(scope: !5760, file: !939, discriminator: 2)
!5766 = !DILocation(line: 2472, column: 57, scope: !5765)
!5767 = !DILocation(line: 2472, column: 68, scope: !5765)
!5768 = !DILocation(line: 2472, column: 73, scope: !5765)
!5769 = !DILocation(line: 2472, column: 24, scope: !5765)
!5770 = !DILocation(line: 2473, column: 40, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5772, file: !939, line: 2473, column: 21)
!5772 = distinct !DILexicalBlock(scope: !5760, file: !939, line: 2472, column: 78)
!5773 = !DILocation(line: 2473, column: 44, scope: !5771)
!5774 = !DILocation(line: 2473, column: 54, scope: !5771)
!5775 = !DILocation(line: 2473, column: 61, scope: !5771)
!5776 = !DILocation(line: 2473, column: 72, scope: !5771)
!5777 = !DILocation(line: 2473, column: 21, scope: !5771)
!5778 = !DILocation(line: 2473, column: 21, scope: !5772)
!5779 = !DILocation(line: 2474, column: 21, scope: !5771)
!5780 = !DILocation(line: 2475, column: 24, scope: !5772)
!5781 = !DILocation(line: 2475, column: 28, scope: !5772)
!5782 = !DILocation(line: 2475, column: 38, scope: !5772)
!5783 = !DILocation(line: 2476, column: 24, scope: !5772)
!5784 = !DILocation(line: 2476, column: 31, scope: !5772)
!5785 = !DILocation(line: 2476, column: 42, scope: !5772)
!5786 = !DILocation(line: 2476, column: 49, scope: !5772)
!5787 = !DILocation(line: 2476, column: 47, scope: !5772)
!5788 = !DILocation(line: 2477, column: 24, scope: !5772)
!5789 = !DILocation(line: 2477, column: 31, scope: !5772)
!5790 = !DILocation(line: 2477, column: 42, scope: !5772)
!5791 = !DILocation(line: 2475, column: 17, scope: !5772)
!5792 = !DILocation(line: 2478, column: 13, scope: !5772)
!5793 = !DILocation(line: 2479, column: 9, scope: !5744)
!5794 = !DILocation(line: 2481, column: 13, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !4338, file: !939, line: 2481, column: 13)
!5796 = !DILocation(line: 2481, column: 20, scope: !5795)
!5797 = !DILocation(line: 2481, column: 25, scope: !5795)
!5798 = !DILocation(line: 2481, column: 13, scope: !4338)
!5799 = !DILocalVariable(name: "planes", scope: !5800, file: !939, line: 2482, type: !5801)
!5800 = distinct !DILexicalBlock(scope: !5795, file: !939, line: 2481, column: 55)
!5801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5802, size: 64, align: 64)
!5802 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTrackPlane", file: !939, line: 211, baseType: !5803)
!5803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTrackPlane", file: !939, line: 208, size: 128, align: 64, elements: !5804)
!5804 = !{!5805, !5806}
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5803, file: !939, line: 209, baseType: !1045, size: 64, align: 64)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5803, file: !939, line: 210, baseType: !1045, size: 64, align: 64, offset: 64)
!5807 = !DILocation(line: 2482, column: 33, scope: !5800)
!5808 = !DILocation(line: 2482, column: 42, scope: !5800)
!5809 = !DILocation(line: 2482, column: 49, scope: !5800)
!5810 = !DILocation(line: 2482, column: 59, scope: !5800)
!5811 = !DILocation(line: 2482, column: 74, scope: !5800)
!5812 = !DILocalVariable(name: "display_width_mul", scope: !5800, file: !939, line: 2483, type: !1039)
!5813 = !DILocation(line: 2483, column: 17, scope: !5800)
!5814 = !DILocalVariable(name: "display_height_mul", scope: !5800, file: !939, line: 2484, type: !1039)
!5815 = !DILocation(line: 2484, column: 17, scope: !5800)
!5816 = !DILocation(line: 2486, column: 13, scope: !5800)
!5817 = !DILocation(line: 2486, column: 17, scope: !5800)
!5818 = !DILocation(line: 2486, column: 27, scope: !5800)
!5819 = !DILocation(line: 2486, column: 38, scope: !5800)
!5820 = !DILocation(line: 2487, column: 39, scope: !5800)
!5821 = !DILocation(line: 2487, column: 13, scope: !5800)
!5822 = !DILocation(line: 2487, column: 17, scope: !5800)
!5823 = !DILocation(line: 2487, column: 27, scope: !5800)
!5824 = !DILocation(line: 2487, column: 37, scope: !5800)
!5825 = !DILocation(line: 2488, column: 17, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5800, file: !939, line: 2488, column: 17)
!5827 = !DILocation(line: 2488, column: 27, scope: !5826)
!5828 = !DILocation(line: 2488, column: 17, scope: !5800)
!5829 = !DILocation(line: 2489, column: 55, scope: !5826)
!5830 = !DILocation(line: 2489, column: 17, scope: !5826)
!5831 = !DILocation(line: 2489, column: 21, scope: !5826)
!5832 = !DILocation(line: 2489, column: 31, scope: !5826)
!5833 = !DILocation(line: 2489, column: 53, scope: !5826)
!5834 = !DILocation(line: 2490, column: 35, scope: !5800)
!5835 = !DILocation(line: 2490, column: 42, scope: !5800)
!5836 = !DILocation(line: 2490, column: 48, scope: !5800)
!5837 = !DILocation(line: 2490, column: 13, scope: !5800)
!5838 = !DILocation(line: 2490, column: 17, scope: !5800)
!5839 = !DILocation(line: 2490, column: 27, scope: !5800)
!5840 = !DILocation(line: 2490, column: 33, scope: !5800)
!5841 = !DILocation(line: 2491, column: 36, scope: !5800)
!5842 = !DILocation(line: 2491, column: 43, scope: !5800)
!5843 = !DILocation(line: 2491, column: 49, scope: !5800)
!5844 = !DILocation(line: 2491, column: 13, scope: !5800)
!5845 = !DILocation(line: 2491, column: 17, scope: !5800)
!5846 = !DILocation(line: 2491, column: 27, scope: !5800)
!5847 = !DILocation(line: 2491, column: 34, scope: !5800)
!5848 = !DILocation(line: 2493, column: 17, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5800, file: !939, line: 2493, column: 17)
!5850 = !DILocation(line: 2493, column: 24, scope: !5849)
!5851 = !DILocation(line: 2493, column: 30, scope: !5849)
!5852 = !DILocation(line: 2493, column: 41, scope: !5849)
!5853 = !DILocation(line: 2493, column: 17, scope: !5800)
!5854 = !DILocation(line: 2494, column: 61, scope: !5849)
!5855 = !DILocation(line: 2494, column: 71, scope: !5849)
!5856 = !DILocation(line: 2494, column: 78, scope: !5849)
!5857 = !DILocation(line: 2494, column: 84, scope: !5849)
!5858 = !DILocation(line: 2494, column: 45, scope: !5849)
!5859 = !DILocation(line: 2494, column: 17, scope: !5849)
!5860 = !DILocation(line: 2494, column: 21, scope: !5849)
!5861 = !DILocation(line: 2494, column: 31, scope: !5849)
!5862 = !DILocation(line: 2494, column: 43, scope: !5849)
!5863 = !DILocation(line: 2495, column: 22, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5849, file: !939, line: 2495, column: 22)
!5865 = !DILocation(line: 2495, column: 29, scope: !5864)
!5866 = !DILocation(line: 2495, column: 35, scope: !5864)
!5867 = !DILocation(line: 2495, column: 46, scope: !5864)
!5868 = !DILocation(line: 2495, column: 22, scope: !5849)
!5869 = !DILocation(line: 2496, column: 17, scope: !5864)
!5870 = !DILocation(line: 2496, column: 21, scope: !5864)
!5871 = !DILocation(line: 2496, column: 31, scope: !5864)
!5872 = !DILocation(line: 2496, column: 43, scope: !5864)
!5873 = !DILocation(line: 2498, column: 17, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5800, file: !939, line: 2498, column: 17)
!5875 = !DILocation(line: 2498, column: 24, scope: !5874)
!5876 = !DILocation(line: 2498, column: 30, scope: !5874)
!5877 = !DILocation(line: 2498, column: 42, scope: !5874)
!5878 = !DILocation(line: 2498, column: 45, scope: !5879)
!5879 = !DILexicalBlockFile(scope: !5874, file: !939, discriminator: 1)
!5880 = !DILocation(line: 2498, column: 52, scope: !5879)
!5881 = !DILocation(line: 2498, column: 58, scope: !5879)
!5882 = !DILocation(line: 2498, column: 70, scope: !5879)
!5883 = !DILocation(line: 2498, column: 17, scope: !5879)
!5884 = !DILocation(line: 2499, column: 45, scope: !5874)
!5885 = !DILocation(line: 2499, column: 52, scope: !5874)
!5886 = !DILocation(line: 2499, column: 58, scope: !5874)
!5887 = !DILocation(line: 2499, column: 17, scope: !5874)
!5888 = !DILocation(line: 2501, column: 17, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5800, file: !939, line: 2501, column: 17)
!5890 = !DILocation(line: 2501, column: 24, scope: !5889)
!5891 = !DILocation(line: 2501, column: 30, scope: !5889)
!5892 = !DILocation(line: 2501, column: 43, scope: !5889)
!5893 = !DILocation(line: 2501, column: 17, scope: !5800)
!5894 = !DILocation(line: 2502, column: 28, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5889, file: !939, line: 2501, column: 81)
!5896 = !DILocation(line: 2502, column: 32, scope: !5895)
!5897 = !DILocation(line: 2502, column: 52, scope: !5895)
!5898 = !DILocation(line: 2503, column: 28, scope: !5895)
!5899 = !DILocation(line: 2503, column: 32, scope: !5895)
!5900 = !DILocation(line: 2503, column: 52, scope: !5895)
!5901 = !DILocation(line: 2504, column: 27, scope: !5895)
!5902 = !DILocation(line: 2504, column: 31, scope: !5895)
!5903 = !DILocation(line: 2504, column: 41, scope: !5895)
!5904 = !DILocation(line: 2504, column: 50, scope: !5895)
!5905 = !DILocation(line: 2504, column: 57, scope: !5895)
!5906 = !DILocation(line: 2504, column: 63, scope: !5895)
!5907 = !DILocation(line: 2504, column: 48, scope: !5895)
!5908 = !DILocation(line: 2504, column: 79, scope: !5895)
!5909 = !DILocation(line: 2504, column: 77, scope: !5895)
!5910 = !DILocation(line: 2505, column: 27, scope: !5895)
!5911 = !DILocation(line: 2505, column: 31, scope: !5895)
!5912 = !DILocation(line: 2505, column: 41, scope: !5895)
!5913 = !DILocation(line: 2505, column: 49, scope: !5895)
!5914 = !DILocation(line: 2505, column: 56, scope: !5895)
!5915 = !DILocation(line: 2505, column: 62, scope: !5895)
!5916 = !DILocation(line: 2505, column: 47, scope: !5895)
!5917 = !DILocation(line: 2505, column: 79, scope: !5895)
!5918 = !DILocation(line: 2505, column: 77, scope: !5895)
!5919 = !DILocation(line: 2502, column: 17, scope: !5895)
!5920 = !DILocation(line: 2507, column: 13, scope: !5895)
!5921 = !DILocation(line: 2508, column: 17, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5800, file: !939, line: 2508, column: 17)
!5923 = !DILocation(line: 2508, column: 21, scope: !5922)
!5924 = !DILocation(line: 2508, column: 31, scope: !5922)
!5925 = !DILocation(line: 2508, column: 40, scope: !5922)
!5926 = !DILocation(line: 2508, column: 17, scope: !5800)
!5927 = !DILocation(line: 2509, column: 17, scope: !5922)
!5928 = !DILocation(line: 2509, column: 21, scope: !5922)
!5929 = !DILocation(line: 2509, column: 34, scope: !5922)
!5930 = !DILocation(line: 2511, column: 17, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5800, file: !939, line: 2511, column: 17)
!5932 = !DILocation(line: 2511, column: 24, scope: !5931)
!5933 = !DILocation(line: 2511, column: 17, scope: !5800)
!5934 = !DILocation(line: 2512, column: 28, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5931, file: !939, line: 2511, column: 42)
!5936 = !DILocation(line: 2512, column: 32, scope: !5935)
!5937 = !DILocation(line: 2512, column: 47, scope: !5935)
!5938 = !DILocation(line: 2512, column: 53, scope: !5935)
!5939 = !DILocation(line: 2512, column: 57, scope: !5935)
!5940 = !DILocation(line: 2512, column: 72, scope: !5935)
!5941 = !DILocation(line: 2513, column: 39, scope: !5935)
!5942 = !DILocation(line: 2513, column: 46, scope: !5935)
!5943 = !DILocation(line: 2512, column: 17, scope: !5935)
!5944 = !DILocation(line: 2515, column: 22, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5935, file: !939, line: 2515, column: 22)
!5946 = !DILocation(line: 2515, column: 26, scope: !5945)
!5947 = !DILocation(line: 2515, column: 41, scope: !5945)
!5948 = !DILocation(line: 2515, column: 47, scope: !5945)
!5949 = !DILocation(line: 2515, column: 51, scope: !5945)
!5950 = !DILocation(line: 2515, column: 66, scope: !5945)
!5951 = !DILocation(line: 2515, column: 70, scope: !5945)
!5952 = !DILocation(line: 2515, column: 45, scope: !5945)
!5953 = !DILocation(line: 2516, column: 21, scope: !5945)
!5954 = !DILocation(line: 2516, column: 24, scope: !5955)
!5955 = !DILexicalBlockFile(scope: !5945, file: !939, discriminator: 1)
!5956 = !DILocation(line: 2516, column: 28, scope: !5955)
!5957 = !DILocation(line: 2516, column: 43, scope: !5955)
!5958 = !DILocation(line: 2516, column: 49, scope: !5955)
!5959 = !DILocation(line: 2516, column: 53, scope: !5955)
!5960 = !DILocation(line: 2516, column: 68, scope: !5955)
!5961 = !DILocation(line: 2516, column: 72, scope: !5955)
!5962 = !DILocation(line: 2516, column: 47, scope: !5955)
!5963 = !DILocation(line: 2515, column: 22, scope: !5964)
!5964 = !DILexicalBlockFile(scope: !5935, file: !939, discriminator: 1)
!5965 = !DILocation(line: 2517, column: 21, scope: !5945)
!5966 = !DILocation(line: 2517, column: 25, scope: !5945)
!5967 = !DILocation(line: 2517, column: 40, scope: !5945)
!5968 = !DILocation(line: 2517, column: 44, scope: !5945)
!5969 = !DILocation(line: 2519, column: 13, scope: !5935)
!5970 = !DILocation(line: 2522, column: 17, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5800, file: !939, line: 2522, column: 17)
!5972 = !DILocation(line: 2522, column: 24, scope: !5971)
!5973 = !DILocation(line: 2522, column: 30, scope: !5971)
!5974 = !DILocation(line: 2522, column: 42, scope: !5971)
!5975 = !DILocation(line: 2522, column: 45, scope: !5976)
!5976 = !DILexicalBlockFile(scope: !5971, file: !939, discriminator: 1)
!5977 = !DILocation(line: 2522, column: 52, scope: !5976)
!5978 = !DILocation(line: 2522, column: 58, scope: !5976)
!5979 = !DILocation(line: 2522, column: 70, scope: !5976)
!5980 = !DILocation(line: 2522, column: 17, scope: !5976)
!5981 = !DILocation(line: 2523, column: 30, scope: !5971)
!5982 = !DILocation(line: 2523, column: 34, scope: !5971)
!5983 = !DILocation(line: 2523, column: 89, scope: !5971)
!5984 = !DILocation(line: 2523, column: 96, scope: !5971)
!5985 = !DILocation(line: 2523, column: 102, scope: !5971)
!5986 = !DILocation(line: 2523, column: 59, scope: !5971)
!5987 = !DILocation(line: 2523, column: 17, scope: !5971)
!5988 = !DILocation(line: 2526, column: 17, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5800, file: !939, line: 2526, column: 17)
!5990 = !DILocation(line: 2526, column: 24, scope: !5989)
!5991 = !DILocation(line: 2526, column: 30, scope: !5989)
!5992 = !DILocation(line: 2526, column: 17, scope: !5800)
!5993 = !DILocation(line: 2527, column: 30, scope: !5989)
!5994 = !DILocation(line: 2527, column: 34, scope: !5989)
!5995 = !DILocation(line: 2527, column: 17, scope: !5989)
!5996 = !DILocation(line: 2530, column: 19, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5800, file: !939, line: 2530, column: 13)
!5998 = !DILocation(line: 2530, column: 18, scope: !5997)
!5999 = !DILocation(line: 2530, column: 23, scope: !6000)
!6000 = !DILexicalBlockFile(scope: !6001, file: !939, discriminator: 1)
!6001 = distinct !DILexicalBlock(scope: !5997, file: !939, line: 2530, column: 13)
!6002 = !DILocation(line: 2530, column: 27, scope: !6000)
!6003 = !DILocation(line: 2530, column: 34, scope: !6000)
!6004 = !DILocation(line: 2530, column: 44, scope: !6000)
!6005 = !DILocation(line: 2530, column: 59, scope: !6000)
!6006 = !DILocation(line: 2530, column: 25, scope: !6000)
!6007 = !DILocation(line: 2530, column: 13, scope: !6000)
!6008 = !DILocalVariable(name: "buf", scope: !6009, file: !939, line: 2531, type: !6010)
!6009 = distinct !DILexicalBlock(scope: !6001, file: !939, line: 2530, column: 73)
!6010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1052, size: 256, align: 8, elements: !6011)
!6011 = !{!6012}
!6012 = !DISubrange(count: 32)
!6013 = !DILocation(line: 2531, column: 22, scope: !6009)
!6014 = !DILocation(line: 2532, column: 28, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6009, file: !939, line: 2532, column: 21)
!6016 = !DILocation(line: 2532, column: 21, scope: !6015)
!6017 = !DILocation(line: 2532, column: 31, scope: !6015)
!6018 = !DILocation(line: 2532, column: 36, scope: !6015)
!6019 = !DILocation(line: 2532, column: 21, scope: !6009)
!6020 = !DILocation(line: 2533, column: 21, scope: !6015)
!6021 = !DILocation(line: 2534, column: 26, scope: !6009)
!6022 = !DILocation(line: 2535, column: 64, scope: !6009)
!6023 = !DILocation(line: 2535, column: 57, scope: !6009)
!6024 = !DILocation(line: 2535, column: 67, scope: !6009)
!6025 = !DILocation(line: 2535, column: 26, scope: !6009)
!6026 = !DILocation(line: 2535, column: 74, scope: !6009)
!6027 = !DILocation(line: 2534, column: 17, scope: !6009)
!6028 = !DILocation(line: 2536, column: 23, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6009, file: !939, line: 2536, column: 17)
!6030 = !DILocation(line: 2536, column: 22, scope: !6029)
!6031 = !DILocation(line: 2536, column: 27, scope: !6032)
!6032 = !DILexicalBlockFile(scope: !6033, file: !939, discriminator: 1)
!6033 = distinct !DILexicalBlock(scope: !6029, file: !939, line: 2536, column: 17)
!6034 = !DILocation(line: 2536, column: 31, scope: !6032)
!6035 = !DILocation(line: 2536, column: 41, scope: !6032)
!6036 = !DILocation(line: 2536, column: 48, scope: !6032)
!6037 = !DILocation(line: 2536, column: 29, scope: !6032)
!6038 = !DILocation(line: 2536, column: 17, scope: !6032)
!6039 = !DILocation(line: 2537, column: 32, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6033, file: !939, line: 2537, column: 25)
!6041 = !DILocation(line: 2537, column: 25, scope: !6040)
!6042 = !DILocation(line: 2537, column: 35, scope: !6040)
!6043 = !DILocation(line: 2537, column: 49, scope: !6040)
!6044 = !DILocation(line: 2537, column: 42, scope: !6040)
!6045 = !DILocation(line: 2537, column: 52, scope: !6040)
!6046 = !DILocation(line: 2537, column: 39, scope: !6040)
!6047 = !DILocation(line: 2537, column: 56, scope: !6040)
!6048 = !DILocation(line: 2537, column: 66, scope: !6049)
!6049 = !DILexicalBlockFile(scope: !6040, file: !939, discriminator: 1)
!6050 = !DILocation(line: 2537, column: 59, scope: !6049)
!6051 = !DILocation(line: 2537, column: 69, scope: !6049)
!6052 = !DILocation(line: 2537, column: 25, scope: !6049)
!6053 = !DILocation(line: 2538, column: 45, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6040, file: !939, line: 2537, column: 77)
!6055 = !DILocation(line: 2538, column: 38, scope: !6054)
!6056 = !DILocation(line: 2538, column: 48, scope: !6054)
!6057 = !DILocation(line: 2538, column: 56, scope: !6054)
!6058 = !DILocation(line: 2539, column: 52, scope: !6054)
!6059 = !DILocation(line: 2538, column: 25, scope: !6054)
!6060 = !DILocation(line: 2540, column: 25, scope: !6054)
!6061 = !DILocation(line: 2537, column: 69, scope: !6062)
!6062 = !DILexicalBlockFile(scope: !6040, file: !939, discriminator: 2)
!6063 = !DILocation(line: 2536, column: 58, scope: !6064)
!6064 = !DILexicalBlockFile(scope: !6033, file: !939, discriminator: 2)
!6065 = !DILocation(line: 2536, column: 17, scope: !6064)
!6066 = distinct !{!6066, !6067}
!6067 = !DILocation(line: 2536, column: 17, scope: !6009)
!6068 = !DILocation(line: 2542, column: 13, scope: !6009)
!6069 = !DILocation(line: 2530, column: 69, scope: !6070)
!6070 = !DILexicalBlockFile(scope: !6001, file: !939, discriminator: 2)
!6071 = !DILocation(line: 2530, column: 13, scope: !6070)
!6072 = distinct !{!6072, !6073}
!6073 = !DILocation(line: 2530, column: 13, scope: !5800)
!6074 = !DILocation(line: 2544, column: 17, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !5800, file: !939, line: 2544, column: 17)
!6076 = !DILocation(line: 2544, column: 24, scope: !6075)
!6077 = !DILocation(line: 2544, column: 30, scope: !6075)
!6078 = !DILocation(line: 2544, column: 42, scope: !6075)
!6079 = !DILocation(line: 2544, column: 78, scope: !6075)
!6080 = !DILocation(line: 2545, column: 17, scope: !6075)
!6081 = !DILocation(line: 2545, column: 24, scope: !6075)
!6082 = !DILocation(line: 2545, column: 30, scope: !6075)
!6083 = !DILocation(line: 2545, column: 42, scope: !6075)
!6084 = !DILocation(line: 2545, column: 48, scope: !6075)
!6085 = !DILocation(line: 2545, column: 51, scope: !6086)
!6086 = !DILexicalBlockFile(scope: !6075, file: !939, discriminator: 1)
!6087 = !DILocation(line: 2545, column: 58, scope: !6086)
!6088 = !DILocation(line: 2545, column: 64, scope: !6086)
!6089 = !DILocation(line: 2545, column: 76, scope: !6086)
!6090 = !DILocation(line: 2544, column: 17, scope: !6091)
!6091 = !DILexicalBlockFile(scope: !5800, file: !939, discriminator: 1)
!6092 = !DILocalVariable(name: "ret", scope: !6093, file: !939, line: 2546, type: !1039)
!6093 = distinct !DILexicalBlock(scope: !6075, file: !939, line: 2545, column: 83)
!6094 = !DILocation(line: 2546, column: 21, scope: !6093)
!6095 = !DILocation(line: 2546, column: 48, scope: !6093)
!6096 = !DILocation(line: 2546, column: 52, scope: !6093)
!6097 = !DILocation(line: 2546, column: 59, scope: !6093)
!6098 = !DILocation(line: 2546, column: 65, scope: !6093)
!6099 = !DILocation(line: 2546, column: 27, scope: !6093)
!6100 = !DILocation(line: 2547, column: 21, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6093, file: !939, line: 2547, column: 21)
!6102 = !DILocation(line: 2547, column: 25, scope: !6101)
!6103 = !DILocation(line: 2547, column: 21, scope: !6093)
!6104 = !DILocation(line: 2548, column: 28, scope: !6101)
!6105 = !DILocation(line: 2548, column: 21, scope: !6101)
!6106 = !DILocation(line: 2549, column: 13, scope: !6093)
!6107 = !DILocation(line: 2551, column: 41, scope: !5800)
!6108 = !DILocation(line: 2551, column: 45, scope: !5800)
!6109 = !DILocation(line: 2551, column: 19, scope: !5800)
!6110 = !DILocation(line: 2551, column: 17, scope: !5800)
!6111 = !DILocation(line: 2552, column: 17, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !5800, file: !939, line: 2552, column: 17)
!6113 = !DILocation(line: 2552, column: 21, scope: !6112)
!6114 = !DILocation(line: 2552, column: 17, scope: !5800)
!6115 = !DILocation(line: 2553, column: 24, scope: !6112)
!6116 = !DILocation(line: 2553, column: 17, scope: !6112)
!6117 = !DILocation(line: 2554, column: 46, scope: !5800)
!6118 = !DILocation(line: 2554, column: 50, scope: !5800)
!6119 = !DILocation(line: 2554, column: 19, scope: !5800)
!6120 = !DILocation(line: 2554, column: 17, scope: !5800)
!6121 = !DILocation(line: 2555, column: 17, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !5800, file: !939, line: 2555, column: 17)
!6123 = !DILocation(line: 2555, column: 21, scope: !6122)
!6124 = !DILocation(line: 2555, column: 17, scope: !5800)
!6125 = !DILocation(line: 2556, column: 24, scope: !6122)
!6126 = !DILocation(line: 2556, column: 17, scope: !6122)
!6127 = !DILocation(line: 2557, column: 9, scope: !5800)
!6128 = !DILocation(line: 2557, column: 20, scope: !6129)
!6129 = !DILexicalBlockFile(scope: !6130, file: !939, discriminator: 1)
!6130 = distinct !DILexicalBlock(scope: !5795, file: !939, line: 2557, column: 20)
!6131 = !DILocation(line: 2557, column: 27, scope: !6129)
!6132 = !DILocation(line: 2557, column: 32, scope: !6129)
!6133 = !DILocation(line: 2558, column: 13, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6130, file: !939, line: 2557, column: 62)
!6135 = !DILocation(line: 2558, column: 17, scope: !6134)
!6136 = !DILocation(line: 2558, column: 27, scope: !6134)
!6137 = !DILocation(line: 2558, column: 38, scope: !6134)
!6138 = !DILocation(line: 2559, column: 39, scope: !6134)
!6139 = !DILocation(line: 2559, column: 13, scope: !6134)
!6140 = !DILocation(line: 2559, column: 17, scope: !6134)
!6141 = !DILocation(line: 2559, column: 27, scope: !6134)
!6142 = !DILocation(line: 2559, column: 37, scope: !6134)
!6143 = !DILocation(line: 2560, column: 41, scope: !6134)
!6144 = !DILocation(line: 2560, column: 48, scope: !6134)
!6145 = !DILocation(line: 2560, column: 54, scope: !6134)
!6146 = !DILocation(line: 2560, column: 13, scope: !6134)
!6147 = !DILocation(line: 2560, column: 17, scope: !6134)
!6148 = !DILocation(line: 2560, column: 27, scope: !6134)
!6149 = !DILocation(line: 2560, column: 39, scope: !6134)
!6150 = !DILocation(line: 2561, column: 38, scope: !6134)
!6151 = !DILocation(line: 2561, column: 45, scope: !6134)
!6152 = !DILocation(line: 2561, column: 51, scope: !6134)
!6153 = !DILocation(line: 2561, column: 13, scope: !6134)
!6154 = !DILocation(line: 2561, column: 17, scope: !6134)
!6155 = !DILocation(line: 2561, column: 27, scope: !6134)
!6156 = !DILocation(line: 2561, column: 36, scope: !6134)
!6157 = !DILocation(line: 2562, column: 18, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6134, file: !939, line: 2562, column: 17)
!6159 = !DILocation(line: 2562, column: 22, scope: !6158)
!6160 = !DILocation(line: 2562, column: 32, scope: !6158)
!6161 = !DILocation(line: 2562, column: 17, scope: !6134)
!6162 = !DILocation(line: 2563, column: 55, scope: !6158)
!6163 = !DILocation(line: 2563, column: 62, scope: !6158)
!6164 = !DILocation(line: 2563, column: 68, scope: !6158)
!6165 = !DILocation(line: 2563, column: 17, scope: !6158)
!6166 = !DILocation(line: 2563, column: 21, scope: !6158)
!6167 = !DILocation(line: 2563, column: 31, scope: !6158)
!6168 = !DILocation(line: 2563, column: 53, scope: !6158)
!6169 = !DILocation(line: 2564, column: 17, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6134, file: !939, line: 2564, column: 17)
!6171 = !DILocation(line: 2564, column: 21, scope: !6170)
!6172 = !DILocation(line: 2564, column: 31, scope: !6170)
!6173 = !DILocation(line: 2564, column: 40, scope: !6170)
!6174 = !DILocation(line: 2564, column: 59, scope: !6170)
!6175 = !DILocation(line: 2565, column: 17, scope: !6170)
!6176 = !DILocation(line: 2565, column: 21, scope: !6170)
!6177 = !DILocation(line: 2565, column: 31, scope: !6170)
!6178 = !DILocation(line: 2565, column: 40, scope: !6170)
!6179 = !DILocation(line: 2565, column: 59, scope: !6170)
!6180 = !DILocation(line: 2566, column: 17, scope: !6170)
!6181 = !DILocation(line: 2566, column: 21, scope: !6170)
!6182 = !DILocation(line: 2566, column: 31, scope: !6170)
!6183 = !DILocation(line: 2566, column: 40, scope: !6170)
!6184 = !DILocation(line: 2564, column: 17, scope: !6185)
!6185 = !DILexicalBlockFile(scope: !6134, file: !939, discriminator: 1)
!6186 = !DILocation(line: 2567, column: 17, scope: !6170)
!6187 = !DILocation(line: 2567, column: 21, scope: !6170)
!6188 = !DILocation(line: 2567, column: 34, scope: !6170)
!6189 = !DILocation(line: 2568, column: 22, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6170, file: !939, line: 2568, column: 22)
!6191 = !DILocation(line: 2568, column: 26, scope: !6190)
!6192 = !DILocation(line: 2568, column: 36, scope: !6190)
!6193 = !DILocation(line: 2568, column: 45, scope: !6190)
!6194 = !DILocation(line: 2568, column: 22, scope: !6170)
!6195 = !DILocation(line: 2569, column: 17, scope: !6190)
!6196 = !DILocation(line: 2569, column: 21, scope: !6190)
!6197 = !DILocation(line: 2569, column: 34, scope: !6190)
!6198 = !DILocation(line: 2570, column: 17, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6134, file: !939, line: 2570, column: 17)
!6200 = !DILocation(line: 2570, column: 24, scope: !6199)
!6201 = !DILocation(line: 2570, column: 36, scope: !6199)
!6202 = !DILocation(line: 2570, column: 17, scope: !6134)
!6203 = !DILocation(line: 2571, column: 62, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6199, file: !939, line: 2570, column: 41)
!6205 = !DILocation(line: 2571, column: 69, scope: !6204)
!6206 = !DILocation(line: 2572, column: 74, scope: !6204)
!6207 = !DILocation(line: 2573, column: 74, scope: !6204)
!6208 = !DILocation(line: 2573, column: 78, scope: !6204)
!6209 = !DILocation(line: 2573, column: 82, scope: !6204)
!6210 = !DILocation(line: 2573, column: 92, scope: !6204)
!6211 = !DILocation(line: 2573, column: 101, scope: !6204)
!6212 = !DILocation(line: 2573, column: 78, scope: !6213)
!6213 = !DILexicalBlockFile(scope: !6204, file: !939, discriminator: 1)
!6214 = !DILocation(line: 2574, column: 86, scope: !6204)
!6215 = !DILocation(line: 2574, column: 90, scope: !6204)
!6216 = !DILocation(line: 2574, column: 100, scope: !6204)
!6217 = !DILocation(line: 2573, column: 78, scope: !6218)
!6218 = !DILexicalBlockFile(scope: !6204, file: !939, discriminator: 2)
!6219 = !DILocation(line: 2573, column: 78, scope: !6220)
!6220 = !DILexicalBlockFile(scope: !6204, file: !939, discriminator: 3)
!6221 = !DILocation(line: 2573, column: 74, scope: !6220)
!6222 = !DILocation(line: 2571, column: 49, scope: !6213)
!6223 = !DILocation(line: 2571, column: 17, scope: !6213)
!6224 = !DILocation(line: 2571, column: 21, scope: !6213)
!6225 = !DILocation(line: 2571, column: 31, scope: !6213)
!6226 = !DILocation(line: 2571, column: 47, scope: !6213)
!6227 = !DILocation(line: 2575, column: 13, scope: !6204)
!6228 = !DILocation(line: 2576, column: 17, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6134, file: !939, line: 2576, column: 17)
!6230 = !DILocation(line: 2576, column: 24, scope: !6229)
!6231 = !DILocation(line: 2576, column: 37, scope: !6229)
!6232 = !DILocation(line: 2576, column: 17, scope: !6134)
!6233 = !DILocation(line: 2577, column: 59, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6229, file: !939, line: 2576, column: 42)
!6235 = !DILocation(line: 2577, column: 66, scope: !6234)
!6236 = !DILocation(line: 2578, column: 71, scope: !6234)
!6237 = !DILocation(line: 2579, column: 71, scope: !6234)
!6238 = !DILocation(line: 2579, column: 75, scope: !6234)
!6239 = !DILocation(line: 2579, column: 79, scope: !6234)
!6240 = !DILocation(line: 2579, column: 89, scope: !6234)
!6241 = !DILocation(line: 2577, column: 46, scope: !6234)
!6242 = !DILocation(line: 2577, column: 17, scope: !6234)
!6243 = !DILocation(line: 2577, column: 21, scope: !6234)
!6244 = !DILocation(line: 2577, column: 31, scope: !6234)
!6245 = !DILocation(line: 2577, column: 44, scope: !6234)
!6246 = !DILocation(line: 2580, column: 13, scope: !6234)
!6247 = !DILocation(line: 2581, column: 9, scope: !6134)
!6248 = !DILocation(line: 2581, column: 20, scope: !6249)
!6249 = !DILexicalBlockFile(scope: !6250, file: !939, discriminator: 1)
!6250 = distinct !DILexicalBlock(scope: !6130, file: !939, line: 2581, column: 20)
!6251 = !DILocation(line: 2581, column: 29, scope: !6249)
!6252 = !DILocation(line: 2582, column: 13, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6250, file: !939, line: 2581, column: 52)
!6254 = !DILocation(line: 2582, column: 17, scope: !6253)
!6255 = !DILocation(line: 2582, column: 27, scope: !6253)
!6256 = !DILocation(line: 2582, column: 38, scope: !6253)
!6257 = !DILocation(line: 2584, column: 25, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6253, file: !939, line: 2584, column: 17)
!6259 = !DILocation(line: 2584, column: 32, scope: !6258)
!6260 = !DILocation(line: 2584, column: 18, scope: !6258)
!6261 = !DILocation(line: 2584, column: 17, scope: !6253)
!6262 = !DILocation(line: 2585, column: 17, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6258, file: !939, line: 2584, column: 64)
!6264 = !DILocation(line: 2585, column: 21, scope: !6263)
!6265 = !DILocation(line: 2585, column: 33, scope: !6263)
!6266 = !DILocation(line: 2586, column: 13, scope: !6263)
!6267 = !DILocation(line: 2586, column: 32, scope: !6268)
!6268 = !DILexicalBlockFile(scope: !6269, file: !939, discriminator: 1)
!6269 = distinct !DILexicalBlock(scope: !6258, file: !939, line: 2586, column: 24)
!6270 = !DILocation(line: 2586, column: 39, scope: !6268)
!6271 = !DILocation(line: 2586, column: 25, scope: !6268)
!6272 = !DILocation(line: 2586, column: 24, scope: !6268)
!6273 = !DILocation(line: 2587, column: 17, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6269, file: !939, line: 2586, column: 75)
!6275 = !DILocation(line: 2587, column: 21, scope: !6274)
!6276 = !DILocation(line: 2587, column: 33, scope: !6274)
!6277 = !DILocation(line: 2588, column: 13, scope: !6274)
!6278 = !DILocation(line: 2588, column: 32, scope: !6279)
!6279 = !DILexicalBlockFile(scope: !6280, file: !939, discriminator: 1)
!6280 = distinct !DILexicalBlock(scope: !6269, file: !939, line: 2588, column: 24)
!6281 = !DILocation(line: 2588, column: 39, scope: !6279)
!6282 = !DILocation(line: 2588, column: 25, scope: !6279)
!6283 = !DILocation(line: 2588, column: 24, scope: !6279)
!6284 = !DILocation(line: 2589, column: 17, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6280, file: !939, line: 2588, column: 71)
!6286 = !DILocation(line: 2589, column: 21, scope: !6285)
!6287 = !DILocation(line: 2589, column: 33, scope: !6285)
!6288 = !DILocation(line: 2590, column: 13, scope: !6285)
!6289 = !DILocation(line: 2591, column: 9, scope: !6253)
!6290 = !DILocation(line: 2591, column: 20, scope: !6291)
!6291 = !DILexicalBlockFile(scope: !6292, file: !939, discriminator: 1)
!6292 = distinct !DILexicalBlock(scope: !6250, file: !939, line: 2591, column: 20)
!6293 = !DILocation(line: 2591, column: 27, scope: !6291)
!6294 = !DILocation(line: 2591, column: 32, scope: !6291)
!6295 = !DILocation(line: 2592, column: 13, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6292, file: !939, line: 2591, column: 65)
!6297 = !DILocation(line: 2592, column: 17, scope: !6296)
!6298 = !DILocation(line: 2592, column: 27, scope: !6296)
!6299 = !DILocation(line: 2592, column: 38, scope: !6296)
!6300 = !DILocation(line: 2593, column: 17, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6296, file: !939, line: 2593, column: 17)
!6302 = !DILocation(line: 2593, column: 21, scope: !6301)
!6303 = !DILocation(line: 2593, column: 31, scope: !6301)
!6304 = !DILocation(line: 2593, column: 40, scope: !6301)
!6305 = !DILocation(line: 2593, column: 17, scope: !6296)
!6306 = !DILocation(line: 2594, column: 17, scope: !6301)
!6307 = !DILocation(line: 2594, column: 27, scope: !6301)
!6308 = !DILocation(line: 2594, column: 40, scope: !6301)
!6309 = !DILocation(line: 2595, column: 9, scope: !6296)
!6310 = !DILocation(line: 2596, column: 5, scope: !4338)
!6311 = !DILocation(line: 2085, column: 48, scope: !6312)
!6312 = !DILexicalBlockFile(scope: !4339, file: !939, discriminator: 2)
!6313 = !DILocation(line: 2085, column: 5, scope: !6312)
!6314 = distinct !{!6314, !6315}
!6315 = !DILocation(line: 2085, column: 5, scope: !2543)
!6316 = !DILocation(line: 2598, column: 5, scope: !2543)
!6317 = !DILocation(line: 2599, column: 1, scope: !2543)
!6318 = distinct !DISubprogram(name: "matroska_add_index_entries", scope: !939, file: !939, line: 1670, type: !4164, isLocal: true, isDefinition: true, scopeLine: 1671, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!6319 = !DILocalVariable(name: "matroska", arg: 1, scope: !6318, file: !939, line: 1670, type: !2392)
!6320 = !DILocation(line: 1670, column: 62, scope: !6318)
!6321 = !DILocalVariable(name: "index_list", scope: !6318, file: !939, line: 1672, type: !2751)
!6322 = !DILocation(line: 1672, column: 15, scope: !6318)
!6323 = !DILocalVariable(name: "index", scope: !6318, file: !939, line: 1673, type: !6324)
!6324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6325, size: 64, align: 64)
!6325 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaIndex", file: !939, line: 272, baseType: !6326)
!6326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaIndex", file: !939, line: 269, size: 192, align: 64, elements: !6327)
!6327 = !{!6328, !6329}
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !6326, file: !939, line: 270, baseType: !1045, size: 64, align: 64)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !6326, file: !939, line: 271, baseType: !2418, size: 128, align: 64, offset: 64)
!6330 = !DILocation(line: 1673, column: 20, scope: !6318)
!6331 = !DILocalVariable(name: "index_scale", scope: !6318, file: !939, line: 1674, type: !1045)
!6332 = !DILocation(line: 1674, column: 14, scope: !6318)
!6333 = !DILocalVariable(name: "i", scope: !6318, file: !939, line: 1675, type: !1039)
!6334 = !DILocation(line: 1675, column: 9, scope: !6318)
!6335 = !DILocalVariable(name: "j", scope: !6318, file: !939, line: 1675, type: !1039)
!6336 = !DILocation(line: 1675, column: 12, scope: !6318)
!6337 = !DILocation(line: 1677, column: 9, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6318, file: !939, line: 1677, column: 9)
!6339 = !DILocation(line: 1677, column: 19, scope: !6338)
!6340 = !DILocation(line: 1677, column: 24, scope: !6338)
!6341 = !DILocation(line: 1677, column: 30, scope: !6338)
!6342 = !DILocation(line: 1677, column: 9, scope: !6318)
!6343 = !DILocation(line: 1678, column: 9, scope: !6338)
!6344 = !DILocation(line: 1680, column: 19, scope: !6318)
!6345 = !DILocation(line: 1680, column: 29, scope: !6318)
!6346 = !DILocation(line: 1680, column: 16, scope: !6318)
!6347 = !DILocation(line: 1681, column: 13, scope: !6318)
!6348 = !DILocation(line: 1681, column: 25, scope: !6318)
!6349 = !DILocation(line: 1681, column: 11, scope: !6318)
!6350 = !DILocation(line: 1682, column: 9, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6318, file: !939, line: 1682, column: 9)
!6352 = !DILocation(line: 1682, column: 21, scope: !6351)
!6353 = !DILocation(line: 1682, column: 29, scope: !6351)
!6354 = !DILocation(line: 1682, column: 9, scope: !6318)
!6355 = !DILocation(line: 1683, column: 9, scope: !6351)
!6356 = !DILocation(line: 1684, column: 9, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6318, file: !939, line: 1684, column: 9)
!6358 = !DILocation(line: 1684, column: 18, scope: !6357)
!6359 = !DILocation(line: 1684, column: 32, scope: !6357)
!6360 = !DILocation(line: 1684, column: 42, scope: !6357)
!6361 = !DILocation(line: 1684, column: 30, scope: !6357)
!6362 = !DILocation(line: 1684, column: 23, scope: !6357)
!6363 = !DILocation(line: 1684, column: 9, scope: !6318)
!6364 = !DILocation(line: 1685, column: 16, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6357, file: !939, line: 1684, column: 54)
!6366 = !DILocation(line: 1685, column: 26, scope: !6365)
!6367 = !DILocation(line: 1685, column: 9, scope: !6365)
!6368 = !DILocation(line: 1686, column: 9, scope: !6365)
!6369 = !DILocation(line: 1688, column: 12, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6318, file: !939, line: 1688, column: 5)
!6371 = !DILocation(line: 1688, column: 10, scope: !6370)
!6372 = !DILocation(line: 1688, column: 17, scope: !6373)
!6373 = !DILexicalBlockFile(scope: !6374, file: !939, discriminator: 1)
!6374 = distinct !DILexicalBlock(scope: !6370, file: !939, line: 1688, column: 5)
!6375 = !DILocation(line: 1688, column: 21, scope: !6373)
!6376 = !DILocation(line: 1688, column: 33, scope: !6373)
!6377 = !DILocation(line: 1688, column: 19, scope: !6373)
!6378 = !DILocation(line: 1688, column: 5, scope: !6373)
!6379 = !DILocalVariable(name: "pos_list", scope: !6380, file: !939, line: 1689, type: !2751)
!6380 = distinct !DILexicalBlock(scope: !6374, file: !939, line: 1688, column: 47)
!6381 = !DILocation(line: 1689, column: 19, scope: !6380)
!6382 = !DILocation(line: 1689, column: 37, scope: !6380)
!6383 = !DILocation(line: 1689, column: 31, scope: !6380)
!6384 = !DILocation(line: 1689, column: 40, scope: !6380)
!6385 = !DILocalVariable(name: "pos", scope: !6380, file: !939, line: 1690, type: !6386)
!6386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6387, size: 64, align: 64)
!6387 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaIndexPos", file: !939, line: 267, baseType: !6388)
!6388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaIndexPos", file: !939, line: 264, size: 128, align: 64, elements: !6389)
!6389 = !{!6390, !6391}
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !6388, file: !939, line: 265, baseType: !1045, size: 64, align: 64)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !6388, file: !939, line: 266, baseType: !1045, size: 64, align: 64, offset: 64)
!6392 = !DILocation(line: 1690, column: 27, scope: !6380)
!6393 = !DILocation(line: 1690, column: 33, scope: !6380)
!6394 = !DILocation(line: 1690, column: 43, scope: !6380)
!6395 = !DILocation(line: 1691, column: 16, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6380, file: !939, line: 1691, column: 9)
!6397 = !DILocation(line: 1691, column: 14, scope: !6396)
!6398 = !DILocation(line: 1691, column: 21, scope: !6399)
!6399 = !DILexicalBlockFile(scope: !6400, file: !939, discriminator: 1)
!6400 = distinct !DILexicalBlock(scope: !6396, file: !939, line: 1691, column: 9)
!6401 = !DILocation(line: 1691, column: 25, scope: !6399)
!6402 = !DILocation(line: 1691, column: 35, scope: !6399)
!6403 = !DILocation(line: 1691, column: 23, scope: !6399)
!6404 = !DILocation(line: 1691, column: 9, scope: !6399)
!6405 = !DILocalVariable(name: "track", scope: !6406, file: !939, line: 1692, type: !3392)
!6406 = distinct !DILexicalBlock(scope: !6400, file: !939, line: 1691, column: 49)
!6407 = !DILocation(line: 1692, column: 28, scope: !6406)
!6408 = !DILocation(line: 1692, column: 63, scope: !6406)
!6409 = !DILocation(line: 1693, column: 67, scope: !6406)
!6410 = !DILocation(line: 1693, column: 63, scope: !6406)
!6411 = !DILocation(line: 1693, column: 70, scope: !6406)
!6412 = !DILocation(line: 1692, column: 36, scope: !6406)
!6413 = !DILocation(line: 1694, column: 17, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6406, file: !939, line: 1694, column: 17)
!6415 = !DILocation(line: 1694, column: 23, scope: !6414)
!6416 = !DILocation(line: 1694, column: 26, scope: !6417)
!6417 = !DILexicalBlockFile(scope: !6414, file: !939, discriminator: 1)
!6418 = !DILocation(line: 1694, column: 33, scope: !6417)
!6419 = !DILocation(line: 1694, column: 17, scope: !6417)
!6420 = !DILocation(line: 1695, column: 36, scope: !6414)
!6421 = !DILocation(line: 1695, column: 43, scope: !6414)
!6422 = !DILocation(line: 1696, column: 40, scope: !6414)
!6423 = !DILocation(line: 1696, column: 36, scope: !6414)
!6424 = !DILocation(line: 1696, column: 43, scope: !6414)
!6425 = !DILocation(line: 1696, column: 49, scope: !6414)
!6426 = !DILocation(line: 1696, column: 59, scope: !6414)
!6427 = !DILocation(line: 1696, column: 47, scope: !6414)
!6428 = !DILocation(line: 1697, column: 42, scope: !6414)
!6429 = !DILocation(line: 1697, column: 36, scope: !6414)
!6430 = !DILocation(line: 1697, column: 45, scope: !6414)
!6431 = !DILocation(line: 1697, column: 52, scope: !6414)
!6432 = !DILocation(line: 1697, column: 50, scope: !6414)
!6433 = !DILocation(line: 1695, column: 17, scope: !6414)
!6434 = !DILocation(line: 1699, column: 9, scope: !6406)
!6435 = !DILocation(line: 1691, column: 45, scope: !6436)
!6436 = !DILexicalBlockFile(scope: !6400, file: !939, discriminator: 2)
!6437 = !DILocation(line: 1691, column: 9, scope: !6436)
!6438 = distinct !{!6438, !6439}
!6439 = !DILocation(line: 1691, column: 9, scope: !6380)
!6440 = !DILocation(line: 1700, column: 5, scope: !6380)
!6441 = !DILocation(line: 1688, column: 43, scope: !6442)
!6442 = !DILexicalBlockFile(scope: !6374, file: !939, discriminator: 2)
!6443 = !DILocation(line: 1688, column: 5, scope: !6442)
!6444 = distinct !{!6444, !6445}
!6445 = !DILocation(line: 1688, column: 5, scope: !6318)
!6446 = !DILocation(line: 1701, column: 1, scope: !6318)
!6447 = distinct !DISubprogram(name: "matroska_convert_tags", scope: !939, file: !939, line: 1526, type: !6448, isLocal: true, isDefinition: true, scopeLine: 1527, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!6448 = !DISubroutineType(types: !6449)
!6449 = !{null, !2398}
!6450 = !DILocalVariable(name: "s", arg: 1, scope: !6447, file: !939, line: 1526, type: !2398)
!6451 = !DILocation(line: 1526, column: 52, scope: !6447)
!6452 = !DILocalVariable(name: "matroska", scope: !6447, file: !939, line: 1528, type: !2392)
!6453 = !DILocation(line: 1528, column: 27, scope: !6447)
!6454 = !DILocation(line: 1528, column: 38, scope: !6447)
!6455 = !DILocation(line: 1528, column: 41, scope: !6447)
!6456 = !DILocalVariable(name: "tags", scope: !6447, file: !939, line: 1529, type: !6457)
!6457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6458, size: 64, align: 64)
!6458 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTags", file: !939, line: 293, baseType: !6459)
!6459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTags", file: !939, line: 290, size: 448, align: 64, elements: !6460)
!6460 = !{!6461, !6470}
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !6459, file: !939, line: 291, baseType: !6462, size: 320, align: 64)
!6462 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTagTarget", file: !939, line: 288, baseType: !6463)
!6463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTagTarget", file: !939, line: 282, size: 320, align: 64, elements: !6464)
!6464 = !{!6465, !6466, !6467, !6468, !6469}
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6463, file: !939, line: 283, baseType: !1051, size: 64, align: 64)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "typevalue", scope: !6463, file: !939, line: 284, baseType: !1045, size: 64, align: 64, offset: 64)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "trackuid", scope: !6463, file: !939, line: 285, baseType: !1045, size: 64, align: 64, offset: 128)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "chapteruid", scope: !6463, file: !939, line: 286, baseType: !1045, size: 64, align: 64, offset: 192)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "attachuid", scope: !6463, file: !939, line: 287, baseType: !1045, size: 64, align: 64, offset: 256)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !6459, file: !939, line: 292, baseType: !2418, size: 128, align: 64, offset: 320)
!6471 = !DILocation(line: 1529, column: 19, scope: !6447)
!6472 = !DILocation(line: 1529, column: 26, scope: !6447)
!6473 = !DILocation(line: 1529, column: 36, scope: !6447)
!6474 = !DILocation(line: 1529, column: 41, scope: !6447)
!6475 = !DILocalVariable(name: "i", scope: !6447, file: !939, line: 1530, type: !1039)
!6476 = !DILocation(line: 1530, column: 9, scope: !6447)
!6477 = !DILocalVariable(name: "j", scope: !6447, file: !939, line: 1530, type: !1039)
!6478 = !DILocation(line: 1530, column: 12, scope: !6447)
!6479 = !DILocation(line: 1532, column: 12, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6447, file: !939, line: 1532, column: 5)
!6481 = !DILocation(line: 1532, column: 10, scope: !6480)
!6482 = !DILocation(line: 1532, column: 17, scope: !6483)
!6483 = !DILexicalBlockFile(scope: !6484, file: !939, discriminator: 1)
!6484 = distinct !DILexicalBlock(scope: !6480, file: !939, line: 1532, column: 5)
!6485 = !DILocation(line: 1532, column: 21, scope: !6483)
!6486 = !DILocation(line: 1532, column: 31, scope: !6483)
!6487 = !DILocation(line: 1532, column: 36, scope: !6483)
!6488 = !DILocation(line: 1532, column: 19, scope: !6483)
!6489 = !DILocation(line: 1532, column: 5, scope: !6483)
!6490 = !DILocation(line: 1533, column: 18, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6492, file: !939, line: 1533, column: 13)
!6492 = distinct !DILexicalBlock(scope: !6484, file: !939, line: 1532, column: 50)
!6493 = !DILocation(line: 1533, column: 13, scope: !6491)
!6494 = !DILocation(line: 1533, column: 21, scope: !6491)
!6495 = !DILocation(line: 1533, column: 28, scope: !6491)
!6496 = !DILocation(line: 1533, column: 13, scope: !6492)
!6497 = !DILocalVariable(name: "attachment", scope: !6498, file: !939, line: 1534, type: !2760)
!6498 = distinct !DILexicalBlock(scope: !6491, file: !939, line: 1533, column: 39)
!6499 = !DILocation(line: 1534, column: 33, scope: !6498)
!6500 = !DILocation(line: 1534, column: 46, scope: !6498)
!6501 = !DILocation(line: 1534, column: 56, scope: !6498)
!6502 = !DILocation(line: 1534, column: 68, scope: !6498)
!6503 = !DILocalVariable(name: "found", scope: !6498, file: !939, line: 1535, type: !1039)
!6504 = !DILocation(line: 1535, column: 17, scope: !6498)
!6505 = !DILocation(line: 1536, column: 20, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6498, file: !939, line: 1536, column: 13)
!6507 = !DILocation(line: 1536, column: 18, scope: !6506)
!6508 = !DILocation(line: 1536, column: 25, scope: !6509)
!6509 = !DILexicalBlockFile(scope: !6510, file: !939, discriminator: 1)
!6510 = distinct !DILexicalBlock(scope: !6506, file: !939, line: 1536, column: 13)
!6511 = !DILocation(line: 1536, column: 29, scope: !6509)
!6512 = !DILocation(line: 1536, column: 39, scope: !6509)
!6513 = !DILocation(line: 1536, column: 51, scope: !6509)
!6514 = !DILocation(line: 1536, column: 27, scope: !6509)
!6515 = !DILocation(line: 1536, column: 13, scope: !6509)
!6516 = !DILocation(line: 1537, column: 32, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6518, file: !939, line: 1537, column: 21)
!6518 = distinct !DILexicalBlock(scope: !6510, file: !939, line: 1536, column: 65)
!6519 = !DILocation(line: 1537, column: 21, scope: !6517)
!6520 = !DILocation(line: 1537, column: 35, scope: !6517)
!6521 = !DILocation(line: 1537, column: 47, scope: !6517)
!6522 = !DILocation(line: 1537, column: 42, scope: !6517)
!6523 = !DILocation(line: 1537, column: 50, scope: !6517)
!6524 = !DILocation(line: 1537, column: 57, scope: !6517)
!6525 = !DILocation(line: 1537, column: 39, scope: !6517)
!6526 = !DILocation(line: 1537, column: 67, scope: !6517)
!6527 = !DILocation(line: 1538, column: 32, scope: !6517)
!6528 = !DILocation(line: 1538, column: 21, scope: !6517)
!6529 = !DILocation(line: 1538, column: 35, scope: !6517)
!6530 = !DILocation(line: 1537, column: 21, scope: !6531)
!6531 = !DILexicalBlockFile(scope: !6518, file: !939, discriminator: 1)
!6532 = !DILocation(line: 1539, column: 42, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6517, file: !939, line: 1538, column: 43)
!6534 = !DILocation(line: 1539, column: 51, scope: !6533)
!6535 = !DILocation(line: 1539, column: 46, scope: !6533)
!6536 = !DILocation(line: 1539, column: 54, scope: !6533)
!6537 = !DILocation(line: 1540, column: 54, scope: !6533)
!6538 = !DILocation(line: 1540, column: 43, scope: !6533)
!6539 = !DILocation(line: 1540, column: 57, scope: !6533)
!6540 = !DILocation(line: 1540, column: 65, scope: !6533)
!6541 = !DILocation(line: 1539, column: 21, scope: !6533)
!6542 = !DILocation(line: 1541, column: 27, scope: !6533)
!6543 = !DILocation(line: 1542, column: 17, scope: !6533)
!6544 = !DILocation(line: 1543, column: 13, scope: !6518)
!6545 = !DILocation(line: 1536, column: 61, scope: !6546)
!6546 = !DILexicalBlockFile(scope: !6510, file: !939, discriminator: 2)
!6547 = !DILocation(line: 1536, column: 13, scope: !6546)
!6548 = distinct !{!6548, !6549}
!6549 = !DILocation(line: 1536, column: 13, scope: !6498)
!6550 = !DILocation(line: 1544, column: 18, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6498, file: !939, line: 1544, column: 17)
!6552 = !DILocation(line: 1544, column: 17, scope: !6498)
!6553 = !DILocation(line: 1548, column: 24, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6551, file: !939, line: 1544, column: 25)
!6555 = !DILocation(line: 1548, column: 32, scope: !6554)
!6556 = !DILocation(line: 1548, column: 27, scope: !6554)
!6557 = !DILocation(line: 1548, column: 35, scope: !6554)
!6558 = !DILocation(line: 1548, column: 42, scope: !6554)
!6559 = !DILocation(line: 1545, column: 17, scope: !6554)
!6560 = !DILocation(line: 1549, column: 13, scope: !6554)
!6561 = !DILocation(line: 1550, column: 9, scope: !6498)
!6562 = !DILocation(line: 1550, column: 25, scope: !6563)
!6563 = !DILexicalBlockFile(scope: !6564, file: !939, discriminator: 1)
!6564 = distinct !DILexicalBlock(scope: !6491, file: !939, line: 1550, column: 20)
!6565 = !DILocation(line: 1550, column: 20, scope: !6563)
!6566 = !DILocation(line: 1550, column: 28, scope: !6563)
!6567 = !DILocation(line: 1550, column: 35, scope: !6563)
!6568 = !DILocalVariable(name: "chapter", scope: !6569, file: !939, line: 1551, type: !2771)
!6569 = distinct !DILexicalBlock(scope: !6564, file: !939, line: 1550, column: 47)
!6570 = !DILocation(line: 1551, column: 30, scope: !6569)
!6571 = !DILocation(line: 1551, column: 40, scope: !6569)
!6572 = !DILocation(line: 1551, column: 50, scope: !6569)
!6573 = !DILocation(line: 1551, column: 59, scope: !6569)
!6574 = !DILocalVariable(name: "found", scope: !6569, file: !939, line: 1552, type: !1039)
!6575 = !DILocation(line: 1552, column: 17, scope: !6569)
!6576 = !DILocation(line: 1553, column: 20, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6569, file: !939, line: 1553, column: 13)
!6578 = !DILocation(line: 1553, column: 18, scope: !6577)
!6579 = !DILocation(line: 1553, column: 25, scope: !6580)
!6580 = !DILexicalBlockFile(scope: !6581, file: !939, discriminator: 1)
!6581 = distinct !DILexicalBlock(scope: !6577, file: !939, line: 1553, column: 13)
!6582 = !DILocation(line: 1553, column: 29, scope: !6580)
!6583 = !DILocation(line: 1553, column: 39, scope: !6580)
!6584 = !DILocation(line: 1553, column: 48, scope: !6580)
!6585 = !DILocation(line: 1553, column: 27, scope: !6580)
!6586 = !DILocation(line: 1553, column: 13, scope: !6580)
!6587 = !DILocation(line: 1554, column: 29, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !939, line: 1554, column: 21)
!6589 = distinct !DILexicalBlock(scope: !6581, file: !939, line: 1553, column: 62)
!6590 = !DILocation(line: 1554, column: 21, scope: !6588)
!6591 = !DILocation(line: 1554, column: 32, scope: !6588)
!6592 = !DILocation(line: 1554, column: 44, scope: !6588)
!6593 = !DILocation(line: 1554, column: 39, scope: !6588)
!6594 = !DILocation(line: 1554, column: 47, scope: !6588)
!6595 = !DILocation(line: 1554, column: 54, scope: !6588)
!6596 = !DILocation(line: 1554, column: 36, scope: !6588)
!6597 = !DILocation(line: 1554, column: 65, scope: !6588)
!6598 = !DILocation(line: 1555, column: 29, scope: !6588)
!6599 = !DILocation(line: 1555, column: 21, scope: !6588)
!6600 = !DILocation(line: 1555, column: 32, scope: !6588)
!6601 = !DILocation(line: 1554, column: 21, scope: !6602)
!6602 = !DILexicalBlockFile(scope: !6589, file: !939, discriminator: 1)
!6603 = !DILocation(line: 1556, column: 42, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6588, file: !939, line: 1555, column: 41)
!6605 = !DILocation(line: 1556, column: 51, scope: !6604)
!6606 = !DILocation(line: 1556, column: 46, scope: !6604)
!6607 = !DILocation(line: 1556, column: 54, scope: !6604)
!6608 = !DILocation(line: 1557, column: 51, scope: !6604)
!6609 = !DILocation(line: 1557, column: 43, scope: !6604)
!6610 = !DILocation(line: 1557, column: 54, scope: !6604)
!6611 = !DILocation(line: 1557, column: 63, scope: !6604)
!6612 = !DILocation(line: 1556, column: 21, scope: !6604)
!6613 = !DILocation(line: 1558, column: 27, scope: !6604)
!6614 = !DILocation(line: 1559, column: 17, scope: !6604)
!6615 = !DILocation(line: 1560, column: 13, scope: !6589)
!6616 = !DILocation(line: 1553, column: 58, scope: !6617)
!6617 = !DILexicalBlockFile(scope: !6581, file: !939, discriminator: 2)
!6618 = !DILocation(line: 1553, column: 13, scope: !6617)
!6619 = distinct !{!6619, !6620}
!6620 = !DILocation(line: 1553, column: 13, scope: !6569)
!6621 = !DILocation(line: 1561, column: 18, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6569, file: !939, line: 1561, column: 17)
!6623 = !DILocation(line: 1561, column: 17, scope: !6569)
!6624 = !DILocation(line: 1565, column: 24, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6622, file: !939, line: 1561, column: 25)
!6626 = !DILocation(line: 1565, column: 32, scope: !6625)
!6627 = !DILocation(line: 1565, column: 27, scope: !6625)
!6628 = !DILocation(line: 1565, column: 35, scope: !6625)
!6629 = !DILocation(line: 1565, column: 42, scope: !6625)
!6630 = !DILocation(line: 1562, column: 17, scope: !6625)
!6631 = !DILocation(line: 1566, column: 13, scope: !6625)
!6632 = !DILocation(line: 1567, column: 9, scope: !6569)
!6633 = !DILocation(line: 1567, column: 25, scope: !6634)
!6634 = !DILexicalBlockFile(scope: !6635, file: !939, discriminator: 1)
!6635 = distinct !DILexicalBlock(scope: !6564, file: !939, line: 1567, column: 20)
!6636 = !DILocation(line: 1567, column: 20, scope: !6634)
!6637 = !DILocation(line: 1567, column: 28, scope: !6634)
!6638 = !DILocation(line: 1567, column: 35, scope: !6634)
!6639 = !DILocalVariable(name: "track", scope: !6640, file: !939, line: 1568, type: !3392)
!6640 = distinct !DILexicalBlock(scope: !6635, file: !939, line: 1567, column: 45)
!6641 = !DILocation(line: 1568, column: 28, scope: !6640)
!6642 = !DILocation(line: 1568, column: 36, scope: !6640)
!6643 = !DILocation(line: 1568, column: 46, scope: !6640)
!6644 = !DILocation(line: 1568, column: 53, scope: !6640)
!6645 = !DILocalVariable(name: "found", scope: !6640, file: !939, line: 1569, type: !1039)
!6646 = !DILocation(line: 1569, column: 17, scope: !6640)
!6647 = !DILocation(line: 1570, column: 20, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6640, file: !939, line: 1570, column: 13)
!6649 = !DILocation(line: 1570, column: 18, scope: !6648)
!6650 = !DILocation(line: 1570, column: 25, scope: !6651)
!6651 = !DILexicalBlockFile(scope: !6652, file: !939, discriminator: 1)
!6652 = distinct !DILexicalBlock(scope: !6648, file: !939, line: 1570, column: 13)
!6653 = !DILocation(line: 1570, column: 29, scope: !6651)
!6654 = !DILocation(line: 1570, column: 39, scope: !6651)
!6655 = !DILocation(line: 1570, column: 46, scope: !6651)
!6656 = !DILocation(line: 1570, column: 27, scope: !6651)
!6657 = !DILocation(line: 1570, column: 13, scope: !6651)
!6658 = !DILocation(line: 1571, column: 27, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6660, file: !939, line: 1571, column: 21)
!6660 = distinct !DILexicalBlock(scope: !6652, file: !939, line: 1570, column: 60)
!6661 = !DILocation(line: 1571, column: 21, scope: !6659)
!6662 = !DILocation(line: 1571, column: 30, scope: !6659)
!6663 = !DILocation(line: 1571, column: 42, scope: !6659)
!6664 = !DILocation(line: 1571, column: 37, scope: !6659)
!6665 = !DILocation(line: 1571, column: 45, scope: !6659)
!6666 = !DILocation(line: 1571, column: 52, scope: !6659)
!6667 = !DILocation(line: 1571, column: 34, scope: !6659)
!6668 = !DILocation(line: 1571, column: 61, scope: !6659)
!6669 = !DILocation(line: 1572, column: 27, scope: !6659)
!6670 = !DILocation(line: 1572, column: 21, scope: !6659)
!6671 = !DILocation(line: 1572, column: 30, scope: !6659)
!6672 = !DILocation(line: 1571, column: 21, scope: !6673)
!6673 = !DILexicalBlockFile(scope: !6660, file: !939, discriminator: 1)
!6674 = !DILocation(line: 1573, column: 42, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6659, file: !939, line: 1572, column: 38)
!6676 = !DILocation(line: 1573, column: 51, scope: !6675)
!6677 = !DILocation(line: 1573, column: 46, scope: !6675)
!6678 = !DILocation(line: 1573, column: 54, scope: !6675)
!6679 = !DILocation(line: 1574, column: 49, scope: !6675)
!6680 = !DILocation(line: 1574, column: 43, scope: !6675)
!6681 = !DILocation(line: 1574, column: 52, scope: !6675)
!6682 = !DILocation(line: 1574, column: 60, scope: !6675)
!6683 = !DILocation(line: 1573, column: 21, scope: !6675)
!6684 = !DILocation(line: 1575, column: 27, scope: !6675)
!6685 = !DILocation(line: 1576, column: 16, scope: !6675)
!6686 = !DILocation(line: 1577, column: 13, scope: !6660)
!6687 = !DILocation(line: 1570, column: 56, scope: !6688)
!6688 = !DILexicalBlockFile(scope: !6652, file: !939, discriminator: 2)
!6689 = !DILocation(line: 1570, column: 13, scope: !6688)
!6690 = distinct !{!6690, !6691}
!6691 = !DILocation(line: 1570, column: 13, scope: !6640)
!6692 = !DILocation(line: 1578, column: 18, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6640, file: !939, line: 1578, column: 17)
!6694 = !DILocation(line: 1578, column: 17, scope: !6640)
!6695 = !DILocation(line: 1582, column: 24, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6693, file: !939, line: 1578, column: 25)
!6697 = !DILocation(line: 1582, column: 32, scope: !6696)
!6698 = !DILocation(line: 1582, column: 27, scope: !6696)
!6699 = !DILocation(line: 1582, column: 35, scope: !6696)
!6700 = !DILocation(line: 1582, column: 42, scope: !6696)
!6701 = !DILocation(line: 1579, column: 17, scope: !6696)
!6702 = !DILocation(line: 1583, column: 13, scope: !6696)
!6703 = !DILocation(line: 1584, column: 9, scope: !6640)
!6704 = !DILocation(line: 1585, column: 34, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6635, file: !939, line: 1584, column: 16)
!6706 = !DILocation(line: 1585, column: 43, scope: !6705)
!6707 = !DILocation(line: 1585, column: 38, scope: !6705)
!6708 = !DILocation(line: 1585, column: 46, scope: !6705)
!6709 = !DILocation(line: 1585, column: 52, scope: !6705)
!6710 = !DILocation(line: 1585, column: 55, scope: !6705)
!6711 = !DILocation(line: 1586, column: 39, scope: !6705)
!6712 = !DILocation(line: 1586, column: 34, scope: !6705)
!6713 = !DILocation(line: 1586, column: 42, scope: !6705)
!6714 = !DILocation(line: 1586, column: 49, scope: !6705)
!6715 = !DILocation(line: 1585, column: 13, scope: !6705)
!6716 = !DILocation(line: 1588, column: 5, scope: !6492)
!6717 = !DILocation(line: 1532, column: 46, scope: !6718)
!6718 = !DILexicalBlockFile(scope: !6484, file: !939, discriminator: 2)
!6719 = !DILocation(line: 1532, column: 5, scope: !6718)
!6720 = distinct !{!6720, !6721}
!6721 = !DILocation(line: 1532, column: 5, scope: !6447)
!6722 = !DILocation(line: 1589, column: 1, scope: !6447)
!6723 = distinct !DISubprogram(name: "ebml_read_num", scope: !939, file: !939, line: 821, type: !6724, isLocal: true, isDefinition: true, scopeLine: 823, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!6724 = !DISubroutineType(types: !6725)
!6725 = !{!1039, !2392, !1412, !1039, !1055}
!6726 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !6727)
!6727 = distinct !DILocation(line: 845, column: 23, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !939, line: 844, column: 26)
!6729 = distinct !DILexicalBlock(scope: !6723, file: !939, line: 844, column: 9)
!6730 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !6731)
!6731 = distinct !DILocation(line: 833, column: 27, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6733, file: !939, line: 832, column: 29)
!6733 = distinct !DILexicalBlock(scope: !6734, file: !939, line: 832, column: 13)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !939, line: 830, column: 33)
!6735 = distinct !DILexicalBlock(scope: !6723, file: !939, line: 830, column: 9)
!6736 = !DILocalVariable(name: "matroska", arg: 1, scope: !6723, file: !939, line: 821, type: !2392)
!6737 = !DILocation(line: 821, column: 48, scope: !6723)
!6738 = !DILocalVariable(name: "pb", arg: 2, scope: !6723, file: !939, line: 821, type: !1412)
!6739 = !DILocation(line: 821, column: 71, scope: !6723)
!6740 = !DILocalVariable(name: "max_size", arg: 3, scope: !6723, file: !939, line: 822, type: !1039)
!6741 = !DILocation(line: 822, column: 30, scope: !6723)
!6742 = !DILocalVariable(name: "number", arg: 4, scope: !6723, file: !939, line: 822, type: !1055)
!6743 = !DILocation(line: 822, column: 50, scope: !6723)
!6744 = !DILocalVariable(name: "read", scope: !6723, file: !939, line: 824, type: !1039)
!6745 = !DILocation(line: 824, column: 9, scope: !6723)
!6746 = !DILocalVariable(name: "n", scope: !6723, file: !939, line: 824, type: !1039)
!6747 = !DILocation(line: 824, column: 19, scope: !6723)
!6748 = !DILocalVariable(name: "total", scope: !6723, file: !939, line: 825, type: !1045)
!6749 = !DILocation(line: 825, column: 14, scope: !6723)
!6750 = !DILocation(line: 830, column: 27, scope: !6735)
!6751 = !DILocation(line: 830, column: 19, scope: !6735)
!6752 = !DILocation(line: 830, column: 17, scope: !6735)
!6753 = !DILocation(line: 830, column: 9, scope: !6723)
!6754 = !DILocation(line: 832, column: 24, scope: !6733)
!6755 = !DILocation(line: 832, column: 14, scope: !6733)
!6756 = !DILocation(line: 832, column: 13, scope: !6734)
!6757 = !DILocalVariable(name: "pos", scope: !6732, file: !939, line: 833, type: !1047)
!6758 = !DILocation(line: 833, column: 21, scope: !6732)
!6759 = !DILocation(line: 833, column: 37, scope: !6732)
!6760 = !DILocation(line: 833, column: 27, scope: !6732)
!6761 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !6731)
!6762 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !6731)
!6763 = !DILocation(line: 834, column: 20, scope: !6732)
!6764 = !DILocation(line: 834, column: 30, scope: !6732)
!6765 = !DILocation(line: 836, column: 20, scope: !6732)
!6766 = !DILocation(line: 836, column: 25, scope: !6732)
!6767 = !DILocation(line: 834, column: 13, scope: !6732)
!6768 = !DILocation(line: 837, column: 20, scope: !6732)
!6769 = !DILocation(line: 837, column: 24, scope: !6732)
!6770 = !DILocation(line: 837, column: 32, scope: !6771)
!6771 = !DILexicalBlockFile(scope: !6732, file: !939, discriminator: 1)
!6772 = !DILocation(line: 837, column: 36, scope: !6771)
!6773 = !DILocation(line: 837, column: 20, scope: !6771)
!6774 = !DILocation(line: 837, column: 20, scope: !6775)
!6775 = !DILexicalBlockFile(scope: !6732, file: !939, discriminator: 2)
!6776 = !DILocation(line: 837, column: 20, scope: !6777)
!6777 = !DILexicalBlockFile(scope: !6732, file: !939, discriminator: 3)
!6778 = !DILocation(line: 837, column: 13, scope: !6777)
!6779 = !DILocation(line: 839, column: 9, scope: !6734)
!6780 = !DILocation(line: 843, column: 28, scope: !6723)
!6781 = !DILocation(line: 843, column: 16, scope: !6723)
!6782 = !DILocation(line: 843, column: 14, scope: !6723)
!6783 = !DILocation(line: 843, column: 10, scope: !6723)
!6784 = !DILocation(line: 844, column: 9, scope: !6729)
!6785 = !DILocation(line: 844, column: 16, scope: !6729)
!6786 = !DILocation(line: 844, column: 14, scope: !6729)
!6787 = !DILocation(line: 844, column: 9, scope: !6723)
!6788 = !DILocalVariable(name: "pos", scope: !6728, file: !939, line: 845, type: !1047)
!6789 = !DILocation(line: 845, column: 17, scope: !6728)
!6790 = !DILocation(line: 845, column: 33, scope: !6728)
!6791 = !DILocation(line: 845, column: 23, scope: !6728)
!6792 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !6727)
!6793 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !6727)
!6794 = !DILocation(line: 845, column: 37, scope: !6728)
!6795 = !DILocation(line: 846, column: 16, scope: !6728)
!6796 = !DILocation(line: 846, column: 26, scope: !6728)
!6797 = !DILocation(line: 848, column: 26, scope: !6728)
!6798 = !DILocation(line: 848, column: 16, scope: !6728)
!6799 = !DILocation(line: 848, column: 33, scope: !6728)
!6800 = !DILocation(line: 848, column: 38, scope: !6728)
!6801 = !DILocation(line: 846, column: 9, scope: !6728)
!6802 = !DILocation(line: 849, column: 9, scope: !6728)
!6803 = !DILocation(line: 853, column: 31, scope: !6723)
!6804 = !DILocation(line: 853, column: 19, scope: !6723)
!6805 = !DILocation(line: 853, column: 16, scope: !6723)
!6806 = !DILocation(line: 853, column: 14, scope: !6723)
!6807 = !DILocation(line: 853, column: 11, scope: !6723)
!6808 = !DILocation(line: 854, column: 5, scope: !6723)
!6809 = !DILocation(line: 854, column: 13, scope: !6810)
!6810 = !DILexicalBlockFile(scope: !6723, file: !939, discriminator: 1)
!6811 = !DILocation(line: 854, column: 18, scope: !6810)
!6812 = !DILocation(line: 854, column: 16, scope: !6810)
!6813 = !DILocation(line: 854, column: 5, scope: !6810)
!6814 = !DILocation(line: 855, column: 18, scope: !6723)
!6815 = !DILocation(line: 855, column: 24, scope: !6723)
!6816 = !DILocation(line: 855, column: 40, scope: !6723)
!6817 = !DILocation(line: 855, column: 32, scope: !6723)
!6818 = !DILocation(line: 855, column: 30, scope: !6723)
!6819 = !DILocation(line: 855, column: 15, scope: !6723)
!6820 = !DILocation(line: 854, column: 5, scope: !6821)
!6821 = !DILexicalBlockFile(scope: !6723, file: !939, discriminator: 2)
!6822 = distinct !{!6822, !6808}
!6823 = !DILocation(line: 857, column: 15, scope: !6723)
!6824 = !DILocation(line: 857, column: 6, scope: !6723)
!6825 = !DILocation(line: 857, column: 13, scope: !6723)
!6826 = !DILocation(line: 859, column: 12, scope: !6723)
!6827 = !DILocation(line: 859, column: 5, scope: !6723)
!6828 = !DILocation(line: 860, column: 1, scope: !6723)
!6829 = distinct !DISubprogram(name: "ebml_parse_id", scope: !939, file: !939, line: 1043, type: !6830, isLocal: true, isDefinition: true, scopeLine: 1045, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!6830 = !DISubroutineType(types: !6831)
!6831 = !{!1039, !2392, !2459, !1036, !1078}
!6832 = !DILocalVariable(name: "matroska", arg: 1, scope: !6829, file: !939, line: 1043, type: !2392)
!6833 = !DILocation(line: 1043, column: 48, scope: !6829)
!6834 = !DILocalVariable(name: "syntax", arg: 2, scope: !6829, file: !939, line: 1043, type: !2459)
!6835 = !DILocation(line: 1043, column: 70, scope: !6829)
!6836 = !DILocalVariable(name: "id", arg: 3, scope: !6829, file: !939, line: 1044, type: !1036)
!6837 = !DILocation(line: 1044, column: 35, scope: !6829)
!6838 = !DILocalVariable(name: "data", arg: 4, scope: !6829, file: !939, line: 1044, type: !1078)
!6839 = !DILocation(line: 1044, column: 45, scope: !6829)
!6840 = !DILocalVariable(name: "i", scope: !6829, file: !939, line: 1046, type: !1039)
!6841 = !DILocation(line: 1046, column: 9, scope: !6829)
!6842 = !DILocation(line: 1047, column: 12, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6829, file: !939, line: 1047, column: 5)
!6844 = !DILocation(line: 1047, column: 10, scope: !6843)
!6845 = !DILocation(line: 1047, column: 24, scope: !6846)
!6846 = !DILexicalBlockFile(scope: !6847, file: !939, discriminator: 1)
!6847 = distinct !DILexicalBlock(scope: !6843, file: !939, line: 1047, column: 5)
!6848 = !DILocation(line: 1047, column: 17, scope: !6846)
!6849 = !DILocation(line: 1047, column: 27, scope: !6846)
!6850 = !DILocation(line: 1047, column: 5, scope: !6846)
!6851 = !DILocation(line: 1048, column: 13, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6847, file: !939, line: 1048, column: 13)
!6853 = !DILocation(line: 1048, column: 26, scope: !6852)
!6854 = !DILocation(line: 1048, column: 19, scope: !6852)
!6855 = !DILocation(line: 1048, column: 29, scope: !6852)
!6856 = !DILocation(line: 1048, column: 16, scope: !6852)
!6857 = !DILocation(line: 1048, column: 13, scope: !6847)
!6858 = !DILocation(line: 1049, column: 13, scope: !6852)
!6859 = !DILocation(line: 1048, column: 29, scope: !6860)
!6860 = !DILexicalBlockFile(scope: !6852, file: !939, discriminator: 1)
!6861 = !DILocation(line: 1047, column: 32, scope: !6862)
!6862 = !DILexicalBlockFile(scope: !6847, file: !939, discriminator: 2)
!6863 = !DILocation(line: 1047, column: 5, scope: !6862)
!6864 = distinct !{!6864, !6865}
!6865 = !DILocation(line: 1047, column: 5, scope: !6829)
!6866 = !DILocation(line: 1050, column: 17, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6829, file: !939, line: 1050, column: 9)
!6868 = !DILocation(line: 1050, column: 10, scope: !6867)
!6869 = !DILocation(line: 1050, column: 20, scope: !6867)
!6870 = !DILocation(line: 1050, column: 23, scope: !6867)
!6871 = !DILocation(line: 1050, column: 26, scope: !6872)
!6872 = !DILexicalBlockFile(scope: !6867, file: !939, discriminator: 1)
!6873 = !DILocation(line: 1050, column: 29, scope: !6872)
!6874 = !DILocation(line: 1050, column: 43, scope: !6872)
!6875 = !DILocation(line: 1051, column: 9, scope: !6867)
!6876 = !DILocation(line: 1051, column: 19, scope: !6867)
!6877 = !DILocation(line: 1051, column: 30, scope: !6867)
!6878 = !DILocation(line: 1051, column: 34, scope: !6867)
!6879 = !DILocation(line: 1052, column: 26, scope: !6867)
!6880 = !DILocation(line: 1052, column: 36, scope: !6867)
!6881 = !DILocation(line: 1052, column: 47, scope: !6867)
!6882 = !DILocation(line: 1052, column: 9, scope: !6867)
!6883 = !DILocation(line: 1052, column: 19, scope: !6867)
!6884 = !DILocation(line: 1052, column: 52, scope: !6867)
!6885 = !DILocation(line: 1052, column: 59, scope: !6867)
!6886 = !DILocation(line: 1050, column: 9, scope: !6887)
!6887 = !DILexicalBlockFile(scope: !6829, file: !939, discriminator: 2)
!6888 = !DILocation(line: 1053, column: 9, scope: !6867)
!6889 = !DILocation(line: 1054, column: 17, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6829, file: !939, line: 1054, column: 9)
!6891 = !DILocation(line: 1054, column: 10, scope: !6890)
!6892 = !DILocation(line: 1054, column: 20, scope: !6890)
!6893 = !DILocation(line: 1054, column: 23, scope: !6890)
!6894 = !DILocation(line: 1054, column: 26, scope: !6895)
!6895 = !DILexicalBlockFile(scope: !6890, file: !939, discriminator: 1)
!6896 = !DILocation(line: 1054, column: 29, scope: !6895)
!6897 = !DILocation(line: 1054, column: 37, scope: !6895)
!6898 = !DILocation(line: 1054, column: 40, scope: !6899)
!6899 = !DILexicalBlockFile(scope: !6890, file: !939, discriminator: 2)
!6900 = !DILocation(line: 1054, column: 43, scope: !6899)
!6901 = !DILocation(line: 1054, column: 9, scope: !6899)
!6902 = !DILocation(line: 1055, column: 16, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6890, file: !939, line: 1054, column: 52)
!6904 = !DILocation(line: 1055, column: 26, scope: !6903)
!6905 = !DILocation(line: 1055, column: 75, scope: !6903)
!6906 = !DILocation(line: 1055, column: 9, scope: !6903)
!6907 = !DILocation(line: 1056, column: 5, scope: !6903)
!6908 = !DILocation(line: 1057, column: 28, scope: !6829)
!6909 = !DILocation(line: 1057, column: 46, scope: !6829)
!6910 = !DILocation(line: 1057, column: 39, scope: !6829)
!6911 = !DILocation(line: 1057, column: 50, scope: !6829)
!6912 = !DILocation(line: 1057, column: 12, scope: !6829)
!6913 = !DILocation(line: 1057, column: 5, scope: !6829)
!6914 = !DILocation(line: 1058, column: 1, scope: !6829)
!6915 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !6916)
!6916 = distinct !DILocation(line: 1236, column: 39, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6918, file: !939, line: 1235, column: 13)
!6918 = distinct !DILexicalBlock(scope: !2389, file: !939, line: 1214, column: 27)
!6919 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !6920)
!6920 = distinct !DILocation(line: 1203, column: 27, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6922, file: !939, line: 1200, column: 39)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !939, line: 1200, column: 13)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !939, line: 1190, column: 65)
!6924 = distinct !DILexicalBlock(scope: !2389, file: !939, line: 1190, column: 9)
!6925 = !DILocalVariable(name: "matroska", arg: 1, scope: !2389, file: !939, line: 1158, type: !2392)
!6926 = !DILocation(line: 1158, column: 50, scope: !2389)
!6927 = !DILocalVariable(name: "syntax", arg: 2, scope: !2389, file: !939, line: 1159, type: !2459)
!6928 = !DILocation(line: 1159, column: 40, scope: !2389)
!6929 = !DILocalVariable(name: "data", arg: 3, scope: !2389, file: !939, line: 1159, type: !1078)
!6930 = !DILocation(line: 1159, column: 54, scope: !2389)
!6931 = !DILocalVariable(name: "pb", scope: !2389, file: !939, line: 1171, type: !1412)
!6932 = !DILocation(line: 1171, column: 18, scope: !2389)
!6933 = !DILocation(line: 1171, column: 23, scope: !2389)
!6934 = !DILocation(line: 1171, column: 33, scope: !2389)
!6935 = !DILocation(line: 1171, column: 38, scope: !2389)
!6936 = !DILocalVariable(name: "id", scope: !2389, file: !939, line: 1172, type: !1036)
!6937 = !DILocation(line: 1172, column: 14, scope: !2389)
!6938 = !DILocation(line: 1172, column: 19, scope: !2389)
!6939 = !DILocation(line: 1172, column: 27, scope: !2389)
!6940 = !DILocalVariable(name: "length", scope: !2389, file: !939, line: 1173, type: !1045)
!6941 = !DILocation(line: 1173, column: 14, scope: !2389)
!6942 = !DILocalVariable(name: "res", scope: !2389, file: !939, line: 1174, type: !1039)
!6943 = !DILocation(line: 1174, column: 9, scope: !2389)
!6944 = !DILocalVariable(name: "newelem", scope: !2389, file: !939, line: 1175, type: !1078)
!6945 = !DILocation(line: 1175, column: 11, scope: !2389)
!6946 = !DILocalVariable(name: "level1_elem", scope: !2389, file: !939, line: 1176, type: !4214)
!6947 = !DILocation(line: 1176, column: 28, scope: !2389)
!6948 = !DILocation(line: 1178, column: 21, scope: !2389)
!6949 = !DILocation(line: 1178, column: 28, scope: !2389)
!6950 = !DILocation(line: 1178, column: 36, scope: !2389)
!6951 = !DILocation(line: 1178, column: 26, scope: !2389)
!6952 = !DILocation(line: 1178, column: 10, scope: !2389)
!6953 = !DILocation(line: 1179, column: 9, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !2389, file: !939, line: 1179, column: 9)
!6955 = !DILocation(line: 1179, column: 17, scope: !6954)
!6956 = !DILocation(line: 1179, column: 9, scope: !2389)
!6957 = !DILocalVariable(name: "list", scope: !6958, file: !939, line: 1180, type: !2751)
!6958 = distinct !DILexicalBlock(scope: !6954, file: !939, line: 1179, column: 33)
!6959 = !DILocation(line: 1180, column: 19, scope: !6958)
!6960 = !DILocation(line: 1180, column: 26, scope: !6958)
!6961 = !DILocation(line: 1181, column: 36, scope: !6958)
!6962 = !DILocation(line: 1181, column: 42, scope: !6958)
!6963 = !DILocation(line: 1181, column: 48, scope: !6958)
!6964 = !DILocation(line: 1181, column: 54, scope: !6958)
!6965 = !DILocation(line: 1181, column: 62, scope: !6958)
!6966 = !DILocation(line: 1181, column: 67, scope: !6958)
!6967 = !DILocation(line: 1181, column: 75, scope: !6958)
!6968 = !DILocation(line: 1181, column: 19, scope: !6958)
!6969 = !DILocation(line: 1181, column: 17, scope: !6958)
!6970 = !DILocation(line: 1182, column: 14, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6958, file: !939, line: 1182, column: 13)
!6972 = !DILocation(line: 1182, column: 13, scope: !6958)
!6973 = !DILocation(line: 1183, column: 13, scope: !6971)
!6974 = !DILocation(line: 1184, column: 22, scope: !6958)
!6975 = !DILocation(line: 1184, column: 9, scope: !6958)
!6976 = !DILocation(line: 1184, column: 15, scope: !6958)
!6977 = !DILocation(line: 1184, column: 20, scope: !6958)
!6978 = !DILocation(line: 1185, column: 25, scope: !6958)
!6979 = !DILocation(line: 1185, column: 31, scope: !6958)
!6980 = !DILocation(line: 1185, column: 38, scope: !6958)
!6981 = !DILocation(line: 1185, column: 44, scope: !6958)
!6982 = !DILocation(line: 1185, column: 54, scope: !6958)
!6983 = !DILocation(line: 1185, column: 62, scope: !6958)
!6984 = !DILocation(line: 1185, column: 52, scope: !6958)
!6985 = !DILocation(line: 1185, column: 36, scope: !6958)
!6986 = !DILocation(line: 1185, column: 14, scope: !6958)
!6987 = !DILocation(line: 1186, column: 16, scope: !6958)
!6988 = !DILocation(line: 1186, column: 25, scope: !6958)
!6989 = !DILocation(line: 1186, column: 33, scope: !6958)
!6990 = !DILocation(line: 1186, column: 9, scope: !6958)
!6991 = !DILocation(line: 1187, column: 9, scope: !6958)
!6992 = !DILocation(line: 1187, column: 15, scope: !6958)
!6993 = !DILocation(line: 1187, column: 22, scope: !6958)
!6994 = !DILocation(line: 1188, column: 5, scope: !6958)
!6995 = !DILocation(line: 1190, column: 9, scope: !6924)
!6996 = !DILocation(line: 1190, column: 17, scope: !6924)
!6997 = !DILocation(line: 1190, column: 22, scope: !6924)
!6998 = !DILocation(line: 1190, column: 35, scope: !6924)
!6999 = !DILocation(line: 1190, column: 38, scope: !7000)
!7000 = !DILexicalBlockFile(scope: !6924, file: !939, discriminator: 1)
!7001 = !DILocation(line: 1190, column: 46, scope: !7000)
!7002 = !DILocation(line: 1190, column: 51, scope: !7000)
!7003 = !DILocation(line: 1190, column: 9, scope: !7000)
!7004 = !DILocation(line: 1191, column: 9, scope: !6923)
!7005 = !DILocation(line: 1191, column: 19, scope: !6923)
!7006 = !DILocation(line: 1191, column: 30, scope: !6923)
!7007 = !DILocation(line: 1192, column: 37, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6923, file: !939, line: 1192, column: 13)
!7009 = !DILocation(line: 1192, column: 47, scope: !7008)
!7010 = !DILocation(line: 1192, column: 20, scope: !7008)
!7011 = !DILocation(line: 1192, column: 18, scope: !7008)
!7012 = !DILocation(line: 1192, column: 61, scope: !7008)
!7013 = !DILocation(line: 1192, column: 13, scope: !6923)
!7014 = !DILocation(line: 1193, column: 20, scope: !7008)
!7015 = !DILocation(line: 1193, column: 13, scope: !7008)
!7016 = !DILocation(line: 1194, column: 25, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !6923, file: !939, line: 1194, column: 13)
!7018 = !DILocation(line: 1194, column: 33, scope: !7017)
!7019 = !DILocation(line: 1194, column: 13, scope: !7017)
!7020 = !DILocation(line: 1194, column: 39, scope: !7017)
!7021 = !DILocation(line: 1194, column: 42, scope: !7022)
!7022 = !DILexicalBlockFile(scope: !7017, file: !939, discriminator: 1)
!7023 = !DILocation(line: 1194, column: 63, scope: !7022)
!7024 = !DILocation(line: 1194, column: 71, scope: !7022)
!7025 = !DILocation(line: 1194, column: 51, scope: !7022)
!7026 = !DILocation(line: 1194, column: 49, scope: !7022)
!7027 = !DILocation(line: 1194, column: 13, scope: !7022)
!7028 = !DILocation(line: 1195, column: 20, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7017, file: !939, line: 1194, column: 78)
!7030 = !DILocation(line: 1195, column: 30, scope: !7029)
!7031 = !DILocation(line: 1197, column: 20, scope: !7029)
!7032 = !DILocation(line: 1197, column: 40, scope: !7029)
!7033 = !DILocation(line: 1197, column: 48, scope: !7029)
!7034 = !DILocation(line: 1197, column: 28, scope: !7029)
!7035 = !DILocation(line: 1197, column: 55, scope: !7029)
!7036 = !DILocation(line: 1197, column: 63, scope: !7029)
!7037 = !DILocation(line: 1195, column: 13, scope: !7029)
!7038 = !DILocation(line: 1198, column: 13, scope: !7029)
!7039 = !DILocation(line: 1200, column: 13, scope: !6922)
!7040 = !DILocation(line: 1200, column: 23, scope: !6922)
!7041 = !DILocation(line: 1200, column: 34, scope: !6922)
!7042 = !DILocation(line: 1200, column: 13, scope: !6923)
!7043 = !DILocalVariable(name: "level", scope: !6921, file: !939, line: 1201, type: !7044)
!7044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64, align: 64)
!7045 = !DILocation(line: 1201, column: 28, scope: !6921)
!7046 = !DILocation(line: 1201, column: 54, scope: !6921)
!7047 = !DILocation(line: 1201, column: 64, scope: !6921)
!7048 = !DILocation(line: 1201, column: 75, scope: !6921)
!7049 = !DILocation(line: 1201, column: 37, scope: !6921)
!7050 = !DILocation(line: 1201, column: 47, scope: !6921)
!7051 = !DILocalVariable(name: "pb", scope: !6921, file: !939, line: 1202, type: !1412)
!7052 = !DILocation(line: 1202, column: 26, scope: !6921)
!7053 = !DILocation(line: 1202, column: 31, scope: !6921)
!7054 = !DILocation(line: 1202, column: 41, scope: !6921)
!7055 = !DILocation(line: 1202, column: 46, scope: !6921)
!7056 = !DILocalVariable(name: "pos", scope: !6921, file: !939, line: 1203, type: !1047)
!7057 = !DILocation(line: 1203, column: 21, scope: !6921)
!7058 = !DILocation(line: 1203, column: 37, scope: !6921)
!7059 = !DILocation(line: 1203, column: 27, scope: !6921)
!7060 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !6920)
!7061 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !6920)
!7062 = !DILocation(line: 1204, column: 17, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !6921, file: !939, line: 1204, column: 17)
!7064 = !DILocation(line: 1204, column: 24, scope: !7063)
!7065 = !DILocation(line: 1204, column: 31, scope: !7063)
!7066 = !DILocation(line: 1204, column: 48, scope: !7063)
!7067 = !DILocation(line: 1205, column: 18, scope: !7063)
!7068 = !DILocation(line: 1205, column: 24, scope: !7063)
!7069 = !DILocation(line: 1205, column: 22, scope: !7063)
!7070 = !DILocation(line: 1205, column: 35, scope: !7063)
!7071 = !DILocation(line: 1205, column: 42, scope: !7063)
!7072 = !DILocation(line: 1205, column: 50, scope: !7063)
!7073 = !DILocation(line: 1205, column: 57, scope: !7063)
!7074 = !DILocation(line: 1205, column: 48, scope: !7063)
!7075 = !DILocation(line: 1205, column: 32, scope: !7063)
!7076 = !DILocation(line: 1204, column: 17, scope: !7077)
!7077 = !DILexicalBlockFile(scope: !6921, file: !939, discriminator: 1)
!7078 = !DILocation(line: 1206, column: 24, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7063, file: !939, line: 1205, column: 66)
!7080 = !DILocation(line: 1206, column: 34, scope: !7079)
!7081 = !DILocation(line: 1208, column: 24, scope: !7079)
!7082 = !DILocation(line: 1208, column: 32, scope: !7079)
!7083 = !DILocation(line: 1208, column: 39, scope: !7079)
!7084 = !DILocation(line: 1208, column: 47, scope: !7079)
!7085 = !DILocation(line: 1208, column: 54, scope: !7079)
!7086 = !DILocation(line: 1208, column: 45, scope: !7079)
!7087 = !DILocation(line: 1206, column: 17, scope: !7079)
!7088 = !DILocation(line: 1209, column: 17, scope: !7079)
!7089 = !DILocation(line: 1211, column: 9, scope: !6921)
!7090 = !DILocation(line: 1212, column: 5, scope: !6923)
!7091 = !DILocation(line: 1214, column: 13, scope: !2389)
!7092 = !DILocation(line: 1214, column: 21, scope: !2389)
!7093 = !DILocation(line: 1214, column: 5, scope: !2389)
!7094 = !DILocation(line: 1216, column: 30, scope: !6918)
!7095 = !DILocation(line: 1216, column: 34, scope: !6918)
!7096 = !DILocation(line: 1216, column: 42, scope: !6918)
!7097 = !DILocation(line: 1216, column: 15, scope: !6918)
!7098 = !DILocation(line: 1216, column: 13, scope: !6918)
!7099 = !DILocation(line: 1217, column: 9, scope: !6918)
!7100 = !DILocation(line: 1219, column: 30, scope: !6918)
!7101 = !DILocation(line: 1219, column: 34, scope: !6918)
!7102 = !DILocation(line: 1219, column: 42, scope: !6918)
!7103 = !DILocation(line: 1219, column: 15, scope: !6918)
!7104 = !DILocation(line: 1219, column: 13, scope: !6918)
!7105 = !DILocation(line: 1220, column: 9, scope: !6918)
!7106 = !DILocation(line: 1222, column: 31, scope: !6918)
!7107 = !DILocation(line: 1222, column: 35, scope: !6918)
!7108 = !DILocation(line: 1222, column: 43, scope: !6918)
!7109 = !DILocation(line: 1222, column: 15, scope: !6918)
!7110 = !DILocation(line: 1222, column: 13, scope: !6918)
!7111 = !DILocation(line: 1223, column: 9, scope: !6918)
!7112 = !DILocation(line: 1226, column: 31, scope: !6918)
!7113 = !DILocation(line: 1226, column: 35, scope: !6918)
!7114 = !DILocation(line: 1226, column: 43, scope: !6918)
!7115 = !DILocation(line: 1226, column: 15, scope: !6918)
!7116 = !DILocation(line: 1226, column: 13, scope: !6918)
!7117 = !DILocation(line: 1227, column: 9, scope: !6918)
!7118 = !DILocation(line: 1229, column: 32, scope: !6918)
!7119 = !DILocation(line: 1229, column: 36, scope: !6918)
!7120 = !DILocation(line: 1229, column: 44, scope: !6918)
!7121 = !DILocation(line: 1229, column: 15, scope: !6918)
!7122 = !DILocation(line: 1229, column: 13, scope: !6918)
!7123 = !DILocation(line: 1230, column: 9, scope: !6918)
!7124 = !DILocation(line: 1233, column: 37, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !6918, file: !939, line: 1233, column: 13)
!7126 = !DILocation(line: 1233, column: 47, scope: !7125)
!7127 = !DILocation(line: 1233, column: 20, scope: !7125)
!7128 = !DILocation(line: 1233, column: 18, scope: !7125)
!7129 = !DILocation(line: 1233, column: 56, scope: !7125)
!7130 = !DILocation(line: 1233, column: 13, scope: !6918)
!7131 = !DILocation(line: 1234, column: 20, scope: !7125)
!7132 = !DILocation(line: 1234, column: 13, scope: !7125)
!7133 = !DILocation(line: 1235, column: 13, scope: !6917)
!7134 = !DILocation(line: 1235, column: 16, scope: !6917)
!7135 = !DILocation(line: 1235, column: 13, scope: !6918)
!7136 = !DILocation(line: 1236, column: 49, scope: !6917)
!7137 = !DILocation(line: 1236, column: 59, scope: !6917)
!7138 = !DILocation(line: 1236, column: 64, scope: !6917)
!7139 = !DILocation(line: 1236, column: 39, scope: !6917)
!7140 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !6916)
!7141 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !6916)
!7142 = !DILocation(line: 1236, column: 13, scope: !6917)
!7143 = !DILocation(line: 1236, column: 23, scope: !6917)
!7144 = !DILocation(line: 1236, column: 37, scope: !6917)
!7145 = !DILocation(line: 1237, column: 13, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !6918, file: !939, line: 1237, column: 13)
!7147 = !DILocation(line: 1237, column: 16, scope: !7146)
!7148 = !DILocation(line: 1237, column: 13, scope: !6918)
!7149 = !DILocation(line: 1238, column: 13, scope: !7146)
!7150 = !DILocation(line: 1238, column: 23, scope: !7146)
!7151 = !DILocation(line: 1238, column: 45, scope: !7146)
!7152 = !DILocation(line: 1239, column: 13, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !6918, file: !939, line: 1239, column: 13)
!7154 = !DILocation(line: 1239, column: 21, scope: !7153)
!7155 = !DILocation(line: 1239, column: 26, scope: !7153)
!7156 = !DILocation(line: 1239, column: 41, scope: !7153)
!7157 = !DILocation(line: 1240, column: 54, scope: !7153)
!7158 = !DILocation(line: 1240, column: 64, scope: !7153)
!7159 = !DILocation(line: 1240, column: 72, scope: !7153)
!7160 = !DILocation(line: 1240, column: 28, scope: !7153)
!7161 = !DILocation(line: 1240, column: 26, scope: !7153)
!7162 = !DILocation(line: 1239, column: 13, scope: !7163)
!7163 = !DILexicalBlockFile(scope: !6918, file: !939, discriminator: 1)
!7164 = !DILocation(line: 1241, column: 17, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !939, line: 1241, column: 17)
!7166 = distinct !DILexicalBlock(scope: !7153, file: !939, line: 1240, column: 78)
!7167 = !DILocation(line: 1241, column: 30, scope: !7165)
!7168 = !DILocation(line: 1241, column: 17, scope: !7166)
!7169 = !DILocation(line: 1242, column: 24, scope: !7165)
!7170 = !DILocation(line: 1242, column: 34, scope: !7165)
!7171 = !DILocation(line: 1242, column: 17, scope: !7165)
!7172 = !DILocation(line: 1243, column: 13, scope: !7166)
!7173 = !DILocation(line: 1243, column: 26, scope: !7166)
!7174 = !DILocation(line: 1243, column: 33, scope: !7166)
!7175 = !DILocation(line: 1244, column: 9, scope: !7166)
!7176 = !DILocation(line: 1245, column: 32, scope: !6918)
!7177 = !DILocation(line: 1245, column: 42, scope: !6918)
!7178 = !DILocation(line: 1245, column: 50, scope: !6918)
!7179 = !DILocation(line: 1245, column: 54, scope: !6918)
!7180 = !DILocation(line: 1245, column: 57, scope: !6918)
!7181 = !DILocation(line: 1245, column: 16, scope: !6918)
!7182 = !DILocation(line: 1245, column: 9, scope: !6918)
!7183 = !DILocation(line: 1247, column: 30, scope: !6918)
!7184 = !DILocation(line: 1247, column: 40, scope: !6918)
!7185 = !DILocation(line: 1247, column: 48, scope: !6918)
!7186 = !DILocation(line: 1247, column: 52, scope: !6918)
!7187 = !DILocation(line: 1247, column: 55, scope: !6918)
!7188 = !DILocation(line: 1247, column: 59, scope: !6918)
!7189 = !DILocation(line: 1247, column: 16, scope: !6918)
!7190 = !DILocation(line: 1247, column: 9, scope: !6918)
!7191 = !DILocation(line: 1249, column: 9, scope: !6918)
!7192 = !DILocation(line: 1251, column: 24, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !6918, file: !939, line: 1251, column: 13)
!7194 = !DILocation(line: 1251, column: 28, scope: !7193)
!7195 = !DILocation(line: 1251, column: 13, scope: !7193)
!7196 = !DILocation(line: 1251, column: 39, scope: !7193)
!7197 = !DILocation(line: 1251, column: 36, scope: !7193)
!7198 = !DILocation(line: 1251, column: 13, scope: !6918)
!7199 = !DILocation(line: 1252, column: 13, scope: !7193)
!7200 = !DILocation(line: 1253, column: 26, scope: !6918)
!7201 = !DILocation(line: 1253, column: 30, scope: !6918)
!7202 = !DILocation(line: 1253, column: 16, scope: !6918)
!7203 = !DILocation(line: 1253, column: 38, scope: !6918)
!7204 = !DILocation(line: 1253, column: 9, scope: !6918)
!7205 = !DILocation(line: 1255, column: 9, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !2389, file: !939, line: 1255, column: 9)
!7207 = !DILocation(line: 1255, column: 13, scope: !7206)
!7208 = !DILocation(line: 1255, column: 9, scope: !2389)
!7209 = !DILocation(line: 1256, column: 16, scope: !7206)
!7210 = !DILocation(line: 1256, column: 26, scope: !7206)
!7211 = !DILocation(line: 1256, column: 9, scope: !7206)
!7212 = !DILocation(line: 1257, column: 14, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7206, file: !939, line: 1257, column: 14)
!7214 = !DILocation(line: 1257, column: 18, scope: !7213)
!7215 = !DILocation(line: 1257, column: 14, scope: !7206)
!7216 = !DILocation(line: 1258, column: 16, scope: !7213)
!7217 = !DILocation(line: 1258, column: 26, scope: !7213)
!7218 = !DILocation(line: 1258, column: 9, scope: !7213)
!7219 = !DILocation(line: 1259, column: 12, scope: !2389)
!7220 = !DILocation(line: 1259, column: 5, scope: !2389)
!7221 = !DILocation(line: 1260, column: 1, scope: !2389)
!7222 = distinct !DISubprogram(name: "ebml_read_length", scope: !939, file: !939, line: 867, type: !7223, isLocal: true, isDefinition: true, scopeLine: 869, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7223 = !DISubroutineType(types: !7224)
!7224 = !{!1039, !2392, !1412, !1055}
!7225 = !DILocalVariable(name: "matroska", arg: 1, scope: !7222, file: !939, line: 867, type: !2392)
!7226 = !DILocation(line: 867, column: 51, scope: !7222)
!7227 = !DILocalVariable(name: "pb", arg: 2, scope: !7222, file: !939, line: 867, type: !1412)
!7228 = !DILocation(line: 867, column: 74, scope: !7222)
!7229 = !DILocalVariable(name: "number", arg: 3, scope: !7222, file: !939, line: 868, type: !1055)
!7230 = !DILocation(line: 868, column: 39, scope: !7222)
!7231 = !DILocalVariable(name: "res", scope: !7222, file: !939, line: 870, type: !1039)
!7232 = !DILocation(line: 870, column: 9, scope: !7222)
!7233 = !DILocation(line: 870, column: 29, scope: !7222)
!7234 = !DILocation(line: 870, column: 39, scope: !7222)
!7235 = !DILocation(line: 870, column: 46, scope: !7222)
!7236 = !DILocation(line: 870, column: 15, scope: !7222)
!7237 = !DILocation(line: 871, column: 9, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7222, file: !939, line: 871, column: 9)
!7239 = !DILocation(line: 871, column: 13, scope: !7238)
!7240 = !DILocation(line: 871, column: 17, scope: !7238)
!7241 = !DILocation(line: 871, column: 21, scope: !7242)
!7242 = !DILexicalBlockFile(scope: !7238, file: !939, discriminator: 1)
!7243 = !DILocation(line: 871, column: 20, scope: !7242)
!7244 = !DILocation(line: 871, column: 28, scope: !7242)
!7245 = !DILocation(line: 871, column: 48, scope: !7242)
!7246 = !DILocation(line: 871, column: 46, scope: !7242)
!7247 = !DILocation(line: 871, column: 40, scope: !7242)
!7248 = !DILocation(line: 871, column: 32, scope: !7242)
!7249 = !DILocation(line: 871, column: 9, scope: !7242)
!7250 = !DILocation(line: 872, column: 10, scope: !7238)
!7251 = !DILocation(line: 872, column: 17, scope: !7238)
!7252 = !DILocation(line: 872, column: 9, scope: !7238)
!7253 = !DILocation(line: 873, column: 12, scope: !7222)
!7254 = !DILocation(line: 873, column: 5, scope: !7222)
!7255 = distinct !DISubprogram(name: "ebml_read_uint", scope: !939, file: !939, line: 880, type: !7256, isLocal: true, isDefinition: true, scopeLine: 881, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7256 = !DISubroutineType(types: !7257)
!7257 = !{!1039, !1412, !1039, !1055}
!7258 = !DILocalVariable(name: "pb", arg: 1, scope: !7255, file: !939, line: 880, type: !1412)
!7259 = !DILocation(line: 880, column: 40, scope: !7255)
!7260 = !DILocalVariable(name: "size", arg: 2, scope: !7255, file: !939, line: 880, type: !1039)
!7261 = !DILocation(line: 880, column: 48, scope: !7255)
!7262 = !DILocalVariable(name: "num", arg: 3, scope: !7255, file: !939, line: 880, type: !1055)
!7263 = !DILocation(line: 880, column: 64, scope: !7255)
!7264 = !DILocalVariable(name: "n", scope: !7255, file: !939, line: 882, type: !1039)
!7265 = !DILocation(line: 882, column: 9, scope: !7255)
!7266 = !DILocation(line: 884, column: 9, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7255, file: !939, line: 884, column: 9)
!7268 = !DILocation(line: 884, column: 14, scope: !7267)
!7269 = !DILocation(line: 884, column: 9, scope: !7255)
!7270 = !DILocation(line: 885, column: 9, scope: !7267)
!7271 = !DILocation(line: 888, column: 6, scope: !7255)
!7272 = !DILocation(line: 888, column: 10, scope: !7255)
!7273 = !DILocation(line: 889, column: 5, scope: !7255)
!7274 = !DILocation(line: 889, column: 13, scope: !7275)
!7275 = !DILexicalBlockFile(scope: !7255, file: !939, discriminator: 1)
!7276 = !DILocation(line: 889, column: 18, scope: !7275)
!7277 = !DILocation(line: 889, column: 16, scope: !7275)
!7278 = !DILocation(line: 889, column: 5, scope: !7275)
!7279 = !DILocation(line: 890, column: 18, scope: !7255)
!7280 = !DILocation(line: 890, column: 17, scope: !7255)
!7281 = !DILocation(line: 890, column: 22, scope: !7255)
!7282 = !DILocation(line: 890, column: 38, scope: !7255)
!7283 = !DILocation(line: 890, column: 30, scope: !7255)
!7284 = !DILocation(line: 890, column: 28, scope: !7255)
!7285 = !DILocation(line: 890, column: 10, scope: !7255)
!7286 = !DILocation(line: 890, column: 14, scope: !7255)
!7287 = !DILocation(line: 889, column: 5, scope: !7288)
!7288 = !DILexicalBlockFile(scope: !7255, file: !939, discriminator: 2)
!7289 = distinct !{!7289, !7273}
!7290 = !DILocation(line: 892, column: 5, scope: !7255)
!7291 = !DILocation(line: 893, column: 1, scope: !7255)
!7292 = distinct !DISubprogram(name: "ebml_read_sint", scope: !939, file: !939, line: 899, type: !7293, isLocal: true, isDefinition: true, scopeLine: 900, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7293 = !DISubroutineType(types: !7294)
!7294 = !{!1039, !1412, !1039, !1054}
!7295 = !DILocalVariable(name: "pb", arg: 1, scope: !7292, file: !939, line: 899, type: !1412)
!7296 = !DILocation(line: 899, column: 40, scope: !7292)
!7297 = !DILocalVariable(name: "size", arg: 2, scope: !7292, file: !939, line: 899, type: !1039)
!7298 = !DILocation(line: 899, column: 48, scope: !7292)
!7299 = !DILocalVariable(name: "num", arg: 3, scope: !7292, file: !939, line: 899, type: !1054)
!7300 = !DILocation(line: 899, column: 63, scope: !7292)
!7301 = !DILocalVariable(name: "n", scope: !7292, file: !939, line: 901, type: !1039)
!7302 = !DILocation(line: 901, column: 9, scope: !7292)
!7303 = !DILocation(line: 903, column: 9, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7292, file: !939, line: 903, column: 9)
!7305 = !DILocation(line: 903, column: 14, scope: !7304)
!7306 = !DILocation(line: 903, column: 9, scope: !7292)
!7307 = !DILocation(line: 904, column: 9, scope: !7304)
!7308 = !DILocation(line: 906, column: 9, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7292, file: !939, line: 906, column: 9)
!7310 = !DILocation(line: 906, column: 14, scope: !7309)
!7311 = !DILocation(line: 906, column: 9, scope: !7292)
!7312 = !DILocation(line: 907, column: 10, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7309, file: !939, line: 906, column: 20)
!7314 = !DILocation(line: 907, column: 14, scope: !7313)
!7315 = !DILocation(line: 908, column: 5, scope: !7313)
!7316 = !DILocation(line: 909, column: 36, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7309, file: !939, line: 908, column: 12)
!7318 = !DILocation(line: 909, column: 28, scope: !7317)
!7319 = !DILocation(line: 909, column: 16, scope: !7320)
!7320 = !DILexicalBlockFile(scope: !7317, file: !939, discriminator: 1)
!7321 = !DILocation(line: 909, column: 16, scope: !7317)
!7322 = !DILocation(line: 909, column: 10, scope: !7317)
!7323 = !DILocation(line: 909, column: 14, scope: !7317)
!7324 = !DILocation(line: 912, column: 9, scope: !7317)
!7325 = !DILocation(line: 912, column: 17, scope: !7320)
!7326 = !DILocation(line: 912, column: 22, scope: !7320)
!7327 = !DILocation(line: 912, column: 20, scope: !7320)
!7328 = !DILocation(line: 912, column: 9, scope: !7320)
!7329 = !DILocation(line: 913, column: 32, scope: !7317)
!7330 = !DILocation(line: 913, column: 31, scope: !7317)
!7331 = !DILocation(line: 913, column: 36, scope: !7317)
!7332 = !DILocation(line: 913, column: 52, scope: !7317)
!7333 = !DILocation(line: 913, column: 44, scope: !7317)
!7334 = !DILocation(line: 913, column: 42, scope: !7317)
!7335 = !DILocation(line: 913, column: 14, scope: !7317)
!7336 = !DILocation(line: 913, column: 18, scope: !7317)
!7337 = !DILocation(line: 912, column: 9, scope: !7338)
!7338 = !DILexicalBlockFile(scope: !7317, file: !939, discriminator: 2)
!7339 = distinct !{!7339, !7324}
!7340 = !DILocation(line: 916, column: 5, scope: !7292)
!7341 = !DILocation(line: 917, column: 1, scope: !7292)
!7342 = distinct !DISubprogram(name: "ebml_read_float", scope: !939, file: !939, line: 923, type: !7343, isLocal: true, isDefinition: true, scopeLine: 924, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7343 = !DISubroutineType(types: !7344)
!7344 = !{!1039, !1412, !1039, !1056}
!7345 = !DILocalVariable(name: "i", arg: 1, scope: !7346, file: !7347, line: 60, type: !1045)
!7346 = distinct !DISubprogram(name: "av_int2double", scope: !7347, file: !7347, line: 60, type: !7348, isLocal: true, isDefinition: true, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7347 = !DIFile(filename: "./libavutil/intfloat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!7348 = !DISubroutineType(types: !7349)
!7349 = !{!1057, !1045}
!7350 = !DILocation(line: 60, column: 76, scope: !7346, inlinedAt: !7351)
!7351 = distinct !DILocation(line: 930, column: 16, scope: !7352)
!7352 = !DILexicalBlockFile(scope: !7353, file: !939, discriminator: 1)
!7353 = distinct !DILexicalBlock(scope: !7354, file: !939, line: 929, column: 14)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !939, line: 927, column: 14)
!7355 = distinct !DILexicalBlock(scope: !7342, file: !939, line: 925, column: 9)
!7356 = !DILocalVariable(name: "v", scope: !7346, file: !7347, line: 62, type: !7357)
!7357 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "av_intfloat64", file: !7347, line: 32, size: 64, align: 64, elements: !7358)
!7358 = !{!7359, !7360}
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !7357, file: !7347, line: 33, baseType: !1045, size: 64, align: 64)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !7357, file: !7347, line: 34, baseType: !1057, size: 64, align: 64)
!7361 = !DILocation(line: 62, column: 25, scope: !7346, inlinedAt: !7351)
!7362 = !DILocalVariable(name: "i", arg: 1, scope: !7363, file: !7347, line: 40, type: !1036)
!7363 = distinct !DISubprogram(name: "av_int2float", scope: !7347, file: !7347, line: 40, type: !7364, isLocal: true, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{!1792, !1036}
!7366 = !DILocation(line: 40, column: 74, scope: !7363, inlinedAt: !7367)
!7367 = distinct !DILocation(line: 928, column: 16, scope: !7368)
!7368 = !DILexicalBlockFile(scope: !7354, file: !939, discriminator: 1)
!7369 = !DILocalVariable(name: "v", scope: !7363, file: !7347, line: 42, type: !7370)
!7370 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "av_intfloat32", file: !7347, line: 27, size: 32, align: 32, elements: !7371)
!7371 = !{!7372, !7373}
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !7370, file: !7347, line: 28, baseType: !1036, size: 32, align: 32)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !7370, file: !7347, line: 29, baseType: !1792, size: 32, align: 32)
!7374 = !DILocation(line: 42, column: 25, scope: !7363, inlinedAt: !7367)
!7375 = !DILocalVariable(name: "pb", arg: 1, scope: !7342, file: !939, line: 923, type: !1412)
!7376 = !DILocation(line: 923, column: 41, scope: !7342)
!7377 = !DILocalVariable(name: "size", arg: 2, scope: !7342, file: !939, line: 923, type: !1039)
!7378 = !DILocation(line: 923, column: 49, scope: !7342)
!7379 = !DILocalVariable(name: "num", arg: 3, scope: !7342, file: !939, line: 923, type: !1056)
!7380 = !DILocation(line: 923, column: 63, scope: !7342)
!7381 = !DILocation(line: 925, column: 9, scope: !7355)
!7382 = !DILocation(line: 925, column: 14, scope: !7355)
!7383 = !DILocation(line: 925, column: 9, scope: !7342)
!7384 = !DILocation(line: 926, column: 10, scope: !7355)
!7385 = !DILocation(line: 926, column: 14, scope: !7355)
!7386 = !DILocation(line: 926, column: 9, scope: !7355)
!7387 = !DILocation(line: 927, column: 14, scope: !7354)
!7388 = !DILocation(line: 927, column: 19, scope: !7354)
!7389 = !DILocation(line: 927, column: 14, scope: !7355)
!7390 = !DILocation(line: 928, column: 39, scope: !7354)
!7391 = !DILocation(line: 928, column: 29, scope: !7354)
!7392 = !DILocation(line: 928, column: 16, scope: !7368)
!7393 = !DILocation(line: 43, column: 11, scope: !7363, inlinedAt: !7367)
!7394 = !DILocation(line: 43, column: 7, scope: !7363, inlinedAt: !7367)
!7395 = !DILocation(line: 43, column: 9, scope: !7363, inlinedAt: !7367)
!7396 = !DILocation(line: 44, column: 14, scope: !7363, inlinedAt: !7367)
!7397 = !DILocation(line: 928, column: 16, scope: !7354)
!7398 = !DILocation(line: 928, column: 10, scope: !7354)
!7399 = !DILocation(line: 928, column: 14, scope: !7354)
!7400 = !DILocation(line: 928, column: 9, scope: !7354)
!7401 = !DILocation(line: 929, column: 14, scope: !7353)
!7402 = !DILocation(line: 929, column: 19, scope: !7353)
!7403 = !DILocation(line: 929, column: 14, scope: !7354)
!7404 = !DILocation(line: 930, column: 40, scope: !7353)
!7405 = !DILocation(line: 930, column: 30, scope: !7353)
!7406 = !DILocation(line: 930, column: 16, scope: !7352)
!7407 = !DILocation(line: 63, column: 11, scope: !7346, inlinedAt: !7351)
!7408 = !DILocation(line: 63, column: 7, scope: !7346, inlinedAt: !7351)
!7409 = !DILocation(line: 63, column: 9, scope: !7346, inlinedAt: !7351)
!7410 = !DILocation(line: 64, column: 14, scope: !7346, inlinedAt: !7351)
!7411 = !DILocation(line: 930, column: 10, scope: !7353)
!7412 = !DILocation(line: 930, column: 14, scope: !7353)
!7413 = !DILocation(line: 930, column: 9, scope: !7353)
!7414 = !DILocation(line: 932, column: 9, scope: !7353)
!7415 = !DILocation(line: 934, column: 5, scope: !7342)
!7416 = !DILocation(line: 935, column: 1, scope: !7342)
!7417 = distinct !DISubprogram(name: "ebml_read_ascii", scope: !939, file: !939, line: 941, type: !7418, isLocal: true, isDefinition: true, scopeLine: 942, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7418 = !DISubroutineType(types: !7419)
!7419 = !{!1039, !1412, !1039, !7420}
!7420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64, align: 64)
!7421 = !DILocalVariable(name: "pb", arg: 1, scope: !7417, file: !939, line: 941, type: !1412)
!7422 = !DILocation(line: 941, column: 41, scope: !7417)
!7423 = !DILocalVariable(name: "size", arg: 2, scope: !7417, file: !939, line: 941, type: !1039)
!7424 = !DILocation(line: 941, column: 49, scope: !7417)
!7425 = !DILocalVariable(name: "str", arg: 3, scope: !7417, file: !939, line: 941, type: !7420)
!7426 = !DILocation(line: 941, column: 62, scope: !7417)
!7427 = !DILocalVariable(name: "res", scope: !7417, file: !939, line: 943, type: !1051)
!7428 = !DILocation(line: 943, column: 11, scope: !7417)
!7429 = !DILocation(line: 947, column: 27, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7417, file: !939, line: 947, column: 9)
!7431 = !DILocation(line: 947, column: 32, scope: !7430)
!7432 = !DILocation(line: 947, column: 17, scope: !7430)
!7433 = !DILocation(line: 947, column: 15, scope: !7430)
!7434 = !DILocation(line: 947, column: 9, scope: !7417)
!7435 = !DILocation(line: 948, column: 9, scope: !7430)
!7436 = !DILocation(line: 949, column: 19, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7417, file: !939, line: 949, column: 9)
!7438 = !DILocation(line: 949, column: 35, scope: !7437)
!7439 = !DILocation(line: 949, column: 40, scope: !7437)
!7440 = !DILocation(line: 949, column: 9, scope: !7437)
!7441 = !DILocation(line: 949, column: 49, scope: !7437)
!7442 = !DILocation(line: 949, column: 46, scope: !7437)
!7443 = !DILocation(line: 949, column: 9, scope: !7417)
!7444 = !DILocation(line: 950, column: 17, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7437, file: !939, line: 949, column: 55)
!7446 = !DILocation(line: 950, column: 9, scope: !7445)
!7447 = !DILocation(line: 951, column: 9, scope: !7445)
!7448 = !DILocation(line: 953, column: 11, scope: !7417)
!7449 = !DILocation(line: 953, column: 5, scope: !7417)
!7450 = !DILocation(line: 953, column: 6, scope: !7417)
!7451 = !DILocation(line: 953, column: 17, scope: !7417)
!7452 = !DILocation(line: 954, column: 14, scope: !7417)
!7453 = !DILocation(line: 954, column: 13, scope: !7417)
!7454 = !DILocation(line: 954, column: 5, scope: !7417)
!7455 = !DILocation(line: 955, column: 12, scope: !7417)
!7456 = !DILocation(line: 955, column: 6, scope: !7417)
!7457 = !DILocation(line: 955, column: 10, scope: !7417)
!7458 = !DILocation(line: 957, column: 5, scope: !7417)
!7459 = !DILocation(line: 958, column: 1, scope: !7417)
!7460 = distinct !DISubprogram(name: "ebml_read_binary", scope: !939, file: !939, line: 964, type: !7461, isLocal: true, isDefinition: true, scopeLine: 965, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7461 = !DISubroutineType(types: !7462)
!7462 = !{!1039, !1412, !1039, !1059}
!7463 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !7464)
!7464 = distinct !DILocation(line: 975, column: 16, scope: !7460)
!7465 = !DILocalVariable(name: "pb", arg: 1, scope: !7460, file: !939, line: 964, type: !1412)
!7466 = !DILocation(line: 964, column: 42, scope: !7460)
!7467 = !DILocalVariable(name: "length", arg: 2, scope: !7460, file: !939, line: 964, type: !1039)
!7468 = !DILocation(line: 964, column: 50, scope: !7460)
!7469 = !DILocalVariable(name: "bin", arg: 3, scope: !7460, file: !939, line: 964, type: !1059)
!7470 = !DILocation(line: 964, column: 67, scope: !7460)
!7471 = !DILocalVariable(name: "ret", scope: !7460, file: !939, line: 966, type: !1039)
!7472 = !DILocation(line: 966, column: 9, scope: !7460)
!7473 = !DILocation(line: 968, column: 30, scope: !7460)
!7474 = !DILocation(line: 968, column: 35, scope: !7460)
!7475 = !DILocation(line: 968, column: 40, scope: !7460)
!7476 = !DILocation(line: 968, column: 47, scope: !7460)
!7477 = !DILocation(line: 968, column: 11, scope: !7460)
!7478 = !DILocation(line: 968, column: 9, scope: !7460)
!7479 = !DILocation(line: 969, column: 9, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7460, file: !939, line: 969, column: 9)
!7481 = !DILocation(line: 969, column: 13, scope: !7480)
!7482 = !DILocation(line: 969, column: 9, scope: !7460)
!7483 = !DILocation(line: 970, column: 16, scope: !7480)
!7484 = !DILocation(line: 970, column: 9, scope: !7480)
!7485 = !DILocation(line: 971, column: 12, scope: !7460)
!7486 = !DILocation(line: 971, column: 17, scope: !7460)
!7487 = !DILocation(line: 971, column: 22, scope: !7460)
!7488 = !DILocation(line: 971, column: 29, scope: !7460)
!7489 = !DILocation(line: 971, column: 27, scope: !7460)
!7490 = !DILocation(line: 971, column: 5, scope: !7460)
!7491 = !DILocation(line: 973, column: 17, scope: !7460)
!7492 = !DILocation(line: 973, column: 22, scope: !7460)
!7493 = !DILocation(line: 973, column: 27, scope: !7460)
!7494 = !DILocation(line: 973, column: 5, scope: !7460)
!7495 = !DILocation(line: 973, column: 10, scope: !7460)
!7496 = !DILocation(line: 973, column: 15, scope: !7460)
!7497 = !DILocation(line: 974, column: 17, scope: !7460)
!7498 = !DILocation(line: 974, column: 5, scope: !7460)
!7499 = !DILocation(line: 974, column: 10, scope: !7460)
!7500 = !DILocation(line: 974, column: 15, scope: !7460)
!7501 = !DILocation(line: 975, column: 26, scope: !7460)
!7502 = !DILocation(line: 975, column: 16, scope: !7460)
!7503 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !7464)
!7504 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !7464)
!7505 = !DILocation(line: 975, column: 5, scope: !7460)
!7506 = !DILocation(line: 975, column: 10, scope: !7460)
!7507 = !DILocation(line: 975, column: 14, scope: !7460)
!7508 = !DILocation(line: 976, column: 19, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7460, file: !939, line: 976, column: 9)
!7510 = !DILocation(line: 976, column: 23, scope: !7509)
!7511 = !DILocation(line: 976, column: 28, scope: !7509)
!7512 = !DILocation(line: 976, column: 34, scope: !7509)
!7513 = !DILocation(line: 976, column: 9, scope: !7509)
!7514 = !DILocation(line: 976, column: 45, scope: !7509)
!7515 = !DILocation(line: 976, column: 42, scope: !7509)
!7516 = !DILocation(line: 976, column: 9, scope: !7460)
!7517 = !DILocation(line: 977, column: 26, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7509, file: !939, line: 976, column: 53)
!7519 = !DILocation(line: 977, column: 31, scope: !7518)
!7520 = !DILocation(line: 977, column: 9, scope: !7518)
!7521 = !DILocation(line: 978, column: 9, scope: !7518)
!7522 = !DILocation(line: 978, column: 14, scope: !7518)
!7523 = !DILocation(line: 978, column: 19, scope: !7518)
!7524 = !DILocation(line: 979, column: 9, scope: !7518)
!7525 = !DILocation(line: 979, column: 14, scope: !7518)
!7526 = !DILocation(line: 979, column: 19, scope: !7518)
!7527 = !DILocation(line: 980, column: 9, scope: !7518)
!7528 = !DILocation(line: 983, column: 5, scope: !7460)
!7529 = !DILocation(line: 984, column: 1, scope: !7460)
!7530 = distinct !DISubprogram(name: "ebml_read_master", scope: !939, file: !939, line: 991, type: !7531, isLocal: true, isDefinition: true, scopeLine: 992, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7531 = !DISubroutineType(types: !7532)
!7532 = !{!1039, !2392, !1045}
!7533 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !7534)
!7534 = distinct !DILocation(line: 1003, column: 20, scope: !7530)
!7535 = !DILocalVariable(name: "matroska", arg: 1, scope: !7530, file: !939, line: 991, type: !2392)
!7536 = !DILocation(line: 991, column: 51, scope: !7530)
!7537 = !DILocalVariable(name: "length", arg: 2, scope: !7530, file: !939, line: 991, type: !1045)
!7538 = !DILocation(line: 991, column: 70, scope: !7530)
!7539 = !DILocalVariable(name: "pb", scope: !7530, file: !939, line: 993, type: !1412)
!7540 = !DILocation(line: 993, column: 18, scope: !7530)
!7541 = !DILocation(line: 993, column: 23, scope: !7530)
!7542 = !DILocation(line: 993, column: 33, scope: !7530)
!7543 = !DILocation(line: 993, column: 38, scope: !7530)
!7544 = !DILocalVariable(name: "level", scope: !7530, file: !939, line: 994, type: !7044)
!7545 = !DILocation(line: 994, column: 20, scope: !7530)
!7546 = !DILocation(line: 996, column: 9, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7530, file: !939, line: 996, column: 9)
!7548 = !DILocation(line: 996, column: 19, scope: !7547)
!7549 = !DILocation(line: 996, column: 30, scope: !7547)
!7550 = !DILocation(line: 996, column: 9, scope: !7530)
!7551 = !DILocation(line: 997, column: 16, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7547, file: !939, line: 996, column: 37)
!7553 = !DILocation(line: 997, column: 26, scope: !7552)
!7554 = !DILocation(line: 997, column: 9, scope: !7552)
!7555 = !DILocation(line: 999, column: 9, scope: !7552)
!7556 = !DILocation(line: 1002, column: 31, scope: !7530)
!7557 = !DILocation(line: 1002, column: 41, scope: !7530)
!7558 = !DILocation(line: 1002, column: 51, scope: !7530)
!7559 = !DILocation(line: 1002, column: 14, scope: !7530)
!7560 = !DILocation(line: 1002, column: 24, scope: !7530)
!7561 = !DILocation(line: 1002, column: 11, scope: !7530)
!7562 = !DILocation(line: 1003, column: 30, scope: !7530)
!7563 = !DILocation(line: 1003, column: 20, scope: !7530)
!7564 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !7534)
!7565 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !7534)
!7566 = !DILocation(line: 1003, column: 5, scope: !7530)
!7567 = !DILocation(line: 1003, column: 12, scope: !7530)
!7568 = !DILocation(line: 1003, column: 18, scope: !7530)
!7569 = !DILocation(line: 1004, column: 21, scope: !7530)
!7570 = !DILocation(line: 1004, column: 5, scope: !7530)
!7571 = !DILocation(line: 1004, column: 12, scope: !7530)
!7572 = !DILocation(line: 1004, column: 19, scope: !7530)
!7573 = !DILocation(line: 1006, column: 5, scope: !7530)
!7574 = !DILocation(line: 1007, column: 1, scope: !7530)
!7575 = distinct !DISubprogram(name: "matroska_find_level1_elem", scope: !939, file: !939, line: 1123, type: !7576, isLocal: true, isDefinition: true, scopeLine: 1125, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7576 = !DISubroutineType(types: !7577)
!7577 = !{!4214, !2392, !1036}
!7578 = !DILocalVariable(name: "matroska", arg: 1, scope: !7575, file: !939, line: 1123, type: !2392)
!7579 = !DILocation(line: 1123, column: 79, scope: !7575)
!7580 = !DILocalVariable(name: "id", arg: 2, scope: !7575, file: !939, line: 1124, type: !1036)
!7581 = !DILocation(line: 1124, column: 66, scope: !7575)
!7582 = !DILocalVariable(name: "i", scope: !7575, file: !939, line: 1126, type: !1039)
!7583 = !DILocation(line: 1126, column: 9, scope: !7575)
!7584 = !DILocalVariable(name: "elem", scope: !7575, file: !939, line: 1127, type: !4214)
!7585 = !DILocation(line: 1127, column: 28, scope: !7575)
!7586 = !DILocation(line: 1129, column: 27, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7575, file: !939, line: 1129, column: 9)
!7588 = !DILocation(line: 1129, column: 10, scope: !7587)
!7589 = !DILocation(line: 1129, column: 9, scope: !7575)
!7590 = !DILocation(line: 1130, column: 9, scope: !7587)
!7591 = !DILocation(line: 1133, column: 9, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7575, file: !939, line: 1133, column: 9)
!7593 = !DILocation(line: 1133, column: 12, scope: !7592)
!7594 = !DILocation(line: 1133, column: 9, scope: !7575)
!7595 = !DILocation(line: 1134, column: 9, scope: !7592)
!7596 = !DILocation(line: 1137, column: 9, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7575, file: !939, line: 1137, column: 9)
!7598 = !DILocation(line: 1137, column: 12, scope: !7597)
!7599 = !DILocation(line: 1137, column: 9, scope: !7575)
!7600 = !DILocation(line: 1138, column: 16, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7602, file: !939, line: 1138, column: 9)
!7602 = distinct !DILexicalBlock(scope: !7597, file: !939, line: 1137, column: 27)
!7603 = !DILocation(line: 1138, column: 14, scope: !7601)
!7604 = !DILocation(line: 1138, column: 21, scope: !7605)
!7605 = !DILexicalBlockFile(scope: !7606, file: !939, discriminator: 1)
!7606 = distinct !DILexicalBlock(scope: !7601, file: !939, line: 1138, column: 9)
!7607 = !DILocation(line: 1138, column: 25, scope: !7605)
!7608 = !DILocation(line: 1138, column: 35, scope: !7605)
!7609 = !DILocation(line: 1138, column: 23, scope: !7605)
!7610 = !DILocation(line: 1138, column: 9, scope: !7605)
!7611 = !DILocation(line: 1139, column: 40, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !939, line: 1139, column: 17)
!7613 = distinct !DILexicalBlock(scope: !7606, file: !939, line: 1138, column: 58)
!7614 = !DILocation(line: 1139, column: 17, scope: !7612)
!7615 = !DILocation(line: 1139, column: 27, scope: !7612)
!7616 = !DILocation(line: 1139, column: 43, scope: !7612)
!7617 = !DILocation(line: 1139, column: 49, scope: !7612)
!7618 = !DILocation(line: 1139, column: 46, scope: !7612)
!7619 = !DILocation(line: 1139, column: 17, scope: !7613)
!7620 = !DILocation(line: 1140, column: 48, scope: !7612)
!7621 = !DILocation(line: 1140, column: 25, scope: !7612)
!7622 = !DILocation(line: 1140, column: 35, scope: !7612)
!7623 = !DILocation(line: 1140, column: 17, scope: !7612)
!7624 = !DILocation(line: 1141, column: 9, scope: !7613)
!7625 = !DILocation(line: 1138, column: 54, scope: !7626)
!7626 = !DILexicalBlockFile(scope: !7606, file: !939, discriminator: 2)
!7627 = !DILocation(line: 1138, column: 9, scope: !7626)
!7628 = distinct !{!7628, !7629}
!7629 = !DILocation(line: 1138, column: 9, scope: !7602)
!7630 = !DILocation(line: 1142, column: 5, scope: !7602)
!7631 = !DILocation(line: 1147, column: 9, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7575, file: !939, line: 1147, column: 9)
!7633 = !DILocation(line: 1147, column: 19, scope: !7632)
!7634 = !DILocation(line: 1147, column: 36, scope: !7632)
!7635 = !DILocation(line: 1147, column: 9, scope: !7575)
!7636 = !DILocation(line: 1148, column: 16, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7632, file: !939, line: 1147, column: 111)
!7638 = !DILocation(line: 1148, column: 26, scope: !7637)
!7639 = !DILocation(line: 1148, column: 9, scope: !7637)
!7640 = !DILocation(line: 1149, column: 9, scope: !7637)
!7641 = !DILocation(line: 1152, column: 36, scope: !7575)
!7642 = !DILocation(line: 1152, column: 46, scope: !7575)
!7643 = !DILocation(line: 1152, column: 62, scope: !7575)
!7644 = !DILocation(line: 1152, column: 13, scope: !7575)
!7645 = !DILocation(line: 1152, column: 23, scope: !7575)
!7646 = !DILocation(line: 1152, column: 10, scope: !7575)
!7647 = !DILocation(line: 1153, column: 6, scope: !7575)
!7648 = !DILocation(line: 1153, column: 36, scope: !7575)
!7649 = !DILocation(line: 1153, column: 43, scope: !7575)
!7650 = !DILocation(line: 1153, column: 13, scope: !7575)
!7651 = !DILocation(line: 1155, column: 12, scope: !7575)
!7652 = !DILocation(line: 1155, column: 5, scope: !7575)
!7653 = !DILocation(line: 1156, column: 1, scope: !7575)
!7654 = distinct !DISubprogram(name: "ebml_parse_nest", scope: !939, file: !939, line: 1076, type: !2390, isLocal: true, isDefinition: true, scopeLine: 1078, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7655 = !DILocalVariable(name: "matroska", arg: 1, scope: !7654, file: !939, line: 1076, type: !2392)
!7656 = !DILocation(line: 1076, column: 50, scope: !7654)
!7657 = !DILocalVariable(name: "syntax", arg: 2, scope: !7654, file: !939, line: 1076, type: !2459)
!7658 = !DILocation(line: 1076, column: 72, scope: !7654)
!7659 = !DILocalVariable(name: "data", arg: 3, scope: !7654, file: !939, line: 1077, type: !1078)
!7660 = !DILocation(line: 1077, column: 34, scope: !7654)
!7661 = !DILocalVariable(name: "i", scope: !7654, file: !939, line: 1079, type: !1039)
!7662 = !DILocation(line: 1079, column: 9, scope: !7654)
!7663 = !DILocalVariable(name: "res", scope: !7654, file: !939, line: 1079, type: !1039)
!7664 = !DILocation(line: 1079, column: 12, scope: !7654)
!7665 = !DILocation(line: 1081, column: 12, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7654, file: !939, line: 1081, column: 5)
!7667 = !DILocation(line: 1081, column: 10, scope: !7666)
!7668 = !DILocation(line: 1081, column: 24, scope: !7669)
!7669 = !DILexicalBlockFile(scope: !7670, file: !939, discriminator: 1)
!7670 = distinct !DILexicalBlock(scope: !7666, file: !939, line: 1081, column: 5)
!7671 = !DILocation(line: 1081, column: 17, scope: !7669)
!7672 = !DILocation(line: 1081, column: 27, scope: !7669)
!7673 = !DILocation(line: 1081, column: 5, scope: !7669)
!7674 = !DILocation(line: 1082, column: 24, scope: !7670)
!7675 = !DILocation(line: 1082, column: 17, scope: !7670)
!7676 = !DILocation(line: 1082, column: 27, scope: !7670)
!7677 = !DILocation(line: 1082, column: 9, scope: !7670)
!7678 = !DILocation(line: 1084, column: 75, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7670, file: !939, line: 1082, column: 33)
!7680 = !DILocation(line: 1084, column: 68, scope: !7679)
!7681 = !DILocation(line: 1084, column: 78, scope: !7679)
!7682 = !DILocation(line: 1084, column: 82, scope: !7679)
!7683 = !DILocation(line: 1084, column: 36, scope: !7679)
!7684 = !DILocation(line: 1084, column: 50, scope: !7679)
!7685 = !DILocation(line: 1084, column: 43, scope: !7679)
!7686 = !DILocation(line: 1084, column: 53, scope: !7679)
!7687 = !DILocation(line: 1084, column: 41, scope: !7679)
!7688 = !DILocation(line: 1084, column: 13, scope: !7679)
!7689 = !DILocation(line: 1084, column: 66, scope: !7679)
!7690 = !DILocation(line: 1085, column: 13, scope: !7679)
!7691 = !DILocation(line: 1087, column: 76, scope: !7679)
!7692 = !DILocation(line: 1087, column: 69, scope: !7679)
!7693 = !DILocation(line: 1087, column: 79, scope: !7679)
!7694 = !DILocation(line: 1087, column: 83, scope: !7679)
!7695 = !DILocation(line: 1087, column: 37, scope: !7679)
!7696 = !DILocation(line: 1087, column: 51, scope: !7679)
!7697 = !DILocation(line: 1087, column: 44, scope: !7679)
!7698 = !DILocation(line: 1087, column: 54, scope: !7679)
!7699 = !DILocation(line: 1087, column: 42, scope: !7679)
!7700 = !DILocation(line: 1087, column: 13, scope: !7679)
!7701 = !DILocation(line: 1087, column: 67, scope: !7679)
!7702 = !DILocation(line: 1088, column: 13, scope: !7679)
!7703 = !DILocation(line: 1090, column: 74, scope: !7679)
!7704 = !DILocation(line: 1090, column: 67, scope: !7679)
!7705 = !DILocation(line: 1090, column: 77, scope: !7679)
!7706 = !DILocation(line: 1090, column: 81, scope: !7679)
!7707 = !DILocation(line: 1090, column: 35, scope: !7679)
!7708 = !DILocation(line: 1090, column: 49, scope: !7679)
!7709 = !DILocation(line: 1090, column: 42, scope: !7679)
!7710 = !DILocation(line: 1090, column: 52, scope: !7679)
!7711 = !DILocation(line: 1090, column: 40, scope: !7679)
!7712 = !DILocation(line: 1090, column: 13, scope: !7679)
!7713 = !DILocation(line: 1090, column: 65, scope: !7679)
!7714 = !DILocation(line: 1091, column: 13, scope: !7679)
!7715 = !DILocation(line: 1095, column: 24, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7679, file: !939, line: 1095, column: 17)
!7717 = !DILocation(line: 1095, column: 17, scope: !7716)
!7718 = !DILocation(line: 1095, column: 27, scope: !7716)
!7719 = !DILocation(line: 1095, column: 31, scope: !7716)
!7720 = !DILocation(line: 1095, column: 17, scope: !7679)
!7721 = !DILocalVariable(name: "dst", scope: !7722, file: !939, line: 1096, type: !1058)
!7722 = distinct !DILexicalBlock(scope: !7716, file: !939, line: 1095, column: 34)
!7723 = !DILocation(line: 1096, column: 27, scope: !7722)
!7724 = !DILocation(line: 1096, column: 59, scope: !7722)
!7725 = !DILocation(line: 1096, column: 73, scope: !7722)
!7726 = !DILocation(line: 1096, column: 66, scope: !7722)
!7727 = !DILocation(line: 1096, column: 76, scope: !7722)
!7728 = !DILocation(line: 1096, column: 64, scope: !7722)
!7729 = !DILocation(line: 1096, column: 33, scope: !7722)
!7730 = !DILocation(line: 1097, column: 41, scope: !7722)
!7731 = !DILocation(line: 1097, column: 34, scope: !7722)
!7732 = !DILocation(line: 1097, column: 44, scope: !7722)
!7733 = !DILocation(line: 1097, column: 48, scope: !7722)
!7734 = !DILocation(line: 1097, column: 24, scope: !7722)
!7735 = !DILocation(line: 1097, column: 18, scope: !7722)
!7736 = !DILocation(line: 1097, column: 22, scope: !7722)
!7737 = !DILocation(line: 1098, column: 23, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7722, file: !939, line: 1098, column: 21)
!7739 = !DILocation(line: 1098, column: 22, scope: !7738)
!7740 = !DILocation(line: 1098, column: 21, scope: !7722)
!7741 = !DILocation(line: 1099, column: 21, scope: !7738)
!7742 = !DILocation(line: 1100, column: 13, scope: !7722)
!7743 = !DILocation(line: 1101, column: 13, scope: !7679)
!7744 = !DILocation(line: 1102, column: 9, scope: !7679)
!7745 = !DILocation(line: 1081, column: 32, scope: !7746)
!7746 = !DILexicalBlockFile(scope: !7670, file: !939, discriminator: 2)
!7747 = !DILocation(line: 1081, column: 5, scope: !7746)
!7748 = distinct !{!7748, !7749}
!7749 = !DILocation(line: 1081, column: 5, scope: !7654)
!7750 = !DILocation(line: 1104, column: 5, scope: !7654)
!7751 = !DILocation(line: 1104, column: 13, scope: !7752)
!7752 = !DILexicalBlockFile(scope: !7654, file: !939, discriminator: 1)
!7753 = !DILocation(line: 1104, column: 17, scope: !7752)
!7754 = !DILocation(line: 1104, column: 36, scope: !7755)
!7755 = !DILexicalBlockFile(scope: !7654, file: !939, discriminator: 2)
!7756 = !DILocation(line: 1104, column: 21, scope: !7755)
!7757 = !DILocation(line: 1104, column: 20, scope: !7755)
!7758 = !DILocation(line: 1104, column: 5, scope: !7759)
!7759 = !DILexicalBlockFile(scope: !7654, file: !939, discriminator: 3)
!7760 = !DILocation(line: 1105, column: 26, scope: !7654)
!7761 = !DILocation(line: 1105, column: 36, scope: !7654)
!7762 = !DILocation(line: 1105, column: 44, scope: !7654)
!7763 = !DILocation(line: 1105, column: 15, scope: !7654)
!7764 = !DILocation(line: 1105, column: 13, scope: !7654)
!7765 = !DILocation(line: 1104, column: 5, scope: !7766)
!7766 = !DILexicalBlockFile(scope: !7654, file: !939, discriminator: 4)
!7767 = distinct !{!7767, !7750}
!7768 = !DILocation(line: 1107, column: 12, scope: !7654)
!7769 = !DILocation(line: 1107, column: 5, scope: !7654)
!7770 = !DILocation(line: 1108, column: 1, scope: !7654)
!7771 = distinct !DISubprogram(name: "sign_extend", scope: !7772, file: !7772, line: 130, type: !7773, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7772 = !DIFile(filename: "./libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!7773 = !DISubroutineType(types: !7774)
!7774 = !{!1039, !1039, !1038}
!7775 = !DILocalVariable(name: "val", arg: 1, scope: !7771, file: !7772, line: 130, type: !1039)
!7776 = !DILocation(line: 130, column: 58, scope: !7771)
!7777 = !DILocalVariable(name: "bits", arg: 2, scope: !7771, file: !7772, line: 130, type: !1038)
!7778 = !DILocation(line: 130, column: 72, scope: !7771)
!7779 = !DILocalVariable(name: "shift", scope: !7771, file: !7772, line: 132, type: !1038)
!7780 = !DILocation(line: 132, column: 14, scope: !7771)
!7781 = !DILocation(line: 132, column: 40, scope: !7771)
!7782 = !DILocation(line: 132, column: 38, scope: !7771)
!7783 = !DILocation(line: 132, column: 22, scope: !7771)
!7784 = !DILocalVariable(name: "v", scope: !7771, file: !7772, line: 133, type: !7785)
!7785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7771, file: !7772, line: 133, size: 32, align: 32, elements: !7786)
!7786 = !{!7787, !7788}
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !7785, file: !7772, line: 133, baseType: !1038, size: 32, align: 32)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !7785, file: !7772, line: 133, baseType: !1039, size: 32, align: 32)
!7789 = !DILocation(line: 133, column: 34, scope: !7771)
!7790 = !DILocation(line: 133, column: 38, scope: !7771)
!7791 = !DILocation(line: 133, column: 51, scope: !7771)
!7792 = !DILocation(line: 133, column: 58, scope: !7771)
!7793 = !DILocation(line: 133, column: 55, scope: !7771)
!7794 = !DILocation(line: 134, column: 14, scope: !7771)
!7795 = !DILocation(line: 134, column: 19, scope: !7771)
!7796 = !DILocation(line: 134, column: 16, scope: !7771)
!7797 = !DILocation(line: 134, column: 5, scope: !7771)
!7798 = distinct !DISubprogram(name: "is_ebml_id_valid", scope: !939, file: !939, line: 1110, type: !7799, isLocal: true, isDefinition: true, scopeLine: 1111, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7799 = !DISubroutineType(types: !7800)
!7800 = !{!1039, !1036}
!7801 = !DILocalVariable(name: "id", arg: 1, scope: !7798, file: !939, line: 1110, type: !1036)
!7802 = !DILocation(line: 1110, column: 38, scope: !7798)
!7803 = !DILocalVariable(name: "bits", scope: !7798, file: !939, line: 1115, type: !1038)
!7804 = !DILocation(line: 1115, column: 18, scope: !7798)
!7805 = !DILocation(line: 1115, column: 46, scope: !7798)
!7806 = !DILocation(line: 1115, column: 49, scope: !7798)
!7807 = !DILocation(line: 1115, column: 31, scope: !7798)
!7808 = !DILocation(line: 1115, column: 29, scope: !7798)
!7809 = !DILocation(line: 1116, column: 12, scope: !7798)
!7810 = !DILocation(line: 1116, column: 15, scope: !7798)
!7811 = !DILocation(line: 1116, column: 19, scope: !7812)
!7812 = !DILexicalBlockFile(scope: !7798, file: !939, discriminator: 1)
!7813 = !DILocation(line: 1116, column: 24, scope: !7812)
!7814 = !DILocation(line: 1116, column: 29, scope: !7812)
!7815 = !DILocation(line: 1116, column: 41, scope: !7812)
!7816 = !DILocation(line: 1116, column: 46, scope: !7812)
!7817 = !DILocation(line: 1116, column: 39, scope: !7812)
!7818 = !DILocation(line: 1116, column: 33, scope: !7812)
!7819 = !DILocation(line: 1116, column: 15, scope: !7820)
!7820 = !DILexicalBlockFile(scope: !7798, file: !939, discriminator: 2)
!7821 = !DILocation(line: 1116, column: 5, scope: !7820)
!7822 = distinct !DISubprogram(name: "ebml_level_end", scope: !939, file: !939, line: 798, type: !7823, isLocal: true, isDefinition: true, scopeLine: 799, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7823 = !DISubroutineType(types: !7824)
!7824 = !{!1039, !2392}
!7825 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !7826)
!7826 = distinct !DILocation(line: 801, column: 19, scope: !7822)
!7827 = !DILocalVariable(name: "matroska", arg: 1, scope: !7822, file: !939, line: 798, type: !2392)
!7828 = !DILocation(line: 798, column: 49, scope: !7822)
!7829 = !DILocalVariable(name: "pb", scope: !7822, file: !939, line: 800, type: !1412)
!7830 = !DILocation(line: 800, column: 18, scope: !7822)
!7831 = !DILocation(line: 800, column: 23, scope: !7822)
!7832 = !DILocation(line: 800, column: 33, scope: !7822)
!7833 = !DILocation(line: 800, column: 38, scope: !7822)
!7834 = !DILocalVariable(name: "pos", scope: !7822, file: !939, line: 801, type: !1047)
!7835 = !DILocation(line: 801, column: 13, scope: !7822)
!7836 = !DILocation(line: 801, column: 29, scope: !7822)
!7837 = !DILocation(line: 801, column: 19, scope: !7822)
!7838 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !7826)
!7839 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !7826)
!7840 = !DILocation(line: 803, column: 9, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7822, file: !939, line: 803, column: 9)
!7842 = !DILocation(line: 803, column: 19, scope: !7841)
!7843 = !DILocation(line: 803, column: 30, scope: !7841)
!7844 = !DILocation(line: 803, column: 9, scope: !7822)
!7845 = !DILocalVariable(name: "level", scope: !7846, file: !939, line: 804, type: !7044)
!7846 = distinct !DILexicalBlock(scope: !7841, file: !939, line: 803, column: 35)
!7847 = !DILocation(line: 804, column: 24, scope: !7846)
!7848 = !DILocation(line: 804, column: 50, scope: !7846)
!7849 = !DILocation(line: 804, column: 60, scope: !7846)
!7850 = !DILocation(line: 804, column: 71, scope: !7846)
!7851 = !DILocation(line: 804, column: 33, scope: !7846)
!7852 = !DILocation(line: 804, column: 43, scope: !7846)
!7853 = !DILocation(line: 805, column: 13, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7846, file: !939, line: 805, column: 13)
!7855 = !DILocation(line: 805, column: 19, scope: !7854)
!7856 = !DILocation(line: 805, column: 26, scope: !7854)
!7857 = !DILocation(line: 805, column: 17, scope: !7854)
!7858 = !DILocation(line: 805, column: 35, scope: !7854)
!7859 = !DILocation(line: 805, column: 42, scope: !7854)
!7860 = !DILocation(line: 805, column: 32, scope: !7854)
!7861 = !DILocation(line: 805, column: 49, scope: !7854)
!7862 = !DILocation(line: 805, column: 52, scope: !7863)
!7863 = !DILexicalBlockFile(scope: !7854, file: !939, discriminator: 1)
!7864 = !DILocation(line: 805, column: 62, scope: !7863)
!7865 = !DILocation(line: 805, column: 13, scope: !7863)
!7866 = !DILocation(line: 806, column: 13, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7854, file: !939, line: 805, column: 74)
!7868 = !DILocation(line: 806, column: 23, scope: !7867)
!7869 = !DILocation(line: 806, column: 33, scope: !7867)
!7870 = !DILocation(line: 807, column: 13, scope: !7867)
!7871 = !DILocation(line: 809, column: 5, scope: !7846)
!7872 = !DILocation(line: 810, column: 13, scope: !7822)
!7873 = !DILocation(line: 810, column: 23, scope: !7822)
!7874 = !DILocation(line: 810, column: 31, scope: !7822)
!7875 = !DILocation(line: 810, column: 34, scope: !7876)
!7876 = !DILexicalBlockFile(scope: !7822, file: !939, discriminator: 1)
!7877 = !DILocation(line: 810, column: 44, scope: !7876)
!7878 = !DILocation(line: 810, column: 49, scope: !7876)
!7879 = !DILocation(line: 810, column: 53, scope: !7876)
!7880 = !DILocation(line: 810, column: 31, scope: !7876)
!7881 = !DILocation(line: 810, column: 12, scope: !7882)
!7882 = !DILexicalBlockFile(scope: !7822, file: !939, discriminator: 2)
!7883 = !DILocation(line: 810, column: 5, scope: !7882)
!7884 = !DILocation(line: 811, column: 1, scope: !7822)
!7885 = distinct !DISubprogram(name: "matroska_parse_seekhead_entry", scope: !939, file: !939, line: 1591, type: !7531, isLocal: true, isDefinition: true, scopeLine: 1593, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7886 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !7887)
!7887 = distinct !DILocation(line: 1596, column: 26, scope: !7885)
!7888 = !DILocalVariable(name: "matroska", arg: 1, scope: !7885, file: !939, line: 1591, type: !2392)
!7889 = !DILocation(line: 1591, column: 64, scope: !7885)
!7890 = !DILocalVariable(name: "pos", arg: 2, scope: !7885, file: !939, line: 1592, type: !1045)
!7891 = !DILocation(line: 1592, column: 51, scope: !7885)
!7892 = !DILocalVariable(name: "level_up", scope: !7885, file: !939, line: 1594, type: !1036)
!7893 = !DILocation(line: 1594, column: 14, scope: !7885)
!7894 = !DILocation(line: 1594, column: 25, scope: !7885)
!7895 = !DILocation(line: 1594, column: 35, scope: !7885)
!7896 = !DILocalVariable(name: "saved_id", scope: !7885, file: !939, line: 1595, type: !1036)
!7897 = !DILocation(line: 1595, column: 14, scope: !7885)
!7898 = !DILocation(line: 1595, column: 25, scope: !7885)
!7899 = !DILocation(line: 1595, column: 35, scope: !7885)
!7900 = !DILocalVariable(name: "before_pos", scope: !7885, file: !939, line: 1596, type: !1047)
!7901 = !DILocation(line: 1596, column: 13, scope: !7885)
!7902 = !DILocation(line: 1596, column: 36, scope: !7885)
!7903 = !DILocation(line: 1596, column: 46, scope: !7885)
!7904 = !DILocation(line: 1596, column: 51, scope: !7885)
!7905 = !DILocation(line: 1596, column: 26, scope: !7885)
!7906 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !7887)
!7907 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !7887)
!7908 = !DILocalVariable(name: "level", scope: !7885, file: !939, line: 1597, type: !2403)
!7909 = !DILocation(line: 1597, column: 19, scope: !7885)
!7910 = !DILocalVariable(name: "offset", scope: !7885, file: !939, line: 1598, type: !1047)
!7911 = !DILocation(line: 1598, column: 13, scope: !7885)
!7912 = !DILocalVariable(name: "ret", scope: !7885, file: !939, line: 1599, type: !1039)
!7913 = !DILocation(line: 1599, column: 9, scope: !7885)
!7914 = !DILocation(line: 1602, column: 14, scope: !7885)
!7915 = !DILocation(line: 1602, column: 20, scope: !7885)
!7916 = !DILocation(line: 1602, column: 30, scope: !7885)
!7917 = !DILocation(line: 1602, column: 18, scope: !7885)
!7918 = !DILocation(line: 1602, column: 12, scope: !7885)
!7919 = !DILocation(line: 1603, column: 19, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7885, file: !939, line: 1603, column: 9)
!7921 = !DILocation(line: 1603, column: 29, scope: !7920)
!7922 = !DILocation(line: 1603, column: 34, scope: !7920)
!7923 = !DILocation(line: 1603, column: 38, scope: !7920)
!7924 = !DILocation(line: 1603, column: 9, scope: !7920)
!7925 = !DILocation(line: 1603, column: 58, scope: !7920)
!7926 = !DILocation(line: 1603, column: 55, scope: !7920)
!7927 = !DILocation(line: 1603, column: 9, scope: !7885)
!7928 = !DILocation(line: 1606, column: 13, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7930, file: !939, line: 1606, column: 13)
!7930 = distinct !DILexicalBlock(scope: !7920, file: !939, line: 1603, column: 66)
!7931 = !DILocation(line: 1606, column: 23, scope: !7929)
!7932 = !DILocation(line: 1606, column: 34, scope: !7929)
!7933 = !DILocation(line: 1606, column: 13, scope: !7930)
!7934 = !DILocation(line: 1607, column: 20, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7929, file: !939, line: 1606, column: 41)
!7936 = !DILocation(line: 1607, column: 30, scope: !7935)
!7937 = !DILocation(line: 1607, column: 13, scope: !7935)
!7938 = !DILocation(line: 1610, column: 17, scope: !7935)
!7939 = !DILocation(line: 1611, column: 9, scope: !7935)
!7940 = !DILocation(line: 1612, column: 19, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7929, file: !939, line: 1611, column: 16)
!7942 = !DILocation(line: 1612, column: 25, scope: !7941)
!7943 = !DILocation(line: 1613, column: 19, scope: !7941)
!7944 = !DILocation(line: 1613, column: 26, scope: !7941)
!7945 = !DILocation(line: 1614, column: 30, scope: !7941)
!7946 = !DILocation(line: 1614, column: 40, scope: !7941)
!7947 = !DILocation(line: 1614, column: 13, scope: !7941)
!7948 = !DILocation(line: 1614, column: 23, scope: !7941)
!7949 = !DILocation(line: 1614, column: 54, scope: !7941)
!7950 = !DILocation(line: 1615, column: 13, scope: !7941)
!7951 = !DILocation(line: 1615, column: 23, scope: !7941)
!7952 = !DILocation(line: 1615, column: 33, scope: !7941)
!7953 = !DILocation(line: 1616, column: 13, scope: !7941)
!7954 = !DILocation(line: 1616, column: 23, scope: !7941)
!7955 = !DILocation(line: 1616, column: 34, scope: !7941)
!7956 = !DILocation(line: 1618, column: 30, scope: !7941)
!7957 = !DILocation(line: 1618, column: 58, scope: !7941)
!7958 = !DILocation(line: 1618, column: 19, scope: !7941)
!7959 = !DILocation(line: 1618, column: 17, scope: !7941)
!7960 = !DILocation(line: 1621, column: 13, scope: !7941)
!7961 = !DILocation(line: 1621, column: 20, scope: !7962)
!7962 = !DILexicalBlockFile(scope: !7941, file: !939, discriminator: 1)
!7963 = !DILocation(line: 1621, column: 30, scope: !7962)
!7964 = !DILocation(line: 1621, column: 13, scope: !7962)
!7965 = !DILocalVariable(name: "length", scope: !7966, file: !939, line: 1622, type: !1045)
!7966 = distinct !DILexicalBlock(scope: !7941, file: !939, line: 1621, column: 42)
!7967 = !DILocation(line: 1622, column: 26, scope: !7966)
!7968 = !DILocation(line: 1622, column: 54, scope: !7966)
!7969 = !DILocation(line: 1622, column: 64, scope: !7966)
!7970 = !DILocation(line: 1622, column: 52, scope: !7966)
!7971 = !DILocation(line: 1622, column: 35, scope: !7966)
!7972 = !DILocation(line: 1622, column: 45, scope: !7966)
!7973 = !DILocation(line: 1622, column: 76, scope: !7966)
!7974 = !DILocation(line: 1623, column: 21, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7966, file: !939, line: 1623, column: 21)
!7976 = !DILocation(line: 1623, column: 28, scope: !7975)
!7977 = !DILocation(line: 1623, column: 21, scope: !7966)
!7978 = !DILocation(line: 1624, column: 21, scope: !7975)
!7979 = !DILocation(line: 1621, column: 13, scope: !7980)
!7980 = !DILexicalBlockFile(scope: !7941, file: !939, discriminator: 2)
!7981 = distinct !{!7981, !7960}
!7982 = !DILocation(line: 1627, column: 5, scope: !7930)
!7983 = !DILocation(line: 1629, column: 15, scope: !7885)
!7984 = !DILocation(line: 1629, column: 25, scope: !7885)
!7985 = !DILocation(line: 1629, column: 30, scope: !7885)
!7986 = !DILocation(line: 1629, column: 34, scope: !7885)
!7987 = !DILocation(line: 1629, column: 5, scope: !7885)
!7988 = !DILocation(line: 1630, column: 26, scope: !7885)
!7989 = !DILocation(line: 1630, column: 5, scope: !7885)
!7990 = !DILocation(line: 1630, column: 15, scope: !7885)
!7991 = !DILocation(line: 1630, column: 24, scope: !7885)
!7992 = !DILocation(line: 1631, column: 28, scope: !7885)
!7993 = !DILocation(line: 1631, column: 5, scope: !7885)
!7994 = !DILocation(line: 1631, column: 15, scope: !7885)
!7995 = !DILocation(line: 1631, column: 26, scope: !7885)
!7996 = !DILocation(line: 1633, column: 12, scope: !7885)
!7997 = !DILocation(line: 1633, column: 5, scope: !7885)
!7998 = distinct !DISubprogram(name: "matroska_decode_buffer", scope: !939, file: !939, line: 1352, type: !7999, isLocal: true, isDefinition: true, scopeLine: 1354, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!7999 = !DISubroutineType(types: !8000)
!8000 = !{!1039, !1058, !1601, !3392}
!8001 = !DILocalVariable(name: "buf", arg: 1, scope: !7998, file: !939, line: 1352, type: !1058)
!8002 = !DILocation(line: 1352, column: 45, scope: !7998)
!8003 = !DILocalVariable(name: "buf_size", arg: 2, scope: !7998, file: !939, line: 1352, type: !1601)
!8004 = !DILocation(line: 1352, column: 55, scope: !7998)
!8005 = !DILocalVariable(name: "track", arg: 3, scope: !7998, file: !939, line: 1353, type: !3392)
!8006 = !DILocation(line: 1353, column: 50, scope: !7998)
!8007 = !DILocalVariable(name: "encodings", scope: !7998, file: !939, line: 1355, type: !4396)
!8008 = !DILocation(line: 1355, column: 28, scope: !7998)
!8009 = !DILocation(line: 1355, column: 40, scope: !7998)
!8010 = !DILocation(line: 1355, column: 47, scope: !7998)
!8011 = !DILocation(line: 1355, column: 57, scope: !7998)
!8012 = !DILocalVariable(name: "data", scope: !7998, file: !939, line: 1356, type: !1053)
!8013 = !DILocation(line: 1356, column: 14, scope: !7998)
!8014 = !DILocation(line: 1356, column: 22, scope: !7998)
!8015 = !DILocation(line: 1356, column: 21, scope: !7998)
!8016 = !DILocalVariable(name: "isize", scope: !7998, file: !939, line: 1357, type: !1039)
!8017 = !DILocation(line: 1357, column: 9, scope: !7998)
!8018 = !DILocation(line: 1357, column: 18, scope: !7998)
!8019 = !DILocation(line: 1357, column: 17, scope: !7998)
!8020 = !DILocalVariable(name: "pkt_data", scope: !7998, file: !939, line: 1358, type: !1053)
!8021 = !DILocation(line: 1358, column: 14, scope: !7998)
!8022 = !DILocalVariable(name: "newpktdata", scope: !7998, file: !939, line: 1359, type: !1053)
!8023 = !DILocation(line: 1359, column: 38, scope: !7998)
!8024 = !DILocalVariable(name: "pkt_size", scope: !7998, file: !939, line: 1360, type: !1039)
!8025 = !DILocation(line: 1360, column: 9, scope: !7998)
!8026 = !DILocation(line: 1360, column: 20, scope: !7998)
!8027 = !DILocalVariable(name: "result", scope: !7998, file: !939, line: 1361, type: !1039)
!8028 = !DILocation(line: 1361, column: 9, scope: !7998)
!8029 = !DILocalVariable(name: "olen", scope: !7998, file: !939, line: 1362, type: !1039)
!8030 = !DILocation(line: 1362, column: 9, scope: !7998)
!8031 = !DILocation(line: 1364, column: 9, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !7998, file: !939, line: 1364, column: 9)
!8033 = !DILocation(line: 1364, column: 18, scope: !8032)
!8034 = !DILocation(line: 1364, column: 9, scope: !7998)
!8035 = !DILocation(line: 1365, column: 9, scope: !8032)
!8036 = !DILocation(line: 1367, column: 13, scope: !7998)
!8037 = !DILocation(line: 1367, column: 26, scope: !7998)
!8038 = !DILocation(line: 1367, column: 38, scope: !7998)
!8039 = !DILocation(line: 1367, column: 5, scope: !7998)
!8040 = !DILocalVariable(name: "header_size", scope: !8041, file: !939, line: 1370, type: !1039)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !939, line: 1369, column: 5)
!8042 = distinct !DILexicalBlock(scope: !7998, file: !939, line: 1367, column: 44)
!8043 = !DILocation(line: 1370, column: 13, scope: !8041)
!8044 = !DILocation(line: 1370, column: 27, scope: !8041)
!8045 = !DILocation(line: 1370, column: 40, scope: !8041)
!8046 = !DILocation(line: 1370, column: 52, scope: !8041)
!8047 = !DILocation(line: 1370, column: 61, scope: !8041)
!8048 = !DILocalVariable(name: "header", scope: !8041, file: !939, line: 1371, type: !1053)
!8049 = !DILocation(line: 1371, column: 18, scope: !8041)
!8050 = !DILocation(line: 1371, column: 27, scope: !8041)
!8051 = !DILocation(line: 1371, column: 40, scope: !8041)
!8052 = !DILocation(line: 1371, column: 52, scope: !8041)
!8053 = !DILocation(line: 1371, column: 61, scope: !8041)
!8054 = !DILocation(line: 1373, column: 13, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8041, file: !939, line: 1373, column: 13)
!8056 = !DILocation(line: 1373, column: 25, scope: !8055)
!8057 = !DILocation(line: 1373, column: 29, scope: !8058)
!8058 = !DILexicalBlockFile(scope: !8055, file: !939, discriminator: 1)
!8059 = !DILocation(line: 1373, column: 13, scope: !8058)
!8060 = !DILocation(line: 1374, column: 13, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8055, file: !939, line: 1373, column: 37)
!8062 = !DILocation(line: 1375, column: 13, scope: !8061)
!8063 = !DILocation(line: 1378, column: 14, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8041, file: !939, line: 1378, column: 13)
!8065 = !DILocation(line: 1378, column: 13, scope: !8041)
!8066 = !DILocation(line: 1379, column: 13, scope: !8064)
!8067 = !DILocation(line: 1381, column: 20, scope: !8041)
!8068 = !DILocation(line: 1381, column: 28, scope: !8041)
!8069 = !DILocation(line: 1381, column: 26, scope: !8041)
!8070 = !DILocation(line: 1381, column: 18, scope: !8041)
!8071 = !DILocation(line: 1382, column: 30, scope: !8041)
!8072 = !DILocation(line: 1382, column: 39, scope: !8041)
!8073 = !DILocation(line: 1382, column: 20, scope: !8041)
!8074 = !DILocation(line: 1382, column: 18, scope: !8041)
!8075 = !DILocation(line: 1383, column: 14, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8041, file: !939, line: 1383, column: 13)
!8077 = !DILocation(line: 1383, column: 13, scope: !8041)
!8078 = !DILocation(line: 1384, column: 13, scope: !8076)
!8079 = !DILocation(line: 1386, column: 16, scope: !8041)
!8080 = !DILocation(line: 1386, column: 26, scope: !8041)
!8081 = !DILocation(line: 1386, column: 34, scope: !8041)
!8082 = !DILocation(line: 1386, column: 9, scope: !8041)
!8083 = !DILocation(line: 1387, column: 16, scope: !8041)
!8084 = !DILocation(line: 1387, column: 27, scope: !8041)
!8085 = !DILocation(line: 1387, column: 25, scope: !8041)
!8086 = !DILocation(line: 1387, column: 40, scope: !8041)
!8087 = !DILocation(line: 1387, column: 46, scope: !8041)
!8088 = !DILocation(line: 1387, column: 9, scope: !8041)
!8089 = !DILocation(line: 1388, column: 9, scope: !8041)
!8090 = !DILocation(line: 1392, column: 9, scope: !8042)
!8091 = distinct !{!8091, !8090}
!8092 = !DILocation(line: 1393, column: 29, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8042, file: !939, line: 1392, column: 12)
!8094 = !DILocation(line: 1393, column: 18, scope: !8093)
!8095 = !DILocation(line: 1394, column: 37, scope: !8093)
!8096 = !DILocation(line: 1394, column: 47, scope: !8093)
!8097 = !DILocation(line: 1394, column: 56, scope: !8093)
!8098 = !DILocation(line: 1395, column: 56, scope: !8093)
!8099 = !DILocation(line: 1394, column: 26, scope: !8093)
!8100 = !DILocation(line: 1394, column: 24, scope: !8093)
!8101 = !DILocation(line: 1396, column: 18, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8093, file: !939, line: 1396, column: 17)
!8103 = !DILocation(line: 1396, column: 17, scope: !8093)
!8104 = !DILocation(line: 1397, column: 24, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8102, file: !939, line: 1396, column: 30)
!8106 = !DILocation(line: 1398, column: 17, scope: !8105)
!8107 = !DILocation(line: 1400, column: 24, scope: !8093)
!8108 = !DILocation(line: 1400, column: 22, scope: !8093)
!8109 = !DILocation(line: 1401, column: 38, scope: !8093)
!8110 = !DILocation(line: 1401, column: 55, scope: !8093)
!8111 = !DILocation(line: 1401, column: 22, scope: !8093)
!8112 = !DILocation(line: 1401, column: 20, scope: !8093)
!8113 = !DILocation(line: 1402, column: 9, scope: !8093)
!8114 = !DILocation(line: 1402, column: 18, scope: !8115)
!8115 = !DILexicalBlockFile(scope: !8042, file: !939, discriminator: 1)
!8116 = !DILocation(line: 1402, column: 25, scope: !8115)
!8117 = !DILocation(line: 1402, column: 30, scope: !8115)
!8118 = !DILocation(line: 1402, column: 33, scope: !8119)
!8119 = !DILexicalBlockFile(scope: !8042, file: !939, discriminator: 2)
!8120 = !DILocation(line: 1402, column: 42, scope: !8119)
!8121 = !DILocation(line: 1402, column: 9, scope: !8122)
!8122 = !DILexicalBlockFile(scope: !8093, file: !939, discriminator: 3)
!8123 = !DILocation(line: 1403, column: 13, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8042, file: !939, line: 1403, column: 13)
!8125 = !DILocation(line: 1403, column: 13, scope: !8042)
!8126 = !DILocation(line: 1404, column: 20, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8124, file: !939, line: 1403, column: 21)
!8128 = !DILocation(line: 1405, column: 13, scope: !8127)
!8129 = !DILocation(line: 1407, column: 21, scope: !8042)
!8130 = !DILocation(line: 1407, column: 18, scope: !8042)
!8131 = !DILocation(line: 1408, column: 9, scope: !8042)
!8132 = !DILocalVariable(name: "zstream", scope: !8133, file: !939, line: 1413, type: !8134)
!8133 = distinct !DILexicalBlock(scope: !8042, file: !939, line: 1412, column: 5)
!8134 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_stream", file: !8135, line: 106, baseType: !8136)
!8135 = !DIFile(filename: "/usr/local/include/zlib.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!8136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_stream_s", file: !8135, line: 86, size: 896, align: 64, elements: !8137)
!8137 = !{!8138, !8144, !8146, !8148, !8150, !8151, !8152, !8153, !8156, !8162, !8167, !8168, !8169, !8170}
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "next_in", scope: !8136, file: !8135, line: 87, baseType: !8139, size: 64, align: 64)
!8139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8140, size: 64, align: 64)
!8140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8141)
!8141 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bytef", file: !8142, line: 400, baseType: !8143)
!8142 = !DIFile(filename: "/usr/local/include/zconf.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!8143 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !8142, line: 391, baseType: !1050)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "avail_in", scope: !8136, file: !8135, line: 88, baseType: !8145, size: 32, align: 32, offset: 64)
!8145 = !DIDerivedType(tag: DW_TAG_typedef, name: "uInt", file: !8142, line: 393, baseType: !1038)
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "total_in", scope: !8136, file: !8135, line: 89, baseType: !8147, size: 64, align: 64, offset: 128)
!8147 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLong", file: !8142, line: 394, baseType: !1046)
!8148 = !DIDerivedType(tag: DW_TAG_member, name: "next_out", scope: !8136, file: !8135, line: 91, baseType: !8149, size: 64, align: 64, offset: 192)
!8149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8141, size: 64, align: 64)
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "avail_out", scope: !8136, file: !8135, line: 92, baseType: !8145, size: 32, align: 32, offset: 256)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "total_out", scope: !8136, file: !8135, line: 93, baseType: !8147, size: 64, align: 64, offset: 320)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !8136, file: !8135, line: 95, baseType: !1121, size: 64, align: 64, offset: 384)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8136, file: !8135, line: 96, baseType: !8154, size: 64, align: 64, offset: 448)
!8154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8155, size: 64, align: 64)
!8155 = !DICompositeType(tag: DW_TAG_structure_type, name: "internal_state", file: !8135, line: 84, flags: DIFlagFwdDecl)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "zalloc", scope: !8136, file: !8135, line: 98, baseType: !8157, size: 64, align: 64, offset: 512)
!8157 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_func", file: !8135, line: 81, baseType: !8158)
!8158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8159, size: 64, align: 64)
!8159 = !DISubroutineType(types: !8160)
!8160 = !{!8161, !8161, !8145, !8145}
!8161 = !DIDerivedType(tag: DW_TAG_typedef, name: "voidpf", file: !8142, line: 409, baseType: !1078)
!8162 = !DIDerivedType(tag: DW_TAG_member, name: "zfree", scope: !8136, file: !8135, line: 99, baseType: !8163, size: 64, align: 64, offset: 576)
!8163 = !DIDerivedType(tag: DW_TAG_typedef, name: "free_func", file: !8135, line: 82, baseType: !8164)
!8164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8165, size: 64, align: 64)
!8165 = !DISubroutineType(types: !8166)
!8166 = !{null, !8161, !8161}
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !8136, file: !8135, line: 100, baseType: !8161, size: 64, align: 64, offset: 640)
!8168 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !8136, file: !8135, line: 102, baseType: !1039, size: 32, align: 32, offset: 704)
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "adler", scope: !8136, file: !8135, line: 104, baseType: !8147, size: 64, align: 64, offset: 768)
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8136, file: !8135, line: 105, baseType: !8147, size: 64, align: 64, offset: 832)
!8171 = !DILocation(line: 1413, column: 18, scope: !8133)
!8172 = !DILocation(line: 1414, column: 12, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8133, file: !939, line: 1414, column: 12)
!8174 = !DILocation(line: 1414, column: 34, scope: !8173)
!8175 = !DILocation(line: 1414, column: 12, scope: !8133)
!8176 = !DILocation(line: 1415, column: 13, scope: !8173)
!8177 = !DILocation(line: 1416, column: 27, scope: !8133)
!8178 = !DILocation(line: 1416, column: 17, scope: !8133)
!8179 = !DILocation(line: 1416, column: 25, scope: !8133)
!8180 = !DILocation(line: 1417, column: 28, scope: !8133)
!8181 = !DILocation(line: 1417, column: 17, scope: !8133)
!8182 = !DILocation(line: 1417, column: 26, scope: !8133)
!8183 = !DILocation(line: 1418, column: 9, scope: !8133)
!8184 = distinct !{!8184, !8183}
!8185 = !DILocation(line: 1419, column: 22, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8133, file: !939, line: 1418, column: 12)
!8187 = !DILocation(line: 1420, column: 37, scope: !8186)
!8188 = !DILocation(line: 1420, column: 47, scope: !8186)
!8189 = !DILocation(line: 1420, column: 56, scope: !8186)
!8190 = !DILocation(line: 1420, column: 26, scope: !8186)
!8191 = !DILocation(line: 1420, column: 24, scope: !8186)
!8192 = !DILocation(line: 1421, column: 18, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8186, file: !939, line: 1421, column: 17)
!8194 = !DILocation(line: 1421, column: 17, scope: !8186)
!8195 = !DILocation(line: 1422, column: 17, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8193, file: !939, line: 1421, column: 30)
!8197 = !DILocation(line: 1423, column: 24, scope: !8196)
!8198 = !DILocation(line: 1424, column: 17, scope: !8196)
!8199 = !DILocation(line: 1426, column: 24, scope: !8186)
!8200 = !DILocation(line: 1426, column: 22, scope: !8186)
!8201 = !DILocation(line: 1427, column: 33, scope: !8186)
!8202 = !DILocation(line: 1427, column: 52, scope: !8186)
!8203 = !DILocation(line: 1427, column: 42, scope: !8186)
!8204 = !DILocation(line: 1427, column: 21, scope: !8186)
!8205 = !DILocation(line: 1427, column: 31, scope: !8186)
!8206 = !DILocation(line: 1428, column: 32, scope: !8186)
!8207 = !DILocation(line: 1428, column: 51, scope: !8186)
!8208 = !DILocation(line: 1428, column: 41, scope: !8186)
!8209 = !DILocation(line: 1428, column: 21, scope: !8186)
!8210 = !DILocation(line: 1428, column: 30, scope: !8186)
!8211 = !DILocation(line: 1429, column: 22, scope: !8186)
!8212 = !DILocation(line: 1429, column: 20, scope: !8186)
!8213 = !DILocation(line: 1430, column: 9, scope: !8186)
!8214 = !DILocation(line: 1430, column: 18, scope: !8215)
!8215 = !DILexicalBlockFile(scope: !8133, file: !939, discriminator: 1)
!8216 = !DILocation(line: 1430, column: 25, scope: !8215)
!8217 = !DILocation(line: 1430, column: 32, scope: !8215)
!8218 = !DILocation(line: 1430, column: 35, scope: !8219)
!8219 = !DILexicalBlockFile(scope: !8133, file: !939, discriminator: 2)
!8220 = !DILocation(line: 1430, column: 44, scope: !8219)
!8221 = !DILocation(line: 1430, column: 9, scope: !8222)
!8222 = !DILexicalBlockFile(scope: !8186, file: !939, discriminator: 3)
!8223 = !DILocation(line: 1431, column: 28, scope: !8133)
!8224 = !DILocation(line: 1431, column: 20, scope: !8133)
!8225 = !DILocation(line: 1431, column: 18, scope: !8133)
!8226 = !DILocation(line: 1432, column: 9, scope: !8133)
!8227 = !DILocation(line: 1433, column: 13, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8133, file: !939, line: 1433, column: 13)
!8229 = !DILocation(line: 1433, column: 20, scope: !8228)
!8230 = !DILocation(line: 1433, column: 13, scope: !8133)
!8231 = !DILocation(line: 1434, column: 17, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8233, file: !939, line: 1434, column: 17)
!8233 = distinct !DILexicalBlock(scope: !8228, file: !939, line: 1433, column: 36)
!8234 = !DILocation(line: 1434, column: 24, scope: !8232)
!8235 = !DILocation(line: 1434, column: 17, scope: !8233)
!8236 = !DILocation(line: 1435, column: 24, scope: !8232)
!8237 = !DILocation(line: 1435, column: 17, scope: !8232)
!8238 = !DILocation(line: 1437, column: 24, scope: !8232)
!8239 = !DILocation(line: 1438, column: 13, scope: !8233)
!8240 = !DILocation(line: 1440, column: 9, scope: !8133)
!8241 = !DILocation(line: 1477, column: 9, scope: !8042)
!8242 = !DILocation(line: 1480, column: 12, scope: !7998)
!8243 = !DILocation(line: 1480, column: 23, scope: !7998)
!8244 = !DILocation(line: 1480, column: 21, scope: !7998)
!8245 = !DILocation(line: 1480, column: 5, scope: !7998)
!8246 = !DILocation(line: 1482, column: 12, scope: !7998)
!8247 = !DILocation(line: 1482, column: 6, scope: !7998)
!8248 = !DILocation(line: 1482, column: 10, scope: !7998)
!8249 = !DILocation(line: 1483, column: 17, scope: !7998)
!8250 = !DILocation(line: 1483, column: 6, scope: !7998)
!8251 = !DILocation(line: 1483, column: 15, scope: !7998)
!8252 = !DILocation(line: 1484, column: 5, scope: !7998)
!8253 = !DILocation(line: 1487, column: 13, scope: !7998)
!8254 = !DILocation(line: 1487, column: 5, scope: !7998)
!8255 = !DILocation(line: 1488, column: 12, scope: !7998)
!8256 = !DILocation(line: 1488, column: 5, scope: !7998)
!8257 = !DILocation(line: 1489, column: 1, scope: !7998)
!8258 = distinct !DISubprogram(name: "get_qt_codec", scope: !939, file: !939, line: 2049, type: !8259, isLocal: true, isDefinition: true, scopeLine: 2050, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!8259 = !DISubroutineType(types: !8260)
!8260 = !{!1039, !3392, !8261, !8262}
!8261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64, align: 64)
!8262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3, size: 64, align: 64)
!8263 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !8264)
!8264 = distinct !DILocation(line: 2068, column: 68, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !939, line: 2059, column: 100)
!8266 = distinct !DILexicalBlock(scope: !8258, file: !939, line: 2059, column: 9)
!8267 = !DILocalVariable(name: "track", arg: 1, scope: !8258, file: !939, line: 2049, type: !3392)
!8268 = !DILocation(line: 2049, column: 40, scope: !8258)
!8269 = !DILocalVariable(name: "fourcc", arg: 2, scope: !8258, file: !939, line: 2049, type: !8261)
!8270 = !DILocation(line: 2049, column: 57, scope: !8258)
!8271 = !DILocalVariable(name: "codec_id", arg: 3, scope: !8258, file: !939, line: 2049, type: !8262)
!8272 = !DILocation(line: 2049, column: 81, scope: !8258)
!8273 = !DILocalVariable(name: "codec_tags", scope: !8258, file: !939, line: 2051, type: !8274)
!8274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8275, size: 64, align: 64)
!8275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8276)
!8276 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecTag", file: !1132, line: 47, baseType: !1131)
!8277 = !DILocation(line: 2051, column: 23, scope: !8258)
!8278 = !DILocation(line: 2053, column: 18, scope: !8258)
!8279 = !DILocation(line: 2053, column: 25, scope: !8258)
!8280 = !DILocation(line: 2053, column: 30, scope: !8258)
!8281 = !DILocation(line: 2053, column: 16, scope: !8258)
!8282 = !DILocation(line: 2059, column: 25, scope: !8266)
!8283 = !DILocation(line: 2059, column: 69, scope: !8266)
!8284 = !DILocation(line: 2059, column: 76, scope: !8266)
!8285 = !DILocation(line: 2059, column: 87, scope: !8266)
!8286 = !DILocation(line: 2059, column: 95, scope: !8266)
!8287 = !DILocation(line: 2059, column: 9, scope: !8266)
!8288 = !DILocation(line: 2059, column: 9, scope: !8258)
!8289 = !DILocalVariable(name: "ret", scope: !8265, file: !939, line: 2060, type: !1039)
!8290 = !DILocation(line: 2060, column: 13, scope: !8265)
!8291 = !DILocation(line: 2060, column: 38, scope: !8265)
!8292 = !DILocation(line: 2060, column: 45, scope: !8265)
!8293 = !DILocation(line: 2060, column: 56, scope: !8265)
!8294 = !DILocation(line: 2061, column: 37, scope: !8265)
!8295 = !DILocation(line: 2061, column: 44, scope: !8265)
!8296 = !DILocation(line: 2061, column: 55, scope: !8265)
!8297 = !DILocation(line: 2061, column: 60, scope: !8265)
!8298 = !DILocation(line: 2061, column: 64, scope: !8265)
!8299 = !DILocation(line: 2060, column: 19, scope: !8265)
!8300 = !DILocation(line: 2062, column: 13, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8265, file: !939, line: 2062, column: 13)
!8302 = !DILocation(line: 2062, column: 17, scope: !8301)
!8303 = !DILocation(line: 2062, column: 13, scope: !8265)
!8304 = !DILocation(line: 2063, column: 20, scope: !8301)
!8305 = !DILocation(line: 2063, column: 13, scope: !8301)
!8306 = !DILocation(line: 2065, column: 34, scope: !8265)
!8307 = !DILocation(line: 2065, column: 41, scope: !8265)
!8308 = !DILocation(line: 2065, column: 52, scope: !8265)
!8309 = !DILocation(line: 2065, column: 57, scope: !8265)
!8310 = !DILocation(line: 2065, column: 9, scope: !8265)
!8311 = !DILocation(line: 2065, column: 16, scope: !8265)
!8312 = !DILocation(line: 2065, column: 27, scope: !8265)
!8313 = !DILocation(line: 2065, column: 32, scope: !8265)
!8314 = !DILocation(line: 2066, column: 17, scope: !8265)
!8315 = !DILocation(line: 2066, column: 24, scope: !8265)
!8316 = !DILocation(line: 2066, column: 35, scope: !8265)
!8317 = !DILocation(line: 2066, column: 40, scope: !8265)
!8318 = !DILocation(line: 2066, column: 45, scope: !8265)
!8319 = !DILocation(line: 2066, column: 52, scope: !8265)
!8320 = !DILocation(line: 2066, column: 63, scope: !8265)
!8321 = !DILocation(line: 2066, column: 69, scope: !8265)
!8322 = !DILocation(line: 2066, column: 76, scope: !8265)
!8323 = !DILocation(line: 2066, column: 87, scope: !8265)
!8324 = !DILocation(line: 2066, column: 9, scope: !8265)
!8325 = !DILocation(line: 2067, column: 9, scope: !8265)
!8326 = !DILocation(line: 2067, column: 16, scope: !8265)
!8327 = !DILocation(line: 2067, column: 27, scope: !8265)
!8328 = !DILocation(line: 2067, column: 32, scope: !8265)
!8329 = !DILocation(line: 2068, column: 79, scope: !8265)
!8330 = !DILocation(line: 2068, column: 86, scope: !8265)
!8331 = !DILocation(line: 2068, column: 97, scope: !8265)
!8332 = !DILocation(line: 2068, column: 68, scope: !8265)
!8333 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !8264)
!8334 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !8264)
!8335 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !8264)
!8336 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !8264)
!8337 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !8264)
!8338 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !8264)
!8339 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !8264)
!8340 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !8264)
!8341 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !8264)
!8342 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !8264)
!8343 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !8264)
!8344 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !8264)
!8345 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !8264)
!8346 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !8264)
!8347 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !8264)
!8348 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !8264)
!8349 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !8264)
!8350 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !8264)
!8351 = !DILocation(line: 2068, column: 36, scope: !8265)
!8352 = !DILocation(line: 2068, column: 43, scope: !8265)
!8353 = !DILocation(line: 2068, column: 54, scope: !8265)
!8354 = !DILocation(line: 2068, column: 62, scope: !8265)
!8355 = !DILocation(line: 2068, column: 65, scope: !8265)
!8356 = !DILocation(line: 2069, column: 5, scope: !8265)
!8357 = !DILocation(line: 2071, column: 47, scope: !8258)
!8358 = !DILocation(line: 2071, column: 54, scope: !8258)
!8359 = !DILocation(line: 2071, column: 65, scope: !8258)
!8360 = !DILocation(line: 2071, column: 70, scope: !8258)
!8361 = !DILocation(line: 2071, column: 77, scope: !8258)
!8362 = !DILocation(line: 2071, column: 6, scope: !8258)
!8363 = !DILocation(line: 2071, column: 13, scope: !8258)
!8364 = !DILocation(line: 2072, column: 33, scope: !8258)
!8365 = !DILocation(line: 2072, column: 46, scope: !8258)
!8366 = !DILocation(line: 2072, column: 45, scope: !8258)
!8367 = !DILocation(line: 2072, column: 17, scope: !8258)
!8368 = !DILocation(line: 2072, column: 6, scope: !8258)
!8369 = !DILocation(line: 2072, column: 15, scope: !8258)
!8370 = !DILocation(line: 2074, column: 5, scope: !8258)
!8371 = !DILocation(line: 2075, column: 1, scope: !8258)
!8372 = !DILocalVariable(name: "codec_id", arg: 1, scope: !2548, file: !939, line: 1722, type: !1051)
!8373 = !DILocation(line: 1722, column: 39, scope: !2548)
!8374 = !DILocalVariable(name: "profile", scope: !2548, file: !939, line: 1725, type: !1039)
!8375 = !DILocation(line: 1725, column: 9, scope: !2548)
!8376 = !DILocation(line: 1727, column: 18, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !2548, file: !939, line: 1727, column: 5)
!8378 = !DILocation(line: 1727, column: 10, scope: !8377)
!8379 = !DILocation(line: 1727, column: 23, scope: !8380)
!8380 = !DILexicalBlockFile(scope: !8381, file: !939, discriminator: 1)
!8381 = distinct !DILexicalBlock(scope: !8377, file: !939, line: 1727, column: 5)
!8382 = !DILocation(line: 1727, column: 31, scope: !8380)
!8383 = !DILocation(line: 1727, column: 5, scope: !8380)
!8384 = !DILocation(line: 1728, column: 20, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8381, file: !939, line: 1728, column: 13)
!8386 = !DILocation(line: 1728, column: 43, scope: !8385)
!8387 = !DILocation(line: 1728, column: 30, scope: !8385)
!8388 = !DILocation(line: 1728, column: 13, scope: !8385)
!8389 = !DILocation(line: 1728, column: 13, scope: !8381)
!8390 = !DILocation(line: 1729, column: 13, scope: !8385)
!8391 = !DILocation(line: 1728, column: 51, scope: !8392)
!8392 = !DILexicalBlockFile(scope: !8385, file: !939, discriminator: 1)
!8393 = !DILocation(line: 1727, column: 92, scope: !8394)
!8394 = !DILexicalBlockFile(scope: !8381, file: !939, discriminator: 2)
!8395 = !DILocation(line: 1727, column: 5, scope: !8394)
!8396 = distinct !{!8396, !8397}
!8397 = !DILocation(line: 1727, column: 5, scope: !2548)
!8398 = !DILocation(line: 1730, column: 12, scope: !2548)
!8399 = !DILocation(line: 1730, column: 20, scope: !2548)
!8400 = !DILocation(line: 1730, column: 5, scope: !2548)
!8401 = distinct !DISubprogram(name: "matroska_aac_sri", scope: !939, file: !939, line: 1733, type: !8402, isLocal: true, isDefinition: true, scopeLine: 1734, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!8402 = !DISubroutineType(types: !8403)
!8403 = !{!1039, !1039}
!8404 = !DILocalVariable(name: "samplerate", arg: 1, scope: !8401, file: !939, line: 1733, type: !1039)
!8405 = !DILocation(line: 1733, column: 33, scope: !8401)
!8406 = !DILocalVariable(name: "sri", scope: !8401, file: !939, line: 1735, type: !1039)
!8407 = !DILocation(line: 1735, column: 9, scope: !8401)
!8408 = !DILocation(line: 1737, column: 14, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8401, file: !939, line: 1737, column: 5)
!8410 = !DILocation(line: 1737, column: 10, scope: !8409)
!8411 = !DILocation(line: 1737, column: 19, scope: !8412)
!8412 = !DILexicalBlockFile(scope: !8413, file: !939, discriminator: 1)
!8413 = distinct !DILexicalBlock(scope: !8409, file: !939, line: 1737, column: 5)
!8414 = !DILocation(line: 1737, column: 23, scope: !8412)
!8415 = !DILocation(line: 1737, column: 5, scope: !8412)
!8416 = !DILocation(line: 1738, column: 44, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8413, file: !939, line: 1738, column: 13)
!8418 = !DILocation(line: 1738, column: 13, scope: !8417)
!8419 = !DILocation(line: 1738, column: 52, scope: !8417)
!8420 = !DILocation(line: 1738, column: 49, scope: !8417)
!8421 = !DILocation(line: 1738, column: 13, scope: !8413)
!8422 = !DILocation(line: 1739, column: 13, scope: !8417)
!8423 = !DILocation(line: 1738, column: 52, scope: !8424)
!8424 = !DILexicalBlockFile(scope: !8417, file: !939, discriminator: 1)
!8425 = !DILocation(line: 1737, column: 116, scope: !8426)
!8426 = !DILexicalBlockFile(scope: !8413, file: !939, discriminator: 2)
!8427 = !DILocation(line: 1737, column: 5, scope: !8426)
!8428 = distinct !{!8428, !8429}
!8429 = !DILocation(line: 1737, column: 5, scope: !8401)
!8430 = !DILocation(line: 1740, column: 12, scope: !8401)
!8431 = !DILocation(line: 1740, column: 5, scope: !8401)
!8432 = distinct !DISubprogram(name: "matroska_parse_flac", scope: !939, file: !939, line: 1749, type: !8433, isLocal: true, isDefinition: true, scopeLine: 1752, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!8433 = !DISubroutineType(types: !8434)
!8434 = !{!1039, !2398, !3392, !1601}
!8435 = !DILocalVariable(name: "b", arg: 1, scope: !8436, file: !8437, line: 93, type: !2103)
!8436 = distinct !DISubprogram(name: "bytestream_get_be24", scope: !8437, file: !8437, line: 93, type: !8438, isLocal: true, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!8437 = !DIFile(filename: "./libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!8438 = !DISubroutineType(types: !8439)
!8439 = !{!1038, !2103}
!8440 = !DILocation(line: 93, column: 95, scope: !8436, inlinedAt: !8441)
!8441 = distinct !DILocation(line: 152, column: 17, scope: !8442, inlinedAt: !8446)
!8442 = distinct !DILexicalBlock(scope: !8443, file: !1001, line: 151, column: 9)
!8443 = distinct !DISubprogram(name: "flac_parse_block_header", scope: !1001, file: !1001, line: 143, type: !8444, isLocal: true, isDefinition: true, scopeLine: 145, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!8444 = !DISubroutineType(types: !8445)
!8445 = !{null, !1087, !1601, !1601, !1601}
!8446 = distinct !DILocation(line: 1772, column: 9, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8432, file: !939, line: 1769, column: 23)
!8448 = !DILocalVariable(name: "b", arg: 1, scope: !8449, file: !8437, line: 95, type: !2103)
!8449 = distinct !DISubprogram(name: "bytestream_get_byte", scope: !8437, file: !8437, line: 95, type: !8438, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!8450 = !DILocation(line: 95, column: 95, scope: !8449, inlinedAt: !8451)
!8451 = distinct !DILocation(line: 146, column: 15, scope: !8443, inlinedAt: !8446)
!8452 = !DILocalVariable(name: "block_header", arg: 1, scope: !8443, file: !1001, line: 143, type: !1087)
!8453 = !DILocation(line: 143, column: 90, scope: !8443, inlinedAt: !8446)
!8454 = !DILocalVariable(name: "last", arg: 2, scope: !8443, file: !1001, line: 144, type: !1601)
!8455 = !DILocation(line: 144, column: 60, scope: !8443, inlinedAt: !8446)
!8456 = !DILocalVariable(name: "type", arg: 3, scope: !8443, file: !1001, line: 144, type: !1601)
!8457 = !DILocation(line: 144, column: 71, scope: !8443, inlinedAt: !8446)
!8458 = !DILocalVariable(name: "size", arg: 4, scope: !8443, file: !1001, line: 144, type: !1601)
!8459 = !DILocation(line: 144, column: 82, scope: !8443, inlinedAt: !8446)
!8460 = !DILocalVariable(name: "tmp", scope: !8443, file: !1001, line: 146, type: !1039)
!8461 = !DILocation(line: 146, column: 9, scope: !8443, inlinedAt: !8446)
!8462 = !DILocalVariable(name: "s", arg: 1, scope: !8432, file: !939, line: 1749, type: !2398)
!8463 = !DILocation(line: 1749, column: 49, scope: !8432)
!8464 = !DILocalVariable(name: "track", arg: 2, scope: !8432, file: !939, line: 1750, type: !3392)
!8465 = !DILocation(line: 1750, column: 47, scope: !8432)
!8466 = !DILocalVariable(name: "offset", arg: 3, scope: !8432, file: !939, line: 1751, type: !1601)
!8467 = !DILocation(line: 1751, column: 37, scope: !8432)
!8468 = !DILocalVariable(name: "st", scope: !8432, file: !939, line: 1753, type: !1478)
!8469 = !DILocation(line: 1753, column: 15, scope: !8432)
!8470 = !DILocation(line: 1753, column: 20, scope: !8432)
!8471 = !DILocation(line: 1753, column: 27, scope: !8432)
!8472 = !DILocalVariable(name: "p", scope: !8432, file: !939, line: 1754, type: !1053)
!8473 = !DILocation(line: 1754, column: 14, scope: !8432)
!8474 = !DILocation(line: 1754, column: 18, scope: !8432)
!8475 = !DILocation(line: 1754, column: 25, scope: !8432)
!8476 = !DILocation(line: 1754, column: 36, scope: !8432)
!8477 = !DILocalVariable(name: "size", scope: !8432, file: !939, line: 1755, type: !1039)
!8478 = !DILocation(line: 1755, column: 9, scope: !8432)
!8479 = !DILocation(line: 1755, column: 16, scope: !8432)
!8480 = !DILocation(line: 1755, column: 23, scope: !8432)
!8481 = !DILocation(line: 1755, column: 34, scope: !8432)
!8482 = !DILocation(line: 1757, column: 9, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8432, file: !939, line: 1757, column: 9)
!8484 = !DILocation(line: 1757, column: 14, scope: !8483)
!8485 = !DILocation(line: 1757, column: 23, scope: !8483)
!8486 = !DILocation(line: 1757, column: 26, scope: !8487)
!8487 = !DILexicalBlockFile(scope: !8483, file: !939, discriminator: 1)
!8488 = !DILocation(line: 1757, column: 31, scope: !8487)
!8489 = !DILocation(line: 1757, column: 9, scope: !8487)
!8490 = !DILocation(line: 1758, column: 16, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8483, file: !939, line: 1757, column: 39)
!8492 = !DILocation(line: 1758, column: 9, scope: !8491)
!8493 = !DILocation(line: 1759, column: 9, scope: !8491)
!8494 = !DILocation(line: 1759, column: 16, scope: !8491)
!8495 = !DILocation(line: 1759, column: 27, scope: !8491)
!8496 = !DILocation(line: 1759, column: 32, scope: !8491)
!8497 = !DILocation(line: 1760, column: 9, scope: !8491)
!8498 = !DILocation(line: 1762, column: 6, scope: !8432)
!8499 = !DILocation(line: 1762, column: 13, scope: !8432)
!8500 = !DILocation(line: 1763, column: 5, scope: !8432)
!8501 = !DILocation(line: 1763, column: 12, scope: !8432)
!8502 = !DILocation(line: 1763, column: 23, scope: !8432)
!8503 = !DILocation(line: 1763, column: 28, scope: !8432)
!8504 = !DILocation(line: 1765, column: 10, scope: !8432)
!8505 = !DILocation(line: 1765, column: 17, scope: !8432)
!8506 = !DILocation(line: 1765, column: 28, scope: !8432)
!8507 = !DILocation(line: 1765, column: 7, scope: !8432)
!8508 = !DILocation(line: 1766, column: 13, scope: !8432)
!8509 = !DILocation(line: 1766, column: 20, scope: !8432)
!8510 = !DILocation(line: 1766, column: 31, scope: !8432)
!8511 = !DILocation(line: 1766, column: 10, scope: !8432)
!8512 = !DILocation(line: 1769, column: 5, scope: !8432)
!8513 = !DILocation(line: 1769, column: 12, scope: !8514)
!8514 = !DILexicalBlockFile(scope: !8432, file: !939, discriminator: 1)
!8515 = !DILocation(line: 1769, column: 17, scope: !8514)
!8516 = !DILocation(line: 1769, column: 5, scope: !8514)
!8517 = !DILocalVariable(name: "block_last", scope: !8447, file: !939, line: 1770, type: !1039)
!8518 = !DILocation(line: 1770, column: 13, scope: !8447)
!8519 = !DILocalVariable(name: "block_type", scope: !8447, file: !939, line: 1770, type: !1039)
!8520 = !DILocation(line: 1770, column: 25, scope: !8447)
!8521 = !DILocalVariable(name: "block_size", scope: !8447, file: !939, line: 1770, type: !1039)
!8522 = !DILocation(line: 1770, column: 37, scope: !8447)
!8523 = !DILocation(line: 1772, column: 33, scope: !8447)
!8524 = !DILocation(line: 1772, column: 9, scope: !8447)
!8525 = !DILocation(line: 146, column: 15, scope: !8443, inlinedAt: !8446)
!8526 = !DILocation(line: 95, column: 102, scope: !8449, inlinedAt: !8451)
!8527 = !DILocation(line: 95, column: 105, scope: !8449, inlinedAt: !8451)
!8528 = !DILocation(line: 95, column: 138, scope: !8449, inlinedAt: !8451)
!8529 = !DILocation(line: 95, column: 137, scope: !8449, inlinedAt: !8451)
!8530 = !DILocation(line: 95, column: 140, scope: !8449, inlinedAt: !8451)
!8531 = !DILocation(line: 95, column: 119, scope: !8449, inlinedAt: !8451)
!8532 = !DILocation(line: 95, column: 118, scope: !8449, inlinedAt: !8451)
!8533 = !DILocation(line: 147, column: 9, scope: !8534, inlinedAt: !8446)
!8534 = distinct !DILexicalBlock(scope: !8443, file: !1001, line: 147, column: 9)
!8535 = !DILocation(line: 147, column: 9, scope: !8443, inlinedAt: !8446)
!8536 = !DILocation(line: 148, column: 17, scope: !8534, inlinedAt: !8446)
!8537 = !DILocation(line: 148, column: 21, scope: !8534, inlinedAt: !8446)
!8538 = !DILocation(line: 148, column: 10, scope: !8534, inlinedAt: !8446)
!8539 = !DILocation(line: 148, column: 15, scope: !8534, inlinedAt: !8446)
!8540 = !DILocation(line: 148, column: 9, scope: !8534, inlinedAt: !8446)
!8541 = !DILocation(line: 149, column: 9, scope: !8542, inlinedAt: !8446)
!8542 = distinct !DILexicalBlock(scope: !8443, file: !1001, line: 149, column: 9)
!8543 = !DILocation(line: 149, column: 9, scope: !8443, inlinedAt: !8446)
!8544 = !DILocation(line: 150, column: 17, scope: !8542, inlinedAt: !8446)
!8545 = !DILocation(line: 150, column: 21, scope: !8542, inlinedAt: !8446)
!8546 = !DILocation(line: 150, column: 10, scope: !8542, inlinedAt: !8446)
!8547 = !DILocation(line: 150, column: 15, scope: !8542, inlinedAt: !8446)
!8548 = !DILocation(line: 150, column: 9, scope: !8542, inlinedAt: !8446)
!8549 = !DILocation(line: 151, column: 9, scope: !8442, inlinedAt: !8446)
!8550 = !DILocation(line: 151, column: 9, scope: !8443, inlinedAt: !8446)
!8551 = !DILocation(line: 152, column: 17, scope: !8442, inlinedAt: !8446)
!8552 = !DILocation(line: 93, column: 102, scope: !8436, inlinedAt: !8441)
!8553 = !DILocation(line: 93, column: 105, scope: !8436, inlinedAt: !8441)
!8554 = !DILocation(line: 93, column: 139, scope: !8436, inlinedAt: !8441)
!8555 = !DILocation(line: 93, column: 138, scope: !8436, inlinedAt: !8441)
!8556 = !DILocation(line: 93, column: 141, scope: !8436, inlinedAt: !8441)
!8557 = !DILocation(line: 93, column: 120, scope: !8436, inlinedAt: !8441)
!8558 = !DILocation(line: 93, column: 150, scope: !8436, inlinedAt: !8441)
!8559 = !DILocation(line: 93, column: 179, scope: !8436, inlinedAt: !8441)
!8560 = !DILocation(line: 93, column: 178, scope: !8436, inlinedAt: !8441)
!8561 = !DILocation(line: 93, column: 181, scope: !8436, inlinedAt: !8441)
!8562 = !DILocation(line: 93, column: 160, scope: !8436, inlinedAt: !8441)
!8563 = !DILocation(line: 93, column: 190, scope: !8436, inlinedAt: !8441)
!8564 = !DILocation(line: 93, column: 157, scope: !8436, inlinedAt: !8441)
!8565 = !DILocation(line: 93, column: 217, scope: !8436, inlinedAt: !8441)
!8566 = !DILocation(line: 93, column: 216, scope: !8436, inlinedAt: !8441)
!8567 = !DILocation(line: 93, column: 219, scope: !8436, inlinedAt: !8441)
!8568 = !DILocation(line: 93, column: 198, scope: !8436, inlinedAt: !8441)
!8569 = !DILocation(line: 93, column: 196, scope: !8436, inlinedAt: !8441)
!8570 = !DILocation(line: 152, column: 10, scope: !8442, inlinedAt: !8446)
!8571 = !DILocation(line: 152, column: 15, scope: !8442, inlinedAt: !8446)
!8572 = !DILocation(line: 152, column: 9, scope: !8442, inlinedAt: !8446)
!8573 = !DILocation(line: 1774, column: 11, scope: !8447)
!8574 = !DILocation(line: 1775, column: 14, scope: !8447)
!8575 = !DILocation(line: 1776, column: 13, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8447, file: !939, line: 1776, column: 13)
!8577 = !DILocation(line: 1776, column: 26, scope: !8576)
!8578 = !DILocation(line: 1776, column: 24, scope: !8576)
!8579 = !DILocation(line: 1776, column: 13, scope: !8447)
!8580 = !DILocation(line: 1777, column: 13, scope: !8576)
!8581 = !DILocation(line: 1780, column: 13, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8447, file: !939, line: 1780, column: 13)
!8583 = !DILocation(line: 1780, column: 24, scope: !8582)
!8584 = !DILocation(line: 1780, column: 13, scope: !8447)
!8585 = !DILocalVariable(name: "dict", scope: !8586, file: !939, line: 1781, type: !1352)
!8586 = distinct !DILexicalBlock(scope: !8582, file: !939, line: 1780, column: 62)
!8587 = !DILocation(line: 1781, column: 27, scope: !8586)
!8588 = !DILocalVariable(name: "chmask", scope: !8586, file: !939, line: 1782, type: !8589)
!8589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8590, size: 64, align: 64)
!8590 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionaryEntry", file: !1354, line: 84, baseType: !8591)
!8591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionaryEntry", file: !1354, line: 81, size: 128, align: 64, elements: !8592)
!8592 = !{!8593, !8594}
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8591, file: !1354, line: 82, baseType: !1051, size: 64, align: 64)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8591, file: !1354, line: 83, baseType: !1051, size: 64, align: 64, offset: 64)
!8595 = !DILocation(line: 1782, column: 32, scope: !8586)
!8596 = !DILocation(line: 1784, column: 31, scope: !8586)
!8597 = !DILocation(line: 1784, column: 41, scope: !8586)
!8598 = !DILocation(line: 1784, column: 44, scope: !8586)
!8599 = !DILocation(line: 1784, column: 13, scope: !8586)
!8600 = !DILocation(line: 1785, column: 34, scope: !8586)
!8601 = !DILocation(line: 1785, column: 22, scope: !8586)
!8602 = !DILocation(line: 1785, column: 20, scope: !8586)
!8603 = !DILocation(line: 1786, column: 17, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8586, file: !939, line: 1786, column: 17)
!8605 = !DILocation(line: 1786, column: 17, scope: !8586)
!8606 = !DILocalVariable(name: "mask", scope: !8607, file: !939, line: 1787, type: !1045)
!8607 = distinct !DILexicalBlock(scope: !8604, file: !939, line: 1786, column: 25)
!8608 = !DILocation(line: 1787, column: 26, scope: !8607)
!8609 = !DILocation(line: 1787, column: 40, scope: !8607)
!8610 = !DILocation(line: 1787, column: 48, scope: !8607)
!8611 = !DILocation(line: 1787, column: 33, scope: !8607)
!8612 = !DILocation(line: 1788, column: 22, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8607, file: !939, line: 1788, column: 21)
!8614 = !DILocation(line: 1788, column: 27, scope: !8613)
!8615 = !DILocation(line: 1788, column: 30, scope: !8616)
!8616 = !DILexicalBlockFile(scope: !8613, file: !939, discriminator: 1)
!8617 = !DILocation(line: 1788, column: 35, scope: !8616)
!8618 = !DILocation(line: 1788, column: 21, scope: !8616)
!8619 = !DILocation(line: 1789, column: 28, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8613, file: !939, line: 1788, column: 50)
!8621 = !DILocation(line: 1789, column: 21, scope: !8620)
!8622 = !DILocation(line: 1791, column: 17, scope: !8620)
!8623 = !DILocation(line: 1792, column: 52, scope: !8613)
!8624 = !DILocation(line: 1792, column: 21, scope: !8613)
!8625 = !DILocation(line: 1792, column: 25, scope: !8613)
!8626 = !DILocation(line: 1792, column: 35, scope: !8613)
!8627 = !DILocation(line: 1792, column: 50, scope: !8613)
!8628 = !DILocation(line: 1793, column: 13, scope: !8607)
!8629 = !DILocation(line: 1794, column: 13, scope: !8586)
!8630 = !DILocation(line: 1795, column: 9, scope: !8586)
!8631 = !DILocation(line: 1797, column: 14, scope: !8447)
!8632 = !DILocation(line: 1797, column: 11, scope: !8447)
!8633 = !DILocation(line: 1798, column: 17, scope: !8447)
!8634 = !DILocation(line: 1798, column: 14, scope: !8447)
!8635 = !DILocation(line: 1769, column: 5, scope: !8636)
!8636 = !DILexicalBlockFile(scope: !8432, file: !939, discriminator: 2)
!8637 = distinct !{!8637, !8512}
!8638 = !DILocation(line: 1801, column: 5, scope: !8432)
!8639 = !DILocation(line: 1802, column: 1, scope: !8432)
!8640 = distinct !DISubprogram(name: "mkv_field_order", scope: !939, file: !939, line: 1804, type: !4071, isLocal: true, isDefinition: true, scopeLine: 1805, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!8641 = !DILocalVariable(name: "matroska", arg: 1, scope: !8640, file: !939, line: 1804, type: !2392)
!8642 = !DILocation(line: 1804, column: 50, scope: !8640)
!8643 = !DILocalVariable(name: "field_order", arg: 2, scope: !8640, file: !939, line: 1804, type: !1047)
!8644 = !DILocation(line: 1804, column: 68, scope: !8640)
!8645 = !DILocalVariable(name: "major", scope: !8640, file: !939, line: 1806, type: !1039)
!8646 = !DILocation(line: 1806, column: 9, scope: !8640)
!8647 = !DILocalVariable(name: "minor", scope: !8640, file: !939, line: 1806, type: !1039)
!8648 = !DILocation(line: 1806, column: 16, scope: !8640)
!8649 = !DILocalVariable(name: "micro", scope: !8640, file: !939, line: 1806, type: !1039)
!8650 = !DILocation(line: 1806, column: 23, scope: !8640)
!8651 = !DILocalVariable(name: "bttb", scope: !8640, file: !939, line: 1806, type: !1039)
!8652 = !DILocation(line: 1806, column: 30, scope: !8640)
!8653 = !DILocation(line: 1810, column: 9, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8640, file: !939, line: 1810, column: 9)
!8655 = !DILocation(line: 1810, column: 19, scope: !8654)
!8656 = !DILocation(line: 1810, column: 29, scope: !8654)
!8657 = !DILocation(line: 1810, column: 39, scope: !8658)
!8658 = !DILexicalBlockFile(scope: !8654, file: !939, discriminator: 1)
!8659 = !DILocation(line: 1810, column: 49, scope: !8658)
!8660 = !DILocation(line: 1810, column: 32, scope: !8658)
!8661 = !DILocation(line: 1810, column: 100, scope: !8658)
!8662 = !DILocation(line: 1810, column: 9, scope: !8658)
!8663 = !DILocation(line: 1811, column: 17, scope: !8654)
!8664 = !DILocation(line: 1811, column: 23, scope: !8654)
!8665 = !DILocation(line: 1811, column: 29, scope: !8654)
!8666 = !DILocation(line: 1811, column: 32, scope: !8658)
!8667 = !DILocation(line: 1811, column: 38, scope: !8658)
!8668 = !DILocation(line: 1811, column: 44, scope: !8658)
!8669 = !DILocation(line: 1811, column: 47, scope: !8670)
!8670 = !DILexicalBlockFile(scope: !8654, file: !939, discriminator: 2)
!8671 = !DILocation(line: 1811, column: 53, scope: !8670)
!8672 = !DILocation(line: 1811, column: 59, scope: !8670)
!8673 = !DILocation(line: 1811, column: 62, scope: !8674)
!8674 = !DILexicalBlockFile(scope: !8654, file: !939, discriminator: 3)
!8675 = !DILocation(line: 1811, column: 68, scope: !8674)
!8676 = !DILocation(line: 1811, column: 59, scope: !8677)
!8677 = !DILexicalBlockFile(scope: !8654, file: !939, discriminator: 4)
!8678 = !DILocation(line: 1811, column: 14, scope: !8677)
!8679 = !DILocation(line: 1811, column: 9, scope: !8677)
!8680 = !DILocation(line: 1813, column: 13, scope: !8640)
!8681 = !DILocation(line: 1813, column: 5, scope: !8640)
!8682 = !DILocation(line: 1815, column: 9, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8640, file: !939, line: 1813, column: 26)
!8684 = !DILocation(line: 1817, column: 9, scope: !8683)
!8685 = !DILocation(line: 1819, column: 9, scope: !8683)
!8686 = !DILocation(line: 1821, column: 9, scope: !8683)
!8687 = !DILocation(line: 1823, column: 16, scope: !8683)
!8688 = !DILocation(line: 1823, column: 9, scope: !8683)
!8689 = !DILocation(line: 1825, column: 16, scope: !8683)
!8690 = !DILocation(line: 1825, column: 9, scope: !8683)
!8691 = !DILocation(line: 1827, column: 9, scope: !8683)
!8692 = !DILocation(line: 1829, column: 1, scope: !8640)
!8693 = distinct !DISubprogram(name: "mkv_stereo_mode_display_mul", scope: !939, file: !939, line: 1831, type: !8694, isLocal: true, isDefinition: true, scopeLine: 1833, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!8694 = !DISubroutineType(types: !8695)
!8695 = !{null, !1039, !1601, !1601}
!8696 = !DILocalVariable(name: "stereo_mode", arg: 1, scope: !8693, file: !939, line: 1831, type: !1039)
!8697 = !DILocation(line: 1831, column: 45, scope: !8693)
!8698 = !DILocalVariable(name: "h_width", arg: 2, scope: !8693, file: !939, line: 1832, type: !1601)
!8699 = !DILocation(line: 1832, column: 46, scope: !8693)
!8700 = !DILocalVariable(name: "h_height", arg: 3, scope: !8693, file: !939, line: 1832, type: !1601)
!8701 = !DILocation(line: 1832, column: 60, scope: !8693)
!8702 = !DILocation(line: 1834, column: 13, scope: !8693)
!8703 = !DILocation(line: 1834, column: 5, scope: !8693)
!8704 = !DILocation(line: 1840, column: 13, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8693, file: !939, line: 1834, column: 26)
!8706 = !DILocation(line: 1845, column: 14, scope: !8705)
!8707 = !DILocation(line: 1845, column: 22, scope: !8705)
!8708 = !DILocation(line: 1846, column: 13, scope: !8705)
!8709 = !DILocation(line: 1851, column: 14, scope: !8705)
!8710 = !DILocation(line: 1851, column: 23, scope: !8705)
!8711 = !DILocation(line: 1852, column: 13, scope: !8705)
!8712 = !DILocation(line: 1854, column: 1, scope: !8693)
!8713 = distinct !DISubprogram(name: "mkv_parse_video_color", scope: !939, file: !939, line: 1856, type: !8714, isLocal: true, isDefinition: true, scopeLine: 1856, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!8714 = !DISubroutineType(types: !8715)
!8715 = !{!1039, !1478, !8716}
!8716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8717, size: 64, align: 64)
!8717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3393)
!8718 = !DILocalVariable(name: "st", arg: 1, scope: !8713, file: !939, line: 1856, type: !1478)
!8719 = !DILocation(line: 1856, column: 44, scope: !8713)
!8720 = !DILocalVariable(name: "track", arg: 2, scope: !8713, file: !939, line: 1856, type: !8716)
!8721 = !DILocation(line: 1856, column: 69, scope: !8713)
!8722 = !DILocalVariable(name: "color", scope: !8713, file: !939, line: 1857, type: !8723)
!8723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8724, size: 64, align: 64)
!8724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8725)
!8725 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTrackVideoColor", file: !939, line: 165, baseType: !8726)
!8726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTrackVideoColor", file: !939, line: 150, size: 1472, align: 64, elements: !8727)
!8727 = !{!8728, !8729, !8730, !8731, !8732, !8733, !8734, !8735, !8736, !8737, !8738, !8739, !8740, !8741}
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_coefficients", scope: !8726, file: !939, line: 151, baseType: !1045, size: 64, align: 64)
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_channel", scope: !8726, file: !939, line: 152, baseType: !1045, size: 64, align: 64, offset: 64)
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sub_horz", scope: !8726, file: !939, line: 153, baseType: !1045, size: 64, align: 64, offset: 128)
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sub_vert", scope: !8726, file: !939, line: 154, baseType: !1045, size: 64, align: 64, offset: 192)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "cb_sub_horz", scope: !8726, file: !939, line: 155, baseType: !1045, size: 64, align: 64, offset: 256)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "cb_sub_vert", scope: !8726, file: !939, line: 156, baseType: !1045, size: 64, align: 64, offset: 320)
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_siting_horz", scope: !8726, file: !939, line: 157, baseType: !1045, size: 64, align: 64, offset: 384)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_siting_vert", scope: !8726, file: !939, line: 158, baseType: !1045, size: 64, align: 64, offset: 448)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !8726, file: !939, line: 159, baseType: !1045, size: 64, align: 64, offset: 512)
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_characteristics", scope: !8726, file: !939, line: 160, baseType: !1045, size: 64, align: 64, offset: 576)
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "primaries", scope: !8726, file: !939, line: 161, baseType: !1045, size: 64, align: 64, offset: 640)
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "max_cll", scope: !8726, file: !939, line: 162, baseType: !1045, size: 64, align: 64, offset: 704)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "max_fall", scope: !8726, file: !939, line: 163, baseType: !1045, size: 64, align: 64, offset: 768)
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "mastering_meta", scope: !8726, file: !939, line: 164, baseType: !8742, size: 640, align: 64, offset: 832)
!8742 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaMasteringMeta", file: !939, line: 148, baseType: !8743)
!8743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaMasteringMeta", file: !939, line: 137, size: 640, align: 64, elements: !8744)
!8744 = !{!8745, !8746, !8747, !8748, !8749, !8750, !8751, !8752, !8753, !8754}
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "r_x", scope: !8743, file: !939, line: 138, baseType: !1057, size: 64, align: 64)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "r_y", scope: !8743, file: !939, line: 139, baseType: !1057, size: 64, align: 64, offset: 64)
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "g_x", scope: !8743, file: !939, line: 140, baseType: !1057, size: 64, align: 64, offset: 128)
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "g_y", scope: !8743, file: !939, line: 141, baseType: !1057, size: 64, align: 64, offset: 192)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "b_x", scope: !8743, file: !939, line: 142, baseType: !1057, size: 64, align: 64, offset: 256)
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "b_y", scope: !8743, file: !939, line: 143, baseType: !1057, size: 64, align: 64, offset: 320)
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "white_x", scope: !8743, file: !939, line: 144, baseType: !1057, size: 64, align: 64, offset: 384)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "white_y", scope: !8743, file: !939, line: 145, baseType: !1057, size: 64, align: 64, offset: 448)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "max_luminance", scope: !8743, file: !939, line: 146, baseType: !1057, size: 64, align: 64, offset: 512)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "min_luminance", scope: !8743, file: !939, line: 147, baseType: !1057, size: 64, align: 64, offset: 576)
!8755 = !DILocation(line: 1857, column: 36, scope: !8713)
!8756 = !DILocation(line: 1857, column: 44, scope: !8713)
!8757 = !DILocation(line: 1857, column: 51, scope: !8713)
!8758 = !DILocation(line: 1857, column: 57, scope: !8713)
!8759 = !DILocation(line: 1857, column: 63, scope: !8713)
!8760 = !DILocalVariable(name: "mastering_meta", scope: !8713, file: !939, line: 1858, type: !8761)
!8761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8762, size: 64, align: 64)
!8762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8742)
!8763 = !DILocation(line: 1858, column: 34, scope: !8713)
!8764 = !DILocalVariable(name: "has_mastering_primaries", scope: !8713, file: !939, line: 1859, type: !1039)
!8765 = !DILocation(line: 1859, column: 9, scope: !8713)
!8766 = !DILocalVariable(name: "has_mastering_luminance", scope: !8713, file: !939, line: 1859, type: !1039)
!8767 = !DILocation(line: 1859, column: 34, scope: !8713)
!8768 = !DILocation(line: 1861, column: 10, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8713, file: !939, line: 1861, column: 9)
!8770 = !DILocation(line: 1861, column: 17, scope: !8769)
!8771 = !DILocation(line: 1861, column: 23, scope: !8769)
!8772 = !DILocation(line: 1861, column: 29, scope: !8769)
!8773 = !DILocation(line: 1861, column: 9, scope: !8713)
!8774 = !DILocation(line: 1862, column: 9, scope: !8769)
!8775 = !DILocation(line: 1864, column: 23, scope: !8713)
!8776 = !DILocation(line: 1864, column: 30, scope: !8713)
!8777 = !DILocation(line: 1864, column: 20, scope: !8713)
!8778 = !DILocation(line: 1867, column: 9, scope: !8713)
!8779 = !DILocation(line: 1867, column: 25, scope: !8713)
!8780 = !DILocation(line: 1867, column: 29, scope: !8713)
!8781 = !DILocation(line: 1867, column: 33, scope: !8713)
!8782 = !DILocation(line: 1867, column: 36, scope: !8783)
!8783 = !DILexicalBlockFile(scope: !8713, file: !939, discriminator: 1)
!8784 = !DILocation(line: 1867, column: 52, scope: !8783)
!8785 = !DILocation(line: 1867, column: 56, scope: !8783)
!8786 = !DILocation(line: 1867, column: 60, scope: !8783)
!8787 = !DILocation(line: 1868, column: 9, scope: !8713)
!8788 = !DILocation(line: 1868, column: 25, scope: !8713)
!8789 = !DILocation(line: 1868, column: 29, scope: !8713)
!8790 = !DILocation(line: 1868, column: 33, scope: !8713)
!8791 = !DILocation(line: 1868, column: 36, scope: !8783)
!8792 = !DILocation(line: 1868, column: 52, scope: !8783)
!8793 = !DILocation(line: 1868, column: 56, scope: !8783)
!8794 = !DILocation(line: 1868, column: 60, scope: !8783)
!8795 = !DILocation(line: 1869, column: 9, scope: !8713)
!8796 = !DILocation(line: 1869, column: 25, scope: !8713)
!8797 = !DILocation(line: 1869, column: 29, scope: !8713)
!8798 = !DILocation(line: 1869, column: 33, scope: !8713)
!8799 = !DILocation(line: 1869, column: 36, scope: !8783)
!8800 = !DILocation(line: 1869, column: 52, scope: !8783)
!8801 = !DILocation(line: 1869, column: 56, scope: !8783)
!8802 = !DILocation(line: 1869, column: 60, scope: !8783)
!8803 = !DILocation(line: 1870, column: 9, scope: !8713)
!8804 = !DILocation(line: 1870, column: 25, scope: !8713)
!8805 = !DILocation(line: 1870, column: 33, scope: !8713)
!8806 = !DILocation(line: 1870, column: 37, scope: !8713)
!8807 = !DILocation(line: 1870, column: 40, scope: !8783)
!8808 = !DILocation(line: 1870, column: 56, scope: !8783)
!8809 = !DILocation(line: 1870, column: 64, scope: !8783)
!8810 = !DILocation(line: 1870, column: 37, scope: !8811)
!8811 = !DILexicalBlockFile(scope: !8713, file: !939, discriminator: 2)
!8812 = !DILocation(line: 1866, column: 29, scope: !8713)
!8813 = !DILocation(line: 1871, column: 31, scope: !8713)
!8814 = !DILocation(line: 1871, column: 47, scope: !8713)
!8815 = !DILocation(line: 1871, column: 61, scope: !8713)
!8816 = !DILocation(line: 1871, column: 29, scope: !8713)
!8817 = !DILocation(line: 1873, column: 9, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8713, file: !939, line: 1873, column: 9)
!8819 = !DILocation(line: 1873, column: 16, scope: !8818)
!8820 = !DILocation(line: 1873, column: 36, scope: !8818)
!8821 = !DILocation(line: 1873, column: 9, scope: !8713)
!8822 = !DILocation(line: 1874, column: 37, scope: !8818)
!8823 = !DILocation(line: 1874, column: 44, scope: !8818)
!8824 = !DILocation(line: 1874, column: 9, scope: !8818)
!8825 = !DILocation(line: 1874, column: 13, scope: !8818)
!8826 = !DILocation(line: 1874, column: 23, scope: !8818)
!8827 = !DILocation(line: 1874, column: 35, scope: !8818)
!8828 = !DILocation(line: 1875, column: 9, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8713, file: !939, line: 1875, column: 9)
!8830 = !DILocation(line: 1875, column: 16, scope: !8829)
!8831 = !DILocation(line: 1875, column: 26, scope: !8829)
!8832 = !DILocation(line: 1875, column: 48, scope: !8829)
!8833 = !DILocation(line: 1876, column: 9, scope: !8829)
!8834 = !DILocation(line: 1876, column: 16, scope: !8829)
!8835 = !DILocation(line: 1876, column: 26, scope: !8829)
!8836 = !DILocation(line: 1875, column: 9, scope: !8783)
!8837 = !DILocation(line: 1877, column: 41, scope: !8829)
!8838 = !DILocation(line: 1877, column: 48, scope: !8829)
!8839 = !DILocation(line: 1877, column: 9, scope: !8829)
!8840 = !DILocation(line: 1877, column: 13, scope: !8829)
!8841 = !DILocation(line: 1877, column: 23, scope: !8829)
!8842 = !DILocation(line: 1877, column: 39, scope: !8829)
!8843 = !DILocation(line: 1878, column: 9, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8713, file: !939, line: 1878, column: 9)
!8845 = !DILocation(line: 1878, column: 16, scope: !8844)
!8846 = !DILocation(line: 1878, column: 41, scope: !8844)
!8847 = !DILocation(line: 1878, column: 63, scope: !8844)
!8848 = !DILocation(line: 1879, column: 9, scope: !8844)
!8849 = !DILocation(line: 1879, column: 16, scope: !8844)
!8850 = !DILocation(line: 1879, column: 41, scope: !8844)
!8851 = !DILocation(line: 1878, column: 9, scope: !8783)
!8852 = !DILocation(line: 1880, column: 35, scope: !8844)
!8853 = !DILocation(line: 1880, column: 42, scope: !8844)
!8854 = !DILocation(line: 1880, column: 9, scope: !8844)
!8855 = !DILocation(line: 1880, column: 13, scope: !8844)
!8856 = !DILocation(line: 1880, column: 23, scope: !8844)
!8857 = !DILocation(line: 1880, column: 33, scope: !8844)
!8858 = !DILocation(line: 1881, column: 9, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8713, file: !939, line: 1881, column: 9)
!8860 = !DILocation(line: 1881, column: 16, scope: !8859)
!8861 = !DILocation(line: 1881, column: 22, scope: !8859)
!8862 = !DILocation(line: 1881, column: 49, scope: !8859)
!8863 = !DILocation(line: 1882, column: 9, scope: !8859)
!8864 = !DILocation(line: 1882, column: 16, scope: !8859)
!8865 = !DILocation(line: 1882, column: 22, scope: !8859)
!8866 = !DILocation(line: 1881, column: 9, scope: !8783)
!8867 = !DILocation(line: 1883, column: 37, scope: !8859)
!8868 = !DILocation(line: 1883, column: 44, scope: !8859)
!8869 = !DILocation(line: 1883, column: 9, scope: !8859)
!8870 = !DILocation(line: 1883, column: 13, scope: !8859)
!8871 = !DILocation(line: 1883, column: 23, scope: !8859)
!8872 = !DILocation(line: 1883, column: 35, scope: !8859)
!8873 = !DILocation(line: 1884, column: 9, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8713, file: !939, line: 1884, column: 9)
!8875 = !DILocation(line: 1884, column: 16, scope: !8874)
!8876 = !DILocation(line: 1884, column: 35, scope: !8874)
!8877 = !DILocation(line: 1884, column: 84, scope: !8874)
!8878 = !DILocation(line: 1885, column: 9, scope: !8874)
!8879 = !DILocation(line: 1885, column: 16, scope: !8874)
!8880 = !DILocation(line: 1885, column: 35, scope: !8874)
!8881 = !DILocation(line: 1885, column: 84, scope: !8874)
!8882 = !DILocation(line: 1886, column: 9, scope: !8874)
!8883 = !DILocation(line: 1886, column: 16, scope: !8874)
!8884 = !DILocation(line: 1886, column: 35, scope: !8874)
!8885 = !DILocation(line: 1886, column: 73, scope: !8874)
!8886 = !DILocation(line: 1887, column: 9, scope: !8874)
!8887 = !DILocation(line: 1887, column: 16, scope: !8874)
!8888 = !DILocation(line: 1887, column: 35, scope: !8874)
!8889 = !DILocation(line: 1884, column: 9, scope: !8783)
!8890 = !DILocation(line: 1889, column: 41, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8874, file: !939, line: 1887, column: 74)
!8892 = !DILocation(line: 1889, column: 48, scope: !8891)
!8893 = !DILocation(line: 1889, column: 67, scope: !8891)
!8894 = !DILocation(line: 1889, column: 72, scope: !8891)
!8895 = !DILocation(line: 1889, column: 40, scope: !8891)
!8896 = !DILocation(line: 1890, column: 41, scope: !8891)
!8897 = !DILocation(line: 1890, column: 48, scope: !8891)
!8898 = !DILocation(line: 1890, column: 67, scope: !8891)
!8899 = !DILocation(line: 1890, column: 72, scope: !8891)
!8900 = !DILocation(line: 1890, column: 40, scope: !8891)
!8901 = !DILocation(line: 1889, column: 13, scope: !8891)
!8902 = !DILocation(line: 1888, column: 9, scope: !8891)
!8903 = !DILocation(line: 1888, column: 13, scope: !8891)
!8904 = !DILocation(line: 1888, column: 23, scope: !8891)
!8905 = !DILocation(line: 1888, column: 39, scope: !8891)
!8906 = !DILocation(line: 1891, column: 5, scope: !8891)
!8907 = !DILocation(line: 1892, column: 9, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8713, file: !939, line: 1892, column: 9)
!8909 = !DILocation(line: 1892, column: 16, scope: !8908)
!8910 = !DILocation(line: 1892, column: 24, scope: !8908)
!8911 = !DILocation(line: 1892, column: 27, scope: !8912)
!8912 = !DILexicalBlockFile(scope: !8908, file: !939, discriminator: 1)
!8913 = !DILocation(line: 1892, column: 34, scope: !8912)
!8914 = !DILocation(line: 1892, column: 9, scope: !8912)
!8915 = !DILocalVariable(name: "size", scope: !8916, file: !939, line: 1893, type: !1296)
!8916 = distinct !DILexicalBlock(scope: !8908, file: !939, line: 1892, column: 44)
!8917 = !DILocation(line: 1893, column: 16, scope: !8916)
!8918 = !DILocalVariable(name: "ret", scope: !8916, file: !939, line: 1894, type: !1039)
!8919 = !DILocation(line: 1894, column: 13, scope: !8916)
!8920 = !DILocalVariable(name: "metadata", scope: !8916, file: !939, line: 1895, type: !8921)
!8921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8922, size: 64, align: 64)
!8922 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVContentLightMetadata", file: !1091, line: 108, baseType: !8923)
!8923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVContentLightMetadata", file: !1091, line: 98, size: 64, align: 32, elements: !8924)
!8924 = !{!8925, !8926}
!8925 = !DIDerivedType(tag: DW_TAG_member, name: "MaxCLL", scope: !8923, file: !1091, line: 102, baseType: !1038, size: 32, align: 32)
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "MaxFALL", scope: !8923, file: !1091, line: 107, baseType: !1038, size: 32, align: 32, offset: 32)
!8927 = !DILocation(line: 1895, column: 33, scope: !8916)
!8928 = !DILocation(line: 1895, column: 44, scope: !8916)
!8929 = !DILocation(line: 1896, column: 14, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8916, file: !939, line: 1896, column: 13)
!8931 = !DILocation(line: 1896, column: 13, scope: !8916)
!8932 = !DILocation(line: 1897, column: 13, scope: !8930)
!8933 = !DILocation(line: 1898, column: 39, scope: !8916)
!8934 = !DILocation(line: 1899, column: 50, scope: !8916)
!8935 = !DILocation(line: 1899, column: 39, scope: !8916)
!8936 = !DILocation(line: 1899, column: 60, scope: !8916)
!8937 = !DILocation(line: 1898, column: 15, scope: !8916)
!8938 = !DILocation(line: 1898, column: 13, scope: !8916)
!8939 = !DILocation(line: 1900, column: 13, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8916, file: !939, line: 1900, column: 13)
!8941 = !DILocation(line: 1900, column: 17, scope: !8940)
!8942 = !DILocation(line: 1900, column: 13, scope: !8916)
!8943 = !DILocation(line: 1901, column: 22, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8940, file: !939, line: 1900, column: 22)
!8945 = !DILocation(line: 1901, column: 13, scope: !8944)
!8946 = !DILocation(line: 1902, column: 20, scope: !8944)
!8947 = !DILocation(line: 1902, column: 13, scope: !8944)
!8948 = !DILocation(line: 1904, column: 28, scope: !8916)
!8949 = !DILocation(line: 1904, column: 35, scope: !8916)
!8950 = !DILocation(line: 1904, column: 9, scope: !8916)
!8951 = !DILocation(line: 1904, column: 19, scope: !8916)
!8952 = !DILocation(line: 1904, column: 26, scope: !8916)
!8953 = !DILocation(line: 1905, column: 29, scope: !8916)
!8954 = !DILocation(line: 1905, column: 36, scope: !8916)
!8955 = !DILocation(line: 1905, column: 9, scope: !8916)
!8956 = !DILocation(line: 1905, column: 19, scope: !8916)
!8957 = !DILocation(line: 1905, column: 27, scope: !8916)
!8958 = !DILocation(line: 1906, column: 5, scope: !8916)
!8959 = !DILocation(line: 1908, column: 9, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8713, file: !939, line: 1908, column: 9)
!8961 = !DILocation(line: 1908, column: 33, scope: !8960)
!8962 = !DILocation(line: 1908, column: 36, scope: !8963)
!8963 = !DILexicalBlockFile(scope: !8960, file: !939, discriminator: 1)
!8964 = !DILocation(line: 1908, column: 9, scope: !8963)
!8965 = !DILocalVariable(name: "chroma_den", scope: !8966, file: !939, line: 1910, type: !1510)
!8966 = distinct !DILexicalBlock(scope: !8960, file: !939, line: 1908, column: 61)
!8967 = !DILocation(line: 1910, column: 19, scope: !8966)
!8968 = !DILocalVariable(name: "luma_den", scope: !8966, file: !939, line: 1911, type: !1510)
!8969 = !DILocation(line: 1911, column: 19, scope: !8966)
!8970 = !DILocalVariable(name: "metadata", scope: !8966, file: !939, line: 1912, type: !1089)
!8971 = !DILocation(line: 1912, column: 37, scope: !8966)
!8972 = !DILocation(line: 1914, column: 17, scope: !8966)
!8973 = !DILocation(line: 1913, column: 43, scope: !8966)
!8974 = !DILocation(line: 1913, column: 13, scope: !8966)
!8975 = !DILocation(line: 1916, column: 14, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8966, file: !939, line: 1916, column: 13)
!8977 = !DILocation(line: 1916, column: 13, scope: !8966)
!8978 = !DILocation(line: 1917, column: 13, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8976, file: !939, line: 1916, column: 24)
!8980 = !DILocation(line: 1919, column: 16, scope: !8966)
!8981 = !DILocation(line: 1919, column: 9, scope: !8966)
!8982 = !DILocation(line: 1920, column: 13, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8966, file: !939, line: 1920, column: 13)
!8984 = !DILocation(line: 1920, column: 13, scope: !8966)
!8985 = !DILocation(line: 1921, column: 13, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8983, file: !939, line: 1920, column: 38)
!8987 = !DILocation(line: 1921, column: 23, scope: !8986)
!8988 = !DILocation(line: 1922, column: 23, scope: !8986)
!8989 = !DILocation(line: 1922, column: 39, scope: !8986)
!8990 = !DILocation(line: 1922, column: 43, scope: !8986)
!8991 = !DILocation(line: 1922, column: 17, scope: !8986)
!8992 = !DILocation(line: 1921, column: 49, scope: !8986)
!8993 = !DILocation(line: 1921, column: 49, scope: !8994)
!8994 = !DILexicalBlockFile(scope: !8986, file: !939, discriminator: 1)
!8995 = !DILocation(line: 1923, column: 13, scope: !8986)
!8996 = !DILocation(line: 1923, column: 23, scope: !8986)
!8997 = !DILocation(line: 1924, column: 23, scope: !8986)
!8998 = !DILocation(line: 1924, column: 39, scope: !8986)
!8999 = !DILocation(line: 1924, column: 43, scope: !8986)
!9000 = !DILocation(line: 1924, column: 17, scope: !8986)
!9001 = !DILocation(line: 1923, column: 49, scope: !8986)
!9002 = !DILocation(line: 1923, column: 49, scope: !8994)
!9003 = !DILocation(line: 1925, column: 13, scope: !8986)
!9004 = !DILocation(line: 1925, column: 23, scope: !8986)
!9005 = !DILocation(line: 1926, column: 23, scope: !8986)
!9006 = !DILocation(line: 1926, column: 39, scope: !8986)
!9007 = !DILocation(line: 1926, column: 43, scope: !8986)
!9008 = !DILocation(line: 1926, column: 17, scope: !8986)
!9009 = !DILocation(line: 1925, column: 49, scope: !8986)
!9010 = !DILocation(line: 1925, column: 49, scope: !8994)
!9011 = !DILocation(line: 1927, column: 13, scope: !8986)
!9012 = !DILocation(line: 1927, column: 23, scope: !8986)
!9013 = !DILocation(line: 1928, column: 23, scope: !8986)
!9014 = !DILocation(line: 1928, column: 39, scope: !8986)
!9015 = !DILocation(line: 1928, column: 43, scope: !8986)
!9016 = !DILocation(line: 1928, column: 17, scope: !8986)
!9017 = !DILocation(line: 1927, column: 49, scope: !8986)
!9018 = !DILocation(line: 1927, column: 49, scope: !8994)
!9019 = !DILocation(line: 1929, column: 13, scope: !8986)
!9020 = !DILocation(line: 1929, column: 23, scope: !8986)
!9021 = !DILocation(line: 1930, column: 23, scope: !8986)
!9022 = !DILocation(line: 1930, column: 39, scope: !8986)
!9023 = !DILocation(line: 1930, column: 43, scope: !8986)
!9024 = !DILocation(line: 1930, column: 17, scope: !8986)
!9025 = !DILocation(line: 1929, column: 49, scope: !8986)
!9026 = !DILocation(line: 1929, column: 49, scope: !8994)
!9027 = !DILocation(line: 1931, column: 13, scope: !8986)
!9028 = !DILocation(line: 1931, column: 23, scope: !8986)
!9029 = !DILocation(line: 1932, column: 23, scope: !8986)
!9030 = !DILocation(line: 1932, column: 39, scope: !8986)
!9031 = !DILocation(line: 1932, column: 43, scope: !8986)
!9032 = !DILocation(line: 1932, column: 17, scope: !8986)
!9033 = !DILocation(line: 1931, column: 49, scope: !8986)
!9034 = !DILocation(line: 1931, column: 49, scope: !8994)
!9035 = !DILocation(line: 1933, column: 13, scope: !8986)
!9036 = !DILocation(line: 1933, column: 23, scope: !8986)
!9037 = !DILocation(line: 1934, column: 23, scope: !8986)
!9038 = !DILocation(line: 1934, column: 39, scope: !8986)
!9039 = !DILocation(line: 1934, column: 47, scope: !8986)
!9040 = !DILocation(line: 1934, column: 17, scope: !8986)
!9041 = !DILocation(line: 1933, column: 40, scope: !8986)
!9042 = !DILocation(line: 1933, column: 40, scope: !8994)
!9043 = !DILocation(line: 1935, column: 13, scope: !8986)
!9044 = !DILocation(line: 1935, column: 23, scope: !8986)
!9045 = !DILocation(line: 1936, column: 23, scope: !8986)
!9046 = !DILocation(line: 1936, column: 39, scope: !8986)
!9047 = !DILocation(line: 1936, column: 47, scope: !8986)
!9048 = !DILocation(line: 1936, column: 17, scope: !8986)
!9049 = !DILocation(line: 1935, column: 40, scope: !8986)
!9050 = !DILocation(line: 1935, column: 40, scope: !8994)
!9051 = !DILocation(line: 1937, column: 13, scope: !8986)
!9052 = !DILocation(line: 1937, column: 23, scope: !8986)
!9053 = !DILocation(line: 1937, column: 37, scope: !8986)
!9054 = !DILocation(line: 1938, column: 9, scope: !8986)
!9055 = !DILocation(line: 1939, column: 13, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !8966, file: !939, line: 1939, column: 13)
!9057 = !DILocation(line: 1939, column: 13, scope: !8966)
!9058 = !DILocation(line: 1940, column: 13, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9056, file: !939, line: 1939, column: 38)
!9060 = !DILocation(line: 1940, column: 23, scope: !9059)
!9061 = !DILocation(line: 1941, column: 23, scope: !9059)
!9062 = !DILocation(line: 1941, column: 39, scope: !9059)
!9063 = !DILocation(line: 1941, column: 53, scope: !9059)
!9064 = !DILocation(line: 1941, column: 17, scope: !9059)
!9065 = !DILocation(line: 1940, column: 39, scope: !9059)
!9066 = !DILocation(line: 1940, column: 39, scope: !9067)
!9067 = !DILexicalBlockFile(scope: !9059, file: !939, discriminator: 1)
!9068 = !DILocation(line: 1942, column: 13, scope: !9059)
!9069 = !DILocation(line: 1942, column: 23, scope: !9059)
!9070 = !DILocation(line: 1943, column: 23, scope: !9059)
!9071 = !DILocation(line: 1943, column: 39, scope: !9059)
!9072 = !DILocation(line: 1943, column: 53, scope: !9059)
!9073 = !DILocation(line: 1943, column: 17, scope: !9059)
!9074 = !DILocation(line: 1942, column: 39, scope: !9059)
!9075 = !DILocation(line: 1942, column: 39, scope: !9067)
!9076 = !DILocation(line: 1944, column: 13, scope: !9059)
!9077 = !DILocation(line: 1944, column: 23, scope: !9059)
!9078 = !DILocation(line: 1944, column: 37, scope: !9059)
!9079 = !DILocation(line: 1945, column: 9, scope: !9059)
!9080 = !DILocation(line: 1946, column: 5, scope: !8966)
!9081 = !DILocation(line: 1947, column: 5, scope: !8713)
!9082 = !DILocation(line: 1948, column: 1, scope: !8713)
!9083 = distinct !DISubprogram(name: "mkv_parse_video_projection", scope: !939, file: !939, line: 1950, type: !8714, isLocal: true, isDefinition: true, scopeLine: 1950, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!9084 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !9085)
!9085 = distinct !DILocation(line: 92, column: 118, scope: !9086, inlinedAt: !9087)
!9086 = distinct !DISubprogram(name: "bytestream_get_be32", scope: !8437, file: !8437, line: 92, type: !8438, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!9087 = distinct !DILocation(line: 92, column: 904, scope: !9088, inlinedAt: !9098)
!9088 = distinct !DISubprogram(name: "bytestream2_get_be32u", scope: !8437, file: !8437, line: 92, type: !9089, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!9089 = !DISubroutineType(types: !9090)
!9090 = !{!1038, !9091}
!9091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9092, size: 64, align: 64)
!9092 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetByteContext", file: !8437, line: 35, baseType: !9093)
!9093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetByteContext", file: !8437, line: 33, size: 192, align: 64, elements: !9094)
!9094 = !{!9095, !9096, !9097}
!9095 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9093, file: !8437, line: 34, baseType: !1087, size: 64, align: 64)
!9096 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9093, file: !8437, line: 34, baseType: !1087, size: 64, align: 64, offset: 64)
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9093, file: !8437, line: 34, baseType: !1087, size: 64, align: 64, offset: 128)
!9098 = distinct !DILocation(line: 92, column: 1122, scope: !9099, inlinedAt: !9101)
!9099 = !DILexicalBlockFile(scope: !9100, file: !8437, discriminator: 2)
!9100 = distinct !DISubprogram(name: "bytestream2_get_be32", scope: !8437, file: !8437, line: 92, type: !9089, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!9101 = distinct !DILocation(line: 1972, column: 17, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9103, file: !939, line: 1971, column: 57)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !939, line: 1971, column: 13)
!9104 = distinct !DILexicalBlock(scope: !9083, file: !939, line: 1969, column: 43)
!9105 = !DILocalVariable(name: "b", arg: 1, scope: !9086, file: !8437, line: 92, type: !2103)
!9106 = !DILocation(line: 92, column: 95, scope: !9086, inlinedAt: !9087)
!9107 = !DILocalVariable(name: "g", arg: 1, scope: !9088, file: !8437, line: 92, type: !9091)
!9108 = !DILocation(line: 92, column: 892, scope: !9088, inlinedAt: !9098)
!9109 = !DILocalVariable(name: "g", arg: 1, scope: !9100, file: !8437, line: 92, type: !9091)
!9110 = !DILocation(line: 92, column: 1034, scope: !9100, inlinedAt: !9101)
!9111 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !9112)
!9112 = distinct !DILocation(line: 92, column: 118, scope: !9086, inlinedAt: !9113)
!9113 = distinct !DILocation(line: 92, column: 904, scope: !9088, inlinedAt: !9114)
!9114 = distinct !DILocation(line: 92, column: 1122, scope: !9099, inlinedAt: !9115)
!9115 = distinct !DILocation(line: 1973, column: 17, scope: !9102)
!9116 = !DILocation(line: 92, column: 95, scope: !9086, inlinedAt: !9113)
!9117 = !DILocation(line: 92, column: 892, scope: !9088, inlinedAt: !9114)
!9118 = !DILocation(line: 92, column: 1034, scope: !9100, inlinedAt: !9115)
!9119 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !9120)
!9120 = distinct !DILocation(line: 92, column: 118, scope: !9086, inlinedAt: !9121)
!9121 = distinct !DILocation(line: 92, column: 904, scope: !9088, inlinedAt: !9122)
!9122 = distinct !DILocation(line: 92, column: 1122, scope: !9099, inlinedAt: !9123)
!9123 = distinct !DILocation(line: 1974, column: 17, scope: !9102)
!9124 = !DILocation(line: 92, column: 95, scope: !9086, inlinedAt: !9121)
!9125 = !DILocation(line: 92, column: 892, scope: !9088, inlinedAt: !9122)
!9126 = !DILocation(line: 92, column: 1034, scope: !9100, inlinedAt: !9123)
!9127 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !9128)
!9128 = distinct !DILocation(line: 92, column: 118, scope: !9086, inlinedAt: !9129)
!9129 = distinct !DILocation(line: 92, column: 904, scope: !9088, inlinedAt: !9130)
!9130 = distinct !DILocation(line: 92, column: 1122, scope: !9099, inlinedAt: !9131)
!9131 = distinct !DILocation(line: 1975, column: 17, scope: !9102)
!9132 = !DILocation(line: 92, column: 95, scope: !9086, inlinedAt: !9129)
!9133 = !DILocation(line: 92, column: 892, scope: !9088, inlinedAt: !9130)
!9134 = !DILocation(line: 92, column: 1034, scope: !9100, inlinedAt: !9131)
!9135 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !9136)
!9136 = distinct !DILocation(line: 92, column: 118, scope: !9086, inlinedAt: !9137)
!9137 = distinct !DILocation(line: 92, column: 904, scope: !9088, inlinedAt: !9138)
!9138 = distinct !DILocation(line: 92, column: 1122, scope: !9099, inlinedAt: !9139)
!9139 = distinct !DILocation(line: 1999, column: 31, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9141, file: !939, line: 1998, column: 64)
!9141 = distinct !DILexicalBlock(scope: !9142, file: !939, line: 1998, column: 20)
!9142 = distinct !DILexicalBlock(scope: !9104, file: !939, line: 1995, column: 13)
!9143 = !DILocation(line: 92, column: 95, scope: !9086, inlinedAt: !9137)
!9144 = !DILocation(line: 92, column: 892, scope: !9088, inlinedAt: !9138)
!9145 = !DILocation(line: 92, column: 1034, scope: !9100, inlinedAt: !9139)
!9146 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !9147)
!9147 = distinct !DILocation(line: 92, column: 118, scope: !9086, inlinedAt: !9148)
!9148 = distinct !DILocation(line: 92, column: 904, scope: !9088, inlinedAt: !9149)
!9149 = distinct !DILocation(line: 92, column: 1122, scope: !9099, inlinedAt: !9150)
!9150 = distinct !DILocation(line: 2006, column: 23, scope: !9140)
!9151 = !DILocation(line: 92, column: 95, scope: !9086, inlinedAt: !9148)
!9152 = !DILocation(line: 92, column: 892, scope: !9088, inlinedAt: !9149)
!9153 = !DILocation(line: 92, column: 1034, scope: !9100, inlinedAt: !9150)
!9154 = !DILocalVariable(name: "g", arg: 1, scope: !9155, file: !8437, line: 164, type: !9091)
!9155 = distinct !DISubprogram(name: "bytestream2_skip", scope: !8437, file: !8437, line: 164, type: !9156, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!9156 = !DISubroutineType(types: !9157)
!9157 = !{null, !9091, !1038}
!9158 = !DILocation(line: 164, column: 84, scope: !9155, inlinedAt: !9159)
!9159 = distinct !DILocation(line: 1967, column: 5, scope: !9083)
!9160 = !DILocalVariable(name: "size", arg: 2, scope: !9155, file: !8437, line: 165, type: !1038)
!9161 = !DILocation(line: 165, column: 60, scope: !9155, inlinedAt: !9159)
!9162 = !DILocation(line: 95, column: 95, scope: !8449, inlinedAt: !9163)
!9163 = distinct !DILocation(line: 95, column: 855, scope: !9164, inlinedAt: !9165)
!9164 = distinct !DISubprogram(name: "bytestream2_get_byteu", scope: !8437, file: !8437, line: 95, type: !9089, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!9165 = distinct !DILocation(line: 95, column: 1073, scope: !9166, inlinedAt: !9168)
!9166 = !DILexicalBlockFile(scope: !9167, file: !8437, discriminator: 2)
!9167 = distinct !DISubprogram(name: "bytestream2_get_byte", scope: !8437, file: !8437, line: 95, type: !9089, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!9168 = distinct !DILocation(line: 1962, column: 9, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9083, file: !939, line: 1962, column: 9)
!9170 = !DILocalVariable(name: "g", arg: 1, scope: !9164, file: !8437, line: 95, type: !9091)
!9171 = !DILocation(line: 95, column: 843, scope: !9164, inlinedAt: !9165)
!9172 = !DILocalVariable(name: "g", arg: 1, scope: !9167, file: !8437, line: 95, type: !9091)
!9173 = !DILocation(line: 95, column: 985, scope: !9167, inlinedAt: !9168)
!9174 = !DILocalVariable(name: "g", arg: 1, scope: !9175, file: !8437, line: 133, type: !9091)
!9175 = distinct !DISubprogram(name: "bytestream2_init", scope: !8437, file: !8437, line: 133, type: !9176, isLocal: true, isDefinition: true, scopeLine: 136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!9176 = !DISubroutineType(types: !9177)
!9177 = !{null, !9091, !1087, !1039}
!9178 = !DILocation(line: 133, column: 84, scope: !9175, inlinedAt: !9179)
!9179 = distinct !DILocation(line: 1959, column: 5, scope: !9083)
!9180 = !DILocalVariable(name: "buf", arg: 2, scope: !9175, file: !8437, line: 134, type: !1087)
!9181 = !DILocation(line: 134, column: 62, scope: !9175, inlinedAt: !9179)
!9182 = !DILocalVariable(name: "buf_size", arg: 3, scope: !9175, file: !8437, line: 135, type: !1039)
!9183 = !DILocation(line: 135, column: 51, scope: !9175, inlinedAt: !9179)
!9184 = !DILocalVariable(name: "st", arg: 1, scope: !9083, file: !939, line: 1950, type: !1478)
!9185 = !DILocation(line: 1950, column: 49, scope: !9083)
!9186 = !DILocalVariable(name: "track", arg: 2, scope: !9083, file: !939, line: 1950, type: !8716)
!9187 = !DILocation(line: 1950, column: 74, scope: !9083)
!9188 = !DILocalVariable(name: "spherical", scope: !9083, file: !939, line: 1951, type: !9189)
!9189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9190, size: 64, align: 64)
!9190 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSphericalMapping", file: !1024, line: 183, baseType: !9191)
!9191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSphericalMapping", file: !1024, line: 82, size: 288, align: 32, elements: !9192)
!9192 = !{!9193, !9194, !9195, !9196, !9197, !9198, !9199, !9200, !9201}
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "projection", scope: !9191, file: !1024, line: 86, baseType: !1023, size: 32, align: 32)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "yaw", scope: !9191, file: !1024, line: 126, baseType: !1112, size: 32, align: 32, offset: 32)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !9191, file: !1024, line: 127, baseType: !1112, size: 32, align: 32, offset: 64)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !9191, file: !1024, line: 128, baseType: !1112, size: 32, align: 32, offset: 96)
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "bound_left", scope: !9191, file: !1024, line: 167, baseType: !1036, size: 32, align: 32, offset: 128)
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "bound_top", scope: !9191, file: !1024, line: 168, baseType: !1036, size: 32, align: 32, offset: 160)
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "bound_right", scope: !9191, file: !1024, line: 169, baseType: !1036, size: 32, align: 32, offset: 192)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "bound_bottom", scope: !9191, file: !1024, line: 170, baseType: !1036, size: 32, align: 32, offset: 224)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !9191, file: !1024, line: 182, baseType: !1036, size: 32, align: 32, offset: 256)
!9202 = !DILocation(line: 1951, column: 25, scope: !9083)
!9203 = !DILocalVariable(name: "projection", scope: !9083, file: !939, line: 1952, type: !1023)
!9204 = !DILocation(line: 1952, column: 32, scope: !9083)
!9205 = !DILocalVariable(name: "spherical_size", scope: !9083, file: !939, line: 1953, type: !1296)
!9206 = !DILocation(line: 1953, column: 12, scope: !9083)
!9207 = !DILocalVariable(name: "l", scope: !9083, file: !939, line: 1954, type: !1036)
!9208 = !DILocation(line: 1954, column: 14, scope: !9083)
!9209 = !DILocalVariable(name: "t", scope: !9083, file: !939, line: 1954, type: !1036)
!9210 = !DILocation(line: 1954, column: 21, scope: !9083)
!9211 = !DILocalVariable(name: "r", scope: !9083, file: !939, line: 1954, type: !1036)
!9212 = !DILocation(line: 1954, column: 28, scope: !9083)
!9213 = !DILocalVariable(name: "b", scope: !9083, file: !939, line: 1954, type: !1036)
!9214 = !DILocation(line: 1954, column: 35, scope: !9083)
!9215 = !DILocalVariable(name: "padding", scope: !9083, file: !939, line: 1955, type: !1036)
!9216 = !DILocation(line: 1955, column: 14, scope: !9083)
!9217 = !DILocalVariable(name: "ret", scope: !9083, file: !939, line: 1956, type: !1039)
!9218 = !DILocation(line: 1956, column: 9, scope: !9083)
!9219 = !DILocalVariable(name: "gb", scope: !9083, file: !939, line: 1957, type: !9092)
!9220 = !DILocation(line: 1957, column: 20, scope: !9083)
!9221 = !DILocation(line: 1959, column: 27, scope: !9083)
!9222 = !DILocation(line: 1959, column: 34, scope: !9083)
!9223 = !DILocation(line: 1959, column: 40, scope: !9083)
!9224 = !DILocation(line: 1959, column: 51, scope: !9083)
!9225 = !DILocation(line: 1959, column: 59, scope: !9083)
!9226 = !DILocation(line: 1960, column: 22, scope: !9083)
!9227 = !DILocation(line: 1960, column: 29, scope: !9083)
!9228 = !DILocation(line: 1960, column: 35, scope: !9083)
!9229 = !DILocation(line: 1960, column: 46, scope: !9083)
!9230 = !DILocation(line: 1960, column: 54, scope: !9083)
!9231 = !DILocation(line: 1959, column: 5, scope: !9083)
!9232 = !DILocation(line: 137, column: 16, scope: !9233, inlinedAt: !9179)
!9233 = !DILexicalBlockFile(scope: !9234, file: !8437, discriminator: 1)
!9234 = distinct !DILexicalBlock(scope: !9235, file: !8437, line: 137, column: 14)
!9235 = distinct !DILexicalBlock(scope: !9175, file: !8437, line: 137, column: 8)
!9236 = !DILocation(line: 137, column: 25, scope: !9233, inlinedAt: !9179)
!9237 = !DILocation(line: 137, column: 14, scope: !9233, inlinedAt: !9179)
!9238 = !DILocation(line: 137, column: 34, scope: !9239, inlinedAt: !9179)
!9239 = !DILexicalBlockFile(scope: !9240, file: !8437, discriminator: 2)
!9240 = distinct !DILexicalBlock(scope: !9234, file: !8437, line: 137, column: 32)
!9241 = !DILocation(line: 137, column: 95, scope: !9242, inlinedAt: !9179)
!9242 = !DILexicalBlockFile(scope: !9239, file: !8437, discriminator: 4)
!9243 = !DILocation(line: 137, column: 95, scope: !9239, inlinedAt: !9179)
!9244 = !DILocation(line: 138, column: 17, scope: !9175, inlinedAt: !9179)
!9245 = !DILocation(line: 138, column: 5, scope: !9175, inlinedAt: !9179)
!9246 = !DILocation(line: 138, column: 8, scope: !9175, inlinedAt: !9179)
!9247 = !DILocation(line: 138, column: 15, scope: !9175, inlinedAt: !9179)
!9248 = !DILocation(line: 139, column: 23, scope: !9175, inlinedAt: !9179)
!9249 = !DILocation(line: 139, column: 5, scope: !9175, inlinedAt: !9179)
!9250 = !DILocation(line: 139, column: 8, scope: !9175, inlinedAt: !9179)
!9251 = !DILocation(line: 139, column: 21, scope: !9175, inlinedAt: !9179)
!9252 = !DILocation(line: 140, column: 21, scope: !9175, inlinedAt: !9179)
!9253 = !DILocation(line: 140, column: 27, scope: !9175, inlinedAt: !9179)
!9254 = !DILocation(line: 140, column: 25, scope: !9175, inlinedAt: !9179)
!9255 = !DILocation(line: 140, column: 5, scope: !9175, inlinedAt: !9179)
!9256 = !DILocation(line: 140, column: 8, scope: !9175, inlinedAt: !9179)
!9257 = !DILocation(line: 140, column: 19, scope: !9175, inlinedAt: !9179)
!9258 = !DILocation(line: 1962, column: 9, scope: !9169)
!9259 = !DILocation(line: 95, column: 994, scope: !9260, inlinedAt: !9168)
!9260 = distinct !DILexicalBlock(scope: !9167, file: !8437, line: 95, column: 994)
!9261 = !DILocation(line: 95, column: 997, scope: !9260, inlinedAt: !9168)
!9262 = !DILocation(line: 95, column: 1010, scope: !9260, inlinedAt: !9168)
!9263 = !DILocation(line: 95, column: 1013, scope: !9260, inlinedAt: !9168)
!9264 = !DILocation(line: 95, column: 1008, scope: !9260, inlinedAt: !9168)
!9265 = !DILocation(line: 95, column: 1020, scope: !9260, inlinedAt: !9168)
!9266 = !DILocation(line: 95, column: 994, scope: !9167, inlinedAt: !9168)
!9267 = !DILocation(line: 95, column: 1039, scope: !9268, inlinedAt: !9168)
!9268 = !DILexicalBlockFile(scope: !9269, file: !8437, discriminator: 1)
!9269 = distinct !DILexicalBlock(scope: !9260, file: !8437, line: 95, column: 1025)
!9270 = !DILocation(line: 95, column: 1042, scope: !9268, inlinedAt: !9168)
!9271 = !DILocation(line: 95, column: 1027, scope: !9268, inlinedAt: !9168)
!9272 = !DILocation(line: 95, column: 1030, scope: !9268, inlinedAt: !9168)
!9273 = !DILocation(line: 95, column: 1037, scope: !9268, inlinedAt: !9168)
!9274 = !DILocation(line: 95, column: 1054, scope: !9268, inlinedAt: !9168)
!9275 = !DILocation(line: 95, column: 1095, scope: !9166, inlinedAt: !9168)
!9276 = !DILocation(line: 95, column: 1073, scope: !9166, inlinedAt: !9168)
!9277 = !DILocation(line: 95, column: 876, scope: !9164, inlinedAt: !9165)
!9278 = !DILocation(line: 95, column: 879, scope: !9164, inlinedAt: !9165)
!9279 = !DILocation(line: 95, column: 855, scope: !9164, inlinedAt: !9165)
!9280 = !DILocation(line: 95, column: 102, scope: !8449, inlinedAt: !9163)
!9281 = !DILocation(line: 95, column: 105, scope: !8449, inlinedAt: !9163)
!9282 = !DILocation(line: 95, column: 138, scope: !8449, inlinedAt: !9163)
!9283 = !DILocation(line: 95, column: 137, scope: !8449, inlinedAt: !9163)
!9284 = !DILocation(line: 95, column: 140, scope: !8449, inlinedAt: !9163)
!9285 = !DILocation(line: 95, column: 119, scope: !8449, inlinedAt: !9163)
!9286 = !DILocation(line: 95, column: 118, scope: !8449, inlinedAt: !9163)
!9287 = !DILocation(line: 95, column: 1066, scope: !9166, inlinedAt: !9168)
!9288 = !DILocation(line: 95, column: 1099, scope: !9289, inlinedAt: !9168)
!9289 = !DILexicalBlockFile(scope: !9167, file: !8437, discriminator: 3)
!9290 = !DILocation(line: 1962, column: 35, scope: !9169)
!9291 = !DILocation(line: 1962, column: 9, scope: !9083)
!9292 = !DILocation(line: 1963, column: 9, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9169, file: !939, line: 1962, column: 41)
!9294 = !DILocation(line: 1964, column: 9, scope: !9293)
!9295 = !DILocation(line: 1967, column: 5, scope: !9083)
!9296 = !DILocation(line: 167, column: 20, scope: !9155, inlinedAt: !9159)
!9297 = !DILocation(line: 167, column: 23, scope: !9155, inlinedAt: !9159)
!9298 = !DILocation(line: 167, column: 36, scope: !9155, inlinedAt: !9159)
!9299 = !DILocation(line: 167, column: 39, scope: !9155, inlinedAt: !9159)
!9300 = !DILocation(line: 167, column: 34, scope: !9155, inlinedAt: !9159)
!9301 = !DILocation(line: 167, column: 50, scope: !9155, inlinedAt: !9159)
!9302 = !DILocation(line: 167, column: 49, scope: !9155, inlinedAt: !9159)
!9303 = !DILocation(line: 167, column: 47, scope: !9155, inlinedAt: !9159)
!9304 = !DILocation(line: 167, column: 19, scope: !9155, inlinedAt: !9159)
!9305 = !DILocation(line: 167, column: 59, scope: !9306, inlinedAt: !9159)
!9306 = !DILexicalBlockFile(scope: !9155, file: !8437, discriminator: 1)
!9307 = !DILocation(line: 167, column: 58, scope: !9306, inlinedAt: !9159)
!9308 = !DILocation(line: 167, column: 19, scope: !9306, inlinedAt: !9159)
!9309 = !DILocation(line: 167, column: 68, scope: !9310, inlinedAt: !9159)
!9310 = !DILexicalBlockFile(scope: !9155, file: !8437, discriminator: 2)
!9311 = !DILocation(line: 167, column: 71, scope: !9310, inlinedAt: !9159)
!9312 = !DILocation(line: 167, column: 84, scope: !9310, inlinedAt: !9159)
!9313 = !DILocation(line: 167, column: 87, scope: !9310, inlinedAt: !9159)
!9314 = !DILocation(line: 167, column: 82, scope: !9310, inlinedAt: !9159)
!9315 = !DILocation(line: 167, column: 19, scope: !9310, inlinedAt: !9159)
!9316 = !DILocation(line: 167, column: 19, scope: !9317, inlinedAt: !9159)
!9317 = !DILexicalBlockFile(scope: !9155, file: !8437, discriminator: 3)
!9318 = !DILocation(line: 167, column: 5, scope: !9317, inlinedAt: !9159)
!9319 = !DILocation(line: 167, column: 8, scope: !9317, inlinedAt: !9159)
!9320 = !DILocation(line: 167, column: 15, scope: !9317, inlinedAt: !9159)
!9321 = !DILocation(line: 1969, column: 13, scope: !9083)
!9322 = !DILocation(line: 1969, column: 20, scope: !9083)
!9323 = !DILocation(line: 1969, column: 26, scope: !9083)
!9324 = !DILocation(line: 1969, column: 37, scope: !9083)
!9325 = !DILocation(line: 1969, column: 5, scope: !9083)
!9326 = !DILocation(line: 1971, column: 13, scope: !9103)
!9327 = !DILocation(line: 1971, column: 20, scope: !9103)
!9328 = !DILocation(line: 1971, column: 26, scope: !9103)
!9329 = !DILocation(line: 1971, column: 37, scope: !9103)
!9330 = !DILocation(line: 1971, column: 45, scope: !9103)
!9331 = !DILocation(line: 1971, column: 50, scope: !9103)
!9332 = !DILocation(line: 1971, column: 13, scope: !9104)
!9333 = !DILocation(line: 1972, column: 17, scope: !9102)
!9334 = !DILocation(line: 92, column: 1043, scope: !9335, inlinedAt: !9101)
!9335 = distinct !DILexicalBlock(scope: !9100, file: !8437, line: 92, column: 1043)
!9336 = !DILocation(line: 92, column: 1046, scope: !9335, inlinedAt: !9101)
!9337 = !DILocation(line: 92, column: 1059, scope: !9335, inlinedAt: !9101)
!9338 = !DILocation(line: 92, column: 1062, scope: !9335, inlinedAt: !9101)
!9339 = !DILocation(line: 92, column: 1057, scope: !9335, inlinedAt: !9101)
!9340 = !DILocation(line: 92, column: 1069, scope: !9335, inlinedAt: !9101)
!9341 = !DILocation(line: 92, column: 1043, scope: !9100, inlinedAt: !9101)
!9342 = !DILocation(line: 92, column: 1088, scope: !9343, inlinedAt: !9101)
!9343 = !DILexicalBlockFile(scope: !9344, file: !8437, discriminator: 1)
!9344 = distinct !DILexicalBlock(scope: !9335, file: !8437, line: 92, column: 1074)
!9345 = !DILocation(line: 92, column: 1091, scope: !9343, inlinedAt: !9101)
!9346 = !DILocation(line: 92, column: 1076, scope: !9343, inlinedAt: !9101)
!9347 = !DILocation(line: 92, column: 1079, scope: !9343, inlinedAt: !9101)
!9348 = !DILocation(line: 92, column: 1086, scope: !9343, inlinedAt: !9101)
!9349 = !DILocation(line: 92, column: 1103, scope: !9343, inlinedAt: !9101)
!9350 = !DILocation(line: 92, column: 1144, scope: !9099, inlinedAt: !9101)
!9351 = !DILocation(line: 92, column: 1122, scope: !9099, inlinedAt: !9101)
!9352 = !DILocation(line: 92, column: 925, scope: !9088, inlinedAt: !9098)
!9353 = !DILocation(line: 92, column: 928, scope: !9088, inlinedAt: !9098)
!9354 = !DILocation(line: 92, column: 904, scope: !9088, inlinedAt: !9098)
!9355 = !DILocation(line: 92, column: 102, scope: !9086, inlinedAt: !9087)
!9356 = !DILocation(line: 92, column: 105, scope: !9086, inlinedAt: !9087)
!9357 = !DILocation(line: 92, column: 162, scope: !9086, inlinedAt: !9087)
!9358 = !DILocation(line: 92, column: 161, scope: !9086, inlinedAt: !9087)
!9359 = !DILocation(line: 92, column: 164, scope: !9086, inlinedAt: !9087)
!9360 = !DILocation(line: 92, column: 171, scope: !9086, inlinedAt: !9087)
!9361 = !DILocation(line: 92, column: 118, scope: !9086, inlinedAt: !9087)
!9362 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !9085)
!9363 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !9085)
!9364 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !9085)
!9365 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !9085)
!9366 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !9085)
!9367 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !9085)
!9368 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !9085)
!9369 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !9085)
!9370 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !9085)
!9371 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !9085)
!9372 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !9085)
!9373 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !9085)
!9374 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !9085)
!9375 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !9085)
!9376 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !9085)
!9377 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !9085)
!9378 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !9085)
!9379 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !9085)
!9380 = !DILocation(line: 92, column: 1115, scope: !9099, inlinedAt: !9101)
!9381 = !DILocation(line: 92, column: 1148, scope: !9382, inlinedAt: !9101)
!9382 = !DILexicalBlockFile(scope: !9100, file: !8437, discriminator: 3)
!9383 = !DILocation(line: 1972, column: 15, scope: !9102)
!9384 = !DILocation(line: 1973, column: 17, scope: !9102)
!9385 = !DILocation(line: 92, column: 1043, scope: !9335, inlinedAt: !9115)
!9386 = !DILocation(line: 92, column: 1046, scope: !9335, inlinedAt: !9115)
!9387 = !DILocation(line: 92, column: 1059, scope: !9335, inlinedAt: !9115)
!9388 = !DILocation(line: 92, column: 1062, scope: !9335, inlinedAt: !9115)
!9389 = !DILocation(line: 92, column: 1057, scope: !9335, inlinedAt: !9115)
!9390 = !DILocation(line: 92, column: 1069, scope: !9335, inlinedAt: !9115)
!9391 = !DILocation(line: 92, column: 1043, scope: !9100, inlinedAt: !9115)
!9392 = !DILocation(line: 92, column: 1088, scope: !9343, inlinedAt: !9115)
!9393 = !DILocation(line: 92, column: 1091, scope: !9343, inlinedAt: !9115)
!9394 = !DILocation(line: 92, column: 1076, scope: !9343, inlinedAt: !9115)
!9395 = !DILocation(line: 92, column: 1079, scope: !9343, inlinedAt: !9115)
!9396 = !DILocation(line: 92, column: 1086, scope: !9343, inlinedAt: !9115)
!9397 = !DILocation(line: 92, column: 1103, scope: !9343, inlinedAt: !9115)
!9398 = !DILocation(line: 92, column: 1144, scope: !9099, inlinedAt: !9115)
!9399 = !DILocation(line: 92, column: 1122, scope: !9099, inlinedAt: !9115)
!9400 = !DILocation(line: 92, column: 925, scope: !9088, inlinedAt: !9114)
!9401 = !DILocation(line: 92, column: 928, scope: !9088, inlinedAt: !9114)
!9402 = !DILocation(line: 92, column: 904, scope: !9088, inlinedAt: !9114)
!9403 = !DILocation(line: 92, column: 102, scope: !9086, inlinedAt: !9113)
!9404 = !DILocation(line: 92, column: 105, scope: !9086, inlinedAt: !9113)
!9405 = !DILocation(line: 92, column: 162, scope: !9086, inlinedAt: !9113)
!9406 = !DILocation(line: 92, column: 161, scope: !9086, inlinedAt: !9113)
!9407 = !DILocation(line: 92, column: 164, scope: !9086, inlinedAt: !9113)
!9408 = !DILocation(line: 92, column: 171, scope: !9086, inlinedAt: !9113)
!9409 = !DILocation(line: 92, column: 118, scope: !9086, inlinedAt: !9113)
!9410 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !9112)
!9411 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !9112)
!9412 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !9112)
!9413 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !9112)
!9414 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !9112)
!9415 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !9112)
!9416 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !9112)
!9417 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !9112)
!9418 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !9112)
!9419 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !9112)
!9420 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !9112)
!9421 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !9112)
!9422 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !9112)
!9423 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !9112)
!9424 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !9112)
!9425 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !9112)
!9426 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !9112)
!9427 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !9112)
!9428 = !DILocation(line: 92, column: 1115, scope: !9099, inlinedAt: !9115)
!9429 = !DILocation(line: 92, column: 1148, scope: !9382, inlinedAt: !9115)
!9430 = !DILocation(line: 1973, column: 15, scope: !9102)
!9431 = !DILocation(line: 1974, column: 17, scope: !9102)
!9432 = !DILocation(line: 92, column: 1043, scope: !9335, inlinedAt: !9123)
!9433 = !DILocation(line: 92, column: 1046, scope: !9335, inlinedAt: !9123)
!9434 = !DILocation(line: 92, column: 1059, scope: !9335, inlinedAt: !9123)
!9435 = !DILocation(line: 92, column: 1062, scope: !9335, inlinedAt: !9123)
!9436 = !DILocation(line: 92, column: 1057, scope: !9335, inlinedAt: !9123)
!9437 = !DILocation(line: 92, column: 1069, scope: !9335, inlinedAt: !9123)
!9438 = !DILocation(line: 92, column: 1043, scope: !9100, inlinedAt: !9123)
!9439 = !DILocation(line: 92, column: 1088, scope: !9343, inlinedAt: !9123)
!9440 = !DILocation(line: 92, column: 1091, scope: !9343, inlinedAt: !9123)
!9441 = !DILocation(line: 92, column: 1076, scope: !9343, inlinedAt: !9123)
!9442 = !DILocation(line: 92, column: 1079, scope: !9343, inlinedAt: !9123)
!9443 = !DILocation(line: 92, column: 1086, scope: !9343, inlinedAt: !9123)
!9444 = !DILocation(line: 92, column: 1103, scope: !9343, inlinedAt: !9123)
!9445 = !DILocation(line: 92, column: 1144, scope: !9099, inlinedAt: !9123)
!9446 = !DILocation(line: 92, column: 1122, scope: !9099, inlinedAt: !9123)
!9447 = !DILocation(line: 92, column: 925, scope: !9088, inlinedAt: !9122)
!9448 = !DILocation(line: 92, column: 928, scope: !9088, inlinedAt: !9122)
!9449 = !DILocation(line: 92, column: 904, scope: !9088, inlinedAt: !9122)
!9450 = !DILocation(line: 92, column: 102, scope: !9086, inlinedAt: !9121)
!9451 = !DILocation(line: 92, column: 105, scope: !9086, inlinedAt: !9121)
!9452 = !DILocation(line: 92, column: 162, scope: !9086, inlinedAt: !9121)
!9453 = !DILocation(line: 92, column: 161, scope: !9086, inlinedAt: !9121)
!9454 = !DILocation(line: 92, column: 164, scope: !9086, inlinedAt: !9121)
!9455 = !DILocation(line: 92, column: 171, scope: !9086, inlinedAt: !9121)
!9456 = !DILocation(line: 92, column: 118, scope: !9086, inlinedAt: !9121)
!9457 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !9120)
!9458 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !9120)
!9459 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !9120)
!9460 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !9120)
!9461 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !9120)
!9462 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !9120)
!9463 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !9120)
!9464 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !9120)
!9465 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !9120)
!9466 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !9120)
!9467 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !9120)
!9468 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !9120)
!9469 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !9120)
!9470 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !9120)
!9471 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !9120)
!9472 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !9120)
!9473 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !9120)
!9474 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !9120)
!9475 = !DILocation(line: 92, column: 1115, scope: !9099, inlinedAt: !9123)
!9476 = !DILocation(line: 92, column: 1148, scope: !9382, inlinedAt: !9123)
!9477 = !DILocation(line: 1974, column: 15, scope: !9102)
!9478 = !DILocation(line: 1975, column: 17, scope: !9102)
!9479 = !DILocation(line: 92, column: 1043, scope: !9335, inlinedAt: !9131)
!9480 = !DILocation(line: 92, column: 1046, scope: !9335, inlinedAt: !9131)
!9481 = !DILocation(line: 92, column: 1059, scope: !9335, inlinedAt: !9131)
!9482 = !DILocation(line: 92, column: 1062, scope: !9335, inlinedAt: !9131)
!9483 = !DILocation(line: 92, column: 1057, scope: !9335, inlinedAt: !9131)
!9484 = !DILocation(line: 92, column: 1069, scope: !9335, inlinedAt: !9131)
!9485 = !DILocation(line: 92, column: 1043, scope: !9100, inlinedAt: !9131)
!9486 = !DILocation(line: 92, column: 1088, scope: !9343, inlinedAt: !9131)
!9487 = !DILocation(line: 92, column: 1091, scope: !9343, inlinedAt: !9131)
!9488 = !DILocation(line: 92, column: 1076, scope: !9343, inlinedAt: !9131)
!9489 = !DILocation(line: 92, column: 1079, scope: !9343, inlinedAt: !9131)
!9490 = !DILocation(line: 92, column: 1086, scope: !9343, inlinedAt: !9131)
!9491 = !DILocation(line: 92, column: 1103, scope: !9343, inlinedAt: !9131)
!9492 = !DILocation(line: 92, column: 1144, scope: !9099, inlinedAt: !9131)
!9493 = !DILocation(line: 92, column: 1122, scope: !9099, inlinedAt: !9131)
!9494 = !DILocation(line: 92, column: 925, scope: !9088, inlinedAt: !9130)
!9495 = !DILocation(line: 92, column: 928, scope: !9088, inlinedAt: !9130)
!9496 = !DILocation(line: 92, column: 904, scope: !9088, inlinedAt: !9130)
!9497 = !DILocation(line: 92, column: 102, scope: !9086, inlinedAt: !9129)
!9498 = !DILocation(line: 92, column: 105, scope: !9086, inlinedAt: !9129)
!9499 = !DILocation(line: 92, column: 162, scope: !9086, inlinedAt: !9129)
!9500 = !DILocation(line: 92, column: 161, scope: !9086, inlinedAt: !9129)
!9501 = !DILocation(line: 92, column: 164, scope: !9086, inlinedAt: !9129)
!9502 = !DILocation(line: 92, column: 171, scope: !9086, inlinedAt: !9129)
!9503 = !DILocation(line: 92, column: 118, scope: !9086, inlinedAt: !9129)
!9504 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !9128)
!9505 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !9128)
!9506 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !9128)
!9507 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !9128)
!9508 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !9128)
!9509 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !9128)
!9510 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !9128)
!9511 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !9128)
!9512 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !9128)
!9513 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !9128)
!9514 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !9128)
!9515 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !9128)
!9516 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !9128)
!9517 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !9128)
!9518 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !9128)
!9519 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !9128)
!9520 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !9128)
!9521 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !9128)
!9522 = !DILocation(line: 92, column: 1115, scope: !9099, inlinedAt: !9131)
!9523 = !DILocation(line: 92, column: 1148, scope: !9382, inlinedAt: !9131)
!9524 = !DILocation(line: 1975, column: 15, scope: !9102)
!9525 = !DILocation(line: 1977, column: 17, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9102, file: !939, line: 1977, column: 17)
!9527 = !DILocation(line: 1977, column: 32, scope: !9526)
!9528 = !DILocation(line: 1977, column: 30, scope: !9526)
!9529 = !DILocation(line: 1977, column: 19, scope: !9526)
!9530 = !DILocation(line: 1977, column: 34, scope: !9526)
!9531 = !DILocation(line: 1977, column: 37, scope: !9532)
!9532 = !DILexicalBlockFile(scope: !9526, file: !939, discriminator: 1)
!9533 = !DILocation(line: 1977, column: 53, scope: !9532)
!9534 = !DILocation(line: 1977, column: 51, scope: !9532)
!9535 = !DILocation(line: 1977, column: 39, scope: !9532)
!9536 = !DILocation(line: 1977, column: 17, scope: !9532)
!9537 = !DILocation(line: 1981, column: 24, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9526, file: !939, line: 1977, column: 56)
!9539 = !DILocation(line: 1981, column: 27, scope: !9538)
!9540 = !DILocation(line: 1981, column: 30, scope: !9538)
!9541 = !DILocation(line: 1981, column: 33, scope: !9538)
!9542 = !DILocation(line: 1978, column: 17, scope: !9538)
!9543 = !DILocation(line: 1982, column: 17, scope: !9538)
!9544 = !DILocation(line: 1984, column: 9, scope: !9102)
!9545 = !DILocation(line: 1984, column: 20, scope: !9546)
!9546 = !DILexicalBlockFile(scope: !9547, file: !939, discriminator: 1)
!9547 = distinct !DILexicalBlock(scope: !9103, file: !939, line: 1984, column: 20)
!9548 = !DILocation(line: 1984, column: 27, scope: !9546)
!9549 = !DILocation(line: 1984, column: 33, scope: !9546)
!9550 = !DILocation(line: 1984, column: 44, scope: !9546)
!9551 = !DILocation(line: 1984, column: 52, scope: !9546)
!9552 = !DILocation(line: 1984, column: 57, scope: !9546)
!9553 = !DILocation(line: 1985, column: 13, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9547, file: !939, line: 1984, column: 63)
!9555 = !DILocation(line: 1986, column: 13, scope: !9554)
!9556 = !DILocation(line: 1989, column: 13, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9104, file: !939, line: 1989, column: 13)
!9558 = !DILocation(line: 1989, column: 15, scope: !9557)
!9559 = !DILocation(line: 1989, column: 18, scope: !9560)
!9560 = !DILexicalBlockFile(scope: !9557, file: !939, discriminator: 1)
!9561 = !DILocation(line: 1989, column: 20, scope: !9560)
!9562 = !DILocation(line: 1989, column: 23, scope: !9563)
!9563 = !DILexicalBlockFile(scope: !9557, file: !939, discriminator: 2)
!9564 = !DILocation(line: 1989, column: 25, scope: !9563)
!9565 = !DILocation(line: 1989, column: 28, scope: !9566)
!9566 = !DILexicalBlockFile(scope: !9557, file: !939, discriminator: 3)
!9567 = !DILocation(line: 1989, column: 13, scope: !9566)
!9568 = !DILocation(line: 1990, column: 24, scope: !9557)
!9569 = !DILocation(line: 1990, column: 13, scope: !9557)
!9570 = !DILocation(line: 1992, column: 24, scope: !9557)
!9571 = !DILocation(line: 1993, column: 9, scope: !9104)
!9572 = !DILocation(line: 1995, column: 13, scope: !9142)
!9573 = !DILocation(line: 1995, column: 20, scope: !9142)
!9574 = !DILocation(line: 1995, column: 26, scope: !9142)
!9575 = !DILocation(line: 1995, column: 37, scope: !9142)
!9576 = !DILocation(line: 1995, column: 45, scope: !9142)
!9577 = !DILocation(line: 1995, column: 50, scope: !9142)
!9578 = !DILocation(line: 1995, column: 13, scope: !9104)
!9579 = !DILocation(line: 1996, column: 13, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9142, file: !939, line: 1995, column: 55)
!9581 = !DILocation(line: 1997, column: 13, scope: !9580)
!9582 = !DILocation(line: 1998, column: 20, scope: !9141)
!9583 = !DILocation(line: 1998, column: 27, scope: !9141)
!9584 = !DILocation(line: 1998, column: 33, scope: !9141)
!9585 = !DILocation(line: 1998, column: 44, scope: !9141)
!9586 = !DILocation(line: 1998, column: 52, scope: !9141)
!9587 = !DILocation(line: 1998, column: 57, scope: !9141)
!9588 = !DILocation(line: 1998, column: 20, scope: !9142)
!9589 = !DILocalVariable(name: "layout", scope: !9140, file: !939, line: 1999, type: !1036)
!9590 = !DILocation(line: 1999, column: 22, scope: !9140)
!9591 = !DILocation(line: 1999, column: 31, scope: !9140)
!9592 = !DILocation(line: 92, column: 1043, scope: !9335, inlinedAt: !9139)
!9593 = !DILocation(line: 92, column: 1046, scope: !9335, inlinedAt: !9139)
!9594 = !DILocation(line: 92, column: 1059, scope: !9335, inlinedAt: !9139)
!9595 = !DILocation(line: 92, column: 1062, scope: !9335, inlinedAt: !9139)
!9596 = !DILocation(line: 92, column: 1057, scope: !9335, inlinedAt: !9139)
!9597 = !DILocation(line: 92, column: 1069, scope: !9335, inlinedAt: !9139)
!9598 = !DILocation(line: 92, column: 1043, scope: !9100, inlinedAt: !9139)
!9599 = !DILocation(line: 92, column: 1088, scope: !9343, inlinedAt: !9139)
!9600 = !DILocation(line: 92, column: 1091, scope: !9343, inlinedAt: !9139)
!9601 = !DILocation(line: 92, column: 1076, scope: !9343, inlinedAt: !9139)
!9602 = !DILocation(line: 92, column: 1079, scope: !9343, inlinedAt: !9139)
!9603 = !DILocation(line: 92, column: 1086, scope: !9343, inlinedAt: !9139)
!9604 = !DILocation(line: 92, column: 1103, scope: !9343, inlinedAt: !9139)
!9605 = !DILocation(line: 92, column: 1144, scope: !9099, inlinedAt: !9139)
!9606 = !DILocation(line: 92, column: 1122, scope: !9099, inlinedAt: !9139)
!9607 = !DILocation(line: 92, column: 925, scope: !9088, inlinedAt: !9138)
!9608 = !DILocation(line: 92, column: 928, scope: !9088, inlinedAt: !9138)
!9609 = !DILocation(line: 92, column: 904, scope: !9088, inlinedAt: !9138)
!9610 = !DILocation(line: 92, column: 102, scope: !9086, inlinedAt: !9137)
!9611 = !DILocation(line: 92, column: 105, scope: !9086, inlinedAt: !9137)
!9612 = !DILocation(line: 92, column: 162, scope: !9086, inlinedAt: !9137)
!9613 = !DILocation(line: 92, column: 161, scope: !9086, inlinedAt: !9137)
!9614 = !DILocation(line: 92, column: 164, scope: !9086, inlinedAt: !9137)
!9615 = !DILocation(line: 92, column: 171, scope: !9086, inlinedAt: !9137)
!9616 = !DILocation(line: 92, column: 118, scope: !9086, inlinedAt: !9137)
!9617 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !9136)
!9618 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !9136)
!9619 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !9136)
!9620 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !9136)
!9621 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !9136)
!9622 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !9136)
!9623 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !9136)
!9624 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !9136)
!9625 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !9136)
!9626 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !9136)
!9627 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !9136)
!9628 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !9136)
!9629 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !9136)
!9630 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !9136)
!9631 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !9136)
!9632 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !9136)
!9633 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !9136)
!9634 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !9136)
!9635 = !DILocation(line: 92, column: 1115, scope: !9099, inlinedAt: !9139)
!9636 = !DILocation(line: 92, column: 1148, scope: !9382, inlinedAt: !9139)
!9637 = !DILocation(line: 2000, column: 17, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9140, file: !939, line: 2000, column: 17)
!9639 = !DILocation(line: 2000, column: 17, scope: !9140)
!9640 = !DILocation(line: 2002, column: 71, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9638, file: !939, line: 2000, column: 25)
!9642 = !DILocation(line: 2001, column: 17, scope: !9641)
!9643 = !DILocation(line: 2003, column: 17, scope: !9641)
!9644 = !DILocation(line: 2005, column: 24, scope: !9140)
!9645 = !DILocation(line: 2006, column: 23, scope: !9140)
!9646 = !DILocation(line: 92, column: 1043, scope: !9335, inlinedAt: !9150)
!9647 = !DILocation(line: 92, column: 1046, scope: !9335, inlinedAt: !9150)
!9648 = !DILocation(line: 92, column: 1059, scope: !9335, inlinedAt: !9150)
!9649 = !DILocation(line: 92, column: 1062, scope: !9335, inlinedAt: !9150)
!9650 = !DILocation(line: 92, column: 1057, scope: !9335, inlinedAt: !9150)
!9651 = !DILocation(line: 92, column: 1069, scope: !9335, inlinedAt: !9150)
!9652 = !DILocation(line: 92, column: 1043, scope: !9100, inlinedAt: !9150)
!9653 = !DILocation(line: 92, column: 1088, scope: !9343, inlinedAt: !9150)
!9654 = !DILocation(line: 92, column: 1091, scope: !9343, inlinedAt: !9150)
!9655 = !DILocation(line: 92, column: 1076, scope: !9343, inlinedAt: !9150)
!9656 = !DILocation(line: 92, column: 1079, scope: !9343, inlinedAt: !9150)
!9657 = !DILocation(line: 92, column: 1086, scope: !9343, inlinedAt: !9150)
!9658 = !DILocation(line: 92, column: 1103, scope: !9343, inlinedAt: !9150)
!9659 = !DILocation(line: 92, column: 1144, scope: !9099, inlinedAt: !9150)
!9660 = !DILocation(line: 92, column: 1122, scope: !9099, inlinedAt: !9150)
!9661 = !DILocation(line: 92, column: 925, scope: !9088, inlinedAt: !9149)
!9662 = !DILocation(line: 92, column: 928, scope: !9088, inlinedAt: !9149)
!9663 = !DILocation(line: 92, column: 904, scope: !9088, inlinedAt: !9149)
!9664 = !DILocation(line: 92, column: 102, scope: !9086, inlinedAt: !9148)
!9665 = !DILocation(line: 92, column: 105, scope: !9086, inlinedAt: !9148)
!9666 = !DILocation(line: 92, column: 162, scope: !9086, inlinedAt: !9148)
!9667 = !DILocation(line: 92, column: 161, scope: !9086, inlinedAt: !9148)
!9668 = !DILocation(line: 92, column: 164, scope: !9086, inlinedAt: !9148)
!9669 = !DILocation(line: 92, column: 171, scope: !9086, inlinedAt: !9148)
!9670 = !DILocation(line: 92, column: 118, scope: !9086, inlinedAt: !9148)
!9671 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !9147)
!9672 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !9147)
!9673 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !9147)
!9674 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !9147)
!9675 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !9147)
!9676 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !9147)
!9677 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !9147)
!9678 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !9147)
!9679 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !9147)
!9680 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !9147)
!9681 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !9147)
!9682 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !9147)
!9683 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !9147)
!9684 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !9147)
!9685 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !9147)
!9686 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !9147)
!9687 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !9147)
!9688 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !9147)
!9689 = !DILocation(line: 92, column: 1115, scope: !9099, inlinedAt: !9150)
!9690 = !DILocation(line: 92, column: 1148, scope: !9382, inlinedAt: !9150)
!9691 = !DILocation(line: 2006, column: 21, scope: !9140)
!9692 = !DILocation(line: 2007, column: 9, scope: !9140)
!9693 = !DILocation(line: 2008, column: 13, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9141, file: !939, line: 2007, column: 16)
!9695 = !DILocation(line: 2009, column: 13, scope: !9694)
!9696 = !DILocation(line: 2011, column: 9, scope: !9104)
!9697 = !DILocation(line: 2014, column: 9, scope: !9104)
!9698 = !DILocation(line: 2018, column: 16, scope: !9104)
!9699 = !DILocation(line: 2018, column: 23, scope: !9104)
!9700 = !DILocation(line: 2018, column: 29, scope: !9104)
!9701 = !DILocation(line: 2018, column: 40, scope: !9104)
!9702 = !DILocation(line: 2016, column: 9, scope: !9104)
!9703 = !DILocation(line: 2019, column: 9, scope: !9104)
!9704 = !DILocation(line: 2022, column: 17, scope: !9083)
!9705 = !DILocation(line: 2022, column: 15, scope: !9083)
!9706 = !DILocation(line: 2023, column: 10, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9083, file: !939, line: 2023, column: 9)
!9708 = !DILocation(line: 2023, column: 9, scope: !9083)
!9709 = !DILocation(line: 2024, column: 9, scope: !9707)
!9710 = !DILocation(line: 2026, column: 29, scope: !9083)
!9711 = !DILocation(line: 2026, column: 5, scope: !9083)
!9712 = !DILocation(line: 2026, column: 16, scope: !9083)
!9713 = !DILocation(line: 2026, column: 27, scope: !9083)
!9714 = !DILocation(line: 2028, column: 33, scope: !9083)
!9715 = !DILocation(line: 2028, column: 40, scope: !9083)
!9716 = !DILocation(line: 2028, column: 46, scope: !9083)
!9717 = !DILocation(line: 2028, column: 57, scope: !9083)
!9718 = !DILocation(line: 2028, column: 61, scope: !9083)
!9719 = !DILocation(line: 2028, column: 22, scope: !9083)
!9720 = !DILocation(line: 2028, column: 5, scope: !9083)
!9721 = !DILocation(line: 2028, column: 16, scope: !9083)
!9722 = !DILocation(line: 2028, column: 20, scope: !9083)
!9723 = !DILocation(line: 2029, column: 35, scope: !9083)
!9724 = !DILocation(line: 2029, column: 42, scope: !9083)
!9725 = !DILocation(line: 2029, column: 48, scope: !9083)
!9726 = !DILocation(line: 2029, column: 59, scope: !9083)
!9727 = !DILocation(line: 2029, column: 65, scope: !9083)
!9728 = !DILocation(line: 2029, column: 24, scope: !9083)
!9729 = !DILocation(line: 2029, column: 5, scope: !9083)
!9730 = !DILocation(line: 2029, column: 16, scope: !9083)
!9731 = !DILocation(line: 2029, column: 22, scope: !9083)
!9732 = !DILocation(line: 2030, column: 34, scope: !9083)
!9733 = !DILocation(line: 2030, column: 41, scope: !9083)
!9734 = !DILocation(line: 2030, column: 47, scope: !9083)
!9735 = !DILocation(line: 2030, column: 58, scope: !9083)
!9736 = !DILocation(line: 2030, column: 63, scope: !9083)
!9737 = !DILocation(line: 2030, column: 23, scope: !9083)
!9738 = !DILocation(line: 2030, column: 5, scope: !9083)
!9739 = !DILocation(line: 2030, column: 16, scope: !9083)
!9740 = !DILocation(line: 2030, column: 21, scope: !9083)
!9741 = !DILocation(line: 2032, column: 26, scope: !9083)
!9742 = !DILocation(line: 2032, column: 5, scope: !9083)
!9743 = !DILocation(line: 2032, column: 16, scope: !9083)
!9744 = !DILocation(line: 2032, column: 24, scope: !9083)
!9745 = !DILocation(line: 2034, column: 29, scope: !9083)
!9746 = !DILocation(line: 2034, column: 5, scope: !9083)
!9747 = !DILocation(line: 2034, column: 16, scope: !9083)
!9748 = !DILocation(line: 2034, column: 27, scope: !9083)
!9749 = !DILocation(line: 2035, column: 28, scope: !9083)
!9750 = !DILocation(line: 2035, column: 5, scope: !9083)
!9751 = !DILocation(line: 2035, column: 16, scope: !9083)
!9752 = !DILocation(line: 2035, column: 26, scope: !9083)
!9753 = !DILocation(line: 2036, column: 30, scope: !9083)
!9754 = !DILocation(line: 2036, column: 5, scope: !9083)
!9755 = !DILocation(line: 2036, column: 16, scope: !9083)
!9756 = !DILocation(line: 2036, column: 28, scope: !9083)
!9757 = !DILocation(line: 2037, column: 31, scope: !9083)
!9758 = !DILocation(line: 2037, column: 5, scope: !9083)
!9759 = !DILocation(line: 2037, column: 16, scope: !9083)
!9760 = !DILocation(line: 2037, column: 29, scope: !9083)
!9761 = !DILocation(line: 2039, column: 35, scope: !9083)
!9762 = !DILocation(line: 2039, column: 73, scope: !9083)
!9763 = !DILocation(line: 2039, column: 62, scope: !9083)
!9764 = !DILocation(line: 2040, column: 35, scope: !9083)
!9765 = !DILocation(line: 2039, column: 11, scope: !9083)
!9766 = !DILocation(line: 2039, column: 9, scope: !9083)
!9767 = !DILocation(line: 2041, column: 9, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9083, file: !939, line: 2041, column: 9)
!9769 = !DILocation(line: 2041, column: 13, scope: !9768)
!9770 = !DILocation(line: 2041, column: 9, scope: !9083)
!9771 = !DILocation(line: 2042, column: 18, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9768, file: !939, line: 2041, column: 18)
!9773 = !DILocation(line: 2042, column: 9, scope: !9772)
!9774 = !DILocation(line: 2043, column: 16, scope: !9772)
!9775 = !DILocation(line: 2043, column: 9, scope: !9772)
!9776 = !DILocation(line: 2046, column: 5, scope: !9083)
!9777 = !DILocation(line: 2047, column: 1, scope: !9083)
!9778 = distinct !DISubprogram(name: "av_make_q", scope: !1097, file: !1097, line: 71, type: !9779, isLocal: true, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!9779 = !DISubroutineType(types: !9780)
!9780 = !{!1096, !1039, !1039}
!9781 = !DILocalVariable(name: "num", arg: 1, scope: !9778, file: !1097, line: 71, type: !1039)
!9782 = !DILocation(line: 71, column: 40, scope: !9778)
!9783 = !DILocalVariable(name: "den", arg: 2, scope: !9778, file: !1097, line: 71, type: !1039)
!9784 = !DILocation(line: 71, column: 49, scope: !9778)
!9785 = !DILocalVariable(name: "r", scope: !9778, file: !1097, line: 73, type: !1096)
!9786 = !DILocation(line: 73, column: 16, scope: !9778)
!9787 = !DILocation(line: 73, column: 20, scope: !9778)
!9788 = !DILocation(line: 73, column: 22, scope: !9778)
!9789 = !DILocation(line: 73, column: 27, scope: !9778)
!9790 = !DILocation(line: 74, column: 12, scope: !9778)
!9791 = !DILocation(line: 74, column: 5, scope: !9778)
!9792 = distinct !DISubprogram(name: "matroska_find_track_by_num", scope: !939, file: !939, line: 1338, type: !9793, isLocal: true, isDefinition: true, scopeLine: 1340, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!9793 = !DISubroutineType(types: !9794)
!9794 = !{!3392, !2392, !1039}
!9795 = !DILocalVariable(name: "matroska", arg: 1, scope: !9792, file: !939, line: 1338, type: !2392)
!9796 = !DILocation(line: 1338, column: 72, scope: !9792)
!9797 = !DILocalVariable(name: "num", arg: 2, scope: !9792, file: !939, line: 1339, type: !1039)
!9798 = !DILocation(line: 1339, column: 54, scope: !9792)
!9799 = !DILocalVariable(name: "tracks", scope: !9792, file: !939, line: 1341, type: !3392)
!9800 = !DILocation(line: 1341, column: 20, scope: !9792)
!9801 = !DILocation(line: 1341, column: 29, scope: !9792)
!9802 = !DILocation(line: 1341, column: 39, scope: !9792)
!9803 = !DILocation(line: 1341, column: 46, scope: !9792)
!9804 = !DILocalVariable(name: "i", scope: !9792, file: !939, line: 1342, type: !1039)
!9805 = !DILocation(line: 1342, column: 9, scope: !9792)
!9806 = !DILocation(line: 1344, column: 12, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9792, file: !939, line: 1344, column: 5)
!9808 = !DILocation(line: 1344, column: 10, scope: !9807)
!9809 = !DILocation(line: 1344, column: 17, scope: !9810)
!9810 = !DILexicalBlockFile(scope: !9811, file: !939, discriminator: 1)
!9811 = distinct !DILexicalBlock(scope: !9807, file: !939, line: 1344, column: 5)
!9812 = !DILocation(line: 1344, column: 21, scope: !9810)
!9813 = !DILocation(line: 1344, column: 31, scope: !9810)
!9814 = !DILocation(line: 1344, column: 38, scope: !9810)
!9815 = !DILocation(line: 1344, column: 19, scope: !9810)
!9816 = !DILocation(line: 1344, column: 5, scope: !9810)
!9817 = !DILocation(line: 1345, column: 20, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9811, file: !939, line: 1345, column: 13)
!9819 = !DILocation(line: 1345, column: 13, scope: !9818)
!9820 = !DILocation(line: 1345, column: 23, scope: !9818)
!9821 = !DILocation(line: 1345, column: 30, scope: !9818)
!9822 = !DILocation(line: 1345, column: 27, scope: !9818)
!9823 = !DILocation(line: 1345, column: 13, scope: !9811)
!9824 = !DILocation(line: 1346, column: 28, scope: !9818)
!9825 = !DILocation(line: 1346, column: 21, scope: !9818)
!9826 = !DILocation(line: 1346, column: 13, scope: !9818)
!9827 = !DILocation(line: 1345, column: 30, scope: !9828)
!9828 = !DILexicalBlockFile(scope: !9818, file: !939, discriminator: 1)
!9829 = !DILocation(line: 1344, column: 48, scope: !9830)
!9830 = !DILexicalBlockFile(scope: !9811, file: !939, discriminator: 2)
!9831 = !DILocation(line: 1344, column: 5, scope: !9830)
!9832 = distinct !{!9832, !9833}
!9833 = !DILocation(line: 1344, column: 5, scope: !9792)
!9834 = !DILocation(line: 1348, column: 12, scope: !9792)
!9835 = !DILocation(line: 1348, column: 22, scope: !9792)
!9836 = !DILocation(line: 1348, column: 60, scope: !9792)
!9837 = !DILocation(line: 1348, column: 5, scope: !9792)
!9838 = !DILocation(line: 1349, column: 5, scope: !9792)
!9839 = !DILocation(line: 1350, column: 1, scope: !9792)
!9840 = distinct !DISubprogram(name: "matroska_convert_tag", scope: !939, file: !939, line: 1491, type: !9841, isLocal: true, isDefinition: true, scopeLine: 1493, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!9841 = !DISubroutineType(types: !9842)
!9842 = !{null, !2398, !2751, !2353, !1051}
!9843 = !DILocalVariable(name: "s", arg: 1, scope: !9840, file: !939, line: 1491, type: !2398)
!9844 = !DILocation(line: 1491, column: 51, scope: !9840)
!9845 = !DILocalVariable(name: "list", arg: 2, scope: !9840, file: !939, line: 1491, type: !2751)
!9846 = !DILocation(line: 1491, column: 64, scope: !9840)
!9847 = !DILocalVariable(name: "metadata", arg: 3, scope: !9840, file: !939, line: 1492, type: !2353)
!9848 = !DILocation(line: 1492, column: 49, scope: !9840)
!9849 = !DILocalVariable(name: "prefix", arg: 4, scope: !9840, file: !939, line: 1492, type: !1051)
!9850 = !DILocation(line: 1492, column: 65, scope: !9840)
!9851 = !DILocalVariable(name: "tags", scope: !9840, file: !939, line: 1494, type: !9852)
!9852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9853, size: 64, align: 64)
!9853 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaTag", file: !939, line: 280, baseType: !9854)
!9854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaTag", file: !939, line: 274, size: 384, align: 64, elements: !9855)
!9855 = !{!9856, !9857, !9858, !9859, !9860}
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9854, file: !939, line: 275, baseType: !1051, size: 64, align: 64)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !9854, file: !939, line: 276, baseType: !1051, size: 64, align: 64, offset: 64)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "lang", scope: !9854, file: !939, line: 277, baseType: !1051, size: 64, align: 64, offset: 128)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !9854, file: !939, line: 278, baseType: !1045, size: 64, align: 64, offset: 192)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !9854, file: !939, line: 279, baseType: !2418, size: 128, align: 64, offset: 256)
!9861 = !DILocation(line: 1494, column: 18, scope: !9840)
!9862 = !DILocation(line: 1494, column: 25, scope: !9840)
!9863 = !DILocation(line: 1494, column: 31, scope: !9840)
!9864 = !DILocalVariable(name: "key", scope: !9840, file: !939, line: 1495, type: !2224)
!9865 = !DILocation(line: 1495, column: 10, scope: !9840)
!9866 = !DILocalVariable(name: "i", scope: !9840, file: !939, line: 1496, type: !1039)
!9867 = !DILocation(line: 1496, column: 9, scope: !9840)
!9868 = !DILocation(line: 1498, column: 12, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9840, file: !939, line: 1498, column: 5)
!9870 = !DILocation(line: 1498, column: 10, scope: !9869)
!9871 = !DILocation(line: 1498, column: 17, scope: !9872)
!9872 = !DILexicalBlockFile(scope: !9873, file: !939, discriminator: 1)
!9873 = distinct !DILexicalBlock(scope: !9869, file: !939, line: 1498, column: 5)
!9874 = !DILocation(line: 1498, column: 21, scope: !9872)
!9875 = !DILocation(line: 1498, column: 27, scope: !9872)
!9876 = !DILocation(line: 1498, column: 19, scope: !9872)
!9877 = !DILocation(line: 1498, column: 5, scope: !9872)
!9878 = !DILocalVariable(name: "lang", scope: !9879, file: !939, line: 1499, type: !1121)
!9879 = distinct !DILexicalBlock(scope: !9873, file: !939, line: 1498, column: 41)
!9880 = !DILocation(line: 1499, column: 21, scope: !9879)
!9881 = !DILocation(line: 1499, column: 33, scope: !9879)
!9882 = !DILocation(line: 1499, column: 28, scope: !9879)
!9883 = !DILocation(line: 1499, column: 36, scope: !9879)
!9884 = !DILocation(line: 1499, column: 41, scope: !9879)
!9885 = !DILocation(line: 1500, column: 40, scope: !9879)
!9886 = !DILocation(line: 1500, column: 35, scope: !9879)
!9887 = !DILocation(line: 1500, column: 43, scope: !9879)
!9888 = !DILocation(line: 1500, column: 28, scope: !9879)
!9889 = !DILocation(line: 1499, column: 28, scope: !9890)
!9890 = !DILexicalBlockFile(scope: !9879, file: !939, discriminator: 1)
!9891 = !DILocation(line: 1500, column: 63, scope: !9890)
!9892 = !DILocation(line: 1500, column: 58, scope: !9890)
!9893 = !DILocation(line: 1500, column: 66, scope: !9890)
!9894 = !DILocation(line: 1499, column: 28, scope: !9895)
!9895 = !DILexicalBlockFile(scope: !9879, file: !939, discriminator: 2)
!9896 = !DILocation(line: 1499, column: 28, scope: !9897)
!9897 = !DILexicalBlockFile(scope: !9879, file: !939, discriminator: 3)
!9898 = !DILocation(line: 1499, column: 28, scope: !9899)
!9899 = !DILexicalBlockFile(scope: !9879, file: !939, discriminator: 4)
!9900 = !DILocation(line: 1499, column: 21, scope: !9899)
!9901 = !DILocation(line: 1502, column: 19, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9879, file: !939, line: 1502, column: 13)
!9903 = !DILocation(line: 1502, column: 14, scope: !9902)
!9904 = !DILocation(line: 1502, column: 22, scope: !9902)
!9905 = !DILocation(line: 1502, column: 13, scope: !9879)
!9906 = !DILocation(line: 1503, column: 20, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9902, file: !939, line: 1502, column: 28)
!9908 = !DILocation(line: 1503, column: 13, scope: !9907)
!9909 = !DILocation(line: 1504, column: 13, scope: !9907)
!9910 = !DILocation(line: 1506, column: 13, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9879, file: !939, line: 1506, column: 13)
!9912 = !DILocation(line: 1506, column: 13, scope: !9879)
!9913 = !DILocation(line: 1507, column: 22, scope: !9911)
!9914 = !DILocation(line: 1507, column: 49, scope: !9911)
!9915 = !DILocation(line: 1507, column: 62, scope: !9911)
!9916 = !DILocation(line: 1507, column: 57, scope: !9911)
!9917 = !DILocation(line: 1507, column: 65, scope: !9911)
!9918 = !DILocation(line: 1507, column: 13, scope: !9911)
!9919 = !DILocation(line: 1509, column: 24, scope: !9911)
!9920 = !DILocation(line: 1509, column: 34, scope: !9911)
!9921 = !DILocation(line: 1509, column: 29, scope: !9911)
!9922 = !DILocation(line: 1509, column: 37, scope: !9911)
!9923 = !DILocation(line: 1509, column: 13, scope: !9911)
!9924 = !DILocation(line: 1510, column: 18, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9879, file: !939, line: 1510, column: 13)
!9926 = !DILocation(line: 1510, column: 13, scope: !9925)
!9927 = !DILocation(line: 1510, column: 21, scope: !9925)
!9928 = !DILocation(line: 1510, column: 25, scope: !9925)
!9929 = !DILocation(line: 1510, column: 29, scope: !9930)
!9930 = !DILexicalBlockFile(scope: !9925, file: !939, discriminator: 1)
!9931 = !DILocation(line: 1510, column: 13, scope: !9930)
!9932 = !DILocation(line: 1511, column: 25, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9925, file: !939, line: 1510, column: 35)
!9934 = !DILocation(line: 1511, column: 35, scope: !9933)
!9935 = !DILocation(line: 1511, column: 45, scope: !9933)
!9936 = !DILocation(line: 1511, column: 40, scope: !9933)
!9937 = !DILocation(line: 1511, column: 48, scope: !9933)
!9938 = !DILocation(line: 1511, column: 13, scope: !9933)
!9939 = !DILocation(line: 1512, column: 22, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9933, file: !939, line: 1512, column: 17)
!9941 = !DILocation(line: 1512, column: 17, scope: !9940)
!9942 = !DILocation(line: 1512, column: 25, scope: !9940)
!9943 = !DILocation(line: 1512, column: 29, scope: !9940)
!9944 = !DILocation(line: 1512, column: 17, scope: !9933)
!9945 = !DILocation(line: 1513, column: 38, scope: !9940)
!9946 = !DILocation(line: 1513, column: 47, scope: !9940)
!9947 = !DILocation(line: 1513, column: 42, scope: !9940)
!9948 = !DILocation(line: 1513, column: 50, scope: !9940)
!9949 = !DILocation(line: 1513, column: 55, scope: !9940)
!9950 = !DILocation(line: 1513, column: 65, scope: !9940)
!9951 = !DILocation(line: 1513, column: 17, scope: !9940)
!9952 = !DILocation(line: 1514, column: 9, scope: !9933)
!9953 = !DILocation(line: 1515, column: 13, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9879, file: !939, line: 1515, column: 13)
!9955 = !DILocation(line: 1515, column: 13, scope: !9879)
!9956 = !DILocation(line: 1516, column: 24, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9954, file: !939, line: 1515, column: 19)
!9958 = !DILocation(line: 1516, column: 13, scope: !9957)
!9959 = !DILocation(line: 1517, column: 24, scope: !9957)
!9960 = !DILocation(line: 1517, column: 29, scope: !9957)
!9961 = !DILocation(line: 1517, column: 13, scope: !9957)
!9962 = !DILocation(line: 1518, column: 25, scope: !9957)
!9963 = !DILocation(line: 1518, column: 35, scope: !9957)
!9964 = !DILocation(line: 1518, column: 45, scope: !9957)
!9965 = !DILocation(line: 1518, column: 40, scope: !9957)
!9966 = !DILocation(line: 1518, column: 48, scope: !9957)
!9967 = !DILocation(line: 1518, column: 13, scope: !9957)
!9968 = !DILocation(line: 1519, column: 22, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9957, file: !939, line: 1519, column: 17)
!9970 = !DILocation(line: 1519, column: 17, scope: !9969)
!9971 = !DILocation(line: 1519, column: 25, scope: !9969)
!9972 = !DILocation(line: 1519, column: 29, scope: !9969)
!9973 = !DILocation(line: 1519, column: 17, scope: !9957)
!9974 = !DILocation(line: 1520, column: 38, scope: !9969)
!9975 = !DILocation(line: 1520, column: 47, scope: !9969)
!9976 = !DILocation(line: 1520, column: 42, scope: !9969)
!9977 = !DILocation(line: 1520, column: 50, scope: !9969)
!9978 = !DILocation(line: 1520, column: 55, scope: !9969)
!9979 = !DILocation(line: 1520, column: 65, scope: !9969)
!9980 = !DILocation(line: 1520, column: 17, scope: !9969)
!9981 = !DILocation(line: 1521, column: 9, scope: !9957)
!9982 = !DILocation(line: 1522, column: 5, scope: !9879)
!9983 = !DILocation(line: 1498, column: 37, scope: !9984)
!9984 = !DILexicalBlockFile(scope: !9873, file: !939, discriminator: 2)
!9985 = !DILocation(line: 1498, column: 5, scope: !9984)
!9986 = distinct !{!9986, !9987}
!9987 = !DILocation(line: 1498, column: 5, scope: !9840)
!9988 = !DILocation(line: 1523, column: 22, scope: !9840)
!9989 = !DILocation(line: 1523, column: 5, scope: !9840)
!9990 = !DILocation(line: 1524, column: 1, scope: !9840)
!9991 = distinct !DISubprogram(name: "matroska_deliver_packet", scope: !939, file: !939, line: 2758, type: !9992, isLocal: true, isDefinition: true, scopeLine: 2760, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!9992 = !DISubroutineType(types: !9993)
!9993 = !{!1039, !2392, !1256}
!9994 = !DILocalVariable(name: "matroska", arg: 1, scope: !9991, file: !939, line: 2758, type: !2392)
!9995 = !DILocation(line: 2758, column: 58, scope: !9991)
!9996 = !DILocalVariable(name: "pkt", arg: 2, scope: !9991, file: !939, line: 2759, type: !1256)
!9997 = !DILocation(line: 2759, column: 46, scope: !9991)
!9998 = !DILocation(line: 2761, column: 9, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9991, file: !939, line: 2761, column: 9)
!10000 = !DILocation(line: 2761, column: 19, scope: !9999)
!10001 = !DILocation(line: 2761, column: 9, scope: !9991)
!10002 = !DILocalVariable(name: "tracks", scope: !10003, file: !939, line: 2762, type: !3392)
!10003 = distinct !DILexicalBlock(scope: !9999, file: !939, line: 2761, column: 26)
!10004 = !DILocation(line: 2762, column: 24, scope: !10003)
!10005 = !DILocation(line: 2762, column: 33, scope: !10003)
!10006 = !DILocation(line: 2762, column: 43, scope: !10003)
!10007 = !DILocation(line: 2762, column: 50, scope: !10003)
!10008 = !DILocalVariable(name: "track", scope: !10003, file: !939, line: 2763, type: !3392)
!10009 = !DILocation(line: 2763, column: 24, scope: !10003)
!10010 = !DILocation(line: 2765, column: 29, scope: !10003)
!10011 = !DILocation(line: 2765, column: 39, scope: !10003)
!10012 = !DILocation(line: 2765, column: 47, scope: !10003)
!10013 = !DILocation(line: 2765, column: 57, scope: !10003)
!10014 = !DILocation(line: 2765, column: 68, scope: !10003)
!10015 = !DILocation(line: 2765, column: 9, scope: !10003)
!10016 = !DILocation(line: 2766, column: 25, scope: !10003)
!10017 = !DILocation(line: 2766, column: 30, scope: !10003)
!10018 = !DILocation(line: 2766, column: 18, scope: !10003)
!10019 = !DILocation(line: 2766, column: 15, scope: !10003)
!10020 = !DILocation(line: 2767, column: 13, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10003, file: !939, line: 2767, column: 13)
!10022 = !DILocation(line: 2767, column: 20, scope: !10021)
!10023 = !DILocation(line: 2767, column: 13, scope: !10003)
!10024 = !DILocalVariable(name: "pal", scope: !10025, file: !939, line: 2768, type: !1053)
!10025 = distinct !DILexicalBlock(scope: !10021, file: !939, line: 2767, column: 33)
!10026 = !DILocation(line: 2768, column: 22, scope: !10025)
!10027 = !DILocation(line: 2768, column: 52, scope: !10025)
!10028 = !DILocation(line: 2768, column: 28, scope: !10025)
!10029 = !DILocation(line: 2769, column: 18, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10025, file: !939, line: 2769, column: 17)
!10031 = !DILocation(line: 2769, column: 17, scope: !10025)
!10032 = !DILocation(line: 2770, column: 24, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10030, file: !939, line: 2769, column: 23)
!10034 = !DILocation(line: 2770, column: 34, scope: !10033)
!10035 = !DILocation(line: 2770, column: 17, scope: !10033)
!10036 = !DILocation(line: 2771, column: 13, scope: !10033)
!10037 = !DILocation(line: 2772, column: 24, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10030, file: !939, line: 2771, column: 20)
!10039 = !DILocation(line: 2772, column: 29, scope: !10038)
!10040 = !DILocation(line: 2772, column: 36, scope: !10038)
!10041 = !DILocation(line: 2772, column: 17, scope: !10038)
!10042 = !DILocation(line: 2774, column: 13, scope: !10025)
!10043 = !DILocation(line: 2774, column: 20, scope: !10025)
!10044 = !DILocation(line: 2774, column: 32, scope: !10025)
!10045 = !DILocation(line: 2775, column: 9, scope: !10025)
!10046 = !DILocation(line: 2776, column: 9, scope: !10003)
!10047 = !DILocation(line: 2779, column: 5, scope: !9991)
!10048 = !DILocation(line: 2780, column: 1, scope: !9991)
!10049 = distinct !DISubprogram(name: "matroska_parse_cluster", scope: !939, file: !939, line: 3514, type: !7823, isLocal: true, isDefinition: true, scopeLine: 3515, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!10050 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !10051)
!10051 = distinct !DILocation(line: 3524, column: 11, scope: !10049)
!10052 = !DILocalVariable(name: "matroska", arg: 1, scope: !10049, file: !939, line: 3514, type: !2392)
!10053 = !DILocation(line: 3514, column: 57, scope: !10049)
!10054 = !DILocalVariable(name: "cluster", scope: !10049, file: !939, line: 3516, type: !2451)
!10055 = !DILocation(line: 3516, column: 21, scope: !10049)
!10056 = !DILocalVariable(name: "blocks_list", scope: !10049, file: !939, line: 3517, type: !2751)
!10057 = !DILocation(line: 3517, column: 15, scope: !10049)
!10058 = !DILocalVariable(name: "blocks", scope: !10049, file: !939, line: 3518, type: !10059)
!10059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10060, size: 64, align: 64)
!10060 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatroskaBlock", file: !939, line: 380, baseType: !10061)
!10061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatroskaBlock", file: !939, line: 372, size: 832, align: 64, elements: !10062)
!10062 = !{!10063, !10064, !10065, !10066, !10067, !10068, !10069}
!10063 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !10061, file: !939, line: 373, baseType: !1045, size: 64, align: 64)
!10064 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !10061, file: !939, line: 374, baseType: !1047, size: 64, align: 64, offset: 64)
!10065 = !DIDerivedType(tag: DW_TAG_member, name: "non_simple", scope: !10061, file: !939, line: 375, baseType: !1045, size: 64, align: 64, offset: 128)
!10066 = !DIDerivedType(tag: DW_TAG_member, name: "bin", scope: !10061, file: !939, line: 376, baseType: !1060, size: 256, align: 64, offset: 192)
!10067 = !DIDerivedType(tag: DW_TAG_member, name: "additional_id", scope: !10061, file: !939, line: 377, baseType: !1045, size: 64, align: 64, offset: 448)
!10068 = !DIDerivedType(tag: DW_TAG_member, name: "additional", scope: !10061, file: !939, line: 378, baseType: !1060, size: 256, align: 64, offset: 512)
!10069 = !DIDerivedType(tag: DW_TAG_member, name: "discard_padding", scope: !10061, file: !939, line: 379, baseType: !1047, size: 64, align: 64, offset: 768)
!10070 = !DILocation(line: 3518, column: 20, scope: !10049)
!10071 = !DILocalVariable(name: "i", scope: !10049, file: !939, line: 3519, type: !1039)
!10072 = !DILocation(line: 3519, column: 9, scope: !10049)
!10073 = !DILocalVariable(name: "res", scope: !10049, file: !939, line: 3519, type: !1039)
!10074 = !DILocation(line: 3519, column: 12, scope: !10049)
!10075 = !DILocalVariable(name: "pos", scope: !10049, file: !939, line: 3520, type: !1047)
!10076 = !DILocation(line: 3520, column: 13, scope: !10049)
!10077 = !DILocation(line: 3522, column: 10, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10049, file: !939, line: 3522, column: 9)
!10079 = !DILocation(line: 3522, column: 20, scope: !10078)
!10080 = !DILocation(line: 3522, column: 9, scope: !10049)
!10081 = !DILocation(line: 3523, column: 51, scope: !10078)
!10082 = !DILocation(line: 3523, column: 16, scope: !10078)
!10083 = !DILocation(line: 3523, column: 9, scope: !10078)
!10084 = !DILocation(line: 3524, column: 21, scope: !10049)
!10085 = !DILocation(line: 3524, column: 31, scope: !10049)
!10086 = !DILocation(line: 3524, column: 36, scope: !10049)
!10087 = !DILocation(line: 3524, column: 11, scope: !10049)
!10088 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !10051)
!10089 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !10051)
!10090 = !DILocation(line: 3524, column: 9, scope: !10049)
!10091 = !DILocation(line: 3525, column: 9, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10049, file: !939, line: 3525, column: 9)
!10093 = !DILocation(line: 3525, column: 19, scope: !10092)
!10094 = !DILocation(line: 3525, column: 9, scope: !10049)
!10095 = !DILocation(line: 3526, column: 13, scope: !10092)
!10096 = !DILocation(line: 3526, column: 9, scope: !10092)
!10097 = !DILocation(line: 3527, column: 22, scope: !10049)
!10098 = !DILocation(line: 3527, column: 51, scope: !10049)
!10099 = !DILocation(line: 3527, column: 11, scope: !10049)
!10100 = !DILocation(line: 3527, column: 9, scope: !10049)
!10101 = !DILocation(line: 3528, column: 28, scope: !10049)
!10102 = !DILocation(line: 3528, column: 17, scope: !10049)
!10103 = !DILocation(line: 3529, column: 14, scope: !10049)
!10104 = !DILocation(line: 3529, column: 27, scope: !10049)
!10105 = !DILocation(line: 3529, column: 12, scope: !10049)
!10106 = !DILocation(line: 3530, column: 12, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10049, file: !939, line: 3530, column: 5)
!10108 = !DILocation(line: 3530, column: 10, scope: !10107)
!10109 = !DILocation(line: 3530, column: 17, scope: !10110)
!10110 = !DILexicalBlockFile(scope: !10111, file: !939, discriminator: 1)
!10111 = distinct !DILexicalBlock(scope: !10107, file: !939, line: 3530, column: 5)
!10112 = !DILocation(line: 3530, column: 21, scope: !10110)
!10113 = !DILocation(line: 3530, column: 34, scope: !10110)
!10114 = !DILocation(line: 3530, column: 19, scope: !10110)
!10115 = !DILocation(line: 3530, column: 5, scope: !10110)
!10116 = !DILocation(line: 3531, column: 20, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10111, file: !939, line: 3531, column: 13)
!10118 = !DILocation(line: 3531, column: 13, scope: !10117)
!10119 = !DILocation(line: 3531, column: 23, scope: !10117)
!10120 = !DILocation(line: 3531, column: 27, scope: !10117)
!10121 = !DILocation(line: 3531, column: 32, scope: !10117)
!10122 = !DILocation(line: 3531, column: 36, scope: !10117)
!10123 = !DILocation(line: 3531, column: 46, scope: !10124)
!10124 = !DILexicalBlockFile(scope: !10117, file: !939, discriminator: 1)
!10125 = !DILocation(line: 3531, column: 39, scope: !10124)
!10126 = !DILocation(line: 3531, column: 49, scope: !10124)
!10127 = !DILocation(line: 3531, column: 53, scope: !10124)
!10128 = !DILocation(line: 3531, column: 13, scope: !10124)
!10129 = !DILocalVariable(name: "is_keyframe", scope: !10130, file: !939, line: 3532, type: !1039)
!10130 = distinct !DILexicalBlock(scope: !10117, file: !939, line: 3531, column: 59)
!10131 = !DILocation(line: 3532, column: 17, scope: !10130)
!10132 = !DILocation(line: 3532, column: 38, scope: !10130)
!10133 = !DILocation(line: 3532, column: 31, scope: !10130)
!10134 = !DILocation(line: 3532, column: 41, scope: !10130)
!10135 = !DILocation(line: 3532, column: 61, scope: !10136)
!10136 = !DILexicalBlockFile(scope: !10130, file: !939, discriminator: 1)
!10137 = !DILocation(line: 3532, column: 54, scope: !10136)
!10138 = !DILocation(line: 3532, column: 64, scope: !10136)
!10139 = !DILocation(line: 3532, column: 74, scope: !10136)
!10140 = !DILocation(line: 3532, column: 31, scope: !10136)
!10141 = !DILocation(line: 3532, column: 31, scope: !10142)
!10142 = !DILexicalBlockFile(scope: !10130, file: !939, discriminator: 2)
!10143 = !DILocation(line: 3532, column: 31, scope: !10144)
!10144 = !DILexicalBlockFile(scope: !10130, file: !939, discriminator: 3)
!10145 = !DILocation(line: 3532, column: 17, scope: !10144)
!10146 = !DILocation(line: 3533, column: 40, scope: !10130)
!10147 = !DILocation(line: 3533, column: 57, scope: !10130)
!10148 = !DILocation(line: 3533, column: 50, scope: !10130)
!10149 = !DILocation(line: 3533, column: 60, scope: !10130)
!10150 = !DILocation(line: 3533, column: 64, scope: !10130)
!10151 = !DILocation(line: 3533, column: 76, scope: !10130)
!10152 = !DILocation(line: 3533, column: 69, scope: !10130)
!10153 = !DILocation(line: 3533, column: 79, scope: !10130)
!10154 = !DILocation(line: 3533, column: 83, scope: !10130)
!10155 = !DILocation(line: 3534, column: 47, scope: !10130)
!10156 = !DILocation(line: 3534, column: 40, scope: !10130)
!10157 = !DILocation(line: 3534, column: 50, scope: !10130)
!10158 = !DILocation(line: 3534, column: 54, scope: !10130)
!10159 = !DILocation(line: 3534, column: 67, scope: !10130)
!10160 = !DILocation(line: 3534, column: 60, scope: !10130)
!10161 = !DILocation(line: 3534, column: 70, scope: !10130)
!10162 = !DILocation(line: 3534, column: 74, scope: !10130)
!10163 = !DILocation(line: 3535, column: 48, scope: !10130)
!10164 = !DILocation(line: 3535, column: 65, scope: !10130)
!10165 = !DILocation(line: 3535, column: 58, scope: !10130)
!10166 = !DILocation(line: 3535, column: 68, scope: !10130)
!10167 = !DILocation(line: 3536, column: 40, scope: !10130)
!10168 = !DILocation(line: 3536, column: 64, scope: !10130)
!10169 = !DILocation(line: 3537, column: 47, scope: !10130)
!10170 = !DILocation(line: 3537, column: 40, scope: !10130)
!10171 = !DILocation(line: 3537, column: 50, scope: !10130)
!10172 = !DILocation(line: 3533, column: 19, scope: !10130)
!10173 = !DILocation(line: 3533, column: 17, scope: !10130)
!10174 = !DILocation(line: 3538, column: 9, scope: !10130)
!10175 = !DILocation(line: 3531, column: 53, scope: !10176)
!10176 = !DILexicalBlockFile(scope: !10117, file: !939, discriminator: 2)
!10177 = !DILocation(line: 3530, column: 44, scope: !10178)
!10178 = !DILexicalBlockFile(scope: !10111, file: !939, discriminator: 2)
!10179 = !DILocation(line: 3530, column: 5, scope: !10178)
!10180 = distinct !{!10180, !10181}
!10181 = !DILocation(line: 3530, column: 5, scope: !10049)
!10182 = !DILocation(line: 3539, column: 33, scope: !10049)
!10183 = !DILocation(line: 3539, column: 5, scope: !10049)
!10184 = !DILocation(line: 3540, column: 12, scope: !10049)
!10185 = !DILocation(line: 3540, column: 5, scope: !10049)
!10186 = !DILocation(line: 3541, column: 1, scope: !10049)
!10187 = distinct !DISubprogram(name: "matroska_parse_cluster_incremental", scope: !939, file: !939, line: 3457, type: !7823, isLocal: true, isDefinition: true, scopeLine: 3458, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!10188 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !10189)
!10189 = distinct !DILocation(line: 3472, column: 41, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10191, file: !939, line: 3465, column: 19)
!10191 = distinct !DILexicalBlock(scope: !10187, file: !939, line: 3465, column: 9)
!10192 = !DILocalVariable(name: "matroska", arg: 1, scope: !10187, file: !939, line: 3457, type: !2392)
!10193 = !DILocation(line: 3457, column: 69, scope: !10187)
!10194 = !DILocalVariable(name: "blocks_list", scope: !10187, file: !939, line: 3459, type: !2751)
!10195 = !DILocation(line: 3459, column: 15, scope: !10187)
!10196 = !DILocalVariable(name: "blocks", scope: !10187, file: !939, line: 3460, type: !10059)
!10197 = !DILocation(line: 3460, column: 20, scope: !10187)
!10198 = !DILocalVariable(name: "i", scope: !10187, file: !939, line: 3461, type: !1039)
!10199 = !DILocation(line: 3461, column: 9, scope: !10187)
!10200 = !DILocalVariable(name: "res", scope: !10187, file: !939, line: 3461, type: !1039)
!10201 = !DILocation(line: 3461, column: 12, scope: !10187)
!10202 = !DILocation(line: 3462, column: 22, scope: !10187)
!10203 = !DILocation(line: 3464, column: 23, scope: !10187)
!10204 = !DILocation(line: 3464, column: 33, scope: !10187)
!10205 = !DILocation(line: 3464, column: 22, scope: !10187)
!10206 = !DILocation(line: 3462, column: 11, scope: !10187)
!10207 = !DILocation(line: 3462, column: 9, scope: !10187)
!10208 = !DILocation(line: 3465, column: 9, scope: !10191)
!10209 = !DILocation(line: 3465, column: 13, scope: !10191)
!10210 = !DILocation(line: 3465, column: 9, scope: !10187)
!10211 = !DILocation(line: 3467, column: 13, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10190, file: !939, line: 3467, column: 13)
!10213 = !DILocation(line: 3467, column: 23, scope: !10212)
!10214 = !DILocation(line: 3467, column: 13, scope: !10190)
!10215 = !DILocation(line: 3468, column: 28, scope: !10212)
!10216 = !DILocation(line: 3468, column: 13, scope: !10212)
!10217 = !DILocation(line: 3469, column: 38, scope: !10190)
!10218 = !DILocation(line: 3469, column: 48, scope: !10190)
!10219 = !DILocation(line: 3469, column: 37, scope: !10190)
!10220 = !DILocation(line: 3469, column: 9, scope: !10190)
!10221 = !DILocation(line: 3470, column: 17, scope: !10190)
!10222 = !DILocation(line: 3470, column: 27, scope: !10190)
!10223 = !DILocation(line: 3470, column: 9, scope: !10190)
!10224 = !DILocation(line: 3471, column: 9, scope: !10190)
!10225 = !DILocation(line: 3471, column: 19, scope: !10190)
!10226 = !DILocation(line: 3471, column: 46, scope: !10190)
!10227 = !DILocation(line: 3472, column: 51, scope: !10190)
!10228 = !DILocation(line: 3472, column: 61, scope: !10190)
!10229 = !DILocation(line: 3472, column: 66, scope: !10190)
!10230 = !DILocation(line: 3472, column: 41, scope: !10190)
!10231 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !10189)
!10232 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !10189)
!10233 = !DILocation(line: 3472, column: 9, scope: !10190)
!10234 = !DILocation(line: 3472, column: 19, scope: !10190)
!10235 = !DILocation(line: 3472, column: 39, scope: !10190)
!10236 = !DILocation(line: 3474, column: 13, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10190, file: !939, line: 3474, column: 13)
!10238 = !DILocation(line: 3474, column: 23, scope: !10237)
!10239 = !DILocation(line: 3474, column: 13, scope: !10190)
!10240 = !DILocation(line: 3475, column: 13, scope: !10237)
!10241 = !DILocation(line: 3475, column: 23, scope: !10237)
!10242 = !DILocation(line: 3475, column: 43, scope: !10237)
!10243 = !DILocation(line: 3476, column: 26, scope: !10190)
!10244 = !DILocation(line: 3478, column: 27, scope: !10190)
!10245 = !DILocation(line: 3478, column: 37, scope: !10190)
!10246 = !DILocation(line: 3478, column: 26, scope: !10190)
!10247 = !DILocation(line: 3476, column: 15, scope: !10190)
!10248 = !DILocation(line: 3476, column: 13, scope: !10190)
!10249 = !DILocation(line: 3480, column: 13, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10190, file: !939, line: 3480, column: 13)
!10251 = !DILocation(line: 3480, column: 17, scope: !10250)
!10252 = !DILocation(line: 3480, column: 13, scope: !10190)
!10253 = !DILocation(line: 3481, column: 30, scope: !10250)
!10254 = !DILocation(line: 3483, column: 31, scope: !10250)
!10255 = !DILocation(line: 3483, column: 41, scope: !10250)
!10256 = !DILocation(line: 3483, column: 30, scope: !10250)
!10257 = !DILocation(line: 3481, column: 19, scope: !10250)
!10258 = !DILocation(line: 3481, column: 17, scope: !10250)
!10259 = !DILocation(line: 3481, column: 13, scope: !10250)
!10260 = !DILocation(line: 3484, column: 5, scope: !10190)
!10261 = !DILocation(line: 3486, column: 10, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10187, file: !939, line: 3486, column: 9)
!10263 = !DILocation(line: 3486, column: 14, scope: !10262)
!10264 = !DILocation(line: 3487, column: 9, scope: !10262)
!10265 = !DILocation(line: 3487, column: 19, scope: !10262)
!10266 = !DILocation(line: 3488, column: 9, scope: !10262)
!10267 = !DILocation(line: 3488, column: 19, scope: !10262)
!10268 = !DILocation(line: 3488, column: 35, scope: !10262)
!10269 = !DILocation(line: 3488, column: 42, scope: !10262)
!10270 = !DILocation(line: 3487, column: 46, scope: !10262)
!10271 = !DILocation(line: 3486, column: 9, scope: !10272)
!10272 = !DILexicalBlockFile(scope: !10187, file: !939, discriminator: 1)
!10273 = !DILocation(line: 3489, column: 24, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10262, file: !939, line: 3488, column: 51)
!10275 = !DILocation(line: 3489, column: 34, scope: !10274)
!10276 = !DILocation(line: 3489, column: 50, scope: !10274)
!10277 = !DILocation(line: 3489, column: 21, scope: !10274)
!10278 = !DILocation(line: 3490, column: 18, scope: !10274)
!10279 = !DILocation(line: 3490, column: 31, scope: !10274)
!10280 = !DILocation(line: 3490, column: 16, scope: !10274)
!10281 = !DILocation(line: 3492, column: 48, scope: !10274)
!10282 = !DILocation(line: 3492, column: 61, scope: !10274)
!10283 = !DILocation(line: 3492, column: 9, scope: !10274)
!10284 = !DILocation(line: 3492, column: 19, scope: !10274)
!10285 = !DILocation(line: 3492, column: 46, scope: !10274)
!10286 = !DILocation(line: 3493, column: 13, scope: !10274)
!10287 = !DILocation(line: 3493, column: 26, scope: !10274)
!10288 = !DILocation(line: 3493, column: 34, scope: !10274)
!10289 = !DILocation(line: 3493, column: 11, scope: !10274)
!10290 = !DILocation(line: 3494, column: 20, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10274, file: !939, line: 3494, column: 13)
!10292 = !DILocation(line: 3494, column: 13, scope: !10291)
!10293 = !DILocation(line: 3494, column: 23, scope: !10291)
!10294 = !DILocation(line: 3494, column: 27, scope: !10291)
!10295 = !DILocation(line: 3494, column: 32, scope: !10291)
!10296 = !DILocation(line: 3494, column: 36, scope: !10291)
!10297 = !DILocation(line: 3494, column: 46, scope: !10298)
!10298 = !DILexicalBlockFile(scope: !10291, file: !939, discriminator: 1)
!10299 = !DILocation(line: 3494, column: 39, scope: !10298)
!10300 = !DILocation(line: 3494, column: 49, scope: !10298)
!10301 = !DILocation(line: 3494, column: 53, scope: !10298)
!10302 = !DILocation(line: 3494, column: 13, scope: !10298)
!10303 = !DILocalVariable(name: "is_keyframe", scope: !10304, file: !939, line: 3495, type: !1039)
!10304 = distinct !DILexicalBlock(scope: !10291, file: !939, line: 3494, column: 59)
!10305 = !DILocation(line: 3495, column: 17, scope: !10304)
!10306 = !DILocation(line: 3495, column: 38, scope: !10304)
!10307 = !DILocation(line: 3495, column: 31, scope: !10304)
!10308 = !DILocation(line: 3495, column: 41, scope: !10304)
!10309 = !DILocation(line: 3495, column: 61, scope: !10310)
!10310 = !DILexicalBlockFile(scope: !10304, file: !939, discriminator: 1)
!10311 = !DILocation(line: 3495, column: 54, scope: !10310)
!10312 = !DILocation(line: 3495, column: 64, scope: !10310)
!10313 = !DILocation(line: 3495, column: 74, scope: !10310)
!10314 = !DILocation(line: 3495, column: 31, scope: !10310)
!10315 = !DILocation(line: 3495, column: 31, scope: !10316)
!10316 = !DILexicalBlockFile(scope: !10304, file: !939, discriminator: 2)
!10317 = !DILocation(line: 3495, column: 31, scope: !10318)
!10318 = !DILexicalBlockFile(scope: !10304, file: !939, discriminator: 3)
!10319 = !DILocation(line: 3495, column: 17, scope: !10318)
!10320 = !DILocalVariable(name: "additional", scope: !10304, file: !939, line: 3496, type: !1053)
!10321 = !DILocation(line: 3496, column: 22, scope: !10304)
!10322 = !DILocation(line: 3496, column: 42, scope: !10304)
!10323 = !DILocation(line: 3496, column: 35, scope: !10304)
!10324 = !DILocation(line: 3496, column: 45, scope: !10304)
!10325 = !DILocation(line: 3496, column: 56, scope: !10304)
!10326 = !DILocation(line: 3496, column: 61, scope: !10304)
!10327 = !DILocation(line: 3497, column: 44, scope: !10304)
!10328 = !DILocation(line: 3497, column: 37, scope: !10304)
!10329 = !DILocation(line: 3497, column: 47, scope: !10304)
!10330 = !DILocation(line: 3497, column: 58, scope: !10304)
!10331 = !DILocation(line: 3496, column: 35, scope: !10310)
!10332 = !DILocation(line: 3496, column: 35, scope: !10316)
!10333 = !DILocation(line: 3496, column: 35, scope: !10318)
!10334 = !DILocation(line: 3496, column: 22, scope: !10318)
!10335 = !DILocation(line: 3498, column: 25, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10304, file: !939, line: 3498, column: 17)
!10337 = !DILocation(line: 3498, column: 18, scope: !10336)
!10338 = !DILocation(line: 3498, column: 28, scope: !10336)
!10339 = !DILocation(line: 3498, column: 17, scope: !10304)
!10340 = !DILocation(line: 3499, column: 24, scope: !10336)
!10341 = !DILocation(line: 3499, column: 17, scope: !10336)
!10342 = !DILocation(line: 3499, column: 27, scope: !10336)
!10343 = !DILocation(line: 3499, column: 36, scope: !10336)
!10344 = !DILocation(line: 3500, column: 40, scope: !10304)
!10345 = !DILocation(line: 3500, column: 57, scope: !10304)
!10346 = !DILocation(line: 3500, column: 50, scope: !10304)
!10347 = !DILocation(line: 3500, column: 60, scope: !10304)
!10348 = !DILocation(line: 3500, column: 64, scope: !10304)
!10349 = !DILocation(line: 3500, column: 76, scope: !10304)
!10350 = !DILocation(line: 3500, column: 69, scope: !10304)
!10351 = !DILocation(line: 3500, column: 79, scope: !10304)
!10352 = !DILocation(line: 3500, column: 83, scope: !10304)
!10353 = !DILocation(line: 3501, column: 47, scope: !10304)
!10354 = !DILocation(line: 3501, column: 40, scope: !10304)
!10355 = !DILocation(line: 3501, column: 50, scope: !10304)
!10356 = !DILocation(line: 3501, column: 54, scope: !10304)
!10357 = !DILocation(line: 3501, column: 67, scope: !10304)
!10358 = !DILocation(line: 3501, column: 60, scope: !10304)
!10359 = !DILocation(line: 3501, column: 70, scope: !10304)
!10360 = !DILocation(line: 3501, column: 74, scope: !10304)
!10361 = !DILocation(line: 3502, column: 40, scope: !10304)
!10362 = !DILocation(line: 3502, column: 50, scope: !10304)
!10363 = !DILocation(line: 3502, column: 66, scope: !10304)
!10364 = !DILocation(line: 3503, column: 47, scope: !10304)
!10365 = !DILocation(line: 3503, column: 40, scope: !10304)
!10366 = !DILocation(line: 3503, column: 50, scope: !10304)
!10367 = !DILocation(line: 3503, column: 60, scope: !10304)
!10368 = !DILocation(line: 3504, column: 40, scope: !10304)
!10369 = !DILocation(line: 3504, column: 59, scope: !10304)
!10370 = !DILocation(line: 3504, column: 52, scope: !10304)
!10371 = !DILocation(line: 3504, column: 62, scope: !10304)
!10372 = !DILocation(line: 3505, column: 47, scope: !10304)
!10373 = !DILocation(line: 3505, column: 40, scope: !10304)
!10374 = !DILocation(line: 3505, column: 50, scope: !10304)
!10375 = !DILocation(line: 3505, column: 61, scope: !10304)
!10376 = !DILocation(line: 3506, column: 40, scope: !10304)
!10377 = !DILocation(line: 3506, column: 50, scope: !10304)
!10378 = !DILocation(line: 3507, column: 47, scope: !10304)
!10379 = !DILocation(line: 3507, column: 40, scope: !10304)
!10380 = !DILocation(line: 3507, column: 50, scope: !10304)
!10381 = !DILocation(line: 3500, column: 19, scope: !10304)
!10382 = !DILocation(line: 3500, column: 17, scope: !10304)
!10383 = !DILocation(line: 3508, column: 9, scope: !10304)
!10384 = !DILocation(line: 3509, column: 5, scope: !10274)
!10385 = !DILocation(line: 3511, column: 12, scope: !10187)
!10386 = !DILocation(line: 3511, column: 5, scope: !10187)
!10387 = distinct !DISubprogram(name: "matroska_parse_block", scope: !939, file: !939, line: 3319, type: !10388, isLocal: true, isDefinition: true, scopeLine: 3324, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!10388 = !DISubroutineType(types: !10389)
!10389 = !{!1039, !2392, !1065, !1053, !1039, !1047, !1045, !1045, !1039, !1053, !1045, !1039, !1047, !1047}
!10390 = !DILocation(line: 58, column: 98, scope: !4344, inlinedAt: !10391)
!10391 = distinct !DILocation(line: 3354, column: 30, scope: !10387)
!10392 = !DILocalVariable(name: "matroska", arg: 1, scope: !10387, file: !939, line: 3319, type: !2392)
!10393 = !DILocation(line: 3319, column: 55, scope: !10387)
!10394 = !DILocalVariable(name: "buf", arg: 2, scope: !10387, file: !939, line: 3319, type: !1065)
!10395 = !DILocation(line: 3319, column: 78, scope: !10387)
!10396 = !DILocalVariable(name: "data", arg: 3, scope: !10387, file: !939, line: 3319, type: !1053)
!10397 = !DILocation(line: 3319, column: 92, scope: !10387)
!10398 = !DILocalVariable(name: "size", arg: 4, scope: !10387, file: !939, line: 3320, type: !1039)
!10399 = !DILocation(line: 3320, column: 37, scope: !10387)
!10400 = !DILocalVariable(name: "pos", arg: 5, scope: !10387, file: !939, line: 3320, type: !1047)
!10401 = !DILocation(line: 3320, column: 51, scope: !10387)
!10402 = !DILocalVariable(name: "cluster_time", arg: 6, scope: !10387, file: !939, line: 3320, type: !1045)
!10403 = !DILocation(line: 3320, column: 65, scope: !10387)
!10404 = !DILocalVariable(name: "block_duration", arg: 7, scope: !10387, file: !939, line: 3321, type: !1045)
!10405 = !DILocation(line: 3321, column: 42, scope: !10387)
!10406 = !DILocalVariable(name: "is_keyframe", arg: 8, scope: !10387, file: !939, line: 3321, type: !1039)
!10407 = !DILocation(line: 3321, column: 62, scope: !10387)
!10408 = !DILocalVariable(name: "additional", arg: 9, scope: !10387, file: !939, line: 3322, type: !1053)
!10409 = !DILocation(line: 3322, column: 42, scope: !10387)
!10410 = !DILocalVariable(name: "additional_id", arg: 10, scope: !10387, file: !939, line: 3322, type: !1045)
!10411 = !DILocation(line: 3322, column: 63, scope: !10387)
!10412 = !DILocalVariable(name: "additional_size", arg: 11, scope: !10387, file: !939, line: 3322, type: !1039)
!10413 = !DILocation(line: 3322, column: 82, scope: !10387)
!10414 = !DILocalVariable(name: "cluster_pos", arg: 12, scope: !10387, file: !939, line: 3323, type: !1047)
!10415 = !DILocation(line: 3323, column: 41, scope: !10387)
!10416 = !DILocalVariable(name: "discard_padding", arg: 13, scope: !10387, file: !939, line: 3323, type: !1047)
!10417 = !DILocation(line: 3323, column: 62, scope: !10387)
!10418 = !DILocalVariable(name: "timecode", scope: !10387, file: !939, line: 3325, type: !1045)
!10419 = !DILocation(line: 3325, column: 14, scope: !10387)
!10420 = !DILocalVariable(name: "track", scope: !10387, file: !939, line: 3326, type: !3392)
!10421 = !DILocation(line: 3326, column: 20, scope: !10387)
!10422 = !DILocalVariable(name: "res", scope: !10387, file: !939, line: 3327, type: !1039)
!10423 = !DILocation(line: 3327, column: 9, scope: !10387)
!10424 = !DILocalVariable(name: "st", scope: !10387, file: !939, line: 3328, type: !1478)
!10425 = !DILocation(line: 3328, column: 15, scope: !10387)
!10426 = !DILocalVariable(name: "block_time", scope: !10387, file: !939, line: 3329, type: !10427)
!10427 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1037, line: 37, baseType: !10428)
!10428 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!10429 = !DILocation(line: 3329, column: 13, scope: !10387)
!10430 = !DILocalVariable(name: "lace_size", scope: !10387, file: !939, line: 3330, type: !8261)
!10431 = !DILocation(line: 3330, column: 15, scope: !10387)
!10432 = !DILocalVariable(name: "n", scope: !10387, file: !939, line: 3331, type: !1039)
!10433 = !DILocation(line: 3331, column: 9, scope: !10387)
!10434 = !DILocalVariable(name: "flags", scope: !10387, file: !939, line: 3331, type: !1039)
!10435 = !DILocation(line: 3331, column: 12, scope: !10387)
!10436 = !DILocalVariable(name: "laces", scope: !10387, file: !939, line: 3331, type: !1039)
!10437 = !DILocation(line: 3331, column: 19, scope: !10387)
!10438 = !DILocalVariable(name: "num", scope: !10387, file: !939, line: 3332, type: !1045)
!10439 = !DILocation(line: 3332, column: 14, scope: !10387)
!10440 = !DILocalVariable(name: "trust_default_duration", scope: !10387, file: !939, line: 3333, type: !1039)
!10441 = !DILocation(line: 3333, column: 9, scope: !10387)
!10442 = !DILocation(line: 3335, column: 36, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10387, file: !939, line: 3335, column: 9)
!10444 = !DILocation(line: 3335, column: 46, scope: !10443)
!10445 = !DILocation(line: 3335, column: 52, scope: !10443)
!10446 = !DILocation(line: 3335, column: 14, scope: !10443)
!10447 = !DILocation(line: 3335, column: 12, scope: !10443)
!10448 = !DILocation(line: 3335, column: 65, scope: !10443)
!10449 = !DILocation(line: 3335, column: 9, scope: !10387)
!10450 = !DILocation(line: 3336, column: 16, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10443, file: !939, line: 3335, column: 70)
!10452 = !DILocation(line: 3336, column: 26, scope: !10451)
!10453 = !DILocation(line: 3336, column: 9, scope: !10451)
!10454 = !DILocation(line: 3337, column: 16, scope: !10451)
!10455 = !DILocation(line: 3337, column: 9, scope: !10451)
!10456 = !DILocation(line: 3339, column: 13, scope: !10387)
!10457 = !DILocation(line: 3339, column: 10, scope: !10387)
!10458 = !DILocation(line: 3340, column: 13, scope: !10387)
!10459 = !DILocation(line: 3340, column: 10, scope: !10387)
!10460 = !DILocation(line: 3342, column: 40, scope: !10387)
!10461 = !DILocation(line: 3342, column: 50, scope: !10387)
!10462 = !DILocation(line: 3342, column: 13, scope: !10387)
!10463 = !DILocation(line: 3342, column: 11, scope: !10387)
!10464 = !DILocation(line: 3343, column: 10, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10387, file: !939, line: 3343, column: 9)
!10466 = !DILocation(line: 3343, column: 16, scope: !10465)
!10467 = !DILocation(line: 3343, column: 20, scope: !10468)
!10468 = !DILexicalBlockFile(scope: !10465, file: !939, discriminator: 1)
!10469 = !DILocation(line: 3343, column: 27, scope: !10468)
!10470 = !DILocation(line: 3343, column: 9, scope: !10468)
!10471 = !DILocation(line: 3344, column: 16, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10465, file: !939, line: 3343, column: 35)
!10473 = !DILocation(line: 3344, column: 26, scope: !10472)
!10474 = !DILocation(line: 3345, column: 56, scope: !10472)
!10475 = !DILocation(line: 3345, column: 61, scope: !10472)
!10476 = !DILocation(line: 3344, column: 9, scope: !10472)
!10477 = !DILocation(line: 3346, column: 9, scope: !10472)
!10478 = !DILocation(line: 3347, column: 16, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10465, file: !939, line: 3347, column: 16)
!10480 = !DILocation(line: 3347, column: 21, scope: !10479)
!10481 = !DILocation(line: 3347, column: 16, scope: !10465)
!10482 = !DILocation(line: 3348, column: 9, scope: !10479)
!10483 = !DILocation(line: 3349, column: 10, scope: !10387)
!10484 = !DILocation(line: 3349, column: 17, scope: !10387)
!10485 = !DILocation(line: 3349, column: 8, scope: !10387)
!10486 = !DILocation(line: 3350, column: 9, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10387, file: !939, line: 3350, column: 9)
!10488 = !DILocation(line: 3350, column: 13, scope: !10487)
!10489 = !DILocation(line: 3350, column: 21, scope: !10487)
!10490 = !DILocation(line: 3350, column: 9, scope: !10387)
!10491 = !DILocation(line: 3351, column: 16, scope: !10487)
!10492 = !DILocation(line: 3351, column: 9, scope: !10487)
!10493 = !DILocation(line: 3354, column: 73, scope: !10387)
!10494 = !DILocation(line: 3354, column: 81, scope: !10387)
!10495 = !DILocation(line: 3354, column: 30, scope: !10387)
!10496 = !DILocation(line: 60, column: 9, scope: !4344, inlinedAt: !10391)
!10497 = !DILocation(line: 60, column: 10, scope: !4344, inlinedAt: !10391)
!10498 = !DILocation(line: 60, column: 18, scope: !4344, inlinedAt: !10391)
!10499 = !DILocation(line: 60, column: 19, scope: !4344, inlinedAt: !10391)
!10500 = !DILocation(line: 60, column: 15, scope: !4344, inlinedAt: !10391)
!10501 = !DILocation(line: 60, column: 8, scope: !4344, inlinedAt: !10391)
!10502 = !DILocation(line: 60, column: 6, scope: !4344, inlinedAt: !10391)
!10503 = !DILocation(line: 61, column: 12, scope: !4344, inlinedAt: !10391)
!10504 = !DILocation(line: 3354, column: 18, scope: !10505)
!10505 = !DILexicalBlockFile(scope: !10387, file: !939, discriminator: 1)
!10506 = !DILocation(line: 3354, column: 18, scope: !10387)
!10507 = !DILocation(line: 3354, column: 16, scope: !10387)
!10508 = !DILocation(line: 3355, column: 10, scope: !10387)
!10509 = !DILocation(line: 3356, column: 18, scope: !10387)
!10510 = !DILocation(line: 3356, column: 13, scope: !10387)
!10511 = !DILocation(line: 3356, column: 11, scope: !10387)
!10512 = !DILocation(line: 3357, column: 10, scope: !10387)
!10513 = !DILocation(line: 3358, column: 9, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10387, file: !939, line: 3358, column: 9)
!10515 = !DILocation(line: 3358, column: 21, scope: !10514)
!10516 = !DILocation(line: 3358, column: 9, scope: !10387)
!10517 = !DILocation(line: 3359, column: 23, scope: !10514)
!10518 = !DILocation(line: 3359, column: 29, scope: !10514)
!10519 = !DILocation(line: 3359, column: 21, scope: !10514)
!10520 = !DILocation(line: 3359, column: 9, scope: !10514)
!10521 = !DILocation(line: 3361, column: 9, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10387, file: !939, line: 3361, column: 9)
!10523 = !DILocation(line: 3361, column: 22, scope: !10522)
!10524 = !DILocation(line: 3361, column: 39, scope: !10522)
!10525 = !DILocation(line: 3362, column: 10, scope: !10522)
!10526 = !DILocation(line: 3362, column: 21, scope: !10522)
!10527 = !DILocation(line: 3362, column: 26, scope: !10522)
!10528 = !DILocation(line: 3362, column: 29, scope: !10529)
!10529 = !DILexicalBlockFile(scope: !10522, file: !939, discriminator: 1)
!10530 = !DILocation(line: 3362, column: 46, scope: !10529)
!10531 = !DILocation(line: 3362, column: 45, scope: !10529)
!10532 = !DILocation(line: 3362, column: 42, scope: !10529)
!10533 = !DILocation(line: 3361, column: 9, scope: !10505)
!10534 = !DILocation(line: 3363, column: 20, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10522, file: !939, line: 3362, column: 59)
!10536 = !DILocation(line: 3363, column: 35, scope: !10535)
!10537 = !DILocation(line: 3363, column: 33, scope: !10535)
!10538 = !DILocation(line: 3363, column: 48, scope: !10535)
!10539 = !DILocation(line: 3363, column: 55, scope: !10535)
!10540 = !DILocation(line: 3363, column: 46, scope: !10535)
!10541 = !DILocation(line: 3363, column: 18, scope: !10535)
!10542 = !DILocation(line: 3364, column: 13, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10535, file: !939, line: 3364, column: 13)
!10544 = !DILocation(line: 3364, column: 20, scope: !10543)
!10545 = !DILocation(line: 3364, column: 25, scope: !10543)
!10546 = !DILocation(line: 3364, column: 57, scope: !10543)
!10547 = !DILocation(line: 3365, column: 13, scope: !10543)
!10548 = !DILocation(line: 3365, column: 24, scope: !10543)
!10549 = !DILocation(line: 3365, column: 31, scope: !10543)
!10550 = !DILocation(line: 3365, column: 22, scope: !10543)
!10551 = !DILocation(line: 3364, column: 13, scope: !10552)
!10552 = !DILexicalBlockFile(scope: !10535, file: !939, discriminator: 1)
!10553 = !DILocation(line: 3366, column: 25, scope: !10543)
!10554 = !DILocation(line: 3366, column: 13, scope: !10543)
!10555 = !DILocation(line: 3367, column: 13, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10535, file: !939, line: 3367, column: 13)
!10557 = !DILocation(line: 3367, column: 13, scope: !10535)
!10558 = !DILocation(line: 3368, column: 29, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10556, file: !939, line: 3367, column: 26)
!10560 = !DILocation(line: 3368, column: 39, scope: !10559)
!10561 = !DILocation(line: 3368, column: 44, scope: !10559)
!10562 = !DILocation(line: 3368, column: 48, scope: !10559)
!10563 = !DILocation(line: 3368, column: 13, scope: !10559)
!10564 = !DILocation(line: 3369, column: 32, scope: !10559)
!10565 = !DILocation(line: 3369, column: 36, scope: !10559)
!10566 = !DILocation(line: 3369, column: 49, scope: !10559)
!10567 = !DILocation(line: 3369, column: 13, scope: !10559)
!10568 = !DILocation(line: 3371, column: 9, scope: !10559)
!10569 = !DILocation(line: 3372, column: 5, scope: !10535)
!10570 = !DILocation(line: 3374, column: 9, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10387, file: !939, line: 3374, column: 9)
!10572 = !DILocation(line: 3374, column: 19, scope: !10571)
!10573 = !DILocation(line: 3374, column: 36, scope: !10571)
!10574 = !DILocation(line: 3375, column: 9, scope: !10571)
!10575 = !DILocation(line: 3375, column: 16, scope: !10571)
!10576 = !DILocation(line: 3375, column: 21, scope: !10571)
!10577 = !DILocation(line: 3374, column: 9, scope: !10505)
!10578 = !DILocation(line: 3379, column: 22, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10580, file: !939, line: 3379, column: 13)
!10580 = distinct !DILexicalBlock(scope: !10571, file: !939, line: 3375, column: 54)
!10581 = !DILocation(line: 3379, column: 42, scope: !10579)
!10582 = !DILocation(line: 3379, column: 52, scope: !10579)
!10583 = !DILocation(line: 3379, column: 31, scope: !10579)
!10584 = !DILocation(line: 3379, column: 13, scope: !10580)
!10585 = !DILocation(line: 3380, column: 20, scope: !10579)
!10586 = !DILocation(line: 3380, column: 13, scope: !10579)
!10587 = !DILocation(line: 3381, column: 13, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10580, file: !939, line: 3381, column: 13)
!10589 = !DILocation(line: 3381, column: 13, scope: !10580)
!10590 = !DILocation(line: 3382, column: 13, scope: !10588)
!10591 = !DILocation(line: 3382, column: 23, scope: !10588)
!10592 = !DILocation(line: 3382, column: 40, scope: !10588)
!10593 = !DILocation(line: 3383, column: 19, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10588, file: !939, line: 3383, column: 18)
!10595 = !DILocation(line: 3383, column: 23, scope: !10594)
!10596 = !DILocation(line: 3383, column: 18, scope: !10588)
!10597 = !DILocation(line: 3384, column: 20, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10594, file: !939, line: 3383, column: 41)
!10599 = !DILocation(line: 3384, column: 30, scope: !10598)
!10600 = !DILocation(line: 3384, column: 13, scope: !10598)
!10601 = !DILocation(line: 3385, column: 13, scope: !10598)
!10602 = !DILocation(line: 3385, column: 23, scope: !10598)
!10603 = !DILocation(line: 3385, column: 40, scope: !10598)
!10604 = !DILocation(line: 3386, column: 9, scope: !10598)
!10605 = !DILocation(line: 3387, column: 5, scope: !10580)
!10606 = !DILocation(line: 3389, column: 32, scope: !10387)
!10607 = !DILocation(line: 3389, column: 57, scope: !10387)
!10608 = !DILocation(line: 3389, column: 63, scope: !10387)
!10609 = !DILocation(line: 3389, column: 71, scope: !10387)
!10610 = !DILocation(line: 3389, column: 11, scope: !10387)
!10611 = !DILocation(line: 3389, column: 9, scope: !10387)
!10612 = !DILocation(line: 3392, column: 9, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10387, file: !939, line: 3392, column: 9)
!10614 = !DILocation(line: 3392, column: 9, scope: !10387)
!10615 = !DILocation(line: 3393, column: 9, scope: !10613)
!10616 = !DILocation(line: 3395, column: 9, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10387, file: !939, line: 3395, column: 9)
!10618 = !DILocation(line: 3395, column: 16, scope: !10617)
!10619 = !DILocation(line: 3395, column: 22, scope: !10617)
!10620 = !DILocation(line: 3395, column: 33, scope: !10617)
!10621 = !DILocation(line: 3395, column: 9, scope: !10387)
!10622 = !DILocation(line: 3397, column: 13, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10624, file: !939, line: 3397, column: 13)
!10624 = distinct !DILexicalBlock(scope: !10617, file: !939, line: 3395, column: 42)
!10625 = !DILocation(line: 3397, column: 17, scope: !10623)
!10626 = !DILocation(line: 3397, column: 27, scope: !10623)
!10627 = !DILocation(line: 3397, column: 36, scope: !10623)
!10628 = !DILocation(line: 3397, column: 13, scope: !10624)
!10629 = !DILocation(line: 3398, column: 17, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10631, file: !939, line: 3398, column: 17)
!10631 = distinct !DILexicalBlock(scope: !10623, file: !939, line: 3397, column: 56)
!10632 = !DILocation(line: 3398, column: 24, scope: !10630)
!10633 = !DILocation(line: 3398, column: 30, scope: !10630)
!10634 = !DILocation(line: 3398, column: 44, scope: !10630)
!10635 = !DILocation(line: 3398, column: 48, scope: !10630)
!10636 = !DILocation(line: 3398, column: 58, scope: !10630)
!10637 = !DILocation(line: 3398, column: 41, scope: !10630)
!10638 = !DILocation(line: 3398, column: 70, scope: !10630)
!10639 = !DILocation(line: 3398, column: 74, scope: !10640)
!10640 = !DILexicalBlockFile(scope: !10630, file: !939, discriminator: 1)
!10641 = !DILocation(line: 3398, column: 78, scope: !10640)
!10642 = !DILocation(line: 3398, column: 88, scope: !10640)
!10643 = !DILocation(line: 3398, column: 17, scope: !10640)
!10644 = !DILocation(line: 3399, column: 40, scope: !10630)
!10645 = !DILocation(line: 3399, column: 17, scope: !10630)
!10646 = !DILocation(line: 3400, column: 9, scope: !10631)
!10647 = !DILocation(line: 3401, column: 5, scope: !10624)
!10648 = !DILocation(line: 3403, column: 10, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10387, file: !939, line: 3403, column: 9)
!10650 = !DILocation(line: 3403, column: 25, scope: !10649)
!10651 = !DILocation(line: 3403, column: 28, scope: !10652)
!10652 = !DILexicalBlockFile(scope: !10649, file: !939, discriminator: 1)
!10653 = !DILocation(line: 3403, column: 9, scope: !10652)
!10654 = !DILocation(line: 3404, column: 26, scope: !10649)
!10655 = !DILocation(line: 3404, column: 33, scope: !10649)
!10656 = !DILocation(line: 3404, column: 52, scope: !10649)
!10657 = !DILocation(line: 3404, column: 50, scope: !10649)
!10658 = !DILocation(line: 3404, column: 60, scope: !10649)
!10659 = !DILocation(line: 3404, column: 70, scope: !10649)
!10660 = !DILocation(line: 3404, column: 58, scope: !10649)
!10661 = !DILocation(line: 3404, column: 24, scope: !10649)
!10662 = !DILocation(line: 3404, column: 9, scope: !10649)
!10663 = !DILocation(line: 3406, column: 9, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10387, file: !939, line: 3406, column: 9)
!10665 = !DILocation(line: 3406, column: 22, scope: !10664)
!10666 = !DILocation(line: 3406, column: 38, scope: !10664)
!10667 = !DILocation(line: 3406, column: 42, scope: !10668)
!10668 = !DILexicalBlockFile(scope: !10664, file: !939, discriminator: 1)
!10669 = !DILocation(line: 3406, column: 53, scope: !10668)
!10670 = !DILocation(line: 3406, column: 58, scope: !10668)
!10671 = !DILocation(line: 3406, column: 61, scope: !10672)
!10672 = !DILexicalBlockFile(scope: !10664, file: !939, discriminator: 2)
!10673 = !DILocation(line: 3406, column: 78, scope: !10672)
!10674 = !DILocation(line: 3406, column: 77, scope: !10672)
!10675 = !DILocation(line: 3406, column: 74, scope: !10672)
!10676 = !DILocation(line: 3406, column: 9, scope: !10672)
!10677 = !DILocation(line: 3408, column: 15, scope: !10664)
!10678 = !DILocation(line: 3408, column: 22, scope: !10664)
!10679 = !DILocation(line: 3408, column: 39, scope: !10664)
!10680 = !DILocation(line: 3408, column: 50, scope: !10664)
!10681 = !DILocation(line: 3408, column: 48, scope: !10664)
!10682 = !DILocation(line: 3408, column: 36, scope: !10664)
!10683 = !DILocation(line: 3408, column: 14, scope: !10664)
!10684 = !DILocation(line: 3408, column: 69, scope: !10668)
!10685 = !DILocation(line: 3408, column: 76, scope: !10668)
!10686 = !DILocation(line: 3408, column: 14, scope: !10668)
!10687 = !DILocation(line: 3408, column: 93, scope: !10672)
!10688 = !DILocation(line: 3408, column: 104, scope: !10672)
!10689 = !DILocation(line: 3408, column: 102, scope: !10672)
!10690 = !DILocation(line: 3408, column: 14, scope: !10672)
!10691 = !DILocation(line: 3408, column: 14, scope: !10692)
!10692 = !DILexicalBlockFile(scope: !10664, file: !939, discriminator: 3)
!10693 = !DILocation(line: 3407, column: 9, scope: !10664)
!10694 = !DILocation(line: 3407, column: 16, scope: !10664)
!10695 = !DILocation(line: 3407, column: 29, scope: !10664)
!10696 = !DILocation(line: 3410, column: 12, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10387, file: !939, line: 3410, column: 5)
!10698 = !DILocation(line: 3410, column: 10, scope: !10697)
!10699 = !DILocation(line: 3410, column: 17, scope: !10700)
!10700 = !DILexicalBlockFile(scope: !10701, file: !939, discriminator: 1)
!10701 = distinct !DILexicalBlock(scope: !10697, file: !939, line: 3410, column: 5)
!10702 = !DILocation(line: 3410, column: 21, scope: !10700)
!10703 = !DILocation(line: 3410, column: 19, scope: !10700)
!10704 = !DILocation(line: 3410, column: 5, scope: !10700)
!10705 = !DILocalVariable(name: "lace_duration", scope: !10706, file: !939, line: 3411, type: !1047)
!10706 = distinct !DILexicalBlock(scope: !10701, file: !939, line: 3410, column: 33)
!10707 = !DILocation(line: 3411, column: 17, scope: !10706)
!10708 = !DILocation(line: 3411, column: 33, scope: !10706)
!10709 = !DILocation(line: 3411, column: 49, scope: !10706)
!10710 = !DILocation(line: 3411, column: 50, scope: !10706)
!10711 = !DILocation(line: 3411, column: 48, scope: !10706)
!10712 = !DILocation(line: 3411, column: 47, scope: !10706)
!10713 = !DILocation(line: 3411, column: 56, scope: !10706)
!10714 = !DILocation(line: 3411, column: 54, scope: !10706)
!10715 = !DILocation(line: 3411, column: 64, scope: !10706)
!10716 = !DILocation(line: 3411, column: 79, scope: !10706)
!10717 = !DILocation(line: 3411, column: 78, scope: !10706)
!10718 = !DILocation(line: 3411, column: 83, scope: !10706)
!10719 = !DILocation(line: 3411, column: 81, scope: !10706)
!10720 = !DILocation(line: 3411, column: 62, scope: !10706)
!10721 = !DILocation(line: 3413, column: 23, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10706, file: !939, line: 3413, column: 13)
!10723 = !DILocation(line: 3413, column: 13, scope: !10722)
!10724 = !DILocation(line: 3413, column: 28, scope: !10722)
!10725 = !DILocation(line: 3413, column: 26, scope: !10722)
!10726 = !DILocation(line: 3413, column: 13, scope: !10706)
!10727 = !DILocation(line: 3414, column: 20, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10722, file: !939, line: 3413, column: 34)
!10729 = !DILocation(line: 3414, column: 30, scope: !10728)
!10730 = !DILocation(line: 3414, column: 13, scope: !10728)
!10731 = !DILocation(line: 3415, column: 13, scope: !10728)
!10732 = !DILocation(line: 3418, column: 14, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10706, file: !939, line: 3418, column: 13)
!10734 = !DILocation(line: 3418, column: 18, scope: !10733)
!10735 = !DILocation(line: 3418, column: 28, scope: !10733)
!10736 = !DILocation(line: 3418, column: 37, scope: !10733)
!10737 = !DILocation(line: 3418, column: 59, scope: !10733)
!10738 = !DILocation(line: 3419, column: 14, scope: !10733)
!10739 = !DILocation(line: 3419, column: 18, scope: !10733)
!10740 = !DILocation(line: 3419, column: 28, scope: !10733)
!10741 = !DILocation(line: 3419, column: 37, scope: !10733)
!10742 = !DILocation(line: 3419, column: 57, scope: !10733)
!10743 = !DILocation(line: 3420, column: 14, scope: !10733)
!10744 = !DILocation(line: 3420, column: 18, scope: !10733)
!10745 = !DILocation(line: 3420, column: 28, scope: !10733)
!10746 = !DILocation(line: 3420, column: 37, scope: !10733)
!10747 = !DILocation(line: 3420, column: 57, scope: !10733)
!10748 = !DILocation(line: 3421, column: 14, scope: !10733)
!10749 = !DILocation(line: 3421, column: 18, scope: !10733)
!10750 = !DILocation(line: 3421, column: 28, scope: !10733)
!10751 = !DILocation(line: 3421, column: 37, scope: !10733)
!10752 = !DILocation(line: 3421, column: 60, scope: !10733)
!10753 = !DILocation(line: 3422, column: 13, scope: !10733)
!10754 = !DILocation(line: 3422, column: 17, scope: !10733)
!10755 = !DILocation(line: 3422, column: 27, scope: !10733)
!10756 = !DILocation(line: 3422, column: 39, scope: !10733)
!10757 = !DILocation(line: 3422, column: 42, scope: !10758)
!10758 = !DILexicalBlockFile(scope: !10733, file: !939, discriminator: 1)
!10759 = !DILocation(line: 3422, column: 49, scope: !10758)
!10760 = !DILocation(line: 3422, column: 55, scope: !10758)
!10761 = !DILocation(line: 3418, column: 13, scope: !10762)
!10762 = !DILexicalBlockFile(scope: !10706, file: !939, discriminator: 1)
!10763 = !DILocation(line: 3423, column: 43, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10733, file: !939, line: 3422, column: 72)
!10765 = !DILocation(line: 3423, column: 53, scope: !10764)
!10766 = !DILocation(line: 3423, column: 60, scope: !10764)
!10767 = !DILocation(line: 3423, column: 64, scope: !10764)
!10768 = !DILocation(line: 3424, column: 53, scope: !10764)
!10769 = !DILocation(line: 3424, column: 43, scope: !10764)
!10770 = !DILocation(line: 3425, column: 43, scope: !10764)
!10771 = !DILocation(line: 3425, column: 53, scope: !10764)
!10772 = !DILocation(line: 3423, column: 19, scope: !10764)
!10773 = !DILocation(line: 3423, column: 17, scope: !10764)
!10774 = !DILocation(line: 3426, column: 17, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10764, file: !939, line: 3426, column: 17)
!10776 = !DILocation(line: 3426, column: 17, scope: !10764)
!10777 = !DILocation(line: 3427, column: 17, scope: !10775)
!10778 = !DILocation(line: 3429, column: 9, scope: !10764)
!10779 = !DILocation(line: 3429, column: 20, scope: !10780)
!10780 = !DILexicalBlockFile(scope: !10781, file: !939, discriminator: 1)
!10781 = distinct !DILexicalBlock(scope: !10733, file: !939, line: 3429, column: 20)
!10782 = !DILocation(line: 3429, column: 24, scope: !10780)
!10783 = !DILocation(line: 3429, column: 34, scope: !10780)
!10784 = !DILocation(line: 3429, column: 43, scope: !10780)
!10785 = !DILocation(line: 3430, column: 41, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10781, file: !939, line: 3429, column: 66)
!10787 = !DILocation(line: 3430, column: 51, scope: !10786)
!10788 = !DILocation(line: 3430, column: 58, scope: !10786)
!10789 = !DILocation(line: 3431, column: 41, scope: !10786)
!10790 = !DILocation(line: 3431, column: 57, scope: !10786)
!10791 = !DILocation(line: 3431, column: 47, scope: !10786)
!10792 = !DILocation(line: 3432, column: 41, scope: !10786)
!10793 = !DILocation(line: 3432, column: 51, scope: !10786)
!10794 = !DILocation(line: 3433, column: 41, scope: !10786)
!10795 = !DILocation(line: 3430, column: 19, scope: !10786)
!10796 = !DILocation(line: 3430, column: 17, scope: !10786)
!10797 = !DILocation(line: 3434, column: 17, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10786, file: !939, line: 3434, column: 17)
!10799 = !DILocation(line: 3434, column: 17, scope: !10786)
!10800 = !DILocation(line: 3435, column: 17, scope: !10798)
!10801 = !DILocation(line: 3436, column: 9, scope: !10786)
!10802 = !DILocation(line: 3437, column: 40, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10781, file: !939, line: 3436, column: 16)
!10804 = !DILocation(line: 3437, column: 50, scope: !10803)
!10805 = !DILocation(line: 3437, column: 57, scope: !10803)
!10806 = !DILocation(line: 3437, column: 61, scope: !10803)
!10807 = !DILocation(line: 3437, column: 66, scope: !10803)
!10808 = !DILocation(line: 3437, column: 82, scope: !10803)
!10809 = !DILocation(line: 3437, column: 72, scope: !10803)
!10810 = !DILocation(line: 3438, column: 40, scope: !10803)
!10811 = !DILocation(line: 3438, column: 50, scope: !10803)
!10812 = !DILocation(line: 3438, column: 65, scope: !10803)
!10813 = !DILocation(line: 3439, column: 41, scope: !10803)
!10814 = !DILocation(line: 3439, column: 40, scope: !10803)
!10815 = !DILocation(line: 3439, column: 45, scope: !10816)
!10816 = !DILexicalBlockFile(scope: !10803, file: !939, discriminator: 1)
!10817 = !DILocation(line: 3439, column: 40, scope: !10816)
!10818 = !DILocation(line: 3439, column: 40, scope: !10819)
!10819 = !DILexicalBlockFile(scope: !10803, file: !939, discriminator: 2)
!10820 = !DILocation(line: 3439, column: 40, scope: !10821)
!10821 = !DILexicalBlockFile(scope: !10803, file: !939, discriminator: 3)
!10822 = !DILocation(line: 3440, column: 40, scope: !10803)
!10823 = !DILocation(line: 3440, column: 52, scope: !10803)
!10824 = !DILocation(line: 3440, column: 67, scope: !10803)
!10825 = !DILocation(line: 3441, column: 40, scope: !10803)
!10826 = !DILocation(line: 3437, column: 19, scope: !10816)
!10827 = !DILocation(line: 3437, column: 17, scope: !10816)
!10828 = !DILocation(line: 3442, column: 17, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10803, file: !939, line: 3442, column: 17)
!10830 = !DILocation(line: 3442, column: 17, scope: !10803)
!10831 = !DILocation(line: 3443, column: 17, scope: !10829)
!10832 = !DILocation(line: 3446, column: 13, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10706, file: !939, line: 3446, column: 13)
!10834 = !DILocation(line: 3446, column: 22, scope: !10833)
!10835 = !DILocation(line: 3446, column: 13, scope: !10706)
!10836 = !DILocation(line: 3447, column: 24, scope: !10833)
!10837 = !DILocation(line: 3447, column: 40, scope: !10838)
!10838 = !DILexicalBlockFile(scope: !10833, file: !939, discriminator: 1)
!10839 = !DILocation(line: 3447, column: 51, scope: !10838)
!10840 = !DILocation(line: 3447, column: 49, scope: !10838)
!10841 = !DILocation(line: 3447, column: 24, scope: !10838)
!10842 = !DILocation(line: 3447, column: 24, scope: !10843)
!10843 = !DILexicalBlockFile(scope: !10833, file: !939, discriminator: 2)
!10844 = !DILocation(line: 3447, column: 24, scope: !10845)
!10845 = !DILexicalBlockFile(scope: !10833, file: !939, discriminator: 3)
!10846 = !DILocation(line: 3447, column: 22, scope: !10845)
!10847 = !DILocation(line: 3447, column: 13, scope: !10845)
!10848 = !DILocation(line: 3448, column: 27, scope: !10706)
!10849 = !DILocation(line: 3448, column: 17, scope: !10706)
!10850 = !DILocation(line: 3448, column: 14, scope: !10706)
!10851 = !DILocation(line: 3449, column: 27, scope: !10706)
!10852 = !DILocation(line: 3449, column: 17, scope: !10706)
!10853 = !DILocation(line: 3449, column: 14, scope: !10706)
!10854 = !DILocation(line: 3450, column: 5, scope: !10706)
!10855 = !DILocation(line: 3410, column: 29, scope: !10856)
!10856 = !DILexicalBlockFile(scope: !10701, file: !939, discriminator: 2)
!10857 = !DILocation(line: 3410, column: 5, scope: !10856)
!10858 = distinct !{!10858, !10859}
!10859 = !DILocation(line: 3410, column: 5, scope: !10387)
!10860 = !DILocation(line: 3450, column: 5, scope: !10861)
!10861 = !DILexicalBlockFile(scope: !10697, file: !939, discriminator: 1)
!10862 = !DILocation(line: 3453, column: 13, scope: !10387)
!10863 = !DILocation(line: 3453, column: 5, scope: !10387)
!10864 = !DILocation(line: 3454, column: 12, scope: !10387)
!10865 = !DILocation(line: 3454, column: 5, scope: !10387)
!10866 = !DILocation(line: 3455, column: 1, scope: !10387)
!10867 = distinct !DISubprogram(name: "matroska_ebmlnum_uint", scope: !939, file: !939, line: 1013, type: !10868, isLocal: true, isDefinition: true, scopeLine: 1015, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!10868 = !DISubroutineType(types: !10869)
!10869 = !{!1039, !2392, !1053, !1036, !1055}
!10870 = !DILocalVariable(name: "matroska", arg: 1, scope: !10867, file: !939, line: 1013, type: !2392)
!10871 = !DILocation(line: 1013, column: 56, scope: !10867)
!10872 = !DILocalVariable(name: "data", arg: 2, scope: !10867, file: !939, line: 1014, type: !1053)
!10873 = !DILocation(line: 1014, column: 43, scope: !10867)
!10874 = !DILocalVariable(name: "size", arg: 3, scope: !10867, file: !939, line: 1014, type: !1036)
!10875 = !DILocation(line: 1014, column: 58, scope: !10867)
!10876 = !DILocalVariable(name: "num", arg: 4, scope: !10867, file: !939, line: 1014, type: !1055)
!10877 = !DILocation(line: 1014, column: 74, scope: !10867)
!10878 = !DILocalVariable(name: "pb", scope: !10867, file: !939, line: 1016, type: !1413)
!10879 = !DILocation(line: 1016, column: 17, scope: !10867)
!10880 = !DILocation(line: 1017, column: 28, scope: !10867)
!10881 = !DILocation(line: 1017, column: 34, scope: !10867)
!10882 = !DILocation(line: 1017, column: 5, scope: !10867)
!10883 = !DILocation(line: 1018, column: 26, scope: !10867)
!10884 = !DILocation(line: 1018, column: 43, scope: !10867)
!10885 = !DILocation(line: 1018, column: 49, scope: !10867)
!10886 = !DILocation(line: 1018, column: 42, scope: !10867)
!10887 = !DILocation(line: 1018, column: 42, scope: !10888)
!10888 = !DILexicalBlockFile(scope: !10867, file: !939, discriminator: 1)
!10889 = !DILocation(line: 1018, column: 64, scope: !10890)
!10890 = !DILexicalBlockFile(scope: !10867, file: !939, discriminator: 2)
!10891 = !DILocation(line: 1018, column: 42, scope: !10890)
!10892 = !DILocation(line: 1018, column: 42, scope: !10893)
!10893 = !DILexicalBlockFile(scope: !10867, file: !939, discriminator: 3)
!10894 = !DILocation(line: 1018, column: 72, scope: !10893)
!10895 = !DILocation(line: 1018, column: 12, scope: !10893)
!10896 = !DILocation(line: 1018, column: 5, scope: !10893)
!10897 = distinct !DISubprogram(name: "matroska_parse_laces", scope: !939, file: !939, line: 2790, type: !10898, isLocal: true, isDefinition: true, scopeLine: 2793, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!10898 = !DISubroutineType(types: !10899)
!10899 = !{!1039, !2392, !1058, !1601, !1039, !10900, !1601}
!10900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8261, size: 64, align: 64)
!10901 = !DILocalVariable(name: "matroska", arg: 1, scope: !10897, file: !939, line: 2790, type: !2392)
!10902 = !DILocation(line: 2790, column: 55, scope: !10897)
!10903 = !DILocalVariable(name: "buf", arg: 2, scope: !10897, file: !939, line: 2790, type: !1058)
!10904 = !DILocation(line: 2790, column: 75, scope: !10897)
!10905 = !DILocalVariable(name: "buf_size", arg: 3, scope: !10897, file: !939, line: 2791, type: !1601)
!10906 = !DILocation(line: 2791, column: 38, scope: !10897)
!10907 = !DILocalVariable(name: "type", arg: 4, scope: !10897, file: !939, line: 2791, type: !1039)
!10908 = !DILocation(line: 2791, column: 52, scope: !10897)
!10909 = !DILocalVariable(name: "lace_buf", arg: 5, scope: !10897, file: !939, line: 2792, type: !10900)
!10910 = !DILocation(line: 2792, column: 44, scope: !10897)
!10911 = !DILocalVariable(name: "laces", arg: 6, scope: !10897, file: !939, line: 2792, type: !1601)
!10912 = !DILocation(line: 2792, column: 59, scope: !10897)
!10913 = !DILocalVariable(name: "res", scope: !10897, file: !939, line: 2794, type: !1039)
!10914 = !DILocation(line: 2794, column: 9, scope: !10897)
!10915 = !DILocalVariable(name: "n", scope: !10897, file: !939, line: 2794, type: !1039)
!10916 = !DILocation(line: 2794, column: 18, scope: !10897)
!10917 = !DILocalVariable(name: "size", scope: !10897, file: !939, line: 2794, type: !1039)
!10918 = !DILocation(line: 2794, column: 21, scope: !10897)
!10919 = !DILocation(line: 2794, column: 29, scope: !10897)
!10920 = !DILocation(line: 2794, column: 28, scope: !10897)
!10921 = !DILocalVariable(name: "data", scope: !10897, file: !939, line: 2795, type: !1053)
!10922 = !DILocation(line: 2795, column: 14, scope: !10897)
!10923 = !DILocation(line: 2795, column: 22, scope: !10897)
!10924 = !DILocation(line: 2795, column: 21, scope: !10897)
!10925 = !DILocalVariable(name: "lace_size", scope: !10897, file: !939, line: 2796, type: !8261)
!10926 = !DILocation(line: 2796, column: 15, scope: !10897)
!10927 = !DILocation(line: 2798, column: 10, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10897, file: !939, line: 2798, column: 9)
!10929 = !DILocation(line: 2798, column: 9, scope: !10897)
!10930 = !DILocation(line: 2799, column: 10, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10928, file: !939, line: 2798, column: 16)
!10932 = !DILocation(line: 2799, column: 16, scope: !10931)
!10933 = !DILocation(line: 2800, column: 21, scope: !10931)
!10934 = !DILocation(line: 2800, column: 10, scope: !10931)
!10935 = !DILocation(line: 2800, column: 19, scope: !10931)
!10936 = !DILocation(line: 2801, column: 15, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10931, file: !939, line: 2801, column: 13)
!10938 = !DILocation(line: 2801, column: 14, scope: !10937)
!10939 = !DILocation(line: 2801, column: 13, scope: !10931)
!10940 = !DILocation(line: 2802, column: 13, scope: !10937)
!10941 = !DILocation(line: 2804, column: 24, scope: !10931)
!10942 = !DILocation(line: 2804, column: 10, scope: !10931)
!10943 = !DILocation(line: 2804, column: 22, scope: !10931)
!10944 = !DILocation(line: 2805, column: 9, scope: !10931)
!10945 = !DILocation(line: 2808, column: 5, scope: !10897)
!10946 = distinct !{!10946, !10945}
!10947 = !DILocation(line: 2808, column: 16, scope: !10948)
!10948 = !DILexicalBlockFile(scope: !10949, file: !939, discriminator: 1)
!10949 = distinct !DILexicalBlock(scope: !10950, file: !939, line: 2808, column: 14)
!10950 = distinct !DILexicalBlock(scope: !10897, file: !939, line: 2808, column: 8)
!10951 = !DILocation(line: 2808, column: 21, scope: !10948)
!10952 = !DILocation(line: 2808, column: 14, scope: !10948)
!10953 = !DILocation(line: 2808, column: 29, scope: !10954)
!10954 = !DILexicalBlockFile(scope: !10955, file: !939, discriminator: 2)
!10955 = distinct !DILexicalBlock(scope: !10949, file: !939, line: 2808, column: 27)
!10956 = !DILocation(line: 2808, column: 91, scope: !10957)
!10957 = !DILexicalBlockFile(scope: !10954, file: !939, discriminator: 4)
!10958 = !DILocation(line: 2808, column: 91, scope: !10954)
!10959 = !DILocation(line: 2808, column: 102, scope: !10960)
!10960 = !DILexicalBlockFile(scope: !10950, file: !939, discriminator: 3)
!10961 = !DILocation(line: 2809, column: 15, scope: !10897)
!10962 = !DILocation(line: 2809, column: 14, scope: !10897)
!10963 = !DILocation(line: 2809, column: 20, scope: !10897)
!10964 = !DILocation(line: 2809, column: 6, scope: !10897)
!10965 = !DILocation(line: 2809, column: 12, scope: !10897)
!10966 = !DILocation(line: 2810, column: 10, scope: !10897)
!10967 = !DILocation(line: 2811, column: 10, scope: !10897)
!10968 = !DILocation(line: 2812, column: 29, scope: !10897)
!10969 = !DILocation(line: 2812, column: 28, scope: !10897)
!10970 = !DILocation(line: 2812, column: 35, scope: !10897)
!10971 = !DILocation(line: 2812, column: 17, scope: !10897)
!10972 = !DILocation(line: 2812, column: 15, scope: !10897)
!10973 = !DILocation(line: 2813, column: 10, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10897, file: !939, line: 2813, column: 9)
!10975 = !DILocation(line: 2813, column: 9, scope: !10897)
!10976 = !DILocation(line: 2814, column: 9, scope: !10974)
!10977 = !DILocation(line: 2816, column: 13, scope: !10897)
!10978 = !DILocation(line: 2816, column: 5, scope: !10897)
!10979 = !DILocalVariable(name: "temp", scope: !10980, file: !939, line: 2819, type: !1049)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !939, line: 2818, column: 5)
!10981 = distinct !DILexicalBlock(scope: !10897, file: !939, line: 2816, column: 19)
!10982 = !DILocation(line: 2819, column: 17, scope: !10980)
!10983 = !DILocalVariable(name: "total", scope: !10980, file: !939, line: 2820, type: !1036)
!10984 = !DILocation(line: 2820, column: 18, scope: !10980)
!10985 = !DILocation(line: 2821, column: 16, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10980, file: !939, line: 2821, column: 9)
!10987 = !DILocation(line: 2821, column: 14, scope: !10986)
!10988 = !DILocation(line: 2821, column: 21, scope: !10989)
!10989 = !DILexicalBlockFile(scope: !10990, file: !939, discriminator: 1)
!10990 = distinct !DILexicalBlock(scope: !10986, file: !939, line: 2821, column: 9)
!10991 = !DILocation(line: 2821, column: 25, scope: !10989)
!10992 = !DILocation(line: 2821, column: 30, scope: !10989)
!10993 = !DILocation(line: 2821, column: 33, scope: !10994)
!10994 = !DILexicalBlockFile(scope: !10990, file: !939, discriminator: 2)
!10995 = !DILocation(line: 2821, column: 38, scope: !10994)
!10996 = !DILocation(line: 2821, column: 37, scope: !10994)
!10997 = !DILocation(line: 2821, column: 44, scope: !10994)
!10998 = !DILocation(line: 2821, column: 35, scope: !10994)
!10999 = !DILocation(line: 2821, column: 9, scope: !11000)
!11000 = !DILexicalBlockFile(scope: !10986, file: !939, discriminator: 3)
!11001 = !DILocation(line: 2822, column: 13, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10990, file: !939, line: 2821, column: 54)
!11003 = !DILocation(line: 2823, column: 21, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !11005, file: !939, line: 2823, column: 21)
!11005 = distinct !DILexicalBlock(scope: !11002, file: !939, line: 2822, column: 23)
!11006 = !DILocation(line: 2823, column: 29, scope: !11004)
!11007 = !DILocation(line: 2823, column: 26, scope: !11004)
!11008 = !DILocation(line: 2823, column: 21, scope: !11005)
!11009 = !DILocation(line: 2824, column: 25, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11004, file: !939, line: 2823, column: 36)
!11011 = !DILocation(line: 2825, column: 21, scope: !11010)
!11012 = !DILocation(line: 2827, column: 25, scope: !11005)
!11013 = !DILocation(line: 2827, column: 24, scope: !11005)
!11014 = !DILocation(line: 2827, column: 22, scope: !11005)
!11015 = !DILocation(line: 2828, column: 26, scope: !11005)
!11016 = !DILocation(line: 2828, column: 23, scope: !11005)
!11017 = !DILocation(line: 2829, column: 33, scope: !11005)
!11018 = !DILocation(line: 2829, column: 27, scope: !11005)
!11019 = !DILocation(line: 2829, column: 17, scope: !11005)
!11020 = !DILocation(line: 2829, column: 30, scope: !11005)
!11021 = !DILocation(line: 2830, column: 22, scope: !11005)
!11022 = !DILocation(line: 2831, column: 22, scope: !11005)
!11023 = !DILocation(line: 2832, column: 21, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11005, file: !939, line: 2832, column: 21)
!11025 = !DILocation(line: 2832, column: 26, scope: !11024)
!11026 = !DILocation(line: 2832, column: 21, scope: !11005)
!11027 = !DILocation(line: 2833, column: 21, scope: !11024)
!11028 = !DILocation(line: 2822, column: 13, scope: !11029)
!11029 = !DILexicalBlockFile(scope: !11002, file: !939, discriminator: 1)
!11030 = distinct !{!11030, !11001}
!11031 = !DILocation(line: 2835, column: 9, scope: !11002)
!11032 = !DILocation(line: 2821, column: 50, scope: !11033)
!11033 = !DILexicalBlockFile(scope: !10990, file: !939, discriminator: 4)
!11034 = !DILocation(line: 2821, column: 9, scope: !11033)
!11035 = distinct !{!11035, !11036}
!11036 = !DILocation(line: 2821, column: 9, scope: !10980)
!11037 = !DILocation(line: 2836, column: 13, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !10980, file: !939, line: 2836, column: 13)
!11039 = !DILocation(line: 2836, column: 21, scope: !11038)
!11040 = !DILocation(line: 2836, column: 18, scope: !11038)
!11041 = !DILocation(line: 2836, column: 13, scope: !10980)
!11042 = !DILocation(line: 2837, column: 17, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11038, file: !939, line: 2836, column: 28)
!11044 = !DILocation(line: 2838, column: 13, scope: !11043)
!11045 = !DILocation(line: 2841, column: 24, scope: !10980)
!11046 = !DILocation(line: 2841, column: 31, scope: !10980)
!11047 = !DILocation(line: 2841, column: 29, scope: !10980)
!11048 = !DILocation(line: 2841, column: 19, scope: !10980)
!11049 = !DILocation(line: 2841, column: 9, scope: !10980)
!11050 = !DILocation(line: 2841, column: 22, scope: !10980)
!11051 = !DILocation(line: 2842, column: 9, scope: !10980)
!11052 = !DILocation(line: 2846, column: 13, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !10981, file: !939, line: 2846, column: 13)
!11054 = !DILocation(line: 2846, column: 22, scope: !11053)
!11055 = !DILocation(line: 2846, column: 21, scope: !11053)
!11056 = !DILocation(line: 2846, column: 18, scope: !11053)
!11057 = !DILocation(line: 2846, column: 13, scope: !10981)
!11058 = !DILocation(line: 2847, column: 17, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11053, file: !939, line: 2846, column: 30)
!11060 = !DILocation(line: 2848, column: 13, scope: !11059)
!11061 = !DILocation(line: 2850, column: 16, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !10981, file: !939, line: 2850, column: 9)
!11063 = !DILocation(line: 2850, column: 14, scope: !11062)
!11064 = !DILocation(line: 2850, column: 21, scope: !11065)
!11065 = !DILexicalBlockFile(scope: !11066, file: !939, discriminator: 1)
!11066 = distinct !DILexicalBlock(scope: !11062, file: !939, line: 2850, column: 9)
!11067 = !DILocation(line: 2850, column: 26, scope: !11065)
!11068 = !DILocation(line: 2850, column: 25, scope: !11065)
!11069 = !DILocation(line: 2850, column: 23, scope: !11065)
!11070 = !DILocation(line: 2850, column: 9, scope: !11065)
!11071 = !DILocation(line: 2851, column: 28, scope: !11066)
!11072 = !DILocation(line: 2851, column: 36, scope: !11066)
!11073 = !DILocation(line: 2851, column: 35, scope: !11066)
!11074 = !DILocation(line: 2851, column: 33, scope: !11066)
!11075 = !DILocation(line: 2851, column: 23, scope: !11066)
!11076 = !DILocation(line: 2851, column: 13, scope: !11066)
!11077 = !DILocation(line: 2851, column: 26, scope: !11066)
!11078 = !DILocation(line: 2850, column: 34, scope: !11079)
!11079 = !DILexicalBlockFile(scope: !11066, file: !939, discriminator: 2)
!11080 = !DILocation(line: 2850, column: 9, scope: !11079)
!11081 = distinct !{!11081, !11082}
!11082 = !DILocation(line: 2850, column: 9, scope: !10981)
!11083 = !DILocation(line: 2852, column: 9, scope: !10981)
!11084 = !DILocalVariable(name: "num", scope: !11085, file: !939, line: 2856, type: !1045)
!11085 = distinct !DILexicalBlock(scope: !10981, file: !939, line: 2855, column: 5)
!11086 = !DILocation(line: 2856, column: 18, scope: !11085)
!11087 = !DILocalVariable(name: "total", scope: !11085, file: !939, line: 2857, type: !1045)
!11088 = !DILocation(line: 2857, column: 18, scope: !11085)
!11089 = !DILocation(line: 2858, column: 35, scope: !11085)
!11090 = !DILocation(line: 2858, column: 45, scope: !11085)
!11091 = !DILocation(line: 2858, column: 51, scope: !11085)
!11092 = !DILocation(line: 2858, column: 13, scope: !11085)
!11093 = !DILocation(line: 2858, column: 11, scope: !11085)
!11094 = !DILocation(line: 2859, column: 13, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11085, file: !939, line: 2859, column: 13)
!11096 = !DILocation(line: 2859, column: 15, scope: !11095)
!11097 = !DILocation(line: 2859, column: 19, scope: !11095)
!11098 = !DILocation(line: 2859, column: 22, scope: !11099)
!11099 = !DILexicalBlockFile(scope: !11095, file: !939, discriminator: 1)
!11100 = !DILocation(line: 2859, column: 26, scope: !11099)
!11101 = !DILocation(line: 2859, column: 13, scope: !11099)
!11102 = !DILocation(line: 2860, column: 20, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11095, file: !939, line: 2859, column: 40)
!11104 = !DILocation(line: 2860, column: 30, scope: !11103)
!11105 = !DILocation(line: 2860, column: 13, scope: !11103)
!11106 = !DILocation(line: 2862, column: 19, scope: !11103)
!11107 = !DILocation(line: 2862, column: 20, scope: !11103)
!11108 = !DILocation(line: 2862, column: 25, scope: !11109)
!11109 = !DILexicalBlockFile(scope: !11103, file: !939, discriminator: 1)
!11110 = !DILocation(line: 2862, column: 19, scope: !11109)
!11111 = !DILocation(line: 2862, column: 19, scope: !11112)
!11112 = !DILexicalBlockFile(scope: !11103, file: !939, discriminator: 2)
!11113 = !DILocation(line: 2862, column: 19, scope: !11114)
!11114 = !DILexicalBlockFile(scope: !11103, file: !939, discriminator: 3)
!11115 = !DILocation(line: 2862, column: 17, scope: !11114)
!11116 = !DILocation(line: 2863, column: 13, scope: !11103)
!11117 = !DILocation(line: 2865, column: 17, scope: !11085)
!11118 = !DILocation(line: 2865, column: 14, scope: !11085)
!11119 = !DILocation(line: 2866, column: 17, scope: !11085)
!11120 = !DILocation(line: 2866, column: 14, scope: !11085)
!11121 = !DILocation(line: 2867, column: 32, scope: !11085)
!11122 = !DILocation(line: 2867, column: 17, scope: !11085)
!11123 = !DILocation(line: 2867, column: 30, scope: !11085)
!11124 = !DILocation(line: 2867, column: 15, scope: !11085)
!11125 = !DILocation(line: 2868, column: 16, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11085, file: !939, line: 2868, column: 9)
!11127 = !DILocation(line: 2868, column: 14, scope: !11126)
!11128 = !DILocation(line: 2868, column: 21, scope: !11129)
!11129 = !DILexicalBlockFile(scope: !11130, file: !939, discriminator: 1)
!11130 = distinct !DILexicalBlock(scope: !11126, file: !939, line: 2868, column: 9)
!11131 = !DILocation(line: 2868, column: 25, scope: !11129)
!11132 = !DILocation(line: 2868, column: 30, scope: !11129)
!11133 = !DILocation(line: 2868, column: 33, scope: !11134)
!11134 = !DILexicalBlockFile(scope: !11130, file: !939, discriminator: 2)
!11135 = !DILocation(line: 2868, column: 38, scope: !11134)
!11136 = !DILocation(line: 2868, column: 37, scope: !11134)
!11137 = !DILocation(line: 2868, column: 44, scope: !11134)
!11138 = !DILocation(line: 2868, column: 35, scope: !11134)
!11139 = !DILocation(line: 2868, column: 9, scope: !11140)
!11140 = !DILexicalBlockFile(scope: !11126, file: !939, discriminator: 3)
!11141 = !DILocalVariable(name: "snum", scope: !11142, file: !939, line: 2869, type: !1047)
!11142 = distinct !DILexicalBlock(scope: !11130, file: !939, line: 2868, column: 54)
!11143 = !DILocation(line: 2869, column: 21, scope: !11142)
!11144 = !DILocalVariable(name: "r", scope: !11142, file: !939, line: 2870, type: !1039)
!11145 = !DILocation(line: 2870, column: 17, scope: !11142)
!11146 = !DILocation(line: 2871, column: 39, scope: !11142)
!11147 = !DILocation(line: 2871, column: 49, scope: !11142)
!11148 = !DILocation(line: 2871, column: 55, scope: !11142)
!11149 = !DILocation(line: 2871, column: 17, scope: !11142)
!11150 = !DILocation(line: 2871, column: 15, scope: !11142)
!11151 = !DILocation(line: 2872, column: 17, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11142, file: !939, line: 2872, column: 17)
!11153 = !DILocation(line: 2872, column: 19, scope: !11152)
!11154 = !DILocation(line: 2872, column: 23, scope: !11152)
!11155 = !DILocation(line: 2872, column: 36, scope: !11156)
!11156 = !DILexicalBlockFile(scope: !11152, file: !939, discriminator: 1)
!11157 = !DILocation(line: 2872, column: 38, scope: !11156)
!11158 = !DILocation(line: 2872, column: 26, scope: !11156)
!11159 = !DILocation(line: 2872, column: 45, scope: !11156)
!11160 = !DILocation(line: 2872, column: 43, scope: !11156)
!11161 = !DILocation(line: 2872, column: 50, scope: !11156)
!11162 = !DILocation(line: 2872, column: 17, scope: !11156)
!11163 = !DILocation(line: 2873, column: 24, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11152, file: !939, line: 2872, column: 74)
!11165 = !DILocation(line: 2873, column: 34, scope: !11164)
!11166 = !DILocation(line: 2873, column: 17, scope: !11164)
!11167 = !DILocation(line: 2875, column: 23, scope: !11164)
!11168 = !DILocation(line: 2875, column: 24, scope: !11164)
!11169 = !DILocation(line: 2875, column: 29, scope: !11170)
!11170 = !DILexicalBlockFile(scope: !11164, file: !939, discriminator: 1)
!11171 = !DILocation(line: 2875, column: 23, scope: !11170)
!11172 = !DILocation(line: 2875, column: 23, scope: !11173)
!11173 = !DILexicalBlockFile(scope: !11164, file: !939, discriminator: 2)
!11174 = !DILocation(line: 2875, column: 23, scope: !11175)
!11175 = !DILexicalBlockFile(scope: !11164, file: !939, discriminator: 3)
!11176 = !DILocation(line: 2875, column: 21, scope: !11175)
!11177 = !DILocation(line: 2876, column: 17, scope: !11164)
!11178 = !DILocation(line: 2878, column: 21, scope: !11142)
!11179 = !DILocation(line: 2878, column: 18, scope: !11142)
!11180 = !DILocation(line: 2879, column: 21, scope: !11142)
!11181 = !DILocation(line: 2879, column: 18, scope: !11142)
!11182 = !DILocation(line: 2880, column: 38, scope: !11142)
!11183 = !DILocation(line: 2880, column: 40, scope: !11142)
!11184 = !DILocation(line: 2880, column: 28, scope: !11142)
!11185 = !DILocation(line: 2880, column: 47, scope: !11142)
!11186 = !DILocation(line: 2880, column: 45, scope: !11142)
!11187 = !DILocation(line: 2880, column: 23, scope: !11142)
!11188 = !DILocation(line: 2880, column: 13, scope: !11142)
!11189 = !DILocation(line: 2880, column: 26, scope: !11142)
!11190 = !DILocation(line: 2881, column: 32, scope: !11142)
!11191 = !DILocation(line: 2881, column: 22, scope: !11142)
!11192 = !DILocation(line: 2881, column: 19, scope: !11142)
!11193 = !DILocation(line: 2882, column: 9, scope: !11142)
!11194 = !DILocation(line: 2868, column: 50, scope: !11195)
!11195 = !DILexicalBlockFile(scope: !11130, file: !939, discriminator: 4)
!11196 = !DILocation(line: 2868, column: 9, scope: !11195)
!11197 = distinct !{!11197, !11198}
!11198 = !DILocation(line: 2868, column: 9, scope: !11085)
!11199 = !DILocation(line: 2883, column: 13, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11085, file: !939, line: 2883, column: 13)
!11201 = !DILocation(line: 2883, column: 21, scope: !11200)
!11202 = !DILocation(line: 2883, column: 18, scope: !11200)
!11203 = !DILocation(line: 2883, column: 13, scope: !11085)
!11204 = !DILocation(line: 2884, column: 17, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11200, file: !939, line: 2883, column: 28)
!11206 = !DILocation(line: 2885, column: 13, scope: !11205)
!11207 = !DILocation(line: 2887, column: 33, scope: !11085)
!11208 = !DILocation(line: 2887, column: 40, scope: !11085)
!11209 = !DILocation(line: 2887, column: 38, scope: !11085)
!11210 = !DILocation(line: 2887, column: 20, scope: !11085)
!11211 = !DILocation(line: 2887, column: 19, scope: !11085)
!11212 = !DILocation(line: 2887, column: 26, scope: !11085)
!11213 = !DILocation(line: 2887, column: 9, scope: !11085)
!11214 = !DILocation(line: 2887, column: 31, scope: !11085)
!11215 = !DILocation(line: 2888, column: 9, scope: !11085)
!11216 = !DILocation(line: 2892, column: 12, scope: !10897)
!11217 = !DILocation(line: 2892, column: 6, scope: !10897)
!11218 = !DILocation(line: 2892, column: 10, scope: !10897)
!11219 = !DILocation(line: 2893, column: 17, scope: !10897)
!11220 = !DILocation(line: 2893, column: 6, scope: !10897)
!11221 = !DILocation(line: 2893, column: 15, scope: !10897)
!11222 = !DILocation(line: 2894, column: 17, scope: !10897)
!11223 = !DILocation(line: 2894, column: 6, scope: !10897)
!11224 = !DILocation(line: 2894, column: 15, scope: !10897)
!11225 = !DILocation(line: 2896, column: 12, scope: !10897)
!11226 = !DILocation(line: 2896, column: 5, scope: !10897)
!11227 = !DILocation(line: 2897, column: 1, scope: !10897)
!11228 = distinct !DISubprogram(name: "matroska_parse_rm_audio", scope: !939, file: !939, line: 2899, type: !11229, isLocal: true, isDefinition: true, scopeLine: 2903, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!11229 = !DISubroutineType(types: !11230)
!11230 = !{!1039, !2392, !3392, !1478, !1053, !1039, !1045, !1047}
!11231 = !DILocalVariable(name: "matroska", arg: 1, scope: !11228, file: !939, line: 2899, type: !2392)
!11232 = !DILocation(line: 2899, column: 58, scope: !11228)
!11233 = !DILocalVariable(name: "track", arg: 2, scope: !11228, file: !939, line: 2900, type: !3392)
!11234 = !DILocation(line: 2900, column: 51, scope: !11228)
!11235 = !DILocalVariable(name: "st", arg: 3, scope: !11228, file: !939, line: 2900, type: !1478)
!11236 = !DILocation(line: 2900, column: 68, scope: !11228)
!11237 = !DILocalVariable(name: "data", arg: 4, scope: !11228, file: !939, line: 2901, type: !1053)
!11238 = !DILocation(line: 2901, column: 45, scope: !11228)
!11239 = !DILocalVariable(name: "size", arg: 5, scope: !11228, file: !939, line: 2901, type: !1039)
!11240 = !DILocation(line: 2901, column: 55, scope: !11228)
!11241 = !DILocalVariable(name: "timecode", arg: 6, scope: !11228, file: !939, line: 2901, type: !1045)
!11242 = !DILocation(line: 2901, column: 70, scope: !11228)
!11243 = !DILocalVariable(name: "pos", arg: 7, scope: !11228, file: !939, line: 2902, type: !1047)
!11244 = !DILocation(line: 2902, column: 44, scope: !11228)
!11245 = !DILocalVariable(name: "a", scope: !11228, file: !939, line: 2904, type: !1039)
!11246 = !DILocation(line: 2904, column: 9, scope: !11228)
!11247 = !DILocation(line: 2904, column: 13, scope: !11228)
!11248 = !DILocation(line: 2904, column: 17, scope: !11228)
!11249 = !DILocation(line: 2904, column: 27, scope: !11228)
!11250 = !DILocalVariable(name: "sps", scope: !11228, file: !939, line: 2905, type: !1039)
!11251 = !DILocation(line: 2905, column: 9, scope: !11228)
!11252 = !DILocation(line: 2905, column: 15, scope: !11228)
!11253 = !DILocation(line: 2905, column: 22, scope: !11228)
!11254 = !DILocation(line: 2905, column: 28, scope: !11228)
!11255 = !DILocalVariable(name: "cfs", scope: !11228, file: !939, line: 2906, type: !1039)
!11256 = !DILocation(line: 2906, column: 9, scope: !11228)
!11257 = !DILocation(line: 2906, column: 15, scope: !11228)
!11258 = !DILocation(line: 2906, column: 22, scope: !11228)
!11259 = !DILocation(line: 2906, column: 28, scope: !11228)
!11260 = !DILocalVariable(name: "h", scope: !11228, file: !939, line: 2907, type: !1039)
!11261 = !DILocation(line: 2907, column: 9, scope: !11228)
!11262 = !DILocation(line: 2907, column: 13, scope: !11228)
!11263 = !DILocation(line: 2907, column: 20, scope: !11228)
!11264 = !DILocation(line: 2907, column: 26, scope: !11228)
!11265 = !DILocalVariable(name: "y", scope: !11228, file: !939, line: 2908, type: !1039)
!11266 = !DILocation(line: 2908, column: 9, scope: !11228)
!11267 = !DILocation(line: 2908, column: 13, scope: !11228)
!11268 = !DILocation(line: 2908, column: 20, scope: !11228)
!11269 = !DILocation(line: 2908, column: 26, scope: !11228)
!11270 = !DILocalVariable(name: "w", scope: !11228, file: !939, line: 2909, type: !1039)
!11271 = !DILocation(line: 2909, column: 9, scope: !11228)
!11272 = !DILocation(line: 2909, column: 13, scope: !11228)
!11273 = !DILocation(line: 2909, column: 20, scope: !11228)
!11274 = !DILocation(line: 2909, column: 26, scope: !11228)
!11275 = !DILocalVariable(name: "x", scope: !11228, file: !939, line: 2910, type: !1039)
!11276 = !DILocation(line: 2910, column: 9, scope: !11228)
!11277 = !DILocation(line: 2912, column: 10, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11228, file: !939, line: 2912, column: 9)
!11279 = !DILocation(line: 2912, column: 17, scope: !11278)
!11280 = !DILocation(line: 2912, column: 23, scope: !11278)
!11281 = !DILocation(line: 2912, column: 9, scope: !11228)
!11282 = !DILocation(line: 2913, column: 13, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11284, file: !939, line: 2913, column: 13)
!11284 = distinct !DILexicalBlock(scope: !11278, file: !939, line: 2912, column: 32)
!11285 = !DILocation(line: 2913, column: 20, scope: !11283)
!11286 = !DILocation(line: 2913, column: 26, scope: !11283)
!11287 = !DILocation(line: 2913, column: 41, scope: !11283)
!11288 = !DILocation(line: 2913, column: 13, scope: !11284)
!11289 = !DILocation(line: 2914, column: 41, scope: !11283)
!11290 = !DILocation(line: 2914, column: 13, scope: !11283)
!11291 = !DILocation(line: 2914, column: 20, scope: !11283)
!11292 = !DILocation(line: 2914, column: 26, scope: !11283)
!11293 = !DILocation(line: 2914, column: 39, scope: !11283)
!11294 = !DILocation(line: 2915, column: 13, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11284, file: !939, line: 2915, column: 13)
!11296 = !DILocation(line: 2915, column: 17, scope: !11295)
!11297 = !DILocation(line: 2915, column: 27, scope: !11295)
!11298 = !DILocation(line: 2915, column: 36, scope: !11295)
!11299 = !DILocation(line: 2915, column: 13, scope: !11284)
!11300 = !DILocation(line: 2916, column: 17, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11302, file: !939, line: 2916, column: 17)
!11302 = distinct !DILexicalBlock(scope: !11295, file: !939, line: 2915, column: 59)
!11303 = !DILocation(line: 2916, column: 24, scope: !11301)
!11304 = !DILocation(line: 2916, column: 30, scope: !11301)
!11305 = !DILocation(line: 2916, column: 28, scope: !11301)
!11306 = !DILocation(line: 2916, column: 32, scope: !11301)
!11307 = !DILocation(line: 2916, column: 22, scope: !11301)
!11308 = !DILocation(line: 2916, column: 17, scope: !11302)
!11309 = !DILocation(line: 2917, column: 24, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11301, file: !939, line: 2916, column: 37)
!11311 = !DILocation(line: 2917, column: 34, scope: !11310)
!11312 = !DILocation(line: 2917, column: 17, scope: !11310)
!11313 = !DILocation(line: 2919, column: 17, scope: !11310)
!11314 = !DILocation(line: 2921, column: 20, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11302, file: !939, line: 2921, column: 13)
!11316 = !DILocation(line: 2921, column: 18, scope: !11315)
!11317 = !DILocation(line: 2921, column: 25, scope: !11318)
!11318 = !DILexicalBlockFile(scope: !11319, file: !939, discriminator: 1)
!11319 = distinct !DILexicalBlock(scope: !11315, file: !939, line: 2921, column: 13)
!11320 = !DILocation(line: 2921, column: 29, scope: !11318)
!11321 = !DILocation(line: 2921, column: 31, scope: !11318)
!11322 = !DILocation(line: 2921, column: 27, scope: !11318)
!11323 = !DILocation(line: 2921, column: 13, scope: !11318)
!11324 = !DILocation(line: 2922, column: 24, scope: !11319)
!11325 = !DILocation(line: 2922, column: 31, scope: !11319)
!11326 = !DILocation(line: 2922, column: 37, scope: !11319)
!11327 = !DILocation(line: 2922, column: 43, scope: !11319)
!11328 = !DILocation(line: 2922, column: 45, scope: !11319)
!11329 = !DILocation(line: 2922, column: 51, scope: !11319)
!11330 = !DILocation(line: 2922, column: 49, scope: !11319)
!11331 = !DILocation(line: 2922, column: 41, scope: !11319)
!11332 = !DILocation(line: 2922, column: 55, scope: !11319)
!11333 = !DILocation(line: 2922, column: 59, scope: !11319)
!11334 = !DILocation(line: 2922, column: 57, scope: !11319)
!11335 = !DILocation(line: 2922, column: 53, scope: !11319)
!11336 = !DILocation(line: 2923, column: 24, scope: !11319)
!11337 = !DILocation(line: 2923, column: 31, scope: !11319)
!11338 = !DILocation(line: 2923, column: 35, scope: !11319)
!11339 = !DILocation(line: 2923, column: 33, scope: !11319)
!11340 = !DILocation(line: 2923, column: 29, scope: !11319)
!11341 = !DILocation(line: 2923, column: 40, scope: !11319)
!11342 = !DILocation(line: 2922, column: 17, scope: !11319)
!11343 = !DILocation(line: 2921, column: 37, scope: !11344)
!11344 = !DILexicalBlockFile(scope: !11319, file: !939, discriminator: 2)
!11345 = !DILocation(line: 2921, column: 13, scope: !11344)
!11346 = distinct !{!11346, !11347}
!11347 = !DILocation(line: 2921, column: 13, scope: !11302)
!11348 = !DILocation(line: 2924, column: 9, scope: !11302)
!11349 = !DILocation(line: 2924, column: 20, scope: !11350)
!11350 = !DILexicalBlockFile(scope: !11351, file: !939, discriminator: 1)
!11351 = distinct !DILexicalBlock(scope: !11295, file: !939, line: 2924, column: 20)
!11352 = !DILocation(line: 2924, column: 24, scope: !11350)
!11353 = !DILocation(line: 2924, column: 34, scope: !11350)
!11354 = !DILocation(line: 2924, column: 43, scope: !11350)
!11355 = !DILocation(line: 2925, column: 17, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11357, file: !939, line: 2925, column: 17)
!11357 = distinct !DILexicalBlock(scope: !11351, file: !939, line: 2924, column: 64)
!11358 = !DILocation(line: 2925, column: 24, scope: !11356)
!11359 = !DILocation(line: 2925, column: 22, scope: !11356)
!11360 = !DILocation(line: 2925, column: 17, scope: !11357)
!11361 = !DILocation(line: 2926, column: 24, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11356, file: !939, line: 2925, column: 27)
!11363 = !DILocation(line: 2926, column: 34, scope: !11362)
!11364 = !DILocation(line: 2926, column: 17, scope: !11362)
!11365 = !DILocation(line: 2928, column: 17, scope: !11362)
!11366 = !DILocation(line: 2930, column: 20, scope: !11357)
!11367 = !DILocation(line: 2930, column: 27, scope: !11357)
!11368 = !DILocation(line: 2930, column: 33, scope: !11357)
!11369 = !DILocation(line: 2930, column: 39, scope: !11357)
!11370 = !DILocation(line: 2930, column: 43, scope: !11357)
!11371 = !DILocation(line: 2930, column: 41, scope: !11357)
!11372 = !DILocation(line: 2930, column: 37, scope: !11357)
!11373 = !DILocation(line: 2930, column: 46, scope: !11357)
!11374 = !DILocation(line: 2930, column: 52, scope: !11357)
!11375 = !DILocation(line: 2930, column: 13, scope: !11357)
!11376 = !DILocation(line: 2931, column: 9, scope: !11357)
!11377 = !DILocation(line: 2932, column: 17, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11379, file: !939, line: 2932, column: 17)
!11379 = distinct !DILexicalBlock(scope: !11351, file: !939, line: 2931, column: 16)
!11380 = !DILocation(line: 2932, column: 24, scope: !11378)
!11381 = !DILocation(line: 2932, column: 30, scope: !11378)
!11382 = !DILocation(line: 2932, column: 28, scope: !11378)
!11383 = !DILocation(line: 2932, column: 34, scope: !11378)
!11384 = !DILocation(line: 2932, column: 32, scope: !11378)
!11385 = !DILocation(line: 2932, column: 22, scope: !11378)
!11386 = !DILocation(line: 2932, column: 38, scope: !11378)
!11387 = !DILocation(line: 2932, column: 41, scope: !11388)
!11388 = !DILexicalBlockFile(scope: !11378, file: !939, discriminator: 1)
!11389 = !DILocation(line: 2932, column: 42, scope: !11388)
!11390 = !DILocation(line: 2932, column: 46, scope: !11388)
!11391 = !DILocation(line: 2932, column: 49, scope: !11392)
!11392 = !DILexicalBlockFile(scope: !11378, file: !939, discriminator: 2)
!11393 = !DILocation(line: 2932, column: 51, scope: !11392)
!11394 = !DILocation(line: 2932, column: 50, scope: !11392)
!11395 = !DILocation(line: 2932, column: 17, scope: !11392)
!11396 = !DILocation(line: 2933, column: 24, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11378, file: !939, line: 2932, column: 56)
!11398 = !DILocation(line: 2933, column: 34, scope: !11397)
!11399 = !DILocation(line: 2933, column: 17, scope: !11397)
!11400 = !DILocation(line: 2935, column: 17, scope: !11397)
!11401 = !DILocation(line: 2937, column: 20, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11379, file: !939, line: 2937, column: 13)
!11403 = !DILocation(line: 2937, column: 18, scope: !11402)
!11404 = !DILocation(line: 2937, column: 25, scope: !11405)
!11405 = !DILexicalBlockFile(scope: !11406, file: !939, discriminator: 1)
!11406 = distinct !DILexicalBlock(scope: !11402, file: !939, line: 2937, column: 13)
!11407 = !DILocation(line: 2937, column: 29, scope: !11405)
!11408 = !DILocation(line: 2937, column: 33, scope: !11405)
!11409 = !DILocation(line: 2937, column: 31, scope: !11405)
!11410 = !DILocation(line: 2937, column: 27, scope: !11405)
!11411 = !DILocation(line: 2937, column: 13, scope: !11405)
!11412 = !DILocation(line: 2938, column: 24, scope: !11406)
!11413 = !DILocation(line: 2938, column: 31, scope: !11406)
!11414 = !DILocation(line: 2938, column: 37, scope: !11406)
!11415 = !DILocation(line: 2939, column: 24, scope: !11406)
!11416 = !DILocation(line: 2939, column: 31, scope: !11406)
!11417 = !DILocation(line: 2939, column: 35, scope: !11406)
!11418 = !DILocation(line: 2939, column: 33, scope: !11406)
!11419 = !DILocation(line: 2939, column: 41, scope: !11406)
!11420 = !DILocation(line: 2939, column: 43, scope: !11406)
!11421 = !DILocation(line: 2939, column: 48, scope: !11406)
!11422 = !DILocation(line: 2939, column: 56, scope: !11406)
!11423 = !DILocation(line: 2939, column: 58, scope: !11406)
!11424 = !DILocation(line: 2939, column: 53, scope: !11406)
!11425 = !DILocation(line: 2939, column: 37, scope: !11406)
!11426 = !DILocation(line: 2939, column: 66, scope: !11406)
!11427 = !DILocation(line: 2939, column: 68, scope: !11406)
!11428 = !DILocation(line: 2939, column: 63, scope: !11406)
!11429 = !DILocation(line: 2939, column: 28, scope: !11406)
!11430 = !DILocation(line: 2938, column: 41, scope: !11406)
!11431 = !DILocation(line: 2940, column: 24, scope: !11406)
!11432 = !DILocation(line: 2940, column: 31, scope: !11406)
!11433 = !DILocation(line: 2940, column: 35, scope: !11406)
!11434 = !DILocation(line: 2940, column: 33, scope: !11406)
!11435 = !DILocation(line: 2940, column: 29, scope: !11406)
!11436 = !DILocation(line: 2940, column: 40, scope: !11406)
!11437 = !DILocation(line: 2938, column: 17, scope: !11406)
!11438 = !DILocation(line: 2937, column: 39, scope: !11439)
!11439 = !DILexicalBlockFile(scope: !11406, file: !939, discriminator: 2)
!11440 = !DILocation(line: 2937, column: 13, scope: !11439)
!11441 = distinct !{!11441, !11442}
!11442 = !DILocation(line: 2937, column: 13, scope: !11379)
!11443 = !DILocation(line: 2943, column: 15, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11284, file: !939, line: 2943, column: 13)
!11445 = !DILocation(line: 2943, column: 22, scope: !11444)
!11446 = !DILocation(line: 2943, column: 28, scope: !11444)
!11447 = !DILocation(line: 2943, column: 13, scope: !11444)
!11448 = !DILocation(line: 2943, column: 46, scope: !11444)
!11449 = !DILocation(line: 2943, column: 43, scope: !11444)
!11450 = !DILocation(line: 2943, column: 13, scope: !11284)
!11451 = !DILocation(line: 2944, column: 17, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11453, file: !939, line: 2944, column: 17)
!11453 = distinct !DILexicalBlock(scope: !11444, file: !939, line: 2943, column: 49)
!11454 = !DILocation(line: 2944, column: 21, scope: !11452)
!11455 = !DILocation(line: 2944, column: 31, scope: !11452)
!11456 = !DILocation(line: 2944, column: 40, scope: !11452)
!11457 = !DILocation(line: 2944, column: 17, scope: !11453)
!11458 = !DILocation(line: 2945, column: 41, scope: !11452)
!11459 = !DILocation(line: 2945, column: 48, scope: !11452)
!11460 = !DILocation(line: 2945, column: 54, scope: !11452)
!11461 = !DILocation(line: 2945, column: 59, scope: !11452)
!11462 = !DILocation(line: 2945, column: 62, scope: !11452)
!11463 = !DILocation(line: 2945, column: 17, scope: !11452)
!11464 = !DILocation(line: 2946, column: 13, scope: !11453)
!11465 = !DILocation(line: 2946, column: 20, scope: !11453)
!11466 = !DILocation(line: 2946, column: 26, scope: !11453)
!11467 = !DILocation(line: 2946, column: 41, scope: !11453)
!11468 = !DILocation(line: 2947, column: 36, scope: !11453)
!11469 = !DILocation(line: 2947, column: 40, scope: !11453)
!11470 = !DILocation(line: 2947, column: 38, scope: !11453)
!11471 = !DILocation(line: 2947, column: 44, scope: !11453)
!11472 = !DILocation(line: 2947, column: 42, scope: !11453)
!11473 = !DILocation(line: 2947, column: 13, scope: !11453)
!11474 = !DILocation(line: 2947, column: 20, scope: !11453)
!11475 = !DILocation(line: 2947, column: 26, scope: !11453)
!11476 = !DILocation(line: 2947, column: 34, scope: !11453)
!11477 = !DILocation(line: 2948, column: 9, scope: !11453)
!11478 = !DILocation(line: 2949, column: 5, scope: !11284)
!11479 = !DILocation(line: 2951, column: 5, scope: !11228)
!11480 = !DILocation(line: 2951, column: 12, scope: !11481)
!11481 = !DILexicalBlockFile(scope: !11228, file: !939, discriminator: 1)
!11482 = !DILocation(line: 2951, column: 19, scope: !11481)
!11483 = !DILocation(line: 2951, column: 25, scope: !11481)
!11484 = !DILocation(line: 2951, column: 5, scope: !11481)
!11485 = !DILocalVariable(name: "ret", scope: !11486, file: !939, line: 2952, type: !1039)
!11486 = distinct !DILexicalBlock(scope: !11228, file: !939, line: 2951, column: 34)
!11487 = !DILocation(line: 2952, column: 13, scope: !11486)
!11488 = !DILocalVariable(name: "pktl", scope: !11486, file: !939, line: 2953, type: !1257)
!11489 = !DILocation(line: 2953, column: 18, scope: !11486)
!11490 = !DILocalVariable(name: "pkt", scope: !11486, file: !939, line: 2953, type: !1256)
!11491 = !DILocation(line: 2953, column: 25, scope: !11486)
!11492 = !DILocation(line: 2955, column: 29, scope: !11486)
!11493 = !DILocation(line: 2955, column: 34, scope: !11486)
!11494 = !DILocation(line: 2955, column: 15, scope: !11486)
!11495 = !DILocation(line: 2955, column: 13, scope: !11486)
!11496 = !DILocation(line: 2956, column: 13, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11486, file: !939, line: 2956, column: 13)
!11498 = !DILocation(line: 2956, column: 17, scope: !11497)
!11499 = !DILocation(line: 2956, column: 13, scope: !11486)
!11500 = !DILocation(line: 2957, column: 20, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11497, file: !939, line: 2956, column: 22)
!11502 = !DILocation(line: 2957, column: 13, scope: !11501)
!11503 = !DILocation(line: 2959, column: 16, scope: !11486)
!11504 = !DILocation(line: 2959, column: 21, scope: !11486)
!11505 = !DILocation(line: 2960, column: 16, scope: !11486)
!11506 = !DILocation(line: 2960, column: 23, scope: !11486)
!11507 = !DILocation(line: 2960, column: 29, scope: !11486)
!11508 = !DILocation(line: 2960, column: 35, scope: !11486)
!11509 = !DILocation(line: 2960, column: 40, scope: !11486)
!11510 = !DILocation(line: 2960, column: 44, scope: !11486)
!11511 = !DILocation(line: 2960, column: 42, scope: !11486)
!11512 = !DILocation(line: 2960, column: 48, scope: !11486)
!11513 = !DILocation(line: 2960, column: 46, scope: !11486)
!11514 = !DILocation(line: 2960, column: 52, scope: !11486)
!11515 = !DILocation(line: 2960, column: 59, scope: !11486)
!11516 = !DILocation(line: 2960, column: 65, scope: !11486)
!11517 = !DILocation(line: 2960, column: 72, scope: !11486)
!11518 = !DILocation(line: 2960, column: 50, scope: !11486)
!11519 = !DILocation(line: 2960, column: 37, scope: !11486)
!11520 = !DILocation(line: 2960, column: 33, scope: !11486)
!11521 = !DILocation(line: 2961, column: 16, scope: !11486)
!11522 = !DILocation(line: 2959, column: 9, scope: !11486)
!11523 = !DILocation(line: 2962, column: 20, scope: !11486)
!11524 = !DILocation(line: 2962, column: 27, scope: !11486)
!11525 = !DILocation(line: 2962, column: 33, scope: !11486)
!11526 = !DILocation(line: 2962, column: 9, scope: !11486)
!11527 = !DILocation(line: 2962, column: 14, scope: !11486)
!11528 = !DILocation(line: 2962, column: 18, scope: !11486)
!11529 = !DILocation(line: 2963, column: 9, scope: !11486)
!11530 = !DILocation(line: 2963, column: 16, scope: !11486)
!11531 = !DILocation(line: 2963, column: 22, scope: !11486)
!11532 = !DILocation(line: 2963, column: 35, scope: !11486)
!11533 = !DILocation(line: 2964, column: 20, scope: !11486)
!11534 = !DILocation(line: 2964, column: 9, scope: !11486)
!11535 = !DILocation(line: 2964, column: 14, scope: !11486)
!11536 = !DILocation(line: 2964, column: 18, scope: !11486)
!11537 = !DILocation(line: 2965, column: 29, scope: !11486)
!11538 = !DILocation(line: 2965, column: 33, scope: !11486)
!11539 = !DILocation(line: 2965, column: 9, scope: !11486)
!11540 = !DILocation(line: 2965, column: 14, scope: !11486)
!11541 = !DILocation(line: 2965, column: 27, scope: !11486)
!11542 = !DILocation(line: 2966, column: 35, scope: !11486)
!11543 = !DILocation(line: 2966, column: 45, scope: !11486)
!11544 = !DILocation(line: 2966, column: 53, scope: !11486)
!11545 = !DILocation(line: 2966, column: 63, scope: !11486)
!11546 = !DILocation(line: 2966, column: 74, scope: !11486)
!11547 = !DILocation(line: 2966, column: 15, scope: !11486)
!11548 = !DILocation(line: 2966, column: 13, scope: !11486)
!11549 = !DILocation(line: 2967, column: 13, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11486, file: !939, line: 2967, column: 13)
!11551 = !DILocation(line: 2967, column: 17, scope: !11550)
!11552 = !DILocation(line: 2967, column: 13, scope: !11486)
!11553 = !DILocation(line: 2968, column: 29, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11550, file: !939, line: 2967, column: 22)
!11555 = !DILocation(line: 2968, column: 13, scope: !11554)
!11556 = !DILocation(line: 2969, column: 13, scope: !11554)
!11557 = !DILocation(line: 2951, column: 5, scope: !11558)
!11558 = !DILexicalBlockFile(scope: !11228, file: !939, discriminator: 2)
!11559 = distinct !{!11559, !11479}
!11560 = !DILocation(line: 2973, column: 5, scope: !11228)
!11561 = !DILocation(line: 2974, column: 1, scope: !11228)
!11562 = distinct !DISubprogram(name: "matroska_parse_webvtt", scope: !939, file: !939, line: 3083, type: !11563, isLocal: true, isDefinition: true, scopeLine: 3090, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!11563 = !DISubroutineType(types: !11564)
!11564 = !{!1039, !2392, !3392, !1478, !1053, !1039, !1045, !1045, !1047}
!11565 = !DILocalVariable(name: "matroska", arg: 1, scope: !11562, file: !939, line: 3083, type: !2392)
!11566 = !DILocation(line: 3083, column: 56, scope: !11562)
!11567 = !DILocalVariable(name: "track", arg: 2, scope: !11562, file: !939, line: 3084, type: !3392)
!11568 = !DILocation(line: 3084, column: 49, scope: !11562)
!11569 = !DILocalVariable(name: "st", arg: 3, scope: !11562, file: !939, line: 3085, type: !1478)
!11570 = !DILocation(line: 3085, column: 44, scope: !11562)
!11571 = !DILocalVariable(name: "data", arg: 4, scope: !11562, file: !939, line: 3086, type: !1053)
!11572 = !DILocation(line: 3086, column: 43, scope: !11562)
!11573 = !DILocalVariable(name: "data_len", arg: 5, scope: !11562, file: !939, line: 3086, type: !1039)
!11574 = !DILocation(line: 3086, column: 53, scope: !11562)
!11575 = !DILocalVariable(name: "timecode", arg: 6, scope: !11562, file: !939, line: 3087, type: !1045)
!11576 = !DILocation(line: 3087, column: 43, scope: !11562)
!11577 = !DILocalVariable(name: "duration", arg: 7, scope: !11562, file: !939, line: 3088, type: !1045)
!11578 = !DILocation(line: 3088, column: 43, scope: !11562)
!11579 = !DILocalVariable(name: "pos", arg: 8, scope: !11562, file: !939, line: 3089, type: !1047)
!11580 = !DILocation(line: 3089, column: 42, scope: !11562)
!11581 = !DILocalVariable(name: "pktl", scope: !11562, file: !939, line: 3091, type: !1257)
!11582 = !DILocation(line: 3091, column: 14, scope: !11562)
!11583 = !DILocalVariable(name: "pkt", scope: !11562, file: !939, line: 3091, type: !1256)
!11584 = !DILocation(line: 3091, column: 21, scope: !11562)
!11585 = !DILocalVariable(name: "id", scope: !11562, file: !939, line: 3092, type: !1053)
!11586 = !DILocation(line: 3092, column: 14, scope: !11562)
!11587 = !DILocalVariable(name: "settings", scope: !11562, file: !939, line: 3092, type: !1053)
!11588 = !DILocation(line: 3092, column: 19, scope: !11562)
!11589 = !DILocalVariable(name: "text", scope: !11562, file: !939, line: 3092, type: !1053)
!11590 = !DILocation(line: 3092, column: 30, scope: !11562)
!11591 = !DILocalVariable(name: "buf", scope: !11562, file: !939, line: 3092, type: !1053)
!11592 = !DILocation(line: 3092, column: 37, scope: !11562)
!11593 = !DILocalVariable(name: "id_len", scope: !11562, file: !939, line: 3093, type: !1039)
!11594 = !DILocation(line: 3093, column: 9, scope: !11562)
!11595 = !DILocalVariable(name: "settings_len", scope: !11562, file: !939, line: 3093, type: !1039)
!11596 = !DILocation(line: 3093, column: 17, scope: !11562)
!11597 = !DILocalVariable(name: "text_len", scope: !11562, file: !939, line: 3093, type: !1039)
!11598 = !DILocation(line: 3093, column: 31, scope: !11562)
!11599 = !DILocalVariable(name: "p", scope: !11562, file: !939, line: 3094, type: !1053)
!11600 = !DILocation(line: 3094, column: 14, scope: !11562)
!11601 = !DILocalVariable(name: "q", scope: !11562, file: !939, line: 3094, type: !1053)
!11602 = !DILocation(line: 3094, column: 18, scope: !11562)
!11603 = !DILocalVariable(name: "err", scope: !11562, file: !939, line: 3095, type: !1039)
!11604 = !DILocation(line: 3095, column: 9, scope: !11562)
!11605 = !DILocation(line: 3097, column: 9, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11562, file: !939, line: 3097, column: 9)
!11607 = !DILocation(line: 3097, column: 18, scope: !11606)
!11608 = !DILocation(line: 3097, column: 9, scope: !11562)
!11609 = !DILocation(line: 3098, column: 9, scope: !11606)
!11610 = !DILocation(line: 3100, column: 9, scope: !11562)
!11611 = !DILocation(line: 3100, column: 7, scope: !11562)
!11612 = !DILocation(line: 3101, column: 9, scope: !11562)
!11613 = !DILocation(line: 3101, column: 16, scope: !11562)
!11614 = !DILocation(line: 3101, column: 14, scope: !11562)
!11615 = !DILocation(line: 3101, column: 7, scope: !11562)
!11616 = !DILocation(line: 3103, column: 10, scope: !11562)
!11617 = !DILocation(line: 3103, column: 8, scope: !11562)
!11618 = !DILocation(line: 3104, column: 12, scope: !11562)
!11619 = !DILocation(line: 3105, column: 5, scope: !11562)
!11620 = !DILocation(line: 3105, column: 12, scope: !11621)
!11621 = !DILexicalBlockFile(scope: !11562, file: !939, discriminator: 1)
!11622 = !DILocation(line: 3105, column: 16, scope: !11621)
!11623 = !DILocation(line: 3105, column: 14, scope: !11621)
!11624 = !DILocation(line: 3105, column: 5, scope: !11621)
!11625 = !DILocation(line: 3106, column: 14, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11627, file: !939, line: 3106, column: 13)
!11627 = distinct !DILexicalBlock(scope: !11562, file: !939, line: 3105, column: 19)
!11628 = !DILocation(line: 3106, column: 13, scope: !11626)
!11629 = !DILocation(line: 3106, column: 16, scope: !11626)
!11630 = !DILocation(line: 3106, column: 24, scope: !11626)
!11631 = !DILocation(line: 3106, column: 28, scope: !11632)
!11632 = !DILexicalBlockFile(scope: !11626, file: !939, discriminator: 1)
!11633 = !DILocation(line: 3106, column: 27, scope: !11632)
!11634 = !DILocation(line: 3106, column: 30, scope: !11632)
!11635 = !DILocation(line: 3106, column: 13, scope: !11632)
!11636 = !DILocation(line: 3107, column: 22, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11626, file: !939, line: 3106, column: 39)
!11638 = !DILocation(line: 3107, column: 26, scope: !11637)
!11639 = !DILocation(line: 3107, column: 24, scope: !11637)
!11640 = !DILocation(line: 3107, column: 20, scope: !11637)
!11641 = !DILocation(line: 3108, column: 18, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11637, file: !939, line: 3108, column: 17)
!11643 = !DILocation(line: 3108, column: 17, scope: !11642)
!11644 = !DILocation(line: 3108, column: 20, scope: !11642)
!11645 = !DILocation(line: 3108, column: 17, scope: !11637)
!11646 = !DILocation(line: 3109, column: 18, scope: !11642)
!11647 = !DILocation(line: 3109, column: 17, scope: !11642)
!11648 = !DILocation(line: 3110, column: 13, scope: !11637)
!11649 = !DILocation(line: 3112, column: 10, scope: !11627)
!11650 = !DILocation(line: 3105, column: 5, scope: !11651)
!11651 = !DILexicalBlockFile(scope: !11562, file: !939, discriminator: 2)
!11652 = distinct !{!11652, !11619}
!11653 = !DILocation(line: 3115, column: 9, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11562, file: !939, line: 3115, column: 9)
!11655 = !DILocation(line: 3115, column: 14, scope: !11654)
!11656 = !DILocation(line: 3115, column: 11, scope: !11654)
!11657 = !DILocation(line: 3115, column: 16, scope: !11654)
!11658 = !DILocation(line: 3115, column: 20, scope: !11659)
!11659 = !DILexicalBlockFile(scope: !11654, file: !939, discriminator: 1)
!11660 = !DILocation(line: 3115, column: 19, scope: !11659)
!11661 = !DILocation(line: 3115, column: 22, scope: !11659)
!11662 = !DILocation(line: 3115, column: 9, scope: !11659)
!11663 = !DILocation(line: 3116, column: 9, scope: !11654)
!11664 = !DILocation(line: 3117, column: 6, scope: !11562)
!11665 = !DILocation(line: 3119, column: 16, scope: !11562)
!11666 = !DILocation(line: 3119, column: 14, scope: !11562)
!11667 = !DILocation(line: 3120, column: 18, scope: !11562)
!11668 = !DILocation(line: 3121, column: 5, scope: !11562)
!11669 = !DILocation(line: 3121, column: 12, scope: !11621)
!11670 = !DILocation(line: 3121, column: 16, scope: !11621)
!11671 = !DILocation(line: 3121, column: 14, scope: !11621)
!11672 = !DILocation(line: 3121, column: 5, scope: !11621)
!11673 = !DILocation(line: 3122, column: 14, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !939, line: 3122, column: 13)
!11675 = distinct !DILexicalBlock(scope: !11562, file: !939, line: 3121, column: 19)
!11676 = !DILocation(line: 3122, column: 13, scope: !11674)
!11677 = !DILocation(line: 3122, column: 16, scope: !11674)
!11678 = !DILocation(line: 3122, column: 24, scope: !11674)
!11679 = !DILocation(line: 3122, column: 28, scope: !11680)
!11680 = !DILexicalBlockFile(scope: !11674, file: !939, discriminator: 1)
!11681 = !DILocation(line: 3122, column: 27, scope: !11680)
!11682 = !DILocation(line: 3122, column: 30, scope: !11680)
!11683 = !DILocation(line: 3122, column: 13, scope: !11680)
!11684 = !DILocation(line: 3123, column: 28, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11674, file: !939, line: 3122, column: 39)
!11686 = !DILocation(line: 3123, column: 32, scope: !11685)
!11687 = !DILocation(line: 3123, column: 30, scope: !11685)
!11688 = !DILocation(line: 3123, column: 26, scope: !11685)
!11689 = !DILocation(line: 3124, column: 18, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11685, file: !939, line: 3124, column: 17)
!11691 = !DILocation(line: 3124, column: 17, scope: !11690)
!11692 = !DILocation(line: 3124, column: 20, scope: !11690)
!11693 = !DILocation(line: 3124, column: 17, scope: !11685)
!11694 = !DILocation(line: 3125, column: 18, scope: !11690)
!11695 = !DILocation(line: 3125, column: 17, scope: !11690)
!11696 = !DILocation(line: 3126, column: 13, scope: !11685)
!11697 = !DILocation(line: 3128, column: 10, scope: !11675)
!11698 = !DILocation(line: 3121, column: 5, scope: !11651)
!11699 = distinct !{!11699, !11668}
!11700 = !DILocation(line: 3131, column: 9, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11562, file: !939, line: 3131, column: 9)
!11702 = !DILocation(line: 3131, column: 14, scope: !11701)
!11703 = !DILocation(line: 3131, column: 11, scope: !11701)
!11704 = !DILocation(line: 3131, column: 16, scope: !11701)
!11705 = !DILocation(line: 3131, column: 20, scope: !11706)
!11706 = !DILexicalBlockFile(scope: !11701, file: !939, discriminator: 1)
!11707 = !DILocation(line: 3131, column: 19, scope: !11706)
!11708 = !DILocation(line: 3131, column: 22, scope: !11706)
!11709 = !DILocation(line: 3131, column: 9, scope: !11706)
!11710 = !DILocation(line: 3132, column: 9, scope: !11701)
!11711 = !DILocation(line: 3133, column: 6, scope: !11562)
!11712 = !DILocation(line: 3135, column: 12, scope: !11562)
!11713 = !DILocation(line: 3135, column: 10, scope: !11562)
!11714 = !DILocation(line: 3136, column: 16, scope: !11562)
!11715 = !DILocation(line: 3136, column: 20, scope: !11562)
!11716 = !DILocation(line: 3136, column: 18, scope: !11562)
!11717 = !DILocation(line: 3136, column: 14, scope: !11562)
!11718 = !DILocation(line: 3137, column: 5, scope: !11562)
!11719 = !DILocation(line: 3137, column: 12, scope: !11621)
!11720 = !DILocation(line: 3137, column: 21, scope: !11621)
!11721 = !DILocation(line: 3137, column: 5, scope: !11621)
!11722 = !DILocalVariable(name: "len", scope: !11723, file: !939, line: 3138, type: !1510)
!11723 = distinct !DILexicalBlock(scope: !11562, file: !939, line: 3137, column: 26)
!11724 = !DILocation(line: 3138, column: 19, scope: !11723)
!11725 = !DILocation(line: 3138, column: 25, scope: !11723)
!11726 = !DILocation(line: 3138, column: 34, scope: !11723)
!11727 = !DILocalVariable(name: "c", scope: !11723, file: !939, line: 3139, type: !1088)
!11728 = !DILocation(line: 3139, column: 23, scope: !11723)
!11729 = !DILocation(line: 3139, column: 29, scope: !11723)
!11730 = !DILocation(line: 3139, column: 27, scope: !11723)
!11731 = !DILocation(line: 3140, column: 13, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11723, file: !939, line: 3140, column: 13)
!11733 = !DILocation(line: 3140, column: 15, scope: !11732)
!11734 = !DILocation(line: 3140, column: 23, scope: !11732)
!11735 = !DILocation(line: 3140, column: 26, scope: !11736)
!11736 = !DILexicalBlockFile(scope: !11732, file: !939, discriminator: 1)
!11737 = !DILocation(line: 3140, column: 28, scope: !11736)
!11738 = !DILocation(line: 3140, column: 13, scope: !11736)
!11739 = !DILocation(line: 3141, column: 13, scope: !11732)
!11740 = !DILocation(line: 3142, column: 20, scope: !11723)
!11741 = !DILocation(line: 3142, column: 18, scope: !11723)
!11742 = !DILocation(line: 3137, column: 5, scope: !11651)
!11743 = distinct !{!11743, !11718}
!11744 = !DILocation(line: 3145, column: 9, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11562, file: !939, line: 3145, column: 9)
!11746 = !DILocation(line: 3145, column: 18, scope: !11745)
!11747 = !DILocation(line: 3145, column: 9, scope: !11562)
!11748 = !DILocation(line: 3146, column: 9, scope: !11745)
!11749 = !DILocation(line: 3148, column: 25, scope: !11562)
!11750 = !DILocation(line: 3148, column: 30, scope: !11562)
!11751 = !DILocation(line: 3148, column: 11, scope: !11562)
!11752 = !DILocation(line: 3148, column: 9, scope: !11562)
!11753 = !DILocation(line: 3149, column: 9, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11562, file: !939, line: 3149, column: 9)
!11755 = !DILocation(line: 3149, column: 13, scope: !11754)
!11756 = !DILocation(line: 3149, column: 9, scope: !11562)
!11757 = !DILocation(line: 3150, column: 16, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11754, file: !939, line: 3149, column: 18)
!11759 = !DILocation(line: 3150, column: 9, scope: !11758)
!11760 = !DILocation(line: 3153, column: 12, scope: !11562)
!11761 = !DILocation(line: 3153, column: 17, scope: !11562)
!11762 = !DILocation(line: 3153, column: 23, scope: !11562)
!11763 = !DILocation(line: 3153, column: 29, scope: !11562)
!11764 = !DILocation(line: 3153, column: 5, scope: !11562)
!11765 = !DILocation(line: 3155, column: 9, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11562, file: !939, line: 3155, column: 9)
!11767 = !DILocation(line: 3155, column: 16, scope: !11766)
!11768 = !DILocation(line: 3155, column: 9, scope: !11562)
!11769 = !DILocation(line: 3156, column: 39, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11766, file: !939, line: 3155, column: 21)
!11771 = !DILocation(line: 3158, column: 39, scope: !11770)
!11772 = !DILocation(line: 3156, column: 15, scope: !11770)
!11773 = !DILocation(line: 3156, column: 13, scope: !11770)
!11774 = !DILocation(line: 3159, column: 14, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11770, file: !939, line: 3159, column: 13)
!11776 = !DILocation(line: 3159, column: 13, scope: !11770)
!11777 = !DILocation(line: 3160, column: 29, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11775, file: !939, line: 3159, column: 19)
!11779 = !DILocation(line: 3160, column: 13, scope: !11778)
!11780 = !DILocation(line: 3161, column: 13, scope: !11778)
!11781 = !DILocation(line: 3163, column: 16, scope: !11770)
!11782 = !DILocation(line: 3163, column: 21, scope: !11770)
!11783 = !DILocation(line: 3163, column: 25, scope: !11770)
!11784 = !DILocation(line: 3163, column: 9, scope: !11770)
!11785 = !DILocation(line: 3164, column: 5, scope: !11770)
!11786 = !DILocation(line: 3166, column: 9, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11562, file: !939, line: 3166, column: 9)
!11788 = !DILocation(line: 3166, column: 22, scope: !11787)
!11789 = !DILocation(line: 3166, column: 9, scope: !11562)
!11790 = !DILocation(line: 3167, column: 39, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11787, file: !939, line: 3166, column: 27)
!11792 = !DILocation(line: 3169, column: 39, scope: !11791)
!11793 = !DILocation(line: 3167, column: 15, scope: !11791)
!11794 = !DILocation(line: 3167, column: 13, scope: !11791)
!11795 = !DILocation(line: 3170, column: 14, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11791, file: !939, line: 3170, column: 13)
!11797 = !DILocation(line: 3170, column: 13, scope: !11791)
!11798 = !DILocation(line: 3171, column: 29, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11796, file: !939, line: 3170, column: 19)
!11800 = !DILocation(line: 3171, column: 13, scope: !11799)
!11801 = !DILocation(line: 3172, column: 13, scope: !11799)
!11802 = !DILocation(line: 3174, column: 16, scope: !11791)
!11803 = !DILocation(line: 3174, column: 21, scope: !11791)
!11804 = !DILocation(line: 3174, column: 31, scope: !11791)
!11805 = !DILocation(line: 3174, column: 9, scope: !11791)
!11806 = !DILocation(line: 3175, column: 5, scope: !11791)
!11807 = !DILocation(line: 3180, column: 25, scope: !11562)
!11808 = !DILocation(line: 3180, column: 29, scope: !11562)
!11809 = !DILocation(line: 3180, column: 5, scope: !11562)
!11810 = !DILocation(line: 3180, column: 10, scope: !11562)
!11811 = !DILocation(line: 3180, column: 23, scope: !11562)
!11812 = !DILocation(line: 3181, column: 16, scope: !11562)
!11813 = !DILocation(line: 3181, column: 5, scope: !11562)
!11814 = !DILocation(line: 3181, column: 10, scope: !11562)
!11815 = !DILocation(line: 3181, column: 14, scope: !11562)
!11816 = !DILocation(line: 3186, column: 21, scope: !11562)
!11817 = !DILocation(line: 3186, column: 5, scope: !11562)
!11818 = !DILocation(line: 3186, column: 10, scope: !11562)
!11819 = !DILocation(line: 3186, column: 19, scope: !11562)
!11820 = !DILocation(line: 3187, column: 16, scope: !11562)
!11821 = !DILocation(line: 3187, column: 5, scope: !11562)
!11822 = !DILocation(line: 3187, column: 10, scope: !11562)
!11823 = !DILocation(line: 3187, column: 14, scope: !11562)
!11824 = !DILocation(line: 3189, column: 31, scope: !11562)
!11825 = !DILocation(line: 3189, column: 41, scope: !11562)
!11826 = !DILocation(line: 3189, column: 49, scope: !11562)
!11827 = !DILocation(line: 3189, column: 59, scope: !11562)
!11828 = !DILocation(line: 3189, column: 70, scope: !11562)
!11829 = !DILocation(line: 3189, column: 11, scope: !11562)
!11830 = !DILocation(line: 3189, column: 9, scope: !11562)
!11831 = !DILocation(line: 3190, column: 9, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11562, file: !939, line: 3190, column: 9)
!11833 = !DILocation(line: 3190, column: 13, scope: !11832)
!11834 = !DILocation(line: 3190, column: 9, scope: !11562)
!11835 = !DILocation(line: 3191, column: 25, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11832, file: !939, line: 3190, column: 18)
!11837 = !DILocation(line: 3191, column: 9, scope: !11836)
!11838 = !DILocation(line: 3192, column: 9, scope: !11836)
!11839 = !DILocation(line: 3195, column: 5, scope: !11562)
!11840 = !DILocation(line: 3196, column: 1, scope: !11562)
!11841 = distinct !DISubprogram(name: "matroska_parse_frame", scope: !939, file: !939, line: 3198, type: !11842, isLocal: true, isDefinition: true, scopeLine: 3205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!11842 = !DISubroutineType(types: !11843)
!11843 = !{!1039, !2392, !3392, !1478, !1065, !1053, !1039, !1045, !1045, !1047, !1039, !1053, !1045, !1039, !1047}
!11844 = !DILocalVariable(name: "matroska", arg: 1, scope: !11841, file: !939, line: 3198, type: !2392)
!11845 = !DILocation(line: 3198, column: 55, scope: !11841)
!11846 = !DILocalVariable(name: "track", arg: 2, scope: !11841, file: !939, line: 3199, type: !3392)
!11847 = !DILocation(line: 3199, column: 48, scope: !11841)
!11848 = !DILocalVariable(name: "st", arg: 3, scope: !11841, file: !939, line: 3199, type: !1478)
!11849 = !DILocation(line: 3199, column: 65, scope: !11841)
!11850 = !DILocalVariable(name: "buf", arg: 4, scope: !11841, file: !939, line: 3200, type: !1065)
!11851 = !DILocation(line: 3200, column: 46, scope: !11841)
!11852 = !DILocalVariable(name: "data", arg: 5, scope: !11841, file: !939, line: 3200, type: !1053)
!11853 = !DILocation(line: 3200, column: 60, scope: !11841)
!11854 = !DILocalVariable(name: "pkt_size", arg: 6, scope: !11841, file: !939, line: 3200, type: !1039)
!11855 = !DILocation(line: 3200, column: 70, scope: !11841)
!11856 = !DILocalVariable(name: "timecode", arg: 7, scope: !11841, file: !939, line: 3201, type: !1045)
!11857 = !DILocation(line: 3201, column: 42, scope: !11841)
!11858 = !DILocalVariable(name: "lace_duration", arg: 8, scope: !11841, file: !939, line: 3201, type: !1045)
!11859 = !DILocation(line: 3201, column: 61, scope: !11841)
!11860 = !DILocalVariable(name: "pos", arg: 9, scope: !11841, file: !939, line: 3202, type: !1047)
!11861 = !DILocation(line: 3202, column: 41, scope: !11841)
!11862 = !DILocalVariable(name: "is_keyframe", arg: 10, scope: !11841, file: !939, line: 3202, type: !1039)
!11863 = !DILocation(line: 3202, column: 50, scope: !11841)
!11864 = !DILocalVariable(name: "additional", arg: 11, scope: !11841, file: !939, line: 3203, type: !1053)
!11865 = !DILocation(line: 3203, column: 42, scope: !11841)
!11866 = !DILocalVariable(name: "additional_id", arg: 12, scope: !11841, file: !939, line: 3203, type: !1045)
!11867 = !DILocation(line: 3203, column: 63, scope: !11841)
!11868 = !DILocalVariable(name: "additional_size", arg: 13, scope: !11841, file: !939, line: 3203, type: !1039)
!11869 = !DILocation(line: 3203, column: 82, scope: !11841)
!11870 = !DILocalVariable(name: "discard_padding", arg: 14, scope: !11841, file: !939, line: 3204, type: !1047)
!11871 = !DILocation(line: 3204, column: 41, scope: !11841)
!11872 = !DILocalVariable(name: "encodings", scope: !11841, file: !939, line: 3206, type: !4396)
!11873 = !DILocation(line: 3206, column: 28, scope: !11841)
!11874 = !DILocation(line: 3206, column: 40, scope: !11841)
!11875 = !DILocation(line: 3206, column: 47, scope: !11841)
!11876 = !DILocation(line: 3206, column: 57, scope: !11841)
!11877 = !DILocalVariable(name: "pkt_data", scope: !11841, file: !939, line: 3207, type: !1053)
!11878 = !DILocation(line: 3207, column: 14, scope: !11841)
!11879 = !DILocation(line: 3207, column: 25, scope: !11841)
!11880 = !DILocalVariable(name: "res", scope: !11841, file: !939, line: 3208, type: !1039)
!11881 = !DILocation(line: 3208, column: 9, scope: !11841)
!11882 = !DILocalVariable(name: "pktl", scope: !11841, file: !939, line: 3209, type: !1257)
!11883 = !DILocation(line: 3209, column: 14, scope: !11841)
!11884 = !DILocalVariable(name: "pkt", scope: !11841, file: !939, line: 3209, type: !1256)
!11885 = !DILocation(line: 3209, column: 21, scope: !11841)
!11886 = !DILocation(line: 3211, column: 9, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11841, file: !939, line: 3211, column: 9)
!11888 = !DILocation(line: 3211, column: 19, scope: !11887)
!11889 = !DILocation(line: 3211, column: 23, scope: !11890)
!11890 = !DILexicalBlockFile(scope: !11887, file: !939, discriminator: 1)
!11891 = !DILocation(line: 3211, column: 34, scope: !11890)
!11892 = !DILocation(line: 3211, column: 39, scope: !11890)
!11893 = !DILocation(line: 3211, column: 42, scope: !11894)
!11894 = !DILexicalBlockFile(scope: !11887, file: !939, discriminator: 2)
!11895 = !DILocation(line: 3211, column: 53, scope: !11894)
!11896 = !DILocation(line: 3211, column: 59, scope: !11894)
!11897 = !DILocation(line: 3211, column: 9, scope: !11894)
!11898 = !DILocation(line: 3212, column: 60, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11887, file: !939, line: 3211, column: 64)
!11900 = !DILocation(line: 3212, column: 15, scope: !11899)
!11901 = !DILocation(line: 3212, column: 13, scope: !11899)
!11902 = !DILocation(line: 3213, column: 13, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11899, file: !939, line: 3213, column: 13)
!11904 = !DILocation(line: 3213, column: 17, scope: !11903)
!11905 = !DILocation(line: 3213, column: 13, scope: !11899)
!11906 = !DILocation(line: 3214, column: 20, scope: !11903)
!11907 = !DILocation(line: 3214, column: 13, scope: !11903)
!11908 = !DILocation(line: 3215, column: 5, scope: !11899)
!11909 = !DILocation(line: 3217, column: 9, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11841, file: !939, line: 3217, column: 9)
!11911 = !DILocation(line: 3217, column: 13, scope: !11910)
!11912 = !DILocation(line: 3217, column: 23, scope: !11910)
!11913 = !DILocation(line: 3217, column: 32, scope: !11910)
!11914 = !DILocation(line: 3217, column: 9, scope: !11841)
!11915 = !DILocalVariable(name: "wv_data", scope: !11916, file: !939, line: 3218, type: !1053)
!11916 = distinct !DILexicalBlock(scope: !11910, file: !939, line: 3217, column: 56)
!11917 = !DILocation(line: 3218, column: 18, scope: !11916)
!11918 = !DILocation(line: 3219, column: 38, scope: !11916)
!11919 = !DILocation(line: 3219, column: 45, scope: !11916)
!11920 = !DILocation(line: 3219, column: 15, scope: !11916)
!11921 = !DILocation(line: 3219, column: 13, scope: !11916)
!11922 = !DILocation(line: 3220, column: 13, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11916, file: !939, line: 3220, column: 13)
!11924 = !DILocation(line: 3220, column: 17, scope: !11923)
!11925 = !DILocation(line: 3220, column: 13, scope: !11916)
!11926 = !DILocation(line: 3221, column: 20, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11923, file: !939, line: 3220, column: 22)
!11928 = !DILocation(line: 3221, column: 30, scope: !11927)
!11929 = !DILocation(line: 3221, column: 13, scope: !11927)
!11930 = !DILocation(line: 3223, column: 13, scope: !11927)
!11931 = !DILocation(line: 3225, column: 13, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11916, file: !939, line: 3225, column: 13)
!11933 = !DILocation(line: 3225, column: 25, scope: !11932)
!11934 = !DILocation(line: 3225, column: 22, scope: !11932)
!11935 = !DILocation(line: 3225, column: 13, scope: !11916)
!11936 = !DILocation(line: 3226, column: 22, scope: !11932)
!11937 = !DILocation(line: 3226, column: 13, scope: !11932)
!11938 = !DILocation(line: 3227, column: 20, scope: !11916)
!11939 = !DILocation(line: 3227, column: 18, scope: !11916)
!11940 = !DILocation(line: 3228, column: 5, scope: !11916)
!11941 = !DILocation(line: 3230, column: 9, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11841, file: !939, line: 3230, column: 9)
!11943 = !DILocation(line: 3230, column: 13, scope: !11942)
!11944 = !DILocation(line: 3230, column: 23, scope: !11942)
!11945 = !DILocation(line: 3230, column: 32, scope: !11942)
!11946 = !DILocation(line: 3230, column: 9, scope: !11841)
!11947 = !DILocalVariable(name: "pr_data", scope: !11948, file: !939, line: 3231, type: !1053)
!11948 = distinct !DILexicalBlock(scope: !11942, file: !939, line: 3230, column: 55)
!11949 = !DILocation(line: 3231, column: 18, scope: !11948)
!11950 = !DILocation(line: 3232, column: 37, scope: !11948)
!11951 = !DILocation(line: 3232, column: 44, scope: !11948)
!11952 = !DILocation(line: 3232, column: 15, scope: !11948)
!11953 = !DILocation(line: 3232, column: 13, scope: !11948)
!11954 = !DILocation(line: 3233, column: 13, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11948, file: !939, line: 3233, column: 13)
!11956 = !DILocation(line: 3233, column: 17, scope: !11955)
!11957 = !DILocation(line: 3233, column: 13, scope: !11948)
!11958 = !DILocation(line: 3234, column: 20, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11955, file: !939, line: 3233, column: 22)
!11960 = !DILocation(line: 3234, column: 30, scope: !11959)
!11961 = !DILocation(line: 3234, column: 13, scope: !11959)
!11962 = !DILocation(line: 3236, column: 13, scope: !11959)
!11963 = !DILocation(line: 3238, column: 13, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11948, file: !939, line: 3238, column: 13)
!11965 = !DILocation(line: 3238, column: 25, scope: !11964)
!11966 = !DILocation(line: 3238, column: 22, scope: !11964)
!11967 = !DILocation(line: 3238, column: 13, scope: !11948)
!11968 = !DILocation(line: 3239, column: 22, scope: !11964)
!11969 = !DILocation(line: 3239, column: 13, scope: !11964)
!11970 = !DILocation(line: 3240, column: 20, scope: !11948)
!11971 = !DILocation(line: 3240, column: 18, scope: !11948)
!11972 = !DILocation(line: 3241, column: 5, scope: !11948)
!11973 = !DILocation(line: 3243, column: 20, scope: !11841)
!11974 = !DILocation(line: 3243, column: 5, scope: !11841)
!11975 = !DILocation(line: 3244, column: 9, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11841, file: !939, line: 3244, column: 9)
!11977 = !DILocation(line: 3244, column: 21, scope: !11976)
!11978 = !DILocation(line: 3244, column: 18, scope: !11976)
!11979 = !DILocation(line: 3244, column: 9, scope: !11841)
!11980 = !DILocation(line: 3245, column: 37, scope: !11976)
!11981 = !DILocation(line: 3245, column: 47, scope: !11976)
!11982 = !DILocation(line: 3245, column: 56, scope: !11976)
!11983 = !DILocation(line: 3245, column: 20, scope: !11976)
!11984 = !DILocation(line: 3245, column: 9, scope: !11976)
!11985 = !DILocation(line: 3245, column: 14, scope: !11976)
!11986 = !DILocation(line: 3245, column: 18, scope: !11976)
!11987 = !DILocation(line: 3248, column: 34, scope: !11976)
!11988 = !DILocation(line: 3248, column: 20, scope: !11976)
!11989 = !DILocation(line: 3248, column: 9, scope: !11976)
!11990 = !DILocation(line: 3248, column: 14, scope: !11976)
!11991 = !DILocation(line: 3248, column: 18, scope: !11976)
!11992 = !DILocation(line: 3250, column: 10, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11841, file: !939, line: 3250, column: 9)
!11994 = !DILocation(line: 3250, column: 15, scope: !11993)
!11995 = !DILocation(line: 3250, column: 9, scope: !11841)
!11996 = !DILocation(line: 3251, column: 13, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11993, file: !939, line: 3250, column: 20)
!11998 = !DILocation(line: 3252, column: 9, scope: !11997)
!11999 = !DILocation(line: 3255, column: 17, scope: !11841)
!12000 = !DILocation(line: 3255, column: 5, scope: !11841)
!12001 = !DILocation(line: 3255, column: 10, scope: !11841)
!12002 = !DILocation(line: 3255, column: 15, scope: !11841)
!12003 = !DILocation(line: 3256, column: 17, scope: !11841)
!12004 = !DILocation(line: 3256, column: 5, scope: !11841)
!12005 = !DILocation(line: 3256, column: 10, scope: !11841)
!12006 = !DILocation(line: 3256, column: 15, scope: !11841)
!12007 = !DILocation(line: 3257, column: 18, scope: !11841)
!12008 = !DILocation(line: 3257, column: 5, scope: !11841)
!12009 = !DILocation(line: 3257, column: 10, scope: !11841)
!12010 = !DILocation(line: 3257, column: 16, scope: !11841)
!12011 = !DILocation(line: 3258, column: 25, scope: !11841)
!12012 = !DILocation(line: 3258, column: 29, scope: !11841)
!12013 = !DILocation(line: 3258, column: 5, scope: !11841)
!12014 = !DILocation(line: 3258, column: 10, scope: !11841)
!12015 = !DILocation(line: 3258, column: 23, scope: !11841)
!12016 = !DILocation(line: 3260, column: 9, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !11841, file: !939, line: 3260, column: 9)
!12018 = !DILocation(line: 3260, column: 25, scope: !12017)
!12019 = !DILocation(line: 3260, column: 9, scope: !11841)
!12020 = !DILocalVariable(name: "side_data", scope: !12021, file: !939, line: 3261, type: !1053)
!12021 = distinct !DILexicalBlock(scope: !12017, file: !939, line: 3260, column: 30)
!12022 = !DILocation(line: 3261, column: 18, scope: !12021)
!12023 = !DILocation(line: 3261, column: 54, scope: !12021)
!12024 = !DILocation(line: 3263, column: 54, scope: !12021)
!12025 = !DILocation(line: 3263, column: 70, scope: !12021)
!12026 = !DILocation(line: 3261, column: 30, scope: !12021)
!12027 = !DILocation(line: 3264, column: 14, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12021, file: !939, line: 3264, column: 13)
!12029 = !DILocation(line: 3264, column: 13, scope: !12021)
!12030 = !DILocation(line: 3265, column: 29, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12028, file: !939, line: 3264, column: 25)
!12032 = !DILocation(line: 3265, column: 13, scope: !12031)
!12033 = !DILocation(line: 3266, column: 13, scope: !12031)
!12034 = !DILocation(line: 3268, column: 66, scope: !12021)
!12035 = !DILocation(line: 3268, column: 55, scope: !12021)
!12036 = !DILocation(line: 3268, column: 36, scope: !12021)
!12037 = !DILocation(line: 3268, column: 49, scope: !12021)
!12038 = !DILocation(line: 3268, column: 52, scope: !12021)
!12039 = !DILocation(line: 3269, column: 16, scope: !12021)
!12040 = !DILocation(line: 3269, column: 26, scope: !12021)
!12041 = !DILocation(line: 3269, column: 31, scope: !12021)
!12042 = !DILocation(line: 3269, column: 43, scope: !12021)
!12043 = !DILocation(line: 3269, column: 9, scope: !12021)
!12044 = !DILocation(line: 3270, column: 5, scope: !12021)
!12045 = !DILocation(line: 3272, column: 9, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !11841, file: !939, line: 3272, column: 9)
!12047 = !DILocation(line: 3272, column: 9, scope: !11841)
!12048 = !DILocalVariable(name: "side_data", scope: !12049, file: !939, line: 3273, type: !1053)
!12049 = distinct !DILexicalBlock(scope: !12046, file: !939, line: 3272, column: 26)
!12050 = !DILocation(line: 3273, column: 18, scope: !12049)
!12051 = !DILocation(line: 3273, column: 54, scope: !12049)
!12052 = !DILocation(line: 3273, column: 30, scope: !12049)
!12053 = !DILocation(line: 3276, column: 14, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12049, file: !939, line: 3276, column: 13)
!12055 = !DILocation(line: 3276, column: 13, scope: !12049)
!12056 = !DILocation(line: 3277, column: 29, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12054, file: !939, line: 3276, column: 25)
!12058 = !DILocation(line: 3277, column: 13, scope: !12057)
!12059 = !DILocation(line: 3278, column: 13, scope: !12057)
!12060 = !DILocation(line: 3280, column: 40, scope: !12049)
!12061 = !DILocation(line: 3281, column: 57, scope: !12049)
!12062 = !DILocation(line: 3282, column: 57, scope: !12049)
!12063 = !DILocation(line: 3282, column: 61, scope: !12049)
!12064 = !DILocation(line: 3282, column: 65, scope: !12049)
!12065 = !DILocation(line: 3282, column: 75, scope: !12049)
!12066 = !DILocation(line: 3280, column: 27, scope: !12049)
!12067 = !DILocation(line: 3280, column: 25, scope: !12049)
!12068 = !DILocation(line: 3283, column: 13, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12049, file: !939, line: 3283, column: 13)
!12070 = !DILocation(line: 3283, column: 29, scope: !12069)
!12071 = !DILocation(line: 3283, column: 13, scope: !12049)
!12072 = !DILocation(line: 3284, column: 63, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12069, file: !939, line: 3283, column: 34)
!12074 = !DILocation(line: 3284, column: 62, scope: !12073)
!12075 = !DILocation(line: 3284, column: 40, scope: !12073)
!12076 = !DILocation(line: 3284, column: 50, scope: !12073)
!12077 = !DILocation(line: 3284, column: 57, scope: !12073)
!12078 = !DILocation(line: 3284, column: 60, scope: !12073)
!12079 = !DILocation(line: 3285, column: 9, scope: !12073)
!12080 = !DILocation(line: 3286, column: 60, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12069, file: !939, line: 3285, column: 16)
!12082 = !DILocation(line: 3286, column: 59, scope: !12081)
!12083 = !DILocation(line: 3286, column: 58, scope: !12081)
!12084 = !DILocation(line: 3286, column: 40, scope: !12081)
!12085 = !DILocation(line: 3286, column: 53, scope: !12081)
!12086 = !DILocation(line: 3286, column: 56, scope: !12081)
!12087 = !DILocation(line: 3288, column: 5, scope: !12049)
!12088 = !DILocation(line: 3290, column: 9, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !11841, file: !939, line: 3290, column: 9)
!12090 = !DILocation(line: 3290, column: 16, scope: !12089)
!12091 = !DILocation(line: 3290, column: 9, scope: !11841)
!12092 = !DILocation(line: 3291, column: 20, scope: !12089)
!12093 = !DILocation(line: 3291, column: 9, scope: !12089)
!12094 = !DILocation(line: 3291, column: 14, scope: !12089)
!12095 = !DILocation(line: 3291, column: 18, scope: !12089)
!12096 = !DILocation(line: 3293, column: 20, scope: !12089)
!12097 = !DILocation(line: 3293, column: 9, scope: !12089)
!12098 = !DILocation(line: 3293, column: 14, scope: !12089)
!12099 = !DILocation(line: 3293, column: 18, scope: !12089)
!12100 = !DILocation(line: 3294, column: 16, scope: !11841)
!12101 = !DILocation(line: 3294, column: 5, scope: !11841)
!12102 = !DILocation(line: 3294, column: 10, scope: !11841)
!12103 = !DILocation(line: 3294, column: 14, scope: !11841)
!12104 = !DILocation(line: 3295, column: 21, scope: !11841)
!12105 = !DILocation(line: 3295, column: 5, scope: !11841)
!12106 = !DILocation(line: 3295, column: 10, scope: !11841)
!12107 = !DILocation(line: 3295, column: 19, scope: !11841)
!12108 = !DILocation(line: 3299, column: 9, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !11841, file: !939, line: 3299, column: 9)
!12110 = !DILocation(line: 3299, column: 13, scope: !12109)
!12111 = !DILocation(line: 3299, column: 23, scope: !12109)
!12112 = !DILocation(line: 3299, column: 32, scope: !12109)
!12113 = !DILocation(line: 3299, column: 9, scope: !11841)
!12114 = !DILocation(line: 3300, column: 37, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12109, file: !939, line: 3299, column: 55)
!12116 = !DILocation(line: 3300, column: 9, scope: !12115)
!12117 = !DILocation(line: 3300, column: 14, scope: !12115)
!12118 = !DILocation(line: 3300, column: 35, scope: !12115)
!12119 = !DILocation(line: 3301, column: 5, scope: !12115)
!12120 = !DILocation(line: 3305, column: 31, scope: !11841)
!12121 = !DILocation(line: 3305, column: 41, scope: !11841)
!12122 = !DILocation(line: 3305, column: 49, scope: !11841)
!12123 = !DILocation(line: 3305, column: 59, scope: !11841)
!12124 = !DILocation(line: 3305, column: 70, scope: !11841)
!12125 = !DILocation(line: 3305, column: 11, scope: !11841)
!12126 = !DILocation(line: 3305, column: 9, scope: !11841)
!12127 = !DILocation(line: 3306, column: 9, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !11841, file: !939, line: 3306, column: 9)
!12129 = !DILocation(line: 3306, column: 13, scope: !12128)
!12130 = !DILocation(line: 3306, column: 9, scope: !11841)
!12131 = !DILocation(line: 3307, column: 25, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12128, file: !939, line: 3306, column: 18)
!12133 = !DILocation(line: 3307, column: 9, scope: !12132)
!12134 = !DILocation(line: 3308, column: 9, scope: !12132)
!12135 = !DILocation(line: 3311, column: 5, scope: !11841)
!12136 = !DILocation(line: 3314, column: 9, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !11841, file: !939, line: 3314, column: 9)
!12138 = !DILocation(line: 3314, column: 21, scope: !12137)
!12139 = !DILocation(line: 3314, column: 18, scope: !12137)
!12140 = !DILocation(line: 3314, column: 9, scope: !11841)
!12141 = !DILocation(line: 3315, column: 18, scope: !12137)
!12142 = !DILocation(line: 3315, column: 9, scope: !12137)
!12143 = !DILocation(line: 3316, column: 12, scope: !11841)
!12144 = !DILocation(line: 3316, column: 5, scope: !11841)
!12145 = !DILocation(line: 3317, column: 1, scope: !11841)
!12146 = distinct !DISubprogram(name: "matroska_ebmlnum_sint", scope: !939, file: !939, line: 1024, type: !12147, isLocal: true, isDefinition: true, scopeLine: 1026, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!12147 = !DISubroutineType(types: !12148)
!12148 = !{!1039, !2392, !1053, !1036, !1054}
!12149 = !DILocalVariable(name: "matroska", arg: 1, scope: !12146, file: !939, line: 1024, type: !2392)
!12150 = !DILocation(line: 1024, column: 56, scope: !12146)
!12151 = !DILocalVariable(name: "data", arg: 2, scope: !12146, file: !939, line: 1025, type: !1053)
!12152 = !DILocation(line: 1025, column: 43, scope: !12146)
!12153 = !DILocalVariable(name: "size", arg: 3, scope: !12146, file: !939, line: 1025, type: !1036)
!12154 = !DILocation(line: 1025, column: 58, scope: !12146)
!12155 = !DILocalVariable(name: "num", arg: 4, scope: !12146, file: !939, line: 1025, type: !1054)
!12156 = !DILocation(line: 1025, column: 73, scope: !12146)
!12157 = !DILocalVariable(name: "unum", scope: !12146, file: !939, line: 1027, type: !1045)
!12158 = !DILocation(line: 1027, column: 14, scope: !12146)
!12159 = !DILocalVariable(name: "res", scope: !12146, file: !939, line: 1028, type: !1039)
!12160 = !DILocation(line: 1028, column: 9, scope: !12146)
!12161 = !DILocation(line: 1031, column: 38, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12146, file: !939, line: 1031, column: 9)
!12163 = !DILocation(line: 1031, column: 48, scope: !12162)
!12164 = !DILocation(line: 1031, column: 54, scope: !12162)
!12165 = !DILocation(line: 1031, column: 16, scope: !12162)
!12166 = !DILocation(line: 1031, column: 14, scope: !12162)
!12167 = !DILocation(line: 1031, column: 68, scope: !12162)
!12168 = !DILocation(line: 1031, column: 9, scope: !12146)
!12169 = !DILocation(line: 1032, column: 16, scope: !12162)
!12170 = !DILocation(line: 1032, column: 9, scope: !12162)
!12171 = !DILocation(line: 1035, column: 12, scope: !12146)
!12172 = !DILocation(line: 1035, column: 33, scope: !12146)
!12173 = !DILocation(line: 1035, column: 31, scope: !12146)
!12174 = !DILocation(line: 1035, column: 37, scope: !12146)
!12175 = !DILocation(line: 1035, column: 25, scope: !12146)
!12176 = !DILocation(line: 1035, column: 43, scope: !12146)
!12177 = !DILocation(line: 1035, column: 17, scope: !12146)
!12178 = !DILocation(line: 1035, column: 6, scope: !12146)
!12179 = !DILocation(line: 1035, column: 10, scope: !12146)
!12180 = !DILocation(line: 1037, column: 12, scope: !12146)
!12181 = !DILocation(line: 1037, column: 5, scope: !12146)
!12182 = !DILocation(line: 1038, column: 1, scope: !12146)
!12183 = distinct !DISubprogram(name: "matroska_parse_wavpack", scope: !939, file: !939, line: 2977, type: !12184, isLocal: true, isDefinition: true, scopeLine: 2979, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!12184 = !DISubroutineType(types: !12185)
!12185 = !{!1039, !3392, !1053, !1058, !1601}
!12186 = !DILocalVariable(name: "track", arg: 1, scope: !12183, file: !939, line: 2977, type: !3392)
!12187 = !DILocation(line: 2977, column: 50, scope: !12183)
!12188 = !DILocalVariable(name: "src", arg: 2, scope: !12183, file: !939, line: 2977, type: !1053)
!12189 = !DILocation(line: 2977, column: 66, scope: !12183)
!12190 = !DILocalVariable(name: "pdst", arg: 3, scope: !12183, file: !939, line: 2978, type: !1058)
!12191 = !DILocation(line: 2978, column: 45, scope: !12183)
!12192 = !DILocalVariable(name: "size", arg: 4, scope: !12183, file: !939, line: 2978, type: !1601)
!12193 = !DILocation(line: 2978, column: 56, scope: !12183)
!12194 = !DILocalVariable(name: "dst", scope: !12183, file: !939, line: 2980, type: !1053)
!12195 = !DILocation(line: 2980, column: 14, scope: !12183)
!12196 = !DILocalVariable(name: "dstlen", scope: !12183, file: !939, line: 2981, type: !1039)
!12197 = !DILocation(line: 2981, column: 9, scope: !12183)
!12198 = !DILocalVariable(name: "srclen", scope: !12183, file: !939, line: 2982, type: !1039)
!12199 = !DILocation(line: 2982, column: 9, scope: !12183)
!12200 = !DILocation(line: 2982, column: 19, scope: !12183)
!12201 = !DILocation(line: 2982, column: 18, scope: !12183)
!12202 = !DILocalVariable(name: "samples", scope: !12183, file: !939, line: 2983, type: !1036)
!12203 = !DILocation(line: 2983, column: 14, scope: !12183)
!12204 = !DILocalVariable(name: "ver", scope: !12183, file: !939, line: 2984, type: !1084)
!12205 = !DILocation(line: 2984, column: 14, scope: !12183)
!12206 = !DILocalVariable(name: "ret", scope: !12183, file: !939, line: 2985, type: !1039)
!12207 = !DILocation(line: 2985, column: 9, scope: !12183)
!12208 = !DILocalVariable(name: "offset", scope: !12183, file: !939, line: 2985, type: !1039)
!12209 = !DILocation(line: 2985, column: 14, scope: !12183)
!12210 = !DILocation(line: 2987, column: 9, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12183, file: !939, line: 2987, column: 9)
!12212 = !DILocation(line: 2987, column: 16, scope: !12211)
!12213 = !DILocation(line: 2987, column: 21, scope: !12211)
!12214 = !DILocation(line: 2987, column: 24, scope: !12215)
!12215 = !DILexicalBlockFile(scope: !12211, file: !939, discriminator: 1)
!12216 = !DILocation(line: 2987, column: 31, scope: !12215)
!12217 = !DILocation(line: 2987, column: 39, scope: !12215)
!12218 = !DILocation(line: 2987, column: 49, scope: !12215)
!12219 = !DILocation(line: 2987, column: 64, scope: !12215)
!12220 = !DILocation(line: 2987, column: 9, scope: !12215)
!12221 = !DILocation(line: 2988, column: 9, scope: !12211)
!12222 = !DILocation(line: 2990, column: 43, scope: !12183)
!12223 = !DILocation(line: 2990, column: 50, scope: !12183)
!12224 = !DILocation(line: 2990, column: 58, scope: !12183)
!12225 = !DILocation(line: 2990, column: 68, scope: !12183)
!12226 = !DILocation(line: 2990, column: 81, scope: !12183)
!12227 = !DILocation(line: 2990, column: 9, scope: !12183)
!12228 = !DILocation(line: 2992, column: 47, scope: !12183)
!12229 = !DILocation(line: 2992, column: 54, scope: !12183)
!12230 = !DILocation(line: 2992, column: 13, scope: !12183)
!12231 = !DILocation(line: 2993, column: 9, scope: !12183)
!12232 = !DILocation(line: 2994, column: 12, scope: !12183)
!12233 = !DILocation(line: 2996, column: 5, scope: !12183)
!12234 = !DILocation(line: 2996, column: 12, scope: !12235)
!12235 = !DILexicalBlockFile(scope: !12183, file: !939, discriminator: 1)
!12236 = !DILocation(line: 2996, column: 19, scope: !12235)
!12237 = !DILocation(line: 2996, column: 5, scope: !12235)
!12238 = !DILocalVariable(name: "multiblock", scope: !12239, file: !939, line: 2997, type: !1039)
!12239 = distinct !DILexicalBlock(scope: !12183, file: !939, line: 2996, column: 25)
!12240 = !DILocation(line: 2997, column: 13, scope: !12239)
!12241 = !DILocalVariable(name: "blocksize", scope: !12239, file: !939, line: 2998, type: !1036)
!12242 = !DILocation(line: 2998, column: 18, scope: !12239)
!12243 = !DILocalVariable(name: "tmp", scope: !12239, file: !939, line: 2999, type: !1053)
!12244 = !DILocation(line: 2999, column: 18, scope: !12239)
!12245 = !DILocalVariable(name: "flags", scope: !12239, file: !939, line: 3001, type: !1036)
!12246 = !DILocation(line: 3001, column: 18, scope: !12239)
!12247 = !DILocation(line: 3001, column: 58, scope: !12239)
!12248 = !DILocation(line: 3001, column: 65, scope: !12239)
!12249 = !DILocalVariable(name: "crc", scope: !12239, file: !939, line: 3002, type: !1036)
!12250 = !DILocation(line: 3002, column: 18, scope: !12239)
!12251 = !DILocation(line: 3002, column: 56, scope: !12239)
!12252 = !DILocation(line: 3002, column: 60, scope: !12239)
!12253 = !DILocation(line: 3002, column: 67, scope: !12239)
!12254 = !DILocation(line: 3003, column: 13, scope: !12239)
!12255 = !DILocation(line: 3004, column: 16, scope: !12239)
!12256 = !DILocation(line: 3006, column: 23, scope: !12239)
!12257 = !DILocation(line: 3006, column: 29, scope: !12239)
!12258 = !DILocation(line: 3006, column: 39, scope: !12239)
!12259 = !DILocation(line: 3006, column: 20, scope: !12239)
!12260 = !DILocation(line: 3007, column: 13, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12239, file: !939, line: 3007, column: 13)
!12262 = !DILocation(line: 3007, column: 13, scope: !12239)
!12263 = !DILocation(line: 3008, column: 17, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12265, file: !939, line: 3008, column: 17)
!12265 = distinct !DILexicalBlock(scope: !12261, file: !939, line: 3007, column: 25)
!12266 = !DILocation(line: 3008, column: 24, scope: !12264)
!12267 = !DILocation(line: 3008, column: 17, scope: !12265)
!12268 = !DILocation(line: 3009, column: 21, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12264, file: !939, line: 3008, column: 29)
!12270 = !DILocation(line: 3010, column: 17, scope: !12269)
!12271 = !DILocation(line: 3012, column: 57, scope: !12265)
!12272 = !DILocation(line: 3012, column: 64, scope: !12265)
!12273 = !DILocation(line: 3012, column: 23, scope: !12265)
!12274 = !DILocation(line: 3013, column: 17, scope: !12265)
!12275 = !DILocation(line: 3014, column: 20, scope: !12265)
!12276 = !DILocation(line: 3015, column: 9, scope: !12265)
!12277 = !DILocation(line: 3016, column: 25, scope: !12261)
!12278 = !DILocation(line: 3016, column: 23, scope: !12261)
!12279 = !DILocation(line: 3018, column: 13, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12239, file: !939, line: 3018, column: 13)
!12281 = !DILocation(line: 3018, column: 25, scope: !12280)
!12282 = !DILocation(line: 3018, column: 23, scope: !12280)
!12283 = !DILocation(line: 3018, column: 13, scope: !12239)
!12284 = !DILocation(line: 3019, column: 17, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12280, file: !939, line: 3018, column: 33)
!12286 = !DILocation(line: 3020, column: 13, scope: !12285)
!12287 = !DILocation(line: 3023, column: 26, scope: !12239)
!12288 = !DILocation(line: 3023, column: 31, scope: !12239)
!12289 = !DILocation(line: 3023, column: 40, scope: !12239)
!12290 = !DILocation(line: 3023, column: 38, scope: !12239)
!12291 = !DILocation(line: 3023, column: 50, scope: !12239)
!12292 = !DILocation(line: 3023, column: 55, scope: !12239)
!12293 = !DILocation(line: 3023, column: 15, scope: !12239)
!12294 = !DILocation(line: 3023, column: 13, scope: !12239)
!12295 = !DILocation(line: 3024, column: 14, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12239, file: !939, line: 3024, column: 13)
!12297 = !DILocation(line: 3024, column: 13, scope: !12239)
!12298 = !DILocation(line: 3025, column: 17, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12296, file: !939, line: 3024, column: 19)
!12300 = !DILocation(line: 3026, column: 13, scope: !12299)
!12301 = !DILocation(line: 3028, column: 15, scope: !12239)
!12302 = !DILocation(line: 3028, column: 13, scope: !12239)
!12303 = !DILocation(line: 3029, column: 19, scope: !12239)
!12304 = !DILocation(line: 3029, column: 29, scope: !12239)
!12305 = !DILocation(line: 3029, column: 16, scope: !12239)
!12306 = !DILocation(line: 3031, column: 36, scope: !12239)
!12307 = !DILocation(line: 3031, column: 42, scope: !12239)
!12308 = !DILocation(line: 3031, column: 40, scope: !12239)
!12309 = !DILocation(line: 3031, column: 52, scope: !12239)
!12310 = !DILocation(line: 3031, column: 55, scope: !12239)
!12311 = !DILocation(line: 3032, column: 62, scope: !12239)
!12312 = !DILocation(line: 3032, column: 72, scope: !12239)
!12313 = !DILocation(line: 3032, column: 36, scope: !12239)
!12314 = !DILocation(line: 3032, column: 42, scope: !12239)
!12315 = !DILocation(line: 3032, column: 40, scope: !12239)
!12316 = !DILocation(line: 3032, column: 49, scope: !12239)
!12317 = !DILocation(line: 3032, column: 56, scope: !12239)
!12318 = !DILocation(line: 3032, column: 59, scope: !12239)
!12319 = !DILocation(line: 3033, column: 62, scope: !12239)
!12320 = !DILocation(line: 3033, column: 36, scope: !12239)
!12321 = !DILocation(line: 3033, column: 42, scope: !12239)
!12322 = !DILocation(line: 3033, column: 40, scope: !12239)
!12323 = !DILocation(line: 3033, column: 49, scope: !12239)
!12324 = !DILocation(line: 3033, column: 56, scope: !12239)
!12325 = !DILocation(line: 3033, column: 59, scope: !12239)
!12326 = !DILocation(line: 3034, column: 36, scope: !12239)
!12327 = !DILocation(line: 3034, column: 42, scope: !12239)
!12328 = !DILocation(line: 3034, column: 40, scope: !12239)
!12329 = !DILocation(line: 3034, column: 49, scope: !12239)
!12330 = !DILocation(line: 3034, column: 57, scope: !12239)
!12331 = !DILocation(line: 3034, column: 60, scope: !12239)
!12332 = !DILocation(line: 3035, column: 36, scope: !12239)
!12333 = !DILocation(line: 3035, column: 42, scope: !12239)
!12334 = !DILocation(line: 3035, column: 40, scope: !12239)
!12335 = !DILocation(line: 3035, column: 49, scope: !12239)
!12336 = !DILocation(line: 3035, column: 57, scope: !12239)
!12337 = !DILocation(line: 3035, column: 60, scope: !12239)
!12338 = !DILocation(line: 3036, column: 36, scope: !12239)
!12339 = !DILocation(line: 3036, column: 42, scope: !12239)
!12340 = !DILocation(line: 3036, column: 40, scope: !12239)
!12341 = !DILocation(line: 3036, column: 49, scope: !12239)
!12342 = !DILocation(line: 3036, column: 57, scope: !12239)
!12343 = !DILocation(line: 3036, column: 60, scope: !12239)
!12344 = !DILocation(line: 3037, column: 63, scope: !12239)
!12345 = !DILocation(line: 3037, column: 36, scope: !12239)
!12346 = !DILocation(line: 3037, column: 42, scope: !12239)
!12347 = !DILocation(line: 3037, column: 40, scope: !12239)
!12348 = !DILocation(line: 3037, column: 49, scope: !12239)
!12349 = !DILocation(line: 3037, column: 57, scope: !12239)
!12350 = !DILocation(line: 3037, column: 60, scope: !12239)
!12351 = !DILocation(line: 3038, column: 63, scope: !12239)
!12352 = !DILocation(line: 3038, column: 36, scope: !12239)
!12353 = !DILocation(line: 3038, column: 42, scope: !12239)
!12354 = !DILocation(line: 3038, column: 40, scope: !12239)
!12355 = !DILocation(line: 3038, column: 49, scope: !12239)
!12356 = !DILocation(line: 3038, column: 57, scope: !12239)
!12357 = !DILocation(line: 3038, column: 60, scope: !12239)
!12358 = !DILocation(line: 3039, column: 63, scope: !12239)
!12359 = !DILocation(line: 3039, column: 36, scope: !12239)
!12360 = !DILocation(line: 3039, column: 42, scope: !12239)
!12361 = !DILocation(line: 3039, column: 40, scope: !12239)
!12362 = !DILocation(line: 3039, column: 49, scope: !12239)
!12363 = !DILocation(line: 3039, column: 57, scope: !12239)
!12364 = !DILocation(line: 3039, column: 60, scope: !12239)
!12365 = !DILocation(line: 3040, column: 16, scope: !12239)
!12366 = !DILocation(line: 3040, column: 22, scope: !12239)
!12367 = !DILocation(line: 3040, column: 20, scope: !12239)
!12368 = !DILocation(line: 3040, column: 29, scope: !12239)
!12369 = !DILocation(line: 3040, column: 35, scope: !12239)
!12370 = !DILocation(line: 3040, column: 40, scope: !12239)
!12371 = !DILocation(line: 3040, column: 9, scope: !12239)
!12372 = !DILocation(line: 3042, column: 16, scope: !12239)
!12373 = !DILocation(line: 3042, column: 13, scope: !12239)
!12374 = !DILocation(line: 3043, column: 19, scope: !12239)
!12375 = !DILocation(line: 3043, column: 16, scope: !12239)
!12376 = !DILocation(line: 3044, column: 19, scope: !12239)
!12377 = !DILocation(line: 3044, column: 29, scope: !12239)
!12378 = !DILocation(line: 3044, column: 16, scope: !12239)
!12379 = !DILocation(line: 2996, column: 5, scope: !12380)
!12380 = !DILexicalBlockFile(scope: !12183, file: !939, discriminator: 2)
!12381 = distinct !{!12381, !12233}
!12382 = !DILocation(line: 3047, column: 12, scope: !12183)
!12383 = !DILocation(line: 3047, column: 18, scope: !12183)
!12384 = !DILocation(line: 3047, column: 16, scope: !12183)
!12385 = !DILocation(line: 3047, column: 5, scope: !12183)
!12386 = !DILocation(line: 3049, column: 13, scope: !12183)
!12387 = !DILocation(line: 3049, column: 6, scope: !12183)
!12388 = !DILocation(line: 3049, column: 11, scope: !12183)
!12389 = !DILocation(line: 3050, column: 13, scope: !12183)
!12390 = !DILocation(line: 3050, column: 6, scope: !12183)
!12391 = !DILocation(line: 3050, column: 11, scope: !12183)
!12392 = !DILocation(line: 3052, column: 5, scope: !12183)
!12393 = !DILocation(line: 3055, column: 14, scope: !12183)
!12394 = !DILocation(line: 3055, column: 5, scope: !12183)
!12395 = !DILocation(line: 3056, column: 12, scope: !12183)
!12396 = !DILocation(line: 3056, column: 5, scope: !12183)
!12397 = !DILocation(line: 3057, column: 1, scope: !12183)
!12398 = distinct !DISubprogram(name: "matroska_parse_prores", scope: !939, file: !939, line: 3059, type: !12184, isLocal: true, isDefinition: true, scopeLine: 3061, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!12399 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !12400)
!12400 = distinct !DILocation(line: 3070, column: 49, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12402, file: !939, line: 3065, column: 136)
!12402 = distinct !DILexicalBlock(scope: !12398, file: !939, line: 3065, column: 9)
!12403 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !12404)
!12404 = distinct !DILocation(line: 3071, column: 53, scope: !12401)
!12405 = !DILocation(line: 66, column: 98, scope: !2570, inlinedAt: !12406)
!12406 = distinct !DILocation(line: 3065, column: 9, scope: !12402)
!12407 = !DILocalVariable(name: "track", arg: 1, scope: !12398, file: !939, line: 3059, type: !3392)
!12408 = !DILocation(line: 3059, column: 49, scope: !12398)
!12409 = !DILocalVariable(name: "src", arg: 2, scope: !12398, file: !939, line: 3059, type: !1053)
!12410 = !DILocation(line: 3059, column: 65, scope: !12398)
!12411 = !DILocalVariable(name: "pdst", arg: 3, scope: !12398, file: !939, line: 3060, type: !1058)
!12412 = !DILocation(line: 3060, column: 44, scope: !12398)
!12413 = !DILocalVariable(name: "size", arg: 4, scope: !12398, file: !939, line: 3060, type: !1601)
!12414 = !DILocation(line: 3060, column: 55, scope: !12398)
!12415 = !DILocalVariable(name: "dst", scope: !12398, file: !939, line: 3062, type: !1053)
!12416 = !DILocation(line: 3062, column: 14, scope: !12398)
!12417 = !DILocation(line: 3062, column: 20, scope: !12398)
!12418 = !DILocalVariable(name: "dstlen", scope: !12398, file: !939, line: 3063, type: !1039)
!12419 = !DILocation(line: 3063, column: 9, scope: !12398)
!12420 = !DILocation(line: 3063, column: 19, scope: !12398)
!12421 = !DILocation(line: 3063, column: 18, scope: !12398)
!12422 = !DILocation(line: 3065, column: 53, scope: !12402)
!12423 = !DILocation(line: 3065, column: 63, scope: !12402)
!12424 = !DILocation(line: 3065, column: 9, scope: !12402)
!12425 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !12406)
!12426 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !12406)
!12427 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !12406)
!12428 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !12406)
!12429 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !12406)
!12430 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !12406)
!12431 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !12406)
!12432 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !12406)
!12433 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !12406)
!12434 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !12406)
!12435 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !12406)
!12436 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !12406)
!12437 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !12406)
!12438 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !12406)
!12439 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !12406)
!12440 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !12406)
!12441 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !12406)
!12442 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !12406)
!12443 = !DILocation(line: 3065, column: 67, scope: !12402)
!12444 = !DILocation(line: 3065, column: 9, scope: !12398)
!12445 = !DILocation(line: 3066, column: 25, scope: !12401)
!12446 = !DILocation(line: 3066, column: 32, scope: !12401)
!12447 = !DILocation(line: 3066, column: 36, scope: !12401)
!12448 = !DILocation(line: 3066, column: 15, scope: !12401)
!12449 = !DILocation(line: 3066, column: 13, scope: !12401)
!12450 = !DILocation(line: 3067, column: 14, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12401, file: !939, line: 3067, column: 13)
!12452 = !DILocation(line: 3067, column: 13, scope: !12401)
!12453 = !DILocation(line: 3068, column: 13, scope: !12451)
!12454 = !DILocation(line: 3070, column: 60, scope: !12401)
!12455 = !DILocation(line: 3070, column: 49, scope: !12401)
!12456 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !12400)
!12457 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !12400)
!12458 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !12400)
!12459 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !12400)
!12460 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !12400)
!12461 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !12400)
!12462 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !12400)
!12463 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !12400)
!12464 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !12400)
!12465 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !12400)
!12466 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !12400)
!12467 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !12400)
!12468 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !12400)
!12469 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !12400)
!12470 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !12400)
!12471 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !12400)
!12472 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !12400)
!12473 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !12400)
!12474 = !DILocation(line: 3070, column: 36, scope: !12401)
!12475 = !DILocation(line: 3070, column: 43, scope: !12401)
!12476 = !DILocation(line: 3070, column: 46, scope: !12401)
!12477 = !DILocation(line: 3071, column: 53, scope: !12401)
!12478 = !DILocation(line: 68, column: 16, scope: !2570, inlinedAt: !12404)
!12479 = !DILocation(line: 68, column: 19, scope: !2570, inlinedAt: !12404)
!12480 = !DILocation(line: 68, column: 24, scope: !2570, inlinedAt: !12404)
!12481 = !DILocation(line: 68, column: 38, scope: !2570, inlinedAt: !12404)
!12482 = !DILocation(line: 68, column: 41, scope: !2570, inlinedAt: !12404)
!12483 = !DILocation(line: 68, column: 46, scope: !2570, inlinedAt: !12404)
!12484 = !DILocation(line: 68, column: 34, scope: !2570, inlinedAt: !12404)
!12485 = !DILocation(line: 68, column: 57, scope: !2570, inlinedAt: !12404)
!12486 = !DILocation(line: 68, column: 69, scope: !2570, inlinedAt: !12404)
!12487 = !DILocation(line: 68, column: 72, scope: !2570, inlinedAt: !12404)
!12488 = !DILocation(line: 68, column: 79, scope: !2570, inlinedAt: !12404)
!12489 = !DILocation(line: 68, column: 84, scope: !2570, inlinedAt: !12404)
!12490 = !DILocation(line: 68, column: 99, scope: !2570, inlinedAt: !12404)
!12491 = !DILocation(line: 68, column: 102, scope: !2570, inlinedAt: !12404)
!12492 = !DILocation(line: 68, column: 109, scope: !2570, inlinedAt: !12404)
!12493 = !DILocation(line: 68, column: 114, scope: !2570, inlinedAt: !12404)
!12494 = !DILocation(line: 68, column: 94, scope: !2570, inlinedAt: !12404)
!12495 = !DILocation(line: 68, column: 63, scope: !2570, inlinedAt: !12404)
!12496 = !DILocation(line: 3071, column: 36, scope: !12401)
!12497 = !DILocation(line: 3071, column: 40, scope: !12401)
!12498 = !DILocation(line: 3071, column: 47, scope: !12401)
!12499 = !DILocation(line: 3071, column: 50, scope: !12401)
!12500 = !DILocation(line: 3072, column: 16, scope: !12401)
!12501 = !DILocation(line: 3072, column: 20, scope: !12401)
!12502 = !DILocation(line: 3072, column: 25, scope: !12401)
!12503 = !DILocation(line: 3072, column: 30, scope: !12401)
!12504 = !DILocation(line: 3072, column: 9, scope: !12401)
!12505 = !DILocation(line: 3073, column: 16, scope: !12401)
!12506 = !DILocation(line: 3073, column: 20, scope: !12401)
!12507 = !DILocation(line: 3073, column: 26, scope: !12401)
!12508 = !DILocation(line: 3073, column: 24, scope: !12401)
!12509 = !DILocation(line: 3073, column: 9, scope: !12401)
!12510 = !DILocation(line: 3074, column: 16, scope: !12401)
!12511 = !DILocation(line: 3075, column: 5, scope: !12401)
!12512 = !DILocation(line: 3077, column: 13, scope: !12398)
!12513 = !DILocation(line: 3077, column: 6, scope: !12398)
!12514 = !DILocation(line: 3077, column: 11, scope: !12398)
!12515 = !DILocation(line: 3078, column: 13, scope: !12398)
!12516 = !DILocation(line: 3078, column: 6, scope: !12398)
!12517 = !DILocation(line: 3078, column: 11, scope: !12398)
!12518 = !DILocation(line: 3080, column: 5, scope: !12398)
!12519 = !DILocation(line: 3081, column: 1, scope: !12398)
!12520 = distinct !DISubprogram(name: "matroska_clear_queue", scope: !939, file: !939, line: 2785, type: !4164, isLocal: true, isDefinition: true, scopeLine: 2786, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!12521 = !DILocalVariable(name: "matroska", arg: 1, scope: !12520, file: !939, line: 2785, type: !2392)
!12522 = !DILocation(line: 2785, column: 56, scope: !12520)
!12523 = !DILocation(line: 2787, column: 26, scope: !12520)
!12524 = !DILocation(line: 2787, column: 36, scope: !12520)
!12525 = !DILocation(line: 2787, column: 44, scope: !12520)
!12526 = !DILocation(line: 2787, column: 54, scope: !12520)
!12527 = !DILocation(line: 2787, column: 5, scope: !12520)
!12528 = !DILocation(line: 2788, column: 1, scope: !12520)
!12529 = distinct !DISubprogram(name: "matroska_parse_cues", scope: !939, file: !939, line: 1703, type: !4164, isLocal: true, isDefinition: true, scopeLine: 1703, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!12530 = !DILocalVariable(name: "matroska", arg: 1, scope: !12529, file: !939, line: 1703, type: !2392)
!12531 = !DILocation(line: 1703, column: 55, scope: !12529)
!12532 = !DILocalVariable(name: "i", scope: !12529, file: !939, line: 1704, type: !1039)
!12533 = !DILocation(line: 1704, column: 9, scope: !12529)
!12534 = !DILocation(line: 1706, column: 9, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12529, file: !939, line: 1706, column: 9)
!12536 = !DILocation(line: 1706, column: 19, scope: !12535)
!12537 = !DILocation(line: 1706, column: 24, scope: !12535)
!12538 = !DILocation(line: 1706, column: 30, scope: !12535)
!12539 = !DILocation(line: 1706, column: 9, scope: !12529)
!12540 = !DILocation(line: 1707, column: 9, scope: !12535)
!12541 = !DILocation(line: 1709, column: 12, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12529, file: !939, line: 1709, column: 5)
!12543 = !DILocation(line: 1709, column: 10, scope: !12542)
!12544 = !DILocation(line: 1709, column: 17, scope: !12545)
!12545 = !DILexicalBlockFile(scope: !12546, file: !939, discriminator: 1)
!12546 = distinct !DILexicalBlock(scope: !12542, file: !939, line: 1709, column: 5)
!12547 = !DILocation(line: 1709, column: 21, scope: !12545)
!12548 = !DILocation(line: 1709, column: 31, scope: !12545)
!12549 = !DILocation(line: 1709, column: 19, scope: !12545)
!12550 = !DILocation(line: 1709, column: 5, scope: !12545)
!12551 = !DILocalVariable(name: "elem", scope: !12552, file: !939, line: 1710, type: !4214)
!12552 = distinct !DILexicalBlock(scope: !12546, file: !939, line: 1709, column: 54)
!12553 = !DILocation(line: 1710, column: 32, scope: !12552)
!12554 = !DILocation(line: 1710, column: 63, scope: !12552)
!12555 = !DILocation(line: 1710, column: 40, scope: !12552)
!12556 = !DILocation(line: 1710, column: 50, scope: !12552)
!12557 = !DILocation(line: 1711, column: 13, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12552, file: !939, line: 1711, column: 13)
!12559 = !DILocation(line: 1711, column: 19, scope: !12558)
!12560 = !DILocation(line: 1711, column: 22, scope: !12558)
!12561 = !DILocation(line: 1711, column: 36, scope: !12558)
!12562 = !DILocation(line: 1711, column: 40, scope: !12563)
!12563 = !DILexicalBlockFile(scope: !12558, file: !939, discriminator: 1)
!12564 = !DILocation(line: 1711, column: 46, scope: !12563)
!12565 = !DILocation(line: 1711, column: 13, scope: !12563)
!12566 = !DILocation(line: 1712, column: 47, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12568, file: !939, line: 1712, column: 17)
!12568 = distinct !DILexicalBlock(scope: !12558, file: !939, line: 1711, column: 54)
!12569 = !DILocation(line: 1712, column: 57, scope: !12567)
!12570 = !DILocation(line: 1712, column: 63, scope: !12567)
!12571 = !DILocation(line: 1712, column: 17, scope: !12567)
!12572 = !DILocation(line: 1712, column: 68, scope: !12567)
!12573 = !DILocation(line: 1712, column: 17, scope: !12568)
!12574 = !DILocation(line: 1713, column: 17, scope: !12567)
!12575 = !DILocation(line: 1713, column: 27, scope: !12567)
!12576 = !DILocation(line: 1713, column: 49, scope: !12567)
!12577 = !DILocation(line: 1714, column: 13, scope: !12568)
!12578 = !DILocation(line: 1714, column: 19, scope: !12568)
!12579 = !DILocation(line: 1714, column: 26, scope: !12568)
!12580 = !DILocation(line: 1715, column: 13, scope: !12568)
!12581 = !DILocation(line: 1717, column: 5, scope: !12552)
!12582 = !DILocation(line: 1709, column: 50, scope: !12583)
!12583 = !DILexicalBlockFile(scope: !12546, file: !939, discriminator: 2)
!12584 = !DILocation(line: 1709, column: 5, scope: !12583)
!12585 = distinct !{!12585, !12586}
!12586 = !DILocation(line: 1709, column: 5, scope: !12529)
!12587 = !DILocation(line: 1719, column: 32, scope: !12529)
!12588 = !DILocation(line: 1719, column: 5, scope: !12529)
!12589 = !DILocation(line: 1720, column: 1, scope: !12529)
!12590 = !DILocation(line: 1720, column: 1, scope: !12591)
!12591 = !DILexicalBlockFile(scope: !12529, file: !939, discriminator: 1)
!12592 = distinct !DISubprogram(name: "webm_dash_manifest_cues", scope: !939, file: !939, line: 3891, type: !12593, isLocal: true, isDefinition: true, scopeLine: 3892, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!12593 = !DISubroutineType(types: !12594)
!12594 = !{!1039, !2398, !1047}
!12595 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !12596)
!12596 = distinct !DILocation(line: 3908, column: 18, scope: !12592)
!12597 = !DILocalVariable(name: "s", arg: 1, scope: !12592, file: !939, line: 3891, type: !2398)
!12598 = !DILocation(line: 3891, column: 53, scope: !12592)
!12599 = !DILocalVariable(name: "init_range", arg: 2, scope: !12592, file: !939, line: 3891, type: !1047)
!12600 = !DILocation(line: 3891, column: 64, scope: !12592)
!12601 = !DILocalVariable(name: "matroska", scope: !12592, file: !939, line: 3893, type: !2392)
!12602 = !DILocation(line: 3893, column: 27, scope: !12592)
!12603 = !DILocation(line: 3893, column: 38, scope: !12592)
!12604 = !DILocation(line: 3893, column: 41, scope: !12592)
!12605 = !DILocalVariable(name: "seekhead_list", scope: !12592, file: !939, line: 3894, type: !2751)
!12606 = !DILocation(line: 3894, column: 15, scope: !12592)
!12607 = !DILocation(line: 3894, column: 32, scope: !12592)
!12608 = !DILocation(line: 3894, column: 42, scope: !12592)
!12609 = !DILocalVariable(name: "seekhead", scope: !12592, file: !939, line: 3895, type: !4194)
!12610 = !DILocation(line: 3895, column: 23, scope: !12592)
!12611 = !DILocation(line: 3895, column: 34, scope: !12592)
!12612 = !DILocation(line: 3895, column: 49, scope: !12592)
!12613 = !DILocalVariable(name: "buf", scope: !12592, file: !939, line: 3896, type: !1051)
!12614 = !DILocation(line: 3896, column: 11, scope: !12592)
!12615 = !DILocalVariable(name: "cues_start", scope: !12592, file: !939, line: 3897, type: !1047)
!12616 = !DILocation(line: 3897, column: 13, scope: !12592)
!12617 = !DILocalVariable(name: "cues_end", scope: !12592, file: !939, line: 3897, type: !1047)
!12618 = !DILocation(line: 3897, column: 30, scope: !12592)
!12619 = !DILocalVariable(name: "before_pos", scope: !12592, file: !939, line: 3897, type: !1047)
!12620 = !DILocation(line: 3897, column: 45, scope: !12592)
!12621 = !DILocalVariable(name: "bandwidth", scope: !12592, file: !939, line: 3897, type: !1047)
!12622 = !DILocation(line: 3897, column: 57, scope: !12592)
!12623 = !DILocalVariable(name: "i", scope: !12592, file: !939, line: 3898, type: !1039)
!12624 = !DILocation(line: 3898, column: 9, scope: !12592)
!12625 = !DILocalVariable(name: "end", scope: !12592, file: !939, line: 3899, type: !1039)
!12626 = !DILocation(line: 3899, column: 9, scope: !12592)
!12627 = !DILocation(line: 3902, column: 12, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12592, file: !939, line: 3902, column: 5)
!12629 = !DILocation(line: 3902, column: 10, scope: !12628)
!12630 = !DILocation(line: 3902, column: 17, scope: !12631)
!12631 = !DILexicalBlockFile(scope: !12632, file: !939, discriminator: 1)
!12632 = distinct !DILexicalBlock(scope: !12628, file: !939, line: 3902, column: 5)
!12633 = !DILocation(line: 3902, column: 21, scope: !12631)
!12634 = !DILocation(line: 3902, column: 36, scope: !12631)
!12635 = !DILocation(line: 3902, column: 19, scope: !12631)
!12636 = !DILocation(line: 3902, column: 5, scope: !12631)
!12637 = !DILocation(line: 3903, column: 22, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12632, file: !939, line: 3903, column: 13)
!12639 = !DILocation(line: 3903, column: 13, scope: !12638)
!12640 = !DILocation(line: 3903, column: 25, scope: !12638)
!12641 = !DILocation(line: 3903, column: 28, scope: !12638)
!12642 = !DILocation(line: 3903, column: 13, scope: !12632)
!12643 = !DILocation(line: 3904, column: 13, scope: !12638)
!12644 = !DILocation(line: 3903, column: 31, scope: !12645)
!12645 = !DILexicalBlockFile(scope: !12638, file: !939, discriminator: 1)
!12646 = !DILocation(line: 3902, column: 46, scope: !12647)
!12647 = !DILexicalBlockFile(scope: !12632, file: !939, discriminator: 2)
!12648 = !DILocation(line: 3902, column: 5, scope: !12647)
!12649 = distinct !{!12649, !12650}
!12650 = !DILocation(line: 3902, column: 5, scope: !12592)
!12651 = !DILocation(line: 3906, column: 9, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12592, file: !939, line: 3906, column: 9)
!12653 = !DILocation(line: 3906, column: 14, scope: !12652)
!12654 = !DILocation(line: 3906, column: 29, scope: !12652)
!12655 = !DILocation(line: 3906, column: 11, scope: !12652)
!12656 = !DILocation(line: 3906, column: 9, scope: !12592)
!12657 = !DILocation(line: 3906, column: 38, scope: !12658)
!12658 = !DILexicalBlockFile(scope: !12652, file: !939, discriminator: 1)
!12659 = !DILocation(line: 3908, column: 28, scope: !12592)
!12660 = !DILocation(line: 3908, column: 38, scope: !12592)
!12661 = !DILocation(line: 3908, column: 43, scope: !12592)
!12662 = !DILocation(line: 3908, column: 18, scope: !12592)
!12663 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !12596)
!12664 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !12596)
!12665 = !DILocation(line: 3908, column: 16, scope: !12592)
!12666 = !DILocation(line: 3909, column: 27, scope: !12592)
!12667 = !DILocation(line: 3909, column: 18, scope: !12592)
!12668 = !DILocation(line: 3909, column: 30, scope: !12592)
!12669 = !DILocation(line: 3909, column: 36, scope: !12592)
!12670 = !DILocation(line: 3909, column: 46, scope: !12592)
!12671 = !DILocation(line: 3909, column: 34, scope: !12592)
!12672 = !DILocation(line: 3909, column: 16, scope: !12592)
!12673 = !DILocation(line: 3910, column: 19, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12592, file: !939, line: 3910, column: 9)
!12675 = !DILocation(line: 3910, column: 29, scope: !12674)
!12676 = !DILocation(line: 3910, column: 34, scope: !12674)
!12677 = !DILocation(line: 3910, column: 38, scope: !12674)
!12678 = !DILocation(line: 3910, column: 9, scope: !12674)
!12679 = !DILocation(line: 3910, column: 62, scope: !12674)
!12680 = !DILocation(line: 3910, column: 59, scope: !12674)
!12681 = !DILocation(line: 3910, column: 9, scope: !12592)
!12682 = !DILocalVariable(name: "cues_length", scope: !12683, file: !939, line: 3914, type: !1045)
!12683 = distinct !DILexicalBlock(scope: !12674, file: !939, line: 3910, column: 74)
!12684 = !DILocation(line: 3914, column: 18, scope: !12683)
!12685 = !DILocalVariable(name: "cues_id", scope: !12683, file: !939, line: 3914, type: !1045)
!12686 = !DILocation(line: 3914, column: 35, scope: !12683)
!12687 = !DILocalVariable(name: "bytes_read", scope: !12683, file: !939, line: 3914, type: !1045)
!12688 = !DILocation(line: 3914, column: 48, scope: !12683)
!12689 = !DILocation(line: 3915, column: 37, scope: !12683)
!12690 = !DILocation(line: 3915, column: 47, scope: !12683)
!12691 = !DILocation(line: 3915, column: 57, scope: !12683)
!12692 = !DILocation(line: 3915, column: 62, scope: !12683)
!12693 = !DILocation(line: 3915, column: 23, scope: !12683)
!12694 = !DILocation(line: 3915, column: 20, scope: !12683)
!12695 = !DILocation(line: 3916, column: 40, scope: !12683)
!12696 = !DILocation(line: 3916, column: 50, scope: !12683)
!12697 = !DILocation(line: 3916, column: 60, scope: !12683)
!12698 = !DILocation(line: 3916, column: 65, scope: !12683)
!12699 = !DILocation(line: 3916, column: 23, scope: !12683)
!12700 = !DILocation(line: 3916, column: 20, scope: !12683)
!12701 = !DILocation(line: 3917, column: 20, scope: !12683)
!12702 = !DILocation(line: 3917, column: 33, scope: !12683)
!12703 = !DILocation(line: 3917, column: 31, scope: !12683)
!12704 = !DILocation(line: 3917, column: 47, scope: !12683)
!12705 = !DILocation(line: 3917, column: 45, scope: !12683)
!12706 = !DILocation(line: 3917, column: 58, scope: !12683)
!12707 = !DILocation(line: 3917, column: 18, scope: !12683)
!12708 = !DILocation(line: 3918, column: 5, scope: !12683)
!12709 = !DILocation(line: 3919, column: 15, scope: !12592)
!12710 = !DILocation(line: 3919, column: 25, scope: !12592)
!12711 = !DILocation(line: 3919, column: 30, scope: !12592)
!12712 = !DILocation(line: 3919, column: 34, scope: !12592)
!12713 = !DILocation(line: 3919, column: 5, scope: !12592)
!12714 = !DILocation(line: 3920, column: 9, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12592, file: !939, line: 3920, column: 9)
!12716 = !DILocation(line: 3920, column: 20, scope: !12715)
!12717 = !DILocation(line: 3920, column: 26, scope: !12715)
!12718 = !DILocation(line: 3920, column: 29, scope: !12719)
!12719 = !DILexicalBlockFile(scope: !12715, file: !939, discriminator: 1)
!12720 = !DILocation(line: 3920, column: 38, scope: !12719)
!12721 = !DILocation(line: 3920, column: 9, scope: !12719)
!12722 = !DILocation(line: 3920, column: 45, scope: !12723)
!12723 = !DILexicalBlockFile(scope: !12715, file: !939, discriminator: 2)
!12724 = !DILocation(line: 3923, column: 25, scope: !12592)
!12725 = !DILocation(line: 3923, column: 5, scope: !12592)
!12726 = !DILocation(line: 3926, column: 22, scope: !12592)
!12727 = !DILocation(line: 3926, column: 25, scope: !12592)
!12728 = !DILocation(line: 3926, column: 37, scope: !12592)
!12729 = !DILocation(line: 3926, column: 80, scope: !12592)
!12730 = !DILocation(line: 3926, column: 5, scope: !12592)
!12731 = !DILocation(line: 3929, column: 22, scope: !12592)
!12732 = !DILocation(line: 3929, column: 25, scope: !12592)
!12733 = !DILocation(line: 3929, column: 37, scope: !12592)
!12734 = !DILocation(line: 3929, column: 78, scope: !12592)
!12735 = !DILocation(line: 3929, column: 5, scope: !12592)
!12736 = !DILocation(line: 3933, column: 9, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12592, file: !939, line: 3933, column: 9)
!12738 = !DILocation(line: 3933, column: 23, scope: !12737)
!12739 = !DILocation(line: 3933, column: 20, scope: !12737)
!12740 = !DILocation(line: 3933, column: 9, scope: !12592)
!12741 = !DILocation(line: 3934, column: 26, scope: !12737)
!12742 = !DILocation(line: 3934, column: 29, scope: !12737)
!12743 = !DILocation(line: 3934, column: 41, scope: !12737)
!12744 = !DILocation(line: 3934, column: 94, scope: !12737)
!12745 = !DILocation(line: 3934, column: 105, scope: !12737)
!12746 = !DILocation(line: 3934, column: 9, scope: !12737)
!12747 = !DILocation(line: 3937, column: 54, scope: !12592)
!12748 = !DILocation(line: 3937, column: 57, scope: !12592)
!12749 = !DILocation(line: 3937, column: 17, scope: !12592)
!12750 = !DILocation(line: 3937, column: 15, scope: !12592)
!12751 = !DILocation(line: 3938, column: 9, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12592, file: !939, line: 3938, column: 9)
!12753 = !DILocation(line: 3938, column: 19, scope: !12752)
!12754 = !DILocation(line: 3938, column: 9, scope: !12592)
!12755 = !DILocation(line: 3938, column: 24, scope: !12756)
!12756 = !DILexicalBlockFile(scope: !12752, file: !939, discriminator: 1)
!12757 = !DILocation(line: 3939, column: 22, scope: !12592)
!12758 = !DILocation(line: 3939, column: 25, scope: !12592)
!12759 = !DILocation(line: 3939, column: 37, scope: !12592)
!12760 = !DILocation(line: 3939, column: 79, scope: !12592)
!12761 = !DILocation(line: 3939, column: 5, scope: !12592)
!12762 = !DILocation(line: 3942, column: 22, scope: !12592)
!12763 = !DILocation(line: 3942, column: 25, scope: !12592)
!12764 = !DILocation(line: 3942, column: 37, scope: !12592)
!12765 = !DILocation(line: 3942, column: 120, scope: !12592)
!12766 = !DILocation(line: 3942, column: 86, scope: !12592)
!12767 = !DILocation(line: 3942, column: 5, scope: !12768)
!12768 = !DILexicalBlockFile(scope: !12592, file: !939, discriminator: 1)
!12769 = !DILocation(line: 3946, column: 27, scope: !12592)
!12770 = !DILocation(line: 3946, column: 30, scope: !12592)
!12771 = !DILocation(line: 3946, column: 42, scope: !12592)
!12772 = !DILocation(line: 3946, column: 11, scope: !12592)
!12773 = !DILocation(line: 3946, column: 9, scope: !12592)
!12774 = !DILocation(line: 3947, column: 10, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12592, file: !939, line: 3947, column: 9)
!12776 = !DILocation(line: 3947, column: 9, scope: !12592)
!12777 = !DILocation(line: 3947, column: 15, scope: !12778)
!12778 = !DILexicalBlockFile(scope: !12775, file: !939, discriminator: 1)
!12779 = !DILocation(line: 3948, column: 12, scope: !12592)
!12780 = !DILocation(line: 3948, column: 5, scope: !12592)
!12781 = !DILocation(line: 3949, column: 12, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12592, file: !939, line: 3949, column: 5)
!12783 = !DILocation(line: 3949, column: 10, scope: !12782)
!12784 = !DILocation(line: 3949, column: 17, scope: !12785)
!12785 = !DILexicalBlockFile(scope: !12786, file: !939, discriminator: 1)
!12786 = distinct !DILexicalBlock(scope: !12782, file: !939, line: 3949, column: 5)
!12787 = !DILocation(line: 3949, column: 21, scope: !12785)
!12788 = !DILocation(line: 3949, column: 24, scope: !12785)
!12789 = !DILocation(line: 3949, column: 36, scope: !12785)
!12790 = !DILocation(line: 3949, column: 19, scope: !12785)
!12791 = !DILocation(line: 3949, column: 5, scope: !12785)
!12792 = !DILocalVariable(name: "ret", scope: !12793, file: !939, line: 3950, type: !1039)
!12793 = distinct !DILexicalBlock(scope: !12786, file: !939, line: 3949, column: 59)
!12794 = !DILocation(line: 3950, column: 13, scope: !12793)
!12795 = !DILocation(line: 3950, column: 28, scope: !12793)
!12796 = !DILocation(line: 3950, column: 34, scope: !12793)
!12797 = !DILocation(line: 3950, column: 32, scope: !12793)
!12798 = !DILocation(line: 3951, column: 72, scope: !12793)
!12799 = !DILocation(line: 3951, column: 43, scope: !12793)
!12800 = !DILocation(line: 3951, column: 46, scope: !12793)
!12801 = !DILocation(line: 3951, column: 58, scope: !12793)
!12802 = !DILocation(line: 3951, column: 75, scope: !12793)
!12803 = !DILocation(line: 3952, column: 28, scope: !12793)
!12804 = !DILocation(line: 3952, column: 33, scope: !12793)
!12805 = !DILocation(line: 3952, column: 36, scope: !12793)
!12806 = !DILocation(line: 3952, column: 48, scope: !12793)
!12807 = !DILocation(line: 3952, column: 65, scope: !12793)
!12808 = !DILocation(line: 3952, column: 30, scope: !12793)
!12809 = !DILocation(line: 3950, column: 19, scope: !12793)
!12810 = !DILocation(line: 3953, column: 13, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12793, file: !939, line: 3953, column: 13)
!12812 = !DILocation(line: 3953, column: 17, scope: !12811)
!12813 = !DILocation(line: 3953, column: 22, scope: !12811)
!12814 = !DILocation(line: 3953, column: 26, scope: !12815)
!12815 = !DILexicalBlockFile(scope: !12811, file: !939, discriminator: 1)
!12816 = !DILocation(line: 3953, column: 30, scope: !12815)
!12817 = !DILocation(line: 3953, column: 36, scope: !12815)
!12818 = !DILocation(line: 3953, column: 39, scope: !12819)
!12819 = !DILexicalBlockFile(scope: !12811, file: !939, discriminator: 2)
!12820 = !DILocation(line: 3953, column: 44, scope: !12819)
!12821 = !DILocation(line: 3953, column: 47, scope: !12819)
!12822 = !DILocation(line: 3953, column: 59, scope: !12819)
!12823 = !DILocation(line: 3953, column: 76, scope: !12819)
!12824 = !DILocation(line: 3953, column: 41, scope: !12819)
!12825 = !DILocation(line: 3953, column: 13, scope: !12819)
!12826 = !DILocation(line: 3954, column: 20, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12811, file: !939, line: 3953, column: 82)
!12828 = !DILocation(line: 3954, column: 13, scope: !12827)
!12829 = !DILocation(line: 3955, column: 21, scope: !12827)
!12830 = !DILocation(line: 3955, column: 13, scope: !12827)
!12831 = !DILocation(line: 3956, column: 13, scope: !12827)
!12832 = !DILocation(line: 3958, column: 16, scope: !12793)
!12833 = !DILocation(line: 3958, column: 13, scope: !12793)
!12834 = !DILocation(line: 3959, column: 5, scope: !12793)
!12835 = !DILocation(line: 3949, column: 55, scope: !12836)
!12836 = !DILexicalBlockFile(scope: !12786, file: !939, discriminator: 2)
!12837 = !DILocation(line: 3949, column: 5, scope: !12836)
!12838 = distinct !{!12838, !12839}
!12839 = !DILocation(line: 3949, column: 5, scope: !12592)
!12840 = !DILocation(line: 3960, column: 18, scope: !12592)
!12841 = !DILocation(line: 3960, column: 21, scope: !12592)
!12842 = !DILocation(line: 3960, column: 33, scope: !12592)
!12843 = !DILocation(line: 3960, column: 80, scope: !12592)
!12844 = !DILocation(line: 3960, column: 5, scope: !12592)
!12845 = !DILocation(line: 3961, column: 13, scope: !12592)
!12846 = !DILocation(line: 3961, column: 5, scope: !12592)
!12847 = !DILocation(line: 3963, column: 5, scope: !12592)
!12848 = !DILocation(line: 3964, column: 1, scope: !12592)
!12849 = distinct !DISubprogram(name: "webm_dash_manifest_compute_bandwidth", scope: !939, file: !939, line: 3804, type: !12850, isLocal: true, isDefinition: true, scopeLine: 3805, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!12850 = !DISubroutineType(types: !12851)
!12851 = !{!1047, !2398, !1047}
!12852 = !DILocalVariable(name: "s", arg: 1, scope: !12849, file: !939, line: 3804, type: !2398)
!12853 = !DILocation(line: 3804, column: 70, scope: !12849)
!12854 = !DILocalVariable(name: "cues_start", arg: 2, scope: !12849, file: !939, line: 3804, type: !1047)
!12855 = !DILocation(line: 3804, column: 81, scope: !12849)
!12856 = !DILocalVariable(name: "matroska", scope: !12849, file: !939, line: 3806, type: !2392)
!12857 = !DILocation(line: 3806, column: 27, scope: !12849)
!12858 = !DILocation(line: 3806, column: 38, scope: !12849)
!12859 = !DILocation(line: 3806, column: 41, scope: !12849)
!12860 = !DILocalVariable(name: "st", scope: !12849, file: !939, line: 3807, type: !1478)
!12861 = !DILocation(line: 3807, column: 15, scope: !12849)
!12862 = !DILocation(line: 3807, column: 20, scope: !12849)
!12863 = !DILocation(line: 3807, column: 23, scope: !12849)
!12864 = !DILocalVariable(name: "bandwidth", scope: !12849, file: !939, line: 3808, type: !1057)
!12865 = !DILocation(line: 3808, column: 12, scope: !12849)
!12866 = !DILocalVariable(name: "i", scope: !12849, file: !939, line: 3809, type: !1039)
!12867 = !DILocation(line: 3809, column: 9, scope: !12849)
!12868 = !DILocation(line: 3811, column: 12, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12849, file: !939, line: 3811, column: 5)
!12870 = !DILocation(line: 3811, column: 10, scope: !12869)
!12871 = !DILocation(line: 3811, column: 17, scope: !12872)
!12872 = !DILexicalBlockFile(scope: !12873, file: !939, discriminator: 1)
!12873 = distinct !DILexicalBlock(scope: !12869, file: !939, line: 3811, column: 5)
!12874 = !DILocation(line: 3811, column: 21, scope: !12872)
!12875 = !DILocation(line: 3811, column: 25, scope: !12872)
!12876 = !DILocation(line: 3811, column: 19, scope: !12872)
!12877 = !DILocation(line: 3811, column: 5, scope: !12872)
!12878 = !DILocalVariable(name: "prebuffer_ns", scope: !12879, file: !939, line: 3812, type: !1047)
!12879 = distinct !DILexicalBlock(scope: !12873, file: !939, line: 3811, column: 48)
!12880 = !DILocation(line: 3812, column: 17, scope: !12879)
!12881 = !DILocalVariable(name: "time_ns", scope: !12879, file: !939, line: 3813, type: !1047)
!12882 = !DILocation(line: 3813, column: 17, scope: !12879)
!12883 = !DILocation(line: 3813, column: 45, scope: !12879)
!12884 = !DILocation(line: 3813, column: 27, scope: !12879)
!12885 = !DILocation(line: 3813, column: 31, scope: !12879)
!12886 = !DILocation(line: 3813, column: 48, scope: !12879)
!12887 = !DILocation(line: 3813, column: 60, scope: !12879)
!12888 = !DILocation(line: 3813, column: 70, scope: !12879)
!12889 = !DILocation(line: 3813, column: 58, scope: !12879)
!12890 = !DILocalVariable(name: "nano_seconds_per_second", scope: !12879, file: !939, line: 3814, type: !1057)
!12891 = !DILocation(line: 3814, column: 16, scope: !12879)
!12892 = !DILocalVariable(name: "prebuffered_ns", scope: !12879, file: !939, line: 3815, type: !1047)
!12893 = !DILocation(line: 3815, column: 17, scope: !12879)
!12894 = !DILocation(line: 3815, column: 34, scope: !12879)
!12895 = !DILocation(line: 3815, column: 44, scope: !12879)
!12896 = !DILocation(line: 3815, column: 42, scope: !12879)
!12897 = !DILocalVariable(name: "prebuffer_bytes", scope: !12879, file: !939, line: 3816, type: !1057)
!12898 = !DILocation(line: 3816, column: 16, scope: !12879)
!12899 = !DILocalVariable(name: "temp_prebuffer_ns", scope: !12879, file: !939, line: 3817, type: !1047)
!12900 = !DILocation(line: 3817, column: 17, scope: !12879)
!12901 = !DILocation(line: 3817, column: 37, scope: !12879)
!12902 = !DILocalVariable(name: "pre_bytes", scope: !12879, file: !939, line: 3818, type: !1047)
!12903 = !DILocation(line: 3818, column: 17, scope: !12879)
!12904 = !DILocalVariable(name: "pre_ns", scope: !12879, file: !939, line: 3818, type: !1047)
!12905 = !DILocation(line: 3818, column: 28, scope: !12879)
!12906 = !DILocalVariable(name: "pre_sec", scope: !12879, file: !939, line: 3819, type: !1057)
!12907 = !DILocation(line: 3819, column: 16, scope: !12879)
!12908 = !DILocalVariable(name: "prebuffer", scope: !12879, file: !939, line: 3819, type: !1057)
!12909 = !DILocation(line: 3819, column: 25, scope: !12879)
!12910 = !DILocalVariable(name: "bits_per_second", scope: !12879, file: !939, line: 3819, type: !1057)
!12911 = !DILocation(line: 3819, column: 36, scope: !12879)
!12912 = !DILocalVariable(name: "desc_beg", scope: !12879, file: !939, line: 3820, type: !12913)
!12913 = !DIDerivedType(tag: DW_TAG_typedef, name: "CueDesc", file: !939, line: 3649, baseType: !12914)
!12914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !939, line: 3644, size: 256, align: 64, elements: !12915)
!12915 = !{!12916, !12917, !12918, !12919}
!12916 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !12914, file: !939, line: 3645, baseType: !1047, size: 64, align: 64)
!12917 = !DIDerivedType(tag: DW_TAG_member, name: "end_time_ns", scope: !12914, file: !939, line: 3646, baseType: !1047, size: 64, align: 64, offset: 64)
!12918 = !DIDerivedType(tag: DW_TAG_member, name: "start_offset", scope: !12914, file: !939, line: 3647, baseType: !1047, size: 64, align: 64, offset: 128)
!12919 = !DIDerivedType(tag: DW_TAG_member, name: "end_offset", scope: !12914, file: !939, line: 3648, baseType: !1047, size: 64, align: 64, offset: 192)
!12920 = !DILocation(line: 3820, column: 17, scope: !12879)
!12921 = !DILocation(line: 3820, column: 41, scope: !12879)
!12922 = !DILocation(line: 3820, column: 44, scope: !12879)
!12923 = !DILocation(line: 3820, column: 53, scope: !12879)
!12924 = !DILocation(line: 3820, column: 28, scope: !12879)
!12925 = !DILocalVariable(name: "desc_end", scope: !12879, file: !939, line: 3823, type: !12913)
!12926 = !DILocation(line: 3823, column: 17, scope: !12879)
!12927 = !DILocation(line: 3823, column: 28, scope: !12879)
!12928 = !DILocation(line: 3827, column: 9, scope: !12879)
!12929 = !DILocation(line: 3827, column: 25, scope: !12930)
!12930 = !DILexicalBlockFile(scope: !12879, file: !939, discriminator: 1)
!12931 = !DILocation(line: 3827, column: 39, scope: !12930)
!12932 = !DILocation(line: 3827, column: 45, scope: !12930)
!12933 = !DILocation(line: 3827, column: 57, scope: !12934)
!12934 = !DILexicalBlockFile(scope: !12879, file: !939, discriminator: 2)
!12935 = !DILocation(line: 3827, column: 71, scope: !12934)
!12936 = !DILocation(line: 3827, column: 69, scope: !12934)
!12937 = !DILocation(line: 3827, column: 9, scope: !12938)
!12938 = !DILexicalBlockFile(scope: !12879, file: !939, discriminator: 3)
!12939 = !DILocation(line: 3829, column: 41, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12879, file: !939, line: 3827, column: 87)
!12941 = !DILocation(line: 3829, column: 63, scope: !12940)
!12942 = !DILocation(line: 3829, column: 52, scope: !12940)
!12943 = !DILocation(line: 3829, column: 32, scope: !12940)
!12944 = !DILocation(line: 3829, column: 29, scope: !12940)
!12945 = !DILocation(line: 3830, column: 43, scope: !12940)
!12946 = !DILocation(line: 3830, column: 66, scope: !12940)
!12947 = !DILocation(line: 3830, column: 55, scope: !12940)
!12948 = !DILocation(line: 3830, column: 31, scope: !12940)
!12949 = !DILocation(line: 3831, column: 37, scope: !12940)
!12950 = !DILocation(line: 3831, column: 49, scope: !12940)
!12951 = !DILocation(line: 3831, column: 62, scope: !12940)
!12952 = !DILocation(line: 3831, column: 24, scope: !12940)
!12953 = !DILocation(line: 3831, column: 24, scope: !12954)
!12954 = !DILexicalBlockFile(scope: !12940, file: !939, discriminator: 1)
!12955 = !DILocation(line: 3827, column: 9, scope: !12956)
!12956 = !DILexicalBlockFile(scope: !12879, file: !939, discriminator: 4)
!12957 = distinct !{!12957, !12928}
!12958 = !DILocation(line: 3833, column: 22, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12879, file: !939, line: 3833, column: 13)
!12960 = !DILocation(line: 3833, column: 36, scope: !12959)
!12961 = !DILocation(line: 3833, column: 13, scope: !12879)
!12962 = !DILocation(line: 3835, column: 17, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12964, file: !939, line: 3835, column: 17)
!12964 = distinct !DILexicalBlock(scope: !12959, file: !939, line: 3833, column: 43)
!12965 = !DILocation(line: 3835, column: 27, scope: !12963)
!12966 = !DILocation(line: 3835, column: 38, scope: !12963)
!12967 = !DILocation(line: 3835, column: 48, scope: !12963)
!12968 = !DILocation(line: 3835, column: 36, scope: !12963)
!12969 = !DILocation(line: 3835, column: 62, scope: !12963)
!12970 = !DILocation(line: 3835, column: 59, scope: !12963)
!12971 = !DILocation(line: 3835, column: 17, scope: !12964)
!12972 = !DILocation(line: 3836, column: 15, scope: !12963)
!12973 = !DILocation(line: 3837, column: 29, scope: !12964)
!12974 = !DILocation(line: 3838, column: 9, scope: !12964)
!12975 = !DILocation(line: 3841, column: 34, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12959, file: !939, line: 3838, column: 16)
!12977 = !DILocation(line: 3841, column: 56, scope: !12976)
!12978 = !DILocation(line: 3841, column: 45, scope: !12976)
!12979 = !DILocation(line: 3841, column: 23, scope: !12976)
!12980 = !DILocation(line: 3842, column: 31, scope: !12976)
!12981 = !DILocation(line: 3842, column: 54, scope: !12976)
!12982 = !DILocation(line: 3842, column: 43, scope: !12976)
!12983 = !DILocation(line: 3842, column: 20, scope: !12976)
!12984 = !DILocation(line: 3843, column: 23, scope: !12976)
!12985 = !DILocation(line: 3843, column: 32, scope: !12976)
!12986 = !DILocation(line: 3843, column: 30, scope: !12976)
!12987 = !DILocation(line: 3843, column: 21, scope: !12976)
!12988 = !DILocation(line: 3845, column: 17, scope: !12976)
!12989 = !DILocation(line: 3845, column: 31, scope: !12976)
!12990 = !DILocation(line: 3845, column: 51, scope: !12976)
!12991 = !DILocation(line: 3845, column: 49, scope: !12976)
!12992 = !DILocation(line: 3845, column: 78, scope: !12976)
!12993 = !DILocation(line: 3845, column: 76, scope: !12976)
!12994 = !DILocation(line: 3845, column: 27, scope: !12976)
!12995 = !DILocation(line: 3844, column: 29, scope: !12976)
!12996 = !DILocation(line: 3847, column: 25, scope: !12976)
!12997 = !DILocation(line: 3847, column: 40, scope: !12976)
!12998 = !DILocation(line: 3847, column: 38, scope: !12976)
!12999 = !DILocation(line: 3847, column: 23, scope: !12976)
!13000 = !DILocation(line: 3850, column: 29, scope: !12976)
!13001 = !DILocation(line: 3851, column: 13, scope: !12976)
!13002 = distinct !{!13002, !13001}
!13003 = !DILocalVariable(name: "desc_bytes", scope: !13004, file: !939, line: 3852, type: !1047)
!13004 = distinct !DILexicalBlock(scope: !12976, file: !939, line: 3851, column: 16)
!13005 = !DILocation(line: 3852, column: 25, scope: !13004)
!13006 = !DILocation(line: 3852, column: 47, scope: !13004)
!13007 = !DILocation(line: 3852, column: 69, scope: !13004)
!13008 = !DILocation(line: 3852, column: 58, scope: !13004)
!13009 = !DILocalVariable(name: "desc_ns", scope: !13004, file: !939, line: 3853, type: !1047)
!13010 = !DILocation(line: 3853, column: 25, scope: !13004)
!13011 = !DILocation(line: 3853, column: 44, scope: !13004)
!13012 = !DILocation(line: 3853, column: 67, scope: !13004)
!13013 = !DILocation(line: 3853, column: 56, scope: !13004)
!13014 = !DILocalVariable(name: "desc_sec", scope: !13004, file: !939, line: 3854, type: !1057)
!13015 = !DILocation(line: 3854, column: 24, scope: !13004)
!13016 = !DILocation(line: 3854, column: 35, scope: !13004)
!13017 = !DILocation(line: 3854, column: 45, scope: !13004)
!13018 = !DILocation(line: 3854, column: 43, scope: !13004)
!13019 = !DILocalVariable(name: "calc_bits_per_second", scope: !13004, file: !939, line: 3855, type: !1057)
!13020 = !DILocation(line: 3855, column: 24, scope: !13004)
!13021 = !DILocation(line: 3855, column: 48, scope: !13004)
!13022 = !DILocation(line: 3855, column: 59, scope: !13004)
!13023 = !DILocation(line: 3855, column: 47, scope: !13004)
!13024 = !DILocation(line: 3855, column: 66, scope: !13004)
!13025 = !DILocation(line: 3855, column: 64, scope: !13004)
!13026 = !DILocalVariable(name: "percent", scope: !13004, file: !939, line: 3858, type: !1057)
!13027 = !DILocation(line: 3858, column: 24, scope: !13004)
!13028 = !DILocation(line: 3858, column: 35, scope: !13004)
!13029 = !DILocation(line: 3858, column: 48, scope: !13004)
!13030 = !DILocation(line: 3858, column: 46, scope: !13004)
!13031 = !DILocation(line: 3858, column: 67, scope: !13004)
!13032 = !DILocation(line: 3858, column: 65, scope: !13004)
!13033 = !DILocalVariable(name: "mod_bits_per_second", scope: !13004, file: !939, line: 3859, type: !1057)
!13034 = !DILocation(line: 3859, column: 24, scope: !13004)
!13035 = !DILocation(line: 3859, column: 46, scope: !13004)
!13036 = !DILocation(line: 3859, column: 69, scope: !13004)
!13037 = !DILocation(line: 3859, column: 67, scope: !13004)
!13038 = !DILocation(line: 3861, column: 21, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13004, file: !939, line: 3861, column: 21)
!13040 = !DILocation(line: 3861, column: 33, scope: !13039)
!13041 = !DILocation(line: 3861, column: 31, scope: !13039)
!13042 = !DILocation(line: 3861, column: 21, scope: !13004)
!13043 = !DILocalVariable(name: "search_sec", scope: !13044, file: !939, line: 3862, type: !1057)
!13044 = distinct !DILexicalBlock(scope: !13039, file: !939, line: 3861, column: 43)
!13045 = !DILocation(line: 3862, column: 28, scope: !13044)
!13046 = !DILocation(line: 3863, column: 34, scope: !13044)
!13047 = !DILocation(line: 3863, column: 44, scope: !13044)
!13048 = !DILocation(line: 3863, column: 55, scope: !13044)
!13049 = !DILocation(line: 3863, column: 65, scope: !13044)
!13050 = !DILocation(line: 3863, column: 53, scope: !13044)
!13051 = !DILocation(line: 3863, column: 79, scope: !13044)
!13052 = !DILocation(line: 3863, column: 77, scope: !13044)
!13053 = !DILocalVariable(name: "bps", scope: !13044, file: !939, line: 3867, type: !1047)
!13054 = !DILocation(line: 3867, column: 29, scope: !13044)
!13055 = !DILocation(line: 3867, column: 45, scope: !13044)
!13056 = !DILocation(line: 3867, column: 35, scope: !13044)
!13057 = !DILocation(line: 3867, column: 66, scope: !13044)
!13058 = !DILocalVariable(name: "min_buffer", scope: !13044, file: !939, line: 3868, type: !13059)
!13059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!13060 = !DILocation(line: 3868, column: 34, scope: !13044)
!13061 = !DILocalVariable(name: "buffer", scope: !13044, file: !939, line: 3869, type: !1057)
!13062 = !DILocation(line: 3869, column: 28, scope: !13044)
!13063 = !DILocation(line: 3869, column: 37, scope: !13044)
!13064 = !DILocalVariable(name: "sec_to_download", scope: !13044, file: !939, line: 3870, type: !1057)
!13065 = !DILocation(line: 3870, column: 28, scope: !13044)
!13066 = !DILocalVariable(name: "rv", scope: !13044, file: !939, line: 3872, type: !1039)
!13067 = !DILocation(line: 3872, column: 25, scope: !13044)
!13068 = !DILocation(line: 3872, column: 64, scope: !13044)
!13069 = !DILocation(line: 3872, column: 80, scope: !13044)
!13070 = !DILocation(line: 3872, column: 92, scope: !13044)
!13071 = !DILocation(line: 3874, column: 64, scope: !13044)
!13072 = !DILocation(line: 3874, column: 67, scope: !13044)
!13073 = !DILocation(line: 3872, column: 30, scope: !13044)
!13074 = !DILocation(line: 3875, column: 25, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13044, file: !939, line: 3875, column: 25)
!13076 = !DILocation(line: 3875, column: 28, scope: !13075)
!13077 = !DILocation(line: 3875, column: 25, scope: !13044)
!13078 = !DILocation(line: 3876, column: 25, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13075, file: !939, line: 3875, column: 33)
!13080 = !DILocation(line: 3877, column: 32, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13075, file: !939, line: 3877, column: 32)
!13082 = !DILocation(line: 3877, column: 35, scope: !13081)
!13083 = !DILocation(line: 3877, column: 32, scope: !13075)
!13084 = !DILocation(line: 3878, column: 52, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13081, file: !939, line: 3877, column: 41)
!13086 = !DILocation(line: 3878, column: 43, scope: !13085)
!13087 = !DILocation(line: 3878, column: 41, scope: !13085)
!13088 = !DILocation(line: 3879, column: 25, scope: !13085)
!13089 = !DILocation(line: 3881, column: 17, scope: !13044)
!13090 = !DILocation(line: 3883, column: 41, scope: !13004)
!13091 = !DILocation(line: 3883, column: 53, scope: !13004)
!13092 = !DILocation(line: 3883, column: 66, scope: !13004)
!13093 = !DILocation(line: 3883, column: 28, scope: !13004)
!13094 = !DILocation(line: 3883, column: 28, scope: !13095)
!13095 = !DILexicalBlockFile(scope: !13004, file: !939, discriminator: 1)
!13096 = !DILocation(line: 3884, column: 13, scope: !13004)
!13097 = !DILocation(line: 3884, column: 31, scope: !13098)
!13098 = !DILexicalBlockFile(scope: !12976, file: !939, discriminator: 1)
!13099 = !DILocation(line: 3884, column: 45, scope: !13098)
!13100 = !DILocation(line: 3884, column: 13, scope: !13098)
!13101 = !DILocation(line: 3886, column: 13, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !12879, file: !939, line: 3886, column: 13)
!13103 = !DILocation(line: 3886, column: 25, scope: !13102)
!13104 = !DILocation(line: 3886, column: 23, scope: !13102)
!13105 = !DILocation(line: 3886, column: 13, scope: !12879)
!13106 = !DILocation(line: 3886, column: 54, scope: !13107)
!13107 = !DILexicalBlockFile(scope: !13102, file: !939, discriminator: 1)
!13108 = !DILocation(line: 3886, column: 52, scope: !13107)
!13109 = !DILocation(line: 3886, column: 42, scope: !13107)
!13110 = !DILocation(line: 3887, column: 5, scope: !12879)
!13111 = !DILocation(line: 3811, column: 44, scope: !13112)
!13112 = !DILexicalBlockFile(scope: !12873, file: !939, discriminator: 2)
!13113 = !DILocation(line: 3811, column: 5, scope: !13112)
!13114 = distinct !{!13114, !13115}
!13115 = !DILocation(line: 3811, column: 5, scope: !12849)
!13116 = !DILocation(line: 3888, column: 21, scope: !12849)
!13117 = !DILocation(line: 3888, column: 12, scope: !12849)
!13118 = !DILocation(line: 3888, column: 5, scope: !12849)
!13119 = !DILocation(line: 3889, column: 1, scope: !12849)
!13120 = distinct !DISubprogram(name: "webm_clusters_start_with_keyframe", scope: !939, file: !939, line: 3684, type: !2544, isLocal: true, isDefinition: true, scopeLine: 3685, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!13121 = !DILocation(line: 557, column: 77, scope: !2736, inlinedAt: !13122)
!13122 = distinct !DILocation(line: 3694, column: 18, scope: !13120)
!13123 = !DILocalVariable(name: "s", arg: 1, scope: !13120, file: !939, line: 3684, type: !2398)
!13124 = !DILocation(line: 3684, column: 63, scope: !13120)
!13125 = !DILocalVariable(name: "matroska", scope: !13120, file: !939, line: 3686, type: !2392)
!13126 = !DILocation(line: 3686, column: 27, scope: !13120)
!13127 = !DILocation(line: 3686, column: 38, scope: !13120)
!13128 = !DILocation(line: 3686, column: 41, scope: !13120)
!13129 = !DILocalVariable(name: "cluster_pos", scope: !13120, file: !939, line: 3687, type: !1047)
!13130 = !DILocation(line: 3687, column: 13, scope: !13120)
!13131 = !DILocalVariable(name: "before_pos", scope: !13120, file: !939, line: 3687, type: !1047)
!13132 = !DILocation(line: 3687, column: 26, scope: !13120)
!13133 = !DILocalVariable(name: "index", scope: !13120, file: !939, line: 3688, type: !1039)
!13134 = !DILocation(line: 3688, column: 9, scope: !13120)
!13135 = !DILocalVariable(name: "rv", scope: !13120, file: !939, line: 3688, type: !1039)
!13136 = !DILocation(line: 3688, column: 16, scope: !13120)
!13137 = !DILocation(line: 3689, column: 9, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13120, file: !939, line: 3689, column: 9)
!13139 = !DILocation(line: 3689, column: 12, scope: !13138)
!13140 = !DILocation(line: 3689, column: 24, scope: !13138)
!13141 = !DILocation(line: 3689, column: 41, scope: !13138)
!13142 = !DILocation(line: 3689, column: 9, scope: !13120)
!13143 = !DILocation(line: 3689, column: 47, scope: !13144)
!13144 = !DILexicalBlockFile(scope: !13138, file: !939, discriminator: 1)
!13145 = !DILocation(line: 3691, column: 39, scope: !13120)
!13146 = !DILocation(line: 3691, column: 42, scope: !13120)
!13147 = !DILocation(line: 3691, column: 13, scope: !13120)
!13148 = !DILocation(line: 3691, column: 11, scope: !13120)
!13149 = !DILocation(line: 3692, column: 9, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13120, file: !939, line: 3692, column: 9)
!13151 = !DILocation(line: 3692, column: 15, scope: !13150)
!13152 = !DILocation(line: 3692, column: 9, scope: !13120)
!13153 = !DILocation(line: 3692, column: 20, scope: !13154)
!13154 = !DILexicalBlockFile(scope: !13150, file: !939, discriminator: 1)
!13155 = !DILocation(line: 3693, column: 48, scope: !13120)
!13156 = !DILocation(line: 3693, column: 19, scope: !13120)
!13157 = !DILocation(line: 3693, column: 22, scope: !13120)
!13158 = !DILocation(line: 3693, column: 34, scope: !13120)
!13159 = !DILocation(line: 3693, column: 55, scope: !13120)
!13160 = !DILocation(line: 3693, column: 17, scope: !13120)
!13161 = !DILocation(line: 3694, column: 28, scope: !13120)
!13162 = !DILocation(line: 3694, column: 31, scope: !13120)
!13163 = !DILocation(line: 3694, column: 18, scope: !13120)
!13164 = !DILocation(line: 559, column: 22, scope: !2736, inlinedAt: !13122)
!13165 = !DILocation(line: 559, column: 12, scope: !2736, inlinedAt: !13122)
!13166 = !DILocation(line: 3694, column: 16, scope: !13120)
!13167 = !DILocation(line: 3695, column: 5, scope: !13120)
!13168 = !DILocalVariable(name: "cluster_id", scope: !13169, file: !939, line: 3696, type: !1047)
!13169 = distinct !DILexicalBlock(scope: !13120, file: !939, line: 3695, column: 15)
!13170 = !DILocation(line: 3696, column: 17, scope: !13169)
!13171 = !DILocalVariable(name: "cluster_length", scope: !13169, file: !939, line: 3696, type: !1047)
!13172 = !DILocation(line: 3696, column: 33, scope: !13169)
!13173 = !DILocalVariable(name: "pkt", scope: !13169, file: !939, line: 3697, type: !1256)
!13174 = !DILocation(line: 3697, column: 19, scope: !13169)
!13175 = !DILocation(line: 3698, column: 19, scope: !13169)
!13176 = !DILocation(line: 3698, column: 22, scope: !13169)
!13177 = !DILocation(line: 3698, column: 26, scope: !13169)
!13178 = !DILocation(line: 3698, column: 9, scope: !13169)
!13179 = !DILocation(line: 3700, column: 23, scope: !13169)
!13180 = !DILocation(line: 3700, column: 33, scope: !13169)
!13181 = !DILocation(line: 3700, column: 43, scope: !13169)
!13182 = !DILocation(line: 3700, column: 48, scope: !13169)
!13183 = !DILocation(line: 3700, column: 9, scope: !13169)
!13184 = !DILocation(line: 3701, column: 26, scope: !13169)
!13185 = !DILocation(line: 3701, column: 36, scope: !13169)
!13186 = !DILocation(line: 3701, column: 46, scope: !13169)
!13187 = !DILocation(line: 3701, column: 51, scope: !13169)
!13188 = !DILocation(line: 3701, column: 9, scope: !13169)
!13189 = !DILocation(line: 3702, column: 13, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13169, file: !939, line: 3702, column: 13)
!13191 = !DILocation(line: 3702, column: 24, scope: !13190)
!13192 = !DILocation(line: 3702, column: 13, scope: !13169)
!13193 = !DILocation(line: 3703, column: 13, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13190, file: !939, line: 3702, column: 38)
!13195 = !DILocation(line: 3705, column: 19, scope: !13169)
!13196 = !DILocation(line: 3705, column: 22, scope: !13169)
!13197 = !DILocation(line: 3705, column: 26, scope: !13169)
!13198 = !DILocation(line: 3705, column: 9, scope: !13169)
!13199 = !DILocation(line: 3706, column: 9, scope: !13169)
!13200 = !DILocation(line: 3706, column: 19, scope: !13169)
!13201 = !DILocation(line: 3706, column: 30, scope: !13169)
!13202 = !DILocation(line: 3707, column: 30, scope: !13169)
!13203 = !DILocation(line: 3707, column: 9, scope: !13169)
!13204 = !DILocation(line: 3708, column: 36, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13169, file: !939, line: 3708, column: 13)
!13206 = !DILocation(line: 3708, column: 13, scope: !13205)
!13207 = !DILocation(line: 3708, column: 46, scope: !13205)
!13208 = !DILocation(line: 3708, column: 50, scope: !13205)
!13209 = !DILocation(line: 3709, column: 14, scope: !13205)
!13210 = !DILocation(line: 3709, column: 24, scope: !13205)
!13211 = !DILocation(line: 3708, column: 13, scope: !13212)
!13212 = !DILexicalBlockFile(scope: !13169, file: !939, discriminator: 1)
!13213 = !DILocation(line: 3710, column: 13, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13205, file: !939, line: 3709, column: 31)
!13215 = !DILocation(line: 3712, column: 16, scope: !13169)
!13216 = !DILocation(line: 3712, column: 26, scope: !13169)
!13217 = !DILocation(line: 3712, column: 33, scope: !13169)
!13218 = !DILocation(line: 3712, column: 13, scope: !13169)
!13219 = !DILocation(line: 3713, column: 24, scope: !13169)
!13220 = !DILocation(line: 3713, column: 39, scope: !13169)
!13221 = !DILocation(line: 3713, column: 21, scope: !13169)
!13222 = !DILocation(line: 3714, column: 15, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13169, file: !939, line: 3714, column: 13)
!13224 = !DILocation(line: 3714, column: 20, scope: !13223)
!13225 = !DILocation(line: 3714, column: 26, scope: !13223)
!13226 = !DILocation(line: 3714, column: 13, scope: !13169)
!13227 = !DILocation(line: 3715, column: 16, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13223, file: !939, line: 3714, column: 37)
!13229 = !DILocation(line: 3716, column: 13, scope: !13228)
!13230 = !DILocation(line: 3695, column: 5, scope: !13231)
!13231 = !DILexicalBlockFile(scope: !13120, file: !939, discriminator: 1)
!13232 = distinct !{!13232, !13167}
!13233 = !DILocation(line: 3719, column: 15, scope: !13120)
!13234 = !DILocation(line: 3719, column: 18, scope: !13120)
!13235 = !DILocation(line: 3719, column: 22, scope: !13120)
!13236 = !DILocation(line: 3719, column: 5, scope: !13120)
!13237 = !DILocation(line: 3720, column: 12, scope: !13120)
!13238 = !DILocation(line: 3720, column: 5, scope: !13120)
!13239 = !DILocation(line: 3721, column: 1, scope: !13120)
!13240 = distinct !DISubprogram(name: "get_cue_desc", scope: !939, file: !939, line: 3655, type: !13241, isLocal: true, isDefinition: true, scopeLine: 3655, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!13241 = !DISubroutineType(types: !13242)
!13242 = !{!12913, !2398, !1047, !1047}
!13243 = !DILocalVariable(name: "s", arg: 1, scope: !13240, file: !939, line: 3655, type: !2398)
!13244 = !DILocation(line: 3655, column: 46, scope: !13240)
!13245 = !DILocalVariable(name: "ts", arg: 2, scope: !13240, file: !939, line: 3655, type: !1047)
!13246 = !DILocation(line: 3655, column: 57, scope: !13240)
!13247 = !DILocalVariable(name: "cues_start", arg: 3, scope: !13240, file: !939, line: 3655, type: !1047)
!13248 = !DILocation(line: 3655, column: 69, scope: !13240)
!13249 = !DILocalVariable(name: "matroska", scope: !13240, file: !939, line: 3656, type: !2392)
!13250 = !DILocation(line: 3656, column: 27, scope: !13240)
!13251 = !DILocation(line: 3656, column: 38, scope: !13240)
!13252 = !DILocation(line: 3656, column: 41, scope: !13240)
!13253 = !DILocalVariable(name: "cue_desc", scope: !13240, file: !939, line: 3657, type: !12913)
!13254 = !DILocation(line: 3657, column: 13, scope: !13240)
!13255 = !DILocalVariable(name: "i", scope: !13240, file: !939, line: 3658, type: !1039)
!13256 = !DILocation(line: 3658, column: 9, scope: !13240)
!13257 = !DILocalVariable(name: "nb_index_entries", scope: !13240, file: !939, line: 3659, type: !1039)
!13258 = !DILocation(line: 3659, column: 9, scope: !13240)
!13259 = !DILocation(line: 3659, column: 28, scope: !13240)
!13260 = !DILocation(line: 3659, column: 31, scope: !13240)
!13261 = !DILocation(line: 3659, column: 43, scope: !13240)
!13262 = !DILocalVariable(name: "index_entries", scope: !13240, file: !939, line: 3660, type: !2160)
!13263 = !DILocation(line: 3660, column: 19, scope: !13240)
!13264 = !DILocation(line: 3660, column: 35, scope: !13240)
!13265 = !DILocation(line: 3660, column: 38, scope: !13240)
!13266 = !DILocation(line: 3660, column: 50, scope: !13240)
!13267 = !DILocation(line: 3661, column: 9, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13240, file: !939, line: 3661, column: 9)
!13269 = !DILocation(line: 3661, column: 15, scope: !13268)
!13270 = !DILocation(line: 3661, column: 25, scope: !13268)
!13271 = !DILocation(line: 3661, column: 36, scope: !13268)
!13272 = !DILocation(line: 3661, column: 46, scope: !13268)
!13273 = !DILocation(line: 3661, column: 34, scope: !13268)
!13274 = !DILocation(line: 3661, column: 12, scope: !13268)
!13275 = !DILocation(line: 3661, column: 9, scope: !13240)
!13276 = !DILocation(line: 3661, column: 75, scope: !13277)
!13277 = !DILexicalBlockFile(scope: !13268, file: !939, discriminator: 1)
!13278 = !DILocation(line: 3661, column: 58, scope: !13277)
!13279 = !DILocation(line: 3662, column: 12, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13240, file: !939, line: 3662, column: 5)
!13281 = !DILocation(line: 3662, column: 10, scope: !13280)
!13282 = !DILocation(line: 3662, column: 17, scope: !13283)
!13283 = !DILexicalBlockFile(scope: !13284, file: !939, discriminator: 1)
!13284 = distinct !DILexicalBlock(scope: !13280, file: !939, line: 3662, column: 5)
!13285 = !DILocation(line: 3662, column: 21, scope: !13283)
!13286 = !DILocation(line: 3662, column: 19, scope: !13283)
!13287 = !DILocation(line: 3662, column: 5, scope: !13283)
!13288 = !DILocation(line: 3663, column: 27, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13290, file: !939, line: 3663, column: 13)
!13290 = distinct !DILexicalBlock(scope: !13284, file: !939, line: 3662, column: 44)
!13291 = !DILocation(line: 3663, column: 29, scope: !13289)
!13292 = !DILocation(line: 3663, column: 13, scope: !13289)
!13293 = !DILocation(line: 3663, column: 34, scope: !13289)
!13294 = !DILocation(line: 3663, column: 46, scope: !13289)
!13295 = !DILocation(line: 3663, column: 56, scope: !13289)
!13296 = !DILocation(line: 3663, column: 44, scope: !13289)
!13297 = !DILocation(line: 3663, column: 70, scope: !13289)
!13298 = !DILocation(line: 3663, column: 67, scope: !13289)
!13299 = !DILocation(line: 3663, column: 73, scope: !13289)
!13300 = !DILocation(line: 3664, column: 27, scope: !13289)
!13301 = !DILocation(line: 3664, column: 13, scope: !13289)
!13302 = !DILocation(line: 3664, column: 30, scope: !13289)
!13303 = !DILocation(line: 3664, column: 42, scope: !13289)
!13304 = !DILocation(line: 3664, column: 52, scope: !13289)
!13305 = !DILocation(line: 3664, column: 40, scope: !13289)
!13306 = !DILocation(line: 3664, column: 65, scope: !13289)
!13307 = !DILocation(line: 3664, column: 63, scope: !13289)
!13308 = !DILocation(line: 3663, column: 13, scope: !13309)
!13309 = !DILexicalBlockFile(scope: !13290, file: !939, discriminator: 1)
!13310 = !DILocation(line: 3665, column: 13, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13289, file: !939, line: 3664, column: 69)
!13312 = !DILocation(line: 3667, column: 5, scope: !13290)
!13313 = !DILocation(line: 3662, column: 40, scope: !13314)
!13314 = !DILexicalBlockFile(scope: !13284, file: !939, discriminator: 2)
!13315 = !DILocation(line: 3662, column: 5, scope: !13314)
!13316 = distinct !{!13316, !13317}
!13317 = !DILocation(line: 3662, column: 5, scope: !13240)
!13318 = !DILocation(line: 3668, column: 5, scope: !13240)
!13319 = !DILocation(line: 3669, column: 44, scope: !13240)
!13320 = !DILocation(line: 3669, column: 30, scope: !13240)
!13321 = !DILocation(line: 3669, column: 47, scope: !13240)
!13322 = !DILocation(line: 3669, column: 59, scope: !13240)
!13323 = !DILocation(line: 3669, column: 69, scope: !13240)
!13324 = !DILocation(line: 3669, column: 57, scope: !13240)
!13325 = !DILocation(line: 3669, column: 14, scope: !13240)
!13326 = !DILocation(line: 3669, column: 28, scope: !13240)
!13327 = !DILocation(line: 3670, column: 43, scope: !13240)
!13328 = !DILocation(line: 3670, column: 29, scope: !13240)
!13329 = !DILocation(line: 3670, column: 46, scope: !13240)
!13330 = !DILocation(line: 3670, column: 52, scope: !13240)
!13331 = !DILocation(line: 3670, column: 62, scope: !13240)
!13332 = !DILocation(line: 3670, column: 50, scope: !13240)
!13333 = !DILocation(line: 3670, column: 14, scope: !13240)
!13334 = !DILocation(line: 3670, column: 27, scope: !13240)
!13335 = !DILocation(line: 3671, column: 9, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13240, file: !939, line: 3671, column: 9)
!13337 = !DILocation(line: 3671, column: 14, scope: !13336)
!13338 = !DILocation(line: 3671, column: 31, scope: !13336)
!13339 = !DILocation(line: 3671, column: 11, scope: !13336)
!13340 = !DILocation(line: 3671, column: 9, scope: !13240)
!13341 = !DILocation(line: 3672, column: 46, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13336, file: !939, line: 3671, column: 36)
!13343 = !DILocation(line: 3672, column: 48, scope: !13342)
!13344 = !DILocation(line: 3672, column: 32, scope: !13342)
!13345 = !DILocation(line: 3672, column: 53, scope: !13342)
!13346 = !DILocation(line: 3672, column: 65, scope: !13342)
!13347 = !DILocation(line: 3672, column: 75, scope: !13342)
!13348 = !DILocation(line: 3672, column: 63, scope: !13342)
!13349 = !DILocation(line: 3672, column: 18, scope: !13342)
!13350 = !DILocation(line: 3672, column: 30, scope: !13342)
!13351 = !DILocation(line: 3673, column: 45, scope: !13342)
!13352 = !DILocation(line: 3673, column: 47, scope: !13342)
!13353 = !DILocation(line: 3673, column: 31, scope: !13342)
!13354 = !DILocation(line: 3673, column: 52, scope: !13342)
!13355 = !DILocation(line: 3673, column: 58, scope: !13342)
!13356 = !DILocation(line: 3673, column: 68, scope: !13342)
!13357 = !DILocation(line: 3673, column: 56, scope: !13342)
!13358 = !DILocation(line: 3673, column: 18, scope: !13342)
!13359 = !DILocation(line: 3673, column: 29, scope: !13342)
!13360 = !DILocation(line: 3674, column: 5, scope: !13342)
!13361 = !DILocation(line: 3675, column: 32, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13336, file: !939, line: 3674, column: 12)
!13363 = !DILocation(line: 3675, column: 42, scope: !13362)
!13364 = !DILocation(line: 3675, column: 53, scope: !13362)
!13365 = !DILocation(line: 3675, column: 63, scope: !13362)
!13366 = !DILocation(line: 3675, column: 51, scope: !13362)
!13367 = !DILocation(line: 3675, column: 18, scope: !13362)
!13368 = !DILocation(line: 3675, column: 30, scope: !13362)
!13369 = !DILocation(line: 3679, column: 31, scope: !13362)
!13370 = !DILocation(line: 3679, column: 44, scope: !13362)
!13371 = !DILocation(line: 3679, column: 54, scope: !13362)
!13372 = !DILocation(line: 3679, column: 42, scope: !13362)
!13373 = !DILocation(line: 3679, column: 18, scope: !13362)
!13374 = !DILocation(line: 3679, column: 29, scope: !13362)
!13375 = !DILocation(line: 3681, column: 12, scope: !13240)
!13376 = !DILocation(line: 3681, column: 5, scope: !13240)
!13377 = !DILocation(line: 3682, column: 1, scope: !13240)
!13378 = distinct !DISubprogram(name: "buffer_size_after_time_downloaded", scope: !939, file: !939, line: 3723, type: !13379, isLocal: true, isDefinition: true, scopeLine: 3727, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2478)
!13379 = !DISubroutineType(types: !13380)
!13380 = !{!1039, !1047, !1057, !1047, !1057, !1056, !1056, !2398, !1047}
!13381 = !DILocalVariable(name: "time_ns", arg: 1, scope: !13378, file: !939, line: 3723, type: !1047)
!13382 = !DILocation(line: 3723, column: 54, scope: !13378)
!13383 = !DILocalVariable(name: "search_sec", arg: 2, scope: !13378, file: !939, line: 3723, type: !1057)
!13384 = !DILocation(line: 3723, column: 70, scope: !13378)
!13385 = !DILocalVariable(name: "bps", arg: 3, scope: !13378, file: !939, line: 3723, type: !1047)
!13386 = !DILocation(line: 3723, column: 90, scope: !13378)
!13387 = !DILocalVariable(name: "min_buffer", arg: 4, scope: !13378, file: !939, line: 3724, type: !1057)
!13388 = !DILocation(line: 3724, column: 53, scope: !13378)
!13389 = !DILocalVariable(name: "buffer", arg: 5, scope: !13378, file: !939, line: 3724, type: !1056)
!13390 = !DILocation(line: 3724, column: 73, scope: !13378)
!13391 = !DILocalVariable(name: "sec_to_download", arg: 6, scope: !13378, file: !939, line: 3725, type: !1056)
!13392 = !DILocation(line: 3725, column: 54, scope: !13378)
!13393 = !DILocalVariable(name: "s", arg: 7, scope: !13378, file: !939, line: 3725, type: !2398)
!13394 = !DILocation(line: 3725, column: 88, scope: !13378)
!13395 = !DILocalVariable(name: "cues_start", arg: 8, scope: !13378, file: !939, line: 3726, type: !1047)
!13396 = !DILocation(line: 3726, column: 54, scope: !13378)
!13397 = !DILocalVariable(name: "nano_seconds_per_second", scope: !13378, file: !939, line: 3728, type: !1057)
!13398 = !DILocation(line: 3728, column: 12, scope: !13378)
!13399 = !DILocalVariable(name: "time_sec", scope: !13378, file: !939, line: 3729, type: !1057)
!13400 = !DILocation(line: 3729, column: 12, scope: !13378)
!13401 = !DILocation(line: 3729, column: 23, scope: !13378)
!13402 = !DILocation(line: 3729, column: 33, scope: !13378)
!13403 = !DILocation(line: 3729, column: 31, scope: !13378)
!13404 = !DILocalVariable(name: "rv", scope: !13378, file: !939, line: 3730, type: !1039)
!13405 = !DILocation(line: 3730, column: 9, scope: !13378)
!13406 = !DILocalVariable(name: "time_to_search_ns", scope: !13378, file: !939, line: 3731, type: !1047)
!13407 = !DILocation(line: 3731, column: 13, scope: !13378)
!13408 = !DILocation(line: 3731, column: 43, scope: !13378)
!13409 = !DILocation(line: 3731, column: 56, scope: !13378)
!13410 = !DILocation(line: 3731, column: 54, scope: !13378)
!13411 = !DILocation(line: 3731, column: 33, scope: !13378)
!13412 = !DILocalVariable(name: "end_time_ns", scope: !13378, file: !939, line: 3732, type: !1047)
!13413 = !DILocation(line: 3732, column: 13, scope: !13378)
!13414 = !DILocation(line: 3732, column: 27, scope: !13378)
!13415 = !DILocation(line: 3732, column: 37, scope: !13378)
!13416 = !DILocation(line: 3732, column: 35, scope: !13378)
!13417 = !DILocalVariable(name: "sec_downloaded", scope: !13378, file: !939, line: 3733, type: !1057)
!13418 = !DILocation(line: 3733, column: 12, scope: !13378)
!13419 = !DILocalVariable(name: "desc_curr", scope: !13378, file: !939, line: 3734, type: !12913)
!13420 = !DILocation(line: 3734, column: 13, scope: !13378)
!13421 = !DILocation(line: 3734, column: 38, scope: !13378)
!13422 = !DILocation(line: 3734, column: 41, scope: !13378)
!13423 = !DILocation(line: 3734, column: 50, scope: !13378)
!13424 = !DILocation(line: 3734, column: 25, scope: !13378)
!13425 = !DILocation(line: 3735, column: 19, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13378, file: !939, line: 3735, column: 9)
!13427 = !DILocation(line: 3735, column: 33, scope: !13426)
!13428 = !DILocation(line: 3735, column: 9, scope: !13378)
!13429 = !DILocation(line: 3736, column: 7, scope: !13426)
!13430 = !DILocation(line: 3737, column: 6, scope: !13378)
!13431 = !DILocation(line: 3737, column: 22, scope: !13378)
!13432 = !DILocation(line: 3740, column: 9, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13378, file: !939, line: 3740, column: 9)
!13434 = !DILocation(line: 3740, column: 29, scope: !13433)
!13435 = !DILocation(line: 3740, column: 17, scope: !13433)
!13436 = !DILocation(line: 3740, column: 9, scope: !13378)
!13437 = !DILocalVariable(name: "cue_nano", scope: !13438, file: !939, line: 3741, type: !1047)
!13438 = distinct !DILexicalBlock(scope: !13433, file: !939, line: 3740, column: 44)
!13439 = !DILocation(line: 3741, column: 15, scope: !13438)
!13440 = !DILocation(line: 3741, column: 36, scope: !13438)
!13441 = !DILocation(line: 3741, column: 50, scope: !13438)
!13442 = !DILocation(line: 3741, column: 48, scope: !13438)
!13443 = !DILocalVariable(name: "percent", scope: !13438, file: !939, line: 3742, type: !1057)
!13444 = !DILocation(line: 3742, column: 14, scope: !13438)
!13445 = !DILocation(line: 3742, column: 33, scope: !13438)
!13446 = !DILocation(line: 3742, column: 24, scope: !13438)
!13447 = !DILocation(line: 3742, column: 56, scope: !13438)
!13448 = !DILocation(line: 3742, column: 80, scope: !13438)
!13449 = !DILocation(line: 3742, column: 68, scope: !13438)
!13450 = !DILocation(line: 3742, column: 45, scope: !13438)
!13451 = !DILocation(line: 3742, column: 43, scope: !13438)
!13452 = !DILocalVariable(name: "cueBytes", scope: !13438, file: !939, line: 3743, type: !1057)
!13453 = !DILocation(line: 3743, column: 14, scope: !13438)
!13454 = !DILocation(line: 3743, column: 36, scope: !13438)
!13455 = !DILocation(line: 3743, column: 59, scope: !13438)
!13456 = !DILocation(line: 3743, column: 47, scope: !13438)
!13457 = !DILocation(line: 3743, column: 25, scope: !13438)
!13458 = !DILocation(line: 3743, column: 75, scope: !13438)
!13459 = !DILocation(line: 3743, column: 73, scope: !13438)
!13460 = !DILocalVariable(name: "timeToDownload", scope: !13438, file: !939, line: 3744, type: !1057)
!13461 = !DILocation(line: 3744, column: 14, scope: !13438)
!13462 = !DILocation(line: 3744, column: 32, scope: !13438)
!13463 = !DILocation(line: 3744, column: 41, scope: !13438)
!13464 = !DILocation(line: 3744, column: 50, scope: !13438)
!13465 = !DILocation(line: 3744, column: 48, scope: !13438)
!13466 = !DILocation(line: 3746, column: 26, scope: !13438)
!13467 = !DILocation(line: 3746, column: 37, scope: !13438)
!13468 = !DILocation(line: 3746, column: 35, scope: !13438)
!13469 = !DILocation(line: 3746, column: 64, scope: !13438)
!13470 = !DILocation(line: 3746, column: 62, scope: !13438)
!13471 = !DILocation(line: 3746, column: 22, scope: !13438)
!13472 = !DILocation(line: 3747, column: 27, scope: !13438)
!13473 = !DILocation(line: 3747, column: 8, scope: !13438)
!13474 = !DILocation(line: 3747, column: 24, scope: !13438)
!13475 = !DILocation(line: 3750, column: 21, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13438, file: !939, line: 3750, column: 11)
!13477 = !DILocation(line: 3750, column: 36, scope: !13476)
!13478 = !DILocation(line: 3750, column: 33, scope: !13476)
!13479 = !DILocation(line: 3750, column: 11, scope: !13438)
!13480 = !DILocalVariable(name: "desc_end_time_sec", scope: !13481, file: !939, line: 3751, type: !1057)
!13481 = distinct !DILexicalBlock(scope: !13476, file: !939, line: 3750, column: 49)
!13482 = !DILocation(line: 3751, column: 18, scope: !13481)
!13483 = !DILocation(line: 3751, column: 48, scope: !13481)
!13484 = !DILocation(line: 3751, column: 38, scope: !13481)
!13485 = !DILocation(line: 3751, column: 62, scope: !13481)
!13486 = !DILocation(line: 3751, column: 60, scope: !13481)
!13487 = !DILocalVariable(name: "percent_to_sub", scope: !13481, file: !939, line: 3752, type: !1057)
!13488 = !DILocation(line: 3752, column: 18, scope: !13481)
!13489 = !DILocation(line: 3752, column: 35, scope: !13481)
!13490 = !DILocation(line: 3752, column: 49, scope: !13481)
!13491 = !DILocation(line: 3752, column: 69, scope: !13481)
!13492 = !DILocation(line: 3752, column: 67, scope: !13481)
!13493 = !DILocation(line: 3752, column: 46, scope: !13481)
!13494 = !DILocation(line: 3753, column: 28, scope: !13481)
!13495 = !DILocation(line: 3753, column: 45, scope: !13481)
!13496 = !DILocation(line: 3753, column: 43, scope: !13481)
!13497 = !DILocation(line: 3753, column: 26, scope: !13481)
!13498 = !DILocation(line: 3754, column: 30, scope: !13481)
!13499 = !DILocation(line: 3754, column: 48, scope: !13481)
!13500 = !DILocation(line: 3754, column: 47, scope: !13481)
!13501 = !DILocation(line: 3754, column: 45, scope: !13481)
!13502 = !DILocation(line: 3754, column: 12, scope: !13481)
!13503 = !DILocation(line: 3754, column: 28, scope: !13481)
!13504 = !DILocation(line: 3755, column: 7, scope: !13481)
!13505 = !DILocation(line: 3757, column: 12, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13438, file: !939, line: 3757, column: 11)
!13507 = !DILocation(line: 3757, column: 30, scope: !13506)
!13508 = !DILocation(line: 3757, column: 29, scope: !13506)
!13509 = !DILocation(line: 3757, column: 27, scope: !13506)
!13510 = !DILocation(line: 3757, column: 41, scope: !13506)
!13511 = !DILocation(line: 3757, column: 38, scope: !13506)
!13512 = !DILocation(line: 3757, column: 11, scope: !13438)
!13513 = !DILocation(line: 3758, column: 11, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13506, file: !939, line: 3757, column: 53)
!13515 = !DILocation(line: 3762, column: 32, scope: !13438)
!13516 = !DILocation(line: 3762, column: 45, scope: !13438)
!13517 = !DILocation(line: 3762, column: 58, scope: !13438)
!13518 = !DILocation(line: 3762, column: 19, scope: !13438)
!13519 = !DILocation(line: 3762, column: 19, scope: !13520)
!13520 = !DILexicalBlockFile(scope: !13438, file: !939, discriminator: 1)
!13521 = !DILocation(line: 3763, column: 5, scope: !13438)
!13522 = !DILocation(line: 3765, column: 5, scope: !13378)
!13523 = !DILocation(line: 3765, column: 22, scope: !13524)
!13524 = !DILexicalBlockFile(scope: !13378, file: !939, discriminator: 1)
!13525 = !DILocation(line: 3765, column: 36, scope: !13524)
!13526 = !DILocation(line: 3765, column: 5, scope: !13524)
!13527 = !DILocalVariable(name: "desc_bytes", scope: !13528, file: !939, line: 3766, type: !1047)
!13528 = distinct !DILexicalBlock(scope: !13378, file: !939, line: 3765, column: 43)
!13529 = !DILocation(line: 3766, column: 17, scope: !13528)
!13530 = !DILocation(line: 3766, column: 40, scope: !13528)
!13531 = !DILocation(line: 3766, column: 63, scope: !13528)
!13532 = !DILocation(line: 3766, column: 51, scope: !13528)
!13533 = !DILocalVariable(name: "desc_ns", scope: !13528, file: !939, line: 3767, type: !1047)
!13534 = !DILocation(line: 3767, column: 17, scope: !13528)
!13535 = !DILocation(line: 3767, column: 37, scope: !13528)
!13536 = !DILocation(line: 3767, column: 61, scope: !13528)
!13537 = !DILocation(line: 3767, column: 49, scope: !13528)
!13538 = !DILocalVariable(name: "desc_sec", scope: !13528, file: !939, line: 3768, type: !1057)
!13539 = !DILocation(line: 3768, column: 16, scope: !13528)
!13540 = !DILocation(line: 3768, column: 27, scope: !13528)
!13541 = !DILocation(line: 3768, column: 37, scope: !13528)
!13542 = !DILocation(line: 3768, column: 35, scope: !13528)
!13543 = !DILocalVariable(name: "bits", scope: !13528, file: !939, line: 3769, type: !1057)
!13544 = !DILocation(line: 3769, column: 16, scope: !13528)
!13545 = !DILocation(line: 3769, column: 24, scope: !13528)
!13546 = !DILocation(line: 3769, column: 35, scope: !13528)
!13547 = !DILocalVariable(name: "time_to_download", scope: !13528, file: !939, line: 3770, type: !1057)
!13548 = !DILocation(line: 3770, column: 16, scope: !13528)
!13549 = !DILocation(line: 3770, column: 35, scope: !13528)
!13550 = !DILocation(line: 3770, column: 42, scope: !13528)
!13551 = !DILocation(line: 3770, column: 40, scope: !13528)
!13552 = !DILocation(line: 3772, column: 27, scope: !13528)
!13553 = !DILocation(line: 3772, column: 38, scope: !13528)
!13554 = !DILocation(line: 3772, column: 36, scope: !13528)
!13555 = !DILocation(line: 3772, column: 24, scope: !13528)
!13556 = !DILocation(line: 3773, column: 29, scope: !13528)
!13557 = !DILocation(line: 3773, column: 10, scope: !13528)
!13558 = !DILocation(line: 3773, column: 26, scope: !13528)
!13559 = !DILocation(line: 3775, column: 23, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13528, file: !939, line: 3775, column: 13)
!13561 = !DILocation(line: 3775, column: 38, scope: !13560)
!13562 = !DILocation(line: 3775, column: 35, scope: !13560)
!13563 = !DILocation(line: 3775, column: 13, scope: !13528)
!13564 = !DILocalVariable(name: "desc_end_time_sec", scope: !13565, file: !939, line: 3776, type: !1057)
!13565 = distinct !DILexicalBlock(scope: !13560, file: !939, line: 3775, column: 51)
!13566 = !DILocation(line: 3776, column: 20, scope: !13565)
!13567 = !DILocation(line: 3776, column: 50, scope: !13565)
!13568 = !DILocation(line: 3776, column: 40, scope: !13565)
!13569 = !DILocation(line: 3776, column: 64, scope: !13565)
!13570 = !DILocation(line: 3776, column: 62, scope: !13565)
!13571 = !DILocalVariable(name: "percent_to_sub", scope: !13565, file: !939, line: 3777, type: !1057)
!13572 = !DILocation(line: 3777, column: 20, scope: !13565)
!13573 = !DILocation(line: 3777, column: 37, scope: !13565)
!13574 = !DILocation(line: 3777, column: 51, scope: !13565)
!13575 = !DILocation(line: 3777, column: 71, scope: !13565)
!13576 = !DILocation(line: 3777, column: 69, scope: !13565)
!13577 = !DILocation(line: 3777, column: 48, scope: !13565)
!13578 = !DILocation(line: 3778, column: 30, scope: !13565)
!13579 = !DILocation(line: 3778, column: 47, scope: !13565)
!13580 = !DILocation(line: 3778, column: 45, scope: !13565)
!13581 = !DILocation(line: 3778, column: 28, scope: !13565)
!13582 = !DILocation(line: 3779, column: 32, scope: !13565)
!13583 = !DILocation(line: 3779, column: 50, scope: !13565)
!13584 = !DILocation(line: 3779, column: 49, scope: !13565)
!13585 = !DILocation(line: 3779, column: 47, scope: !13565)
!13586 = !DILocation(line: 3779, column: 14, scope: !13565)
!13587 = !DILocation(line: 3779, column: 30, scope: !13565)
!13588 = !DILocation(line: 3781, column: 18, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13565, file: !939, line: 3781, column: 17)
!13590 = !DILocation(line: 3781, column: 36, scope: !13589)
!13591 = !DILocation(line: 3781, column: 35, scope: !13589)
!13592 = !DILocation(line: 3781, column: 33, scope: !13589)
!13593 = !DILocation(line: 3781, column: 47, scope: !13589)
!13594 = !DILocation(line: 3781, column: 44, scope: !13589)
!13595 = !DILocation(line: 3781, column: 17, scope: !13565)
!13596 = !DILocation(line: 3782, column: 20, scope: !13589)
!13597 = !DILocation(line: 3782, column: 17, scope: !13589)
!13598 = !DILocation(line: 3783, column: 13, scope: !13565)
!13599 = !DILocation(line: 3786, column: 14, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13528, file: !939, line: 3786, column: 13)
!13601 = !DILocation(line: 3786, column: 32, scope: !13600)
!13602 = !DILocation(line: 3786, column: 31, scope: !13600)
!13603 = !DILocation(line: 3786, column: 29, scope: !13600)
!13604 = !DILocation(line: 3786, column: 43, scope: !13600)
!13605 = !DILocation(line: 3786, column: 40, scope: !13600)
!13606 = !DILocation(line: 3786, column: 13, scope: !13528)
!13607 = !DILocation(line: 3787, column: 16, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13600, file: !939, line: 3786, column: 55)
!13609 = !DILocation(line: 3788, column: 13, scope: !13608)
!13610 = !DILocation(line: 3791, column: 34, scope: !13528)
!13611 = !DILocation(line: 3791, column: 47, scope: !13528)
!13612 = !DILocation(line: 3791, column: 60, scope: !13528)
!13613 = !DILocation(line: 3791, column: 21, scope: !13528)
!13614 = !DILocation(line: 3791, column: 21, scope: !13615)
!13615 = !DILexicalBlockFile(scope: !13528, file: !939, discriminator: 1)
!13616 = !DILocation(line: 3765, column: 5, scope: !13617)
!13617 = !DILexicalBlockFile(scope: !13378, file: !939, discriminator: 2)
!13618 = distinct !{!13618, !13522}
!13619 = !DILocation(line: 3793, column: 16, scope: !13378)
!13620 = !DILocation(line: 3793, column: 15, scope: !13378)
!13621 = !DILocation(line: 3793, column: 25, scope: !13378)
!13622 = !DILocation(line: 3793, column: 23, scope: !13378)
!13623 = !DILocation(line: 3793, column: 6, scope: !13378)
!13624 = !DILocation(line: 3793, column: 13, scope: !13378)
!13625 = !DILocation(line: 3794, column: 12, scope: !13378)
!13626 = !DILocation(line: 3794, column: 5, scope: !13378)
!13627 = !DILocation(line: 3795, column: 1, scope: !13378)
