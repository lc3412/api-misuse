; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]fftools--ffprobe.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]fftools--ffprobe.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.OptionDef = type { i8*, i32, %union.anon, i8*, i8* }
%union.anon = type { i8* }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.AVHashContext = type opaque
%struct.section = type { i32, i8*, i32, [11 x i32], i8*, i8*, %struct.AVDictionary*, i32 }
%struct.AVDictionary = type opaque
%struct.Writer = type { %struct.AVClass*, i32, i8*, i32 (%struct.WriterContext*)*, void (%struct.WriterContext*)*, void (%struct.WriterContext*)*, void (%struct.WriterContext*)*, void (%struct.WriterContext*, i8*, i64)*, void (%struct.WriterContext*, %struct.AVRational*, i8*)*, void (%struct.WriterContext*, i8*, i8*)*, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon.0, double, double, i32, i8* }
%union.anon.0 = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.WriterContext = type { %struct.AVClass*, %struct.Writer*, i8*, i8*, %struct.section*, i32, i32, [10 x i32], [10 x %struct.section*], [10 x %struct.AVBPrint], i32, i32, i32, i32, i8*, i32 }
%struct.AVBPrint = type { i8*, i32, i32, i32, [1 x i8], [1000 x i8] }
%struct.AVRational = type { i32, i32 }
%struct.ReadInterval = type { i32, i64, i64, i32, i32, i32, i32, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type opaque
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32 }
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, {}*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, %struct.anon*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, %struct.AVPacketList*, %struct.AVProbeData, [17 x i64], %struct.AVIndexEntry*, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], i64, i8, i8, i32, %struct.AVRational, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVStreamInternal = type opaque
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type { %struct.AVDeviceInfo**, i32, i32 }
%struct.AVDeviceInfo = type { i8*, i8* }
%struct.AVDeviceCapabilitiesQuery = type { %struct.AVClass*, %struct.AVFormatContext*, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, %struct.AVRational }
%struct.LogBuffer = type { i8*, i32, i8*, i32, i8*, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.anon.2 = type { double, double, i8*, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%union.pthread_mutexattr_t = type { i32 }
%struct.AVDictionaryEntry = type { i8*, i8* }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.InputFile = type { %struct.AVFormatContext*, %struct.InputStream*, i32 }
%struct.InputStream = type { %struct.AVStream*, %struct.AVCodecContext* }
%struct.DefaultContext = type { %struct.AVClass*, i32, i32, [10 x i32] }
%struct.CompactContext = type { %struct.AVClass*, i8*, i8, i32, i32, i8*, i8* (%struct.AVBPrint*, i8*, i8, i8*)*, [10 x i32], [10 x i32], [10 x i32] }
%struct.FlatContext = type { %struct.AVClass*, i8*, i8, i32 }
%struct.INIContext = type { %struct.AVClass*, i32 }
%struct.JSONContext = type { %struct.AVClass*, i32, i32, i8*, i8* }
%struct.XMLContext = type { %struct.AVClass*, i32, i32, i32, i32 }
%struct.unit_value = type { %union.anon.1, i8* }
%union.anon.1 = type { double }
%struct.AVStereo3D = type { i32, i32, i32 }
%struct.AVSphericalMapping = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVMasteringDisplayMetadata = type { [3 x [2 x %struct.AVRational]], [2 x %struct.AVRational], %struct.AVRational, %struct.AVRational, i32, i32 }
%struct.AVContentLightMetadata = type { i32, i32 }
%union.unaligned_32 = type { i32 }
%union.unaligned_16 = type { i16 }

@program_name = constant [8 x i8] c"ffprobe\00", align 1
@program_birth_year = constant i32 2007, align 4
@options = internal global %struct.OptionDef* null, align 8
@.str = private unnamed_addr constant [14 x i8] c"Main options:\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@log_mutex = common global %union.pthread_mutex_t zeroinitializer, align 8
@do_show_log = internal global i32 0, align 4
@do_show_chapters = internal global i32 0, align 4
@do_show_error = internal global i32 0, align 4
@do_show_format = internal global i32 0, align 4
@do_show_frames = internal global i32 0, align 4
@do_show_library_versions = internal global i32 0, align 4
@do_show_packets = internal global i32 0, align 4
@do_show_pixel_formats = internal global i32 0, align 4
@do_show_pixel_format_flags = internal global i32 0, align 4
@do_show_pixel_format_components = internal global i32 0, align 4
@do_show_program_version = internal global i32 0, align 4
@do_show_programs = internal global i32 0, align 4
@do_show_streams = internal global i32 0, align 4
@do_show_stream_disposition = internal global i32 0, align 4
@do_show_chapter_tags = internal global i32 0, align 4
@do_show_format_tags = internal global i32 0, align 4
@do_show_frame_tags = internal global i32 0, align 4
@do_show_program_tags = internal global i32 0, align 4
@do_show_stream_tags = internal global i32 0, align 4
@do_show_packet_tags = internal global i32 0, align 4
@do_bitexact = internal global i32 0, align 4
@.str.2 = private unnamed_addr constant [88 x i8] c"-bitexact and -show_program_version or -show_library_versions options are incompatible\0A\00", align 1
@print_format = internal global i8* null, align 8
@.str.3 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"No name specified for the output format\0A\00", align 1
@show_data_hash = internal global i8* null, align 8
@hash = internal global %struct.AVHashContext* null, align 8
@.str.6 = private unnamed_addr constant [46 x i8] c"Unknown hash algorithm '%s'\0AKnown algorithms:\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"Unknown output format with name '%s'\0A\00", align 1
@sections = internal global [42 x %struct.section] [%struct.section { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.279, i32 0, i32 0), i32 0, [11 x i32] [i32 1, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.280, i32 0, i32 0), i32 4, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.282, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.283, i32 0, i32 0), i32 2, [11 x i32] [i32 0, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.284, i32 0, i32 0), i32 0, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), i32 0, [11 x i32] [i32 5, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.280, i32 0, i32 0), i32 4, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.285, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.286, i32 0, i32 0), i32 0, [11 x i32] [i32 8, i32 9, i32 12, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.287, i32 0, i32 0), i32 2, [11 x i32] [i32 6, i32 41, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.280, i32 0, i32 0), i32 4, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.288, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.289, i32 0, i32 0), i32 2, [11 x i32] [i32 10, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.291, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.290, i32 0, i32 0), i32 0, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.292, i32 0, i32 0), i32 0, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.293, i32 0, i32 0), i32 2, [11 x i32] [i32 11, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.294, i32 0, i32 0), i32 0, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.295, i32 0, i32 0), i32 2, [11 x i32] [i32 13, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.296, i32 0, i32 0), i32 0, [11 x i32] [i32 16, i32 19, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.280, i32 0, i32 0), i32 4, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.297, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.298, i32 0, i32 0), i32 2, [11 x i32] [i32 15, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.299, i32 0, i32 0), i32 2, [11 x i32] [i32 15, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.289, i32 0, i32 0), i32 2, [11 x i32] [i32 20, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.300, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.290, i32 0, i32 0), i32 0, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 21, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.301, i32 0, i32 0), i32 0, [11 x i32] [i32 22, i32 24, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 0, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.302, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.303, i32 0, i32 0), i32 0, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.304, i32 0, i32 0), i32 2, [11 x i32] [i32 23, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.305, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 25, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.306, i32 0, i32 0), i32 2, [11 x i32] [i32 21, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 26, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.307, i32 0, i32 0), i32 0, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.308, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.280, i32 0, i32 0), i32 4, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.309, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.310, i32 0, i32 0), i32 0, [11 x i32] [i32 31, i32 29, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.311, i32 0, i32 0), i32 2, [11 x i32] [i32 30, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.312, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.313, i32 0, i32 0), i32 0, [11 x i32] [i32 26, i32 27, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.314, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.280, i32 0, i32 0), i32 4, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.315, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.316, i32 0, i32 0), i32 0, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.317, i32 0, i32 0), i32 2, [11 x i32] [i32 28, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.318, i32 0, i32 0), i32 1, [11 x i32] [i32 2, i32 4, i32 7, i32 33, i32 37, i32 17, i32 3, i32 32, i32 14, i32 25, i32 -1], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 35, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.313, i32 0, i32 0), i32 0, [11 x i32] [i32 36, i32 38, i32 39, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 36, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.307, i32 0, i32 0), i32 0, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.319, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.311, i32 0, i32 0), i32 2, [11 x i32] [i32 35, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.280, i32 0, i32 0), i32 4, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.320, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 39, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.289, i32 0, i32 0), i32 2, [11 x i32] [i32 40, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.321, i32 0, i32 0), %struct.AVDictionary* null, i32 0 }, %struct.section { i32 40, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.290, i32 0, i32 0), i32 0, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }, %struct.section { i32 41, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.322, i32 0, i32 0), i32 0, [11 x i32] [i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], i8* null, i8* null, %struct.AVDictionary* null, i32 0 }], align 16
@xml_writer = internal global %struct.Writer { %struct.AVClass* @xml_class, i32 24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.323, i32 0, i32 0), i32 (%struct.WriterContext*)* @xml_init, void (%struct.WriterContext*)* null, void (%struct.WriterContext*)* @xml_print_section_header, void (%struct.WriterContext*)* @xml_print_section_footer, void (%struct.WriterContext*, i8*, i64)* @xml_print_int, void (%struct.WriterContext*, %struct.AVRational*, i8*)* null, void (%struct.WriterContext*, i8*, i8*)* @xml_print_str, i32 2 }, align 8
@input_filename = internal global i8* null, align 8
@.str.9 = private unnamed_addr constant [37 x i8] c"You have to specify one input file.\0A\00", align 1
@.str.10 = private unnamed_addr constant [56 x i8] c"Use -h to get full help or, even better, run 'man %s'.\0A\00", align 1
@read_intervals = internal global %struct.ReadInterval* null, align 8
@.str.11 = private unnamed_addr constant [36 x i8] c"Simple multimedia streams analyzer\0A\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"usage: %s [OPTIONS] [INPUT_FILE]\0A\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"show license\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"show help\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"topic\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"-help\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"show version\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"buildconf\00", align 1
@.str.24 = private unnamed_addr constant [25 x i8] c"show build configuration\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"formats\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"show available formats\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"muxers\00", align 1
@.str.28 = private unnamed_addr constant [22 x i8] c"show available muxers\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"demuxers\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"show available demuxers\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"devices\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"show available devices\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"codecs\00", align 1
@.str.34 = private unnamed_addr constant [22 x i8] c"show available codecs\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"decoders\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"show available decoders\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"encoders\00", align 1
@.str.38 = private unnamed_addr constant [24 x i8] c"show available encoders\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"bsfs\00", align 1
@.str.40 = private unnamed_addr constant [34 x i8] c"show available bit stream filters\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"protocols\00", align 1
@.str.42 = private unnamed_addr constant [25 x i8] c"show available protocols\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"filters\00", align 1
@.str.44 = private unnamed_addr constant [23 x i8] c"show available filters\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"pix_fmts\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"show available pixel formats\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"layouts\00", align 1
@.str.48 = private unnamed_addr constant [30 x i8] c"show standard channel layouts\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"sample_fmts\00", align 1
@.str.50 = private unnamed_addr constant [36 x i8] c"show available audio sample formats\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"colors\00", align 1
@.str.52 = private unnamed_addr constant [27 x i8] c"show available color names\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"loglevel\00", align 1
@.str.54 = private unnamed_addr constant [18 x i8] c"set logging level\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"report\00", align 1
@.str.57 = private unnamed_addr constant [18 x i8] c"generate a report\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"max_alloc\00", align 1
@.str.59 = private unnamed_addr constant [45 x i8] c"set maximum size of a single allocated block\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"cpuflags\00", align 1
@.str.62 = private unnamed_addr constant [25 x i8] c"force specific cpu flags\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"hide_banner\00", align 1
@hide_banner = external global i32, align 4
@.str.65 = private unnamed_addr constant [27 x i8] c"do not show program banner\00", align 1
@.str.66 = private unnamed_addr constant [8 x i8] c"sources\00", align 1
@.str.67 = private unnamed_addr constant [33 x i8] c"list sources of the input device\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"device\00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"sinks\00", align 1
@.str.70 = private unnamed_addr constant [32 x i8] c"list sinks of the output device\00", align 1
@.str.71 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.72 = private unnamed_addr constant [13 x i8] c"force format\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"unit\00", align 1
@show_value_unit = internal global i32 0, align 4
@.str.75 = private unnamed_addr constant [34 x i8] c"show unit of the displayed values\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"prefix\00", align 1
@use_value_prefix = internal global i32 0, align 4
@.str.77 = private unnamed_addr constant [41 x i8] c"use SI prefixes for the displayed values\00", align 1
@.str.78 = private unnamed_addr constant [19 x i8] c"byte_binary_prefix\00", align 1
@use_byte_value_binary_prefix = internal global i32 0, align 4
@.str.79 = private unnamed_addr constant [35 x i8] c"use binary prefixes for byte units\00", align 1
@.str.80 = private unnamed_addr constant [12 x i8] c"sexagesimal\00", align 1
@use_value_sexagesimal_format = internal global i32 0, align 4
@.str.81 = private unnamed_addr constant [63 x i8] c"use sexagesimal format HOURS:MM:SS.MICROSECONDS for time units\00", align 1
@.str.82 = private unnamed_addr constant [7 x i8] c"pretty\00", align 1
@.str.83 = private unnamed_addr constant [69 x i8] c"prettify the format of displayed values, make it more human readable\00", align 1
@.str.84 = private unnamed_addr constant [13 x i8] c"print_format\00", align 1
@.str.85 = private unnamed_addr constant [100 x i8] c"set the output printing format (available formats are: default, compact, csv, flat, ini, json, xml)\00", align 1
@.str.86 = private unnamed_addr constant [3 x i8] c"of\00", align 1
@.str.87 = private unnamed_addr constant [24 x i8] c"alias for -print_format\00", align 1
@.str.88 = private unnamed_addr constant [15 x i8] c"select_streams\00", align 1
@stream_specifier = internal global i8* null, align 8
@.str.89 = private unnamed_addr constant [29 x i8] c"select the specified streams\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"stream_specifier\00", align 1
@.str.91 = private unnamed_addr constant [9 x i8] c"sections\00", align 1
@.str.92 = private unnamed_addr constant [59 x i8] c"print sections structure and section information, and exit\00", align 1
@.str.93 = private unnamed_addr constant [10 x i8] c"show_data\00", align 1
@do_show_data = internal global i32 0, align 4
@.str.94 = private unnamed_addr constant [18 x i8] c"show packets data\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"show_data_hash\00", align 1
@.str.96 = private unnamed_addr constant [23 x i8] c"show packets data hash\00", align 1
@.str.97 = private unnamed_addr constant [11 x i8] c"show_error\00", align 1
@.str.98 = private unnamed_addr constant [19 x i8] c"show probing error\00", align 1
@.str.99 = private unnamed_addr constant [12 x i8] c"show_format\00", align 1
@.str.100 = private unnamed_addr constant [27 x i8] c"show format/container info\00", align 1
@.str.101 = private unnamed_addr constant [12 x i8] c"show_frames\00", align 1
@.str.102 = private unnamed_addr constant [17 x i8] c"show frames info\00", align 1
@.str.103 = private unnamed_addr constant [18 x i8] c"show_format_entry\00", align 1
@.str.104 = private unnamed_addr constant [55 x i8] c"show a particular entry from the format/container info\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"entry\00", align 1
@.str.106 = private unnamed_addr constant [13 x i8] c"show_entries\00", align 1
@.str.107 = private unnamed_addr constant [32 x i8] c"show a set of specified entries\00", align 1
@.str.108 = private unnamed_addr constant [11 x i8] c"entry_list\00", align 1
@.str.109 = private unnamed_addr constant [9 x i8] c"show_log\00", align 1
@.str.110 = private unnamed_addr constant [9 x i8] c"show log\00", align 1
@.str.111 = private unnamed_addr constant [13 x i8] c"show_packets\00", align 1
@.str.112 = private unnamed_addr constant [18 x i8] c"show packets info\00", align 1
@.str.113 = private unnamed_addr constant [14 x i8] c"show_programs\00", align 1
@.str.114 = private unnamed_addr constant [19 x i8] c"show programs info\00", align 1
@.str.115 = private unnamed_addr constant [13 x i8] c"show_streams\00", align 1
@.str.116 = private unnamed_addr constant [18 x i8] c"show streams info\00", align 1
@.str.117 = private unnamed_addr constant [14 x i8] c"show_chapters\00", align 1
@.str.118 = private unnamed_addr constant [19 x i8] c"show chapters info\00", align 1
@.str.119 = private unnamed_addr constant [13 x i8] c"count_frames\00", align 1
@do_count_frames = internal global i32 0, align 4
@.str.120 = private unnamed_addr constant [38 x i8] c"count the number of frames per stream\00", align 1
@.str.121 = private unnamed_addr constant [14 x i8] c"count_packets\00", align 1
@do_count_packets = internal global i32 0, align 4
@.str.122 = private unnamed_addr constant [39 x i8] c"count the number of packets per stream\00", align 1
@.str.123 = private unnamed_addr constant [21 x i8] c"show_program_version\00", align 1
@.str.124 = private unnamed_addr constant [21 x i8] c"show ffprobe version\00", align 1
@.str.125 = private unnamed_addr constant [22 x i8] c"show_library_versions\00", align 1
@.str.126 = private unnamed_addr constant [22 x i8] c"show library versions\00", align 1
@.str.127 = private unnamed_addr constant [14 x i8] c"show_versions\00", align 1
@.str.128 = private unnamed_addr constant [34 x i8] c"show program and library versions\00", align 1
@.str.129 = private unnamed_addr constant [19 x i8] c"show_pixel_formats\00", align 1
@.str.130 = private unnamed_addr constant [31 x i8] c"show pixel format descriptions\00", align 1
@.str.131 = private unnamed_addr constant [18 x i8] c"show_private_data\00", align 1
@show_private_data = internal global i32 1, align 4
@.str.132 = private unnamed_addr constant [18 x i8] c"show private data\00", align 1
@.str.133 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.134 = private unnamed_addr constant [26 x i8] c"same as show_private_data\00", align 1
@.str.135 = private unnamed_addr constant [9 x i8] c"bitexact\00", align 1
@.str.136 = private unnamed_addr constant [22 x i8] c"force bitexact output\00", align 1
@.str.137 = private unnamed_addr constant [15 x i8] c"read_intervals\00", align 1
@.str.138 = private unnamed_addr constant [19 x i8] c"set read intervals\00", align 1
@.str.139 = private unnamed_addr constant [25 x i8] c"generic catch all option\00", align 1
@.str.140 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.141 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.142 = private unnamed_addr constant [20 x i8] c"read specified file\00", align 1
@.str.143 = private unnamed_addr constant [11 x i8] c"input_file\00", align 1
@.str.144 = private unnamed_addr constant [17 x i8] c"find_stream_info\00", align 1
@find_stream_info = internal global i32 1, align 4
@.str.145 = private unnamed_addr constant [72 x i8] c"read and decode the streams to fill missing information with heuristics\00", align 1
@real_options = internal constant <{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef }> <{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_license }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_help }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_help }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_help }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_help }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_version }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_buildconf }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_formats }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_muxers }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_demuxers }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_devices }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_codecs }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.34, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_decoders }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_encoders }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_bsfs }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.40, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_protocols }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.42, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_filters }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.44, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_pix_fmts }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_layouts }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.48, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_sample_fmts }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.50, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_colors }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0), i32 1, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_loglevel }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i32 0, i32 0), i32 1, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_loglevel }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), i32 0, %union.anon { i8* bitcast (i32 (i8*)* @opt_report to i8*) }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.58, i32 0, i32 0), i32 1, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_max_alloc }, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i32 0, i32 0), i32 5, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_cpuflags }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i32 0, i32 0), i32 6, %union.anon { i8* bitcast (i32* @hide_banner to i8*) }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i32 0, i32 0), i32 2049, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_sources }, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i32 0, i32 0), i32 2049, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_sinks }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i32 0, i32 0), i32 1, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_format }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0), i32 2, %union.anon { i8* bitcast (i32* @show_value_unit to i8*) }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.75, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i32 0, i32 0), i32 2, %union.anon { i8* bitcast (i32* @use_value_prefix to i8*) }, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.77, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i32 0, i32 0), i32 2, %union.anon { i8* bitcast (i32* @use_byte_value_binary_prefix to i8*) }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.79, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.80, i32 0, i32 0), i32 2, %union.anon { i8* bitcast (i32* @use_value_sexagesimal_format to i8*) }, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.81, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i32 0, i32 0), i32 0, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_pretty }, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.83, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.84, i32 0, i32 0), i32 9, %union.anon { i8* bitcast (i8** @print_format to i8*) }, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i32 0, i32 0), i32 9, %union.anon { i8* bitcast (i8** @print_format to i8*) }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.88, i32 0, i32 0), i32 9, %union.anon { i8* bitcast (i8** @stream_specifier to i8*) }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_sections }, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.92, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.93, i32 0, i32 0), i32 2, %union.anon { i8* bitcast (i32* @do_show_data to i8*) }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.94, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i32 0, i32 0), i32 9, %union.anon { i8* bitcast (i8** @show_data_hash to i8*) }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.96, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.97, i32 0, i32 0), i32 0, %union.anon { i8* bitcast (i32 (i8*, i8*)* @opt_show_error to i8*) }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.98, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.99, i32 0, i32 0), i32 0, %union.anon { i8* bitcast (i32 (i8*, i8*)* @opt_show_format to i8*) }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.100, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.101, i32 0, i32 0), i32 0, %union.anon { i8* bitcast (i32 (i8*, i8*)* @opt_show_frames to i8*) }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.102, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.103, i32 0, i32 0), i32 1, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_show_format_entry }, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.106, i32 0, i32 0), i32 1, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_show_entries }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.108, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i32 0, i32 0), i32 129, %union.anon { i8* bitcast (i32* @do_show_log to i8*) }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.110, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.111, i32 0, i32 0), i32 0, %union.anon { i8* bitcast (i32 (i8*, i8*)* @opt_show_packets to i8*) }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.112, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.113, i32 0, i32 0), i32 0, %union.anon { i8* bitcast (i32 (i8*, i8*)* @opt_show_programs to i8*) }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.114, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.115, i32 0, i32 0), i32 0, %union.anon { i8* bitcast (i32 (i8*, i8*)* @opt_show_streams to i8*) }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.116, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.117, i32 0, i32 0), i32 0, %union.anon { i8* bitcast (i32 (i8*, i8*)* @opt_show_chapters to i8*) }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.118, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.119, i32 0, i32 0), i32 2, %union.anon { i8* bitcast (i32* @do_count_frames to i8*) }, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.120, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0), i32 2, %union.anon { i8* bitcast (i32* @do_count_packets to i8*) }, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.122, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.123, i32 0, i32 0), i32 0, %union.anon { i8* bitcast (i32 (i8*, i8*)* @opt_show_program_version to i8*) }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.124, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.125, i32 0, i32 0), i32 0, %union.anon { i8* bitcast (i32 (i8*, i8*)* @opt_show_library_versions to i8*) }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.126, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.127, i32 0, i32 0), i32 0, %union.anon { i8* bitcast (i32 (i8*, i8*)* @opt_show_versions to i8*) }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.128, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.129, i32 0, i32 0), i32 0, %union.anon { i8* bitcast (i32 (i8*, i8*)* @opt_show_pixel_formats to i8*) }, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.130, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.131, i32 0, i32 0), i32 2, %union.anon { i8* bitcast (i32* @show_private_data to i8*) }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.132, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), i32 2, %union.anon { i8* bitcast (i32* @show_private_data to i8*) }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.134, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.135, i32 0, i32 0), i32 2, %union.anon { i8* bitcast (i32* @do_bitexact to i8*) }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.136, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.137, i32 0, i32 0), i32 1, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_read_intervals }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.137, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i32 53, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_default }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.141, i32 0, i32 0), i32 1, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_input_file_i }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.143, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.144, i32 0, i32 0), i32 262150, %union.anon { i8* bitcast (i32* @find_stream_info to i8*) }, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.145, i32 0, i32 0), i8* null }, %struct.OptionDef zeroinitializer }>, align 16
@iformat = internal global %struct.AVInputFormat* null, align 8
@.str.147 = private unnamed_addr constant [26 x i8] c"Unknown input format: %s\0A\00", align 1
@.str.148 = private unnamed_addr constant [243 x i8] c"Sections:\0AW.. = Section is a wrapper (contains other sections, no local entries)\0A.A. = Section contains an array of elements of the same type\0A..V = Section may contain a variable number of fields with variable keys\0AFLAGS NAME/UNIQUE_NAME\0A---\0A\00", align 1
@.str.149 = private unnamed_addr constant [7 x i8] c"%c%c%c\00", align 1
@.str.150 = private unnamed_addr constant [8 x i8] c"%*c  %s\00", align 1
@.str.151 = private unnamed_addr constant [4 x i8] c"/%s\00", align 1
@.str.152 = private unnamed_addr constant [10 x i8] c"format=%s\00", align 1
@.str.153 = private unnamed_addr constant [66 x i8] c"Option '%s' is deprecated, use '-show_entries format=%s' instead\0A\00", align 1
@.str.154 = private unnamed_addr constant [3 x i8] c"=:\00", align 1
@.str.155 = private unnamed_addr constant [38 x i8] c"Missing section name for option '%s'\0A\00", align 1
@.str.156 = private unnamed_addr constant [3 x i8] c",:\00", align 1
@.str.157 = private unnamed_addr constant [52 x i8] c"Adding '%s' to the entries to show in section '%s'\0A\00", align 1
@.str.158 = private unnamed_addr constant [27 x i8] c"No match for section '%s'\0A\00", align 1
@.str.159 = private unnamed_addr constant [44 x i8] c"'%s' matches section with unique name '%s'\0A\00", align 1
@read_intervals_nb = internal global i32 0, align 4
@.str.160 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.161 = private unnamed_addr constant [22 x i8] c"i < read_intervals_nb\00", align 1
@.str.162 = private unnamed_addr constant [18 x i8] c"fftools/ffprobe.c\00", align 1
@.str.163 = private unnamed_addr constant [38 x i8] c"Error parsing read interval #%d '%s'\0A\00", align 1
@.str.164 = private unnamed_addr constant [21 x i8] c"Parsed log interval \00", align 1
@.str.165 = private unnamed_addr constant [23 x i8] c"i == read_intervals_nb\00", align 1
@.str.166 = private unnamed_addr constant [38 x i8] c"Invalid empty interval specification\0A\00", align 1
@.str.167 = private unnamed_addr constant [43 x i8] c"Invalid interval start specification '%s'\0A\00", align 1
@.str.168 = private unnamed_addr constant [62 x i8] c"Invalid or negative value '%s' for duration number of frames\0A\00", align 1
@.str.169 = private unnamed_addr constant [50 x i8] c"Invalid interval end/duration specification '%s'\0A\00", align 1
@.str.170 = private unnamed_addr constant [6 x i8] c"id:%d\00", align 1
@.str.171 = private unnamed_addr constant [12 x i8] c" start:%s%s\00", align 1
@.str.172 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.173 = private unnamed_addr constant [11 x i8] c" start:N/A\00", align 1
@.str.174 = private unnamed_addr constant [8 x i8] c" end:%s\00", align 1
@.str.175 = private unnamed_addr constant [5 x i8] c"#%ld\00", align 1
@.str.176 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.177 = private unnamed_addr constant [9 x i8] c" end:N/A\00", align 1
@.str.178 = private unnamed_addr constant [6 x i8] c"NOPTS\00", align 1
@.str.179 = private unnamed_addr constant [5 x i8] c"%.6g\00", align 1
@.str.180 = private unnamed_addr constant [75 x i8] c"Argument '%s' provided as input filename, but '%s' was already specified.\0A\00", align 1
@.str.181 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.182 = private unnamed_addr constant [6 x i8] c"pipe:\00", align 1
@log_callback.print_prefix = internal global i32 1, align 4
@log_buffer = internal global %struct.LogBuffer* null, align 8
@log_buffer_size = internal global i32 0, align 4
@writer_register_all.initialized = internal global i32 0, align 4
@default_writer = internal constant %struct.Writer { %struct.AVClass* @default_class, i32 56, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i32 (%struct.WriterContext*)* null, void (%struct.WriterContext*)* null, void (%struct.WriterContext*)* @default_print_section_header, void (%struct.WriterContext*)* @default_print_section_footer, void (%struct.WriterContext*, i8*, i64)* @default_print_int, void (%struct.WriterContext*, %struct.AVRational*, i8*)* null, void (%struct.WriterContext*, i8*, i8*)* @default_print_str, i32 1 }, align 8
@compact_writer = internal constant %struct.Writer { %struct.AVClass* @compact_class, i32 168, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.195, i32 0, i32 0), i32 (%struct.WriterContext*)* @compact_init, void (%struct.WriterContext*)* null, void (%struct.WriterContext*)* @compact_print_section_header, void (%struct.WriterContext*)* @compact_print_section_footer, void (%struct.WriterContext*, i8*, i64)* @compact_print_int, void (%struct.WriterContext*, %struct.AVRational*, i8*)* null, void (%struct.WriterContext*, i8*, i8*)* @compact_print_str, i32 1 }, align 8
@csv_writer = internal constant %struct.Writer { %struct.AVClass* @csv_class, i32 168, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.210, i32 0, i32 0), i32 (%struct.WriterContext*)* @compact_init, void (%struct.WriterContext*)* null, void (%struct.WriterContext*)* @compact_print_section_header, void (%struct.WriterContext*)* @compact_print_section_footer, void (%struct.WriterContext*, i8*, i64)* @compact_print_int, void (%struct.WriterContext*, %struct.AVRational*, i8*)* null, void (%struct.WriterContext*, i8*, i8*)* @compact_print_str, i32 1 }, align 8
@flat_writer = internal constant %struct.Writer { %struct.AVClass* @flat_class, i32 24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.222, i32 0, i32 0), i32 (%struct.WriterContext*)* @flat_init, void (%struct.WriterContext*)* null, void (%struct.WriterContext*)* @flat_print_section_header, void (%struct.WriterContext*)* null, void (%struct.WriterContext*, i8*, i64)* @flat_print_int, void (%struct.WriterContext*, %struct.AVRational*, i8*)* null, void (%struct.WriterContext*, i8*, i8*)* @flat_print_str, i32 3 }, align 8
@ini_writer = internal constant %struct.Writer { %struct.AVClass* @ini_class, i32 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.237, i32 0, i32 0), i32 (%struct.WriterContext*)* null, void (%struct.WriterContext*)* null, void (%struct.WriterContext*)* @ini_print_section_header, void (%struct.WriterContext*)* null, void (%struct.WriterContext*, i8*, i64)* @ini_print_int, void (%struct.WriterContext*, %struct.AVRational*, i8*)* null, void (%struct.WriterContext*, i8*, i8*)* @ini_print_str, i32 3 }, align 8
@json_writer = internal constant %struct.Writer { %struct.AVClass* @json_class, i32 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.243, i32 0, i32 0), i32 (%struct.WriterContext*)* @json_init, void (%struct.WriterContext*)* null, void (%struct.WriterContext*)* @json_print_section_header, void (%struct.WriterContext*)* @json_print_section_footer, void (%struct.WriterContext*, i8*, i64)* @json_print_int, void (%struct.WriterContext*, %struct.AVRational*, i8*)* null, void (%struct.WriterContext*, i8*, i8*)* @json_print_str, i32 2 }, align 8
@writer_register.next_registered_writer_idx = internal global i32 0, align 4
@registered_writers = internal global [65 x %struct.Writer*] zeroinitializer, align 16
@default_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8* (i8*)* @default_get_name, %struct.AVOption* getelementptr inbounds ([5 x %struct.AVOption], [5 x %struct.AVOption]* @default_options, i32 0, i32 0), i32 0, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@default_options = internal constant [5 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.184, i32 0, i32 0), i32 12, i32 18, %union.anon.0 zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.184, i32 0, i32 0), i32 12, i32 18, %union.anon.0 zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.187, i32 0, i32 0), i32 8, i32 18, %union.anon.0 zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.187, i32 0, i32 0), i32 8, i32 18, %union.anon.0 zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.183 = private unnamed_addr constant [17 x i8] c"noprint_wrappers\00", align 1
@.str.184 = private unnamed_addr constant [33 x i8] c"do not print headers and footers\00", align 1
@.str.185 = private unnamed_addr constant [3 x i8] c"nw\00", align 1
@.str.186 = private unnamed_addr constant [6 x i8] c"nokey\00", align 1
@.str.187 = private unnamed_addr constant [22 x i8] c"force no key printing\00", align 1
@.str.188 = private unnamed_addr constant [3 x i8] c"nk\00", align 1
@.str.189 = private unnamed_addr constant [6 x i8] c"%s%s:\00", align 1
@.str.190 = private unnamed_addr constant [6 x i8] c"[%s]\0A\00", align 1
@.str.191 = private unnamed_addr constant [7 x i8] c"[/%s]\0A\00", align 1
@.str.192 = private unnamed_addr constant [6 x i8] c"%s%s=\00", align 1
@.str.193 = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@.str.194 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@compact_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.195, i32 0, i32 0), i8* (i8*)* @compact_get_name, %struct.AVOption* getelementptr inbounds ([9 x %struct.AVOption], [9 x %struct.AVOption]* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @compact_options to [9 x %struct.AVOption]*), i32 0, i32 0), i32 0, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@.str.195 = private unnamed_addr constant [8 x i8] c"compact\00", align 1
@.str.196 = private unnamed_addr constant [9 x i8] c"item_sep\00", align 1
@.str.197 = private unnamed_addr constant [19 x i8] c"set item separator\00", align 1
@.str.198 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.199 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.200 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.201 = private unnamed_addr constant [16 x i8] c"set escape mode\00", align 1
@.str.202 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.203 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str.204 = private unnamed_addr constant [14 x i8] c"print_section\00", align 1
@.str.205 = private unnamed_addr constant [19 x i8] c"print section name\00", align 1
@.str.206 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@compact_options = internal constant <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.197, i32 0, i32 0), i32 8, i32 5, { i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 0, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.197, i32 0, i32 0), i32 8, i32 5, { i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.198, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.187, i32 0, i32 0), i32 20, i32 18, %union.anon.0 zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.187, i32 0, i32 0), i32 20, i32 18, %union.anon.0 zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.201, i32 0, i32 0), i32 32, i32 5, { i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.202, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 0, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.201, i32 0, i32 0), i32 32, i32 5, { i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.202, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.205, i32 0, i32 0), i32 24, i32 18, %union.anon.0 { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.205, i32 0, i32 0), i32 24, i32 18, %union.anon.0 { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@.str.208 = private unnamed_addr constant [68 x i8] c"Item separator '%s' specified, but must contain a single character\0A\00", align 1
@.str.209 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.210 = private unnamed_addr constant [4 x i8] c"csv\00", align 1
@.str.211 = private unnamed_addr constant [26 x i8] c"Unknown escape mode '%s'\0A\00", align 1
@.str.212 = private unnamed_addr constant [3 x i8] c"\5Cb\00", align 1
@.str.213 = private unnamed_addr constant [3 x i8] c"\5Cf\00", align 1
@.str.214 = private unnamed_addr constant [3 x i8] c"\5Cn\00", align 1
@.str.215 = private unnamed_addr constant [3 x i8] c"\5Cr\00", align 1
@.str.216 = private unnamed_addr constant [3 x i8] c"\5C\5C\00", align 1
@.str.217 = private unnamed_addr constant [5 x i8] c"%s%c\00", align 1
@.str.218 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.219 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@csv_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.210, i32 0, i32 0), i8* (i8*)* @csv_get_name, %struct.AVOption* getelementptr inbounds ([9 x %struct.AVOption], [9 x %struct.AVOption]* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @csv_options to [9 x %struct.AVOption]*), i32 0, i32 0), i32 0, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@.str.220 = private unnamed_addr constant [2 x i8] c",\00", align 1
@csv_options = internal constant <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.197, i32 0, i32 0), i32 8, i32 5, { i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.220, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 0, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.197, i32 0, i32 0), i32 8, i32 5, { i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.220, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.187, i32 0, i32 0), i32 20, i32 18, %union.anon.0 { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.187, i32 0, i32 0), i32 20, i32 18, %union.anon.0 { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.201, i32 0, i32 0), i32 32, i32 5, { i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.210, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 0, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.201, i32 0, i32 0), i32 32, i32 5, { i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.210, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.205, i32 0, i32 0), i32 24, i32 18, %union.anon.0 { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.205, i32 0, i32 0), i32 24, i32 18, %union.anon.0 { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@flat_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.222, i32 0, i32 0), i8* (i8*)* @flat_get_name, %struct.AVOption* getelementptr inbounds ([5 x %struct.AVOption], [5 x %struct.AVOption]* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @flat_options to [5 x %struct.AVOption]*), i32 0, i32 0), i32 0, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@.str.222 = private unnamed_addr constant [5 x i8] c"flat\00", align 1
@.str.223 = private unnamed_addr constant [9 x i8] c"sep_char\00", align 1
@.str.224 = private unnamed_addr constant [14 x i8] c"set separator\00", align 1
@.str.225 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.226 = private unnamed_addr constant [13 x i8] c"hierarchical\00", align 1
@.str.227 = private unnamed_addr constant [60 x i8] c"specify if the section specification should be hierarchical\00", align 1
@flat_options = internal constant <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.223, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.224, i32 0, i32 0), i32 8, i32 5, { i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 0, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.224, i32 0, i32 0), i32 8, i32 5, { i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.227, i32 0, i32 0), i32 20, i32 18, %union.anon.0 { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.227, i32 0, i32 0), i32 20, i32 18, %union.anon.0 { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@.str.229 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.230 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@.str.231 = private unnamed_addr constant [11 x i8] c"%s%s=%lld\0A\00", align 1
@.str.232 = private unnamed_addr constant [4 x i8] c"%s=\00", align 1
@.str.233 = private unnamed_addr constant [6 x i8] c"\22%s\22\0A\00", align 1
@.str.234 = private unnamed_addr constant [3 x i8] c"\5C\22\00", align 1
@.str.235 = private unnamed_addr constant [3 x i8] c"\5C`\00", align 1
@.str.236 = private unnamed_addr constant [3 x i8] c"\5C$\00", align 1
@ini_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.237, i32 0, i32 0), i8* (i8*)* @ini_get_name, %struct.AVOption* getelementptr inbounds ([3 x %struct.AVOption], [3 x %struct.AVOption]* @ini_options, i32 0, i32 0), i32 0, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@.str.237 = private unnamed_addr constant [4 x i8] c"ini\00", align 1
@ini_options = internal constant [3 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.227, i32 0, i32 0), i32 8, i32 18, %union.anon.0 { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.227, i32 0, i32 0), i32 8, i32 18, %union.anon.0 { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.238 = private unnamed_addr constant [19 x i8] c"# ffprobe output\0A\0A\00", align 1
@.str.239 = private unnamed_addr constant [4 x i8] c".%d\00", align 1
@.str.240 = private unnamed_addr constant [9 x i8] c"%s=%lld\0A\00", align 1
@.str.241 = private unnamed_addr constant [3 x i8] c"\5Ct\00", align 1
@.str.242 = private unnamed_addr constant [9 x i8] c"\5Cx00%02x\00", align 1
@json_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.243, i32 0, i32 0), i8* (i8*)* @json_get_name, %struct.AVOption* getelementptr inbounds ([3 x %struct.AVOption], [3 x %struct.AVOption]* @json_options, i32 0, i32 0), i32 0, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@.str.243 = private unnamed_addr constant [5 x i8] c"json\00", align 1
@json_options = internal constant [3 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.244, i32 0, i32 0), i32 12, i32 18, %union.anon.0 zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.244, i32 0, i32 0), i32 12, i32 18, %union.anon.0 zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.244 = private unnamed_addr constant [22 x i8] c"enable compact output\00", align 1
@.str.245 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.246 = private unnamed_addr constant [3 x i8] c",\0A\00", align 1
@.str.247 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.248 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.249 = private unnamed_addr constant [4 x i8] c"%*c\00", align 1
@.str.250 = private unnamed_addr constant [9 x i8] c"\22%s\22: [\0A\00", align 1
@.str.251 = private unnamed_addr constant [10 x i8] c"\22%s\22: {%s\00", align 1
@.str.252 = private unnamed_addr constant [4 x i8] c"{%s\00", align 1
@.str.253 = private unnamed_addr constant [15 x i8] c"\22type\22: \22%s\22%s\00", align 1
@json_escape_str.json_escape = internal constant [8 x i8] c"\22\5C\08\0C\0A\0D\09\00", align 1
@json_escape_str.json_subst = internal constant [8 x i8] c"\22\5Cbfnrt\00", align 1
@.str.254 = private unnamed_addr constant [9 x i8] c"\5Cu00%02x\00", align 1
@.str.255 = private unnamed_addr constant [4 x i8] c"\0A}\0A\00", align 1
@.str.256 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.257 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.258 = private unnamed_addr constant [11 x i8] c"\22%s\22: %lld\00", align 1
@.str.259 = private unnamed_addr constant [6 x i8] c"\22%s\22:\00", align 1
@.str.260 = private unnamed_addr constant [6 x i8] c" \22%s\22\00", align 1
@writer_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.265, i32 0, i32 0), i8* (i8*)* @writer_get_name, %struct.AVOption* getelementptr inbounds ([8 x %struct.AVOption], [8 x %struct.AVOption]* bitcast (<{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption }>* @writer_options to [8 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* @writer_child_next, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@.str.261 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.262 = private unnamed_addr constant [63 x i8] c"Failed to parse option string '%s' provided to writer context\0A\00", align 1
@.str.263 = private unnamed_addr constant [70 x i8] c"Failed to set option '%s' with value '%s' provided to writer context\0A\00", align 1
@.str.264 = private unnamed_addr constant [66 x i8] c"Invalid UTF8 sequence %s found in string validation replace '%s'\0A\00", align 1
@.str.265 = private unnamed_addr constant [7 x i8] c"Writer\00", align 1
@.str.266 = private unnamed_addr constant [18 x i8] c"string_validation\00", align 1
@.str.267 = private unnamed_addr constant [27 x i8] c"set string validation mode\00", align 1
@.str.268 = private unnamed_addr constant [3 x i8] c"sv\00", align 1
@.str.269 = private unnamed_addr constant [7 x i8] c"ignore\00", align 1
@.str.270 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.271 = private unnamed_addr constant [5 x i8] c"fail\00", align 1
@.str.272 = private unnamed_addr constant [30 x i8] c"string_validation_replacement\00", align 1
@.str.273 = private unnamed_addr constant [41 x i8] c"set string validation replacement string\00", align 1
@.str.274 = private unnamed_addr constant [4 x i8] c"svr\00", align 1
@.str.275 = private unnamed_addr constant [4 x i8] c"\EF\BF\BD\00", align 1
@writer_options = internal constant <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.266, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.267, i32 0, i32 0), i32 10420, i32 1, %union.anon.0 { i64 1 }, double 0.000000e+00, double 2.000000e+00, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.268, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.268, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.267, i32 0, i32 0), i32 10420, i32 1, %union.anon.0 { i64 1 }, double 0.000000e+00, double 2.000000e+00, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.268, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.269, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon.0 { i64 2 }, double 0.000000e+00, double 0.000000e+00, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.268, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.270, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon.0 { i64 1 }, double 0.000000e+00, double 0.000000e+00, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.268, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.271, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon.0 zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.268, i32 0, i32 0) }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.272, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.273, i32 0, i32 0), i32 10424, i32 5, { i8* } { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0) }, double 0.000000e+00, double 0.000000e+00, i32 0, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.274, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.273, i32 0, i32 0), i32 10424, i32 5, { i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.275, i32 0, i32 0) }, double 0.000000e+00, double 0.000000e+00, i32 0, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@.str.277 = private unnamed_addr constant [3 x i8] c"0X\00", align 1
@.str.278 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.279 = private unnamed_addr constant [8 x i8] c"chapter\00", align 1
@.str.280 = private unnamed_addr constant [5 x i8] c"tags\00", align 1
@.str.281 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@.str.282 = private unnamed_addr constant [13 x i8] c"chapter_tags\00", align 1
@.str.283 = private unnamed_addr constant [9 x i8] c"chapters\00", align 1
@.str.284 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.285 = private unnamed_addr constant [12 x i8] c"format_tags\00", align 1
@.str.286 = private unnamed_addr constant [6 x i8] c"frame\00", align 1
@.str.287 = private unnamed_addr constant [7 x i8] c"frames\00", align 1
@.str.288 = private unnamed_addr constant [11 x i8] c"frame_tags\00", align 1
@.str.289 = private unnamed_addr constant [15 x i8] c"side_data_list\00", align 1
@.str.290 = private unnamed_addr constant [10 x i8] c"side_data\00", align 1
@.str.291 = private unnamed_addr constant [21 x i8] c"frame_side_data_list\00", align 1
@.str.292 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.293 = private unnamed_addr constant [5 x i8] c"logs\00", align 1
@.str.294 = private unnamed_addr constant [16 x i8] c"library_version\00", align 1
@.str.295 = private unnamed_addr constant [17 x i8] c"library_versions\00", align 1
@.str.296 = private unnamed_addr constant [7 x i8] c"packet\00", align 1
@.str.297 = private unnamed_addr constant [12 x i8] c"packet_tags\00", align 1
@.str.298 = private unnamed_addr constant [8 x i8] c"packets\00", align 1
@.str.299 = private unnamed_addr constant [19 x i8] c"packets_and_frames\00", align 1
@.str.300 = private unnamed_addr constant [22 x i8] c"packet_side_data_list\00", align 1
@.str.301 = private unnamed_addr constant [13 x i8] c"pixel_format\00", align 1
@.str.302 = private unnamed_addr constant [19 x i8] c"pixel_format_flags\00", align 1
@.str.303 = private unnamed_addr constant [10 x i8] c"component\00", align 1
@.str.304 = private unnamed_addr constant [11 x i8] c"components\00", align 1
@.str.305 = private unnamed_addr constant [24 x i8] c"pixel_format_components\00", align 1
@.str.306 = private unnamed_addr constant [14 x i8] c"pixel_formats\00", align 1
@.str.307 = private unnamed_addr constant [12 x i8] c"disposition\00", align 1
@.str.308 = private unnamed_addr constant [27 x i8] c"program_stream_disposition\00", align 1
@.str.309 = private unnamed_addr constant [20 x i8] c"program_stream_tags\00", align 1
@.str.310 = private unnamed_addr constant [8 x i8] c"program\00", align 1
@.str.311 = private unnamed_addr constant [8 x i8] c"streams\00", align 1
@.str.312 = private unnamed_addr constant [16 x i8] c"program_streams\00", align 1
@.str.313 = private unnamed_addr constant [7 x i8] c"stream\00", align 1
@.str.314 = private unnamed_addr constant [15 x i8] c"program_stream\00", align 1
@.str.315 = private unnamed_addr constant [13 x i8] c"program_tags\00", align 1
@.str.316 = private unnamed_addr constant [16 x i8] c"program_version\00", align 1
@.str.317 = private unnamed_addr constant [9 x i8] c"programs\00", align 1
@.str.318 = private unnamed_addr constant [5 x i8] c"root\00", align 1
@.str.319 = private unnamed_addr constant [19 x i8] c"stream_disposition\00", align 1
@.str.320 = private unnamed_addr constant [12 x i8] c"stream_tags\00", align 1
@.str.321 = private unnamed_addr constant [22 x i8] c"stream_side_data_list\00", align 1
@.str.322 = private unnamed_addr constant [9 x i8] c"subtitle\00", align 1
@xml_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.323, i32 0, i32 0), i8* (i8*)* @xml_get_name, %struct.AVOption* getelementptr inbounds ([5 x %struct.AVOption], [5 x %struct.AVOption]* @xml_options, i32 0, i32 0), i32 0, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@.str.323 = private unnamed_addr constant [4 x i8] c"xml\00", align 1
@xml_options = internal constant [5 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.324, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.325, i32 0, i32 0), i32 16, i32 18, %union.anon.0 zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.326, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.325, i32 0, i32 0), i32 16, i32 18, %union.anon.0 zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.327, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.328, i32 0, i32 0), i32 20, i32 18, %union.anon.0 zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.329, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.328, i32 0, i32 0), i32 20, i32 18, %union.anon.0 zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 0, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.324 = private unnamed_addr constant [16 x i8] c"fully_qualified\00", align 1
@.str.325 = private unnamed_addr constant [48 x i8] c"specify if the output should be fully qualified\00", align 1
@.str.326 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.327 = private unnamed_addr constant [11 x i8] c"xsd_strict\00", align 1
@.str.328 = private unnamed_addr constant [40 x i8] c"ensure that the output is XSD compliant\00", align 1
@.str.329 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.330 = private unnamed_addr constant [139 x i8] c"XSD-compliant output selected but option '%s' was selected, XML output may be non-compliant.\0AYou need to disable such option with '-no%s'\0A\00", align 1
@.str.331 = private unnamed_addr constant [128 x i8] c"Interleaved frames and packets are not allowed in XSD. Select only one between the -show_frames and the -show_packets options.\0A\00", align 1
@.str.332 = private unnamed_addr constant [178 x i8] c" xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:ffprobe='http://www.ffmpeg.org/schema/ffprobe' xsi:schemaLocation='http://www.ffmpeg.org/schema/ffprobe ffprobe.xsd'\00", align 1
@.str.333 = private unnamed_addr constant [40 x i8] c"<?xml version=\221.0\22 encoding=\22UTF-8\22?>\0A\00", align 1
@.str.334 = private unnamed_addr constant [15 x i8] c"<%sffprobe%s>\0A\00", align 1
@.str.335 = private unnamed_addr constant [9 x i8] c"ffprobe:\00", align 1
@.str.336 = private unnamed_addr constant [3 x i8] c">\0A\00", align 1
@.str.337 = private unnamed_addr constant [6 x i8] c"<%s>\0A\00", align 1
@.str.338 = private unnamed_addr constant [5 x i8] c"<%s \00", align 1
@.str.339 = private unnamed_addr constant [14 x i8] c"</%sffprobe>\0A\00", align 1
@.str.340 = private unnamed_addr constant [4 x i8] c"/>\0A\00", align 1
@.str.341 = private unnamed_addr constant [7 x i8] c"</%s>\0A\00", align 1
@.str.342 = private unnamed_addr constant [10 x i8] c"%s=\22%lld\22\00", align 1
@.str.343 = private unnamed_addr constant [13 x i8] c"<%s key=\22%s\22\00", align 1
@.str.344 = private unnamed_addr constant [15 x i8] c" value=\22%s\22/>\0A\00", align 1
@.str.345 = private unnamed_addr constant [8 x i8] c"%s=\22%s\22\00", align 1
@.str.346 = private unnamed_addr constant [6 x i8] c"&amp;\00", align 1
@.str.347 = private unnamed_addr constant [5 x i8] c"&lt;\00", align 1
@.str.348 = private unnamed_addr constant [5 x i8] c"&gt;\00", align 1
@.str.349 = private unnamed_addr constant [7 x i8] c"&quot;\00", align 1
@.str.350 = private unnamed_addr constant [7 x i8] c"&apos;\00", align 1
@.str.351 = private unnamed_addr constant [17 x i8] c"wctx->level < 10\00", align 1
@.str.352 = private unnamed_addr constant [17 x i8] c"N-93147-g9326117\00", align 1
@.str.353 = private unnamed_addr constant [42 x i8] c"Copyright (c) %d-%d the FFmpeg developers\00", align 1
@.str.354 = private unnamed_addr constant [10 x i8] c"copyright\00", align 1
@.str.355 = private unnamed_addr constant [15 x i8] c"compiler_ident\00", align 1
@.str.356 = private unnamed_addr constant [52 x i8] c"gcc 5.4.0 (Ubuntu 5.4.0-6ubuntu1~16.04.10) 20160609\00", align 1
@.str.357 = private unnamed_addr constant [14 x i8] c"configuration\00", align 1
@.str.358 = private unnamed_addr constant [17 x i8] c"--disable-x86asm\00", align 1
@.str.359 = private unnamed_addr constant [58 x i8] c"Invalid key=value string combination %s=%s in section %s\0A\00", align 1
@.str.360 = private unnamed_addr constant [48 x i8] c"Invalid UTF-8 sequence %s found in string '%s'\0A\00", align 1
@.str.361 = private unnamed_addr constant [45 x i8] c"Invalid UTF-8 sequence found in string '%s'\0A\00", align 1
@.str.362 = private unnamed_addr constant [71 x i8] c"%d invalid UTF-8 sequence(s) found in string '%s', replaced with '%s'\0A\00", align 1
@.str.363 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.364 = private unnamed_addr constant [10 x i8] c"libavutil\00", align 1
@.str.365 = private unnamed_addr constant [6 x i8] c"major\00", align 1
@.str.366 = private unnamed_addr constant [6 x i8] c"minor\00", align 1
@.str.367 = private unnamed_addr constant [6 x i8] c"micro\00", align 1
@.str.368 = private unnamed_addr constant [6 x i8] c"ident\00", align 1
@.str.369 = private unnamed_addr constant [14 x i8] c"Lavu56.26.100\00", align 1
@.str.370 = private unnamed_addr constant [11 x i8] c"libavcodec\00", align 1
@.str.371 = private unnamed_addr constant [14 x i8] c"Lavc58.47.102\00", align 1
@.str.372 = private unnamed_addr constant [12 x i8] c"libavformat\00", align 1
@.str.373 = private unnamed_addr constant [14 x i8] c"Lavf58.26.101\00", align 1
@.str.374 = private unnamed_addr constant [12 x i8] c"libavdevice\00", align 1
@.str.375 = private unnamed_addr constant [13 x i8] c"Lavd58.6.101\00", align 1
@.str.376 = private unnamed_addr constant [12 x i8] c"libavfilter\00", align 1
@.str.377 = private unnamed_addr constant [14 x i8] c"Lavfi7.48.100\00", align 1
@.str.378 = private unnamed_addr constant [11 x i8] c"libswscale\00", align 1
@.str.379 = private unnamed_addr constant [11 x i8] c"SwS5.4.100\00", align 1
@.str.380 = private unnamed_addr constant [14 x i8] c"libswresample\00", align 1
@.str.381 = private unnamed_addr constant [11 x i8] c"SwR3.4.100\00", align 1
@.str.382 = private unnamed_addr constant [14 x i8] c"nb_components\00", align 1
@.str.383 = private unnamed_addr constant [14 x i8] c"log2_chroma_w\00", align 1
@.str.384 = private unnamed_addr constant [14 x i8] c"log2_chroma_h\00", align 1
@.str.385 = private unnamed_addr constant [4 x i8] c"N/A\00", align 1
@.str.386 = private unnamed_addr constant [15 x i8] c"bits_per_pixel\00", align 1
@.str.387 = private unnamed_addr constant [11 x i8] c"big_endian\00", align 1
@.str.388 = private unnamed_addr constant [8 x i8] c"palette\00", align 1
@.str.389 = private unnamed_addr constant [10 x i8] c"bitstream\00", align 1
@.str.390 = private unnamed_addr constant [8 x i8] c"hwaccel\00", align 1
@.str.391 = private unnamed_addr constant [7 x i8] c"planar\00", align 1
@.str.392 = private unnamed_addr constant [4 x i8] c"rgb\00", align 1
@.str.393 = private unnamed_addr constant [10 x i8] c"pseudopal\00", align 1
@.str.394 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.395 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.396 = private unnamed_addr constant [10 x i8] c"bit_depth\00", align 1
@do_read_frames = internal global i32 0, align 4
@do_read_packets = internal global i32 0, align 4
@nb_streams = internal global i32 0, align 4
@nb_streams_frames = internal global i64* null, align 8
@nb_streams_packets = internal global i64* null, align 8
@selected_streams = internal global i32* null, align 8
@format_opts = external global %struct.AVDictionary*, align 8
@.str.397 = private unnamed_addr constant [14 x i8] c"scan_all_pmts\00", align 1
@.str.398 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.399 = private unnamed_addr constant [22 x i8] c"Option %s not found.\0A\00", align 1
@codec_opts = external global %struct.AVDictionary*, align 8
@.str.400 = private unnamed_addr constant [43 x i8] c"Failed to probe codec for input stream %d\0A\00", align 1
@.str.401 = private unnamed_addr constant [50 x i8] c"Unsupported codec with id %d for input stream %d\0A\00", align 1
@.str.402 = private unnamed_addr constant [8 x i8] c"threads\00", align 1
@.str.403 = private unnamed_addr constant [42 x i8] c"Could not open codec for input stream %d\0A\00", align 1
@.str.404 = private unnamed_addr constant [41 x i8] c"Option %s for input stream %d not found\0A\00", align 1
@.str.405 = private unnamed_addr constant [26 x i8] c"Processing read interval \00", align 1
@.str.406 = private unnamed_addr constant [76 x i8] c"Could not seek to relative position since current timestamp is not defined\0A\00", align 1
@.str.407 = private unnamed_addr constant [41 x i8] c"Seeking to read interval start point %s\0A\00", align 1
@.str.408 = private unnamed_addr constant [36 x i8] c"Could not seek to position %ld: %s\0A\00", align 1
@.str.409 = private unnamed_addr constant [36 x i8] c"Could not read packets in interval \00", align 1
@.str.410 = private unnamed_addr constant [11 x i8] c"codec_type\00", align 1
@.str.411 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.412 = private unnamed_addr constant [13 x i8] c"stream_index\00", align 1
@.str.413 = private unnamed_addr constant [4 x i8] c"pts\00", align 1
@.str.414 = private unnamed_addr constant [9 x i8] c"pts_time\00", align 1
@.str.415 = private unnamed_addr constant [4 x i8] c"dts\00", align 1
@.str.416 = private unnamed_addr constant [9 x i8] c"dts_time\00", align 1
@.str.417 = private unnamed_addr constant [9 x i8] c"duration\00", align 1
@.str.418 = private unnamed_addr constant [14 x i8] c"duration_time\00", align 1
@.str.419 = private unnamed_addr constant [21 x i8] c"convergence_duration\00", align 1
@.str.420 = private unnamed_addr constant [26 x i8] c"convergence_duration_time\00", align 1
@unit_byte_str = internal constant [5 x i8] c"byte\00", align 1
@.str.421 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.422 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.423 = private unnamed_addr constant [4 x i8] c"pos\00", align 1
@.str.424 = private unnamed_addr constant [5 x i8] c"%c%c\00", align 1
@.str.425 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.426 = private unnamed_addr constant [10 x i8] c"data_hash\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@unit_second_str = internal constant [2 x i8] c"s\00", align 1
@.str.427 = private unnamed_addr constant [15 x i8] c"%d:%02d:%09.6f\00", align 1
@si_prefixes = internal constant [6 x %struct.anon.2] [%struct.anon.2 { double 1.000000e+00, double 1.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0) }, %struct.anon.2 { double 1.024000e+03, double 1.000000e+03, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.430, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.431, i32 0, i32 0) }, %struct.anon.2 { double 1.048576e+06, double 1.000000e+06, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.432, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.433, i32 0, i32 0) }, %struct.anon.2 { double 0x41D0000000000000, double 1.000000e+09, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.434, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.435, i32 0, i32 0) }, %struct.anon.2 { double 0x4270000000000000, double 1.000000e+12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.436, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.437, i32 0, i32 0) }, %struct.anon.2 { double 0x4310000000000000, double 1.000000e+15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.438, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.439, i32 0, i32 0) }], align 16
@.str.428 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.429 = private unnamed_addr constant [7 x i8] c"%s%s%s\00", align 1
@.str.430 = private unnamed_addr constant [3 x i8] c"Ki\00", align 1
@.str.431 = private unnamed_addr constant [2 x i8] c"K\00", align 1
@.str.432 = private unnamed_addr constant [3 x i8] c"Mi\00", align 1
@.str.433 = private unnamed_addr constant [2 x i8] c"M\00", align 1
@.str.434 = private unnamed_addr constant [3 x i8] c"Gi\00", align 1
@.str.435 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@.str.436 = private unnamed_addr constant [3 x i8] c"Ti\00", align 1
@.str.437 = private unnamed_addr constant [2 x i8] c"T\00", align 1
@.str.438 = private unnamed_addr constant [3 x i8] c"Pi\00", align 1
@.str.439 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.440 = private unnamed_addr constant [15 x i8] c"side_data_type\00", align 1
@.str.441 = private unnamed_addr constant [14 x i8] c"displaymatrix\00", align 1
@.str.442 = private unnamed_addr constant [6 x i8] c" %11d\00", align 1
@.str.443 = private unnamed_addr constant [9 x i8] c"rotation\00", align 1
@.str.444 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.445 = private unnamed_addr constant [9 x i8] c"inverted\00", align 1
@.str.446 = private unnamed_addr constant [11 x i8] c"projection\00", align 1
@.str.447 = private unnamed_addr constant [8 x i8] c"padding\00", align 1
@.str.448 = private unnamed_addr constant [11 x i8] c"bound_left\00", align 1
@.str.449 = private unnamed_addr constant [10 x i8] c"bound_top\00", align 1
@.str.450 = private unnamed_addr constant [12 x i8] c"bound_right\00", align 1
@.str.451 = private unnamed_addr constant [13 x i8] c"bound_bottom\00", align 1
@.str.452 = private unnamed_addr constant [4 x i8] c"yaw\00", align 1
@.str.453 = private unnamed_addr constant [6 x i8] c"pitch\00", align 1
@.str.454 = private unnamed_addr constant [5 x i8] c"roll\00", align 1
@.str.455 = private unnamed_addr constant [13 x i8] c"skip_samples\00", align 1
@.str.456 = private unnamed_addr constant [16 x i8] c"discard_padding\00", align 1
@.str.457 = private unnamed_addr constant [12 x i8] c"skip_reason\00", align 1
@.str.458 = private unnamed_addr constant [15 x i8] c"discard_reason\00", align 1
@.str.459 = private unnamed_addr constant [6 x i8] c"red_x\00", align 1
@.str.460 = private unnamed_addr constant [6 x i8] c"red_y\00", align 1
@.str.461 = private unnamed_addr constant [8 x i8] c"green_x\00", align 1
@.str.462 = private unnamed_addr constant [8 x i8] c"green_y\00", align 1
@.str.463 = private unnamed_addr constant [7 x i8] c"blue_x\00", align 1
@.str.464 = private unnamed_addr constant [7 x i8] c"blue_y\00", align 1
@.str.465 = private unnamed_addr constant [14 x i8] c"white_point_x\00", align 1
@.str.466 = private unnamed_addr constant [14 x i8] c"white_point_y\00", align 1
@.str.467 = private unnamed_addr constant [14 x i8] c"min_luminance\00", align 1
@.str.468 = private unnamed_addr constant [14 x i8] c"max_luminance\00", align 1
@.str.469 = private unnamed_addr constant [12 x i8] c"max_content\00", align 1
@.str.470 = private unnamed_addr constant [12 x i8] c"max_average\00", align 1
@.str.471 = private unnamed_addr constant [7 x i8] c"%08x: \00", align 1
@.str.472 = private unnamed_addr constant [7 x i8] c"%d%c%d\00", align 1
@.str.473 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.474 = private unnamed_addr constant [4 x i8] c"%s:\00", align 1
@.str.475 = private unnamed_addr constant [11 x i8] c"media_type\00", align 1
@.str.476 = private unnamed_addr constant [19 x i8] c"start_display_time\00", align 1
@.str.477 = private unnamed_addr constant [17 x i8] c"end_display_time\00", align 1
@.str.478 = private unnamed_addr constant [10 x i8] c"num_rects\00", align 1
@.str.479 = private unnamed_addr constant [10 x i8] c"key_frame\00", align 1
@.str.480 = private unnamed_addr constant [8 x i8] c"pkt_pts\00", align 1
@.str.481 = private unnamed_addr constant [13 x i8] c"pkt_pts_time\00", align 1
@.str.482 = private unnamed_addr constant [8 x i8] c"pkt_dts\00", align 1
@.str.483 = private unnamed_addr constant [13 x i8] c"pkt_dts_time\00", align 1
@.str.484 = private unnamed_addr constant [22 x i8] c"best_effort_timestamp\00", align 1
@.str.485 = private unnamed_addr constant [27 x i8] c"best_effort_timestamp_time\00", align 1
@.str.486 = private unnamed_addr constant [13 x i8] c"pkt_duration\00", align 1
@.str.487 = private unnamed_addr constant [18 x i8] c"pkt_duration_time\00", align 1
@.str.488 = private unnamed_addr constant [8 x i8] c"pkt_pos\00", align 1
@.str.489 = private unnamed_addr constant [9 x i8] c"pkt_size\00", align 1
@.str.490 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.491 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.492 = private unnamed_addr constant [8 x i8] c"pix_fmt\00", align 1
@.str.493 = private unnamed_addr constant [20 x i8] c"sample_aspect_ratio\00", align 1
@.str.494 = private unnamed_addr constant [10 x i8] c"pict_type\00", align 1
@.str.495 = private unnamed_addr constant [21 x i8] c"coded_picture_number\00", align 1
@.str.496 = private unnamed_addr constant [23 x i8] c"display_picture_number\00", align 1
@.str.497 = private unnamed_addr constant [17 x i8] c"interlaced_frame\00", align 1
@.str.498 = private unnamed_addr constant [16 x i8] c"top_field_first\00", align 1
@.str.499 = private unnamed_addr constant [12 x i8] c"repeat_pict\00", align 1
@.str.500 = private unnamed_addr constant [11 x i8] c"sample_fmt\00", align 1
@.str.501 = private unnamed_addr constant [11 x i8] c"nb_samples\00", align 1
@.str.502 = private unnamed_addr constant [9 x i8] c"channels\00", align 1
@.str.503 = private unnamed_addr constant [15 x i8] c"channel_layout\00", align 1
@.str.504 = private unnamed_addr constant [9 x i8] c"timecode\00", align 1
@.str.505 = private unnamed_addr constant [12 x i8] c"color_range\00", align 1
@.str.506 = private unnamed_addr constant [12 x i8] c"color_space\00", align 1
@.str.507 = private unnamed_addr constant [16 x i8] c"color_primaries\00", align 1
@.str.508 = private unnamed_addr constant [15 x i8] c"color_transfer\00", align 1
@.str.509 = private unnamed_addr constant [16 x i8] c"chroma_location\00", align 1
@.str.510 = private unnamed_addr constant [12 x i8] c"unspecified\00", align 1
@.str.511 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.512 = private unnamed_addr constant [6 x i8] c"level\00", align 1
@.str.513 = private unnamed_addr constant [9 x i8] c"category\00", align 1
@.str.514 = private unnamed_addr constant [15 x i8] c"parent_context\00", align 1
@.str.515 = private unnamed_addr constant [16 x i8] c"parent_category\00", align 1
@.str.516 = private unnamed_addr constant [8 x i8] c"message\00", align 1
@.str.517 = private unnamed_addr constant [11 x i8] c"program_id\00", align 1
@.str.518 = private unnamed_addr constant [12 x i8] c"program_num\00", align 1
@.str.519 = private unnamed_addr constant [11 x i8] c"nb_streams\00", align 1
@.str.520 = private unnamed_addr constant [8 x i8] c"pmt_pid\00", align 1
@.str.521 = private unnamed_addr constant [8 x i8] c"pcr_pid\00", align 1
@.str.522 = private unnamed_addr constant [10 x i8] c"start_pts\00", align 1
@.str.523 = private unnamed_addr constant [11 x i8] c"start_time\00", align 1
@.str.524 = private unnamed_addr constant [8 x i8] c"end_pts\00", align 1
@.str.525 = private unnamed_addr constant [9 x i8] c"end_time\00", align 1
@.str.526 = private unnamed_addr constant [11 x i8] c"codec_name\00", align 1
@.str.527 = private unnamed_addr constant [16 x i8] c"codec_long_name\00", align 1
@.str.528 = private unnamed_addr constant [8 x i8] c"profile\00", align 1
@.str.529 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.530 = private unnamed_addr constant [16 x i8] c"codec_time_base\00", align 1
@.str.531 = private unnamed_addr constant [17 x i8] c"codec_tag_string\00", align 1
@.str.532 = private unnamed_addr constant [7 x i8] c"0x%04x\00", align 1
@.str.533 = private unnamed_addr constant [10 x i8] c"codec_tag\00", align 1
@.str.534 = private unnamed_addr constant [12 x i8] c"coded_width\00", align 1
@.str.535 = private unnamed_addr constant [13 x i8] c"coded_height\00", align 1
@.str.536 = private unnamed_addr constant [13 x i8] c"has_b_frames\00", align 1
@.str.537 = private unnamed_addr constant [21 x i8] c"display_aspect_ratio\00", align 1
@.str.538 = private unnamed_addr constant [12 x i8] c"field_order\00", align 1
@.str.539 = private unnamed_addr constant [12 x i8] c"progressive\00", align 1
@.str.540 = private unnamed_addr constant [3 x i8] c"tt\00", align 1
@.str.541 = private unnamed_addr constant [3 x i8] c"bb\00", align 1
@.str.542 = private unnamed_addr constant [3 x i8] c"tb\00", align 1
@.str.543 = private unnamed_addr constant [3 x i8] c"bt\00", align 1
@.str.544 = private unnamed_addr constant [5 x i8] c"refs\00", align 1
@unit_hertz_str = internal constant [3 x i8] c"Hz\00", align 1
@.str.545 = private unnamed_addr constant [12 x i8] c"sample_rate\00", align 1
@.str.546 = private unnamed_addr constant [16 x i8] c"bits_per_sample\00", align 1
@.str.547 = private unnamed_addr constant [5 x i8] c"0x%x\00", align 1
@.str.548 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.549 = private unnamed_addr constant [13 x i8] c"r_frame_rate\00", align 1
@.str.550 = private unnamed_addr constant [15 x i8] c"avg_frame_rate\00", align 1
@.str.551 = private unnamed_addr constant [10 x i8] c"time_base\00", align 1
@.str.552 = private unnamed_addr constant [12 x i8] c"duration_ts\00", align 1
@unit_bit_per_second_str = internal constant [6 x i8] c"bit/s\00", align 1
@.str.553 = private unnamed_addr constant [9 x i8] c"bit_rate\00", align 1
@.str.554 = private unnamed_addr constant [13 x i8] c"max_bit_rate\00", align 1
@.str.555 = private unnamed_addr constant [20 x i8] c"bits_per_raw_sample\00", align 1
@.str.556 = private unnamed_addr constant [10 x i8] c"nb_frames\00", align 1
@.str.557 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.558 = private unnamed_addr constant [15 x i8] c"nb_read_frames\00", align 1
@.str.559 = private unnamed_addr constant [16 x i8] c"nb_read_packets\00", align 1
@.str.560 = private unnamed_addr constant [10 x i8] c"extradata\00", align 1
@.str.561 = private unnamed_addr constant [15 x i8] c"extradata_hash\00", align 1
@.str.562 = private unnamed_addr constant [4 x i8] c"dub\00", align 1
@.str.563 = private unnamed_addr constant [9 x i8] c"original\00", align 1
@.str.564 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.565 = private unnamed_addr constant [7 x i8] c"lyrics\00", align 1
@.str.566 = private unnamed_addr constant [8 x i8] c"karaoke\00", align 1
@.str.567 = private unnamed_addr constant [7 x i8] c"forced\00", align 1
@.str.568 = private unnamed_addr constant [17 x i8] c"hearing_impaired\00", align 1
@.str.569 = private unnamed_addr constant [16 x i8] c"visual_impaired\00", align 1
@.str.570 = private unnamed_addr constant [14 x i8] c"clean_effects\00", align 1
@.str.571 = private unnamed_addr constant [13 x i8] c"attached_pic\00", align 1
@.str.572 = private unnamed_addr constant [17 x i8] c"timed_thumbnails\00", align 1
@.str.573 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.574 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.575 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@.str.576 = private unnamed_addr constant [12 x i8] c"nb_programs\00", align 1
@.str.577 = private unnamed_addr constant [12 x i8] c"format_name\00", align 1
@.str.578 = private unnamed_addr constant [17 x i8] c"format_long_name\00", align 1
@.str.579 = private unnamed_addr constant [12 x i8] c"probe_score\00", align 1
@.str.580 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.581 = private unnamed_addr constant [7 x i8] c"string\00", align 1

; Function Attrs: nounwind uwtable
define void @show_help_default(i8* %opt, i8* %arg) #0 !dbg !2567 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !2570, metadata !2571), !dbg !2572
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !2573, metadata !2571), !dbg !2574
  call void @av_log_set_callback(void (i8*, i32, i8*, %struct.__va_list_tag*)* @log_callback_help), !dbg !2575
  call void @show_usage(), !dbg !2576
  %0 = load %struct.OptionDef*, %struct.OptionDef** @options, align 8, !dbg !2577
  call void @show_help_options(%struct.OptionDef* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i32 0, i32 0, i32 0), !dbg !2578
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !2579
  %call1 = call %struct.AVClass* @avformat_get_class(), !dbg !2580
  call void @show_help_children(%struct.AVClass* %call1, i32 2), !dbg !2581
  %call2 = call %struct.AVClass* @avcodec_get_class(), !dbg !2583
  call void @show_help_children(%struct.AVClass* %call2, i32 2), !dbg !2584
  ret void, !dbg !2585
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @av_log_set_callback(void (i8*, i32, i8*, %struct.__va_list_tag*)*) #2

declare void @log_callback_help(i8*, i32, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind uwtable
define internal void @show_usage() #0 !dbg !2586 {
entry:
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0)), !dbg !2587
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @program_name, i32 0, i32 0)), !dbg !2588
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !2589
  ret void, !dbg !2590
}

declare void @show_help_options(%struct.OptionDef*, i8*, i32, i32, i32) #2

declare i32 @printf(i8*, ...) #2

declare void @show_help_children(%struct.AVClass*, i32) #2

declare %struct.AVClass* @avformat_get_class() #2

declare %struct.AVClass* @avcodec_get_class() #2

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 !dbg !2591 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %w = alloca %struct.Writer*, align 8
  %wctx = alloca %struct.WriterContext*, align 8
  %buf = alloca i8*, align 8
  %w_name = alloca i8*, align 8
  %w_args = alloca i8*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i8*, align 8
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2595, metadata !2571), !dbg !2596
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2597, metadata !2571), !dbg !2598
  call void @llvm.dbg.declare(metadata %struct.Writer** %w, metadata !2599, metadata !2571), !dbg !2600
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx, metadata !2601, metadata !2571), !dbg !2602
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2603, metadata !2571), !dbg !2604
  call void @llvm.dbg.declare(metadata i8** %w_name, metadata !2605, metadata !2571), !dbg !2606
  store i8* null, i8** %w_name, align 8, !dbg !2606
  call void @llvm.dbg.declare(metadata i8** %w_args, metadata !2607, metadata !2571), !dbg !2608
  store i8* null, i8** %w_args, align 8, !dbg !2608
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2609, metadata !2571), !dbg !2610
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2611, metadata !2571), !dbg !2612
  call void @init_dynload(), !dbg !2613
  %call = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @log_mutex, %union.pthread_mutexattr_t* null) #9, !dbg !2614
  store i32 %call, i32* %ret, align 4, !dbg !2615
  %0 = load i32, i32* %ret, align 4, !dbg !2616
  %cmp = icmp ne i32 %0, 0, !dbg !2618
  br i1 %cmp, label %if.then, label %if.end, !dbg !2619

if.then:                                          ; preds = %entry
  br label %end, !dbg !2620

if.end:                                           ; preds = %entry
  call void @av_log_set_flags(i32 1), !dbg !2622
  call void @register_exit(void (i32)* @ffprobe_cleanup), !dbg !2623
  store %struct.OptionDef* getelementptr inbounds ([65 x %struct.OptionDef], [65 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef }>* @real_options to [65 x %struct.OptionDef]*), i32 0, i32 0), %struct.OptionDef** @options, align 8, !dbg !2624
  %1 = load i32, i32* %argc.addr, align 4, !dbg !2625
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !2626
  %3 = load %struct.OptionDef*, %struct.OptionDef** @options, align 8, !dbg !2627
  call void @parse_loglevel(i32 %1, i8** %2, %struct.OptionDef* %3), !dbg !2628
  %call1 = call i32 @avformat_network_init(), !dbg !2629
  call void @init_opts(), !dbg !2630
  call void @avdevice_register_all(), !dbg !2631
  %4 = load i32, i32* %argc.addr, align 4, !dbg !2632
  %5 = load i8**, i8*** %argv.addr, align 8, !dbg !2633
  %6 = load %struct.OptionDef*, %struct.OptionDef** @options, align 8, !dbg !2634
  call void @show_banner(i32 %4, i8** %5, %struct.OptionDef* %6), !dbg !2635
  %7 = load i32, i32* %argc.addr, align 4, !dbg !2636
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !2637
  %9 = load %struct.OptionDef*, %struct.OptionDef** @options, align 8, !dbg !2638
  call void @parse_options(i8* null, i32 %7, i8** %8, %struct.OptionDef* %9, void (i8*, i8*)* @opt_input_file), !dbg !2639
  %10 = load i32, i32* @do_show_log, align 4, !dbg !2640
  %tobool = icmp ne i32 %10, 0, !dbg !2640
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !2642

if.then2:                                         ; preds = %if.end
  call void @av_log_set_callback(void (i8*, i32, i8*, %struct.__va_list_tag*)* @log_callback), !dbg !2643
  br label %if.end3, !dbg !2643

if.end3:                                          ; preds = %if.then2, %if.end
  br label %do.body, !dbg !2644, !llvm.loop !2645

do.body:                                          ; preds = %if.end3
  %call4 = call i32 @check_section_show_entries(i32 2), !dbg !2646
  %tobool5 = icmp ne i32 %call4, 0, !dbg !2646
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !2646

if.then6:                                         ; preds = %do.body
  store i32 1, i32* @do_show_chapters, align 4, !dbg !2650
  br label %if.end7, !dbg !2652

if.end7:                                          ; preds = %if.then6, %do.body
  br label %do.end, !dbg !2653

do.end:                                           ; preds = %if.end7
  br label %do.body8, !dbg !2655, !llvm.loop !2656

do.body8:                                         ; preds = %do.end
  %call9 = call i32 @check_section_show_entries(i32 3), !dbg !2657
  %tobool10 = icmp ne i32 %call9, 0, !dbg !2657
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !2657

if.then11:                                        ; preds = %do.body8
  store i32 1, i32* @do_show_error, align 4, !dbg !2661
  br label %if.end12, !dbg !2663

if.end12:                                         ; preds = %if.then11, %do.body8
  br label %do.end13, !dbg !2664

do.end13:                                         ; preds = %if.end12
  br label %do.body14, !dbg !2666, !llvm.loop !2667

do.body14:                                        ; preds = %do.end13
  %call15 = call i32 @check_section_show_entries(i32 4), !dbg !2668
  %tobool16 = icmp ne i32 %call15, 0, !dbg !2668
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !2668

if.then17:                                        ; preds = %do.body14
  store i32 1, i32* @do_show_format, align 4, !dbg !2672
  br label %if.end18, !dbg !2674

if.end18:                                         ; preds = %if.then17, %do.body14
  br label %do.end19, !dbg !2675

do.end19:                                         ; preds = %if.end18
  br label %do.body20, !dbg !2677, !llvm.loop !2678

do.body20:                                        ; preds = %do.end19
  %call21 = call i32 @check_section_show_entries(i32 7), !dbg !2679
  %tobool22 = icmp ne i32 %call21, 0, !dbg !2679
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !2679

if.then23:                                        ; preds = %do.body20
  store i32 1, i32* @do_show_frames, align 4, !dbg !2683
  br label %if.end24, !dbg !2685

if.end24:                                         ; preds = %if.then23, %do.body20
  br label %do.end25, !dbg !2686

do.end25:                                         ; preds = %if.end24
  br label %do.body26, !dbg !2688, !llvm.loop !2689

do.body26:                                        ; preds = %do.end25
  %call27 = call i32 @check_section_show_entries(i32 14), !dbg !2690
  %tobool28 = icmp ne i32 %call27, 0, !dbg !2690
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !2690

if.then29:                                        ; preds = %do.body26
  store i32 1, i32* @do_show_library_versions, align 4, !dbg !2694
  br label %if.end30, !dbg !2696

if.end30:                                         ; preds = %if.then29, %do.body26
  br label %do.end31, !dbg !2697

do.end31:                                         ; preds = %if.end30
  br label %do.body32, !dbg !2699, !llvm.loop !2700

do.body32:                                        ; preds = %do.end31
  %call33 = call i32 @check_section_show_entries(i32 17), !dbg !2701
  %tobool34 = icmp ne i32 %call33, 0, !dbg !2701
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !2701

if.then35:                                        ; preds = %do.body32
  store i32 1, i32* @do_show_packets, align 4, !dbg !2705
  br label %if.end36, !dbg !2707

if.end36:                                         ; preds = %if.then35, %do.body32
  br label %do.end37, !dbg !2708

do.end37:                                         ; preds = %if.end36
  br label %do.body38, !dbg !2710, !llvm.loop !2711

do.body38:                                        ; preds = %do.end37
  %call39 = call i32 @check_section_show_entries(i32 25), !dbg !2712
  %tobool40 = icmp ne i32 %call39, 0, !dbg !2712
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !2712

if.then41:                                        ; preds = %do.body38
  store i32 1, i32* @do_show_pixel_formats, align 4, !dbg !2716
  br label %if.end42, !dbg !2718

if.end42:                                         ; preds = %if.then41, %do.body38
  br label %do.end43, !dbg !2719

do.end43:                                         ; preds = %if.end42
  br label %do.body44, !dbg !2721, !llvm.loop !2722

do.body44:                                        ; preds = %do.end43
  %call45 = call i32 @check_section_show_entries(i32 22), !dbg !2723
  %tobool46 = icmp ne i32 %call45, 0, !dbg !2723
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !2723

if.then47:                                        ; preds = %do.body44
  store i32 1, i32* @do_show_pixel_format_flags, align 4, !dbg !2727
  br label %if.end48, !dbg !2729

if.end48:                                         ; preds = %if.then47, %do.body44
  br label %do.end49, !dbg !2730

do.end49:                                         ; preds = %if.end48
  br label %do.body50, !dbg !2732, !llvm.loop !2733

do.body50:                                        ; preds = %do.end49
  %call51 = call i32 @check_section_show_entries(i32 24), !dbg !2734
  %tobool52 = icmp ne i32 %call51, 0, !dbg !2734
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !2734

if.then53:                                        ; preds = %do.body50
  store i32 1, i32* @do_show_pixel_format_components, align 4, !dbg !2738
  br label %if.end54, !dbg !2740

if.end54:                                         ; preds = %if.then53, %do.body50
  br label %do.end55, !dbg !2741

do.end55:                                         ; preds = %if.end54
  br label %do.body56, !dbg !2743, !llvm.loop !2744

do.body56:                                        ; preds = %do.end55
  %call57 = call i32 @check_section_show_entries(i32 32), !dbg !2745
  %tobool58 = icmp ne i32 %call57, 0, !dbg !2745
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !2745

if.then59:                                        ; preds = %do.body56
  store i32 1, i32* @do_show_program_version, align 4, !dbg !2749
  br label %if.end60, !dbg !2751

if.end60:                                         ; preds = %if.then59, %do.body56
  br label %do.end61, !dbg !2752

do.end61:                                         ; preds = %if.end60
  br label %do.body62, !dbg !2754, !llvm.loop !2755

do.body62:                                        ; preds = %do.end61
  %call63 = call i32 @check_section_show_entries(i32 33), !dbg !2756
  %tobool64 = icmp ne i32 %call63, 0, !dbg !2756
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !2756

if.then65:                                        ; preds = %do.body62
  store i32 1, i32* @do_show_programs, align 4, !dbg !2760
  br label %if.end66, !dbg !2762

if.end66:                                         ; preds = %if.then65, %do.body62
  br label %do.end67, !dbg !2763

do.end67:                                         ; preds = %if.end66
  br label %do.body68, !dbg !2765, !llvm.loop !2766

do.body68:                                        ; preds = %do.end67
  %call69 = call i32 @check_section_show_entries(i32 37), !dbg !2767
  %tobool70 = icmp ne i32 %call69, 0, !dbg !2767
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !2767

if.then71:                                        ; preds = %do.body68
  store i32 1, i32* @do_show_streams, align 4, !dbg !2771
  br label %if.end72, !dbg !2773

if.end72:                                         ; preds = %if.then71, %do.body68
  br label %do.end73, !dbg !2774

do.end73:                                         ; preds = %if.end72
  br label %do.body74, !dbg !2776, !llvm.loop !2777

do.body74:                                        ; preds = %do.end73
  %call75 = call i32 @check_section_show_entries(i32 36), !dbg !2778
  %tobool76 = icmp ne i32 %call75, 0, !dbg !2778
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !2778

if.then77:                                        ; preds = %do.body74
  store i32 1, i32* @do_show_stream_disposition, align 4, !dbg !2782
  br label %if.end78, !dbg !2784

if.end78:                                         ; preds = %if.then77, %do.body74
  br label %do.end79, !dbg !2785

do.end79:                                         ; preds = %if.end78
  br label %do.body80, !dbg !2787, !llvm.loop !2788

do.body80:                                        ; preds = %do.end79
  %call81 = call i32 @check_section_show_entries(i32 26), !dbg !2789
  %tobool82 = icmp ne i32 %call81, 0, !dbg !2789
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !2789

if.then83:                                        ; preds = %do.body80
  store i32 1, i32* @do_show_stream_disposition, align 4, !dbg !2793
  br label %if.end84, !dbg !2795

if.end84:                                         ; preds = %if.then83, %do.body80
  br label %do.end85, !dbg !2796

do.end85:                                         ; preds = %if.end84
  br label %do.body86, !dbg !2798, !llvm.loop !2799

do.body86:                                        ; preds = %do.end85
  %call87 = call i32 @check_section_show_entries(i32 1), !dbg !2800
  %tobool88 = icmp ne i32 %call87, 0, !dbg !2800
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !2800

if.then89:                                        ; preds = %do.body86
  store i32 1, i32* @do_show_chapter_tags, align 4, !dbg !2804
  br label %if.end90, !dbg !2806

if.end90:                                         ; preds = %if.then89, %do.body86
  br label %do.end91, !dbg !2807

do.end91:                                         ; preds = %if.end90
  br label %do.body92, !dbg !2809, !llvm.loop !2810

do.body92:                                        ; preds = %do.end91
  %call93 = call i32 @check_section_show_entries(i32 5), !dbg !2811
  %tobool94 = icmp ne i32 %call93, 0, !dbg !2811
  br i1 %tobool94, label %if.then95, label %if.end96, !dbg !2811

if.then95:                                        ; preds = %do.body92
  store i32 1, i32* @do_show_format_tags, align 4, !dbg !2815
  br label %if.end96, !dbg !2817

if.end96:                                         ; preds = %if.then95, %do.body92
  br label %do.end97, !dbg !2818

do.end97:                                         ; preds = %if.end96
  br label %do.body98, !dbg !2820, !llvm.loop !2821

do.body98:                                        ; preds = %do.end97
  %call99 = call i32 @check_section_show_entries(i32 8), !dbg !2822
  %tobool100 = icmp ne i32 %call99, 0, !dbg !2822
  br i1 %tobool100, label %if.then101, label %if.end102, !dbg !2822

if.then101:                                       ; preds = %do.body98
  store i32 1, i32* @do_show_frame_tags, align 4, !dbg !2826
  br label %if.end102, !dbg !2828

if.end102:                                        ; preds = %if.then101, %do.body98
  br label %do.end103, !dbg !2829

do.end103:                                        ; preds = %if.end102
  br label %do.body104, !dbg !2831, !llvm.loop !2832

do.body104:                                       ; preds = %do.end103
  %call105 = call i32 @check_section_show_entries(i32 31), !dbg !2833
  %tobool106 = icmp ne i32 %call105, 0, !dbg !2833
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !2833

if.then107:                                       ; preds = %do.body104
  store i32 1, i32* @do_show_program_tags, align 4, !dbg !2837
  br label %if.end108, !dbg !2839

if.end108:                                        ; preds = %if.then107, %do.body104
  br label %do.end109, !dbg !2840

do.end109:                                        ; preds = %if.end108
  br label %do.body110, !dbg !2842, !llvm.loop !2843

do.body110:                                       ; preds = %do.end109
  %call111 = call i32 @check_section_show_entries(i32 38), !dbg !2844
  %tobool112 = icmp ne i32 %call111, 0, !dbg !2844
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !2844

if.then113:                                       ; preds = %do.body110
  store i32 1, i32* @do_show_stream_tags, align 4, !dbg !2848
  br label %if.end114, !dbg !2850

if.end114:                                        ; preds = %if.then113, %do.body110
  br label %do.end115, !dbg !2851

do.end115:                                        ; preds = %if.end114
  br label %do.body116, !dbg !2853, !llvm.loop !2854

do.body116:                                       ; preds = %do.end115
  %call117 = call i32 @check_section_show_entries(i32 27), !dbg !2855
  %tobool118 = icmp ne i32 %call117, 0, !dbg !2855
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !2855

if.then119:                                       ; preds = %do.body116
  store i32 1, i32* @do_show_stream_tags, align 4, !dbg !2859
  br label %if.end120, !dbg !2861

if.end120:                                        ; preds = %if.then119, %do.body116
  br label %do.end121, !dbg !2862

do.end121:                                        ; preds = %if.end120
  br label %do.body122, !dbg !2864, !llvm.loop !2865

do.body122:                                       ; preds = %do.end121
  %call123 = call i32 @check_section_show_entries(i32 16), !dbg !2866
  %tobool124 = icmp ne i32 %call123, 0, !dbg !2866
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !2866

if.then125:                                       ; preds = %do.body122
  store i32 1, i32* @do_show_packet_tags, align 4, !dbg !2870
  br label %if.end126, !dbg !2872

if.end126:                                        ; preds = %if.then125, %do.body122
  br label %do.end127, !dbg !2873

do.end127:                                        ; preds = %if.end126
  %11 = load i32, i32* @do_bitexact, align 4, !dbg !2875
  %tobool128 = icmp ne i32 %11, 0, !dbg !2875
  br i1 %tobool128, label %land.lhs.true, label %if.end132, !dbg !2877

land.lhs.true:                                    ; preds = %do.end127
  %12 = load i32, i32* @do_show_program_version, align 4, !dbg !2878
  %tobool129 = icmp ne i32 %12, 0, !dbg !2878
  br i1 %tobool129, label %if.then131, label %lor.lhs.false, !dbg !2880

lor.lhs.false:                                    ; preds = %land.lhs.true
  %13 = load i32, i32* @do_show_library_versions, align 4, !dbg !2881
  %tobool130 = icmp ne i32 %13, 0, !dbg !2881
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !2883

if.then131:                                       ; preds = %lor.lhs.false, %land.lhs.true
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.2, i32 0, i32 0)), !dbg !2884
  store i32 -22, i32* %ret, align 4, !dbg !2886
  br label %end, !dbg !2887

if.end132:                                        ; preds = %lor.lhs.false, %do.end127
  call void @writer_register_all(), !dbg !2888
  %14 = load i8*, i8** @print_format, align 8, !dbg !2889
  %tobool133 = icmp ne i8* %14, null, !dbg !2889
  br i1 %tobool133, label %if.end136, label %if.then134, !dbg !2891

if.then134:                                       ; preds = %if.end132
  %call135 = call noalias i8* @av_strdup(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0)), !dbg !2892
  store i8* %call135, i8** @print_format, align 8, !dbg !2893
  br label %if.end136, !dbg !2894

if.end136:                                        ; preds = %if.then134, %if.end132
  %15 = load i8*, i8** @print_format, align 8, !dbg !2895
  %tobool137 = icmp ne i8* %15, null, !dbg !2895
  br i1 %tobool137, label %if.end139, label %if.then138, !dbg !2897

if.then138:                                       ; preds = %if.end136
  store i32 -12, i32* %ret, align 4, !dbg !2898
  br label %end, !dbg !2900

if.end139:                                        ; preds = %if.end136
  %16 = load i8*, i8** @print_format, align 8, !dbg !2901
  %call140 = call i8* @av_strtok(i8* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8** %buf), !dbg !2902
  store i8* %call140, i8** %w_name, align 8, !dbg !2903
  %17 = load i8*, i8** %w_name, align 8, !dbg !2904
  %tobool141 = icmp ne i8* %17, null, !dbg !2904
  br i1 %tobool141, label %if.end143, label %if.then142, !dbg !2906

if.then142:                                       ; preds = %if.end139
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i32 0, i32 0)), !dbg !2907
  store i32 -22, i32* %ret, align 4, !dbg !2909
  br label %end, !dbg !2910

if.end143:                                        ; preds = %if.end139
  %18 = load i8*, i8** %buf, align 8, !dbg !2911
  store i8* %18, i8** %w_args, align 8, !dbg !2912
  %19 = load i8*, i8** @show_data_hash, align 8, !dbg !2913
  %tobool144 = icmp ne i8* %19, null, !dbg !2913
  br i1 %tobool144, label %if.then145, label %if.end155, !dbg !2915

if.then145:                                       ; preds = %if.end143
  %20 = load i8*, i8** @show_data_hash, align 8, !dbg !2916
  %call146 = call i32 @av_hash_alloc(%struct.AVHashContext** @hash, i8* %20), !dbg !2919
  store i32 %call146, i32* %ret, align 4, !dbg !2920
  %cmp147 = icmp slt i32 %call146, 0, !dbg !2921
  br i1 %cmp147, label %if.then148, label %if.end154, !dbg !2922

if.then148:                                       ; preds = %if.then145
  %21 = load i32, i32* %ret, align 4, !dbg !2923
  %cmp149 = icmp eq i32 %21, -22, !dbg !2926
  br i1 %cmp149, label %if.then150, label %if.end153, !dbg !2927

if.then150:                                       ; preds = %if.then148
  call void @llvm.dbg.declare(metadata i8** %n, metadata !2928, metadata !2571), !dbg !2930
  %22 = load i8*, i8** @show_data_hash, align 8, !dbg !2931
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.6, i32 0, i32 0), i8* %22), !dbg !2932
  store i32 0, i32* %i, align 4, !dbg !2933
  br label %for.cond, !dbg !2935

for.cond:                                         ; preds = %for.inc, %if.then150
  %23 = load i32, i32* %i, align 4, !dbg !2936
  %call151 = call i8* @av_hash_names(i32 %23), !dbg !2939
  store i8* %call151, i8** %n, align 8, !dbg !2940
  %tobool152 = icmp ne i8* %call151, null, !dbg !2941
  br i1 %tobool152, label %for.body, label %for.end, !dbg !2941

for.body:                                         ; preds = %for.cond
  %24 = load i8*, i8** %n, align 8, !dbg !2942
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* %24), !dbg !2943
  br label %for.inc, !dbg !2943

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !2944
  %inc = add nsw i32 %25, 1, !dbg !2944
  store i32 %inc, i32* %i, align 4, !dbg !2944
  br label %for.cond, !dbg !2946, !llvm.loop !2947

for.end:                                          ; preds = %for.cond
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !2949
  br label %if.end153, !dbg !2950

if.end153:                                        ; preds = %for.end, %if.then148
  br label %end, !dbg !2951

if.end154:                                        ; preds = %if.then145
  br label %if.end155, !dbg !2952

if.end155:                                        ; preds = %if.end154, %if.end143
  %26 = load i8*, i8** %w_name, align 8, !dbg !2953
  %call156 = call %struct.Writer* @writer_get_by_name(i8* %26), !dbg !2954
  store %struct.Writer* %call156, %struct.Writer** %w, align 8, !dbg !2955
  %27 = load %struct.Writer*, %struct.Writer** %w, align 8, !dbg !2956
  %tobool157 = icmp ne %struct.Writer* %27, null, !dbg !2956
  br i1 %tobool157, label %if.end159, label %if.then158, !dbg !2958

if.then158:                                       ; preds = %if.end155
  %28 = load i8*, i8** %w_name, align 8, !dbg !2959
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i32 0, i32 0), i8* %28), !dbg !2961
  store i32 -22, i32* %ret, align 4, !dbg !2962
  br label %end, !dbg !2963

if.end159:                                        ; preds = %if.end155
  %29 = load %struct.Writer*, %struct.Writer** %w, align 8, !dbg !2964
  %30 = load i8*, i8** %w_args, align 8, !dbg !2966
  %call160 = call i32 @writer_open(%struct.WriterContext** %wctx, %struct.Writer* %29, i8* %30, %struct.section* getelementptr inbounds ([42 x %struct.section], [42 x %struct.section]* @sections, i32 0, i32 0), i32 42), !dbg !2967
  store i32 %call160, i32* %ret, align 4, !dbg !2968
  %cmp161 = icmp sge i32 %call160, 0, !dbg !2969
  br i1 %cmp161, label %if.then162, label %if.end205, !dbg !2970

if.then162:                                       ; preds = %if.end159
  %31 = load %struct.Writer*, %struct.Writer** %w, align 8, !dbg !2971
  %cmp163 = icmp eq %struct.Writer* %31, @xml_writer, !dbg !2974
  br i1 %cmp163, label %if.then164, label %if.end165, !dbg !2975

if.then164:                                       ; preds = %if.then162
  %32 = load %struct.WriterContext*, %struct.WriterContext** %wctx, align 8, !dbg !2976
  %string_validation_utf8_flags = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %32, i32 0, i32 15, !dbg !2977
  %33 = load i32, i32* %string_validation_utf8_flags, align 8, !dbg !2978
  %or = or i32 %33, 8, !dbg !2978
  store i32 %or, i32* %string_validation_utf8_flags, align 8, !dbg !2978
  br label %if.end165, !dbg !2976

if.end165:                                        ; preds = %if.then164, %if.then162
  %34 = load %struct.WriterContext*, %struct.WriterContext** %wctx, align 8, !dbg !2979
  call void @writer_print_section_header(%struct.WriterContext* %34, i32 34), !dbg !2980
  %35 = load i32, i32* @do_show_program_version, align 4, !dbg !2981
  %tobool166 = icmp ne i32 %35, 0, !dbg !2981
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !2983

if.then167:                                       ; preds = %if.end165
  %36 = load %struct.WriterContext*, %struct.WriterContext** %wctx, align 8, !dbg !2984
  call void @ffprobe_show_program_version(%struct.WriterContext* %36), !dbg !2985
  br label %if.end168, !dbg !2985

if.end168:                                        ; preds = %if.then167, %if.end165
  %37 = load i32, i32* @do_show_library_versions, align 4, !dbg !2986
  %tobool169 = icmp ne i32 %37, 0, !dbg !2986
  br i1 %tobool169, label %if.then170, label %if.end171, !dbg !2988

if.then170:                                       ; preds = %if.end168
  %38 = load %struct.WriterContext*, %struct.WriterContext** %wctx, align 8, !dbg !2989
  call void @ffprobe_show_library_versions(%struct.WriterContext* %38), !dbg !2990
  br label %if.end171, !dbg !2990

if.end171:                                        ; preds = %if.then170, %if.end168
  %39 = load i32, i32* @do_show_pixel_formats, align 4, !dbg !2991
  %tobool172 = icmp ne i32 %39, 0, !dbg !2991
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !2993

if.then173:                                       ; preds = %if.end171
  %40 = load %struct.WriterContext*, %struct.WriterContext** %wctx, align 8, !dbg !2994
  call void @ffprobe_show_pixel_formats(%struct.WriterContext* %40), !dbg !2995
  br label %if.end174, !dbg !2995

if.end174:                                        ; preds = %if.then173, %if.end171
  %41 = load i8*, i8** @input_filename, align 8, !dbg !2996
  %tobool175 = icmp ne i8* %41, null, !dbg !2996
  br i1 %tobool175, label %if.else, label %land.lhs.true176, !dbg !2998

land.lhs.true176:                                 ; preds = %if.end174
  %42 = load i32, i32* @do_show_format, align 4, !dbg !2999
  %tobool177 = icmp ne i32 %42, 0, !dbg !2999
  br i1 %tobool177, label %if.then194, label %lor.lhs.false178, !dbg !3000

lor.lhs.false178:                                 ; preds = %land.lhs.true176
  %43 = load i32, i32* @do_show_programs, align 4, !dbg !3001
  %tobool179 = icmp ne i32 %43, 0, !dbg !3001
  br i1 %tobool179, label %if.then194, label %lor.lhs.false180, !dbg !3003

lor.lhs.false180:                                 ; preds = %lor.lhs.false178
  %44 = load i32, i32* @do_show_streams, align 4, !dbg !3004
  %tobool181 = icmp ne i32 %44, 0, !dbg !3004
  br i1 %tobool181, label %if.then194, label %lor.lhs.false182, !dbg !3006

lor.lhs.false182:                                 ; preds = %lor.lhs.false180
  %45 = load i32, i32* @do_show_chapters, align 4, !dbg !3007
  %tobool183 = icmp ne i32 %45, 0, !dbg !3007
  br i1 %tobool183, label %if.then194, label %lor.lhs.false184, !dbg !3009

lor.lhs.false184:                                 ; preds = %lor.lhs.false182
  %46 = load i32, i32* @do_show_packets, align 4, !dbg !3010
  %tobool185 = icmp ne i32 %46, 0, !dbg !3010
  br i1 %tobool185, label %if.then194, label %lor.lhs.false186, !dbg !3012

lor.lhs.false186:                                 ; preds = %lor.lhs.false184
  %47 = load i32, i32* @do_show_error, align 4, !dbg !3013
  %tobool187 = icmp ne i32 %47, 0, !dbg !3013
  br i1 %tobool187, label %if.then194, label %lor.lhs.false188, !dbg !3015

lor.lhs.false188:                                 ; preds = %lor.lhs.false186
  %48 = load i32, i32* @do_show_program_version, align 4, !dbg !3016
  %tobool189 = icmp ne i32 %48, 0, !dbg !3016
  br i1 %tobool189, label %if.else, label %land.lhs.true190, !dbg !3017

land.lhs.true190:                                 ; preds = %lor.lhs.false188
  %49 = load i32, i32* @do_show_library_versions, align 4, !dbg !3018
  %tobool191 = icmp ne i32 %49, 0, !dbg !3018
  br i1 %tobool191, label %if.else, label %land.lhs.true192, !dbg !3019

land.lhs.true192:                                 ; preds = %land.lhs.true190
  %50 = load i32, i32* @do_show_pixel_formats, align 4, !dbg !3020
  %tobool193 = icmp ne i32 %50, 0, !dbg !3020
  br i1 %tobool193, label %if.else, label %if.then194, !dbg !3021

if.then194:                                       ; preds = %land.lhs.true192, %lor.lhs.false186, %lor.lhs.false184, %lor.lhs.false182, %lor.lhs.false180, %lor.lhs.false178, %land.lhs.true176
  call void @show_usage(), !dbg !3023
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0)), !dbg !3025
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @program_name, i32 0, i32 0)), !dbg !3026
  store i32 -22, i32* %ret, align 4, !dbg !3027
  br label %if.end204, !dbg !3028

if.else:                                          ; preds = %land.lhs.true192, %land.lhs.true190, %lor.lhs.false188, %if.end174
  %51 = load i8*, i8** @input_filename, align 8, !dbg !3029
  %tobool195 = icmp ne i8* %51, null, !dbg !3029
  br i1 %tobool195, label %if.then196, label %if.end203, !dbg !3029

if.then196:                                       ; preds = %if.else
  %52 = load %struct.WriterContext*, %struct.WriterContext** %wctx, align 8, !dbg !3032
  %53 = load i8*, i8** @input_filename, align 8, !dbg !3034
  %call197 = call i32 @probe_file(%struct.WriterContext* %52, i8* %53), !dbg !3035
  store i32 %call197, i32* %ret, align 4, !dbg !3036
  %54 = load i32, i32* %ret, align 4, !dbg !3037
  %cmp198 = icmp slt i32 %54, 0, !dbg !3039
  br i1 %cmp198, label %land.lhs.true199, label %if.end202, !dbg !3040

land.lhs.true199:                                 ; preds = %if.then196
  %55 = load i32, i32* @do_show_error, align 4, !dbg !3041
  %tobool200 = icmp ne i32 %55, 0, !dbg !3041
  br i1 %tobool200, label %if.then201, label %if.end202, !dbg !3043

if.then201:                                       ; preds = %land.lhs.true199
  %56 = load %struct.WriterContext*, %struct.WriterContext** %wctx, align 8, !dbg !3044
  %57 = load i32, i32* %ret, align 4, !dbg !3045
  call void @show_error(%struct.WriterContext* %56, i32 %57), !dbg !3046
  br label %if.end202, !dbg !3046

if.end202:                                        ; preds = %if.then201, %land.lhs.true199, %if.then196
  br label %if.end203, !dbg !3047

if.end203:                                        ; preds = %if.end202, %if.else
  br label %if.end204

if.end204:                                        ; preds = %if.end203, %if.then194
  %58 = load %struct.WriterContext*, %struct.WriterContext** %wctx, align 8, !dbg !3048
  call void @writer_print_section_footer(%struct.WriterContext* %58), !dbg !3049
  call void @writer_close(%struct.WriterContext** %wctx), !dbg !3050
  br label %if.end205, !dbg !3051

if.end205:                                        ; preds = %if.end204, %if.end159
  br label %end, !dbg !3052

end:                                              ; preds = %if.end205, %if.then158, %if.end153, %if.then142, %if.then138, %if.then131, %if.then
  call void @av_freep(i8* bitcast (i8** @print_format to i8*)), !dbg !3054
  call void @av_freep(i8* bitcast (%struct.ReadInterval** @read_intervals to i8*)), !dbg !3055
  call void @av_hash_freep(%struct.AVHashContext** @hash), !dbg !3056
  call void @uninit_opts(), !dbg !3057
  store i32 0, i32* %i, align 4, !dbg !3058
  br label %for.cond206, !dbg !3060

for.cond206:                                      ; preds = %for.inc210, %end
  %59 = load i32, i32* %i, align 4, !dbg !3061
  %conv = sext i32 %59 to i64, !dbg !3061
  %cmp207 = icmp ult i64 %conv, 42, !dbg !3064
  br i1 %cmp207, label %for.body209, label %for.end212, !dbg !3065

for.body209:                                      ; preds = %for.cond206
  %60 = load i32, i32* %i, align 4, !dbg !3066
  %idxprom = sext i32 %60 to i64, !dbg !3067
  %arrayidx = getelementptr inbounds [42 x %struct.section], [42 x %struct.section]* @sections, i64 0, i64 %idxprom, !dbg !3067
  %entries_to_show = getelementptr inbounds %struct.section, %struct.section* %arrayidx, i32 0, i32 6, !dbg !3068
  call void @av_dict_free(%struct.AVDictionary** %entries_to_show), !dbg !3069
  br label %for.inc210, !dbg !3069

for.inc210:                                       ; preds = %for.body209
  %61 = load i32, i32* %i, align 4, !dbg !3070
  %inc211 = add nsw i32 %61, 1, !dbg !3070
  store i32 %inc211, i32* %i, align 4, !dbg !3070
  br label %for.cond206, !dbg !3072, !llvm.loop !3073

for.end212:                                       ; preds = %for.cond206
  %call213 = call i32 @avformat_network_deinit(), !dbg !3075
  %62 = load i32, i32* %ret, align 4, !dbg !3076
  %cmp214 = icmp slt i32 %62, 0, !dbg !3077
  %conv215 = zext i1 %cmp214 to i32, !dbg !3077
  ret i32 %conv215, !dbg !3078
}

declare void @init_dynload() #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) #3

declare void @av_log_set_flags(i32) #2

declare void @register_exit(void (i32)*) #2

; Function Attrs: nounwind uwtable
define internal void @ffprobe_cleanup(i32 %ret) #0 !dbg !3079 {
entry:
  %ret.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %ret, i32* %ret.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.addr, metadata !3082, metadata !2571), !dbg !3083
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3084, metadata !2571), !dbg !3085
  store i32 0, i32* %i, align 4, !dbg !3086
  br label %for.cond, !dbg !3088

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3089
  %conv = sext i32 %0 to i64, !dbg !3089
  %cmp = icmp ult i64 %conv, 42, !dbg !3092
  br i1 %cmp, label %for.body, label %for.end, !dbg !3093

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3094
  %idxprom = sext i32 %1 to i64, !dbg !3095
  %arrayidx = getelementptr inbounds [42 x %struct.section], [42 x %struct.section]* @sections, i64 0, i64 %idxprom, !dbg !3095
  %entries_to_show = getelementptr inbounds %struct.section, %struct.section* %arrayidx, i32 0, i32 6, !dbg !3096
  call void @av_dict_free(%struct.AVDictionary** %entries_to_show), !dbg !3097
  br label %for.inc, !dbg !3097

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !3098
  %inc = add nsw i32 %2, 1, !dbg !3098
  store i32 %inc, i32* %i, align 4, !dbg !3098
  br label %for.cond, !dbg !3100, !llvm.loop !3101

for.end:                                          ; preds = %for.cond
  %call = call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* @log_mutex) #9, !dbg !3103
  ret void, !dbg !3104
}

declare void @parse_loglevel(i32, i8**, %struct.OptionDef*) #2

declare i32 @avformat_network_init() #2

declare void @init_opts() #2

declare void @avdevice_register_all() #2

declare void @show_banner(i32, i8**, %struct.OptionDef*) #2

declare void @parse_options(i8*, i32, i8**, %struct.OptionDef*, void (i8*, i8*)*) #2

; Function Attrs: nounwind uwtable
define internal void @opt_input_file(i8* %optctx, i8* %arg) #0 !dbg !3105 {
entry:
  %optctx.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !3108, metadata !2571), !dbg !3109
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3110, metadata !2571), !dbg !3111
  %0 = load i8*, i8** @input_filename, align 8, !dbg !3112
  %tobool = icmp ne i8* %0, null, !dbg !3112
  br i1 %tobool, label %if.then, label %if.end, !dbg !3114

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !3115
  %2 = load i8*, i8** @input_filename, align 8, !dbg !3117
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.180, i32 0, i32 0), i8* %1, i8* %2), !dbg !3118
  call void @exit_program(i32 1) #13, !dbg !3119
  unreachable, !dbg !3119

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !3120
  %call = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.181, i32 0, i32 0)) #14, !dbg !3122
  %tobool1 = icmp ne i32 %call, 0, !dbg !3122
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !3123

if.then2:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.182, i32 0, i32 0), i8** %arg.addr, align 8, !dbg !3124
  br label %if.end3, !dbg !3125

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !3126
  store i8* %4, i8** @input_filename, align 8, !dbg !3127
  ret void, !dbg !3128
}

; Function Attrs: nounwind uwtable
define internal void @log_callback(i8* %ptr, i32 %level, i8* %fmt, %struct.__va_list_tag* %vl) #0 !dbg !2355 {
entry:
  %ptr.addr = alloca i8*, align 8
  %level.addr = alloca i32, align 4
  %fmt.addr = alloca i8*, align 8
  %vl.addr = alloca %struct.__va_list_tag*, align 8
  %avc = alloca %struct.AVClass*, align 8
  %vl2 = alloca [1 x %struct.__va_list_tag], align 16
  %line = alloca [1024 x i8], align 16
  %new_log_buffer = alloca i8*, align 8
  %msg = alloca i8*, align 8
  %i = alloca i32, align 4
  %parent = alloca %struct.AVClass**, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !3129, metadata !2571), !dbg !3130
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !3131, metadata !2571), !dbg !3132
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !3133, metadata !2571), !dbg !3134
  store %struct.__va_list_tag* %vl, %struct.__va_list_tag** %vl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %vl.addr, metadata !3135, metadata !2571), !dbg !3136
  call void @llvm.dbg.declare(metadata %struct.AVClass** %avc, metadata !3137, metadata !2571), !dbg !3138
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !3139
  %tobool = icmp ne i8* %0, null, !dbg !3139
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3139

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !3140
  %2 = bitcast i8* %1 to %struct.AVClass**, !dbg !3142
  %3 = load %struct.AVClass*, %struct.AVClass** %2, align 8, !dbg !3143
  br label %cond.end, !dbg !3144

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3145

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.AVClass* [ %3, %cond.true ], [ null, %cond.false ], !dbg !3147
  store %struct.AVClass* %cond, %struct.AVClass** %avc, align 8, !dbg !3149
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %vl2, metadata !3150, metadata !2571), !dbg !3157
  call void @llvm.dbg.declare(metadata [1024 x i8]* %line, metadata !3158, metadata !2571), !dbg !3159
  call void @llvm.dbg.declare(metadata i8** %new_log_buffer, metadata !3160, metadata !2571), !dbg !3161
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vl2, i32 0, i32 0, !dbg !3162
  %4 = load %struct.__va_list_tag*, %struct.__va_list_tag** %vl.addr, align 8, !dbg !3162
  %5 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !3162
  %6 = bitcast %struct.__va_list_tag* %4 to i8*, !dbg !3162
  call void @llvm.va_copy(i8* %5, i8* %6), !dbg !3162
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !3163
  %8 = load i32, i32* %level.addr, align 4, !dbg !3164
  %9 = load i8*, i8** %fmt.addr, align 8, !dbg !3165
  %10 = load %struct.__va_list_tag*, %struct.__va_list_tag** %vl.addr, align 8, !dbg !3166
  call void @av_log_default_callback(i8* %7, i32 %8, i8* %9, %struct.__va_list_tag* %10), !dbg !3167
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !3168
  %12 = load i32, i32* %level.addr, align 4, !dbg !3169
  %13 = load i8*, i8** %fmt.addr, align 8, !dbg !3170
  %arraydecay1 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vl2, i32 0, i32 0, !dbg !3171
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !3172
  call void @av_log_format_line(i8* %11, i32 %12, i8* %13, %struct.__va_list_tag* %arraydecay1, i8* %arraydecay2, i32 1024, i32* @log_callback.print_prefix), !dbg !3173
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %vl2, i32 0, i32 0, !dbg !3174
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !3174
  call void @llvm.va_end(i8* %arraydecay34), !dbg !3174
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @log_mutex) #9, !dbg !3175
  %14 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !3176
  %15 = bitcast %struct.LogBuffer* %14 to i8*, !dbg !3176
  %16 = load i32, i32* @log_buffer_size, align 4, !dbg !3177
  %add = add nsw i32 %16, 1, !dbg !3178
  %conv = sext i32 %add to i64, !dbg !3177
  %call5 = call i8* @av_realloc_array(i8* %15, i64 %conv, i64 48), !dbg !3179
  store i8* %call5, i8** %new_log_buffer, align 8, !dbg !3180
  %17 = load i8*, i8** %new_log_buffer, align 8, !dbg !3181
  %tobool6 = icmp ne i8* %17, null, !dbg !3181
  br i1 %tobool6, label %if.then, label %if.end71, !dbg !3183

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8** %msg, metadata !3184, metadata !2571), !dbg !3186
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3187, metadata !2571), !dbg !3188
  %18 = load i8*, i8** %new_log_buffer, align 8, !dbg !3189
  %19 = bitcast i8* %18 to %struct.LogBuffer*, !dbg !3189
  store %struct.LogBuffer* %19, %struct.LogBuffer** @log_buffer, align 8, !dbg !3190
  %20 = load i32, i32* @log_buffer_size, align 4, !dbg !3191
  %idxprom = sext i32 %20 to i64, !dbg !3192
  %21 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !3192
  %arrayidx = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %21, i64 %idxprom, !dbg !3192
  %22 = bitcast %struct.LogBuffer* %arrayidx to i8*, !dbg !3193
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 48, i32 8, i1 false), !dbg !3193
  %23 = load %struct.AVClass*, %struct.AVClass** %avc, align 8, !dbg !3194
  %tobool7 = icmp ne %struct.AVClass* %23, null, !dbg !3194
  br i1 %tobool7, label %cond.true8, label %cond.false11, !dbg !3194

cond.true8:                                       ; preds = %if.then
  %24 = load %struct.AVClass*, %struct.AVClass** %avc, align 8, !dbg !3195
  %item_name = getelementptr inbounds %struct.AVClass, %struct.AVClass* %24, i32 0, i32 1, !dbg !3197
  %25 = load i8* (i8*)*, i8* (i8*)** %item_name, align 8, !dbg !3197
  %26 = load i8*, i8** %ptr.addr, align 8, !dbg !3198
  %call9 = call i8* %25(i8* %26), !dbg !3195
  %call10 = call noalias i8* @av_strdup(i8* %call9), !dbg !3199
  br label %cond.end12, !dbg !3201

cond.false11:                                     ; preds = %if.then
  br label %cond.end12, !dbg !3202

cond.end12:                                       ; preds = %cond.false11, %cond.true8
  %cond13 = phi i8* [ %call10, %cond.true8 ], [ null, %cond.false11 ], !dbg !3204
  %27 = load i32, i32* @log_buffer_size, align 4, !dbg !3206
  %idxprom14 = sext i32 %27 to i64, !dbg !3207
  %28 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !3207
  %arrayidx15 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %28, i64 %idxprom14, !dbg !3207
  %context_name = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx15, i32 0, i32 0, !dbg !3208
  store i8* %cond13, i8** %context_name, align 8, !dbg !3209
  %29 = load %struct.AVClass*, %struct.AVClass** %avc, align 8, !dbg !3210
  %tobool16 = icmp ne %struct.AVClass* %29, null, !dbg !3210
  br i1 %tobool16, label %if.then17, label %if.end28, !dbg !3212

if.then17:                                        ; preds = %cond.end12
  %30 = load %struct.AVClass*, %struct.AVClass** %avc, align 8, !dbg !3213
  %get_category = getelementptr inbounds %struct.AVClass, %struct.AVClass* %30, i32 0, i32 9, !dbg !3216
  %31 = load i32 (i8*)*, i32 (i8*)** %get_category, align 8, !dbg !3216
  %tobool18 = icmp ne i32 (i8*)* %31, null, !dbg !3213
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !3217

if.then19:                                        ; preds = %if.then17
  %32 = load %struct.AVClass*, %struct.AVClass** %avc, align 8, !dbg !3218
  %get_category20 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %32, i32 0, i32 9, !dbg !3220
  %33 = load i32 (i8*)*, i32 (i8*)** %get_category20, align 8, !dbg !3220
  %34 = load i8*, i8** %ptr.addr, align 8, !dbg !3221
  %call21 = call i32 %33(i8* %34), !dbg !3218
  %35 = load i32, i32* @log_buffer_size, align 4, !dbg !3222
  %idxprom22 = sext i32 %35 to i64, !dbg !3223
  %36 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !3223
  %arrayidx23 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %36, i64 %idxprom22, !dbg !3223
  %category = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx23, i32 0, i32 3, !dbg !3224
  store i32 %call21, i32* %category, align 8, !dbg !3225
  br label %if.end, !dbg !3223

if.else:                                          ; preds = %if.then17
  %37 = load %struct.AVClass*, %struct.AVClass** %avc, align 8, !dbg !3226
  %category24 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %37, i32 0, i32 8, !dbg !3227
  %38 = load i32, i32* %category24, align 8, !dbg !3227
  %39 = load i32, i32* @log_buffer_size, align 4, !dbg !3228
  %idxprom25 = sext i32 %39 to i64, !dbg !3229
  %40 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !3229
  %arrayidx26 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %40, i64 %idxprom25, !dbg !3229
  %category27 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx26, i32 0, i32 3, !dbg !3230
  store i32 %38, i32* %category27, align 8, !dbg !3231
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then19
  br label %if.end28, !dbg !3232

if.end28:                                         ; preds = %if.end, %cond.end12
  %41 = load i32, i32* %level.addr, align 4, !dbg !3233
  %42 = load i32, i32* @log_buffer_size, align 4, !dbg !3234
  %idxprom29 = sext i32 %42 to i64, !dbg !3235
  %43 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !3235
  %arrayidx30 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %43, i64 %idxprom29, !dbg !3235
  %log_level = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx30, i32 0, i32 1, !dbg !3236
  store i32 %41, i32* %log_level, align 8, !dbg !3237
  %arraydecay31 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i32 0, i32 0, !dbg !3238
  %call32 = call noalias i8* @av_strdup(i8* %arraydecay31), !dbg !3239
  %44 = load i32, i32* @log_buffer_size, align 4, !dbg !3240
  %idxprom33 = sext i32 %44 to i64, !dbg !3241
  %45 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !3241
  %arrayidx34 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %45, i64 %idxprom33, !dbg !3241
  %log_message = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx34, i32 0, i32 2, !dbg !3242
  store i8* %call32, i8** %log_message, align 8, !dbg !3243
  store i8* %call32, i8** %msg, align 8, !dbg !3244
  %46 = load i8*, i8** %msg, align 8, !dbg !3245
  %call35 = call i64 @strlen(i8* %46) #14, !dbg !3247
  %sub = sub i64 %call35, 1, !dbg !3248
  %conv36 = trunc i64 %sub to i32, !dbg !3247
  store i32 %conv36, i32* %i, align 4, !dbg !3249
  br label %for.cond, !dbg !3250

for.cond:                                         ; preds = %for.inc, %if.end28
  %47 = load i32, i32* %i, align 4, !dbg !3251
  %cmp = icmp sge i32 %47, 0, !dbg !3254
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3255

land.rhs:                                         ; preds = %for.cond
  %48 = load i32, i32* %i, align 4, !dbg !3256
  %idxprom38 = sext i32 %48 to i64, !dbg !3258
  %49 = load i8*, i8** %msg, align 8, !dbg !3258
  %arrayidx39 = getelementptr inbounds i8, i8* %49, i64 %idxprom38, !dbg !3258
  %50 = load i8, i8* %arrayidx39, align 1, !dbg !3258
  %conv40 = sext i8 %50 to i32, !dbg !3258
  %cmp41 = icmp eq i32 %conv40, 10, !dbg !3259
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %51 = phi i1 [ false, %for.cond ], [ %cmp41, %land.rhs ]
  br i1 %51, label %for.body, label %for.end, !dbg !3260

for.body:                                         ; preds = %land.end
  %52 = load i32, i32* %i, align 4, !dbg !3262
  %idxprom43 = sext i32 %52 to i64, !dbg !3264
  %53 = load i8*, i8** %msg, align 8, !dbg !3264
  %arrayidx44 = getelementptr inbounds i8, i8* %53, i64 %idxprom43, !dbg !3264
  store i8 0, i8* %arrayidx44, align 1, !dbg !3265
  br label %for.inc, !dbg !3266

for.inc:                                          ; preds = %for.body
  %54 = load i32, i32* %i, align 4, !dbg !3267
  %dec = add nsw i32 %54, -1, !dbg !3267
  store i32 %dec, i32* %i, align 4, !dbg !3267
  br label %for.cond, !dbg !3269, !llvm.loop !3270

for.end:                                          ; preds = %land.end
  %55 = load %struct.AVClass*, %struct.AVClass** %avc, align 8, !dbg !3272
  %tobool45 = icmp ne %struct.AVClass* %55, null, !dbg !3272
  br i1 %tobool45, label %land.lhs.true, label %if.end70, !dbg !3274

land.lhs.true:                                    ; preds = %for.end
  %56 = load %struct.AVClass*, %struct.AVClass** %avc, align 8, !dbg !3275
  %parent_log_context_offset = getelementptr inbounds %struct.AVClass, %struct.AVClass* %56, i32 0, i32 5, !dbg !3277
  %57 = load i32, i32* %parent_log_context_offset, align 8, !dbg !3277
  %tobool46 = icmp ne i32 %57, 0, !dbg !3275
  br i1 %tobool46, label %if.then47, label %if.end70, !dbg !3278

if.then47:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.AVClass*** %parent, metadata !3279, metadata !2571), !dbg !3281
  %58 = load i8*, i8** %ptr.addr, align 8, !dbg !3282
  %59 = load %struct.AVClass*, %struct.AVClass** %avc, align 8, !dbg !3283
  %parent_log_context_offset48 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %59, i32 0, i32 5, !dbg !3284
  %60 = load i32, i32* %parent_log_context_offset48, align 8, !dbg !3284
  %idx.ext = sext i32 %60 to i64, !dbg !3285
  %add.ptr = getelementptr inbounds i8, i8* %58, i64 %idx.ext, !dbg !3285
  %61 = bitcast i8* %add.ptr to %struct.AVClass***, !dbg !3286
  %62 = load %struct.AVClass**, %struct.AVClass*** %61, align 8, !dbg !3286
  store %struct.AVClass** %62, %struct.AVClass*** %parent, align 8, !dbg !3281
  %63 = load %struct.AVClass**, %struct.AVClass*** %parent, align 8, !dbg !3287
  %tobool49 = icmp ne %struct.AVClass** %63, null, !dbg !3287
  br i1 %tobool49, label %land.lhs.true50, label %if.end69, !dbg !3289

land.lhs.true50:                                  ; preds = %if.then47
  %64 = load %struct.AVClass**, %struct.AVClass*** %parent, align 8, !dbg !3290
  %65 = load %struct.AVClass*, %struct.AVClass** %64, align 8, !dbg !3292
  %tobool51 = icmp ne %struct.AVClass* %65, null, !dbg !3292
  br i1 %tobool51, label %if.then52, label %if.end69, !dbg !3293

if.then52:                                        ; preds = %land.lhs.true50
  %66 = load %struct.AVClass**, %struct.AVClass*** %parent, align 8, !dbg !3294
  %67 = load %struct.AVClass*, %struct.AVClass** %66, align 8, !dbg !3296
  %item_name53 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %67, i32 0, i32 1, !dbg !3297
  %68 = load i8* (i8*)*, i8* (i8*)** %item_name53, align 8, !dbg !3297
  %69 = load %struct.AVClass**, %struct.AVClass*** %parent, align 8, !dbg !3298
  %70 = bitcast %struct.AVClass** %69 to i8*, !dbg !3298
  %call54 = call i8* %68(i8* %70), !dbg !3299
  %call55 = call noalias i8* @av_strdup(i8* %call54), !dbg !3300
  %71 = load i32, i32* @log_buffer_size, align 4, !dbg !3302
  %idxprom56 = sext i32 %71 to i64, !dbg !3303
  %72 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !3303
  %arrayidx57 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %72, i64 %idxprom56, !dbg !3303
  %parent_name = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx57, i32 0, i32 4, !dbg !3304
  store i8* %call55, i8** %parent_name, align 8, !dbg !3305
  %73 = load %struct.AVClass**, %struct.AVClass*** %parent, align 8, !dbg !3306
  %74 = load %struct.AVClass*, %struct.AVClass** %73, align 8, !dbg !3307
  %get_category58 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %74, i32 0, i32 9, !dbg !3308
  %75 = load i32 (i8*)*, i32 (i8*)** %get_category58, align 8, !dbg !3308
  %tobool59 = icmp ne i32 (i8*)* %75, null, !dbg !3309
  br i1 %tobool59, label %cond.true60, label %cond.false63, !dbg !3309

cond.true60:                                      ; preds = %if.then52
  %76 = load %struct.AVClass**, %struct.AVClass*** %parent, align 8, !dbg !3310
  %77 = load %struct.AVClass*, %struct.AVClass** %76, align 8, !dbg !3311
  %get_category61 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %77, i32 0, i32 9, !dbg !3312
  %78 = load i32 (i8*)*, i32 (i8*)** %get_category61, align 8, !dbg !3312
  %79 = load %struct.AVClass**, %struct.AVClass*** %parent, align 8, !dbg !3313
  %80 = bitcast %struct.AVClass** %79 to i8*, !dbg !3313
  %call62 = call i32 %78(i8* %80), !dbg !3314
  br label %cond.end65, !dbg !3315

cond.false63:                                     ; preds = %if.then52
  %81 = load %struct.AVClass**, %struct.AVClass*** %parent, align 8, !dbg !3316
  %82 = load %struct.AVClass*, %struct.AVClass** %81, align 8, !dbg !3318
  %category64 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %82, i32 0, i32 8, !dbg !3319
  %83 = load i32, i32* %category64, align 8, !dbg !3319
  br label %cond.end65, !dbg !3320

cond.end65:                                       ; preds = %cond.false63, %cond.true60
  %cond66 = phi i32 [ %call62, %cond.true60 ], [ %83, %cond.false63 ], !dbg !3321
  %84 = load i32, i32* @log_buffer_size, align 4, !dbg !3323
  %idxprom67 = sext i32 %84 to i64, !dbg !3324
  %85 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !3324
  %arrayidx68 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %85, i64 %idxprom67, !dbg !3324
  %parent_category = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx68, i32 0, i32 5, !dbg !3325
  store i32 %cond66, i32* %parent_category, align 8, !dbg !3326
  br label %if.end69, !dbg !3327

if.end69:                                         ; preds = %cond.end65, %land.lhs.true50, %if.then47
  br label %if.end70, !dbg !3328

if.end70:                                         ; preds = %if.end69, %land.lhs.true, %for.end
  %86 = load i32, i32* @log_buffer_size, align 4, !dbg !3329
  %inc = add nsw i32 %86, 1, !dbg !3329
  store i32 %inc, i32* @log_buffer_size, align 4, !dbg !3329
  br label %if.end71, !dbg !3330

if.end71:                                         ; preds = %if.end70, %cond.end
  %call72 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @log_mutex) #9, !dbg !3331
  ret void, !dbg !3332
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @check_section_show_entries(i32 %section_id) #4 !dbg !3333 {
entry:
  %retval = alloca i32, align 4
  %section_id.addr = alloca i32, align 4
  %id = alloca i32*, align 8
  %section = alloca %struct.section*, align 8
  store i32 %section_id, i32* %section_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %section_id.addr, metadata !3336, metadata !2571), !dbg !3337
  call void @llvm.dbg.declare(metadata i32** %id, metadata !3338, metadata !2571), !dbg !3339
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !3340, metadata !2571), !dbg !3342
  %0 = load i32, i32* %section_id.addr, align 4, !dbg !3343
  %idxprom = sext i32 %0 to i64, !dbg !3344
  %arrayidx = getelementptr inbounds [42 x %struct.section], [42 x %struct.section]* @sections, i64 0, i64 %idxprom, !dbg !3344
  store %struct.section* %arrayidx, %struct.section** %section, align 8, !dbg !3342
  %1 = load i32, i32* %section_id.addr, align 4, !dbg !3345
  %idxprom1 = sext i32 %1 to i64, !dbg !3347
  %arrayidx2 = getelementptr inbounds [42 x %struct.section], [42 x %struct.section]* @sections, i64 0, i64 %idxprom1, !dbg !3347
  %show_all_entries = getelementptr inbounds %struct.section, %struct.section* %arrayidx2, i32 0, i32 7, !dbg !3348
  %2 = load i32, i32* %show_all_entries, align 8, !dbg !3348
  %tobool = icmp ne i32 %2, 0, !dbg !3347
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !3349

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %section_id.addr, align 4, !dbg !3350
  %idxprom3 = sext i32 %3 to i64, !dbg !3352
  %arrayidx4 = getelementptr inbounds [42 x %struct.section], [42 x %struct.section]* @sections, i64 0, i64 %idxprom3, !dbg !3352
  %entries_to_show = getelementptr inbounds %struct.section, %struct.section* %arrayidx4, i32 0, i32 6, !dbg !3353
  %4 = load %struct.AVDictionary*, %struct.AVDictionary** %entries_to_show, align 16, !dbg !3353
  %tobool5 = icmp ne %struct.AVDictionary* %4, null, !dbg !3352
  br i1 %tobool5, label %if.then, label %if.end, !dbg !3354

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !3355
  br label %return, !dbg !3355

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.section*, %struct.section** %section, align 8, !dbg !3356
  %children_ids = getelementptr inbounds %struct.section, %struct.section* %5, i32 0, i32 3, !dbg !3358
  %arraydecay = getelementptr inbounds [11 x i32], [11 x i32]* %children_ids, i32 0, i32 0, !dbg !3356
  store i32* %arraydecay, i32** %id, align 8, !dbg !3359
  br label %for.cond, !dbg !3360

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32*, i32** %id, align 8, !dbg !3361
  %7 = load i32, i32* %6, align 4, !dbg !3364
  %cmp = icmp ne i32 %7, -1, !dbg !3365
  br i1 %cmp, label %for.body, label %for.end, !dbg !3366

for.body:                                         ; preds = %for.cond
  %8 = load i32*, i32** %id, align 8, !dbg !3367
  %9 = load i32, i32* %8, align 4, !dbg !3369
  %call = call i32 @check_section_show_entries(i32 %9), !dbg !3370
  %tobool6 = icmp ne i32 %call, 0, !dbg !3370
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !3371

if.then7:                                         ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !3372
  br label %return, !dbg !3372

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !3373

for.inc:                                          ; preds = %if.end8
  %10 = load i32*, i32** %id, align 8, !dbg !3375
  %incdec.ptr = getelementptr inbounds i32, i32* %10, i32 1, !dbg !3375
  store i32* %incdec.ptr, i32** %id, align 8, !dbg !3375
  br label %for.cond, !dbg !3377, !llvm.loop !3378

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3380
  br label %return, !dbg !3380

return:                                           ; preds = %for.end, %if.then7, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !3381
  ret i32 %11, !dbg !3381
}

declare void @av_log(i8*, i32, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal void @writer_register_all() #0 !dbg !2399 {
entry:
  %0 = load i32, i32* @writer_register_all.initialized, align 4, !dbg !3382
  %tobool = icmp ne i32 %0, 0, !dbg !3382
  br i1 %tobool, label %if.then, label %if.end, !dbg !3384

if.then:                                          ; preds = %entry
  br label %return, !dbg !3385

if.end:                                           ; preds = %entry
  store i32 1, i32* @writer_register_all.initialized, align 4, !dbg !3386
  %call = call i32 @writer_register(%struct.Writer* @default_writer), !dbg !3387
  %call1 = call i32 @writer_register(%struct.Writer* @compact_writer), !dbg !3388
  %call2 = call i32 @writer_register(%struct.Writer* @csv_writer), !dbg !3389
  %call3 = call i32 @writer_register(%struct.Writer* @flat_writer), !dbg !3390
  %call4 = call i32 @writer_register(%struct.Writer* @ini_writer), !dbg !3391
  %call5 = call i32 @writer_register(%struct.Writer* @json_writer), !dbg !3392
  %call6 = call i32 @writer_register(%struct.Writer* @xml_writer), !dbg !3393
  br label %return, !dbg !3394

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3395
}

declare noalias i8* @av_strdup(i8*) #2

declare i8* @av_strtok(i8*, i8*, i8**) #2

declare i32 @av_hash_alloc(%struct.AVHashContext**, i8*) #2

declare i8* @av_hash_names(i32) #2

; Function Attrs: nounwind uwtable
define internal %struct.Writer* @writer_get_by_name(i8* %name) #0 !dbg !3397 {
entry:
  %retval = alloca %struct.Writer*, align 8
  %name.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3400, metadata !2571), !dbg !3401
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3402, metadata !2571), !dbg !3403
  store i32 0, i32* %i, align 4, !dbg !3404
  br label %for.cond, !dbg !3406

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3407
  %idxprom = sext i32 %0 to i64, !dbg !3410
  %arrayidx = getelementptr inbounds [65 x %struct.Writer*], [65 x %struct.Writer*]* @registered_writers, i64 0, i64 %idxprom, !dbg !3410
  %1 = load %struct.Writer*, %struct.Writer** %arrayidx, align 8, !dbg !3410
  %tobool = icmp ne %struct.Writer* %1, null, !dbg !3411
  br i1 %tobool, label %for.body, label %for.end, !dbg !3411

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !3412
  %idxprom1 = sext i32 %2 to i64, !dbg !3414
  %arrayidx2 = getelementptr inbounds [65 x %struct.Writer*], [65 x %struct.Writer*]* @registered_writers, i64 0, i64 %idxprom1, !dbg !3414
  %3 = load %struct.Writer*, %struct.Writer** %arrayidx2, align 8, !dbg !3414
  %name3 = getelementptr inbounds %struct.Writer, %struct.Writer* %3, i32 0, i32 2, !dbg !3415
  %4 = load i8*, i8** %name3, align 8, !dbg !3415
  %5 = load i8*, i8** %name.addr, align 8, !dbg !3416
  %call = call i32 @strcmp(i8* %4, i8* %5) #14, !dbg !3417
  %tobool4 = icmp ne i32 %call, 0, !dbg !3417
  br i1 %tobool4, label %if.end, label %if.then, !dbg !3418

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !3419
  %idxprom5 = sext i32 %6 to i64, !dbg !3420
  %arrayidx6 = getelementptr inbounds [65 x %struct.Writer*], [65 x %struct.Writer*]* @registered_writers, i64 0, i64 %idxprom5, !dbg !3420
  %7 = load %struct.Writer*, %struct.Writer** %arrayidx6, align 8, !dbg !3420
  store %struct.Writer* %7, %struct.Writer** %retval, align 8, !dbg !3421
  br label %return, !dbg !3421

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3422

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !3424
  %inc = add nsw i32 %8, 1, !dbg !3424
  store i32 %inc, i32* %i, align 4, !dbg !3424
  br label %for.cond, !dbg !3426, !llvm.loop !3427

for.end:                                          ; preds = %for.cond
  store %struct.Writer* null, %struct.Writer** %retval, align 8, !dbg !3429
  br label %return, !dbg !3429

return:                                           ; preds = %for.end, %if.then
  %9 = load %struct.Writer*, %struct.Writer** %retval, align 8, !dbg !3430
  ret %struct.Writer* %9, !dbg !3430
}

; Function Attrs: nounwind uwtable
define internal i32 @writer_open(%struct.WriterContext** %wctx, %struct.Writer* %writer, i8* %args, %struct.section* %sections, i32 %nb_sections) #0 !dbg !3431 {
entry:
  %retval = alloca i32, align 4
  %wctx.addr = alloca %struct.WriterContext**, align 8
  %writer.addr = alloca %struct.Writer*, align 8
  %args.addr = alloca i8*, align 8
  %sections.addr = alloca %struct.section*, align 8
  %nb_sections.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %priv_ctx = alloca i8*, align 8
  %opts = alloca %struct.AVDictionary*, align 8
  %opt = alloca %struct.AVDictionaryEntry*, align 8
  %p = alloca i8*, align 8
  %endp = alloca i8*, align 8
  %p0 = alloca i8*, align 8
  %code = alloca i32, align 4
  %bp = alloca %struct.AVBPrint, align 8
  store %struct.WriterContext** %wctx, %struct.WriterContext*** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext*** %wctx.addr, metadata !3435, metadata !2571), !dbg !3436
  store %struct.Writer* %writer, %struct.Writer** %writer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Writer** %writer.addr, metadata !3437, metadata !2571), !dbg !3438
  store i8* %args, i8** %args.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !3439, metadata !2571), !dbg !3440
  store %struct.section* %sections, %struct.section** %sections.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.section** %sections.addr, metadata !3441, metadata !2571), !dbg !3442
  store i32 %nb_sections, i32* %nb_sections.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_sections.addr, metadata !3443, metadata !2571), !dbg !3444
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3445, metadata !2571), !dbg !3446
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3447, metadata !2571), !dbg !3448
  store i32 0, i32* %ret, align 4, !dbg !3448
  %call = call noalias i8* @av_mallocz(i64 10440), !dbg !3449
  %0 = bitcast i8* %call to %struct.WriterContext*, !dbg !3449
  %1 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3451
  store %struct.WriterContext* %0, %struct.WriterContext** %1, align 8, !dbg !3452
  %tobool = icmp ne %struct.WriterContext* %0, null, !dbg !3452
  br i1 %tobool, label %if.end, label %if.then, !dbg !3453

if.then:                                          ; preds = %entry
  store i32 -12, i32* %ret, align 4, !dbg !3454
  br label %fail, !dbg !3456

if.end:                                           ; preds = %entry
  %2 = load %struct.Writer*, %struct.Writer** %writer.addr, align 8, !dbg !3457
  %priv_size = getelementptr inbounds %struct.Writer, %struct.Writer* %2, i32 0, i32 1, !dbg !3459
  %3 = load i32, i32* %priv_size, align 8, !dbg !3459
  %conv = sext i32 %3 to i64, !dbg !3457
  %call1 = call noalias i8* @av_mallocz(i64 %conv), !dbg !3460
  %4 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3461
  %5 = load %struct.WriterContext*, %struct.WriterContext** %4, align 8, !dbg !3462
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 3, !dbg !3463
  store i8* %call1, i8** %priv, align 8, !dbg !3464
  %tobool2 = icmp ne i8* %call1, null, !dbg !3464
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !3465

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %ret, align 4, !dbg !3466
  br label %fail, !dbg !3468

if.end4:                                          ; preds = %if.end
  %6 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3469
  %7 = load %struct.WriterContext*, %struct.WriterContext** %6, align 8, !dbg !3470
  %class = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 0, !dbg !3471
  store %struct.AVClass* @writer_class, %struct.AVClass** %class, align 8, !dbg !3472
  %8 = load %struct.Writer*, %struct.Writer** %writer.addr, align 8, !dbg !3473
  %9 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3474
  %10 = load %struct.WriterContext*, %struct.WriterContext** %9, align 8, !dbg !3475
  %writer5 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %10, i32 0, i32 1, !dbg !3476
  store %struct.Writer* %8, %struct.Writer** %writer5, align 8, !dbg !3477
  %11 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3478
  %12 = load %struct.WriterContext*, %struct.WriterContext** %11, align 8, !dbg !3479
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %12, i32 0, i32 6, !dbg !3480
  store i32 -1, i32* %level, align 4, !dbg !3481
  %13 = load %struct.section*, %struct.section** %sections.addr, align 8, !dbg !3482
  %14 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3483
  %15 = load %struct.WriterContext*, %struct.WriterContext** %14, align 8, !dbg !3484
  %sections6 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %15, i32 0, i32 4, !dbg !3485
  store %struct.section* %13, %struct.section** %sections6, align 8, !dbg !3486
  %16 = load i32, i32* %nb_sections.addr, align 4, !dbg !3487
  %17 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3488
  %18 = load %struct.WriterContext*, %struct.WriterContext** %17, align 8, !dbg !3489
  %nb_sections7 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %18, i32 0, i32 5, !dbg !3490
  store i32 %16, i32* %nb_sections7, align 8, !dbg !3491
  %19 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3492
  %20 = load %struct.WriterContext*, %struct.WriterContext** %19, align 8, !dbg !3493
  %21 = bitcast %struct.WriterContext* %20 to i8*, !dbg !3493
  call void @av_opt_set_defaults(i8* %21), !dbg !3494
  %22 = load %struct.Writer*, %struct.Writer** %writer.addr, align 8, !dbg !3495
  %priv_class = getelementptr inbounds %struct.Writer, %struct.Writer* %22, i32 0, i32 0, !dbg !3497
  %23 = load %struct.AVClass*, %struct.AVClass** %priv_class, align 8, !dbg !3497
  %tobool8 = icmp ne %struct.AVClass* %23, null, !dbg !3495
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !3498

if.then9:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i8** %priv_ctx, metadata !3499, metadata !2571), !dbg !3501
  %24 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3502
  %25 = load %struct.WriterContext*, %struct.WriterContext** %24, align 8, !dbg !3503
  %priv10 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %25, i32 0, i32 3, !dbg !3504
  %26 = load i8*, i8** %priv10, align 8, !dbg !3504
  store i8* %26, i8** %priv_ctx, align 8, !dbg !3501
  %27 = load %struct.Writer*, %struct.Writer** %writer.addr, align 8, !dbg !3505
  %priv_class11 = getelementptr inbounds %struct.Writer, %struct.Writer* %27, i32 0, i32 0, !dbg !3506
  %28 = load %struct.AVClass*, %struct.AVClass** %priv_class11, align 8, !dbg !3506
  %29 = load i8*, i8** %priv_ctx, align 8, !dbg !3507
  %30 = bitcast i8* %29 to %struct.AVClass**, !dbg !3508
  store %struct.AVClass* %28, %struct.AVClass** %30, align 8, !dbg !3509
  %31 = load i8*, i8** %priv_ctx, align 8, !dbg !3510
  call void @av_opt_set_defaults(i8* %31), !dbg !3511
  br label %if.end12, !dbg !3512

if.end12:                                         ; preds = %if.then9, %if.end4
  %32 = load i8*, i8** %args.addr, align 8, !dbg !3513
  %tobool13 = icmp ne i8* %32, null, !dbg !3513
  br i1 %tobool13, label %if.then14, label %if.end28, !dbg !3515

if.then14:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %opts, metadata !3516, metadata !2571), !dbg !3518
  store %struct.AVDictionary* null, %struct.AVDictionary** %opts, align 8, !dbg !3518
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %opt, metadata !3519, metadata !2571), !dbg !3526
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %opt, align 8, !dbg !3526
  %33 = load i8*, i8** %args.addr, align 8, !dbg !3527
  %call15 = call i32 @av_dict_parse_string(%struct.AVDictionary** %opts, i8* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.261, i32 0, i32 0), i32 0), !dbg !3529
  store i32 %call15, i32* %ret, align 4, !dbg !3530
  %cmp = icmp slt i32 %call15, 0, !dbg !3531
  br i1 %cmp, label %if.then17, label %if.end18, !dbg !3532

if.then17:                                        ; preds = %if.then14
  %34 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3533
  %35 = load %struct.WriterContext*, %struct.WriterContext** %34, align 8, !dbg !3535
  %36 = bitcast %struct.WriterContext* %35 to i8*, !dbg !3535
  %37 = load i8*, i8** %args.addr, align 8, !dbg !3536
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 16, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.262, i32 0, i32 0), i8* %37), !dbg !3537
  call void @av_dict_free(%struct.AVDictionary** %opts), !dbg !3538
  br label %fail, !dbg !3539

if.end18:                                         ; preds = %if.then14
  br label %while.cond, !dbg !3540

while.cond:                                       ; preds = %if.end27, %if.end18
  %38 = load %struct.AVDictionary*, %struct.AVDictionary** %opts, align 8, !dbg !3541
  %39 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %opt, align 8, !dbg !3543
  %call19 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %38, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), %struct.AVDictionaryEntry* %39, i32 2), !dbg !3544
  store %struct.AVDictionaryEntry* %call19, %struct.AVDictionaryEntry** %opt, align 8, !dbg !3545
  %tobool20 = icmp ne %struct.AVDictionaryEntry* %call19, null, !dbg !3546
  br i1 %tobool20, label %while.body, label %while.end, !dbg !3546

while.body:                                       ; preds = %while.cond
  %40 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3547
  %41 = load %struct.WriterContext*, %struct.WriterContext** %40, align 8, !dbg !3550
  %42 = bitcast %struct.WriterContext* %41 to i8*, !dbg !3550
  %43 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %opt, align 8, !dbg !3551
  %key = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %43, i32 0, i32 0, !dbg !3552
  %44 = load i8*, i8** %key, align 8, !dbg !3552
  %45 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %opt, align 8, !dbg !3553
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %45, i32 0, i32 1, !dbg !3554
  %46 = load i8*, i8** %value, align 8, !dbg !3554
  %call21 = call i32 @av_opt_set(i8* %42, i8* %44, i8* %46, i32 1), !dbg !3555
  store i32 %call21, i32* %ret, align 4, !dbg !3556
  %cmp22 = icmp slt i32 %call21, 0, !dbg !3557
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !3558

if.then24:                                        ; preds = %while.body
  %47 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3559
  %48 = load %struct.WriterContext*, %struct.WriterContext** %47, align 8, !dbg !3561
  %49 = bitcast %struct.WriterContext* %48 to i8*, !dbg !3561
  %50 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %opt, align 8, !dbg !3562
  %key25 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %50, i32 0, i32 0, !dbg !3563
  %51 = load i8*, i8** %key25, align 8, !dbg !3563
  %52 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %opt, align 8, !dbg !3564
  %value26 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %52, i32 0, i32 1, !dbg !3565
  %53 = load i8*, i8** %value26, align 8, !dbg !3565
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 16, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.263, i32 0, i32 0), i8* %51, i8* %53), !dbg !3566
  call void @av_dict_free(%struct.AVDictionary** %opts), !dbg !3567
  br label %fail, !dbg !3568

if.end27:                                         ; preds = %while.body
  br label %while.cond, !dbg !3569, !llvm.loop !3571

while.end:                                        ; preds = %while.cond
  call void @av_dict_free(%struct.AVDictionary** %opts), !dbg !3572
  br label %if.end28, !dbg !3573

if.end28:                                         ; preds = %while.end, %if.end12
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3574, metadata !2571), !dbg !3576
  %54 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3577
  %55 = load %struct.WriterContext*, %struct.WriterContext** %54, align 8, !dbg !3578
  %string_validation_replacement = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %55, i32 0, i32 14, !dbg !3579
  %56 = load i8*, i8** %string_validation_replacement, align 8, !dbg !3579
  store i8* %56, i8** %p, align 8, !dbg !3576
  call void @llvm.dbg.declare(metadata i8** %endp, metadata !3580, metadata !2571), !dbg !3581
  %57 = load i8*, i8** %p, align 8, !dbg !3582
  %58 = load i8*, i8** %p, align 8, !dbg !3583
  %call29 = call i64 @strlen(i8* %58) #14, !dbg !3584
  %add.ptr = getelementptr inbounds i8, i8* %57, i64 %call29, !dbg !3585
  store i8* %add.ptr, i8** %endp, align 8, !dbg !3581
  br label %while.cond30, !dbg !3586

while.cond30:                                     ; preds = %if.end38, %if.end28
  %59 = load i8*, i8** %p, align 8, !dbg !3587
  %60 = load i8, i8* %59, align 1, !dbg !3589
  %tobool31 = icmp ne i8 %60, 0, !dbg !3590
  br i1 %tobool31, label %while.body32, label %while.end39, !dbg !3590

while.body32:                                     ; preds = %while.cond30
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !3591, metadata !2571), !dbg !3593
  %61 = load i8*, i8** %p, align 8, !dbg !3594
  store i8* %61, i8** %p0, align 8, !dbg !3593
  call void @llvm.dbg.declare(metadata i32* %code, metadata !3595, metadata !2571), !dbg !3596
  %62 = load i8*, i8** %endp, align 8, !dbg !3597
  %63 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3598
  %64 = load %struct.WriterContext*, %struct.WriterContext** %63, align 8, !dbg !3599
  %string_validation_utf8_flags = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %64, i32 0, i32 15, !dbg !3600
  %65 = load i32, i32* %string_validation_utf8_flags, align 8, !dbg !3600
  %call33 = call i32 @av_utf8_decode(i32* %code, i8** %p, i8* %62, i32 %65), !dbg !3601
  store i32 %call33, i32* %ret, align 4, !dbg !3602
  %66 = load i32, i32* %ret, align 4, !dbg !3603
  %cmp34 = icmp slt i32 %66, 0, !dbg !3605
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !3606

if.then36:                                        ; preds = %while.body32
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %bp, metadata !3607, metadata !2571), !dbg !3609
  call void @av_bprint_init(%struct.AVBPrint* %bp, i32 0, i32 1), !dbg !3610
  %67 = load i8*, i8** %p0, align 8, !dbg !3611
  %68 = load i8*, i8** %p, align 8, !dbg !3612
  %69 = load i8*, i8** %p0, align 8, !dbg !3613
  %sub.ptr.lhs.cast = ptrtoint i8* %68 to i64, !dbg !3614
  %sub.ptr.rhs.cast = ptrtoint i8* %69 to i64, !dbg !3614
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3614
  call void @bprint_bytes(%struct.AVBPrint* %bp, i8* %67, i64 %sub.ptr.sub), !dbg !3615
  %70 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3616
  %71 = bitcast %struct.WriterContext** %70 to i8*, !dbg !3616
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %bp, i32 0, i32 0, !dbg !3617
  %72 = load i8*, i8** %str, align 8, !dbg !3617
  %73 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3618
  %74 = load %struct.WriterContext*, %struct.WriterContext** %73, align 8, !dbg !3619
  %string_validation_replacement37 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %74, i32 0, i32 14, !dbg !3620
  %75 = load i8*, i8** %string_validation_replacement37, align 8, !dbg !3620
  call void (i8*, i32, i8*, ...) @av_log(i8* %71, i32 16, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.264, i32 0, i32 0), i8* %72, i8* %75), !dbg !3621
  %76 = load i32, i32* %ret, align 4, !dbg !3622
  store i32 %76, i32* %retval, align 4, !dbg !3623
  br label %return, !dbg !3623

if.end38:                                         ; preds = %while.body32
  br label %while.cond30, !dbg !3624, !llvm.loop !3626

while.end39:                                      ; preds = %while.cond30
  store i32 0, i32* %i, align 4, !dbg !3627
  br label %for.cond, !dbg !3629

for.cond:                                         ; preds = %for.inc, %while.end39
  %77 = load i32, i32* %i, align 4, !dbg !3630
  %cmp40 = icmp slt i32 %77, 10, !dbg !3633
  br i1 %cmp40, label %for.body, label %for.end, !dbg !3634

for.body:                                         ; preds = %for.cond
  %78 = load i32, i32* %i, align 4, !dbg !3635
  %idxprom = sext i32 %78 to i64, !dbg !3636
  %79 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3637
  %80 = load %struct.WriterContext*, %struct.WriterContext** %79, align 8, !dbg !3638
  %section_pbuf = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %80, i32 0, i32 9, !dbg !3639
  %arrayidx = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf, i64 0, i64 %idxprom, !dbg !3636
  call void @av_bprint_init(%struct.AVBPrint* %arrayidx, i32 1, i32 -1), !dbg !3640
  br label %for.inc, !dbg !3640

for.inc:                                          ; preds = %for.body
  %81 = load i32, i32* %i, align 4, !dbg !3641
  %inc = add nsw i32 %81, 1, !dbg !3641
  store i32 %inc, i32* %i, align 4, !dbg !3641
  br label %for.cond, !dbg !3643, !llvm.loop !3644

for.end:                                          ; preds = %for.cond
  %82 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3646
  %83 = load %struct.WriterContext*, %struct.WriterContext** %82, align 8, !dbg !3648
  %writer42 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %83, i32 0, i32 1, !dbg !3649
  %84 = load %struct.Writer*, %struct.Writer** %writer42, align 8, !dbg !3649
  %init = getelementptr inbounds %struct.Writer, %struct.Writer* %84, i32 0, i32 3, !dbg !3650
  %85 = load i32 (%struct.WriterContext*)*, i32 (%struct.WriterContext*)** %init, align 8, !dbg !3650
  %tobool43 = icmp ne i32 (%struct.WriterContext*)* %85, null, !dbg !3651
  br i1 %tobool43, label %if.then44, label %if.end48, !dbg !3652

if.then44:                                        ; preds = %for.end
  %86 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3653
  %87 = load %struct.WriterContext*, %struct.WriterContext** %86, align 8, !dbg !3654
  %writer45 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %87, i32 0, i32 1, !dbg !3655
  %88 = load %struct.Writer*, %struct.Writer** %writer45, align 8, !dbg !3655
  %init46 = getelementptr inbounds %struct.Writer, %struct.Writer* %88, i32 0, i32 3, !dbg !3656
  %89 = load i32 (%struct.WriterContext*)*, i32 (%struct.WriterContext*)** %init46, align 8, !dbg !3656
  %90 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3657
  %91 = load %struct.WriterContext*, %struct.WriterContext** %90, align 8, !dbg !3658
  %call47 = call i32 %89(%struct.WriterContext* %91), !dbg !3659
  store i32 %call47, i32* %ret, align 4, !dbg !3660
  br label %if.end48, !dbg !3661

if.end48:                                         ; preds = %if.then44, %for.end
  %92 = load i32, i32* %ret, align 4, !dbg !3662
  %cmp49 = icmp slt i32 %92, 0, !dbg !3664
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !3665

if.then51:                                        ; preds = %if.end48
  br label %fail, !dbg !3666

if.end52:                                         ; preds = %if.end48
  store i32 0, i32* %retval, align 4, !dbg !3667
  br label %return, !dbg !3667

fail:                                             ; preds = %if.then51, %if.then24, %if.then17, %if.then3, %if.then
  %93 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !3668
  call void @writer_close(%struct.WriterContext** %93), !dbg !3669
  %94 = load i32, i32* %ret, align 4, !dbg !3670
  store i32 %94, i32* %retval, align 4, !dbg !3671
  br label %return, !dbg !3671

return:                                           ; preds = %fail, %if.end52, %if.then36
  %95 = load i32, i32* %retval, align 4, !dbg !3672
  ret i32 %95, !dbg !3672
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @writer_print_section_header(%struct.WriterContext* %wctx, i32 %section_id) #4 !dbg !3673 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %section_id.addr = alloca i32, align 4
  %parent_section_id = alloca i32, align 4
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !3676, metadata !2571), !dbg !3677
  store i32 %section_id, i32* %section_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %section_id.addr, metadata !3678, metadata !2571), !dbg !3679
  call void @llvm.dbg.declare(metadata i32* %parent_section_id, metadata !3680, metadata !2571), !dbg !3681
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3682
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 6, !dbg !3683
  %1 = load i32, i32* %level, align 4, !dbg !3684
  %inc = add nsw i32 %1, 1, !dbg !3684
  store i32 %inc, i32* %level, align 4, !dbg !3684
  br label %do.body, !dbg !3685, !llvm.loop !3686

do.body:                                          ; preds = %entry
  %2 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3687
  %level1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %2, i32 0, i32 6, !dbg !3691
  %3 = load i32, i32* %level1, align 4, !dbg !3691
  %cmp = icmp slt i32 %3, 10, !dbg !3692
  br i1 %cmp, label %if.end, label %if.then, !dbg !3693

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.351, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.162, i32 0, i32 0), i32 630), !dbg !3694
  call void @abort() #15, !dbg !3697
  unreachable, !dbg !3699

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !3700

do.end:                                           ; preds = %if.end
  %4 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3702
  %level2 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %4, i32 0, i32 6, !dbg !3703
  %5 = load i32, i32* %level2, align 4, !dbg !3703
  %tobool = icmp ne i32 %5, 0, !dbg !3702
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3702

cond.true:                                        ; preds = %do.end
  %6 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3704
  %level3 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %6, i32 0, i32 6, !dbg !3705
  %7 = load i32, i32* %level3, align 4, !dbg !3705
  %sub = sub nsw i32 %7, 1, !dbg !3706
  %idxprom = sext i32 %sub to i64, !dbg !3707
  %8 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3707
  %section = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %8, i32 0, i32 8, !dbg !3708
  %arrayidx = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section, i64 0, i64 %idxprom, !dbg !3707
  %9 = load %struct.section*, %struct.section** %arrayidx, align 8, !dbg !3707
  %id = getelementptr inbounds %struct.section, %struct.section* %9, i32 0, i32 0, !dbg !3709
  %10 = load i32, i32* %id, align 8, !dbg !3709
  br label %cond.end, !dbg !3710

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !3712

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ -1, %cond.false ], !dbg !3714
  store i32 %cond, i32* %parent_section_id, align 4, !dbg !3716
  %11 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3717
  %level4 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %11, i32 0, i32 6, !dbg !3718
  %12 = load i32, i32* %level4, align 4, !dbg !3718
  %idxprom5 = sext i32 %12 to i64, !dbg !3719
  %13 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3719
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %13, i32 0, i32 7, !dbg !3720
  %arrayidx6 = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom5, !dbg !3719
  store i32 0, i32* %arrayidx6, align 4, !dbg !3721
  %14 = load i32, i32* %section_id.addr, align 4, !dbg !3722
  %idxprom7 = sext i32 %14 to i64, !dbg !3723
  %15 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3723
  %sections = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %15, i32 0, i32 4, !dbg !3724
  %16 = load %struct.section*, %struct.section** %sections, align 8, !dbg !3724
  %arrayidx8 = getelementptr inbounds %struct.section, %struct.section* %16, i64 %idxprom7, !dbg !3723
  %17 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3725
  %level9 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %17, i32 0, i32 6, !dbg !3726
  %18 = load i32, i32* %level9, align 4, !dbg !3726
  %idxprom10 = sext i32 %18 to i64, !dbg !3727
  %19 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3727
  %section11 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %19, i32 0, i32 8, !dbg !3728
  %arrayidx12 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section11, i64 0, i64 %idxprom10, !dbg !3727
  store %struct.section* %arrayidx8, %struct.section** %arrayidx12, align 8, !dbg !3729
  %20 = load i32, i32* %section_id.addr, align 4, !dbg !3730
  %cmp13 = icmp eq i32 %20, 18, !dbg !3732
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !3733

if.then14:                                        ; preds = %cond.end
  %21 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3734
  %nb_section_packet_frame = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %21, i32 0, i32 12, !dbg !3736
  store i32 0, i32* %nb_section_packet_frame, align 8, !dbg !3737
  %22 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3738
  %nb_section_frame = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %22, i32 0, i32 11, !dbg !3739
  store i32 0, i32* %nb_section_frame, align 4, !dbg !3740
  %23 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3741
  %nb_section_packet = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %23, i32 0, i32 10, !dbg !3742
  store i32 0, i32* %nb_section_packet, align 8, !dbg !3743
  br label %if.end26, !dbg !3744

if.else:                                          ; preds = %cond.end
  %24 = load i32, i32* %parent_section_id, align 4, !dbg !3745
  %cmp15 = icmp eq i32 %24, 18, !dbg !3748
  br i1 %cmp15, label %if.then16, label %if.end25, !dbg !3745

if.then16:                                        ; preds = %if.else
  %25 = load i32, i32* %section_id.addr, align 4, !dbg !3749
  %cmp17 = icmp eq i32 %25, 15, !dbg !3751
  br i1 %cmp17, label %cond.true18, label %cond.false20, !dbg !3749

cond.true18:                                      ; preds = %if.then16
  %26 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3752
  %nb_section_packet19 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %26, i32 0, i32 10, !dbg !3753
  %27 = load i32, i32* %nb_section_packet19, align 8, !dbg !3753
  br label %cond.end22, !dbg !3754

cond.false20:                                     ; preds = %if.then16
  %28 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3756
  %nb_section_frame21 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %28, i32 0, i32 11, !dbg !3757
  %29 = load i32, i32* %nb_section_frame21, align 4, !dbg !3757
  br label %cond.end22, !dbg !3758

cond.end22:                                       ; preds = %cond.false20, %cond.true18
  %cond23 = phi i32 [ %27, %cond.true18 ], [ %29, %cond.false20 ], !dbg !3760
  %30 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3762
  %nb_section_packet_frame24 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %30, i32 0, i32 12, !dbg !3763
  store i32 %cond23, i32* %nb_section_packet_frame24, align 8, !dbg !3764
  br label %if.end25, !dbg !3765

if.end25:                                         ; preds = %cond.end22, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then14
  %31 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3766
  %writer = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %31, i32 0, i32 1, !dbg !3768
  %32 = load %struct.Writer*, %struct.Writer** %writer, align 8, !dbg !3768
  %print_section_header = getelementptr inbounds %struct.Writer, %struct.Writer* %32, i32 0, i32 5, !dbg !3769
  %33 = load void (%struct.WriterContext*)*, void (%struct.WriterContext*)** %print_section_header, align 8, !dbg !3769
  %tobool27 = icmp ne void (%struct.WriterContext*)* %33, null, !dbg !3766
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !3770

if.then28:                                        ; preds = %if.end26
  %34 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3771
  %writer29 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %34, i32 0, i32 1, !dbg !3772
  %35 = load %struct.Writer*, %struct.Writer** %writer29, align 8, !dbg !3772
  %print_section_header30 = getelementptr inbounds %struct.Writer, %struct.Writer* %35, i32 0, i32 5, !dbg !3773
  %36 = load void (%struct.WriterContext*)*, void (%struct.WriterContext*)** %print_section_header30, align 8, !dbg !3773
  %37 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !3774
  call void %36(%struct.WriterContext* %37), !dbg !3771
  br label %if.end31, !dbg !3771

if.end31:                                         ; preds = %if.then28, %if.end26
  ret void, !dbg !3775
}

; Function Attrs: nounwind uwtable
define internal void @ffprobe_show_program_version(%struct.WriterContext* %w) #0 !dbg !3776 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %pbuf = alloca %struct.AVBPrint, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !3777, metadata !2571), !dbg !3778
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %pbuf, metadata !3779, metadata !2571), !dbg !3780
  call void @av_bprint_init(%struct.AVBPrint* %pbuf, i32 1, i32 -1), !dbg !3781
  %0 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3782
  call void @writer_print_section_header(%struct.WriterContext* %0, i32 32), !dbg !3783
  %1 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3784
  %call = call i32 @writer_print_string(%struct.WriterContext* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.352, i32 0, i32 0), i32 0), !dbg !3785
  br label %do.body, !dbg !3786, !llvm.loop !3787

do.body:                                          ; preds = %entry
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !3788
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %pbuf, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.353, i32 0, i32 0), i32 2007, i32 2019), !dbg !3791
  %2 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3793
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !3794
  %3 = load i8*, i8** %str, align 8, !dbg !3794
  %call1 = call i32 @writer_print_string(%struct.WriterContext* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.354, i32 0, i32 0), i8* %3, i32 0), !dbg !3795
  br label %do.end, !dbg !3797

do.end:                                           ; preds = %do.body
  %4 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3798
  %call2 = call i32 @writer_print_string(%struct.WriterContext* %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.355, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.356, i32 0, i32 0), i32 0), !dbg !3799
  %5 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3800
  %call3 = call i32 @writer_print_string(%struct.WriterContext* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.357, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.358, i32 0, i32 0), i32 0), !dbg !3801
  %6 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3802
  call void @writer_print_section_footer(%struct.WriterContext* %6), !dbg !3803
  %call4 = call i32 @av_bprint_finalize(%struct.AVBPrint* %pbuf, i8** null), !dbg !3804
  ret void, !dbg !3805
}

; Function Attrs: nounwind uwtable
define internal void @ffprobe_show_library_versions(%struct.WriterContext* %w) #0 !dbg !3806 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %version = alloca i32, align 4
  %version4 = alloca i32, align 4
  %version11 = alloca i32, align 4
  %version18 = alloca i32, align 4
  %version25 = alloca i32, align 4
  %version32 = alloca i32, align 4
  %version39 = alloca i32, align 4
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !3807, metadata !2571), !dbg !3808
  %0 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3809
  call void @writer_print_section_header(%struct.WriterContext* %0, i32 14), !dbg !3810
  br label %do.body, !dbg !3811, !llvm.loop !3812

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %version, metadata !3813, metadata !2571), !dbg !3817
  %call = call i32 @avutil_version(), !dbg !3818
  store i32 %call, i32* %version, align 4, !dbg !3820
  %1 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3821
  call void @writer_print_section_header(%struct.WriterContext* %1, i32 13), !dbg !3822
  %2 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3824
  %call1 = call i32 @writer_print_string(%struct.WriterContext* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.364, i32 0, i32 0), i32 0), !dbg !3825
  %3 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3827
  call void @writer_print_integer(%struct.WriterContext* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.365, i32 0, i32 0), i64 56), !dbg !3828
  %4 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3830
  call void @writer_print_integer(%struct.WriterContext* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.366, i32 0, i32 0), i64 26), !dbg !3831
  %5 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3833
  call void @writer_print_integer(%struct.WriterContext* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.367, i32 0, i32 0), i64 100), !dbg !3834
  %6 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3836
  %7 = load i32, i32* %version, align 4, !dbg !3837
  %conv = zext i32 %7 to i64, !dbg !3837
  call void @writer_print_integer(%struct.WriterContext* %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i64 %conv), !dbg !3838
  %8 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3840
  %call2 = call i32 @writer_print_string(%struct.WriterContext* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.369, i32 0, i32 0), i32 0), !dbg !3841
  %9 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3843
  call void @writer_print_section_footer(%struct.WriterContext* %9), !dbg !3844
  br label %do.end, !dbg !3846

do.end:                                           ; preds = %do.body
  br label %do.body3, !dbg !3847, !llvm.loop !3848

do.body3:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %version4, metadata !3849, metadata !2571), !dbg !3853
  %call5 = call i32 @avcodec_version(), !dbg !3854
  store i32 %call5, i32* %version4, align 4, !dbg !3856
  %10 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3857
  call void @writer_print_section_header(%struct.WriterContext* %10, i32 13), !dbg !3858
  %11 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3860
  %call6 = call i32 @writer_print_string(%struct.WriterContext* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.370, i32 0, i32 0), i32 0), !dbg !3861
  %12 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3863
  call void @writer_print_integer(%struct.WriterContext* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.365, i32 0, i32 0), i64 58), !dbg !3864
  %13 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3866
  call void @writer_print_integer(%struct.WriterContext* %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.366, i32 0, i32 0), i64 47), !dbg !3867
  %14 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3869
  call void @writer_print_integer(%struct.WriterContext* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.367, i32 0, i32 0), i64 102), !dbg !3870
  %15 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3872
  %16 = load i32, i32* %version4, align 4, !dbg !3873
  %conv7 = zext i32 %16 to i64, !dbg !3873
  call void @writer_print_integer(%struct.WriterContext* %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i64 %conv7), !dbg !3874
  %17 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3876
  %call8 = call i32 @writer_print_string(%struct.WriterContext* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.371, i32 0, i32 0), i32 0), !dbg !3877
  %18 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3879
  call void @writer_print_section_footer(%struct.WriterContext* %18), !dbg !3880
  br label %do.end9, !dbg !3882

do.end9:                                          ; preds = %do.body3
  br label %do.body10, !dbg !3883, !llvm.loop !3884

do.body10:                                        ; preds = %do.end9
  call void @llvm.dbg.declare(metadata i32* %version11, metadata !3885, metadata !2571), !dbg !3889
  %call12 = call i32 @avformat_version(), !dbg !3890
  store i32 %call12, i32* %version11, align 4, !dbg !3892
  %19 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3893
  call void @writer_print_section_header(%struct.WriterContext* %19, i32 13), !dbg !3894
  %20 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3896
  %call13 = call i32 @writer_print_string(%struct.WriterContext* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.372, i32 0, i32 0), i32 0), !dbg !3897
  %21 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3899
  call void @writer_print_integer(%struct.WriterContext* %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.365, i32 0, i32 0), i64 58), !dbg !3900
  %22 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3902
  call void @writer_print_integer(%struct.WriterContext* %22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.366, i32 0, i32 0), i64 26), !dbg !3903
  %23 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3905
  call void @writer_print_integer(%struct.WriterContext* %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.367, i32 0, i32 0), i64 101), !dbg !3906
  %24 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3908
  %25 = load i32, i32* %version11, align 4, !dbg !3909
  %conv14 = zext i32 %25 to i64, !dbg !3909
  call void @writer_print_integer(%struct.WriterContext* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i64 %conv14), !dbg !3910
  %26 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3912
  %call15 = call i32 @writer_print_string(%struct.WriterContext* %26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.373, i32 0, i32 0), i32 0), !dbg !3913
  %27 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3915
  call void @writer_print_section_footer(%struct.WriterContext* %27), !dbg !3916
  br label %do.end16, !dbg !3918

do.end16:                                         ; preds = %do.body10
  br label %do.body17, !dbg !3919, !llvm.loop !3920

do.body17:                                        ; preds = %do.end16
  call void @llvm.dbg.declare(metadata i32* %version18, metadata !3921, metadata !2571), !dbg !3925
  %call19 = call i32 @avdevice_version(), !dbg !3926
  store i32 %call19, i32* %version18, align 4, !dbg !3928
  %28 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3929
  call void @writer_print_section_header(%struct.WriterContext* %28, i32 13), !dbg !3930
  %29 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3932
  %call20 = call i32 @writer_print_string(%struct.WriterContext* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.374, i32 0, i32 0), i32 0), !dbg !3933
  %30 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3935
  call void @writer_print_integer(%struct.WriterContext* %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.365, i32 0, i32 0), i64 58), !dbg !3936
  %31 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3938
  call void @writer_print_integer(%struct.WriterContext* %31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.366, i32 0, i32 0), i64 6), !dbg !3939
  %32 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3941
  call void @writer_print_integer(%struct.WriterContext* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.367, i32 0, i32 0), i64 101), !dbg !3942
  %33 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3944
  %34 = load i32, i32* %version18, align 4, !dbg !3945
  %conv21 = zext i32 %34 to i64, !dbg !3945
  call void @writer_print_integer(%struct.WriterContext* %33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i64 %conv21), !dbg !3946
  %35 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3948
  %call22 = call i32 @writer_print_string(%struct.WriterContext* %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.375, i32 0, i32 0), i32 0), !dbg !3949
  %36 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3951
  call void @writer_print_section_footer(%struct.WriterContext* %36), !dbg !3952
  br label %do.end23, !dbg !3954

do.end23:                                         ; preds = %do.body17
  br label %do.body24, !dbg !3955, !llvm.loop !3956

do.body24:                                        ; preds = %do.end23
  call void @llvm.dbg.declare(metadata i32* %version25, metadata !3957, metadata !2571), !dbg !3961
  %call26 = call i32 @avfilter_version(), !dbg !3962
  store i32 %call26, i32* %version25, align 4, !dbg !3964
  %37 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3965
  call void @writer_print_section_header(%struct.WriterContext* %37, i32 13), !dbg !3966
  %38 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3968
  %call27 = call i32 @writer_print_string(%struct.WriterContext* %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.376, i32 0, i32 0), i32 0), !dbg !3969
  %39 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3971
  call void @writer_print_integer(%struct.WriterContext* %39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.365, i32 0, i32 0), i64 7), !dbg !3972
  %40 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3974
  call void @writer_print_integer(%struct.WriterContext* %40, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.366, i32 0, i32 0), i64 48), !dbg !3975
  %41 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3977
  call void @writer_print_integer(%struct.WriterContext* %41, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.367, i32 0, i32 0), i64 100), !dbg !3978
  %42 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3980
  %43 = load i32, i32* %version25, align 4, !dbg !3981
  %conv28 = zext i32 %43 to i64, !dbg !3981
  call void @writer_print_integer(%struct.WriterContext* %42, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i64 %conv28), !dbg !3982
  %44 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3984
  %call29 = call i32 @writer_print_string(%struct.WriterContext* %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.377, i32 0, i32 0), i32 0), !dbg !3985
  %45 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !3987
  call void @writer_print_section_footer(%struct.WriterContext* %45), !dbg !3988
  br label %do.end30, !dbg !3990

do.end30:                                         ; preds = %do.body24
  br label %do.body31, !dbg !3991, !llvm.loop !3992

do.body31:                                        ; preds = %do.end30
  call void @llvm.dbg.declare(metadata i32* %version32, metadata !3993, metadata !2571), !dbg !3997
  %call33 = call i32 @swscale_version(), !dbg !3998
  store i32 %call33, i32* %version32, align 4, !dbg !4000
  %46 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4001
  call void @writer_print_section_header(%struct.WriterContext* %46, i32 13), !dbg !4002
  %47 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4004
  %call34 = call i32 @writer_print_string(%struct.WriterContext* %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.378, i32 0, i32 0), i32 0), !dbg !4005
  %48 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4007
  call void @writer_print_integer(%struct.WriterContext* %48, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.365, i32 0, i32 0), i64 5), !dbg !4008
  %49 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4010
  call void @writer_print_integer(%struct.WriterContext* %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.366, i32 0, i32 0), i64 4), !dbg !4011
  %50 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4013
  call void @writer_print_integer(%struct.WriterContext* %50, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.367, i32 0, i32 0), i64 100), !dbg !4014
  %51 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4016
  %52 = load i32, i32* %version32, align 4, !dbg !4017
  %conv35 = zext i32 %52 to i64, !dbg !4017
  call void @writer_print_integer(%struct.WriterContext* %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i64 %conv35), !dbg !4018
  %53 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4020
  %call36 = call i32 @writer_print_string(%struct.WriterContext* %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.379, i32 0, i32 0), i32 0), !dbg !4021
  %54 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4023
  call void @writer_print_section_footer(%struct.WriterContext* %54), !dbg !4024
  br label %do.end37, !dbg !4026

do.end37:                                         ; preds = %do.body31
  br label %do.body38, !dbg !4027, !llvm.loop !4028

do.body38:                                        ; preds = %do.end37
  call void @llvm.dbg.declare(metadata i32* %version39, metadata !4029, metadata !2571), !dbg !4033
  %call40 = call i32 @swresample_version(), !dbg !4034
  store i32 %call40, i32* %version39, align 4, !dbg !4036
  %55 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4037
  call void @writer_print_section_header(%struct.WriterContext* %55, i32 13), !dbg !4038
  %56 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4040
  %call41 = call i32 @writer_print_string(%struct.WriterContext* %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.380, i32 0, i32 0), i32 0), !dbg !4041
  %57 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4043
  call void @writer_print_integer(%struct.WriterContext* %57, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.365, i32 0, i32 0), i64 3), !dbg !4044
  %58 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4046
  call void @writer_print_integer(%struct.WriterContext* %58, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.366, i32 0, i32 0), i64 4), !dbg !4047
  %59 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4049
  call void @writer_print_integer(%struct.WriterContext* %59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.367, i32 0, i32 0), i64 100), !dbg !4050
  %60 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4052
  %61 = load i32, i32* %version39, align 4, !dbg !4053
  %conv42 = zext i32 %61 to i64, !dbg !4053
  call void @writer_print_integer(%struct.WriterContext* %60, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i64 %conv42), !dbg !4054
  %62 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4056
  %call43 = call i32 @writer_print_string(%struct.WriterContext* %62, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.381, i32 0, i32 0), i32 0), !dbg !4057
  %63 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4059
  call void @writer_print_section_footer(%struct.WriterContext* %63), !dbg !4060
  br label %do.end44, !dbg !4062

do.end44:                                         ; preds = %do.body38
  br label %do.body45, !dbg !4063, !llvm.loop !4064

do.body45:                                        ; preds = %do.end44
  br label %do.end46, !dbg !4065

do.end46:                                         ; preds = %do.body45
  %64 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4068
  call void @writer_print_section_footer(%struct.WriterContext* %64), !dbg !4069
  ret void, !dbg !4070
}

; Function Attrs: nounwind uwtable
define internal void @ffprobe_show_pixel_formats(%struct.WriterContext* %w) #0 !dbg !4071 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %pixdesc = alloca %struct.AVPixFmtDescriptor*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !4072, metadata !2571), !dbg !4073
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %pixdesc, metadata !4074, metadata !2571), !dbg !4100
  store %struct.AVPixFmtDescriptor* null, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4100
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4101, metadata !2571), !dbg !4102
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4103, metadata !2571), !dbg !4104
  %0 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4105
  call void @writer_print_section_header(%struct.WriterContext* %0, i32 25), !dbg !4106
  br label %while.cond, !dbg !4107

while.cond:                                       ; preds = %if.end108, %entry
  %1 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4108
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_next(%struct.AVPixFmtDescriptor* %1), !dbg !4110
  store %struct.AVPixFmtDescriptor* %call, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4111
  %tobool = icmp ne %struct.AVPixFmtDescriptor* %call, null, !dbg !4112
  br i1 %tobool, label %while.body, label %while.end, !dbg !4112

while.body:                                       ; preds = %while.cond
  %2 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4113
  call void @writer_print_section_header(%struct.WriterContext* %2, i32 21), !dbg !4115
  %3 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4116
  %4 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4117
  %name = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %4, i32 0, i32 0, !dbg !4118
  %5 = load i8*, i8** %name, align 8, !dbg !4118
  %call1 = call i32 @writer_print_string(%struct.WriterContext* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.363, i32 0, i32 0), i8* %5, i32 0), !dbg !4119
  %6 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4120
  %7 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4121
  %nb_components = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %7, i32 0, i32 1, !dbg !4122
  %8 = load i8, i8* %nb_components, align 8, !dbg !4122
  %conv = zext i8 %8 to i64, !dbg !4121
  call void @writer_print_integer(%struct.WriterContext* %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.382, i32 0, i32 0), i64 %conv), !dbg !4123
  %9 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4124
  %nb_components2 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %9, i32 0, i32 1, !dbg !4126
  %10 = load i8, i8* %nb_components2, align 8, !dbg !4126
  %conv3 = zext i8 %10 to i32, !dbg !4124
  %cmp = icmp sge i32 %conv3, 3, !dbg !4127
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !4128

land.lhs.true:                                    ; preds = %while.body
  %11 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4129
  %flags = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %11, i32 0, i32 4, !dbg !4131
  %12 = load i64, i64* %flags, align 8, !dbg !4131
  %and = and i64 %12, 32, !dbg !4132
  %tobool5 = icmp ne i64 %and, 0, !dbg !4132
  br i1 %tobool5, label %if.else, label %if.then, !dbg !4133

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4134
  %14 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4136
  %log2_chroma_w = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %14, i32 0, i32 2, !dbg !4137
  %15 = load i8, i8* %log2_chroma_w, align 1, !dbg !4137
  %conv6 = zext i8 %15 to i64, !dbg !4136
  call void @writer_print_integer(%struct.WriterContext* %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.383, i32 0, i32 0), i64 %conv6), !dbg !4138
  %16 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4139
  %17 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4140
  %log2_chroma_h = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %17, i32 0, i32 3, !dbg !4141
  %18 = load i8, i8* %log2_chroma_h, align 2, !dbg !4141
  %conv7 = zext i8 %18 to i64, !dbg !4140
  call void @writer_print_integer(%struct.WriterContext* %16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.384, i32 0, i32 0), i64 %conv7), !dbg !4142
  br label %if.end, !dbg !4143

if.else:                                          ; preds = %land.lhs.true, %while.body
  %19 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4144
  %call8 = call i32 @writer_print_string(%struct.WriterContext* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.383, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !4146
  %20 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4147
  %call9 = call i32 @writer_print_string(%struct.WriterContext* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.384, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !4148
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4149
  %call10 = call i32 @av_get_bits_per_pixel(%struct.AVPixFmtDescriptor* %21), !dbg !4150
  store i32 %call10, i32* %n, align 4, !dbg !4151
  %22 = load i32, i32* %n, align 4, !dbg !4152
  %tobool11 = icmp ne i32 %22, 0, !dbg !4152
  br i1 %tobool11, label %if.then12, label %if.else14, !dbg !4154

if.then12:                                        ; preds = %if.end
  %23 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4155
  %24 = load i32, i32* %n, align 4, !dbg !4157
  %conv13 = sext i32 %24 to i64, !dbg !4157
  call void @writer_print_integer(%struct.WriterContext* %23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.386, i32 0, i32 0), i64 %conv13), !dbg !4158
  br label %if.end16, !dbg !4158

if.else14:                                        ; preds = %if.end
  %25 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4159
  %call15 = call i32 @writer_print_string(%struct.WriterContext* %25, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !4160
  br label %if.end16

if.end16:                                         ; preds = %if.else14, %if.then12
  %26 = load i32, i32* @do_show_pixel_format_flags, align 4, !dbg !4161
  %tobool17 = icmp ne i32 %26, 0, !dbg !4161
  br i1 %tobool17, label %if.then18, label %if.end94, !dbg !4163

if.then18:                                        ; preds = %if.end16
  %27 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4164
  call void @writer_print_section_header(%struct.WriterContext* %27, i32 22), !dbg !4166
  br label %do.body, !dbg !4167, !llvm.loop !4168

do.body:                                          ; preds = %if.then18
  %28 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4169
  %29 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4172
  %flags19 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %29, i32 0, i32 4, !dbg !4173
  %30 = load i64, i64* %flags19, align 8, !dbg !4173
  %and20 = and i64 %30, 1, !dbg !4174
  %tobool21 = icmp ne i64 %and20, 0, !dbg !4175
  %lnot = xor i1 %tobool21, true, !dbg !4175
  %lnot22 = xor i1 %lnot, true, !dbg !4176
  %lnot.ext = zext i1 %lnot22 to i32, !dbg !4176
  %conv23 = sext i32 %lnot.ext to i64, !dbg !4176
  call void @writer_print_integer(%struct.WriterContext* %28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.387, i32 0, i32 0), i64 %conv23), !dbg !4177
  br label %do.end, !dbg !4178

do.end:                                           ; preds = %do.body
  br label %do.body24, !dbg !4179, !llvm.loop !4180

do.body24:                                        ; preds = %do.end
  %31 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4181
  %32 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4184
  %flags25 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %32, i32 0, i32 4, !dbg !4185
  %33 = load i64, i64* %flags25, align 8, !dbg !4185
  %and26 = and i64 %33, 2, !dbg !4186
  %tobool27 = icmp ne i64 %and26, 0, !dbg !4187
  %lnot28 = xor i1 %tobool27, true, !dbg !4187
  %lnot30 = xor i1 %lnot28, true, !dbg !4188
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !4188
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !4188
  call void @writer_print_integer(%struct.WriterContext* %31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.388, i32 0, i32 0), i64 %conv32), !dbg !4189
  br label %do.end33, !dbg !4190

do.end33:                                         ; preds = %do.body24
  br label %do.body34, !dbg !4191, !llvm.loop !4192

do.body34:                                        ; preds = %do.end33
  %34 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4193
  %35 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4196
  %flags35 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %35, i32 0, i32 4, !dbg !4197
  %36 = load i64, i64* %flags35, align 8, !dbg !4197
  %and36 = and i64 %36, 4, !dbg !4198
  %tobool37 = icmp ne i64 %and36, 0, !dbg !4199
  %lnot38 = xor i1 %tobool37, true, !dbg !4199
  %lnot40 = xor i1 %lnot38, true, !dbg !4200
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !4200
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !4200
  call void @writer_print_integer(%struct.WriterContext* %34, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.389, i32 0, i32 0), i64 %conv42), !dbg !4201
  br label %do.end43, !dbg !4202

do.end43:                                         ; preds = %do.body34
  br label %do.body44, !dbg !4203, !llvm.loop !4204

do.body44:                                        ; preds = %do.end43
  %37 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4205
  %38 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4208
  %flags45 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %38, i32 0, i32 4, !dbg !4209
  %39 = load i64, i64* %flags45, align 8, !dbg !4209
  %and46 = and i64 %39, 8, !dbg !4210
  %tobool47 = icmp ne i64 %and46, 0, !dbg !4211
  %lnot48 = xor i1 %tobool47, true, !dbg !4211
  %lnot50 = xor i1 %lnot48, true, !dbg !4212
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !4212
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !4212
  call void @writer_print_integer(%struct.WriterContext* %37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.390, i32 0, i32 0), i64 %conv52), !dbg !4213
  br label %do.end53, !dbg !4214

do.end53:                                         ; preds = %do.body44
  br label %do.body54, !dbg !4215, !llvm.loop !4216

do.body54:                                        ; preds = %do.end53
  %40 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4217
  %41 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4220
  %flags55 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %41, i32 0, i32 4, !dbg !4221
  %42 = load i64, i64* %flags55, align 8, !dbg !4221
  %and56 = and i64 %42, 16, !dbg !4222
  %tobool57 = icmp ne i64 %and56, 0, !dbg !4223
  %lnot58 = xor i1 %tobool57, true, !dbg !4223
  %lnot60 = xor i1 %lnot58, true, !dbg !4224
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !4224
  %conv62 = sext i32 %lnot.ext61 to i64, !dbg !4224
  call void @writer_print_integer(%struct.WriterContext* %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.391, i32 0, i32 0), i64 %conv62), !dbg !4225
  br label %do.end63, !dbg !4226

do.end63:                                         ; preds = %do.body54
  br label %do.body64, !dbg !4227, !llvm.loop !4228

do.body64:                                        ; preds = %do.end63
  %43 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4229
  %44 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4232
  %flags65 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %44, i32 0, i32 4, !dbg !4233
  %45 = load i64, i64* %flags65, align 8, !dbg !4233
  %and66 = and i64 %45, 32, !dbg !4234
  %tobool67 = icmp ne i64 %and66, 0, !dbg !4235
  %lnot68 = xor i1 %tobool67, true, !dbg !4235
  %lnot70 = xor i1 %lnot68, true, !dbg !4236
  %lnot.ext71 = zext i1 %lnot70 to i32, !dbg !4236
  %conv72 = sext i32 %lnot.ext71 to i64, !dbg !4236
  call void @writer_print_integer(%struct.WriterContext* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.392, i32 0, i32 0), i64 %conv72), !dbg !4237
  br label %do.end73, !dbg !4238

do.end73:                                         ; preds = %do.body64
  br label %do.body74, !dbg !4239, !llvm.loop !4240

do.body74:                                        ; preds = %do.end73
  %46 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4241
  %47 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4244
  %flags75 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %47, i32 0, i32 4, !dbg !4245
  %48 = load i64, i64* %flags75, align 8, !dbg !4245
  %and76 = and i64 %48, 64, !dbg !4246
  %tobool77 = icmp ne i64 %and76, 0, !dbg !4247
  %lnot78 = xor i1 %tobool77, true, !dbg !4247
  %lnot80 = xor i1 %lnot78, true, !dbg !4248
  %lnot.ext81 = zext i1 %lnot80 to i32, !dbg !4248
  %conv82 = sext i32 %lnot.ext81 to i64, !dbg !4248
  call void @writer_print_integer(%struct.WriterContext* %46, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.393, i32 0, i32 0), i64 %conv82), !dbg !4249
  br label %do.end83, !dbg !4250

do.end83:                                         ; preds = %do.body74
  br label %do.body84, !dbg !4251, !llvm.loop !4252

do.body84:                                        ; preds = %do.end83
  %49 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4253
  %50 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4256
  %flags85 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %50, i32 0, i32 4, !dbg !4257
  %51 = load i64, i64* %flags85, align 8, !dbg !4257
  %and86 = and i64 %51, 128, !dbg !4258
  %tobool87 = icmp ne i64 %and86, 0, !dbg !4259
  %lnot88 = xor i1 %tobool87, true, !dbg !4259
  %lnot90 = xor i1 %lnot88, true, !dbg !4260
  %lnot.ext91 = zext i1 %lnot90 to i32, !dbg !4260
  %conv92 = sext i32 %lnot.ext91 to i64, !dbg !4260
  call void @writer_print_integer(%struct.WriterContext* %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.394, i32 0, i32 0), i64 %conv92), !dbg !4261
  br label %do.end93, !dbg !4262

do.end93:                                         ; preds = %do.body84
  %52 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4263
  call void @writer_print_section_footer(%struct.WriterContext* %52), !dbg !4264
  br label %if.end94, !dbg !4265

if.end94:                                         ; preds = %do.end93, %if.end16
  %53 = load i32, i32* @do_show_pixel_format_components, align 4, !dbg !4266
  %tobool95 = icmp ne i32 %53, 0, !dbg !4266
  br i1 %tobool95, label %land.lhs.true96, label %if.end108, !dbg !4268

land.lhs.true96:                                  ; preds = %if.end94
  %54 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4269
  %nb_components97 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %54, i32 0, i32 1, !dbg !4271
  %55 = load i8, i8* %nb_components97, align 8, !dbg !4271
  %conv98 = zext i8 %55 to i32, !dbg !4269
  %cmp99 = icmp sgt i32 %conv98, 0, !dbg !4272
  br i1 %cmp99, label %if.then101, label %if.end108, !dbg !4273

if.then101:                                       ; preds = %land.lhs.true96
  %56 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4274
  call void @writer_print_section_header(%struct.WriterContext* %56, i32 24), !dbg !4276
  store i32 0, i32* %i, align 4, !dbg !4277
  br label %for.cond, !dbg !4279

for.cond:                                         ; preds = %for.inc, %if.then101
  %57 = load i32, i32* %i, align 4, !dbg !4280
  %58 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4283
  %nb_components102 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %58, i32 0, i32 1, !dbg !4284
  %59 = load i8, i8* %nb_components102, align 8, !dbg !4284
  %conv103 = zext i8 %59 to i32, !dbg !4283
  %cmp104 = icmp slt i32 %57, %conv103, !dbg !4285
  br i1 %cmp104, label %for.body, label %for.end, !dbg !4286

for.body:                                         ; preds = %for.cond
  %60 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4287
  call void @writer_print_section_header(%struct.WriterContext* %60, i32 23), !dbg !4289
  %61 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4290
  %62 = load i32, i32* %i, align 4, !dbg !4291
  %add = add nsw i32 %62, 1, !dbg !4292
  %conv106 = sext i32 %add to i64, !dbg !4291
  call void @writer_print_integer(%struct.WriterContext* %61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.395, i32 0, i32 0), i64 %conv106), !dbg !4293
  %63 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4294
  %64 = load i32, i32* %i, align 4, !dbg !4295
  %idxprom = sext i32 %64 to i64, !dbg !4296
  %65 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pixdesc, align 8, !dbg !4296
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %65, i32 0, i32 5, !dbg !4297
  %arrayidx = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 %idxprom, !dbg !4296
  %depth = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx, i32 0, i32 4, !dbg !4298
  %66 = load i32, i32* %depth, align 8, !dbg !4298
  %conv107 = sext i32 %66 to i64, !dbg !4296
  call void @writer_print_integer(%struct.WriterContext* %63, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.396, i32 0, i32 0), i64 %conv107), !dbg !4299
  %67 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4300
  call void @writer_print_section_footer(%struct.WriterContext* %67), !dbg !4301
  br label %for.inc, !dbg !4302

for.inc:                                          ; preds = %for.body
  %68 = load i32, i32* %i, align 4, !dbg !4303
  %inc = add nsw i32 %68, 1, !dbg !4303
  store i32 %inc, i32* %i, align 4, !dbg !4303
  br label %for.cond, !dbg !4305, !llvm.loop !4306

for.end:                                          ; preds = %for.cond
  %69 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4308
  call void @writer_print_section_footer(%struct.WriterContext* %69), !dbg !4309
  br label %if.end108, !dbg !4310

if.end108:                                        ; preds = %for.end, %land.lhs.true96, %if.end94
  %70 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4311
  call void @writer_print_section_footer(%struct.WriterContext* %70), !dbg !4312
  br label %while.cond, !dbg !4313, !llvm.loop !4315

while.end:                                        ; preds = %while.cond
  %71 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4316
  call void @writer_print_section_footer(%struct.WriterContext* %71), !dbg !4317
  ret void, !dbg !4318
}

; Function Attrs: nounwind uwtable
define internal i32 @probe_file(%struct.WriterContext* %wctx, i8* %filename) #0 !dbg !4319 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %filename.addr = alloca i8*, align 8
  %ifile = alloca %struct.InputFile, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %section_id = alloca i32, align 4
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !4322, metadata !2571), !dbg !4323
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !4324, metadata !2571), !dbg !4325
  call void @llvm.dbg.declare(metadata %struct.InputFile* %ifile, metadata !4326, metadata !2571), !dbg !4339
  %0 = bitcast %struct.InputFile* %ifile to i8*, !dbg !4339
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 24, i32 8, i1 false), !dbg !4339
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4340, metadata !2571), !dbg !4341
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4342, metadata !2571), !dbg !4343
  call void @llvm.dbg.declare(metadata i32* %section_id, metadata !4344, metadata !2571), !dbg !4345
  %1 = load i32, i32* @do_show_frames, align 4, !dbg !4346
  %tobool = icmp ne i32 %1, 0, !dbg !4346
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4347

lor.rhs:                                          ; preds = %entry
  %2 = load i32, i32* @do_count_frames, align 4, !dbg !4348
  %tobool1 = icmp ne i32 %2, 0, !dbg !4350
  br label %lor.end, !dbg !4350

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  %lor.ext = zext i1 %3 to i32, !dbg !4351
  store i32 %lor.ext, i32* @do_read_frames, align 4, !dbg !4353
  %4 = load i32, i32* @do_show_packets, align 4, !dbg !4354
  %tobool2 = icmp ne i32 %4, 0, !dbg !4354
  br i1 %tobool2, label %lor.end5, label %lor.rhs3, !dbg !4355

lor.rhs3:                                         ; preds = %lor.end
  %5 = load i32, i32* @do_count_packets, align 4, !dbg !4356
  %tobool4 = icmp ne i32 %5, 0, !dbg !4357
  br label %lor.end5, !dbg !4357

lor.end5:                                         ; preds = %lor.rhs3, %lor.end
  %6 = phi i1 [ true, %lor.end ], [ %tobool4, %lor.rhs3 ]
  %lor.ext6 = zext i1 %6 to i32, !dbg !4358
  store i32 %lor.ext6, i32* @do_read_packets, align 4, !dbg !4359
  %7 = load i8*, i8** %filename.addr, align 8, !dbg !4360
  %call = call i32 @open_input_file(%struct.InputFile* %ifile, i8* %7), !dbg !4361
  store i32 %call, i32* %ret, align 4, !dbg !4362
  %8 = load i32, i32* %ret, align 4, !dbg !4363
  %cmp = icmp slt i32 %8, 0, !dbg !4365
  br i1 %cmp, label %if.then, label %if.end, !dbg !4366

if.then:                                          ; preds = %lor.end5
  br label %end, !dbg !4367

if.end:                                           ; preds = %lor.end5
  %fmt_ctx = getelementptr inbounds %struct.InputFile, %struct.InputFile* %ifile, i32 0, i32 0, !dbg !4368
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !4368
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i32 0, i32 6, !dbg !4369
  %10 = load i32, i32* %nb_streams, align 4, !dbg !4369
  store i32 %10, i32* @nb_streams, align 4, !dbg !4370
  %fmt_ctx7 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %ifile, i32 0, i32 0, !dbg !4371
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx7, align 8, !dbg !4371
  %nb_streams8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %11, i32 0, i32 6, !dbg !4373
  %12 = load i32, i32* %nb_streams8, align 4, !dbg !4373
  %conv = zext i32 %12 to i64, !dbg !4374
  %call9 = call i32 @av_reallocp_array(i8* bitcast (i64** @nb_streams_frames to i8*), i64 %conv, i64 8), !dbg !4375
  store i32 %call9, i32* %ret, align 4, !dbg !4376
  %13 = load i32, i32* %ret, align 4, !dbg !4377
  %cmp10 = icmp slt i32 %13, 0, !dbg !4379
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !4380

if.then12:                                        ; preds = %if.end
  br label %end, !dbg !4381

if.end13:                                         ; preds = %if.end
  %14 = load i64*, i64** @nb_streams_frames, align 8, !dbg !4383
  %add.ptr = getelementptr inbounds i64, i64* %14, i64 0, !dbg !4385
  %15 = bitcast i64* %add.ptr to i8*, !dbg !4386
  %fmt_ctx14 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %ifile, i32 0, i32 0, !dbg !4387
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx14, align 8, !dbg !4387
  %nb_streams15 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %16, i32 0, i32 6, !dbg !4388
  %17 = load i32, i32* %nb_streams15, align 4, !dbg !4388
  %sub = sub i32 %17, 0, !dbg !4389
  %conv16 = zext i32 %sub to i64, !dbg !4390
  %mul = mul i64 %conv16, 8, !dbg !4391
  call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 %mul, i32 8, i1 false), !dbg !4386
  %fmt_ctx17 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %ifile, i32 0, i32 0, !dbg !4392
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx17, align 8, !dbg !4392
  %nb_streams18 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i32 0, i32 6, !dbg !4394
  %19 = load i32, i32* %nb_streams18, align 4, !dbg !4394
  %conv19 = zext i32 %19 to i64, !dbg !4395
  %call20 = call i32 @av_reallocp_array(i8* bitcast (i64** @nb_streams_packets to i8*), i64 %conv19, i64 8), !dbg !4396
  store i32 %call20, i32* %ret, align 4, !dbg !4397
  %20 = load i32, i32* %ret, align 4, !dbg !4398
  %cmp21 = icmp slt i32 %20, 0, !dbg !4400
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !4401

if.then23:                                        ; preds = %if.end13
  br label %end, !dbg !4402

if.end24:                                         ; preds = %if.end13
  %21 = load i64*, i64** @nb_streams_packets, align 8, !dbg !4404
  %add.ptr25 = getelementptr inbounds i64, i64* %21, i64 0, !dbg !4406
  %22 = bitcast i64* %add.ptr25 to i8*, !dbg !4407
  %fmt_ctx26 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %ifile, i32 0, i32 0, !dbg !4408
  %23 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx26, align 8, !dbg !4408
  %nb_streams27 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %23, i32 0, i32 6, !dbg !4409
  %24 = load i32, i32* %nb_streams27, align 4, !dbg !4409
  %sub28 = sub i32 %24, 0, !dbg !4410
  %conv29 = zext i32 %sub28 to i64, !dbg !4411
  %mul30 = mul i64 %conv29, 8, !dbg !4412
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 %mul30, i32 8, i1 false), !dbg !4407
  %fmt_ctx31 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %ifile, i32 0, i32 0, !dbg !4413
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx31, align 8, !dbg !4413
  %nb_streams32 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %25, i32 0, i32 6, !dbg !4415
  %26 = load i32, i32* %nb_streams32, align 4, !dbg !4415
  %conv33 = zext i32 %26 to i64, !dbg !4416
  %call34 = call i32 @av_reallocp_array(i8* bitcast (i32** @selected_streams to i8*), i64 %conv33, i64 4), !dbg !4417
  store i32 %call34, i32* %ret, align 4, !dbg !4418
  %27 = load i32, i32* %ret, align 4, !dbg !4419
  %cmp35 = icmp slt i32 %27, 0, !dbg !4421
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !4422

if.then37:                                        ; preds = %if.end24
  br label %end, !dbg !4423

if.end38:                                         ; preds = %if.end24
  %28 = load i32*, i32** @selected_streams, align 8, !dbg !4425
  %add.ptr39 = getelementptr inbounds i32, i32* %28, i64 0, !dbg !4427
  %29 = bitcast i32* %add.ptr39 to i8*, !dbg !4428
  %fmt_ctx40 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %ifile, i32 0, i32 0, !dbg !4429
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx40, align 8, !dbg !4429
  %nb_streams41 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %30, i32 0, i32 6, !dbg !4430
  %31 = load i32, i32* %nb_streams41, align 4, !dbg !4430
  %sub42 = sub i32 %31, 0, !dbg !4431
  %conv43 = zext i32 %sub42 to i64, !dbg !4432
  %mul44 = mul i64 %conv43, 4, !dbg !4433
  call void @llvm.memset.p0i8.i64(i8* %29, i8 0, i64 %mul44, i32 4, i1 false), !dbg !4428
  store i32 0, i32* %i, align 4, !dbg !4434
  br label %for.cond, !dbg !4436

for.cond:                                         ; preds = %for.inc, %if.end38
  %32 = load i32, i32* %i, align 4, !dbg !4437
  %fmt_ctx45 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %ifile, i32 0, i32 0, !dbg !4440
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx45, align 8, !dbg !4440
  %nb_streams46 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %33, i32 0, i32 6, !dbg !4441
  %34 = load i32, i32* %nb_streams46, align 4, !dbg !4441
  %cmp47 = icmp ult i32 %32, %34, !dbg !4442
  br i1 %cmp47, label %for.body, label %for.end, !dbg !4443

for.body:                                         ; preds = %for.cond
  %35 = load i8*, i8** @stream_specifier, align 8, !dbg !4444
  %tobool49 = icmp ne i8* %35, null, !dbg !4444
  br i1 %tobool49, label %if.then50, label %if.else60, !dbg !4447

if.then50:                                        ; preds = %for.body
  %fmt_ctx51 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %ifile, i32 0, i32 0, !dbg !4448
  %36 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx51, align 8, !dbg !4448
  %37 = load i32, i32* %i, align 4, !dbg !4450
  %idxprom = sext i32 %37 to i64, !dbg !4451
  %fmt_ctx52 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %ifile, i32 0, i32 0, !dbg !4452
  %38 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx52, align 8, !dbg !4452
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %38, i32 0, i32 7, !dbg !4453
  %39 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !4453
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %39, i64 %idxprom, !dbg !4451
  %40 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !4451
  %41 = load i8*, i8** @stream_specifier, align 8, !dbg !4454
  %call53 = call i32 @avformat_match_stream_specifier(%struct.AVFormatContext* %36, %struct.AVStream* %40, i8* %41), !dbg !4455
  store i32 %call53, i32* %ret, align 4, !dbg !4456
  %42 = load i32, i32* %ret, align 4, !dbg !4457
  %cmp54 = icmp slt i32 %42, 0, !dbg !4459
  br i1 %cmp54, label %if.then56, label %if.else, !dbg !4460

if.then56:                                        ; preds = %if.then50
  br label %end, !dbg !4461

if.else:                                          ; preds = %if.then50
  %43 = load i32, i32* %ret, align 4, !dbg !4463
  %44 = load i32, i32* %i, align 4, !dbg !4464
  %idxprom57 = sext i32 %44 to i64, !dbg !4465
  %45 = load i32*, i32** @selected_streams, align 8, !dbg !4465
  %arrayidx58 = getelementptr inbounds i32, i32* %45, i64 %idxprom57, !dbg !4465
  store i32 %43, i32* %arrayidx58, align 4, !dbg !4466
  br label %if.end59

if.end59:                                         ; preds = %if.else
  store i32 0, i32* %ret, align 4, !dbg !4467
  br label %if.end63, !dbg !4468

if.else60:                                        ; preds = %for.body
  %46 = load i32, i32* %i, align 4, !dbg !4469
  %idxprom61 = sext i32 %46 to i64, !dbg !4471
  %47 = load i32*, i32** @selected_streams, align 8, !dbg !4471
  %arrayidx62 = getelementptr inbounds i32, i32* %47, i64 %idxprom61, !dbg !4471
  store i32 1, i32* %arrayidx62, align 4, !dbg !4472
  br label %if.end63

if.end63:                                         ; preds = %if.else60, %if.end59
  %48 = load i32, i32* %i, align 4, !dbg !4473
  %idxprom64 = sext i32 %48 to i64, !dbg !4475
  %49 = load i32*, i32** @selected_streams, align 8, !dbg !4475
  %arrayidx65 = getelementptr inbounds i32, i32* %49, i64 %idxprom64, !dbg !4475
  %50 = load i32, i32* %arrayidx65, align 4, !dbg !4475
  %tobool66 = icmp ne i32 %50, 0, !dbg !4475
  br i1 %tobool66, label %if.end72, label %if.then67, !dbg !4476

if.then67:                                        ; preds = %if.end63
  %51 = load i32, i32* %i, align 4, !dbg !4477
  %idxprom68 = sext i32 %51 to i64, !dbg !4478
  %fmt_ctx69 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %ifile, i32 0, i32 0, !dbg !4479
  %52 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx69, align 8, !dbg !4479
  %streams70 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %52, i32 0, i32 7, !dbg !4480
  %53 = load %struct.AVStream**, %struct.AVStream*** %streams70, align 8, !dbg !4480
  %arrayidx71 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %53, i64 %idxprom68, !dbg !4478
  %54 = load %struct.AVStream*, %struct.AVStream** %arrayidx71, align 8, !dbg !4478
  %discard = getelementptr inbounds %struct.AVStream, %struct.AVStream* %54, i32 0, i32 9, !dbg !4481
  store i32 48, i32* %discard, align 4, !dbg !4482
  br label %if.end72, !dbg !4478

if.end72:                                         ; preds = %if.then67, %if.end63
  br label %for.inc, !dbg !4483

for.inc:                                          ; preds = %if.end72
  %55 = load i32, i32* %i, align 4, !dbg !4484
  %inc = add nsw i32 %55, 1, !dbg !4484
  store i32 %inc, i32* %i, align 4, !dbg !4484
  br label %for.cond, !dbg !4486, !llvm.loop !4487

for.end:                                          ; preds = %for.cond
  %56 = load i32, i32* @do_read_frames, align 4, !dbg !4489
  %tobool73 = icmp ne i32 %56, 0, !dbg !4489
  br i1 %tobool73, label %if.then75, label %lor.lhs.false, !dbg !4491

lor.lhs.false:                                    ; preds = %for.end
  %57 = load i32, i32* @do_read_packets, align 4, !dbg !4492
  %tobool74 = icmp ne i32 %57, 0, !dbg !4492
  br i1 %tobool74, label %if.then75, label %if.end104, !dbg !4494

if.then75:                                        ; preds = %lor.lhs.false, %for.end
  %58 = load i32, i32* @do_show_frames, align 4, !dbg !4495
  %tobool76 = icmp ne i32 %58, 0, !dbg !4495
  br i1 %tobool76, label %land.lhs.true, label %if.else81, !dbg !4498

land.lhs.true:                                    ; preds = %if.then75
  %59 = load i32, i32* @do_show_packets, align 4, !dbg !4499
  %tobool77 = icmp ne i32 %59, 0, !dbg !4499
  br i1 %tobool77, label %land.lhs.true78, label %if.else81, !dbg !4501

land.lhs.true78:                                  ; preds = %land.lhs.true
  %60 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4502
  %writer = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %60, i32 0, i32 1, !dbg !4503
  %61 = load %struct.Writer*, %struct.Writer** %writer, align 8, !dbg !4503
  %flags = getelementptr inbounds %struct.Writer, %struct.Writer* %61, i32 0, i32 10, !dbg !4504
  %62 = load i32, i32* %flags, align 8, !dbg !4504
  %and = and i32 %62, 2, !dbg !4505
  %tobool79 = icmp ne i32 %and, 0, !dbg !4505
  br i1 %tobool79, label %if.then80, label %if.else81, !dbg !4506

if.then80:                                        ; preds = %land.lhs.true78
  store i32 18, i32* %section_id, align 4, !dbg !4508
  br label %if.end88, !dbg !4509

if.else81:                                        ; preds = %land.lhs.true78, %land.lhs.true, %if.then75
  %63 = load i32, i32* @do_show_packets, align 4, !dbg !4510
  %tobool82 = icmp ne i32 %63, 0, !dbg !4510
  br i1 %tobool82, label %land.lhs.true83, label %if.else86, !dbg !4512

land.lhs.true83:                                  ; preds = %if.else81
  %64 = load i32, i32* @do_show_frames, align 4, !dbg !4513
  %tobool84 = icmp ne i32 %64, 0, !dbg !4513
  br i1 %tobool84, label %if.else86, label %if.then85, !dbg !4515

if.then85:                                        ; preds = %land.lhs.true83
  store i32 17, i32* %section_id, align 4, !dbg !4516
  br label %if.end87, !dbg !4517

if.else86:                                        ; preds = %land.lhs.true83, %if.else81
  store i32 7, i32* %section_id, align 4, !dbg !4518
  br label %if.end87

if.end87:                                         ; preds = %if.else86, %if.then85
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then80
  %65 = load i32, i32* @do_show_frames, align 4, !dbg !4519
  %tobool89 = icmp ne i32 %65, 0, !dbg !4519
  br i1 %tobool89, label %if.then92, label %lor.lhs.false90, !dbg !4521

lor.lhs.false90:                                  ; preds = %if.end88
  %66 = load i32, i32* @do_show_packets, align 4, !dbg !4522
  %tobool91 = icmp ne i32 %66, 0, !dbg !4522
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !4524

if.then92:                                        ; preds = %lor.lhs.false90, %if.end88
  %67 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4525
  %68 = load i32, i32* %section_id, align 4, !dbg !4526
  call void @writer_print_section_header(%struct.WriterContext* %67, i32 %68), !dbg !4527
  br label %if.end93, !dbg !4527

if.end93:                                         ; preds = %if.then92, %lor.lhs.false90
  %69 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4528
  %call94 = call i32 @read_packets(%struct.WriterContext* %69, %struct.InputFile* %ifile), !dbg !4529
  store i32 %call94, i32* %ret, align 4, !dbg !4530
  %70 = load i32, i32* @do_show_frames, align 4, !dbg !4531
  %tobool95 = icmp ne i32 %70, 0, !dbg !4531
  br i1 %tobool95, label %if.then98, label %lor.lhs.false96, !dbg !4533

lor.lhs.false96:                                  ; preds = %if.end93
  %71 = load i32, i32* @do_show_packets, align 4, !dbg !4534
  %tobool97 = icmp ne i32 %71, 0, !dbg !4534
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !4536

if.then98:                                        ; preds = %lor.lhs.false96, %if.end93
  %72 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4537
  call void @writer_print_section_footer(%struct.WriterContext* %72), !dbg !4538
  br label %if.end99, !dbg !4538

if.end99:                                         ; preds = %if.then98, %lor.lhs.false96
  %73 = load i32, i32* %ret, align 4, !dbg !4539
  %cmp100 = icmp slt i32 %73, 0, !dbg !4541
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !4542

if.then102:                                       ; preds = %if.end99
  br label %end, !dbg !4543

if.end103:                                        ; preds = %if.end99
  br label %if.end104, !dbg !4545

if.end104:                                        ; preds = %if.end103, %lor.lhs.false
  %74 = load i32, i32* @do_show_programs, align 4, !dbg !4546
  %tobool105 = icmp ne i32 %74, 0, !dbg !4546
  br i1 %tobool105, label %if.then106, label %if.end112, !dbg !4548

if.then106:                                       ; preds = %if.end104
  %75 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4549
  %call107 = call i32 @show_programs(%struct.WriterContext* %75, %struct.InputFile* %ifile), !dbg !4551
  store i32 %call107, i32* %ret, align 4, !dbg !4552
  %76 = load i32, i32* %ret, align 4, !dbg !4553
  %cmp108 = icmp slt i32 %76, 0, !dbg !4555
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !4556

if.then110:                                       ; preds = %if.then106
  br label %end, !dbg !4557

if.end111:                                        ; preds = %if.then106
  br label %if.end112, !dbg !4559

if.end112:                                        ; preds = %if.end111, %if.end104
  %77 = load i32, i32* @do_show_streams, align 4, !dbg !4560
  %tobool113 = icmp ne i32 %77, 0, !dbg !4560
  br i1 %tobool113, label %if.then114, label %if.end120, !dbg !4562

if.then114:                                       ; preds = %if.end112
  %78 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4563
  %call115 = call i32 @show_streams(%struct.WriterContext* %78, %struct.InputFile* %ifile), !dbg !4565
  store i32 %call115, i32* %ret, align 4, !dbg !4566
  %79 = load i32, i32* %ret, align 4, !dbg !4567
  %cmp116 = icmp slt i32 %79, 0, !dbg !4569
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !4570

if.then118:                                       ; preds = %if.then114
  br label %end, !dbg !4571

if.end119:                                        ; preds = %if.then114
  br label %if.end120, !dbg !4573

if.end120:                                        ; preds = %if.end119, %if.end112
  %80 = load i32, i32* @do_show_chapters, align 4, !dbg !4574
  %tobool121 = icmp ne i32 %80, 0, !dbg !4574
  br i1 %tobool121, label %if.then122, label %if.end128, !dbg !4576

if.then122:                                       ; preds = %if.end120
  %81 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4577
  %call123 = call i32 @show_chapters(%struct.WriterContext* %81, %struct.InputFile* %ifile), !dbg !4579
  store i32 %call123, i32* %ret, align 4, !dbg !4580
  %82 = load i32, i32* %ret, align 4, !dbg !4581
  %cmp124 = icmp slt i32 %82, 0, !dbg !4583
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !4584

if.then126:                                       ; preds = %if.then122
  br label %end, !dbg !4585

if.end127:                                        ; preds = %if.then122
  br label %if.end128, !dbg !4587

if.end128:                                        ; preds = %if.end127, %if.end120
  %83 = load i32, i32* @do_show_format, align 4, !dbg !4588
  %tobool129 = icmp ne i32 %83, 0, !dbg !4588
  br i1 %tobool129, label %if.then130, label %if.end136, !dbg !4590

if.then130:                                       ; preds = %if.end128
  %84 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4591
  %call131 = call i32 @show_format(%struct.WriterContext* %84, %struct.InputFile* %ifile), !dbg !4593
  store i32 %call131, i32* %ret, align 4, !dbg !4594
  %85 = load i32, i32* %ret, align 4, !dbg !4595
  %cmp132 = icmp slt i32 %85, 0, !dbg !4597
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !4598

if.then134:                                       ; preds = %if.then130
  br label %end, !dbg !4599

if.end135:                                        ; preds = %if.then130
  br label %if.end136, !dbg !4601

if.end136:                                        ; preds = %if.end135, %if.end128
  br label %end, !dbg !4602

end:                                              ; preds = %if.end136, %if.then134, %if.then126, %if.then118, %if.then110, %if.then102, %if.then56, %if.then37, %if.then23, %if.then12, %if.then
  %fmt_ctx137 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %ifile, i32 0, i32 0, !dbg !4604
  %86 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx137, align 8, !dbg !4604
  %tobool138 = icmp ne %struct.AVFormatContext* %86, null, !dbg !4606
  br i1 %tobool138, label %if.then139, label %if.end140, !dbg !4607

if.then139:                                       ; preds = %end
  call void @close_input_file(%struct.InputFile* %ifile), !dbg !4608
  br label %if.end140, !dbg !4608

if.end140:                                        ; preds = %if.then139, %end
  call void @av_freep(i8* bitcast (i64** @nb_streams_frames to i8*)), !dbg !4609
  call void @av_freep(i8* bitcast (i64** @nb_streams_packets to i8*)), !dbg !4610
  call void @av_freep(i8* bitcast (i32** @selected_streams to i8*)), !dbg !4611
  %87 = load i32, i32* %ret, align 4, !dbg !4612
  ret i32 %87, !dbg !4613
}

; Function Attrs: nounwind uwtable
define internal void @show_error(%struct.WriterContext* %w, i32 %err) #0 !dbg !4614 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %err.addr = alloca i32, align 4
  %errbuf = alloca [128 x i8], align 16
  %errbuf_ptr = alloca i8*, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !4615, metadata !2571), !dbg !4616
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4617, metadata !2571), !dbg !4618
  call void @llvm.dbg.declare(metadata [128 x i8]* %errbuf, metadata !4619, metadata !2571), !dbg !4623
  call void @llvm.dbg.declare(metadata i8** %errbuf_ptr, metadata !4624, metadata !2571), !dbg !4625
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %errbuf, i32 0, i32 0, !dbg !4626
  store i8* %arraydecay, i8** %errbuf_ptr, align 8, !dbg !4625
  %0 = load i32, i32* %err.addr, align 4, !dbg !4627
  %arraydecay1 = getelementptr inbounds [128 x i8], [128 x i8]* %errbuf, i32 0, i32 0, !dbg !4629
  %call = call i32 @av_strerror(i32 %0, i8* %arraydecay1, i64 128), !dbg !4630
  %cmp = icmp slt i32 %call, 0, !dbg !4631
  br i1 %cmp, label %if.then, label %if.end, !dbg !4632

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4633
  %sub = sub nsw i32 0, %1, !dbg !4634
  %call2 = call i8* @strerror(i32 %sub) #9, !dbg !4635
  store i8* %call2, i8** %errbuf_ptr, align 8, !dbg !4636
  br label %if.end, !dbg !4637

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4638
  call void @writer_print_section_header(%struct.WriterContext* %2, i32 3), !dbg !4639
  %3 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4640
  %4 = load i32, i32* %err.addr, align 4, !dbg !4641
  %conv = sext i32 %4 to i64, !dbg !4641
  call void @writer_print_integer(%struct.WriterContext* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.580, i32 0, i32 0), i64 %conv), !dbg !4642
  %5 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4643
  %6 = load i8*, i8** %errbuf_ptr, align 8, !dbg !4644
  %call3 = call i32 @writer_print_string(%struct.WriterContext* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.581, i32 0, i32 0), i8* %6, i32 0), !dbg !4645
  %7 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !4646
  call void @writer_print_section_footer(%struct.WriterContext* %7), !dbg !4647
  ret void, !dbg !4648
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @writer_print_section_footer(%struct.WriterContext* %wctx) #4 !dbg !4649 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %section_id = alloca i32, align 4
  %parent_section_id = alloca i32, align 4
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !4650, metadata !2571), !dbg !4651
  call void @llvm.dbg.declare(metadata i32* %section_id, metadata !4652, metadata !2571), !dbg !4653
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4654
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 6, !dbg !4655
  %1 = load i32, i32* %level, align 4, !dbg !4655
  %idxprom = sext i32 %1 to i64, !dbg !4656
  %2 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4656
  %section = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %2, i32 0, i32 8, !dbg !4657
  %arrayidx = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section, i64 0, i64 %idxprom, !dbg !4656
  %3 = load %struct.section*, %struct.section** %arrayidx, align 8, !dbg !4656
  %id = getelementptr inbounds %struct.section, %struct.section* %3, i32 0, i32 0, !dbg !4658
  %4 = load i32, i32* %id, align 8, !dbg !4658
  store i32 %4, i32* %section_id, align 4, !dbg !4653
  call void @llvm.dbg.declare(metadata i32* %parent_section_id, metadata !4659, metadata !2571), !dbg !4660
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4661
  %level1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 6, !dbg !4662
  %6 = load i32, i32* %level1, align 4, !dbg !4662
  %tobool = icmp ne i32 %6, 0, !dbg !4661
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4661

cond.true:                                        ; preds = %entry
  %7 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4663
  %level2 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 6, !dbg !4664
  %8 = load i32, i32* %level2, align 4, !dbg !4664
  %sub = sub nsw i32 %8, 1, !dbg !4665
  %idxprom3 = sext i32 %sub to i64, !dbg !4666
  %9 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4666
  %section4 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %9, i32 0, i32 8, !dbg !4667
  %arrayidx5 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section4, i64 0, i64 %idxprom3, !dbg !4666
  %10 = load %struct.section*, %struct.section** %arrayidx5, align 8, !dbg !4666
  %id6 = getelementptr inbounds %struct.section, %struct.section* %10, i32 0, i32 0, !dbg !4668
  %11 = load i32, i32* %id6, align 8, !dbg !4668
  br label %cond.end, !dbg !4669

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4671

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %11, %cond.true ], [ -1, %cond.false ], !dbg !4673
  store i32 %cond, i32* %parent_section_id, align 4, !dbg !4675
  %12 = load i32, i32* %parent_section_id, align 4, !dbg !4676
  %cmp = icmp ne i32 %12, -1, !dbg !4678
  br i1 %cmp, label %if.then, label %if.end, !dbg !4679

if.then:                                          ; preds = %cond.end
  %13 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4680
  %level7 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %13, i32 0, i32 6, !dbg !4681
  %14 = load i32, i32* %level7, align 4, !dbg !4681
  %sub8 = sub nsw i32 %14, 1, !dbg !4682
  %idxprom9 = sext i32 %sub8 to i64, !dbg !4683
  %15 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4683
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %15, i32 0, i32 7, !dbg !4684
  %arrayidx10 = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom9, !dbg !4683
  %16 = load i32, i32* %arrayidx10, align 4, !dbg !4685
  %inc = add i32 %16, 1, !dbg !4685
  store i32 %inc, i32* %arrayidx10, align 4, !dbg !4685
  br label %if.end, !dbg !4683

if.end:                                           ; preds = %if.then, %cond.end
  %17 = load i32, i32* %parent_section_id, align 4, !dbg !4686
  %cmp11 = icmp eq i32 %17, 18, !dbg !4688
  br i1 %cmp11, label %if.then12, label %if.end18, !dbg !4689

if.then12:                                        ; preds = %if.end
  %18 = load i32, i32* %section_id, align 4, !dbg !4690
  %cmp13 = icmp eq i32 %18, 15, !dbg !4693
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !4694

if.then14:                                        ; preds = %if.then12
  %19 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4695
  %nb_section_packet = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %19, i32 0, i32 10, !dbg !4697
  %20 = load i32, i32* %nb_section_packet, align 8, !dbg !4698
  %inc15 = add i32 %20, 1, !dbg !4698
  store i32 %inc15, i32* %nb_section_packet, align 8, !dbg !4698
  br label %if.end17, !dbg !4695

if.else:                                          ; preds = %if.then12
  %21 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4699
  %nb_section_frame = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %21, i32 0, i32 11, !dbg !4700
  %22 = load i32, i32* %nb_section_frame, align 4, !dbg !4701
  %inc16 = add i32 %22, 1, !dbg !4701
  store i32 %inc16, i32* %nb_section_frame, align 4, !dbg !4701
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then14
  br label %if.end18, !dbg !4702

if.end18:                                         ; preds = %if.end17, %if.end
  %23 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4703
  %writer = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %23, i32 0, i32 1, !dbg !4705
  %24 = load %struct.Writer*, %struct.Writer** %writer, align 8, !dbg !4705
  %print_section_footer = getelementptr inbounds %struct.Writer, %struct.Writer* %24, i32 0, i32 6, !dbg !4706
  %25 = load void (%struct.WriterContext*)*, void (%struct.WriterContext*)** %print_section_footer, align 8, !dbg !4706
  %tobool19 = icmp ne void (%struct.WriterContext*)* %25, null, !dbg !4703
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !4707

if.then20:                                        ; preds = %if.end18
  %26 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4708
  %writer21 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %26, i32 0, i32 1, !dbg !4709
  %27 = load %struct.Writer*, %struct.Writer** %writer21, align 8, !dbg !4709
  %print_section_footer22 = getelementptr inbounds %struct.Writer, %struct.Writer* %27, i32 0, i32 6, !dbg !4710
  %28 = load void (%struct.WriterContext*)*, void (%struct.WriterContext*)** %print_section_footer22, align 8, !dbg !4710
  %29 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4711
  call void %28(%struct.WriterContext* %29), !dbg !4708
  br label %if.end23, !dbg !4708

if.end23:                                         ; preds = %if.then20, %if.end18
  %30 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !4712
  %level24 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %30, i32 0, i32 6, !dbg !4713
  %31 = load i32, i32* %level24, align 4, !dbg !4714
  %dec = add nsw i32 %31, -1, !dbg !4714
  store i32 %dec, i32* %level24, align 4, !dbg !4714
  ret void, !dbg !4715
}

; Function Attrs: nounwind uwtable
define internal void @writer_close(%struct.WriterContext** %wctx) #0 !dbg !4716 {
entry:
  %wctx.addr = alloca %struct.WriterContext**, align 8
  %i = alloca i32, align 4
  store %struct.WriterContext** %wctx, %struct.WriterContext*** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext*** %wctx.addr, metadata !4719, metadata !2571), !dbg !4720
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4721, metadata !2571), !dbg !4722
  %0 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !4723
  %1 = load %struct.WriterContext*, %struct.WriterContext** %0, align 8, !dbg !4725
  %tobool = icmp ne %struct.WriterContext* %1, null, !dbg !4725
  br i1 %tobool, label %if.end, label %if.then, !dbg !4726

if.then:                                          ; preds = %entry
  br label %return, !dbg !4727

if.end:                                           ; preds = %entry
  %2 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !4728
  %3 = load %struct.WriterContext*, %struct.WriterContext** %2, align 8, !dbg !4730
  %writer = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 1, !dbg !4731
  %4 = load %struct.Writer*, %struct.Writer** %writer, align 8, !dbg !4731
  %uninit = getelementptr inbounds %struct.Writer, %struct.Writer* %4, i32 0, i32 4, !dbg !4732
  %5 = load void (%struct.WriterContext*)*, void (%struct.WriterContext*)** %uninit, align 8, !dbg !4732
  %tobool1 = icmp ne void (%struct.WriterContext*)* %5, null, !dbg !4733
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !4734

if.then2:                                         ; preds = %if.end
  %6 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !4735
  %7 = load %struct.WriterContext*, %struct.WriterContext** %6, align 8, !dbg !4736
  %writer3 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 1, !dbg !4737
  %8 = load %struct.Writer*, %struct.Writer** %writer3, align 8, !dbg !4737
  %uninit4 = getelementptr inbounds %struct.Writer, %struct.Writer* %8, i32 0, i32 4, !dbg !4738
  %9 = load void (%struct.WriterContext*)*, void (%struct.WriterContext*)** %uninit4, align 8, !dbg !4738
  %10 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !4739
  %11 = load %struct.WriterContext*, %struct.WriterContext** %10, align 8, !dbg !4740
  call void %9(%struct.WriterContext* %11), !dbg !4741
  br label %if.end5, !dbg !4741

if.end5:                                          ; preds = %if.then2, %if.end
  store i32 0, i32* %i, align 4, !dbg !4742
  br label %for.cond, !dbg !4744

for.cond:                                         ; preds = %for.inc, %if.end5
  %12 = load i32, i32* %i, align 4, !dbg !4745
  %cmp = icmp slt i32 %12, 10, !dbg !4748
  br i1 %cmp, label %for.body, label %for.end, !dbg !4749

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !4750
  %idxprom = sext i32 %13 to i64, !dbg !4751
  %14 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !4752
  %15 = load %struct.WriterContext*, %struct.WriterContext** %14, align 8, !dbg !4753
  %section_pbuf = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %15, i32 0, i32 9, !dbg !4754
  %arrayidx = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf, i64 0, i64 %idxprom, !dbg !4751
  %call = call i32 @av_bprint_finalize(%struct.AVBPrint* %arrayidx, i8** null), !dbg !4755
  br label %for.inc, !dbg !4755

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !4756
  %inc = add nsw i32 %16, 1, !dbg !4756
  store i32 %inc, i32* %i, align 4, !dbg !4756
  br label %for.cond, !dbg !4758, !llvm.loop !4759

for.end:                                          ; preds = %for.cond
  %17 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !4761
  %18 = load %struct.WriterContext*, %struct.WriterContext** %17, align 8, !dbg !4763
  %writer6 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %18, i32 0, i32 1, !dbg !4764
  %19 = load %struct.Writer*, %struct.Writer** %writer6, align 8, !dbg !4764
  %priv_class = getelementptr inbounds %struct.Writer, %struct.Writer* %19, i32 0, i32 0, !dbg !4765
  %20 = load %struct.AVClass*, %struct.AVClass** %priv_class, align 8, !dbg !4765
  %tobool7 = icmp ne %struct.AVClass* %20, null, !dbg !4766
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !4767

if.then8:                                         ; preds = %for.end
  %21 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !4768
  %22 = load %struct.WriterContext*, %struct.WriterContext** %21, align 8, !dbg !4769
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %22, i32 0, i32 3, !dbg !4770
  %23 = load i8*, i8** %priv, align 8, !dbg !4770
  call void @av_opt_free(i8* %23), !dbg !4771
  br label %if.end9, !dbg !4771

if.end9:                                          ; preds = %if.then8, %for.end
  %24 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !4772
  %25 = load %struct.WriterContext*, %struct.WriterContext** %24, align 8, !dbg !4773
  %priv10 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %25, i32 0, i32 3, !dbg !4774
  %26 = bitcast i8** %priv10 to i8*, !dbg !4775
  call void @av_freep(i8* %26), !dbg !4776
  %27 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !4777
  %28 = load %struct.WriterContext*, %struct.WriterContext** %27, align 8, !dbg !4778
  %29 = bitcast %struct.WriterContext* %28 to i8*, !dbg !4778
  call void @av_opt_free(i8* %29), !dbg !4779
  %30 = load %struct.WriterContext**, %struct.WriterContext*** %wctx.addr, align 8, !dbg !4780
  %31 = bitcast %struct.WriterContext** %30 to i8*, !dbg !4780
  call void @av_freep(i8* %31), !dbg !4781
  br label %return, !dbg !4782

return:                                           ; preds = %if.end9, %if.then
  ret void, !dbg !4783
}

declare void @av_freep(i8*) #2

declare void @av_hash_freep(%struct.AVHashContext**) #2

declare void @uninit_opts() #2

declare void @av_dict_free(%struct.AVDictionary**) #2

declare i32 @avformat_network_deinit() #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) #3

declare i32 @show_license(i8*, i8*, i8*) #2

declare i32 @show_help(i8*, i8*, i8*) #2

declare i32 @show_version(i8*, i8*, i8*) #2

declare i32 @show_buildconf(i8*, i8*, i8*) #2

declare i32 @show_formats(i8*, i8*, i8*) #2

declare i32 @show_muxers(i8*, i8*, i8*) #2

declare i32 @show_demuxers(i8*, i8*, i8*) #2

declare i32 @show_devices(i8*, i8*, i8*) #2

declare i32 @show_codecs(i8*, i8*, i8*) #2

declare i32 @show_decoders(i8*, i8*, i8*) #2

declare i32 @show_encoders(i8*, i8*, i8*) #2

declare i32 @show_bsfs(i8*, i8*, i8*) #2

declare i32 @show_protocols(i8*, i8*, i8*) #2

declare i32 @show_filters(i8*, i8*, i8*) #2

declare i32 @show_pix_fmts(i8*, i8*, i8*) #2

declare i32 @show_layouts(i8*, i8*, i8*) #2

declare i32 @show_sample_fmts(i8*, i8*, i8*) #2

declare i32 @show_colors(i8*, i8*, i8*) #2

declare i32 @opt_loglevel(i8*, i8*, i8*) #2

declare i32 @opt_report(i8*) #2

declare i32 @opt_max_alloc(i8*, i8*, i8*) #2

declare i32 @opt_cpuflags(i8*, i8*, i8*) #2

declare i32 @show_sources(i8*, i8*, i8*) #2

declare i32 @show_sinks(i8*, i8*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @opt_format(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !4785 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !4786, metadata !2571), !dbg !4787
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !4788, metadata !2571), !dbg !4789
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4790, metadata !2571), !dbg !4791
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !4792
  %call = call %struct.AVInputFormat* @av_find_input_format(i8* %0), !dbg !4793
  store %struct.AVInputFormat* %call, %struct.AVInputFormat** @iformat, align 8, !dbg !4794
  %1 = load %struct.AVInputFormat*, %struct.AVInputFormat** @iformat, align 8, !dbg !4795
  %tobool = icmp ne %struct.AVInputFormat* %1, null, !dbg !4795
  br i1 %tobool, label %if.end, label %if.then, !dbg !4797

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !4798
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.147, i32 0, i32 0), i8* %2), !dbg !4800
  store i32 -22, i32* %retval, align 4, !dbg !4801
  br label %return, !dbg !4801

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4802
  br label %return, !dbg !4802

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !4803
  ret i32 %3, !dbg !4803
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_pretty(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !4804 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !4805, metadata !2571), !dbg !4806
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !4807, metadata !2571), !dbg !4808
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4809, metadata !2571), !dbg !4810
  store i32 1, i32* @show_value_unit, align 4, !dbg !4811
  store i32 1, i32* @use_value_prefix, align 4, !dbg !4812
  store i32 1, i32* @use_byte_value_binary_prefix, align 4, !dbg !4813
  store i32 1, i32* @use_value_sexagesimal_format, align 4, !dbg !4814
  ret i32 0, !dbg !4815
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_sections(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !4816 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !4817, metadata !2571), !dbg !4818
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !4819, metadata !2571), !dbg !4820
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4821, metadata !2571), !dbg !4822
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([243 x i8], [243 x i8]* @.str.148, i32 0, i32 0)), !dbg !4823
  call void @print_section(i32 34, i32 0), !dbg !4824
  ret i32 0, !dbg !4825
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_error(i8* %opt, i8* %arg) #0 !dbg !4826 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !4829, metadata !2571), !dbg !4830
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4831, metadata !2571), !dbg !4832
  call void @mark_section_show_entries(i32 3, i32 1, %struct.AVDictionary* null), !dbg !4833
  ret i32 0, !dbg !4834
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_format(i8* %opt, i8* %arg) #0 !dbg !4835 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !4836, metadata !2571), !dbg !4837
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4838, metadata !2571), !dbg !4839
  call void @mark_section_show_entries(i32 4, i32 1, %struct.AVDictionary* null), !dbg !4840
  ret i32 0, !dbg !4841
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_frames(i8* %opt, i8* %arg) #0 !dbg !4842 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !4843, metadata !2571), !dbg !4844
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4845, metadata !2571), !dbg !4846
  call void @mark_section_show_entries(i32 7, i32 1, %struct.AVDictionary* null), !dbg !4847
  ret i32 0, !dbg !4848
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_format_entry(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !4849 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !4850, metadata !2571), !dbg !4851
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !4852, metadata !2571), !dbg !4853
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4854, metadata !2571), !dbg !4855
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !4856, metadata !2571), !dbg !4857
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !4858
  %call = call i8* (i8*, ...) @av_asprintf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.152, i32 0, i32 0), i8* %0), !dbg !4859
  store i8* %call, i8** %buf, align 8, !dbg !4857
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4860, metadata !2571), !dbg !4861
  %1 = load i8*, i8** %buf, align 8, !dbg !4862
  %tobool = icmp ne i8* %1, null, !dbg !4862
  br i1 %tobool, label %if.end, label %if.then, !dbg !4864

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !4865
  br label %return, !dbg !4865

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %opt.addr, align 8, !dbg !4866
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !4867
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.153, i32 0, i32 0), i8* %2, i8* %3), !dbg !4868
  %4 = load i8*, i8** %optctx.addr, align 8, !dbg !4869
  %5 = load i8*, i8** %opt.addr, align 8, !dbg !4870
  %6 = load i8*, i8** %buf, align 8, !dbg !4871
  %call1 = call i32 @opt_show_entries(i8* %4, i8* %5, i8* %6), !dbg !4872
  store i32 %call1, i32* %ret, align 4, !dbg !4873
  %7 = load i8*, i8** %buf, align 8, !dbg !4874
  call void @av_free(i8* %7), !dbg !4875
  %8 = load i32, i32* %ret, align 4, !dbg !4876
  store i32 %8, i32* %retval, align 4, !dbg !4877
  br label %return, !dbg !4877

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !4878
  ret i32 %9, !dbg !4878
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_entries(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !4879 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  %entries = alloca %struct.AVDictionary*, align 8
  %section_name = alloca i8*, align 8
  %show_all_entries = alloca i32, align 4
  %entry11 = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !4880, metadata !2571), !dbg !4881
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !4882, metadata !2571), !dbg !4883
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4884, metadata !2571), !dbg !4885
  call void @llvm.dbg.declare(metadata i8** %p, metadata !4886, metadata !2571), !dbg !4887
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !4888
  store i8* %0, i8** %p, align 8, !dbg !4887
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4889, metadata !2571), !dbg !4890
  store i32 0, i32* %ret, align 4, !dbg !4890
  br label %while.cond, !dbg !4891

while.cond:                                       ; preds = %if.end36, %entry
  %1 = load i8*, i8** %p, align 8, !dbg !4892
  %2 = load i8, i8* %1, align 1, !dbg !4894
  %tobool = icmp ne i8 %2, 0, !dbg !4895
  br i1 %tobool, label %while.body, label %while.end37, !dbg !4895

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %entries, metadata !4896, metadata !2571), !dbg !4898
  store %struct.AVDictionary* null, %struct.AVDictionary** %entries, align 8, !dbg !4898
  call void @llvm.dbg.declare(metadata i8** %section_name, metadata !4899, metadata !2571), !dbg !4900
  %call = call i8* @av_get_token(i8** %p, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.154, i32 0, i32 0)), !dbg !4901
  store i8* %call, i8** %section_name, align 8, !dbg !4900
  call void @llvm.dbg.declare(metadata i32* %show_all_entries, metadata !4902, metadata !2571), !dbg !4903
  store i32 0, i32* %show_all_entries, align 4, !dbg !4903
  %3 = load i8*, i8** %section_name, align 8, !dbg !4904
  %tobool1 = icmp ne i8* %3, null, !dbg !4904
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4906

if.then:                                          ; preds = %while.body
  %4 = load i8*, i8** %opt.addr, align 8, !dbg !4907
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.155, i32 0, i32 0), i8* %4), !dbg !4909
  store i32 -22, i32* %retval, align 4, !dbg !4910
  br label %return, !dbg !4910

if.end:                                           ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !4911
  %6 = load i8, i8* %5, align 1, !dbg !4913
  %conv = sext i8 %6 to i32, !dbg !4913
  %cmp = icmp eq i32 %conv, 61, !dbg !4914
  br i1 %cmp, label %if.then3, label %if.else, !dbg !4915

if.then3:                                         ; preds = %if.end
  %7 = load i8*, i8** %p, align 8, !dbg !4916
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4916
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !4916
  br label %while.cond4, !dbg !4918

while.cond4:                                      ; preds = %if.end22, %if.then3
  %8 = load i8*, i8** %p, align 8, !dbg !4919
  %9 = load i8, i8* %8, align 1, !dbg !4921
  %conv5 = sext i8 %9 to i32, !dbg !4921
  %tobool6 = icmp ne i32 %conv5, 0, !dbg !4921
  br i1 %tobool6, label %land.rhs, label %land.end, !dbg !4922

land.rhs:                                         ; preds = %while.cond4
  %10 = load i8*, i8** %p, align 8, !dbg !4923
  %11 = load i8, i8* %10, align 1, !dbg !4925
  %conv7 = sext i8 %11 to i32, !dbg !4925
  %cmp8 = icmp ne i32 %conv7, 58, !dbg !4926
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond4
  %12 = phi i1 [ false, %while.cond4 ], [ %cmp8, %land.rhs ]
  br i1 %12, label %while.body10, label %while.end, !dbg !4927

while.body10:                                     ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8** %entry11, metadata !4929, metadata !2571), !dbg !4931
  %call12 = call i8* @av_get_token(i8** %p, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.156, i32 0, i32 0)), !dbg !4932
  store i8* %call12, i8** %entry11, align 8, !dbg !4931
  %13 = load i8*, i8** %entry11, align 8, !dbg !4933
  %tobool13 = icmp ne i8* %13, null, !dbg !4933
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !4935

if.then14:                                        ; preds = %while.body10
  br label %while.end, !dbg !4936

if.end15:                                         ; preds = %while.body10
  %14 = load i8*, i8** %entry11, align 8, !dbg !4937
  %15 = load i8*, i8** %section_name, align 8, !dbg !4938
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 40, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.157, i32 0, i32 0), i8* %14, i8* %15), !dbg !4939
  %16 = load i8*, i8** %entry11, align 8, !dbg !4940
  %call16 = call i32 @av_dict_set(%struct.AVDictionary** %entries, i8* %16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), i32 4), !dbg !4941
  %17 = load i8*, i8** %p, align 8, !dbg !4942
  %18 = load i8, i8* %17, align 1, !dbg !4944
  %conv17 = sext i8 %18 to i32, !dbg !4944
  %cmp18 = icmp eq i32 %conv17, 44, !dbg !4945
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !4946

if.then20:                                        ; preds = %if.end15
  %19 = load i8*, i8** %p, align 8, !dbg !4947
  %incdec.ptr21 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !4947
  store i8* %incdec.ptr21, i8** %p, align 8, !dbg !4947
  br label %if.end22, !dbg !4948

if.end22:                                         ; preds = %if.then20, %if.end15
  br label %while.cond4, !dbg !4949, !llvm.loop !4951

while.end:                                        ; preds = %if.then14, %land.end
  br label %if.end23, !dbg !4952

if.else:                                          ; preds = %if.end
  store i32 1, i32* %show_all_entries, align 4, !dbg !4953
  br label %if.end23

if.end23:                                         ; preds = %if.else, %while.end
  %20 = load i8*, i8** %section_name, align 8, !dbg !4955
  %21 = load i32, i32* %show_all_entries, align 4, !dbg !4956
  %22 = load %struct.AVDictionary*, %struct.AVDictionary** %entries, align 8, !dbg !4957
  %call24 = call i32 @match_section(i8* %20, i32 %21, %struct.AVDictionary* %22), !dbg !4958
  store i32 %call24, i32* %ret, align 4, !dbg !4959
  %23 = load i32, i32* %ret, align 4, !dbg !4960
  %cmp25 = icmp eq i32 %23, 0, !dbg !4962
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !4963

if.then27:                                        ; preds = %if.end23
  %24 = load i8*, i8** %section_name, align 8, !dbg !4964
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.158, i32 0, i32 0), i8* %24), !dbg !4966
  store i32 -22, i32* %ret, align 4, !dbg !4967
  br label %if.end28, !dbg !4968

if.end28:                                         ; preds = %if.then27, %if.end23
  call void @av_dict_free(%struct.AVDictionary** %entries), !dbg !4969
  %25 = load i8*, i8** %section_name, align 8, !dbg !4970
  call void @av_free(i8* %25), !dbg !4971
  %26 = load i32, i32* %ret, align 4, !dbg !4972
  %cmp29 = icmp sle i32 %26, 0, !dbg !4974
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !4975

if.then31:                                        ; preds = %if.end28
  br label %while.end37, !dbg !4976

if.end32:                                         ; preds = %if.end28
  %27 = load i8*, i8** %p, align 8, !dbg !4977
  %28 = load i8, i8* %27, align 1, !dbg !4979
  %tobool33 = icmp ne i8 %28, 0, !dbg !4979
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !4980

if.then34:                                        ; preds = %if.end32
  %29 = load i8*, i8** %p, align 8, !dbg !4981
  %incdec.ptr35 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !4981
  store i8* %incdec.ptr35, i8** %p, align 8, !dbg !4981
  br label %if.end36, !dbg !4982

if.end36:                                         ; preds = %if.then34, %if.end32
  br label %while.cond, !dbg !4983, !llvm.loop !4985

while.end37:                                      ; preds = %if.then31, %while.cond
  %30 = load i32, i32* %ret, align 4, !dbg !4986
  store i32 %30, i32* %retval, align 4, !dbg !4987
  br label %return, !dbg !4987

return:                                           ; preds = %while.end37, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !4988
  ret i32 %31, !dbg !4988
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_packets(i8* %opt, i8* %arg) #0 !dbg !4989 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !4990, metadata !2571), !dbg !4991
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4992, metadata !2571), !dbg !4993
  call void @mark_section_show_entries(i32 17, i32 1, %struct.AVDictionary* null), !dbg !4994
  ret i32 0, !dbg !4995
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_programs(i8* %opt, i8* %arg) #0 !dbg !4996 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !4997, metadata !2571), !dbg !4998
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4999, metadata !2571), !dbg !5000
  call void @mark_section_show_entries(i32 33, i32 1, %struct.AVDictionary* null), !dbg !5001
  ret i32 0, !dbg !5002
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_streams(i8* %opt, i8* %arg) #0 !dbg !5003 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !5004, metadata !2571), !dbg !5005
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5006, metadata !2571), !dbg !5007
  call void @mark_section_show_entries(i32 37, i32 1, %struct.AVDictionary* null), !dbg !5008
  ret i32 0, !dbg !5009
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_chapters(i8* %opt, i8* %arg) #0 !dbg !5010 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !5011, metadata !2571), !dbg !5012
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5013, metadata !2571), !dbg !5014
  call void @mark_section_show_entries(i32 2, i32 1, %struct.AVDictionary* null), !dbg !5015
  ret i32 0, !dbg !5016
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_program_version(i8* %opt, i8* %arg) #0 !dbg !5017 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !5018, metadata !2571), !dbg !5019
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5020, metadata !2571), !dbg !5021
  call void @mark_section_show_entries(i32 32, i32 1, %struct.AVDictionary* null), !dbg !5022
  ret i32 0, !dbg !5023
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_library_versions(i8* %opt, i8* %arg) #0 !dbg !5024 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !5025, metadata !2571), !dbg !5026
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5027, metadata !2571), !dbg !5028
  call void @mark_section_show_entries(i32 14, i32 1, %struct.AVDictionary* null), !dbg !5029
  ret i32 0, !dbg !5030
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_versions(i8* %opt, i8* %arg) #0 !dbg !5031 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !5032, metadata !2571), !dbg !5033
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5034, metadata !2571), !dbg !5035
  call void @mark_section_show_entries(i32 32, i32 1, %struct.AVDictionary* null), !dbg !5036
  call void @mark_section_show_entries(i32 13, i32 1, %struct.AVDictionary* null), !dbg !5037
  ret i32 0, !dbg !5038
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_show_pixel_formats(i8* %opt, i8* %arg) #0 !dbg !5039 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !5040, metadata !2571), !dbg !5041
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5042, metadata !2571), !dbg !5043
  call void @mark_section_show_entries(i32 25, i32 1, %struct.AVDictionary* null), !dbg !5044
  ret i32 0, !dbg !5045
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_read_intervals(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !5046 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !5047, metadata !2571), !dbg !5048
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !5049, metadata !2571), !dbg !5050
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5051, metadata !2571), !dbg !5052
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5053
  %call = call i32 @parse_read_intervals(i8* %0), !dbg !5054
  ret i32 %call, !dbg !5055
}

declare i32 @opt_default(i8*, i8*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @opt_input_file_i(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !5056 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !5057, metadata !2571), !dbg !5058
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !5059, metadata !2571), !dbg !5060
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5061, metadata !2571), !dbg !5062
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !5063
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !5064
  call void @opt_input_file(i8* %0, i8* %1), !dbg !5065
  ret i32 0, !dbg !5066
}

declare %struct.AVInputFormat* @av_find_input_format(i8*) #2

; Function Attrs: nounwind uwtable
define internal void @print_section(i32 %id, i32 %level) #0 !dbg !5067 {
entry:
  %id.addr = alloca i32, align 4
  %level.addr = alloca i32, align 4
  %pid = alloca i32*, align 8
  %section = alloca %struct.section*, align 8
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5071, metadata !2571), !dbg !5072
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !5073, metadata !2571), !dbg !5074
  call void @llvm.dbg.declare(metadata i32** %pid, metadata !5075, metadata !2571), !dbg !5078
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !5079, metadata !2571), !dbg !5080
  %0 = load i32, i32* %id.addr, align 4, !dbg !5081
  %idxprom = sext i32 %0 to i64, !dbg !5082
  %arrayidx = getelementptr inbounds [42 x %struct.section], [42 x %struct.section]* @sections, i64 0, i64 %idxprom, !dbg !5082
  store %struct.section* %arrayidx, %struct.section** %section, align 8, !dbg !5080
  %1 = load %struct.section*, %struct.section** %section, align 8, !dbg !5083
  %flags = getelementptr inbounds %struct.section, %struct.section* %1, i32 0, i32 2, !dbg !5084
  %2 = load i32, i32* %flags, align 8, !dbg !5084
  %and = and i32 %2, 1, !dbg !5085
  %tobool = icmp ne i32 %and, 0, !dbg !5083
  %cond = select i1 %tobool, i32 87, i32 46, !dbg !5083
  %3 = load %struct.section*, %struct.section** %section, align 8, !dbg !5086
  %flags1 = getelementptr inbounds %struct.section, %struct.section* %3, i32 0, i32 2, !dbg !5087
  %4 = load i32, i32* %flags1, align 8, !dbg !5087
  %and2 = and i32 %4, 2, !dbg !5088
  %tobool3 = icmp ne i32 %and2, 0, !dbg !5086
  %cond4 = select i1 %tobool3, i32 65, i32 46, !dbg !5086
  %5 = load %struct.section*, %struct.section** %section, align 8, !dbg !5089
  %flags5 = getelementptr inbounds %struct.section, %struct.section* %5, i32 0, i32 2, !dbg !5090
  %6 = load i32, i32* %flags5, align 8, !dbg !5090
  %and6 = and i32 %6, 4, !dbg !5091
  %tobool7 = icmp ne i32 %and6, 0, !dbg !5089
  %cond8 = select i1 %tobool7, i32 86, i32 46, !dbg !5089
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149, i32 0, i32 0), i32 %cond, i32 %cond4, i32 %cond8), !dbg !5092
  %7 = load i32, i32* %level.addr, align 4, !dbg !5093
  %mul = mul nsw i32 %7, 4, !dbg !5094
  %8 = load %struct.section*, %struct.section** %section, align 8, !dbg !5095
  %name = getelementptr inbounds %struct.section, %struct.section* %8, i32 0, i32 1, !dbg !5096
  %9 = load i8*, i8** %name, align 8, !dbg !5096
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.150, i32 0, i32 0), i32 %mul, i32 32, i8* %9), !dbg !5097
  %10 = load %struct.section*, %struct.section** %section, align 8, !dbg !5098
  %unique_name = getelementptr inbounds %struct.section, %struct.section* %10, i32 0, i32 5, !dbg !5100
  %11 = load i8*, i8** %unique_name, align 8, !dbg !5100
  %tobool10 = icmp ne i8* %11, null, !dbg !5098
  br i1 %tobool10, label %if.then, label %if.end, !dbg !5101

if.then:                                          ; preds = %entry
  %12 = load %struct.section*, %struct.section** %section, align 8, !dbg !5102
  %unique_name11 = getelementptr inbounds %struct.section, %struct.section* %12, i32 0, i32 5, !dbg !5103
  %13 = load i8*, i8** %unique_name11, align 8, !dbg !5103
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.151, i32 0, i32 0), i8* %13), !dbg !5104
  br label %if.end, !dbg !5104

if.end:                                           ; preds = %if.then, %entry
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !5105
  %14 = load %struct.section*, %struct.section** %section, align 8, !dbg !5106
  %children_ids = getelementptr inbounds %struct.section, %struct.section* %14, i32 0, i32 3, !dbg !5108
  %arraydecay = getelementptr inbounds [11 x i32], [11 x i32]* %children_ids, i32 0, i32 0, !dbg !5106
  store i32* %arraydecay, i32** %pid, align 8, !dbg !5109
  br label %for.cond, !dbg !5110

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32*, i32** %pid, align 8, !dbg !5111
  %16 = load i32, i32* %15, align 4, !dbg !5114
  %cmp = icmp ne i32 %16, -1, !dbg !5115
  br i1 %cmp, label %for.body, label %for.end, !dbg !5116

for.body:                                         ; preds = %for.cond
  %17 = load i32*, i32** %pid, align 8, !dbg !5117
  %18 = load i32, i32* %17, align 4, !dbg !5118
  %19 = load i32, i32* %level.addr, align 4, !dbg !5119
  %add = add nsw i32 %19, 1, !dbg !5120
  call void @print_section(i32 %18, i32 %add), !dbg !5121
  br label %for.inc, !dbg !5121

for.inc:                                          ; preds = %for.body
  %20 = load i32*, i32** %pid, align 8, !dbg !5122
  %incdec.ptr = getelementptr inbounds i32, i32* %20, i32 1, !dbg !5122
  store i32* %incdec.ptr, i32** %pid, align 8, !dbg !5122
  br label %for.cond, !dbg !5124, !llvm.loop !5125

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5127
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @mark_section_show_entries(i32 %section_id, i32 %show_all_entries, %struct.AVDictionary* %entries) #4 !dbg !5128 {
entry:
  %section_id.addr = alloca i32, align 4
  %show_all_entries.addr = alloca i32, align 4
  %entries.addr = alloca %struct.AVDictionary*, align 8
  %section = alloca %struct.section*, align 8
  %id = alloca i32*, align 8
  store i32 %section_id, i32* %section_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %section_id.addr, metadata !5131, metadata !2571), !dbg !5132
  store i32 %show_all_entries, i32* %show_all_entries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %show_all_entries.addr, metadata !5133, metadata !2571), !dbg !5134
  store %struct.AVDictionary* %entries, %struct.AVDictionary** %entries.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %entries.addr, metadata !5135, metadata !2571), !dbg !5136
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !5137, metadata !2571), !dbg !5138
  %0 = load i32, i32* %section_id.addr, align 4, !dbg !5139
  %idxprom = sext i32 %0 to i64, !dbg !5140
  %arrayidx = getelementptr inbounds [42 x %struct.section], [42 x %struct.section]* @sections, i64 0, i64 %idxprom, !dbg !5140
  store %struct.section* %arrayidx, %struct.section** %section, align 8, !dbg !5138
  %1 = load i32, i32* %show_all_entries.addr, align 4, !dbg !5141
  %2 = load %struct.section*, %struct.section** %section, align 8, !dbg !5142
  %show_all_entries1 = getelementptr inbounds %struct.section, %struct.section* %2, i32 0, i32 7, !dbg !5143
  store i32 %1, i32* %show_all_entries1, align 8, !dbg !5144
  %3 = load i32, i32* %show_all_entries.addr, align 4, !dbg !5145
  %tobool = icmp ne i32 %3, 0, !dbg !5145
  br i1 %tobool, label %if.then, label %if.else, !dbg !5147

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %id, metadata !5148, metadata !2571), !dbg !5151
  %4 = load %struct.section*, %struct.section** %section, align 8, !dbg !5152
  %children_ids = getelementptr inbounds %struct.section, %struct.section* %4, i32 0, i32 3, !dbg !5154
  %arraydecay = getelementptr inbounds [11 x i32], [11 x i32]* %children_ids, i32 0, i32 0, !dbg !5152
  store i32* %arraydecay, i32** %id, align 8, !dbg !5155
  br label %for.cond, !dbg !5156

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32*, i32** %id, align 8, !dbg !5157
  %6 = load i32, i32* %5, align 4, !dbg !5160
  %cmp = icmp ne i32 %6, -1, !dbg !5161
  br i1 %cmp, label %for.body, label %for.end, !dbg !5162

for.body:                                         ; preds = %for.cond
  %7 = load i32*, i32** %id, align 8, !dbg !5163
  %8 = load i32, i32* %7, align 4, !dbg !5164
  %9 = load i32, i32* %show_all_entries.addr, align 4, !dbg !5165
  %10 = load %struct.AVDictionary*, %struct.AVDictionary** %entries.addr, align 8, !dbg !5166
  call void @mark_section_show_entries(i32 %8, i32 %9, %struct.AVDictionary* %10), !dbg !5167
  br label %for.inc, !dbg !5167

for.inc:                                          ; preds = %for.body
  %11 = load i32*, i32** %id, align 8, !dbg !5168
  %incdec.ptr = getelementptr inbounds i32, i32* %11, i32 1, !dbg !5168
  store i32* %incdec.ptr, i32** %id, align 8, !dbg !5168
  br label %for.cond, !dbg !5170, !llvm.loop !5171

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5173

if.else:                                          ; preds = %entry
  %12 = load %struct.section*, %struct.section** %section, align 8, !dbg !5174
  %entries_to_show = getelementptr inbounds %struct.section, %struct.section* %12, i32 0, i32 6, !dbg !5176
  %13 = load %struct.AVDictionary*, %struct.AVDictionary** %entries.addr, align 8, !dbg !5177
  %call = call i32 @av_dict_copy(%struct.AVDictionary** %entries_to_show, %struct.AVDictionary* %13, i32 0), !dbg !5178
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  ret void, !dbg !5179
}

declare i32 @av_dict_copy(%struct.AVDictionary**, %struct.AVDictionary*, i32) #2

declare i8* @av_asprintf(i8*, ...) #2

declare void @av_free(i8*) #2

declare i8* @av_get_token(i8**, i8*) #2

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @match_section(i8* %section_name, i32 %show_all_entries, %struct.AVDictionary* %entries) #0 !dbg !5180 {
entry:
  %section_name.addr = alloca i8*, align 8
  %show_all_entries.addr = alloca i32, align 4
  %entries.addr = alloca %struct.AVDictionary*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %section = alloca %struct.section*, align 8
  store i8* %section_name, i8** %section_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %section_name.addr, metadata !5183, metadata !2571), !dbg !5184
  store i32 %show_all_entries, i32* %show_all_entries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %show_all_entries.addr, metadata !5185, metadata !2571), !dbg !5186
  store %struct.AVDictionary* %entries, %struct.AVDictionary** %entries.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %entries.addr, metadata !5187, metadata !2571), !dbg !5188
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5189, metadata !2571), !dbg !5190
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5191, metadata !2571), !dbg !5192
  store i32 0, i32* %ret, align 4, !dbg !5192
  store i32 0, i32* %i, align 4, !dbg !5193
  br label %for.cond, !dbg !5195

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5196
  %conv = sext i32 %0 to i64, !dbg !5196
  %cmp = icmp ult i64 %conv, 42, !dbg !5199
  br i1 %cmp, label %for.body, label %for.end, !dbg !5200

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !5201, metadata !2571), !dbg !5203
  %1 = load i32, i32* %i, align 4, !dbg !5204
  %idxprom = sext i32 %1 to i64, !dbg !5205
  %arrayidx = getelementptr inbounds [42 x %struct.section], [42 x %struct.section]* @sections, i64 0, i64 %idxprom, !dbg !5205
  store %struct.section* %arrayidx, %struct.section** %section, align 8, !dbg !5203
  %2 = load i8*, i8** %section_name.addr, align 8, !dbg !5206
  %3 = load %struct.section*, %struct.section** %section, align 8, !dbg !5208
  %name = getelementptr inbounds %struct.section, %struct.section* %3, i32 0, i32 1, !dbg !5209
  %4 = load i8*, i8** %name, align 8, !dbg !5209
  %call = call i32 @strcmp(i8* %2, i8* %4) #14, !dbg !5210
  %tobool = icmp ne i32 %call, 0, !dbg !5210
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5211

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.section*, %struct.section** %section, align 8, !dbg !5212
  %unique_name = getelementptr inbounds %struct.section, %struct.section* %5, i32 0, i32 5, !dbg !5213
  %6 = load i8*, i8** %unique_name, align 8, !dbg !5213
  %tobool2 = icmp ne i8* %6, null, !dbg !5212
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !5214

land.lhs.true:                                    ; preds = %lor.lhs.false
  %7 = load i8*, i8** %section_name.addr, align 8, !dbg !5215
  %8 = load %struct.section*, %struct.section** %section, align 8, !dbg !5217
  %unique_name3 = getelementptr inbounds %struct.section, %struct.section* %8, i32 0, i32 5, !dbg !5218
  %9 = load i8*, i8** %unique_name3, align 8, !dbg !5218
  %call4 = call i32 @strcmp(i8* %7, i8* %9) #14, !dbg !5219
  %tobool5 = icmp ne i32 %call4, 0, !dbg !5219
  br i1 %tobool5, label %if.end, label %if.then, !dbg !5220

if.then:                                          ; preds = %land.lhs.true, %for.body
  %10 = load i8*, i8** %section_name.addr, align 8, !dbg !5222
  %11 = load %struct.section*, %struct.section** %section, align 8, !dbg !5224
  %unique_name6 = getelementptr inbounds %struct.section, %struct.section* %11, i32 0, i32 5, !dbg !5225
  %12 = load i8*, i8** %unique_name6, align 8, !dbg !5225
  %13 = load %struct.section*, %struct.section** %section, align 8, !dbg !5226
  %name7 = getelementptr inbounds %struct.section, %struct.section* %13, i32 0, i32 1, !dbg !5227
  %14 = load i8*, i8** %name7, align 8, !dbg !5227
  %call8 = call i8* @av_x_if_null(i8* %12, i8* %14), !dbg !5228
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 48, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.159, i32 0, i32 0), i8* %10, i8* %call8), !dbg !5229
  %15 = load i32, i32* %ret, align 4, !dbg !5230
  %inc = add nsw i32 %15, 1, !dbg !5230
  store i32 %inc, i32* %ret, align 4, !dbg !5230
  %16 = load %struct.section*, %struct.section** %section, align 8, !dbg !5231
  %id = getelementptr inbounds %struct.section, %struct.section* %16, i32 0, i32 0, !dbg !5232
  %17 = load i32, i32* %id, align 8, !dbg !5232
  %18 = load i32, i32* %show_all_entries.addr, align 4, !dbg !5233
  %19 = load %struct.AVDictionary*, %struct.AVDictionary** %entries.addr, align 8, !dbg !5234
  call void @mark_section_show_entries(i32 %17, i32 %18, %struct.AVDictionary* %19), !dbg !5235
  br label %if.end, !dbg !5236

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false
  br label %for.inc, !dbg !5237

for.inc:                                          ; preds = %if.end
  %20 = load i32, i32* %i, align 4, !dbg !5238
  %inc9 = add nsw i32 %20, 1, !dbg !5238
  store i32 %inc9, i32* %i, align 4, !dbg !5238
  br label %for.cond, !dbg !5240, !llvm.loop !5241

for.end:                                          ; preds = %for.cond
  %21 = load i32, i32* %ret, align 4, !dbg !5243
  ret i32 %21, !dbg !5244
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @av_x_if_null(i8* %p, i8* %x) #4 !dbg !5245 {
entry:
  %p.addr = alloca i8*, align 8
  %x.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5250, metadata !2571), !dbg !5251
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !5252, metadata !2571), !dbg !5253
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5254
  %tobool = icmp ne i8* %0, null, !dbg !5254
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5254

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !5255
  br label %cond.end, !dbg !5257

cond.false:                                       ; preds = %entry
  %2 = load i8*, i8** %x.addr, align 8, !dbg !5258
  br label %cond.end, !dbg !5260

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %1, %cond.true ], [ %2, %cond.false ], !dbg !5261
  %3 = ptrtoint i8* %cond to i64, !dbg !5263
  %4 = inttoptr i64 %3 to i8*, !dbg !5264
  ret i8* %4, !dbg !5265
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_read_intervals(i8* %intervals_spec) #0 !dbg !5266 {
entry:
  %retval = alloca i32, align 4
  %intervals_spec.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %p = alloca i8*, align 8
  %spec = alloca i8*, align 8
  %next = alloca i8*, align 8
  store i8* %intervals_spec, i8** %intervals_spec.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %intervals_spec.addr, metadata !5269, metadata !2571), !dbg !5270
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5271, metadata !2571), !dbg !5272
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5273, metadata !2571), !dbg !5274
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5275, metadata !2571), !dbg !5276
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5277, metadata !2571), !dbg !5278
  call void @llvm.dbg.declare(metadata i8** %spec, metadata !5279, metadata !2571), !dbg !5280
  %0 = load i8*, i8** %intervals_spec.addr, align 8, !dbg !5281
  %call = call noalias i8* @av_strdup(i8* %0), !dbg !5282
  store i8* %call, i8** %spec, align 8, !dbg !5280
  %1 = load i8*, i8** %spec, align 8, !dbg !5283
  %tobool = icmp ne i8* %1, null, !dbg !5283
  br i1 %tobool, label %if.end, label %if.then, !dbg !5285

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5286
  br label %return, !dbg !5286

if.end:                                           ; preds = %entry
  store i32 0, i32* %n, align 4, !dbg !5287
  %2 = load i8*, i8** %spec, align 8, !dbg !5289
  store i8* %2, i8** %p, align 8, !dbg !5290
  br label %for.cond, !dbg !5291

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i8*, i8** %p, align 8, !dbg !5292
  %4 = load i8, i8* %3, align 1, !dbg !5295
  %tobool1 = icmp ne i8 %4, 0, !dbg !5296
  br i1 %tobool1, label %for.body, label %for.end, !dbg !5296

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %p, align 8, !dbg !5297
  %6 = load i8, i8* %5, align 1, !dbg !5299
  %conv = sext i8 %6 to i32, !dbg !5299
  %cmp = icmp eq i32 %conv, 44, !dbg !5300
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !5301

if.then3:                                         ; preds = %for.body
  %7 = load i32, i32* %n, align 4, !dbg !5302
  %inc = add nsw i32 %7, 1, !dbg !5302
  store i32 %inc, i32* %n, align 4, !dbg !5302
  br label %if.end4, !dbg !5303

if.end4:                                          ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !5304

for.inc:                                          ; preds = %if.end4
  %8 = load i8*, i8** %p, align 8, !dbg !5306
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5306
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !5306
  br label %for.cond, !dbg !5308, !llvm.loop !5309

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %n, align 4, !dbg !5311
  %inc5 = add nsw i32 %9, 1, !dbg !5311
  store i32 %inc5, i32* %n, align 4, !dbg !5311
  %10 = load i32, i32* %n, align 4, !dbg !5312
  %conv6 = sext i32 %10 to i64, !dbg !5312
  %call7 = call i8* @av_malloc_array(i64 %conv6, i64 48), !dbg !5313
  %11 = bitcast i8* %call7 to %struct.ReadInterval*, !dbg !5313
  store %struct.ReadInterval* %11, %struct.ReadInterval** @read_intervals, align 8, !dbg !5314
  %12 = load %struct.ReadInterval*, %struct.ReadInterval** @read_intervals, align 8, !dbg !5315
  %tobool8 = icmp ne %struct.ReadInterval* %12, null, !dbg !5315
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !5317

if.then9:                                         ; preds = %for.end
  store i32 -12, i32* %ret, align 4, !dbg !5318
  br label %end, !dbg !5320

if.end10:                                         ; preds = %for.end
  %13 = load i32, i32* %n, align 4, !dbg !5321
  store i32 %13, i32* @read_intervals_nb, align 4, !dbg !5322
  %14 = load i8*, i8** %spec, align 8, !dbg !5323
  store i8* %14, i8** %p, align 8, !dbg !5324
  store i32 0, i32* %i, align 4, !dbg !5325
  br label %for.cond11, !dbg !5327

for.cond11:                                       ; preds = %for.inc32, %if.end10
  %15 = load i8*, i8** %p, align 8, !dbg !5328
  %tobool12 = icmp ne i8* %15, null, !dbg !5331
  br i1 %tobool12, label %for.body13, label %for.end34, !dbg !5331

for.body13:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata i8** %next, metadata !5332, metadata !2571), !dbg !5334
  br label %do.body, !dbg !5335, !llvm.loop !5336

do.body:                                          ; preds = %for.body13
  %16 = load i32, i32* %i, align 4, !dbg !5337
  %17 = load i32, i32* @read_intervals_nb, align 4, !dbg !5341
  %cmp14 = icmp slt i32 %16, %17, !dbg !5342
  br i1 %cmp14, label %if.end17, label %if.then16, !dbg !5343

if.then16:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.162, i32 0, i32 0), i32 3394), !dbg !5344
  call void @abort() #15, !dbg !5347
  unreachable, !dbg !5349

if.end17:                                         ; preds = %do.body
  br label %do.end, !dbg !5350

do.end:                                           ; preds = %if.end17
  %18 = load i8*, i8** %p, align 8, !dbg !5352
  %call18 = call i8* @strchr(i8* %18, i32 44) #14, !dbg !5353
  store i8* %call18, i8** %next, align 8, !dbg !5354
  %19 = load i8*, i8** %next, align 8, !dbg !5355
  %tobool19 = icmp ne i8* %19, null, !dbg !5355
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !5357

if.then20:                                        ; preds = %do.end
  %20 = load i8*, i8** %next, align 8, !dbg !5358
  %incdec.ptr21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !5358
  store i8* %incdec.ptr21, i8** %next, align 8, !dbg !5358
  store i8 0, i8* %20, align 1, !dbg !5359
  br label %if.end22, !dbg !5360

if.end22:                                         ; preds = %if.then20, %do.end
  %21 = load i32, i32* %i, align 4, !dbg !5361
  %22 = load i32, i32* %i, align 4, !dbg !5362
  %idxprom = sext i32 %22 to i64, !dbg !5363
  %23 = load %struct.ReadInterval*, %struct.ReadInterval** @read_intervals, align 8, !dbg !5363
  %arrayidx = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %23, i64 %idxprom, !dbg !5363
  %id = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %arrayidx, i32 0, i32 0, !dbg !5364
  store i32 %21, i32* %id, align 8, !dbg !5365
  %24 = load i8*, i8** %p, align 8, !dbg !5366
  %25 = load i32, i32* %i, align 4, !dbg !5367
  %idxprom23 = sext i32 %25 to i64, !dbg !5368
  %26 = load %struct.ReadInterval*, %struct.ReadInterval** @read_intervals, align 8, !dbg !5368
  %arrayidx24 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %26, i64 %idxprom23, !dbg !5368
  %call25 = call i32 @parse_read_interval(i8* %24, %struct.ReadInterval* %arrayidx24), !dbg !5369
  store i32 %call25, i32* %ret, align 4, !dbg !5370
  %27 = load i32, i32* %ret, align 4, !dbg !5371
  %cmp26 = icmp slt i32 %27, 0, !dbg !5373
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !5374

if.then28:                                        ; preds = %if.end22
  %28 = load i32, i32* %i, align 4, !dbg !5375
  %29 = load i8*, i8** %p, align 8, !dbg !5377
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.163, i32 0, i32 0), i32 %28, i8* %29), !dbg !5378
  br label %end, !dbg !5379

if.end29:                                         ; preds = %if.end22
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 40, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.164, i32 0, i32 0)), !dbg !5380
  %30 = load i32, i32* %i, align 4, !dbg !5381
  %idxprom30 = sext i32 %30 to i64, !dbg !5382
  %31 = load %struct.ReadInterval*, %struct.ReadInterval** @read_intervals, align 8, !dbg !5382
  %arrayidx31 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %31, i64 %idxprom30, !dbg !5382
  call void @log_read_interval(%struct.ReadInterval* %arrayidx31, i8* null, i32 40), !dbg !5383
  %32 = load i8*, i8** %next, align 8, !dbg !5384
  store i8* %32, i8** %p, align 8, !dbg !5385
  br label %for.inc32, !dbg !5386

for.inc32:                                        ; preds = %if.end29
  %33 = load i32, i32* %i, align 4, !dbg !5387
  %inc33 = add nsw i32 %33, 1, !dbg !5387
  store i32 %inc33, i32* %i, align 4, !dbg !5387
  br label %for.cond11, !dbg !5389, !llvm.loop !5390

for.end34:                                        ; preds = %for.cond11
  br label %do.body35, !dbg !5392, !llvm.loop !5393

do.body35:                                        ; preds = %for.end34
  %34 = load i32, i32* %i, align 4, !dbg !5394
  %35 = load i32, i32* @read_intervals_nb, align 4, !dbg !5398
  %cmp36 = icmp eq i32 %34, %35, !dbg !5399
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !5400

if.then38:                                        ; preds = %do.body35
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.162, i32 0, i32 0), i32 3410), !dbg !5401
  call void @abort() #15, !dbg !5404
  unreachable, !dbg !5406

if.end39:                                         ; preds = %do.body35
  br label %do.end40, !dbg !5407

do.end40:                                         ; preds = %if.end39
  br label %end, !dbg !5409

end:                                              ; preds = %do.end40, %if.then28, %if.then9
  %36 = load i8*, i8** %spec, align 8, !dbg !5411
  call void @av_free(i8* %36), !dbg !5412
  %37 = load i32, i32* %ret, align 4, !dbg !5413
  store i32 %37, i32* %retval, align 4, !dbg !5414
  br label %return, !dbg !5414

return:                                           ; preds = %end, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !5415
  ret i32 %38, !dbg !5415
}

declare i8* @av_malloc_array(i64, i64) #2

; Function Attrs: noreturn nounwind
declare void @abort() #6

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #5

; Function Attrs: nounwind uwtable
define internal i32 @parse_read_interval(i8* %interval_spec, %struct.ReadInterval* %interval) #0 !dbg !5416 {
entry:
  %retval = alloca i32, align 4
  %interval_spec.addr = alloca i8*, align 8
  %interval.addr = alloca %struct.ReadInterval*, align 8
  %ret = alloca i32, align 4
  %next = alloca i8*, align 8
  %p = alloca i8*, align 8
  %spec = alloca i8*, align 8
  %us = alloca i64, align 8
  %lli = alloca i64, align 8
  %tail = alloca i8*, align 8
  store i8* %interval_spec, i8** %interval_spec.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %interval_spec.addr, metadata !5419, metadata !2571), !dbg !5420
  store %struct.ReadInterval* %interval, %struct.ReadInterval** %interval.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReadInterval** %interval.addr, metadata !5421, metadata !2571), !dbg !5422
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5423, metadata !2571), !dbg !5424
  store i32 0, i32* %ret, align 4, !dbg !5424
  call void @llvm.dbg.declare(metadata i8** %next, metadata !5425, metadata !2571), !dbg !5426
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5427, metadata !2571), !dbg !5428
  call void @llvm.dbg.declare(metadata i8** %spec, metadata !5429, metadata !2571), !dbg !5430
  %0 = load i8*, i8** %interval_spec.addr, align 8, !dbg !5431
  %call = call noalias i8* @av_strdup(i8* %0), !dbg !5432
  store i8* %call, i8** %spec, align 8, !dbg !5430
  %1 = load i8*, i8** %spec, align 8, !dbg !5433
  %tobool = icmp ne i8* %1, null, !dbg !5433
  br i1 %tobool, label %if.end, label %if.then, !dbg !5435

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5436
  br label %return, !dbg !5436

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %spec, align 8, !dbg !5437
  %3 = load i8, i8* %2, align 1, !dbg !5439
  %tobool1 = icmp ne i8 %3, 0, !dbg !5439
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5440

if.then2:                                         ; preds = %if.end
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.166, i32 0, i32 0)), !dbg !5441
  store i32 -22, i32* %ret, align 4, !dbg !5443
  br label %end62, !dbg !5444

if.end3:                                          ; preds = %if.end
  %4 = load i8*, i8** %spec, align 8, !dbg !5445
  store i8* %4, i8** %p, align 8, !dbg !5446
  %5 = load i8*, i8** %spec, align 8, !dbg !5447
  %call4 = call i8* @strchr(i8* %5, i32 37) #14, !dbg !5448
  store i8* %call4, i8** %next, align 8, !dbg !5449
  %6 = load i8*, i8** %next, align 8, !dbg !5450
  %tobool5 = icmp ne i8* %6, null, !dbg !5450
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5452

if.then6:                                         ; preds = %if.end3
  %7 = load i8*, i8** %next, align 8, !dbg !5453
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5453
  store i8* %incdec.ptr, i8** %next, align 8, !dbg !5453
  store i8 0, i8* %7, align 1, !dbg !5454
  br label %if.end7, !dbg !5455

if.end7:                                          ; preds = %if.then6, %if.end3
  %8 = load i8*, i8** %p, align 8, !dbg !5456
  %9 = load i8, i8* %8, align 1, !dbg !5458
  %tobool8 = icmp ne i8 %9, 0, !dbg !5458
  br i1 %tobool8, label %if.then9, label %if.else20, !dbg !5459

if.then9:                                         ; preds = %if.end7
  %10 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5460
  %has_start = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %10, i32 0, i32 3, !dbg !5462
  store i32 1, i32* %has_start, align 8, !dbg !5463
  %11 = load i8*, i8** %p, align 8, !dbg !5464
  %12 = load i8, i8* %11, align 1, !dbg !5466
  %conv = sext i8 %12 to i32, !dbg !5466
  %cmp = icmp eq i32 %conv, 43, !dbg !5467
  br i1 %cmp, label %if.then11, label %if.else, !dbg !5468

if.then11:                                        ; preds = %if.then9
  %13 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5469
  %start_is_offset = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %13, i32 0, i32 5, !dbg !5471
  store i32 1, i32* %start_is_offset, align 8, !dbg !5472
  %14 = load i8*, i8** %p, align 8, !dbg !5473
  %incdec.ptr12 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !5473
  store i8* %incdec.ptr12, i8** %p, align 8, !dbg !5473
  br label %if.end14, !dbg !5474

if.else:                                          ; preds = %if.then9
  %15 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5475
  %start_is_offset13 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %15, i32 0, i32 5, !dbg !5477
  store i32 0, i32* %start_is_offset13, align 8, !dbg !5478
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then11
  %16 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5479
  %start = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %16, i32 0, i32 1, !dbg !5480
  %17 = load i8*, i8** %p, align 8, !dbg !5481
  %call15 = call i32 @av_parse_time(i64* %start, i8* %17, i32 1), !dbg !5482
  store i32 %call15, i32* %ret, align 4, !dbg !5483
  %18 = load i32, i32* %ret, align 4, !dbg !5484
  %cmp16 = icmp slt i32 %18, 0, !dbg !5486
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !5487

if.then18:                                        ; preds = %if.end14
  %19 = load i8*, i8** %p, align 8, !dbg !5488
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.167, i32 0, i32 0), i8* %19), !dbg !5490
  br label %end62, !dbg !5491

if.end19:                                         ; preds = %if.end14
  br label %if.end22, !dbg !5492

if.else20:                                        ; preds = %if.end7
  %20 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5493
  %has_start21 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %20, i32 0, i32 3, !dbg !5495
  store i32 0, i32* %has_start21, align 8, !dbg !5496
  br label %if.end22

if.end22:                                         ; preds = %if.else20, %if.end19
  %21 = load i8*, i8** %next, align 8, !dbg !5497
  store i8* %21, i8** %p, align 8, !dbg !5498
  %22 = load i8*, i8** %p, align 8, !dbg !5499
  %tobool23 = icmp ne i8* %22, null, !dbg !5499
  br i1 %tobool23, label %land.lhs.true, label %if.else59, !dbg !5501

land.lhs.true:                                    ; preds = %if.end22
  %23 = load i8*, i8** %p, align 8, !dbg !5502
  %24 = load i8, i8* %23, align 1, !dbg !5504
  %conv24 = sext i8 %24 to i32, !dbg !5504
  %tobool25 = icmp ne i32 %conv24, 0, !dbg !5504
  br i1 %tobool25, label %if.then26, label %if.else59, !dbg !5505

if.then26:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %us, metadata !5506, metadata !2571), !dbg !5508
  %25 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5509
  %has_end = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %25, i32 0, i32 4, !dbg !5510
  store i32 1, i32* %has_end, align 4, !dbg !5511
  %26 = load i8*, i8** %p, align 8, !dbg !5512
  %27 = load i8, i8* %26, align 1, !dbg !5514
  %conv27 = sext i8 %27 to i32, !dbg !5514
  %cmp28 = icmp eq i32 %conv27, 43, !dbg !5515
  br i1 %cmp28, label %if.then30, label %if.else32, !dbg !5516

if.then30:                                        ; preds = %if.then26
  %28 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5517
  %end_is_offset = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %28, i32 0, i32 6, !dbg !5519
  store i32 1, i32* %end_is_offset, align 4, !dbg !5520
  %29 = load i8*, i8** %p, align 8, !dbg !5521
  %incdec.ptr31 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !5521
  store i8* %incdec.ptr31, i8** %p, align 8, !dbg !5521
  br label %if.end34, !dbg !5522

if.else32:                                        ; preds = %if.then26
  %30 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5523
  %end_is_offset33 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %30, i32 0, i32 6, !dbg !5525
  store i32 0, i32* %end_is_offset33, align 4, !dbg !5526
  br label %if.end34

if.end34:                                         ; preds = %if.else32, %if.then30
  %31 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5527
  %end_is_offset35 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %31, i32 0, i32 6, !dbg !5529
  %32 = load i32, i32* %end_is_offset35, align 4, !dbg !5529
  %tobool36 = icmp ne i32 %32, 0, !dbg !5527
  br i1 %tobool36, label %land.lhs.true37, label %if.else50, !dbg !5530

land.lhs.true37:                                  ; preds = %if.end34
  %33 = load i8*, i8** %p, align 8, !dbg !5531
  %34 = load i8, i8* %33, align 1, !dbg !5533
  %conv38 = sext i8 %34 to i32, !dbg !5533
  %cmp39 = icmp eq i32 %conv38, 35, !dbg !5534
  br i1 %cmp39, label %if.then41, label %if.else50, !dbg !5535

if.then41:                                        ; preds = %land.lhs.true37
  call void @llvm.dbg.declare(metadata i64* %lli, metadata !5536, metadata !2571), !dbg !5538
  call void @llvm.dbg.declare(metadata i8** %tail, metadata !5539, metadata !2571), !dbg !5540
  %35 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5541
  %duration_frames = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %35, i32 0, i32 7, !dbg !5542
  store i32 1, i32* %duration_frames, align 8, !dbg !5543
  %36 = load i8*, i8** %p, align 8, !dbg !5544
  %incdec.ptr42 = getelementptr inbounds i8, i8* %36, i32 1, !dbg !5544
  store i8* %incdec.ptr42, i8** %p, align 8, !dbg !5544
  %37 = load i8*, i8** %p, align 8, !dbg !5545
  %call43 = call i64 @strtoll(i8* %37, i8** %tail, i32 10) #9, !dbg !5546
  store i64 %call43, i64* %lli, align 8, !dbg !5547
  %38 = load i8*, i8** %tail, align 8, !dbg !5548
  %39 = load i8, i8* %38, align 1, !dbg !5550
  %conv44 = sext i8 %39 to i32, !dbg !5550
  %tobool45 = icmp ne i32 %conv44, 0, !dbg !5550
  br i1 %tobool45, label %if.then48, label %lor.lhs.false, !dbg !5551

lor.lhs.false:                                    ; preds = %if.then41
  %40 = load i64, i64* %lli, align 8, !dbg !5552
  %cmp46 = icmp slt i64 %40, 0, !dbg !5554
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !5555

if.then48:                                        ; preds = %lor.lhs.false, %if.then41
  %41 = load i8*, i8** %p, align 8, !dbg !5556
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.168, i32 0, i32 0), i8* %41), !dbg !5558
  br label %end62, !dbg !5559

if.end49:                                         ; preds = %lor.lhs.false
  %42 = load i64, i64* %lli, align 8, !dbg !5560
  %43 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5561
  %end = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %43, i32 0, i32 2, !dbg !5562
  store i64 %42, i64* %end, align 8, !dbg !5563
  br label %if.end58, !dbg !5564

if.else50:                                        ; preds = %land.lhs.true37, %if.end34
  %44 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5565
  %duration_frames51 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %44, i32 0, i32 7, !dbg !5567
  store i32 0, i32* %duration_frames51, align 8, !dbg !5568
  %45 = load i8*, i8** %p, align 8, !dbg !5569
  %call52 = call i32 @av_parse_time(i64* %us, i8* %45, i32 1), !dbg !5570
  store i32 %call52, i32* %ret, align 4, !dbg !5571
  %46 = load i32, i32* %ret, align 4, !dbg !5572
  %cmp53 = icmp slt i32 %46, 0, !dbg !5574
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !5575

if.then55:                                        ; preds = %if.else50
  %47 = load i8*, i8** %p, align 8, !dbg !5576
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.169, i32 0, i32 0), i8* %47), !dbg !5578
  br label %end62, !dbg !5579

if.end56:                                         ; preds = %if.else50
  %48 = load i64, i64* %us, align 8, !dbg !5580
  %49 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5581
  %end57 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %49, i32 0, i32 2, !dbg !5582
  store i64 %48, i64* %end57, align 8, !dbg !5583
  br label %if.end58

if.end58:                                         ; preds = %if.end56, %if.end49
  br label %if.end61, !dbg !5584

if.else59:                                        ; preds = %land.lhs.true, %if.end22
  %50 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5585
  %has_end60 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %50, i32 0, i32 4, !dbg !5587
  store i32 0, i32* %has_end60, align 4, !dbg !5588
  br label %if.end61

if.end61:                                         ; preds = %if.else59, %if.end58
  br label %end62, !dbg !5589

end62:                                            ; preds = %if.end61, %if.then55, %if.then48, %if.then18, %if.then2
  %51 = load i8*, i8** %spec, align 8, !dbg !5591
  call void @av_free(i8* %51), !dbg !5592
  %52 = load i32, i32* %ret, align 4, !dbg !5593
  store i32 %52, i32* %retval, align 4, !dbg !5594
  br label %return, !dbg !5594

return:                                           ; preds = %end62, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !5595
  ret i32 %53, !dbg !5595
}

; Function Attrs: nounwind uwtable
define internal void @log_read_interval(%struct.ReadInterval* %interval, i8* %log_ctx, i32 %log_level) #0 !dbg !5596 {
entry:
  %interval.addr = alloca %struct.ReadInterval*, align 8
  %log_ctx.addr = alloca i8*, align 8
  %log_level.addr = alloca i32, align 4
  %.compoundliteral = alloca [32 x i8], align 1
  %.compoundliteral2 = alloca %struct.AVRational, align 4
  %.compoundliteral10 = alloca [32 x i8], align 1
  %.compoundliteral14 = alloca %struct.AVRational, align 4
  store %struct.ReadInterval* %interval, %struct.ReadInterval** %interval.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReadInterval** %interval.addr, metadata !5601, metadata !2571), !dbg !5602
  store i8* %log_ctx, i8** %log_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %log_ctx.addr, metadata !5603, metadata !2571), !dbg !5604
  store i32 %log_level, i32* %log_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %log_level.addr, metadata !5605, metadata !2571), !dbg !5606
  %0 = load i8*, i8** %log_ctx.addr, align 8, !dbg !5607
  %1 = load i32, i32* %log_level.addr, align 4, !dbg !5608
  %2 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5609
  %id = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %2, i32 0, i32 0, !dbg !5610
  %3 = load i32, i32* %id, align 8, !dbg !5610
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.170, i32 0, i32 0), i32 %3), !dbg !5611
  %4 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5612
  %has_start = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %4, i32 0, i32 3, !dbg !5614
  %5 = load i32, i32* %has_start, align 8, !dbg !5614
  %tobool = icmp ne i32 %5, 0, !dbg !5612
  br i1 %tobool, label %if.then, label %if.else, !dbg !5615

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %log_ctx.addr, align 8, !dbg !5616
  %7 = load i32, i32* %log_level.addr, align 4, !dbg !5618
  %8 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5619
  %start_is_offset = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %8, i32 0, i32 5, !dbg !5620
  %9 = load i32, i32* %start_is_offset, align 8, !dbg !5620
  %tobool1 = icmp ne i32 %9, 0, !dbg !5619
  %cond = select i1 %tobool1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), !dbg !5619
  %10 = bitcast [32 x i8]* %.compoundliteral to i8*, !dbg !5621
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 32, i32 1, i1 false), !dbg !5621
  %arrayinit.begin = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral, i64 0, i64 0, !dbg !5622
  store i8 0, i8* %arrayinit.begin, align 1, !dbg !5622
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral, i32 0, i32 0, !dbg !5621
  %11 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5623
  %start = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %11, i32 0, i32 1, !dbg !5624
  %12 = load i64, i64* %start, align 8, !dbg !5624
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral2, i32 0, i32 0, !dbg !5625
  store i32 1, i32* %num, align 4, !dbg !5625
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral2, i32 0, i32 1, !dbg !5625
  store i32 1000000, i32* %den, align 4, !dbg !5625
  %call = call i8* @av_ts_make_time_string(i8* %arraydecay, i64 %12, %struct.AVRational* %.compoundliteral2), !dbg !5626
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.171, i32 0, i32 0), i8* %cond, i8* %call), !dbg !5628
  br label %if.end, !dbg !5629

if.else:                                          ; preds = %entry
  %13 = load i8*, i8** %log_ctx.addr, align 8, !dbg !5630
  %14 = load i32, i32* %log_level.addr, align 4, !dbg !5632
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.173, i32 0, i32 0)), !dbg !5633
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5634
  %has_end = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %15, i32 0, i32 4, !dbg !5636
  %16 = load i32, i32* %has_end, align 4, !dbg !5636
  %tobool3 = icmp ne i32 %16, 0, !dbg !5634
  br i1 %tobool3, label %if.then4, label %if.else19, !dbg !5637

if.then4:                                         ; preds = %if.end
  %17 = load i8*, i8** %log_ctx.addr, align 8, !dbg !5638
  %18 = load i32, i32* %log_level.addr, align 4, !dbg !5640
  %19 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5641
  %end_is_offset = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %19, i32 0, i32 6, !dbg !5642
  %20 = load i32, i32* %end_is_offset, align 4, !dbg !5642
  %tobool5 = icmp ne i32 %20, 0, !dbg !5641
  %cond6 = select i1 %tobool5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), !dbg !5641
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.174, i32 0, i32 0), i8* %cond6), !dbg !5643
  %21 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5644
  %duration_frames = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %21, i32 0, i32 7, !dbg !5646
  %22 = load i32, i32* %duration_frames, align 8, !dbg !5646
  %tobool7 = icmp ne i32 %22, 0, !dbg !5644
  br i1 %tobool7, label %if.then8, label %if.else9, !dbg !5647

if.then8:                                         ; preds = %if.then4
  %23 = load i8*, i8** %log_ctx.addr, align 8, !dbg !5648
  %24 = load i32, i32* %log_level.addr, align 4, !dbg !5649
  %25 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5650
  %end = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %25, i32 0, i32 2, !dbg !5651
  %26 = load i64, i64* %end, align 8, !dbg !5651
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.175, i32 0, i32 0), i64 %26), !dbg !5652
  br label %if.end18, !dbg !5652

if.else9:                                         ; preds = %if.then4
  %27 = load i8*, i8** %log_ctx.addr, align 8, !dbg !5653
  %28 = load i32, i32* %log_level.addr, align 4, !dbg !5654
  %29 = bitcast [32 x i8]* %.compoundliteral10 to i8*, !dbg !5655
  call void @llvm.memset.p0i8.i64(i8* %29, i8 0, i64 32, i32 1, i1 false), !dbg !5655
  %arrayinit.begin11 = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral10, i64 0, i64 0, !dbg !5656
  store i8 0, i8* %arrayinit.begin11, align 1, !dbg !5656
  %arraydecay12 = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral10, i32 0, i32 0, !dbg !5655
  %30 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !5657
  %end13 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %30, i32 0, i32 2, !dbg !5658
  %31 = load i64, i64* %end13, align 8, !dbg !5658
  %num15 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral14, i32 0, i32 0, !dbg !5659
  store i32 1, i32* %num15, align 4, !dbg !5659
  %den16 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral14, i32 0, i32 1, !dbg !5659
  store i32 1000000, i32* %den16, align 4, !dbg !5659
  %call17 = call i8* @av_ts_make_time_string(i8* %arraydecay12, i64 %31, %struct.AVRational* %.compoundliteral14), !dbg !5660
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* %call17), !dbg !5662
  br label %if.end18

if.end18:                                         ; preds = %if.else9, %if.then8
  br label %if.end20, !dbg !5664

if.else19:                                        ; preds = %if.end
  %32 = load i8*, i8** %log_ctx.addr, align 8, !dbg !5665
  %33 = load i32, i32* %log_level.addr, align 4, !dbg !5667
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 %33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.177, i32 0, i32 0)), !dbg !5668
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.end18
  %34 = load i8*, i8** %log_ctx.addr, align 8, !dbg !5669
  %35 = load i32, i32* %log_level.addr, align 4, !dbg !5670
  call void (i8*, i32, i8*, ...) @av_log(i8* %34, i32 %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !5671
  ret void, !dbg !5672
}

declare i32 @av_parse_time(i64*, i8*, i32) #2

; Function Attrs: nounwind
declare i64 @strtoll(i8*, i8**, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @av_ts_make_time_string(i8* %buf, i64 %ts, %struct.AVRational* %tb) #4 !dbg !5673 {
entry:
  %buf.addr = alloca i8*, align 8
  %ts.addr = alloca i64, align 8
  %tb.addr = alloca %struct.AVRational*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5677, metadata !2571), !dbg !5678
  store i64 %ts, i64* %ts.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ts.addr, metadata !5679, metadata !2571), !dbg !5680
  store %struct.AVRational* %tb, %struct.AVRational** %tb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVRational** %tb.addr, metadata !5681, metadata !2571), !dbg !5682
  %0 = load i64, i64* %ts.addr, align 8, !dbg !5683
  %cmp = icmp eq i64 %0, -9223372036854775808, !dbg !5685
  br i1 %cmp, label %if.then, label %if.else, !dbg !5686

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !5687
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.178, i32 0, i32 0)) #9, !dbg !5689
  br label %if.end, !dbg !5689

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !5690
  %3 = load %struct.AVRational*, %struct.AVRational** %tb.addr, align 8, !dbg !5691
  %4 = bitcast %struct.AVRational* %3 to i64*, !dbg !5692
  %5 = load i64, i64* %4, align 4, !dbg !5692
  %call1 = call double @av_q2d(i64 %5), !dbg !5692
  %6 = load i64, i64* %ts.addr, align 8, !dbg !5693
  %conv = sitofp i64 %6 to double, !dbg !5693
  %mul = fmul double %call1, %conv, !dbg !5694
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.179, i32 0, i32 0), double %mul) #9, !dbg !5695
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !5696
  ret i8* %7, !dbg !5697
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #7

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: inlinehint nounwind uwtable
define internal double @av_q2d(i64 %a.coerce) #4 !dbg !5698 {
entry:
  %a = alloca %struct.AVRational, align 4
  %0 = bitcast %struct.AVRational* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %a, metadata !5701, metadata !2571), !dbg !5702
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 0, !dbg !5703
  %1 = load i32, i32* %num, align 4, !dbg !5703
  %conv = sitofp i32 %1 to double, !dbg !5704
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 1, !dbg !5705
  %2 = load i32, i32* %den, align 4, !dbg !5705
  %conv1 = sitofp i32 %2 to double, !dbg !5706
  %div = fdiv double %conv, %conv1, !dbg !5707
  ret double %div, !dbg !5708
}

; Function Attrs: noreturn
declare void @exit_program(i32) #8

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #9

declare void @av_log_default_callback(i8*, i32, i8*, %struct.__va_list_tag*) #2

declare void @av_log_format_line(i8*, i32, i8*, %struct.__va_list_tag*, i8*, i32, i32*) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) #3

declare i8* @av_realloc_array(i8*, i64, i64) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) #3

; Function Attrs: nounwind uwtable
define internal i32 @writer_register(%struct.Writer* %writer) #0 !dbg !2403 {
entry:
  %retval = alloca i32, align 4
  %writer.addr = alloca %struct.Writer*, align 8
  store %struct.Writer* %writer, %struct.Writer** %writer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Writer** %writer.addr, metadata !5709, metadata !2571), !dbg !5710
  %0 = load i32, i32* @writer_register.next_registered_writer_idx, align 4, !dbg !5711
  %cmp = icmp eq i32 %0, 64, !dbg !5713
  br i1 %cmp, label %if.then, label %if.end, !dbg !5714

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5715
  br label %return, !dbg !5715

if.end:                                           ; preds = %entry
  %1 = load %struct.Writer*, %struct.Writer** %writer.addr, align 8, !dbg !5716
  %2 = load i32, i32* @writer_register.next_registered_writer_idx, align 4, !dbg !5717
  %inc = add nsw i32 %2, 1, !dbg !5717
  store i32 %inc, i32* @writer_register.next_registered_writer_idx, align 4, !dbg !5717
  %idxprom = sext i32 %2 to i64, !dbg !5718
  %arrayidx = getelementptr inbounds [65 x %struct.Writer*], [65 x %struct.Writer*]* @registered_writers, i64 0, i64 %idxprom, !dbg !5718
  store %struct.Writer* %1, %struct.Writer** %arrayidx, align 8, !dbg !5719
  store i32 0, i32* %retval, align 4, !dbg !5720
  br label %return, !dbg !5720

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !5721
  ret i32 %3, !dbg !5721
}

; Function Attrs: nounwind uwtable
define internal void @default_print_section_header(%struct.WriterContext* %wctx) #0 !dbg !5722 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %def = alloca %struct.DefaultContext*, align 8
  %buf = alloca [32 x i8], align 16
  %section = alloca %struct.section*, align 8
  %parent_section = alloca %struct.section*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !5723, metadata !2571), !dbg !5724
  call void @llvm.dbg.declare(metadata %struct.DefaultContext** %def, metadata !5725, metadata !2571), !dbg !5735
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5736
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !5737
  %1 = load i8*, i8** %priv, align 8, !dbg !5737
  %2 = bitcast i8* %1 to %struct.DefaultContext*, !dbg !5736
  store %struct.DefaultContext* %2, %struct.DefaultContext** %def, align 8, !dbg !5735
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !5738, metadata !2571), !dbg !5742
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !5743, metadata !2571), !dbg !5744
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5745
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !5746
  %4 = load i32, i32* %level, align 4, !dbg !5746
  %idxprom = sext i32 %4 to i64, !dbg !5747
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5747
  %section1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 8, !dbg !5748
  %arrayidx = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section1, i64 0, i64 %idxprom, !dbg !5747
  %6 = load %struct.section*, %struct.section** %arrayidx, align 8, !dbg !5747
  store %struct.section* %6, %struct.section** %section, align 8, !dbg !5744
  call void @llvm.dbg.declare(metadata %struct.section** %parent_section, metadata !5749, metadata !2571), !dbg !5750
  %7 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5751
  %level2 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 6, !dbg !5752
  %8 = load i32, i32* %level2, align 4, !dbg !5752
  %tobool = icmp ne i32 %8, 0, !dbg !5751
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5751

cond.true:                                        ; preds = %entry
  %9 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5753
  %level3 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %9, i32 0, i32 6, !dbg !5754
  %10 = load i32, i32* %level3, align 4, !dbg !5754
  %sub = sub nsw i32 %10, 1, !dbg !5755
  %idxprom4 = sext i32 %sub to i64, !dbg !5756
  %11 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5756
  %section5 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %11, i32 0, i32 8, !dbg !5757
  %arrayidx6 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section5, i64 0, i64 %idxprom4, !dbg !5756
  %12 = load %struct.section*, %struct.section** %arrayidx6, align 8, !dbg !5756
  br label %cond.end, !dbg !5758

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5760

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.section* [ %12, %cond.true ], [ null, %cond.false ], !dbg !5762
  store %struct.section* %cond, %struct.section** %parent_section, align 8, !dbg !5764
  %13 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5765
  %level7 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %13, i32 0, i32 6, !dbg !5766
  %14 = load i32, i32* %level7, align 4, !dbg !5766
  %idxprom8 = sext i32 %14 to i64, !dbg !5767
  %15 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5767
  %section_pbuf = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %15, i32 0, i32 9, !dbg !5768
  %arrayidx9 = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf, i64 0, i64 %idxprom8, !dbg !5767
  call void @av_bprint_clear(%struct.AVBPrint* %arrayidx9), !dbg !5769
  %16 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !5770
  %tobool10 = icmp ne %struct.section* %16, null, !dbg !5770
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !5772

land.lhs.true:                                    ; preds = %cond.end
  %17 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !5773
  %flags = getelementptr inbounds %struct.section, %struct.section* %17, i32 0, i32 2, !dbg !5774
  %18 = load i32, i32* %flags, align 8, !dbg !5774
  %and = and i32 %18, 3, !dbg !5775
  %tobool11 = icmp ne i32 %and, 0, !dbg !5775
  br i1 %tobool11, label %if.end, label %if.then, !dbg !5776

if.then:                                          ; preds = %land.lhs.true
  %19 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5777
  %level12 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %19, i32 0, i32 6, !dbg !5779
  %20 = load i32, i32* %level12, align 4, !dbg !5779
  %idxprom13 = sext i32 %20 to i64, !dbg !5780
  %21 = load %struct.DefaultContext*, %struct.DefaultContext** %def, align 8, !dbg !5780
  %nested_section = getelementptr inbounds %struct.DefaultContext, %struct.DefaultContext* %21, i32 0, i32 3, !dbg !5781
  %arrayidx14 = getelementptr inbounds [10 x i32], [10 x i32]* %nested_section, i64 0, i64 %idxprom13, !dbg !5780
  store i32 1, i32* %arrayidx14, align 4, !dbg !5782
  %22 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5783
  %level15 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %22, i32 0, i32 6, !dbg !5784
  %23 = load i32, i32* %level15, align 4, !dbg !5784
  %idxprom16 = sext i32 %23 to i64, !dbg !5785
  %24 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5785
  %section_pbuf17 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %24, i32 0, i32 9, !dbg !5786
  %arrayidx18 = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf17, i64 0, i64 %idxprom16, !dbg !5785
  %25 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5787
  %level19 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %25, i32 0, i32 6, !dbg !5788
  %26 = load i32, i32* %level19, align 4, !dbg !5788
  %sub20 = sub nsw i32 %26, 1, !dbg !5789
  %idxprom21 = sext i32 %sub20 to i64, !dbg !5790
  %27 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5790
  %section_pbuf22 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %27, i32 0, i32 9, !dbg !5791
  %arrayidx23 = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf22, i64 0, i64 %idxprom21, !dbg !5790
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %arrayidx23, i32 0, i32 0, !dbg !5792
  %28 = load i8*, i8** %str, align 8, !dbg !5792
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !5793
  %29 = load %struct.section*, %struct.section** %section, align 8, !dbg !5794
  %element_name = getelementptr inbounds %struct.section, %struct.section* %29, i32 0, i32 4, !dbg !5795
  %30 = load i8*, i8** %element_name, align 8, !dbg !5795
  %31 = load %struct.section*, %struct.section** %section, align 8, !dbg !5796
  %name = getelementptr inbounds %struct.section, %struct.section* %31, i32 0, i32 1, !dbg !5797
  %32 = load i8*, i8** %name, align 8, !dbg !5797
  %call = call i8* @av_x_if_null(i8* %30, i8* %32), !dbg !5798
  %call24 = call i8* @upcase_string(i8* %arraydecay, i64 32, i8* %call), !dbg !5799
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %arrayidx18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.189, i32 0, i32 0), i8* %28, i8* %call24), !dbg !5800
  br label %if.end, !dbg !5801

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  %33 = load %struct.DefaultContext*, %struct.DefaultContext** %def, align 8, !dbg !5802
  %noprint_wrappers = getelementptr inbounds %struct.DefaultContext, %struct.DefaultContext* %33, i32 0, i32 2, !dbg !5804
  %34 = load i32, i32* %noprint_wrappers, align 4, !dbg !5804
  %tobool25 = icmp ne i32 %34, 0, !dbg !5802
  br i1 %tobool25, label %if.then31, label %lor.lhs.false, !dbg !5805

lor.lhs.false:                                    ; preds = %if.end
  %35 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5806
  %level26 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %35, i32 0, i32 6, !dbg !5808
  %36 = load i32, i32* %level26, align 4, !dbg !5808
  %idxprom27 = sext i32 %36 to i64, !dbg !5809
  %37 = load %struct.DefaultContext*, %struct.DefaultContext** %def, align 8, !dbg !5809
  %nested_section28 = getelementptr inbounds %struct.DefaultContext, %struct.DefaultContext* %37, i32 0, i32 3, !dbg !5810
  %arrayidx29 = getelementptr inbounds [10 x i32], [10 x i32]* %nested_section28, i64 0, i64 %idxprom27, !dbg !5809
  %38 = load i32, i32* %arrayidx29, align 4, !dbg !5809
  %tobool30 = icmp ne i32 %38, 0, !dbg !5809
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !5811

if.then31:                                        ; preds = %lor.lhs.false, %if.end
  br label %if.end41, !dbg !5812

if.end32:                                         ; preds = %lor.lhs.false
  %39 = load %struct.section*, %struct.section** %section, align 8, !dbg !5813
  %flags33 = getelementptr inbounds %struct.section, %struct.section* %39, i32 0, i32 2, !dbg !5815
  %40 = load i32, i32* %flags33, align 8, !dbg !5815
  %and34 = and i32 %40, 3, !dbg !5816
  %tobool35 = icmp ne i32 %and34, 0, !dbg !5816
  br i1 %tobool35, label %if.end41, label %if.then36, !dbg !5817

if.then36:                                        ; preds = %if.end32
  %arraydecay37 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !5818
  %41 = load %struct.section*, %struct.section** %section, align 8, !dbg !5819
  %name38 = getelementptr inbounds %struct.section, %struct.section* %41, i32 0, i32 1, !dbg !5820
  %42 = load i8*, i8** %name38, align 8, !dbg !5820
  %call39 = call i8* @upcase_string(i8* %arraydecay37, i64 32, i8* %42), !dbg !5821
  %call40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.190, i32 0, i32 0), i8* %call39), !dbg !5822
  br label %if.end41, !dbg !5824

if.end41:                                         ; preds = %if.then31, %if.then36, %if.end32
  ret void, !dbg !5825
}

; Function Attrs: nounwind uwtable
define internal void @default_print_section_footer(%struct.WriterContext* %wctx) #0 !dbg !5826 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %def = alloca %struct.DefaultContext*, align 8
  %section = alloca %struct.section*, align 8
  %buf = alloca [32 x i8], align 16
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !5827, metadata !2571), !dbg !5828
  call void @llvm.dbg.declare(metadata %struct.DefaultContext** %def, metadata !5829, metadata !2571), !dbg !5830
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5831
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !5832
  %1 = load i8*, i8** %priv, align 8, !dbg !5832
  %2 = bitcast i8* %1 to %struct.DefaultContext*, !dbg !5831
  store %struct.DefaultContext* %2, %struct.DefaultContext** %def, align 8, !dbg !5830
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !5833, metadata !2571), !dbg !5834
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5835
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !5836
  %4 = load i32, i32* %level, align 4, !dbg !5836
  %idxprom = sext i32 %4 to i64, !dbg !5837
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5837
  %section1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 8, !dbg !5838
  %arrayidx = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section1, i64 0, i64 %idxprom, !dbg !5837
  %6 = load %struct.section*, %struct.section** %arrayidx, align 8, !dbg !5837
  store %struct.section* %6, %struct.section** %section, align 8, !dbg !5834
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !5839, metadata !2571), !dbg !5840
  %7 = load %struct.DefaultContext*, %struct.DefaultContext** %def, align 8, !dbg !5841
  %noprint_wrappers = getelementptr inbounds %struct.DefaultContext, %struct.DefaultContext* %7, i32 0, i32 2, !dbg !5843
  %8 = load i32, i32* %noprint_wrappers, align 4, !dbg !5843
  %tobool = icmp ne i32 %8, 0, !dbg !5841
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5844

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5845
  %level2 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %9, i32 0, i32 6, !dbg !5847
  %10 = load i32, i32* %level2, align 4, !dbg !5847
  %idxprom3 = sext i32 %10 to i64, !dbg !5848
  %11 = load %struct.DefaultContext*, %struct.DefaultContext** %def, align 8, !dbg !5848
  %nested_section = getelementptr inbounds %struct.DefaultContext, %struct.DefaultContext* %11, i32 0, i32 3, !dbg !5849
  %arrayidx4 = getelementptr inbounds [10 x i32], [10 x i32]* %nested_section, i64 0, i64 %idxprom3, !dbg !5848
  %12 = load i32, i32* %arrayidx4, align 4, !dbg !5848
  %tobool5 = icmp ne i32 %12, 0, !dbg !5848
  br i1 %tobool5, label %if.then, label %if.end, !dbg !5850

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end9, !dbg !5851

if.end:                                           ; preds = %lor.lhs.false
  %13 = load %struct.section*, %struct.section** %section, align 8, !dbg !5852
  %flags = getelementptr inbounds %struct.section, %struct.section* %13, i32 0, i32 2, !dbg !5854
  %14 = load i32, i32* %flags, align 8, !dbg !5854
  %and = and i32 %14, 3, !dbg !5855
  %tobool6 = icmp ne i32 %and, 0, !dbg !5855
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !5856

if.then7:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !5857
  %15 = load %struct.section*, %struct.section** %section, align 8, !dbg !5858
  %name = getelementptr inbounds %struct.section, %struct.section* %15, i32 0, i32 1, !dbg !5859
  %16 = load i8*, i8** %name, align 8, !dbg !5859
  %call = call i8* @upcase_string(i8* %arraydecay, i64 32, i8* %16), !dbg !5860
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.191, i32 0, i32 0), i8* %call), !dbg !5861
  br label %if.end9, !dbg !5863

if.end9:                                          ; preds = %if.then, %if.then7, %if.end
  ret void, !dbg !5864
}

; Function Attrs: nounwind uwtable
define internal void @default_print_int(%struct.WriterContext* %wctx, i8* %key, i64 %value) #0 !dbg !5865 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i64, align 8
  %def = alloca %struct.DefaultContext*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !5866, metadata !2571), !dbg !5867
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !5868, metadata !2571), !dbg !5869
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !5870, metadata !2571), !dbg !5871
  call void @llvm.dbg.declare(metadata %struct.DefaultContext** %def, metadata !5872, metadata !2571), !dbg !5873
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5874
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !5875
  %1 = load i8*, i8** %priv, align 8, !dbg !5875
  %2 = bitcast i8* %1 to %struct.DefaultContext*, !dbg !5874
  store %struct.DefaultContext* %2, %struct.DefaultContext** %def, align 8, !dbg !5873
  %3 = load %struct.DefaultContext*, %struct.DefaultContext** %def, align 8, !dbg !5876
  %nokey = getelementptr inbounds %struct.DefaultContext, %struct.DefaultContext* %3, i32 0, i32 1, !dbg !5878
  %4 = load i32, i32* %nokey, align 8, !dbg !5878
  %tobool = icmp ne i32 %4, 0, !dbg !5876
  br i1 %tobool, label %if.end, label %if.then, !dbg !5879

if.then:                                          ; preds = %entry
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5880
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 6, !dbg !5881
  %6 = load i32, i32* %level, align 4, !dbg !5881
  %idxprom = sext i32 %6 to i64, !dbg !5882
  %7 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5882
  %section_pbuf = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 9, !dbg !5883
  %arrayidx = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf, i64 0, i64 %idxprom, !dbg !5882
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %arrayidx, i32 0, i32 0, !dbg !5884
  %8 = load i8*, i8** %str, align 8, !dbg !5884
  %9 = load i8*, i8** %key.addr, align 8, !dbg !5885
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.192, i32 0, i32 0), i8* %8, i8* %9), !dbg !5886
  br label %if.end, !dbg !5886

if.end:                                           ; preds = %if.then, %entry
  %10 = load i64, i64* %value.addr, align 8, !dbg !5887
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.193, i32 0, i32 0), i64 %10), !dbg !5888
  ret void, !dbg !5889
}

; Function Attrs: nounwind uwtable
define internal void @default_print_str(%struct.WriterContext* %wctx, i8* %key, i8* %value) #0 !dbg !5890 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %def = alloca %struct.DefaultContext*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !5891, metadata !2571), !dbg !5892
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !5893, metadata !2571), !dbg !5894
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !5895, metadata !2571), !dbg !5896
  call void @llvm.dbg.declare(metadata %struct.DefaultContext** %def, metadata !5897, metadata !2571), !dbg !5898
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5899
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !5900
  %1 = load i8*, i8** %priv, align 8, !dbg !5900
  %2 = bitcast i8* %1 to %struct.DefaultContext*, !dbg !5899
  store %struct.DefaultContext* %2, %struct.DefaultContext** %def, align 8, !dbg !5898
  %3 = load %struct.DefaultContext*, %struct.DefaultContext** %def, align 8, !dbg !5901
  %nokey = getelementptr inbounds %struct.DefaultContext, %struct.DefaultContext* %3, i32 0, i32 1, !dbg !5903
  %4 = load i32, i32* %nokey, align 8, !dbg !5903
  %tobool = icmp ne i32 %4, 0, !dbg !5901
  br i1 %tobool, label %if.end, label %if.then, !dbg !5904

if.then:                                          ; preds = %entry
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5905
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 6, !dbg !5906
  %6 = load i32, i32* %level, align 4, !dbg !5906
  %idxprom = sext i32 %6 to i64, !dbg !5907
  %7 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5907
  %section_pbuf = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 9, !dbg !5908
  %arrayidx = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf, i64 0, i64 %idxprom, !dbg !5907
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %arrayidx, i32 0, i32 0, !dbg !5909
  %8 = load i8*, i8** %str, align 8, !dbg !5909
  %9 = load i8*, i8** %key.addr, align 8, !dbg !5910
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.192, i32 0, i32 0), i8* %8, i8* %9), !dbg !5911
  br label %if.end, !dbg !5911

if.end:                                           ; preds = %if.then, %entry
  %10 = load i8*, i8** %value.addr, align 8, !dbg !5912
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.194, i32 0, i32 0), i8* %10), !dbg !5913
  ret void, !dbg !5914
}

; Function Attrs: nounwind uwtable
define internal i8* @default_get_name(i8* %ctx) #0 !dbg !5915 {
entry:
  %ctx.addr = alloca i8*, align 8
  store i8* %ctx, i8** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ctx.addr, metadata !5916, metadata !2571), !dbg !5917
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), !dbg !5918
}

declare void @av_bprint_clear(%struct.AVBPrint*) #2

declare void @av_bprintf(%struct.AVBPrint*, i8*, ...) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @upcase_string(i8* %dst, i64 %dst_size, i8* %src) #4 !dbg !5919 {
entry:
  %dst.addr = alloca i8*, align 8
  %dst_size.addr = alloca i64, align 8
  %src.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5922, metadata !2571), !dbg !5923
  store i64 %dst_size, i64* %dst_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_size.addr, metadata !5924, metadata !2571), !dbg !5925
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !5926, metadata !2571), !dbg !5927
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5928, metadata !2571), !dbg !5929
  store i32 0, i32* %i, align 4, !dbg !5930
  br label %for.cond, !dbg !5932

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5933
  %idxprom = sext i32 %0 to i64, !dbg !5936
  %1 = load i8*, i8** %src.addr, align 8, !dbg !5936
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom, !dbg !5936
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5936
  %conv = sext i8 %2 to i32, !dbg !5936
  %tobool = icmp ne i32 %conv, 0, !dbg !5936
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5937

land.rhs:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !5938
  %conv1 = sext i32 %3 to i64, !dbg !5938
  %4 = load i64, i64* %dst_size.addr, align 8, !dbg !5940
  %sub = sub i64 %4, 1, !dbg !5941
  %cmp = icmp ult i64 %conv1, %sub, !dbg !5942
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ]
  br i1 %5, label %for.body, label %for.end, !dbg !5943

for.body:                                         ; preds = %land.end
  %6 = load i32, i32* %i, align 4, !dbg !5945
  %idxprom3 = sext i32 %6 to i64, !dbg !5946
  %7 = load i8*, i8** %src.addr, align 8, !dbg !5946
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i64 %idxprom3, !dbg !5946
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !5946
  %conv5 = sext i8 %8 to i32, !dbg !5946
  %call = call i32 @av_toupper(i32 %conv5) #1, !dbg !5947
  %conv6 = trunc i32 %call to i8, !dbg !5947
  %9 = load i32, i32* %i, align 4, !dbg !5948
  %idxprom7 = sext i32 %9 to i64, !dbg !5949
  %10 = load i8*, i8** %dst.addr, align 8, !dbg !5949
  %arrayidx8 = getelementptr inbounds i8, i8* %10, i64 %idxprom7, !dbg !5949
  store i8 %conv6, i8* %arrayidx8, align 1, !dbg !5950
  br label %for.inc, !dbg !5949

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !5951
  %inc = add nsw i32 %11, 1, !dbg !5951
  store i32 %inc, i32* %i, align 4, !dbg !5951
  br label %for.cond, !dbg !5953, !llvm.loop !5954

for.end:                                          ; preds = %land.end
  %12 = load i32, i32* %i, align 4, !dbg !5956
  %idxprom9 = sext i32 %12 to i64, !dbg !5957
  %13 = load i8*, i8** %dst.addr, align 8, !dbg !5957
  %arrayidx10 = getelementptr inbounds i8, i8* %13, i64 %idxprom9, !dbg !5957
  store i8 0, i8* %arrayidx10, align 1, !dbg !5958
  %14 = load i8*, i8** %dst.addr, align 8, !dbg !5959
  ret i8* %14, !dbg !5960
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @av_toupper(i32 %c) #10 !dbg !5961 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !5963, metadata !2571), !dbg !5964
  %0 = load i32, i32* %c.addr, align 4, !dbg !5965
  %cmp = icmp sge i32 %0, 97, !dbg !5967
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5968

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !5969
  %cmp1 = icmp sle i32 %1, 122, !dbg !5971
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5972

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %c.addr, align 4, !dbg !5973
  %xor = xor i32 %2, 32, !dbg !5973
  store i32 %xor, i32* %c.addr, align 4, !dbg !5973
  br label %if.end, !dbg !5974

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %3 = load i32, i32* %c.addr, align 4, !dbg !5975
  ret i32 %3, !dbg !5976
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @compact_init(%struct.WriterContext* %wctx) #11 !dbg !5977 {
entry:
  %retval = alloca i32, align 4
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %compact = alloca %struct.CompactContext*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !5978, metadata !2571), !dbg !5979
  call void @llvm.dbg.declare(metadata %struct.CompactContext** %compact, metadata !5980, metadata !2571), !dbg !5998
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !5999
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !6000
  %1 = load i8*, i8** %priv, align 8, !dbg !6000
  %2 = bitcast i8* %1 to %struct.CompactContext*, !dbg !5999
  store %struct.CompactContext* %2, %struct.CompactContext** %compact, align 8, !dbg !5998
  %3 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6001
  %item_sep_str = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %3, i32 0, i32 1, !dbg !6003
  %4 = load i8*, i8** %item_sep_str, align 8, !dbg !6003
  %call = call i64 @strlen(i8* %4) #14, !dbg !6004
  %cmp = icmp ne i64 %call, 1, !dbg !6005
  br i1 %cmp, label %if.then, label %if.end, !dbg !6006

if.then:                                          ; preds = %entry
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6007
  %6 = bitcast %struct.WriterContext* %5 to i8*, !dbg !6007
  %7 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6009
  %item_sep_str1 = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %7, i32 0, i32 1, !dbg !6010
  %8 = load i8*, i8** %item_sep_str1, align 8, !dbg !6010
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.208, i32 0, i32 0), i8* %8), !dbg !6011
  store i32 -22, i32* %retval, align 4, !dbg !6012
  br label %return, !dbg !6012

if.end:                                           ; preds = %entry
  %9 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6013
  %item_sep_str2 = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %9, i32 0, i32 1, !dbg !6014
  %10 = load i8*, i8** %item_sep_str2, align 8, !dbg !6014
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 0, !dbg !6013
  %11 = load i8, i8* %arrayidx, align 1, !dbg !6013
  %12 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6015
  %item_sep = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %12, i32 0, i32 2, !dbg !6016
  store i8 %11, i8* %item_sep, align 8, !dbg !6017
  %13 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6018
  %escape_mode_str = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %13, i32 0, i32 5, !dbg !6020
  %14 = load i8*, i8** %escape_mode_str, align 8, !dbg !6020
  %call3 = call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.209, i32 0, i32 0)) #14, !dbg !6021
  %tobool = icmp ne i32 %call3, 0, !dbg !6021
  br i1 %tobool, label %if.else, label %if.then4, !dbg !6022

if.then4:                                         ; preds = %if.end
  %15 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6023
  %escape_str = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %15, i32 0, i32 6, !dbg !6025
  store i8* (%struct.AVBPrint*, i8*, i8, i8*)* @none_escape_str, i8* (%struct.AVBPrint*, i8*, i8, i8*)** %escape_str, align 8, !dbg !6026
  br label %if.end20, !dbg !6023

if.else:                                          ; preds = %if.end
  %16 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6027
  %escape_mode_str5 = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %16, i32 0, i32 5, !dbg !6029
  %17 = load i8*, i8** %escape_mode_str5, align 8, !dbg !6029
  %call6 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.202, i32 0, i32 0)) #14, !dbg !6030
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6030
  br i1 %tobool7, label %if.else10, label %if.then8, !dbg !6031

if.then8:                                         ; preds = %if.else
  %18 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6032
  %escape_str9 = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %18, i32 0, i32 6, !dbg !6034
  store i8* (%struct.AVBPrint*, i8*, i8, i8*)* @c_escape_str, i8* (%struct.AVBPrint*, i8*, i8, i8*)** %escape_str9, align 8, !dbg !6035
  br label %if.end19, !dbg !6032

if.else10:                                        ; preds = %if.else
  %19 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6036
  %escape_mode_str11 = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %19, i32 0, i32 5, !dbg !6038
  %20 = load i8*, i8** %escape_mode_str11, align 8, !dbg !6038
  %call12 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.210, i32 0, i32 0)) #14, !dbg !6039
  %tobool13 = icmp ne i32 %call12, 0, !dbg !6039
  br i1 %tobool13, label %if.else16, label %if.then14, !dbg !6040

if.then14:                                        ; preds = %if.else10
  %21 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6041
  %escape_str15 = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %21, i32 0, i32 6, !dbg !6043
  store i8* (%struct.AVBPrint*, i8*, i8, i8*)* @csv_escape_str, i8* (%struct.AVBPrint*, i8*, i8, i8*)** %escape_str15, align 8, !dbg !6044
  br label %if.end18, !dbg !6041

if.else16:                                        ; preds = %if.else10
  %22 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6045
  %23 = bitcast %struct.WriterContext* %22 to i8*, !dbg !6045
  %24 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6047
  %escape_mode_str17 = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %24, i32 0, i32 5, !dbg !6048
  %25 = load i8*, i8** %escape_mode_str17, align 8, !dbg !6048
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.211, i32 0, i32 0), i8* %25), !dbg !6049
  store i32 -22, i32* %retval, align 4, !dbg !6050
  br label %return, !dbg !6050

if.end18:                                         ; preds = %if.then14
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then8
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then4
  store i32 0, i32* %retval, align 4, !dbg !6051
  br label %return, !dbg !6051

return:                                           ; preds = %if.end20, %if.else16, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !6052
  ret i32 %26, !dbg !6052
}

; Function Attrs: nounwind uwtable
define internal void @compact_print_section_header(%struct.WriterContext* %wctx) #0 !dbg !6053 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %compact = alloca %struct.CompactContext*, align 8
  %section = alloca %struct.section*, align 8
  %parent_section = alloca %struct.section*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6054, metadata !2571), !dbg !6055
  call void @llvm.dbg.declare(metadata %struct.CompactContext** %compact, metadata !6056, metadata !2571), !dbg !6057
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6058
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !6059
  %1 = load i8*, i8** %priv, align 8, !dbg !6059
  %2 = bitcast i8* %1 to %struct.CompactContext*, !dbg !6058
  store %struct.CompactContext* %2, %struct.CompactContext** %compact, align 8, !dbg !6057
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !6060, metadata !2571), !dbg !6061
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6062
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !6063
  %4 = load i32, i32* %level, align 4, !dbg !6063
  %idxprom = sext i32 %4 to i64, !dbg !6064
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6064
  %section1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 8, !dbg !6065
  %arrayidx = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section1, i64 0, i64 %idxprom, !dbg !6064
  %6 = load %struct.section*, %struct.section** %arrayidx, align 8, !dbg !6064
  store %struct.section* %6, %struct.section** %section, align 8, !dbg !6061
  call void @llvm.dbg.declare(metadata %struct.section** %parent_section, metadata !6066, metadata !2571), !dbg !6067
  %7 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6068
  %level2 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 6, !dbg !6069
  %8 = load i32, i32* %level2, align 4, !dbg !6069
  %tobool = icmp ne i32 %8, 0, !dbg !6068
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6068

cond.true:                                        ; preds = %entry
  %9 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6070
  %level3 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %9, i32 0, i32 6, !dbg !6071
  %10 = load i32, i32* %level3, align 4, !dbg !6071
  %sub = sub nsw i32 %10, 1, !dbg !6072
  %idxprom4 = sext i32 %sub to i64, !dbg !6073
  %11 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6073
  %section5 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %11, i32 0, i32 8, !dbg !6074
  %arrayidx6 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section5, i64 0, i64 %idxprom4, !dbg !6073
  %12 = load %struct.section*, %struct.section** %arrayidx6, align 8, !dbg !6073
  br label %cond.end, !dbg !6075

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6077

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.section* [ %12, %cond.true ], [ null, %cond.false ], !dbg !6079
  store %struct.section* %cond, %struct.section** %parent_section, align 8, !dbg !6081
  %13 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6082
  %level7 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %13, i32 0, i32 6, !dbg !6083
  %14 = load i32, i32* %level7, align 4, !dbg !6083
  %idxprom8 = sext i32 %14 to i64, !dbg !6084
  %15 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6084
  %terminate_line = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %15, i32 0, i32 9, !dbg !6085
  %arrayidx9 = getelementptr inbounds [10 x i32], [10 x i32]* %terminate_line, i64 0, i64 %idxprom8, !dbg !6084
  store i32 1, i32* %arrayidx9, align 4, !dbg !6086
  %16 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6087
  %level10 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %16, i32 0, i32 6, !dbg !6088
  %17 = load i32, i32* %level10, align 4, !dbg !6088
  %idxprom11 = sext i32 %17 to i64, !dbg !6089
  %18 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6089
  %has_nested_elems = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %18, i32 0, i32 8, !dbg !6090
  %arrayidx12 = getelementptr inbounds [10 x i32], [10 x i32]* %has_nested_elems, i64 0, i64 %idxprom11, !dbg !6089
  store i32 0, i32* %arrayidx12, align 4, !dbg !6091
  %19 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6092
  %level13 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %19, i32 0, i32 6, !dbg !6093
  %20 = load i32, i32* %level13, align 4, !dbg !6093
  %idxprom14 = sext i32 %20 to i64, !dbg !6094
  %21 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6094
  %section_pbuf = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %21, i32 0, i32 9, !dbg !6095
  %arrayidx15 = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf, i64 0, i64 %idxprom14, !dbg !6094
  call void @av_bprint_clear(%struct.AVBPrint* %arrayidx15), !dbg !6096
  %22 = load %struct.section*, %struct.section** %section, align 8, !dbg !6097
  %flags = getelementptr inbounds %struct.section, %struct.section* %22, i32 0, i32 2, !dbg !6099
  %23 = load i32, i32* %flags, align 8, !dbg !6099
  %and = and i32 %23, 2, !dbg !6100
  %tobool16 = icmp ne i32 %and, 0, !dbg !6100
  br i1 %tobool16, label %if.else, label %land.lhs.true, !dbg !6101

land.lhs.true:                                    ; preds = %cond.end
  %24 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !6102
  %tobool17 = icmp ne %struct.section* %24, null, !dbg !6102
  br i1 %tobool17, label %land.lhs.true18, label %if.else, !dbg !6104

land.lhs.true18:                                  ; preds = %land.lhs.true
  %25 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !6105
  %flags19 = getelementptr inbounds %struct.section, %struct.section* %25, i32 0, i32 2, !dbg !6106
  %26 = load i32, i32* %flags19, align 8, !dbg !6106
  %and20 = and i32 %26, 3, !dbg !6107
  %tobool21 = icmp ne i32 %and20, 0, !dbg !6107
  br i1 %tobool21, label %if.else, label %if.then, !dbg !6108

if.then:                                          ; preds = %land.lhs.true18
  %27 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6109
  %level22 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %27, i32 0, i32 6, !dbg !6111
  %28 = load i32, i32* %level22, align 4, !dbg !6111
  %idxprom23 = sext i32 %28 to i64, !dbg !6112
  %29 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6112
  %nested_section = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %29, i32 0, i32 7, !dbg !6113
  %arrayidx24 = getelementptr inbounds [10 x i32], [10 x i32]* %nested_section, i64 0, i64 %idxprom23, !dbg !6112
  store i32 1, i32* %arrayidx24, align 4, !dbg !6114
  %30 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6115
  %level25 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %30, i32 0, i32 6, !dbg !6116
  %31 = load i32, i32* %level25, align 4, !dbg !6116
  %sub26 = sub nsw i32 %31, 1, !dbg !6117
  %idxprom27 = sext i32 %sub26 to i64, !dbg !6118
  %32 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6118
  %has_nested_elems28 = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %32, i32 0, i32 8, !dbg !6119
  %arrayidx29 = getelementptr inbounds [10 x i32], [10 x i32]* %has_nested_elems28, i64 0, i64 %idxprom27, !dbg !6118
  store i32 1, i32* %arrayidx29, align 4, !dbg !6120
  %33 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6121
  %level30 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %33, i32 0, i32 6, !dbg !6122
  %34 = load i32, i32* %level30, align 4, !dbg !6122
  %idxprom31 = sext i32 %34 to i64, !dbg !6123
  %35 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6123
  %section_pbuf32 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %35, i32 0, i32 9, !dbg !6124
  %arrayidx33 = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf32, i64 0, i64 %idxprom31, !dbg !6123
  %36 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6125
  %level34 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %36, i32 0, i32 6, !dbg !6126
  %37 = load i32, i32* %level34, align 4, !dbg !6126
  %sub35 = sub nsw i32 %37, 1, !dbg !6127
  %idxprom36 = sext i32 %sub35 to i64, !dbg !6128
  %38 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6128
  %section_pbuf37 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %38, i32 0, i32 9, !dbg !6129
  %arrayidx38 = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf37, i64 0, i64 %idxprom36, !dbg !6128
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %arrayidx38, i32 0, i32 0, !dbg !6130
  %39 = load i8*, i8** %str, align 8, !dbg !6130
  %40 = load %struct.section*, %struct.section** %section, align 8, !dbg !6131
  %element_name = getelementptr inbounds %struct.section, %struct.section* %40, i32 0, i32 4, !dbg !6132
  %41 = load i8*, i8** %element_name, align 8, !dbg !6132
  %42 = load %struct.section*, %struct.section** %section, align 8, !dbg !6133
  %name = getelementptr inbounds %struct.section, %struct.section* %42, i32 0, i32 1, !dbg !6134
  %43 = load i8*, i8** %name, align 8, !dbg !6134
  %call = call i8* @av_x_if_null(i8* %41, i8* %43), !dbg !6135
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %arrayidx33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.189, i32 0, i32 0), i8* %39, i8* %call), !dbg !6136
  %44 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6137
  %level39 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %44, i32 0, i32 6, !dbg !6138
  %45 = load i32, i32* %level39, align 4, !dbg !6138
  %sub40 = sub nsw i32 %45, 1, !dbg !6139
  %idxprom41 = sext i32 %sub40 to i64, !dbg !6140
  %46 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6140
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %46, i32 0, i32 7, !dbg !6141
  %arrayidx42 = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom41, !dbg !6140
  %47 = load i32, i32* %arrayidx42, align 4, !dbg !6140
  %48 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6142
  %level43 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %48, i32 0, i32 6, !dbg !6143
  %49 = load i32, i32* %level43, align 4, !dbg !6143
  %idxprom44 = sext i32 %49 to i64, !dbg !6144
  %50 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6144
  %nb_item45 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %50, i32 0, i32 7, !dbg !6145
  %arrayidx46 = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item45, i64 0, i64 %idxprom44, !dbg !6144
  store i32 %47, i32* %arrayidx46, align 4, !dbg !6146
  br label %if.end75, !dbg !6147

if.else:                                          ; preds = %land.lhs.true18, %land.lhs.true, %cond.end
  %51 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !6148
  %tobool47 = icmp ne %struct.section* %51, null, !dbg !6148
  br i1 %tobool47, label %land.lhs.true48, label %if.end, !dbg !6151

land.lhs.true48:                                  ; preds = %if.else
  %52 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6152
  %level49 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %52, i32 0, i32 6, !dbg !6154
  %53 = load i32, i32* %level49, align 4, !dbg !6154
  %sub50 = sub nsw i32 %53, 1, !dbg !6155
  %idxprom51 = sext i32 %sub50 to i64, !dbg !6156
  %54 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6156
  %has_nested_elems52 = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %54, i32 0, i32 8, !dbg !6157
  %arrayidx53 = getelementptr inbounds [10 x i32], [10 x i32]* %has_nested_elems52, i64 0, i64 %idxprom51, !dbg !6156
  %55 = load i32, i32* %arrayidx53, align 4, !dbg !6156
  %tobool54 = icmp ne i32 %55, 0, !dbg !6156
  br i1 %tobool54, label %land.lhs.true55, label %if.end, !dbg !6158

land.lhs.true55:                                  ; preds = %land.lhs.true48
  %56 = load %struct.section*, %struct.section** %section, align 8, !dbg !6159
  %flags56 = getelementptr inbounds %struct.section, %struct.section* %56, i32 0, i32 2, !dbg !6160
  %57 = load i32, i32* %flags56, align 8, !dbg !6160
  %and57 = and i32 %57, 2, !dbg !6161
  %tobool58 = icmp ne i32 %and57, 0, !dbg !6161
  br i1 %tobool58, label %if.then59, label %if.end, !dbg !6162

if.then59:                                        ; preds = %land.lhs.true55
  %58 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6164
  %level60 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %58, i32 0, i32 6, !dbg !6166
  %59 = load i32, i32* %level60, align 4, !dbg !6166
  %sub61 = sub nsw i32 %59, 1, !dbg !6167
  %idxprom62 = sext i32 %sub61 to i64, !dbg !6168
  %60 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6168
  %terminate_line63 = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %60, i32 0, i32 9, !dbg !6169
  %arrayidx64 = getelementptr inbounds [10 x i32], [10 x i32]* %terminate_line63, i64 0, i64 %idxprom62, !dbg !6168
  store i32 0, i32* %arrayidx64, align 4, !dbg !6170
  %call65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !6171
  br label %if.end, !dbg !6172

if.end:                                           ; preds = %if.then59, %land.lhs.true55, %land.lhs.true48, %if.else
  %61 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6173
  %print_section = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %61, i32 0, i32 4, !dbg !6175
  %62 = load i32, i32* %print_section, align 8, !dbg !6175
  %tobool66 = icmp ne i32 %62, 0, !dbg !6173
  br i1 %tobool66, label %land.lhs.true67, label %if.end74, !dbg !6176

land.lhs.true67:                                  ; preds = %if.end
  %63 = load %struct.section*, %struct.section** %section, align 8, !dbg !6177
  %flags68 = getelementptr inbounds %struct.section, %struct.section* %63, i32 0, i32 2, !dbg !6178
  %64 = load i32, i32* %flags68, align 8, !dbg !6178
  %and69 = and i32 %64, 3, !dbg !6179
  %tobool70 = icmp ne i32 %and69, 0, !dbg !6179
  br i1 %tobool70, label %if.end74, label %if.then71, !dbg !6180

if.then71:                                        ; preds = %land.lhs.true67
  %65 = load %struct.section*, %struct.section** %section, align 8, !dbg !6182
  %name72 = getelementptr inbounds %struct.section, %struct.section* %65, i32 0, i32 1, !dbg !6183
  %66 = load i8*, i8** %name72, align 8, !dbg !6183
  %67 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6184
  %item_sep = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %67, i32 0, i32 2, !dbg !6185
  %68 = load i8, i8* %item_sep, align 8, !dbg !6185
  %conv = sext i8 %68 to i32, !dbg !6184
  %call73 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.217, i32 0, i32 0), i8* %66, i32 %conv), !dbg !6186
  br label %if.end74, !dbg !6186

if.end74:                                         ; preds = %if.then71, %land.lhs.true67, %if.end
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then
  ret void, !dbg !6187
}

; Function Attrs: nounwind uwtable
define internal void @compact_print_section_footer(%struct.WriterContext* %wctx) #0 !dbg !6188 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %compact = alloca %struct.CompactContext*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6189, metadata !2571), !dbg !6190
  call void @llvm.dbg.declare(metadata %struct.CompactContext** %compact, metadata !6191, metadata !2571), !dbg !6192
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6193
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !6194
  %1 = load i8*, i8** %priv, align 8, !dbg !6194
  %2 = bitcast i8* %1 to %struct.CompactContext*, !dbg !6193
  store %struct.CompactContext* %2, %struct.CompactContext** %compact, align 8, !dbg !6192
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6195
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !6197
  %4 = load i32, i32* %level, align 4, !dbg !6197
  %idxprom = sext i32 %4 to i64, !dbg !6198
  %5 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6198
  %nested_section = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %5, i32 0, i32 7, !dbg !6199
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %nested_section, i64 0, i64 %idxprom, !dbg !6198
  %6 = load i32, i32* %arrayidx, align 4, !dbg !6198
  %tobool = icmp ne i32 %6, 0, !dbg !6198
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6200

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6201
  %level1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 6, !dbg !6202
  %8 = load i32, i32* %level1, align 4, !dbg !6202
  %idxprom2 = sext i32 %8 to i64, !dbg !6203
  %9 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6203
  %terminate_line = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %9, i32 0, i32 9, !dbg !6204
  %arrayidx3 = getelementptr inbounds [10 x i32], [10 x i32]* %terminate_line, i64 0, i64 %idxprom2, !dbg !6203
  %10 = load i32, i32* %arrayidx3, align 4, !dbg !6203
  %tobool4 = icmp ne i32 %10, 0, !dbg !6203
  br i1 %tobool4, label %land.lhs.true5, label %if.end, !dbg !6205

land.lhs.true5:                                   ; preds = %land.lhs.true
  %11 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6206
  %level6 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %11, i32 0, i32 6, !dbg !6207
  %12 = load i32, i32* %level6, align 4, !dbg !6207
  %idxprom7 = sext i32 %12 to i64, !dbg !6208
  %13 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6208
  %section = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %13, i32 0, i32 8, !dbg !6209
  %arrayidx8 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section, i64 0, i64 %idxprom7, !dbg !6208
  %14 = load %struct.section*, %struct.section** %arrayidx8, align 8, !dbg !6208
  %flags = getelementptr inbounds %struct.section, %struct.section* %14, i32 0, i32 2, !dbg !6210
  %15 = load i32, i32* %flags, align 8, !dbg !6210
  %and = and i32 %15, 3, !dbg !6211
  %tobool9 = icmp ne i32 %and, 0, !dbg !6211
  br i1 %tobool9, label %if.end, label %if.then, !dbg !6212

if.then:                                          ; preds = %land.lhs.true5
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !6214
  br label %if.end, !dbg !6214

if.end:                                           ; preds = %if.then, %land.lhs.true5, %land.lhs.true, %entry
  ret void, !dbg !6215
}

; Function Attrs: nounwind uwtable
define internal void @compact_print_int(%struct.WriterContext* %wctx, i8* %key, i64 %value) #0 !dbg !6216 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i64, align 8
  %compact = alloca %struct.CompactContext*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6217, metadata !2571), !dbg !6218
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !6219, metadata !2571), !dbg !6220
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !6221, metadata !2571), !dbg !6222
  call void @llvm.dbg.declare(metadata %struct.CompactContext** %compact, metadata !6223, metadata !2571), !dbg !6224
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6225
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !6226
  %1 = load i8*, i8** %priv, align 8, !dbg !6226
  %2 = bitcast i8* %1 to %struct.CompactContext*, !dbg !6225
  store %struct.CompactContext* %2, %struct.CompactContext** %compact, align 8, !dbg !6224
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6227
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !6229
  %4 = load i32, i32* %level, align 4, !dbg !6229
  %idxprom = sext i32 %4 to i64, !dbg !6230
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6230
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 7, !dbg !6231
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom, !dbg !6230
  %6 = load i32, i32* %arrayidx, align 4, !dbg !6230
  %tobool = icmp ne i32 %6, 0, !dbg !6230
  br i1 %tobool, label %if.then, label %if.end, !dbg !6232

if.then:                                          ; preds = %entry
  %7 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6233
  %item_sep = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %7, i32 0, i32 2, !dbg !6235
  %8 = load i8, i8* %item_sep, align 8, !dbg !6235
  %conv = sext i8 %8 to i32, !dbg !6233
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.218, i32 0, i32 0), i32 %conv), !dbg !6236
  br label %if.end, !dbg !6236

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6237
  %nokey = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %9, i32 0, i32 3, !dbg !6239
  %10 = load i32, i32* %nokey, align 4, !dbg !6239
  %tobool1 = icmp ne i32 %10, 0, !dbg !6237
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !6240

if.then2:                                         ; preds = %if.end
  %11 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6241
  %level3 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %11, i32 0, i32 6, !dbg !6242
  %12 = load i32, i32* %level3, align 4, !dbg !6242
  %idxprom4 = sext i32 %12 to i64, !dbg !6243
  %13 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6243
  %section_pbuf = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %13, i32 0, i32 9, !dbg !6244
  %arrayidx5 = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf, i64 0, i64 %idxprom4, !dbg !6243
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %arrayidx5, i32 0, i32 0, !dbg !6245
  %14 = load i8*, i8** %str, align 8, !dbg !6245
  %15 = load i8*, i8** %key.addr, align 8, !dbg !6246
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.192, i32 0, i32 0), i8* %14, i8* %15), !dbg !6247
  br label %if.end7, !dbg !6247

if.end7:                                          ; preds = %if.then2, %if.end
  %16 = load i64, i64* %value.addr, align 8, !dbg !6248
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.219, i32 0, i32 0), i64 %16), !dbg !6249
  ret void, !dbg !6250
}

; Function Attrs: nounwind uwtable
define internal void @compact_print_str(%struct.WriterContext* %wctx, i8* %key, i8* %value) #0 !dbg !6251 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %compact = alloca %struct.CompactContext*, align 8
  %buf = alloca %struct.AVBPrint, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6252, metadata !2571), !dbg !6253
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !6254, metadata !2571), !dbg !6255
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !6256, metadata !2571), !dbg !6257
  call void @llvm.dbg.declare(metadata %struct.CompactContext** %compact, metadata !6258, metadata !2571), !dbg !6259
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6260
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !6261
  %1 = load i8*, i8** %priv, align 8, !dbg !6261
  %2 = bitcast i8* %1 to %struct.CompactContext*, !dbg !6260
  store %struct.CompactContext* %2, %struct.CompactContext** %compact, align 8, !dbg !6259
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %buf, metadata !6262, metadata !2571), !dbg !6263
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6264
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !6266
  %4 = load i32, i32* %level, align 4, !dbg !6266
  %idxprom = sext i32 %4 to i64, !dbg !6267
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6267
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 7, !dbg !6268
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom, !dbg !6267
  %6 = load i32, i32* %arrayidx, align 4, !dbg !6267
  %tobool = icmp ne i32 %6, 0, !dbg !6267
  br i1 %tobool, label %if.then, label %if.end, !dbg !6269

if.then:                                          ; preds = %entry
  %7 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6270
  %item_sep = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %7, i32 0, i32 2, !dbg !6272
  %8 = load i8, i8* %item_sep, align 8, !dbg !6272
  %conv = sext i8 %8 to i32, !dbg !6270
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.218, i32 0, i32 0), i32 %conv), !dbg !6273
  br label %if.end, !dbg !6273

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6274
  %nokey = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %9, i32 0, i32 3, !dbg !6276
  %10 = load i32, i32* %nokey, align 4, !dbg !6276
  %tobool1 = icmp ne i32 %10, 0, !dbg !6274
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !6277

if.then2:                                         ; preds = %if.end
  %11 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6278
  %level3 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %11, i32 0, i32 6, !dbg !6279
  %12 = load i32, i32* %level3, align 4, !dbg !6279
  %idxprom4 = sext i32 %12 to i64, !dbg !6280
  %13 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6280
  %section_pbuf = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %13, i32 0, i32 9, !dbg !6281
  %arrayidx5 = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf, i64 0, i64 %idxprom4, !dbg !6280
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %arrayidx5, i32 0, i32 0, !dbg !6282
  %14 = load i8*, i8** %str, align 8, !dbg !6282
  %15 = load i8*, i8** %key.addr, align 8, !dbg !6283
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.192, i32 0, i32 0), i8* %14, i8* %15), !dbg !6284
  br label %if.end7, !dbg !6284

if.end7:                                          ; preds = %if.then2, %if.end
  call void @av_bprint_init(%struct.AVBPrint* %buf, i32 1, i32 -1), !dbg !6285
  %16 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6286
  %escape_str = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %16, i32 0, i32 6, !dbg !6287
  %17 = load i8* (%struct.AVBPrint*, i8*, i8, i8*)*, i8* (%struct.AVBPrint*, i8*, i8, i8*)** %escape_str, align 8, !dbg !6287
  %18 = load i8*, i8** %value.addr, align 8, !dbg !6288
  %19 = load %struct.CompactContext*, %struct.CompactContext** %compact, align 8, !dbg !6289
  %item_sep8 = getelementptr inbounds %struct.CompactContext, %struct.CompactContext* %19, i32 0, i32 2, !dbg !6290
  %20 = load i8, i8* %item_sep8, align 8, !dbg !6290
  %21 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6291
  %22 = bitcast %struct.WriterContext* %21 to i8*, !dbg !6291
  %call9 = call i8* %17(%struct.AVBPrint* %buf, i8* %18, i8 signext %20, i8* %22), !dbg !6286
  %call10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* %call9), !dbg !6292
  %call11 = call i32 @av_bprint_finalize(%struct.AVBPrint* %buf, i8** null), !dbg !6294
  ret void, !dbg !6295
}

; Function Attrs: nounwind uwtable
define internal i8* @compact_get_name(i8* %ctx) #0 !dbg !6296 {
entry:
  %ctx.addr = alloca i8*, align 8
  store i8* %ctx, i8** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ctx.addr, metadata !6297, metadata !2571), !dbg !6298
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.195, i32 0, i32 0), !dbg !6299
}

; Function Attrs: nounwind uwtable
define internal i8* @none_escape_str(%struct.AVBPrint* %dst, i8* %src, i8 signext %sep, i8* %log_ctx) #0 !dbg !6300 {
entry:
  %dst.addr = alloca %struct.AVBPrint*, align 8
  %src.addr = alloca i8*, align 8
  %sep.addr = alloca i8, align 1
  %log_ctx.addr = alloca i8*, align 8
  store %struct.AVBPrint* %dst, %struct.AVBPrint** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %dst.addr, metadata !6301, metadata !2571), !dbg !6302
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6303, metadata !2571), !dbg !6304
  store i8 %sep, i8* %sep.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sep.addr, metadata !6305, metadata !2571), !dbg !6306
  store i8* %log_ctx, i8** %log_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %log_ctx.addr, metadata !6307, metadata !2571), !dbg !6308
  %0 = load i8*, i8** %src.addr, align 8, !dbg !6309
  ret i8* %0, !dbg !6310
}

; Function Attrs: nounwind uwtable
define internal i8* @c_escape_str(%struct.AVBPrint* %dst, i8* %src, i8 signext %sep, i8* %log_ctx) #0 !dbg !6311 {
entry:
  %dst.addr = alloca %struct.AVBPrint*, align 8
  %src.addr = alloca i8*, align 8
  %sep.addr = alloca i8, align 1
  %log_ctx.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store %struct.AVBPrint* %dst, %struct.AVBPrint** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %dst.addr, metadata !6312, metadata !2571), !dbg !6313
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6314, metadata !2571), !dbg !6315
  store i8 %sep, i8* %sep.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sep.addr, metadata !6316, metadata !2571), !dbg !6317
  store i8* %log_ctx, i8** %log_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %log_ctx.addr, metadata !6318, metadata !2571), !dbg !6319
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6320, metadata !2571), !dbg !6321
  %0 = load i8*, i8** %src.addr, align 8, !dbg !6322
  store i8* %0, i8** %p, align 8, !dbg !6324
  br label %for.cond, !dbg !6325

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %p, align 8, !dbg !6326
  %2 = load i8, i8* %1, align 1, !dbg !6329
  %tobool = icmp ne i8 %2, 0, !dbg !6330
  br i1 %tobool, label %for.body, label %for.end, !dbg !6330

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %p, align 8, !dbg !6331
  %4 = load i8, i8* %3, align 1, !dbg !6333
  %conv = sext i8 %4 to i32, !dbg !6333
  switch i32 %conv, label %sw.default [
    i32 8, label %sw.bb
    i32 12, label %sw.bb1
    i32 10, label %sw.bb2
    i32 13, label %sw.bb3
    i32 92, label %sw.bb4
  ], !dbg !6334

sw.bb:                                            ; preds = %for.body
  %5 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6335
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.212, i32 0, i32 0)), !dbg !6337
  br label %sw.epilog, !dbg !6338

sw.bb1:                                           ; preds = %for.body
  %6 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6339
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0)), !dbg !6340
  br label %sw.epilog, !dbg !6341

sw.bb2:                                           ; preds = %for.body
  %7 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6342
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.214, i32 0, i32 0)), !dbg !6343
  br label %sw.epilog, !dbg !6344

sw.bb3:                                           ; preds = %for.body
  %8 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6345
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.215, i32 0, i32 0)), !dbg !6346
  br label %sw.epilog, !dbg !6347

sw.bb4:                                           ; preds = %for.body
  %9 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6348
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.216, i32 0, i32 0)), !dbg !6349
  br label %sw.epilog, !dbg !6350

sw.default:                                       ; preds = %for.body
  %10 = load i8*, i8** %p, align 8, !dbg !6351
  %11 = load i8, i8* %10, align 1, !dbg !6353
  %conv5 = sext i8 %11 to i32, !dbg !6353
  %12 = load i8, i8* %sep.addr, align 1, !dbg !6354
  %conv6 = sext i8 %12 to i32, !dbg !6354
  %cmp = icmp eq i32 %conv5, %conv6, !dbg !6355
  br i1 %cmp, label %if.then, label %if.end, !dbg !6356

if.then:                                          ; preds = %sw.default
  %13 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6357
  call void @av_bprint_chars(%struct.AVBPrint* %13, i8 signext 92, i32 1), !dbg !6358
  br label %if.end, !dbg !6358

if.end:                                           ; preds = %if.then, %sw.default
  %14 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6359
  %15 = load i8*, i8** %p, align 8, !dbg !6360
  %16 = load i8, i8* %15, align 1, !dbg !6361
  call void @av_bprint_chars(%struct.AVBPrint* %14, i8 signext %16, i32 1), !dbg !6362
  br label %sw.epilog, !dbg !6363

sw.epilog:                                        ; preds = %if.end, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  br label %for.inc, !dbg !6364

for.inc:                                          ; preds = %sw.epilog
  %17 = load i8*, i8** %p, align 8, !dbg !6365
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6365
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !6365
  br label %for.cond, !dbg !6367, !llvm.loop !6368

for.end:                                          ; preds = %for.cond
  %18 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6370
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %18, i32 0, i32 0, !dbg !6371
  %19 = load i8*, i8** %str, align 8, !dbg !6371
  ret i8* %19, !dbg !6372
}

; Function Attrs: nounwind uwtable
define internal i8* @csv_escape_str(%struct.AVBPrint* %dst, i8* %src, i8 signext %sep, i8* %log_ctx) #0 !dbg !6373 {
entry:
  %dst.addr = alloca %struct.AVBPrint*, align 8
  %src.addr = alloca i8*, align 8
  %sep.addr = alloca i8, align 1
  %log_ctx.addr = alloca i8*, align 8
  %meta_chars = alloca [5 x i8], align 1
  %needs_quoting = alloca i32, align 4
  store %struct.AVBPrint* %dst, %struct.AVBPrint** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %dst.addr, metadata !6374, metadata !2571), !dbg !6375
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6376, metadata !2571), !dbg !6377
  store i8 %sep, i8* %sep.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sep.addr, metadata !6378, metadata !2571), !dbg !6379
  store i8* %log_ctx, i8** %log_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %log_ctx.addr, metadata !6380, metadata !2571), !dbg !6381
  call void @llvm.dbg.declare(metadata [5 x i8]* %meta_chars, metadata !6382, metadata !2571), !dbg !6384
  %arrayinit.begin = getelementptr inbounds [5 x i8], [5 x i8]* %meta_chars, i64 0, i64 0, !dbg !6385
  %0 = load i8, i8* %sep.addr, align 1, !dbg !6386
  store i8 %0, i8* %arrayinit.begin, align 1, !dbg !6385
  %arrayinit.element = getelementptr inbounds i8, i8* %arrayinit.begin, i64 1, !dbg !6385
  store i8 34, i8* %arrayinit.element, align 1, !dbg !6385
  %arrayinit.element1 = getelementptr inbounds i8, i8* %arrayinit.element, i64 1, !dbg !6385
  store i8 10, i8* %arrayinit.element1, align 1, !dbg !6385
  %arrayinit.element2 = getelementptr inbounds i8, i8* %arrayinit.element1, i64 1, !dbg !6385
  store i8 13, i8* %arrayinit.element2, align 1, !dbg !6385
  %arrayinit.element3 = getelementptr inbounds i8, i8* %arrayinit.element2, i64 1, !dbg !6385
  store i8 0, i8* %arrayinit.element3, align 1, !dbg !6385
  call void @llvm.dbg.declare(metadata i32* %needs_quoting, metadata !6387, metadata !2571), !dbg !6388
  %1 = load i8*, i8** %src.addr, align 8, !dbg !6389
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %meta_chars, i32 0, i32 0, !dbg !6390
  %call = call i64 @strcspn(i8* %1, i8* %arraydecay) #14, !dbg !6391
  %2 = load i8*, i8** %src.addr, align 8, !dbg !6392
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %call, !dbg !6392
  %3 = load i8, i8* %arrayidx, align 1, !dbg !6392
  %tobool = icmp ne i8 %3, 0, !dbg !6393
  %lnot = xor i1 %tobool, true, !dbg !6393
  %lnot4 = xor i1 %lnot, true, !dbg !6394
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !6394
  store i32 %lnot.ext, i32* %needs_quoting, align 4, !dbg !6388
  %4 = load i32, i32* %needs_quoting, align 4, !dbg !6395
  %tobool5 = icmp ne i32 %4, 0, !dbg !6395
  br i1 %tobool5, label %if.then, label %if.end, !dbg !6397

if.then:                                          ; preds = %entry
  %5 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6398
  call void @av_bprint_chars(%struct.AVBPrint* %5, i8 signext 34, i32 1), !dbg !6399
  br label %if.end, !dbg !6399

if.end:                                           ; preds = %if.then, %entry
  br label %for.cond, !dbg !6400

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i8*, i8** %src.addr, align 8, !dbg !6401
  %7 = load i8, i8* %6, align 1, !dbg !6405
  %tobool6 = icmp ne i8 %7, 0, !dbg !6406
  br i1 %tobool6, label %for.body, label %for.end, !dbg !6406

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %src.addr, align 8, !dbg !6407
  %9 = load i8, i8* %8, align 1, !dbg !6410
  %conv = sext i8 %9 to i32, !dbg !6410
  %cmp = icmp eq i32 %conv, 34, !dbg !6411
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !6412

if.then8:                                         ; preds = %for.body
  %10 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6413
  call void @av_bprint_chars(%struct.AVBPrint* %10, i8 signext 34, i32 1), !dbg !6414
  br label %if.end9, !dbg !6414

if.end9:                                          ; preds = %if.then8, %for.body
  %11 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6415
  %12 = load i8*, i8** %src.addr, align 8, !dbg !6416
  %13 = load i8, i8* %12, align 1, !dbg !6417
  call void @av_bprint_chars(%struct.AVBPrint* %11, i8 signext %13, i32 1), !dbg !6418
  br label %for.inc, !dbg !6419

for.inc:                                          ; preds = %if.end9
  %14 = load i8*, i8** %src.addr, align 8, !dbg !6420
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6420
  store i8* %incdec.ptr, i8** %src.addr, align 8, !dbg !6420
  br label %for.cond, !dbg !6422, !llvm.loop !6423

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* %needs_quoting, align 4, !dbg !6424
  %tobool10 = icmp ne i32 %15, 0, !dbg !6424
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !6426

if.then11:                                        ; preds = %for.end
  %16 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6427
  call void @av_bprint_chars(%struct.AVBPrint* %16, i8 signext 34, i32 1), !dbg !6428
  br label %if.end12, !dbg !6428

if.end12:                                         ; preds = %if.then11, %for.end
  %17 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6429
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %17, i32 0, i32 0, !dbg !6430
  %18 = load i8*, i8** %str, align 8, !dbg !6430
  ret i8* %18, !dbg !6431
}

declare void @av_bprint_chars(%struct.AVBPrint*, i8 signext, i32) #2

; Function Attrs: nounwind readonly
declare i64 @strcspn(i8*, i8*) #5

declare void @av_bprint_init(%struct.AVBPrint*, i32, i32) #2

declare i32 @av_bprint_finalize(%struct.AVBPrint*, i8**) #2

; Function Attrs: nounwind uwtable
define internal i8* @csv_get_name(i8* %ctx) #0 !dbg !6432 {
entry:
  %ctx.addr = alloca i8*, align 8
  store i8* %ctx, i8** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ctx.addr, metadata !6433, metadata !2571), !dbg !6434
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.210, i32 0, i32 0), !dbg !6435
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @flat_init(%struct.WriterContext* %wctx) #11 !dbg !6436 {
entry:
  %retval = alloca i32, align 4
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %flat = alloca %struct.FlatContext*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6437, metadata !2571), !dbg !6438
  call void @llvm.dbg.declare(metadata %struct.FlatContext** %flat, metadata !6439, metadata !2571), !dbg !6448
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6449
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !6450
  %1 = load i8*, i8** %priv, align 8, !dbg !6450
  %2 = bitcast i8* %1 to %struct.FlatContext*, !dbg !6449
  store %struct.FlatContext* %2, %struct.FlatContext** %flat, align 8, !dbg !6448
  %3 = load %struct.FlatContext*, %struct.FlatContext** %flat, align 8, !dbg !6451
  %sep_str = getelementptr inbounds %struct.FlatContext, %struct.FlatContext* %3, i32 0, i32 1, !dbg !6453
  %4 = load i8*, i8** %sep_str, align 8, !dbg !6453
  %call = call i64 @strlen(i8* %4) #14, !dbg !6454
  %cmp = icmp ne i64 %call, 1, !dbg !6455
  br i1 %cmp, label %if.then, label %if.end, !dbg !6456

if.then:                                          ; preds = %entry
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6457
  %6 = bitcast %struct.WriterContext* %5 to i8*, !dbg !6457
  %7 = load %struct.FlatContext*, %struct.FlatContext** %flat, align 8, !dbg !6459
  %sep_str1 = getelementptr inbounds %struct.FlatContext, %struct.FlatContext* %7, i32 0, i32 1, !dbg !6460
  %8 = load i8*, i8** %sep_str1, align 8, !dbg !6460
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.208, i32 0, i32 0), i8* %8), !dbg !6461
  store i32 -22, i32* %retval, align 4, !dbg !6462
  br label %return, !dbg !6462

if.end:                                           ; preds = %entry
  %9 = load %struct.FlatContext*, %struct.FlatContext** %flat, align 8, !dbg !6463
  %sep_str2 = getelementptr inbounds %struct.FlatContext, %struct.FlatContext* %9, i32 0, i32 1, !dbg !6464
  %10 = load i8*, i8** %sep_str2, align 8, !dbg !6464
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 0, !dbg !6463
  %11 = load i8, i8* %arrayidx, align 1, !dbg !6463
  %12 = load %struct.FlatContext*, %struct.FlatContext** %flat, align 8, !dbg !6465
  %sep = getelementptr inbounds %struct.FlatContext, %struct.FlatContext* %12, i32 0, i32 2, !dbg !6466
  store i8 %11, i8* %sep, align 8, !dbg !6467
  store i32 0, i32* %retval, align 4, !dbg !6468
  br label %return, !dbg !6468

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !6469
  ret i32 %13, !dbg !6469
}

; Function Attrs: nounwind uwtable
define internal void @flat_print_section_header(%struct.WriterContext* %wctx) #0 !dbg !6470 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %flat = alloca %struct.FlatContext*, align 8
  %buf = alloca %struct.AVBPrint*, align 8
  %section = alloca %struct.section*, align 8
  %parent_section = alloca %struct.section*, align 8
  %n = alloca i32, align 4
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6471, metadata !2571), !dbg !6472
  call void @llvm.dbg.declare(metadata %struct.FlatContext** %flat, metadata !6473, metadata !2571), !dbg !6474
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6475
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !6476
  %1 = load i8*, i8** %priv, align 8, !dbg !6476
  %2 = bitcast i8* %1 to %struct.FlatContext*, !dbg !6475
  store %struct.FlatContext* %2, %struct.FlatContext** %flat, align 8, !dbg !6474
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %buf, metadata !6477, metadata !2571), !dbg !6478
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6479
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !6480
  %4 = load i32, i32* %level, align 4, !dbg !6480
  %idxprom = sext i32 %4 to i64, !dbg !6481
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6481
  %section_pbuf = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 9, !dbg !6482
  %arrayidx = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf, i64 0, i64 %idxprom, !dbg !6481
  store %struct.AVBPrint* %arrayidx, %struct.AVBPrint** %buf, align 8, !dbg !6478
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !6483, metadata !2571), !dbg !6484
  %6 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6485
  %level1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %6, i32 0, i32 6, !dbg !6486
  %7 = load i32, i32* %level1, align 4, !dbg !6486
  %idxprom2 = sext i32 %7 to i64, !dbg !6487
  %8 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6487
  %section3 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %8, i32 0, i32 8, !dbg !6488
  %arrayidx4 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section3, i64 0, i64 %idxprom2, !dbg !6487
  %9 = load %struct.section*, %struct.section** %arrayidx4, align 8, !dbg !6487
  store %struct.section* %9, %struct.section** %section, align 8, !dbg !6484
  call void @llvm.dbg.declare(metadata %struct.section** %parent_section, metadata !6489, metadata !2571), !dbg !6490
  %10 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6491
  %level5 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %10, i32 0, i32 6, !dbg !6492
  %11 = load i32, i32* %level5, align 4, !dbg !6492
  %tobool = icmp ne i32 %11, 0, !dbg !6491
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6491

cond.true:                                        ; preds = %entry
  %12 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6493
  %level6 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %12, i32 0, i32 6, !dbg !6494
  %13 = load i32, i32* %level6, align 4, !dbg !6494
  %sub = sub nsw i32 %13, 1, !dbg !6495
  %idxprom7 = sext i32 %sub to i64, !dbg !6496
  %14 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6496
  %section8 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %14, i32 0, i32 8, !dbg !6497
  %arrayidx9 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section8, i64 0, i64 %idxprom7, !dbg !6496
  %15 = load %struct.section*, %struct.section** %arrayidx9, align 8, !dbg !6496
  br label %cond.end, !dbg !6498

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6500

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.section* [ %15, %cond.true ], [ null, %cond.false ], !dbg !6502
  store %struct.section* %cond, %struct.section** %parent_section, align 8, !dbg !6504
  %16 = load %struct.AVBPrint*, %struct.AVBPrint** %buf, align 8, !dbg !6505
  call void @av_bprint_clear(%struct.AVBPrint* %16), !dbg !6506
  %17 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !6507
  %tobool10 = icmp ne %struct.section* %17, null, !dbg !6507
  br i1 %tobool10, label %if.end, label %if.then, !dbg !6509

if.then:                                          ; preds = %cond.end
  br label %if.end37, !dbg !6510

if.end:                                           ; preds = %cond.end
  %18 = load %struct.AVBPrint*, %struct.AVBPrint** %buf, align 8, !dbg !6511
  %19 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6512
  %level11 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %19, i32 0, i32 6, !dbg !6513
  %20 = load i32, i32* %level11, align 4, !dbg !6513
  %sub12 = sub nsw i32 %20, 1, !dbg !6514
  %idxprom13 = sext i32 %sub12 to i64, !dbg !6515
  %21 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6515
  %section_pbuf14 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %21, i32 0, i32 9, !dbg !6516
  %arrayidx15 = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf14, i64 0, i64 %idxprom13, !dbg !6515
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %arrayidx15, i32 0, i32 0, !dbg !6517
  %22 = load i8*, i8** %str, align 8, !dbg !6517
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* %22), !dbg !6518
  %23 = load %struct.FlatContext*, %struct.FlatContext** %flat, align 8, !dbg !6519
  %hierarchical = getelementptr inbounds %struct.FlatContext, %struct.FlatContext* %23, i32 0, i32 3, !dbg !6521
  %24 = load i32, i32* %hierarchical, align 4, !dbg !6521
  %tobool16 = icmp ne i32 %24, 0, !dbg !6519
  br i1 %tobool16, label %if.then18, label %lor.lhs.false, !dbg !6522

lor.lhs.false:                                    ; preds = %if.end
  %25 = load %struct.section*, %struct.section** %section, align 8, !dbg !6523
  %flags = getelementptr inbounds %struct.section, %struct.section* %25, i32 0, i32 2, !dbg !6524
  %26 = load i32, i32* %flags, align 8, !dbg !6524
  %and = and i32 %26, 3, !dbg !6525
  %tobool17 = icmp ne i32 %and, 0, !dbg !6525
  br i1 %tobool17, label %if.end37, label %if.then18, !dbg !6526

if.then18:                                        ; preds = %lor.lhs.false, %if.end
  %27 = load %struct.AVBPrint*, %struct.AVBPrint** %buf, align 8, !dbg !6527
  %28 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6529
  %level19 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %28, i32 0, i32 6, !dbg !6530
  %29 = load i32, i32* %level19, align 4, !dbg !6530
  %idxprom20 = sext i32 %29 to i64, !dbg !6531
  %30 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6531
  %section21 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %30, i32 0, i32 8, !dbg !6532
  %arrayidx22 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section21, i64 0, i64 %idxprom20, !dbg !6531
  %31 = load %struct.section*, %struct.section** %arrayidx22, align 8, !dbg !6531
  %name = getelementptr inbounds %struct.section, %struct.section* %31, i32 0, i32 1, !dbg !6533
  %32 = load i8*, i8** %name, align 8, !dbg !6533
  %33 = load %struct.FlatContext*, %struct.FlatContext** %flat, align 8, !dbg !6534
  %sep_str = getelementptr inbounds %struct.FlatContext, %struct.FlatContext* %33, i32 0, i32 1, !dbg !6535
  %34 = load i8*, i8** %sep_str, align 8, !dbg !6535
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.229, i32 0, i32 0), i8* %32, i8* %34), !dbg !6536
  %35 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !6537
  %flags23 = getelementptr inbounds %struct.section, %struct.section* %35, i32 0, i32 2, !dbg !6539
  %36 = load i32, i32* %flags23, align 8, !dbg !6539
  %and24 = and i32 %36, 2, !dbg !6540
  %tobool25 = icmp ne i32 %and24, 0, !dbg !6540
  br i1 %tobool25, label %if.then26, label %if.end36, !dbg !6541

if.then26:                                        ; preds = %if.then18
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6542, metadata !2571), !dbg !6544
  %37 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !6545
  %id = getelementptr inbounds %struct.section, %struct.section* %37, i32 0, i32 0, !dbg !6546
  %38 = load i32, i32* %id, align 8, !dbg !6546
  %cmp = icmp eq i32 %38, 18, !dbg !6547
  br i1 %cmp, label %cond.true27, label %cond.false28, !dbg !6545

cond.true27:                                      ; preds = %if.then26
  %39 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6548
  %nb_section_packet_frame = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %39, i32 0, i32 12, !dbg !6549
  %40 = load i32, i32* %nb_section_packet_frame, align 8, !dbg !6549
  br label %cond.end33, !dbg !6550

cond.false28:                                     ; preds = %if.then26
  %41 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6552
  %level29 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %41, i32 0, i32 6, !dbg !6553
  %42 = load i32, i32* %level29, align 4, !dbg !6553
  %sub30 = sub nsw i32 %42, 1, !dbg !6554
  %idxprom31 = sext i32 %sub30 to i64, !dbg !6555
  %43 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6555
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %43, i32 0, i32 7, !dbg !6556
  %arrayidx32 = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom31, !dbg !6555
  %44 = load i32, i32* %arrayidx32, align 4, !dbg !6555
  br label %cond.end33, !dbg !6557

cond.end33:                                       ; preds = %cond.false28, %cond.true27
  %cond34 = phi i32 [ %40, %cond.true27 ], [ %44, %cond.false28 ], !dbg !6559
  store i32 %cond34, i32* %n, align 4, !dbg !6561
  %45 = load %struct.AVBPrint*, %struct.AVBPrint** %buf, align 8, !dbg !6562
  %46 = load i32, i32* %n, align 4, !dbg !6563
  %47 = load %struct.FlatContext*, %struct.FlatContext** %flat, align 8, !dbg !6564
  %sep_str35 = getelementptr inbounds %struct.FlatContext, %struct.FlatContext* %47, i32 0, i32 1, !dbg !6565
  %48 = load i8*, i8** %sep_str35, align 8, !dbg !6565
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.230, i32 0, i32 0), i32 %46, i8* %48), !dbg !6566
  br label %if.end36, !dbg !6567

if.end36:                                         ; preds = %cond.end33, %if.then18
  br label %if.end37, !dbg !6568

if.end37:                                         ; preds = %if.then, %if.end36, %lor.lhs.false
  ret void, !dbg !6569
}

; Function Attrs: nounwind uwtable
define internal void @flat_print_int(%struct.WriterContext* %wctx, i8* %key, i64 %value) #0 !dbg !6570 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i64, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6571, metadata !2571), !dbg !6572
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !6573, metadata !2571), !dbg !6574
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !6575, metadata !2571), !dbg !6576
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6577
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 6, !dbg !6578
  %1 = load i32, i32* %level, align 4, !dbg !6578
  %idxprom = sext i32 %1 to i64, !dbg !6579
  %2 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6579
  %section_pbuf = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %2, i32 0, i32 9, !dbg !6580
  %arrayidx = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf, i64 0, i64 %idxprom, !dbg !6579
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %arrayidx, i32 0, i32 0, !dbg !6581
  %3 = load i8*, i8** %str, align 8, !dbg !6581
  %4 = load i8*, i8** %key.addr, align 8, !dbg !6582
  %5 = load i64, i64* %value.addr, align 8, !dbg !6583
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.231, i32 0, i32 0), i8* %3, i8* %4, i64 %5), !dbg !6584
  ret void, !dbg !6585
}

; Function Attrs: nounwind uwtable
define internal void @flat_print_str(%struct.WriterContext* %wctx, i8* %key, i8* %value) #0 !dbg !6586 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %flat = alloca %struct.FlatContext*, align 8
  %buf = alloca %struct.AVBPrint, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6587, metadata !2571), !dbg !6588
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !6589, metadata !2571), !dbg !6590
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !6591, metadata !2571), !dbg !6592
  call void @llvm.dbg.declare(metadata %struct.FlatContext** %flat, metadata !6593, metadata !2571), !dbg !6594
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6595
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !6596
  %1 = load i8*, i8** %priv, align 8, !dbg !6596
  %2 = bitcast i8* %1 to %struct.FlatContext*, !dbg !6595
  store %struct.FlatContext* %2, %struct.FlatContext** %flat, align 8, !dbg !6594
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %buf, metadata !6597, metadata !2571), !dbg !6598
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6599
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !6600
  %4 = load i32, i32* %level, align 4, !dbg !6600
  %idxprom = sext i32 %4 to i64, !dbg !6601
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6601
  %section_pbuf = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 9, !dbg !6602
  %arrayidx = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf, i64 0, i64 %idxprom, !dbg !6601
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %arrayidx, i32 0, i32 0, !dbg !6603
  %6 = load i8*, i8** %str, align 8, !dbg !6603
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* %6), !dbg !6604
  call void @av_bprint_init(%struct.AVBPrint* %buf, i32 1, i32 -1), !dbg !6605
  %7 = load i8*, i8** %key.addr, align 8, !dbg !6606
  %8 = load %struct.FlatContext*, %struct.FlatContext** %flat, align 8, !dbg !6607
  %sep = getelementptr inbounds %struct.FlatContext, %struct.FlatContext* %8, i32 0, i32 2, !dbg !6608
  %9 = load i8, i8* %sep, align 8, !dbg !6608
  %call1 = call i8* @flat_escape_key_str(%struct.AVBPrint* %buf, i8* %7, i8 signext %9), !dbg !6609
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.232, i32 0, i32 0), i8* %call1), !dbg !6610
  call void @av_bprint_clear(%struct.AVBPrint* %buf), !dbg !6612
  %10 = load i8*, i8** %value.addr, align 8, !dbg !6613
  %call3 = call i8* @flat_escape_value_str(%struct.AVBPrint* %buf, i8* %10), !dbg !6614
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.233, i32 0, i32 0), i8* %call3), !dbg !6615
  %call5 = call i32 @av_bprint_finalize(%struct.AVBPrint* %buf, i8** null), !dbg !6616
  ret void, !dbg !6617
}

; Function Attrs: nounwind uwtable
define internal i8* @flat_get_name(i8* %ctx) #0 !dbg !6618 {
entry:
  %ctx.addr = alloca i8*, align 8
  store i8* %ctx, i8** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ctx.addr, metadata !6619, metadata !2571), !dbg !6620
  ret i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.222, i32 0, i32 0), !dbg !6621
}

; Function Attrs: nounwind uwtable
define internal i8* @flat_escape_key_str(%struct.AVBPrint* %dst, i8* %src, i8 signext %sep) #0 !dbg !6622 {
entry:
  %dst.addr = alloca %struct.AVBPrint*, align 8
  %src.addr = alloca i8*, align 8
  %sep.addr = alloca i8, align 1
  %p = alloca i8*, align 8
  store %struct.AVBPrint* %dst, %struct.AVBPrint** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %dst.addr, metadata !6625, metadata !2571), !dbg !6626
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6627, metadata !2571), !dbg !6628
  store i8 %sep, i8* %sep.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sep.addr, metadata !6629, metadata !2571), !dbg !6630
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6631, metadata !2571), !dbg !6632
  %0 = load i8*, i8** %src.addr, align 8, !dbg !6633
  store i8* %0, i8** %p, align 8, !dbg !6635
  br label %for.cond, !dbg !6636

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %p, align 8, !dbg !6637
  %2 = load i8, i8* %1, align 1, !dbg !6640
  %tobool = icmp ne i8 %2, 0, !dbg !6641
  br i1 %tobool, label %for.body, label %for.end, !dbg !6641

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %p, align 8, !dbg !6642
  %4 = load i8, i8* %3, align 1, !dbg !6645
  %conv = sext i8 %4 to i32, !dbg !6645
  %cmp = icmp sge i32 %conv, 48, !dbg !6646
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !6647

land.lhs.true:                                    ; preds = %for.body
  %5 = load i8*, i8** %p, align 8, !dbg !6648
  %6 = load i8, i8* %5, align 1, !dbg !6650
  %conv2 = sext i8 %6 to i32, !dbg !6650
  %cmp3 = icmp sle i32 %conv2, 57, !dbg !6651
  br i1 %cmp3, label %if.else, label %lor.lhs.false, !dbg !6652

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body
  %7 = load i8*, i8** %p, align 8, !dbg !6653
  %8 = load i8, i8* %7, align 1, !dbg !6654
  %conv5 = sext i8 %8 to i32, !dbg !6654
  %cmp6 = icmp sge i32 %conv5, 97, !dbg !6655
  br i1 %cmp6, label %land.lhs.true8, label %lor.lhs.false12, !dbg !6656

land.lhs.true8:                                   ; preds = %lor.lhs.false
  %9 = load i8*, i8** %p, align 8, !dbg !6657
  %10 = load i8, i8* %9, align 1, !dbg !6658
  %conv9 = sext i8 %10 to i32, !dbg !6658
  %cmp10 = icmp sle i32 %conv9, 122, !dbg !6659
  br i1 %cmp10, label %if.else, label %lor.lhs.false12, !dbg !6660

lor.lhs.false12:                                  ; preds = %land.lhs.true8, %lor.lhs.false
  %11 = load i8*, i8** %p, align 8, !dbg !6661
  %12 = load i8, i8* %11, align 1, !dbg !6662
  %conv13 = sext i8 %12 to i32, !dbg !6662
  %cmp14 = icmp sge i32 %conv13, 65, !dbg !6663
  br i1 %cmp14, label %land.lhs.true16, label %if.then, !dbg !6664

land.lhs.true16:                                  ; preds = %lor.lhs.false12
  %13 = load i8*, i8** %p, align 8, !dbg !6665
  %14 = load i8, i8* %13, align 1, !dbg !6666
  %conv17 = sext i8 %14 to i32, !dbg !6666
  %cmp18 = icmp sle i32 %conv17, 90, !dbg !6667
  br i1 %cmp18, label %if.else, label %if.then, !dbg !6668

if.then:                                          ; preds = %land.lhs.true16, %lor.lhs.false12
  %15 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6670
  call void @av_bprint_chars(%struct.AVBPrint* %15, i8 signext 95, i32 1), !dbg !6671
  br label %if.end, !dbg !6671

if.else:                                          ; preds = %land.lhs.true16, %land.lhs.true8, %land.lhs.true
  %16 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6672
  %17 = load i8*, i8** %p, align 8, !dbg !6673
  %18 = load i8, i8* %17, align 1, !dbg !6674
  call void @av_bprint_chars(%struct.AVBPrint* %16, i8 signext %18, i32 1), !dbg !6675
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !6676

for.inc:                                          ; preds = %if.end
  %19 = load i8*, i8** %p, align 8, !dbg !6677
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6677
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !6677
  br label %for.cond, !dbg !6679, !llvm.loop !6680

for.end:                                          ; preds = %for.cond
  %20 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6682
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %20, i32 0, i32 0, !dbg !6683
  %21 = load i8*, i8** %str, align 8, !dbg !6683
  ret i8* %21, !dbg !6684
}

; Function Attrs: nounwind uwtable
define internal i8* @flat_escape_value_str(%struct.AVBPrint* %dst, i8* %src) #0 !dbg !6685 {
entry:
  %dst.addr = alloca %struct.AVBPrint*, align 8
  %src.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store %struct.AVBPrint* %dst, %struct.AVBPrint** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %dst.addr, metadata !6688, metadata !2571), !dbg !6689
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6690, metadata !2571), !dbg !6691
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6692, metadata !2571), !dbg !6693
  %0 = load i8*, i8** %src.addr, align 8, !dbg !6694
  store i8* %0, i8** %p, align 8, !dbg !6696
  br label %for.cond, !dbg !6697

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %p, align 8, !dbg !6698
  %2 = load i8, i8* %1, align 1, !dbg !6701
  %tobool = icmp ne i8 %2, 0, !dbg !6702
  br i1 %tobool, label %for.body, label %for.end, !dbg !6702

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %p, align 8, !dbg !6703
  %4 = load i8, i8* %3, align 1, !dbg !6705
  %conv = sext i8 %4 to i32, !dbg !6705
  switch i32 %conv, label %sw.default [
    i32 10, label %sw.bb
    i32 13, label %sw.bb1
    i32 92, label %sw.bb2
    i32 34, label %sw.bb3
    i32 96, label %sw.bb4
    i32 36, label %sw.bb5
  ], !dbg !6706

sw.bb:                                            ; preds = %for.body
  %5 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6707
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.214, i32 0, i32 0)), !dbg !6709
  br label %sw.epilog, !dbg !6710

sw.bb1:                                           ; preds = %for.body
  %6 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6711
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.215, i32 0, i32 0)), !dbg !6712
  br label %sw.epilog, !dbg !6713

sw.bb2:                                           ; preds = %for.body
  %7 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6714
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.216, i32 0, i32 0)), !dbg !6715
  br label %sw.epilog, !dbg !6716

sw.bb3:                                           ; preds = %for.body
  %8 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6717
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.234, i32 0, i32 0)), !dbg !6718
  br label %sw.epilog, !dbg !6719

sw.bb4:                                           ; preds = %for.body
  %9 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6720
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.235, i32 0, i32 0)), !dbg !6721
  br label %sw.epilog, !dbg !6722

sw.bb5:                                           ; preds = %for.body
  %10 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6723
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.236, i32 0, i32 0)), !dbg !6724
  br label %sw.epilog, !dbg !6725

sw.default:                                       ; preds = %for.body
  %11 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6726
  %12 = load i8*, i8** %p, align 8, !dbg !6727
  %13 = load i8, i8* %12, align 1, !dbg !6728
  call void @av_bprint_chars(%struct.AVBPrint* %11, i8 signext %13, i32 1), !dbg !6729
  br label %sw.epilog, !dbg !6730

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  br label %for.inc, !dbg !6731

for.inc:                                          ; preds = %sw.epilog
  %14 = load i8*, i8** %p, align 8, !dbg !6732
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6732
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !6732
  br label %for.cond, !dbg !6734, !llvm.loop !6735

for.end:                                          ; preds = %for.cond
  %15 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6737
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %15, i32 0, i32 0, !dbg !6738
  %16 = load i8*, i8** %str, align 8, !dbg !6738
  ret i8* %16, !dbg !6739
}

; Function Attrs: nounwind uwtable
define internal void @ini_print_section_header(%struct.WriterContext* %wctx) #0 !dbg !6740 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %ini = alloca %struct.INIContext*, align 8
  %buf = alloca %struct.AVBPrint*, align 8
  %section = alloca %struct.section*, align 8
  %parent_section = alloca %struct.section*, align 8
  %n = alloca i32, align 4
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6741, metadata !2571), !dbg !6742
  call void @llvm.dbg.declare(metadata %struct.INIContext** %ini, metadata !6743, metadata !2571), !dbg !6750
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6751
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !6752
  %1 = load i8*, i8** %priv, align 8, !dbg !6752
  %2 = bitcast i8* %1 to %struct.INIContext*, !dbg !6751
  store %struct.INIContext* %2, %struct.INIContext** %ini, align 8, !dbg !6750
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %buf, metadata !6753, metadata !2571), !dbg !6754
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6755
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !6756
  %4 = load i32, i32* %level, align 4, !dbg !6756
  %idxprom = sext i32 %4 to i64, !dbg !6757
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6757
  %section_pbuf = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 9, !dbg !6758
  %arrayidx = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf, i64 0, i64 %idxprom, !dbg !6757
  store %struct.AVBPrint* %arrayidx, %struct.AVBPrint** %buf, align 8, !dbg !6754
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !6759, metadata !2571), !dbg !6760
  %6 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6761
  %level1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %6, i32 0, i32 6, !dbg !6762
  %7 = load i32, i32* %level1, align 4, !dbg !6762
  %idxprom2 = sext i32 %7 to i64, !dbg !6763
  %8 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6763
  %section3 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %8, i32 0, i32 8, !dbg !6764
  %arrayidx4 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section3, i64 0, i64 %idxprom2, !dbg !6763
  %9 = load %struct.section*, %struct.section** %arrayidx4, align 8, !dbg !6763
  store %struct.section* %9, %struct.section** %section, align 8, !dbg !6760
  call void @llvm.dbg.declare(metadata %struct.section** %parent_section, metadata !6765, metadata !2571), !dbg !6766
  %10 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6767
  %level5 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %10, i32 0, i32 6, !dbg !6768
  %11 = load i32, i32* %level5, align 4, !dbg !6768
  %tobool = icmp ne i32 %11, 0, !dbg !6767
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6767

cond.true:                                        ; preds = %entry
  %12 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6769
  %level6 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %12, i32 0, i32 6, !dbg !6770
  %13 = load i32, i32* %level6, align 4, !dbg !6770
  %sub = sub nsw i32 %13, 1, !dbg !6771
  %idxprom7 = sext i32 %sub to i64, !dbg !6772
  %14 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6772
  %section8 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %14, i32 0, i32 8, !dbg !6773
  %arrayidx9 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section8, i64 0, i64 %idxprom7, !dbg !6772
  %15 = load %struct.section*, %struct.section** %arrayidx9, align 8, !dbg !6772
  br label %cond.end, !dbg !6774

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6776

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.section* [ %15, %cond.true ], [ null, %cond.false ], !dbg !6778
  store %struct.section* %cond, %struct.section** %parent_section, align 8, !dbg !6780
  %16 = load %struct.AVBPrint*, %struct.AVBPrint** %buf, align 8, !dbg !6781
  call void @av_bprint_clear(%struct.AVBPrint* %16), !dbg !6782
  %17 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !6783
  %tobool10 = icmp ne %struct.section* %17, null, !dbg !6783
  br i1 %tobool10, label %if.end, label %if.then, !dbg !6785

if.then:                                          ; preds = %cond.end
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.238, i32 0, i32 0)), !dbg !6786
  br label %if.end57, !dbg !6788

if.end:                                           ; preds = %cond.end
  %18 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6789
  %level11 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %18, i32 0, i32 6, !dbg !6791
  %19 = load i32, i32* %level11, align 4, !dbg !6791
  %sub12 = sub nsw i32 %19, 1, !dbg !6792
  %idxprom13 = sext i32 %sub12 to i64, !dbg !6793
  %20 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6793
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %20, i32 0, i32 7, !dbg !6794
  %arrayidx14 = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom13, !dbg !6793
  %21 = load i32, i32* %arrayidx14, align 4, !dbg !6793
  %tobool15 = icmp ne i32 %21, 0, !dbg !6793
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !6795

if.then16:                                        ; preds = %if.end
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !6796
  br label %if.end18, !dbg !6796

if.end18:                                         ; preds = %if.then16, %if.end
  %22 = load %struct.AVBPrint*, %struct.AVBPrint** %buf, align 8, !dbg !6797
  %23 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6798
  %level19 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %23, i32 0, i32 6, !dbg !6799
  %24 = load i32, i32* %level19, align 4, !dbg !6799
  %sub20 = sub nsw i32 %24, 1, !dbg !6800
  %idxprom21 = sext i32 %sub20 to i64, !dbg !6801
  %25 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6801
  %section_pbuf22 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %25, i32 0, i32 9, !dbg !6802
  %arrayidx23 = getelementptr inbounds [10 x %struct.AVBPrint], [10 x %struct.AVBPrint]* %section_pbuf22, i64 0, i64 %idxprom21, !dbg !6801
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %arrayidx23, i32 0, i32 0, !dbg !6803
  %26 = load i8*, i8** %str, align 8, !dbg !6803
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* %26), !dbg !6804
  %27 = load %struct.INIContext*, %struct.INIContext** %ini, align 8, !dbg !6805
  %hierarchical = getelementptr inbounds %struct.INIContext, %struct.INIContext* %27, i32 0, i32 1, !dbg !6807
  %28 = load i32, i32* %hierarchical, align 8, !dbg !6807
  %tobool24 = icmp ne i32 %28, 0, !dbg !6805
  br i1 %tobool24, label %if.then26, label %lor.lhs.false, !dbg !6808

lor.lhs.false:                                    ; preds = %if.end18
  %29 = load %struct.section*, %struct.section** %section, align 8, !dbg !6809
  %flags = getelementptr inbounds %struct.section, %struct.section* %29, i32 0, i32 2, !dbg !6810
  %30 = load i32, i32* %flags, align 8, !dbg !6810
  %and = and i32 %30, 3, !dbg !6811
  %tobool25 = icmp ne i32 %and, 0, !dbg !6811
  br i1 %tobool25, label %if.end50, label %if.then26, !dbg !6812

if.then26:                                        ; preds = %lor.lhs.false, %if.end18
  %31 = load %struct.AVBPrint*, %struct.AVBPrint** %buf, align 8, !dbg !6813
  %32 = load %struct.AVBPrint*, %struct.AVBPrint** %buf, align 8, !dbg !6815
  %str27 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %32, i32 0, i32 0, !dbg !6816
  %33 = load i8*, i8** %str27, align 8, !dbg !6816
  %arrayidx28 = getelementptr inbounds i8, i8* %33, i64 0, !dbg !6815
  %34 = load i8, i8* %arrayidx28, align 1, !dbg !6815
  %conv = sext i8 %34 to i32, !dbg !6815
  %tobool29 = icmp ne i32 %conv, 0, !dbg !6815
  %cond30 = select i1 %tobool29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), !dbg !6815
  %35 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6817
  %level31 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %35, i32 0, i32 6, !dbg !6818
  %36 = load i32, i32* %level31, align 4, !dbg !6818
  %idxprom32 = sext i32 %36 to i64, !dbg !6819
  %37 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6819
  %section33 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %37, i32 0, i32 8, !dbg !6820
  %arrayidx34 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section33, i64 0, i64 %idxprom32, !dbg !6819
  %38 = load %struct.section*, %struct.section** %arrayidx34, align 8, !dbg !6819
  %name = getelementptr inbounds %struct.section, %struct.section* %38, i32 0, i32 1, !dbg !6821
  %39 = load i8*, i8** %name, align 8, !dbg !6821
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.229, i32 0, i32 0), i8* %cond30, i8* %39), !dbg !6822
  %40 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !6823
  %flags35 = getelementptr inbounds %struct.section, %struct.section* %40, i32 0, i32 2, !dbg !6825
  %41 = load i32, i32* %flags35, align 8, !dbg !6825
  %and36 = and i32 %41, 2, !dbg !6826
  %tobool37 = icmp ne i32 %and36, 0, !dbg !6826
  br i1 %tobool37, label %if.then38, label %if.end49, !dbg !6827

if.then38:                                        ; preds = %if.then26
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6828, metadata !2571), !dbg !6830
  %42 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !6831
  %id = getelementptr inbounds %struct.section, %struct.section* %42, i32 0, i32 0, !dbg !6832
  %43 = load i32, i32* %id, align 8, !dbg !6832
  %cmp = icmp eq i32 %43, 18, !dbg !6833
  br i1 %cmp, label %cond.true40, label %cond.false41, !dbg !6831

cond.true40:                                      ; preds = %if.then38
  %44 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6834
  %nb_section_packet_frame = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %44, i32 0, i32 12, !dbg !6835
  %45 = load i32, i32* %nb_section_packet_frame, align 8, !dbg !6835
  br label %cond.end47, !dbg !6836

cond.false41:                                     ; preds = %if.then38
  %46 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6838
  %level42 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %46, i32 0, i32 6, !dbg !6839
  %47 = load i32, i32* %level42, align 4, !dbg !6839
  %sub43 = sub nsw i32 %47, 1, !dbg !6840
  %idxprom44 = sext i32 %sub43 to i64, !dbg !6841
  %48 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6841
  %nb_item45 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %48, i32 0, i32 7, !dbg !6842
  %arrayidx46 = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item45, i64 0, i64 %idxprom44, !dbg !6841
  %49 = load i32, i32* %arrayidx46, align 4, !dbg !6841
  br label %cond.end47, !dbg !6843

cond.end47:                                       ; preds = %cond.false41, %cond.true40
  %cond48 = phi i32 [ %45, %cond.true40 ], [ %49, %cond.false41 ], !dbg !6845
  store i32 %cond48, i32* %n, align 4, !dbg !6847
  %50 = load %struct.AVBPrint*, %struct.AVBPrint** %buf, align 8, !dbg !6848
  %51 = load i32, i32* %n, align 4, !dbg !6849
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %50, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.239, i32 0, i32 0), i32 %51), !dbg !6850
  br label %if.end49, !dbg !6851

if.end49:                                         ; preds = %cond.end47, %if.then26
  br label %if.end50, !dbg !6852

if.end50:                                         ; preds = %if.end49, %lor.lhs.false
  %52 = load %struct.section*, %struct.section** %section, align 8, !dbg !6853
  %flags51 = getelementptr inbounds %struct.section, %struct.section* %52, i32 0, i32 2, !dbg !6855
  %53 = load i32, i32* %flags51, align 8, !dbg !6855
  %and52 = and i32 %53, 3, !dbg !6856
  %tobool53 = icmp ne i32 %and52, 0, !dbg !6856
  br i1 %tobool53, label %if.end57, label %if.then54, !dbg !6857

if.then54:                                        ; preds = %if.end50
  %54 = load %struct.AVBPrint*, %struct.AVBPrint** %buf, align 8, !dbg !6858
  %str55 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %54, i32 0, i32 0, !dbg !6859
  %55 = load i8*, i8** %str55, align 8, !dbg !6859
  %call56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.190, i32 0, i32 0), i8* %55), !dbg !6860
  br label %if.end57, !dbg !6860

if.end57:                                         ; preds = %if.then, %if.then54, %if.end50
  ret void, !dbg !6861
}

; Function Attrs: nounwind uwtable
define internal void @ini_print_int(%struct.WriterContext* %wctx, i8* %key, i64 %value) #0 !dbg !6862 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i64, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6863, metadata !2571), !dbg !6864
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !6865, metadata !2571), !dbg !6866
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !6867, metadata !2571), !dbg !6868
  %0 = load i8*, i8** %key.addr, align 8, !dbg !6869
  %1 = load i64, i64* %value.addr, align 8, !dbg !6870
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.240, i32 0, i32 0), i8* %0, i64 %1), !dbg !6871
  ret void, !dbg !6872
}

; Function Attrs: nounwind uwtable
define internal void @ini_print_str(%struct.WriterContext* %wctx, i8* %key, i8* %value) #0 !dbg !6873 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %buf = alloca %struct.AVBPrint, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6874, metadata !2571), !dbg !6875
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !6876, metadata !2571), !dbg !6877
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !6878, metadata !2571), !dbg !6879
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %buf, metadata !6880, metadata !2571), !dbg !6881
  call void @av_bprint_init(%struct.AVBPrint* %buf, i32 1, i32 -1), !dbg !6882
  %0 = load i8*, i8** %key.addr, align 8, !dbg !6883
  %call = call i8* @ini_escape_str(%struct.AVBPrint* %buf, i8* %0), !dbg !6884
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.232, i32 0, i32 0), i8* %call), !dbg !6885
  call void @av_bprint_clear(%struct.AVBPrint* %buf), !dbg !6887
  %1 = load i8*, i8** %value.addr, align 8, !dbg !6888
  %call2 = call i8* @ini_escape_str(%struct.AVBPrint* %buf, i8* %1), !dbg !6889
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.194, i32 0, i32 0), i8* %call2), !dbg !6890
  %call4 = call i32 @av_bprint_finalize(%struct.AVBPrint* %buf, i8** null), !dbg !6891
  ret void, !dbg !6892
}

; Function Attrs: nounwind uwtable
define internal i8* @ini_get_name(i8* %ctx) #0 !dbg !6893 {
entry:
  %ctx.addr = alloca i8*, align 8
  store i8* %ctx, i8** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ctx.addr, metadata !6894, metadata !2571), !dbg !6895
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.237, i32 0, i32 0), !dbg !6896
}

; Function Attrs: nounwind uwtable
define internal i8* @ini_escape_str(%struct.AVBPrint* %dst, i8* %src) #0 !dbg !6897 {
entry:
  %dst.addr = alloca %struct.AVBPrint*, align 8
  %src.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %c = alloca i8, align 1
  store %struct.AVBPrint* %dst, %struct.AVBPrint** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %dst.addr, metadata !6900, metadata !2571), !dbg !6901
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6902, metadata !2571), !dbg !6903
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6904, metadata !2571), !dbg !6905
  store i32 0, i32* %i, align 4, !dbg !6905
  call void @llvm.dbg.declare(metadata i8* %c, metadata !6906, metadata !2571), !dbg !6907
  store i8 0, i8* %c, align 1, !dbg !6907
  br label %while.cond, !dbg !6908

while.cond:                                       ; preds = %sw.epilog, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6909
  %inc = add nsw i32 %0, 1, !dbg !6909
  store i32 %inc, i32* %i, align 4, !dbg !6909
  %idxprom = sext i32 %0 to i64, !dbg !6911
  %1 = load i8*, i8** %src.addr, align 8, !dbg !6911
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom, !dbg !6911
  %2 = load i8, i8* %arrayidx, align 1, !dbg !6911
  store i8 %2, i8* %c, align 1, !dbg !6912
  %tobool = icmp ne i8 %2, 0, !dbg !6913
  br i1 %tobool, label %while.body, label %while.end, !dbg !6913

while.body:                                       ; preds = %while.cond
  %3 = load i8, i8* %c, align 1, !dbg !6914
  %conv = sext i8 %3 to i32, !dbg !6914
  switch i32 %conv, label %sw.default [
    i32 8, label %sw.bb
    i32 12, label %sw.bb1
    i32 10, label %sw.bb2
    i32 13, label %sw.bb3
    i32 9, label %sw.bb4
    i32 92, label %sw.bb5
    i32 35, label %sw.bb5
    i32 61, label %sw.bb5
    i32 58, label %sw.bb5
  ], !dbg !6916

sw.bb:                                            ; preds = %while.body
  %4 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6917
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.212, i32 0, i32 0)), !dbg !6919
  br label %sw.epilog, !dbg !6920

sw.bb1:                                           ; preds = %while.body
  %5 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6921
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.213, i32 0, i32 0)), !dbg !6922
  br label %sw.epilog, !dbg !6923

sw.bb2:                                           ; preds = %while.body
  %6 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6924
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.214, i32 0, i32 0)), !dbg !6925
  br label %sw.epilog, !dbg !6926

sw.bb3:                                           ; preds = %while.body
  %7 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6927
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.215, i32 0, i32 0)), !dbg !6928
  br label %sw.epilog, !dbg !6929

sw.bb4:                                           ; preds = %while.body
  %8 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6930
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.241, i32 0, i32 0)), !dbg !6931
  br label %sw.epilog, !dbg !6932

sw.bb5:                                           ; preds = %while.body, %while.body, %while.body, %while.body
  %9 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6933
  call void @av_bprint_chars(%struct.AVBPrint* %9, i8 signext 92, i32 1), !dbg !6934
  br label %sw.default, !dbg !6934

sw.default:                                       ; preds = %while.body, %sw.bb5
  %10 = load i8, i8* %c, align 1, !dbg !6935
  %conv6 = zext i8 %10 to i32, !dbg !6937
  %cmp = icmp slt i32 %conv6, 32, !dbg !6938
  br i1 %cmp, label %if.then, label %if.else, !dbg !6939

if.then:                                          ; preds = %sw.default
  %11 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6940
  %12 = load i8, i8* %c, align 1, !dbg !6941
  %conv8 = sext i8 %12 to i32, !dbg !6941
  %and = and i32 %conv8, 255, !dbg !6942
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.242, i32 0, i32 0), i32 %and), !dbg !6943
  br label %if.end, !dbg !6943

if.else:                                          ; preds = %sw.default
  %13 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6944
  %14 = load i8, i8* %c, align 1, !dbg !6945
  call void @av_bprint_chars(%struct.AVBPrint* %13, i8 signext %14, i32 1), !dbg !6946
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !6947

sw.epilog:                                        ; preds = %if.end, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  br label %while.cond, !dbg !6948, !llvm.loop !6950

while.end:                                        ; preds = %while.cond
  %15 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !6951
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %15, i32 0, i32 0, !dbg !6952
  %16 = load i8*, i8** %str, align 8, !dbg !6952
  ret i8* %16, !dbg !6953
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @json_init(%struct.WriterContext* %wctx) #11 !dbg !6954 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %json = alloca %struct.JSONContext*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6955, metadata !2571), !dbg !6956
  call void @llvm.dbg.declare(metadata %struct.JSONContext** %json, metadata !6957, metadata !2571), !dbg !6967
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6968
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !6969
  %1 = load i8*, i8** %priv, align 8, !dbg !6969
  %2 = bitcast i8* %1 to %struct.JSONContext*, !dbg !6968
  store %struct.JSONContext* %2, %struct.JSONContext** %json, align 8, !dbg !6967
  %3 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !6970
  %compact = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %3, i32 0, i32 2, !dbg !6971
  %4 = load i32, i32* %compact, align 4, !dbg !6971
  %tobool = icmp ne i32 %4, 0, !dbg !6970
  %cond = select i1 %tobool, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246, i32 0, i32 0), !dbg !6970
  %5 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !6972
  %item_sep = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %5, i32 0, i32 3, !dbg !6973
  store i8* %cond, i8** %item_sep, align 8, !dbg !6974
  %6 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !6975
  %compact1 = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %6, i32 0, i32 2, !dbg !6976
  %7 = load i32, i32* %compact1, align 4, !dbg !6976
  %tobool2 = icmp ne i32 %7, 0, !dbg !6975
  %cond3 = select i1 %tobool2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0), !dbg !6975
  %8 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !6977
  %item_start_end = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %8, i32 0, i32 4, !dbg !6978
  store i8* %cond3, i8** %item_start_end, align 8, !dbg !6979
  ret i32 0, !dbg !6980
}

; Function Attrs: nounwind uwtable
define internal void @json_print_section_header(%struct.WriterContext* %wctx) #0 !dbg !6981 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %json = alloca %struct.JSONContext*, align 8
  %buf = alloca %struct.AVBPrint, align 8
  %section = alloca %struct.section*, align 8
  %parent_section = alloca %struct.section*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !6982, metadata !2571), !dbg !6983
  call void @llvm.dbg.declare(metadata %struct.JSONContext** %json, metadata !6984, metadata !2571), !dbg !6985
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6986
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !6987
  %1 = load i8*, i8** %priv, align 8, !dbg !6987
  %2 = bitcast i8* %1 to %struct.JSONContext*, !dbg !6986
  store %struct.JSONContext* %2, %struct.JSONContext** %json, align 8, !dbg !6985
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %buf, metadata !6988, metadata !2571), !dbg !6989
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !6990, metadata !2571), !dbg !6991
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6992
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !6993
  %4 = load i32, i32* %level, align 4, !dbg !6993
  %idxprom = sext i32 %4 to i64, !dbg !6994
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6994
  %section1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 8, !dbg !6995
  %arrayidx = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section1, i64 0, i64 %idxprom, !dbg !6994
  %6 = load %struct.section*, %struct.section** %arrayidx, align 8, !dbg !6994
  store %struct.section* %6, %struct.section** %section, align 8, !dbg !6991
  call void @llvm.dbg.declare(metadata %struct.section** %parent_section, metadata !6996, metadata !2571), !dbg !6997
  %7 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !6998
  %level2 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 6, !dbg !6999
  %8 = load i32, i32* %level2, align 4, !dbg !6999
  %tobool = icmp ne i32 %8, 0, !dbg !6998
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6998

cond.true:                                        ; preds = %entry
  %9 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7000
  %level3 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %9, i32 0, i32 6, !dbg !7001
  %10 = load i32, i32* %level3, align 4, !dbg !7001
  %sub = sub nsw i32 %10, 1, !dbg !7002
  %idxprom4 = sext i32 %sub to i64, !dbg !7003
  %11 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7003
  %section5 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %11, i32 0, i32 8, !dbg !7004
  %arrayidx6 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section5, i64 0, i64 %idxprom4, !dbg !7003
  %12 = load %struct.section*, %struct.section** %arrayidx6, align 8, !dbg !7003
  br label %cond.end, !dbg !7005

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7007

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.section* [ %12, %cond.true ], [ null, %cond.false ], !dbg !7009
  store %struct.section* %cond, %struct.section** %parent_section, align 8, !dbg !7011
  %13 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7012
  %level7 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %13, i32 0, i32 6, !dbg !7014
  %14 = load i32, i32* %level7, align 4, !dbg !7014
  %tobool8 = icmp ne i32 %14, 0, !dbg !7012
  br i1 %tobool8, label %land.lhs.true, label %if.end, !dbg !7015

land.lhs.true:                                    ; preds = %cond.end
  %15 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7016
  %level9 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %15, i32 0, i32 6, !dbg !7018
  %16 = load i32, i32* %level9, align 4, !dbg !7018
  %sub10 = sub nsw i32 %16, 1, !dbg !7019
  %idxprom11 = sext i32 %sub10 to i64, !dbg !7020
  %17 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7020
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %17, i32 0, i32 7, !dbg !7021
  %arrayidx12 = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom11, !dbg !7020
  %18 = load i32, i32* %arrayidx12, align 4, !dbg !7020
  %tobool13 = icmp ne i32 %18, 0, !dbg !7020
  br i1 %tobool13, label %if.then, label %if.end, !dbg !7022

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246, i32 0, i32 0)), !dbg !7023
  br label %if.end, !dbg !7023

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  %19 = load %struct.section*, %struct.section** %section, align 8, !dbg !7024
  %flags = getelementptr inbounds %struct.section, %struct.section* %19, i32 0, i32 2, !dbg !7026
  %20 = load i32, i32* %flags, align 8, !dbg !7026
  %and = and i32 %20, 1, !dbg !7027
  %tobool14 = icmp ne i32 %and, 0, !dbg !7027
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !7028

if.then15:                                        ; preds = %if.end
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.248, i32 0, i32 0)), !dbg !7029
  %21 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7031
  %indent_level = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %21, i32 0, i32 1, !dbg !7032
  %22 = load i32, i32* %indent_level, align 8, !dbg !7033
  %inc = add nsw i32 %22, 1, !dbg !7033
  store i32 %inc, i32* %indent_level, align 8, !dbg !7033
  br label %if.end54, !dbg !7034

if.else:                                          ; preds = %if.end
  call void @av_bprint_init(%struct.AVBPrint* %buf, i32 1, i32 -1), !dbg !7035
  %23 = load %struct.section*, %struct.section** %section, align 8, !dbg !7037
  %name = getelementptr inbounds %struct.section, %struct.section* %23, i32 0, i32 1, !dbg !7038
  %24 = load i8*, i8** %name, align 8, !dbg !7038
  %25 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7039
  %26 = bitcast %struct.WriterContext* %25 to i8*, !dbg !7039
  %call17 = call i8* @json_escape_str(%struct.AVBPrint* %buf, i8* %24, i8* %26), !dbg !7040
  %27 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7041
  %indent_level18 = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %27, i32 0, i32 1, !dbg !7042
  %28 = load i32, i32* %indent_level18, align 8, !dbg !7042
  %mul = mul nsw i32 %28, 4, !dbg !7043
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249, i32 0, i32 0), i32 %mul, i32 32), !dbg !7044
  %29 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7045
  %indent_level20 = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %29, i32 0, i32 1, !dbg !7046
  %30 = load i32, i32* %indent_level20, align 8, !dbg !7047
  %inc21 = add nsw i32 %30, 1, !dbg !7047
  store i32 %inc21, i32* %indent_level20, align 8, !dbg !7047
  %31 = load %struct.section*, %struct.section** %section, align 8, !dbg !7048
  %flags22 = getelementptr inbounds %struct.section, %struct.section* %31, i32 0, i32 2, !dbg !7050
  %32 = load i32, i32* %flags22, align 8, !dbg !7050
  %and23 = and i32 %32, 2, !dbg !7051
  %tobool24 = icmp ne i32 %and23, 0, !dbg !7051
  br i1 %tobool24, label %if.then25, label %if.else27, !dbg !7052

if.then25:                                        ; preds = %if.else
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %buf, i32 0, i32 0, !dbg !7053
  %33 = load i8*, i8** %str, align 8, !dbg !7053
  %call26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.250, i32 0, i32 0), i8* %33), !dbg !7055
  br label %if.end52, !dbg !7056

if.else27:                                        ; preds = %if.else
  %34 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !7057
  %tobool28 = icmp ne %struct.section* %34, null, !dbg !7057
  br i1 %tobool28, label %land.lhs.true29, label %if.else36, !dbg !7060

land.lhs.true29:                                  ; preds = %if.else27
  %35 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !7061
  %flags30 = getelementptr inbounds %struct.section, %struct.section* %35, i32 0, i32 2, !dbg !7063
  %36 = load i32, i32* %flags30, align 8, !dbg !7063
  %and31 = and i32 %36, 2, !dbg !7064
  %tobool32 = icmp ne i32 %and31, 0, !dbg !7064
  br i1 %tobool32, label %if.else36, label %if.then33, !dbg !7065

if.then33:                                        ; preds = %land.lhs.true29
  %str34 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %buf, i32 0, i32 0, !dbg !7066
  %37 = load i8*, i8** %str34, align 8, !dbg !7066
  %38 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7068
  %item_start_end = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %38, i32 0, i32 4, !dbg !7069
  %39 = load i8*, i8** %item_start_end, align 8, !dbg !7069
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.251, i32 0, i32 0), i8* %37, i8* %39), !dbg !7070
  br label %if.end51, !dbg !7071

if.else36:                                        ; preds = %land.lhs.true29, %if.else27
  %40 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7072
  %item_start_end37 = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %40, i32 0, i32 4, !dbg !7074
  %41 = load i8*, i8** %item_start_end37, align 8, !dbg !7074
  %call38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.252, i32 0, i32 0), i8* %41), !dbg !7075
  %42 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !7076
  %tobool39 = icmp ne %struct.section* %42, null, !dbg !7076
  br i1 %tobool39, label %land.lhs.true40, label %if.end50, !dbg !7078

land.lhs.true40:                                  ; preds = %if.else36
  %43 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !7079
  %id = getelementptr inbounds %struct.section, %struct.section* %43, i32 0, i32 0, !dbg !7081
  %44 = load i32, i32* %id, align 8, !dbg !7081
  %cmp = icmp eq i32 %44, 18, !dbg !7082
  br i1 %cmp, label %if.then41, label %if.end50, !dbg !7083

if.then41:                                        ; preds = %land.lhs.true40
  %45 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7084
  %compact = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %45, i32 0, i32 2, !dbg !7087
  %46 = load i32, i32* %compact, align 4, !dbg !7087
  %tobool42 = icmp ne i32 %46, 0, !dbg !7084
  br i1 %tobool42, label %if.end47, label %if.then43, !dbg !7088

if.then43:                                        ; preds = %if.then41
  %47 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7089
  %indent_level44 = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %47, i32 0, i32 1, !dbg !7090
  %48 = load i32, i32* %indent_level44, align 8, !dbg !7090
  %mul45 = mul nsw i32 %48, 4, !dbg !7091
  %call46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249, i32 0, i32 0), i32 %mul45, i32 32), !dbg !7092
  br label %if.end47, !dbg !7092

if.end47:                                         ; preds = %if.then43, %if.then41
  %49 = load %struct.section*, %struct.section** %section, align 8, !dbg !7093
  %name48 = getelementptr inbounds %struct.section, %struct.section* %49, i32 0, i32 1, !dbg !7094
  %50 = load i8*, i8** %name48, align 8, !dbg !7094
  %51 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7095
  %item_sep = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %51, i32 0, i32 3, !dbg !7096
  %52 = load i8*, i8** %item_sep, align 8, !dbg !7096
  %call49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.253, i32 0, i32 0), i8* %50, i8* %52), !dbg !7097
  br label %if.end50, !dbg !7098

if.end50:                                         ; preds = %if.end47, %land.lhs.true40, %if.else36
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then33
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then25
  %call53 = call i32 @av_bprint_finalize(%struct.AVBPrint* %buf, i8** null), !dbg !7099
  br label %if.end54

if.end54:                                         ; preds = %if.end52, %if.then15
  ret void, !dbg !7100
}

; Function Attrs: nounwind uwtable
define internal void @json_print_section_footer(%struct.WriterContext* %wctx) #0 !dbg !7101 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %json = alloca %struct.JSONContext*, align 8
  %section = alloca %struct.section*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !7102, metadata !2571), !dbg !7103
  call void @llvm.dbg.declare(metadata %struct.JSONContext** %json, metadata !7104, metadata !2571), !dbg !7105
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7106
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !7107
  %1 = load i8*, i8** %priv, align 8, !dbg !7107
  %2 = bitcast i8* %1 to %struct.JSONContext*, !dbg !7106
  store %struct.JSONContext* %2, %struct.JSONContext** %json, align 8, !dbg !7105
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !7108, metadata !2571), !dbg !7109
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7110
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !7111
  %4 = load i32, i32* %level, align 4, !dbg !7111
  %idxprom = sext i32 %4 to i64, !dbg !7112
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7112
  %section1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 8, !dbg !7113
  %arrayidx = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section1, i64 0, i64 %idxprom, !dbg !7112
  %6 = load %struct.section*, %struct.section** %arrayidx, align 8, !dbg !7112
  store %struct.section* %6, %struct.section** %section, align 8, !dbg !7109
  %7 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7114
  %level2 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 6, !dbg !7116
  %8 = load i32, i32* %level2, align 4, !dbg !7116
  %cmp = icmp eq i32 %8, 0, !dbg !7117
  br i1 %cmp, label %if.then, label %if.else, !dbg !7118

if.then:                                          ; preds = %entry
  %9 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7119
  %indent_level = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %9, i32 0, i32 1, !dbg !7121
  %10 = load i32, i32* %indent_level, align 8, !dbg !7122
  %dec = add nsw i32 %10, -1, !dbg !7122
  store i32 %dec, i32* %indent_level, align 8, !dbg !7122
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.255, i32 0, i32 0)), !dbg !7123
  br label %if.end21, !dbg !7124

if.else:                                          ; preds = %entry
  %11 = load %struct.section*, %struct.section** %section, align 8, !dbg !7125
  %flags = getelementptr inbounds %struct.section, %struct.section* %11, i32 0, i32 2, !dbg !7128
  %12 = load i32, i32* %flags, align 8, !dbg !7128
  %and = and i32 %12, 2, !dbg !7129
  %tobool = icmp ne i32 %and, 0, !dbg !7129
  br i1 %tobool, label %if.then3, label %if.else10, !dbg !7125

if.then3:                                         ; preds = %if.else
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !7130
  %13 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7132
  %indent_level5 = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %13, i32 0, i32 1, !dbg !7133
  %14 = load i32, i32* %indent_level5, align 8, !dbg !7134
  %dec6 = add nsw i32 %14, -1, !dbg !7134
  store i32 %dec6, i32* %indent_level5, align 8, !dbg !7134
  %15 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7135
  %indent_level7 = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %15, i32 0, i32 1, !dbg !7136
  %16 = load i32, i32* %indent_level7, align 8, !dbg !7136
  %mul = mul nsw i32 %16, 4, !dbg !7137
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249, i32 0, i32 0), i32 %mul, i32 32), !dbg !7138
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.256, i32 0, i32 0)), !dbg !7139
  br label %if.end20, !dbg !7140

if.else10:                                        ; preds = %if.else
  %17 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7141
  %item_start_end = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %17, i32 0, i32 4, !dbg !7143
  %18 = load i8*, i8** %item_start_end, align 8, !dbg !7143
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* %18), !dbg !7144
  %19 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7145
  %indent_level12 = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %19, i32 0, i32 1, !dbg !7146
  %20 = load i32, i32* %indent_level12, align 8, !dbg !7147
  %dec13 = add nsw i32 %20, -1, !dbg !7147
  store i32 %dec13, i32* %indent_level12, align 8, !dbg !7147
  %21 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7148
  %compact = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %21, i32 0, i32 2, !dbg !7150
  %22 = load i32, i32* %compact, align 4, !dbg !7150
  %tobool14 = icmp ne i32 %22, 0, !dbg !7148
  br i1 %tobool14, label %if.end, label %if.then15, !dbg !7151

if.then15:                                        ; preds = %if.else10
  %23 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7152
  %indent_level16 = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %23, i32 0, i32 1, !dbg !7153
  %24 = load i32, i32* %indent_level16, align 8, !dbg !7153
  %mul17 = mul nsw i32 %24, 4, !dbg !7154
  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249, i32 0, i32 0), i32 %mul17, i32 32), !dbg !7155
  br label %if.end, !dbg !7155

if.end:                                           ; preds = %if.then15, %if.else10
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.257, i32 0, i32 0)), !dbg !7156
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then3
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then
  ret void, !dbg !7157
}

; Function Attrs: nounwind uwtable
define internal void @json_print_int(%struct.WriterContext* %wctx, i8* %key, i64 %value) #0 !dbg !7158 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i64, align 8
  %json = alloca %struct.JSONContext*, align 8
  %buf = alloca %struct.AVBPrint, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !7159, metadata !2571), !dbg !7160
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !7161, metadata !2571), !dbg !7162
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !7163, metadata !2571), !dbg !7164
  call void @llvm.dbg.declare(metadata %struct.JSONContext** %json, metadata !7165, metadata !2571), !dbg !7166
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7167
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !7168
  %1 = load i8*, i8** %priv, align 8, !dbg !7168
  %2 = bitcast i8* %1 to %struct.JSONContext*, !dbg !7167
  store %struct.JSONContext* %2, %struct.JSONContext** %json, align 8, !dbg !7166
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %buf, metadata !7169, metadata !2571), !dbg !7170
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7171
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !7173
  %4 = load i32, i32* %level, align 4, !dbg !7173
  %idxprom = sext i32 %4 to i64, !dbg !7174
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7174
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 7, !dbg !7175
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom, !dbg !7174
  %6 = load i32, i32* %arrayidx, align 4, !dbg !7174
  %tobool = icmp ne i32 %6, 0, !dbg !7174
  br i1 %tobool, label %if.then, label %if.end, !dbg !7176

if.then:                                          ; preds = %entry
  %7 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7177
  %item_sep = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %7, i32 0, i32 3, !dbg !7178
  %8 = load i8*, i8** %item_sep, align 8, !dbg !7178
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* %8), !dbg !7179
  br label %if.end, !dbg !7179

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7180
  %compact = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %9, i32 0, i32 2, !dbg !7182
  %10 = load i32, i32* %compact, align 4, !dbg !7182
  %tobool1 = icmp ne i32 %10, 0, !dbg !7180
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !7183

if.then2:                                         ; preds = %if.end
  %11 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7184
  %indent_level = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %11, i32 0, i32 1, !dbg !7185
  %12 = load i32, i32* %indent_level, align 8, !dbg !7185
  %mul = mul nsw i32 %12, 4, !dbg !7186
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249, i32 0, i32 0), i32 %mul, i32 32), !dbg !7187
  br label %if.end4, !dbg !7187

if.end4:                                          ; preds = %if.then2, %if.end
  call void @av_bprint_init(%struct.AVBPrint* %buf, i32 1, i32 -1), !dbg !7188
  %13 = load i8*, i8** %key.addr, align 8, !dbg !7189
  %14 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7190
  %15 = bitcast %struct.WriterContext* %14 to i8*, !dbg !7190
  %call5 = call i8* @json_escape_str(%struct.AVBPrint* %buf, i8* %13, i8* %15), !dbg !7191
  %16 = load i64, i64* %value.addr, align 8, !dbg !7192
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.258, i32 0, i32 0), i8* %call5, i64 %16), !dbg !7193
  %call7 = call i32 @av_bprint_finalize(%struct.AVBPrint* %buf, i8** null), !dbg !7195
  ret void, !dbg !7196
}

; Function Attrs: nounwind uwtable
define internal void @json_print_str(%struct.WriterContext* %wctx, i8* %key, i8* %value) #0 !dbg !7197 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %json = alloca %struct.JSONContext*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !7198, metadata !2571), !dbg !7199
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !7200, metadata !2571), !dbg !7201
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !7202, metadata !2571), !dbg !7203
  call void @llvm.dbg.declare(metadata %struct.JSONContext** %json, metadata !7204, metadata !2571), !dbg !7205
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7206
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !7207
  %1 = load i8*, i8** %priv, align 8, !dbg !7207
  %2 = bitcast i8* %1 to %struct.JSONContext*, !dbg !7206
  store %struct.JSONContext* %2, %struct.JSONContext** %json, align 8, !dbg !7205
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7208
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !7210
  %4 = load i32, i32* %level, align 4, !dbg !7210
  %idxprom = sext i32 %4 to i64, !dbg !7211
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7211
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 7, !dbg !7212
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom, !dbg !7211
  %6 = load i32, i32* %arrayidx, align 4, !dbg !7211
  %tobool = icmp ne i32 %6, 0, !dbg !7211
  br i1 %tobool, label %if.then, label %if.end, !dbg !7213

if.then:                                          ; preds = %entry
  %7 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7214
  %item_sep = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %7, i32 0, i32 3, !dbg !7215
  %8 = load i8*, i8** %item_sep, align 8, !dbg !7215
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* %8), !dbg !7216
  br label %if.end, !dbg !7216

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7217
  %compact = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %9, i32 0, i32 2, !dbg !7219
  %10 = load i32, i32* %compact, align 4, !dbg !7219
  %tobool1 = icmp ne i32 %10, 0, !dbg !7217
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !7220

if.then2:                                         ; preds = %if.end
  %11 = load %struct.JSONContext*, %struct.JSONContext** %json, align 8, !dbg !7221
  %indent_level = getelementptr inbounds %struct.JSONContext, %struct.JSONContext* %11, i32 0, i32 1, !dbg !7222
  %12 = load i32, i32* %indent_level, align 8, !dbg !7222
  %mul = mul nsw i32 %12, 4, !dbg !7223
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249, i32 0, i32 0), i32 %mul, i32 32), !dbg !7224
  br label %if.end4, !dbg !7224

if.end4:                                          ; preds = %if.then2, %if.end
  %13 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7225
  %14 = load i8*, i8** %key.addr, align 8, !dbg !7226
  %15 = load i8*, i8** %value.addr, align 8, !dbg !7227
  call void @json_print_item_str(%struct.WriterContext* %13, i8* %14, i8* %15), !dbg !7228
  ret void, !dbg !7229
}

; Function Attrs: nounwind uwtable
define internal i8* @json_get_name(i8* %ctx) #0 !dbg !7230 {
entry:
  %ctx.addr = alloca i8*, align 8
  store i8* %ctx, i8** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ctx.addr, metadata !7231, metadata !2571), !dbg !7232
  ret i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.243, i32 0, i32 0), !dbg !7233
}

; Function Attrs: nounwind uwtable
define internal i8* @json_escape_str(%struct.AVBPrint* %dst, i8* %src, i8* %log_ctx) #0 !dbg !2523 {
entry:
  %dst.addr = alloca %struct.AVBPrint*, align 8
  %src.addr = alloca i8*, align 8
  %log_ctx.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %s = alloca i8*, align 8
  store %struct.AVBPrint* %dst, %struct.AVBPrint** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %dst.addr, metadata !7234, metadata !2571), !dbg !7235
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !7236, metadata !2571), !dbg !7237
  store i8* %log_ctx, i8** %log_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %log_ctx.addr, metadata !7238, metadata !2571), !dbg !7239
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7240, metadata !2571), !dbg !7241
  %0 = load i8*, i8** %src.addr, align 8, !dbg !7242
  store i8* %0, i8** %p, align 8, !dbg !7244
  br label %for.cond, !dbg !7245

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %p, align 8, !dbg !7246
  %2 = load i8, i8* %1, align 1, !dbg !7249
  %tobool = icmp ne i8 %2, 0, !dbg !7250
  br i1 %tobool, label %for.body, label %for.end, !dbg !7250

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %s, metadata !7251, metadata !2571), !dbg !7253
  %3 = load i8*, i8** %p, align 8, !dbg !7254
  %4 = load i8, i8* %3, align 1, !dbg !7255
  %conv = sext i8 %4 to i32, !dbg !7255
  %call = call i8* @strchr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @json_escape_str.json_escape, i32 0, i32 0), i32 %conv) #14, !dbg !7256
  store i8* %call, i8** %s, align 8, !dbg !7253
  %5 = load i8*, i8** %s, align 8, !dbg !7257
  %tobool1 = icmp ne i8* %5, null, !dbg !7257
  br i1 %tobool1, label %if.then, label %if.else, !dbg !7259

if.then:                                          ; preds = %for.body
  %6 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !7260
  call void @av_bprint_chars(%struct.AVBPrint* %6, i8 signext 92, i32 1), !dbg !7262
  %7 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !7263
  %8 = load i8*, i8** %s, align 8, !dbg !7264
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !7265
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([8 x i8]* @json_escape_str.json_escape to i64), !dbg !7265
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* @json_escape_str.json_subst, i64 0, i64 %sub.ptr.sub, !dbg !7266
  %9 = load i8, i8* %arrayidx, align 1, !dbg !7266
  call void @av_bprint_chars(%struct.AVBPrint* %7, i8 signext %9, i32 1), !dbg !7267
  br label %if.end7, !dbg !7268

if.else:                                          ; preds = %for.body
  %10 = load i8*, i8** %p, align 8, !dbg !7269
  %11 = load i8, i8* %10, align 1, !dbg !7272
  %conv2 = zext i8 %11 to i32, !dbg !7273
  %cmp = icmp slt i32 %conv2, 32, !dbg !7274
  br i1 %cmp, label %if.then4, label %if.else6, !dbg !7273

if.then4:                                         ; preds = %if.else
  %12 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !7275
  %13 = load i8*, i8** %p, align 8, !dbg !7277
  %14 = load i8, i8* %13, align 1, !dbg !7278
  %conv5 = sext i8 %14 to i32, !dbg !7278
  %and = and i32 %conv5, 255, !dbg !7279
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.254, i32 0, i32 0), i32 %and), !dbg !7280
  br label %if.end, !dbg !7281

if.else6:                                         ; preds = %if.else
  %15 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !7282
  %16 = load i8*, i8** %p, align 8, !dbg !7284
  %17 = load i8, i8* %16, align 1, !dbg !7285
  call void @av_bprint_chars(%struct.AVBPrint* %15, i8 signext %17, i32 1), !dbg !7286
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then4
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !7287

for.inc:                                          ; preds = %if.end7
  %18 = load i8*, i8** %p, align 8, !dbg !7288
  %incdec.ptr = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7288
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !7288
  br label %for.cond, !dbg !7290, !llvm.loop !7291

for.end:                                          ; preds = %for.cond
  %19 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !7293
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %19, i32 0, i32 0, !dbg !7294
  %20 = load i8*, i8** %str, align 8, !dbg !7294
  ret i8* %20, !dbg !7295
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @json_print_item_str(%struct.WriterContext* %wctx, i8* %key, i8* %value) #4 !dbg !7296 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %buf = alloca %struct.AVBPrint, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !7297, metadata !2571), !dbg !7298
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !7299, metadata !2571), !dbg !7300
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !7301, metadata !2571), !dbg !7302
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %buf, metadata !7303, metadata !2571), !dbg !7304
  call void @av_bprint_init(%struct.AVBPrint* %buf, i32 1, i32 -1), !dbg !7305
  %0 = load i8*, i8** %key.addr, align 8, !dbg !7306
  %1 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7307
  %2 = bitcast %struct.WriterContext* %1 to i8*, !dbg !7307
  %call = call i8* @json_escape_str(%struct.AVBPrint* %buf, i8* %0, i8* %2), !dbg !7308
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.259, i32 0, i32 0), i8* %call), !dbg !7309
  call void @av_bprint_clear(%struct.AVBPrint* %buf), !dbg !7311
  %3 = load i8*, i8** %value.addr, align 8, !dbg !7312
  %4 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7313
  %5 = bitcast %struct.WriterContext* %4 to i8*, !dbg !7313
  %call2 = call i8* @json_escape_str(%struct.AVBPrint* %buf, i8* %3, i8* %5), !dbg !7314
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.260, i32 0, i32 0), i8* %call2), !dbg !7315
  %call4 = call i32 @av_bprint_finalize(%struct.AVBPrint* %buf, i8** null), !dbg !7316
  ret void, !dbg !7317
}

declare noalias i8* @av_mallocz(i64) #2

declare void @av_opt_set_defaults(i8*) #2

declare i32 @av_dict_parse_string(%struct.AVDictionary**, i8*, i8*, i8*, i32) #2

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) #2

declare i32 @av_opt_set(i8*, i8*, i8*, i32) #2

declare i32 @av_utf8_decode(i32*, i8**, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @bprint_bytes(%struct.AVBPrint* %bp, i8* %ubuf, i64 %ubuf_size) #0 !dbg !7318 {
entry:
  %bp.addr = alloca %struct.AVBPrint*, align 8
  %ubuf.addr = alloca i8*, align 8
  %ubuf_size.addr = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.AVBPrint* %bp, %struct.AVBPrint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %bp.addr, metadata !7321, metadata !2571), !dbg !7322
  store i8* %ubuf, i8** %ubuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ubuf.addr, metadata !7323, metadata !2571), !dbg !7324
  store i64 %ubuf_size, i64* %ubuf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ubuf_size.addr, metadata !7325, metadata !2571), !dbg !7326
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7327, metadata !2571), !dbg !7328
  %0 = load %struct.AVBPrint*, %struct.AVBPrint** %bp.addr, align 8, !dbg !7329
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.277, i32 0, i32 0)), !dbg !7330
  store i32 0, i32* %i, align 4, !dbg !7331
  br label %for.cond, !dbg !7333

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !7334
  %conv = sext i32 %1 to i64, !dbg !7334
  %2 = load i64, i64* %ubuf_size.addr, align 8, !dbg !7337
  %cmp = icmp ult i64 %conv, %2, !dbg !7338
  br i1 %cmp, label %for.body, label %for.end, !dbg !7339

for.body:                                         ; preds = %for.cond
  %3 = load %struct.AVBPrint*, %struct.AVBPrint** %bp.addr, align 8, !dbg !7340
  %4 = load i32, i32* %i, align 4, !dbg !7341
  %idxprom = sext i32 %4 to i64, !dbg !7342
  %5 = load i8*, i8** %ubuf.addr, align 8, !dbg !7342
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom, !dbg !7342
  %6 = load i8, i8* %arrayidx, align 1, !dbg !7342
  %conv2 = zext i8 %6 to i32, !dbg !7342
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.278, i32 0, i32 0), i32 %conv2), !dbg !7343
  br label %for.inc, !dbg !7343

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !7344
  %inc = add nsw i32 %7, 1, !dbg !7344
  store i32 %inc, i32* %i, align 4, !dbg !7344
  br label %for.cond, !dbg !7346, !llvm.loop !7347

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7349
}

; Function Attrs: nounwind uwtable
define internal i8* @writer_get_name(i8* %p) #0 !dbg !7350 {
entry:
  %p.addr = alloca i8*, align 8
  %wctx = alloca %struct.WriterContext*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7351, metadata !2571), !dbg !7352
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx, metadata !7353, metadata !2571), !dbg !7354
  %0 = load i8*, i8** %p.addr, align 8, !dbg !7355
  %1 = bitcast i8* %0 to %struct.WriterContext*, !dbg !7355
  store %struct.WriterContext* %1, %struct.WriterContext** %wctx, align 8, !dbg !7354
  %2 = load %struct.WriterContext*, %struct.WriterContext** %wctx, align 8, !dbg !7356
  %writer = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %2, i32 0, i32 1, !dbg !7357
  %3 = load %struct.Writer*, %struct.Writer** %writer, align 8, !dbg !7357
  %name = getelementptr inbounds %struct.Writer, %struct.Writer* %3, i32 0, i32 2, !dbg !7358
  %4 = load i8*, i8** %name, align 8, !dbg !7358
  ret i8* %4, !dbg !7359
}

; Function Attrs: nounwind uwtable
define internal i8* @writer_child_next(i8* %obj, i8* %prev) #0 !dbg !7360 {
entry:
  %retval = alloca i8*, align 8
  %obj.addr = alloca i8*, align 8
  %prev.addr = alloca i8*, align 8
  %ctx = alloca %struct.WriterContext*, align 8
  store i8* %obj, i8** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !7361, metadata !2571), !dbg !7362
  store i8* %prev, i8** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prev.addr, metadata !7363, metadata !2571), !dbg !7364
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %ctx, metadata !7365, metadata !2571), !dbg !7366
  %0 = load i8*, i8** %obj.addr, align 8, !dbg !7367
  %1 = bitcast i8* %0 to %struct.WriterContext*, !dbg !7367
  store %struct.WriterContext* %1, %struct.WriterContext** %ctx, align 8, !dbg !7366
  %2 = load i8*, i8** %prev.addr, align 8, !dbg !7368
  %tobool = icmp ne i8* %2, null, !dbg !7368
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7370

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.WriterContext*, %struct.WriterContext** %ctx, align 8, !dbg !7371
  %writer = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 1, !dbg !7373
  %4 = load %struct.Writer*, %struct.Writer** %writer, align 8, !dbg !7373
  %tobool1 = icmp ne %struct.Writer* %4, null, !dbg !7371
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !7374

land.lhs.true2:                                   ; preds = %land.lhs.true
  %5 = load %struct.WriterContext*, %struct.WriterContext** %ctx, align 8, !dbg !7375
  %writer3 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 1, !dbg !7377
  %6 = load %struct.Writer*, %struct.Writer** %writer3, align 8, !dbg !7377
  %priv_class = getelementptr inbounds %struct.Writer, %struct.Writer* %6, i32 0, i32 0, !dbg !7378
  %7 = load %struct.AVClass*, %struct.AVClass** %priv_class, align 8, !dbg !7378
  %tobool4 = icmp ne %struct.AVClass* %7, null, !dbg !7375
  br i1 %tobool4, label %land.lhs.true5, label %if.end, !dbg !7379

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %8 = load %struct.WriterContext*, %struct.WriterContext** %ctx, align 8, !dbg !7380
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %8, i32 0, i32 3, !dbg !7382
  %9 = load i8*, i8** %priv, align 8, !dbg !7382
  %tobool6 = icmp ne i8* %9, null, !dbg !7380
  br i1 %tobool6, label %if.then, label %if.end, !dbg !7383

if.then:                                          ; preds = %land.lhs.true5
  %10 = load %struct.WriterContext*, %struct.WriterContext** %ctx, align 8, !dbg !7384
  %priv7 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %10, i32 0, i32 3, !dbg !7385
  %11 = load i8*, i8** %priv7, align 8, !dbg !7385
  store i8* %11, i8** %retval, align 8, !dbg !7386
  br label %return, !dbg !7386

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true2, %land.lhs.true, %entry
  store i8* null, i8** %retval, align 8, !dbg !7387
  br label %return, !dbg !7387

return:                                           ; preds = %if.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !7388
  ret i8* %12, !dbg !7388
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @xml_init(%struct.WriterContext* %wctx) #11 !dbg !7389 {
entry:
  %retval = alloca i32, align 4
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %xml = alloca %struct.XMLContext*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !7390, metadata !2571), !dbg !7391
  call void @llvm.dbg.declare(metadata %struct.XMLContext** %xml, metadata !7392, metadata !2571), !dbg !7402
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7403
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !7404
  %1 = load i8*, i8** %priv, align 8, !dbg !7404
  %2 = bitcast i8* %1 to %struct.XMLContext*, !dbg !7403
  store %struct.XMLContext* %2, %struct.XMLContext** %xml, align 8, !dbg !7402
  %3 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7405
  %xsd_strict = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %3, i32 0, i32 4, !dbg !7407
  %4 = load i32, i32* %xsd_strict, align 4, !dbg !7407
  %tobool = icmp ne i32 %4, 0, !dbg !7405
  br i1 %tobool, label %if.then, label %if.end13, !dbg !7408

if.then:                                          ; preds = %entry
  %5 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7409
  %fully_qualified = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %5, i32 0, i32 3, !dbg !7411
  store i32 1, i32* %fully_qualified, align 8, !dbg !7412
  %6 = load i32, i32* @show_private_data, align 4, !dbg !7413
  %tobool1 = icmp ne i32 %6, 0, !dbg !7413
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7415

if.then2:                                         ; preds = %if.then
  %7 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7416
  %8 = bitcast %struct.WriterContext* %7 to i8*, !dbg !7416
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.330, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0)), !dbg !7419
  store i32 -22, i32* %retval, align 4, !dbg !7420
  br label %return, !dbg !7420

if.end:                                           ; preds = %if.then
  %9 = load i32, i32* @show_value_unit, align 4, !dbg !7421
  %tobool3 = icmp ne i32 %9, 0, !dbg !7421
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7423

if.then4:                                         ; preds = %if.end
  %10 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7424
  %11 = bitcast %struct.WriterContext* %10 to i8*, !dbg !7424
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.330, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0)), !dbg !7427
  store i32 -22, i32* %retval, align 4, !dbg !7428
  br label %return, !dbg !7428

if.end5:                                          ; preds = %if.end
  %12 = load i32, i32* @use_value_prefix, align 4, !dbg !7429
  %tobool6 = icmp ne i32 %12, 0, !dbg !7429
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7431

if.then7:                                         ; preds = %if.end5
  %13 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7432
  %14 = bitcast %struct.WriterContext* %13 to i8*, !dbg !7432
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.330, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i32 0, i32 0)), !dbg !7435
  store i32 -22, i32* %retval, align 4, !dbg !7436
  br label %return, !dbg !7436

if.end8:                                          ; preds = %if.end5
  %15 = load i32, i32* @do_show_frames, align 4, !dbg !7437
  %tobool9 = icmp ne i32 %15, 0, !dbg !7437
  br i1 %tobool9, label %land.lhs.true, label %if.end12, !dbg !7439

land.lhs.true:                                    ; preds = %if.end8
  %16 = load i32, i32* @do_show_packets, align 4, !dbg !7440
  %tobool10 = icmp ne i32 %16, 0, !dbg !7440
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !7442

if.then11:                                        ; preds = %land.lhs.true
  %17 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7443
  %18 = bitcast %struct.WriterContext* %17 to i8*, !dbg !7443
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.331, i32 0, i32 0)), !dbg !7445
  store i32 -22, i32* %retval, align 4, !dbg !7446
  br label %return, !dbg !7446

if.end12:                                         ; preds = %land.lhs.true, %if.end8
  br label %if.end13, !dbg !7447

if.end13:                                         ; preds = %if.end12, %entry
  store i32 0, i32* %retval, align 4, !dbg !7448
  br label %return, !dbg !7448

return:                                           ; preds = %if.end13, %if.then11, %if.then7, %if.then4, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !7449
  ret i32 %19, !dbg !7449
}

; Function Attrs: nounwind uwtable
define internal void @xml_print_section_header(%struct.WriterContext* %wctx) #0 !dbg !7450 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %xml = alloca %struct.XMLContext*, align 8
  %section = alloca %struct.section*, align 8
  %parent_section = alloca %struct.section*, align 8
  %qual = alloca i8*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !7451, metadata !2571), !dbg !7452
  call void @llvm.dbg.declare(metadata %struct.XMLContext** %xml, metadata !7453, metadata !2571), !dbg !7454
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7455
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !7456
  %1 = load i8*, i8** %priv, align 8, !dbg !7456
  %2 = bitcast i8* %1 to %struct.XMLContext*, !dbg !7455
  store %struct.XMLContext* %2, %struct.XMLContext** %xml, align 8, !dbg !7454
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !7457, metadata !2571), !dbg !7458
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7459
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !7460
  %4 = load i32, i32* %level, align 4, !dbg !7460
  %idxprom = sext i32 %4 to i64, !dbg !7461
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7461
  %section1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 8, !dbg !7462
  %arrayidx = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section1, i64 0, i64 %idxprom, !dbg !7461
  %6 = load %struct.section*, %struct.section** %arrayidx, align 8, !dbg !7461
  store %struct.section* %6, %struct.section** %section, align 8, !dbg !7458
  call void @llvm.dbg.declare(metadata %struct.section** %parent_section, metadata !7463, metadata !2571), !dbg !7464
  %7 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7465
  %level2 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 6, !dbg !7466
  %8 = load i32, i32* %level2, align 4, !dbg !7466
  %tobool = icmp ne i32 %8, 0, !dbg !7465
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7465

cond.true:                                        ; preds = %entry
  %9 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7467
  %level3 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %9, i32 0, i32 6, !dbg !7468
  %10 = load i32, i32* %level3, align 4, !dbg !7468
  %sub = sub nsw i32 %10, 1, !dbg !7469
  %idxprom4 = sext i32 %sub to i64, !dbg !7470
  %11 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7470
  %section5 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %11, i32 0, i32 8, !dbg !7471
  %arrayidx6 = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section5, i64 0, i64 %idxprom4, !dbg !7470
  %12 = load %struct.section*, %struct.section** %arrayidx6, align 8, !dbg !7470
  br label %cond.end, !dbg !7472

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7474

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.section* [ %12, %cond.true ], [ null, %cond.false ], !dbg !7476
  store %struct.section* %cond, %struct.section** %parent_section, align 8, !dbg !7478
  %13 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7479
  %level7 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %13, i32 0, i32 6, !dbg !7481
  %14 = load i32, i32* %level7, align 4, !dbg !7481
  %cmp = icmp eq i32 %14, 0, !dbg !7482
  br i1 %cmp, label %if.then, label %if.end, !dbg !7483

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8** %qual, metadata !7484, metadata !2571), !dbg !7486
  store i8* getelementptr inbounds ([178 x i8], [178 x i8]* @.str.332, i32 0, i32 0), i8** %qual, align 8, !dbg !7486
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.333, i32 0, i32 0)), !dbg !7487
  %15 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7488
  %fully_qualified = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %15, i32 0, i32 3, !dbg !7489
  %16 = load i32, i32* %fully_qualified, align 8, !dbg !7489
  %tobool8 = icmp ne i32 %16, 0, !dbg !7488
  %cond9 = select i1 %tobool8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.335, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), !dbg !7488
  %17 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7490
  %fully_qualified10 = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %17, i32 0, i32 3, !dbg !7491
  %18 = load i32, i32* %fully_qualified10, align 8, !dbg !7491
  %tobool11 = icmp ne i32 %18, 0, !dbg !7490
  br i1 %tobool11, label %cond.true12, label %cond.false13, !dbg !7490

cond.true12:                                      ; preds = %if.then
  %19 = load i8*, i8** %qual, align 8, !dbg !7492
  br label %cond.end14, !dbg !7494

cond.false13:                                     ; preds = %if.then
  br label %cond.end14, !dbg !7495

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i8* [ %19, %cond.true12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), %cond.false13 ], !dbg !7497
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.334, i32 0, i32 0), i8* %cond9, i8* %cond15), !dbg !7499
  br label %if.end57, !dbg !7500

if.end:                                           ; preds = %cond.end
  %20 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7501
  %within_tag = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %20, i32 0, i32 1, !dbg !7503
  %21 = load i32, i32* %within_tag, align 8, !dbg !7503
  %tobool17 = icmp ne i32 %21, 0, !dbg !7501
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !7504

if.then18:                                        ; preds = %if.end
  %22 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7505
  %within_tag19 = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %22, i32 0, i32 1, !dbg !7507
  store i32 0, i32* %within_tag19, align 8, !dbg !7508
  %call20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.336, i32 0, i32 0)), !dbg !7509
  br label %if.end21, !dbg !7510

if.end21:                                         ; preds = %if.then18, %if.end
  %23 = load %struct.section*, %struct.section** %section, align 8, !dbg !7511
  %flags = getelementptr inbounds %struct.section, %struct.section* %23, i32 0, i32 2, !dbg !7513
  %24 = load i32, i32* %flags, align 8, !dbg !7513
  %and = and i32 %24, 4, !dbg !7514
  %tobool22 = icmp ne i32 %and, 0, !dbg !7514
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !7515

if.then23:                                        ; preds = %if.end21
  %25 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7516
  %indent_level = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %25, i32 0, i32 2, !dbg !7518
  %26 = load i32, i32* %indent_level, align 4, !dbg !7519
  %inc = add nsw i32 %26, 1, !dbg !7519
  store i32 %inc, i32* %indent_level, align 4, !dbg !7519
  br label %if.end57, !dbg !7520

if.else:                                          ; preds = %if.end21
  %27 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !7521
  %tobool24 = icmp ne %struct.section* %27, null, !dbg !7521
  br i1 %tobool24, label %land.lhs.true, label %if.end39, !dbg !7524

land.lhs.true:                                    ; preds = %if.else
  %28 = load %struct.section*, %struct.section** %parent_section, align 8, !dbg !7525
  %flags25 = getelementptr inbounds %struct.section, %struct.section* %28, i32 0, i32 2, !dbg !7527
  %29 = load i32, i32* %flags25, align 8, !dbg !7527
  %and26 = and i32 %29, 1, !dbg !7528
  %tobool27 = icmp ne i32 %and26, 0, !dbg !7528
  br i1 %tobool27, label %land.lhs.true28, label %if.end39, !dbg !7529

land.lhs.true28:                                  ; preds = %land.lhs.true
  %30 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7530
  %level29 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %30, i32 0, i32 6, !dbg !7531
  %31 = load i32, i32* %level29, align 4, !dbg !7531
  %tobool30 = icmp ne i32 %31, 0, !dbg !7530
  br i1 %tobool30, label %land.lhs.true31, label %if.end39, !dbg !7532

land.lhs.true31:                                  ; preds = %land.lhs.true28
  %32 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7533
  %level32 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %32, i32 0, i32 6, !dbg !7534
  %33 = load i32, i32* %level32, align 4, !dbg !7534
  %sub33 = sub nsw i32 %33, 1, !dbg !7535
  %idxprom34 = sext i32 %sub33 to i64, !dbg !7536
  %34 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7536
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %34, i32 0, i32 7, !dbg !7537
  %arrayidx35 = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom34, !dbg !7536
  %35 = load i32, i32* %arrayidx35, align 4, !dbg !7536
  %tobool36 = icmp ne i32 %35, 0, !dbg !7536
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !7538

if.then37:                                        ; preds = %land.lhs.true31
  %call38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !7540
  br label %if.end39, !dbg !7540

if.end39:                                         ; preds = %if.then37, %land.lhs.true31, %land.lhs.true28, %land.lhs.true, %if.else
  %36 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7541
  %indent_level40 = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %36, i32 0, i32 2, !dbg !7542
  %37 = load i32, i32* %indent_level40, align 4, !dbg !7543
  %inc41 = add nsw i32 %37, 1, !dbg !7543
  store i32 %inc41, i32* %indent_level40, align 4, !dbg !7543
  %38 = load %struct.section*, %struct.section** %section, align 8, !dbg !7544
  %flags42 = getelementptr inbounds %struct.section, %struct.section* %38, i32 0, i32 2, !dbg !7546
  %39 = load i32, i32* %flags42, align 8, !dbg !7546
  %and43 = and i32 %39, 2, !dbg !7547
  %tobool44 = icmp ne i32 %and43, 0, !dbg !7547
  br i1 %tobool44, label %if.then45, label %if.else49, !dbg !7548

if.then45:                                        ; preds = %if.end39
  %40 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7549
  %indent_level46 = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %40, i32 0, i32 2, !dbg !7551
  %41 = load i32, i32* %indent_level46, align 4, !dbg !7551
  %mul = mul nsw i32 %41, 4, !dbg !7552
  %call47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249, i32 0, i32 0), i32 %mul, i32 32), !dbg !7553
  %42 = load %struct.section*, %struct.section** %section, align 8, !dbg !7554
  %name = getelementptr inbounds %struct.section, %struct.section* %42, i32 0, i32 1, !dbg !7555
  %43 = load i8*, i8** %name, align 8, !dbg !7555
  %call48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.337, i32 0, i32 0), i8* %43), !dbg !7556
  br label %if.end56, !dbg !7558

if.else49:                                        ; preds = %if.end39
  %44 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7559
  %indent_level50 = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %44, i32 0, i32 2, !dbg !7561
  %45 = load i32, i32* %indent_level50, align 4, !dbg !7561
  %mul51 = mul nsw i32 %45, 4, !dbg !7562
  %call52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249, i32 0, i32 0), i32 %mul51, i32 32), !dbg !7563
  %46 = load %struct.section*, %struct.section** %section, align 8, !dbg !7564
  %name53 = getelementptr inbounds %struct.section, %struct.section* %46, i32 0, i32 1, !dbg !7565
  %47 = load i8*, i8** %name53, align 8, !dbg !7565
  %call54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.338, i32 0, i32 0), i8* %47), !dbg !7566
  %48 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7568
  %within_tag55 = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %48, i32 0, i32 1, !dbg !7569
  store i32 1, i32* %within_tag55, align 8, !dbg !7570
  br label %if.end56

if.end56:                                         ; preds = %if.else49, %if.then45
  br label %if.end57

if.end57:                                         ; preds = %cond.end14, %if.end56, %if.then23
  ret void, !dbg !7571
}

; Function Attrs: nounwind uwtable
define internal void @xml_print_section_footer(%struct.WriterContext* %wctx) #0 !dbg !7572 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %xml = alloca %struct.XMLContext*, align 8
  %section = alloca %struct.section*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !7573, metadata !2571), !dbg !7574
  call void @llvm.dbg.declare(metadata %struct.XMLContext** %xml, metadata !7575, metadata !2571), !dbg !7576
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7577
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !7578
  %1 = load i8*, i8** %priv, align 8, !dbg !7578
  %2 = bitcast i8* %1 to %struct.XMLContext*, !dbg !7577
  store %struct.XMLContext* %2, %struct.XMLContext** %xml, align 8, !dbg !7576
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !7579, metadata !2571), !dbg !7580
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7581
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !7582
  %4 = load i32, i32* %level, align 4, !dbg !7582
  %idxprom = sext i32 %4 to i64, !dbg !7583
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7583
  %section1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 8, !dbg !7584
  %arrayidx = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section1, i64 0, i64 %idxprom, !dbg !7583
  %6 = load %struct.section*, %struct.section** %arrayidx, align 8, !dbg !7583
  store %struct.section* %6, %struct.section** %section, align 8, !dbg !7580
  %7 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7585
  %level2 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 6, !dbg !7587
  %8 = load i32, i32* %level2, align 4, !dbg !7587
  %cmp = icmp eq i32 %8, 0, !dbg !7588
  br i1 %cmp, label %if.then, label %if.else, !dbg !7589

if.then:                                          ; preds = %entry
  %9 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7590
  %fully_qualified = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %9, i32 0, i32 3, !dbg !7592
  %10 = load i32, i32* %fully_qualified, align 8, !dbg !7592
  %tobool = icmp ne i32 %10, 0, !dbg !7590
  %cond = select i1 %tobool, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.335, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), !dbg !7590
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.339, i32 0, i32 0), i8* %cond), !dbg !7593
  br label %if.end19, !dbg !7594

if.else:                                          ; preds = %entry
  %11 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7595
  %within_tag = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %11, i32 0, i32 1, !dbg !7598
  %12 = load i32, i32* %within_tag, align 8, !dbg !7598
  %tobool3 = icmp ne i32 %12, 0, !dbg !7595
  br i1 %tobool3, label %if.then4, label %if.else7, !dbg !7595

if.then4:                                         ; preds = %if.else
  %13 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7599
  %within_tag5 = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %13, i32 0, i32 1, !dbg !7601
  store i32 0, i32* %within_tag5, align 8, !dbg !7602
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.340, i32 0, i32 0)), !dbg !7603
  %14 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7604
  %indent_level = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %14, i32 0, i32 2, !dbg !7605
  %15 = load i32, i32* %indent_level, align 4, !dbg !7606
  %dec = add nsw i32 %15, -1, !dbg !7606
  store i32 %dec, i32* %indent_level, align 4, !dbg !7606
  br label %if.end18, !dbg !7607

if.else7:                                         ; preds = %if.else
  %16 = load %struct.section*, %struct.section** %section, align 8, !dbg !7608
  %flags = getelementptr inbounds %struct.section, %struct.section* %16, i32 0, i32 2, !dbg !7611
  %17 = load i32, i32* %flags, align 8, !dbg !7611
  %and = and i32 %17, 4, !dbg !7612
  %tobool8 = icmp ne i32 %and, 0, !dbg !7612
  br i1 %tobool8, label %if.then9, label %if.else12, !dbg !7608

if.then9:                                         ; preds = %if.else7
  %18 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7613
  %indent_level10 = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %18, i32 0, i32 2, !dbg !7615
  %19 = load i32, i32* %indent_level10, align 4, !dbg !7616
  %dec11 = add nsw i32 %19, -1, !dbg !7616
  store i32 %dec11, i32* %indent_level10, align 4, !dbg !7616
  br label %if.end, !dbg !7617

if.else12:                                        ; preds = %if.else7
  %20 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7618
  %indent_level13 = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %20, i32 0, i32 2, !dbg !7620
  %21 = load i32, i32* %indent_level13, align 4, !dbg !7620
  %mul = mul nsw i32 %21, 4, !dbg !7621
  %call14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249, i32 0, i32 0), i32 %mul, i32 32), !dbg !7622
  %22 = load %struct.section*, %struct.section** %section, align 8, !dbg !7623
  %name = getelementptr inbounds %struct.section, %struct.section* %22, i32 0, i32 1, !dbg !7624
  %23 = load i8*, i8** %name, align 8, !dbg !7624
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.341, i32 0, i32 0), i8* %23), !dbg !7625
  %24 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7627
  %indent_level16 = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %24, i32 0, i32 2, !dbg !7628
  %25 = load i32, i32* %indent_level16, align 4, !dbg !7629
  %dec17 = add nsw i32 %25, -1, !dbg !7629
  store i32 %dec17, i32* %indent_level16, align 4, !dbg !7629
  br label %if.end

if.end:                                           ; preds = %if.else12, %if.then9
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then4
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then
  ret void, !dbg !7630
}

; Function Attrs: nounwind uwtable
define internal void @xml_print_int(%struct.WriterContext* %wctx, i8* %key, i64 %value) #0 !dbg !7631 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i64, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !7632, metadata !2571), !dbg !7633
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !7634, metadata !2571), !dbg !7635
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !7636, metadata !2571), !dbg !7637
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7638
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 6, !dbg !7640
  %1 = load i32, i32* %level, align 4, !dbg !7640
  %idxprom = sext i32 %1 to i64, !dbg !7641
  %2 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7641
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %2, i32 0, i32 7, !dbg !7642
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom, !dbg !7641
  %3 = load i32, i32* %arrayidx, align 4, !dbg !7641
  %tobool = icmp ne i32 %3, 0, !dbg !7641
  br i1 %tobool, label %if.then, label %if.end, !dbg !7643

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.247, i32 0, i32 0)), !dbg !7644
  br label %if.end, !dbg !7644

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** %key.addr, align 8, !dbg !7645
  %5 = load i64, i64* %value.addr, align 8, !dbg !7646
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.342, i32 0, i32 0), i8* %4, i64 %5), !dbg !7647
  ret void, !dbg !7648
}

; Function Attrs: nounwind uwtable
define internal void @xml_print_str(%struct.WriterContext* %wctx, i8* %key, i8* %value) #0 !dbg !7649 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %buf = alloca %struct.AVBPrint, align 8
  %xml = alloca %struct.XMLContext*, align 8
  %section = alloca %struct.section*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !7650, metadata !2571), !dbg !7651
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !7652, metadata !2571), !dbg !7653
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !7654, metadata !2571), !dbg !7655
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %buf, metadata !7656, metadata !2571), !dbg !7657
  call void @llvm.dbg.declare(metadata %struct.XMLContext** %xml, metadata !7658, metadata !2571), !dbg !7659
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7660
  %priv = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 3, !dbg !7661
  %1 = load i8*, i8** %priv, align 8, !dbg !7661
  %2 = bitcast i8* %1 to %struct.XMLContext*, !dbg !7660
  store %struct.XMLContext* %2, %struct.XMLContext** %xml, align 8, !dbg !7659
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !7662, metadata !2571), !dbg !7663
  %3 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7664
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %3, i32 0, i32 6, !dbg !7665
  %4 = load i32, i32* %level, align 4, !dbg !7665
  %idxprom = sext i32 %4 to i64, !dbg !7666
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7666
  %section1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 8, !dbg !7667
  %arrayidx = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section1, i64 0, i64 %idxprom, !dbg !7666
  %6 = load %struct.section*, %struct.section** %arrayidx, align 8, !dbg !7666
  store %struct.section* %6, %struct.section** %section, align 8, !dbg !7663
  call void @av_bprint_init(%struct.AVBPrint* %buf, i32 1, i32 -1), !dbg !7668
  %7 = load %struct.section*, %struct.section** %section, align 8, !dbg !7669
  %flags = getelementptr inbounds %struct.section, %struct.section* %7, i32 0, i32 2, !dbg !7671
  %8 = load i32, i32* %flags, align 8, !dbg !7671
  %and = and i32 %8, 4, !dbg !7672
  %tobool = icmp ne i32 %and, 0, !dbg !7672
  br i1 %tobool, label %if.then, label %if.else, !dbg !7673

if.then:                                          ; preds = %entry
  %9 = load %struct.XMLContext*, %struct.XMLContext** %xml, align 8, !dbg !7674
  %indent_level = getelementptr inbounds %struct.XMLContext, %struct.XMLContext* %9, i32 0, i32 2, !dbg !7676
  %10 = load i32, i32* %indent_level, align 4, !dbg !7676
  %mul = mul nsw i32 %10, 4, !dbg !7677
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249, i32 0, i32 0), i32 %mul, i32 32), !dbg !7678
  %11 = load %struct.section*, %struct.section** %section, align 8, !dbg !7679
  %element_name = getelementptr inbounds %struct.section, %struct.section* %11, i32 0, i32 4, !dbg !7680
  %12 = load i8*, i8** %element_name, align 8, !dbg !7680
  %13 = load i8*, i8** %key.addr, align 8, !dbg !7681
  %14 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7682
  %15 = bitcast %struct.WriterContext* %14 to i8*, !dbg !7682
  %call2 = call i8* @xml_escape_str(%struct.AVBPrint* %buf, i8* %13, i8* %15), !dbg !7683
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.343, i32 0, i32 0), i8* %12, i8* %call2), !dbg !7684
  call void @av_bprint_clear(%struct.AVBPrint* %buf), !dbg !7685
  %16 = load i8*, i8** %value.addr, align 8, !dbg !7686
  %17 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7687
  %18 = bitcast %struct.WriterContext* %17 to i8*, !dbg !7687
  %call4 = call i8* @xml_escape_str(%struct.AVBPrint* %buf, i8* %16, i8* %18), !dbg !7688
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.344, i32 0, i32 0), i8* %call4), !dbg !7689
  br label %if.end14, !dbg !7691

if.else:                                          ; preds = %entry
  %19 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7692
  %level6 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %19, i32 0, i32 6, !dbg !7695
  %20 = load i32, i32* %level6, align 4, !dbg !7695
  %idxprom7 = sext i32 %20 to i64, !dbg !7696
  %21 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7696
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %21, i32 0, i32 7, !dbg !7697
  %arrayidx8 = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom7, !dbg !7696
  %22 = load i32, i32* %arrayidx8, align 4, !dbg !7696
  %tobool9 = icmp ne i32 %22, 0, !dbg !7696
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !7698

if.then10:                                        ; preds = %if.else
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.247, i32 0, i32 0)), !dbg !7699
  br label %if.end, !dbg !7699

if.end:                                           ; preds = %if.then10, %if.else
  %23 = load i8*, i8** %key.addr, align 8, !dbg !7700
  %24 = load i8*, i8** %value.addr, align 8, !dbg !7701
  %25 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7702
  %26 = bitcast %struct.WriterContext* %25 to i8*, !dbg !7702
  %call12 = call i8* @xml_escape_str(%struct.AVBPrint* %buf, i8* %24, i8* %26), !dbg !7703
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.345, i32 0, i32 0), i8* %23, i8* %call12), !dbg !7704
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  %call15 = call i32 @av_bprint_finalize(%struct.AVBPrint* %buf, i8** null), !dbg !7706
  ret void, !dbg !7707
}

; Function Attrs: nounwind uwtable
define internal i8* @xml_get_name(i8* %ctx) #0 !dbg !7708 {
entry:
  %ctx.addr = alloca i8*, align 8
  store i8* %ctx, i8** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ctx.addr, metadata !7709, metadata !2571), !dbg !7710
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.323, i32 0, i32 0), !dbg !7711
}

; Function Attrs: nounwind uwtable
define internal i8* @xml_escape_str(%struct.AVBPrint* %dst, i8* %src, i8* %log_ctx) #0 !dbg !7712 {
entry:
  %dst.addr = alloca %struct.AVBPrint*, align 8
  %src.addr = alloca i8*, align 8
  %log_ctx.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store %struct.AVBPrint* %dst, %struct.AVBPrint** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBPrint** %dst.addr, metadata !7713, metadata !2571), !dbg !7714
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !7715, metadata !2571), !dbg !7716
  store i8* %log_ctx, i8** %log_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %log_ctx.addr, metadata !7717, metadata !2571), !dbg !7718
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7719, metadata !2571), !dbg !7720
  %0 = load i8*, i8** %src.addr, align 8, !dbg !7721
  store i8* %0, i8** %p, align 8, !dbg !7723
  br label %for.cond, !dbg !7724

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %p, align 8, !dbg !7725
  %2 = load i8, i8* %1, align 1, !dbg !7728
  %tobool = icmp ne i8 %2, 0, !dbg !7729
  br i1 %tobool, label %for.body, label %for.end, !dbg !7729

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %p, align 8, !dbg !7730
  %4 = load i8, i8* %3, align 1, !dbg !7732
  %conv = sext i8 %4 to i32, !dbg !7732
  switch i32 %conv, label %sw.default [
    i32 38, label %sw.bb
    i32 60, label %sw.bb1
    i32 62, label %sw.bb2
    i32 34, label %sw.bb3
    i32 39, label %sw.bb4
  ], !dbg !7733

sw.bb:                                            ; preds = %for.body
  %5 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !7734
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.346, i32 0, i32 0)), !dbg !7736
  br label %sw.epilog, !dbg !7737

sw.bb1:                                           ; preds = %for.body
  %6 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !7738
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.347, i32 0, i32 0)), !dbg !7739
  br label %sw.epilog, !dbg !7740

sw.bb2:                                           ; preds = %for.body
  %7 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !7741
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.348, i32 0, i32 0)), !dbg !7742
  br label %sw.epilog, !dbg !7743

sw.bb3:                                           ; preds = %for.body
  %8 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !7744
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.349, i32 0, i32 0)), !dbg !7745
  br label %sw.epilog, !dbg !7746

sw.bb4:                                           ; preds = %for.body
  %9 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !7747
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.350, i32 0, i32 0)), !dbg !7748
  br label %sw.epilog, !dbg !7749

sw.default:                                       ; preds = %for.body
  %10 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !7750
  %11 = load i8*, i8** %p, align 8, !dbg !7751
  %12 = load i8, i8* %11, align 1, !dbg !7752
  call void @av_bprint_chars(%struct.AVBPrint* %10, i8 signext %12, i32 1), !dbg !7753
  br label %sw.epilog, !dbg !7754

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  br label %for.inc, !dbg !7755

for.inc:                                          ; preds = %sw.epilog
  %13 = load i8*, i8** %p, align 8, !dbg !7756
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7756
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !7756
  br label %for.cond, !dbg !7758, !llvm.loop !7759

for.end:                                          ; preds = %for.cond
  %14 = load %struct.AVBPrint*, %struct.AVBPrint** %dst.addr, align 8, !dbg !7761
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %14, i32 0, i32 0, !dbg !7762
  %15 = load i8*, i8** %str, align 8, !dbg !7762
  ret i8* %15, !dbg !7763
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @writer_print_string(%struct.WriterContext* %wctx, i8* %key, i8* %val, i32 %flags) #4 !dbg !7764 {
entry:
  %retval = alloca i32, align 4
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %val.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %section = alloca %struct.section*, align 8
  %ret = alloca i32, align 4
  %key1 = alloca i8*, align 8
  %val1 = alloca i8*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !7767, metadata !2571), !dbg !7768
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !7769, metadata !2571), !dbg !7770
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !7771, metadata !2571), !dbg !7772
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7773, metadata !2571), !dbg !7774
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !7775, metadata !2571), !dbg !7776
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7777
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 6, !dbg !7778
  %1 = load i32, i32* %level, align 4, !dbg !7778
  %idxprom = sext i32 %1 to i64, !dbg !7779
  %2 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7779
  %section1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %2, i32 0, i32 8, !dbg !7780
  %arrayidx = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section1, i64 0, i64 %idxprom, !dbg !7779
  %3 = load %struct.section*, %struct.section** %arrayidx, align 8, !dbg !7779
  store %struct.section* %3, %struct.section** %section, align 8, !dbg !7776
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7781, metadata !2571), !dbg !7782
  store i32 0, i32* %ret, align 4, !dbg !7782
  %4 = load i32, i32* %flags.addr, align 4, !dbg !7783
  %and = and i32 %4, 1, !dbg !7785
  %tobool = icmp ne i32 %and, 0, !dbg !7785
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7786

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7787
  %writer = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %5, i32 0, i32 1, !dbg !7789
  %6 = load %struct.Writer*, %struct.Writer** %writer, align 8, !dbg !7789
  %flags2 = getelementptr inbounds %struct.Writer, %struct.Writer* %6, i32 0, i32 10, !dbg !7790
  %7 = load i32, i32* %flags2, align 8, !dbg !7790
  %and3 = and i32 %7, 1, !dbg !7791
  %tobool4 = icmp ne i32 %and3, 0, !dbg !7791
  br i1 %tobool4, label %if.end, label %if.then, !dbg !7792

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !7794
  br label %return, !dbg !7794

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load %struct.section*, %struct.section** %section, align 8, !dbg !7795
  %show_all_entries = getelementptr inbounds %struct.section, %struct.section* %8, i32 0, i32 7, !dbg !7797
  %9 = load i32, i32* %show_all_entries, align 8, !dbg !7797
  %tobool5 = icmp ne i32 %9, 0, !dbg !7795
  br i1 %tobool5, label %if.then7, label %lor.lhs.false, !dbg !7798

lor.lhs.false:                                    ; preds = %if.end
  %10 = load %struct.section*, %struct.section** %section, align 8, !dbg !7799
  %entries_to_show = getelementptr inbounds %struct.section, %struct.section* %10, i32 0, i32 6, !dbg !7801
  %11 = load %struct.AVDictionary*, %struct.AVDictionary** %entries_to_show, align 8, !dbg !7801
  %12 = load i8*, i8** %key.addr, align 8, !dbg !7802
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %11, i8* %12, %struct.AVDictionaryEntry* null, i32 0), !dbg !7803
  %tobool6 = icmp ne %struct.AVDictionaryEntry* %call, null, !dbg !7803
  br i1 %tobool6, label %if.then7, label %if.end28, !dbg !7804

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  %13 = load i32, i32* %flags.addr, align 4, !dbg !7805
  %and8 = and i32 %13, 2, !dbg !7808
  %tobool9 = icmp ne i32 %and8, 0, !dbg !7808
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !7809

if.then10:                                        ; preds = %if.then7
  call void @llvm.dbg.declare(metadata i8** %key1, metadata !7810, metadata !2571), !dbg !7812
  store i8* null, i8** %key1, align 8, !dbg !7812
  call void @llvm.dbg.declare(metadata i8** %val1, metadata !7813, metadata !2571), !dbg !7814
  store i8* null, i8** %val1, align 8, !dbg !7814
  %14 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7815
  %15 = load i8*, i8** %key.addr, align 8, !dbg !7816
  %call11 = call i32 @validate_string(%struct.WriterContext* %14, i8** %key1, i8* %15), !dbg !7817
  store i32 %call11, i32* %ret, align 4, !dbg !7818
  %16 = load i32, i32* %ret, align 4, !dbg !7819
  %cmp = icmp slt i32 %16, 0, !dbg !7821
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !7822

if.then12:                                        ; preds = %if.then10
  br label %end, !dbg !7823

if.end13:                                         ; preds = %if.then10
  %17 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7825
  %18 = load i8*, i8** %val.addr, align 8, !dbg !7826
  %call14 = call i32 @validate_string(%struct.WriterContext* %17, i8** %val1, i8* %18), !dbg !7827
  store i32 %call14, i32* %ret, align 4, !dbg !7828
  %19 = load i32, i32* %ret, align 4, !dbg !7829
  %cmp15 = icmp slt i32 %19, 0, !dbg !7831
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !7832

if.then16:                                        ; preds = %if.end13
  br label %end, !dbg !7833

if.end17:                                         ; preds = %if.end13
  %20 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7835
  %writer18 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %20, i32 0, i32 1, !dbg !7836
  %21 = load %struct.Writer*, %struct.Writer** %writer18, align 8, !dbg !7836
  %print_string = getelementptr inbounds %struct.Writer, %struct.Writer* %21, i32 0, i32 9, !dbg !7837
  %22 = load void (%struct.WriterContext*, i8*, i8*)*, void (%struct.WriterContext*, i8*, i8*)** %print_string, align 8, !dbg !7837
  %23 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7838
  %24 = load i8*, i8** %key1, align 8, !dbg !7839
  %25 = load i8*, i8** %val1, align 8, !dbg !7840
  call void %22(%struct.WriterContext* %23, i8* %24, i8* %25), !dbg !7835
  br label %end, !dbg !7835

end:                                              ; preds = %if.end17, %if.then16, %if.then12
  %26 = load i32, i32* %ret, align 4, !dbg !7841
  %cmp19 = icmp slt i32 %26, 0, !dbg !7843
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !7844

if.then20:                                        ; preds = %end
  %27 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7845
  %28 = bitcast %struct.WriterContext* %27 to i8*, !dbg !7845
  %29 = load i8*, i8** %key.addr, align 8, !dbg !7847
  %30 = load i8*, i8** %val.addr, align 8, !dbg !7848
  %31 = load %struct.section*, %struct.section** %section, align 8, !dbg !7849
  %unique_name = getelementptr inbounds %struct.section, %struct.section* %31, i32 0, i32 5, !dbg !7850
  %32 = load i8*, i8** %unique_name, align 8, !dbg !7850
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.359, i32 0, i32 0), i8* %29, i8* %30, i8* %32), !dbg !7851
  br label %if.end21, !dbg !7852

if.end21:                                         ; preds = %if.then20, %end
  %33 = load i8*, i8** %key1, align 8, !dbg !7853
  call void @av_free(i8* %33), !dbg !7854
  %34 = load i8*, i8** %val1, align 8, !dbg !7855
  call void @av_free(i8* %34), !dbg !7856
  br label %if.end24, !dbg !7857

if.else:                                          ; preds = %if.then7
  %35 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7858
  %writer22 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %35, i32 0, i32 1, !dbg !7860
  %36 = load %struct.Writer*, %struct.Writer** %writer22, align 8, !dbg !7860
  %print_string23 = getelementptr inbounds %struct.Writer, %struct.Writer* %36, i32 0, i32 9, !dbg !7861
  %37 = load void (%struct.WriterContext*, i8*, i8*)*, void (%struct.WriterContext*, i8*, i8*)** %print_string23, align 8, !dbg !7861
  %38 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7862
  %39 = load i8*, i8** %key.addr, align 8, !dbg !7863
  %40 = load i8*, i8** %val.addr, align 8, !dbg !7864
  call void %37(%struct.WriterContext* %38, i8* %39, i8* %40), !dbg !7858
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.end21
  %41 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7865
  %level25 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %41, i32 0, i32 6, !dbg !7866
  %42 = load i32, i32* %level25, align 4, !dbg !7866
  %idxprom26 = sext i32 %42 to i64, !dbg !7867
  %43 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7867
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %43, i32 0, i32 7, !dbg !7868
  %arrayidx27 = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom26, !dbg !7867
  %44 = load i32, i32* %arrayidx27, align 4, !dbg !7869
  %inc = add i32 %44, 1, !dbg !7869
  store i32 %inc, i32* %arrayidx27, align 4, !dbg !7869
  br label %if.end28, !dbg !7870

if.end28:                                         ; preds = %if.end24, %lor.lhs.false
  %45 = load i32, i32* %ret, align 4, !dbg !7871
  store i32 %45, i32* %retval, align 4, !dbg !7872
  br label %return, !dbg !7872

return:                                           ; preds = %if.end28, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !7873
  ret i32 %46, !dbg !7873
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @validate_string(%struct.WriterContext* %wctx, i8** %dstp, i8* %src) #4 !dbg !7874 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %dstp.addr = alloca i8**, align 8
  %src.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %endp = alloca i8*, align 8
  %dstbuf = alloca %struct.AVBPrint, align 8
  %invalid_chars_nb = alloca i32, align 4
  %ret = alloca i32, align 4
  %code = alloca i32, align 4
  %invalid = alloca i32, align 4
  %p0 = alloca i8*, align 8
  %bp = alloca %struct.AVBPrint, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !7877, metadata !2571), !dbg !7878
  store i8** %dstp, i8*** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dstp.addr, metadata !7879, metadata !2571), !dbg !7880
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !7881, metadata !2571), !dbg !7882
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7883, metadata !2571), !dbg !7884
  call void @llvm.dbg.declare(metadata i8** %endp, metadata !7885, metadata !2571), !dbg !7886
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %dstbuf, metadata !7887, metadata !2571), !dbg !7888
  call void @llvm.dbg.declare(metadata i32* %invalid_chars_nb, metadata !7889, metadata !2571), !dbg !7890
  store i32 0, i32* %invalid_chars_nb, align 4, !dbg !7890
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7891, metadata !2571), !dbg !7892
  store i32 0, i32* %ret, align 4, !dbg !7892
  call void @av_bprint_init(%struct.AVBPrint* %dstbuf, i32 0, i32 -1), !dbg !7893
  %0 = load i8*, i8** %src.addr, align 8, !dbg !7894
  %1 = load i8*, i8** %src.addr, align 8, !dbg !7895
  %call = call i64 @strlen(i8* %1) #14, !dbg !7896
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %call, !dbg !7897
  store i8* %add.ptr, i8** %endp, align 8, !dbg !7898
  %2 = load i8*, i8** %src.addr, align 8, !dbg !7899
  store i8* %2, i8** %p, align 8, !dbg !7901
  br label %for.cond, !dbg !7902

for.cond:                                         ; preds = %if.end13, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !7903
  %4 = load i8, i8* %3, align 1, !dbg !7906
  %tobool = icmp ne i8 %4, 0, !dbg !7907
  br i1 %tobool, label %for.body, label %for.end, !dbg !7907

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %code, metadata !7908, metadata !2571), !dbg !7910
  call void @llvm.dbg.declare(metadata i32* %invalid, metadata !7911, metadata !2571), !dbg !7912
  store i32 0, i32* %invalid, align 4, !dbg !7912
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !7913, metadata !2571), !dbg !7914
  %5 = load i8*, i8** %p, align 8, !dbg !7915
  store i8* %5, i8** %p0, align 8, !dbg !7914
  %6 = load i8*, i8** %endp, align 8, !dbg !7916
  %7 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7918
  %string_validation_utf8_flags = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %7, i32 0, i32 15, !dbg !7919
  %8 = load i32, i32* %string_validation_utf8_flags, align 8, !dbg !7919
  %call1 = call i32 @av_utf8_decode(i32* %code, i8** %p, i8* %6, i32 %8), !dbg !7920
  %cmp = icmp slt i32 %call1, 0, !dbg !7921
  br i1 %cmp, label %if.then, label %if.end, !dbg !7922

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %bp, metadata !7923, metadata !2571), !dbg !7925
  call void @av_bprint_init(%struct.AVBPrint* %bp, i32 0, i32 1), !dbg !7926
  %9 = load i8*, i8** %p0, align 8, !dbg !7927
  %10 = load i8*, i8** %p, align 8, !dbg !7928
  %11 = load i8*, i8** %p0, align 8, !dbg !7929
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64, !dbg !7930
  %sub.ptr.rhs.cast = ptrtoint i8* %11 to i64, !dbg !7930
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7930
  call void @bprint_bytes(%struct.AVBPrint* %bp, i8* %9, i64 %sub.ptr.sub), !dbg !7931
  %12 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7932
  %13 = bitcast %struct.WriterContext* %12 to i8*, !dbg !7932
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %bp, i32 0, i32 0, !dbg !7933
  %14 = load i8*, i8** %str, align 8, !dbg !7933
  %15 = load i8*, i8** %src.addr, align 8, !dbg !7934
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 48, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.360, i32 0, i32 0), i8* %14, i8* %15), !dbg !7935
  store i32 1, i32* %invalid, align 4, !dbg !7936
  br label %if.end, !dbg !7937

if.end:                                           ; preds = %if.then, %for.body
  %16 = load i32, i32* %invalid, align 4, !dbg !7938
  %tobool2 = icmp ne i32 %16, 0, !dbg !7938
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !7940

if.then3:                                         ; preds = %if.end
  %17 = load i32, i32* %invalid_chars_nb, align 4, !dbg !7941
  %inc = add nsw i32 %17, 1, !dbg !7941
  store i32 %inc, i32* %invalid_chars_nb, align 4, !dbg !7941
  %18 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7943
  %string_validation = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %18, i32 0, i32 13, !dbg !7944
  %19 = load i32, i32* %string_validation, align 4, !dbg !7944
  switch i32 %19, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
  ], !dbg !7945

sw.bb:                                            ; preds = %if.then3
  %20 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7946
  %21 = bitcast %struct.WriterContext* %20 to i8*, !dbg !7946
  %22 = load i8*, i8** %src.addr, align 8, !dbg !7948
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.361, i32 0, i32 0), i8* %22), !dbg !7949
  store i32 -1094995529, i32* %ret, align 4, !dbg !7950
  br label %end, !dbg !7951

sw.bb4:                                           ; preds = %if.then3
  %23 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7952
  %string_validation_replacement = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %23, i32 0, i32 14, !dbg !7953
  %24 = load i8*, i8** %string_validation_replacement, align 8, !dbg !7953
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %dstbuf, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.176, i32 0, i32 0), i8* %24), !dbg !7954
  br label %sw.epilog, !dbg !7955

sw.epilog:                                        ; preds = %if.then3, %sw.bb4
  br label %if.end5, !dbg !7956

if.end5:                                          ; preds = %sw.epilog, %if.end
  %25 = load i32, i32* %invalid, align 4, !dbg !7957
  %tobool6 = icmp ne i32 %25, 0, !dbg !7957
  br i1 %tobool6, label %lor.lhs.false, label %if.then9, !dbg !7959

lor.lhs.false:                                    ; preds = %if.end5
  %26 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7960
  %string_validation7 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %26, i32 0, i32 13, !dbg !7962
  %27 = load i32, i32* %string_validation7, align 4, !dbg !7962
  %cmp8 = icmp eq i32 %27, 2, !dbg !7963
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !7964

if.then9:                                         ; preds = %lor.lhs.false, %if.end5
  %28 = load i8*, i8** %p0, align 8, !dbg !7965
  %29 = load i8*, i8** %p, align 8, !dbg !7966
  %30 = load i8*, i8** %p0, align 8, !dbg !7967
  %sub.ptr.lhs.cast10 = ptrtoint i8* %29 to i64, !dbg !7968
  %sub.ptr.rhs.cast11 = ptrtoint i8* %30 to i64, !dbg !7968
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !7968
  %conv = trunc i64 %sub.ptr.sub12 to i32, !dbg !7966
  call void @av_bprint_append_data(%struct.AVBPrint* %dstbuf, i8* %28, i32 %conv), !dbg !7969
  br label %if.end13, !dbg !7969

if.end13:                                         ; preds = %if.then9, %lor.lhs.false
  br label %for.cond, !dbg !7970, !llvm.loop !7972

for.end:                                          ; preds = %for.cond
  %31 = load i32, i32* %invalid_chars_nb, align 4, !dbg !7974
  %tobool14 = icmp ne i32 %31, 0, !dbg !7974
  br i1 %tobool14, label %land.lhs.true, label %if.end20, !dbg !7976

land.lhs.true:                                    ; preds = %for.end
  %32 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7977
  %string_validation15 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %32, i32 0, i32 13, !dbg !7979
  %33 = load i32, i32* %string_validation15, align 4, !dbg !7979
  %cmp16 = icmp eq i32 %33, 1, !dbg !7980
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !7981

if.then18:                                        ; preds = %land.lhs.true
  %34 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7982
  %35 = bitcast %struct.WriterContext* %34 to i8*, !dbg !7982
  %36 = load i32, i32* %invalid_chars_nb, align 4, !dbg !7984
  %37 = load i8*, i8** %src.addr, align 8, !dbg !7985
  %38 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !7986
  %string_validation_replacement19 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %38, i32 0, i32 14, !dbg !7987
  %39 = load i8*, i8** %string_validation_replacement19, align 8, !dbg !7987
  call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 24, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.362, i32 0, i32 0), i32 %36, i8* %37, i8* %39), !dbg !7988
  br label %if.end20, !dbg !7989

if.end20:                                         ; preds = %if.then18, %land.lhs.true, %for.end
  br label %end, !dbg !7990

end:                                              ; preds = %if.end20, %sw.bb
  %40 = load i8**, i8*** %dstp.addr, align 8, !dbg !7992
  %call21 = call i32 @av_bprint_finalize(%struct.AVBPrint* %dstbuf, i8** %40), !dbg !7993
  %41 = load i32, i32* %ret, align 4, !dbg !7994
  ret i32 %41, !dbg !7995
}

declare void @av_bprint_append_data(%struct.AVBPrint*, i8*, i32) #2

declare i32 @avutil_version() #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @writer_print_integer(%struct.WriterContext* %wctx, i8* %key, i64 %val) #4 !dbg !7996 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %val.addr = alloca i64, align 8
  %section = alloca %struct.section*, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !7997, metadata !2571), !dbg !7998
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !7999, metadata !2571), !dbg !8000
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !8001, metadata !2571), !dbg !8002
  call void @llvm.dbg.declare(metadata %struct.section** %section, metadata !8003, metadata !2571), !dbg !8004
  %0 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !8005
  %level = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %0, i32 0, i32 6, !dbg !8006
  %1 = load i32, i32* %level, align 4, !dbg !8006
  %idxprom = sext i32 %1 to i64, !dbg !8007
  %2 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !8007
  %section1 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %2, i32 0, i32 8, !dbg !8008
  %arrayidx = getelementptr inbounds [10 x %struct.section*], [10 x %struct.section*]* %section1, i64 0, i64 %idxprom, !dbg !8007
  %3 = load %struct.section*, %struct.section** %arrayidx, align 8, !dbg !8007
  store %struct.section* %3, %struct.section** %section, align 8, !dbg !8004
  %4 = load %struct.section*, %struct.section** %section, align 8, !dbg !8009
  %show_all_entries = getelementptr inbounds %struct.section, %struct.section* %4, i32 0, i32 7, !dbg !8011
  %5 = load i32, i32* %show_all_entries, align 8, !dbg !8011
  %tobool = icmp ne i32 %5, 0, !dbg !8009
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8012

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.section*, %struct.section** %section, align 8, !dbg !8013
  %entries_to_show = getelementptr inbounds %struct.section, %struct.section* %6, i32 0, i32 6, !dbg !8015
  %7 = load %struct.AVDictionary*, %struct.AVDictionary** %entries_to_show, align 8, !dbg !8015
  %8 = load i8*, i8** %key.addr, align 8, !dbg !8016
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %7, i8* %8, %struct.AVDictionaryEntry* null, i32 0), !dbg !8017
  %tobool2 = icmp ne %struct.AVDictionaryEntry* %call, null, !dbg !8017
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8018

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !8019
  %writer = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %9, i32 0, i32 1, !dbg !8021
  %10 = load %struct.Writer*, %struct.Writer** %writer, align 8, !dbg !8021
  %print_integer = getelementptr inbounds %struct.Writer, %struct.Writer* %10, i32 0, i32 7, !dbg !8022
  %11 = load void (%struct.WriterContext*, i8*, i64)*, void (%struct.WriterContext*, i8*, i64)** %print_integer, align 8, !dbg !8022
  %12 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !8023
  %13 = load i8*, i8** %key.addr, align 8, !dbg !8024
  %14 = load i64, i64* %val.addr, align 8, !dbg !8025
  call void %11(%struct.WriterContext* %12, i8* %13, i64 %14), !dbg !8019
  %15 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !8026
  %level3 = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %15, i32 0, i32 6, !dbg !8027
  %16 = load i32, i32* %level3, align 4, !dbg !8027
  %idxprom4 = sext i32 %16 to i64, !dbg !8028
  %17 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !8028
  %nb_item = getelementptr inbounds %struct.WriterContext, %struct.WriterContext* %17, i32 0, i32 7, !dbg !8029
  %arrayidx5 = getelementptr inbounds [10 x i32], [10 x i32]* %nb_item, i64 0, i64 %idxprom4, !dbg !8028
  %18 = load i32, i32* %arrayidx5, align 4, !dbg !8030
  %inc = add i32 %18, 1, !dbg !8030
  store i32 %inc, i32* %arrayidx5, align 4, !dbg !8030
  br label %if.end, !dbg !8031

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret void, !dbg !8032
}

declare i32 @avcodec_version() #2

declare i32 @avformat_version() #2

declare i32 @avdevice_version() #2

declare i32 @avfilter_version() #2

declare i32 @swscale_version() #2

declare i32 @swresample_version() #2

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_next(%struct.AVPixFmtDescriptor*) #2

declare i32 @av_get_bits_per_pixel(%struct.AVPixFmtDescriptor*) #2

; Function Attrs: nounwind uwtable
define internal i32 @open_input_file(%struct.InputFile* %ifile, i8* %filename) #0 !dbg !8033 {
entry:
  %retval = alloca i32, align 4
  %ifile.addr = alloca %struct.InputFile*, align 8
  %filename.addr = alloca i8*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %fmt_ctx = alloca %struct.AVFormatContext*, align 8
  %t = alloca %struct.AVDictionaryEntry*, align 8
  %scan_all_pmts_set = alloca i32, align 4
  %opts = alloca %struct.AVDictionary**, align 8
  %orig_nb_streams = alloca i32, align 4
  %ist = alloca %struct.InputStream*, align 8
  %stream = alloca %struct.AVStream*, align 8
  %codec = alloca %struct.AVCodec*, align 8
  %opts59 = alloca %struct.AVDictionary*, align 8
  store %struct.InputFile* %ifile, %struct.InputFile** %ifile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr, metadata !8037, metadata !2571), !dbg !8038
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !8039, metadata !2571), !dbg !8040
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8041, metadata !2571), !dbg !8042
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8043, metadata !2571), !dbg !8044
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx, metadata !8045, metadata !2571), !dbg !8046
  store %struct.AVFormatContext* null, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8046
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %t, metadata !8047, metadata !2571), !dbg !8048
  call void @llvm.dbg.declare(metadata i32* %scan_all_pmts_set, metadata !8049, metadata !2571), !dbg !8050
  store i32 0, i32* %scan_all_pmts_set, align 4, !dbg !8050
  %call = call %struct.AVFormatContext* @avformat_alloc_context(), !dbg !8051
  store %struct.AVFormatContext* %call, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8052
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8053
  %tobool = icmp ne %struct.AVFormatContext* %0, null, !dbg !8053
  br i1 %tobool, label %if.end, label %if.then, !dbg !8055

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %filename.addr, align 8, !dbg !8056
  call void @print_error(i8* %1, i32 -12), !dbg !8058
  call void @exit_program(i32 1) #13, !dbg !8059
  unreachable, !dbg !8059

if.end:                                           ; preds = %entry
  %2 = load %struct.AVDictionary*, %struct.AVDictionary** @format_opts, align 8, !dbg !8060
  %call1 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.397, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 1), !dbg !8062
  %tobool2 = icmp ne %struct.AVDictionaryEntry* %call1, null, !dbg !8062
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !8063

if.then3:                                         ; preds = %if.end
  %call4 = call i32 @av_dict_set(%struct.AVDictionary** @format_opts, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.397, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.398, i32 0, i32 0), i32 16), !dbg !8064
  store i32 1, i32* %scan_all_pmts_set, align 4, !dbg !8066
  br label %if.end5, !dbg !8067

if.end5:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %filename.addr, align 8, !dbg !8068
  %4 = load %struct.AVInputFormat*, %struct.AVInputFormat** @iformat, align 8, !dbg !8070
  %call6 = call i32 @avformat_open_input(%struct.AVFormatContext** %fmt_ctx, i8* %3, %struct.AVInputFormat* %4, %struct.AVDictionary** @format_opts), !dbg !8071
  store i32 %call6, i32* %err, align 4, !dbg !8072
  %cmp = icmp slt i32 %call6, 0, !dbg !8073
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !8074

if.then7:                                         ; preds = %if.end5
  %5 = load i8*, i8** %filename.addr, align 8, !dbg !8075
  %6 = load i32, i32* %err, align 4, !dbg !8077
  call void @print_error(i8* %5, i32 %6), !dbg !8078
  %7 = load i32, i32* %err, align 4, !dbg !8079
  store i32 %7, i32* %retval, align 4, !dbg !8080
  br label %return, !dbg !8080

if.end8:                                          ; preds = %if.end5
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8081
  %9 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8082
  %fmt_ctx9 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %9, i32 0, i32 0, !dbg !8083
  store %struct.AVFormatContext* %8, %struct.AVFormatContext** %fmt_ctx9, align 8, !dbg !8084
  %10 = load i32, i32* %scan_all_pmts_set, align 4, !dbg !8085
  %tobool10 = icmp ne i32 %10, 0, !dbg !8085
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !8087

if.then11:                                        ; preds = %if.end8
  %call12 = call i32 @av_dict_set(%struct.AVDictionary** @format_opts, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.397, i32 0, i32 0), i8* null, i32 1), !dbg !8088
  br label %if.end13, !dbg !8088

if.end13:                                         ; preds = %if.then11, %if.end8
  %11 = load %struct.AVDictionary*, %struct.AVDictionary** @format_opts, align 8, !dbg !8089
  %call14 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %11, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 2), !dbg !8091
  store %struct.AVDictionaryEntry* %call14, %struct.AVDictionaryEntry** %t, align 8, !dbg !8092
  %tobool15 = icmp ne %struct.AVDictionaryEntry* %call14, null, !dbg !8092
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8093

if.then16:                                        ; preds = %if.end13
  %12 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !8094
  %key = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %12, i32 0, i32 0, !dbg !8096
  %13 = load i8*, i8** %key, align 8, !dbg !8096
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.399, i32 0, i32 0), i8* %13), !dbg !8097
  store i32 -1414549496, i32* %retval, align 4, !dbg !8098
  br label %return, !dbg !8098

if.end17:                                         ; preds = %if.end13
  %14 = load i32, i32* @find_stream_info, align 4, !dbg !8099
  %tobool18 = icmp ne i32 %14, 0, !dbg !8099
  br i1 %tobool18, label %if.then19, label %if.end26, !dbg !8101

if.then19:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %opts, metadata !8102, metadata !2571), !dbg !8104
  %15 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8105
  %16 = load %struct.AVDictionary*, %struct.AVDictionary** @codec_opts, align 8, !dbg !8106
  %call20 = call %struct.AVDictionary** @setup_find_stream_info_opts(%struct.AVFormatContext* %15, %struct.AVDictionary* %16), !dbg !8107
  store %struct.AVDictionary** %call20, %struct.AVDictionary*** %opts, align 8, !dbg !8104
  call void @llvm.dbg.declare(metadata i32* %orig_nb_streams, metadata !8108, metadata !2571), !dbg !8109
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8110
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %17, i32 0, i32 6, !dbg !8111
  %18 = load i32, i32* %nb_streams, align 4, !dbg !8111
  store i32 %18, i32* %orig_nb_streams, align 4, !dbg !8109
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8112
  %20 = load %struct.AVDictionary**, %struct.AVDictionary*** %opts, align 8, !dbg !8113
  %call21 = call i32 @avformat_find_stream_info(%struct.AVFormatContext* %19, %struct.AVDictionary** %20), !dbg !8114
  store i32 %call21, i32* %err, align 4, !dbg !8115
  store i32 0, i32* %i, align 4, !dbg !8116
  br label %for.cond, !dbg !8118

for.cond:                                         ; preds = %for.inc, %if.then19
  %21 = load i32, i32* %i, align 4, !dbg !8119
  %22 = load i32, i32* %orig_nb_streams, align 4, !dbg !8122
  %cmp22 = icmp slt i32 %21, %22, !dbg !8123
  br i1 %cmp22, label %for.body, label %for.end, !dbg !8124

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %i, align 4, !dbg !8125
  %idxprom = sext i32 %23 to i64, !dbg !8126
  %24 = load %struct.AVDictionary**, %struct.AVDictionary*** %opts, align 8, !dbg !8126
  %arrayidx = getelementptr inbounds %struct.AVDictionary*, %struct.AVDictionary** %24, i64 %idxprom, !dbg !8126
  call void @av_dict_free(%struct.AVDictionary** %arrayidx), !dbg !8127
  br label %for.inc, !dbg !8127

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !8128
  %inc = add nsw i32 %25, 1, !dbg !8128
  store i32 %inc, i32* %i, align 4, !dbg !8128
  br label %for.cond, !dbg !8130, !llvm.loop !8131

for.end:                                          ; preds = %for.cond
  %26 = bitcast %struct.AVDictionary*** %opts to i8*, !dbg !8133
  call void @av_freep(i8* %26), !dbg !8134
  %27 = load i32, i32* %err, align 4, !dbg !8135
  %cmp23 = icmp slt i32 %27, 0, !dbg !8137
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !8138

if.then24:                                        ; preds = %for.end
  %28 = load i8*, i8** %filename.addr, align 8, !dbg !8139
  %29 = load i32, i32* %err, align 4, !dbg !8141
  call void @print_error(i8* %28, i32 %29), !dbg !8142
  %30 = load i32, i32* %err, align 4, !dbg !8143
  store i32 %30, i32* %retval, align 4, !dbg !8144
  br label %return, !dbg !8144

if.end25:                                         ; preds = %for.end
  br label %if.end26, !dbg !8145

if.end26:                                         ; preds = %if.end25, %if.end17
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8146
  %32 = load i8*, i8** %filename.addr, align 8, !dbg !8147
  call void @av_dump_format(%struct.AVFormatContext* %31, i32 0, i8* %32, i32 0), !dbg !8148
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8149
  %nb_streams27 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %33, i32 0, i32 6, !dbg !8150
  %34 = load i32, i32* %nb_streams27, align 4, !dbg !8150
  %conv = zext i32 %34 to i64, !dbg !8149
  %call28 = call i8* @av_mallocz_array(i64 %conv, i64 16), !dbg !8151
  %35 = bitcast i8* %call28 to %struct.InputStream*, !dbg !8151
  %36 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8152
  %streams = getelementptr inbounds %struct.InputFile, %struct.InputFile* %36, i32 0, i32 1, !dbg !8153
  store %struct.InputStream* %35, %struct.InputStream** %streams, align 8, !dbg !8154
  %37 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8155
  %streams29 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %37, i32 0, i32 1, !dbg !8157
  %38 = load %struct.InputStream*, %struct.InputStream** %streams29, align 8, !dbg !8157
  %tobool30 = icmp ne %struct.InputStream* %38, null, !dbg !8155
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !8158

if.then31:                                        ; preds = %if.end26
  call void @exit(i32 1) #15, !dbg !8159
  unreachable, !dbg !8159

if.end32:                                         ; preds = %if.end26
  %39 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8160
  %nb_streams33 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %39, i32 0, i32 6, !dbg !8161
  %40 = load i32, i32* %nb_streams33, align 4, !dbg !8161
  %41 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8162
  %nb_streams34 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %41, i32 0, i32 2, !dbg !8163
  store i32 %40, i32* %nb_streams34, align 8, !dbg !8164
  store i32 0, i32* %i, align 4, !dbg !8165
  br label %for.cond35, !dbg !8167

for.cond35:                                       ; preds = %for.inc100, %if.end32
  %42 = load i32, i32* %i, align 4, !dbg !8168
  %43 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8171
  %nb_streams36 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %43, i32 0, i32 6, !dbg !8172
  %44 = load i32, i32* %nb_streams36, align 4, !dbg !8172
  %cmp37 = icmp ult i32 %42, %44, !dbg !8173
  br i1 %cmp37, label %for.body39, label %for.end102, !dbg !8174

for.body39:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata %struct.InputStream** %ist, metadata !8175, metadata !2571), !dbg !8177
  %45 = load i32, i32* %i, align 4, !dbg !8178
  %idxprom40 = sext i32 %45 to i64, !dbg !8179
  %46 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8179
  %streams41 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %46, i32 0, i32 1, !dbg !8180
  %47 = load %struct.InputStream*, %struct.InputStream** %streams41, align 8, !dbg !8180
  %arrayidx42 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %47, i64 %idxprom40, !dbg !8179
  store %struct.InputStream* %arrayidx42, %struct.InputStream** %ist, align 8, !dbg !8177
  call void @llvm.dbg.declare(metadata %struct.AVStream** %stream, metadata !8181, metadata !2571), !dbg !8182
  %48 = load i32, i32* %i, align 4, !dbg !8183
  %idxprom43 = sext i32 %48 to i64, !dbg !8184
  %49 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8184
  %streams44 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %49, i32 0, i32 7, !dbg !8185
  %50 = load %struct.AVStream**, %struct.AVStream*** %streams44, align 8, !dbg !8185
  %arrayidx45 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %50, i64 %idxprom43, !dbg !8184
  %51 = load %struct.AVStream*, %struct.AVStream** %arrayidx45, align 8, !dbg !8184
  store %struct.AVStream* %51, %struct.AVStream** %stream, align 8, !dbg !8182
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec, metadata !8186, metadata !2571), !dbg !8187
  %52 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8188
  %53 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !8189
  %st = getelementptr inbounds %struct.InputStream, %struct.InputStream* %53, i32 0, i32 0, !dbg !8190
  store %struct.AVStream* %52, %struct.AVStream** %st, align 8, !dbg !8191
  %54 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8192
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %54, i32 0, i32 19, !dbg !8194
  %55 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !8194
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %55, i32 0, i32 1, !dbg !8195
  %56 = load i32, i32* %codec_id, align 4, !dbg !8195
  %cmp46 = icmp eq i32 %56, 102400, !dbg !8196
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !8197

if.then48:                                        ; preds = %for.body39
  %57 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8198
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %57, i32 0, i32 0, !dbg !8200
  %58 = load i32, i32* %index, align 8, !dbg !8200
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.400, i32 0, i32 0), i32 %58), !dbg !8201
  br label %for.inc100, !dbg !8202

if.end49:                                         ; preds = %for.body39
  %59 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8203
  %codecpar50 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %59, i32 0, i32 19, !dbg !8204
  %60 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar50, align 8, !dbg !8204
  %codec_id51 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %60, i32 0, i32 1, !dbg !8205
  %61 = load i32, i32* %codec_id51, align 4, !dbg !8205
  %call52 = call %struct.AVCodec* @avcodec_find_decoder(i32 %61), !dbg !8206
  store %struct.AVCodec* %call52, %struct.AVCodec** %codec, align 8, !dbg !8207
  %62 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !8208
  %tobool53 = icmp ne %struct.AVCodec* %62, null, !dbg !8208
  br i1 %tobool53, label %if.end58, label %if.then54, !dbg !8210

if.then54:                                        ; preds = %if.end49
  %63 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8211
  %codecpar55 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %63, i32 0, i32 19, !dbg !8213
  %64 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar55, align 8, !dbg !8213
  %codec_id56 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %64, i32 0, i32 1, !dbg !8214
  %65 = load i32, i32* %codec_id56, align 4, !dbg !8214
  %66 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8215
  %index57 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %66, i32 0, i32 0, !dbg !8216
  %67 = load i32, i32* %index57, align 8, !dbg !8216
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.401, i32 0, i32 0), i32 %65, i32 %67), !dbg !8217
  br label %for.inc100, !dbg !8218

if.end58:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %opts59, metadata !8219, metadata !2571), !dbg !8221
  %68 = load %struct.AVDictionary*, %struct.AVDictionary** @codec_opts, align 8, !dbg !8222
  %69 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8223
  %codecpar60 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %69, i32 0, i32 19, !dbg !8224
  %70 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar60, align 8, !dbg !8224
  %codec_id61 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %70, i32 0, i32 1, !dbg !8225
  %71 = load i32, i32* %codec_id61, align 4, !dbg !8225
  %72 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8226
  %73 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8227
  %74 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !8228
  %call62 = call %struct.AVDictionary* @filter_codec_opts(%struct.AVDictionary* %68, i32 %71, %struct.AVFormatContext* %72, %struct.AVStream* %73, %struct.AVCodec* %74), !dbg !8229
  store %struct.AVDictionary* %call62, %struct.AVDictionary** %opts59, align 8, !dbg !8221
  %75 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !8230
  %call63 = call %struct.AVCodecContext* @avcodec_alloc_context3(%struct.AVCodec* %75), !dbg !8231
  %76 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !8232
  %dec_ctx = getelementptr inbounds %struct.InputStream, %struct.InputStream* %76, i32 0, i32 1, !dbg !8233
  store %struct.AVCodecContext* %call63, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !8234
  %77 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !8235
  %dec_ctx64 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %77, i32 0, i32 1, !dbg !8237
  %78 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx64, align 8, !dbg !8237
  %tobool65 = icmp ne %struct.AVCodecContext* %78, null, !dbg !8235
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !8238

if.then66:                                        ; preds = %if.end58
  call void @exit(i32 1) #15, !dbg !8239
  unreachable, !dbg !8239

if.end67:                                         ; preds = %if.end58
  %79 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !8240
  %dec_ctx68 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %79, i32 0, i32 1, !dbg !8241
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx68, align 8, !dbg !8241
  %81 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8242
  %codecpar69 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %81, i32 0, i32 19, !dbg !8243
  %82 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar69, align 8, !dbg !8243
  %call70 = call i32 @avcodec_parameters_to_context(%struct.AVCodecContext* %80, %struct.AVCodecParameters* %82), !dbg !8244
  store i32 %call70, i32* %err, align 4, !dbg !8245
  %83 = load i32, i32* %err, align 4, !dbg !8246
  %cmp71 = icmp slt i32 %83, 0, !dbg !8248
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !8249

if.then73:                                        ; preds = %if.end67
  call void @exit(i32 1) #15, !dbg !8250
  unreachable, !dbg !8250

if.end74:                                         ; preds = %if.end67
  %84 = load i32, i32* @do_show_log, align 4, !dbg !8251
  %tobool75 = icmp ne i32 %84, 0, !dbg !8251
  br i1 %tobool75, label %if.then76, label %if.end78, !dbg !8253

if.then76:                                        ; preds = %if.end74
  %call77 = call i32 @av_dict_set(%struct.AVDictionary** @codec_opts, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.402, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.398, i32 0, i32 0), i32 0), !dbg !8254
  br label %if.end78, !dbg !8256

if.end78:                                         ; preds = %if.then76, %if.end74
  %85 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !8257
  %dec_ctx79 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %85, i32 0, i32 1, !dbg !8258
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx79, align 8, !dbg !8258
  %pkt_timebase = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %86, i32 0, i32 165, !dbg !8259
  %87 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8260
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %87, i32 0, i32 4, !dbg !8261
  %88 = bitcast %struct.AVRational* %pkt_timebase to i8*, !dbg !8261
  %89 = bitcast %struct.AVRational* %time_base to i8*, !dbg !8261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 4, i1 false), !dbg !8261
  %90 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !8262
  %dec_ctx80 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %90, i32 0, i32 1, !dbg !8263
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx80, align 8, !dbg !8263
  %framerate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %91, i32 0, i32 163, !dbg !8264
  %92 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8265
  %avg_frame_rate = getelementptr inbounds %struct.AVStream, %struct.AVStream* %92, i32 0, i32 12, !dbg !8266
  %93 = bitcast %struct.AVRational* %framerate to i8*, !dbg !8266
  %94 = bitcast %struct.AVRational* %avg_frame_rate to i8*, !dbg !8266
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 8, i32 8, i1 false), !dbg !8266
  %95 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8267
  %codec81 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %95, i32 0, i32 2, !dbg !8268
  %96 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec81, align 8, !dbg !8268
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %96, i32 0, i32 22, !dbg !8269
  %97 = load i32, i32* %coded_width, align 4, !dbg !8269
  %98 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !8270
  %dec_ctx82 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %98, i32 0, i32 1, !dbg !8271
  %99 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx82, align 8, !dbg !8271
  %coded_width83 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %99, i32 0, i32 22, !dbg !8272
  store i32 %97, i32* %coded_width83, align 4, !dbg !8273
  %100 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8274
  %codec84 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %100, i32 0, i32 2, !dbg !8275
  %101 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec84, align 8, !dbg !8275
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %101, i32 0, i32 23, !dbg !8276
  %102 = load i32, i32* %coded_height, align 8, !dbg !8276
  %103 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !8277
  %dec_ctx85 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %103, i32 0, i32 1, !dbg !8278
  %104 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx85, align 8, !dbg !8278
  %coded_height86 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %104, i32 0, i32 23, !dbg !8279
  store i32 %102, i32* %coded_height86, align 8, !dbg !8280
  %105 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !8281
  %dec_ctx87 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %105, i32 0, i32 1, !dbg !8283
  %106 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx87, align 8, !dbg !8283
  %107 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !8284
  %call88 = call i32 @avcodec_open2(%struct.AVCodecContext* %106, %struct.AVCodec* %107, %struct.AVDictionary** %opts59), !dbg !8285
  %cmp89 = icmp slt i32 %call88, 0, !dbg !8286
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !8287

if.then91:                                        ; preds = %if.end78
  %108 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8288
  %index92 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %108, i32 0, i32 0, !dbg !8290
  %109 = load i32, i32* %index92, align 8, !dbg !8290
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.403, i32 0, i32 0), i32 %109), !dbg !8291
  call void @exit(i32 1) #15, !dbg !8292
  unreachable, !dbg !8292

if.end93:                                         ; preds = %if.end78
  %110 = load %struct.AVDictionary*, %struct.AVDictionary** %opts59, align 8, !dbg !8293
  %call94 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %110, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 2), !dbg !8295
  store %struct.AVDictionaryEntry* %call94, %struct.AVDictionaryEntry** %t, align 8, !dbg !8296
  %tobool95 = icmp ne %struct.AVDictionaryEntry* %call94, null, !dbg !8296
  br i1 %tobool95, label %if.then96, label %if.end99, !dbg !8297

if.then96:                                        ; preds = %if.end93
  %111 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !8298
  %key97 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %111, i32 0, i32 0, !dbg !8300
  %112 = load i8*, i8** %key97, align 8, !dbg !8300
  %113 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !8301
  %index98 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %113, i32 0, i32 0, !dbg !8302
  %114 = load i32, i32* %index98, align 8, !dbg !8302
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.404, i32 0, i32 0), i8* %112, i32 %114), !dbg !8303
  store i32 -1414549496, i32* %retval, align 4, !dbg !8304
  br label %return, !dbg !8304

if.end99:                                         ; preds = %if.end93
  br label %for.inc100, !dbg !8305

for.inc100:                                       ; preds = %if.end99, %if.then54, %if.then48
  %115 = load i32, i32* %i, align 4, !dbg !8306
  %inc101 = add nsw i32 %115, 1, !dbg !8306
  store i32 %inc101, i32* %i, align 4, !dbg !8306
  br label %for.cond35, !dbg !8308, !llvm.loop !8309

for.end102:                                       ; preds = %for.cond35
  %116 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8311
  %117 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8312
  %fmt_ctx103 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %117, i32 0, i32 0, !dbg !8313
  store %struct.AVFormatContext* %116, %struct.AVFormatContext** %fmt_ctx103, align 8, !dbg !8314
  store i32 0, i32* %retval, align 4, !dbg !8315
  br label %return, !dbg !8315

return:                                           ; preds = %for.end102, %if.then96, %if.then24, %if.then16, %if.then7
  %118 = load i32, i32* %retval, align 4, !dbg !8316
  ret i32 %118, !dbg !8316
}

declare i32 @av_reallocp_array(i8*, i64, i64) #2

declare i32 @avformat_match_stream_specifier(%struct.AVFormatContext*, %struct.AVStream*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @read_packets(%struct.WriterContext* %w, %struct.InputFile* %ifile) #0 !dbg !8317 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %ifile.addr = alloca %struct.InputFile*, align 8
  %fmt_ctx = alloca %struct.AVFormatContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %cur_ts = alloca i64, align 8
  %interval = alloca %struct.ReadInterval, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !8320, metadata !2571), !dbg !8321
  store %struct.InputFile* %ifile, %struct.InputFile** %ifile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr, metadata !8322, metadata !2571), !dbg !8323
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx, metadata !8324, metadata !2571), !dbg !8325
  %0 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8326
  %fmt_ctx1 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %0, i32 0, i32 0, !dbg !8327
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx1, align 8, !dbg !8327
  store %struct.AVFormatContext* %1, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8325
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8328, metadata !2571), !dbg !8329
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8330, metadata !2571), !dbg !8331
  store i32 0, i32* %ret, align 4, !dbg !8331
  call void @llvm.dbg.declare(metadata i64* %cur_ts, metadata !8332, metadata !2571), !dbg !8333
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8334
  %start_time = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 10, !dbg !8335
  %3 = load i64, i64* %start_time, align 8, !dbg !8335
  store i64 %3, i64* %cur_ts, align 8, !dbg !8333
  %4 = load i32, i32* @read_intervals_nb, align 4, !dbg !8336
  %cmp = icmp eq i32 %4, 0, !dbg !8338
  br i1 %cmp, label %if.then, label %if.else, !dbg !8339

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ReadInterval* %interval, metadata !8340, metadata !2571), !dbg !8342
  %5 = bitcast %struct.ReadInterval* %interval to i8*, !dbg !8342
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 48, i32 8, i1 false), !dbg !8342
  %6 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8343
  %7 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8344
  %call = call i32 @read_interval_packets(%struct.WriterContext* %6, %struct.InputFile* %7, %struct.ReadInterval* %interval, i64* %cur_ts), !dbg !8345
  store i32 %call, i32* %ret, align 4, !dbg !8346
  br label %if.end6, !dbg !8347

if.else:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8348
  br label %for.cond, !dbg !8351

for.cond:                                         ; preds = %for.inc, %if.else
  %8 = load i32, i32* %i, align 4, !dbg !8352
  %9 = load i32, i32* @read_intervals_nb, align 4, !dbg !8355
  %cmp2 = icmp slt i32 %8, %9, !dbg !8356
  br i1 %cmp2, label %for.body, label %for.end, !dbg !8357

for.body:                                         ; preds = %for.cond
  %10 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8358
  %11 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8360
  %12 = load i32, i32* %i, align 4, !dbg !8361
  %idxprom = sext i32 %12 to i64, !dbg !8362
  %13 = load %struct.ReadInterval*, %struct.ReadInterval** @read_intervals, align 8, !dbg !8362
  %arrayidx = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %13, i64 %idxprom, !dbg !8362
  %call3 = call i32 @read_interval_packets(%struct.WriterContext* %10, %struct.InputFile* %11, %struct.ReadInterval* %arrayidx, i64* %cur_ts), !dbg !8363
  store i32 %call3, i32* %ret, align 4, !dbg !8364
  %14 = load i32, i32* %ret, align 4, !dbg !8365
  %cmp4 = icmp slt i32 %14, 0, !dbg !8367
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !8368

if.then5:                                         ; preds = %for.body
  br label %for.end, !dbg !8369

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8370

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !dbg !8371
  %inc = add nsw i32 %15, 1, !dbg !8371
  store i32 %inc, i32* %i, align 4, !dbg !8371
  br label %for.cond, !dbg !8373, !llvm.loop !8374

for.end:                                          ; preds = %if.then5, %for.cond
  br label %if.end6

if.end6:                                          ; preds = %for.end, %if.then
  %16 = load i32, i32* %ret, align 4, !dbg !8376
  ret i32 %16, !dbg !8377
}

; Function Attrs: nounwind uwtable
define internal i32 @show_programs(%struct.WriterContext* %w, %struct.InputFile* %ifile) #0 !dbg !8378 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %ifile.addr = alloca %struct.InputFile*, align 8
  %fmt_ctx = alloca %struct.AVFormatContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %program = alloca %struct.AVProgram*, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !8379, metadata !2571), !dbg !8380
  store %struct.InputFile* %ifile, %struct.InputFile** %ifile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr, metadata !8381, metadata !2571), !dbg !8382
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx, metadata !8383, metadata !2571), !dbg !8384
  %0 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8385
  %fmt_ctx1 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %0, i32 0, i32 0, !dbg !8386
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx1, align 8, !dbg !8386
  store %struct.AVFormatContext* %1, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8384
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8387, metadata !2571), !dbg !8388
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8389, metadata !2571), !dbg !8390
  store i32 0, i32* %ret, align 4, !dbg !8390
  %2 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8391
  call void @writer_print_section_header(%struct.WriterContext* %2, i32 33), !dbg !8392
  store i32 0, i32* %i, align 4, !dbg !8393
  br label %for.cond, !dbg !8395

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !8396
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8399
  %nb_programs = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 20, !dbg !8400
  %5 = load i32, i32* %nb_programs, align 4, !dbg !8400
  %cmp = icmp ult i32 %3, %5, !dbg !8401
  br i1 %cmp, label %for.body, label %for.end, !dbg !8402

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVProgram** %program, metadata !8403, metadata !2571), !dbg !8405
  %6 = load i32, i32* %i, align 4, !dbg !8406
  %idxprom = sext i32 %6 to i64, !dbg !8407
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8407
  %programs = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 21, !dbg !8408
  %8 = load %struct.AVProgram**, %struct.AVProgram*** %programs, align 8, !dbg !8408
  %arrayidx = getelementptr inbounds %struct.AVProgram*, %struct.AVProgram** %8, i64 %idxprom, !dbg !8407
  %9 = load %struct.AVProgram*, %struct.AVProgram** %arrayidx, align 8, !dbg !8407
  store %struct.AVProgram* %9, %struct.AVProgram** %program, align 8, !dbg !8405
  %10 = load %struct.AVProgram*, %struct.AVProgram** %program, align 8, !dbg !8409
  %tobool = icmp ne %struct.AVProgram* %10, null, !dbg !8409
  br i1 %tobool, label %if.end, label %if.then, !dbg !8411

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !8412

if.end:                                           ; preds = %for.body
  %11 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8413
  %12 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8414
  %13 = load %struct.AVProgram*, %struct.AVProgram** %program, align 8, !dbg !8415
  %call = call i32 @show_program(%struct.WriterContext* %11, %struct.InputFile* %12, %struct.AVProgram* %13), !dbg !8416
  store i32 %call, i32* %ret, align 4, !dbg !8417
  %14 = load i32, i32* %ret, align 4, !dbg !8418
  %cmp2 = icmp slt i32 %14, 0, !dbg !8420
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8421

if.then3:                                         ; preds = %if.end
  br label %for.end, !dbg !8422

if.end4:                                          ; preds = %if.end
  br label %for.inc, !dbg !8423

for.inc:                                          ; preds = %if.end4, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !8424
  %inc = add nsw i32 %15, 1, !dbg !8424
  store i32 %inc, i32* %i, align 4, !dbg !8424
  br label %for.cond, !dbg !8426, !llvm.loop !8427

for.end:                                          ; preds = %if.then3, %for.cond
  %16 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8429
  call void @writer_print_section_footer(%struct.WriterContext* %16), !dbg !8430
  %17 = load i32, i32* %ret, align 4, !dbg !8431
  ret i32 %17, !dbg !8432
}

; Function Attrs: nounwind uwtable
define internal i32 @show_streams(%struct.WriterContext* %w, %struct.InputFile* %ifile) #0 !dbg !8433 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %ifile.addr = alloca %struct.InputFile*, align 8
  %fmt_ctx = alloca %struct.AVFormatContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !8434, metadata !2571), !dbg !8435
  store %struct.InputFile* %ifile, %struct.InputFile** %ifile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr, metadata !8436, metadata !2571), !dbg !8437
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx, metadata !8438, metadata !2571), !dbg !8439
  %0 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8440
  %fmt_ctx1 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %0, i32 0, i32 0, !dbg !8441
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx1, align 8, !dbg !8441
  store %struct.AVFormatContext* %1, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8439
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8442, metadata !2571), !dbg !8443
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8444, metadata !2571), !dbg !8445
  store i32 0, i32* %ret, align 4, !dbg !8445
  %2 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8446
  call void @writer_print_section_header(%struct.WriterContext* %2, i32 37), !dbg !8447
  store i32 0, i32* %i, align 4, !dbg !8448
  br label %for.cond, !dbg !8450

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !8451
  %4 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8454
  %nb_streams = getelementptr inbounds %struct.InputFile, %struct.InputFile* %4, i32 0, i32 2, !dbg !8455
  %5 = load i32, i32* %nb_streams, align 8, !dbg !8455
  %cmp = icmp slt i32 %3, %5, !dbg !8456
  br i1 %cmp, label %for.body, label %for.end, !dbg !8457

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !8458
  %idxprom = sext i32 %6 to i64, !dbg !8460
  %7 = load i32*, i32** @selected_streams, align 8, !dbg !8460
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !8460
  %8 = load i32, i32* %arrayidx, align 4, !dbg !8460
  %tobool = icmp ne i32 %8, 0, !dbg !8460
  br i1 %tobool, label %if.then, label %if.end6, !dbg !8461

if.then:                                          ; preds = %for.body
  %9 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8462
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8464
  %11 = load i32, i32* %i, align 4, !dbg !8465
  %12 = load i32, i32* %i, align 4, !dbg !8466
  %idxprom2 = sext i32 %12 to i64, !dbg !8467
  %13 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8467
  %streams = getelementptr inbounds %struct.InputFile, %struct.InputFile* %13, i32 0, i32 1, !dbg !8468
  %14 = load %struct.InputStream*, %struct.InputStream** %streams, align 8, !dbg !8468
  %arrayidx3 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %14, i64 %idxprom2, !dbg !8467
  %call = call i32 @show_stream(%struct.WriterContext* %9, %struct.AVFormatContext* %10, i32 %11, %struct.InputStream* %arrayidx3, i32 0), !dbg !8469
  store i32 %call, i32* %ret, align 4, !dbg !8470
  %15 = load i32, i32* %ret, align 4, !dbg !8471
  %cmp4 = icmp slt i32 %15, 0, !dbg !8473
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !8474

if.then5:                                         ; preds = %if.then
  br label %for.end, !dbg !8475

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !8476

if.end6:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !8477

for.inc:                                          ; preds = %if.end6
  %16 = load i32, i32* %i, align 4, !dbg !8479
  %inc = add nsw i32 %16, 1, !dbg !8479
  store i32 %inc, i32* %i, align 4, !dbg !8479
  br label %for.cond, !dbg !8481, !llvm.loop !8482

for.end:                                          ; preds = %if.then5, %for.cond
  %17 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8484
  call void @writer_print_section_footer(%struct.WriterContext* %17), !dbg !8485
  %18 = load i32, i32* %ret, align 4, !dbg !8486
  ret i32 %18, !dbg !8487
}

; Function Attrs: nounwind uwtable
define internal i32 @show_chapters(%struct.WriterContext* %w, %struct.InputFile* %ifile) #0 !dbg !8488 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %ifile.addr = alloca %struct.InputFile*, align 8
  %fmt_ctx = alloca %struct.AVFormatContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %chapter = alloca %struct.AVChapter*, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !8489, metadata !2571), !dbg !8490
  store %struct.InputFile* %ifile, %struct.InputFile** %ifile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr, metadata !8491, metadata !2571), !dbg !8492
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx, metadata !8493, metadata !2571), !dbg !8494
  %0 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8495
  %fmt_ctx1 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %0, i32 0, i32 0, !dbg !8496
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx1, align 8, !dbg !8496
  store %struct.AVFormatContext* %1, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8494
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8497, metadata !2571), !dbg !8498
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8499, metadata !2571), !dbg !8500
  store i32 0, i32* %ret, align 4, !dbg !8500
  %2 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8501
  call void @writer_print_section_header(%struct.WriterContext* %2, i32 2), !dbg !8502
  store i32 0, i32* %i, align 4, !dbg !8503
  br label %for.cond, !dbg !8505

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !8506
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8509
  %nb_chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 27, !dbg !8510
  %5 = load i32, i32* %nb_chapters, align 4, !dbg !8510
  %cmp = icmp ult i32 %3, %5, !dbg !8511
  br i1 %cmp, label %for.body, label %for.end, !dbg !8512

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVChapter** %chapter, metadata !8513, metadata !2571), !dbg !8515
  %6 = load i32, i32* %i, align 4, !dbg !8516
  %idxprom = sext i32 %6 to i64, !dbg !8517
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8517
  %chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 28, !dbg !8518
  %8 = load %struct.AVChapter**, %struct.AVChapter*** %chapters, align 8, !dbg !8518
  %arrayidx = getelementptr inbounds %struct.AVChapter*, %struct.AVChapter** %8, i64 %idxprom, !dbg !8517
  %9 = load %struct.AVChapter*, %struct.AVChapter** %arrayidx, align 8, !dbg !8517
  store %struct.AVChapter* %9, %struct.AVChapter** %chapter, align 8, !dbg !8515
  %10 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8519
  call void @writer_print_section_header(%struct.WriterContext* %10, i32 0), !dbg !8520
  %11 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8521
  %12 = load %struct.AVChapter*, %struct.AVChapter** %chapter, align 8, !dbg !8522
  %id = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %12, i32 0, i32 0, !dbg !8523
  %13 = load i32, i32* %id, align 8, !dbg !8523
  %conv = sext i32 %13 to i64, !dbg !8522
  call void @writer_print_integer(%struct.WriterContext* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.548, i32 0, i32 0), i64 %conv), !dbg !8524
  %14 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8525
  %15 = load %struct.AVChapter*, %struct.AVChapter** %chapter, align 8, !dbg !8526
  %time_base = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %15, i32 0, i32 1, !dbg !8527
  %16 = bitcast %struct.AVRational* %time_base to i64*, !dbg !8528
  %17 = load i64, i64* %16, align 4, !dbg !8528
  call void @writer_print_rational(%struct.WriterContext* %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.551, i32 0, i32 0), i64 %17, i8 signext 47), !dbg !8528
  %18 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8529
  %19 = load %struct.AVChapter*, %struct.AVChapter** %chapter, align 8, !dbg !8530
  %start = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %19, i32 0, i32 2, !dbg !8531
  %20 = load i64, i64* %start, align 8, !dbg !8531
  call void @writer_print_integer(%struct.WriterContext* %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.573, i32 0, i32 0), i64 %20), !dbg !8532
  %21 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8533
  %22 = load %struct.AVChapter*, %struct.AVChapter** %chapter, align 8, !dbg !8534
  %start2 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %22, i32 0, i32 2, !dbg !8535
  %23 = load i64, i64* %start2, align 8, !dbg !8535
  %24 = load %struct.AVChapter*, %struct.AVChapter** %chapter, align 8, !dbg !8536
  %time_base3 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %24, i32 0, i32 1, !dbg !8537
  call void @writer_print_time(%struct.WriterContext* %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.523, i32 0, i32 0), i64 %23, %struct.AVRational* %time_base3, i32 0), !dbg !8538
  %25 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8539
  %26 = load %struct.AVChapter*, %struct.AVChapter** %chapter, align 8, !dbg !8540
  %end = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %26, i32 0, i32 3, !dbg !8541
  %27 = load i64, i64* %end, align 8, !dbg !8541
  call void @writer_print_integer(%struct.WriterContext* %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.574, i32 0, i32 0), i64 %27), !dbg !8542
  %28 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8543
  %29 = load %struct.AVChapter*, %struct.AVChapter** %chapter, align 8, !dbg !8544
  %end4 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %29, i32 0, i32 3, !dbg !8545
  %30 = load i64, i64* %end4, align 8, !dbg !8545
  %31 = load %struct.AVChapter*, %struct.AVChapter** %chapter, align 8, !dbg !8546
  %time_base5 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %31, i32 0, i32 1, !dbg !8547
  call void @writer_print_time(%struct.WriterContext* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.525, i32 0, i32 0), i64 %30, %struct.AVRational* %time_base5, i32 0), !dbg !8548
  %32 = load i32, i32* @do_show_chapter_tags, align 4, !dbg !8549
  %tobool = icmp ne i32 %32, 0, !dbg !8549
  br i1 %tobool, label %if.then, label %if.end, !dbg !8551

if.then:                                          ; preds = %for.body
  %33 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8552
  %34 = load %struct.AVChapter*, %struct.AVChapter** %chapter, align 8, !dbg !8553
  %metadata = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %34, i32 0, i32 4, !dbg !8554
  %35 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !8554
  %call = call i32 @show_tags(%struct.WriterContext* %33, %struct.AVDictionary* %35, i32 1), !dbg !8555
  store i32 %call, i32* %ret, align 4, !dbg !8556
  br label %if.end, !dbg !8557

if.end:                                           ; preds = %if.then, %for.body
  %36 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8558
  call void @writer_print_section_footer(%struct.WriterContext* %36), !dbg !8559
  br label %for.inc, !dbg !8560

for.inc:                                          ; preds = %if.end
  %37 = load i32, i32* %i, align 4, !dbg !8561
  %inc = add nsw i32 %37, 1, !dbg !8561
  store i32 %inc, i32* %i, align 4, !dbg !8561
  br label %for.cond, !dbg !8563, !llvm.loop !8564

for.end:                                          ; preds = %for.cond
  %38 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8566
  call void @writer_print_section_footer(%struct.WriterContext* %38), !dbg !8567
  %39 = load i32, i32* %ret, align 4, !dbg !8568
  ret i32 %39, !dbg !8569
}

; Function Attrs: nounwind uwtable
define internal i32 @show_format(%struct.WriterContext* %w, %struct.InputFile* %ifile) #0 !dbg !8570 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %ifile.addr = alloca %struct.InputFile*, align 8
  %fmt_ctx = alloca %struct.AVFormatContext*, align 8
  %val_str = alloca [128 x i8], align 16
  %size = alloca i64, align 8
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  %.compoundliteral15 = alloca %struct.AVRational, align 4
  %uv = alloca %struct.unit_value, align 8
  %uv29 = alloca %struct.unit_value, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !8571, metadata !2571), !dbg !8572
  store %struct.InputFile* %ifile, %struct.InputFile** %ifile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr, metadata !8573, metadata !2571), !dbg !8574
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx, metadata !8575, metadata !2571), !dbg !8576
  %0 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8577
  %fmt_ctx1 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %0, i32 0, i32 0, !dbg !8578
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx1, align 8, !dbg !8578
  store %struct.AVFormatContext* %1, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8576
  call void @llvm.dbg.declare(metadata [128 x i8]* %val_str, metadata !8579, metadata !2571), !dbg !8580
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8581, metadata !2571), !dbg !8582
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8583
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 4, !dbg !8584
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8584
  %tobool = icmp ne %struct.AVIOContext* %3, null, !dbg !8583
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8583

cond.true:                                        ; preds = %entry
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8585
  %pb2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 4, !dbg !8587
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb2, align 8, !dbg !8587
  %call = call i64 @avio_size(%struct.AVIOContext* %5), !dbg !8588
  br label %cond.end, !dbg !8589

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8590

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ -1, %cond.false ], !dbg !8592
  store i64 %cond, i64* %size, align 8, !dbg !8594
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8595, metadata !2571), !dbg !8596
  store i32 0, i32* %ret, align 4, !dbg !8596
  %6 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8597
  call void @writer_print_section_header(%struct.WriterContext* %6, i32 4), !dbg !8598
  %7 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8599
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8600
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i32 0, i32 9, !dbg !8601
  %9 = load i8*, i8** %url, align 8, !dbg !8601
  %call3 = call i32 @writer_print_string(%struct.WriterContext* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.575, i32 0, i32 0), i8* %9, i32 2), !dbg !8602
  %10 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8603
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8604
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %11, i32 0, i32 6, !dbg !8605
  %12 = load i32, i32* %nb_streams, align 4, !dbg !8605
  %conv = zext i32 %12 to i64, !dbg !8604
  call void @writer_print_integer(%struct.WriterContext* %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.519, i32 0, i32 0), i64 %conv), !dbg !8606
  %13 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8607
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8608
  %nb_programs = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 20, !dbg !8609
  %15 = load i32, i32* %nb_programs, align 4, !dbg !8609
  %conv4 = zext i32 %15 to i64, !dbg !8608
  call void @writer_print_integer(%struct.WriterContext* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.576, i32 0, i32 0), i64 %conv4), !dbg !8610
  %16 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8611
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8612
  %iformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %17, i32 0, i32 1, !dbg !8613
  %18 = load %struct.AVInputFormat*, %struct.AVInputFormat** %iformat, align 8, !dbg !8613
  %name = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %18, i32 0, i32 0, !dbg !8614
  %19 = load i8*, i8** %name, align 8, !dbg !8614
  %call5 = call i32 @writer_print_string(%struct.WriterContext* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.577, i32 0, i32 0), i8* %19, i32 0), !dbg !8615
  %20 = load i32, i32* @do_bitexact, align 4, !dbg !8616
  %tobool6 = icmp ne i32 %20, 0, !dbg !8616
  br i1 %tobool6, label %if.end14, label %if.then, !dbg !8618

if.then:                                          ; preds = %cond.end
  %21 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8619
  %iformat7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %21, i32 0, i32 1, !dbg !8622
  %22 = load %struct.AVInputFormat*, %struct.AVInputFormat** %iformat7, align 8, !dbg !8622
  %long_name = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %22, i32 0, i32 1, !dbg !8623
  %23 = load i8*, i8** %long_name, align 8, !dbg !8623
  %tobool8 = icmp ne i8* %23, null, !dbg !8619
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !8624

if.then9:                                         ; preds = %if.then
  %24 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8625
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8627
  %iformat10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %25, i32 0, i32 1, !dbg !8628
  %26 = load %struct.AVInputFormat*, %struct.AVInputFormat** %iformat10, align 8, !dbg !8628
  %long_name11 = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %26, i32 0, i32 1, !dbg !8629
  %27 = load i8*, i8** %long_name11, align 8, !dbg !8629
  %call12 = call i32 @writer_print_string(%struct.WriterContext* %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.578, i32 0, i32 0), i8* %27, i32 0), !dbg !8630
  br label %if.end, !dbg !8630

if.else:                                          ; preds = %if.then
  %28 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8631
  %call13 = call i32 @writer_print_string(%struct.WriterContext* %28, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.578, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !8632
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  br label %if.end14, !dbg !8633

if.end14:                                         ; preds = %if.end, %cond.end
  %29 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8634
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8635
  %start_time = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %30, i32 0, i32 10, !dbg !8636
  %31 = load i64, i64* %start_time, align 8, !dbg !8636
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !8637
  store i32 1, i32* %num, align 4, !dbg !8637
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !8637
  store i32 1000000, i32* %den, align 4, !dbg !8637
  call void @writer_print_time(%struct.WriterContext* %29, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.523, i32 0, i32 0), i64 %31, %struct.AVRational* %.compoundliteral, i32 0), !dbg !8638
  %32 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8639
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8640
  %duration = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %33, i32 0, i32 11, !dbg !8641
  %34 = load i64, i64* %duration, align 8, !dbg !8641
  %num16 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral15, i32 0, i32 0, !dbg !8642
  store i32 1, i32* %num16, align 4, !dbg !8642
  %den17 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral15, i32 0, i32 1, !dbg !8642
  store i32 1000000, i32* %den17, align 4, !dbg !8642
  call void @writer_print_time(%struct.WriterContext* %32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.417, i32 0, i32 0), i64 %34, %struct.AVRational* %.compoundliteral15, i32 0), !dbg !8643
  %35 = load i64, i64* %size, align 8, !dbg !8644
  %cmp = icmp sge i64 %35, 0, !dbg !8646
  br i1 %cmp, label %if.then19, label %if.else22, !dbg !8647

if.then19:                                        ; preds = %if.end14
  br label %do.body, !dbg !8648, !llvm.loop !8650

do.body:                                          ; preds = %if.then19
  call void @llvm.dbg.declare(metadata %struct.unit_value* %uv, metadata !8652, metadata !2571), !dbg !8662
  %36 = load i64, i64* %size, align 8, !dbg !8663
  %val = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 0, !dbg !8665
  %i = bitcast %union.anon.1* %val to i64*, !dbg !8666
  store i64 %36, i64* %i, align 8, !dbg !8667
  %unit = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 1, !dbg !8668
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @unit_byte_str, i32 0, i32 0), i8** %unit, align 8, !dbg !8669
  %37 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8670
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %val_str, i32 0, i32 0, !dbg !8671
  %38 = bitcast %struct.unit_value* %uv to { i64, i8* }*, !dbg !8672
  %39 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %38, i32 0, i32 0, !dbg !8672
  %40 = load i64, i64* %39, align 8, !dbg !8672
  %41 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %38, i32 0, i32 1, !dbg !8672
  %42 = load i8*, i8** %41, align 8, !dbg !8672
  %call20 = call i8* @value_string(i8* %arraydecay, i32 128, i64 %40, i8* %42), !dbg !8672
  %call21 = call i32 @writer_print_string(%struct.WriterContext* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.421, i32 0, i32 0), i8* %call20, i32 0), !dbg !8673
  br label %do.end, !dbg !8675

do.end:                                           ; preds = %do.body
  br label %if.end24, !dbg !8676

if.else22:                                        ; preds = %if.end14
  %43 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8678
  %call23 = call i32 @writer_print_string(%struct.WriterContext* %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.421, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !8679
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %do.end
  %44 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8680
  %bit_rate = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %44, i32 0, i32 12, !dbg !8682
  %45 = load i64, i64* %bit_rate, align 8, !dbg !8682
  %cmp25 = icmp sgt i64 %45, 0, !dbg !8683
  br i1 %cmp25, label %if.then27, label %if.else38, !dbg !8684

if.then27:                                        ; preds = %if.end24
  br label %do.body28, !dbg !8685, !llvm.loop !8687

do.body28:                                        ; preds = %if.then27
  call void @llvm.dbg.declare(metadata %struct.unit_value* %uv29, metadata !8689, metadata !2571), !dbg !8691
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8692
  %bit_rate30 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %46, i32 0, i32 12, !dbg !8694
  %47 = load i64, i64* %bit_rate30, align 8, !dbg !8694
  %val31 = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv29, i32 0, i32 0, !dbg !8695
  %i32 = bitcast %union.anon.1* %val31 to i64*, !dbg !8696
  store i64 %47, i64* %i32, align 8, !dbg !8697
  %unit33 = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv29, i32 0, i32 1, !dbg !8698
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @unit_bit_per_second_str, i32 0, i32 0), i8** %unit33, align 8, !dbg !8699
  %48 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8700
  %arraydecay34 = getelementptr inbounds [128 x i8], [128 x i8]* %val_str, i32 0, i32 0, !dbg !8701
  %49 = bitcast %struct.unit_value* %uv29 to { i64, i8* }*, !dbg !8702
  %50 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %49, i32 0, i32 0, !dbg !8702
  %51 = load i64, i64* %50, align 8, !dbg !8702
  %52 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %49, i32 0, i32 1, !dbg !8702
  %53 = load i8*, i8** %52, align 8, !dbg !8702
  %call35 = call i8* @value_string(i8* %arraydecay34, i32 128, i64 %51, i8* %53), !dbg !8702
  %call36 = call i32 @writer_print_string(%struct.WriterContext* %48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.553, i32 0, i32 0), i8* %call35, i32 0), !dbg !8703
  br label %do.end37, !dbg !8705

do.end37:                                         ; preds = %do.body28
  br label %if.end40, !dbg !8706

if.else38:                                        ; preds = %if.end24
  %54 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8708
  %call39 = call i32 @writer_print_string(%struct.WriterContext* %54, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.553, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !8709
  br label %if.end40

if.end40:                                         ; preds = %if.else38, %do.end37
  %55 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8710
  %56 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8711
  %probe_score = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %56, i32 0, i32 51, !dbg !8712
  %57 = load i32, i32* %probe_score, align 4, !dbg !8712
  %conv41 = sext i32 %57 to i64, !dbg !8711
  call void @writer_print_integer(%struct.WriterContext* %55, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.579, i32 0, i32 0), i64 %conv41), !dbg !8713
  %58 = load i32, i32* @do_show_format_tags, align 4, !dbg !8714
  %tobool42 = icmp ne i32 %58, 0, !dbg !8714
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !8716

if.then43:                                        ; preds = %if.end40
  %59 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8717
  %60 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8718
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %60, i32 0, i32 29, !dbg !8719
  %61 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !8719
  %call44 = call i32 @show_tags(%struct.WriterContext* %59, %struct.AVDictionary* %61, i32 5), !dbg !8720
  store i32 %call44, i32* %ret, align 4, !dbg !8721
  br label %if.end45, !dbg !8722

if.end45:                                         ; preds = %if.then43, %if.end40
  %62 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !8723
  call void @writer_print_section_footer(%struct.WriterContext* %62), !dbg !8724
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8725
  %call46 = call i32 @fflush(%struct._IO_FILE* %63), !dbg !8726
  %64 = load i32, i32* %ret, align 4, !dbg !8727
  ret i32 %64, !dbg !8728
}

; Function Attrs: nounwind uwtable
define internal void @close_input_file(%struct.InputFile* %ifile) #0 !dbg !8729 {
entry:
  %ifile.addr = alloca %struct.InputFile*, align 8
  %i = alloca i32, align 4
  store %struct.InputFile* %ifile, %struct.InputFile** %ifile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr, metadata !8732, metadata !2571), !dbg !8733
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8734, metadata !2571), !dbg !8735
  store i32 0, i32* %i, align 4, !dbg !8736
  br label %for.cond, !dbg !8738

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8739
  %1 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8742
  %nb_streams = getelementptr inbounds %struct.InputFile, %struct.InputFile* %1, i32 0, i32 2, !dbg !8743
  %2 = load i32, i32* %nb_streams, align 8, !dbg !8743
  %cmp = icmp slt i32 %0, %2, !dbg !8744
  br i1 %cmp, label %for.body, label %for.end, !dbg !8745

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !8746
  %idxprom = sext i32 %3 to i64, !dbg !8748
  %4 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8748
  %streams = getelementptr inbounds %struct.InputFile, %struct.InputFile* %4, i32 0, i32 1, !dbg !8749
  %5 = load %struct.InputStream*, %struct.InputStream** %streams, align 8, !dbg !8749
  %arrayidx = getelementptr inbounds %struct.InputStream, %struct.InputStream* %5, i64 %idxprom, !dbg !8748
  %st = getelementptr inbounds %struct.InputStream, %struct.InputStream* %arrayidx, i32 0, i32 0, !dbg !8750
  %6 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !8750
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %6, i32 0, i32 19, !dbg !8751
  %7 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !8751
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %7, i32 0, i32 1, !dbg !8752
  %8 = load i32, i32* %codec_id, align 4, !dbg !8752
  %cmp1 = icmp ne i32 %8, 0, !dbg !8753
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8754

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !8755
  %idxprom2 = sext i32 %9 to i64, !dbg !8756
  %10 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8756
  %streams3 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %10, i32 0, i32 1, !dbg !8757
  %11 = load %struct.InputStream*, %struct.InputStream** %streams3, align 8, !dbg !8757
  %arrayidx4 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %11, i64 %idxprom2, !dbg !8756
  %dec_ctx = getelementptr inbounds %struct.InputStream, %struct.InputStream* %arrayidx4, i32 0, i32 1, !dbg !8758
  call void @avcodec_free_context(%struct.AVCodecContext** %dec_ctx), !dbg !8759
  br label %if.end, !dbg !8759

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !8760

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !8762
  %inc = add nsw i32 %12, 1, !dbg !8762
  store i32 %inc, i32* %i, align 4, !dbg !8762
  br label %for.cond, !dbg !8764, !llvm.loop !8765

for.end:                                          ; preds = %for.cond
  %13 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8767
  %streams5 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %13, i32 0, i32 1, !dbg !8768
  %14 = bitcast %struct.InputStream** %streams5 to i8*, !dbg !8769
  call void @av_freep(i8* %14), !dbg !8770
  %15 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8771
  %nb_streams6 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %15, i32 0, i32 2, !dbg !8772
  store i32 0, i32* %nb_streams6, align 8, !dbg !8773
  %16 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8774
  %fmt_ctx = getelementptr inbounds %struct.InputFile, %struct.InputFile* %16, i32 0, i32 0, !dbg !8775
  call void @avformat_close_input(%struct.AVFormatContext** %fmt_ctx), !dbg !8776
  ret void, !dbg !8777
}

declare %struct.AVFormatContext* @avformat_alloc_context() #2

declare void @print_error(i8*, i32) #2

declare i32 @avformat_open_input(%struct.AVFormatContext**, i8*, %struct.AVInputFormat*, %struct.AVDictionary**) #2

declare %struct.AVDictionary** @setup_find_stream_info_opts(%struct.AVFormatContext*, %struct.AVDictionary*) #2

declare i32 @avformat_find_stream_info(%struct.AVFormatContext*, %struct.AVDictionary**) #2

declare void @av_dump_format(%struct.AVFormatContext*, i32, i8*, i32) #2

declare i8* @av_mallocz_array(i64, i64) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #6

declare %struct.AVCodec* @avcodec_find_decoder(i32) #2

declare %struct.AVDictionary* @filter_codec_opts(%struct.AVDictionary*, i32, %struct.AVFormatContext*, %struct.AVStream*, %struct.AVCodec*) #2

declare %struct.AVCodecContext* @avcodec_alloc_context3(%struct.AVCodec*) #2

declare i32 @avcodec_parameters_to_context(%struct.AVCodecContext*, %struct.AVCodecParameters*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #7

declare i32 @avcodec_open2(%struct.AVCodecContext*, %struct.AVCodec*, %struct.AVDictionary**) #2

; Function Attrs: nounwind uwtable
define internal i32 @read_interval_packets(%struct.WriterContext* %w, %struct.InputFile* %ifile, %struct.ReadInterval* %interval, i64* %cur_ts) #0 !dbg !8778 {
entry:
  %retval.i161 = alloca i32, align 4
  %w.addr.i162 = alloca %struct.WriterContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr.i162, metadata !8781, metadata !2571), !dbg !8785
  %ifile.addr.i163 = alloca %struct.InputFile*, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr.i163, metadata !8792, metadata !2571), !dbg !8793
  %frame.addr.i164 = alloca %struct.AVFrame*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr.i164, metadata !8794, metadata !2571), !dbg !8795
  %pkt.addr.i165 = alloca %struct.AVPacket*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr.i165, metadata !8796, metadata !2571), !dbg !8797
  %packet_new.addr.i166 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %packet_new.addr.i166, metadata !8798, metadata !2571), !dbg !8799
  %fmt_ctx.i167 = alloca %struct.AVFormatContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx.i167, metadata !8800, metadata !2571), !dbg !8801
  %dec_ctx.i168 = alloca %struct.AVCodecContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %dec_ctx.i168, metadata !8802, metadata !2571), !dbg !8803
  %par.i169 = alloca %struct.AVCodecParameters*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.i169, metadata !8804, metadata !2571), !dbg !8805
  %sub.i170 = alloca %struct.AVSubtitle, align 8
  call void @llvm.dbg.declare(metadata %struct.AVSubtitle* %sub.i170, metadata !8806, metadata !2571), !dbg !8808
  %ret.i171 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i171, metadata !8809, metadata !2571), !dbg !8810
  %got_frame.i172 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %got_frame.i172, metadata !8811, metadata !2571), !dbg !8812
  %is_sub.i173 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %is_sub.i173, metadata !8813, metadata !2571), !dbg !8816
  %retval.i = alloca i32, align 4
  %w.addr.i = alloca %struct.WriterContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr.i, metadata !8781, metadata !2571), !dbg !8817
  %ifile.addr.i = alloca %struct.InputFile*, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr.i, metadata !8792, metadata !2571), !dbg !8825
  %frame.addr.i = alloca %struct.AVFrame*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr.i, metadata !8794, metadata !2571), !dbg !8826
  %pkt.addr.i = alloca %struct.AVPacket*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr.i, metadata !8796, metadata !2571), !dbg !8827
  %packet_new.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %packet_new.addr.i, metadata !8798, metadata !2571), !dbg !8828
  %fmt_ctx.i = alloca %struct.AVFormatContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx.i, metadata !8800, metadata !2571), !dbg !8829
  %dec_ctx.i = alloca %struct.AVCodecContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %dec_ctx.i, metadata !8802, metadata !2571), !dbg !8830
  %par.i = alloca %struct.AVCodecParameters*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.i, metadata !8804, metadata !2571), !dbg !8831
  %sub.i = alloca %struct.AVSubtitle, align 8
  call void @llvm.dbg.declare(metadata %struct.AVSubtitle* %sub.i, metadata !8806, metadata !2571), !dbg !8832
  %ret.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i, metadata !8809, metadata !2571), !dbg !8833
  %got_frame.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %got_frame.i, metadata !8811, metadata !2571), !dbg !8834
  %is_sub.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %is_sub.i, metadata !8813, metadata !2571), !dbg !8835
  %w.addr = alloca %struct.WriterContext*, align 8
  %ifile.addr = alloca %struct.InputFile*, align 8
  %interval.addr = alloca %struct.ReadInterval*, align 8
  %cur_ts.addr = alloca i64*, align 8
  %fmt_ctx = alloca %struct.AVFormatContext*, align 8
  %pkt = alloca %struct.AVPacket, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %frame_count = alloca i32, align 4
  %start = alloca i64, align 8
  %end = alloca i64, align 8
  %has_start = alloca i32, align 4
  %has_end = alloca i32, align 4
  %target = alloca i64, align 8
  %.compoundliteral = alloca [32 x i8], align 1
  %.compoundliteral13 = alloca %struct.AVRational, align 4
  %.compoundliteral18 = alloca [64 x i8], align 1
  %tb = alloca %struct.AVRational, align 4
  %.compoundliteral78 = alloca %struct.AVRational, align 4
  %packet_new = alloca i32, align 4
  %.compoundliteral148 = alloca i32, align 4
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !8836, metadata !2571), !dbg !8837
  store %struct.InputFile* %ifile, %struct.InputFile** %ifile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr, metadata !8838, metadata !2571), !dbg !8839
  store %struct.ReadInterval* %interval, %struct.ReadInterval** %interval.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReadInterval** %interval.addr, metadata !8840, metadata !2571), !dbg !8841
  store i64* %cur_ts, i64** %cur_ts.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %cur_ts.addr, metadata !8842, metadata !2571), !dbg !8843
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx, metadata !8844, metadata !2571), !dbg !8845
  %0 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !8846
  %fmt_ctx1 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %0, i32 0, i32 0, !dbg !8847
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx1, align 8, !dbg !8847
  store %struct.AVFormatContext* %1, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8845
  call void @llvm.dbg.declare(metadata %struct.AVPacket* %pkt, metadata !8848, metadata !2571), !dbg !8849
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !8850, metadata !2571), !dbg !8851
  store %struct.AVFrame* null, %struct.AVFrame** %frame, align 8, !dbg !8851
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8852, metadata !2571), !dbg !8853
  store i32 0, i32* %ret, align 4, !dbg !8853
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8854, metadata !2571), !dbg !8855
  store i32 0, i32* %i, align 4, !dbg !8855
  call void @llvm.dbg.declare(metadata i32* %frame_count, metadata !8856, metadata !2571), !dbg !8857
  store i32 0, i32* %frame_count, align 4, !dbg !8857
  call void @llvm.dbg.declare(metadata i64* %start, metadata !8858, metadata !2571), !dbg !8859
  store i64 -9223372036854775807, i64* %start, align 8, !dbg !8859
  call void @llvm.dbg.declare(metadata i64* %end, metadata !8860, metadata !2571), !dbg !8861
  %2 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !8862
  %end2 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %2, i32 0, i32 2, !dbg !8863
  %3 = load i64, i64* %end2, align 8, !dbg !8863
  store i64 %3, i64* %end, align 8, !dbg !8861
  call void @llvm.dbg.declare(metadata i32* %has_start, metadata !8864, metadata !2571), !dbg !8865
  store i32 0, i32* %has_start, align 4, !dbg !8865
  call void @llvm.dbg.declare(metadata i32* %has_end, metadata !8866, metadata !2571), !dbg !8867
  %4 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !8868
  %has_end3 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %4, i32 0, i32 4, !dbg !8869
  %5 = load i32, i32* %has_end3, align 4, !dbg !8869
  %tobool = icmp ne i32 %5, 0, !dbg !8868
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8870

land.rhs:                                         ; preds = %entry
  %6 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !8871
  %end_is_offset = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %6, i32 0, i32 6, !dbg !8873
  %7 = load i32, i32* %end_is_offset, align 4, !dbg !8873
  %tobool4 = icmp ne i32 %7, 0, !dbg !8874
  %lnot = xor i1 %tobool4, true, !dbg !8874
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %8 to i32, !dbg !8875
  store i32 %land.ext, i32* %has_end, align 4, !dbg !8877
  call void @av_init_packet(%struct.AVPacket* %pkt), !dbg !8878
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 40, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.405, i32 0, i32 0)), !dbg !8879
  %9 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !8880
  call void @log_read_interval(%struct.ReadInterval* %9, i8* null, i32 40), !dbg !8881
  %10 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !8882
  %has_start5 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %10, i32 0, i32 3, !dbg !8884
  %11 = load i32, i32* %has_start5, align 8, !dbg !8884
  %tobool6 = icmp ne i32 %11, 0, !dbg !8882
  br i1 %tobool6, label %if.then, label %if.end23, !dbg !8885

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata i64* %target, metadata !8886, metadata !2571), !dbg !8888
  %12 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !8889
  %start_is_offset = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %12, i32 0, i32 5, !dbg !8891
  %13 = load i32, i32* %start_is_offset, align 8, !dbg !8891
  %tobool7 = icmp ne i32 %13, 0, !dbg !8889
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !8892

if.then8:                                         ; preds = %if.then
  %14 = load i64*, i64** %cur_ts.addr, align 8, !dbg !8893
  %15 = load i64, i64* %14, align 8, !dbg !8896
  %cmp = icmp eq i64 %15, -9223372036854775808, !dbg !8897
  br i1 %cmp, label %if.then9, label %if.end, !dbg !8898

if.then9:                                         ; preds = %if.then8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.406, i32 0, i32 0)), !dbg !8899
  store i32 -22, i32* %ret, align 4, !dbg !8901
  br label %end156, !dbg !8902

if.end:                                           ; preds = %if.then8
  %16 = load i64*, i64** %cur_ts.addr, align 8, !dbg !8903
  %17 = load i64, i64* %16, align 8, !dbg !8904
  %18 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !8905
  %start10 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %18, i32 0, i32 1, !dbg !8906
  %19 = load i64, i64* %start10, align 8, !dbg !8906
  %add = add nsw i64 %17, %19, !dbg !8907
  store i64 %add, i64* %target, align 8, !dbg !8908
  br label %if.end12, !dbg !8909

if.else:                                          ; preds = %if.then
  %20 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !8910
  %start11 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %20, i32 0, i32 1, !dbg !8912
  %21 = load i64, i64* %start11, align 8, !dbg !8912
  store i64 %21, i64* %target, align 8, !dbg !8913
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.end
  %22 = bitcast [32 x i8]* %.compoundliteral to i8*, !dbg !8914
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 32, i32 1, i1 false), !dbg !8914
  %arrayinit.begin = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral, i64 0, i64 0, !dbg !8915
  store i8 0, i8* %arrayinit.begin, align 1, !dbg !8915
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral, i32 0, i32 0, !dbg !8914
  %23 = load i64, i64* %target, align 8, !dbg !8916
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral13, i32 0, i32 0, !dbg !8917
  store i32 1, i32* %num, align 4, !dbg !8917
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral13, i32 0, i32 1, !dbg !8917
  store i32 1000000, i32* %den, align 4, !dbg !8917
  %call = call i8* @av_ts_make_time_string(i8* %arraydecay, i64 %23, %struct.AVRational* %.compoundliteral13), !dbg !8918
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 40, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.407, i32 0, i32 0), i8* %call), !dbg !8920
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8921
  %25 = load i64, i64* %target, align 8, !dbg !8923
  %call14 = call i32 @avformat_seek_file(%struct.AVFormatContext* %24, i32 -1, i64 -9223372036854775807, i64 %25, i64 9223372036854775807, i32 0), !dbg !8924
  store i32 %call14, i32* %ret, align 4, !dbg !8925
  %cmp15 = icmp slt i32 %call14, 0, !dbg !8926
  br i1 %cmp15, label %if.then16, label %if.end22, !dbg !8927

if.then16:                                        ; preds = %if.end12
  %26 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !8928
  %start17 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %26, i32 0, i32 1, !dbg !8930
  %27 = load i64, i64* %start17, align 8, !dbg !8930
  %28 = bitcast [64 x i8]* %.compoundliteral18 to i8*, !dbg !8931
  call void @llvm.memset.p0i8.i64(i8* %28, i8 0, i64 64, i32 1, i1 false), !dbg !8931
  %arrayinit.begin19 = getelementptr inbounds [64 x i8], [64 x i8]* %.compoundliteral18, i64 0, i64 0, !dbg !8932
  store i8 0, i8* %arrayinit.begin19, align 1, !dbg !8932
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %.compoundliteral18, i32 0, i32 0, !dbg !8931
  %29 = load i32, i32* %ret, align 4, !dbg !8933
  %call21 = call i8* @av_make_error_string(i8* %arraydecay20, i64 64, i32 %29), !dbg !8934
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.408, i32 0, i32 0), i64 %27, i8* %call21), !dbg !8936
  br label %end156, !dbg !8937

if.end22:                                         ; preds = %if.end12
  br label %if.end23, !dbg !8938

if.end23:                                         ; preds = %if.end22, %land.end
  %call24 = call %struct.AVFrame* @av_frame_alloc(), !dbg !8939
  store %struct.AVFrame* %call24, %struct.AVFrame** %frame, align 8, !dbg !8940
  %30 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !8941
  %tobool25 = icmp ne %struct.AVFrame* %30, null, !dbg !8941
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !8943

if.then26:                                        ; preds = %if.end23
  store i32 -12, i32* %ret, align 4, !dbg !8944
  br label %end156, !dbg !8946

if.end27:                                         ; preds = %if.end23
  br label %while.cond, !dbg !8947

while.cond:                                       ; preds = %if.end139, %if.end27
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8948
  %call28 = call i32 @av_read_frame(%struct.AVFormatContext* %31, %struct.AVPacket* %pkt), !dbg !8949
  %tobool29 = icmp ne i32 %call28, 0, !dbg !8950
  %lnot30 = xor i1 %tobool29, true, !dbg !8950
  br i1 %lnot30, label %while.body, label %while.end140, !dbg !8951

while.body:                                       ; preds = %while.cond
  %32 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8952
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %32, i32 0, i32 6, !dbg !8954
  %33 = load i32, i32* %nb_streams, align 4, !dbg !8954
  %34 = load i32, i32* @nb_streams, align 4, !dbg !8955
  %cmp31 = icmp ugt i32 %33, %34, !dbg !8956
  br i1 %cmp31, label %if.then32, label %if.end68, !dbg !8957

if.then32:                                        ; preds = %while.body
  %35 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8958
  %nb_streams33 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %35, i32 0, i32 6, !dbg !8961
  %36 = load i32, i32* %nb_streams33, align 4, !dbg !8961
  %conv = zext i32 %36 to i64, !dbg !8962
  %call34 = call i32 @av_reallocp_array(i8* bitcast (i64** @nb_streams_frames to i8*), i64 %conv, i64 8), !dbg !8963
  store i32 %call34, i32* %ret, align 4, !dbg !8964
  %37 = load i32, i32* %ret, align 4, !dbg !8965
  %cmp35 = icmp slt i32 %37, 0, !dbg !8967
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !8968

if.then37:                                        ; preds = %if.then32
  br label %end156, !dbg !8969

if.end38:                                         ; preds = %if.then32
  %38 = load i64*, i64** @nb_streams_frames, align 8, !dbg !8971
  %39 = load i32, i32* @nb_streams, align 4, !dbg !8973
  %idx.ext = sext i32 %39 to i64, !dbg !8974
  %add.ptr = getelementptr inbounds i64, i64* %38, i64 %idx.ext, !dbg !8974
  %40 = bitcast i64* %add.ptr to i8*, !dbg !8975
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8976
  %nb_streams39 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %41, i32 0, i32 6, !dbg !8977
  %42 = load i32, i32* %nb_streams39, align 4, !dbg !8977
  %43 = load i32, i32* @nb_streams, align 4, !dbg !8978
  %sub = sub i32 %42, %43, !dbg !8979
  %conv40 = zext i32 %sub to i64, !dbg !8980
  %mul = mul i64 %conv40, 8, !dbg !8981
  call void @llvm.memset.p0i8.i64(i8* %40, i8 0, i64 %mul, i32 8, i1 false), !dbg !8975
  %44 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8982
  %nb_streams41 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %44, i32 0, i32 6, !dbg !8984
  %45 = load i32, i32* %nb_streams41, align 4, !dbg !8984
  %conv42 = zext i32 %45 to i64, !dbg !8985
  %call43 = call i32 @av_reallocp_array(i8* bitcast (i64** @nb_streams_packets to i8*), i64 %conv42, i64 8), !dbg !8986
  store i32 %call43, i32* %ret, align 4, !dbg !8987
  %46 = load i32, i32* %ret, align 4, !dbg !8988
  %cmp44 = icmp slt i32 %46, 0, !dbg !8990
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !8991

if.then46:                                        ; preds = %if.end38
  br label %end156, !dbg !8992

if.end47:                                         ; preds = %if.end38
  %47 = load i64*, i64** @nb_streams_packets, align 8, !dbg !8994
  %48 = load i32, i32* @nb_streams, align 4, !dbg !8996
  %idx.ext48 = sext i32 %48 to i64, !dbg !8997
  %add.ptr49 = getelementptr inbounds i64, i64* %47, i64 %idx.ext48, !dbg !8997
  %49 = bitcast i64* %add.ptr49 to i8*, !dbg !8998
  %50 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !8999
  %nb_streams50 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %50, i32 0, i32 6, !dbg !9000
  %51 = load i32, i32* %nb_streams50, align 4, !dbg !9000
  %52 = load i32, i32* @nb_streams, align 4, !dbg !9001
  %sub51 = sub i32 %51, %52, !dbg !9002
  %conv52 = zext i32 %sub51 to i64, !dbg !9003
  %mul53 = mul i64 %conv52, 8, !dbg !9004
  call void @llvm.memset.p0i8.i64(i8* %49, i8 0, i64 %mul53, i32 8, i1 false), !dbg !8998
  %53 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !9005
  %nb_streams54 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %53, i32 0, i32 6, !dbg !9007
  %54 = load i32, i32* %nb_streams54, align 4, !dbg !9007
  %conv55 = zext i32 %54 to i64, !dbg !9008
  %call56 = call i32 @av_reallocp_array(i8* bitcast (i32** @selected_streams to i8*), i64 %conv55, i64 4), !dbg !9009
  store i32 %call56, i32* %ret, align 4, !dbg !9010
  %55 = load i32, i32* %ret, align 4, !dbg !9011
  %cmp57 = icmp slt i32 %55, 0, !dbg !9013
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !9014

if.then59:                                        ; preds = %if.end47
  br label %end156, !dbg !9015

if.end60:                                         ; preds = %if.end47
  %56 = load i32*, i32** @selected_streams, align 8, !dbg !9017
  %57 = load i32, i32* @nb_streams, align 4, !dbg !9019
  %idx.ext61 = sext i32 %57 to i64, !dbg !9020
  %add.ptr62 = getelementptr inbounds i32, i32* %56, i64 %idx.ext61, !dbg !9020
  %58 = bitcast i32* %add.ptr62 to i8*, !dbg !9021
  %59 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !9022
  %nb_streams63 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %59, i32 0, i32 6, !dbg !9023
  %60 = load i32, i32* %nb_streams63, align 4, !dbg !9023
  %61 = load i32, i32* @nb_streams, align 4, !dbg !9024
  %sub64 = sub i32 %60, %61, !dbg !9025
  %conv65 = zext i32 %sub64 to i64, !dbg !9026
  %mul66 = mul i64 %conv65, 4, !dbg !9027
  call void @llvm.memset.p0i8.i64(i8* %58, i8 0, i64 %mul66, i32 4, i1 false), !dbg !9021
  %62 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !9028
  %nb_streams67 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %62, i32 0, i32 6, !dbg !9029
  %63 = load i32, i32* %nb_streams67, align 4, !dbg !9029
  store i32 %63, i32* @nb_streams, align 4, !dbg !9030
  br label %if.end68, !dbg !9031

if.end68:                                         ; preds = %if.end60, %while.body
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt, i32 0, i32 5, !dbg !9032
  %64 = load i32, i32* %stream_index, align 4, !dbg !9032
  %idxprom = sext i32 %64 to i64, !dbg !9033
  %65 = load i32*, i32** @selected_streams, align 8, !dbg !9033
  %arrayidx = getelementptr inbounds i32, i32* %65, i64 %idxprom, !dbg !9033
  %66 = load i32, i32* %arrayidx, align 4, !dbg !9033
  %tobool69 = icmp ne i32 %66, 0, !dbg !9033
  br i1 %tobool69, label %if.then70, label %if.end139, !dbg !9034

if.then70:                                        ; preds = %if.end68
  call void @llvm.dbg.declare(metadata %struct.AVRational* %tb, metadata !9035, metadata !2571), !dbg !9036
  %stream_index71 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt, i32 0, i32 5, !dbg !9037
  %67 = load i32, i32* %stream_index71, align 4, !dbg !9037
  %idxprom72 = sext i32 %67 to i64, !dbg !9038
  %68 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !9038
  %streams = getelementptr inbounds %struct.InputFile, %struct.InputFile* %68, i32 0, i32 1, !dbg !9039
  %69 = load %struct.InputStream*, %struct.InputStream** %streams, align 8, !dbg !9039
  %arrayidx73 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %69, i64 %idxprom72, !dbg !9038
  %st = getelementptr inbounds %struct.InputStream, %struct.InputStream* %arrayidx73, i32 0, i32 0, !dbg !9040
  %70 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9040
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %70, i32 0, i32 4, !dbg !9041
  %71 = bitcast %struct.AVRational* %tb to i8*, !dbg !9041
  %72 = bitcast %struct.AVRational* %time_base to i8*, !dbg !9041
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %72, i64 8, i32 4, i1 false), !dbg !9041
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt, i32 0, i32 1, !dbg !9042
  %73 = load i64, i64* %pts, align 8, !dbg !9042
  %cmp74 = icmp ne i64 %73, -9223372036854775808, !dbg !9044
  br i1 %cmp74, label %if.then76, label %if.end82, !dbg !9045

if.then76:                                        ; preds = %if.then70
  %pts77 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt, i32 0, i32 1, !dbg !9046
  %74 = load i64, i64* %pts77, align 8, !dbg !9046
  %num79 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral78, i32 0, i32 0, !dbg !9047
  store i32 1, i32* %num79, align 4, !dbg !9047
  %den80 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral78, i32 0, i32 1, !dbg !9047
  store i32 1000000, i32* %den80, align 4, !dbg !9047
  %75 = bitcast %struct.AVRational* %tb to i64*, !dbg !9048
  %76 = load i64, i64* %75, align 4, !dbg !9048
  %77 = bitcast %struct.AVRational* %.compoundliteral78 to i64*, !dbg !9048
  %78 = load i64, i64* %77, align 4, !dbg !9048
  %call81 = call i64 @av_rescale_q(i64 %74, i64 %76, i64 %78) #1, !dbg !9048
  %79 = load i64*, i64** %cur_ts.addr, align 8, !dbg !9049
  store i64 %call81, i64* %79, align 8, !dbg !9050
  br label %if.end82, !dbg !9051

if.end82:                                         ; preds = %if.then76, %if.then70
  %80 = load i32, i32* %has_start, align 4, !dbg !9052
  %tobool83 = icmp ne i32 %80, 0, !dbg !9052
  br i1 %tobool83, label %if.end87, label %land.lhs.true, !dbg !9054

land.lhs.true:                                    ; preds = %if.end82
  %81 = load i64*, i64** %cur_ts.addr, align 8, !dbg !9055
  %82 = load i64, i64* %81, align 8, !dbg !9057
  %cmp84 = icmp ne i64 %82, -9223372036854775808, !dbg !9058
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !9059

if.then86:                                        ; preds = %land.lhs.true
  %83 = load i64*, i64** %cur_ts.addr, align 8, !dbg !9060
  %84 = load i64, i64* %83, align 8, !dbg !9062
  store i64 %84, i64* %start, align 8, !dbg !9063
  store i32 1, i32* %has_start, align 4, !dbg !9064
  br label %if.end87, !dbg !9065

if.end87:                                         ; preds = %if.then86, %land.lhs.true, %if.end82
  %85 = load i32, i32* %has_start, align 4, !dbg !9066
  %tobool88 = icmp ne i32 %85, 0, !dbg !9066
  br i1 %tobool88, label %land.lhs.true89, label %if.end97, !dbg !9068

land.lhs.true89:                                  ; preds = %if.end87
  %86 = load i32, i32* %has_end, align 4, !dbg !9069
  %tobool90 = icmp ne i32 %86, 0, !dbg !9069
  br i1 %tobool90, label %if.end97, label %land.lhs.true91, !dbg !9071

land.lhs.true91:                                  ; preds = %land.lhs.true89
  %87 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !9072
  %end_is_offset92 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %87, i32 0, i32 6, !dbg !9074
  %88 = load i32, i32* %end_is_offset92, align 4, !dbg !9074
  %tobool93 = icmp ne i32 %88, 0, !dbg !9072
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !9075

if.then94:                                        ; preds = %land.lhs.true91
  %89 = load i64, i64* %start, align 8, !dbg !9076
  %90 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !9078
  %end95 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %90, i32 0, i32 2, !dbg !9079
  %91 = load i64, i64* %end95, align 8, !dbg !9079
  %add96 = add nsw i64 %89, %91, !dbg !9080
  store i64 %add96, i64* %end, align 8, !dbg !9081
  store i32 1, i32* %has_end, align 4, !dbg !9082
  br label %if.end97, !dbg !9083

if.end97:                                         ; preds = %if.then94, %land.lhs.true91, %land.lhs.true89, %if.end87
  %92 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !9084
  %end_is_offset98 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %92, i32 0, i32 6, !dbg !9086
  %93 = load i32, i32* %end_is_offset98, align 4, !dbg !9086
  %tobool99 = icmp ne i32 %93, 0, !dbg !9084
  br i1 %tobool99, label %land.lhs.true100, label %if.else109, !dbg !9087

land.lhs.true100:                                 ; preds = %if.end97
  %94 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !9088
  %duration_frames = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %94, i32 0, i32 7, !dbg !9090
  %95 = load i32, i32* %duration_frames, align 8, !dbg !9090
  %tobool101 = icmp ne i32 %95, 0, !dbg !9088
  br i1 %tobool101, label %if.then102, label %if.else109, !dbg !9091

if.then102:                                       ; preds = %land.lhs.true100
  %96 = load i32, i32* %frame_count, align 4, !dbg !9092
  %conv103 = sext i32 %96 to i64, !dbg !9092
  %97 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !9095
  %end104 = getelementptr inbounds %struct.ReadInterval, %struct.ReadInterval* %97, i32 0, i32 2, !dbg !9096
  %98 = load i64, i64* %end104, align 8, !dbg !9096
  %cmp105 = icmp sge i64 %conv103, %98, !dbg !9097
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !9098

if.then107:                                       ; preds = %if.then102
  br label %while.end140, !dbg !9099

if.end108:                                        ; preds = %if.then102
  br label %if.end119, !dbg !9100

if.else109:                                       ; preds = %land.lhs.true100, %if.end97
  %99 = load i32, i32* %has_end, align 4, !dbg !9101
  %tobool110 = icmp ne i32 %99, 0, !dbg !9101
  br i1 %tobool110, label %land.lhs.true111, label %if.end118, !dbg !9104

land.lhs.true111:                                 ; preds = %if.else109
  %100 = load i64*, i64** %cur_ts.addr, align 8, !dbg !9105
  %101 = load i64, i64* %100, align 8, !dbg !9107
  %cmp112 = icmp ne i64 %101, -9223372036854775808, !dbg !9108
  br i1 %cmp112, label %land.lhs.true114, label %if.end118, !dbg !9109

land.lhs.true114:                                 ; preds = %land.lhs.true111
  %102 = load i64*, i64** %cur_ts.addr, align 8, !dbg !9110
  %103 = load i64, i64* %102, align 8, !dbg !9112
  %104 = load i64, i64* %end, align 8, !dbg !9113
  %cmp115 = icmp sge i64 %103, %104, !dbg !9114
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !9115

if.then117:                                       ; preds = %land.lhs.true114
  br label %while.end140, !dbg !9116

if.end118:                                        ; preds = %land.lhs.true114, %land.lhs.true111, %if.else109
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.end108
  %105 = load i32, i32* %frame_count, align 4, !dbg !9118
  %inc = add nsw i32 %105, 1, !dbg !9118
  store i32 %inc, i32* %frame_count, align 4, !dbg !9118
  %106 = load i32, i32* @do_read_packets, align 4, !dbg !9119
  %tobool120 = icmp ne i32 %106, 0, !dbg !9119
  br i1 %tobool120, label %if.then121, label %if.end130, !dbg !9121

if.then121:                                       ; preds = %if.end119
  %107 = load i32, i32* @do_show_packets, align 4, !dbg !9122
  %tobool122 = icmp ne i32 %107, 0, !dbg !9122
  br i1 %tobool122, label %if.then123, label %if.end125, !dbg !9125

if.then123:                                       ; preds = %if.then121
  %108 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9126
  %109 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !9127
  %110 = load i32, i32* %i, align 4, !dbg !9128
  %inc124 = add nsw i32 %110, 1, !dbg !9128
  store i32 %inc124, i32* %i, align 4, !dbg !9128
  call void @show_packet(%struct.WriterContext* %108, %struct.InputFile* %109, %struct.AVPacket* %pkt, i32 %110), !dbg !9129
  br label %if.end125, !dbg !9129

if.end125:                                        ; preds = %if.then123, %if.then121
  %stream_index126 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt, i32 0, i32 5, !dbg !9130
  %111 = load i32, i32* %stream_index126, align 4, !dbg !9130
  %idxprom127 = sext i32 %111 to i64, !dbg !9131
  %112 = load i64*, i64** @nb_streams_packets, align 8, !dbg !9131
  %arrayidx128 = getelementptr inbounds i64, i64* %112, i64 %idxprom127, !dbg !9131
  %113 = load i64, i64* %arrayidx128, align 8, !dbg !9132
  %inc129 = add i64 %113, 1, !dbg !9132
  store i64 %inc129, i64* %arrayidx128, align 8, !dbg !9132
  br label %if.end130, !dbg !9133

if.end130:                                        ; preds = %if.end125, %if.end119
  %114 = load i32, i32* @do_read_frames, align 4, !dbg !9134
  %tobool131 = icmp ne i32 %114, 0, !dbg !9134
  br i1 %tobool131, label %if.then132, label %if.end138, !dbg !9135

if.then132:                                       ; preds = %if.end130
  call void @llvm.dbg.declare(metadata i32* %packet_new, metadata !9136, metadata !2571), !dbg !9137
  store i32 1, i32* %packet_new, align 4, !dbg !9137
  br label %while.cond133, !dbg !9138

while.cond133:                                    ; preds = %while.body137, %if.then132
  %115 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9139
  %116 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !9140
  %117 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !9141
  store %struct.WriterContext* %115, %struct.WriterContext** %w.addr.i, align 8, !dbg !9142
  store %struct.InputFile* %116, %struct.InputFile** %ifile.addr.i, align 8, !dbg !9142
  store %struct.AVFrame* %117, %struct.AVFrame** %frame.addr.i, align 8, !dbg !9142
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr.i, align 8, !dbg !9142
  store i32* %packet_new, i32** %packet_new.addr.i, align 8, !dbg !9142
  %118 = load %struct.InputFile*, %struct.InputFile** %ifile.addr.i, align 8, !dbg !9143
  %fmt_ctx1.i = getelementptr inbounds %struct.InputFile, %struct.InputFile* %118, i32 0, i32 0, !dbg !9144
  %119 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx1.i, align 8, !dbg !9144
  store %struct.AVFormatContext* %119, %struct.AVFormatContext** %fmt_ctx.i, align 8, !dbg !8829
  %120 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i, align 8, !dbg !9145
  %stream_index.i = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %120, i32 0, i32 5, !dbg !9146
  %121 = load i32, i32* %stream_index.i, align 4, !dbg !9146
  %idxprom.i = sext i32 %121 to i64, !dbg !9147
  %122 = load %struct.InputFile*, %struct.InputFile** %ifile.addr.i, align 8, !dbg !9147
  %streams.i = getelementptr inbounds %struct.InputFile, %struct.InputFile* %122, i32 0, i32 1, !dbg !9148
  %123 = load %struct.InputStream*, %struct.InputStream** %streams.i, align 8, !dbg !9148
  %arrayidx.i = getelementptr inbounds %struct.InputStream, %struct.InputStream* %123, i64 %idxprom.i, !dbg !9147
  %dec_ctx2.i = getelementptr inbounds %struct.InputStream, %struct.InputStream* %arrayidx.i, i32 0, i32 1, !dbg !9149
  %124 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx2.i, align 8, !dbg !9149
  store %struct.AVCodecContext* %124, %struct.AVCodecContext** %dec_ctx.i, align 8, !dbg !8830
  %125 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i, align 8, !dbg !9150
  %stream_index3.i = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %125, i32 0, i32 5, !dbg !9151
  %126 = load i32, i32* %stream_index3.i, align 4, !dbg !9151
  %idxprom4.i = sext i32 %126 to i64, !dbg !9152
  %127 = load %struct.InputFile*, %struct.InputFile** %ifile.addr.i, align 8, !dbg !9152
  %streams5.i = getelementptr inbounds %struct.InputFile, %struct.InputFile* %127, i32 0, i32 1, !dbg !9153
  %128 = load %struct.InputStream*, %struct.InputStream** %streams5.i, align 8, !dbg !9153
  %arrayidx6.i = getelementptr inbounds %struct.InputStream, %struct.InputStream* %128, i64 %idxprom4.i, !dbg !9152
  %st.i = getelementptr inbounds %struct.InputStream, %struct.InputStream* %arrayidx6.i, i32 0, i32 0, !dbg !9154
  %129 = load %struct.AVStream*, %struct.AVStream** %st.i, align 8, !dbg !9154
  %codecpar.i = getelementptr inbounds %struct.AVStream, %struct.AVStream* %129, i32 0, i32 19, !dbg !9155
  %130 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar.i, align 8, !dbg !9155
  store %struct.AVCodecParameters* %130, %struct.AVCodecParameters** %par.i, align 8, !dbg !8831
  store i32 0, i32* %ret.i, align 4, !dbg !8833
  store i32 0, i32* %got_frame.i, align 4, !dbg !8834
  call void @clear_log(i32 1) #9, !dbg !9156
  %131 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx.i, align 8, !dbg !9157
  %tobool.i = icmp ne %struct.AVCodecContext* %131, null, !dbg !9157
  br i1 %tobool.i, label %land.lhs.true.i, label %if.else34.i, !dbg !9159

land.lhs.true.i:                                  ; preds = %while.cond133
  %132 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx.i, align 8, !dbg !9160
  %codec.i = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %132, i32 0, i32 3, !dbg !9162
  %133 = load %struct.AVCodec*, %struct.AVCodec** %codec.i, align 8, !dbg !9162
  %tobool7.i = icmp ne %struct.AVCodec* %133, null, !dbg !9160
  br i1 %tobool7.i, label %if.then.i, label %if.else34.i, !dbg !9163

if.then.i:                                        ; preds = %land.lhs.true.i
  %134 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.i, align 8, !dbg !9164
  %codec_type.i = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %134, i32 0, i32 0, !dbg !9166
  %135 = load i32, i32* %codec_type.i, align 8, !dbg !9166
  switch i32 %135, label %sw.default.i [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb.i
    i32 3, label %sw.bb29.i
  ], !dbg !9167

sw.bb.i:                                          ; preds = %if.then.i, %if.then.i
  %136 = load i32*, i32** %packet_new.addr.i, align 8, !dbg !9168
  %137 = load i32, i32* %136, align 4, !dbg !9171
  %tobool8.i = icmp ne i32 %137, 0, !dbg !9171
  br i1 %tobool8.i, label %if.then9.i, label %if.end15.i, !dbg !9172

if.then9.i:                                       ; preds = %sw.bb.i
  %138 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx.i, align 8, !dbg !9173
  %139 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i, align 8, !dbg !9175
  %call.i = call i32 @avcodec_send_packet(%struct.AVCodecContext* %138, %struct.AVPacket* %139) #9, !dbg !9176
  store i32 %call.i, i32* %ret.i, align 4, !dbg !9177
  %140 = load i32, i32* %ret.i, align 4, !dbg !9178
  %cmp.i = icmp eq i32 %140, -11, !dbg !9180
  br i1 %cmp.i, label %if.then10.i, label %if.else.i, !dbg !9181

if.then10.i:                                      ; preds = %if.then9.i
  store i32 0, i32* %ret.i, align 4, !dbg !9182
  br label %if.end14.i, !dbg !9184

if.else.i:                                        ; preds = %if.then9.i
  %141 = load i32, i32* %ret.i, align 4, !dbg !9185
  %cmp11.i = icmp sge i32 %141, 0, !dbg !9188
  br i1 %cmp11.i, label %if.then13.i, label %lor.lhs.false.i, !dbg !9189

lor.lhs.false.i:                                  ; preds = %if.else.i
  %142 = load i32, i32* %ret.i, align 4, !dbg !9190
  %cmp12.i = icmp eq i32 %142, -541478725, !dbg !9192
  br i1 %cmp12.i, label %if.then13.i, label %if.end.i, !dbg !9193

if.then13.i:                                      ; preds = %lor.lhs.false.i, %if.else.i
  store i32 0, i32* %ret.i, align 4, !dbg !9194
  %143 = load i32*, i32** %packet_new.addr.i, align 8, !dbg !9196
  store i32 0, i32* %143, align 4, !dbg !9197
  br label %if.end.i, !dbg !9198

if.end.i:                                         ; preds = %if.then13.i, %lor.lhs.false.i
  br label %if.end14.i, !dbg !9142

if.end14.i:                                       ; preds = %if.end.i, %if.then10.i
  br label %if.end15.i, !dbg !9199

if.end15.i:                                       ; preds = %if.end14.i, %sw.bb.i
  %144 = load i32, i32* %ret.i, align 4, !dbg !9200
  %cmp16.i = icmp sge i32 %144, 0, !dbg !9202
  br i1 %cmp16.i, label %if.then17.i, label %if.end28.i, !dbg !9203

if.then17.i:                                      ; preds = %if.end15.i
  %145 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx.i, align 8, !dbg !9204
  %146 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr.i, align 8, !dbg !9206
  %call18.i = call i32 @avcodec_receive_frame(%struct.AVCodecContext* %145, %struct.AVFrame* %146) #9, !dbg !9207
  store i32 %call18.i, i32* %ret.i, align 4, !dbg !9208
  %147 = load i32, i32* %ret.i, align 4, !dbg !9209
  %cmp19.i = icmp sge i32 %147, 0, !dbg !9211
  br i1 %cmp19.i, label %if.then20.i, label %if.else21.i, !dbg !9212

if.then20.i:                                      ; preds = %if.then17.i
  store i32 1, i32* %got_frame.i, align 4, !dbg !9213
  br label %if.end27.i, !dbg !9215

if.else21.i:                                      ; preds = %if.then17.i
  %148 = load i32, i32* %ret.i, align 4, !dbg !9216
  %cmp22.i = icmp eq i32 %148, -11, !dbg !9219
  br i1 %cmp22.i, label %if.then25.i, label %lor.lhs.false23.i, !dbg !9220

lor.lhs.false23.i:                                ; preds = %if.else21.i
  %149 = load i32, i32* %ret.i, align 4, !dbg !9221
  %cmp24.i = icmp eq i32 %149, -541478725, !dbg !9223
  br i1 %cmp24.i, label %if.then25.i, label %if.end26.i, !dbg !9224

if.then25.i:                                      ; preds = %lor.lhs.false23.i, %if.else21.i
  store i32 0, i32* %ret.i, align 4, !dbg !9225
  br label %if.end26.i, !dbg !9227

if.end26.i:                                       ; preds = %if.then25.i, %lor.lhs.false23.i
  br label %if.end27.i, !dbg !9142

if.end27.i:                                       ; preds = %if.end26.i, %if.then20.i
  br label %if.end28.i, !dbg !9228

if.end28.i:                                       ; preds = %if.end27.i, %if.end15.i
  br label %sw.epilog.i, !dbg !9229

sw.bb29.i:                                        ; preds = %if.then.i
  %150 = load i32*, i32** %packet_new.addr.i, align 8, !dbg !9230
  %151 = load i32, i32* %150, align 4, !dbg !9232
  %tobool30.i = icmp ne i32 %151, 0, !dbg !9232
  br i1 %tobool30.i, label %if.then31.i, label %if.end33.i, !dbg !9233

if.then31.i:                                      ; preds = %sw.bb29.i
  %152 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx.i, align 8, !dbg !9234
  %153 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i, align 8, !dbg !9235
  %call32.i = call i32 @avcodec_decode_subtitle2(%struct.AVCodecContext* %152, %struct.AVSubtitle* %sub.i, i32* %got_frame.i, %struct.AVPacket* %153) #9, !dbg !9236
  store i32 %call32.i, i32* %ret.i, align 4, !dbg !9237
  br label %if.end33.i, !dbg !9238

if.end33.i:                                       ; preds = %if.then31.i, %sw.bb29.i
  %154 = load i32*, i32** %packet_new.addr.i, align 8, !dbg !9239
  store i32 0, i32* %154, align 4, !dbg !9240
  br label %sw.epilog.i, !dbg !9241

sw.default.i:                                     ; preds = %if.then.i
  %155 = load i32*, i32** %packet_new.addr.i, align 8, !dbg !9242
  store i32 0, i32* %155, align 4, !dbg !9243
  br label %sw.epilog.i, !dbg !9244

sw.epilog.i:                                      ; preds = %sw.default.i, %if.end33.i, %if.end28.i
  br label %if.end35.i, !dbg !9245

if.else34.i:                                      ; preds = %land.lhs.true.i, %while.cond133
  %156 = load i32*, i32** %packet_new.addr.i, align 8, !dbg !9246
  store i32 0, i32* %156, align 4, !dbg !9248
  br label %if.end35.i, !dbg !9142

if.end35.i:                                       ; preds = %if.else34.i, %sw.epilog.i
  %157 = load i32, i32* %ret.i, align 4, !dbg !9249
  %cmp36.i = icmp slt i32 %157, 0, !dbg !9251
  br i1 %cmp36.i, label %if.then37.i, label %if.end38.i, !dbg !9252

if.then37.i:                                      ; preds = %if.end35.i
  %158 = load i32, i32* %ret.i, align 4, !dbg !9253
  store i32 %158, i32* %retval.i, align 4, !dbg !9254
  br label %process_frame.exit, !dbg !9254

if.end38.i:                                       ; preds = %if.end35.i
  %159 = load i32, i32* %got_frame.i, align 4, !dbg !9255
  %tobool39.i = icmp ne i32 %159, 0, !dbg !9255
  br i1 %tobool39.i, label %if.then40.i, label %if.end66.i, !dbg !9256

if.then40.i:                                      ; preds = %if.end38.i
  %160 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.i, align 8, !dbg !9257
  %codec_type41.i = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %160, i32 0, i32 0, !dbg !9258
  %161 = load i32, i32* %codec_type41.i, align 8, !dbg !9258
  %cmp42.i = icmp eq i32 %161, 3, !dbg !9259
  %conv.i = zext i1 %cmp42.i to i32, !dbg !9259
  store i32 %conv.i, i32* %is_sub.i, align 4, !dbg !8835
  %162 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i, align 8, !dbg !9260
  %stream_index43.i = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %162, i32 0, i32 5, !dbg !9261
  %163 = load i32, i32* %stream_index43.i, align 4, !dbg !9261
  %idxprom44.i = sext i32 %163 to i64, !dbg !9262
  %164 = load i64*, i64** @nb_streams_frames, align 8, !dbg !9262
  %arrayidx45.i = getelementptr inbounds i64, i64* %164, i64 %idxprom44.i, !dbg !9262
  %165 = load i64, i64* %arrayidx45.i, align 8, !dbg !9263
  %inc.i = add i64 %165, 1, !dbg !9263
  store i64 %inc.i, i64* %arrayidx45.i, align 8, !dbg !9263
  %166 = load i32, i32* @do_show_frames, align 4, !dbg !9264
  %tobool46.i = icmp ne i32 %166, 0, !dbg !9264
  br i1 %tobool46.i, label %if.then47.i, label %if.end62.i, !dbg !9266

if.then47.i:                                      ; preds = %if.then40.i
  %167 = load i32, i32* %is_sub.i, align 4, !dbg !9267
  %tobool48.i = icmp ne i32 %167, 0, !dbg !9267
  br i1 %tobool48.i, label %if.then49.i, label %if.else55.i, !dbg !9269

if.then49.i:                                      ; preds = %if.then47.i
  %168 = load %struct.WriterContext*, %struct.WriterContext** %w.addr.i, align 8, !dbg !9270
  %169 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i, align 8, !dbg !9271
  %stream_index50.i = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %169, i32 0, i32 5, !dbg !9272
  %170 = load i32, i32* %stream_index50.i, align 4, !dbg !9272
  %idxprom51.i = sext i32 %170 to i64, !dbg !9273
  %171 = load %struct.InputFile*, %struct.InputFile** %ifile.addr.i, align 8, !dbg !9273
  %streams52.i = getelementptr inbounds %struct.InputFile, %struct.InputFile* %171, i32 0, i32 1, !dbg !9274
  %172 = load %struct.InputStream*, %struct.InputStream** %streams52.i, align 8, !dbg !9274
  %arrayidx53.i = getelementptr inbounds %struct.InputStream, %struct.InputStream* %172, i64 %idxprom51.i, !dbg !9273
  %st54.i = getelementptr inbounds %struct.InputStream, %struct.InputStream* %arrayidx53.i, i32 0, i32 0, !dbg !9275
  %173 = load %struct.AVStream*, %struct.AVStream** %st54.i, align 8, !dbg !9275
  %174 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx.i, align 8, !dbg !9276
  call void @show_subtitle(%struct.WriterContext* %168, %struct.AVSubtitle* %sub.i, %struct.AVStream* %173, %struct.AVFormatContext* %174) #9, !dbg !9277
  br label %if.end61.i, !dbg !9277

if.else55.i:                                      ; preds = %if.then47.i
  %175 = load %struct.WriterContext*, %struct.WriterContext** %w.addr.i, align 8, !dbg !9278
  %176 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr.i, align 8, !dbg !9279
  %177 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i, align 8, !dbg !9280
  %stream_index56.i = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %177, i32 0, i32 5, !dbg !9281
  %178 = load i32, i32* %stream_index56.i, align 4, !dbg !9281
  %idxprom57.i = sext i32 %178 to i64, !dbg !9282
  %179 = load %struct.InputFile*, %struct.InputFile** %ifile.addr.i, align 8, !dbg !9282
  %streams58.i = getelementptr inbounds %struct.InputFile, %struct.InputFile* %179, i32 0, i32 1, !dbg !9283
  %180 = load %struct.InputStream*, %struct.InputStream** %streams58.i, align 8, !dbg !9283
  %arrayidx59.i = getelementptr inbounds %struct.InputStream, %struct.InputStream* %180, i64 %idxprom57.i, !dbg !9282
  %st60.i = getelementptr inbounds %struct.InputStream, %struct.InputStream* %arrayidx59.i, i32 0, i32 0, !dbg !9284
  %181 = load %struct.AVStream*, %struct.AVStream** %st60.i, align 8, !dbg !9284
  %182 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx.i, align 8, !dbg !9285
  call void @show_frame(%struct.WriterContext* %175, %struct.AVFrame* %176, %struct.AVStream* %181, %struct.AVFormatContext* %182) #9, !dbg !9286
  br label %if.end61.i, !dbg !9142

if.end61.i:                                       ; preds = %if.else55.i, %if.then49.i
  br label %if.end62.i, !dbg !9287

if.end62.i:                                       ; preds = %if.end61.i, %if.then40.i
  %183 = load i32, i32* %is_sub.i, align 4, !dbg !9289
  %tobool63.i = icmp ne i32 %183, 0, !dbg !9289
  br i1 %tobool63.i, label %if.then64.i, label %if.end65.i, !dbg !9291

if.then64.i:                                      ; preds = %if.end62.i
  call void @avsubtitle_free(%struct.AVSubtitle* %sub.i) #9, !dbg !9292
  br label %if.end65.i, !dbg !9292

if.end65.i:                                       ; preds = %if.then64.i, %if.end62.i
  br label %if.end66.i, !dbg !9293

if.end66.i:                                       ; preds = %if.end65.i, %if.end38.i
  %184 = load i32, i32* %got_frame.i, align 4, !dbg !9294
  %tobool67.i = icmp ne i32 %184, 0, !dbg !9294
  br i1 %tobool67.i, label %lor.end.i, label %lor.rhs.i, !dbg !9295

lor.rhs.i:                                        ; preds = %if.end66.i
  %185 = load i32*, i32** %packet_new.addr.i, align 8, !dbg !9296
  %186 = load i32, i32* %185, align 4, !dbg !9298
  %tobool68.i = icmp ne i32 %186, 0, !dbg !9299
  br label %lor.end.i, !dbg !9299

lor.end.i:                                        ; preds = %lor.rhs.i, %if.end66.i
  %187 = phi i1 [ true, %if.end66.i ], [ %tobool68.i, %lor.rhs.i ], !dbg !9142
  %lor.ext.i = zext i1 %187 to i32, !dbg !9300
  store i32 %lor.ext.i, i32* %retval.i, align 4, !dbg !9302
  br label %process_frame.exit, !dbg !9302

process_frame.exit:                               ; preds = %if.then37.i, %lor.end.i
  %188 = load i32, i32* %retval.i, align 4, !dbg !9303
  %cmp135 = icmp sgt i32 %188, 0, !dbg !9304
  br i1 %cmp135, label %while.body137, label %while.end, !dbg !9305

while.body137:                                    ; preds = %process_frame.exit
  br label %while.cond133, !dbg !9306, !llvm.loop !9308

while.end:                                        ; preds = %process_frame.exit
  br label %if.end138, !dbg !9309

if.end138:                                        ; preds = %while.end, %if.end130
  br label %if.end139, !dbg !9310

if.end139:                                        ; preds = %if.end138, %if.end68
  call void @av_packet_unref(%struct.AVPacket* %pkt), !dbg !9311
  br label %while.cond, !dbg !9312, !llvm.loop !9313

while.end140:                                     ; preds = %if.then117, %if.then107, %while.cond
  call void @av_init_packet(%struct.AVPacket* %pkt), !dbg !9314
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt, i32 0, i32 3, !dbg !9315
  store i8* null, i8** %data, align 8, !dbg !9316
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt, i32 0, i32 4, !dbg !9317
  store i32 0, i32* %size, align 8, !dbg !9318
  store i32 0, i32* %i, align 4, !dbg !9319
  br label %for.cond, !dbg !9320

for.cond:                                         ; preds = %for.inc, %while.end140
  %189 = load i32, i32* %i, align 4, !dbg !9321
  %190 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !9323
  %nb_streams141 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %190, i32 0, i32 6, !dbg !9324
  %191 = load i32, i32* %nb_streams141, align 4, !dbg !9324
  %cmp142 = icmp ult i32 %189, %191, !dbg !9325
  br i1 %cmp142, label %for.body, label %for.end, !dbg !9326

for.body:                                         ; preds = %for.cond
  %192 = load i32, i32* %i, align 4, !dbg !9327
  %stream_index144 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt, i32 0, i32 5, !dbg !9328
  store i32 %192, i32* %stream_index144, align 4, !dbg !9329
  %193 = load i32, i32* @do_read_frames, align 4, !dbg !9330
  %tobool145 = icmp ne i32 %193, 0, !dbg !9330
  br i1 %tobool145, label %if.then146, label %if.end154, !dbg !9331

if.then146:                                       ; preds = %for.body
  br label %while.cond147, !dbg !9332

while.cond147:                                    ; preds = %while.body152, %if.then146
  %194 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9333
  %195 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !9334
  %196 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !9335
  store i32 1, i32* %.compoundliteral148, align 4, !dbg !9336
  store %struct.WriterContext* %194, %struct.WriterContext** %w.addr.i162, align 8, !dbg !9337
  store %struct.InputFile* %195, %struct.InputFile** %ifile.addr.i163, align 8, !dbg !9337
  store %struct.AVFrame* %196, %struct.AVFrame** %frame.addr.i164, align 8, !dbg !9337
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr.i165, align 8, !dbg !9337
  store i32* %.compoundliteral148, i32** %packet_new.addr.i166, align 8, !dbg !9337
  %197 = load %struct.InputFile*, %struct.InputFile** %ifile.addr.i163, align 8, !dbg !9338
  %fmt_ctx1.i174 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %197, i32 0, i32 0, !dbg !9339
  %198 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx1.i174, align 8, !dbg !9339
  store %struct.AVFormatContext* %198, %struct.AVFormatContext** %fmt_ctx.i167, align 8, !dbg !8801
  %199 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i165, align 8, !dbg !9340
  %stream_index.i175 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %199, i32 0, i32 5, !dbg !9341
  %200 = load i32, i32* %stream_index.i175, align 4, !dbg !9341
  %idxprom.i176 = sext i32 %200 to i64, !dbg !9342
  %201 = load %struct.InputFile*, %struct.InputFile** %ifile.addr.i163, align 8, !dbg !9342
  %streams.i177 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %201, i32 0, i32 1, !dbg !9343
  %202 = load %struct.InputStream*, %struct.InputStream** %streams.i177, align 8, !dbg !9343
  %arrayidx.i178 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %202, i64 %idxprom.i176, !dbg !9342
  %dec_ctx2.i179 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %arrayidx.i178, i32 0, i32 1, !dbg !9344
  %203 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx2.i179, align 8, !dbg !9344
  store %struct.AVCodecContext* %203, %struct.AVCodecContext** %dec_ctx.i168, align 8, !dbg !8803
  %204 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i165, align 8, !dbg !9345
  %stream_index3.i180 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %204, i32 0, i32 5, !dbg !9346
  %205 = load i32, i32* %stream_index3.i180, align 4, !dbg !9346
  %idxprom4.i181 = sext i32 %205 to i64, !dbg !9347
  %206 = load %struct.InputFile*, %struct.InputFile** %ifile.addr.i163, align 8, !dbg !9347
  %streams5.i182 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %206, i32 0, i32 1, !dbg !9348
  %207 = load %struct.InputStream*, %struct.InputStream** %streams5.i182, align 8, !dbg !9348
  %arrayidx6.i183 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %207, i64 %idxprom4.i181, !dbg !9347
  %st.i184 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %arrayidx6.i183, i32 0, i32 0, !dbg !9349
  %208 = load %struct.AVStream*, %struct.AVStream** %st.i184, align 8, !dbg !9349
  %codecpar.i185 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %208, i32 0, i32 19, !dbg !9350
  %209 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar.i185, align 8, !dbg !9350
  store %struct.AVCodecParameters* %209, %struct.AVCodecParameters** %par.i169, align 8, !dbg !8805
  store i32 0, i32* %ret.i171, align 4, !dbg !8810
  store i32 0, i32* %got_frame.i172, align 4, !dbg !8812
  call void @clear_log(i32 1) #9, !dbg !9351
  %210 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx.i168, align 8, !dbg !9352
  %tobool.i186 = icmp ne %struct.AVCodecContext* %210, null, !dbg !9352
  br i1 %tobool.i186, label %land.lhs.true.i189, label %if.else34.i226, !dbg !9353

land.lhs.true.i189:                               ; preds = %while.cond147
  %211 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx.i168, align 8, !dbg !9354
  %codec.i187 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %211, i32 0, i32 3, !dbg !9355
  %212 = load %struct.AVCodec*, %struct.AVCodec** %codec.i187, align 8, !dbg !9355
  %tobool7.i188 = icmp ne %struct.AVCodec* %212, null, !dbg !9354
  br i1 %tobool7.i188, label %if.then.i191, label %if.else34.i226, !dbg !9356

if.then.i191:                                     ; preds = %land.lhs.true.i189
  %213 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.i169, align 8, !dbg !9357
  %codec_type.i190 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %213, i32 0, i32 0, !dbg !9358
  %214 = load i32, i32* %codec_type.i190, align 8, !dbg !9358
  switch i32 %214, label %sw.default.i224 [
    i32 0, label %sw.bb.i193
    i32 1, label %sw.bb.i193
    i32 3, label %sw.bb29.i220
  ], !dbg !9359

sw.bb.i193:                                       ; preds = %if.then.i191, %if.then.i191
  %215 = load i32*, i32** %packet_new.addr.i166, align 8, !dbg !9360
  %216 = load i32, i32* %215, align 4, !dbg !9361
  %tobool8.i192 = icmp ne i32 %216, 0, !dbg !9361
  br i1 %tobool8.i192, label %if.then9.i196, label %if.end15.i206, !dbg !9362

if.then9.i196:                                    ; preds = %sw.bb.i193
  %217 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx.i168, align 8, !dbg !9363
  %218 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i165, align 8, !dbg !9364
  %call.i194 = call i32 @avcodec_send_packet(%struct.AVCodecContext* %217, %struct.AVPacket* %218) #9, !dbg !9365
  store i32 %call.i194, i32* %ret.i171, align 4, !dbg !9366
  %219 = load i32, i32* %ret.i171, align 4, !dbg !9367
  %cmp.i195 = icmp eq i32 %219, -11, !dbg !9368
  br i1 %cmp.i195, label %if.then10.i197, label %if.else.i199, !dbg !9369

if.then10.i197:                                   ; preds = %if.then9.i196
  store i32 0, i32* %ret.i171, align 4, !dbg !9370
  br label %if.end14.i204, !dbg !9371

if.else.i199:                                     ; preds = %if.then9.i196
  %220 = load i32, i32* %ret.i171, align 4, !dbg !9372
  %cmp11.i198 = icmp sge i32 %220, 0, !dbg !9373
  br i1 %cmp11.i198, label %if.then13.i202, label %lor.lhs.false.i201, !dbg !9374

lor.lhs.false.i201:                               ; preds = %if.else.i199
  %221 = load i32, i32* %ret.i171, align 4, !dbg !9375
  %cmp12.i200 = icmp eq i32 %221, -541478725, !dbg !9376
  br i1 %cmp12.i200, label %if.then13.i202, label %if.end.i203, !dbg !9377

if.then13.i202:                                   ; preds = %lor.lhs.false.i201, %if.else.i199
  store i32 0, i32* %ret.i171, align 4, !dbg !9378
  %222 = load i32*, i32** %packet_new.addr.i166, align 8, !dbg !9379
  store i32 0, i32* %222, align 4, !dbg !9380
  br label %if.end.i203, !dbg !9381

if.end.i203:                                      ; preds = %if.then13.i202, %lor.lhs.false.i201
  br label %if.end14.i204, !dbg !9337

if.end14.i204:                                    ; preds = %if.end.i203, %if.then10.i197
  br label %if.end15.i206, !dbg !9382

if.end15.i206:                                    ; preds = %if.end14.i204, %sw.bb.i193
  %223 = load i32, i32* %ret.i171, align 4, !dbg !9383
  %cmp16.i205 = icmp sge i32 %223, 0, !dbg !9384
  br i1 %cmp16.i205, label %if.then17.i209, label %if.end28.i218, !dbg !9385

if.then17.i209:                                   ; preds = %if.end15.i206
  %224 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx.i168, align 8, !dbg !9386
  %225 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr.i164, align 8, !dbg !9387
  %call18.i207 = call i32 @avcodec_receive_frame(%struct.AVCodecContext* %224, %struct.AVFrame* %225) #9, !dbg !9388
  store i32 %call18.i207, i32* %ret.i171, align 4, !dbg !9389
  %226 = load i32, i32* %ret.i171, align 4, !dbg !9390
  %cmp19.i208 = icmp sge i32 %226, 0, !dbg !9391
  br i1 %cmp19.i208, label %if.then20.i210, label %if.else21.i212, !dbg !9392

if.then20.i210:                                   ; preds = %if.then17.i209
  store i32 1, i32* %got_frame.i172, align 4, !dbg !9393
  br label %if.end27.i217, !dbg !9394

if.else21.i212:                                   ; preds = %if.then17.i209
  %227 = load i32, i32* %ret.i171, align 4, !dbg !9395
  %cmp22.i211 = icmp eq i32 %227, -11, !dbg !9396
  br i1 %cmp22.i211, label %if.then25.i215, label %lor.lhs.false23.i214, !dbg !9397

lor.lhs.false23.i214:                             ; preds = %if.else21.i212
  %228 = load i32, i32* %ret.i171, align 4, !dbg !9398
  %cmp24.i213 = icmp eq i32 %228, -541478725, !dbg !9399
  br i1 %cmp24.i213, label %if.then25.i215, label %if.end26.i216, !dbg !9400

if.then25.i215:                                   ; preds = %lor.lhs.false23.i214, %if.else21.i212
  store i32 0, i32* %ret.i171, align 4, !dbg !9401
  br label %if.end26.i216, !dbg !9402

if.end26.i216:                                    ; preds = %if.then25.i215, %lor.lhs.false23.i214
  br label %if.end27.i217, !dbg !9337

if.end27.i217:                                    ; preds = %if.end26.i216, %if.then20.i210
  br label %if.end28.i218, !dbg !9403

if.end28.i218:                                    ; preds = %if.end27.i217, %if.end15.i206
  br label %sw.epilog.i225, !dbg !9404

sw.bb29.i220:                                     ; preds = %if.then.i191
  %229 = load i32*, i32** %packet_new.addr.i166, align 8, !dbg !9405
  %230 = load i32, i32* %229, align 4, !dbg !9406
  %tobool30.i219 = icmp ne i32 %230, 0, !dbg !9406
  br i1 %tobool30.i219, label %if.then31.i222, label %if.end33.i223, !dbg !9407

if.then31.i222:                                   ; preds = %sw.bb29.i220
  %231 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx.i168, align 8, !dbg !9408
  %232 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i165, align 8, !dbg !9409
  %call32.i221 = call i32 @avcodec_decode_subtitle2(%struct.AVCodecContext* %231, %struct.AVSubtitle* %sub.i170, i32* %got_frame.i172, %struct.AVPacket* %232) #9, !dbg !9410
  store i32 %call32.i221, i32* %ret.i171, align 4, !dbg !9411
  br label %if.end33.i223, !dbg !9412

if.end33.i223:                                    ; preds = %if.then31.i222, %sw.bb29.i220
  %233 = load i32*, i32** %packet_new.addr.i166, align 8, !dbg !9413
  store i32 0, i32* %233, align 4, !dbg !9414
  br label %sw.epilog.i225, !dbg !9415

sw.default.i224:                                  ; preds = %if.then.i191
  %234 = load i32*, i32** %packet_new.addr.i166, align 8, !dbg !9416
  store i32 0, i32* %234, align 4, !dbg !9417
  br label %sw.epilog.i225, !dbg !9418

sw.epilog.i225:                                   ; preds = %sw.default.i224, %if.end33.i223, %if.end28.i218
  br label %if.end35.i228, !dbg !9419

if.else34.i226:                                   ; preds = %land.lhs.true.i189, %while.cond147
  %235 = load i32*, i32** %packet_new.addr.i166, align 8, !dbg !9420
  store i32 0, i32* %235, align 4, !dbg !9421
  br label %if.end35.i228, !dbg !9337

if.end35.i228:                                    ; preds = %if.else34.i226, %sw.epilog.i225
  %236 = load i32, i32* %ret.i171, align 4, !dbg !9422
  %cmp36.i227 = icmp slt i32 %236, 0, !dbg !9423
  br i1 %cmp36.i227, label %if.then37.i229, label %if.end38.i231, !dbg !9424

if.then37.i229:                                   ; preds = %if.end35.i228
  %237 = load i32, i32* %ret.i171, align 4, !dbg !9425
  store i32 %237, i32* %retval.i161, align 4, !dbg !9426
  br label %process_frame.exit266, !dbg !9426

if.end38.i231:                                    ; preds = %if.end35.i228
  %238 = load i32, i32* %got_frame.i172, align 4, !dbg !9427
  %tobool39.i230 = icmp ne i32 %238, 0, !dbg !9427
  br i1 %tobool39.i230, label %if.then40.i240, label %if.end66.i261, !dbg !9428

if.then40.i240:                                   ; preds = %if.end38.i231
  %239 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.i169, align 8, !dbg !9429
  %codec_type41.i232 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %239, i32 0, i32 0, !dbg !9430
  %240 = load i32, i32* %codec_type41.i232, align 8, !dbg !9430
  %cmp42.i233 = icmp eq i32 %240, 3, !dbg !9431
  %conv.i234 = zext i1 %cmp42.i233 to i32, !dbg !9431
  store i32 %conv.i234, i32* %is_sub.i173, align 4, !dbg !8816
  %241 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i165, align 8, !dbg !9432
  %stream_index43.i235 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %241, i32 0, i32 5, !dbg !9433
  %242 = load i32, i32* %stream_index43.i235, align 4, !dbg !9433
  %idxprom44.i236 = sext i32 %242 to i64, !dbg !9434
  %243 = load i64*, i64** @nb_streams_frames, align 8, !dbg !9434
  %arrayidx45.i237 = getelementptr inbounds i64, i64* %243, i64 %idxprom44.i236, !dbg !9434
  %244 = load i64, i64* %arrayidx45.i237, align 8, !dbg !9435
  %inc.i238 = add i64 %244, 1, !dbg !9435
  store i64 %inc.i238, i64* %arrayidx45.i237, align 8, !dbg !9435
  %245 = load i32, i32* @do_show_frames, align 4, !dbg !9436
  %tobool46.i239 = icmp ne i32 %245, 0, !dbg !9436
  br i1 %tobool46.i239, label %if.then47.i242, label %if.end62.i257, !dbg !9437

if.then47.i242:                                   ; preds = %if.then40.i240
  %246 = load i32, i32* %is_sub.i173, align 4, !dbg !9438
  %tobool48.i241 = icmp ne i32 %246, 0, !dbg !9438
  br i1 %tobool48.i241, label %if.then49.i248, label %if.else55.i254, !dbg !9439

if.then49.i248:                                   ; preds = %if.then47.i242
  %247 = load %struct.WriterContext*, %struct.WriterContext** %w.addr.i162, align 8, !dbg !9440
  %248 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i165, align 8, !dbg !9441
  %stream_index50.i243 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %248, i32 0, i32 5, !dbg !9442
  %249 = load i32, i32* %stream_index50.i243, align 4, !dbg !9442
  %idxprom51.i244 = sext i32 %249 to i64, !dbg !9443
  %250 = load %struct.InputFile*, %struct.InputFile** %ifile.addr.i163, align 8, !dbg !9443
  %streams52.i245 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %250, i32 0, i32 1, !dbg !9444
  %251 = load %struct.InputStream*, %struct.InputStream** %streams52.i245, align 8, !dbg !9444
  %arrayidx53.i246 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %251, i64 %idxprom51.i244, !dbg !9443
  %st54.i247 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %arrayidx53.i246, i32 0, i32 0, !dbg !9445
  %252 = load %struct.AVStream*, %struct.AVStream** %st54.i247, align 8, !dbg !9445
  %253 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx.i167, align 8, !dbg !9446
  call void @show_subtitle(%struct.WriterContext* %247, %struct.AVSubtitle* %sub.i170, %struct.AVStream* %252, %struct.AVFormatContext* %253) #9, !dbg !9447
  br label %if.end61.i255, !dbg !9447

if.else55.i254:                                   ; preds = %if.then47.i242
  %254 = load %struct.WriterContext*, %struct.WriterContext** %w.addr.i162, align 8, !dbg !9448
  %255 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr.i164, align 8, !dbg !9449
  %256 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr.i165, align 8, !dbg !9450
  %stream_index56.i249 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %256, i32 0, i32 5, !dbg !9451
  %257 = load i32, i32* %stream_index56.i249, align 4, !dbg !9451
  %idxprom57.i250 = sext i32 %257 to i64, !dbg !9452
  %258 = load %struct.InputFile*, %struct.InputFile** %ifile.addr.i163, align 8, !dbg !9452
  %streams58.i251 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %258, i32 0, i32 1, !dbg !9453
  %259 = load %struct.InputStream*, %struct.InputStream** %streams58.i251, align 8, !dbg !9453
  %arrayidx59.i252 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %259, i64 %idxprom57.i250, !dbg !9452
  %st60.i253 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %arrayidx59.i252, i32 0, i32 0, !dbg !9454
  %260 = load %struct.AVStream*, %struct.AVStream** %st60.i253, align 8, !dbg !9454
  %261 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx.i167, align 8, !dbg !9455
  call void @show_frame(%struct.WriterContext* %254, %struct.AVFrame* %255, %struct.AVStream* %260, %struct.AVFormatContext* %261) #9, !dbg !9456
  br label %if.end61.i255, !dbg !9337

if.end61.i255:                                    ; preds = %if.else55.i254, %if.then49.i248
  br label %if.end62.i257, !dbg !9457

if.end62.i257:                                    ; preds = %if.end61.i255, %if.then40.i240
  %262 = load i32, i32* %is_sub.i173, align 4, !dbg !9458
  %tobool63.i256 = icmp ne i32 %262, 0, !dbg !9458
  br i1 %tobool63.i256, label %if.then64.i258, label %if.end65.i259, !dbg !9459

if.then64.i258:                                   ; preds = %if.end62.i257
  call void @avsubtitle_free(%struct.AVSubtitle* %sub.i170) #9, !dbg !9460
  br label %if.end65.i259, !dbg !9460

if.end65.i259:                                    ; preds = %if.then64.i258, %if.end62.i257
  br label %if.end66.i261, !dbg !9461

if.end66.i261:                                    ; preds = %if.end65.i259, %if.end38.i231
  %263 = load i32, i32* %got_frame.i172, align 4, !dbg !9462
  %tobool67.i260 = icmp ne i32 %263, 0, !dbg !9462
  br i1 %tobool67.i260, label %lor.end.i265, label %lor.rhs.i263, !dbg !9463

lor.rhs.i263:                                     ; preds = %if.end66.i261
  %264 = load i32*, i32** %packet_new.addr.i166, align 8, !dbg !9464
  %265 = load i32, i32* %264, align 4, !dbg !9465
  %tobool68.i262 = icmp ne i32 %265, 0, !dbg !9466
  br label %lor.end.i265, !dbg !9466

lor.end.i265:                                     ; preds = %lor.rhs.i263, %if.end66.i261
  %266 = phi i1 [ true, %if.end66.i261 ], [ %tobool68.i262, %lor.rhs.i263 ], !dbg !9337
  %lor.ext.i264 = zext i1 %266 to i32, !dbg !9467
  store i32 %lor.ext.i264, i32* %retval.i161, align 4, !dbg !9468
  br label %process_frame.exit266, !dbg !9468

process_frame.exit266:                            ; preds = %if.then37.i229, %lor.end.i265
  %267 = load i32, i32* %retval.i161, align 4, !dbg !9469
  %cmp150 = icmp sgt i32 %267, 0, !dbg !9470
  br i1 %cmp150, label %while.body152, label %while.end153, !dbg !9471

while.body152:                                    ; preds = %process_frame.exit266
  br label %while.cond147, !dbg !9472, !llvm.loop !9474

while.end153:                                     ; preds = %process_frame.exit266
  br label %if.end154, !dbg !9475

if.end154:                                        ; preds = %while.end153, %for.body
  br label %for.inc, !dbg !9477

for.inc:                                          ; preds = %if.end154
  %268 = load i32, i32* %i, align 4, !dbg !9478
  %inc155 = add nsw i32 %268, 1, !dbg !9478
  store i32 %inc155, i32* %i, align 4, !dbg !9478
  br label %for.cond, !dbg !9480, !llvm.loop !9481

for.end:                                          ; preds = %for.cond
  br label %end156, !dbg !9483

end156:                                           ; preds = %for.end, %if.then59, %if.then46, %if.then37, %if.then26, %if.then16, %if.then9
  call void @av_frame_free(%struct.AVFrame** %frame), !dbg !9485
  %269 = load i32, i32* %ret, align 4, !dbg !9486
  %cmp157 = icmp slt i32 %269, 0, !dbg !9488
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !9489

if.then159:                                       ; preds = %end156
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.409, i32 0, i32 0)), !dbg !9490
  %270 = load %struct.ReadInterval*, %struct.ReadInterval** %interval.addr, align 8, !dbg !9492
  call void @log_read_interval(%struct.ReadInterval* %270, i8* null, i32 16), !dbg !9493
  br label %if.end160, !dbg !9494

if.end160:                                        ; preds = %if.then159, %end156
  %271 = load i32, i32* %ret, align 4, !dbg !9495
  ret i32 %271, !dbg !9496
}

declare void @av_init_packet(%struct.AVPacket*) #2

declare i32 @avformat_seek_file(%struct.AVFormatContext*, i32, i64, i64, i64, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @av_make_error_string(i8* %errbuf, i64 %errbuf_size, i32 %errnum) #4 !dbg !9497 {
entry:
  %errbuf.addr = alloca i8*, align 8
  %errbuf_size.addr = alloca i64, align 8
  %errnum.addr = alloca i32, align 4
  store i8* %errbuf, i8** %errbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %errbuf.addr, metadata !9501, metadata !2571), !dbg !9502
  store i64 %errbuf_size, i64* %errbuf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %errbuf_size.addr, metadata !9503, metadata !2571), !dbg !9504
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !9505, metadata !2571), !dbg !9506
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !9507
  %1 = load i8*, i8** %errbuf.addr, align 8, !dbg !9508
  %2 = load i64, i64* %errbuf_size.addr, align 8, !dbg !9509
  %call = call i32 @av_strerror(i32 %0, i8* %1, i64 %2), !dbg !9510
  %3 = load i8*, i8** %errbuf.addr, align 8, !dbg !9511
  ret i8* %3, !dbg !9512
}

declare %struct.AVFrame* @av_frame_alloc() #2

declare i32 @av_read_frame(%struct.AVFormatContext*, %struct.AVPacket*) #2

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) #12

; Function Attrs: nounwind uwtable
define internal void @show_packet(%struct.WriterContext* %w, %struct.InputFile* %ifile, %struct.AVPacket* %pkt, i32 %packet_idx) #0 !dbg !9513 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %ifile.addr = alloca %struct.InputFile*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %packet_idx.addr = alloca i32, align 4
  %val_str = alloca [128 x i8], align 16
  %st = alloca %struct.AVStream*, align 8
  %pbuf = alloca %struct.AVBPrint, align 8
  %s = alloca i8*, align 8
  %uv = alloca %struct.unit_value, align 8
  %size35 = alloca i32, align 4
  %side_metadata = alloca i8*, align 8
  %dict = alloca %struct.AVDictionary*, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !9516, metadata !2571), !dbg !9517
  store %struct.InputFile* %ifile, %struct.InputFile** %ifile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr, metadata !9518, metadata !2571), !dbg !9519
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !9520, metadata !2571), !dbg !9521
  store i32 %packet_idx, i32* %packet_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %packet_idx.addr, metadata !9522, metadata !2571), !dbg !9523
  call void @llvm.dbg.declare(metadata [128 x i8]* %val_str, metadata !9524, metadata !2571), !dbg !9525
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !9526, metadata !2571), !dbg !9527
  %0 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9528
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i32 0, i32 5, !dbg !9529
  %1 = load i32, i32* %stream_index, align 4, !dbg !9529
  %idxprom = sext i32 %1 to i64, !dbg !9530
  %2 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !9530
  %streams = getelementptr inbounds %struct.InputFile, %struct.InputFile* %2, i32 0, i32 1, !dbg !9531
  %3 = load %struct.InputStream*, %struct.InputStream** %streams, align 8, !dbg !9531
  %arrayidx = getelementptr inbounds %struct.InputStream, %struct.InputStream* %3, i64 %idxprom, !dbg !9530
  %st1 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %arrayidx, i32 0, i32 0, !dbg !9532
  %4 = load %struct.AVStream*, %struct.AVStream** %st1, align 8, !dbg !9532
  store %struct.AVStream* %4, %struct.AVStream** %st, align 8, !dbg !9527
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %pbuf, metadata !9533, metadata !2571), !dbg !9534
  call void @llvm.dbg.declare(metadata i8** %s, metadata !9535, metadata !2571), !dbg !9536
  call void @av_bprint_init(%struct.AVBPrint* %pbuf, i32 1, i32 -1), !dbg !9537
  %5 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9538
  call void @writer_print_section_header(%struct.WriterContext* %5, i32 15), !dbg !9539
  %6 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9540
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %6, i32 0, i32 19, !dbg !9541
  %7 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !9541
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %7, i32 0, i32 0, !dbg !9542
  %8 = load i32, i32* %codec_type, align 8, !dbg !9542
  %call = call i8* @av_get_media_type_string(i32 %8), !dbg !9543
  store i8* %call, i8** %s, align 8, !dbg !9544
  %9 = load i8*, i8** %s, align 8, !dbg !9545
  %tobool = icmp ne i8* %9, null, !dbg !9545
  br i1 %tobool, label %if.then, label %if.else, !dbg !9547

if.then:                                          ; preds = %entry
  %10 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9548
  %11 = load i8*, i8** %s, align 8, !dbg !9550
  %call2 = call i32 @writer_print_string(%struct.WriterContext* %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.410, i32 0, i32 0), i8* %11, i32 0), !dbg !9551
  br label %if.end, !dbg !9551

if.else:                                          ; preds = %entry
  %12 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9552
  %call3 = call i32 @writer_print_string(%struct.WriterContext* %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.410, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !9553
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9554
  %14 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9555
  %stream_index4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %14, i32 0, i32 5, !dbg !9556
  %15 = load i32, i32* %stream_index4, align 4, !dbg !9556
  %conv = sext i32 %15 to i64, !dbg !9555
  call void @writer_print_integer(%struct.WriterContext* %13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.412, i32 0, i32 0), i64 %conv), !dbg !9557
  %16 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9558
  %17 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9559
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %17, i32 0, i32 1, !dbg !9560
  %18 = load i64, i64* %pts, align 8, !dbg !9560
  call void @writer_print_ts(%struct.WriterContext* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.413, i32 0, i32 0), i64 %18, i32 0), !dbg !9561
  %19 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9562
  %20 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9563
  %pts5 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %20, i32 0, i32 1, !dbg !9564
  %21 = load i64, i64* %pts5, align 8, !dbg !9564
  %22 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9565
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i32 0, i32 4, !dbg !9566
  call void @writer_print_time(%struct.WriterContext* %19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.414, i32 0, i32 0), i64 %21, %struct.AVRational* %time_base, i32 0), !dbg !9567
  %23 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9568
  %24 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9569
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %24, i32 0, i32 2, !dbg !9570
  %25 = load i64, i64* %dts, align 8, !dbg !9570
  call void @writer_print_ts(%struct.WriterContext* %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.415, i32 0, i32 0), i64 %25, i32 0), !dbg !9571
  %26 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9572
  %27 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9573
  %dts6 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %27, i32 0, i32 2, !dbg !9574
  %28 = load i64, i64* %dts6, align 8, !dbg !9574
  %29 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9575
  %time_base7 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %29, i32 0, i32 4, !dbg !9576
  call void @writer_print_time(%struct.WriterContext* %26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.416, i32 0, i32 0), i64 %28, %struct.AVRational* %time_base7, i32 0), !dbg !9577
  %30 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9578
  %31 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9579
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %31, i32 0, i32 9, !dbg !9580
  %32 = load i64, i64* %duration, align 8, !dbg !9580
  call void @writer_print_ts(%struct.WriterContext* %30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.417, i32 0, i32 0), i64 %32, i32 1), !dbg !9581
  %33 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9582
  %34 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9583
  %duration8 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %34, i32 0, i32 9, !dbg !9584
  %35 = load i64, i64* %duration8, align 8, !dbg !9584
  %36 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9585
  %time_base9 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %36, i32 0, i32 4, !dbg !9586
  call void @writer_print_time(%struct.WriterContext* %33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.418, i32 0, i32 0), i64 %35, %struct.AVRational* %time_base9, i32 1), !dbg !9587
  %37 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9588
  %38 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9589
  %convergence_duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %38, i32 0, i32 11, !dbg !9590
  %39 = load i64, i64* %convergence_duration, align 8, !dbg !9590
  call void @writer_print_ts(%struct.WriterContext* %37, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.419, i32 0, i32 0), i64 %39, i32 1), !dbg !9591
  %40 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9592
  %41 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9593
  %convergence_duration10 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %41, i32 0, i32 11, !dbg !9594
  %42 = load i64, i64* %convergence_duration10, align 8, !dbg !9594
  %43 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9595
  %time_base11 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %43, i32 0, i32 4, !dbg !9596
  call void @writer_print_time(%struct.WriterContext* %40, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.420, i32 0, i32 0), i64 %42, %struct.AVRational* %time_base11, i32 1), !dbg !9597
  br label %do.body, !dbg !9598, !llvm.loop !9599

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.unit_value* %uv, metadata !9600, metadata !2571), !dbg !9602
  %44 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9603
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %44, i32 0, i32 4, !dbg !9605
  %45 = load i32, i32* %size, align 8, !dbg !9605
  %conv12 = sext i32 %45 to i64, !dbg !9603
  %val = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 0, !dbg !9606
  %i = bitcast %union.anon.1* %val to i64*, !dbg !9607
  store i64 %conv12, i64* %i, align 8, !dbg !9608
  %unit = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 1, !dbg !9609
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @unit_byte_str, i32 0, i32 0), i8** %unit, align 8, !dbg !9610
  %46 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9611
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %val_str, i32 0, i32 0, !dbg !9612
  %47 = bitcast %struct.unit_value* %uv to { i64, i8* }*, !dbg !9613
  %48 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %47, i32 0, i32 0, !dbg !9613
  %49 = load i64, i64* %48, align 8, !dbg !9613
  %50 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %47, i32 0, i32 1, !dbg !9613
  %51 = load i8*, i8** %50, align 8, !dbg !9613
  %call13 = call i8* @value_string(i8* %arraydecay, i32 128, i64 %49, i8* %51), !dbg !9613
  %call14 = call i32 @writer_print_string(%struct.WriterContext* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.421, i32 0, i32 0), i8* %call13, i32 0), !dbg !9614
  br label %do.end, !dbg !9616

do.end:                                           ; preds = %do.body
  %52 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9617
  %pos = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %52, i32 0, i32 10, !dbg !9619
  %53 = load i64, i64* %pos, align 8, !dbg !9619
  %cmp = icmp ne i64 %53, -1, !dbg !9620
  br i1 %cmp, label %if.then16, label %if.else21, !dbg !9621

if.then16:                                        ; preds = %do.end
  br label %do.body17, !dbg !9622, !llvm.loop !9624

do.body17:                                        ; preds = %if.then16
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !9626
  %54 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9629
  %pos18 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %54, i32 0, i32 10, !dbg !9630
  %55 = load i64, i64* %pos18, align 8, !dbg !9630
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %pbuf, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.422, i32 0, i32 0), i64 %55), !dbg !9631
  %56 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9633
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !9634
  %57 = load i8*, i8** %str, align 8, !dbg !9634
  %call19 = call i32 @writer_print_string(%struct.WriterContext* %56, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.423, i32 0, i32 0), i8* %57, i32 0), !dbg !9635
  br label %do.end20, !dbg !9637

do.end20:                                         ; preds = %do.body17
  br label %if.end23, !dbg !9638

if.else21:                                        ; preds = %do.end
  %58 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9640
  %call22 = call i32 @writer_print_string(%struct.WriterContext* %58, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.423, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !9641
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %do.end20
  br label %do.body24, !dbg !9642, !llvm.loop !9643

do.body24:                                        ; preds = %if.end23
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !9644
  %59 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9647
  %flags = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %59, i32 0, i32 6, !dbg !9648
  %60 = load i32, i32* %flags, align 8, !dbg !9648
  %and = and i32 %60, 1, !dbg !9649
  %tobool25 = icmp ne i32 %and, 0, !dbg !9647
  %cond = select i1 %tobool25, i32 75, i32 95, !dbg !9647
  %61 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9650
  %flags26 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %61, i32 0, i32 6, !dbg !9651
  %62 = load i32, i32* %flags26, align 8, !dbg !9651
  %and27 = and i32 %62, 4, !dbg !9652
  %tobool28 = icmp ne i32 %and27, 0, !dbg !9650
  %cond29 = select i1 %tobool28, i32 68, i32 95, !dbg !9650
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %pbuf, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.424, i32 0, i32 0), i32 %cond, i32 %cond29), !dbg !9653
  %63 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9655
  %str30 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !9656
  %64 = load i8*, i8** %str30, align 8, !dbg !9656
  %call31 = call i32 @writer_print_string(%struct.WriterContext* %63, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i8* %64, i32 0), !dbg !9657
  br label %do.end32, !dbg !9659

do.end32:                                         ; preds = %do.body24
  %65 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9660
  %side_data_elems = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %65, i32 0, i32 8, !dbg !9662
  %66 = load i32, i32* %side_data_elems, align 8, !dbg !9662
  %tobool33 = icmp ne i32 %66, 0, !dbg !9660
  br i1 %tobool33, label %if.then34, label %if.end51, !dbg !9663

if.then34:                                        ; preds = %do.end32
  call void @llvm.dbg.declare(metadata i32* %size35, metadata !9664, metadata !2571), !dbg !9666
  call void @llvm.dbg.declare(metadata i8** %side_metadata, metadata !9667, metadata !2571), !dbg !9668
  %67 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9669
  %call36 = call i8* @av_packet_get_side_data(%struct.AVPacket* %67, i32 13, i32* %size35), !dbg !9670
  store i8* %call36, i8** %side_metadata, align 8, !dbg !9671
  %68 = load i8*, i8** %side_metadata, align 8, !dbg !9672
  %tobool37 = icmp ne i8* %68, null, !dbg !9672
  br i1 %tobool37, label %land.lhs.true, label %if.end48, !dbg !9674

land.lhs.true:                                    ; preds = %if.then34
  %69 = load i32, i32* %size35, align 4, !dbg !9675
  %tobool38 = icmp ne i32 %69, 0, !dbg !9675
  br i1 %tobool38, label %land.lhs.true39, label %if.end48, !dbg !9677

land.lhs.true39:                                  ; preds = %land.lhs.true
  %70 = load i32, i32* @do_show_packet_tags, align 4, !dbg !9678
  %tobool40 = icmp ne i32 %70, 0, !dbg !9678
  br i1 %tobool40, label %if.then41, label %if.end48, !dbg !9680

if.then41:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %dict, metadata !9681, metadata !2571), !dbg !9683
  store %struct.AVDictionary* null, %struct.AVDictionary** %dict, align 8, !dbg !9683
  %71 = load i8*, i8** %side_metadata, align 8, !dbg !9684
  %72 = load i32, i32* %size35, align 4, !dbg !9686
  %call42 = call i32 @av_packet_unpack_dictionary(i8* %71, i32 %72, %struct.AVDictionary** %dict), !dbg !9687
  %cmp43 = icmp sge i32 %call42, 0, !dbg !9688
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !9689

if.then45:                                        ; preds = %if.then41
  %73 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9690
  %74 = load %struct.AVDictionary*, %struct.AVDictionary** %dict, align 8, !dbg !9691
  %call46 = call i32 @show_tags(%struct.WriterContext* %73, %struct.AVDictionary* %74, i32 16), !dbg !9692
  br label %if.end47, !dbg !9692

if.end47:                                         ; preds = %if.then45, %if.then41
  call void @av_dict_free(%struct.AVDictionary** %dict), !dbg !9693
  br label %if.end48, !dbg !9694

if.end48:                                         ; preds = %if.end47, %land.lhs.true39, %land.lhs.true, %if.then34
  %75 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9695
  %76 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9696
  %codecpar49 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %76, i32 0, i32 19, !dbg !9697
  %77 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar49, align 8, !dbg !9697
  %78 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9698
  %side_data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %78, i32 0, i32 7, !dbg !9699
  %79 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %side_data, align 8, !dbg !9699
  %80 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9700
  %side_data_elems50 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %80, i32 0, i32 8, !dbg !9701
  %81 = load i32, i32* %side_data_elems50, align 8, !dbg !9701
  call void @print_pkt_side_data(%struct.WriterContext* %75, %struct.AVCodecParameters* %77, %struct.AVPacketSideData* %79, i32 %81, i32 19, i32 20), !dbg !9702
  br label %if.end51, !dbg !9703

if.end51:                                         ; preds = %if.end48, %do.end32
  %82 = load i32, i32* @do_show_data, align 4, !dbg !9704
  %tobool52 = icmp ne i32 %82, 0, !dbg !9704
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !9706

if.then53:                                        ; preds = %if.end51
  %83 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9707
  %84 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9708
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %84, i32 0, i32 3, !dbg !9709
  %85 = load i8*, i8** %data, align 8, !dbg !9709
  %86 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9710
  %size54 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %86, i32 0, i32 4, !dbg !9711
  %87 = load i32, i32* %size54, align 8, !dbg !9711
  call void @writer_print_data(%struct.WriterContext* %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.425, i32 0, i32 0), i8* %85, i32 %87), !dbg !9712
  br label %if.end55, !dbg !9712

if.end55:                                         ; preds = %if.then53, %if.end51
  %88 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9713
  %89 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9714
  %data56 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %89, i32 0, i32 3, !dbg !9715
  %90 = load i8*, i8** %data56, align 8, !dbg !9715
  %91 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9716
  %size57 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %91, i32 0, i32 4, !dbg !9717
  %92 = load i32, i32* %size57, align 8, !dbg !9717
  call void @writer_print_data_hash(%struct.WriterContext* %88, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.426, i32 0, i32 0), i8* %90, i32 %92), !dbg !9718
  %93 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !9719
  call void @writer_print_section_footer(%struct.WriterContext* %93), !dbg !9720
  %call58 = call i32 @av_bprint_finalize(%struct.AVBPrint* %pbuf, i8** null), !dbg !9721
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9722
  %call59 = call i32 @fflush(%struct._IO_FILE* %94), !dbg !9723
  ret void, !dbg !9724
}

declare void @av_packet_unref(%struct.AVPacket*) #2

declare void @av_frame_free(%struct.AVFrame**) #2

declare i32 @av_strerror(i32, i8*, i64) #2

declare i8* @av_get_media_type_string(i32) #2

; Function Attrs: nounwind uwtable
define internal void @writer_print_ts(%struct.WriterContext* %wctx, i8* %key, i64 %ts, i32 %is_duration) #0 !dbg !9725 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %ts.addr = alloca i64, align 8
  %is_duration.addr = alloca i32, align 4
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !9728, metadata !2571), !dbg !9729
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !9730, metadata !2571), !dbg !9731
  store i64 %ts, i64* %ts.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ts.addr, metadata !9732, metadata !2571), !dbg !9733
  store i32 %is_duration, i32* %is_duration.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_duration.addr, metadata !9734, metadata !2571), !dbg !9735
  %0 = load i32, i32* %is_duration.addr, align 4, !dbg !9736
  %tobool = icmp ne i32 %0, 0, !dbg !9736
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !9738

land.lhs.true:                                    ; preds = %entry
  %1 = load i64, i64* %ts.addr, align 8, !dbg !9739
  %cmp = icmp eq i64 %1, -9223372036854775808, !dbg !9741
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9742

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %is_duration.addr, align 4, !dbg !9743
  %tobool1 = icmp ne i32 %2, 0, !dbg !9743
  br i1 %tobool1, label %land.lhs.true2, label %if.else, !dbg !9745

land.lhs.true2:                                   ; preds = %lor.lhs.false
  %3 = load i64, i64* %ts.addr, align 8, !dbg !9746
  %cmp3 = icmp eq i64 %3, 0, !dbg !9748
  br i1 %cmp3, label %if.then, label %if.else, !dbg !9749

if.then:                                          ; preds = %land.lhs.true2, %land.lhs.true
  %4 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !9750
  %5 = load i8*, i8** %key.addr, align 8, !dbg !9752
  %call = call i32 @writer_print_string(%struct.WriterContext* %4, i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !9753
  br label %if.end, !dbg !9754

if.else:                                          ; preds = %land.lhs.true2, %lor.lhs.false
  %6 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !9755
  %7 = load i8*, i8** %key.addr, align 8, !dbg !9757
  %8 = load i64, i64* %ts.addr, align 8, !dbg !9758
  call void @writer_print_integer(%struct.WriterContext* %6, i8* %7, i64 %8), !dbg !9759
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9760
}

; Function Attrs: nounwind uwtable
define internal void @writer_print_time(%struct.WriterContext* %wctx, i8* %key, i64 %ts, %struct.AVRational* %time_base, i32 %is_duration) #0 !dbg !9761 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %ts.addr = alloca i64, align 8
  %time_base.addr = alloca %struct.AVRational*, align 8
  %is_duration.addr = alloca i32, align 4
  %buf = alloca [128 x i8], align 16
  %d = alloca double, align 8
  %uv = alloca %struct.unit_value, align 8
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !9764, metadata !2571), !dbg !9765
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !9766, metadata !2571), !dbg !9767
  store i64 %ts, i64* %ts.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ts.addr, metadata !9768, metadata !2571), !dbg !9769
  store %struct.AVRational* %time_base, %struct.AVRational** %time_base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVRational** %time_base.addr, metadata !9770, metadata !2571), !dbg !9771
  store i32 %is_duration, i32* %is_duration.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_duration.addr, metadata !9772, metadata !2571), !dbg !9773
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !9774, metadata !2571), !dbg !9775
  %0 = load i32, i32* %is_duration.addr, align 4, !dbg !9776
  %tobool = icmp ne i32 %0, 0, !dbg !9776
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !9778

land.lhs.true:                                    ; preds = %entry
  %1 = load i64, i64* %ts.addr, align 8, !dbg !9779
  %cmp = icmp eq i64 %1, -9223372036854775808, !dbg !9781
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9782

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %is_duration.addr, align 4, !dbg !9783
  %tobool1 = icmp ne i32 %2, 0, !dbg !9783
  br i1 %tobool1, label %land.lhs.true2, label %if.else, !dbg !9785

land.lhs.true2:                                   ; preds = %lor.lhs.false
  %3 = load i64, i64* %ts.addr, align 8, !dbg !9786
  %cmp3 = icmp eq i64 %3, 0, !dbg !9788
  br i1 %cmp3, label %if.then, label %if.else, !dbg !9789

if.then:                                          ; preds = %land.lhs.true2, %land.lhs.true
  %4 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !9790
  %5 = load i8*, i8** %key.addr, align 8, !dbg !9792
  %call = call i32 @writer_print_string(%struct.WriterContext* %4, i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !9793
  br label %if.end, !dbg !9794

if.else:                                          ; preds = %land.lhs.true2, %lor.lhs.false
  call void @llvm.dbg.declare(metadata double* %d, metadata !9795, metadata !2571), !dbg !9797
  %6 = load i64, i64* %ts.addr, align 8, !dbg !9798
  %conv = sitofp i64 %6 to double, !dbg !9798
  %7 = load %struct.AVRational*, %struct.AVRational** %time_base.addr, align 8, !dbg !9799
  %8 = bitcast %struct.AVRational* %7 to i64*, !dbg !9800
  %9 = load i64, i64* %8, align 4, !dbg !9800
  %call4 = call double @av_q2d(i64 %9), !dbg !9800
  %mul = fmul double %conv, %call4, !dbg !9801
  store double %mul, double* %d, align 8, !dbg !9797
  call void @llvm.dbg.declare(metadata %struct.unit_value* %uv, metadata !9802, metadata !2571), !dbg !9803
  %10 = load double, double* %d, align 8, !dbg !9804
  %val = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 0, !dbg !9805
  %d5 = bitcast %union.anon.1* %val to double*, !dbg !9806
  store double %10, double* %d5, align 8, !dbg !9807
  %unit = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 1, !dbg !9808
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @unit_second_str, i32 0, i32 0), i8** %unit, align 8, !dbg !9809
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !9810
  %11 = bitcast %struct.unit_value* %uv to { i64, i8* }*, !dbg !9811
  %12 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %11, i32 0, i32 0, !dbg !9811
  %13 = load i64, i64* %12, align 8, !dbg !9811
  %14 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %11, i32 0, i32 1, !dbg !9811
  %15 = load i8*, i8** %14, align 8, !dbg !9811
  %call6 = call i8* @value_string(i8* %arraydecay, i32 128, i64 %13, i8* %15), !dbg !9811
  %16 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !9812
  %17 = load i8*, i8** %key.addr, align 8, !dbg !9813
  %arraydecay7 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !9814
  %call8 = call i32 @writer_print_string(%struct.WriterContext* %16, i8* %17, i8* %arraydecay7, i32 0), !dbg !9815
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9816
}

; Function Attrs: nounwind uwtable
define internal i8* @value_string(i8* %buf, i32 %buf_size, i64 %uv.coerce0, i8* %uv.coerce1) #0 !dbg !9817 {
entry:
  %retval.i66 = alloca i32, align 4
  %a.addr.i67 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i67, metadata !9820, metadata !2571), !dbg !9825
  %amin.addr.i68 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i68, metadata !9833, metadata !2571), !dbg !9834
  %amax.addr.i69 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i69, metadata !9835, metadata !2571), !dbg !9836
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !9820, metadata !2571), !dbg !9837
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !9833, metadata !2571), !dbg !9840
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !9835, metadata !2571), !dbg !9841
  %uv = alloca %struct.unit_value, align 8
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %vald = alloca double, align 8
  %vali = alloca i64, align 8
  %show_float = alloca i32, align 4
  %secs = alloca double, align 8
  %hours = alloca i32, align 4
  %mins = alloca i32, align 4
  %prefix_string = alloca i8*, align 8
  %index = alloca i64, align 8
  %0 = bitcast %struct.unit_value* %uv to { i64, i8* }*
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0
  store i64 %uv.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1
  store i8* %uv.coerce1, i8** %2, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9842, metadata !2571), !dbg !9843
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !9844, metadata !2571), !dbg !9845
  call void @llvm.dbg.declare(metadata %struct.unit_value* %uv, metadata !9846, metadata !2571), !dbg !9847
  call void @llvm.dbg.declare(metadata double* %vald, metadata !9848, metadata !2571), !dbg !9849
  call void @llvm.dbg.declare(metadata i64* %vali, metadata !9850, metadata !2571), !dbg !9851
  call void @llvm.dbg.declare(metadata i32* %show_float, metadata !9852, metadata !2571), !dbg !9853
  store i32 0, i32* %show_float, align 4, !dbg !9853
  %unit = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 1, !dbg !9854
  %3 = load i8*, i8** %unit, align 8, !dbg !9854
  %cmp = icmp eq i8* %3, getelementptr inbounds ([2 x i8], [2 x i8]* @unit_second_str, i32 0, i32 0), !dbg !9856
  br i1 %cmp, label %if.then, label %if.else, !dbg !9857

if.then:                                          ; preds = %entry
  %val = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 0, !dbg !9858
  %d = bitcast %union.anon.1* %val to double*, !dbg !9860
  %4 = load double, double* %d, align 8, !dbg !9860
  store double %4, double* %vald, align 8, !dbg !9861
  store i32 1, i32* %show_float, align 4, !dbg !9862
  br label %if.end, !dbg !9863

if.else:                                          ; preds = %entry
  %val1 = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 0, !dbg !9864
  %i = bitcast %union.anon.1* %val1 to i64*, !dbg !9866
  %5 = load i64, i64* %i, align 8, !dbg !9866
  store i64 %5, i64* %vali, align 8, !dbg !9867
  %conv = sitofp i64 %5 to double, !dbg !9868
  store double %conv, double* %vald, align 8, !dbg !9869
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %unit2 = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 1, !dbg !9870
  %6 = load i8*, i8** %unit2, align 8, !dbg !9870
  %cmp3 = icmp eq i8* %6, getelementptr inbounds ([2 x i8], [2 x i8]* @unit_second_str, i32 0, i32 0), !dbg !9871
  br i1 %cmp3, label %land.lhs.true, label %if.else10, !dbg !9872

land.lhs.true:                                    ; preds = %if.end
  %7 = load i32, i32* @use_value_sexagesimal_format, align 4, !dbg !9873
  %tobool = icmp ne i32 %7, 0, !dbg !9873
  br i1 %tobool, label %if.then5, label %if.else10, !dbg !9875

if.then5:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata double* %secs, metadata !9876, metadata !2571), !dbg !9878
  call void @llvm.dbg.declare(metadata i32* %hours, metadata !9879, metadata !2571), !dbg !9880
  call void @llvm.dbg.declare(metadata i32* %mins, metadata !9881, metadata !2571), !dbg !9882
  %8 = load double, double* %vald, align 8, !dbg !9883
  store double %8, double* %secs, align 8, !dbg !9884
  %9 = load double, double* %secs, align 8, !dbg !9885
  %conv6 = fptosi double %9 to i32, !dbg !9886
  %div = sdiv i32 %conv6, 60, !dbg !9887
  store i32 %div, i32* %mins, align 4, !dbg !9888
  %10 = load double, double* %secs, align 8, !dbg !9889
  %11 = load i32, i32* %mins, align 4, !dbg !9890
  %mul = mul nsw i32 %11, 60, !dbg !9891
  %conv7 = sitofp i32 %mul to double, !dbg !9890
  %sub = fsub double %10, %conv7, !dbg !9892
  store double %sub, double* %secs, align 8, !dbg !9893
  %12 = load i32, i32* %mins, align 4, !dbg !9894
  %div8 = sdiv i32 %12, 60, !dbg !9895
  store i32 %div8, i32* %hours, align 4, !dbg !9896
  %13 = load i32, i32* %mins, align 4, !dbg !9897
  %rem = srem i32 %13, 60, !dbg !9897
  store i32 %rem, i32* %mins, align 4, !dbg !9897
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !9898
  %15 = load i32, i32* %buf_size.addr, align 4, !dbg !9899
  %conv9 = sext i32 %15 to i64, !dbg !9899
  %16 = load i32, i32* %hours, align 4, !dbg !9900
  %17 = load i32, i32* %mins, align 4, !dbg !9901
  %18 = load double, double* %secs, align 8, !dbg !9902
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %14, i64 %conv9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.427, i32 0, i32 0), i32 %16, i32 %17, double %18) #9, !dbg !9903
  br label %if.end65, !dbg !9904

if.else10:                                        ; preds = %land.lhs.true, %if.end
  call void @llvm.dbg.declare(metadata i8** %prefix_string, metadata !9905, metadata !2571), !dbg !9906
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), i8** %prefix_string, align 8, !dbg !9906
  %19 = load i32, i32* @use_value_prefix, align 4, !dbg !9907
  %tobool11 = icmp ne i32 %19, 0, !dbg !9907
  br i1 %tobool11, label %land.lhs.true12, label %if.end42, !dbg !9908

land.lhs.true12:                                  ; preds = %if.else10
  %20 = load double, double* %vald, align 8, !dbg !9909
  %cmp13 = fcmp ogt double %20, 1.000000e+00, !dbg !9911
  br i1 %cmp13, label %if.then15, label %if.end42, !dbg !9912

if.then15:                                        ; preds = %land.lhs.true12
  call void @llvm.dbg.declare(metadata i64* %index, metadata !9913, metadata !2571), !dbg !9914
  %unit16 = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 1, !dbg !9915
  %21 = load i8*, i8** %unit16, align 8, !dbg !9915
  %cmp17 = icmp eq i8* %21, getelementptr inbounds ([5 x i8], [5 x i8]* @unit_byte_str, i32 0, i32 0), !dbg !9916
  br i1 %cmp17, label %land.lhs.true19, label %if.else30, !dbg !9917

land.lhs.true19:                                  ; preds = %if.then15
  %22 = load i32, i32* @use_byte_value_binary_prefix, align 4, !dbg !9918
  %tobool20 = icmp ne i32 %22, 0, !dbg !9918
  br i1 %tobool20, label %if.then21, label %if.else30, !dbg !9920

if.then21:                                        ; preds = %land.lhs.true19
  %23 = load double, double* %vald, align 8, !dbg !9921
  %call22 = call double @log2(double %23) #9, !dbg !9922
  %conv23 = fptosi double %call22 to i64, !dbg !9923
  %div24 = sdiv i64 %conv23, 10, !dbg !9924
  store i64 %div24, i64* %index, align 8, !dbg !9925
  %24 = load i64, i64* %index, align 8, !dbg !9926
  %conv25 = trunc i64 %24 to i32, !dbg !9926
  store i32 %conv25, i32* %a.addr.i, align 4, !dbg !9927
  store i32 0, i32* %amin.addr.i, align 4, !dbg !9927
  store i32 5, i32* %amax.addr.i, align 4, !dbg !9927
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !9928
  %26 = load i32, i32* %amin.addr.i, align 4, !dbg !9930
  %cmp.i = icmp slt i32 %25, %26, !dbg !9931
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !9932

if.then.i:                                        ; preds = %if.then21
  %27 = load i32, i32* %amin.addr.i, align 4, !dbg !9933
  store i32 %27, i32* %retval.i, align 4, !dbg !9935
  br label %av_clip_c.exit, !dbg !9935

if.else.i:                                        ; preds = %if.then21
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !9936
  %29 = load i32, i32* %amax.addr.i, align 4, !dbg !9938
  %cmp1.i = icmp sgt i32 %28, %29, !dbg !9939
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !9940

if.then2.i:                                       ; preds = %if.else.i
  %30 = load i32, i32* %amax.addr.i, align 4, !dbg !9941
  store i32 %30, i32* %retval.i, align 4, !dbg !9943
  br label %av_clip_c.exit, !dbg !9943

if.else3.i:                                       ; preds = %if.else.i
  %31 = load i32, i32* %a.addr.i, align 4, !dbg !9944
  store i32 %31, i32* %retval.i, align 4, !dbg !9945
  br label %av_clip_c.exit, !dbg !9945

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %32 = load i32, i32* %retval.i, align 4, !dbg !9946
  %conv27 = sext i32 %32 to i64, !dbg !9927
  store i64 %conv27, i64* %index, align 8, !dbg !9947
  %33 = load i64, i64* %index, align 8, !dbg !9948
  %arrayidx = getelementptr inbounds [6 x %struct.anon.2], [6 x %struct.anon.2]* @si_prefixes, i64 0, i64 %33, !dbg !9949
  %bin_val = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx, i32 0, i32 0, !dbg !9950
  %34 = load double, double* %bin_val, align 16, !dbg !9950
  %35 = load double, double* %vald, align 8, !dbg !9951
  %div28 = fdiv double %35, %34, !dbg !9951
  store double %div28, double* %vald, align 8, !dbg !9951
  %36 = load i64, i64* %index, align 8, !dbg !9952
  %arrayidx29 = getelementptr inbounds [6 x %struct.anon.2], [6 x %struct.anon.2]* @si_prefixes, i64 0, i64 %36, !dbg !9953
  %bin_str = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx29, i32 0, i32 2, !dbg !9954
  %37 = load i8*, i8** %bin_str, align 16, !dbg !9954
  store i8* %37, i8** %prefix_string, align 8, !dbg !9955
  br label %if.end40, !dbg !9956

if.else30:                                        ; preds = %land.lhs.true19, %if.then15
  %38 = load double, double* %vald, align 8, !dbg !9957
  %call31 = call double @log10(double %38) #9, !dbg !9958
  %conv32 = fptosi double %call31 to i64, !dbg !9959
  %div33 = sdiv i64 %conv32, 3, !dbg !9960
  store i64 %div33, i64* %index, align 8, !dbg !9961
  %39 = load i64, i64* %index, align 8, !dbg !9962
  %conv34 = trunc i64 %39 to i32, !dbg !9962
  store i32 %conv34, i32* %a.addr.i67, align 4, !dbg !9963
  store i32 0, i32* %amin.addr.i68, align 4, !dbg !9963
  store i32 5, i32* %amax.addr.i69, align 4, !dbg !9963
  %40 = load i32, i32* %a.addr.i67, align 4, !dbg !9964
  %41 = load i32, i32* %amin.addr.i68, align 4, !dbg !9965
  %cmp.i70 = icmp slt i32 %40, %41, !dbg !9966
  br i1 %cmp.i70, label %if.then.i71, label %if.else.i73, !dbg !9967

if.then.i71:                                      ; preds = %if.else30
  %42 = load i32, i32* %amin.addr.i68, align 4, !dbg !9968
  store i32 %42, i32* %retval.i66, align 4, !dbg !9969
  br label %av_clip_c.exit76, !dbg !9969

if.else.i73:                                      ; preds = %if.else30
  %43 = load i32, i32* %a.addr.i67, align 4, !dbg !9970
  %44 = load i32, i32* %amax.addr.i69, align 4, !dbg !9971
  %cmp1.i72 = icmp sgt i32 %43, %44, !dbg !9972
  br i1 %cmp1.i72, label %if.then2.i74, label %if.else3.i75, !dbg !9973

if.then2.i74:                                     ; preds = %if.else.i73
  %45 = load i32, i32* %amax.addr.i69, align 4, !dbg !9974
  store i32 %45, i32* %retval.i66, align 4, !dbg !9975
  br label %av_clip_c.exit76, !dbg !9975

if.else3.i75:                                     ; preds = %if.else.i73
  %46 = load i32, i32* %a.addr.i67, align 4, !dbg !9976
  store i32 %46, i32* %retval.i66, align 4, !dbg !9977
  br label %av_clip_c.exit76, !dbg !9977

av_clip_c.exit76:                                 ; preds = %if.then.i71, %if.then2.i74, %if.else3.i75
  %47 = load i32, i32* %retval.i66, align 4, !dbg !9978
  %conv36 = sext i32 %47 to i64, !dbg !9963
  store i64 %conv36, i64* %index, align 8, !dbg !9979
  %48 = load i64, i64* %index, align 8, !dbg !9980
  %arrayidx37 = getelementptr inbounds [6 x %struct.anon.2], [6 x %struct.anon.2]* @si_prefixes, i64 0, i64 %48, !dbg !9981
  %dec_val = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx37, i32 0, i32 1, !dbg !9982
  %49 = load double, double* %dec_val, align 8, !dbg !9982
  %50 = load double, double* %vald, align 8, !dbg !9983
  %div38 = fdiv double %50, %49, !dbg !9983
  store double %div38, double* %vald, align 8, !dbg !9983
  %51 = load i64, i64* %index, align 8, !dbg !9984
  %arrayidx39 = getelementptr inbounds [6 x %struct.anon.2], [6 x %struct.anon.2]* @si_prefixes, i64 0, i64 %51, !dbg !9985
  %dec_str = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx39, i32 0, i32 3, !dbg !9986
  %52 = load i8*, i8** %dec_str, align 8, !dbg !9986
  store i8* %52, i8** %prefix_string, align 8, !dbg !9987
  br label %if.end40

if.end40:                                         ; preds = %av_clip_c.exit76, %av_clip_c.exit
  %53 = load double, double* %vald, align 8, !dbg !9988
  %conv41 = fptosi double %53 to i64, !dbg !9988
  store i64 %conv41, i64* %vali, align 8, !dbg !9989
  br label %if.end42, !dbg !9990

if.end42:                                         ; preds = %if.end40, %land.lhs.true12, %if.else10
  %54 = load i32, i32* %show_float, align 4, !dbg !9991
  %tobool43 = icmp ne i32 %54, 0, !dbg !9991
  br i1 %tobool43, label %if.then50, label %lor.lhs.false, !dbg !9993

lor.lhs.false:                                    ; preds = %if.end42
  %55 = load i32, i32* @use_value_prefix, align 4, !dbg !9994
  %tobool44 = icmp ne i32 %55, 0, !dbg !9994
  br i1 %tobool44, label %land.lhs.true45, label %if.else53, !dbg !9996

land.lhs.true45:                                  ; preds = %lor.lhs.false
  %56 = load double, double* %vald, align 8, !dbg !9997
  %57 = load double, double* %vald, align 8, !dbg !9999
  %conv46 = fptosi double %57 to i64, !dbg !10000
  %conv47 = sitofp i64 %conv46 to double, !dbg !10000
  %cmp48 = fcmp une double %56, %conv47, !dbg !10001
  br i1 %cmp48, label %if.then50, label %if.else53, !dbg !10002

if.then50:                                        ; preds = %land.lhs.true45, %if.end42
  %58 = load i8*, i8** %buf.addr, align 8, !dbg !10003
  %59 = load i32, i32* %buf_size.addr, align 4, !dbg !10004
  %conv51 = sext i32 %59 to i64, !dbg !10004
  %60 = load double, double* %vald, align 8, !dbg !10005
  %call52 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %58, i64 %conv51, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.428, i32 0, i32 0), double %60) #9, !dbg !10006
  br label %if.end56, !dbg !10006

if.else53:                                        ; preds = %land.lhs.true45, %lor.lhs.false
  %61 = load i8*, i8** %buf.addr, align 8, !dbg !10007
  %62 = load i32, i32* %buf_size.addr, align 4, !dbg !10008
  %conv54 = sext i32 %62 to i64, !dbg !10008
  %63 = load i64, i64* %vali, align 8, !dbg !10009
  %call55 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %61, i64 %conv54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.219, i32 0, i32 0), i64 %63) #9, !dbg !10010
  br label %if.end56

if.end56:                                         ; preds = %if.else53, %if.then50
  %64 = load i8*, i8** %buf.addr, align 8, !dbg !10011
  %65 = load i32, i32* %buf_size.addr, align 4, !dbg !10012
  %conv57 = sext i32 %65 to i64, !dbg !10012
  %66 = load i8*, i8** %prefix_string, align 8, !dbg !10013
  %67 = load i8, i8* %66, align 1, !dbg !10014
  %conv58 = sext i8 %67 to i32, !dbg !10014
  %tobool59 = icmp ne i32 %conv58, 0, !dbg !10014
  br i1 %tobool59, label %lor.end, label %lor.rhs, !dbg !10015

lor.rhs:                                          ; preds = %if.end56
  %68 = load i32, i32* @show_value_unit, align 4, !dbg !10016
  %tobool60 = icmp ne i32 %68, 0, !dbg !10018
  br label %lor.end, !dbg !10018

lor.end:                                          ; preds = %lor.rhs, %if.end56
  %69 = phi i1 [ true, %if.end56 ], [ %tobool60, %lor.rhs ]
  %cond = select i1 %69, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), !dbg !10019
  %70 = load i8*, i8** %prefix_string, align 8, !dbg !10021
  %71 = load i32, i32* @show_value_unit, align 4, !dbg !10022
  %tobool61 = icmp ne i32 %71, 0, !dbg !10022
  br i1 %tobool61, label %cond.true, label %cond.false, !dbg !10022

cond.true:                                        ; preds = %lor.end
  %unit62 = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 1, !dbg !10023
  %72 = load i8*, i8** %unit62, align 8, !dbg !10023
  br label %cond.end, !dbg !10024

cond.false:                                       ; preds = %lor.end
  br label %cond.end, !dbg !10025

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond63 = phi i8* [ %72, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), %cond.false ], !dbg !10026
  %call64 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* %64, i64 %conv57, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.429, i32 0, i32 0), i8* %cond, i8* %70, i8* %cond63), !dbg !10028
  br label %if.end65

if.end65:                                         ; preds = %cond.end, %if.then5
  %73 = load i8*, i8** %buf.addr, align 8, !dbg !10029
  ret i8* %73, !dbg !10030
}

declare i8* @av_packet_get_side_data(%struct.AVPacket*, i32, i32*) #2

declare i32 @av_packet_unpack_dictionary(i8*, i32, %struct.AVDictionary**) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_tags(%struct.WriterContext* %w, %struct.AVDictionary* %tags, i32 %section_id) #4 !dbg !10031 {
entry:
  %retval = alloca i32, align 4
  %w.addr = alloca %struct.WriterContext*, align 8
  %tags.addr = alloca %struct.AVDictionary*, align 8
  %section_id.addr = alloca i32, align 4
  %tag = alloca %struct.AVDictionaryEntry*, align 8
  %ret = alloca i32, align 4
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !10034, metadata !2571), !dbg !10035
  store %struct.AVDictionary* %tags, %struct.AVDictionary** %tags.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %tags.addr, metadata !10036, metadata !2571), !dbg !10037
  store i32 %section_id, i32* %section_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %section_id.addr, metadata !10038, metadata !2571), !dbg !10039
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %tag, metadata !10040, metadata !2571), !dbg !10041
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %tag, align 8, !dbg !10041
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10042, metadata !2571), !dbg !10043
  store i32 0, i32* %ret, align 4, !dbg !10043
  %0 = load %struct.AVDictionary*, %struct.AVDictionary** %tags.addr, align 8, !dbg !10044
  %tobool = icmp ne %struct.AVDictionary* %0, null, !dbg !10044
  br i1 %tobool, label %if.end, label %if.then, !dbg !10046

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10047
  br label %return, !dbg !10047

if.end:                                           ; preds = %entry
  %1 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10048
  %2 = load i32, i32* %section_id.addr, align 4, !dbg !10049
  call void @writer_print_section_header(%struct.WriterContext* %1, i32 %2), !dbg !10050
  br label %while.cond, !dbg !10051

while.cond:                                       ; preds = %if.end4, %if.end
  %3 = load %struct.AVDictionary*, %struct.AVDictionary** %tags.addr, align 8, !dbg !10052
  %4 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !10054
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.140, i32 0, i32 0), %struct.AVDictionaryEntry* %4, i32 2), !dbg !10055
  store %struct.AVDictionaryEntry* %call, %struct.AVDictionaryEntry** %tag, align 8, !dbg !10056
  %tobool1 = icmp ne %struct.AVDictionaryEntry* %call, null, !dbg !10057
  br i1 %tobool1, label %while.body, label %while.end, !dbg !10057

while.body:                                       ; preds = %while.cond
  %5 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10058
  %6 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !10061
  %key = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %6, i32 0, i32 0, !dbg !10062
  %7 = load i8*, i8** %key, align 8, !dbg !10062
  %8 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !10063
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %8, i32 0, i32 1, !dbg !10064
  %9 = load i8*, i8** %value, align 8, !dbg !10064
  %call2 = call i32 @writer_print_string(%struct.WriterContext* %5, i8* %7, i8* %9, i32 2), !dbg !10065
  store i32 %call2, i32* %ret, align 4, !dbg !10066
  %cmp = icmp slt i32 %call2, 0, !dbg !10067
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !10068

if.then3:                                         ; preds = %while.body
  br label %while.end, !dbg !10069

if.end4:                                          ; preds = %while.body
  br label %while.cond, !dbg !10070, !llvm.loop !10072

while.end:                                        ; preds = %if.then3, %while.cond
  %10 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10073
  call void @writer_print_section_footer(%struct.WriterContext* %10), !dbg !10074
  %11 = load i32, i32* %ret, align 4, !dbg !10075
  store i32 %11, i32* %retval, align 4, !dbg !10076
  br label %return, !dbg !10076

return:                                           ; preds = %while.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !10077
  ret i32 %12, !dbg !10077
}

; Function Attrs: nounwind uwtable
define internal void @print_pkt_side_data(%struct.WriterContext* %w, %struct.AVCodecParameters* %par, %struct.AVPacketSideData* %side_data, i32 %nb_side_data, i32 %id_data_list, i32 %id_data) #0 !dbg !10078 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  %side_data.addr = alloca %struct.AVPacketSideData*, align 8
  %nb_side_data.addr = alloca i32, align 4
  %id_data_list.addr = alloca i32, align 4
  %id_data.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %sd = alloca %struct.AVPacketSideData*, align 8
  %name = alloca i8*, align 8
  %stereo = alloca %struct.AVStereo3D*, align 8
  %spherical = alloca %struct.AVSphericalMapping*, align 8
  %l = alloca i64, align 8
  %t = alloca i64, align 8
  %r = alloca i64, align 8
  %b = alloca i64, align 8
  %metadata = alloca %struct.AVMasteringDisplayMetadata*, align 8
  %metadata107 = alloca %struct.AVContentLightMetadata*, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !10083, metadata !2571), !dbg !10084
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !10085, metadata !2571), !dbg !10086
  store %struct.AVPacketSideData* %side_data, %struct.AVPacketSideData** %side_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacketSideData** %side_data.addr, metadata !10087, metadata !2571), !dbg !10088
  store i32 %nb_side_data, i32* %nb_side_data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_side_data.addr, metadata !10089, metadata !2571), !dbg !10090
  store i32 %id_data_list, i32* %id_data_list.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id_data_list.addr, metadata !10091, metadata !2571), !dbg !10092
  store i32 %id_data, i32* %id_data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id_data.addr, metadata !10093, metadata !2571), !dbg !10094
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10095, metadata !2571), !dbg !10096
  %0 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10097
  %1 = load i32, i32* %id_data_list.addr, align 4, !dbg !10098
  call void @writer_print_section_header(%struct.WriterContext* %0, i32 %1), !dbg !10099
  store i32 0, i32* %i, align 4, !dbg !10100
  br label %for.cond, !dbg !10102

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10103
  %3 = load i32, i32* %nb_side_data.addr, align 4, !dbg !10106
  %cmp = icmp slt i32 %2, %3, !dbg !10107
  br i1 %cmp, label %for.body, label %for.end, !dbg !10108

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVPacketSideData** %sd, metadata !10109, metadata !2571), !dbg !10111
  %4 = load i32, i32* %i, align 4, !dbg !10112
  %idxprom = sext i32 %4 to i64, !dbg !10113
  %5 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %side_data.addr, align 8, !dbg !10113
  %arrayidx = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %5, i64 %idxprom, !dbg !10113
  store %struct.AVPacketSideData* %arrayidx, %struct.AVPacketSideData** %sd, align 8, !dbg !10111
  call void @llvm.dbg.declare(metadata i8** %name, metadata !10114, metadata !2571), !dbg !10115
  %6 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10116
  %type = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %6, i32 0, i32 2, !dbg !10117
  %7 = load i32, i32* %type, align 4, !dbg !10117
  %call = call i8* @av_packet_side_data_name(i32 %7), !dbg !10118
  store i8* %call, i8** %name, align 8, !dbg !10115
  %8 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10119
  %9 = load i32, i32* %id_data.addr, align 4, !dbg !10120
  call void @writer_print_section_header(%struct.WriterContext* %8, i32 %9), !dbg !10121
  %10 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10122
  %11 = load i8*, i8** %name, align 8, !dbg !10123
  %tobool = icmp ne i8* %11, null, !dbg !10123
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10123

cond.true:                                        ; preds = %for.body
  %12 = load i8*, i8** %name, align 8, !dbg !10124
  br label %cond.end, !dbg !10126

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !10127

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %12, %cond.true ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), %cond.false ], !dbg !10129
  %call1 = call i32 @writer_print_string(%struct.WriterContext* %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.440, i32 0, i32 0), i8* %cond, i32 0), !dbg !10131
  %13 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10132
  %type2 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %13, i32 0, i32 2, !dbg !10134
  %14 = load i32, i32* %type2, align 4, !dbg !10134
  %cmp3 = icmp eq i32 %14, 5, !dbg !10135
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !10136

land.lhs.true:                                    ; preds = %cond.end
  %15 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10137
  %size = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %15, i32 0, i32 1, !dbg !10139
  %16 = load i32, i32* %size, align 8, !dbg !10139
  %cmp4 = icmp sge i32 %16, 36, !dbg !10140
  br i1 %cmp4, label %if.then, label %if.else, !dbg !10141

if.then:                                          ; preds = %land.lhs.true
  %17 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10142
  %18 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10144
  %data = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %18, i32 0, i32 0, !dbg !10145
  %19 = load i8*, i8** %data, align 8, !dbg !10145
  call void @writer_print_integers(%struct.WriterContext* %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.441, i32 0, i32 0), i8* %19, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.442, i32 0, i32 0), i32 3, i32 4, i32 1), !dbg !10146
  %20 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10147
  %21 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10148
  %data5 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %21, i32 0, i32 0, !dbg !10149
  %22 = load i8*, i8** %data5, align 8, !dbg !10149
  %23 = bitcast i8* %22 to i32*, !dbg !10150
  %call6 = call double @av_display_rotation_get(i32* %23), !dbg !10151
  %conv = fptosi double %call6 to i64, !dbg !10151
  call void @writer_print_integer(%struct.WriterContext* %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.443, i32 0, i32 0), i64 %conv), !dbg !10152
  br label %if.end116, !dbg !10154

if.else:                                          ; preds = %land.lhs.true, %cond.end
  %24 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10155
  %type7 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %24, i32 0, i32 2, !dbg !10158
  %25 = load i32, i32* %type7, align 4, !dbg !10158
  %cmp8 = icmp eq i32 %25, 6, !dbg !10159
  br i1 %cmp8, label %if.then10, label %if.else18, !dbg !10155

if.then10:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.AVStereo3D** %stereo, metadata !10160, metadata !2571), !dbg !10164
  %26 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10165
  %data11 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %26, i32 0, i32 0, !dbg !10166
  %27 = load i8*, i8** %data11, align 8, !dbg !10166
  %28 = bitcast i8* %27 to %struct.AVStereo3D*, !dbg !10167
  store %struct.AVStereo3D* %28, %struct.AVStereo3D** %stereo, align 8, !dbg !10164
  %29 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10168
  %30 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo, align 8, !dbg !10169
  %type12 = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %30, i32 0, i32 0, !dbg !10170
  %31 = load i32, i32* %type12, align 4, !dbg !10170
  %call13 = call i8* @av_stereo3d_type_name(i32 %31), !dbg !10171
  %call14 = call i32 @writer_print_string(%struct.WriterContext* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.444, i32 0, i32 0), i8* %call13, i32 0), !dbg !10172
  %32 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10174
  %33 = load %struct.AVStereo3D*, %struct.AVStereo3D** %stereo, align 8, !dbg !10175
  %flags = getelementptr inbounds %struct.AVStereo3D, %struct.AVStereo3D* %33, i32 0, i32 1, !dbg !10176
  %34 = load i32, i32* %flags, align 4, !dbg !10176
  %and = and i32 %34, 1, !dbg !10177
  %tobool15 = icmp ne i32 %and, 0, !dbg !10178
  %lnot = xor i1 %tobool15, true, !dbg !10178
  %lnot16 = xor i1 %lnot, true, !dbg !10179
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !10179
  %conv17 = sext i32 %lnot.ext to i64, !dbg !10179
  call void @writer_print_integer(%struct.WriterContext* %32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.445, i32 0, i32 0), i64 %conv17), !dbg !10180
  br label %if.end115, !dbg !10181

if.else18:                                        ; preds = %if.else
  %35 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10182
  %type19 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %35, i32 0, i32 2, !dbg !10185
  %36 = load i32, i32* %type19, align 4, !dbg !10185
  %cmp20 = icmp eq i32 %36, 21, !dbg !10186
  br i1 %cmp20, label %if.then22, label %if.else47, !dbg !10182

if.then22:                                        ; preds = %if.else18
  call void @llvm.dbg.declare(metadata %struct.AVSphericalMapping** %spherical, metadata !10187, metadata !2571), !dbg !10191
  %37 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10192
  %data23 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %37, i32 0, i32 0, !dbg !10193
  %38 = load i8*, i8** %data23, align 8, !dbg !10193
  %39 = bitcast i8* %38 to %struct.AVSphericalMapping*, !dbg !10194
  store %struct.AVSphericalMapping* %39, %struct.AVSphericalMapping** %spherical, align 8, !dbg !10191
  %40 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10195
  %41 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !10196
  %projection = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %41, i32 0, i32 0, !dbg !10197
  %42 = load i32, i32* %projection, align 4, !dbg !10197
  %call24 = call i8* @av_spherical_projection_name(i32 %42), !dbg !10198
  %call25 = call i32 @writer_print_string(%struct.WriterContext* %40, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.446, i32 0, i32 0), i8* %call24, i32 0), !dbg !10199
  %43 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !10201
  %projection26 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %43, i32 0, i32 0, !dbg !10203
  %44 = load i32, i32* %projection26, align 4, !dbg !10203
  %cmp27 = icmp eq i32 %44, 1, !dbg !10204
  br i1 %cmp27, label %if.then29, label %if.else31, !dbg !10205

if.then29:                                        ; preds = %if.then22
  %45 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10206
  %46 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !10208
  %padding = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %46, i32 0, i32 8, !dbg !10209
  %47 = load i32, i32* %padding, align 4, !dbg !10209
  %conv30 = zext i32 %47 to i64, !dbg !10208
  call void @writer_print_integer(%struct.WriterContext* %45, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.447, i32 0, i32 0), i64 %conv30), !dbg !10210
  br label %if.end38, !dbg !10211

if.else31:                                        ; preds = %if.then22
  %48 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !10212
  %projection32 = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %48, i32 0, i32 0, !dbg !10215
  %49 = load i32, i32* %projection32, align 4, !dbg !10215
  %cmp33 = icmp eq i32 %49, 2, !dbg !10216
  br i1 %cmp33, label %if.then35, label %if.end, !dbg !10212

if.then35:                                        ; preds = %if.else31
  call void @llvm.dbg.declare(metadata i64* %l, metadata !10217, metadata !2571), !dbg !10219
  call void @llvm.dbg.declare(metadata i64* %t, metadata !10220, metadata !2571), !dbg !10221
  call void @llvm.dbg.declare(metadata i64* %r, metadata !10222, metadata !2571), !dbg !10223
  call void @llvm.dbg.declare(metadata i64* %b, metadata !10224, metadata !2571), !dbg !10225
  %50 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !10226
  %51 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !10227
  %width = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %51, i32 0, i32 11, !dbg !10228
  %52 = load i32, i32* %width, align 8, !dbg !10228
  %conv36 = sext i32 %52 to i64, !dbg !10227
  %53 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !10229
  %height = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %53, i32 0, i32 12, !dbg !10230
  %54 = load i32, i32* %height, align 4, !dbg !10230
  %conv37 = sext i32 %54 to i64, !dbg !10229
  call void @av_spherical_tile_bounds(%struct.AVSphericalMapping* %50, i64 %conv36, i64 %conv37, i64* %l, i64* %t, i64* %r, i64* %b), !dbg !10231
  %55 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10232
  %56 = load i64, i64* %l, align 8, !dbg !10233
  call void @writer_print_integer(%struct.WriterContext* %55, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.448, i32 0, i32 0), i64 %56), !dbg !10234
  %57 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10235
  %58 = load i64, i64* %t, align 8, !dbg !10236
  call void @writer_print_integer(%struct.WriterContext* %57, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.449, i32 0, i32 0), i64 %58), !dbg !10237
  %59 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10238
  %60 = load i64, i64* %r, align 8, !dbg !10239
  call void @writer_print_integer(%struct.WriterContext* %59, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.450, i32 0, i32 0), i64 %60), !dbg !10240
  %61 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10241
  %62 = load i64, i64* %b, align 8, !dbg !10242
  call void @writer_print_integer(%struct.WriterContext* %61, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.451, i32 0, i32 0), i64 %62), !dbg !10243
  br label %if.end, !dbg !10244

if.end:                                           ; preds = %if.then35, %if.else31
  br label %if.end38

if.end38:                                         ; preds = %if.end, %if.then29
  %63 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10245
  %64 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !10246
  %yaw = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %64, i32 0, i32 1, !dbg !10247
  %65 = load i32, i32* %yaw, align 4, !dbg !10247
  %conv39 = sitofp i32 %65 to double, !dbg !10248
  %div = fdiv double %conv39, 6.553600e+04, !dbg !10249
  %conv40 = fptosi double %div to i64, !dbg !10248
  call void @writer_print_integer(%struct.WriterContext* %63, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.452, i32 0, i32 0), i64 %conv40), !dbg !10250
  %66 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10251
  %67 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !10252
  %pitch = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %67, i32 0, i32 2, !dbg !10253
  %68 = load i32, i32* %pitch, align 4, !dbg !10253
  %conv41 = sitofp i32 %68 to double, !dbg !10254
  %div42 = fdiv double %conv41, 6.553600e+04, !dbg !10255
  %conv43 = fptosi double %div42 to i64, !dbg !10254
  call void @writer_print_integer(%struct.WriterContext* %66, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.453, i32 0, i32 0), i64 %conv43), !dbg !10256
  %69 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10257
  %70 = load %struct.AVSphericalMapping*, %struct.AVSphericalMapping** %spherical, align 8, !dbg !10258
  %roll = getelementptr inbounds %struct.AVSphericalMapping, %struct.AVSphericalMapping* %70, i32 0, i32 3, !dbg !10259
  %71 = load i32, i32* %roll, align 4, !dbg !10259
  %conv44 = sitofp i32 %71 to double, !dbg !10260
  %div45 = fdiv double %conv44, 6.553600e+04, !dbg !10261
  %conv46 = fptosi double %div45 to i64, !dbg !10260
  call void @writer_print_integer(%struct.WriterContext* %69, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.454, i32 0, i32 0), i64 %conv46), !dbg !10262
  br label %if.end114, !dbg !10263

if.else47:                                        ; preds = %if.else18
  %72 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10264
  %type48 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %72, i32 0, i32 2, !dbg !10267
  %73 = load i32, i32* %type48, align 4, !dbg !10267
  %cmp49 = icmp eq i32 %73, 11, !dbg !10268
  br i1 %cmp49, label %land.lhs.true51, label %if.else70, !dbg !10269

land.lhs.true51:                                  ; preds = %if.else47
  %74 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10270
  %size52 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %74, i32 0, i32 1, !dbg !10272
  %75 = load i32, i32* %size52, align 8, !dbg !10272
  %cmp53 = icmp eq i32 %75, 10, !dbg !10273
  br i1 %cmp53, label %if.then55, label %if.else70, !dbg !10274

if.then55:                                        ; preds = %land.lhs.true51
  %76 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10275
  %77 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10277
  %data56 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %77, i32 0, i32 0, !dbg !10278
  %78 = load i8*, i8** %data56, align 8, !dbg !10278
  %79 = bitcast i8* %78 to %union.unaligned_32*, !dbg !10279
  %l57 = bitcast %union.unaligned_32* %79 to i32*, !dbg !10279
  %80 = load i32, i32* %l57, align 1, !dbg !10279
  %conv58 = zext i32 %80 to i64, !dbg !10280
  call void @writer_print_integer(%struct.WriterContext* %76, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.455, i32 0, i32 0), i64 %conv58), !dbg !10281
  %81 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10282
  %82 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10283
  %data59 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %82, i32 0, i32 0, !dbg !10284
  %83 = load i8*, i8** %data59, align 8, !dbg !10284
  %add.ptr = getelementptr inbounds i8, i8* %83, i64 4, !dbg !10285
  %84 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !10286
  %l60 = bitcast %union.unaligned_32* %84 to i32*, !dbg !10286
  %85 = load i32, i32* %l60, align 1, !dbg !10286
  %conv61 = zext i32 %85 to i64, !dbg !10287
  call void @writer_print_integer(%struct.WriterContext* %81, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.456, i32 0, i32 0), i64 %conv61), !dbg !10288
  %86 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10289
  %87 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10290
  %data62 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %87, i32 0, i32 0, !dbg !10291
  %88 = load i8*, i8** %data62, align 8, !dbg !10291
  %add.ptr63 = getelementptr inbounds i8, i8* %88, i64 8, !dbg !10292
  %arrayidx64 = getelementptr inbounds i8, i8* %add.ptr63, i64 0, !dbg !10293
  %89 = load i8, i8* %arrayidx64, align 1, !dbg !10293
  %conv65 = zext i8 %89 to i64, !dbg !10294
  call void @writer_print_integer(%struct.WriterContext* %86, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.457, i32 0, i32 0), i64 %conv65), !dbg !10295
  %90 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10296
  %91 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10297
  %data66 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %91, i32 0, i32 0, !dbg !10298
  %92 = load i8*, i8** %data66, align 8, !dbg !10298
  %add.ptr67 = getelementptr inbounds i8, i8* %92, i64 9, !dbg !10299
  %arrayidx68 = getelementptr inbounds i8, i8* %add.ptr67, i64 0, !dbg !10300
  %93 = load i8, i8* %arrayidx68, align 1, !dbg !10300
  %conv69 = zext i8 %93 to i64, !dbg !10301
  call void @writer_print_integer(%struct.WriterContext* %90, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.458, i32 0, i32 0), i64 %conv69), !dbg !10302
  br label %if.end113, !dbg !10303

if.else70:                                        ; preds = %land.lhs.true51, %if.else47
  %94 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10304
  %type71 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %94, i32 0, i32 2, !dbg !10307
  %95 = load i32, i32* %type71, align 4, !dbg !10307
  %cmp72 = icmp eq i32 %95, 20, !dbg !10308
  br i1 %cmp72, label %if.then74, label %if.else102, !dbg !10304

if.then74:                                        ; preds = %if.else70
  call void @llvm.dbg.declare(metadata %struct.AVMasteringDisplayMetadata** %metadata, metadata !10309, metadata !2571), !dbg !10311
  %96 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10312
  %data75 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %96, i32 0, i32 0, !dbg !10313
  %97 = load i8*, i8** %data75, align 8, !dbg !10313
  %98 = bitcast i8* %97 to %struct.AVMasteringDisplayMetadata*, !dbg !10314
  store %struct.AVMasteringDisplayMetadata* %98, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10311
  %99 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10315
  %has_primaries = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %99, i32 0, i32 4, !dbg !10317
  %100 = load i32, i32* %has_primaries, align 4, !dbg !10317
  %tobool76 = icmp ne i32 %100, 0, !dbg !10315
  br i1 %tobool76, label %if.then77, label %if.end98, !dbg !10318

if.then77:                                        ; preds = %if.then74
  %101 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10319
  %102 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10321
  %display_primaries = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %102, i32 0, i32 0, !dbg !10322
  %arrayidx78 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries, i64 0, i64 0, !dbg !10321
  %arrayidx79 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx78, i64 0, i64 0, !dbg !10321
  %103 = bitcast %struct.AVRational* %arrayidx79 to i64*, !dbg !10323
  %104 = load i64, i64* %103, align 4, !dbg !10323
  call void @writer_print_rational(%struct.WriterContext* %101, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.459, i32 0, i32 0), i64 %104, i8 signext 47), !dbg !10323
  %105 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10324
  %106 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10325
  %display_primaries80 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %106, i32 0, i32 0, !dbg !10326
  %arrayidx81 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries80, i64 0, i64 0, !dbg !10325
  %arrayidx82 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx81, i64 0, i64 1, !dbg !10325
  %107 = bitcast %struct.AVRational* %arrayidx82 to i64*, !dbg !10327
  %108 = load i64, i64* %107, align 4, !dbg !10327
  call void @writer_print_rational(%struct.WriterContext* %105, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.460, i32 0, i32 0), i64 %108, i8 signext 47), !dbg !10327
  %109 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10328
  %110 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10329
  %display_primaries83 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %110, i32 0, i32 0, !dbg !10330
  %arrayidx84 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries83, i64 0, i64 1, !dbg !10329
  %arrayidx85 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx84, i64 0, i64 0, !dbg !10329
  %111 = bitcast %struct.AVRational* %arrayidx85 to i64*, !dbg !10331
  %112 = load i64, i64* %111, align 4, !dbg !10331
  call void @writer_print_rational(%struct.WriterContext* %109, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.461, i32 0, i32 0), i64 %112, i8 signext 47), !dbg !10331
  %113 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10332
  %114 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10333
  %display_primaries86 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %114, i32 0, i32 0, !dbg !10334
  %arrayidx87 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries86, i64 0, i64 1, !dbg !10333
  %arrayidx88 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx87, i64 0, i64 1, !dbg !10333
  %115 = bitcast %struct.AVRational* %arrayidx88 to i64*, !dbg !10335
  %116 = load i64, i64* %115, align 4, !dbg !10335
  call void @writer_print_rational(%struct.WriterContext* %113, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.462, i32 0, i32 0), i64 %116, i8 signext 47), !dbg !10335
  %117 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10336
  %118 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10337
  %display_primaries89 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %118, i32 0, i32 0, !dbg !10338
  %arrayidx90 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries89, i64 0, i64 2, !dbg !10337
  %arrayidx91 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx90, i64 0, i64 0, !dbg !10337
  %119 = bitcast %struct.AVRational* %arrayidx91 to i64*, !dbg !10339
  %120 = load i64, i64* %119, align 4, !dbg !10339
  call void @writer_print_rational(%struct.WriterContext* %117, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.463, i32 0, i32 0), i64 %120, i8 signext 47), !dbg !10339
  %121 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10340
  %122 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10341
  %display_primaries92 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %122, i32 0, i32 0, !dbg !10342
  %arrayidx93 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries92, i64 0, i64 2, !dbg !10341
  %arrayidx94 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx93, i64 0, i64 1, !dbg !10341
  %123 = bitcast %struct.AVRational* %arrayidx94 to i64*, !dbg !10343
  %124 = load i64, i64* %123, align 4, !dbg !10343
  call void @writer_print_rational(%struct.WriterContext* %121, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.464, i32 0, i32 0), i64 %124, i8 signext 47), !dbg !10343
  %125 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10344
  %126 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10345
  %white_point = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %126, i32 0, i32 1, !dbg !10346
  %arrayidx95 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %white_point, i64 0, i64 0, !dbg !10345
  %127 = bitcast %struct.AVRational* %arrayidx95 to i64*, !dbg !10347
  %128 = load i64, i64* %127, align 4, !dbg !10347
  call void @writer_print_rational(%struct.WriterContext* %125, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.465, i32 0, i32 0), i64 %128, i8 signext 47), !dbg !10347
  %129 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10348
  %130 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10349
  %white_point96 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %130, i32 0, i32 1, !dbg !10350
  %arrayidx97 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %white_point96, i64 0, i64 1, !dbg !10349
  %131 = bitcast %struct.AVRational* %arrayidx97 to i64*, !dbg !10351
  %132 = load i64, i64* %131, align 4, !dbg !10351
  call void @writer_print_rational(%struct.WriterContext* %129, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.466, i32 0, i32 0), i64 %132, i8 signext 47), !dbg !10351
  br label %if.end98, !dbg !10352

if.end98:                                         ; preds = %if.then77, %if.then74
  %133 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10353
  %has_luminance = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %133, i32 0, i32 5, !dbg !10355
  %134 = load i32, i32* %has_luminance, align 4, !dbg !10355
  %tobool99 = icmp ne i32 %134, 0, !dbg !10353
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !10356

if.then100:                                       ; preds = %if.end98
  %135 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10357
  %136 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10359
  %min_luminance = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %136, i32 0, i32 2, !dbg !10360
  %137 = bitcast %struct.AVRational* %min_luminance to i64*, !dbg !10361
  %138 = load i64, i64* %137, align 4, !dbg !10361
  call void @writer_print_rational(%struct.WriterContext* %135, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.467, i32 0, i32 0), i64 %138, i8 signext 47), !dbg !10361
  %139 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10362
  %140 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata, align 8, !dbg !10363
  %max_luminance = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %140, i32 0, i32 3, !dbg !10364
  %141 = bitcast %struct.AVRational* %max_luminance to i64*, !dbg !10365
  %142 = load i64, i64* %141, align 4, !dbg !10365
  call void @writer_print_rational(%struct.WriterContext* %139, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.468, i32 0, i32 0), i64 %142, i8 signext 47), !dbg !10365
  br label %if.end101, !dbg !10366

if.end101:                                        ; preds = %if.then100, %if.end98
  br label %if.end112, !dbg !10367

if.else102:                                       ; preds = %if.else70
  %143 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10368
  %type103 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %143, i32 0, i32 2, !dbg !10371
  %144 = load i32, i32* %type103, align 4, !dbg !10371
  %cmp104 = icmp eq i32 %144, 22, !dbg !10372
  br i1 %cmp104, label %if.then106, label %if.end111, !dbg !10368

if.then106:                                       ; preds = %if.else102
  call void @llvm.dbg.declare(metadata %struct.AVContentLightMetadata** %metadata107, metadata !10373, metadata !2571), !dbg !10375
  %145 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %sd, align 8, !dbg !10376
  %data108 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %145, i32 0, i32 0, !dbg !10377
  %146 = load i8*, i8** %data108, align 8, !dbg !10377
  %147 = bitcast i8* %146 to %struct.AVContentLightMetadata*, !dbg !10378
  store %struct.AVContentLightMetadata* %147, %struct.AVContentLightMetadata** %metadata107, align 8, !dbg !10375
  %148 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10379
  %149 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %metadata107, align 8, !dbg !10380
  %MaxCLL = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %149, i32 0, i32 0, !dbg !10381
  %150 = load i32, i32* %MaxCLL, align 4, !dbg !10381
  %conv109 = zext i32 %150 to i64, !dbg !10380
  call void @writer_print_integer(%struct.WriterContext* %148, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.469, i32 0, i32 0), i64 %conv109), !dbg !10382
  %151 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10383
  %152 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %metadata107, align 8, !dbg !10384
  %MaxFALL = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %152, i32 0, i32 1, !dbg !10385
  %153 = load i32, i32* %MaxFALL, align 4, !dbg !10385
  %conv110 = zext i32 %153 to i64, !dbg !10384
  call void @writer_print_integer(%struct.WriterContext* %151, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.470, i32 0, i32 0), i64 %conv110), !dbg !10386
  br label %if.end111, !dbg !10387

if.end111:                                        ; preds = %if.then106, %if.else102
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.end101
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.then55
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.end38
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then10
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then
  %154 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10388
  call void @writer_print_section_footer(%struct.WriterContext* %154), !dbg !10389
  br label %for.inc, !dbg !10390

for.inc:                                          ; preds = %if.end116
  %155 = load i32, i32* %i, align 4, !dbg !10391
  %inc = add nsw i32 %155, 1, !dbg !10391
  store i32 %inc, i32* %i, align 4, !dbg !10391
  br label %for.cond, !dbg !10393, !llvm.loop !10394

for.end:                                          ; preds = %for.cond
  %156 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10396
  call void @writer_print_section_footer(%struct.WriterContext* %156), !dbg !10397
  ret void, !dbg !10398
}

; Function Attrs: nounwind uwtable
define internal void @writer_print_data(%struct.WriterContext* %wctx, i8* %name, i8* %data, i32 %size) #0 !dbg !10399 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %name.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %bp = alloca %struct.AVBPrint, align 8
  %offset = alloca i32, align 4
  %l = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !10402, metadata !2571), !dbg !10403
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10404, metadata !2571), !dbg !10405
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10406, metadata !2571), !dbg !10407
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10408, metadata !2571), !dbg !10409
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %bp, metadata !10410, metadata !2571), !dbg !10411
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10412, metadata !2571), !dbg !10413
  store i32 0, i32* %offset, align 4, !dbg !10413
  call void @llvm.dbg.declare(metadata i32* %l, metadata !10414, metadata !2571), !dbg !10415
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10416, metadata !2571), !dbg !10417
  call void @av_bprint_init(%struct.AVBPrint* %bp, i32 0, i32 -1), !dbg !10418
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %bp, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !10419
  br label %while.cond, !dbg !10420

while.cond:                                       ; preds = %for.end24, %entry
  %0 = load i32, i32* %size.addr, align 4, !dbg !10421
  %tobool = icmp ne i32 %0, 0, !dbg !10423
  br i1 %tobool, label %while.body, label %while.end, !dbg !10423

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %offset, align 4, !dbg !10424
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %bp, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.471, i32 0, i32 0), i32 %1), !dbg !10426
  %2 = load i32, i32* %size.addr, align 4, !dbg !10427
  %cmp = icmp sgt i32 %2, 16, !dbg !10428
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10429

cond.true:                                        ; preds = %while.body
  br label %cond.end, !dbg !10430

cond.false:                                       ; preds = %while.body
  %3 = load i32, i32* %size.addr, align 4, !dbg !10432
  br label %cond.end, !dbg !10434

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 16, %cond.true ], [ %3, %cond.false ], !dbg !10435
  store i32 %cond, i32* %l, align 4, !dbg !10437
  store i32 0, i32* %i, align 4, !dbg !10438
  br label %for.cond, !dbg !10440

for.cond:                                         ; preds = %for.inc, %cond.end
  %4 = load i32, i32* %i, align 4, !dbg !10441
  %5 = load i32, i32* %l, align 4, !dbg !10444
  %cmp1 = icmp slt i32 %4, %5, !dbg !10445
  br i1 %cmp1, label %for.body, label %for.end, !dbg !10446

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !10447
  %idxprom = sext i32 %6 to i64, !dbg !10449
  %7 = load i8*, i8** %data.addr, align 8, !dbg !10449
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !10449
  %8 = load i8, i8* %arrayidx, align 1, !dbg !10449
  %conv = zext i8 %8 to i32, !dbg !10449
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %bp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.473, i32 0, i32 0), i32 %conv), !dbg !10450
  %9 = load i32, i32* %i, align 4, !dbg !10451
  %and = and i32 %9, 1, !dbg !10453
  %tobool2 = icmp ne i32 %and, 0, !dbg !10453
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10454

if.then:                                          ; preds = %for.body
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %bp, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.247, i32 0, i32 0)), !dbg !10455
  br label %if.end, !dbg !10455

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !10456

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !10457
  %inc = add nsw i32 %10, 1, !dbg !10457
  store i32 %inc, i32* %i, align 4, !dbg !10457
  br label %for.cond, !dbg !10459, !llvm.loop !10460

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !10462
  %mul = mul nsw i32 2, %11, !dbg !10463
  %sub = sub nsw i32 41, %mul, !dbg !10464
  %12 = load i32, i32* %i, align 4, !dbg !10465
  %div = sdiv i32 %12, 2, !dbg !10466
  %sub3 = sub nsw i32 %sub, %div, !dbg !10467
  call void @av_bprint_chars(%struct.AVBPrint* %bp, i8 signext 32, i32 %sub3), !dbg !10468
  store i32 0, i32* %i, align 4, !dbg !10469
  br label %for.cond4, !dbg !10471

for.cond4:                                        ; preds = %for.inc22, %for.end
  %13 = load i32, i32* %i, align 4, !dbg !10472
  %14 = load i32, i32* %l, align 4, !dbg !10475
  %cmp5 = icmp slt i32 %13, %14, !dbg !10476
  br i1 %cmp5, label %for.body7, label %for.end24, !dbg !10477

for.body7:                                        ; preds = %for.cond4
  %15 = load i32, i32* %i, align 4, !dbg !10478
  %idxprom8 = sext i32 %15 to i64, !dbg !10479
  %16 = load i8*, i8** %data.addr, align 8, !dbg !10479
  %arrayidx9 = getelementptr inbounds i8, i8* %16, i64 %idxprom8, !dbg !10479
  %17 = load i8, i8* %arrayidx9, align 1, !dbg !10479
  %conv10 = zext i8 %17 to i32, !dbg !10479
  %sub11 = sub i32 %conv10, 32, !dbg !10480
  %cmp12 = icmp ult i32 %sub11, 95, !dbg !10481
  br i1 %cmp12, label %cond.true14, label %cond.false18, !dbg !10479

cond.true14:                                      ; preds = %for.body7
  %18 = load i32, i32* %i, align 4, !dbg !10482
  %idxprom15 = sext i32 %18 to i64, !dbg !10483
  %19 = load i8*, i8** %data.addr, align 8, !dbg !10483
  %arrayidx16 = getelementptr inbounds i8, i8* %19, i64 %idxprom15, !dbg !10483
  %20 = load i8, i8* %arrayidx16, align 1, !dbg !10483
  %conv17 = zext i8 %20 to i32, !dbg !10483
  br label %cond.end19, !dbg !10484

cond.false18:                                     ; preds = %for.body7
  br label %cond.end19, !dbg !10485

cond.end19:                                       ; preds = %cond.false18, %cond.true14
  %cond20 = phi i32 [ %conv17, %cond.true14 ], [ 46, %cond.false18 ], !dbg !10487
  %conv21 = trunc i32 %cond20 to i8, !dbg !10487
  call void @av_bprint_chars(%struct.AVBPrint* %bp, i8 signext %conv21, i32 1), !dbg !10489
  br label %for.inc22, !dbg !10489

for.inc22:                                        ; preds = %cond.end19
  %21 = load i32, i32* %i, align 4, !dbg !10490
  %inc23 = add nsw i32 %21, 1, !dbg !10490
  store i32 %inc23, i32* %i, align 4, !dbg !10490
  br label %for.cond4, !dbg !10491, !llvm.loop !10492

for.end24:                                        ; preds = %for.cond4
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %bp, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !10494
  %22 = load i32, i32* %l, align 4, !dbg !10495
  %23 = load i32, i32* %offset, align 4, !dbg !10496
  %add = add nsw i32 %23, %22, !dbg !10496
  store i32 %add, i32* %offset, align 4, !dbg !10496
  %24 = load i32, i32* %l, align 4, !dbg !10497
  %25 = load i8*, i8** %data.addr, align 8, !dbg !10498
  %idx.ext = sext i32 %24 to i64, !dbg !10498
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %idx.ext, !dbg !10498
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !10498
  %26 = load i32, i32* %l, align 4, !dbg !10499
  %27 = load i32, i32* %size.addr, align 4, !dbg !10500
  %sub25 = sub nsw i32 %27, %26, !dbg !10500
  store i32 %sub25, i32* %size.addr, align 4, !dbg !10500
  br label %while.cond, !dbg !10501, !llvm.loop !10503

while.end:                                        ; preds = %while.cond
  %28 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !10504
  %29 = load i8*, i8** %name.addr, align 8, !dbg !10505
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %bp, i32 0, i32 0, !dbg !10506
  %30 = load i8*, i8** %str, align 8, !dbg !10506
  %call = call i32 @writer_print_string(%struct.WriterContext* %28, i8* %29, i8* %30, i32 0), !dbg !10507
  %call26 = call i32 @av_bprint_finalize(%struct.AVBPrint* %bp, i8** null), !dbg !10508
  ret void, !dbg !10509
}

; Function Attrs: nounwind uwtable
define internal void @writer_print_data_hash(%struct.WriterContext* %wctx, i8* %name, i8* %data, i32 %size) #0 !dbg !10510 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %name.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  %buf = alloca [192 x i8], align 16
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !10511, metadata !2571), !dbg !10512
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10513, metadata !2571), !dbg !10514
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10515, metadata !2571), !dbg !10516
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10517, metadata !2571), !dbg !10518
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10519, metadata !2571), !dbg !10520
  call void @llvm.dbg.declare(metadata [192 x i8]* %buf, metadata !10521, metadata !2571), !dbg !10525
  %0 = bitcast [192 x i8]* %buf to i8*, !dbg !10525
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 192, i32 16, i1 false), !dbg !10525
  %1 = load %struct.AVHashContext*, %struct.AVHashContext** @hash, align 8, !dbg !10526
  %tobool = icmp ne %struct.AVHashContext* %1, null, !dbg !10526
  br i1 %tobool, label %if.end, label %if.then, !dbg !10528

if.then:                                          ; preds = %entry
  br label %return, !dbg !10529

if.end:                                           ; preds = %entry
  %2 = load %struct.AVHashContext*, %struct.AVHashContext** @hash, align 8, !dbg !10530
  call void @av_hash_init(%struct.AVHashContext* %2), !dbg !10531
  %3 = load %struct.AVHashContext*, %struct.AVHashContext** @hash, align 8, !dbg !10532
  %4 = load i8*, i8** %data.addr, align 8, !dbg !10533
  %5 = load i32, i32* %size.addr, align 4, !dbg !10534
  call void @av_hash_update(%struct.AVHashContext* %3, i8* %4, i32 %5), !dbg !10535
  %arraydecay = getelementptr inbounds [192 x i8], [192 x i8]* %buf, i32 0, i32 0, !dbg !10536
  %6 = load %struct.AVHashContext*, %struct.AVHashContext** @hash, align 8, !dbg !10537
  %call = call i8* @av_hash_get_name(%struct.AVHashContext* %6), !dbg !10538
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 192, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.474, i32 0, i32 0), i8* %call) #9, !dbg !10539
  %arraydecay2 = getelementptr inbounds [192 x i8], [192 x i8]* %buf, i32 0, i32 0, !dbg !10541
  %arraydecay3 = getelementptr inbounds [192 x i8], [192 x i8]* %buf, i32 0, i32 0, !dbg !10542
  %call4 = call i64 @strlen(i8* %arraydecay3) #14, !dbg !10543
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay2, i64 %call4, !dbg !10544
  store i8* %add.ptr, i8** %p, align 8, !dbg !10545
  %7 = load %struct.AVHashContext*, %struct.AVHashContext** @hash, align 8, !dbg !10546
  %8 = load i8*, i8** %p, align 8, !dbg !10547
  %arraydecay5 = getelementptr inbounds [192 x i8], [192 x i8]* %buf, i32 0, i32 0, !dbg !10548
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 192, !dbg !10549
  %9 = load i8*, i8** %p, align 8, !dbg !10550
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr6 to i64, !dbg !10551
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !10551
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10551
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !10548
  call void @av_hash_final_hex(%struct.AVHashContext* %7, i8* %8, i32 %conv), !dbg !10552
  %10 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !10553
  %11 = load i8*, i8** %name.addr, align 8, !dbg !10554
  %arraydecay7 = getelementptr inbounds [192 x i8], [192 x i8]* %buf, i32 0, i32 0, !dbg !10555
  %call8 = call i32 @writer_print_string(%struct.WriterContext* %10, i8* %11, i8* %arraydecay7, i32 0), !dbg !10556
  br label %return, !dbg !10557

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10558
}

declare i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare double @log2(double) #3

; Function Attrs: nounwind
declare double @log10(double) #3

declare i64 @av_strlcatf(i8*, i64, i8*, ...) #2

declare i8* @av_packet_side_data_name(i32) #2

; Function Attrs: nounwind uwtable
define internal void @writer_print_integers(%struct.WriterContext* %wctx, i8* %name, i8* %data, i32 %size, i8* %format, i32 %columns, i32 %bytes, i32 %offset_add) #0 !dbg !10559 {
entry:
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %name.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %columns.addr = alloca i32, align 4
  %bytes.addr = alloca i32, align 4
  %offset_add.addr = alloca i32, align 4
  %bp = alloca %struct.AVBPrint, align 8
  %offset = alloca i32, align 4
  %l = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !10562, metadata !2571), !dbg !10563
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10564, metadata !2571), !dbg !10565
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10566, metadata !2571), !dbg !10567
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10568, metadata !2571), !dbg !10569
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !10570, metadata !2571), !dbg !10571
  store i32 %columns, i32* %columns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %columns.addr, metadata !10572, metadata !2571), !dbg !10573
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !10574, metadata !2571), !dbg !10575
  store i32 %offset_add, i32* %offset_add.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset_add.addr, metadata !10576, metadata !2571), !dbg !10577
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %bp, metadata !10578, metadata !2571), !dbg !10579
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10580, metadata !2571), !dbg !10581
  store i32 0, i32* %offset, align 4, !dbg !10581
  call void @llvm.dbg.declare(metadata i32* %l, metadata !10582, metadata !2571), !dbg !10583
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10584, metadata !2571), !dbg !10585
  call void @av_bprint_init(%struct.AVBPrint* %bp, i32 0, i32 -1), !dbg !10586
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %bp, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !10587
  br label %while.cond, !dbg !10588

while.cond:                                       ; preds = %for.end, %entry
  %0 = load i32, i32* %size.addr, align 4, !dbg !10589
  %tobool = icmp ne i32 %0, 0, !dbg !10591
  br i1 %tobool, label %while.body, label %while.end, !dbg !10591

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %offset, align 4, !dbg !10592
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %bp, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.471, i32 0, i32 0), i32 %1), !dbg !10594
  %2 = load i32, i32* %size.addr, align 4, !dbg !10595
  %3 = load i32, i32* %columns.addr, align 4, !dbg !10596
  %cmp = icmp sgt i32 %2, %3, !dbg !10597
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10598

cond.true:                                        ; preds = %while.body
  %4 = load i32, i32* %columns.addr, align 4, !dbg !10599
  br label %cond.end, !dbg !10601

cond.false:                                       ; preds = %while.body
  %5 = load i32, i32* %size.addr, align 4, !dbg !10602
  br label %cond.end, !dbg !10604

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !10605
  store i32 %cond, i32* %l, align 4, !dbg !10607
  store i32 0, i32* %i, align 4, !dbg !10608
  br label %for.cond, !dbg !10610

for.cond:                                         ; preds = %for.inc, %cond.end
  %6 = load i32, i32* %i, align 4, !dbg !10611
  %7 = load i32, i32* %l, align 4, !dbg !10614
  %cmp1 = icmp slt i32 %6, %7, !dbg !10615
  br i1 %cmp1, label %for.body, label %for.end, !dbg !10616

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %bytes.addr, align 4, !dbg !10617
  %cmp2 = icmp eq i32 %8, 1, !dbg !10620
  br i1 %cmp2, label %if.then, label %if.else, !dbg !10621

if.then:                                          ; preds = %for.body
  %9 = load i8*, i8** %format.addr, align 8, !dbg !10622
  %10 = load i8*, i8** %data.addr, align 8, !dbg !10624
  %11 = load i8, i8* %10, align 1, !dbg !10625
  %conv = zext i8 %11 to i32, !dbg !10625
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %bp, i8* %9, i32 %conv), !dbg !10626
  br label %if.end14, !dbg !10626

if.else:                                          ; preds = %for.body
  %12 = load i32, i32* %bytes.addr, align 4, !dbg !10627
  %cmp3 = icmp eq i32 %12, 2, !dbg !10629
  br i1 %cmp3, label %if.then5, label %if.else8, !dbg !10630

if.then5:                                         ; preds = %if.else
  %13 = load i8*, i8** %format.addr, align 8, !dbg !10631
  %14 = load i8*, i8** %data.addr, align 8, !dbg !10633
  %15 = bitcast i8* %14 to %union.unaligned_16*, !dbg !10634
  %l6 = bitcast %union.unaligned_16* %15 to i16*, !dbg !10634
  %16 = load i16, i16* %l6, align 1, !dbg !10634
  %conv7 = zext i16 %16 to i32, !dbg !10635
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %bp, i8* %13, i32 %conv7), !dbg !10636
  br label %if.end13, !dbg !10636

if.else8:                                         ; preds = %if.else
  %17 = load i32, i32* %bytes.addr, align 4, !dbg !10637
  %cmp9 = icmp eq i32 %17, 4, !dbg !10639
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !10640

if.then11:                                        ; preds = %if.else8
  %18 = load i8*, i8** %format.addr, align 8, !dbg !10641
  %19 = load i8*, i8** %data.addr, align 8, !dbg !10643
  %20 = bitcast i8* %19 to %union.unaligned_32*, !dbg !10644
  %l12 = bitcast %union.unaligned_32* %20 to i32*, !dbg !10644
  %21 = load i32, i32* %l12, align 1, !dbg !10644
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %bp, i8* %18, i32 %21), !dbg !10645
  br label %if.end, !dbg !10645

if.end:                                           ; preds = %if.then11, %if.else8
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then5
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then
  %22 = load i32, i32* %bytes.addr, align 4, !dbg !10646
  %23 = load i8*, i8** %data.addr, align 8, !dbg !10647
  %idx.ext = sext i32 %22 to i64, !dbg !10647
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %idx.ext, !dbg !10647
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !10647
  %24 = load i32, i32* %size.addr, align 4, !dbg !10648
  %dec = add nsw i32 %24, -1, !dbg !10648
  store i32 %dec, i32* %size.addr, align 4, !dbg !10648
  br label %for.inc, !dbg !10649

for.inc:                                          ; preds = %if.end14
  %25 = load i32, i32* %i, align 4, !dbg !10650
  %inc = add nsw i32 %25, 1, !dbg !10650
  store i32 %inc, i32* %i, align 4, !dbg !10650
  br label %for.cond, !dbg !10652, !llvm.loop !10653

for.end:                                          ; preds = %for.cond
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %bp, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !10655
  %26 = load i32, i32* %offset_add.addr, align 4, !dbg !10656
  %27 = load i32, i32* %offset, align 4, !dbg !10657
  %add = add nsw i32 %27, %26, !dbg !10657
  store i32 %add, i32* %offset, align 4, !dbg !10657
  br label %while.cond, !dbg !10658, !llvm.loop !10660

while.end:                                        ; preds = %while.cond
  %28 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !10661
  %29 = load i8*, i8** %name.addr, align 8, !dbg !10662
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %bp, i32 0, i32 0, !dbg !10663
  %30 = load i8*, i8** %str, align 8, !dbg !10663
  %call = call i32 @writer_print_string(%struct.WriterContext* %28, i8* %29, i8* %30, i32 0), !dbg !10664
  %call15 = call i32 @av_bprint_finalize(%struct.AVBPrint* %bp, i8** null), !dbg !10665
  ret void, !dbg !10666
}

declare double @av_display_rotation_get(i32*) #2

declare i8* @av_stereo3d_type_name(i32) #2

declare i8* @av_spherical_projection_name(i32) #2

declare void @av_spherical_tile_bounds(%struct.AVSphericalMapping*, i64, i64, i64*, i64*, i64*, i64*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @writer_print_rational(%struct.WriterContext* %wctx, i8* %key, i64 %q.coerce, i8 signext %sep) #4 !dbg !10667 {
entry:
  %q = alloca %struct.AVRational, align 4
  %wctx.addr = alloca %struct.WriterContext*, align 8
  %key.addr = alloca i8*, align 8
  %sep.addr = alloca i8, align 1
  %buf = alloca %struct.AVBPrint, align 8
  %0 = bitcast %struct.AVRational* %q to i64*
  store i64 %q.coerce, i64* %0, align 4
  store %struct.WriterContext* %wctx, %struct.WriterContext** %wctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %wctx.addr, metadata !10670, metadata !2571), !dbg !10671
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !10672, metadata !2571), !dbg !10673
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q, metadata !10674, metadata !2571), !dbg !10675
  store i8 %sep, i8* %sep.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sep.addr, metadata !10676, metadata !2571), !dbg !10677
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %buf, metadata !10678, metadata !2571), !dbg !10679
  call void @av_bprint_init(%struct.AVBPrint* %buf, i32 0, i32 1), !dbg !10680
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q, i32 0, i32 0, !dbg !10681
  %1 = load i32, i32* %num, align 4, !dbg !10681
  %2 = load i8, i8* %sep.addr, align 1, !dbg !10682
  %conv = sext i8 %2 to i32, !dbg !10682
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q, i32 0, i32 1, !dbg !10683
  %3 = load i32, i32* %den, align 4, !dbg !10683
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %buf, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.472, i32 0, i32 0), i32 %1, i32 %conv, i32 %3), !dbg !10684
  %4 = load %struct.WriterContext*, %struct.WriterContext** %wctx.addr, align 8, !dbg !10685
  %5 = load i8*, i8** %key.addr, align 8, !dbg !10686
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %buf, i32 0, i32 0, !dbg !10687
  %6 = load i8*, i8** %str, align 8, !dbg !10687
  %call = call i32 @writer_print_string(%struct.WriterContext* %4, i8* %5, i8* %6, i32 0), !dbg !10688
  ret void, !dbg !10689
}

declare void @av_hash_init(%struct.AVHashContext*) #2

declare void @av_hash_update(%struct.AVHashContext*, i8*, i32) #2

declare i8* @av_hash_get_name(%struct.AVHashContext*) #2

declare void @av_hash_final_hex(%struct.AVHashContext*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @clear_log(i32 %need_lock) #0 !dbg !10690 {
entry:
  %need_lock.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %need_lock, i32* %need_lock.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %need_lock.addr, metadata !10691, metadata !2571), !dbg !10692
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10693, metadata !2571), !dbg !10694
  %0 = load i32, i32* %need_lock.addr, align 4, !dbg !10695
  %tobool = icmp ne i32 %0, 0, !dbg !10695
  br i1 %tobool, label %if.then, label %if.end, !dbg !10697

if.then:                                          ; preds = %entry
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @log_mutex) #9, !dbg !10698
  br label %if.end, !dbg !10698

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !10699
  br label %for.cond, !dbg !10701

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !10702
  %2 = load i32, i32* @log_buffer_size, align 4, !dbg !10705
  %cmp = icmp slt i32 %1, %2, !dbg !10706
  br i1 %cmp, label %for.body, label %for.end, !dbg !10707

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !10708
  %idxprom = sext i32 %3 to i64, !dbg !10710
  %4 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !10710
  %arrayidx = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %4, i64 %idxprom, !dbg !10710
  %context_name = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx, i32 0, i32 0, !dbg !10711
  %5 = bitcast i8** %context_name to i8*, !dbg !10712
  call void @av_freep(i8* %5), !dbg !10713
  %6 = load i32, i32* %i, align 4, !dbg !10714
  %idxprom1 = sext i32 %6 to i64, !dbg !10715
  %7 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !10715
  %arrayidx2 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %7, i64 %idxprom1, !dbg !10715
  %parent_name = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx2, i32 0, i32 4, !dbg !10716
  %8 = bitcast i8** %parent_name to i8*, !dbg !10717
  call void @av_freep(i8* %8), !dbg !10718
  %9 = load i32, i32* %i, align 4, !dbg !10719
  %idxprom3 = sext i32 %9 to i64, !dbg !10720
  %10 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !10720
  %arrayidx4 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %10, i64 %idxprom3, !dbg !10720
  %log_message = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx4, i32 0, i32 2, !dbg !10721
  %11 = bitcast i8** %log_message to i8*, !dbg !10722
  call void @av_freep(i8* %11), !dbg !10723
  br label %for.inc, !dbg !10724

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !10725
  %inc = add nsw i32 %12, 1, !dbg !10725
  store i32 %inc, i32* %i, align 4, !dbg !10725
  br label %for.cond, !dbg !10727, !llvm.loop !10728

for.end:                                          ; preds = %for.cond
  store i32 0, i32* @log_buffer_size, align 4, !dbg !10730
  %13 = load i32, i32* %need_lock.addr, align 4, !dbg !10731
  %tobool5 = icmp ne i32 %13, 0, !dbg !10731
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !10733

if.then6:                                         ; preds = %for.end
  %call7 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @log_mutex) #9, !dbg !10734
  br label %if.end8, !dbg !10734

if.end8:                                          ; preds = %if.then6, %for.end
  ret void, !dbg !10735
}

declare i32 @avcodec_send_packet(%struct.AVCodecContext*, %struct.AVPacket*) #2

declare i32 @avcodec_receive_frame(%struct.AVCodecContext*, %struct.AVFrame*) #2

declare i32 @avcodec_decode_subtitle2(%struct.AVCodecContext*, %struct.AVSubtitle*, i32*, %struct.AVPacket*) #2

; Function Attrs: nounwind uwtable
define internal void @show_subtitle(%struct.WriterContext* %w, %struct.AVSubtitle* %sub, %struct.AVStream* %stream, %struct.AVFormatContext* %fmt_ctx) #0 !dbg !10736 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %sub.addr = alloca %struct.AVSubtitle*, align 8
  %stream.addr = alloca %struct.AVStream*, align 8
  %fmt_ctx.addr = alloca %struct.AVFormatContext*, align 8
  %pbuf = alloca %struct.AVBPrint, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !10740, metadata !2571), !dbg !10741
  store %struct.AVSubtitle* %sub, %struct.AVSubtitle** %sub.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVSubtitle** %sub.addr, metadata !10742, metadata !2571), !dbg !10743
  store %struct.AVStream* %stream, %struct.AVStream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %stream.addr, metadata !10744, metadata !2571), !dbg !10745
  store %struct.AVFormatContext* %fmt_ctx, %struct.AVFormatContext** %fmt_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx.addr, metadata !10746, metadata !2571), !dbg !10747
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %pbuf, metadata !10748, metadata !2571), !dbg !10749
  call void @av_bprint_init(%struct.AVBPrint* %pbuf, i32 1, i32 -1), !dbg !10750
  %0 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10751
  call void @writer_print_section_header(%struct.WriterContext* %0, i32 41), !dbg !10752
  %1 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10753
  %call = call i32 @writer_print_string(%struct.WriterContext* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.322, i32 0, i32 0), i32 0), !dbg !10754
  %2 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10755
  %3 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !10756
  %pts = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %3, i32 0, i32 5, !dbg !10757
  %4 = load i64, i64* %pts, align 8, !dbg !10757
  call void @writer_print_ts(%struct.WriterContext* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.413, i32 0, i32 0), i64 %4, i32 0), !dbg !10758
  %5 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10759
  %6 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !10760
  %pts1 = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %6, i32 0, i32 5, !dbg !10761
  %7 = load i64, i64* %pts1, align 8, !dbg !10761
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !10762
  store i32 1, i32* %num, align 4, !dbg !10762
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !10762
  store i32 1000000, i32* %den, align 4, !dbg !10762
  call void @writer_print_time(%struct.WriterContext* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.414, i32 0, i32 0), i64 %7, %struct.AVRational* %.compoundliteral, i32 0), !dbg !10763
  %8 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10764
  %9 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !10765
  %format = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %9, i32 0, i32 0, !dbg !10766
  %10 = load i16, i16* %format, align 8, !dbg !10766
  %conv = zext i16 %10 to i64, !dbg !10765
  call void @writer_print_integer(%struct.WriterContext* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), i64 %conv), !dbg !10767
  %11 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10768
  %12 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !10769
  %start_display_time = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %12, i32 0, i32 1, !dbg !10770
  %13 = load i32, i32* %start_display_time, align 4, !dbg !10770
  %conv2 = zext i32 %13 to i64, !dbg !10769
  call void @writer_print_integer(%struct.WriterContext* %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.476, i32 0, i32 0), i64 %conv2), !dbg !10771
  %14 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10772
  %15 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !10773
  %end_display_time = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %15, i32 0, i32 2, !dbg !10774
  %16 = load i32, i32* %end_display_time, align 8, !dbg !10774
  %conv3 = zext i32 %16 to i64, !dbg !10773
  call void @writer_print_integer(%struct.WriterContext* %14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.477, i32 0, i32 0), i64 %conv3), !dbg !10775
  %17 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10776
  %18 = load %struct.AVSubtitle*, %struct.AVSubtitle** %sub.addr, align 8, !dbg !10777
  %num_rects = getelementptr inbounds %struct.AVSubtitle, %struct.AVSubtitle* %18, i32 0, i32 3, !dbg !10778
  %19 = load i32, i32* %num_rects, align 4, !dbg !10778
  %conv4 = zext i32 %19 to i64, !dbg !10777
  call void @writer_print_integer(%struct.WriterContext* %17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.478, i32 0, i32 0), i64 %conv4), !dbg !10779
  %20 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10780
  call void @writer_print_section_footer(%struct.WriterContext* %20), !dbg !10781
  %call5 = call i32 @av_bprint_finalize(%struct.AVBPrint* %pbuf, i8** null), !dbg !10782
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10783
  %call6 = call i32 @fflush(%struct._IO_FILE* %21), !dbg !10784
  ret void, !dbg !10785
}

; Function Attrs: nounwind uwtable
define internal void @show_frame(%struct.WriterContext* %w, %struct.AVFrame* %frame, %struct.AVStream* %stream, %struct.AVFormatContext* %fmt_ctx) #0 !dbg !10786 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %stream.addr = alloca %struct.AVStream*, align 8
  %fmt_ctx.addr = alloca %struct.AVFormatContext*, align 8
  %pbuf = alloca %struct.AVBPrint, align 8
  %val_str = alloca [128 x i8], align 16
  %s = alloca i8*, align 8
  %i = alloca i32, align 4
  %uv = alloca %struct.unit_value, align 8
  %sar = alloca %struct.AVRational, align 4
  %coerce = alloca %struct.AVRational, align 4
  %sd = alloca %struct.AVFrameSideData*, align 8
  %name = alloca i8*, align 8
  %tcbuf = alloca [23 x i8], align 16
  %metadata124 = alloca %struct.AVMasteringDisplayMetadata*, align 8
  %metadata157 = alloca %struct.AVContentLightMetadata*, align 8
  %tag = alloca %struct.AVDictionaryEntry*, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !10789, metadata !2571), !dbg !10790
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !10791, metadata !2571), !dbg !10792
  store %struct.AVStream* %stream, %struct.AVStream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %stream.addr, metadata !10793, metadata !2571), !dbg !10794
  store %struct.AVFormatContext* %fmt_ctx, %struct.AVFormatContext** %fmt_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx.addr, metadata !10795, metadata !2571), !dbg !10796
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %pbuf, metadata !10797, metadata !2571), !dbg !10798
  call void @llvm.dbg.declare(metadata [128 x i8]* %val_str, metadata !10799, metadata !2571), !dbg !10800
  call void @llvm.dbg.declare(metadata i8** %s, metadata !10801, metadata !2571), !dbg !10802
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10803, metadata !2571), !dbg !10804
  call void @av_bprint_init(%struct.AVBPrint* %pbuf, i32 1, i32 -1), !dbg !10805
  %0 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10806
  call void @writer_print_section_header(%struct.WriterContext* %0, i32 6), !dbg !10807
  %1 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !10808
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1, i32 0, i32 19, !dbg !10809
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !10809
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i32 0, i32 0, !dbg !10810
  %3 = load i32, i32* %codec_type, align 8, !dbg !10810
  %call = call i8* @av_get_media_type_string(i32 %3), !dbg !10811
  store i8* %call, i8** %s, align 8, !dbg !10812
  %4 = load i8*, i8** %s, align 8, !dbg !10813
  %tobool = icmp ne i8* %4, null, !dbg !10813
  br i1 %tobool, label %if.then, label %if.else, !dbg !10815

if.then:                                          ; preds = %entry
  %5 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10816
  %6 = load i8*, i8** %s, align 8, !dbg !10818
  %call1 = call i32 @writer_print_string(%struct.WriterContext* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.475, i32 0, i32 0), i8* %6, i32 0), !dbg !10819
  br label %if.end, !dbg !10819

if.else:                                          ; preds = %entry
  %7 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10820
  %call2 = call i32 @writer_print_string(%struct.WriterContext* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !10821
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10822
  %9 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !10823
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %9, i32 0, i32 0, !dbg !10824
  %10 = load i32, i32* %index, align 8, !dbg !10824
  %conv = sext i32 %10 to i64, !dbg !10823
  call void @writer_print_integer(%struct.WriterContext* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.412, i32 0, i32 0), i64 %conv), !dbg !10825
  %11 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10826
  %12 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10827
  %key_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 7, !dbg !10828
  %13 = load i32, i32* %key_frame, align 8, !dbg !10828
  %conv3 = sext i32 %13 to i64, !dbg !10827
  call void @writer_print_integer(%struct.WriterContext* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.479, i32 0, i32 0), i64 %conv3), !dbg !10829
  %14 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10830
  %15 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10831
  %pts = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 10, !dbg !10832
  %16 = load i64, i64* %pts, align 8, !dbg !10832
  call void @writer_print_ts(%struct.WriterContext* %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.480, i32 0, i32 0), i64 %16, i32 0), !dbg !10833
  %17 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10834
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10835
  %pts4 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 10, !dbg !10836
  %19 = load i64, i64* %pts4, align 8, !dbg !10836
  %20 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !10837
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %20, i32 0, i32 4, !dbg !10838
  call void @writer_print_time(%struct.WriterContext* %17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.481, i32 0, i32 0), i64 %19, %struct.AVRational* %time_base, i32 0), !dbg !10839
  %21 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10840
  %22 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10841
  %pkt_dts = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %22, i32 0, i32 12, !dbg !10842
  %23 = load i64, i64* %pkt_dts, align 8, !dbg !10842
  call void @writer_print_ts(%struct.WriterContext* %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.482, i32 0, i32 0), i64 %23, i32 0), !dbg !10843
  %24 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10844
  %25 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10845
  %pkt_dts5 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %25, i32 0, i32 12, !dbg !10846
  %26 = load i64, i64* %pkt_dts5, align 8, !dbg !10846
  %27 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !10847
  %time_base6 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %27, i32 0, i32 4, !dbg !10848
  call void @writer_print_time(%struct.WriterContext* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.483, i32 0, i32 0), i64 %26, %struct.AVRational* %time_base6, i32 0), !dbg !10849
  %28 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10850
  %29 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10851
  %best_effort_timestamp = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %29, i32 0, i32 36, !dbg !10852
  %30 = load i64, i64* %best_effort_timestamp, align 8, !dbg !10852
  call void @writer_print_ts(%struct.WriterContext* %28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.484, i32 0, i32 0), i64 %30, i32 0), !dbg !10853
  %31 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10854
  %32 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10855
  %best_effort_timestamp7 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %32, i32 0, i32 36, !dbg !10856
  %33 = load i64, i64* %best_effort_timestamp7, align 8, !dbg !10856
  %34 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !10857
  %time_base8 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %34, i32 0, i32 4, !dbg !10858
  call void @writer_print_time(%struct.WriterContext* %31, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.485, i32 0, i32 0), i64 %33, %struct.AVRational* %time_base8, i32 0), !dbg !10859
  %35 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10860
  %36 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10861
  %pkt_duration = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %36, i32 0, i32 38, !dbg !10862
  %37 = load i64, i64* %pkt_duration, align 8, !dbg !10862
  call void @writer_print_ts(%struct.WriterContext* %35, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.486, i32 0, i32 0), i64 %37, i32 1), !dbg !10863
  %38 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10864
  %39 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10865
  %pkt_duration9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %39, i32 0, i32 38, !dbg !10866
  %40 = load i64, i64* %pkt_duration9, align 8, !dbg !10866
  %41 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !10867
  %time_base10 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %41, i32 0, i32 4, !dbg !10868
  call void @writer_print_time(%struct.WriterContext* %38, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.487, i32 0, i32 0), i64 %40, %struct.AVRational* %time_base10, i32 1), !dbg !10869
  %42 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10870
  %pkt_pos = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %42, i32 0, i32 37, !dbg !10872
  %43 = load i64, i64* %pkt_pos, align 8, !dbg !10872
  %cmp = icmp ne i64 %43, -1, !dbg !10873
  br i1 %cmp, label %if.then12, label %if.else15, !dbg !10874

if.then12:                                        ; preds = %if.end
  br label %do.body, !dbg !10875, !llvm.loop !10877

do.body:                                          ; preds = %if.then12
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !10879
  %44 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10882
  %pkt_pos13 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %44, i32 0, i32 37, !dbg !10883
  %45 = load i64, i64* %pkt_pos13, align 8, !dbg !10883
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %pbuf, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.422, i32 0, i32 0), i64 %45), !dbg !10884
  %46 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10886
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !10887
  %47 = load i8*, i8** %str, align 8, !dbg !10887
  %call14 = call i32 @writer_print_string(%struct.WriterContext* %46, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.488, i32 0, i32 0), i8* %47, i32 0), !dbg !10888
  br label %do.end, !dbg !10890

do.end:                                           ; preds = %do.body
  br label %if.end17, !dbg !10891

if.else15:                                        ; preds = %if.end
  %48 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10893
  %call16 = call i32 @writer_print_string(%struct.WriterContext* %48, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.488, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !10894
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %do.end
  %49 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10895
  %pkt_size = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %49, i32 0, i32 42, !dbg !10897
  %50 = load i32, i32* %pkt_size, align 8, !dbg !10897
  %cmp18 = icmp ne i32 %50, -1, !dbg !10898
  br i1 %cmp18, label %if.then20, label %if.else28, !dbg !10899

if.then20:                                        ; preds = %if.end17
  br label %do.body21, !dbg !10900, !llvm.loop !10902

do.body21:                                        ; preds = %if.then20
  call void @llvm.dbg.declare(metadata %struct.unit_value* %uv, metadata !10904, metadata !2571), !dbg !10906
  %51 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10907
  %pkt_size22 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %51, i32 0, i32 42, !dbg !10909
  %52 = load i32, i32* %pkt_size22, align 8, !dbg !10909
  %conv23 = sext i32 %52 to i64, !dbg !10907
  %val = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 0, !dbg !10910
  %i24 = bitcast %union.anon.1* %val to i64*, !dbg !10911
  store i64 %conv23, i64* %i24, align 8, !dbg !10912
  %unit = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 1, !dbg !10913
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @unit_byte_str, i32 0, i32 0), i8** %unit, align 8, !dbg !10914
  %53 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10915
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %val_str, i32 0, i32 0, !dbg !10916
  %54 = bitcast %struct.unit_value* %uv to { i64, i8* }*, !dbg !10917
  %55 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %54, i32 0, i32 0, !dbg !10917
  %56 = load i64, i64* %55, align 8, !dbg !10917
  %57 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %54, i32 0, i32 1, !dbg !10917
  %58 = load i8*, i8** %57, align 8, !dbg !10917
  %call25 = call i8* @value_string(i8* %arraydecay, i32 128, i64 %56, i8* %58), !dbg !10917
  %call26 = call i32 @writer_print_string(%struct.WriterContext* %53, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.489, i32 0, i32 0), i8* %call25, i32 0), !dbg !10918
  br label %do.end27, !dbg !10920

do.end27:                                         ; preds = %do.body21
  br label %if.end30, !dbg !10921

if.else28:                                        ; preds = %if.end17
  %59 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10923
  %call29 = call i32 @writer_print_string(%struct.WriterContext* %59, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.489, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !10924
  br label %if.end30

if.end30:                                         ; preds = %if.else28, %do.end27
  %60 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !10925
  %codecpar31 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %60, i32 0, i32 19, !dbg !10926
  %61 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar31, align 8, !dbg !10926
  %codec_type32 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %61, i32 0, i32 0, !dbg !10927
  %62 = load i32, i32* %codec_type32, align 8, !dbg !10927
  switch i32 %62, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb59
  ], !dbg !10928

sw.bb:                                            ; preds = %if.end30
  %63 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10929
  %64 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10931
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %64, i32 0, i32 3, !dbg !10932
  %65 = load i32, i32* %width, align 8, !dbg !10932
  %conv33 = sext i32 %65 to i64, !dbg !10931
  call void @writer_print_integer(%struct.WriterContext* %63, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.490, i32 0, i32 0), i64 %conv33), !dbg !10933
  %66 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10934
  %67 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10935
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %67, i32 0, i32 4, !dbg !10936
  %68 = load i32, i32* %height, align 4, !dbg !10936
  %conv34 = sext i32 %68 to i64, !dbg !10935
  call void @writer_print_integer(%struct.WriterContext* %66, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.491, i32 0, i32 0), i64 %conv34), !dbg !10937
  %69 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10938
  %format = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %69, i32 0, i32 6, !dbg !10939
  %70 = load i32, i32* %format, align 4, !dbg !10939
  %call35 = call i8* @av_get_pix_fmt_name(i32 %70), !dbg !10940
  store i8* %call35, i8** %s, align 8, !dbg !10941
  %71 = load i8*, i8** %s, align 8, !dbg !10942
  %tobool36 = icmp ne i8* %71, null, !dbg !10942
  br i1 %tobool36, label %if.then37, label %if.else39, !dbg !10944

if.then37:                                        ; preds = %sw.bb
  %72 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10945
  %73 = load i8*, i8** %s, align 8, !dbg !10947
  %call38 = call i32 @writer_print_string(%struct.WriterContext* %72, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.492, i32 0, i32 0), i8* %73, i32 0), !dbg !10948
  br label %if.end41, !dbg !10948

if.else39:                                        ; preds = %sw.bb
  %74 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10949
  %call40 = call i32 @writer_print_string(%struct.WriterContext* %74, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.492, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !10950
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.then37
  %75 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx.addr, align 8, !dbg !10951
  %76 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !10952
  %77 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10953
  %call42 = call i64 @av_guess_sample_aspect_ratio(%struct.AVFormatContext* %75, %struct.AVStream* %76, %struct.AVFrame* %77), !dbg !10954
  %78 = bitcast %struct.AVRational* %coerce to i64*, !dbg !10954
  store i64 %call42, i64* %78, align 4, !dbg !10954
  %79 = bitcast %struct.AVRational* %sar to i8*, !dbg !10954
  %80 = bitcast %struct.AVRational* %coerce to i8*, !dbg !10954
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 4, i1 false), !dbg !10955
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sar, i32 0, i32 0, !dbg !10957
  %81 = load i32, i32* %num, align 4, !dbg !10957
  %tobool43 = icmp ne i32 %81, 0, !dbg !10959
  br i1 %tobool43, label %if.then44, label %if.else45, !dbg !10960

if.then44:                                        ; preds = %if.end41
  %82 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10961
  %83 = bitcast %struct.AVRational* %sar to i64*, !dbg !10963
  %84 = load i64, i64* %83, align 4, !dbg !10963
  call void @writer_print_rational(%struct.WriterContext* %82, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.493, i32 0, i32 0), i64 %84, i8 signext 58), !dbg !10963
  br label %if.end47, !dbg !10964

if.else45:                                        ; preds = %if.end41
  %85 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10965
  %call46 = call i32 @writer_print_string(%struct.WriterContext* %85, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.493, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !10967
  br label %if.end47

if.end47:                                         ; preds = %if.else45, %if.then44
  br label %do.body48, !dbg !10968, !llvm.loop !10969

do.body48:                                        ; preds = %if.end47
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !10970
  %86 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10973
  %pict_type = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %86, i32 0, i32 8, !dbg !10974
  %87 = load i32, i32* %pict_type, align 4, !dbg !10974
  %call49 = call signext i8 @av_get_picture_type_char(i32 %87), !dbg !10975
  %conv50 = sext i8 %call49 to i32, !dbg !10977
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %pbuf, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.218, i32 0, i32 0), i32 %conv50), !dbg !10978
  %88 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10980
  %str51 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !10981
  %89 = load i8*, i8** %str51, align 8, !dbg !10981
  %call52 = call i32 @writer_print_string(%struct.WriterContext* %88, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.494, i32 0, i32 0), i8* %89, i32 0), !dbg !10982
  br label %do.end53, !dbg !10984

do.end53:                                         ; preds = %do.body48
  %90 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10985
  %91 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10986
  %coded_picture_number = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %91, i32 0, i32 13, !dbg !10987
  %92 = load i32, i32* %coded_picture_number, align 8, !dbg !10987
  %conv54 = sext i32 %92 to i64, !dbg !10986
  call void @writer_print_integer(%struct.WriterContext* %90, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.495, i32 0, i32 0), i64 %conv54), !dbg !10988
  %93 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10989
  %94 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10990
  %display_picture_number = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %94, i32 0, i32 14, !dbg !10991
  %95 = load i32, i32* %display_picture_number, align 4, !dbg !10991
  %conv55 = sext i32 %95 to i64, !dbg !10990
  call void @writer_print_integer(%struct.WriterContext* %93, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.496, i32 0, i32 0), i64 %conv55), !dbg !10992
  %96 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10993
  %97 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10994
  %interlaced_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %97, i32 0, i32 19, !dbg !10995
  %98 = load i32, i32* %interlaced_frame, align 4, !dbg !10995
  %conv56 = sext i32 %98 to i64, !dbg !10994
  call void @writer_print_integer(%struct.WriterContext* %96, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.497, i32 0, i32 0), i64 %conv56), !dbg !10996
  %99 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !10997
  %100 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !10998
  %top_field_first = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %100, i32 0, i32 20, !dbg !10999
  %101 = load i32, i32* %top_field_first, align 8, !dbg !10999
  %conv57 = sext i32 %101 to i64, !dbg !10998
  call void @writer_print_integer(%struct.WriterContext* %99, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.498, i32 0, i32 0), i64 %conv57), !dbg !11000
  %102 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11001
  %103 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11002
  %repeat_pict = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %103, i32 0, i32 18, !dbg !11003
  %104 = load i32, i32* %repeat_pict, align 8, !dbg !11003
  %conv58 = sext i32 %104 to i64, !dbg !11002
  call void @writer_print_integer(%struct.WriterContext* %102, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.499, i32 0, i32 0), i64 %conv58), !dbg !11004
  %105 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11005
  %106 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11006
  %color_range = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %106, i32 0, i32 31, !dbg !11007
  %107 = load i32, i32* %color_range, align 8, !dbg !11007
  call void @print_color_range(%struct.WriterContext* %105, i32 %107), !dbg !11008
  %108 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11009
  %109 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11010
  %colorspace = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %109, i32 0, i32 34, !dbg !11011
  %110 = load i32, i32* %colorspace, align 4, !dbg !11011
  call void @print_color_space(%struct.WriterContext* %108, i32 %110), !dbg !11012
  %111 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11013
  %112 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11014
  %color_primaries = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %112, i32 0, i32 32, !dbg !11015
  %113 = load i32, i32* %color_primaries, align 4, !dbg !11015
  call void @print_primaries(%struct.WriterContext* %111, i32 %113), !dbg !11016
  %114 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11017
  %115 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11018
  %color_trc = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %115, i32 0, i32 33, !dbg !11019
  %116 = load i32, i32* %color_trc, align 8, !dbg !11019
  call void @print_color_trc(%struct.WriterContext* %114, i32 %116), !dbg !11020
  %117 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11021
  %118 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11022
  %chroma_location = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %118, i32 0, i32 35, !dbg !11023
  %119 = load i32, i32* %chroma_location, align 8, !dbg !11023
  call void @print_chroma_location(%struct.WriterContext* %117, i32 %119), !dbg !11024
  br label %sw.epilog, !dbg !11025

sw.bb59:                                          ; preds = %if.end30
  %120 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11026
  %format60 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %120, i32 0, i32 6, !dbg !11027
  %121 = load i32, i32* %format60, align 4, !dbg !11027
  %call61 = call i8* @av_get_sample_fmt_name(i32 %121), !dbg !11028
  store i8* %call61, i8** %s, align 8, !dbg !11029
  %122 = load i8*, i8** %s, align 8, !dbg !11030
  %tobool62 = icmp ne i8* %122, null, !dbg !11030
  br i1 %tobool62, label %if.then63, label %if.else65, !dbg !11032

if.then63:                                        ; preds = %sw.bb59
  %123 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11033
  %124 = load i8*, i8** %s, align 8, !dbg !11035
  %call64 = call i32 @writer_print_string(%struct.WriterContext* %123, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.500, i32 0, i32 0), i8* %124, i32 0), !dbg !11036
  br label %if.end67, !dbg !11036

if.else65:                                        ; preds = %sw.bb59
  %125 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11037
  %call66 = call i32 @writer_print_string(%struct.WriterContext* %125, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.500, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11038
  br label %if.end67

if.end67:                                         ; preds = %if.else65, %if.then63
  %126 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11039
  %127 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11040
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %127, i32 0, i32 5, !dbg !11041
  %128 = load i32, i32* %nb_samples, align 8, !dbg !11041
  %conv68 = sext i32 %128 to i64, !dbg !11040
  call void @writer_print_integer(%struct.WriterContext* %126, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.501, i32 0, i32 0), i64 %conv68), !dbg !11042
  %129 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11043
  %130 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11044
  %channels = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %130, i32 0, i32 41, !dbg !11045
  %131 = load i32, i32* %channels, align 4, !dbg !11045
  %conv69 = sext i32 %131 to i64, !dbg !11044
  call void @writer_print_integer(%struct.WriterContext* %129, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.502, i32 0, i32 0), i64 %conv69), !dbg !11046
  %132 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11047
  %channel_layout = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %132, i32 0, i32 24, !dbg !11049
  %133 = load i64, i64* %channel_layout, align 8, !dbg !11049
  %tobool70 = icmp ne i64 %133, 0, !dbg !11047
  br i1 %tobool70, label %if.then71, label %if.else76, !dbg !11050

if.then71:                                        ; preds = %if.end67
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !11051
  %134 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11053
  %channels72 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %134, i32 0, i32 41, !dbg !11054
  %135 = load i32, i32* %channels72, align 4, !dbg !11054
  %136 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11055
  %channel_layout73 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %136, i32 0, i32 24, !dbg !11056
  %137 = load i64, i64* %channel_layout73, align 8, !dbg !11056
  call void @av_bprint_channel_layout(%struct.AVBPrint* %pbuf, i32 %135, i64 %137), !dbg !11057
  %138 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11058
  %str74 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !11059
  %139 = load i8*, i8** %str74, align 8, !dbg !11059
  %call75 = call i32 @writer_print_string(%struct.WriterContext* %138, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.503, i32 0, i32 0), i8* %139, i32 0), !dbg !11060
  br label %if.end78, !dbg !11061

if.else76:                                        ; preds = %if.end67
  %140 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11062
  %call77 = call i32 @writer_print_string(%struct.WriterContext* %140, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.503, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11063
  br label %if.end78

if.end78:                                         ; preds = %if.else76, %if.then71
  br label %sw.epilog, !dbg !11064

sw.epilog:                                        ; preds = %if.end30, %if.end78, %do.end53
  %141 = load i32, i32* @do_show_frame_tags, align 4, !dbg !11065
  %tobool79 = icmp ne i32 %141, 0, !dbg !11065
  br i1 %tobool79, label %if.then80, label %if.end82, !dbg !11067

if.then80:                                        ; preds = %sw.epilog
  %142 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11068
  %143 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11069
  %metadata = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %143, i32 0, i32 39, !dbg !11070
  %144 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !11070
  %call81 = call i32 @show_tags(%struct.WriterContext* %142, %struct.AVDictionary* %144, i32 8), !dbg !11071
  br label %if.end82, !dbg !11071

if.end82:                                         ; preds = %if.then80, %sw.epilog
  %145 = load i32, i32* @do_show_log, align 4, !dbg !11072
  %tobool83 = icmp ne i32 %145, 0, !dbg !11072
  br i1 %tobool83, label %if.then84, label %if.end86, !dbg !11074

if.then84:                                        ; preds = %if.end82
  %146 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11075
  %147 = load i32, i32* @do_show_log, align 4, !dbg !11076
  %call85 = call i32 @show_log(%struct.WriterContext* %146, i32 12, i32 11, i32 %147), !dbg !11077
  br label %if.end86, !dbg !11077

if.end86:                                         ; preds = %if.then84, %if.end82
  %148 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11078
  %nb_side_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %148, i32 0, i32 29, !dbg !11080
  %149 = load i32, i32* %nb_side_data, align 8, !dbg !11080
  %tobool87 = icmp ne i32 %149, 0, !dbg !11078
  br i1 %tobool87, label %if.then88, label %if.end179, !dbg !11081

if.then88:                                        ; preds = %if.end86
  %150 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11082
  call void @writer_print_section_header(%struct.WriterContext* %150, i32 9), !dbg !11084
  store i32 0, i32* %i, align 4, !dbg !11085
  br label %for.cond, !dbg !11087

for.cond:                                         ; preds = %for.inc, %if.then88
  %151 = load i32, i32* %i, align 4, !dbg !11088
  %152 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11091
  %nb_side_data89 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %152, i32 0, i32 29, !dbg !11092
  %153 = load i32, i32* %nb_side_data89, align 8, !dbg !11092
  %cmp90 = icmp slt i32 %151, %153, !dbg !11093
  br i1 %cmp90, label %for.body, label %for.end, !dbg !11094

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVFrameSideData** %sd, metadata !11095, metadata !2571), !dbg !11097
  %154 = load i32, i32* %i, align 4, !dbg !11098
  %idxprom = sext i32 %154 to i64, !dbg !11099
  %155 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !11099
  %side_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %155, i32 0, i32 28, !dbg !11100
  %156 = load %struct.AVFrameSideData**, %struct.AVFrameSideData*** %side_data, align 8, !dbg !11100
  %arrayidx = getelementptr inbounds %struct.AVFrameSideData*, %struct.AVFrameSideData** %156, i64 %idxprom, !dbg !11099
  %157 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %arrayidx, align 8, !dbg !11099
  store %struct.AVFrameSideData* %157, %struct.AVFrameSideData** %sd, align 8, !dbg !11097
  call void @llvm.dbg.declare(metadata i8** %name, metadata !11101, metadata !2571), !dbg !11102
  %158 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11103
  call void @writer_print_section_header(%struct.WriterContext* %158, i32 10), !dbg !11104
  %159 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11105
  %type = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %159, i32 0, i32 0, !dbg !11106
  %160 = load i32, i32* %type, align 8, !dbg !11106
  %call92 = call i8* @av_frame_side_data_name(i32 %160), !dbg !11107
  store i8* %call92, i8** %name, align 8, !dbg !11108
  %161 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11109
  %162 = load i8*, i8** %name, align 8, !dbg !11110
  %tobool93 = icmp ne i8* %162, null, !dbg !11110
  br i1 %tobool93, label %cond.true, label %cond.false, !dbg !11110

cond.true:                                        ; preds = %for.body
  %163 = load i8*, i8** %name, align 8, !dbg !11111
  br label %cond.end, !dbg !11113

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !11114

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %163, %cond.true ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), %cond.false ], !dbg !11116
  %call94 = call i32 @writer_print_string(%struct.WriterContext* %161, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.440, i32 0, i32 0), i8* %cond, i32 0), !dbg !11118
  %164 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11119
  %type95 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %164, i32 0, i32 0, !dbg !11121
  %165 = load i32, i32* %type95, align 8, !dbg !11121
  %cmp96 = icmp eq i32 %165, 6, !dbg !11122
  br i1 %cmp96, label %land.lhs.true, label %if.else104, !dbg !11123

land.lhs.true:                                    ; preds = %cond.end
  %166 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11124
  %size = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %166, i32 0, i32 2, !dbg !11126
  %167 = load i32, i32* %size, align 8, !dbg !11126
  %cmp98 = icmp sge i32 %167, 36, !dbg !11127
  br i1 %cmp98, label %if.then100, label %if.else104, !dbg !11128

if.then100:                                       ; preds = %land.lhs.true
  %168 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11129
  %169 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11131
  %data = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %169, i32 0, i32 1, !dbg !11132
  %170 = load i8*, i8** %data, align 8, !dbg !11132
  call void @writer_print_integers(%struct.WriterContext* %168, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.441, i32 0, i32 0), i8* %170, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.442, i32 0, i32 0), i32 3, i32 4, i32 1), !dbg !11133
  %171 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11134
  %172 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11135
  %data101 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %172, i32 0, i32 1, !dbg !11136
  %173 = load i8*, i8** %data101, align 8, !dbg !11136
  %174 = bitcast i8* %173 to i32*, !dbg !11137
  %call102 = call double @av_display_rotation_get(i32* %174), !dbg !11138
  %conv103 = fptosi double %call102 to i64, !dbg !11138
  call void @writer_print_integer(%struct.WriterContext* %171, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.443, i32 0, i32 0), i64 %conv103), !dbg !11139
  br label %if.end178, !dbg !11141

if.else104:                                       ; preds = %land.lhs.true, %cond.end
  %175 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11142
  %type105 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %175, i32 0, i32 0, !dbg !11145
  %176 = load i32, i32* %type105, align 8, !dbg !11145
  %cmp106 = icmp eq i32 %176, 12, !dbg !11146
  br i1 %cmp106, label %land.lhs.true108, label %if.else119, !dbg !11147

land.lhs.true108:                                 ; preds = %if.else104
  %177 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11148
  %size109 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %177, i32 0, i32 2, !dbg !11150
  %178 = load i32, i32* %size109, align 8, !dbg !11150
  %cmp110 = icmp sge i32 %178, 8, !dbg !11151
  br i1 %cmp110, label %if.then112, label %if.else119, !dbg !11152

if.then112:                                       ; preds = %land.lhs.true108
  call void @llvm.dbg.declare(metadata [23 x i8]* %tcbuf, metadata !11153, metadata !2571), !dbg !11158
  %arraydecay113 = getelementptr inbounds [23 x i8], [23 x i8]* %tcbuf, i32 0, i32 0, !dbg !11159
  %179 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11160
  %data114 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %179, i32 0, i32 1, !dbg !11161
  %180 = load i8*, i8** %data114, align 8, !dbg !11161
  %181 = bitcast i8* %180 to i64*, !dbg !11162
  %182 = load i64, i64* %181, align 8, !dbg !11162
  %conv115 = trunc i64 %182 to i32, !dbg !11162
  %call116 = call i8* @av_timecode_make_mpeg_tc_string(i8* %arraydecay113, i32 %conv115), !dbg !11163
  %183 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11164
  %arraydecay117 = getelementptr inbounds [23 x i8], [23 x i8]* %tcbuf, i32 0, i32 0, !dbg !11165
  %call118 = call i32 @writer_print_string(%struct.WriterContext* %183, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.504, i32 0, i32 0), i8* %arraydecay117, i32 0), !dbg !11166
  br label %if.end177, !dbg !11167

if.else119:                                       ; preds = %land.lhs.true108, %if.else104
  %184 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11168
  %type120 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %184, i32 0, i32 0, !dbg !11171
  %185 = load i32, i32* %type120, align 8, !dbg !11171
  %cmp121 = icmp eq i32 %185, 11, !dbg !11172
  br i1 %cmp121, label %if.then123, label %if.else152, !dbg !11168

if.then123:                                       ; preds = %if.else119
  call void @llvm.dbg.declare(metadata %struct.AVMasteringDisplayMetadata** %metadata124, metadata !11173, metadata !2571), !dbg !11175
  %186 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11176
  %data125 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %186, i32 0, i32 1, !dbg !11177
  %187 = load i8*, i8** %data125, align 8, !dbg !11177
  %188 = bitcast i8* %187 to %struct.AVMasteringDisplayMetadata*, !dbg !11178
  store %struct.AVMasteringDisplayMetadata* %188, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11175
  %189 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11179
  %has_primaries = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %189, i32 0, i32 4, !dbg !11181
  %190 = load i32, i32* %has_primaries, align 4, !dbg !11181
  %tobool126 = icmp ne i32 %190, 0, !dbg !11179
  br i1 %tobool126, label %if.then127, label %if.end148, !dbg !11182

if.then127:                                       ; preds = %if.then123
  %191 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11183
  %192 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11185
  %display_primaries = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %192, i32 0, i32 0, !dbg !11186
  %arrayidx128 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries, i64 0, i64 0, !dbg !11185
  %arrayidx129 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx128, i64 0, i64 0, !dbg !11185
  %193 = bitcast %struct.AVRational* %arrayidx129 to i64*, !dbg !11187
  %194 = load i64, i64* %193, align 4, !dbg !11187
  call void @writer_print_rational(%struct.WriterContext* %191, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.459, i32 0, i32 0), i64 %194, i8 signext 47), !dbg !11187
  %195 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11188
  %196 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11189
  %display_primaries130 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %196, i32 0, i32 0, !dbg !11190
  %arrayidx131 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries130, i64 0, i64 0, !dbg !11189
  %arrayidx132 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx131, i64 0, i64 1, !dbg !11189
  %197 = bitcast %struct.AVRational* %arrayidx132 to i64*, !dbg !11191
  %198 = load i64, i64* %197, align 4, !dbg !11191
  call void @writer_print_rational(%struct.WriterContext* %195, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.460, i32 0, i32 0), i64 %198, i8 signext 47), !dbg !11191
  %199 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11192
  %200 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11193
  %display_primaries133 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %200, i32 0, i32 0, !dbg !11194
  %arrayidx134 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries133, i64 0, i64 1, !dbg !11193
  %arrayidx135 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx134, i64 0, i64 0, !dbg !11193
  %201 = bitcast %struct.AVRational* %arrayidx135 to i64*, !dbg !11195
  %202 = load i64, i64* %201, align 4, !dbg !11195
  call void @writer_print_rational(%struct.WriterContext* %199, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.461, i32 0, i32 0), i64 %202, i8 signext 47), !dbg !11195
  %203 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11196
  %204 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11197
  %display_primaries136 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %204, i32 0, i32 0, !dbg !11198
  %arrayidx137 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries136, i64 0, i64 1, !dbg !11197
  %arrayidx138 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx137, i64 0, i64 1, !dbg !11197
  %205 = bitcast %struct.AVRational* %arrayidx138 to i64*, !dbg !11199
  %206 = load i64, i64* %205, align 4, !dbg !11199
  call void @writer_print_rational(%struct.WriterContext* %203, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.462, i32 0, i32 0), i64 %206, i8 signext 47), !dbg !11199
  %207 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11200
  %208 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11201
  %display_primaries139 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %208, i32 0, i32 0, !dbg !11202
  %arrayidx140 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries139, i64 0, i64 2, !dbg !11201
  %arrayidx141 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx140, i64 0, i64 0, !dbg !11201
  %209 = bitcast %struct.AVRational* %arrayidx141 to i64*, !dbg !11203
  %210 = load i64, i64* %209, align 4, !dbg !11203
  call void @writer_print_rational(%struct.WriterContext* %207, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.463, i32 0, i32 0), i64 %210, i8 signext 47), !dbg !11203
  %211 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11204
  %212 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11205
  %display_primaries142 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %212, i32 0, i32 0, !dbg !11206
  %arrayidx143 = getelementptr inbounds [3 x [2 x %struct.AVRational]], [3 x [2 x %struct.AVRational]]* %display_primaries142, i64 0, i64 2, !dbg !11205
  %arrayidx144 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %arrayidx143, i64 0, i64 1, !dbg !11205
  %213 = bitcast %struct.AVRational* %arrayidx144 to i64*, !dbg !11207
  %214 = load i64, i64* %213, align 4, !dbg !11207
  call void @writer_print_rational(%struct.WriterContext* %211, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.464, i32 0, i32 0), i64 %214, i8 signext 47), !dbg !11207
  %215 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11208
  %216 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11209
  %white_point = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %216, i32 0, i32 1, !dbg !11210
  %arrayidx145 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %white_point, i64 0, i64 0, !dbg !11209
  %217 = bitcast %struct.AVRational* %arrayidx145 to i64*, !dbg !11211
  %218 = load i64, i64* %217, align 4, !dbg !11211
  call void @writer_print_rational(%struct.WriterContext* %215, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.465, i32 0, i32 0), i64 %218, i8 signext 47), !dbg !11211
  %219 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11212
  %220 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11213
  %white_point146 = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %220, i32 0, i32 1, !dbg !11214
  %arrayidx147 = getelementptr inbounds [2 x %struct.AVRational], [2 x %struct.AVRational]* %white_point146, i64 0, i64 1, !dbg !11213
  %221 = bitcast %struct.AVRational* %arrayidx147 to i64*, !dbg !11215
  %222 = load i64, i64* %221, align 4, !dbg !11215
  call void @writer_print_rational(%struct.WriterContext* %219, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.466, i32 0, i32 0), i64 %222, i8 signext 47), !dbg !11215
  br label %if.end148, !dbg !11216

if.end148:                                        ; preds = %if.then127, %if.then123
  %223 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11217
  %has_luminance = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %223, i32 0, i32 5, !dbg !11219
  %224 = load i32, i32* %has_luminance, align 4, !dbg !11219
  %tobool149 = icmp ne i32 %224, 0, !dbg !11217
  br i1 %tobool149, label %if.then150, label %if.end151, !dbg !11220

if.then150:                                       ; preds = %if.end148
  %225 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11221
  %226 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11223
  %min_luminance = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %226, i32 0, i32 2, !dbg !11224
  %227 = bitcast %struct.AVRational* %min_luminance to i64*, !dbg !11225
  %228 = load i64, i64* %227, align 4, !dbg !11225
  call void @writer_print_rational(%struct.WriterContext* %225, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.467, i32 0, i32 0), i64 %228, i8 signext 47), !dbg !11225
  %229 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11226
  %230 = load %struct.AVMasteringDisplayMetadata*, %struct.AVMasteringDisplayMetadata** %metadata124, align 8, !dbg !11227
  %max_luminance = getelementptr inbounds %struct.AVMasteringDisplayMetadata, %struct.AVMasteringDisplayMetadata* %230, i32 0, i32 3, !dbg !11228
  %231 = bitcast %struct.AVRational* %max_luminance to i64*, !dbg !11229
  %232 = load i64, i64* %231, align 4, !dbg !11229
  call void @writer_print_rational(%struct.WriterContext* %229, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.468, i32 0, i32 0), i64 %232, i8 signext 47), !dbg !11229
  br label %if.end151, !dbg !11230

if.end151:                                        ; preds = %if.then150, %if.end148
  br label %if.end176, !dbg !11231

if.else152:                                       ; preds = %if.else119
  %233 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11232
  %type153 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %233, i32 0, i32 0, !dbg !11235
  %234 = load i32, i32* %type153, align 8, !dbg !11235
  %cmp154 = icmp eq i32 %234, 14, !dbg !11236
  br i1 %cmp154, label %if.then156, label %if.else161, !dbg !11232

if.then156:                                       ; preds = %if.else152
  call void @llvm.dbg.declare(metadata %struct.AVContentLightMetadata** %metadata157, metadata !11237, metadata !2571), !dbg !11239
  %235 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11240
  %data158 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %235, i32 0, i32 1, !dbg !11241
  %236 = load i8*, i8** %data158, align 8, !dbg !11241
  %237 = bitcast i8* %236 to %struct.AVContentLightMetadata*, !dbg !11242
  store %struct.AVContentLightMetadata* %237, %struct.AVContentLightMetadata** %metadata157, align 8, !dbg !11239
  %238 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11243
  %239 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %metadata157, align 8, !dbg !11244
  %MaxCLL = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %239, i32 0, i32 0, !dbg !11245
  %240 = load i32, i32* %MaxCLL, align 4, !dbg !11245
  %conv159 = zext i32 %240 to i64, !dbg !11244
  call void @writer_print_integer(%struct.WriterContext* %238, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.469, i32 0, i32 0), i64 %conv159), !dbg !11246
  %241 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11247
  %242 = load %struct.AVContentLightMetadata*, %struct.AVContentLightMetadata** %metadata157, align 8, !dbg !11248
  %MaxFALL = getelementptr inbounds %struct.AVContentLightMetadata, %struct.AVContentLightMetadata* %242, i32 0, i32 1, !dbg !11249
  %243 = load i32, i32* %MaxFALL, align 4, !dbg !11249
  %conv160 = zext i32 %243 to i64, !dbg !11248
  call void @writer_print_integer(%struct.WriterContext* %241, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.470, i32 0, i32 0), i64 %conv160), !dbg !11250
  br label %if.end175, !dbg !11251

if.else161:                                       ; preds = %if.else152
  %244 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11252
  %type162 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %244, i32 0, i32 0, !dbg !11255
  %245 = load i32, i32* %type162, align 8, !dbg !11255
  %cmp163 = icmp eq i32 %245, 15, !dbg !11256
  br i1 %cmp163, label %if.then165, label %if.end174, !dbg !11252

if.then165:                                       ; preds = %if.else161
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %tag, metadata !11257, metadata !2571), !dbg !11259
  %246 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11260
  %metadata166 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %246, i32 0, i32 3, !dbg !11261
  %247 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata166, align 8, !dbg !11261
  %call167 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %247, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.363, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 1), !dbg !11262
  store %struct.AVDictionaryEntry* %call167, %struct.AVDictionaryEntry** %tag, align 8, !dbg !11259
  %248 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !11263
  %tobool168 = icmp ne %struct.AVDictionaryEntry* %248, null, !dbg !11263
  br i1 %tobool168, label %if.then169, label %if.end171, !dbg !11265

if.then169:                                       ; preds = %if.then165
  %249 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11266
  %250 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !11267
  %key = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %250, i32 0, i32 0, !dbg !11268
  %251 = load i8*, i8** %key, align 8, !dbg !11268
  %252 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tag, align 8, !dbg !11269
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %252, i32 0, i32 1, !dbg !11270
  %253 = load i8*, i8** %value, align 8, !dbg !11270
  %call170 = call i32 @writer_print_string(%struct.WriterContext* %249, i8* %251, i8* %253, i32 0), !dbg !11271
  br label %if.end171, !dbg !11271

if.end171:                                        ; preds = %if.then169, %if.then165
  %254 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11272
  %255 = load %struct.AVFrameSideData*, %struct.AVFrameSideData** %sd, align 8, !dbg !11273
  %size172 = getelementptr inbounds %struct.AVFrameSideData, %struct.AVFrameSideData* %255, i32 0, i32 2, !dbg !11274
  %256 = load i32, i32* %size172, align 8, !dbg !11274
  %conv173 = sext i32 %256 to i64, !dbg !11273
  call void @writer_print_integer(%struct.WriterContext* %254, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.421, i32 0, i32 0), i64 %conv173), !dbg !11275
  br label %if.end174, !dbg !11276

if.end174:                                        ; preds = %if.end171, %if.else161
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then156
  br label %if.end176

if.end176:                                        ; preds = %if.end175, %if.end151
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %if.then112
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.then100
  %257 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11277
  call void @writer_print_section_footer(%struct.WriterContext* %257), !dbg !11278
  br label %for.inc, !dbg !11279

for.inc:                                          ; preds = %if.end178
  %258 = load i32, i32* %i, align 4, !dbg !11280
  %inc = add nsw i32 %258, 1, !dbg !11280
  store i32 %inc, i32* %i, align 4, !dbg !11280
  br label %for.cond, !dbg !11282, !llvm.loop !11283

for.end:                                          ; preds = %for.cond
  %259 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11285
  call void @writer_print_section_footer(%struct.WriterContext* %259), !dbg !11286
  br label %if.end179, !dbg !11287

if.end179:                                        ; preds = %for.end, %if.end86
  %260 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11288
  call void @writer_print_section_footer(%struct.WriterContext* %260), !dbg !11289
  %call180 = call i32 @av_bprint_finalize(%struct.AVBPrint* %pbuf, i8** null), !dbg !11290
  %261 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !11291
  %call181 = call i32 @fflush(%struct._IO_FILE* %261), !dbg !11292
  ret void, !dbg !11293
}

declare void @avsubtitle_free(%struct.AVSubtitle*) #2

declare i8* @av_get_pix_fmt_name(i32) #2

declare i64 @av_guess_sample_aspect_ratio(%struct.AVFormatContext*, %struct.AVStream*, %struct.AVFrame*) #2

declare signext i8 @av_get_picture_type_char(i32) #2

; Function Attrs: nounwind uwtable
define internal void @print_color_range(%struct.WriterContext* %w, i32 %color_range) #0 !dbg !11294 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %color_range.addr = alloca i32, align 4
  %val = alloca i8*, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !11297, metadata !2571), !dbg !11298
  store i32 %color_range, i32* %color_range.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %color_range.addr, metadata !11299, metadata !2571), !dbg !11300
  call void @llvm.dbg.declare(metadata i8** %val, metadata !11301, metadata !2571), !dbg !11302
  %0 = load i32, i32* %color_range.addr, align 4, !dbg !11303
  %call = call i8* @av_color_range_name(i32 %0), !dbg !11304
  store i8* %call, i8** %val, align 8, !dbg !11302
  %1 = load i8*, i8** %val, align 8, !dbg !11305
  %tobool = icmp ne i8* %1, null, !dbg !11305
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11307

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %color_range.addr, align 4, !dbg !11308
  %cmp = icmp eq i32 %2, 0, !dbg !11310
  br i1 %cmp, label %if.then, label %if.else, !dbg !11311

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11312
  %call1 = call i32 @writer_print_string(%struct.WriterContext* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.505, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11314
  br label %if.end, !dbg !11315

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11316
  %5 = load i8*, i8** %val, align 8, !dbg !11318
  %call2 = call i32 @writer_print_string(%struct.WriterContext* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.505, i32 0, i32 0), i8* %5, i32 0), !dbg !11319
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11320
}

; Function Attrs: nounwind uwtable
define internal void @print_color_space(%struct.WriterContext* %w, i32 %color_space) #0 !dbg !11321 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %color_space.addr = alloca i32, align 4
  %val = alloca i8*, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !11324, metadata !2571), !dbg !11325
  store i32 %color_space, i32* %color_space.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %color_space.addr, metadata !11326, metadata !2571), !dbg !11327
  call void @llvm.dbg.declare(metadata i8** %val, metadata !11328, metadata !2571), !dbg !11329
  %0 = load i32, i32* %color_space.addr, align 4, !dbg !11330
  %call = call i8* @av_color_space_name(i32 %0), !dbg !11331
  store i8* %call, i8** %val, align 8, !dbg !11329
  %1 = load i8*, i8** %val, align 8, !dbg !11332
  %tobool = icmp ne i8* %1, null, !dbg !11332
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11334

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %color_space.addr, align 4, !dbg !11335
  %cmp = icmp eq i32 %2, 2, !dbg !11337
  br i1 %cmp, label %if.then, label %if.else, !dbg !11338

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11339
  %call1 = call i32 @writer_print_string(%struct.WriterContext* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.506, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11341
  br label %if.end, !dbg !11342

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11343
  %5 = load i8*, i8** %val, align 8, !dbg !11345
  %call2 = call i32 @writer_print_string(%struct.WriterContext* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.506, i32 0, i32 0), i8* %5, i32 0), !dbg !11346
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11347
}

; Function Attrs: nounwind uwtable
define internal void @print_primaries(%struct.WriterContext* %w, i32 %color_primaries) #0 !dbg !11348 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %color_primaries.addr = alloca i32, align 4
  %val = alloca i8*, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !11351, metadata !2571), !dbg !11352
  store i32 %color_primaries, i32* %color_primaries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %color_primaries.addr, metadata !11353, metadata !2571), !dbg !11354
  call void @llvm.dbg.declare(metadata i8** %val, metadata !11355, metadata !2571), !dbg !11356
  %0 = load i32, i32* %color_primaries.addr, align 4, !dbg !11357
  %call = call i8* @av_color_primaries_name(i32 %0), !dbg !11358
  store i8* %call, i8** %val, align 8, !dbg !11356
  %1 = load i8*, i8** %val, align 8, !dbg !11359
  %tobool = icmp ne i8* %1, null, !dbg !11359
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11361

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %color_primaries.addr, align 4, !dbg !11362
  %cmp = icmp eq i32 %2, 2, !dbg !11364
  br i1 %cmp, label %if.then, label %if.else, !dbg !11365

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11366
  %call1 = call i32 @writer_print_string(%struct.WriterContext* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.507, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11368
  br label %if.end, !dbg !11369

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11370
  %5 = load i8*, i8** %val, align 8, !dbg !11372
  %call2 = call i32 @writer_print_string(%struct.WriterContext* %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.507, i32 0, i32 0), i8* %5, i32 0), !dbg !11373
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11374
}

; Function Attrs: nounwind uwtable
define internal void @print_color_trc(%struct.WriterContext* %w, i32 %color_trc) #0 !dbg !11375 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %color_trc.addr = alloca i32, align 4
  %val = alloca i8*, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !11378, metadata !2571), !dbg !11379
  store i32 %color_trc, i32* %color_trc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %color_trc.addr, metadata !11380, metadata !2571), !dbg !11381
  call void @llvm.dbg.declare(metadata i8** %val, metadata !11382, metadata !2571), !dbg !11383
  %0 = load i32, i32* %color_trc.addr, align 4, !dbg !11384
  %call = call i8* @av_color_transfer_name(i32 %0), !dbg !11385
  store i8* %call, i8** %val, align 8, !dbg !11383
  %1 = load i8*, i8** %val, align 8, !dbg !11386
  %tobool = icmp ne i8* %1, null, !dbg !11386
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11388

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %color_trc.addr, align 4, !dbg !11389
  %cmp = icmp eq i32 %2, 2, !dbg !11391
  br i1 %cmp, label %if.then, label %if.else, !dbg !11392

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11393
  %call1 = call i32 @writer_print_string(%struct.WriterContext* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.508, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11395
  br label %if.end, !dbg !11396

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11397
  %5 = load i8*, i8** %val, align 8, !dbg !11399
  %call2 = call i32 @writer_print_string(%struct.WriterContext* %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.508, i32 0, i32 0), i8* %5, i32 0), !dbg !11400
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11401
}

; Function Attrs: nounwind uwtable
define internal void @print_chroma_location(%struct.WriterContext* %w, i32 %chroma_location) #0 !dbg !11402 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %chroma_location.addr = alloca i32, align 4
  %val = alloca i8*, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !11405, metadata !2571), !dbg !11406
  store i32 %chroma_location, i32* %chroma_location.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chroma_location.addr, metadata !11407, metadata !2571), !dbg !11408
  call void @llvm.dbg.declare(metadata i8** %val, metadata !11409, metadata !2571), !dbg !11410
  %0 = load i32, i32* %chroma_location.addr, align 4, !dbg !11411
  %call = call i8* @av_chroma_location_name(i32 %0), !dbg !11412
  store i8* %call, i8** %val, align 8, !dbg !11410
  %1 = load i8*, i8** %val, align 8, !dbg !11413
  %tobool = icmp ne i8* %1, null, !dbg !11413
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11415

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %chroma_location.addr, align 4, !dbg !11416
  %cmp = icmp eq i32 %2, 0, !dbg !11418
  br i1 %cmp, label %if.then, label %if.else, !dbg !11419

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11420
  %call1 = call i32 @writer_print_string(%struct.WriterContext* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.509, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.510, i32 0, i32 0), i32 1), !dbg !11422
  br label %if.end, !dbg !11423

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11424
  %5 = load i8*, i8** %val, align 8, !dbg !11426
  %call2 = call i32 @writer_print_string(%struct.WriterContext* %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.509, i32 0, i32 0), i8* %5, i32 0), !dbg !11427
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11428
}

declare i8* @av_get_sample_fmt_name(i32) #2

declare void @av_bprint_channel_layout(%struct.AVBPrint*, i32, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @show_log(%struct.WriterContext* %w, i32 %section_ids, i32 %section_id, i32 %log_level) #0 !dbg !11429 {
entry:
  %retval = alloca i32, align 4
  %w.addr = alloca %struct.WriterContext*, align 8
  %section_ids.addr = alloca i32, align 4
  %section_id.addr = alloca i32, align 4
  %log_level.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !11432, metadata !2571), !dbg !11433
  store i32 %section_ids, i32* %section_ids.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %section_ids.addr, metadata !11434, metadata !2571), !dbg !11435
  store i32 %section_id, i32* %section_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %section_id.addr, metadata !11436, metadata !2571), !dbg !11437
  store i32 %log_level, i32* %log_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %log_level.addr, metadata !11438, metadata !2571), !dbg !11439
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11440, metadata !2571), !dbg !11441
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @log_mutex) #9, !dbg !11442
  %0 = load i32, i32* @log_buffer_size, align 4, !dbg !11443
  %tobool = icmp ne i32 %0, 0, !dbg !11443
  br i1 %tobool, label %if.end, label %if.then, !dbg !11445

if.then:                                          ; preds = %entry
  %call1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @log_mutex) #9, !dbg !11446
  store i32 0, i32* %retval, align 4, !dbg !11448
  br label %return, !dbg !11448

if.end:                                           ; preds = %entry
  %1 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11449
  %2 = load i32, i32* %section_ids.addr, align 4, !dbg !11450
  call void @writer_print_section_header(%struct.WriterContext* %1, i32 %2), !dbg !11451
  store i32 0, i32* %i, align 4, !dbg !11452
  br label %for.cond, !dbg !11454

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !11455
  %4 = load i32, i32* @log_buffer_size, align 4, !dbg !11458
  %cmp = icmp slt i32 %3, %4, !dbg !11459
  br i1 %cmp, label %for.body, label %for.end, !dbg !11460

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !11461
  %idxprom = sext i32 %5 to i64, !dbg !11464
  %6 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !11464
  %arrayidx = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %6, i64 %idxprom, !dbg !11464
  %log_level2 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx, i32 0, i32 1, !dbg !11465
  %7 = load i32, i32* %log_level2, align 8, !dbg !11465
  %8 = load i32, i32* %log_level.addr, align 4, !dbg !11466
  %cmp3 = icmp sle i32 %7, %8, !dbg !11467
  br i1 %cmp3, label %if.then4, label %if.end31, !dbg !11468

if.then4:                                         ; preds = %for.body
  %9 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11469
  %10 = load i32, i32* %section_id.addr, align 4, !dbg !11471
  call void @writer_print_section_header(%struct.WriterContext* %9, i32 %10), !dbg !11472
  %11 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11473
  %12 = load i32, i32* %i, align 4, !dbg !11474
  %idxprom5 = sext i32 %12 to i64, !dbg !11475
  %13 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !11475
  %arrayidx6 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %13, i64 %idxprom5, !dbg !11475
  %context_name = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx6, i32 0, i32 0, !dbg !11476
  %14 = load i8*, i8** %context_name, align 8, !dbg !11476
  %call7 = call i32 @writer_print_string(%struct.WriterContext* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.511, i32 0, i32 0), i8* %14, i32 0), !dbg !11477
  %15 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11478
  %16 = load i32, i32* %i, align 4, !dbg !11479
  %idxprom8 = sext i32 %16 to i64, !dbg !11480
  %17 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !11480
  %arrayidx9 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %17, i64 %idxprom8, !dbg !11480
  %log_level10 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx9, i32 0, i32 1, !dbg !11481
  %18 = load i32, i32* %log_level10, align 8, !dbg !11481
  %conv = sext i32 %18 to i64, !dbg !11480
  call void @writer_print_integer(%struct.WriterContext* %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.512, i32 0, i32 0), i64 %conv), !dbg !11482
  %19 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11483
  %20 = load i32, i32* %i, align 4, !dbg !11484
  %idxprom11 = sext i32 %20 to i64, !dbg !11485
  %21 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !11485
  %arrayidx12 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %21, i64 %idxprom11, !dbg !11485
  %category = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx12, i32 0, i32 3, !dbg !11486
  %22 = load i32, i32* %category, align 8, !dbg !11486
  %conv13 = zext i32 %22 to i64, !dbg !11485
  call void @writer_print_integer(%struct.WriterContext* %19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.513, i32 0, i32 0), i64 %conv13), !dbg !11487
  %23 = load i32, i32* %i, align 4, !dbg !11488
  %idxprom14 = sext i32 %23 to i64, !dbg !11490
  %24 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !11490
  %arrayidx15 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %24, i64 %idxprom14, !dbg !11490
  %parent_name = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx15, i32 0, i32 4, !dbg !11491
  %25 = load i8*, i8** %parent_name, align 8, !dbg !11491
  %tobool16 = icmp ne i8* %25, null, !dbg !11490
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !11492

if.then17:                                        ; preds = %if.then4
  %26 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11493
  %27 = load i32, i32* %i, align 4, !dbg !11495
  %idxprom18 = sext i32 %27 to i64, !dbg !11496
  %28 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !11496
  %arrayidx19 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %28, i64 %idxprom18, !dbg !11496
  %parent_name20 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx19, i32 0, i32 4, !dbg !11497
  %29 = load i8*, i8** %parent_name20, align 8, !dbg !11497
  %call21 = call i32 @writer_print_string(%struct.WriterContext* %26, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.514, i32 0, i32 0), i8* %29, i32 0), !dbg !11498
  %30 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11499
  %31 = load i32, i32* %i, align 4, !dbg !11500
  %idxprom22 = sext i32 %31 to i64, !dbg !11501
  %32 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !11501
  %arrayidx23 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %32, i64 %idxprom22, !dbg !11501
  %parent_category = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx23, i32 0, i32 5, !dbg !11502
  %33 = load i32, i32* %parent_category, align 8, !dbg !11502
  %conv24 = zext i32 %33 to i64, !dbg !11501
  call void @writer_print_integer(%struct.WriterContext* %30, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.515, i32 0, i32 0), i64 %conv24), !dbg !11503
  br label %if.end27, !dbg !11504

if.else:                                          ; preds = %if.then4
  %34 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11505
  %call25 = call i32 @writer_print_string(%struct.WriterContext* %34, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.514, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !11507
  %35 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11508
  %call26 = call i32 @writer_print_string(%struct.WriterContext* %35, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.515, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !11509
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then17
  %36 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11510
  %37 = load i32, i32* %i, align 4, !dbg !11511
  %idxprom28 = sext i32 %37 to i64, !dbg !11512
  %38 = load %struct.LogBuffer*, %struct.LogBuffer** @log_buffer, align 8, !dbg !11512
  %arrayidx29 = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %38, i64 %idxprom28, !dbg !11512
  %log_message = getelementptr inbounds %struct.LogBuffer, %struct.LogBuffer* %arrayidx29, i32 0, i32 2, !dbg !11513
  %39 = load i8*, i8** %log_message, align 8, !dbg !11513
  %call30 = call i32 @writer_print_string(%struct.WriterContext* %36, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.516, i32 0, i32 0), i8* %39, i32 0), !dbg !11514
  %40 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11515
  call void @writer_print_section_footer(%struct.WriterContext* %40), !dbg !11516
  br label %if.end31, !dbg !11517

if.end31:                                         ; preds = %if.end27, %for.body
  br label %for.inc, !dbg !11518

for.inc:                                          ; preds = %if.end31
  %41 = load i32, i32* %i, align 4, !dbg !11519
  %inc = add nsw i32 %41, 1, !dbg !11519
  store i32 %inc, i32* %i, align 4, !dbg !11519
  br label %for.cond, !dbg !11521, !llvm.loop !11522

for.end:                                          ; preds = %for.cond
  call void @clear_log(i32 0), !dbg !11524
  %call32 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @log_mutex) #9, !dbg !11525
  %42 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11526
  call void @writer_print_section_footer(%struct.WriterContext* %42), !dbg !11527
  store i32 0, i32* %retval, align 4, !dbg !11528
  br label %return, !dbg !11528

return:                                           ; preds = %for.end, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !11529
  ret i32 %43, !dbg !11529
}

declare i8* @av_frame_side_data_name(i32) #2

declare i8* @av_timecode_make_mpeg_tc_string(i8*, i32) #2

declare i8* @av_color_range_name(i32) #2

declare i8* @av_color_space_name(i32) #2

declare i8* @av_color_primaries_name(i32) #2

declare i8* @av_color_transfer_name(i32) #2

declare i8* @av_chroma_location_name(i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @show_program(%struct.WriterContext* %w, %struct.InputFile* %ifile, %struct.AVProgram* %program) #0 !dbg !11530 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %ifile.addr = alloca %struct.InputFile*, align 8
  %program.addr = alloca %struct.AVProgram*, align 8
  %fmt_ctx = alloca %struct.AVFormatContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  %.compoundliteral8 = alloca %struct.AVRational, align 4
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !11533, metadata !2571), !dbg !11534
  store %struct.InputFile* %ifile, %struct.InputFile** %ifile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr, metadata !11535, metadata !2571), !dbg !11536
  store %struct.AVProgram* %program, %struct.AVProgram** %program.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVProgram** %program.addr, metadata !11537, metadata !2571), !dbg !11538
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx, metadata !11539, metadata !2571), !dbg !11540
  %0 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !11541
  %fmt_ctx1 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %0, i32 0, i32 0, !dbg !11542
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx1, align 8, !dbg !11542
  store %struct.AVFormatContext* %1, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !11540
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11543, metadata !2571), !dbg !11544
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11545, metadata !2571), !dbg !11546
  store i32 0, i32* %ret, align 4, !dbg !11546
  %2 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11547
  call void @writer_print_section_header(%struct.WriterContext* %2, i32 28), !dbg !11548
  %3 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11549
  %4 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11550
  %id = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %4, i32 0, i32 0, !dbg !11551
  %5 = load i32, i32* %id, align 8, !dbg !11551
  %conv = sext i32 %5 to i64, !dbg !11550
  call void @writer_print_integer(%struct.WriterContext* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.517, i32 0, i32 0), i64 %conv), !dbg !11552
  %6 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11553
  %7 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11554
  %program_num = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %7, i32 0, i32 6, !dbg !11555
  %8 = load i32, i32* %program_num, align 8, !dbg !11555
  %conv2 = sext i32 %8 to i64, !dbg !11554
  call void @writer_print_integer(%struct.WriterContext* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.518, i32 0, i32 0), i64 %conv2), !dbg !11556
  %9 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11557
  %10 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11558
  %nb_stream_indexes = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %10, i32 0, i32 4, !dbg !11559
  %11 = load i32, i32* %nb_stream_indexes, align 8, !dbg !11559
  %conv3 = zext i32 %11 to i64, !dbg !11558
  call void @writer_print_integer(%struct.WriterContext* %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.519, i32 0, i32 0), i64 %conv3), !dbg !11560
  %12 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11561
  %13 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11562
  %pmt_pid = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %13, i32 0, i32 7, !dbg !11563
  %14 = load i32, i32* %pmt_pid, align 4, !dbg !11563
  %conv4 = sext i32 %14 to i64, !dbg !11562
  call void @writer_print_integer(%struct.WriterContext* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.520, i32 0, i32 0), i64 %conv4), !dbg !11564
  %15 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11565
  %16 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11566
  %pcr_pid = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %16, i32 0, i32 8, !dbg !11567
  %17 = load i32, i32* %pcr_pid, align 8, !dbg !11567
  %conv5 = sext i32 %17 to i64, !dbg !11566
  call void @writer_print_integer(%struct.WriterContext* %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.521, i32 0, i32 0), i64 %conv5), !dbg !11568
  %18 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11569
  %19 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11570
  %start_time = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %19, i32 0, i32 10, !dbg !11571
  %20 = load i64, i64* %start_time, align 8, !dbg !11571
  call void @writer_print_ts(%struct.WriterContext* %18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.522, i32 0, i32 0), i64 %20, i32 0), !dbg !11572
  %21 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11573
  %22 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11574
  %start_time6 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %22, i32 0, i32 10, !dbg !11575
  %23 = load i64, i64* %start_time6, align 8, !dbg !11575
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !11576
  store i32 1, i32* %num, align 4, !dbg !11576
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !11576
  store i32 1000000, i32* %den, align 4, !dbg !11576
  call void @writer_print_time(%struct.WriterContext* %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.523, i32 0, i32 0), i64 %23, %struct.AVRational* %.compoundliteral, i32 0), !dbg !11577
  %24 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11578
  %25 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11579
  %end_time = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %25, i32 0, i32 11, !dbg !11580
  %26 = load i64, i64* %end_time, align 8, !dbg !11580
  call void @writer_print_ts(%struct.WriterContext* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.524, i32 0, i32 0), i64 %26, i32 0), !dbg !11581
  %27 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11582
  %28 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11583
  %end_time7 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %28, i32 0, i32 11, !dbg !11584
  %29 = load i64, i64* %end_time7, align 8, !dbg !11584
  %num9 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral8, i32 0, i32 0, !dbg !11585
  store i32 1, i32* %num9, align 4, !dbg !11585
  %den10 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral8, i32 0, i32 1, !dbg !11585
  store i32 1000000, i32* %den10, align 4, !dbg !11585
  call void @writer_print_time(%struct.WriterContext* %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.525, i32 0, i32 0), i64 %29, %struct.AVRational* %.compoundliteral8, i32 0), !dbg !11586
  %30 = load i32, i32* @do_show_program_tags, align 4, !dbg !11587
  %tobool = icmp ne i32 %30, 0, !dbg !11587
  br i1 %tobool, label %if.then, label %if.end, !dbg !11589

if.then:                                          ; preds = %entry
  %31 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11590
  %32 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11591
  %metadata = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %32, i32 0, i32 5, !dbg !11592
  %33 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !11592
  %call = call i32 @show_tags(%struct.WriterContext* %31, %struct.AVDictionary* %33, i32 31), !dbg !11593
  store i32 %call, i32* %ret, align 4, !dbg !11594
  br label %if.end, !dbg !11595

if.end:                                           ; preds = %if.then, %entry
  %34 = load i32, i32* %ret, align 4, !dbg !11596
  %cmp = icmp slt i32 %34, 0, !dbg !11598
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !11599

if.then12:                                        ; preds = %if.end
  br label %end, !dbg !11600

if.end13:                                         ; preds = %if.end
  %35 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11601
  call void @writer_print_section_header(%struct.WriterContext* %35, i32 29), !dbg !11602
  store i32 0, i32* %i, align 4, !dbg !11603
  br label %for.cond, !dbg !11605

for.cond:                                         ; preds = %for.inc, %if.end13
  %36 = load i32, i32* %i, align 4, !dbg !11606
  %37 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11609
  %nb_stream_indexes14 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %37, i32 0, i32 4, !dbg !11610
  %38 = load i32, i32* %nb_stream_indexes14, align 8, !dbg !11610
  %cmp15 = icmp ult i32 %36, %38, !dbg !11611
  br i1 %cmp15, label %for.body, label %for.end, !dbg !11612

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %i, align 4, !dbg !11613
  %idxprom = sext i32 %39 to i64, !dbg !11616
  %40 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11616
  %stream_index = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %40, i32 0, i32 3, !dbg !11617
  %41 = load i32*, i32** %stream_index, align 8, !dbg !11617
  %arrayidx = getelementptr inbounds i32, i32* %41, i64 %idxprom, !dbg !11616
  %42 = load i32, i32* %arrayidx, align 4, !dbg !11616
  %idxprom17 = zext i32 %42 to i64, !dbg !11618
  %43 = load i32*, i32** @selected_streams, align 8, !dbg !11618
  %arrayidx18 = getelementptr inbounds i32, i32* %43, i64 %idxprom17, !dbg !11618
  %44 = load i32, i32* %arrayidx18, align 4, !dbg !11618
  %tobool19 = icmp ne i32 %44, 0, !dbg !11618
  br i1 %tobool19, label %if.then20, label %if.end34, !dbg !11619

if.then20:                                        ; preds = %for.body
  %45 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11620
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx, align 8, !dbg !11622
  %47 = load i32, i32* %i, align 4, !dbg !11623
  %idxprom21 = sext i32 %47 to i64, !dbg !11624
  %48 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11624
  %stream_index22 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %48, i32 0, i32 3, !dbg !11625
  %49 = load i32*, i32** %stream_index22, align 8, !dbg !11625
  %arrayidx23 = getelementptr inbounds i32, i32* %49, i64 %idxprom21, !dbg !11624
  %50 = load i32, i32* %arrayidx23, align 4, !dbg !11624
  %51 = load i32, i32* %i, align 4, !dbg !11626
  %idxprom24 = sext i32 %51 to i64, !dbg !11627
  %52 = load %struct.AVProgram*, %struct.AVProgram** %program.addr, align 8, !dbg !11627
  %stream_index25 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %52, i32 0, i32 3, !dbg !11628
  %53 = load i32*, i32** %stream_index25, align 8, !dbg !11628
  %arrayidx26 = getelementptr inbounds i32, i32* %53, i64 %idxprom24, !dbg !11627
  %54 = load i32, i32* %arrayidx26, align 4, !dbg !11627
  %idxprom27 = zext i32 %54 to i64, !dbg !11629
  %55 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !11629
  %streams = getelementptr inbounds %struct.InputFile, %struct.InputFile* %55, i32 0, i32 1, !dbg !11630
  %56 = load %struct.InputStream*, %struct.InputStream** %streams, align 8, !dbg !11630
  %arrayidx28 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %56, i64 %idxprom27, !dbg !11629
  %call29 = call i32 @show_stream(%struct.WriterContext* %45, %struct.AVFormatContext* %46, i32 %50, %struct.InputStream* %arrayidx28, i32 1), !dbg !11631
  store i32 %call29, i32* %ret, align 4, !dbg !11632
  %57 = load i32, i32* %ret, align 4, !dbg !11633
  %cmp30 = icmp slt i32 %57, 0, !dbg !11635
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !11636

if.then32:                                        ; preds = %if.then20
  br label %for.end, !dbg !11637

if.end33:                                         ; preds = %if.then20
  br label %if.end34, !dbg !11638

if.end34:                                         ; preds = %if.end33, %for.body
  br label %for.inc, !dbg !11639

for.inc:                                          ; preds = %if.end34
  %58 = load i32, i32* %i, align 4, !dbg !11640
  %inc = add nsw i32 %58, 1, !dbg !11640
  store i32 %inc, i32* %i, align 4, !dbg !11640
  br label %for.cond, !dbg !11642, !llvm.loop !11643

for.end:                                          ; preds = %if.then32, %for.cond
  %59 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11645
  call void @writer_print_section_footer(%struct.WriterContext* %59), !dbg !11646
  br label %end, !dbg !11646

end:                                              ; preds = %for.end, %if.then12
  %60 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11647
  call void @writer_print_section_footer(%struct.WriterContext* %60), !dbg !11648
  %61 = load i32, i32* %ret, align 4, !dbg !11649
  ret i32 %61, !dbg !11650
}

; Function Attrs: nounwind uwtable
define internal i32 @show_stream(%struct.WriterContext* %w, %struct.AVFormatContext* %fmt_ctx, i32 %stream_idx, %struct.InputStream* %ist, i32 %in_program) #0 !dbg !11651 {
entry:
  %w.addr = alloca %struct.WriterContext*, align 8
  %fmt_ctx.addr = alloca %struct.AVFormatContext*, align 8
  %stream_idx.addr = alloca i32, align 4
  %ist.addr = alloca %struct.InputStream*, align 8
  %in_program.addr = alloca i32, align 4
  %stream = alloca %struct.AVStream*, align 8
  %par = alloca %struct.AVCodecParameters*, align 8
  %dec_ctx = alloca %struct.AVCodecContext*, align 8
  %val_str = alloca [128 x i8], align 16
  %s = alloca i8*, align 8
  %sar = alloca %struct.AVRational, align 4
  %dar = alloca %struct.AVRational, align 4
  %pbuf = alloca %struct.AVBPrint, align 8
  %cd = alloca %struct.AVCodecDescriptor*, align 8
  %ret = alloca i32, align 4
  %profile = alloca i8*, align 8
  %profile_num = alloca [12 x i8], align 1
  %.compoundliteral = alloca [32 x i8], align 1
  %coerce = alloca %struct.AVRational, align 4
  %tcbuf = alloca [23 x i8], align 16
  %uv = alloca %struct.unit_value, align 8
  %opt = alloca %struct.AVOption*, align 8
  %str192 = alloca i8*, align 8
  %uv225 = alloca %struct.unit_value, align 8
  %uv242 = alloca %struct.unit_value, align 8
  store %struct.WriterContext* %w, %struct.WriterContext** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WriterContext** %w.addr, metadata !11654, metadata !2571), !dbg !11655
  store %struct.AVFormatContext* %fmt_ctx, %struct.AVFormatContext** %fmt_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %fmt_ctx.addr, metadata !11656, metadata !2571), !dbg !11657
  store i32 %stream_idx, i32* %stream_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stream_idx.addr, metadata !11658, metadata !2571), !dbg !11659
  store %struct.InputStream* %ist, %struct.InputStream** %ist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.InputStream** %ist.addr, metadata !11660, metadata !2571), !dbg !11661
  store i32 %in_program, i32* %in_program.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_program.addr, metadata !11662, metadata !2571), !dbg !11663
  call void @llvm.dbg.declare(metadata %struct.AVStream** %stream, metadata !11664, metadata !2571), !dbg !11665
  %0 = load %struct.InputStream*, %struct.InputStream** %ist.addr, align 8, !dbg !11666
  %st = getelementptr inbounds %struct.InputStream, %struct.InputStream* %0, i32 0, i32 0, !dbg !11667
  %1 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11667
  store %struct.AVStream* %1, %struct.AVStream** %stream, align 8, !dbg !11665
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par, metadata !11668, metadata !2571), !dbg !11669
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %dec_ctx, metadata !11670, metadata !2571), !dbg !11671
  call void @llvm.dbg.declare(metadata [128 x i8]* %val_str, metadata !11672, metadata !2571), !dbg !11673
  call void @llvm.dbg.declare(metadata i8** %s, metadata !11674, metadata !2571), !dbg !11675
  call void @llvm.dbg.declare(metadata %struct.AVRational* %sar, metadata !11676, metadata !2571), !dbg !11677
  call void @llvm.dbg.declare(metadata %struct.AVRational* %dar, metadata !11678, metadata !2571), !dbg !11679
  call void @llvm.dbg.declare(metadata %struct.AVBPrint* %pbuf, metadata !11680, metadata !2571), !dbg !11681
  call void @llvm.dbg.declare(metadata %struct.AVCodecDescriptor** %cd, metadata !11682, metadata !2571), !dbg !11683
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11684, metadata !2571), !dbg !11685
  store i32 0, i32* %ret, align 4, !dbg !11685
  call void @llvm.dbg.declare(metadata i8** %profile, metadata !11686, metadata !2571), !dbg !11687
  store i8* null, i8** %profile, align 8, !dbg !11687
  call void @av_bprint_init(%struct.AVBPrint* %pbuf, i32 1, i32 -1), !dbg !11688
  %2 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11689
  %3 = load i32, i32* %in_program.addr, align 4, !dbg !11690
  %tobool = icmp ne i32 %3, 0, !dbg !11690
  %cond = select i1 %tobool, i32 30, i32 35, !dbg !11690
  call void @writer_print_section_header(%struct.WriterContext* %2, i32 %cond), !dbg !11691
  %4 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11692
  %5 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !11693
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %5, i32 0, i32 0, !dbg !11694
  %6 = load i32, i32* %index, align 8, !dbg !11694
  %conv = sext i32 %6 to i64, !dbg !11693
  call void @writer_print_integer(%struct.WriterContext* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.395, i32 0, i32 0), i64 %conv), !dbg !11695
  %7 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !11696
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 19, !dbg !11697
  %8 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !11697
  store %struct.AVCodecParameters* %8, %struct.AVCodecParameters** %par, align 8, !dbg !11698
  %9 = load %struct.InputStream*, %struct.InputStream** %ist.addr, align 8, !dbg !11699
  %dec_ctx1 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %9, i32 0, i32 1, !dbg !11700
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx1, align 8, !dbg !11700
  store %struct.AVCodecContext* %10, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !11701
  %11 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11702
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %11, i32 0, i32 1, !dbg !11704
  %12 = load i32, i32* %codec_id, align 4, !dbg !11704
  %call = call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %12), !dbg !11705
  store %struct.AVCodecDescriptor* %call, %struct.AVCodecDescriptor** %cd, align 8, !dbg !11706
  %tobool2 = icmp ne %struct.AVCodecDescriptor* %call, null, !dbg !11706
  br i1 %tobool2, label %if.then, label %if.else, !dbg !11707

if.then:                                          ; preds = %entry
  %13 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11708
  %14 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %cd, align 8, !dbg !11710
  %name = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %14, i32 0, i32 2, !dbg !11711
  %15 = load i8*, i8** %name, align 8, !dbg !11711
  %call3 = call i32 @writer_print_string(%struct.WriterContext* %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.526, i32 0, i32 0), i8* %15, i32 0), !dbg !11712
  %16 = load i32, i32* @do_bitexact, align 4, !dbg !11713
  %tobool4 = icmp ne i32 %16, 0, !dbg !11713
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !11715

if.then5:                                         ; preds = %if.then
  %17 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11716
  %18 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %cd, align 8, !dbg !11718
  %long_name = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %18, i32 0, i32 3, !dbg !11719
  %19 = load i8*, i8** %long_name, align 8, !dbg !11719
  %tobool6 = icmp ne i8* %19, null, !dbg !11718
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !11718

cond.true:                                        ; preds = %if.then5
  %20 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %cd, align 8, !dbg !11720
  %long_name7 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %20, i32 0, i32 3, !dbg !11722
  %21 = load i8*, i8** %long_name7, align 8, !dbg !11722
  br label %cond.end, !dbg !11723

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !11724

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond8 = phi i8* [ %21, %cond.true ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), %cond.false ], !dbg !11726
  %call9 = call i32 @writer_print_string(%struct.WriterContext* %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.527, i32 0, i32 0), i8* %cond8, i32 0), !dbg !11728
  br label %if.end, !dbg !11729

if.end:                                           ; preds = %cond.end, %if.then
  br label %if.end15, !dbg !11730

if.else:                                          ; preds = %entry
  %22 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11731
  %call10 = call i32 @writer_print_string(%struct.WriterContext* %22, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.526, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11733
  %23 = load i32, i32* @do_bitexact, align 4, !dbg !11734
  %tobool11 = icmp ne i32 %23, 0, !dbg !11734
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !11736

if.then12:                                        ; preds = %if.else
  %24 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11737
  %call13 = call i32 @writer_print_string(%struct.WriterContext* %24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.527, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11739
  br label %if.end14, !dbg !11740

if.end14:                                         ; preds = %if.then12, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end
  %25 = load i32, i32* @do_bitexact, align 4, !dbg !11741
  %tobool16 = icmp ne i32 %25, 0, !dbg !11741
  br i1 %tobool16, label %if.else23, label %land.lhs.true, !dbg !11743

land.lhs.true:                                    ; preds = %if.end15
  %26 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11744
  %codec_id17 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %26, i32 0, i32 1, !dbg !11746
  %27 = load i32, i32* %codec_id17, align 4, !dbg !11746
  %28 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11747
  %profile18 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %28, i32 0, i32 9, !dbg !11748
  %29 = load i32, i32* %profile18, align 8, !dbg !11748
  %call19 = call i8* @avcodec_profile_name(i32 %27, i32 %29), !dbg !11749
  store i8* %call19, i8** %profile, align 8, !dbg !11750
  %tobool20 = icmp ne i8* %call19, null, !dbg !11750
  br i1 %tobool20, label %if.then21, label %if.else23, !dbg !11751

if.then21:                                        ; preds = %land.lhs.true
  %30 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11752
  %31 = load i8*, i8** %profile, align 8, !dbg !11753
  %call22 = call i32 @writer_print_string(%struct.WriterContext* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.528, i32 0, i32 0), i8* %31, i32 0), !dbg !11754
  br label %if.end34, !dbg !11754

if.else23:                                        ; preds = %land.lhs.true, %if.end15
  %32 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11755
  %profile24 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %32, i32 0, i32 9, !dbg !11758
  %33 = load i32, i32* %profile24, align 8, !dbg !11758
  %cmp = icmp ne i32 %33, -99, !dbg !11759
  br i1 %cmp, label %if.then26, label %if.else31, !dbg !11760

if.then26:                                        ; preds = %if.else23
  call void @llvm.dbg.declare(metadata [12 x i8]* %profile_num, metadata !11761, metadata !2571), !dbg !11766
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %profile_num, i32 0, i32 0, !dbg !11767
  %34 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11768
  %profile27 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %34, i32 0, i32 9, !dbg !11769
  %35 = load i32, i32* %profile27, align 8, !dbg !11769
  %call28 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.529, i32 0, i32 0), i32 %35) #9, !dbg !11770
  %36 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11771
  %arraydecay29 = getelementptr inbounds [12 x i8], [12 x i8]* %profile_num, i32 0, i32 0, !dbg !11772
  %call30 = call i32 @writer_print_string(%struct.WriterContext* %36, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.528, i32 0, i32 0), i8* %arraydecay29, i32 0), !dbg !11773
  br label %if.end33, !dbg !11774

if.else31:                                        ; preds = %if.else23
  %37 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11775
  %call32 = call i32 @writer_print_string(%struct.WriterContext* %37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.528, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11776
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then26
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then21
  %38 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11777
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %38, i32 0, i32 0, !dbg !11778
  %39 = load i32, i32* %codec_type, align 8, !dbg !11778
  %call35 = call i8* @av_get_media_type_string(i32 %39), !dbg !11779
  store i8* %call35, i8** %s, align 8, !dbg !11780
  %40 = load i8*, i8** %s, align 8, !dbg !11781
  %tobool36 = icmp ne i8* %40, null, !dbg !11781
  br i1 %tobool36, label %if.then37, label %if.else39, !dbg !11783

if.then37:                                        ; preds = %if.end34
  %41 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11784
  %42 = load i8*, i8** %s, align 8, !dbg !11786
  %call38 = call i32 @writer_print_string(%struct.WriterContext* %41, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.410, i32 0, i32 0), i8* %42, i32 0), !dbg !11787
  br label %if.end41, !dbg !11787

if.else39:                                        ; preds = %if.end34
  %43 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11788
  %call40 = call i32 @writer_print_string(%struct.WriterContext* %43, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.410, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11789
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.then37
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !11790
  %tobool42 = icmp ne %struct.AVCodecContext* %44, null, !dbg !11790
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !11792

if.then43:                                        ; preds = %if.end41
  %45 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11793
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !11794
  %time_base = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %46, i32 0, i32 17, !dbg !11795
  %47 = bitcast %struct.AVRational* %time_base to i64*, !dbg !11796
  %48 = load i64, i64* %47, align 4, !dbg !11796
  call void @writer_print_rational(%struct.WriterContext* %45, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.530, i32 0, i32 0), i64 %48, i8 signext 47), !dbg !11796
  br label %if.end44, !dbg !11796

if.end44:                                         ; preds = %if.then43, %if.end41
  %49 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11797
  %50 = bitcast [32 x i8]* %.compoundliteral to i8*, !dbg !11798
  call void @llvm.memset.p0i8.i64(i8* %50, i8 0, i64 32, i32 1, i1 false), !dbg !11798
  %arrayinit.begin = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral, i64 0, i64 0, !dbg !11799
  store i8 0, i8* %arrayinit.begin, align 1, !dbg !11799
  %arraydecay45 = getelementptr inbounds [32 x i8], [32 x i8]* %.compoundliteral, i32 0, i32 0, !dbg !11798
  %51 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11800
  %codec_tag = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %51, i32 0, i32 2, !dbg !11801
  %52 = load i32, i32* %codec_tag, align 8, !dbg !11801
  %call46 = call i8* @av_fourcc_make_string(i8* %arraydecay45, i32 %52), !dbg !11802
  %call47 = call i32 @writer_print_string(%struct.WriterContext* %49, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.531, i32 0, i32 0), i8* %call46, i32 0), !dbg !11804
  br label %do.body, !dbg !11806, !llvm.loop !11807

do.body:                                          ; preds = %if.end44
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !11808
  %53 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11811
  %codec_tag48 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %53, i32 0, i32 2, !dbg !11812
  %54 = load i32, i32* %codec_tag48, align 8, !dbg !11812
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %pbuf, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.532, i32 0, i32 0), i32 %54), !dbg !11813
  %55 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11815
  %str = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !11816
  %56 = load i8*, i8** %str, align 8, !dbg !11816
  %call49 = call i32 @writer_print_string(%struct.WriterContext* %55, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.533, i32 0, i32 0), i8* %56, i32 0), !dbg !11817
  br label %do.end, !dbg !11819

do.end:                                           ; preds = %do.body
  %57 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11820
  %codec_type50 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %57, i32 0, i32 0, !dbg !11821
  %58 = load i32, i32* %codec_type50, align 8, !dbg !11821
  switch i32 %58, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb136
    i32 3, label %sw.bb164
  ], !dbg !11822

sw.bb:                                            ; preds = %do.end
  %59 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11823
  %60 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11825
  %width = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %60, i32 0, i32 11, !dbg !11826
  %61 = load i32, i32* %width, align 8, !dbg !11826
  %conv51 = sext i32 %61 to i64, !dbg !11825
  call void @writer_print_integer(%struct.WriterContext* %59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.490, i32 0, i32 0), i64 %conv51), !dbg !11827
  %62 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11828
  %63 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11829
  %height = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %63, i32 0, i32 12, !dbg !11830
  %64 = load i32, i32* %height, align 4, !dbg !11830
  %conv52 = sext i32 %64 to i64, !dbg !11829
  call void @writer_print_integer(%struct.WriterContext* %62, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.491, i32 0, i32 0), i64 %conv52), !dbg !11831
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !11832
  %tobool53 = icmp ne %struct.AVCodecContext* %65, null, !dbg !11832
  br i1 %tobool53, label %if.then54, label %if.end57, !dbg !11834

if.then54:                                        ; preds = %sw.bb
  %66 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11835
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !11837
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %67, i32 0, i32 22, !dbg !11838
  %68 = load i32, i32* %coded_width, align 4, !dbg !11838
  %conv55 = sext i32 %68 to i64, !dbg !11837
  call void @writer_print_integer(%struct.WriterContext* %66, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.534, i32 0, i32 0), i64 %conv55), !dbg !11839
  %69 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11840
  %70 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !11841
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %70, i32 0, i32 23, !dbg !11842
  %71 = load i32, i32* %coded_height, align 8, !dbg !11842
  %conv56 = sext i32 %71 to i64, !dbg !11841
  call void @writer_print_integer(%struct.WriterContext* %69, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.535, i32 0, i32 0), i64 %conv56), !dbg !11843
  br label %if.end57, !dbg !11844

if.end57:                                         ; preds = %if.then54, %sw.bb
  %72 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11845
  %73 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11846
  %video_delay = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %73, i32 0, i32 20, !dbg !11847
  %74 = load i32, i32* %video_delay, align 8, !dbg !11847
  %conv58 = sext i32 %74 to i64, !dbg !11846
  call void @writer_print_integer(%struct.WriterContext* %72, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.536, i32 0, i32 0), i64 %conv58), !dbg !11848
  %75 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx.addr, align 8, !dbg !11849
  %76 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !11850
  %call59 = call i64 @av_guess_sample_aspect_ratio(%struct.AVFormatContext* %75, %struct.AVStream* %76, %struct.AVFrame* null), !dbg !11851
  %77 = bitcast %struct.AVRational* %coerce to i64*, !dbg !11851
  store i64 %call59, i64* %77, align 4, !dbg !11851
  %78 = bitcast %struct.AVRational* %sar to i8*, !dbg !11851
  %79 = bitcast %struct.AVRational* %coerce to i8*, !dbg !11851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 4, i1 false), !dbg !11852
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sar, i32 0, i32 0, !dbg !11854
  %80 = load i32, i32* %num, align 4, !dbg !11854
  %tobool60 = icmp ne i32 %80, 0, !dbg !11856
  br i1 %tobool60, label %if.then61, label %if.else71, !dbg !11857

if.then61:                                        ; preds = %if.end57
  %81 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11858
  %82 = bitcast %struct.AVRational* %sar to i64*, !dbg !11860
  %83 = load i64, i64* %82, align 4, !dbg !11860
  call void @writer_print_rational(%struct.WriterContext* %81, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.493, i32 0, i32 0), i64 %83, i8 signext 58), !dbg !11860
  %num62 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %dar, i32 0, i32 0, !dbg !11861
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %dar, i32 0, i32 1, !dbg !11862
  %84 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11863
  %width63 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %84, i32 0, i32 11, !dbg !11864
  %85 = load i32, i32* %width63, align 8, !dbg !11864
  %num64 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sar, i32 0, i32 0, !dbg !11865
  %86 = load i32, i32* %num64, align 4, !dbg !11865
  %mul = mul nsw i32 %85, %86, !dbg !11866
  %conv65 = sext i32 %mul to i64, !dbg !11863
  %87 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11867
  %height66 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %87, i32 0, i32 12, !dbg !11868
  %88 = load i32, i32* %height66, align 4, !dbg !11868
  %den67 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sar, i32 0, i32 1, !dbg !11869
  %89 = load i32, i32* %den67, align 4, !dbg !11869
  %mul68 = mul nsw i32 %88, %89, !dbg !11870
  %conv69 = sext i32 %mul68 to i64, !dbg !11867
  %call70 = call i32 @av_reduce(i32* %num62, i32* %den, i64 %conv65, i64 %conv69, i64 1048576), !dbg !11871
  %90 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11872
  %91 = bitcast %struct.AVRational* %dar to i64*, !dbg !11873
  %92 = load i64, i64* %91, align 4, !dbg !11873
  call void @writer_print_rational(%struct.WriterContext* %90, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.537, i32 0, i32 0), i64 %92, i8 signext 58), !dbg !11873
  br label %if.end74, !dbg !11874

if.else71:                                        ; preds = %if.end57
  %93 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11875
  %call72 = call i32 @writer_print_string(%struct.WriterContext* %93, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.493, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !11877
  %94 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11878
  %call73 = call i32 @writer_print_string(%struct.WriterContext* %94, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.537, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !11879
  br label %if.end74

if.end74:                                         ; preds = %if.else71, %if.then61
  %95 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11880
  %format = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %95, i32 0, i32 5, !dbg !11881
  %96 = load i32, i32* %format, align 4, !dbg !11881
  %call75 = call i8* @av_get_pix_fmt_name(i32 %96), !dbg !11882
  store i8* %call75, i8** %s, align 8, !dbg !11883
  %97 = load i8*, i8** %s, align 8, !dbg !11884
  %tobool76 = icmp ne i8* %97, null, !dbg !11884
  br i1 %tobool76, label %if.then77, label %if.else79, !dbg !11886

if.then77:                                        ; preds = %if.end74
  %98 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11887
  %99 = load i8*, i8** %s, align 8, !dbg !11889
  %call78 = call i32 @writer_print_string(%struct.WriterContext* %98, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.492, i32 0, i32 0), i8* %99, i32 0), !dbg !11890
  br label %if.end81, !dbg !11890

if.else79:                                        ; preds = %if.end74
  %100 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11891
  %call80 = call i32 @writer_print_string(%struct.WriterContext* %100, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.492, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11892
  br label %if.end81

if.end81:                                         ; preds = %if.else79, %if.then77
  %101 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11893
  %102 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11894
  %level = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %102, i32 0, i32 10, !dbg !11895
  %103 = load i32, i32* %level, align 4, !dbg !11895
  %conv82 = sext i32 %103 to i64, !dbg !11894
  call void @writer_print_integer(%struct.WriterContext* %101, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.512, i32 0, i32 0), i64 %conv82), !dbg !11896
  %104 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11897
  %105 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11898
  %color_range = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %105, i32 0, i32 15, !dbg !11899
  %106 = load i32, i32* %color_range, align 4, !dbg !11899
  call void @print_color_range(%struct.WriterContext* %104, i32 %106), !dbg !11900
  %107 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11901
  %108 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11902
  %color_space = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %108, i32 0, i32 18, !dbg !11903
  %109 = load i32, i32* %color_space, align 8, !dbg !11903
  call void @print_color_space(%struct.WriterContext* %107, i32 %109), !dbg !11904
  %110 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11905
  %111 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11906
  %color_trc = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %111, i32 0, i32 17, !dbg !11907
  %112 = load i32, i32* %color_trc, align 4, !dbg !11907
  call void @print_color_trc(%struct.WriterContext* %110, i32 %112), !dbg !11908
  %113 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11909
  %114 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11910
  %color_primaries = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %114, i32 0, i32 16, !dbg !11911
  %115 = load i32, i32* %color_primaries, align 8, !dbg !11911
  call void @print_primaries(%struct.WriterContext* %113, i32 %115), !dbg !11912
  %116 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11913
  %117 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11914
  %chroma_location = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %117, i32 0, i32 19, !dbg !11915
  %118 = load i32, i32* %chroma_location, align 4, !dbg !11915
  call void @print_chroma_location(%struct.WriterContext* %116, i32 %118), !dbg !11916
  %119 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11917
  %field_order = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %119, i32 0, i32 14, !dbg !11919
  %120 = load i32, i32* %field_order, align 8, !dbg !11919
  %cmp83 = icmp eq i32 %120, 1, !dbg !11920
  br i1 %cmp83, label %if.then85, label %if.else87, !dbg !11921

if.then85:                                        ; preds = %if.end81
  %121 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11922
  %call86 = call i32 @writer_print_string(%struct.WriterContext* %121, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.539, i32 0, i32 0), i32 0), !dbg !11923
  br label %if.end117, !dbg !11923

if.else87:                                        ; preds = %if.end81
  %122 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11924
  %field_order88 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %122, i32 0, i32 14, !dbg !11926
  %123 = load i32, i32* %field_order88, align 8, !dbg !11926
  %cmp89 = icmp eq i32 %123, 2, !dbg !11927
  br i1 %cmp89, label %if.then91, label %if.else93, !dbg !11928

if.then91:                                        ; preds = %if.else87
  %124 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11929
  %call92 = call i32 @writer_print_string(%struct.WriterContext* %124, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.540, i32 0, i32 0), i32 0), !dbg !11930
  br label %if.end116, !dbg !11930

if.else93:                                        ; preds = %if.else87
  %125 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11931
  %field_order94 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %125, i32 0, i32 14, !dbg !11933
  %126 = load i32, i32* %field_order94, align 8, !dbg !11933
  %cmp95 = icmp eq i32 %126, 3, !dbg !11934
  br i1 %cmp95, label %if.then97, label %if.else99, !dbg !11935

if.then97:                                        ; preds = %if.else93
  %127 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11936
  %call98 = call i32 @writer_print_string(%struct.WriterContext* %127, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.541, i32 0, i32 0), i32 0), !dbg !11937
  br label %if.end115, !dbg !11937

if.else99:                                        ; preds = %if.else93
  %128 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11938
  %field_order100 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %128, i32 0, i32 14, !dbg !11940
  %129 = load i32, i32* %field_order100, align 8, !dbg !11940
  %cmp101 = icmp eq i32 %129, 4, !dbg !11941
  br i1 %cmp101, label %if.then103, label %if.else105, !dbg !11942

if.then103:                                       ; preds = %if.else99
  %130 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11943
  %call104 = call i32 @writer_print_string(%struct.WriterContext* %130, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.542, i32 0, i32 0), i32 0), !dbg !11944
  br label %if.end114, !dbg !11944

if.else105:                                       ; preds = %if.else99
  %131 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11945
  %field_order106 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %131, i32 0, i32 14, !dbg !11947
  %132 = load i32, i32* %field_order106, align 8, !dbg !11947
  %cmp107 = icmp eq i32 %132, 5, !dbg !11948
  br i1 %cmp107, label %if.then109, label %if.else111, !dbg !11949

if.then109:                                       ; preds = %if.else105
  %133 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11950
  %call110 = call i32 @writer_print_string(%struct.WriterContext* %133, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.543, i32 0, i32 0), i32 0), !dbg !11951
  br label %if.end113, !dbg !11951

if.else111:                                       ; preds = %if.else105
  %134 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11952
  %call112 = call i32 @writer_print_string(%struct.WriterContext* %134, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11953
  br label %if.end113

if.end113:                                        ; preds = %if.else111, %if.then109
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.then103
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then97
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then91
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.then85
  %135 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !11954
  %tobool118 = icmp ne %struct.AVCodecContext* %135, null, !dbg !11954
  br i1 %tobool118, label %land.lhs.true119, label %if.else129, !dbg !11956

land.lhs.true119:                                 ; preds = %if.end117
  %136 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !11957
  %timecode_frame_start = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %136, i32 0, i32 117, !dbg !11959
  %137 = load i64, i64* %timecode_frame_start, align 8, !dbg !11959
  %cmp120 = icmp sge i64 %137, 0, !dbg !11960
  br i1 %cmp120, label %if.then122, label %if.else129, !dbg !11961

if.then122:                                       ; preds = %land.lhs.true119
  call void @llvm.dbg.declare(metadata [23 x i8]* %tcbuf, metadata !11962, metadata !2571), !dbg !11964
  %arraydecay123 = getelementptr inbounds [23 x i8], [23 x i8]* %tcbuf, i32 0, i32 0, !dbg !11965
  %138 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !11966
  %timecode_frame_start124 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %138, i32 0, i32 117, !dbg !11967
  %139 = load i64, i64* %timecode_frame_start124, align 8, !dbg !11967
  %conv125 = trunc i64 %139 to i32, !dbg !11966
  %call126 = call i8* @av_timecode_make_mpeg_tc_string(i8* %arraydecay123, i32 %conv125), !dbg !11968
  %140 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11969
  %arraydecay127 = getelementptr inbounds [23 x i8], [23 x i8]* %tcbuf, i32 0, i32 0, !dbg !11970
  %call128 = call i32 @writer_print_string(%struct.WriterContext* %140, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.504, i32 0, i32 0), i8* %arraydecay127, i32 0), !dbg !11971
  br label %if.end131, !dbg !11972

if.else129:                                       ; preds = %land.lhs.true119, %if.end117
  %141 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11973
  %call130 = call i32 @writer_print_string(%struct.WriterContext* %141, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.504, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !11975
  br label %if.end131

if.end131:                                        ; preds = %if.else129, %if.then122
  %142 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !11976
  %tobool132 = icmp ne %struct.AVCodecContext* %142, null, !dbg !11976
  br i1 %tobool132, label %if.then133, label %if.end135, !dbg !11978

if.then133:                                       ; preds = %if.end131
  %143 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11979
  %144 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !11980
  %refs = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %144, i32 0, i32 71, !dbg !11981
  %145 = load i32, i32* %refs, align 4, !dbg !11981
  %conv134 = sext i32 %145 to i64, !dbg !11980
  call void @writer_print_integer(%struct.WriterContext* %143, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.544, i32 0, i32 0), i64 %conv134), !dbg !11982
  br label %if.end135, !dbg !11982

if.end135:                                        ; preds = %if.then133, %if.end131
  br label %sw.epilog, !dbg !11983

sw.bb136:                                         ; preds = %do.end
  %146 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !11984
  %format137 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %146, i32 0, i32 5, !dbg !11985
  %147 = load i32, i32* %format137, align 4, !dbg !11985
  %call138 = call i8* @av_get_sample_fmt_name(i32 %147), !dbg !11986
  store i8* %call138, i8** %s, align 8, !dbg !11987
  %148 = load i8*, i8** %s, align 8, !dbg !11988
  %tobool139 = icmp ne i8* %148, null, !dbg !11988
  br i1 %tobool139, label %if.then140, label %if.else142, !dbg !11990

if.then140:                                       ; preds = %sw.bb136
  %149 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11991
  %150 = load i8*, i8** %s, align 8, !dbg !11993
  %call141 = call i32 @writer_print_string(%struct.WriterContext* %149, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.500, i32 0, i32 0), i8* %150, i32 0), !dbg !11994
  br label %if.end144, !dbg !11994

if.else142:                                       ; preds = %sw.bb136
  %151 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !11995
  %call143 = call i32 @writer_print_string(%struct.WriterContext* %151, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.500, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !11996
  br label %if.end144

if.end144:                                        ; preds = %if.else142, %if.then140
  br label %do.body145, !dbg !11997, !llvm.loop !11998

do.body145:                                       ; preds = %if.end144
  call void @llvm.dbg.declare(metadata %struct.unit_value* %uv, metadata !11999, metadata !2571), !dbg !12001
  %152 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12002
  %sample_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %152, i32 0, i32 23, !dbg !12004
  %153 = load i32, i32* %sample_rate, align 4, !dbg !12004
  %conv146 = sext i32 %153 to i64, !dbg !12002
  %val = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 0, !dbg !12005
  %i = bitcast %union.anon.1* %val to i64*, !dbg !12006
  store i64 %conv146, i64* %i, align 8, !dbg !12007
  %unit = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv, i32 0, i32 1, !dbg !12008
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @unit_hertz_str, i32 0, i32 0), i8** %unit, align 8, !dbg !12009
  %154 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12010
  %arraydecay147 = getelementptr inbounds [128 x i8], [128 x i8]* %val_str, i32 0, i32 0, !dbg !12011
  %155 = bitcast %struct.unit_value* %uv to { i64, i8* }*, !dbg !12012
  %156 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %155, i32 0, i32 0, !dbg !12012
  %157 = load i64, i64* %156, align 8, !dbg !12012
  %158 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %155, i32 0, i32 1, !dbg !12012
  %159 = load i8*, i8** %158, align 8, !dbg !12012
  %call148 = call i8* @value_string(i8* %arraydecay147, i32 128, i64 %157, i8* %159), !dbg !12012
  %call149 = call i32 @writer_print_string(%struct.WriterContext* %154, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.545, i32 0, i32 0), i8* %call148, i32 0), !dbg !12013
  br label %do.end150, !dbg !12015

do.end150:                                        ; preds = %do.body145
  %160 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12016
  %161 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12017
  %channels = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %161, i32 0, i32 22, !dbg !12018
  %162 = load i32, i32* %channels, align 8, !dbg !12018
  %conv151 = sext i32 %162 to i64, !dbg !12017
  call void @writer_print_integer(%struct.WriterContext* %160, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.502, i32 0, i32 0), i64 %conv151), !dbg !12019
  %163 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12020
  %channel_layout = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %163, i32 0, i32 21, !dbg !12022
  %164 = load i64, i64* %channel_layout, align 8, !dbg !12022
  %tobool152 = icmp ne i64 %164, 0, !dbg !12020
  br i1 %tobool152, label %if.then153, label %if.else158, !dbg !12023

if.then153:                                       ; preds = %do.end150
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !12024
  %165 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12026
  %channels154 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %165, i32 0, i32 22, !dbg !12027
  %166 = load i32, i32* %channels154, align 8, !dbg !12027
  %167 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12028
  %channel_layout155 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %167, i32 0, i32 21, !dbg !12029
  %168 = load i64, i64* %channel_layout155, align 8, !dbg !12029
  call void @av_bprint_channel_layout(%struct.AVBPrint* %pbuf, i32 %166, i64 %168), !dbg !12030
  %169 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12031
  %str156 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !12032
  %170 = load i8*, i8** %str156, align 8, !dbg !12032
  %call157 = call i32 @writer_print_string(%struct.WriterContext* %169, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.503, i32 0, i32 0), i8* %170, i32 0), !dbg !12033
  br label %if.end160, !dbg !12034

if.else158:                                       ; preds = %do.end150
  %171 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12035
  %call159 = call i32 @writer_print_string(%struct.WriterContext* %171, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.503, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i32 0, i32 0), i32 1), !dbg !12037
  br label %if.end160

if.end160:                                        ; preds = %if.else158, %if.then153
  %172 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12038
  %173 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12039
  %codec_id161 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %173, i32 0, i32 1, !dbg !12040
  %174 = load i32, i32* %codec_id161, align 4, !dbg !12040
  %call162 = call i32 @av_get_bits_per_sample(i32 %174), !dbg !12041
  %conv163 = sext i32 %call162 to i64, !dbg !12041
  call void @writer_print_integer(%struct.WriterContext* %172, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.546, i32 0, i32 0), i64 %conv163), !dbg !12042
  br label %sw.epilog, !dbg !12043

sw.bb164:                                         ; preds = %do.end
  %175 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12044
  %width165 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %175, i32 0, i32 11, !dbg !12046
  %176 = load i32, i32* %width165, align 8, !dbg !12046
  %tobool166 = icmp ne i32 %176, 0, !dbg !12044
  br i1 %tobool166, label %if.then167, label %if.else170, !dbg !12047

if.then167:                                       ; preds = %sw.bb164
  %177 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12048
  %178 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12049
  %width168 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %178, i32 0, i32 11, !dbg !12050
  %179 = load i32, i32* %width168, align 8, !dbg !12050
  %conv169 = sext i32 %179 to i64, !dbg !12049
  call void @writer_print_integer(%struct.WriterContext* %177, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.490, i32 0, i32 0), i64 %conv169), !dbg !12051
  br label %if.end172, !dbg !12051

if.else170:                                       ; preds = %sw.bb164
  %180 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12052
  %call171 = call i32 @writer_print_string(%struct.WriterContext* %180, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.490, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !12053
  br label %if.end172

if.end172:                                        ; preds = %if.else170, %if.then167
  %181 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12054
  %height173 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %181, i32 0, i32 12, !dbg !12056
  %182 = load i32, i32* %height173, align 4, !dbg !12056
  %tobool174 = icmp ne i32 %182, 0, !dbg !12054
  br i1 %tobool174, label %if.then175, label %if.else178, !dbg !12057

if.then175:                                       ; preds = %if.end172
  %183 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12058
  %184 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12059
  %height176 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %184, i32 0, i32 12, !dbg !12060
  %185 = load i32, i32* %height176, align 4, !dbg !12060
  %conv177 = sext i32 %185 to i64, !dbg !12059
  call void @writer_print_integer(%struct.WriterContext* %183, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.491, i32 0, i32 0), i64 %conv177), !dbg !12061
  br label %if.end180, !dbg !12061

if.else178:                                       ; preds = %if.end172
  %186 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12062
  %call179 = call i32 @writer_print_string(%struct.WriterContext* %186, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.491, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !12063
  br label %if.end180

if.end180:                                        ; preds = %if.else178, %if.then175
  br label %sw.epilog, !dbg !12064

sw.epilog:                                        ; preds = %do.end, %if.end180, %if.end160, %if.end135
  %187 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !12065
  %tobool181 = icmp ne %struct.AVCodecContext* %187, null, !dbg !12065
  br i1 %tobool181, label %land.lhs.true182, label %if.end205, !dbg !12067

land.lhs.true182:                                 ; preds = %sw.epilog
  %188 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !12068
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %188, i32 0, i32 3, !dbg !12070
  %189 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !12070
  %tobool183 = icmp ne %struct.AVCodec* %189, null, !dbg !12068
  br i1 %tobool183, label %land.lhs.true184, label %if.end205, !dbg !12071

land.lhs.true184:                                 ; preds = %land.lhs.true182
  %190 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !12072
  %codec185 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %190, i32 0, i32 3, !dbg !12074
  %191 = load %struct.AVCodec*, %struct.AVCodec** %codec185, align 8, !dbg !12074
  %priv_class = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %191, i32 0, i32 11, !dbg !12075
  %192 = load %struct.AVClass*, %struct.AVClass** %priv_class, align 8, !dbg !12075
  %tobool186 = icmp ne %struct.AVClass* %192, null, !dbg !12072
  br i1 %tobool186, label %land.lhs.true187, label %if.end205, !dbg !12076

land.lhs.true187:                                 ; preds = %land.lhs.true184
  %193 = load i32, i32* @show_private_data, align 4, !dbg !12077
  %tobool188 = icmp ne i32 %193, 0, !dbg !12077
  br i1 %tobool188, label %if.then189, label %if.end205, !dbg !12079

if.then189:                                       ; preds = %land.lhs.true187
  call void @llvm.dbg.declare(metadata %struct.AVOption** %opt, metadata !12080, metadata !2571), !dbg !12083
  store %struct.AVOption* null, %struct.AVOption** %opt, align 8, !dbg !12083
  br label %while.cond, !dbg !12084

while.cond:                                       ; preds = %if.end204, %if.then194, %if.then189
  %194 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !12085
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %194, i32 0, i32 6, !dbg !12087
  %195 = load i8*, i8** %priv_data, align 8, !dbg !12087
  %196 = load %struct.AVOption*, %struct.AVOption** %opt, align 8, !dbg !12088
  %call190 = call %struct.AVOption* @av_opt_next(i8* %195, %struct.AVOption* %196), !dbg !12089
  store %struct.AVOption* %call190, %struct.AVOption** %opt, align 8, !dbg !12090
  %tobool191 = icmp ne %struct.AVOption* %call190, null, !dbg !12091
  br i1 %tobool191, label %while.body, label %while.end, !dbg !12091

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %str192, metadata !12092, metadata !2571), !dbg !12094
  %197 = load %struct.AVOption*, %struct.AVOption** %opt, align 8, !dbg !12095
  %flags = getelementptr inbounds %struct.AVOption, %struct.AVOption* %197, i32 0, i32 7, !dbg !12097
  %198 = load i32, i32* %flags, align 8, !dbg !12097
  %tobool193 = icmp ne i32 %198, 0, !dbg !12095
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !12098

if.then194:                                       ; preds = %while.body
  br label %while.cond, !dbg !12099, !llvm.loop !12101

if.end195:                                        ; preds = %while.body
  %199 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !12102
  %priv_data196 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %199, i32 0, i32 6, !dbg !12104
  %200 = load i8*, i8** %priv_data196, align 8, !dbg !12104
  %201 = load %struct.AVOption*, %struct.AVOption** %opt, align 8, !dbg !12105
  %name197 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %201, i32 0, i32 0, !dbg !12106
  %202 = load i8*, i8** %name197, align 8, !dbg !12106
  %call198 = call i32 @av_opt_get(i8* %200, i8* %202, i32 0, i8** %str192), !dbg !12107
  %cmp199 = icmp sge i32 %call198, 0, !dbg !12108
  br i1 %cmp199, label %if.then201, label %if.end204, !dbg !12109

if.then201:                                       ; preds = %if.end195
  %203 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12110
  %204 = load %struct.AVOption*, %struct.AVOption** %opt, align 8, !dbg !12112
  %name202 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %204, i32 0, i32 0, !dbg !12113
  %205 = load i8*, i8** %name202, align 8, !dbg !12113
  %206 = load i8*, i8** %str192, align 8, !dbg !12114
  %call203 = call i32 @writer_print_string(%struct.WriterContext* %203, i8* %205, i8* %206, i32 0), !dbg !12115
  %207 = load i8*, i8** %str192, align 8, !dbg !12116
  call void @av_free(i8* %207), !dbg !12117
  br label %if.end204, !dbg !12118

if.end204:                                        ; preds = %if.then201, %if.end195
  br label %while.cond, !dbg !12119, !llvm.loop !12101

while.end:                                        ; preds = %while.cond
  br label %if.end205, !dbg !12121

if.end205:                                        ; preds = %while.end, %land.lhs.true187, %land.lhs.true184, %land.lhs.true182, %sw.epilog
  %208 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fmt_ctx.addr, align 8, !dbg !12122
  %iformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %208, i32 0, i32 1, !dbg !12124
  %209 = load %struct.AVInputFormat*, %struct.AVInputFormat** %iformat, align 8, !dbg !12124
  %flags206 = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %209, i32 0, i32 2, !dbg !12125
  %210 = load i32, i32* %flags206, align 8, !dbg !12125
  %and = and i32 %210, 8, !dbg !12126
  %tobool207 = icmp ne i32 %and, 0, !dbg !12126
  br i1 %tobool207, label %if.then208, label %if.else213, !dbg !12127

if.then208:                                       ; preds = %if.end205
  br label %do.body209, !dbg !12128, !llvm.loop !12130

do.body209:                                       ; preds = %if.then208
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !12132
  %211 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12135
  %id = getelementptr inbounds %struct.AVStream, %struct.AVStream* %211, i32 0, i32 1, !dbg !12136
  %212 = load i32, i32* %id, align 4, !dbg !12136
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %pbuf, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.547, i32 0, i32 0), i32 %212), !dbg !12137
  %213 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12139
  %str210 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !12140
  %214 = load i8*, i8** %str210, align 8, !dbg !12140
  %call211 = call i32 @writer_print_string(%struct.WriterContext* %213, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.548, i32 0, i32 0), i8* %214, i32 0), !dbg !12141
  br label %do.end212, !dbg !12143

do.end212:                                        ; preds = %do.body209
  br label %if.end215, !dbg !12144

if.else213:                                       ; preds = %if.end205
  %215 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12146
  %call214 = call i32 @writer_print_string(%struct.WriterContext* %215, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.548, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !12147
  br label %if.end215

if.end215:                                        ; preds = %if.else213, %do.end212
  %216 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12148
  %217 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12149
  %r_frame_rate = getelementptr inbounds %struct.AVStream, %struct.AVStream* %217, i32 0, i32 17, !dbg !12150
  %218 = bitcast %struct.AVRational* %r_frame_rate to i64*, !dbg !12151
  %219 = load i64, i64* %218, align 8, !dbg !12151
  call void @writer_print_rational(%struct.WriterContext* %216, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.549, i32 0, i32 0), i64 %219, i8 signext 47), !dbg !12151
  %220 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12152
  %221 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12153
  %avg_frame_rate = getelementptr inbounds %struct.AVStream, %struct.AVStream* %221, i32 0, i32 12, !dbg !12154
  %222 = bitcast %struct.AVRational* %avg_frame_rate to i64*, !dbg !12155
  %223 = load i64, i64* %222, align 8, !dbg !12155
  call void @writer_print_rational(%struct.WriterContext* %220, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.550, i32 0, i32 0), i64 %223, i8 signext 47), !dbg !12155
  %224 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12156
  %225 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12157
  %time_base216 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %225, i32 0, i32 4, !dbg !12158
  %226 = bitcast %struct.AVRational* %time_base216 to i64*, !dbg !12159
  %227 = load i64, i64* %226, align 8, !dbg !12159
  call void @writer_print_rational(%struct.WriterContext* %224, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.551, i32 0, i32 0), i64 %227, i8 signext 47), !dbg !12159
  %228 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12160
  %229 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12161
  %start_time = getelementptr inbounds %struct.AVStream, %struct.AVStream* %229, i32 0, i32 5, !dbg !12162
  %230 = load i64, i64* %start_time, align 8, !dbg !12162
  call void @writer_print_ts(%struct.WriterContext* %228, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.522, i32 0, i32 0), i64 %230, i32 0), !dbg !12163
  %231 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12164
  %232 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12165
  %start_time217 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %232, i32 0, i32 5, !dbg !12166
  %233 = load i64, i64* %start_time217, align 8, !dbg !12166
  %234 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12167
  %time_base218 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %234, i32 0, i32 4, !dbg !12168
  call void @writer_print_time(%struct.WriterContext* %231, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.523, i32 0, i32 0), i64 %233, %struct.AVRational* %time_base218, i32 0), !dbg !12169
  %235 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12170
  %236 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12171
  %duration = getelementptr inbounds %struct.AVStream, %struct.AVStream* %236, i32 0, i32 6, !dbg !12172
  %237 = load i64, i64* %duration, align 8, !dbg !12172
  call void @writer_print_ts(%struct.WriterContext* %235, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.552, i32 0, i32 0), i64 %237, i32 0), !dbg !12173
  %238 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12174
  %239 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12175
  %duration219 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %239, i32 0, i32 6, !dbg !12176
  %240 = load i64, i64* %duration219, align 8, !dbg !12176
  %241 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12177
  %time_base220 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %241, i32 0, i32 4, !dbg !12178
  call void @writer_print_time(%struct.WriterContext* %238, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.417, i32 0, i32 0), i64 %240, %struct.AVRational* %time_base220, i32 0), !dbg !12179
  %242 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12180
  %bit_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %242, i32 0, i32 6, !dbg !12182
  %243 = load i64, i64* %bit_rate, align 8, !dbg !12182
  %cmp221 = icmp sgt i64 %243, 0, !dbg !12183
  br i1 %cmp221, label %if.then223, label %if.else234, !dbg !12184

if.then223:                                       ; preds = %if.end215
  br label %do.body224, !dbg !12185, !llvm.loop !12187

do.body224:                                       ; preds = %if.then223
  call void @llvm.dbg.declare(metadata %struct.unit_value* %uv225, metadata !12189, metadata !2571), !dbg !12191
  %244 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12192
  %bit_rate226 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %244, i32 0, i32 6, !dbg !12194
  %245 = load i64, i64* %bit_rate226, align 8, !dbg !12194
  %val227 = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv225, i32 0, i32 0, !dbg !12195
  %i228 = bitcast %union.anon.1* %val227 to i64*, !dbg !12196
  store i64 %245, i64* %i228, align 8, !dbg !12197
  %unit229 = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv225, i32 0, i32 1, !dbg !12198
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @unit_bit_per_second_str, i32 0, i32 0), i8** %unit229, align 8, !dbg !12199
  %246 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12200
  %arraydecay230 = getelementptr inbounds [128 x i8], [128 x i8]* %val_str, i32 0, i32 0, !dbg !12201
  %247 = bitcast %struct.unit_value* %uv225 to { i64, i8* }*, !dbg !12202
  %248 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %247, i32 0, i32 0, !dbg !12202
  %249 = load i64, i64* %248, align 8, !dbg !12202
  %250 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %247, i32 0, i32 1, !dbg !12202
  %251 = load i8*, i8** %250, align 8, !dbg !12202
  %call231 = call i8* @value_string(i8* %arraydecay230, i32 128, i64 %249, i8* %251), !dbg !12202
  %call232 = call i32 @writer_print_string(%struct.WriterContext* %246, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.553, i32 0, i32 0), i8* %call231, i32 0), !dbg !12203
  br label %do.end233, !dbg !12205

do.end233:                                        ; preds = %do.body224
  br label %if.end236, !dbg !12206

if.else234:                                       ; preds = %if.end215
  %252 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12208
  %call235 = call i32 @writer_print_string(%struct.WriterContext* %252, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.553, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !12209
  br label %if.end236

if.end236:                                        ; preds = %if.else234, %do.end233
  %253 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12210
  %codec237 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %253, i32 0, i32 2, !dbg !12212
  %254 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec237, align 8, !dbg !12212
  %rc_max_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %254, i32 0, i32 103, !dbg !12213
  %255 = load i64, i64* %rc_max_rate, align 8, !dbg !12213
  %cmp238 = icmp sgt i64 %255, 0, !dbg !12214
  br i1 %cmp238, label %if.then240, label %if.else252, !dbg !12215

if.then240:                                       ; preds = %if.end236
  br label %do.body241, !dbg !12216, !llvm.loop !12218

do.body241:                                       ; preds = %if.then240
  call void @llvm.dbg.declare(metadata %struct.unit_value* %uv242, metadata !12220, metadata !2571), !dbg !12222
  %256 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12223
  %codec243 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %256, i32 0, i32 2, !dbg !12225
  %257 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec243, align 8, !dbg !12225
  %rc_max_rate244 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %257, i32 0, i32 103, !dbg !12226
  %258 = load i64, i64* %rc_max_rate244, align 8, !dbg !12226
  %val245 = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv242, i32 0, i32 0, !dbg !12227
  %i246 = bitcast %union.anon.1* %val245 to i64*, !dbg !12228
  store i64 %258, i64* %i246, align 8, !dbg !12229
  %unit247 = getelementptr inbounds %struct.unit_value, %struct.unit_value* %uv242, i32 0, i32 1, !dbg !12230
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @unit_bit_per_second_str, i32 0, i32 0), i8** %unit247, align 8, !dbg !12231
  %259 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12232
  %arraydecay248 = getelementptr inbounds [128 x i8], [128 x i8]* %val_str, i32 0, i32 0, !dbg !12233
  %260 = bitcast %struct.unit_value* %uv242 to { i64, i8* }*, !dbg !12234
  %261 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %260, i32 0, i32 0, !dbg !12234
  %262 = load i64, i64* %261, align 8, !dbg !12234
  %263 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %260, i32 0, i32 1, !dbg !12234
  %264 = load i8*, i8** %263, align 8, !dbg !12234
  %call249 = call i8* @value_string(i8* %arraydecay248, i32 128, i64 %262, i8* %264), !dbg !12234
  %call250 = call i32 @writer_print_string(%struct.WriterContext* %259, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.554, i32 0, i32 0), i8* %call249, i32 0), !dbg !12235
  br label %do.end251, !dbg !12237

do.end251:                                        ; preds = %do.body241
  br label %if.end254, !dbg !12238

if.else252:                                       ; preds = %if.end236
  %265 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12240
  %call253 = call i32 @writer_print_string(%struct.WriterContext* %265, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.554, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !12241
  br label %if.end254

if.end254:                                        ; preds = %if.else252, %do.end251
  %266 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !12242
  %tobool255 = icmp ne %struct.AVCodecContext* %266, null, !dbg !12242
  br i1 %tobool255, label %land.lhs.true256, label %if.else265, !dbg !12244

land.lhs.true256:                                 ; preds = %if.end254
  %267 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !12245
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %267, i32 0, i32 143, !dbg !12247
  %268 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !12247
  %cmp257 = icmp sgt i32 %268, 0, !dbg !12248
  br i1 %cmp257, label %if.then259, label %if.else265, !dbg !12249

if.then259:                                       ; preds = %land.lhs.true256
  br label %do.body260, !dbg !12250, !llvm.loop !12252

do.body260:                                       ; preds = %if.then259
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !12254
  %269 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !12257
  %bits_per_raw_sample261 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %269, i32 0, i32 143, !dbg !12258
  %270 = load i32, i32* %bits_per_raw_sample261, align 4, !dbg !12258
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %pbuf, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.529, i32 0, i32 0), i32 %270), !dbg !12259
  %271 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12261
  %str262 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !12262
  %272 = load i8*, i8** %str262, align 8, !dbg !12262
  %call263 = call i32 @writer_print_string(%struct.WriterContext* %271, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.555, i32 0, i32 0), i8* %272, i32 0), !dbg !12263
  br label %do.end264, !dbg !12265

do.end264:                                        ; preds = %do.body260
  br label %if.end267, !dbg !12266

if.else265:                                       ; preds = %land.lhs.true256, %if.end254
  %273 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12268
  %call266 = call i32 @writer_print_string(%struct.WriterContext* %273, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.555, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !12269
  br label %if.end267

if.end267:                                        ; preds = %if.else265, %do.end264
  %274 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12270
  %nb_frames = getelementptr inbounds %struct.AVStream, %struct.AVStream* %274, i32 0, i32 7, !dbg !12272
  %275 = load i64, i64* %nb_frames, align 8, !dbg !12272
  %tobool268 = icmp ne i64 %275, 0, !dbg !12270
  br i1 %tobool268, label %if.then269, label %if.else275, !dbg !12273

if.then269:                                       ; preds = %if.end267
  br label %do.body270, !dbg !12274, !llvm.loop !12276

do.body270:                                       ; preds = %if.then269
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !12278
  %276 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12281
  %nb_frames271 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %276, i32 0, i32 7, !dbg !12282
  %277 = load i64, i64* %nb_frames271, align 8, !dbg !12282
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %pbuf, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.422, i32 0, i32 0), i64 %277), !dbg !12283
  %278 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12285
  %str272 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !12286
  %279 = load i8*, i8** %str272, align 8, !dbg !12286
  %call273 = call i32 @writer_print_string(%struct.WriterContext* %278, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.556, i32 0, i32 0), i8* %279, i32 0), !dbg !12287
  br label %do.end274, !dbg !12289

do.end274:                                        ; preds = %do.body270
  br label %if.end277, !dbg !12290

if.else275:                                       ; preds = %if.end267
  %280 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12292
  %call276 = call i32 @writer_print_string(%struct.WriterContext* %280, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.556, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !12293
  br label %if.end277

if.end277:                                        ; preds = %if.else275, %do.end274
  %281 = load i32, i32* %stream_idx.addr, align 4, !dbg !12294
  %idxprom = sext i32 %281 to i64, !dbg !12296
  %282 = load i64*, i64** @nb_streams_frames, align 8, !dbg !12296
  %arrayidx = getelementptr inbounds i64, i64* %282, i64 %idxprom, !dbg !12296
  %283 = load i64, i64* %arrayidx, align 8, !dbg !12296
  %tobool278 = icmp ne i64 %283, 0, !dbg !12296
  br i1 %tobool278, label %if.then279, label %if.else286, !dbg !12297

if.then279:                                       ; preds = %if.end277
  br label %do.body280, !dbg !12298, !llvm.loop !12300

do.body280:                                       ; preds = %if.then279
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !12302
  %284 = load i32, i32* %stream_idx.addr, align 4, !dbg !12305
  %idxprom281 = sext i32 %284 to i64, !dbg !12306
  %285 = load i64*, i64** @nb_streams_frames, align 8, !dbg !12306
  %arrayidx282 = getelementptr inbounds i64, i64* %285, i64 %idxprom281, !dbg !12306
  %286 = load i64, i64* %arrayidx282, align 8, !dbg !12306
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %pbuf, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.557, i32 0, i32 0), i64 %286), !dbg !12307
  %287 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12309
  %str283 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !12310
  %288 = load i8*, i8** %str283, align 8, !dbg !12310
  %call284 = call i32 @writer_print_string(%struct.WriterContext* %287, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.558, i32 0, i32 0), i8* %288, i32 0), !dbg !12311
  br label %do.end285, !dbg !12313

do.end285:                                        ; preds = %do.body280
  br label %if.end288, !dbg !12314

if.else286:                                       ; preds = %if.end277
  %289 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12316
  %call287 = call i32 @writer_print_string(%struct.WriterContext* %289, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.558, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !12317
  br label %if.end288

if.end288:                                        ; preds = %if.else286, %do.end285
  %290 = load i32, i32* %stream_idx.addr, align 4, !dbg !12318
  %idxprom289 = sext i32 %290 to i64, !dbg !12320
  %291 = load i64*, i64** @nb_streams_packets, align 8, !dbg !12320
  %arrayidx290 = getelementptr inbounds i64, i64* %291, i64 %idxprom289, !dbg !12320
  %292 = load i64, i64* %arrayidx290, align 8, !dbg !12320
  %tobool291 = icmp ne i64 %292, 0, !dbg !12320
  br i1 %tobool291, label %if.then292, label %if.else299, !dbg !12321

if.then292:                                       ; preds = %if.end288
  br label %do.body293, !dbg !12322, !llvm.loop !12324

do.body293:                                       ; preds = %if.then292
  call void @av_bprint_clear(%struct.AVBPrint* %pbuf), !dbg !12326
  %293 = load i32, i32* %stream_idx.addr, align 4, !dbg !12329
  %idxprom294 = sext i32 %293 to i64, !dbg !12330
  %294 = load i64*, i64** @nb_streams_packets, align 8, !dbg !12330
  %arrayidx295 = getelementptr inbounds i64, i64* %294, i64 %idxprom294, !dbg !12330
  %295 = load i64, i64* %arrayidx295, align 8, !dbg !12330
  call void (%struct.AVBPrint*, i8*, ...) @av_bprintf(%struct.AVBPrint* %pbuf, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.557, i32 0, i32 0), i64 %295), !dbg !12331
  %296 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12333
  %str296 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %pbuf, i32 0, i32 0, !dbg !12334
  %297 = load i8*, i8** %str296, align 8, !dbg !12334
  %call297 = call i32 @writer_print_string(%struct.WriterContext* %296, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.559, i32 0, i32 0), i8* %297, i32 0), !dbg !12335
  br label %do.end298, !dbg !12337

do.end298:                                        ; preds = %do.body293
  br label %if.end301, !dbg !12338

if.else299:                                       ; preds = %if.end288
  %298 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12340
  %call300 = call i32 @writer_print_string(%struct.WriterContext* %298, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.559, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i32 0, i32 0), i32 1), !dbg !12341
  br label %if.end301

if.end301:                                        ; preds = %if.else299, %do.end298
  %299 = load i32, i32* @do_show_data, align 4, !dbg !12342
  %tobool302 = icmp ne i32 %299, 0, !dbg !12342
  br i1 %tobool302, label %if.then303, label %if.end304, !dbg !12344

if.then303:                                       ; preds = %if.end301
  %300 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12345
  %301 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12346
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %301, i32 0, i32 3, !dbg !12347
  %302 = load i8*, i8** %extradata, align 8, !dbg !12347
  %303 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12348
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %303, i32 0, i32 4, !dbg !12349
  %304 = load i32, i32* %extradata_size, align 8, !dbg !12349
  call void @writer_print_data(%struct.WriterContext* %300, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.560, i32 0, i32 0), i8* %302, i32 %304), !dbg !12350
  br label %if.end304, !dbg !12350

if.end304:                                        ; preds = %if.then303, %if.end301
  %305 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12351
  %306 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12352
  %extradata305 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %306, i32 0, i32 3, !dbg !12353
  %307 = load i8*, i8** %extradata305, align 8, !dbg !12353
  %308 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12354
  %extradata_size306 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %308, i32 0, i32 4, !dbg !12355
  %309 = load i32, i32* %extradata_size306, align 8, !dbg !12355
  call void @writer_print_data_hash(%struct.WriterContext* %305, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.561, i32 0, i32 0), i8* %307, i32 %309), !dbg !12356
  %310 = load i32, i32* @do_show_stream_disposition, align 4, !dbg !12357
  %tobool307 = icmp ne i32 %310, 0, !dbg !12357
  br i1 %tobool307, label %if.then308, label %if.end427, !dbg !12359

if.then308:                                       ; preds = %if.end304
  %311 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12360
  %312 = load i32, i32* %in_program.addr, align 4, !dbg !12362
  %tobool309 = icmp ne i32 %312, 0, !dbg !12362
  %cond310 = select i1 %tobool309, i32 26, i32 36, !dbg !12362
  call void @writer_print_section_header(%struct.WriterContext* %311, i32 %cond310), !dbg !12363
  br label %do.body311, !dbg !12364, !llvm.loop !12365

do.body311:                                       ; preds = %if.then308
  %313 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12366
  %314 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12369
  %disposition = getelementptr inbounds %struct.AVStream, %struct.AVStream* %314, i32 0, i32 8, !dbg !12370
  %315 = load i32, i32* %disposition, align 8, !dbg !12370
  %and312 = and i32 %315, 1, !dbg !12371
  %tobool313 = icmp ne i32 %and312, 0, !dbg !12372
  %lnot = xor i1 %tobool313, true, !dbg !12372
  %lnot314 = xor i1 %lnot, true, !dbg !12373
  %lnot.ext = zext i1 %lnot314 to i32, !dbg !12373
  %conv315 = sext i32 %lnot.ext to i64, !dbg !12373
  call void @writer_print_integer(%struct.WriterContext* %313, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i64 %conv315), !dbg !12374
  br label %do.end316, !dbg !12375

do.end316:                                        ; preds = %do.body311
  br label %do.body317, !dbg !12376, !llvm.loop !12377

do.body317:                                       ; preds = %do.end316
  %316 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12378
  %317 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12381
  %disposition318 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %317, i32 0, i32 8, !dbg !12382
  %318 = load i32, i32* %disposition318, align 8, !dbg !12382
  %and319 = and i32 %318, 2, !dbg !12383
  %tobool320 = icmp ne i32 %and319, 0, !dbg !12384
  %lnot321 = xor i1 %tobool320, true, !dbg !12384
  %lnot323 = xor i1 %lnot321, true, !dbg !12385
  %lnot.ext324 = zext i1 %lnot323 to i32, !dbg !12385
  %conv325 = sext i32 %lnot.ext324 to i64, !dbg !12385
  call void @writer_print_integer(%struct.WriterContext* %316, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.562, i32 0, i32 0), i64 %conv325), !dbg !12386
  br label %do.end326, !dbg !12387

do.end326:                                        ; preds = %do.body317
  br label %do.body327, !dbg !12388, !llvm.loop !12389

do.body327:                                       ; preds = %do.end326
  %319 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12390
  %320 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12393
  %disposition328 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %320, i32 0, i32 8, !dbg !12394
  %321 = load i32, i32* %disposition328, align 8, !dbg !12394
  %and329 = and i32 %321, 4, !dbg !12395
  %tobool330 = icmp ne i32 %and329, 0, !dbg !12396
  %lnot331 = xor i1 %tobool330, true, !dbg !12396
  %lnot333 = xor i1 %lnot331, true, !dbg !12397
  %lnot.ext334 = zext i1 %lnot333 to i32, !dbg !12397
  %conv335 = sext i32 %lnot.ext334 to i64, !dbg !12397
  call void @writer_print_integer(%struct.WriterContext* %319, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.563, i32 0, i32 0), i64 %conv335), !dbg !12398
  br label %do.end336, !dbg !12399

do.end336:                                        ; preds = %do.body327
  br label %do.body337, !dbg !12400, !llvm.loop !12401

do.body337:                                       ; preds = %do.end336
  %322 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12402
  %323 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12405
  %disposition338 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %323, i32 0, i32 8, !dbg !12406
  %324 = load i32, i32* %disposition338, align 8, !dbg !12406
  %and339 = and i32 %324, 8, !dbg !12407
  %tobool340 = icmp ne i32 %and339, 0, !dbg !12408
  %lnot341 = xor i1 %tobool340, true, !dbg !12408
  %lnot343 = xor i1 %lnot341, true, !dbg !12409
  %lnot.ext344 = zext i1 %lnot343 to i32, !dbg !12409
  %conv345 = sext i32 %lnot.ext344 to i64, !dbg !12409
  call void @writer_print_integer(%struct.WriterContext* %322, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.564, i32 0, i32 0), i64 %conv345), !dbg !12410
  br label %do.end346, !dbg !12411

do.end346:                                        ; preds = %do.body337
  br label %do.body347, !dbg !12412, !llvm.loop !12413

do.body347:                                       ; preds = %do.end346
  %325 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12414
  %326 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12417
  %disposition348 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %326, i32 0, i32 8, !dbg !12418
  %327 = load i32, i32* %disposition348, align 8, !dbg !12418
  %and349 = and i32 %327, 16, !dbg !12419
  %tobool350 = icmp ne i32 %and349, 0, !dbg !12420
  %lnot351 = xor i1 %tobool350, true, !dbg !12420
  %lnot353 = xor i1 %lnot351, true, !dbg !12421
  %lnot.ext354 = zext i1 %lnot353 to i32, !dbg !12421
  %conv355 = sext i32 %lnot.ext354 to i64, !dbg !12421
  call void @writer_print_integer(%struct.WriterContext* %325, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.565, i32 0, i32 0), i64 %conv355), !dbg !12422
  br label %do.end356, !dbg !12423

do.end356:                                        ; preds = %do.body347
  br label %do.body357, !dbg !12424, !llvm.loop !12425

do.body357:                                       ; preds = %do.end356
  %328 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12426
  %329 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12429
  %disposition358 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %329, i32 0, i32 8, !dbg !12430
  %330 = load i32, i32* %disposition358, align 8, !dbg !12430
  %and359 = and i32 %330, 32, !dbg !12431
  %tobool360 = icmp ne i32 %and359, 0, !dbg !12432
  %lnot361 = xor i1 %tobool360, true, !dbg !12432
  %lnot363 = xor i1 %lnot361, true, !dbg !12433
  %lnot.ext364 = zext i1 %lnot363 to i32, !dbg !12433
  %conv365 = sext i32 %lnot.ext364 to i64, !dbg !12433
  call void @writer_print_integer(%struct.WriterContext* %328, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.566, i32 0, i32 0), i64 %conv365), !dbg !12434
  br label %do.end366, !dbg !12435

do.end366:                                        ; preds = %do.body357
  br label %do.body367, !dbg !12436, !llvm.loop !12437

do.body367:                                       ; preds = %do.end366
  %331 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12438
  %332 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12441
  %disposition368 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %332, i32 0, i32 8, !dbg !12442
  %333 = load i32, i32* %disposition368, align 8, !dbg !12442
  %and369 = and i32 %333, 64, !dbg !12443
  %tobool370 = icmp ne i32 %and369, 0, !dbg !12444
  %lnot371 = xor i1 %tobool370, true, !dbg !12444
  %lnot373 = xor i1 %lnot371, true, !dbg !12445
  %lnot.ext374 = zext i1 %lnot373 to i32, !dbg !12445
  %conv375 = sext i32 %lnot.ext374 to i64, !dbg !12445
  call void @writer_print_integer(%struct.WriterContext* %331, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.567, i32 0, i32 0), i64 %conv375), !dbg !12446
  br label %do.end376, !dbg !12447

do.end376:                                        ; preds = %do.body367
  br label %do.body377, !dbg !12448, !llvm.loop !12449

do.body377:                                       ; preds = %do.end376
  %334 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12450
  %335 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12453
  %disposition378 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %335, i32 0, i32 8, !dbg !12454
  %336 = load i32, i32* %disposition378, align 8, !dbg !12454
  %and379 = and i32 %336, 128, !dbg !12455
  %tobool380 = icmp ne i32 %and379, 0, !dbg !12456
  %lnot381 = xor i1 %tobool380, true, !dbg !12456
  %lnot383 = xor i1 %lnot381, true, !dbg !12457
  %lnot.ext384 = zext i1 %lnot383 to i32, !dbg !12457
  %conv385 = sext i32 %lnot.ext384 to i64, !dbg !12457
  call void @writer_print_integer(%struct.WriterContext* %334, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.568, i32 0, i32 0), i64 %conv385), !dbg !12458
  br label %do.end386, !dbg !12459

do.end386:                                        ; preds = %do.body377
  br label %do.body387, !dbg !12460, !llvm.loop !12461

do.body387:                                       ; preds = %do.end386
  %337 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12462
  %338 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12465
  %disposition388 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %338, i32 0, i32 8, !dbg !12466
  %339 = load i32, i32* %disposition388, align 8, !dbg !12466
  %and389 = and i32 %339, 256, !dbg !12467
  %tobool390 = icmp ne i32 %and389, 0, !dbg !12468
  %lnot391 = xor i1 %tobool390, true, !dbg !12468
  %lnot393 = xor i1 %lnot391, true, !dbg !12469
  %lnot.ext394 = zext i1 %lnot393 to i32, !dbg !12469
  %conv395 = sext i32 %lnot.ext394 to i64, !dbg !12469
  call void @writer_print_integer(%struct.WriterContext* %337, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.569, i32 0, i32 0), i64 %conv395), !dbg !12470
  br label %do.end396, !dbg !12471

do.end396:                                        ; preds = %do.body387
  br label %do.body397, !dbg !12472, !llvm.loop !12473

do.body397:                                       ; preds = %do.end396
  %340 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12474
  %341 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12477
  %disposition398 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %341, i32 0, i32 8, !dbg !12478
  %342 = load i32, i32* %disposition398, align 8, !dbg !12478
  %and399 = and i32 %342, 512, !dbg !12479
  %tobool400 = icmp ne i32 %and399, 0, !dbg !12480
  %lnot401 = xor i1 %tobool400, true, !dbg !12480
  %lnot403 = xor i1 %lnot401, true, !dbg !12481
  %lnot.ext404 = zext i1 %lnot403 to i32, !dbg !12481
  %conv405 = sext i32 %lnot.ext404 to i64, !dbg !12481
  call void @writer_print_integer(%struct.WriterContext* %340, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.570, i32 0, i32 0), i64 %conv405), !dbg !12482
  br label %do.end406, !dbg !12483

do.end406:                                        ; preds = %do.body397
  br label %do.body407, !dbg !12484, !llvm.loop !12485

do.body407:                                       ; preds = %do.end406
  %343 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12486
  %344 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12489
  %disposition408 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %344, i32 0, i32 8, !dbg !12490
  %345 = load i32, i32* %disposition408, align 8, !dbg !12490
  %and409 = and i32 %345, 1024, !dbg !12491
  %tobool410 = icmp ne i32 %and409, 0, !dbg !12492
  %lnot411 = xor i1 %tobool410, true, !dbg !12492
  %lnot413 = xor i1 %lnot411, true, !dbg !12493
  %lnot.ext414 = zext i1 %lnot413 to i32, !dbg !12493
  %conv415 = sext i32 %lnot.ext414 to i64, !dbg !12493
  call void @writer_print_integer(%struct.WriterContext* %343, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.571, i32 0, i32 0), i64 %conv415), !dbg !12494
  br label %do.end416, !dbg !12495

do.end416:                                        ; preds = %do.body407
  br label %do.body417, !dbg !12496, !llvm.loop !12497

do.body417:                                       ; preds = %do.end416
  %346 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12498
  %347 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12501
  %disposition418 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %347, i32 0, i32 8, !dbg !12502
  %348 = load i32, i32* %disposition418, align 8, !dbg !12502
  %and419 = and i32 %348, 2048, !dbg !12503
  %tobool420 = icmp ne i32 %and419, 0, !dbg !12504
  %lnot421 = xor i1 %tobool420, true, !dbg !12504
  %lnot423 = xor i1 %lnot421, true, !dbg !12505
  %lnot.ext424 = zext i1 %lnot423 to i32, !dbg !12505
  %conv425 = sext i32 %lnot.ext424 to i64, !dbg !12505
  call void @writer_print_integer(%struct.WriterContext* %346, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.572, i32 0, i32 0), i64 %conv425), !dbg !12506
  br label %do.end426, !dbg !12507

do.end426:                                        ; preds = %do.body417
  %349 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12508
  call void @writer_print_section_footer(%struct.WriterContext* %349), !dbg !12509
  br label %if.end427, !dbg !12510

if.end427:                                        ; preds = %do.end426, %if.end304
  %350 = load i32, i32* @do_show_stream_tags, align 4, !dbg !12511
  %tobool428 = icmp ne i32 %350, 0, !dbg !12511
  br i1 %tobool428, label %if.then429, label %if.end433, !dbg !12513

if.then429:                                       ; preds = %if.end427
  %351 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12514
  %352 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12515
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %352, i32 0, i32 11, !dbg !12516
  %353 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !12516
  %354 = load i32, i32* %in_program.addr, align 4, !dbg !12517
  %tobool430 = icmp ne i32 %354, 0, !dbg !12517
  %cond431 = select i1 %tobool430, i32 27, i32 38, !dbg !12517
  %call432 = call i32 @show_tags(%struct.WriterContext* %351, %struct.AVDictionary* %353, i32 %cond431), !dbg !12518
  store i32 %call432, i32* %ret, align 4, !dbg !12519
  br label %if.end433, !dbg !12520

if.end433:                                        ; preds = %if.then429, %if.end427
  %355 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12521
  %nb_side_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %355, i32 0, i32 15, !dbg !12523
  %356 = load i32, i32* %nb_side_data, align 8, !dbg !12523
  %tobool434 = icmp ne i32 %356, 0, !dbg !12521
  br i1 %tobool434, label %if.then435, label %if.end438, !dbg !12524

if.then435:                                       ; preds = %if.end433
  %357 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12525
  %358 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12527
  %codecpar436 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %358, i32 0, i32 19, !dbg !12528
  %359 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar436, align 8, !dbg !12528
  %360 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12529
  %side_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %360, i32 0, i32 14, !dbg !12530
  %361 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %side_data, align 8, !dbg !12530
  %362 = load %struct.AVStream*, %struct.AVStream** %stream, align 8, !dbg !12531
  %nb_side_data437 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %362, i32 0, i32 15, !dbg !12532
  %363 = load i32, i32* %nb_side_data437, align 8, !dbg !12532
  call void @print_pkt_side_data(%struct.WriterContext* %357, %struct.AVCodecParameters* %359, %struct.AVPacketSideData* %361, i32 %363, i32 39, i32 40), !dbg !12533
  br label %if.end438, !dbg !12534

if.end438:                                        ; preds = %if.then435, %if.end433
  %364 = load %struct.WriterContext*, %struct.WriterContext** %w.addr, align 8, !dbg !12535
  call void @writer_print_section_footer(%struct.WriterContext* %364), !dbg !12536
  %call439 = call i32 @av_bprint_finalize(%struct.AVBPrint* %pbuf, i8** null), !dbg !12537
  %365 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !12538
  %call440 = call i32 @fflush(%struct._IO_FILE* %365), !dbg !12539
  %366 = load i32, i32* %ret, align 4, !dbg !12540
  ret i32 %366, !dbg !12541
}

declare %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32) #2

declare i8* @avcodec_profile_name(i32, i32) #2

declare i8* @av_fourcc_make_string(i8*, i32) #2

declare i32 @av_reduce(i32*, i32*, i64, i64, i64) #2

declare i32 @av_get_bits_per_sample(i32) #2

declare %struct.AVOption* @av_opt_next(i8*, %struct.AVOption*) #2

declare i32 @av_opt_get(i8*, i8*, i32, i8**) #2

declare i64 @avio_size(%struct.AVIOContext*) #2

declare void @avcodec_free_context(%struct.AVCodecContext**) #2

declare void @avformat_close_input(%struct.AVFormatContext**) #2

; Function Attrs: nounwind
declare i8* @strerror(i32) #3

declare void @av_opt_free(i8*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2564, !2565}
!llvm.ident = !{!2566}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1012, globals: !1172)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]fftools--ffprobe.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !25, !46, !92, !552, !582, !593, !617, !624, !642, !666, !685, !695, !712, !911, !920, !929, !935, !943, !955, !964, !973, !979, !984, !990, !1001, !1006}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !4, line: 221, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!6 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!7 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!8 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!9 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!10 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!11 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!12 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!13 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!14 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!15 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!16 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!17 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!18 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!19 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!20 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!21 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!22 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!23 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!24 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 29, size: 32, align: 32, elements: !27)
!26 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!27 = !{!28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!28 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!29 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!30 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!31 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!32 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!33 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!34 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!35 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!36 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!37 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!38 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!39 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!40 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!41 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!42 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!43 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!44 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!45 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !47, line: 155, size: 32, align: 32, elements: !48)
!47 = !DIFile(filename: "fftools/ffprobe.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!48 = !{!49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91}
!49 = !DIEnumerator(name: "SECTION_ID_NONE", value: -1)
!50 = !DIEnumerator(name: "SECTION_ID_CHAPTER", value: 0)
!51 = !DIEnumerator(name: "SECTION_ID_CHAPTER_TAGS", value: 1)
!52 = !DIEnumerator(name: "SECTION_ID_CHAPTERS", value: 2)
!53 = !DIEnumerator(name: "SECTION_ID_ERROR", value: 3)
!54 = !DIEnumerator(name: "SECTION_ID_FORMAT", value: 4)
!55 = !DIEnumerator(name: "SECTION_ID_FORMAT_TAGS", value: 5)
!56 = !DIEnumerator(name: "SECTION_ID_FRAME", value: 6)
!57 = !DIEnumerator(name: "SECTION_ID_FRAMES", value: 7)
!58 = !DIEnumerator(name: "SECTION_ID_FRAME_TAGS", value: 8)
!59 = !DIEnumerator(name: "SECTION_ID_FRAME_SIDE_DATA_LIST", value: 9)
!60 = !DIEnumerator(name: "SECTION_ID_FRAME_SIDE_DATA", value: 10)
!61 = !DIEnumerator(name: "SECTION_ID_FRAME_LOG", value: 11)
!62 = !DIEnumerator(name: "SECTION_ID_FRAME_LOGS", value: 12)
!63 = !DIEnumerator(name: "SECTION_ID_LIBRARY_VERSION", value: 13)
!64 = !DIEnumerator(name: "SECTION_ID_LIBRARY_VERSIONS", value: 14)
!65 = !DIEnumerator(name: "SECTION_ID_PACKET", value: 15)
!66 = !DIEnumerator(name: "SECTION_ID_PACKET_TAGS", value: 16)
!67 = !DIEnumerator(name: "SECTION_ID_PACKETS", value: 17)
!68 = !DIEnumerator(name: "SECTION_ID_PACKETS_AND_FRAMES", value: 18)
!69 = !DIEnumerator(name: "SECTION_ID_PACKET_SIDE_DATA_LIST", value: 19)
!70 = !DIEnumerator(name: "SECTION_ID_PACKET_SIDE_DATA", value: 20)
!71 = !DIEnumerator(name: "SECTION_ID_PIXEL_FORMAT", value: 21)
!72 = !DIEnumerator(name: "SECTION_ID_PIXEL_FORMAT_FLAGS", value: 22)
!73 = !DIEnumerator(name: "SECTION_ID_PIXEL_FORMAT_COMPONENT", value: 23)
!74 = !DIEnumerator(name: "SECTION_ID_PIXEL_FORMAT_COMPONENTS", value: 24)
!75 = !DIEnumerator(name: "SECTION_ID_PIXEL_FORMATS", value: 25)
!76 = !DIEnumerator(name: "SECTION_ID_PROGRAM_STREAM_DISPOSITION", value: 26)
!77 = !DIEnumerator(name: "SECTION_ID_PROGRAM_STREAM_TAGS", value: 27)
!78 = !DIEnumerator(name: "SECTION_ID_PROGRAM", value: 28)
!79 = !DIEnumerator(name: "SECTION_ID_PROGRAM_STREAMS", value: 29)
!80 = !DIEnumerator(name: "SECTION_ID_PROGRAM_STREAM", value: 30)
!81 = !DIEnumerator(name: "SECTION_ID_PROGRAM_TAGS", value: 31)
!82 = !DIEnumerator(name: "SECTION_ID_PROGRAM_VERSION", value: 32)
!83 = !DIEnumerator(name: "SECTION_ID_PROGRAMS", value: 33)
!84 = !DIEnumerator(name: "SECTION_ID_ROOT", value: 34)
!85 = !DIEnumerator(name: "SECTION_ID_STREAM", value: 35)
!86 = !DIEnumerator(name: "SECTION_ID_STREAM_DISPOSITION", value: 36)
!87 = !DIEnumerator(name: "SECTION_ID_STREAMS", value: 37)
!88 = !DIEnumerator(name: "SECTION_ID_STREAM_TAGS", value: 38)
!89 = !DIEnumerator(name: "SECTION_ID_STREAM_SIDE_DATA_LIST", value: 39)
!90 = !DIEnumerator(name: "SECTION_ID_STREAM_SIDE_DATA", value: 40)
!91 = !DIEnumerator(name: "SECTION_ID_SUBTITLE", value: 41)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !93, line: 215, size: 32, align: 32, elements: !94)
!93 = !DIFile(filename: "./libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!94 = !{!95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551}
!95 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!97 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!98 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!99 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!100 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!101 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!102 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!103 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!104 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!105 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!106 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!107 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!108 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!109 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!110 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!111 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!112 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!113 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!114 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!115 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!116 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!118 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!119 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!120 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!121 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!122 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!123 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!125 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!126 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!127 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!128 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!129 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!130 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!131 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!132 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!133 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!134 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!135 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!136 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!137 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!139 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!140 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!141 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!142 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!143 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!144 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!145 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!146 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!147 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!148 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!149 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!150 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!151 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!153 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!154 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!155 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!157 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!158 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!159 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!160 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!161 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!162 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!163 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!164 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!165 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!167 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!168 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!169 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!170 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!171 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!172 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!173 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!175 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!177 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!178 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!179 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!180 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!181 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!182 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!183 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!184 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!185 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!186 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!187 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!188 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!189 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!190 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!191 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!192 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!193 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!194 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!195 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!197 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!198 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!199 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!201 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!202 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!203 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!204 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!205 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!206 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!207 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!208 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!209 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!210 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!211 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!212 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!213 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!214 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!215 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!216 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!217 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!219 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!220 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!221 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!222 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!223 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!224 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!225 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!226 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!227 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!228 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!229 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!230 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!231 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!232 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!233 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!234 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!235 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!236 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!237 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!238 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!239 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!241 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!242 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!243 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!244 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!245 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!246 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!247 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!248 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!249 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!250 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!251 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!252 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!253 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!254 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!255 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!256 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!257 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!258 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!259 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!260 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!262 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!263 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!264 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!265 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!266 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!267 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!268 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!269 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!270 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!271 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!273 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!274 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!275 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!276 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!277 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!278 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!279 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!280 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!281 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!282 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!283 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!284 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!285 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!286 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!287 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!288 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!289 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!290 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!291 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!292 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!293 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!294 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!295 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!296 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!297 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!298 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!299 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!300 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!301 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!302 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!303 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!304 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!305 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!306 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!307 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!308 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!309 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!310 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!311 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!312 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!313 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!314 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!315 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!316 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!317 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!318 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!319 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!320 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!321 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!322 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!323 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!324 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!325 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!326 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!327 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!328 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!329 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!331 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!332 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!333 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!334 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!335 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!336 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!337 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!338 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!339 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!340 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!341 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!342 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!343 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!344 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!345 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!346 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!347 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!348 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!349 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!350 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!351 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!352 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!353 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!354 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!355 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!356 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!357 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!358 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!359 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!360 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!361 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!362 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!363 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!364 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!365 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!366 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!367 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!368 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!370 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!372 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!373 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!374 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!375 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!376 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!378 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!380 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!381 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!382 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!383 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!384 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!385 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!387 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!388 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!389 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!390 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!391 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!393 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!394 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!395 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!396 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!397 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!398 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!401 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!402 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!403 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!404 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!406 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!408 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!409 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!411 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!412 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!413 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!414 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!415 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!416 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!417 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!418 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!419 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!420 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!421 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!422 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!423 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!424 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!425 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!426 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!427 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!428 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!429 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!430 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!431 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!432 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!433 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!434 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!435 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!436 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!437 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!438 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!439 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!440 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!441 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!442 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!443 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!444 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!446 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!447 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!448 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!449 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!450 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!451 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!452 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!453 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!454 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!455 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!456 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!457 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!458 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!459 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!462 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!463 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!464 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!465 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!466 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!468 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!469 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!470 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!471 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!472 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!473 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!474 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!475 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!476 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!477 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!478 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!479 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!480 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!481 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!482 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!483 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!484 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!485 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!486 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!487 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!488 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!489 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!490 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!491 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!492 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!493 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!494 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!495 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!496 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!497 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!498 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!499 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!500 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!501 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!502 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!503 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!504 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!505 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!506 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!507 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!508 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!509 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!510 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!511 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!512 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!513 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!514 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!515 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!516 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!517 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!518 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!519 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!520 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!521 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!522 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!523 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!524 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!525 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!526 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!527 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!528 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!529 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!530 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!531 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!532 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!533 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!534 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!535 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!536 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!537 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!538 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!539 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!540 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!541 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!542 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!543 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!544 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!545 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!546 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!547 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!548 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!549 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!550 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!551 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!552 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !93, line: 1175, size: 32, align: 32, elements: !553)
!553 = !{!554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581}
!554 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!555 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!556 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!557 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!558 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!559 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!560 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!561 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!562 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!563 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!564 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!565 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!566 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!567 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!568 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!569 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!570 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!571 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!572 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!573 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!574 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!575 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!576 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!577 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!578 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!579 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!580 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!581 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!582 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !583, line: 272, size: 32, align: 32, elements: !584)
!583 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!584 = !{!585, !586, !587, !588, !589, !590, !591, !592}
!585 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!586 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!587 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!588 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!589 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!590 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!591 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!592 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!593 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !594, line: 48, size: 32, align: 32, elements: !595)
!594 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!595 = !{!596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616}
!596 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!597 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!598 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!599 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!600 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!601 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!602 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!603 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!604 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!605 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!606 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!607 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!608 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!609 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!610 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!611 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!612 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!613 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!614 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!615 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!616 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !618, line: 516, size: 32, align: 32, elements: !619)
!618 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!619 = !{!620, !621, !622, !623}
!620 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!621 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!622 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!623 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!624 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !618, line: 440, size: 32, align: 32, elements: !625)
!625 = !{!626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641}
!626 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!627 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!628 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!629 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!630 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!631 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!632 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!633 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!634 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!635 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!636 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!637 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!638 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!639 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!640 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!641 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!642 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !618, line: 464, size: 32, align: 32, elements: !643)
!643 = !{!644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665}
!644 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!645 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!646 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!647 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!648 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!649 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!650 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!651 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!652 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!653 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!654 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!655 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!656 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!657 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!658 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!659 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!660 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!661 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!662 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!663 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!664 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!665 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!666 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !618, line: 493, size: 32, align: 32, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684}
!668 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!669 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!670 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!671 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!672 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!673 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!674 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!675 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!676 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!677 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!678 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!679 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!680 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!681 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!682 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!683 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!684 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!685 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !618, line: 538, size: 32, align: 32, elements: !686)
!686 = !{!687, !688, !689, !690, !691, !692, !693, !694}
!687 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!688 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!689 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!690 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!691 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!692 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!693 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!694 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!695 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !696, line: 58, size: 32, align: 32, elements: !697)
!696 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!697 = !{!698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!711 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !618, line: 64, size: 32, align: 32, elements: !713)
!713 = !{!714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910}
!714 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!715 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!716 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!717 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!718 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!719 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!720 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!721 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!722 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!723 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!724 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!725 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!726 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!727 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!728 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!729 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!730 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!731 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!732 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!733 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!734 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!735 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!736 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!737 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!738 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!739 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!740 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!741 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!742 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!743 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!744 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!745 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!746 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!747 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!748 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!749 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!750 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!751 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!752 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!753 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!754 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!755 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!756 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!757 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!758 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!759 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!760 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!761 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!762 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!763 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!764 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!765 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!766 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!767 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!768 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!769 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!770 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!771 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!772 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!773 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!774 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!775 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!776 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!777 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!778 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!779 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!780 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!781 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!782 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!783 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!784 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!785 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!786 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!787 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!788 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!789 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!790 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!791 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!792 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!793 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!794 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!795 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!796 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!797 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!798 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!799 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!800 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!801 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!802 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!803 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!804 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!805 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!806 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!807 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!808 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!809 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!810 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!811 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!812 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!813 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!814 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!815 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!816 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!817 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!818 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!819 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!820 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!821 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!822 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!823 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!824 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!825 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!826 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!827 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!828 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!829 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!830 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!831 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!832 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!833 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!834 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!835 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!836 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!837 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!838 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!839 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!840 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!841 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!842 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!843 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!844 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!845 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!846 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!847 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!848 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!849 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!850 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!851 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!852 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!853 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!854 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!855 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!856 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!857 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!858 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!859 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!860 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!861 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!862 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!863 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!864 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!865 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!866 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!867 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!868 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!869 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!870 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!871 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!872 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!873 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!874 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!875 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!876 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!877 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!878 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!879 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!880 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!881 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!882 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!883 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!884 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!885 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!886 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!887 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!888 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!889 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!890 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!891 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!892 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!893 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!894 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!895 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!896 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!897 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!898 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!899 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!900 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!901 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!902 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!903 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!904 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!905 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!906 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!907 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!908 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!909 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!910 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!911 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVIODataMarkerType", file: !912, line: 111, size: 32, align: 32, elements: !913)
!912 = !DIFile(filename: "./libavformat/avio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!913 = !{!914, !915, !916, !917, !918, !919}
!914 = !DIEnumerator(name: "AVIO_DATA_MARKER_HEADER", value: 0)
!915 = !DIEnumerator(name: "AVIO_DATA_MARKER_SYNC_POINT", value: 1)
!916 = !DIEnumerator(name: "AVIO_DATA_MARKER_BOUNDARY_POINT", value: 2)
!917 = !DIEnumerator(name: "AVIO_DATA_MARKER_UNKNOWN", value: 3)
!918 = !DIEnumerator(name: "AVIO_DATA_MARKER_TRAILER", value: 4)
!919 = !DIEnumerator(name: "AVIO_DATA_MARKER_FLUSH_POINT", value: 5)
!920 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !583, line: 199, size: 32, align: 32, elements: !921)
!921 = !{!922, !923, !924, !925, !926, !927, !928}
!922 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!923 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!924 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!925 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!926 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!927 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!928 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!929 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !93, line: 3865, size: 32, align: 32, elements: !930)
!930 = !{!931, !932, !933, !934}
!931 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!932 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!933 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!934 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!935 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !93, line: 1534, size: 32, align: 32, elements: !936)
!936 = !{!937, !938, !939, !940, !941, !942}
!937 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!938 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!939 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!940 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!941 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!942 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!943 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !93, line: 810, size: 32, align: 32, elements: !944)
!944 = !{!945, !946, !947, !948, !949, !950, !951, !952, !953, !954}
!945 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!946 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!947 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!948 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!949 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!950 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!951 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!952 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!953 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!954 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!955 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !93, line: 798, size: 32, align: 32, elements: !956)
!956 = !{!957, !958, !959, !960, !961, !962, !963}
!957 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!958 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!959 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!960 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!961 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!962 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!963 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!964 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStreamParseType", file: !965, line: 782, size: 32, align: 32, elements: !966)
!965 = !DIFile(filename: "./libavformat/avformat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!966 = !{!967, !968, !969, !970, !971, !972}
!967 = !DIEnumerator(name: "AVSTREAM_PARSE_NONE", value: 0)
!968 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL", value: 1)
!969 = !DIEnumerator(name: "AVSTREAM_PARSE_HEADERS", value: 2)
!970 = !DIEnumerator(name: "AVSTREAM_PARSE_TIMESTAMPS", value: 3)
!971 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_ONCE", value: 4)
!972 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_RAW", value: 5)
!973 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureStructure", file: !93, line: 5085, size: 32, align: 32, elements: !974)
!974 = !{!975, !976, !977, !978}
!975 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_UNKNOWN", value: 0)
!976 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_TOP_FIELD", value: 1)
!977 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_BOTTOM_FIELD", value: 2)
!978 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_FRAME", value: 3)
!979 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDurationEstimationMethod", file: !965, line: 1315, size: 32, align: 32, elements: !980)
!980 = !{!981, !982, !983}
!981 = !DIEnumerator(name: "AVFMT_DURATION_FROM_PTS", value: 0)
!982 = !DIEnumerator(name: "AVFMT_DURATION_FROM_STREAM", value: 1)
!983 = !DIEnumerator(name: "AVFMT_DURATION_FROM_BITRATE", value: 2)
!984 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !47, line: 421, size: 32, align: 32, elements: !985)
!985 = !{!986, !987, !988, !989}
!986 = !DIEnumerator(name: "WRITER_STRING_VALIDATION_FAIL", value: 0)
!987 = !DIEnumerator(name: "WRITER_STRING_VALIDATION_REPLACE", value: 1)
!988 = !DIEnumerator(name: "WRITER_STRING_VALIDATION_IGNORE", value: 2)
!989 = !DIEnumerator(name: "WRITER_STRING_VALIDATION_NB", value: 3)
!990 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStereo3DType", file: !991, line: 51, size: 32, align: 32, elements: !992)
!991 = !DIFile(filename: "./libavutil/stereo3d.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!992 = !{!993, !994, !995, !996, !997, !998, !999, !1000}
!993 = !DIEnumerator(name: "AV_STEREO3D_2D", value: 0)
!994 = !DIEnumerator(name: "AV_STEREO3D_SIDEBYSIDE", value: 1)
!995 = !DIEnumerator(name: "AV_STEREO3D_TOPBOTTOM", value: 2)
!996 = !DIEnumerator(name: "AV_STEREO3D_FRAMESEQUENCE", value: 3)
!997 = !DIEnumerator(name: "AV_STEREO3D_CHECKERBOARD", value: 4)
!998 = !DIEnumerator(name: "AV_STEREO3D_SIDEBYSIDE_QUINCUNX", value: 5)
!999 = !DIEnumerator(name: "AV_STEREO3D_LINES", value: 6)
!1000 = !DIEnumerator(name: "AV_STEREO3D_COLUMNS", value: 7)
!1001 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStereo3DView", file: !991, line: 147, size: 32, align: 32, elements: !1002)
!1002 = !{!1003, !1004, !1005}
!1003 = !DIEnumerator(name: "AV_STEREO3D_VIEW_PACKED", value: 0)
!1004 = !DIEnumerator(name: "AV_STEREO3D_VIEW_LEFT", value: 1)
!1005 = !DIEnumerator(name: "AV_STEREO3D_VIEW_RIGHT", value: 2)
!1006 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSphericalProjection", file: !1007, line: 51, size: 32, align: 32, elements: !1008)
!1007 = !DIFile(filename: "./libavutil/spherical.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1008 = !{!1009, !1010, !1011}
!1009 = !DIEnumerator(name: "AV_SPHERICAL_EQUIRECTANGULAR", value: 0)
!1010 = !DIEnumerator(name: "AV_SPHERICAL_CUBEMAP", value: 1)
!1011 = !DIEnumerator(name: "AV_SPHERICAL_EQUIRECTANGULAR_TILE", value: 2)
!1012 = !{!1013, !1014, !1016, !1019, !1020, !1021, !1101, !1102, !1105, !1104, !1106, !1041, !1109, !1110, !1112, !1119, !1133, !1139, !1141, !1158, !1164, !1171}
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1015 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !1017, line: 119, baseType: !1018)
!1017 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1018 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1017, line: 40, baseType: !1018)
!1020 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64, align: 64)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64, align: 64)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !26, line: 143, baseType: !1024)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !26, line: 67, size: 640, align: 64, elements: !1025)
!1025 = !{!1026, !1029, !1033, !1060, !1061, !1062, !1063, !1067, !1073, !1075, !1079}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1024, file: !26, line: 72, baseType: !1027, size: 64, align: 64)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64, align: 64)
!1028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1024, file: !26, line: 78, baseType: !1030, size: 64, align: 64, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!1027, !1013}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1024, file: !26, line: 85, baseType: !1034, size: 64, align: 64, offset: 128)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1036)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 246, size: 512, align: 64, elements: !1037)
!1037 = !{!1038, !1039, !1040, !1042, !1043, !1056, !1057, !1058, !1059}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1036, file: !4, line: 247, baseType: !1027, size: 64, align: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1036, file: !4, line: 253, baseType: !1027, size: 64, align: 64, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1036, file: !4, line: 259, baseType: !1041, size: 32, align: 32, offset: 128)
!1041 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1036, file: !4, line: 260, baseType: !3, size: 32, align: 32, offset: 160)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1036, file: !4, line: 271, baseType: !1044, size: 64, align: 64, offset: 192)
!1044 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1036, file: !4, line: 265, size: 64, align: 64, elements: !1045)
!1045 = !{!1046, !1047, !1048, !1049}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1044, file: !4, line: 266, baseType: !1019, size: 64, align: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1044, file: !4, line: 267, baseType: !1020, size: 64, align: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1044, file: !4, line: 268, baseType: !1027, size: 64, align: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1044, file: !4, line: 270, baseType: !1050, size: 64, align: 32)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1051, line: 61, baseType: !1052)
!1051 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1051, line: 58, size: 64, align: 32, elements: !1053)
!1053 = !{!1054, !1055}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1052, file: !1051, line: 59, baseType: !1041, size: 32, align: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1052, file: !1051, line: 60, baseType: !1041, size: 32, align: 32, offset: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1036, file: !4, line: 272, baseType: !1020, size: 64, align: 64, offset: 256)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1036, file: !4, line: 273, baseType: !1020, size: 64, align: 64, offset: 320)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1036, file: !4, line: 275, baseType: !1041, size: 32, align: 32, offset: 384)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1036, file: !4, line: 300, baseType: !1027, size: 64, align: 64, offset: 448)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1024, file: !26, line: 93, baseType: !1041, size: 32, align: 32, offset: 192)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1024, file: !26, line: 99, baseType: !1041, size: 32, align: 32, offset: 224)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1024, file: !26, line: 108, baseType: !1041, size: 32, align: 32, offset: 256)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1024, file: !26, line: 113, baseType: !1064, size: 64, align: 64, offset: 320)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64, align: 64)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!1013, !1013, !1013}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1024, file: !26, line: 123, baseType: !1068, size: 64, align: 64, offset: 384)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64, align: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!1071, !1071}
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1024, file: !26, line: 130, baseType: !1074, size: 32, align: 32, offset: 448)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !26, line: 48, baseType: !25)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1024, file: !26, line: 136, baseType: !1076, size: 64, align: 64, offset: 512)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64, align: 64)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!1074, !1013}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1024, file: !26, line: 142, baseType: !1080, size: 64, align: 64, offset: 576)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64, align: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!1041, !1083, !1013, !1027, !1041}
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64, align: 64)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64, align: 64)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 329, size: 128, align: 64, elements: !1086)
!1086 = !{!1087, !1099, !1100}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1085, file: !4, line: 360, baseType: !1088, size: 64, align: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64, align: 64)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !4, line: 324, baseType: !1091)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !4, line: 306, size: 384, align: 64, elements: !1092)
!1092 = !{!1093, !1094, !1095, !1096, !1097, !1098}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1091, file: !4, line: 307, baseType: !1027, size: 64, align: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1091, file: !4, line: 313, baseType: !1020, size: 64, align: 64, offset: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1091, file: !4, line: 313, baseType: !1020, size: 64, align: 64, offset: 128)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1091, file: !4, line: 318, baseType: !1020, size: 64, align: 64, offset: 192)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1091, file: !4, line: 318, baseType: !1020, size: 64, align: 64, offset: 256)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1091, file: !4, line: 323, baseType: !1041, size: 32, align: 32, offset: 320)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1085, file: !4, line: 364, baseType: !1041, size: 32, align: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1085, file: !4, line: 368, baseType: !1041, size: 32, align: 32, offset: 96)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64, align: 64)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64, align: 64)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1017, line: 48, baseType: !1104)
!1104 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1105 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64, align: 64)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64, align: 64)
!1108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1109 = !DIBasicType(name: "long long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1017, line: 38, baseType: !1041)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStereo3D", file: !991, line: 191, baseType: !1114)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStereo3D", file: !991, line: 176, size: 96, align: 32, elements: !1115)
!1115 = !{!1116, !1117, !1118}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1114, file: !991, line: 180, baseType: !990, size: 32, align: 32)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1114, file: !991, line: 185, baseType: !1041, size: 32, align: 32, offset: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !1114, file: !991, line: 190, baseType: !1001, size: 32, align: 32, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64, align: 64)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSphericalMapping", file: !1007, line: 183, baseType: !1121)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSphericalMapping", file: !1007, line: 82, size: 288, align: 32, elements: !1122)
!1122 = !{!1123, !1124, !1125, !1126, !1127, !1129, !1130, !1131, !1132}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "projection", scope: !1121, file: !1007, line: 86, baseType: !1006, size: 32, align: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "yaw", scope: !1121, file: !1007, line: 126, baseType: !1111, size: 32, align: 32, offset: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1121, file: !1007, line: 127, baseType: !1111, size: 32, align: 32, offset: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !1121, file: !1007, line: 128, baseType: !1111, size: 32, align: 32, offset: 96)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "bound_left", scope: !1121, file: !1007, line: 167, baseType: !1128, size: 32, align: 32, offset: 128)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1017, line: 51, baseType: !1105)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "bound_top", scope: !1121, file: !1007, line: 168, baseType: !1128, size: 32, align: 32, offset: 160)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "bound_right", scope: !1121, file: !1007, line: 169, baseType: !1128, size: 32, align: 32, offset: 192)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "bound_bottom", scope: !1121, file: !1007, line: 170, baseType: !1128, size: 32, align: 32, offset: 224)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1121, file: !1007, line: 182, baseType: !1128, size: 32, align: 32, offset: 256)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64, align: 64)
!1134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1135)
!1135 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1136, line: 221, size: 32, align: 8, elements: !1137)
!1136 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1137 = !{!1138}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1135, file: !1136, line: 221, baseType: !1128, size: 32, align: 32)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1103)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVMasteringDisplayMetadata", file: !1143, line: 69, baseType: !1144)
!1143 = !DIFile(filename: "./libavutil/mastering_display_metadata.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVMasteringDisplayMetadata", file: !1143, line: 38, size: 704, align: 32, elements: !1145)
!1145 = !{!1146, !1151, !1154, !1155, !1156, !1157}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "display_primaries", scope: !1144, file: !1143, line: 42, baseType: !1147, size: 384, align: 32)
!1147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 384, align: 32, elements: !1148)
!1148 = !{!1149, !1150}
!1149 = !DISubrange(count: 3)
!1150 = !DISubrange(count: 2)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !1144, file: !1143, line: 47, baseType: !1152, size: 128, align: 32, offset: 384)
!1152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 128, align: 32, elements: !1153)
!1153 = !{!1150}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "min_luminance", scope: !1144, file: !1143, line: 52, baseType: !1050, size: 64, align: 32, offset: 512)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "max_luminance", scope: !1144, file: !1143, line: 57, baseType: !1050, size: 64, align: 32, offset: 576)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "has_primaries", scope: !1144, file: !1143, line: 62, baseType: !1041, size: 32, align: 32, offset: 640)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "has_luminance", scope: !1144, file: !1143, line: 67, baseType: !1041, size: 32, align: 32, offset: 672)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64, align: 64)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVContentLightMetadata", file: !1143, line: 108, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVContentLightMetadata", file: !1143, line: 98, size: 64, align: 32, elements: !1161)
!1161 = !{!1162, !1163}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "MaxCLL", scope: !1160, file: !1143, line: 102, baseType: !1105, size: 32, align: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "MaxFALL", scope: !1160, file: !1143, line: 107, baseType: !1105, size: 32, align: 32, offset: 32)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64, align: 64)
!1165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!1166 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !1136, line: 222, size: 16, align: 8, elements: !1167)
!1167 = !{!1168}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1166, file: !1136, line: 222, baseType: !1169, size: 16, align: 16)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1017, line: 49, baseType: !1170)
!1170 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64, align: 64)
!1172 = !{!1173, !1177, !1179, !1180, !1181, !1194, !1217, !1218, !1222, !1250, !1254, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2366, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2402, !2494, !2496, !2497, !2498, !2502, !2503, !2504, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2519, !2520, !2521, !2522, !2527, !2528, !2529, !2531, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2543, !2544, !2545, !2547, !2549, !2560, !2562}
!1173 = distinct !DIGlobalVariable(name: "program_name", scope: !0, file: !47, line: 81, type: !1174, isLocal: false, isDefinition: true, variable: [8 x i8]* @program_name)
!1174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 64, align: 8, elements: !1175)
!1175 = !{!1176}
!1176 = !DISubrange(count: 8)
!1177 = distinct !DIGlobalVariable(name: "program_birth_year", scope: !0, file: !47, line: 82, type: !1178, isLocal: false, isDefinition: true, variable: i32* @program_birth_year)
!1178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1179 = distinct !DIGlobalVariable(name: "print_format", scope: !0, file: !47, line: 118, type: !1014, isLocal: true, isDefinition: true, variable: i8** @print_format)
!1180 = distinct !DIGlobalVariable(name: "show_data_hash", scope: !0, file: !47, line: 120, type: !1014, isLocal: true, isDefinition: true, variable: i8** @show_data_hash)
!1181 = distinct !DIGlobalVariable(name: "read_intervals", scope: !0, file: !47, line: 130, type: !1182, isLocal: true, isDefinition: true, variable: %struct.ReadInterval** @read_intervals)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64, align: 64)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReadInterval", file: !47, line: 128, baseType: !1184)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReadInterval", file: !47, line: 122, size: 384, align: 64, elements: !1185)
!1185 = !{!1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1184, file: !47, line: 123, baseType: !1041, size: 32, align: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1184, file: !47, line: 124, baseType: !1019, size: 64, align: 64, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1184, file: !47, line: 124, baseType: !1019, size: 64, align: 64, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "has_start", scope: !1184, file: !47, line: 125, baseType: !1041, size: 32, align: 32, offset: 192)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "has_end", scope: !1184, file: !47, line: 125, baseType: !1041, size: 32, align: 32, offset: 224)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "start_is_offset", scope: !1184, file: !47, line: 126, baseType: !1041, size: 32, align: 32, offset: 256)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "end_is_offset", scope: !1184, file: !47, line: 126, baseType: !1041, size: 32, align: 32, offset: 288)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "duration_frames", scope: !1184, file: !47, line: 127, baseType: !1041, size: 32, align: 32, offset: 320)
!1194 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !47, line: 249, type: !1195, isLocal: true, isDefinition: true, variable: %struct.OptionDef** @options)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64, align: 64)
!1196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1197)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "OptionDef", file: !1198, line: 190, baseType: !1199)
!1198 = !DIFile(filename: "fftools/cmdutils.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OptionDef", file: !1198, line: 158, size: 320, align: 64, elements: !1200)
!1200 = !{!1201, !1202, !1203, !1215, !1216}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1199, file: !1198, line: 159, baseType: !1027, size: 64, align: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1199, file: !1198, line: 160, baseType: !1041, size: 32, align: 32, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1199, file: !1198, line: 187, baseType: !1204, size: 64, align: 64, offset: 128)
!1204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1199, file: !1198, line: 183, size: 64, align: 64, elements: !1205)
!1205 = !{!1206, !1207, !1211}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "dst_ptr", scope: !1204, file: !1198, line: 184, baseType: !1013, size: 64, align: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg", scope: !1204, file: !1198, line: 185, baseType: !1208, size: 64, align: 64)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64, align: 64)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!1041, !1013, !1027, !1027}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1204, file: !1198, line: 186, baseType: !1212, size: 64, align: 64)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1213, line: 216, baseType: !1214)
!1213 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1214 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1199, file: !1198, line: 188, baseType: !1027, size: 64, align: 64, offset: 192)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "argname", scope: !1199, file: !1198, line: 189, baseType: !1027, size: 64, align: 64, offset: 256)
!1217 = distinct !DIGlobalVariable(name: "input_filename", scope: !0, file: !47, line: 252, type: !1027, isLocal: true, isDefinition: true, variable: i8** @input_filename)
!1218 = distinct !DIGlobalVariable(name: "hash", scope: !0, file: !47, line: 255, type: !1219, isLocal: true, isDefinition: true, variable: %struct.AVHashContext** @hash)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64, align: 64)
!1220 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVHashContext", file: !1221, line: 116, flags: DIFlagFwdDecl)
!1221 = !DIFile(filename: "./libavutil/hash.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1222 = distinct !DIGlobalVariable(name: "log_mutex", scope: !0, file: !47, line: 282, type: !1223, isLocal: false, isDefinition: true, variable: %union.pthread_mutex_t* @log_mutex)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !1224, line: 128, baseType: !1225)
!1224 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1225 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1224, line: 90, size: 320, align: 64, elements: !1226)
!1226 = !{!1227, !1245, !1249}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !1225, file: !1224, line: 125, baseType: !1228, size: 320, align: 64)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !1224, line: 92, size: 320, align: 64, elements: !1229)
!1229 = !{!1230, !1231, !1232, !1233, !1234, !1235, !1237, !1238}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !1228, file: !1224, line: 94, baseType: !1041, size: 32, align: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1228, file: !1224, line: 95, baseType: !1105, size: 32, align: 32, offset: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !1228, file: !1224, line: 96, baseType: !1041, size: 32, align: 32, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !1228, file: !1224, line: 98, baseType: !1105, size: 32, align: 32, offset: 96)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !1228, file: !1224, line: 102, baseType: !1041, size: 32, align: 32, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !1228, file: !1224, line: 104, baseType: !1236, size: 16, align: 16, offset: 160)
!1236 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !1228, file: !1224, line: 105, baseType: !1236, size: 16, align: 16, offset: 176)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !1228, file: !1224, line: 106, baseType: !1239, size: 128, align: 64, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !1224, line: 79, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !1224, line: 75, size: 128, align: 64, elements: !1241)
!1241 = !{!1242, !1244}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !1240, file: !1224, line: 77, baseType: !1243, size: 64, align: 64)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !1240, file: !1224, line: 78, baseType: !1243, size: 64, align: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !1225, file: !1224, line: 126, baseType: !1246, size: 320, align: 8)
!1246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 320, align: 8, elements: !1247)
!1247 = !{!1248}
!1248 = !DISubrange(count: 40)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !1225, file: !1224, line: 127, baseType: !1018, size: 64, align: 64)
!1250 = distinct !DIGlobalVariable(name: "real_options", scope: !0, file: !47, line: 3485, type: !1251, isLocal: true, isDefinition: true, variable: <{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef }>* @real_options)
!1251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1196, size: 20800, align: 64, elements: !1252)
!1252 = !{!1253}
!1253 = !DISubrange(count: 65)
!1254 = distinct !DIGlobalVariable(name: "iformat", scope: !0, file: !47, line: 253, type: !1255, isLocal: true, isDefinition: true, variable: %struct.AVInputFormat** @iformat)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64, align: 64)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVInputFormat", file: !965, line: 777, baseType: !1257)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVInputFormat", file: !965, line: 633, size: 1344, align: 64, elements: !1258)
!1258 = !{!1259, !1260, !1261, !1262, !1263, !1269, !1270, !1271, !1273, !1274, !1275, !1288, !2323, !2324, !2325, !2329, !2333, !2334, !2335, !2339, !2340, !2341}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1257, file: !965, line: 638, baseType: !1027, size: 64, align: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1257, file: !965, line: 645, baseType: !1027, size: 64, align: 64, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1257, file: !965, line: 652, baseType: !1041, size: 32, align: 32, offset: 128)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1257, file: !965, line: 659, baseType: !1027, size: 64, align: 64, offset: 192)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1257, file: !965, line: 661, baseType: !1264, size: 64, align: 64, offset: 256)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64, align: 64)
!1265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1266)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64, align: 64)
!1267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1268)
!1268 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecTag", file: !965, line: 443, flags: DIFlagFwdDecl)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1257, file: !965, line: 663, baseType: !1107, size: 64, align: 64, offset: 320)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1257, file: !965, line: 670, baseType: !1027, size: 64, align: 64, offset: 384)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1257, file: !965, line: 679, baseType: !1272, size: 64, align: 64, offset: 448)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64, align: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "raw_codec_id", scope: !1257, file: !965, line: 684, baseType: !1041, size: 32, align: 32, offset: 512)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1257, file: !965, line: 689, baseType: !1041, size: 32, align: 32, offset: 544)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "read_probe", scope: !1257, file: !965, line: 696, baseType: !1276, size: 64, align: 64, offset: 576)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64, align: 64)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!1041, !1279}
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64, align: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProbeData", file: !965, line: 453, baseType: !1281)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProbeData", file: !965, line: 448, size: 256, align: 64, elements: !1282)
!1282 = !{!1283, !1284, !1286, !1287}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1281, file: !965, line: 449, baseType: !1027, size: 64, align: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1281, file: !965, line: 450, baseType: !1285, size: 64, align: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64, align: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !1281, file: !965, line: 451, baseType: !1041, size: 32, align: 32, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1281, file: !965, line: 452, baseType: !1027, size: 64, align: 64, offset: 192)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !1257, file: !965, line: 703, baseType: !1289, size: 64, align: 64, offset: 640)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64, align: 64)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!1041, !1292}
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64, align: 64)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatContext", file: !965, line: 1337, size: 11968, align: 64, elements: !1294)
!1294 = !{!1295, !1296, !1297, !1509, !1510, !1573, !1574, !1575, !2200, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2254, !2255, !2256, !2257, !2258, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2289, !2290, !2293, !2294, !2295, !2296, !2297, !2298, !2300, !2301, !2302, !2303, !2311, !2312, !2316, !2320, !2321, !2322}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1293, file: !965, line: 1342, baseType: !1107, size: 64, align: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "iformat", scope: !1293, file: !965, line: 1349, baseType: !1272, size: 64, align: 64, offset: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "oformat", scope: !1293, file: !965, line: 1356, baseType: !1298, size: 64, align: 64, offset: 128)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, align: 64)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOutputFormat", file: !965, line: 497, size: 1600, align: 64, elements: !1300)
!1300 = !{!1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1352, !1353, !1357, !1361, !1365, !1369, !1456, !1474, !1496, !1497, !1498, !1499, !1503}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1299, file: !965, line: 498, baseType: !1027, size: 64, align: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1299, file: !965, line: 504, baseType: !1027, size: 64, align: 64, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1299, file: !965, line: 505, baseType: !1027, size: 64, align: 64, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1299, file: !965, line: 506, baseType: !1027, size: 64, align: 64, offset: 192)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1299, file: !965, line: 508, baseType: !92, size: 32, align: 32, offset: 256)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1299, file: !965, line: 509, baseType: !92, size: 32, align: 32, offset: 288)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1299, file: !965, line: 510, baseType: !92, size: 32, align: 32, offset: 320)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1299, file: !965, line: 517, baseType: !1041, size: 32, align: 32, offset: 352)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1299, file: !965, line: 523, baseType: !1264, size: 64, align: 64, offset: 384)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1299, file: !965, line: 526, baseType: !1107, size: 64, align: 64, offset: 448)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1299, file: !965, line: 535, baseType: !1298, size: 64, align: 64, offset: 512)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1299, file: !965, line: 539, baseType: !1041, size: 32, align: 32, offset: 576)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !1299, file: !965, line: 541, baseType: !1289, size: 64, align: 64, offset: 640)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1299, file: !965, line: 549, baseType: !1315, size: 64, align: 64, offset: 704)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!1041, !1292, !1318}
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64, align: 64)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !93, line: 1499, baseType: !1320)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !93, line: 1445, size: 704, align: 64, elements: !1321)
!1321 = !{!1322, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1348, !1349, !1350, !1351}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1320, file: !93, line: 1451, baseType: !1323, size: 64, align: 64)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64, align: 64)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1325, line: 94, baseType: !1326)
!1325 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1325, line: 81, size: 192, align: 64, elements: !1327)
!1327 = !{!1328, !1332, !1333}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1326, file: !1325, line: 82, baseType: !1329, size: 64, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64, align: 64)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1325, line: 73, baseType: !1331)
!1331 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1325, line: 73, flags: DIFlagFwdDecl)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1326, file: !1325, line: 89, baseType: !1102, size: 64, align: 64, offset: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1326, file: !1325, line: 93, baseType: !1041, size: 32, align: 32, offset: 128)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1320, file: !93, line: 1461, baseType: !1019, size: 64, align: 64, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1320, file: !93, line: 1467, baseType: !1019, size: 64, align: 64, offset: 128)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1320, file: !93, line: 1468, baseType: !1102, size: 64, align: 64, offset: 192)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1320, file: !93, line: 1469, baseType: !1041, size: 32, align: 32, offset: 256)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1320, file: !93, line: 1470, baseType: !1041, size: 32, align: 32, offset: 288)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1320, file: !93, line: 1474, baseType: !1041, size: 32, align: 32, offset: 320)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1320, file: !93, line: 1479, baseType: !1341, size: 64, align: 64, offset: 384)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64, align: 64)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !93, line: 1415, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !93, line: 1411, size: 128, align: 64, elements: !1344)
!1344 = !{!1345, !1346, !1347}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1343, file: !93, line: 1412, baseType: !1102, size: 64, align: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1343, file: !93, line: 1413, baseType: !1041, size: 32, align: 32, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1343, file: !93, line: 1414, baseType: !552, size: 32, align: 32, offset: 96)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1320, file: !93, line: 1480, baseType: !1041, size: 32, align: 32, offset: 448)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1320, file: !93, line: 1486, baseType: !1019, size: 64, align: 64, offset: 512)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1320, file: !93, line: 1488, baseType: !1019, size: 64, align: 64, offset: 576)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1320, file: !93, line: 1497, baseType: !1019, size: 64, align: 64, offset: 640)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "write_trailer", scope: !1299, file: !965, line: 550, baseType: !1289, size: 64, align: 64, offset: 768)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "interleave_packet", scope: !1299, file: !965, line: 554, baseType: !1354, size: 64, align: 64, offset: 832)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64, align: 64)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!1041, !1292, !1318, !1318, !1041}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "query_codec", scope: !1299, file: !965, line: 563, baseType: !1358, size: 64, align: 64, offset: 896)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64, align: 64)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!1041, !92, !1041}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "get_output_timestamp", scope: !1299, file: !965, line: 565, baseType: !1362, size: 64, align: 64, offset: 960)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64, align: 64)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{null, !1292, !1041, !1171, !1171}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "control_message", scope: !1299, file: !965, line: 570, baseType: !1366, size: 64, align: 64, offset: 1024)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64, align: 64)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!1041, !1292, !1041, !1013, !1212}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "write_uncoded_frame", scope: !1299, file: !965, line: 581, baseType: !1370, size: 64, align: 64, offset: 1088)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64, align: 64)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!1041, !1292, !1041, !1373, !1105}
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64, align: 64)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !594, line: 646, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !594, line: 268, size: 4288, align: 64, elements: !1377)
!1377 = !{!1378, !1380, !1382, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1410, !1412, !1413, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1376, file: !594, line: 282, baseType: !1379, size: 512, align: 64)
!1379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1102, size: 512, align: 64, elements: !1175)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1376, file: !594, line: 299, baseType: !1381, size: 256, align: 32, offset: 512)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 256, align: 32, elements: !1175)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1376, file: !594, line: 315, baseType: !1383, size: 64, align: 64, offset: 768)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64, align: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1376, file: !594, line: 326, baseType: !1041, size: 32, align: 32, offset: 832)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1376, file: !594, line: 326, baseType: !1041, size: 32, align: 32, offset: 864)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1376, file: !594, line: 334, baseType: !1041, size: 32, align: 32, offset: 896)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1376, file: !594, line: 341, baseType: !1041, size: 32, align: 32, offset: 928)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1376, file: !594, line: 346, baseType: !1041, size: 32, align: 32, offset: 960)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1376, file: !594, line: 351, baseType: !582, size: 32, align: 32, offset: 992)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1376, file: !594, line: 356, baseType: !1050, size: 64, align: 32, offset: 1024)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1376, file: !594, line: 361, baseType: !1019, size: 64, align: 64, offset: 1088)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1376, file: !594, line: 369, baseType: !1019, size: 64, align: 64, offset: 1152)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1376, file: !594, line: 377, baseType: !1019, size: 64, align: 64, offset: 1216)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1376, file: !594, line: 382, baseType: !1041, size: 32, align: 32, offset: 1280)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1376, file: !594, line: 386, baseType: !1041, size: 32, align: 32, offset: 1312)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1376, file: !594, line: 391, baseType: !1041, size: 32, align: 32, offset: 1344)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1376, file: !594, line: 396, baseType: !1013, size: 64, align: 64, offset: 1408)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1376, file: !594, line: 403, baseType: !1399, size: 512, align: 64, offset: 1472)
!1399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1400, size: 512, align: 64, elements: !1175)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1017, line: 55, baseType: !1214)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1376, file: !594, line: 410, baseType: !1041, size: 32, align: 32, offset: 1984)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1376, file: !594, line: 415, baseType: !1041, size: 32, align: 32, offset: 2016)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1376, file: !594, line: 420, baseType: !1041, size: 32, align: 32, offset: 2048)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1376, file: !594, line: 425, baseType: !1041, size: 32, align: 32, offset: 2080)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1376, file: !594, line: 435, baseType: !1019, size: 64, align: 64, offset: 2112)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1376, file: !594, line: 440, baseType: !1041, size: 32, align: 32, offset: 2176)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1376, file: !594, line: 445, baseType: !1400, size: 64, align: 64, offset: 2240)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1376, file: !594, line: 459, baseType: !1409, size: 512, align: 64, offset: 2304)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1323, size: 512, align: 64, elements: !1175)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1376, file: !594, line: 473, baseType: !1411, size: 64, align: 64, offset: 2816)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64, align: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1376, file: !594, line: 477, baseType: !1041, size: 32, align: 32, offset: 2880)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1376, file: !594, line: 479, baseType: !1414, size: 64, align: 64, offset: 2944)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64, align: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64, align: 64)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !594, line: 207, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !594, line: 201, size: 320, align: 64, elements: !1418)
!1418 = !{!1419, !1420, !1421, !1422, !1427}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1417, file: !594, line: 202, baseType: !593, size: 32, align: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1417, file: !594, line: 203, baseType: !1102, size: 64, align: 64, offset: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1417, file: !594, line: 204, baseType: !1041, size: 32, align: 32, offset: 128)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1417, file: !594, line: 205, baseType: !1423, size: 64, align: 64, offset: 192)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64, align: 64)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1425, line: 86, baseType: !1426)
!1425 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1426 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1425, line: 86, flags: DIFlagFwdDecl)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1417, file: !594, line: 206, baseType: !1323, size: 64, align: 64, offset: 256)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1376, file: !594, line: 480, baseType: !1041, size: 32, align: 32, offset: 3008)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1376, file: !594, line: 505, baseType: !1041, size: 32, align: 32, offset: 3040)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1376, file: !594, line: 512, baseType: !617, size: 32, align: 32, offset: 3072)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1376, file: !594, line: 514, baseType: !624, size: 32, align: 32, offset: 3104)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1376, file: !594, line: 516, baseType: !642, size: 32, align: 32, offset: 3136)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1376, file: !594, line: 523, baseType: !666, size: 32, align: 32, offset: 3168)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1376, file: !594, line: 525, baseType: !685, size: 32, align: 32, offset: 3200)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1376, file: !594, line: 532, baseType: !1019, size: 64, align: 64, offset: 3264)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1376, file: !594, line: 539, baseType: !1019, size: 64, align: 64, offset: 3328)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1376, file: !594, line: 547, baseType: !1019, size: 64, align: 64, offset: 3392)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1376, file: !594, line: 554, baseType: !1423, size: 64, align: 64, offset: 3456)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1376, file: !594, line: 563, baseType: !1041, size: 32, align: 32, offset: 3520)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1376, file: !594, line: 572, baseType: !1041, size: 32, align: 32, offset: 3552)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1376, file: !594, line: 581, baseType: !1041, size: 32, align: 32, offset: 3584)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1376, file: !594, line: 588, baseType: !1443, size: 64, align: 64, offset: 3648)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64, align: 64)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1017, line: 36, baseType: !1445)
!1445 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1376, file: !594, line: 593, baseType: !1041, size: 32, align: 32, offset: 3712)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1376, file: !594, line: 596, baseType: !1041, size: 32, align: 32, offset: 3744)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1376, file: !594, line: 599, baseType: !1323, size: 64, align: 64, offset: 3776)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1376, file: !594, line: 605, baseType: !1323, size: 64, align: 64, offset: 3840)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1376, file: !594, line: 616, baseType: !1323, size: 64, align: 64, offset: 3904)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1376, file: !594, line: 626, baseType: !1212, size: 64, align: 64, offset: 3968)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1376, file: !594, line: 627, baseType: !1212, size: 64, align: 64, offset: 4032)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1376, file: !594, line: 628, baseType: !1212, size: 64, align: 64, offset: 4096)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1376, file: !594, line: 629, baseType: !1212, size: 64, align: 64, offset: 4160)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1376, file: !594, line: 645, baseType: !1323, size: 64, align: 64, offset: 4224)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1299, file: !965, line: 587, baseType: !1457, size: 64, align: 64, offset: 1152)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64, align: 64)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!1041, !1292, !1460}
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64, align: 64)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceInfoList", file: !1462, line: 460, size: 128, align: 64, elements: !1463)
!1462 = !DIFile(filename: "./libavdevice/avdevice.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1463 = !{!1464, !1472, !1473}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !1461, file: !1462, line: 461, baseType: !1465, size: 64, align: 64)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64, align: 64)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64, align: 64)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDeviceInfo", file: !1462, line: 455, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceInfo", file: !1462, line: 452, size: 128, align: 64, elements: !1469)
!1469 = !{!1470, !1471}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !1468, file: !1462, line: 453, baseType: !1014, size: 64, align: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "device_description", scope: !1468, file: !1462, line: 454, baseType: !1014, size: 64, align: 64, offset: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "nb_devices", scope: !1461, file: !1462, line: 462, baseType: !1041, size: 32, align: 32, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "default_device", scope: !1461, file: !1462, line: 463, baseType: !1041, size: 32, align: 32, offset: 96)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1299, file: !965, line: 592, baseType: !1475, size: 64, align: 64, offset: 1216)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64, align: 64)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{!1041, !1292, !1478}
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64, align: 64)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceCapabilitiesQuery", file: !1462, line: 400, size: 576, align: 64, elements: !1480)
!1480 = !{!1481, !1482, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1479, file: !1462, line: 401, baseType: !1107, size: 64, align: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "device_context", scope: !1479, file: !1462, line: 402, baseType: !1483, size: 64, align: 64, offset: 64)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64, align: 64)
!1484 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatContext", file: !965, line: 1947, baseType: !1293)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1479, file: !1462, line: 403, baseType: !92, size: 32, align: 32, offset: 128)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "sample_format", scope: !1479, file: !1462, line: 404, baseType: !695, size: 32, align: 32, offset: 160)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_format", scope: !1479, file: !1462, line: 405, baseType: !712, size: 32, align: 32, offset: 192)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1479, file: !1462, line: 406, baseType: !1041, size: 32, align: 32, offset: 224)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1479, file: !1462, line: 407, baseType: !1041, size: 32, align: 32, offset: 256)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1479, file: !1462, line: 408, baseType: !1019, size: 64, align: 64, offset: 320)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "window_width", scope: !1479, file: !1462, line: 409, baseType: !1041, size: 32, align: 32, offset: 384)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "window_height", scope: !1479, file: !1462, line: 410, baseType: !1041, size: 32, align: 32, offset: 416)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "frame_width", scope: !1479, file: !1462, line: 411, baseType: !1041, size: 32, align: 32, offset: 448)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "frame_height", scope: !1479, file: !1462, line: 412, baseType: !1041, size: 32, align: 32, offset: 480)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "fps", scope: !1479, file: !1462, line: 413, baseType: !1050, size: 64, align: 32, offset: 512)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1299, file: !965, line: 597, baseType: !1475, size: 64, align: 64, offset: 1280)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1299, file: !965, line: 598, baseType: !92, size: 32, align: 32, offset: 1344)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1299, file: !965, line: 608, baseType: !1289, size: 64, align: 64, offset: 1408)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "deinit", scope: !1299, file: !965, line: 617, baseType: !1500, size: 64, align: 64, offset: 1472)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64, align: 64)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{null, !1292}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "check_bitstream", scope: !1299, file: !965, line: 623, baseType: !1504, size: 64, align: 64, offset: 1536)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64, align: 64)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!1041, !1292, !1507}
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64, align: 64)
!1508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1319)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1293, file: !965, line: 1365, baseType: !1013, size: 64, align: 64, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1293, file: !965, line: 1379, baseType: !1511, size: 64, align: 64, offset: 256)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64, align: 64)
!1512 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOContext", file: !912, line: 352, baseType: !1513)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOContext", file: !912, line: 161, size: 2112, align: 64, elements: !1514)
!1514 = !{!1515, !1516, !1517, !1518, !1519, !1520, !1521, !1525, !1526, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1540, !1541, !1545, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1563, !1564, !1565, !1566, !1570, !1571, !1572}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1513, file: !912, line: 174, baseType: !1107, size: 64, align: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1513, file: !912, line: 226, baseType: !1285, size: 64, align: 64, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !1513, file: !912, line: 227, baseType: !1041, size: 32, align: 32, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1513, file: !912, line: 228, baseType: !1285, size: 64, align: 64, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1513, file: !912, line: 229, baseType: !1285, size: 64, align: 64, offset: 256)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1513, file: !912, line: 233, baseType: !1013, size: 64, align: 64, offset: 320)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1513, file: !912, line: 235, baseType: !1522, size: 64, align: 64, offset: 384)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64, align: 64)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!1041, !1013, !1102, !1041}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1513, file: !912, line: 236, baseType: !1522, size: 64, align: 64, offset: 448)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !1513, file: !912, line: 237, baseType: !1527, size: 64, align: 64, offset: 512)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64, align: 64)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!1019, !1013, !1019, !1041}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1513, file: !912, line: 238, baseType: !1019, size: 64, align: 64, offset: 576)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "eof_reached", scope: !1513, file: !912, line: 239, baseType: !1041, size: 32, align: 32, offset: 640)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "write_flag", scope: !1513, file: !912, line: 240, baseType: !1041, size: 32, align: 32, offset: 672)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "max_packet_size", scope: !1513, file: !912, line: 241, baseType: !1041, size: 32, align: 32, offset: 704)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !1513, file: !912, line: 242, baseType: !1214, size: 64, align: 64, offset: 768)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_ptr", scope: !1513, file: !912, line: 243, baseType: !1285, size: 64, align: 64, offset: 832)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "update_checksum", scope: !1513, file: !912, line: 244, baseType: !1537, size: 64, align: 64, offset: 896)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64, align: 64)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!1214, !1214, !1139, !1105}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1513, file: !912, line: 245, baseType: !1041, size: 32, align: 32, offset: 960)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1513, file: !912, line: 249, baseType: !1542, size: 64, align: 64, offset: 1024)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64, align: 64)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!1041, !1013, !1041}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1513, file: !912, line: 255, baseType: !1546, size: 64, align: 64, offset: 1088)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64, align: 64)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!1019, !1013, !1041, !1019, !1041}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "seekable", scope: !1513, file: !912, line: 260, baseType: !1041, size: 32, align: 32, offset: 1152)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "maxsize", scope: !1513, file: !912, line: 266, baseType: !1019, size: 64, align: 64, offset: 1216)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "direct", scope: !1513, file: !912, line: 273, baseType: !1041, size: 32, align: 32, offset: 1280)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_read", scope: !1513, file: !912, line: 279, baseType: !1019, size: 64, align: 64, offset: 1344)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "seek_count", scope: !1513, file: !912, line: 285, baseType: !1041, size: 32, align: 32, offset: 1408)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "writeout_count", scope: !1513, file: !912, line: 291, baseType: !1041, size: 32, align: 32, offset: 1440)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "orig_buffer_size", scope: !1513, file: !912, line: 298, baseType: !1041, size: 32, align: 32, offset: 1472)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_threshold", scope: !1513, file: !912, line: 304, baseType: !1041, size: 32, align: 32, offset: 1504)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1513, file: !912, line: 309, baseType: !1027, size: 64, align: 64, offset: 1536)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1513, file: !912, line: 314, baseType: !1027, size: 64, align: 64, offset: 1600)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "write_data_type", scope: !1513, file: !912, line: 319, baseType: !1560, size: 64, align: 64, offset: 1664)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64, align: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!1041, !1013, !1102, !1041, !911, !1019}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_boundary_point", scope: !1513, file: !912, line: 326, baseType: !1041, size: 32, align: 32, offset: 1728)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "current_type", scope: !1513, file: !912, line: 331, baseType: !911, size: 32, align: 32, offset: 1760)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !1513, file: !912, line: 332, baseType: !1019, size: 64, align: 64, offset: 1792)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_get", scope: !1513, file: !912, line: 338, baseType: !1567, size: 64, align: 64, offset: 1856)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64, align: 64)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!1041, !1013}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !1513, file: !912, line: 340, baseType: !1019, size: 64, align: 64, offset: 1920)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr_max", scope: !1513, file: !912, line: 346, baseType: !1285, size: 64, align: 64, offset: 1984)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "min_packet_size", scope: !1513, file: !912, line: 351, baseType: !1041, size: 32, align: 32, offset: 2048)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_flags", scope: !1293, file: !965, line: 1386, baseType: !1041, size: 32, align: 32, offset: 320)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streams", scope: !1293, file: !965, line: 1393, baseType: !1105, size: 32, align: 32, offset: 352)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !1293, file: !965, line: 1405, baseType: !1576, size: 64, align: 64, offset: 384)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64, align: 64)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64, align: 64)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStream", file: !965, line: 1223, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStream", file: !965, line: 865, size: 6144, align: 64, elements: !1580)
!1580 = !{!1581, !1582, !1583, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2049, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2148, !2154, !2155, !2159, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2191, !2192, !2193, !2194, !2195, !2196}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1579, file: !965, line: 866, baseType: !1041, size: 32, align: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1579, file: !965, line: 872, baseType: !1041, size: 32, align: 32, offset: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1579, file: !965, line: 878, baseType: !1584, size: 64, align: 64, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !93, line: 3360, baseType: !1586)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !93, line: 1556, size: 8448, align: 64, elements: !1587)
!1587 = !{!1588, !1589, !1590, !1591, !1724, !1725, !1726, !1727, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1753, !1757, !1758, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1937, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1586, file: !93, line: 1561, baseType: !1107, size: 64, align: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1586, file: !93, line: 1562, baseType: !1041, size: 32, align: 32, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1586, file: !93, line: 1564, baseType: !920, size: 32, align: 32, offset: 96)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1586, file: !93, line: 1565, baseType: !1592, size: 64, align: 64, offset: 128)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64, align: 64)
!1593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !93, line: 3468, size: 1984, align: 64, elements: !1595)
!1595 = !{!1596, !1597, !1598, !1599, !1600, !1601, !1604, !1607, !1609, !1612, !1615, !1616, !1617, !1625, !1626, !1627, !1629, !1633, !1639, !1644, !1648, !1649, !1689, !1696, !1700, !1701, !1705, !1709, !1713, !1717, !1718, !1719}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1594, file: !93, line: 3475, baseType: !1027, size: 64, align: 64)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1594, file: !93, line: 3480, baseType: !1027, size: 64, align: 64, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1594, file: !93, line: 3481, baseType: !920, size: 32, align: 32, offset: 128)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1594, file: !93, line: 3482, baseType: !92, size: 32, align: 32, offset: 160)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1594, file: !93, line: 3487, baseType: !1041, size: 32, align: 32, offset: 192)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1594, file: !93, line: 3488, baseType: !1602, size: 64, align: 64, offset: 256)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64, align: 64)
!1603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1050)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1594, file: !93, line: 3489, baseType: !1605, size: 64, align: 64, offset: 320)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64, align: 64)
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !712)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1594, file: !93, line: 3490, baseType: !1608, size: 64, align: 64, offset: 384)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64, align: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1594, file: !93, line: 3491, baseType: !1610, size: 64, align: 64, offset: 448)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64, align: 64)
!1611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !695)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1594, file: !93, line: 3492, baseType: !1613, size: 64, align: 64, offset: 512)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64, align: 64)
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1594, file: !93, line: 3493, baseType: !1103, size: 8, align: 8, offset: 576)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1594, file: !93, line: 3494, baseType: !1107, size: 64, align: 64, offset: 640)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1594, file: !93, line: 3495, baseType: !1618, size: 64, align: 64, offset: 704)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64, align: 64)
!1619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1620)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !93, line: 3404, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !93, line: 3401, size: 128, align: 64, elements: !1622)
!1622 = !{!1623, !1624}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1621, file: !93, line: 3402, baseType: !1041, size: 32, align: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1621, file: !93, line: 3403, baseType: !1027, size: 64, align: 64, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1594, file: !93, line: 3507, baseType: !1027, size: 64, align: 64, offset: 768)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1594, file: !93, line: 3516, baseType: !1041, size: 32, align: 32, offset: 832)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1594, file: !93, line: 3517, baseType: !1628, size: 64, align: 64, offset: 896)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64, align: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1594, file: !93, line: 3527, baseType: !1630, size: 64, align: 64, offset: 960)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64, align: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{!1041, !1584}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1594, file: !93, line: 3535, baseType: !1634, size: 64, align: 64, offset: 1024)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64, align: 64)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{!1041, !1584, !1637}
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64, align: 64)
!1638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1585)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1594, file: !93, line: 3541, baseType: !1640, size: 64, align: 64, offset: 1088)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64, align: 64)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1642)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !93, line: 3461, baseType: !1643)
!1643 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !93, line: 3461, flags: DIFlagFwdDecl)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1594, file: !93, line: 3549, baseType: !1645, size: 64, align: 64, offset: 1152)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64, align: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{null, !1628}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1594, file: !93, line: 3551, baseType: !1630, size: 64, align: 64, offset: 1216)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1594, file: !93, line: 3552, baseType: !1650, size: 64, align: 64, offset: 1280)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64, align: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!1041, !1584, !1102, !1041, !1653}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64, align: 64)
!1654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1655)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !93, line: 3920, size: 256, align: 64, elements: !1656)
!1656 = !{!1657, !1658, !1659, !1660, !1661, !1688}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1655, file: !93, line: 3921, baseType: !1169, size: 16, align: 16)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1655, file: !93, line: 3922, baseType: !1128, size: 32, align: 32, offset: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1655, file: !93, line: 3923, baseType: !1128, size: 32, align: 32, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1655, file: !93, line: 3924, baseType: !1105, size: 32, align: 32, offset: 96)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1655, file: !93, line: 3925, baseType: !1662, size: 64, align: 64, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64, align: 64)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64, align: 64)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !93, line: 3918, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !93, line: 3885, size: 1600, align: 64, elements: !1666)
!1666 = !{!1667, !1668, !1669, !1670, !1671, !1672, !1678, !1682, !1684, !1685, !1686, !1687}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1665, file: !93, line: 3886, baseType: !1041, size: 32, align: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1665, file: !93, line: 3887, baseType: !1041, size: 32, align: 32, offset: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1665, file: !93, line: 3888, baseType: !1041, size: 32, align: 32, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1665, file: !93, line: 3889, baseType: !1041, size: 32, align: 32, offset: 96)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1665, file: !93, line: 3890, baseType: !1041, size: 32, align: 32, offset: 128)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1665, file: !93, line: 3897, baseType: !1673, size: 768, align: 64, offset: 192)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !93, line: 3858, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !93, line: 3853, size: 768, align: 64, elements: !1675)
!1675 = !{!1676, !1677}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1674, file: !93, line: 3855, baseType: !1379, size: 512, align: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1674, file: !93, line: 3857, baseType: !1381, size: 256, align: 32, offset: 512)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1665, file: !93, line: 3903, baseType: !1679, size: 256, align: 64, offset: 960)
!1679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1102, size: 256, align: 64, elements: !1680)
!1680 = !{!1681}
!1681 = !DISubrange(count: 4)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1665, file: !93, line: 3904, baseType: !1683, size: 128, align: 32, offset: 1216)
!1683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 128, align: 32, elements: !1680)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1665, file: !93, line: 3906, baseType: !929, size: 32, align: 32, offset: 1344)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1665, file: !93, line: 3908, baseType: !1014, size: 64, align: 64, offset: 1408)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1665, file: !93, line: 3915, baseType: !1014, size: 64, align: 64, offset: 1472)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1665, file: !93, line: 3917, baseType: !1041, size: 32, align: 32, offset: 1536)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1655, file: !93, line: 3926, baseType: !1019, size: 64, align: 64, offset: 192)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1594, file: !93, line: 3564, baseType: !1690, size: 64, align: 64, offset: 1344)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64, align: 64)
!1691 = !DISubroutineType(types: !1692)
!1692 = !{!1041, !1584, !1318, !1693, !1695}
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64, align: 64)
!1694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1375)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64, align: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1594, file: !93, line: 3566, baseType: !1697, size: 64, align: 64, offset: 1408)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64, align: 64)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{!1041, !1584, !1013, !1695, !1318}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1594, file: !93, line: 3567, baseType: !1630, size: 64, align: 64, offset: 1472)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1594, file: !93, line: 3576, baseType: !1702, size: 64, align: 64, offset: 1536)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64, align: 64)
!1703 = !DISubroutineType(types: !1704)
!1704 = !{!1041, !1584, !1693}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1594, file: !93, line: 3577, baseType: !1706, size: 64, align: 64, offset: 1600)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64, align: 64)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!1041, !1584, !1318}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1594, file: !93, line: 3584, baseType: !1710, size: 64, align: 64, offset: 1664)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64, align: 64)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!1041, !1584, !1374}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1594, file: !93, line: 3589, baseType: !1714, size: 64, align: 64, offset: 1728)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64, align: 64)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{null, !1584}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1594, file: !93, line: 3594, baseType: !1041, size: 32, align: 32, offset: 1792)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1594, file: !93, line: 3600, baseType: !1027, size: 64, align: 64, offset: 1856)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1594, file: !93, line: 3609, baseType: !1720, size: 64, align: 64, offset: 1920)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64, align: 64)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64, align: 64)
!1722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1723)
!1723 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !93, line: 3609, flags: DIFlagFwdDecl)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1586, file: !93, line: 1566, baseType: !92, size: 32, align: 32, offset: 192)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1586, file: !93, line: 1581, baseType: !1105, size: 32, align: 32, offset: 224)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1586, file: !93, line: 1583, baseType: !1013, size: 64, align: 64, offset: 256)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1586, file: !93, line: 1591, baseType: !1728, size: 64, align: 64, offset: 320)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64, align: 64)
!1729 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !93, line: 1532, flags: DIFlagFwdDecl)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1586, file: !93, line: 1598, baseType: !1013, size: 64, align: 64, offset: 384)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1586, file: !93, line: 1606, baseType: !1019, size: 64, align: 64, offset: 448)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1586, file: !93, line: 1614, baseType: !1041, size: 32, align: 32, offset: 512)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1586, file: !93, line: 1622, baseType: !1041, size: 32, align: 32, offset: 544)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1586, file: !93, line: 1628, baseType: !1041, size: 32, align: 32, offset: 576)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1586, file: !93, line: 1636, baseType: !1041, size: 32, align: 32, offset: 608)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1586, file: !93, line: 1643, baseType: !1041, size: 32, align: 32, offset: 640)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1586, file: !93, line: 1657, baseType: !1102, size: 64, align: 64, offset: 704)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1586, file: !93, line: 1658, baseType: !1041, size: 32, align: 32, offset: 768)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1586, file: !93, line: 1679, baseType: !1050, size: 64, align: 32, offset: 800)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1586, file: !93, line: 1688, baseType: !1041, size: 32, align: 32, offset: 864)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1586, file: !93, line: 1712, baseType: !1041, size: 32, align: 32, offset: 896)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1586, file: !93, line: 1729, baseType: !1041, size: 32, align: 32, offset: 928)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1586, file: !93, line: 1729, baseType: !1041, size: 32, align: 32, offset: 960)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1586, file: !93, line: 1744, baseType: !1041, size: 32, align: 32, offset: 992)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1586, file: !93, line: 1744, baseType: !1041, size: 32, align: 32, offset: 1024)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1586, file: !93, line: 1751, baseType: !1041, size: 32, align: 32, offset: 1056)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1586, file: !93, line: 1766, baseType: !712, size: 32, align: 32, offset: 1088)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1586, file: !93, line: 1791, baseType: !1749, size: 64, align: 64, offset: 1152)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64, align: 64)
!1750 = !DISubroutineType(types: !1751)
!1751 = !{null, !1752, !1693, !1695, !1041, !1041, !1041}
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64, align: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1586, file: !93, line: 1808, baseType: !1754, size: 64, align: 64, offset: 1216)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64, align: 64)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!712, !1752, !1605}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1586, file: !93, line: 1816, baseType: !1041, size: 32, align: 32, offset: 1280)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1586, file: !93, line: 1825, baseType: !1759, size: 32, align: 32, offset: 1312)
!1759 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1586, file: !93, line: 1830, baseType: !1041, size: 32, align: 32, offset: 1344)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1586, file: !93, line: 1838, baseType: !1759, size: 32, align: 32, offset: 1376)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1586, file: !93, line: 1846, baseType: !1041, size: 32, align: 32, offset: 1408)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1586, file: !93, line: 1851, baseType: !1041, size: 32, align: 32, offset: 1440)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1586, file: !93, line: 1861, baseType: !1759, size: 32, align: 32, offset: 1472)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1586, file: !93, line: 1868, baseType: !1759, size: 32, align: 32, offset: 1504)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1586, file: !93, line: 1875, baseType: !1759, size: 32, align: 32, offset: 1536)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1586, file: !93, line: 1882, baseType: !1759, size: 32, align: 32, offset: 1568)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1586, file: !93, line: 1889, baseType: !1759, size: 32, align: 32, offset: 1600)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1586, file: !93, line: 1896, baseType: !1759, size: 32, align: 32, offset: 1632)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1586, file: !93, line: 1903, baseType: !1759, size: 32, align: 32, offset: 1664)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1586, file: !93, line: 1910, baseType: !1041, size: 32, align: 32, offset: 1696)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1586, file: !93, line: 1915, baseType: !1041, size: 32, align: 32, offset: 1728)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1586, file: !93, line: 1926, baseType: !1695, size: 64, align: 64, offset: 1792)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1586, file: !93, line: 1935, baseType: !1050, size: 64, align: 32, offset: 1856)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1586, file: !93, line: 1942, baseType: !1041, size: 32, align: 32, offset: 1920)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1586, file: !93, line: 1948, baseType: !1041, size: 32, align: 32, offset: 1952)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1586, file: !93, line: 1954, baseType: !1041, size: 32, align: 32, offset: 1984)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1586, file: !93, line: 1960, baseType: !1041, size: 32, align: 32, offset: 2016)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1586, file: !93, line: 1984, baseType: !1041, size: 32, align: 32, offset: 2048)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1586, file: !93, line: 1991, baseType: !1041, size: 32, align: 32, offset: 2080)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1586, file: !93, line: 1996, baseType: !1041, size: 32, align: 32, offset: 2112)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1586, file: !93, line: 2004, baseType: !1041, size: 32, align: 32, offset: 2144)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1586, file: !93, line: 2011, baseType: !1041, size: 32, align: 32, offset: 2176)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1586, file: !93, line: 2018, baseType: !1041, size: 32, align: 32, offset: 2208)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1586, file: !93, line: 2027, baseType: !1041, size: 32, align: 32, offset: 2240)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1586, file: !93, line: 2034, baseType: !1041, size: 32, align: 32, offset: 2272)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1586, file: !93, line: 2044, baseType: !1041, size: 32, align: 32, offset: 2304)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1586, file: !93, line: 2054, baseType: !1789, size: 64, align: 64, offset: 2368)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64, align: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1586, file: !93, line: 2061, baseType: !1789, size: 64, align: 64, offset: 2432)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1586, file: !93, line: 2066, baseType: !1041, size: 32, align: 32, offset: 2496)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1586, file: !93, line: 2070, baseType: !1041, size: 32, align: 32, offset: 2528)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1586, file: !93, line: 2078, baseType: !1041, size: 32, align: 32, offset: 2560)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1586, file: !93, line: 2085, baseType: !1041, size: 32, align: 32, offset: 2592)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1586, file: !93, line: 2092, baseType: !1041, size: 32, align: 32, offset: 2624)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1586, file: !93, line: 2099, baseType: !1041, size: 32, align: 32, offset: 2656)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1586, file: !93, line: 2106, baseType: !1041, size: 32, align: 32, offset: 2688)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1586, file: !93, line: 2113, baseType: !1041, size: 32, align: 32, offset: 2720)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1586, file: !93, line: 2120, baseType: !1041, size: 32, align: 32, offset: 2752)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1586, file: !93, line: 2125, baseType: !1041, size: 32, align: 32, offset: 2784)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1586, file: !93, line: 2133, baseType: !1041, size: 32, align: 32, offset: 2816)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1586, file: !93, line: 2140, baseType: !1041, size: 32, align: 32, offset: 2848)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1586, file: !93, line: 2145, baseType: !1041, size: 32, align: 32, offset: 2880)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1586, file: !93, line: 2153, baseType: !1041, size: 32, align: 32, offset: 2912)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1586, file: !93, line: 2158, baseType: !1041, size: 32, align: 32, offset: 2944)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1586, file: !93, line: 2166, baseType: !624, size: 32, align: 32, offset: 2976)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1586, file: !93, line: 2173, baseType: !642, size: 32, align: 32, offset: 3008)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1586, file: !93, line: 2180, baseType: !666, size: 32, align: 32, offset: 3040)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1586, file: !93, line: 2187, baseType: !617, size: 32, align: 32, offset: 3072)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1586, file: !93, line: 2194, baseType: !685, size: 32, align: 32, offset: 3104)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1586, file: !93, line: 2203, baseType: !1041, size: 32, align: 32, offset: 3136)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1586, file: !93, line: 2209, baseType: !935, size: 32, align: 32, offset: 3168)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1586, file: !93, line: 2212, baseType: !1041, size: 32, align: 32, offset: 3200)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1586, file: !93, line: 2213, baseType: !1041, size: 32, align: 32, offset: 3232)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1586, file: !93, line: 2220, baseType: !695, size: 32, align: 32, offset: 3264)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1586, file: !93, line: 2232, baseType: !1041, size: 32, align: 32, offset: 3296)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1586, file: !93, line: 2243, baseType: !1041, size: 32, align: 32, offset: 3328)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1586, file: !93, line: 2249, baseType: !1041, size: 32, align: 32, offset: 3360)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1586, file: !93, line: 2256, baseType: !1041, size: 32, align: 32, offset: 3392)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1586, file: !93, line: 2263, baseType: !1400, size: 64, align: 64, offset: 3456)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1586, file: !93, line: 2270, baseType: !1400, size: 64, align: 64, offset: 3520)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1586, file: !93, line: 2277, baseType: !943, size: 32, align: 32, offset: 3584)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1586, file: !93, line: 2285, baseType: !695, size: 32, align: 32, offset: 3616)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1586, file: !93, line: 2367, baseType: !1825, size: 64, align: 64, offset: 3648)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64, align: 64)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!1041, !1752, !1374, !1041}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1586, file: !93, line: 2383, baseType: !1041, size: 32, align: 32, offset: 3712)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1586, file: !93, line: 2386, baseType: !1759, size: 32, align: 32, offset: 3744)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1586, file: !93, line: 2387, baseType: !1759, size: 32, align: 32, offset: 3776)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1586, file: !93, line: 2394, baseType: !1041, size: 32, align: 32, offset: 3808)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1586, file: !93, line: 2401, baseType: !1041, size: 32, align: 32, offset: 3840)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1586, file: !93, line: 2408, baseType: !1041, size: 32, align: 32, offset: 3872)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1586, file: !93, line: 2415, baseType: !1041, size: 32, align: 32, offset: 3904)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1586, file: !93, line: 2422, baseType: !1041, size: 32, align: 32, offset: 3936)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1586, file: !93, line: 2423, baseType: !1837, size: 64, align: 64, offset: 3968)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64, align: 64)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !93, line: 831, baseType: !1839)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !93, line: 826, size: 128, align: 32, elements: !1840)
!1840 = !{!1841, !1842, !1843, !1844}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1839, file: !93, line: 827, baseType: !1041, size: 32, align: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1839, file: !93, line: 828, baseType: !1041, size: 32, align: 32, offset: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1839, file: !93, line: 829, baseType: !1041, size: 32, align: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1839, file: !93, line: 830, baseType: !1759, size: 32, align: 32, offset: 96)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1586, file: !93, line: 2430, baseType: !1019, size: 64, align: 64, offset: 4032)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1586, file: !93, line: 2437, baseType: !1019, size: 64, align: 64, offset: 4096)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1586, file: !93, line: 2444, baseType: !1759, size: 32, align: 32, offset: 4160)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1586, file: !93, line: 2451, baseType: !1759, size: 32, align: 32, offset: 4192)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1586, file: !93, line: 2458, baseType: !1041, size: 32, align: 32, offset: 4224)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1586, file: !93, line: 2469, baseType: !1041, size: 32, align: 32, offset: 4256)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1586, file: !93, line: 2475, baseType: !1041, size: 32, align: 32, offset: 4288)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1586, file: !93, line: 2481, baseType: !1041, size: 32, align: 32, offset: 4320)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1586, file: !93, line: 2485, baseType: !1041, size: 32, align: 32, offset: 4352)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1586, file: !93, line: 2489, baseType: !1041, size: 32, align: 32, offset: 4384)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1586, file: !93, line: 2493, baseType: !1041, size: 32, align: 32, offset: 4416)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1586, file: !93, line: 2501, baseType: !1041, size: 32, align: 32, offset: 4448)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1586, file: !93, line: 2506, baseType: !1041, size: 32, align: 32, offset: 4480)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1586, file: !93, line: 2510, baseType: !1041, size: 32, align: 32, offset: 4512)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1586, file: !93, line: 2514, baseType: !1019, size: 64, align: 64, offset: 4544)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1586, file: !93, line: 2528, baseType: !1861, size: 64, align: 64, offset: 4608)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64, align: 64)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{null, !1752, !1013, !1041, !1041}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1586, file: !93, line: 2534, baseType: !1041, size: 32, align: 32, offset: 4672)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1586, file: !93, line: 2545, baseType: !1041, size: 32, align: 32, offset: 4704)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1586, file: !93, line: 2547, baseType: !1041, size: 32, align: 32, offset: 4736)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1586, file: !93, line: 2549, baseType: !1041, size: 32, align: 32, offset: 4768)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1586, file: !93, line: 2551, baseType: !1041, size: 32, align: 32, offset: 4800)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1586, file: !93, line: 2553, baseType: !1041, size: 32, align: 32, offset: 4832)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1586, file: !93, line: 2555, baseType: !1041, size: 32, align: 32, offset: 4864)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1586, file: !93, line: 2557, baseType: !1041, size: 32, align: 32, offset: 4896)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1586, file: !93, line: 2559, baseType: !1041, size: 32, align: 32, offset: 4928)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1586, file: !93, line: 2563, baseType: !1041, size: 32, align: 32, offset: 4960)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1586, file: !93, line: 2571, baseType: !1014, size: 64, align: 64, offset: 4992)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1586, file: !93, line: 2579, baseType: !1014, size: 64, align: 64, offset: 5056)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1586, file: !93, line: 2586, baseType: !1041, size: 32, align: 32, offset: 5120)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1586, file: !93, line: 2615, baseType: !1041, size: 32, align: 32, offset: 5152)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1586, file: !93, line: 2627, baseType: !1041, size: 32, align: 32, offset: 5184)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1586, file: !93, line: 2637, baseType: !1041, size: 32, align: 32, offset: 5216)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1586, file: !93, line: 2681, baseType: !1041, size: 32, align: 32, offset: 5248)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1586, file: !93, line: 2709, baseType: !1019, size: 64, align: 64, offset: 5312)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1586, file: !93, line: 2716, baseType: !1883, size: 64, align: 64, offset: 5376)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64, align: 64)
!1884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !93, line: 3636, size: 896, align: 64, elements: !1886)
!1886 = !{!1887, !1888, !1889, !1890, !1891, !1892, !1893, !1897, !1901, !1902, !1903, !1904, !1910, !1911, !1912, !1913, !1914}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1885, file: !93, line: 3642, baseType: !1027, size: 64, align: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1885, file: !93, line: 3649, baseType: !920, size: 32, align: 32, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1885, file: !93, line: 3656, baseType: !92, size: 32, align: 32, offset: 96)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1885, file: !93, line: 3663, baseType: !712, size: 32, align: 32, offset: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1885, file: !93, line: 3669, baseType: !1041, size: 32, align: 32, offset: 160)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1885, file: !93, line: 3682, baseType: !1710, size: 64, align: 64, offset: 192)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1885, file: !93, line: 3698, baseType: !1894, size: 64, align: 64, offset: 256)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64, align: 64)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{!1041, !1584, !1139, !1128}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1885, file: !93, line: 3712, baseType: !1898, size: 64, align: 64, offset: 320)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64, align: 64)
!1899 = !DISubroutineType(types: !1900)
!1900 = !{!1041, !1584, !1041, !1139, !1128}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1885, file: !93, line: 3726, baseType: !1894, size: 64, align: 64, offset: 384)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1885, file: !93, line: 3737, baseType: !1630, size: 64, align: 64, offset: 448)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1885, file: !93, line: 3746, baseType: !1041, size: 32, align: 32, offset: 512)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1885, file: !93, line: 3757, baseType: !1905, size: 64, align: 64, offset: 576)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64, align: 64)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{null, !1908}
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64, align: 64)
!1909 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !93, line: 3617, flags: DIFlagFwdDecl)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1885, file: !93, line: 3766, baseType: !1630, size: 64, align: 64, offset: 640)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1885, file: !93, line: 3774, baseType: !1630, size: 64, align: 64, offset: 704)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1885, file: !93, line: 3780, baseType: !1041, size: 32, align: 32, offset: 768)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1885, file: !93, line: 3785, baseType: !1041, size: 32, align: 32, offset: 800)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1885, file: !93, line: 3795, baseType: !1915, size: 64, align: 64, offset: 832)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64, align: 64)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!1041, !1584, !1323}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1586, file: !93, line: 2728, baseType: !1013, size: 64, align: 64, offset: 5440)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1586, file: !93, line: 2735, baseType: !1399, size: 512, align: 64, offset: 5504)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1586, file: !93, line: 2742, baseType: !1041, size: 32, align: 32, offset: 6016)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1586, file: !93, line: 2755, baseType: !1041, size: 32, align: 32, offset: 6048)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1586, file: !93, line: 2776, baseType: !1041, size: 32, align: 32, offset: 6080)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1586, file: !93, line: 2783, baseType: !1041, size: 32, align: 32, offset: 6112)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1586, file: !93, line: 2791, baseType: !1041, size: 32, align: 32, offset: 6144)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1586, file: !93, line: 2802, baseType: !1374, size: 64, align: 64, offset: 6208)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1586, file: !93, line: 2811, baseType: !1041, size: 32, align: 32, offset: 6272)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1586, file: !93, line: 2821, baseType: !1041, size: 32, align: 32, offset: 6304)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1586, file: !93, line: 2830, baseType: !1041, size: 32, align: 32, offset: 6336)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1586, file: !93, line: 2840, baseType: !1041, size: 32, align: 32, offset: 6368)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1586, file: !93, line: 2851, baseType: !1931, size: 64, align: 64, offset: 6400)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64, align: 64)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{!1041, !1752, !1934, !1013, !1695, !1041, !1041}
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64, align: 64)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!1041, !1752, !1013}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1586, file: !93, line: 2871, baseType: !1938, size: 64, align: 64, offset: 6464)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64, align: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!1041, !1752, !1941, !1013, !1695, !1041}
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64, align: 64)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{!1041, !1752, !1013, !1041, !1041}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1586, file: !93, line: 2878, baseType: !1041, size: 32, align: 32, offset: 6528)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1586, file: !93, line: 2885, baseType: !1041, size: 32, align: 32, offset: 6560)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1586, file: !93, line: 3005, baseType: !1041, size: 32, align: 32, offset: 6592)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1586, file: !93, line: 3013, baseType: !955, size: 32, align: 32, offset: 6624)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1586, file: !93, line: 3020, baseType: !955, size: 32, align: 32, offset: 6656)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1586, file: !93, line: 3027, baseType: !955, size: 32, align: 32, offset: 6688)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1586, file: !93, line: 3037, baseType: !1102, size: 64, align: 64, offset: 6720)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1586, file: !93, line: 3038, baseType: !1041, size: 32, align: 32, offset: 6784)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1586, file: !93, line: 3050, baseType: !1400, size: 64, align: 64, offset: 6848)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1586, file: !93, line: 3065, baseType: !1041, size: 32, align: 32, offset: 6912)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1586, file: !93, line: 3083, baseType: !1041, size: 32, align: 32, offset: 6944)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1586, file: !93, line: 3092, baseType: !1050, size: 64, align: 32, offset: 6976)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1586, file: !93, line: 3099, baseType: !712, size: 32, align: 32, offset: 7040)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1586, file: !93, line: 3106, baseType: !1050, size: 64, align: 32, offset: 7072)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1586, file: !93, line: 3113, baseType: !1959, size: 64, align: 64, offset: 7168)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64, align: 64)
!1960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1961)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !93, line: 740, baseType: !1962)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !93, line: 712, size: 384, align: 64, elements: !1963)
!1963 = !{!1964, !1965, !1966, !1967, !1968, !1969, !1972}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1962, file: !93, line: 713, baseType: !92, size: 32, align: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1962, file: !93, line: 714, baseType: !920, size: 32, align: 32, offset: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1962, file: !93, line: 720, baseType: !1027, size: 64, align: 64, offset: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1962, file: !93, line: 724, baseType: !1027, size: 64, align: 64, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1962, file: !93, line: 728, baseType: !1041, size: 32, align: 32, offset: 192)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1962, file: !93, line: 734, baseType: !1970, size: 64, align: 64, offset: 256)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64, align: 64)
!1971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1027)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1962, file: !93, line: 739, baseType: !1973, size: 64, align: 64, offset: 320)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64, align: 64)
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1586, file: !93, line: 3129, baseType: !1019, size: 64, align: 64, offset: 7232)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1586, file: !93, line: 3130, baseType: !1019, size: 64, align: 64, offset: 7296)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1586, file: !93, line: 3131, baseType: !1019, size: 64, align: 64, offset: 7360)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1586, file: !93, line: 3132, baseType: !1019, size: 64, align: 64, offset: 7424)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1586, file: !93, line: 3139, baseType: !1014, size: 64, align: 64, offset: 7488)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1586, file: !93, line: 3147, baseType: !1041, size: 32, align: 32, offset: 7552)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1586, file: !93, line: 3165, baseType: !1041, size: 32, align: 32, offset: 7584)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1586, file: !93, line: 3172, baseType: !1041, size: 32, align: 32, offset: 7616)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1586, file: !93, line: 3180, baseType: !1041, size: 32, align: 32, offset: 7648)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1586, file: !93, line: 3191, baseType: !1789, size: 64, align: 64, offset: 7680)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1586, file: !93, line: 3199, baseType: !1102, size: 64, align: 64, offset: 7744)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1586, file: !93, line: 3207, baseType: !1014, size: 64, align: 64, offset: 7808)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1586, file: !93, line: 3214, baseType: !1105, size: 32, align: 32, offset: 7872)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1586, file: !93, line: 3224, baseType: !1341, size: 64, align: 64, offset: 7936)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1586, file: !93, line: 3225, baseType: !1041, size: 32, align: 32, offset: 8000)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1586, file: !93, line: 3249, baseType: !1323, size: 64, align: 64, offset: 8064)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1586, file: !93, line: 3256, baseType: !1041, size: 32, align: 32, offset: 8128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1586, file: !93, line: 3271, baseType: !1041, size: 32, align: 32, offset: 8160)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1586, file: !93, line: 3279, baseType: !1019, size: 64, align: 64, offset: 8192)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1586, file: !93, line: 3301, baseType: !1323, size: 64, align: 64, offset: 8256)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1586, file: !93, line: 3310, baseType: !1041, size: 32, align: 32, offset: 8320)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1586, file: !93, line: 3337, baseType: !1041, size: 32, align: 32, offset: 8352)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1586, file: !93, line: 3351, baseType: !1041, size: 32, align: 32, offset: 8384)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1586, file: !93, line: 3359, baseType: !1041, size: 32, align: 32, offset: 8416)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1579, file: !965, line: 880, baseType: !1013, size: 64, align: 64, offset: 128)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1579, file: !965, line: 894, baseType: !1050, size: 64, align: 32, offset: 192)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1579, file: !965, line: 904, baseType: !1019, size: 64, align: 64, offset: 256)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1579, file: !965, line: 914, baseType: !1019, size: 64, align: 64, offset: 320)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "nb_frames", scope: !1579, file: !965, line: 916, baseType: !1019, size: 64, align: 64, offset: 384)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "disposition", scope: !1579, file: !965, line: 918, baseType: !1041, size: 32, align: 32, offset: 448)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !1579, file: !965, line: 920, baseType: !955, size: 32, align: 32, offset: 480)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1579, file: !965, line: 927, baseType: !1050, size: 64, align: 32, offset: 512)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1579, file: !965, line: 929, baseType: !1423, size: 64, align: 64, offset: 576)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "avg_frame_rate", scope: !1579, file: !965, line: 938, baseType: !1050, size: 64, align: 32, offset: 640)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "attached_pic", scope: !1579, file: !965, line: 947, baseType: !1319, size: 704, align: 64, offset: 704)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1579, file: !965, line: 967, baseType: !1341, size: 64, align: 64, offset: 1408)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1579, file: !965, line: 971, baseType: !1041, size: 32, align: 32, offset: 1472)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1579, file: !965, line: 978, baseType: !1041, size: 32, align: 32, offset: 1504)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "r_frame_rate", scope: !1579, file: !965, line: 989, baseType: !1050, size: 64, align: 32, offset: 1536)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "recommended_encoder_configuration", scope: !1579, file: !965, line: 1000, baseType: !1014, size: 64, align: 64, offset: 1600)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "codecpar", scope: !1579, file: !965, line: 1012, baseType: !2016, size: 64, align: 64, offset: 1664)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64, align: 64)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !93, line: 4085, baseType: !2018)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !93, line: 3936, size: 1152, align: 64, elements: !2019)
!2019 = !{!2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !2018, file: !93, line: 3940, baseType: !920, size: 32, align: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !2018, file: !93, line: 3944, baseType: !92, size: 32, align: 32, offset: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !2018, file: !93, line: 3948, baseType: !1128, size: 32, align: 32, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !2018, file: !93, line: 3958, baseType: !1102, size: 64, align: 64, offset: 128)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !2018, file: !93, line: 3962, baseType: !1041, size: 32, align: 32, offset: 192)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2018, file: !93, line: 3968, baseType: !1041, size: 32, align: 32, offset: 224)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !2018, file: !93, line: 3973, baseType: !1019, size: 64, align: 64, offset: 256)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !2018, file: !93, line: 3986, baseType: !1041, size: 32, align: 32, offset: 320)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !2018, file: !93, line: 3999, baseType: !1041, size: 32, align: 32, offset: 352)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2018, file: !93, line: 4004, baseType: !1041, size: 32, align: 32, offset: 384)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2018, file: !93, line: 4005, baseType: !1041, size: 32, align: 32, offset: 416)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2018, file: !93, line: 4010, baseType: !1041, size: 32, align: 32, offset: 448)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2018, file: !93, line: 4011, baseType: !1041, size: 32, align: 32, offset: 480)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !2018, file: !93, line: 4020, baseType: !1050, size: 64, align: 32, offset: 512)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !2018, file: !93, line: 4025, baseType: !935, size: 32, align: 32, offset: 576)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !2018, file: !93, line: 4030, baseType: !617, size: 32, align: 32, offset: 608)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !2018, file: !93, line: 4031, baseType: !624, size: 32, align: 32, offset: 640)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !2018, file: !93, line: 4032, baseType: !642, size: 32, align: 32, offset: 672)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !2018, file: !93, line: 4033, baseType: !666, size: 32, align: 32, offset: 704)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !2018, file: !93, line: 4034, baseType: !685, size: 32, align: 32, offset: 736)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !2018, file: !93, line: 4039, baseType: !1041, size: 32, align: 32, offset: 768)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !2018, file: !93, line: 4046, baseType: !1400, size: 64, align: 64, offset: 832)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2018, file: !93, line: 4050, baseType: !1041, size: 32, align: 32, offset: 896)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2018, file: !93, line: 4054, baseType: !1041, size: 32, align: 32, offset: 928)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !2018, file: !93, line: 4061, baseType: !1041, size: 32, align: 32, offset: 960)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !2018, file: !93, line: 4065, baseType: !1041, size: 32, align: 32, offset: 992)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !2018, file: !93, line: 4073, baseType: !1041, size: 32, align: 32, offset: 1024)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !2018, file: !93, line: 4080, baseType: !1041, size: 32, align: 32, offset: 1056)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !2018, file: !93, line: 4084, baseType: !1041, size: 32, align: 32, offset: 1088)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1579, file: !965, line: 1055, baseType: !2050, size: 64, align: 64, offset: 1728)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64, align: 64)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1579, file: !965, line: 1028, size: 832, align: 64, elements: !2052)
!2052 = !{!2053, !2054, !2055, !2056, !2057, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !2051, file: !965, line: 1029, baseType: !1019, size: 64, align: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gcd", scope: !2051, file: !965, line: 1030, baseType: !1019, size: 64, align: 64, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "duration_count", scope: !2051, file: !965, line: 1031, baseType: !1041, size: 32, align: 32, offset: 128)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "rfps_duration_sum", scope: !2051, file: !965, line: 1032, baseType: !1019, size: 64, align: 64, offset: 192)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "duration_error", scope: !2051, file: !965, line: 1033, baseType: !2058, size: 64, align: 64, offset: 256)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64, align: 64)
!2059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1020, size: 51072, align: 64, elements: !2060)
!2060 = !{!1150, !2061}
!2061 = !DISubrange(count: 399)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration", scope: !2051, file: !965, line: 1034, baseType: !1019, size: 64, align: 64, offset: 320)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration_fields", scope: !2051, file: !965, line: 1035, baseType: !1019, size: 64, align: 64, offset: 384)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "frame_delay_evidence", scope: !2051, file: !965, line: 1036, baseType: !1041, size: 32, align: 32, offset: 448)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "found_decoder", scope: !2051, file: !965, line: 1043, baseType: !1041, size: 32, align: 32, offset: 480)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "last_duration", scope: !2051, file: !965, line: 1045, baseType: !1019, size: 64, align: 64, offset: 512)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts", scope: !2051, file: !965, line: 1050, baseType: !1019, size: 64, align: 64, offset: 576)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts_idx", scope: !2051, file: !965, line: 1051, baseType: !1041, size: 32, align: 32, offset: 640)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts", scope: !2051, file: !965, line: 1052, baseType: !1019, size: 64, align: 64, offset: 704)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts_idx", scope: !2051, file: !965, line: 1053, baseType: !1041, size: 32, align: 32, offset: 768)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_bits", scope: !1579, file: !965, line: 1057, baseType: !1041, size: 32, align: 32, offset: 1792)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "first_dts", scope: !1579, file: !965, line: 1067, baseType: !1019, size: 64, align: 64, offset: 1856)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "cur_dts", scope: !1579, file: !965, line: 1068, baseType: !1019, size: 64, align: 64, offset: 1920)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_pts", scope: !1579, file: !965, line: 1069, baseType: !1019, size: 64, align: 64, offset: 1984)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_duration", scope: !1579, file: !965, line: 1070, baseType: !1041, size: 32, align: 32, offset: 2048)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "probe_packets", scope: !1579, file: !965, line: 1075, baseType: !1041, size: 32, align: 32, offset: 2080)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_nb_frames", scope: !1579, file: !965, line: 1080, baseType: !1041, size: 32, align: 32, offset: 2112)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "need_parsing", scope: !1579, file: !965, line: 1083, baseType: !964, size: 32, align: 32, offset: 2144)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !1579, file: !965, line: 1084, baseType: !2080, size: 64, align: 64, offset: 2176)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64, align: 64)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParserContext", file: !93, line: 5092, size: 2816, align: 64, elements: !2082)
!2082 = !{!2083, !2084, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !2081, file: !93, line: 5093, baseType: !1013, size: 64, align: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !2081, file: !93, line: 5094, baseType: !2085, size: 64, align: 64, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64, align: 64)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParser", file: !93, line: 5259, size: 512, align: 64, elements: !2087)
!2087 = !{!2088, !2092, !2093, !2099, !2104, !2108, !2112}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !2086, file: !93, line: 5260, baseType: !2089, size: 160, align: 32)
!2089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 160, align: 32, elements: !2090)
!2090 = !{!2091}
!2091 = !DISubrange(count: 5)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2086, file: !93, line: 5261, baseType: !1041, size: 32, align: 32, offset: 160)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "parser_init", scope: !2086, file: !93, line: 5262, baseType: !2094, size: 64, align: 64, offset: 192)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64, align: 64)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!1041, !2097}
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64, align: 64)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParserContext", file: !93, line: 5257, baseType: !2081)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "parser_parse", scope: !2086, file: !93, line: 5265, baseType: !2100, size: 64, align: 64, offset: 256)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64, align: 64)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!1041, !2097, !1584, !2103, !1695, !1139, !1041}
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64, align: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "parser_close", scope: !2086, file: !93, line: 5269, baseType: !2105, size: 64, align: 64, offset: 320)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64, align: 64)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{null, !2097}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2086, file: !93, line: 5270, baseType: !2109, size: 64, align: 64, offset: 384)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64, align: 64)
!2110 = !DISubroutineType(types: !2111)
!2111 = !{!1041, !1584, !1139, !1041}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2086, file: !93, line: 5271, baseType: !2085, size: 64, align: 64, offset: 448)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2081, file: !93, line: 5095, baseType: !1019, size: 64, align: 64, offset: 128)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "cur_offset", scope: !2081, file: !93, line: 5096, baseType: !1019, size: 64, align: 64, offset: 192)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "next_frame_offset", scope: !2081, file: !93, line: 5098, baseType: !1019, size: 64, align: 64, offset: 256)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !2081, file: !93, line: 5100, baseType: !1041, size: 32, align: 32, offset: 320)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !2081, file: !93, line: 5110, baseType: !1041, size: 32, align: 32, offset: 352)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2081, file: !93, line: 5111, baseType: !1019, size: 64, align: 64, offset: 384)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !2081, file: !93, line: 5112, baseType: !1019, size: 64, align: 64, offset: 448)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "last_pts", scope: !2081, file: !93, line: 5115, baseType: !1019, size: 64, align: 64, offset: 512)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !2081, file: !93, line: 5116, baseType: !1019, size: 64, align: 64, offset: 576)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_timestamp", scope: !2081, file: !93, line: 5117, baseType: !1041, size: 32, align: 32, offset: 640)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_start_index", scope: !2081, file: !93, line: 5120, baseType: !1041, size: 32, align: 32, offset: 672)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_offset", scope: !2081, file: !93, line: 5121, baseType: !2125, size: 256, align: 64, offset: 704)
!2125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 256, align: 64, elements: !1680)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pts", scope: !2081, file: !93, line: 5122, baseType: !2125, size: 256, align: 64, offset: 960)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_dts", scope: !2081, file: !93, line: 5123, baseType: !2125, size: 256, align: 64, offset: 1216)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2081, file: !93, line: 5125, baseType: !1041, size: 32, align: 32, offset: 1472)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2081, file: !93, line: 5132, baseType: !1019, size: 64, align: 64, offset: 1536)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_end", scope: !2081, file: !93, line: 5133, baseType: !2125, size: 256, align: 64, offset: 1600)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !2081, file: !93, line: 5141, baseType: !1041, size: 32, align: 32, offset: 1856)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !2081, file: !93, line: 5148, baseType: !1019, size: 64, align: 64, offset: 1920)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "dts_sync_point", scope: !2081, file: !93, line: 5161, baseType: !1041, size: 32, align: 32, offset: 1984)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ref_dts_delta", scope: !2081, file: !93, line: 5176, baseType: !1041, size: 32, align: 32, offset: 2016)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "pts_dts_delta", scope: !2081, file: !93, line: 5190, baseType: !1041, size: 32, align: 32, offset: 2048)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pos", scope: !2081, file: !93, line: 5197, baseType: !2125, size: 256, align: 64, offset: 2112)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2081, file: !93, line: 5202, baseType: !1019, size: 64, align: 64, offset: 2368)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !2081, file: !93, line: 5207, baseType: !1019, size: 64, align: 64, offset: 2432)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2081, file: !93, line: 5214, baseType: !1041, size: 32, align: 32, offset: 2496)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !2081, file: !93, line: 5216, baseType: !935, size: 32, align: 32, offset: 2528)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "picture_structure", scope: !2081, file: !93, line: 5226, baseType: !973, size: 32, align: 32, offset: 2560)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "output_picture_number", scope: !2081, file: !93, line: 5234, baseType: !1041, size: 32, align: 32, offset: 2592)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2081, file: !93, line: 5239, baseType: !1041, size: 32, align: 32, offset: 2624)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2081, file: !93, line: 5240, baseType: !1041, size: 32, align: 32, offset: 2656)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !2081, file: !93, line: 5245, baseType: !1041, size: 32, align: 32, offset: 2688)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !2081, file: !93, line: 5246, baseType: !1041, size: 32, align: 32, offset: 2720)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2081, file: !93, line: 5256, baseType: !1041, size: 32, align: 32, offset: 2752)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "last_in_packet_buffer", scope: !1579, file: !965, line: 1089, baseType: !2149, size: 64, align: 64, offset: 2240)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64, align: 64)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketList", file: !965, line: 2003, size: 768, align: 64, elements: !2151)
!2151 = !{!2152, !2153}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2150, file: !965, line: 2004, baseType: !1319, size: 704, align: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2150, file: !965, line: 2005, baseType: !2149, size: 64, align: 64, offset: 704)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "probe_data", scope: !1579, file: !965, line: 1090, baseType: !1280, size: 256, align: 64, offset: 2304)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "pts_buffer", scope: !1579, file: !965, line: 1092, baseType: !2156, size: 1088, align: 64, offset: 2560)
!2156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 1088, align: 64, elements: !2157)
!2157 = !{!2158}
!2158 = !DISubrange(count: 17)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries", scope: !1579, file: !965, line: 1094, baseType: !2160, size: 64, align: 64, offset: 3648)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64, align: 64)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIndexEntry", file: !965, line: 808, baseType: !2162)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIndexEntry", file: !965, line: 793, size: 192, align: 64, elements: !2163)
!2163 = !{!2164, !2165, !2166, !2167, !2168}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2162, file: !965, line: 794, baseType: !1019, size: 64, align: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !2162, file: !965, line: 795, baseType: !1019, size: 64, align: 64, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2162, file: !965, line: 805, baseType: !1041, size: 2, align: 32, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2162, file: !965, line: 806, baseType: !1041, size: 30, align: 32, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "min_distance", scope: !2162, file: !965, line: 807, baseType: !1041, size: 32, align: 32, offset: 160)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index_entries", scope: !1579, file: !965, line: 1096, baseType: !1041, size: 32, align: 32, offset: 3712)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries_allocated_size", scope: !1579, file: !965, line: 1097, baseType: !1105, size: 32, align: 32, offset: 3744)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "stream_identifier", scope: !1579, file: !965, line: 1104, baseType: !1041, size: 32, align: 32, offset: 3776)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !1579, file: !965, line: 1109, baseType: !1041, size: 32, align: 32, offset: 3808)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !1579, file: !965, line: 1110, baseType: !1041, size: 32, align: 32, offset: 3840)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_stream_idx", scope: !1579, file: !965, line: 1111, baseType: !1041, size: 32, align: 32, offset: 3872)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_size", scope: !1579, file: !965, line: 1113, baseType: !1019, size: 64, align: 64, offset: 3904)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_duration", scope: !1579, file: !965, line: 1114, baseType: !1019, size: 64, align: 64, offset: 3968)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "request_probe", scope: !1579, file: !965, line: 1123, baseType: !1041, size: 32, align: 32, offset: 4032)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "skip_to_keyframe", scope: !1579, file: !965, line: 1128, baseType: !1041, size: 32, align: 32, offset: 4064)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1579, file: !965, line: 1133, baseType: !1041, size: 32, align: 32, offset: 4096)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "start_skip_samples", scope: !1579, file: !965, line: 1142, baseType: !1019, size: 64, align: 64, offset: 4160)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "first_discard_sample", scope: !1579, file: !965, line: 1150, baseType: !1019, size: 64, align: 64, offset: 4224)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "last_discard_sample", scope: !1579, file: !965, line: 1157, baseType: !1019, size: 64, align: 64, offset: 4288)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "nb_decoded_frames", scope: !1579, file: !965, line: 1163, baseType: !1041, size: 32, align: 32, offset: 4352)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "mux_ts_offset", scope: !1579, file: !965, line: 1169, baseType: !1019, size: 64, align: 64, offset: 4416)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !1579, file: !965, line: 1174, baseType: !1019, size: 64, align: 64, offset: 4480)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !1579, file: !965, line: 1186, baseType: !1041, size: 32, align: 32, offset: 4544)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "update_initial_durations_done", scope: !1579, file: !965, line: 1191, baseType: !1041, size: 32, align: 32, offset: 4576)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error", scope: !1579, file: !965, line: 1196, baseType: !2156, size: 1088, align: 64, offset: 4608)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error_count", scope: !1579, file: !965, line: 1197, baseType: !2190, size: 136, align: 8, offset: 5696)
!2190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1103, size: 136, align: 8, elements: !2157)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts_for_order_check", scope: !1579, file: !965, line: 1202, baseType: !1019, size: 64, align: 64, offset: 5888)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ordered", scope: !1579, file: !965, line: 1203, baseType: !1103, size: 8, align: 8, offset: 5952)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "dts_misordered", scope: !1579, file: !965, line: 1204, baseType: !1103, size: 8, align: 8, offset: 5960)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !1579, file: !965, line: 1209, baseType: !1041, size: 32, align: 32, offset: 5984)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "display_aspect_ratio", scope: !1579, file: !965, line: 1216, baseType: !1050, size: 64, align: 32, offset: 6016)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1579, file: !965, line: 1222, baseType: !2197, size: 64, align: 64, offset: 6080)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64, align: 64)
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStreamInternal", file: !965, line: 840, baseType: !2199)
!2199 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVStreamInternal", file: !965, line: 840, flags: DIFlagFwdDecl)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1293, file: !965, line: 1417, baseType: !2201, size: 8192, align: 8, offset: 448)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 8192, align: 8, elements: !2202)
!2202 = !{!2203}
!2203 = !DISubrange(count: 1024)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1293, file: !965, line: 1433, baseType: !1014, size: 64, align: 64, offset: 8640)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1293, file: !965, line: 1442, baseType: !1019, size: 64, align: 64, offset: 8704)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1293, file: !965, line: 1452, baseType: !1019, size: 64, align: 64, offset: 8768)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1293, file: !965, line: 1459, baseType: !1019, size: 64, align: 64, offset: 8832)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "packet_size", scope: !1293, file: !965, line: 1461, baseType: !1105, size: 32, align: 32, offset: 8896)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "max_delay", scope: !1293, file: !965, line: 1462, baseType: !1041, size: 32, align: 32, offset: 8928)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1293, file: !965, line: 1468, baseType: !1041, size: 32, align: 32, offset: 8960)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "probesize", scope: !1293, file: !965, line: 1503, baseType: !1019, size: 64, align: 64, offset: 9024)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "max_analyze_duration", scope: !1293, file: !965, line: 1511, baseType: !1019, size: 64, align: 64, offset: 9088)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1293, file: !965, line: 1513, baseType: !1139, size: 64, align: 64, offset: 9152)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1293, file: !965, line: 1514, baseType: !1041, size: 32, align: 32, offset: 9216)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "nb_programs", scope: !1293, file: !965, line: 1516, baseType: !1105, size: 32, align: 32, offset: 9248)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "programs", scope: !1293, file: !965, line: 1517, baseType: !2217, size: 64, align: 64, offset: 9280)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64, align: 64)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64, align: 64)
!2219 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProgram", file: !965, line: 1284, baseType: !2220)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProgram", file: !965, line: 1259, size: 704, align: 64, elements: !2221)
!2221 = !{!2222, !2223, !2224, !2225, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2220, file: !965, line: 1260, baseType: !1041, size: 32, align: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2220, file: !965, line: 1261, baseType: !1041, size: 32, align: 32, offset: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !2220, file: !965, line: 1262, baseType: !955, size: 32, align: 32, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !2220, file: !965, line: 1263, baseType: !2226, size: 64, align: 64, offset: 128)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64, align: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "nb_stream_indexes", scope: !2220, file: !965, line: 1264, baseType: !1105, size: 32, align: 32, offset: 192)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2220, file: !965, line: 1265, baseType: !1423, size: 64, align: 64, offset: 256)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !2220, file: !965, line: 1267, baseType: !1041, size: 32, align: 32, offset: 320)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_pid", scope: !2220, file: !965, line: 1268, baseType: !1041, size: 32, align: 32, offset: 352)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "pcr_pid", scope: !2220, file: !965, line: 1269, baseType: !1041, size: 32, align: 32, offset: 384)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !2220, file: !965, line: 1270, baseType: !1041, size: 32, align: 32, offset: 416)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2220, file: !965, line: 1279, baseType: !1019, size: 64, align: 64, offset: 448)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "end_time", scope: !2220, file: !965, line: 1280, baseType: !1019, size: 64, align: 64, offset: 512)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !2220, file: !965, line: 1282, baseType: !1019, size: 64, align: 64, offset: 576)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !2220, file: !965, line: 1283, baseType: !1041, size: 32, align: 32, offset: 640)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec_id", scope: !1293, file: !965, line: 1523, baseType: !92, size: 32, align: 32, offset: 9344)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec_id", scope: !1293, file: !965, line: 1529, baseType: !92, size: 32, align: 32, offset: 9376)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec_id", scope: !1293, file: !965, line: 1535, baseType: !92, size: 32, align: 32, offset: 9408)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "max_index_size", scope: !1293, file: !965, line: 1547, baseType: !1105, size: 32, align: 32, offset: 9440)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "max_picture_buffer", scope: !1293, file: !965, line: 1553, baseType: !1105, size: 32, align: 32, offset: 9472)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "nb_chapters", scope: !1293, file: !965, line: 1566, baseType: !1105, size: 32, align: 32, offset: 9504)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "chapters", scope: !1293, file: !965, line: 1567, baseType: !2244, size: 64, align: 64, offset: 9536)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64, align: 64)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64, align: 64)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVChapter", file: !965, line: 1299, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVChapter", file: !965, line: 1294, size: 320, align: 64, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252, !2253}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2247, file: !965, line: 1295, baseType: !1041, size: 32, align: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !2247, file: !965, line: 1296, baseType: !1050, size: 64, align: 32, offset: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2247, file: !965, line: 1297, baseType: !1019, size: 64, align: 64, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2247, file: !965, line: 1297, baseType: !1019, size: 64, align: 64, offset: 192)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2247, file: !965, line: 1298, baseType: !1423, size: 64, align: 64, offset: 256)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1293, file: !965, line: 1577, baseType: !1423, size: 64, align: 64, offset: 9600)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_realtime", scope: !1293, file: !965, line: 1590, baseType: !1019, size: 64, align: 64, offset: 9664)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "fps_probe_size", scope: !1293, file: !965, line: 1597, baseType: !1041, size: 32, align: 32, offset: 9728)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "error_recognition", scope: !1293, file: !965, line: 1604, baseType: !1041, size: 32, align: 32, offset: 9760)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_callback", scope: !1293, file: !965, line: 1615, baseType: !2259, size: 128, align: 64, offset: 9792)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOInterruptCB", file: !912, line: 61, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOInterruptCB", file: !912, line: 58, size: 128, align: 64, elements: !2261)
!2261 = !{!2262, !2263}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2260, file: !912, line: 59, baseType: !1567, size: 64, align: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2260, file: !912, line: 60, baseType: !1013, size: 64, align: 64, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1293, file: !965, line: 1620, baseType: !1041, size: 32, align: 32, offset: 9920)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "max_interleave_delta", scope: !1293, file: !965, line: 1639, baseType: !1019, size: 64, align: 64, offset: 9984)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1293, file: !965, line: 1645, baseType: !1041, size: 32, align: 32, offset: 10048)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1293, file: !965, line: 1652, baseType: !1041, size: 32, align: 32, offset: 10080)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "max_ts_probe", scope: !1293, file: !965, line: 1659, baseType: !1041, size: 32, align: 32, offset: 10112)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts", scope: !1293, file: !965, line: 1668, baseType: !1041, size: 32, align: 32, offset: 10144)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "ts_id", scope: !1293, file: !965, line: 1677, baseType: !1041, size: 32, align: 32, offset: 10176)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "audio_preload", scope: !1293, file: !965, line: 1685, baseType: !1041, size: 32, align: 32, offset: 10208)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_duration", scope: !1293, file: !965, line: 1693, baseType: !1041, size: 32, align: 32, offset: 10240)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_size", scope: !1293, file: !965, line: 1701, baseType: !1041, size: 32, align: 32, offset: 10272)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "use_wallclock_as_timestamps", scope: !1293, file: !965, line: 1709, baseType: !1041, size: 32, align: 32, offset: 10304)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "avio_flags", scope: !1293, file: !965, line: 1716, baseType: !1041, size: 32, align: 32, offset: 10336)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "duration_estimation_method", scope: !1293, file: !965, line: 1724, baseType: !979, size: 32, align: 32, offset: 10368)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "skip_initial_bytes", scope: !1293, file: !965, line: 1731, baseType: !1019, size: 64, align: 64, offset: 10432)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "correct_ts_overflow", scope: !1293, file: !965, line: 1738, baseType: !1105, size: 32, align: 32, offset: 10496)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "seek2any", scope: !1293, file: !965, line: 1745, baseType: !1041, size: 32, align: 32, offset: 10528)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "flush_packets", scope: !1293, file: !965, line: 1752, baseType: !1041, size: 32, align: 32, offset: 10560)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "probe_score", scope: !1293, file: !965, line: 1761, baseType: !1041, size: 32, align: 32, offset: 10592)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "format_probesize", scope: !1293, file: !965, line: 1768, baseType: !1041, size: 32, align: 32, offset: 10624)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1293, file: !965, line: 1776, baseType: !1014, size: 64, align: 64, offset: 10688)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "format_whitelist", scope: !1293, file: !965, line: 1784, baseType: !1014, size: 64, align: 64, offset: 10752)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1293, file: !965, line: 1790, baseType: !2286, size: 64, align: 64, offset: 10816)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64, align: 64)
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatInternal", file: !965, line: 1321, baseType: !2288)
!2288 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatInternal", file: !965, line: 1321, flags: DIFlagFwdDecl)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "io_repositioned", scope: !1293, file: !965, line: 1798, baseType: !1041, size: 32, align: 32, offset: 10880)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1293, file: !965, line: 1806, baseType: !2291, size: 64, align: 64, offset: 10944)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64, align: 64)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !93, line: 3610, baseType: !1594)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1293, file: !965, line: 1814, baseType: !2291, size: 64, align: 64, offset: 11008)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1293, file: !965, line: 1822, baseType: !2291, size: 64, align: 64, offset: 11072)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1293, file: !965, line: 1830, baseType: !2291, size: 64, align: 64, offset: 11136)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_header_padding", scope: !1293, file: !965, line: 1837, baseType: !1041, size: 32, align: 32, offset: 11200)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1293, file: !965, line: 1843, baseType: !1013, size: 64, align: 64, offset: 11264)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "control_message_cb", scope: !1293, file: !965, line: 1848, baseType: !2299, size: 64, align: 64, offset: 11328)
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_format_control_message", file: !965, line: 1305, baseType: !1366)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "output_ts_offset", scope: !1293, file: !965, line: 1854, baseType: !1019, size: 64, align: 64, offset: 11392)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1293, file: !965, line: 1862, baseType: !1102, size: 64, align: 64, offset: 11456)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec_id", scope: !1293, file: !965, line: 1868, baseType: !92, size: 32, align: 32, offset: 11520)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "open_cb", scope: !1293, file: !965, line: 1889, baseType: !2304, size: 64, align: 64, offset: 11584)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64, align: 64)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{!1041, !1292, !2307, !1027, !1041, !2308, !2310}
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64, align: 64)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64, align: 64)
!2309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2259)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64, align: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1293, file: !965, line: 1897, baseType: !1014, size: 64, align: 64, offset: 11648)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "io_open", scope: !1293, file: !965, line: 1919, baseType: !2313, size: 64, align: 64, offset: 11712)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64, align: 64)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{!1041, !1292, !2307, !1027, !1041, !2310}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "io_close", scope: !1293, file: !965, line: 1925, baseType: !2317, size: 64, align: 64, offset: 11776)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64, align: 64)
!2318 = !DISubroutineType(types: !2319)
!2319 = !{null, !1292, !1511}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1293, file: !965, line: 1932, baseType: !1014, size: 64, align: 64, offset: 11840)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "max_streams", scope: !1293, file: !965, line: 1939, baseType: !1041, size: 32, align: 32, offset: 11904)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "skip_estimate_duration_from_pts", scope: !1293, file: !965, line: 1946, baseType: !1041, size: 32, align: 32, offset: 11936)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1257, file: !965, line: 714, baseType: !1315, size: 64, align: 64, offset: 704)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "read_close", scope: !1257, file: !965, line: 720, baseType: !1289, size: 64, align: 64, offset: 768)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1257, file: !965, line: 730, baseType: !2326, size: 64, align: 64, offset: 832)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64, align: 64)
!2327 = !DISubroutineType(types: !2328)
!2328 = !{!1041, !1292, !1041, !1019, !1041}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "read_timestamp", scope: !1257, file: !965, line: 737, baseType: !2330, size: 64, align: 64, offset: 896)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64, align: 64)
!2331 = !DISubroutineType(types: !2332)
!2332 = !{!1019, !1292, !1041, !1171, !1019}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "read_play", scope: !1257, file: !965, line: 744, baseType: !1289, size: 64, align: 64, offset: 960)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1257, file: !965, line: 750, baseType: !1289, size: 64, align: 64, offset: 1024)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek2", scope: !1257, file: !965, line: 758, baseType: !2336, size: 64, align: 64, offset: 1088)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64, align: 64)
!2337 = !DISubroutineType(types: !2338)
!2338 = !{!1041, !1292, !1041, !1019, !1019, !1019, !1041}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1257, file: !965, line: 764, baseType: !1457, size: 64, align: 64, offset: 1152)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1257, file: !965, line: 770, baseType: !1475, size: 64, align: 64, offset: 1216)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1257, file: !965, line: 776, baseType: !1475, size: 64, align: 64, offset: 1280)
!2342 = distinct !DIGlobalVariable(name: "show_value_unit", scope: !0, file: !47, line: 112, type: !1041, isLocal: true, isDefinition: true, variable: i32* @show_value_unit)
!2343 = distinct !DIGlobalVariable(name: "use_value_prefix", scope: !0, file: !47, line: 113, type: !1041, isLocal: true, isDefinition: true, variable: i32* @use_value_prefix)
!2344 = distinct !DIGlobalVariable(name: "use_byte_value_binary_prefix", scope: !0, file: !47, line: 114, type: !1041, isLocal: true, isDefinition: true, variable: i32* @use_byte_value_binary_prefix)
!2345 = distinct !DIGlobalVariable(name: "use_value_sexagesimal_format", scope: !0, file: !47, line: 115, type: !1041, isLocal: true, isDefinition: true, variable: i32* @use_value_sexagesimal_format)
!2346 = distinct !DIGlobalVariable(name: "stream_specifier", scope: !0, file: !47, line: 119, type: !1014, isLocal: true, isDefinition: true, variable: i8** @stream_specifier)
!2347 = distinct !DIGlobalVariable(name: "do_show_data", scope: !0, file: !47, line: 97, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_data)
!2348 = distinct !DIGlobalVariable(name: "do_count_frames", scope: !0, file: !47, line: 85, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_count_frames)
!2349 = distinct !DIGlobalVariable(name: "do_count_packets", scope: !0, file: !47, line: 86, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_count_packets)
!2350 = distinct !DIGlobalVariable(name: "show_private_data", scope: !0, file: !47, line: 116, type: !1041, isLocal: true, isDefinition: true, variable: i32* @show_private_data)
!2351 = distinct !DIGlobalVariable(name: "read_intervals_nb", scope: !0, file: !47, line: 131, type: !1041, isLocal: true, isDefinition: true, variable: i32* @read_intervals_nb)
!2352 = distinct !DIGlobalVariable(name: "find_stream_info", scope: !0, file: !47, line: 133, type: !1041, isLocal: true, isDefinition: true, variable: i32* @find_stream_info)
!2353 = distinct !DIGlobalVariable(name: "do_show_log", scope: !0, file: !47, line: 103, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_log)
!2354 = distinct !DIGlobalVariable(name: "print_prefix", scope: !2355, file: !47, line: 301, type: !1041, isLocal: true, isDefinition: true, variable: i32* @log_callback.print_prefix)
!2355 = distinct !DISubprogram(name: "log_callback", scope: !47, file: !47, line: 296, type: !2356, isLocal: true, isDefinition: true, scopeLine: 297, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!2356 = !DISubroutineType(types: !2357)
!2357 = !{null, !1013, !1041, !1027, !2358}
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64, align: 64)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, line: 103, size: 192, align: 64, elements: !2360)
!2360 = !{!2361, !2362, !2363, !2364}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2359, file: !1, line: 103, baseType: !1105, size: 32, align: 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2359, file: !1, line: 103, baseType: !1105, size: 32, align: 32, offset: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2359, file: !1, line: 103, baseType: !1013, size: 64, align: 64, offset: 64)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2359, file: !1, line: 103, baseType: !1013, size: 64, align: 64, offset: 128)
!2365 = !{}
!2366 = distinct !DIGlobalVariable(name: "log_buffer", scope: !0, file: !47, line: 293, type: !2367, isLocal: true, isDefinition: true, variable: %struct.LogBuffer** @log_buffer)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64, align: 64)
!2368 = !DIDerivedType(tag: DW_TAG_typedef, name: "LogBuffer", file: !47, line: 291, baseType: !2369)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LogBuffer", file: !47, line: 284, size: 384, align: 64, elements: !2370)
!2370 = !{!2371, !2372, !2373, !2374, !2375, !2376}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "context_name", scope: !2369, file: !47, line: 285, baseType: !1014, size: 64, align: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !2369, file: !47, line: 286, baseType: !1041, size: 32, align: 32, offset: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "log_message", scope: !2369, file: !47, line: 287, baseType: !1014, size: 64, align: 64, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !2369, file: !47, line: 288, baseType: !1074, size: 32, align: 32, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "parent_name", scope: !2369, file: !47, line: 289, baseType: !1014, size: 64, align: 64, offset: 256)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "parent_category", scope: !2369, file: !47, line: 290, baseType: !1074, size: 32, align: 32, offset: 320)
!2377 = distinct !DIGlobalVariable(name: "log_buffer_size", scope: !0, file: !47, line: 294, type: !1041, isLocal: true, isDefinition: true, variable: i32* @log_buffer_size)
!2378 = distinct !DIGlobalVariable(name: "do_show_chapters", scope: !0, file: !47, line: 89, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_chapters)
!2379 = distinct !DIGlobalVariable(name: "do_show_error", scope: !0, file: !47, line: 90, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_error)
!2380 = distinct !DIGlobalVariable(name: "do_show_format", scope: !0, file: !47, line: 91, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_format)
!2381 = distinct !DIGlobalVariable(name: "do_show_frames", scope: !0, file: !47, line: 92, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_frames)
!2382 = distinct !DIGlobalVariable(name: "do_show_library_versions", scope: !0, file: !47, line: 99, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_library_versions)
!2383 = distinct !DIGlobalVariable(name: "do_show_packets", scope: !0, file: !47, line: 93, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_packets)
!2384 = distinct !DIGlobalVariable(name: "do_show_pixel_formats", scope: !0, file: !47, line: 100, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_pixel_formats)
!2385 = distinct !DIGlobalVariable(name: "do_show_pixel_format_flags", scope: !0, file: !47, line: 101, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_pixel_format_flags)
!2386 = distinct !DIGlobalVariable(name: "do_show_pixel_format_components", scope: !0, file: !47, line: 102, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_pixel_format_components)
!2387 = distinct !DIGlobalVariable(name: "do_show_program_version", scope: !0, file: !47, line: 98, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_program_version)
!2388 = distinct !DIGlobalVariable(name: "do_show_programs", scope: !0, file: !47, line: 94, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_programs)
!2389 = distinct !DIGlobalVariable(name: "do_show_streams", scope: !0, file: !47, line: 95, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_streams)
!2390 = distinct !DIGlobalVariable(name: "do_show_stream_disposition", scope: !0, file: !47, line: 96, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_stream_disposition)
!2391 = distinct !DIGlobalVariable(name: "do_show_chapter_tags", scope: !0, file: !47, line: 105, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_chapter_tags)
!2392 = distinct !DIGlobalVariable(name: "do_show_format_tags", scope: !0, file: !47, line: 106, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_format_tags)
!2393 = distinct !DIGlobalVariable(name: "do_show_frame_tags", scope: !0, file: !47, line: 107, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_frame_tags)
!2394 = distinct !DIGlobalVariable(name: "do_show_program_tags", scope: !0, file: !47, line: 108, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_program_tags)
!2395 = distinct !DIGlobalVariable(name: "do_show_stream_tags", scope: !0, file: !47, line: 109, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_stream_tags)
!2396 = distinct !DIGlobalVariable(name: "do_show_packet_tags", scope: !0, file: !47, line: 110, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_show_packet_tags)
!2397 = distinct !DIGlobalVariable(name: "do_bitexact", scope: !0, file: !47, line: 84, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_bitexact)
!2398 = distinct !DIGlobalVariable(name: "initialized", scope: !2399, file: !47, line: 1787, type: !1041, isLocal: true, isDefinition: true, variable: i32* @writer_register_all.initialized)
!2399 = distinct !DISubprogram(name: "writer_register_all", scope: !47, file: !47, line: 1785, type: !2400, isLocal: true, isDefinition: true, scopeLine: 1786, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!2400 = !DISubroutineType(types: !2401)
!2401 = !{null}
!2402 = distinct !DIGlobalVariable(name: "next_registered_writer_idx", scope: !2403, file: !47, line: 881, type: !1041, isLocal: true, isDefinition: true, variable: i32* @writer_register.next_registered_writer_idx)
!2403 = distinct !DISubprogram(name: "writer_register", scope: !47, file: !47, line: 879, type: !2404, isLocal: true, isDefinition: true, scopeLine: 880, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!2404 = !DISubroutineType(types: !2405)
!2405 = !{!1041, !2406}
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64, align: 64)
!2407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2408)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "Writer", file: !47, line: 442, baseType: !2409)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Writer", file: !47, line: 428, size: 704, align: 64, elements: !2410)
!2410 = !{!2411, !2412, !2413, !2414, !2474, !2478, !2479, !2480, !2484, !2489, !2493}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !2409, file: !47, line: 429, baseType: !1107, size: 64, align: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !2409, file: !47, line: 430, baseType: !1041, size: 32, align: 32, offset: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2409, file: !47, line: 431, baseType: !1027, size: 64, align: 64, offset: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2409, file: !47, line: 433, baseType: !2415, size: 64, align: 64, offset: 192)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64, align: 64)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{!1041, !2418}
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 64, align: 64)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "WriterContext", file: !47, line: 416, baseType: !2420)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WriterContext", file: !47, line: 446, size: 83520, align: 64, elements: !2421)
!2421 = !{!2422, !2423, !2424, !2425, !2426, !2442, !2443, !2444, !2448, !2450, !2468, !2469, !2470, !2471, !2472, !2473}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2420, file: !47, line: 447, baseType: !1107, size: 64, align: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2420, file: !47, line: 448, baseType: !2406, size: 64, align: 64, offset: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2420, file: !47, line: 449, baseType: !1014, size: 64, align: 64, offset: 128)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2420, file: !47, line: 450, baseType: !1013, size: 64, align: 64, offset: 192)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "sections", scope: !2420, file: !47, line: 452, baseType: !2427, size: 64, align: 64, offset: 256)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64, align: 64)
!2428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2429)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section", file: !47, line: 139, size: 768, align: 64, elements: !2430)
!2430 = !{!2431, !2432, !2433, !2434, !2438, !2439, !2440, !2441}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2429, file: !47, line: 140, baseType: !1041, size: 32, align: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2429, file: !47, line: 141, baseType: !1027, size: 64, align: 64, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2429, file: !47, line: 147, baseType: !1041, size: 32, align: 32, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "children_ids", scope: !2429, file: !47, line: 148, baseType: !2435, size: 352, align: 32, offset: 160)
!2435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 352, align: 32, elements: !2436)
!2436 = !{!2437}
!2437 = !DISubrange(count: 11)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "element_name", scope: !2429, file: !47, line: 149, baseType: !1027, size: 64, align: 64, offset: 512)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "unique_name", scope: !2429, file: !47, line: 150, baseType: !1027, size: 64, align: 64, offset: 576)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "entries_to_show", scope: !2429, file: !47, line: 151, baseType: !1423, size: 64, align: 64, offset: 640)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "show_all_entries", scope: !2429, file: !47, line: 152, baseType: !1041, size: 32, align: 32, offset: 704)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "nb_sections", scope: !2420, file: !47, line: 453, baseType: !1041, size: 32, align: 32, offset: 320)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2420, file: !47, line: 455, baseType: !1041, size: 32, align: 32, offset: 352)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "nb_item", scope: !2420, file: !47, line: 458, baseType: !2445, size: 320, align: 32, offset: 384)
!2445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1105, size: 320, align: 32, elements: !2446)
!2446 = !{!2447}
!2447 = !DISubrange(count: 10)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "section", scope: !2420, file: !47, line: 461, baseType: !2449, size: 640, align: 64, offset: 704)
!2449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2427, size: 640, align: 64, elements: !2446)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "section_pbuf", scope: !2420, file: !47, line: 462, baseType: !2451, size: 81920, align: 64, offset: 1344)
!2451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2452, size: 81920, align: 64, elements: !2446)
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBPrint", file: !2453, line: 82, baseType: !2454)
!2453 = !DIFile(filename: "./libavutil/bprint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBPrint", file: !2453, line: 82, size: 8192, align: 64, elements: !2455)
!2455 = !{!2456, !2457, !2458, !2459, !2460, !2464}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2454, file: !2453, line: 82, baseType: !1014, size: 64, align: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2454, file: !2453, line: 82, baseType: !1105, size: 32, align: 32, offset: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2454, file: !2453, line: 82, baseType: !1105, size: 32, align: 32, offset: 96)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "size_max", scope: !2454, file: !2453, line: 82, baseType: !1105, size: 32, align: 32, offset: 128)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_internal_buffer", scope: !2454, file: !2453, line: 82, baseType: !2461, size: 8, align: 8, offset: 160)
!2461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 8, align: 8, elements: !2462)
!2462 = !{!2463}
!2463 = !DISubrange(count: 1)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_padding", scope: !2454, file: !2453, line: 82, baseType: !2465, size: 8000, align: 8, offset: 168)
!2465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 8000, align: 8, elements: !2466)
!2466 = !{!2467}
!2467 = !DISubrange(count: 1000)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "nb_section_packet", scope: !2420, file: !47, line: 465, baseType: !1105, size: 32, align: 32, offset: 83264)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "nb_section_frame", scope: !2420, file: !47, line: 466, baseType: !1105, size: 32, align: 32, offset: 83296)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "nb_section_packet_frame", scope: !2420, file: !47, line: 467, baseType: !1105, size: 32, align: 32, offset: 83328)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "string_validation", scope: !2420, file: !47, line: 469, baseType: !1041, size: 32, align: 32, offset: 83360)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "string_validation_replacement", scope: !2420, file: !47, line: 470, baseType: !1014, size: 64, align: 64, offset: 83392)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "string_validation_utf8_flags", scope: !2420, file: !47, line: 471, baseType: !1105, size: 32, align: 32, offset: 83456)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2409, file: !47, line: 434, baseType: !2475, size: 64, align: 64, offset: 256)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64, align: 64)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{null, !2418}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "print_section_header", scope: !2409, file: !47, line: 436, baseType: !2475, size: 64, align: 64, offset: 320)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "print_section_footer", scope: !2409, file: !47, line: 437, baseType: !2475, size: 64, align: 64, offset: 384)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "print_integer", scope: !2409, file: !47, line: 438, baseType: !2481, size: 64, align: 64, offset: 448)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64, align: 64)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{null, !2418, !1027, !1109}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "print_rational", scope: !2409, file: !47, line: 439, baseType: !2485, size: 64, align: 64, offset: 512)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64, align: 64)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{null, !2418, !2488, !1014}
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64, align: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "print_string", scope: !2409, file: !47, line: 440, baseType: !2490, size: 64, align: 64, offset: 576)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64, align: 64)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{null, !2418, !1027, !1027}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2409, file: !47, line: 441, baseType: !1041, size: 32, align: 32, offset: 640)
!2494 = distinct !DIGlobalVariable(name: "registered_writers", scope: !0, file: !47, line: 877, type: !2495, isLocal: true, isDefinition: true, variable: [65 x %struct.Writer*]* @registered_writers)
!2495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2406, size: 4160, align: 64, elements: !1252)
!2496 = distinct !DIGlobalVariable(name: "default_writer", scope: !0, file: !47, line: 1003, type: !2407, isLocal: true, isDefinition: true, variable: %struct.Writer* @default_writer)
!2497 = distinct !DIGlobalVariable(name: "default_class", scope: !0, file: !47, line: 935, type: !1108, isLocal: true, isDefinition: true, variable: %struct.AVClass* @default_class)
!2498 = distinct !DIGlobalVariable(name: "default_options", scope: !0, file: !47, line: 927, type: !2499, isLocal: true, isDefinition: true, variable: [5 x %struct.AVOption]* @default_options)
!2499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2500, size: 2560, align: 64, elements: !2090)
!2500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2501)
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !4, line: 301, baseType: !1036)
!2502 = distinct !DIGlobalVariable(name: "compact_writer", scope: !0, file: !47, line: 1180, type: !2407, isLocal: true, isDefinition: true, variable: %struct.Writer* @compact_writer)
!2503 = distinct !DIGlobalVariable(name: "compact_class", scope: !0, file: !47, line: 1093, type: !1108, isLocal: true, isDefinition: true, variable: %struct.AVClass* @compact_class)
!2504 = distinct !DIGlobalVariable(name: "compact_options", scope: !0, file: !47, line: 1081, type: !2505, isLocal: true, isDefinition: true, variable: <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @compact_options)
!2505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2500, size: 4608, align: 64, elements: !2506)
!2506 = !{!2507}
!2507 = !DISubrange(count: 9)
!2508 = distinct !DIGlobalVariable(name: "csv_writer", scope: !0, file: !47, line: 1211, type: !2407, isLocal: true, isDefinition: true, variable: %struct.Writer* @csv_writer)
!2509 = distinct !DIGlobalVariable(name: "csv_class", scope: !0, file: !47, line: 1209, type: !1108, isLocal: true, isDefinition: true, variable: %struct.AVClass* @csv_class)
!2510 = distinct !DIGlobalVariable(name: "csv_options", scope: !0, file: !47, line: 1197, type: !2505, isLocal: true, isDefinition: true, variable: <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @csv_options)
!2511 = distinct !DIGlobalVariable(name: "flat_writer", scope: !0, file: !47, line: 1336, type: !2407, isLocal: true, isDefinition: true, variable: %struct.Writer* @flat_writer)
!2512 = distinct !DIGlobalVariable(name: "flat_class", scope: !0, file: !47, line: 1243, type: !1108, isLocal: true, isDefinition: true, variable: %struct.AVClass* @flat_class)
!2513 = distinct !DIGlobalVariable(name: "flat_options", scope: !0, file: !47, line: 1235, type: !2499, isLocal: true, isDefinition: true, variable: <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @flat_options)
!2514 = distinct !DIGlobalVariable(name: "ini_writer", scope: !0, file: !47, line: 1441, type: !2407, isLocal: true, isDefinition: true, variable: %struct.Writer* @ini_writer)
!2515 = distinct !DIGlobalVariable(name: "ini_class", scope: !0, file: !47, line: 1363, type: !1108, isLocal: true, isDefinition: true, variable: %struct.AVClass* @ini_class)
!2516 = distinct !DIGlobalVariable(name: "ini_options", scope: !0, file: !47, line: 1357, type: !2517, isLocal: true, isDefinition: true, variable: [3 x %struct.AVOption]* @ini_options)
!2517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2500, size: 1536, align: 64, elements: !2518)
!2518 = !{!1149}
!2519 = distinct !DIGlobalVariable(name: "json_writer", scope: !0, file: !47, line: 1601, type: !2407, isLocal: true, isDefinition: true, variable: %struct.Writer* @json_writer)
!2520 = distinct !DIGlobalVariable(name: "json_class", scope: !0, file: !47, line: 1469, type: !1108, isLocal: true, isDefinition: true, variable: %struct.AVClass* @json_class)
!2521 = distinct !DIGlobalVariable(name: "json_options", scope: !0, file: !47, line: 1463, type: !2517, isLocal: true, isDefinition: true, variable: [3 x %struct.AVOption]* @json_options)
!2522 = distinct !DIGlobalVariable(name: "json_escape", scope: !2523, file: !47, line: 1483, type: !1174, isLocal: true, isDefinition: true, variable: [8 x i8]* @json_escape_str.json_escape)
!2523 = distinct !DISubprogram(name: "json_escape_str", scope: !47, file: !47, line: 1481, type: !2524, isLocal: true, isDefinition: true, scopeLine: 1482, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{!1027, !2526, !1027, !1013}
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64, align: 64)
!2527 = distinct !DIGlobalVariable(name: "json_subst", scope: !2523, file: !47, line: 1484, type: !1174, isLocal: true, isDefinition: true, variable: [8 x i8]* @json_escape_str.json_subst)
!2528 = distinct !DIGlobalVariable(name: "writer_class", scope: !0, file: !47, line: 503, type: !1108, isLocal: true, isDefinition: true, variable: %struct.AVClass* @writer_class)
!2529 = distinct !DIGlobalVariable(name: "writer_options", scope: !0, file: !47, line: 482, type: !2530, isLocal: true, isDefinition: true, variable: <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption }>* @writer_options)
!2530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2500, size: 4096, align: 64, elements: !1175)
!2531 = distinct !DIGlobalVariable(name: "sections", scope: !0, file: !47, line: 201, type: !2532, isLocal: true, isDefinition: true, variable: [42 x %struct.section]* @sections)
!2532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2429, size: 32256, align: 64, elements: !2533)
!2533 = !{!2534}
!2534 = !DISubrange(count: 42)
!2535 = distinct !DIGlobalVariable(name: "xml_writer", scope: !0, file: !47, line: 1773, type: !2408, isLocal: true, isDefinition: true, variable: %struct.Writer* @xml_writer)
!2536 = distinct !DIGlobalVariable(name: "xml_class", scope: !0, file: !47, line: 1634, type: !1108, isLocal: true, isDefinition: true, variable: %struct.AVClass* @xml_class)
!2537 = distinct !DIGlobalVariable(name: "xml_options", scope: !0, file: !47, line: 1626, type: !2499, isLocal: true, isDefinition: true, variable: [5 x %struct.AVOption]* @xml_options)
!2538 = distinct !DIGlobalVariable(name: "do_read_frames", scope: !0, file: !47, line: 87, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_read_frames)
!2539 = distinct !DIGlobalVariable(name: "do_read_packets", scope: !0, file: !47, line: 88, type: !1041, isLocal: true, isDefinition: true, variable: i32* @do_read_packets)
!2540 = distinct !DIGlobalVariable(name: "nb_streams", scope: !0, file: !47, line: 276, type: !1041, isLocal: true, isDefinition: true, variable: i32* @nb_streams)
!2541 = distinct !DIGlobalVariable(name: "nb_streams_frames", scope: !0, file: !47, line: 278, type: !2542, isLocal: true, isDefinition: true, variable: i64** @nb_streams_frames)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64, align: 64)
!2543 = distinct !DIGlobalVariable(name: "nb_streams_packets", scope: !0, file: !47, line: 277, type: !2542, isLocal: true, isDefinition: true, variable: i64** @nb_streams_packets)
!2544 = distinct !DIGlobalVariable(name: "selected_streams", scope: !0, file: !47, line: 279, type: !1695, isLocal: true, isDefinition: true, variable: i32** @selected_streams)
!2545 = distinct !DIGlobalVariable(name: "unit_second_str", scope: !0, file: !47, line: 271, type: !2546, isLocal: true, isDefinition: true, variable: [2 x i8]* @unit_second_str)
!2546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 16, align: 8, elements: !1153)
!2547 = distinct !DIGlobalVariable(name: "unit_byte_str", scope: !0, file: !47, line: 273, type: !2548, isLocal: true, isDefinition: true, variable: [5 x i8]* @unit_byte_str)
!2548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 40, align: 8, elements: !2090)
!2549 = distinct !DIGlobalVariable(name: "si_prefixes", scope: !0, file: !47, line: 262, type: !2550, isLocal: true, isDefinition: true, variable: [6 x %struct.anon.2]* @si_prefixes)
!2550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2551, size: 1536, align: 64, elements: !2558)
!2551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2552)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !47, line: 257, size: 256, align: 64, elements: !2553)
!2553 = !{!2554, !2555, !2556, !2557}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "bin_val", scope: !2552, file: !47, line: 258, baseType: !1020, size: 64, align: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "dec_val", scope: !2552, file: !47, line: 259, baseType: !1020, size: 64, align: 64, offset: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "bin_str", scope: !2552, file: !47, line: 260, baseType: !1027, size: 64, align: 64, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "dec_str", scope: !2552, file: !47, line: 261, baseType: !1027, size: 64, align: 64, offset: 192)
!2558 = !{!2559}
!2559 = !DISubrange(count: 6)
!2560 = distinct !DIGlobalVariable(name: "unit_hertz_str", scope: !0, file: !47, line: 272, type: !2561, isLocal: true, isDefinition: true, variable: [3 x i8]* @unit_hertz_str)
!2561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 24, align: 8, elements: !2518)
!2562 = distinct !DIGlobalVariable(name: "unit_bit_per_second_str", scope: !0, file: !47, line: 274, type: !2563, isLocal: true, isDefinition: true, variable: [6 x i8]* @unit_bit_per_second_str)
!2563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 48, align: 8, elements: !2558)
!2564 = !{i32 2, !"Dwarf Version", i32 4}
!2565 = !{i32 2, !"Debug Info Version", i32 3}
!2566 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2567 = distinct !DISubprogram(name: "show_help_default", scope: !47, file: !47, line: 3271, type: !2568, isLocal: false, isDefinition: true, scopeLine: 3272, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!2568 = !DISubroutineType(types: !2569)
!2569 = !{null, !1027, !1027}
!2570 = !DILocalVariable(name: "opt", arg: 1, scope: !2567, file: !47, line: 3271, type: !1027)
!2571 = !DIExpression()
!2572 = !DILocation(line: 3271, column: 36, scope: !2567)
!2573 = !DILocalVariable(name: "arg", arg: 2, scope: !2567, file: !47, line: 3271, type: !1027)
!2574 = !DILocation(line: 3271, column: 53, scope: !2567)
!2575 = !DILocation(line: 3273, column: 5, scope: !2567)
!2576 = !DILocation(line: 3274, column: 5, scope: !2567)
!2577 = !DILocation(line: 3275, column: 23, scope: !2567)
!2578 = !DILocation(line: 3275, column: 5, scope: !2567)
!2579 = !DILocation(line: 3276, column: 5, scope: !2567)
!2580 = !DILocation(line: 3278, column: 24, scope: !2567)
!2581 = !DILocation(line: 3278, column: 5, scope: !2582)
!2582 = !DILexicalBlockFile(scope: !2567, file: !47, discriminator: 1)
!2583 = !DILocation(line: 3279, column: 24, scope: !2567)
!2584 = !DILocation(line: 3279, column: 5, scope: !2582)
!2585 = !DILocation(line: 3280, column: 1, scope: !2567)
!2586 = distinct !DISubprogram(name: "show_usage", scope: !47, file: !47, line: 3036, type: !2400, isLocal: true, isDefinition: true, scopeLine: 3037, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!2587 = !DILocation(line: 3038, column: 5, scope: !2586)
!2588 = !DILocation(line: 3039, column: 5, scope: !2586)
!2589 = !DILocation(line: 3040, column: 5, scope: !2586)
!2590 = !DILocation(line: 3041, column: 1, scope: !2586)
!2591 = distinct !DISubprogram(name: "main", scope: !47, file: !47, line: 3551, type: !2592, isLocal: false, isDefinition: true, scopeLine: 3552, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{!1041, !1041, !2594}
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64, align: 64)
!2595 = !DILocalVariable(name: "argc", arg: 1, scope: !2591, file: !47, line: 3551, type: !1041)
!2596 = !DILocation(line: 3551, column: 14, scope: !2591)
!2597 = !DILocalVariable(name: "argv", arg: 2, scope: !2591, file: !47, line: 3551, type: !2594)
!2598 = !DILocation(line: 3551, column: 27, scope: !2591)
!2599 = !DILocalVariable(name: "w", scope: !2591, file: !47, line: 3553, type: !2406)
!2600 = !DILocation(line: 3553, column: 19, scope: !2591)
!2601 = !DILocalVariable(name: "wctx", scope: !2591, file: !47, line: 3554, type: !2418)
!2602 = !DILocation(line: 3554, column: 20, scope: !2591)
!2603 = !DILocalVariable(name: "buf", scope: !2591, file: !47, line: 3555, type: !1014)
!2604 = !DILocation(line: 3555, column: 11, scope: !2591)
!2605 = !DILocalVariable(name: "w_name", scope: !2591, file: !47, line: 3556, type: !1014)
!2606 = !DILocation(line: 3556, column: 11, scope: !2591)
!2607 = !DILocalVariable(name: "w_args", scope: !2591, file: !47, line: 3556, type: !1014)
!2608 = !DILocation(line: 3556, column: 26, scope: !2591)
!2609 = !DILocalVariable(name: "ret", scope: !2591, file: !47, line: 3557, type: !1041)
!2610 = !DILocation(line: 3557, column: 9, scope: !2591)
!2611 = !DILocalVariable(name: "i", scope: !2591, file: !47, line: 3557, type: !1041)
!2612 = !DILocation(line: 3557, column: 14, scope: !2591)
!2613 = !DILocation(line: 3559, column: 5, scope: !2591)
!2614 = !DILocation(line: 3562, column: 11, scope: !2591)
!2615 = !DILocation(line: 3562, column: 9, scope: !2591)
!2616 = !DILocation(line: 3563, column: 9, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3563, column: 9)
!2618 = !DILocation(line: 3563, column: 13, scope: !2617)
!2619 = !DILocation(line: 3563, column: 9, scope: !2591)
!2620 = !DILocation(line: 3564, column: 9, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !2617, file: !47, line: 3563, column: 19)
!2622 = !DILocation(line: 3567, column: 5, scope: !2591)
!2623 = !DILocation(line: 3568, column: 5, scope: !2591)
!2624 = !DILocation(line: 3570, column: 13, scope: !2591)
!2625 = !DILocation(line: 3571, column: 20, scope: !2591)
!2626 = !DILocation(line: 3571, column: 26, scope: !2591)
!2627 = !DILocation(line: 3571, column: 32, scope: !2591)
!2628 = !DILocation(line: 3571, column: 5, scope: !2591)
!2629 = !DILocation(line: 3572, column: 5, scope: !2591)
!2630 = !DILocation(line: 3573, column: 5, scope: !2591)
!2631 = !DILocation(line: 3575, column: 5, scope: !2591)
!2632 = !DILocation(line: 3578, column: 17, scope: !2591)
!2633 = !DILocation(line: 3578, column: 23, scope: !2591)
!2634 = !DILocation(line: 3578, column: 29, scope: !2591)
!2635 = !DILocation(line: 3578, column: 5, scope: !2591)
!2636 = !DILocation(line: 3579, column: 24, scope: !2591)
!2637 = !DILocation(line: 3579, column: 30, scope: !2591)
!2638 = !DILocation(line: 3579, column: 36, scope: !2591)
!2639 = !DILocation(line: 3579, column: 5, scope: !2591)
!2640 = !DILocation(line: 3581, column: 9, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3581, column: 9)
!2642 = !DILocation(line: 3581, column: 9, scope: !2591)
!2643 = !DILocation(line: 3582, column: 9, scope: !2641)
!2644 = !DILocation(line: 3585, column: 5, scope: !2591)
!2645 = distinct !{!2645, !2644}
!2646 = !DILocation(line: 3585, column: 14, scope: !2647)
!2647 = !DILexicalBlockFile(scope: !2648, file: !47, discriminator: 1)
!2648 = distinct !DILexicalBlock(scope: !2649, file: !47, line: 3585, column: 14)
!2649 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3585, column: 8)
!2650 = !DILocation(line: 3585, column: 80, scope: !2651)
!2651 = !DILexicalBlockFile(scope: !2648, file: !47, discriminator: 2)
!2652 = !DILocation(line: 3585, column: 63, scope: !2651)
!2653 = !DILocation(line: 3585, column: 85, scope: !2654)
!2654 = !DILexicalBlockFile(scope: !2649, file: !47, discriminator: 3)
!2655 = !DILocation(line: 3586, column: 5, scope: !2591)
!2656 = distinct !{!2656, !2655}
!2657 = !DILocation(line: 3586, column: 14, scope: !2658)
!2658 = !DILexicalBlockFile(scope: !2659, file: !47, discriminator: 1)
!2659 = distinct !DILexicalBlock(scope: !2660, file: !47, line: 3586, column: 14)
!2660 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3586, column: 8)
!2661 = !DILocation(line: 3586, column: 74, scope: !2662)
!2662 = !DILexicalBlockFile(scope: !2659, file: !47, discriminator: 2)
!2663 = !DILocation(line: 3586, column: 60, scope: !2662)
!2664 = !DILocation(line: 3586, column: 79, scope: !2665)
!2665 = !DILexicalBlockFile(scope: !2660, file: !47, discriminator: 3)
!2666 = !DILocation(line: 3587, column: 5, scope: !2591)
!2667 = distinct !{!2667, !2666}
!2668 = !DILocation(line: 3587, column: 14, scope: !2669)
!2669 = !DILexicalBlockFile(scope: !2670, file: !47, discriminator: 1)
!2670 = distinct !DILexicalBlock(scope: !2671, file: !47, line: 3587, column: 14)
!2671 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3587, column: 8)
!2672 = !DILocation(line: 3587, column: 76, scope: !2673)
!2673 = !DILexicalBlockFile(scope: !2670, file: !47, discriminator: 2)
!2674 = !DILocation(line: 3587, column: 61, scope: !2673)
!2675 = !DILocation(line: 3587, column: 81, scope: !2676)
!2676 = !DILexicalBlockFile(scope: !2671, file: !47, discriminator: 3)
!2677 = !DILocation(line: 3588, column: 5, scope: !2591)
!2678 = distinct !{!2678, !2677}
!2679 = !DILocation(line: 3588, column: 14, scope: !2680)
!2680 = !DILexicalBlockFile(scope: !2681, file: !47, discriminator: 1)
!2681 = distinct !DILexicalBlock(scope: !2682, file: !47, line: 3588, column: 14)
!2682 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3588, column: 8)
!2683 = !DILocation(line: 3588, column: 76, scope: !2684)
!2684 = !DILexicalBlockFile(scope: !2681, file: !47, discriminator: 2)
!2685 = !DILocation(line: 3588, column: 61, scope: !2684)
!2686 = !DILocation(line: 3588, column: 81, scope: !2687)
!2687 = !DILexicalBlockFile(scope: !2682, file: !47, discriminator: 3)
!2688 = !DILocation(line: 3589, column: 5, scope: !2591)
!2689 = distinct !{!2689, !2688}
!2690 = !DILocation(line: 3589, column: 14, scope: !2691)
!2691 = !DILexicalBlockFile(scope: !2692, file: !47, discriminator: 1)
!2692 = distinct !DILexicalBlock(scope: !2693, file: !47, line: 3589, column: 14)
!2693 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3589, column: 8)
!2694 = !DILocation(line: 3589, column: 96, scope: !2695)
!2695 = !DILexicalBlockFile(scope: !2692, file: !47, discriminator: 2)
!2696 = !DILocation(line: 3589, column: 71, scope: !2695)
!2697 = !DILocation(line: 3589, column: 101, scope: !2698)
!2698 = !DILexicalBlockFile(scope: !2693, file: !47, discriminator: 3)
!2699 = !DILocation(line: 3590, column: 5, scope: !2591)
!2700 = distinct !{!2700, !2699}
!2701 = !DILocation(line: 3590, column: 14, scope: !2702)
!2702 = !DILexicalBlockFile(scope: !2703, file: !47, discriminator: 1)
!2703 = distinct !DILexicalBlock(scope: !2704, file: !47, line: 3590, column: 14)
!2704 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3590, column: 8)
!2705 = !DILocation(line: 3590, column: 78, scope: !2706)
!2706 = !DILexicalBlockFile(scope: !2703, file: !47, discriminator: 2)
!2707 = !DILocation(line: 3590, column: 62, scope: !2706)
!2708 = !DILocation(line: 3590, column: 83, scope: !2709)
!2709 = !DILexicalBlockFile(scope: !2704, file: !47, discriminator: 3)
!2710 = !DILocation(line: 3591, column: 5, scope: !2591)
!2711 = distinct !{!2711, !2710}
!2712 = !DILocation(line: 3591, column: 14, scope: !2713)
!2713 = !DILexicalBlockFile(scope: !2714, file: !47, discriminator: 1)
!2714 = distinct !DILexicalBlock(scope: !2715, file: !47, line: 3591, column: 14)
!2715 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3591, column: 8)
!2716 = !DILocation(line: 3591, column: 90, scope: !2717)
!2717 = !DILexicalBlockFile(scope: !2714, file: !47, discriminator: 2)
!2718 = !DILocation(line: 3591, column: 68, scope: !2717)
!2719 = !DILocation(line: 3591, column: 95, scope: !2720)
!2720 = !DILexicalBlockFile(scope: !2715, file: !47, discriminator: 3)
!2721 = !DILocation(line: 3592, column: 5, scope: !2591)
!2722 = distinct !{!2722, !2721}
!2723 = !DILocation(line: 3592, column: 14, scope: !2724)
!2724 = !DILexicalBlockFile(scope: !2725, file: !47, discriminator: 1)
!2725 = distinct !DILexicalBlock(scope: !2726, file: !47, line: 3592, column: 14)
!2726 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3592, column: 8)
!2727 = !DILocation(line: 3592, column: 100, scope: !2728)
!2728 = !DILexicalBlockFile(scope: !2725, file: !47, discriminator: 2)
!2729 = !DILocation(line: 3592, column: 73, scope: !2728)
!2730 = !DILocation(line: 3592, column: 105, scope: !2731)
!2731 = !DILexicalBlockFile(scope: !2726, file: !47, discriminator: 3)
!2732 = !DILocation(line: 3593, column: 5, scope: !2591)
!2733 = distinct !{!2733, !2732}
!2734 = !DILocation(line: 3593, column: 14, scope: !2735)
!2735 = !DILexicalBlockFile(scope: !2736, file: !47, discriminator: 1)
!2736 = distinct !DILexicalBlock(scope: !2737, file: !47, line: 3593, column: 14)
!2737 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3593, column: 8)
!2738 = !DILocation(line: 3593, column: 110, scope: !2739)
!2739 = !DILexicalBlockFile(scope: !2736, file: !47, discriminator: 2)
!2740 = !DILocation(line: 3593, column: 78, scope: !2739)
!2741 = !DILocation(line: 3593, column: 115, scope: !2742)
!2742 = !DILexicalBlockFile(scope: !2737, file: !47, discriminator: 3)
!2743 = !DILocation(line: 3594, column: 5, scope: !2591)
!2744 = distinct !{!2744, !2743}
!2745 = !DILocation(line: 3594, column: 14, scope: !2746)
!2746 = !DILexicalBlockFile(scope: !2747, file: !47, discriminator: 1)
!2747 = distinct !DILexicalBlock(scope: !2748, file: !47, line: 3594, column: 14)
!2748 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3594, column: 8)
!2749 = !DILocation(line: 3594, column: 94, scope: !2750)
!2750 = !DILexicalBlockFile(scope: !2747, file: !47, discriminator: 2)
!2751 = !DILocation(line: 3594, column: 70, scope: !2750)
!2752 = !DILocation(line: 3594, column: 99, scope: !2753)
!2753 = !DILexicalBlockFile(scope: !2748, file: !47, discriminator: 3)
!2754 = !DILocation(line: 3595, column: 5, scope: !2591)
!2755 = distinct !{!2755, !2754}
!2756 = !DILocation(line: 3595, column: 14, scope: !2757)
!2757 = !DILexicalBlockFile(scope: !2758, file: !47, discriminator: 1)
!2758 = distinct !DILexicalBlock(scope: !2759, file: !47, line: 3595, column: 14)
!2759 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3595, column: 8)
!2760 = !DILocation(line: 3595, column: 80, scope: !2761)
!2761 = !DILexicalBlockFile(scope: !2758, file: !47, discriminator: 2)
!2762 = !DILocation(line: 3595, column: 63, scope: !2761)
!2763 = !DILocation(line: 3595, column: 85, scope: !2764)
!2764 = !DILexicalBlockFile(scope: !2759, file: !47, discriminator: 3)
!2765 = !DILocation(line: 3596, column: 5, scope: !2591)
!2766 = distinct !{!2766, !2765}
!2767 = !DILocation(line: 3596, column: 14, scope: !2768)
!2768 = !DILexicalBlockFile(scope: !2769, file: !47, discriminator: 1)
!2769 = distinct !DILexicalBlock(scope: !2770, file: !47, line: 3596, column: 14)
!2770 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3596, column: 8)
!2771 = !DILocation(line: 3596, column: 78, scope: !2772)
!2772 = !DILexicalBlockFile(scope: !2769, file: !47, discriminator: 2)
!2773 = !DILocation(line: 3596, column: 62, scope: !2772)
!2774 = !DILocation(line: 3596, column: 83, scope: !2775)
!2775 = !DILexicalBlockFile(scope: !2770, file: !47, discriminator: 3)
!2776 = !DILocation(line: 3597, column: 5, scope: !2591)
!2777 = distinct !{!2777, !2776}
!2778 = !DILocation(line: 3597, column: 14, scope: !2779)
!2779 = !DILexicalBlockFile(scope: !2780, file: !47, discriminator: 1)
!2780 = distinct !DILexicalBlock(scope: !2781, file: !47, line: 3597, column: 14)
!2781 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3597, column: 8)
!2782 = !DILocation(line: 3597, column: 100, scope: !2783)
!2783 = !DILexicalBlockFile(scope: !2780, file: !47, discriminator: 2)
!2784 = !DILocation(line: 3597, column: 73, scope: !2783)
!2785 = !DILocation(line: 3597, column: 105, scope: !2786)
!2786 = !DILexicalBlockFile(scope: !2781, file: !47, discriminator: 3)
!2787 = !DILocation(line: 3598, column: 5, scope: !2591)
!2788 = distinct !{!2788, !2787}
!2789 = !DILocation(line: 3598, column: 14, scope: !2790)
!2790 = !DILexicalBlockFile(scope: !2791, file: !47, discriminator: 1)
!2791 = distinct !DILexicalBlock(scope: !2792, file: !47, line: 3598, column: 14)
!2792 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3598, column: 8)
!2793 = !DILocation(line: 3598, column: 108, scope: !2794)
!2794 = !DILexicalBlockFile(scope: !2791, file: !47, discriminator: 2)
!2795 = !DILocation(line: 3598, column: 81, scope: !2794)
!2796 = !DILocation(line: 3598, column: 113, scope: !2797)
!2797 = !DILexicalBlockFile(scope: !2792, file: !47, discriminator: 3)
!2798 = !DILocation(line: 3600, column: 5, scope: !2591)
!2799 = distinct !{!2799, !2798}
!2800 = !DILocation(line: 3600, column: 14, scope: !2801)
!2801 = !DILexicalBlockFile(scope: !2802, file: !47, discriminator: 1)
!2802 = distinct !DILexicalBlock(scope: !2803, file: !47, line: 3600, column: 14)
!2803 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3600, column: 8)
!2804 = !DILocation(line: 3600, column: 88, scope: !2805)
!2805 = !DILexicalBlockFile(scope: !2802, file: !47, discriminator: 2)
!2806 = !DILocation(line: 3600, column: 67, scope: !2805)
!2807 = !DILocation(line: 3600, column: 93, scope: !2808)
!2808 = !DILexicalBlockFile(scope: !2803, file: !47, discriminator: 3)
!2809 = !DILocation(line: 3601, column: 5, scope: !2591)
!2810 = distinct !{!2810, !2809}
!2811 = !DILocation(line: 3601, column: 14, scope: !2812)
!2812 = !DILexicalBlockFile(scope: !2813, file: !47, discriminator: 1)
!2813 = distinct !DILexicalBlock(scope: !2814, file: !47, line: 3601, column: 14)
!2814 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3601, column: 8)
!2815 = !DILocation(line: 3601, column: 86, scope: !2816)
!2816 = !DILexicalBlockFile(scope: !2813, file: !47, discriminator: 2)
!2817 = !DILocation(line: 3601, column: 66, scope: !2816)
!2818 = !DILocation(line: 3601, column: 91, scope: !2819)
!2819 = !DILexicalBlockFile(scope: !2814, file: !47, discriminator: 3)
!2820 = !DILocation(line: 3602, column: 5, scope: !2591)
!2821 = distinct !{!2821, !2820}
!2822 = !DILocation(line: 3602, column: 14, scope: !2823)
!2823 = !DILexicalBlockFile(scope: !2824, file: !47, discriminator: 1)
!2824 = distinct !DILexicalBlock(scope: !2825, file: !47, line: 3602, column: 14)
!2825 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3602, column: 8)
!2826 = !DILocation(line: 3602, column: 84, scope: !2827)
!2827 = !DILexicalBlockFile(scope: !2824, file: !47, discriminator: 2)
!2828 = !DILocation(line: 3602, column: 65, scope: !2827)
!2829 = !DILocation(line: 3602, column: 89, scope: !2830)
!2830 = !DILexicalBlockFile(scope: !2825, file: !47, discriminator: 3)
!2831 = !DILocation(line: 3603, column: 5, scope: !2591)
!2832 = distinct !{!2832, !2831}
!2833 = !DILocation(line: 3603, column: 14, scope: !2834)
!2834 = !DILexicalBlockFile(scope: !2835, file: !47, discriminator: 1)
!2835 = distinct !DILexicalBlock(scope: !2836, file: !47, line: 3603, column: 14)
!2836 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3603, column: 8)
!2837 = !DILocation(line: 3603, column: 88, scope: !2838)
!2838 = !DILexicalBlockFile(scope: !2835, file: !47, discriminator: 2)
!2839 = !DILocation(line: 3603, column: 67, scope: !2838)
!2840 = !DILocation(line: 3603, column: 93, scope: !2841)
!2841 = !DILexicalBlockFile(scope: !2836, file: !47, discriminator: 3)
!2842 = !DILocation(line: 3604, column: 5, scope: !2591)
!2843 = distinct !{!2843, !2842}
!2844 = !DILocation(line: 3604, column: 14, scope: !2845)
!2845 = !DILexicalBlockFile(scope: !2846, file: !47, discriminator: 1)
!2846 = distinct !DILexicalBlock(scope: !2847, file: !47, line: 3604, column: 14)
!2847 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3604, column: 8)
!2848 = !DILocation(line: 3604, column: 86, scope: !2849)
!2849 = !DILexicalBlockFile(scope: !2846, file: !47, discriminator: 2)
!2850 = !DILocation(line: 3604, column: 66, scope: !2849)
!2851 = !DILocation(line: 3604, column: 91, scope: !2852)
!2852 = !DILexicalBlockFile(scope: !2847, file: !47, discriminator: 3)
!2853 = !DILocation(line: 3605, column: 5, scope: !2591)
!2854 = distinct !{!2854, !2853}
!2855 = !DILocation(line: 3605, column: 14, scope: !2856)
!2856 = !DILexicalBlockFile(scope: !2857, file: !47, discriminator: 1)
!2857 = distinct !DILexicalBlock(scope: !2858, file: !47, line: 3605, column: 14)
!2858 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3605, column: 8)
!2859 = !DILocation(line: 3605, column: 94, scope: !2860)
!2860 = !DILexicalBlockFile(scope: !2857, file: !47, discriminator: 2)
!2861 = !DILocation(line: 3605, column: 74, scope: !2860)
!2862 = !DILocation(line: 3605, column: 99, scope: !2863)
!2863 = !DILexicalBlockFile(scope: !2858, file: !47, discriminator: 3)
!2864 = !DILocation(line: 3606, column: 5, scope: !2591)
!2865 = distinct !{!2865, !2864}
!2866 = !DILocation(line: 3606, column: 14, scope: !2867)
!2867 = !DILexicalBlockFile(scope: !2868, file: !47, discriminator: 1)
!2868 = distinct !DILexicalBlock(scope: !2869, file: !47, line: 3606, column: 14)
!2869 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3606, column: 8)
!2870 = !DILocation(line: 3606, column: 86, scope: !2871)
!2871 = !DILexicalBlockFile(scope: !2868, file: !47, discriminator: 2)
!2872 = !DILocation(line: 3606, column: 66, scope: !2871)
!2873 = !DILocation(line: 3606, column: 91, scope: !2874)
!2874 = !DILexicalBlockFile(scope: !2869, file: !47, discriminator: 3)
!2875 = !DILocation(line: 3608, column: 9, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3608, column: 9)
!2877 = !DILocation(line: 3608, column: 21, scope: !2876)
!2878 = !DILocation(line: 3608, column: 25, scope: !2879)
!2879 = !DILexicalBlockFile(scope: !2876, file: !47, discriminator: 1)
!2880 = !DILocation(line: 3608, column: 49, scope: !2879)
!2881 = !DILocation(line: 3608, column: 52, scope: !2882)
!2882 = !DILexicalBlockFile(scope: !2876, file: !47, discriminator: 2)
!2883 = !DILocation(line: 3608, column: 9, scope: !2882)
!2884 = !DILocation(line: 3609, column: 9, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2876, file: !47, line: 3608, column: 79)
!2886 = !DILocation(line: 3612, column: 13, scope: !2885)
!2887 = !DILocation(line: 3613, column: 9, scope: !2885)
!2888 = !DILocation(line: 3616, column: 5, scope: !2591)
!2889 = !DILocation(line: 3618, column: 10, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3618, column: 9)
!2891 = !DILocation(line: 3618, column: 9, scope: !2591)
!2892 = !DILocation(line: 3619, column: 24, scope: !2890)
!2893 = !DILocation(line: 3619, column: 22, scope: !2890)
!2894 = !DILocation(line: 3619, column: 9, scope: !2890)
!2895 = !DILocation(line: 3620, column: 10, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3620, column: 9)
!2897 = !DILocation(line: 3620, column: 9, scope: !2591)
!2898 = !DILocation(line: 3621, column: 13, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2896, file: !47, line: 3620, column: 24)
!2900 = !DILocation(line: 3622, column: 9, scope: !2899)
!2901 = !DILocation(line: 3624, column: 24, scope: !2591)
!2902 = !DILocation(line: 3624, column: 14, scope: !2591)
!2903 = !DILocation(line: 3624, column: 12, scope: !2591)
!2904 = !DILocation(line: 3625, column: 10, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3625, column: 9)
!2906 = !DILocation(line: 3625, column: 9, scope: !2591)
!2907 = !DILocation(line: 3626, column: 9, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2905, file: !47, line: 3625, column: 18)
!2909 = !DILocation(line: 3628, column: 13, scope: !2908)
!2910 = !DILocation(line: 3629, column: 9, scope: !2908)
!2911 = !DILocation(line: 3631, column: 14, scope: !2591)
!2912 = !DILocation(line: 3631, column: 12, scope: !2591)
!2913 = !DILocation(line: 3633, column: 9, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3633, column: 9)
!2915 = !DILocation(line: 3633, column: 9, scope: !2591)
!2916 = !DILocation(line: 3634, column: 41, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2918, file: !47, line: 3634, column: 13)
!2918 = distinct !DILexicalBlock(scope: !2914, file: !47, line: 3633, column: 25)
!2919 = !DILocation(line: 3634, column: 20, scope: !2917)
!2920 = !DILocation(line: 3634, column: 18, scope: !2917)
!2921 = !DILocation(line: 3634, column: 58, scope: !2917)
!2922 = !DILocation(line: 3634, column: 13, scope: !2918)
!2923 = !DILocation(line: 3635, column: 17, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2925, file: !47, line: 3635, column: 17)
!2925 = distinct !DILexicalBlock(scope: !2917, file: !47, line: 3634, column: 63)
!2926 = !DILocation(line: 3635, column: 21, scope: !2924)
!2927 = !DILocation(line: 3635, column: 17, scope: !2925)
!2928 = !DILocalVariable(name: "n", scope: !2929, file: !47, line: 3636, type: !1027)
!2929 = distinct !DILexicalBlock(scope: !2924, file: !47, line: 3635, column: 27)
!2930 = !DILocation(line: 3636, column: 29, scope: !2929)
!2931 = !DILocation(line: 3639, column: 24, scope: !2929)
!2932 = !DILocation(line: 3637, column: 17, scope: !2929)
!2933 = !DILocation(line: 3640, column: 24, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2929, file: !47, line: 3640, column: 17)
!2935 = !DILocation(line: 3640, column: 22, scope: !2934)
!2936 = !DILocation(line: 3640, column: 48, scope: !2937)
!2937 = !DILexicalBlockFile(scope: !2938, file: !47, discriminator: 1)
!2938 = distinct !DILexicalBlock(scope: !2934, file: !47, line: 3640, column: 17)
!2939 = !DILocation(line: 3640, column: 34, scope: !2937)
!2940 = !DILocation(line: 3640, column: 32, scope: !2937)
!2941 = !DILocation(line: 3640, column: 17, scope: !2937)
!2942 = !DILocation(line: 3641, column: 44, scope: !2938)
!2943 = !DILocation(line: 3641, column: 21, scope: !2938)
!2944 = !DILocation(line: 3640, column: 54, scope: !2945)
!2945 = !DILexicalBlockFile(scope: !2938, file: !47, discriminator: 2)
!2946 = !DILocation(line: 3640, column: 17, scope: !2945)
!2947 = distinct !{!2947, !2948}
!2948 = !DILocation(line: 3640, column: 17, scope: !2929)
!2949 = !DILocation(line: 3642, column: 17, scope: !2929)
!2950 = !DILocation(line: 3643, column: 13, scope: !2929)
!2951 = !DILocation(line: 3644, column: 13, scope: !2925)
!2952 = !DILocation(line: 3646, column: 5, scope: !2918)
!2953 = !DILocation(line: 3648, column: 28, scope: !2591)
!2954 = !DILocation(line: 3648, column: 9, scope: !2591)
!2955 = !DILocation(line: 3648, column: 7, scope: !2591)
!2956 = !DILocation(line: 3649, column: 10, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3649, column: 9)
!2958 = !DILocation(line: 3649, column: 9, scope: !2591)
!2959 = !DILocation(line: 3650, column: 67, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2957, file: !47, line: 3649, column: 13)
!2961 = !DILocation(line: 3650, column: 9, scope: !2960)
!2962 = !DILocation(line: 3651, column: 13, scope: !2960)
!2963 = !DILocation(line: 3652, column: 9, scope: !2960)
!2964 = !DILocation(line: 3655, column: 35, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3655, column: 9)
!2966 = !DILocation(line: 3655, column: 38, scope: !2965)
!2967 = !DILocation(line: 3655, column: 16, scope: !2965)
!2968 = !DILocation(line: 3655, column: 14, scope: !2965)
!2969 = !DILocation(line: 3656, column: 83, scope: !2965)
!2970 = !DILocation(line: 3655, column: 9, scope: !2591)
!2971 = !DILocation(line: 3657, column: 13, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2973, file: !47, line: 3657, column: 13)
!2973 = distinct !DILexicalBlock(scope: !2965, file: !47, line: 3656, column: 89)
!2974 = !DILocation(line: 3657, column: 15, scope: !2972)
!2975 = !DILocation(line: 3657, column: 13, scope: !2973)
!2976 = !DILocation(line: 3658, column: 13, scope: !2972)
!2977 = !DILocation(line: 3658, column: 19, scope: !2972)
!2978 = !DILocation(line: 3658, column: 48, scope: !2972)
!2979 = !DILocation(line: 3660, column: 37, scope: !2973)
!2980 = !DILocation(line: 3660, column: 9, scope: !2973)
!2981 = !DILocation(line: 3662, column: 13, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2973, file: !47, line: 3662, column: 13)
!2983 = !DILocation(line: 3662, column: 13, scope: !2973)
!2984 = !DILocation(line: 3663, column: 42, scope: !2982)
!2985 = !DILocation(line: 3663, column: 13, scope: !2982)
!2986 = !DILocation(line: 3664, column: 13, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2973, file: !47, line: 3664, column: 13)
!2988 = !DILocation(line: 3664, column: 13, scope: !2973)
!2989 = !DILocation(line: 3665, column: 43, scope: !2987)
!2990 = !DILocation(line: 3665, column: 13, scope: !2987)
!2991 = !DILocation(line: 3666, column: 13, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2973, file: !47, line: 3666, column: 13)
!2993 = !DILocation(line: 3666, column: 13, scope: !2973)
!2994 = !DILocation(line: 3667, column: 40, scope: !2992)
!2995 = !DILocation(line: 3667, column: 13, scope: !2992)
!2996 = !DILocation(line: 3669, column: 14, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2973, file: !47, line: 3669, column: 13)
!2998 = !DILocation(line: 3669, column: 29, scope: !2997)
!2999 = !DILocation(line: 3670, column: 15, scope: !2997)
!3000 = !DILocation(line: 3670, column: 30, scope: !2997)
!3001 = !DILocation(line: 3670, column: 33, scope: !3002)
!3002 = !DILexicalBlockFile(scope: !2997, file: !47, discriminator: 1)
!3003 = !DILocation(line: 3670, column: 50, scope: !3002)
!3004 = !DILocation(line: 3670, column: 53, scope: !3005)
!3005 = !DILexicalBlockFile(scope: !2997, file: !47, discriminator: 2)
!3006 = !DILocation(line: 3670, column: 69, scope: !3005)
!3007 = !DILocation(line: 3670, column: 72, scope: !3008)
!3008 = !DILexicalBlockFile(scope: !2997, file: !47, discriminator: 3)
!3009 = !DILocation(line: 3670, column: 89, scope: !3008)
!3010 = !DILocation(line: 3670, column: 92, scope: !3011)
!3011 = !DILexicalBlockFile(scope: !2997, file: !47, discriminator: 4)
!3012 = !DILocation(line: 3670, column: 108, scope: !3011)
!3013 = !DILocation(line: 3670, column: 111, scope: !3014)
!3014 = !DILexicalBlockFile(scope: !2997, file: !47, discriminator: 5)
!3015 = !DILocation(line: 3670, column: 126, scope: !3014)
!3016 = !DILocation(line: 3671, column: 16, scope: !2997)
!3017 = !DILocation(line: 3671, column: 40, scope: !2997)
!3018 = !DILocation(line: 3671, column: 44, scope: !3002)
!3019 = !DILocation(line: 3671, column: 69, scope: !3002)
!3020 = !DILocation(line: 3671, column: 73, scope: !3005)
!3021 = !DILocation(line: 3669, column: 13, scope: !3022)
!3022 = !DILexicalBlockFile(scope: !2973, file: !47, discriminator: 1)
!3023 = !DILocation(line: 3672, column: 13, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !2997, file: !47, line: 3671, column: 98)
!3025 = !DILocation(line: 3673, column: 13, scope: !3024)
!3026 = !DILocation(line: 3674, column: 13, scope: !3024)
!3027 = !DILocation(line: 3675, column: 17, scope: !3024)
!3028 = !DILocation(line: 3676, column: 9, scope: !3024)
!3029 = !DILocation(line: 3676, column: 20, scope: !3030)
!3030 = !DILexicalBlockFile(scope: !3031, file: !47, discriminator: 1)
!3031 = distinct !DILexicalBlock(scope: !2997, file: !47, line: 3676, column: 20)
!3032 = !DILocation(line: 3677, column: 30, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3031, file: !47, line: 3676, column: 36)
!3034 = !DILocation(line: 3677, column: 36, scope: !3033)
!3035 = !DILocation(line: 3677, column: 19, scope: !3033)
!3036 = !DILocation(line: 3677, column: 17, scope: !3033)
!3037 = !DILocation(line: 3678, column: 17, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3033, file: !47, line: 3678, column: 17)
!3039 = !DILocation(line: 3678, column: 21, scope: !3038)
!3040 = !DILocation(line: 3678, column: 25, scope: !3038)
!3041 = !DILocation(line: 3678, column: 28, scope: !3042)
!3042 = !DILexicalBlockFile(scope: !3038, file: !47, discriminator: 1)
!3043 = !DILocation(line: 3678, column: 17, scope: !3042)
!3044 = !DILocation(line: 3679, column: 28, scope: !3038)
!3045 = !DILocation(line: 3679, column: 34, scope: !3038)
!3046 = !DILocation(line: 3679, column: 17, scope: !3038)
!3047 = !DILocation(line: 3680, column: 9, scope: !3033)
!3048 = !DILocation(line: 3682, column: 37, scope: !2973)
!3049 = !DILocation(line: 3682, column: 9, scope: !2973)
!3050 = !DILocation(line: 3683, column: 9, scope: !2973)
!3051 = !DILocation(line: 3684, column: 5, scope: !2973)
!3052 = !DILocation(line: 3656, column: 86, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !2965, file: !47, discriminator: 1)
!3054 = !DILocation(line: 3687, column: 5, scope: !2591)
!3055 = !DILocation(line: 3688, column: 5, scope: !2591)
!3056 = !DILocation(line: 3689, column: 5, scope: !2591)
!3057 = !DILocation(line: 3691, column: 5, scope: !2591)
!3058 = !DILocation(line: 3692, column: 12, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !2591, file: !47, line: 3692, column: 5)
!3060 = !DILocation(line: 3692, column: 10, scope: !3059)
!3061 = !DILocation(line: 3692, column: 17, scope: !3062)
!3062 = !DILexicalBlockFile(scope: !3063, file: !47, discriminator: 1)
!3063 = distinct !DILexicalBlock(scope: !3059, file: !47, line: 3692, column: 5)
!3064 = !DILocation(line: 3692, column: 19, scope: !3062)
!3065 = !DILocation(line: 3692, column: 5, scope: !3062)
!3066 = !DILocation(line: 3693, column: 33, scope: !3063)
!3067 = !DILocation(line: 3693, column: 24, scope: !3063)
!3068 = !DILocation(line: 3693, column: 36, scope: !3063)
!3069 = !DILocation(line: 3693, column: 9, scope: !3063)
!3070 = !DILocation(line: 3692, column: 66, scope: !3071)
!3071 = !DILexicalBlockFile(scope: !3063, file: !47, discriminator: 2)
!3072 = !DILocation(line: 3692, column: 5, scope: !3071)
!3073 = distinct !{!3073, !3074}
!3074 = !DILocation(line: 3692, column: 5, scope: !2591)
!3075 = !DILocation(line: 3695, column: 5, scope: !2591)
!3076 = !DILocation(line: 3697, column: 12, scope: !2591)
!3077 = !DILocation(line: 3697, column: 16, scope: !2591)
!3078 = !DILocation(line: 3697, column: 5, scope: !2591)
!3079 = distinct !DISubprogram(name: "ffprobe_cleanup", scope: !47, file: !47, line: 345, type: !3080, isLocal: true, isDefinition: true, scopeLine: 346, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{null, !1041}
!3082 = !DILocalVariable(name: "ret", arg: 1, scope: !3079, file: !47, line: 345, type: !1041)
!3083 = !DILocation(line: 345, column: 33, scope: !3079)
!3084 = !DILocalVariable(name: "i", scope: !3079, file: !47, line: 347, type: !1041)
!3085 = !DILocation(line: 347, column: 9, scope: !3079)
!3086 = !DILocation(line: 348, column: 12, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3079, file: !47, line: 348, column: 5)
!3088 = !DILocation(line: 348, column: 10, scope: !3087)
!3089 = !DILocation(line: 348, column: 17, scope: !3090)
!3090 = !DILexicalBlockFile(scope: !3091, file: !47, discriminator: 1)
!3091 = distinct !DILexicalBlock(scope: !3087, file: !47, line: 348, column: 5)
!3092 = !DILocation(line: 348, column: 19, scope: !3090)
!3093 = !DILocation(line: 348, column: 5, scope: !3090)
!3094 = !DILocation(line: 349, column: 33, scope: !3091)
!3095 = !DILocation(line: 349, column: 24, scope: !3091)
!3096 = !DILocation(line: 349, column: 36, scope: !3091)
!3097 = !DILocation(line: 349, column: 9, scope: !3091)
!3098 = !DILocation(line: 348, column: 66, scope: !3099)
!3099 = !DILexicalBlockFile(scope: !3091, file: !47, discriminator: 2)
!3100 = !DILocation(line: 348, column: 5, scope: !3099)
!3101 = distinct !{!3101, !3102}
!3102 = !DILocation(line: 348, column: 5, scope: !3079)
!3103 = !DILocation(line: 352, column: 5, scope: !3079)
!3104 = !DILocation(line: 354, column: 1, scope: !3079)
!3105 = distinct !DISubprogram(name: "opt_input_file", scope: !47, file: !47, line: 3252, type: !3106, isLocal: true, isDefinition: true, scopeLine: 3253, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{null, !1013, !1027}
!3108 = !DILocalVariable(name: "optctx", arg: 1, scope: !3105, file: !47, line: 3252, type: !1013)
!3109 = !DILocation(line: 3252, column: 34, scope: !3105)
!3110 = !DILocalVariable(name: "arg", arg: 2, scope: !3105, file: !47, line: 3252, type: !1027)
!3111 = !DILocation(line: 3252, column: 54, scope: !3105)
!3112 = !DILocation(line: 3254, column: 9, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3105, file: !47, line: 3254, column: 9)
!3114 = !DILocation(line: 3254, column: 9, scope: !3105)
!3115 = !DILocation(line: 3257, column: 17, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3113, file: !47, line: 3254, column: 25)
!3117 = !DILocation(line: 3257, column: 22, scope: !3116)
!3118 = !DILocation(line: 3255, column: 9, scope: !3116)
!3119 = !DILocation(line: 3258, column: 9, scope: !3116)
!3120 = !DILocation(line: 3260, column: 17, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3105, file: !47, line: 3260, column: 9)
!3122 = !DILocation(line: 3260, column: 10, scope: !3121)
!3123 = !DILocation(line: 3260, column: 9, scope: !3105)
!3124 = !DILocation(line: 3261, column: 13, scope: !3121)
!3125 = !DILocation(line: 3261, column: 9, scope: !3121)
!3126 = !DILocation(line: 3262, column: 22, scope: !3105)
!3127 = !DILocation(line: 3262, column: 20, scope: !3105)
!3128 = !DILocation(line: 3263, column: 1, scope: !3105)
!3129 = !DILocalVariable(name: "ptr", arg: 1, scope: !2355, file: !47, line: 296, type: !1013)
!3130 = !DILocation(line: 296, column: 32, scope: !2355)
!3131 = !DILocalVariable(name: "level", arg: 2, scope: !2355, file: !47, line: 296, type: !1041)
!3132 = !DILocation(line: 296, column: 41, scope: !2355)
!3133 = !DILocalVariable(name: "fmt", arg: 3, scope: !2355, file: !47, line: 296, type: !1027)
!3134 = !DILocation(line: 296, column: 60, scope: !2355)
!3135 = !DILocalVariable(name: "vl", arg: 4, scope: !2355, file: !47, line: 296, type: !2358)
!3136 = !DILocation(line: 296, column: 73, scope: !2355)
!3137 = !DILocalVariable(name: "avc", scope: !2355, file: !47, line: 298, type: !1022)
!3138 = !DILocation(line: 298, column: 14, scope: !2355)
!3139 = !DILocation(line: 298, column: 20, scope: !2355)
!3140 = !DILocation(line: 298, column: 40, scope: !3141)
!3141 = !DILexicalBlockFile(scope: !2355, file: !47, discriminator: 1)
!3142 = !DILocation(line: 298, column: 27, scope: !3141)
!3143 = !DILocation(line: 298, column: 26, scope: !3141)
!3144 = !DILocation(line: 298, column: 20, scope: !3141)
!3145 = !DILocation(line: 298, column: 20, scope: !3146)
!3146 = !DILexicalBlockFile(scope: !2355, file: !47, discriminator: 2)
!3147 = !DILocation(line: 298, column: 20, scope: !3148)
!3148 = !DILexicalBlockFile(scope: !2355, file: !47, discriminator: 3)
!3149 = !DILocation(line: 298, column: 14, scope: !3148)
!3150 = !DILocalVariable(name: "vl2", scope: !2355, file: !47, line: 299, type: !3151)
!3151 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3152, line: 79, baseType: !3153)
!3152 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3153 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3154, line: 40, baseType: !3155)
!3154 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdarg.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3155 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1, line: 299, baseType: !3156)
!3156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2359, size: 192, align: 64, elements: !2462)
!3157 = !DILocation(line: 299, column: 13, scope: !2355)
!3158 = !DILocalVariable(name: "line", scope: !2355, file: !47, line: 300, type: !2201)
!3159 = !DILocation(line: 300, column: 10, scope: !2355)
!3160 = !DILocalVariable(name: "new_log_buffer", scope: !2355, file: !47, line: 302, type: !1013)
!3161 = !DILocation(line: 302, column: 11, scope: !2355)
!3162 = !DILocation(line: 304, column: 4, scope: !2355)
!3163 = !DILocation(line: 305, column: 29, scope: !2355)
!3164 = !DILocation(line: 305, column: 34, scope: !2355)
!3165 = !DILocation(line: 305, column: 41, scope: !2355)
!3166 = !DILocation(line: 305, column: 46, scope: !2355)
!3167 = !DILocation(line: 305, column: 5, scope: !2355)
!3168 = !DILocation(line: 306, column: 24, scope: !2355)
!3169 = !DILocation(line: 306, column: 29, scope: !2355)
!3170 = !DILocation(line: 306, column: 36, scope: !2355)
!3171 = !DILocation(line: 306, column: 41, scope: !2355)
!3172 = !DILocation(line: 306, column: 46, scope: !2355)
!3173 = !DILocation(line: 306, column: 5, scope: !2355)
!3174 = !DILocation(line: 307, column: 4, scope: !2355)
!3175 = !DILocation(line: 310, column: 5, scope: !2355)
!3176 = !DILocation(line: 312, column: 39, scope: !2355)
!3177 = !DILocation(line: 312, column: 51, scope: !2355)
!3178 = !DILocation(line: 312, column: 67, scope: !2355)
!3179 = !DILocation(line: 312, column: 22, scope: !2355)
!3180 = !DILocation(line: 312, column: 20, scope: !2355)
!3181 = !DILocation(line: 313, column: 9, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !2355, file: !47, line: 313, column: 9)
!3183 = !DILocation(line: 313, column: 9, scope: !2355)
!3184 = !DILocalVariable(name: "msg", scope: !3185, file: !47, line: 314, type: !1014)
!3185 = distinct !DILexicalBlock(scope: !3182, file: !47, line: 313, column: 25)
!3186 = !DILocation(line: 314, column: 15, scope: !3185)
!3187 = !DILocalVariable(name: "i", scope: !3185, file: !47, line: 315, type: !1041)
!3188 = !DILocation(line: 315, column: 13, scope: !3185)
!3189 = !DILocation(line: 317, column: 22, scope: !3185)
!3190 = !DILocation(line: 317, column: 20, scope: !3185)
!3191 = !DILocation(line: 318, column: 28, scope: !3185)
!3192 = !DILocation(line: 318, column: 17, scope: !3185)
!3193 = !DILocation(line: 318, column: 9, scope: !3185)
!3194 = !DILocation(line: 319, column: 51, scope: !3185)
!3195 = !DILocation(line: 319, column: 67, scope: !3196)
!3196 = !DILexicalBlockFile(scope: !3185, file: !47, discriminator: 1)
!3197 = !DILocation(line: 319, column: 72, scope: !3196)
!3198 = !DILocation(line: 319, column: 82, scope: !3196)
!3199 = !DILocation(line: 319, column: 57, scope: !3200)
!3200 = !DILexicalBlockFile(scope: !3196, file: !47, discriminator: 4)
!3201 = !DILocation(line: 319, column: 51, scope: !3196)
!3202 = !DILocation(line: 319, column: 51, scope: !3203)
!3203 = !DILexicalBlockFile(scope: !3185, file: !47, discriminator: 2)
!3204 = !DILocation(line: 319, column: 51, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3185, file: !47, discriminator: 3)
!3206 = !DILocation(line: 319, column: 20, scope: !3205)
!3207 = !DILocation(line: 319, column: 9, scope: !3205)
!3208 = !DILocation(line: 319, column: 37, scope: !3205)
!3209 = !DILocation(line: 319, column: 49, scope: !3205)
!3210 = !DILocation(line: 320, column: 13, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3185, file: !47, line: 320, column: 13)
!3212 = !DILocation(line: 320, column: 13, scope: !3185)
!3213 = !DILocation(line: 321, column: 17, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3215, file: !47, line: 321, column: 17)
!3215 = distinct !DILexicalBlock(scope: !3211, file: !47, line: 320, column: 18)
!3216 = !DILocation(line: 321, column: 22, scope: !3214)
!3217 = !DILocation(line: 321, column: 17, scope: !3215)
!3218 = !DILocation(line: 321, column: 75, scope: !3219)
!3219 = !DILexicalBlockFile(scope: !3214, file: !47, discriminator: 1)
!3220 = !DILocation(line: 321, column: 80, scope: !3219)
!3221 = !DILocation(line: 321, column: 93, scope: !3219)
!3222 = !DILocation(line: 321, column: 47, scope: !3219)
!3223 = !DILocation(line: 321, column: 36, scope: !3219)
!3224 = !DILocation(line: 321, column: 64, scope: !3219)
!3225 = !DILocation(line: 321, column: 73, scope: !3219)
!3226 = !DILocation(line: 322, column: 57, scope: !3214)
!3227 = !DILocation(line: 322, column: 62, scope: !3214)
!3228 = !DILocation(line: 322, column: 29, scope: !3214)
!3229 = !DILocation(line: 322, column: 18, scope: !3214)
!3230 = !DILocation(line: 322, column: 46, scope: !3214)
!3231 = !DILocation(line: 322, column: 55, scope: !3214)
!3232 = !DILocation(line: 323, column: 9, scope: !3215)
!3233 = !DILocation(line: 324, column: 49, scope: !3185)
!3234 = !DILocation(line: 324, column: 20, scope: !3185)
!3235 = !DILocation(line: 324, column: 9, scope: !3185)
!3236 = !DILocation(line: 324, column: 37, scope: !3185)
!3237 = !DILocation(line: 324, column: 47, scope: !3185)
!3238 = !DILocation(line: 325, column: 67, scope: !3185)
!3239 = !DILocation(line: 325, column: 57, scope: !3185)
!3240 = !DILocation(line: 325, column: 26, scope: !3185)
!3241 = !DILocation(line: 325, column: 15, scope: !3185)
!3242 = !DILocation(line: 325, column: 43, scope: !3185)
!3243 = !DILocation(line: 325, column: 55, scope: !3185)
!3244 = !DILocation(line: 325, column: 13, scope: !3185)
!3245 = !DILocation(line: 326, column: 23, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3185, file: !47, line: 326, column: 9)
!3247 = !DILocation(line: 326, column: 16, scope: !3246)
!3248 = !DILocation(line: 326, column: 28, scope: !3246)
!3249 = !DILocation(line: 326, column: 15, scope: !3246)
!3250 = !DILocation(line: 326, column: 14, scope: !3246)
!3251 = !DILocation(line: 326, column: 33, scope: !3252)
!3252 = !DILexicalBlockFile(scope: !3253, file: !47, discriminator: 1)
!3253 = distinct !DILexicalBlock(scope: !3246, file: !47, line: 326, column: 9)
!3254 = !DILocation(line: 326, column: 34, scope: !3252)
!3255 = !DILocation(line: 326, column: 38, scope: !3252)
!3256 = !DILocation(line: 326, column: 45, scope: !3257)
!3257 = !DILexicalBlockFile(scope: !3253, file: !47, discriminator: 2)
!3258 = !DILocation(line: 326, column: 41, scope: !3257)
!3259 = !DILocation(line: 326, column: 48, scope: !3257)
!3260 = !DILocation(line: 326, column: 9, scope: !3261)
!3261 = !DILexicalBlockFile(scope: !3246, file: !47, discriminator: 3)
!3262 = !DILocation(line: 327, column: 17, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3253, file: !47, line: 326, column: 62)
!3264 = !DILocation(line: 327, column: 13, scope: !3263)
!3265 = !DILocation(line: 327, column: 20, scope: !3263)
!3266 = !DILocation(line: 328, column: 9, scope: !3263)
!3267 = !DILocation(line: 326, column: 58, scope: !3268)
!3268 = !DILexicalBlockFile(scope: !3253, file: !47, discriminator: 4)
!3269 = !DILocation(line: 326, column: 9, scope: !3268)
!3270 = distinct !{!3270, !3271}
!3271 = !DILocation(line: 326, column: 9, scope: !3185)
!3272 = !DILocation(line: 329, column: 13, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3185, file: !47, line: 329, column: 13)
!3274 = !DILocation(line: 329, column: 17, scope: !3273)
!3275 = !DILocation(line: 329, column: 20, scope: !3276)
!3276 = !DILexicalBlockFile(scope: !3273, file: !47, discriminator: 1)
!3277 = !DILocation(line: 329, column: 25, scope: !3276)
!3278 = !DILocation(line: 329, column: 13, scope: !3276)
!3279 = !DILocalVariable(name: "parent", scope: !3280, file: !47, line: 330, type: !1021)
!3280 = distinct !DILexicalBlock(scope: !3273, file: !47, line: 329, column: 52)
!3281 = !DILocation(line: 330, column: 23, scope: !3280)
!3282 = !DILocation(line: 330, column: 61, scope: !3280)
!3283 = !DILocation(line: 331, column: 36, scope: !3280)
!3284 = !DILocation(line: 331, column: 41, scope: !3280)
!3285 = !DILocation(line: 330, column: 66, scope: !3280)
!3286 = !DILocation(line: 330, column: 32, scope: !3280)
!3287 = !DILocation(line: 332, column: 17, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3280, file: !47, line: 332, column: 17)
!3289 = !DILocation(line: 332, column: 24, scope: !3288)
!3290 = !DILocation(line: 332, column: 28, scope: !3291)
!3291 = !DILexicalBlockFile(scope: !3288, file: !47, discriminator: 1)
!3292 = !DILocation(line: 332, column: 27, scope: !3291)
!3293 = !DILocation(line: 332, column: 17, scope: !3291)
!3294 = !DILocation(line: 333, column: 71, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3288, file: !47, line: 332, column: 36)
!3296 = !DILocation(line: 333, column: 70, scope: !3295)
!3297 = !DILocation(line: 333, column: 80, scope: !3295)
!3298 = !DILocation(line: 333, column: 90, scope: !3295)
!3299 = !DILocation(line: 333, column: 69, scope: !3295)
!3300 = !DILocation(line: 333, column: 59, scope: !3301)
!3301 = !DILexicalBlockFile(scope: !3295, file: !47, discriminator: 1)
!3302 = !DILocation(line: 333, column: 28, scope: !3295)
!3303 = !DILocation(line: 333, column: 17, scope: !3295)
!3304 = !DILocation(line: 333, column: 45, scope: !3295)
!3305 = !DILocation(line: 333, column: 57, scope: !3295)
!3306 = !DILocation(line: 335, column: 23, scope: !3295)
!3307 = !DILocation(line: 335, column: 22, scope: !3295)
!3308 = !DILocation(line: 335, column: 32, scope: !3295)
!3309 = !DILocation(line: 335, column: 21, scope: !3295)
!3310 = !DILocation(line: 335, column: 49, scope: !3301)
!3311 = !DILocation(line: 335, column: 48, scope: !3301)
!3312 = !DILocation(line: 335, column: 58, scope: !3301)
!3313 = !DILocation(line: 335, column: 71, scope: !3301)
!3314 = !DILocation(line: 335, column: 47, scope: !3301)
!3315 = !DILocation(line: 335, column: 21, scope: !3301)
!3316 = !DILocation(line: 335, column: 82, scope: !3317)
!3317 = !DILexicalBlockFile(scope: !3295, file: !47, discriminator: 2)
!3318 = !DILocation(line: 335, column: 81, scope: !3317)
!3319 = !DILocation(line: 335, column: 91, scope: !3317)
!3320 = !DILocation(line: 335, column: 21, scope: !3317)
!3321 = !DILocation(line: 335, column: 21, scope: !3322)
!3322 = !DILexicalBlockFile(scope: !3295, file: !47, discriminator: 3)
!3323 = !DILocation(line: 334, column: 28, scope: !3295)
!3324 = !DILocation(line: 334, column: 17, scope: !3295)
!3325 = !DILocation(line: 334, column: 45, scope: !3295)
!3326 = !DILocation(line: 334, column: 61, scope: !3295)
!3327 = !DILocation(line: 336, column: 13, scope: !3295)
!3328 = !DILocation(line: 337, column: 9, scope: !3280)
!3329 = !DILocation(line: 338, column: 25, scope: !3185)
!3330 = !DILocation(line: 339, column: 5, scope: !3185)
!3331 = !DILocation(line: 341, column: 5, scope: !2355)
!3332 = !DILocation(line: 343, column: 1, scope: !2355)
!3333 = distinct !DISubprogram(name: "check_section_show_entries", scope: !47, file: !47, line: 3534, type: !3334, isLocal: true, isDefinition: true, scopeLine: 3535, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!3334 = !DISubroutineType(types: !3335)
!3335 = !{!1041, !1041}
!3336 = !DILocalVariable(name: "section_id", arg: 1, scope: !3333, file: !47, line: 3534, type: !1041)
!3337 = !DILocation(line: 3534, column: 50, scope: !3333)
!3338 = !DILocalVariable(name: "id", scope: !3333, file: !47, line: 3536, type: !1695)
!3339 = !DILocation(line: 3536, column: 10, scope: !3333)
!3340 = !DILocalVariable(name: "section", scope: !3333, file: !47, line: 3537, type: !3341)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 64, align: 64)
!3342 = !DILocation(line: 3537, column: 21, scope: !3333)
!3343 = !DILocation(line: 3537, column: 41, scope: !3333)
!3344 = !DILocation(line: 3537, column: 32, scope: !3333)
!3345 = !DILocation(line: 3538, column: 18, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3333, file: !47, line: 3538, column: 9)
!3347 = !DILocation(line: 3538, column: 9, scope: !3346)
!3348 = !DILocation(line: 3538, column: 30, scope: !3346)
!3349 = !DILocation(line: 3538, column: 47, scope: !3346)
!3350 = !DILocation(line: 3538, column: 59, scope: !3351)
!3351 = !DILexicalBlockFile(scope: !3346, file: !47, discriminator: 1)
!3352 = !DILocation(line: 3538, column: 50, scope: !3351)
!3353 = !DILocation(line: 3538, column: 71, scope: !3351)
!3354 = !DILocation(line: 3538, column: 9, scope: !3351)
!3355 = !DILocation(line: 3539, column: 9, scope: !3346)
!3356 = !DILocation(line: 3540, column: 15, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3333, file: !47, line: 3540, column: 5)
!3358 = !DILocation(line: 3540, column: 24, scope: !3357)
!3359 = !DILocation(line: 3540, column: 13, scope: !3357)
!3360 = !DILocation(line: 3540, column: 10, scope: !3357)
!3361 = !DILocation(line: 3540, column: 39, scope: !3362)
!3362 = !DILexicalBlockFile(scope: !3363, file: !47, discriminator: 1)
!3363 = distinct !DILexicalBlock(scope: !3357, file: !47, line: 3540, column: 5)
!3364 = !DILocation(line: 3540, column: 38, scope: !3362)
!3365 = !DILocation(line: 3540, column: 42, scope: !3362)
!3366 = !DILocation(line: 3540, column: 5, scope: !3362)
!3367 = !DILocation(line: 3541, column: 41, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3363, file: !47, line: 3541, column: 13)
!3369 = !DILocation(line: 3541, column: 40, scope: !3368)
!3370 = !DILocation(line: 3541, column: 13, scope: !3368)
!3371 = !DILocation(line: 3541, column: 13, scope: !3363)
!3372 = !DILocation(line: 3542, column: 13, scope: !3368)
!3373 = !DILocation(line: 3541, column: 43, scope: !3374)
!3374 = !DILexicalBlockFile(scope: !3368, file: !47, discriminator: 1)
!3375 = !DILocation(line: 3540, column: 51, scope: !3376)
!3376 = !DILexicalBlockFile(scope: !3363, file: !47, discriminator: 2)
!3377 = !DILocation(line: 3540, column: 5, scope: !3376)
!3378 = distinct !{!3378, !3379}
!3379 = !DILocation(line: 3540, column: 5, scope: !3333)
!3380 = !DILocation(line: 3543, column: 5, scope: !3333)
!3381 = !DILocation(line: 3544, column: 1, scope: !3333)
!3382 = !DILocation(line: 1789, column: 9, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !2399, file: !47, line: 1789, column: 9)
!3384 = !DILocation(line: 1789, column: 9, scope: !2399)
!3385 = !DILocation(line: 1790, column: 9, scope: !3383)
!3386 = !DILocation(line: 1791, column: 17, scope: !2399)
!3387 = !DILocation(line: 1793, column: 5, scope: !2399)
!3388 = !DILocation(line: 1794, column: 5, scope: !2399)
!3389 = !DILocation(line: 1795, column: 5, scope: !2399)
!3390 = !DILocation(line: 1796, column: 5, scope: !2399)
!3391 = !DILocation(line: 1797, column: 5, scope: !2399)
!3392 = !DILocation(line: 1798, column: 5, scope: !2399)
!3393 = !DILocation(line: 1799, column: 5, scope: !2399)
!3394 = !DILocation(line: 1800, column: 1, scope: !2399)
!3395 = !DILocation(line: 1800, column: 1, scope: !3396)
!3396 = !DILexicalBlockFile(scope: !2399, file: !47, discriminator: 1)
!3397 = distinct !DISubprogram(name: "writer_get_by_name", scope: !47, file: !47, line: 890, type: !3398, isLocal: true, isDefinition: true, scopeLine: 891, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!2406, !1027}
!3400 = !DILocalVariable(name: "name", arg: 1, scope: !3397, file: !47, line: 890, type: !1027)
!3401 = !DILocation(line: 890, column: 53, scope: !3397)
!3402 = !DILocalVariable(name: "i", scope: !3397, file: !47, line: 892, type: !1041)
!3403 = !DILocation(line: 892, column: 9, scope: !3397)
!3404 = !DILocation(line: 894, column: 12, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3397, file: !47, line: 894, column: 5)
!3406 = !DILocation(line: 894, column: 10, scope: !3405)
!3407 = !DILocation(line: 894, column: 36, scope: !3408)
!3408 = !DILexicalBlockFile(scope: !3409, file: !47, discriminator: 1)
!3409 = distinct !DILexicalBlock(scope: !3405, file: !47, line: 894, column: 5)
!3410 = !DILocation(line: 894, column: 17, scope: !3408)
!3411 = !DILocation(line: 894, column: 5, scope: !3408)
!3412 = !DILocation(line: 895, column: 40, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3409, file: !47, line: 895, column: 13)
!3414 = !DILocation(line: 895, column: 21, scope: !3413)
!3415 = !DILocation(line: 895, column: 44, scope: !3413)
!3416 = !DILocation(line: 895, column: 50, scope: !3413)
!3417 = !DILocation(line: 895, column: 14, scope: !3413)
!3418 = !DILocation(line: 895, column: 13, scope: !3409)
!3419 = !DILocation(line: 896, column: 39, scope: !3413)
!3420 = !DILocation(line: 896, column: 20, scope: !3413)
!3421 = !DILocation(line: 896, column: 13, scope: !3413)
!3422 = !DILocation(line: 895, column: 54, scope: !3423)
!3423 = !DILexicalBlockFile(scope: !3413, file: !47, discriminator: 1)
!3424 = !DILocation(line: 894, column: 41, scope: !3425)
!3425 = !DILexicalBlockFile(scope: !3409, file: !47, discriminator: 2)
!3426 = !DILocation(line: 894, column: 5, scope: !3425)
!3427 = distinct !{!3427, !3428}
!3428 = !DILocation(line: 894, column: 5, scope: !3397)
!3429 = !DILocation(line: 898, column: 5, scope: !3397)
!3430 = !DILocation(line: 899, column: 1, scope: !3397)
!3431 = distinct !DISubprogram(name: "writer_open", scope: !47, file: !47, line: 538, type: !3432, isLocal: true, isDefinition: true, scopeLine: 540, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!1041, !3434, !2406, !1027, !2427, !1041}
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64, align: 64)
!3435 = !DILocalVariable(name: "wctx", arg: 1, scope: !3431, file: !47, line: 538, type: !3434)
!3436 = !DILocation(line: 538, column: 40, scope: !3431)
!3437 = !DILocalVariable(name: "writer", arg: 2, scope: !3431, file: !47, line: 538, type: !2406)
!3438 = !DILocation(line: 538, column: 60, scope: !3431)
!3439 = !DILocalVariable(name: "args", arg: 3, scope: !3431, file: !47, line: 538, type: !1027)
!3440 = !DILocation(line: 538, column: 80, scope: !3431)
!3441 = !DILocalVariable(name: "sections", arg: 4, scope: !3431, file: !47, line: 539, type: !2427)
!3442 = !DILocation(line: 539, column: 46, scope: !3431)
!3443 = !DILocalVariable(name: "nb_sections", arg: 5, scope: !3431, file: !47, line: 539, type: !1041)
!3444 = !DILocation(line: 539, column: 60, scope: !3431)
!3445 = !DILocalVariable(name: "i", scope: !3431, file: !47, line: 541, type: !1041)
!3446 = !DILocation(line: 541, column: 9, scope: !3431)
!3447 = !DILocalVariable(name: "ret", scope: !3431, file: !47, line: 541, type: !1041)
!3448 = !DILocation(line: 541, column: 12, scope: !3431)
!3449 = !DILocation(line: 543, column: 19, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3431, file: !47, line: 543, column: 9)
!3451 = !DILocation(line: 543, column: 12, scope: !3450)
!3452 = !DILocation(line: 543, column: 17, scope: !3450)
!3453 = !DILocation(line: 543, column: 9, scope: !3431)
!3454 = !DILocation(line: 544, column: 13, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3450, file: !47, line: 543, column: 55)
!3456 = !DILocation(line: 545, column: 9, scope: !3455)
!3457 = !DILocation(line: 548, column: 38, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3431, file: !47, line: 548, column: 9)
!3459 = !DILocation(line: 548, column: 46, scope: !3458)
!3460 = !DILocation(line: 548, column: 27, scope: !3458)
!3461 = !DILocation(line: 548, column: 13, scope: !3458)
!3462 = !DILocation(line: 548, column: 12, scope: !3458)
!3463 = !DILocation(line: 548, column: 20, scope: !3458)
!3464 = !DILocation(line: 548, column: 25, scope: !3458)
!3465 = !DILocation(line: 548, column: 9, scope: !3431)
!3466 = !DILocation(line: 549, column: 13, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3458, file: !47, line: 548, column: 59)
!3468 = !DILocation(line: 550, column: 9, scope: !3467)
!3469 = !DILocation(line: 553, column: 7, scope: !3431)
!3470 = !DILocation(line: 553, column: 6, scope: !3431)
!3471 = !DILocation(line: 553, column: 14, scope: !3431)
!3472 = !DILocation(line: 553, column: 20, scope: !3431)
!3473 = !DILocation(line: 554, column: 23, scope: !3431)
!3474 = !DILocation(line: 554, column: 7, scope: !3431)
!3475 = !DILocation(line: 554, column: 6, scope: !3431)
!3476 = !DILocation(line: 554, column: 14, scope: !3431)
!3477 = !DILocation(line: 554, column: 21, scope: !3431)
!3478 = !DILocation(line: 555, column: 7, scope: !3431)
!3479 = !DILocation(line: 555, column: 6, scope: !3431)
!3480 = !DILocation(line: 555, column: 14, scope: !3431)
!3481 = !DILocation(line: 555, column: 20, scope: !3431)
!3482 = !DILocation(line: 556, column: 25, scope: !3431)
!3483 = !DILocation(line: 556, column: 7, scope: !3431)
!3484 = !DILocation(line: 556, column: 6, scope: !3431)
!3485 = !DILocation(line: 556, column: 14, scope: !3431)
!3486 = !DILocation(line: 556, column: 23, scope: !3431)
!3487 = !DILocation(line: 557, column: 28, scope: !3431)
!3488 = !DILocation(line: 557, column: 7, scope: !3431)
!3489 = !DILocation(line: 557, column: 6, scope: !3431)
!3490 = !DILocation(line: 557, column: 14, scope: !3431)
!3491 = !DILocation(line: 557, column: 26, scope: !3431)
!3492 = !DILocation(line: 559, column: 26, scope: !3431)
!3493 = !DILocation(line: 559, column: 25, scope: !3431)
!3494 = !DILocation(line: 559, column: 5, scope: !3431)
!3495 = !DILocation(line: 561, column: 9, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3431, file: !47, line: 561, column: 9)
!3497 = !DILocation(line: 561, column: 17, scope: !3496)
!3498 = !DILocation(line: 561, column: 9, scope: !3431)
!3499 = !DILocalVariable(name: "priv_ctx", scope: !3500, file: !47, line: 562, type: !1013)
!3500 = distinct !DILexicalBlock(scope: !3496, file: !47, line: 561, column: 29)
!3501 = !DILocation(line: 562, column: 15, scope: !3500)
!3502 = !DILocation(line: 562, column: 28, scope: !3500)
!3503 = !DILocation(line: 562, column: 27, scope: !3500)
!3504 = !DILocation(line: 562, column: 35, scope: !3500)
!3505 = !DILocation(line: 563, column: 41, scope: !3500)
!3506 = !DILocation(line: 563, column: 49, scope: !3500)
!3507 = !DILocation(line: 563, column: 29, scope: !3500)
!3508 = !DILocation(line: 563, column: 11, scope: !3500)
!3509 = !DILocation(line: 563, column: 39, scope: !3500)
!3510 = !DILocation(line: 564, column: 29, scope: !3500)
!3511 = !DILocation(line: 564, column: 9, scope: !3500)
!3512 = !DILocation(line: 565, column: 5, scope: !3500)
!3513 = !DILocation(line: 568, column: 9, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3431, file: !47, line: 568, column: 9)
!3515 = !DILocation(line: 568, column: 9, scope: !3431)
!3516 = !DILocalVariable(name: "opts", scope: !3517, file: !47, line: 569, type: !1423)
!3517 = distinct !DILexicalBlock(scope: !3514, file: !47, line: 568, column: 15)
!3518 = !DILocation(line: 569, column: 23, scope: !3517)
!3519 = !DILocalVariable(name: "opt", scope: !3517, file: !47, line: 570, type: !3520)
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64, align: 64)
!3521 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionaryEntry", file: !1425, line: 84, baseType: !3522)
!3522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionaryEntry", file: !1425, line: 81, size: 128, align: 64, elements: !3523)
!3523 = !{!3524, !3525}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3522, file: !1425, line: 82, baseType: !1014, size: 64, align: 64)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3522, file: !1425, line: 83, baseType: !1014, size: 64, align: 64, offset: 64)
!3526 = !DILocation(line: 570, column: 28, scope: !3517)
!3527 = !DILocation(line: 572, column: 48, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3517, file: !47, line: 572, column: 13)
!3529 = !DILocation(line: 572, column: 20, scope: !3528)
!3530 = !DILocation(line: 572, column: 18, scope: !3528)
!3531 = !DILocation(line: 572, column: 68, scope: !3528)
!3532 = !DILocation(line: 572, column: 13, scope: !3517)
!3533 = !DILocation(line: 573, column: 21, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3528, file: !47, line: 572, column: 73)
!3535 = !DILocation(line: 573, column: 20, scope: !3534)
!3536 = !DILocation(line: 573, column: 98, scope: !3534)
!3537 = !DILocation(line: 573, column: 13, scope: !3534)
!3538 = !DILocation(line: 574, column: 13, scope: !3534)
!3539 = !DILocation(line: 575, column: 13, scope: !3534)
!3540 = !DILocation(line: 578, column: 9, scope: !3517)
!3541 = !DILocation(line: 578, column: 35, scope: !3542)
!3542 = !DILexicalBlockFile(scope: !3517, file: !47, discriminator: 1)
!3543 = !DILocation(line: 578, column: 45, scope: !3542)
!3544 = !DILocation(line: 578, column: 23, scope: !3542)
!3545 = !DILocation(line: 578, column: 21, scope: !3542)
!3546 = !DILocation(line: 578, column: 9, scope: !3542)
!3547 = !DILocation(line: 579, column: 36, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !47, line: 579, column: 17)
!3549 = distinct !DILexicalBlock(scope: !3517, file: !47, line: 578, column: 55)
!3550 = !DILocation(line: 579, column: 35, scope: !3548)
!3551 = !DILocation(line: 579, column: 42, scope: !3548)
!3552 = !DILocation(line: 579, column: 47, scope: !3548)
!3553 = !DILocation(line: 579, column: 52, scope: !3548)
!3554 = !DILocation(line: 579, column: 57, scope: !3548)
!3555 = !DILocation(line: 579, column: 24, scope: !3548)
!3556 = !DILocation(line: 579, column: 22, scope: !3548)
!3557 = !DILocation(line: 579, column: 75, scope: !3548)
!3558 = !DILocation(line: 579, column: 17, scope: !3549)
!3559 = !DILocation(line: 580, column: 25, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3548, file: !47, line: 579, column: 80)
!3561 = !DILocation(line: 580, column: 24, scope: !3560)
!3562 = !DILocation(line: 581, column: 24, scope: !3560)
!3563 = !DILocation(line: 581, column: 29, scope: !3560)
!3564 = !DILocation(line: 581, column: 34, scope: !3560)
!3565 = !DILocation(line: 581, column: 39, scope: !3560)
!3566 = !DILocation(line: 580, column: 17, scope: !3560)
!3567 = !DILocation(line: 582, column: 17, scope: !3560)
!3568 = !DILocation(line: 583, column: 17, scope: !3560)
!3569 = !DILocation(line: 578, column: 9, scope: !3570)
!3570 = !DILexicalBlockFile(scope: !3517, file: !47, discriminator: 2)
!3571 = distinct !{!3571, !3540}
!3572 = !DILocation(line: 587, column: 9, scope: !3517)
!3573 = !DILocation(line: 588, column: 5, scope: !3517)
!3574 = !DILocalVariable(name: "p", scope: !3575, file: !47, line: 592, type: !1139)
!3575 = distinct !DILexicalBlock(scope: !3431, file: !47, line: 591, column: 5)
!3576 = !DILocation(line: 592, column: 24, scope: !3575)
!3577 = !DILocation(line: 592, column: 30, scope: !3575)
!3578 = !DILocation(line: 592, column: 29, scope: !3575)
!3579 = !DILocation(line: 592, column: 37, scope: !3575)
!3580 = !DILocalVariable(name: "endp", scope: !3575, file: !47, line: 593, type: !1139)
!3581 = !DILocation(line: 593, column: 24, scope: !3575)
!3582 = !DILocation(line: 593, column: 31, scope: !3575)
!3583 = !DILocation(line: 593, column: 42, scope: !3575)
!3584 = !DILocation(line: 593, column: 35, scope: !3575)
!3585 = !DILocation(line: 593, column: 33, scope: !3575)
!3586 = !DILocation(line: 594, column: 9, scope: !3575)
!3587 = !DILocation(line: 594, column: 17, scope: !3588)
!3588 = !DILexicalBlockFile(scope: !3575, file: !47, discriminator: 1)
!3589 = !DILocation(line: 594, column: 16, scope: !3588)
!3590 = !DILocation(line: 594, column: 9, scope: !3588)
!3591 = !DILocalVariable(name: "p0", scope: !3592, file: !47, line: 595, type: !1139)
!3592 = distinct !DILexicalBlock(scope: !3575, file: !47, line: 594, column: 20)
!3593 = !DILocation(line: 595, column: 28, scope: !3592)
!3594 = !DILocation(line: 595, column: 33, scope: !3592)
!3595 = !DILocalVariable(name: "code", scope: !3592, file: !47, line: 596, type: !1111)
!3596 = !DILocation(line: 596, column: 21, scope: !3592)
!3597 = !DILocation(line: 597, column: 45, scope: !3592)
!3598 = !DILocation(line: 597, column: 53, scope: !3592)
!3599 = !DILocation(line: 597, column: 52, scope: !3592)
!3600 = !DILocation(line: 597, column: 60, scope: !3592)
!3601 = !DILocation(line: 597, column: 19, scope: !3592)
!3602 = !DILocation(line: 597, column: 17, scope: !3592)
!3603 = !DILocation(line: 598, column: 17, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3592, file: !47, line: 598, column: 17)
!3605 = !DILocation(line: 598, column: 21, scope: !3604)
!3606 = !DILocation(line: 598, column: 17, scope: !3592)
!3607 = !DILocalVariable(name: "bp", scope: !3608, file: !47, line: 599, type: !2452)
!3608 = distinct !DILexicalBlock(scope: !3604, file: !47, line: 598, column: 26)
!3609 = !DILocation(line: 599, column: 26, scope: !3608)
!3610 = !DILocation(line: 600, column: 17, scope: !3608)
!3611 = !DILocation(line: 601, column: 35, scope: !3608)
!3612 = !DILocation(line: 601, column: 39, scope: !3608)
!3613 = !DILocation(line: 601, column: 41, scope: !3608)
!3614 = !DILocation(line: 601, column: 40, scope: !3608)
!3615 = !DILocation(line: 601, column: 17, scope: !3608)
!3616 = !DILocation(line: 602, column: 28, scope: !3608)
!3617 = !DILocation(line: 604, column: 31, scope: !3608)
!3618 = !DILocation(line: 604, column: 38, scope: !3608)
!3619 = !DILocation(line: 604, column: 37, scope: !3608)
!3620 = !DILocation(line: 604, column: 45, scope: !3608)
!3621 = !DILocation(line: 602, column: 21, scope: !3608)
!3622 = !DILocation(line: 605, column: 24, scope: !3608)
!3623 = !DILocation(line: 605, column: 17, scope: !3608)
!3624 = !DILocation(line: 594, column: 9, scope: !3625)
!3625 = !DILexicalBlockFile(scope: !3575, file: !47, discriminator: 2)
!3626 = distinct !{!3626, !3586}
!3627 = !DILocation(line: 610, column: 12, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3431, file: !47, line: 610, column: 5)
!3629 = !DILocation(line: 610, column: 10, scope: !3628)
!3630 = !DILocation(line: 610, column: 17, scope: !3631)
!3631 = !DILexicalBlockFile(scope: !3632, file: !47, discriminator: 1)
!3632 = distinct !DILexicalBlock(scope: !3628, file: !47, line: 610, column: 5)
!3633 = !DILocation(line: 610, column: 19, scope: !3631)
!3634 = !DILocation(line: 610, column: 5, scope: !3631)
!3635 = !DILocation(line: 611, column: 47, scope: !3632)
!3636 = !DILocation(line: 611, column: 25, scope: !3632)
!3637 = !DILocation(line: 611, column: 27, scope: !3632)
!3638 = !DILocation(line: 611, column: 26, scope: !3632)
!3639 = !DILocation(line: 611, column: 34, scope: !3632)
!3640 = !DILocation(line: 611, column: 9, scope: !3632)
!3641 = !DILocation(line: 610, column: 26, scope: !3642)
!3642 = !DILexicalBlockFile(scope: !3632, file: !47, discriminator: 2)
!3643 = !DILocation(line: 610, column: 5, scope: !3642)
!3644 = distinct !{!3644, !3645}
!3645 = !DILocation(line: 610, column: 5, scope: !3431)
!3646 = !DILocation(line: 613, column: 11, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3431, file: !47, line: 613, column: 9)
!3648 = !DILocation(line: 613, column: 10, scope: !3647)
!3649 = !DILocation(line: 613, column: 18, scope: !3647)
!3650 = !DILocation(line: 613, column: 26, scope: !3647)
!3651 = !DILocation(line: 613, column: 9, scope: !3647)
!3652 = !DILocation(line: 613, column: 9, scope: !3431)
!3653 = !DILocation(line: 614, column: 17, scope: !3647)
!3654 = !DILocation(line: 614, column: 16, scope: !3647)
!3655 = !DILocation(line: 614, column: 24, scope: !3647)
!3656 = !DILocation(line: 614, column: 32, scope: !3647)
!3657 = !DILocation(line: 614, column: 38, scope: !3647)
!3658 = !DILocation(line: 614, column: 37, scope: !3647)
!3659 = !DILocation(line: 614, column: 15, scope: !3647)
!3660 = !DILocation(line: 614, column: 13, scope: !3647)
!3661 = !DILocation(line: 614, column: 9, scope: !3647)
!3662 = !DILocation(line: 615, column: 9, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3431, file: !47, line: 615, column: 9)
!3664 = !DILocation(line: 615, column: 13, scope: !3663)
!3665 = !DILocation(line: 615, column: 9, scope: !3431)
!3666 = !DILocation(line: 616, column: 9, scope: !3663)
!3667 = !DILocation(line: 618, column: 5, scope: !3431)
!3668 = !DILocation(line: 621, column: 18, scope: !3431)
!3669 = !DILocation(line: 621, column: 5, scope: !3431)
!3670 = !DILocation(line: 622, column: 12, scope: !3431)
!3671 = !DILocation(line: 622, column: 5, scope: !3431)
!3672 = !DILocation(line: 623, column: 1, scope: !3431)
!3673 = distinct !DISubprogram(name: "writer_print_section_header", scope: !47, file: !47, line: 625, type: !3674, isLocal: true, isDefinition: true, scopeLine: 627, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{null, !2418, !1041}
!3676 = !DILocalVariable(name: "wctx", arg: 1, scope: !3673, file: !47, line: 625, type: !2418)
!3677 = !DILocation(line: 625, column: 63, scope: !3673)
!3678 = !DILocalVariable(name: "section_id", arg: 2, scope: !3673, file: !47, line: 626, type: !1041)
!3679 = !DILocation(line: 626, column: 52, scope: !3673)
!3680 = !DILocalVariable(name: "parent_section_id", scope: !3673, file: !47, line: 628, type: !1041)
!3681 = !DILocation(line: 628, column: 9, scope: !3673)
!3682 = !DILocation(line: 629, column: 5, scope: !3673)
!3683 = !DILocation(line: 629, column: 11, scope: !3673)
!3684 = !DILocation(line: 629, column: 16, scope: !3673)
!3685 = !DILocation(line: 630, column: 5, scope: !3673)
!3686 = distinct !{!3686, !3685}
!3687 = !DILocation(line: 630, column: 16, scope: !3688)
!3688 = !DILexicalBlockFile(scope: !3689, file: !47, discriminator: 1)
!3689 = distinct !DILexicalBlock(scope: !3690, file: !47, line: 630, column: 14)
!3690 = distinct !DILexicalBlock(scope: !3673, file: !47, line: 630, column: 8)
!3691 = !DILocation(line: 630, column: 22, scope: !3688)
!3692 = !DILocation(line: 630, column: 28, scope: !3688)
!3693 = !DILocation(line: 630, column: 14, scope: !3688)
!3694 = !DILocation(line: 630, column: 37, scope: !3695)
!3695 = !DILexicalBlockFile(scope: !3696, file: !47, discriminator: 2)
!3696 = distinct !DILexicalBlock(scope: !3689, file: !47, line: 630, column: 35)
!3697 = !DILocation(line: 630, column: 90, scope: !3698)
!3698 = !DILexicalBlockFile(scope: !3695, file: !47, discriminator: 4)
!3699 = !DILocation(line: 630, column: 90, scope: !3695)
!3700 = !DILocation(line: 630, column: 101, scope: !3701)
!3701 = !DILexicalBlockFile(scope: !3690, file: !47, discriminator: 3)
!3702 = !DILocation(line: 631, column: 25, scope: !3673)
!3703 = !DILocation(line: 631, column: 31, scope: !3673)
!3704 = !DILocation(line: 632, column: 24, scope: !3673)
!3705 = !DILocation(line: 632, column: 30, scope: !3673)
!3706 = !DILocation(line: 632, column: 35, scope: !3673)
!3707 = !DILocation(line: 632, column: 10, scope: !3673)
!3708 = !DILocation(line: 632, column: 16, scope: !3673)
!3709 = !DILocation(line: 632, column: 41, scope: !3673)
!3710 = !DILocation(line: 631, column: 25, scope: !3711)
!3711 = !DILexicalBlockFile(scope: !3673, file: !47, discriminator: 1)
!3712 = !DILocation(line: 631, column: 25, scope: !3713)
!3713 = !DILexicalBlockFile(scope: !3673, file: !47, discriminator: 2)
!3714 = !DILocation(line: 631, column: 25, scope: !3715)
!3715 = !DILexicalBlockFile(scope: !3673, file: !47, discriminator: 3)
!3716 = !DILocation(line: 631, column: 23, scope: !3715)
!3717 = !DILocation(line: 634, column: 19, scope: !3673)
!3718 = !DILocation(line: 634, column: 25, scope: !3673)
!3719 = !DILocation(line: 634, column: 5, scope: !3673)
!3720 = !DILocation(line: 634, column: 11, scope: !3673)
!3721 = !DILocation(line: 634, column: 32, scope: !3673)
!3722 = !DILocation(line: 635, column: 50, scope: !3673)
!3723 = !DILocation(line: 635, column: 35, scope: !3673)
!3724 = !DILocation(line: 635, column: 41, scope: !3673)
!3725 = !DILocation(line: 635, column: 19, scope: !3673)
!3726 = !DILocation(line: 635, column: 25, scope: !3673)
!3727 = !DILocation(line: 635, column: 5, scope: !3673)
!3728 = !DILocation(line: 635, column: 11, scope: !3673)
!3729 = !DILocation(line: 635, column: 32, scope: !3673)
!3730 = !DILocation(line: 637, column: 9, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3673, file: !47, line: 637, column: 9)
!3732 = !DILocation(line: 637, column: 20, scope: !3731)
!3733 = !DILocation(line: 637, column: 9, scope: !3673)
!3734 = !DILocation(line: 639, column: 9, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3731, file: !47, line: 637, column: 54)
!3736 = !DILocation(line: 639, column: 15, scope: !3735)
!3737 = !DILocation(line: 639, column: 39, scope: !3735)
!3738 = !DILocation(line: 638, column: 35, scope: !3735)
!3739 = !DILocation(line: 638, column: 41, scope: !3735)
!3740 = !DILocation(line: 638, column: 58, scope: !3735)
!3741 = !DILocation(line: 638, column: 9, scope: !3735)
!3742 = !DILocation(line: 638, column: 15, scope: !3735)
!3743 = !DILocation(line: 638, column: 33, scope: !3735)
!3744 = !DILocation(line: 640, column: 5, scope: !3735)
!3745 = !DILocation(line: 640, column: 16, scope: !3746)
!3746 = !DILexicalBlockFile(scope: !3747, file: !47, discriminator: 1)
!3747 = distinct !DILexicalBlock(scope: !3731, file: !47, line: 640, column: 16)
!3748 = !DILocation(line: 640, column: 34, scope: !3746)
!3749 = !DILocation(line: 641, column: 41, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3747, file: !47, line: 640, column: 68)
!3751 = !DILocation(line: 641, column: 52, scope: !3750)
!3752 = !DILocation(line: 642, column: 13, scope: !3750)
!3753 = !DILocation(line: 642, column: 19, scope: !3750)
!3754 = !DILocation(line: 641, column: 41, scope: !3755)
!3755 = !DILexicalBlockFile(scope: !3750, file: !47, discriminator: 1)
!3756 = !DILocation(line: 642, column: 39, scope: !3755)
!3757 = !DILocation(line: 642, column: 45, scope: !3755)
!3758 = !DILocation(line: 641, column: 41, scope: !3759)
!3759 = !DILexicalBlockFile(scope: !3750, file: !47, discriminator: 2)
!3760 = !DILocation(line: 641, column: 41, scope: !3761)
!3761 = !DILexicalBlockFile(scope: !3750, file: !47, discriminator: 3)
!3762 = !DILocation(line: 641, column: 9, scope: !3761)
!3763 = !DILocation(line: 641, column: 15, scope: !3761)
!3764 = !DILocation(line: 641, column: 39, scope: !3761)
!3765 = !DILocation(line: 643, column: 5, scope: !3750)
!3766 = !DILocation(line: 645, column: 9, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3673, file: !47, line: 645, column: 9)
!3768 = !DILocation(line: 645, column: 15, scope: !3767)
!3769 = !DILocation(line: 645, column: 23, scope: !3767)
!3770 = !DILocation(line: 645, column: 9, scope: !3673)
!3771 = !DILocation(line: 646, column: 9, scope: !3767)
!3772 = !DILocation(line: 646, column: 15, scope: !3767)
!3773 = !DILocation(line: 646, column: 23, scope: !3767)
!3774 = !DILocation(line: 646, column: 44, scope: !3767)
!3775 = !DILocation(line: 647, column: 1, scope: !3673)
!3776 = distinct !DISubprogram(name: "ffprobe_show_program_version", scope: !47, file: !47, line: 3043, type: !2476, isLocal: true, isDefinition: true, scopeLine: 3044, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!3777 = !DILocalVariable(name: "w", arg: 1, scope: !3776, file: !47, line: 3043, type: !2418)
!3778 = !DILocation(line: 3043, column: 57, scope: !3776)
!3779 = !DILocalVariable(name: "pbuf", scope: !3776, file: !47, line: 3045, type: !2452)
!3780 = !DILocation(line: 3045, column: 14, scope: !3776)
!3781 = !DILocation(line: 3046, column: 5, scope: !3776)
!3782 = !DILocation(line: 3048, column: 33, scope: !3776)
!3783 = !DILocation(line: 3048, column: 5, scope: !3776)
!3784 = !DILocation(line: 3049, column: 25, scope: !3776)
!3785 = !DILocation(line: 3049, column: 5, scope: !3776)
!3786 = !DILocation(line: 3050, column: 5, scope: !3776)
!3787 = distinct !{!3787, !3786}
!3788 = !DILocation(line: 3050, column: 10, scope: !3789)
!3789 = !DILexicalBlockFile(scope: !3790, file: !47, discriminator: 1)
!3790 = distinct !DILexicalBlock(scope: !3776, file: !47, line: 3050, column: 8)
!3791 = !DILocation(line: 3050, column: 34, scope: !3792)
!3792 = !DILexicalBlockFile(scope: !3789, file: !47, discriminator: 2)
!3793 = !DILocation(line: 3050, column: 144, scope: !3789)
!3794 = !DILocation(line: 3050, column: 165, scope: !3789)
!3795 = !DILocation(line: 3050, column: 124, scope: !3796)
!3796 = !DILexicalBlockFile(scope: !3789, file: !47, discriminator: 3)
!3797 = !DILocation(line: 3050, column: 174, scope: !3789)
!3798 = !DILocation(line: 3052, column: 25, scope: !3776)
!3799 = !DILocation(line: 3052, column: 5, scope: !3776)
!3800 = !DILocation(line: 3053, column: 25, scope: !3776)
!3801 = !DILocation(line: 3053, column: 5, scope: !3776)
!3802 = !DILocation(line: 3054, column: 33, scope: !3776)
!3803 = !DILocation(line: 3054, column: 5, scope: !3776)
!3804 = !DILocation(line: 3056, column: 5, scope: !3776)
!3805 = !DILocation(line: 3057, column: 1, scope: !3776)
!3806 = distinct !DISubprogram(name: "ffprobe_show_library_versions", scope: !47, file: !47, line: 3074, type: !2476, isLocal: true, isDefinition: true, scopeLine: 3075, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!3807 = !DILocalVariable(name: "w", arg: 1, scope: !3806, file: !47, line: 3074, type: !2418)
!3808 = !DILocation(line: 3074, column: 58, scope: !3806)
!3809 = !DILocation(line: 3076, column: 33, scope: !3806)
!3810 = !DILocation(line: 3076, column: 5, scope: !3806)
!3811 = !DILocation(line: 3077, column: 5, scope: !3806)
!3812 = distinct !{!3812, !3811}
!3813 = !DILocalVariable(name: "version", scope: !3814, file: !47, line: 3077, type: !1105)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !47, line: 3077, column: 17)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !47, line: 3077, column: 14)
!3816 = distinct !DILexicalBlock(scope: !3806, file: !47, line: 3077, column: 8)
!3817 = !DILocation(line: 3077, column: 32, scope: !3814)
!3818 = !DILocation(line: 3077, column: 42, scope: !3819)
!3819 = !DILexicalBlockFile(scope: !3814, file: !47, discriminator: 1)
!3820 = !DILocation(line: 3077, column: 32, scope: !3819)
!3821 = !DILocation(line: 3077, column: 88, scope: !3819)
!3822 = !DILocation(line: 3077, column: 60, scope: !3823)
!3823 = !DILexicalBlockFile(scope: !3819, file: !47, discriminator: 2)
!3824 = !DILocation(line: 3077, column: 140, scope: !3819)
!3825 = !DILocation(line: 3077, column: 120, scope: !3826)
!3826 = !DILexicalBlockFile(scope: !3819, file: !47, discriminator: 3)
!3827 = !DILocation(line: 3077, column: 192, scope: !3819)
!3828 = !DILocation(line: 3077, column: 171, scope: !3829)
!3829 = !DILexicalBlockFile(scope: !3819, file: !47, discriminator: 4)
!3830 = !DILocation(line: 3077, column: 230, scope: !3819)
!3831 = !DILocation(line: 3077, column: 209, scope: !3832)
!3832 = !DILexicalBlockFile(scope: !3819, file: !47, discriminator: 5)
!3833 = !DILocation(line: 3077, column: 268, scope: !3819)
!3834 = !DILocation(line: 3077, column: 247, scope: !3835)
!3835 = !DILexicalBlockFile(scope: !3819, file: !47, discriminator: 6)
!3836 = !DILocation(line: 3077, column: 307, scope: !3819)
!3837 = !DILocation(line: 3077, column: 321, scope: !3819)
!3838 = !DILocation(line: 3077, column: 286, scope: !3839)
!3839 = !DILexicalBlockFile(scope: !3819, file: !47, discriminator: 7)
!3840 = !DILocation(line: 3077, column: 351, scope: !3819)
!3841 = !DILocation(line: 3077, column: 331, scope: !3842)
!3842 = !DILexicalBlockFile(scope: !3819, file: !47, discriminator: 8)
!3843 = !DILocation(line: 3077, column: 415, scope: !3819)
!3844 = !DILocation(line: 3077, column: 387, scope: !3845)
!3845 = !DILexicalBlockFile(scope: !3819, file: !47, discriminator: 9)
!3846 = !DILocation(line: 3077, column: 421, scope: !3819)
!3847 = !DILocation(line: 3078, column: 5, scope: !3806)
!3848 = distinct !{!3848, !3847}
!3849 = !DILocalVariable(name: "version", scope: !3850, file: !47, line: 3078, type: !1105)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !47, line: 3078, column: 17)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !47, line: 3078, column: 14)
!3852 = distinct !DILexicalBlock(scope: !3806, file: !47, line: 3078, column: 8)
!3853 = !DILocation(line: 3078, column: 32, scope: !3850)
!3854 = !DILocation(line: 3078, column: 42, scope: !3855)
!3855 = !DILexicalBlockFile(scope: !3850, file: !47, discriminator: 1)
!3856 = !DILocation(line: 3078, column: 32, scope: !3855)
!3857 = !DILocation(line: 3078, column: 89, scope: !3855)
!3858 = !DILocation(line: 3078, column: 61, scope: !3859)
!3859 = !DILexicalBlockFile(scope: !3855, file: !47, discriminator: 2)
!3860 = !DILocation(line: 3078, column: 141, scope: !3855)
!3861 = !DILocation(line: 3078, column: 121, scope: !3862)
!3862 = !DILexicalBlockFile(scope: !3855, file: !47, discriminator: 3)
!3863 = !DILocation(line: 3078, column: 194, scope: !3855)
!3864 = !DILocation(line: 3078, column: 173, scope: !3865)
!3865 = !DILexicalBlockFile(scope: !3855, file: !47, discriminator: 4)
!3866 = !DILocation(line: 3078, column: 232, scope: !3855)
!3867 = !DILocation(line: 3078, column: 211, scope: !3868)
!3868 = !DILexicalBlockFile(scope: !3855, file: !47, discriminator: 5)
!3869 = !DILocation(line: 3078, column: 270, scope: !3855)
!3870 = !DILocation(line: 3078, column: 249, scope: !3871)
!3871 = !DILexicalBlockFile(scope: !3855, file: !47, discriminator: 6)
!3872 = !DILocation(line: 3078, column: 309, scope: !3855)
!3873 = !DILocation(line: 3078, column: 323, scope: !3855)
!3874 = !DILocation(line: 3078, column: 288, scope: !3875)
!3875 = !DILexicalBlockFile(scope: !3855, file: !47, discriminator: 7)
!3876 = !DILocation(line: 3078, column: 353, scope: !3855)
!3877 = !DILocation(line: 3078, column: 333, scope: !3878)
!3878 = !DILexicalBlockFile(scope: !3855, file: !47, discriminator: 8)
!3879 = !DILocation(line: 3078, column: 417, scope: !3855)
!3880 = !DILocation(line: 3078, column: 389, scope: !3881)
!3881 = !DILexicalBlockFile(scope: !3855, file: !47, discriminator: 9)
!3882 = !DILocation(line: 3078, column: 423, scope: !3855)
!3883 = !DILocation(line: 3079, column: 5, scope: !3806)
!3884 = distinct !{!3884, !3883}
!3885 = !DILocalVariable(name: "version", scope: !3886, file: !47, line: 3079, type: !1105)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !47, line: 3079, column: 17)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !47, line: 3079, column: 14)
!3888 = distinct !DILexicalBlock(scope: !3806, file: !47, line: 3079, column: 8)
!3889 = !DILocation(line: 3079, column: 32, scope: !3886)
!3890 = !DILocation(line: 3079, column: 42, scope: !3891)
!3891 = !DILexicalBlockFile(scope: !3886, file: !47, discriminator: 1)
!3892 = !DILocation(line: 3079, column: 32, scope: !3891)
!3893 = !DILocation(line: 3079, column: 90, scope: !3891)
!3894 = !DILocation(line: 3079, column: 62, scope: !3895)
!3895 = !DILexicalBlockFile(scope: !3891, file: !47, discriminator: 2)
!3896 = !DILocation(line: 3079, column: 142, scope: !3891)
!3897 = !DILocation(line: 3079, column: 122, scope: !3898)
!3898 = !DILexicalBlockFile(scope: !3891, file: !47, discriminator: 3)
!3899 = !DILocation(line: 3079, column: 196, scope: !3891)
!3900 = !DILocation(line: 3079, column: 175, scope: !3901)
!3901 = !DILexicalBlockFile(scope: !3891, file: !47, discriminator: 4)
!3902 = !DILocation(line: 3079, column: 234, scope: !3891)
!3903 = !DILocation(line: 3079, column: 213, scope: !3904)
!3904 = !DILexicalBlockFile(scope: !3891, file: !47, discriminator: 5)
!3905 = !DILocation(line: 3079, column: 272, scope: !3891)
!3906 = !DILocation(line: 3079, column: 251, scope: !3907)
!3907 = !DILexicalBlockFile(scope: !3891, file: !47, discriminator: 6)
!3908 = !DILocation(line: 3079, column: 311, scope: !3891)
!3909 = !DILocation(line: 3079, column: 325, scope: !3891)
!3910 = !DILocation(line: 3079, column: 290, scope: !3911)
!3911 = !DILexicalBlockFile(scope: !3891, file: !47, discriminator: 7)
!3912 = !DILocation(line: 3079, column: 355, scope: !3891)
!3913 = !DILocation(line: 3079, column: 335, scope: !3914)
!3914 = !DILexicalBlockFile(scope: !3891, file: !47, discriminator: 8)
!3915 = !DILocation(line: 3079, column: 419, scope: !3891)
!3916 = !DILocation(line: 3079, column: 391, scope: !3917)
!3917 = !DILexicalBlockFile(scope: !3891, file: !47, discriminator: 9)
!3918 = !DILocation(line: 3079, column: 425, scope: !3891)
!3919 = !DILocation(line: 3080, column: 5, scope: !3806)
!3920 = distinct !{!3920, !3919}
!3921 = !DILocalVariable(name: "version", scope: !3922, file: !47, line: 3080, type: !1105)
!3922 = distinct !DILexicalBlock(scope: !3923, file: !47, line: 3080, column: 17)
!3923 = distinct !DILexicalBlock(scope: !3924, file: !47, line: 3080, column: 14)
!3924 = distinct !DILexicalBlock(scope: !3806, file: !47, line: 3080, column: 8)
!3925 = !DILocation(line: 3080, column: 32, scope: !3922)
!3926 = !DILocation(line: 3080, column: 42, scope: !3927)
!3927 = !DILexicalBlockFile(scope: !3922, file: !47, discriminator: 1)
!3928 = !DILocation(line: 3080, column: 32, scope: !3927)
!3929 = !DILocation(line: 3080, column: 90, scope: !3927)
!3930 = !DILocation(line: 3080, column: 62, scope: !3931)
!3931 = !DILexicalBlockFile(scope: !3927, file: !47, discriminator: 2)
!3932 = !DILocation(line: 3080, column: 142, scope: !3927)
!3933 = !DILocation(line: 3080, column: 122, scope: !3934)
!3934 = !DILexicalBlockFile(scope: !3927, file: !47, discriminator: 3)
!3935 = !DILocation(line: 3080, column: 196, scope: !3927)
!3936 = !DILocation(line: 3080, column: 175, scope: !3937)
!3937 = !DILexicalBlockFile(scope: !3927, file: !47, discriminator: 4)
!3938 = !DILocation(line: 3080, column: 234, scope: !3927)
!3939 = !DILocation(line: 3080, column: 213, scope: !3940)
!3940 = !DILexicalBlockFile(scope: !3927, file: !47, discriminator: 5)
!3941 = !DILocation(line: 3080, column: 271, scope: !3927)
!3942 = !DILocation(line: 3080, column: 250, scope: !3943)
!3943 = !DILexicalBlockFile(scope: !3927, file: !47, discriminator: 6)
!3944 = !DILocation(line: 3080, column: 310, scope: !3927)
!3945 = !DILocation(line: 3080, column: 324, scope: !3927)
!3946 = !DILocation(line: 3080, column: 289, scope: !3947)
!3947 = !DILexicalBlockFile(scope: !3927, file: !47, discriminator: 7)
!3948 = !DILocation(line: 3080, column: 354, scope: !3927)
!3949 = !DILocation(line: 3080, column: 334, scope: !3950)
!3950 = !DILexicalBlockFile(scope: !3927, file: !47, discriminator: 8)
!3951 = !DILocation(line: 3080, column: 417, scope: !3927)
!3952 = !DILocation(line: 3080, column: 389, scope: !3953)
!3953 = !DILexicalBlockFile(scope: !3927, file: !47, discriminator: 9)
!3954 = !DILocation(line: 3080, column: 423, scope: !3927)
!3955 = !DILocation(line: 3081, column: 5, scope: !3806)
!3956 = distinct !{!3956, !3955}
!3957 = !DILocalVariable(name: "version", scope: !3958, file: !47, line: 3081, type: !1105)
!3958 = distinct !DILexicalBlock(scope: !3959, file: !47, line: 3081, column: 17)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !47, line: 3081, column: 14)
!3960 = distinct !DILexicalBlock(scope: !3806, file: !47, line: 3081, column: 8)
!3961 = !DILocation(line: 3081, column: 32, scope: !3958)
!3962 = !DILocation(line: 3081, column: 42, scope: !3963)
!3963 = !DILexicalBlockFile(scope: !3958, file: !47, discriminator: 1)
!3964 = !DILocation(line: 3081, column: 32, scope: !3963)
!3965 = !DILocation(line: 3081, column: 90, scope: !3963)
!3966 = !DILocation(line: 3081, column: 62, scope: !3967)
!3967 = !DILexicalBlockFile(scope: !3963, file: !47, discriminator: 2)
!3968 = !DILocation(line: 3081, column: 142, scope: !3963)
!3969 = !DILocation(line: 3081, column: 122, scope: !3970)
!3970 = !DILexicalBlockFile(scope: !3963, file: !47, discriminator: 3)
!3971 = !DILocation(line: 3081, column: 196, scope: !3963)
!3972 = !DILocation(line: 3081, column: 175, scope: !3973)
!3973 = !DILexicalBlockFile(scope: !3963, file: !47, discriminator: 4)
!3974 = !DILocation(line: 3081, column: 233, scope: !3963)
!3975 = !DILocation(line: 3081, column: 212, scope: !3976)
!3976 = !DILexicalBlockFile(scope: !3963, file: !47, discriminator: 5)
!3977 = !DILocation(line: 3081, column: 271, scope: !3963)
!3978 = !DILocation(line: 3081, column: 250, scope: !3979)
!3979 = !DILexicalBlockFile(scope: !3963, file: !47, discriminator: 6)
!3980 = !DILocation(line: 3081, column: 310, scope: !3963)
!3981 = !DILocation(line: 3081, column: 324, scope: !3963)
!3982 = !DILocation(line: 3081, column: 289, scope: !3983)
!3983 = !DILexicalBlockFile(scope: !3963, file: !47, discriminator: 7)
!3984 = !DILocation(line: 3081, column: 354, scope: !3963)
!3985 = !DILocation(line: 3081, column: 334, scope: !3986)
!3986 = !DILexicalBlockFile(scope: !3963, file: !47, discriminator: 8)
!3987 = !DILocation(line: 3081, column: 418, scope: !3963)
!3988 = !DILocation(line: 3081, column: 390, scope: !3989)
!3989 = !DILexicalBlockFile(scope: !3963, file: !47, discriminator: 9)
!3990 = !DILocation(line: 3081, column: 424, scope: !3963)
!3991 = !DILocation(line: 3082, column: 5, scope: !3806)
!3992 = distinct !{!3992, !3991}
!3993 = !DILocalVariable(name: "version", scope: !3994, file: !47, line: 3082, type: !1105)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !47, line: 3082, column: 17)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !47, line: 3082, column: 14)
!3996 = distinct !DILexicalBlock(scope: !3806, file: !47, line: 3082, column: 8)
!3997 = !DILocation(line: 3082, column: 32, scope: !3994)
!3998 = !DILocation(line: 3082, column: 42, scope: !3999)
!3999 = !DILexicalBlockFile(scope: !3994, file: !47, discriminator: 1)
!4000 = !DILocation(line: 3082, column: 32, scope: !3999)
!4001 = !DILocation(line: 3082, column: 89, scope: !3999)
!4002 = !DILocation(line: 3082, column: 61, scope: !4003)
!4003 = !DILexicalBlockFile(scope: !3999, file: !47, discriminator: 2)
!4004 = !DILocation(line: 3082, column: 141, scope: !3999)
!4005 = !DILocation(line: 3082, column: 121, scope: !4006)
!4006 = !DILexicalBlockFile(scope: !3999, file: !47, discriminator: 3)
!4007 = !DILocation(line: 3082, column: 194, scope: !3999)
!4008 = !DILocation(line: 3082, column: 173, scope: !4009)
!4009 = !DILexicalBlockFile(scope: !3999, file: !47, discriminator: 4)
!4010 = !DILocation(line: 3082, column: 231, scope: !3999)
!4011 = !DILocation(line: 3082, column: 210, scope: !4012)
!4012 = !DILexicalBlockFile(scope: !3999, file: !47, discriminator: 5)
!4013 = !DILocation(line: 3082, column: 268, scope: !3999)
!4014 = !DILocation(line: 3082, column: 247, scope: !4015)
!4015 = !DILexicalBlockFile(scope: !3999, file: !47, discriminator: 6)
!4016 = !DILocation(line: 3082, column: 307, scope: !3999)
!4017 = !DILocation(line: 3082, column: 321, scope: !3999)
!4018 = !DILocation(line: 3082, column: 286, scope: !4019)
!4019 = !DILexicalBlockFile(scope: !3999, file: !47, discriminator: 7)
!4020 = !DILocation(line: 3082, column: 351, scope: !3999)
!4021 = !DILocation(line: 3082, column: 331, scope: !4022)
!4022 = !DILexicalBlockFile(scope: !3999, file: !47, discriminator: 8)
!4023 = !DILocation(line: 3082, column: 412, scope: !3999)
!4024 = !DILocation(line: 3082, column: 384, scope: !4025)
!4025 = !DILexicalBlockFile(scope: !3999, file: !47, discriminator: 9)
!4026 = !DILocation(line: 3082, column: 418, scope: !3999)
!4027 = !DILocation(line: 3083, column: 5, scope: !3806)
!4028 = distinct !{!4028, !4027}
!4029 = !DILocalVariable(name: "version", scope: !4030, file: !47, line: 3083, type: !1105)
!4030 = distinct !DILexicalBlock(scope: !4031, file: !47, line: 3083, column: 17)
!4031 = distinct !DILexicalBlock(scope: !4032, file: !47, line: 3083, column: 14)
!4032 = distinct !DILexicalBlock(scope: !3806, file: !47, line: 3083, column: 8)
!4033 = !DILocation(line: 3083, column: 32, scope: !4030)
!4034 = !DILocation(line: 3083, column: 42, scope: !4035)
!4035 = !DILexicalBlockFile(scope: !4030, file: !47, discriminator: 1)
!4036 = !DILocation(line: 3083, column: 32, scope: !4035)
!4037 = !DILocation(line: 3083, column: 92, scope: !4035)
!4038 = !DILocation(line: 3083, column: 64, scope: !4039)
!4039 = !DILexicalBlockFile(scope: !4035, file: !47, discriminator: 2)
!4040 = !DILocation(line: 3083, column: 144, scope: !4035)
!4041 = !DILocation(line: 3083, column: 124, scope: !4042)
!4042 = !DILexicalBlockFile(scope: !4035, file: !47, discriminator: 3)
!4043 = !DILocation(line: 3083, column: 200, scope: !4035)
!4044 = !DILocation(line: 3083, column: 179, scope: !4045)
!4045 = !DILexicalBlockFile(scope: !4035, file: !47, discriminator: 4)
!4046 = !DILocation(line: 3083, column: 237, scope: !4035)
!4047 = !DILocation(line: 3083, column: 216, scope: !4048)
!4048 = !DILexicalBlockFile(scope: !4035, file: !47, discriminator: 5)
!4049 = !DILocation(line: 3083, column: 274, scope: !4035)
!4050 = !DILocation(line: 3083, column: 253, scope: !4051)
!4051 = !DILexicalBlockFile(scope: !4035, file: !47, discriminator: 6)
!4052 = !DILocation(line: 3083, column: 313, scope: !4035)
!4053 = !DILocation(line: 3083, column: 327, scope: !4035)
!4054 = !DILocation(line: 3083, column: 292, scope: !4055)
!4055 = !DILexicalBlockFile(scope: !4035, file: !47, discriminator: 7)
!4056 = !DILocation(line: 3083, column: 357, scope: !4035)
!4057 = !DILocation(line: 3083, column: 337, scope: !4058)
!4058 = !DILexicalBlockFile(scope: !4035, file: !47, discriminator: 8)
!4059 = !DILocation(line: 3083, column: 418, scope: !4035)
!4060 = !DILocation(line: 3083, column: 390, scope: !4061)
!4061 = !DILexicalBlockFile(scope: !4035, file: !47, discriminator: 9)
!4062 = !DILocation(line: 3083, column: 424, scope: !4035)
!4063 = !DILocation(line: 3084, column: 5, scope: !3806)
!4064 = distinct !{!4064, !4063}
!4065 = !DILocation(line: 3084, column: 427, scope: !4066)
!4066 = !DILexicalBlockFile(scope: !4067, file: !47, discriminator: 1)
!4067 = distinct !DILexicalBlock(scope: !3806, file: !47, line: 3084, column: 8)
!4068 = !DILocation(line: 3085, column: 33, scope: !3806)
!4069 = !DILocation(line: 3085, column: 5, scope: !3806)
!4070 = !DILocation(line: 3086, column: 1, scope: !3806)
!4071 = distinct !DISubprogram(name: "ffprobe_show_pixel_formats", scope: !47, file: !47, line: 3093, type: !2476, isLocal: true, isDefinition: true, scopeLine: 3094, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4072 = !DILocalVariable(name: "w", arg: 1, scope: !4071, file: !47, line: 3093, type: !2418)
!4073 = !DILocation(line: 3093, column: 55, scope: !4071)
!4074 = !DILocalVariable(name: "pixdesc", scope: !4071, file: !47, line: 3095, type: !4075)
!4075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4076, size: 64, align: 64)
!4076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4077)
!4077 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPixFmtDescriptor", file: !4078, line: 123, baseType: !4079)
!4078 = !DIFile(filename: "./libavutil/pixdesc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!4079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPixFmtDescriptor", file: !4078, line: 81, size: 1280, align: 64, elements: !4080)
!4080 = !{!4081, !4082, !4083, !4084, !4085, !4086, !4099}
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4079, file: !4078, line: 82, baseType: !1027, size: 64, align: 64)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !4079, file: !4078, line: 83, baseType: !1103, size: 8, align: 8, offset: 64)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_w", scope: !4079, file: !4078, line: 92, baseType: !1103, size: 8, align: 8, offset: 72)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_h", scope: !4079, file: !4078, line: 101, baseType: !1103, size: 8, align: 8, offset: 80)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4079, file: !4078, line: 106, baseType: !1400, size: 64, align: 64, offset: 128)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !4079, file: !4078, line: 117, baseType: !4087, size: 1024, align: 32, offset: 192)
!4087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4088, size: 1024, align: 32, elements: !1680)
!4088 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVComponentDescriptor", file: !4078, line: 70, baseType: !4089)
!4089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVComponentDescriptor", file: !4078, line: 31, size: 256, align: 32, elements: !4090)
!4090 = !{!4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098}
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !4089, file: !4078, line: 35, baseType: !1041, size: 32, align: 32)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !4089, file: !4078, line: 41, baseType: !1041, size: 32, align: 32, offset: 32)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4089, file: !4078, line: 47, baseType: !1041, size: 32, align: 32, offset: 64)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !4089, file: !4078, line: 53, baseType: !1041, size: 32, align: 32, offset: 96)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4089, file: !4078, line: 58, baseType: !1041, size: 32, align: 32, offset: 128)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "step_minus1", scope: !4089, file: !4078, line: 62, baseType: !1041, size: 32, align: 32, offset: 160)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "depth_minus1", scope: !4089, file: !4078, line: 65, baseType: !1041, size: 32, align: 32, offset: 192)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "offset_plus1", scope: !4089, file: !4078, line: 68, baseType: !1041, size: 32, align: 32, offset: 224)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !4079, file: !4078, line: 122, baseType: !1027, size: 64, align: 64, offset: 1216)
!4100 = !DILocation(line: 3095, column: 31, scope: !4071)
!4101 = !DILocalVariable(name: "i", scope: !4071, file: !47, line: 3096, type: !1041)
!4102 = !DILocation(line: 3096, column: 9, scope: !4071)
!4103 = !DILocalVariable(name: "n", scope: !4071, file: !47, line: 3096, type: !1041)
!4104 = !DILocation(line: 3096, column: 12, scope: !4071)
!4105 = !DILocation(line: 3098, column: 33, scope: !4071)
!4106 = !DILocation(line: 3098, column: 5, scope: !4071)
!4107 = !DILocation(line: 3099, column: 5, scope: !4071)
!4108 = !DILocation(line: 3099, column: 43, scope: !4109)
!4109 = !DILexicalBlockFile(scope: !4071, file: !47, discriminator: 1)
!4110 = !DILocation(line: 3099, column: 22, scope: !4109)
!4111 = !DILocation(line: 3099, column: 20, scope: !4109)
!4112 = !DILocation(line: 3099, column: 5, scope: !4109)
!4113 = !DILocation(line: 3100, column: 37, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4071, file: !47, line: 3099, column: 53)
!4115 = !DILocation(line: 3100, column: 9, scope: !4114)
!4116 = !DILocation(line: 3101, column: 29, scope: !4114)
!4117 = !DILocation(line: 3101, column: 40, scope: !4114)
!4118 = !DILocation(line: 3101, column: 49, scope: !4114)
!4119 = !DILocation(line: 3101, column: 9, scope: !4114)
!4120 = !DILocation(line: 3102, column: 30, scope: !4114)
!4121 = !DILocation(line: 3102, column: 50, scope: !4114)
!4122 = !DILocation(line: 3102, column: 59, scope: !4114)
!4123 = !DILocation(line: 3102, column: 9, scope: !4114)
!4124 = !DILocation(line: 3103, column: 14, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4114, file: !47, line: 3103, column: 13)
!4126 = !DILocation(line: 3103, column: 23, scope: !4125)
!4127 = !DILocation(line: 3103, column: 37, scope: !4125)
!4128 = !DILocation(line: 3103, column: 43, scope: !4125)
!4129 = !DILocation(line: 3103, column: 48, scope: !4130)
!4130 = !DILexicalBlockFile(scope: !4125, file: !47, discriminator: 1)
!4131 = !DILocation(line: 3103, column: 57, scope: !4130)
!4132 = !DILocation(line: 3103, column: 63, scope: !4130)
!4133 = !DILocation(line: 3103, column: 13, scope: !4130)
!4134 = !DILocation(line: 3104, column: 34, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4125, file: !47, line: 3103, column: 76)
!4136 = !DILocation(line: 3104, column: 54, scope: !4135)
!4137 = !DILocation(line: 3104, column: 63, scope: !4135)
!4138 = !DILocation(line: 3104, column: 13, scope: !4135)
!4139 = !DILocation(line: 3105, column: 34, scope: !4135)
!4140 = !DILocation(line: 3105, column: 54, scope: !4135)
!4141 = !DILocation(line: 3105, column: 63, scope: !4135)
!4142 = !DILocation(line: 3105, column: 13, scope: !4135)
!4143 = !DILocation(line: 3106, column: 9, scope: !4135)
!4144 = !DILocation(line: 3107, column: 33, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4125, file: !47, line: 3106, column: 16)
!4146 = !DILocation(line: 3107, column: 13, scope: !4145)
!4147 = !DILocation(line: 3108, column: 33, scope: !4145)
!4148 = !DILocation(line: 3108, column: 13, scope: !4145)
!4149 = !DILocation(line: 3110, column: 35, scope: !4114)
!4150 = !DILocation(line: 3110, column: 13, scope: !4114)
!4151 = !DILocation(line: 3110, column: 11, scope: !4114)
!4152 = !DILocation(line: 3111, column: 13, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4114, file: !47, line: 3111, column: 13)
!4154 = !DILocation(line: 3111, column: 13, scope: !4114)
!4155 = !DILocation(line: 3111, column: 37, scope: !4156)
!4156 = !DILexicalBlockFile(scope: !4153, file: !47, discriminator: 1)
!4157 = !DILocation(line: 3111, column: 58, scope: !4156)
!4158 = !DILocation(line: 3111, column: 16, scope: !4156)
!4159 = !DILocation(line: 3112, column: 34, scope: !4153)
!4160 = !DILocation(line: 3112, column: 14, scope: !4153)
!4161 = !DILocation(line: 3113, column: 13, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4114, file: !47, line: 3113, column: 13)
!4163 = !DILocation(line: 3113, column: 13, scope: !4114)
!4164 = !DILocation(line: 3114, column: 41, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4162, file: !47, line: 3113, column: 41)
!4166 = !DILocation(line: 3114, column: 13, scope: !4165)
!4167 = !DILocation(line: 3115, column: 13, scope: !4165)
!4168 = distinct !{!4168, !4167}
!4169 = !DILocation(line: 3115, column: 39, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !4171, file: !47, discriminator: 1)
!4171 = distinct !DILexicalBlock(scope: !4165, file: !47, line: 3115, column: 16)
!4172 = !DILocation(line: 3115, column: 59, scope: !4170)
!4173 = !DILocation(line: 3115, column: 68, scope: !4170)
!4174 = !DILocation(line: 3115, column: 74, scope: !4170)
!4175 = !DILocation(line: 3115, column: 57, scope: !4170)
!4176 = !DILocation(line: 3115, column: 56, scope: !4170)
!4177 = !DILocation(line: 3115, column: 18, scope: !4170)
!4178 = !DILocation(line: 3115, column: 88, scope: !4170)
!4179 = !DILocation(line: 3116, column: 13, scope: !4165)
!4180 = distinct !{!4180, !4179}
!4181 = !DILocation(line: 3116, column: 39, scope: !4182)
!4182 = !DILexicalBlockFile(scope: !4183, file: !47, discriminator: 1)
!4183 = distinct !DILexicalBlock(scope: !4165, file: !47, line: 3116, column: 16)
!4184 = !DILocation(line: 3116, column: 56, scope: !4182)
!4185 = !DILocation(line: 3116, column: 65, scope: !4182)
!4186 = !DILocation(line: 3116, column: 71, scope: !4182)
!4187 = !DILocation(line: 3116, column: 54, scope: !4182)
!4188 = !DILocation(line: 3116, column: 53, scope: !4182)
!4189 = !DILocation(line: 3116, column: 18, scope: !4182)
!4190 = !DILocation(line: 3116, column: 85, scope: !4182)
!4191 = !DILocation(line: 3117, column: 13, scope: !4165)
!4192 = distinct !{!4192, !4191}
!4193 = !DILocation(line: 3117, column: 39, scope: !4194)
!4194 = !DILexicalBlockFile(scope: !4195, file: !47, discriminator: 1)
!4195 = distinct !DILexicalBlock(scope: !4165, file: !47, line: 3117, column: 16)
!4196 = !DILocation(line: 3117, column: 58, scope: !4194)
!4197 = !DILocation(line: 3117, column: 67, scope: !4194)
!4198 = !DILocation(line: 3117, column: 73, scope: !4194)
!4199 = !DILocation(line: 3117, column: 56, scope: !4194)
!4200 = !DILocation(line: 3117, column: 55, scope: !4194)
!4201 = !DILocation(line: 3117, column: 18, scope: !4194)
!4202 = !DILocation(line: 3117, column: 87, scope: !4194)
!4203 = !DILocation(line: 3118, column: 13, scope: !4165)
!4204 = distinct !{!4204, !4203}
!4205 = !DILocation(line: 3118, column: 39, scope: !4206)
!4206 = !DILexicalBlockFile(scope: !4207, file: !47, discriminator: 1)
!4207 = distinct !DILexicalBlock(scope: !4165, file: !47, line: 3118, column: 16)
!4208 = !DILocation(line: 3118, column: 56, scope: !4206)
!4209 = !DILocation(line: 3118, column: 65, scope: !4206)
!4210 = !DILocation(line: 3118, column: 71, scope: !4206)
!4211 = !DILocation(line: 3118, column: 54, scope: !4206)
!4212 = !DILocation(line: 3118, column: 53, scope: !4206)
!4213 = !DILocation(line: 3118, column: 18, scope: !4206)
!4214 = !DILocation(line: 3118, column: 85, scope: !4206)
!4215 = !DILocation(line: 3119, column: 13, scope: !4165)
!4216 = distinct !{!4216, !4215}
!4217 = !DILocation(line: 3119, column: 39, scope: !4218)
!4218 = !DILexicalBlockFile(scope: !4219, file: !47, discriminator: 1)
!4219 = distinct !DILexicalBlock(scope: !4165, file: !47, line: 3119, column: 16)
!4220 = !DILocation(line: 3119, column: 55, scope: !4218)
!4221 = !DILocation(line: 3119, column: 64, scope: !4218)
!4222 = !DILocation(line: 3119, column: 70, scope: !4218)
!4223 = !DILocation(line: 3119, column: 53, scope: !4218)
!4224 = !DILocation(line: 3119, column: 52, scope: !4218)
!4225 = !DILocation(line: 3119, column: 18, scope: !4218)
!4226 = !DILocation(line: 3119, column: 84, scope: !4218)
!4227 = !DILocation(line: 3120, column: 13, scope: !4165)
!4228 = distinct !{!4228, !4227}
!4229 = !DILocation(line: 3120, column: 39, scope: !4230)
!4230 = !DILexicalBlockFile(scope: !4231, file: !47, discriminator: 1)
!4231 = distinct !DILexicalBlock(scope: !4165, file: !47, line: 3120, column: 16)
!4232 = !DILocation(line: 3120, column: 52, scope: !4230)
!4233 = !DILocation(line: 3120, column: 61, scope: !4230)
!4234 = !DILocation(line: 3120, column: 67, scope: !4230)
!4235 = !DILocation(line: 3120, column: 50, scope: !4230)
!4236 = !DILocation(line: 3120, column: 49, scope: !4230)
!4237 = !DILocation(line: 3120, column: 18, scope: !4230)
!4238 = !DILocation(line: 3120, column: 81, scope: !4230)
!4239 = !DILocation(line: 3122, column: 13, scope: !4165)
!4240 = distinct !{!4240, !4239}
!4241 = !DILocation(line: 3122, column: 39, scope: !4242)
!4242 = !DILexicalBlockFile(scope: !4243, file: !47, discriminator: 1)
!4243 = distinct !DILexicalBlock(scope: !4165, file: !47, line: 3122, column: 16)
!4244 = !DILocation(line: 3122, column: 58, scope: !4242)
!4245 = !DILocation(line: 3122, column: 67, scope: !4242)
!4246 = !DILocation(line: 3122, column: 73, scope: !4242)
!4247 = !DILocation(line: 3122, column: 56, scope: !4242)
!4248 = !DILocation(line: 3122, column: 55, scope: !4242)
!4249 = !DILocation(line: 3122, column: 18, scope: !4242)
!4250 = !DILocation(line: 3122, column: 87, scope: !4242)
!4251 = !DILocation(line: 3124, column: 13, scope: !4165)
!4252 = distinct !{!4252, !4251}
!4253 = !DILocation(line: 3124, column: 39, scope: !4254)
!4254 = !DILexicalBlockFile(scope: !4255, file: !47, discriminator: 1)
!4255 = distinct !DILexicalBlock(scope: !4165, file: !47, line: 3124, column: 16)
!4256 = !DILocation(line: 3124, column: 54, scope: !4254)
!4257 = !DILocation(line: 3124, column: 63, scope: !4254)
!4258 = !DILocation(line: 3124, column: 69, scope: !4254)
!4259 = !DILocation(line: 3124, column: 52, scope: !4254)
!4260 = !DILocation(line: 3124, column: 51, scope: !4254)
!4261 = !DILocation(line: 3124, column: 18, scope: !4254)
!4262 = !DILocation(line: 3124, column: 83, scope: !4254)
!4263 = !DILocation(line: 3125, column: 41, scope: !4165)
!4264 = !DILocation(line: 3125, column: 13, scope: !4165)
!4265 = !DILocation(line: 3126, column: 9, scope: !4165)
!4266 = !DILocation(line: 3127, column: 13, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4114, file: !47, line: 3127, column: 13)
!4268 = !DILocation(line: 3127, column: 45, scope: !4267)
!4269 = !DILocation(line: 3127, column: 49, scope: !4270)
!4270 = !DILexicalBlockFile(scope: !4267, file: !47, discriminator: 1)
!4271 = !DILocation(line: 3127, column: 58, scope: !4270)
!4272 = !DILocation(line: 3127, column: 72, scope: !4270)
!4273 = !DILocation(line: 3127, column: 13, scope: !4270)
!4274 = !DILocation(line: 3128, column: 41, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4267, file: !47, line: 3127, column: 78)
!4276 = !DILocation(line: 3128, column: 13, scope: !4275)
!4277 = !DILocation(line: 3129, column: 20, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4275, file: !47, line: 3129, column: 13)
!4279 = !DILocation(line: 3129, column: 18, scope: !4278)
!4280 = !DILocation(line: 3129, column: 25, scope: !4281)
!4281 = !DILexicalBlockFile(scope: !4282, file: !47, discriminator: 1)
!4282 = distinct !DILexicalBlock(scope: !4278, file: !47, line: 3129, column: 13)
!4283 = !DILocation(line: 3129, column: 29, scope: !4281)
!4284 = !DILocation(line: 3129, column: 38, scope: !4281)
!4285 = !DILocation(line: 3129, column: 27, scope: !4281)
!4286 = !DILocation(line: 3129, column: 13, scope: !4281)
!4287 = !DILocation(line: 3130, column: 45, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4282, file: !47, line: 3129, column: 58)
!4289 = !DILocation(line: 3130, column: 17, scope: !4288)
!4290 = !DILocation(line: 3131, column: 38, scope: !4288)
!4291 = !DILocation(line: 3131, column: 50, scope: !4288)
!4292 = !DILocation(line: 3131, column: 52, scope: !4288)
!4293 = !DILocation(line: 3131, column: 17, scope: !4288)
!4294 = !DILocation(line: 3132, column: 38, scope: !4288)
!4295 = !DILocation(line: 3132, column: 68, scope: !4288)
!4296 = !DILocation(line: 3132, column: 54, scope: !4288)
!4297 = !DILocation(line: 3132, column: 63, scope: !4288)
!4298 = !DILocation(line: 3132, column: 71, scope: !4288)
!4299 = !DILocation(line: 3132, column: 17, scope: !4288)
!4300 = !DILocation(line: 3133, column: 45, scope: !4288)
!4301 = !DILocation(line: 3133, column: 17, scope: !4288)
!4302 = !DILocation(line: 3134, column: 13, scope: !4288)
!4303 = !DILocation(line: 3129, column: 54, scope: !4304)
!4304 = !DILexicalBlockFile(scope: !4282, file: !47, discriminator: 2)
!4305 = !DILocation(line: 3129, column: 13, scope: !4304)
!4306 = distinct !{!4306, !4307}
!4307 = !DILocation(line: 3129, column: 13, scope: !4275)
!4308 = !DILocation(line: 3135, column: 41, scope: !4275)
!4309 = !DILocation(line: 3135, column: 13, scope: !4275)
!4310 = !DILocation(line: 3136, column: 9, scope: !4275)
!4311 = !DILocation(line: 3137, column: 37, scope: !4114)
!4312 = !DILocation(line: 3137, column: 9, scope: !4114)
!4313 = !DILocation(line: 3099, column: 5, scope: !4314)
!4314 = !DILexicalBlockFile(scope: !4071, file: !47, discriminator: 2)
!4315 = distinct !{!4315, !4107}
!4316 = !DILocation(line: 3139, column: 33, scope: !4071)
!4317 = !DILocation(line: 3139, column: 5, scope: !4071)
!4318 = !DILocation(line: 3140, column: 1, scope: !4071)
!4319 = distinct !DISubprogram(name: "probe_file", scope: !47, file: !47, line: 2956, type: !4320, isLocal: true, isDefinition: true, scopeLine: 2957, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!1041, !2418, !1027}
!4322 = !DILocalVariable(name: "wctx", arg: 1, scope: !4319, file: !47, line: 2956, type: !2418)
!4323 = !DILocation(line: 2956, column: 38, scope: !4319)
!4324 = !DILocalVariable(name: "filename", arg: 2, scope: !4319, file: !47, line: 2956, type: !1027)
!4325 = !DILocation(line: 2956, column: 56, scope: !4319)
!4326 = !DILocalVariable(name: "ifile", scope: !4319, file: !47, line: 2958, type: !4327)
!4327 = !DIDerivedType(tag: DW_TAG_typedef, name: "InputFile", file: !47, line: 79, baseType: !4328)
!4328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "InputFile", file: !47, line: 74, size: 192, align: 64, elements: !4329)
!4329 = !{!4330, !4331, !4338}
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "fmt_ctx", scope: !4328, file: !47, line: 75, baseType: !1483, size: 64, align: 64)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !4328, file: !47, line: 77, baseType: !4332, size: 64, align: 64, offset: 64)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64, align: 64)
!4333 = !DIDerivedType(tag: DW_TAG_typedef, name: "InputStream", file: !47, line: 72, baseType: !4334)
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "InputStream", file: !47, line: 68, size: 128, align: 64, elements: !4335)
!4335 = !{!4336, !4337}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !4334, file: !47, line: 69, baseType: !1577, size: 64, align: 64)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "dec_ctx", scope: !4334, file: !47, line: 71, baseType: !1584, size: 64, align: 64, offset: 64)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streams", scope: !4328, file: !47, line: 78, baseType: !1041, size: 32, align: 32, offset: 128)
!4339 = !DILocation(line: 2958, column: 15, scope: !4319)
!4340 = !DILocalVariable(name: "ret", scope: !4319, file: !47, line: 2959, type: !1041)
!4341 = !DILocation(line: 2959, column: 9, scope: !4319)
!4342 = !DILocalVariable(name: "i", scope: !4319, file: !47, line: 2959, type: !1041)
!4343 = !DILocation(line: 2959, column: 14, scope: !4319)
!4344 = !DILocalVariable(name: "section_id", scope: !4319, file: !47, line: 2960, type: !1041)
!4345 = !DILocation(line: 2960, column: 9, scope: !4319)
!4346 = !DILocation(line: 2962, column: 22, scope: !4319)
!4347 = !DILocation(line: 2962, column: 37, scope: !4319)
!4348 = !DILocation(line: 2962, column: 40, scope: !4349)
!4349 = !DILexicalBlockFile(scope: !4319, file: !47, discriminator: 1)
!4350 = !DILocation(line: 2962, column: 37, scope: !4349)
!4351 = !DILocation(line: 2962, column: 37, scope: !4352)
!4352 = !DILexicalBlockFile(scope: !4319, file: !47, discriminator: 2)
!4353 = !DILocation(line: 2962, column: 20, scope: !4352)
!4354 = !DILocation(line: 2963, column: 23, scope: !4319)
!4355 = !DILocation(line: 2963, column: 39, scope: !4319)
!4356 = !DILocation(line: 2963, column: 42, scope: !4349)
!4357 = !DILocation(line: 2963, column: 39, scope: !4349)
!4358 = !DILocation(line: 2963, column: 39, scope: !4352)
!4359 = !DILocation(line: 2963, column: 21, scope: !4352)
!4360 = !DILocation(line: 2965, column: 35, scope: !4319)
!4361 = !DILocation(line: 2965, column: 11, scope: !4319)
!4362 = !DILocation(line: 2965, column: 9, scope: !4319)
!4363 = !DILocation(line: 2966, column: 9, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4319, file: !47, line: 2966, column: 9)
!4365 = !DILocation(line: 2966, column: 13, scope: !4364)
!4366 = !DILocation(line: 2966, column: 9, scope: !4319)
!4367 = !DILocation(line: 2967, column: 9, scope: !4364)
!4368 = !DILocation(line: 2971, column: 24, scope: !4319)
!4369 = !DILocation(line: 2971, column: 33, scope: !4319)
!4370 = !DILocation(line: 2971, column: 16, scope: !4319)
!4371 = !DILocation(line: 2972, column: 60, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4319, file: !47, line: 2972, column: 5)
!4373 = !DILocation(line: 2972, column: 69, scope: !4372)
!4374 = !DILocation(line: 2972, column: 53, scope: !4372)
!4375 = !DILocation(line: 2972, column: 13, scope: !4372)
!4376 = !DILocation(line: 2972, column: 11, scope: !4372)
!4377 = !DILocation(line: 2972, column: 117, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4372, file: !47, line: 2972, column: 117)
!4379 = !DILocation(line: 2972, column: 121, scope: !4378)
!4380 = !DILocation(line: 2972, column: 117, scope: !4372)
!4381 = !DILocation(line: 2972, column: 126, scope: !4382)
!4382 = !DILexicalBlockFile(scope: !4378, file: !47, discriminator: 1)
!4383 = !DILocation(line: 2972, column: 145, scope: !4384)
!4384 = !DILexicalBlockFile(scope: !4372, file: !47, discriminator: 2)
!4385 = !DILocation(line: 2972, column: 164, scope: !4384)
!4386 = !DILocation(line: 2972, column: 136, scope: !4384)
!4387 = !DILocation(line: 2972, column: 182, scope: !4384)
!4388 = !DILocation(line: 2972, column: 191, scope: !4384)
!4389 = !DILocation(line: 2972, column: 203, scope: !4384)
!4390 = !DILocation(line: 2972, column: 174, scope: !4384)
!4391 = !DILocation(line: 2972, column: 210, scope: !4384)
!4392 = !DILocation(line: 2973, column: 61, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4319, file: !47, line: 2973, column: 5)
!4394 = !DILocation(line: 2973, column: 70, scope: !4393)
!4395 = !DILocation(line: 2973, column: 54, scope: !4393)
!4396 = !DILocation(line: 2973, column: 13, scope: !4393)
!4397 = !DILocation(line: 2973, column: 11, scope: !4393)
!4398 = !DILocation(line: 2973, column: 119, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4393, file: !47, line: 2973, column: 119)
!4400 = !DILocation(line: 2973, column: 123, scope: !4399)
!4401 = !DILocation(line: 2973, column: 119, scope: !4393)
!4402 = !DILocation(line: 2973, column: 128, scope: !4403)
!4403 = !DILexicalBlockFile(scope: !4399, file: !47, discriminator: 1)
!4404 = !DILocation(line: 2973, column: 147, scope: !4405)
!4405 = !DILexicalBlockFile(scope: !4393, file: !47, discriminator: 2)
!4406 = !DILocation(line: 2973, column: 167, scope: !4405)
!4407 = !DILocation(line: 2973, column: 138, scope: !4405)
!4408 = !DILocation(line: 2973, column: 185, scope: !4405)
!4409 = !DILocation(line: 2973, column: 194, scope: !4405)
!4410 = !DILocation(line: 2973, column: 206, scope: !4405)
!4411 = !DILocation(line: 2973, column: 177, scope: !4405)
!4412 = !DILocation(line: 2973, column: 213, scope: !4405)
!4413 = !DILocation(line: 2974, column: 59, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4319, file: !47, line: 2974, column: 5)
!4415 = !DILocation(line: 2974, column: 68, scope: !4414)
!4416 = !DILocation(line: 2974, column: 52, scope: !4414)
!4417 = !DILocation(line: 2974, column: 13, scope: !4414)
!4418 = !DILocation(line: 2974, column: 11, scope: !4414)
!4419 = !DILocation(line: 2974, column: 115, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4414, file: !47, line: 2974, column: 115)
!4421 = !DILocation(line: 2974, column: 119, scope: !4420)
!4422 = !DILocation(line: 2974, column: 115, scope: !4414)
!4423 = !DILocation(line: 2974, column: 124, scope: !4424)
!4424 = !DILexicalBlockFile(scope: !4420, file: !47, discriminator: 1)
!4425 = !DILocation(line: 2974, column: 143, scope: !4426)
!4426 = !DILexicalBlockFile(scope: !4414, file: !47, discriminator: 2)
!4427 = !DILocation(line: 2974, column: 161, scope: !4426)
!4428 = !DILocation(line: 2974, column: 134, scope: !4426)
!4429 = !DILocation(line: 2974, column: 179, scope: !4426)
!4430 = !DILocation(line: 2974, column: 188, scope: !4426)
!4431 = !DILocation(line: 2974, column: 200, scope: !4426)
!4432 = !DILocation(line: 2974, column: 171, scope: !4426)
!4433 = !DILocation(line: 2974, column: 207, scope: !4426)
!4434 = !DILocation(line: 2976, column: 12, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4319, file: !47, line: 2976, column: 5)
!4436 = !DILocation(line: 2976, column: 10, scope: !4435)
!4437 = !DILocation(line: 2976, column: 17, scope: !4438)
!4438 = !DILexicalBlockFile(scope: !4439, file: !47, discriminator: 1)
!4439 = distinct !DILexicalBlock(scope: !4435, file: !47, line: 2976, column: 5)
!4440 = !DILocation(line: 2976, column: 27, scope: !4438)
!4441 = !DILocation(line: 2976, column: 36, scope: !4438)
!4442 = !DILocation(line: 2976, column: 19, scope: !4438)
!4443 = !DILocation(line: 2976, column: 5, scope: !4438)
!4444 = !DILocation(line: 2977, column: 13, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4446, file: !47, line: 2977, column: 13)
!4446 = distinct !DILexicalBlock(scope: !4439, file: !47, line: 2976, column: 53)
!4447 = !DILocation(line: 2977, column: 13, scope: !4446)
!4448 = !DILocation(line: 2978, column: 57, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4445, file: !47, line: 2977, column: 31)
!4450 = !DILocation(line: 2979, column: 74, scope: !4449)
!4451 = !DILocation(line: 2979, column: 51, scope: !4449)
!4452 = !DILocation(line: 2979, column: 57, scope: !4449)
!4453 = !DILocation(line: 2979, column: 66, scope: !4449)
!4454 = !DILocation(line: 2980, column: 51, scope: !4449)
!4455 = !DILocation(line: 2978, column: 19, scope: !4449)
!4456 = !DILocation(line: 2978, column: 17, scope: !4449)
!4457 = !DILocation(line: 2981, column: 17, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4449, file: !47, line: 2981, column: 17)
!4459 = !DILocation(line: 2981, column: 21, scope: !4458)
!4460 = !DILocation(line: 2981, column: 17, scope: !4449)
!4461 = !DILocation(line: 2981, column: 26, scope: !4462)
!4462 = !DILexicalBlockFile(scope: !4458, file: !47, discriminator: 1)
!4463 = !DILocation(line: 2983, column: 39, scope: !4458)
!4464 = !DILocation(line: 2983, column: 34, scope: !4458)
!4465 = !DILocation(line: 2983, column: 17, scope: !4458)
!4466 = !DILocation(line: 2983, column: 37, scope: !4458)
!4467 = !DILocation(line: 2984, column: 17, scope: !4449)
!4468 = !DILocation(line: 2985, column: 9, scope: !4449)
!4469 = !DILocation(line: 2986, column: 30, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4445, file: !47, line: 2985, column: 16)
!4471 = !DILocation(line: 2986, column: 13, scope: !4470)
!4472 = !DILocation(line: 2986, column: 33, scope: !4470)
!4473 = !DILocation(line: 2988, column: 31, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4446, file: !47, line: 2988, column: 13)
!4475 = !DILocation(line: 2988, column: 14, scope: !4474)
!4476 = !DILocation(line: 2988, column: 13, scope: !4446)
!4477 = !DILocation(line: 2989, column: 36, scope: !4474)
!4478 = !DILocation(line: 2989, column: 13, scope: !4474)
!4479 = !DILocation(line: 2989, column: 19, scope: !4474)
!4480 = !DILocation(line: 2989, column: 28, scope: !4474)
!4481 = !DILocation(line: 2989, column: 40, scope: !4474)
!4482 = !DILocation(line: 2989, column: 48, scope: !4474)
!4483 = !DILocation(line: 2990, column: 5, scope: !4446)
!4484 = !DILocation(line: 2976, column: 49, scope: !4485)
!4485 = !DILexicalBlockFile(scope: !4439, file: !47, discriminator: 2)
!4486 = !DILocation(line: 2976, column: 5, scope: !4485)
!4487 = distinct !{!4487, !4488}
!4488 = !DILocation(line: 2976, column: 5, scope: !4319)
!4489 = !DILocation(line: 2992, column: 9, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4319, file: !47, line: 2992, column: 9)
!4491 = !DILocation(line: 2992, column: 24, scope: !4490)
!4492 = !DILocation(line: 2992, column: 27, scope: !4493)
!4493 = !DILexicalBlockFile(scope: !4490, file: !47, discriminator: 1)
!4494 = !DILocation(line: 2992, column: 9, scope: !4493)
!4495 = !DILocation(line: 2993, column: 13, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4497, file: !47, line: 2993, column: 13)
!4497 = distinct !DILexicalBlock(scope: !4490, file: !47, line: 2992, column: 44)
!4498 = !DILocation(line: 2993, column: 28, scope: !4496)
!4499 = !DILocation(line: 2993, column: 31, scope: !4500)
!4500 = !DILexicalBlockFile(scope: !4496, file: !47, discriminator: 1)
!4501 = !DILocation(line: 2993, column: 47, scope: !4500)
!4502 = !DILocation(line: 2994, column: 13, scope: !4496)
!4503 = !DILocation(line: 2994, column: 19, scope: !4496)
!4504 = !DILocation(line: 2994, column: 27, scope: !4496)
!4505 = !DILocation(line: 2994, column: 33, scope: !4496)
!4506 = !DILocation(line: 2993, column: 13, scope: !4507)
!4507 = !DILexicalBlockFile(scope: !4497, file: !47, discriminator: 2)
!4508 = !DILocation(line: 2995, column: 24, scope: !4496)
!4509 = !DILocation(line: 2995, column: 13, scope: !4496)
!4510 = !DILocation(line: 2996, column: 18, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4496, file: !47, line: 2996, column: 18)
!4512 = !DILocation(line: 2996, column: 34, scope: !4511)
!4513 = !DILocation(line: 2996, column: 38, scope: !4514)
!4514 = !DILexicalBlockFile(scope: !4511, file: !47, discriminator: 1)
!4515 = !DILocation(line: 2996, column: 18, scope: !4514)
!4516 = !DILocation(line: 2997, column: 24, scope: !4511)
!4517 = !DILocation(line: 2997, column: 13, scope: !4511)
!4518 = !DILocation(line: 2999, column: 24, scope: !4511)
!4519 = !DILocation(line: 3000, column: 13, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4497, file: !47, line: 3000, column: 13)
!4521 = !DILocation(line: 3000, column: 28, scope: !4520)
!4522 = !DILocation(line: 3000, column: 31, scope: !4523)
!4523 = !DILexicalBlockFile(scope: !4520, file: !47, discriminator: 1)
!4524 = !DILocation(line: 3000, column: 13, scope: !4523)
!4525 = !DILocation(line: 3001, column: 41, scope: !4520)
!4526 = !DILocation(line: 3001, column: 47, scope: !4520)
!4527 = !DILocation(line: 3001, column: 13, scope: !4520)
!4528 = !DILocation(line: 3002, column: 28, scope: !4497)
!4529 = !DILocation(line: 3002, column: 15, scope: !4497)
!4530 = !DILocation(line: 3002, column: 13, scope: !4497)
!4531 = !DILocation(line: 3003, column: 13, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4497, file: !47, line: 3003, column: 13)
!4533 = !DILocation(line: 3003, column: 28, scope: !4532)
!4534 = !DILocation(line: 3003, column: 31, scope: !4535)
!4535 = !DILexicalBlockFile(scope: !4532, file: !47, discriminator: 1)
!4536 = !DILocation(line: 3003, column: 13, scope: !4535)
!4537 = !DILocation(line: 3004, column: 41, scope: !4532)
!4538 = !DILocation(line: 3004, column: 13, scope: !4532)
!4539 = !DILocation(line: 3005, column: 13, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4497, file: !47, line: 3005, column: 13)
!4541 = !DILocation(line: 3005, column: 17, scope: !4540)
!4542 = !DILocation(line: 3005, column: 13, scope: !4497)
!4543 = !DILocation(line: 3005, column: 22, scope: !4544)
!4544 = !DILexicalBlockFile(scope: !4540, file: !47, discriminator: 1)
!4545 = !DILocation(line: 3006, column: 5, scope: !4497)
!4546 = !DILocation(line: 3008, column: 9, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4319, file: !47, line: 3008, column: 9)
!4548 = !DILocation(line: 3008, column: 9, scope: !4319)
!4549 = !DILocation(line: 3009, column: 29, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4547, file: !47, line: 3008, column: 27)
!4551 = !DILocation(line: 3009, column: 15, scope: !4550)
!4552 = !DILocation(line: 3009, column: 13, scope: !4550)
!4553 = !DILocation(line: 3010, column: 13, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4550, file: !47, line: 3010, column: 13)
!4555 = !DILocation(line: 3010, column: 17, scope: !4554)
!4556 = !DILocation(line: 3010, column: 13, scope: !4550)
!4557 = !DILocation(line: 3010, column: 22, scope: !4558)
!4558 = !DILexicalBlockFile(scope: !4554, file: !47, discriminator: 1)
!4559 = !DILocation(line: 3011, column: 5, scope: !4550)
!4560 = !DILocation(line: 3013, column: 9, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4319, file: !47, line: 3013, column: 9)
!4562 = !DILocation(line: 3013, column: 9, scope: !4319)
!4563 = !DILocation(line: 3014, column: 28, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4561, file: !47, line: 3013, column: 26)
!4565 = !DILocation(line: 3014, column: 15, scope: !4564)
!4566 = !DILocation(line: 3014, column: 13, scope: !4564)
!4567 = !DILocation(line: 3015, column: 13, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4564, file: !47, line: 3015, column: 13)
!4569 = !DILocation(line: 3015, column: 17, scope: !4568)
!4570 = !DILocation(line: 3015, column: 13, scope: !4564)
!4571 = !DILocation(line: 3015, column: 22, scope: !4572)
!4572 = !DILexicalBlockFile(scope: !4568, file: !47, discriminator: 1)
!4573 = !DILocation(line: 3016, column: 5, scope: !4564)
!4574 = !DILocation(line: 3017, column: 9, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4319, file: !47, line: 3017, column: 9)
!4576 = !DILocation(line: 3017, column: 9, scope: !4319)
!4577 = !DILocation(line: 3018, column: 29, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4575, file: !47, line: 3017, column: 27)
!4579 = !DILocation(line: 3018, column: 15, scope: !4578)
!4580 = !DILocation(line: 3018, column: 13, scope: !4578)
!4581 = !DILocation(line: 3019, column: 13, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4578, file: !47, line: 3019, column: 13)
!4583 = !DILocation(line: 3019, column: 17, scope: !4582)
!4584 = !DILocation(line: 3019, column: 13, scope: !4578)
!4585 = !DILocation(line: 3019, column: 22, scope: !4586)
!4586 = !DILexicalBlockFile(scope: !4582, file: !47, discriminator: 1)
!4587 = !DILocation(line: 3020, column: 5, scope: !4578)
!4588 = !DILocation(line: 3021, column: 9, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4319, file: !47, line: 3021, column: 9)
!4590 = !DILocation(line: 3021, column: 9, scope: !4319)
!4591 = !DILocation(line: 3022, column: 27, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4589, file: !47, line: 3021, column: 25)
!4593 = !DILocation(line: 3022, column: 15, scope: !4592)
!4594 = !DILocation(line: 3022, column: 13, scope: !4592)
!4595 = !DILocation(line: 3023, column: 13, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4592, file: !47, line: 3023, column: 13)
!4597 = !DILocation(line: 3023, column: 17, scope: !4596)
!4598 = !DILocation(line: 3023, column: 13, scope: !4592)
!4599 = !DILocation(line: 3023, column: 22, scope: !4600)
!4600 = !DILexicalBlockFile(scope: !4596, file: !47, discriminator: 1)
!4601 = !DILocation(line: 3024, column: 5, scope: !4592)
!4602 = !DILocation(line: 3021, column: 9, scope: !4603)
!4603 = !DILexicalBlockFile(scope: !4589, file: !47, discriminator: 1)
!4604 = !DILocation(line: 3027, column: 15, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4319, file: !47, line: 3027, column: 9)
!4606 = !DILocation(line: 3027, column: 9, scope: !4605)
!4607 = !DILocation(line: 3027, column: 9, scope: !4319)
!4608 = !DILocation(line: 3028, column: 9, scope: !4605)
!4609 = !DILocation(line: 3029, column: 5, scope: !4319)
!4610 = !DILocation(line: 3030, column: 5, scope: !4319)
!4611 = !DILocation(line: 3031, column: 5, scope: !4319)
!4612 = !DILocation(line: 3033, column: 12, scope: !4319)
!4613 = !DILocation(line: 3033, column: 5, scope: !4319)
!4614 = distinct !DISubprogram(name: "show_error", scope: !47, file: !47, line: 2807, type: !3674, isLocal: true, isDefinition: true, scopeLine: 2808, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4615 = !DILocalVariable(name: "w", arg: 1, scope: !4614, file: !47, line: 2807, type: !2418)
!4616 = !DILocation(line: 2807, column: 39, scope: !4614)
!4617 = !DILocalVariable(name: "err", arg: 2, scope: !4614, file: !47, line: 2807, type: !1041)
!4618 = !DILocation(line: 2807, column: 46, scope: !4614)
!4619 = !DILocalVariable(name: "errbuf", scope: !4614, file: !47, line: 2809, type: !4620)
!4620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 1024, align: 8, elements: !4621)
!4621 = !{!4622}
!4622 = !DISubrange(count: 128)
!4623 = !DILocation(line: 2809, column: 10, scope: !4614)
!4624 = !DILocalVariable(name: "errbuf_ptr", scope: !4614, file: !47, line: 2810, type: !1027)
!4625 = !DILocation(line: 2810, column: 17, scope: !4614)
!4626 = !DILocation(line: 2810, column: 30, scope: !4614)
!4627 = !DILocation(line: 2812, column: 21, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4614, file: !47, line: 2812, column: 9)
!4629 = !DILocation(line: 2812, column: 26, scope: !4628)
!4630 = !DILocation(line: 2812, column: 9, scope: !4628)
!4631 = !DILocation(line: 2812, column: 50, scope: !4628)
!4632 = !DILocation(line: 2812, column: 9, scope: !4614)
!4633 = !DILocation(line: 2813, column: 34, scope: !4628)
!4634 = !DILocation(line: 2813, column: 32, scope: !4628)
!4635 = !DILocation(line: 2813, column: 22, scope: !4628)
!4636 = !DILocation(line: 2813, column: 20, scope: !4628)
!4637 = !DILocation(line: 2813, column: 9, scope: !4628)
!4638 = !DILocation(line: 2815, column: 33, scope: !4614)
!4639 = !DILocation(line: 2815, column: 5, scope: !4614)
!4640 = !DILocation(line: 2816, column: 26, scope: !4614)
!4641 = !DILocation(line: 2816, column: 37, scope: !4614)
!4642 = !DILocation(line: 2816, column: 5, scope: !4614)
!4643 = !DILocation(line: 2817, column: 25, scope: !4614)
!4644 = !DILocation(line: 2817, column: 38, scope: !4614)
!4645 = !DILocation(line: 2817, column: 5, scope: !4614)
!4646 = !DILocation(line: 2818, column: 33, scope: !4614)
!4647 = !DILocation(line: 2818, column: 5, scope: !4614)
!4648 = !DILocation(line: 2819, column: 1, scope: !4614)
!4649 = distinct !DISubprogram(name: "writer_print_section_footer", scope: !47, file: !47, line: 649, type: !2476, isLocal: true, isDefinition: true, scopeLine: 650, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4650 = !DILocalVariable(name: "wctx", arg: 1, scope: !4649, file: !47, line: 649, type: !2418)
!4651 = !DILocation(line: 649, column: 63, scope: !4649)
!4652 = !DILocalVariable(name: "section_id", scope: !4649, file: !47, line: 651, type: !1041)
!4653 = !DILocation(line: 651, column: 9, scope: !4649)
!4654 = !DILocation(line: 651, column: 36, scope: !4649)
!4655 = !DILocation(line: 651, column: 42, scope: !4649)
!4656 = !DILocation(line: 651, column: 22, scope: !4649)
!4657 = !DILocation(line: 651, column: 28, scope: !4649)
!4658 = !DILocation(line: 651, column: 50, scope: !4649)
!4659 = !DILocalVariable(name: "parent_section_id", scope: !4649, file: !47, line: 652, type: !1041)
!4660 = !DILocation(line: 652, column: 9, scope: !4649)
!4661 = !DILocation(line: 652, column: 29, scope: !4649)
!4662 = !DILocation(line: 652, column: 35, scope: !4649)
!4663 = !DILocation(line: 653, column: 23, scope: !4649)
!4664 = !DILocation(line: 653, column: 29, scope: !4649)
!4665 = !DILocation(line: 653, column: 34, scope: !4649)
!4666 = !DILocation(line: 653, column: 9, scope: !4649)
!4667 = !DILocation(line: 653, column: 15, scope: !4649)
!4668 = !DILocation(line: 653, column: 39, scope: !4649)
!4669 = !DILocation(line: 652, column: 29, scope: !4670)
!4670 = !DILexicalBlockFile(scope: !4649, file: !47, discriminator: 1)
!4671 = !DILocation(line: 652, column: 29, scope: !4672)
!4672 = !DILexicalBlockFile(scope: !4649, file: !47, discriminator: 2)
!4673 = !DILocation(line: 652, column: 29, scope: !4674)
!4674 = !DILexicalBlockFile(scope: !4649, file: !47, discriminator: 3)
!4675 = !DILocation(line: 652, column: 9, scope: !4674)
!4676 = !DILocation(line: 655, column: 9, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4649, file: !47, line: 655, column: 9)
!4678 = !DILocation(line: 655, column: 27, scope: !4677)
!4679 = !DILocation(line: 655, column: 9, scope: !4649)
!4680 = !DILocation(line: 656, column: 23, scope: !4677)
!4681 = !DILocation(line: 656, column: 29, scope: !4677)
!4682 = !DILocation(line: 656, column: 34, scope: !4677)
!4683 = !DILocation(line: 656, column: 9, scope: !4677)
!4684 = !DILocation(line: 656, column: 15, scope: !4677)
!4685 = !DILocation(line: 656, column: 37, scope: !4677)
!4686 = !DILocation(line: 657, column: 9, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4649, file: !47, line: 657, column: 9)
!4688 = !DILocation(line: 657, column: 27, scope: !4687)
!4689 = !DILocation(line: 657, column: 9, scope: !4649)
!4690 = !DILocation(line: 658, column: 13, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4692, file: !47, line: 658, column: 13)
!4692 = distinct !DILexicalBlock(scope: !4687, file: !47, line: 657, column: 61)
!4693 = !DILocation(line: 658, column: 24, scope: !4691)
!4694 = !DILocation(line: 658, column: 13, scope: !4692)
!4695 = !DILocation(line: 658, column: 46, scope: !4696)
!4696 = !DILexicalBlockFile(scope: !4691, file: !47, discriminator: 1)
!4697 = !DILocation(line: 658, column: 52, scope: !4696)
!4698 = !DILocation(line: 658, column: 69, scope: !4696)
!4699 = !DILocation(line: 659, column: 14, scope: !4691)
!4700 = !DILocation(line: 659, column: 20, scope: !4691)
!4701 = !DILocation(line: 659, column: 36, scope: !4691)
!4702 = !DILocation(line: 660, column: 5, scope: !4692)
!4703 = !DILocation(line: 661, column: 9, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4649, file: !47, line: 661, column: 9)
!4705 = !DILocation(line: 661, column: 15, scope: !4704)
!4706 = !DILocation(line: 661, column: 23, scope: !4704)
!4707 = !DILocation(line: 661, column: 9, scope: !4649)
!4708 = !DILocation(line: 662, column: 9, scope: !4704)
!4709 = !DILocation(line: 662, column: 15, scope: !4704)
!4710 = !DILocation(line: 662, column: 23, scope: !4704)
!4711 = !DILocation(line: 662, column: 44, scope: !4704)
!4712 = !DILocation(line: 663, column: 5, scope: !4649)
!4713 = !DILocation(line: 663, column: 11, scope: !4649)
!4714 = !DILocation(line: 663, column: 16, scope: !4649)
!4715 = !DILocation(line: 664, column: 1, scope: !4649)
!4716 = distinct !DISubprogram(name: "writer_close", scope: !47, file: !47, line: 511, type: !4717, isLocal: true, isDefinition: true, scopeLine: 512, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4717 = !DISubroutineType(types: !4718)
!4718 = !{null, !3434}
!4719 = !DILocalVariable(name: "wctx", arg: 1, scope: !4716, file: !47, line: 511, type: !3434)
!4720 = !DILocation(line: 511, column: 42, scope: !4716)
!4721 = !DILocalVariable(name: "i", scope: !4716, file: !47, line: 513, type: !1041)
!4722 = !DILocation(line: 513, column: 9, scope: !4716)
!4723 = !DILocation(line: 515, column: 11, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4716, file: !47, line: 515, column: 9)
!4725 = !DILocation(line: 515, column: 10, scope: !4724)
!4726 = !DILocation(line: 515, column: 9, scope: !4716)
!4727 = !DILocation(line: 516, column: 9, scope: !4724)
!4728 = !DILocation(line: 518, column: 11, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4716, file: !47, line: 518, column: 9)
!4730 = !DILocation(line: 518, column: 10, scope: !4729)
!4731 = !DILocation(line: 518, column: 18, scope: !4729)
!4732 = !DILocation(line: 518, column: 26, scope: !4729)
!4733 = !DILocation(line: 518, column: 9, scope: !4729)
!4734 = !DILocation(line: 518, column: 9, scope: !4716)
!4735 = !DILocation(line: 519, column: 11, scope: !4729)
!4736 = !DILocation(line: 519, column: 10, scope: !4729)
!4737 = !DILocation(line: 519, column: 18, scope: !4729)
!4738 = !DILocation(line: 519, column: 26, scope: !4729)
!4739 = !DILocation(line: 519, column: 34, scope: !4729)
!4740 = !DILocation(line: 519, column: 33, scope: !4729)
!4741 = !DILocation(line: 519, column: 9, scope: !4729)
!4742 = !DILocation(line: 520, column: 12, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4716, file: !47, line: 520, column: 5)
!4744 = !DILocation(line: 520, column: 10, scope: !4743)
!4745 = !DILocation(line: 520, column: 17, scope: !4746)
!4746 = !DILexicalBlockFile(scope: !4747, file: !47, discriminator: 1)
!4747 = distinct !DILexicalBlock(scope: !4743, file: !47, line: 520, column: 5)
!4748 = !DILocation(line: 520, column: 19, scope: !4746)
!4749 = !DILocation(line: 520, column: 5, scope: !4746)
!4750 = !DILocation(line: 521, column: 51, scope: !4747)
!4751 = !DILocation(line: 521, column: 29, scope: !4747)
!4752 = !DILocation(line: 521, column: 31, scope: !4747)
!4753 = !DILocation(line: 521, column: 30, scope: !4747)
!4754 = !DILocation(line: 521, column: 38, scope: !4747)
!4755 = !DILocation(line: 521, column: 9, scope: !4747)
!4756 = !DILocation(line: 520, column: 26, scope: !4757)
!4757 = !DILexicalBlockFile(scope: !4747, file: !47, discriminator: 2)
!4758 = !DILocation(line: 520, column: 5, scope: !4757)
!4759 = distinct !{!4759, !4760}
!4760 = !DILocation(line: 520, column: 5, scope: !4716)
!4761 = !DILocation(line: 522, column: 11, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4716, file: !47, line: 522, column: 9)
!4763 = !DILocation(line: 522, column: 10, scope: !4762)
!4764 = !DILocation(line: 522, column: 18, scope: !4762)
!4765 = !DILocation(line: 522, column: 26, scope: !4762)
!4766 = !DILocation(line: 522, column: 9, scope: !4762)
!4767 = !DILocation(line: 522, column: 9, scope: !4716)
!4768 = !DILocation(line: 523, column: 23, scope: !4762)
!4769 = !DILocation(line: 523, column: 22, scope: !4762)
!4770 = !DILocation(line: 523, column: 30, scope: !4762)
!4771 = !DILocation(line: 523, column: 9, scope: !4762)
!4772 = !DILocation(line: 524, column: 18, scope: !4716)
!4773 = !DILocation(line: 524, column: 17, scope: !4716)
!4774 = !DILocation(line: 524, column: 25, scope: !4716)
!4775 = !DILocation(line: 524, column: 14, scope: !4716)
!4776 = !DILocation(line: 524, column: 5, scope: !4716)
!4777 = !DILocation(line: 525, column: 18, scope: !4716)
!4778 = !DILocation(line: 525, column: 17, scope: !4716)
!4779 = !DILocation(line: 525, column: 5, scope: !4716)
!4780 = !DILocation(line: 526, column: 14, scope: !4716)
!4781 = !DILocation(line: 526, column: 5, scope: !4716)
!4782 = !DILocation(line: 527, column: 1, scope: !4716)
!4783 = !DILocation(line: 527, column: 1, scope: !4784)
!4784 = !DILexicalBlockFile(scope: !4716, file: !47, discriminator: 1)
!4785 = distinct !DISubprogram(name: "opt_format", scope: !47, file: !47, line: 3142, type: !1209, isLocal: true, isDefinition: true, scopeLine: 3143, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4786 = !DILocalVariable(name: "optctx", arg: 1, scope: !4785, file: !47, line: 3142, type: !1013)
!4787 = !DILocation(line: 3142, column: 29, scope: !4785)
!4788 = !DILocalVariable(name: "opt", arg: 2, scope: !4785, file: !47, line: 3142, type: !1027)
!4789 = !DILocation(line: 3142, column: 49, scope: !4785)
!4790 = !DILocalVariable(name: "arg", arg: 3, scope: !4785, file: !47, line: 3142, type: !1027)
!4791 = !DILocation(line: 3142, column: 66, scope: !4785)
!4792 = !DILocation(line: 3144, column: 36, scope: !4785)
!4793 = !DILocation(line: 3144, column: 15, scope: !4785)
!4794 = !DILocation(line: 3144, column: 13, scope: !4785)
!4795 = !DILocation(line: 3145, column: 10, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4785, file: !47, line: 3145, column: 9)
!4797 = !DILocation(line: 3145, column: 9, scope: !4785)
!4798 = !DILocation(line: 3146, column: 55, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4796, file: !47, line: 3145, column: 19)
!4800 = !DILocation(line: 3146, column: 9, scope: !4799)
!4801 = !DILocation(line: 3147, column: 9, scope: !4799)
!4802 = !DILocation(line: 3149, column: 5, scope: !4785)
!4803 = !DILocation(line: 3150, column: 1, scope: !4785)
!4804 = distinct !DISubprogram(name: "opt_pretty", scope: !47, file: !47, line: 3422, type: !1209, isLocal: true, isDefinition: true, scopeLine: 3423, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4805 = !DILocalVariable(name: "optctx", arg: 1, scope: !4804, file: !47, line: 3422, type: !1013)
!4806 = !DILocation(line: 3422, column: 29, scope: !4804)
!4807 = !DILocalVariable(name: "opt", arg: 2, scope: !4804, file: !47, line: 3422, type: !1027)
!4808 = !DILocation(line: 3422, column: 49, scope: !4804)
!4809 = !DILocalVariable(name: "arg", arg: 3, scope: !4804, file: !47, line: 3422, type: !1027)
!4810 = !DILocation(line: 3422, column: 66, scope: !4804)
!4811 = !DILocation(line: 3424, column: 21, scope: !4804)
!4812 = !DILocation(line: 3425, column: 22, scope: !4804)
!4813 = !DILocation(line: 3426, column: 34, scope: !4804)
!4814 = !DILocation(line: 3427, column: 34, scope: !4804)
!4815 = !DILocation(line: 3428, column: 5, scope: !4804)
!4816 = distinct !DISubprogram(name: "opt_sections", scope: !47, file: !47, line: 3448, type: !1209, isLocal: true, isDefinition: true, scopeLine: 3449, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4817 = !DILocalVariable(name: "optctx", arg: 1, scope: !4816, file: !47, line: 3448, type: !1013)
!4818 = !DILocation(line: 3448, column: 31, scope: !4816)
!4819 = !DILocalVariable(name: "opt", arg: 2, scope: !4816, file: !47, line: 3448, type: !1027)
!4820 = !DILocation(line: 3448, column: 51, scope: !4816)
!4821 = !DILocalVariable(name: "arg", arg: 3, scope: !4816, file: !47, line: 3448, type: !1027)
!4822 = !DILocation(line: 3448, column: 68, scope: !4816)
!4823 = !DILocation(line: 3450, column: 5, scope: !4816)
!4824 = !DILocation(line: 3456, column: 5, scope: !4816)
!4825 = !DILocation(line: 3457, column: 5, scope: !4816)
!4826 = distinct !DISubprogram(name: "opt_show_error", scope: !47, file: !47, line: 3475, type: !4827, isLocal: true, isDefinition: true, scopeLine: 3475, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4827 = !DISubroutineType(types: !4828)
!4828 = !{!1041, !1027, !1027}
!4829 = !DILocalVariable(name: "opt", arg: 1, scope: !4826, file: !47, line: 3475, type: !1027)
!4830 = !DILocation(line: 3475, column: 39, scope: !4826)
!4831 = !DILocalVariable(name: "arg", arg: 2, scope: !4826, file: !47, line: 3475, type: !1027)
!4832 = !DILocation(line: 3475, column: 56, scope: !4826)
!4833 = !DILocation(line: 3475, column: 63, scope: !4826)
!4834 = !DILocation(line: 3475, column: 4, scope: !4826)
!4835 = distinct !DISubprogram(name: "opt_show_format", scope: !47, file: !47, line: 3476, type: !4827, isLocal: true, isDefinition: true, scopeLine: 3476, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4836 = !DILocalVariable(name: "opt", arg: 1, scope: !4835, file: !47, line: 3476, type: !1027)
!4837 = !DILocation(line: 3476, column: 40, scope: !4835)
!4838 = !DILocalVariable(name: "arg", arg: 2, scope: !4835, file: !47, line: 3476, type: !1027)
!4839 = !DILocation(line: 3476, column: 57, scope: !4835)
!4840 = !DILocation(line: 3476, column: 64, scope: !4835)
!4841 = !DILocation(line: 3476, column: 4, scope: !4835)
!4842 = distinct !DISubprogram(name: "opt_show_frames", scope: !47, file: !47, line: 3477, type: !4827, isLocal: true, isDefinition: true, scopeLine: 3477, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4843 = !DILocalVariable(name: "opt", arg: 1, scope: !4842, file: !47, line: 3477, type: !1027)
!4844 = !DILocation(line: 3477, column: 40, scope: !4842)
!4845 = !DILocalVariable(name: "arg", arg: 2, scope: !4842, file: !47, line: 3477, type: !1027)
!4846 = !DILocation(line: 3477, column: 57, scope: !4842)
!4847 = !DILocation(line: 3477, column: 64, scope: !4842)
!4848 = !DILocation(line: 3477, column: 4, scope: !4842)
!4849 = distinct !DISubprogram(name: "opt_show_format_entry", scope: !47, file: !47, line: 3236, type: !1209, isLocal: true, isDefinition: true, scopeLine: 3237, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4850 = !DILocalVariable(name: "optctx", arg: 1, scope: !4849, file: !47, line: 3236, type: !1013)
!4851 = !DILocation(line: 3236, column: 40, scope: !4849)
!4852 = !DILocalVariable(name: "opt", arg: 2, scope: !4849, file: !47, line: 3236, type: !1027)
!4853 = !DILocation(line: 3236, column: 60, scope: !4849)
!4854 = !DILocalVariable(name: "arg", arg: 3, scope: !4849, file: !47, line: 3236, type: !1027)
!4855 = !DILocation(line: 3236, column: 77, scope: !4849)
!4856 = !DILocalVariable(name: "buf", scope: !4849, file: !47, line: 3238, type: !1014)
!4857 = !DILocation(line: 3238, column: 11, scope: !4849)
!4858 = !DILocation(line: 3238, column: 42, scope: !4849)
!4859 = !DILocation(line: 3238, column: 17, scope: !4849)
!4860 = !DILocalVariable(name: "ret", scope: !4849, file: !47, line: 3239, type: !1041)
!4861 = !DILocation(line: 3239, column: 9, scope: !4849)
!4862 = !DILocation(line: 3241, column: 10, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4849, file: !47, line: 3241, column: 9)
!4864 = !DILocation(line: 3241, column: 9, scope: !4849)
!4865 = !DILocation(line: 3242, column: 9, scope: !4863)
!4866 = !DILocation(line: 3246, column: 12, scope: !4849)
!4867 = !DILocation(line: 3246, column: 17, scope: !4849)
!4868 = !DILocation(line: 3244, column: 5, scope: !4849)
!4869 = !DILocation(line: 3247, column: 28, scope: !4849)
!4870 = !DILocation(line: 3247, column: 36, scope: !4849)
!4871 = !DILocation(line: 3247, column: 41, scope: !4849)
!4872 = !DILocation(line: 3247, column: 11, scope: !4849)
!4873 = !DILocation(line: 3247, column: 9, scope: !4849)
!4874 = !DILocation(line: 3248, column: 13, scope: !4849)
!4875 = !DILocation(line: 3248, column: 5, scope: !4849)
!4876 = !DILocation(line: 3249, column: 12, scope: !4849)
!4877 = !DILocation(line: 3249, column: 5, scope: !4849)
!4878 = !DILocation(line: 3250, column: 1, scope: !4849)
!4879 = distinct !DISubprogram(name: "opt_show_entries", scope: !47, file: !47, line: 3186, type: !1209, isLocal: true, isDefinition: true, scopeLine: 3187, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4880 = !DILocalVariable(name: "optctx", arg: 1, scope: !4879, file: !47, line: 3186, type: !1013)
!4881 = !DILocation(line: 3186, column: 35, scope: !4879)
!4882 = !DILocalVariable(name: "opt", arg: 2, scope: !4879, file: !47, line: 3186, type: !1027)
!4883 = !DILocation(line: 3186, column: 55, scope: !4879)
!4884 = !DILocalVariable(name: "arg", arg: 3, scope: !4879, file: !47, line: 3186, type: !1027)
!4885 = !DILocation(line: 3186, column: 72, scope: !4879)
!4886 = !DILocalVariable(name: "p", scope: !4879, file: !47, line: 3188, type: !1027)
!4887 = !DILocation(line: 3188, column: 17, scope: !4879)
!4888 = !DILocation(line: 3188, column: 21, scope: !4879)
!4889 = !DILocalVariable(name: "ret", scope: !4879, file: !47, line: 3189, type: !1041)
!4890 = !DILocation(line: 3189, column: 9, scope: !4879)
!4891 = !DILocation(line: 3191, column: 5, scope: !4879)
!4892 = !DILocation(line: 3191, column: 13, scope: !4893)
!4893 = !DILexicalBlockFile(scope: !4879, file: !47, discriminator: 1)
!4894 = !DILocation(line: 3191, column: 12, scope: !4893)
!4895 = !DILocation(line: 3191, column: 5, scope: !4893)
!4896 = !DILocalVariable(name: "entries", scope: !4897, file: !47, line: 3192, type: !1423)
!4897 = distinct !DILexicalBlock(scope: !4879, file: !47, line: 3191, column: 16)
!4898 = !DILocation(line: 3192, column: 23, scope: !4897)
!4899 = !DILocalVariable(name: "section_name", scope: !4897, file: !47, line: 3193, type: !1014)
!4900 = !DILocation(line: 3193, column: 15, scope: !4897)
!4901 = !DILocation(line: 3193, column: 30, scope: !4897)
!4902 = !DILocalVariable(name: "show_all_entries", scope: !4897, file: !47, line: 3194, type: !1041)
!4903 = !DILocation(line: 3194, column: 13, scope: !4897)
!4904 = !DILocation(line: 3196, column: 14, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4897, file: !47, line: 3196, column: 13)
!4906 = !DILocation(line: 3196, column: 13, scope: !4897)
!4907 = !DILocation(line: 3198, column: 62, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4905, file: !47, line: 3196, column: 28)
!4909 = !DILocation(line: 3197, column: 13, scope: !4908)
!4910 = !DILocation(line: 3199, column: 13, scope: !4908)
!4911 = !DILocation(line: 3202, column: 14, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4897, file: !47, line: 3202, column: 13)
!4913 = !DILocation(line: 3202, column: 13, scope: !4912)
!4914 = !DILocation(line: 3202, column: 16, scope: !4912)
!4915 = !DILocation(line: 3202, column: 13, scope: !4897)
!4916 = !DILocation(line: 3203, column: 14, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4912, file: !47, line: 3202, column: 24)
!4918 = !DILocation(line: 3204, column: 13, scope: !4917)
!4919 = !DILocation(line: 3204, column: 21, scope: !4920)
!4920 = !DILexicalBlockFile(scope: !4917, file: !47, discriminator: 1)
!4921 = !DILocation(line: 3204, column: 20, scope: !4920)
!4922 = !DILocation(line: 3204, column: 23, scope: !4920)
!4923 = !DILocation(line: 3204, column: 27, scope: !4924)
!4924 = !DILexicalBlockFile(scope: !4917, file: !47, discriminator: 2)
!4925 = !DILocation(line: 3204, column: 26, scope: !4924)
!4926 = !DILocation(line: 3204, column: 29, scope: !4924)
!4927 = !DILocation(line: 3204, column: 13, scope: !4928)
!4928 = !DILexicalBlockFile(scope: !4917, file: !47, discriminator: 3)
!4929 = !DILocalVariable(name: "entry", scope: !4930, file: !47, line: 3205, type: !1014)
!4930 = distinct !DILexicalBlock(scope: !4917, file: !47, line: 3204, column: 37)
!4931 = !DILocation(line: 3205, column: 23, scope: !4930)
!4932 = !DILocation(line: 3205, column: 31, scope: !4930)
!4933 = !DILocation(line: 3206, column: 22, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4930, file: !47, line: 3206, column: 21)
!4935 = !DILocation(line: 3206, column: 21, scope: !4930)
!4936 = !DILocation(line: 3207, column: 21, scope: !4934)
!4937 = !DILocation(line: 3210, column: 24, scope: !4930)
!4938 = !DILocation(line: 3210, column: 31, scope: !4930)
!4939 = !DILocation(line: 3208, column: 17, scope: !4930)
!4940 = !DILocation(line: 3211, column: 39, scope: !4930)
!4941 = !DILocation(line: 3211, column: 17, scope: !4930)
!4942 = !DILocation(line: 3212, column: 22, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4930, file: !47, line: 3212, column: 21)
!4944 = !DILocation(line: 3212, column: 21, scope: !4943)
!4945 = !DILocation(line: 3212, column: 24, scope: !4943)
!4946 = !DILocation(line: 3212, column: 21, scope: !4930)
!4947 = !DILocation(line: 3213, column: 22, scope: !4943)
!4948 = !DILocation(line: 3213, column: 21, scope: !4943)
!4949 = !DILocation(line: 3204, column: 13, scope: !4950)
!4950 = !DILexicalBlockFile(scope: !4917, file: !47, discriminator: 4)
!4951 = distinct !{!4951, !4918}
!4952 = !DILocation(line: 3215, column: 9, scope: !4917)
!4953 = !DILocation(line: 3216, column: 30, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4912, file: !47, line: 3215, column: 16)
!4955 = !DILocation(line: 3219, column: 29, scope: !4897)
!4956 = !DILocation(line: 3219, column: 43, scope: !4897)
!4957 = !DILocation(line: 3219, column: 61, scope: !4897)
!4958 = !DILocation(line: 3219, column: 15, scope: !4897)
!4959 = !DILocation(line: 3219, column: 13, scope: !4897)
!4960 = !DILocation(line: 3220, column: 13, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4897, file: !47, line: 3220, column: 13)
!4962 = !DILocation(line: 3220, column: 17, scope: !4961)
!4963 = !DILocation(line: 3220, column: 13, scope: !4897)
!4964 = !DILocation(line: 3221, column: 60, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4961, file: !47, line: 3220, column: 23)
!4966 = !DILocation(line: 3221, column: 13, scope: !4965)
!4967 = !DILocation(line: 3222, column: 17, scope: !4965)
!4968 = !DILocation(line: 3223, column: 9, scope: !4965)
!4969 = !DILocation(line: 3224, column: 9, scope: !4897)
!4970 = !DILocation(line: 3225, column: 17, scope: !4897)
!4971 = !DILocation(line: 3225, column: 9, scope: !4897)
!4972 = !DILocation(line: 3227, column: 13, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4897, file: !47, line: 3227, column: 13)
!4974 = !DILocation(line: 3227, column: 17, scope: !4973)
!4975 = !DILocation(line: 3227, column: 13, scope: !4897)
!4976 = !DILocation(line: 3228, column: 13, scope: !4973)
!4977 = !DILocation(line: 3229, column: 14, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4897, file: !47, line: 3229, column: 13)
!4979 = !DILocation(line: 3229, column: 13, scope: !4978)
!4980 = !DILocation(line: 3229, column: 13, scope: !4897)
!4981 = !DILocation(line: 3230, column: 14, scope: !4978)
!4982 = !DILocation(line: 3230, column: 13, scope: !4978)
!4983 = !DILocation(line: 3191, column: 5, scope: !4984)
!4984 = !DILexicalBlockFile(scope: !4879, file: !47, discriminator: 2)
!4985 = distinct !{!4985, !4891}
!4986 = !DILocation(line: 3233, column: 12, scope: !4879)
!4987 = !DILocation(line: 3233, column: 5, scope: !4879)
!4988 = !DILocation(line: 3234, column: 1, scope: !4879)
!4989 = distinct !DISubprogram(name: "opt_show_packets", scope: !47, file: !47, line: 3479, type: !4827, isLocal: true, isDefinition: true, scopeLine: 3479, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4990 = !DILocalVariable(name: "opt", arg: 1, scope: !4989, file: !47, line: 3479, type: !1027)
!4991 = !DILocation(line: 3479, column: 41, scope: !4989)
!4992 = !DILocalVariable(name: "arg", arg: 2, scope: !4989, file: !47, line: 3479, type: !1027)
!4993 = !DILocation(line: 3479, column: 58, scope: !4989)
!4994 = !DILocation(line: 3479, column: 65, scope: !4989)
!4995 = !DILocation(line: 3479, column: 4, scope: !4989)
!4996 = distinct !DISubprogram(name: "opt_show_programs", scope: !47, file: !47, line: 3483, type: !4827, isLocal: true, isDefinition: true, scopeLine: 3483, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!4997 = !DILocalVariable(name: "opt", arg: 1, scope: !4996, file: !47, line: 3483, type: !1027)
!4998 = !DILocation(line: 3483, column: 42, scope: !4996)
!4999 = !DILocalVariable(name: "arg", arg: 2, scope: !4996, file: !47, line: 3483, type: !1027)
!5000 = !DILocation(line: 3483, column: 59, scope: !4996)
!5001 = !DILocation(line: 3483, column: 66, scope: !4996)
!5002 = !DILocation(line: 3483, column: 4, scope: !4996)
!5003 = distinct !DISubprogram(name: "opt_show_streams", scope: !47, file: !47, line: 3482, type: !4827, isLocal: true, isDefinition: true, scopeLine: 3482, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5004 = !DILocalVariable(name: "opt", arg: 1, scope: !5003, file: !47, line: 3482, type: !1027)
!5005 = !DILocation(line: 3482, column: 41, scope: !5003)
!5006 = !DILocalVariable(name: "arg", arg: 2, scope: !5003, file: !47, line: 3482, type: !1027)
!5007 = !DILocation(line: 3482, column: 58, scope: !5003)
!5008 = !DILocation(line: 3482, column: 65, scope: !5003)
!5009 = !DILocation(line: 3482, column: 4, scope: !5003)
!5010 = distinct !DISubprogram(name: "opt_show_chapters", scope: !47, file: !47, line: 3474, type: !4827, isLocal: true, isDefinition: true, scopeLine: 3474, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5011 = !DILocalVariable(name: "opt", arg: 1, scope: !5010, file: !47, line: 3474, type: !1027)
!5012 = !DILocation(line: 3474, column: 42, scope: !5010)
!5013 = !DILocalVariable(name: "arg", arg: 2, scope: !5010, file: !47, line: 3474, type: !1027)
!5014 = !DILocation(line: 3474, column: 59, scope: !5010)
!5015 = !DILocation(line: 3474, column: 66, scope: !5010)
!5016 = !DILocation(line: 3474, column: 4, scope: !5010)
!5017 = distinct !DISubprogram(name: "opt_show_program_version", scope: !47, file: !47, line: 3481, type: !4827, isLocal: true, isDefinition: true, scopeLine: 3481, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5018 = !DILocalVariable(name: "opt", arg: 1, scope: !5017, file: !47, line: 3481, type: !1027)
!5019 = !DILocation(line: 3481, column: 49, scope: !5017)
!5020 = !DILocalVariable(name: "arg", arg: 2, scope: !5017, file: !47, line: 3481, type: !1027)
!5021 = !DILocation(line: 3481, column: 66, scope: !5017)
!5022 = !DILocation(line: 3481, column: 73, scope: !5017)
!5023 = !DILocation(line: 3481, column: 4, scope: !5017)
!5024 = distinct !DISubprogram(name: "opt_show_library_versions", scope: !47, file: !47, line: 3478, type: !4827, isLocal: true, isDefinition: true, scopeLine: 3478, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5025 = !DILocalVariable(name: "opt", arg: 1, scope: !5024, file: !47, line: 3478, type: !1027)
!5026 = !DILocation(line: 3478, column: 50, scope: !5024)
!5027 = !DILocalVariable(name: "arg", arg: 2, scope: !5024, file: !47, line: 3478, type: !1027)
!5028 = !DILocation(line: 3478, column: 67, scope: !5024)
!5029 = !DILocation(line: 3478, column: 74, scope: !5024)
!5030 = !DILocation(line: 3478, column: 4, scope: !5024)
!5031 = distinct !DISubprogram(name: "opt_show_versions", scope: !47, file: !47, line: 3460, type: !4827, isLocal: true, isDefinition: true, scopeLine: 3461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5032 = !DILocalVariable(name: "opt", arg: 1, scope: !5031, file: !47, line: 3460, type: !1027)
!5033 = !DILocation(line: 3460, column: 42, scope: !5031)
!5034 = !DILocalVariable(name: "arg", arg: 2, scope: !5031, file: !47, line: 3460, type: !1027)
!5035 = !DILocation(line: 3460, column: 59, scope: !5031)
!5036 = !DILocation(line: 3462, column: 5, scope: !5031)
!5037 = !DILocation(line: 3463, column: 5, scope: !5031)
!5038 = !DILocation(line: 3464, column: 5, scope: !5031)
!5039 = distinct !DISubprogram(name: "opt_show_pixel_formats", scope: !47, file: !47, line: 3480, type: !4827, isLocal: true, isDefinition: true, scopeLine: 3480, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5040 = !DILocalVariable(name: "opt", arg: 1, scope: !5039, file: !47, line: 3480, type: !1027)
!5041 = !DILocation(line: 3480, column: 47, scope: !5039)
!5042 = !DILocalVariable(name: "arg", arg: 2, scope: !5039, file: !47, line: 3480, type: !1027)
!5043 = !DILocation(line: 3480, column: 64, scope: !5039)
!5044 = !DILocation(line: 3480, column: 71, scope: !5039)
!5045 = !DILocation(line: 3480, column: 4, scope: !5039)
!5046 = distinct !DISubprogram(name: "opt_read_intervals", scope: !47, file: !47, line: 3417, type: !1209, isLocal: true, isDefinition: true, scopeLine: 3418, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5047 = !DILocalVariable(name: "optctx", arg: 1, scope: !5046, file: !47, line: 3417, type: !1013)
!5048 = !DILocation(line: 3417, column: 37, scope: !5046)
!5049 = !DILocalVariable(name: "opt", arg: 2, scope: !5046, file: !47, line: 3417, type: !1027)
!5050 = !DILocation(line: 3417, column: 57, scope: !5046)
!5051 = !DILocalVariable(name: "arg", arg: 3, scope: !5046, file: !47, line: 3417, type: !1027)
!5052 = !DILocation(line: 3417, column: 74, scope: !5046)
!5053 = !DILocation(line: 3419, column: 33, scope: !5046)
!5054 = !DILocation(line: 3419, column: 12, scope: !5046)
!5055 = !DILocation(line: 3419, column: 5, scope: !5046)
!5056 = distinct !DISubprogram(name: "opt_input_file_i", scope: !47, file: !47, line: 3265, type: !1209, isLocal: true, isDefinition: true, scopeLine: 3266, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5057 = !DILocalVariable(name: "optctx", arg: 1, scope: !5056, file: !47, line: 3265, type: !1013)
!5058 = !DILocation(line: 3265, column: 35, scope: !5056)
!5059 = !DILocalVariable(name: "opt", arg: 2, scope: !5056, file: !47, line: 3265, type: !1027)
!5060 = !DILocation(line: 3265, column: 55, scope: !5056)
!5061 = !DILocalVariable(name: "arg", arg: 3, scope: !5056, file: !47, line: 3265, type: !1027)
!5062 = !DILocation(line: 3265, column: 72, scope: !5056)
!5063 = !DILocation(line: 3267, column: 20, scope: !5056)
!5064 = !DILocation(line: 3267, column: 28, scope: !5056)
!5065 = !DILocation(line: 3267, column: 5, scope: !5056)
!5066 = !DILocation(line: 3268, column: 5, scope: !5056)
!5067 = distinct !DISubprogram(name: "print_section", scope: !47, file: !47, line: 3431, type: !5068, isLocal: true, isDefinition: true, scopeLine: 3432, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5068 = !DISubroutineType(types: !5069)
!5069 = !{null, !5070, !1041}
!5070 = !DIDerivedType(tag: DW_TAG_typedef, name: "SectionID", file: !47, line: 199, baseType: !46)
!5071 = !DILocalVariable(name: "id", arg: 1, scope: !5067, file: !47, line: 3431, type: !5070)
!5072 = !DILocation(line: 3431, column: 37, scope: !5067)
!5073 = !DILocalVariable(name: "level", arg: 2, scope: !5067, file: !47, line: 3431, type: !1041)
!5074 = !DILocation(line: 3431, column: 45, scope: !5067)
!5075 = !DILocalVariable(name: "pid", scope: !5067, file: !47, line: 3433, type: !5076)
!5076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5077, size: 64, align: 64)
!5077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5070)
!5078 = !DILocation(line: 3433, column: 22, scope: !5067)
!5079 = !DILocalVariable(name: "section", scope: !5067, file: !47, line: 3434, type: !2427)
!5080 = !DILocation(line: 3434, column: 27, scope: !5067)
!5081 = !DILocation(line: 3434, column: 47, scope: !5067)
!5082 = !DILocation(line: 3434, column: 38, scope: !5067)
!5083 = !DILocation(line: 3436, column: 12, scope: !5067)
!5084 = !DILocation(line: 3436, column: 21, scope: !5067)
!5085 = !DILocation(line: 3436, column: 27, scope: !5067)
!5086 = !DILocation(line: 3437, column: 12, scope: !5067)
!5087 = !DILocation(line: 3437, column: 21, scope: !5067)
!5088 = !DILocation(line: 3437, column: 27, scope: !5067)
!5089 = !DILocation(line: 3438, column: 12, scope: !5067)
!5090 = !DILocation(line: 3438, column: 21, scope: !5067)
!5091 = !DILocation(line: 3438, column: 27, scope: !5067)
!5092 = !DILocation(line: 3435, column: 5, scope: !5067)
!5093 = !DILocation(line: 3439, column: 23, scope: !5067)
!5094 = !DILocation(line: 3439, column: 29, scope: !5067)
!5095 = !DILocation(line: 3439, column: 39, scope: !5067)
!5096 = !DILocation(line: 3439, column: 48, scope: !5067)
!5097 = !DILocation(line: 3439, column: 5, scope: !5067)
!5098 = !DILocation(line: 3440, column: 9, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5067, file: !47, line: 3440, column: 9)
!5100 = !DILocation(line: 3440, column: 18, scope: !5099)
!5101 = !DILocation(line: 3440, column: 9, scope: !5067)
!5102 = !DILocation(line: 3441, column: 23, scope: !5099)
!5103 = !DILocation(line: 3441, column: 32, scope: !5099)
!5104 = !DILocation(line: 3441, column: 9, scope: !5099)
!5105 = !DILocation(line: 3442, column: 5, scope: !5067)
!5106 = !DILocation(line: 3444, column: 16, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5067, file: !47, line: 3444, column: 5)
!5108 = !DILocation(line: 3444, column: 25, scope: !5107)
!5109 = !DILocation(line: 3444, column: 14, scope: !5107)
!5110 = !DILocation(line: 3444, column: 10, scope: !5107)
!5111 = !DILocation(line: 3444, column: 40, scope: !5112)
!5112 = !DILexicalBlockFile(scope: !5113, file: !47, discriminator: 1)
!5113 = distinct !DILexicalBlock(scope: !5107, file: !47, line: 3444, column: 5)
!5114 = !DILocation(line: 3444, column: 39, scope: !5112)
!5115 = !DILocation(line: 3444, column: 44, scope: !5112)
!5116 = !DILocation(line: 3444, column: 5, scope: !5112)
!5117 = !DILocation(line: 3445, column: 24, scope: !5113)
!5118 = !DILocation(line: 3445, column: 23, scope: !5113)
!5119 = !DILocation(line: 3445, column: 29, scope: !5113)
!5120 = !DILocation(line: 3445, column: 34, scope: !5113)
!5121 = !DILocation(line: 3445, column: 9, scope: !5113)
!5122 = !DILocation(line: 3444, column: 54, scope: !5123)
!5123 = !DILexicalBlockFile(scope: !5113, file: !47, discriminator: 2)
!5124 = !DILocation(line: 3444, column: 5, scope: !5123)
!5125 = distinct !{!5125, !5126}
!5126 = !DILocation(line: 3444, column: 5, scope: !5067)
!5127 = !DILocation(line: 3446, column: 1, scope: !5067)
!5128 = distinct !DISubprogram(name: "mark_section_show_entries", scope: !47, file: !47, line: 3152, type: !5129, isLocal: true, isDefinition: true, scopeLine: 3154, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{null, !5070, !1041, !1423}
!5131 = !DILocalVariable(name: "section_id", arg: 1, scope: !5128, file: !47, line: 3152, type: !5070)
!5132 = !DILocation(line: 3152, column: 56, scope: !5128)
!5133 = !DILocalVariable(name: "show_all_entries", arg: 2, scope: !5128, file: !47, line: 3153, type: !1041)
!5134 = !DILocation(line: 3153, column: 50, scope: !5128)
!5135 = !DILocalVariable(name: "entries", arg: 3, scope: !5128, file: !47, line: 3153, type: !1423)
!5136 = !DILocation(line: 3153, column: 82, scope: !5128)
!5137 = !DILocalVariable(name: "section", scope: !5128, file: !47, line: 3155, type: !3341)
!5138 = !DILocation(line: 3155, column: 21, scope: !5128)
!5139 = !DILocation(line: 3155, column: 41, scope: !5128)
!5140 = !DILocation(line: 3155, column: 32, scope: !5128)
!5141 = !DILocation(line: 3157, column: 33, scope: !5128)
!5142 = !DILocation(line: 3157, column: 5, scope: !5128)
!5143 = !DILocation(line: 3157, column: 14, scope: !5128)
!5144 = !DILocation(line: 3157, column: 31, scope: !5128)
!5145 = !DILocation(line: 3158, column: 9, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5128, file: !47, line: 3158, column: 9)
!5147 = !DILocation(line: 3158, column: 9, scope: !5128)
!5148 = !DILocalVariable(name: "id", scope: !5149, file: !47, line: 3159, type: !5150)
!5149 = distinct !DILexicalBlock(scope: !5146, file: !47, line: 3158, column: 27)
!5150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5070, size: 64, align: 64)
!5151 = !DILocation(line: 3159, column: 20, scope: !5149)
!5152 = !DILocation(line: 3160, column: 19, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5149, file: !47, line: 3160, column: 9)
!5154 = !DILocation(line: 3160, column: 28, scope: !5153)
!5155 = !DILocation(line: 3160, column: 17, scope: !5153)
!5156 = !DILocation(line: 3160, column: 14, scope: !5153)
!5157 = !DILocation(line: 3160, column: 43, scope: !5158)
!5158 = !DILexicalBlockFile(scope: !5159, file: !47, discriminator: 1)
!5159 = distinct !DILexicalBlock(scope: !5153, file: !47, line: 3160, column: 9)
!5160 = !DILocation(line: 3160, column: 42, scope: !5158)
!5161 = !DILocation(line: 3160, column: 46, scope: !5158)
!5162 = !DILocation(line: 3160, column: 9, scope: !5158)
!5163 = !DILocation(line: 3161, column: 40, scope: !5159)
!5164 = !DILocation(line: 3161, column: 39, scope: !5159)
!5165 = !DILocation(line: 3161, column: 44, scope: !5159)
!5166 = !DILocation(line: 3161, column: 62, scope: !5159)
!5167 = !DILocation(line: 3161, column: 13, scope: !5159)
!5168 = !DILocation(line: 3160, column: 55, scope: !5169)
!5169 = !DILexicalBlockFile(scope: !5159, file: !47, discriminator: 2)
!5170 = !DILocation(line: 3160, column: 9, scope: !5169)
!5171 = distinct !{!5171, !5172}
!5172 = !DILocation(line: 3160, column: 9, scope: !5149)
!5173 = !DILocation(line: 3162, column: 5, scope: !5149)
!5174 = !DILocation(line: 3163, column: 23, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5146, file: !47, line: 3162, column: 12)
!5176 = !DILocation(line: 3163, column: 32, scope: !5175)
!5177 = !DILocation(line: 3163, column: 49, scope: !5175)
!5178 = !DILocation(line: 3163, column: 9, scope: !5175)
!5179 = !DILocation(line: 3165, column: 1, scope: !5128)
!5180 = distinct !DISubprogram(name: "match_section", scope: !47, file: !47, line: 3167, type: !5181, isLocal: true, isDefinition: true, scopeLine: 3169, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{!1041, !1027, !1041, !1423}
!5183 = !DILocalVariable(name: "section_name", arg: 1, scope: !5180, file: !47, line: 3167, type: !1027)
!5184 = !DILocation(line: 3167, column: 38, scope: !5180)
!5185 = !DILocalVariable(name: "show_all_entries", arg: 2, scope: !5180, file: !47, line: 3168, type: !1041)
!5186 = !DILocation(line: 3168, column: 30, scope: !5180)
!5187 = !DILocalVariable(name: "entries", arg: 3, scope: !5180, file: !47, line: 3168, type: !1423)
!5188 = !DILocation(line: 3168, column: 62, scope: !5180)
!5189 = !DILocalVariable(name: "i", scope: !5180, file: !47, line: 3170, type: !1041)
!5190 = !DILocation(line: 3170, column: 9, scope: !5180)
!5191 = !DILocalVariable(name: "ret", scope: !5180, file: !47, line: 3170, type: !1041)
!5192 = !DILocation(line: 3170, column: 12, scope: !5180)
!5193 = !DILocation(line: 3172, column: 12, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5180, file: !47, line: 3172, column: 5)
!5195 = !DILocation(line: 3172, column: 10, scope: !5194)
!5196 = !DILocation(line: 3172, column: 17, scope: !5197)
!5197 = !DILexicalBlockFile(scope: !5198, file: !47, discriminator: 1)
!5198 = distinct !DILexicalBlock(scope: !5194, file: !47, line: 3172, column: 5)
!5199 = !DILocation(line: 3172, column: 19, scope: !5197)
!5200 = !DILocation(line: 3172, column: 5, scope: !5197)
!5201 = !DILocalVariable(name: "section", scope: !5202, file: !47, line: 3173, type: !2427)
!5202 = distinct !DILexicalBlock(scope: !5198, file: !47, line: 3172, column: 70)
!5203 = !DILocation(line: 3173, column: 31, scope: !5202)
!5204 = !DILocation(line: 3173, column: 51, scope: !5202)
!5205 = !DILocation(line: 3173, column: 42, scope: !5202)
!5206 = !DILocation(line: 3174, column: 21, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5202, file: !47, line: 3174, column: 13)
!5208 = !DILocation(line: 3174, column: 35, scope: !5207)
!5209 = !DILocation(line: 3174, column: 44, scope: !5207)
!5210 = !DILocation(line: 3174, column: 14, scope: !5207)
!5211 = !DILocation(line: 3174, column: 50, scope: !5207)
!5212 = !DILocation(line: 3175, column: 14, scope: !5207)
!5213 = !DILocation(line: 3175, column: 23, scope: !5207)
!5214 = !DILocation(line: 3175, column: 35, scope: !5207)
!5215 = !DILocation(line: 3175, column: 46, scope: !5216)
!5216 = !DILexicalBlockFile(scope: !5207, file: !47, discriminator: 1)
!5217 = !DILocation(line: 3175, column: 60, scope: !5216)
!5218 = !DILocation(line: 3175, column: 69, scope: !5216)
!5219 = !DILocation(line: 3175, column: 39, scope: !5216)
!5220 = !DILocation(line: 3174, column: 13, scope: !5221)
!5221 = !DILexicalBlockFile(scope: !5202, file: !47, discriminator: 1)
!5222 = !DILocation(line: 3177, column: 68, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5207, file: !47, line: 3175, column: 84)
!5224 = !DILocation(line: 3178, column: 41, scope: !5223)
!5225 = !DILocation(line: 3178, column: 50, scope: !5223)
!5226 = !DILocation(line: 3178, column: 63, scope: !5223)
!5227 = !DILocation(line: 3178, column: 72, scope: !5223)
!5228 = !DILocation(line: 3178, column: 28, scope: !5223)
!5229 = !DILocation(line: 3176, column: 13, scope: !5223)
!5230 = !DILocation(line: 3179, column: 16, scope: !5223)
!5231 = !DILocation(line: 3180, column: 39, scope: !5223)
!5232 = !DILocation(line: 3180, column: 48, scope: !5223)
!5233 = !DILocation(line: 3180, column: 52, scope: !5223)
!5234 = !DILocation(line: 3180, column: 70, scope: !5223)
!5235 = !DILocation(line: 3180, column: 13, scope: !5223)
!5236 = !DILocation(line: 3181, column: 9, scope: !5223)
!5237 = !DILocation(line: 3182, column: 5, scope: !5202)
!5238 = !DILocation(line: 3172, column: 66, scope: !5239)
!5239 = !DILexicalBlockFile(scope: !5198, file: !47, discriminator: 2)
!5240 = !DILocation(line: 3172, column: 5, scope: !5239)
!5241 = distinct !{!5241, !5242}
!5242 = !DILocation(line: 3172, column: 5, scope: !5180)
!5243 = !DILocation(line: 3183, column: 12, scope: !5180)
!5244 = !DILocation(line: 3183, column: 5, scope: !5180)
!5245 = distinct !DISubprogram(name: "av_x_if_null", scope: !583, file: !583, line: 308, type: !5246, isLocal: true, isDefinition: true, scopeLine: 309, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5246 = !DISubroutineType(types: !5247)
!5247 = !{!1013, !5248, !5248}
!5248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5249, size: 64, align: 64)
!5249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!5250 = !DILocalVariable(name: "p", arg: 1, scope: !5245, file: !583, line: 308, type: !5248)
!5251 = !DILocation(line: 308, column: 46, scope: !5245)
!5252 = !DILocalVariable(name: "x", arg: 2, scope: !5245, file: !583, line: 308, type: !5248)
!5253 = !DILocation(line: 308, column: 61, scope: !5245)
!5254 = !DILocation(line: 310, column: 31, scope: !5245)
!5255 = !DILocation(line: 310, column: 35, scope: !5256)
!5256 = !DILexicalBlockFile(scope: !5245, file: !583, discriminator: 1)
!5257 = !DILocation(line: 310, column: 31, scope: !5256)
!5258 = !DILocation(line: 310, column: 39, scope: !5259)
!5259 = !DILexicalBlockFile(scope: !5245, file: !583, discriminator: 2)
!5260 = !DILocation(line: 310, column: 31, scope: !5259)
!5261 = !DILocation(line: 310, column: 31, scope: !5262)
!5262 = !DILexicalBlockFile(scope: !5245, file: !583, discriminator: 3)
!5263 = !DILocation(line: 310, column: 20, scope: !5262)
!5264 = !DILocation(line: 310, column: 12, scope: !5262)
!5265 = !DILocation(line: 310, column: 5, scope: !5262)
!5266 = distinct !DISubprogram(name: "parse_read_intervals", scope: !47, file: !47, line: 3369, type: !5267, isLocal: true, isDefinition: true, scopeLine: 3370, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5267 = !DISubroutineType(types: !5268)
!5268 = !{!1041, !1027}
!5269 = !DILocalVariable(name: "intervals_spec", arg: 1, scope: !5266, file: !47, line: 3369, type: !1027)
!5270 = !DILocation(line: 3369, column: 45, scope: !5266)
!5271 = !DILocalVariable(name: "ret", scope: !5266, file: !47, line: 3371, type: !1041)
!5272 = !DILocation(line: 3371, column: 9, scope: !5266)
!5273 = !DILocalVariable(name: "n", scope: !5266, file: !47, line: 3371, type: !1041)
!5274 = !DILocation(line: 3371, column: 14, scope: !5266)
!5275 = !DILocalVariable(name: "i", scope: !5266, file: !47, line: 3371, type: !1041)
!5276 = !DILocation(line: 3371, column: 17, scope: !5266)
!5277 = !DILocalVariable(name: "p", scope: !5266, file: !47, line: 3372, type: !1014)
!5278 = !DILocation(line: 3372, column: 11, scope: !5266)
!5279 = !DILocalVariable(name: "spec", scope: !5266, file: !47, line: 3372, type: !1014)
!5280 = !DILocation(line: 3372, column: 15, scope: !5266)
!5281 = !DILocation(line: 3372, column: 32, scope: !5266)
!5282 = !DILocation(line: 3372, column: 22, scope: !5266)
!5283 = !DILocation(line: 3373, column: 10, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5266, file: !47, line: 3373, column: 9)
!5285 = !DILocation(line: 3373, column: 9, scope: !5266)
!5286 = !DILocation(line: 3374, column: 9, scope: !5284)
!5287 = !DILocation(line: 3377, column: 12, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5266, file: !47, line: 3377, column: 5)
!5289 = !DILocation(line: 3377, column: 21, scope: !5288)
!5290 = !DILocation(line: 3377, column: 19, scope: !5288)
!5291 = !DILocation(line: 3377, column: 10, scope: !5288)
!5292 = !DILocation(line: 3377, column: 28, scope: !5293)
!5293 = !DILexicalBlockFile(scope: !5294, file: !47, discriminator: 1)
!5294 = distinct !DILexicalBlock(scope: !5288, file: !47, line: 3377, column: 5)
!5295 = !DILocation(line: 3377, column: 27, scope: !5293)
!5296 = !DILocation(line: 3377, column: 5, scope: !5293)
!5297 = !DILocation(line: 3378, column: 14, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5294, file: !47, line: 3378, column: 13)
!5299 = !DILocation(line: 3378, column: 13, scope: !5298)
!5300 = !DILocation(line: 3378, column: 16, scope: !5298)
!5301 = !DILocation(line: 3378, column: 13, scope: !5294)
!5302 = !DILocation(line: 3379, column: 14, scope: !5298)
!5303 = !DILocation(line: 3379, column: 13, scope: !5298)
!5304 = !DILocation(line: 3378, column: 19, scope: !5305)
!5305 = !DILexicalBlockFile(scope: !5298, file: !47, discriminator: 1)
!5306 = !DILocation(line: 3377, column: 32, scope: !5307)
!5307 = !DILexicalBlockFile(scope: !5294, file: !47, discriminator: 2)
!5308 = !DILocation(line: 3377, column: 5, scope: !5307)
!5309 = distinct !{!5309, !5310}
!5310 = !DILocation(line: 3377, column: 5, scope: !5266)
!5311 = !DILocation(line: 3380, column: 6, scope: !5266)
!5312 = !DILocation(line: 3382, column: 38, scope: !5266)
!5313 = !DILocation(line: 3382, column: 22, scope: !5266)
!5314 = !DILocation(line: 3382, column: 20, scope: !5266)
!5315 = !DILocation(line: 3383, column: 10, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5266, file: !47, line: 3383, column: 9)
!5317 = !DILocation(line: 3383, column: 9, scope: !5266)
!5318 = !DILocation(line: 3384, column: 13, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5316, file: !47, line: 3383, column: 26)
!5320 = !DILocation(line: 3385, column: 9, scope: !5319)
!5321 = !DILocation(line: 3387, column: 25, scope: !5266)
!5322 = !DILocation(line: 3387, column: 23, scope: !5266)
!5323 = !DILocation(line: 3390, column: 9, scope: !5266)
!5324 = !DILocation(line: 3390, column: 7, scope: !5266)
!5325 = !DILocation(line: 3391, column: 12, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5266, file: !47, line: 3391, column: 5)
!5327 = !DILocation(line: 3391, column: 10, scope: !5326)
!5328 = !DILocation(line: 3391, column: 17, scope: !5329)
!5329 = !DILexicalBlockFile(scope: !5330, file: !47, discriminator: 1)
!5330 = distinct !DILexicalBlock(scope: !5326, file: !47, line: 3391, column: 5)
!5331 = !DILocation(line: 3391, column: 5, scope: !5329)
!5332 = !DILocalVariable(name: "next", scope: !5333, file: !47, line: 3392, type: !1014)
!5333 = distinct !DILexicalBlock(scope: !5330, file: !47, line: 3391, column: 25)
!5334 = !DILocation(line: 3392, column: 15, scope: !5333)
!5335 = !DILocation(line: 3394, column: 9, scope: !5333)
!5336 = distinct !{!5336, !5335}
!5337 = !DILocation(line: 3394, column: 20, scope: !5338)
!5338 = !DILexicalBlockFile(scope: !5339, file: !47, discriminator: 1)
!5339 = distinct !DILexicalBlock(scope: !5340, file: !47, line: 3394, column: 18)
!5340 = distinct !DILexicalBlock(scope: !5333, file: !47, line: 3394, column: 12)
!5341 = !DILocation(line: 3394, column: 24, scope: !5338)
!5342 = !DILocation(line: 3394, column: 22, scope: !5338)
!5343 = !DILocation(line: 3394, column: 18, scope: !5338)
!5344 = !DILocation(line: 3394, column: 46, scope: !5345)
!5345 = !DILexicalBlockFile(scope: !5346, file: !47, discriminator: 2)
!5346 = distinct !DILexicalBlock(scope: !5339, file: !47, line: 3394, column: 44)
!5347 = !DILocation(line: 3394, column: 100, scope: !5348)
!5348 = !DILexicalBlockFile(scope: !5345, file: !47, discriminator: 4)
!5349 = !DILocation(line: 3394, column: 100, scope: !5345)
!5350 = !DILocation(line: 3394, column: 111, scope: !5351)
!5351 = !DILexicalBlockFile(scope: !5340, file: !47, discriminator: 3)
!5352 = !DILocation(line: 3395, column: 23, scope: !5333)
!5353 = !DILocation(line: 3395, column: 16, scope: !5333)
!5354 = !DILocation(line: 3395, column: 14, scope: !5333)
!5355 = !DILocation(line: 3396, column: 13, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5333, file: !47, line: 3396, column: 13)
!5357 = !DILocation(line: 3396, column: 13, scope: !5333)
!5358 = !DILocation(line: 3397, column: 18, scope: !5356)
!5359 = !DILocation(line: 3397, column: 21, scope: !5356)
!5360 = !DILocation(line: 3397, column: 13, scope: !5356)
!5361 = !DILocation(line: 3399, column: 32, scope: !5333)
!5362 = !DILocation(line: 3399, column: 24, scope: !5333)
!5363 = !DILocation(line: 3399, column: 9, scope: !5333)
!5364 = !DILocation(line: 3399, column: 27, scope: !5333)
!5365 = !DILocation(line: 3399, column: 30, scope: !5333)
!5366 = !DILocation(line: 3400, column: 35, scope: !5333)
!5367 = !DILocation(line: 3400, column: 54, scope: !5333)
!5368 = !DILocation(line: 3400, column: 39, scope: !5333)
!5369 = !DILocation(line: 3400, column: 15, scope: !5333)
!5370 = !DILocation(line: 3400, column: 13, scope: !5333)
!5371 = !DILocation(line: 3401, column: 13, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5333, file: !47, line: 3401, column: 13)
!5373 = !DILocation(line: 3401, column: 17, scope: !5372)
!5374 = !DILocation(line: 3401, column: 13, scope: !5333)
!5375 = !DILocation(line: 3403, column: 20, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5372, file: !47, line: 3401, column: 22)
!5377 = !DILocation(line: 3403, column: 23, scope: !5376)
!5378 = !DILocation(line: 3402, column: 13, scope: !5376)
!5379 = !DILocation(line: 3404, column: 13, scope: !5376)
!5380 = !DILocation(line: 3406, column: 9, scope: !5333)
!5381 = !DILocation(line: 3407, column: 43, scope: !5333)
!5382 = !DILocation(line: 3407, column: 28, scope: !5333)
!5383 = !DILocation(line: 3407, column: 9, scope: !5333)
!5384 = !DILocation(line: 3408, column: 13, scope: !5333)
!5385 = !DILocation(line: 3408, column: 11, scope: !5333)
!5386 = !DILocation(line: 3409, column: 5, scope: !5333)
!5387 = !DILocation(line: 3391, column: 21, scope: !5388)
!5388 = !DILexicalBlockFile(scope: !5330, file: !47, discriminator: 2)
!5389 = !DILocation(line: 3391, column: 5, scope: !5388)
!5390 = distinct !{!5390, !5391}
!5391 = !DILocation(line: 3391, column: 5, scope: !5266)
!5392 = !DILocation(line: 3410, column: 5, scope: !5266)
!5393 = distinct !{!5393, !5392}
!5394 = !DILocation(line: 3410, column: 16, scope: !5395)
!5395 = !DILexicalBlockFile(scope: !5396, file: !47, discriminator: 1)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !47, line: 3410, column: 14)
!5397 = distinct !DILexicalBlock(scope: !5266, file: !47, line: 3410, column: 8)
!5398 = !DILocation(line: 3410, column: 21, scope: !5395)
!5399 = !DILocation(line: 3410, column: 18, scope: !5395)
!5400 = !DILocation(line: 3410, column: 14, scope: !5395)
!5401 = !DILocation(line: 3410, column: 43, scope: !5402)
!5402 = !DILexicalBlockFile(scope: !5403, file: !47, discriminator: 2)
!5403 = distinct !DILexicalBlock(scope: !5396, file: !47, line: 3410, column: 41)
!5404 = !DILocation(line: 3410, column: 97, scope: !5405)
!5405 = !DILexicalBlockFile(scope: !5402, file: !47, discriminator: 5)
!5406 = !DILocation(line: 3410, column: 97, scope: !5402)
!5407 = !DILocation(line: 3410, column: 108, scope: !5408)
!5408 = !DILexicalBlockFile(scope: !5397, file: !47, discriminator: 3)
!5409 = !DILocation(line: 3410, column: 108, scope: !5410)
!5410 = !DILexicalBlockFile(scope: !5397, file: !47, discriminator: 4)
!5411 = !DILocation(line: 3413, column: 13, scope: !5266)
!5412 = !DILocation(line: 3413, column: 5, scope: !5266)
!5413 = !DILocation(line: 3414, column: 12, scope: !5266)
!5414 = !DILocation(line: 3414, column: 5, scope: !5266)
!5415 = !DILocation(line: 3415, column: 1, scope: !5266)
!5416 = distinct !DISubprogram(name: "parse_read_interval", scope: !47, file: !47, line: 3287, type: !5417, isLocal: true, isDefinition: true, scopeLine: 3289, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{!1041, !1027, !1182}
!5419 = !DILocalVariable(name: "interval_spec", arg: 1, scope: !5416, file: !47, line: 3287, type: !1027)
!5420 = !DILocation(line: 3287, column: 44, scope: !5416)
!5421 = !DILocalVariable(name: "interval", arg: 2, scope: !5416, file: !47, line: 3288, type: !1182)
!5422 = !DILocation(line: 3288, column: 46, scope: !5416)
!5423 = !DILocalVariable(name: "ret", scope: !5416, file: !47, line: 3290, type: !1041)
!5424 = !DILocation(line: 3290, column: 9, scope: !5416)
!5425 = !DILocalVariable(name: "next", scope: !5416, file: !47, line: 3291, type: !1014)
!5426 = !DILocation(line: 3291, column: 11, scope: !5416)
!5427 = !DILocalVariable(name: "p", scope: !5416, file: !47, line: 3291, type: !1014)
!5428 = !DILocation(line: 3291, column: 18, scope: !5416)
!5429 = !DILocalVariable(name: "spec", scope: !5416, file: !47, line: 3291, type: !1014)
!5430 = !DILocation(line: 3291, column: 22, scope: !5416)
!5431 = !DILocation(line: 3291, column: 39, scope: !5416)
!5432 = !DILocation(line: 3291, column: 29, scope: !5416)
!5433 = !DILocation(line: 3292, column: 10, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5416, file: !47, line: 3292, column: 9)
!5435 = !DILocation(line: 3292, column: 9, scope: !5416)
!5436 = !DILocation(line: 3293, column: 9, scope: !5434)
!5437 = !DILocation(line: 3295, column: 11, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5416, file: !47, line: 3295, column: 9)
!5439 = !DILocation(line: 3295, column: 10, scope: !5438)
!5440 = !DILocation(line: 3295, column: 9, scope: !5416)
!5441 = !DILocation(line: 3296, column: 9, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5438, file: !47, line: 3295, column: 17)
!5443 = !DILocation(line: 3297, column: 13, scope: !5442)
!5444 = !DILocation(line: 3298, column: 9, scope: !5442)
!5445 = !DILocation(line: 3301, column: 9, scope: !5416)
!5446 = !DILocation(line: 3301, column: 7, scope: !5416)
!5447 = !DILocation(line: 3302, column: 19, scope: !5416)
!5448 = !DILocation(line: 3302, column: 12, scope: !5416)
!5449 = !DILocation(line: 3302, column: 10, scope: !5416)
!5450 = !DILocation(line: 3303, column: 9, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5416, file: !47, line: 3303, column: 9)
!5452 = !DILocation(line: 3303, column: 9, scope: !5416)
!5453 = !DILocation(line: 3304, column: 14, scope: !5451)
!5454 = !DILocation(line: 3304, column: 17, scope: !5451)
!5455 = !DILocation(line: 3304, column: 9, scope: !5451)
!5456 = !DILocation(line: 3307, column: 10, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5416, file: !47, line: 3307, column: 9)
!5458 = !DILocation(line: 3307, column: 9, scope: !5457)
!5459 = !DILocation(line: 3307, column: 9, scope: !5416)
!5460 = !DILocation(line: 3308, column: 9, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5457, file: !47, line: 3307, column: 13)
!5462 = !DILocation(line: 3308, column: 19, scope: !5461)
!5463 = !DILocation(line: 3308, column: 29, scope: !5461)
!5464 = !DILocation(line: 3310, column: 14, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5461, file: !47, line: 3310, column: 13)
!5466 = !DILocation(line: 3310, column: 13, scope: !5465)
!5467 = !DILocation(line: 3310, column: 16, scope: !5465)
!5468 = !DILocation(line: 3310, column: 13, scope: !5461)
!5469 = !DILocation(line: 3311, column: 13, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5465, file: !47, line: 3310, column: 24)
!5471 = !DILocation(line: 3311, column: 23, scope: !5470)
!5472 = !DILocation(line: 3311, column: 39, scope: !5470)
!5473 = !DILocation(line: 3312, column: 14, scope: !5470)
!5474 = !DILocation(line: 3313, column: 9, scope: !5470)
!5475 = !DILocation(line: 3314, column: 13, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5465, file: !47, line: 3313, column: 16)
!5477 = !DILocation(line: 3314, column: 23, scope: !5476)
!5478 = !DILocation(line: 3314, column: 39, scope: !5476)
!5479 = !DILocation(line: 3317, column: 30, scope: !5461)
!5480 = !DILocation(line: 3317, column: 40, scope: !5461)
!5481 = !DILocation(line: 3317, column: 47, scope: !5461)
!5482 = !DILocation(line: 3317, column: 15, scope: !5461)
!5483 = !DILocation(line: 3317, column: 13, scope: !5461)
!5484 = !DILocation(line: 3318, column: 13, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5461, file: !47, line: 3318, column: 13)
!5486 = !DILocation(line: 3318, column: 17, scope: !5485)
!5487 = !DILocation(line: 3318, column: 13, scope: !5461)
!5488 = !DILocation(line: 3319, column: 76, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5485, file: !47, line: 3318, column: 22)
!5490 = !DILocation(line: 3319, column: 13, scope: !5489)
!5491 = !DILocation(line: 3320, column: 13, scope: !5489)
!5492 = !DILocation(line: 3322, column: 5, scope: !5461)
!5493 = !DILocation(line: 3323, column: 9, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5457, file: !47, line: 3322, column: 12)
!5495 = !DILocation(line: 3323, column: 19, scope: !5494)
!5496 = !DILocation(line: 3323, column: 29, scope: !5494)
!5497 = !DILocation(line: 3327, column: 9, scope: !5416)
!5498 = !DILocation(line: 3327, column: 7, scope: !5416)
!5499 = !DILocation(line: 3328, column: 9, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5416, file: !47, line: 3328, column: 9)
!5501 = !DILocation(line: 3328, column: 11, scope: !5500)
!5502 = !DILocation(line: 3328, column: 15, scope: !5503)
!5503 = !DILexicalBlockFile(scope: !5500, file: !47, discriminator: 1)
!5504 = !DILocation(line: 3328, column: 14, scope: !5503)
!5505 = !DILocation(line: 3328, column: 9, scope: !5503)
!5506 = !DILocalVariable(name: "us", scope: !5507, file: !47, line: 3329, type: !1019)
!5507 = distinct !DILexicalBlock(scope: !5500, file: !47, line: 3328, column: 18)
!5508 = !DILocation(line: 3329, column: 17, scope: !5507)
!5509 = !DILocation(line: 3330, column: 9, scope: !5507)
!5510 = !DILocation(line: 3330, column: 19, scope: !5507)
!5511 = !DILocation(line: 3330, column: 27, scope: !5507)
!5512 = !DILocation(line: 3332, column: 14, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5507, file: !47, line: 3332, column: 13)
!5514 = !DILocation(line: 3332, column: 13, scope: !5513)
!5515 = !DILocation(line: 3332, column: 16, scope: !5513)
!5516 = !DILocation(line: 3332, column: 13, scope: !5507)
!5517 = !DILocation(line: 3333, column: 13, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5513, file: !47, line: 3332, column: 24)
!5519 = !DILocation(line: 3333, column: 23, scope: !5518)
!5520 = !DILocation(line: 3333, column: 37, scope: !5518)
!5521 = !DILocation(line: 3334, column: 14, scope: !5518)
!5522 = !DILocation(line: 3335, column: 9, scope: !5518)
!5523 = !DILocation(line: 3336, column: 13, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5513, file: !47, line: 3335, column: 16)
!5525 = !DILocation(line: 3336, column: 23, scope: !5524)
!5526 = !DILocation(line: 3336, column: 37, scope: !5524)
!5527 = !DILocation(line: 3339, column: 13, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5507, file: !47, line: 3339, column: 13)
!5529 = !DILocation(line: 3339, column: 23, scope: !5528)
!5530 = !DILocation(line: 3339, column: 37, scope: !5528)
!5531 = !DILocation(line: 3339, column: 41, scope: !5532)
!5532 = !DILexicalBlockFile(scope: !5528, file: !47, discriminator: 1)
!5533 = !DILocation(line: 3339, column: 40, scope: !5532)
!5534 = !DILocation(line: 3339, column: 43, scope: !5532)
!5535 = !DILocation(line: 3339, column: 13, scope: !5532)
!5536 = !DILocalVariable(name: "lli", scope: !5537, file: !47, line: 3340, type: !1109)
!5537 = distinct !DILexicalBlock(scope: !5528, file: !47, line: 3339, column: 51)
!5538 = !DILocation(line: 3340, column: 27, scope: !5537)
!5539 = !DILocalVariable(name: "tail", scope: !5537, file: !47, line: 3341, type: !1014)
!5540 = !DILocation(line: 3341, column: 19, scope: !5537)
!5541 = !DILocation(line: 3342, column: 13, scope: !5537)
!5542 = !DILocation(line: 3342, column: 23, scope: !5537)
!5543 = !DILocation(line: 3342, column: 39, scope: !5537)
!5544 = !DILocation(line: 3343, column: 14, scope: !5537)
!5545 = !DILocation(line: 3344, column: 27, scope: !5537)
!5546 = !DILocation(line: 3344, column: 19, scope: !5537)
!5547 = !DILocation(line: 3344, column: 17, scope: !5537)
!5548 = !DILocation(line: 3345, column: 18, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5537, file: !47, line: 3345, column: 17)
!5550 = !DILocation(line: 3345, column: 17, scope: !5549)
!5551 = !DILocation(line: 3345, column: 23, scope: !5549)
!5552 = !DILocation(line: 3345, column: 26, scope: !5553)
!5553 = !DILexicalBlockFile(scope: !5549, file: !47, discriminator: 1)
!5554 = !DILocation(line: 3345, column: 30, scope: !5553)
!5555 = !DILocation(line: 3345, column: 17, scope: !5553)
!5556 = !DILocation(line: 3347, column: 90, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5549, file: !47, line: 3345, column: 35)
!5558 = !DILocation(line: 3346, column: 17, scope: !5557)
!5559 = !DILocation(line: 3348, column: 17, scope: !5557)
!5560 = !DILocation(line: 3350, column: 29, scope: !5537)
!5561 = !DILocation(line: 3350, column: 13, scope: !5537)
!5562 = !DILocation(line: 3350, column: 23, scope: !5537)
!5563 = !DILocation(line: 3350, column: 27, scope: !5537)
!5564 = !DILocation(line: 3351, column: 9, scope: !5537)
!5565 = !DILocation(line: 3352, column: 13, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5528, file: !47, line: 3351, column: 16)
!5567 = !DILocation(line: 3352, column: 23, scope: !5566)
!5568 = !DILocation(line: 3352, column: 39, scope: !5566)
!5569 = !DILocation(line: 3353, column: 38, scope: !5566)
!5570 = !DILocation(line: 3353, column: 19, scope: !5566)
!5571 = !DILocation(line: 3353, column: 17, scope: !5566)
!5572 = !DILocation(line: 3354, column: 17, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5566, file: !47, line: 3354, column: 17)
!5574 = !DILocation(line: 3354, column: 21, scope: !5573)
!5575 = !DILocation(line: 3354, column: 17, scope: !5566)
!5576 = !DILocation(line: 3355, column: 87, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5573, file: !47, line: 3354, column: 26)
!5578 = !DILocation(line: 3355, column: 17, scope: !5577)
!5579 = !DILocation(line: 3356, column: 17, scope: !5577)
!5580 = !DILocation(line: 3358, column: 29, scope: !5566)
!5581 = !DILocation(line: 3358, column: 13, scope: !5566)
!5582 = !DILocation(line: 3358, column: 23, scope: !5566)
!5583 = !DILocation(line: 3358, column: 27, scope: !5566)
!5584 = !DILocation(line: 3360, column: 5, scope: !5507)
!5585 = !DILocation(line: 3361, column: 9, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5500, file: !47, line: 3360, column: 12)
!5587 = !DILocation(line: 3361, column: 19, scope: !5586)
!5588 = !DILocation(line: 3361, column: 27, scope: !5586)
!5589 = !DILocation(line: 3328, column: 15, scope: !5590)
!5590 = !DILexicalBlockFile(scope: !5500, file: !47, discriminator: 2)
!5591 = !DILocation(line: 3365, column: 13, scope: !5416)
!5592 = !DILocation(line: 3365, column: 5, scope: !5416)
!5593 = !DILocation(line: 3366, column: 12, scope: !5416)
!5594 = !DILocation(line: 3366, column: 5, scope: !5416)
!5595 = !DILocation(line: 3367, column: 1, scope: !5416)
!5596 = distinct !DISubprogram(name: "log_read_interval", scope: !47, file: !47, line: 2305, type: !5597, isLocal: true, isDefinition: true, scopeLine: 2306, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5597 = !DISubroutineType(types: !5598)
!5598 = !{null, !5599, !1013, !1041}
!5599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5600, size: 64, align: 64)
!5600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1183)
!5601 = !DILocalVariable(name: "interval", arg: 1, scope: !5596, file: !47, line: 2305, type: !5599)
!5602 = !DILocation(line: 2305, column: 51, scope: !5596)
!5603 = !DILocalVariable(name: "log_ctx", arg: 2, scope: !5596, file: !47, line: 2305, type: !1013)
!5604 = !DILocation(line: 2305, column: 67, scope: !5596)
!5605 = !DILocalVariable(name: "log_level", arg: 3, scope: !5596, file: !47, line: 2305, type: !1041)
!5606 = !DILocation(line: 2305, column: 80, scope: !5596)
!5607 = !DILocation(line: 2307, column: 12, scope: !5596)
!5608 = !DILocation(line: 2307, column: 21, scope: !5596)
!5609 = !DILocation(line: 2307, column: 41, scope: !5596)
!5610 = !DILocation(line: 2307, column: 51, scope: !5596)
!5611 = !DILocation(line: 2307, column: 5, scope: !5596)
!5612 = !DILocation(line: 2309, column: 9, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5596, file: !47, line: 2309, column: 9)
!5614 = !DILocation(line: 2309, column: 19, scope: !5613)
!5615 = !DILocation(line: 2309, column: 9, scope: !5596)
!5616 = !DILocation(line: 2310, column: 16, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5613, file: !47, line: 2309, column: 30)
!5618 = !DILocation(line: 2310, column: 25, scope: !5617)
!5619 = !DILocation(line: 2310, column: 51, scope: !5617)
!5620 = !DILocation(line: 2310, column: 61, scope: !5617)
!5621 = !DILocation(line: 2311, column: 39, scope: !5617)
!5622 = !DILocation(line: 2311, column: 49, scope: !5617)
!5623 = !DILocation(line: 2311, column: 54, scope: !5617)
!5624 = !DILocation(line: 2311, column: 64, scope: !5617)
!5625 = !DILocation(line: 2311, column: 84, scope: !5617)
!5626 = !DILocation(line: 2311, column: 16, scope: !5627)
!5627 = !DILexicalBlockFile(scope: !5617, file: !47, discriminator: 1)
!5628 = !DILocation(line: 2310, column: 9, scope: !5617)
!5629 = !DILocation(line: 2312, column: 5, scope: !5617)
!5630 = !DILocation(line: 2313, column: 16, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5613, file: !47, line: 2312, column: 12)
!5632 = !DILocation(line: 2313, column: 25, scope: !5631)
!5633 = !DILocation(line: 2313, column: 9, scope: !5631)
!5634 = !DILocation(line: 2316, column: 9, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5596, file: !47, line: 2316, column: 9)
!5636 = !DILocation(line: 2316, column: 19, scope: !5635)
!5637 = !DILocation(line: 2316, column: 9, scope: !5596)
!5638 = !DILocation(line: 2317, column: 16, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5635, file: !47, line: 2316, column: 28)
!5640 = !DILocation(line: 2317, column: 25, scope: !5639)
!5641 = !DILocation(line: 2317, column: 47, scope: !5639)
!5642 = !DILocation(line: 2317, column: 57, scope: !5639)
!5643 = !DILocation(line: 2317, column: 9, scope: !5639)
!5644 = !DILocation(line: 2318, column: 13, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5639, file: !47, line: 2318, column: 13)
!5646 = !DILocation(line: 2318, column: 23, scope: !5645)
!5647 = !DILocation(line: 2318, column: 13, scope: !5639)
!5648 = !DILocation(line: 2319, column: 20, scope: !5645)
!5649 = !DILocation(line: 2319, column: 29, scope: !5645)
!5650 = !DILocation(line: 2319, column: 51, scope: !5645)
!5651 = !DILocation(line: 2319, column: 61, scope: !5645)
!5652 = !DILocation(line: 2319, column: 13, scope: !5645)
!5653 = !DILocation(line: 2321, column: 20, scope: !5645)
!5654 = !DILocation(line: 2321, column: 29, scope: !5645)
!5655 = !DILocation(line: 2321, column: 69, scope: !5645)
!5656 = !DILocation(line: 2321, column: 79, scope: !5645)
!5657 = !DILocation(line: 2321, column: 84, scope: !5645)
!5658 = !DILocation(line: 2321, column: 94, scope: !5645)
!5659 = !DILocation(line: 2321, column: 112, scope: !5645)
!5660 = !DILocation(line: 2321, column: 46, scope: !5661)
!5661 = !DILexicalBlockFile(scope: !5645, file: !47, discriminator: 1)
!5662 = !DILocation(line: 2321, column: 13, scope: !5663)
!5663 = !DILexicalBlockFile(scope: !5645, file: !47, discriminator: 2)
!5664 = !DILocation(line: 2322, column: 5, scope: !5639)
!5665 = !DILocation(line: 2323, column: 16, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5635, file: !47, line: 2322, column: 12)
!5667 = !DILocation(line: 2323, column: 25, scope: !5666)
!5668 = !DILocation(line: 2323, column: 9, scope: !5666)
!5669 = !DILocation(line: 2326, column: 12, scope: !5596)
!5670 = !DILocation(line: 2326, column: 21, scope: !5596)
!5671 = !DILocation(line: 2326, column: 5, scope: !5596)
!5672 = !DILocation(line: 2327, column: 1, scope: !5596)
!5673 = distinct !DISubprogram(name: "av_ts_make_time_string", scope: !5674, file: !5674, line: 65, type: !5675, isLocal: true, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5674 = !DIFile(filename: "./libavutil/timestamp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5675 = !DISubroutineType(types: !5676)
!5676 = !{!1014, !1014, !1019, !2488}
!5677 = !DILocalVariable(name: "buf", arg: 1, scope: !5673, file: !5674, line: 65, type: !1014)
!5678 = !DILocation(line: 65, column: 50, scope: !5673)
!5679 = !DILocalVariable(name: "ts", arg: 2, scope: !5673, file: !5674, line: 65, type: !1019)
!5680 = !DILocation(line: 65, column: 63, scope: !5673)
!5681 = !DILocalVariable(name: "tb", arg: 3, scope: !5673, file: !5674, line: 65, type: !2488)
!5682 = !DILocation(line: 65, column: 79, scope: !5673)
!5683 = !DILocation(line: 67, column: 9, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5673, file: !5674, line: 67, column: 9)
!5685 = !DILocation(line: 67, column: 12, scope: !5684)
!5686 = !DILocation(line: 67, column: 9, scope: !5673)
!5687 = !DILocation(line: 67, column: 57, scope: !5688)
!5688 = !DILexicalBlockFile(scope: !5684, file: !5674, discriminator: 1)
!5689 = !DILocation(line: 67, column: 48, scope: !5688)
!5690 = !DILocation(line: 68, column: 19, scope: !5684)
!5691 = !DILocation(line: 68, column: 44, scope: !5684)
!5692 = !DILocation(line: 68, column: 36, scope: !5684)
!5693 = !DILocation(line: 68, column: 50, scope: !5684)
!5694 = !DILocation(line: 68, column: 48, scope: !5684)
!5695 = !DILocation(line: 68, column: 10, scope: !5688)
!5696 = !DILocation(line: 69, column: 12, scope: !5673)
!5697 = !DILocation(line: 69, column: 5, scope: !5673)
!5698 = distinct !DISubprogram(name: "av_q2d", scope: !1051, file: !1051, line: 104, type: !5699, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5699 = !DISubroutineType(types: !5700)
!5700 = !{!1020, !1050}
!5701 = !DILocalVariable(name: "a", arg: 1, scope: !5698, file: !1051, line: 104, type: !1050)
!5702 = !DILocation(line: 104, column: 40, scope: !5698)
!5703 = !DILocation(line: 105, column: 14, scope: !5698)
!5704 = !DILocation(line: 105, column: 12, scope: !5698)
!5705 = !DILocation(line: 105, column: 31, scope: !5698)
!5706 = !DILocation(line: 105, column: 20, scope: !5698)
!5707 = !DILocation(line: 105, column: 18, scope: !5698)
!5708 = !DILocation(line: 105, column: 5, scope: !5698)
!5709 = !DILocalVariable(name: "writer", arg: 1, scope: !2403, file: !47, line: 879, type: !2406)
!5710 = !DILocation(line: 879, column: 42, scope: !2403)
!5711 = !DILocation(line: 883, column: 9, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !2403, file: !47, line: 883, column: 9)
!5713 = !DILocation(line: 883, column: 36, scope: !5712)
!5714 = !DILocation(line: 883, column: 9, scope: !2403)
!5715 = !DILocation(line: 884, column: 9, scope: !5712)
!5716 = !DILocation(line: 886, column: 56, scope: !2403)
!5717 = !DILocation(line: 886, column: 50, scope: !2403)
!5718 = !DILocation(line: 886, column: 5, scope: !2403)
!5719 = !DILocation(line: 886, column: 54, scope: !2403)
!5720 = !DILocation(line: 887, column: 5, scope: !2403)
!5721 = !DILocation(line: 888, column: 1, scope: !2403)
!5722 = distinct !DISubprogram(name: "default_print_section_header", scope: !47, file: !47, line: 947, type: !2476, isLocal: true, isDefinition: true, scopeLine: 948, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5723 = !DILocalVariable(name: "wctx", arg: 1, scope: !5722, file: !47, line: 947, type: !2418)
!5724 = !DILocation(line: 947, column: 57, scope: !5722)
!5725 = !DILocalVariable(name: "def", scope: !5722, file: !47, line: 949, type: !5726)
!5726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5727, size: 64, align: 64)
!5727 = !DIDerivedType(tag: DW_TAG_typedef, name: "DefaultContext", file: !47, line: 922, baseType: !5728)
!5728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DefaultContext", file: !47, line: 917, size: 448, align: 64, elements: !5729)
!5729 = !{!5730, !5731, !5732, !5733}
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5728, file: !47, line: 918, baseType: !1107, size: 64, align: 64)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "nokey", scope: !5728, file: !47, line: 919, baseType: !1041, size: 32, align: 32, offset: 64)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "noprint_wrappers", scope: !5728, file: !47, line: 920, baseType: !1041, size: 32, align: 32, offset: 96)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "nested_section", scope: !5728, file: !47, line: 921, baseType: !5734, size: 320, align: 32, offset: 128)
!5734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 320, align: 32, elements: !2446)
!5735 = !DILocation(line: 949, column: 21, scope: !5722)
!5736 = !DILocation(line: 949, column: 27, scope: !5722)
!5737 = !DILocation(line: 949, column: 33, scope: !5722)
!5738 = !DILocalVariable(name: "buf", scope: !5722, file: !47, line: 950, type: !5739)
!5739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 256, align: 8, elements: !5740)
!5740 = !{!5741}
!5741 = !DISubrange(count: 32)
!5742 = !DILocation(line: 950, column: 10, scope: !5722)
!5743 = !DILocalVariable(name: "section", scope: !5722, file: !47, line: 951, type: !2427)
!5744 = !DILocation(line: 951, column: 27, scope: !5722)
!5745 = !DILocation(line: 951, column: 51, scope: !5722)
!5746 = !DILocation(line: 951, column: 57, scope: !5722)
!5747 = !DILocation(line: 951, column: 37, scope: !5722)
!5748 = !DILocation(line: 951, column: 43, scope: !5722)
!5749 = !DILocalVariable(name: "parent_section", scope: !5722, file: !47, line: 952, type: !2427)
!5750 = !DILocation(line: 952, column: 27, scope: !5722)
!5751 = !DILocation(line: 952, column: 44, scope: !5722)
!5752 = !DILocation(line: 952, column: 50, scope: !5722)
!5753 = !DILocation(line: 953, column: 23, scope: !5722)
!5754 = !DILocation(line: 953, column: 29, scope: !5722)
!5755 = !DILocation(line: 953, column: 34, scope: !5722)
!5756 = !DILocation(line: 953, column: 9, scope: !5722)
!5757 = !DILocation(line: 953, column: 15, scope: !5722)
!5758 = !DILocation(line: 952, column: 44, scope: !5759)
!5759 = !DILexicalBlockFile(scope: !5722, file: !47, discriminator: 1)
!5760 = !DILocation(line: 952, column: 44, scope: !5761)
!5761 = !DILexicalBlockFile(scope: !5722, file: !47, discriminator: 2)
!5762 = !DILocation(line: 952, column: 44, scope: !5763)
!5763 = !DILexicalBlockFile(scope: !5722, file: !47, discriminator: 3)
!5764 = !DILocation(line: 952, column: 27, scope: !5763)
!5765 = !DILocation(line: 955, column: 41, scope: !5722)
!5766 = !DILocation(line: 955, column: 47, scope: !5722)
!5767 = !DILocation(line: 955, column: 22, scope: !5722)
!5768 = !DILocation(line: 955, column: 28, scope: !5722)
!5769 = !DILocation(line: 955, column: 5, scope: !5722)
!5770 = !DILocation(line: 956, column: 9, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5722, file: !47, line: 956, column: 9)
!5772 = !DILocation(line: 956, column: 24, scope: !5771)
!5773 = !DILocation(line: 957, column: 11, scope: !5771)
!5774 = !DILocation(line: 957, column: 27, scope: !5771)
!5775 = !DILocation(line: 957, column: 33, scope: !5771)
!5776 = !DILocation(line: 956, column: 9, scope: !5759)
!5777 = !DILocation(line: 958, column: 29, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5771, file: !47, line: 957, column: 43)
!5779 = !DILocation(line: 958, column: 35, scope: !5778)
!5780 = !DILocation(line: 958, column: 9, scope: !5778)
!5781 = !DILocation(line: 958, column: 14, scope: !5778)
!5782 = !DILocation(line: 958, column: 42, scope: !5778)
!5783 = !DILocation(line: 959, column: 40, scope: !5778)
!5784 = !DILocation(line: 959, column: 46, scope: !5778)
!5785 = !DILocation(line: 959, column: 21, scope: !5778)
!5786 = !DILocation(line: 959, column: 27, scope: !5778)
!5787 = !DILocation(line: 960, column: 39, scope: !5778)
!5788 = !DILocation(line: 960, column: 45, scope: !5778)
!5789 = !DILocation(line: 960, column: 50, scope: !5778)
!5790 = !DILocation(line: 960, column: 20, scope: !5778)
!5791 = !DILocation(line: 960, column: 26, scope: !5778)
!5792 = !DILocation(line: 960, column: 54, scope: !5778)
!5793 = !DILocation(line: 961, column: 34, scope: !5778)
!5794 = !DILocation(line: 962, column: 47, scope: !5778)
!5795 = !DILocation(line: 962, column: 56, scope: !5778)
!5796 = !DILocation(line: 962, column: 70, scope: !5778)
!5797 = !DILocation(line: 962, column: 79, scope: !5778)
!5798 = !DILocation(line: 962, column: 34, scope: !5778)
!5799 = !DILocation(line: 961, column: 20, scope: !5778)
!5800 = !DILocation(line: 959, column: 9, scope: !5778)
!5801 = !DILocation(line: 963, column: 5, scope: !5778)
!5802 = !DILocation(line: 965, column: 9, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5722, file: !47, line: 965, column: 9)
!5804 = !DILocation(line: 965, column: 14, scope: !5803)
!5805 = !DILocation(line: 965, column: 31, scope: !5803)
!5806 = !DILocation(line: 965, column: 54, scope: !5807)
!5807 = !DILexicalBlockFile(scope: !5803, file: !47, discriminator: 1)
!5808 = !DILocation(line: 965, column: 60, scope: !5807)
!5809 = !DILocation(line: 965, column: 34, scope: !5807)
!5810 = !DILocation(line: 965, column: 39, scope: !5807)
!5811 = !DILocation(line: 965, column: 9, scope: !5807)
!5812 = !DILocation(line: 966, column: 9, scope: !5803)
!5813 = !DILocation(line: 968, column: 11, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5722, file: !47, line: 968, column: 9)
!5815 = !DILocation(line: 968, column: 20, scope: !5814)
!5816 = !DILocation(line: 968, column: 26, scope: !5814)
!5817 = !DILocation(line: 968, column: 9, scope: !5722)
!5818 = !DILocation(line: 969, column: 40, scope: !5814)
!5819 = !DILocation(line: 969, column: 58, scope: !5814)
!5820 = !DILocation(line: 969, column: 67, scope: !5814)
!5821 = !DILocation(line: 969, column: 26, scope: !5814)
!5822 = !DILocation(line: 969, column: 9, scope: !5823)
!5823 = !DILexicalBlockFile(scope: !5814, file: !47, discriminator: 1)
!5824 = !DILocation(line: 969, column: 9, scope: !5814)
!5825 = !DILocation(line: 970, column: 1, scope: !5722)
!5826 = distinct !DISubprogram(name: "default_print_section_footer", scope: !47, file: !47, line: 972, type: !2476, isLocal: true, isDefinition: true, scopeLine: 973, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5827 = !DILocalVariable(name: "wctx", arg: 1, scope: !5826, file: !47, line: 972, type: !2418)
!5828 = !DILocation(line: 972, column: 57, scope: !5826)
!5829 = !DILocalVariable(name: "def", scope: !5826, file: !47, line: 974, type: !5726)
!5830 = !DILocation(line: 974, column: 21, scope: !5826)
!5831 = !DILocation(line: 974, column: 27, scope: !5826)
!5832 = !DILocation(line: 974, column: 33, scope: !5826)
!5833 = !DILocalVariable(name: "section", scope: !5826, file: !47, line: 975, type: !2427)
!5834 = !DILocation(line: 975, column: 27, scope: !5826)
!5835 = !DILocation(line: 975, column: 51, scope: !5826)
!5836 = !DILocation(line: 975, column: 57, scope: !5826)
!5837 = !DILocation(line: 975, column: 37, scope: !5826)
!5838 = !DILocation(line: 975, column: 43, scope: !5826)
!5839 = !DILocalVariable(name: "buf", scope: !5826, file: !47, line: 976, type: !5739)
!5840 = !DILocation(line: 976, column: 10, scope: !5826)
!5841 = !DILocation(line: 978, column: 9, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5826, file: !47, line: 978, column: 9)
!5843 = !DILocation(line: 978, column: 14, scope: !5842)
!5844 = !DILocation(line: 978, column: 31, scope: !5842)
!5845 = !DILocation(line: 978, column: 54, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !5842, file: !47, discriminator: 1)
!5847 = !DILocation(line: 978, column: 60, scope: !5846)
!5848 = !DILocation(line: 978, column: 34, scope: !5846)
!5849 = !DILocation(line: 978, column: 39, scope: !5846)
!5850 = !DILocation(line: 978, column: 9, scope: !5846)
!5851 = !DILocation(line: 979, column: 9, scope: !5842)
!5852 = !DILocation(line: 981, column: 11, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5826, file: !47, line: 981, column: 9)
!5854 = !DILocation(line: 981, column: 20, scope: !5853)
!5855 = !DILocation(line: 981, column: 26, scope: !5853)
!5856 = !DILocation(line: 981, column: 9, scope: !5826)
!5857 = !DILocation(line: 982, column: 41, scope: !5853)
!5858 = !DILocation(line: 982, column: 59, scope: !5853)
!5859 = !DILocation(line: 982, column: 68, scope: !5853)
!5860 = !DILocation(line: 982, column: 27, scope: !5853)
!5861 = !DILocation(line: 982, column: 9, scope: !5862)
!5862 = !DILexicalBlockFile(scope: !5853, file: !47, discriminator: 1)
!5863 = !DILocation(line: 982, column: 9, scope: !5853)
!5864 = !DILocation(line: 983, column: 1, scope: !5826)
!5865 = distinct !DISubprogram(name: "default_print_int", scope: !47, file: !47, line: 994, type: !2482, isLocal: true, isDefinition: true, scopeLine: 995, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5866 = !DILocalVariable(name: "wctx", arg: 1, scope: !5865, file: !47, line: 994, type: !2418)
!5867 = !DILocation(line: 994, column: 46, scope: !5865)
!5868 = !DILocalVariable(name: "key", arg: 2, scope: !5865, file: !47, line: 994, type: !1027)
!5869 = !DILocation(line: 994, column: 64, scope: !5865)
!5870 = !DILocalVariable(name: "value", arg: 3, scope: !5865, file: !47, line: 994, type: !1109)
!5871 = !DILocation(line: 994, column: 83, scope: !5865)
!5872 = !DILocalVariable(name: "def", scope: !5865, file: !47, line: 996, type: !5726)
!5873 = !DILocation(line: 996, column: 21, scope: !5865)
!5874 = !DILocation(line: 996, column: 27, scope: !5865)
!5875 = !DILocation(line: 996, column: 33, scope: !5865)
!5876 = !DILocation(line: 998, column: 10, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5865, file: !47, line: 998, column: 9)
!5878 = !DILocation(line: 998, column: 15, scope: !5877)
!5879 = !DILocation(line: 998, column: 9, scope: !5865)
!5880 = !DILocation(line: 999, column: 44, scope: !5877)
!5881 = !DILocation(line: 999, column: 50, scope: !5877)
!5882 = !DILocation(line: 999, column: 25, scope: !5877)
!5883 = !DILocation(line: 999, column: 31, scope: !5877)
!5884 = !DILocation(line: 999, column: 57, scope: !5877)
!5885 = !DILocation(line: 999, column: 62, scope: !5877)
!5886 = !DILocation(line: 999, column: 9, scope: !5877)
!5887 = !DILocation(line: 1000, column: 22, scope: !5865)
!5888 = !DILocation(line: 1000, column: 5, scope: !5865)
!5889 = !DILocation(line: 1001, column: 1, scope: !5865)
!5890 = distinct !DISubprogram(name: "default_print_str", scope: !47, file: !47, line: 985, type: !2491, isLocal: true, isDefinition: true, scopeLine: 986, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5891 = !DILocalVariable(name: "wctx", arg: 1, scope: !5890, file: !47, line: 985, type: !2418)
!5892 = !DILocation(line: 985, column: 46, scope: !5890)
!5893 = !DILocalVariable(name: "key", arg: 2, scope: !5890, file: !47, line: 985, type: !1027)
!5894 = !DILocation(line: 985, column: 64, scope: !5890)
!5895 = !DILocalVariable(name: "value", arg: 3, scope: !5890, file: !47, line: 985, type: !1027)
!5896 = !DILocation(line: 985, column: 81, scope: !5890)
!5897 = !DILocalVariable(name: "def", scope: !5890, file: !47, line: 987, type: !5726)
!5898 = !DILocation(line: 987, column: 21, scope: !5890)
!5899 = !DILocation(line: 987, column: 27, scope: !5890)
!5900 = !DILocation(line: 987, column: 33, scope: !5890)
!5901 = !DILocation(line: 989, column: 10, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5890, file: !47, line: 989, column: 9)
!5903 = !DILocation(line: 989, column: 15, scope: !5902)
!5904 = !DILocation(line: 989, column: 9, scope: !5890)
!5905 = !DILocation(line: 990, column: 44, scope: !5902)
!5906 = !DILocation(line: 990, column: 50, scope: !5902)
!5907 = !DILocation(line: 990, column: 25, scope: !5902)
!5908 = !DILocation(line: 990, column: 31, scope: !5902)
!5909 = !DILocation(line: 990, column: 57, scope: !5902)
!5910 = !DILocation(line: 990, column: 62, scope: !5902)
!5911 = !DILocation(line: 990, column: 9, scope: !5902)
!5912 = !DILocation(line: 991, column: 20, scope: !5890)
!5913 = !DILocation(line: 991, column: 5, scope: !5890)
!5914 = !DILocation(line: 992, column: 1, scope: !5890)
!5915 = distinct !DISubprogram(name: "default_get_name", scope: !47, file: !47, line: 935, type: !1031, isLocal: true, isDefinition: true, scopeLine: 935, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5916 = !DILocalVariable(name: "ctx", arg: 1, scope: !5915, file: !47, line: 935, type: !1013)
!5917 = !DILocation(line: 935, column: 43, scope: !5915)
!5918 = !DILocation(line: 935, column: 50, scope: !5915)
!5919 = distinct !DISubprogram(name: "upcase_string", scope: !47, file: !47, line: 938, type: !5920, isLocal: true, isDefinition: true, scopeLine: 939, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5920 = !DISubroutineType(types: !5921)
!5921 = !{!1014, !1014, !1212, !1027}
!5922 = !DILocalVariable(name: "dst", arg: 1, scope: !5919, file: !47, line: 938, type: !1014)
!5923 = !DILocation(line: 938, column: 41, scope: !5919)
!5924 = !DILocalVariable(name: "dst_size", arg: 2, scope: !5919, file: !47, line: 938, type: !1212)
!5925 = !DILocation(line: 938, column: 53, scope: !5919)
!5926 = !DILocalVariable(name: "src", arg: 3, scope: !5919, file: !47, line: 938, type: !1027)
!5927 = !DILocation(line: 938, column: 75, scope: !5919)
!5928 = !DILocalVariable(name: "i", scope: !5919, file: !47, line: 940, type: !1041)
!5929 = !DILocation(line: 940, column: 9, scope: !5919)
!5930 = !DILocation(line: 941, column: 12, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5919, file: !47, line: 941, column: 5)
!5932 = !DILocation(line: 941, column: 10, scope: !5931)
!5933 = !DILocation(line: 941, column: 21, scope: !5934)
!5934 = !DILexicalBlockFile(scope: !5935, file: !47, discriminator: 1)
!5935 = distinct !DILexicalBlock(scope: !5931, file: !47, line: 941, column: 5)
!5936 = !DILocation(line: 941, column: 17, scope: !5934)
!5937 = !DILocation(line: 941, column: 24, scope: !5934)
!5938 = !DILocation(line: 941, column: 27, scope: !5939)
!5939 = !DILexicalBlockFile(scope: !5935, file: !47, discriminator: 2)
!5940 = !DILocation(line: 941, column: 31, scope: !5939)
!5941 = !DILocation(line: 941, column: 39, scope: !5939)
!5942 = !DILocation(line: 941, column: 29, scope: !5939)
!5943 = !DILocation(line: 941, column: 5, scope: !5944)
!5944 = !DILexicalBlockFile(scope: !5931, file: !47, discriminator: 3)
!5945 = !DILocation(line: 942, column: 33, scope: !5935)
!5946 = !DILocation(line: 942, column: 29, scope: !5935)
!5947 = !DILocation(line: 942, column: 18, scope: !5935)
!5948 = !DILocation(line: 942, column: 13, scope: !5935)
!5949 = !DILocation(line: 942, column: 9, scope: !5935)
!5950 = !DILocation(line: 942, column: 16, scope: !5935)
!5951 = !DILocation(line: 941, column: 44, scope: !5952)
!5952 = !DILexicalBlockFile(scope: !5935, file: !47, discriminator: 4)
!5953 = !DILocation(line: 941, column: 5, scope: !5952)
!5954 = distinct !{!5954, !5955}
!5955 = !DILocation(line: 941, column: 5, scope: !5919)
!5956 = !DILocation(line: 943, column: 9, scope: !5919)
!5957 = !DILocation(line: 943, column: 5, scope: !5919)
!5958 = !DILocation(line: 943, column: 12, scope: !5919)
!5959 = !DILocation(line: 944, column: 12, scope: !5919)
!5960 = !DILocation(line: 944, column: 5, scope: !5919)
!5961 = distinct !DISubprogram(name: "av_toupper", scope: !5962, file: !5962, line: 231, type: !3334, isLocal: true, isDefinition: true, scopeLine: 232, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5962 = !DIFile(filename: "./libavutil/avstring.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5963 = !DILocalVariable(name: "c", arg: 1, scope: !5961, file: !5962, line: 231, type: !1041)
!5964 = !DILocation(line: 231, column: 57, scope: !5961)
!5965 = !DILocation(line: 233, column: 9, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5961, file: !5962, line: 233, column: 9)
!5967 = !DILocation(line: 233, column: 11, scope: !5966)
!5968 = !DILocation(line: 233, column: 18, scope: !5966)
!5969 = !DILocation(line: 233, column: 21, scope: !5970)
!5970 = !DILexicalBlockFile(scope: !5966, file: !5962, discriminator: 1)
!5971 = !DILocation(line: 233, column: 23, scope: !5970)
!5972 = !DILocation(line: 233, column: 9, scope: !5970)
!5973 = !DILocation(line: 234, column: 11, scope: !5966)
!5974 = !DILocation(line: 234, column: 9, scope: !5966)
!5975 = !DILocation(line: 235, column: 12, scope: !5961)
!5976 = !DILocation(line: 235, column: 5, scope: !5961)
!5977 = distinct !DISubprogram(name: "compact_init", scope: !47, file: !47, line: 1095, type: !2416, isLocal: true, isDefinition: true, scopeLine: 1096, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!5978 = !DILocalVariable(name: "wctx", arg: 1, scope: !5977, file: !47, line: 1095, type: !2418)
!5979 = !DILocation(line: 1095, column: 62, scope: !5977)
!5980 = !DILocalVariable(name: "compact", scope: !5977, file: !47, line: 1097, type: !5981)
!5981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5982, size: 64, align: 64)
!5982 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompactContext", file: !47, line: 1076, baseType: !5983)
!5983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CompactContext", file: !47, line: 1065, size: 1344, align: 64, elements: !5984)
!5984 = !{!5985, !5986, !5987, !5988, !5989, !5990, !5991, !5995, !5996, !5997}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5983, file: !47, line: 1066, baseType: !1107, size: 64, align: 64)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "item_sep_str", scope: !5983, file: !47, line: 1067, baseType: !1014, size: 64, align: 64, offset: 64)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "item_sep", scope: !5983, file: !47, line: 1068, baseType: !1015, size: 8, align: 8, offset: 128)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "nokey", scope: !5983, file: !47, line: 1069, baseType: !1041, size: 32, align: 32, offset: 160)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "print_section", scope: !5983, file: !47, line: 1070, baseType: !1041, size: 32, align: 32, offset: 192)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "escape_mode_str", scope: !5983, file: !47, line: 1071, baseType: !1014, size: 64, align: 64, offset: 256)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "escape_str", scope: !5983, file: !47, line: 1072, baseType: !5992, size: 64, align: 64, offset: 320)
!5992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5993, size: 64, align: 64)
!5993 = !DISubroutineType(types: !5994)
!5994 = !{!1027, !2526, !1027, !1028, !1013}
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "nested_section", scope: !5983, file: !47, line: 1073, baseType: !5734, size: 320, align: 32, offset: 384)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "has_nested_elems", scope: !5983, file: !47, line: 1074, baseType: !5734, size: 320, align: 32, offset: 704)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "terminate_line", scope: !5983, file: !47, line: 1075, baseType: !5734, size: 320, align: 32, offset: 1024)
!5998 = !DILocation(line: 1097, column: 21, scope: !5977)
!5999 = !DILocation(line: 1097, column: 31, scope: !5977)
!6000 = !DILocation(line: 1097, column: 37, scope: !5977)
!6001 = !DILocation(line: 1099, column: 16, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5977, file: !47, line: 1099, column: 9)
!6003 = !DILocation(line: 1099, column: 25, scope: !6002)
!6004 = !DILocation(line: 1099, column: 9, scope: !6002)
!6005 = !DILocation(line: 1099, column: 39, scope: !6002)
!6006 = !DILocation(line: 1099, column: 9, scope: !5977)
!6007 = !DILocation(line: 1100, column: 16, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6002, file: !47, line: 1099, column: 45)
!6009 = !DILocation(line: 1101, column: 16, scope: !6008)
!6010 = !DILocation(line: 1101, column: 25, scope: !6008)
!6011 = !DILocation(line: 1100, column: 9, scope: !6008)
!6012 = !DILocation(line: 1102, column: 9, scope: !6008)
!6013 = !DILocation(line: 1104, column: 25, scope: !5977)
!6014 = !DILocation(line: 1104, column: 34, scope: !5977)
!6015 = !DILocation(line: 1104, column: 5, scope: !5977)
!6016 = !DILocation(line: 1104, column: 14, scope: !5977)
!6017 = !DILocation(line: 1104, column: 23, scope: !5977)
!6018 = !DILocation(line: 1106, column: 17, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !5977, file: !47, line: 1106, column: 9)
!6020 = !DILocation(line: 1106, column: 26, scope: !6019)
!6021 = !DILocation(line: 1106, column: 10, scope: !6019)
!6022 = !DILocation(line: 1106, column: 9, scope: !5977)
!6023 = !DILocation(line: 1106, column: 52, scope: !6024)
!6024 = !DILexicalBlockFile(scope: !6019, file: !47, discriminator: 1)
!6025 = !DILocation(line: 1106, column: 61, scope: !6024)
!6026 = !DILocation(line: 1106, column: 72, scope: !6024)
!6027 = !DILocation(line: 1107, column: 22, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6019, file: !47, line: 1107, column: 14)
!6029 = !DILocation(line: 1107, column: 31, scope: !6028)
!6030 = !DILocation(line: 1107, column: 15, scope: !6028)
!6031 = !DILocation(line: 1107, column: 14, scope: !6019)
!6032 = !DILocation(line: 1107, column: 55, scope: !6033)
!6033 = !DILexicalBlockFile(scope: !6028, file: !47, discriminator: 1)
!6034 = !DILocation(line: 1107, column: 64, scope: !6033)
!6035 = !DILocation(line: 1107, column: 75, scope: !6033)
!6036 = !DILocation(line: 1108, column: 22, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6028, file: !47, line: 1108, column: 14)
!6038 = !DILocation(line: 1108, column: 31, scope: !6037)
!6039 = !DILocation(line: 1108, column: 15, scope: !6037)
!6040 = !DILocation(line: 1108, column: 14, scope: !6028)
!6041 = !DILocation(line: 1108, column: 57, scope: !6042)
!6042 = !DILexicalBlockFile(scope: !6037, file: !47, discriminator: 1)
!6043 = !DILocation(line: 1108, column: 66, scope: !6042)
!6044 = !DILocation(line: 1108, column: 77, scope: !6042)
!6045 = !DILocation(line: 1110, column: 16, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6037, file: !47, line: 1109, column: 10)
!6047 = !DILocation(line: 1110, column: 56, scope: !6046)
!6048 = !DILocation(line: 1110, column: 65, scope: !6046)
!6049 = !DILocation(line: 1110, column: 9, scope: !6046)
!6050 = !DILocation(line: 1111, column: 9, scope: !6046)
!6051 = !DILocation(line: 1114, column: 5, scope: !5977)
!6052 = !DILocation(line: 1115, column: 1, scope: !5977)
!6053 = distinct !DISubprogram(name: "compact_print_section_header", scope: !47, file: !47, line: 1117, type: !2476, isLocal: true, isDefinition: true, scopeLine: 1118, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6054 = !DILocalVariable(name: "wctx", arg: 1, scope: !6053, file: !47, line: 1117, type: !2418)
!6055 = !DILocation(line: 1117, column: 57, scope: !6053)
!6056 = !DILocalVariable(name: "compact", scope: !6053, file: !47, line: 1119, type: !5981)
!6057 = !DILocation(line: 1119, column: 21, scope: !6053)
!6058 = !DILocation(line: 1119, column: 31, scope: !6053)
!6059 = !DILocation(line: 1119, column: 37, scope: !6053)
!6060 = !DILocalVariable(name: "section", scope: !6053, file: !47, line: 1120, type: !2427)
!6061 = !DILocation(line: 1120, column: 27, scope: !6053)
!6062 = !DILocation(line: 1120, column: 51, scope: !6053)
!6063 = !DILocation(line: 1120, column: 57, scope: !6053)
!6064 = !DILocation(line: 1120, column: 37, scope: !6053)
!6065 = !DILocation(line: 1120, column: 43, scope: !6053)
!6066 = !DILocalVariable(name: "parent_section", scope: !6053, file: !47, line: 1121, type: !2427)
!6067 = !DILocation(line: 1121, column: 27, scope: !6053)
!6068 = !DILocation(line: 1121, column: 44, scope: !6053)
!6069 = !DILocation(line: 1121, column: 50, scope: !6053)
!6070 = !DILocation(line: 1122, column: 23, scope: !6053)
!6071 = !DILocation(line: 1122, column: 29, scope: !6053)
!6072 = !DILocation(line: 1122, column: 34, scope: !6053)
!6073 = !DILocation(line: 1122, column: 9, scope: !6053)
!6074 = !DILocation(line: 1122, column: 15, scope: !6053)
!6075 = !DILocation(line: 1121, column: 44, scope: !6076)
!6076 = !DILexicalBlockFile(scope: !6053, file: !47, discriminator: 1)
!6077 = !DILocation(line: 1121, column: 44, scope: !6078)
!6078 = !DILexicalBlockFile(scope: !6053, file: !47, discriminator: 2)
!6079 = !DILocation(line: 1121, column: 44, scope: !6080)
!6080 = !DILexicalBlockFile(scope: !6053, file: !47, discriminator: 3)
!6081 = !DILocation(line: 1121, column: 27, scope: !6080)
!6082 = !DILocation(line: 1123, column: 29, scope: !6053)
!6083 = !DILocation(line: 1123, column: 35, scope: !6053)
!6084 = !DILocation(line: 1123, column: 5, scope: !6053)
!6085 = !DILocation(line: 1123, column: 14, scope: !6053)
!6086 = !DILocation(line: 1123, column: 42, scope: !6053)
!6087 = !DILocation(line: 1124, column: 31, scope: !6053)
!6088 = !DILocation(line: 1124, column: 37, scope: !6053)
!6089 = !DILocation(line: 1124, column: 5, scope: !6053)
!6090 = !DILocation(line: 1124, column: 14, scope: !6053)
!6091 = !DILocation(line: 1124, column: 44, scope: !6053)
!6092 = !DILocation(line: 1126, column: 41, scope: !6053)
!6093 = !DILocation(line: 1126, column: 47, scope: !6053)
!6094 = !DILocation(line: 1126, column: 22, scope: !6053)
!6095 = !DILocation(line: 1126, column: 28, scope: !6053)
!6096 = !DILocation(line: 1126, column: 5, scope: !6053)
!6097 = !DILocation(line: 1127, column: 11, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6053, file: !47, line: 1127, column: 9)
!6099 = !DILocation(line: 1127, column: 20, scope: !6098)
!6100 = !DILocation(line: 1127, column: 26, scope: !6098)
!6101 = !DILocation(line: 1127, column: 31, scope: !6098)
!6102 = !DILocation(line: 1127, column: 34, scope: !6103)
!6103 = !DILexicalBlockFile(scope: !6098, file: !47, discriminator: 1)
!6104 = !DILocation(line: 1127, column: 49, scope: !6103)
!6105 = !DILocation(line: 1128, column: 11, scope: !6098)
!6106 = !DILocation(line: 1128, column: 27, scope: !6098)
!6107 = !DILocation(line: 1128, column: 33, scope: !6098)
!6108 = !DILocation(line: 1127, column: 9, scope: !6078)
!6109 = !DILocation(line: 1129, column: 33, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6098, file: !47, line: 1128, column: 43)
!6111 = !DILocation(line: 1129, column: 39, scope: !6110)
!6112 = !DILocation(line: 1129, column: 9, scope: !6110)
!6113 = !DILocation(line: 1129, column: 18, scope: !6110)
!6114 = !DILocation(line: 1129, column: 46, scope: !6110)
!6115 = !DILocation(line: 1130, column: 35, scope: !6110)
!6116 = !DILocation(line: 1130, column: 41, scope: !6110)
!6117 = !DILocation(line: 1130, column: 46, scope: !6110)
!6118 = !DILocation(line: 1130, column: 9, scope: !6110)
!6119 = !DILocation(line: 1130, column: 18, scope: !6110)
!6120 = !DILocation(line: 1130, column: 50, scope: !6110)
!6121 = !DILocation(line: 1131, column: 40, scope: !6110)
!6122 = !DILocation(line: 1131, column: 46, scope: !6110)
!6123 = !DILocation(line: 1131, column: 21, scope: !6110)
!6124 = !DILocation(line: 1131, column: 27, scope: !6110)
!6125 = !DILocation(line: 1132, column: 39, scope: !6110)
!6126 = !DILocation(line: 1132, column: 45, scope: !6110)
!6127 = !DILocation(line: 1132, column: 50, scope: !6110)
!6128 = !DILocation(line: 1132, column: 20, scope: !6110)
!6129 = !DILocation(line: 1132, column: 26, scope: !6110)
!6130 = !DILocation(line: 1132, column: 54, scope: !6110)
!6131 = !DILocation(line: 1133, column: 41, scope: !6110)
!6132 = !DILocation(line: 1133, column: 50, scope: !6110)
!6133 = !DILocation(line: 1133, column: 64, scope: !6110)
!6134 = !DILocation(line: 1133, column: 73, scope: !6110)
!6135 = !DILocation(line: 1133, column: 28, scope: !6110)
!6136 = !DILocation(line: 1131, column: 9, scope: !6110)
!6137 = !DILocation(line: 1134, column: 52, scope: !6110)
!6138 = !DILocation(line: 1134, column: 58, scope: !6110)
!6139 = !DILocation(line: 1134, column: 63, scope: !6110)
!6140 = !DILocation(line: 1134, column: 38, scope: !6110)
!6141 = !DILocation(line: 1134, column: 44, scope: !6110)
!6142 = !DILocation(line: 1134, column: 23, scope: !6110)
!6143 = !DILocation(line: 1134, column: 29, scope: !6110)
!6144 = !DILocation(line: 1134, column: 9, scope: !6110)
!6145 = !DILocation(line: 1134, column: 15, scope: !6110)
!6146 = !DILocation(line: 1134, column: 36, scope: !6110)
!6147 = !DILocation(line: 1135, column: 5, scope: !6110)
!6148 = !DILocation(line: 1136, column: 13, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6150, file: !47, line: 1136, column: 13)
!6150 = distinct !DILexicalBlock(scope: !6098, file: !47, line: 1135, column: 12)
!6151 = !DILocation(line: 1136, column: 28, scope: !6149)
!6152 = !DILocation(line: 1136, column: 57, scope: !6153)
!6153 = !DILexicalBlockFile(scope: !6149, file: !47, discriminator: 1)
!6154 = !DILocation(line: 1136, column: 63, scope: !6153)
!6155 = !DILocation(line: 1136, column: 68, scope: !6153)
!6156 = !DILocation(line: 1136, column: 31, scope: !6153)
!6157 = !DILocation(line: 1136, column: 40, scope: !6153)
!6158 = !DILocation(line: 1136, column: 72, scope: !6153)
!6159 = !DILocation(line: 1137, column: 14, scope: !6149)
!6160 = !DILocation(line: 1137, column: 23, scope: !6149)
!6161 = !DILocation(line: 1137, column: 29, scope: !6149)
!6162 = !DILocation(line: 1136, column: 13, scope: !6163)
!6163 = !DILexicalBlockFile(scope: !6150, file: !47, discriminator: 2)
!6164 = !DILocation(line: 1138, column: 37, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6149, file: !47, line: 1137, column: 35)
!6166 = !DILocation(line: 1138, column: 43, scope: !6165)
!6167 = !DILocation(line: 1138, column: 48, scope: !6165)
!6168 = !DILocation(line: 1138, column: 13, scope: !6165)
!6169 = !DILocation(line: 1138, column: 22, scope: !6165)
!6170 = !DILocation(line: 1138, column: 52, scope: !6165)
!6171 = !DILocation(line: 1139, column: 13, scope: !6165)
!6172 = !DILocation(line: 1140, column: 9, scope: !6165)
!6173 = !DILocation(line: 1141, column: 13, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6150, file: !47, line: 1141, column: 13)
!6175 = !DILocation(line: 1141, column: 22, scope: !6174)
!6176 = !DILocation(line: 1141, column: 36, scope: !6174)
!6177 = !DILocation(line: 1142, column: 15, scope: !6174)
!6178 = !DILocation(line: 1142, column: 24, scope: !6174)
!6179 = !DILocation(line: 1142, column: 30, scope: !6174)
!6180 = !DILocation(line: 1141, column: 13, scope: !6181)
!6181 = !DILexicalBlockFile(scope: !6150, file: !47, discriminator: 1)
!6182 = !DILocation(line: 1143, column: 28, scope: !6174)
!6183 = !DILocation(line: 1143, column: 37, scope: !6174)
!6184 = !DILocation(line: 1143, column: 43, scope: !6174)
!6185 = !DILocation(line: 1143, column: 52, scope: !6174)
!6186 = !DILocation(line: 1143, column: 13, scope: !6174)
!6187 = !DILocation(line: 1145, column: 1, scope: !6053)
!6188 = distinct !DISubprogram(name: "compact_print_section_footer", scope: !47, file: !47, line: 1147, type: !2476, isLocal: true, isDefinition: true, scopeLine: 1148, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6189 = !DILocalVariable(name: "wctx", arg: 1, scope: !6188, file: !47, line: 1147, type: !2418)
!6190 = !DILocation(line: 1147, column: 57, scope: !6188)
!6191 = !DILocalVariable(name: "compact", scope: !6188, file: !47, line: 1149, type: !5981)
!6192 = !DILocation(line: 1149, column: 21, scope: !6188)
!6193 = !DILocation(line: 1149, column: 31, scope: !6188)
!6194 = !DILocation(line: 1149, column: 37, scope: !6188)
!6195 = !DILocation(line: 1151, column: 34, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6188, file: !47, line: 1151, column: 9)
!6197 = !DILocation(line: 1151, column: 40, scope: !6196)
!6198 = !DILocation(line: 1151, column: 10, scope: !6196)
!6199 = !DILocation(line: 1151, column: 19, scope: !6196)
!6200 = !DILocation(line: 1151, column: 47, scope: !6196)
!6201 = !DILocation(line: 1152, column: 33, scope: !6196)
!6202 = !DILocation(line: 1152, column: 39, scope: !6196)
!6203 = !DILocation(line: 1152, column: 9, scope: !6196)
!6204 = !DILocation(line: 1152, column: 18, scope: !6196)
!6205 = !DILocation(line: 1152, column: 46, scope: !6196)
!6206 = !DILocation(line: 1153, column: 25, scope: !6196)
!6207 = !DILocation(line: 1153, column: 31, scope: !6196)
!6208 = !DILocation(line: 1153, column: 11, scope: !6196)
!6209 = !DILocation(line: 1153, column: 17, scope: !6196)
!6210 = !DILocation(line: 1153, column: 39, scope: !6196)
!6211 = !DILocation(line: 1153, column: 45, scope: !6196)
!6212 = !DILocation(line: 1151, column: 9, scope: !6213)
!6213 = !DILexicalBlockFile(scope: !6188, file: !47, discriminator: 1)
!6214 = !DILocation(line: 1154, column: 9, scope: !6196)
!6215 = !DILocation(line: 1155, column: 1, scope: !6188)
!6216 = distinct !DISubprogram(name: "compact_print_int", scope: !47, file: !47, line: 1170, type: !2482, isLocal: true, isDefinition: true, scopeLine: 1171, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6217 = !DILocalVariable(name: "wctx", arg: 1, scope: !6216, file: !47, line: 1170, type: !2418)
!6218 = !DILocation(line: 1170, column: 46, scope: !6216)
!6219 = !DILocalVariable(name: "key", arg: 2, scope: !6216, file: !47, line: 1170, type: !1027)
!6220 = !DILocation(line: 1170, column: 64, scope: !6216)
!6221 = !DILocalVariable(name: "value", arg: 3, scope: !6216, file: !47, line: 1170, type: !1109)
!6222 = !DILocation(line: 1170, column: 83, scope: !6216)
!6223 = !DILocalVariable(name: "compact", scope: !6216, file: !47, line: 1172, type: !5981)
!6224 = !DILocation(line: 1172, column: 21, scope: !6216)
!6225 = !DILocation(line: 1172, column: 31, scope: !6216)
!6226 = !DILocation(line: 1172, column: 37, scope: !6216)
!6227 = !DILocation(line: 1174, column: 23, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6216, file: !47, line: 1174, column: 9)
!6229 = !DILocation(line: 1174, column: 29, scope: !6228)
!6230 = !DILocation(line: 1174, column: 9, scope: !6228)
!6231 = !DILocation(line: 1174, column: 15, scope: !6228)
!6232 = !DILocation(line: 1174, column: 9, scope: !6216)
!6233 = !DILocation(line: 1174, column: 50, scope: !6234)
!6234 = !DILexicalBlockFile(scope: !6228, file: !47, discriminator: 1)
!6235 = !DILocation(line: 1174, column: 59, scope: !6234)
!6236 = !DILocation(line: 1174, column: 37, scope: !6234)
!6237 = !DILocation(line: 1175, column: 10, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6216, file: !47, line: 1175, column: 9)
!6239 = !DILocation(line: 1175, column: 19, scope: !6238)
!6240 = !DILocation(line: 1175, column: 9, scope: !6216)
!6241 = !DILocation(line: 1176, column: 44, scope: !6238)
!6242 = !DILocation(line: 1176, column: 50, scope: !6238)
!6243 = !DILocation(line: 1176, column: 25, scope: !6238)
!6244 = !DILocation(line: 1176, column: 31, scope: !6238)
!6245 = !DILocation(line: 1176, column: 57, scope: !6238)
!6246 = !DILocation(line: 1176, column: 62, scope: !6238)
!6247 = !DILocation(line: 1176, column: 9, scope: !6238)
!6248 = !DILocation(line: 1177, column: 20, scope: !6216)
!6249 = !DILocation(line: 1177, column: 5, scope: !6216)
!6250 = !DILocation(line: 1178, column: 1, scope: !6216)
!6251 = distinct !DISubprogram(name: "compact_print_str", scope: !47, file: !47, line: 1157, type: !2491, isLocal: true, isDefinition: true, scopeLine: 1158, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6252 = !DILocalVariable(name: "wctx", arg: 1, scope: !6251, file: !47, line: 1157, type: !2418)
!6253 = !DILocation(line: 1157, column: 46, scope: !6251)
!6254 = !DILocalVariable(name: "key", arg: 2, scope: !6251, file: !47, line: 1157, type: !1027)
!6255 = !DILocation(line: 1157, column: 64, scope: !6251)
!6256 = !DILocalVariable(name: "value", arg: 3, scope: !6251, file: !47, line: 1157, type: !1027)
!6257 = !DILocation(line: 1157, column: 81, scope: !6251)
!6258 = !DILocalVariable(name: "compact", scope: !6251, file: !47, line: 1159, type: !5981)
!6259 = !DILocation(line: 1159, column: 21, scope: !6251)
!6260 = !DILocation(line: 1159, column: 31, scope: !6251)
!6261 = !DILocation(line: 1159, column: 37, scope: !6251)
!6262 = !DILocalVariable(name: "buf", scope: !6251, file: !47, line: 1160, type: !2452)
!6263 = !DILocation(line: 1160, column: 14, scope: !6251)
!6264 = !DILocation(line: 1162, column: 23, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6251, file: !47, line: 1162, column: 9)
!6266 = !DILocation(line: 1162, column: 29, scope: !6265)
!6267 = !DILocation(line: 1162, column: 9, scope: !6265)
!6268 = !DILocation(line: 1162, column: 15, scope: !6265)
!6269 = !DILocation(line: 1162, column: 9, scope: !6251)
!6270 = !DILocation(line: 1162, column: 50, scope: !6271)
!6271 = !DILexicalBlockFile(scope: !6265, file: !47, discriminator: 1)
!6272 = !DILocation(line: 1162, column: 59, scope: !6271)
!6273 = !DILocation(line: 1162, column: 37, scope: !6271)
!6274 = !DILocation(line: 1163, column: 10, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6251, file: !47, line: 1163, column: 9)
!6276 = !DILocation(line: 1163, column: 19, scope: !6275)
!6277 = !DILocation(line: 1163, column: 9, scope: !6251)
!6278 = !DILocation(line: 1164, column: 44, scope: !6275)
!6279 = !DILocation(line: 1164, column: 50, scope: !6275)
!6280 = !DILocation(line: 1164, column: 25, scope: !6275)
!6281 = !DILocation(line: 1164, column: 31, scope: !6275)
!6282 = !DILocation(line: 1164, column: 57, scope: !6275)
!6283 = !DILocation(line: 1164, column: 62, scope: !6275)
!6284 = !DILocation(line: 1164, column: 9, scope: !6275)
!6285 = !DILocation(line: 1165, column: 5, scope: !6251)
!6286 = !DILocation(line: 1166, column: 18, scope: !6251)
!6287 = !DILocation(line: 1166, column: 27, scope: !6251)
!6288 = !DILocation(line: 1166, column: 44, scope: !6251)
!6289 = !DILocation(line: 1166, column: 51, scope: !6251)
!6290 = !DILocation(line: 1166, column: 60, scope: !6251)
!6291 = !DILocation(line: 1166, column: 70, scope: !6251)
!6292 = !DILocation(line: 1166, column: 5, scope: !6293)
!6293 = !DILexicalBlockFile(scope: !6251, file: !47, discriminator: 1)
!6294 = !DILocation(line: 1167, column: 5, scope: !6251)
!6295 = !DILocation(line: 1168, column: 1, scope: !6251)
!6296 = distinct !DISubprogram(name: "compact_get_name", scope: !47, file: !47, line: 1093, type: !1031, isLocal: true, isDefinition: true, scopeLine: 1093, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6297 = !DILocalVariable(name: "ctx", arg: 1, scope: !6296, file: !47, line: 1093, type: !1013)
!6298 = !DILocation(line: 1093, column: 43, scope: !6296)
!6299 = !DILocation(line: 1093, column: 50, scope: !6296)
!6300 = distinct !DISubprogram(name: "none_escape_str", scope: !47, file: !47, line: 1060, type: !5993, isLocal: true, isDefinition: true, scopeLine: 1061, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6301 = !DILocalVariable(name: "dst", arg: 1, scope: !6300, file: !47, line: 1060, type: !2526)
!6302 = !DILocation(line: 1060, column: 46, scope: !6300)
!6303 = !DILocalVariable(name: "src", arg: 2, scope: !6300, file: !47, line: 1060, type: !1027)
!6304 = !DILocation(line: 1060, column: 63, scope: !6300)
!6305 = !DILocalVariable(name: "sep", arg: 3, scope: !6300, file: !47, line: 1060, type: !1028)
!6306 = !DILocation(line: 1060, column: 79, scope: !6300)
!6307 = !DILocalVariable(name: "log_ctx", arg: 4, scope: !6300, file: !47, line: 1060, type: !1013)
!6308 = !DILocation(line: 1060, column: 90, scope: !6300)
!6309 = !DILocation(line: 1062, column: 12, scope: !6300)
!6310 = !DILocation(line: 1062, column: 5, scope: !6300)
!6311 = distinct !DISubprogram(name: "c_escape_str", scope: !47, file: !47, line: 1019, type: !5993, isLocal: true, isDefinition: true, scopeLine: 1020, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6312 = !DILocalVariable(name: "dst", arg: 1, scope: !6311, file: !47, line: 1019, type: !2526)
!6313 = !DILocation(line: 1019, column: 43, scope: !6311)
!6314 = !DILocalVariable(name: "src", arg: 2, scope: !6311, file: !47, line: 1019, type: !1027)
!6315 = !DILocation(line: 1019, column: 60, scope: !6311)
!6316 = !DILocalVariable(name: "sep", arg: 3, scope: !6311, file: !47, line: 1019, type: !1028)
!6317 = !DILocation(line: 1019, column: 76, scope: !6311)
!6318 = !DILocalVariable(name: "log_ctx", arg: 4, scope: !6311, file: !47, line: 1019, type: !1013)
!6319 = !DILocation(line: 1019, column: 87, scope: !6311)
!6320 = !DILocalVariable(name: "p", scope: !6311, file: !47, line: 1021, type: !1027)
!6321 = !DILocation(line: 1021, column: 17, scope: !6311)
!6322 = !DILocation(line: 1023, column: 14, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6311, file: !47, line: 1023, column: 5)
!6324 = !DILocation(line: 1023, column: 12, scope: !6323)
!6325 = !DILocation(line: 1023, column: 10, scope: !6323)
!6326 = !DILocation(line: 1023, column: 20, scope: !6327)
!6327 = !DILexicalBlockFile(scope: !6328, file: !47, discriminator: 1)
!6328 = distinct !DILexicalBlock(scope: !6323, file: !47, line: 1023, column: 5)
!6329 = !DILocation(line: 1023, column: 19, scope: !6327)
!6330 = !DILocation(line: 1023, column: 5, scope: !6327)
!6331 = !DILocation(line: 1024, column: 18, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6328, file: !47, line: 1023, column: 28)
!6333 = !DILocation(line: 1024, column: 17, scope: !6332)
!6334 = !DILocation(line: 1024, column: 9, scope: !6332)
!6335 = !DILocation(line: 1025, column: 31, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6332, file: !47, line: 1024, column: 21)
!6337 = !DILocation(line: 1025, column: 20, scope: !6336)
!6338 = !DILocation(line: 1025, column: 50, scope: !6336)
!6339 = !DILocation(line: 1026, column: 31, scope: !6336)
!6340 = !DILocation(line: 1026, column: 20, scope: !6336)
!6341 = !DILocation(line: 1026, column: 50, scope: !6336)
!6342 = !DILocation(line: 1027, column: 31, scope: !6336)
!6343 = !DILocation(line: 1027, column: 20, scope: !6336)
!6344 = !DILocation(line: 1027, column: 50, scope: !6336)
!6345 = !DILocation(line: 1028, column: 31, scope: !6336)
!6346 = !DILocation(line: 1028, column: 20, scope: !6336)
!6347 = !DILocation(line: 1028, column: 50, scope: !6336)
!6348 = !DILocation(line: 1029, column: 31, scope: !6336)
!6349 = !DILocation(line: 1029, column: 20, scope: !6336)
!6350 = !DILocation(line: 1029, column: 51, scope: !6336)
!6351 = !DILocation(line: 1031, column: 18, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6336, file: !47, line: 1031, column: 17)
!6353 = !DILocation(line: 1031, column: 17, scope: !6352)
!6354 = !DILocation(line: 1031, column: 23, scope: !6352)
!6355 = !DILocation(line: 1031, column: 20, scope: !6352)
!6356 = !DILocation(line: 1031, column: 17, scope: !6336)
!6357 = !DILocation(line: 1032, column: 33, scope: !6352)
!6358 = !DILocation(line: 1032, column: 17, scope: !6352)
!6359 = !DILocation(line: 1033, column: 29, scope: !6336)
!6360 = !DILocation(line: 1033, column: 35, scope: !6336)
!6361 = !DILocation(line: 1033, column: 34, scope: !6336)
!6362 = !DILocation(line: 1033, column: 13, scope: !6336)
!6363 = !DILocation(line: 1034, column: 9, scope: !6336)
!6364 = !DILocation(line: 1035, column: 5, scope: !6332)
!6365 = !DILocation(line: 1023, column: 24, scope: !6366)
!6366 = !DILexicalBlockFile(scope: !6328, file: !47, discriminator: 2)
!6367 = !DILocation(line: 1023, column: 5, scope: !6366)
!6368 = distinct !{!6368, !6369}
!6369 = !DILocation(line: 1023, column: 5, scope: !6311)
!6370 = !DILocation(line: 1036, column: 12, scope: !6311)
!6371 = !DILocation(line: 1036, column: 17, scope: !6311)
!6372 = !DILocation(line: 1036, column: 5, scope: !6311)
!6373 = distinct !DISubprogram(name: "csv_escape_str", scope: !47, file: !47, line: 1042, type: !5993, isLocal: true, isDefinition: true, scopeLine: 1043, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6374 = !DILocalVariable(name: "dst", arg: 1, scope: !6373, file: !47, line: 1042, type: !2526)
!6375 = !DILocation(line: 1042, column: 45, scope: !6373)
!6376 = !DILocalVariable(name: "src", arg: 2, scope: !6373, file: !47, line: 1042, type: !1027)
!6377 = !DILocation(line: 1042, column: 62, scope: !6373)
!6378 = !DILocalVariable(name: "sep", arg: 3, scope: !6373, file: !47, line: 1042, type: !1028)
!6379 = !DILocation(line: 1042, column: 78, scope: !6373)
!6380 = !DILocalVariable(name: "log_ctx", arg: 4, scope: !6373, file: !47, line: 1042, type: !1013)
!6381 = !DILocation(line: 1042, column: 89, scope: !6373)
!6382 = !DILocalVariable(name: "meta_chars", scope: !6373, file: !47, line: 1044, type: !6383)
!6383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 40, align: 8, elements: !2090)
!6384 = !DILocation(line: 1044, column: 10, scope: !6373)
!6385 = !DILocation(line: 1044, column: 25, scope: !6373)
!6386 = !DILocation(line: 1044, column: 27, scope: !6373)
!6387 = !DILocalVariable(name: "needs_quoting", scope: !6373, file: !47, line: 1045, type: !1041)
!6388 = !DILocation(line: 1045, column: 9, scope: !6373)
!6389 = !DILocation(line: 1045, column: 39, scope: !6373)
!6390 = !DILocation(line: 1045, column: 44, scope: !6373)
!6391 = !DILocation(line: 1045, column: 31, scope: !6373)
!6392 = !DILocation(line: 1045, column: 27, scope: !6373)
!6393 = !DILocation(line: 1045, column: 26, scope: !6373)
!6394 = !DILocation(line: 1045, column: 25, scope: !6373)
!6395 = !DILocation(line: 1047, column: 9, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6373, file: !47, line: 1047, column: 9)
!6397 = !DILocation(line: 1047, column: 9, scope: !6373)
!6398 = !DILocation(line: 1048, column: 25, scope: !6396)
!6399 = !DILocation(line: 1048, column: 9, scope: !6396)
!6400 = !DILocation(line: 1050, column: 5, scope: !6373)
!6401 = !DILocation(line: 1050, column: 13, scope: !6402)
!6402 = !DILexicalBlockFile(scope: !6403, file: !47, discriminator: 1)
!6403 = distinct !DILexicalBlock(scope: !6404, file: !47, line: 1050, column: 5)
!6404 = distinct !DILexicalBlock(scope: !6373, file: !47, line: 1050, column: 5)
!6405 = !DILocation(line: 1050, column: 12, scope: !6402)
!6406 = !DILocation(line: 1050, column: 5, scope: !6402)
!6407 = !DILocation(line: 1051, column: 14, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6409, file: !47, line: 1051, column: 13)
!6409 = distinct !DILexicalBlock(scope: !6403, file: !47, line: 1050, column: 25)
!6410 = !DILocation(line: 1051, column: 13, scope: !6408)
!6411 = !DILocation(line: 1051, column: 18, scope: !6408)
!6412 = !DILocation(line: 1051, column: 13, scope: !6409)
!6413 = !DILocation(line: 1052, column: 29, scope: !6408)
!6414 = !DILocation(line: 1052, column: 13, scope: !6408)
!6415 = !DILocation(line: 1053, column: 25, scope: !6409)
!6416 = !DILocation(line: 1053, column: 31, scope: !6409)
!6417 = !DILocation(line: 1053, column: 30, scope: !6409)
!6418 = !DILocation(line: 1053, column: 9, scope: !6409)
!6419 = !DILocation(line: 1054, column: 5, scope: !6409)
!6420 = !DILocation(line: 1050, column: 21, scope: !6421)
!6421 = !DILexicalBlockFile(scope: !6403, file: !47, discriminator: 2)
!6422 = !DILocation(line: 1050, column: 5, scope: !6421)
!6423 = distinct !{!6423, !6400}
!6424 = !DILocation(line: 1055, column: 9, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6373, file: !47, line: 1055, column: 9)
!6426 = !DILocation(line: 1055, column: 9, scope: !6373)
!6427 = !DILocation(line: 1056, column: 25, scope: !6425)
!6428 = !DILocation(line: 1056, column: 9, scope: !6425)
!6429 = !DILocation(line: 1057, column: 12, scope: !6373)
!6430 = !DILocation(line: 1057, column: 17, scope: !6373)
!6431 = !DILocation(line: 1057, column: 5, scope: !6373)
!6432 = distinct !DISubprogram(name: "csv_get_name", scope: !47, file: !47, line: 1209, type: !1031, isLocal: true, isDefinition: true, scopeLine: 1209, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6433 = !DILocalVariable(name: "ctx", arg: 1, scope: !6432, file: !47, line: 1209, type: !1013)
!6434 = !DILocation(line: 1209, column: 39, scope: !6432)
!6435 = !DILocation(line: 1209, column: 46, scope: !6432)
!6436 = distinct !DISubprogram(name: "flat_init", scope: !47, file: !47, line: 1245, type: !2416, isLocal: true, isDefinition: true, scopeLine: 1246, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6437 = !DILocalVariable(name: "wctx", arg: 1, scope: !6436, file: !47, line: 1245, type: !2418)
!6438 = !DILocation(line: 1245, column: 59, scope: !6436)
!6439 = !DILocalVariable(name: "flat", scope: !6436, file: !47, line: 1247, type: !6440)
!6440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6441, size: 64, align: 64)
!6441 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlatContext", file: !47, line: 1230, baseType: !6442)
!6442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FlatContext", file: !47, line: 1225, size: 192, align: 64, elements: !6443)
!6443 = !{!6444, !6445, !6446, !6447}
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6442, file: !47, line: 1226, baseType: !1107, size: 64, align: 64)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "sep_str", scope: !6442, file: !47, line: 1227, baseType: !1027, size: 64, align: 64, offset: 64)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "sep", scope: !6442, file: !47, line: 1228, baseType: !1015, size: 8, align: 8, offset: 128)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "hierarchical", scope: !6442, file: !47, line: 1229, baseType: !1041, size: 32, align: 32, offset: 160)
!6448 = !DILocation(line: 1247, column: 18, scope: !6436)
!6449 = !DILocation(line: 1247, column: 25, scope: !6436)
!6450 = !DILocation(line: 1247, column: 31, scope: !6436)
!6451 = !DILocation(line: 1249, column: 16, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6436, file: !47, line: 1249, column: 9)
!6453 = !DILocation(line: 1249, column: 22, scope: !6452)
!6454 = !DILocation(line: 1249, column: 9, scope: !6452)
!6455 = !DILocation(line: 1249, column: 31, scope: !6452)
!6456 = !DILocation(line: 1249, column: 9, scope: !6436)
!6457 = !DILocation(line: 1250, column: 16, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6452, file: !47, line: 1249, column: 37)
!6459 = !DILocation(line: 1251, column: 16, scope: !6458)
!6460 = !DILocation(line: 1251, column: 22, scope: !6458)
!6461 = !DILocation(line: 1250, column: 9, scope: !6458)
!6462 = !DILocation(line: 1252, column: 9, scope: !6458)
!6463 = !DILocation(line: 1254, column: 17, scope: !6436)
!6464 = !DILocation(line: 1254, column: 23, scope: !6436)
!6465 = !DILocation(line: 1254, column: 5, scope: !6436)
!6466 = !DILocation(line: 1254, column: 11, scope: !6436)
!6467 = !DILocation(line: 1254, column: 15, scope: !6436)
!6468 = !DILocation(line: 1256, column: 5, scope: !6436)
!6469 = !DILocation(line: 1257, column: 1, scope: !6436)
!6470 = distinct !DISubprogram(name: "flat_print_section_header", scope: !47, file: !47, line: 1292, type: !2476, isLocal: true, isDefinition: true, scopeLine: 1293, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6471 = !DILocalVariable(name: "wctx", arg: 1, scope: !6470, file: !47, line: 1292, type: !2418)
!6472 = !DILocation(line: 1292, column: 54, scope: !6470)
!6473 = !DILocalVariable(name: "flat", scope: !6470, file: !47, line: 1294, type: !6440)
!6474 = !DILocation(line: 1294, column: 18, scope: !6470)
!6475 = !DILocation(line: 1294, column: 25, scope: !6470)
!6476 = !DILocation(line: 1294, column: 31, scope: !6470)
!6477 = !DILocalVariable(name: "buf", scope: !6470, file: !47, line: 1295, type: !2526)
!6478 = !DILocation(line: 1295, column: 15, scope: !6470)
!6479 = !DILocation(line: 1295, column: 41, scope: !6470)
!6480 = !DILocation(line: 1295, column: 47, scope: !6470)
!6481 = !DILocation(line: 1295, column: 22, scope: !6470)
!6482 = !DILocation(line: 1295, column: 28, scope: !6470)
!6483 = !DILocalVariable(name: "section", scope: !6470, file: !47, line: 1296, type: !2427)
!6484 = !DILocation(line: 1296, column: 27, scope: !6470)
!6485 = !DILocation(line: 1296, column: 51, scope: !6470)
!6486 = !DILocation(line: 1296, column: 57, scope: !6470)
!6487 = !DILocation(line: 1296, column: 37, scope: !6470)
!6488 = !DILocation(line: 1296, column: 43, scope: !6470)
!6489 = !DILocalVariable(name: "parent_section", scope: !6470, file: !47, line: 1297, type: !2427)
!6490 = !DILocation(line: 1297, column: 27, scope: !6470)
!6491 = !DILocation(line: 1297, column: 44, scope: !6470)
!6492 = !DILocation(line: 1297, column: 50, scope: !6470)
!6493 = !DILocation(line: 1298, column: 23, scope: !6470)
!6494 = !DILocation(line: 1298, column: 29, scope: !6470)
!6495 = !DILocation(line: 1298, column: 34, scope: !6470)
!6496 = !DILocation(line: 1298, column: 9, scope: !6470)
!6497 = !DILocation(line: 1298, column: 15, scope: !6470)
!6498 = !DILocation(line: 1297, column: 44, scope: !6499)
!6499 = !DILexicalBlockFile(scope: !6470, file: !47, discriminator: 1)
!6500 = !DILocation(line: 1297, column: 44, scope: !6501)
!6501 = !DILexicalBlockFile(scope: !6470, file: !47, discriminator: 2)
!6502 = !DILocation(line: 1297, column: 44, scope: !6503)
!6503 = !DILexicalBlockFile(scope: !6470, file: !47, discriminator: 3)
!6504 = !DILocation(line: 1297, column: 27, scope: !6503)
!6505 = !DILocation(line: 1301, column: 21, scope: !6470)
!6506 = !DILocation(line: 1301, column: 5, scope: !6470)
!6507 = !DILocation(line: 1302, column: 10, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6470, file: !47, line: 1302, column: 9)
!6509 = !DILocation(line: 1302, column: 9, scope: !6470)
!6510 = !DILocation(line: 1303, column: 9, scope: !6508)
!6511 = !DILocation(line: 1304, column: 16, scope: !6470)
!6512 = !DILocation(line: 1304, column: 46, scope: !6470)
!6513 = !DILocation(line: 1304, column: 52, scope: !6470)
!6514 = !DILocation(line: 1304, column: 57, scope: !6470)
!6515 = !DILocation(line: 1304, column: 27, scope: !6470)
!6516 = !DILocation(line: 1304, column: 33, scope: !6470)
!6517 = !DILocation(line: 1304, column: 61, scope: !6470)
!6518 = !DILocation(line: 1304, column: 5, scope: !6470)
!6519 = !DILocation(line: 1306, column: 9, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6470, file: !47, line: 1306, column: 9)
!6521 = !DILocation(line: 1306, column: 15, scope: !6520)
!6522 = !DILocation(line: 1306, column: 28, scope: !6520)
!6523 = !DILocation(line: 1307, column: 11, scope: !6520)
!6524 = !DILocation(line: 1307, column: 20, scope: !6520)
!6525 = !DILocation(line: 1307, column: 26, scope: !6520)
!6526 = !DILocation(line: 1306, column: 9, scope: !6499)
!6527 = !DILocation(line: 1308, column: 20, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6520, file: !47, line: 1307, column: 36)
!6529 = !DILocation(line: 1308, column: 47, scope: !6528)
!6530 = !DILocation(line: 1308, column: 53, scope: !6528)
!6531 = !DILocation(line: 1308, column: 33, scope: !6528)
!6532 = !DILocation(line: 1308, column: 39, scope: !6528)
!6533 = !DILocation(line: 1308, column: 61, scope: !6528)
!6534 = !DILocation(line: 1308, column: 67, scope: !6528)
!6535 = !DILocation(line: 1308, column: 73, scope: !6528)
!6536 = !DILocation(line: 1308, column: 9, scope: !6528)
!6537 = !DILocation(line: 1310, column: 13, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6528, file: !47, line: 1310, column: 13)
!6539 = !DILocation(line: 1310, column: 29, scope: !6538)
!6540 = !DILocation(line: 1310, column: 35, scope: !6538)
!6541 = !DILocation(line: 1310, column: 13, scope: !6528)
!6542 = !DILocalVariable(name: "n", scope: !6543, file: !47, line: 1311, type: !1041)
!6543 = distinct !DILexicalBlock(scope: !6538, file: !47, line: 1310, column: 40)
!6544 = !DILocation(line: 1311, column: 17, scope: !6543)
!6545 = !DILocation(line: 1311, column: 21, scope: !6543)
!6546 = !DILocation(line: 1311, column: 37, scope: !6543)
!6547 = !DILocation(line: 1311, column: 40, scope: !6543)
!6548 = !DILocation(line: 1312, column: 17, scope: !6543)
!6549 = !DILocation(line: 1312, column: 23, scope: !6543)
!6550 = !DILocation(line: 1311, column: 21, scope: !6551)
!6551 = !DILexicalBlockFile(scope: !6543, file: !47, discriminator: 1)
!6552 = !DILocation(line: 1312, column: 63, scope: !6551)
!6553 = !DILocation(line: 1312, column: 69, scope: !6551)
!6554 = !DILocation(line: 1312, column: 74, scope: !6551)
!6555 = !DILocation(line: 1312, column: 49, scope: !6551)
!6556 = !DILocation(line: 1312, column: 55, scope: !6551)
!6557 = !DILocation(line: 1311, column: 21, scope: !6558)
!6558 = !DILexicalBlockFile(scope: !6543, file: !47, discriminator: 2)
!6559 = !DILocation(line: 1311, column: 21, scope: !6560)
!6560 = !DILexicalBlockFile(scope: !6543, file: !47, discriminator: 3)
!6561 = !DILocation(line: 1311, column: 17, scope: !6560)
!6562 = !DILocation(line: 1313, column: 24, scope: !6543)
!6563 = !DILocation(line: 1313, column: 37, scope: !6543)
!6564 = !DILocation(line: 1313, column: 40, scope: !6543)
!6565 = !DILocation(line: 1313, column: 46, scope: !6543)
!6566 = !DILocation(line: 1313, column: 13, scope: !6543)
!6567 = !DILocation(line: 1314, column: 9, scope: !6543)
!6568 = !DILocation(line: 1315, column: 5, scope: !6528)
!6569 = !DILocation(line: 1316, column: 1, scope: !6470)
!6570 = distinct !DISubprogram(name: "flat_print_int", scope: !47, file: !47, line: 1318, type: !2482, isLocal: true, isDefinition: true, scopeLine: 1319, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6571 = !DILocalVariable(name: "wctx", arg: 1, scope: !6570, file: !47, line: 1318, type: !2418)
!6572 = !DILocation(line: 1318, column: 43, scope: !6570)
!6573 = !DILocalVariable(name: "key", arg: 2, scope: !6570, file: !47, line: 1318, type: !1027)
!6574 = !DILocation(line: 1318, column: 61, scope: !6570)
!6575 = !DILocalVariable(name: "value", arg: 3, scope: !6570, file: !47, line: 1318, type: !1109)
!6576 = !DILocation(line: 1318, column: 80, scope: !6570)
!6577 = !DILocation(line: 1320, column: 46, scope: !6570)
!6578 = !DILocation(line: 1320, column: 52, scope: !6570)
!6579 = !DILocation(line: 1320, column: 27, scope: !6570)
!6580 = !DILocation(line: 1320, column: 33, scope: !6570)
!6581 = !DILocation(line: 1320, column: 59, scope: !6570)
!6582 = !DILocation(line: 1320, column: 64, scope: !6570)
!6583 = !DILocation(line: 1320, column: 69, scope: !6570)
!6584 = !DILocation(line: 1320, column: 5, scope: !6570)
!6585 = !DILocation(line: 1321, column: 1, scope: !6570)
!6586 = distinct !DISubprogram(name: "flat_print_str", scope: !47, file: !47, line: 1323, type: !2491, isLocal: true, isDefinition: true, scopeLine: 1324, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6587 = !DILocalVariable(name: "wctx", arg: 1, scope: !6586, file: !47, line: 1323, type: !2418)
!6588 = !DILocation(line: 1323, column: 43, scope: !6586)
!6589 = !DILocalVariable(name: "key", arg: 2, scope: !6586, file: !47, line: 1323, type: !1027)
!6590 = !DILocation(line: 1323, column: 61, scope: !6586)
!6591 = !DILocalVariable(name: "value", arg: 3, scope: !6586, file: !47, line: 1323, type: !1027)
!6592 = !DILocation(line: 1323, column: 78, scope: !6586)
!6593 = !DILocalVariable(name: "flat", scope: !6586, file: !47, line: 1325, type: !6440)
!6594 = !DILocation(line: 1325, column: 18, scope: !6586)
!6595 = !DILocation(line: 1325, column: 25, scope: !6586)
!6596 = !DILocation(line: 1325, column: 31, scope: !6586)
!6597 = !DILocalVariable(name: "buf", scope: !6586, file: !47, line: 1326, type: !2452)
!6598 = !DILocation(line: 1326, column: 14, scope: !6586)
!6599 = !DILocation(line: 1328, column: 37, scope: !6586)
!6600 = !DILocation(line: 1328, column: 43, scope: !6586)
!6601 = !DILocation(line: 1328, column: 18, scope: !6586)
!6602 = !DILocation(line: 1328, column: 24, scope: !6586)
!6603 = !DILocation(line: 1328, column: 50, scope: !6586)
!6604 = !DILocation(line: 1328, column: 5, scope: !6586)
!6605 = !DILocation(line: 1329, column: 5, scope: !6586)
!6606 = !DILocation(line: 1330, column: 45, scope: !6586)
!6607 = !DILocation(line: 1330, column: 50, scope: !6586)
!6608 = !DILocation(line: 1330, column: 56, scope: !6586)
!6609 = !DILocation(line: 1330, column: 19, scope: !6586)
!6610 = !DILocation(line: 1330, column: 5, scope: !6611)
!6611 = !DILexicalBlockFile(scope: !6586, file: !47, discriminator: 1)
!6612 = !DILocation(line: 1331, column: 5, scope: !6586)
!6613 = !DILocation(line: 1332, column: 52, scope: !6586)
!6614 = !DILocation(line: 1332, column: 24, scope: !6586)
!6615 = !DILocation(line: 1332, column: 5, scope: !6611)
!6616 = !DILocation(line: 1333, column: 5, scope: !6586)
!6617 = !DILocation(line: 1334, column: 1, scope: !6586)
!6618 = distinct !DISubprogram(name: "flat_get_name", scope: !47, file: !47, line: 1243, type: !1031, isLocal: true, isDefinition: true, scopeLine: 1243, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6619 = !DILocalVariable(name: "ctx", arg: 1, scope: !6618, file: !47, line: 1243, type: !1013)
!6620 = !DILocation(line: 1243, column: 40, scope: !6618)
!6621 = !DILocation(line: 1243, column: 47, scope: !6618)
!6622 = distinct !DISubprogram(name: "flat_escape_key_str", scope: !47, file: !47, line: 1259, type: !6623, isLocal: true, isDefinition: true, scopeLine: 1260, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6623 = !DISubroutineType(types: !6624)
!6624 = !{!1027, !2526, !1027, !1028}
!6625 = !DILocalVariable(name: "dst", arg: 1, scope: !6622, file: !47, line: 1259, type: !2526)
!6626 = !DILocation(line: 1259, column: 50, scope: !6622)
!6627 = !DILocalVariable(name: "src", arg: 2, scope: !6622, file: !47, line: 1259, type: !1027)
!6628 = !DILocation(line: 1259, column: 67, scope: !6622)
!6629 = !DILocalVariable(name: "sep", arg: 3, scope: !6622, file: !47, line: 1259, type: !1028)
!6630 = !DILocation(line: 1259, column: 83, scope: !6622)
!6631 = !DILocalVariable(name: "p", scope: !6622, file: !47, line: 1261, type: !1027)
!6632 = !DILocation(line: 1261, column: 17, scope: !6622)
!6633 = !DILocation(line: 1263, column: 14, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6622, file: !47, line: 1263, column: 5)
!6635 = !DILocation(line: 1263, column: 12, scope: !6634)
!6636 = !DILocation(line: 1263, column: 10, scope: !6634)
!6637 = !DILocation(line: 1263, column: 20, scope: !6638)
!6638 = !DILexicalBlockFile(scope: !6639, file: !47, discriminator: 1)
!6639 = distinct !DILexicalBlock(scope: !6634, file: !47, line: 1263, column: 5)
!6640 = !DILocation(line: 1263, column: 19, scope: !6638)
!6641 = !DILocation(line: 1263, column: 5, scope: !6638)
!6642 = !DILocation(line: 1264, column: 17, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6644, file: !47, line: 1264, column: 13)
!6644 = distinct !DILexicalBlock(scope: !6639, file: !47, line: 1263, column: 28)
!6645 = !DILocation(line: 1264, column: 16, scope: !6643)
!6646 = !DILocation(line: 1264, column: 19, scope: !6643)
!6647 = !DILocation(line: 1264, column: 26, scope: !6643)
!6648 = !DILocation(line: 1264, column: 30, scope: !6649)
!6649 = !DILexicalBlockFile(scope: !6643, file: !47, discriminator: 1)
!6650 = !DILocation(line: 1264, column: 29, scope: !6649)
!6651 = !DILocation(line: 1264, column: 32, scope: !6649)
!6652 = !DILocation(line: 1264, column: 40, scope: !6649)
!6653 = !DILocation(line: 1265, column: 17, scope: !6643)
!6654 = !DILocation(line: 1265, column: 16, scope: !6643)
!6655 = !DILocation(line: 1265, column: 19, scope: !6643)
!6656 = !DILocation(line: 1265, column: 26, scope: !6643)
!6657 = !DILocation(line: 1265, column: 30, scope: !6649)
!6658 = !DILocation(line: 1265, column: 29, scope: !6649)
!6659 = !DILocation(line: 1265, column: 32, scope: !6649)
!6660 = !DILocation(line: 1265, column: 40, scope: !6649)
!6661 = !DILocation(line: 1266, column: 17, scope: !6643)
!6662 = !DILocation(line: 1266, column: 16, scope: !6643)
!6663 = !DILocation(line: 1266, column: 19, scope: !6643)
!6664 = !DILocation(line: 1266, column: 26, scope: !6643)
!6665 = !DILocation(line: 1266, column: 30, scope: !6649)
!6666 = !DILocation(line: 1266, column: 29, scope: !6649)
!6667 = !DILocation(line: 1266, column: 32, scope: !6649)
!6668 = !DILocation(line: 1264, column: 13, scope: !6669)
!6669 = !DILexicalBlockFile(scope: !6644, file: !47, discriminator: 2)
!6670 = !DILocation(line: 1267, column: 29, scope: !6643)
!6671 = !DILocation(line: 1267, column: 13, scope: !6643)
!6672 = !DILocation(line: 1269, column: 29, scope: !6643)
!6673 = !DILocation(line: 1269, column: 35, scope: !6643)
!6674 = !DILocation(line: 1269, column: 34, scope: !6643)
!6675 = !DILocation(line: 1269, column: 13, scope: !6643)
!6676 = !DILocation(line: 1270, column: 5, scope: !6644)
!6677 = !DILocation(line: 1263, column: 24, scope: !6678)
!6678 = !DILexicalBlockFile(scope: !6639, file: !47, discriminator: 2)
!6679 = !DILocation(line: 1263, column: 5, scope: !6678)
!6680 = distinct !{!6680, !6681}
!6681 = !DILocation(line: 1263, column: 5, scope: !6622)
!6682 = !DILocation(line: 1271, column: 12, scope: !6622)
!6683 = !DILocation(line: 1271, column: 17, scope: !6622)
!6684 = !DILocation(line: 1271, column: 5, scope: !6622)
!6685 = distinct !DISubprogram(name: "flat_escape_value_str", scope: !47, file: !47, line: 1274, type: !6686, isLocal: true, isDefinition: true, scopeLine: 1275, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6686 = !DISubroutineType(types: !6687)
!6687 = !{!1027, !2526, !1027}
!6688 = !DILocalVariable(name: "dst", arg: 1, scope: !6685, file: !47, line: 1274, type: !2526)
!6689 = !DILocation(line: 1274, column: 52, scope: !6685)
!6690 = !DILocalVariable(name: "src", arg: 2, scope: !6685, file: !47, line: 1274, type: !1027)
!6691 = !DILocation(line: 1274, column: 69, scope: !6685)
!6692 = !DILocalVariable(name: "p", scope: !6685, file: !47, line: 1276, type: !1027)
!6693 = !DILocation(line: 1276, column: 17, scope: !6685)
!6694 = !DILocation(line: 1278, column: 14, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6685, file: !47, line: 1278, column: 5)
!6696 = !DILocation(line: 1278, column: 12, scope: !6695)
!6697 = !DILocation(line: 1278, column: 10, scope: !6695)
!6698 = !DILocation(line: 1278, column: 20, scope: !6699)
!6699 = !DILexicalBlockFile(scope: !6700, file: !47, discriminator: 1)
!6700 = distinct !DILexicalBlock(scope: !6695, file: !47, line: 1278, column: 5)
!6701 = !DILocation(line: 1278, column: 19, scope: !6699)
!6702 = !DILocation(line: 1278, column: 5, scope: !6699)
!6703 = !DILocation(line: 1279, column: 18, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6700, file: !47, line: 1278, column: 28)
!6705 = !DILocation(line: 1279, column: 17, scope: !6704)
!6706 = !DILocation(line: 1279, column: 9, scope: !6704)
!6707 = !DILocation(line: 1280, column: 31, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6704, file: !47, line: 1279, column: 21)
!6709 = !DILocation(line: 1280, column: 20, scope: !6708)
!6710 = !DILocation(line: 1280, column: 50, scope: !6708)
!6711 = !DILocation(line: 1281, column: 31, scope: !6708)
!6712 = !DILocation(line: 1281, column: 20, scope: !6708)
!6713 = !DILocation(line: 1281, column: 50, scope: !6708)
!6714 = !DILocation(line: 1282, column: 31, scope: !6708)
!6715 = !DILocation(line: 1282, column: 20, scope: !6708)
!6716 = !DILocation(line: 1282, column: 51, scope: !6708)
!6717 = !DILocation(line: 1283, column: 30, scope: !6708)
!6718 = !DILocation(line: 1283, column: 19, scope: !6708)
!6719 = !DILocation(line: 1283, column: 50, scope: !6708)
!6720 = !DILocation(line: 1284, column: 30, scope: !6708)
!6721 = !DILocation(line: 1284, column: 19, scope: !6708)
!6722 = !DILocation(line: 1284, column: 49, scope: !6708)
!6723 = !DILocation(line: 1285, column: 30, scope: !6708)
!6724 = !DILocation(line: 1285, column: 19, scope: !6708)
!6725 = !DILocation(line: 1285, column: 49, scope: !6708)
!6726 = !DILocation(line: 1286, column: 34, scope: !6708)
!6727 = !DILocation(line: 1286, column: 40, scope: !6708)
!6728 = !DILocation(line: 1286, column: 39, scope: !6708)
!6729 = !DILocation(line: 1286, column: 18, scope: !6708)
!6730 = !DILocation(line: 1286, column: 47, scope: !6708)
!6731 = !DILocation(line: 1288, column: 5, scope: !6704)
!6732 = !DILocation(line: 1278, column: 24, scope: !6733)
!6733 = !DILexicalBlockFile(scope: !6700, file: !47, discriminator: 2)
!6734 = !DILocation(line: 1278, column: 5, scope: !6733)
!6735 = distinct !{!6735, !6736}
!6736 = !DILocation(line: 1278, column: 5, scope: !6685)
!6737 = !DILocation(line: 1289, column: 12, scope: !6685)
!6738 = !DILocation(line: 1289, column: 17, scope: !6685)
!6739 = !DILocation(line: 1289, column: 5, scope: !6685)
!6740 = distinct !DISubprogram(name: "ini_print_section_header", scope: !47, file: !47, line: 1392, type: !2476, isLocal: true, isDefinition: true, scopeLine: 1393, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6741 = !DILocalVariable(name: "wctx", arg: 1, scope: !6740, file: !47, line: 1392, type: !2418)
!6742 = !DILocation(line: 1392, column: 53, scope: !6740)
!6743 = !DILocalVariable(name: "ini", scope: !6740, file: !47, line: 1394, type: !6744)
!6744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6745, size: 64, align: 64)
!6745 = !DIDerivedType(tag: DW_TAG_typedef, name: "INIContext", file: !47, line: 1352, baseType: !6746)
!6746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "INIContext", file: !47, line: 1349, size: 128, align: 64, elements: !6747)
!6747 = !{!6748, !6749}
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6746, file: !47, line: 1350, baseType: !1107, size: 64, align: 64)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "hierarchical", scope: !6746, file: !47, line: 1351, baseType: !1041, size: 32, align: 32, offset: 64)
!6750 = !DILocation(line: 1394, column: 17, scope: !6740)
!6751 = !DILocation(line: 1394, column: 23, scope: !6740)
!6752 = !DILocation(line: 1394, column: 29, scope: !6740)
!6753 = !DILocalVariable(name: "buf", scope: !6740, file: !47, line: 1395, type: !2526)
!6754 = !DILocation(line: 1395, column: 15, scope: !6740)
!6755 = !DILocation(line: 1395, column: 41, scope: !6740)
!6756 = !DILocation(line: 1395, column: 47, scope: !6740)
!6757 = !DILocation(line: 1395, column: 22, scope: !6740)
!6758 = !DILocation(line: 1395, column: 28, scope: !6740)
!6759 = !DILocalVariable(name: "section", scope: !6740, file: !47, line: 1396, type: !2427)
!6760 = !DILocation(line: 1396, column: 27, scope: !6740)
!6761 = !DILocation(line: 1396, column: 51, scope: !6740)
!6762 = !DILocation(line: 1396, column: 57, scope: !6740)
!6763 = !DILocation(line: 1396, column: 37, scope: !6740)
!6764 = !DILocation(line: 1396, column: 43, scope: !6740)
!6765 = !DILocalVariable(name: "parent_section", scope: !6740, file: !47, line: 1397, type: !2427)
!6766 = !DILocation(line: 1397, column: 27, scope: !6740)
!6767 = !DILocation(line: 1397, column: 44, scope: !6740)
!6768 = !DILocation(line: 1397, column: 50, scope: !6740)
!6769 = !DILocation(line: 1398, column: 23, scope: !6740)
!6770 = !DILocation(line: 1398, column: 29, scope: !6740)
!6771 = !DILocation(line: 1398, column: 34, scope: !6740)
!6772 = !DILocation(line: 1398, column: 9, scope: !6740)
!6773 = !DILocation(line: 1398, column: 15, scope: !6740)
!6774 = !DILocation(line: 1397, column: 44, scope: !6775)
!6775 = !DILexicalBlockFile(scope: !6740, file: !47, discriminator: 1)
!6776 = !DILocation(line: 1397, column: 44, scope: !6777)
!6777 = !DILexicalBlockFile(scope: !6740, file: !47, discriminator: 2)
!6778 = !DILocation(line: 1397, column: 44, scope: !6779)
!6779 = !DILexicalBlockFile(scope: !6740, file: !47, discriminator: 3)
!6780 = !DILocation(line: 1397, column: 27, scope: !6779)
!6781 = !DILocation(line: 1400, column: 21, scope: !6740)
!6782 = !DILocation(line: 1400, column: 5, scope: !6740)
!6783 = !DILocation(line: 1401, column: 10, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6740, file: !47, line: 1401, column: 9)
!6785 = !DILocation(line: 1401, column: 9, scope: !6740)
!6786 = !DILocation(line: 1402, column: 9, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6784, file: !47, line: 1401, column: 26)
!6788 = !DILocation(line: 1403, column: 9, scope: !6787)
!6789 = !DILocation(line: 1406, column: 23, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6740, file: !47, line: 1406, column: 9)
!6791 = !DILocation(line: 1406, column: 29, scope: !6790)
!6792 = !DILocation(line: 1406, column: 34, scope: !6790)
!6793 = !DILocation(line: 1406, column: 9, scope: !6790)
!6794 = !DILocation(line: 1406, column: 15, scope: !6790)
!6795 = !DILocation(line: 1406, column: 9, scope: !6740)
!6796 = !DILocation(line: 1407, column: 9, scope: !6790)
!6797 = !DILocation(line: 1409, column: 16, scope: !6740)
!6798 = !DILocation(line: 1409, column: 46, scope: !6740)
!6799 = !DILocation(line: 1409, column: 52, scope: !6740)
!6800 = !DILocation(line: 1409, column: 57, scope: !6740)
!6801 = !DILocation(line: 1409, column: 27, scope: !6740)
!6802 = !DILocation(line: 1409, column: 33, scope: !6740)
!6803 = !DILocation(line: 1409, column: 61, scope: !6740)
!6804 = !DILocation(line: 1409, column: 5, scope: !6740)
!6805 = !DILocation(line: 1410, column: 9, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6740, file: !47, line: 1410, column: 9)
!6807 = !DILocation(line: 1410, column: 14, scope: !6806)
!6808 = !DILocation(line: 1410, column: 27, scope: !6806)
!6809 = !DILocation(line: 1411, column: 11, scope: !6806)
!6810 = !DILocation(line: 1411, column: 20, scope: !6806)
!6811 = !DILocation(line: 1411, column: 26, scope: !6806)
!6812 = !DILocation(line: 1410, column: 9, scope: !6775)
!6813 = !DILocation(line: 1412, column: 20, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6806, file: !47, line: 1411, column: 36)
!6815 = !DILocation(line: 1412, column: 33, scope: !6814)
!6816 = !DILocation(line: 1412, column: 38, scope: !6814)
!6817 = !DILocation(line: 1412, column: 71, scope: !6814)
!6818 = !DILocation(line: 1412, column: 77, scope: !6814)
!6819 = !DILocation(line: 1412, column: 57, scope: !6814)
!6820 = !DILocation(line: 1412, column: 63, scope: !6814)
!6821 = !DILocation(line: 1412, column: 85, scope: !6814)
!6822 = !DILocation(line: 1412, column: 9, scope: !6814)
!6823 = !DILocation(line: 1414, column: 13, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6814, file: !47, line: 1414, column: 13)
!6825 = !DILocation(line: 1414, column: 29, scope: !6824)
!6826 = !DILocation(line: 1414, column: 35, scope: !6824)
!6827 = !DILocation(line: 1414, column: 13, scope: !6814)
!6828 = !DILocalVariable(name: "n", scope: !6829, file: !47, line: 1415, type: !1041)
!6829 = distinct !DILexicalBlock(scope: !6824, file: !47, line: 1414, column: 40)
!6830 = !DILocation(line: 1415, column: 17, scope: !6829)
!6831 = !DILocation(line: 1415, column: 21, scope: !6829)
!6832 = !DILocation(line: 1415, column: 37, scope: !6829)
!6833 = !DILocation(line: 1415, column: 40, scope: !6829)
!6834 = !DILocation(line: 1416, column: 17, scope: !6829)
!6835 = !DILocation(line: 1416, column: 23, scope: !6829)
!6836 = !DILocation(line: 1415, column: 21, scope: !6837)
!6837 = !DILexicalBlockFile(scope: !6829, file: !47, discriminator: 1)
!6838 = !DILocation(line: 1416, column: 63, scope: !6837)
!6839 = !DILocation(line: 1416, column: 69, scope: !6837)
!6840 = !DILocation(line: 1416, column: 74, scope: !6837)
!6841 = !DILocation(line: 1416, column: 49, scope: !6837)
!6842 = !DILocation(line: 1416, column: 55, scope: !6837)
!6843 = !DILocation(line: 1415, column: 21, scope: !6844)
!6844 = !DILexicalBlockFile(scope: !6829, file: !47, discriminator: 2)
!6845 = !DILocation(line: 1415, column: 21, scope: !6846)
!6846 = !DILexicalBlockFile(scope: !6829, file: !47, discriminator: 3)
!6847 = !DILocation(line: 1415, column: 17, scope: !6846)
!6848 = !DILocation(line: 1417, column: 24, scope: !6829)
!6849 = !DILocation(line: 1417, column: 36, scope: !6829)
!6850 = !DILocation(line: 1417, column: 13, scope: !6829)
!6851 = !DILocation(line: 1418, column: 9, scope: !6829)
!6852 = !DILocation(line: 1419, column: 5, scope: !6814)
!6853 = !DILocation(line: 1421, column: 11, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6740, file: !47, line: 1421, column: 9)
!6855 = !DILocation(line: 1421, column: 20, scope: !6854)
!6856 = !DILocation(line: 1421, column: 26, scope: !6854)
!6857 = !DILocation(line: 1421, column: 9, scope: !6740)
!6858 = !DILocation(line: 1422, column: 26, scope: !6854)
!6859 = !DILocation(line: 1422, column: 31, scope: !6854)
!6860 = !DILocation(line: 1422, column: 9, scope: !6854)
!6861 = !DILocation(line: 1423, column: 1, scope: !6740)
!6862 = distinct !DISubprogram(name: "ini_print_int", scope: !47, file: !47, line: 1436, type: !2482, isLocal: true, isDefinition: true, scopeLine: 1437, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6863 = !DILocalVariable(name: "wctx", arg: 1, scope: !6862, file: !47, line: 1436, type: !2418)
!6864 = !DILocation(line: 1436, column: 42, scope: !6862)
!6865 = !DILocalVariable(name: "key", arg: 2, scope: !6862, file: !47, line: 1436, type: !1027)
!6866 = !DILocation(line: 1436, column: 60, scope: !6862)
!6867 = !DILocalVariable(name: "value", arg: 3, scope: !6862, file: !47, line: 1436, type: !1109)
!6868 = !DILocation(line: 1436, column: 79, scope: !6862)
!6869 = !DILocation(line: 1438, column: 25, scope: !6862)
!6870 = !DILocation(line: 1438, column: 30, scope: !6862)
!6871 = !DILocation(line: 1438, column: 5, scope: !6862)
!6872 = !DILocation(line: 1439, column: 1, scope: !6862)
!6873 = distinct !DISubprogram(name: "ini_print_str", scope: !47, file: !47, line: 1425, type: !2491, isLocal: true, isDefinition: true, scopeLine: 1426, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6874 = !DILocalVariable(name: "wctx", arg: 1, scope: !6873, file: !47, line: 1425, type: !2418)
!6875 = !DILocation(line: 1425, column: 42, scope: !6873)
!6876 = !DILocalVariable(name: "key", arg: 2, scope: !6873, file: !47, line: 1425, type: !1027)
!6877 = !DILocation(line: 1425, column: 60, scope: !6873)
!6878 = !DILocalVariable(name: "value", arg: 3, scope: !6873, file: !47, line: 1425, type: !1027)
!6879 = !DILocation(line: 1425, column: 77, scope: !6873)
!6880 = !DILocalVariable(name: "buf", scope: !6873, file: !47, line: 1427, type: !2452)
!6881 = !DILocation(line: 1427, column: 14, scope: !6873)
!6882 = !DILocation(line: 1429, column: 5, scope: !6873)
!6883 = !DILocation(line: 1430, column: 40, scope: !6873)
!6884 = !DILocation(line: 1430, column: 19, scope: !6873)
!6885 = !DILocation(line: 1430, column: 5, scope: !6886)
!6886 = !DILexicalBlockFile(scope: !6873, file: !47, discriminator: 1)
!6887 = !DILocation(line: 1431, column: 5, scope: !6873)
!6888 = !DILocation(line: 1432, column: 41, scope: !6873)
!6889 = !DILocation(line: 1432, column: 20, scope: !6873)
!6890 = !DILocation(line: 1432, column: 5, scope: !6886)
!6891 = !DILocation(line: 1433, column: 5, scope: !6873)
!6892 = !DILocation(line: 1434, column: 1, scope: !6873)
!6893 = distinct !DISubprogram(name: "ini_get_name", scope: !47, file: !47, line: 1363, type: !1031, isLocal: true, isDefinition: true, scopeLine: 1363, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6894 = !DILocalVariable(name: "ctx", arg: 1, scope: !6893, file: !47, line: 1363, type: !1013)
!6895 = !DILocation(line: 1363, column: 39, scope: !6893)
!6896 = !DILocation(line: 1363, column: 46, scope: !6893)
!6897 = distinct !DISubprogram(name: "ini_escape_str", scope: !47, file: !47, line: 1365, type: !6898, isLocal: true, isDefinition: true, scopeLine: 1366, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6898 = !DISubroutineType(types: !6899)
!6899 = !{!1014, !2526, !1027}
!6900 = !DILocalVariable(name: "dst", arg: 1, scope: !6897, file: !47, line: 1365, type: !2526)
!6901 = !DILocation(line: 1365, column: 39, scope: !6897)
!6902 = !DILocalVariable(name: "src", arg: 2, scope: !6897, file: !47, line: 1365, type: !1027)
!6903 = !DILocation(line: 1365, column: 56, scope: !6897)
!6904 = !DILocalVariable(name: "i", scope: !6897, file: !47, line: 1367, type: !1041)
!6905 = !DILocation(line: 1367, column: 9, scope: !6897)
!6906 = !DILocalVariable(name: "c", scope: !6897, file: !47, line: 1368, type: !1015)
!6907 = !DILocation(line: 1368, column: 10, scope: !6897)
!6908 = !DILocation(line: 1370, column: 5, scope: !6897)
!6909 = !DILocation(line: 1370, column: 21, scope: !6910)
!6910 = !DILexicalBlockFile(scope: !6897, file: !47, discriminator: 1)
!6911 = !DILocation(line: 1370, column: 16, scope: !6910)
!6912 = !DILocation(line: 1370, column: 14, scope: !6910)
!6913 = !DILocation(line: 1370, column: 5, scope: !6910)
!6914 = !DILocation(line: 1371, column: 17, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6897, file: !47, line: 1370, column: 26)
!6916 = !DILocation(line: 1371, column: 9, scope: !6915)
!6917 = !DILocation(line: 1372, column: 31, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6915, file: !47, line: 1371, column: 20)
!6919 = !DILocation(line: 1372, column: 20, scope: !6918)
!6920 = !DILocation(line: 1372, column: 50, scope: !6918)
!6921 = !DILocation(line: 1373, column: 31, scope: !6918)
!6922 = !DILocation(line: 1373, column: 20, scope: !6918)
!6923 = !DILocation(line: 1373, column: 50, scope: !6918)
!6924 = !DILocation(line: 1374, column: 31, scope: !6918)
!6925 = !DILocation(line: 1374, column: 20, scope: !6918)
!6926 = !DILocation(line: 1374, column: 50, scope: !6918)
!6927 = !DILocation(line: 1375, column: 31, scope: !6918)
!6928 = !DILocation(line: 1375, column: 20, scope: !6918)
!6929 = !DILocation(line: 1375, column: 50, scope: !6918)
!6930 = !DILocation(line: 1376, column: 31, scope: !6918)
!6931 = !DILocation(line: 1376, column: 20, scope: !6918)
!6932 = !DILocation(line: 1376, column: 50, scope: !6918)
!6933 = !DILocation(line: 1380, column: 36, scope: !6918)
!6934 = !DILocation(line: 1380, column: 20, scope: !6918)
!6935 = !DILocation(line: 1382, column: 32, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6918, file: !47, line: 1382, column: 17)
!6937 = !DILocation(line: 1382, column: 17, scope: !6936)
!6938 = !DILocation(line: 1382, column: 34, scope: !6936)
!6939 = !DILocation(line: 1382, column: 17, scope: !6918)
!6940 = !DILocation(line: 1383, column: 28, scope: !6936)
!6941 = !DILocation(line: 1383, column: 46, scope: !6936)
!6942 = !DILocation(line: 1383, column: 48, scope: !6936)
!6943 = !DILocation(line: 1383, column: 17, scope: !6936)
!6944 = !DILocation(line: 1385, column: 33, scope: !6936)
!6945 = !DILocation(line: 1385, column: 38, scope: !6936)
!6946 = !DILocation(line: 1385, column: 17, scope: !6936)
!6947 = !DILocation(line: 1386, column: 13, scope: !6918)
!6948 = !DILocation(line: 1370, column: 5, scope: !6949)
!6949 = !DILexicalBlockFile(scope: !6897, file: !47, discriminator: 2)
!6950 = distinct !{!6950, !6908}
!6951 = !DILocation(line: 1389, column: 12, scope: !6897)
!6952 = !DILocation(line: 1389, column: 17, scope: !6897)
!6953 = !DILocation(line: 1389, column: 5, scope: !6897)
!6954 = distinct !DISubprogram(name: "json_init", scope: !47, file: !47, line: 1471, type: !2416, isLocal: true, isDefinition: true, scopeLine: 1472, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6955 = !DILocalVariable(name: "wctx", arg: 1, scope: !6954, file: !47, line: 1471, type: !2418)
!6956 = !DILocation(line: 1471, column: 59, scope: !6954)
!6957 = !DILocalVariable(name: "json", scope: !6954, file: !47, line: 1473, type: !6958)
!6958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6959, size: 64, align: 64)
!6959 = !DIDerivedType(tag: DW_TAG_typedef, name: "JSONContext", file: !47, line: 1458, baseType: !6960)
!6960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "JSONContext", file: !47, line: 1453, size: 256, align: 64, elements: !6961)
!6961 = !{!6962, !6963, !6964, !6965, !6966}
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6960, file: !47, line: 1454, baseType: !1107, size: 64, align: 64)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "indent_level", scope: !6960, file: !47, line: 1455, baseType: !1041, size: 32, align: 32, offset: 64)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !6960, file: !47, line: 1456, baseType: !1041, size: 32, align: 32, offset: 96)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "item_sep", scope: !6960, file: !47, line: 1457, baseType: !1027, size: 64, align: 64, offset: 128)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "item_start_end", scope: !6960, file: !47, line: 1457, baseType: !1027, size: 64, align: 64, offset: 192)
!6967 = !DILocation(line: 1473, column: 18, scope: !6954)
!6968 = !DILocation(line: 1473, column: 25, scope: !6954)
!6969 = !DILocation(line: 1473, column: 31, scope: !6954)
!6970 = !DILocation(line: 1475, column: 22, scope: !6954)
!6971 = !DILocation(line: 1475, column: 28, scope: !6954)
!6972 = !DILocation(line: 1475, column: 5, scope: !6954)
!6973 = !DILocation(line: 1475, column: 11, scope: !6954)
!6974 = !DILocation(line: 1475, column: 20, scope: !6954)
!6975 = !DILocation(line: 1476, column: 28, scope: !6954)
!6976 = !DILocation(line: 1476, column: 34, scope: !6954)
!6977 = !DILocation(line: 1476, column: 5, scope: !6954)
!6978 = !DILocation(line: 1476, column: 11, scope: !6954)
!6979 = !DILocation(line: 1476, column: 26, scope: !6954)
!6980 = !DILocation(line: 1478, column: 5, scope: !6954)
!6981 = distinct !DISubprogram(name: "json_print_section_header", scope: !47, file: !47, line: 1503, type: !2476, isLocal: true, isDefinition: true, scopeLine: 1504, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!6982 = !DILocalVariable(name: "wctx", arg: 1, scope: !6981, file: !47, line: 1503, type: !2418)
!6983 = !DILocation(line: 1503, column: 54, scope: !6981)
!6984 = !DILocalVariable(name: "json", scope: !6981, file: !47, line: 1505, type: !6958)
!6985 = !DILocation(line: 1505, column: 18, scope: !6981)
!6986 = !DILocation(line: 1505, column: 25, scope: !6981)
!6987 = !DILocation(line: 1505, column: 31, scope: !6981)
!6988 = !DILocalVariable(name: "buf", scope: !6981, file: !47, line: 1506, type: !2452)
!6989 = !DILocation(line: 1506, column: 14, scope: !6981)
!6990 = !DILocalVariable(name: "section", scope: !6981, file: !47, line: 1507, type: !2427)
!6991 = !DILocation(line: 1507, column: 27, scope: !6981)
!6992 = !DILocation(line: 1507, column: 51, scope: !6981)
!6993 = !DILocation(line: 1507, column: 57, scope: !6981)
!6994 = !DILocation(line: 1507, column: 37, scope: !6981)
!6995 = !DILocation(line: 1507, column: 43, scope: !6981)
!6996 = !DILocalVariable(name: "parent_section", scope: !6981, file: !47, line: 1508, type: !2427)
!6997 = !DILocation(line: 1508, column: 27, scope: !6981)
!6998 = !DILocation(line: 1508, column: 44, scope: !6981)
!6999 = !DILocation(line: 1508, column: 50, scope: !6981)
!7000 = !DILocation(line: 1509, column: 23, scope: !6981)
!7001 = !DILocation(line: 1509, column: 29, scope: !6981)
!7002 = !DILocation(line: 1509, column: 34, scope: !6981)
!7003 = !DILocation(line: 1509, column: 9, scope: !6981)
!7004 = !DILocation(line: 1509, column: 15, scope: !6981)
!7005 = !DILocation(line: 1508, column: 44, scope: !7006)
!7006 = !DILexicalBlockFile(scope: !6981, file: !47, discriminator: 1)
!7007 = !DILocation(line: 1508, column: 44, scope: !7008)
!7008 = !DILexicalBlockFile(scope: !6981, file: !47, discriminator: 2)
!7009 = !DILocation(line: 1508, column: 44, scope: !7010)
!7010 = !DILexicalBlockFile(scope: !6981, file: !47, discriminator: 3)
!7011 = !DILocation(line: 1508, column: 27, scope: !7010)
!7012 = !DILocation(line: 1511, column: 9, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6981, file: !47, line: 1511, column: 9)
!7014 = !DILocation(line: 1511, column: 15, scope: !7013)
!7015 = !DILocation(line: 1511, column: 21, scope: !7013)
!7016 = !DILocation(line: 1511, column: 38, scope: !7017)
!7017 = !DILexicalBlockFile(scope: !7013, file: !47, discriminator: 1)
!7018 = !DILocation(line: 1511, column: 44, scope: !7017)
!7019 = !DILocation(line: 1511, column: 49, scope: !7017)
!7020 = !DILocation(line: 1511, column: 24, scope: !7017)
!7021 = !DILocation(line: 1511, column: 30, scope: !7017)
!7022 = !DILocation(line: 1511, column: 9, scope: !7017)
!7023 = !DILocation(line: 1512, column: 9, scope: !7013)
!7024 = !DILocation(line: 1514, column: 9, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !6981, file: !47, line: 1514, column: 9)
!7026 = !DILocation(line: 1514, column: 18, scope: !7025)
!7027 = !DILocation(line: 1514, column: 24, scope: !7025)
!7028 = !DILocation(line: 1514, column: 9, scope: !6981)
!7029 = !DILocation(line: 1515, column: 9, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7025, file: !47, line: 1514, column: 29)
!7031 = !DILocation(line: 1516, column: 9, scope: !7030)
!7032 = !DILocation(line: 1516, column: 15, scope: !7030)
!7033 = !DILocation(line: 1516, column: 27, scope: !7030)
!7034 = !DILocation(line: 1517, column: 5, scope: !7030)
!7035 = !DILocation(line: 1518, column: 9, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7025, file: !47, line: 1517, column: 12)
!7037 = !DILocation(line: 1519, column: 31, scope: !7036)
!7038 = !DILocation(line: 1519, column: 40, scope: !7036)
!7039 = !DILocation(line: 1519, column: 46, scope: !7036)
!7040 = !DILocation(line: 1519, column: 9, scope: !7036)
!7041 = !DILocation(line: 1520, column: 23, scope: !7036)
!7042 = !DILocation(line: 1520, column: 29, scope: !7036)
!7043 = !DILocation(line: 1520, column: 42, scope: !7036)
!7044 = !DILocation(line: 1520, column: 9, scope: !7036)
!7045 = !DILocation(line: 1522, column: 9, scope: !7036)
!7046 = !DILocation(line: 1522, column: 15, scope: !7036)
!7047 = !DILocation(line: 1522, column: 27, scope: !7036)
!7048 = !DILocation(line: 1523, column: 13, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7036, file: !47, line: 1523, column: 13)
!7050 = !DILocation(line: 1523, column: 22, scope: !7049)
!7051 = !DILocation(line: 1523, column: 28, scope: !7049)
!7052 = !DILocation(line: 1523, column: 13, scope: !7036)
!7053 = !DILocation(line: 1524, column: 39, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7049, file: !47, line: 1523, column: 33)
!7055 = !DILocation(line: 1524, column: 13, scope: !7054)
!7056 = !DILocation(line: 1525, column: 9, scope: !7054)
!7057 = !DILocation(line: 1525, column: 20, scope: !7058)
!7058 = !DILexicalBlockFile(scope: !7059, file: !47, discriminator: 1)
!7059 = distinct !DILexicalBlock(scope: !7049, file: !47, line: 1525, column: 20)
!7060 = !DILocation(line: 1525, column: 35, scope: !7058)
!7061 = !DILocation(line: 1525, column: 40, scope: !7062)
!7062 = !DILexicalBlockFile(scope: !7059, file: !47, discriminator: 2)
!7063 = !DILocation(line: 1525, column: 56, scope: !7062)
!7064 = !DILocation(line: 1525, column: 62, scope: !7062)
!7065 = !DILocation(line: 1525, column: 20, scope: !7062)
!7066 = !DILocation(line: 1526, column: 39, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7059, file: !47, line: 1525, column: 68)
!7068 = !DILocation(line: 1526, column: 44, scope: !7067)
!7069 = !DILocation(line: 1526, column: 50, scope: !7067)
!7070 = !DILocation(line: 1526, column: 13, scope: !7067)
!7071 = !DILocation(line: 1527, column: 9, scope: !7067)
!7072 = !DILocation(line: 1528, column: 27, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7059, file: !47, line: 1527, column: 16)
!7074 = !DILocation(line: 1528, column: 33, scope: !7073)
!7075 = !DILocation(line: 1528, column: 13, scope: !7073)
!7076 = !DILocation(line: 1531, column: 17, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7073, file: !47, line: 1531, column: 17)
!7078 = !DILocation(line: 1531, column: 32, scope: !7077)
!7079 = !DILocation(line: 1531, column: 35, scope: !7080)
!7080 = !DILexicalBlockFile(scope: !7077, file: !47, discriminator: 1)
!7081 = !DILocation(line: 1531, column: 51, scope: !7080)
!7082 = !DILocation(line: 1531, column: 54, scope: !7080)
!7083 = !DILocation(line: 1531, column: 17, scope: !7080)
!7084 = !DILocation(line: 1532, column: 22, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !47, line: 1532, column: 21)
!7086 = distinct !DILexicalBlock(scope: !7077, file: !47, line: 1531, column: 88)
!7087 = !DILocation(line: 1532, column: 28, scope: !7085)
!7088 = !DILocation(line: 1532, column: 21, scope: !7086)
!7089 = !DILocation(line: 1533, column: 35, scope: !7085)
!7090 = !DILocation(line: 1533, column: 41, scope: !7085)
!7091 = !DILocation(line: 1533, column: 54, scope: !7085)
!7092 = !DILocation(line: 1533, column: 21, scope: !7085)
!7093 = !DILocation(line: 1534, column: 46, scope: !7086)
!7094 = !DILocation(line: 1534, column: 55, scope: !7086)
!7095 = !DILocation(line: 1534, column: 61, scope: !7086)
!7096 = !DILocation(line: 1534, column: 67, scope: !7086)
!7097 = !DILocation(line: 1534, column: 17, scope: !7086)
!7098 = !DILocation(line: 1535, column: 13, scope: !7086)
!7099 = !DILocation(line: 1537, column: 9, scope: !7036)
!7100 = !DILocation(line: 1539, column: 1, scope: !6981)
!7101 = distinct !DISubprogram(name: "json_print_section_footer", scope: !47, file: !47, line: 1541, type: !2476, isLocal: true, isDefinition: true, scopeLine: 1542, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7102 = !DILocalVariable(name: "wctx", arg: 1, scope: !7101, file: !47, line: 1541, type: !2418)
!7103 = !DILocation(line: 1541, column: 54, scope: !7101)
!7104 = !DILocalVariable(name: "json", scope: !7101, file: !47, line: 1543, type: !6958)
!7105 = !DILocation(line: 1543, column: 18, scope: !7101)
!7106 = !DILocation(line: 1543, column: 25, scope: !7101)
!7107 = !DILocation(line: 1543, column: 31, scope: !7101)
!7108 = !DILocalVariable(name: "section", scope: !7101, file: !47, line: 1544, type: !2427)
!7109 = !DILocation(line: 1544, column: 27, scope: !7101)
!7110 = !DILocation(line: 1544, column: 51, scope: !7101)
!7111 = !DILocation(line: 1544, column: 57, scope: !7101)
!7112 = !DILocation(line: 1544, column: 37, scope: !7101)
!7113 = !DILocation(line: 1544, column: 43, scope: !7101)
!7114 = !DILocation(line: 1546, column: 9, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7101, file: !47, line: 1546, column: 9)
!7116 = !DILocation(line: 1546, column: 15, scope: !7115)
!7117 = !DILocation(line: 1546, column: 21, scope: !7115)
!7118 = !DILocation(line: 1546, column: 9, scope: !7101)
!7119 = !DILocation(line: 1547, column: 9, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7115, file: !47, line: 1546, column: 27)
!7121 = !DILocation(line: 1547, column: 15, scope: !7120)
!7122 = !DILocation(line: 1547, column: 27, scope: !7120)
!7123 = !DILocation(line: 1548, column: 9, scope: !7120)
!7124 = !DILocation(line: 1549, column: 5, scope: !7120)
!7125 = !DILocation(line: 1549, column: 16, scope: !7126)
!7126 = !DILexicalBlockFile(scope: !7127, file: !47, discriminator: 1)
!7127 = distinct !DILexicalBlock(scope: !7115, file: !47, line: 1549, column: 16)
!7128 = !DILocation(line: 1549, column: 25, scope: !7126)
!7129 = !DILocation(line: 1549, column: 31, scope: !7126)
!7130 = !DILocation(line: 1550, column: 9, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7127, file: !47, line: 1549, column: 36)
!7132 = !DILocation(line: 1551, column: 9, scope: !7131)
!7133 = !DILocation(line: 1551, column: 15, scope: !7131)
!7134 = !DILocation(line: 1551, column: 27, scope: !7131)
!7135 = !DILocation(line: 1552, column: 23, scope: !7131)
!7136 = !DILocation(line: 1552, column: 29, scope: !7131)
!7137 = !DILocation(line: 1552, column: 42, scope: !7131)
!7138 = !DILocation(line: 1552, column: 9, scope: !7131)
!7139 = !DILocation(line: 1553, column: 9, scope: !7131)
!7140 = !DILocation(line: 1554, column: 5, scope: !7131)
!7141 = !DILocation(line: 1555, column: 22, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7127, file: !47, line: 1554, column: 12)
!7143 = !DILocation(line: 1555, column: 28, scope: !7142)
!7144 = !DILocation(line: 1555, column: 9, scope: !7142)
!7145 = !DILocation(line: 1556, column: 9, scope: !7142)
!7146 = !DILocation(line: 1556, column: 15, scope: !7142)
!7147 = !DILocation(line: 1556, column: 27, scope: !7142)
!7148 = !DILocation(line: 1557, column: 14, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7142, file: !47, line: 1557, column: 13)
!7150 = !DILocation(line: 1557, column: 20, scope: !7149)
!7151 = !DILocation(line: 1557, column: 13, scope: !7142)
!7152 = !DILocation(line: 1558, column: 27, scope: !7149)
!7153 = !DILocation(line: 1558, column: 33, scope: !7149)
!7154 = !DILocation(line: 1558, column: 46, scope: !7149)
!7155 = !DILocation(line: 1558, column: 13, scope: !7149)
!7156 = !DILocation(line: 1559, column: 9, scope: !7142)
!7157 = !DILocation(line: 1561, column: 1, scope: !7101)
!7158 = distinct !DISubprogram(name: "json_print_int", scope: !47, file: !47, line: 1586, type: !2482, isLocal: true, isDefinition: true, scopeLine: 1587, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7159 = !DILocalVariable(name: "wctx", arg: 1, scope: !7158, file: !47, line: 1586, type: !2418)
!7160 = !DILocation(line: 1586, column: 43, scope: !7158)
!7161 = !DILocalVariable(name: "key", arg: 2, scope: !7158, file: !47, line: 1586, type: !1027)
!7162 = !DILocation(line: 1586, column: 61, scope: !7158)
!7163 = !DILocalVariable(name: "value", arg: 3, scope: !7158, file: !47, line: 1586, type: !1109)
!7164 = !DILocation(line: 1586, column: 80, scope: !7158)
!7165 = !DILocalVariable(name: "json", scope: !7158, file: !47, line: 1588, type: !6958)
!7166 = !DILocation(line: 1588, column: 18, scope: !7158)
!7167 = !DILocation(line: 1588, column: 25, scope: !7158)
!7168 = !DILocation(line: 1588, column: 31, scope: !7158)
!7169 = !DILocalVariable(name: "buf", scope: !7158, file: !47, line: 1589, type: !2452)
!7170 = !DILocation(line: 1589, column: 14, scope: !7158)
!7171 = !DILocation(line: 1591, column: 23, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7158, file: !47, line: 1591, column: 9)
!7173 = !DILocation(line: 1591, column: 29, scope: !7172)
!7174 = !DILocation(line: 1591, column: 9, scope: !7172)
!7175 = !DILocation(line: 1591, column: 15, scope: !7172)
!7176 = !DILocation(line: 1591, column: 9, scope: !7158)
!7177 = !DILocation(line: 1592, column: 22, scope: !7172)
!7178 = !DILocation(line: 1592, column: 28, scope: !7172)
!7179 = !DILocation(line: 1592, column: 9, scope: !7172)
!7180 = !DILocation(line: 1593, column: 10, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7158, file: !47, line: 1593, column: 9)
!7182 = !DILocation(line: 1593, column: 16, scope: !7181)
!7183 = !DILocation(line: 1593, column: 9, scope: !7158)
!7184 = !DILocation(line: 1594, column: 23, scope: !7181)
!7185 = !DILocation(line: 1594, column: 29, scope: !7181)
!7186 = !DILocation(line: 1594, column: 42, scope: !7181)
!7187 = !DILocation(line: 1594, column: 9, scope: !7181)
!7188 = !DILocation(line: 1596, column: 5, scope: !7158)
!7189 = !DILocation(line: 1597, column: 50, scope: !7158)
!7190 = !DILocation(line: 1597, column: 55, scope: !7158)
!7191 = !DILocation(line: 1597, column: 28, scope: !7158)
!7192 = !DILocation(line: 1597, column: 62, scope: !7158)
!7193 = !DILocation(line: 1597, column: 5, scope: !7194)
!7194 = !DILexicalBlockFile(scope: !7158, file: !47, discriminator: 1)
!7195 = !DILocation(line: 1598, column: 5, scope: !7158)
!7196 = !DILocation(line: 1599, column: 1, scope: !7158)
!7197 = distinct !DISubprogram(name: "json_print_str", scope: !47, file: !47, line: 1575, type: !2491, isLocal: true, isDefinition: true, scopeLine: 1576, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7198 = !DILocalVariable(name: "wctx", arg: 1, scope: !7197, file: !47, line: 1575, type: !2418)
!7199 = !DILocation(line: 1575, column: 43, scope: !7197)
!7200 = !DILocalVariable(name: "key", arg: 2, scope: !7197, file: !47, line: 1575, type: !1027)
!7201 = !DILocation(line: 1575, column: 61, scope: !7197)
!7202 = !DILocalVariable(name: "value", arg: 3, scope: !7197, file: !47, line: 1575, type: !1027)
!7203 = !DILocation(line: 1575, column: 78, scope: !7197)
!7204 = !DILocalVariable(name: "json", scope: !7197, file: !47, line: 1577, type: !6958)
!7205 = !DILocation(line: 1577, column: 18, scope: !7197)
!7206 = !DILocation(line: 1577, column: 25, scope: !7197)
!7207 = !DILocation(line: 1577, column: 31, scope: !7197)
!7208 = !DILocation(line: 1579, column: 23, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7197, file: !47, line: 1579, column: 9)
!7210 = !DILocation(line: 1579, column: 29, scope: !7209)
!7211 = !DILocation(line: 1579, column: 9, scope: !7209)
!7212 = !DILocation(line: 1579, column: 15, scope: !7209)
!7213 = !DILocation(line: 1579, column: 9, scope: !7197)
!7214 = !DILocation(line: 1580, column: 22, scope: !7209)
!7215 = !DILocation(line: 1580, column: 28, scope: !7209)
!7216 = !DILocation(line: 1580, column: 9, scope: !7209)
!7217 = !DILocation(line: 1581, column: 10, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7197, file: !47, line: 1581, column: 9)
!7219 = !DILocation(line: 1581, column: 16, scope: !7218)
!7220 = !DILocation(line: 1581, column: 9, scope: !7197)
!7221 = !DILocation(line: 1582, column: 23, scope: !7218)
!7222 = !DILocation(line: 1582, column: 29, scope: !7218)
!7223 = !DILocation(line: 1582, column: 42, scope: !7218)
!7224 = !DILocation(line: 1582, column: 9, scope: !7218)
!7225 = !DILocation(line: 1583, column: 25, scope: !7197)
!7226 = !DILocation(line: 1583, column: 31, scope: !7197)
!7227 = !DILocation(line: 1583, column: 36, scope: !7197)
!7228 = !DILocation(line: 1583, column: 5, scope: !7197)
!7229 = !DILocation(line: 1584, column: 1, scope: !7197)
!7230 = distinct !DISubprogram(name: "json_get_name", scope: !47, file: !47, line: 1469, type: !1031, isLocal: true, isDefinition: true, scopeLine: 1469, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7231 = !DILocalVariable(name: "ctx", arg: 1, scope: !7230, file: !47, line: 1469, type: !1013)
!7232 = !DILocation(line: 1469, column: 40, scope: !7230)
!7233 = !DILocation(line: 1469, column: 47, scope: !7230)
!7234 = !DILocalVariable(name: "dst", arg: 1, scope: !2523, file: !47, line: 1481, type: !2526)
!7235 = !DILocation(line: 1481, column: 46, scope: !2523)
!7236 = !DILocalVariable(name: "src", arg: 2, scope: !2523, file: !47, line: 1481, type: !1027)
!7237 = !DILocation(line: 1481, column: 63, scope: !2523)
!7238 = !DILocalVariable(name: "log_ctx", arg: 3, scope: !2523, file: !47, line: 1481, type: !1013)
!7239 = !DILocation(line: 1481, column: 74, scope: !2523)
!7240 = !DILocalVariable(name: "p", scope: !2523, file: !47, line: 1485, type: !1027)
!7241 = !DILocation(line: 1485, column: 17, scope: !2523)
!7242 = !DILocation(line: 1487, column: 14, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !2523, file: !47, line: 1487, column: 5)
!7244 = !DILocation(line: 1487, column: 12, scope: !7243)
!7245 = !DILocation(line: 1487, column: 10, scope: !7243)
!7246 = !DILocation(line: 1487, column: 20, scope: !7247)
!7247 = !DILexicalBlockFile(scope: !7248, file: !47, discriminator: 1)
!7248 = distinct !DILexicalBlock(scope: !7243, file: !47, line: 1487, column: 5)
!7249 = !DILocation(line: 1487, column: 19, scope: !7247)
!7250 = !DILocation(line: 1487, column: 5, scope: !7247)
!7251 = !DILocalVariable(name: "s", scope: !7252, file: !47, line: 1488, type: !1014)
!7252 = distinct !DILexicalBlock(scope: !7248, file: !47, line: 1487, column: 28)
!7253 = !DILocation(line: 1488, column: 15, scope: !7252)
!7254 = !DILocation(line: 1488, column: 40, scope: !7252)
!7255 = !DILocation(line: 1488, column: 39, scope: !7252)
!7256 = !DILocation(line: 1488, column: 19, scope: !7252)
!7257 = !DILocation(line: 1489, column: 13, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7252, file: !47, line: 1489, column: 13)
!7259 = !DILocation(line: 1489, column: 13, scope: !7252)
!7260 = !DILocation(line: 1490, column: 29, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7258, file: !47, line: 1489, column: 16)
!7262 = !DILocation(line: 1490, column: 13, scope: !7261)
!7263 = !DILocation(line: 1491, column: 29, scope: !7261)
!7264 = !DILocation(line: 1491, column: 45, scope: !7261)
!7265 = !DILocation(line: 1491, column: 47, scope: !7261)
!7266 = !DILocation(line: 1491, column: 34, scope: !7261)
!7267 = !DILocation(line: 1491, column: 13, scope: !7261)
!7268 = !DILocation(line: 1492, column: 9, scope: !7261)
!7269 = !DILocation(line: 1492, column: 36, scope: !7270)
!7270 = !DILexicalBlockFile(scope: !7271, file: !47, discriminator: 1)
!7271 = distinct !DILexicalBlock(scope: !7258, file: !47, line: 1492, column: 20)
!7272 = !DILocation(line: 1492, column: 35, scope: !7270)
!7273 = !DILocation(line: 1492, column: 20, scope: !7270)
!7274 = !DILocation(line: 1492, column: 38, scope: !7270)
!7275 = !DILocation(line: 1493, column: 24, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7271, file: !47, line: 1492, column: 44)
!7277 = !DILocation(line: 1493, column: 43, scope: !7276)
!7278 = !DILocation(line: 1493, column: 42, scope: !7276)
!7279 = !DILocation(line: 1493, column: 45, scope: !7276)
!7280 = !DILocation(line: 1493, column: 13, scope: !7276)
!7281 = !DILocation(line: 1494, column: 9, scope: !7276)
!7282 = !DILocation(line: 1495, column: 29, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7271, file: !47, line: 1494, column: 16)
!7284 = !DILocation(line: 1495, column: 35, scope: !7283)
!7285 = !DILocation(line: 1495, column: 34, scope: !7283)
!7286 = !DILocation(line: 1495, column: 13, scope: !7283)
!7287 = !DILocation(line: 1497, column: 5, scope: !7252)
!7288 = !DILocation(line: 1487, column: 24, scope: !7289)
!7289 = !DILexicalBlockFile(scope: !7248, file: !47, discriminator: 2)
!7290 = !DILocation(line: 1487, column: 5, scope: !7289)
!7291 = distinct !{!7291, !7292}
!7292 = !DILocation(line: 1487, column: 5, scope: !2523)
!7293 = !DILocation(line: 1498, column: 12, scope: !2523)
!7294 = !DILocation(line: 1498, column: 17, scope: !2523)
!7295 = !DILocation(line: 1498, column: 5, scope: !2523)
!7296 = distinct !DISubprogram(name: "json_print_item_str", scope: !47, file: !47, line: 1563, type: !2491, isLocal: true, isDefinition: true, scopeLine: 1565, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7297 = !DILocalVariable(name: "wctx", arg: 1, scope: !7296, file: !47, line: 1563, type: !2418)
!7298 = !DILocation(line: 1563, column: 55, scope: !7296)
!7299 = !DILocalVariable(name: "key", arg: 2, scope: !7296, file: !47, line: 1564, type: !1027)
!7300 = !DILocation(line: 1564, column: 52, scope: !7296)
!7301 = !DILocalVariable(name: "value", arg: 3, scope: !7296, file: !47, line: 1564, type: !1027)
!7302 = !DILocation(line: 1564, column: 69, scope: !7296)
!7303 = !DILocalVariable(name: "buf", scope: !7296, file: !47, line: 1566, type: !2452)
!7304 = !DILocation(line: 1566, column: 14, scope: !7296)
!7305 = !DILocation(line: 1568, column: 5, scope: !7296)
!7306 = !DILocation(line: 1569, column: 45, scope: !7296)
!7307 = !DILocation(line: 1569, column: 50, scope: !7296)
!7308 = !DILocation(line: 1569, column: 23, scope: !7296)
!7309 = !DILocation(line: 1569, column: 5, scope: !7310)
!7310 = !DILexicalBlockFile(scope: !7296, file: !47, discriminator: 1)
!7311 = !DILocation(line: 1570, column: 5, scope: !7296)
!7312 = !DILocation(line: 1571, column: 45, scope: !7296)
!7313 = !DILocation(line: 1571, column: 52, scope: !7296)
!7314 = !DILocation(line: 1571, column: 23, scope: !7296)
!7315 = !DILocation(line: 1571, column: 5, scope: !7310)
!7316 = !DILocation(line: 1572, column: 5, scope: !7296)
!7317 = !DILocation(line: 1573, column: 1, scope: !7296)
!7318 = distinct !DISubprogram(name: "bprint_bytes", scope: !47, file: !47, line: 529, type: !7319, isLocal: true, isDefinition: true, scopeLine: 530, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7319 = !DISubroutineType(types: !7320)
!7320 = !{null, !2526, !1139, !1212}
!7321 = !DILocalVariable(name: "bp", arg: 1, scope: !7318, file: !47, line: 529, type: !2526)
!7322 = !DILocation(line: 529, column: 36, scope: !7318)
!7323 = !DILocalVariable(name: "ubuf", arg: 2, scope: !7318, file: !47, line: 529, type: !1139)
!7324 = !DILocation(line: 529, column: 55, scope: !7318)
!7325 = !DILocalVariable(name: "ubuf_size", arg: 3, scope: !7318, file: !47, line: 529, type: !1212)
!7326 = !DILocation(line: 529, column: 68, scope: !7318)
!7327 = !DILocalVariable(name: "i", scope: !7318, file: !47, line: 531, type: !1041)
!7328 = !DILocation(line: 531, column: 9, scope: !7318)
!7329 = !DILocation(line: 532, column: 16, scope: !7318)
!7330 = !DILocation(line: 532, column: 5, scope: !7318)
!7331 = !DILocation(line: 533, column: 12, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7318, file: !47, line: 533, column: 5)
!7333 = !DILocation(line: 533, column: 10, scope: !7332)
!7334 = !DILocation(line: 533, column: 17, scope: !7335)
!7335 = !DILexicalBlockFile(scope: !7336, file: !47, discriminator: 1)
!7336 = distinct !DILexicalBlock(scope: !7332, file: !47, line: 533, column: 5)
!7337 = !DILocation(line: 533, column: 21, scope: !7335)
!7338 = !DILocation(line: 533, column: 19, scope: !7335)
!7339 = !DILocation(line: 533, column: 5, scope: !7335)
!7340 = !DILocation(line: 534, column: 20, scope: !7336)
!7341 = !DILocation(line: 534, column: 37, scope: !7336)
!7342 = !DILocation(line: 534, column: 32, scope: !7336)
!7343 = !DILocation(line: 534, column: 9, scope: !7336)
!7344 = !DILocation(line: 533, column: 33, scope: !7345)
!7345 = !DILexicalBlockFile(scope: !7336, file: !47, discriminator: 2)
!7346 = !DILocation(line: 533, column: 5, scope: !7345)
!7347 = distinct !{!7347, !7348}
!7348 = !DILocation(line: 533, column: 5, scope: !7318)
!7349 = !DILocation(line: 535, column: 1, scope: !7318)
!7350 = distinct !DISubprogram(name: "writer_get_name", scope: !47, file: !47, line: 474, type: !1031, isLocal: true, isDefinition: true, scopeLine: 475, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7351 = !DILocalVariable(name: "p", arg: 1, scope: !7350, file: !47, line: 474, type: !1013)
!7352 = !DILocation(line: 474, column: 42, scope: !7350)
!7353 = !DILocalVariable(name: "wctx", scope: !7350, file: !47, line: 476, type: !2418)
!7354 = !DILocation(line: 476, column: 20, scope: !7350)
!7355 = !DILocation(line: 476, column: 27, scope: !7350)
!7356 = !DILocation(line: 477, column: 12, scope: !7350)
!7357 = !DILocation(line: 477, column: 18, scope: !7350)
!7358 = !DILocation(line: 477, column: 26, scope: !7350)
!7359 = !DILocation(line: 477, column: 5, scope: !7350)
!7360 = distinct !DISubprogram(name: "writer_child_next", scope: !47, file: !47, line: 495, type: !1065, isLocal: true, isDefinition: true, scopeLine: 496, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7361 = !DILocalVariable(name: "obj", arg: 1, scope: !7360, file: !47, line: 495, type: !1013)
!7362 = !DILocation(line: 495, column: 38, scope: !7360)
!7363 = !DILocalVariable(name: "prev", arg: 2, scope: !7360, file: !47, line: 495, type: !1013)
!7364 = !DILocation(line: 495, column: 49, scope: !7360)
!7365 = !DILocalVariable(name: "ctx", scope: !7360, file: !47, line: 497, type: !2418)
!7366 = !DILocation(line: 497, column: 20, scope: !7360)
!7367 = !DILocation(line: 497, column: 26, scope: !7360)
!7368 = !DILocation(line: 498, column: 10, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7360, file: !47, line: 498, column: 9)
!7370 = !DILocation(line: 498, column: 15, scope: !7369)
!7371 = !DILocation(line: 498, column: 18, scope: !7372)
!7372 = !DILexicalBlockFile(scope: !7369, file: !47, discriminator: 1)
!7373 = !DILocation(line: 498, column: 23, scope: !7372)
!7374 = !DILocation(line: 498, column: 30, scope: !7372)
!7375 = !DILocation(line: 498, column: 33, scope: !7376)
!7376 = !DILexicalBlockFile(scope: !7369, file: !47, discriminator: 2)
!7377 = !DILocation(line: 498, column: 38, scope: !7376)
!7378 = !DILocation(line: 498, column: 46, scope: !7376)
!7379 = !DILocation(line: 498, column: 57, scope: !7376)
!7380 = !DILocation(line: 498, column: 60, scope: !7381)
!7381 = !DILexicalBlockFile(scope: !7369, file: !47, discriminator: 3)
!7382 = !DILocation(line: 498, column: 65, scope: !7381)
!7383 = !DILocation(line: 498, column: 9, scope: !7381)
!7384 = !DILocation(line: 499, column: 16, scope: !7369)
!7385 = !DILocation(line: 499, column: 21, scope: !7369)
!7386 = !DILocation(line: 499, column: 9, scope: !7369)
!7387 = !DILocation(line: 500, column: 5, scope: !7360)
!7388 = !DILocation(line: 501, column: 1, scope: !7360)
!7389 = distinct !DISubprogram(name: "xml_init", scope: !47, file: !47, line: 1636, type: !2416, isLocal: true, isDefinition: true, scopeLine: 1637, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7390 = !DILocalVariable(name: "wctx", arg: 1, scope: !7389, file: !47, line: 1636, type: !2418)
!7391 = !DILocation(line: 1636, column: 58, scope: !7389)
!7392 = !DILocalVariable(name: "xml", scope: !7389, file: !47, line: 1638, type: !7393)
!7393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7394, size: 64, align: 64)
!7394 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMLContext", file: !47, line: 1621, baseType: !7395)
!7395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "XMLContext", file: !47, line: 1615, size: 192, align: 64, elements: !7396)
!7396 = !{!7397, !7398, !7399, !7400, !7401}
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7395, file: !47, line: 1616, baseType: !1107, size: 64, align: 64)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "within_tag", scope: !7395, file: !47, line: 1617, baseType: !1041, size: 32, align: 32, offset: 64)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "indent_level", scope: !7395, file: !47, line: 1618, baseType: !1041, size: 32, align: 32, offset: 96)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "fully_qualified", scope: !7395, file: !47, line: 1619, baseType: !1041, size: 32, align: 32, offset: 128)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "xsd_strict", scope: !7395, file: !47, line: 1620, baseType: !1041, size: 32, align: 32, offset: 160)
!7402 = !DILocation(line: 1638, column: 17, scope: !7389)
!7403 = !DILocation(line: 1638, column: 23, scope: !7389)
!7404 = !DILocation(line: 1638, column: 29, scope: !7389)
!7405 = !DILocation(line: 1640, column: 9, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7389, file: !47, line: 1640, column: 9)
!7407 = !DILocation(line: 1640, column: 14, scope: !7406)
!7408 = !DILocation(line: 1640, column: 9, scope: !7389)
!7409 = !DILocation(line: 1641, column: 9, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7406, file: !47, line: 1640, column: 26)
!7411 = !DILocation(line: 1641, column: 14, scope: !7410)
!7412 = !DILocation(line: 1641, column: 30, scope: !7410)
!7413 = !DILocation(line: 1649, column: 13, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7410, file: !47, line: 1649, column: 13)
!7415 = !DILocation(line: 1649, column: 13, scope: !7410)
!7416 = !DILocation(line: 1649, column: 41, scope: !7417)
!7417 = !DILexicalBlockFile(scope: !7418, file: !47, discriminator: 1)
!7418 = distinct !DILexicalBlock(scope: !7414, file: !47, line: 1649, column: 32)
!7419 = !DILocation(line: 1649, column: 34, scope: !7417)
!7420 = !DILocation(line: 1649, column: 221, scope: !7417)
!7421 = !DILocation(line: 1650, column: 13, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7410, file: !47, line: 1650, column: 13)
!7423 = !DILocation(line: 1650, column: 13, scope: !7410)
!7424 = !DILocation(line: 1650, column: 39, scope: !7425)
!7425 = !DILexicalBlockFile(scope: !7426, file: !47, discriminator: 1)
!7426 = distinct !DILexicalBlock(scope: !7422, file: !47, line: 1650, column: 30)
!7427 = !DILocation(line: 1650, column: 32, scope: !7425)
!7428 = !DILocation(line: 1650, column: 213, scope: !7425)
!7429 = !DILocation(line: 1651, column: 13, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7410, file: !47, line: 1651, column: 13)
!7431 = !DILocation(line: 1651, column: 13, scope: !7410)
!7432 = !DILocation(line: 1651, column: 40, scope: !7433)
!7433 = !DILexicalBlockFile(scope: !7434, file: !47, discriminator: 1)
!7434 = distinct !DILexicalBlock(scope: !7430, file: !47, line: 1651, column: 31)
!7435 = !DILocation(line: 1651, column: 33, scope: !7433)
!7436 = !DILocation(line: 1651, column: 218, scope: !7433)
!7437 = !DILocation(line: 1653, column: 13, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7410, file: !47, line: 1653, column: 13)
!7439 = !DILocation(line: 1653, column: 28, scope: !7438)
!7440 = !DILocation(line: 1653, column: 31, scope: !7441)
!7441 = !DILexicalBlockFile(scope: !7438, file: !47, discriminator: 1)
!7442 = !DILocation(line: 1653, column: 13, scope: !7441)
!7443 = !DILocation(line: 1654, column: 20, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7438, file: !47, line: 1653, column: 48)
!7445 = !DILocation(line: 1654, column: 13, scope: !7444)
!7446 = !DILocation(line: 1657, column: 13, scope: !7444)
!7447 = !DILocation(line: 1659, column: 5, scope: !7410)
!7448 = !DILocation(line: 1661, column: 5, scope: !7389)
!7449 = !DILocation(line: 1662, column: 1, scope: !7389)
!7450 = distinct !DISubprogram(name: "xml_print_section_header", scope: !47, file: !47, line: 1684, type: !2476, isLocal: true, isDefinition: true, scopeLine: 1685, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7451 = !DILocalVariable(name: "wctx", arg: 1, scope: !7450, file: !47, line: 1684, type: !2418)
!7452 = !DILocation(line: 1684, column: 53, scope: !7450)
!7453 = !DILocalVariable(name: "xml", scope: !7450, file: !47, line: 1686, type: !7393)
!7454 = !DILocation(line: 1686, column: 17, scope: !7450)
!7455 = !DILocation(line: 1686, column: 23, scope: !7450)
!7456 = !DILocation(line: 1686, column: 29, scope: !7450)
!7457 = !DILocalVariable(name: "section", scope: !7450, file: !47, line: 1687, type: !2427)
!7458 = !DILocation(line: 1687, column: 27, scope: !7450)
!7459 = !DILocation(line: 1687, column: 51, scope: !7450)
!7460 = !DILocation(line: 1687, column: 57, scope: !7450)
!7461 = !DILocation(line: 1687, column: 37, scope: !7450)
!7462 = !DILocation(line: 1687, column: 43, scope: !7450)
!7463 = !DILocalVariable(name: "parent_section", scope: !7450, file: !47, line: 1688, type: !2427)
!7464 = !DILocation(line: 1688, column: 27, scope: !7450)
!7465 = !DILocation(line: 1688, column: 44, scope: !7450)
!7466 = !DILocation(line: 1688, column: 50, scope: !7450)
!7467 = !DILocation(line: 1689, column: 23, scope: !7450)
!7468 = !DILocation(line: 1689, column: 29, scope: !7450)
!7469 = !DILocation(line: 1689, column: 34, scope: !7450)
!7470 = !DILocation(line: 1689, column: 9, scope: !7450)
!7471 = !DILocation(line: 1689, column: 15, scope: !7450)
!7472 = !DILocation(line: 1688, column: 44, scope: !7473)
!7473 = !DILexicalBlockFile(scope: !7450, file: !47, discriminator: 1)
!7474 = !DILocation(line: 1688, column: 44, scope: !7475)
!7475 = !DILexicalBlockFile(scope: !7450, file: !47, discriminator: 2)
!7476 = !DILocation(line: 1688, column: 44, scope: !7477)
!7477 = !DILexicalBlockFile(scope: !7450, file: !47, discriminator: 3)
!7478 = !DILocation(line: 1688, column: 27, scope: !7477)
!7479 = !DILocation(line: 1691, column: 9, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7450, file: !47, line: 1691, column: 9)
!7481 = !DILocation(line: 1691, column: 15, scope: !7480)
!7482 = !DILocation(line: 1691, column: 21, scope: !7480)
!7483 = !DILocation(line: 1691, column: 9, scope: !7450)
!7484 = !DILocalVariable(name: "qual", scope: !7485, file: !47, line: 1692, type: !1027)
!7485 = distinct !DILexicalBlock(scope: !7480, file: !47, line: 1691, column: 27)
!7486 = !DILocation(line: 1692, column: 21, scope: !7485)
!7487 = !DILocation(line: 1696, column: 9, scope: !7485)
!7488 = !DILocation(line: 1698, column: 16, scope: !7485)
!7489 = !DILocation(line: 1698, column: 21, scope: !7485)
!7490 = !DILocation(line: 1699, column: 16, scope: !7485)
!7491 = !DILocation(line: 1699, column: 21, scope: !7485)
!7492 = !DILocation(line: 1699, column: 39, scope: !7493)
!7493 = !DILexicalBlockFile(scope: !7485, file: !47, discriminator: 1)
!7494 = !DILocation(line: 1699, column: 16, scope: !7493)
!7495 = !DILocation(line: 1699, column: 16, scope: !7496)
!7496 = !DILexicalBlockFile(scope: !7485, file: !47, discriminator: 2)
!7497 = !DILocation(line: 1699, column: 16, scope: !7498)
!7498 = !DILexicalBlockFile(scope: !7485, file: !47, discriminator: 3)
!7499 = !DILocation(line: 1697, column: 9, scope: !7485)
!7500 = !DILocation(line: 1700, column: 9, scope: !7485)
!7501 = !DILocation(line: 1703, column: 9, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7450, file: !47, line: 1703, column: 9)
!7503 = !DILocation(line: 1703, column: 14, scope: !7502)
!7504 = !DILocation(line: 1703, column: 9, scope: !7450)
!7505 = !DILocation(line: 1704, column: 9, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7502, file: !47, line: 1703, column: 26)
!7507 = !DILocation(line: 1704, column: 14, scope: !7506)
!7508 = !DILocation(line: 1704, column: 25, scope: !7506)
!7509 = !DILocation(line: 1705, column: 9, scope: !7506)
!7510 = !DILocation(line: 1706, column: 5, scope: !7506)
!7511 = !DILocation(line: 1707, column: 9, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7450, file: !47, line: 1707, column: 9)
!7513 = !DILocation(line: 1707, column: 18, scope: !7512)
!7514 = !DILocation(line: 1707, column: 24, scope: !7512)
!7515 = !DILocation(line: 1707, column: 9, scope: !7450)
!7516 = !DILocation(line: 1708, column: 9, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7512, file: !47, line: 1707, column: 29)
!7518 = !DILocation(line: 1708, column: 14, scope: !7517)
!7519 = !DILocation(line: 1708, column: 26, scope: !7517)
!7520 = !DILocation(line: 1709, column: 5, scope: !7517)
!7521 = !DILocation(line: 1710, column: 13, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7523, file: !47, line: 1710, column: 13)
!7523 = distinct !DILexicalBlock(scope: !7512, file: !47, line: 1709, column: 12)
!7524 = !DILocation(line: 1710, column: 28, scope: !7522)
!7525 = !DILocation(line: 1710, column: 32, scope: !7526)
!7526 = !DILexicalBlockFile(scope: !7522, file: !47, discriminator: 1)
!7527 = !DILocation(line: 1710, column: 48, scope: !7526)
!7528 = !DILocation(line: 1710, column: 54, scope: !7526)
!7529 = !DILocation(line: 1710, column: 59, scope: !7526)
!7530 = !DILocation(line: 1711, column: 13, scope: !7522)
!7531 = !DILocation(line: 1711, column: 19, scope: !7522)
!7532 = !DILocation(line: 1711, column: 25, scope: !7522)
!7533 = !DILocation(line: 1711, column: 42, scope: !7526)
!7534 = !DILocation(line: 1711, column: 48, scope: !7526)
!7535 = !DILocation(line: 1711, column: 53, scope: !7526)
!7536 = !DILocation(line: 1711, column: 28, scope: !7526)
!7537 = !DILocation(line: 1711, column: 34, scope: !7526)
!7538 = !DILocation(line: 1710, column: 13, scope: !7539)
!7539 = !DILexicalBlockFile(scope: !7523, file: !47, discriminator: 2)
!7540 = !DILocation(line: 1712, column: 13, scope: !7522)
!7541 = !DILocation(line: 1713, column: 9, scope: !7523)
!7542 = !DILocation(line: 1713, column: 14, scope: !7523)
!7543 = !DILocation(line: 1713, column: 26, scope: !7523)
!7544 = !DILocation(line: 1715, column: 13, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7523, file: !47, line: 1715, column: 13)
!7546 = !DILocation(line: 1715, column: 22, scope: !7545)
!7547 = !DILocation(line: 1715, column: 28, scope: !7545)
!7548 = !DILocation(line: 1715, column: 13, scope: !7523)
!7549 = !DILocation(line: 1716, column: 27, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7545, file: !47, line: 1715, column: 33)
!7551 = !DILocation(line: 1716, column: 32, scope: !7550)
!7552 = !DILocation(line: 1716, column: 45, scope: !7550)
!7553 = !DILocation(line: 1716, column: 13, scope: !7550)
!7554 = !DILocation(line: 1716, column: 73, scope: !7550)
!7555 = !DILocation(line: 1716, column: 82, scope: !7550)
!7556 = !DILocation(line: 1716, column: 56, scope: !7557)
!7557 = !DILexicalBlockFile(scope: !7550, file: !47, discriminator: 1)
!7558 = !DILocation(line: 1717, column: 9, scope: !7550)
!7559 = !DILocation(line: 1718, column: 27, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7545, file: !47, line: 1717, column: 16)
!7561 = !DILocation(line: 1718, column: 32, scope: !7560)
!7562 = !DILocation(line: 1718, column: 45, scope: !7560)
!7563 = !DILocation(line: 1718, column: 13, scope: !7560)
!7564 = !DILocation(line: 1718, column: 71, scope: !7560)
!7565 = !DILocation(line: 1718, column: 80, scope: !7560)
!7566 = !DILocation(line: 1718, column: 56, scope: !7567)
!7567 = !DILexicalBlockFile(scope: !7560, file: !47, discriminator: 1)
!7568 = !DILocation(line: 1719, column: 13, scope: !7560)
!7569 = !DILocation(line: 1719, column: 18, scope: !7560)
!7570 = !DILocation(line: 1719, column: 29, scope: !7560)
!7571 = !DILocation(line: 1722, column: 1, scope: !7450)
!7572 = distinct !DISubprogram(name: "xml_print_section_footer", scope: !47, file: !47, line: 1724, type: !2476, isLocal: true, isDefinition: true, scopeLine: 1725, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7573 = !DILocalVariable(name: "wctx", arg: 1, scope: !7572, file: !47, line: 1724, type: !2418)
!7574 = !DILocation(line: 1724, column: 53, scope: !7572)
!7575 = !DILocalVariable(name: "xml", scope: !7572, file: !47, line: 1726, type: !7393)
!7576 = !DILocation(line: 1726, column: 17, scope: !7572)
!7577 = !DILocation(line: 1726, column: 23, scope: !7572)
!7578 = !DILocation(line: 1726, column: 29, scope: !7572)
!7579 = !DILocalVariable(name: "section", scope: !7572, file: !47, line: 1727, type: !2427)
!7580 = !DILocation(line: 1727, column: 27, scope: !7572)
!7581 = !DILocation(line: 1727, column: 51, scope: !7572)
!7582 = !DILocation(line: 1727, column: 57, scope: !7572)
!7583 = !DILocation(line: 1727, column: 37, scope: !7572)
!7584 = !DILocation(line: 1727, column: 43, scope: !7572)
!7585 = !DILocation(line: 1729, column: 9, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7572, file: !47, line: 1729, column: 9)
!7587 = !DILocation(line: 1729, column: 15, scope: !7586)
!7588 = !DILocation(line: 1729, column: 21, scope: !7586)
!7589 = !DILocation(line: 1729, column: 9, scope: !7572)
!7590 = !DILocation(line: 1730, column: 34, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7586, file: !47, line: 1729, column: 27)
!7592 = !DILocation(line: 1730, column: 39, scope: !7591)
!7593 = !DILocation(line: 1730, column: 9, scope: !7591)
!7594 = !DILocation(line: 1731, column: 5, scope: !7591)
!7595 = !DILocation(line: 1731, column: 16, scope: !7596)
!7596 = !DILexicalBlockFile(scope: !7597, file: !47, discriminator: 1)
!7597 = distinct !DILexicalBlock(scope: !7586, file: !47, line: 1731, column: 16)
!7598 = !DILocation(line: 1731, column: 21, scope: !7596)
!7599 = !DILocation(line: 1732, column: 9, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7597, file: !47, line: 1731, column: 33)
!7601 = !DILocation(line: 1732, column: 14, scope: !7600)
!7602 = !DILocation(line: 1732, column: 25, scope: !7600)
!7603 = !DILocation(line: 1733, column: 9, scope: !7600)
!7604 = !DILocation(line: 1734, column: 9, scope: !7600)
!7605 = !DILocation(line: 1734, column: 14, scope: !7600)
!7606 = !DILocation(line: 1734, column: 26, scope: !7600)
!7607 = !DILocation(line: 1735, column: 5, scope: !7600)
!7608 = !DILocation(line: 1735, column: 16, scope: !7609)
!7609 = !DILexicalBlockFile(scope: !7610, file: !47, discriminator: 1)
!7610 = distinct !DILexicalBlock(scope: !7597, file: !47, line: 1735, column: 16)
!7611 = !DILocation(line: 1735, column: 25, scope: !7609)
!7612 = !DILocation(line: 1735, column: 31, scope: !7609)
!7613 = !DILocation(line: 1736, column: 9, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7610, file: !47, line: 1735, column: 36)
!7615 = !DILocation(line: 1736, column: 14, scope: !7614)
!7616 = !DILocation(line: 1736, column: 26, scope: !7614)
!7617 = !DILocation(line: 1737, column: 5, scope: !7614)
!7618 = !DILocation(line: 1738, column: 23, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7610, file: !47, line: 1737, column: 12)
!7620 = !DILocation(line: 1738, column: 28, scope: !7619)
!7621 = !DILocation(line: 1738, column: 41, scope: !7619)
!7622 = !DILocation(line: 1738, column: 9, scope: !7619)
!7623 = !DILocation(line: 1738, column: 70, scope: !7619)
!7624 = !DILocation(line: 1738, column: 79, scope: !7619)
!7625 = !DILocation(line: 1738, column: 52, scope: !7626)
!7626 = !DILexicalBlockFile(scope: !7619, file: !47, discriminator: 1)
!7627 = !DILocation(line: 1739, column: 9, scope: !7619)
!7628 = !DILocation(line: 1739, column: 14, scope: !7619)
!7629 = !DILocation(line: 1739, column: 26, scope: !7619)
!7630 = !DILocation(line: 1741, column: 1, scope: !7572)
!7631 = distinct !DISubprogram(name: "xml_print_int", scope: !47, file: !47, line: 1766, type: !2482, isLocal: true, isDefinition: true, scopeLine: 1767, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7632 = !DILocalVariable(name: "wctx", arg: 1, scope: !7631, file: !47, line: 1766, type: !2418)
!7633 = !DILocation(line: 1766, column: 42, scope: !7631)
!7634 = !DILocalVariable(name: "key", arg: 2, scope: !7631, file: !47, line: 1766, type: !1027)
!7635 = !DILocation(line: 1766, column: 60, scope: !7631)
!7636 = !DILocalVariable(name: "value", arg: 3, scope: !7631, file: !47, line: 1766, type: !1109)
!7637 = !DILocation(line: 1766, column: 79, scope: !7631)
!7638 = !DILocation(line: 1768, column: 23, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7631, file: !47, line: 1768, column: 9)
!7640 = !DILocation(line: 1768, column: 29, scope: !7639)
!7641 = !DILocation(line: 1768, column: 9, scope: !7639)
!7642 = !DILocation(line: 1768, column: 15, scope: !7639)
!7643 = !DILocation(line: 1768, column: 9, scope: !7631)
!7644 = !DILocation(line: 1769, column: 9, scope: !7639)
!7645 = !DILocation(line: 1770, column: 27, scope: !7631)
!7646 = !DILocation(line: 1770, column: 32, scope: !7631)
!7647 = !DILocation(line: 1770, column: 5, scope: !7631)
!7648 = !DILocation(line: 1771, column: 1, scope: !7631)
!7649 = distinct !DISubprogram(name: "xml_print_str", scope: !47, file: !47, line: 1743, type: !2491, isLocal: true, isDefinition: true, scopeLine: 1744, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7650 = !DILocalVariable(name: "wctx", arg: 1, scope: !7649, file: !47, line: 1743, type: !2418)
!7651 = !DILocation(line: 1743, column: 42, scope: !7649)
!7652 = !DILocalVariable(name: "key", arg: 2, scope: !7649, file: !47, line: 1743, type: !1027)
!7653 = !DILocation(line: 1743, column: 60, scope: !7649)
!7654 = !DILocalVariable(name: "value", arg: 3, scope: !7649, file: !47, line: 1743, type: !1027)
!7655 = !DILocation(line: 1743, column: 77, scope: !7649)
!7656 = !DILocalVariable(name: "buf", scope: !7649, file: !47, line: 1745, type: !2452)
!7657 = !DILocation(line: 1745, column: 14, scope: !7649)
!7658 = !DILocalVariable(name: "xml", scope: !7649, file: !47, line: 1746, type: !7393)
!7659 = !DILocation(line: 1746, column: 17, scope: !7649)
!7660 = !DILocation(line: 1746, column: 23, scope: !7649)
!7661 = !DILocation(line: 1746, column: 29, scope: !7649)
!7662 = !DILocalVariable(name: "section", scope: !7649, file: !47, line: 1747, type: !2427)
!7663 = !DILocation(line: 1747, column: 27, scope: !7649)
!7664 = !DILocation(line: 1747, column: 51, scope: !7649)
!7665 = !DILocation(line: 1747, column: 57, scope: !7649)
!7666 = !DILocation(line: 1747, column: 37, scope: !7649)
!7667 = !DILocation(line: 1747, column: 43, scope: !7649)
!7668 = !DILocation(line: 1749, column: 5, scope: !7649)
!7669 = !DILocation(line: 1751, column: 9, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7649, file: !47, line: 1751, column: 9)
!7671 = !DILocation(line: 1751, column: 18, scope: !7670)
!7672 = !DILocation(line: 1751, column: 24, scope: !7670)
!7673 = !DILocation(line: 1751, column: 9, scope: !7649)
!7674 = !DILocation(line: 1752, column: 23, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7670, file: !47, line: 1751, column: 29)
!7676 = !DILocation(line: 1752, column: 28, scope: !7675)
!7677 = !DILocation(line: 1752, column: 41, scope: !7675)
!7678 = !DILocation(line: 1752, column: 9, scope: !7675)
!7679 = !DILocation(line: 1754, column: 16, scope: !7675)
!7680 = !DILocation(line: 1754, column: 25, scope: !7675)
!7681 = !DILocation(line: 1754, column: 60, scope: !7675)
!7682 = !DILocation(line: 1754, column: 65, scope: !7675)
!7683 = !DILocation(line: 1754, column: 39, scope: !7675)
!7684 = !DILocation(line: 1753, column: 9, scope: !7675)
!7685 = !DILocation(line: 1755, column: 9, scope: !7675)
!7686 = !DILocation(line: 1756, column: 58, scope: !7675)
!7687 = !DILocation(line: 1756, column: 65, scope: !7675)
!7688 = !DILocation(line: 1756, column: 37, scope: !7675)
!7689 = !DILocation(line: 1756, column: 9, scope: !7690)
!7690 = !DILexicalBlockFile(scope: !7675, file: !47, discriminator: 1)
!7691 = !DILocation(line: 1757, column: 5, scope: !7675)
!7692 = !DILocation(line: 1758, column: 27, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !47, line: 1758, column: 13)
!7694 = distinct !DILexicalBlock(scope: !7670, file: !47, line: 1757, column: 12)
!7695 = !DILocation(line: 1758, column: 33, scope: !7693)
!7696 = !DILocation(line: 1758, column: 13, scope: !7693)
!7697 = !DILocation(line: 1758, column: 19, scope: !7693)
!7698 = !DILocation(line: 1758, column: 13, scope: !7694)
!7699 = !DILocation(line: 1759, column: 13, scope: !7693)
!7700 = !DILocation(line: 1760, column: 29, scope: !7694)
!7701 = !DILocation(line: 1760, column: 55, scope: !7694)
!7702 = !DILocation(line: 1760, column: 62, scope: !7694)
!7703 = !DILocation(line: 1760, column: 34, scope: !7694)
!7704 = !DILocation(line: 1760, column: 9, scope: !7705)
!7705 = !DILexicalBlockFile(scope: !7694, file: !47, discriminator: 1)
!7706 = !DILocation(line: 1763, column: 5, scope: !7649)
!7707 = !DILocation(line: 1764, column: 1, scope: !7649)
!7708 = distinct !DISubprogram(name: "xml_get_name", scope: !47, file: !47, line: 1634, type: !1031, isLocal: true, isDefinition: true, scopeLine: 1634, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7709 = !DILocalVariable(name: "ctx", arg: 1, scope: !7708, file: !47, line: 1634, type: !1013)
!7710 = !DILocation(line: 1634, column: 39, scope: !7708)
!7711 = !DILocation(line: 1634, column: 46, scope: !7708)
!7712 = distinct !DISubprogram(name: "xml_escape_str", scope: !47, file: !47, line: 1664, type: !2524, isLocal: true, isDefinition: true, scopeLine: 1665, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7713 = !DILocalVariable(name: "dst", arg: 1, scope: !7712, file: !47, line: 1664, type: !2526)
!7714 = !DILocation(line: 1664, column: 45, scope: !7712)
!7715 = !DILocalVariable(name: "src", arg: 2, scope: !7712, file: !47, line: 1664, type: !1027)
!7716 = !DILocation(line: 1664, column: 62, scope: !7712)
!7717 = !DILocalVariable(name: "log_ctx", arg: 3, scope: !7712, file: !47, line: 1664, type: !1013)
!7718 = !DILocation(line: 1664, column: 73, scope: !7712)
!7719 = !DILocalVariable(name: "p", scope: !7712, file: !47, line: 1666, type: !1027)
!7720 = !DILocation(line: 1666, column: 17, scope: !7712)
!7721 = !DILocation(line: 1668, column: 14, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7712, file: !47, line: 1668, column: 5)
!7723 = !DILocation(line: 1668, column: 12, scope: !7722)
!7724 = !DILocation(line: 1668, column: 10, scope: !7722)
!7725 = !DILocation(line: 1668, column: 20, scope: !7726)
!7726 = !DILexicalBlockFile(scope: !7727, file: !47, discriminator: 1)
!7727 = distinct !DILexicalBlock(scope: !7722, file: !47, line: 1668, column: 5)
!7728 = !DILocation(line: 1668, column: 19, scope: !7726)
!7729 = !DILocation(line: 1668, column: 5, scope: !7726)
!7730 = !DILocation(line: 1669, column: 18, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7727, file: !47, line: 1668, column: 28)
!7732 = !DILocation(line: 1669, column: 17, scope: !7731)
!7733 = !DILocation(line: 1669, column: 9, scope: !7731)
!7734 = !DILocation(line: 1670, column: 31, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7731, file: !47, line: 1669, column: 21)
!7736 = !DILocation(line: 1670, column: 20, scope: !7735)
!7737 = !DILocation(line: 1670, column: 52, scope: !7735)
!7738 = !DILocation(line: 1671, column: 31, scope: !7735)
!7739 = !DILocation(line: 1671, column: 20, scope: !7735)
!7740 = !DILocation(line: 1671, column: 51, scope: !7735)
!7741 = !DILocation(line: 1672, column: 31, scope: !7735)
!7742 = !DILocation(line: 1672, column: 20, scope: !7735)
!7743 = !DILocation(line: 1672, column: 51, scope: !7735)
!7744 = !DILocation(line: 1673, column: 31, scope: !7735)
!7745 = !DILocation(line: 1673, column: 20, scope: !7735)
!7746 = !DILocation(line: 1673, column: 53, scope: !7735)
!7747 = !DILocation(line: 1674, column: 31, scope: !7735)
!7748 = !DILocation(line: 1674, column: 20, scope: !7735)
!7749 = !DILocation(line: 1674, column: 53, scope: !7735)
!7750 = !DILocation(line: 1675, column: 34, scope: !7735)
!7751 = !DILocation(line: 1675, column: 40, scope: !7735)
!7752 = !DILocation(line: 1675, column: 39, scope: !7735)
!7753 = !DILocation(line: 1675, column: 18, scope: !7735)
!7754 = !DILocation(line: 1676, column: 9, scope: !7735)
!7755 = !DILocation(line: 1677, column: 5, scope: !7731)
!7756 = !DILocation(line: 1668, column: 24, scope: !7757)
!7757 = !DILexicalBlockFile(scope: !7727, file: !47, discriminator: 2)
!7758 = !DILocation(line: 1668, column: 5, scope: !7757)
!7759 = distinct !{!7759, !7760}
!7760 = !DILocation(line: 1668, column: 5, scope: !7712)
!7761 = !DILocation(line: 1679, column: 12, scope: !7712)
!7762 = !DILocation(line: 1679, column: 17, scope: !7712)
!7763 = !DILocation(line: 1679, column: 5, scope: !7712)
!7764 = distinct !DISubprogram(name: "writer_print_string", scope: !47, file: !47, line: 735, type: !7765, isLocal: true, isDefinition: true, scopeLine: 737, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7765 = !DISubroutineType(types: !7766)
!7766 = !{!1041, !2418, !1027, !1027, !1041}
!7767 = !DILocalVariable(name: "wctx", arg: 1, scope: !7764, file: !47, line: 735, type: !2418)
!7768 = !DILocation(line: 735, column: 54, scope: !7764)
!7769 = !DILocalVariable(name: "key", arg: 2, scope: !7764, file: !47, line: 736, type: !1027)
!7770 = !DILocation(line: 736, column: 51, scope: !7764)
!7771 = !DILocalVariable(name: "val", arg: 3, scope: !7764, file: !47, line: 736, type: !1027)
!7772 = !DILocation(line: 736, column: 68, scope: !7764)
!7773 = !DILocalVariable(name: "flags", arg: 4, scope: !7764, file: !47, line: 736, type: !1041)
!7774 = !DILocation(line: 736, column: 77, scope: !7764)
!7775 = !DILocalVariable(name: "section", scope: !7764, file: !47, line: 738, type: !2427)
!7776 = !DILocation(line: 738, column: 27, scope: !7764)
!7777 = !DILocation(line: 738, column: 51, scope: !7764)
!7778 = !DILocation(line: 738, column: 57, scope: !7764)
!7779 = !DILocation(line: 738, column: 37, scope: !7764)
!7780 = !DILocation(line: 738, column: 43, scope: !7764)
!7781 = !DILocalVariable(name: "ret", scope: !7764, file: !47, line: 739, type: !1041)
!7782 = !DILocation(line: 739, column: 9, scope: !7764)
!7783 = !DILocation(line: 741, column: 10, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7764, file: !47, line: 741, column: 9)
!7785 = !DILocation(line: 741, column: 16, scope: !7784)
!7786 = !DILocation(line: 742, column: 9, scope: !7784)
!7787 = !DILocation(line: 742, column: 14, scope: !7788)
!7788 = !DILexicalBlockFile(scope: !7784, file: !47, discriminator: 1)
!7789 = !DILocation(line: 742, column: 20, scope: !7788)
!7790 = !DILocation(line: 742, column: 28, scope: !7788)
!7791 = !DILocation(line: 742, column: 34, scope: !7788)
!7792 = !DILocation(line: 741, column: 9, scope: !7793)
!7793 = !DILexicalBlockFile(scope: !7764, file: !47, discriminator: 1)
!7794 = !DILocation(line: 743, column: 9, scope: !7784)
!7795 = !DILocation(line: 745, column: 9, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7764, file: !47, line: 745, column: 9)
!7797 = !DILocation(line: 745, column: 18, scope: !7796)
!7798 = !DILocation(line: 745, column: 35, scope: !7796)
!7799 = !DILocation(line: 745, column: 50, scope: !7800)
!7800 = !DILexicalBlockFile(scope: !7796, file: !47, discriminator: 1)
!7801 = !DILocation(line: 745, column: 59, scope: !7800)
!7802 = !DILocation(line: 745, column: 76, scope: !7800)
!7803 = !DILocation(line: 745, column: 38, scope: !7800)
!7804 = !DILocation(line: 745, column: 9, scope: !7800)
!7805 = !DILocation(line: 746, column: 13, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !47, line: 746, column: 13)
!7807 = distinct !DILexicalBlock(scope: !7796, file: !47, line: 745, column: 90)
!7808 = !DILocation(line: 746, column: 19, scope: !7806)
!7809 = !DILocation(line: 746, column: 13, scope: !7807)
!7810 = !DILocalVariable(name: "key1", scope: !7811, file: !47, line: 747, type: !1014)
!7811 = distinct !DILexicalBlock(scope: !7806, file: !47, line: 746, column: 24)
!7812 = !DILocation(line: 747, column: 19, scope: !7811)
!7813 = !DILocalVariable(name: "val1", scope: !7811, file: !47, line: 747, type: !1014)
!7814 = !DILocation(line: 747, column: 32, scope: !7811)
!7815 = !DILocation(line: 748, column: 35, scope: !7811)
!7816 = !DILocation(line: 748, column: 48, scope: !7811)
!7817 = !DILocation(line: 748, column: 19, scope: !7811)
!7818 = !DILocation(line: 748, column: 17, scope: !7811)
!7819 = !DILocation(line: 749, column: 17, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7811, file: !47, line: 749, column: 17)
!7821 = !DILocation(line: 749, column: 21, scope: !7820)
!7822 = !DILocation(line: 749, column: 17, scope: !7811)
!7823 = !DILocation(line: 749, column: 26, scope: !7824)
!7824 = !DILexicalBlockFile(scope: !7820, file: !47, discriminator: 1)
!7825 = !DILocation(line: 750, column: 35, scope: !7811)
!7826 = !DILocation(line: 750, column: 48, scope: !7811)
!7827 = !DILocation(line: 750, column: 19, scope: !7811)
!7828 = !DILocation(line: 750, column: 17, scope: !7811)
!7829 = !DILocation(line: 751, column: 17, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7811, file: !47, line: 751, column: 17)
!7831 = !DILocation(line: 751, column: 21, scope: !7830)
!7832 = !DILocation(line: 751, column: 17, scope: !7811)
!7833 = !DILocation(line: 751, column: 26, scope: !7834)
!7834 = !DILexicalBlockFile(scope: !7830, file: !47, discriminator: 1)
!7835 = !DILocation(line: 752, column: 13, scope: !7811)
!7836 = !DILocation(line: 752, column: 19, scope: !7811)
!7837 = !DILocation(line: 752, column: 27, scope: !7811)
!7838 = !DILocation(line: 752, column: 40, scope: !7811)
!7839 = !DILocation(line: 752, column: 46, scope: !7811)
!7840 = !DILocation(line: 752, column: 52, scope: !7811)
!7841 = !DILocation(line: 754, column: 17, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7811, file: !47, line: 754, column: 17)
!7843 = !DILocation(line: 754, column: 21, scope: !7842)
!7844 = !DILocation(line: 754, column: 17, scope: !7811)
!7845 = !DILocation(line: 755, column: 24, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7842, file: !47, line: 754, column: 26)
!7847 = !DILocation(line: 757, column: 24, scope: !7846)
!7848 = !DILocation(line: 757, column: 29, scope: !7846)
!7849 = !DILocation(line: 757, column: 34, scope: !7846)
!7850 = !DILocation(line: 757, column: 43, scope: !7846)
!7851 = !DILocation(line: 755, column: 17, scope: !7846)
!7852 = !DILocation(line: 758, column: 13, scope: !7846)
!7853 = !DILocation(line: 759, column: 21, scope: !7811)
!7854 = !DILocation(line: 759, column: 13, scope: !7811)
!7855 = !DILocation(line: 760, column: 21, scope: !7811)
!7856 = !DILocation(line: 760, column: 13, scope: !7811)
!7857 = !DILocation(line: 761, column: 9, scope: !7811)
!7858 = !DILocation(line: 762, column: 13, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7806, file: !47, line: 761, column: 16)
!7860 = !DILocation(line: 762, column: 19, scope: !7859)
!7861 = !DILocation(line: 762, column: 27, scope: !7859)
!7862 = !DILocation(line: 762, column: 40, scope: !7859)
!7863 = !DILocation(line: 762, column: 46, scope: !7859)
!7864 = !DILocation(line: 762, column: 51, scope: !7859)
!7865 = !DILocation(line: 765, column: 23, scope: !7807)
!7866 = !DILocation(line: 765, column: 29, scope: !7807)
!7867 = !DILocation(line: 765, column: 9, scope: !7807)
!7868 = !DILocation(line: 765, column: 15, scope: !7807)
!7869 = !DILocation(line: 765, column: 35, scope: !7807)
!7870 = !DILocation(line: 766, column: 5, scope: !7807)
!7871 = !DILocation(line: 768, column: 12, scope: !7764)
!7872 = !DILocation(line: 768, column: 5, scope: !7764)
!7873 = !DILocation(line: 769, column: 1, scope: !7764)
!7874 = distinct !DISubprogram(name: "validate_string", scope: !47, file: !47, line: 677, type: !7875, isLocal: true, isDefinition: true, scopeLine: 678, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7875 = !DISubroutineType(types: !7876)
!7876 = !{!1041, !2418, !2594, !1027}
!7877 = !DILocalVariable(name: "wctx", arg: 1, scope: !7874, file: !47, line: 677, type: !2418)
!7878 = !DILocation(line: 677, column: 50, scope: !7874)
!7879 = !DILocalVariable(name: "dstp", arg: 2, scope: !7874, file: !47, line: 677, type: !2594)
!7880 = !DILocation(line: 677, column: 63, scope: !7874)
!7881 = !DILocalVariable(name: "src", arg: 3, scope: !7874, file: !47, line: 677, type: !1027)
!7882 = !DILocation(line: 677, column: 81, scope: !7874)
!7883 = !DILocalVariable(name: "p", scope: !7874, file: !47, line: 679, type: !1139)
!7884 = !DILocation(line: 679, column: 20, scope: !7874)
!7885 = !DILocalVariable(name: "endp", scope: !7874, file: !47, line: 679, type: !1139)
!7886 = !DILocation(line: 679, column: 24, scope: !7874)
!7887 = !DILocalVariable(name: "dstbuf", scope: !7874, file: !47, line: 680, type: !2452)
!7888 = !DILocation(line: 680, column: 14, scope: !7874)
!7889 = !DILocalVariable(name: "invalid_chars_nb", scope: !7874, file: !47, line: 681, type: !1041)
!7890 = !DILocation(line: 681, column: 9, scope: !7874)
!7891 = !DILocalVariable(name: "ret", scope: !7874, file: !47, line: 681, type: !1041)
!7892 = !DILocation(line: 681, column: 31, scope: !7874)
!7893 = !DILocation(line: 683, column: 5, scope: !7874)
!7894 = !DILocation(line: 685, column: 12, scope: !7874)
!7895 = !DILocation(line: 685, column: 25, scope: !7874)
!7896 = !DILocation(line: 685, column: 18, scope: !7874)
!7897 = !DILocation(line: 685, column: 16, scope: !7874)
!7898 = !DILocation(line: 685, column: 10, scope: !7874)
!7899 = !DILocation(line: 686, column: 25, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7874, file: !47, line: 686, column: 5)
!7901 = !DILocation(line: 686, column: 12, scope: !7900)
!7902 = !DILocation(line: 686, column: 10, scope: !7900)
!7903 = !DILocation(line: 686, column: 31, scope: !7904)
!7904 = !DILexicalBlockFile(scope: !7905, file: !47, discriminator: 1)
!7905 = distinct !DILexicalBlock(scope: !7900, file: !47, line: 686, column: 5)
!7906 = !DILocation(line: 686, column: 30, scope: !7904)
!7907 = !DILocation(line: 686, column: 5, scope: !7904)
!7908 = !DILocalVariable(name: "code", scope: !7909, file: !47, line: 687, type: !1128)
!7909 = distinct !DILexicalBlock(scope: !7905, file: !47, line: 686, column: 35)
!7910 = !DILocation(line: 687, column: 18, scope: !7909)
!7911 = !DILocalVariable(name: "invalid", scope: !7909, file: !47, line: 688, type: !1041)
!7912 = !DILocation(line: 688, column: 13, scope: !7909)
!7913 = !DILocalVariable(name: "p0", scope: !7909, file: !47, line: 689, type: !1139)
!7914 = !DILocation(line: 689, column: 24, scope: !7909)
!7915 = !DILocation(line: 689, column: 29, scope: !7909)
!7916 = !DILocation(line: 691, column: 39, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7909, file: !47, line: 691, column: 13)
!7918 = !DILocation(line: 691, column: 45, scope: !7917)
!7919 = !DILocation(line: 691, column: 51, scope: !7917)
!7920 = !DILocation(line: 691, column: 13, scope: !7917)
!7921 = !DILocation(line: 691, column: 81, scope: !7917)
!7922 = !DILocation(line: 691, column: 13, scope: !7909)
!7923 = !DILocalVariable(name: "bp", scope: !7924, file: !47, line: 692, type: !2452)
!7924 = distinct !DILexicalBlock(scope: !7917, file: !47, line: 691, column: 86)
!7925 = !DILocation(line: 692, column: 22, scope: !7924)
!7926 = !DILocation(line: 693, column: 13, scope: !7924)
!7927 = !DILocation(line: 694, column: 31, scope: !7924)
!7928 = !DILocation(line: 694, column: 35, scope: !7924)
!7929 = !DILocation(line: 694, column: 37, scope: !7924)
!7930 = !DILocation(line: 694, column: 36, scope: !7924)
!7931 = !DILocation(line: 694, column: 13, scope: !7924)
!7932 = !DILocation(line: 695, column: 20, scope: !7924)
!7933 = !DILocation(line: 696, column: 75, scope: !7924)
!7934 = !DILocation(line: 696, column: 80, scope: !7924)
!7935 = !DILocation(line: 695, column: 13, scope: !7924)
!7936 = !DILocation(line: 697, column: 21, scope: !7924)
!7937 = !DILocation(line: 698, column: 9, scope: !7924)
!7938 = !DILocation(line: 700, column: 13, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7909, file: !47, line: 700, column: 13)
!7940 = !DILocation(line: 700, column: 13, scope: !7909)
!7941 = !DILocation(line: 701, column: 29, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7939, file: !47, line: 700, column: 22)
!7943 = !DILocation(line: 703, column: 21, scope: !7942)
!7944 = !DILocation(line: 703, column: 27, scope: !7942)
!7945 = !DILocation(line: 703, column: 13, scope: !7942)
!7946 = !DILocation(line: 705, column: 24, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7942, file: !47, line: 703, column: 46)
!7948 = !DILocation(line: 706, column: 73, scope: !7947)
!7949 = !DILocation(line: 705, column: 17, scope: !7947)
!7950 = !DILocation(line: 707, column: 21, scope: !7947)
!7951 = !DILocation(line: 708, column: 17, scope: !7947)
!7952 = !DILocation(line: 712, column: 43, scope: !7947)
!7953 = !DILocation(line: 712, column: 49, scope: !7947)
!7954 = !DILocation(line: 712, column: 17, scope: !7947)
!7955 = !DILocation(line: 713, column: 17, scope: !7947)
!7956 = !DILocation(line: 715, column: 9, scope: !7942)
!7957 = !DILocation(line: 717, column: 14, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7909, file: !47, line: 717, column: 13)
!7959 = !DILocation(line: 717, column: 22, scope: !7958)
!7960 = !DILocation(line: 717, column: 25, scope: !7961)
!7961 = !DILexicalBlockFile(scope: !7958, file: !47, discriminator: 1)
!7962 = !DILocation(line: 717, column: 31, scope: !7961)
!7963 = !DILocation(line: 717, column: 49, scope: !7961)
!7964 = !DILocation(line: 717, column: 13, scope: !7961)
!7965 = !DILocation(line: 718, column: 44, scope: !7958)
!7966 = !DILocation(line: 718, column: 48, scope: !7958)
!7967 = !DILocation(line: 718, column: 50, scope: !7958)
!7968 = !DILocation(line: 718, column: 49, scope: !7958)
!7969 = !DILocation(line: 718, column: 13, scope: !7958)
!7970 = !DILocation(line: 686, column: 5, scope: !7971)
!7971 = !DILexicalBlockFile(scope: !7905, file: !47, discriminator: 2)
!7972 = distinct !{!7972, !7973}
!7973 = !DILocation(line: 686, column: 5, scope: !7874)
!7974 = !DILocation(line: 721, column: 9, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7874, file: !47, line: 721, column: 9)
!7976 = !DILocation(line: 721, column: 26, scope: !7975)
!7977 = !DILocation(line: 721, column: 29, scope: !7978)
!7978 = !DILexicalBlockFile(scope: !7975, file: !47, discriminator: 1)
!7979 = !DILocation(line: 721, column: 35, scope: !7978)
!7980 = !DILocation(line: 721, column: 53, scope: !7978)
!7981 = !DILocation(line: 721, column: 9, scope: !7978)
!7982 = !DILocation(line: 722, column: 16, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7975, file: !47, line: 721, column: 90)
!7984 = !DILocation(line: 724, column: 16, scope: !7983)
!7985 = !DILocation(line: 724, column: 34, scope: !7983)
!7986 = !DILocation(line: 724, column: 39, scope: !7983)
!7987 = !DILocation(line: 724, column: 45, scope: !7983)
!7988 = !DILocation(line: 722, column: 9, scope: !7983)
!7989 = !DILocation(line: 725, column: 5, scope: !7983)
!7990 = !DILocation(line: 721, column: 56, scope: !7991)
!7991 = !DILexicalBlockFile(scope: !7975, file: !47, discriminator: 2)
!7992 = !DILocation(line: 728, column: 33, scope: !7874)
!7993 = !DILocation(line: 728, column: 5, scope: !7874)
!7994 = !DILocation(line: 729, column: 12, scope: !7874)
!7995 = !DILocation(line: 729, column: 5, scope: !7874)
!7996 = distinct !DISubprogram(name: "writer_print_integer", scope: !47, file: !47, line: 666, type: !2482, isLocal: true, isDefinition: true, scopeLine: 668, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!7997 = !DILocalVariable(name: "wctx", arg: 1, scope: !7996, file: !47, line: 666, type: !2418)
!7998 = !DILocation(line: 666, column: 56, scope: !7996)
!7999 = !DILocalVariable(name: "key", arg: 2, scope: !7996, file: !47, line: 667, type: !1027)
!8000 = !DILocation(line: 667, column: 53, scope: !7996)
!8001 = !DILocalVariable(name: "val", arg: 3, scope: !7996, file: !47, line: 667, type: !1109)
!8002 = !DILocation(line: 667, column: 72, scope: !7996)
!8003 = !DILocalVariable(name: "section", scope: !7996, file: !47, line: 669, type: !2427)
!8004 = !DILocation(line: 669, column: 27, scope: !7996)
!8005 = !DILocation(line: 669, column: 51, scope: !7996)
!8006 = !DILocation(line: 669, column: 57, scope: !7996)
!8007 = !DILocation(line: 669, column: 37, scope: !7996)
!8008 = !DILocation(line: 669, column: 43, scope: !7996)
!8009 = !DILocation(line: 671, column: 9, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7996, file: !47, line: 671, column: 9)
!8011 = !DILocation(line: 671, column: 18, scope: !8010)
!8012 = !DILocation(line: 671, column: 35, scope: !8010)
!8013 = !DILocation(line: 671, column: 50, scope: !8014)
!8014 = !DILexicalBlockFile(scope: !8010, file: !47, discriminator: 1)
!8015 = !DILocation(line: 671, column: 59, scope: !8014)
!8016 = !DILocation(line: 671, column: 76, scope: !8014)
!8017 = !DILocation(line: 671, column: 38, scope: !8014)
!8018 = !DILocation(line: 671, column: 9, scope: !8014)
!8019 = !DILocation(line: 672, column: 9, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8010, file: !47, line: 671, column: 90)
!8021 = !DILocation(line: 672, column: 15, scope: !8020)
!8022 = !DILocation(line: 672, column: 23, scope: !8020)
!8023 = !DILocation(line: 672, column: 37, scope: !8020)
!8024 = !DILocation(line: 672, column: 43, scope: !8020)
!8025 = !DILocation(line: 672, column: 48, scope: !8020)
!8026 = !DILocation(line: 673, column: 23, scope: !8020)
!8027 = !DILocation(line: 673, column: 29, scope: !8020)
!8028 = !DILocation(line: 673, column: 9, scope: !8020)
!8029 = !DILocation(line: 673, column: 15, scope: !8020)
!8030 = !DILocation(line: 673, column: 35, scope: !8020)
!8031 = !DILocation(line: 674, column: 5, scope: !8020)
!8032 = !DILocation(line: 675, column: 1, scope: !7996)
!8033 = distinct !DISubprogram(name: "open_input_file", scope: !47, file: !47, line: 2821, type: !8034, isLocal: true, isDefinition: true, scopeLine: 2822, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!8034 = !DISubroutineType(types: !8035)
!8035 = !{!1041, !8036, !1027}
!8036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 64, align: 64)
!8037 = !DILocalVariable(name: "ifile", arg: 1, scope: !8033, file: !47, line: 2821, type: !8036)
!8038 = !DILocation(line: 2821, column: 39, scope: !8033)
!8039 = !DILocalVariable(name: "filename", arg: 2, scope: !8033, file: !47, line: 2821, type: !1027)
!8040 = !DILocation(line: 2821, column: 58, scope: !8033)
!8041 = !DILocalVariable(name: "err", scope: !8033, file: !47, line: 2823, type: !1041)
!8042 = !DILocation(line: 2823, column: 9, scope: !8033)
!8043 = !DILocalVariable(name: "i", scope: !8033, file: !47, line: 2823, type: !1041)
!8044 = !DILocation(line: 2823, column: 14, scope: !8033)
!8045 = !DILocalVariable(name: "fmt_ctx", scope: !8033, file: !47, line: 2824, type: !1483)
!8046 = !DILocation(line: 2824, column: 22, scope: !8033)
!8047 = !DILocalVariable(name: "t", scope: !8033, file: !47, line: 2825, type: !3520)
!8048 = !DILocation(line: 2825, column: 24, scope: !8033)
!8049 = !DILocalVariable(name: "scan_all_pmts_set", scope: !8033, file: !47, line: 2826, type: !1041)
!8050 = !DILocation(line: 2826, column: 9, scope: !8033)
!8051 = !DILocation(line: 2828, column: 15, scope: !8033)
!8052 = !DILocation(line: 2828, column: 13, scope: !8033)
!8053 = !DILocation(line: 2829, column: 10, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8033, file: !47, line: 2829, column: 9)
!8055 = !DILocation(line: 2829, column: 9, scope: !8033)
!8056 = !DILocation(line: 2830, column: 21, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8054, file: !47, line: 2829, column: 19)
!8058 = !DILocation(line: 2830, column: 9, scope: !8057)
!8059 = !DILocation(line: 2831, column: 9, scope: !8057)
!8060 = !DILocation(line: 2834, column: 22, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8033, file: !47, line: 2834, column: 9)
!8062 = !DILocation(line: 2834, column: 10, scope: !8061)
!8063 = !DILocation(line: 2834, column: 9, scope: !8033)
!8064 = !DILocation(line: 2835, column: 9, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8061, file: !47, line: 2834, column: 61)
!8066 = !DILocation(line: 2836, column: 27, scope: !8065)
!8067 = !DILocation(line: 2837, column: 5, scope: !8065)
!8068 = !DILocation(line: 2838, column: 46, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8033, file: !47, line: 2838, column: 9)
!8070 = !DILocation(line: 2839, column: 36, scope: !8069)
!8071 = !DILocation(line: 2838, column: 16, scope: !8069)
!8072 = !DILocation(line: 2838, column: 14, scope: !8069)
!8073 = !DILocation(line: 2839, column: 60, scope: !8069)
!8074 = !DILocation(line: 2838, column: 9, scope: !8033)
!8075 = !DILocation(line: 2840, column: 21, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8069, file: !47, line: 2839, column: 65)
!8077 = !DILocation(line: 2840, column: 31, scope: !8076)
!8078 = !DILocation(line: 2840, column: 9, scope: !8076)
!8079 = !DILocation(line: 2841, column: 16, scope: !8076)
!8080 = !DILocation(line: 2841, column: 9, scope: !8076)
!8081 = !DILocation(line: 2843, column: 22, scope: !8033)
!8082 = !DILocation(line: 2843, column: 5, scope: !8033)
!8083 = !DILocation(line: 2843, column: 12, scope: !8033)
!8084 = !DILocation(line: 2843, column: 20, scope: !8033)
!8085 = !DILocation(line: 2844, column: 9, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8033, file: !47, line: 2844, column: 9)
!8087 = !DILocation(line: 2844, column: 9, scope: !8033)
!8088 = !DILocation(line: 2845, column: 9, scope: !8086)
!8089 = !DILocation(line: 2846, column: 26, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8033, file: !47, line: 2846, column: 9)
!8091 = !DILocation(line: 2846, column: 14, scope: !8090)
!8092 = !DILocation(line: 2846, column: 12, scope: !8090)
!8093 = !DILocation(line: 2846, column: 9, scope: !8033)
!8094 = !DILocation(line: 2847, column: 51, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8090, file: !47, line: 2846, column: 53)
!8096 = !DILocation(line: 2847, column: 54, scope: !8095)
!8097 = !DILocation(line: 2847, column: 9, scope: !8095)
!8098 = !DILocation(line: 2848, column: 9, scope: !8095)
!8099 = !DILocation(line: 2851, column: 9, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8033, file: !47, line: 2851, column: 9)
!8101 = !DILocation(line: 2851, column: 9, scope: !8033)
!8102 = !DILocalVariable(name: "opts", scope: !8103, file: !47, line: 2852, type: !2310)
!8103 = distinct !DILexicalBlock(scope: !8100, file: !47, line: 2851, column: 27)
!8104 = !DILocation(line: 2852, column: 24, scope: !8103)
!8105 = !DILocation(line: 2852, column: 59, scope: !8103)
!8106 = !DILocation(line: 2852, column: 68, scope: !8103)
!8107 = !DILocation(line: 2852, column: 31, scope: !8103)
!8108 = !DILocalVariable(name: "orig_nb_streams", scope: !8103, file: !47, line: 2853, type: !1041)
!8109 = !DILocation(line: 2853, column: 13, scope: !8103)
!8110 = !DILocation(line: 2853, column: 31, scope: !8103)
!8111 = !DILocation(line: 2853, column: 40, scope: !8103)
!8112 = !DILocation(line: 2855, column: 41, scope: !8103)
!8113 = !DILocation(line: 2855, column: 50, scope: !8103)
!8114 = !DILocation(line: 2855, column: 15, scope: !8103)
!8115 = !DILocation(line: 2855, column: 13, scope: !8103)
!8116 = !DILocation(line: 2857, column: 16, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8103, file: !47, line: 2857, column: 9)
!8118 = !DILocation(line: 2857, column: 14, scope: !8117)
!8119 = !DILocation(line: 2857, column: 21, scope: !8120)
!8120 = !DILexicalBlockFile(scope: !8121, file: !47, discriminator: 1)
!8121 = distinct !DILexicalBlock(scope: !8117, file: !47, line: 2857, column: 9)
!8122 = !DILocation(line: 2857, column: 25, scope: !8120)
!8123 = !DILocation(line: 2857, column: 23, scope: !8120)
!8124 = !DILocation(line: 2857, column: 9, scope: !8120)
!8125 = !DILocation(line: 2858, column: 32, scope: !8121)
!8126 = !DILocation(line: 2858, column: 27, scope: !8121)
!8127 = !DILocation(line: 2858, column: 13, scope: !8121)
!8128 = !DILocation(line: 2857, column: 43, scope: !8129)
!8129 = !DILexicalBlockFile(scope: !8121, file: !47, discriminator: 2)
!8130 = !DILocation(line: 2857, column: 9, scope: !8129)
!8131 = distinct !{!8131, !8132}
!8132 = !DILocation(line: 2857, column: 9, scope: !8103)
!8133 = !DILocation(line: 2859, column: 18, scope: !8103)
!8134 = !DILocation(line: 2859, column: 9, scope: !8103)
!8135 = !DILocation(line: 2861, column: 13, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8103, file: !47, line: 2861, column: 13)
!8137 = !DILocation(line: 2861, column: 17, scope: !8136)
!8138 = !DILocation(line: 2861, column: 13, scope: !8103)
!8139 = !DILocation(line: 2862, column: 25, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8136, file: !47, line: 2861, column: 22)
!8141 = !DILocation(line: 2862, column: 35, scope: !8140)
!8142 = !DILocation(line: 2862, column: 13, scope: !8140)
!8143 = !DILocation(line: 2863, column: 20, scope: !8140)
!8144 = !DILocation(line: 2863, column: 13, scope: !8140)
!8145 = !DILocation(line: 2865, column: 5, scope: !8103)
!8146 = !DILocation(line: 2867, column: 20, scope: !8033)
!8147 = !DILocation(line: 2867, column: 32, scope: !8033)
!8148 = !DILocation(line: 2867, column: 5, scope: !8033)
!8149 = !DILocation(line: 2869, column: 39, scope: !8033)
!8150 = !DILocation(line: 2869, column: 48, scope: !8033)
!8151 = !DILocation(line: 2869, column: 22, scope: !8033)
!8152 = !DILocation(line: 2869, column: 5, scope: !8033)
!8153 = !DILocation(line: 2869, column: 12, scope: !8033)
!8154 = !DILocation(line: 2869, column: 20, scope: !8033)
!8155 = !DILocation(line: 2871, column: 10, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8033, file: !47, line: 2871, column: 9)
!8157 = !DILocation(line: 2871, column: 17, scope: !8156)
!8158 = !DILocation(line: 2871, column: 9, scope: !8033)
!8159 = !DILocation(line: 2872, column: 9, scope: !8156)
!8160 = !DILocation(line: 2873, column: 25, scope: !8033)
!8161 = !DILocation(line: 2873, column: 34, scope: !8033)
!8162 = !DILocation(line: 2873, column: 5, scope: !8033)
!8163 = !DILocation(line: 2873, column: 12, scope: !8033)
!8164 = !DILocation(line: 2873, column: 23, scope: !8033)
!8165 = !DILocation(line: 2876, column: 12, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8033, file: !47, line: 2876, column: 5)
!8167 = !DILocation(line: 2876, column: 10, scope: !8166)
!8168 = !DILocation(line: 2876, column: 17, scope: !8169)
!8169 = !DILexicalBlockFile(scope: !8170, file: !47, discriminator: 1)
!8170 = distinct !DILexicalBlock(scope: !8166, file: !47, line: 2876, column: 5)
!8171 = !DILocation(line: 2876, column: 21, scope: !8169)
!8172 = !DILocation(line: 2876, column: 30, scope: !8169)
!8173 = !DILocation(line: 2876, column: 19, scope: !8169)
!8174 = !DILocation(line: 2876, column: 5, scope: !8169)
!8175 = !DILocalVariable(name: "ist", scope: !8176, file: !47, line: 2877, type: !4332)
!8176 = distinct !DILexicalBlock(scope: !8170, file: !47, line: 2876, column: 47)
!8177 = !DILocation(line: 2877, column: 22, scope: !8176)
!8178 = !DILocation(line: 2877, column: 44, scope: !8176)
!8179 = !DILocation(line: 2877, column: 29, scope: !8176)
!8180 = !DILocation(line: 2877, column: 36, scope: !8176)
!8181 = !DILocalVariable(name: "stream", scope: !8176, file: !47, line: 2878, type: !1577)
!8182 = !DILocation(line: 2878, column: 19, scope: !8176)
!8183 = !DILocation(line: 2878, column: 45, scope: !8176)
!8184 = !DILocation(line: 2878, column: 28, scope: !8176)
!8185 = !DILocation(line: 2878, column: 37, scope: !8176)
!8186 = !DILocalVariable(name: "codec", scope: !8176, file: !47, line: 2879, type: !2291)
!8187 = !DILocation(line: 2879, column: 18, scope: !8176)
!8188 = !DILocation(line: 2881, column: 19, scope: !8176)
!8189 = !DILocation(line: 2881, column: 9, scope: !8176)
!8190 = !DILocation(line: 2881, column: 14, scope: !8176)
!8191 = !DILocation(line: 2881, column: 17, scope: !8176)
!8192 = !DILocation(line: 2883, column: 13, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8176, file: !47, line: 2883, column: 13)
!8194 = !DILocation(line: 2883, column: 21, scope: !8193)
!8195 = !DILocation(line: 2883, column: 31, scope: !8193)
!8196 = !DILocation(line: 2883, column: 40, scope: !8193)
!8197 = !DILocation(line: 2883, column: 13, scope: !8176)
!8198 = !DILocation(line: 2886, column: 21, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8193, file: !47, line: 2883, column: 62)
!8200 = !DILocation(line: 2886, column: 29, scope: !8199)
!8201 = !DILocation(line: 2884, column: 13, scope: !8199)
!8202 = !DILocation(line: 2887, column: 13, scope: !8199)
!8203 = !DILocation(line: 2890, column: 38, scope: !8176)
!8204 = !DILocation(line: 2890, column: 46, scope: !8176)
!8205 = !DILocation(line: 2890, column: 56, scope: !8176)
!8206 = !DILocation(line: 2890, column: 17, scope: !8176)
!8207 = !DILocation(line: 2890, column: 15, scope: !8176)
!8208 = !DILocation(line: 2891, column: 14, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8176, file: !47, line: 2891, column: 13)
!8210 = !DILocation(line: 2891, column: 13, scope: !8176)
!8211 = !DILocation(line: 2894, column: 21, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8209, file: !47, line: 2891, column: 21)
!8213 = !DILocation(line: 2894, column: 29, scope: !8212)
!8214 = !DILocation(line: 2894, column: 39, scope: !8212)
!8215 = !DILocation(line: 2894, column: 49, scope: !8212)
!8216 = !DILocation(line: 2894, column: 57, scope: !8212)
!8217 = !DILocation(line: 2892, column: 13, scope: !8212)
!8218 = !DILocation(line: 2895, column: 13, scope: !8212)
!8219 = !DILocalVariable(name: "opts", scope: !8220, file: !47, line: 2898, type: !1423)
!8220 = distinct !DILexicalBlock(scope: !8176, file: !47, line: 2897, column: 9)
!8221 = !DILocation(line: 2898, column: 27, scope: !8220)
!8222 = !DILocation(line: 2898, column: 52, scope: !8220)
!8223 = !DILocation(line: 2898, column: 64, scope: !8220)
!8224 = !DILocation(line: 2898, column: 72, scope: !8220)
!8225 = !DILocation(line: 2898, column: 82, scope: !8220)
!8226 = !DILocation(line: 2899, column: 52, scope: !8220)
!8227 = !DILocation(line: 2899, column: 61, scope: !8220)
!8228 = !DILocation(line: 2899, column: 69, scope: !8220)
!8229 = !DILocation(line: 2898, column: 34, scope: !8220)
!8230 = !DILocation(line: 2901, column: 51, scope: !8220)
!8231 = !DILocation(line: 2901, column: 28, scope: !8220)
!8232 = !DILocation(line: 2901, column: 13, scope: !8220)
!8233 = !DILocation(line: 2901, column: 18, scope: !8220)
!8234 = !DILocation(line: 2901, column: 26, scope: !8220)
!8235 = !DILocation(line: 2902, column: 18, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8220, file: !47, line: 2902, column: 17)
!8237 = !DILocation(line: 2902, column: 23, scope: !8236)
!8238 = !DILocation(line: 2902, column: 17, scope: !8220)
!8239 = !DILocation(line: 2903, column: 17, scope: !8236)
!8240 = !DILocation(line: 2905, column: 49, scope: !8220)
!8241 = !DILocation(line: 2905, column: 54, scope: !8220)
!8242 = !DILocation(line: 2905, column: 63, scope: !8220)
!8243 = !DILocation(line: 2905, column: 71, scope: !8220)
!8244 = !DILocation(line: 2905, column: 19, scope: !8220)
!8245 = !DILocation(line: 2905, column: 17, scope: !8220)
!8246 = !DILocation(line: 2906, column: 17, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8220, file: !47, line: 2906, column: 17)
!8248 = !DILocation(line: 2906, column: 21, scope: !8247)
!8249 = !DILocation(line: 2906, column: 17, scope: !8220)
!8250 = !DILocation(line: 2907, column: 17, scope: !8247)
!8251 = !DILocation(line: 2909, column: 17, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8220, file: !47, line: 2909, column: 17)
!8253 = !DILocation(line: 2909, column: 17, scope: !8220)
!8254 = !DILocation(line: 2913, column: 17, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8252, file: !47, line: 2909, column: 30)
!8256 = !DILocation(line: 2914, column: 13, scope: !8255)
!8257 = !DILocation(line: 2916, column: 13, scope: !8220)
!8258 = !DILocation(line: 2916, column: 18, scope: !8220)
!8259 = !DILocation(line: 2916, column: 27, scope: !8220)
!8260 = !DILocation(line: 2916, column: 42, scope: !8220)
!8261 = !DILocation(line: 2916, column: 50, scope: !8220)
!8262 = !DILocation(line: 2917, column: 13, scope: !8220)
!8263 = !DILocation(line: 2917, column: 18, scope: !8220)
!8264 = !DILocation(line: 2917, column: 27, scope: !8220)
!8265 = !DILocation(line: 2917, column: 39, scope: !8220)
!8266 = !DILocation(line: 2917, column: 47, scope: !8220)
!8267 = !DILocation(line: 2919, column: 41, scope: !8220)
!8268 = !DILocation(line: 2919, column: 49, scope: !8220)
!8269 = !DILocation(line: 2919, column: 56, scope: !8220)
!8270 = !DILocation(line: 2919, column: 13, scope: !8220)
!8271 = !DILocation(line: 2919, column: 18, scope: !8220)
!8272 = !DILocation(line: 2919, column: 27, scope: !8220)
!8273 = !DILocation(line: 2919, column: 39, scope: !8220)
!8274 = !DILocation(line: 2920, column: 42, scope: !8220)
!8275 = !DILocation(line: 2920, column: 50, scope: !8220)
!8276 = !DILocation(line: 2920, column: 57, scope: !8220)
!8277 = !DILocation(line: 2920, column: 13, scope: !8220)
!8278 = !DILocation(line: 2920, column: 18, scope: !8220)
!8279 = !DILocation(line: 2920, column: 27, scope: !8220)
!8280 = !DILocation(line: 2920, column: 40, scope: !8220)
!8281 = !DILocation(line: 2923, column: 31, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8220, file: !47, line: 2923, column: 17)
!8283 = !DILocation(line: 2923, column: 36, scope: !8282)
!8284 = !DILocation(line: 2923, column: 45, scope: !8282)
!8285 = !DILocation(line: 2923, column: 17, scope: !8282)
!8286 = !DILocation(line: 2923, column: 59, scope: !8282)
!8287 = !DILocation(line: 2923, column: 17, scope: !8220)
!8288 = !DILocation(line: 2925, column: 24, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8282, file: !47, line: 2923, column: 64)
!8290 = !DILocation(line: 2925, column: 32, scope: !8289)
!8291 = !DILocation(line: 2924, column: 17, scope: !8289)
!8292 = !DILocation(line: 2926, column: 17, scope: !8289)
!8293 = !DILocation(line: 2929, column: 34, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8220, file: !47, line: 2929, column: 17)
!8295 = !DILocation(line: 2929, column: 22, scope: !8294)
!8296 = !DILocation(line: 2929, column: 20, scope: !8294)
!8297 = !DILocation(line: 2929, column: 17, scope: !8220)
!8298 = !DILocation(line: 2931, column: 24, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8294, file: !47, line: 2929, column: 54)
!8300 = !DILocation(line: 2931, column: 27, scope: !8299)
!8301 = !DILocation(line: 2931, column: 32, scope: !8299)
!8302 = !DILocation(line: 2931, column: 40, scope: !8299)
!8303 = !DILocation(line: 2930, column: 17, scope: !8299)
!8304 = !DILocation(line: 2932, column: 17, scope: !8299)
!8305 = !DILocation(line: 2935, column: 5, scope: !8176)
!8306 = !DILocation(line: 2876, column: 43, scope: !8307)
!8307 = !DILexicalBlockFile(scope: !8170, file: !47, discriminator: 2)
!8308 = !DILocation(line: 2876, column: 5, scope: !8307)
!8309 = distinct !{!8309, !8310}
!8310 = !DILocation(line: 2876, column: 5, scope: !8033)
!8311 = !DILocation(line: 2937, column: 22, scope: !8033)
!8312 = !DILocation(line: 2937, column: 5, scope: !8033)
!8313 = !DILocation(line: 2937, column: 12, scope: !8033)
!8314 = !DILocation(line: 2937, column: 20, scope: !8033)
!8315 = !DILocation(line: 2938, column: 5, scope: !8033)
!8316 = !DILocation(line: 2939, column: 1, scope: !8033)
!8317 = distinct !DISubprogram(name: "read_packets", scope: !47, file: !47, line: 2435, type: !8318, isLocal: true, isDefinition: true, scopeLine: 2436, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!8318 = !DISubroutineType(types: !8319)
!8319 = !{!1041, !2418, !8036}
!8320 = !DILocalVariable(name: "w", arg: 1, scope: !8317, file: !47, line: 2435, type: !2418)
!8321 = !DILocation(line: 2435, column: 40, scope: !8317)
!8322 = !DILocalVariable(name: "ifile", arg: 2, scope: !8317, file: !47, line: 2435, type: !8036)
!8323 = !DILocation(line: 2435, column: 54, scope: !8317)
!8324 = !DILocalVariable(name: "fmt_ctx", scope: !8317, file: !47, line: 2437, type: !1483)
!8325 = !DILocation(line: 2437, column: 22, scope: !8317)
!8326 = !DILocation(line: 2437, column: 32, scope: !8317)
!8327 = !DILocation(line: 2437, column: 39, scope: !8317)
!8328 = !DILocalVariable(name: "i", scope: !8317, file: !47, line: 2438, type: !1041)
!8329 = !DILocation(line: 2438, column: 9, scope: !8317)
!8330 = !DILocalVariable(name: "ret", scope: !8317, file: !47, line: 2438, type: !1041)
!8331 = !DILocation(line: 2438, column: 12, scope: !8317)
!8332 = !DILocalVariable(name: "cur_ts", scope: !8317, file: !47, line: 2439, type: !1019)
!8333 = !DILocation(line: 2439, column: 13, scope: !8317)
!8334 = !DILocation(line: 2439, column: 22, scope: !8317)
!8335 = !DILocation(line: 2439, column: 31, scope: !8317)
!8336 = !DILocation(line: 2441, column: 9, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8317, file: !47, line: 2441, column: 9)
!8338 = !DILocation(line: 2441, column: 27, scope: !8337)
!8339 = !DILocation(line: 2441, column: 9, scope: !8317)
!8340 = !DILocalVariable(name: "interval", scope: !8341, file: !47, line: 2442, type: !1183)
!8341 = distinct !DILexicalBlock(scope: !8337, file: !47, line: 2441, column: 33)
!8342 = !DILocation(line: 2442, column: 22, scope: !8341)
!8343 = !DILocation(line: 2443, column: 37, scope: !8341)
!8344 = !DILocation(line: 2443, column: 40, scope: !8341)
!8345 = !DILocation(line: 2443, column: 15, scope: !8341)
!8346 = !DILocation(line: 2443, column: 13, scope: !8341)
!8347 = !DILocation(line: 2444, column: 5, scope: !8341)
!8348 = !DILocation(line: 2445, column: 16, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8350, file: !47, line: 2445, column: 9)
!8350 = distinct !DILexicalBlock(scope: !8337, file: !47, line: 2444, column: 12)
!8351 = !DILocation(line: 2445, column: 14, scope: !8349)
!8352 = !DILocation(line: 2445, column: 21, scope: !8353)
!8353 = !DILexicalBlockFile(scope: !8354, file: !47, discriminator: 1)
!8354 = distinct !DILexicalBlock(scope: !8349, file: !47, line: 2445, column: 9)
!8355 = !DILocation(line: 2445, column: 25, scope: !8353)
!8356 = !DILocation(line: 2445, column: 23, scope: !8353)
!8357 = !DILocation(line: 2445, column: 9, scope: !8353)
!8358 = !DILocation(line: 2446, column: 41, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8354, file: !47, line: 2445, column: 49)
!8360 = !DILocation(line: 2446, column: 44, scope: !8359)
!8361 = !DILocation(line: 2446, column: 67, scope: !8359)
!8362 = !DILocation(line: 2446, column: 52, scope: !8359)
!8363 = !DILocation(line: 2446, column: 19, scope: !8359)
!8364 = !DILocation(line: 2446, column: 17, scope: !8359)
!8365 = !DILocation(line: 2447, column: 17, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8359, file: !47, line: 2447, column: 17)
!8367 = !DILocation(line: 2447, column: 21, scope: !8366)
!8368 = !DILocation(line: 2447, column: 17, scope: !8359)
!8369 = !DILocation(line: 2448, column: 17, scope: !8366)
!8370 = !DILocation(line: 2449, column: 9, scope: !8359)
!8371 = !DILocation(line: 2445, column: 45, scope: !8372)
!8372 = !DILexicalBlockFile(scope: !8354, file: !47, discriminator: 2)
!8373 = !DILocation(line: 2445, column: 9, scope: !8372)
!8374 = distinct !{!8374, !8375}
!8375 = !DILocation(line: 2445, column: 9, scope: !8350)
!8376 = !DILocation(line: 2452, column: 12, scope: !8317)
!8377 = !DILocation(line: 2452, column: 5, scope: !8317)
!8378 = distinct !DISubprogram(name: "show_programs", scope: !47, file: !47, line: 2733, type: !8318, isLocal: true, isDefinition: true, scopeLine: 2734, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!8379 = !DILocalVariable(name: "w", arg: 1, scope: !8378, file: !47, line: 2733, type: !2418)
!8380 = !DILocation(line: 2733, column: 41, scope: !8378)
!8381 = !DILocalVariable(name: "ifile", arg: 2, scope: !8378, file: !47, line: 2733, type: !8036)
!8382 = !DILocation(line: 2733, column: 55, scope: !8378)
!8383 = !DILocalVariable(name: "fmt_ctx", scope: !8378, file: !47, line: 2735, type: !1483)
!8384 = !DILocation(line: 2735, column: 22, scope: !8378)
!8385 = !DILocation(line: 2735, column: 32, scope: !8378)
!8386 = !DILocation(line: 2735, column: 39, scope: !8378)
!8387 = !DILocalVariable(name: "i", scope: !8378, file: !47, line: 2736, type: !1041)
!8388 = !DILocation(line: 2736, column: 9, scope: !8378)
!8389 = !DILocalVariable(name: "ret", scope: !8378, file: !47, line: 2736, type: !1041)
!8390 = !DILocation(line: 2736, column: 12, scope: !8378)
!8391 = !DILocation(line: 2738, column: 33, scope: !8378)
!8392 = !DILocation(line: 2738, column: 5, scope: !8378)
!8393 = !DILocation(line: 2739, column: 12, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8378, file: !47, line: 2739, column: 5)
!8395 = !DILocation(line: 2739, column: 10, scope: !8394)
!8396 = !DILocation(line: 2739, column: 17, scope: !8397)
!8397 = !DILexicalBlockFile(scope: !8398, file: !47, discriminator: 1)
!8398 = distinct !DILexicalBlock(scope: !8394, file: !47, line: 2739, column: 5)
!8399 = !DILocation(line: 2739, column: 21, scope: !8397)
!8400 = !DILocation(line: 2739, column: 30, scope: !8397)
!8401 = !DILocation(line: 2739, column: 19, scope: !8397)
!8402 = !DILocation(line: 2739, column: 5, scope: !8397)
!8403 = !DILocalVariable(name: "program", scope: !8404, file: !47, line: 2740, type: !2218)
!8404 = distinct !DILexicalBlock(scope: !8398, file: !47, line: 2739, column: 48)
!8405 = !DILocation(line: 2740, column: 20, scope: !8404)
!8406 = !DILocation(line: 2740, column: 48, scope: !8404)
!8407 = !DILocation(line: 2740, column: 30, scope: !8404)
!8408 = !DILocation(line: 2740, column: 39, scope: !8404)
!8409 = !DILocation(line: 2741, column: 14, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8404, file: !47, line: 2741, column: 13)
!8411 = !DILocation(line: 2741, column: 13, scope: !8404)
!8412 = !DILocation(line: 2742, column: 13, scope: !8410)
!8413 = !DILocation(line: 2743, column: 28, scope: !8404)
!8414 = !DILocation(line: 2743, column: 31, scope: !8404)
!8415 = !DILocation(line: 2743, column: 38, scope: !8404)
!8416 = !DILocation(line: 2743, column: 15, scope: !8404)
!8417 = !DILocation(line: 2743, column: 13, scope: !8404)
!8418 = !DILocation(line: 2744, column: 13, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8404, file: !47, line: 2744, column: 13)
!8420 = !DILocation(line: 2744, column: 17, scope: !8419)
!8421 = !DILocation(line: 2744, column: 13, scope: !8404)
!8422 = !DILocation(line: 2745, column: 13, scope: !8419)
!8423 = !DILocation(line: 2746, column: 5, scope: !8404)
!8424 = !DILocation(line: 2739, column: 44, scope: !8425)
!8425 = !DILexicalBlockFile(scope: !8398, file: !47, discriminator: 2)
!8426 = !DILocation(line: 2739, column: 5, scope: !8425)
!8427 = distinct !{!8427, !8428}
!8428 = !DILocation(line: 2739, column: 5, scope: !8378)
!8429 = !DILocation(line: 2747, column: 33, scope: !8378)
!8430 = !DILocation(line: 2747, column: 5, scope: !8378)
!8431 = !DILocation(line: 2748, column: 12, scope: !8378)
!8432 = !DILocation(line: 2748, column: 5, scope: !8378)
!8433 = distinct !DISubprogram(name: "show_streams", scope: !47, file: !47, line: 2681, type: !8318, isLocal: true, isDefinition: true, scopeLine: 2682, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!8434 = !DILocalVariable(name: "w", arg: 1, scope: !8433, file: !47, line: 2681, type: !2418)
!8435 = !DILocation(line: 2681, column: 40, scope: !8433)
!8436 = !DILocalVariable(name: "ifile", arg: 2, scope: !8433, file: !47, line: 2681, type: !8036)
!8437 = !DILocation(line: 2681, column: 54, scope: !8433)
!8438 = !DILocalVariable(name: "fmt_ctx", scope: !8433, file: !47, line: 2683, type: !1483)
!8439 = !DILocation(line: 2683, column: 22, scope: !8433)
!8440 = !DILocation(line: 2683, column: 32, scope: !8433)
!8441 = !DILocation(line: 2683, column: 39, scope: !8433)
!8442 = !DILocalVariable(name: "i", scope: !8433, file: !47, line: 2684, type: !1041)
!8443 = !DILocation(line: 2684, column: 9, scope: !8433)
!8444 = !DILocalVariable(name: "ret", scope: !8433, file: !47, line: 2684, type: !1041)
!8445 = !DILocation(line: 2684, column: 12, scope: !8433)
!8446 = !DILocation(line: 2686, column: 33, scope: !8433)
!8447 = !DILocation(line: 2686, column: 5, scope: !8433)
!8448 = !DILocation(line: 2687, column: 12, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8433, file: !47, line: 2687, column: 5)
!8450 = !DILocation(line: 2687, column: 10, scope: !8449)
!8451 = !DILocation(line: 2687, column: 17, scope: !8452)
!8452 = !DILexicalBlockFile(scope: !8453, file: !47, discriminator: 1)
!8453 = distinct !DILexicalBlock(scope: !8449, file: !47, line: 2687, column: 5)
!8454 = !DILocation(line: 2687, column: 21, scope: !8452)
!8455 = !DILocation(line: 2687, column: 28, scope: !8452)
!8456 = !DILocation(line: 2687, column: 19, scope: !8452)
!8457 = !DILocation(line: 2687, column: 5, scope: !8452)
!8458 = !DILocation(line: 2688, column: 30, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8453, file: !47, line: 2688, column: 13)
!8460 = !DILocation(line: 2688, column: 13, scope: !8459)
!8461 = !DILocation(line: 2688, column: 13, scope: !8453)
!8462 = !DILocation(line: 2689, column: 31, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8459, file: !47, line: 2688, column: 34)
!8464 = !DILocation(line: 2689, column: 34, scope: !8463)
!8465 = !DILocation(line: 2689, column: 43, scope: !8463)
!8466 = !DILocation(line: 2689, column: 62, scope: !8463)
!8467 = !DILocation(line: 2689, column: 47, scope: !8463)
!8468 = !DILocation(line: 2689, column: 54, scope: !8463)
!8469 = !DILocation(line: 2689, column: 19, scope: !8463)
!8470 = !DILocation(line: 2689, column: 17, scope: !8463)
!8471 = !DILocation(line: 2690, column: 17, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8463, file: !47, line: 2690, column: 17)
!8473 = !DILocation(line: 2690, column: 21, scope: !8472)
!8474 = !DILocation(line: 2690, column: 17, scope: !8463)
!8475 = !DILocation(line: 2691, column: 17, scope: !8472)
!8476 = !DILocation(line: 2692, column: 9, scope: !8463)
!8477 = !DILocation(line: 2688, column: 31, scope: !8478)
!8478 = !DILexicalBlockFile(scope: !8459, file: !47, discriminator: 1)
!8479 = !DILocation(line: 2687, column: 41, scope: !8480)
!8480 = !DILexicalBlockFile(scope: !8453, file: !47, discriminator: 2)
!8481 = !DILocation(line: 2687, column: 5, scope: !8480)
!8482 = distinct !{!8482, !8483}
!8483 = !DILocation(line: 2687, column: 5, scope: !8433)
!8484 = !DILocation(line: 2693, column: 33, scope: !8433)
!8485 = !DILocation(line: 2693, column: 5, scope: !8433)
!8486 = !DILocation(line: 2695, column: 12, scope: !8433)
!8487 = !DILocation(line: 2695, column: 5, scope: !8433)
!8488 = distinct !DISubprogram(name: "show_chapters", scope: !47, file: !47, line: 2751, type: !8318, isLocal: true, isDefinition: true, scopeLine: 2752, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!8489 = !DILocalVariable(name: "w", arg: 1, scope: !8488, file: !47, line: 2751, type: !2418)
!8490 = !DILocation(line: 2751, column: 41, scope: !8488)
!8491 = !DILocalVariable(name: "ifile", arg: 2, scope: !8488, file: !47, line: 2751, type: !8036)
!8492 = !DILocation(line: 2751, column: 55, scope: !8488)
!8493 = !DILocalVariable(name: "fmt_ctx", scope: !8488, file: !47, line: 2753, type: !1483)
!8494 = !DILocation(line: 2753, column: 22, scope: !8488)
!8495 = !DILocation(line: 2753, column: 32, scope: !8488)
!8496 = !DILocation(line: 2753, column: 39, scope: !8488)
!8497 = !DILocalVariable(name: "i", scope: !8488, file: !47, line: 2754, type: !1041)
!8498 = !DILocation(line: 2754, column: 9, scope: !8488)
!8499 = !DILocalVariable(name: "ret", scope: !8488, file: !47, line: 2754, type: !1041)
!8500 = !DILocation(line: 2754, column: 12, scope: !8488)
!8501 = !DILocation(line: 2756, column: 33, scope: !8488)
!8502 = !DILocation(line: 2756, column: 5, scope: !8488)
!8503 = !DILocation(line: 2757, column: 12, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8488, file: !47, line: 2757, column: 5)
!8505 = !DILocation(line: 2757, column: 10, scope: !8504)
!8506 = !DILocation(line: 2757, column: 17, scope: !8507)
!8507 = !DILexicalBlockFile(scope: !8508, file: !47, discriminator: 1)
!8508 = distinct !DILexicalBlock(scope: !8504, file: !47, line: 2757, column: 5)
!8509 = !DILocation(line: 2757, column: 21, scope: !8507)
!8510 = !DILocation(line: 2757, column: 30, scope: !8507)
!8511 = !DILocation(line: 2757, column: 19, scope: !8507)
!8512 = !DILocation(line: 2757, column: 5, scope: !8507)
!8513 = !DILocalVariable(name: "chapter", scope: !8514, file: !47, line: 2758, type: !2245)
!8514 = distinct !DILexicalBlock(scope: !8508, file: !47, line: 2757, column: 48)
!8515 = !DILocation(line: 2758, column: 20, scope: !8514)
!8516 = !DILocation(line: 2758, column: 48, scope: !8514)
!8517 = !DILocation(line: 2758, column: 30, scope: !8514)
!8518 = !DILocation(line: 2758, column: 39, scope: !8514)
!8519 = !DILocation(line: 2760, column: 37, scope: !8514)
!8520 = !DILocation(line: 2760, column: 9, scope: !8514)
!8521 = !DILocation(line: 2761, column: 30, scope: !8514)
!8522 = !DILocation(line: 2761, column: 39, scope: !8514)
!8523 = !DILocation(line: 2761, column: 48, scope: !8514)
!8524 = !DILocation(line: 2761, column: 9, scope: !8514)
!8525 = !DILocation(line: 2762, column: 31, scope: !8514)
!8526 = !DILocation(line: 2762, column: 47, scope: !8514)
!8527 = !DILocation(line: 2762, column: 56, scope: !8514)
!8528 = !DILocation(line: 2762, column: 9, scope: !8514)
!8529 = !DILocation(line: 2763, column: 30, scope: !8514)
!8530 = !DILocation(line: 2763, column: 42, scope: !8514)
!8531 = !DILocation(line: 2763, column: 51, scope: !8514)
!8532 = !DILocation(line: 2763, column: 9, scope: !8514)
!8533 = !DILocation(line: 2764, column: 27, scope: !8514)
!8534 = !DILocation(line: 2764, column: 44, scope: !8514)
!8535 = !DILocation(line: 2764, column: 53, scope: !8514)
!8536 = !DILocation(line: 2764, column: 61, scope: !8514)
!8537 = !DILocation(line: 2764, column: 70, scope: !8514)
!8538 = !DILocation(line: 2764, column: 9, scope: !8514)
!8539 = !DILocation(line: 2765, column: 30, scope: !8514)
!8540 = !DILocation(line: 2765, column: 40, scope: !8514)
!8541 = !DILocation(line: 2765, column: 49, scope: !8514)
!8542 = !DILocation(line: 2765, column: 9, scope: !8514)
!8543 = !DILocation(line: 2766, column: 27, scope: !8514)
!8544 = !DILocation(line: 2766, column: 42, scope: !8514)
!8545 = !DILocation(line: 2766, column: 51, scope: !8514)
!8546 = !DILocation(line: 2766, column: 57, scope: !8514)
!8547 = !DILocation(line: 2766, column: 66, scope: !8514)
!8548 = !DILocation(line: 2766, column: 9, scope: !8514)
!8549 = !DILocation(line: 2767, column: 13, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8514, file: !47, line: 2767, column: 13)
!8551 = !DILocation(line: 2767, column: 13, scope: !8514)
!8552 = !DILocation(line: 2768, column: 29, scope: !8550)
!8553 = !DILocation(line: 2768, column: 32, scope: !8550)
!8554 = !DILocation(line: 2768, column: 41, scope: !8550)
!8555 = !DILocation(line: 2768, column: 19, scope: !8550)
!8556 = !DILocation(line: 2768, column: 17, scope: !8550)
!8557 = !DILocation(line: 2768, column: 13, scope: !8550)
!8558 = !DILocation(line: 2769, column: 37, scope: !8514)
!8559 = !DILocation(line: 2769, column: 9, scope: !8514)
!8560 = !DILocation(line: 2770, column: 5, scope: !8514)
!8561 = !DILocation(line: 2757, column: 44, scope: !8562)
!8562 = !DILexicalBlockFile(scope: !8508, file: !47, discriminator: 2)
!8563 = !DILocation(line: 2757, column: 5, scope: !8562)
!8564 = distinct !{!8564, !8565}
!8565 = !DILocation(line: 2757, column: 5, scope: !8488)
!8566 = !DILocation(line: 2771, column: 33, scope: !8488)
!8567 = !DILocation(line: 2771, column: 5, scope: !8488)
!8568 = !DILocation(line: 2773, column: 12, scope: !8488)
!8569 = !DILocation(line: 2773, column: 5, scope: !8488)
!8570 = distinct !DISubprogram(name: "show_format", scope: !47, file: !47, line: 2776, type: !8318, isLocal: true, isDefinition: true, scopeLine: 2777, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!8571 = !DILocalVariable(name: "w", arg: 1, scope: !8570, file: !47, line: 2776, type: !2418)
!8572 = !DILocation(line: 2776, column: 39, scope: !8570)
!8573 = !DILocalVariable(name: "ifile", arg: 2, scope: !8570, file: !47, line: 2776, type: !8036)
!8574 = !DILocation(line: 2776, column: 53, scope: !8570)
!8575 = !DILocalVariable(name: "fmt_ctx", scope: !8570, file: !47, line: 2778, type: !1483)
!8576 = !DILocation(line: 2778, column: 22, scope: !8570)
!8577 = !DILocation(line: 2778, column: 32, scope: !8570)
!8578 = !DILocation(line: 2778, column: 39, scope: !8570)
!8579 = !DILocalVariable(name: "val_str", scope: !8570, file: !47, line: 2779, type: !4620)
!8580 = !DILocation(line: 2779, column: 10, scope: !8570)
!8581 = !DILocalVariable(name: "size", scope: !8570, file: !47, line: 2780, type: !1019)
!8582 = !DILocation(line: 2780, column: 13, scope: !8570)
!8583 = !DILocation(line: 2780, column: 20, scope: !8570)
!8584 = !DILocation(line: 2780, column: 29, scope: !8570)
!8585 = !DILocation(line: 2780, column: 44, scope: !8586)
!8586 = !DILexicalBlockFile(scope: !8570, file: !47, discriminator: 1)
!8587 = !DILocation(line: 2780, column: 53, scope: !8586)
!8588 = !DILocation(line: 2780, column: 34, scope: !8586)
!8589 = !DILocation(line: 2780, column: 20, scope: !8586)
!8590 = !DILocation(line: 2780, column: 20, scope: !8591)
!8591 = !DILexicalBlockFile(scope: !8570, file: !47, discriminator: 2)
!8592 = !DILocation(line: 2780, column: 20, scope: !8593)
!8593 = !DILexicalBlockFile(scope: !8570, file: !47, discriminator: 3)
!8594 = !DILocation(line: 2780, column: 13, scope: !8593)
!8595 = !DILocalVariable(name: "ret", scope: !8570, file: !47, line: 2781, type: !1041)
!8596 = !DILocation(line: 2781, column: 9, scope: !8570)
!8597 = !DILocation(line: 2783, column: 33, scope: !8570)
!8598 = !DILocation(line: 2783, column: 5, scope: !8570)
!8599 = !DILocation(line: 2784, column: 25, scope: !8570)
!8600 = !DILocation(line: 2784, column: 40, scope: !8570)
!8601 = !DILocation(line: 2784, column: 49, scope: !8570)
!8602 = !DILocation(line: 2784, column: 5, scope: !8570)
!8603 = !DILocation(line: 2785, column: 26, scope: !8570)
!8604 = !DILocation(line: 2785, column: 43, scope: !8570)
!8605 = !DILocation(line: 2785, column: 52, scope: !8570)
!8606 = !DILocation(line: 2785, column: 5, scope: !8570)
!8607 = !DILocation(line: 2786, column: 26, scope: !8570)
!8608 = !DILocation(line: 2786, column: 44, scope: !8570)
!8609 = !DILocation(line: 2786, column: 53, scope: !8570)
!8610 = !DILocation(line: 2786, column: 5, scope: !8570)
!8611 = !DILocation(line: 2787, column: 25, scope: !8570)
!8612 = !DILocation(line: 2787, column: 43, scope: !8570)
!8613 = !DILocation(line: 2787, column: 52, scope: !8570)
!8614 = !DILocation(line: 2787, column: 61, scope: !8570)
!8615 = !DILocation(line: 2787, column: 5, scope: !8570)
!8616 = !DILocation(line: 2788, column: 10, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8570, file: !47, line: 2788, column: 9)
!8618 = !DILocation(line: 2788, column: 9, scope: !8570)
!8619 = !DILocation(line: 2789, column: 13, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8621, file: !47, line: 2789, column: 13)
!8621 = distinct !DILexicalBlock(scope: !8617, file: !47, line: 2788, column: 23)
!8622 = !DILocation(line: 2789, column: 22, scope: !8620)
!8623 = !DILocation(line: 2789, column: 31, scope: !8620)
!8624 = !DILocation(line: 2789, column: 13, scope: !8621)
!8625 = !DILocation(line: 2789, column: 62, scope: !8626)
!8626 = !DILexicalBlockFile(scope: !8620, file: !47, discriminator: 1)
!8627 = !DILocation(line: 2789, column: 85, scope: !8626)
!8628 = !DILocation(line: 2789, column: 94, scope: !8626)
!8629 = !DILocation(line: 2789, column: 103, scope: !8626)
!8630 = !DILocation(line: 2789, column: 42, scope: !8626)
!8631 = !DILocation(line: 2790, column: 34, scope: !8620)
!8632 = !DILocation(line: 2790, column: 14, scope: !8620)
!8633 = !DILocation(line: 2791, column: 5, scope: !8621)
!8634 = !DILocation(line: 2792, column: 23, scope: !8570)
!8635 = !DILocation(line: 2792, column: 40, scope: !8570)
!8636 = !DILocation(line: 2792, column: 49, scope: !8570)
!8637 = !DILocation(line: 2792, column: 74, scope: !8570)
!8638 = !DILocation(line: 2792, column: 5, scope: !8570)
!8639 = !DILocation(line: 2793, column: 23, scope: !8570)
!8640 = !DILocation(line: 2793, column: 38, scope: !8570)
!8641 = !DILocation(line: 2793, column: 47, scope: !8570)
!8642 = !DILocation(line: 2793, column: 70, scope: !8570)
!8643 = !DILocation(line: 2793, column: 5, scope: !8570)
!8644 = !DILocation(line: 2794, column: 9, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8570, file: !47, line: 2794, column: 9)
!8646 = !DILocation(line: 2794, column: 14, scope: !8645)
!8647 = !DILocation(line: 2794, column: 9, scope: !8570)
!8648 = !DILocation(line: 2794, column: 20, scope: !8649)
!8649 = !DILexicalBlockFile(scope: !8645, file: !47, discriminator: 1)
!8650 = distinct !{!8650, !8651}
!8651 = !DILocation(line: 2794, column: 20, scope: !8645)
!8652 = !DILocalVariable(name: "uv", scope: !8653, file: !47, line: 2794, type: !8654)
!8653 = distinct !DILexicalBlock(scope: !8645, file: !47, line: 2794, column: 23)
!8654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unit_value", file: !47, line: 356, size: 128, align: 64, elements: !8655)
!8655 = !{!8656, !8661}
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !8654, file: !47, line: 357, baseType: !8657, size: 64, align: 64)
!8657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8654, file: !47, line: 357, size: 64, align: 64, elements: !8658)
!8658 = !{!8659, !8660}
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !8657, file: !47, line: 357, baseType: !1020, size: 64, align: 64)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !8657, file: !47, line: 357, baseType: !1109, size: 64, align: 64)
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !8654, file: !47, line: 358, baseType: !1027, size: 64, align: 64, offset: 64)
!8662 = !DILocation(line: 2794, column: 43, scope: !8653)
!8663 = !DILocation(line: 2794, column: 58, scope: !8664)
!8664 = !DILexicalBlockFile(scope: !8653, file: !47, discriminator: 2)
!8665 = !DILocation(line: 2794, column: 50, scope: !8664)
!8666 = !DILocation(line: 2794, column: 54, scope: !8664)
!8667 = !DILocation(line: 2794, column: 56, scope: !8664)
!8668 = !DILocation(line: 2794, column: 67, scope: !8664)
!8669 = !DILocation(line: 2794, column: 72, scope: !8664)
!8670 = !DILocation(line: 2794, column: 109, scope: !8664)
!8671 = !DILocation(line: 2794, column: 133, scope: !8664)
!8672 = !DILocation(line: 2794, column: 120, scope: !8664)
!8673 = !DILocation(line: 2794, column: 89, scope: !8674)
!8674 = !DILexicalBlockFile(scope: !8664, file: !47, discriminator: 4)
!8675 = !DILocation(line: 2794, column: 168, scope: !8664)
!8676 = !DILocation(line: 2794, column: 168, scope: !8677)
!8677 = !DILexicalBlockFile(scope: !8653, file: !47, discriminator: 3)
!8678 = !DILocation(line: 2795, column: 30, scope: !8645)
!8679 = !DILocation(line: 2795, column: 10, scope: !8645)
!8680 = !DILocation(line: 2796, column: 9, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8570, file: !47, line: 2796, column: 9)
!8682 = !DILocation(line: 2796, column: 18, scope: !8681)
!8683 = !DILocation(line: 2796, column: 27, scope: !8681)
!8684 = !DILocation(line: 2796, column: 9, scope: !8570)
!8685 = !DILocation(line: 2796, column: 32, scope: !8686)
!8686 = !DILexicalBlockFile(scope: !8681, file: !47, discriminator: 1)
!8687 = distinct !{!8687, !8688}
!8688 = !DILocation(line: 2796, column: 32, scope: !8681)
!8689 = !DILocalVariable(name: "uv", scope: !8690, file: !47, line: 2796, type: !8654)
!8690 = distinct !DILexicalBlock(scope: !8681, file: !47, line: 2796, column: 35)
!8691 = !DILocation(line: 2796, column: 55, scope: !8690)
!8692 = !DILocation(line: 2796, column: 70, scope: !8693)
!8693 = !DILexicalBlockFile(scope: !8690, file: !47, discriminator: 2)
!8694 = !DILocation(line: 2796, column: 79, scope: !8693)
!8695 = !DILocation(line: 2796, column: 62, scope: !8693)
!8696 = !DILocation(line: 2796, column: 66, scope: !8693)
!8697 = !DILocation(line: 2796, column: 68, scope: !8693)
!8698 = !DILocation(line: 2796, column: 92, scope: !8693)
!8699 = !DILocation(line: 2796, column: 97, scope: !8693)
!8700 = !DILocation(line: 2796, column: 144, scope: !8693)
!8701 = !DILocation(line: 2796, column: 172, scope: !8693)
!8702 = !DILocation(line: 2796, column: 159, scope: !8693)
!8703 = !DILocation(line: 2796, column: 124, scope: !8704)
!8704 = !DILexicalBlockFile(scope: !8693, file: !47, discriminator: 4)
!8705 = !DILocation(line: 2796, column: 207, scope: !8693)
!8706 = !DILocation(line: 2796, column: 207, scope: !8707)
!8707 = !DILexicalBlockFile(scope: !8690, file: !47, discriminator: 3)
!8708 = !DILocation(line: 2797, column: 30, scope: !8681)
!8709 = !DILocation(line: 2797, column: 10, scope: !8681)
!8710 = !DILocation(line: 2798, column: 26, scope: !8570)
!8711 = !DILocation(line: 2798, column: 44, scope: !8570)
!8712 = !DILocation(line: 2798, column: 53, scope: !8570)
!8713 = !DILocation(line: 2798, column: 5, scope: !8570)
!8714 = !DILocation(line: 2799, column: 9, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8570, file: !47, line: 2799, column: 9)
!8716 = !DILocation(line: 2799, column: 9, scope: !8570)
!8717 = !DILocation(line: 2800, column: 25, scope: !8715)
!8718 = !DILocation(line: 2800, column: 28, scope: !8715)
!8719 = !DILocation(line: 2800, column: 37, scope: !8715)
!8720 = !DILocation(line: 2800, column: 15, scope: !8715)
!8721 = !DILocation(line: 2800, column: 13, scope: !8715)
!8722 = !DILocation(line: 2800, column: 9, scope: !8715)
!8723 = !DILocation(line: 2802, column: 33, scope: !8570)
!8724 = !DILocation(line: 2802, column: 5, scope: !8570)
!8725 = !DILocation(line: 2803, column: 11, scope: !8570)
!8726 = !DILocation(line: 2803, column: 5, scope: !8570)
!8727 = !DILocation(line: 2804, column: 12, scope: !8570)
!8728 = !DILocation(line: 2804, column: 5, scope: !8570)
!8729 = distinct !DISubprogram(name: "close_input_file", scope: !47, file: !47, line: 2941, type: !8730, isLocal: true, isDefinition: true, scopeLine: 2942, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!8730 = !DISubroutineType(types: !8731)
!8731 = !{null, !8036}
!8732 = !DILocalVariable(name: "ifile", arg: 1, scope: !8729, file: !47, line: 2941, type: !8036)
!8733 = !DILocation(line: 2941, column: 41, scope: !8729)
!8734 = !DILocalVariable(name: "i", scope: !8729, file: !47, line: 2943, type: !1041)
!8735 = !DILocation(line: 2943, column: 9, scope: !8729)
!8736 = !DILocation(line: 2946, column: 12, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8729, file: !47, line: 2946, column: 5)
!8738 = !DILocation(line: 2946, column: 10, scope: !8737)
!8739 = !DILocation(line: 2946, column: 17, scope: !8740)
!8740 = !DILexicalBlockFile(scope: !8741, file: !47, discriminator: 1)
!8741 = distinct !DILexicalBlock(scope: !8737, file: !47, line: 2946, column: 5)
!8742 = !DILocation(line: 2946, column: 21, scope: !8740)
!8743 = !DILocation(line: 2946, column: 28, scope: !8740)
!8744 = !DILocation(line: 2946, column: 19, scope: !8740)
!8745 = !DILocation(line: 2946, column: 5, scope: !8740)
!8746 = !DILocation(line: 2947, column: 28, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8741, file: !47, line: 2947, column: 13)
!8748 = !DILocation(line: 2947, column: 13, scope: !8747)
!8749 = !DILocation(line: 2947, column: 20, scope: !8747)
!8750 = !DILocation(line: 2947, column: 31, scope: !8747)
!8751 = !DILocation(line: 2947, column: 35, scope: !8747)
!8752 = !DILocation(line: 2947, column: 45, scope: !8747)
!8753 = !DILocation(line: 2947, column: 54, scope: !8747)
!8754 = !DILocation(line: 2947, column: 13, scope: !8741)
!8755 = !DILocation(line: 2948, column: 50, scope: !8747)
!8756 = !DILocation(line: 2948, column: 35, scope: !8747)
!8757 = !DILocation(line: 2948, column: 42, scope: !8747)
!8758 = !DILocation(line: 2948, column: 53, scope: !8747)
!8759 = !DILocation(line: 2948, column: 13, scope: !8747)
!8760 = !DILocation(line: 2947, column: 57, scope: !8761)
!8761 = !DILexicalBlockFile(scope: !8747, file: !47, discriminator: 1)
!8762 = !DILocation(line: 2946, column: 41, scope: !8763)
!8763 = !DILexicalBlockFile(scope: !8741, file: !47, discriminator: 2)
!8764 = !DILocation(line: 2946, column: 5, scope: !8763)
!8765 = distinct !{!8765, !8766}
!8766 = !DILocation(line: 2946, column: 5, scope: !8729)
!8767 = !DILocation(line: 2950, column: 15, scope: !8729)
!8768 = !DILocation(line: 2950, column: 22, scope: !8729)
!8769 = !DILocation(line: 2950, column: 14, scope: !8729)
!8770 = !DILocation(line: 2950, column: 5, scope: !8729)
!8771 = !DILocation(line: 2951, column: 5, scope: !8729)
!8772 = !DILocation(line: 2951, column: 12, scope: !8729)
!8773 = !DILocation(line: 2951, column: 23, scope: !8729)
!8774 = !DILocation(line: 2953, column: 27, scope: !8729)
!8775 = !DILocation(line: 2953, column: 34, scope: !8729)
!8776 = !DILocation(line: 2953, column: 5, scope: !8729)
!8777 = !DILocation(line: 2954, column: 1, scope: !8729)
!8778 = distinct !DISubprogram(name: "read_interval_packets", scope: !47, file: !47, line: 2329, type: !8779, isLocal: true, isDefinition: true, scopeLine: 2331, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!8779 = !DISubroutineType(types: !8780)
!8780 = !{!1041, !2418, !8036, !5599, !1171}
!8781 = !DILocalVariable(name: "w", arg: 1, scope: !8782, file: !47, line: 2242, type: !2418)
!8782 = distinct !DISubprogram(name: "process_frame", scope: !47, file: !47, line: 2242, type: !8783, isLocal: true, isDefinition: true, scopeLine: 2246, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!8783 = !DISubroutineType(types: !8784)
!8784 = !{!1041, !2418, !8036, !1374, !1318, !1695}
!8785 = !DILocation(line: 2242, column: 79, scope: !8782, inlinedAt: !8786)
!8786 = distinct !DILocation(line: 2423, column: 20, scope: !8787)
!8787 = !DILexicalBlockFile(scope: !8788, file: !47, discriminator: 1)
!8788 = distinct !DILexicalBlock(scope: !8789, file: !47, line: 2422, column: 13)
!8789 = distinct !DILexicalBlock(scope: !8790, file: !47, line: 2420, column: 47)
!8790 = distinct !DILexicalBlock(scope: !8791, file: !47, line: 2420, column: 5)
!8791 = distinct !DILexicalBlock(scope: !8778, file: !47, line: 2420, column: 5)
!8792 = !DILocalVariable(name: "ifile", arg: 2, scope: !8782, file: !47, line: 2243, type: !8036)
!8793 = !DILocation(line: 2243, column: 54, scope: !8782, inlinedAt: !8786)
!8794 = !DILocalVariable(name: "frame", arg: 3, scope: !8782, file: !47, line: 2244, type: !1374)
!8795 = !DILocation(line: 2244, column: 52, scope: !8782, inlinedAt: !8786)
!8796 = !DILocalVariable(name: "pkt", arg: 4, scope: !8782, file: !47, line: 2244, type: !1318)
!8797 = !DILocation(line: 2244, column: 69, scope: !8782, inlinedAt: !8786)
!8798 = !DILocalVariable(name: "packet_new", arg: 5, scope: !8782, file: !47, line: 2245, type: !1695)
!8799 = !DILocation(line: 2245, column: 48, scope: !8782, inlinedAt: !8786)
!8800 = !DILocalVariable(name: "fmt_ctx", scope: !8782, file: !47, line: 2247, type: !1483)
!8801 = !DILocation(line: 2247, column: 22, scope: !8782, inlinedAt: !8786)
!8802 = !DILocalVariable(name: "dec_ctx", scope: !8782, file: !47, line: 2248, type: !1584)
!8803 = !DILocation(line: 2248, column: 21, scope: !8782, inlinedAt: !8786)
!8804 = !DILocalVariable(name: "par", scope: !8782, file: !47, line: 2249, type: !2016)
!8805 = !DILocation(line: 2249, column: 24, scope: !8782, inlinedAt: !8786)
!8806 = !DILocalVariable(name: "sub", scope: !8782, file: !47, line: 2250, type: !8807)
!8807 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitle", file: !93, line: 3927, baseType: !1655)
!8808 = !DILocation(line: 2250, column: 16, scope: !8782, inlinedAt: !8786)
!8809 = !DILocalVariable(name: "ret", scope: !8782, file: !47, line: 2251, type: !1041)
!8810 = !DILocation(line: 2251, column: 9, scope: !8782, inlinedAt: !8786)
!8811 = !DILocalVariable(name: "got_frame", scope: !8782, file: !47, line: 2251, type: !1041)
!8812 = !DILocation(line: 2251, column: 18, scope: !8782, inlinedAt: !8786)
!8813 = !DILocalVariable(name: "is_sub", scope: !8814, file: !47, line: 2292, type: !1041)
!8814 = distinct !DILexicalBlock(scope: !8815, file: !47, line: 2291, column: 20)
!8815 = distinct !DILexicalBlock(scope: !8782, file: !47, line: 2291, column: 9)
!8816 = !DILocation(line: 2292, column: 13, scope: !8814, inlinedAt: !8786)
!8817 = !DILocation(line: 2242, column: 79, scope: !8782, inlinedAt: !8818)
!8818 = distinct !DILocation(line: 2411, column: 24, scope: !8819)
!8819 = !DILexicalBlockFile(scope: !8820, file: !47, discriminator: 1)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !47, line: 2409, column: 33)
!8821 = distinct !DILexicalBlock(scope: !8822, file: !47, line: 2409, column: 17)
!8822 = distinct !DILexicalBlock(scope: !8823, file: !47, line: 2380, column: 49)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !47, line: 2380, column: 13)
!8824 = distinct !DILexicalBlock(scope: !8778, file: !47, line: 2373, column: 43)
!8825 = !DILocation(line: 2243, column: 54, scope: !8782, inlinedAt: !8818)
!8826 = !DILocation(line: 2244, column: 52, scope: !8782, inlinedAt: !8818)
!8827 = !DILocation(line: 2244, column: 69, scope: !8782, inlinedAt: !8818)
!8828 = !DILocation(line: 2245, column: 48, scope: !8782, inlinedAt: !8818)
!8829 = !DILocation(line: 2247, column: 22, scope: !8782, inlinedAt: !8818)
!8830 = !DILocation(line: 2248, column: 21, scope: !8782, inlinedAt: !8818)
!8831 = !DILocation(line: 2249, column: 24, scope: !8782, inlinedAt: !8818)
!8832 = !DILocation(line: 2250, column: 16, scope: !8782, inlinedAt: !8818)
!8833 = !DILocation(line: 2251, column: 9, scope: !8782, inlinedAt: !8818)
!8834 = !DILocation(line: 2251, column: 18, scope: !8782, inlinedAt: !8818)
!8835 = !DILocation(line: 2292, column: 13, scope: !8814, inlinedAt: !8818)
!8836 = !DILocalVariable(name: "w", arg: 1, scope: !8778, file: !47, line: 2329, type: !2418)
!8837 = !DILocation(line: 2329, column: 49, scope: !8778)
!8838 = !DILocalVariable(name: "ifile", arg: 2, scope: !8778, file: !47, line: 2329, type: !8036)
!8839 = !DILocation(line: 2329, column: 63, scope: !8778)
!8840 = !DILocalVariable(name: "interval", arg: 3, scope: !8778, file: !47, line: 2330, type: !5599)
!8841 = !DILocation(line: 2330, column: 54, scope: !8778)
!8842 = !DILocalVariable(name: "cur_ts", arg: 4, scope: !8778, file: !47, line: 2330, type: !1171)
!8843 = !DILocation(line: 2330, column: 73, scope: !8778)
!8844 = !DILocalVariable(name: "fmt_ctx", scope: !8778, file: !47, line: 2332, type: !1483)
!8845 = !DILocation(line: 2332, column: 22, scope: !8778)
!8846 = !DILocation(line: 2332, column: 32, scope: !8778)
!8847 = !DILocation(line: 2332, column: 39, scope: !8778)
!8848 = !DILocalVariable(name: "pkt", scope: !8778, file: !47, line: 2333, type: !1319)
!8849 = !DILocation(line: 2333, column: 14, scope: !8778)
!8850 = !DILocalVariable(name: "frame", scope: !8778, file: !47, line: 2334, type: !1374)
!8851 = !DILocation(line: 2334, column: 14, scope: !8778)
!8852 = !DILocalVariable(name: "ret", scope: !8778, file: !47, line: 2335, type: !1041)
!8853 = !DILocation(line: 2335, column: 9, scope: !8778)
!8854 = !DILocalVariable(name: "i", scope: !8778, file: !47, line: 2335, type: !1041)
!8855 = !DILocation(line: 2335, column: 18, scope: !8778)
!8856 = !DILocalVariable(name: "frame_count", scope: !8778, file: !47, line: 2335, type: !1041)
!8857 = !DILocation(line: 2335, column: 25, scope: !8778)
!8858 = !DILocalVariable(name: "start", scope: !8778, file: !47, line: 2336, type: !1019)
!8859 = !DILocation(line: 2336, column: 13, scope: !8778)
!8860 = !DILocalVariable(name: "end", scope: !8778, file: !47, line: 2336, type: !1019)
!8861 = !DILocation(line: 2336, column: 32, scope: !8778)
!8862 = !DILocation(line: 2336, column: 38, scope: !8778)
!8863 = !DILocation(line: 2336, column: 48, scope: !8778)
!8864 = !DILocalVariable(name: "has_start", scope: !8778, file: !47, line: 2337, type: !1041)
!8865 = !DILocation(line: 2337, column: 9, scope: !8778)
!8866 = !DILocalVariable(name: "has_end", scope: !8778, file: !47, line: 2337, type: !1041)
!8867 = !DILocation(line: 2337, column: 24, scope: !8778)
!8868 = !DILocation(line: 2337, column: 34, scope: !8778)
!8869 = !DILocation(line: 2337, column: 44, scope: !8778)
!8870 = !DILocation(line: 2337, column: 52, scope: !8778)
!8871 = !DILocation(line: 2337, column: 56, scope: !8872)
!8872 = !DILexicalBlockFile(scope: !8778, file: !47, discriminator: 1)
!8873 = !DILocation(line: 2337, column: 66, scope: !8872)
!8874 = !DILocation(line: 2337, column: 55, scope: !8872)
!8875 = !DILocation(line: 2337, column: 52, scope: !8876)
!8876 = !DILexicalBlockFile(scope: !8778, file: !47, discriminator: 2)
!8877 = !DILocation(line: 2337, column: 24, scope: !8876)
!8878 = !DILocation(line: 2339, column: 5, scope: !8778)
!8879 = !DILocation(line: 2341, column: 5, scope: !8778)
!8880 = !DILocation(line: 2342, column: 23, scope: !8778)
!8881 = !DILocation(line: 2342, column: 5, scope: !8778)
!8882 = !DILocation(line: 2344, column: 9, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8778, file: !47, line: 2344, column: 9)
!8884 = !DILocation(line: 2344, column: 19, scope: !8883)
!8885 = !DILocation(line: 2344, column: 9, scope: !8778)
!8886 = !DILocalVariable(name: "target", scope: !8887, file: !47, line: 2345, type: !1019)
!8887 = distinct !DILexicalBlock(scope: !8883, file: !47, line: 2344, column: 30)
!8888 = !DILocation(line: 2345, column: 17, scope: !8887)
!8889 = !DILocation(line: 2346, column: 13, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8887, file: !47, line: 2346, column: 13)
!8891 = !DILocation(line: 2346, column: 23, scope: !8890)
!8892 = !DILocation(line: 2346, column: 13, scope: !8887)
!8893 = !DILocation(line: 2347, column: 18, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8895, file: !47, line: 2347, column: 17)
!8895 = distinct !DILexicalBlock(scope: !8890, file: !47, line: 2346, column: 40)
!8896 = !DILocation(line: 2347, column: 17, scope: !8894)
!8897 = !DILocation(line: 2347, column: 25, scope: !8894)
!8898 = !DILocation(line: 2347, column: 17, scope: !8895)
!8899 = !DILocation(line: 2348, column: 17, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8894, file: !47, line: 2347, column: 61)
!8901 = !DILocation(line: 2351, column: 21, scope: !8900)
!8902 = !DILocation(line: 2352, column: 17, scope: !8900)
!8903 = !DILocation(line: 2354, column: 23, scope: !8895)
!8904 = !DILocation(line: 2354, column: 22, scope: !8895)
!8905 = !DILocation(line: 2354, column: 32, scope: !8895)
!8906 = !DILocation(line: 2354, column: 42, scope: !8895)
!8907 = !DILocation(line: 2354, column: 30, scope: !8895)
!8908 = !DILocation(line: 2354, column: 20, scope: !8895)
!8909 = !DILocation(line: 2355, column: 9, scope: !8895)
!8910 = !DILocation(line: 2356, column: 22, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8890, file: !47, line: 2355, column: 16)
!8912 = !DILocation(line: 2356, column: 32, scope: !8911)
!8913 = !DILocation(line: 2356, column: 20, scope: !8911)
!8914 = !DILocation(line: 2360, column: 39, scope: !8887)
!8915 = !DILocation(line: 2360, column: 49, scope: !8887)
!8916 = !DILocation(line: 2360, column: 54, scope: !8887)
!8917 = !DILocation(line: 2360, column: 75, scope: !8887)
!8918 = !DILocation(line: 2360, column: 16, scope: !8919)
!8919 = !DILexicalBlockFile(scope: !8887, file: !47, discriminator: 1)
!8920 = !DILocation(line: 2359, column: 9, scope: !8887)
!8921 = !DILocation(line: 2361, column: 39, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8887, file: !47, line: 2361, column: 13)
!8923 = !DILocation(line: 2361, column: 63, scope: !8922)
!8924 = !DILocation(line: 2361, column: 20, scope: !8922)
!8925 = !DILocation(line: 2361, column: 18, scope: !8922)
!8926 = !DILocation(line: 2361, column: 86, scope: !8922)
!8927 = !DILocation(line: 2361, column: 13, scope: !8887)
!8928 = !DILocation(line: 2363, column: 20, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8922, file: !47, line: 2361, column: 91)
!8930 = !DILocation(line: 2363, column: 30, scope: !8929)
!8931 = !DILocation(line: 2363, column: 58, scope: !8929)
!8932 = !DILocation(line: 2363, column: 68, scope: !8929)
!8933 = !DILocation(line: 2363, column: 77, scope: !8929)
!8934 = !DILocation(line: 2363, column: 37, scope: !8935)
!8935 = !DILexicalBlockFile(scope: !8929, file: !47, discriminator: 1)
!8936 = !DILocation(line: 2362, column: 13, scope: !8929)
!8937 = !DILocation(line: 2364, column: 13, scope: !8929)
!8938 = !DILocation(line: 2366, column: 5, scope: !8887)
!8939 = !DILocation(line: 2368, column: 13, scope: !8778)
!8940 = !DILocation(line: 2368, column: 11, scope: !8778)
!8941 = !DILocation(line: 2369, column: 10, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8778, file: !47, line: 2369, column: 9)
!8943 = !DILocation(line: 2369, column: 9, scope: !8778)
!8944 = !DILocation(line: 2370, column: 13, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8942, file: !47, line: 2369, column: 17)
!8946 = !DILocation(line: 2371, column: 9, scope: !8945)
!8947 = !DILocation(line: 2373, column: 5, scope: !8778)
!8948 = !DILocation(line: 2373, column: 27, scope: !8872)
!8949 = !DILocation(line: 2373, column: 13, scope: !8872)
!8950 = !DILocation(line: 2373, column: 12, scope: !8872)
!8951 = !DILocation(line: 2373, column: 5, scope: !8872)
!8952 = !DILocation(line: 2374, column: 13, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8824, file: !47, line: 2374, column: 13)
!8954 = !DILocation(line: 2374, column: 22, scope: !8953)
!8955 = !DILocation(line: 2374, column: 35, scope: !8953)
!8956 = !DILocation(line: 2374, column: 33, scope: !8953)
!8957 = !DILocation(line: 2374, column: 13, scope: !8824)
!8958 = !DILocation(line: 2375, column: 62, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !47, line: 2375, column: 13)
!8960 = distinct !DILexicalBlock(scope: !8953, file: !47, line: 2374, column: 47)
!8961 = !DILocation(line: 2375, column: 71, scope: !8959)
!8962 = !DILocation(line: 2375, column: 61, scope: !8959)
!8963 = !DILocation(line: 2375, column: 21, scope: !8959)
!8964 = !DILocation(line: 2375, column: 19, scope: !8959)
!8965 = !DILocation(line: 2375, column: 119, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8959, file: !47, line: 2375, column: 119)
!8967 = !DILocation(line: 2375, column: 123, scope: !8966)
!8968 = !DILocation(line: 2375, column: 119, scope: !8959)
!8969 = !DILocation(line: 2375, column: 128, scope: !8970)
!8970 = !DILexicalBlockFile(scope: !8966, file: !47, discriminator: 1)
!8971 = !DILocation(line: 2375, column: 147, scope: !8972)
!8972 = !DILexicalBlockFile(scope: !8959, file: !47, discriminator: 2)
!8973 = !DILocation(line: 2375, column: 169, scope: !8972)
!8974 = !DILocation(line: 2375, column: 166, scope: !8972)
!8975 = !DILocation(line: 2375, column: 138, scope: !8972)
!8976 = !DILocation(line: 2375, column: 187, scope: !8972)
!8977 = !DILocation(line: 2375, column: 196, scope: !8972)
!8978 = !DILocation(line: 2375, column: 211, scope: !8972)
!8979 = !DILocation(line: 2375, column: 208, scope: !8972)
!8980 = !DILocation(line: 2375, column: 185, scope: !8972)
!8981 = !DILocation(line: 2375, column: 224, scope: !8972)
!8982 = !DILocation(line: 2376, column: 63, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8960, file: !47, line: 2376, column: 13)
!8984 = !DILocation(line: 2376, column: 72, scope: !8983)
!8985 = !DILocation(line: 2376, column: 62, scope: !8983)
!8986 = !DILocation(line: 2376, column: 21, scope: !8983)
!8987 = !DILocation(line: 2376, column: 19, scope: !8983)
!8988 = !DILocation(line: 2376, column: 121, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8983, file: !47, line: 2376, column: 121)
!8990 = !DILocation(line: 2376, column: 125, scope: !8989)
!8991 = !DILocation(line: 2376, column: 121, scope: !8983)
!8992 = !DILocation(line: 2376, column: 130, scope: !8993)
!8993 = !DILexicalBlockFile(scope: !8989, file: !47, discriminator: 1)
!8994 = !DILocation(line: 2376, column: 149, scope: !8995)
!8995 = !DILexicalBlockFile(scope: !8983, file: !47, discriminator: 2)
!8996 = !DILocation(line: 2376, column: 172, scope: !8995)
!8997 = !DILocation(line: 2376, column: 169, scope: !8995)
!8998 = !DILocation(line: 2376, column: 140, scope: !8995)
!8999 = !DILocation(line: 2376, column: 190, scope: !8995)
!9000 = !DILocation(line: 2376, column: 199, scope: !8995)
!9001 = !DILocation(line: 2376, column: 214, scope: !8995)
!9002 = !DILocation(line: 2376, column: 211, scope: !8995)
!9003 = !DILocation(line: 2376, column: 188, scope: !8995)
!9004 = !DILocation(line: 2376, column: 227, scope: !8995)
!9005 = !DILocation(line: 2377, column: 61, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8960, file: !47, line: 2377, column: 13)
!9007 = !DILocation(line: 2377, column: 70, scope: !9006)
!9008 = !DILocation(line: 2377, column: 60, scope: !9006)
!9009 = !DILocation(line: 2377, column: 21, scope: !9006)
!9010 = !DILocation(line: 2377, column: 19, scope: !9006)
!9011 = !DILocation(line: 2377, column: 117, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9006, file: !47, line: 2377, column: 117)
!9013 = !DILocation(line: 2377, column: 121, scope: !9012)
!9014 = !DILocation(line: 2377, column: 117, scope: !9006)
!9015 = !DILocation(line: 2377, column: 126, scope: !9016)
!9016 = !DILexicalBlockFile(scope: !9012, file: !47, discriminator: 1)
!9017 = !DILocation(line: 2377, column: 145, scope: !9018)
!9018 = !DILexicalBlockFile(scope: !9006, file: !47, discriminator: 2)
!9019 = !DILocation(line: 2377, column: 166, scope: !9018)
!9020 = !DILocation(line: 2377, column: 163, scope: !9018)
!9021 = !DILocation(line: 2377, column: 136, scope: !9018)
!9022 = !DILocation(line: 2377, column: 184, scope: !9018)
!9023 = !DILocation(line: 2377, column: 193, scope: !9018)
!9024 = !DILocation(line: 2377, column: 208, scope: !9018)
!9025 = !DILocation(line: 2377, column: 205, scope: !9018)
!9026 = !DILocation(line: 2377, column: 182, scope: !9018)
!9027 = !DILocation(line: 2377, column: 221, scope: !9018)
!9028 = !DILocation(line: 2378, column: 26, scope: !8960)
!9029 = !DILocation(line: 2378, column: 35, scope: !8960)
!9030 = !DILocation(line: 2378, column: 24, scope: !8960)
!9031 = !DILocation(line: 2379, column: 9, scope: !8960)
!9032 = !DILocation(line: 2380, column: 34, scope: !8823)
!9033 = !DILocation(line: 2380, column: 13, scope: !8823)
!9034 = !DILocation(line: 2380, column: 13, scope: !8824)
!9035 = !DILocalVariable(name: "tb", scope: !8822, file: !47, line: 2381, type: !1050)
!9036 = !DILocation(line: 2381, column: 24, scope: !8822)
!9037 = !DILocation(line: 2381, column: 48, scope: !8822)
!9038 = !DILocation(line: 2381, column: 29, scope: !8822)
!9039 = !DILocation(line: 2381, column: 36, scope: !8822)
!9040 = !DILocation(line: 2381, column: 62, scope: !8822)
!9041 = !DILocation(line: 2381, column: 66, scope: !8822)
!9042 = !DILocation(line: 2383, column: 21, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !8822, file: !47, line: 2383, column: 17)
!9044 = !DILocation(line: 2383, column: 25, scope: !9043)
!9045 = !DILocation(line: 2383, column: 17, scope: !8822)
!9046 = !DILocation(line: 2384, column: 44, scope: !9043)
!9047 = !DILocation(line: 2384, column: 65, scope: !9043)
!9048 = !DILocation(line: 2384, column: 27, scope: !9043)
!9049 = !DILocation(line: 2384, column: 18, scope: !9043)
!9050 = !DILocation(line: 2384, column: 25, scope: !9043)
!9051 = !DILocation(line: 2384, column: 17, scope: !9043)
!9052 = !DILocation(line: 2386, column: 18, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !8822, file: !47, line: 2386, column: 17)
!9054 = !DILocation(line: 2386, column: 28, scope: !9053)
!9055 = !DILocation(line: 2386, column: 32, scope: !9056)
!9056 = !DILexicalBlockFile(scope: !9053, file: !47, discriminator: 1)
!9057 = !DILocation(line: 2386, column: 31, scope: !9056)
!9058 = !DILocation(line: 2386, column: 39, scope: !9056)
!9059 = !DILocation(line: 2386, column: 17, scope: !9056)
!9060 = !DILocation(line: 2387, column: 26, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9053, file: !47, line: 2386, column: 75)
!9062 = !DILocation(line: 2387, column: 25, scope: !9061)
!9063 = !DILocation(line: 2387, column: 23, scope: !9061)
!9064 = !DILocation(line: 2388, column: 27, scope: !9061)
!9065 = !DILocation(line: 2389, column: 13, scope: !9061)
!9066 = !DILocation(line: 2391, column: 17, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !8822, file: !47, line: 2391, column: 17)
!9068 = !DILocation(line: 2391, column: 27, scope: !9067)
!9069 = !DILocation(line: 2391, column: 31, scope: !9070)
!9070 = !DILexicalBlockFile(scope: !9067, file: !47, discriminator: 1)
!9071 = !DILocation(line: 2391, column: 39, scope: !9070)
!9072 = !DILocation(line: 2391, column: 42, scope: !9073)
!9073 = !DILexicalBlockFile(scope: !9067, file: !47, discriminator: 2)
!9074 = !DILocation(line: 2391, column: 52, scope: !9073)
!9075 = !DILocation(line: 2391, column: 17, scope: !9073)
!9076 = !DILocation(line: 2392, column: 23, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9067, file: !47, line: 2391, column: 67)
!9078 = !DILocation(line: 2392, column: 31, scope: !9077)
!9079 = !DILocation(line: 2392, column: 41, scope: !9077)
!9080 = !DILocation(line: 2392, column: 29, scope: !9077)
!9081 = !DILocation(line: 2392, column: 21, scope: !9077)
!9082 = !DILocation(line: 2393, column: 25, scope: !9077)
!9083 = !DILocation(line: 2394, column: 13, scope: !9077)
!9084 = !DILocation(line: 2396, column: 17, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !8822, file: !47, line: 2396, column: 17)
!9086 = !DILocation(line: 2396, column: 27, scope: !9085)
!9087 = !DILocation(line: 2396, column: 41, scope: !9085)
!9088 = !DILocation(line: 2396, column: 44, scope: !9089)
!9089 = !DILexicalBlockFile(scope: !9085, file: !47, discriminator: 1)
!9090 = !DILocation(line: 2396, column: 54, scope: !9089)
!9091 = !DILocation(line: 2396, column: 17, scope: !9089)
!9092 = !DILocation(line: 2397, column: 21, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9094, file: !47, line: 2397, column: 21)
!9094 = distinct !DILexicalBlock(scope: !9085, file: !47, line: 2396, column: 71)
!9095 = !DILocation(line: 2397, column: 36, scope: !9093)
!9096 = !DILocation(line: 2397, column: 46, scope: !9093)
!9097 = !DILocation(line: 2397, column: 33, scope: !9093)
!9098 = !DILocation(line: 2397, column: 21, scope: !9094)
!9099 = !DILocation(line: 2398, column: 21, scope: !9093)
!9100 = !DILocation(line: 2399, column: 13, scope: !9094)
!9101 = !DILocation(line: 2399, column: 24, scope: !9102)
!9102 = !DILexicalBlockFile(scope: !9103, file: !47, discriminator: 1)
!9103 = distinct !DILexicalBlock(scope: !9085, file: !47, line: 2399, column: 24)
!9104 = !DILocation(line: 2399, column: 32, scope: !9102)
!9105 = !DILocation(line: 2399, column: 36, scope: !9106)
!9106 = !DILexicalBlockFile(scope: !9103, file: !47, discriminator: 2)
!9107 = !DILocation(line: 2399, column: 35, scope: !9106)
!9108 = !DILocation(line: 2399, column: 43, scope: !9106)
!9109 = !DILocation(line: 2399, column: 78, scope: !9106)
!9110 = !DILocation(line: 2399, column: 82, scope: !9111)
!9111 = !DILexicalBlockFile(scope: !9103, file: !47, discriminator: 3)
!9112 = !DILocation(line: 2399, column: 81, scope: !9111)
!9113 = !DILocation(line: 2399, column: 92, scope: !9111)
!9114 = !DILocation(line: 2399, column: 89, scope: !9111)
!9115 = !DILocation(line: 2399, column: 24, scope: !9111)
!9116 = !DILocation(line: 2400, column: 17, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9103, file: !47, line: 2399, column: 97)
!9118 = !DILocation(line: 2403, column: 24, scope: !8822)
!9119 = !DILocation(line: 2404, column: 17, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !8822, file: !47, line: 2404, column: 17)
!9121 = !DILocation(line: 2404, column: 17, scope: !8822)
!9122 = !DILocation(line: 2405, column: 21, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9124, file: !47, line: 2405, column: 21)
!9124 = distinct !DILexicalBlock(scope: !9120, file: !47, line: 2404, column: 34)
!9125 = !DILocation(line: 2405, column: 21, scope: !9124)
!9126 = !DILocation(line: 2406, column: 33, scope: !9123)
!9127 = !DILocation(line: 2406, column: 36, scope: !9123)
!9128 = !DILocation(line: 2406, column: 50, scope: !9123)
!9129 = !DILocation(line: 2406, column: 21, scope: !9123)
!9130 = !DILocation(line: 2407, column: 40, scope: !9124)
!9131 = !DILocation(line: 2407, column: 17, scope: !9124)
!9132 = !DILocation(line: 2407, column: 53, scope: !9124)
!9133 = !DILocation(line: 2408, column: 13, scope: !9124)
!9134 = !DILocation(line: 2409, column: 17, scope: !8821)
!9135 = !DILocation(line: 2409, column: 17, scope: !8822)
!9136 = !DILocalVariable(name: "packet_new", scope: !8820, file: !47, line: 2410, type: !1041)
!9137 = !DILocation(line: 2410, column: 21, scope: !8820)
!9138 = !DILocation(line: 2411, column: 17, scope: !8820)
!9139 = !DILocation(line: 2411, column: 38, scope: !8819)
!9140 = !DILocation(line: 2411, column: 41, scope: !8819)
!9141 = !DILocation(line: 2411, column: 48, scope: !8819)
!9142 = !DILocation(line: 2411, column: 24, scope: !8819)
!9143 = !DILocation(line: 2247, column: 32, scope: !8782, inlinedAt: !8818)
!9144 = !DILocation(line: 2247, column: 39, scope: !8782, inlinedAt: !8818)
!9145 = !DILocation(line: 2248, column: 46, scope: !8782, inlinedAt: !8818)
!9146 = !DILocation(line: 2248, column: 51, scope: !8782, inlinedAt: !8818)
!9147 = !DILocation(line: 2248, column: 31, scope: !8782, inlinedAt: !8818)
!9148 = !DILocation(line: 2248, column: 38, scope: !8782, inlinedAt: !8818)
!9149 = !DILocation(line: 2248, column: 65, scope: !8782, inlinedAt: !8818)
!9150 = !DILocation(line: 2249, column: 45, scope: !8782, inlinedAt: !8818)
!9151 = !DILocation(line: 2249, column: 50, scope: !8782, inlinedAt: !8818)
!9152 = !DILocation(line: 2249, column: 30, scope: !8782, inlinedAt: !8818)
!9153 = !DILocation(line: 2249, column: 37, scope: !8782, inlinedAt: !8818)
!9154 = !DILocation(line: 2249, column: 64, scope: !8782, inlinedAt: !8818)
!9155 = !DILocation(line: 2249, column: 68, scope: !8782, inlinedAt: !8818)
!9156 = !DILocation(line: 2253, column: 5, scope: !8782, inlinedAt: !8818)
!9157 = !DILocation(line: 2254, column: 9, scope: !9158, inlinedAt: !8818)
!9158 = distinct !DILexicalBlock(scope: !8782, file: !47, line: 2254, column: 9)
!9159 = !DILocation(line: 2254, column: 17, scope: !9158, inlinedAt: !8818)
!9160 = !DILocation(line: 2254, column: 20, scope: !9161, inlinedAt: !8818)
!9161 = !DILexicalBlockFile(scope: !9158, file: !47, discriminator: 1)
!9162 = !DILocation(line: 2254, column: 29, scope: !9161, inlinedAt: !8818)
!9163 = !DILocation(line: 2254, column: 9, scope: !9161, inlinedAt: !8818)
!9164 = !DILocation(line: 2255, column: 17, scope: !9165, inlinedAt: !8818)
!9165 = distinct !DILexicalBlock(scope: !9158, file: !47, line: 2254, column: 36)
!9166 = !DILocation(line: 2255, column: 22, scope: !9165, inlinedAt: !8818)
!9167 = !DILocation(line: 2255, column: 9, scope: !9165, inlinedAt: !8818)
!9168 = !DILocation(line: 2258, column: 18, scope: !9169, inlinedAt: !8818)
!9169 = distinct !DILexicalBlock(scope: !9170, file: !47, line: 2258, column: 17)
!9170 = distinct !DILexicalBlock(scope: !9165, file: !47, line: 2255, column: 34)
!9171 = !DILocation(line: 2258, column: 17, scope: !9169, inlinedAt: !8818)
!9172 = !DILocation(line: 2258, column: 17, scope: !9170, inlinedAt: !8818)
!9173 = !DILocation(line: 2259, column: 43, scope: !9174, inlinedAt: !8818)
!9174 = distinct !DILexicalBlock(scope: !9169, file: !47, line: 2258, column: 30)
!9175 = !DILocation(line: 2259, column: 52, scope: !9174, inlinedAt: !8818)
!9176 = !DILocation(line: 2259, column: 23, scope: !9174, inlinedAt: !8818)
!9177 = !DILocation(line: 2259, column: 21, scope: !9174, inlinedAt: !8818)
!9178 = !DILocation(line: 2260, column: 21, scope: !9179, inlinedAt: !8818)
!9179 = distinct !DILexicalBlock(scope: !9174, file: !47, line: 2260, column: 21)
!9180 = !DILocation(line: 2260, column: 25, scope: !9179, inlinedAt: !8818)
!9181 = !DILocation(line: 2260, column: 21, scope: !9174, inlinedAt: !8818)
!9182 = !DILocation(line: 2261, column: 25, scope: !9183, inlinedAt: !8818)
!9183 = distinct !DILexicalBlock(scope: !9179, file: !47, line: 2260, column: 31)
!9184 = !DILocation(line: 2262, column: 17, scope: !9183, inlinedAt: !8818)
!9185 = !DILocation(line: 2262, column: 28, scope: !9186, inlinedAt: !8818)
!9186 = !DILexicalBlockFile(scope: !9187, file: !47, discriminator: 1)
!9187 = distinct !DILexicalBlock(scope: !9179, file: !47, line: 2262, column: 28)
!9188 = !DILocation(line: 2262, column: 32, scope: !9186, inlinedAt: !8818)
!9189 = !DILocation(line: 2262, column: 37, scope: !9186, inlinedAt: !8818)
!9190 = !DILocation(line: 2262, column: 40, scope: !9191, inlinedAt: !8818)
!9191 = !DILexicalBlockFile(scope: !9187, file: !47, discriminator: 2)
!9192 = !DILocation(line: 2262, column: 44, scope: !9191, inlinedAt: !8818)
!9193 = !DILocation(line: 2262, column: 28, scope: !9191, inlinedAt: !8818)
!9194 = !DILocation(line: 2263, column: 25, scope: !9195, inlinedAt: !8818)
!9195 = distinct !DILexicalBlock(scope: !9187, file: !47, line: 2262, column: 121)
!9196 = !DILocation(line: 2264, column: 22, scope: !9195, inlinedAt: !8818)
!9197 = !DILocation(line: 2264, column: 33, scope: !9195, inlinedAt: !8818)
!9198 = !DILocation(line: 2265, column: 17, scope: !9195, inlinedAt: !8818)
!9199 = !DILocation(line: 2266, column: 13, scope: !9174, inlinedAt: !8818)
!9200 = !DILocation(line: 2267, column: 17, scope: !9201, inlinedAt: !8818)
!9201 = distinct !DILexicalBlock(scope: !9170, file: !47, line: 2267, column: 17)
!9202 = !DILocation(line: 2267, column: 21, scope: !9201, inlinedAt: !8818)
!9203 = !DILocation(line: 2267, column: 17, scope: !9170, inlinedAt: !8818)
!9204 = !DILocation(line: 2268, column: 45, scope: !9205, inlinedAt: !8818)
!9205 = distinct !DILexicalBlock(scope: !9201, file: !47, line: 2267, column: 27)
!9206 = !DILocation(line: 2268, column: 54, scope: !9205, inlinedAt: !8818)
!9207 = !DILocation(line: 2268, column: 23, scope: !9205, inlinedAt: !8818)
!9208 = !DILocation(line: 2268, column: 21, scope: !9205, inlinedAt: !8818)
!9209 = !DILocation(line: 2269, column: 21, scope: !9210, inlinedAt: !8818)
!9210 = distinct !DILexicalBlock(scope: !9205, file: !47, line: 2269, column: 21)
!9211 = !DILocation(line: 2269, column: 25, scope: !9210, inlinedAt: !8818)
!9212 = !DILocation(line: 2269, column: 21, scope: !9205, inlinedAt: !8818)
!9213 = !DILocation(line: 2270, column: 31, scope: !9214, inlinedAt: !8818)
!9214 = distinct !DILexicalBlock(scope: !9210, file: !47, line: 2269, column: 31)
!9215 = !DILocation(line: 2271, column: 17, scope: !9214, inlinedAt: !8818)
!9216 = !DILocation(line: 2271, column: 28, scope: !9217, inlinedAt: !8818)
!9217 = !DILexicalBlockFile(scope: !9218, file: !47, discriminator: 1)
!9218 = distinct !DILexicalBlock(scope: !9210, file: !47, line: 2271, column: 28)
!9219 = !DILocation(line: 2271, column: 32, scope: !9217, inlinedAt: !8818)
!9220 = !DILocation(line: 2271, column: 37, scope: !9217, inlinedAt: !8818)
!9221 = !DILocation(line: 2271, column: 40, scope: !9222, inlinedAt: !8818)
!9222 = !DILexicalBlockFile(scope: !9218, file: !47, discriminator: 2)
!9223 = !DILocation(line: 2271, column: 44, scope: !9222, inlinedAt: !8818)
!9224 = !DILocation(line: 2271, column: 28, scope: !9222, inlinedAt: !8818)
!9225 = !DILocation(line: 2272, column: 25, scope: !9226, inlinedAt: !8818)
!9226 = distinct !DILexicalBlock(scope: !9218, file: !47, line: 2271, column: 121)
!9227 = !DILocation(line: 2273, column: 17, scope: !9226, inlinedAt: !8818)
!9228 = !DILocation(line: 2274, column: 13, scope: !9205, inlinedAt: !8818)
!9229 = !DILocation(line: 2275, column: 13, scope: !9170, inlinedAt: !8818)
!9230 = !DILocation(line: 2278, column: 18, scope: !9231, inlinedAt: !8818)
!9231 = distinct !DILexicalBlock(scope: !9170, file: !47, line: 2278, column: 17)
!9232 = !DILocation(line: 2278, column: 17, scope: !9231, inlinedAt: !8818)
!9233 = !DILocation(line: 2278, column: 17, scope: !9170, inlinedAt: !8818)
!9234 = !DILocation(line: 2279, column: 48, scope: !9231, inlinedAt: !8818)
!9235 = !DILocation(line: 2279, column: 75, scope: !9231, inlinedAt: !8818)
!9236 = !DILocation(line: 2279, column: 23, scope: !9231, inlinedAt: !8818)
!9237 = !DILocation(line: 2279, column: 21, scope: !9231, inlinedAt: !8818)
!9238 = !DILocation(line: 2279, column: 17, scope: !9231, inlinedAt: !8818)
!9239 = !DILocation(line: 2280, column: 14, scope: !9170, inlinedAt: !8818)
!9240 = !DILocation(line: 2280, column: 25, scope: !9170, inlinedAt: !8818)
!9241 = !DILocation(line: 2281, column: 13, scope: !9170, inlinedAt: !8818)
!9242 = !DILocation(line: 2283, column: 14, scope: !9170, inlinedAt: !8818)
!9243 = !DILocation(line: 2283, column: 25, scope: !9170, inlinedAt: !8818)
!9244 = !DILocation(line: 2284, column: 9, scope: !9170, inlinedAt: !8818)
!9245 = !DILocation(line: 2285, column: 5, scope: !9165, inlinedAt: !8818)
!9246 = !DILocation(line: 2286, column: 10, scope: !9247, inlinedAt: !8818)
!9247 = distinct !DILexicalBlock(scope: !9158, file: !47, line: 2285, column: 12)
!9248 = !DILocation(line: 2286, column: 21, scope: !9247, inlinedAt: !8818)
!9249 = !DILocation(line: 2289, column: 9, scope: !9250, inlinedAt: !8818)
!9250 = distinct !DILexicalBlock(scope: !8782, file: !47, line: 2289, column: 9)
!9251 = !DILocation(line: 2289, column: 13, scope: !9250, inlinedAt: !8818)
!9252 = !DILocation(line: 2289, column: 9, scope: !8782, inlinedAt: !8818)
!9253 = !DILocation(line: 2290, column: 16, scope: !9250, inlinedAt: !8818)
!9254 = !DILocation(line: 2290, column: 9, scope: !9250, inlinedAt: !8818)
!9255 = !DILocation(line: 2291, column: 9, scope: !8815, inlinedAt: !8818)
!9256 = !DILocation(line: 2291, column: 9, scope: !8782, inlinedAt: !8818)
!9257 = !DILocation(line: 2292, column: 23, scope: !8814, inlinedAt: !8818)
!9258 = !DILocation(line: 2292, column: 28, scope: !8814, inlinedAt: !8818)
!9259 = !DILocation(line: 2292, column: 39, scope: !8814, inlinedAt: !8818)
!9260 = !DILocation(line: 2293, column: 27, scope: !8814, inlinedAt: !8818)
!9261 = !DILocation(line: 2293, column: 32, scope: !8814, inlinedAt: !8818)
!9262 = !DILocation(line: 2293, column: 9, scope: !8814, inlinedAt: !8818)
!9263 = !DILocation(line: 2293, column: 45, scope: !8814, inlinedAt: !8818)
!9264 = !DILocation(line: 2294, column: 13, scope: !9265, inlinedAt: !8818)
!9265 = distinct !DILexicalBlock(scope: !8814, file: !47, line: 2294, column: 13)
!9266 = !DILocation(line: 2294, column: 13, scope: !8814, inlinedAt: !8818)
!9267 = !DILocation(line: 2295, column: 17, scope: !9268, inlinedAt: !8818)
!9268 = distinct !DILexicalBlock(scope: !9265, file: !47, line: 2295, column: 17)
!9269 = !DILocation(line: 2295, column: 17, scope: !9265, inlinedAt: !8818)
!9270 = !DILocation(line: 2296, column: 31, scope: !9268, inlinedAt: !8818)
!9271 = !DILocation(line: 2296, column: 55, scope: !9268, inlinedAt: !8818)
!9272 = !DILocation(line: 2296, column: 60, scope: !9268, inlinedAt: !8818)
!9273 = !DILocation(line: 2296, column: 40, scope: !9268, inlinedAt: !8818)
!9274 = !DILocation(line: 2296, column: 47, scope: !9268, inlinedAt: !8818)
!9275 = !DILocation(line: 2296, column: 74, scope: !9268, inlinedAt: !8818)
!9276 = !DILocation(line: 2296, column: 78, scope: !9268, inlinedAt: !8818)
!9277 = !DILocation(line: 2296, column: 17, scope: !9268, inlinedAt: !8818)
!9278 = !DILocation(line: 2298, column: 28, scope: !9268, inlinedAt: !8818)
!9279 = !DILocation(line: 2298, column: 31, scope: !9268, inlinedAt: !8818)
!9280 = !DILocation(line: 2298, column: 53, scope: !9268, inlinedAt: !8818)
!9281 = !DILocation(line: 2298, column: 58, scope: !9268, inlinedAt: !8818)
!9282 = !DILocation(line: 2298, column: 38, scope: !9268, inlinedAt: !8818)
!9283 = !DILocation(line: 2298, column: 45, scope: !9268, inlinedAt: !8818)
!9284 = !DILocation(line: 2298, column: 72, scope: !9268, inlinedAt: !8818)
!9285 = !DILocation(line: 2298, column: 76, scope: !9268, inlinedAt: !8818)
!9286 = !DILocation(line: 2298, column: 17, scope: !9268, inlinedAt: !8818)
!9287 = !DILocation(line: 2295, column: 17, scope: !9288, inlinedAt: !8818)
!9288 = !DILexicalBlockFile(scope: !9268, file: !47, discriminator: 1)
!9289 = !DILocation(line: 2299, column: 13, scope: !9290, inlinedAt: !8818)
!9290 = distinct !DILexicalBlock(scope: !8814, file: !47, line: 2299, column: 13)
!9291 = !DILocation(line: 2299, column: 13, scope: !8814, inlinedAt: !8818)
!9292 = !DILocation(line: 2300, column: 13, scope: !9290, inlinedAt: !8818)
!9293 = !DILocation(line: 2301, column: 5, scope: !8814, inlinedAt: !8818)
!9294 = !DILocation(line: 2302, column: 12, scope: !8782, inlinedAt: !8818)
!9295 = !DILocation(line: 2302, column: 22, scope: !8782, inlinedAt: !8818)
!9296 = !DILocation(line: 2302, column: 26, scope: !9297, inlinedAt: !8818)
!9297 = !DILexicalBlockFile(scope: !8782, file: !47, discriminator: 1)
!9298 = !DILocation(line: 2302, column: 25, scope: !9297, inlinedAt: !8818)
!9299 = !DILocation(line: 2302, column: 22, scope: !9297, inlinedAt: !8818)
!9300 = !DILocation(line: 2302, column: 22, scope: !9301, inlinedAt: !8818)
!9301 = !DILexicalBlockFile(scope: !8782, file: !47, discriminator: 2)
!9302 = !DILocation(line: 2302, column: 5, scope: !9301, inlinedAt: !8818)
!9303 = !DILocation(line: 2303, column: 1, scope: !8782, inlinedAt: !8818)
!9304 = !DILocation(line: 2411, column: 74, scope: !8819)
!9305 = !DILocation(line: 2411, column: 17, scope: !8819)
!9306 = !DILocation(line: 2411, column: 17, scope: !9307)
!9307 = !DILexicalBlockFile(scope: !8820, file: !47, discriminator: 2)
!9308 = distinct !{!9308, !9138}
!9309 = !DILocation(line: 2412, column: 13, scope: !8820)
!9310 = !DILocation(line: 2413, column: 9, scope: !8822)
!9311 = !DILocation(line: 2414, column: 9, scope: !8824)
!9312 = !DILocation(line: 2373, column: 5, scope: !8876)
!9313 = distinct !{!9313, !8947}
!9314 = !DILocation(line: 2416, column: 5, scope: !8778)
!9315 = !DILocation(line: 2417, column: 9, scope: !8778)
!9316 = !DILocation(line: 2417, column: 14, scope: !8778)
!9317 = !DILocation(line: 2418, column: 9, scope: !8778)
!9318 = !DILocation(line: 2418, column: 14, scope: !8778)
!9319 = !DILocation(line: 2420, column: 12, scope: !8791)
!9320 = !DILocation(line: 2420, column: 10, scope: !8791)
!9321 = !DILocation(line: 2420, column: 17, scope: !9322)
!9322 = !DILexicalBlockFile(scope: !8790, file: !47, discriminator: 1)
!9323 = !DILocation(line: 2420, column: 21, scope: !9322)
!9324 = !DILocation(line: 2420, column: 30, scope: !9322)
!9325 = !DILocation(line: 2420, column: 19, scope: !9322)
!9326 = !DILocation(line: 2420, column: 5, scope: !9322)
!9327 = !DILocation(line: 2421, column: 28, scope: !8789)
!9328 = !DILocation(line: 2421, column: 13, scope: !8789)
!9329 = !DILocation(line: 2421, column: 26, scope: !8789)
!9330 = !DILocation(line: 2422, column: 13, scope: !8788)
!9331 = !DILocation(line: 2422, column: 13, scope: !8789)
!9332 = !DILocation(line: 2423, column: 13, scope: !8788)
!9333 = !DILocation(line: 2423, column: 34, scope: !8787)
!9334 = !DILocation(line: 2423, column: 37, scope: !8787)
!9335 = !DILocation(line: 2423, column: 44, scope: !8787)
!9336 = !DILocation(line: 2423, column: 58, scope: !8787)
!9337 = !DILocation(line: 2423, column: 20, scope: !8787)
!9338 = !DILocation(line: 2247, column: 32, scope: !8782, inlinedAt: !8786)
!9339 = !DILocation(line: 2247, column: 39, scope: !8782, inlinedAt: !8786)
!9340 = !DILocation(line: 2248, column: 46, scope: !8782, inlinedAt: !8786)
!9341 = !DILocation(line: 2248, column: 51, scope: !8782, inlinedAt: !8786)
!9342 = !DILocation(line: 2248, column: 31, scope: !8782, inlinedAt: !8786)
!9343 = !DILocation(line: 2248, column: 38, scope: !8782, inlinedAt: !8786)
!9344 = !DILocation(line: 2248, column: 65, scope: !8782, inlinedAt: !8786)
!9345 = !DILocation(line: 2249, column: 45, scope: !8782, inlinedAt: !8786)
!9346 = !DILocation(line: 2249, column: 50, scope: !8782, inlinedAt: !8786)
!9347 = !DILocation(line: 2249, column: 30, scope: !8782, inlinedAt: !8786)
!9348 = !DILocation(line: 2249, column: 37, scope: !8782, inlinedAt: !8786)
!9349 = !DILocation(line: 2249, column: 64, scope: !8782, inlinedAt: !8786)
!9350 = !DILocation(line: 2249, column: 68, scope: !8782, inlinedAt: !8786)
!9351 = !DILocation(line: 2253, column: 5, scope: !8782, inlinedAt: !8786)
!9352 = !DILocation(line: 2254, column: 9, scope: !9158, inlinedAt: !8786)
!9353 = !DILocation(line: 2254, column: 17, scope: !9158, inlinedAt: !8786)
!9354 = !DILocation(line: 2254, column: 20, scope: !9161, inlinedAt: !8786)
!9355 = !DILocation(line: 2254, column: 29, scope: !9161, inlinedAt: !8786)
!9356 = !DILocation(line: 2254, column: 9, scope: !9161, inlinedAt: !8786)
!9357 = !DILocation(line: 2255, column: 17, scope: !9165, inlinedAt: !8786)
!9358 = !DILocation(line: 2255, column: 22, scope: !9165, inlinedAt: !8786)
!9359 = !DILocation(line: 2255, column: 9, scope: !9165, inlinedAt: !8786)
!9360 = !DILocation(line: 2258, column: 18, scope: !9169, inlinedAt: !8786)
!9361 = !DILocation(line: 2258, column: 17, scope: !9169, inlinedAt: !8786)
!9362 = !DILocation(line: 2258, column: 17, scope: !9170, inlinedAt: !8786)
!9363 = !DILocation(line: 2259, column: 43, scope: !9174, inlinedAt: !8786)
!9364 = !DILocation(line: 2259, column: 52, scope: !9174, inlinedAt: !8786)
!9365 = !DILocation(line: 2259, column: 23, scope: !9174, inlinedAt: !8786)
!9366 = !DILocation(line: 2259, column: 21, scope: !9174, inlinedAt: !8786)
!9367 = !DILocation(line: 2260, column: 21, scope: !9179, inlinedAt: !8786)
!9368 = !DILocation(line: 2260, column: 25, scope: !9179, inlinedAt: !8786)
!9369 = !DILocation(line: 2260, column: 21, scope: !9174, inlinedAt: !8786)
!9370 = !DILocation(line: 2261, column: 25, scope: !9183, inlinedAt: !8786)
!9371 = !DILocation(line: 2262, column: 17, scope: !9183, inlinedAt: !8786)
!9372 = !DILocation(line: 2262, column: 28, scope: !9186, inlinedAt: !8786)
!9373 = !DILocation(line: 2262, column: 32, scope: !9186, inlinedAt: !8786)
!9374 = !DILocation(line: 2262, column: 37, scope: !9186, inlinedAt: !8786)
!9375 = !DILocation(line: 2262, column: 40, scope: !9191, inlinedAt: !8786)
!9376 = !DILocation(line: 2262, column: 44, scope: !9191, inlinedAt: !8786)
!9377 = !DILocation(line: 2262, column: 28, scope: !9191, inlinedAt: !8786)
!9378 = !DILocation(line: 2263, column: 25, scope: !9195, inlinedAt: !8786)
!9379 = !DILocation(line: 2264, column: 22, scope: !9195, inlinedAt: !8786)
!9380 = !DILocation(line: 2264, column: 33, scope: !9195, inlinedAt: !8786)
!9381 = !DILocation(line: 2265, column: 17, scope: !9195, inlinedAt: !8786)
!9382 = !DILocation(line: 2266, column: 13, scope: !9174, inlinedAt: !8786)
!9383 = !DILocation(line: 2267, column: 17, scope: !9201, inlinedAt: !8786)
!9384 = !DILocation(line: 2267, column: 21, scope: !9201, inlinedAt: !8786)
!9385 = !DILocation(line: 2267, column: 17, scope: !9170, inlinedAt: !8786)
!9386 = !DILocation(line: 2268, column: 45, scope: !9205, inlinedAt: !8786)
!9387 = !DILocation(line: 2268, column: 54, scope: !9205, inlinedAt: !8786)
!9388 = !DILocation(line: 2268, column: 23, scope: !9205, inlinedAt: !8786)
!9389 = !DILocation(line: 2268, column: 21, scope: !9205, inlinedAt: !8786)
!9390 = !DILocation(line: 2269, column: 21, scope: !9210, inlinedAt: !8786)
!9391 = !DILocation(line: 2269, column: 25, scope: !9210, inlinedAt: !8786)
!9392 = !DILocation(line: 2269, column: 21, scope: !9205, inlinedAt: !8786)
!9393 = !DILocation(line: 2270, column: 31, scope: !9214, inlinedAt: !8786)
!9394 = !DILocation(line: 2271, column: 17, scope: !9214, inlinedAt: !8786)
!9395 = !DILocation(line: 2271, column: 28, scope: !9217, inlinedAt: !8786)
!9396 = !DILocation(line: 2271, column: 32, scope: !9217, inlinedAt: !8786)
!9397 = !DILocation(line: 2271, column: 37, scope: !9217, inlinedAt: !8786)
!9398 = !DILocation(line: 2271, column: 40, scope: !9222, inlinedAt: !8786)
!9399 = !DILocation(line: 2271, column: 44, scope: !9222, inlinedAt: !8786)
!9400 = !DILocation(line: 2271, column: 28, scope: !9222, inlinedAt: !8786)
!9401 = !DILocation(line: 2272, column: 25, scope: !9226, inlinedAt: !8786)
!9402 = !DILocation(line: 2273, column: 17, scope: !9226, inlinedAt: !8786)
!9403 = !DILocation(line: 2274, column: 13, scope: !9205, inlinedAt: !8786)
!9404 = !DILocation(line: 2275, column: 13, scope: !9170, inlinedAt: !8786)
!9405 = !DILocation(line: 2278, column: 18, scope: !9231, inlinedAt: !8786)
!9406 = !DILocation(line: 2278, column: 17, scope: !9231, inlinedAt: !8786)
!9407 = !DILocation(line: 2278, column: 17, scope: !9170, inlinedAt: !8786)
!9408 = !DILocation(line: 2279, column: 48, scope: !9231, inlinedAt: !8786)
!9409 = !DILocation(line: 2279, column: 75, scope: !9231, inlinedAt: !8786)
!9410 = !DILocation(line: 2279, column: 23, scope: !9231, inlinedAt: !8786)
!9411 = !DILocation(line: 2279, column: 21, scope: !9231, inlinedAt: !8786)
!9412 = !DILocation(line: 2279, column: 17, scope: !9231, inlinedAt: !8786)
!9413 = !DILocation(line: 2280, column: 14, scope: !9170, inlinedAt: !8786)
!9414 = !DILocation(line: 2280, column: 25, scope: !9170, inlinedAt: !8786)
!9415 = !DILocation(line: 2281, column: 13, scope: !9170, inlinedAt: !8786)
!9416 = !DILocation(line: 2283, column: 14, scope: !9170, inlinedAt: !8786)
!9417 = !DILocation(line: 2283, column: 25, scope: !9170, inlinedAt: !8786)
!9418 = !DILocation(line: 2284, column: 9, scope: !9170, inlinedAt: !8786)
!9419 = !DILocation(line: 2285, column: 5, scope: !9165, inlinedAt: !8786)
!9420 = !DILocation(line: 2286, column: 10, scope: !9247, inlinedAt: !8786)
!9421 = !DILocation(line: 2286, column: 21, scope: !9247, inlinedAt: !8786)
!9422 = !DILocation(line: 2289, column: 9, scope: !9250, inlinedAt: !8786)
!9423 = !DILocation(line: 2289, column: 13, scope: !9250, inlinedAt: !8786)
!9424 = !DILocation(line: 2289, column: 9, scope: !8782, inlinedAt: !8786)
!9425 = !DILocation(line: 2290, column: 16, scope: !9250, inlinedAt: !8786)
!9426 = !DILocation(line: 2290, column: 9, scope: !9250, inlinedAt: !8786)
!9427 = !DILocation(line: 2291, column: 9, scope: !8815, inlinedAt: !8786)
!9428 = !DILocation(line: 2291, column: 9, scope: !8782, inlinedAt: !8786)
!9429 = !DILocation(line: 2292, column: 23, scope: !8814, inlinedAt: !8786)
!9430 = !DILocation(line: 2292, column: 28, scope: !8814, inlinedAt: !8786)
!9431 = !DILocation(line: 2292, column: 39, scope: !8814, inlinedAt: !8786)
!9432 = !DILocation(line: 2293, column: 27, scope: !8814, inlinedAt: !8786)
!9433 = !DILocation(line: 2293, column: 32, scope: !8814, inlinedAt: !8786)
!9434 = !DILocation(line: 2293, column: 9, scope: !8814, inlinedAt: !8786)
!9435 = !DILocation(line: 2293, column: 45, scope: !8814, inlinedAt: !8786)
!9436 = !DILocation(line: 2294, column: 13, scope: !9265, inlinedAt: !8786)
!9437 = !DILocation(line: 2294, column: 13, scope: !8814, inlinedAt: !8786)
!9438 = !DILocation(line: 2295, column: 17, scope: !9268, inlinedAt: !8786)
!9439 = !DILocation(line: 2295, column: 17, scope: !9265, inlinedAt: !8786)
!9440 = !DILocation(line: 2296, column: 31, scope: !9268, inlinedAt: !8786)
!9441 = !DILocation(line: 2296, column: 55, scope: !9268, inlinedAt: !8786)
!9442 = !DILocation(line: 2296, column: 60, scope: !9268, inlinedAt: !8786)
!9443 = !DILocation(line: 2296, column: 40, scope: !9268, inlinedAt: !8786)
!9444 = !DILocation(line: 2296, column: 47, scope: !9268, inlinedAt: !8786)
!9445 = !DILocation(line: 2296, column: 74, scope: !9268, inlinedAt: !8786)
!9446 = !DILocation(line: 2296, column: 78, scope: !9268, inlinedAt: !8786)
!9447 = !DILocation(line: 2296, column: 17, scope: !9268, inlinedAt: !8786)
!9448 = !DILocation(line: 2298, column: 28, scope: !9268, inlinedAt: !8786)
!9449 = !DILocation(line: 2298, column: 31, scope: !9268, inlinedAt: !8786)
!9450 = !DILocation(line: 2298, column: 53, scope: !9268, inlinedAt: !8786)
!9451 = !DILocation(line: 2298, column: 58, scope: !9268, inlinedAt: !8786)
!9452 = !DILocation(line: 2298, column: 38, scope: !9268, inlinedAt: !8786)
!9453 = !DILocation(line: 2298, column: 45, scope: !9268, inlinedAt: !8786)
!9454 = !DILocation(line: 2298, column: 72, scope: !9268, inlinedAt: !8786)
!9455 = !DILocation(line: 2298, column: 76, scope: !9268, inlinedAt: !8786)
!9456 = !DILocation(line: 2298, column: 17, scope: !9268, inlinedAt: !8786)
!9457 = !DILocation(line: 2295, column: 17, scope: !9288, inlinedAt: !8786)
!9458 = !DILocation(line: 2299, column: 13, scope: !9290, inlinedAt: !8786)
!9459 = !DILocation(line: 2299, column: 13, scope: !8814, inlinedAt: !8786)
!9460 = !DILocation(line: 2300, column: 13, scope: !9290, inlinedAt: !8786)
!9461 = !DILocation(line: 2301, column: 5, scope: !8814, inlinedAt: !8786)
!9462 = !DILocation(line: 2302, column: 12, scope: !8782, inlinedAt: !8786)
!9463 = !DILocation(line: 2302, column: 22, scope: !8782, inlinedAt: !8786)
!9464 = !DILocation(line: 2302, column: 26, scope: !9297, inlinedAt: !8786)
!9465 = !DILocation(line: 2302, column: 25, scope: !9297, inlinedAt: !8786)
!9466 = !DILocation(line: 2302, column: 22, scope: !9297, inlinedAt: !8786)
!9467 = !DILocation(line: 2302, column: 22, scope: !9301, inlinedAt: !8786)
!9468 = !DILocation(line: 2302, column: 5, scope: !9301, inlinedAt: !8786)
!9469 = !DILocation(line: 2303, column: 1, scope: !8782, inlinedAt: !8786)
!9470 = !DILocation(line: 2423, column: 68, scope: !8787)
!9471 = !DILocation(line: 2423, column: 13, scope: !8787)
!9472 = !DILocation(line: 2423, column: 13, scope: !9473)
!9473 = !DILexicalBlockFile(scope: !8788, file: !47, discriminator: 2)
!9474 = distinct !{!9474, !9332}
!9475 = !DILocation(line: 2423, column: 13, scope: !9476)
!9476 = !DILexicalBlockFile(scope: !8788, file: !47, discriminator: 3)
!9477 = !DILocation(line: 2424, column: 5, scope: !8789)
!9478 = !DILocation(line: 2420, column: 43, scope: !9479)
!9479 = !DILexicalBlockFile(scope: !8790, file: !47, discriminator: 2)
!9480 = !DILocation(line: 2420, column: 5, scope: !9479)
!9481 = distinct !{!9481, !9482}
!9482 = !DILocation(line: 2420, column: 5, scope: !8778)
!9483 = !DILocation(line: 2424, column: 5, scope: !9484)
!9484 = !DILexicalBlockFile(scope: !8791, file: !47, discriminator: 1)
!9485 = !DILocation(line: 2427, column: 5, scope: !8778)
!9486 = !DILocation(line: 2428, column: 9, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !8778, file: !47, line: 2428, column: 9)
!9488 = !DILocation(line: 2428, column: 13, scope: !9487)
!9489 = !DILocation(line: 2428, column: 9, scope: !8778)
!9490 = !DILocation(line: 2429, column: 9, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9487, file: !47, line: 2428, column: 18)
!9492 = !DILocation(line: 2430, column: 27, scope: !9491)
!9493 = !DILocation(line: 2430, column: 9, scope: !9491)
!9494 = !DILocation(line: 2431, column: 5, scope: !9491)
!9495 = !DILocation(line: 2432, column: 12, scope: !8778)
!9496 = !DILocation(line: 2432, column: 5, scope: !8778)
!9497 = distinct !DISubprogram(name: "av_make_error_string", scope: !9498, file: !9498, line: 109, type: !9499, isLocal: true, isDefinition: true, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!9498 = !DIFile(filename: "./libavutil/error.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!9499 = !DISubroutineType(types: !9500)
!9500 = !{!1014, !1014, !1212, !1041}
!9501 = !DILocalVariable(name: "errbuf", arg: 1, scope: !9497, file: !9498, line: 109, type: !1014)
!9502 = !DILocation(line: 109, column: 48, scope: !9497)
!9503 = !DILocalVariable(name: "errbuf_size", arg: 2, scope: !9497, file: !9498, line: 109, type: !1212)
!9504 = !DILocation(line: 109, column: 63, scope: !9497)
!9505 = !DILocalVariable(name: "errnum", arg: 3, scope: !9497, file: !9498, line: 109, type: !1041)
!9506 = !DILocation(line: 109, column: 80, scope: !9497)
!9507 = !DILocation(line: 111, column: 17, scope: !9497)
!9508 = !DILocation(line: 111, column: 25, scope: !9497)
!9509 = !DILocation(line: 111, column: 33, scope: !9497)
!9510 = !DILocation(line: 111, column: 5, scope: !9497)
!9511 = !DILocation(line: 112, column: 12, scope: !9497)
!9512 = !DILocation(line: 112, column: 5, scope: !9497)
!9513 = distinct !DISubprogram(name: "show_packet", scope: !47, file: !47, line: 2030, type: !9514, isLocal: true, isDefinition: true, scopeLine: 2031, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!9514 = !DISubroutineType(types: !9515)
!9515 = !{null, !2418, !8036, !1318, !1041}
!9516 = !DILocalVariable(name: "w", arg: 1, scope: !9513, file: !47, line: 2030, type: !2418)
!9517 = !DILocation(line: 2030, column: 40, scope: !9513)
!9518 = !DILocalVariable(name: "ifile", arg: 2, scope: !9513, file: !47, line: 2030, type: !8036)
!9519 = !DILocation(line: 2030, column: 54, scope: !9513)
!9520 = !DILocalVariable(name: "pkt", arg: 3, scope: !9513, file: !47, line: 2030, type: !1318)
!9521 = !DILocation(line: 2030, column: 71, scope: !9513)
!9522 = !DILocalVariable(name: "packet_idx", arg: 4, scope: !9513, file: !47, line: 2030, type: !1041)
!9523 = !DILocation(line: 2030, column: 80, scope: !9513)
!9524 = !DILocalVariable(name: "val_str", scope: !9513, file: !47, line: 2032, type: !4620)
!9525 = !DILocation(line: 2032, column: 10, scope: !9513)
!9526 = !DILocalVariable(name: "st", scope: !9513, file: !47, line: 2033, type: !1577)
!9527 = !DILocation(line: 2033, column: 15, scope: !9513)
!9528 = !DILocation(line: 2033, column: 35, scope: !9513)
!9529 = !DILocation(line: 2033, column: 40, scope: !9513)
!9530 = !DILocation(line: 2033, column: 20, scope: !9513)
!9531 = !DILocation(line: 2033, column: 27, scope: !9513)
!9532 = !DILocation(line: 2033, column: 54, scope: !9513)
!9533 = !DILocalVariable(name: "pbuf", scope: !9513, file: !47, line: 2034, type: !2452)
!9534 = !DILocation(line: 2034, column: 14, scope: !9513)
!9535 = !DILocalVariable(name: "s", scope: !9513, file: !47, line: 2035, type: !1027)
!9536 = !DILocation(line: 2035, column: 17, scope: !9513)
!9537 = !DILocation(line: 2037, column: 5, scope: !9513)
!9538 = !DILocation(line: 2039, column: 33, scope: !9513)
!9539 = !DILocation(line: 2039, column: 5, scope: !9513)
!9540 = !DILocation(line: 2041, column: 34, scope: !9513)
!9541 = !DILocation(line: 2041, column: 38, scope: !9513)
!9542 = !DILocation(line: 2041, column: 48, scope: !9513)
!9543 = !DILocation(line: 2041, column: 9, scope: !9513)
!9544 = !DILocation(line: 2041, column: 7, scope: !9513)
!9545 = !DILocation(line: 2042, column: 9, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9513, file: !47, line: 2042, column: 9)
!9547 = !DILocation(line: 2042, column: 9, scope: !9513)
!9548 = !DILocation(line: 2042, column: 32, scope: !9549)
!9549 = !DILexicalBlockFile(scope: !9546, file: !47, discriminator: 1)
!9550 = !DILocation(line: 2042, column: 49, scope: !9549)
!9551 = !DILocation(line: 2042, column: 12, scope: !9549)
!9552 = !DILocation(line: 2043, column: 30, scope: !9546)
!9553 = !DILocation(line: 2043, column: 10, scope: !9546)
!9554 = !DILocation(line: 2044, column: 26, scope: !9513)
!9555 = !DILocation(line: 2044, column: 45, scope: !9513)
!9556 = !DILocation(line: 2044, column: 50, scope: !9513)
!9557 = !DILocation(line: 2044, column: 5, scope: !9513)
!9558 = !DILocation(line: 2045, column: 21, scope: !9513)
!9559 = !DILocation(line: 2045, column: 31, scope: !9513)
!9560 = !DILocation(line: 2045, column: 36, scope: !9513)
!9561 = !DILocation(line: 2045, column: 5, scope: !9513)
!9562 = !DILocation(line: 2046, column: 23, scope: !9513)
!9563 = !DILocation(line: 2046, column: 38, scope: !9513)
!9564 = !DILocation(line: 2046, column: 43, scope: !9513)
!9565 = !DILocation(line: 2046, column: 49, scope: !9513)
!9566 = !DILocation(line: 2046, column: 53, scope: !9513)
!9567 = !DILocation(line: 2046, column: 5, scope: !9513)
!9568 = !DILocation(line: 2047, column: 21, scope: !9513)
!9569 = !DILocation(line: 2047, column: 31, scope: !9513)
!9570 = !DILocation(line: 2047, column: 36, scope: !9513)
!9571 = !DILocation(line: 2047, column: 5, scope: !9513)
!9572 = !DILocation(line: 2048, column: 23, scope: !9513)
!9573 = !DILocation(line: 2048, column: 38, scope: !9513)
!9574 = !DILocation(line: 2048, column: 43, scope: !9513)
!9575 = !DILocation(line: 2048, column: 49, scope: !9513)
!9576 = !DILocation(line: 2048, column: 53, scope: !9513)
!9577 = !DILocation(line: 2048, column: 5, scope: !9513)
!9578 = !DILocation(line: 2049, column: 21, scope: !9513)
!9579 = !DILocation(line: 2049, column: 36, scope: !9513)
!9580 = !DILocation(line: 2049, column: 41, scope: !9513)
!9581 = !DILocation(line: 2049, column: 5, scope: !9513)
!9582 = !DILocation(line: 2050, column: 23, scope: !9513)
!9583 = !DILocation(line: 2050, column: 43, scope: !9513)
!9584 = !DILocation(line: 2050, column: 48, scope: !9513)
!9585 = !DILocation(line: 2050, column: 59, scope: !9513)
!9586 = !DILocation(line: 2050, column: 63, scope: !9513)
!9587 = !DILocation(line: 2050, column: 5, scope: !9513)
!9588 = !DILocation(line: 2051, column: 21, scope: !9513)
!9589 = !DILocation(line: 2051, column: 48, scope: !9513)
!9590 = !DILocation(line: 2051, column: 53, scope: !9513)
!9591 = !DILocation(line: 2051, column: 5, scope: !9513)
!9592 = !DILocation(line: 2052, column: 23, scope: !9513)
!9593 = !DILocation(line: 2052, column: 55, scope: !9513)
!9594 = !DILocation(line: 2052, column: 60, scope: !9513)
!9595 = !DILocation(line: 2052, column: 83, scope: !9513)
!9596 = !DILocation(line: 2052, column: 87, scope: !9513)
!9597 = !DILocation(line: 2052, column: 5, scope: !9513)
!9598 = !DILocation(line: 2053, column: 5, scope: !9513)
!9599 = distinct !{!9599, !9598}
!9600 = !DILocalVariable(name: "uv", scope: !9601, file: !47, line: 2053, type: !8654)
!9601 = distinct !DILexicalBlock(scope: !9513, file: !47, line: 2053, column: 8)
!9602 = !DILocation(line: 2053, column: 28, scope: !9601)
!9603 = !DILocation(line: 2053, column: 43, scope: !9604)
!9604 = !DILexicalBlockFile(scope: !9601, file: !47, discriminator: 1)
!9605 = !DILocation(line: 2053, column: 48, scope: !9604)
!9606 = !DILocation(line: 2053, column: 35, scope: !9604)
!9607 = !DILocation(line: 2053, column: 39, scope: !9604)
!9608 = !DILocation(line: 2053, column: 41, scope: !9604)
!9609 = !DILocation(line: 2053, column: 57, scope: !9604)
!9610 = !DILocation(line: 2053, column: 62, scope: !9604)
!9611 = !DILocation(line: 2053, column: 99, scope: !9604)
!9612 = !DILocation(line: 2053, column: 123, scope: !9604)
!9613 = !DILocation(line: 2053, column: 110, scope: !9604)
!9614 = !DILocation(line: 2053, column: 79, scope: !9615)
!9615 = !DILexicalBlockFile(scope: !9604, file: !47, discriminator: 2)
!9616 = !DILocation(line: 2053, column: 158, scope: !9604)
!9617 = !DILocation(line: 2054, column: 9, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9513, file: !47, line: 2054, column: 9)
!9619 = !DILocation(line: 2054, column: 14, scope: !9618)
!9620 = !DILocation(line: 2054, column: 18, scope: !9618)
!9621 = !DILocation(line: 2054, column: 9, scope: !9513)
!9622 = !DILocation(line: 2054, column: 25, scope: !9623)
!9623 = !DILexicalBlockFile(scope: !9618, file: !47, discriminator: 1)
!9624 = distinct !{!9624, !9625}
!9625 = !DILocation(line: 2054, column: 25, scope: !9618)
!9626 = !DILocation(line: 2054, column: 30, scope: !9627)
!9627 = !DILexicalBlockFile(scope: !9628, file: !47, discriminator: 2)
!9628 = distinct !DILexicalBlock(scope: !9618, file: !47, line: 2054, column: 28)
!9629 = !DILocation(line: 2054, column: 26, scope: !9627)
!9630 = !DILocation(line: 2054, column: 31, scope: !9627)
!9631 = !DILocation(line: 2054, column: 54, scope: !9632)
!9632 = !DILexicalBlockFile(scope: !9627, file: !47, discriminator: 4)
!9633 = !DILocation(line: 2054, column: 57, scope: !9627)
!9634 = !DILocation(line: 2054, column: 72, scope: !9627)
!9635 = !DILocation(line: 2054, column: 37, scope: !9636)
!9636 = !DILexicalBlockFile(scope: !9627, file: !47, discriminator: 5)
!9637 = !DILocation(line: 2054, column: 81, scope: !9627)
!9638 = !DILocation(line: 2054, column: 81, scope: !9639)
!9639 = !DILexicalBlockFile(scope: !9628, file: !47, discriminator: 3)
!9640 = !DILocation(line: 2055, column: 30, scope: !9618)
!9641 = !DILocation(line: 2055, column: 10, scope: !9618)
!9642 = !DILocation(line: 2056, column: 5, scope: !9513)
!9643 = distinct !{!9643, !9642}
!9644 = !DILocation(line: 2056, column: 10, scope: !9645)
!9645 = !DILexicalBlockFile(scope: !9646, file: !47, discriminator: 1)
!9646 = distinct !DILexicalBlock(scope: !9513, file: !47, line: 2056, column: 8)
!9647 = !DILocation(line: 2056, column: 60, scope: !9645)
!9648 = !DILocation(line: 2056, column: 65, scope: !9645)
!9649 = !DILocation(line: 2056, column: 71, scope: !9645)
!9650 = !DILocation(line: 2056, column: 93, scope: !9645)
!9651 = !DILocation(line: 2056, column: 98, scope: !9645)
!9652 = !DILocation(line: 2056, column: 104, scope: !9645)
!9653 = !DILocation(line: 2056, column: 34, scope: !9654)
!9654 = !DILexicalBlockFile(scope: !9645, file: !47, discriminator: 2)
!9655 = !DILocation(line: 2056, column: 147, scope: !9645)
!9656 = !DILocation(line: 2056, column: 164, scope: !9645)
!9657 = !DILocation(line: 2056, column: 127, scope: !9658)
!9658 = !DILexicalBlockFile(scope: !9645, file: !47, discriminator: 3)
!9659 = !DILocation(line: 2056, column: 173, scope: !9645)
!9660 = !DILocation(line: 2059, column: 9, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9513, file: !47, line: 2059, column: 9)
!9662 = !DILocation(line: 2059, column: 14, scope: !9661)
!9663 = !DILocation(line: 2059, column: 9, scope: !9513)
!9664 = !DILocalVariable(name: "size", scope: !9665, file: !47, line: 2060, type: !1041)
!9665 = distinct !DILexicalBlock(scope: !9661, file: !47, line: 2059, column: 31)
!9666 = !DILocation(line: 2060, column: 13, scope: !9665)
!9667 = !DILocalVariable(name: "side_metadata", scope: !9665, file: !47, line: 2061, type: !1139)
!9668 = !DILocation(line: 2061, column: 24, scope: !9665)
!9669 = !DILocation(line: 2063, column: 49, scope: !9665)
!9670 = !DILocation(line: 2063, column: 25, scope: !9665)
!9671 = !DILocation(line: 2063, column: 23, scope: !9665)
!9672 = !DILocation(line: 2064, column: 13, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9665, file: !47, line: 2064, column: 13)
!9674 = !DILocation(line: 2064, column: 27, scope: !9673)
!9675 = !DILocation(line: 2064, column: 30, scope: !9676)
!9676 = !DILexicalBlockFile(scope: !9673, file: !47, discriminator: 1)
!9677 = !DILocation(line: 2064, column: 35, scope: !9676)
!9678 = !DILocation(line: 2064, column: 38, scope: !9679)
!9679 = !DILexicalBlockFile(scope: !9673, file: !47, discriminator: 2)
!9680 = !DILocation(line: 2064, column: 13, scope: !9679)
!9681 = !DILocalVariable(name: "dict", scope: !9682, file: !47, line: 2065, type: !1423)
!9682 = distinct !DILexicalBlock(scope: !9673, file: !47, line: 2064, column: 59)
!9683 = !DILocation(line: 2065, column: 27, scope: !9682)
!9684 = !DILocation(line: 2066, column: 45, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9682, file: !47, line: 2066, column: 17)
!9686 = !DILocation(line: 2066, column: 60, scope: !9685)
!9687 = !DILocation(line: 2066, column: 17, scope: !9685)
!9688 = !DILocation(line: 2066, column: 73, scope: !9685)
!9689 = !DILocation(line: 2066, column: 17, scope: !9682)
!9690 = !DILocation(line: 2067, column: 27, scope: !9685)
!9691 = !DILocation(line: 2067, column: 30, scope: !9685)
!9692 = !DILocation(line: 2067, column: 17, scope: !9685)
!9693 = !DILocation(line: 2068, column: 13, scope: !9682)
!9694 = !DILocation(line: 2069, column: 9, scope: !9682)
!9695 = !DILocation(line: 2071, column: 29, scope: !9665)
!9696 = !DILocation(line: 2071, column: 32, scope: !9665)
!9697 = !DILocation(line: 2071, column: 36, scope: !9665)
!9698 = !DILocation(line: 2071, column: 46, scope: !9665)
!9699 = !DILocation(line: 2071, column: 51, scope: !9665)
!9700 = !DILocation(line: 2071, column: 62, scope: !9665)
!9701 = !DILocation(line: 2071, column: 67, scope: !9665)
!9702 = !DILocation(line: 2071, column: 9, scope: !9665)
!9703 = !DILocation(line: 2074, column: 5, scope: !9665)
!9704 = !DILocation(line: 2076, column: 9, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9513, file: !47, line: 2076, column: 9)
!9706 = !DILocation(line: 2076, column: 9, scope: !9513)
!9707 = !DILocation(line: 2077, column: 27, scope: !9705)
!9708 = !DILocation(line: 2077, column: 38, scope: !9705)
!9709 = !DILocation(line: 2077, column: 43, scope: !9705)
!9710 = !DILocation(line: 2077, column: 49, scope: !9705)
!9711 = !DILocation(line: 2077, column: 54, scope: !9705)
!9712 = !DILocation(line: 2077, column: 9, scope: !9705)
!9713 = !DILocation(line: 2078, column: 28, scope: !9513)
!9714 = !DILocation(line: 2078, column: 44, scope: !9513)
!9715 = !DILocation(line: 2078, column: 49, scope: !9513)
!9716 = !DILocation(line: 2078, column: 55, scope: !9513)
!9717 = !DILocation(line: 2078, column: 60, scope: !9513)
!9718 = !DILocation(line: 2078, column: 5, scope: !9513)
!9719 = !DILocation(line: 2079, column: 33, scope: !9513)
!9720 = !DILocation(line: 2079, column: 5, scope: !9513)
!9721 = !DILocation(line: 2081, column: 5, scope: !9513)
!9722 = !DILocation(line: 2082, column: 11, scope: !9513)
!9723 = !DILocation(line: 2082, column: 5, scope: !9513)
!9724 = !DILocation(line: 2083, column: 1, scope: !9513)
!9725 = distinct !DISubprogram(name: "writer_print_ts", scope: !47, file: !47, line: 797, type: !9726, isLocal: true, isDefinition: true, scopeLine: 798, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!9726 = !DISubroutineType(types: !9727)
!9727 = !{null, !2418, !1027, !1019, !1041}
!9728 = !DILocalVariable(name: "wctx", arg: 1, scope: !9725, file: !47, line: 797, type: !2418)
!9729 = !DILocation(line: 797, column: 44, scope: !9725)
!9730 = !DILocalVariable(name: "key", arg: 2, scope: !9725, file: !47, line: 797, type: !1027)
!9731 = !DILocation(line: 797, column: 62, scope: !9725)
!9732 = !DILocalVariable(name: "ts", arg: 3, scope: !9725, file: !47, line: 797, type: !1019)
!9733 = !DILocation(line: 797, column: 75, scope: !9725)
!9734 = !DILocalVariable(name: "is_duration", arg: 4, scope: !9725, file: !47, line: 797, type: !1041)
!9735 = !DILocation(line: 797, column: 83, scope: !9725)
!9736 = !DILocation(line: 799, column: 11, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9725, file: !47, line: 799, column: 9)
!9738 = !DILocation(line: 799, column: 23, scope: !9737)
!9739 = !DILocation(line: 799, column: 26, scope: !9740)
!9740 = !DILexicalBlockFile(scope: !9737, file: !47, discriminator: 1)
!9741 = !DILocation(line: 799, column: 29, scope: !9740)
!9742 = !DILocation(line: 799, column: 65, scope: !9740)
!9743 = !DILocation(line: 799, column: 69, scope: !9744)
!9744 = !DILexicalBlockFile(scope: !9737, file: !47, discriminator: 2)
!9745 = !DILocation(line: 799, column: 81, scope: !9744)
!9746 = !DILocation(line: 799, column: 84, scope: !9747)
!9747 = !DILexicalBlockFile(scope: !9737, file: !47, discriminator: 3)
!9748 = !DILocation(line: 799, column: 87, scope: !9747)
!9749 = !DILocation(line: 799, column: 9, scope: !9747)
!9750 = !DILocation(line: 800, column: 29, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9737, file: !47, line: 799, column: 94)
!9752 = !DILocation(line: 800, column: 35, scope: !9751)
!9753 = !DILocation(line: 800, column: 9, scope: !9751)
!9754 = !DILocation(line: 801, column: 5, scope: !9751)
!9755 = !DILocation(line: 802, column: 30, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9737, file: !47, line: 801, column: 12)
!9757 = !DILocation(line: 802, column: 36, scope: !9756)
!9758 = !DILocation(line: 802, column: 41, scope: !9756)
!9759 = !DILocation(line: 802, column: 9, scope: !9756)
!9760 = !DILocation(line: 804, column: 1, scope: !9725)
!9761 = distinct !DISubprogram(name: "writer_print_time", scope: !47, file: !47, line: 780, type: !9762, isLocal: true, isDefinition: true, scopeLine: 782, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!9762 = !DISubroutineType(types: !9763)
!9763 = !{null, !2418, !1027, !1019, !1602, !1041}
!9764 = !DILocalVariable(name: "wctx", arg: 1, scope: !9761, file: !47, line: 780, type: !2418)
!9765 = !DILocation(line: 780, column: 46, scope: !9761)
!9766 = !DILocalVariable(name: "key", arg: 2, scope: !9761, file: !47, line: 780, type: !1027)
!9767 = !DILocation(line: 780, column: 64, scope: !9761)
!9768 = !DILocalVariable(name: "ts", arg: 3, scope: !9761, file: !47, line: 781, type: !1019)
!9769 = !DILocation(line: 781, column: 39, scope: !9761)
!9770 = !DILocalVariable(name: "time_base", arg: 4, scope: !9761, file: !47, line: 781, type: !1602)
!9771 = !DILocation(line: 781, column: 61, scope: !9761)
!9772 = !DILocalVariable(name: "is_duration", arg: 5, scope: !9761, file: !47, line: 781, type: !1041)
!9773 = !DILocation(line: 781, column: 76, scope: !9761)
!9774 = !DILocalVariable(name: "buf", scope: !9761, file: !47, line: 783, type: !4620)
!9775 = !DILocation(line: 783, column: 10, scope: !9761)
!9776 = !DILocation(line: 785, column: 11, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9761, file: !47, line: 785, column: 9)
!9778 = !DILocation(line: 785, column: 23, scope: !9777)
!9779 = !DILocation(line: 785, column: 26, scope: !9780)
!9780 = !DILexicalBlockFile(scope: !9777, file: !47, discriminator: 1)
!9781 = !DILocation(line: 785, column: 29, scope: !9780)
!9782 = !DILocation(line: 785, column: 65, scope: !9780)
!9783 = !DILocation(line: 785, column: 69, scope: !9784)
!9784 = !DILexicalBlockFile(scope: !9777, file: !47, discriminator: 2)
!9785 = !DILocation(line: 785, column: 81, scope: !9784)
!9786 = !DILocation(line: 785, column: 84, scope: !9787)
!9787 = !DILexicalBlockFile(scope: !9777, file: !47, discriminator: 3)
!9788 = !DILocation(line: 785, column: 87, scope: !9787)
!9789 = !DILocation(line: 785, column: 9, scope: !9787)
!9790 = !DILocation(line: 786, column: 29, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9777, file: !47, line: 785, column: 94)
!9792 = !DILocation(line: 786, column: 35, scope: !9791)
!9793 = !DILocation(line: 786, column: 9, scope: !9791)
!9794 = !DILocation(line: 787, column: 5, scope: !9791)
!9795 = !DILocalVariable(name: "d", scope: !9796, file: !47, line: 788, type: !1020)
!9796 = distinct !DILexicalBlock(scope: !9777, file: !47, line: 787, column: 12)
!9797 = !DILocation(line: 788, column: 16, scope: !9796)
!9798 = !DILocation(line: 788, column: 20, scope: !9796)
!9799 = !DILocation(line: 788, column: 33, scope: !9796)
!9800 = !DILocation(line: 788, column: 25, scope: !9796)
!9801 = !DILocation(line: 788, column: 23, scope: !9796)
!9802 = !DILocalVariable(name: "uv", scope: !9796, file: !47, line: 789, type: !8654)
!9803 = !DILocation(line: 789, column: 27, scope: !9796)
!9804 = !DILocation(line: 790, column: 20, scope: !9796)
!9805 = !DILocation(line: 790, column: 12, scope: !9796)
!9806 = !DILocation(line: 790, column: 16, scope: !9796)
!9807 = !DILocation(line: 790, column: 18, scope: !9796)
!9808 = !DILocation(line: 791, column: 12, scope: !9796)
!9809 = !DILocation(line: 791, column: 17, scope: !9796)
!9810 = !DILocation(line: 792, column: 22, scope: !9796)
!9811 = !DILocation(line: 792, column: 9, scope: !9796)
!9812 = !DILocation(line: 793, column: 29, scope: !9796)
!9813 = !DILocation(line: 793, column: 35, scope: !9796)
!9814 = !DILocation(line: 793, column: 40, scope: !9796)
!9815 = !DILocation(line: 793, column: 9, scope: !9796)
!9816 = !DILocation(line: 795, column: 1, scope: !9761)
!9817 = distinct !DISubprogram(name: "value_string", scope: !47, file: !47, line: 361, type: !9818, isLocal: true, isDefinition: true, scopeLine: 362, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!9818 = !DISubroutineType(types: !9819)
!9819 = !{!1014, !1014, !1041, !8654}
!9820 = !DILocalVariable(name: "a", arg: 1, scope: !9821, file: !9822, line: 127, type: !1041)
!9821 = distinct !DISubprogram(name: "av_clip_c", scope: !9822, file: !9822, line: 127, type: !9823, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!9822 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!9823 = !DISubroutineType(types: !9824)
!9824 = !{!1041, !1041, !1041, !1041}
!9825 = !DILocation(line: 127, column: 87, scope: !9821, inlinedAt: !9826)
!9826 = distinct !DILocation(line: 396, column: 25, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9828, file: !47, line: 394, column: 20)
!9828 = distinct !DILexicalBlock(scope: !9829, file: !47, line: 389, column: 17)
!9829 = distinct !DILexicalBlock(scope: !9830, file: !47, line: 386, column: 43)
!9830 = distinct !DILexicalBlock(scope: !9831, file: !47, line: 386, column: 13)
!9831 = distinct !DILexicalBlock(scope: !9832, file: !47, line: 383, column: 12)
!9832 = distinct !DILexicalBlock(scope: !9817, file: !47, line: 374, column: 9)
!9833 = !DILocalVariable(name: "amin", arg: 2, scope: !9821, file: !9822, line: 127, type: !1041)
!9834 = !DILocation(line: 127, column: 94, scope: !9821, inlinedAt: !9826)
!9835 = !DILocalVariable(name: "amax", arg: 3, scope: !9821, file: !9822, line: 127, type: !1041)
!9836 = !DILocation(line: 127, column: 104, scope: !9821, inlinedAt: !9826)
!9837 = !DILocation(line: 127, column: 87, scope: !9821, inlinedAt: !9838)
!9838 = distinct !DILocation(line: 391, column: 25, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9828, file: !47, line: 389, column: 75)
!9840 = !DILocation(line: 127, column: 94, scope: !9821, inlinedAt: !9838)
!9841 = !DILocation(line: 127, column: 104, scope: !9821, inlinedAt: !9838)
!9842 = !DILocalVariable(name: "buf", arg: 1, scope: !9817, file: !47, line: 361, type: !1014)
!9843 = !DILocation(line: 361, column: 33, scope: !9817)
!9844 = !DILocalVariable(name: "buf_size", arg: 2, scope: !9817, file: !47, line: 361, type: !1041)
!9845 = !DILocation(line: 361, column: 42, scope: !9817)
!9846 = !DILocalVariable(name: "uv", arg: 3, scope: !9817, file: !47, line: 361, type: !8654)
!9847 = !DILocation(line: 361, column: 70, scope: !9817)
!9848 = !DILocalVariable(name: "vald", scope: !9817, file: !47, line: 363, type: !1020)
!9849 = !DILocation(line: 363, column: 12, scope: !9817)
!9850 = !DILocalVariable(name: "vali", scope: !9817, file: !47, line: 364, type: !1109)
!9851 = !DILocation(line: 364, column: 19, scope: !9817)
!9852 = !DILocalVariable(name: "show_float", scope: !9817, file: !47, line: 365, type: !1041)
!9853 = !DILocation(line: 365, column: 9, scope: !9817)
!9854 = !DILocation(line: 367, column: 12, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9817, file: !47, line: 367, column: 9)
!9856 = !DILocation(line: 367, column: 17, scope: !9855)
!9857 = !DILocation(line: 367, column: 9, scope: !9817)
!9858 = !DILocation(line: 368, column: 19, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9855, file: !47, line: 367, column: 37)
!9860 = !DILocation(line: 368, column: 23, scope: !9859)
!9861 = !DILocation(line: 368, column: 14, scope: !9859)
!9862 = !DILocation(line: 369, column: 20, scope: !9859)
!9863 = !DILocation(line: 370, column: 5, scope: !9859)
!9864 = !DILocation(line: 371, column: 26, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9855, file: !47, line: 370, column: 12)
!9866 = !DILocation(line: 371, column: 30, scope: !9865)
!9867 = !DILocation(line: 371, column: 21, scope: !9865)
!9868 = !DILocation(line: 371, column: 16, scope: !9865)
!9869 = !DILocation(line: 371, column: 14, scope: !9865)
!9870 = !DILocation(line: 374, column: 12, scope: !9832)
!9871 = !DILocation(line: 374, column: 17, scope: !9832)
!9872 = !DILocation(line: 374, column: 36, scope: !9832)
!9873 = !DILocation(line: 374, column: 39, scope: !9874)
!9874 = !DILexicalBlockFile(scope: !9832, file: !47, discriminator: 1)
!9875 = !DILocation(line: 374, column: 9, scope: !9874)
!9876 = !DILocalVariable(name: "secs", scope: !9877, file: !47, line: 375, type: !1020)
!9877 = distinct !DILexicalBlock(scope: !9832, file: !47, line: 374, column: 69)
!9878 = !DILocation(line: 375, column: 16, scope: !9877)
!9879 = !DILocalVariable(name: "hours", scope: !9877, file: !47, line: 376, type: !1041)
!9880 = !DILocation(line: 376, column: 13, scope: !9877)
!9881 = !DILocalVariable(name: "mins", scope: !9877, file: !47, line: 376, type: !1041)
!9882 = !DILocation(line: 376, column: 20, scope: !9877)
!9883 = !DILocation(line: 377, column: 16, scope: !9877)
!9884 = !DILocation(line: 377, column: 14, scope: !9877)
!9885 = !DILocation(line: 378, column: 21, scope: !9877)
!9886 = !DILocation(line: 378, column: 16, scope: !9877)
!9887 = !DILocation(line: 378, column: 26, scope: !9877)
!9888 = !DILocation(line: 378, column: 14, scope: !9877)
!9889 = !DILocation(line: 379, column: 16, scope: !9877)
!9890 = !DILocation(line: 379, column: 23, scope: !9877)
!9891 = !DILocation(line: 379, column: 28, scope: !9877)
!9892 = !DILocation(line: 379, column: 21, scope: !9877)
!9893 = !DILocation(line: 379, column: 14, scope: !9877)
!9894 = !DILocation(line: 380, column: 17, scope: !9877)
!9895 = !DILocation(line: 380, column: 22, scope: !9877)
!9896 = !DILocation(line: 380, column: 15, scope: !9877)
!9897 = !DILocation(line: 381, column: 14, scope: !9877)
!9898 = !DILocation(line: 382, column: 18, scope: !9877)
!9899 = !DILocation(line: 382, column: 23, scope: !9877)
!9900 = !DILocation(line: 382, column: 51, scope: !9877)
!9901 = !DILocation(line: 382, column: 58, scope: !9877)
!9902 = !DILocation(line: 382, column: 64, scope: !9877)
!9903 = !DILocation(line: 382, column: 9, scope: !9877)
!9904 = !DILocation(line: 383, column: 5, scope: !9877)
!9905 = !DILocalVariable(name: "prefix_string", scope: !9831, file: !47, line: 384, type: !1027)
!9906 = !DILocation(line: 384, column: 21, scope: !9831)
!9907 = !DILocation(line: 386, column: 13, scope: !9830)
!9908 = !DILocation(line: 386, column: 30, scope: !9830)
!9909 = !DILocation(line: 386, column: 33, scope: !9910)
!9910 = !DILexicalBlockFile(scope: !9830, file: !47, discriminator: 1)
!9911 = !DILocation(line: 386, column: 38, scope: !9910)
!9912 = !DILocation(line: 386, column: 13, scope: !9910)
!9913 = !DILocalVariable(name: "index", scope: !9829, file: !47, line: 387, type: !1109)
!9914 = !DILocation(line: 387, column: 27, scope: !9829)
!9915 = !DILocation(line: 389, column: 20, scope: !9828)
!9916 = !DILocation(line: 389, column: 25, scope: !9828)
!9917 = !DILocation(line: 389, column: 42, scope: !9828)
!9918 = !DILocation(line: 389, column: 45, scope: !9919)
!9919 = !DILexicalBlockFile(scope: !9828, file: !47, discriminator: 1)
!9920 = !DILocation(line: 389, column: 17, scope: !9919)
!9921 = !DILocation(line: 390, column: 47, scope: !9839)
!9922 = !DILocation(line: 390, column: 42, scope: !9839)
!9923 = !DILocation(line: 390, column: 25, scope: !9839)
!9924 = !DILocation(line: 390, column: 54, scope: !9839)
!9925 = !DILocation(line: 390, column: 23, scope: !9839)
!9926 = !DILocation(line: 391, column: 35, scope: !9839)
!9927 = !DILocation(line: 391, column: 25, scope: !9839)
!9928 = !DILocation(line: 132, column: 9, scope: !9929, inlinedAt: !9838)
!9929 = distinct !DILexicalBlock(scope: !9821, file: !9822, line: 132, column: 9)
!9930 = !DILocation(line: 132, column: 13, scope: !9929, inlinedAt: !9838)
!9931 = !DILocation(line: 132, column: 11, scope: !9929, inlinedAt: !9838)
!9932 = !DILocation(line: 132, column: 9, scope: !9821, inlinedAt: !9838)
!9933 = !DILocation(line: 132, column: 26, scope: !9934, inlinedAt: !9838)
!9934 = !DILexicalBlockFile(scope: !9929, file: !9822, discriminator: 1)
!9935 = !DILocation(line: 132, column: 19, scope: !9934, inlinedAt: !9838)
!9936 = !DILocation(line: 133, column: 14, scope: !9937, inlinedAt: !9838)
!9937 = distinct !DILexicalBlock(scope: !9929, file: !9822, line: 133, column: 14)
!9938 = !DILocation(line: 133, column: 18, scope: !9937, inlinedAt: !9838)
!9939 = !DILocation(line: 133, column: 16, scope: !9937, inlinedAt: !9838)
!9940 = !DILocation(line: 133, column: 14, scope: !9929, inlinedAt: !9838)
!9941 = !DILocation(line: 133, column: 31, scope: !9942, inlinedAt: !9838)
!9942 = !DILexicalBlockFile(scope: !9937, file: !9822, discriminator: 1)
!9943 = !DILocation(line: 133, column: 24, scope: !9942, inlinedAt: !9838)
!9944 = !DILocation(line: 134, column: 17, scope: !9937, inlinedAt: !9838)
!9945 = !DILocation(line: 134, column: 10, scope: !9937, inlinedAt: !9838)
!9946 = !DILocation(line: 135, column: 1, scope: !9821, inlinedAt: !9838)
!9947 = !DILocation(line: 391, column: 23, scope: !9839)
!9948 = !DILocation(line: 392, column: 37, scope: !9839)
!9949 = !DILocation(line: 392, column: 25, scope: !9839)
!9950 = !DILocation(line: 392, column: 44, scope: !9839)
!9951 = !DILocation(line: 392, column: 22, scope: !9839)
!9952 = !DILocation(line: 393, column: 45, scope: !9839)
!9953 = !DILocation(line: 393, column: 33, scope: !9839)
!9954 = !DILocation(line: 393, column: 52, scope: !9839)
!9955 = !DILocation(line: 393, column: 31, scope: !9839)
!9956 = !DILocation(line: 394, column: 13, scope: !9839)
!9957 = !DILocation(line: 395, column: 48, scope: !9827)
!9958 = !DILocation(line: 395, column: 42, scope: !9827)
!9959 = !DILocation(line: 395, column: 25, scope: !9827)
!9960 = !DILocation(line: 395, column: 55, scope: !9827)
!9961 = !DILocation(line: 395, column: 23, scope: !9827)
!9962 = !DILocation(line: 396, column: 35, scope: !9827)
!9963 = !DILocation(line: 396, column: 25, scope: !9827)
!9964 = !DILocation(line: 132, column: 9, scope: !9929, inlinedAt: !9826)
!9965 = !DILocation(line: 132, column: 13, scope: !9929, inlinedAt: !9826)
!9966 = !DILocation(line: 132, column: 11, scope: !9929, inlinedAt: !9826)
!9967 = !DILocation(line: 132, column: 9, scope: !9821, inlinedAt: !9826)
!9968 = !DILocation(line: 132, column: 26, scope: !9934, inlinedAt: !9826)
!9969 = !DILocation(line: 132, column: 19, scope: !9934, inlinedAt: !9826)
!9970 = !DILocation(line: 133, column: 14, scope: !9937, inlinedAt: !9826)
!9971 = !DILocation(line: 133, column: 18, scope: !9937, inlinedAt: !9826)
!9972 = !DILocation(line: 133, column: 16, scope: !9937, inlinedAt: !9826)
!9973 = !DILocation(line: 133, column: 14, scope: !9929, inlinedAt: !9826)
!9974 = !DILocation(line: 133, column: 31, scope: !9942, inlinedAt: !9826)
!9975 = !DILocation(line: 133, column: 24, scope: !9942, inlinedAt: !9826)
!9976 = !DILocation(line: 134, column: 17, scope: !9937, inlinedAt: !9826)
!9977 = !DILocation(line: 134, column: 10, scope: !9937, inlinedAt: !9826)
!9978 = !DILocation(line: 135, column: 1, scope: !9821, inlinedAt: !9826)
!9979 = !DILocation(line: 396, column: 23, scope: !9827)
!9980 = !DILocation(line: 397, column: 37, scope: !9827)
!9981 = !DILocation(line: 397, column: 25, scope: !9827)
!9982 = !DILocation(line: 397, column: 44, scope: !9827)
!9983 = !DILocation(line: 397, column: 22, scope: !9827)
!9984 = !DILocation(line: 398, column: 45, scope: !9827)
!9985 = !DILocation(line: 398, column: 33, scope: !9827)
!9986 = !DILocation(line: 398, column: 52, scope: !9827)
!9987 = !DILocation(line: 398, column: 31, scope: !9827)
!9988 = !DILocation(line: 400, column: 20, scope: !9829)
!9989 = !DILocation(line: 400, column: 18, scope: !9829)
!9990 = !DILocation(line: 401, column: 9, scope: !9829)
!9991 = !DILocation(line: 403, column: 13, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9831, file: !47, line: 403, column: 13)
!9993 = !DILocation(line: 403, column: 24, scope: !9992)
!9994 = !DILocation(line: 403, column: 28, scope: !9995)
!9995 = !DILexicalBlockFile(scope: !9992, file: !47, discriminator: 1)
!9996 = !DILocation(line: 403, column: 45, scope: !9995)
!9997 = !DILocation(line: 403, column: 48, scope: !9998)
!9998 = !DILexicalBlockFile(scope: !9992, file: !47, discriminator: 2)
!9999 = !DILocation(line: 403, column: 71, scope: !9998)
!10000 = !DILocation(line: 403, column: 56, scope: !9998)
!10001 = !DILocation(line: 403, column: 53, scope: !9998)
!10002 = !DILocation(line: 403, column: 13, scope: !9998)
!10003 = !DILocation(line: 404, column: 22, scope: !9992)
!10004 = !DILocation(line: 404, column: 27, scope: !9992)
!10005 = !DILocation(line: 404, column: 43, scope: !9992)
!10006 = !DILocation(line: 404, column: 13, scope: !9992)
!10007 = !DILocation(line: 406, column: 22, scope: !9992)
!10008 = !DILocation(line: 406, column: 27, scope: !9992)
!10009 = !DILocation(line: 406, column: 45, scope: !9992)
!10010 = !DILocation(line: 406, column: 13, scope: !9992)
!10011 = !DILocation(line: 407, column: 21, scope: !9831)
!10012 = !DILocation(line: 407, column: 26, scope: !9831)
!10013 = !DILocation(line: 407, column: 47, scope: !9831)
!10014 = !DILocation(line: 407, column: 46, scope: !9831)
!10015 = !DILocation(line: 407, column: 61, scope: !9831)
!10016 = !DILocation(line: 407, column: 64, scope: !10017)
!10017 = !DILexicalBlockFile(scope: !9831, file: !47, discriminator: 1)
!10018 = !DILocation(line: 407, column: 61, scope: !10017)
!10019 = !DILocation(line: 407, column: 46, scope: !10020)
!10020 = !DILexicalBlockFile(scope: !9831, file: !47, discriminator: 2)
!10021 = !DILocation(line: 408, column: 18, scope: !9831)
!10022 = !DILocation(line: 408, column: 33, scope: !9831)
!10023 = !DILocation(line: 408, column: 54, scope: !10017)
!10024 = !DILocation(line: 408, column: 33, scope: !10017)
!10025 = !DILocation(line: 408, column: 33, scope: !10020)
!10026 = !DILocation(line: 408, column: 33, scope: !10027)
!10027 = !DILexicalBlockFile(scope: !9831, file: !47, discriminator: 3)
!10028 = !DILocation(line: 407, column: 9, scope: !10027)
!10029 = !DILocation(line: 411, column: 12, scope: !9817)
!10030 = !DILocation(line: 411, column: 5, scope: !9817)
!10031 = distinct !DISubprogram(name: "show_tags", scope: !47, file: !47, line: 1835, type: !10032, isLocal: true, isDefinition: true, scopeLine: 1836, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!10032 = !DISubroutineType(types: !10033)
!10033 = !{!1041, !2418, !1423, !1041}
!10034 = !DILocalVariable(name: "w", arg: 1, scope: !10031, file: !47, line: 1835, type: !2418)
!10035 = !DILocation(line: 1835, column: 44, scope: !10031)
!10036 = !DILocalVariable(name: "tags", arg: 2, scope: !10031, file: !47, line: 1835, type: !1423)
!10037 = !DILocation(line: 1835, column: 61, scope: !10031)
!10038 = !DILocalVariable(name: "section_id", arg: 3, scope: !10031, file: !47, line: 1835, type: !1041)
!10039 = !DILocation(line: 1835, column: 71, scope: !10031)
!10040 = !DILocalVariable(name: "tag", scope: !10031, file: !47, line: 1837, type: !3520)
!10041 = !DILocation(line: 1837, column: 24, scope: !10031)
!10042 = !DILocalVariable(name: "ret", scope: !10031, file: !47, line: 1838, type: !1041)
!10043 = !DILocation(line: 1838, column: 9, scope: !10031)
!10044 = !DILocation(line: 1840, column: 10, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10031, file: !47, line: 1840, column: 9)
!10046 = !DILocation(line: 1840, column: 9, scope: !10031)
!10047 = !DILocation(line: 1841, column: 9, scope: !10045)
!10048 = !DILocation(line: 1842, column: 33, scope: !10031)
!10049 = !DILocation(line: 1842, column: 36, scope: !10031)
!10050 = !DILocation(line: 1842, column: 5, scope: !10031)
!10051 = !DILocation(line: 1844, column: 5, scope: !10031)
!10052 = !DILocation(line: 1844, column: 31, scope: !10053)
!10053 = !DILexicalBlockFile(scope: !10031, file: !47, discriminator: 1)
!10054 = !DILocation(line: 1844, column: 41, scope: !10053)
!10055 = !DILocation(line: 1844, column: 19, scope: !10053)
!10056 = !DILocation(line: 1844, column: 17, scope: !10053)
!10057 = !DILocation(line: 1844, column: 5, scope: !10053)
!10058 = !DILocation(line: 1845, column: 40, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10060, file: !47, line: 1845, column: 13)
!10060 = distinct !DILexicalBlock(scope: !10031, file: !47, line: 1844, column: 51)
!10061 = !DILocation(line: 1845, column: 43, scope: !10059)
!10062 = !DILocation(line: 1845, column: 48, scope: !10059)
!10063 = !DILocation(line: 1845, column: 53, scope: !10059)
!10064 = !DILocation(line: 1845, column: 58, scope: !10059)
!10065 = !DILocation(line: 1845, column: 20, scope: !10059)
!10066 = !DILocation(line: 1845, column: 18, scope: !10059)
!10067 = !DILocation(line: 1845, column: 69, scope: !10059)
!10068 = !DILocation(line: 1845, column: 13, scope: !10060)
!10069 = !DILocation(line: 1846, column: 13, scope: !10059)
!10070 = !DILocation(line: 1844, column: 5, scope: !10071)
!10071 = !DILexicalBlockFile(scope: !10031, file: !47, discriminator: 2)
!10072 = distinct !{!10072, !10051}
!10073 = !DILocation(line: 1848, column: 33, scope: !10031)
!10074 = !DILocation(line: 1848, column: 5, scope: !10031)
!10075 = !DILocation(line: 1850, column: 12, scope: !10031)
!10076 = !DILocation(line: 1850, column: 5, scope: !10031)
!10077 = !DILocation(line: 1851, column: 1, scope: !10031)
!10078 = distinct !DISubprogram(name: "print_pkt_side_data", scope: !47, file: !47, line: 1853, type: !10079, isLocal: true, isDefinition: true, scopeLine: 1859, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!10079 = !DISubroutineType(types: !10080)
!10080 = !{null, !2418, !2016, !10081, !1041, !5070, !5070}
!10081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10082, size: 64, align: 64)
!10082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1342)
!10083 = !DILocalVariable(name: "w", arg: 1, scope: !10078, file: !47, line: 1853, type: !2418)
!10084 = !DILocation(line: 1853, column: 48, scope: !10078)
!10085 = !DILocalVariable(name: "par", arg: 2, scope: !10078, file: !47, line: 1854, type: !2016)
!10086 = !DILocation(line: 1854, column: 52, scope: !10078)
!10087 = !DILocalVariable(name: "side_data", arg: 3, scope: !10078, file: !47, line: 1855, type: !10081)
!10088 = !DILocation(line: 1855, column: 57, scope: !10078)
!10089 = !DILocalVariable(name: "nb_side_data", arg: 4, scope: !10078, file: !47, line: 1856, type: !1041)
!10090 = !DILocation(line: 1856, column: 37, scope: !10078)
!10091 = !DILocalVariable(name: "id_data_list", arg: 5, scope: !10078, file: !47, line: 1857, type: !5070)
!10092 = !DILocation(line: 1857, column: 43, scope: !10078)
!10093 = !DILocalVariable(name: "id_data", arg: 6, scope: !10078, file: !47, line: 1858, type: !5070)
!10094 = !DILocation(line: 1858, column: 43, scope: !10078)
!10095 = !DILocalVariable(name: "i", scope: !10078, file: !47, line: 1860, type: !1041)
!10096 = !DILocation(line: 1860, column: 9, scope: !10078)
!10097 = !DILocation(line: 1862, column: 33, scope: !10078)
!10098 = !DILocation(line: 1862, column: 36, scope: !10078)
!10099 = !DILocation(line: 1862, column: 5, scope: !10078)
!10100 = !DILocation(line: 1863, column: 12, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10078, file: !47, line: 1863, column: 5)
!10102 = !DILocation(line: 1863, column: 10, scope: !10101)
!10103 = !DILocation(line: 1863, column: 17, scope: !10104)
!10104 = !DILexicalBlockFile(scope: !10105, file: !47, discriminator: 1)
!10105 = distinct !DILexicalBlock(scope: !10101, file: !47, line: 1863, column: 5)
!10106 = !DILocation(line: 1863, column: 21, scope: !10104)
!10107 = !DILocation(line: 1863, column: 19, scope: !10104)
!10108 = !DILocation(line: 1863, column: 5, scope: !10104)
!10109 = !DILocalVariable(name: "sd", scope: !10110, file: !47, line: 1864, type: !10081)
!10110 = distinct !DILexicalBlock(scope: !10105, file: !47, line: 1863, column: 40)
!10111 = !DILocation(line: 1864, column: 33, scope: !10110)
!10112 = !DILocation(line: 1864, column: 49, scope: !10110)
!10113 = !DILocation(line: 1864, column: 39, scope: !10110)
!10114 = !DILocalVariable(name: "name", scope: !10110, file: !47, line: 1865, type: !1027)
!10115 = !DILocation(line: 1865, column: 21, scope: !10110)
!10116 = !DILocation(line: 1865, column: 53, scope: !10110)
!10117 = !DILocation(line: 1865, column: 57, scope: !10110)
!10118 = !DILocation(line: 1865, column: 28, scope: !10110)
!10119 = !DILocation(line: 1867, column: 37, scope: !10110)
!10120 = !DILocation(line: 1867, column: 40, scope: !10110)
!10121 = !DILocation(line: 1867, column: 9, scope: !10110)
!10122 = !DILocation(line: 1868, column: 29, scope: !10110)
!10123 = !DILocation(line: 1868, column: 50, scope: !10110)
!10124 = !DILocation(line: 1868, column: 57, scope: !10125)
!10125 = !DILexicalBlockFile(scope: !10110, file: !47, discriminator: 1)
!10126 = !DILocation(line: 1868, column: 50, scope: !10125)
!10127 = !DILocation(line: 1868, column: 50, scope: !10128)
!10128 = !DILexicalBlockFile(scope: !10110, file: !47, discriminator: 2)
!10129 = !DILocation(line: 1868, column: 50, scope: !10130)
!10130 = !DILexicalBlockFile(scope: !10110, file: !47, discriminator: 3)
!10131 = !DILocation(line: 1868, column: 9, scope: !10130)
!10132 = !DILocation(line: 1869, column: 13, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10110, file: !47, line: 1869, column: 13)
!10134 = !DILocation(line: 1869, column: 17, scope: !10133)
!10135 = !DILocation(line: 1869, column: 22, scope: !10133)
!10136 = !DILocation(line: 1869, column: 51, scope: !10133)
!10137 = !DILocation(line: 1869, column: 54, scope: !10138)
!10138 = !DILexicalBlockFile(scope: !10133, file: !47, discriminator: 1)
!10139 = !DILocation(line: 1869, column: 58, scope: !10138)
!10140 = !DILocation(line: 1869, column: 63, scope: !10138)
!10141 = !DILocation(line: 1869, column: 13, scope: !10138)
!10142 = !DILocation(line: 1870, column: 35, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10133, file: !47, line: 1869, column: 71)
!10144 = !DILocation(line: 1870, column: 55, scope: !10143)
!10145 = !DILocation(line: 1870, column: 59, scope: !10143)
!10146 = !DILocation(line: 1870, column: 13, scope: !10143)
!10147 = !DILocation(line: 1871, column: 34, scope: !10143)
!10148 = !DILocation(line: 1871, column: 84, scope: !10143)
!10149 = !DILocation(line: 1871, column: 88, scope: !10143)
!10150 = !DILocation(line: 1871, column: 73, scope: !10143)
!10151 = !DILocation(line: 1871, column: 49, scope: !10143)
!10152 = !DILocation(line: 1871, column: 13, scope: !10153)
!10153 = !DILexicalBlockFile(scope: !10143, file: !47, discriminator: 1)
!10154 = !DILocation(line: 1872, column: 9, scope: !10143)
!10155 = !DILocation(line: 1872, column: 20, scope: !10156)
!10156 = !DILexicalBlockFile(scope: !10157, file: !47, discriminator: 1)
!10157 = distinct !DILexicalBlock(scope: !10133, file: !47, line: 1872, column: 20)
!10158 = !DILocation(line: 1872, column: 24, scope: !10156)
!10159 = !DILocation(line: 1872, column: 29, scope: !10156)
!10160 = !DILocalVariable(name: "stereo", scope: !10161, file: !47, line: 1873, type: !10162)
!10161 = distinct !DILexicalBlock(scope: !10157, file: !47, line: 1872, column: 54)
!10162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10163, size: 64, align: 64)
!10163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1113)
!10164 = !DILocation(line: 1873, column: 31, scope: !10161)
!10165 = !DILocation(line: 1873, column: 54, scope: !10161)
!10166 = !DILocation(line: 1873, column: 58, scope: !10161)
!10167 = !DILocation(line: 1873, column: 40, scope: !10161)
!10168 = !DILocation(line: 1874, column: 33, scope: !10161)
!10169 = !DILocation(line: 1874, column: 66, scope: !10161)
!10170 = !DILocation(line: 1874, column: 74, scope: !10161)
!10171 = !DILocation(line: 1874, column: 44, scope: !10161)
!10172 = !DILocation(line: 1874, column: 13, scope: !10173)
!10173 = !DILexicalBlockFile(scope: !10161, file: !47, discriminator: 1)
!10174 = !DILocation(line: 1875, column: 34, scope: !10161)
!10175 = !DILocation(line: 1875, column: 52, scope: !10161)
!10176 = !DILocation(line: 1875, column: 60, scope: !10161)
!10177 = !DILocation(line: 1875, column: 66, scope: !10161)
!10178 = !DILocation(line: 1875, column: 50, scope: !10161)
!10179 = !DILocation(line: 1875, column: 49, scope: !10161)
!10180 = !DILocation(line: 1875, column: 13, scope: !10161)
!10181 = !DILocation(line: 1876, column: 9, scope: !10161)
!10182 = !DILocation(line: 1876, column: 20, scope: !10183)
!10183 = !DILexicalBlockFile(scope: !10184, file: !47, discriminator: 1)
!10184 = distinct !DILexicalBlock(scope: !10157, file: !47, line: 1876, column: 20)
!10185 = !DILocation(line: 1876, column: 24, scope: !10183)
!10186 = !DILocation(line: 1876, column: 29, scope: !10183)
!10187 = !DILocalVariable(name: "spherical", scope: !10188, file: !47, line: 1877, type: !10189)
!10188 = distinct !DILexicalBlock(scope: !10184, file: !47, line: 1876, column: 55)
!10189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10190, size: 64, align: 64)
!10190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1120)
!10191 = !DILocation(line: 1877, column: 39, scope: !10188)
!10192 = !DILocation(line: 1877, column: 73, scope: !10188)
!10193 = !DILocation(line: 1877, column: 77, scope: !10188)
!10194 = !DILocation(line: 1877, column: 51, scope: !10188)
!10195 = !DILocation(line: 1878, column: 33, scope: !10188)
!10196 = !DILocation(line: 1878, column: 79, scope: !10188)
!10197 = !DILocation(line: 1878, column: 90, scope: !10188)
!10198 = !DILocation(line: 1878, column: 50, scope: !10188)
!10199 = !DILocation(line: 1878, column: 13, scope: !10200)
!10200 = !DILexicalBlockFile(scope: !10188, file: !47, discriminator: 1)
!10201 = !DILocation(line: 1879, column: 17, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10188, file: !47, line: 1879, column: 17)
!10203 = !DILocation(line: 1879, column: 28, scope: !10202)
!10204 = !DILocation(line: 1879, column: 39, scope: !10202)
!10205 = !DILocation(line: 1879, column: 17, scope: !10188)
!10206 = !DILocation(line: 1880, column: 38, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10202, file: !47, line: 1879, column: 64)
!10208 = !DILocation(line: 1880, column: 52, scope: !10207)
!10209 = !DILocation(line: 1880, column: 63, scope: !10207)
!10210 = !DILocation(line: 1880, column: 17, scope: !10207)
!10211 = !DILocation(line: 1881, column: 13, scope: !10207)
!10212 = !DILocation(line: 1881, column: 24, scope: !10213)
!10213 = !DILexicalBlockFile(scope: !10214, file: !47, discriminator: 1)
!10214 = distinct !DILexicalBlock(scope: !10202, file: !47, line: 1881, column: 24)
!10215 = !DILocation(line: 1881, column: 35, scope: !10213)
!10216 = !DILocation(line: 1881, column: 46, scope: !10213)
!10217 = !DILocalVariable(name: "l", scope: !10218, file: !47, line: 1882, type: !1212)
!10218 = distinct !DILexicalBlock(scope: !10214, file: !47, line: 1881, column: 84)
!10219 = !DILocation(line: 1882, column: 24, scope: !10218)
!10220 = !DILocalVariable(name: "t", scope: !10218, file: !47, line: 1882, type: !1212)
!10221 = !DILocation(line: 1882, column: 27, scope: !10218)
!10222 = !DILocalVariable(name: "r", scope: !10218, file: !47, line: 1882, type: !1212)
!10223 = !DILocation(line: 1882, column: 30, scope: !10218)
!10224 = !DILocalVariable(name: "b", scope: !10218, file: !47, line: 1882, type: !1212)
!10225 = !DILocation(line: 1882, column: 33, scope: !10218)
!10226 = !DILocation(line: 1883, column: 42, scope: !10218)
!10227 = !DILocation(line: 1883, column: 53, scope: !10218)
!10228 = !DILocation(line: 1883, column: 58, scope: !10218)
!10229 = !DILocation(line: 1883, column: 65, scope: !10218)
!10230 = !DILocation(line: 1883, column: 70, scope: !10218)
!10231 = !DILocation(line: 1883, column: 17, scope: !10218)
!10232 = !DILocation(line: 1885, column: 38, scope: !10218)
!10233 = !DILocation(line: 1885, column: 55, scope: !10218)
!10234 = !DILocation(line: 1885, column: 17, scope: !10218)
!10235 = !DILocation(line: 1886, column: 38, scope: !10218)
!10236 = !DILocation(line: 1886, column: 54, scope: !10218)
!10237 = !DILocation(line: 1886, column: 17, scope: !10218)
!10238 = !DILocation(line: 1887, column: 38, scope: !10218)
!10239 = !DILocation(line: 1887, column: 56, scope: !10218)
!10240 = !DILocation(line: 1887, column: 17, scope: !10218)
!10241 = !DILocation(line: 1888, column: 38, scope: !10218)
!10242 = !DILocation(line: 1888, column: 57, scope: !10218)
!10243 = !DILocation(line: 1888, column: 17, scope: !10218)
!10244 = !DILocation(line: 1889, column: 13, scope: !10218)
!10245 = !DILocation(line: 1891, column: 34, scope: !10188)
!10246 = !DILocation(line: 1891, column: 53, scope: !10188)
!10247 = !DILocation(line: 1891, column: 64, scope: !10188)
!10248 = !DILocation(line: 1891, column: 44, scope: !10188)
!10249 = !DILocation(line: 1891, column: 68, scope: !10188)
!10250 = !DILocation(line: 1891, column: 13, scope: !10188)
!10251 = !DILocation(line: 1892, column: 34, scope: !10188)
!10252 = !DILocation(line: 1892, column: 55, scope: !10188)
!10253 = !DILocation(line: 1892, column: 66, scope: !10188)
!10254 = !DILocation(line: 1892, column: 46, scope: !10188)
!10255 = !DILocation(line: 1892, column: 72, scope: !10188)
!10256 = !DILocation(line: 1892, column: 13, scope: !10188)
!10257 = !DILocation(line: 1893, column: 34, scope: !10188)
!10258 = !DILocation(line: 1893, column: 54, scope: !10188)
!10259 = !DILocation(line: 1893, column: 65, scope: !10188)
!10260 = !DILocation(line: 1893, column: 45, scope: !10188)
!10261 = !DILocation(line: 1893, column: 70, scope: !10188)
!10262 = !DILocation(line: 1893, column: 13, scope: !10188)
!10263 = !DILocation(line: 1894, column: 9, scope: !10188)
!10264 = !DILocation(line: 1894, column: 20, scope: !10265)
!10265 = !DILexicalBlockFile(scope: !10266, file: !47, discriminator: 1)
!10266 = distinct !DILexicalBlock(scope: !10184, file: !47, line: 1894, column: 20)
!10267 = !DILocation(line: 1894, column: 24, scope: !10265)
!10268 = !DILocation(line: 1894, column: 29, scope: !10265)
!10269 = !DILocation(line: 1894, column: 57, scope: !10265)
!10270 = !DILocation(line: 1894, column: 60, scope: !10271)
!10271 = !DILexicalBlockFile(scope: !10266, file: !47, discriminator: 2)
!10272 = !DILocation(line: 1894, column: 64, scope: !10271)
!10273 = !DILocation(line: 1894, column: 69, scope: !10271)
!10274 = !DILocation(line: 1894, column: 20, scope: !10271)
!10275 = !DILocation(line: 1895, column: 34, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10266, file: !47, line: 1894, column: 76)
!10277 = !DILocation(line: 1895, column: 85, scope: !10276)
!10278 = !DILocation(line: 1895, column: 89, scope: !10276)
!10279 = !DILocation(line: 1895, column: 97, scope: !10276)
!10280 = !DILocation(line: 1895, column: 53, scope: !10276)
!10281 = !DILocation(line: 1895, column: 13, scope: !10276)
!10282 = !DILocation(line: 1896, column: 34, scope: !10276)
!10283 = !DILocation(line: 1896, column: 88, scope: !10276)
!10284 = !DILocation(line: 1896, column: 92, scope: !10276)
!10285 = !DILocation(line: 1896, column: 97, scope: !10276)
!10286 = !DILocation(line: 1896, column: 104, scope: !10276)
!10287 = !DILocation(line: 1896, column: 56, scope: !10276)
!10288 = !DILocation(line: 1896, column: 13, scope: !10276)
!10289 = !DILocation(line: 1897, column: 34, scope: !10276)
!10290 = !DILocation(line: 1897, column: 71, scope: !10276)
!10291 = !DILocation(line: 1897, column: 75, scope: !10276)
!10292 = !DILocation(line: 1897, column: 80, scope: !10276)
!10293 = !DILocation(line: 1897, column: 53, scope: !10276)
!10294 = !DILocation(line: 1897, column: 52, scope: !10276)
!10295 = !DILocation(line: 1897, column: 13, scope: !10276)
!10296 = !DILocation(line: 1898, column: 34, scope: !10276)
!10297 = !DILocation(line: 1898, column: 74, scope: !10276)
!10298 = !DILocation(line: 1898, column: 78, scope: !10276)
!10299 = !DILocation(line: 1898, column: 83, scope: !10276)
!10300 = !DILocation(line: 1898, column: 56, scope: !10276)
!10301 = !DILocation(line: 1898, column: 55, scope: !10276)
!10302 = !DILocation(line: 1898, column: 13, scope: !10276)
!10303 = !DILocation(line: 1899, column: 9, scope: !10276)
!10304 = !DILocation(line: 1899, column: 20, scope: !10305)
!10305 = !DILexicalBlockFile(scope: !10306, file: !47, discriminator: 1)
!10306 = distinct !DILexicalBlock(scope: !10266, file: !47, line: 1899, column: 20)
!10307 = !DILocation(line: 1899, column: 24, scope: !10305)
!10308 = !DILocation(line: 1899, column: 29, scope: !10305)
!10309 = !DILocalVariable(name: "metadata", scope: !10310, file: !47, line: 1900, type: !1141)
!10310 = distinct !DILexicalBlock(scope: !10306, file: !47, line: 1899, column: 72)
!10311 = !DILocation(line: 1900, column: 41, scope: !10310)
!10312 = !DILocation(line: 1900, column: 82, scope: !10310)
!10313 = !DILocation(line: 1900, column: 86, scope: !10310)
!10314 = !DILocation(line: 1900, column: 52, scope: !10310)
!10315 = !DILocation(line: 1902, column: 17, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10310, file: !47, line: 1902, column: 17)
!10317 = !DILocation(line: 1902, column: 27, scope: !10316)
!10318 = !DILocation(line: 1902, column: 17, scope: !10310)
!10319 = !DILocation(line: 1903, column: 39, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10316, file: !47, line: 1902, column: 42)
!10321 = !DILocation(line: 1903, column: 51, scope: !10320)
!10322 = !DILocation(line: 1903, column: 61, scope: !10320)
!10323 = !DILocation(line: 1903, column: 17, scope: !10320)
!10324 = !DILocation(line: 1904, column: 39, scope: !10320)
!10325 = !DILocation(line: 1904, column: 51, scope: !10320)
!10326 = !DILocation(line: 1904, column: 61, scope: !10320)
!10327 = !DILocation(line: 1904, column: 17, scope: !10320)
!10328 = !DILocation(line: 1905, column: 39, scope: !10320)
!10329 = !DILocation(line: 1905, column: 53, scope: !10320)
!10330 = !DILocation(line: 1905, column: 63, scope: !10320)
!10331 = !DILocation(line: 1905, column: 17, scope: !10320)
!10332 = !DILocation(line: 1906, column: 39, scope: !10320)
!10333 = !DILocation(line: 1906, column: 53, scope: !10320)
!10334 = !DILocation(line: 1906, column: 63, scope: !10320)
!10335 = !DILocation(line: 1906, column: 17, scope: !10320)
!10336 = !DILocation(line: 1907, column: 39, scope: !10320)
!10337 = !DILocation(line: 1907, column: 52, scope: !10320)
!10338 = !DILocation(line: 1907, column: 62, scope: !10320)
!10339 = !DILocation(line: 1907, column: 17, scope: !10320)
!10340 = !DILocation(line: 1908, column: 39, scope: !10320)
!10341 = !DILocation(line: 1908, column: 52, scope: !10320)
!10342 = !DILocation(line: 1908, column: 62, scope: !10320)
!10343 = !DILocation(line: 1908, column: 17, scope: !10320)
!10344 = !DILocation(line: 1910, column: 39, scope: !10320)
!10345 = !DILocation(line: 1910, column: 59, scope: !10320)
!10346 = !DILocation(line: 1910, column: 69, scope: !10320)
!10347 = !DILocation(line: 1910, column: 17, scope: !10320)
!10348 = !DILocation(line: 1911, column: 39, scope: !10320)
!10349 = !DILocation(line: 1911, column: 59, scope: !10320)
!10350 = !DILocation(line: 1911, column: 69, scope: !10320)
!10351 = !DILocation(line: 1911, column: 17, scope: !10320)
!10352 = !DILocation(line: 1912, column: 13, scope: !10320)
!10353 = !DILocation(line: 1914, column: 17, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10310, file: !47, line: 1914, column: 17)
!10355 = !DILocation(line: 1914, column: 27, scope: !10354)
!10356 = !DILocation(line: 1914, column: 17, scope: !10310)
!10357 = !DILocation(line: 1915, column: 39, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10354, file: !47, line: 1914, column: 42)
!10359 = !DILocation(line: 1915, column: 59, scope: !10358)
!10360 = !DILocation(line: 1915, column: 69, scope: !10358)
!10361 = !DILocation(line: 1915, column: 17, scope: !10358)
!10362 = !DILocation(line: 1916, column: 39, scope: !10358)
!10363 = !DILocation(line: 1916, column: 59, scope: !10358)
!10364 = !DILocation(line: 1916, column: 69, scope: !10358)
!10365 = !DILocation(line: 1916, column: 17, scope: !10358)
!10366 = !DILocation(line: 1917, column: 13, scope: !10358)
!10367 = !DILocation(line: 1918, column: 9, scope: !10310)
!10368 = !DILocation(line: 1918, column: 20, scope: !10369)
!10369 = !DILexicalBlockFile(scope: !10370, file: !47, discriminator: 1)
!10370 = distinct !DILexicalBlock(scope: !10306, file: !47, line: 1918, column: 20)
!10371 = !DILocation(line: 1918, column: 24, scope: !10369)
!10372 = !DILocation(line: 1918, column: 29, scope: !10369)
!10373 = !DILocalVariable(name: "metadata", scope: !10374, file: !47, line: 1919, type: !1158)
!10374 = distinct !DILexicalBlock(scope: !10370, file: !47, line: 1918, column: 65)
!10375 = !DILocation(line: 1919, column: 37, scope: !10374)
!10376 = !DILocation(line: 1919, column: 74, scope: !10374)
!10377 = !DILocation(line: 1919, column: 78, scope: !10374)
!10378 = !DILocation(line: 1919, column: 48, scope: !10374)
!10379 = !DILocation(line: 1920, column: 34, scope: !10374)
!10380 = !DILocation(line: 1920, column: 52, scope: !10374)
!10381 = !DILocation(line: 1920, column: 62, scope: !10374)
!10382 = !DILocation(line: 1920, column: 13, scope: !10374)
!10383 = !DILocation(line: 1921, column: 34, scope: !10374)
!10384 = !DILocation(line: 1921, column: 52, scope: !10374)
!10385 = !DILocation(line: 1921, column: 62, scope: !10374)
!10386 = !DILocation(line: 1921, column: 13, scope: !10374)
!10387 = !DILocation(line: 1922, column: 9, scope: !10374)
!10388 = !DILocation(line: 1923, column: 37, scope: !10110)
!10389 = !DILocation(line: 1923, column: 9, scope: !10110)
!10390 = !DILocation(line: 1924, column: 5, scope: !10110)
!10391 = !DILocation(line: 1863, column: 36, scope: !10392)
!10392 = !DILexicalBlockFile(scope: !10105, file: !47, discriminator: 2)
!10393 = !DILocation(line: 1863, column: 5, scope: !10392)
!10394 = distinct !{!10394, !10395}
!10395 = !DILocation(line: 1863, column: 5, scope: !10078)
!10396 = !DILocation(line: 1925, column: 33, scope: !10078)
!10397 = !DILocation(line: 1925, column: 5, scope: !10078)
!10398 = !DILocation(line: 1926, column: 1, scope: !10078)
!10399 = distinct !DISubprogram(name: "writer_print_data", scope: !47, file: !47, line: 806, type: !10400, isLocal: true, isDefinition: true, scopeLine: 808, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!10400 = !DISubroutineType(types: !10401)
!10401 = !{null, !2418, !1027, !1102, !1041}
!10402 = !DILocalVariable(name: "wctx", arg: 1, scope: !10399, file: !47, line: 806, type: !2418)
!10403 = !DILocation(line: 806, column: 46, scope: !10399)
!10404 = !DILocalVariable(name: "name", arg: 2, scope: !10399, file: !47, line: 806, type: !1027)
!10405 = !DILocation(line: 806, column: 64, scope: !10399)
!10406 = !DILocalVariable(name: "data", arg: 3, scope: !10399, file: !47, line: 807, type: !1102)
!10407 = !DILocation(line: 807, column: 40, scope: !10399)
!10408 = !DILocalVariable(name: "size", arg: 4, scope: !10399, file: !47, line: 807, type: !1041)
!10409 = !DILocation(line: 807, column: 50, scope: !10399)
!10410 = !DILocalVariable(name: "bp", scope: !10399, file: !47, line: 809, type: !2452)
!10411 = !DILocation(line: 809, column: 14, scope: !10399)
!10412 = !DILocalVariable(name: "offset", scope: !10399, file: !47, line: 810, type: !1041)
!10413 = !DILocation(line: 810, column: 9, scope: !10399)
!10414 = !DILocalVariable(name: "l", scope: !10399, file: !47, line: 810, type: !1041)
!10415 = !DILocation(line: 810, column: 21, scope: !10399)
!10416 = !DILocalVariable(name: "i", scope: !10399, file: !47, line: 810, type: !1041)
!10417 = !DILocation(line: 810, column: 24, scope: !10399)
!10418 = !DILocation(line: 812, column: 5, scope: !10399)
!10419 = !DILocation(line: 813, column: 5, scope: !10399)
!10420 = !DILocation(line: 814, column: 5, scope: !10399)
!10421 = !DILocation(line: 814, column: 12, scope: !10422)
!10422 = !DILexicalBlockFile(scope: !10399, file: !47, discriminator: 1)
!10423 = !DILocation(line: 814, column: 5, scope: !10422)
!10424 = !DILocation(line: 815, column: 35, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10399, file: !47, line: 814, column: 18)
!10426 = !DILocation(line: 815, column: 9, scope: !10425)
!10427 = !DILocation(line: 816, column: 15, scope: !10425)
!10428 = !DILocation(line: 816, column: 21, scope: !10425)
!10429 = !DILocation(line: 816, column: 14, scope: !10425)
!10430 = !DILocation(line: 816, column: 14, scope: !10431)
!10431 = !DILexicalBlockFile(scope: !10425, file: !47, discriminator: 1)
!10432 = !DILocation(line: 816, column: 38, scope: !10433)
!10433 = !DILexicalBlockFile(scope: !10425, file: !47, discriminator: 2)
!10434 = !DILocation(line: 816, column: 14, scope: !10433)
!10435 = !DILocation(line: 816, column: 14, scope: !10436)
!10436 = !DILexicalBlockFile(scope: !10425, file: !47, discriminator: 3)
!10437 = !DILocation(line: 816, column: 11, scope: !10436)
!10438 = !DILocation(line: 817, column: 16, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10425, file: !47, line: 817, column: 9)
!10440 = !DILocation(line: 817, column: 14, scope: !10439)
!10441 = !DILocation(line: 817, column: 21, scope: !10442)
!10442 = !DILexicalBlockFile(scope: !10443, file: !47, discriminator: 1)
!10443 = distinct !DILexicalBlock(scope: !10439, file: !47, line: 817, column: 9)
!10444 = !DILocation(line: 817, column: 25, scope: !10442)
!10445 = !DILocation(line: 817, column: 23, scope: !10442)
!10446 = !DILocation(line: 817, column: 9, scope: !10442)
!10447 = !DILocation(line: 818, column: 42, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10443, file: !47, line: 817, column: 33)
!10449 = !DILocation(line: 818, column: 37, scope: !10448)
!10450 = !DILocation(line: 818, column: 13, scope: !10448)
!10451 = !DILocation(line: 819, column: 17, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10448, file: !47, line: 819, column: 17)
!10453 = !DILocation(line: 819, column: 19, scope: !10452)
!10454 = !DILocation(line: 819, column: 17, scope: !10448)
!10455 = !DILocation(line: 820, column: 17, scope: !10452)
!10456 = !DILocation(line: 821, column: 9, scope: !10448)
!10457 = !DILocation(line: 817, column: 29, scope: !10458)
!10458 = !DILexicalBlockFile(scope: !10443, file: !47, discriminator: 2)
!10459 = !DILocation(line: 817, column: 9, scope: !10458)
!10460 = distinct !{!10460, !10461}
!10461 = !DILocation(line: 817, column: 9, scope: !10425)
!10462 = !DILocation(line: 822, column: 44, scope: !10425)
!10463 = !DILocation(line: 822, column: 42, scope: !10425)
!10464 = !DILocation(line: 822, column: 38, scope: !10425)
!10465 = !DILocation(line: 822, column: 48, scope: !10425)
!10466 = !DILocation(line: 822, column: 50, scope: !10425)
!10467 = !DILocation(line: 822, column: 46, scope: !10425)
!10468 = !DILocation(line: 822, column: 9, scope: !10425)
!10469 = !DILocation(line: 823, column: 16, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10425, file: !47, line: 823, column: 9)
!10471 = !DILocation(line: 823, column: 14, scope: !10470)
!10472 = !DILocation(line: 823, column: 21, scope: !10473)
!10473 = !DILexicalBlockFile(scope: !10474, file: !47, discriminator: 1)
!10474 = distinct !DILexicalBlock(scope: !10470, file: !47, line: 823, column: 9)
!10475 = !DILocation(line: 823, column: 25, scope: !10473)
!10476 = !DILocation(line: 823, column: 23, scope: !10473)
!10477 = !DILocation(line: 823, column: 9, scope: !10473)
!10478 = !DILocation(line: 824, column: 39, scope: !10474)
!10479 = !DILocation(line: 824, column: 34, scope: !10474)
!10480 = !DILocation(line: 824, column: 42, scope: !10474)
!10481 = !DILocation(line: 824, column: 48, scope: !10474)
!10482 = !DILocation(line: 824, column: 60, scope: !10473)
!10483 = !DILocation(line: 824, column: 55, scope: !10473)
!10484 = !DILocation(line: 824, column: 34, scope: !10473)
!10485 = !DILocation(line: 824, column: 34, scope: !10486)
!10486 = !DILexicalBlockFile(scope: !10474, file: !47, discriminator: 2)
!10487 = !DILocation(line: 824, column: 34, scope: !10488)
!10488 = !DILexicalBlockFile(scope: !10474, file: !47, discriminator: 3)
!10489 = !DILocation(line: 824, column: 13, scope: !10488)
!10490 = !DILocation(line: 823, column: 29, scope: !10486)
!10491 = !DILocation(line: 823, column: 9, scope: !10486)
!10492 = distinct !{!10492, !10493}
!10493 = !DILocation(line: 823, column: 9, scope: !10425)
!10494 = !DILocation(line: 825, column: 9, scope: !10425)
!10495 = !DILocation(line: 826, column: 19, scope: !10425)
!10496 = !DILocation(line: 826, column: 16, scope: !10425)
!10497 = !DILocation(line: 827, column: 17, scope: !10425)
!10498 = !DILocation(line: 827, column: 14, scope: !10425)
!10499 = !DILocation(line: 828, column: 17, scope: !10425)
!10500 = !DILocation(line: 828, column: 14, scope: !10425)
!10501 = !DILocation(line: 814, column: 5, scope: !10502)
!10502 = !DILexicalBlockFile(scope: !10399, file: !47, discriminator: 2)
!10503 = distinct !{!10503, !10420}
!10504 = !DILocation(line: 830, column: 25, scope: !10399)
!10505 = !DILocation(line: 830, column: 31, scope: !10399)
!10506 = !DILocation(line: 830, column: 40, scope: !10399)
!10507 = !DILocation(line: 830, column: 5, scope: !10399)
!10508 = !DILocation(line: 831, column: 5, scope: !10399)
!10509 = !DILocation(line: 832, column: 1, scope: !10399)
!10510 = distinct !DISubprogram(name: "writer_print_data_hash", scope: !47, file: !47, line: 834, type: !10400, isLocal: true, isDefinition: true, scopeLine: 836, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!10511 = !DILocalVariable(name: "wctx", arg: 1, scope: !10510, file: !47, line: 834, type: !2418)
!10512 = !DILocation(line: 834, column: 51, scope: !10510)
!10513 = !DILocalVariable(name: "name", arg: 2, scope: !10510, file: !47, line: 834, type: !1027)
!10514 = !DILocation(line: 834, column: 69, scope: !10510)
!10515 = !DILocalVariable(name: "data", arg: 3, scope: !10510, file: !47, line: 835, type: !1102)
!10516 = !DILocation(line: 835, column: 45, scope: !10510)
!10517 = !DILocalVariable(name: "size", arg: 4, scope: !10510, file: !47, line: 835, type: !1041)
!10518 = !DILocation(line: 835, column: 55, scope: !10510)
!10519 = !DILocalVariable(name: "p", scope: !10510, file: !47, line: 837, type: !1014)
!10520 = !DILocation(line: 837, column: 11, scope: !10510)
!10521 = !DILocalVariable(name: "buf", scope: !10510, file: !47, line: 837, type: !10522)
!10522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 1536, align: 8, elements: !10523)
!10523 = !{!10524}
!10524 = !DISubrange(count: 192)
!10525 = !DILocation(line: 837, column: 14, scope: !10510)
!10526 = !DILocation(line: 839, column: 10, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10510, file: !47, line: 839, column: 9)
!10528 = !DILocation(line: 839, column: 9, scope: !10510)
!10529 = !DILocation(line: 840, column: 9, scope: !10527)
!10530 = !DILocation(line: 841, column: 18, scope: !10510)
!10531 = !DILocation(line: 841, column: 5, scope: !10510)
!10532 = !DILocation(line: 842, column: 20, scope: !10510)
!10533 = !DILocation(line: 842, column: 26, scope: !10510)
!10534 = !DILocation(line: 842, column: 32, scope: !10510)
!10535 = !DILocation(line: 842, column: 5, scope: !10510)
!10536 = !DILocation(line: 843, column: 14, scope: !10510)
!10537 = !DILocation(line: 843, column: 56, scope: !10510)
!10538 = !DILocation(line: 843, column: 39, scope: !10510)
!10539 = !DILocation(line: 843, column: 5, scope: !10540)
!10540 = !DILexicalBlockFile(scope: !10510, file: !47, discriminator: 1)
!10541 = !DILocation(line: 844, column: 9, scope: !10510)
!10542 = !DILocation(line: 844, column: 22, scope: !10510)
!10543 = !DILocation(line: 844, column: 15, scope: !10510)
!10544 = !DILocation(line: 844, column: 13, scope: !10510)
!10545 = !DILocation(line: 844, column: 7, scope: !10510)
!10546 = !DILocation(line: 845, column: 23, scope: !10510)
!10547 = !DILocation(line: 845, column: 29, scope: !10510)
!10548 = !DILocation(line: 845, column: 32, scope: !10510)
!10549 = !DILocation(line: 845, column: 36, scope: !10510)
!10550 = !DILocation(line: 845, column: 52, scope: !10510)
!10551 = !DILocation(line: 845, column: 50, scope: !10510)
!10552 = !DILocation(line: 845, column: 5, scope: !10510)
!10553 = !DILocation(line: 846, column: 25, scope: !10510)
!10554 = !DILocation(line: 846, column: 31, scope: !10510)
!10555 = !DILocation(line: 846, column: 37, scope: !10510)
!10556 = !DILocation(line: 846, column: 5, scope: !10510)
!10557 = !DILocation(line: 847, column: 1, scope: !10510)
!10558 = !DILocation(line: 847, column: 1, scope: !10540)
!10559 = distinct !DISubprogram(name: "writer_print_integers", scope: !47, file: !47, line: 849, type: !10560, isLocal: true, isDefinition: true, scopeLine: 852, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!10560 = !DISubroutineType(types: !10561)
!10561 = !{null, !2418, !1027, !1102, !1041, !1027, !1041, !1041, !1041}
!10562 = !DILocalVariable(name: "wctx", arg: 1, scope: !10559, file: !47, line: 849, type: !2418)
!10563 = !DILocation(line: 849, column: 50, scope: !10559)
!10564 = !DILocalVariable(name: "name", arg: 2, scope: !10559, file: !47, line: 849, type: !1027)
!10565 = !DILocation(line: 849, column: 68, scope: !10559)
!10566 = !DILocalVariable(name: "data", arg: 3, scope: !10559, file: !47, line: 850, type: !1102)
!10567 = !DILocation(line: 850, column: 44, scope: !10559)
!10568 = !DILocalVariable(name: "size", arg: 4, scope: !10559, file: !47, line: 850, type: !1041)
!10569 = !DILocation(line: 850, column: 54, scope: !10559)
!10570 = !DILocalVariable(name: "format", arg: 5, scope: !10559, file: !47, line: 850, type: !1027)
!10571 = !DILocation(line: 850, column: 72, scope: !10559)
!10572 = !DILocalVariable(name: "columns", arg: 6, scope: !10559, file: !47, line: 851, type: !1041)
!10573 = !DILocation(line: 851, column: 39, scope: !10559)
!10574 = !DILocalVariable(name: "bytes", arg: 7, scope: !10559, file: !47, line: 851, type: !1041)
!10575 = !DILocation(line: 851, column: 52, scope: !10559)
!10576 = !DILocalVariable(name: "offset_add", arg: 8, scope: !10559, file: !47, line: 851, type: !1041)
!10577 = !DILocation(line: 851, column: 63, scope: !10559)
!10578 = !DILocalVariable(name: "bp", scope: !10559, file: !47, line: 853, type: !2452)
!10579 = !DILocation(line: 853, column: 14, scope: !10559)
!10580 = !DILocalVariable(name: "offset", scope: !10559, file: !47, line: 854, type: !1041)
!10581 = !DILocation(line: 854, column: 9, scope: !10559)
!10582 = !DILocalVariable(name: "l", scope: !10559, file: !47, line: 854, type: !1041)
!10583 = !DILocation(line: 854, column: 21, scope: !10559)
!10584 = !DILocalVariable(name: "i", scope: !10559, file: !47, line: 854, type: !1041)
!10585 = !DILocation(line: 854, column: 24, scope: !10559)
!10586 = !DILocation(line: 856, column: 5, scope: !10559)
!10587 = !DILocation(line: 857, column: 5, scope: !10559)
!10588 = !DILocation(line: 858, column: 5, scope: !10559)
!10589 = !DILocation(line: 858, column: 12, scope: !10590)
!10590 = !DILexicalBlockFile(scope: !10559, file: !47, discriminator: 1)
!10591 = !DILocation(line: 858, column: 5, scope: !10590)
!10592 = !DILocation(line: 859, column: 35, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10559, file: !47, line: 858, column: 18)
!10594 = !DILocation(line: 859, column: 9, scope: !10593)
!10595 = !DILocation(line: 860, column: 15, scope: !10593)
!10596 = !DILocation(line: 860, column: 24, scope: !10593)
!10597 = !DILocation(line: 860, column: 21, scope: !10593)
!10598 = !DILocation(line: 860, column: 14, scope: !10593)
!10599 = !DILocation(line: 860, column: 36, scope: !10600)
!10600 = !DILexicalBlockFile(scope: !10593, file: !47, discriminator: 1)
!10601 = !DILocation(line: 860, column: 14, scope: !10600)
!10602 = !DILocation(line: 860, column: 48, scope: !10603)
!10603 = !DILexicalBlockFile(scope: !10593, file: !47, discriminator: 2)
!10604 = !DILocation(line: 860, column: 14, scope: !10603)
!10605 = !DILocation(line: 860, column: 14, scope: !10606)
!10606 = !DILexicalBlockFile(scope: !10593, file: !47, discriminator: 3)
!10607 = !DILocation(line: 860, column: 11, scope: !10606)
!10608 = !DILocation(line: 861, column: 16, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10593, file: !47, line: 861, column: 9)
!10610 = !DILocation(line: 861, column: 14, scope: !10609)
!10611 = !DILocation(line: 861, column: 21, scope: !10612)
!10612 = !DILexicalBlockFile(scope: !10613, file: !47, discriminator: 1)
!10613 = distinct !DILexicalBlock(scope: !10609, file: !47, line: 861, column: 9)
!10614 = !DILocation(line: 861, column: 25, scope: !10612)
!10615 = !DILocation(line: 861, column: 23, scope: !10612)
!10616 = !DILocation(line: 861, column: 9, scope: !10612)
!10617 = !DILocation(line: 862, column: 17, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10619, file: !47, line: 862, column: 17)
!10619 = distinct !DILexicalBlock(scope: !10613, file: !47, line: 861, column: 33)
!10620 = !DILocation(line: 862, column: 23, scope: !10618)
!10621 = !DILocation(line: 862, column: 17, scope: !10619)
!10622 = !DILocation(line: 862, column: 45, scope: !10623)
!10623 = !DILexicalBlockFile(scope: !10618, file: !47, discriminator: 1)
!10624 = !DILocation(line: 862, column: 54, scope: !10623)
!10625 = !DILocation(line: 862, column: 53, scope: !10623)
!10626 = !DILocation(line: 862, column: 29, scope: !10623)
!10627 = !DILocation(line: 863, column: 22, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10618, file: !47, line: 863, column: 22)
!10629 = !DILocation(line: 863, column: 28, scope: !10628)
!10630 = !DILocation(line: 863, column: 22, scope: !10618)
!10631 = !DILocation(line: 863, column: 50, scope: !10632)
!10632 = !DILexicalBlockFile(scope: !10628, file: !47, discriminator: 1)
!10633 = !DILocation(line: 863, column: 90, scope: !10632)
!10634 = !DILocation(line: 863, column: 98, scope: !10632)
!10635 = !DILocation(line: 863, column: 58, scope: !10632)
!10636 = !DILocation(line: 863, column: 34, scope: !10632)
!10637 = !DILocation(line: 864, column: 22, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10628, file: !47, line: 864, column: 22)
!10639 = !DILocation(line: 864, column: 28, scope: !10638)
!10640 = !DILocation(line: 864, column: 22, scope: !10628)
!10641 = !DILocation(line: 864, column: 50, scope: !10642)
!10642 = !DILexicalBlockFile(scope: !10638, file: !47, discriminator: 1)
!10643 = !DILocation(line: 864, column: 90, scope: !10642)
!10644 = !DILocation(line: 864, column: 98, scope: !10642)
!10645 = !DILocation(line: 864, column: 34, scope: !10642)
!10646 = !DILocation(line: 865, column: 21, scope: !10619)
!10647 = !DILocation(line: 865, column: 18, scope: !10619)
!10648 = !DILocation(line: 866, column: 18, scope: !10619)
!10649 = !DILocation(line: 867, column: 9, scope: !10619)
!10650 = !DILocation(line: 861, column: 29, scope: !10651)
!10651 = !DILexicalBlockFile(scope: !10613, file: !47, discriminator: 2)
!10652 = !DILocation(line: 861, column: 9, scope: !10651)
!10653 = distinct !{!10653, !10654}
!10654 = !DILocation(line: 861, column: 9, scope: !10593)
!10655 = !DILocation(line: 868, column: 9, scope: !10593)
!10656 = !DILocation(line: 869, column: 19, scope: !10593)
!10657 = !DILocation(line: 869, column: 16, scope: !10593)
!10658 = !DILocation(line: 858, column: 5, scope: !10659)
!10659 = !DILexicalBlockFile(scope: !10559, file: !47, discriminator: 2)
!10660 = distinct !{!10660, !10588}
!10661 = !DILocation(line: 871, column: 25, scope: !10559)
!10662 = !DILocation(line: 871, column: 31, scope: !10559)
!10663 = !DILocation(line: 871, column: 40, scope: !10559)
!10664 = !DILocation(line: 871, column: 5, scope: !10559)
!10665 = !DILocation(line: 872, column: 5, scope: !10559)
!10666 = !DILocation(line: 873, column: 1, scope: !10559)
!10667 = distinct !DISubprogram(name: "writer_print_rational", scope: !47, file: !47, line: 771, type: !10668, isLocal: true, isDefinition: true, scopeLine: 773, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!10668 = !DISubroutineType(types: !10669)
!10669 = !{null, !2418, !1027, !1050, !1015}
!10670 = !DILocalVariable(name: "wctx", arg: 1, scope: !10667, file: !47, line: 771, type: !2418)
!10671 = !DILocation(line: 771, column: 57, scope: !10667)
!10672 = !DILocalVariable(name: "key", arg: 2, scope: !10667, file: !47, line: 772, type: !1027)
!10673 = !DILocation(line: 772, column: 54, scope: !10667)
!10674 = !DILocalVariable(name: "q", arg: 3, scope: !10667, file: !47, line: 772, type: !1050)
!10675 = !DILocation(line: 772, column: 70, scope: !10667)
!10676 = !DILocalVariable(name: "sep", arg: 4, scope: !10667, file: !47, line: 772, type: !1015)
!10677 = !DILocation(line: 772, column: 78, scope: !10667)
!10678 = !DILocalVariable(name: "buf", scope: !10667, file: !47, line: 774, type: !2452)
!10679 = !DILocation(line: 774, column: 14, scope: !10667)
!10680 = !DILocation(line: 775, column: 5, scope: !10667)
!10681 = !DILocation(line: 776, column: 34, scope: !10667)
!10682 = !DILocation(line: 776, column: 39, scope: !10667)
!10683 = !DILocation(line: 776, column: 46, scope: !10667)
!10684 = !DILocation(line: 776, column: 5, scope: !10667)
!10685 = !DILocation(line: 777, column: 25, scope: !10667)
!10686 = !DILocation(line: 777, column: 31, scope: !10667)
!10687 = !DILocation(line: 777, column: 40, scope: !10667)
!10688 = !DILocation(line: 777, column: 5, scope: !10667)
!10689 = !DILocation(line: 778, column: 1, scope: !10667)
!10690 = distinct !DISubprogram(name: "clear_log", scope: !47, file: !47, line: 1979, type: !3080, isLocal: true, isDefinition: true, scopeLine: 1980, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!10691 = !DILocalVariable(name: "need_lock", arg: 1, scope: !10690, file: !47, line: 1979, type: !1041)
!10692 = !DILocation(line: 1979, column: 27, scope: !10690)
!10693 = !DILocalVariable(name: "i", scope: !10690, file: !47, line: 1981, type: !1041)
!10694 = !DILocation(line: 1981, column: 9, scope: !10690)
!10695 = !DILocation(line: 1983, column: 9, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10690, file: !47, line: 1983, column: 9)
!10697 = !DILocation(line: 1983, column: 9, scope: !10690)
!10698 = !DILocation(line: 1984, column: 9, scope: !10696)
!10699 = !DILocation(line: 1985, column: 11, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10690, file: !47, line: 1985, column: 5)
!10701 = !DILocation(line: 1985, column: 10, scope: !10700)
!10702 = !DILocation(line: 1985, column: 15, scope: !10703)
!10703 = !DILexicalBlockFile(scope: !10704, file: !47, discriminator: 1)
!10704 = distinct !DILexicalBlock(scope: !10700, file: !47, line: 1985, column: 5)
!10705 = !DILocation(line: 1985, column: 17, scope: !10703)
!10706 = !DILocation(line: 1985, column: 16, scope: !10703)
!10707 = !DILocation(line: 1985, column: 5, scope: !10703)
!10708 = !DILocation(line: 1986, column: 30, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10704, file: !47, line: 1985, column: 39)
!10710 = !DILocation(line: 1986, column: 19, scope: !10709)
!10711 = !DILocation(line: 1986, column: 33, scope: !10709)
!10712 = !DILocation(line: 1986, column: 18, scope: !10709)
!10713 = !DILocation(line: 1986, column: 9, scope: !10709)
!10714 = !DILocation(line: 1987, column: 30, scope: !10709)
!10715 = !DILocation(line: 1987, column: 19, scope: !10709)
!10716 = !DILocation(line: 1987, column: 33, scope: !10709)
!10717 = !DILocation(line: 1987, column: 18, scope: !10709)
!10718 = !DILocation(line: 1987, column: 9, scope: !10709)
!10719 = !DILocation(line: 1988, column: 30, scope: !10709)
!10720 = !DILocation(line: 1988, column: 19, scope: !10709)
!10721 = !DILocation(line: 1988, column: 33, scope: !10709)
!10722 = !DILocation(line: 1988, column: 18, scope: !10709)
!10723 = !DILocation(line: 1988, column: 9, scope: !10709)
!10724 = !DILocation(line: 1989, column: 5, scope: !10709)
!10725 = !DILocation(line: 1985, column: 35, scope: !10726)
!10726 = !DILexicalBlockFile(scope: !10704, file: !47, discriminator: 2)
!10727 = !DILocation(line: 1985, column: 5, scope: !10726)
!10728 = distinct !{!10728, !10729}
!10729 = !DILocation(line: 1985, column: 5, scope: !10690)
!10730 = !DILocation(line: 1990, column: 21, scope: !10690)
!10731 = !DILocation(line: 1991, column: 8, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10690, file: !47, line: 1991, column: 8)
!10733 = !DILocation(line: 1991, column: 8, scope: !10690)
!10734 = !DILocation(line: 1992, column: 9, scope: !10732)
!10735 = !DILocation(line: 1993, column: 1, scope: !10690)
!10736 = distinct !DISubprogram(name: "show_subtitle", scope: !47, file: !47, line: 2085, type: !10737, isLocal: true, isDefinition: true, scopeLine: 2087, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!10737 = !DISubroutineType(types: !10738)
!10738 = !{null, !2418, !10739, !1577, !1483}
!10739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8807, size: 64, align: 64)
!10740 = !DILocalVariable(name: "w", arg: 1, scope: !10736, file: !47, line: 2085, type: !2418)
!10741 = !DILocation(line: 2085, column: 42, scope: !10736)
!10742 = !DILocalVariable(name: "sub", arg: 2, scope: !10736, file: !47, line: 2085, type: !10739)
!10743 = !DILocation(line: 2085, column: 57, scope: !10736)
!10744 = !DILocalVariable(name: "stream", arg: 3, scope: !10736, file: !47, line: 2085, type: !1577)
!10745 = !DILocation(line: 2085, column: 72, scope: !10736)
!10746 = !DILocalVariable(name: "fmt_ctx", arg: 4, scope: !10736, file: !47, line: 2086, type: !1483)
!10747 = !DILocation(line: 2086, column: 44, scope: !10736)
!10748 = !DILocalVariable(name: "pbuf", scope: !10736, file: !47, line: 2088, type: !2452)
!10749 = !DILocation(line: 2088, column: 14, scope: !10736)
!10750 = !DILocation(line: 2090, column: 5, scope: !10736)
!10751 = !DILocation(line: 2092, column: 33, scope: !10736)
!10752 = !DILocation(line: 2092, column: 5, scope: !10736)
!10753 = !DILocation(line: 2094, column: 25, scope: !10736)
!10754 = !DILocation(line: 2094, column: 5, scope: !10736)
!10755 = !DILocation(line: 2095, column: 21, scope: !10736)
!10756 = !DILocation(line: 2095, column: 31, scope: !10736)
!10757 = !DILocation(line: 2095, column: 36, scope: !10736)
!10758 = !DILocation(line: 2095, column: 5, scope: !10736)
!10759 = !DILocation(line: 2096, column: 23, scope: !10736)
!10760 = !DILocation(line: 2096, column: 38, scope: !10736)
!10761 = !DILocation(line: 2096, column: 43, scope: !10736)
!10762 = !DILocation(line: 2096, column: 61, scope: !10736)
!10763 = !DILocation(line: 2096, column: 5, scope: !10736)
!10764 = !DILocation(line: 2097, column: 26, scope: !10736)
!10765 = !DILocation(line: 2097, column: 39, scope: !10736)
!10766 = !DILocation(line: 2097, column: 44, scope: !10736)
!10767 = !DILocation(line: 2097, column: 5, scope: !10736)
!10768 = !DILocation(line: 2098, column: 26, scope: !10736)
!10769 = !DILocation(line: 2098, column: 51, scope: !10736)
!10770 = !DILocation(line: 2098, column: 56, scope: !10736)
!10771 = !DILocation(line: 2098, column: 5, scope: !10736)
!10772 = !DILocation(line: 2099, column: 26, scope: !10736)
!10773 = !DILocation(line: 2099, column: 49, scope: !10736)
!10774 = !DILocation(line: 2099, column: 54, scope: !10736)
!10775 = !DILocation(line: 2099, column: 5, scope: !10736)
!10776 = !DILocation(line: 2100, column: 26, scope: !10736)
!10777 = !DILocation(line: 2100, column: 42, scope: !10736)
!10778 = !DILocation(line: 2100, column: 47, scope: !10736)
!10779 = !DILocation(line: 2100, column: 5, scope: !10736)
!10780 = !DILocation(line: 2102, column: 33, scope: !10736)
!10781 = !DILocation(line: 2102, column: 5, scope: !10736)
!10782 = !DILocation(line: 2104, column: 5, scope: !10736)
!10783 = !DILocation(line: 2105, column: 11, scope: !10736)
!10784 = !DILocation(line: 2105, column: 5, scope: !10736)
!10785 = !DILocation(line: 2106, column: 1, scope: !10736)
!10786 = distinct !DISubprogram(name: "show_frame", scope: !47, file: !47, line: 2108, type: !10787, isLocal: true, isDefinition: true, scopeLine: 2110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!10787 = !DISubroutineType(types: !10788)
!10788 = !{null, !2418, !1374, !1577, !1483}
!10789 = !DILocalVariable(name: "w", arg: 1, scope: !10786, file: !47, line: 2108, type: !2418)
!10790 = !DILocation(line: 2108, column: 39, scope: !10786)
!10791 = !DILocalVariable(name: "frame", arg: 2, scope: !10786, file: !47, line: 2108, type: !1374)
!10792 = !DILocation(line: 2108, column: 51, scope: !10786)
!10793 = !DILocalVariable(name: "stream", arg: 3, scope: !10786, file: !47, line: 2108, type: !1577)
!10794 = !DILocation(line: 2108, column: 68, scope: !10786)
!10795 = !DILocalVariable(name: "fmt_ctx", arg: 4, scope: !10786, file: !47, line: 2109, type: !1483)
!10796 = !DILocation(line: 2109, column: 41, scope: !10786)
!10797 = !DILocalVariable(name: "pbuf", scope: !10786, file: !47, line: 2111, type: !2452)
!10798 = !DILocation(line: 2111, column: 14, scope: !10786)
!10799 = !DILocalVariable(name: "val_str", scope: !10786, file: !47, line: 2112, type: !4620)
!10800 = !DILocation(line: 2112, column: 10, scope: !10786)
!10801 = !DILocalVariable(name: "s", scope: !10786, file: !47, line: 2113, type: !1027)
!10802 = !DILocation(line: 2113, column: 17, scope: !10786)
!10803 = !DILocalVariable(name: "i", scope: !10786, file: !47, line: 2114, type: !1041)
!10804 = !DILocation(line: 2114, column: 9, scope: !10786)
!10805 = !DILocation(line: 2116, column: 5, scope: !10786)
!10806 = !DILocation(line: 2118, column: 33, scope: !10786)
!10807 = !DILocation(line: 2118, column: 5, scope: !10786)
!10808 = !DILocation(line: 2120, column: 34, scope: !10786)
!10809 = !DILocation(line: 2120, column: 42, scope: !10786)
!10810 = !DILocation(line: 2120, column: 52, scope: !10786)
!10811 = !DILocation(line: 2120, column: 9, scope: !10786)
!10812 = !DILocation(line: 2120, column: 7, scope: !10786)
!10813 = !DILocation(line: 2121, column: 9, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10786, file: !47, line: 2121, column: 9)
!10815 = !DILocation(line: 2121, column: 9, scope: !10786)
!10816 = !DILocation(line: 2121, column: 32, scope: !10817)
!10817 = !DILexicalBlockFile(scope: !10814, file: !47, discriminator: 1)
!10818 = !DILocation(line: 2121, column: 49, scope: !10817)
!10819 = !DILocation(line: 2121, column: 12, scope: !10817)
!10820 = !DILocation(line: 2122, column: 30, scope: !10814)
!10821 = !DILocation(line: 2122, column: 10, scope: !10814)
!10822 = !DILocation(line: 2123, column: 26, scope: !10786)
!10823 = !DILocation(line: 2123, column: 45, scope: !10786)
!10824 = !DILocation(line: 2123, column: 53, scope: !10786)
!10825 = !DILocation(line: 2123, column: 5, scope: !10786)
!10826 = !DILocation(line: 2124, column: 26, scope: !10786)
!10827 = !DILocation(line: 2124, column: 42, scope: !10786)
!10828 = !DILocation(line: 2124, column: 49, scope: !10786)
!10829 = !DILocation(line: 2124, column: 5, scope: !10786)
!10830 = !DILocation(line: 2125, column: 21, scope: !10786)
!10831 = !DILocation(line: 2125, column: 35, scope: !10786)
!10832 = !DILocation(line: 2125, column: 42, scope: !10786)
!10833 = !DILocation(line: 2125, column: 5, scope: !10786)
!10834 = !DILocation(line: 2126, column: 23, scope: !10786)
!10835 = !DILocation(line: 2126, column: 42, scope: !10786)
!10836 = !DILocation(line: 2126, column: 49, scope: !10786)
!10837 = !DILocation(line: 2126, column: 55, scope: !10786)
!10838 = !DILocation(line: 2126, column: 63, scope: !10786)
!10839 = !DILocation(line: 2126, column: 5, scope: !10786)
!10840 = !DILocation(line: 2127, column: 21, scope: !10786)
!10841 = !DILocation(line: 2127, column: 35, scope: !10786)
!10842 = !DILocation(line: 2127, column: 42, scope: !10786)
!10843 = !DILocation(line: 2127, column: 5, scope: !10786)
!10844 = !DILocation(line: 2128, column: 23, scope: !10786)
!10845 = !DILocation(line: 2128, column: 42, scope: !10786)
!10846 = !DILocation(line: 2128, column: 49, scope: !10786)
!10847 = !DILocation(line: 2128, column: 59, scope: !10786)
!10848 = !DILocation(line: 2128, column: 67, scope: !10786)
!10849 = !DILocation(line: 2128, column: 5, scope: !10786)
!10850 = !DILocation(line: 2129, column: 21, scope: !10786)
!10851 = !DILocation(line: 2129, column: 49, scope: !10786)
!10852 = !DILocation(line: 2129, column: 56, scope: !10786)
!10853 = !DILocation(line: 2129, column: 5, scope: !10786)
!10854 = !DILocation(line: 2130, column: 23, scope: !10786)
!10855 = !DILocation(line: 2130, column: 56, scope: !10786)
!10856 = !DILocation(line: 2130, column: 63, scope: !10786)
!10857 = !DILocation(line: 2130, column: 87, scope: !10786)
!10858 = !DILocation(line: 2130, column: 95, scope: !10786)
!10859 = !DILocation(line: 2130, column: 5, scope: !10786)
!10860 = !DILocation(line: 2131, column: 21, scope: !10786)
!10861 = !DILocation(line: 2131, column: 40, scope: !10786)
!10862 = !DILocation(line: 2131, column: 47, scope: !10786)
!10863 = !DILocation(line: 2131, column: 5, scope: !10786)
!10864 = !DILocation(line: 2132, column: 23, scope: !10786)
!10865 = !DILocation(line: 2132, column: 47, scope: !10786)
!10866 = !DILocation(line: 2132, column: 54, scope: !10786)
!10867 = !DILocation(line: 2132, column: 69, scope: !10786)
!10868 = !DILocation(line: 2132, column: 77, scope: !10786)
!10869 = !DILocation(line: 2132, column: 5, scope: !10786)
!10870 = !DILocation(line: 2133, column: 9, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10786, file: !47, line: 2133, column: 9)
!10872 = !DILocation(line: 2133, column: 16, scope: !10871)
!10873 = !DILocation(line: 2133, column: 24, scope: !10871)
!10874 = !DILocation(line: 2133, column: 9, scope: !10786)
!10875 = !DILocation(line: 2133, column: 31, scope: !10876)
!10876 = !DILexicalBlockFile(scope: !10871, file: !47, discriminator: 1)
!10877 = distinct !{!10877, !10878}
!10878 = !DILocation(line: 2133, column: 31, scope: !10871)
!10879 = !DILocation(line: 2133, column: 36, scope: !10880)
!10880 = !DILexicalBlockFile(scope: !10881, file: !47, discriminator: 2)
!10881 = distinct !DILexicalBlock(scope: !10871, file: !47, line: 2133, column: 34)
!10882 = !DILocation(line: 2133, column: 32, scope: !10880)
!10883 = !DILocation(line: 2133, column: 39, scope: !10880)
!10884 = !DILocation(line: 2133, column: 60, scope: !10885)
!10885 = !DILexicalBlockFile(scope: !10880, file: !47, discriminator: 4)
!10886 = !DILocation(line: 2133, column: 69, scope: !10880)
!10887 = !DILocation(line: 2133, column: 88, scope: !10880)
!10888 = !DILocation(line: 2133, column: 49, scope: !10889)
!10889 = !DILexicalBlockFile(scope: !10880, file: !47, discriminator: 5)
!10890 = !DILocation(line: 2133, column: 97, scope: !10880)
!10891 = !DILocation(line: 2133, column: 97, scope: !10892)
!10892 = !DILexicalBlockFile(scope: !10881, file: !47, discriminator: 3)
!10893 = !DILocation(line: 2134, column: 30, scope: !10871)
!10894 = !DILocation(line: 2134, column: 10, scope: !10871)
!10895 = !DILocation(line: 2135, column: 9, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10786, file: !47, line: 2135, column: 9)
!10897 = !DILocation(line: 2135, column: 16, scope: !10896)
!10898 = !DILocation(line: 2135, column: 25, scope: !10896)
!10899 = !DILocation(line: 2135, column: 9, scope: !10786)
!10900 = !DILocation(line: 2135, column: 32, scope: !10901)
!10901 = !DILexicalBlockFile(scope: !10896, file: !47, discriminator: 1)
!10902 = distinct !{!10902, !10903}
!10903 = !DILocation(line: 2135, column: 32, scope: !10896)
!10904 = !DILocalVariable(name: "uv", scope: !10905, file: !47, line: 2135, type: !8654)
!10905 = distinct !DILexicalBlock(scope: !10896, file: !47, line: 2135, column: 35)
!10906 = !DILocation(line: 2135, column: 55, scope: !10905)
!10907 = !DILocation(line: 2135, column: 70, scope: !10908)
!10908 = !DILexicalBlockFile(scope: !10905, file: !47, discriminator: 2)
!10909 = !DILocation(line: 2135, column: 77, scope: !10908)
!10910 = !DILocation(line: 2135, column: 62, scope: !10908)
!10911 = !DILocation(line: 2135, column: 66, scope: !10908)
!10912 = !DILocation(line: 2135, column: 68, scope: !10908)
!10913 = !DILocation(line: 2135, column: 90, scope: !10908)
!10914 = !DILocation(line: 2135, column: 95, scope: !10908)
!10915 = !DILocation(line: 2135, column: 132, scope: !10908)
!10916 = !DILocation(line: 2135, column: 160, scope: !10908)
!10917 = !DILocation(line: 2135, column: 147, scope: !10908)
!10918 = !DILocation(line: 2135, column: 112, scope: !10919)
!10919 = !DILexicalBlockFile(scope: !10908, file: !47, discriminator: 4)
!10920 = !DILocation(line: 2135, column: 195, scope: !10908)
!10921 = !DILocation(line: 2135, column: 195, scope: !10922)
!10922 = !DILexicalBlockFile(scope: !10905, file: !47, discriminator: 3)
!10923 = !DILocation(line: 2136, column: 30, scope: !10896)
!10924 = !DILocation(line: 2136, column: 10, scope: !10896)
!10925 = !DILocation(line: 2138, column: 13, scope: !10786)
!10926 = !DILocation(line: 2138, column: 21, scope: !10786)
!10927 = !DILocation(line: 2138, column: 31, scope: !10786)
!10928 = !DILocation(line: 2138, column: 5, scope: !10786)
!10929 = !DILocation(line: 2142, column: 30, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10786, file: !47, line: 2138, column: 43)
!10931 = !DILocation(line: 2142, column: 42, scope: !10930)
!10932 = !DILocation(line: 2142, column: 49, scope: !10930)
!10933 = !DILocation(line: 2142, column: 9, scope: !10930)
!10934 = !DILocation(line: 2143, column: 30, scope: !10930)
!10935 = !DILocation(line: 2143, column: 43, scope: !10930)
!10936 = !DILocation(line: 2143, column: 50, scope: !10930)
!10937 = !DILocation(line: 2143, column: 9, scope: !10930)
!10938 = !DILocation(line: 2144, column: 33, scope: !10930)
!10939 = !DILocation(line: 2144, column: 40, scope: !10930)
!10940 = !DILocation(line: 2144, column: 13, scope: !10930)
!10941 = !DILocation(line: 2144, column: 11, scope: !10930)
!10942 = !DILocation(line: 2145, column: 13, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10930, file: !47, line: 2145, column: 13)
!10944 = !DILocation(line: 2145, column: 13, scope: !10930)
!10945 = !DILocation(line: 2145, column: 36, scope: !10946)
!10946 = !DILexicalBlockFile(scope: !10943, file: !47, discriminator: 1)
!10947 = !DILocation(line: 2145, column: 50, scope: !10946)
!10948 = !DILocation(line: 2145, column: 16, scope: !10946)
!10949 = !DILocation(line: 2146, column: 34, scope: !10943)
!10950 = !DILocation(line: 2146, column: 14, scope: !10943)
!10951 = !DILocation(line: 2147, column: 44, scope: !10930)
!10952 = !DILocation(line: 2147, column: 53, scope: !10930)
!10953 = !DILocation(line: 2147, column: 61, scope: !10930)
!10954 = !DILocation(line: 2147, column: 15, scope: !10930)
!10955 = !DILocation(line: 2147, column: 15, scope: !10956)
!10956 = !DILexicalBlockFile(scope: !10930, file: !47, discriminator: 1)
!10957 = !DILocation(line: 2148, column: 17, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10930, file: !47, line: 2148, column: 13)
!10959 = !DILocation(line: 2148, column: 13, scope: !10958)
!10960 = !DILocation(line: 2148, column: 13, scope: !10930)
!10961 = !DILocation(line: 2149, column: 35, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10958, file: !47, line: 2148, column: 22)
!10963 = !DILocation(line: 2149, column: 13, scope: !10962)
!10964 = !DILocation(line: 2150, column: 9, scope: !10962)
!10965 = !DILocation(line: 2151, column: 33, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10958, file: !47, line: 2150, column: 16)
!10967 = !DILocation(line: 2151, column: 13, scope: !10966)
!10968 = !DILocation(line: 2153, column: 9, scope: !10930)
!10969 = distinct !{!10969, !10968}
!10970 = !DILocation(line: 2153, column: 14, scope: !10971)
!10971 = !DILexicalBlockFile(scope: !10972, file: !47, discriminator: 1)
!10972 = distinct !DILexicalBlock(scope: !10930, file: !47, line: 2153, column: 12)
!10973 = !DILocation(line: 2153, column: 87, scope: !10971)
!10974 = !DILocation(line: 2153, column: 94, scope: !10971)
!10975 = !DILocation(line: 2153, column: 62, scope: !10976)
!10976 = !DILexicalBlockFile(scope: !10971, file: !47, discriminator: 2)
!10977 = !DILocation(line: 2153, column: 62, scope: !10971)
!10978 = !DILocation(line: 2153, column: 38, scope: !10979)
!10979 = !DILexicalBlockFile(scope: !10971, file: !47, discriminator: 3)
!10980 = !DILocation(line: 2153, column: 127, scope: !10971)
!10981 = !DILocation(line: 2153, column: 148, scope: !10971)
!10982 = !DILocation(line: 2153, column: 107, scope: !10983)
!10983 = !DILexicalBlockFile(scope: !10971, file: !47, discriminator: 4)
!10984 = !DILocation(line: 2153, column: 157, scope: !10971)
!10985 = !DILocation(line: 2154, column: 30, scope: !10930)
!10986 = !DILocation(line: 2154, column: 57, scope: !10930)
!10987 = !DILocation(line: 2154, column: 64, scope: !10930)
!10988 = !DILocation(line: 2154, column: 9, scope: !10930)
!10989 = !DILocation(line: 2155, column: 30, scope: !10930)
!10990 = !DILocation(line: 2155, column: 59, scope: !10930)
!10991 = !DILocation(line: 2155, column: 66, scope: !10930)
!10992 = !DILocation(line: 2155, column: 9, scope: !10930)
!10993 = !DILocation(line: 2156, column: 30, scope: !10930)
!10994 = !DILocation(line: 2156, column: 53, scope: !10930)
!10995 = !DILocation(line: 2156, column: 60, scope: !10930)
!10996 = !DILocation(line: 2156, column: 9, scope: !10930)
!10997 = !DILocation(line: 2157, column: 30, scope: !10930)
!10998 = !DILocation(line: 2157, column: 52, scope: !10930)
!10999 = !DILocation(line: 2157, column: 59, scope: !10930)
!11000 = !DILocation(line: 2157, column: 9, scope: !10930)
!11001 = !DILocation(line: 2158, column: 30, scope: !10930)
!11002 = !DILocation(line: 2158, column: 48, scope: !10930)
!11003 = !DILocation(line: 2158, column: 55, scope: !10930)
!11004 = !DILocation(line: 2158, column: 9, scope: !10930)
!11005 = !DILocation(line: 2160, column: 27, scope: !10930)
!11006 = !DILocation(line: 2160, column: 30, scope: !10930)
!11007 = !DILocation(line: 2160, column: 37, scope: !10930)
!11008 = !DILocation(line: 2160, column: 9, scope: !10930)
!11009 = !DILocation(line: 2161, column: 27, scope: !10930)
!11010 = !DILocation(line: 2161, column: 30, scope: !10930)
!11011 = !DILocation(line: 2161, column: 37, scope: !10930)
!11012 = !DILocation(line: 2161, column: 9, scope: !10930)
!11013 = !DILocation(line: 2162, column: 25, scope: !10930)
!11014 = !DILocation(line: 2162, column: 28, scope: !10930)
!11015 = !DILocation(line: 2162, column: 35, scope: !10930)
!11016 = !DILocation(line: 2162, column: 9, scope: !10930)
!11017 = !DILocation(line: 2163, column: 25, scope: !10930)
!11018 = !DILocation(line: 2163, column: 28, scope: !10930)
!11019 = !DILocation(line: 2163, column: 35, scope: !10930)
!11020 = !DILocation(line: 2163, column: 9, scope: !10930)
!11021 = !DILocation(line: 2164, column: 31, scope: !10930)
!11022 = !DILocation(line: 2164, column: 34, scope: !10930)
!11023 = !DILocation(line: 2164, column: 41, scope: !10930)
!11024 = !DILocation(line: 2164, column: 9, scope: !10930)
!11025 = !DILocation(line: 2165, column: 9, scope: !10930)
!11026 = !DILocation(line: 2168, column: 36, scope: !10930)
!11027 = !DILocation(line: 2168, column: 43, scope: !10930)
!11028 = !DILocation(line: 2168, column: 13, scope: !10930)
!11029 = !DILocation(line: 2168, column: 11, scope: !10930)
!11030 = !DILocation(line: 2169, column: 13, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !10930, file: !47, line: 2169, column: 13)
!11032 = !DILocation(line: 2169, column: 13, scope: !10930)
!11033 = !DILocation(line: 2169, column: 36, scope: !11034)
!11034 = !DILexicalBlockFile(scope: !11031, file: !47, discriminator: 1)
!11035 = !DILocation(line: 2169, column: 53, scope: !11034)
!11036 = !DILocation(line: 2169, column: 16, scope: !11034)
!11037 = !DILocation(line: 2170, column: 34, scope: !11031)
!11038 = !DILocation(line: 2170, column: 14, scope: !11031)
!11039 = !DILocation(line: 2171, column: 30, scope: !10930)
!11040 = !DILocation(line: 2171, column: 47, scope: !10930)
!11041 = !DILocation(line: 2171, column: 54, scope: !10930)
!11042 = !DILocation(line: 2171, column: 9, scope: !10930)
!11043 = !DILocation(line: 2172, column: 30, scope: !10930)
!11044 = !DILocation(line: 2172, column: 45, scope: !10930)
!11045 = !DILocation(line: 2172, column: 52, scope: !10930)
!11046 = !DILocation(line: 2172, column: 9, scope: !10930)
!11047 = !DILocation(line: 2173, column: 13, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !10930, file: !47, line: 2173, column: 13)
!11049 = !DILocation(line: 2173, column: 20, scope: !11048)
!11050 = !DILocation(line: 2173, column: 13, scope: !10930)
!11051 = !DILocation(line: 2174, column: 13, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11048, file: !47, line: 2173, column: 36)
!11053 = !DILocation(line: 2175, column: 45, scope: !11052)
!11054 = !DILocation(line: 2175, column: 52, scope: !11052)
!11055 = !DILocation(line: 2176, column: 38, scope: !11052)
!11056 = !DILocation(line: 2176, column: 45, scope: !11052)
!11057 = !DILocation(line: 2175, column: 13, scope: !11052)
!11058 = !DILocation(line: 2177, column: 33, scope: !11052)
!11059 = !DILocation(line: 2177, column: 59, scope: !11052)
!11060 = !DILocation(line: 2177, column: 13, scope: !11052)
!11061 = !DILocation(line: 2178, column: 9, scope: !11052)
!11062 = !DILocation(line: 2179, column: 33, scope: !11048)
!11063 = !DILocation(line: 2179, column: 13, scope: !11048)
!11064 = !DILocation(line: 2180, column: 9, scope: !10930)
!11065 = !DILocation(line: 2182, column: 9, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !10786, file: !47, line: 2182, column: 9)
!11067 = !DILocation(line: 2182, column: 9, scope: !10786)
!11068 = !DILocation(line: 2183, column: 19, scope: !11066)
!11069 = !DILocation(line: 2183, column: 22, scope: !11066)
!11070 = !DILocation(line: 2183, column: 29, scope: !11066)
!11071 = !DILocation(line: 2183, column: 9, scope: !11066)
!11072 = !DILocation(line: 2184, column: 9, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !10786, file: !47, line: 2184, column: 9)
!11074 = !DILocation(line: 2184, column: 9, scope: !10786)
!11075 = !DILocation(line: 2185, column: 18, scope: !11073)
!11076 = !DILocation(line: 2185, column: 66, scope: !11073)
!11077 = !DILocation(line: 2185, column: 9, scope: !11073)
!11078 = !DILocation(line: 2186, column: 9, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !10786, file: !47, line: 2186, column: 9)
!11080 = !DILocation(line: 2186, column: 16, scope: !11079)
!11081 = !DILocation(line: 2186, column: 9, scope: !10786)
!11082 = !DILocation(line: 2187, column: 37, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11079, file: !47, line: 2186, column: 30)
!11084 = !DILocation(line: 2187, column: 9, scope: !11083)
!11085 = !DILocation(line: 2188, column: 16, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11083, file: !47, line: 2188, column: 9)
!11087 = !DILocation(line: 2188, column: 14, scope: !11086)
!11088 = !DILocation(line: 2188, column: 21, scope: !11089)
!11089 = !DILexicalBlockFile(scope: !11090, file: !47, discriminator: 1)
!11090 = distinct !DILexicalBlock(scope: !11086, file: !47, line: 2188, column: 9)
!11091 = !DILocation(line: 2188, column: 25, scope: !11089)
!11092 = !DILocation(line: 2188, column: 32, scope: !11089)
!11093 = !DILocation(line: 2188, column: 23, scope: !11089)
!11094 = !DILocation(line: 2188, column: 9, scope: !11089)
!11095 = !DILocalVariable(name: "sd", scope: !11096, file: !47, line: 2189, type: !1415)
!11096 = distinct !DILexicalBlock(scope: !11090, file: !47, line: 2188, column: 51)
!11097 = !DILocation(line: 2189, column: 30, scope: !11096)
!11098 = !DILocation(line: 2189, column: 52, scope: !11096)
!11099 = !DILocation(line: 2189, column: 35, scope: !11096)
!11100 = !DILocation(line: 2189, column: 42, scope: !11096)
!11101 = !DILocalVariable(name: "name", scope: !11096, file: !47, line: 2190, type: !1027)
!11102 = !DILocation(line: 2190, column: 25, scope: !11096)
!11103 = !DILocation(line: 2192, column: 41, scope: !11096)
!11104 = !DILocation(line: 2192, column: 13, scope: !11096)
!11105 = !DILocation(line: 2193, column: 44, scope: !11096)
!11106 = !DILocation(line: 2193, column: 48, scope: !11096)
!11107 = !DILocation(line: 2193, column: 20, scope: !11096)
!11108 = !DILocation(line: 2193, column: 18, scope: !11096)
!11109 = !DILocation(line: 2194, column: 33, scope: !11096)
!11110 = !DILocation(line: 2194, column: 54, scope: !11096)
!11111 = !DILocation(line: 2194, column: 61, scope: !11112)
!11112 = !DILexicalBlockFile(scope: !11096, file: !47, discriminator: 1)
!11113 = !DILocation(line: 2194, column: 54, scope: !11112)
!11114 = !DILocation(line: 2194, column: 54, scope: !11115)
!11115 = !DILexicalBlockFile(scope: !11096, file: !47, discriminator: 2)
!11116 = !DILocation(line: 2194, column: 54, scope: !11117)
!11117 = !DILexicalBlockFile(scope: !11096, file: !47, discriminator: 3)
!11118 = !DILocation(line: 2194, column: 13, scope: !11117)
!11119 = !DILocation(line: 2195, column: 17, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11096, file: !47, line: 2195, column: 17)
!11121 = !DILocation(line: 2195, column: 21, scope: !11120)
!11122 = !DILocation(line: 2195, column: 26, scope: !11120)
!11123 = !DILocation(line: 2195, column: 57, scope: !11120)
!11124 = !DILocation(line: 2195, column: 60, scope: !11125)
!11125 = !DILexicalBlockFile(scope: !11120, file: !47, discriminator: 1)
!11126 = !DILocation(line: 2195, column: 64, scope: !11125)
!11127 = !DILocation(line: 2195, column: 69, scope: !11125)
!11128 = !DILocation(line: 2195, column: 17, scope: !11125)
!11129 = !DILocation(line: 2196, column: 39, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11120, file: !47, line: 2195, column: 77)
!11131 = !DILocation(line: 2196, column: 59, scope: !11130)
!11132 = !DILocation(line: 2196, column: 63, scope: !11130)
!11133 = !DILocation(line: 2196, column: 17, scope: !11130)
!11134 = !DILocation(line: 2197, column: 38, scope: !11130)
!11135 = !DILocation(line: 2197, column: 88, scope: !11130)
!11136 = !DILocation(line: 2197, column: 92, scope: !11130)
!11137 = !DILocation(line: 2197, column: 77, scope: !11130)
!11138 = !DILocation(line: 2197, column: 53, scope: !11130)
!11139 = !DILocation(line: 2197, column: 17, scope: !11140)
!11140 = !DILexicalBlockFile(scope: !11130, file: !47, discriminator: 1)
!11141 = !DILocation(line: 2198, column: 13, scope: !11130)
!11142 = !DILocation(line: 2198, column: 24, scope: !11143)
!11143 = !DILexicalBlockFile(scope: !11144, file: !47, discriminator: 1)
!11144 = distinct !DILexicalBlock(scope: !11120, file: !47, line: 2198, column: 24)
!11145 = !DILocation(line: 2198, column: 28, scope: !11143)
!11146 = !DILocation(line: 2198, column: 33, scope: !11143)
!11147 = !DILocation(line: 2198, column: 63, scope: !11143)
!11148 = !DILocation(line: 2198, column: 66, scope: !11149)
!11149 = !DILexicalBlockFile(scope: !11144, file: !47, discriminator: 2)
!11150 = !DILocation(line: 2198, column: 70, scope: !11149)
!11151 = !DILocation(line: 2198, column: 75, scope: !11149)
!11152 = !DILocation(line: 2198, column: 24, scope: !11149)
!11153 = !DILocalVariable(name: "tcbuf", scope: !11154, file: !47, line: 2199, type: !11155)
!11154 = distinct !DILexicalBlock(scope: !11144, file: !47, line: 2198, column: 81)
!11155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 184, align: 8, elements: !11156)
!11156 = !{!11157}
!11157 = !DISubrange(count: 23)
!11158 = !DILocation(line: 2199, column: 22, scope: !11154)
!11159 = !DILocation(line: 2200, column: 49, scope: !11154)
!11160 = !DILocation(line: 2200, column: 69, scope: !11154)
!11161 = !DILocation(line: 2200, column: 73, scope: !11154)
!11162 = !DILocation(line: 2200, column: 56, scope: !11154)
!11163 = !DILocation(line: 2200, column: 17, scope: !11154)
!11164 = !DILocation(line: 2201, column: 37, scope: !11154)
!11165 = !DILocation(line: 2201, column: 52, scope: !11154)
!11166 = !DILocation(line: 2201, column: 17, scope: !11154)
!11167 = !DILocation(line: 2202, column: 13, scope: !11154)
!11168 = !DILocation(line: 2202, column: 24, scope: !11169)
!11169 = !DILexicalBlockFile(scope: !11170, file: !47, discriminator: 1)
!11170 = distinct !DILexicalBlock(scope: !11144, file: !47, line: 2202, column: 24)
!11171 = !DILocation(line: 2202, column: 28, scope: !11169)
!11172 = !DILocation(line: 2202, column: 33, scope: !11169)
!11173 = !DILocalVariable(name: "metadata", scope: !11174, file: !47, line: 2203, type: !1141)
!11174 = distinct !DILexicalBlock(scope: !11170, file: !47, line: 2202, column: 78)
!11175 = !DILocation(line: 2203, column: 45, scope: !11174)
!11176 = !DILocation(line: 2203, column: 86, scope: !11174)
!11177 = !DILocation(line: 2203, column: 90, scope: !11174)
!11178 = !DILocation(line: 2203, column: 56, scope: !11174)
!11179 = !DILocation(line: 2205, column: 21, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11174, file: !47, line: 2205, column: 21)
!11181 = !DILocation(line: 2205, column: 31, scope: !11180)
!11182 = !DILocation(line: 2205, column: 21, scope: !11174)
!11183 = !DILocation(line: 2206, column: 43, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11180, file: !47, line: 2205, column: 46)
!11185 = !DILocation(line: 2206, column: 55, scope: !11184)
!11186 = !DILocation(line: 2206, column: 65, scope: !11184)
!11187 = !DILocation(line: 2206, column: 21, scope: !11184)
!11188 = !DILocation(line: 2207, column: 43, scope: !11184)
!11189 = !DILocation(line: 2207, column: 55, scope: !11184)
!11190 = !DILocation(line: 2207, column: 65, scope: !11184)
!11191 = !DILocation(line: 2207, column: 21, scope: !11184)
!11192 = !DILocation(line: 2208, column: 43, scope: !11184)
!11193 = !DILocation(line: 2208, column: 57, scope: !11184)
!11194 = !DILocation(line: 2208, column: 67, scope: !11184)
!11195 = !DILocation(line: 2208, column: 21, scope: !11184)
!11196 = !DILocation(line: 2209, column: 43, scope: !11184)
!11197 = !DILocation(line: 2209, column: 57, scope: !11184)
!11198 = !DILocation(line: 2209, column: 67, scope: !11184)
!11199 = !DILocation(line: 2209, column: 21, scope: !11184)
!11200 = !DILocation(line: 2210, column: 43, scope: !11184)
!11201 = !DILocation(line: 2210, column: 56, scope: !11184)
!11202 = !DILocation(line: 2210, column: 66, scope: !11184)
!11203 = !DILocation(line: 2210, column: 21, scope: !11184)
!11204 = !DILocation(line: 2211, column: 43, scope: !11184)
!11205 = !DILocation(line: 2211, column: 56, scope: !11184)
!11206 = !DILocation(line: 2211, column: 66, scope: !11184)
!11207 = !DILocation(line: 2211, column: 21, scope: !11184)
!11208 = !DILocation(line: 2213, column: 43, scope: !11184)
!11209 = !DILocation(line: 2213, column: 63, scope: !11184)
!11210 = !DILocation(line: 2213, column: 73, scope: !11184)
!11211 = !DILocation(line: 2213, column: 21, scope: !11184)
!11212 = !DILocation(line: 2214, column: 43, scope: !11184)
!11213 = !DILocation(line: 2214, column: 63, scope: !11184)
!11214 = !DILocation(line: 2214, column: 73, scope: !11184)
!11215 = !DILocation(line: 2214, column: 21, scope: !11184)
!11216 = !DILocation(line: 2215, column: 17, scope: !11184)
!11217 = !DILocation(line: 2217, column: 21, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11174, file: !47, line: 2217, column: 21)
!11219 = !DILocation(line: 2217, column: 31, scope: !11218)
!11220 = !DILocation(line: 2217, column: 21, scope: !11174)
!11221 = !DILocation(line: 2218, column: 43, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11218, file: !47, line: 2217, column: 46)
!11223 = !DILocation(line: 2218, column: 63, scope: !11222)
!11224 = !DILocation(line: 2218, column: 73, scope: !11222)
!11225 = !DILocation(line: 2218, column: 21, scope: !11222)
!11226 = !DILocation(line: 2219, column: 43, scope: !11222)
!11227 = !DILocation(line: 2219, column: 63, scope: !11222)
!11228 = !DILocation(line: 2219, column: 73, scope: !11222)
!11229 = !DILocation(line: 2219, column: 21, scope: !11222)
!11230 = !DILocation(line: 2220, column: 17, scope: !11222)
!11231 = !DILocation(line: 2221, column: 13, scope: !11174)
!11232 = !DILocation(line: 2221, column: 24, scope: !11233)
!11233 = !DILexicalBlockFile(scope: !11234, file: !47, discriminator: 1)
!11234 = distinct !DILexicalBlock(scope: !11170, file: !47, line: 2221, column: 24)
!11235 = !DILocation(line: 2221, column: 28, scope: !11233)
!11236 = !DILocation(line: 2221, column: 33, scope: !11233)
!11237 = !DILocalVariable(name: "metadata", scope: !11238, file: !47, line: 2222, type: !1158)
!11238 = distinct !DILexicalBlock(scope: !11234, file: !47, line: 2221, column: 71)
!11239 = !DILocation(line: 2222, column: 41, scope: !11238)
!11240 = !DILocation(line: 2222, column: 78, scope: !11238)
!11241 = !DILocation(line: 2222, column: 82, scope: !11238)
!11242 = !DILocation(line: 2222, column: 52, scope: !11238)
!11243 = !DILocation(line: 2223, column: 38, scope: !11238)
!11244 = !DILocation(line: 2223, column: 56, scope: !11238)
!11245 = !DILocation(line: 2223, column: 66, scope: !11238)
!11246 = !DILocation(line: 2223, column: 17, scope: !11238)
!11247 = !DILocation(line: 2224, column: 38, scope: !11238)
!11248 = !DILocation(line: 2224, column: 56, scope: !11238)
!11249 = !DILocation(line: 2224, column: 66, scope: !11238)
!11250 = !DILocation(line: 2224, column: 17, scope: !11238)
!11251 = !DILocation(line: 2225, column: 13, scope: !11238)
!11252 = !DILocation(line: 2225, column: 24, scope: !11253)
!11253 = !DILexicalBlockFile(scope: !11254, file: !47, discriminator: 1)
!11254 = distinct !DILexicalBlock(scope: !11234, file: !47, line: 2225, column: 24)
!11255 = !DILocation(line: 2225, column: 28, scope: !11253)
!11256 = !DILocation(line: 2225, column: 33, scope: !11253)
!11257 = !DILocalVariable(name: "tag", scope: !11258, file: !47, line: 2226, type: !3520)
!11258 = distinct !DILexicalBlock(scope: !11254, file: !47, line: 2225, column: 63)
!11259 = !DILocation(line: 2226, column: 36, scope: !11258)
!11260 = !DILocation(line: 2226, column: 54, scope: !11258)
!11261 = !DILocation(line: 2226, column: 58, scope: !11258)
!11262 = !DILocation(line: 2226, column: 42, scope: !11258)
!11263 = !DILocation(line: 2227, column: 21, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11258, file: !47, line: 2227, column: 21)
!11265 = !DILocation(line: 2227, column: 21, scope: !11258)
!11266 = !DILocation(line: 2228, column: 41, scope: !11264)
!11267 = !DILocation(line: 2228, column: 44, scope: !11264)
!11268 = !DILocation(line: 2228, column: 49, scope: !11264)
!11269 = !DILocation(line: 2228, column: 54, scope: !11264)
!11270 = !DILocation(line: 2228, column: 59, scope: !11264)
!11271 = !DILocation(line: 2228, column: 21, scope: !11264)
!11272 = !DILocation(line: 2229, column: 38, scope: !11258)
!11273 = !DILocation(line: 2229, column: 49, scope: !11258)
!11274 = !DILocation(line: 2229, column: 53, scope: !11258)
!11275 = !DILocation(line: 2229, column: 17, scope: !11258)
!11276 = !DILocation(line: 2230, column: 13, scope: !11258)
!11277 = !DILocation(line: 2231, column: 41, scope: !11096)
!11278 = !DILocation(line: 2231, column: 13, scope: !11096)
!11279 = !DILocation(line: 2232, column: 9, scope: !11096)
!11280 = !DILocation(line: 2188, column: 47, scope: !11281)
!11281 = !DILexicalBlockFile(scope: !11090, file: !47, discriminator: 2)
!11282 = !DILocation(line: 2188, column: 9, scope: !11281)
!11283 = distinct !{!11283, !11284}
!11284 = !DILocation(line: 2188, column: 9, scope: !11083)
!11285 = !DILocation(line: 2233, column: 37, scope: !11083)
!11286 = !DILocation(line: 2233, column: 9, scope: !11083)
!11287 = !DILocation(line: 2234, column: 5, scope: !11083)
!11288 = !DILocation(line: 2236, column: 33, scope: !10786)
!11289 = !DILocation(line: 2236, column: 5, scope: !10786)
!11290 = !DILocation(line: 2238, column: 5, scope: !10786)
!11291 = !DILocation(line: 2239, column: 11, scope: !10786)
!11292 = !DILocation(line: 2239, column: 5, scope: !10786)
!11293 = !DILocation(line: 2240, column: 1, scope: !10786)
!11294 = distinct !DISubprogram(name: "print_color_range", scope: !47, file: !47, line: 1928, type: !11295, isLocal: true, isDefinition: true, scopeLine: 1929, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!11295 = !DISubroutineType(types: !11296)
!11296 = !{null, !2418, !617}
!11297 = !DILocalVariable(name: "w", arg: 1, scope: !11294, file: !47, line: 1928, type: !2418)
!11298 = !DILocation(line: 1928, column: 46, scope: !11294)
!11299 = !DILocalVariable(name: "color_range", arg: 2, scope: !11294, file: !47, line: 1928, type: !617)
!11300 = !DILocation(line: 1928, column: 67, scope: !11294)
!11301 = !DILocalVariable(name: "val", scope: !11294, file: !47, line: 1930, type: !1027)
!11302 = !DILocation(line: 1930, column: 17, scope: !11294)
!11303 = !DILocation(line: 1930, column: 43, scope: !11294)
!11304 = !DILocation(line: 1930, column: 23, scope: !11294)
!11305 = !DILocation(line: 1931, column: 10, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11294, file: !47, line: 1931, column: 9)
!11307 = !DILocation(line: 1931, column: 14, scope: !11306)
!11308 = !DILocation(line: 1931, column: 17, scope: !11309)
!11309 = !DILexicalBlockFile(scope: !11306, file: !47, discriminator: 1)
!11310 = !DILocation(line: 1931, column: 29, scope: !11309)
!11311 = !DILocation(line: 1931, column: 9, scope: !11309)
!11312 = !DILocation(line: 1932, column: 29, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11306, file: !47, line: 1931, column: 57)
!11314 = !DILocation(line: 1932, column: 9, scope: !11313)
!11315 = !DILocation(line: 1933, column: 5, scope: !11313)
!11316 = !DILocation(line: 1934, column: 29, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11306, file: !47, line: 1933, column: 12)
!11318 = !DILocation(line: 1934, column: 47, scope: !11317)
!11319 = !DILocation(line: 1934, column: 9, scope: !11317)
!11320 = !DILocation(line: 1936, column: 1, scope: !11294)
!11321 = distinct !DISubprogram(name: "print_color_space", scope: !47, file: !47, line: 1938, type: !11322, isLocal: true, isDefinition: true, scopeLine: 1939, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!11322 = !DISubroutineType(types: !11323)
!11323 = !{null, !2418, !666}
!11324 = !DILocalVariable(name: "w", arg: 1, scope: !11321, file: !47, line: 1938, type: !2418)
!11325 = !DILocation(line: 1938, column: 46, scope: !11321)
!11326 = !DILocalVariable(name: "color_space", arg: 2, scope: !11321, file: !47, line: 1938, type: !666)
!11327 = !DILocation(line: 1938, column: 67, scope: !11321)
!11328 = !DILocalVariable(name: "val", scope: !11321, file: !47, line: 1940, type: !1027)
!11329 = !DILocation(line: 1940, column: 17, scope: !11321)
!11330 = !DILocation(line: 1940, column: 43, scope: !11321)
!11331 = !DILocation(line: 1940, column: 23, scope: !11321)
!11332 = !DILocation(line: 1941, column: 10, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11321, file: !47, line: 1941, column: 9)
!11334 = !DILocation(line: 1941, column: 14, scope: !11333)
!11335 = !DILocation(line: 1941, column: 17, scope: !11336)
!11336 = !DILexicalBlockFile(scope: !11333, file: !47, discriminator: 1)
!11337 = !DILocation(line: 1941, column: 29, scope: !11336)
!11338 = !DILocation(line: 1941, column: 9, scope: !11336)
!11339 = !DILocation(line: 1942, column: 29, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11333, file: !47, line: 1941, column: 55)
!11341 = !DILocation(line: 1942, column: 9, scope: !11340)
!11342 = !DILocation(line: 1943, column: 5, scope: !11340)
!11343 = !DILocation(line: 1944, column: 29, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11333, file: !47, line: 1943, column: 12)
!11345 = !DILocation(line: 1944, column: 47, scope: !11344)
!11346 = !DILocation(line: 1944, column: 9, scope: !11344)
!11347 = !DILocation(line: 1946, column: 1, scope: !11321)
!11348 = distinct !DISubprogram(name: "print_primaries", scope: !47, file: !47, line: 1948, type: !11349, isLocal: true, isDefinition: true, scopeLine: 1949, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!11349 = !DISubroutineType(types: !11350)
!11350 = !{null, !2418, !624}
!11351 = !DILocalVariable(name: "w", arg: 1, scope: !11348, file: !47, line: 1948, type: !2418)
!11352 = !DILocation(line: 1948, column: 44, scope: !11348)
!11353 = !DILocalVariable(name: "color_primaries", arg: 2, scope: !11348, file: !47, line: 1948, type: !624)
!11354 = !DILocation(line: 1948, column: 69, scope: !11348)
!11355 = !DILocalVariable(name: "val", scope: !11348, file: !47, line: 1950, type: !1027)
!11356 = !DILocation(line: 1950, column: 17, scope: !11348)
!11357 = !DILocation(line: 1950, column: 47, scope: !11348)
!11358 = !DILocation(line: 1950, column: 23, scope: !11348)
!11359 = !DILocation(line: 1951, column: 10, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11348, file: !47, line: 1951, column: 9)
!11361 = !DILocation(line: 1951, column: 14, scope: !11360)
!11362 = !DILocation(line: 1951, column: 17, scope: !11363)
!11363 = !DILexicalBlockFile(scope: !11360, file: !47, discriminator: 1)
!11364 = !DILocation(line: 1951, column: 33, scope: !11363)
!11365 = !DILocation(line: 1951, column: 9, scope: !11363)
!11366 = !DILocation(line: 1952, column: 29, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11360, file: !47, line: 1951, column: 59)
!11368 = !DILocation(line: 1952, column: 9, scope: !11367)
!11369 = !DILocation(line: 1953, column: 5, scope: !11367)
!11370 = !DILocation(line: 1954, column: 29, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11360, file: !47, line: 1953, column: 12)
!11372 = !DILocation(line: 1954, column: 51, scope: !11371)
!11373 = !DILocation(line: 1954, column: 9, scope: !11371)
!11374 = !DILocation(line: 1956, column: 1, scope: !11348)
!11375 = distinct !DISubprogram(name: "print_color_trc", scope: !47, file: !47, line: 1958, type: !11376, isLocal: true, isDefinition: true, scopeLine: 1959, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!11376 = !DISubroutineType(types: !11377)
!11377 = !{null, !2418, !642}
!11378 = !DILocalVariable(name: "w", arg: 1, scope: !11375, file: !47, line: 1958, type: !2418)
!11379 = !DILocation(line: 1958, column: 44, scope: !11375)
!11380 = !DILocalVariable(name: "color_trc", arg: 2, scope: !11375, file: !47, line: 1958, type: !642)
!11381 = !DILocation(line: 1958, column: 82, scope: !11375)
!11382 = !DILocalVariable(name: "val", scope: !11375, file: !47, line: 1960, type: !1027)
!11383 = !DILocation(line: 1960, column: 17, scope: !11375)
!11384 = !DILocation(line: 1960, column: 46, scope: !11375)
!11385 = !DILocation(line: 1960, column: 23, scope: !11375)
!11386 = !DILocation(line: 1961, column: 10, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11375, file: !47, line: 1961, column: 9)
!11388 = !DILocation(line: 1961, column: 14, scope: !11387)
!11389 = !DILocation(line: 1961, column: 17, scope: !11390)
!11390 = !DILexicalBlockFile(scope: !11387, file: !47, discriminator: 1)
!11391 = !DILocation(line: 1961, column: 27, scope: !11390)
!11392 = !DILocation(line: 1961, column: 9, scope: !11390)
!11393 = !DILocation(line: 1962, column: 29, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11387, file: !47, line: 1961, column: 53)
!11395 = !DILocation(line: 1962, column: 9, scope: !11394)
!11396 = !DILocation(line: 1963, column: 5, scope: !11394)
!11397 = !DILocation(line: 1964, column: 29, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11387, file: !47, line: 1963, column: 12)
!11399 = !DILocation(line: 1964, column: 50, scope: !11398)
!11400 = !DILocation(line: 1964, column: 9, scope: !11398)
!11401 = !DILocation(line: 1966, column: 1, scope: !11375)
!11402 = distinct !DISubprogram(name: "print_chroma_location", scope: !47, file: !47, line: 1968, type: !11403, isLocal: true, isDefinition: true, scopeLine: 1969, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!11403 = !DISubroutineType(types: !11404)
!11404 = !{null, !2418, !685}
!11405 = !DILocalVariable(name: "w", arg: 1, scope: !11402, file: !47, line: 1968, type: !2418)
!11406 = !DILocation(line: 1968, column: 50, scope: !11402)
!11407 = !DILocalVariable(name: "chroma_location", arg: 2, scope: !11402, file: !47, line: 1968, type: !685)
!11408 = !DILocation(line: 1968, column: 75, scope: !11402)
!11409 = !DILocalVariable(name: "val", scope: !11402, file: !47, line: 1970, type: !1027)
!11410 = !DILocation(line: 1970, column: 17, scope: !11402)
!11411 = !DILocation(line: 1970, column: 47, scope: !11402)
!11412 = !DILocation(line: 1970, column: 23, scope: !11402)
!11413 = !DILocation(line: 1971, column: 10, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11402, file: !47, line: 1971, column: 9)
!11415 = !DILocation(line: 1971, column: 14, scope: !11414)
!11416 = !DILocation(line: 1971, column: 17, scope: !11417)
!11417 = !DILexicalBlockFile(scope: !11414, file: !47, discriminator: 1)
!11418 = !DILocation(line: 1971, column: 33, scope: !11417)
!11419 = !DILocation(line: 1971, column: 9, scope: !11417)
!11420 = !DILocation(line: 1972, column: 29, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11414, file: !47, line: 1971, column: 62)
!11422 = !DILocation(line: 1972, column: 9, scope: !11421)
!11423 = !DILocation(line: 1973, column: 5, scope: !11421)
!11424 = !DILocation(line: 1974, column: 29, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11414, file: !47, line: 1973, column: 12)
!11426 = !DILocation(line: 1974, column: 51, scope: !11425)
!11427 = !DILocation(line: 1974, column: 9, scope: !11425)
!11428 = !DILocation(line: 1976, column: 1, scope: !11402)
!11429 = distinct !DISubprogram(name: "show_log", scope: !47, file: !47, line: 1995, type: !11430, isLocal: true, isDefinition: true, scopeLine: 1996, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!11430 = !DISubroutineType(types: !11431)
!11431 = !{!1041, !2418, !1041, !1041, !1041}
!11432 = !DILocalVariable(name: "w", arg: 1, scope: !11429, file: !47, line: 1995, type: !2418)
!11433 = !DILocation(line: 1995, column: 36, scope: !11429)
!11434 = !DILocalVariable(name: "section_ids", arg: 2, scope: !11429, file: !47, line: 1995, type: !1041)
!11435 = !DILocation(line: 1995, column: 43, scope: !11429)
!11436 = !DILocalVariable(name: "section_id", arg: 3, scope: !11429, file: !47, line: 1995, type: !1041)
!11437 = !DILocation(line: 1995, column: 60, scope: !11429)
!11438 = !DILocalVariable(name: "log_level", arg: 4, scope: !11429, file: !47, line: 1995, type: !1041)
!11439 = !DILocation(line: 1995, column: 76, scope: !11429)
!11440 = !DILocalVariable(name: "i", scope: !11429, file: !47, line: 1997, type: !1041)
!11441 = !DILocation(line: 1997, column: 9, scope: !11429)
!11442 = !DILocation(line: 1998, column: 5, scope: !11429)
!11443 = !DILocation(line: 1999, column: 10, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11429, file: !47, line: 1999, column: 9)
!11445 = !DILocation(line: 1999, column: 9, scope: !11429)
!11446 = !DILocation(line: 2000, column: 9, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11444, file: !47, line: 1999, column: 27)
!11448 = !DILocation(line: 2001, column: 9, scope: !11447)
!11449 = !DILocation(line: 2003, column: 33, scope: !11429)
!11450 = !DILocation(line: 2003, column: 36, scope: !11429)
!11451 = !DILocation(line: 2003, column: 5, scope: !11429)
!11452 = !DILocation(line: 2005, column: 11, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11429, file: !47, line: 2005, column: 5)
!11454 = !DILocation(line: 2005, column: 10, scope: !11453)
!11455 = !DILocation(line: 2005, column: 15, scope: !11456)
!11456 = !DILexicalBlockFile(scope: !11457, file: !47, discriminator: 1)
!11457 = distinct !DILexicalBlock(scope: !11453, file: !47, line: 2005, column: 5)
!11458 = !DILocation(line: 2005, column: 17, scope: !11456)
!11459 = !DILocation(line: 2005, column: 16, scope: !11456)
!11460 = !DILocation(line: 2005, column: 5, scope: !11456)
!11461 = !DILocation(line: 2006, column: 24, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !47, line: 2006, column: 13)
!11463 = distinct !DILexicalBlock(scope: !11457, file: !47, line: 2005, column: 39)
!11464 = !DILocation(line: 2006, column: 13, scope: !11462)
!11465 = !DILocation(line: 2006, column: 27, scope: !11462)
!11466 = !DILocation(line: 2006, column: 40, scope: !11462)
!11467 = !DILocation(line: 2006, column: 37, scope: !11462)
!11468 = !DILocation(line: 2006, column: 13, scope: !11463)
!11469 = !DILocation(line: 2007, column: 41, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11462, file: !47, line: 2006, column: 51)
!11471 = !DILocation(line: 2007, column: 44, scope: !11470)
!11472 = !DILocation(line: 2007, column: 13, scope: !11470)
!11473 = !DILocation(line: 2008, column: 33, scope: !11470)
!11474 = !DILocation(line: 2008, column: 58, scope: !11470)
!11475 = !DILocation(line: 2008, column: 47, scope: !11470)
!11476 = !DILocation(line: 2008, column: 61, scope: !11470)
!11477 = !DILocation(line: 2008, column: 13, scope: !11470)
!11478 = !DILocation(line: 2009, column: 34, scope: !11470)
!11479 = !DILocation(line: 2009, column: 57, scope: !11470)
!11480 = !DILocation(line: 2009, column: 46, scope: !11470)
!11481 = !DILocation(line: 2009, column: 60, scope: !11470)
!11482 = !DILocation(line: 2009, column: 13, scope: !11470)
!11483 = !DILocation(line: 2010, column: 34, scope: !11470)
!11484 = !DILocation(line: 2010, column: 60, scope: !11470)
!11485 = !DILocation(line: 2010, column: 49, scope: !11470)
!11486 = !DILocation(line: 2010, column: 63, scope: !11470)
!11487 = !DILocation(line: 2010, column: 13, scope: !11470)
!11488 = !DILocation(line: 2011, column: 28, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11470, file: !47, line: 2011, column: 17)
!11490 = !DILocation(line: 2011, column: 17, scope: !11489)
!11491 = !DILocation(line: 2011, column: 31, scope: !11489)
!11492 = !DILocation(line: 2011, column: 17, scope: !11470)
!11493 = !DILocation(line: 2012, column: 37, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11489, file: !47, line: 2011, column: 44)
!11495 = !DILocation(line: 2012, column: 69, scope: !11494)
!11496 = !DILocation(line: 2012, column: 58, scope: !11494)
!11497 = !DILocation(line: 2012, column: 72, scope: !11494)
!11498 = !DILocation(line: 2012, column: 17, scope: !11494)
!11499 = !DILocation(line: 2013, column: 38, scope: !11494)
!11500 = !DILocation(line: 2013, column: 71, scope: !11494)
!11501 = !DILocation(line: 2013, column: 60, scope: !11494)
!11502 = !DILocation(line: 2013, column: 74, scope: !11494)
!11503 = !DILocation(line: 2013, column: 17, scope: !11494)
!11504 = !DILocation(line: 2014, column: 13, scope: !11494)
!11505 = !DILocation(line: 2015, column: 37, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11489, file: !47, line: 2014, column: 20)
!11507 = !DILocation(line: 2015, column: 17, scope: !11506)
!11508 = !DILocation(line: 2016, column: 37, scope: !11506)
!11509 = !DILocation(line: 2016, column: 17, scope: !11506)
!11510 = !DILocation(line: 2018, column: 33, scope: !11470)
!11511 = !DILocation(line: 2018, column: 58, scope: !11470)
!11512 = !DILocation(line: 2018, column: 47, scope: !11470)
!11513 = !DILocation(line: 2018, column: 61, scope: !11470)
!11514 = !DILocation(line: 2018, column: 13, scope: !11470)
!11515 = !DILocation(line: 2019, column: 41, scope: !11470)
!11516 = !DILocation(line: 2019, column: 13, scope: !11470)
!11517 = !DILocation(line: 2020, column: 9, scope: !11470)
!11518 = !DILocation(line: 2021, column: 5, scope: !11463)
!11519 = !DILocation(line: 2005, column: 35, scope: !11520)
!11520 = !DILexicalBlockFile(scope: !11457, file: !47, discriminator: 2)
!11521 = !DILocation(line: 2005, column: 5, scope: !11520)
!11522 = distinct !{!11522, !11523}
!11523 = !DILocation(line: 2005, column: 5, scope: !11429)
!11524 = !DILocation(line: 2022, column: 5, scope: !11429)
!11525 = !DILocation(line: 2023, column: 5, scope: !11429)
!11526 = !DILocation(line: 2025, column: 33, scope: !11429)
!11527 = !DILocation(line: 2025, column: 5, scope: !11429)
!11528 = !DILocation(line: 2027, column: 5, scope: !11429)
!11529 = !DILocation(line: 2028, column: 1, scope: !11429)
!11530 = distinct !DISubprogram(name: "show_program", scope: !47, file: !47, line: 2698, type: !11531, isLocal: true, isDefinition: true, scopeLine: 2699, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!11531 = !DISubroutineType(types: !11532)
!11532 = !{!1041, !2418, !8036, !2218}
!11533 = !DILocalVariable(name: "w", arg: 1, scope: !11530, file: !47, line: 2698, type: !2418)
!11534 = !DILocation(line: 2698, column: 40, scope: !11530)
!11535 = !DILocalVariable(name: "ifile", arg: 2, scope: !11530, file: !47, line: 2698, type: !8036)
!11536 = !DILocation(line: 2698, column: 54, scope: !11530)
!11537 = !DILocalVariable(name: "program", arg: 3, scope: !11530, file: !47, line: 2698, type: !2218)
!11538 = !DILocation(line: 2698, column: 72, scope: !11530)
!11539 = !DILocalVariable(name: "fmt_ctx", scope: !11530, file: !47, line: 2700, type: !1483)
!11540 = !DILocation(line: 2700, column: 22, scope: !11530)
!11541 = !DILocation(line: 2700, column: 32, scope: !11530)
!11542 = !DILocation(line: 2700, column: 39, scope: !11530)
!11543 = !DILocalVariable(name: "i", scope: !11530, file: !47, line: 2701, type: !1041)
!11544 = !DILocation(line: 2701, column: 9, scope: !11530)
!11545 = !DILocalVariable(name: "ret", scope: !11530, file: !47, line: 2701, type: !1041)
!11546 = !DILocation(line: 2701, column: 12, scope: !11530)
!11547 = !DILocation(line: 2703, column: 33, scope: !11530)
!11548 = !DILocation(line: 2703, column: 5, scope: !11530)
!11549 = !DILocation(line: 2704, column: 26, scope: !11530)
!11550 = !DILocation(line: 2704, column: 43, scope: !11530)
!11551 = !DILocation(line: 2704, column: 52, scope: !11530)
!11552 = !DILocation(line: 2704, column: 5, scope: !11530)
!11553 = !DILocation(line: 2705, column: 26, scope: !11530)
!11554 = !DILocation(line: 2705, column: 44, scope: !11530)
!11555 = !DILocation(line: 2705, column: 53, scope: !11530)
!11556 = !DILocation(line: 2705, column: 5, scope: !11530)
!11557 = !DILocation(line: 2706, column: 26, scope: !11530)
!11558 = !DILocation(line: 2706, column: 43, scope: !11530)
!11559 = !DILocation(line: 2706, column: 52, scope: !11530)
!11560 = !DILocation(line: 2706, column: 5, scope: !11530)
!11561 = !DILocation(line: 2707, column: 26, scope: !11530)
!11562 = !DILocation(line: 2707, column: 40, scope: !11530)
!11563 = !DILocation(line: 2707, column: 49, scope: !11530)
!11564 = !DILocation(line: 2707, column: 5, scope: !11530)
!11565 = !DILocation(line: 2708, column: 26, scope: !11530)
!11566 = !DILocation(line: 2708, column: 40, scope: !11530)
!11567 = !DILocation(line: 2708, column: 49, scope: !11530)
!11568 = !DILocation(line: 2708, column: 5, scope: !11530)
!11569 = !DILocation(line: 2709, column: 21, scope: !11530)
!11570 = !DILocation(line: 2709, column: 37, scope: !11530)
!11571 = !DILocation(line: 2709, column: 46, scope: !11530)
!11572 = !DILocation(line: 2709, column: 5, scope: !11530)
!11573 = !DILocation(line: 2710, column: 23, scope: !11530)
!11574 = !DILocation(line: 2710, column: 40, scope: !11530)
!11575 = !DILocation(line: 2710, column: 49, scope: !11530)
!11576 = !DILocation(line: 2710, column: 74, scope: !11530)
!11577 = !DILocation(line: 2710, column: 5, scope: !11530)
!11578 = !DILocation(line: 2711, column: 21, scope: !11530)
!11579 = !DILocation(line: 2711, column: 35, scope: !11530)
!11580 = !DILocation(line: 2711, column: 44, scope: !11530)
!11581 = !DILocation(line: 2711, column: 5, scope: !11530)
!11582 = !DILocation(line: 2712, column: 23, scope: !11530)
!11583 = !DILocation(line: 2712, column: 38, scope: !11530)
!11584 = !DILocation(line: 2712, column: 47, scope: !11530)
!11585 = !DILocation(line: 2712, column: 70, scope: !11530)
!11586 = !DILocation(line: 2712, column: 5, scope: !11530)
!11587 = !DILocation(line: 2713, column: 9, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11530, file: !47, line: 2713, column: 9)
!11589 = !DILocation(line: 2713, column: 9, scope: !11530)
!11590 = !DILocation(line: 2714, column: 25, scope: !11588)
!11591 = !DILocation(line: 2714, column: 28, scope: !11588)
!11592 = !DILocation(line: 2714, column: 37, scope: !11588)
!11593 = !DILocation(line: 2714, column: 15, scope: !11588)
!11594 = !DILocation(line: 2714, column: 13, scope: !11588)
!11595 = !DILocation(line: 2714, column: 9, scope: !11588)
!11596 = !DILocation(line: 2715, column: 9, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11530, file: !47, line: 2715, column: 9)
!11598 = !DILocation(line: 2715, column: 13, scope: !11597)
!11599 = !DILocation(line: 2715, column: 9, scope: !11530)
!11600 = !DILocation(line: 2716, column: 9, scope: !11597)
!11601 = !DILocation(line: 2718, column: 33, scope: !11530)
!11602 = !DILocation(line: 2718, column: 5, scope: !11530)
!11603 = !DILocation(line: 2719, column: 12, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11530, file: !47, line: 2719, column: 5)
!11605 = !DILocation(line: 2719, column: 10, scope: !11604)
!11606 = !DILocation(line: 2719, column: 17, scope: !11607)
!11607 = !DILexicalBlockFile(scope: !11608, file: !47, discriminator: 1)
!11608 = distinct !DILexicalBlock(scope: !11604, file: !47, line: 2719, column: 5)
!11609 = !DILocation(line: 2719, column: 21, scope: !11607)
!11610 = !DILocation(line: 2719, column: 30, scope: !11607)
!11611 = !DILocation(line: 2719, column: 19, scope: !11607)
!11612 = !DILocation(line: 2719, column: 5, scope: !11607)
!11613 = !DILocation(line: 2720, column: 52, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11615, file: !47, line: 2720, column: 13)
!11615 = distinct !DILexicalBlock(scope: !11608, file: !47, line: 2719, column: 54)
!11616 = !DILocation(line: 2720, column: 30, scope: !11614)
!11617 = !DILocation(line: 2720, column: 39, scope: !11614)
!11618 = !DILocation(line: 2720, column: 13, scope: !11614)
!11619 = !DILocation(line: 2720, column: 13, scope: !11615)
!11620 = !DILocation(line: 2721, column: 31, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11614, file: !47, line: 2720, column: 57)
!11622 = !DILocation(line: 2721, column: 34, scope: !11621)
!11623 = !DILocation(line: 2721, column: 65, scope: !11621)
!11624 = !DILocation(line: 2721, column: 43, scope: !11621)
!11625 = !DILocation(line: 2721, column: 52, scope: !11621)
!11626 = !DILocation(line: 2721, column: 107, scope: !11621)
!11627 = !DILocation(line: 2721, column: 85, scope: !11621)
!11628 = !DILocation(line: 2721, column: 94, scope: !11621)
!11629 = !DILocation(line: 2721, column: 70, scope: !11621)
!11630 = !DILocation(line: 2721, column: 77, scope: !11621)
!11631 = !DILocation(line: 2721, column: 19, scope: !11621)
!11632 = !DILocation(line: 2721, column: 17, scope: !11621)
!11633 = !DILocation(line: 2722, column: 17, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11621, file: !47, line: 2722, column: 17)
!11635 = !DILocation(line: 2722, column: 21, scope: !11634)
!11636 = !DILocation(line: 2722, column: 17, scope: !11621)
!11637 = !DILocation(line: 2723, column: 17, scope: !11634)
!11638 = !DILocation(line: 2724, column: 9, scope: !11621)
!11639 = !DILocation(line: 2725, column: 5, scope: !11615)
!11640 = !DILocation(line: 2719, column: 50, scope: !11641)
!11641 = !DILexicalBlockFile(scope: !11608, file: !47, discriminator: 2)
!11642 = !DILocation(line: 2719, column: 5, scope: !11641)
!11643 = distinct !{!11643, !11644}
!11644 = !DILocation(line: 2719, column: 5, scope: !11530)
!11645 = !DILocation(line: 2726, column: 33, scope: !11530)
!11646 = !DILocation(line: 2726, column: 5, scope: !11530)
!11647 = !DILocation(line: 2729, column: 33, scope: !11530)
!11648 = !DILocation(line: 2729, column: 5, scope: !11530)
!11649 = !DILocation(line: 2730, column: 12, scope: !11530)
!11650 = !DILocation(line: 2730, column: 5, scope: !11530)
!11651 = distinct !DISubprogram(name: "show_stream", scope: !47, file: !47, line: 2455, type: !11652, isLocal: true, isDefinition: true, scopeLine: 2456, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2365)
!11652 = !DISubroutineType(types: !11653)
!11653 = !{!1041, !2418, !1483, !1041, !4332, !1041}
!11654 = !DILocalVariable(name: "w", arg: 1, scope: !11651, file: !47, line: 2455, type: !2418)
!11655 = !DILocation(line: 2455, column: 39, scope: !11651)
!11656 = !DILocalVariable(name: "fmt_ctx", arg: 2, scope: !11651, file: !47, line: 2455, type: !1483)
!11657 = !DILocation(line: 2455, column: 59, scope: !11651)
!11658 = !DILocalVariable(name: "stream_idx", arg: 3, scope: !11651, file: !47, line: 2455, type: !1041)
!11659 = !DILocation(line: 2455, column: 72, scope: !11651)
!11660 = !DILocalVariable(name: "ist", arg: 4, scope: !11651, file: !47, line: 2455, type: !4332)
!11661 = !DILocation(line: 2455, column: 97, scope: !11651)
!11662 = !DILocalVariable(name: "in_program", arg: 5, scope: !11651, file: !47, line: 2455, type: !1041)
!11663 = !DILocation(line: 2455, column: 106, scope: !11651)
!11664 = !DILocalVariable(name: "stream", scope: !11651, file: !47, line: 2457, type: !1577)
!11665 = !DILocation(line: 2457, column: 15, scope: !11651)
!11666 = !DILocation(line: 2457, column: 24, scope: !11651)
!11667 = !DILocation(line: 2457, column: 29, scope: !11651)
!11668 = !DILocalVariable(name: "par", scope: !11651, file: !47, line: 2458, type: !2016)
!11669 = !DILocation(line: 2458, column: 24, scope: !11651)
!11670 = !DILocalVariable(name: "dec_ctx", scope: !11651, file: !47, line: 2459, type: !1584)
!11671 = !DILocation(line: 2459, column: 21, scope: !11651)
!11672 = !DILocalVariable(name: "val_str", scope: !11651, file: !47, line: 2460, type: !4620)
!11673 = !DILocation(line: 2460, column: 10, scope: !11651)
!11674 = !DILocalVariable(name: "s", scope: !11651, file: !47, line: 2461, type: !1027)
!11675 = !DILocation(line: 2461, column: 17, scope: !11651)
!11676 = !DILocalVariable(name: "sar", scope: !11651, file: !47, line: 2462, type: !1050)
!11677 = !DILocation(line: 2462, column: 16, scope: !11651)
!11678 = !DILocalVariable(name: "dar", scope: !11651, file: !47, line: 2462, type: !1050)
!11679 = !DILocation(line: 2462, column: 21, scope: !11651)
!11680 = !DILocalVariable(name: "pbuf", scope: !11651, file: !47, line: 2463, type: !2452)
!11681 = !DILocation(line: 2463, column: 14, scope: !11651)
!11682 = !DILocalVariable(name: "cd", scope: !11651, file: !47, line: 2464, type: !1959)
!11683 = !DILocation(line: 2464, column: 30, scope: !11651)
!11684 = !DILocalVariable(name: "ret", scope: !11651, file: !47, line: 2465, type: !1041)
!11685 = !DILocation(line: 2465, column: 9, scope: !11651)
!11686 = !DILocalVariable(name: "profile", scope: !11651, file: !47, line: 2466, type: !1027)
!11687 = !DILocation(line: 2466, column: 17, scope: !11651)
!11688 = !DILocation(line: 2468, column: 5, scope: !11651)
!11689 = !DILocation(line: 2470, column: 33, scope: !11651)
!11690 = !DILocation(line: 2470, column: 36, scope: !11651)
!11691 = !DILocation(line: 2470, column: 5, scope: !11651)
!11692 = !DILocation(line: 2472, column: 26, scope: !11651)
!11693 = !DILocation(line: 2472, column: 38, scope: !11651)
!11694 = !DILocation(line: 2472, column: 46, scope: !11651)
!11695 = !DILocation(line: 2472, column: 5, scope: !11651)
!11696 = !DILocation(line: 2474, column: 11, scope: !11651)
!11697 = !DILocation(line: 2474, column: 19, scope: !11651)
!11698 = !DILocation(line: 2474, column: 9, scope: !11651)
!11699 = !DILocation(line: 2475, column: 15, scope: !11651)
!11700 = !DILocation(line: 2475, column: 20, scope: !11651)
!11701 = !DILocation(line: 2475, column: 13, scope: !11651)
!11702 = !DILocation(line: 2476, column: 37, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2476, column: 9)
!11704 = !DILocation(line: 2476, column: 42, scope: !11703)
!11705 = !DILocation(line: 2476, column: 14, scope: !11703)
!11706 = !DILocation(line: 2476, column: 12, scope: !11703)
!11707 = !DILocation(line: 2476, column: 9, scope: !11651)
!11708 = !DILocation(line: 2477, column: 29, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11703, file: !47, line: 2476, column: 53)
!11710 = !DILocation(line: 2477, column: 46, scope: !11709)
!11711 = !DILocation(line: 2477, column: 50, scope: !11709)
!11712 = !DILocation(line: 2477, column: 9, scope: !11709)
!11713 = !DILocation(line: 2478, column: 14, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11709, file: !47, line: 2478, column: 13)
!11715 = !DILocation(line: 2478, column: 13, scope: !11709)
!11716 = !DILocation(line: 2479, column: 33, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11714, file: !47, line: 2478, column: 27)
!11718 = !DILocation(line: 2479, column: 55, scope: !11717)
!11719 = !DILocation(line: 2479, column: 59, scope: !11717)
!11720 = !DILocation(line: 2479, column: 71, scope: !11721)
!11721 = !DILexicalBlockFile(scope: !11717, file: !47, discriminator: 1)
!11722 = !DILocation(line: 2479, column: 75, scope: !11721)
!11723 = !DILocation(line: 2479, column: 55, scope: !11721)
!11724 = !DILocation(line: 2479, column: 55, scope: !11725)
!11725 = !DILexicalBlockFile(scope: !11717, file: !47, discriminator: 2)
!11726 = !DILocation(line: 2479, column: 55, scope: !11727)
!11727 = !DILexicalBlockFile(scope: !11717, file: !47, discriminator: 3)
!11728 = !DILocation(line: 2479, column: 13, scope: !11727)
!11729 = !DILocation(line: 2481, column: 9, scope: !11717)
!11730 = !DILocation(line: 2482, column: 5, scope: !11709)
!11731 = !DILocation(line: 2483, column: 29, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11703, file: !47, line: 2482, column: 12)
!11733 = !DILocation(line: 2483, column: 9, scope: !11732)
!11734 = !DILocation(line: 2484, column: 14, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11732, file: !47, line: 2484, column: 13)
!11736 = !DILocation(line: 2484, column: 13, scope: !11732)
!11737 = !DILocation(line: 2485, column: 33, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11735, file: !47, line: 2484, column: 27)
!11739 = !DILocation(line: 2485, column: 13, scope: !11738)
!11740 = !DILocation(line: 2486, column: 9, scope: !11738)
!11741 = !DILocation(line: 2489, column: 10, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2489, column: 9)
!11743 = !DILocation(line: 2489, column: 22, scope: !11742)
!11744 = !DILocation(line: 2489, column: 57, scope: !11745)
!11745 = !DILexicalBlockFile(scope: !11742, file: !47, discriminator: 1)
!11746 = !DILocation(line: 2489, column: 62, scope: !11745)
!11747 = !DILocation(line: 2489, column: 72, scope: !11745)
!11748 = !DILocation(line: 2489, column: 77, scope: !11745)
!11749 = !DILocation(line: 2489, column: 36, scope: !11745)
!11750 = !DILocation(line: 2489, column: 34, scope: !11745)
!11751 = !DILocation(line: 2489, column: 9, scope: !11745)
!11752 = !DILocation(line: 2490, column: 29, scope: !11742)
!11753 = !DILocation(line: 2490, column: 43, scope: !11742)
!11754 = !DILocation(line: 2490, column: 9, scope: !11742)
!11755 = !DILocation(line: 2492, column: 13, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11757, file: !47, line: 2492, column: 13)
!11757 = distinct !DILexicalBlock(scope: !11742, file: !47, line: 2491, column: 10)
!11758 = !DILocation(line: 2492, column: 18, scope: !11756)
!11759 = !DILocation(line: 2492, column: 26, scope: !11756)
!11760 = !DILocation(line: 2492, column: 13, scope: !11757)
!11761 = !DILocalVariable(name: "profile_num", scope: !11762, file: !47, line: 2493, type: !11763)
!11762 = distinct !DILexicalBlock(scope: !11756, file: !47, line: 2492, column: 34)
!11763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 96, align: 8, elements: !11764)
!11764 = !{!11765}
!11765 = !DISubrange(count: 12)
!11766 = !DILocation(line: 2493, column: 18, scope: !11762)
!11767 = !DILocation(line: 2494, column: 22, scope: !11762)
!11768 = !DILocation(line: 2494, column: 62, scope: !11762)
!11769 = !DILocation(line: 2494, column: 67, scope: !11762)
!11770 = !DILocation(line: 2494, column: 13, scope: !11762)
!11771 = !DILocation(line: 2495, column: 33, scope: !11762)
!11772 = !DILocation(line: 2495, column: 47, scope: !11762)
!11773 = !DILocation(line: 2495, column: 13, scope: !11762)
!11774 = !DILocation(line: 2496, column: 9, scope: !11762)
!11775 = !DILocation(line: 2497, column: 33, scope: !11756)
!11776 = !DILocation(line: 2497, column: 13, scope: !11756)
!11777 = !DILocation(line: 2500, column: 34, scope: !11651)
!11778 = !DILocation(line: 2500, column: 39, scope: !11651)
!11779 = !DILocation(line: 2500, column: 9, scope: !11651)
!11780 = !DILocation(line: 2500, column: 7, scope: !11651)
!11781 = !DILocation(line: 2501, column: 9, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2501, column: 9)
!11783 = !DILocation(line: 2501, column: 9, scope: !11651)
!11784 = !DILocation(line: 2501, column: 32, scope: !11785)
!11785 = !DILexicalBlockFile(scope: !11782, file: !47, discriminator: 1)
!11786 = !DILocation(line: 2501, column: 49, scope: !11785)
!11787 = !DILocation(line: 2501, column: 12, scope: !11785)
!11788 = !DILocation(line: 2502, column: 30, scope: !11782)
!11789 = !DILocation(line: 2502, column: 10, scope: !11782)
!11790 = !DILocation(line: 2504, column: 9, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2504, column: 9)
!11792 = !DILocation(line: 2504, column: 9, scope: !11651)
!11793 = !DILocation(line: 2505, column: 31, scope: !11791)
!11794 = !DILocation(line: 2505, column: 53, scope: !11791)
!11795 = !DILocation(line: 2505, column: 62, scope: !11791)
!11796 = !DILocation(line: 2505, column: 9, scope: !11791)
!11797 = !DILocation(line: 2509, column: 25, scope: !11651)
!11798 = !DILocation(line: 2509, column: 70, scope: !11651)
!11799 = !DILocation(line: 2509, column: 80, scope: !11651)
!11800 = !DILocation(line: 2509, column: 85, scope: !11651)
!11801 = !DILocation(line: 2509, column: 90, scope: !11651)
!11802 = !DILocation(line: 2509, column: 48, scope: !11803)
!11803 = !DILexicalBlockFile(scope: !11651, file: !47, discriminator: 1)
!11804 = !DILocation(line: 2509, column: 5, scope: !11805)
!11805 = !DILexicalBlockFile(scope: !11651, file: !47, discriminator: 2)
!11806 = !DILocation(line: 2510, column: 5, scope: !11651)
!11807 = distinct !{!11807, !11806}
!11808 = !DILocation(line: 2510, column: 10, scope: !11809)
!11809 = !DILexicalBlockFile(scope: !11810, file: !47, discriminator: 1)
!11810 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2510, column: 8)
!11811 = !DILocation(line: 2510, column: 6, scope: !11809)
!11812 = !DILocation(line: 2510, column: 11, scope: !11809)
!11813 = !DILocation(line: 2510, column: 34, scope: !11814)
!11814 = !DILexicalBlockFile(scope: !11809, file: !47, discriminator: 2)
!11815 = !DILocation(line: 2510, column: 43, scope: !11809)
!11816 = !DILocation(line: 2510, column: 64, scope: !11809)
!11817 = !DILocation(line: 2510, column: 23, scope: !11818)
!11818 = !DILexicalBlockFile(scope: !11809, file: !47, discriminator: 3)
!11819 = !DILocation(line: 2510, column: 73, scope: !11809)
!11820 = !DILocation(line: 2512, column: 13, scope: !11651)
!11821 = !DILocation(line: 2512, column: 18, scope: !11651)
!11822 = !DILocation(line: 2512, column: 5, scope: !11651)
!11823 = !DILocation(line: 2514, column: 30, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2512, column: 30)
!11825 = !DILocation(line: 2514, column: 42, scope: !11824)
!11826 = !DILocation(line: 2514, column: 47, scope: !11824)
!11827 = !DILocation(line: 2514, column: 9, scope: !11824)
!11828 = !DILocation(line: 2515, column: 30, scope: !11824)
!11829 = !DILocation(line: 2515, column: 43, scope: !11824)
!11830 = !DILocation(line: 2515, column: 48, scope: !11824)
!11831 = !DILocation(line: 2515, column: 9, scope: !11824)
!11832 = !DILocation(line: 2517, column: 13, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11824, file: !47, line: 2517, column: 13)
!11834 = !DILocation(line: 2517, column: 13, scope: !11824)
!11835 = !DILocation(line: 2518, column: 34, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11833, file: !47, line: 2517, column: 22)
!11837 = !DILocation(line: 2518, column: 52, scope: !11836)
!11838 = !DILocation(line: 2518, column: 61, scope: !11836)
!11839 = !DILocation(line: 2518, column: 13, scope: !11836)
!11840 = !DILocation(line: 2519, column: 34, scope: !11836)
!11841 = !DILocation(line: 2519, column: 53, scope: !11836)
!11842 = !DILocation(line: 2519, column: 62, scope: !11836)
!11843 = !DILocation(line: 2519, column: 13, scope: !11836)
!11844 = !DILocation(line: 2520, column: 9, scope: !11836)
!11845 = !DILocation(line: 2522, column: 30, scope: !11824)
!11846 = !DILocation(line: 2522, column: 49, scope: !11824)
!11847 = !DILocation(line: 2522, column: 54, scope: !11824)
!11848 = !DILocation(line: 2522, column: 9, scope: !11824)
!11849 = !DILocation(line: 2523, column: 44, scope: !11824)
!11850 = !DILocation(line: 2523, column: 53, scope: !11824)
!11851 = !DILocation(line: 2523, column: 15, scope: !11824)
!11852 = !DILocation(line: 2523, column: 15, scope: !11853)
!11853 = !DILexicalBlockFile(scope: !11824, file: !47, discriminator: 1)
!11854 = !DILocation(line: 2524, column: 17, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11824, file: !47, line: 2524, column: 13)
!11856 = !DILocation(line: 2524, column: 13, scope: !11855)
!11857 = !DILocation(line: 2524, column: 13, scope: !11824)
!11858 = !DILocation(line: 2525, column: 35, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11855, file: !47, line: 2524, column: 22)
!11860 = !DILocation(line: 2525, column: 13, scope: !11859)
!11861 = !DILocation(line: 2526, column: 28, scope: !11859)
!11862 = !DILocation(line: 2526, column: 38, scope: !11859)
!11863 = !DILocation(line: 2527, column: 23, scope: !11859)
!11864 = !DILocation(line: 2527, column: 28, scope: !11859)
!11865 = !DILocation(line: 2527, column: 40, scope: !11859)
!11866 = !DILocation(line: 2527, column: 34, scope: !11859)
!11867 = !DILocation(line: 2528, column: 23, scope: !11859)
!11868 = !DILocation(line: 2528, column: 28, scope: !11859)
!11869 = !DILocation(line: 2528, column: 41, scope: !11859)
!11870 = !DILocation(line: 2528, column: 35, scope: !11859)
!11871 = !DILocation(line: 2526, column: 13, scope: !11859)
!11872 = !DILocation(line: 2530, column: 35, scope: !11859)
!11873 = !DILocation(line: 2530, column: 13, scope: !11859)
!11874 = !DILocation(line: 2531, column: 9, scope: !11859)
!11875 = !DILocation(line: 2532, column: 33, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11855, file: !47, line: 2531, column: 16)
!11877 = !DILocation(line: 2532, column: 13, scope: !11876)
!11878 = !DILocation(line: 2533, column: 33, scope: !11876)
!11879 = !DILocation(line: 2533, column: 13, scope: !11876)
!11880 = !DILocation(line: 2535, column: 33, scope: !11824)
!11881 = !DILocation(line: 2535, column: 38, scope: !11824)
!11882 = !DILocation(line: 2535, column: 13, scope: !11824)
!11883 = !DILocation(line: 2535, column: 11, scope: !11824)
!11884 = !DILocation(line: 2536, column: 13, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11824, file: !47, line: 2536, column: 13)
!11886 = !DILocation(line: 2536, column: 13, scope: !11824)
!11887 = !DILocation(line: 2536, column: 36, scope: !11888)
!11888 = !DILexicalBlockFile(scope: !11885, file: !47, discriminator: 1)
!11889 = !DILocation(line: 2536, column: 50, scope: !11888)
!11890 = !DILocation(line: 2536, column: 16, scope: !11888)
!11891 = !DILocation(line: 2537, column: 34, scope: !11885)
!11892 = !DILocation(line: 2537, column: 14, scope: !11885)
!11893 = !DILocation(line: 2538, column: 30, scope: !11824)
!11894 = !DILocation(line: 2538, column: 42, scope: !11824)
!11895 = !DILocation(line: 2538, column: 47, scope: !11824)
!11896 = !DILocation(line: 2538, column: 9, scope: !11824)
!11897 = !DILocation(line: 2540, column: 27, scope: !11824)
!11898 = !DILocation(line: 2540, column: 30, scope: !11824)
!11899 = !DILocation(line: 2540, column: 35, scope: !11824)
!11900 = !DILocation(line: 2540, column: 9, scope: !11824)
!11901 = !DILocation(line: 2541, column: 27, scope: !11824)
!11902 = !DILocation(line: 2541, column: 30, scope: !11824)
!11903 = !DILocation(line: 2541, column: 35, scope: !11824)
!11904 = !DILocation(line: 2541, column: 9, scope: !11824)
!11905 = !DILocation(line: 2542, column: 25, scope: !11824)
!11906 = !DILocation(line: 2542, column: 28, scope: !11824)
!11907 = !DILocation(line: 2542, column: 33, scope: !11824)
!11908 = !DILocation(line: 2542, column: 9, scope: !11824)
!11909 = !DILocation(line: 2543, column: 25, scope: !11824)
!11910 = !DILocation(line: 2543, column: 28, scope: !11824)
!11911 = !DILocation(line: 2543, column: 33, scope: !11824)
!11912 = !DILocation(line: 2543, column: 9, scope: !11824)
!11913 = !DILocation(line: 2544, column: 31, scope: !11824)
!11914 = !DILocation(line: 2544, column: 34, scope: !11824)
!11915 = !DILocation(line: 2544, column: 39, scope: !11824)
!11916 = !DILocation(line: 2544, column: 9, scope: !11824)
!11917 = !DILocation(line: 2546, column: 13, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11824, file: !47, line: 2546, column: 13)
!11919 = !DILocation(line: 2546, column: 18, scope: !11918)
!11920 = !DILocation(line: 2546, column: 30, scope: !11918)
!11921 = !DILocation(line: 2546, column: 13, scope: !11824)
!11922 = !DILocation(line: 2547, column: 33, scope: !11918)
!11923 = !DILocation(line: 2547, column: 13, scope: !11918)
!11924 = !DILocation(line: 2548, column: 18, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11918, file: !47, line: 2548, column: 18)
!11926 = !DILocation(line: 2548, column: 23, scope: !11925)
!11927 = !DILocation(line: 2548, column: 35, scope: !11925)
!11928 = !DILocation(line: 2548, column: 18, scope: !11918)
!11929 = !DILocation(line: 2549, column: 33, scope: !11925)
!11930 = !DILocation(line: 2549, column: 13, scope: !11925)
!11931 = !DILocation(line: 2550, column: 18, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11925, file: !47, line: 2550, column: 18)
!11933 = !DILocation(line: 2550, column: 23, scope: !11932)
!11934 = !DILocation(line: 2550, column: 35, scope: !11932)
!11935 = !DILocation(line: 2550, column: 18, scope: !11925)
!11936 = !DILocation(line: 2551, column: 33, scope: !11932)
!11937 = !DILocation(line: 2551, column: 13, scope: !11932)
!11938 = !DILocation(line: 2552, column: 18, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11932, file: !47, line: 2552, column: 18)
!11940 = !DILocation(line: 2552, column: 23, scope: !11939)
!11941 = !DILocation(line: 2552, column: 35, scope: !11939)
!11942 = !DILocation(line: 2552, column: 18, scope: !11932)
!11943 = !DILocation(line: 2553, column: 33, scope: !11939)
!11944 = !DILocation(line: 2553, column: 13, scope: !11939)
!11945 = !DILocation(line: 2554, column: 18, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11939, file: !47, line: 2554, column: 18)
!11947 = !DILocation(line: 2554, column: 23, scope: !11946)
!11948 = !DILocation(line: 2554, column: 35, scope: !11946)
!11949 = !DILocation(line: 2554, column: 18, scope: !11939)
!11950 = !DILocation(line: 2555, column: 33, scope: !11946)
!11951 = !DILocation(line: 2555, column: 13, scope: !11946)
!11952 = !DILocation(line: 2557, column: 33, scope: !11946)
!11953 = !DILocation(line: 2557, column: 13, scope: !11946)
!11954 = !DILocation(line: 2560, column: 13, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11824, file: !47, line: 2560, column: 13)
!11956 = !DILocation(line: 2560, column: 21, scope: !11955)
!11957 = !DILocation(line: 2560, column: 24, scope: !11958)
!11958 = !DILexicalBlockFile(scope: !11955, file: !47, discriminator: 1)
!11959 = !DILocation(line: 2560, column: 33, scope: !11958)
!11960 = !DILocation(line: 2560, column: 54, scope: !11958)
!11961 = !DILocation(line: 2560, column: 13, scope: !11958)
!11962 = !DILocalVariable(name: "tcbuf", scope: !11963, file: !47, line: 2561, type: !11155)
!11963 = distinct !DILexicalBlock(scope: !11955, file: !47, line: 2560, column: 60)
!11964 = !DILocation(line: 2561, column: 18, scope: !11963)
!11965 = !DILocation(line: 2562, column: 45, scope: !11963)
!11966 = !DILocation(line: 2562, column: 52, scope: !11963)
!11967 = !DILocation(line: 2562, column: 61, scope: !11963)
!11968 = !DILocation(line: 2562, column: 13, scope: !11963)
!11969 = !DILocation(line: 2563, column: 33, scope: !11963)
!11970 = !DILocation(line: 2563, column: 48, scope: !11963)
!11971 = !DILocation(line: 2563, column: 13, scope: !11963)
!11972 = !DILocation(line: 2564, column: 9, scope: !11963)
!11973 = !DILocation(line: 2565, column: 33, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11955, file: !47, line: 2564, column: 16)
!11975 = !DILocation(line: 2565, column: 13, scope: !11974)
!11976 = !DILocation(line: 2568, column: 13, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11824, file: !47, line: 2568, column: 13)
!11978 = !DILocation(line: 2568, column: 13, scope: !11824)
!11979 = !DILocation(line: 2569, column: 34, scope: !11977)
!11980 = !DILocation(line: 2569, column: 45, scope: !11977)
!11981 = !DILocation(line: 2569, column: 54, scope: !11977)
!11982 = !DILocation(line: 2569, column: 13, scope: !11977)
!11983 = !DILocation(line: 2570, column: 9, scope: !11824)
!11984 = !DILocation(line: 2573, column: 36, scope: !11824)
!11985 = !DILocation(line: 2573, column: 41, scope: !11824)
!11986 = !DILocation(line: 2573, column: 13, scope: !11824)
!11987 = !DILocation(line: 2573, column: 11, scope: !11824)
!11988 = !DILocation(line: 2574, column: 13, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11824, file: !47, line: 2574, column: 13)
!11990 = !DILocation(line: 2574, column: 13, scope: !11824)
!11991 = !DILocation(line: 2574, column: 36, scope: !11992)
!11992 = !DILexicalBlockFile(scope: !11989, file: !47, discriminator: 1)
!11993 = !DILocation(line: 2574, column: 53, scope: !11992)
!11994 = !DILocation(line: 2574, column: 16, scope: !11992)
!11995 = !DILocation(line: 2575, column: 34, scope: !11989)
!11996 = !DILocation(line: 2575, column: 14, scope: !11989)
!11997 = !DILocation(line: 2576, column: 9, scope: !11824)
!11998 = distinct !{!11998, !11997}
!11999 = !DILocalVariable(name: "uv", scope: !12000, file: !47, line: 2576, type: !8654)
!12000 = distinct !DILexicalBlock(scope: !11824, file: !47, line: 2576, column: 12)
!12001 = !DILocation(line: 2576, column: 32, scope: !12000)
!12002 = !DILocation(line: 2576, column: 47, scope: !12003)
!12003 = !DILexicalBlockFile(scope: !12000, file: !47, discriminator: 1)
!12004 = !DILocation(line: 2576, column: 52, scope: !12003)
!12005 = !DILocation(line: 2576, column: 39, scope: !12003)
!12006 = !DILocation(line: 2576, column: 43, scope: !12003)
!12007 = !DILocation(line: 2576, column: 45, scope: !12003)
!12008 = !DILocation(line: 2576, column: 68, scope: !12003)
!12009 = !DILocation(line: 2576, column: 73, scope: !12003)
!12010 = !DILocation(line: 2576, column: 111, scope: !12003)
!12011 = !DILocation(line: 2576, column: 142, scope: !12003)
!12012 = !DILocation(line: 2576, column: 129, scope: !12003)
!12013 = !DILocation(line: 2576, column: 91, scope: !12014)
!12014 = !DILexicalBlockFile(scope: !12003, file: !47, discriminator: 2)
!12015 = !DILocation(line: 2576, column: 177, scope: !12003)
!12016 = !DILocation(line: 2577, column: 30, scope: !11824)
!12017 = !DILocation(line: 2577, column: 45, scope: !11824)
!12018 = !DILocation(line: 2577, column: 50, scope: !11824)
!12019 = !DILocation(line: 2577, column: 9, scope: !11824)
!12020 = !DILocation(line: 2579, column: 13, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !11824, file: !47, line: 2579, column: 13)
!12022 = !DILocation(line: 2579, column: 18, scope: !12021)
!12023 = !DILocation(line: 2579, column: 13, scope: !11824)
!12024 = !DILocation(line: 2580, column: 13, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12021, file: !47, line: 2579, column: 34)
!12026 = !DILocation(line: 2581, column: 45, scope: !12025)
!12027 = !DILocation(line: 2581, column: 50, scope: !12025)
!12028 = !DILocation(line: 2581, column: 60, scope: !12025)
!12029 = !DILocation(line: 2581, column: 65, scope: !12025)
!12030 = !DILocation(line: 2581, column: 13, scope: !12025)
!12031 = !DILocation(line: 2582, column: 33, scope: !12025)
!12032 = !DILocation(line: 2582, column: 59, scope: !12025)
!12033 = !DILocation(line: 2582, column: 13, scope: !12025)
!12034 = !DILocation(line: 2583, column: 9, scope: !12025)
!12035 = !DILocation(line: 2584, column: 33, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12021, file: !47, line: 2583, column: 16)
!12037 = !DILocation(line: 2584, column: 13, scope: !12036)
!12038 = !DILocation(line: 2587, column: 30, scope: !11824)
!12039 = !DILocation(line: 2587, column: 75, scope: !11824)
!12040 = !DILocation(line: 2587, column: 80, scope: !11824)
!12041 = !DILocation(line: 2587, column: 52, scope: !11824)
!12042 = !DILocation(line: 2587, column: 9, scope: !11853)
!12043 = !DILocation(line: 2588, column: 9, scope: !11824)
!12044 = !DILocation(line: 2591, column: 13, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !11824, file: !47, line: 2591, column: 13)
!12046 = !DILocation(line: 2591, column: 18, scope: !12045)
!12047 = !DILocation(line: 2591, column: 13, scope: !11824)
!12048 = !DILocation(line: 2592, column: 34, scope: !12045)
!12049 = !DILocation(line: 2592, column: 46, scope: !12045)
!12050 = !DILocation(line: 2592, column: 51, scope: !12045)
!12051 = !DILocation(line: 2592, column: 13, scope: !12045)
!12052 = !DILocation(line: 2594, column: 33, scope: !12045)
!12053 = !DILocation(line: 2594, column: 13, scope: !12045)
!12054 = !DILocation(line: 2595, column: 13, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !11824, file: !47, line: 2595, column: 13)
!12056 = !DILocation(line: 2595, column: 18, scope: !12055)
!12057 = !DILocation(line: 2595, column: 13, scope: !11824)
!12058 = !DILocation(line: 2596, column: 34, scope: !12055)
!12059 = !DILocation(line: 2596, column: 47, scope: !12055)
!12060 = !DILocation(line: 2596, column: 52, scope: !12055)
!12061 = !DILocation(line: 2596, column: 13, scope: !12055)
!12062 = !DILocation(line: 2598, column: 33, scope: !12055)
!12063 = !DILocation(line: 2598, column: 13, scope: !12055)
!12064 = !DILocation(line: 2599, column: 9, scope: !11824)
!12065 = !DILocation(line: 2602, column: 9, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2602, column: 9)
!12067 = !DILocation(line: 2602, column: 17, scope: !12066)
!12068 = !DILocation(line: 2602, column: 20, scope: !12069)
!12069 = !DILexicalBlockFile(scope: !12066, file: !47, discriminator: 1)
!12070 = !DILocation(line: 2602, column: 29, scope: !12069)
!12071 = !DILocation(line: 2602, column: 35, scope: !12069)
!12072 = !DILocation(line: 2602, column: 38, scope: !12073)
!12073 = !DILexicalBlockFile(scope: !12066, file: !47, discriminator: 2)
!12074 = !DILocation(line: 2602, column: 47, scope: !12073)
!12075 = !DILocation(line: 2602, column: 54, scope: !12073)
!12076 = !DILocation(line: 2602, column: 65, scope: !12073)
!12077 = !DILocation(line: 2602, column: 68, scope: !12078)
!12078 = !DILexicalBlockFile(scope: !12066, file: !47, discriminator: 3)
!12079 = !DILocation(line: 2602, column: 9, scope: !12078)
!12080 = !DILocalVariable(name: "opt", scope: !12081, file: !47, line: 2603, type: !12082)
!12081 = distinct !DILexicalBlock(scope: !12066, file: !47, line: 2602, column: 87)
!12082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64, align: 64)
!12083 = !DILocation(line: 2603, column: 25, scope: !12081)
!12084 = !DILocation(line: 2604, column: 9, scope: !12081)
!12085 = !DILocation(line: 2604, column: 34, scope: !12086)
!12086 = !DILexicalBlockFile(scope: !12081, file: !47, discriminator: 1)
!12087 = !DILocation(line: 2604, column: 43, scope: !12086)
!12088 = !DILocation(line: 2604, column: 53, scope: !12086)
!12089 = !DILocation(line: 2604, column: 22, scope: !12086)
!12090 = !DILocation(line: 2604, column: 20, scope: !12086)
!12091 = !DILocation(line: 2604, column: 9, scope: !12086)
!12092 = !DILocalVariable(name: "str", scope: !12093, file: !47, line: 2605, type: !1102)
!12093 = distinct !DILexicalBlock(scope: !12081, file: !47, line: 2604, column: 59)
!12094 = !DILocation(line: 2605, column: 22, scope: !12093)
!12095 = !DILocation(line: 2606, column: 17, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12093, file: !47, line: 2606, column: 17)
!12097 = !DILocation(line: 2606, column: 22, scope: !12096)
!12098 = !DILocation(line: 2606, column: 17, scope: !12093)
!12099 = !DILocation(line: 2606, column: 29, scope: !12100)
!12100 = !DILexicalBlockFile(scope: !12096, file: !47, discriminator: 1)
!12101 = distinct !{!12101, !12084}
!12102 = !DILocation(line: 2607, column: 28, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12093, file: !47, line: 2607, column: 17)
!12104 = !DILocation(line: 2607, column: 37, scope: !12103)
!12105 = !DILocation(line: 2607, column: 48, scope: !12103)
!12106 = !DILocation(line: 2607, column: 53, scope: !12103)
!12107 = !DILocation(line: 2607, column: 17, scope: !12103)
!12108 = !DILocation(line: 2607, column: 68, scope: !12103)
!12109 = !DILocation(line: 2607, column: 17, scope: !12093)
!12110 = !DILocation(line: 2608, column: 37, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12103, file: !47, line: 2607, column: 74)
!12112 = !DILocation(line: 2608, column: 40, scope: !12111)
!12113 = !DILocation(line: 2608, column: 45, scope: !12111)
!12114 = !DILocation(line: 2608, column: 51, scope: !12111)
!12115 = !DILocation(line: 2608, column: 17, scope: !12111)
!12116 = !DILocation(line: 2609, column: 25, scope: !12111)
!12117 = !DILocation(line: 2609, column: 17, scope: !12111)
!12118 = !DILocation(line: 2610, column: 13, scope: !12111)
!12119 = !DILocation(line: 2604, column: 9, scope: !12120)
!12120 = !DILexicalBlockFile(scope: !12081, file: !47, discriminator: 2)
!12121 = !DILocation(line: 2612, column: 5, scope: !12081)
!12122 = !DILocation(line: 2614, column: 9, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2614, column: 9)
!12124 = !DILocation(line: 2614, column: 18, scope: !12123)
!12125 = !DILocation(line: 2614, column: 27, scope: !12123)
!12126 = !DILocation(line: 2614, column: 33, scope: !12123)
!12127 = !DILocation(line: 2614, column: 9, scope: !11651)
!12128 = !DILocation(line: 2614, column: 43, scope: !12129)
!12129 = !DILexicalBlockFile(scope: !12123, file: !47, discriminator: 1)
!12130 = distinct !{!12130, !12131}
!12131 = !DILocation(line: 2614, column: 43, scope: !12123)
!12132 = !DILocation(line: 2614, column: 48, scope: !12133)
!12133 = !DILexicalBlockFile(scope: !12134, file: !47, discriminator: 2)
!12134 = distinct !DILexicalBlock(scope: !12123, file: !47, line: 2614, column: 46)
!12135 = !DILocation(line: 2614, column: 98, scope: !12133)
!12136 = !DILocation(line: 2614, column: 106, scope: !12133)
!12137 = !DILocation(line: 2614, column: 72, scope: !12138)
!12138 = !DILexicalBlockFile(scope: !12133, file: !47, discriminator: 4)
!12139 = !DILocation(line: 2614, column: 131, scope: !12133)
!12140 = !DILocation(line: 2614, column: 145, scope: !12133)
!12141 = !DILocation(line: 2614, column: 111, scope: !12142)
!12142 = !DILexicalBlockFile(scope: !12133, file: !47, discriminator: 5)
!12143 = !DILocation(line: 2614, column: 154, scope: !12133)
!12144 = !DILocation(line: 2614, column: 154, scope: !12145)
!12145 = !DILexicalBlockFile(scope: !12134, file: !47, discriminator: 3)
!12146 = !DILocation(line: 2615, column: 30, scope: !12123)
!12147 = !DILocation(line: 2615, column: 10, scope: !12123)
!12148 = !DILocation(line: 2616, column: 27, scope: !11651)
!12149 = !DILocation(line: 2616, column: 46, scope: !11651)
!12150 = !DILocation(line: 2616, column: 54, scope: !11651)
!12151 = !DILocation(line: 2616, column: 5, scope: !11651)
!12152 = !DILocation(line: 2617, column: 27, scope: !11651)
!12153 = !DILocation(line: 2617, column: 48, scope: !11651)
!12154 = !DILocation(line: 2617, column: 56, scope: !11651)
!12155 = !DILocation(line: 2617, column: 5, scope: !11651)
!12156 = !DILocation(line: 2618, column: 27, scope: !11651)
!12157 = !DILocation(line: 2618, column: 43, scope: !11651)
!12158 = !DILocation(line: 2618, column: 51, scope: !11651)
!12159 = !DILocation(line: 2618, column: 5, scope: !11651)
!12160 = !DILocation(line: 2619, column: 21, scope: !11651)
!12161 = !DILocation(line: 2619, column: 37, scope: !11651)
!12162 = !DILocation(line: 2619, column: 45, scope: !11651)
!12163 = !DILocation(line: 2619, column: 5, scope: !11651)
!12164 = !DILocation(line: 2620, column: 23, scope: !11651)
!12165 = !DILocation(line: 2620, column: 40, scope: !11651)
!12166 = !DILocation(line: 2620, column: 48, scope: !11651)
!12167 = !DILocation(line: 2620, column: 61, scope: !11651)
!12168 = !DILocation(line: 2620, column: 69, scope: !11651)
!12169 = !DILocation(line: 2620, column: 5, scope: !11651)
!12170 = !DILocation(line: 2621, column: 21, scope: !11651)
!12171 = !DILocation(line: 2621, column: 39, scope: !11651)
!12172 = !DILocation(line: 2621, column: 47, scope: !11651)
!12173 = !DILocation(line: 2621, column: 5, scope: !11651)
!12174 = !DILocation(line: 2622, column: 23, scope: !11651)
!12175 = !DILocation(line: 2622, column: 38, scope: !11651)
!12176 = !DILocation(line: 2622, column: 46, scope: !11651)
!12177 = !DILocation(line: 2622, column: 57, scope: !11651)
!12178 = !DILocation(line: 2622, column: 65, scope: !11651)
!12179 = !DILocation(line: 2622, column: 5, scope: !11651)
!12180 = !DILocation(line: 2623, column: 9, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2623, column: 9)
!12182 = !DILocation(line: 2623, column: 14, scope: !12181)
!12183 = !DILocation(line: 2623, column: 23, scope: !12181)
!12184 = !DILocation(line: 2623, column: 9, scope: !11651)
!12185 = !DILocation(line: 2623, column: 28, scope: !12186)
!12186 = !DILexicalBlockFile(scope: !12181, file: !47, discriminator: 1)
!12187 = distinct !{!12187, !12188}
!12188 = !DILocation(line: 2623, column: 28, scope: !12181)
!12189 = !DILocalVariable(name: "uv", scope: !12190, file: !47, line: 2623, type: !8654)
!12190 = distinct !DILexicalBlock(scope: !12181, file: !47, line: 2623, column: 31)
!12191 = !DILocation(line: 2623, column: 51, scope: !12190)
!12192 = !DILocation(line: 2623, column: 66, scope: !12193)
!12193 = !DILexicalBlockFile(scope: !12190, file: !47, discriminator: 2)
!12194 = !DILocation(line: 2623, column: 71, scope: !12193)
!12195 = !DILocation(line: 2623, column: 58, scope: !12193)
!12196 = !DILocation(line: 2623, column: 62, scope: !12193)
!12197 = !DILocation(line: 2623, column: 64, scope: !12193)
!12198 = !DILocation(line: 2623, column: 84, scope: !12193)
!12199 = !DILocation(line: 2623, column: 89, scope: !12193)
!12200 = !DILocation(line: 2623, column: 136, scope: !12193)
!12201 = !DILocation(line: 2623, column: 164, scope: !12193)
!12202 = !DILocation(line: 2623, column: 151, scope: !12193)
!12203 = !DILocation(line: 2623, column: 116, scope: !12204)
!12204 = !DILexicalBlockFile(scope: !12193, file: !47, discriminator: 4)
!12205 = !DILocation(line: 2623, column: 199, scope: !12193)
!12206 = !DILocation(line: 2623, column: 199, scope: !12207)
!12207 = !DILexicalBlockFile(scope: !12190, file: !47, discriminator: 3)
!12208 = !DILocation(line: 2624, column: 30, scope: !12181)
!12209 = !DILocation(line: 2624, column: 10, scope: !12181)
!12210 = !DILocation(line: 2626, column: 9, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2626, column: 9)
!12212 = !DILocation(line: 2626, column: 17, scope: !12211)
!12213 = !DILocation(line: 2626, column: 24, scope: !12211)
!12214 = !DILocation(line: 2626, column: 36, scope: !12211)
!12215 = !DILocation(line: 2626, column: 9, scope: !11651)
!12216 = !DILocation(line: 2626, column: 41, scope: !12217)
!12217 = !DILexicalBlockFile(scope: !12211, file: !47, discriminator: 1)
!12218 = distinct !{!12218, !12219}
!12219 = !DILocation(line: 2626, column: 41, scope: !12211)
!12220 = !DILocalVariable(name: "uv", scope: !12221, file: !47, line: 2626, type: !8654)
!12221 = distinct !DILexicalBlock(scope: !12211, file: !47, line: 2626, column: 44)
!12222 = !DILocation(line: 2626, column: 64, scope: !12221)
!12223 = !DILocation(line: 2626, column: 79, scope: !12224)
!12224 = !DILexicalBlockFile(scope: !12221, file: !47, discriminator: 2)
!12225 = !DILocation(line: 2626, column: 87, scope: !12224)
!12226 = !DILocation(line: 2626, column: 94, scope: !12224)
!12227 = !DILocation(line: 2626, column: 71, scope: !12224)
!12228 = !DILocation(line: 2626, column: 75, scope: !12224)
!12229 = !DILocation(line: 2626, column: 77, scope: !12224)
!12230 = !DILocation(line: 2626, column: 110, scope: !12224)
!12231 = !DILocation(line: 2626, column: 115, scope: !12224)
!12232 = !DILocation(line: 2626, column: 162, scope: !12224)
!12233 = !DILocation(line: 2626, column: 194, scope: !12224)
!12234 = !DILocation(line: 2626, column: 181, scope: !12224)
!12235 = !DILocation(line: 2626, column: 142, scope: !12236)
!12236 = !DILexicalBlockFile(scope: !12224, file: !47, discriminator: 4)
!12237 = !DILocation(line: 2626, column: 229, scope: !12224)
!12238 = !DILocation(line: 2626, column: 229, scope: !12239)
!12239 = !DILexicalBlockFile(scope: !12221, file: !47, discriminator: 3)
!12240 = !DILocation(line: 2627, column: 30, scope: !12211)
!12241 = !DILocation(line: 2627, column: 10, scope: !12211)
!12242 = !DILocation(line: 2629, column: 9, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2629, column: 9)
!12244 = !DILocation(line: 2629, column: 17, scope: !12243)
!12245 = !DILocation(line: 2629, column: 20, scope: !12246)
!12246 = !DILexicalBlockFile(scope: !12243, file: !47, discriminator: 1)
!12247 = !DILocation(line: 2629, column: 29, scope: !12246)
!12248 = !DILocation(line: 2629, column: 49, scope: !12246)
!12249 = !DILocation(line: 2629, column: 9, scope: !12246)
!12250 = !DILocation(line: 2629, column: 54, scope: !12251)
!12251 = !DILexicalBlockFile(scope: !12243, file: !47, discriminator: 2)
!12252 = distinct !{!12252, !12253}
!12253 = !DILocation(line: 2629, column: 54, scope: !12243)
!12254 = !DILocation(line: 2629, column: 59, scope: !12255)
!12255 = !DILexicalBlockFile(scope: !12256, file: !47, discriminator: 3)
!12256 = distinct !DILexicalBlock(scope: !12243, file: !47, line: 2629, column: 57)
!12257 = !DILocation(line: 2629, column: 107, scope: !12255)
!12258 = !DILocation(line: 2629, column: 116, scope: !12255)
!12259 = !DILocation(line: 2629, column: 83, scope: !12260)
!12260 = !DILexicalBlockFile(scope: !12255, file: !47, discriminator: 5)
!12261 = !DILocation(line: 2629, column: 158, scope: !12255)
!12262 = !DILocation(line: 2629, column: 189, scope: !12255)
!12263 = !DILocation(line: 2629, column: 138, scope: !12264)
!12264 = !DILexicalBlockFile(scope: !12255, file: !47, discriminator: 6)
!12265 = !DILocation(line: 2629, column: 198, scope: !12255)
!12266 = !DILocation(line: 2629, column: 198, scope: !12267)
!12267 = !DILexicalBlockFile(scope: !12256, file: !47, discriminator: 4)
!12268 = !DILocation(line: 2630, column: 30, scope: !12243)
!12269 = !DILocation(line: 2630, column: 10, scope: !12243)
!12270 = !DILocation(line: 2631, column: 9, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2631, column: 9)
!12272 = !DILocation(line: 2631, column: 17, scope: !12271)
!12273 = !DILocation(line: 2631, column: 9, scope: !11651)
!12274 = !DILocation(line: 2631, column: 28, scope: !12275)
!12275 = !DILexicalBlockFile(scope: !12271, file: !47, discriminator: 1)
!12276 = distinct !{!12276, !12277}
!12277 = !DILocation(line: 2631, column: 28, scope: !12271)
!12278 = !DILocation(line: 2631, column: 33, scope: !12279)
!12279 = !DILexicalBlockFile(scope: !12280, file: !47, discriminator: 2)
!12280 = distinct !DILexicalBlock(scope: !12271, file: !47, line: 2631, column: 31)
!12281 = !DILocation(line: 2631, column: 29, scope: !12279)
!12282 = !DILocation(line: 2631, column: 37, scope: !12279)
!12283 = !DILocation(line: 2631, column: 57, scope: !12284)
!12284 = !DILexicalBlockFile(scope: !12279, file: !47, discriminator: 4)
!12285 = !DILocation(line: 2631, column: 69, scope: !12279)
!12286 = !DILocation(line: 2631, column: 90, scope: !12279)
!12287 = !DILocation(line: 2631, column: 49, scope: !12288)
!12288 = !DILexicalBlockFile(scope: !12279, file: !47, discriminator: 5)
!12289 = !DILocation(line: 2631, column: 99, scope: !12279)
!12290 = !DILocation(line: 2631, column: 99, scope: !12291)
!12291 = !DILexicalBlockFile(scope: !12280, file: !47, discriminator: 3)
!12292 = !DILocation(line: 2632, column: 30, scope: !12271)
!12293 = !DILocation(line: 2632, column: 10, scope: !12271)
!12294 = !DILocation(line: 2633, column: 27, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2633, column: 9)
!12296 = !DILocation(line: 2633, column: 9, scope: !12295)
!12297 = !DILocation(line: 2633, column: 9, scope: !11651)
!12298 = !DILocation(line: 2633, column: 40, scope: !12299)
!12299 = !DILexicalBlockFile(scope: !12295, file: !47, discriminator: 1)
!12300 = distinct !{!12300, !12301}
!12301 = !DILocation(line: 2633, column: 40, scope: !12295)
!12302 = !DILocation(line: 2633, column: 45, scope: !12303)
!12303 = !DILexicalBlockFile(scope: !12304, file: !47, discriminator: 2)
!12304 = distinct !DILexicalBlock(scope: !12295, file: !47, line: 2633, column: 43)
!12305 = !DILocation(line: 2633, column: 60, scope: !12303)
!12306 = !DILocation(line: 2633, column: 42, scope: !12303)
!12307 = !DILocation(line: 2633, column: 69, scope: !12308)
!12308 = !DILexicalBlockFile(scope: !12303, file: !47, discriminator: 4)
!12309 = !DILocation(line: 2633, column: 94, scope: !12303)
!12310 = !DILocation(line: 2633, column: 120, scope: !12303)
!12311 = !DILocation(line: 2633, column: 74, scope: !12312)
!12312 = !DILexicalBlockFile(scope: !12303, file: !47, discriminator: 5)
!12313 = !DILocation(line: 2633, column: 129, scope: !12303)
!12314 = !DILocation(line: 2633, column: 129, scope: !12315)
!12315 = !DILexicalBlockFile(scope: !12304, file: !47, discriminator: 3)
!12316 = !DILocation(line: 2634, column: 30, scope: !12295)
!12317 = !DILocation(line: 2634, column: 10, scope: !12295)
!12318 = !DILocation(line: 2635, column: 28, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2635, column: 9)
!12320 = !DILocation(line: 2635, column: 9, scope: !12319)
!12321 = !DILocation(line: 2635, column: 9, scope: !11651)
!12322 = !DILocation(line: 2635, column: 41, scope: !12323)
!12323 = !DILexicalBlockFile(scope: !12319, file: !47, discriminator: 1)
!12324 = distinct !{!12324, !12325}
!12325 = !DILocation(line: 2635, column: 41, scope: !12319)
!12326 = !DILocation(line: 2635, column: 46, scope: !12327)
!12327 = !DILexicalBlockFile(scope: !12328, file: !47, discriminator: 2)
!12328 = distinct !DILexicalBlock(scope: !12319, file: !47, line: 2635, column: 44)
!12329 = !DILocation(line: 2635, column: 61, scope: !12327)
!12330 = !DILocation(line: 2635, column: 42, scope: !12327)
!12331 = !DILocation(line: 2635, column: 70, scope: !12332)
!12332 = !DILexicalBlockFile(scope: !12327, file: !47, discriminator: 4)
!12333 = !DILocation(line: 2635, column: 95, scope: !12327)
!12334 = !DILocation(line: 2635, column: 122, scope: !12327)
!12335 = !DILocation(line: 2635, column: 75, scope: !12336)
!12336 = !DILexicalBlockFile(scope: !12327, file: !47, discriminator: 5)
!12337 = !DILocation(line: 2635, column: 131, scope: !12327)
!12338 = !DILocation(line: 2635, column: 131, scope: !12339)
!12339 = !DILexicalBlockFile(scope: !12328, file: !47, discriminator: 3)
!12340 = !DILocation(line: 2636, column: 30, scope: !12319)
!12341 = !DILocation(line: 2636, column: 10, scope: !12319)
!12342 = !DILocation(line: 2637, column: 9, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2637, column: 9)
!12344 = !DILocation(line: 2637, column: 9, scope: !11651)
!12345 = !DILocation(line: 2638, column: 27, scope: !12343)
!12346 = !DILocation(line: 2638, column: 43, scope: !12343)
!12347 = !DILocation(line: 2638, column: 48, scope: !12343)
!12348 = !DILocation(line: 2639, column: 43, scope: !12343)
!12349 = !DILocation(line: 2639, column: 48, scope: !12343)
!12350 = !DILocation(line: 2638, column: 9, scope: !12343)
!12351 = !DILocation(line: 2640, column: 28, scope: !11651)
!12352 = !DILocation(line: 2640, column: 49, scope: !11651)
!12353 = !DILocation(line: 2640, column: 54, scope: !11651)
!12354 = !DILocation(line: 2641, column: 49, scope: !11651)
!12355 = !DILocation(line: 2641, column: 54, scope: !11651)
!12356 = !DILocation(line: 2640, column: 5, scope: !11651)
!12357 = !DILocation(line: 2648, column: 9, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2648, column: 9)
!12359 = !DILocation(line: 2648, column: 9, scope: !11651)
!12360 = !DILocation(line: 2649, column: 37, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12358, file: !47, line: 2648, column: 37)
!12362 = !DILocation(line: 2649, column: 40, scope: !12361)
!12363 = !DILocation(line: 2649, column: 9, scope: !12361)
!12364 = !DILocation(line: 2650, column: 9, scope: !12361)
!12365 = distinct !{!12365, !12364}
!12366 = !DILocation(line: 2650, column: 35, scope: !12367)
!12367 = !DILexicalBlockFile(scope: !12368, file: !47, discriminator: 1)
!12368 = distinct !DILexicalBlock(scope: !12361, file: !47, line: 2650, column: 12)
!12369 = !DILocation(line: 2650, column: 52, scope: !12367)
!12370 = !DILocation(line: 2650, column: 60, scope: !12367)
!12371 = !DILocation(line: 2650, column: 72, scope: !12367)
!12372 = !DILocation(line: 2650, column: 50, scope: !12367)
!12373 = !DILocation(line: 2650, column: 49, scope: !12367)
!12374 = !DILocation(line: 2650, column: 14, scope: !12367)
!12375 = !DILocation(line: 2650, column: 84, scope: !12367)
!12376 = !DILocation(line: 2651, column: 9, scope: !12361)
!12377 = distinct !{!12377, !12376}
!12378 = !DILocation(line: 2651, column: 35, scope: !12379)
!12379 = !DILexicalBlockFile(scope: !12380, file: !47, discriminator: 1)
!12380 = distinct !DILexicalBlock(scope: !12361, file: !47, line: 2651, column: 12)
!12381 = !DILocation(line: 2651, column: 48, scope: !12379)
!12382 = !DILocation(line: 2651, column: 56, scope: !12379)
!12383 = !DILocation(line: 2651, column: 68, scope: !12379)
!12384 = !DILocation(line: 2651, column: 46, scope: !12379)
!12385 = !DILocation(line: 2651, column: 45, scope: !12379)
!12386 = !DILocation(line: 2651, column: 14, scope: !12379)
!12387 = !DILocation(line: 2651, column: 80, scope: !12379)
!12388 = !DILocation(line: 2652, column: 9, scope: !12361)
!12389 = distinct !{!12389, !12388}
!12390 = !DILocation(line: 2652, column: 35, scope: !12391)
!12391 = !DILexicalBlockFile(scope: !12392, file: !47, discriminator: 1)
!12392 = distinct !DILexicalBlock(scope: !12361, file: !47, line: 2652, column: 12)
!12393 = !DILocation(line: 2652, column: 53, scope: !12391)
!12394 = !DILocation(line: 2652, column: 61, scope: !12391)
!12395 = !DILocation(line: 2652, column: 73, scope: !12391)
!12396 = !DILocation(line: 2652, column: 51, scope: !12391)
!12397 = !DILocation(line: 2652, column: 50, scope: !12391)
!12398 = !DILocation(line: 2652, column: 14, scope: !12391)
!12399 = !DILocation(line: 2652, column: 85, scope: !12391)
!12400 = !DILocation(line: 2653, column: 9, scope: !12361)
!12401 = distinct !{!12401, !12400}
!12402 = !DILocation(line: 2653, column: 35, scope: !12403)
!12403 = !DILexicalBlockFile(scope: !12404, file: !47, discriminator: 1)
!12404 = distinct !DILexicalBlock(scope: !12361, file: !47, line: 2653, column: 12)
!12405 = !DILocation(line: 2653, column: 52, scope: !12403)
!12406 = !DILocation(line: 2653, column: 60, scope: !12403)
!12407 = !DILocation(line: 2653, column: 72, scope: !12403)
!12408 = !DILocation(line: 2653, column: 50, scope: !12403)
!12409 = !DILocation(line: 2653, column: 49, scope: !12403)
!12410 = !DILocation(line: 2653, column: 14, scope: !12403)
!12411 = !DILocation(line: 2653, column: 84, scope: !12403)
!12412 = !DILocation(line: 2654, column: 9, scope: !12361)
!12413 = distinct !{!12413, !12412}
!12414 = !DILocation(line: 2654, column: 35, scope: !12415)
!12415 = !DILexicalBlockFile(scope: !12416, file: !47, discriminator: 1)
!12416 = distinct !DILexicalBlock(scope: !12361, file: !47, line: 2654, column: 12)
!12417 = !DILocation(line: 2654, column: 51, scope: !12415)
!12418 = !DILocation(line: 2654, column: 59, scope: !12415)
!12419 = !DILocation(line: 2654, column: 71, scope: !12415)
!12420 = !DILocation(line: 2654, column: 49, scope: !12415)
!12421 = !DILocation(line: 2654, column: 48, scope: !12415)
!12422 = !DILocation(line: 2654, column: 14, scope: !12415)
!12423 = !DILocation(line: 2654, column: 83, scope: !12415)
!12424 = !DILocation(line: 2655, column: 9, scope: !12361)
!12425 = distinct !{!12425, !12424}
!12426 = !DILocation(line: 2655, column: 35, scope: !12427)
!12427 = !DILexicalBlockFile(scope: !12428, file: !47, discriminator: 1)
!12428 = distinct !DILexicalBlock(scope: !12361, file: !47, line: 2655, column: 12)
!12429 = !DILocation(line: 2655, column: 52, scope: !12427)
!12430 = !DILocation(line: 2655, column: 60, scope: !12427)
!12431 = !DILocation(line: 2655, column: 72, scope: !12427)
!12432 = !DILocation(line: 2655, column: 50, scope: !12427)
!12433 = !DILocation(line: 2655, column: 49, scope: !12427)
!12434 = !DILocation(line: 2655, column: 14, scope: !12427)
!12435 = !DILocation(line: 2655, column: 84, scope: !12427)
!12436 = !DILocation(line: 2656, column: 9, scope: !12361)
!12437 = distinct !{!12437, !12436}
!12438 = !DILocation(line: 2656, column: 35, scope: !12439)
!12439 = !DILexicalBlockFile(scope: !12440, file: !47, discriminator: 1)
!12440 = distinct !DILexicalBlock(scope: !12361, file: !47, line: 2656, column: 12)
!12441 = !DILocation(line: 2656, column: 51, scope: !12439)
!12442 = !DILocation(line: 2656, column: 59, scope: !12439)
!12443 = !DILocation(line: 2656, column: 71, scope: !12439)
!12444 = !DILocation(line: 2656, column: 49, scope: !12439)
!12445 = !DILocation(line: 2656, column: 48, scope: !12439)
!12446 = !DILocation(line: 2656, column: 14, scope: !12439)
!12447 = !DILocation(line: 2656, column: 83, scope: !12439)
!12448 = !DILocation(line: 2657, column: 9, scope: !12361)
!12449 = distinct !{!12449, !12448}
!12450 = !DILocation(line: 2657, column: 35, scope: !12451)
!12451 = !DILexicalBlockFile(scope: !12452, file: !47, discriminator: 1)
!12452 = distinct !DILexicalBlock(scope: !12361, file: !47, line: 2657, column: 12)
!12453 = !DILocation(line: 2657, column: 61, scope: !12451)
!12454 = !DILocation(line: 2657, column: 69, scope: !12451)
!12455 = !DILocation(line: 2657, column: 81, scope: !12451)
!12456 = !DILocation(line: 2657, column: 59, scope: !12451)
!12457 = !DILocation(line: 2657, column: 58, scope: !12451)
!12458 = !DILocation(line: 2657, column: 14, scope: !12451)
!12459 = !DILocation(line: 2657, column: 93, scope: !12451)
!12460 = !DILocation(line: 2658, column: 9, scope: !12361)
!12461 = distinct !{!12461, !12460}
!12462 = !DILocation(line: 2658, column: 35, scope: !12463)
!12463 = !DILexicalBlockFile(scope: !12464, file: !47, discriminator: 1)
!12464 = distinct !DILexicalBlock(scope: !12361, file: !47, line: 2658, column: 12)
!12465 = !DILocation(line: 2658, column: 60, scope: !12463)
!12466 = !DILocation(line: 2658, column: 68, scope: !12463)
!12467 = !DILocation(line: 2658, column: 80, scope: !12463)
!12468 = !DILocation(line: 2658, column: 58, scope: !12463)
!12469 = !DILocation(line: 2658, column: 57, scope: !12463)
!12470 = !DILocation(line: 2658, column: 14, scope: !12463)
!12471 = !DILocation(line: 2658, column: 92, scope: !12463)
!12472 = !DILocation(line: 2659, column: 9, scope: !12361)
!12473 = distinct !{!12473, !12472}
!12474 = !DILocation(line: 2659, column: 35, scope: !12475)
!12475 = !DILexicalBlockFile(scope: !12476, file: !47, discriminator: 1)
!12476 = distinct !DILexicalBlock(scope: !12361, file: !47, line: 2659, column: 12)
!12477 = !DILocation(line: 2659, column: 58, scope: !12475)
!12478 = !DILocation(line: 2659, column: 66, scope: !12475)
!12479 = !DILocation(line: 2659, column: 78, scope: !12475)
!12480 = !DILocation(line: 2659, column: 56, scope: !12475)
!12481 = !DILocation(line: 2659, column: 55, scope: !12475)
!12482 = !DILocation(line: 2659, column: 14, scope: !12475)
!12483 = !DILocation(line: 2659, column: 90, scope: !12475)
!12484 = !DILocation(line: 2660, column: 9, scope: !12361)
!12485 = distinct !{!12485, !12484}
!12486 = !DILocation(line: 2660, column: 35, scope: !12487)
!12487 = !DILexicalBlockFile(scope: !12488, file: !47, discriminator: 1)
!12488 = distinct !DILexicalBlock(scope: !12361, file: !47, line: 2660, column: 12)
!12489 = !DILocation(line: 2660, column: 57, scope: !12487)
!12490 = !DILocation(line: 2660, column: 65, scope: !12487)
!12491 = !DILocation(line: 2660, column: 77, scope: !12487)
!12492 = !DILocation(line: 2660, column: 55, scope: !12487)
!12493 = !DILocation(line: 2660, column: 54, scope: !12487)
!12494 = !DILocation(line: 2660, column: 14, scope: !12487)
!12495 = !DILocation(line: 2660, column: 89, scope: !12487)
!12496 = !DILocation(line: 2661, column: 9, scope: !12361)
!12497 = distinct !{!12497, !12496}
!12498 = !DILocation(line: 2661, column: 35, scope: !12499)
!12499 = !DILexicalBlockFile(scope: !12500, file: !47, discriminator: 1)
!12500 = distinct !DILexicalBlock(scope: !12361, file: !47, line: 2661, column: 12)
!12501 = !DILocation(line: 2661, column: 61, scope: !12499)
!12502 = !DILocation(line: 2661, column: 69, scope: !12499)
!12503 = !DILocation(line: 2661, column: 81, scope: !12499)
!12504 = !DILocation(line: 2661, column: 59, scope: !12499)
!12505 = !DILocation(line: 2661, column: 58, scope: !12499)
!12506 = !DILocation(line: 2661, column: 14, scope: !12499)
!12507 = !DILocation(line: 2661, column: 93, scope: !12499)
!12508 = !DILocation(line: 2662, column: 37, scope: !12361)
!12509 = !DILocation(line: 2662, column: 9, scope: !12361)
!12510 = !DILocation(line: 2663, column: 5, scope: !12361)
!12511 = !DILocation(line: 2665, column: 9, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2665, column: 9)
!12513 = !DILocation(line: 2665, column: 9, scope: !11651)
!12514 = !DILocation(line: 2666, column: 25, scope: !12512)
!12515 = !DILocation(line: 2666, column: 28, scope: !12512)
!12516 = !DILocation(line: 2666, column: 36, scope: !12512)
!12517 = !DILocation(line: 2666, column: 46, scope: !12512)
!12518 = !DILocation(line: 2666, column: 15, scope: !12512)
!12519 = !DILocation(line: 2666, column: 13, scope: !12512)
!12520 = !DILocation(line: 2666, column: 9, scope: !12512)
!12521 = !DILocation(line: 2668, column: 9, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !11651, file: !47, line: 2668, column: 9)
!12523 = !DILocation(line: 2668, column: 17, scope: !12522)
!12524 = !DILocation(line: 2668, column: 9, scope: !11651)
!12525 = !DILocation(line: 2669, column: 29, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12522, file: !47, line: 2668, column: 31)
!12527 = !DILocation(line: 2669, column: 32, scope: !12526)
!12528 = !DILocation(line: 2669, column: 40, scope: !12526)
!12529 = !DILocation(line: 2669, column: 50, scope: !12526)
!12530 = !DILocation(line: 2669, column: 58, scope: !12526)
!12531 = !DILocation(line: 2669, column: 69, scope: !12526)
!12532 = !DILocation(line: 2669, column: 77, scope: !12526)
!12533 = !DILocation(line: 2669, column: 9, scope: !12526)
!12534 = !DILocation(line: 2672, column: 5, scope: !12526)
!12535 = !DILocation(line: 2674, column: 33, scope: !11651)
!12536 = !DILocation(line: 2674, column: 5, scope: !11651)
!12537 = !DILocation(line: 2675, column: 5, scope: !11651)
!12538 = !DILocation(line: 2676, column: 11, scope: !11651)
!12539 = !DILocation(line: 2676, column: 5, scope: !11651)
!12540 = !DILocation(line: 2678, column: 12, scope: !11651)
!12541 = !DILocation(line: 2678, column: 5, scope: !11651)
