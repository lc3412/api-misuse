; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavfilter--vf_vectorscope.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavfilter--vf_vectorscope.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVFilterPad = type { i8*, i32, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)*, %struct.AVFrame* (%struct.AVFilterLink*, i32)*, i32 (%struct.AVFilterLink*, %struct.AVFrame*)*, i32 (%struct.AVFilterLink*)*, i32 (%struct.AVFilterLink*)*, i32 (%struct.AVFilterLink*)*, i32, i32 }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVFilterLink = type { %struct.AVFilterContext*, %struct.AVFilterPad*, %struct.AVFilterContext*, %struct.AVFilterPad*, i32, i32, i32, %struct.AVRational, i64, i32, i32, %struct.AVRational, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts*, i32, i32, %struct.AVFilterGraph*, i64, i64, i32, %struct.AVRational, %struct.AVFrame*, i32, i32, i32, i32, i32, i64, i64, i8*, i32, %struct.AVBufferRef*, [61440 x i8] }
%struct.AVFilterContext = type { %struct.AVClass*, %struct.AVFilter*, i8*, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, i8*, %struct.AVFilterGraph*, i32, %struct.AVFilterInternal*, %struct.AVFilterCommand*, i8*, i8*, double*, i32, %struct.AVBufferRef*, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVFilter = type { i8*, i8*, %struct.AVFilterPad*, %struct.AVFilterPad*, %struct.AVClass*, i32, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)*, void (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32, i32, %struct.AVFilter*, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)*, i32 (%struct.AVFilterContext*, i8*)*, i32 (%struct.AVFilterContext*)* }
%struct.AVFilterInternal = type { i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)* }
%struct.AVFilterCommand = type { double, i8*, i8*, i32, %struct.AVFilterCommand* }
%struct.AVFilterFormats = type { i32, i32*, i32, %struct.AVFilterFormats*** }
%struct.AVFilterChannelLayouts = type { i64*, i32, i8, i8, i32, %struct.AVFilterChannelLayouts*** }
%struct.AVFilterGraph = type { %struct.AVClass*, %struct.AVFilterContext**, i32, i8*, i8*, i32, i32, %struct.AVFilterGraphInternal*, i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i8*, %struct.AVFilterLink**, i32, i32 }
%struct.AVFilterGraphInternal = type { i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, %struct.FFFrameQueueGlobal }
%struct.FFFrameQueueGlobal = type { i8 }
%struct.VectorscopeContext = type { %struct.AVClass*, i32, i32, float, [4 x i16], [4 x i32], [4 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i8*, i8**, void (%struct.VectorscopeContext*, %struct.AVFrame*, %struct.AVFrame*, i32)*, void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)* }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%union.unaligned_16 = type { i16 }

@.str = private unnamed_addr constant [12 x i8] c"vectorscope\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Video vectorscope.\00", align 1
@inputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i32 0, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* @filter_frame, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* @config_input, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@outputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i32 0, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* @config_output, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@vectorscope_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([42 x %struct.AVOption], [42 x %struct.AVOption]* bitcast (<{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @vectorscope_options to [42 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 7, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_vf_vectorscope = global %struct.AVFilter { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @inputs, i32 0, i32 0), %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @outputs, i32 0, i32 0), %struct.AVClass* @vectorscope_class, i32 0, i32 (%struct.AVFilterContext*)* null, i32 (%struct.AVFilterContext*)* null, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)* null, void (%struct.AVFilterContext*)* @uninit, i32 (%struct.AVFilterContext*)* @query_formats, i32 176, i32 0, %struct.AVFilter* null, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)* null, i32 (%struct.AVFilterContext*, i8*)* null, i32 (%struct.AVFilterContext*)* null }, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.3 = private unnamed_addr constant [50 x i8] c"low threshold should be less than high threshold\0A\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"libavfilter/vf_vectorscope.c\00", align 1
@positions = internal constant [10 x [14 x [3 x i16]]] [[14 x [3 x i16]] [[3 x i16] [i16 81, i16 90, i16 240], [3 x i16] [i16 41, i16 240, i16 110], [3 x i16] [i16 170, i16 166, i16 16], [3 x i16] [i16 210, i16 16, i16 146], [3 x i16] [i16 145, i16 54, i16 34], [3 x i16] [i16 106, i16 202, i16 222], [3 x i16] [i16 162, i16 44, i16 142], [3 x i16] [i16 131, i16 156, i16 44], [3 x i16] [i16 112, i16 72, i16 58], [3 x i16] [i16 84, i16 184, i16 198], [3 x i16] [i16 65, i16 100, i16 212], [3 x i16] [i16 35, i16 212, i16 114], [3 x i16] [i16 235, i16 128, i16 128], [3 x i16] [i16 16, i16 128, i16 128]], [14 x [3 x i16]] [[3 x i16] [i16 63, i16 102, i16 240], [3 x i16] [i16 32, i16 240, i16 118], [3 x i16] [i16 188, i16 154, i16 16], [3 x i16] [i16 219, i16 16, i16 138], [3 x i16] [i16 173, i16 42, i16 26], [3 x i16] [i16 78, i16 214, i16 230], [3 x i16] [i16 28, i16 212, i16 120], [3 x i16] [i16 51, i16 109, i16 212], [3 x i16] [i16 63, i16 193, i16 204], [3 x i16] [i16 133, i16 63, i16 52], [3 x i16] [i16 145, i16 147, i16 44], [3 x i16] [i16 168, i16 44, i16 136], [3 x i16] [i16 235, i16 128, i16 128], [3 x i16] [i16 16, i16 128, i16 128]], [14 x [3 x i16]] [[3 x i16] [i16 162, i16 180, i16 480], [3 x i16] [i16 82, i16 480, i16 220], [3 x i16] [i16 340, i16 332, i16 32], [3 x i16] [i16 420, i16 32, i16 292], [3 x i16] [i16 290, i16 108, i16 68], [3 x i16] [i16 212, i16 404, i16 444], [3 x i16] [i16 324, i16 88, i16 284], [3 x i16] [i16 262, i16 312, i16 88], [3 x i16] [i16 224, i16 144, i16 116], [3 x i16] [i16 168, i16 368, i16 396], [3 x i16] [i16 130, i16 200, i16 424], [3 x i16] [i16 70, i16 424, i16 228], [3 x i16] [i16 470, i16 256, i16 256], [3 x i16] [i16 32, i16 256, i16 256]], [14 x [3 x i16]] [[3 x i16] [i16 126, i16 204, i16 480], [3 x i16] [i16 64, i16 480, i16 236], [3 x i16] [i16 376, i16 308, i16 32], [3 x i16] [i16 438, i16 32, i16 276], [3 x i16] [i16 346, i16 84, i16 52], [3 x i16] [i16 156, i16 428, i16 460], [3 x i16] [i16 56, i16 424, i16 240], [3 x i16] [i16 102, i16 218, i16 424], [3 x i16] [i16 126, i16 386, i16 408], [3 x i16] [i16 266, i16 126, i16 104], [3 x i16] [i16 290, i16 294, i16 88], [3 x i16] [i16 336, i16 88, i16 272], [3 x i16] [i16 470, i16 256, i16 256], [3 x i16] [i16 32, i16 256, i16 256]], [14 x [3 x i16]] [[3 x i16] [i16 324, i16 360, i16 960], [3 x i16] [i16 164, i16 960, i16 440], [3 x i16] [i16 680, i16 664, i16 64], [3 x i16] [i16 840, i16 64, i16 584], [3 x i16] [i16 580, i16 216, i16 136], [3 x i16] [i16 424, i16 808, i16 888], [3 x i16] [i16 648, i16 176, i16 568], [3 x i16] [i16 524, i16 624, i16 176], [3 x i16] [i16 448, i16 288, i16 232], [3 x i16] [i16 336, i16 736, i16 792], [3 x i16] [i16 260, i16 400, i16 848], [3 x i16] [i16 140, i16 848, i16 456], [3 x i16] [i16 940, i16 512, i16 512], [3 x i16] [i16 64, i16 512, i16 512]], [14 x [3 x i16]] [[3 x i16] [i16 252, i16 408, i16 960], [3 x i16] [i16 128, i16 960, i16 472], [3 x i16] [i16 752, i16 616, i16 64], [3 x i16] [i16 876, i16 64, i16 552], [3 x i16] [i16 692, i16 168, i16 104], [3 x i16] [i16 312, i16 856, i16 920], [3 x i16] [i16 112, i16 848, i16 480], [3 x i16] [i16 204, i16 436, i16 848], [3 x i16] [i16 252, i16 772, i16 816], [3 x i16] [i16 532, i16 252, i16 208], [3 x i16] [i16 580, i16 588, i16 176], [3 x i16] [i16 672, i16 176, i16 544], [3 x i16] [i16 940, i16 512, i16 512], [3 x i16] [i16 64, i16 512, i16 512]], [14 x [3 x i16]] [[3 x i16] [i16 648, i16 360, i16 1920], [3 x i16] [i16 328, i16 1920, i16 880], [3 x i16] [i16 1360, i16 1328, i16 128], [3 x i16] [i16 1680, i16 64, i16 1168], [3 x i16] [i16 1160, i16 432, i16 272], [3 x i16] [i16 848, i16 1616, i16 1776], [3 x i16] [i16 1296, i16 176, i16 1136], [3 x i16] [i16 1048, i16 1248, i16 352], [3 x i16] [i16 896, i16 576, i16 464], [3 x i16] [i16 672, i16 736, i16 1584], [3 x i16] [i16 520, i16 800, i16 1696], [3 x i16] [i16 280, i16 1696, i16 912], [3 x i16] [i16 1880, i16 1024, i16 1024], [3 x i16] [i16 128, i16 1024, i16 1024]], [14 x [3 x i16]] [[3 x i16] [i16 504, i16 816, i16 1920], [3 x i16] [i16 256, i16 1920, i16 944], [3 x i16] [i16 1504, i16 1232, i16 128], [3 x i16] [i16 1752, i16 128, i16 1104], [3 x i16] [i16 1384, i16 336, i16 208], [3 x i16] [i16 624, i16 1712, i16 1840], [3 x i16] [i16 224, i16 1696, i16 960], [3 x i16] [i16 408, i16 872, i16 1696], [3 x i16] [i16 504, i16 1544, i16 1632], [3 x i16] [i16 1064, i16 504, i16 416], [3 x i16] [i16 1160, i16 1176, i16 352], [3 x i16] [i16 1344, i16 352, i16 1088], [3 x i16] [i16 1880, i16 1024, i16 1024], [3 x i16] [i16 128, i16 1024, i16 1024]], [14 x [3 x i16]] [[3 x i16] [i16 1296, i16 1440, i16 3840], [3 x i16] [i16 656, i16 3840, i16 1760], [3 x i16] [i16 2720, i16 2656, i16 256], [3 x i16] [i16 3360, i16 256, i16 2336], [3 x i16] [i16 2320, i16 864, i16 544], [3 x i16] [i16 1696, i16 3232, i16 3552], [3 x i16] [i16 2592, i16 704, i16 2272], [3 x i16] [i16 2096, i16 2496, i16 704], [3 x i16] [i16 1792, i16 1152, i16 928], [3 x i16] [i16 1344, i16 2944, i16 3168], [3 x i16] [i16 1040, i16 1600, i16 3392], [3 x i16] [i16 560, i16 3392, i16 1824], [3 x i16] [i16 3760, i16 2048, i16 2048], [3 x i16] [i16 256, i16 2048, i16 2048]], [14 x [3 x i16]] [[3 x i16] [i16 1008, i16 1632, i16 3840], [3 x i16] [i16 512, i16 3840, i16 1888], [3 x i16] [i16 3008, i16 2464, i16 256], [3 x i16] [i16 3504, i16 256, i16 2208], [3 x i16] [i16 2768, i16 672, i16 416], [3 x i16] [i16 1248, i16 3424, i16 3680], [3 x i16] [i16 448, i16 3392, i16 1920], [3 x i16] [i16 816, i16 1744, i16 3392], [3 x i16] [i16 1008, i16 3088, i16 3264], [3 x i16] [i16 2128, i16 1008, i16 832], [3 x i16] [i16 2320, i16 2352, i16 704], [3 x i16] [i16 2688, i16 704, i16 2176], [3 x i16] [i16 3760, i16 2048, i16 2048], [3 x i16] [i16 256, i16 2048, i16 2048]]], align 16
@green_graticule.color = internal constant [4 x i8] c"\80\00\00\FF", align 1
@positions_name = internal global [6 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i32 0, i32 0)], align 16
@avpriv_cga_font = external constant [2048 x i8], align 16
@.str.7 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"Cy\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"Yl\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"Mg\00", align 1
@color_graticule.color = private unnamed_addr constant [4 x i8] c"\00\00\00\FF", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"set vectorscope mode\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"gray\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"color2\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"color3\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"color4\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"color5\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"set color component on X axis\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"set color component on Y axis\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"intensity\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"set intensity\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"envelope\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"set envelope\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"instant\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"peak\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"peak+instant\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"graticule\00", align 1
@.str.37 = private unnamed_addr constant [14 x i8] c"set graticule\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"green\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"opacity\00", align 1
@.str.41 = private unnamed_addr constant [22 x i8] c"set graticule opacity\00", align 1
@.str.42 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.44 = private unnamed_addr constant [20 x i8] c"set graticule flags\00", align 1
@.str.45 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"white\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"draw white point\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"black\00", align 1
@.str.49 = private unnamed_addr constant [17 x i8] c"draw black point\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.51 = private unnamed_addr constant [16 x i8] c"draw point name\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"bgopacity\00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"set background opacity\00", align 1
@.str.54 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"lthreshold\00", align 1
@.str.56 = private unnamed_addr constant [18 x i8] c"set low threshold\00", align 1
@.str.57 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.58 = private unnamed_addr constant [11 x i8] c"hthreshold\00", align 1
@.str.59 = private unnamed_addr constant [19 x i8] c"set high threshold\00", align 1
@.str.60 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.61 = private unnamed_addr constant [11 x i8] c"colorspace\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"set colorspace\00", align 1
@.str.63 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"601\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"709\00", align 1
@vectorscope_options = internal constant <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i32 0, i32 0), i32 8, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 5.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i32 0, i32 0), i32 8, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 5.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 3 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 4 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 5 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 68, i32 1, %union.anon { i64 1 }, double 0.000000e+00, double 2.000000e+00, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i32 0, i32 0), i32 72, i32 1, %union.anon { i64 2 }, double 0.000000e+00, double 2.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i32 0, i32 0), i32 16, i32 4, { double } { double 4.000000e-03 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i32 0, i32 0), i32 16, i32 4, { double } { double 4.000000e-03 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i32 0, i32 0), i32 96, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 3.000000e+00, i32 65552, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i32 0, i32 0), i32 96, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 3.000000e+00, i32 65552, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 3 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i32 0, i32 0), i32 100, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 2.000000e+00, i32 65552, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i32 0, i32 0), i32 100, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 2.000000e+00, i32 65552, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.41, i32 0, i32 0), i32 104, i32 4, { double } { double 7.500000e-01 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.41, i32 0, i32 0), i32 104, i32 4, { double } { double 7.500000e-01 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i32 128, i32 0, %union.anon { i64 4 }, double 0.000000e+00, double 7.000000e+00, i32 65552, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i32 128, i32 0, %union.anon { i64 4 }, double 0.000000e+00, double 7.000000e+00, i32 65552, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.49, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i32 0, i32 0), i32 108, i32 4, { double } { double 3.000000e-01 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i32 0, i32 0), i32 108, i32 4, { double } { double 3.000000e-01 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.56, i32 0, i32 0), i32 112, i32 4, { double } zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.56, i32 0, i32 0), i32 112, i32 4, { double } zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.59, i32 0, i32 0), i32 116, i32 4, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.59, i32 0, i32 0), i32 116, i32 4, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i32 0, i32 0), i32 132, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 2.000000e+00, i32 65552, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i32 0, i32 0), i32 132, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 2.000000e+00, i32 65552, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i32 0, i32 0) }, %struct.AVOption zeroinitializer }>, align 16
@in2_pix_fmts = internal constant [37 x i32] [i32 33, i32 0, i32 12, i32 80, i32 4, i32 13, i32 81, i32 5, i32 14, i32 7, i32 140, i32 31, i32 6, i32 113, i32 73, i32 75, i32 77, i32 166, i32 137, i32 164, i32 62, i32 72, i32 68, i32 64, i32 66, i32 70, i32 83, i32 85, i32 87, i32 89, i32 91, i32 93, i32 125, i32 129, i32 133, i32 156, i32 -1], align 16
@in1_pix_fmts = internal constant [16 x i32] [i32 81, i32 5, i32 14, i32 68, i32 70, i32 87, i32 93, i32 133, i32 113, i32 73, i32 75, i32 77, i32 166, i32 137, i32 164, i32 -1], align 16
@out_rgb8_pix_fmts = internal constant [3 x i32] [i32 113, i32 73, i32 -1], align 4
@out_rgb9_pix_fmts = internal constant [2 x i32] [i32 75, i32 -1], align 4
@out_rgb10_pix_fmts = internal constant [3 x i32] [i32 77, i32 166, i32 -1], align 4
@out_rgb12_pix_fmts = internal constant [3 x i32] [i32 137, i32 164, i32 -1], align 4
@out_yuv8_pix_fmts = internal constant [3 x i32] [i32 81, i32 5, i32 -1], align 4
@out_yuv9_pix_fmts = internal constant [3 x i32] [i32 87, i32 68, i32 -1], align 4
@out_yuv10_pix_fmts = internal constant [3 x i32] [i32 93, i32 70, i32 -1], align 4
@out_yuv12_pix_fmts = internal constant [2 x i32] [i32 133, i32 -1], align 4

; Function Attrs: cold nounwind optsize uwtable
define internal void @uninit(%struct.AVFilterContext* %ctx) #0 !dbg !907 {
entry:
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.VectorscopeContext*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !908, metadata !909), !dbg !910
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s, metadata !911, metadata !909), !dbg !912
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !913
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !914
  %1 = load i8*, i8** %priv, align 8, !dbg !914
  %2 = bitcast i8* %1 to %struct.VectorscopeContext*, !dbg !913
  store %struct.VectorscopeContext* %2, %struct.VectorscopeContext** %s, align 8, !dbg !912
  %3 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !915
  %peak = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %3, i32 0, i32 28, !dbg !916
  %4 = bitcast i8*** %peak to i8*, !dbg !917
  call void @av_freep(i8* %4), !dbg !918
  %5 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !919
  %peak_memory = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %5, i32 0, i32 27, !dbg !920
  %6 = bitcast i8** %peak_memory to i8*, !dbg !921
  call void @av_freep(i8* %6), !dbg !922
  ret void, !dbg !923
}

; Function Attrs: nounwind uwtable
define internal i32 @query_formats(%struct.AVFilterContext* %ctx) #1 !dbg !924 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.VectorscopeContext*, align 8
  %out_pix_fmts = alloca i32*, align 8
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  %avff = alloca %struct.AVFilterFormats*, align 8
  %depth = alloca i32, align 4
  %rgb = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %in_pix_fmts = alloca i32*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !925, metadata !909), !dbg !926
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s, metadata !927, metadata !909), !dbg !928
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !929
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !930
  %1 = load i8*, i8** %priv, align 8, !dbg !930
  %2 = bitcast i8* %1 to %struct.VectorscopeContext*, !dbg !929
  store %struct.VectorscopeContext* %2, %struct.VectorscopeContext** %s, align 8, !dbg !928
  call void @llvm.dbg.declare(metadata i32** %out_pix_fmts, metadata !931, metadata !909), !dbg !933
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !934, metadata !909), !dbg !960
  call void @llvm.dbg.declare(metadata %struct.AVFilterFormats** %avff, metadata !961, metadata !909), !dbg !962
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !963, metadata !909), !dbg !964
  call void @llvm.dbg.declare(metadata i32* %rgb, metadata !965, metadata !909), !dbg !966
  call void @llvm.dbg.declare(metadata i32* %i, metadata !967, metadata !909), !dbg !968
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !969, metadata !909), !dbg !970
  %3 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !971
  %inputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %3, i32 0, i32 4, !dbg !973
  %4 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs, align 8, !dbg !973
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %4, i64 0, !dbg !971
  %5 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !971
  %in_formats = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %5, i32 0, i32 12, !dbg !974
  %6 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %in_formats, align 8, !dbg !974
  %tobool = icmp ne %struct.AVFilterFormats* %6, null, !dbg !971
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !975

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !976
  %inputs1 = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %7, i32 0, i32 4, !dbg !977
  %8 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs1, align 8, !dbg !977
  %arrayidx2 = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %8, i64 0, !dbg !976
  %9 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx2, align 8, !dbg !976
  %in_formats3 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %9, i32 0, i32 12, !dbg !978
  %10 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %in_formats3, align 8, !dbg !978
  %nb_formats = getelementptr inbounds %struct.AVFilterFormats, %struct.AVFilterFormats* %10, i32 0, i32 0, !dbg !979
  %11 = load i32, i32* %nb_formats, align 8, !dbg !979
  %tobool4 = icmp ne i32 %11, 0, !dbg !976
  br i1 %tobool4, label %if.end, label %if.then, !dbg !980

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -11, i32* %retval, align 4, !dbg !982
  br label %return, !dbg !982

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !984
  %inputs5 = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %12, i32 0, i32 4, !dbg !986
  %13 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs5, align 8, !dbg !986
  %arrayidx6 = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %13, i64 0, !dbg !984
  %14 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx6, align 8, !dbg !984
  %out_formats = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %14, i32 0, i32 13, !dbg !987
  %15 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %out_formats, align 8, !dbg !987
  %tobool7 = icmp ne %struct.AVFilterFormats* %15, null, !dbg !984
  br i1 %tobool7, label %if.end25, label %if.then8, !dbg !988

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32** %in_pix_fmts, metadata !989, metadata !909), !dbg !991
  %16 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !992
  %x = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %16, i32 0, i32 9, !dbg !994
  %17 = load i32, i32* %x, align 4, !dbg !994
  %cmp = icmp eq i32 %17, 1, !dbg !995
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false10, !dbg !996

land.lhs.true:                                    ; preds = %if.then8
  %18 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !997
  %y = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %18, i32 0, i32 10, !dbg !999
  %19 = load i32, i32* %y, align 8, !dbg !999
  %cmp9 = icmp eq i32 %19, 2, !dbg !1000
  br i1 %cmp9, label %if.then16, label %lor.lhs.false10, !dbg !1001

lor.lhs.false10:                                  ; preds = %land.lhs.true, %if.then8
  %20 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1002
  %x11 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %20, i32 0, i32 9, !dbg !1004
  %21 = load i32, i32* %x11, align 4, !dbg !1004
  %cmp12 = icmp eq i32 %21, 2, !dbg !1005
  br i1 %cmp12, label %land.lhs.true13, label %if.else, !dbg !1006

land.lhs.true13:                                  ; preds = %lor.lhs.false10
  %22 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1007
  %y14 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %22, i32 0, i32 10, !dbg !1009
  %23 = load i32, i32* %y14, align 8, !dbg !1009
  %cmp15 = icmp eq i32 %23, 1, !dbg !1010
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !1011

if.then16:                                        ; preds = %land.lhs.true13, %land.lhs.true
  store i32* getelementptr inbounds ([37 x i32], [37 x i32]* @in2_pix_fmts, i32 0, i32 0), i32** %in_pix_fmts, align 8, !dbg !1012
  br label %if.end17, !dbg !1013

if.else:                                          ; preds = %land.lhs.true13, %lor.lhs.false10
  store i32* getelementptr inbounds ([16 x i32], [16 x i32]* @in1_pix_fmts, i32 0, i32 0), i32** %in_pix_fmts, align 8, !dbg !1014
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then16
  %24 = load i32*, i32** %in_pix_fmts, align 8, !dbg !1015
  %call = call %struct.AVFilterFormats* @ff_make_format_list(i32* %24), !dbg !1017
  %25 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1018
  %inputs18 = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %25, i32 0, i32 4, !dbg !1019
  %26 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs18, align 8, !dbg !1019
  %arrayidx19 = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %26, i64 0, !dbg !1018
  %27 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx19, align 8, !dbg !1018
  %out_formats20 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %27, i32 0, i32 13, !dbg !1020
  %call21 = call i32 @ff_formats_ref(%struct.AVFilterFormats* %call, %struct.AVFilterFormats** %out_formats20), !dbg !1021
  store i32 %call21, i32* %ret, align 4, !dbg !1023
  %cmp22 = icmp slt i32 %call21, 0, !dbg !1024
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !1025

if.then23:                                        ; preds = %if.end17
  %28 = load i32, i32* %ret, align 4, !dbg !1026
  store i32 %28, i32* %retval, align 4, !dbg !1027
  br label %return, !dbg !1027

if.end24:                                         ; preds = %if.end17
  br label %if.end25, !dbg !1028

if.end25:                                         ; preds = %if.end24, %if.end
  %29 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1029
  %inputs26 = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %29, i32 0, i32 4, !dbg !1030
  %30 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs26, align 8, !dbg !1030
  %arrayidx27 = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %30, i64 0, !dbg !1029
  %31 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx27, align 8, !dbg !1029
  %in_formats28 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %31, i32 0, i32 12, !dbg !1031
  %32 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %in_formats28, align 8, !dbg !1031
  store %struct.AVFilterFormats* %32, %struct.AVFilterFormats** %avff, align 8, !dbg !1032
  %33 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %avff, align 8, !dbg !1033
  %formats = getelementptr inbounds %struct.AVFilterFormats, %struct.AVFilterFormats* %33, i32 0, i32 1, !dbg !1034
  %34 = load i32*, i32** %formats, align 8, !dbg !1034
  %arrayidx29 = getelementptr inbounds i32, i32* %34, i64 0, !dbg !1033
  %35 = load i32, i32* %arrayidx29, align 4, !dbg !1033
  %call30 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %35), !dbg !1035
  store %struct.AVPixFmtDescriptor* %call30, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1036
  %36 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1037
  %flags = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %36, i32 0, i32 4, !dbg !1038
  %37 = load i64, i64* %flags, align 8, !dbg !1038
  %and = and i64 %37, 32, !dbg !1039
  %conv = trunc i64 %and to i32, !dbg !1037
  store i32 %conv, i32* %rgb, align 4, !dbg !1040
  %38 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1041
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %38, i32 0, i32 5, !dbg !1042
  %arrayidx31 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 0, !dbg !1041
  %depth32 = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx31, i32 0, i32 4, !dbg !1043
  %39 = load i32, i32* %depth32, align 8, !dbg !1043
  store i32 %39, i32* %depth, align 4, !dbg !1044
  store i32 1, i32* %i, align 4, !dbg !1045
  br label %for.cond, !dbg !1047

for.cond:                                         ; preds = %for.inc, %if.end25
  %40 = load i32, i32* %i, align 4, !dbg !1048
  %41 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %avff, align 8, !dbg !1051
  %nb_formats33 = getelementptr inbounds %struct.AVFilterFormats, %struct.AVFilterFormats* %41, i32 0, i32 0, !dbg !1052
  %42 = load i32, i32* %nb_formats33, align 8, !dbg !1052
  %cmp34 = icmp ult i32 %40, %42, !dbg !1053
  br i1 %cmp34, label %for.body, label %for.end, !dbg !1054

for.body:                                         ; preds = %for.cond
  %43 = load i32, i32* %i, align 4, !dbg !1055
  %idxprom = sext i32 %43 to i64, !dbg !1057
  %44 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %avff, align 8, !dbg !1057
  %formats36 = getelementptr inbounds %struct.AVFilterFormats, %struct.AVFilterFormats* %44, i32 0, i32 1, !dbg !1058
  %45 = load i32*, i32** %formats36, align 8, !dbg !1058
  %arrayidx37 = getelementptr inbounds i32, i32* %45, i64 %idxprom, !dbg !1057
  %46 = load i32, i32* %arrayidx37, align 4, !dbg !1057
  %call38 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %46), !dbg !1059
  store %struct.AVPixFmtDescriptor* %call38, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1060
  %47 = load i32, i32* %rgb, align 4, !dbg !1061
  %conv39 = sext i32 %47 to i64, !dbg !1061
  %48 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1063
  %flags40 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %48, i32 0, i32 4, !dbg !1064
  %49 = load i64, i64* %flags40, align 8, !dbg !1064
  %and41 = and i64 %49, 32, !dbg !1065
  %cmp42 = icmp ne i64 %conv39, %and41, !dbg !1066
  br i1 %cmp42, label %if.then50, label %lor.lhs.false44, !dbg !1067

lor.lhs.false44:                                  ; preds = %for.body
  %50 = load i32, i32* %depth, align 4, !dbg !1068
  %51 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1069
  %comp45 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %51, i32 0, i32 5, !dbg !1070
  %arrayidx46 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp45, i64 0, i64 0, !dbg !1069
  %depth47 = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx46, i32 0, i32 4, !dbg !1071
  %52 = load i32, i32* %depth47, align 8, !dbg !1071
  %cmp48 = icmp ne i32 %50, %52, !dbg !1072
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !1073

if.then50:                                        ; preds = %lor.lhs.false44, %for.body
  store i32 -11, i32* %retval, align 4, !dbg !1075
  br label %return, !dbg !1075

if.end51:                                         ; preds = %lor.lhs.false44
  br label %for.inc, !dbg !1076

for.inc:                                          ; preds = %if.end51
  %53 = load i32, i32* %i, align 4, !dbg !1077
  %inc = add nsw i32 %53, 1, !dbg !1077
  store i32 %inc, i32* %i, align 4, !dbg !1077
  br label %for.cond, !dbg !1079, !llvm.loop !1080

for.end:                                          ; preds = %for.cond
  %54 = load i32, i32* %rgb, align 4, !dbg !1082
  %tobool52 = icmp ne i32 %54, 0, !dbg !1082
  br i1 %tobool52, label %land.lhs.true53, label %if.else57, !dbg !1084

land.lhs.true53:                                  ; preds = %for.end
  %55 = load i32, i32* %depth, align 4, !dbg !1085
  %cmp54 = icmp eq i32 %55, 8, !dbg !1087
  br i1 %cmp54, label %if.then56, label %if.else57, !dbg !1088

if.then56:                                        ; preds = %land.lhs.true53
  store i32* getelementptr inbounds ([3 x i32], [3 x i32]* @out_rgb8_pix_fmts, i32 0, i32 0), i32** %out_pix_fmts, align 8, !dbg !1089
  br label %if.end99, !dbg !1090

if.else57:                                        ; preds = %land.lhs.true53, %for.end
  %56 = load i32, i32* %rgb, align 4, !dbg !1091
  %tobool58 = icmp ne i32 %56, 0, !dbg !1091
  br i1 %tobool58, label %land.lhs.true59, label %if.else63, !dbg !1093

land.lhs.true59:                                  ; preds = %if.else57
  %57 = load i32, i32* %depth, align 4, !dbg !1094
  %cmp60 = icmp eq i32 %57, 9, !dbg !1096
  br i1 %cmp60, label %if.then62, label %if.else63, !dbg !1097

if.then62:                                        ; preds = %land.lhs.true59
  store i32* getelementptr inbounds ([2 x i32], [2 x i32]* @out_rgb9_pix_fmts, i32 0, i32 0), i32** %out_pix_fmts, align 8, !dbg !1098
  br label %if.end98, !dbg !1099

if.else63:                                        ; preds = %land.lhs.true59, %if.else57
  %58 = load i32, i32* %rgb, align 4, !dbg !1100
  %tobool64 = icmp ne i32 %58, 0, !dbg !1100
  br i1 %tobool64, label %land.lhs.true65, label %if.else69, !dbg !1102

land.lhs.true65:                                  ; preds = %if.else63
  %59 = load i32, i32* %depth, align 4, !dbg !1103
  %cmp66 = icmp eq i32 %59, 10, !dbg !1105
  br i1 %cmp66, label %if.then68, label %if.else69, !dbg !1106

if.then68:                                        ; preds = %land.lhs.true65
  store i32* getelementptr inbounds ([3 x i32], [3 x i32]* @out_rgb10_pix_fmts, i32 0, i32 0), i32** %out_pix_fmts, align 8, !dbg !1107
  br label %if.end97, !dbg !1108

if.else69:                                        ; preds = %land.lhs.true65, %if.else63
  %60 = load i32, i32* %rgb, align 4, !dbg !1109
  %tobool70 = icmp ne i32 %60, 0, !dbg !1109
  br i1 %tobool70, label %land.lhs.true71, label %if.else75, !dbg !1111

land.lhs.true71:                                  ; preds = %if.else69
  %61 = load i32, i32* %depth, align 4, !dbg !1112
  %cmp72 = icmp eq i32 %61, 12, !dbg !1114
  br i1 %cmp72, label %if.then74, label %if.else75, !dbg !1115

if.then74:                                        ; preds = %land.lhs.true71
  store i32* getelementptr inbounds ([3 x i32], [3 x i32]* @out_rgb12_pix_fmts, i32 0, i32 0), i32** %out_pix_fmts, align 8, !dbg !1116
  br label %if.end96, !dbg !1117

if.else75:                                        ; preds = %land.lhs.true71, %if.else69
  %62 = load i32, i32* %depth, align 4, !dbg !1118
  %cmp76 = icmp eq i32 %62, 8, !dbg !1120
  br i1 %cmp76, label %if.then78, label %if.else79, !dbg !1121

if.then78:                                        ; preds = %if.else75
  store i32* getelementptr inbounds ([3 x i32], [3 x i32]* @out_yuv8_pix_fmts, i32 0, i32 0), i32** %out_pix_fmts, align 8, !dbg !1122
  br label %if.end95, !dbg !1123

if.else79:                                        ; preds = %if.else75
  %63 = load i32, i32* %depth, align 4, !dbg !1124
  %cmp80 = icmp eq i32 %63, 9, !dbg !1126
  br i1 %cmp80, label %if.then82, label %if.else83, !dbg !1127

if.then82:                                        ; preds = %if.else79
  store i32* getelementptr inbounds ([3 x i32], [3 x i32]* @out_yuv9_pix_fmts, i32 0, i32 0), i32** %out_pix_fmts, align 8, !dbg !1128
  br label %if.end94, !dbg !1129

if.else83:                                        ; preds = %if.else79
  %64 = load i32, i32* %depth, align 4, !dbg !1130
  %cmp84 = icmp eq i32 %64, 10, !dbg !1132
  br i1 %cmp84, label %if.then86, label %if.else87, !dbg !1133

if.then86:                                        ; preds = %if.else83
  store i32* getelementptr inbounds ([3 x i32], [3 x i32]* @out_yuv10_pix_fmts, i32 0, i32 0), i32** %out_pix_fmts, align 8, !dbg !1134
  br label %if.end93, !dbg !1135

if.else87:                                        ; preds = %if.else83
  %65 = load i32, i32* %depth, align 4, !dbg !1136
  %cmp88 = icmp eq i32 %65, 12, !dbg !1138
  br i1 %cmp88, label %if.then90, label %if.else91, !dbg !1139

if.then90:                                        ; preds = %if.else87
  store i32* getelementptr inbounds ([2 x i32], [2 x i32]* @out_yuv12_pix_fmts, i32 0, i32 0), i32** %out_pix_fmts, align 8, !dbg !1140
  br label %if.end92, !dbg !1141

if.else91:                                        ; preds = %if.else87
  store i32 -11, i32* %retval, align 4, !dbg !1142
  br label %return, !dbg !1142

if.end92:                                         ; preds = %if.then90
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then86
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then82
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then78
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then74
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then68
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then62
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then56
  %66 = load i32*, i32** %out_pix_fmts, align 8, !dbg !1143
  %call100 = call %struct.AVFilterFormats* @ff_make_format_list(i32* %66), !dbg !1145
  %67 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1146
  %outputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %67, i32 0, i32 7, !dbg !1147
  %68 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %outputs, align 8, !dbg !1147
  %arrayidx101 = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %68, i64 0, !dbg !1146
  %69 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx101, align 8, !dbg !1146
  %in_formats102 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %69, i32 0, i32 12, !dbg !1148
  %call103 = call i32 @ff_formats_ref(%struct.AVFilterFormats* %call100, %struct.AVFilterFormats** %in_formats102), !dbg !1149
  store i32 %call103, i32* %ret, align 4, !dbg !1151
  %cmp104 = icmp slt i32 %call103, 0, !dbg !1152
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !1153

if.then106:                                       ; preds = %if.end99
  %70 = load i32, i32* %ret, align 4, !dbg !1154
  store i32 %70, i32* %retval, align 4, !dbg !1155
  br label %return, !dbg !1155

if.end107:                                        ; preds = %if.end99
  store i32 0, i32* %retval, align 4, !dbg !1156
  br label %return, !dbg !1156

return:                                           ; preds = %if.end107, %if.then106, %if.else91, %if.then50, %if.then23, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !1157
  ret i32 %71, !dbg !1157
}

; Function Attrs: nounwind uwtable
define internal i32 @filter_frame(%struct.AVFilterLink* %inlink, %struct.AVFrame* %in) #1 !dbg !1158 {
entry:
  %retval = alloca i32, align 4
  %inlink.addr = alloca %struct.AVFilterLink*, align 8
  %in.addr = alloca %struct.AVFrame*, align 8
  %ctx = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.VectorscopeContext*, align 8
  %outlink = alloca %struct.AVFilterLink*, align 8
  %out = alloca %struct.AVFrame*, align 8
  %plane = alloca i32, align 4
  store %struct.AVFilterLink* %inlink, %struct.AVFilterLink** %inlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink.addr, metadata !1159, metadata !909), !dbg !1160
  store %struct.AVFrame* %in, %struct.AVFrame** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %in.addr, metadata !1161, metadata !909), !dbg !1162
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx, metadata !1163, metadata !909), !dbg !1164
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1165
  %dst = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 2, !dbg !1166
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %dst, align 8, !dbg !1166
  store %struct.AVFilterContext* %1, %struct.AVFilterContext** %ctx, align 8, !dbg !1164
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s, metadata !1167, metadata !909), !dbg !1168
  %2 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1169
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %2, i32 0, i32 9, !dbg !1170
  %3 = load i8*, i8** %priv, align 8, !dbg !1170
  %4 = bitcast i8* %3 to %struct.VectorscopeContext*, !dbg !1169
  store %struct.VectorscopeContext* %4, %struct.VectorscopeContext** %s, align 8, !dbg !1168
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink, metadata !1171, metadata !909), !dbg !1172
  %5 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1173
  %outputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %5, i32 0, i32 7, !dbg !1174
  %6 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %outputs, align 8, !dbg !1174
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %6, i64 0, !dbg !1173
  %7 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !1173
  store %struct.AVFilterLink* %7, %struct.AVFilterLink** %outlink, align 8, !dbg !1172
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out, metadata !1175, metadata !909), !dbg !1176
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !1177, metadata !909), !dbg !1178
  %8 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1179
  %colorspace = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %8, i32 0, i32 25, !dbg !1181
  %9 = load i32, i32* %colorspace, align 4, !dbg !1181
  %tobool = icmp ne i32 %9, 0, !dbg !1179
  br i1 %tobool, label %if.then, label %if.else, !dbg !1182

if.then:                                          ; preds = %entry
  %10 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1183
  %depth = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %10, i32 0, i32 14, !dbg !1185
  %11 = load i32, i32* %depth, align 8, !dbg !1185
  %sub = sub nsw i32 %11, 8, !dbg !1186
  %mul = mul nsw i32 %sub, 2, !dbg !1187
  %12 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1188
  %colorspace1 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %12, i32 0, i32 25, !dbg !1189
  %13 = load i32, i32* %colorspace1, align 4, !dbg !1189
  %add = add nsw i32 %mul, %13, !dbg !1190
  %sub2 = sub nsw i32 %add, 1, !dbg !1191
  %14 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1192
  %cs = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %14, i32 0, i32 26, !dbg !1193
  store i32 %sub2, i32* %cs, align 8, !dbg !1194
  br label %if.end, !dbg !1195

if.else:                                          ; preds = %entry
  %15 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1196
  %colorspace3 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 34, !dbg !1198
  %16 = load i32, i32* %colorspace3, align 4, !dbg !1198
  switch i32 %16, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb
    i32 1, label %sw.bb9
  ], !dbg !1199

sw.bb:                                            ; preds = %if.else, %if.else
  %17 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1200
  %depth4 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %17, i32 0, i32 14, !dbg !1202
  %18 = load i32, i32* %depth4, align 8, !dbg !1202
  %sub5 = sub nsw i32 %18, 8, !dbg !1203
  %mul6 = mul nsw i32 %sub5, 2, !dbg !1204
  %add7 = add nsw i32 %mul6, 0, !dbg !1205
  %19 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1206
  %cs8 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %19, i32 0, i32 26, !dbg !1207
  store i32 %add7, i32* %cs8, align 8, !dbg !1208
  br label %sw.epilog, !dbg !1209

sw.bb9:                                           ; preds = %if.else
  br label %sw.default, !dbg !1210

sw.default:                                       ; preds = %if.else, %sw.bb9
  %20 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1212
  %depth10 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %20, i32 0, i32 14, !dbg !1213
  %21 = load i32, i32* %depth10, align 8, !dbg !1213
  %sub11 = sub nsw i32 %21, 8, !dbg !1214
  %mul12 = mul nsw i32 %sub11, 2, !dbg !1215
  %add13 = add nsw i32 %mul12, 1, !dbg !1216
  %22 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1217
  %cs14 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %22, i32 0, i32 26, !dbg !1218
  store i32 %add13, i32* %cs14, align 8, !dbg !1219
  br label %sw.epilog, !dbg !1220

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end

if.end:                                           ; preds = %sw.epilog, %if.then
  %23 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1221
  %24 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1222
  %w = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %24, i32 0, i32 5, !dbg !1223
  %25 = load i32, i32* %w, align 4, !dbg !1223
  %26 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1224
  %h = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %26, i32 0, i32 6, !dbg !1225
  %27 = load i32, i32* %h, align 8, !dbg !1225
  %call = call %struct.AVFrame* @ff_get_video_buffer(%struct.AVFilterLink* %23, i32 %25, i32 %27), !dbg !1226
  store %struct.AVFrame* %call, %struct.AVFrame** %out, align 8, !dbg !1227
  %28 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1228
  %tobool15 = icmp ne %struct.AVFrame* %28, null, !dbg !1228
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !1230

if.then16:                                        ; preds = %if.end
  call void @av_frame_free(%struct.AVFrame** %in.addr), !dbg !1231
  store i32 -12, i32* %retval, align 4, !dbg !1233
  br label %return, !dbg !1233

if.end17:                                         ; preds = %if.end
  %29 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1234
  %30 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1235
  %call18 = call i32 @av_frame_copy_props(%struct.AVFrame* %29, %struct.AVFrame* %30), !dbg !1236
  %31 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1237
  %vectorscope = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %31, i32 0, i32 29, !dbg !1238
  %32 = load void (%struct.VectorscopeContext*, %struct.AVFrame*, %struct.AVFrame*, i32)*, void (%struct.VectorscopeContext*, %struct.AVFrame*, %struct.AVFrame*, i32)** %vectorscope, align 8, !dbg !1238
  %33 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1239
  %34 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1240
  %35 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1241
  %36 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1242
  %pd = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %36, i32 0, i32 11, !dbg !1243
  %37 = load i32, i32* %pd, align 4, !dbg !1243
  call void %32(%struct.VectorscopeContext* %33, %struct.AVFrame* %34, %struct.AVFrame* %35, i32 %37), !dbg !1237
  %38 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1244
  %graticulef = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %38, i32 0, i32 30, !dbg !1245
  %39 = load void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)*, void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)** %graticulef, align 8, !dbg !1245
  %40 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1246
  %41 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1247
  %42 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1248
  %x = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %42, i32 0, i32 9, !dbg !1249
  %43 = load i32, i32* %x, align 4, !dbg !1249
  %44 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1250
  %y = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %44, i32 0, i32 10, !dbg !1251
  %45 = load i32, i32* %y, align 8, !dbg !1251
  %46 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1252
  %pd19 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %46, i32 0, i32 11, !dbg !1253
  %47 = load i32, i32* %pd19, align 4, !dbg !1253
  %48 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1254
  %cs20 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %48, i32 0, i32 26, !dbg !1255
  %49 = load i32, i32* %cs20, align 8, !dbg !1255
  call void %39(%struct.VectorscopeContext* %40, %struct.AVFrame* %41, i32 %43, i32 %45, i32 %47, i32 %49), !dbg !1244
  store i32 0, i32* %plane, align 4, !dbg !1256
  br label %for.cond, !dbg !1258

for.cond:                                         ; preds = %for.inc, %if.end17
  %50 = load i32, i32* %plane, align 4, !dbg !1259
  %cmp = icmp slt i32 %50, 4, !dbg !1262
  br i1 %cmp, label %for.body, label %for.end, !dbg !1263

for.body:                                         ; preds = %for.cond
  %51 = load i32, i32* %plane, align 4, !dbg !1264
  %idxprom = sext i32 %51 to i64, !dbg !1267
  %52 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1267
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %52, i32 0, i32 0, !dbg !1268
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !1267
  %53 = load i8*, i8** %arrayidx21, align 8, !dbg !1267
  %tobool22 = icmp ne i8* %53, null, !dbg !1267
  br i1 %tobool22, label %if.then23, label %if.end38, !dbg !1269

if.then23:                                        ; preds = %for.body
  %54 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1270
  %size = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %54, i32 0, i32 13, !dbg !1272
  %55 = load i32, i32* %size, align 4, !dbg !1272
  %sub24 = sub nsw i32 %55, 1, !dbg !1273
  %56 = load i32, i32* %plane, align 4, !dbg !1274
  %idxprom25 = sext i32 %56 to i64, !dbg !1275
  %57 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1275
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %57, i32 0, i32 1, !dbg !1276
  %arrayidx26 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom25, !dbg !1275
  %58 = load i32, i32* %arrayidx26, align 4, !dbg !1275
  %mul27 = mul nsw i32 %sub24, %58, !dbg !1277
  %59 = load i32, i32* %plane, align 4, !dbg !1278
  %idxprom28 = sext i32 %59 to i64, !dbg !1279
  %60 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1279
  %data29 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %60, i32 0, i32 0, !dbg !1280
  %arrayidx30 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data29, i64 0, i64 %idxprom28, !dbg !1279
  %61 = load i8*, i8** %arrayidx30, align 8, !dbg !1281
  %idx.ext = sext i32 %mul27 to i64, !dbg !1281
  %add.ptr = getelementptr inbounds i8, i8* %61, i64 %idx.ext, !dbg !1281
  store i8* %add.ptr, i8** %arrayidx30, align 8, !dbg !1281
  %62 = load i32, i32* %plane, align 4, !dbg !1282
  %idxprom31 = sext i32 %62 to i64, !dbg !1283
  %63 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1283
  %linesize32 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %63, i32 0, i32 1, !dbg !1284
  %arrayidx33 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize32, i64 0, i64 %idxprom31, !dbg !1283
  %64 = load i32, i32* %arrayidx33, align 4, !dbg !1283
  %sub34 = sub nsw i32 0, %64, !dbg !1285
  %65 = load i32, i32* %plane, align 4, !dbg !1286
  %idxprom35 = sext i32 %65 to i64, !dbg !1287
  %66 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1287
  %linesize36 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %66, i32 0, i32 1, !dbg !1288
  %arrayidx37 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize36, i64 0, i64 %idxprom35, !dbg !1287
  store i32 %sub34, i32* %arrayidx37, align 4, !dbg !1289
  br label %if.end38, !dbg !1290

if.end38:                                         ; preds = %if.then23, %for.body
  br label %for.inc, !dbg !1291

for.inc:                                          ; preds = %if.end38
  %67 = load i32, i32* %plane, align 4, !dbg !1292
  %inc = add nsw i32 %67, 1, !dbg !1292
  store i32 %inc, i32* %plane, align 4, !dbg !1292
  br label %for.cond, !dbg !1294, !llvm.loop !1295

for.end:                                          ; preds = %for.cond
  call void @av_frame_free(%struct.AVFrame** %in.addr), !dbg !1297
  %68 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1298
  %69 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1299
  %call39 = call i32 @ff_filter_frame(%struct.AVFilterLink* %68, %struct.AVFrame* %69), !dbg !1300
  store i32 %call39, i32* %retval, align 4, !dbg !1301
  br label %return, !dbg !1301

return:                                           ; preds = %for.end, %if.then16
  %70 = load i32, i32* %retval, align 4, !dbg !1302
  ret i32 %70, !dbg !1302
}

; Function Attrs: nounwind uwtable
define internal i32 @config_input(%struct.AVFilterLink* %inlink) #1 !dbg !1303 {
entry:
  %retval = alloca i32, align 4
  %inlink.addr = alloca %struct.AVFilterLink*, align 8
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  %ctx = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.VectorscopeContext*, align 8
  store %struct.AVFilterLink* %inlink, %struct.AVFilterLink** %inlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink.addr, metadata !1304, metadata !909), !dbg !1305
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !1306, metadata !909), !dbg !1307
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1308
  %format = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 10, !dbg !1309
  %1 = load i32, i32* %format, align 4, !dbg !1309
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %1), !dbg !1310
  store %struct.AVPixFmtDescriptor* %call, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1307
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx, metadata !1311, metadata !909), !dbg !1312
  %2 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1313
  %dst = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %2, i32 0, i32 2, !dbg !1314
  %3 = load %struct.AVFilterContext*, %struct.AVFilterContext** %dst, align 8, !dbg !1314
  store %struct.AVFilterContext* %3, %struct.AVFilterContext** %ctx, align 8, !dbg !1312
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s, metadata !1315, metadata !909), !dbg !1316
  %4 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1317
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %4, i32 0, i32 9, !dbg !1318
  %5 = load i8*, i8** %priv, align 8, !dbg !1318
  %6 = bitcast i8* %5 to %struct.VectorscopeContext*, !dbg !1317
  store %struct.VectorscopeContext* %6, %struct.VectorscopeContext** %s, align 8, !dbg !1316
  %7 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1319
  %flags = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %7, i32 0, i32 4, !dbg !1320
  %8 = load i64, i64* %flags, align 8, !dbg !1320
  %and = and i64 %8, 32, !dbg !1321
  %tobool = icmp ne i64 %and, 0, !dbg !1322
  %lnot = xor i1 %tobool, true, !dbg !1322
  %lnot.ext = zext i1 %lnot to i32, !dbg !1322
  %9 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1323
  %is_yuv = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %9, i32 0, i32 12, !dbg !1324
  store i32 %lnot.ext, i32* %is_yuv, align 8, !dbg !1325
  %10 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1326
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %10, i32 0, i32 5, !dbg !1327
  %arrayidx = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 0, !dbg !1326
  %depth = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx, i32 0, i32 4, !dbg !1328
  %11 = load i32, i32* %depth, align 8, !dbg !1328
  %shl = shl i32 1, %11, !dbg !1329
  %12 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1330
  %size = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %12, i32 0, i32 13, !dbg !1331
  store i32 %shl, i32* %size, align 4, !dbg !1332
  %13 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1333
  %size1 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %13, i32 0, i32 13, !dbg !1334
  %14 = load i32, i32* %size1, align 4, !dbg !1334
  %div = sdiv i32 %14, 256, !dbg !1335
  %15 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1336
  %mult = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %15, i32 0, i32 15, !dbg !1337
  store i32 %div, i32* %mult, align 4, !dbg !1338
  %16 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1339
  %comp2 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %16, i32 0, i32 5, !dbg !1340
  %arrayidx3 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp2, i64 0, i64 0, !dbg !1339
  %depth4 = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx3, i32 0, i32 4, !dbg !1341
  %17 = load i32, i32* %depth4, align 8, !dbg !1341
  %18 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1342
  %depth5 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %18, i32 0, i32 14, !dbg !1343
  store i32 %17, i32* %depth5, align 8, !dbg !1344
  %19 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1345
  %lthreshold = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %19, i32 0, i32 20, !dbg !1346
  %20 = load float, float* %lthreshold, align 8, !dbg !1346
  %21 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1347
  %size6 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %21, i32 0, i32 13, !dbg !1348
  %22 = load i32, i32* %size6, align 4, !dbg !1348
  %sub = sub nsw i32 %22, 1, !dbg !1349
  %conv = sitofp i32 %sub to float, !dbg !1350
  %mul = fmul float %20, %conv, !dbg !1351
  %conv7 = fptosi float %mul to i32, !dbg !1345
  %23 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1352
  %tmin = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %23, i32 0, i32 22, !dbg !1353
  store i32 %conv7, i32* %tmin, align 8, !dbg !1354
  %24 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1355
  %hthreshold = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %24, i32 0, i32 21, !dbg !1356
  %25 = load float, float* %hthreshold, align 4, !dbg !1356
  %26 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1357
  %size8 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %26, i32 0, i32 13, !dbg !1358
  %27 = load i32, i32* %size8, align 4, !dbg !1358
  %sub9 = sub nsw i32 %27, 1, !dbg !1359
  %conv10 = sitofp i32 %sub9 to float, !dbg !1360
  %mul11 = fmul float %25, %conv10, !dbg !1361
  %conv12 = fptosi float %mul11 to i32, !dbg !1355
  %28 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1362
  %tmax = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %28, i32 0, i32 23, !dbg !1363
  store i32 %conv12, i32* %tmax, align 4, !dbg !1364
  %29 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1365
  %tmin13 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %29, i32 0, i32 22, !dbg !1367
  %30 = load i32, i32* %tmin13, align 8, !dbg !1367
  %31 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1368
  %tmax14 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %31, i32 0, i32 23, !dbg !1369
  %32 = load i32, i32* %tmax14, align 4, !dbg !1369
  %cmp = icmp sgt i32 %30, %32, !dbg !1370
  br i1 %cmp, label %if.then, label %if.end, !dbg !1371

if.then:                                          ; preds = %entry
  %33 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1372
  %34 = bitcast %struct.AVFilterContext* %33 to i8*, !dbg !1372
  call void (i8*, i32, i8*, ...) @av_log(i8* %34, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i32 0, i32 0)), !dbg !1374
  store i32 -22, i32* %retval, align 4, !dbg !1375
  br label %return, !dbg !1375

if.end:                                           ; preds = %entry
  %35 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1376
  %mode = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %35, i32 0, i32 1, !dbg !1378
  %36 = load i32, i32* %mode, align 8, !dbg !1378
  %cmp16 = icmp eq i32 %36, 0, !dbg !1379
  br i1 %cmp16, label %land.lhs.true, label %if.else, !dbg !1380

land.lhs.true:                                    ; preds = %if.end
  %37 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1381
  %is_yuv18 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %37, i32 0, i32 12, !dbg !1383
  %38 = load i32, i32* %is_yuv18, align 8, !dbg !1383
  %tobool19 = icmp ne i32 %38, 0, !dbg !1381
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !1384

if.then20:                                        ; preds = %land.lhs.true
  %39 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1385
  %pd = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %39, i32 0, i32 11, !dbg !1386
  store i32 0, i32* %pd, align 4, !dbg !1387
  br label %if.end74, !dbg !1385

if.else:                                          ; preds = %land.lhs.true, %if.end
  %40 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1388
  %x = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %40, i32 0, i32 9, !dbg !1391
  %41 = load i32, i32* %x, align 4, !dbg !1391
  %cmp21 = icmp eq i32 %41, 1, !dbg !1392
  br i1 %cmp21, label %land.lhs.true23, label %lor.lhs.false, !dbg !1393

land.lhs.true23:                                  ; preds = %if.else
  %42 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1394
  %y = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %42, i32 0, i32 10, !dbg !1396
  %43 = load i32, i32* %y, align 8, !dbg !1396
  %cmp24 = icmp eq i32 %43, 2, !dbg !1397
  br i1 %cmp24, label %if.then33, label %lor.lhs.false, !dbg !1398

lor.lhs.false:                                    ; preds = %land.lhs.true23, %if.else
  %44 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1399
  %x26 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %44, i32 0, i32 9, !dbg !1401
  %45 = load i32, i32* %x26, align 4, !dbg !1401
  %cmp27 = icmp eq i32 %45, 2, !dbg !1402
  br i1 %cmp27, label %land.lhs.true29, label %if.else35, !dbg !1403

land.lhs.true29:                                  ; preds = %lor.lhs.false
  %46 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1404
  %y30 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %46, i32 0, i32 10, !dbg !1406
  %47 = load i32, i32* %y30, align 8, !dbg !1406
  %cmp31 = icmp eq i32 %47, 1, !dbg !1407
  br i1 %cmp31, label %if.then33, label %if.else35, !dbg !1408

if.then33:                                        ; preds = %land.lhs.true29, %land.lhs.true23
  %48 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1409
  %pd34 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %48, i32 0, i32 11, !dbg !1410
  store i32 0, i32* %pd34, align 4, !dbg !1411
  br label %if.end73, !dbg !1409

if.else35:                                        ; preds = %land.lhs.true29, %lor.lhs.false
  %49 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1412
  %x36 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %49, i32 0, i32 9, !dbg !1414
  %50 = load i32, i32* %x36, align 4, !dbg !1414
  %cmp37 = icmp eq i32 %50, 0, !dbg !1415
  br i1 %cmp37, label %land.lhs.true39, label %lor.lhs.false43, !dbg !1416

land.lhs.true39:                                  ; preds = %if.else35
  %51 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1417
  %y40 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %51, i32 0, i32 10, !dbg !1419
  %52 = load i32, i32* %y40, align 8, !dbg !1419
  %cmp41 = icmp eq i32 %52, 2, !dbg !1420
  br i1 %cmp41, label %if.then51, label %lor.lhs.false43, !dbg !1421

lor.lhs.false43:                                  ; preds = %land.lhs.true39, %if.else35
  %53 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1422
  %x44 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %53, i32 0, i32 9, !dbg !1424
  %54 = load i32, i32* %x44, align 4, !dbg !1424
  %cmp45 = icmp eq i32 %54, 2, !dbg !1425
  br i1 %cmp45, label %land.lhs.true47, label %if.else53, !dbg !1426

land.lhs.true47:                                  ; preds = %lor.lhs.false43
  %55 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1427
  %y48 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %55, i32 0, i32 10, !dbg !1429
  %56 = load i32, i32* %y48, align 8, !dbg !1429
  %cmp49 = icmp eq i32 %56, 0, !dbg !1430
  br i1 %cmp49, label %if.then51, label %if.else53, !dbg !1431

if.then51:                                        ; preds = %land.lhs.true47, %land.lhs.true39
  %57 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1432
  %pd52 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %57, i32 0, i32 11, !dbg !1433
  store i32 1, i32* %pd52, align 4, !dbg !1434
  br label %if.end72, !dbg !1432

if.else53:                                        ; preds = %land.lhs.true47, %lor.lhs.false43
  %58 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1435
  %x54 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %58, i32 0, i32 9, !dbg !1437
  %59 = load i32, i32* %x54, align 4, !dbg !1437
  %cmp55 = icmp eq i32 %59, 0, !dbg !1438
  br i1 %cmp55, label %land.lhs.true57, label %lor.lhs.false61, !dbg !1439

land.lhs.true57:                                  ; preds = %if.else53
  %60 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1440
  %y58 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %60, i32 0, i32 10, !dbg !1442
  %61 = load i32, i32* %y58, align 8, !dbg !1442
  %cmp59 = icmp eq i32 %61, 1, !dbg !1443
  br i1 %cmp59, label %if.then69, label %lor.lhs.false61, !dbg !1444

lor.lhs.false61:                                  ; preds = %land.lhs.true57, %if.else53
  %62 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1445
  %x62 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %62, i32 0, i32 9, !dbg !1447
  %63 = load i32, i32* %x62, align 4, !dbg !1447
  %cmp63 = icmp eq i32 %63, 1, !dbg !1448
  br i1 %cmp63, label %land.lhs.true65, label %if.end71, !dbg !1449

land.lhs.true65:                                  ; preds = %lor.lhs.false61
  %64 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1450
  %y66 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %64, i32 0, i32 10, !dbg !1452
  %65 = load i32, i32* %y66, align 8, !dbg !1452
  %cmp67 = icmp eq i32 %65, 0, !dbg !1453
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !1454

if.then69:                                        ; preds = %land.lhs.true65, %land.lhs.true57
  %66 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1455
  %pd70 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %66, i32 0, i32 11, !dbg !1456
  store i32 2, i32* %pd70, align 4, !dbg !1457
  br label %if.end71, !dbg !1455

if.end71:                                         ; preds = %if.then69, %land.lhs.true65, %lor.lhs.false61
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then51
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then33
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then20
  %67 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1458
  %size75 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %67, i32 0, i32 13, !dbg !1460
  %68 = load i32, i32* %size75, align 4, !dbg !1460
  %cmp76 = icmp eq i32 %68, 256, !dbg !1461
  br i1 %cmp76, label %if.then78, label %if.else79, !dbg !1462

if.then78:                                        ; preds = %if.end74
  %69 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1463
  %vectorscope = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %69, i32 0, i32 29, !dbg !1464
  store void (%struct.VectorscopeContext*, %struct.AVFrame*, %struct.AVFrame*, i32)* @vectorscope8, void (%struct.VectorscopeContext*, %struct.AVFrame*, %struct.AVFrame*, i32)** %vectorscope, align 8, !dbg !1465
  br label %if.end81, !dbg !1463

if.else79:                                        ; preds = %if.end74
  %70 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1466
  %vectorscope80 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %70, i32 0, i32 29, !dbg !1467
  store void (%struct.VectorscopeContext*, %struct.AVFrame*, %struct.AVFrame*, i32)* @vectorscope16, void (%struct.VectorscopeContext*, %struct.AVFrame*, %struct.AVFrame*, i32)** %vectorscope80, align 8, !dbg !1468
  br label %if.end81

if.end81:                                         ; preds = %if.else79, %if.then78
  %71 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1469
  %graticulef = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %71, i32 0, i32 30, !dbg !1470
  store void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)* @none_graticule, void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)** %graticulef, align 8, !dbg !1471
  %72 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1472
  %is_yuv82 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %72, i32 0, i32 12, !dbg !1474
  %73 = load i32, i32* %is_yuv82, align 8, !dbg !1474
  %tobool83 = icmp ne i32 %73, 0, !dbg !1472
  br i1 %tobool83, label %land.lhs.true84, label %if.else101, !dbg !1475

land.lhs.true84:                                  ; preds = %if.end81
  %74 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1476
  %size85 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %74, i32 0, i32 13, !dbg !1478
  %75 = load i32, i32* %size85, align 4, !dbg !1478
  %cmp86 = icmp eq i32 %75, 256, !dbg !1479
  br i1 %cmp86, label %if.then88, label %if.else101, !dbg !1480

if.then88:                                        ; preds = %land.lhs.true84
  %76 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1481
  %graticule = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %76, i32 0, i32 17, !dbg !1484
  %77 = load i32, i32* %graticule, align 4, !dbg !1484
  %cmp89 = icmp eq i32 %77, 1, !dbg !1485
  br i1 %cmp89, label %if.then91, label %if.else93, !dbg !1486

if.then91:                                        ; preds = %if.then88
  %78 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1487
  %graticulef92 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %78, i32 0, i32 30, !dbg !1488
  store void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)* @green_graticule, void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)** %graticulef92, align 8, !dbg !1489
  br label %if.end100, !dbg !1487

if.else93:                                        ; preds = %if.then88
  %79 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1490
  %graticule94 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %79, i32 0, i32 17, !dbg !1492
  %80 = load i32, i32* %graticule94, align 4, !dbg !1492
  %cmp95 = icmp eq i32 %80, 2, !dbg !1493
  br i1 %cmp95, label %if.then97, label %if.end99, !dbg !1494

if.then97:                                        ; preds = %if.else93
  %81 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1495
  %graticulef98 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %81, i32 0, i32 30, !dbg !1496
  store void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)* @color_graticule, void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)** %graticulef98, align 8, !dbg !1497
  br label %if.end99, !dbg !1495

if.end99:                                         ; preds = %if.then97, %if.else93
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then91
  br label %if.end119, !dbg !1498

if.else101:                                       ; preds = %land.lhs.true84, %if.end81
  %82 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1499
  %is_yuv102 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %82, i32 0, i32 12, !dbg !1502
  %83 = load i32, i32* %is_yuv102, align 8, !dbg !1502
  %tobool103 = icmp ne i32 %83, 0, !dbg !1499
  br i1 %tobool103, label %if.then104, label %if.end118, !dbg !1499

if.then104:                                       ; preds = %if.else101
  %84 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1503
  %graticule105 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %84, i32 0, i32 17, !dbg !1506
  %85 = load i32, i32* %graticule105, align 4, !dbg !1506
  %cmp106 = icmp eq i32 %85, 1, !dbg !1507
  br i1 %cmp106, label %if.then108, label %if.else110, !dbg !1508

if.then108:                                       ; preds = %if.then104
  %86 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1509
  %graticulef109 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %86, i32 0, i32 30, !dbg !1510
  store void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)* @green_graticule16, void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)** %graticulef109, align 8, !dbg !1511
  br label %if.end117, !dbg !1509

if.else110:                                       ; preds = %if.then104
  %87 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1512
  %graticule111 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %87, i32 0, i32 17, !dbg !1514
  %88 = load i32, i32* %graticule111, align 4, !dbg !1514
  %cmp112 = icmp eq i32 %88, 2, !dbg !1515
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !1516

if.then114:                                       ; preds = %if.else110
  %89 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1517
  %graticulef115 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %89, i32 0, i32 30, !dbg !1518
  store void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)* @color_graticule16, void (%struct.VectorscopeContext*, %struct.AVFrame*, i32, i32, i32, i32)** %graticulef115, align 8, !dbg !1519
  br label %if.end116, !dbg !1517

if.end116:                                        ; preds = %if.then114, %if.else110
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.then108
  br label %if.end118, !dbg !1520

if.end118:                                        ; preds = %if.end117, %if.else101
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.end100
  %90 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1521
  %bgopacity = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %90, i32 0, i32 19, !dbg !1522
  %91 = load float, float* %bgopacity, align 4, !dbg !1522
  %92 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1523
  %size120 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %92, i32 0, i32 13, !dbg !1524
  %93 = load i32, i32* %size120, align 4, !dbg !1524
  %sub121 = sub nsw i32 %93, 1, !dbg !1525
  %conv122 = sitofp i32 %sub121 to float, !dbg !1526
  %mul123 = fmul float %91, %conv122, !dbg !1527
  %conv124 = fptoui float %mul123 to i16, !dbg !1521
  %94 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1528
  %bg_color = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %94, i32 0, i32 4, !dbg !1529
  %arrayidx125 = getelementptr inbounds [4 x i16], [4 x i16]* %bg_color, i64 0, i64 3, !dbg !1528
  store i16 %conv124, i16* %arrayidx125, align 2, !dbg !1530
  %95 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1531
  %format126 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %95, i32 0, i32 10, !dbg !1532
  %96 = load i32, i32* %format126, align 4, !dbg !1532
  switch i32 %96, label %sw.default [
    i32 137, label %sw.bb
    i32 77, label %sw.bb
    i32 75, label %sw.bb
    i32 113, label %sw.bb
    i32 73, label %sw.bb
  ], !dbg !1533

sw.bb:                                            ; preds = %if.end119, %if.end119, %if.end119, %if.end119, %if.end119
  %97 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1534
  %bg_color127 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %97, i32 0, i32 4, !dbg !1536
  %arrayidx128 = getelementptr inbounds [4 x i16], [4 x i16]* %bg_color127, i64 0, i64 0, !dbg !1534
  store i16 0, i16* %arrayidx128, align 4, !dbg !1537
  %98 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1538
  %bg_color129 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %98, i32 0, i32 4, !dbg !1539
  %arrayidx130 = getelementptr inbounds [4 x i16], [4 x i16]* %bg_color129, i64 0, i64 1, !dbg !1538
  store i16 0, i16* %arrayidx130, align 2, !dbg !1540
  %99 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1541
  %bg_color131 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %99, i32 0, i32 4, !dbg !1542
  %arrayidx132 = getelementptr inbounds [4 x i16], [4 x i16]* %bg_color131, i64 0, i64 2, !dbg !1541
  store i16 0, i16* %arrayidx132, align 4, !dbg !1543
  br label %sw.epilog, !dbg !1544

sw.default:                                       ; preds = %if.end119
  %100 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1545
  %bg_color133 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %100, i32 0, i32 4, !dbg !1546
  %arrayidx134 = getelementptr inbounds [4 x i16], [4 x i16]* %bg_color133, i64 0, i64 0, !dbg !1545
  store i16 0, i16* %arrayidx134, align 4, !dbg !1547
  %101 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1548
  %size135 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %101, i32 0, i32 13, !dbg !1549
  %102 = load i32, i32* %size135, align 4, !dbg !1549
  %div136 = sdiv i32 %102, 2, !dbg !1550
  %sub137 = sub nsw i32 %div136, 1, !dbg !1551
  %conv138 = trunc i32 %sub137 to i16, !dbg !1548
  %103 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1552
  %bg_color139 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %103, i32 0, i32 4, !dbg !1553
  %arrayidx140 = getelementptr inbounds [4 x i16], [4 x i16]* %bg_color139, i64 0, i64 1, !dbg !1552
  store i16 %conv138, i16* %arrayidx140, align 2, !dbg !1554
  %104 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1555
  %size141 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %104, i32 0, i32 13, !dbg !1556
  %105 = load i32, i32* %size141, align 4, !dbg !1556
  %div142 = sdiv i32 %105, 2, !dbg !1557
  %sub143 = sub nsw i32 %div142, 1, !dbg !1558
  %conv144 = trunc i32 %sub143 to i16, !dbg !1555
  %106 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1559
  %bg_color145 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %106, i32 0, i32 4, !dbg !1560
  %arrayidx146 = getelementptr inbounds [4 x i16], [4 x i16]* %bg_color145, i64 0, i64 2, !dbg !1559
  store i16 %conv144, i16* %arrayidx146, align 4, !dbg !1561
  br label %sw.epilog, !dbg !1562

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %107 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1563
  %log2_chroma_w = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %107, i32 0, i32 2, !dbg !1564
  %108 = load i8, i8* %log2_chroma_w, align 1, !dbg !1564
  %conv147 = zext i8 %108 to i32, !dbg !1563
  %109 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1565
  %hsub = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %109, i32 0, i32 7, !dbg !1566
  store i32 %conv147, i32* %hsub, align 4, !dbg !1567
  %110 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1568
  %log2_chroma_h = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %110, i32 0, i32 3, !dbg !1569
  %111 = load i8, i8* %log2_chroma_h, align 2, !dbg !1569
  %conv148 = zext i8 %111 to i32, !dbg !1568
  %112 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1570
  %vsub = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %112, i32 0, i32 8, !dbg !1571
  store i32 %conv148, i32* %vsub, align 8, !dbg !1572
  %113 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1573
  %h = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %113, i32 0, i32 6, !dbg !1574
  %114 = load i32, i32* %h, align 8, !dbg !1574
  %sub149 = sub nsw i32 0, %114, !dbg !1575
  %115 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1576
  %log2_chroma_h150 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %115, i32 0, i32 3, !dbg !1577
  %116 = load i8, i8* %log2_chroma_h150, align 2, !dbg !1577
  %conv151 = zext i8 %116 to i32, !dbg !1578
  %shr = ashr i32 %sub149, %conv151, !dbg !1579
  %sub152 = sub nsw i32 0, %shr, !dbg !1580
  %117 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1581
  %planeheight = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %117, i32 0, i32 6, !dbg !1582
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight, i64 0, i64 2, !dbg !1581
  store i32 %sub152, i32* %arrayidx153, align 4, !dbg !1583
  %118 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1584
  %planeheight154 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %118, i32 0, i32 6, !dbg !1585
  %arrayidx155 = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight154, i64 0, i64 1, !dbg !1584
  store i32 %sub152, i32* %arrayidx155, align 4, !dbg !1586
  %119 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1587
  %h156 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %119, i32 0, i32 6, !dbg !1588
  %120 = load i32, i32* %h156, align 8, !dbg !1588
  %121 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1589
  %planeheight157 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %121, i32 0, i32 6, !dbg !1590
  %arrayidx158 = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight157, i64 0, i64 3, !dbg !1589
  store i32 %120, i32* %arrayidx158, align 4, !dbg !1591
  %122 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1592
  %planeheight159 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %122, i32 0, i32 6, !dbg !1593
  %arrayidx160 = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight159, i64 0, i64 0, !dbg !1592
  store i32 %120, i32* %arrayidx160, align 4, !dbg !1594
  %123 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1595
  %w = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %123, i32 0, i32 5, !dbg !1596
  %124 = load i32, i32* %w, align 4, !dbg !1596
  %sub161 = sub nsw i32 0, %124, !dbg !1597
  %125 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !1598
  %log2_chroma_w162 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %125, i32 0, i32 2, !dbg !1599
  %126 = load i8, i8* %log2_chroma_w162, align 1, !dbg !1599
  %conv163 = zext i8 %126 to i32, !dbg !1600
  %shr164 = ashr i32 %sub161, %conv163, !dbg !1601
  %sub165 = sub nsw i32 0, %shr164, !dbg !1602
  %127 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1603
  %planewidth = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %127, i32 0, i32 5, !dbg !1604
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth, i64 0, i64 2, !dbg !1603
  store i32 %sub165, i32* %arrayidx166, align 4, !dbg !1605
  %128 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1606
  %planewidth167 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %128, i32 0, i32 5, !dbg !1607
  %arrayidx168 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth167, i64 0, i64 1, !dbg !1606
  store i32 %sub165, i32* %arrayidx168, align 4, !dbg !1608
  %129 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1609
  %w169 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %129, i32 0, i32 5, !dbg !1610
  %130 = load i32, i32* %w169, align 4, !dbg !1610
  %131 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1611
  %planewidth170 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %131, i32 0, i32 5, !dbg !1612
  %arrayidx171 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth170, i64 0, i64 3, !dbg !1611
  store i32 %130, i32* %arrayidx171, align 4, !dbg !1613
  %132 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !1614
  %planewidth172 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %132, i32 0, i32 5, !dbg !1615
  %arrayidx173 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth172, i64 0, i64 0, !dbg !1614
  store i32 %130, i32* %arrayidx173, align 4, !dbg !1616
  store i32 0, i32* %retval, align 4, !dbg !1617
  br label %return, !dbg !1617

return:                                           ; preds = %sw.epilog, %if.then
  %133 = load i32, i32* %retval, align 4, !dbg !1618
  ret i32 %133, !dbg !1618
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare %struct.AVFrame* @ff_get_video_buffer(%struct.AVFilterLink*, i32, i32) #3

declare void @av_frame_free(%struct.AVFrame**) #3

declare i32 @av_frame_copy_props(%struct.AVFrame*, %struct.AVFrame*) #3

declare i32 @ff_filter_frame(%struct.AVFilterLink*, %struct.AVFrame*) #3

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) #3

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal void @vectorscope8(%struct.VectorscopeContext* %s, %struct.AVFrame* %in, %struct.AVFrame* %out, i32 %pd) #1 !dbg !1619 {
entry:
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %in.addr = alloca %struct.AVFrame*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  %pd.addr = alloca i32, align 4
  %src = alloca i8**, align 8
  %slinesizex = alloca i32, align 4
  %slinesizey = alloca i32, align 4
  %slinesized = alloca i32, align 4
  %dlinesize = alloca i32, align 4
  %intensity = alloca i32, align 4
  %px = alloca i32, align 4
  %py = alloca i32, align 4
  %h = alloca i32, align 4
  %w = alloca i32, align 4
  %spx = alloca i8*, align 8
  %spy = alloca i8*, align 8
  %spd = alloca i8*, align 8
  %hsub = alloca i32, align 4
  %vsub = alloca i32, align 4
  %dst = alloca i8**, align 8
  %dpx = alloca i8*, align 8
  %dpy = alloca i8*, align 8
  %dpd = alloca i8*, align 8
  %tmin = alloca i32, align 4
  %tmax = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %iwx = alloca i32, align 4
  %iwy = alloca i32, align 4
  %iwd = alloca i32, align 4
  %x68 = alloca i32, align 4
  %y72 = alloca i32, align 4
  %z = alloca i32, align 4
  %pos = alloca i32, align 4
  %iwx116 = alloca i32, align 4
  %iwy118 = alloca i32, align 4
  %iwd120 = alloca i32, align 4
  %x126 = alloca i32, align 4
  %y131 = alloca i32, align 4
  %z136 = alloca i32, align 4
  %pos141 = alloca i32, align 4
  %iw1 = alloca i32, align 4
  %iw2 = alloca i32, align 4
  %iwd228 = alloca i32, align 4
  %x234 = alloca i32, align 4
  %y239 = alloca i32, align 4
  %z244 = alloca i32, align 4
  %pos249 = alloca i32, align 4
  %iw1304 = alloca i32, align 4
  %iw2306 = alloca i32, align 4
  %iwd308 = alloca i32, align 4
  %x314 = alloca i32, align 4
  %y319 = alloca i32, align 4
  %z324 = alloca i32, align 4
  %pos329 = alloca i32, align 4
  %iw1373 = alloca i32, align 4
  %iw2375 = alloca i32, align 4
  %iwd377 = alloca i32, align 4
  %x383 = alloca i32, align 4
  %y388 = alloca i32, align 4
  %z393 = alloca i32, align 4
  %pos398 = alloca i32, align 4
  %iwx443 = alloca i32, align 4
  %iwy445 = alloca i32, align 4
  %iwd448 = alloca i32, align 4
  %x455 = alloca i32, align 4
  %y461 = alloca i32, align 4
  %z467 = alloca i32, align 4
  %pos472 = alloca i32, align 4
  %pos522 = alloca i32, align 4
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !1622, metadata !909), !dbg !1623
  store %struct.AVFrame* %in, %struct.AVFrame** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %in.addr, metadata !1624, metadata !909), !dbg !1625
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !1626, metadata !909), !dbg !1627
  store i32 %pd, i32* %pd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pd.addr, metadata !1628, metadata !909), !dbg !1629
  call void @llvm.dbg.declare(metadata i8*** %src, metadata !1630, metadata !909), !dbg !1631
  %0 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1632
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 0, !dbg !1633
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i32 0, i32 0, !dbg !1632
  store i8** %arraydecay, i8*** %src, align 8, !dbg !1631
  call void @llvm.dbg.declare(metadata i32* %slinesizex, metadata !1634, metadata !909), !dbg !1636
  %1 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1637
  %x = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %1, i32 0, i32 9, !dbg !1638
  %2 = load i32, i32* %x, align 4, !dbg !1638
  %idxprom = sext i32 %2 to i64, !dbg !1639
  %3 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1639
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i32 0, i32 1, !dbg !1640
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom, !dbg !1639
  %4 = load i32, i32* %arrayidx, align 4, !dbg !1639
  store i32 %4, i32* %slinesizex, align 4, !dbg !1636
  call void @llvm.dbg.declare(metadata i32* %slinesizey, metadata !1641, metadata !909), !dbg !1642
  %5 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1643
  %y = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %5, i32 0, i32 10, !dbg !1644
  %6 = load i32, i32* %y, align 8, !dbg !1644
  %idxprom1 = sext i32 %6 to i64, !dbg !1645
  %7 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1645
  %linesize2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %7, i32 0, i32 1, !dbg !1646
  %arrayidx3 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize2, i64 0, i64 %idxprom1, !dbg !1645
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !1645
  store i32 %8, i32* %slinesizey, align 4, !dbg !1642
  call void @llvm.dbg.declare(metadata i32* %slinesized, metadata !1647, metadata !909), !dbg !1648
  %9 = load i32, i32* %pd.addr, align 4, !dbg !1649
  %idxprom4 = sext i32 %9 to i64, !dbg !1650
  %10 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1650
  %linesize5 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 1, !dbg !1651
  %arrayidx6 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize5, i64 0, i64 %idxprom4, !dbg !1650
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !1650
  store i32 %11, i32* %slinesized, align 4, !dbg !1648
  call void @llvm.dbg.declare(metadata i32* %dlinesize, metadata !1652, metadata !909), !dbg !1653
  %12 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !1654
  %linesize7 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 1, !dbg !1655
  %arrayidx8 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize7, i64 0, i64 0, !dbg !1654
  %13 = load i32, i32* %arrayidx8, align 8, !dbg !1654
  store i32 %13, i32* %dlinesize, align 4, !dbg !1653
  call void @llvm.dbg.declare(metadata i32* %intensity, metadata !1656, metadata !909), !dbg !1657
  %14 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1658
  %intensity9 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %14, i32 0, i32 2, !dbg !1659
  %15 = load i32, i32* %intensity9, align 4, !dbg !1659
  store i32 %15, i32* %intensity, align 4, !dbg !1657
  call void @llvm.dbg.declare(metadata i32* %px, metadata !1660, metadata !909), !dbg !1661
  %16 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1662
  %x10 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %16, i32 0, i32 9, !dbg !1663
  %17 = load i32, i32* %x10, align 4, !dbg !1663
  store i32 %17, i32* %px, align 4, !dbg !1661
  call void @llvm.dbg.declare(metadata i32* %py, metadata !1664, metadata !909), !dbg !1665
  %18 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1666
  %y11 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %18, i32 0, i32 10, !dbg !1667
  %19 = load i32, i32* %y11, align 8, !dbg !1667
  store i32 %19, i32* %py, align 4, !dbg !1665
  call void @llvm.dbg.declare(metadata i32* %h, metadata !1668, metadata !909), !dbg !1669
  %20 = load i32, i32* %py, align 4, !dbg !1670
  %idxprom12 = sext i32 %20 to i64, !dbg !1671
  %21 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1671
  %planeheight = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %21, i32 0, i32 6, !dbg !1672
  %arrayidx13 = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight, i64 0, i64 %idxprom12, !dbg !1671
  %22 = load i32, i32* %arrayidx13, align 4, !dbg !1671
  store i32 %22, i32* %h, align 4, !dbg !1669
  call void @llvm.dbg.declare(metadata i32* %w, metadata !1673, metadata !909), !dbg !1674
  %23 = load i32, i32* %px, align 4, !dbg !1675
  %idxprom14 = sext i32 %23 to i64, !dbg !1676
  %24 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1676
  %planewidth = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %24, i32 0, i32 5, !dbg !1677
  %arrayidx15 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth, i64 0, i64 %idxprom14, !dbg !1676
  %25 = load i32, i32* %arrayidx15, align 4, !dbg !1676
  store i32 %25, i32* %w, align 4, !dbg !1674
  call void @llvm.dbg.declare(metadata i8** %spx, metadata !1678, metadata !909), !dbg !1679
  %26 = load i32, i32* %px, align 4, !dbg !1680
  %idxprom16 = sext i32 %26 to i64, !dbg !1681
  %27 = load i8**, i8*** %src, align 8, !dbg !1681
  %arrayidx17 = getelementptr inbounds i8*, i8** %27, i64 %idxprom16, !dbg !1681
  %28 = load i8*, i8** %arrayidx17, align 8, !dbg !1681
  store i8* %28, i8** %spx, align 8, !dbg !1679
  call void @llvm.dbg.declare(metadata i8** %spy, metadata !1682, metadata !909), !dbg !1683
  %29 = load i32, i32* %py, align 4, !dbg !1684
  %idxprom18 = sext i32 %29 to i64, !dbg !1685
  %30 = load i8**, i8*** %src, align 8, !dbg !1685
  %arrayidx19 = getelementptr inbounds i8*, i8** %30, i64 %idxprom18, !dbg !1685
  %31 = load i8*, i8** %arrayidx19, align 8, !dbg !1685
  store i8* %31, i8** %spy, align 8, !dbg !1683
  call void @llvm.dbg.declare(metadata i8** %spd, metadata !1686, metadata !909), !dbg !1687
  %32 = load i32, i32* %pd.addr, align 4, !dbg !1688
  %idxprom20 = sext i32 %32 to i64, !dbg !1689
  %33 = load i8**, i8*** %src, align 8, !dbg !1689
  %arrayidx21 = getelementptr inbounds i8*, i8** %33, i64 %idxprom20, !dbg !1689
  %34 = load i8*, i8** %arrayidx21, align 8, !dbg !1689
  store i8* %34, i8** %spd, align 8, !dbg !1687
  call void @llvm.dbg.declare(metadata i32* %hsub, metadata !1690, metadata !909), !dbg !1691
  %35 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1692
  %hsub22 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %35, i32 0, i32 7, !dbg !1693
  %36 = load i32, i32* %hsub22, align 4, !dbg !1693
  store i32 %36, i32* %hsub, align 4, !dbg !1691
  call void @llvm.dbg.declare(metadata i32* %vsub, metadata !1694, metadata !909), !dbg !1695
  %37 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1696
  %vsub23 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %37, i32 0, i32 8, !dbg !1697
  %38 = load i32, i32* %vsub23, align 8, !dbg !1697
  store i32 %38, i32* %vsub, align 4, !dbg !1695
  call void @llvm.dbg.declare(metadata i8*** %dst, metadata !1698, metadata !909), !dbg !1699
  %39 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !1700
  %data24 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %39, i32 0, i32 0, !dbg !1701
  %arraydecay25 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data24, i32 0, i32 0, !dbg !1700
  store i8** %arraydecay25, i8*** %dst, align 8, !dbg !1699
  call void @llvm.dbg.declare(metadata i8** %dpx, metadata !1702, metadata !909), !dbg !1703
  %40 = load i32, i32* %px, align 4, !dbg !1704
  %idxprom26 = sext i32 %40 to i64, !dbg !1705
  %41 = load i8**, i8*** %dst, align 8, !dbg !1705
  %arrayidx27 = getelementptr inbounds i8*, i8** %41, i64 %idxprom26, !dbg !1705
  %42 = load i8*, i8** %arrayidx27, align 8, !dbg !1705
  store i8* %42, i8** %dpx, align 8, !dbg !1703
  call void @llvm.dbg.declare(metadata i8** %dpy, metadata !1706, metadata !909), !dbg !1707
  %43 = load i32, i32* %py, align 4, !dbg !1708
  %idxprom28 = sext i32 %43 to i64, !dbg !1709
  %44 = load i8**, i8*** %dst, align 8, !dbg !1709
  %arrayidx29 = getelementptr inbounds i8*, i8** %44, i64 %idxprom28, !dbg !1709
  %45 = load i8*, i8** %arrayidx29, align 8, !dbg !1709
  store i8* %45, i8** %dpy, align 8, !dbg !1707
  call void @llvm.dbg.declare(metadata i8** %dpd, metadata !1710, metadata !909), !dbg !1711
  %46 = load i32, i32* %pd.addr, align 4, !dbg !1712
  %idxprom30 = sext i32 %46 to i64, !dbg !1713
  %47 = load i8**, i8*** %dst, align 8, !dbg !1713
  %arrayidx31 = getelementptr inbounds i8*, i8** %47, i64 %idxprom30, !dbg !1713
  %48 = load i8*, i8** %arrayidx31, align 8, !dbg !1713
  store i8* %48, i8** %dpd, align 8, !dbg !1711
  call void @llvm.dbg.declare(metadata i32* %tmin, metadata !1714, metadata !909), !dbg !1715
  %49 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1716
  %tmin32 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %49, i32 0, i32 22, !dbg !1717
  %50 = load i32, i32* %tmin32, align 8, !dbg !1717
  store i32 %50, i32* %tmin, align 4, !dbg !1715
  call void @llvm.dbg.declare(metadata i32* %tmax, metadata !1718, metadata !909), !dbg !1719
  %51 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1720
  %tmax33 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %51, i32 0, i32 23, !dbg !1721
  %52 = load i32, i32* %tmax33, align 4, !dbg !1721
  store i32 %52, i32* %tmax, align 4, !dbg !1719
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1722, metadata !909), !dbg !1723
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1724, metadata !909), !dbg !1725
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1726, metadata !909), !dbg !1727
  store i32 0, i32* %k, align 4, !dbg !1728
  br label %for.cond, !dbg !1730

for.cond:                                         ; preds = %for.inc52, %entry
  %53 = load i32, i32* %k, align 4, !dbg !1731
  %cmp = icmp slt i32 %53, 4, !dbg !1734
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !1735

land.rhs:                                         ; preds = %for.cond
  %54 = load i32, i32* %k, align 4, !dbg !1736
  %idxprom34 = sext i32 %54 to i64, !dbg !1738
  %55 = load i8**, i8*** %dst, align 8, !dbg !1738
  %arrayidx35 = getelementptr inbounds i8*, i8** %55, i64 %idxprom34, !dbg !1738
  %56 = load i8*, i8** %arrayidx35, align 8, !dbg !1738
  %tobool = icmp ne i8* %56, null, !dbg !1739
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %57 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ]
  br i1 %57, label %for.body, label %for.end54, !dbg !1740

for.body:                                         ; preds = %land.end
  store i32 0, i32* %i, align 4, !dbg !1742
  br label %for.cond36, !dbg !1744

for.cond36:                                       ; preds = %for.inc, %for.body
  %58 = load i32, i32* %i, align 4, !dbg !1745
  %59 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !1748
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %59, i32 0, i32 4, !dbg !1749
  %60 = load i32, i32* %height, align 4, !dbg !1749
  %cmp37 = icmp slt i32 %58, %60, !dbg !1750
  br i1 %cmp37, label %for.body38, label %for.end, !dbg !1751

for.body38:                                       ; preds = %for.cond36
  %61 = load i32, i32* %k, align 4, !dbg !1752
  %idxprom39 = sext i32 %61 to i64, !dbg !1753
  %62 = load i8**, i8*** %dst, align 8, !dbg !1753
  %arrayidx40 = getelementptr inbounds i8*, i8** %62, i64 %idxprom39, !dbg !1753
  %63 = load i8*, i8** %arrayidx40, align 8, !dbg !1753
  %64 = load i32, i32* %i, align 4, !dbg !1754
  %65 = load i32, i32* %k, align 4, !dbg !1755
  %idxprom41 = sext i32 %65 to i64, !dbg !1756
  %66 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !1756
  %linesize42 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %66, i32 0, i32 1, !dbg !1757
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize42, i64 0, i64 %idxprom41, !dbg !1756
  %67 = load i32, i32* %arrayidx43, align 4, !dbg !1756
  %mul = mul nsw i32 %64, %67, !dbg !1758
  %idx.ext = sext i32 %mul to i64, !dbg !1759
  %add.ptr = getelementptr inbounds i8, i8* %63, i64 %idx.ext, !dbg !1759
  %68 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1760
  %mode = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %68, i32 0, i32 1, !dbg !1761
  %69 = load i32, i32* %mode, align 8, !dbg !1761
  %cmp44 = icmp eq i32 %69, 1, !dbg !1762
  br i1 %cmp44, label %land.lhs.true, label %lor.lhs.false, !dbg !1763

lor.lhs.false:                                    ; preds = %for.body38
  %70 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1764
  %mode45 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %70, i32 0, i32 1, !dbg !1765
  %71 = load i32, i32* %mode45, align 8, !dbg !1765
  %cmp46 = icmp eq i32 %71, 5, !dbg !1766
  br i1 %cmp46, label %land.lhs.true, label %cond.false, !dbg !1767

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body38
  %72 = load i32, i32* %k, align 4, !dbg !1768
  %73 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1770
  %pd47 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %73, i32 0, i32 11, !dbg !1771
  %74 = load i32, i32* %pd47, align 4, !dbg !1771
  %cmp48 = icmp eq i32 %72, %74, !dbg !1772
  br i1 %cmp48, label %cond.true, label %cond.false, !dbg !1773

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !1774

cond.false:                                       ; preds = %land.lhs.true, %lor.lhs.false
  %75 = load i32, i32* %k, align 4, !dbg !1776
  %idxprom49 = sext i32 %75 to i64, !dbg !1778
  %76 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1778
  %bg_color = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %76, i32 0, i32 4, !dbg !1779
  %arrayidx50 = getelementptr inbounds [4 x i16], [4 x i16]* %bg_color, i64 0, i64 %idxprom49, !dbg !1778
  %77 = load i16, i16* %arrayidx50, align 2, !dbg !1778
  %conv = zext i16 %77 to i32, !dbg !1778
  br label %cond.end, !dbg !1780

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !1781
  %78 = trunc i32 %cond to i8, !dbg !1783
  %79 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !1784
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %79, i32 0, i32 3, !dbg !1785
  %80 = load i32, i32* %width, align 8, !dbg !1785
  %conv51 = sext i32 %80 to i64, !dbg !1784
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 %78, i64 %conv51, i32 1, i1 false), !dbg !1783
  br label %for.inc, !dbg !1783

for.inc:                                          ; preds = %cond.end
  %81 = load i32, i32* %i, align 4, !dbg !1786
  %inc = add nsw i32 %81, 1, !dbg !1786
  store i32 %inc, i32* %i, align 4, !dbg !1786
  br label %for.cond36, !dbg !1787, !llvm.loop !1788

for.end:                                          ; preds = %for.cond36
  br label %for.inc52, !dbg !1790

for.inc52:                                        ; preds = %for.end
  %82 = load i32, i32* %k, align 4, !dbg !1792
  %inc53 = add nsw i32 %82, 1, !dbg !1792
  store i32 %inc53, i32* %k, align 4, !dbg !1792
  br label %for.cond, !dbg !1794, !llvm.loop !1795

for.end54:                                        ; preds = %land.end
  %83 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1797
  %mode55 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %83, i32 0, i32 1, !dbg !1798
  %84 = load i32, i32* %mode55, align 8, !dbg !1798
  switch i32 %84, label %sw.default [
    i32 5, label %sw.bb
    i32 1, label %sw.bb
    i32 0, label %sw.bb
    i32 2, label %sw.bb218
    i32 3, label %sw.bb368
    i32 4, label %sw.bb437
  ], !dbg !1799

sw.bb:                                            ; preds = %for.end54, %for.end54, %for.end54
  %85 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !1800
  %is_yuv = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %85, i32 0, i32 12, !dbg !1803
  %86 = load i32, i32* %is_yuv, align 8, !dbg !1803
  %tobool56 = icmp ne i32 %86, 0, !dbg !1800
  br i1 %tobool56, label %if.then, label %if.else, !dbg !1804

if.then:                                          ; preds = %sw.bb
  store i32 0, i32* %i, align 4, !dbg !1805
  br label %for.cond57, !dbg !1808

for.cond57:                                       ; preds = %for.inc109, %if.then
  %87 = load i32, i32* %i, align 4, !dbg !1809
  %88 = load i32, i32* %h, align 4, !dbg !1812
  %cmp58 = icmp slt i32 %87, %88, !dbg !1813
  br i1 %cmp58, label %for.body60, label %for.end111, !dbg !1814

for.body60:                                       ; preds = %for.cond57
  call void @llvm.dbg.declare(metadata i32* %iwx, metadata !1815, metadata !909), !dbg !1817
  %89 = load i32, i32* %i, align 4, !dbg !1818
  %90 = load i32, i32* %slinesizex, align 4, !dbg !1819
  %mul61 = mul nsw i32 %89, %90, !dbg !1820
  store i32 %mul61, i32* %iwx, align 4, !dbg !1817
  call void @llvm.dbg.declare(metadata i32* %iwy, metadata !1821, metadata !909), !dbg !1822
  %91 = load i32, i32* %i, align 4, !dbg !1823
  %92 = load i32, i32* %slinesizey, align 4, !dbg !1824
  %mul62 = mul nsw i32 %91, %92, !dbg !1825
  store i32 %mul62, i32* %iwy, align 4, !dbg !1822
  call void @llvm.dbg.declare(metadata i32* %iwd, metadata !1826, metadata !909), !dbg !1827
  %93 = load i32, i32* %i, align 4, !dbg !1828
  %94 = load i32, i32* %slinesized, align 4, !dbg !1829
  %mul63 = mul nsw i32 %93, %94, !dbg !1830
  store i32 %mul63, i32* %iwd, align 4, !dbg !1827
  store i32 0, i32* %j, align 4, !dbg !1831
  br label %for.cond64, !dbg !1833

for.cond64:                                       ; preds = %for.inc106, %for.body60
  %95 = load i32, i32* %j, align 4, !dbg !1834
  %96 = load i32, i32* %w, align 4, !dbg !1837
  %cmp65 = icmp slt i32 %95, %96, !dbg !1838
  br i1 %cmp65, label %for.body67, label %for.end108, !dbg !1839

for.body67:                                       ; preds = %for.cond64
  call void @llvm.dbg.declare(metadata i32* %x68, metadata !1840, metadata !909), !dbg !1842
  %97 = load i32, i32* %iwx, align 4, !dbg !1843
  %98 = load i32, i32* %j, align 4, !dbg !1844
  %add = add nsw i32 %97, %98, !dbg !1845
  %idxprom69 = sext i32 %add to i64, !dbg !1846
  %99 = load i8*, i8** %spx, align 8, !dbg !1846
  %arrayidx70 = getelementptr inbounds i8, i8* %99, i64 %idxprom69, !dbg !1846
  %100 = load i8, i8* %arrayidx70, align 1, !dbg !1846
  %conv71 = zext i8 %100 to i32, !dbg !1846
  store i32 %conv71, i32* %x68, align 4, !dbg !1842
  call void @llvm.dbg.declare(metadata i32* %y72, metadata !1847, metadata !909), !dbg !1848
  %101 = load i32, i32* %iwy, align 4, !dbg !1849
  %102 = load i32, i32* %j, align 4, !dbg !1850
  %add73 = add nsw i32 %101, %102, !dbg !1851
  %idxprom74 = sext i32 %add73 to i64, !dbg !1852
  %103 = load i8*, i8** %spy, align 8, !dbg !1852
  %arrayidx75 = getelementptr inbounds i8, i8* %103, i64 %idxprom74, !dbg !1852
  %104 = load i8, i8* %arrayidx75, align 1, !dbg !1852
  %conv76 = zext i8 %104 to i32, !dbg !1852
  store i32 %conv76, i32* %y72, align 4, !dbg !1848
  call void @llvm.dbg.declare(metadata i32* %z, metadata !1853, metadata !909), !dbg !1854
  %105 = load i32, i32* %iwd, align 4, !dbg !1855
  %106 = load i32, i32* %j, align 4, !dbg !1856
  %add77 = add nsw i32 %105, %106, !dbg !1857
  %idxprom78 = sext i32 %add77 to i64, !dbg !1858
  %107 = load i8*, i8** %spd, align 8, !dbg !1858
  %arrayidx79 = getelementptr inbounds i8, i8* %107, i64 %idxprom78, !dbg !1858
  %108 = load i8, i8* %arrayidx79, align 1, !dbg !1858
  %conv80 = zext i8 %108 to i32, !dbg !1858
  store i32 %conv80, i32* %z, align 4, !dbg !1854
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !1859, metadata !909), !dbg !1860
  %109 = load i32, i32* %y72, align 4, !dbg !1861
  %110 = load i32, i32* %dlinesize, align 4, !dbg !1862
  %mul81 = mul nsw i32 %109, %110, !dbg !1863
  %111 = load i32, i32* %x68, align 4, !dbg !1864
  %add82 = add nsw i32 %mul81, %111, !dbg !1865
  store i32 %add82, i32* %pos, align 4, !dbg !1860
  %112 = load i32, i32* %z, align 4, !dbg !1866
  %113 = load i32, i32* %tmin, align 4, !dbg !1868
  %cmp83 = icmp slt i32 %112, %113, !dbg !1869
  br i1 %cmp83, label %if.then88, label %lor.lhs.false85, !dbg !1870

lor.lhs.false85:                                  ; preds = %for.body67
  %114 = load i32, i32* %z, align 4, !dbg !1871
  %115 = load i32, i32* %tmax, align 4, !dbg !1873
  %cmp86 = icmp sgt i32 %114, %115, !dbg !1874
  br i1 %cmp86, label %if.then88, label %if.end, !dbg !1875

if.then88:                                        ; preds = %lor.lhs.false85, %for.body67
  br label %for.inc106, !dbg !1876

if.end:                                           ; preds = %lor.lhs.false85
  %116 = load i32, i32* %pos, align 4, !dbg !1877
  %idxprom89 = sext i32 %116 to i64, !dbg !1878
  %117 = load i8*, i8** %dpd, align 8, !dbg !1878
  %arrayidx90 = getelementptr inbounds i8, i8* %117, i64 %idxprom89, !dbg !1878
  %118 = load i8, i8* %arrayidx90, align 1, !dbg !1878
  %conv91 = zext i8 %118 to i32, !dbg !1878
  %119 = load i32, i32* %intensity, align 4, !dbg !1879
  %add92 = add nsw i32 %conv91, %119, !dbg !1880
  %cmp93 = icmp sgt i32 %add92, 255, !dbg !1881
  br i1 %cmp93, label %cond.true95, label %cond.false96, !dbg !1882

cond.true95:                                      ; preds = %if.end
  br label %cond.end101, !dbg !1883

cond.false96:                                     ; preds = %if.end
  %120 = load i32, i32* %pos, align 4, !dbg !1885
  %idxprom97 = sext i32 %120 to i64, !dbg !1887
  %121 = load i8*, i8** %dpd, align 8, !dbg !1887
  %arrayidx98 = getelementptr inbounds i8, i8* %121, i64 %idxprom97, !dbg !1887
  %122 = load i8, i8* %arrayidx98, align 1, !dbg !1887
  %conv99 = zext i8 %122 to i32, !dbg !1887
  %123 = load i32, i32* %intensity, align 4, !dbg !1888
  %add100 = add nsw i32 %conv99, %123, !dbg !1889
  br label %cond.end101, !dbg !1890

cond.end101:                                      ; preds = %cond.false96, %cond.true95
  %cond102 = phi i32 [ 255, %cond.true95 ], [ %add100, %cond.false96 ], !dbg !1891
  %conv103 = trunc i32 %cond102 to i8, !dbg !1893
  %124 = load i32, i32* %pos, align 4, !dbg !1894
  %idxprom104 = sext i32 %124 to i64, !dbg !1895
  %125 = load i8*, i8** %dpd, align 8, !dbg !1895
  %arrayidx105 = getelementptr inbounds i8, i8* %125, i64 %idxprom104, !dbg !1895
  store i8 %conv103, i8* %arrayidx105, align 1, !dbg !1896
  br label %for.inc106, !dbg !1897

for.inc106:                                       ; preds = %cond.end101, %if.then88
  %126 = load i32, i32* %j, align 4, !dbg !1898
  %inc107 = add nsw i32 %126, 1, !dbg !1898
  store i32 %inc107, i32* %j, align 4, !dbg !1898
  br label %for.cond64, !dbg !1900, !llvm.loop !1901

for.end108:                                       ; preds = %for.cond64
  br label %for.inc109, !dbg !1903

for.inc109:                                       ; preds = %for.end108
  %127 = load i32, i32* %i, align 4, !dbg !1904
  %inc110 = add nsw i32 %127, 1, !dbg !1904
  store i32 %inc110, i32* %i, align 4, !dbg !1904
  br label %for.cond57, !dbg !1906, !llvm.loop !1907

for.end111:                                       ; preds = %for.cond57
  br label %if.end217, !dbg !1909

if.else:                                          ; preds = %sw.bb
  store i32 0, i32* %i, align 4, !dbg !1910
  br label %for.cond112, !dbg !1913

for.cond112:                                      ; preds = %for.inc214, %if.else
  %128 = load i32, i32* %i, align 4, !dbg !1914
  %129 = load i32, i32* %h, align 4, !dbg !1917
  %cmp113 = icmp slt i32 %128, %129, !dbg !1918
  br i1 %cmp113, label %for.body115, label %for.end216, !dbg !1919

for.body115:                                      ; preds = %for.cond112
  call void @llvm.dbg.declare(metadata i32* %iwx116, metadata !1920, metadata !909), !dbg !1922
  %130 = load i32, i32* %i, align 4, !dbg !1923
  %131 = load i32, i32* %slinesizex, align 4, !dbg !1924
  %mul117 = mul nsw i32 %130, %131, !dbg !1925
  store i32 %mul117, i32* %iwx116, align 4, !dbg !1922
  call void @llvm.dbg.declare(metadata i32* %iwy118, metadata !1926, metadata !909), !dbg !1927
  %132 = load i32, i32* %i, align 4, !dbg !1928
  %133 = load i32, i32* %slinesizey, align 4, !dbg !1929
  %mul119 = mul nsw i32 %132, %133, !dbg !1930
  store i32 %mul119, i32* %iwy118, align 4, !dbg !1927
  call void @llvm.dbg.declare(metadata i32* %iwd120, metadata !1931, metadata !909), !dbg !1932
  %134 = load i32, i32* %i, align 4, !dbg !1933
  %135 = load i32, i32* %slinesized, align 4, !dbg !1934
  %mul121 = mul nsw i32 %134, %135, !dbg !1935
  store i32 %mul121, i32* %iwd120, align 4, !dbg !1932
  store i32 0, i32* %j, align 4, !dbg !1936
  br label %for.cond122, !dbg !1938

for.cond122:                                      ; preds = %for.inc211, %for.body115
  %136 = load i32, i32* %j, align 4, !dbg !1939
  %137 = load i32, i32* %w, align 4, !dbg !1942
  %cmp123 = icmp slt i32 %136, %137, !dbg !1943
  br i1 %cmp123, label %for.body125, label %for.end213, !dbg !1944

for.body125:                                      ; preds = %for.cond122
  call void @llvm.dbg.declare(metadata i32* %x126, metadata !1945, metadata !909), !dbg !1947
  %138 = load i32, i32* %iwx116, align 4, !dbg !1948
  %139 = load i32, i32* %j, align 4, !dbg !1949
  %add127 = add nsw i32 %138, %139, !dbg !1950
  %idxprom128 = sext i32 %add127 to i64, !dbg !1951
  %140 = load i8*, i8** %spx, align 8, !dbg !1951
  %arrayidx129 = getelementptr inbounds i8, i8* %140, i64 %idxprom128, !dbg !1951
  %141 = load i8, i8* %arrayidx129, align 1, !dbg !1951
  %conv130 = zext i8 %141 to i32, !dbg !1951
  store i32 %conv130, i32* %x126, align 4, !dbg !1947
  call void @llvm.dbg.declare(metadata i32* %y131, metadata !1952, metadata !909), !dbg !1953
  %142 = load i32, i32* %iwy118, align 4, !dbg !1954
  %143 = load i32, i32* %j, align 4, !dbg !1955
  %add132 = add nsw i32 %142, %143, !dbg !1956
  %idxprom133 = sext i32 %add132 to i64, !dbg !1957
  %144 = load i8*, i8** %spy, align 8, !dbg !1957
  %arrayidx134 = getelementptr inbounds i8, i8* %144, i64 %idxprom133, !dbg !1957
  %145 = load i8, i8* %arrayidx134, align 1, !dbg !1957
  %conv135 = zext i8 %145 to i32, !dbg !1957
  store i32 %conv135, i32* %y131, align 4, !dbg !1953
  call void @llvm.dbg.declare(metadata i32* %z136, metadata !1958, metadata !909), !dbg !1959
  %146 = load i32, i32* %iwd120, align 4, !dbg !1960
  %147 = load i32, i32* %j, align 4, !dbg !1961
  %add137 = add nsw i32 %146, %147, !dbg !1962
  %idxprom138 = sext i32 %add137 to i64, !dbg !1963
  %148 = load i8*, i8** %spd, align 8, !dbg !1963
  %arrayidx139 = getelementptr inbounds i8, i8* %148, i64 %idxprom138, !dbg !1963
  %149 = load i8, i8* %arrayidx139, align 1, !dbg !1963
  %conv140 = zext i8 %149 to i32, !dbg !1963
  store i32 %conv140, i32* %z136, align 4, !dbg !1959
  call void @llvm.dbg.declare(metadata i32* %pos141, metadata !1964, metadata !909), !dbg !1965
  %150 = load i32, i32* %y131, align 4, !dbg !1966
  %151 = load i32, i32* %dlinesize, align 4, !dbg !1967
  %mul142 = mul nsw i32 %150, %151, !dbg !1968
  %152 = load i32, i32* %x126, align 4, !dbg !1969
  %add143 = add nsw i32 %mul142, %152, !dbg !1970
  store i32 %add143, i32* %pos141, align 4, !dbg !1965
  %153 = load i32, i32* %z136, align 4, !dbg !1971
  %154 = load i32, i32* %tmin, align 4, !dbg !1973
  %cmp144 = icmp slt i32 %153, %154, !dbg !1974
  br i1 %cmp144, label %if.then149, label %lor.lhs.false146, !dbg !1975

lor.lhs.false146:                                 ; preds = %for.body125
  %155 = load i32, i32* %z136, align 4, !dbg !1976
  %156 = load i32, i32* %tmax, align 4, !dbg !1978
  %cmp147 = icmp sgt i32 %155, %156, !dbg !1979
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !1980

if.then149:                                       ; preds = %lor.lhs.false146, %for.body125
  br label %for.inc211, !dbg !1981

if.end150:                                        ; preds = %lor.lhs.false146
  %157 = load i32, i32* %pos141, align 4, !dbg !1982
  %idxprom151 = sext i32 %157 to i64, !dbg !1983
  %158 = load i8**, i8*** %dst, align 8, !dbg !1983
  %arrayidx152 = getelementptr inbounds i8*, i8** %158, i64 0, !dbg !1983
  %159 = load i8*, i8** %arrayidx152, align 8, !dbg !1983
  %arrayidx153 = getelementptr inbounds i8, i8* %159, i64 %idxprom151, !dbg !1983
  %160 = load i8, i8* %arrayidx153, align 1, !dbg !1983
  %conv154 = zext i8 %160 to i32, !dbg !1983
  %161 = load i32, i32* %intensity, align 4, !dbg !1984
  %add155 = add nsw i32 %conv154, %161, !dbg !1985
  %cmp156 = icmp sgt i32 %add155, 255, !dbg !1986
  br i1 %cmp156, label %cond.true158, label %cond.false159, !dbg !1987

cond.true158:                                     ; preds = %if.end150
  br label %cond.end165, !dbg !1988

cond.false159:                                    ; preds = %if.end150
  %162 = load i32, i32* %pos141, align 4, !dbg !1990
  %idxprom160 = sext i32 %162 to i64, !dbg !1992
  %163 = load i8**, i8*** %dst, align 8, !dbg !1992
  %arrayidx161 = getelementptr inbounds i8*, i8** %163, i64 0, !dbg !1992
  %164 = load i8*, i8** %arrayidx161, align 8, !dbg !1992
  %arrayidx162 = getelementptr inbounds i8, i8* %164, i64 %idxprom160, !dbg !1992
  %165 = load i8, i8* %arrayidx162, align 1, !dbg !1992
  %conv163 = zext i8 %165 to i32, !dbg !1992
  %166 = load i32, i32* %intensity, align 4, !dbg !1993
  %add164 = add nsw i32 %conv163, %166, !dbg !1994
  br label %cond.end165, !dbg !1995

cond.end165:                                      ; preds = %cond.false159, %cond.true158
  %cond166 = phi i32 [ 255, %cond.true158 ], [ %add164, %cond.false159 ], !dbg !1996
  %conv167 = trunc i32 %cond166 to i8, !dbg !1998
  %167 = load i32, i32* %pos141, align 4, !dbg !1999
  %idxprom168 = sext i32 %167 to i64, !dbg !2000
  %168 = load i8**, i8*** %dst, align 8, !dbg !2000
  %arrayidx169 = getelementptr inbounds i8*, i8** %168, i64 0, !dbg !2000
  %169 = load i8*, i8** %arrayidx169, align 8, !dbg !2000
  %arrayidx170 = getelementptr inbounds i8, i8* %169, i64 %idxprom168, !dbg !2000
  store i8 %conv167, i8* %arrayidx170, align 1, !dbg !2001
  %170 = load i32, i32* %pos141, align 4, !dbg !2002
  %idxprom171 = sext i32 %170 to i64, !dbg !2003
  %171 = load i8**, i8*** %dst, align 8, !dbg !2003
  %arrayidx172 = getelementptr inbounds i8*, i8** %171, i64 1, !dbg !2003
  %172 = load i8*, i8** %arrayidx172, align 8, !dbg !2003
  %arrayidx173 = getelementptr inbounds i8, i8* %172, i64 %idxprom171, !dbg !2003
  %173 = load i8, i8* %arrayidx173, align 1, !dbg !2003
  %conv174 = zext i8 %173 to i32, !dbg !2003
  %174 = load i32, i32* %intensity, align 4, !dbg !2004
  %add175 = add nsw i32 %conv174, %174, !dbg !2005
  %cmp176 = icmp sgt i32 %add175, 255, !dbg !2006
  br i1 %cmp176, label %cond.true178, label %cond.false179, !dbg !2007

cond.true178:                                     ; preds = %cond.end165
  br label %cond.end185, !dbg !2008

cond.false179:                                    ; preds = %cond.end165
  %175 = load i32, i32* %pos141, align 4, !dbg !2009
  %idxprom180 = sext i32 %175 to i64, !dbg !2010
  %176 = load i8**, i8*** %dst, align 8, !dbg !2010
  %arrayidx181 = getelementptr inbounds i8*, i8** %176, i64 1, !dbg !2010
  %177 = load i8*, i8** %arrayidx181, align 8, !dbg !2010
  %arrayidx182 = getelementptr inbounds i8, i8* %177, i64 %idxprom180, !dbg !2010
  %178 = load i8, i8* %arrayidx182, align 1, !dbg !2010
  %conv183 = zext i8 %178 to i32, !dbg !2010
  %179 = load i32, i32* %intensity, align 4, !dbg !2011
  %add184 = add nsw i32 %conv183, %179, !dbg !2012
  br label %cond.end185, !dbg !2013

cond.end185:                                      ; preds = %cond.false179, %cond.true178
  %cond186 = phi i32 [ 255, %cond.true178 ], [ %add184, %cond.false179 ], !dbg !2014
  %conv187 = trunc i32 %cond186 to i8, !dbg !2015
  %180 = load i32, i32* %pos141, align 4, !dbg !2016
  %idxprom188 = sext i32 %180 to i64, !dbg !2017
  %181 = load i8**, i8*** %dst, align 8, !dbg !2017
  %arrayidx189 = getelementptr inbounds i8*, i8** %181, i64 1, !dbg !2017
  %182 = load i8*, i8** %arrayidx189, align 8, !dbg !2017
  %arrayidx190 = getelementptr inbounds i8, i8* %182, i64 %idxprom188, !dbg !2017
  store i8 %conv187, i8* %arrayidx190, align 1, !dbg !2018
  %183 = load i32, i32* %pos141, align 4, !dbg !2019
  %idxprom191 = sext i32 %183 to i64, !dbg !2020
  %184 = load i8**, i8*** %dst, align 8, !dbg !2020
  %arrayidx192 = getelementptr inbounds i8*, i8** %184, i64 2, !dbg !2020
  %185 = load i8*, i8** %arrayidx192, align 8, !dbg !2020
  %arrayidx193 = getelementptr inbounds i8, i8* %185, i64 %idxprom191, !dbg !2020
  %186 = load i8, i8* %arrayidx193, align 1, !dbg !2020
  %conv194 = zext i8 %186 to i32, !dbg !2020
  %187 = load i32, i32* %intensity, align 4, !dbg !2021
  %add195 = add nsw i32 %conv194, %187, !dbg !2022
  %cmp196 = icmp sgt i32 %add195, 255, !dbg !2023
  br i1 %cmp196, label %cond.true198, label %cond.false199, !dbg !2024

cond.true198:                                     ; preds = %cond.end185
  br label %cond.end205, !dbg !2025

cond.false199:                                    ; preds = %cond.end185
  %188 = load i32, i32* %pos141, align 4, !dbg !2026
  %idxprom200 = sext i32 %188 to i64, !dbg !2027
  %189 = load i8**, i8*** %dst, align 8, !dbg !2027
  %arrayidx201 = getelementptr inbounds i8*, i8** %189, i64 2, !dbg !2027
  %190 = load i8*, i8** %arrayidx201, align 8, !dbg !2027
  %arrayidx202 = getelementptr inbounds i8, i8* %190, i64 %idxprom200, !dbg !2027
  %191 = load i8, i8* %arrayidx202, align 1, !dbg !2027
  %conv203 = zext i8 %191 to i32, !dbg !2027
  %192 = load i32, i32* %intensity, align 4, !dbg !2028
  %add204 = add nsw i32 %conv203, %192, !dbg !2029
  br label %cond.end205, !dbg !2030

cond.end205:                                      ; preds = %cond.false199, %cond.true198
  %cond206 = phi i32 [ 255, %cond.true198 ], [ %add204, %cond.false199 ], !dbg !2031
  %conv207 = trunc i32 %cond206 to i8, !dbg !2032
  %193 = load i32, i32* %pos141, align 4, !dbg !2033
  %idxprom208 = sext i32 %193 to i64, !dbg !2034
  %194 = load i8**, i8*** %dst, align 8, !dbg !2034
  %arrayidx209 = getelementptr inbounds i8*, i8** %194, i64 2, !dbg !2034
  %195 = load i8*, i8** %arrayidx209, align 8, !dbg !2034
  %arrayidx210 = getelementptr inbounds i8, i8* %195, i64 %idxprom208, !dbg !2034
  store i8 %conv207, i8* %arrayidx210, align 1, !dbg !2035
  br label %for.inc211, !dbg !2036

for.inc211:                                       ; preds = %cond.end205, %if.then149
  %196 = load i32, i32* %j, align 4, !dbg !2037
  %inc212 = add nsw i32 %196, 1, !dbg !2037
  store i32 %inc212, i32* %j, align 4, !dbg !2037
  br label %for.cond122, !dbg !2039, !llvm.loop !2040

for.end213:                                       ; preds = %for.cond122
  br label %for.inc214, !dbg !2042

for.inc214:                                       ; preds = %for.end213
  %197 = load i32, i32* %i, align 4, !dbg !2043
  %inc215 = add nsw i32 %197, 1, !dbg !2043
  store i32 %inc215, i32* %i, align 4, !dbg !2043
  br label %for.cond112, !dbg !2045, !llvm.loop !2046

for.end216:                                       ; preds = %for.cond112
  br label %if.end217

if.end217:                                        ; preds = %for.end216, %for.end111
  br label %sw.epilog, !dbg !2048

sw.bb218:                                         ; preds = %for.end54
  %198 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2049
  %is_yuv219 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %198, i32 0, i32 12, !dbg !2051
  %199 = load i32, i32* %is_yuv219, align 8, !dbg !2051
  %tobool220 = icmp ne i32 %199, 0, !dbg !2049
  br i1 %tobool220, label %if.then221, label %if.else299, !dbg !2052

if.then221:                                       ; preds = %sw.bb218
  store i32 0, i32* %i, align 4, !dbg !2053
  br label %for.cond222, !dbg !2056

for.cond222:                                      ; preds = %for.inc296, %if.then221
  %200 = load i32, i32* %i, align 4, !dbg !2057
  %201 = load i32, i32* %h, align 4, !dbg !2060
  %cmp223 = icmp slt i32 %200, %201, !dbg !2061
  br i1 %cmp223, label %for.body225, label %for.end298, !dbg !2062

for.body225:                                      ; preds = %for.cond222
  call void @llvm.dbg.declare(metadata i32* %iw1, metadata !2063, metadata !909), !dbg !2065
  %202 = load i32, i32* %i, align 4, !dbg !2066
  %203 = load i32, i32* %slinesizex, align 4, !dbg !2067
  %mul226 = mul nsw i32 %202, %203, !dbg !2068
  store i32 %mul226, i32* %iw1, align 4, !dbg !2065
  call void @llvm.dbg.declare(metadata i32* %iw2, metadata !2069, metadata !909), !dbg !2070
  %204 = load i32, i32* %i, align 4, !dbg !2071
  %205 = load i32, i32* %slinesizey, align 4, !dbg !2072
  %mul227 = mul nsw i32 %204, %205, !dbg !2073
  store i32 %mul227, i32* %iw2, align 4, !dbg !2070
  call void @llvm.dbg.declare(metadata i32* %iwd228, metadata !2074, metadata !909), !dbg !2075
  %206 = load i32, i32* %i, align 4, !dbg !2076
  %207 = load i32, i32* %slinesized, align 4, !dbg !2077
  %mul229 = mul nsw i32 %206, %207, !dbg !2078
  store i32 %mul229, i32* %iwd228, align 4, !dbg !2075
  store i32 0, i32* %j, align 4, !dbg !2079
  br label %for.cond230, !dbg !2081

for.cond230:                                      ; preds = %for.inc293, %for.body225
  %208 = load i32, i32* %j, align 4, !dbg !2082
  %209 = load i32, i32* %w, align 4, !dbg !2085
  %cmp231 = icmp slt i32 %208, %209, !dbg !2086
  br i1 %cmp231, label %for.body233, label %for.end295, !dbg !2087

for.body233:                                      ; preds = %for.cond230
  call void @llvm.dbg.declare(metadata i32* %x234, metadata !2088, metadata !909), !dbg !2090
  %210 = load i32, i32* %iw1, align 4, !dbg !2091
  %211 = load i32, i32* %j, align 4, !dbg !2092
  %add235 = add nsw i32 %210, %211, !dbg !2093
  %idxprom236 = sext i32 %add235 to i64, !dbg !2094
  %212 = load i8*, i8** %spx, align 8, !dbg !2094
  %arrayidx237 = getelementptr inbounds i8, i8* %212, i64 %idxprom236, !dbg !2094
  %213 = load i8, i8* %arrayidx237, align 1, !dbg !2094
  %conv238 = zext i8 %213 to i32, !dbg !2094
  store i32 %conv238, i32* %x234, align 4, !dbg !2090
  call void @llvm.dbg.declare(metadata i32* %y239, metadata !2095, metadata !909), !dbg !2096
  %214 = load i32, i32* %iw2, align 4, !dbg !2097
  %215 = load i32, i32* %j, align 4, !dbg !2098
  %add240 = add nsw i32 %214, %215, !dbg !2099
  %idxprom241 = sext i32 %add240 to i64, !dbg !2100
  %216 = load i8*, i8** %spy, align 8, !dbg !2100
  %arrayidx242 = getelementptr inbounds i8, i8* %216, i64 %idxprom241, !dbg !2100
  %217 = load i8, i8* %arrayidx242, align 1, !dbg !2100
  %conv243 = zext i8 %217 to i32, !dbg !2100
  store i32 %conv243, i32* %y239, align 4, !dbg !2096
  call void @llvm.dbg.declare(metadata i32* %z244, metadata !2101, metadata !909), !dbg !2102
  %218 = load i32, i32* %iwd228, align 4, !dbg !2103
  %219 = load i32, i32* %j, align 4, !dbg !2104
  %add245 = add nsw i32 %218, %219, !dbg !2105
  %idxprom246 = sext i32 %add245 to i64, !dbg !2106
  %220 = load i8*, i8** %spd, align 8, !dbg !2106
  %arrayidx247 = getelementptr inbounds i8, i8* %220, i64 %idxprom246, !dbg !2106
  %221 = load i8, i8* %arrayidx247, align 1, !dbg !2106
  %conv248 = zext i8 %221 to i32, !dbg !2106
  store i32 %conv248, i32* %z244, align 4, !dbg !2102
  call void @llvm.dbg.declare(metadata i32* %pos249, metadata !2107, metadata !909), !dbg !2108
  %222 = load i32, i32* %y239, align 4, !dbg !2109
  %223 = load i32, i32* %dlinesize, align 4, !dbg !2110
  %mul250 = mul nsw i32 %222, %223, !dbg !2111
  %224 = load i32, i32* %x234, align 4, !dbg !2112
  %add251 = add nsw i32 %mul250, %224, !dbg !2113
  store i32 %add251, i32* %pos249, align 4, !dbg !2108
  %225 = load i32, i32* %z244, align 4, !dbg !2114
  %226 = load i32, i32* %tmin, align 4, !dbg !2116
  %cmp252 = icmp slt i32 %225, %226, !dbg !2117
  br i1 %cmp252, label %if.then257, label %lor.lhs.false254, !dbg !2118

lor.lhs.false254:                                 ; preds = %for.body233
  %227 = load i32, i32* %z244, align 4, !dbg !2119
  %228 = load i32, i32* %tmax, align 4, !dbg !2121
  %cmp255 = icmp sgt i32 %227, %228, !dbg !2122
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !2123

if.then257:                                       ; preds = %lor.lhs.false254, %for.body233
  br label %for.inc293, !dbg !2124

if.end258:                                        ; preds = %lor.lhs.false254
  %229 = load i32, i32* %pos249, align 4, !dbg !2125
  %idxprom259 = sext i32 %229 to i64, !dbg !2127
  %230 = load i8*, i8** %dpd, align 8, !dbg !2127
  %arrayidx260 = getelementptr inbounds i8, i8* %230, i64 %idxprom259, !dbg !2127
  %231 = load i8, i8* %arrayidx260, align 1, !dbg !2127
  %tobool261 = icmp ne i8 %231, 0, !dbg !2127
  br i1 %tobool261, label %if.end286, label %if.then262, !dbg !2128

if.then262:                                       ; preds = %if.end258
  %232 = load i32, i32* %x234, align 4, !dbg !2129
  %sub = sub nsw i32 128, %232, !dbg !2130
  %cmp263 = icmp sge i32 %sub, 0, !dbg !2131
  br i1 %cmp263, label %cond.true265, label %cond.false267, !dbg !2132

cond.true265:                                     ; preds = %if.then262
  %233 = load i32, i32* %x234, align 4, !dbg !2133
  %sub266 = sub nsw i32 128, %233, !dbg !2135
  br label %cond.end270, !dbg !2136

cond.false267:                                    ; preds = %if.then262
  %234 = load i32, i32* %x234, align 4, !dbg !2137
  %sub268 = sub nsw i32 128, %234, !dbg !2139
  %sub269 = sub nsw i32 0, %sub268, !dbg !2140
  br label %cond.end270, !dbg !2141

cond.end270:                                      ; preds = %cond.false267, %cond.true265
  %cond271 = phi i32 [ %sub266, %cond.true265 ], [ %sub269, %cond.false267 ], !dbg !2142
  %235 = load i32, i32* %y239, align 4, !dbg !2144
  %sub272 = sub nsw i32 128, %235, !dbg !2145
  %cmp273 = icmp sge i32 %sub272, 0, !dbg !2146
  br i1 %cmp273, label %cond.true275, label %cond.false277, !dbg !2147

cond.true275:                                     ; preds = %cond.end270
  %236 = load i32, i32* %y239, align 4, !dbg !2148
  %sub276 = sub nsw i32 128, %236, !dbg !2150
  br label %cond.end280, !dbg !2151

cond.false277:                                    ; preds = %cond.end270
  %237 = load i32, i32* %y239, align 4, !dbg !2152
  %sub278 = sub nsw i32 128, %237, !dbg !2154
  %sub279 = sub nsw i32 0, %sub278, !dbg !2155
  br label %cond.end280, !dbg !2156

cond.end280:                                      ; preds = %cond.false277, %cond.true275
  %cond281 = phi i32 [ %sub276, %cond.true275 ], [ %sub279, %cond.false277 ], !dbg !2157
  %add282 = add nsw i32 %cond271, %cond281, !dbg !2159
  %conv283 = trunc i32 %add282 to i8, !dbg !2160
  %238 = load i32, i32* %pos249, align 4, !dbg !2161
  %idxprom284 = sext i32 %238 to i64, !dbg !2162
  %239 = load i8*, i8** %dpd, align 8, !dbg !2162
  %arrayidx285 = getelementptr inbounds i8, i8* %239, i64 %idxprom284, !dbg !2162
  store i8 %conv283, i8* %arrayidx285, align 1, !dbg !2163
  br label %if.end286, !dbg !2162

if.end286:                                        ; preds = %cond.end280, %if.end258
  %240 = load i32, i32* %x234, align 4, !dbg !2164
  %conv287 = trunc i32 %240 to i8, !dbg !2164
  %241 = load i32, i32* %pos249, align 4, !dbg !2165
  %idxprom288 = sext i32 %241 to i64, !dbg !2166
  %242 = load i8*, i8** %dpx, align 8, !dbg !2166
  %arrayidx289 = getelementptr inbounds i8, i8* %242, i64 %idxprom288, !dbg !2166
  store i8 %conv287, i8* %arrayidx289, align 1, !dbg !2167
  %243 = load i32, i32* %y239, align 4, !dbg !2168
  %conv290 = trunc i32 %243 to i8, !dbg !2168
  %244 = load i32, i32* %pos249, align 4, !dbg !2169
  %idxprom291 = sext i32 %244 to i64, !dbg !2170
  %245 = load i8*, i8** %dpy, align 8, !dbg !2170
  %arrayidx292 = getelementptr inbounds i8, i8* %245, i64 %idxprom291, !dbg !2170
  store i8 %conv290, i8* %arrayidx292, align 1, !dbg !2171
  br label %for.inc293, !dbg !2172

for.inc293:                                       ; preds = %if.end286, %if.then257
  %246 = load i32, i32* %j, align 4, !dbg !2173
  %inc294 = add nsw i32 %246, 1, !dbg !2173
  store i32 %inc294, i32* %j, align 4, !dbg !2173
  br label %for.cond230, !dbg !2175, !llvm.loop !2176

for.end295:                                       ; preds = %for.cond230
  br label %for.inc296, !dbg !2178

for.inc296:                                       ; preds = %for.end295
  %247 = load i32, i32* %i, align 4, !dbg !2179
  %inc297 = add nsw i32 %247, 1, !dbg !2179
  store i32 %inc297, i32* %i, align 4, !dbg !2179
  br label %for.cond222, !dbg !2181, !llvm.loop !2182

for.end298:                                       ; preds = %for.cond222
  br label %if.end367, !dbg !2184

if.else299:                                       ; preds = %sw.bb218
  store i32 0, i32* %i, align 4, !dbg !2185
  br label %for.cond300, !dbg !2188

for.cond300:                                      ; preds = %for.inc364, %if.else299
  %248 = load i32, i32* %i, align 4, !dbg !2189
  %249 = load i32, i32* %h, align 4, !dbg !2192
  %cmp301 = icmp slt i32 %248, %249, !dbg !2193
  br i1 %cmp301, label %for.body303, label %for.end366, !dbg !2194

for.body303:                                      ; preds = %for.cond300
  call void @llvm.dbg.declare(metadata i32* %iw1304, metadata !2195, metadata !909), !dbg !2197
  %250 = load i32, i32* %i, align 4, !dbg !2198
  %251 = load i32, i32* %slinesizex, align 4, !dbg !2199
  %mul305 = mul nsw i32 %250, %251, !dbg !2200
  store i32 %mul305, i32* %iw1304, align 4, !dbg !2197
  call void @llvm.dbg.declare(metadata i32* %iw2306, metadata !2201, metadata !909), !dbg !2202
  %252 = load i32, i32* %i, align 4, !dbg !2203
  %253 = load i32, i32* %slinesizey, align 4, !dbg !2204
  %mul307 = mul nsw i32 %252, %253, !dbg !2205
  store i32 %mul307, i32* %iw2306, align 4, !dbg !2202
  call void @llvm.dbg.declare(metadata i32* %iwd308, metadata !2206, metadata !909), !dbg !2207
  %254 = load i32, i32* %i, align 4, !dbg !2208
  %255 = load i32, i32* %slinesized, align 4, !dbg !2209
  %mul309 = mul nsw i32 %254, %255, !dbg !2210
  store i32 %mul309, i32* %iwd308, align 4, !dbg !2207
  store i32 0, i32* %j, align 4, !dbg !2211
  br label %for.cond310, !dbg !2213

for.cond310:                                      ; preds = %for.inc361, %for.body303
  %256 = load i32, i32* %j, align 4, !dbg !2214
  %257 = load i32, i32* %w, align 4, !dbg !2217
  %cmp311 = icmp slt i32 %256, %257, !dbg !2218
  br i1 %cmp311, label %for.body313, label %for.end363, !dbg !2219

for.body313:                                      ; preds = %for.cond310
  call void @llvm.dbg.declare(metadata i32* %x314, metadata !2220, metadata !909), !dbg !2222
  %258 = load i32, i32* %iw1304, align 4, !dbg !2223
  %259 = load i32, i32* %j, align 4, !dbg !2224
  %add315 = add nsw i32 %258, %259, !dbg !2225
  %idxprom316 = sext i32 %add315 to i64, !dbg !2226
  %260 = load i8*, i8** %spx, align 8, !dbg !2226
  %arrayidx317 = getelementptr inbounds i8, i8* %260, i64 %idxprom316, !dbg !2226
  %261 = load i8, i8* %arrayidx317, align 1, !dbg !2226
  %conv318 = zext i8 %261 to i32, !dbg !2226
  store i32 %conv318, i32* %x314, align 4, !dbg !2222
  call void @llvm.dbg.declare(metadata i32* %y319, metadata !2227, metadata !909), !dbg !2228
  %262 = load i32, i32* %iw2306, align 4, !dbg !2229
  %263 = load i32, i32* %j, align 4, !dbg !2230
  %add320 = add nsw i32 %262, %263, !dbg !2231
  %idxprom321 = sext i32 %add320 to i64, !dbg !2232
  %264 = load i8*, i8** %spy, align 8, !dbg !2232
  %arrayidx322 = getelementptr inbounds i8, i8* %264, i64 %idxprom321, !dbg !2232
  %265 = load i8, i8* %arrayidx322, align 1, !dbg !2232
  %conv323 = zext i8 %265 to i32, !dbg !2232
  store i32 %conv323, i32* %y319, align 4, !dbg !2228
  call void @llvm.dbg.declare(metadata i32* %z324, metadata !2233, metadata !909), !dbg !2234
  %266 = load i32, i32* %iwd308, align 4, !dbg !2235
  %267 = load i32, i32* %j, align 4, !dbg !2236
  %add325 = add nsw i32 %266, %267, !dbg !2237
  %idxprom326 = sext i32 %add325 to i64, !dbg !2238
  %268 = load i8*, i8** %spd, align 8, !dbg !2238
  %arrayidx327 = getelementptr inbounds i8, i8* %268, i64 %idxprom326, !dbg !2238
  %269 = load i8, i8* %arrayidx327, align 1, !dbg !2238
  %conv328 = zext i8 %269 to i32, !dbg !2238
  store i32 %conv328, i32* %z324, align 4, !dbg !2234
  call void @llvm.dbg.declare(metadata i32* %pos329, metadata !2239, metadata !909), !dbg !2240
  %270 = load i32, i32* %y319, align 4, !dbg !2241
  %271 = load i32, i32* %dlinesize, align 4, !dbg !2242
  %mul330 = mul nsw i32 %270, %271, !dbg !2243
  %272 = load i32, i32* %x314, align 4, !dbg !2244
  %add331 = add nsw i32 %mul330, %272, !dbg !2245
  store i32 %add331, i32* %pos329, align 4, !dbg !2240
  %273 = load i32, i32* %z324, align 4, !dbg !2246
  %274 = load i32, i32* %tmin, align 4, !dbg !2248
  %cmp332 = icmp slt i32 %273, %274, !dbg !2249
  br i1 %cmp332, label %if.then337, label %lor.lhs.false334, !dbg !2250

lor.lhs.false334:                                 ; preds = %for.body313
  %275 = load i32, i32* %z324, align 4, !dbg !2251
  %276 = load i32, i32* %tmax, align 4, !dbg !2253
  %cmp335 = icmp sgt i32 %275, %276, !dbg !2254
  br i1 %cmp335, label %if.then337, label %if.end338, !dbg !2255

if.then337:                                       ; preds = %lor.lhs.false334, %for.body313
  br label %for.inc361, !dbg !2256

if.end338:                                        ; preds = %lor.lhs.false334
  %277 = load i32, i32* %pos329, align 4, !dbg !2257
  %idxprom339 = sext i32 %277 to i64, !dbg !2259
  %278 = load i8*, i8** %dpd, align 8, !dbg !2259
  %arrayidx340 = getelementptr inbounds i8, i8* %278, i64 %idxprom339, !dbg !2259
  %279 = load i8, i8* %arrayidx340, align 1, !dbg !2259
  %tobool341 = icmp ne i8 %279, 0, !dbg !2259
  br i1 %tobool341, label %if.end354, label %if.then342, !dbg !2260

if.then342:                                       ; preds = %if.end338
  %280 = load i32, i32* %x314, align 4, !dbg !2261
  %281 = load i32, i32* %y319, align 4, !dbg !2262
  %add343 = add nsw i32 %280, %281, !dbg !2263
  %cmp344 = icmp sgt i32 %add343, 255, !dbg !2264
  br i1 %cmp344, label %cond.true346, label %cond.false347, !dbg !2265

cond.true346:                                     ; preds = %if.then342
  br label %cond.end349, !dbg !2266

cond.false347:                                    ; preds = %if.then342
  %282 = load i32, i32* %x314, align 4, !dbg !2268
  %283 = load i32, i32* %y319, align 4, !dbg !2270
  %add348 = add nsw i32 %282, %283, !dbg !2271
  br label %cond.end349, !dbg !2272

cond.end349:                                      ; preds = %cond.false347, %cond.true346
  %cond350 = phi i32 [ 255, %cond.true346 ], [ %add348, %cond.false347 ], !dbg !2273
  %conv351 = trunc i32 %cond350 to i8, !dbg !2275
  %284 = load i32, i32* %pos329, align 4, !dbg !2276
  %idxprom352 = sext i32 %284 to i64, !dbg !2277
  %285 = load i8*, i8** %dpd, align 8, !dbg !2277
  %arrayidx353 = getelementptr inbounds i8, i8* %285, i64 %idxprom352, !dbg !2277
  store i8 %conv351, i8* %arrayidx353, align 1, !dbg !2278
  br label %if.end354, !dbg !2277

if.end354:                                        ; preds = %cond.end349, %if.end338
  %286 = load i32, i32* %x314, align 4, !dbg !2279
  %conv355 = trunc i32 %286 to i8, !dbg !2279
  %287 = load i32, i32* %pos329, align 4, !dbg !2280
  %idxprom356 = sext i32 %287 to i64, !dbg !2281
  %288 = load i8*, i8** %dpx, align 8, !dbg !2281
  %arrayidx357 = getelementptr inbounds i8, i8* %288, i64 %idxprom356, !dbg !2281
  store i8 %conv355, i8* %arrayidx357, align 1, !dbg !2282
  %289 = load i32, i32* %y319, align 4, !dbg !2283
  %conv358 = trunc i32 %289 to i8, !dbg !2283
  %290 = load i32, i32* %pos329, align 4, !dbg !2284
  %idxprom359 = sext i32 %290 to i64, !dbg !2285
  %291 = load i8*, i8** %dpy, align 8, !dbg !2285
  %arrayidx360 = getelementptr inbounds i8, i8* %291, i64 %idxprom359, !dbg !2285
  store i8 %conv358, i8* %arrayidx360, align 1, !dbg !2286
  br label %for.inc361, !dbg !2287

for.inc361:                                       ; preds = %if.end354, %if.then337
  %292 = load i32, i32* %j, align 4, !dbg !2288
  %inc362 = add nsw i32 %292, 1, !dbg !2288
  store i32 %inc362, i32* %j, align 4, !dbg !2288
  br label %for.cond310, !dbg !2290, !llvm.loop !2291

for.end363:                                       ; preds = %for.cond310
  br label %for.inc364, !dbg !2293

for.inc364:                                       ; preds = %for.end363
  %293 = load i32, i32* %i, align 4, !dbg !2294
  %inc365 = add nsw i32 %293, 1, !dbg !2294
  store i32 %inc365, i32* %i, align 4, !dbg !2294
  br label %for.cond300, !dbg !2296, !llvm.loop !2297

for.end366:                                       ; preds = %for.cond300
  br label %if.end367

if.end367:                                        ; preds = %for.end366, %for.end298
  br label %sw.epilog, !dbg !2299

sw.bb368:                                         ; preds = %for.end54
  store i32 0, i32* %i, align 4, !dbg !2300
  br label %for.cond369, !dbg !2302

for.cond369:                                      ; preds = %for.inc434, %sw.bb368
  %294 = load i32, i32* %i, align 4, !dbg !2303
  %295 = load i32, i32* %h, align 4, !dbg !2306
  %cmp370 = icmp slt i32 %294, %295, !dbg !2307
  br i1 %cmp370, label %for.body372, label %for.end436, !dbg !2308

for.body372:                                      ; preds = %for.cond369
  call void @llvm.dbg.declare(metadata i32* %iw1373, metadata !2309, metadata !909), !dbg !2311
  %296 = load i32, i32* %i, align 4, !dbg !2312
  %297 = load i32, i32* %slinesizex, align 4, !dbg !2313
  %mul374 = mul nsw i32 %296, %297, !dbg !2314
  store i32 %mul374, i32* %iw1373, align 4, !dbg !2311
  call void @llvm.dbg.declare(metadata i32* %iw2375, metadata !2315, metadata !909), !dbg !2316
  %298 = load i32, i32* %i, align 4, !dbg !2317
  %299 = load i32, i32* %slinesizey, align 4, !dbg !2318
  %mul376 = mul nsw i32 %298, %299, !dbg !2319
  store i32 %mul376, i32* %iw2375, align 4, !dbg !2316
  call void @llvm.dbg.declare(metadata i32* %iwd377, metadata !2320, metadata !909), !dbg !2321
  %300 = load i32, i32* %i, align 4, !dbg !2322
  %301 = load i32, i32* %slinesized, align 4, !dbg !2323
  %mul378 = mul nsw i32 %300, %301, !dbg !2324
  store i32 %mul378, i32* %iwd377, align 4, !dbg !2321
  store i32 0, i32* %j, align 4, !dbg !2325
  br label %for.cond379, !dbg !2327

for.cond379:                                      ; preds = %for.inc431, %for.body372
  %302 = load i32, i32* %j, align 4, !dbg !2328
  %303 = load i32, i32* %w, align 4, !dbg !2331
  %cmp380 = icmp slt i32 %302, %303, !dbg !2332
  br i1 %cmp380, label %for.body382, label %for.end433, !dbg !2333

for.body382:                                      ; preds = %for.cond379
  call void @llvm.dbg.declare(metadata i32* %x383, metadata !2334, metadata !909), !dbg !2336
  %304 = load i32, i32* %iw1373, align 4, !dbg !2337
  %305 = load i32, i32* %j, align 4, !dbg !2338
  %add384 = add nsw i32 %304, %305, !dbg !2339
  %idxprom385 = sext i32 %add384 to i64, !dbg !2340
  %306 = load i8*, i8** %spx, align 8, !dbg !2340
  %arrayidx386 = getelementptr inbounds i8, i8* %306, i64 %idxprom385, !dbg !2340
  %307 = load i8, i8* %arrayidx386, align 1, !dbg !2340
  %conv387 = zext i8 %307 to i32, !dbg !2340
  store i32 %conv387, i32* %x383, align 4, !dbg !2336
  call void @llvm.dbg.declare(metadata i32* %y388, metadata !2341, metadata !909), !dbg !2342
  %308 = load i32, i32* %iw2375, align 4, !dbg !2343
  %309 = load i32, i32* %j, align 4, !dbg !2344
  %add389 = add nsw i32 %308, %309, !dbg !2345
  %idxprom390 = sext i32 %add389 to i64, !dbg !2346
  %310 = load i8*, i8** %spy, align 8, !dbg !2346
  %arrayidx391 = getelementptr inbounds i8, i8* %310, i64 %idxprom390, !dbg !2346
  %311 = load i8, i8* %arrayidx391, align 1, !dbg !2346
  %conv392 = zext i8 %311 to i32, !dbg !2346
  store i32 %conv392, i32* %y388, align 4, !dbg !2342
  call void @llvm.dbg.declare(metadata i32* %z393, metadata !2347, metadata !909), !dbg !2348
  %312 = load i32, i32* %iwd377, align 4, !dbg !2349
  %313 = load i32, i32* %j, align 4, !dbg !2350
  %add394 = add nsw i32 %312, %313, !dbg !2351
  %idxprom395 = sext i32 %add394 to i64, !dbg !2352
  %314 = load i8*, i8** %spd, align 8, !dbg !2352
  %arrayidx396 = getelementptr inbounds i8, i8* %314, i64 %idxprom395, !dbg !2352
  %315 = load i8, i8* %arrayidx396, align 1, !dbg !2352
  %conv397 = zext i8 %315 to i32, !dbg !2352
  store i32 %conv397, i32* %z393, align 4, !dbg !2348
  call void @llvm.dbg.declare(metadata i32* %pos398, metadata !2353, metadata !909), !dbg !2354
  %316 = load i32, i32* %y388, align 4, !dbg !2355
  %317 = load i32, i32* %dlinesize, align 4, !dbg !2356
  %mul399 = mul nsw i32 %316, %317, !dbg !2357
  %318 = load i32, i32* %x383, align 4, !dbg !2358
  %add400 = add nsw i32 %mul399, %318, !dbg !2359
  store i32 %add400, i32* %pos398, align 4, !dbg !2354
  %319 = load i32, i32* %z393, align 4, !dbg !2360
  %320 = load i32, i32* %tmin, align 4, !dbg !2362
  %cmp401 = icmp slt i32 %319, %320, !dbg !2363
  br i1 %cmp401, label %if.then406, label %lor.lhs.false403, !dbg !2364

lor.lhs.false403:                                 ; preds = %for.body382
  %321 = load i32, i32* %z393, align 4, !dbg !2365
  %322 = load i32, i32* %tmax, align 4, !dbg !2367
  %cmp404 = icmp sgt i32 %321, %322, !dbg !2368
  br i1 %cmp404, label %if.then406, label %if.end407, !dbg !2369

if.then406:                                       ; preds = %lor.lhs.false403, %for.body382
  br label %for.inc431, !dbg !2370

if.end407:                                        ; preds = %lor.lhs.false403
  %323 = load i32, i32* %pos398, align 4, !dbg !2371
  %idxprom408 = sext i32 %323 to i64, !dbg !2372
  %324 = load i8*, i8** %dpd, align 8, !dbg !2372
  %arrayidx409 = getelementptr inbounds i8, i8* %324, i64 %idxprom408, !dbg !2372
  %325 = load i8, i8* %arrayidx409, align 1, !dbg !2372
  %conv410 = zext i8 %325 to i32, !dbg !2372
  %326 = load i32, i32* %intensity, align 4, !dbg !2373
  %add411 = add nsw i32 %conv410, %326, !dbg !2374
  %cmp412 = icmp sgt i32 255, %add411, !dbg !2375
  br i1 %cmp412, label %cond.true414, label %cond.false419, !dbg !2376

cond.true414:                                     ; preds = %if.end407
  %327 = load i32, i32* %pos398, align 4, !dbg !2377
  %idxprom415 = sext i32 %327 to i64, !dbg !2379
  %328 = load i8*, i8** %dpd, align 8, !dbg !2379
  %arrayidx416 = getelementptr inbounds i8, i8* %328, i64 %idxprom415, !dbg !2379
  %329 = load i8, i8* %arrayidx416, align 1, !dbg !2379
  %conv417 = zext i8 %329 to i32, !dbg !2379
  %330 = load i32, i32* %intensity, align 4, !dbg !2380
  %add418 = add nsw i32 %conv417, %330, !dbg !2381
  br label %cond.end420, !dbg !2382

cond.false419:                                    ; preds = %if.end407
  br label %cond.end420, !dbg !2383

cond.end420:                                      ; preds = %cond.false419, %cond.true414
  %cond421 = phi i32 [ %add418, %cond.true414 ], [ 255, %cond.false419 ], !dbg !2385
  %conv422 = trunc i32 %cond421 to i8, !dbg !2387
  %331 = load i32, i32* %pos398, align 4, !dbg !2388
  %idxprom423 = sext i32 %331 to i64, !dbg !2389
  %332 = load i8*, i8** %dpd, align 8, !dbg !2389
  %arrayidx424 = getelementptr inbounds i8, i8* %332, i64 %idxprom423, !dbg !2389
  store i8 %conv422, i8* %arrayidx424, align 1, !dbg !2390
  %333 = load i32, i32* %x383, align 4, !dbg !2391
  %conv425 = trunc i32 %333 to i8, !dbg !2391
  %334 = load i32, i32* %pos398, align 4, !dbg !2392
  %idxprom426 = sext i32 %334 to i64, !dbg !2393
  %335 = load i8*, i8** %dpx, align 8, !dbg !2393
  %arrayidx427 = getelementptr inbounds i8, i8* %335, i64 %idxprom426, !dbg !2393
  store i8 %conv425, i8* %arrayidx427, align 1, !dbg !2394
  %336 = load i32, i32* %y388, align 4, !dbg !2395
  %conv428 = trunc i32 %336 to i8, !dbg !2395
  %337 = load i32, i32* %pos398, align 4, !dbg !2396
  %idxprom429 = sext i32 %337 to i64, !dbg !2397
  %338 = load i8*, i8** %dpy, align 8, !dbg !2397
  %arrayidx430 = getelementptr inbounds i8, i8* %338, i64 %idxprom429, !dbg !2397
  store i8 %conv428, i8* %arrayidx430, align 1, !dbg !2398
  br label %for.inc431, !dbg !2399

for.inc431:                                       ; preds = %cond.end420, %if.then406
  %339 = load i32, i32* %j, align 4, !dbg !2400
  %inc432 = add nsw i32 %339, 1, !dbg !2400
  store i32 %inc432, i32* %j, align 4, !dbg !2400
  br label %for.cond379, !dbg !2402, !llvm.loop !2403

for.end433:                                       ; preds = %for.cond379
  br label %for.inc434, !dbg !2405

for.inc434:                                       ; preds = %for.end433
  %340 = load i32, i32* %i, align 4, !dbg !2406
  %inc435 = add nsw i32 %340, 1, !dbg !2406
  store i32 %inc435, i32* %i, align 4, !dbg !2406
  br label %for.cond369, !dbg !2408, !llvm.loop !2409

for.end436:                                       ; preds = %for.cond369
  br label %sw.epilog, !dbg !2411

sw.bb437:                                         ; preds = %for.end54
  store i32 0, i32* %i, align 4, !dbg !2412
  br label %for.cond438, !dbg !2414

for.cond438:                                      ; preds = %for.inc506, %sw.bb437
  %341 = load i32, i32* %i, align 4, !dbg !2415
  %342 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !2418
  %height439 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %342, i32 0, i32 4, !dbg !2419
  %343 = load i32, i32* %height439, align 4, !dbg !2419
  %cmp440 = icmp slt i32 %341, %343, !dbg !2420
  br i1 %cmp440, label %for.body442, label %for.end508, !dbg !2421

for.body442:                                      ; preds = %for.cond438
  call void @llvm.dbg.declare(metadata i32* %iwx443, metadata !2422, metadata !909), !dbg !2424
  %344 = load i32, i32* %i, align 4, !dbg !2425
  %345 = load i32, i32* %vsub, align 4, !dbg !2426
  %shr = ashr i32 %344, %345, !dbg !2427
  %346 = load i32, i32* %slinesizex, align 4, !dbg !2428
  %mul444 = mul nsw i32 %shr, %346, !dbg !2429
  store i32 %mul444, i32* %iwx443, align 4, !dbg !2424
  call void @llvm.dbg.declare(metadata i32* %iwy445, metadata !2430, metadata !909), !dbg !2431
  %347 = load i32, i32* %i, align 4, !dbg !2432
  %348 = load i32, i32* %vsub, align 4, !dbg !2433
  %shr446 = ashr i32 %347, %348, !dbg !2434
  %349 = load i32, i32* %slinesizey, align 4, !dbg !2435
  %mul447 = mul nsw i32 %shr446, %349, !dbg !2436
  store i32 %mul447, i32* %iwy445, align 4, !dbg !2431
  call void @llvm.dbg.declare(metadata i32* %iwd448, metadata !2437, metadata !909), !dbg !2438
  %350 = load i32, i32* %i, align 4, !dbg !2439
  %351 = load i32, i32* %slinesized, align 4, !dbg !2440
  %mul449 = mul nsw i32 %350, %351, !dbg !2441
  store i32 %mul449, i32* %iwd448, align 4, !dbg !2438
  store i32 0, i32* %j, align 4, !dbg !2442
  br label %for.cond450, !dbg !2444

for.cond450:                                      ; preds = %for.inc503, %for.body442
  %352 = load i32, i32* %j, align 4, !dbg !2445
  %353 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !2448
  %width451 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %353, i32 0, i32 3, !dbg !2449
  %354 = load i32, i32* %width451, align 8, !dbg !2449
  %cmp452 = icmp slt i32 %352, %354, !dbg !2450
  br i1 %cmp452, label %for.body454, label %for.end505, !dbg !2451

for.body454:                                      ; preds = %for.cond450
  call void @llvm.dbg.declare(metadata i32* %x455, metadata !2452, metadata !909), !dbg !2454
  %355 = load i32, i32* %iwx443, align 4, !dbg !2455
  %356 = load i32, i32* %j, align 4, !dbg !2456
  %357 = load i32, i32* %hsub, align 4, !dbg !2457
  %shr456 = ashr i32 %356, %357, !dbg !2458
  %add457 = add nsw i32 %355, %shr456, !dbg !2459
  %idxprom458 = sext i32 %add457 to i64, !dbg !2460
  %358 = load i8*, i8** %spx, align 8, !dbg !2460
  %arrayidx459 = getelementptr inbounds i8, i8* %358, i64 %idxprom458, !dbg !2460
  %359 = load i8, i8* %arrayidx459, align 1, !dbg !2460
  %conv460 = zext i8 %359 to i32, !dbg !2460
  store i32 %conv460, i32* %x455, align 4, !dbg !2454
  call void @llvm.dbg.declare(metadata i32* %y461, metadata !2461, metadata !909), !dbg !2462
  %360 = load i32, i32* %iwy445, align 4, !dbg !2463
  %361 = load i32, i32* %j, align 4, !dbg !2464
  %362 = load i32, i32* %hsub, align 4, !dbg !2465
  %shr462 = ashr i32 %361, %362, !dbg !2466
  %add463 = add nsw i32 %360, %shr462, !dbg !2467
  %idxprom464 = sext i32 %add463 to i64, !dbg !2468
  %363 = load i8*, i8** %spy, align 8, !dbg !2468
  %arrayidx465 = getelementptr inbounds i8, i8* %363, i64 %idxprom464, !dbg !2468
  %364 = load i8, i8* %arrayidx465, align 1, !dbg !2468
  %conv466 = zext i8 %364 to i32, !dbg !2468
  store i32 %conv466, i32* %y461, align 4, !dbg !2462
  call void @llvm.dbg.declare(metadata i32* %z467, metadata !2469, metadata !909), !dbg !2470
  %365 = load i32, i32* %iwd448, align 4, !dbg !2471
  %366 = load i32, i32* %j, align 4, !dbg !2472
  %add468 = add nsw i32 %365, %366, !dbg !2473
  %idxprom469 = sext i32 %add468 to i64, !dbg !2474
  %367 = load i8*, i8** %spd, align 8, !dbg !2474
  %arrayidx470 = getelementptr inbounds i8, i8* %367, i64 %idxprom469, !dbg !2474
  %368 = load i8, i8* %arrayidx470, align 1, !dbg !2474
  %conv471 = zext i8 %368 to i32, !dbg !2474
  store i32 %conv471, i32* %z467, align 4, !dbg !2470
  call void @llvm.dbg.declare(metadata i32* %pos472, metadata !2475, metadata !909), !dbg !2476
  %369 = load i32, i32* %y461, align 4, !dbg !2477
  %370 = load i32, i32* %dlinesize, align 4, !dbg !2478
  %mul473 = mul nsw i32 %369, %370, !dbg !2479
  %371 = load i32, i32* %x455, align 4, !dbg !2480
  %add474 = add nsw i32 %mul473, %371, !dbg !2481
  store i32 %add474, i32* %pos472, align 4, !dbg !2476
  %372 = load i32, i32* %z467, align 4, !dbg !2482
  %373 = load i32, i32* %tmin, align 4, !dbg !2484
  %cmp475 = icmp slt i32 %372, %373, !dbg !2485
  br i1 %cmp475, label %if.then480, label %lor.lhs.false477, !dbg !2486

lor.lhs.false477:                                 ; preds = %for.body454
  %374 = load i32, i32* %z467, align 4, !dbg !2487
  %375 = load i32, i32* %tmax, align 4, !dbg !2489
  %cmp478 = icmp sgt i32 %374, %375, !dbg !2490
  br i1 %cmp478, label %if.then480, label %if.end481, !dbg !2491

if.then480:                                       ; preds = %lor.lhs.false477, %for.body454
  br label %for.inc503, !dbg !2492

if.end481:                                        ; preds = %lor.lhs.false477
  %376 = load i32, i32* %z467, align 4, !dbg !2493
  %377 = load i32, i32* %pos472, align 4, !dbg !2494
  %idxprom482 = sext i32 %377 to i64, !dbg !2495
  %378 = load i8*, i8** %dpd, align 8, !dbg !2495
  %arrayidx483 = getelementptr inbounds i8, i8* %378, i64 %idxprom482, !dbg !2495
  %379 = load i8, i8* %arrayidx483, align 1, !dbg !2495
  %conv484 = zext i8 %379 to i32, !dbg !2496
  %cmp485 = icmp sgt i32 %376, %conv484, !dbg !2497
  br i1 %cmp485, label %cond.true487, label %cond.false488, !dbg !2498

cond.true487:                                     ; preds = %if.end481
  %380 = load i32, i32* %z467, align 4, !dbg !2499
  br label %cond.end492, !dbg !2501

cond.false488:                                    ; preds = %if.end481
  %381 = load i32, i32* %pos472, align 4, !dbg !2502
  %idxprom489 = sext i32 %381 to i64, !dbg !2504
  %382 = load i8*, i8** %dpd, align 8, !dbg !2504
  %arrayidx490 = getelementptr inbounds i8, i8* %382, i64 %idxprom489, !dbg !2504
  %383 = load i8, i8* %arrayidx490, align 1, !dbg !2504
  %conv491 = zext i8 %383 to i32, !dbg !2505
  br label %cond.end492, !dbg !2506

cond.end492:                                      ; preds = %cond.false488, %cond.true487
  %cond493 = phi i32 [ %380, %cond.true487 ], [ %conv491, %cond.false488 ], !dbg !2507
  %conv494 = trunc i32 %cond493 to i8, !dbg !2509
  %384 = load i32, i32* %pos472, align 4, !dbg !2510
  %idxprom495 = sext i32 %384 to i64, !dbg !2511
  %385 = load i8*, i8** %dpd, align 8, !dbg !2511
  %arrayidx496 = getelementptr inbounds i8, i8* %385, i64 %idxprom495, !dbg !2511
  store i8 %conv494, i8* %arrayidx496, align 1, !dbg !2512
  %386 = load i32, i32* %x455, align 4, !dbg !2513
  %conv497 = trunc i32 %386 to i8, !dbg !2513
  %387 = load i32, i32* %pos472, align 4, !dbg !2514
  %idxprom498 = sext i32 %387 to i64, !dbg !2515
  %388 = load i8*, i8** %dpx, align 8, !dbg !2515
  %arrayidx499 = getelementptr inbounds i8, i8* %388, i64 %idxprom498, !dbg !2515
  store i8 %conv497, i8* %arrayidx499, align 1, !dbg !2516
  %389 = load i32, i32* %y461, align 4, !dbg !2517
  %conv500 = trunc i32 %389 to i8, !dbg !2517
  %390 = load i32, i32* %pos472, align 4, !dbg !2518
  %idxprom501 = sext i32 %390 to i64, !dbg !2519
  %391 = load i8*, i8** %dpy, align 8, !dbg !2519
  %arrayidx502 = getelementptr inbounds i8, i8* %391, i64 %idxprom501, !dbg !2519
  store i8 %conv500, i8* %arrayidx502, align 1, !dbg !2520
  br label %for.inc503, !dbg !2521

for.inc503:                                       ; preds = %cond.end492, %if.then480
  %392 = load i32, i32* %j, align 4, !dbg !2522
  %inc504 = add nsw i32 %392, 1, !dbg !2522
  store i32 %inc504, i32* %j, align 4, !dbg !2522
  br label %for.cond450, !dbg !2524, !llvm.loop !2525

for.end505:                                       ; preds = %for.cond450
  br label %for.inc506, !dbg !2527

for.inc506:                                       ; preds = %for.end505
  %393 = load i32, i32* %i, align 4, !dbg !2528
  %inc507 = add nsw i32 %393, 1, !dbg !2528
  store i32 %inc507, i32* %i, align 4, !dbg !2528
  br label %for.cond438, !dbg !2530, !llvm.loop !2531

for.end508:                                       ; preds = %for.cond438
  br label %sw.epilog, !dbg !2533

sw.default:                                       ; preds = %for.end54
  br label %do.body, !dbg !2534, !llvm.loop !2535

do.body:                                          ; preds = %sw.default
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i32 0, i32 0), i32 753), !dbg !2536
  call void @abort() #7, !dbg !2541
  unreachable, !dbg !2543

do.end:                                           ; No predecessors!
  br label %sw.epilog, !dbg !2544

sw.epilog:                                        ; preds = %do.end, %for.end508, %for.end436, %if.end367, %if.end217
  %394 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2545
  %395 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2546
  call void @envelope(%struct.VectorscopeContext* %394, %struct.AVFrame* %395), !dbg !2547
  %396 = load i8**, i8*** %dst, align 8, !dbg !2548
  %arrayidx509 = getelementptr inbounds i8*, i8** %396, i64 3, !dbg !2548
  %397 = load i8*, i8** %arrayidx509, align 8, !dbg !2548
  %tobool510 = icmp ne i8* %397, null, !dbg !2548
  br i1 %tobool510, label %if.then511, label %if.end539, !dbg !2550

if.then511:                                       ; preds = %sw.epilog
  store i32 0, i32* %i, align 4, !dbg !2551
  br label %for.cond512, !dbg !2554

for.cond512:                                      ; preds = %for.inc536, %if.then511
  %398 = load i32, i32* %i, align 4, !dbg !2555
  %399 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2558
  %height513 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %399, i32 0, i32 4, !dbg !2559
  %400 = load i32, i32* %height513, align 4, !dbg !2559
  %cmp514 = icmp slt i32 %398, %400, !dbg !2560
  br i1 %cmp514, label %for.body516, label %for.end538, !dbg !2561

for.body516:                                      ; preds = %for.cond512
  store i32 0, i32* %j, align 4, !dbg !2562
  br label %for.cond517, !dbg !2565

for.cond517:                                      ; preds = %for.inc533, %for.body516
  %401 = load i32, i32* %j, align 4, !dbg !2566
  %402 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2569
  %width518 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %402, i32 0, i32 3, !dbg !2570
  %403 = load i32, i32* %width518, align 8, !dbg !2570
  %cmp519 = icmp slt i32 %401, %403, !dbg !2571
  br i1 %cmp519, label %for.body521, label %for.end535, !dbg !2572

for.body521:                                      ; preds = %for.cond517
  call void @llvm.dbg.declare(metadata i32* %pos522, metadata !2573, metadata !909), !dbg !2575
  %404 = load i32, i32* %i, align 4, !dbg !2576
  %405 = load i32, i32* %dlinesize, align 4, !dbg !2577
  %mul523 = mul nsw i32 %404, %405, !dbg !2578
  %406 = load i32, i32* %j, align 4, !dbg !2579
  %add524 = add nsw i32 %mul523, %406, !dbg !2580
  store i32 %add524, i32* %pos522, align 4, !dbg !2575
  %407 = load i32, i32* %pos522, align 4, !dbg !2581
  %idxprom525 = sext i32 %407 to i64, !dbg !2583
  %408 = load i8*, i8** %dpd, align 8, !dbg !2583
  %arrayidx526 = getelementptr inbounds i8, i8* %408, i64 %idxprom525, !dbg !2583
  %409 = load i8, i8* %arrayidx526, align 1, !dbg !2583
  %tobool527 = icmp ne i8 %409, 0, !dbg !2583
  br i1 %tobool527, label %if.then528, label %if.end532, !dbg !2584

if.then528:                                       ; preds = %for.body521
  %410 = load i32, i32* %pos522, align 4, !dbg !2585
  %idxprom529 = sext i32 %410 to i64, !dbg !2586
  %411 = load i8**, i8*** %dst, align 8, !dbg !2586
  %arrayidx530 = getelementptr inbounds i8*, i8** %411, i64 3, !dbg !2586
  %412 = load i8*, i8** %arrayidx530, align 8, !dbg !2586
  %arrayidx531 = getelementptr inbounds i8, i8* %412, i64 %idxprom529, !dbg !2586
  store i8 -1, i8* %arrayidx531, align 1, !dbg !2587
  br label %if.end532, !dbg !2586

if.end532:                                        ; preds = %if.then528, %for.body521
  br label %for.inc533, !dbg !2588

for.inc533:                                       ; preds = %if.end532
  %413 = load i32, i32* %j, align 4, !dbg !2589
  %inc534 = add nsw i32 %413, 1, !dbg !2589
  store i32 %inc534, i32* %j, align 4, !dbg !2589
  br label %for.cond517, !dbg !2591, !llvm.loop !2592

for.end535:                                       ; preds = %for.cond517
  br label %for.inc536, !dbg !2594

for.inc536:                                       ; preds = %for.end535
  %414 = load i32, i32* %i, align 4, !dbg !2595
  %inc537 = add nsw i32 %414, 1, !dbg !2595
  store i32 %inc537, i32* %i, align 4, !dbg !2595
  br label %for.cond512, !dbg !2597, !llvm.loop !2598

for.end538:                                       ; preds = %for.cond512
  br label %if.end539, !dbg !2600

if.end539:                                        ; preds = %for.end538, %sw.epilog
  %415 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2601
  %mode540 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %415, i32 0, i32 1, !dbg !2603
  %416 = load i32, i32* %mode540, align 8, !dbg !2603
  %cmp541 = icmp eq i32 %416, 1, !dbg !2604
  br i1 %cmp541, label %if.then543, label %if.else593, !dbg !2605

if.then543:                                       ; preds = %if.end539
  store i32 0, i32* %i, align 4, !dbg !2606
  br label %for.cond544, !dbg !2609

for.cond544:                                      ; preds = %for.inc590, %if.then543
  %417 = load i32, i32* %i, align 4, !dbg !2610
  %418 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2613
  %height545 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %418, i32 0, i32 4, !dbg !2614
  %419 = load i32, i32* %height545, align 4, !dbg !2614
  %cmp546 = icmp slt i32 %417, %419, !dbg !2615
  br i1 %cmp546, label %for.body548, label %for.end592, !dbg !2616

for.body548:                                      ; preds = %for.cond544
  store i32 0, i32* %j, align 4, !dbg !2617
  br label %for.cond549, !dbg !2620

for.cond549:                                      ; preds = %for.inc587, %for.body548
  %420 = load i32, i32* %j, align 4, !dbg !2621
  %421 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2624
  %width550 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %421, i32 0, i32 3, !dbg !2625
  %422 = load i32, i32* %width550, align 8, !dbg !2625
  %cmp551 = icmp slt i32 %420, %422, !dbg !2626
  br i1 %cmp551, label %for.body553, label %for.end589, !dbg !2627

for.body553:                                      ; preds = %for.cond549
  %423 = load i32, i32* %i, align 4, !dbg !2628
  %424 = load i32, i32* %pd.addr, align 4, !dbg !2631
  %idxprom554 = sext i32 %424 to i64, !dbg !2632
  %425 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2632
  %linesize555 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %425, i32 0, i32 1, !dbg !2633
  %arrayidx556 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize555, i64 0, i64 %idxprom554, !dbg !2632
  %426 = load i32, i32* %arrayidx556, align 4, !dbg !2632
  %mul557 = mul nsw i32 %423, %426, !dbg !2634
  %427 = load i32, i32* %j, align 4, !dbg !2635
  %add558 = add nsw i32 %mul557, %427, !dbg !2636
  %idxprom559 = sext i32 %add558 to i64, !dbg !2637
  %428 = load i8*, i8** %dpd, align 8, !dbg !2637
  %arrayidx560 = getelementptr inbounds i8, i8* %428, i64 %idxprom559, !dbg !2637
  %429 = load i8, i8* %arrayidx560, align 1, !dbg !2637
  %tobool561 = icmp ne i8 %429, 0, !dbg !2637
  br i1 %tobool561, label %if.end586, label %if.then562, !dbg !2638

if.then562:                                       ; preds = %for.body553
  %430 = load i32, i32* %j, align 4, !dbg !2639
  %conv563 = trunc i32 %430 to i8, !dbg !2639
  %431 = load i32, i32* %i, align 4, !dbg !2641
  %432 = load i32, i32* %px, align 4, !dbg !2642
  %idxprom564 = sext i32 %432 to i64, !dbg !2643
  %433 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2643
  %linesize565 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %433, i32 0, i32 1, !dbg !2644
  %arrayidx566 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize565, i64 0, i64 %idxprom564, !dbg !2643
  %434 = load i32, i32* %arrayidx566, align 4, !dbg !2643
  %mul567 = mul nsw i32 %431, %434, !dbg !2645
  %435 = load i32, i32* %j, align 4, !dbg !2646
  %add568 = add nsw i32 %mul567, %435, !dbg !2647
  %idxprom569 = sext i32 %add568 to i64, !dbg !2648
  %436 = load i8*, i8** %dpx, align 8, !dbg !2648
  %arrayidx570 = getelementptr inbounds i8, i8* %436, i64 %idxprom569, !dbg !2648
  store i8 %conv563, i8* %arrayidx570, align 1, !dbg !2649
  %437 = load i32, i32* %i, align 4, !dbg !2650
  %conv571 = trunc i32 %437 to i8, !dbg !2650
  %438 = load i32, i32* %i, align 4, !dbg !2651
  %439 = load i32, i32* %py, align 4, !dbg !2652
  %idxprom572 = sext i32 %439 to i64, !dbg !2653
  %440 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2653
  %linesize573 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %440, i32 0, i32 1, !dbg !2654
  %arrayidx574 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize573, i64 0, i64 %idxprom572, !dbg !2653
  %441 = load i32, i32* %arrayidx574, align 4, !dbg !2653
  %mul575 = mul nsw i32 %438, %441, !dbg !2655
  %442 = load i32, i32* %j, align 4, !dbg !2656
  %add576 = add nsw i32 %mul575, %442, !dbg !2657
  %idxprom577 = sext i32 %add576 to i64, !dbg !2658
  %443 = load i8*, i8** %dpy, align 8, !dbg !2658
  %arrayidx578 = getelementptr inbounds i8, i8* %443, i64 %idxprom577, !dbg !2658
  store i8 %conv571, i8* %arrayidx578, align 1, !dbg !2659
  %444 = load i32, i32* %i, align 4, !dbg !2660
  %445 = load i32, i32* %pd.addr, align 4, !dbg !2661
  %idxprom579 = sext i32 %445 to i64, !dbg !2662
  %446 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2662
  %linesize580 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %446, i32 0, i32 1, !dbg !2663
  %arrayidx581 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize580, i64 0, i64 %idxprom579, !dbg !2662
  %447 = load i32, i32* %arrayidx581, align 4, !dbg !2662
  %mul582 = mul nsw i32 %444, %447, !dbg !2664
  %448 = load i32, i32* %j, align 4, !dbg !2665
  %add583 = add nsw i32 %mul582, %448, !dbg !2666
  %idxprom584 = sext i32 %add583 to i64, !dbg !2667
  %449 = load i8*, i8** %dpd, align 8, !dbg !2667
  %arrayidx585 = getelementptr inbounds i8, i8* %449, i64 %idxprom584, !dbg !2667
  store i8 -128, i8* %arrayidx585, align 1, !dbg !2668
  br label %if.end586, !dbg !2669

if.end586:                                        ; preds = %if.then562, %for.body553
  br label %for.inc587, !dbg !2670

for.inc587:                                       ; preds = %if.end586
  %450 = load i32, i32* %j, align 4, !dbg !2671
  %inc588 = add nsw i32 %450, 1, !dbg !2671
  store i32 %inc588, i32* %j, align 4, !dbg !2671
  br label %for.cond549, !dbg !2673, !llvm.loop !2674

for.end589:                                       ; preds = %for.cond549
  br label %for.inc590, !dbg !2676

for.inc590:                                       ; preds = %for.end589
  %451 = load i32, i32* %i, align 4, !dbg !2677
  %inc591 = add nsw i32 %451, 1, !dbg !2677
  store i32 %inc591, i32* %i, align 4, !dbg !2677
  br label %for.cond544, !dbg !2679, !llvm.loop !2680

for.end592:                                       ; preds = %for.cond544
  br label %if.end654, !dbg !2682

if.else593:                                       ; preds = %if.end539
  %452 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2683
  %mode594 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %452, i32 0, i32 1, !dbg !2686
  %453 = load i32, i32* %mode594, align 8, !dbg !2686
  %cmp595 = icmp eq i32 %453, 5, !dbg !2687
  br i1 %cmp595, label %if.then597, label %if.end653, !dbg !2683

if.then597:                                       ; preds = %if.else593
  store i32 0, i32* %i, align 4, !dbg !2688
  br label %for.cond598, !dbg !2691

for.cond598:                                      ; preds = %for.inc650, %if.then597
  %454 = load i32, i32* %i, align 4, !dbg !2692
  %455 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2695
  %height599 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %455, i32 0, i32 4, !dbg !2696
  %456 = load i32, i32* %height599, align 4, !dbg !2696
  %cmp600 = icmp slt i32 %454, %456, !dbg !2697
  br i1 %cmp600, label %for.body602, label %for.end652, !dbg !2698

for.body602:                                      ; preds = %for.cond598
  store i32 0, i32* %j, align 4, !dbg !2699
  br label %for.cond603, !dbg !2702

for.cond603:                                      ; preds = %for.inc647, %for.body602
  %457 = load i32, i32* %j, align 4, !dbg !2703
  %458 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2706
  %width604 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %458, i32 0, i32 3, !dbg !2707
  %459 = load i32, i32* %width604, align 8, !dbg !2707
  %cmp605 = icmp slt i32 %457, %459, !dbg !2708
  br i1 %cmp605, label %for.body607, label %for.end649, !dbg !2709

for.body607:                                      ; preds = %for.cond603
  %460 = load i32, i32* %i, align 4, !dbg !2710
  %461 = load i32, i32* %pd.addr, align 4, !dbg !2713
  %idxprom608 = sext i32 %461 to i64, !dbg !2714
  %462 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2714
  %linesize609 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %462, i32 0, i32 1, !dbg !2715
  %arrayidx610 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize609, i64 0, i64 %idxprom608, !dbg !2714
  %463 = load i32, i32* %arrayidx610, align 4, !dbg !2714
  %mul611 = mul nsw i32 %460, %463, !dbg !2716
  %464 = load i32, i32* %j, align 4, !dbg !2717
  %add612 = add nsw i32 %mul611, %464, !dbg !2718
  %idxprom613 = sext i32 %add612 to i64, !dbg !2719
  %465 = load i8*, i8** %dpd, align 8, !dbg !2719
  %arrayidx614 = getelementptr inbounds i8, i8* %465, i64 %idxprom613, !dbg !2719
  %466 = load i8, i8* %arrayidx614, align 1, !dbg !2719
  %tobool615 = icmp ne i8 %466, 0, !dbg !2719
  br i1 %tobool615, label %if.end646, label %if.then616, !dbg !2720

if.then616:                                       ; preds = %for.body607
  %467 = load i32, i32* %j, align 4, !dbg !2721
  %conv617 = trunc i32 %467 to i8, !dbg !2721
  %468 = load i32, i32* %i, align 4, !dbg !2723
  %469 = load i32, i32* %px, align 4, !dbg !2724
  %idxprom618 = sext i32 %469 to i64, !dbg !2725
  %470 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2725
  %linesize619 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %470, i32 0, i32 1, !dbg !2726
  %arrayidx620 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize619, i64 0, i64 %idxprom618, !dbg !2725
  %471 = load i32, i32* %arrayidx620, align 4, !dbg !2725
  %mul621 = mul nsw i32 %468, %471, !dbg !2727
  %472 = load i32, i32* %j, align 4, !dbg !2728
  %add622 = add nsw i32 %mul621, %472, !dbg !2729
  %idxprom623 = sext i32 %add622 to i64, !dbg !2730
  %473 = load i8*, i8** %dpx, align 8, !dbg !2730
  %arrayidx624 = getelementptr inbounds i8, i8* %473, i64 %idxprom623, !dbg !2730
  store i8 %conv617, i8* %arrayidx624, align 1, !dbg !2731
  %474 = load i32, i32* %i, align 4, !dbg !2732
  %conv625 = trunc i32 %474 to i8, !dbg !2732
  %475 = load i32, i32* %i, align 4, !dbg !2733
  %476 = load i32, i32* %py, align 4, !dbg !2734
  %idxprom626 = sext i32 %476 to i64, !dbg !2735
  %477 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2735
  %linesize627 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %477, i32 0, i32 1, !dbg !2736
  %arrayidx628 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize627, i64 0, i64 %idxprom626, !dbg !2735
  %478 = load i32, i32* %arrayidx628, align 4, !dbg !2735
  %mul629 = mul nsw i32 %475, %478, !dbg !2737
  %479 = load i32, i32* %j, align 4, !dbg !2738
  %add630 = add nsw i32 %mul629, %479, !dbg !2739
  %idxprom631 = sext i32 %add630 to i64, !dbg !2740
  %480 = load i8*, i8** %dpy, align 8, !dbg !2740
  %arrayidx632 = getelementptr inbounds i8, i8* %480, i64 %idxprom631, !dbg !2740
  store i8 %conv625, i8* %arrayidx632, align 1, !dbg !2741
  %481 = load i32, i32* %i, align 4, !dbg !2742
  %sub633 = sub nsw i32 %481, 128, !dbg !2743
  %conv634 = sitofp i32 %sub633 to double, !dbg !2742
  %482 = load i32, i32* %j, align 4, !dbg !2744
  %sub635 = sub nsw i32 %482, 128, !dbg !2745
  %conv636 = sitofp i32 %sub635 to double, !dbg !2744
  %call = call double @hypot(double %conv634, double %conv636) #8, !dbg !2746
  %sub637 = fsub double 0x4066A09E667F3BCD, %call, !dbg !2747
  %conv638 = fptoui double %sub637 to i8, !dbg !2748
  %483 = load i32, i32* %i, align 4, !dbg !2749
  %484 = load i32, i32* %pd.addr, align 4, !dbg !2750
  %idxprom639 = sext i32 %484 to i64, !dbg !2751
  %485 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2751
  %linesize640 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %485, i32 0, i32 1, !dbg !2752
  %arrayidx641 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize640, i64 0, i64 %idxprom639, !dbg !2751
  %486 = load i32, i32* %arrayidx641, align 4, !dbg !2751
  %mul642 = mul nsw i32 %483, %486, !dbg !2753
  %487 = load i32, i32* %j, align 4, !dbg !2754
  %add643 = add nsw i32 %mul642, %487, !dbg !2755
  %idxprom644 = sext i32 %add643 to i64, !dbg !2756
  %488 = load i8*, i8** %dpd, align 8, !dbg !2756
  %arrayidx645 = getelementptr inbounds i8, i8* %488, i64 %idxprom644, !dbg !2756
  store i8 %conv638, i8* %arrayidx645, align 1, !dbg !2757
  br label %if.end646, !dbg !2758

if.end646:                                        ; preds = %if.then616, %for.body607
  br label %for.inc647, !dbg !2759

for.inc647:                                       ; preds = %if.end646
  %489 = load i32, i32* %j, align 4, !dbg !2760
  %inc648 = add nsw i32 %489, 1, !dbg !2760
  store i32 %inc648, i32* %j, align 4, !dbg !2760
  br label %for.cond603, !dbg !2762, !llvm.loop !2763

for.end649:                                       ; preds = %for.cond603
  br label %for.inc650, !dbg !2765

for.inc650:                                       ; preds = %for.end649
  %490 = load i32, i32* %i, align 4, !dbg !2766
  %inc651 = add nsw i32 %490, 1, !dbg !2766
  store i32 %inc651, i32* %i, align 4, !dbg !2766
  br label %for.cond598, !dbg !2768, !llvm.loop !2769

for.end652:                                       ; preds = %for.cond598
  br label %if.end653, !dbg !2771

if.end653:                                        ; preds = %for.end652, %if.else593
  br label %if.end654

if.end654:                                        ; preds = %if.end653, %for.end592
  ret void, !dbg !2772
}

; Function Attrs: nounwind uwtable
define internal void @vectorscope16(%struct.VectorscopeContext* %s, %struct.AVFrame* %in, %struct.AVFrame* %out, i32 %pd) #1 !dbg !2773 {
entry:
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %in.addr = alloca %struct.AVFrame*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  %pd.addr = alloca i32, align 4
  %src = alloca i16**, align 8
  %slinesizex = alloca i32, align 4
  %slinesizey = alloca i32, align 4
  %slinesized = alloca i32, align 4
  %dlinesize = alloca i32, align 4
  %intensity = alloca i32, align 4
  %px = alloca i32, align 4
  %py = alloca i32, align 4
  %h = alloca i32, align 4
  %w = alloca i32, align 4
  %spx = alloca i16*, align 8
  %spy = alloca i16*, align 8
  %spd = alloca i16*, align 8
  %hsub = alloca i32, align 4
  %vsub = alloca i32, align 4
  %dst = alloca i16**, align 8
  %dpx = alloca i16*, align 8
  %dpy = alloca i16*, align 8
  %dpd = alloca i16*, align 8
  %max = alloca i32, align 4
  %mid = alloca i32, align 4
  %tmin = alloca i32, align 4
  %tmax = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %iwx = alloca i32, align 4
  %iwy = alloca i32, align 4
  %iwd = alloca i32, align 4
  %x83 = alloca i32, align 4
  %y97 = alloca i32, align 4
  %z = alloca i32, align 4
  %pos = alloca i32, align 4
  %iwx151 = alloca i32, align 4
  %iwy153 = alloca i32, align 4
  %iwd155 = alloca i32, align 4
  %x161 = alloca i32, align 4
  %y176 = alloca i32, align 4
  %z191 = alloca i32, align 4
  %pos196 = alloca i32, align 4
  %iw1 = alloca i32, align 4
  %iw2 = alloca i32, align 4
  %iwd283 = alloca i32, align 4
  %x289 = alloca i32, align 4
  %y304 = alloca i32, align 4
  %z319 = alloca i32, align 4
  %pos324 = alloca i32, align 4
  %iw1380 = alloca i32, align 4
  %iw2382 = alloca i32, align 4
  %iwd384 = alloca i32, align 4
  %x390 = alloca i32, align 4
  %y405 = alloca i32, align 4
  %z420 = alloca i32, align 4
  %pos425 = alloca i32, align 4
  %iw1469 = alloca i32, align 4
  %iw2471 = alloca i32, align 4
  %iwd473 = alloca i32, align 4
  %x479 = alloca i32, align 4
  %y494 = alloca i32, align 4
  %z509 = alloca i32, align 4
  %pos514 = alloca i32, align 4
  %iwx559 = alloca i32, align 4
  %iwy561 = alloca i32, align 4
  %iwd564 = alloca i32, align 4
  %x571 = alloca i32, align 4
  %y588 = alloca i32, align 4
  %z605 = alloca i32, align 4
  %pos610 = alloca i32, align 4
  %pos660 = alloca i32, align 4
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !2774, metadata !909), !dbg !2775
  store %struct.AVFrame* %in, %struct.AVFrame** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %in.addr, metadata !2776, metadata !909), !dbg !2777
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !2778, metadata !909), !dbg !2779
  store i32 %pd, i32* %pd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pd.addr, metadata !2780, metadata !909), !dbg !2781
  call void @llvm.dbg.declare(metadata i16*** %src, metadata !2782, metadata !909), !dbg !2783
  %0 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !2784
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 0, !dbg !2785
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i32 0, i32 0, !dbg !2784
  %1 = bitcast i8** %arraydecay to i16**, !dbg !2786
  store i16** %1, i16*** %src, align 8, !dbg !2783
  call void @llvm.dbg.declare(metadata i32* %slinesizex, metadata !2787, metadata !909), !dbg !2788
  %2 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2789
  %x = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %2, i32 0, i32 9, !dbg !2790
  %3 = load i32, i32* %x, align 4, !dbg !2790
  %idxprom = sext i32 %3 to i64, !dbg !2791
  %4 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !2791
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 1, !dbg !2792
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom, !dbg !2791
  %5 = load i32, i32* %arrayidx, align 4, !dbg !2791
  %div = sdiv i32 %5, 2, !dbg !2793
  store i32 %div, i32* %slinesizex, align 4, !dbg !2788
  call void @llvm.dbg.declare(metadata i32* %slinesizey, metadata !2794, metadata !909), !dbg !2795
  %6 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2796
  %y = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %6, i32 0, i32 10, !dbg !2797
  %7 = load i32, i32* %y, align 8, !dbg !2797
  %idxprom1 = sext i32 %7 to i64, !dbg !2798
  %8 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !2798
  %linesize2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 1, !dbg !2799
  %arrayidx3 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize2, i64 0, i64 %idxprom1, !dbg !2798
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !2798
  %div4 = sdiv i32 %9, 2, !dbg !2800
  store i32 %div4, i32* %slinesizey, align 4, !dbg !2795
  call void @llvm.dbg.declare(metadata i32* %slinesized, metadata !2801, metadata !909), !dbg !2802
  %10 = load i32, i32* %pd.addr, align 4, !dbg !2803
  %idxprom5 = sext i32 %10 to i64, !dbg !2804
  %11 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !2804
  %linesize6 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 1, !dbg !2805
  %arrayidx7 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize6, i64 0, i64 %idxprom5, !dbg !2804
  %12 = load i32, i32* %arrayidx7, align 4, !dbg !2804
  %div8 = sdiv i32 %12, 2, !dbg !2806
  store i32 %div8, i32* %slinesized, align 4, !dbg !2802
  call void @llvm.dbg.declare(metadata i32* %dlinesize, metadata !2807, metadata !909), !dbg !2808
  %13 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2809
  %linesize9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 1, !dbg !2810
  %arrayidx10 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize9, i64 0, i64 0, !dbg !2809
  %14 = load i32, i32* %arrayidx10, align 8, !dbg !2809
  %div11 = sdiv i32 %14, 2, !dbg !2811
  store i32 %div11, i32* %dlinesize, align 4, !dbg !2808
  call void @llvm.dbg.declare(metadata i32* %intensity, metadata !2812, metadata !909), !dbg !2813
  %15 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2814
  %intensity12 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %15, i32 0, i32 2, !dbg !2815
  %16 = load i32, i32* %intensity12, align 4, !dbg !2815
  store i32 %16, i32* %intensity, align 4, !dbg !2813
  call void @llvm.dbg.declare(metadata i32* %px, metadata !2816, metadata !909), !dbg !2817
  %17 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2818
  %x13 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %17, i32 0, i32 9, !dbg !2819
  %18 = load i32, i32* %x13, align 4, !dbg !2819
  store i32 %18, i32* %px, align 4, !dbg !2817
  call void @llvm.dbg.declare(metadata i32* %py, metadata !2820, metadata !909), !dbg !2821
  %19 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2822
  %y14 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %19, i32 0, i32 10, !dbg !2823
  %20 = load i32, i32* %y14, align 8, !dbg !2823
  store i32 %20, i32* %py, align 4, !dbg !2821
  call void @llvm.dbg.declare(metadata i32* %h, metadata !2824, metadata !909), !dbg !2825
  %21 = load i32, i32* %py, align 4, !dbg !2826
  %idxprom15 = sext i32 %21 to i64, !dbg !2827
  %22 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2827
  %planeheight = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %22, i32 0, i32 6, !dbg !2828
  %arrayidx16 = getelementptr inbounds [4 x i32], [4 x i32]* %planeheight, i64 0, i64 %idxprom15, !dbg !2827
  %23 = load i32, i32* %arrayidx16, align 4, !dbg !2827
  store i32 %23, i32* %h, align 4, !dbg !2825
  call void @llvm.dbg.declare(metadata i32* %w, metadata !2829, metadata !909), !dbg !2830
  %24 = load i32, i32* %px, align 4, !dbg !2831
  %idxprom17 = sext i32 %24 to i64, !dbg !2832
  %25 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2832
  %planewidth = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %25, i32 0, i32 5, !dbg !2833
  %arrayidx18 = getelementptr inbounds [4 x i32], [4 x i32]* %planewidth, i64 0, i64 %idxprom17, !dbg !2832
  %26 = load i32, i32* %arrayidx18, align 4, !dbg !2832
  store i32 %26, i32* %w, align 4, !dbg !2830
  call void @llvm.dbg.declare(metadata i16** %spx, metadata !2834, metadata !909), !dbg !2835
  %27 = load i32, i32* %px, align 4, !dbg !2836
  %idxprom19 = sext i32 %27 to i64, !dbg !2837
  %28 = load i16**, i16*** %src, align 8, !dbg !2837
  %arrayidx20 = getelementptr inbounds i16*, i16** %28, i64 %idxprom19, !dbg !2837
  %29 = load i16*, i16** %arrayidx20, align 8, !dbg !2837
  store i16* %29, i16** %spx, align 8, !dbg !2835
  call void @llvm.dbg.declare(metadata i16** %spy, metadata !2838, metadata !909), !dbg !2839
  %30 = load i32, i32* %py, align 4, !dbg !2840
  %idxprom21 = sext i32 %30 to i64, !dbg !2841
  %31 = load i16**, i16*** %src, align 8, !dbg !2841
  %arrayidx22 = getelementptr inbounds i16*, i16** %31, i64 %idxprom21, !dbg !2841
  %32 = load i16*, i16** %arrayidx22, align 8, !dbg !2841
  store i16* %32, i16** %spy, align 8, !dbg !2839
  call void @llvm.dbg.declare(metadata i16** %spd, metadata !2842, metadata !909), !dbg !2843
  %33 = load i32, i32* %pd.addr, align 4, !dbg !2844
  %idxprom23 = sext i32 %33 to i64, !dbg !2845
  %34 = load i16**, i16*** %src, align 8, !dbg !2845
  %arrayidx24 = getelementptr inbounds i16*, i16** %34, i64 %idxprom23, !dbg !2845
  %35 = load i16*, i16** %arrayidx24, align 8, !dbg !2845
  store i16* %35, i16** %spd, align 8, !dbg !2843
  call void @llvm.dbg.declare(metadata i32* %hsub, metadata !2846, metadata !909), !dbg !2847
  %36 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2848
  %hsub25 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %36, i32 0, i32 7, !dbg !2849
  %37 = load i32, i32* %hsub25, align 4, !dbg !2849
  store i32 %37, i32* %hsub, align 4, !dbg !2847
  call void @llvm.dbg.declare(metadata i32* %vsub, metadata !2850, metadata !909), !dbg !2851
  %38 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2852
  %vsub26 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %38, i32 0, i32 8, !dbg !2853
  %39 = load i32, i32* %vsub26, align 8, !dbg !2853
  store i32 %39, i32* %vsub, align 4, !dbg !2851
  call void @llvm.dbg.declare(metadata i16*** %dst, metadata !2854, metadata !909), !dbg !2855
  %40 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2856
  %data27 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %40, i32 0, i32 0, !dbg !2857
  %arraydecay28 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data27, i32 0, i32 0, !dbg !2856
  %41 = bitcast i8** %arraydecay28 to i16**, !dbg !2858
  store i16** %41, i16*** %dst, align 8, !dbg !2855
  call void @llvm.dbg.declare(metadata i16** %dpx, metadata !2859, metadata !909), !dbg !2860
  %42 = load i32, i32* %px, align 4, !dbg !2861
  %idxprom29 = sext i32 %42 to i64, !dbg !2862
  %43 = load i16**, i16*** %dst, align 8, !dbg !2862
  %arrayidx30 = getelementptr inbounds i16*, i16** %43, i64 %idxprom29, !dbg !2862
  %44 = load i16*, i16** %arrayidx30, align 8, !dbg !2862
  store i16* %44, i16** %dpx, align 8, !dbg !2860
  call void @llvm.dbg.declare(metadata i16** %dpy, metadata !2863, metadata !909), !dbg !2864
  %45 = load i32, i32* %py, align 4, !dbg !2865
  %idxprom31 = sext i32 %45 to i64, !dbg !2866
  %46 = load i16**, i16*** %dst, align 8, !dbg !2866
  %arrayidx32 = getelementptr inbounds i16*, i16** %46, i64 %idxprom31, !dbg !2866
  %47 = load i16*, i16** %arrayidx32, align 8, !dbg !2866
  store i16* %47, i16** %dpy, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i16** %dpd, metadata !2867, metadata !909), !dbg !2868
  %48 = load i32, i32* %pd.addr, align 4, !dbg !2869
  %idxprom33 = sext i32 %48 to i64, !dbg !2870
  %49 = load i16**, i16*** %dst, align 8, !dbg !2870
  %arrayidx34 = getelementptr inbounds i16*, i16** %49, i64 %idxprom33, !dbg !2870
  %50 = load i16*, i16** %arrayidx34, align 8, !dbg !2870
  store i16* %50, i16** %dpd, align 8, !dbg !2868
  call void @llvm.dbg.declare(metadata i32* %max, metadata !2871, metadata !909), !dbg !2872
  %51 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2873
  %size = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %51, i32 0, i32 13, !dbg !2874
  %52 = load i32, i32* %size, align 4, !dbg !2874
  %sub = sub nsw i32 %52, 1, !dbg !2875
  store i32 %sub, i32* %max, align 4, !dbg !2872
  call void @llvm.dbg.declare(metadata i32* %mid, metadata !2876, metadata !909), !dbg !2877
  %53 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2878
  %size35 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %53, i32 0, i32 13, !dbg !2879
  %54 = load i32, i32* %size35, align 4, !dbg !2879
  %div36 = sdiv i32 %54, 2, !dbg !2880
  store i32 %div36, i32* %mid, align 4, !dbg !2877
  call void @llvm.dbg.declare(metadata i32* %tmin, metadata !2881, metadata !909), !dbg !2882
  %55 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2883
  %tmin37 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %55, i32 0, i32 22, !dbg !2884
  %56 = load i32, i32* %tmin37, align 8, !dbg !2884
  store i32 %56, i32* %tmin, align 4, !dbg !2882
  call void @llvm.dbg.declare(metadata i32* %tmax, metadata !2885, metadata !909), !dbg !2886
  %57 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2887
  %tmax38 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %57, i32 0, i32 23, !dbg !2888
  %58 = load i32, i32* %tmax38, align 4, !dbg !2888
  store i32 %58, i32* %tmax, align 4, !dbg !2886
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2889, metadata !909), !dbg !2890
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2891, metadata !909), !dbg !2892
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2893, metadata !909), !dbg !2894
  store i32 0, i32* %k, align 4, !dbg !2895
  br label %for.cond, !dbg !2897

for.cond:                                         ; preds = %for.inc67, %entry
  %59 = load i32, i32* %k, align 4, !dbg !2898
  %cmp = icmp slt i32 %59, 4, !dbg !2901
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2902

land.rhs:                                         ; preds = %for.cond
  %60 = load i32, i32* %k, align 4, !dbg !2903
  %idxprom39 = sext i32 %60 to i64, !dbg !2905
  %61 = load i16**, i16*** %dst, align 8, !dbg !2905
  %arrayidx40 = getelementptr inbounds i16*, i16** %61, i64 %idxprom39, !dbg !2905
  %62 = load i16*, i16** %arrayidx40, align 8, !dbg !2905
  %tobool = icmp ne i16* %62, null, !dbg !2906
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %63 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ]
  br i1 %63, label %for.body, label %for.end69, !dbg !2907

for.body:                                         ; preds = %land.end
  store i32 0, i32* %i, align 4, !dbg !2909
  br label %for.cond41, !dbg !2912

for.cond41:                                       ; preds = %for.inc64, %for.body
  %64 = load i32, i32* %i, align 4, !dbg !2913
  %65 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2916
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %65, i32 0, i32 4, !dbg !2917
  %66 = load i32, i32* %height, align 4, !dbg !2917
  %cmp42 = icmp slt i32 %64, %66, !dbg !2918
  br i1 %cmp42, label %for.body43, label %for.end66, !dbg !2919

for.body43:                                       ; preds = %for.cond41
  store i32 0, i32* %j, align 4, !dbg !2920
  br label %for.cond44, !dbg !2922

for.cond44:                                       ; preds = %for.inc, %for.body43
  %67 = load i32, i32* %j, align 4, !dbg !2923
  %68 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2926
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %68, i32 0, i32 3, !dbg !2927
  %69 = load i32, i32* %width, align 8, !dbg !2927
  %cmp45 = icmp slt i32 %67, %69, !dbg !2928
  br i1 %cmp45, label %for.body46, label %for.end, !dbg !2929

for.body46:                                       ; preds = %for.cond44
  %70 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2930
  %mode = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %70, i32 0, i32 1, !dbg !2931
  %71 = load i32, i32* %mode, align 8, !dbg !2931
  %cmp47 = icmp eq i32 %71, 1, !dbg !2932
  br i1 %cmp47, label %land.lhs.true, label %lor.lhs.false, !dbg !2933

lor.lhs.false:                                    ; preds = %for.body46
  %72 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2934
  %mode48 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %72, i32 0, i32 1, !dbg !2935
  %73 = load i32, i32* %mode48, align 8, !dbg !2935
  %cmp49 = icmp eq i32 %73, 5, !dbg !2936
  br i1 %cmp49, label %land.lhs.true, label %cond.false, !dbg !2937

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body46
  %74 = load i32, i32* %k, align 4, !dbg !2938
  %75 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2940
  %pd50 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %75, i32 0, i32 11, !dbg !2941
  %76 = load i32, i32* %pd50, align 4, !dbg !2941
  %cmp51 = icmp eq i32 %74, %76, !dbg !2942
  br i1 %cmp51, label %cond.true, label %cond.false, !dbg !2943

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !2944

cond.false:                                       ; preds = %land.lhs.true, %lor.lhs.false
  %77 = load i32, i32* %k, align 4, !dbg !2946
  %idxprom52 = sext i32 %77 to i64, !dbg !2948
  %78 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2948
  %bg_color = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %78, i32 0, i32 4, !dbg !2949
  %arrayidx53 = getelementptr inbounds [4 x i16], [4 x i16]* %bg_color, i64 0, i64 %idxprom52, !dbg !2948
  %79 = load i16, i16* %arrayidx53, align 2, !dbg !2948
  %conv = zext i16 %79 to i32, !dbg !2948
  br label %cond.end, !dbg !2950

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !2951
  %conv54 = trunc i32 %cond to i16, !dbg !2953
  %80 = load i32, i32* %k, align 4, !dbg !2954
  %idxprom55 = sext i32 %80 to i64, !dbg !2955
  %81 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2955
  %data56 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %81, i32 0, i32 0, !dbg !2956
  %arrayidx57 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data56, i64 0, i64 %idxprom55, !dbg !2955
  %82 = load i8*, i8** %arrayidx57, align 8, !dbg !2955
  %83 = load i32, i32* %i, align 4, !dbg !2957
  %84 = load i32, i32* %k, align 4, !dbg !2958
  %idxprom58 = sext i32 %84 to i64, !dbg !2959
  %85 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !2959
  %linesize59 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %85, i32 0, i32 1, !dbg !2960
  %arrayidx60 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize59, i64 0, i64 %idxprom58, !dbg !2959
  %86 = load i32, i32* %arrayidx60, align 4, !dbg !2959
  %mul = mul nsw i32 %83, %86, !dbg !2961
  %idx.ext = sext i32 %mul to i64, !dbg !2962
  %add.ptr = getelementptr inbounds i8, i8* %82, i64 %idx.ext, !dbg !2962
  %87 = load i32, i32* %j, align 4, !dbg !2963
  %mul61 = mul nsw i32 %87, 2, !dbg !2964
  %idx.ext62 = sext i32 %mul61 to i64, !dbg !2965
  %add.ptr63 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext62, !dbg !2965
  %88 = bitcast i8* %add.ptr63 to %union.unaligned_16*, !dbg !2966
  %l = bitcast %union.unaligned_16* %88 to i16*, !dbg !2966
  store i16 %conv54, i16* %l, align 1, !dbg !2967
  br label %for.inc, !dbg !2968

for.inc:                                          ; preds = %cond.end
  %89 = load i32, i32* %j, align 4, !dbg !2969
  %inc = add nsw i32 %89, 1, !dbg !2969
  store i32 %inc, i32* %j, align 4, !dbg !2969
  br label %for.cond44, !dbg !2970, !llvm.loop !2971

for.end:                                          ; preds = %for.cond44
  br label %for.inc64, !dbg !2973

for.inc64:                                        ; preds = %for.end
  %90 = load i32, i32* %i, align 4, !dbg !2975
  %inc65 = add nsw i32 %90, 1, !dbg !2975
  store i32 %inc65, i32* %i, align 4, !dbg !2975
  br label %for.cond41, !dbg !2977, !llvm.loop !2978

for.end66:                                        ; preds = %for.cond41
  br label %for.inc67, !dbg !2980

for.inc67:                                        ; preds = %for.end66
  %91 = load i32, i32* %k, align 4, !dbg !2981
  %inc68 = add nsw i32 %91, 1, !dbg !2981
  store i32 %inc68, i32* %k, align 4, !dbg !2981
  br label %for.cond, !dbg !2983, !llvm.loop !2984

for.end69:                                        ; preds = %land.end
  %92 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2986
  %mode70 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %92, i32 0, i32 1, !dbg !2987
  %93 = load i32, i32* %mode70, align 8, !dbg !2987
  switch i32 %93, label %sw.default [
    i32 1, label %sw.bb
    i32 5, label %sw.bb
    i32 0, label %sw.bb
    i32 2, label %sw.bb273
    i32 3, label %sw.bb464
    i32 4, label %sw.bb553
  ], !dbg !2988

sw.bb:                                            ; preds = %for.end69, %for.end69, %for.end69
  %94 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !2989
  %is_yuv = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %94, i32 0, i32 12, !dbg !2992
  %95 = load i32, i32* %is_yuv, align 8, !dbg !2992
  %tobool71 = icmp ne i32 %95, 0, !dbg !2989
  br i1 %tobool71, label %if.then, label %if.else, !dbg !2993

if.then:                                          ; preds = %sw.bb
  store i32 0, i32* %i, align 4, !dbg !2994
  br label %for.cond72, !dbg !2997

for.cond72:                                       ; preds = %for.inc144, %if.then
  %96 = load i32, i32* %i, align 4, !dbg !2998
  %97 = load i32, i32* %h, align 4, !dbg !3001
  %cmp73 = icmp slt i32 %96, %97, !dbg !3002
  br i1 %cmp73, label %for.body75, label %for.end146, !dbg !3003

for.body75:                                       ; preds = %for.cond72
  call void @llvm.dbg.declare(metadata i32* %iwx, metadata !3004, metadata !909), !dbg !3006
  %98 = load i32, i32* %i, align 4, !dbg !3007
  %99 = load i32, i32* %slinesizex, align 4, !dbg !3008
  %mul76 = mul nsw i32 %98, %99, !dbg !3009
  store i32 %mul76, i32* %iwx, align 4, !dbg !3006
  call void @llvm.dbg.declare(metadata i32* %iwy, metadata !3010, metadata !909), !dbg !3011
  %100 = load i32, i32* %i, align 4, !dbg !3012
  %101 = load i32, i32* %slinesizey, align 4, !dbg !3013
  %mul77 = mul nsw i32 %100, %101, !dbg !3014
  store i32 %mul77, i32* %iwy, align 4, !dbg !3011
  call void @llvm.dbg.declare(metadata i32* %iwd, metadata !3015, metadata !909), !dbg !3016
  %102 = load i32, i32* %i, align 4, !dbg !3017
  %103 = load i32, i32* %slinesized, align 4, !dbg !3018
  %mul78 = mul nsw i32 %102, %103, !dbg !3019
  store i32 %mul78, i32* %iwd, align 4, !dbg !3016
  store i32 0, i32* %j, align 4, !dbg !3020
  br label %for.cond79, !dbg !3022

for.cond79:                                       ; preds = %for.inc141, %for.body75
  %104 = load i32, i32* %j, align 4, !dbg !3023
  %105 = load i32, i32* %w, align 4, !dbg !3026
  %cmp80 = icmp slt i32 %104, %105, !dbg !3027
  br i1 %cmp80, label %for.body82, label %for.end143, !dbg !3028

for.body82:                                       ; preds = %for.cond79
  call void @llvm.dbg.declare(metadata i32* %x83, metadata !3029, metadata !909), !dbg !3031
  %106 = load i32, i32* %iwx, align 4, !dbg !3032
  %107 = load i32, i32* %j, align 4, !dbg !3033
  %add = add nsw i32 %106, %107, !dbg !3034
  %idxprom84 = sext i32 %add to i64, !dbg !3035
  %108 = load i16*, i16** %spx, align 8, !dbg !3035
  %arrayidx85 = getelementptr inbounds i16, i16* %108, i64 %idxprom84, !dbg !3035
  %109 = load i16, i16* %arrayidx85, align 2, !dbg !3035
  %conv86 = zext i16 %109 to i32, !dbg !3036
  %110 = load i32, i32* %max, align 4, !dbg !3037
  %cmp87 = icmp sgt i32 %conv86, %110, !dbg !3038
  br i1 %cmp87, label %cond.true89, label %cond.false90, !dbg !3036

cond.true89:                                      ; preds = %for.body82
  %111 = load i32, i32* %max, align 4, !dbg !3039
  br label %cond.end95, !dbg !3041

cond.false90:                                     ; preds = %for.body82
  %112 = load i32, i32* %iwx, align 4, !dbg !3042
  %113 = load i32, i32* %j, align 4, !dbg !3044
  %add91 = add nsw i32 %112, %113, !dbg !3045
  %idxprom92 = sext i32 %add91 to i64, !dbg !3046
  %114 = load i16*, i16** %spx, align 8, !dbg !3046
  %arrayidx93 = getelementptr inbounds i16, i16* %114, i64 %idxprom92, !dbg !3046
  %115 = load i16, i16* %arrayidx93, align 2, !dbg !3046
  %conv94 = zext i16 %115 to i32, !dbg !3047
  br label %cond.end95, !dbg !3048

cond.end95:                                       ; preds = %cond.false90, %cond.true89
  %cond96 = phi i32 [ %111, %cond.true89 ], [ %conv94, %cond.false90 ], !dbg !3049
  store i32 %cond96, i32* %x83, align 4, !dbg !3051
  call void @llvm.dbg.declare(metadata i32* %y97, metadata !3052, metadata !909), !dbg !3053
  %116 = load i32, i32* %iwy, align 4, !dbg !3054
  %117 = load i32, i32* %j, align 4, !dbg !3055
  %add98 = add nsw i32 %116, %117, !dbg !3056
  %idxprom99 = sext i32 %add98 to i64, !dbg !3057
  %118 = load i16*, i16** %spy, align 8, !dbg !3057
  %arrayidx100 = getelementptr inbounds i16, i16* %118, i64 %idxprom99, !dbg !3057
  %119 = load i16, i16* %arrayidx100, align 2, !dbg !3057
  %conv101 = zext i16 %119 to i32, !dbg !3058
  %120 = load i32, i32* %max, align 4, !dbg !3059
  %cmp102 = icmp sgt i32 %conv101, %120, !dbg !3060
  br i1 %cmp102, label %cond.true104, label %cond.false105, !dbg !3058

cond.true104:                                     ; preds = %cond.end95
  %121 = load i32, i32* %max, align 4, !dbg !3061
  br label %cond.end110, !dbg !3062

cond.false105:                                    ; preds = %cond.end95
  %122 = load i32, i32* %iwy, align 4, !dbg !3063
  %123 = load i32, i32* %j, align 4, !dbg !3064
  %add106 = add nsw i32 %122, %123, !dbg !3065
  %idxprom107 = sext i32 %add106 to i64, !dbg !3066
  %124 = load i16*, i16** %spy, align 8, !dbg !3066
  %arrayidx108 = getelementptr inbounds i16, i16* %124, i64 %idxprom107, !dbg !3066
  %125 = load i16, i16* %arrayidx108, align 2, !dbg !3066
  %conv109 = zext i16 %125 to i32, !dbg !3067
  br label %cond.end110, !dbg !3068

cond.end110:                                      ; preds = %cond.false105, %cond.true104
  %cond111 = phi i32 [ %121, %cond.true104 ], [ %conv109, %cond.false105 ], !dbg !3069
  store i32 %cond111, i32* %y97, align 4, !dbg !3070
  call void @llvm.dbg.declare(metadata i32* %z, metadata !3071, metadata !909), !dbg !3072
  %126 = load i32, i32* %iwd, align 4, !dbg !3073
  %127 = load i32, i32* %j, align 4, !dbg !3074
  %add112 = add nsw i32 %126, %127, !dbg !3075
  %idxprom113 = sext i32 %add112 to i64, !dbg !3076
  %128 = load i16*, i16** %spd, align 8, !dbg !3076
  %arrayidx114 = getelementptr inbounds i16, i16* %128, i64 %idxprom113, !dbg !3076
  %129 = load i16, i16* %arrayidx114, align 2, !dbg !3076
  %conv115 = zext i16 %129 to i32, !dbg !3076
  store i32 %conv115, i32* %z, align 4, !dbg !3072
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !3077, metadata !909), !dbg !3078
  %130 = load i32, i32* %y97, align 4, !dbg !3079
  %131 = load i32, i32* %dlinesize, align 4, !dbg !3080
  %mul116 = mul nsw i32 %130, %131, !dbg !3081
  %132 = load i32, i32* %x83, align 4, !dbg !3082
  %add117 = add nsw i32 %mul116, %132, !dbg !3083
  store i32 %add117, i32* %pos, align 4, !dbg !3078
  %133 = load i32, i32* %z, align 4, !dbg !3084
  %134 = load i32, i32* %tmin, align 4, !dbg !3086
  %cmp118 = icmp slt i32 %133, %134, !dbg !3087
  br i1 %cmp118, label %if.then123, label %lor.lhs.false120, !dbg !3088

lor.lhs.false120:                                 ; preds = %cond.end110
  %135 = load i32, i32* %z, align 4, !dbg !3089
  %136 = load i32, i32* %tmax, align 4, !dbg !3091
  %cmp121 = icmp sgt i32 %135, %136, !dbg !3092
  br i1 %cmp121, label %if.then123, label %if.end, !dbg !3093

if.then123:                                       ; preds = %lor.lhs.false120, %cond.end110
  br label %for.inc141, !dbg !3094

if.end:                                           ; preds = %lor.lhs.false120
  %137 = load i32, i32* %pos, align 4, !dbg !3095
  %idxprom124 = sext i32 %137 to i64, !dbg !3096
  %138 = load i16*, i16** %dpd, align 8, !dbg !3096
  %arrayidx125 = getelementptr inbounds i16, i16* %138, i64 %idxprom124, !dbg !3096
  %139 = load i16, i16* %arrayidx125, align 2, !dbg !3096
  %conv126 = zext i16 %139 to i32, !dbg !3096
  %140 = load i32, i32* %intensity, align 4, !dbg !3097
  %add127 = add nsw i32 %conv126, %140, !dbg !3098
  %141 = load i32, i32* %max, align 4, !dbg !3099
  %cmp128 = icmp sgt i32 %add127, %141, !dbg !3100
  br i1 %cmp128, label %cond.true130, label %cond.false131, !dbg !3101

cond.true130:                                     ; preds = %if.end
  %142 = load i32, i32* %max, align 4, !dbg !3102
  br label %cond.end136, !dbg !3103

cond.false131:                                    ; preds = %if.end
  %143 = load i32, i32* %pos, align 4, !dbg !3104
  %idxprom132 = sext i32 %143 to i64, !dbg !3105
  %144 = load i16*, i16** %dpd, align 8, !dbg !3105
  %arrayidx133 = getelementptr inbounds i16, i16* %144, i64 %idxprom132, !dbg !3105
  %145 = load i16, i16* %arrayidx133, align 2, !dbg !3105
  %conv134 = zext i16 %145 to i32, !dbg !3105
  %146 = load i32, i32* %intensity, align 4, !dbg !3106
  %add135 = add nsw i32 %conv134, %146, !dbg !3107
  br label %cond.end136, !dbg !3108

cond.end136:                                      ; preds = %cond.false131, %cond.true130
  %cond137 = phi i32 [ %142, %cond.true130 ], [ %add135, %cond.false131 ], !dbg !3109
  %conv138 = trunc i32 %cond137 to i16, !dbg !3110
  %147 = load i32, i32* %pos, align 4, !dbg !3111
  %idxprom139 = sext i32 %147 to i64, !dbg !3112
  %148 = load i16*, i16** %dpd, align 8, !dbg !3112
  %arrayidx140 = getelementptr inbounds i16, i16* %148, i64 %idxprom139, !dbg !3112
  store i16 %conv138, i16* %arrayidx140, align 2, !dbg !3113
  br label %for.inc141, !dbg !3114

for.inc141:                                       ; preds = %cond.end136, %if.then123
  %149 = load i32, i32* %j, align 4, !dbg !3115
  %inc142 = add nsw i32 %149, 1, !dbg !3115
  store i32 %inc142, i32* %j, align 4, !dbg !3115
  br label %for.cond79, !dbg !3117, !llvm.loop !3118

for.end143:                                       ; preds = %for.cond79
  br label %for.inc144, !dbg !3120

for.inc144:                                       ; preds = %for.end143
  %150 = load i32, i32* %i, align 4, !dbg !3121
  %inc145 = add nsw i32 %150, 1, !dbg !3121
  store i32 %inc145, i32* %i, align 4, !dbg !3121
  br label %for.cond72, !dbg !3123, !llvm.loop !3124

for.end146:                                       ; preds = %for.cond72
  br label %if.end272, !dbg !3126

if.else:                                          ; preds = %sw.bb
  store i32 0, i32* %i, align 4, !dbg !3127
  br label %for.cond147, !dbg !3130

for.cond147:                                      ; preds = %for.inc269, %if.else
  %151 = load i32, i32* %i, align 4, !dbg !3131
  %152 = load i32, i32* %h, align 4, !dbg !3134
  %cmp148 = icmp slt i32 %151, %152, !dbg !3135
  br i1 %cmp148, label %for.body150, label %for.end271, !dbg !3136

for.body150:                                      ; preds = %for.cond147
  call void @llvm.dbg.declare(metadata i32* %iwx151, metadata !3137, metadata !909), !dbg !3139
  %153 = load i32, i32* %i, align 4, !dbg !3140
  %154 = load i32, i32* %slinesizex, align 4, !dbg !3141
  %mul152 = mul nsw i32 %153, %154, !dbg !3142
  store i32 %mul152, i32* %iwx151, align 4, !dbg !3139
  call void @llvm.dbg.declare(metadata i32* %iwy153, metadata !3143, metadata !909), !dbg !3144
  %155 = load i32, i32* %i, align 4, !dbg !3145
  %156 = load i32, i32* %slinesizey, align 4, !dbg !3146
  %mul154 = mul nsw i32 %155, %156, !dbg !3147
  store i32 %mul154, i32* %iwy153, align 4, !dbg !3144
  call void @llvm.dbg.declare(metadata i32* %iwd155, metadata !3148, metadata !909), !dbg !3149
  %157 = load i32, i32* %i, align 4, !dbg !3150
  %158 = load i32, i32* %slinesized, align 4, !dbg !3151
  %mul156 = mul nsw i32 %157, %158, !dbg !3152
  store i32 %mul156, i32* %iwd155, align 4, !dbg !3149
  store i32 0, i32* %j, align 4, !dbg !3153
  br label %for.cond157, !dbg !3155

for.cond157:                                      ; preds = %for.inc266, %for.body150
  %159 = load i32, i32* %j, align 4, !dbg !3156
  %160 = load i32, i32* %w, align 4, !dbg !3159
  %cmp158 = icmp slt i32 %159, %160, !dbg !3160
  br i1 %cmp158, label %for.body160, label %for.end268, !dbg !3161

for.body160:                                      ; preds = %for.cond157
  call void @llvm.dbg.declare(metadata i32* %x161, metadata !3162, metadata !909), !dbg !3164
  %161 = load i32, i32* %iwx151, align 4, !dbg !3165
  %162 = load i32, i32* %j, align 4, !dbg !3166
  %add162 = add nsw i32 %161, %162, !dbg !3167
  %idxprom163 = sext i32 %add162 to i64, !dbg !3168
  %163 = load i16*, i16** %spx, align 8, !dbg !3168
  %arrayidx164 = getelementptr inbounds i16, i16* %163, i64 %idxprom163, !dbg !3168
  %164 = load i16, i16* %arrayidx164, align 2, !dbg !3168
  %conv165 = zext i16 %164 to i32, !dbg !3169
  %165 = load i32, i32* %max, align 4, !dbg !3170
  %cmp166 = icmp sgt i32 %conv165, %165, !dbg !3171
  br i1 %cmp166, label %cond.true168, label %cond.false169, !dbg !3169

cond.true168:                                     ; preds = %for.body160
  %166 = load i32, i32* %max, align 4, !dbg !3172
  br label %cond.end174, !dbg !3174

cond.false169:                                    ; preds = %for.body160
  %167 = load i32, i32* %iwx151, align 4, !dbg !3175
  %168 = load i32, i32* %j, align 4, !dbg !3177
  %add170 = add nsw i32 %167, %168, !dbg !3178
  %idxprom171 = sext i32 %add170 to i64, !dbg !3179
  %169 = load i16*, i16** %spx, align 8, !dbg !3179
  %arrayidx172 = getelementptr inbounds i16, i16* %169, i64 %idxprom171, !dbg !3179
  %170 = load i16, i16* %arrayidx172, align 2, !dbg !3179
  %conv173 = zext i16 %170 to i32, !dbg !3180
  br label %cond.end174, !dbg !3181

cond.end174:                                      ; preds = %cond.false169, %cond.true168
  %cond175 = phi i32 [ %166, %cond.true168 ], [ %conv173, %cond.false169 ], !dbg !3182
  store i32 %cond175, i32* %x161, align 4, !dbg !3184
  call void @llvm.dbg.declare(metadata i32* %y176, metadata !3185, metadata !909), !dbg !3186
  %171 = load i32, i32* %iwy153, align 4, !dbg !3187
  %172 = load i32, i32* %j, align 4, !dbg !3188
  %add177 = add nsw i32 %171, %172, !dbg !3189
  %idxprom178 = sext i32 %add177 to i64, !dbg !3190
  %173 = load i16*, i16** %spy, align 8, !dbg !3190
  %arrayidx179 = getelementptr inbounds i16, i16* %173, i64 %idxprom178, !dbg !3190
  %174 = load i16, i16* %arrayidx179, align 2, !dbg !3190
  %conv180 = zext i16 %174 to i32, !dbg !3191
  %175 = load i32, i32* %max, align 4, !dbg !3192
  %cmp181 = icmp sgt i32 %conv180, %175, !dbg !3193
  br i1 %cmp181, label %cond.true183, label %cond.false184, !dbg !3191

cond.true183:                                     ; preds = %cond.end174
  %176 = load i32, i32* %max, align 4, !dbg !3194
  br label %cond.end189, !dbg !3195

cond.false184:                                    ; preds = %cond.end174
  %177 = load i32, i32* %iwy153, align 4, !dbg !3196
  %178 = load i32, i32* %j, align 4, !dbg !3197
  %add185 = add nsw i32 %177, %178, !dbg !3198
  %idxprom186 = sext i32 %add185 to i64, !dbg !3199
  %179 = load i16*, i16** %spy, align 8, !dbg !3199
  %arrayidx187 = getelementptr inbounds i16, i16* %179, i64 %idxprom186, !dbg !3199
  %180 = load i16, i16* %arrayidx187, align 2, !dbg !3199
  %conv188 = zext i16 %180 to i32, !dbg !3200
  br label %cond.end189, !dbg !3201

cond.end189:                                      ; preds = %cond.false184, %cond.true183
  %cond190 = phi i32 [ %176, %cond.true183 ], [ %conv188, %cond.false184 ], !dbg !3202
  store i32 %cond190, i32* %y176, align 4, !dbg !3203
  call void @llvm.dbg.declare(metadata i32* %z191, metadata !3204, metadata !909), !dbg !3205
  %181 = load i32, i32* %iwd155, align 4, !dbg !3206
  %182 = load i32, i32* %j, align 4, !dbg !3207
  %add192 = add nsw i32 %181, %182, !dbg !3208
  %idxprom193 = sext i32 %add192 to i64, !dbg !3209
  %183 = load i16*, i16** %spd, align 8, !dbg !3209
  %arrayidx194 = getelementptr inbounds i16, i16* %183, i64 %idxprom193, !dbg !3209
  %184 = load i16, i16* %arrayidx194, align 2, !dbg !3209
  %conv195 = zext i16 %184 to i32, !dbg !3209
  store i32 %conv195, i32* %z191, align 4, !dbg !3205
  call void @llvm.dbg.declare(metadata i32* %pos196, metadata !3210, metadata !909), !dbg !3211
  %185 = load i32, i32* %y176, align 4, !dbg !3212
  %186 = load i32, i32* %dlinesize, align 4, !dbg !3213
  %mul197 = mul nsw i32 %185, %186, !dbg !3214
  %187 = load i32, i32* %x161, align 4, !dbg !3215
  %add198 = add nsw i32 %mul197, %187, !dbg !3216
  store i32 %add198, i32* %pos196, align 4, !dbg !3211
  %188 = load i32, i32* %z191, align 4, !dbg !3217
  %189 = load i32, i32* %tmin, align 4, !dbg !3219
  %cmp199 = icmp slt i32 %188, %189, !dbg !3220
  br i1 %cmp199, label %if.then204, label %lor.lhs.false201, !dbg !3221

lor.lhs.false201:                                 ; preds = %cond.end189
  %190 = load i32, i32* %z191, align 4, !dbg !3222
  %191 = load i32, i32* %tmax, align 4, !dbg !3224
  %cmp202 = icmp sgt i32 %190, %191, !dbg !3225
  br i1 %cmp202, label %if.then204, label %if.end205, !dbg !3226

if.then204:                                       ; preds = %lor.lhs.false201, %cond.end189
  br label %for.inc266, !dbg !3227

if.end205:                                        ; preds = %lor.lhs.false201
  %192 = load i32, i32* %pos196, align 4, !dbg !3228
  %idxprom206 = sext i32 %192 to i64, !dbg !3229
  %193 = load i16**, i16*** %dst, align 8, !dbg !3229
  %arrayidx207 = getelementptr inbounds i16*, i16** %193, i64 0, !dbg !3229
  %194 = load i16*, i16** %arrayidx207, align 8, !dbg !3229
  %arrayidx208 = getelementptr inbounds i16, i16* %194, i64 %idxprom206, !dbg !3229
  %195 = load i16, i16* %arrayidx208, align 2, !dbg !3229
  %conv209 = zext i16 %195 to i32, !dbg !3229
  %196 = load i32, i32* %intensity, align 4, !dbg !3230
  %add210 = add nsw i32 %conv209, %196, !dbg !3231
  %197 = load i32, i32* %max, align 4, !dbg !3232
  %cmp211 = icmp sgt i32 %add210, %197, !dbg !3233
  br i1 %cmp211, label %cond.true213, label %cond.false214, !dbg !3234

cond.true213:                                     ; preds = %if.end205
  %198 = load i32, i32* %max, align 4, !dbg !3235
  br label %cond.end220, !dbg !3236

cond.false214:                                    ; preds = %if.end205
  %199 = load i32, i32* %pos196, align 4, !dbg !3237
  %idxprom215 = sext i32 %199 to i64, !dbg !3238
  %200 = load i16**, i16*** %dst, align 8, !dbg !3238
  %arrayidx216 = getelementptr inbounds i16*, i16** %200, i64 0, !dbg !3238
  %201 = load i16*, i16** %arrayidx216, align 8, !dbg !3238
  %arrayidx217 = getelementptr inbounds i16, i16* %201, i64 %idxprom215, !dbg !3238
  %202 = load i16, i16* %arrayidx217, align 2, !dbg !3238
  %conv218 = zext i16 %202 to i32, !dbg !3238
  %203 = load i32, i32* %intensity, align 4, !dbg !3239
  %add219 = add nsw i32 %conv218, %203, !dbg !3240
  br label %cond.end220, !dbg !3241

cond.end220:                                      ; preds = %cond.false214, %cond.true213
  %cond221 = phi i32 [ %198, %cond.true213 ], [ %add219, %cond.false214 ], !dbg !3242
  %conv222 = trunc i32 %cond221 to i16, !dbg !3243
  %204 = load i32, i32* %pos196, align 4, !dbg !3244
  %idxprom223 = sext i32 %204 to i64, !dbg !3245
  %205 = load i16**, i16*** %dst, align 8, !dbg !3245
  %arrayidx224 = getelementptr inbounds i16*, i16** %205, i64 0, !dbg !3245
  %206 = load i16*, i16** %arrayidx224, align 8, !dbg !3245
  %arrayidx225 = getelementptr inbounds i16, i16* %206, i64 %idxprom223, !dbg !3245
  store i16 %conv222, i16* %arrayidx225, align 2, !dbg !3246
  %207 = load i32, i32* %pos196, align 4, !dbg !3247
  %idxprom226 = sext i32 %207 to i64, !dbg !3248
  %208 = load i16**, i16*** %dst, align 8, !dbg !3248
  %arrayidx227 = getelementptr inbounds i16*, i16** %208, i64 1, !dbg !3248
  %209 = load i16*, i16** %arrayidx227, align 8, !dbg !3248
  %arrayidx228 = getelementptr inbounds i16, i16* %209, i64 %idxprom226, !dbg !3248
  %210 = load i16, i16* %arrayidx228, align 2, !dbg !3248
  %conv229 = zext i16 %210 to i32, !dbg !3248
  %211 = load i32, i32* %intensity, align 4, !dbg !3249
  %add230 = add nsw i32 %conv229, %211, !dbg !3250
  %212 = load i32, i32* %max, align 4, !dbg !3251
  %cmp231 = icmp sgt i32 %add230, %212, !dbg !3252
  br i1 %cmp231, label %cond.true233, label %cond.false234, !dbg !3253

cond.true233:                                     ; preds = %cond.end220
  %213 = load i32, i32* %max, align 4, !dbg !3254
  br label %cond.end240, !dbg !3255

cond.false234:                                    ; preds = %cond.end220
  %214 = load i32, i32* %pos196, align 4, !dbg !3256
  %idxprom235 = sext i32 %214 to i64, !dbg !3257
  %215 = load i16**, i16*** %dst, align 8, !dbg !3257
  %arrayidx236 = getelementptr inbounds i16*, i16** %215, i64 1, !dbg !3257
  %216 = load i16*, i16** %arrayidx236, align 8, !dbg !3257
  %arrayidx237 = getelementptr inbounds i16, i16* %216, i64 %idxprom235, !dbg !3257
  %217 = load i16, i16* %arrayidx237, align 2, !dbg !3257
  %conv238 = zext i16 %217 to i32, !dbg !3257
  %218 = load i32, i32* %intensity, align 4, !dbg !3258
  %add239 = add nsw i32 %conv238, %218, !dbg !3259
  br label %cond.end240, !dbg !3260

cond.end240:                                      ; preds = %cond.false234, %cond.true233
  %cond241 = phi i32 [ %213, %cond.true233 ], [ %add239, %cond.false234 ], !dbg !3261
  %conv242 = trunc i32 %cond241 to i16, !dbg !3262
  %219 = load i32, i32* %pos196, align 4, !dbg !3263
  %idxprom243 = sext i32 %219 to i64, !dbg !3264
  %220 = load i16**, i16*** %dst, align 8, !dbg !3264
  %arrayidx244 = getelementptr inbounds i16*, i16** %220, i64 1, !dbg !3264
  %221 = load i16*, i16** %arrayidx244, align 8, !dbg !3264
  %arrayidx245 = getelementptr inbounds i16, i16* %221, i64 %idxprom243, !dbg !3264
  store i16 %conv242, i16* %arrayidx245, align 2, !dbg !3265
  %222 = load i32, i32* %pos196, align 4, !dbg !3266
  %idxprom246 = sext i32 %222 to i64, !dbg !3267
  %223 = load i16**, i16*** %dst, align 8, !dbg !3267
  %arrayidx247 = getelementptr inbounds i16*, i16** %223, i64 2, !dbg !3267
  %224 = load i16*, i16** %arrayidx247, align 8, !dbg !3267
  %arrayidx248 = getelementptr inbounds i16, i16* %224, i64 %idxprom246, !dbg !3267
  %225 = load i16, i16* %arrayidx248, align 2, !dbg !3267
  %conv249 = zext i16 %225 to i32, !dbg !3267
  %226 = load i32, i32* %intensity, align 4, !dbg !3268
  %add250 = add nsw i32 %conv249, %226, !dbg !3269
  %227 = load i32, i32* %max, align 4, !dbg !3270
  %cmp251 = icmp sgt i32 %add250, %227, !dbg !3271
  br i1 %cmp251, label %cond.true253, label %cond.false254, !dbg !3272

cond.true253:                                     ; preds = %cond.end240
  %228 = load i32, i32* %max, align 4, !dbg !3273
  br label %cond.end260, !dbg !3274

cond.false254:                                    ; preds = %cond.end240
  %229 = load i32, i32* %pos196, align 4, !dbg !3275
  %idxprom255 = sext i32 %229 to i64, !dbg !3276
  %230 = load i16**, i16*** %dst, align 8, !dbg !3276
  %arrayidx256 = getelementptr inbounds i16*, i16** %230, i64 2, !dbg !3276
  %231 = load i16*, i16** %arrayidx256, align 8, !dbg !3276
  %arrayidx257 = getelementptr inbounds i16, i16* %231, i64 %idxprom255, !dbg !3276
  %232 = load i16, i16* %arrayidx257, align 2, !dbg !3276
  %conv258 = zext i16 %232 to i32, !dbg !3276
  %233 = load i32, i32* %intensity, align 4, !dbg !3277
  %add259 = add nsw i32 %conv258, %233, !dbg !3278
  br label %cond.end260, !dbg !3279

cond.end260:                                      ; preds = %cond.false254, %cond.true253
  %cond261 = phi i32 [ %228, %cond.true253 ], [ %add259, %cond.false254 ], !dbg !3280
  %conv262 = trunc i32 %cond261 to i16, !dbg !3281
  %234 = load i32, i32* %pos196, align 4, !dbg !3282
  %idxprom263 = sext i32 %234 to i64, !dbg !3283
  %235 = load i16**, i16*** %dst, align 8, !dbg !3283
  %arrayidx264 = getelementptr inbounds i16*, i16** %235, i64 2, !dbg !3283
  %236 = load i16*, i16** %arrayidx264, align 8, !dbg !3283
  %arrayidx265 = getelementptr inbounds i16, i16* %236, i64 %idxprom263, !dbg !3283
  store i16 %conv262, i16* %arrayidx265, align 2, !dbg !3284
  br label %for.inc266, !dbg !3285

for.inc266:                                       ; preds = %cond.end260, %if.then204
  %237 = load i32, i32* %j, align 4, !dbg !3286
  %inc267 = add nsw i32 %237, 1, !dbg !3286
  store i32 %inc267, i32* %j, align 4, !dbg !3286
  br label %for.cond157, !dbg !3288, !llvm.loop !3289

for.end268:                                       ; preds = %for.cond157
  br label %for.inc269, !dbg !3291

for.inc269:                                       ; preds = %for.end268
  %238 = load i32, i32* %i, align 4, !dbg !3292
  %inc270 = add nsw i32 %238, 1, !dbg !3292
  store i32 %inc270, i32* %i, align 4, !dbg !3292
  br label %for.cond147, !dbg !3294, !llvm.loop !3295

for.end271:                                       ; preds = %for.cond147
  br label %if.end272

if.end272:                                        ; preds = %for.end271, %for.end146
  br label %sw.epilog, !dbg !3297

sw.bb273:                                         ; preds = %for.end69
  %239 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !3298
  %is_yuv274 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %239, i32 0, i32 12, !dbg !3300
  %240 = load i32, i32* %is_yuv274, align 8, !dbg !3300
  %tobool275 = icmp ne i32 %240, 0, !dbg !3298
  br i1 %tobool275, label %if.then276, label %if.else375, !dbg !3301

if.then276:                                       ; preds = %sw.bb273
  store i32 0, i32* %i, align 4, !dbg !3302
  br label %for.cond277, !dbg !3305

for.cond277:                                      ; preds = %for.inc372, %if.then276
  %241 = load i32, i32* %i, align 4, !dbg !3306
  %242 = load i32, i32* %h, align 4, !dbg !3309
  %cmp278 = icmp slt i32 %241, %242, !dbg !3310
  br i1 %cmp278, label %for.body280, label %for.end374, !dbg !3311

for.body280:                                      ; preds = %for.cond277
  call void @llvm.dbg.declare(metadata i32* %iw1, metadata !3312, metadata !909), !dbg !3314
  %243 = load i32, i32* %i, align 4, !dbg !3315
  %244 = load i32, i32* %slinesizex, align 4, !dbg !3316
  %mul281 = mul nsw i32 %243, %244, !dbg !3317
  store i32 %mul281, i32* %iw1, align 4, !dbg !3314
  call void @llvm.dbg.declare(metadata i32* %iw2, metadata !3318, metadata !909), !dbg !3319
  %245 = load i32, i32* %i, align 4, !dbg !3320
  %246 = load i32, i32* %slinesizey, align 4, !dbg !3321
  %mul282 = mul nsw i32 %245, %246, !dbg !3322
  store i32 %mul282, i32* %iw2, align 4, !dbg !3319
  call void @llvm.dbg.declare(metadata i32* %iwd283, metadata !3323, metadata !909), !dbg !3324
  %247 = load i32, i32* %i, align 4, !dbg !3325
  %248 = load i32, i32* %slinesized, align 4, !dbg !3326
  %mul284 = mul nsw i32 %247, %248, !dbg !3327
  store i32 %mul284, i32* %iwd283, align 4, !dbg !3324
  store i32 0, i32* %j, align 4, !dbg !3328
  br label %for.cond285, !dbg !3330

for.cond285:                                      ; preds = %for.inc369, %for.body280
  %249 = load i32, i32* %j, align 4, !dbg !3331
  %250 = load i32, i32* %w, align 4, !dbg !3334
  %cmp286 = icmp slt i32 %249, %250, !dbg !3335
  br i1 %cmp286, label %for.body288, label %for.end371, !dbg !3336

for.body288:                                      ; preds = %for.cond285
  call void @llvm.dbg.declare(metadata i32* %x289, metadata !3337, metadata !909), !dbg !3339
  %251 = load i32, i32* %iw1, align 4, !dbg !3340
  %252 = load i32, i32* %j, align 4, !dbg !3341
  %add290 = add nsw i32 %251, %252, !dbg !3342
  %idxprom291 = sext i32 %add290 to i64, !dbg !3343
  %253 = load i16*, i16** %spx, align 8, !dbg !3343
  %arrayidx292 = getelementptr inbounds i16, i16* %253, i64 %idxprom291, !dbg !3343
  %254 = load i16, i16* %arrayidx292, align 2, !dbg !3343
  %conv293 = zext i16 %254 to i32, !dbg !3344
  %255 = load i32, i32* %max, align 4, !dbg !3345
  %cmp294 = icmp sgt i32 %conv293, %255, !dbg !3346
  br i1 %cmp294, label %cond.true296, label %cond.false297, !dbg !3344

cond.true296:                                     ; preds = %for.body288
  %256 = load i32, i32* %max, align 4, !dbg !3347
  br label %cond.end302, !dbg !3349

cond.false297:                                    ; preds = %for.body288
  %257 = load i32, i32* %iw1, align 4, !dbg !3350
  %258 = load i32, i32* %j, align 4, !dbg !3352
  %add298 = add nsw i32 %257, %258, !dbg !3353
  %idxprom299 = sext i32 %add298 to i64, !dbg !3354
  %259 = load i16*, i16** %spx, align 8, !dbg !3354
  %arrayidx300 = getelementptr inbounds i16, i16* %259, i64 %idxprom299, !dbg !3354
  %260 = load i16, i16* %arrayidx300, align 2, !dbg !3354
  %conv301 = zext i16 %260 to i32, !dbg !3355
  br label %cond.end302, !dbg !3356

cond.end302:                                      ; preds = %cond.false297, %cond.true296
  %cond303 = phi i32 [ %256, %cond.true296 ], [ %conv301, %cond.false297 ], !dbg !3357
  store i32 %cond303, i32* %x289, align 4, !dbg !3359
  call void @llvm.dbg.declare(metadata i32* %y304, metadata !3360, metadata !909), !dbg !3361
  %261 = load i32, i32* %iw2, align 4, !dbg !3362
  %262 = load i32, i32* %j, align 4, !dbg !3363
  %add305 = add nsw i32 %261, %262, !dbg !3364
  %idxprom306 = sext i32 %add305 to i64, !dbg !3365
  %263 = load i16*, i16** %spy, align 8, !dbg !3365
  %arrayidx307 = getelementptr inbounds i16, i16* %263, i64 %idxprom306, !dbg !3365
  %264 = load i16, i16* %arrayidx307, align 2, !dbg !3365
  %conv308 = zext i16 %264 to i32, !dbg !3366
  %265 = load i32, i32* %max, align 4, !dbg !3367
  %cmp309 = icmp sgt i32 %conv308, %265, !dbg !3368
  br i1 %cmp309, label %cond.true311, label %cond.false312, !dbg !3366

cond.true311:                                     ; preds = %cond.end302
  %266 = load i32, i32* %max, align 4, !dbg !3369
  br label %cond.end317, !dbg !3370

cond.false312:                                    ; preds = %cond.end302
  %267 = load i32, i32* %iw2, align 4, !dbg !3371
  %268 = load i32, i32* %j, align 4, !dbg !3372
  %add313 = add nsw i32 %267, %268, !dbg !3373
  %idxprom314 = sext i32 %add313 to i64, !dbg !3374
  %269 = load i16*, i16** %spy, align 8, !dbg !3374
  %arrayidx315 = getelementptr inbounds i16, i16* %269, i64 %idxprom314, !dbg !3374
  %270 = load i16, i16* %arrayidx315, align 2, !dbg !3374
  %conv316 = zext i16 %270 to i32, !dbg !3375
  br label %cond.end317, !dbg !3376

cond.end317:                                      ; preds = %cond.false312, %cond.true311
  %cond318 = phi i32 [ %266, %cond.true311 ], [ %conv316, %cond.false312 ], !dbg !3377
  store i32 %cond318, i32* %y304, align 4, !dbg !3378
  call void @llvm.dbg.declare(metadata i32* %z319, metadata !3379, metadata !909), !dbg !3380
  %271 = load i32, i32* %iwd283, align 4, !dbg !3381
  %272 = load i32, i32* %j, align 4, !dbg !3382
  %add320 = add nsw i32 %271, %272, !dbg !3383
  %idxprom321 = sext i32 %add320 to i64, !dbg !3384
  %273 = load i16*, i16** %spd, align 8, !dbg !3384
  %arrayidx322 = getelementptr inbounds i16, i16* %273, i64 %idxprom321, !dbg !3384
  %274 = load i16, i16* %arrayidx322, align 2, !dbg !3384
  %conv323 = zext i16 %274 to i32, !dbg !3384
  store i32 %conv323, i32* %z319, align 4, !dbg !3380
  call void @llvm.dbg.declare(metadata i32* %pos324, metadata !3385, metadata !909), !dbg !3386
  %275 = load i32, i32* %y304, align 4, !dbg !3387
  %276 = load i32, i32* %dlinesize, align 4, !dbg !3388
  %mul325 = mul nsw i32 %275, %276, !dbg !3389
  %277 = load i32, i32* %x289, align 4, !dbg !3390
  %add326 = add nsw i32 %mul325, %277, !dbg !3391
  store i32 %add326, i32* %pos324, align 4, !dbg !3386
  %278 = load i32, i32* %z319, align 4, !dbg !3392
  %279 = load i32, i32* %tmin, align 4, !dbg !3394
  %cmp327 = icmp slt i32 %278, %279, !dbg !3395
  br i1 %cmp327, label %if.then332, label %lor.lhs.false329, !dbg !3396

lor.lhs.false329:                                 ; preds = %cond.end317
  %280 = load i32, i32* %z319, align 4, !dbg !3397
  %281 = load i32, i32* %tmax, align 4, !dbg !3399
  %cmp330 = icmp sgt i32 %280, %281, !dbg !3400
  br i1 %cmp330, label %if.then332, label %if.end333, !dbg !3401

if.then332:                                       ; preds = %lor.lhs.false329, %cond.end317
  br label %for.inc369, !dbg !3402

if.end333:                                        ; preds = %lor.lhs.false329
  %282 = load i32, i32* %pos324, align 4, !dbg !3403
  %idxprom334 = sext i32 %282 to i64, !dbg !3405
  %283 = load i16*, i16** %dpd, align 8, !dbg !3405
  %arrayidx335 = getelementptr inbounds i16, i16* %283, i64 %idxprom334, !dbg !3405
  %284 = load i16, i16* %arrayidx335, align 2, !dbg !3405
  %tobool336 = icmp ne i16 %284, 0, !dbg !3405
  br i1 %tobool336, label %if.end362, label %if.then337, !dbg !3406

if.then337:                                       ; preds = %if.end333
  %285 = load i32, i32* %mid, align 4, !dbg !3407
  %286 = load i32, i32* %x289, align 4, !dbg !3408
  %sub338 = sub nsw i32 %285, %286, !dbg !3409
  %cmp339 = icmp sge i32 %sub338, 0, !dbg !3410
  br i1 %cmp339, label %cond.true341, label %cond.false343, !dbg !3411

cond.true341:                                     ; preds = %if.then337
  %287 = load i32, i32* %mid, align 4, !dbg !3412
  %288 = load i32, i32* %x289, align 4, !dbg !3414
  %sub342 = sub nsw i32 %287, %288, !dbg !3415
  br label %cond.end346, !dbg !3416

cond.false343:                                    ; preds = %if.then337
  %289 = load i32, i32* %mid, align 4, !dbg !3417
  %290 = load i32, i32* %x289, align 4, !dbg !3419
  %sub344 = sub nsw i32 %289, %290, !dbg !3420
  %sub345 = sub nsw i32 0, %sub344, !dbg !3421
  br label %cond.end346, !dbg !3422

cond.end346:                                      ; preds = %cond.false343, %cond.true341
  %cond347 = phi i32 [ %sub342, %cond.true341 ], [ %sub345, %cond.false343 ], !dbg !3423
  %291 = load i32, i32* %mid, align 4, !dbg !3425
  %292 = load i32, i32* %y304, align 4, !dbg !3426
  %sub348 = sub nsw i32 %291, %292, !dbg !3427
  %cmp349 = icmp sge i32 %sub348, 0, !dbg !3428
  br i1 %cmp349, label %cond.true351, label %cond.false353, !dbg !3429

cond.true351:                                     ; preds = %cond.end346
  %293 = load i32, i32* %mid, align 4, !dbg !3430
  %294 = load i32, i32* %y304, align 4, !dbg !3432
  %sub352 = sub nsw i32 %293, %294, !dbg !3433
  br label %cond.end356, !dbg !3434

cond.false353:                                    ; preds = %cond.end346
  %295 = load i32, i32* %mid, align 4, !dbg !3435
  %296 = load i32, i32* %y304, align 4, !dbg !3437
  %sub354 = sub nsw i32 %295, %296, !dbg !3438
  %sub355 = sub nsw i32 0, %sub354, !dbg !3439
  br label %cond.end356, !dbg !3440

cond.end356:                                      ; preds = %cond.false353, %cond.true351
  %cond357 = phi i32 [ %sub352, %cond.true351 ], [ %sub355, %cond.false353 ], !dbg !3441
  %add358 = add nsw i32 %cond347, %cond357, !dbg !3443
  %conv359 = trunc i32 %add358 to i16, !dbg !3444
  %297 = load i32, i32* %pos324, align 4, !dbg !3445
  %idxprom360 = sext i32 %297 to i64, !dbg !3446
  %298 = load i16*, i16** %dpd, align 8, !dbg !3446
  %arrayidx361 = getelementptr inbounds i16, i16* %298, i64 %idxprom360, !dbg !3446
  store i16 %conv359, i16* %arrayidx361, align 2, !dbg !3447
  br label %if.end362, !dbg !3446

if.end362:                                        ; preds = %cond.end356, %if.end333
  %299 = load i32, i32* %x289, align 4, !dbg !3448
  %conv363 = trunc i32 %299 to i16, !dbg !3448
  %300 = load i32, i32* %pos324, align 4, !dbg !3449
  %idxprom364 = sext i32 %300 to i64, !dbg !3450
  %301 = load i16*, i16** %dpx, align 8, !dbg !3450
  %arrayidx365 = getelementptr inbounds i16, i16* %301, i64 %idxprom364, !dbg !3450
  store i16 %conv363, i16* %arrayidx365, align 2, !dbg !3451
  %302 = load i32, i32* %y304, align 4, !dbg !3452
  %conv366 = trunc i32 %302 to i16, !dbg !3452
  %303 = load i32, i32* %pos324, align 4, !dbg !3453
  %idxprom367 = sext i32 %303 to i64, !dbg !3454
  %304 = load i16*, i16** %dpy, align 8, !dbg !3454
  %arrayidx368 = getelementptr inbounds i16, i16* %304, i64 %idxprom367, !dbg !3454
  store i16 %conv366, i16* %arrayidx368, align 2, !dbg !3455
  br label %for.inc369, !dbg !3456

for.inc369:                                       ; preds = %if.end362, %if.then332
  %305 = load i32, i32* %j, align 4, !dbg !3457
  %inc370 = add nsw i32 %305, 1, !dbg !3457
  store i32 %inc370, i32* %j, align 4, !dbg !3457
  br label %for.cond285, !dbg !3459, !llvm.loop !3460

for.end371:                                       ; preds = %for.cond285
  br label %for.inc372, !dbg !3462

for.inc372:                                       ; preds = %for.end371
  %306 = load i32, i32* %i, align 4, !dbg !3463
  %inc373 = add nsw i32 %306, 1, !dbg !3463
  store i32 %inc373, i32* %i, align 4, !dbg !3463
  br label %for.cond277, !dbg !3465, !llvm.loop !3466

for.end374:                                       ; preds = %for.cond277
  br label %if.end463, !dbg !3468

if.else375:                                       ; preds = %sw.bb273
  store i32 0, i32* %i, align 4, !dbg !3469
  br label %for.cond376, !dbg !3472

for.cond376:                                      ; preds = %for.inc460, %if.else375
  %307 = load i32, i32* %i, align 4, !dbg !3473
  %308 = load i32, i32* %h, align 4, !dbg !3476
  %cmp377 = icmp slt i32 %307, %308, !dbg !3477
  br i1 %cmp377, label %for.body379, label %for.end462, !dbg !3478

for.body379:                                      ; preds = %for.cond376
  call void @llvm.dbg.declare(metadata i32* %iw1380, metadata !3479, metadata !909), !dbg !3481
  %309 = load i32, i32* %i, align 4, !dbg !3482
  %310 = load i32, i32* %slinesizex, align 4, !dbg !3483
  %mul381 = mul nsw i32 %309, %310, !dbg !3484
  store i32 %mul381, i32* %iw1380, align 4, !dbg !3481
  call void @llvm.dbg.declare(metadata i32* %iw2382, metadata !3485, metadata !909), !dbg !3486
  %311 = load i32, i32* %i, align 4, !dbg !3487
  %312 = load i32, i32* %slinesizey, align 4, !dbg !3488
  %mul383 = mul nsw i32 %311, %312, !dbg !3489
  store i32 %mul383, i32* %iw2382, align 4, !dbg !3486
  call void @llvm.dbg.declare(metadata i32* %iwd384, metadata !3490, metadata !909), !dbg !3491
  %313 = load i32, i32* %i, align 4, !dbg !3492
  %314 = load i32, i32* %slinesized, align 4, !dbg !3493
  %mul385 = mul nsw i32 %313, %314, !dbg !3494
  store i32 %mul385, i32* %iwd384, align 4, !dbg !3491
  store i32 0, i32* %j, align 4, !dbg !3495
  br label %for.cond386, !dbg !3497

for.cond386:                                      ; preds = %for.inc457, %for.body379
  %315 = load i32, i32* %j, align 4, !dbg !3498
  %316 = load i32, i32* %w, align 4, !dbg !3501
  %cmp387 = icmp slt i32 %315, %316, !dbg !3502
  br i1 %cmp387, label %for.body389, label %for.end459, !dbg !3503

for.body389:                                      ; preds = %for.cond386
  call void @llvm.dbg.declare(metadata i32* %x390, metadata !3504, metadata !909), !dbg !3506
  %317 = load i32, i32* %iw1380, align 4, !dbg !3507
  %318 = load i32, i32* %j, align 4, !dbg !3508
  %add391 = add nsw i32 %317, %318, !dbg !3509
  %idxprom392 = sext i32 %add391 to i64, !dbg !3510
  %319 = load i16*, i16** %spx, align 8, !dbg !3510
  %arrayidx393 = getelementptr inbounds i16, i16* %319, i64 %idxprom392, !dbg !3510
  %320 = load i16, i16* %arrayidx393, align 2, !dbg !3510
  %conv394 = zext i16 %320 to i32, !dbg !3511
  %321 = load i32, i32* %max, align 4, !dbg !3512
  %cmp395 = icmp sgt i32 %conv394, %321, !dbg !3513
  br i1 %cmp395, label %cond.true397, label %cond.false398, !dbg !3511

cond.true397:                                     ; preds = %for.body389
  %322 = load i32, i32* %max, align 4, !dbg !3514
  br label %cond.end403, !dbg !3516

cond.false398:                                    ; preds = %for.body389
  %323 = load i32, i32* %iw1380, align 4, !dbg !3517
  %324 = load i32, i32* %j, align 4, !dbg !3519
  %add399 = add nsw i32 %323, %324, !dbg !3520
  %idxprom400 = sext i32 %add399 to i64, !dbg !3521
  %325 = load i16*, i16** %spx, align 8, !dbg !3521
  %arrayidx401 = getelementptr inbounds i16, i16* %325, i64 %idxprom400, !dbg !3521
  %326 = load i16, i16* %arrayidx401, align 2, !dbg !3521
  %conv402 = zext i16 %326 to i32, !dbg !3522
  br label %cond.end403, !dbg !3523

cond.end403:                                      ; preds = %cond.false398, %cond.true397
  %cond404 = phi i32 [ %322, %cond.true397 ], [ %conv402, %cond.false398 ], !dbg !3524
  store i32 %cond404, i32* %x390, align 4, !dbg !3526
  call void @llvm.dbg.declare(metadata i32* %y405, metadata !3527, metadata !909), !dbg !3528
  %327 = load i32, i32* %iw2382, align 4, !dbg !3529
  %328 = load i32, i32* %j, align 4, !dbg !3530
  %add406 = add nsw i32 %327, %328, !dbg !3531
  %idxprom407 = sext i32 %add406 to i64, !dbg !3532
  %329 = load i16*, i16** %spy, align 8, !dbg !3532
  %arrayidx408 = getelementptr inbounds i16, i16* %329, i64 %idxprom407, !dbg !3532
  %330 = load i16, i16* %arrayidx408, align 2, !dbg !3532
  %conv409 = zext i16 %330 to i32, !dbg !3533
  %331 = load i32, i32* %max, align 4, !dbg !3534
  %cmp410 = icmp sgt i32 %conv409, %331, !dbg !3535
  br i1 %cmp410, label %cond.true412, label %cond.false413, !dbg !3533

cond.true412:                                     ; preds = %cond.end403
  %332 = load i32, i32* %max, align 4, !dbg !3536
  br label %cond.end418, !dbg !3537

cond.false413:                                    ; preds = %cond.end403
  %333 = load i32, i32* %iw2382, align 4, !dbg !3538
  %334 = load i32, i32* %j, align 4, !dbg !3539
  %add414 = add nsw i32 %333, %334, !dbg !3540
  %idxprom415 = sext i32 %add414 to i64, !dbg !3541
  %335 = load i16*, i16** %spy, align 8, !dbg !3541
  %arrayidx416 = getelementptr inbounds i16, i16* %335, i64 %idxprom415, !dbg !3541
  %336 = load i16, i16* %arrayidx416, align 2, !dbg !3541
  %conv417 = zext i16 %336 to i32, !dbg !3542
  br label %cond.end418, !dbg !3543

cond.end418:                                      ; preds = %cond.false413, %cond.true412
  %cond419 = phi i32 [ %332, %cond.true412 ], [ %conv417, %cond.false413 ], !dbg !3544
  store i32 %cond419, i32* %y405, align 4, !dbg !3545
  call void @llvm.dbg.declare(metadata i32* %z420, metadata !3546, metadata !909), !dbg !3547
  %337 = load i32, i32* %iwd384, align 4, !dbg !3548
  %338 = load i32, i32* %j, align 4, !dbg !3549
  %add421 = add nsw i32 %337, %338, !dbg !3550
  %idxprom422 = sext i32 %add421 to i64, !dbg !3551
  %339 = load i16*, i16** %spd, align 8, !dbg !3551
  %arrayidx423 = getelementptr inbounds i16, i16* %339, i64 %idxprom422, !dbg !3551
  %340 = load i16, i16* %arrayidx423, align 2, !dbg !3551
  %conv424 = zext i16 %340 to i32, !dbg !3551
  store i32 %conv424, i32* %z420, align 4, !dbg !3547
  call void @llvm.dbg.declare(metadata i32* %pos425, metadata !3552, metadata !909), !dbg !3553
  %341 = load i32, i32* %y405, align 4, !dbg !3554
  %342 = load i32, i32* %dlinesize, align 4, !dbg !3555
  %mul426 = mul nsw i32 %341, %342, !dbg !3556
  %343 = load i32, i32* %x390, align 4, !dbg !3557
  %add427 = add nsw i32 %mul426, %343, !dbg !3558
  store i32 %add427, i32* %pos425, align 4, !dbg !3553
  %344 = load i32, i32* %z420, align 4, !dbg !3559
  %345 = load i32, i32* %tmin, align 4, !dbg !3561
  %cmp428 = icmp slt i32 %344, %345, !dbg !3562
  br i1 %cmp428, label %if.then433, label %lor.lhs.false430, !dbg !3563

lor.lhs.false430:                                 ; preds = %cond.end418
  %346 = load i32, i32* %z420, align 4, !dbg !3564
  %347 = load i32, i32* %tmax, align 4, !dbg !3566
  %cmp431 = icmp sgt i32 %346, %347, !dbg !3567
  br i1 %cmp431, label %if.then433, label %if.end434, !dbg !3568

if.then433:                                       ; preds = %lor.lhs.false430, %cond.end418
  br label %for.inc457, !dbg !3569

if.end434:                                        ; preds = %lor.lhs.false430
  %348 = load i32, i32* %pos425, align 4, !dbg !3570
  %idxprom435 = sext i32 %348 to i64, !dbg !3572
  %349 = load i16*, i16** %dpd, align 8, !dbg !3572
  %arrayidx436 = getelementptr inbounds i16, i16* %349, i64 %idxprom435, !dbg !3572
  %350 = load i16, i16* %arrayidx436, align 2, !dbg !3572
  %tobool437 = icmp ne i16 %350, 0, !dbg !3572
  br i1 %tobool437, label %if.end450, label %if.then438, !dbg !3573

if.then438:                                       ; preds = %if.end434
  %351 = load i32, i32* %x390, align 4, !dbg !3574
  %352 = load i32, i32* %y405, align 4, !dbg !3575
  %add439 = add nsw i32 %351, %352, !dbg !3576
  %353 = load i32, i32* %max, align 4, !dbg !3577
  %cmp440 = icmp sgt i32 %add439, %353, !dbg !3578
  br i1 %cmp440, label %cond.true442, label %cond.false443, !dbg !3579

cond.true442:                                     ; preds = %if.then438
  %354 = load i32, i32* %max, align 4, !dbg !3580
  br label %cond.end445, !dbg !3582

cond.false443:                                    ; preds = %if.then438
  %355 = load i32, i32* %x390, align 4, !dbg !3583
  %356 = load i32, i32* %y405, align 4, !dbg !3585
  %add444 = add nsw i32 %355, %356, !dbg !3586
  br label %cond.end445, !dbg !3587

cond.end445:                                      ; preds = %cond.false443, %cond.true442
  %cond446 = phi i32 [ %354, %cond.true442 ], [ %add444, %cond.false443 ], !dbg !3588
  %conv447 = trunc i32 %cond446 to i16, !dbg !3590
  %357 = load i32, i32* %pos425, align 4, !dbg !3591
  %idxprom448 = sext i32 %357 to i64, !dbg !3592
  %358 = load i16*, i16** %dpd, align 8, !dbg !3592
  %arrayidx449 = getelementptr inbounds i16, i16* %358, i64 %idxprom448, !dbg !3592
  store i16 %conv447, i16* %arrayidx449, align 2, !dbg !3593
  br label %if.end450, !dbg !3592

if.end450:                                        ; preds = %cond.end445, %if.end434
  %359 = load i32, i32* %x390, align 4, !dbg !3594
  %conv451 = trunc i32 %359 to i16, !dbg !3594
  %360 = load i32, i32* %pos425, align 4, !dbg !3595
  %idxprom452 = sext i32 %360 to i64, !dbg !3596
  %361 = load i16*, i16** %dpx, align 8, !dbg !3596
  %arrayidx453 = getelementptr inbounds i16, i16* %361, i64 %idxprom452, !dbg !3596
  store i16 %conv451, i16* %arrayidx453, align 2, !dbg !3597
  %362 = load i32, i32* %y405, align 4, !dbg !3598
  %conv454 = trunc i32 %362 to i16, !dbg !3598
  %363 = load i32, i32* %pos425, align 4, !dbg !3599
  %idxprom455 = sext i32 %363 to i64, !dbg !3600
  %364 = load i16*, i16** %dpy, align 8, !dbg !3600
  %arrayidx456 = getelementptr inbounds i16, i16* %364, i64 %idxprom455, !dbg !3600
  store i16 %conv454, i16* %arrayidx456, align 2, !dbg !3601
  br label %for.inc457, !dbg !3602

for.inc457:                                       ; preds = %if.end450, %if.then433
  %365 = load i32, i32* %j, align 4, !dbg !3603
  %inc458 = add nsw i32 %365, 1, !dbg !3603
  store i32 %inc458, i32* %j, align 4, !dbg !3603
  br label %for.cond386, !dbg !3605, !llvm.loop !3606

for.end459:                                       ; preds = %for.cond386
  br label %for.inc460, !dbg !3608

for.inc460:                                       ; preds = %for.end459
  %366 = load i32, i32* %i, align 4, !dbg !3609
  %inc461 = add nsw i32 %366, 1, !dbg !3609
  store i32 %inc461, i32* %i, align 4, !dbg !3609
  br label %for.cond376, !dbg !3611, !llvm.loop !3612

for.end462:                                       ; preds = %for.cond376
  br label %if.end463

if.end463:                                        ; preds = %for.end462, %for.end374
  br label %sw.epilog, !dbg !3614

sw.bb464:                                         ; preds = %for.end69
  store i32 0, i32* %i, align 4, !dbg !3615
  br label %for.cond465, !dbg !3617

for.cond465:                                      ; preds = %for.inc550, %sw.bb464
  %367 = load i32, i32* %i, align 4, !dbg !3618
  %368 = load i32, i32* %h, align 4, !dbg !3621
  %cmp466 = icmp slt i32 %367, %368, !dbg !3622
  br i1 %cmp466, label %for.body468, label %for.end552, !dbg !3623

for.body468:                                      ; preds = %for.cond465
  call void @llvm.dbg.declare(metadata i32* %iw1469, metadata !3624, metadata !909), !dbg !3626
  %369 = load i32, i32* %i, align 4, !dbg !3627
  %370 = load i32, i32* %slinesizex, align 4, !dbg !3628
  %mul470 = mul nsw i32 %369, %370, !dbg !3629
  store i32 %mul470, i32* %iw1469, align 4, !dbg !3626
  call void @llvm.dbg.declare(metadata i32* %iw2471, metadata !3630, metadata !909), !dbg !3631
  %371 = load i32, i32* %i, align 4, !dbg !3632
  %372 = load i32, i32* %slinesizey, align 4, !dbg !3633
  %mul472 = mul nsw i32 %371, %372, !dbg !3634
  store i32 %mul472, i32* %iw2471, align 4, !dbg !3631
  call void @llvm.dbg.declare(metadata i32* %iwd473, metadata !3635, metadata !909), !dbg !3636
  %373 = load i32, i32* %i, align 4, !dbg !3637
  %374 = load i32, i32* %slinesized, align 4, !dbg !3638
  %mul474 = mul nsw i32 %373, %374, !dbg !3639
  store i32 %mul474, i32* %iwd473, align 4, !dbg !3636
  store i32 0, i32* %j, align 4, !dbg !3640
  br label %for.cond475, !dbg !3642

for.cond475:                                      ; preds = %for.inc547, %for.body468
  %375 = load i32, i32* %j, align 4, !dbg !3643
  %376 = load i32, i32* %w, align 4, !dbg !3646
  %cmp476 = icmp slt i32 %375, %376, !dbg !3647
  br i1 %cmp476, label %for.body478, label %for.end549, !dbg !3648

for.body478:                                      ; preds = %for.cond475
  call void @llvm.dbg.declare(metadata i32* %x479, metadata !3649, metadata !909), !dbg !3651
  %377 = load i32, i32* %iw1469, align 4, !dbg !3652
  %378 = load i32, i32* %j, align 4, !dbg !3653
  %add480 = add nsw i32 %377, %378, !dbg !3654
  %idxprom481 = sext i32 %add480 to i64, !dbg !3655
  %379 = load i16*, i16** %spx, align 8, !dbg !3655
  %arrayidx482 = getelementptr inbounds i16, i16* %379, i64 %idxprom481, !dbg !3655
  %380 = load i16, i16* %arrayidx482, align 2, !dbg !3655
  %conv483 = zext i16 %380 to i32, !dbg !3656
  %381 = load i32, i32* %max, align 4, !dbg !3657
  %cmp484 = icmp sgt i32 %conv483, %381, !dbg !3658
  br i1 %cmp484, label %cond.true486, label %cond.false487, !dbg !3656

cond.true486:                                     ; preds = %for.body478
  %382 = load i32, i32* %max, align 4, !dbg !3659
  br label %cond.end492, !dbg !3661

cond.false487:                                    ; preds = %for.body478
  %383 = load i32, i32* %iw1469, align 4, !dbg !3662
  %384 = load i32, i32* %j, align 4, !dbg !3664
  %add488 = add nsw i32 %383, %384, !dbg !3665
  %idxprom489 = sext i32 %add488 to i64, !dbg !3666
  %385 = load i16*, i16** %spx, align 8, !dbg !3666
  %arrayidx490 = getelementptr inbounds i16, i16* %385, i64 %idxprom489, !dbg !3666
  %386 = load i16, i16* %arrayidx490, align 2, !dbg !3666
  %conv491 = zext i16 %386 to i32, !dbg !3667
  br label %cond.end492, !dbg !3668

cond.end492:                                      ; preds = %cond.false487, %cond.true486
  %cond493 = phi i32 [ %382, %cond.true486 ], [ %conv491, %cond.false487 ], !dbg !3669
  store i32 %cond493, i32* %x479, align 4, !dbg !3671
  call void @llvm.dbg.declare(metadata i32* %y494, metadata !3672, metadata !909), !dbg !3673
  %387 = load i32, i32* %iw2471, align 4, !dbg !3674
  %388 = load i32, i32* %j, align 4, !dbg !3675
  %add495 = add nsw i32 %387, %388, !dbg !3676
  %idxprom496 = sext i32 %add495 to i64, !dbg !3677
  %389 = load i16*, i16** %spy, align 8, !dbg !3677
  %arrayidx497 = getelementptr inbounds i16, i16* %389, i64 %idxprom496, !dbg !3677
  %390 = load i16, i16* %arrayidx497, align 2, !dbg !3677
  %conv498 = zext i16 %390 to i32, !dbg !3678
  %391 = load i32, i32* %max, align 4, !dbg !3679
  %cmp499 = icmp sgt i32 %conv498, %391, !dbg !3680
  br i1 %cmp499, label %cond.true501, label %cond.false502, !dbg !3678

cond.true501:                                     ; preds = %cond.end492
  %392 = load i32, i32* %max, align 4, !dbg !3681
  br label %cond.end507, !dbg !3682

cond.false502:                                    ; preds = %cond.end492
  %393 = load i32, i32* %iw2471, align 4, !dbg !3683
  %394 = load i32, i32* %j, align 4, !dbg !3684
  %add503 = add nsw i32 %393, %394, !dbg !3685
  %idxprom504 = sext i32 %add503 to i64, !dbg !3686
  %395 = load i16*, i16** %spy, align 8, !dbg !3686
  %arrayidx505 = getelementptr inbounds i16, i16* %395, i64 %idxprom504, !dbg !3686
  %396 = load i16, i16* %arrayidx505, align 2, !dbg !3686
  %conv506 = zext i16 %396 to i32, !dbg !3687
  br label %cond.end507, !dbg !3688

cond.end507:                                      ; preds = %cond.false502, %cond.true501
  %cond508 = phi i32 [ %392, %cond.true501 ], [ %conv506, %cond.false502 ], !dbg !3689
  store i32 %cond508, i32* %y494, align 4, !dbg !3690
  call void @llvm.dbg.declare(metadata i32* %z509, metadata !3691, metadata !909), !dbg !3692
  %397 = load i32, i32* %iwd473, align 4, !dbg !3693
  %398 = load i32, i32* %j, align 4, !dbg !3694
  %add510 = add nsw i32 %397, %398, !dbg !3695
  %idxprom511 = sext i32 %add510 to i64, !dbg !3696
  %399 = load i16*, i16** %spd, align 8, !dbg !3696
  %arrayidx512 = getelementptr inbounds i16, i16* %399, i64 %idxprom511, !dbg !3696
  %400 = load i16, i16* %arrayidx512, align 2, !dbg !3696
  %conv513 = zext i16 %400 to i32, !dbg !3696
  store i32 %conv513, i32* %z509, align 4, !dbg !3692
  call void @llvm.dbg.declare(metadata i32* %pos514, metadata !3697, metadata !909), !dbg !3698
  %401 = load i32, i32* %y494, align 4, !dbg !3699
  %402 = load i32, i32* %dlinesize, align 4, !dbg !3700
  %mul515 = mul nsw i32 %401, %402, !dbg !3701
  %403 = load i32, i32* %x479, align 4, !dbg !3702
  %add516 = add nsw i32 %mul515, %403, !dbg !3703
  store i32 %add516, i32* %pos514, align 4, !dbg !3698
  %404 = load i32, i32* %z509, align 4, !dbg !3704
  %405 = load i32, i32* %tmin, align 4, !dbg !3706
  %cmp517 = icmp slt i32 %404, %405, !dbg !3707
  br i1 %cmp517, label %if.then522, label %lor.lhs.false519, !dbg !3708

lor.lhs.false519:                                 ; preds = %cond.end507
  %406 = load i32, i32* %z509, align 4, !dbg !3709
  %407 = load i32, i32* %tmax, align 4, !dbg !3711
  %cmp520 = icmp sgt i32 %406, %407, !dbg !3712
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !3713

if.then522:                                       ; preds = %lor.lhs.false519, %cond.end507
  br label %for.inc547, !dbg !3714

if.end523:                                        ; preds = %lor.lhs.false519
  %408 = load i32, i32* %max, align 4, !dbg !3715
  %409 = load i32, i32* %pos514, align 4, !dbg !3716
  %idxprom524 = sext i32 %409 to i64, !dbg !3717
  %410 = load i16*, i16** %dpd, align 8, !dbg !3717
  %arrayidx525 = getelementptr inbounds i16, i16* %410, i64 %idxprom524, !dbg !3717
  %411 = load i16, i16* %arrayidx525, align 2, !dbg !3717
  %conv526 = zext i16 %411 to i32, !dbg !3717
  %412 = load i32, i32* %intensity, align 4, !dbg !3718
  %add527 = add nsw i32 %conv526, %412, !dbg !3719
  %cmp528 = icmp sgt i32 %408, %add527, !dbg !3720
  br i1 %cmp528, label %cond.true530, label %cond.false535, !dbg !3721

cond.true530:                                     ; preds = %if.end523
  %413 = load i32, i32* %pos514, align 4, !dbg !3722
  %idxprom531 = sext i32 %413 to i64, !dbg !3723
  %414 = load i16*, i16** %dpd, align 8, !dbg !3723
  %arrayidx532 = getelementptr inbounds i16, i16* %414, i64 %idxprom531, !dbg !3723
  %415 = load i16, i16* %arrayidx532, align 2, !dbg !3723
  %conv533 = zext i16 %415 to i32, !dbg !3723
  %416 = load i32, i32* %intensity, align 4, !dbg !3724
  %add534 = add nsw i32 %conv533, %416, !dbg !3725
  br label %cond.end536, !dbg !3726

cond.false535:                                    ; preds = %if.end523
  %417 = load i32, i32* %max, align 4, !dbg !3727
  br label %cond.end536, !dbg !3728

cond.end536:                                      ; preds = %cond.false535, %cond.true530
  %cond537 = phi i32 [ %add534, %cond.true530 ], [ %417, %cond.false535 ], !dbg !3729
  %conv538 = trunc i32 %cond537 to i16, !dbg !3730
  %418 = load i32, i32* %pos514, align 4, !dbg !3731
  %idxprom539 = sext i32 %418 to i64, !dbg !3732
  %419 = load i16*, i16** %dpd, align 8, !dbg !3732
  %arrayidx540 = getelementptr inbounds i16, i16* %419, i64 %idxprom539, !dbg !3732
  store i16 %conv538, i16* %arrayidx540, align 2, !dbg !3733
  %420 = load i32, i32* %x479, align 4, !dbg !3734
  %conv541 = trunc i32 %420 to i16, !dbg !3734
  %421 = load i32, i32* %pos514, align 4, !dbg !3735
  %idxprom542 = sext i32 %421 to i64, !dbg !3736
  %422 = load i16*, i16** %dpx, align 8, !dbg !3736
  %arrayidx543 = getelementptr inbounds i16, i16* %422, i64 %idxprom542, !dbg !3736
  store i16 %conv541, i16* %arrayidx543, align 2, !dbg !3737
  %423 = load i32, i32* %y494, align 4, !dbg !3738
  %conv544 = trunc i32 %423 to i16, !dbg !3738
  %424 = load i32, i32* %pos514, align 4, !dbg !3739
  %idxprom545 = sext i32 %424 to i64, !dbg !3740
  %425 = load i16*, i16** %dpy, align 8, !dbg !3740
  %arrayidx546 = getelementptr inbounds i16, i16* %425, i64 %idxprom545, !dbg !3740
  store i16 %conv544, i16* %arrayidx546, align 2, !dbg !3741
  br label %for.inc547, !dbg !3742

for.inc547:                                       ; preds = %cond.end536, %if.then522
  %426 = load i32, i32* %j, align 4, !dbg !3743
  %inc548 = add nsw i32 %426, 1, !dbg !3743
  store i32 %inc548, i32* %j, align 4, !dbg !3743
  br label %for.cond475, !dbg !3745, !llvm.loop !3746

for.end549:                                       ; preds = %for.cond475
  br label %for.inc550, !dbg !3748

for.inc550:                                       ; preds = %for.end549
  %427 = load i32, i32* %i, align 4, !dbg !3749
  %inc551 = add nsw i32 %427, 1, !dbg !3749
  store i32 %inc551, i32* %i, align 4, !dbg !3749
  br label %for.cond465, !dbg !3751, !llvm.loop !3752

for.end552:                                       ; preds = %for.cond465
  br label %sw.epilog, !dbg !3754

sw.bb553:                                         ; preds = %for.end69
  store i32 0, i32* %i, align 4, !dbg !3755
  br label %for.cond554, !dbg !3757

for.cond554:                                      ; preds = %for.inc644, %sw.bb553
  %428 = load i32, i32* %i, align 4, !dbg !3758
  %429 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !3761
  %height555 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %429, i32 0, i32 4, !dbg !3762
  %430 = load i32, i32* %height555, align 4, !dbg !3762
  %cmp556 = icmp slt i32 %428, %430, !dbg !3763
  br i1 %cmp556, label %for.body558, label %for.end646, !dbg !3764

for.body558:                                      ; preds = %for.cond554
  call void @llvm.dbg.declare(metadata i32* %iwx559, metadata !3765, metadata !909), !dbg !3767
  %431 = load i32, i32* %i, align 4, !dbg !3768
  %432 = load i32, i32* %vsub, align 4, !dbg !3769
  %shr = ashr i32 %431, %432, !dbg !3770
  %433 = load i32, i32* %slinesizex, align 4, !dbg !3771
  %mul560 = mul nsw i32 %shr, %433, !dbg !3772
  store i32 %mul560, i32* %iwx559, align 4, !dbg !3767
  call void @llvm.dbg.declare(metadata i32* %iwy561, metadata !3773, metadata !909), !dbg !3774
  %434 = load i32, i32* %i, align 4, !dbg !3775
  %435 = load i32, i32* %vsub, align 4, !dbg !3776
  %shr562 = ashr i32 %434, %435, !dbg !3777
  %436 = load i32, i32* %slinesizey, align 4, !dbg !3778
  %mul563 = mul nsw i32 %shr562, %436, !dbg !3779
  store i32 %mul563, i32* %iwy561, align 4, !dbg !3774
  call void @llvm.dbg.declare(metadata i32* %iwd564, metadata !3780, metadata !909), !dbg !3781
  %437 = load i32, i32* %i, align 4, !dbg !3782
  %438 = load i32, i32* %slinesized, align 4, !dbg !3783
  %mul565 = mul nsw i32 %437, %438, !dbg !3784
  store i32 %mul565, i32* %iwd564, align 4, !dbg !3781
  store i32 0, i32* %j, align 4, !dbg !3785
  br label %for.cond566, !dbg !3787

for.cond566:                                      ; preds = %for.inc641, %for.body558
  %439 = load i32, i32* %j, align 4, !dbg !3788
  %440 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !3791
  %width567 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %440, i32 0, i32 3, !dbg !3792
  %441 = load i32, i32* %width567, align 8, !dbg !3792
  %cmp568 = icmp slt i32 %439, %441, !dbg !3793
  br i1 %cmp568, label %for.body570, label %for.end643, !dbg !3794

for.body570:                                      ; preds = %for.cond566
  call void @llvm.dbg.declare(metadata i32* %x571, metadata !3795, metadata !909), !dbg !3797
  %442 = load i32, i32* %iwx559, align 4, !dbg !3798
  %443 = load i32, i32* %j, align 4, !dbg !3799
  %444 = load i32, i32* %hsub, align 4, !dbg !3800
  %shr572 = ashr i32 %443, %444, !dbg !3801
  %add573 = add nsw i32 %442, %shr572, !dbg !3802
  %idxprom574 = sext i32 %add573 to i64, !dbg !3803
  %445 = load i16*, i16** %spx, align 8, !dbg !3803
  %arrayidx575 = getelementptr inbounds i16, i16* %445, i64 %idxprom574, !dbg !3803
  %446 = load i16, i16* %arrayidx575, align 2, !dbg !3803
  %conv576 = zext i16 %446 to i32, !dbg !3804
  %447 = load i32, i32* %max, align 4, !dbg !3805
  %cmp577 = icmp sgt i32 %conv576, %447, !dbg !3806
  br i1 %cmp577, label %cond.true579, label %cond.false580, !dbg !3804

cond.true579:                                     ; preds = %for.body570
  %448 = load i32, i32* %max, align 4, !dbg !3807
  br label %cond.end586, !dbg !3809

cond.false580:                                    ; preds = %for.body570
  %449 = load i32, i32* %iwx559, align 4, !dbg !3810
  %450 = load i32, i32* %j, align 4, !dbg !3812
  %451 = load i32, i32* %hsub, align 4, !dbg !3813
  %shr581 = ashr i32 %450, %451, !dbg !3814
  %add582 = add nsw i32 %449, %shr581, !dbg !3815
  %idxprom583 = sext i32 %add582 to i64, !dbg !3816
  %452 = load i16*, i16** %spx, align 8, !dbg !3816
  %arrayidx584 = getelementptr inbounds i16, i16* %452, i64 %idxprom583, !dbg !3816
  %453 = load i16, i16* %arrayidx584, align 2, !dbg !3816
  %conv585 = zext i16 %453 to i32, !dbg !3817
  br label %cond.end586, !dbg !3818

cond.end586:                                      ; preds = %cond.false580, %cond.true579
  %cond587 = phi i32 [ %448, %cond.true579 ], [ %conv585, %cond.false580 ], !dbg !3819
  store i32 %cond587, i32* %x571, align 4, !dbg !3821
  call void @llvm.dbg.declare(metadata i32* %y588, metadata !3822, metadata !909), !dbg !3823
  %454 = load i32, i32* %iwy561, align 4, !dbg !3824
  %455 = load i32, i32* %j, align 4, !dbg !3825
  %456 = load i32, i32* %hsub, align 4, !dbg !3826
  %shr589 = ashr i32 %455, %456, !dbg !3827
  %add590 = add nsw i32 %454, %shr589, !dbg !3828
  %idxprom591 = sext i32 %add590 to i64, !dbg !3829
  %457 = load i16*, i16** %spy, align 8, !dbg !3829
  %arrayidx592 = getelementptr inbounds i16, i16* %457, i64 %idxprom591, !dbg !3829
  %458 = load i16, i16* %arrayidx592, align 2, !dbg !3829
  %conv593 = zext i16 %458 to i32, !dbg !3830
  %459 = load i32, i32* %max, align 4, !dbg !3831
  %cmp594 = icmp sgt i32 %conv593, %459, !dbg !3832
  br i1 %cmp594, label %cond.true596, label %cond.false597, !dbg !3830

cond.true596:                                     ; preds = %cond.end586
  %460 = load i32, i32* %max, align 4, !dbg !3833
  br label %cond.end603, !dbg !3834

cond.false597:                                    ; preds = %cond.end586
  %461 = load i32, i32* %iwy561, align 4, !dbg !3835
  %462 = load i32, i32* %j, align 4, !dbg !3836
  %463 = load i32, i32* %hsub, align 4, !dbg !3837
  %shr598 = ashr i32 %462, %463, !dbg !3838
  %add599 = add nsw i32 %461, %shr598, !dbg !3839
  %idxprom600 = sext i32 %add599 to i64, !dbg !3840
  %464 = load i16*, i16** %spy, align 8, !dbg !3840
  %arrayidx601 = getelementptr inbounds i16, i16* %464, i64 %idxprom600, !dbg !3840
  %465 = load i16, i16* %arrayidx601, align 2, !dbg !3840
  %conv602 = zext i16 %465 to i32, !dbg !3841
  br label %cond.end603, !dbg !3842

cond.end603:                                      ; preds = %cond.false597, %cond.true596
  %cond604 = phi i32 [ %460, %cond.true596 ], [ %conv602, %cond.false597 ], !dbg !3843
  store i32 %cond604, i32* %y588, align 4, !dbg !3844
  call void @llvm.dbg.declare(metadata i32* %z605, metadata !3845, metadata !909), !dbg !3846
  %466 = load i32, i32* %iwd564, align 4, !dbg !3847
  %467 = load i32, i32* %j, align 4, !dbg !3848
  %add606 = add nsw i32 %466, %467, !dbg !3849
  %idxprom607 = sext i32 %add606 to i64, !dbg !3850
  %468 = load i16*, i16** %spd, align 8, !dbg !3850
  %arrayidx608 = getelementptr inbounds i16, i16* %468, i64 %idxprom607, !dbg !3850
  %469 = load i16, i16* %arrayidx608, align 2, !dbg !3850
  %conv609 = zext i16 %469 to i32, !dbg !3850
  store i32 %conv609, i32* %z605, align 4, !dbg !3846
  call void @llvm.dbg.declare(metadata i32* %pos610, metadata !3851, metadata !909), !dbg !3852
  %470 = load i32, i32* %y588, align 4, !dbg !3853
  %471 = load i32, i32* %dlinesize, align 4, !dbg !3854
  %mul611 = mul nsw i32 %470, %471, !dbg !3855
  %472 = load i32, i32* %x571, align 4, !dbg !3856
  %add612 = add nsw i32 %mul611, %472, !dbg !3857
  store i32 %add612, i32* %pos610, align 4, !dbg !3852
  %473 = load i32, i32* %z605, align 4, !dbg !3858
  %474 = load i32, i32* %tmin, align 4, !dbg !3860
  %cmp613 = icmp slt i32 %473, %474, !dbg !3861
  br i1 %cmp613, label %if.then618, label %lor.lhs.false615, !dbg !3862

lor.lhs.false615:                                 ; preds = %cond.end603
  %475 = load i32, i32* %z605, align 4, !dbg !3863
  %476 = load i32, i32* %tmax, align 4, !dbg !3865
  %cmp616 = icmp sgt i32 %475, %476, !dbg !3866
  br i1 %cmp616, label %if.then618, label %if.end619, !dbg !3867

if.then618:                                       ; preds = %lor.lhs.false615, %cond.end603
  br label %for.inc641, !dbg !3868

if.end619:                                        ; preds = %lor.lhs.false615
  %477 = load i32, i32* %z605, align 4, !dbg !3869
  %478 = load i32, i32* %pos610, align 4, !dbg !3870
  %idxprom620 = sext i32 %478 to i64, !dbg !3871
  %479 = load i16*, i16** %dpd, align 8, !dbg !3871
  %arrayidx621 = getelementptr inbounds i16, i16* %479, i64 %idxprom620, !dbg !3871
  %480 = load i16, i16* %arrayidx621, align 2, !dbg !3871
  %conv622 = zext i16 %480 to i32, !dbg !3872
  %cmp623 = icmp sgt i32 %477, %conv622, !dbg !3873
  br i1 %cmp623, label %cond.true625, label %cond.false626, !dbg !3874

cond.true625:                                     ; preds = %if.end619
  %481 = load i32, i32* %z605, align 4, !dbg !3875
  br label %cond.end630, !dbg !3876

cond.false626:                                    ; preds = %if.end619
  %482 = load i32, i32* %pos610, align 4, !dbg !3877
  %idxprom627 = sext i32 %482 to i64, !dbg !3878
  %483 = load i16*, i16** %dpd, align 8, !dbg !3878
  %arrayidx628 = getelementptr inbounds i16, i16* %483, i64 %idxprom627, !dbg !3878
  %484 = load i16, i16* %arrayidx628, align 2, !dbg !3878
  %conv629 = zext i16 %484 to i32, !dbg !3879
  br label %cond.end630, !dbg !3880

cond.end630:                                      ; preds = %cond.false626, %cond.true625
  %cond631 = phi i32 [ %481, %cond.true625 ], [ %conv629, %cond.false626 ], !dbg !3881
  %conv632 = trunc i32 %cond631 to i16, !dbg !3882
  %485 = load i32, i32* %pos610, align 4, !dbg !3883
  %idxprom633 = sext i32 %485 to i64, !dbg !3884
  %486 = load i16*, i16** %dpd, align 8, !dbg !3884
  %arrayidx634 = getelementptr inbounds i16, i16* %486, i64 %idxprom633, !dbg !3884
  store i16 %conv632, i16* %arrayidx634, align 2, !dbg !3885
  %487 = load i32, i32* %x571, align 4, !dbg !3886
  %conv635 = trunc i32 %487 to i16, !dbg !3886
  %488 = load i32, i32* %pos610, align 4, !dbg !3887
  %idxprom636 = sext i32 %488 to i64, !dbg !3888
  %489 = load i16*, i16** %dpx, align 8, !dbg !3888
  %arrayidx637 = getelementptr inbounds i16, i16* %489, i64 %idxprom636, !dbg !3888
  store i16 %conv635, i16* %arrayidx637, align 2, !dbg !3889
  %490 = load i32, i32* %y588, align 4, !dbg !3890
  %conv638 = trunc i32 %490 to i16, !dbg !3890
  %491 = load i32, i32* %pos610, align 4, !dbg !3891
  %idxprom639 = sext i32 %491 to i64, !dbg !3892
  %492 = load i16*, i16** %dpy, align 8, !dbg !3892
  %arrayidx640 = getelementptr inbounds i16, i16* %492, i64 %idxprom639, !dbg !3892
  store i16 %conv638, i16* %arrayidx640, align 2, !dbg !3893
  br label %for.inc641, !dbg !3894

for.inc641:                                       ; preds = %cond.end630, %if.then618
  %493 = load i32, i32* %j, align 4, !dbg !3895
  %inc642 = add nsw i32 %493, 1, !dbg !3895
  store i32 %inc642, i32* %j, align 4, !dbg !3895
  br label %for.cond566, !dbg !3897, !llvm.loop !3898

for.end643:                                       ; preds = %for.cond566
  br label %for.inc644, !dbg !3900

for.inc644:                                       ; preds = %for.end643
  %494 = load i32, i32* %i, align 4, !dbg !3901
  %inc645 = add nsw i32 %494, 1, !dbg !3901
  store i32 %inc645, i32* %i, align 4, !dbg !3901
  br label %for.cond554, !dbg !3903, !llvm.loop !3904

for.end646:                                       ; preds = %for.cond554
  br label %sw.epilog, !dbg !3906

sw.default:                                       ; preds = %for.end69
  br label %do.body, !dbg !3907, !llvm.loop !3908

do.body:                                          ; preds = %sw.default
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i32 0, i32 0), i32 559), !dbg !3909
  call void @abort() #7, !dbg !3914
  unreachable, !dbg !3916

do.end:                                           ; No predecessors!
  br label %sw.epilog, !dbg !3917

sw.epilog:                                        ; preds = %do.end, %for.end646, %for.end552, %if.end463, %if.end272
  %495 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !3918
  %496 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !3919
  call void @envelope16(%struct.VectorscopeContext* %495, %struct.AVFrame* %496), !dbg !3920
  %497 = load i16**, i16*** %dst, align 8, !dbg !3921
  %arrayidx647 = getelementptr inbounds i16*, i16** %497, i64 3, !dbg !3921
  %498 = load i16*, i16** %arrayidx647, align 8, !dbg !3921
  %tobool648 = icmp ne i16* %498, null, !dbg !3921
  br i1 %tobool648, label %if.then649, label %if.end678, !dbg !3923

if.then649:                                       ; preds = %sw.epilog
  store i32 0, i32* %i, align 4, !dbg !3924
  br label %for.cond650, !dbg !3927

for.cond650:                                      ; preds = %for.inc675, %if.then649
  %499 = load i32, i32* %i, align 4, !dbg !3928
  %500 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !3931
  %height651 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %500, i32 0, i32 4, !dbg !3932
  %501 = load i32, i32* %height651, align 4, !dbg !3932
  %cmp652 = icmp slt i32 %499, %501, !dbg !3933
  br i1 %cmp652, label %for.body654, label %for.end677, !dbg !3934

for.body654:                                      ; preds = %for.cond650
  store i32 0, i32* %j, align 4, !dbg !3935
  br label %for.cond655, !dbg !3938

for.cond655:                                      ; preds = %for.inc672, %for.body654
  %502 = load i32, i32* %j, align 4, !dbg !3939
  %503 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !3942
  %width656 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %503, i32 0, i32 3, !dbg !3943
  %504 = load i32, i32* %width656, align 8, !dbg !3943
  %cmp657 = icmp slt i32 %502, %504, !dbg !3944
  br i1 %cmp657, label %for.body659, label %for.end674, !dbg !3945

for.body659:                                      ; preds = %for.cond655
  call void @llvm.dbg.declare(metadata i32* %pos660, metadata !3946, metadata !909), !dbg !3948
  %505 = load i32, i32* %i, align 4, !dbg !3949
  %506 = load i32, i32* %dlinesize, align 4, !dbg !3950
  %mul661 = mul nsw i32 %505, %506, !dbg !3951
  %507 = load i32, i32* %j, align 4, !dbg !3952
  %add662 = add nsw i32 %mul661, %507, !dbg !3953
  store i32 %add662, i32* %pos660, align 4, !dbg !3948
  %508 = load i32, i32* %pos660, align 4, !dbg !3954
  %idxprom663 = sext i32 %508 to i64, !dbg !3956
  %509 = load i16*, i16** %dpd, align 8, !dbg !3956
  %arrayidx664 = getelementptr inbounds i16, i16* %509, i64 %idxprom663, !dbg !3956
  %510 = load i16, i16* %arrayidx664, align 2, !dbg !3956
  %tobool665 = icmp ne i16 %510, 0, !dbg !3956
  br i1 %tobool665, label %if.then666, label %if.end671, !dbg !3957

if.then666:                                       ; preds = %for.body659
  %511 = load i32, i32* %max, align 4, !dbg !3958
  %conv667 = trunc i32 %511 to i16, !dbg !3958
  %512 = load i32, i32* %pos660, align 4, !dbg !3959
  %idxprom668 = sext i32 %512 to i64, !dbg !3960
  %513 = load i16**, i16*** %dst, align 8, !dbg !3960
  %arrayidx669 = getelementptr inbounds i16*, i16** %513, i64 3, !dbg !3960
  %514 = load i16*, i16** %arrayidx669, align 8, !dbg !3960
  %arrayidx670 = getelementptr inbounds i16, i16* %514, i64 %idxprom668, !dbg !3960
  store i16 %conv667, i16* %arrayidx670, align 2, !dbg !3961
  br label %if.end671, !dbg !3960

if.end671:                                        ; preds = %if.then666, %for.body659
  br label %for.inc672, !dbg !3962

for.inc672:                                       ; preds = %if.end671
  %515 = load i32, i32* %j, align 4, !dbg !3963
  %inc673 = add nsw i32 %515, 1, !dbg !3963
  store i32 %inc673, i32* %j, align 4, !dbg !3963
  br label %for.cond655, !dbg !3965, !llvm.loop !3966

for.end674:                                       ; preds = %for.cond655
  br label %for.inc675, !dbg !3968

for.inc675:                                       ; preds = %for.end674
  %516 = load i32, i32* %i, align 4, !dbg !3969
  %inc676 = add nsw i32 %516, 1, !dbg !3969
  store i32 %inc676, i32* %i, align 4, !dbg !3969
  br label %for.cond650, !dbg !3971, !llvm.loop !3972

for.end677:                                       ; preds = %for.cond650
  br label %if.end678, !dbg !3974

if.end678:                                        ; preds = %for.end677, %sw.epilog
  %517 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !3975
  %mode679 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %517, i32 0, i32 1, !dbg !3977
  %518 = load i32, i32* %mode679, align 8, !dbg !3977
  %cmp680 = icmp eq i32 %518, 1, !dbg !3978
  br i1 %cmp680, label %if.then682, label %if.else721, !dbg !3979

if.then682:                                       ; preds = %if.end678
  store i32 0, i32* %i, align 4, !dbg !3980
  br label %for.cond683, !dbg !3983

for.cond683:                                      ; preds = %for.inc718, %if.then682
  %519 = load i32, i32* %i, align 4, !dbg !3984
  %520 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !3987
  %height684 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %520, i32 0, i32 4, !dbg !3988
  %521 = load i32, i32* %height684, align 4, !dbg !3988
  %cmp685 = icmp slt i32 %519, %521, !dbg !3989
  br i1 %cmp685, label %for.body687, label %for.end720, !dbg !3990

for.body687:                                      ; preds = %for.cond683
  store i32 0, i32* %j, align 4, !dbg !3991
  br label %for.cond688, !dbg !3994

for.cond688:                                      ; preds = %for.inc715, %for.body687
  %522 = load i32, i32* %j, align 4, !dbg !3995
  %523 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !3998
  %width689 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %523, i32 0, i32 3, !dbg !3999
  %524 = load i32, i32* %width689, align 8, !dbg !3999
  %cmp690 = icmp slt i32 %522, %524, !dbg !4000
  br i1 %cmp690, label %for.body692, label %for.end717, !dbg !4001

for.body692:                                      ; preds = %for.cond688
  %525 = load i32, i32* %i, align 4, !dbg !4002
  %526 = load i32, i32* %dlinesize, align 4, !dbg !4005
  %mul693 = mul nsw i32 %525, %526, !dbg !4006
  %527 = load i32, i32* %j, align 4, !dbg !4007
  %add694 = add nsw i32 %mul693, %527, !dbg !4008
  %idxprom695 = sext i32 %add694 to i64, !dbg !4009
  %528 = load i16*, i16** %dpd, align 8, !dbg !4009
  %arrayidx696 = getelementptr inbounds i16, i16* %528, i64 %idxprom695, !dbg !4009
  %529 = load i16, i16* %arrayidx696, align 2, !dbg !4009
  %tobool697 = icmp ne i16 %529, 0, !dbg !4009
  br i1 %tobool697, label %if.end714, label %if.then698, !dbg !4010

if.then698:                                       ; preds = %for.body692
  %530 = load i32, i32* %j, align 4, !dbg !4011
  %conv699 = trunc i32 %530 to i16, !dbg !4011
  %531 = load i32, i32* %i, align 4, !dbg !4013
  %532 = load i32, i32* %dlinesize, align 4, !dbg !4014
  %mul700 = mul nsw i32 %531, %532, !dbg !4015
  %533 = load i32, i32* %j, align 4, !dbg !4016
  %add701 = add nsw i32 %mul700, %533, !dbg !4017
  %idxprom702 = sext i32 %add701 to i64, !dbg !4018
  %534 = load i16*, i16** %dpx, align 8, !dbg !4018
  %arrayidx703 = getelementptr inbounds i16, i16* %534, i64 %idxprom702, !dbg !4018
  store i16 %conv699, i16* %arrayidx703, align 2, !dbg !4019
  %535 = load i32, i32* %i, align 4, !dbg !4020
  %conv704 = trunc i32 %535 to i16, !dbg !4020
  %536 = load i32, i32* %i, align 4, !dbg !4021
  %537 = load i32, i32* %dlinesize, align 4, !dbg !4022
  %mul705 = mul nsw i32 %536, %537, !dbg !4023
  %538 = load i32, i32* %j, align 4, !dbg !4024
  %add706 = add nsw i32 %mul705, %538, !dbg !4025
  %idxprom707 = sext i32 %add706 to i64, !dbg !4026
  %539 = load i16*, i16** %dpy, align 8, !dbg !4026
  %arrayidx708 = getelementptr inbounds i16, i16* %539, i64 %idxprom707, !dbg !4026
  store i16 %conv704, i16* %arrayidx708, align 2, !dbg !4027
  %540 = load i32, i32* %mid, align 4, !dbg !4028
  %conv709 = trunc i32 %540 to i16, !dbg !4028
  %541 = load i32, i32* %i, align 4, !dbg !4029
  %542 = load i32, i32* %dlinesize, align 4, !dbg !4030
  %mul710 = mul nsw i32 %541, %542, !dbg !4031
  %543 = load i32, i32* %j, align 4, !dbg !4032
  %add711 = add nsw i32 %mul710, %543, !dbg !4033
  %idxprom712 = sext i32 %add711 to i64, !dbg !4034
  %544 = load i16*, i16** %dpd, align 8, !dbg !4034
  %arrayidx713 = getelementptr inbounds i16, i16* %544, i64 %idxprom712, !dbg !4034
  store i16 %conv709, i16* %arrayidx713, align 2, !dbg !4035
  br label %if.end714, !dbg !4036

if.end714:                                        ; preds = %if.then698, %for.body692
  br label %for.inc715, !dbg !4037

for.inc715:                                       ; preds = %if.end714
  %545 = load i32, i32* %j, align 4, !dbg !4038
  %inc716 = add nsw i32 %545, 1, !dbg !4038
  store i32 %inc716, i32* %j, align 4, !dbg !4038
  br label %for.cond688, !dbg !4040, !llvm.loop !4041

for.end717:                                       ; preds = %for.cond688
  br label %for.inc718, !dbg !4043

for.inc718:                                       ; preds = %for.end717
  %546 = load i32, i32* %i, align 4, !dbg !4044
  %inc719 = add nsw i32 %546, 1, !dbg !4044
  store i32 %inc719, i32* %i, align 4, !dbg !4044
  br label %for.cond683, !dbg !4046, !llvm.loop !4047

for.end720:                                       ; preds = %for.cond683
  br label %if.end772, !dbg !4049

if.else721:                                       ; preds = %if.end678
  %547 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !4050
  %mode722 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %547, i32 0, i32 1, !dbg !4053
  %548 = load i32, i32* %mode722, align 8, !dbg !4053
  %cmp723 = icmp eq i32 %548, 5, !dbg !4054
  br i1 %cmp723, label %if.then725, label %if.end771, !dbg !4050

if.then725:                                       ; preds = %if.else721
  store i32 0, i32* %i, align 4, !dbg !4055
  br label %for.cond726, !dbg !4058

for.cond726:                                      ; preds = %for.inc768, %if.then725
  %549 = load i32, i32* %i, align 4, !dbg !4059
  %550 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4062
  %height727 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %550, i32 0, i32 4, !dbg !4063
  %551 = load i32, i32* %height727, align 4, !dbg !4063
  %cmp728 = icmp slt i32 %549, %551, !dbg !4064
  br i1 %cmp728, label %for.body730, label %for.end770, !dbg !4065

for.body730:                                      ; preds = %for.cond726
  store i32 0, i32* %j, align 4, !dbg !4066
  br label %for.cond731, !dbg !4069

for.cond731:                                      ; preds = %for.inc765, %for.body730
  %552 = load i32, i32* %j, align 4, !dbg !4070
  %553 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4073
  %width732 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %553, i32 0, i32 3, !dbg !4074
  %554 = load i32, i32* %width732, align 8, !dbg !4074
  %cmp733 = icmp slt i32 %552, %554, !dbg !4075
  br i1 %cmp733, label %for.body735, label %for.end767, !dbg !4076

for.body735:                                      ; preds = %for.cond731
  %555 = load i32, i32* %i, align 4, !dbg !4077
  %556 = load i32, i32* %dlinesize, align 4, !dbg !4080
  %mul736 = mul nsw i32 %555, %556, !dbg !4081
  %557 = load i32, i32* %j, align 4, !dbg !4082
  %add737 = add nsw i32 %mul736, %557, !dbg !4083
  %idxprom738 = sext i32 %add737 to i64, !dbg !4084
  %558 = load i16*, i16** %dpd, align 8, !dbg !4084
  %arrayidx739 = getelementptr inbounds i16, i16* %558, i64 %idxprom738, !dbg !4084
  %559 = load i16, i16* %arrayidx739, align 2, !dbg !4084
  %tobool740 = icmp ne i16 %559, 0, !dbg !4084
  br i1 %tobool740, label %if.end764, label %if.then741, !dbg !4085

if.then741:                                       ; preds = %for.body735
  %560 = load i32, i32* %j, align 4, !dbg !4086
  %conv742 = trunc i32 %560 to i16, !dbg !4086
  %561 = load i32, i32* %i, align 4, !dbg !4088
  %562 = load i32, i32* %dlinesize, align 4, !dbg !4089
  %mul743 = mul nsw i32 %561, %562, !dbg !4090
  %563 = load i32, i32* %j, align 4, !dbg !4091
  %add744 = add nsw i32 %mul743, %563, !dbg !4092
  %idxprom745 = sext i32 %add744 to i64, !dbg !4093
  %564 = load i16*, i16** %dpx, align 8, !dbg !4093
  %arrayidx746 = getelementptr inbounds i16, i16* %564, i64 %idxprom745, !dbg !4093
  store i16 %conv742, i16* %arrayidx746, align 2, !dbg !4094
  %565 = load i32, i32* %i, align 4, !dbg !4095
  %conv747 = trunc i32 %565 to i16, !dbg !4095
  %566 = load i32, i32* %i, align 4, !dbg !4096
  %567 = load i32, i32* %dlinesize, align 4, !dbg !4097
  %mul748 = mul nsw i32 %566, %567, !dbg !4098
  %568 = load i32, i32* %j, align 4, !dbg !4099
  %add749 = add nsw i32 %mul748, %568, !dbg !4100
  %idxprom750 = sext i32 %add749 to i64, !dbg !4101
  %569 = load i16*, i16** %dpy, align 8, !dbg !4101
  %arrayidx751 = getelementptr inbounds i16, i16* %569, i64 %idxprom750, !dbg !4101
  store i16 %conv747, i16* %arrayidx751, align 2, !dbg !4102
  %570 = load i32, i32* %mid, align 4, !dbg !4103
  %conv752 = sitofp i32 %570 to double, !dbg !4103
  %mul753 = fmul double %conv752, 0x3FF6A09E667F3BCD, !dbg !4104
  %571 = load i32, i32* %i, align 4, !dbg !4105
  %572 = load i32, i32* %mid, align 4, !dbg !4106
  %sub754 = sub nsw i32 %571, %572, !dbg !4107
  %conv755 = sitofp i32 %sub754 to double, !dbg !4105
  %573 = load i32, i32* %j, align 4, !dbg !4108
  %574 = load i32, i32* %mid, align 4, !dbg !4109
  %sub756 = sub nsw i32 %573, %574, !dbg !4110
  %conv757 = sitofp i32 %sub756 to double, !dbg !4108
  %call = call double @hypot(double %conv755, double %conv757) #8, !dbg !4111
  %sub758 = fsub double %mul753, %call, !dbg !4112
  %conv759 = fptoui double %sub758 to i16, !dbg !4103
  %575 = load i32, i32* %i, align 4, !dbg !4113
  %576 = load i32, i32* %dlinesize, align 4, !dbg !4114
  %mul760 = mul nsw i32 %575, %576, !dbg !4115
  %577 = load i32, i32* %j, align 4, !dbg !4116
  %add761 = add nsw i32 %mul760, %577, !dbg !4117
  %idxprom762 = sext i32 %add761 to i64, !dbg !4118
  %578 = load i16*, i16** %dpd, align 8, !dbg !4118
  %arrayidx763 = getelementptr inbounds i16, i16* %578, i64 %idxprom762, !dbg !4118
  store i16 %conv759, i16* %arrayidx763, align 2, !dbg !4119
  br label %if.end764, !dbg !4120

if.end764:                                        ; preds = %if.then741, %for.body735
  br label %for.inc765, !dbg !4121

for.inc765:                                       ; preds = %if.end764
  %579 = load i32, i32* %j, align 4, !dbg !4122
  %inc766 = add nsw i32 %579, 1, !dbg !4122
  store i32 %inc766, i32* %j, align 4, !dbg !4122
  br label %for.cond731, !dbg !4124, !llvm.loop !4125

for.end767:                                       ; preds = %for.cond731
  br label %for.inc768, !dbg !4127

for.inc768:                                       ; preds = %for.end767
  %580 = load i32, i32* %i, align 4, !dbg !4128
  %inc769 = add nsw i32 %580, 1, !dbg !4128
  store i32 %inc769, i32* %i, align 4, !dbg !4128
  br label %for.cond726, !dbg !4130, !llvm.loop !4131

for.end770:                                       ; preds = %for.cond726
  br label %if.end771, !dbg !4133

if.end771:                                        ; preds = %for.end770, %if.else721
  br label %if.end772

if.end772:                                        ; preds = %if.end771, %for.end720
  ret void, !dbg !4134
}

; Function Attrs: nounwind uwtable
define internal void @none_graticule(%struct.VectorscopeContext* %s, %struct.AVFrame* %out, i32 %X, i32 %Y, i32 %D, i32 %P) #1 !dbg !4135 {
entry:
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  %X.addr = alloca i32, align 4
  %Y.addr = alloca i32, align 4
  %D.addr = alloca i32, align 4
  %P.addr = alloca i32, align 4
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !4136, metadata !909), !dbg !4137
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !4138, metadata !909), !dbg !4139
  store i32 %X, i32* %X.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %X.addr, metadata !4140, metadata !909), !dbg !4141
  store i32 %Y, i32* %Y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Y.addr, metadata !4142, metadata !909), !dbg !4143
  store i32 %D, i32* %D.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %D.addr, metadata !4144, metadata !909), !dbg !4145
  store i32 %P, i32* %P.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %P.addr, metadata !4146, metadata !909), !dbg !4147
  ret void, !dbg !4148
}

; Function Attrs: nounwind uwtable
define internal void @green_graticule(%struct.VectorscopeContext* %s, %struct.AVFrame* %out, i32 %X, i32 %Y, i32 %D, i32 %P) #1 !dbg !814 {
entry:
  %retval.i232 = alloca i32, align 4
  %a.addr.i233 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i233, metadata !4149, metadata !909), !dbg !4154
  %amin.addr.i234 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i234, metadata !4159, metadata !909), !dbg !4160
  %amax.addr.i235 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i235, metadata !4161, metadata !909), !dbg !4162
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4149, metadata !909), !dbg !4163
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4159, metadata !909), !dbg !4165
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4161, metadata !909), !dbg !4166
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  %X.addr = alloca i32, align 4
  %Y.addr = alloca i32, align 4
  %D.addr = alloca i32, align 4
  %P.addr = alloca i32, align 4
  %o = alloca float, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %x55 = alloca i32, align 4
  %y62 = alloca i32, align 4
  %x123 = alloca i32, align 4
  %y130 = alloca i32, align 4
  %x194 = alloca i32, align 4
  %y202 = alloca i32, align 4
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !4167, metadata !909), !dbg !4168
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !4169, metadata !909), !dbg !4170
  store i32 %X, i32* %X.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %X.addr, metadata !4171, metadata !909), !dbg !4172
  store i32 %Y, i32* %Y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Y.addr, metadata !4173, metadata !909), !dbg !4174
  store i32 %D, i32* %D.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %D.addr, metadata !4175, metadata !909), !dbg !4176
  store i32 %P, i32* %P.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %P.addr, metadata !4177, metadata !909), !dbg !4178
  call void @llvm.dbg.declare(metadata float* %o, metadata !4179, metadata !909), !dbg !4181
  %0 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !4182
  %opacity = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %0, i32 0, i32 18, !dbg !4183
  %1 = load float, float* %opacity, align 8, !dbg !4183
  store float %1, float* %o, align 4, !dbg !4181
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4184, metadata !909), !dbg !4185
  store i32 0, i32* %i, align 4, !dbg !4186
  br label %for.cond, !dbg !4188

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4189
  %cmp = icmp slt i32 %2, 12, !dbg !4192
  br i1 %cmp, label %for.body, label %for.end, !dbg !4193

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4194, metadata !909), !dbg !4196
  %3 = load i32, i32* %X.addr, align 4, !dbg !4197
  %idxprom = sext i32 %3 to i64, !dbg !4198
  %4 = load i32, i32* %i, align 4, !dbg !4199
  %idxprom1 = sext i32 %4 to i64, !dbg !4198
  %5 = load i32, i32* %P.addr, align 4, !dbg !4200
  %idxprom2 = sext i32 %5 to i64, !dbg !4198
  %arrayidx = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom2, !dbg !4198
  %arrayidx3 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx, i64 0, i64 %idxprom1, !dbg !4198
  %arrayidx4 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx3, i64 0, i64 %idxprom, !dbg !4198
  %6 = load i16, i16* %arrayidx4, align 2, !dbg !4198
  %conv = zext i16 %6 to i32, !dbg !4198
  store i32 %conv, i32* %x, align 4, !dbg !4196
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4201, metadata !909), !dbg !4202
  %7 = load i32, i32* %Y.addr, align 4, !dbg !4203
  %idxprom5 = sext i32 %7 to i64, !dbg !4204
  %8 = load i32, i32* %i, align 4, !dbg !4205
  %idxprom6 = sext i32 %8 to i64, !dbg !4204
  %9 = load i32, i32* %P.addr, align 4, !dbg !4206
  %idxprom7 = sext i32 %9 to i64, !dbg !4204
  %arrayidx8 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom7, !dbg !4204
  %arrayidx9 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx8, i64 0, i64 %idxprom6, !dbg !4204
  %arrayidx10 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx9, i64 0, i64 %idxprom5, !dbg !4204
  %10 = load i16, i16* %arrayidx10, align 2, !dbg !4204
  %conv11 = zext i16 %10 to i32, !dbg !4204
  store i32 %conv11, i32* %y, align 4, !dbg !4202
  %11 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4207
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 0, !dbg !4208
  %arrayidx12 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !4207
  %12 = load i8*, i8** %arrayidx12, align 8, !dbg !4207
  %13 = load i32, i32* %y, align 4, !dbg !4209
  %14 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4210
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %14, i32 0, i32 1, !dbg !4211
  %arrayidx13 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !4210
  %15 = load i32, i32* %arrayidx13, align 8, !dbg !4210
  %mul = mul nsw i32 %13, %15, !dbg !4212
  %idx.ext = sext i32 %mul to i64, !dbg !4213
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !4213
  %16 = load i32, i32* %x, align 4, !dbg !4214
  %idx.ext14 = sext i32 %16 to i64, !dbg !4215
  %add.ptr15 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext14, !dbg !4215
  %17 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4216
  %linesize16 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %17, i32 0, i32 1, !dbg !4217
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize16, i64 0, i64 0, !dbg !4216
  %18 = load i32, i32* %arrayidx17, align 8, !dbg !4216
  %19 = load float, float* %o, align 4, !dbg !4218
  call void @draw_dots(i8* %add.ptr15, i32 %18, i32 128, float %19), !dbg !4219
  %20 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4220
  %data18 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 0, !dbg !4221
  %arrayidx19 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data18, i64 0, i64 1, !dbg !4220
  %21 = load i8*, i8** %arrayidx19, align 8, !dbg !4220
  %22 = load i32, i32* %y, align 4, !dbg !4222
  %23 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4223
  %linesize20 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %23, i32 0, i32 1, !dbg !4224
  %arrayidx21 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize20, i64 0, i64 1, !dbg !4223
  %24 = load i32, i32* %arrayidx21, align 4, !dbg !4223
  %mul22 = mul nsw i32 %22, %24, !dbg !4225
  %idx.ext23 = sext i32 %mul22 to i64, !dbg !4226
  %add.ptr24 = getelementptr inbounds i8, i8* %21, i64 %idx.ext23, !dbg !4226
  %25 = load i32, i32* %x, align 4, !dbg !4227
  %idx.ext25 = sext i32 %25 to i64, !dbg !4228
  %add.ptr26 = getelementptr inbounds i8, i8* %add.ptr24, i64 %idx.ext25, !dbg !4228
  %26 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4229
  %linesize27 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %26, i32 0, i32 1, !dbg !4230
  %arrayidx28 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize27, i64 0, i64 1, !dbg !4229
  %27 = load i32, i32* %arrayidx28, align 4, !dbg !4229
  %28 = load float, float* %o, align 4, !dbg !4231
  call void @draw_dots(i8* %add.ptr26, i32 %27, i32 0, float %28), !dbg !4232
  %29 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4233
  %data29 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %29, i32 0, i32 0, !dbg !4234
  %arrayidx30 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data29, i64 0, i64 2, !dbg !4233
  %30 = load i8*, i8** %arrayidx30, align 8, !dbg !4233
  %31 = load i32, i32* %y, align 4, !dbg !4235
  %32 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4236
  %linesize31 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %32, i32 0, i32 1, !dbg !4237
  %arrayidx32 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize31, i64 0, i64 2, !dbg !4236
  %33 = load i32, i32* %arrayidx32, align 8, !dbg !4236
  %mul33 = mul nsw i32 %31, %33, !dbg !4238
  %idx.ext34 = sext i32 %mul33 to i64, !dbg !4239
  %add.ptr35 = getelementptr inbounds i8, i8* %30, i64 %idx.ext34, !dbg !4239
  %34 = load i32, i32* %x, align 4, !dbg !4240
  %idx.ext36 = sext i32 %34 to i64, !dbg !4241
  %add.ptr37 = getelementptr inbounds i8, i8* %add.ptr35, i64 %idx.ext36, !dbg !4241
  %35 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4242
  %linesize38 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %35, i32 0, i32 1, !dbg !4243
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize38, i64 0, i64 2, !dbg !4242
  %36 = load i32, i32* %arrayidx39, align 8, !dbg !4242
  %37 = load float, float* %o, align 4, !dbg !4244
  call void @draw_dots(i8* %add.ptr37, i32 %36, i32 0, float %37), !dbg !4245
  %38 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4246
  %data40 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %38, i32 0, i32 0, !dbg !4248
  %arrayidx41 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data40, i64 0, i64 3, !dbg !4246
  %39 = load i8*, i8** %arrayidx41, align 8, !dbg !4246
  %tobool = icmp ne i8* %39, null, !dbg !4246
  br i1 %tobool, label %if.then, label %if.end, !dbg !4249

if.then:                                          ; preds = %for.body
  %40 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4250
  %data42 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %40, i32 0, i32 0, !dbg !4251
  %arrayidx43 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data42, i64 0, i64 3, !dbg !4250
  %41 = load i8*, i8** %arrayidx43, align 8, !dbg !4250
  %42 = load i32, i32* %y, align 4, !dbg !4252
  %43 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4253
  %linesize44 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %43, i32 0, i32 1, !dbg !4254
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize44, i64 0, i64 3, !dbg !4253
  %44 = load i32, i32* %arrayidx45, align 4, !dbg !4253
  %mul46 = mul nsw i32 %42, %44, !dbg !4255
  %idx.ext47 = sext i32 %mul46 to i64, !dbg !4256
  %add.ptr48 = getelementptr inbounds i8, i8* %41, i64 %idx.ext47, !dbg !4256
  %45 = load i32, i32* %x, align 4, !dbg !4257
  %idx.ext49 = sext i32 %45 to i64, !dbg !4258
  %add.ptr50 = getelementptr inbounds i8, i8* %add.ptr48, i64 %idx.ext49, !dbg !4258
  %46 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4259
  %linesize51 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %46, i32 0, i32 1, !dbg !4260
  %arrayidx52 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize51, i64 0, i64 3, !dbg !4259
  %47 = load i32, i32* %arrayidx52, align 4, !dbg !4259
  %48 = load float, float* %o, align 4, !dbg !4261
  call void @draw_dots(i8* %add.ptr50, i32 %47, i32 255, float %48), !dbg !4262
  br label %if.end, !dbg !4262

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4263

for.inc:                                          ; preds = %if.end
  %49 = load i32, i32* %i, align 4, !dbg !4264
  %inc = add nsw i32 %49, 1, !dbg !4264
  store i32 %inc, i32* %i, align 4, !dbg !4264
  br label %for.cond, !dbg !4266, !llvm.loop !4267

for.end:                                          ; preds = %for.cond
  %50 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !4269
  %flags = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %50, i32 0, i32 24, !dbg !4271
  %51 = load i32, i32* %flags, align 8, !dbg !4271
  %and = and i32 %51, 1, !dbg !4272
  %tobool53 = icmp ne i32 %and, 0, !dbg !4272
  br i1 %tobool53, label %if.then54, label %if.end118, !dbg !4273

if.then54:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %x55, metadata !4274, metadata !909), !dbg !4276
  %52 = load i32, i32* %X.addr, align 4, !dbg !4277
  %idxprom56 = sext i32 %52 to i64, !dbg !4278
  %53 = load i32, i32* %P.addr, align 4, !dbg !4279
  %idxprom57 = sext i32 %53 to i64, !dbg !4278
  %arrayidx58 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom57, !dbg !4278
  %arrayidx59 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx58, i64 0, i64 12, !dbg !4278
  %arrayidx60 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx59, i64 0, i64 %idxprom56, !dbg !4278
  %54 = load i16, i16* %arrayidx60, align 2, !dbg !4278
  %conv61 = zext i16 %54 to i32, !dbg !4278
  store i32 %conv61, i32* %x55, align 4, !dbg !4276
  call void @llvm.dbg.declare(metadata i32* %y62, metadata !4280, metadata !909), !dbg !4281
  %55 = load i32, i32* %Y.addr, align 4, !dbg !4282
  %idxprom63 = sext i32 %55 to i64, !dbg !4283
  %56 = load i32, i32* %P.addr, align 4, !dbg !4284
  %idxprom64 = sext i32 %56 to i64, !dbg !4283
  %arrayidx65 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom64, !dbg !4283
  %arrayidx66 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx65, i64 0, i64 12, !dbg !4283
  %arrayidx67 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx66, i64 0, i64 %idxprom63, !dbg !4283
  %57 = load i16, i16* %arrayidx67, align 2, !dbg !4283
  %conv68 = zext i16 %57 to i32, !dbg !4283
  store i32 %conv68, i32* %y62, align 4, !dbg !4281
  %58 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4285
  %data69 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %58, i32 0, i32 0, !dbg !4286
  %arrayidx70 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data69, i64 0, i64 0, !dbg !4285
  %59 = load i8*, i8** %arrayidx70, align 8, !dbg !4285
  %60 = load i32, i32* %y62, align 4, !dbg !4287
  %61 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4288
  %linesize71 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %61, i32 0, i32 1, !dbg !4289
  %arrayidx72 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize71, i64 0, i64 0, !dbg !4288
  %62 = load i32, i32* %arrayidx72, align 8, !dbg !4288
  %mul73 = mul nsw i32 %60, %62, !dbg !4290
  %idx.ext74 = sext i32 %mul73 to i64, !dbg !4291
  %add.ptr75 = getelementptr inbounds i8, i8* %59, i64 %idx.ext74, !dbg !4291
  %63 = load i32, i32* %x55, align 4, !dbg !4292
  %idx.ext76 = sext i32 %63 to i64, !dbg !4293
  %add.ptr77 = getelementptr inbounds i8, i8* %add.ptr75, i64 %idx.ext76, !dbg !4293
  %64 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4294
  %linesize78 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %64, i32 0, i32 1, !dbg !4295
  %arrayidx79 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize78, i64 0, i64 0, !dbg !4294
  %65 = load i32, i32* %arrayidx79, align 8, !dbg !4294
  %66 = load float, float* %o, align 4, !dbg !4296
  call void @draw_dots(i8* %add.ptr77, i32 %65, i32 128, float %66), !dbg !4297
  %67 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4298
  %data80 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %67, i32 0, i32 0, !dbg !4299
  %arrayidx81 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data80, i64 0, i64 1, !dbg !4298
  %68 = load i8*, i8** %arrayidx81, align 8, !dbg !4298
  %69 = load i32, i32* %y62, align 4, !dbg !4300
  %70 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4301
  %linesize82 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %70, i32 0, i32 1, !dbg !4302
  %arrayidx83 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize82, i64 0, i64 1, !dbg !4301
  %71 = load i32, i32* %arrayidx83, align 4, !dbg !4301
  %mul84 = mul nsw i32 %69, %71, !dbg !4303
  %idx.ext85 = sext i32 %mul84 to i64, !dbg !4304
  %add.ptr86 = getelementptr inbounds i8, i8* %68, i64 %idx.ext85, !dbg !4304
  %72 = load i32, i32* %x55, align 4, !dbg !4305
  %idx.ext87 = sext i32 %72 to i64, !dbg !4306
  %add.ptr88 = getelementptr inbounds i8, i8* %add.ptr86, i64 %idx.ext87, !dbg !4306
  %73 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4307
  %linesize89 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %73, i32 0, i32 1, !dbg !4308
  %arrayidx90 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize89, i64 0, i64 1, !dbg !4307
  %74 = load i32, i32* %arrayidx90, align 4, !dbg !4307
  %75 = load float, float* %o, align 4, !dbg !4309
  call void @draw_dots(i8* %add.ptr88, i32 %74, i32 0, float %75), !dbg !4310
  %76 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4311
  %data91 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %76, i32 0, i32 0, !dbg !4312
  %arrayidx92 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data91, i64 0, i64 2, !dbg !4311
  %77 = load i8*, i8** %arrayidx92, align 8, !dbg !4311
  %78 = load i32, i32* %y62, align 4, !dbg !4313
  %79 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4314
  %linesize93 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %79, i32 0, i32 1, !dbg !4315
  %arrayidx94 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize93, i64 0, i64 2, !dbg !4314
  %80 = load i32, i32* %arrayidx94, align 8, !dbg !4314
  %mul95 = mul nsw i32 %78, %80, !dbg !4316
  %idx.ext96 = sext i32 %mul95 to i64, !dbg !4317
  %add.ptr97 = getelementptr inbounds i8, i8* %77, i64 %idx.ext96, !dbg !4317
  %81 = load i32, i32* %x55, align 4, !dbg !4318
  %idx.ext98 = sext i32 %81 to i64, !dbg !4319
  %add.ptr99 = getelementptr inbounds i8, i8* %add.ptr97, i64 %idx.ext98, !dbg !4319
  %82 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4320
  %linesize100 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %82, i32 0, i32 1, !dbg !4321
  %arrayidx101 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize100, i64 0, i64 2, !dbg !4320
  %83 = load i32, i32* %arrayidx101, align 8, !dbg !4320
  %84 = load float, float* %o, align 4, !dbg !4322
  call void @draw_dots(i8* %add.ptr99, i32 %83, i32 0, float %84), !dbg !4323
  %85 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4324
  %data102 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %85, i32 0, i32 0, !dbg !4326
  %arrayidx103 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data102, i64 0, i64 3, !dbg !4324
  %86 = load i8*, i8** %arrayidx103, align 8, !dbg !4324
  %tobool104 = icmp ne i8* %86, null, !dbg !4324
  br i1 %tobool104, label %if.then105, label %if.end117, !dbg !4327

if.then105:                                       ; preds = %if.then54
  %87 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4328
  %data106 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %87, i32 0, i32 0, !dbg !4329
  %arrayidx107 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data106, i64 0, i64 3, !dbg !4328
  %88 = load i8*, i8** %arrayidx107, align 8, !dbg !4328
  %89 = load i32, i32* %y62, align 4, !dbg !4330
  %90 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4331
  %linesize108 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %90, i32 0, i32 1, !dbg !4332
  %arrayidx109 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize108, i64 0, i64 3, !dbg !4331
  %91 = load i32, i32* %arrayidx109, align 4, !dbg !4331
  %mul110 = mul nsw i32 %89, %91, !dbg !4333
  %idx.ext111 = sext i32 %mul110 to i64, !dbg !4334
  %add.ptr112 = getelementptr inbounds i8, i8* %88, i64 %idx.ext111, !dbg !4334
  %92 = load i32, i32* %x55, align 4, !dbg !4335
  %idx.ext113 = sext i32 %92 to i64, !dbg !4336
  %add.ptr114 = getelementptr inbounds i8, i8* %add.ptr112, i64 %idx.ext113, !dbg !4336
  %93 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4337
  %linesize115 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %93, i32 0, i32 1, !dbg !4338
  %arrayidx116 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize115, i64 0, i64 3, !dbg !4337
  %94 = load i32, i32* %arrayidx116, align 4, !dbg !4337
  %95 = load float, float* %o, align 4, !dbg !4339
  call void @draw_dots(i8* %add.ptr114, i32 %94, i32 255, float %95), !dbg !4340
  br label %if.end117, !dbg !4340

if.end117:                                        ; preds = %if.then105, %if.then54
  br label %if.end118, !dbg !4341

if.end118:                                        ; preds = %if.end117, %for.end
  %96 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !4342
  %flags119 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %96, i32 0, i32 24, !dbg !4344
  %97 = load i32, i32* %flags119, align 8, !dbg !4344
  %and120 = and i32 %97, 2, !dbg !4345
  %tobool121 = icmp ne i32 %and120, 0, !dbg !4345
  br i1 %tobool121, label %if.then122, label %if.end186, !dbg !4346

if.then122:                                       ; preds = %if.end118
  call void @llvm.dbg.declare(metadata i32* %x123, metadata !4347, metadata !909), !dbg !4349
  %98 = load i32, i32* %X.addr, align 4, !dbg !4350
  %idxprom124 = sext i32 %98 to i64, !dbg !4351
  %99 = load i32, i32* %P.addr, align 4, !dbg !4352
  %idxprom125 = sext i32 %99 to i64, !dbg !4351
  %arrayidx126 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom125, !dbg !4351
  %arrayidx127 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx126, i64 0, i64 13, !dbg !4351
  %arrayidx128 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx127, i64 0, i64 %idxprom124, !dbg !4351
  %100 = load i16, i16* %arrayidx128, align 2, !dbg !4351
  %conv129 = zext i16 %100 to i32, !dbg !4351
  store i32 %conv129, i32* %x123, align 4, !dbg !4349
  call void @llvm.dbg.declare(metadata i32* %y130, metadata !4353, metadata !909), !dbg !4354
  %101 = load i32, i32* %Y.addr, align 4, !dbg !4355
  %idxprom131 = sext i32 %101 to i64, !dbg !4356
  %102 = load i32, i32* %P.addr, align 4, !dbg !4357
  %idxprom132 = sext i32 %102 to i64, !dbg !4356
  %arrayidx133 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom132, !dbg !4356
  %arrayidx134 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx133, i64 0, i64 13, !dbg !4356
  %arrayidx135 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx134, i64 0, i64 %idxprom131, !dbg !4356
  %103 = load i16, i16* %arrayidx135, align 2, !dbg !4356
  %conv136 = zext i16 %103 to i32, !dbg !4356
  store i32 %conv136, i32* %y130, align 4, !dbg !4354
  %104 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4358
  %data137 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %104, i32 0, i32 0, !dbg !4359
  %arrayidx138 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data137, i64 0, i64 0, !dbg !4358
  %105 = load i8*, i8** %arrayidx138, align 8, !dbg !4358
  %106 = load i32, i32* %y130, align 4, !dbg !4360
  %107 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4361
  %linesize139 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %107, i32 0, i32 1, !dbg !4362
  %arrayidx140 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize139, i64 0, i64 0, !dbg !4361
  %108 = load i32, i32* %arrayidx140, align 8, !dbg !4361
  %mul141 = mul nsw i32 %106, %108, !dbg !4363
  %idx.ext142 = sext i32 %mul141 to i64, !dbg !4364
  %add.ptr143 = getelementptr inbounds i8, i8* %105, i64 %idx.ext142, !dbg !4364
  %109 = load i32, i32* %x123, align 4, !dbg !4365
  %idx.ext144 = sext i32 %109 to i64, !dbg !4366
  %add.ptr145 = getelementptr inbounds i8, i8* %add.ptr143, i64 %idx.ext144, !dbg !4366
  %110 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4367
  %linesize146 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %110, i32 0, i32 1, !dbg !4368
  %arrayidx147 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize146, i64 0, i64 0, !dbg !4367
  %111 = load i32, i32* %arrayidx147, align 8, !dbg !4367
  %112 = load float, float* %o, align 4, !dbg !4369
  call void @draw_dots(i8* %add.ptr145, i32 %111, i32 128, float %112), !dbg !4370
  %113 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4371
  %data148 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %113, i32 0, i32 0, !dbg !4372
  %arrayidx149 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data148, i64 0, i64 1, !dbg !4371
  %114 = load i8*, i8** %arrayidx149, align 8, !dbg !4371
  %115 = load i32, i32* %y130, align 4, !dbg !4373
  %116 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4374
  %linesize150 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %116, i32 0, i32 1, !dbg !4375
  %arrayidx151 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize150, i64 0, i64 1, !dbg !4374
  %117 = load i32, i32* %arrayidx151, align 4, !dbg !4374
  %mul152 = mul nsw i32 %115, %117, !dbg !4376
  %idx.ext153 = sext i32 %mul152 to i64, !dbg !4377
  %add.ptr154 = getelementptr inbounds i8, i8* %114, i64 %idx.ext153, !dbg !4377
  %118 = load i32, i32* %x123, align 4, !dbg !4378
  %idx.ext155 = sext i32 %118 to i64, !dbg !4379
  %add.ptr156 = getelementptr inbounds i8, i8* %add.ptr154, i64 %idx.ext155, !dbg !4379
  %119 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4380
  %linesize157 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %119, i32 0, i32 1, !dbg !4381
  %arrayidx158 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize157, i64 0, i64 1, !dbg !4380
  %120 = load i32, i32* %arrayidx158, align 4, !dbg !4380
  %121 = load float, float* %o, align 4, !dbg !4382
  call void @draw_dots(i8* %add.ptr156, i32 %120, i32 0, float %121), !dbg !4383
  %122 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4384
  %data159 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %122, i32 0, i32 0, !dbg !4385
  %arrayidx160 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data159, i64 0, i64 2, !dbg !4384
  %123 = load i8*, i8** %arrayidx160, align 8, !dbg !4384
  %124 = load i32, i32* %y130, align 4, !dbg !4386
  %125 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4387
  %linesize161 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %125, i32 0, i32 1, !dbg !4388
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize161, i64 0, i64 2, !dbg !4387
  %126 = load i32, i32* %arrayidx162, align 8, !dbg !4387
  %mul163 = mul nsw i32 %124, %126, !dbg !4389
  %idx.ext164 = sext i32 %mul163 to i64, !dbg !4390
  %add.ptr165 = getelementptr inbounds i8, i8* %123, i64 %idx.ext164, !dbg !4390
  %127 = load i32, i32* %x123, align 4, !dbg !4391
  %idx.ext166 = sext i32 %127 to i64, !dbg !4392
  %add.ptr167 = getelementptr inbounds i8, i8* %add.ptr165, i64 %idx.ext166, !dbg !4392
  %128 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4393
  %linesize168 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %128, i32 0, i32 1, !dbg !4394
  %arrayidx169 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize168, i64 0, i64 2, !dbg !4393
  %129 = load i32, i32* %arrayidx169, align 8, !dbg !4393
  %130 = load float, float* %o, align 4, !dbg !4395
  call void @draw_dots(i8* %add.ptr167, i32 %129, i32 0, float %130), !dbg !4396
  %131 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4397
  %data170 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %131, i32 0, i32 0, !dbg !4399
  %arrayidx171 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data170, i64 0, i64 3, !dbg !4397
  %132 = load i8*, i8** %arrayidx171, align 8, !dbg !4397
  %tobool172 = icmp ne i8* %132, null, !dbg !4397
  br i1 %tobool172, label %if.then173, label %if.end185, !dbg !4400

if.then173:                                       ; preds = %if.then122
  %133 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4401
  %data174 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %133, i32 0, i32 0, !dbg !4402
  %arrayidx175 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data174, i64 0, i64 3, !dbg !4401
  %134 = load i8*, i8** %arrayidx175, align 8, !dbg !4401
  %135 = load i32, i32* %y130, align 4, !dbg !4403
  %136 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4404
  %linesize176 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %136, i32 0, i32 1, !dbg !4405
  %arrayidx177 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize176, i64 0, i64 3, !dbg !4404
  %137 = load i32, i32* %arrayidx177, align 4, !dbg !4404
  %mul178 = mul nsw i32 %135, %137, !dbg !4406
  %idx.ext179 = sext i32 %mul178 to i64, !dbg !4407
  %add.ptr180 = getelementptr inbounds i8, i8* %134, i64 %idx.ext179, !dbg !4407
  %138 = load i32, i32* %x123, align 4, !dbg !4408
  %idx.ext181 = sext i32 %138 to i64, !dbg !4409
  %add.ptr182 = getelementptr inbounds i8, i8* %add.ptr180, i64 %idx.ext181, !dbg !4409
  %139 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4410
  %linesize183 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %139, i32 0, i32 1, !dbg !4411
  %arrayidx184 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize183, i64 0, i64 3, !dbg !4410
  %140 = load i32, i32* %arrayidx184, align 4, !dbg !4410
  %141 = load float, float* %o, align 4, !dbg !4412
  call void @draw_dots(i8* %add.ptr182, i32 %140, i32 255, float %141), !dbg !4413
  br label %if.end185, !dbg !4413

if.end185:                                        ; preds = %if.then173, %if.then122
  br label %if.end186, !dbg !4414

if.end186:                                        ; preds = %if.end185, %if.end118
  store i32 0, i32* %i, align 4, !dbg !4415
  br label %for.cond187, !dbg !4416

for.cond187:                                      ; preds = %for.inc229, %if.end186
  %142 = load i32, i32* %i, align 4, !dbg !4417
  %cmp188 = icmp slt i32 %142, 6, !dbg !4419
  br i1 %cmp188, label %land.rhs, label %land.end, !dbg !4420

land.rhs:                                         ; preds = %for.cond187
  %143 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !4421
  %flags190 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %143, i32 0, i32 24, !dbg !4423
  %144 = load i32, i32* %flags190, align 8, !dbg !4423
  %and191 = and i32 %144, 4, !dbg !4424
  %tobool192 = icmp ne i32 %and191, 0, !dbg !4425
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond187
  %145 = phi i1 [ false, %for.cond187 ], [ %tobool192, %land.rhs ]
  br i1 %145, label %for.body193, label %for.end231, !dbg !4426

for.body193:                                      ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %x194, metadata !4428, metadata !909), !dbg !4429
  %146 = load i32, i32* %X.addr, align 4, !dbg !4430
  %idxprom195 = sext i32 %146 to i64, !dbg !4431
  %147 = load i32, i32* %i, align 4, !dbg !4432
  %idxprom196 = sext i32 %147 to i64, !dbg !4431
  %148 = load i32, i32* %P.addr, align 4, !dbg !4433
  %idxprom197 = sext i32 %148 to i64, !dbg !4431
  %arrayidx198 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom197, !dbg !4431
  %arrayidx199 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx198, i64 0, i64 %idxprom196, !dbg !4431
  %arrayidx200 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx199, i64 0, i64 %idxprom195, !dbg !4431
  %149 = load i16, i16* %arrayidx200, align 2, !dbg !4431
  %conv201 = zext i16 %149 to i32, !dbg !4431
  store i32 %conv201, i32* %x194, align 4, !dbg !4429
  call void @llvm.dbg.declare(metadata i32* %y202, metadata !4434, metadata !909), !dbg !4435
  %150 = load i32, i32* %Y.addr, align 4, !dbg !4436
  %idxprom203 = sext i32 %150 to i64, !dbg !4437
  %151 = load i32, i32* %i, align 4, !dbg !4438
  %idxprom204 = sext i32 %151 to i64, !dbg !4437
  %152 = load i32, i32* %P.addr, align 4, !dbg !4439
  %idxprom205 = sext i32 %152 to i64, !dbg !4437
  %arrayidx206 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom205, !dbg !4437
  %arrayidx207 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx206, i64 0, i64 %idxprom204, !dbg !4437
  %arrayidx208 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx207, i64 0, i64 %idxprom203, !dbg !4437
  %153 = load i16, i16* %arrayidx208, align 2, !dbg !4437
  %conv209 = zext i16 %153 to i32, !dbg !4437
  store i32 %conv209, i32* %y202, align 4, !dbg !4435
  %154 = load i32, i32* %x194, align 4, !dbg !4440
  %cmp210 = icmp sgt i32 %154, 128, !dbg !4442
  br i1 %cmp210, label %if.then212, label %if.else, !dbg !4443

if.then212:                                       ; preds = %for.body193
  %155 = load i32, i32* %x194, align 4, !dbg !4444
  %add = add nsw i32 %155, 8, !dbg !4444
  store i32 %add, i32* %x194, align 4, !dbg !4444
  br label %if.end213, !dbg !4445

if.else:                                          ; preds = %for.body193
  %156 = load i32, i32* %x194, align 4, !dbg !4446
  %sub = sub nsw i32 %156, 14, !dbg !4446
  store i32 %sub, i32* %x194, align 4, !dbg !4446
  br label %if.end213

if.end213:                                        ; preds = %if.else, %if.then212
  %157 = load i32, i32* %y202, align 4, !dbg !4447
  %cmp214 = icmp sgt i32 %157, 128, !dbg !4449
  br i1 %cmp214, label %if.then216, label %if.else218, !dbg !4450

if.then216:                                       ; preds = %if.end213
  %158 = load i32, i32* %y202, align 4, !dbg !4451
  %add217 = add nsw i32 %158, 8, !dbg !4451
  store i32 %add217, i32* %y202, align 4, !dbg !4451
  br label %if.end220, !dbg !4452

if.else218:                                       ; preds = %if.end213
  %159 = load i32, i32* %y202, align 4, !dbg !4453
  %sub219 = sub nsw i32 %159, 14, !dbg !4453
  store i32 %sub219, i32* %y202, align 4, !dbg !4453
  br label %if.end220

if.end220:                                        ; preds = %if.else218, %if.then216
  %160 = load i32, i32* %x194, align 4, !dbg !4454
  %161 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4455
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %161, i32 0, i32 3, !dbg !4456
  %162 = load i32, i32* %width, align 8, !dbg !4456
  %sub221 = sub nsw i32 %162, 9, !dbg !4457
  store i32 %160, i32* %a.addr.i, align 4, !dbg !4458
  store i32 0, i32* %amin.addr.i, align 4, !dbg !4458
  store i32 %sub221, i32* %amax.addr.i, align 4, !dbg !4458
  %163 = load i32, i32* %a.addr.i, align 4, !dbg !4459
  %164 = load i32, i32* %amin.addr.i, align 4, !dbg !4461
  %cmp.i = icmp slt i32 %163, %164, !dbg !4462
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !4463

if.then.i:                                        ; preds = %if.end220
  %165 = load i32, i32* %amin.addr.i, align 4, !dbg !4464
  store i32 %165, i32* %retval.i, align 4, !dbg !4466
  br label %av_clip_c.exit, !dbg !4466

if.else.i:                                        ; preds = %if.end220
  %166 = load i32, i32* %a.addr.i, align 4, !dbg !4467
  %167 = load i32, i32* %amax.addr.i, align 4, !dbg !4469
  %cmp1.i = icmp sgt i32 %166, %167, !dbg !4470
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !4471

if.then2.i:                                       ; preds = %if.else.i
  %168 = load i32, i32* %amax.addr.i, align 4, !dbg !4472
  store i32 %168, i32* %retval.i, align 4, !dbg !4474
  br label %av_clip_c.exit, !dbg !4474

if.else3.i:                                       ; preds = %if.else.i
  %169 = load i32, i32* %a.addr.i, align 4, !dbg !4475
  store i32 %169, i32* %retval.i, align 4, !dbg !4476
  br label %av_clip_c.exit, !dbg !4476

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %170 = load i32, i32* %retval.i, align 4, !dbg !4477
  store i32 %170, i32* %x194, align 4, !dbg !4478
  %171 = load i32, i32* %y202, align 4, !dbg !4479
  %172 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4480
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %172, i32 0, i32 4, !dbg !4481
  %173 = load i32, i32* %height, align 4, !dbg !4481
  %sub222 = sub nsw i32 %173, 9, !dbg !4482
  store i32 %171, i32* %a.addr.i233, align 4, !dbg !4483
  store i32 0, i32* %amin.addr.i234, align 4, !dbg !4483
  store i32 %sub222, i32* %amax.addr.i235, align 4, !dbg !4483
  %174 = load i32, i32* %a.addr.i233, align 4, !dbg !4484
  %175 = load i32, i32* %amin.addr.i234, align 4, !dbg !4485
  %cmp.i236 = icmp slt i32 %174, %175, !dbg !4486
  br i1 %cmp.i236, label %if.then.i237, label %if.else.i239, !dbg !4487

if.then.i237:                                     ; preds = %av_clip_c.exit
  %176 = load i32, i32* %amin.addr.i234, align 4, !dbg !4488
  store i32 %176, i32* %retval.i232, align 4, !dbg !4489
  br label %av_clip_c.exit242, !dbg !4489

if.else.i239:                                     ; preds = %av_clip_c.exit
  %177 = load i32, i32* %a.addr.i233, align 4, !dbg !4490
  %178 = load i32, i32* %amax.addr.i235, align 4, !dbg !4491
  %cmp1.i238 = icmp sgt i32 %177, %178, !dbg !4492
  br i1 %cmp1.i238, label %if.then2.i240, label %if.else3.i241, !dbg !4493

if.then2.i240:                                    ; preds = %if.else.i239
  %179 = load i32, i32* %amax.addr.i235, align 4, !dbg !4494
  store i32 %179, i32* %retval.i232, align 4, !dbg !4495
  br label %av_clip_c.exit242, !dbg !4495

if.else3.i241:                                    ; preds = %if.else.i239
  %180 = load i32, i32* %a.addr.i233, align 4, !dbg !4496
  store i32 %180, i32* %retval.i232, align 4, !dbg !4497
  br label %av_clip_c.exit242, !dbg !4497

av_clip_c.exit242:                                ; preds = %if.then.i237, %if.then2.i240, %if.else3.i241
  %181 = load i32, i32* %retval.i232, align 4, !dbg !4498
  store i32 %181, i32* %y202, align 4, !dbg !4499
  %182 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4500
  %183 = load i32, i32* %x194, align 4, !dbg !4501
  %184 = load i32, i32* %y202, align 4, !dbg !4502
  %185 = load float, float* %o, align 4, !dbg !4503
  %186 = load float, float* %o, align 4, !dbg !4504
  %conv224 = fpext float %186 to double, !dbg !4504
  %sub225 = fsub double 1.000000e+00, %conv224, !dbg !4505
  %conv226 = fptrunc double %sub225 to float, !dbg !4506
  %187 = load i32, i32* %i, align 4, !dbg !4507
  %idxprom227 = sext i32 %187 to i64, !dbg !4508
  %arrayidx228 = getelementptr inbounds [6 x i8*], [6 x i8*]* @positions_name, i64 0, i64 %idxprom227, !dbg !4508
  %188 = load i8*, i8** %arrayidx228, align 8, !dbg !4508
  call void @draw_htext(%struct.AVFrame* %182, i32 %183, i32 %184, float %185, float %conv226, i8* %188, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @green_graticule.color, i32 0, i32 0)), !dbg !4509
  br label %for.inc229, !dbg !4510

for.inc229:                                       ; preds = %av_clip_c.exit242
  %189 = load i32, i32* %i, align 4, !dbg !4511
  %inc230 = add nsw i32 %189, 1, !dbg !4511
  store i32 %inc230, i32* %i, align 4, !dbg !4511
  br label %for.cond187, !dbg !4513, !llvm.loop !4514

for.end231:                                       ; preds = %land.end
  ret void, !dbg !4516
}

; Function Attrs: nounwind uwtable
define internal void @color_graticule(%struct.VectorscopeContext* %s, %struct.AVFrame* %out, i32 %X, i32 %Y, i32 %D, i32 %P) #1 !dbg !4517 {
entry:
  %retval.i297 = alloca i32, align 4
  %a.addr.i298 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i298, metadata !4149, metadata !909), !dbg !4518
  %amin.addr.i299 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i299, metadata !4159, metadata !909), !dbg !4523
  %amax.addr.i300 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i300, metadata !4161, metadata !909), !dbg !4524
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4149, metadata !909), !dbg !4525
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4159, metadata !909), !dbg !4527
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4161, metadata !909), !dbg !4528
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  %X.addr = alloca i32, align 4
  %Y.addr = alloca i32, align 4
  %D.addr = alloca i32, align 4
  %P.addr = alloca i32, align 4
  %o = alloca float, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %d = alloca i32, align 4
  %x71 = alloca i32, align 4
  %y78 = alloca i32, align 4
  %d85 = alloca i32, align 4
  %x155 = alloca i32, align 4
  %y162 = alloca i32, align 4
  %d169 = alloca i32, align 4
  %color = alloca [4 x i8], align 1
  %x242 = alloca i32, align 4
  %y250 = alloca i32, align 4
  %d258 = alloca i32, align 4
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !4529, metadata !909), !dbg !4530
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !4531, metadata !909), !dbg !4532
  store i32 %X, i32* %X.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %X.addr, metadata !4533, metadata !909), !dbg !4534
  store i32 %Y, i32* %Y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Y.addr, metadata !4535, metadata !909), !dbg !4536
  store i32 %D, i32* %D.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %D.addr, metadata !4537, metadata !909), !dbg !4538
  store i32 %P, i32* %P.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %P.addr, metadata !4539, metadata !909), !dbg !4540
  call void @llvm.dbg.declare(metadata float* %o, metadata !4541, metadata !909), !dbg !4542
  %0 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !4543
  %opacity = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %0, i32 0, i32 18, !dbg !4544
  %1 = load float, float* %opacity, align 8, !dbg !4544
  store float %1, float* %o, align 4, !dbg !4542
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4545, metadata !909), !dbg !4546
  store i32 0, i32* %i, align 4, !dbg !4547
  br label %for.cond, !dbg !4549

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4550
  %cmp = icmp slt i32 %2, 12, !dbg !4553
  br i1 %cmp, label %for.body, label %for.end, !dbg !4554

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4555, metadata !909), !dbg !4557
  %3 = load i32, i32* %X.addr, align 4, !dbg !4558
  %idxprom = sext i32 %3 to i64, !dbg !4559
  %4 = load i32, i32* %i, align 4, !dbg !4560
  %idxprom1 = sext i32 %4 to i64, !dbg !4559
  %5 = load i32, i32* %P.addr, align 4, !dbg !4561
  %idxprom2 = sext i32 %5 to i64, !dbg !4559
  %arrayidx = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom2, !dbg !4559
  %arrayidx3 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx, i64 0, i64 %idxprom1, !dbg !4559
  %arrayidx4 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx3, i64 0, i64 %idxprom, !dbg !4559
  %6 = load i16, i16* %arrayidx4, align 2, !dbg !4559
  %conv = zext i16 %6 to i32, !dbg !4559
  store i32 %conv, i32* %x, align 4, !dbg !4557
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4562, metadata !909), !dbg !4563
  %7 = load i32, i32* %Y.addr, align 4, !dbg !4564
  %idxprom5 = sext i32 %7 to i64, !dbg !4565
  %8 = load i32, i32* %i, align 4, !dbg !4566
  %idxprom6 = sext i32 %8 to i64, !dbg !4565
  %9 = load i32, i32* %P.addr, align 4, !dbg !4567
  %idxprom7 = sext i32 %9 to i64, !dbg !4565
  %arrayidx8 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom7, !dbg !4565
  %arrayidx9 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx8, i64 0, i64 %idxprom6, !dbg !4565
  %arrayidx10 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx9, i64 0, i64 %idxprom5, !dbg !4565
  %10 = load i16, i16* %arrayidx10, align 2, !dbg !4565
  %conv11 = zext i16 %10 to i32, !dbg !4565
  store i32 %conv11, i32* %y, align 4, !dbg !4563
  call void @llvm.dbg.declare(metadata i32* %d, metadata !4568, metadata !909), !dbg !4569
  %11 = load i32, i32* %D.addr, align 4, !dbg !4570
  %idxprom12 = sext i32 %11 to i64, !dbg !4571
  %12 = load i32, i32* %i, align 4, !dbg !4572
  %idxprom13 = sext i32 %12 to i64, !dbg !4571
  %13 = load i32, i32* %P.addr, align 4, !dbg !4573
  %idxprom14 = sext i32 %13 to i64, !dbg !4571
  %arrayidx15 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom14, !dbg !4571
  %arrayidx16 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx15, i64 0, i64 %idxprom13, !dbg !4571
  %arrayidx17 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx16, i64 0, i64 %idxprom12, !dbg !4571
  %14 = load i16, i16* %arrayidx17, align 2, !dbg !4571
  %conv18 = zext i16 %14 to i32, !dbg !4571
  store i32 %conv18, i32* %d, align 4, !dbg !4569
  %15 = load i32, i32* %D.addr, align 4, !dbg !4574
  %idxprom19 = sext i32 %15 to i64, !dbg !4575
  %16 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4575
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 0, !dbg !4576
  %arrayidx20 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom19, !dbg !4575
  %17 = load i8*, i8** %arrayidx20, align 8, !dbg !4575
  %18 = load i32, i32* %y, align 4, !dbg !4577
  %19 = load i32, i32* %D.addr, align 4, !dbg !4578
  %idxprom21 = sext i32 %19 to i64, !dbg !4579
  %20 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4579
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 1, !dbg !4580
  %arrayidx22 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom21, !dbg !4579
  %21 = load i32, i32* %arrayidx22, align 4, !dbg !4579
  %mul = mul nsw i32 %18, %21, !dbg !4581
  %idx.ext = sext i32 %mul to i64, !dbg !4582
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !4582
  %22 = load i32, i32* %x, align 4, !dbg !4583
  %idx.ext23 = sext i32 %22 to i64, !dbg !4584
  %add.ptr24 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext23, !dbg !4584
  %23 = load i32, i32* %D.addr, align 4, !dbg !4585
  %idxprom25 = sext i32 %23 to i64, !dbg !4586
  %24 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4586
  %linesize26 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %24, i32 0, i32 1, !dbg !4587
  %arrayidx27 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize26, i64 0, i64 %idxprom25, !dbg !4586
  %25 = load i32, i32* %arrayidx27, align 4, !dbg !4586
  %26 = load i32, i32* %d, align 4, !dbg !4588
  %27 = load float, float* %o, align 4, !dbg !4589
  call void @draw_dots(i8* %add.ptr24, i32 %25, i32 %26, float %27), !dbg !4590
  %28 = load i32, i32* %X.addr, align 4, !dbg !4591
  %idxprom28 = sext i32 %28 to i64, !dbg !4592
  %29 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4592
  %data29 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %29, i32 0, i32 0, !dbg !4593
  %arrayidx30 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data29, i64 0, i64 %idxprom28, !dbg !4592
  %30 = load i8*, i8** %arrayidx30, align 8, !dbg !4592
  %31 = load i32, i32* %y, align 4, !dbg !4594
  %32 = load i32, i32* %X.addr, align 4, !dbg !4595
  %idxprom31 = sext i32 %32 to i64, !dbg !4596
  %33 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4596
  %linesize32 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %33, i32 0, i32 1, !dbg !4597
  %arrayidx33 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize32, i64 0, i64 %idxprom31, !dbg !4596
  %34 = load i32, i32* %arrayidx33, align 4, !dbg !4596
  %mul34 = mul nsw i32 %31, %34, !dbg !4598
  %idx.ext35 = sext i32 %mul34 to i64, !dbg !4599
  %add.ptr36 = getelementptr inbounds i8, i8* %30, i64 %idx.ext35, !dbg !4599
  %35 = load i32, i32* %x, align 4, !dbg !4600
  %idx.ext37 = sext i32 %35 to i64, !dbg !4601
  %add.ptr38 = getelementptr inbounds i8, i8* %add.ptr36, i64 %idx.ext37, !dbg !4601
  %36 = load i32, i32* %X.addr, align 4, !dbg !4602
  %idxprom39 = sext i32 %36 to i64, !dbg !4603
  %37 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4603
  %linesize40 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %37, i32 0, i32 1, !dbg !4604
  %arrayidx41 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize40, i64 0, i64 %idxprom39, !dbg !4603
  %38 = load i32, i32* %arrayidx41, align 4, !dbg !4603
  %39 = load i32, i32* %x, align 4, !dbg !4605
  %40 = load float, float* %o, align 4, !dbg !4606
  call void @draw_dots(i8* %add.ptr38, i32 %38, i32 %39, float %40), !dbg !4607
  %41 = load i32, i32* %Y.addr, align 4, !dbg !4608
  %idxprom42 = sext i32 %41 to i64, !dbg !4609
  %42 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4609
  %data43 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %42, i32 0, i32 0, !dbg !4610
  %arrayidx44 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data43, i64 0, i64 %idxprom42, !dbg !4609
  %43 = load i8*, i8** %arrayidx44, align 8, !dbg !4609
  %44 = load i32, i32* %y, align 4, !dbg !4611
  %45 = load i32, i32* %Y.addr, align 4, !dbg !4612
  %idxprom45 = sext i32 %45 to i64, !dbg !4613
  %46 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4613
  %linesize46 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %46, i32 0, i32 1, !dbg !4614
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize46, i64 0, i64 %idxprom45, !dbg !4613
  %47 = load i32, i32* %arrayidx47, align 4, !dbg !4613
  %mul48 = mul nsw i32 %44, %47, !dbg !4615
  %idx.ext49 = sext i32 %mul48 to i64, !dbg !4616
  %add.ptr50 = getelementptr inbounds i8, i8* %43, i64 %idx.ext49, !dbg !4616
  %48 = load i32, i32* %x, align 4, !dbg !4617
  %idx.ext51 = sext i32 %48 to i64, !dbg !4618
  %add.ptr52 = getelementptr inbounds i8, i8* %add.ptr50, i64 %idx.ext51, !dbg !4618
  %49 = load i32, i32* %Y.addr, align 4, !dbg !4619
  %idxprom53 = sext i32 %49 to i64, !dbg !4620
  %50 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4620
  %linesize54 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %50, i32 0, i32 1, !dbg !4621
  %arrayidx55 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize54, i64 0, i64 %idxprom53, !dbg !4620
  %51 = load i32, i32* %arrayidx55, align 4, !dbg !4620
  %52 = load i32, i32* %y, align 4, !dbg !4622
  %53 = load float, float* %o, align 4, !dbg !4623
  call void @draw_dots(i8* %add.ptr52, i32 %51, i32 %52, float %53), !dbg !4624
  %54 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4625
  %data56 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %54, i32 0, i32 0, !dbg !4627
  %arrayidx57 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data56, i64 0, i64 3, !dbg !4625
  %55 = load i8*, i8** %arrayidx57, align 8, !dbg !4625
  %tobool = icmp ne i8* %55, null, !dbg !4625
  br i1 %tobool, label %if.then, label %if.end, !dbg !4628

if.then:                                          ; preds = %for.body
  %56 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4629
  %data58 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %56, i32 0, i32 0, !dbg !4630
  %arrayidx59 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data58, i64 0, i64 3, !dbg !4629
  %57 = load i8*, i8** %arrayidx59, align 8, !dbg !4629
  %58 = load i32, i32* %y, align 4, !dbg !4631
  %59 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4632
  %linesize60 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %59, i32 0, i32 1, !dbg !4633
  %arrayidx61 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize60, i64 0, i64 3, !dbg !4632
  %60 = load i32, i32* %arrayidx61, align 4, !dbg !4632
  %mul62 = mul nsw i32 %58, %60, !dbg !4634
  %idx.ext63 = sext i32 %mul62 to i64, !dbg !4635
  %add.ptr64 = getelementptr inbounds i8, i8* %57, i64 %idx.ext63, !dbg !4635
  %61 = load i32, i32* %x, align 4, !dbg !4636
  %idx.ext65 = sext i32 %61 to i64, !dbg !4637
  %add.ptr66 = getelementptr inbounds i8, i8* %add.ptr64, i64 %idx.ext65, !dbg !4637
  %62 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4638
  %linesize67 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %62, i32 0, i32 1, !dbg !4639
  %arrayidx68 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize67, i64 0, i64 3, !dbg !4638
  %63 = load i32, i32* %arrayidx68, align 4, !dbg !4638
  %64 = load float, float* %o, align 4, !dbg !4640
  call void @draw_dots(i8* %add.ptr66, i32 %63, i32 255, float %64), !dbg !4641
  br label %if.end, !dbg !4641

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4642

for.inc:                                          ; preds = %if.end
  %65 = load i32, i32* %i, align 4, !dbg !4643
  %inc = add nsw i32 %65, 1, !dbg !4643
  store i32 %inc, i32* %i, align 4, !dbg !4643
  br label %for.cond, !dbg !4645, !llvm.loop !4646

for.end:                                          ; preds = %for.cond
  %66 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !4648
  %flags = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %66, i32 0, i32 24, !dbg !4650
  %67 = load i32, i32* %flags, align 8, !dbg !4650
  %and = and i32 %67, 1, !dbg !4651
  %tobool69 = icmp ne i32 %and, 0, !dbg !4651
  br i1 %tobool69, label %if.then70, label %if.end150, !dbg !4652

if.then70:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %x71, metadata !4653, metadata !909), !dbg !4655
  %68 = load i32, i32* %X.addr, align 4, !dbg !4656
  %idxprom72 = sext i32 %68 to i64, !dbg !4657
  %69 = load i32, i32* %P.addr, align 4, !dbg !4658
  %idxprom73 = sext i32 %69 to i64, !dbg !4657
  %arrayidx74 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom73, !dbg !4657
  %arrayidx75 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx74, i64 0, i64 12, !dbg !4657
  %arrayidx76 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx75, i64 0, i64 %idxprom72, !dbg !4657
  %70 = load i16, i16* %arrayidx76, align 2, !dbg !4657
  %conv77 = zext i16 %70 to i32, !dbg !4657
  store i32 %conv77, i32* %x71, align 4, !dbg !4655
  call void @llvm.dbg.declare(metadata i32* %y78, metadata !4659, metadata !909), !dbg !4660
  %71 = load i32, i32* %Y.addr, align 4, !dbg !4661
  %idxprom79 = sext i32 %71 to i64, !dbg !4662
  %72 = load i32, i32* %P.addr, align 4, !dbg !4663
  %idxprom80 = sext i32 %72 to i64, !dbg !4662
  %arrayidx81 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom80, !dbg !4662
  %arrayidx82 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx81, i64 0, i64 12, !dbg !4662
  %arrayidx83 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx82, i64 0, i64 %idxprom79, !dbg !4662
  %73 = load i16, i16* %arrayidx83, align 2, !dbg !4662
  %conv84 = zext i16 %73 to i32, !dbg !4662
  store i32 %conv84, i32* %y78, align 4, !dbg !4660
  call void @llvm.dbg.declare(metadata i32* %d85, metadata !4664, metadata !909), !dbg !4665
  %74 = load i32, i32* %D.addr, align 4, !dbg !4666
  %idxprom86 = sext i32 %74 to i64, !dbg !4667
  %75 = load i32, i32* %P.addr, align 4, !dbg !4668
  %idxprom87 = sext i32 %75 to i64, !dbg !4667
  %arrayidx88 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom87, !dbg !4667
  %arrayidx89 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx88, i64 0, i64 12, !dbg !4667
  %arrayidx90 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx89, i64 0, i64 %idxprom86, !dbg !4667
  %76 = load i16, i16* %arrayidx90, align 2, !dbg !4667
  %conv91 = zext i16 %76 to i32, !dbg !4667
  store i32 %conv91, i32* %d85, align 4, !dbg !4665
  %77 = load i32, i32* %D.addr, align 4, !dbg !4669
  %idxprom92 = sext i32 %77 to i64, !dbg !4670
  %78 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4670
  %data93 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %78, i32 0, i32 0, !dbg !4671
  %arrayidx94 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data93, i64 0, i64 %idxprom92, !dbg !4670
  %79 = load i8*, i8** %arrayidx94, align 8, !dbg !4670
  %80 = load i32, i32* %y78, align 4, !dbg !4672
  %81 = load i32, i32* %D.addr, align 4, !dbg !4673
  %idxprom95 = sext i32 %81 to i64, !dbg !4674
  %82 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4674
  %linesize96 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %82, i32 0, i32 1, !dbg !4675
  %arrayidx97 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize96, i64 0, i64 %idxprom95, !dbg !4674
  %83 = load i32, i32* %arrayidx97, align 4, !dbg !4674
  %mul98 = mul nsw i32 %80, %83, !dbg !4676
  %idx.ext99 = sext i32 %mul98 to i64, !dbg !4677
  %add.ptr100 = getelementptr inbounds i8, i8* %79, i64 %idx.ext99, !dbg !4677
  %84 = load i32, i32* %x71, align 4, !dbg !4678
  %idx.ext101 = sext i32 %84 to i64, !dbg !4679
  %add.ptr102 = getelementptr inbounds i8, i8* %add.ptr100, i64 %idx.ext101, !dbg !4679
  %85 = load i32, i32* %D.addr, align 4, !dbg !4680
  %idxprom103 = sext i32 %85 to i64, !dbg !4681
  %86 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4681
  %linesize104 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %86, i32 0, i32 1, !dbg !4682
  %arrayidx105 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize104, i64 0, i64 %idxprom103, !dbg !4681
  %87 = load i32, i32* %arrayidx105, align 4, !dbg !4681
  %88 = load i32, i32* %d85, align 4, !dbg !4683
  %89 = load float, float* %o, align 4, !dbg !4684
  call void @draw_dots(i8* %add.ptr102, i32 %87, i32 %88, float %89), !dbg !4685
  %90 = load i32, i32* %X.addr, align 4, !dbg !4686
  %idxprom106 = sext i32 %90 to i64, !dbg !4687
  %91 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4687
  %data107 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %91, i32 0, i32 0, !dbg !4688
  %arrayidx108 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data107, i64 0, i64 %idxprom106, !dbg !4687
  %92 = load i8*, i8** %arrayidx108, align 8, !dbg !4687
  %93 = load i32, i32* %y78, align 4, !dbg !4689
  %94 = load i32, i32* %X.addr, align 4, !dbg !4690
  %idxprom109 = sext i32 %94 to i64, !dbg !4691
  %95 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4691
  %linesize110 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %95, i32 0, i32 1, !dbg !4692
  %arrayidx111 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize110, i64 0, i64 %idxprom109, !dbg !4691
  %96 = load i32, i32* %arrayidx111, align 4, !dbg !4691
  %mul112 = mul nsw i32 %93, %96, !dbg !4693
  %idx.ext113 = sext i32 %mul112 to i64, !dbg !4694
  %add.ptr114 = getelementptr inbounds i8, i8* %92, i64 %idx.ext113, !dbg !4694
  %97 = load i32, i32* %x71, align 4, !dbg !4695
  %idx.ext115 = sext i32 %97 to i64, !dbg !4696
  %add.ptr116 = getelementptr inbounds i8, i8* %add.ptr114, i64 %idx.ext115, !dbg !4696
  %98 = load i32, i32* %X.addr, align 4, !dbg !4697
  %idxprom117 = sext i32 %98 to i64, !dbg !4698
  %99 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4698
  %linesize118 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %99, i32 0, i32 1, !dbg !4699
  %arrayidx119 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize118, i64 0, i64 %idxprom117, !dbg !4698
  %100 = load i32, i32* %arrayidx119, align 4, !dbg !4698
  %101 = load i32, i32* %x71, align 4, !dbg !4700
  %102 = load float, float* %o, align 4, !dbg !4701
  call void @draw_dots(i8* %add.ptr116, i32 %100, i32 %101, float %102), !dbg !4702
  %103 = load i32, i32* %Y.addr, align 4, !dbg !4703
  %idxprom120 = sext i32 %103 to i64, !dbg !4704
  %104 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4704
  %data121 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %104, i32 0, i32 0, !dbg !4705
  %arrayidx122 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data121, i64 0, i64 %idxprom120, !dbg !4704
  %105 = load i8*, i8** %arrayidx122, align 8, !dbg !4704
  %106 = load i32, i32* %y78, align 4, !dbg !4706
  %107 = load i32, i32* %Y.addr, align 4, !dbg !4707
  %idxprom123 = sext i32 %107 to i64, !dbg !4708
  %108 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4708
  %linesize124 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %108, i32 0, i32 1, !dbg !4709
  %arrayidx125 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize124, i64 0, i64 %idxprom123, !dbg !4708
  %109 = load i32, i32* %arrayidx125, align 4, !dbg !4708
  %mul126 = mul nsw i32 %106, %109, !dbg !4710
  %idx.ext127 = sext i32 %mul126 to i64, !dbg !4711
  %add.ptr128 = getelementptr inbounds i8, i8* %105, i64 %idx.ext127, !dbg !4711
  %110 = load i32, i32* %x71, align 4, !dbg !4712
  %idx.ext129 = sext i32 %110 to i64, !dbg !4713
  %add.ptr130 = getelementptr inbounds i8, i8* %add.ptr128, i64 %idx.ext129, !dbg !4713
  %111 = load i32, i32* %Y.addr, align 4, !dbg !4714
  %idxprom131 = sext i32 %111 to i64, !dbg !4715
  %112 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4715
  %linesize132 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %112, i32 0, i32 1, !dbg !4716
  %arrayidx133 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize132, i64 0, i64 %idxprom131, !dbg !4715
  %113 = load i32, i32* %arrayidx133, align 4, !dbg !4715
  %114 = load i32, i32* %y78, align 4, !dbg !4717
  %115 = load float, float* %o, align 4, !dbg !4718
  call void @draw_dots(i8* %add.ptr130, i32 %113, i32 %114, float %115), !dbg !4719
  %116 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4720
  %data134 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %116, i32 0, i32 0, !dbg !4722
  %arrayidx135 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data134, i64 0, i64 3, !dbg !4720
  %117 = load i8*, i8** %arrayidx135, align 8, !dbg !4720
  %tobool136 = icmp ne i8* %117, null, !dbg !4720
  br i1 %tobool136, label %if.then137, label %if.end149, !dbg !4723

if.then137:                                       ; preds = %if.then70
  %118 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4724
  %data138 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %118, i32 0, i32 0, !dbg !4725
  %arrayidx139 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data138, i64 0, i64 3, !dbg !4724
  %119 = load i8*, i8** %arrayidx139, align 8, !dbg !4724
  %120 = load i32, i32* %y78, align 4, !dbg !4726
  %121 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4727
  %linesize140 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %121, i32 0, i32 1, !dbg !4728
  %arrayidx141 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize140, i64 0, i64 3, !dbg !4727
  %122 = load i32, i32* %arrayidx141, align 4, !dbg !4727
  %mul142 = mul nsw i32 %120, %122, !dbg !4729
  %idx.ext143 = sext i32 %mul142 to i64, !dbg !4730
  %add.ptr144 = getelementptr inbounds i8, i8* %119, i64 %idx.ext143, !dbg !4730
  %123 = load i32, i32* %x71, align 4, !dbg !4731
  %idx.ext145 = sext i32 %123 to i64, !dbg !4732
  %add.ptr146 = getelementptr inbounds i8, i8* %add.ptr144, i64 %idx.ext145, !dbg !4732
  %124 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4733
  %linesize147 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %124, i32 0, i32 1, !dbg !4734
  %arrayidx148 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize147, i64 0, i64 3, !dbg !4733
  %125 = load i32, i32* %arrayidx148, align 4, !dbg !4733
  %126 = load float, float* %o, align 4, !dbg !4735
  call void @draw_dots(i8* %add.ptr146, i32 %125, i32 255, float %126), !dbg !4736
  br label %if.end149, !dbg !4736

if.end149:                                        ; preds = %if.then137, %if.then70
  br label %if.end150, !dbg !4737

if.end150:                                        ; preds = %if.end149, %for.end
  %127 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !4738
  %flags151 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %127, i32 0, i32 24, !dbg !4740
  %128 = load i32, i32* %flags151, align 8, !dbg !4740
  %and152 = and i32 %128, 2, !dbg !4741
  %tobool153 = icmp ne i32 %and152, 0, !dbg !4741
  br i1 %tobool153, label %if.then154, label %if.end234, !dbg !4742

if.then154:                                       ; preds = %if.end150
  call void @llvm.dbg.declare(metadata i32* %x155, metadata !4743, metadata !909), !dbg !4745
  %129 = load i32, i32* %X.addr, align 4, !dbg !4746
  %idxprom156 = sext i32 %129 to i64, !dbg !4747
  %130 = load i32, i32* %P.addr, align 4, !dbg !4748
  %idxprom157 = sext i32 %130 to i64, !dbg !4747
  %arrayidx158 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom157, !dbg !4747
  %arrayidx159 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx158, i64 0, i64 13, !dbg !4747
  %arrayidx160 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx159, i64 0, i64 %idxprom156, !dbg !4747
  %131 = load i16, i16* %arrayidx160, align 2, !dbg !4747
  %conv161 = zext i16 %131 to i32, !dbg !4747
  store i32 %conv161, i32* %x155, align 4, !dbg !4745
  call void @llvm.dbg.declare(metadata i32* %y162, metadata !4749, metadata !909), !dbg !4750
  %132 = load i32, i32* %Y.addr, align 4, !dbg !4751
  %idxprom163 = sext i32 %132 to i64, !dbg !4752
  %133 = load i32, i32* %P.addr, align 4, !dbg !4753
  %idxprom164 = sext i32 %133 to i64, !dbg !4752
  %arrayidx165 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom164, !dbg !4752
  %arrayidx166 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx165, i64 0, i64 13, !dbg !4752
  %arrayidx167 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx166, i64 0, i64 %idxprom163, !dbg !4752
  %134 = load i16, i16* %arrayidx167, align 2, !dbg !4752
  %conv168 = zext i16 %134 to i32, !dbg !4752
  store i32 %conv168, i32* %y162, align 4, !dbg !4750
  call void @llvm.dbg.declare(metadata i32* %d169, metadata !4754, metadata !909), !dbg !4755
  %135 = load i32, i32* %D.addr, align 4, !dbg !4756
  %idxprom170 = sext i32 %135 to i64, !dbg !4757
  %136 = load i32, i32* %P.addr, align 4, !dbg !4758
  %idxprom171 = sext i32 %136 to i64, !dbg !4757
  %arrayidx172 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom171, !dbg !4757
  %arrayidx173 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx172, i64 0, i64 12, !dbg !4757
  %arrayidx174 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx173, i64 0, i64 %idxprom170, !dbg !4757
  %137 = load i16, i16* %arrayidx174, align 2, !dbg !4757
  %conv175 = zext i16 %137 to i32, !dbg !4757
  store i32 %conv175, i32* %d169, align 4, !dbg !4755
  %138 = load i32, i32* %D.addr, align 4, !dbg !4759
  %idxprom176 = sext i32 %138 to i64, !dbg !4760
  %139 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4760
  %data177 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %139, i32 0, i32 0, !dbg !4761
  %arrayidx178 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data177, i64 0, i64 %idxprom176, !dbg !4760
  %140 = load i8*, i8** %arrayidx178, align 8, !dbg !4760
  %141 = load i32, i32* %y162, align 4, !dbg !4762
  %142 = load i32, i32* %D.addr, align 4, !dbg !4763
  %idxprom179 = sext i32 %142 to i64, !dbg !4764
  %143 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4764
  %linesize180 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %143, i32 0, i32 1, !dbg !4765
  %arrayidx181 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize180, i64 0, i64 %idxprom179, !dbg !4764
  %144 = load i32, i32* %arrayidx181, align 4, !dbg !4764
  %mul182 = mul nsw i32 %141, %144, !dbg !4766
  %idx.ext183 = sext i32 %mul182 to i64, !dbg !4767
  %add.ptr184 = getelementptr inbounds i8, i8* %140, i64 %idx.ext183, !dbg !4767
  %145 = load i32, i32* %x155, align 4, !dbg !4768
  %idx.ext185 = sext i32 %145 to i64, !dbg !4769
  %add.ptr186 = getelementptr inbounds i8, i8* %add.ptr184, i64 %idx.ext185, !dbg !4769
  %146 = load i32, i32* %D.addr, align 4, !dbg !4770
  %idxprom187 = sext i32 %146 to i64, !dbg !4771
  %147 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4771
  %linesize188 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %147, i32 0, i32 1, !dbg !4772
  %arrayidx189 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize188, i64 0, i64 %idxprom187, !dbg !4771
  %148 = load i32, i32* %arrayidx189, align 4, !dbg !4771
  %149 = load i32, i32* %d169, align 4, !dbg !4773
  %150 = load float, float* %o, align 4, !dbg !4774
  call void @draw_dots(i8* %add.ptr186, i32 %148, i32 %149, float %150), !dbg !4775
  %151 = load i32, i32* %X.addr, align 4, !dbg !4776
  %idxprom190 = sext i32 %151 to i64, !dbg !4777
  %152 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4777
  %data191 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %152, i32 0, i32 0, !dbg !4778
  %arrayidx192 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data191, i64 0, i64 %idxprom190, !dbg !4777
  %153 = load i8*, i8** %arrayidx192, align 8, !dbg !4777
  %154 = load i32, i32* %y162, align 4, !dbg !4779
  %155 = load i32, i32* %X.addr, align 4, !dbg !4780
  %idxprom193 = sext i32 %155 to i64, !dbg !4781
  %156 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4781
  %linesize194 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %156, i32 0, i32 1, !dbg !4782
  %arrayidx195 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize194, i64 0, i64 %idxprom193, !dbg !4781
  %157 = load i32, i32* %arrayidx195, align 4, !dbg !4781
  %mul196 = mul nsw i32 %154, %157, !dbg !4783
  %idx.ext197 = sext i32 %mul196 to i64, !dbg !4784
  %add.ptr198 = getelementptr inbounds i8, i8* %153, i64 %idx.ext197, !dbg !4784
  %158 = load i32, i32* %x155, align 4, !dbg !4785
  %idx.ext199 = sext i32 %158 to i64, !dbg !4786
  %add.ptr200 = getelementptr inbounds i8, i8* %add.ptr198, i64 %idx.ext199, !dbg !4786
  %159 = load i32, i32* %X.addr, align 4, !dbg !4787
  %idxprom201 = sext i32 %159 to i64, !dbg !4788
  %160 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4788
  %linesize202 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %160, i32 0, i32 1, !dbg !4789
  %arrayidx203 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize202, i64 0, i64 %idxprom201, !dbg !4788
  %161 = load i32, i32* %arrayidx203, align 4, !dbg !4788
  %162 = load i32, i32* %x155, align 4, !dbg !4790
  %163 = load float, float* %o, align 4, !dbg !4791
  call void @draw_dots(i8* %add.ptr200, i32 %161, i32 %162, float %163), !dbg !4792
  %164 = load i32, i32* %Y.addr, align 4, !dbg !4793
  %idxprom204 = sext i32 %164 to i64, !dbg !4794
  %165 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4794
  %data205 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %165, i32 0, i32 0, !dbg !4795
  %arrayidx206 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data205, i64 0, i64 %idxprom204, !dbg !4794
  %166 = load i8*, i8** %arrayidx206, align 8, !dbg !4794
  %167 = load i32, i32* %y162, align 4, !dbg !4796
  %168 = load i32, i32* %Y.addr, align 4, !dbg !4797
  %idxprom207 = sext i32 %168 to i64, !dbg !4798
  %169 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4798
  %linesize208 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %169, i32 0, i32 1, !dbg !4799
  %arrayidx209 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize208, i64 0, i64 %idxprom207, !dbg !4798
  %170 = load i32, i32* %arrayidx209, align 4, !dbg !4798
  %mul210 = mul nsw i32 %167, %170, !dbg !4800
  %idx.ext211 = sext i32 %mul210 to i64, !dbg !4801
  %add.ptr212 = getelementptr inbounds i8, i8* %166, i64 %idx.ext211, !dbg !4801
  %171 = load i32, i32* %x155, align 4, !dbg !4802
  %idx.ext213 = sext i32 %171 to i64, !dbg !4803
  %add.ptr214 = getelementptr inbounds i8, i8* %add.ptr212, i64 %idx.ext213, !dbg !4803
  %172 = load i32, i32* %Y.addr, align 4, !dbg !4804
  %idxprom215 = sext i32 %172 to i64, !dbg !4805
  %173 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4805
  %linesize216 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %173, i32 0, i32 1, !dbg !4806
  %arrayidx217 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize216, i64 0, i64 %idxprom215, !dbg !4805
  %174 = load i32, i32* %arrayidx217, align 4, !dbg !4805
  %175 = load i32, i32* %y162, align 4, !dbg !4807
  %176 = load float, float* %o, align 4, !dbg !4808
  call void @draw_dots(i8* %add.ptr214, i32 %174, i32 %175, float %176), !dbg !4809
  %177 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4810
  %data218 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %177, i32 0, i32 0, !dbg !4812
  %arrayidx219 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data218, i64 0, i64 3, !dbg !4810
  %178 = load i8*, i8** %arrayidx219, align 8, !dbg !4810
  %tobool220 = icmp ne i8* %178, null, !dbg !4810
  br i1 %tobool220, label %if.then221, label %if.end233, !dbg !4813

if.then221:                                       ; preds = %if.then154
  %179 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4814
  %data222 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %179, i32 0, i32 0, !dbg !4815
  %arrayidx223 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data222, i64 0, i64 3, !dbg !4814
  %180 = load i8*, i8** %arrayidx223, align 8, !dbg !4814
  %181 = load i32, i32* %y162, align 4, !dbg !4816
  %182 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4817
  %linesize224 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %182, i32 0, i32 1, !dbg !4818
  %arrayidx225 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize224, i64 0, i64 3, !dbg !4817
  %183 = load i32, i32* %arrayidx225, align 4, !dbg !4817
  %mul226 = mul nsw i32 %181, %183, !dbg !4819
  %idx.ext227 = sext i32 %mul226 to i64, !dbg !4820
  %add.ptr228 = getelementptr inbounds i8, i8* %180, i64 %idx.ext227, !dbg !4820
  %184 = load i32, i32* %x155, align 4, !dbg !4821
  %idx.ext229 = sext i32 %184 to i64, !dbg !4822
  %add.ptr230 = getelementptr inbounds i8, i8* %add.ptr228, i64 %idx.ext229, !dbg !4822
  %185 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4823
  %linesize231 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %185, i32 0, i32 1, !dbg !4824
  %arrayidx232 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize231, i64 0, i64 3, !dbg !4823
  %186 = load i32, i32* %arrayidx232, align 4, !dbg !4823
  %187 = load float, float* %o, align 4, !dbg !4825
  call void @draw_dots(i8* %add.ptr230, i32 %186, i32 255, float %187), !dbg !4826
  br label %if.end233, !dbg !4826

if.end233:                                        ; preds = %if.then221, %if.then154
  br label %if.end234, !dbg !4827

if.end234:                                        ; preds = %if.end233, %if.end150
  store i32 0, i32* %i, align 4, !dbg !4828
  br label %for.cond235, !dbg !4829

for.cond235:                                      ; preds = %for.inc294, %if.end234
  %188 = load i32, i32* %i, align 4, !dbg !4830
  %cmp236 = icmp slt i32 %188, 6, !dbg !4832
  br i1 %cmp236, label %land.rhs, label %land.end, !dbg !4833

land.rhs:                                         ; preds = %for.cond235
  %189 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !4834
  %flags238 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %189, i32 0, i32 24, !dbg !4836
  %190 = load i32, i32* %flags238, align 8, !dbg !4836
  %and239 = and i32 %190, 4, !dbg !4837
  %tobool240 = icmp ne i32 %and239, 0, !dbg !4838
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond235
  %191 = phi i1 [ false, %for.cond235 ], [ %tobool240, %land.rhs ]
  br i1 %191, label %for.body241, label %for.end296, !dbg !4839

for.body241:                                      ; preds = %land.end
  call void @llvm.dbg.declare(metadata [4 x i8]* %color, metadata !4841, metadata !909), !dbg !4843
  %192 = bitcast [4 x i8]* %color to i8*, !dbg !4843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %192, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @color_graticule.color, i32 0, i32 0), i64 4, i32 1, i1 false), !dbg !4843
  call void @llvm.dbg.declare(metadata i32* %x242, metadata !4844, metadata !909), !dbg !4845
  %193 = load i32, i32* %X.addr, align 4, !dbg !4846
  %idxprom243 = sext i32 %193 to i64, !dbg !4847
  %194 = load i32, i32* %i, align 4, !dbg !4848
  %idxprom244 = sext i32 %194 to i64, !dbg !4847
  %195 = load i32, i32* %P.addr, align 4, !dbg !4849
  %idxprom245 = sext i32 %195 to i64, !dbg !4847
  %arrayidx246 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom245, !dbg !4847
  %arrayidx247 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx246, i64 0, i64 %idxprom244, !dbg !4847
  %arrayidx248 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx247, i64 0, i64 %idxprom243, !dbg !4847
  %196 = load i16, i16* %arrayidx248, align 2, !dbg !4847
  %conv249 = zext i16 %196 to i32, !dbg !4847
  store i32 %conv249, i32* %x242, align 4, !dbg !4845
  call void @llvm.dbg.declare(metadata i32* %y250, metadata !4850, metadata !909), !dbg !4851
  %197 = load i32, i32* %Y.addr, align 4, !dbg !4852
  %idxprom251 = sext i32 %197 to i64, !dbg !4853
  %198 = load i32, i32* %i, align 4, !dbg !4854
  %idxprom252 = sext i32 %198 to i64, !dbg !4853
  %199 = load i32, i32* %P.addr, align 4, !dbg !4855
  %idxprom253 = sext i32 %199 to i64, !dbg !4853
  %arrayidx254 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom253, !dbg !4853
  %arrayidx255 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx254, i64 0, i64 %idxprom252, !dbg !4853
  %arrayidx256 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx255, i64 0, i64 %idxprom251, !dbg !4853
  %200 = load i16, i16* %arrayidx256, align 2, !dbg !4853
  %conv257 = zext i16 %200 to i32, !dbg !4853
  store i32 %conv257, i32* %y250, align 4, !dbg !4851
  call void @llvm.dbg.declare(metadata i32* %d258, metadata !4856, metadata !909), !dbg !4857
  %201 = load i32, i32* %D.addr, align 4, !dbg !4858
  %idxprom259 = sext i32 %201 to i64, !dbg !4859
  %202 = load i32, i32* %i, align 4, !dbg !4860
  %idxprom260 = sext i32 %202 to i64, !dbg !4859
  %203 = load i32, i32* %P.addr, align 4, !dbg !4861
  %idxprom261 = sext i32 %203 to i64, !dbg !4859
  %arrayidx262 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom261, !dbg !4859
  %arrayidx263 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx262, i64 0, i64 %idxprom260, !dbg !4859
  %arrayidx264 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx263, i64 0, i64 %idxprom259, !dbg !4859
  %204 = load i16, i16* %arrayidx264, align 2, !dbg !4859
  %conv265 = zext i16 %204 to i32, !dbg !4859
  store i32 %conv265, i32* %d258, align 4, !dbg !4857
  %205 = load i32, i32* %d258, align 4, !dbg !4862
  %conv266 = trunc i32 %205 to i8, !dbg !4862
  %206 = load i32, i32* %D.addr, align 4, !dbg !4863
  %idxprom267 = sext i32 %206 to i64, !dbg !4864
  %arrayidx268 = getelementptr inbounds [4 x i8], [4 x i8]* %color, i64 0, i64 %idxprom267, !dbg !4864
  store i8 %conv266, i8* %arrayidx268, align 1, !dbg !4865
  %207 = load i32, i32* %x242, align 4, !dbg !4866
  %conv269 = trunc i32 %207 to i8, !dbg !4866
  %208 = load i32, i32* %X.addr, align 4, !dbg !4867
  %idxprom270 = sext i32 %208 to i64, !dbg !4868
  %arrayidx271 = getelementptr inbounds [4 x i8], [4 x i8]* %color, i64 0, i64 %idxprom270, !dbg !4868
  store i8 %conv269, i8* %arrayidx271, align 1, !dbg !4869
  %209 = load i32, i32* %y250, align 4, !dbg !4870
  %conv272 = trunc i32 %209 to i8, !dbg !4870
  %210 = load i32, i32* %Y.addr, align 4, !dbg !4871
  %idxprom273 = sext i32 %210 to i64, !dbg !4872
  %arrayidx274 = getelementptr inbounds [4 x i8], [4 x i8]* %color, i64 0, i64 %idxprom273, !dbg !4872
  store i8 %conv272, i8* %arrayidx274, align 1, !dbg !4873
  %211 = load i32, i32* %x242, align 4, !dbg !4874
  %cmp275 = icmp sgt i32 %211, 128, !dbg !4876
  br i1 %cmp275, label %if.then277, label %if.else, !dbg !4877

if.then277:                                       ; preds = %for.body241
  %212 = load i32, i32* %x242, align 4, !dbg !4878
  %add = add nsw i32 %212, 8, !dbg !4878
  store i32 %add, i32* %x242, align 4, !dbg !4878
  br label %if.end278, !dbg !4879

if.else:                                          ; preds = %for.body241
  %213 = load i32, i32* %x242, align 4, !dbg !4880
  %sub = sub nsw i32 %213, 14, !dbg !4880
  store i32 %sub, i32* %x242, align 4, !dbg !4880
  br label %if.end278

if.end278:                                        ; preds = %if.else, %if.then277
  %214 = load i32, i32* %y250, align 4, !dbg !4881
  %cmp279 = icmp sgt i32 %214, 128, !dbg !4883
  br i1 %cmp279, label %if.then281, label %if.else283, !dbg !4884

if.then281:                                       ; preds = %if.end278
  %215 = load i32, i32* %y250, align 4, !dbg !4885
  %add282 = add nsw i32 %215, 8, !dbg !4885
  store i32 %add282, i32* %y250, align 4, !dbg !4885
  br label %if.end285, !dbg !4886

if.else283:                                       ; preds = %if.end278
  %216 = load i32, i32* %y250, align 4, !dbg !4887
  %sub284 = sub nsw i32 %216, 14, !dbg !4887
  store i32 %sub284, i32* %y250, align 4, !dbg !4887
  br label %if.end285

if.end285:                                        ; preds = %if.else283, %if.then281
  %217 = load i32, i32* %x242, align 4, !dbg !4888
  %218 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4889
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %218, i32 0, i32 3, !dbg !4890
  %219 = load i32, i32* %width, align 8, !dbg !4890
  %sub286 = sub nsw i32 %219, 9, !dbg !4891
  store i32 %217, i32* %a.addr.i, align 4, !dbg !4892
  store i32 0, i32* %amin.addr.i, align 4, !dbg !4892
  store i32 %sub286, i32* %amax.addr.i, align 4, !dbg !4892
  %220 = load i32, i32* %a.addr.i, align 4, !dbg !4893
  %221 = load i32, i32* %amin.addr.i, align 4, !dbg !4894
  %cmp.i = icmp slt i32 %220, %221, !dbg !4895
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !4896

if.then.i:                                        ; preds = %if.end285
  %222 = load i32, i32* %amin.addr.i, align 4, !dbg !4897
  store i32 %222, i32* %retval.i, align 4, !dbg !4898
  br label %av_clip_c.exit, !dbg !4898

if.else.i:                                        ; preds = %if.end285
  %223 = load i32, i32* %a.addr.i, align 4, !dbg !4899
  %224 = load i32, i32* %amax.addr.i, align 4, !dbg !4900
  %cmp1.i = icmp sgt i32 %223, %224, !dbg !4901
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !4902

if.then2.i:                                       ; preds = %if.else.i
  %225 = load i32, i32* %amax.addr.i, align 4, !dbg !4903
  store i32 %225, i32* %retval.i, align 4, !dbg !4904
  br label %av_clip_c.exit, !dbg !4904

if.else3.i:                                       ; preds = %if.else.i
  %226 = load i32, i32* %a.addr.i, align 4, !dbg !4905
  store i32 %226, i32* %retval.i, align 4, !dbg !4906
  br label %av_clip_c.exit, !dbg !4906

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %227 = load i32, i32* %retval.i, align 4, !dbg !4907
  store i32 %227, i32* %x242, align 4, !dbg !4908
  %228 = load i32, i32* %y250, align 4, !dbg !4909
  %229 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4910
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %229, i32 0, i32 4, !dbg !4911
  %230 = load i32, i32* %height, align 4, !dbg !4911
  %sub287 = sub nsw i32 %230, 9, !dbg !4912
  store i32 %228, i32* %a.addr.i298, align 4, !dbg !4913
  store i32 0, i32* %amin.addr.i299, align 4, !dbg !4913
  store i32 %sub287, i32* %amax.addr.i300, align 4, !dbg !4913
  %231 = load i32, i32* %a.addr.i298, align 4, !dbg !4914
  %232 = load i32, i32* %amin.addr.i299, align 4, !dbg !4915
  %cmp.i301 = icmp slt i32 %231, %232, !dbg !4916
  br i1 %cmp.i301, label %if.then.i302, label %if.else.i304, !dbg !4917

if.then.i302:                                     ; preds = %av_clip_c.exit
  %233 = load i32, i32* %amin.addr.i299, align 4, !dbg !4918
  store i32 %233, i32* %retval.i297, align 4, !dbg !4919
  br label %av_clip_c.exit307, !dbg !4919

if.else.i304:                                     ; preds = %av_clip_c.exit
  %234 = load i32, i32* %a.addr.i298, align 4, !dbg !4920
  %235 = load i32, i32* %amax.addr.i300, align 4, !dbg !4921
  %cmp1.i303 = icmp sgt i32 %234, %235, !dbg !4922
  br i1 %cmp1.i303, label %if.then2.i305, label %if.else3.i306, !dbg !4923

if.then2.i305:                                    ; preds = %if.else.i304
  %236 = load i32, i32* %amax.addr.i300, align 4, !dbg !4924
  store i32 %236, i32* %retval.i297, align 4, !dbg !4925
  br label %av_clip_c.exit307, !dbg !4925

if.else3.i306:                                    ; preds = %if.else.i304
  %237 = load i32, i32* %a.addr.i298, align 4, !dbg !4926
  store i32 %237, i32* %retval.i297, align 4, !dbg !4927
  br label %av_clip_c.exit307, !dbg !4927

av_clip_c.exit307:                                ; preds = %if.then.i302, %if.then2.i305, %if.else3.i306
  %238 = load i32, i32* %retval.i297, align 4, !dbg !4928
  store i32 %238, i32* %y250, align 4, !dbg !4929
  %239 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !4930
  %240 = load i32, i32* %x242, align 4, !dbg !4931
  %241 = load i32, i32* %y250, align 4, !dbg !4932
  %242 = load float, float* %o, align 4, !dbg !4933
  %243 = load float, float* %o, align 4, !dbg !4934
  %conv289 = fpext float %243 to double, !dbg !4934
  %sub290 = fsub double 1.000000e+00, %conv289, !dbg !4935
  %conv291 = fptrunc double %sub290 to float, !dbg !4936
  %244 = load i32, i32* %i, align 4, !dbg !4937
  %idxprom292 = sext i32 %244 to i64, !dbg !4938
  %arrayidx293 = getelementptr inbounds [6 x i8*], [6 x i8*]* @positions_name, i64 0, i64 %idxprom292, !dbg !4938
  %245 = load i8*, i8** %arrayidx293, align 8, !dbg !4938
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %color, i32 0, i32 0, !dbg !4939
  call void @draw_htext(%struct.AVFrame* %239, i32 %240, i32 %241, float %242, float %conv291, i8* %245, i8* %arraydecay), !dbg !4940
  br label %for.inc294, !dbg !4941

for.inc294:                                       ; preds = %av_clip_c.exit307
  %246 = load i32, i32* %i, align 4, !dbg !4942
  %inc295 = add nsw i32 %246, 1, !dbg !4942
  store i32 %inc295, i32* %i, align 4, !dbg !4942
  br label %for.cond235, !dbg !4944, !llvm.loop !4945

for.end296:                                       ; preds = %land.end
  ret void, !dbg !4947
}

; Function Attrs: nounwind uwtable
define internal void @green_graticule16(%struct.VectorscopeContext* %s, %struct.AVFrame* %out, i32 %X, i32 %Y, i32 %D, i32 %P) #1 !dbg !4948 {
entry:
  %retval.i266 = alloca i32, align 4
  %a.addr.i267 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i267, metadata !4149, metadata !909), !dbg !4949
  %amin.addr.i268 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i268, metadata !4159, metadata !909), !dbg !4954
  %amax.addr.i269 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i269, metadata !4161, metadata !909), !dbg !4955
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4149, metadata !909), !dbg !4956
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4159, metadata !909), !dbg !4958
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4161, metadata !909), !dbg !4959
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  %X.addr = alloca i32, align 4
  %Y.addr = alloca i32, align 4
  %D.addr = alloca i32, align 4
  %P.addr = alloca i32, align 4
  %max = alloca i32, align 4
  %o = alloca float, align 4
  %m = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %x63 = alloca i32, align 4
  %y70 = alloca i32, align 4
  %x140 = alloca i32, align 4
  %y147 = alloca i32, align 4
  %color = alloca [4 x i16], align 2
  %x225 = alloca i32, align 4
  %y233 = alloca i32, align 4
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !4960, metadata !909), !dbg !4961
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !4962, metadata !909), !dbg !4963
  store i32 %X, i32* %X.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %X.addr, metadata !4964, metadata !909), !dbg !4965
  store i32 %Y, i32* %Y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Y.addr, metadata !4966, metadata !909), !dbg !4967
  store i32 %D, i32* %D.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %D.addr, metadata !4968, metadata !909), !dbg !4969
  store i32 %P, i32* %P.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %P.addr, metadata !4970, metadata !909), !dbg !4971
  call void @llvm.dbg.declare(metadata i32* %max, metadata !4972, metadata !909), !dbg !4973
  %0 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !4974
  %size = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %0, i32 0, i32 13, !dbg !4975
  %1 = load i32, i32* %size, align 4, !dbg !4975
  %sub = sub nsw i32 %1, 1, !dbg !4976
  store i32 %sub, i32* %max, align 4, !dbg !4973
  call void @llvm.dbg.declare(metadata float* %o, metadata !4977, metadata !909), !dbg !4978
  %2 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !4979
  %opacity = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %2, i32 0, i32 18, !dbg !4980
  %3 = load float, float* %opacity, align 8, !dbg !4980
  store float %3, float* %o, align 4, !dbg !4978
  call void @llvm.dbg.declare(metadata i32* %m, metadata !4981, metadata !909), !dbg !4982
  %4 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !4983
  %mult = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %4, i32 0, i32 15, !dbg !4984
  %5 = load i32, i32* %mult, align 4, !dbg !4984
  store i32 %5, i32* %m, align 4, !dbg !4982
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4985, metadata !909), !dbg !4986
  store i32 0, i32* %i, align 4, !dbg !4987
  br label %for.cond, !dbg !4989

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !4990
  %cmp = icmp slt i32 %6, 12, !dbg !4993
  br i1 %cmp, label %for.body, label %for.end, !dbg !4994

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4995, metadata !909), !dbg !4997
  %7 = load i32, i32* %X.addr, align 4, !dbg !4998
  %idxprom = sext i32 %7 to i64, !dbg !4999
  %8 = load i32, i32* %i, align 4, !dbg !5000
  %idxprom1 = sext i32 %8 to i64, !dbg !4999
  %9 = load i32, i32* %P.addr, align 4, !dbg !5001
  %idxprom2 = sext i32 %9 to i64, !dbg !4999
  %arrayidx = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom2, !dbg !4999
  %arrayidx3 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx, i64 0, i64 %idxprom1, !dbg !4999
  %arrayidx4 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx3, i64 0, i64 %idxprom, !dbg !4999
  %10 = load i16, i16* %arrayidx4, align 2, !dbg !4999
  %conv = zext i16 %10 to i32, !dbg !4999
  store i32 %conv, i32* %x, align 4, !dbg !4997
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5002, metadata !909), !dbg !5003
  %11 = load i32, i32* %Y.addr, align 4, !dbg !5004
  %idxprom5 = sext i32 %11 to i64, !dbg !5005
  %12 = load i32, i32* %i, align 4, !dbg !5006
  %idxprom6 = sext i32 %12 to i64, !dbg !5005
  %13 = load i32, i32* %P.addr, align 4, !dbg !5007
  %idxprom7 = sext i32 %13 to i64, !dbg !5005
  %arrayidx8 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom7, !dbg !5005
  %arrayidx9 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx8, i64 0, i64 %idxprom6, !dbg !5005
  %arrayidx10 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx9, i64 0, i64 %idxprom5, !dbg !5005
  %14 = load i16, i16* %arrayidx10, align 2, !dbg !5005
  %conv11 = zext i16 %14 to i32, !dbg !5005
  store i32 %conv11, i32* %y, align 4, !dbg !5003
  %15 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5008
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 0, !dbg !5009
  %arrayidx12 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !5008
  %16 = load i8*, i8** %arrayidx12, align 8, !dbg !5008
  %17 = load i32, i32* %y, align 4, !dbg !5010
  %18 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5011
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 1, !dbg !5012
  %arrayidx13 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !5011
  %19 = load i32, i32* %arrayidx13, align 8, !dbg !5011
  %mul = mul nsw i32 %17, %19, !dbg !5013
  %idx.ext = sext i32 %mul to i64, !dbg !5014
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %idx.ext, !dbg !5014
  %20 = load i32, i32* %x, align 4, !dbg !5015
  %mul14 = mul nsw i32 %20, 2, !dbg !5016
  %idx.ext15 = sext i32 %mul14 to i64, !dbg !5017
  %add.ptr16 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext15, !dbg !5017
  %21 = bitcast i8* %add.ptr16 to i16*, !dbg !5018
  %22 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5019
  %linesize17 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %22, i32 0, i32 1, !dbg !5020
  %arrayidx18 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize17, i64 0, i64 0, !dbg !5019
  %23 = load i32, i32* %arrayidx18, align 8, !dbg !5019
  %div = sdiv i32 %23, 2, !dbg !5021
  %24 = load i32, i32* %m, align 4, !dbg !5022
  %mul19 = mul nsw i32 128, %24, !dbg !5023
  %25 = load float, float* %o, align 4, !dbg !5024
  call void @draw_dots16(i16* %21, i32 %div, i32 %mul19, float %25), !dbg !5025
  %26 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5026
  %data20 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %26, i32 0, i32 0, !dbg !5027
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data20, i64 0, i64 1, !dbg !5026
  %27 = load i8*, i8** %arrayidx21, align 8, !dbg !5026
  %28 = load i32, i32* %y, align 4, !dbg !5028
  %29 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5029
  %linesize22 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %29, i32 0, i32 1, !dbg !5030
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize22, i64 0, i64 1, !dbg !5029
  %30 = load i32, i32* %arrayidx23, align 4, !dbg !5029
  %mul24 = mul nsw i32 %28, %30, !dbg !5031
  %idx.ext25 = sext i32 %mul24 to i64, !dbg !5032
  %add.ptr26 = getelementptr inbounds i8, i8* %27, i64 %idx.ext25, !dbg !5032
  %31 = load i32, i32* %x, align 4, !dbg !5033
  %mul27 = mul nsw i32 %31, 2, !dbg !5034
  %idx.ext28 = sext i32 %mul27 to i64, !dbg !5035
  %add.ptr29 = getelementptr inbounds i8, i8* %add.ptr26, i64 %idx.ext28, !dbg !5035
  %32 = bitcast i8* %add.ptr29 to i16*, !dbg !5036
  %33 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5037
  %linesize30 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %33, i32 0, i32 1, !dbg !5038
  %arrayidx31 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize30, i64 0, i64 1, !dbg !5037
  %34 = load i32, i32* %arrayidx31, align 4, !dbg !5037
  %div32 = sdiv i32 %34, 2, !dbg !5039
  %35 = load float, float* %o, align 4, !dbg !5040
  call void @draw_dots16(i16* %32, i32 %div32, i32 0, float %35), !dbg !5041
  %36 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5042
  %data33 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %36, i32 0, i32 0, !dbg !5043
  %arrayidx34 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data33, i64 0, i64 2, !dbg !5042
  %37 = load i8*, i8** %arrayidx34, align 8, !dbg !5042
  %38 = load i32, i32* %y, align 4, !dbg !5044
  %39 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5045
  %linesize35 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %39, i32 0, i32 1, !dbg !5046
  %arrayidx36 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize35, i64 0, i64 2, !dbg !5045
  %40 = load i32, i32* %arrayidx36, align 8, !dbg !5045
  %mul37 = mul nsw i32 %38, %40, !dbg !5047
  %idx.ext38 = sext i32 %mul37 to i64, !dbg !5048
  %add.ptr39 = getelementptr inbounds i8, i8* %37, i64 %idx.ext38, !dbg !5048
  %41 = load i32, i32* %x, align 4, !dbg !5049
  %mul40 = mul nsw i32 %41, 2, !dbg !5050
  %idx.ext41 = sext i32 %mul40 to i64, !dbg !5051
  %add.ptr42 = getelementptr inbounds i8, i8* %add.ptr39, i64 %idx.ext41, !dbg !5051
  %42 = bitcast i8* %add.ptr42 to i16*, !dbg !5052
  %43 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5053
  %linesize43 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %43, i32 0, i32 1, !dbg !5054
  %arrayidx44 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize43, i64 0, i64 2, !dbg !5053
  %44 = load i32, i32* %arrayidx44, align 8, !dbg !5053
  %div45 = sdiv i32 %44, 2, !dbg !5055
  %45 = load float, float* %o, align 4, !dbg !5056
  call void @draw_dots16(i16* %42, i32 %div45, i32 0, float %45), !dbg !5057
  %46 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5058
  %data46 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %46, i32 0, i32 0, !dbg !5060
  %arrayidx47 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data46, i64 0, i64 3, !dbg !5058
  %47 = load i8*, i8** %arrayidx47, align 8, !dbg !5058
  %tobool = icmp ne i8* %47, null, !dbg !5058
  br i1 %tobool, label %if.then, label %if.end, !dbg !5061

if.then:                                          ; preds = %for.body
  %48 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5062
  %data48 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %48, i32 0, i32 0, !dbg !5063
  %arrayidx49 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data48, i64 0, i64 3, !dbg !5062
  %49 = load i8*, i8** %arrayidx49, align 8, !dbg !5062
  %50 = load i32, i32* %y, align 4, !dbg !5064
  %51 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5065
  %linesize50 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %51, i32 0, i32 1, !dbg !5066
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize50, i64 0, i64 3, !dbg !5065
  %52 = load i32, i32* %arrayidx51, align 4, !dbg !5065
  %mul52 = mul nsw i32 %50, %52, !dbg !5067
  %idx.ext53 = sext i32 %mul52 to i64, !dbg !5068
  %add.ptr54 = getelementptr inbounds i8, i8* %49, i64 %idx.ext53, !dbg !5068
  %53 = load i32, i32* %x, align 4, !dbg !5069
  %mul55 = mul nsw i32 %53, 2, !dbg !5070
  %idx.ext56 = sext i32 %mul55 to i64, !dbg !5071
  %add.ptr57 = getelementptr inbounds i8, i8* %add.ptr54, i64 %idx.ext56, !dbg !5071
  %54 = bitcast i8* %add.ptr57 to i16*, !dbg !5072
  %55 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5073
  %linesize58 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %55, i32 0, i32 1, !dbg !5074
  %arrayidx59 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize58, i64 0, i64 3, !dbg !5073
  %56 = load i32, i32* %arrayidx59, align 4, !dbg !5073
  %div60 = sdiv i32 %56, 2, !dbg !5075
  %57 = load i32, i32* %max, align 4, !dbg !5076
  %58 = load float, float* %o, align 4, !dbg !5077
  call void @draw_dots16(i16* %54, i32 %div60, i32 %57, float %58), !dbg !5078
  br label %if.end, !dbg !5078

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5079

for.inc:                                          ; preds = %if.end
  %59 = load i32, i32* %i, align 4, !dbg !5080
  %inc = add nsw i32 %59, 1, !dbg !5080
  store i32 %inc, i32* %i, align 4, !dbg !5080
  br label %for.cond, !dbg !5082, !llvm.loop !5083

for.end:                                          ; preds = %for.cond
  %60 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5085
  %flags = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %60, i32 0, i32 24, !dbg !5087
  %61 = load i32, i32* %flags, align 8, !dbg !5087
  %and = and i32 %61, 1, !dbg !5088
  %tobool61 = icmp ne i32 %and, 0, !dbg !5088
  br i1 %tobool61, label %if.then62, label %if.end135, !dbg !5089

if.then62:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %x63, metadata !5090, metadata !909), !dbg !5092
  %62 = load i32, i32* %X.addr, align 4, !dbg !5093
  %idxprom64 = sext i32 %62 to i64, !dbg !5094
  %63 = load i32, i32* %P.addr, align 4, !dbg !5095
  %idxprom65 = sext i32 %63 to i64, !dbg !5094
  %arrayidx66 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom65, !dbg !5094
  %arrayidx67 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx66, i64 0, i64 12, !dbg !5094
  %arrayidx68 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx67, i64 0, i64 %idxprom64, !dbg !5094
  %64 = load i16, i16* %arrayidx68, align 2, !dbg !5094
  %conv69 = zext i16 %64 to i32, !dbg !5094
  store i32 %conv69, i32* %x63, align 4, !dbg !5092
  call void @llvm.dbg.declare(metadata i32* %y70, metadata !5096, metadata !909), !dbg !5097
  %65 = load i32, i32* %Y.addr, align 4, !dbg !5098
  %idxprom71 = sext i32 %65 to i64, !dbg !5099
  %66 = load i32, i32* %P.addr, align 4, !dbg !5100
  %idxprom72 = sext i32 %66 to i64, !dbg !5099
  %arrayidx73 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom72, !dbg !5099
  %arrayidx74 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx73, i64 0, i64 12, !dbg !5099
  %arrayidx75 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx74, i64 0, i64 %idxprom71, !dbg !5099
  %67 = load i16, i16* %arrayidx75, align 2, !dbg !5099
  %conv76 = zext i16 %67 to i32, !dbg !5099
  store i32 %conv76, i32* %y70, align 4, !dbg !5097
  %68 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5101
  %data77 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %68, i32 0, i32 0, !dbg !5102
  %arrayidx78 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data77, i64 0, i64 0, !dbg !5101
  %69 = load i8*, i8** %arrayidx78, align 8, !dbg !5101
  %70 = load i32, i32* %y70, align 4, !dbg !5103
  %71 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5104
  %linesize79 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %71, i32 0, i32 1, !dbg !5105
  %arrayidx80 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize79, i64 0, i64 0, !dbg !5104
  %72 = load i32, i32* %arrayidx80, align 8, !dbg !5104
  %mul81 = mul nsw i32 %70, %72, !dbg !5106
  %idx.ext82 = sext i32 %mul81 to i64, !dbg !5107
  %add.ptr83 = getelementptr inbounds i8, i8* %69, i64 %idx.ext82, !dbg !5107
  %73 = load i32, i32* %x63, align 4, !dbg !5108
  %mul84 = mul nsw i32 %73, 2, !dbg !5109
  %idx.ext85 = sext i32 %mul84 to i64, !dbg !5110
  %add.ptr86 = getelementptr inbounds i8, i8* %add.ptr83, i64 %idx.ext85, !dbg !5110
  %74 = bitcast i8* %add.ptr86 to i16*, !dbg !5111
  %75 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5112
  %linesize87 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %75, i32 0, i32 1, !dbg !5113
  %arrayidx88 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize87, i64 0, i64 0, !dbg !5112
  %76 = load i32, i32* %arrayidx88, align 8, !dbg !5112
  %div89 = sdiv i32 %76, 2, !dbg !5114
  %77 = load i32, i32* %m, align 4, !dbg !5115
  %mul90 = mul nsw i32 128, %77, !dbg !5116
  %78 = load float, float* %o, align 4, !dbg !5117
  call void @draw_dots16(i16* %74, i32 %div89, i32 %mul90, float %78), !dbg !5118
  %79 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5119
  %data91 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %79, i32 0, i32 0, !dbg !5120
  %arrayidx92 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data91, i64 0, i64 1, !dbg !5119
  %80 = load i8*, i8** %arrayidx92, align 8, !dbg !5119
  %81 = load i32, i32* %y70, align 4, !dbg !5121
  %82 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5122
  %linesize93 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %82, i32 0, i32 1, !dbg !5123
  %arrayidx94 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize93, i64 0, i64 1, !dbg !5122
  %83 = load i32, i32* %arrayidx94, align 4, !dbg !5122
  %mul95 = mul nsw i32 %81, %83, !dbg !5124
  %idx.ext96 = sext i32 %mul95 to i64, !dbg !5125
  %add.ptr97 = getelementptr inbounds i8, i8* %80, i64 %idx.ext96, !dbg !5125
  %84 = load i32, i32* %x63, align 4, !dbg !5126
  %mul98 = mul nsw i32 %84, 2, !dbg !5127
  %idx.ext99 = sext i32 %mul98 to i64, !dbg !5128
  %add.ptr100 = getelementptr inbounds i8, i8* %add.ptr97, i64 %idx.ext99, !dbg !5128
  %85 = bitcast i8* %add.ptr100 to i16*, !dbg !5129
  %86 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5130
  %linesize101 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %86, i32 0, i32 1, !dbg !5131
  %arrayidx102 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize101, i64 0, i64 1, !dbg !5130
  %87 = load i32, i32* %arrayidx102, align 4, !dbg !5130
  %div103 = sdiv i32 %87, 2, !dbg !5132
  %88 = load float, float* %o, align 4, !dbg !5133
  call void @draw_dots16(i16* %85, i32 %div103, i32 0, float %88), !dbg !5134
  %89 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5135
  %data104 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %89, i32 0, i32 0, !dbg !5136
  %arrayidx105 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data104, i64 0, i64 2, !dbg !5135
  %90 = load i8*, i8** %arrayidx105, align 8, !dbg !5135
  %91 = load i32, i32* %y70, align 4, !dbg !5137
  %92 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5138
  %linesize106 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %92, i32 0, i32 1, !dbg !5139
  %arrayidx107 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize106, i64 0, i64 2, !dbg !5138
  %93 = load i32, i32* %arrayidx107, align 8, !dbg !5138
  %mul108 = mul nsw i32 %91, %93, !dbg !5140
  %idx.ext109 = sext i32 %mul108 to i64, !dbg !5141
  %add.ptr110 = getelementptr inbounds i8, i8* %90, i64 %idx.ext109, !dbg !5141
  %94 = load i32, i32* %x63, align 4, !dbg !5142
  %mul111 = mul nsw i32 %94, 2, !dbg !5143
  %idx.ext112 = sext i32 %mul111 to i64, !dbg !5144
  %add.ptr113 = getelementptr inbounds i8, i8* %add.ptr110, i64 %idx.ext112, !dbg !5144
  %95 = bitcast i8* %add.ptr113 to i16*, !dbg !5145
  %96 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5146
  %linesize114 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %96, i32 0, i32 1, !dbg !5147
  %arrayidx115 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize114, i64 0, i64 2, !dbg !5146
  %97 = load i32, i32* %arrayidx115, align 8, !dbg !5146
  %div116 = sdiv i32 %97, 2, !dbg !5148
  %98 = load float, float* %o, align 4, !dbg !5149
  call void @draw_dots16(i16* %95, i32 %div116, i32 0, float %98), !dbg !5150
  %99 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5151
  %data117 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %99, i32 0, i32 0, !dbg !5153
  %arrayidx118 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data117, i64 0, i64 3, !dbg !5151
  %100 = load i8*, i8** %arrayidx118, align 8, !dbg !5151
  %tobool119 = icmp ne i8* %100, null, !dbg !5151
  br i1 %tobool119, label %if.then120, label %if.end134, !dbg !5154

if.then120:                                       ; preds = %if.then62
  %101 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5155
  %data121 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %101, i32 0, i32 0, !dbg !5156
  %arrayidx122 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data121, i64 0, i64 3, !dbg !5155
  %102 = load i8*, i8** %arrayidx122, align 8, !dbg !5155
  %103 = load i32, i32* %y70, align 4, !dbg !5157
  %104 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5158
  %linesize123 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %104, i32 0, i32 1, !dbg !5159
  %arrayidx124 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize123, i64 0, i64 3, !dbg !5158
  %105 = load i32, i32* %arrayidx124, align 4, !dbg !5158
  %mul125 = mul nsw i32 %103, %105, !dbg !5160
  %idx.ext126 = sext i32 %mul125 to i64, !dbg !5161
  %add.ptr127 = getelementptr inbounds i8, i8* %102, i64 %idx.ext126, !dbg !5161
  %106 = load i32, i32* %x63, align 4, !dbg !5162
  %mul128 = mul nsw i32 %106, 2, !dbg !5163
  %idx.ext129 = sext i32 %mul128 to i64, !dbg !5164
  %add.ptr130 = getelementptr inbounds i8, i8* %add.ptr127, i64 %idx.ext129, !dbg !5164
  %107 = bitcast i8* %add.ptr130 to i16*, !dbg !5165
  %108 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5166
  %linesize131 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %108, i32 0, i32 1, !dbg !5167
  %arrayidx132 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize131, i64 0, i64 3, !dbg !5166
  %109 = load i32, i32* %arrayidx132, align 4, !dbg !5166
  %div133 = sdiv i32 %109, 2, !dbg !5168
  %110 = load i32, i32* %max, align 4, !dbg !5169
  %111 = load float, float* %o, align 4, !dbg !5170
  call void @draw_dots16(i16* %107, i32 %div133, i32 %110, float %111), !dbg !5171
  br label %if.end134, !dbg !5171

if.end134:                                        ; preds = %if.then120, %if.then62
  br label %if.end135, !dbg !5172

if.end135:                                        ; preds = %if.end134, %for.end
  %112 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5173
  %flags136 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %112, i32 0, i32 24, !dbg !5175
  %113 = load i32, i32* %flags136, align 8, !dbg !5175
  %and137 = and i32 %113, 2, !dbg !5176
  %tobool138 = icmp ne i32 %and137, 0, !dbg !5176
  br i1 %tobool138, label %if.then139, label %if.end212, !dbg !5177

if.then139:                                       ; preds = %if.end135
  call void @llvm.dbg.declare(metadata i32* %x140, metadata !5178, metadata !909), !dbg !5180
  %114 = load i32, i32* %X.addr, align 4, !dbg !5181
  %idxprom141 = sext i32 %114 to i64, !dbg !5182
  %115 = load i32, i32* %P.addr, align 4, !dbg !5183
  %idxprom142 = sext i32 %115 to i64, !dbg !5182
  %arrayidx143 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom142, !dbg !5182
  %arrayidx144 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx143, i64 0, i64 13, !dbg !5182
  %arrayidx145 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx144, i64 0, i64 %idxprom141, !dbg !5182
  %116 = load i16, i16* %arrayidx145, align 2, !dbg !5182
  %conv146 = zext i16 %116 to i32, !dbg !5182
  store i32 %conv146, i32* %x140, align 4, !dbg !5180
  call void @llvm.dbg.declare(metadata i32* %y147, metadata !5184, metadata !909), !dbg !5185
  %117 = load i32, i32* %Y.addr, align 4, !dbg !5186
  %idxprom148 = sext i32 %117 to i64, !dbg !5187
  %118 = load i32, i32* %P.addr, align 4, !dbg !5188
  %idxprom149 = sext i32 %118 to i64, !dbg !5187
  %arrayidx150 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom149, !dbg !5187
  %arrayidx151 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx150, i64 0, i64 13, !dbg !5187
  %arrayidx152 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx151, i64 0, i64 %idxprom148, !dbg !5187
  %119 = load i16, i16* %arrayidx152, align 2, !dbg !5187
  %conv153 = zext i16 %119 to i32, !dbg !5187
  store i32 %conv153, i32* %y147, align 4, !dbg !5185
  %120 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5189
  %data154 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %120, i32 0, i32 0, !dbg !5190
  %arrayidx155 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data154, i64 0, i64 0, !dbg !5189
  %121 = load i8*, i8** %arrayidx155, align 8, !dbg !5189
  %122 = load i32, i32* %y147, align 4, !dbg !5191
  %123 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5192
  %linesize156 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %123, i32 0, i32 1, !dbg !5193
  %arrayidx157 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize156, i64 0, i64 0, !dbg !5192
  %124 = load i32, i32* %arrayidx157, align 8, !dbg !5192
  %mul158 = mul nsw i32 %122, %124, !dbg !5194
  %idx.ext159 = sext i32 %mul158 to i64, !dbg !5195
  %add.ptr160 = getelementptr inbounds i8, i8* %121, i64 %idx.ext159, !dbg !5195
  %125 = load i32, i32* %x140, align 4, !dbg !5196
  %mul161 = mul nsw i32 %125, 2, !dbg !5197
  %idx.ext162 = sext i32 %mul161 to i64, !dbg !5198
  %add.ptr163 = getelementptr inbounds i8, i8* %add.ptr160, i64 %idx.ext162, !dbg !5198
  %126 = bitcast i8* %add.ptr163 to i16*, !dbg !5199
  %127 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5200
  %linesize164 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %127, i32 0, i32 1, !dbg !5201
  %arrayidx165 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize164, i64 0, i64 0, !dbg !5200
  %128 = load i32, i32* %arrayidx165, align 8, !dbg !5200
  %div166 = sdiv i32 %128, 2, !dbg !5202
  %129 = load i32, i32* %m, align 4, !dbg !5203
  %mul167 = mul nsw i32 128, %129, !dbg !5204
  %130 = load float, float* %o, align 4, !dbg !5205
  call void @draw_dots16(i16* %126, i32 %div166, i32 %mul167, float %130), !dbg !5206
  %131 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5207
  %data168 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %131, i32 0, i32 0, !dbg !5208
  %arrayidx169 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data168, i64 0, i64 1, !dbg !5207
  %132 = load i8*, i8** %arrayidx169, align 8, !dbg !5207
  %133 = load i32, i32* %y147, align 4, !dbg !5209
  %134 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5210
  %linesize170 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %134, i32 0, i32 1, !dbg !5211
  %arrayidx171 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize170, i64 0, i64 1, !dbg !5210
  %135 = load i32, i32* %arrayidx171, align 4, !dbg !5210
  %mul172 = mul nsw i32 %133, %135, !dbg !5212
  %idx.ext173 = sext i32 %mul172 to i64, !dbg !5213
  %add.ptr174 = getelementptr inbounds i8, i8* %132, i64 %idx.ext173, !dbg !5213
  %136 = load i32, i32* %x140, align 4, !dbg !5214
  %mul175 = mul nsw i32 %136, 2, !dbg !5215
  %idx.ext176 = sext i32 %mul175 to i64, !dbg !5216
  %add.ptr177 = getelementptr inbounds i8, i8* %add.ptr174, i64 %idx.ext176, !dbg !5216
  %137 = bitcast i8* %add.ptr177 to i16*, !dbg !5217
  %138 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5218
  %linesize178 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %138, i32 0, i32 1, !dbg !5219
  %arrayidx179 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize178, i64 0, i64 1, !dbg !5218
  %139 = load i32, i32* %arrayidx179, align 4, !dbg !5218
  %div180 = sdiv i32 %139, 2, !dbg !5220
  %140 = load float, float* %o, align 4, !dbg !5221
  call void @draw_dots16(i16* %137, i32 %div180, i32 0, float %140), !dbg !5222
  %141 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5223
  %data181 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %141, i32 0, i32 0, !dbg !5224
  %arrayidx182 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data181, i64 0, i64 2, !dbg !5223
  %142 = load i8*, i8** %arrayidx182, align 8, !dbg !5223
  %143 = load i32, i32* %y147, align 4, !dbg !5225
  %144 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5226
  %linesize183 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %144, i32 0, i32 1, !dbg !5227
  %arrayidx184 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize183, i64 0, i64 2, !dbg !5226
  %145 = load i32, i32* %arrayidx184, align 8, !dbg !5226
  %mul185 = mul nsw i32 %143, %145, !dbg !5228
  %idx.ext186 = sext i32 %mul185 to i64, !dbg !5229
  %add.ptr187 = getelementptr inbounds i8, i8* %142, i64 %idx.ext186, !dbg !5229
  %146 = load i32, i32* %x140, align 4, !dbg !5230
  %mul188 = mul nsw i32 %146, 2, !dbg !5231
  %idx.ext189 = sext i32 %mul188 to i64, !dbg !5232
  %add.ptr190 = getelementptr inbounds i8, i8* %add.ptr187, i64 %idx.ext189, !dbg !5232
  %147 = bitcast i8* %add.ptr190 to i16*, !dbg !5233
  %148 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5234
  %linesize191 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %148, i32 0, i32 1, !dbg !5235
  %arrayidx192 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize191, i64 0, i64 2, !dbg !5234
  %149 = load i32, i32* %arrayidx192, align 8, !dbg !5234
  %div193 = sdiv i32 %149, 2, !dbg !5236
  %150 = load float, float* %o, align 4, !dbg !5237
  call void @draw_dots16(i16* %147, i32 %div193, i32 0, float %150), !dbg !5238
  %151 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5239
  %data194 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %151, i32 0, i32 0, !dbg !5241
  %arrayidx195 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data194, i64 0, i64 3, !dbg !5239
  %152 = load i8*, i8** %arrayidx195, align 8, !dbg !5239
  %tobool196 = icmp ne i8* %152, null, !dbg !5239
  br i1 %tobool196, label %if.then197, label %if.end211, !dbg !5242

if.then197:                                       ; preds = %if.then139
  %153 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5243
  %data198 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %153, i32 0, i32 0, !dbg !5244
  %arrayidx199 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data198, i64 0, i64 3, !dbg !5243
  %154 = load i8*, i8** %arrayidx199, align 8, !dbg !5243
  %155 = load i32, i32* %y147, align 4, !dbg !5245
  %156 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5246
  %linesize200 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %156, i32 0, i32 1, !dbg !5247
  %arrayidx201 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize200, i64 0, i64 3, !dbg !5246
  %157 = load i32, i32* %arrayidx201, align 4, !dbg !5246
  %mul202 = mul nsw i32 %155, %157, !dbg !5248
  %idx.ext203 = sext i32 %mul202 to i64, !dbg !5249
  %add.ptr204 = getelementptr inbounds i8, i8* %154, i64 %idx.ext203, !dbg !5249
  %158 = load i32, i32* %x140, align 4, !dbg !5250
  %mul205 = mul nsw i32 %158, 2, !dbg !5251
  %idx.ext206 = sext i32 %mul205 to i64, !dbg !5252
  %add.ptr207 = getelementptr inbounds i8, i8* %add.ptr204, i64 %idx.ext206, !dbg !5252
  %159 = bitcast i8* %add.ptr207 to i16*, !dbg !5253
  %160 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5254
  %linesize208 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %160, i32 0, i32 1, !dbg !5255
  %arrayidx209 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize208, i64 0, i64 3, !dbg !5254
  %161 = load i32, i32* %arrayidx209, align 4, !dbg !5254
  %div210 = sdiv i32 %161, 2, !dbg !5256
  %162 = load i32, i32* %max, align 4, !dbg !5257
  %163 = load float, float* %o, align 4, !dbg !5258
  call void @draw_dots16(i16* %159, i32 %div210, i32 %162, float %163), !dbg !5259
  br label %if.end211, !dbg !5259

if.end211:                                        ; preds = %if.then197, %if.then139
  br label %if.end212, !dbg !5260

if.end212:                                        ; preds = %if.end211, %if.end135
  store i32 0, i32* %i, align 4, !dbg !5261
  br label %for.cond213, !dbg !5262

for.cond213:                                      ; preds = %for.inc263, %if.end212
  %164 = load i32, i32* %i, align 4, !dbg !5263
  %cmp214 = icmp slt i32 %164, 6, !dbg !5265
  br i1 %cmp214, label %land.rhs, label %land.end, !dbg !5266

land.rhs:                                         ; preds = %for.cond213
  %165 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5267
  %flags216 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %165, i32 0, i32 24, !dbg !5269
  %166 = load i32, i32* %flags216, align 8, !dbg !5269
  %and217 = and i32 %166, 4, !dbg !5270
  %tobool218 = icmp ne i32 %and217, 0, !dbg !5271
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond213
  %167 = phi i1 [ false, %for.cond213 ], [ %tobool218, %land.rhs ]
  br i1 %167, label %for.body219, label %for.end265, !dbg !5272

for.body219:                                      ; preds = %land.end
  call void @llvm.dbg.declare(metadata [4 x i16]* %color, metadata !5274, metadata !909), !dbg !5276
  %arrayinit.begin = getelementptr inbounds [4 x i16], [4 x i16]* %color, i64 0, i64 0, !dbg !5277
  %168 = load i32, i32* %m, align 4, !dbg !5278
  %mul220 = mul nsw i32 128, %168, !dbg !5279
  %conv221 = trunc i32 %mul220 to i16, !dbg !5280
  store i16 %conv221, i16* %arrayinit.begin, align 2, !dbg !5277
  %arrayinit.element = getelementptr inbounds i16, i16* %arrayinit.begin, i64 1, !dbg !5277
  store i16 0, i16* %arrayinit.element, align 2, !dbg !5277
  %arrayinit.element222 = getelementptr inbounds i16, i16* %arrayinit.element, i64 1, !dbg !5277
  store i16 0, i16* %arrayinit.element222, align 2, !dbg !5277
  %arrayinit.element223 = getelementptr inbounds i16, i16* %arrayinit.element222, i64 1, !dbg !5277
  %169 = load i32, i32* %max, align 4, !dbg !5281
  %conv224 = trunc i32 %169 to i16, !dbg !5281
  store i16 %conv224, i16* %arrayinit.element223, align 2, !dbg !5277
  call void @llvm.dbg.declare(metadata i32* %x225, metadata !5282, metadata !909), !dbg !5283
  %170 = load i32, i32* %X.addr, align 4, !dbg !5284
  %idxprom226 = sext i32 %170 to i64, !dbg !5285
  %171 = load i32, i32* %i, align 4, !dbg !5286
  %idxprom227 = sext i32 %171 to i64, !dbg !5285
  %172 = load i32, i32* %P.addr, align 4, !dbg !5287
  %idxprom228 = sext i32 %172 to i64, !dbg !5285
  %arrayidx229 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom228, !dbg !5285
  %arrayidx230 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx229, i64 0, i64 %idxprom227, !dbg !5285
  %arrayidx231 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx230, i64 0, i64 %idxprom226, !dbg !5285
  %173 = load i16, i16* %arrayidx231, align 2, !dbg !5285
  %conv232 = zext i16 %173 to i32, !dbg !5285
  store i32 %conv232, i32* %x225, align 4, !dbg !5283
  call void @llvm.dbg.declare(metadata i32* %y233, metadata !5288, metadata !909), !dbg !5289
  %174 = load i32, i32* %Y.addr, align 4, !dbg !5290
  %idxprom234 = sext i32 %174 to i64, !dbg !5291
  %175 = load i32, i32* %i, align 4, !dbg !5292
  %idxprom235 = sext i32 %175 to i64, !dbg !5291
  %176 = load i32, i32* %P.addr, align 4, !dbg !5293
  %idxprom236 = sext i32 %176 to i64, !dbg !5291
  %arrayidx237 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom236, !dbg !5291
  %arrayidx238 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx237, i64 0, i64 %idxprom235, !dbg !5291
  %arrayidx239 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx238, i64 0, i64 %idxprom234, !dbg !5291
  %177 = load i16, i16* %arrayidx239, align 2, !dbg !5291
  %conv240 = zext i16 %177 to i32, !dbg !5291
  store i32 %conv240, i32* %y233, align 4, !dbg !5289
  %178 = load i32, i32* %x225, align 4, !dbg !5294
  %179 = load i32, i32* %max, align 4, !dbg !5296
  %div241 = sdiv i32 %179, 2, !dbg !5297
  %cmp242 = icmp sgt i32 %178, %div241, !dbg !5298
  br i1 %cmp242, label %if.then244, label %if.else, !dbg !5299

if.then244:                                       ; preds = %for.body219
  %180 = load i32, i32* %x225, align 4, !dbg !5300
  %add = add nsw i32 %180, 8, !dbg !5300
  store i32 %add, i32* %x225, align 4, !dbg !5300
  br label %if.end246, !dbg !5301

if.else:                                          ; preds = %for.body219
  %181 = load i32, i32* %x225, align 4, !dbg !5302
  %sub245 = sub nsw i32 %181, 14, !dbg !5302
  store i32 %sub245, i32* %x225, align 4, !dbg !5302
  br label %if.end246

if.end246:                                        ; preds = %if.else, %if.then244
  %182 = load i32, i32* %y233, align 4, !dbg !5303
  %183 = load i32, i32* %max, align 4, !dbg !5305
  %div247 = sdiv i32 %183, 2, !dbg !5306
  %cmp248 = icmp sgt i32 %182, %div247, !dbg !5307
  br i1 %cmp248, label %if.then250, label %if.else252, !dbg !5308

if.then250:                                       ; preds = %if.end246
  %184 = load i32, i32* %y233, align 4, !dbg !5309
  %add251 = add nsw i32 %184, 8, !dbg !5309
  store i32 %add251, i32* %y233, align 4, !dbg !5309
  br label %if.end254, !dbg !5310

if.else252:                                       ; preds = %if.end246
  %185 = load i32, i32* %y233, align 4, !dbg !5311
  %sub253 = sub nsw i32 %185, 14, !dbg !5311
  store i32 %sub253, i32* %y233, align 4, !dbg !5311
  br label %if.end254

if.end254:                                        ; preds = %if.else252, %if.then250
  %186 = load i32, i32* %x225, align 4, !dbg !5312
  %187 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5313
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %187, i32 0, i32 3, !dbg !5314
  %188 = load i32, i32* %width, align 8, !dbg !5314
  %sub255 = sub nsw i32 %188, 9, !dbg !5315
  store i32 %186, i32* %a.addr.i, align 4, !dbg !5316
  store i32 0, i32* %amin.addr.i, align 4, !dbg !5316
  store i32 %sub255, i32* %amax.addr.i, align 4, !dbg !5316
  %189 = load i32, i32* %a.addr.i, align 4, !dbg !5317
  %190 = load i32, i32* %amin.addr.i, align 4, !dbg !5318
  %cmp.i = icmp slt i32 %189, %190, !dbg !5319
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5320

if.then.i:                                        ; preds = %if.end254
  %191 = load i32, i32* %amin.addr.i, align 4, !dbg !5321
  store i32 %191, i32* %retval.i, align 4, !dbg !5322
  br label %av_clip_c.exit, !dbg !5322

if.else.i:                                        ; preds = %if.end254
  %192 = load i32, i32* %a.addr.i, align 4, !dbg !5323
  %193 = load i32, i32* %amax.addr.i, align 4, !dbg !5324
  %cmp1.i = icmp sgt i32 %192, %193, !dbg !5325
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !5326

if.then2.i:                                       ; preds = %if.else.i
  %194 = load i32, i32* %amax.addr.i, align 4, !dbg !5327
  store i32 %194, i32* %retval.i, align 4, !dbg !5328
  br label %av_clip_c.exit, !dbg !5328

if.else3.i:                                       ; preds = %if.else.i
  %195 = load i32, i32* %a.addr.i, align 4, !dbg !5329
  store i32 %195, i32* %retval.i, align 4, !dbg !5330
  br label %av_clip_c.exit, !dbg !5330

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %196 = load i32, i32* %retval.i, align 4, !dbg !5331
  store i32 %196, i32* %x225, align 4, !dbg !5332
  %197 = load i32, i32* %y233, align 4, !dbg !5333
  %198 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5334
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %198, i32 0, i32 4, !dbg !5335
  %199 = load i32, i32* %height, align 4, !dbg !5335
  %sub256 = sub nsw i32 %199, 9, !dbg !5336
  store i32 %197, i32* %a.addr.i267, align 4, !dbg !5337
  store i32 0, i32* %amin.addr.i268, align 4, !dbg !5337
  store i32 %sub256, i32* %amax.addr.i269, align 4, !dbg !5337
  %200 = load i32, i32* %a.addr.i267, align 4, !dbg !5338
  %201 = load i32, i32* %amin.addr.i268, align 4, !dbg !5339
  %cmp.i270 = icmp slt i32 %200, %201, !dbg !5340
  br i1 %cmp.i270, label %if.then.i271, label %if.else.i273, !dbg !5341

if.then.i271:                                     ; preds = %av_clip_c.exit
  %202 = load i32, i32* %amin.addr.i268, align 4, !dbg !5342
  store i32 %202, i32* %retval.i266, align 4, !dbg !5343
  br label %av_clip_c.exit276, !dbg !5343

if.else.i273:                                     ; preds = %av_clip_c.exit
  %203 = load i32, i32* %a.addr.i267, align 4, !dbg !5344
  %204 = load i32, i32* %amax.addr.i269, align 4, !dbg !5345
  %cmp1.i272 = icmp sgt i32 %203, %204, !dbg !5346
  br i1 %cmp1.i272, label %if.then2.i274, label %if.else3.i275, !dbg !5347

if.then2.i274:                                    ; preds = %if.else.i273
  %205 = load i32, i32* %amax.addr.i269, align 4, !dbg !5348
  store i32 %205, i32* %retval.i266, align 4, !dbg !5349
  br label %av_clip_c.exit276, !dbg !5349

if.else3.i275:                                    ; preds = %if.else.i273
  %206 = load i32, i32* %a.addr.i267, align 4, !dbg !5350
  store i32 %206, i32* %retval.i266, align 4, !dbg !5351
  br label %av_clip_c.exit276, !dbg !5351

av_clip_c.exit276:                                ; preds = %if.then.i271, %if.then2.i274, %if.else3.i275
  %207 = load i32, i32* %retval.i266, align 4, !dbg !5352
  store i32 %207, i32* %y233, align 4, !dbg !5353
  %208 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5354
  %209 = load i32, i32* %x225, align 4, !dbg !5355
  %210 = load i32, i32* %y233, align 4, !dbg !5356
  %211 = load float, float* %o, align 4, !dbg !5357
  %212 = load float, float* %o, align 4, !dbg !5358
  %conv258 = fpext float %212 to double, !dbg !5358
  %sub259 = fsub double 1.000000e+00, %conv258, !dbg !5359
  %conv260 = fptrunc double %sub259 to float, !dbg !5360
  %213 = load i32, i32* %i, align 4, !dbg !5361
  %idxprom261 = sext i32 %213 to i64, !dbg !5362
  %arrayidx262 = getelementptr inbounds [6 x i8*], [6 x i8*]* @positions_name, i64 0, i64 %idxprom261, !dbg !5362
  %214 = load i8*, i8** %arrayidx262, align 8, !dbg !5362
  %arraydecay = getelementptr inbounds [4 x i16], [4 x i16]* %color, i32 0, i32 0, !dbg !5363
  call void @draw_htext16(%struct.AVFrame* %208, i32 %209, i32 %210, float %211, float %conv260, i8* %214, i16* %arraydecay), !dbg !5364
  br label %for.inc263, !dbg !5365

for.inc263:                                       ; preds = %av_clip_c.exit276
  %215 = load i32, i32* %i, align 4, !dbg !5366
  %inc264 = add nsw i32 %215, 1, !dbg !5366
  store i32 %inc264, i32* %i, align 4, !dbg !5366
  br label %for.cond213, !dbg !5368, !llvm.loop !5369

for.end265:                                       ; preds = %land.end
  ret void, !dbg !5371
}

; Function Attrs: nounwind uwtable
define internal void @color_graticule16(%struct.VectorscopeContext* %s, %struct.AVFrame* %out, i32 %X, i32 %Y, i32 %D, i32 %P) #1 !dbg !5372 {
entry:
  %retval.i325 = alloca i32, align 4
  %a.addr.i326 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i326, metadata !4149, metadata !909), !dbg !5373
  %amin.addr.i327 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i327, metadata !4159, metadata !909), !dbg !5378
  %amax.addr.i328 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i328, metadata !4161, metadata !909), !dbg !5379
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4149, metadata !909), !dbg !5380
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4159, metadata !909), !dbg !5382
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4161, metadata !909), !dbg !5383
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  %X.addr = alloca i32, align 4
  %Y.addr = alloca i32, align 4
  %D.addr = alloca i32, align 4
  %P.addr = alloca i32, align 4
  %max = alloca i32, align 4
  %o = alloca float, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %d = alloca i32, align 4
  %x78 = alloca i32, align 4
  %y85 = alloca i32, align 4
  %d92 = alloca i32, align 4
  %x170 = alloca i32, align 4
  %y177 = alloca i32, align 4
  %d184 = alloca i32, align 4
  %color = alloca [4 x i16], align 2
  %x265 = alloca i32, align 4
  %y273 = alloca i32, align 4
  %d281 = alloca i32, align 4
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !5384, metadata !909), !dbg !5385
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !5386, metadata !909), !dbg !5387
  store i32 %X, i32* %X.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %X.addr, metadata !5388, metadata !909), !dbg !5389
  store i32 %Y, i32* %Y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Y.addr, metadata !5390, metadata !909), !dbg !5391
  store i32 %D, i32* %D.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %D.addr, metadata !5392, metadata !909), !dbg !5393
  store i32 %P, i32* %P.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %P.addr, metadata !5394, metadata !909), !dbg !5395
  call void @llvm.dbg.declare(metadata i32* %max, metadata !5396, metadata !909), !dbg !5397
  %0 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5398
  %size = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %0, i32 0, i32 13, !dbg !5399
  %1 = load i32, i32* %size, align 4, !dbg !5399
  %sub = sub nsw i32 %1, 1, !dbg !5400
  store i32 %sub, i32* %max, align 4, !dbg !5397
  call void @llvm.dbg.declare(metadata float* %o, metadata !5401, metadata !909), !dbg !5402
  %2 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5403
  %opacity = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %2, i32 0, i32 18, !dbg !5404
  %3 = load float, float* %opacity, align 8, !dbg !5404
  store float %3, float* %o, align 4, !dbg !5402
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5405, metadata !909), !dbg !5406
  store i32 0, i32* %i, align 4, !dbg !5407
  br label %for.cond, !dbg !5409

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !5410
  %cmp = icmp slt i32 %4, 12, !dbg !5413
  br i1 %cmp, label %for.body, label %for.end, !dbg !5414

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5415, metadata !909), !dbg !5417
  %5 = load i32, i32* %X.addr, align 4, !dbg !5418
  %idxprom = sext i32 %5 to i64, !dbg !5419
  %6 = load i32, i32* %i, align 4, !dbg !5420
  %idxprom1 = sext i32 %6 to i64, !dbg !5419
  %7 = load i32, i32* %P.addr, align 4, !dbg !5421
  %idxprom2 = sext i32 %7 to i64, !dbg !5419
  %arrayidx = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom2, !dbg !5419
  %arrayidx3 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx, i64 0, i64 %idxprom1, !dbg !5419
  %arrayidx4 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx3, i64 0, i64 %idxprom, !dbg !5419
  %8 = load i16, i16* %arrayidx4, align 2, !dbg !5419
  %conv = zext i16 %8 to i32, !dbg !5419
  store i32 %conv, i32* %x, align 4, !dbg !5417
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5422, metadata !909), !dbg !5423
  %9 = load i32, i32* %Y.addr, align 4, !dbg !5424
  %idxprom5 = sext i32 %9 to i64, !dbg !5425
  %10 = load i32, i32* %i, align 4, !dbg !5426
  %idxprom6 = sext i32 %10 to i64, !dbg !5425
  %11 = load i32, i32* %P.addr, align 4, !dbg !5427
  %idxprom7 = sext i32 %11 to i64, !dbg !5425
  %arrayidx8 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom7, !dbg !5425
  %arrayidx9 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx8, i64 0, i64 %idxprom6, !dbg !5425
  %arrayidx10 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx9, i64 0, i64 %idxprom5, !dbg !5425
  %12 = load i16, i16* %arrayidx10, align 2, !dbg !5425
  %conv11 = zext i16 %12 to i32, !dbg !5425
  store i32 %conv11, i32* %y, align 4, !dbg !5423
  call void @llvm.dbg.declare(metadata i32* %d, metadata !5428, metadata !909), !dbg !5429
  %13 = load i32, i32* %D.addr, align 4, !dbg !5430
  %idxprom12 = sext i32 %13 to i64, !dbg !5431
  %14 = load i32, i32* %i, align 4, !dbg !5432
  %idxprom13 = sext i32 %14 to i64, !dbg !5431
  %15 = load i32, i32* %P.addr, align 4, !dbg !5433
  %idxprom14 = sext i32 %15 to i64, !dbg !5431
  %arrayidx15 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom14, !dbg !5431
  %arrayidx16 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx15, i64 0, i64 %idxprom13, !dbg !5431
  %arrayidx17 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx16, i64 0, i64 %idxprom12, !dbg !5431
  %16 = load i16, i16* %arrayidx17, align 2, !dbg !5431
  %conv18 = zext i16 %16 to i32, !dbg !5431
  store i32 %conv18, i32* %d, align 4, !dbg !5429
  %17 = load i32, i32* %D.addr, align 4, !dbg !5434
  %idxprom19 = sext i32 %17 to i64, !dbg !5435
  %18 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5435
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 0, !dbg !5436
  %arrayidx20 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom19, !dbg !5435
  %19 = load i8*, i8** %arrayidx20, align 8, !dbg !5435
  %20 = load i32, i32* %y, align 4, !dbg !5437
  %21 = load i32, i32* %D.addr, align 4, !dbg !5438
  %idxprom21 = sext i32 %21 to i64, !dbg !5439
  %22 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5439
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %22, i32 0, i32 1, !dbg !5440
  %arrayidx22 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom21, !dbg !5439
  %23 = load i32, i32* %arrayidx22, align 4, !dbg !5439
  %mul = mul nsw i32 %20, %23, !dbg !5441
  %idx.ext = sext i32 %mul to i64, !dbg !5442
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %idx.ext, !dbg !5442
  %24 = load i32, i32* %x, align 4, !dbg !5443
  %mul23 = mul nsw i32 %24, 2, !dbg !5444
  %idx.ext24 = sext i32 %mul23 to i64, !dbg !5445
  %add.ptr25 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext24, !dbg !5445
  %25 = bitcast i8* %add.ptr25 to i16*, !dbg !5446
  %26 = load i32, i32* %D.addr, align 4, !dbg !5447
  %idxprom26 = sext i32 %26 to i64, !dbg !5448
  %27 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5448
  %linesize27 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %27, i32 0, i32 1, !dbg !5449
  %arrayidx28 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize27, i64 0, i64 %idxprom26, !dbg !5448
  %28 = load i32, i32* %arrayidx28, align 4, !dbg !5448
  %div = sdiv i32 %28, 2, !dbg !5450
  %29 = load i32, i32* %d, align 4, !dbg !5451
  %30 = load float, float* %o, align 4, !dbg !5452
  call void @draw_dots16(i16* %25, i32 %div, i32 %29, float %30), !dbg !5453
  %31 = load i32, i32* %X.addr, align 4, !dbg !5454
  %idxprom29 = sext i32 %31 to i64, !dbg !5455
  %32 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5455
  %data30 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %32, i32 0, i32 0, !dbg !5456
  %arrayidx31 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data30, i64 0, i64 %idxprom29, !dbg !5455
  %33 = load i8*, i8** %arrayidx31, align 8, !dbg !5455
  %34 = load i32, i32* %y, align 4, !dbg !5457
  %35 = load i32, i32* %X.addr, align 4, !dbg !5458
  %idxprom32 = sext i32 %35 to i64, !dbg !5459
  %36 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5459
  %linesize33 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %36, i32 0, i32 1, !dbg !5460
  %arrayidx34 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize33, i64 0, i64 %idxprom32, !dbg !5459
  %37 = load i32, i32* %arrayidx34, align 4, !dbg !5459
  %mul35 = mul nsw i32 %34, %37, !dbg !5461
  %idx.ext36 = sext i32 %mul35 to i64, !dbg !5462
  %add.ptr37 = getelementptr inbounds i8, i8* %33, i64 %idx.ext36, !dbg !5462
  %38 = load i32, i32* %x, align 4, !dbg !5463
  %mul38 = mul nsw i32 %38, 2, !dbg !5464
  %idx.ext39 = sext i32 %mul38 to i64, !dbg !5465
  %add.ptr40 = getelementptr inbounds i8, i8* %add.ptr37, i64 %idx.ext39, !dbg !5465
  %39 = bitcast i8* %add.ptr40 to i16*, !dbg !5466
  %40 = load i32, i32* %X.addr, align 4, !dbg !5467
  %idxprom41 = sext i32 %40 to i64, !dbg !5468
  %41 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5468
  %linesize42 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %41, i32 0, i32 1, !dbg !5469
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize42, i64 0, i64 %idxprom41, !dbg !5468
  %42 = load i32, i32* %arrayidx43, align 4, !dbg !5468
  %div44 = sdiv i32 %42, 2, !dbg !5470
  %43 = load i32, i32* %x, align 4, !dbg !5471
  %44 = load float, float* %o, align 4, !dbg !5472
  call void @draw_dots16(i16* %39, i32 %div44, i32 %43, float %44), !dbg !5473
  %45 = load i32, i32* %Y.addr, align 4, !dbg !5474
  %idxprom45 = sext i32 %45 to i64, !dbg !5475
  %46 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5475
  %data46 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %46, i32 0, i32 0, !dbg !5476
  %arrayidx47 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data46, i64 0, i64 %idxprom45, !dbg !5475
  %47 = load i8*, i8** %arrayidx47, align 8, !dbg !5475
  %48 = load i32, i32* %y, align 4, !dbg !5477
  %49 = load i32, i32* %Y.addr, align 4, !dbg !5478
  %idxprom48 = sext i32 %49 to i64, !dbg !5479
  %50 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5479
  %linesize49 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %50, i32 0, i32 1, !dbg !5480
  %arrayidx50 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize49, i64 0, i64 %idxprom48, !dbg !5479
  %51 = load i32, i32* %arrayidx50, align 4, !dbg !5479
  %mul51 = mul nsw i32 %48, %51, !dbg !5481
  %idx.ext52 = sext i32 %mul51 to i64, !dbg !5482
  %add.ptr53 = getelementptr inbounds i8, i8* %47, i64 %idx.ext52, !dbg !5482
  %52 = load i32, i32* %x, align 4, !dbg !5483
  %mul54 = mul nsw i32 %52, 2, !dbg !5484
  %idx.ext55 = sext i32 %mul54 to i64, !dbg !5485
  %add.ptr56 = getelementptr inbounds i8, i8* %add.ptr53, i64 %idx.ext55, !dbg !5485
  %53 = bitcast i8* %add.ptr56 to i16*, !dbg !5486
  %54 = load i32, i32* %Y.addr, align 4, !dbg !5487
  %idxprom57 = sext i32 %54 to i64, !dbg !5488
  %55 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5488
  %linesize58 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %55, i32 0, i32 1, !dbg !5489
  %arrayidx59 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize58, i64 0, i64 %idxprom57, !dbg !5488
  %56 = load i32, i32* %arrayidx59, align 4, !dbg !5488
  %div60 = sdiv i32 %56, 2, !dbg !5490
  %57 = load i32, i32* %y, align 4, !dbg !5491
  %58 = load float, float* %o, align 4, !dbg !5492
  call void @draw_dots16(i16* %53, i32 %div60, i32 %57, float %58), !dbg !5493
  %59 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5494
  %data61 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %59, i32 0, i32 0, !dbg !5496
  %arrayidx62 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data61, i64 0, i64 3, !dbg !5494
  %60 = load i8*, i8** %arrayidx62, align 8, !dbg !5494
  %tobool = icmp ne i8* %60, null, !dbg !5494
  br i1 %tobool, label %if.then, label %if.end, !dbg !5497

if.then:                                          ; preds = %for.body
  %61 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5498
  %data63 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %61, i32 0, i32 0, !dbg !5499
  %arrayidx64 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data63, i64 0, i64 3, !dbg !5498
  %62 = load i8*, i8** %arrayidx64, align 8, !dbg !5498
  %63 = load i32, i32* %y, align 4, !dbg !5500
  %64 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5501
  %linesize65 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %64, i32 0, i32 1, !dbg !5502
  %arrayidx66 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize65, i64 0, i64 3, !dbg !5501
  %65 = load i32, i32* %arrayidx66, align 4, !dbg !5501
  %mul67 = mul nsw i32 %63, %65, !dbg !5503
  %idx.ext68 = sext i32 %mul67 to i64, !dbg !5504
  %add.ptr69 = getelementptr inbounds i8, i8* %62, i64 %idx.ext68, !dbg !5504
  %66 = load i32, i32* %x, align 4, !dbg !5505
  %mul70 = mul nsw i32 %66, 2, !dbg !5506
  %idx.ext71 = sext i32 %mul70 to i64, !dbg !5507
  %add.ptr72 = getelementptr inbounds i8, i8* %add.ptr69, i64 %idx.ext71, !dbg !5507
  %67 = bitcast i8* %add.ptr72 to i16*, !dbg !5508
  %68 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5509
  %linesize73 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %68, i32 0, i32 1, !dbg !5510
  %arrayidx74 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize73, i64 0, i64 3, !dbg !5509
  %69 = load i32, i32* %arrayidx74, align 4, !dbg !5509
  %div75 = sdiv i32 %69, 2, !dbg !5511
  %70 = load i32, i32* %max, align 4, !dbg !5512
  %71 = load float, float* %o, align 4, !dbg !5513
  call void @draw_dots16(i16* %67, i32 %div75, i32 %70, float %71), !dbg !5514
  br label %if.end, !dbg !5514

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5515

for.inc:                                          ; preds = %if.end
  %72 = load i32, i32* %i, align 4, !dbg !5516
  %inc = add nsw i32 %72, 1, !dbg !5516
  store i32 %inc, i32* %i, align 4, !dbg !5516
  br label %for.cond, !dbg !5518, !llvm.loop !5519

for.end:                                          ; preds = %for.cond
  %73 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5521
  %flags = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %73, i32 0, i32 24, !dbg !5523
  %74 = load i32, i32* %flags, align 8, !dbg !5523
  %and = and i32 %74, 1, !dbg !5524
  %tobool76 = icmp ne i32 %and, 0, !dbg !5524
  br i1 %tobool76, label %if.then77, label %if.end165, !dbg !5525

if.then77:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %x78, metadata !5526, metadata !909), !dbg !5528
  %75 = load i32, i32* %X.addr, align 4, !dbg !5529
  %idxprom79 = sext i32 %75 to i64, !dbg !5530
  %76 = load i32, i32* %P.addr, align 4, !dbg !5531
  %idxprom80 = sext i32 %76 to i64, !dbg !5530
  %arrayidx81 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom80, !dbg !5530
  %arrayidx82 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx81, i64 0, i64 12, !dbg !5530
  %arrayidx83 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx82, i64 0, i64 %idxprom79, !dbg !5530
  %77 = load i16, i16* %arrayidx83, align 2, !dbg !5530
  %conv84 = zext i16 %77 to i32, !dbg !5530
  store i32 %conv84, i32* %x78, align 4, !dbg !5528
  call void @llvm.dbg.declare(metadata i32* %y85, metadata !5532, metadata !909), !dbg !5533
  %78 = load i32, i32* %Y.addr, align 4, !dbg !5534
  %idxprom86 = sext i32 %78 to i64, !dbg !5535
  %79 = load i32, i32* %P.addr, align 4, !dbg !5536
  %idxprom87 = sext i32 %79 to i64, !dbg !5535
  %arrayidx88 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom87, !dbg !5535
  %arrayidx89 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx88, i64 0, i64 12, !dbg !5535
  %arrayidx90 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx89, i64 0, i64 %idxprom86, !dbg !5535
  %80 = load i16, i16* %arrayidx90, align 2, !dbg !5535
  %conv91 = zext i16 %80 to i32, !dbg !5535
  store i32 %conv91, i32* %y85, align 4, !dbg !5533
  call void @llvm.dbg.declare(metadata i32* %d92, metadata !5537, metadata !909), !dbg !5538
  %81 = load i32, i32* %D.addr, align 4, !dbg !5539
  %idxprom93 = sext i32 %81 to i64, !dbg !5540
  %82 = load i32, i32* %P.addr, align 4, !dbg !5541
  %idxprom94 = sext i32 %82 to i64, !dbg !5540
  %arrayidx95 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom94, !dbg !5540
  %arrayidx96 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx95, i64 0, i64 12, !dbg !5540
  %arrayidx97 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx96, i64 0, i64 %idxprom93, !dbg !5540
  %83 = load i16, i16* %arrayidx97, align 2, !dbg !5540
  %conv98 = zext i16 %83 to i32, !dbg !5540
  store i32 %conv98, i32* %d92, align 4, !dbg !5538
  %84 = load i32, i32* %D.addr, align 4, !dbg !5542
  %idxprom99 = sext i32 %84 to i64, !dbg !5543
  %85 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5543
  %data100 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %85, i32 0, i32 0, !dbg !5544
  %arrayidx101 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data100, i64 0, i64 %idxprom99, !dbg !5543
  %86 = load i8*, i8** %arrayidx101, align 8, !dbg !5543
  %87 = load i32, i32* %y85, align 4, !dbg !5545
  %88 = load i32, i32* %D.addr, align 4, !dbg !5546
  %idxprom102 = sext i32 %88 to i64, !dbg !5547
  %89 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5547
  %linesize103 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %89, i32 0, i32 1, !dbg !5548
  %arrayidx104 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize103, i64 0, i64 %idxprom102, !dbg !5547
  %90 = load i32, i32* %arrayidx104, align 4, !dbg !5547
  %mul105 = mul nsw i32 %87, %90, !dbg !5549
  %idx.ext106 = sext i32 %mul105 to i64, !dbg !5550
  %add.ptr107 = getelementptr inbounds i8, i8* %86, i64 %idx.ext106, !dbg !5550
  %91 = load i32, i32* %x78, align 4, !dbg !5551
  %mul108 = mul nsw i32 %91, 2, !dbg !5552
  %idx.ext109 = sext i32 %mul108 to i64, !dbg !5553
  %add.ptr110 = getelementptr inbounds i8, i8* %add.ptr107, i64 %idx.ext109, !dbg !5553
  %92 = bitcast i8* %add.ptr110 to i16*, !dbg !5554
  %93 = load i32, i32* %D.addr, align 4, !dbg !5555
  %idxprom111 = sext i32 %93 to i64, !dbg !5556
  %94 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5556
  %linesize112 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %94, i32 0, i32 1, !dbg !5557
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize112, i64 0, i64 %idxprom111, !dbg !5556
  %95 = load i32, i32* %arrayidx113, align 4, !dbg !5556
  %div114 = sdiv i32 %95, 2, !dbg !5558
  %96 = load i32, i32* %d92, align 4, !dbg !5559
  %97 = load float, float* %o, align 4, !dbg !5560
  call void @draw_dots16(i16* %92, i32 %div114, i32 %96, float %97), !dbg !5561
  %98 = load i32, i32* %X.addr, align 4, !dbg !5562
  %idxprom115 = sext i32 %98 to i64, !dbg !5563
  %99 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5563
  %data116 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %99, i32 0, i32 0, !dbg !5564
  %arrayidx117 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data116, i64 0, i64 %idxprom115, !dbg !5563
  %100 = load i8*, i8** %arrayidx117, align 8, !dbg !5563
  %101 = load i32, i32* %y85, align 4, !dbg !5565
  %102 = load i32, i32* %X.addr, align 4, !dbg !5566
  %idxprom118 = sext i32 %102 to i64, !dbg !5567
  %103 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5567
  %linesize119 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %103, i32 0, i32 1, !dbg !5568
  %arrayidx120 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize119, i64 0, i64 %idxprom118, !dbg !5567
  %104 = load i32, i32* %arrayidx120, align 4, !dbg !5567
  %mul121 = mul nsw i32 %101, %104, !dbg !5569
  %idx.ext122 = sext i32 %mul121 to i64, !dbg !5570
  %add.ptr123 = getelementptr inbounds i8, i8* %100, i64 %idx.ext122, !dbg !5570
  %105 = load i32, i32* %x78, align 4, !dbg !5571
  %mul124 = mul nsw i32 %105, 2, !dbg !5572
  %idx.ext125 = sext i32 %mul124 to i64, !dbg !5573
  %add.ptr126 = getelementptr inbounds i8, i8* %add.ptr123, i64 %idx.ext125, !dbg !5573
  %106 = bitcast i8* %add.ptr126 to i16*, !dbg !5574
  %107 = load i32, i32* %X.addr, align 4, !dbg !5575
  %idxprom127 = sext i32 %107 to i64, !dbg !5576
  %108 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5576
  %linesize128 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %108, i32 0, i32 1, !dbg !5577
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize128, i64 0, i64 %idxprom127, !dbg !5576
  %109 = load i32, i32* %arrayidx129, align 4, !dbg !5576
  %div130 = sdiv i32 %109, 2, !dbg !5578
  %110 = load i32, i32* %x78, align 4, !dbg !5579
  %111 = load float, float* %o, align 4, !dbg !5580
  call void @draw_dots16(i16* %106, i32 %div130, i32 %110, float %111), !dbg !5581
  %112 = load i32, i32* %Y.addr, align 4, !dbg !5582
  %idxprom131 = sext i32 %112 to i64, !dbg !5583
  %113 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5583
  %data132 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %113, i32 0, i32 0, !dbg !5584
  %arrayidx133 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data132, i64 0, i64 %idxprom131, !dbg !5583
  %114 = load i8*, i8** %arrayidx133, align 8, !dbg !5583
  %115 = load i32, i32* %y85, align 4, !dbg !5585
  %116 = load i32, i32* %Y.addr, align 4, !dbg !5586
  %idxprom134 = sext i32 %116 to i64, !dbg !5587
  %117 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5587
  %linesize135 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %117, i32 0, i32 1, !dbg !5588
  %arrayidx136 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize135, i64 0, i64 %idxprom134, !dbg !5587
  %118 = load i32, i32* %arrayidx136, align 4, !dbg !5587
  %mul137 = mul nsw i32 %115, %118, !dbg !5589
  %idx.ext138 = sext i32 %mul137 to i64, !dbg !5590
  %add.ptr139 = getelementptr inbounds i8, i8* %114, i64 %idx.ext138, !dbg !5590
  %119 = load i32, i32* %x78, align 4, !dbg !5591
  %mul140 = mul nsw i32 %119, 2, !dbg !5592
  %idx.ext141 = sext i32 %mul140 to i64, !dbg !5593
  %add.ptr142 = getelementptr inbounds i8, i8* %add.ptr139, i64 %idx.ext141, !dbg !5593
  %120 = bitcast i8* %add.ptr142 to i16*, !dbg !5594
  %121 = load i32, i32* %Y.addr, align 4, !dbg !5595
  %idxprom143 = sext i32 %121 to i64, !dbg !5596
  %122 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5596
  %linesize144 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %122, i32 0, i32 1, !dbg !5597
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize144, i64 0, i64 %idxprom143, !dbg !5596
  %123 = load i32, i32* %arrayidx145, align 4, !dbg !5596
  %div146 = sdiv i32 %123, 2, !dbg !5598
  %124 = load i32, i32* %y85, align 4, !dbg !5599
  %125 = load float, float* %o, align 4, !dbg !5600
  call void @draw_dots16(i16* %120, i32 %div146, i32 %124, float %125), !dbg !5601
  %126 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5602
  %data147 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %126, i32 0, i32 0, !dbg !5604
  %arrayidx148 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data147, i64 0, i64 3, !dbg !5602
  %127 = load i8*, i8** %arrayidx148, align 8, !dbg !5602
  %tobool149 = icmp ne i8* %127, null, !dbg !5602
  br i1 %tobool149, label %if.then150, label %if.end164, !dbg !5605

if.then150:                                       ; preds = %if.then77
  %128 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5606
  %data151 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %128, i32 0, i32 0, !dbg !5607
  %arrayidx152 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data151, i64 0, i64 3, !dbg !5606
  %129 = load i8*, i8** %arrayidx152, align 8, !dbg !5606
  %130 = load i32, i32* %y85, align 4, !dbg !5608
  %131 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5609
  %linesize153 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %131, i32 0, i32 1, !dbg !5610
  %arrayidx154 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize153, i64 0, i64 3, !dbg !5609
  %132 = load i32, i32* %arrayidx154, align 4, !dbg !5609
  %mul155 = mul nsw i32 %130, %132, !dbg !5611
  %idx.ext156 = sext i32 %mul155 to i64, !dbg !5612
  %add.ptr157 = getelementptr inbounds i8, i8* %129, i64 %idx.ext156, !dbg !5612
  %133 = load i32, i32* %x78, align 4, !dbg !5613
  %mul158 = mul nsw i32 %133, 2, !dbg !5614
  %idx.ext159 = sext i32 %mul158 to i64, !dbg !5615
  %add.ptr160 = getelementptr inbounds i8, i8* %add.ptr157, i64 %idx.ext159, !dbg !5615
  %134 = bitcast i8* %add.ptr160 to i16*, !dbg !5616
  %135 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5617
  %linesize161 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %135, i32 0, i32 1, !dbg !5618
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize161, i64 0, i64 3, !dbg !5617
  %136 = load i32, i32* %arrayidx162, align 4, !dbg !5617
  %div163 = sdiv i32 %136, 2, !dbg !5619
  %137 = load i32, i32* %max, align 4, !dbg !5620
  %138 = load float, float* %o, align 4, !dbg !5621
  call void @draw_dots16(i16* %134, i32 %div163, i32 %137, float %138), !dbg !5622
  br label %if.end164, !dbg !5622

if.end164:                                        ; preds = %if.then150, %if.then77
  br label %if.end165, !dbg !5623

if.end165:                                        ; preds = %if.end164, %for.end
  %139 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5624
  %flags166 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %139, i32 0, i32 24, !dbg !5626
  %140 = load i32, i32* %flags166, align 8, !dbg !5626
  %and167 = and i32 %140, 2, !dbg !5627
  %tobool168 = icmp ne i32 %and167, 0, !dbg !5627
  br i1 %tobool168, label %if.then169, label %if.end257, !dbg !5628

if.then169:                                       ; preds = %if.end165
  call void @llvm.dbg.declare(metadata i32* %x170, metadata !5629, metadata !909), !dbg !5631
  %141 = load i32, i32* %X.addr, align 4, !dbg !5632
  %idxprom171 = sext i32 %141 to i64, !dbg !5633
  %142 = load i32, i32* %P.addr, align 4, !dbg !5634
  %idxprom172 = sext i32 %142 to i64, !dbg !5633
  %arrayidx173 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom172, !dbg !5633
  %arrayidx174 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx173, i64 0, i64 13, !dbg !5633
  %arrayidx175 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx174, i64 0, i64 %idxprom171, !dbg !5633
  %143 = load i16, i16* %arrayidx175, align 2, !dbg !5633
  %conv176 = zext i16 %143 to i32, !dbg !5633
  store i32 %conv176, i32* %x170, align 4, !dbg !5631
  call void @llvm.dbg.declare(metadata i32* %y177, metadata !5635, metadata !909), !dbg !5636
  %144 = load i32, i32* %Y.addr, align 4, !dbg !5637
  %idxprom178 = sext i32 %144 to i64, !dbg !5638
  %145 = load i32, i32* %P.addr, align 4, !dbg !5639
  %idxprom179 = sext i32 %145 to i64, !dbg !5638
  %arrayidx180 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom179, !dbg !5638
  %arrayidx181 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx180, i64 0, i64 13, !dbg !5638
  %arrayidx182 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx181, i64 0, i64 %idxprom178, !dbg !5638
  %146 = load i16, i16* %arrayidx182, align 2, !dbg !5638
  %conv183 = zext i16 %146 to i32, !dbg !5638
  store i32 %conv183, i32* %y177, align 4, !dbg !5636
  call void @llvm.dbg.declare(metadata i32* %d184, metadata !5640, metadata !909), !dbg !5641
  %147 = load i32, i32* %D.addr, align 4, !dbg !5642
  %idxprom185 = sext i32 %147 to i64, !dbg !5643
  %148 = load i32, i32* %P.addr, align 4, !dbg !5644
  %idxprom186 = sext i32 %148 to i64, !dbg !5643
  %arrayidx187 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom186, !dbg !5643
  %arrayidx188 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx187, i64 0, i64 13, !dbg !5643
  %arrayidx189 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx188, i64 0, i64 %idxprom185, !dbg !5643
  %149 = load i16, i16* %arrayidx189, align 2, !dbg !5643
  %conv190 = zext i16 %149 to i32, !dbg !5643
  store i32 %conv190, i32* %d184, align 4, !dbg !5641
  %150 = load i32, i32* %D.addr, align 4, !dbg !5645
  %idxprom191 = sext i32 %150 to i64, !dbg !5646
  %151 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5646
  %data192 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %151, i32 0, i32 0, !dbg !5647
  %arrayidx193 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data192, i64 0, i64 %idxprom191, !dbg !5646
  %152 = load i8*, i8** %arrayidx193, align 8, !dbg !5646
  %153 = load i32, i32* %y177, align 4, !dbg !5648
  %154 = load i32, i32* %D.addr, align 4, !dbg !5649
  %idxprom194 = sext i32 %154 to i64, !dbg !5650
  %155 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5650
  %linesize195 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %155, i32 0, i32 1, !dbg !5651
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize195, i64 0, i64 %idxprom194, !dbg !5650
  %156 = load i32, i32* %arrayidx196, align 4, !dbg !5650
  %mul197 = mul nsw i32 %153, %156, !dbg !5652
  %idx.ext198 = sext i32 %mul197 to i64, !dbg !5653
  %add.ptr199 = getelementptr inbounds i8, i8* %152, i64 %idx.ext198, !dbg !5653
  %157 = load i32, i32* %x170, align 4, !dbg !5654
  %mul200 = mul nsw i32 %157, 2, !dbg !5655
  %idx.ext201 = sext i32 %mul200 to i64, !dbg !5656
  %add.ptr202 = getelementptr inbounds i8, i8* %add.ptr199, i64 %idx.ext201, !dbg !5656
  %158 = bitcast i8* %add.ptr202 to i16*, !dbg !5657
  %159 = load i32, i32* %D.addr, align 4, !dbg !5658
  %idxprom203 = sext i32 %159 to i64, !dbg !5659
  %160 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5659
  %linesize204 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %160, i32 0, i32 1, !dbg !5660
  %arrayidx205 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize204, i64 0, i64 %idxprom203, !dbg !5659
  %161 = load i32, i32* %arrayidx205, align 4, !dbg !5659
  %div206 = sdiv i32 %161, 2, !dbg !5661
  %162 = load i32, i32* %d184, align 4, !dbg !5662
  %163 = load float, float* %o, align 4, !dbg !5663
  call void @draw_dots16(i16* %158, i32 %div206, i32 %162, float %163), !dbg !5664
  %164 = load i32, i32* %X.addr, align 4, !dbg !5665
  %idxprom207 = sext i32 %164 to i64, !dbg !5666
  %165 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5666
  %data208 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %165, i32 0, i32 0, !dbg !5667
  %arrayidx209 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data208, i64 0, i64 %idxprom207, !dbg !5666
  %166 = load i8*, i8** %arrayidx209, align 8, !dbg !5666
  %167 = load i32, i32* %y177, align 4, !dbg !5668
  %168 = load i32, i32* %X.addr, align 4, !dbg !5669
  %idxprom210 = sext i32 %168 to i64, !dbg !5670
  %169 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5670
  %linesize211 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %169, i32 0, i32 1, !dbg !5671
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize211, i64 0, i64 %idxprom210, !dbg !5670
  %170 = load i32, i32* %arrayidx212, align 4, !dbg !5670
  %mul213 = mul nsw i32 %167, %170, !dbg !5672
  %idx.ext214 = sext i32 %mul213 to i64, !dbg !5673
  %add.ptr215 = getelementptr inbounds i8, i8* %166, i64 %idx.ext214, !dbg !5673
  %171 = load i32, i32* %x170, align 4, !dbg !5674
  %mul216 = mul nsw i32 %171, 2, !dbg !5675
  %idx.ext217 = sext i32 %mul216 to i64, !dbg !5676
  %add.ptr218 = getelementptr inbounds i8, i8* %add.ptr215, i64 %idx.ext217, !dbg !5676
  %172 = bitcast i8* %add.ptr218 to i16*, !dbg !5677
  %173 = load i32, i32* %X.addr, align 4, !dbg !5678
  %idxprom219 = sext i32 %173 to i64, !dbg !5679
  %174 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5679
  %linesize220 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %174, i32 0, i32 1, !dbg !5680
  %arrayidx221 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize220, i64 0, i64 %idxprom219, !dbg !5679
  %175 = load i32, i32* %arrayidx221, align 4, !dbg !5679
  %div222 = sdiv i32 %175, 2, !dbg !5681
  %176 = load i32, i32* %x170, align 4, !dbg !5682
  %177 = load float, float* %o, align 4, !dbg !5683
  call void @draw_dots16(i16* %172, i32 %div222, i32 %176, float %177), !dbg !5684
  %178 = load i32, i32* %Y.addr, align 4, !dbg !5685
  %idxprom223 = sext i32 %178 to i64, !dbg !5686
  %179 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5686
  %data224 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %179, i32 0, i32 0, !dbg !5687
  %arrayidx225 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data224, i64 0, i64 %idxprom223, !dbg !5686
  %180 = load i8*, i8** %arrayidx225, align 8, !dbg !5686
  %181 = load i32, i32* %y177, align 4, !dbg !5688
  %182 = load i32, i32* %Y.addr, align 4, !dbg !5689
  %idxprom226 = sext i32 %182 to i64, !dbg !5690
  %183 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5690
  %linesize227 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %183, i32 0, i32 1, !dbg !5691
  %arrayidx228 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize227, i64 0, i64 %idxprom226, !dbg !5690
  %184 = load i32, i32* %arrayidx228, align 4, !dbg !5690
  %mul229 = mul nsw i32 %181, %184, !dbg !5692
  %idx.ext230 = sext i32 %mul229 to i64, !dbg !5693
  %add.ptr231 = getelementptr inbounds i8, i8* %180, i64 %idx.ext230, !dbg !5693
  %185 = load i32, i32* %x170, align 4, !dbg !5694
  %mul232 = mul nsw i32 %185, 2, !dbg !5695
  %idx.ext233 = sext i32 %mul232 to i64, !dbg !5696
  %add.ptr234 = getelementptr inbounds i8, i8* %add.ptr231, i64 %idx.ext233, !dbg !5696
  %186 = bitcast i8* %add.ptr234 to i16*, !dbg !5697
  %187 = load i32, i32* %Y.addr, align 4, !dbg !5698
  %idxprom235 = sext i32 %187 to i64, !dbg !5699
  %188 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5699
  %linesize236 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %188, i32 0, i32 1, !dbg !5700
  %arrayidx237 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize236, i64 0, i64 %idxprom235, !dbg !5699
  %189 = load i32, i32* %arrayidx237, align 4, !dbg !5699
  %div238 = sdiv i32 %189, 2, !dbg !5701
  %190 = load i32, i32* %y177, align 4, !dbg !5702
  %191 = load float, float* %o, align 4, !dbg !5703
  call void @draw_dots16(i16* %186, i32 %div238, i32 %190, float %191), !dbg !5704
  %192 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5705
  %data239 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %192, i32 0, i32 0, !dbg !5707
  %arrayidx240 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data239, i64 0, i64 3, !dbg !5705
  %193 = load i8*, i8** %arrayidx240, align 8, !dbg !5705
  %tobool241 = icmp ne i8* %193, null, !dbg !5705
  br i1 %tobool241, label %if.then242, label %if.end256, !dbg !5708

if.then242:                                       ; preds = %if.then169
  %194 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5709
  %data243 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %194, i32 0, i32 0, !dbg !5710
  %arrayidx244 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data243, i64 0, i64 3, !dbg !5709
  %195 = load i8*, i8** %arrayidx244, align 8, !dbg !5709
  %196 = load i32, i32* %y177, align 4, !dbg !5711
  %197 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5712
  %linesize245 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %197, i32 0, i32 1, !dbg !5713
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize245, i64 0, i64 3, !dbg !5712
  %198 = load i32, i32* %arrayidx246, align 4, !dbg !5712
  %mul247 = mul nsw i32 %196, %198, !dbg !5714
  %idx.ext248 = sext i32 %mul247 to i64, !dbg !5715
  %add.ptr249 = getelementptr inbounds i8, i8* %195, i64 %idx.ext248, !dbg !5715
  %199 = load i32, i32* %x170, align 4, !dbg !5716
  %mul250 = mul nsw i32 %199, 2, !dbg !5717
  %idx.ext251 = sext i32 %mul250 to i64, !dbg !5718
  %add.ptr252 = getelementptr inbounds i8, i8* %add.ptr249, i64 %idx.ext251, !dbg !5718
  %200 = bitcast i8* %add.ptr252 to i16*, !dbg !5719
  %201 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5720
  %linesize253 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %201, i32 0, i32 1, !dbg !5721
  %arrayidx254 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize253, i64 0, i64 3, !dbg !5720
  %202 = load i32, i32* %arrayidx254, align 4, !dbg !5720
  %div255 = sdiv i32 %202, 2, !dbg !5722
  %203 = load i32, i32* %max, align 4, !dbg !5723
  %204 = load float, float* %o, align 4, !dbg !5724
  call void @draw_dots16(i16* %200, i32 %div255, i32 %203, float %204), !dbg !5725
  br label %if.end256, !dbg !5725

if.end256:                                        ; preds = %if.then242, %if.then169
  br label %if.end257, !dbg !5726

if.end257:                                        ; preds = %if.end256, %if.end165
  store i32 0, i32* %i, align 4, !dbg !5727
  br label %for.cond258, !dbg !5728

for.cond258:                                      ; preds = %for.inc322, %if.end257
  %205 = load i32, i32* %i, align 4, !dbg !5729
  %cmp259 = icmp slt i32 %205, 6, !dbg !5731
  br i1 %cmp259, label %land.rhs, label %land.end, !dbg !5732

land.rhs:                                         ; preds = %for.cond258
  %206 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5733
  %flags261 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %206, i32 0, i32 24, !dbg !5735
  %207 = load i32, i32* %flags261, align 8, !dbg !5735
  %and262 = and i32 %207, 4, !dbg !5736
  %tobool263 = icmp ne i32 %and262, 0, !dbg !5737
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond258
  %208 = phi i1 [ false, %for.cond258 ], [ %tobool263, %land.rhs ]
  br i1 %208, label %for.body264, label %for.end324, !dbg !5738

for.body264:                                      ; preds = %land.end
  call void @llvm.dbg.declare(metadata [4 x i16]* %color, metadata !5740, metadata !909), !dbg !5741
  %209 = bitcast [4 x i16]* %color to i8*, !dbg !5741
  call void @llvm.memset.p0i8.i64(i8* %209, i8 0, i64 8, i32 2, i1 false), !dbg !5741
  call void @llvm.dbg.declare(metadata i32* %x265, metadata !5742, metadata !909), !dbg !5743
  %210 = load i32, i32* %X.addr, align 4, !dbg !5744
  %idxprom266 = sext i32 %210 to i64, !dbg !5745
  %211 = load i32, i32* %i, align 4, !dbg !5746
  %idxprom267 = sext i32 %211 to i64, !dbg !5745
  %212 = load i32, i32* %P.addr, align 4, !dbg !5747
  %idxprom268 = sext i32 %212 to i64, !dbg !5745
  %arrayidx269 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom268, !dbg !5745
  %arrayidx270 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx269, i64 0, i64 %idxprom267, !dbg !5745
  %arrayidx271 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx270, i64 0, i64 %idxprom266, !dbg !5745
  %213 = load i16, i16* %arrayidx271, align 2, !dbg !5745
  %conv272 = zext i16 %213 to i32, !dbg !5745
  store i32 %conv272, i32* %x265, align 4, !dbg !5743
  call void @llvm.dbg.declare(metadata i32* %y273, metadata !5748, metadata !909), !dbg !5749
  %214 = load i32, i32* %Y.addr, align 4, !dbg !5750
  %idxprom274 = sext i32 %214 to i64, !dbg !5751
  %215 = load i32, i32* %i, align 4, !dbg !5752
  %idxprom275 = sext i32 %215 to i64, !dbg !5751
  %216 = load i32, i32* %P.addr, align 4, !dbg !5753
  %idxprom276 = sext i32 %216 to i64, !dbg !5751
  %arrayidx277 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom276, !dbg !5751
  %arrayidx278 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx277, i64 0, i64 %idxprom275, !dbg !5751
  %arrayidx279 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx278, i64 0, i64 %idxprom274, !dbg !5751
  %217 = load i16, i16* %arrayidx279, align 2, !dbg !5751
  %conv280 = zext i16 %217 to i32, !dbg !5751
  store i32 %conv280, i32* %y273, align 4, !dbg !5749
  call void @llvm.dbg.declare(metadata i32* %d281, metadata !5754, metadata !909), !dbg !5755
  %218 = load i32, i32* %D.addr, align 4, !dbg !5756
  %idxprom282 = sext i32 %218 to i64, !dbg !5757
  %219 = load i32, i32* %i, align 4, !dbg !5758
  %idxprom283 = sext i32 %219 to i64, !dbg !5757
  %220 = load i32, i32* %P.addr, align 4, !dbg !5759
  %idxprom284 = sext i32 %220 to i64, !dbg !5757
  %arrayidx285 = getelementptr inbounds [10 x [14 x [3 x i16]]], [10 x [14 x [3 x i16]]]* @positions, i64 0, i64 %idxprom284, !dbg !5757
  %arrayidx286 = getelementptr inbounds [14 x [3 x i16]], [14 x [3 x i16]]* %arrayidx285, i64 0, i64 %idxprom283, !dbg !5757
  %arrayidx287 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx286, i64 0, i64 %idxprom282, !dbg !5757
  %221 = load i16, i16* %arrayidx287, align 2, !dbg !5757
  %conv288 = zext i16 %221 to i32, !dbg !5757
  store i32 %conv288, i32* %d281, align 4, !dbg !5755
  %222 = load i32, i32* %d281, align 4, !dbg !5760
  %conv289 = trunc i32 %222 to i16, !dbg !5760
  %223 = load i32, i32* %D.addr, align 4, !dbg !5761
  %idxprom290 = sext i32 %223 to i64, !dbg !5762
  %arrayidx291 = getelementptr inbounds [4 x i16], [4 x i16]* %color, i64 0, i64 %idxprom290, !dbg !5762
  store i16 %conv289, i16* %arrayidx291, align 2, !dbg !5763
  %224 = load i32, i32* %x265, align 4, !dbg !5764
  %conv292 = trunc i32 %224 to i16, !dbg !5764
  %225 = load i32, i32* %X.addr, align 4, !dbg !5765
  %idxprom293 = sext i32 %225 to i64, !dbg !5766
  %arrayidx294 = getelementptr inbounds [4 x i16], [4 x i16]* %color, i64 0, i64 %idxprom293, !dbg !5766
  store i16 %conv292, i16* %arrayidx294, align 2, !dbg !5767
  %226 = load i32, i32* %y273, align 4, !dbg !5768
  %conv295 = trunc i32 %226 to i16, !dbg !5768
  %227 = load i32, i32* %Y.addr, align 4, !dbg !5769
  %idxprom296 = sext i32 %227 to i64, !dbg !5770
  %arrayidx297 = getelementptr inbounds [4 x i16], [4 x i16]* %color, i64 0, i64 %idxprom296, !dbg !5770
  store i16 %conv295, i16* %arrayidx297, align 2, !dbg !5771
  %228 = load i32, i32* %max, align 4, !dbg !5772
  %conv298 = trunc i32 %228 to i16, !dbg !5772
  %arrayidx299 = getelementptr inbounds [4 x i16], [4 x i16]* %color, i64 0, i64 3, !dbg !5773
  store i16 %conv298, i16* %arrayidx299, align 2, !dbg !5774
  %229 = load i32, i32* %x265, align 4, !dbg !5775
  %230 = load i32, i32* %max, align 4, !dbg !5777
  %div300 = sdiv i32 %230, 2, !dbg !5778
  %cmp301 = icmp sgt i32 %229, %div300, !dbg !5779
  br i1 %cmp301, label %if.then303, label %if.else, !dbg !5780

if.then303:                                       ; preds = %for.body264
  %231 = load i32, i32* %x265, align 4, !dbg !5781
  %add = add nsw i32 %231, 8, !dbg !5781
  store i32 %add, i32* %x265, align 4, !dbg !5781
  br label %if.end305, !dbg !5782

if.else:                                          ; preds = %for.body264
  %232 = load i32, i32* %x265, align 4, !dbg !5783
  %sub304 = sub nsw i32 %232, 14, !dbg !5783
  store i32 %sub304, i32* %x265, align 4, !dbg !5783
  br label %if.end305

if.end305:                                        ; preds = %if.else, %if.then303
  %233 = load i32, i32* %y273, align 4, !dbg !5784
  %234 = load i32, i32* %max, align 4, !dbg !5786
  %div306 = sdiv i32 %234, 2, !dbg !5787
  %cmp307 = icmp sgt i32 %233, %div306, !dbg !5788
  br i1 %cmp307, label %if.then309, label %if.else311, !dbg !5789

if.then309:                                       ; preds = %if.end305
  %235 = load i32, i32* %y273, align 4, !dbg !5790
  %add310 = add nsw i32 %235, 8, !dbg !5790
  store i32 %add310, i32* %y273, align 4, !dbg !5790
  br label %if.end313, !dbg !5791

if.else311:                                       ; preds = %if.end305
  %236 = load i32, i32* %y273, align 4, !dbg !5792
  %sub312 = sub nsw i32 %236, 14, !dbg !5792
  store i32 %sub312, i32* %y273, align 4, !dbg !5792
  br label %if.end313

if.end313:                                        ; preds = %if.else311, %if.then309
  %237 = load i32, i32* %x265, align 4, !dbg !5793
  %238 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5794
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %238, i32 0, i32 3, !dbg !5795
  %239 = load i32, i32* %width, align 8, !dbg !5795
  %sub314 = sub nsw i32 %239, 9, !dbg !5796
  store i32 %237, i32* %a.addr.i, align 4, !dbg !5797
  store i32 0, i32* %amin.addr.i, align 4, !dbg !5797
  store i32 %sub314, i32* %amax.addr.i, align 4, !dbg !5797
  %240 = load i32, i32* %a.addr.i, align 4, !dbg !5798
  %241 = load i32, i32* %amin.addr.i, align 4, !dbg !5799
  %cmp.i = icmp slt i32 %240, %241, !dbg !5800
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5801

if.then.i:                                        ; preds = %if.end313
  %242 = load i32, i32* %amin.addr.i, align 4, !dbg !5802
  store i32 %242, i32* %retval.i, align 4, !dbg !5803
  br label %av_clip_c.exit, !dbg !5803

if.else.i:                                        ; preds = %if.end313
  %243 = load i32, i32* %a.addr.i, align 4, !dbg !5804
  %244 = load i32, i32* %amax.addr.i, align 4, !dbg !5805
  %cmp1.i = icmp sgt i32 %243, %244, !dbg !5806
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !5807

if.then2.i:                                       ; preds = %if.else.i
  %245 = load i32, i32* %amax.addr.i, align 4, !dbg !5808
  store i32 %245, i32* %retval.i, align 4, !dbg !5809
  br label %av_clip_c.exit, !dbg !5809

if.else3.i:                                       ; preds = %if.else.i
  %246 = load i32, i32* %a.addr.i, align 4, !dbg !5810
  store i32 %246, i32* %retval.i, align 4, !dbg !5811
  br label %av_clip_c.exit, !dbg !5811

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %247 = load i32, i32* %retval.i, align 4, !dbg !5812
  store i32 %247, i32* %x265, align 4, !dbg !5813
  %248 = load i32, i32* %y273, align 4, !dbg !5814
  %249 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5815
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %249, i32 0, i32 4, !dbg !5816
  %250 = load i32, i32* %height, align 4, !dbg !5816
  %sub315 = sub nsw i32 %250, 9, !dbg !5817
  store i32 %248, i32* %a.addr.i326, align 4, !dbg !5818
  store i32 0, i32* %amin.addr.i327, align 4, !dbg !5818
  store i32 %sub315, i32* %amax.addr.i328, align 4, !dbg !5818
  %251 = load i32, i32* %a.addr.i326, align 4, !dbg !5819
  %252 = load i32, i32* %amin.addr.i327, align 4, !dbg !5820
  %cmp.i329 = icmp slt i32 %251, %252, !dbg !5821
  br i1 %cmp.i329, label %if.then.i330, label %if.else.i332, !dbg !5822

if.then.i330:                                     ; preds = %av_clip_c.exit
  %253 = load i32, i32* %amin.addr.i327, align 4, !dbg !5823
  store i32 %253, i32* %retval.i325, align 4, !dbg !5824
  br label %av_clip_c.exit335, !dbg !5824

if.else.i332:                                     ; preds = %av_clip_c.exit
  %254 = load i32, i32* %a.addr.i326, align 4, !dbg !5825
  %255 = load i32, i32* %amax.addr.i328, align 4, !dbg !5826
  %cmp1.i331 = icmp sgt i32 %254, %255, !dbg !5827
  br i1 %cmp1.i331, label %if.then2.i333, label %if.else3.i334, !dbg !5828

if.then2.i333:                                    ; preds = %if.else.i332
  %256 = load i32, i32* %amax.addr.i328, align 4, !dbg !5829
  store i32 %256, i32* %retval.i325, align 4, !dbg !5830
  br label %av_clip_c.exit335, !dbg !5830

if.else3.i334:                                    ; preds = %if.else.i332
  %257 = load i32, i32* %a.addr.i326, align 4, !dbg !5831
  store i32 %257, i32* %retval.i325, align 4, !dbg !5832
  br label %av_clip_c.exit335, !dbg !5832

av_clip_c.exit335:                                ; preds = %if.then.i330, %if.then2.i333, %if.else3.i334
  %258 = load i32, i32* %retval.i325, align 4, !dbg !5833
  store i32 %258, i32* %y273, align 4, !dbg !5834
  %259 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5835
  %260 = load i32, i32* %x265, align 4, !dbg !5836
  %261 = load i32, i32* %y273, align 4, !dbg !5837
  %262 = load float, float* %o, align 4, !dbg !5838
  %263 = load float, float* %o, align 4, !dbg !5839
  %conv317 = fpext float %263 to double, !dbg !5839
  %sub318 = fsub double 1.000000e+00, %conv317, !dbg !5840
  %conv319 = fptrunc double %sub318 to float, !dbg !5841
  %264 = load i32, i32* %i, align 4, !dbg !5842
  %idxprom320 = sext i32 %264 to i64, !dbg !5843
  %arrayidx321 = getelementptr inbounds [6 x i8*], [6 x i8*]* @positions_name, i64 0, i64 %idxprom320, !dbg !5843
  %265 = load i8*, i8** %arrayidx321, align 8, !dbg !5843
  %arraydecay = getelementptr inbounds [4 x i16], [4 x i16]* %color, i32 0, i32 0, !dbg !5844
  call void @draw_htext16(%struct.AVFrame* %259, i32 %260, i32 %261, float %262, float %conv319, i8* %265, i16* %arraydecay), !dbg !5845
  br label %for.inc322, !dbg !5846

for.inc322:                                       ; preds = %av_clip_c.exit335
  %266 = load i32, i32* %i, align 4, !dbg !5847
  %inc323 = add nsw i32 %266, 1, !dbg !5847
  store i32 %inc323, i32* %i, align 4, !dbg !5847
  br label %for.cond258, !dbg !5849, !llvm.loop !5850

for.end324:                                       ; preds = %land.end
  ret void, !dbg !5852
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: noreturn nounwind
declare void @abort() #5

; Function Attrs: nounwind uwtable
define internal void @envelope(%struct.VectorscopeContext* %s, %struct.AVFrame* %out) #1 !dbg !5853 {
entry:
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !5856, metadata !909), !dbg !5857
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !5858, metadata !909), !dbg !5859
  %0 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5860
  %envelope = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %0, i32 0, i32 16, !dbg !5862
  %1 = load i32, i32* %envelope, align 8, !dbg !5862
  %tobool = icmp ne i32 %1, 0, !dbg !5860
  br i1 %tobool, label %if.else, label %if.then, !dbg !5863

if.then:                                          ; preds = %entry
  br label %if.end4, !dbg !5864

if.else:                                          ; preds = %entry
  %2 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5866
  %envelope1 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %2, i32 0, i32 16, !dbg !5868
  %3 = load i32, i32* %envelope1, align 8, !dbg !5868
  %cmp = icmp eq i32 %3, 1, !dbg !5869
  br i1 %cmp, label %if.then2, label %if.else3, !dbg !5870

if.then2:                                         ; preds = %if.else
  %4 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5871
  %5 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5873
  call void @envelope_instant(%struct.VectorscopeContext* %4, %struct.AVFrame* %5), !dbg !5874
  br label %if.end, !dbg !5875

if.else3:                                         ; preds = %if.else
  %6 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5876
  %7 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5878
  call void @envelope_peak(%struct.VectorscopeContext* %6, %struct.AVFrame* %7), !dbg !5879
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then2
  br label %if.end4

if.end4:                                          ; preds = %if.then, %if.end
  ret void, !dbg !5880
}

; Function Attrs: nounwind
declare double @hypot(double, double) #6

; Function Attrs: nounwind uwtable
define internal void @envelope_instant(%struct.VectorscopeContext* %s, %struct.AVFrame* %out) #1 !dbg !5881 {
entry:
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  %dlinesize = alloca i32, align 4
  %dpd = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %pos = alloca i32, align 4
  %poa = alloca i32, align 4
  %pob = alloca i32, align 4
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !5882, metadata !909), !dbg !5883
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !5884, metadata !909), !dbg !5885
  call void @llvm.dbg.declare(metadata i32* %dlinesize, metadata !5886, metadata !909), !dbg !5887
  %0 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5888
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 1, !dbg !5889
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !5888
  %1 = load i32, i32* %arrayidx, align 8, !dbg !5888
  store i32 %1, i32* %dlinesize, align 4, !dbg !5887
  call void @llvm.dbg.declare(metadata i8** %dpd, metadata !5890, metadata !909), !dbg !5891
  %2 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5892
  %mode = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %2, i32 0, i32 1, !dbg !5893
  %3 = load i32, i32* %mode, align 8, !dbg !5893
  %cmp = icmp eq i32 %3, 1, !dbg !5894
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !5895

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5896
  %is_yuv = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %4, i32 0, i32 12, !dbg !5898
  %5 = load i32, i32* %is_yuv, align 8, !dbg !5898
  %tobool = icmp ne i32 %5, 0, !dbg !5896
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5899

cond.true:                                        ; preds = %lor.lhs.false, %entry
  %6 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !5900
  %pd = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %6, i32 0, i32 11, !dbg !5902
  %7 = load i32, i32* %pd, align 4, !dbg !5902
  %idxprom = sext i32 %7 to i64, !dbg !5903
  %8 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5903
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 0, !dbg !5904
  %arrayidx1 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !5903
  %9 = load i8*, i8** %arrayidx1, align 8, !dbg !5903
  br label %cond.end, !dbg !5905

cond.false:                                       ; preds = %lor.lhs.false
  %10 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5906
  %data2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 0, !dbg !5908
  %arrayidx3 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data2, i64 0, i64 0, !dbg !5906
  %11 = load i8*, i8** %arrayidx3, align 8, !dbg !5906
  br label %cond.end, !dbg !5909

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %9, %cond.true ], [ %11, %cond.false ], !dbg !5910
  store i8* %cond, i8** %dpd, align 8, !dbg !5912
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5913, metadata !909), !dbg !5914
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5915, metadata !909), !dbg !5916
  store i32 0, i32* %i, align 4, !dbg !5917
  br label %for.cond, !dbg !5919

for.cond:                                         ; preds = %for.inc49, %cond.end
  %12 = load i32, i32* %i, align 4, !dbg !5920
  %13 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5923
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 4, !dbg !5924
  %14 = load i32, i32* %height, align 4, !dbg !5924
  %cmp4 = icmp slt i32 %12, %14, !dbg !5925
  br i1 %cmp4, label %for.body, label %for.end51, !dbg !5926

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !5927
  br label %for.cond5, !dbg !5930

for.cond5:                                        ; preds = %for.inc, %for.body
  %15 = load i32, i32* %j, align 4, !dbg !5931
  %16 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5934
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 3, !dbg !5935
  %17 = load i32, i32* %width, align 8, !dbg !5935
  %cmp6 = icmp slt i32 %15, %17, !dbg !5936
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !5937

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5938, metadata !909), !dbg !5940
  %18 = load i32, i32* %i, align 4, !dbg !5941
  %19 = load i32, i32* %dlinesize, align 4, !dbg !5942
  %mul = mul nsw i32 %18, %19, !dbg !5943
  %20 = load i32, i32* %j, align 4, !dbg !5944
  %add = add nsw i32 %mul, %20, !dbg !5945
  store i32 %add, i32* %pos, align 4, !dbg !5940
  call void @llvm.dbg.declare(metadata i32* %poa, metadata !5946, metadata !909), !dbg !5947
  %21 = load i32, i32* %i, align 4, !dbg !5948
  %sub = sub nsw i32 %21, 1, !dbg !5949
  %22 = load i32, i32* %dlinesize, align 4, !dbg !5950
  %mul8 = mul nsw i32 %sub, %22, !dbg !5951
  %23 = load i32, i32* %j, align 4, !dbg !5952
  %add9 = add nsw i32 %mul8, %23, !dbg !5953
  store i32 %add9, i32* %poa, align 4, !dbg !5947
  call void @llvm.dbg.declare(metadata i32* %pob, metadata !5954, metadata !909), !dbg !5955
  %24 = load i32, i32* %i, align 4, !dbg !5956
  %add10 = add nsw i32 %24, 1, !dbg !5957
  %25 = load i32, i32* %dlinesize, align 4, !dbg !5958
  %mul11 = mul nsw i32 %add10, %25, !dbg !5959
  %26 = load i32, i32* %j, align 4, !dbg !5960
  %add12 = add nsw i32 %mul11, %26, !dbg !5961
  store i32 %add12, i32* %pob, align 4, !dbg !5955
  %27 = load i32, i32* %pos, align 4, !dbg !5962
  %idxprom13 = sext i32 %27 to i64, !dbg !5964
  %28 = load i8*, i8** %dpd, align 8, !dbg !5964
  %arrayidx14 = getelementptr inbounds i8, i8* %28, i64 %idxprom13, !dbg !5964
  %29 = load i8, i8* %arrayidx14, align 1, !dbg !5964
  %conv = zext i8 %29 to i32, !dbg !5964
  %tobool15 = icmp ne i32 %conv, 0, !dbg !5964
  br i1 %tobool15, label %land.lhs.true, label %if.end, !dbg !5965

land.lhs.true:                                    ; preds = %for.body7
  %30 = load i32, i32* %j, align 4, !dbg !5966
  %tobool16 = icmp ne i32 %30, 0, !dbg !5966
  br i1 %tobool16, label %lor.lhs.false17, label %if.then, !dbg !5968

lor.lhs.false17:                                  ; preds = %land.lhs.true
  %31 = load i32, i32* %pos, align 4, !dbg !5969
  %sub18 = sub nsw i32 %31, 1, !dbg !5971
  %idxprom19 = sext i32 %sub18 to i64, !dbg !5972
  %32 = load i8*, i8** %dpd, align 8, !dbg !5972
  %arrayidx20 = getelementptr inbounds i8, i8* %32, i64 %idxprom19, !dbg !5972
  %33 = load i8, i8* %arrayidx20, align 1, !dbg !5972
  %tobool21 = icmp ne i8 %33, 0, !dbg !5972
  br i1 %tobool21, label %lor.lhs.false22, label %if.then, !dbg !5973

lor.lhs.false22:                                  ; preds = %lor.lhs.false17
  %34 = load i32, i32* %j, align 4, !dbg !5974
  %35 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5976
  %width23 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %35, i32 0, i32 3, !dbg !5977
  %36 = load i32, i32* %width23, align 8, !dbg !5977
  %sub24 = sub nsw i32 %36, 1, !dbg !5978
  %cmp25 = icmp eq i32 %34, %sub24, !dbg !5979
  br i1 %cmp25, label %if.then, label %lor.lhs.false27, !dbg !5980

lor.lhs.false27:                                  ; preds = %lor.lhs.false22
  %37 = load i32, i32* %pos, align 4, !dbg !5981
  %add28 = add nsw i32 %37, 1, !dbg !5983
  %idxprom29 = sext i32 %add28 to i64, !dbg !5984
  %38 = load i8*, i8** %dpd, align 8, !dbg !5984
  %arrayidx30 = getelementptr inbounds i8, i8* %38, i64 %idxprom29, !dbg !5984
  %39 = load i8, i8* %arrayidx30, align 1, !dbg !5984
  %tobool31 = icmp ne i8 %39, 0, !dbg !5984
  br i1 %tobool31, label %lor.lhs.false32, label %if.then, !dbg !5985

lor.lhs.false32:                                  ; preds = %lor.lhs.false27
  %40 = load i32, i32* %i, align 4, !dbg !5986
  %tobool33 = icmp ne i32 %40, 0, !dbg !5986
  br i1 %tobool33, label %lor.lhs.false34, label %if.then, !dbg !5987

lor.lhs.false34:                                  ; preds = %lor.lhs.false32
  %41 = load i32, i32* %poa, align 4, !dbg !5988
  %idxprom35 = sext i32 %41 to i64, !dbg !5989
  %42 = load i8*, i8** %dpd, align 8, !dbg !5989
  %arrayidx36 = getelementptr inbounds i8, i8* %42, i64 %idxprom35, !dbg !5989
  %43 = load i8, i8* %arrayidx36, align 1, !dbg !5989
  %tobool37 = icmp ne i8 %43, 0, !dbg !5989
  br i1 %tobool37, label %lor.lhs.false38, label %if.then, !dbg !5990

lor.lhs.false38:                                  ; preds = %lor.lhs.false34
  %44 = load i32, i32* %i, align 4, !dbg !5991
  %45 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !5992
  %height39 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %45, i32 0, i32 4, !dbg !5993
  %46 = load i32, i32* %height39, align 4, !dbg !5993
  %sub40 = sub nsw i32 %46, 1, !dbg !5994
  %cmp41 = icmp eq i32 %44, %sub40, !dbg !5995
  br i1 %cmp41, label %if.then, label %lor.lhs.false43, !dbg !5996

lor.lhs.false43:                                  ; preds = %lor.lhs.false38
  %47 = load i32, i32* %pob, align 4, !dbg !5997
  %idxprom44 = sext i32 %47 to i64, !dbg !5998
  %48 = load i8*, i8** %dpd, align 8, !dbg !5998
  %arrayidx45 = getelementptr inbounds i8, i8* %48, i64 %idxprom44, !dbg !5998
  %49 = load i8, i8* %arrayidx45, align 1, !dbg !5998
  %tobool46 = icmp ne i8 %49, 0, !dbg !5998
  br i1 %tobool46, label %if.end, label %if.then, !dbg !5999

if.then:                                          ; preds = %lor.lhs.false43, %lor.lhs.false38, %lor.lhs.false34, %lor.lhs.false32, %lor.lhs.false27, %lor.lhs.false22, %lor.lhs.false17, %land.lhs.true
  %50 = load i32, i32* %pos, align 4, !dbg !6001
  %idxprom47 = sext i32 %50 to i64, !dbg !6003
  %51 = load i8*, i8** %dpd, align 8, !dbg !6003
  %arrayidx48 = getelementptr inbounds i8, i8* %51, i64 %idxprom47, !dbg !6003
  store i8 -1, i8* %arrayidx48, align 1, !dbg !6004
  br label %if.end, !dbg !6005

if.end:                                           ; preds = %if.then, %lor.lhs.false43, %for.body7
  br label %for.inc, !dbg !6006

for.inc:                                          ; preds = %if.end
  %52 = load i32, i32* %j, align 4, !dbg !6007
  %inc = add nsw i32 %52, 1, !dbg !6007
  store i32 %inc, i32* %j, align 4, !dbg !6007
  br label %for.cond5, !dbg !6009, !llvm.loop !6010

for.end:                                          ; preds = %for.cond5
  br label %for.inc49, !dbg !6012

for.inc49:                                        ; preds = %for.end
  %53 = load i32, i32* %i, align 4, !dbg !6013
  %inc50 = add nsw i32 %53, 1, !dbg !6013
  store i32 %inc50, i32* %i, align 4, !dbg !6013
  br label %for.cond, !dbg !6015, !llvm.loop !6016

for.end51:                                        ; preds = %for.cond
  ret void, !dbg !6018
}

; Function Attrs: nounwind uwtable
define internal void @envelope_peak(%struct.VectorscopeContext* %s, %struct.AVFrame* %out) #1 !dbg !6019 {
entry:
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  %dlinesize = alloca i32, align 4
  %dpd = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %pos = alloca i32, align 4
  %pos29 = alloca i32, align 4
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !6020, metadata !909), !dbg !6021
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !6022, metadata !909), !dbg !6023
  call void @llvm.dbg.declare(metadata i32* %dlinesize, metadata !6024, metadata !909), !dbg !6025
  %0 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6026
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 1, !dbg !6027
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !6026
  %1 = load i32, i32* %arrayidx, align 8, !dbg !6026
  store i32 %1, i32* %dlinesize, align 4, !dbg !6025
  call void @llvm.dbg.declare(metadata i8** %dpd, metadata !6028, metadata !909), !dbg !6029
  %2 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6030
  %mode = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %2, i32 0, i32 1, !dbg !6031
  %3 = load i32, i32* %mode, align 8, !dbg !6031
  %cmp = icmp eq i32 %3, 1, !dbg !6032
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !6033

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6034
  %is_yuv = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %4, i32 0, i32 12, !dbg !6036
  %5 = load i32, i32* %is_yuv, align 8, !dbg !6036
  %tobool = icmp ne i32 %5, 0, !dbg !6034
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6037

cond.true:                                        ; preds = %lor.lhs.false, %entry
  %6 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6038
  %pd = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %6, i32 0, i32 11, !dbg !6040
  %7 = load i32, i32* %pd, align 4, !dbg !6040
  %idxprom = sext i32 %7 to i64, !dbg !6041
  %8 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6041
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 0, !dbg !6042
  %arrayidx1 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !6041
  %9 = load i8*, i8** %arrayidx1, align 8, !dbg !6041
  br label %cond.end, !dbg !6043

cond.false:                                       ; preds = %lor.lhs.false
  %10 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6044
  %data2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 0, !dbg !6046
  %arrayidx3 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data2, i64 0, i64 0, !dbg !6044
  %11 = load i8*, i8** %arrayidx3, align 8, !dbg !6044
  br label %cond.end, !dbg !6047

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %9, %cond.true ], [ %11, %cond.false ], !dbg !6048
  store i8* %cond, i8** %dpd, align 8, !dbg !6050
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6051, metadata !909), !dbg !6052
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6053, metadata !909), !dbg !6054
  store i32 0, i32* %i, align 4, !dbg !6055
  br label %for.cond, !dbg !6057

for.cond:                                         ; preds = %for.inc15, %cond.end
  %12 = load i32, i32* %i, align 4, !dbg !6058
  %13 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6061
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %13, i32 0, i32 4, !dbg !6062
  %14 = load i32, i32* %height, align 4, !dbg !6062
  %cmp4 = icmp slt i32 %12, %14, !dbg !6063
  br i1 %cmp4, label %for.body, label %for.end17, !dbg !6064

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6065
  br label %for.cond5, !dbg !6068

for.cond5:                                        ; preds = %for.inc, %for.body
  %15 = load i32, i32* %j, align 4, !dbg !6069
  %16 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6072
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 3, !dbg !6073
  %17 = load i32, i32* %width, align 8, !dbg !6073
  %cmp6 = icmp slt i32 %15, %17, !dbg !6074
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !6075

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6076, metadata !909), !dbg !6078
  %18 = load i32, i32* %i, align 4, !dbg !6079
  %19 = load i32, i32* %dlinesize, align 4, !dbg !6080
  %mul = mul nsw i32 %18, %19, !dbg !6081
  %20 = load i32, i32* %j, align 4, !dbg !6082
  %add = add nsw i32 %mul, %20, !dbg !6083
  store i32 %add, i32* %pos, align 4, !dbg !6078
  %21 = load i32, i32* %pos, align 4, !dbg !6084
  %idxprom8 = sext i32 %21 to i64, !dbg !6086
  %22 = load i8*, i8** %dpd, align 8, !dbg !6086
  %arrayidx9 = getelementptr inbounds i8, i8* %22, i64 %idxprom8, !dbg !6086
  %23 = load i8, i8* %arrayidx9, align 1, !dbg !6086
  %tobool10 = icmp ne i8 %23, 0, !dbg !6086
  br i1 %tobool10, label %if.then, label %if.end, !dbg !6087

if.then:                                          ; preds = %for.body7
  %24 = load i32, i32* %j, align 4, !dbg !6088
  %idxprom11 = sext i32 %24 to i64, !dbg !6089
  %25 = load i32, i32* %i, align 4, !dbg !6090
  %idxprom12 = sext i32 %25 to i64, !dbg !6089
  %26 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6089
  %peak = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %26, i32 0, i32 28, !dbg !6091
  %27 = load i8**, i8*** %peak, align 8, !dbg !6091
  %arrayidx13 = getelementptr inbounds i8*, i8** %27, i64 %idxprom12, !dbg !6089
  %28 = load i8*, i8** %arrayidx13, align 8, !dbg !6089
  %arrayidx14 = getelementptr inbounds i8, i8* %28, i64 %idxprom11, !dbg !6089
  store i8 1, i8* %arrayidx14, align 1, !dbg !6092
  br label %if.end, !dbg !6089

if.end:                                           ; preds = %if.then, %for.body7
  br label %for.inc, !dbg !6093

for.inc:                                          ; preds = %if.end
  %29 = load i32, i32* %j, align 4, !dbg !6094
  %inc = add nsw i32 %29, 1, !dbg !6094
  store i32 %inc, i32* %j, align 4, !dbg !6094
  br label %for.cond5, !dbg !6096, !llvm.loop !6097

for.end:                                          ; preds = %for.cond5
  br label %for.inc15, !dbg !6099

for.inc15:                                        ; preds = %for.end
  %30 = load i32, i32* %i, align 4, !dbg !6100
  %inc16 = add nsw i32 %30, 1, !dbg !6100
  store i32 %inc16, i32* %i, align 4, !dbg !6100
  br label %for.cond, !dbg !6102, !llvm.loop !6103

for.end17:                                        ; preds = %for.cond
  %31 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6105
  %envelope = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %31, i32 0, i32 16, !dbg !6107
  %32 = load i32, i32* %envelope, align 8, !dbg !6107
  %cmp18 = icmp eq i32 %32, 3, !dbg !6108
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6109

if.then19:                                        ; preds = %for.end17
  %33 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6110
  %34 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6111
  call void @envelope_instant(%struct.VectorscopeContext* %33, %struct.AVFrame* %34), !dbg !6112
  br label %if.end20, !dbg !6112

if.end20:                                         ; preds = %if.then19, %for.end17
  store i32 0, i32* %i, align 4, !dbg !6113
  br label %for.cond21, !dbg !6115

for.cond21:                                       ; preds = %for.inc89, %if.end20
  %35 = load i32, i32* %i, align 4, !dbg !6116
  %36 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6119
  %height22 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %36, i32 0, i32 4, !dbg !6120
  %37 = load i32, i32* %height22, align 4, !dbg !6120
  %cmp23 = icmp slt i32 %35, %37, !dbg !6121
  br i1 %cmp23, label %for.body24, label %for.end91, !dbg !6122

for.body24:                                       ; preds = %for.cond21
  store i32 0, i32* %j, align 4, !dbg !6123
  br label %for.cond25, !dbg !6126

for.cond25:                                       ; preds = %for.inc86, %for.body24
  %38 = load i32, i32* %j, align 4, !dbg !6127
  %39 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6130
  %width26 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %39, i32 0, i32 3, !dbg !6131
  %40 = load i32, i32* %width26, align 8, !dbg !6131
  %cmp27 = icmp slt i32 %38, %40, !dbg !6132
  br i1 %cmp27, label %for.body28, label %for.end88, !dbg !6133

for.body28:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata i32* %pos29, metadata !6134, metadata !909), !dbg !6136
  %41 = load i32, i32* %i, align 4, !dbg !6137
  %42 = load i32, i32* %dlinesize, align 4, !dbg !6138
  %mul30 = mul nsw i32 %41, %42, !dbg !6139
  %43 = load i32, i32* %j, align 4, !dbg !6140
  %add31 = add nsw i32 %mul30, %43, !dbg !6141
  store i32 %add31, i32* %pos29, align 4, !dbg !6136
  %44 = load i32, i32* %j, align 4, !dbg !6142
  %idxprom32 = sext i32 %44 to i64, !dbg !6144
  %45 = load i32, i32* %i, align 4, !dbg !6145
  %idxprom33 = sext i32 %45 to i64, !dbg !6144
  %46 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6144
  %peak34 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %46, i32 0, i32 28, !dbg !6146
  %47 = load i8**, i8*** %peak34, align 8, !dbg !6146
  %arrayidx35 = getelementptr inbounds i8*, i8** %47, i64 %idxprom33, !dbg !6144
  %48 = load i8*, i8** %arrayidx35, align 8, !dbg !6144
  %arrayidx36 = getelementptr inbounds i8, i8* %48, i64 %idxprom32, !dbg !6144
  %49 = load i8, i8* %arrayidx36, align 1, !dbg !6144
  %conv = zext i8 %49 to i32, !dbg !6144
  %tobool37 = icmp ne i32 %conv, 0, !dbg !6144
  br i1 %tobool37, label %land.lhs.true, label %if.end85, !dbg !6147

land.lhs.true:                                    ; preds = %for.body28
  %50 = load i32, i32* %j, align 4, !dbg !6148
  %tobool38 = icmp ne i32 %50, 0, !dbg !6148
  br i1 %tobool38, label %lor.lhs.false39, label %if.then82, !dbg !6150

lor.lhs.false39:                                  ; preds = %land.lhs.true
  %51 = load i32, i32* %j, align 4, !dbg !6151
  %sub = sub nsw i32 %51, 1, !dbg !6153
  %idxprom40 = sext i32 %sub to i64, !dbg !6154
  %52 = load i32, i32* %i, align 4, !dbg !6155
  %idxprom41 = sext i32 %52 to i64, !dbg !6154
  %53 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6154
  %peak42 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %53, i32 0, i32 28, !dbg !6156
  %54 = load i8**, i8*** %peak42, align 8, !dbg !6156
  %arrayidx43 = getelementptr inbounds i8*, i8** %54, i64 %idxprom41, !dbg !6154
  %55 = load i8*, i8** %arrayidx43, align 8, !dbg !6154
  %arrayidx44 = getelementptr inbounds i8, i8* %55, i64 %idxprom40, !dbg !6154
  %56 = load i8, i8* %arrayidx44, align 1, !dbg !6154
  %tobool45 = icmp ne i8 %56, 0, !dbg !6154
  br i1 %tobool45, label %lor.lhs.false46, label %if.then82, !dbg !6157

lor.lhs.false46:                                  ; preds = %lor.lhs.false39
  %57 = load i32, i32* %j, align 4, !dbg !6158
  %58 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6160
  %width47 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %58, i32 0, i32 3, !dbg !6161
  %59 = load i32, i32* %width47, align 8, !dbg !6161
  %sub48 = sub nsw i32 %59, 1, !dbg !6162
  %cmp49 = icmp eq i32 %57, %sub48, !dbg !6163
  br i1 %cmp49, label %if.then82, label %lor.lhs.false51, !dbg !6164

lor.lhs.false51:                                  ; preds = %lor.lhs.false46
  %60 = load i32, i32* %j, align 4, !dbg !6165
  %add52 = add nsw i32 %60, 1, !dbg !6167
  %idxprom53 = sext i32 %add52 to i64, !dbg !6168
  %61 = load i32, i32* %i, align 4, !dbg !6169
  %idxprom54 = sext i32 %61 to i64, !dbg !6168
  %62 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6168
  %peak55 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %62, i32 0, i32 28, !dbg !6170
  %63 = load i8**, i8*** %peak55, align 8, !dbg !6170
  %arrayidx56 = getelementptr inbounds i8*, i8** %63, i64 %idxprom54, !dbg !6168
  %64 = load i8*, i8** %arrayidx56, align 8, !dbg !6168
  %arrayidx57 = getelementptr inbounds i8, i8* %64, i64 %idxprom53, !dbg !6168
  %65 = load i8, i8* %arrayidx57, align 1, !dbg !6168
  %tobool58 = icmp ne i8 %65, 0, !dbg !6168
  br i1 %tobool58, label %lor.lhs.false59, label %if.then82, !dbg !6171

lor.lhs.false59:                                  ; preds = %lor.lhs.false51
  %66 = load i32, i32* %i, align 4, !dbg !6172
  %tobool60 = icmp ne i32 %66, 0, !dbg !6172
  br i1 %tobool60, label %lor.lhs.false61, label %if.then82, !dbg !6173

lor.lhs.false61:                                  ; preds = %lor.lhs.false59
  %67 = load i32, i32* %j, align 4, !dbg !6174
  %idxprom62 = sext i32 %67 to i64, !dbg !6175
  %68 = load i32, i32* %i, align 4, !dbg !6176
  %sub63 = sub nsw i32 %68, 1, !dbg !6177
  %idxprom64 = sext i32 %sub63 to i64, !dbg !6175
  %69 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6175
  %peak65 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %69, i32 0, i32 28, !dbg !6178
  %70 = load i8**, i8*** %peak65, align 8, !dbg !6178
  %arrayidx66 = getelementptr inbounds i8*, i8** %70, i64 %idxprom64, !dbg !6175
  %71 = load i8*, i8** %arrayidx66, align 8, !dbg !6175
  %arrayidx67 = getelementptr inbounds i8, i8* %71, i64 %idxprom62, !dbg !6175
  %72 = load i8, i8* %arrayidx67, align 1, !dbg !6175
  %tobool68 = icmp ne i8 %72, 0, !dbg !6175
  br i1 %tobool68, label %lor.lhs.false69, label %if.then82, !dbg !6179

lor.lhs.false69:                                  ; preds = %lor.lhs.false61
  %73 = load i32, i32* %i, align 4, !dbg !6180
  %74 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6181
  %height70 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %74, i32 0, i32 4, !dbg !6182
  %75 = load i32, i32* %height70, align 4, !dbg !6182
  %sub71 = sub nsw i32 %75, 1, !dbg !6183
  %cmp72 = icmp eq i32 %73, %sub71, !dbg !6184
  br i1 %cmp72, label %if.then82, label %lor.lhs.false74, !dbg !6185

lor.lhs.false74:                                  ; preds = %lor.lhs.false69
  %76 = load i32, i32* %j, align 4, !dbg !6186
  %idxprom75 = sext i32 %76 to i64, !dbg !6187
  %77 = load i32, i32* %i, align 4, !dbg !6188
  %add76 = add nsw i32 %77, 1, !dbg !6189
  %idxprom77 = sext i32 %add76 to i64, !dbg !6187
  %78 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6187
  %peak78 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %78, i32 0, i32 28, !dbg !6190
  %79 = load i8**, i8*** %peak78, align 8, !dbg !6190
  %arrayidx79 = getelementptr inbounds i8*, i8** %79, i64 %idxprom77, !dbg !6187
  %80 = load i8*, i8** %arrayidx79, align 8, !dbg !6187
  %arrayidx80 = getelementptr inbounds i8, i8* %80, i64 %idxprom75, !dbg !6187
  %81 = load i8, i8* %arrayidx80, align 1, !dbg !6187
  %tobool81 = icmp ne i8 %81, 0, !dbg !6187
  br i1 %tobool81, label %if.end85, label %if.then82, !dbg !6191

if.then82:                                        ; preds = %lor.lhs.false74, %lor.lhs.false69, %lor.lhs.false61, %lor.lhs.false59, %lor.lhs.false51, %lor.lhs.false46, %lor.lhs.false39, %land.lhs.true
  %82 = load i32, i32* %pos29, align 4, !dbg !6193
  %idxprom83 = sext i32 %82 to i64, !dbg !6195
  %83 = load i8*, i8** %dpd, align 8, !dbg !6195
  %arrayidx84 = getelementptr inbounds i8, i8* %83, i64 %idxprom83, !dbg !6195
  store i8 -1, i8* %arrayidx84, align 1, !dbg !6196
  br label %if.end85, !dbg !6197

if.end85:                                         ; preds = %if.then82, %lor.lhs.false74, %for.body28
  br label %for.inc86, !dbg !6198

for.inc86:                                        ; preds = %if.end85
  %84 = load i32, i32* %j, align 4, !dbg !6199
  %inc87 = add nsw i32 %84, 1, !dbg !6199
  store i32 %inc87, i32* %j, align 4, !dbg !6199
  br label %for.cond25, !dbg !6201, !llvm.loop !6202

for.end88:                                        ; preds = %for.cond25
  br label %for.inc89, !dbg !6204

for.inc89:                                        ; preds = %for.end88
  %85 = load i32, i32* %i, align 4, !dbg !6205
  %inc90 = add nsw i32 %85, 1, !dbg !6205
  store i32 %inc90, i32* %i, align 4, !dbg !6205
  br label %for.cond21, !dbg !6207, !llvm.loop !6208

for.end91:                                        ; preds = %for.cond21
  ret void, !dbg !6210
}

; Function Attrs: nounwind uwtable
define internal void @envelope16(%struct.VectorscopeContext* %s, %struct.AVFrame* %out) #1 !dbg !6211 {
entry:
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !6212, metadata !909), !dbg !6213
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !6214, metadata !909), !dbg !6215
  %0 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6216
  %envelope = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %0, i32 0, i32 16, !dbg !6218
  %1 = load i32, i32* %envelope, align 8, !dbg !6218
  %tobool = icmp ne i32 %1, 0, !dbg !6216
  br i1 %tobool, label %if.else, label %if.then, !dbg !6219

if.then:                                          ; preds = %entry
  br label %if.end4, !dbg !6220

if.else:                                          ; preds = %entry
  %2 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6222
  %envelope1 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %2, i32 0, i32 16, !dbg !6224
  %3 = load i32, i32* %envelope1, align 8, !dbg !6224
  %cmp = icmp eq i32 %3, 1, !dbg !6225
  br i1 %cmp, label %if.then2, label %if.else3, !dbg !6226

if.then2:                                         ; preds = %if.else
  %4 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6227
  %5 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6229
  call void @envelope_instant16(%struct.VectorscopeContext* %4, %struct.AVFrame* %5), !dbg !6230
  br label %if.end, !dbg !6231

if.else3:                                         ; preds = %if.else
  %6 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6232
  %7 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6234
  call void @envelope_peak16(%struct.VectorscopeContext* %6, %struct.AVFrame* %7), !dbg !6235
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then2
  br label %if.end4

if.end4:                                          ; preds = %if.then, %if.end
  ret void, !dbg !6236
}

; Function Attrs: nounwind uwtable
define internal void @envelope_instant16(%struct.VectorscopeContext* %s, %struct.AVFrame* %out) #1 !dbg !6237 {
entry:
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  %dlinesize = alloca i32, align 4
  %dpd = alloca i16*, align 8
  %max = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %pos = alloca i32, align 4
  %poa = alloca i32, align 4
  %pob = alloca i32, align 4
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !6238, metadata !909), !dbg !6239
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !6240, metadata !909), !dbg !6241
  call void @llvm.dbg.declare(metadata i32* %dlinesize, metadata !6242, metadata !909), !dbg !6243
  %0 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6244
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 1, !dbg !6245
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !6244
  %1 = load i32, i32* %arrayidx, align 8, !dbg !6244
  %div = sdiv i32 %1, 2, !dbg !6246
  store i32 %div, i32* %dlinesize, align 4, !dbg !6243
  call void @llvm.dbg.declare(metadata i16** %dpd, metadata !6247, metadata !909), !dbg !6248
  %2 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6249
  %mode = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %2, i32 0, i32 1, !dbg !6250
  %3 = load i32, i32* %mode, align 8, !dbg !6250
  %cmp = icmp eq i32 %3, 1, !dbg !6251
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !6252

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6253
  %is_yuv = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %4, i32 0, i32 12, !dbg !6255
  %5 = load i32, i32* %is_yuv, align 8, !dbg !6255
  %tobool = icmp ne i32 %5, 0, !dbg !6253
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6256

cond.true:                                        ; preds = %lor.lhs.false, %entry
  %6 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6257
  %pd = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %6, i32 0, i32 11, !dbg !6259
  %7 = load i32, i32* %pd, align 4, !dbg !6259
  %idxprom = sext i32 %7 to i64, !dbg !6260
  %8 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6260
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 0, !dbg !6261
  %arrayidx1 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !6260
  %9 = load i8*, i8** %arrayidx1, align 8, !dbg !6260
  %10 = bitcast i8* %9 to i16*, !dbg !6262
  br label %cond.end, !dbg !6263

cond.false:                                       ; preds = %lor.lhs.false
  %11 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6264
  %data2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 0, !dbg !6266
  %arrayidx3 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data2, i64 0, i64 0, !dbg !6264
  %12 = load i8*, i8** %arrayidx3, align 8, !dbg !6264
  %13 = bitcast i8* %12 to i16*, !dbg !6267
  br label %cond.end, !dbg !6268

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16* [ %10, %cond.true ], [ %13, %cond.false ], !dbg !6269
  store i16* %cond, i16** %dpd, align 8, !dbg !6271
  call void @llvm.dbg.declare(metadata i32* %max, metadata !6272, metadata !909), !dbg !6273
  %14 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6274
  %size = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %14, i32 0, i32 13, !dbg !6275
  %15 = load i32, i32* %size, align 4, !dbg !6275
  %sub = sub nsw i32 %15, 1, !dbg !6276
  store i32 %sub, i32* %max, align 4, !dbg !6273
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6277, metadata !909), !dbg !6278
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6279, metadata !909), !dbg !6280
  store i32 0, i32* %i, align 4, !dbg !6281
  br label %for.cond, !dbg !6283

for.cond:                                         ; preds = %for.inc51, %cond.end
  %16 = load i32, i32* %i, align 4, !dbg !6284
  %17 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6287
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %17, i32 0, i32 4, !dbg !6288
  %18 = load i32, i32* %height, align 4, !dbg !6288
  %cmp4 = icmp slt i32 %16, %18, !dbg !6289
  br i1 %cmp4, label %for.body, label %for.end53, !dbg !6290

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6291
  br label %for.cond5, !dbg !6294

for.cond5:                                        ; preds = %for.inc, %for.body
  %19 = load i32, i32* %j, align 4, !dbg !6295
  %20 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6298
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 3, !dbg !6299
  %21 = load i32, i32* %width, align 8, !dbg !6299
  %cmp6 = icmp slt i32 %19, %21, !dbg !6300
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !6301

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6302, metadata !909), !dbg !6304
  %22 = load i32, i32* %i, align 4, !dbg !6305
  %23 = load i32, i32* %dlinesize, align 4, !dbg !6306
  %mul = mul nsw i32 %22, %23, !dbg !6307
  %24 = load i32, i32* %j, align 4, !dbg !6308
  %add = add nsw i32 %mul, %24, !dbg !6309
  store i32 %add, i32* %pos, align 4, !dbg !6304
  call void @llvm.dbg.declare(metadata i32* %poa, metadata !6310, metadata !909), !dbg !6311
  %25 = load i32, i32* %i, align 4, !dbg !6312
  %sub8 = sub nsw i32 %25, 1, !dbg !6313
  %26 = load i32, i32* %dlinesize, align 4, !dbg !6314
  %mul9 = mul nsw i32 %sub8, %26, !dbg !6315
  %27 = load i32, i32* %j, align 4, !dbg !6316
  %add10 = add nsw i32 %mul9, %27, !dbg !6317
  store i32 %add10, i32* %poa, align 4, !dbg !6311
  call void @llvm.dbg.declare(metadata i32* %pob, metadata !6318, metadata !909), !dbg !6319
  %28 = load i32, i32* %i, align 4, !dbg !6320
  %add11 = add nsw i32 %28, 1, !dbg !6321
  %29 = load i32, i32* %dlinesize, align 4, !dbg !6322
  %mul12 = mul nsw i32 %add11, %29, !dbg !6323
  %30 = load i32, i32* %j, align 4, !dbg !6324
  %add13 = add nsw i32 %mul12, %30, !dbg !6325
  store i32 %add13, i32* %pob, align 4, !dbg !6319
  %31 = load i32, i32* %pos, align 4, !dbg !6326
  %idxprom14 = sext i32 %31 to i64, !dbg !6328
  %32 = load i16*, i16** %dpd, align 8, !dbg !6328
  %arrayidx15 = getelementptr inbounds i16, i16* %32, i64 %idxprom14, !dbg !6328
  %33 = load i16, i16* %arrayidx15, align 2, !dbg !6328
  %conv = zext i16 %33 to i32, !dbg !6328
  %tobool16 = icmp ne i32 %conv, 0, !dbg !6328
  br i1 %tobool16, label %land.lhs.true, label %if.end, !dbg !6329

land.lhs.true:                                    ; preds = %for.body7
  %34 = load i32, i32* %j, align 4, !dbg !6330
  %tobool17 = icmp ne i32 %34, 0, !dbg !6330
  br i1 %tobool17, label %lor.lhs.false18, label %if.then, !dbg !6332

lor.lhs.false18:                                  ; preds = %land.lhs.true
  %35 = load i32, i32* %pos, align 4, !dbg !6333
  %sub19 = sub nsw i32 %35, 1, !dbg !6335
  %idxprom20 = sext i32 %sub19 to i64, !dbg !6336
  %36 = load i16*, i16** %dpd, align 8, !dbg !6336
  %arrayidx21 = getelementptr inbounds i16, i16* %36, i64 %idxprom20, !dbg !6336
  %37 = load i16, i16* %arrayidx21, align 2, !dbg !6336
  %tobool22 = icmp ne i16 %37, 0, !dbg !6336
  br i1 %tobool22, label %lor.lhs.false23, label %if.then, !dbg !6337

lor.lhs.false23:                                  ; preds = %lor.lhs.false18
  %38 = load i32, i32* %j, align 4, !dbg !6338
  %39 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6340
  %width24 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %39, i32 0, i32 3, !dbg !6341
  %40 = load i32, i32* %width24, align 8, !dbg !6341
  %sub25 = sub nsw i32 %40, 1, !dbg !6342
  %cmp26 = icmp eq i32 %38, %sub25, !dbg !6343
  br i1 %cmp26, label %if.then, label %lor.lhs.false28, !dbg !6344

lor.lhs.false28:                                  ; preds = %lor.lhs.false23
  %41 = load i32, i32* %pos, align 4, !dbg !6345
  %add29 = add nsw i32 %41, 1, !dbg !6347
  %idxprom30 = sext i32 %add29 to i64, !dbg !6348
  %42 = load i16*, i16** %dpd, align 8, !dbg !6348
  %arrayidx31 = getelementptr inbounds i16, i16* %42, i64 %idxprom30, !dbg !6348
  %43 = load i16, i16* %arrayidx31, align 2, !dbg !6348
  %tobool32 = icmp ne i16 %43, 0, !dbg !6348
  br i1 %tobool32, label %lor.lhs.false33, label %if.then, !dbg !6349

lor.lhs.false33:                                  ; preds = %lor.lhs.false28
  %44 = load i32, i32* %i, align 4, !dbg !6350
  %tobool34 = icmp ne i32 %44, 0, !dbg !6350
  br i1 %tobool34, label %lor.lhs.false35, label %if.then, !dbg !6351

lor.lhs.false35:                                  ; preds = %lor.lhs.false33
  %45 = load i32, i32* %poa, align 4, !dbg !6352
  %idxprom36 = sext i32 %45 to i64, !dbg !6353
  %46 = load i16*, i16** %dpd, align 8, !dbg !6353
  %arrayidx37 = getelementptr inbounds i16, i16* %46, i64 %idxprom36, !dbg !6353
  %47 = load i16, i16* %arrayidx37, align 2, !dbg !6353
  %tobool38 = icmp ne i16 %47, 0, !dbg !6353
  br i1 %tobool38, label %lor.lhs.false39, label %if.then, !dbg !6354

lor.lhs.false39:                                  ; preds = %lor.lhs.false35
  %48 = load i32, i32* %i, align 4, !dbg !6355
  %49 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6356
  %height40 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %49, i32 0, i32 4, !dbg !6357
  %50 = load i32, i32* %height40, align 4, !dbg !6357
  %sub41 = sub nsw i32 %50, 1, !dbg !6358
  %cmp42 = icmp eq i32 %48, %sub41, !dbg !6359
  br i1 %cmp42, label %if.then, label %lor.lhs.false44, !dbg !6360

lor.lhs.false44:                                  ; preds = %lor.lhs.false39
  %51 = load i32, i32* %pob, align 4, !dbg !6361
  %idxprom45 = sext i32 %51 to i64, !dbg !6362
  %52 = load i16*, i16** %dpd, align 8, !dbg !6362
  %arrayidx46 = getelementptr inbounds i16, i16* %52, i64 %idxprom45, !dbg !6362
  %53 = load i16, i16* %arrayidx46, align 2, !dbg !6362
  %tobool47 = icmp ne i16 %53, 0, !dbg !6362
  br i1 %tobool47, label %if.end, label %if.then, !dbg !6363

if.then:                                          ; preds = %lor.lhs.false44, %lor.lhs.false39, %lor.lhs.false35, %lor.lhs.false33, %lor.lhs.false28, %lor.lhs.false23, %lor.lhs.false18, %land.lhs.true
  %54 = load i32, i32* %max, align 4, !dbg !6365
  %conv48 = trunc i32 %54 to i16, !dbg !6365
  %55 = load i32, i32* %pos, align 4, !dbg !6367
  %idxprom49 = sext i32 %55 to i64, !dbg !6368
  %56 = load i16*, i16** %dpd, align 8, !dbg !6368
  %arrayidx50 = getelementptr inbounds i16, i16* %56, i64 %idxprom49, !dbg !6368
  store i16 %conv48, i16* %arrayidx50, align 2, !dbg !6369
  br label %if.end, !dbg !6370

if.end:                                           ; preds = %if.then, %lor.lhs.false44, %for.body7
  br label %for.inc, !dbg !6371

for.inc:                                          ; preds = %if.end
  %57 = load i32, i32* %j, align 4, !dbg !6372
  %inc = add nsw i32 %57, 1, !dbg !6372
  store i32 %inc, i32* %j, align 4, !dbg !6372
  br label %for.cond5, !dbg !6374, !llvm.loop !6375

for.end:                                          ; preds = %for.cond5
  br label %for.inc51, !dbg !6377

for.inc51:                                        ; preds = %for.end
  %58 = load i32, i32* %i, align 4, !dbg !6378
  %inc52 = add nsw i32 %58, 1, !dbg !6378
  store i32 %inc52, i32* %i, align 4, !dbg !6378
  br label %for.cond, !dbg !6380, !llvm.loop !6381

for.end53:                                        ; preds = %for.cond
  ret void, !dbg !6383
}

; Function Attrs: nounwind uwtable
define internal void @envelope_peak16(%struct.VectorscopeContext* %s, %struct.AVFrame* %out) #1 !dbg !6384 {
entry:
  %s.addr = alloca %struct.VectorscopeContext*, align 8
  %out.addr = alloca %struct.AVFrame*, align 8
  %dlinesize = alloca i32, align 4
  %dpd = alloca i16*, align 8
  %max = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %pos = alloca i32, align 4
  %pos29 = alloca i32, align 4
  store %struct.VectorscopeContext* %s, %struct.VectorscopeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s.addr, metadata !6385, metadata !909), !dbg !6386
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !6387, metadata !909), !dbg !6388
  call void @llvm.dbg.declare(metadata i32* %dlinesize, metadata !6389, metadata !909), !dbg !6390
  %0 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6391
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %0, i32 0, i32 1, !dbg !6392
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !6391
  %1 = load i32, i32* %arrayidx, align 8, !dbg !6391
  %div = sdiv i32 %1, 2, !dbg !6393
  store i32 %div, i32* %dlinesize, align 4, !dbg !6390
  call void @llvm.dbg.declare(metadata i16** %dpd, metadata !6394, metadata !909), !dbg !6395
  %2 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6396
  %mode = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %2, i32 0, i32 1, !dbg !6397
  %3 = load i32, i32* %mode, align 8, !dbg !6397
  %cmp = icmp eq i32 %3, 1, !dbg !6398
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !6399

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6400
  %is_yuv = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %4, i32 0, i32 12, !dbg !6402
  %5 = load i32, i32* %is_yuv, align 8, !dbg !6402
  %tobool = icmp ne i32 %5, 0, !dbg !6400
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6403

cond.true:                                        ; preds = %lor.lhs.false, %entry
  %6 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6404
  %pd = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %6, i32 0, i32 11, !dbg !6406
  %7 = load i32, i32* %pd, align 4, !dbg !6406
  %idxprom = sext i32 %7 to i64, !dbg !6407
  %8 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6407
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 0, !dbg !6408
  %arrayidx1 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !6407
  %9 = load i8*, i8** %arrayidx1, align 8, !dbg !6407
  %10 = bitcast i8* %9 to i16*, !dbg !6409
  br label %cond.end, !dbg !6410

cond.false:                                       ; preds = %lor.lhs.false
  %11 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6411
  %data2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 0, !dbg !6413
  %arrayidx3 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data2, i64 0, i64 0, !dbg !6411
  %12 = load i8*, i8** %arrayidx3, align 8, !dbg !6411
  %13 = bitcast i8* %12 to i16*, !dbg !6414
  br label %cond.end, !dbg !6415

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16* [ %10, %cond.true ], [ %13, %cond.false ], !dbg !6416
  store i16* %cond, i16** %dpd, align 8, !dbg !6418
  call void @llvm.dbg.declare(metadata i32* %max, metadata !6419, metadata !909), !dbg !6420
  %14 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6421
  %size = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %14, i32 0, i32 13, !dbg !6422
  %15 = load i32, i32* %size, align 4, !dbg !6422
  %sub = sub nsw i32 %15, 1, !dbg !6423
  store i32 %sub, i32* %max, align 4, !dbg !6420
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6424, metadata !909), !dbg !6425
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6426, metadata !909), !dbg !6427
  store i32 0, i32* %i, align 4, !dbg !6428
  br label %for.cond, !dbg !6430

for.cond:                                         ; preds = %for.inc15, %cond.end
  %16 = load i32, i32* %i, align 4, !dbg !6431
  %17 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6434
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %17, i32 0, i32 4, !dbg !6435
  %18 = load i32, i32* %height, align 4, !dbg !6435
  %cmp4 = icmp slt i32 %16, %18, !dbg !6436
  br i1 %cmp4, label %for.body, label %for.end17, !dbg !6437

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6438
  br label %for.cond5, !dbg !6441

for.cond5:                                        ; preds = %for.inc, %for.body
  %19 = load i32, i32* %j, align 4, !dbg !6442
  %20 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6445
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 3, !dbg !6446
  %21 = load i32, i32* %width, align 8, !dbg !6446
  %cmp6 = icmp slt i32 %19, %21, !dbg !6447
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !6448

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6449, metadata !909), !dbg !6451
  %22 = load i32, i32* %i, align 4, !dbg !6452
  %23 = load i32, i32* %dlinesize, align 4, !dbg !6453
  %mul = mul nsw i32 %22, %23, !dbg !6454
  %24 = load i32, i32* %j, align 4, !dbg !6455
  %add = add nsw i32 %mul, %24, !dbg !6456
  store i32 %add, i32* %pos, align 4, !dbg !6451
  %25 = load i32, i32* %pos, align 4, !dbg !6457
  %idxprom8 = sext i32 %25 to i64, !dbg !6459
  %26 = load i16*, i16** %dpd, align 8, !dbg !6459
  %arrayidx9 = getelementptr inbounds i16, i16* %26, i64 %idxprom8, !dbg !6459
  %27 = load i16, i16* %arrayidx9, align 2, !dbg !6459
  %tobool10 = icmp ne i16 %27, 0, !dbg !6459
  br i1 %tobool10, label %if.then, label %if.end, !dbg !6460

if.then:                                          ; preds = %for.body7
  %28 = load i32, i32* %j, align 4, !dbg !6461
  %idxprom11 = sext i32 %28 to i64, !dbg !6462
  %29 = load i32, i32* %i, align 4, !dbg !6463
  %idxprom12 = sext i32 %29 to i64, !dbg !6462
  %30 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6462
  %peak = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %30, i32 0, i32 28, !dbg !6464
  %31 = load i8**, i8*** %peak, align 8, !dbg !6464
  %arrayidx13 = getelementptr inbounds i8*, i8** %31, i64 %idxprom12, !dbg !6462
  %32 = load i8*, i8** %arrayidx13, align 8, !dbg !6462
  %arrayidx14 = getelementptr inbounds i8, i8* %32, i64 %idxprom11, !dbg !6462
  store i8 1, i8* %arrayidx14, align 1, !dbg !6465
  br label %if.end, !dbg !6462

if.end:                                           ; preds = %if.then, %for.body7
  br label %for.inc, !dbg !6466

for.inc:                                          ; preds = %if.end
  %33 = load i32, i32* %j, align 4, !dbg !6467
  %inc = add nsw i32 %33, 1, !dbg !6467
  store i32 %inc, i32* %j, align 4, !dbg !6467
  br label %for.cond5, !dbg !6469, !llvm.loop !6470

for.end:                                          ; preds = %for.cond5
  br label %for.inc15, !dbg !6472

for.inc15:                                        ; preds = %for.end
  %34 = load i32, i32* %i, align 4, !dbg !6473
  %inc16 = add nsw i32 %34, 1, !dbg !6473
  store i32 %inc16, i32* %i, align 4, !dbg !6473
  br label %for.cond, !dbg !6475, !llvm.loop !6476

for.end17:                                        ; preds = %for.cond
  %35 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6478
  %envelope = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %35, i32 0, i32 16, !dbg !6480
  %36 = load i32, i32* %envelope, align 8, !dbg !6480
  %cmp18 = icmp eq i32 %36, 3, !dbg !6481
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6482

if.then19:                                        ; preds = %for.end17
  %37 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6483
  %38 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6484
  call void @envelope_instant16(%struct.VectorscopeContext* %37, %struct.AVFrame* %38), !dbg !6485
  br label %if.end20, !dbg !6485

if.end20:                                         ; preds = %if.then19, %for.end17
  store i32 0, i32* %i, align 4, !dbg !6486
  br label %for.cond21, !dbg !6488

for.cond21:                                       ; preds = %for.inc91, %if.end20
  %39 = load i32, i32* %i, align 4, !dbg !6489
  %40 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6492
  %height22 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %40, i32 0, i32 4, !dbg !6493
  %41 = load i32, i32* %height22, align 4, !dbg !6493
  %cmp23 = icmp slt i32 %39, %41, !dbg !6494
  br i1 %cmp23, label %for.body24, label %for.end93, !dbg !6495

for.body24:                                       ; preds = %for.cond21
  store i32 0, i32* %j, align 4, !dbg !6496
  br label %for.cond25, !dbg !6499

for.cond25:                                       ; preds = %for.inc88, %for.body24
  %42 = load i32, i32* %j, align 4, !dbg !6500
  %43 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6503
  %width26 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %43, i32 0, i32 3, !dbg !6504
  %44 = load i32, i32* %width26, align 8, !dbg !6504
  %cmp27 = icmp slt i32 %42, %44, !dbg !6505
  br i1 %cmp27, label %for.body28, label %for.end90, !dbg !6506

for.body28:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata i32* %pos29, metadata !6507, metadata !909), !dbg !6509
  %45 = load i32, i32* %i, align 4, !dbg !6510
  %46 = load i32, i32* %dlinesize, align 4, !dbg !6511
  %mul30 = mul nsw i32 %45, %46, !dbg !6512
  %47 = load i32, i32* %j, align 4, !dbg !6513
  %add31 = add nsw i32 %mul30, %47, !dbg !6514
  store i32 %add31, i32* %pos29, align 4, !dbg !6509
  %48 = load i32, i32* %j, align 4, !dbg !6515
  %idxprom32 = sext i32 %48 to i64, !dbg !6517
  %49 = load i32, i32* %i, align 4, !dbg !6518
  %idxprom33 = sext i32 %49 to i64, !dbg !6517
  %50 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6517
  %peak34 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %50, i32 0, i32 28, !dbg !6519
  %51 = load i8**, i8*** %peak34, align 8, !dbg !6519
  %arrayidx35 = getelementptr inbounds i8*, i8** %51, i64 %idxprom33, !dbg !6517
  %52 = load i8*, i8** %arrayidx35, align 8, !dbg !6517
  %arrayidx36 = getelementptr inbounds i8, i8* %52, i64 %idxprom32, !dbg !6517
  %53 = load i8, i8* %arrayidx36, align 1, !dbg !6517
  %conv = zext i8 %53 to i32, !dbg !6517
  %tobool37 = icmp ne i32 %conv, 0, !dbg !6517
  br i1 %tobool37, label %land.lhs.true, label %if.end87, !dbg !6520

land.lhs.true:                                    ; preds = %for.body28
  %54 = load i32, i32* %j, align 4, !dbg !6521
  %tobool38 = icmp ne i32 %54, 0, !dbg !6521
  br i1 %tobool38, label %lor.lhs.false39, label %if.then83, !dbg !6523

lor.lhs.false39:                                  ; preds = %land.lhs.true
  %55 = load i32, i32* %j, align 4, !dbg !6524
  %sub40 = sub nsw i32 %55, 1, !dbg !6526
  %idxprom41 = sext i32 %sub40 to i64, !dbg !6527
  %56 = load i32, i32* %i, align 4, !dbg !6528
  %idxprom42 = sext i32 %56 to i64, !dbg !6527
  %57 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6527
  %peak43 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %57, i32 0, i32 28, !dbg !6529
  %58 = load i8**, i8*** %peak43, align 8, !dbg !6529
  %arrayidx44 = getelementptr inbounds i8*, i8** %58, i64 %idxprom42, !dbg !6527
  %59 = load i8*, i8** %arrayidx44, align 8, !dbg !6527
  %arrayidx45 = getelementptr inbounds i8, i8* %59, i64 %idxprom41, !dbg !6527
  %60 = load i8, i8* %arrayidx45, align 1, !dbg !6527
  %tobool46 = icmp ne i8 %60, 0, !dbg !6527
  br i1 %tobool46, label %lor.lhs.false47, label %if.then83, !dbg !6530

lor.lhs.false47:                                  ; preds = %lor.lhs.false39
  %61 = load i32, i32* %j, align 4, !dbg !6531
  %62 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6533
  %width48 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %62, i32 0, i32 3, !dbg !6534
  %63 = load i32, i32* %width48, align 8, !dbg !6534
  %sub49 = sub nsw i32 %63, 1, !dbg !6535
  %cmp50 = icmp eq i32 %61, %sub49, !dbg !6536
  br i1 %cmp50, label %if.then83, label %lor.lhs.false52, !dbg !6537

lor.lhs.false52:                                  ; preds = %lor.lhs.false47
  %64 = load i32, i32* %j, align 4, !dbg !6538
  %add53 = add nsw i32 %64, 1, !dbg !6540
  %idxprom54 = sext i32 %add53 to i64, !dbg !6541
  %65 = load i32, i32* %i, align 4, !dbg !6542
  %idxprom55 = sext i32 %65 to i64, !dbg !6541
  %66 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6541
  %peak56 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %66, i32 0, i32 28, !dbg !6543
  %67 = load i8**, i8*** %peak56, align 8, !dbg !6543
  %arrayidx57 = getelementptr inbounds i8*, i8** %67, i64 %idxprom55, !dbg !6541
  %68 = load i8*, i8** %arrayidx57, align 8, !dbg !6541
  %arrayidx58 = getelementptr inbounds i8, i8* %68, i64 %idxprom54, !dbg !6541
  %69 = load i8, i8* %arrayidx58, align 1, !dbg !6541
  %tobool59 = icmp ne i8 %69, 0, !dbg !6541
  br i1 %tobool59, label %lor.lhs.false60, label %if.then83, !dbg !6544

lor.lhs.false60:                                  ; preds = %lor.lhs.false52
  %70 = load i32, i32* %i, align 4, !dbg !6545
  %tobool61 = icmp ne i32 %70, 0, !dbg !6545
  br i1 %tobool61, label %lor.lhs.false62, label %if.then83, !dbg !6546

lor.lhs.false62:                                  ; preds = %lor.lhs.false60
  %71 = load i32, i32* %j, align 4, !dbg !6547
  %idxprom63 = sext i32 %71 to i64, !dbg !6548
  %72 = load i32, i32* %i, align 4, !dbg !6549
  %sub64 = sub nsw i32 %72, 1, !dbg !6550
  %idxprom65 = sext i32 %sub64 to i64, !dbg !6548
  %73 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6548
  %peak66 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %73, i32 0, i32 28, !dbg !6551
  %74 = load i8**, i8*** %peak66, align 8, !dbg !6551
  %arrayidx67 = getelementptr inbounds i8*, i8** %74, i64 %idxprom65, !dbg !6548
  %75 = load i8*, i8** %arrayidx67, align 8, !dbg !6548
  %arrayidx68 = getelementptr inbounds i8, i8* %75, i64 %idxprom63, !dbg !6548
  %76 = load i8, i8* %arrayidx68, align 1, !dbg !6548
  %tobool69 = icmp ne i8 %76, 0, !dbg !6548
  br i1 %tobool69, label %lor.lhs.false70, label %if.then83, !dbg !6552

lor.lhs.false70:                                  ; preds = %lor.lhs.false62
  %77 = load i32, i32* %i, align 4, !dbg !6553
  %78 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6554
  %height71 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %78, i32 0, i32 4, !dbg !6555
  %79 = load i32, i32* %height71, align 4, !dbg !6555
  %sub72 = sub nsw i32 %79, 1, !dbg !6556
  %cmp73 = icmp eq i32 %77, %sub72, !dbg !6557
  br i1 %cmp73, label %if.then83, label %lor.lhs.false75, !dbg !6558

lor.lhs.false75:                                  ; preds = %lor.lhs.false70
  %80 = load i32, i32* %j, align 4, !dbg !6559
  %idxprom76 = sext i32 %80 to i64, !dbg !6560
  %81 = load i32, i32* %i, align 4, !dbg !6561
  %add77 = add nsw i32 %81, 1, !dbg !6562
  %idxprom78 = sext i32 %add77 to i64, !dbg !6560
  %82 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s.addr, align 8, !dbg !6560
  %peak79 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %82, i32 0, i32 28, !dbg !6563
  %83 = load i8**, i8*** %peak79, align 8, !dbg !6563
  %arrayidx80 = getelementptr inbounds i8*, i8** %83, i64 %idxprom78, !dbg !6560
  %84 = load i8*, i8** %arrayidx80, align 8, !dbg !6560
  %arrayidx81 = getelementptr inbounds i8, i8* %84, i64 %idxprom76, !dbg !6560
  %85 = load i8, i8* %arrayidx81, align 1, !dbg !6560
  %tobool82 = icmp ne i8 %85, 0, !dbg !6560
  br i1 %tobool82, label %if.end87, label %if.then83, !dbg !6564

if.then83:                                        ; preds = %lor.lhs.false75, %lor.lhs.false70, %lor.lhs.false62, %lor.lhs.false60, %lor.lhs.false52, %lor.lhs.false47, %lor.lhs.false39, %land.lhs.true
  %86 = load i32, i32* %max, align 4, !dbg !6566
  %conv84 = trunc i32 %86 to i16, !dbg !6566
  %87 = load i32, i32* %pos29, align 4, !dbg !6568
  %idxprom85 = sext i32 %87 to i64, !dbg !6569
  %88 = load i16*, i16** %dpd, align 8, !dbg !6569
  %arrayidx86 = getelementptr inbounds i16, i16* %88, i64 %idxprom85, !dbg !6569
  store i16 %conv84, i16* %arrayidx86, align 2, !dbg !6570
  br label %if.end87, !dbg !6571

if.end87:                                         ; preds = %if.then83, %lor.lhs.false75, %for.body28
  br label %for.inc88, !dbg !6572

for.inc88:                                        ; preds = %if.end87
  %89 = load i32, i32* %j, align 4, !dbg !6573
  %inc89 = add nsw i32 %89, 1, !dbg !6573
  store i32 %inc89, i32* %j, align 4, !dbg !6573
  br label %for.cond25, !dbg !6575, !llvm.loop !6576

for.end90:                                        ; preds = %for.cond25
  br label %for.inc91, !dbg !6578

for.inc91:                                        ; preds = %for.end90
  %90 = load i32, i32* %i, align 4, !dbg !6579
  %inc92 = add nsw i32 %90, 1, !dbg !6579
  store i32 %inc92, i32* %i, align 4, !dbg !6579
  br label %for.cond21, !dbg !6581, !llvm.loop !6582

for.end93:                                        ; preds = %for.cond21
  ret void, !dbg !6584
}

; Function Attrs: nounwind uwtable
define internal void @draw_dots(i8* %dst, i32 %L, i32 %v, float %o) #1 !dbg !6585 {
entry:
  %dst.addr = alloca i8*, align 8
  %L.addr = alloca i32, align 4
  %v.addr = alloca i32, align 4
  %o.addr = alloca float, align 4
  %f = alloca float, align 4
  %V = alloca float, align 4
  %l = alloca i32, align 4
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6588, metadata !909), !dbg !6589
  store i32 %L, i32* %L.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %L.addr, metadata !6590, metadata !909), !dbg !6591
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !6592, metadata !909), !dbg !6593
  store float %o, float* %o.addr, align 4
  call void @llvm.dbg.declare(metadata float* %o.addr, metadata !6594, metadata !909), !dbg !6595
  call void @llvm.dbg.declare(metadata float* %f, metadata !6596, metadata !909), !dbg !6597
  %0 = load float, float* %o.addr, align 4, !dbg !6598
  %conv = fpext float %0 to double, !dbg !6598
  %sub = fsub double 1.000000e+00, %conv, !dbg !6599
  %conv1 = fptrunc double %sub to float, !dbg !6600
  store float %conv1, float* %f, align 4, !dbg !6597
  call void @llvm.dbg.declare(metadata float* %V, metadata !6601, metadata !909), !dbg !6602
  %1 = load float, float* %o.addr, align 4, !dbg !6603
  %2 = load i32, i32* %v.addr, align 4, !dbg !6604
  %conv2 = sitofp i32 %2 to float, !dbg !6604
  %mul = fmul float %1, %conv2, !dbg !6605
  store float %mul, float* %V, align 4, !dbg !6602
  call void @llvm.dbg.declare(metadata i32* %l, metadata !6606, metadata !909), !dbg !6607
  %3 = load i32, i32* %L.addr, align 4, !dbg !6608
  %mul3 = mul nsw i32 %3, 2, !dbg !6609
  store i32 %mul3, i32* %l, align 4, !dbg !6607
  %4 = load i32, i32* %l, align 4, !dbg !6610
  %sub4 = sub nsw i32 %4, 3, !dbg !6611
  %idxprom = sext i32 %sub4 to i64, !dbg !6612
  %5 = load i8*, i8** %dst.addr, align 8, !dbg !6612
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom, !dbg !6612
  %6 = load i8, i8* %arrayidx, align 1, !dbg !6612
  %conv5 = zext i8 %6 to i32, !dbg !6612
  %conv6 = sitofp i32 %conv5 to float, !dbg !6612
  %7 = load float, float* %f, align 4, !dbg !6613
  %mul7 = fmul float %conv6, %7, !dbg !6614
  %8 = load float, float* %V, align 4, !dbg !6615
  %add = fadd float %mul7, %8, !dbg !6616
  %conv8 = fptoui float %add to i8, !dbg !6612
  %9 = load i32, i32* %l, align 4, !dbg !6617
  %sub9 = sub nsw i32 %9, 3, !dbg !6618
  %idxprom10 = sext i32 %sub9 to i64, !dbg !6619
  %10 = load i8*, i8** %dst.addr, align 8, !dbg !6619
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !6619
  store i8 %conv8, i8* %arrayidx11, align 1, !dbg !6620
  %11 = load i32, i32* %l, align 4, !dbg !6621
  %add12 = add nsw i32 %11, 3, !dbg !6622
  %idxprom13 = sext i32 %add12 to i64, !dbg !6623
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !6623
  %arrayidx14 = getelementptr inbounds i8, i8* %12, i64 %idxprom13, !dbg !6623
  %13 = load i8, i8* %arrayidx14, align 1, !dbg !6623
  %conv15 = zext i8 %13 to i32, !dbg !6623
  %conv16 = sitofp i32 %conv15 to float, !dbg !6623
  %14 = load float, float* %f, align 4, !dbg !6624
  %mul17 = fmul float %conv16, %14, !dbg !6625
  %15 = load float, float* %V, align 4, !dbg !6626
  %add18 = fadd float %mul17, %15, !dbg !6627
  %conv19 = fptoui float %add18 to i8, !dbg !6623
  %16 = load i32, i32* %l, align 4, !dbg !6628
  %add20 = add nsw i32 %16, 3, !dbg !6629
  %idxprom21 = sext i32 %add20 to i64, !dbg !6630
  %17 = load i8*, i8** %dst.addr, align 8, !dbg !6630
  %arrayidx22 = getelementptr inbounds i8, i8* %17, i64 %idxprom21, !dbg !6630
  store i8 %conv19, i8* %arrayidx22, align 1, !dbg !6631
  %18 = load i32, i32* %l, align 4, !dbg !6632
  %sub23 = sub nsw i32 0, %18, !dbg !6633
  %sub24 = sub nsw i32 %sub23, 3, !dbg !6634
  %idxprom25 = sext i32 %sub24 to i64, !dbg !6635
  %19 = load i8*, i8** %dst.addr, align 8, !dbg !6635
  %arrayidx26 = getelementptr inbounds i8, i8* %19, i64 %idxprom25, !dbg !6635
  %20 = load i8, i8* %arrayidx26, align 1, !dbg !6635
  %conv27 = zext i8 %20 to i32, !dbg !6635
  %conv28 = sitofp i32 %conv27 to float, !dbg !6635
  %21 = load float, float* %f, align 4, !dbg !6636
  %mul29 = fmul float %conv28, %21, !dbg !6637
  %22 = load float, float* %V, align 4, !dbg !6638
  %add30 = fadd float %mul29, %22, !dbg !6639
  %conv31 = fptoui float %add30 to i8, !dbg !6635
  %23 = load i32, i32* %l, align 4, !dbg !6640
  %sub32 = sub nsw i32 0, %23, !dbg !6641
  %sub33 = sub nsw i32 %sub32, 3, !dbg !6642
  %idxprom34 = sext i32 %sub33 to i64, !dbg !6643
  %24 = load i8*, i8** %dst.addr, align 8, !dbg !6643
  %arrayidx35 = getelementptr inbounds i8, i8* %24, i64 %idxprom34, !dbg !6643
  store i8 %conv31, i8* %arrayidx35, align 1, !dbg !6644
  %25 = load i32, i32* %l, align 4, !dbg !6645
  %sub36 = sub nsw i32 0, %25, !dbg !6646
  %add37 = add nsw i32 %sub36, 3, !dbg !6647
  %idxprom38 = sext i32 %add37 to i64, !dbg !6648
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !6648
  %arrayidx39 = getelementptr inbounds i8, i8* %26, i64 %idxprom38, !dbg !6648
  %27 = load i8, i8* %arrayidx39, align 1, !dbg !6648
  %conv40 = zext i8 %27 to i32, !dbg !6648
  %conv41 = sitofp i32 %conv40 to float, !dbg !6648
  %28 = load float, float* %f, align 4, !dbg !6649
  %mul42 = fmul float %conv41, %28, !dbg !6650
  %29 = load float, float* %V, align 4, !dbg !6651
  %add43 = fadd float %mul42, %29, !dbg !6652
  %conv44 = fptoui float %add43 to i8, !dbg !6648
  %30 = load i32, i32* %l, align 4, !dbg !6653
  %sub45 = sub nsw i32 0, %30, !dbg !6654
  %add46 = add nsw i32 %sub45, 3, !dbg !6655
  %idxprom47 = sext i32 %add46 to i64, !dbg !6656
  %31 = load i8*, i8** %dst.addr, align 8, !dbg !6656
  %arrayidx48 = getelementptr inbounds i8, i8* %31, i64 %idxprom47, !dbg !6656
  store i8 %conv44, i8* %arrayidx48, align 1, !dbg !6657
  %32 = load i32, i32* %L.addr, align 4, !dbg !6658
  %33 = load i32, i32* %l, align 4, !dbg !6659
  %add49 = add nsw i32 %33, %32, !dbg !6659
  store i32 %add49, i32* %l, align 4, !dbg !6659
  %34 = load i32, i32* %l, align 4, !dbg !6660
  %sub50 = sub nsw i32 %34, 3, !dbg !6661
  %idxprom51 = sext i32 %sub50 to i64, !dbg !6662
  %35 = load i8*, i8** %dst.addr, align 8, !dbg !6662
  %arrayidx52 = getelementptr inbounds i8, i8* %35, i64 %idxprom51, !dbg !6662
  %36 = load i8, i8* %arrayidx52, align 1, !dbg !6662
  %conv53 = zext i8 %36 to i32, !dbg !6662
  %conv54 = sitofp i32 %conv53 to float, !dbg !6662
  %37 = load float, float* %f, align 4, !dbg !6663
  %mul55 = fmul float %conv54, %37, !dbg !6664
  %38 = load float, float* %V, align 4, !dbg !6665
  %add56 = fadd float %mul55, %38, !dbg !6666
  %conv57 = fptoui float %add56 to i8, !dbg !6662
  %39 = load i32, i32* %l, align 4, !dbg !6667
  %sub58 = sub nsw i32 %39, 3, !dbg !6668
  %idxprom59 = sext i32 %sub58 to i64, !dbg !6669
  %40 = load i8*, i8** %dst.addr, align 8, !dbg !6669
  %arrayidx60 = getelementptr inbounds i8, i8* %40, i64 %idxprom59, !dbg !6669
  store i8 %conv57, i8* %arrayidx60, align 1, !dbg !6670
  %41 = load i32, i32* %l, align 4, !dbg !6671
  %add61 = add nsw i32 %41, 3, !dbg !6672
  %idxprom62 = sext i32 %add61 to i64, !dbg !6673
  %42 = load i8*, i8** %dst.addr, align 8, !dbg !6673
  %arrayidx63 = getelementptr inbounds i8, i8* %42, i64 %idxprom62, !dbg !6673
  %43 = load i8, i8* %arrayidx63, align 1, !dbg !6673
  %conv64 = zext i8 %43 to i32, !dbg !6673
  %conv65 = sitofp i32 %conv64 to float, !dbg !6673
  %44 = load float, float* %f, align 4, !dbg !6674
  %mul66 = fmul float %conv65, %44, !dbg !6675
  %45 = load float, float* %V, align 4, !dbg !6676
  %add67 = fadd float %mul66, %45, !dbg !6677
  %conv68 = fptoui float %add67 to i8, !dbg !6673
  %46 = load i32, i32* %l, align 4, !dbg !6678
  %add69 = add nsw i32 %46, 3, !dbg !6679
  %idxprom70 = sext i32 %add69 to i64, !dbg !6680
  %47 = load i8*, i8** %dst.addr, align 8, !dbg !6680
  %arrayidx71 = getelementptr inbounds i8, i8* %47, i64 %idxprom70, !dbg !6680
  store i8 %conv68, i8* %arrayidx71, align 1, !dbg !6681
  %48 = load i32, i32* %l, align 4, !dbg !6682
  %sub72 = sub nsw i32 %48, 2, !dbg !6683
  %idxprom73 = sext i32 %sub72 to i64, !dbg !6684
  %49 = load i8*, i8** %dst.addr, align 8, !dbg !6684
  %arrayidx74 = getelementptr inbounds i8, i8* %49, i64 %idxprom73, !dbg !6684
  %50 = load i8, i8* %arrayidx74, align 1, !dbg !6684
  %conv75 = zext i8 %50 to i32, !dbg !6684
  %conv76 = sitofp i32 %conv75 to float, !dbg !6684
  %51 = load float, float* %f, align 4, !dbg !6685
  %mul77 = fmul float %conv76, %51, !dbg !6686
  %52 = load float, float* %V, align 4, !dbg !6687
  %add78 = fadd float %mul77, %52, !dbg !6688
  %conv79 = fptoui float %add78 to i8, !dbg !6684
  %53 = load i32, i32* %l, align 4, !dbg !6689
  %sub80 = sub nsw i32 %53, 2, !dbg !6690
  %idxprom81 = sext i32 %sub80 to i64, !dbg !6691
  %54 = load i8*, i8** %dst.addr, align 8, !dbg !6691
  %arrayidx82 = getelementptr inbounds i8, i8* %54, i64 %idxprom81, !dbg !6691
  store i8 %conv79, i8* %arrayidx82, align 1, !dbg !6692
  %55 = load i32, i32* %l, align 4, !dbg !6693
  %add83 = add nsw i32 %55, 2, !dbg !6694
  %idxprom84 = sext i32 %add83 to i64, !dbg !6695
  %56 = load i8*, i8** %dst.addr, align 8, !dbg !6695
  %arrayidx85 = getelementptr inbounds i8, i8* %56, i64 %idxprom84, !dbg !6695
  %57 = load i8, i8* %arrayidx85, align 1, !dbg !6695
  %conv86 = zext i8 %57 to i32, !dbg !6695
  %conv87 = sitofp i32 %conv86 to float, !dbg !6695
  %58 = load float, float* %f, align 4, !dbg !6696
  %mul88 = fmul float %conv87, %58, !dbg !6697
  %59 = load float, float* %V, align 4, !dbg !6698
  %add89 = fadd float %mul88, %59, !dbg !6699
  %conv90 = fptoui float %add89 to i8, !dbg !6695
  %60 = load i32, i32* %l, align 4, !dbg !6700
  %add91 = add nsw i32 %60, 2, !dbg !6701
  %idxprom92 = sext i32 %add91 to i64, !dbg !6702
  %61 = load i8*, i8** %dst.addr, align 8, !dbg !6702
  %arrayidx93 = getelementptr inbounds i8, i8* %61, i64 %idxprom92, !dbg !6702
  store i8 %conv90, i8* %arrayidx93, align 1, !dbg !6703
  %62 = load i32, i32* %l, align 4, !dbg !6704
  %sub94 = sub nsw i32 0, %62, !dbg !6705
  %sub95 = sub nsw i32 %sub94, 3, !dbg !6706
  %idxprom96 = sext i32 %sub95 to i64, !dbg !6707
  %63 = load i8*, i8** %dst.addr, align 8, !dbg !6707
  %arrayidx97 = getelementptr inbounds i8, i8* %63, i64 %idxprom96, !dbg !6707
  %64 = load i8, i8* %arrayidx97, align 1, !dbg !6707
  %conv98 = zext i8 %64 to i32, !dbg !6707
  %conv99 = sitofp i32 %conv98 to float, !dbg !6707
  %65 = load float, float* %f, align 4, !dbg !6708
  %mul100 = fmul float %conv99, %65, !dbg !6709
  %66 = load float, float* %V, align 4, !dbg !6710
  %add101 = fadd float %mul100, %66, !dbg !6711
  %conv102 = fptoui float %add101 to i8, !dbg !6707
  %67 = load i32, i32* %l, align 4, !dbg !6712
  %sub103 = sub nsw i32 0, %67, !dbg !6713
  %sub104 = sub nsw i32 %sub103, 3, !dbg !6714
  %idxprom105 = sext i32 %sub104 to i64, !dbg !6715
  %68 = load i8*, i8** %dst.addr, align 8, !dbg !6715
  %arrayidx106 = getelementptr inbounds i8, i8* %68, i64 %idxprom105, !dbg !6715
  store i8 %conv102, i8* %arrayidx106, align 1, !dbg !6716
  %69 = load i32, i32* %l, align 4, !dbg !6717
  %sub107 = sub nsw i32 0, %69, !dbg !6718
  %add108 = add nsw i32 %sub107, 3, !dbg !6719
  %idxprom109 = sext i32 %add108 to i64, !dbg !6720
  %70 = load i8*, i8** %dst.addr, align 8, !dbg !6720
  %arrayidx110 = getelementptr inbounds i8, i8* %70, i64 %idxprom109, !dbg !6720
  %71 = load i8, i8* %arrayidx110, align 1, !dbg !6720
  %conv111 = zext i8 %71 to i32, !dbg !6720
  %conv112 = sitofp i32 %conv111 to float, !dbg !6720
  %72 = load float, float* %f, align 4, !dbg !6721
  %mul113 = fmul float %conv112, %72, !dbg !6722
  %73 = load float, float* %V, align 4, !dbg !6723
  %add114 = fadd float %mul113, %73, !dbg !6724
  %conv115 = fptoui float %add114 to i8, !dbg !6720
  %74 = load i32, i32* %l, align 4, !dbg !6725
  %sub116 = sub nsw i32 0, %74, !dbg !6726
  %add117 = add nsw i32 %sub116, 3, !dbg !6727
  %idxprom118 = sext i32 %add117 to i64, !dbg !6728
  %75 = load i8*, i8** %dst.addr, align 8, !dbg !6728
  %arrayidx119 = getelementptr inbounds i8, i8* %75, i64 %idxprom118, !dbg !6728
  store i8 %conv115, i8* %arrayidx119, align 1, !dbg !6729
  %76 = load i32, i32* %l, align 4, !dbg !6730
  %sub120 = sub nsw i32 0, %76, !dbg !6731
  %sub121 = sub nsw i32 %sub120, 2, !dbg !6732
  %idxprom122 = sext i32 %sub121 to i64, !dbg !6733
  %77 = load i8*, i8** %dst.addr, align 8, !dbg !6733
  %arrayidx123 = getelementptr inbounds i8, i8* %77, i64 %idxprom122, !dbg !6733
  %78 = load i8, i8* %arrayidx123, align 1, !dbg !6733
  %conv124 = zext i8 %78 to i32, !dbg !6733
  %conv125 = sitofp i32 %conv124 to float, !dbg !6733
  %79 = load float, float* %f, align 4, !dbg !6734
  %mul126 = fmul float %conv125, %79, !dbg !6735
  %80 = load float, float* %V, align 4, !dbg !6736
  %add127 = fadd float %mul126, %80, !dbg !6737
  %conv128 = fptoui float %add127 to i8, !dbg !6733
  %81 = load i32, i32* %l, align 4, !dbg !6738
  %sub129 = sub nsw i32 0, %81, !dbg !6739
  %sub130 = sub nsw i32 %sub129, 2, !dbg !6740
  %idxprom131 = sext i32 %sub130 to i64, !dbg !6741
  %82 = load i8*, i8** %dst.addr, align 8, !dbg !6741
  %arrayidx132 = getelementptr inbounds i8, i8* %82, i64 %idxprom131, !dbg !6741
  store i8 %conv128, i8* %arrayidx132, align 1, !dbg !6742
  %83 = load i32, i32* %l, align 4, !dbg !6743
  %sub133 = sub nsw i32 0, %83, !dbg !6744
  %add134 = add nsw i32 %sub133, 2, !dbg !6745
  %idxprom135 = sext i32 %add134 to i64, !dbg !6746
  %84 = load i8*, i8** %dst.addr, align 8, !dbg !6746
  %arrayidx136 = getelementptr inbounds i8, i8* %84, i64 %idxprom135, !dbg !6746
  %85 = load i8, i8* %arrayidx136, align 1, !dbg !6746
  %conv137 = zext i8 %85 to i32, !dbg !6746
  %conv138 = sitofp i32 %conv137 to float, !dbg !6746
  %86 = load float, float* %f, align 4, !dbg !6747
  %mul139 = fmul float %conv138, %86, !dbg !6748
  %87 = load float, float* %V, align 4, !dbg !6749
  %add140 = fadd float %mul139, %87, !dbg !6750
  %conv141 = fptoui float %add140 to i8, !dbg !6746
  %88 = load i32, i32* %l, align 4, !dbg !6751
  %sub142 = sub nsw i32 0, %88, !dbg !6752
  %add143 = add nsw i32 %sub142, 2, !dbg !6753
  %idxprom144 = sext i32 %add143 to i64, !dbg !6754
  %89 = load i8*, i8** %dst.addr, align 8, !dbg !6754
  %arrayidx145 = getelementptr inbounds i8, i8* %89, i64 %idxprom144, !dbg !6754
  store i8 %conv141, i8* %arrayidx145, align 1, !dbg !6755
  ret void, !dbg !6756
}

; Function Attrs: nounwind uwtable
define internal void @draw_htext(%struct.AVFrame* %out, i32 %x, i32 %y, float %o1, float %o2, i8* %txt, i8* %color) #1 !dbg !6757 {
entry:
  %out.addr = alloca %struct.AVFrame*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %o1.addr = alloca float, align 4
  %o2.addr = alloca float, align 4
  %txt.addr = alloca i8*, align 8
  %color.addr = alloca i8*, align 8
  %font = alloca i8*, align 8
  %font_height = alloca i32, align 4
  %i = alloca i32, align 4
  %plane = alloca i32, align 4
  %char_y = alloca i32, align 4
  %mask = alloca i32, align 4
  %v = alloca i32, align 4
  %p = alloca i8*, align 8
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !6760, metadata !909), !dbg !6761
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6762, metadata !909), !dbg !6763
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6764, metadata !909), !dbg !6765
  store float %o1, float* %o1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %o1.addr, metadata !6766, metadata !909), !dbg !6767
  store float %o2, float* %o2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %o2.addr, metadata !6768, metadata !909), !dbg !6769
  store i8* %txt, i8** %txt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %txt.addr, metadata !6770, metadata !909), !dbg !6771
  store i8* %color, i8** %color.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %color.addr, metadata !6772, metadata !909), !dbg !6773
  call void @llvm.dbg.declare(metadata i8** %font, metadata !6774, metadata !909), !dbg !6775
  call void @llvm.dbg.declare(metadata i32* %font_height, metadata !6776, metadata !909), !dbg !6777
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6778, metadata !909), !dbg !6779
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !6780, metadata !909), !dbg !6781
  store i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @avpriv_cga_font, i32 0, i32 0), i8** %font, align 8, !dbg !6782
  store i32 8, i32* %font_height, align 4, !dbg !6783
  store i32 0, i32* %plane, align 4, !dbg !6784
  br label %for.cond, !dbg !6786

for.cond:                                         ; preds = %for.inc51, %entry
  %0 = load i32, i32* %plane, align 4, !dbg !6787
  %cmp = icmp slt i32 %0, 4, !dbg !6790
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6791

land.rhs:                                         ; preds = %for.cond
  %1 = load i32, i32* %plane, align 4, !dbg !6792
  %idxprom = sext i32 %1 to i64, !dbg !6794
  %2 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6794
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 0, !dbg !6795
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !6794
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !6794
  %tobool = icmp ne i8* %3, null, !dbg !6796
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ]
  br i1 %4, label %for.body, label %for.end53, !dbg !6797

for.body:                                         ; preds = %land.end
  store i32 0, i32* %i, align 4, !dbg !6799
  br label %for.cond1, !dbg !6802

for.cond1:                                        ; preds = %for.inc49, %for.body
  %5 = load i32, i32* %i, align 4, !dbg !6803
  %idxprom2 = sext i32 %5 to i64, !dbg !6806
  %6 = load i8*, i8** %txt.addr, align 8, !dbg !6806
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 %idxprom2, !dbg !6806
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !6806
  %tobool4 = icmp ne i8 %7, 0, !dbg !6807
  br i1 %tobool4, label %for.body5, label %for.end50, !dbg !6807

for.body5:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %char_y, metadata !6808, metadata !909), !dbg !6810
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !6811, metadata !909), !dbg !6812
  call void @llvm.dbg.declare(metadata i32* %v, metadata !6813, metadata !909), !dbg !6814
  %8 = load i32, i32* %plane, align 4, !dbg !6815
  %idxprom6 = sext i32 %8 to i64, !dbg !6816
  %9 = load i8*, i8** %color.addr, align 8, !dbg !6816
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %idxprom6, !dbg !6816
  %10 = load i8, i8* %arrayidx7, align 1, !dbg !6816
  %conv = zext i8 %10 to i32, !dbg !6816
  store i32 %conv, i32* %v, align 4, !dbg !6814
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6817, metadata !909), !dbg !6818
  %11 = load i32, i32* %plane, align 4, !dbg !6819
  %idxprom8 = sext i32 %11 to i64, !dbg !6820
  %12 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6820
  %data9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 0, !dbg !6821
  %arrayidx10 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data9, i64 0, i64 %idxprom8, !dbg !6820
  %13 = load i8*, i8** %arrayidx10, align 8, !dbg !6820
  %14 = load i32, i32* %y.addr, align 4, !dbg !6822
  %15 = load i32, i32* %plane, align 4, !dbg !6823
  %idxprom11 = sext i32 %15 to i64, !dbg !6824
  %16 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6824
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 1, !dbg !6825
  %arrayidx12 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom11, !dbg !6824
  %17 = load i32, i32* %arrayidx12, align 4, !dbg !6824
  %mul = mul nsw i32 %14, %17, !dbg !6826
  %idx.ext = sext i32 %mul to i64, !dbg !6827
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !6827
  %18 = load i32, i32* %x.addr, align 4, !dbg !6828
  %19 = load i32, i32* %i, align 4, !dbg !6829
  %mul13 = mul nsw i32 %19, 8, !dbg !6830
  %add = add nsw i32 %18, %mul13, !dbg !6831
  %idx.ext14 = sext i32 %add to i64, !dbg !6832
  %add.ptr15 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext14, !dbg !6832
  store i8* %add.ptr15, i8** %p, align 8, !dbg !6818
  %20 = load i32, i32* %font_height, align 4, !dbg !6833
  %sub = sub nsw i32 %20, 1, !dbg !6835
  store i32 %sub, i32* %char_y, align 4, !dbg !6836
  br label %for.cond16, !dbg !6837

for.cond16:                                       ; preds = %for.inc47, %for.body5
  %21 = load i32, i32* %char_y, align 4, !dbg !6838
  %cmp17 = icmp sge i32 %21, 0, !dbg !6841
  br i1 %cmp17, label %for.body19, label %for.end48, !dbg !6842

for.body19:                                       ; preds = %for.cond16
  store i32 128, i32* %mask, align 4, !dbg !6843
  br label %for.cond20, !dbg !6846

for.cond20:                                       ; preds = %for.inc, %for.body19
  %22 = load i32, i32* %mask, align 4, !dbg !6847
  %tobool21 = icmp ne i32 %22, 0, !dbg !6850
  br i1 %tobool21, label %for.body22, label %for.end, !dbg !6850

for.body22:                                       ; preds = %for.cond20
  %23 = load i32, i32* %i, align 4, !dbg !6851
  %idxprom23 = sext i32 %23 to i64, !dbg !6854
  %24 = load i8*, i8** %txt.addr, align 8, !dbg !6854
  %arrayidx24 = getelementptr inbounds i8, i8* %24, i64 %idxprom23, !dbg !6854
  %25 = load i8, i8* %arrayidx24, align 1, !dbg !6854
  %conv25 = sext i8 %25 to i32, !dbg !6854
  %26 = load i32, i32* %font_height, align 4, !dbg !6855
  %mul26 = mul nsw i32 %conv25, %26, !dbg !6856
  %27 = load i32, i32* %char_y, align 4, !dbg !6857
  %add27 = add nsw i32 %mul26, %27, !dbg !6858
  %idxprom28 = sext i32 %add27 to i64, !dbg !6859
  %28 = load i8*, i8** %font, align 8, !dbg !6859
  %arrayidx29 = getelementptr inbounds i8, i8* %28, i64 %idxprom28, !dbg !6859
  %29 = load i8, i8* %arrayidx29, align 1, !dbg !6859
  %conv30 = zext i8 %29 to i32, !dbg !6859
  %30 = load i32, i32* %mask, align 4, !dbg !6860
  %and = and i32 %conv30, %30, !dbg !6861
  %tobool31 = icmp ne i32 %and, 0, !dbg !6861
  br i1 %tobool31, label %if.then, label %if.end, !dbg !6862

if.then:                                          ; preds = %for.body22
  %31 = load i8*, i8** %p, align 8, !dbg !6863
  %arrayidx32 = getelementptr inbounds i8, i8* %31, i64 0, !dbg !6863
  %32 = load i8, i8* %arrayidx32, align 1, !dbg !6863
  %conv33 = zext i8 %32 to i32, !dbg !6863
  %conv34 = sitofp i32 %conv33 to float, !dbg !6863
  %33 = load float, float* %o2.addr, align 4, !dbg !6864
  %mul35 = fmul float %conv34, %33, !dbg !6865
  %34 = load i32, i32* %v, align 4, !dbg !6866
  %conv36 = sitofp i32 %34 to float, !dbg !6866
  %35 = load float, float* %o1.addr, align 4, !dbg !6867
  %mul37 = fmul float %conv36, %35, !dbg !6868
  %add38 = fadd float %mul35, %mul37, !dbg !6869
  %conv39 = fptoui float %add38 to i8, !dbg !6863
  %36 = load i8*, i8** %p, align 8, !dbg !6870
  %arrayidx40 = getelementptr inbounds i8, i8* %36, i64 0, !dbg !6870
  store i8 %conv39, i8* %arrayidx40, align 1, !dbg !6871
  br label %if.end, !dbg !6870

if.end:                                           ; preds = %if.then, %for.body22
  %37 = load i8*, i8** %p, align 8, !dbg !6872
  %incdec.ptr = getelementptr inbounds i8, i8* %37, i32 1, !dbg !6872
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !6872
  br label %for.inc, !dbg !6873

for.inc:                                          ; preds = %if.end
  %38 = load i32, i32* %mask, align 4, !dbg !6874
  %shr = ashr i32 %38, 1, !dbg !6874
  store i32 %shr, i32* %mask, align 4, !dbg !6874
  br label %for.cond20, !dbg !6876, !llvm.loop !6877

for.end:                                          ; preds = %for.cond20
  %39 = load i32, i32* %plane, align 4, !dbg !6879
  %idxprom41 = sext i32 %39 to i64, !dbg !6880
  %40 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !6880
  %linesize42 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %40, i32 0, i32 1, !dbg !6881
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize42, i64 0, i64 %idxprom41, !dbg !6880
  %41 = load i32, i32* %arrayidx43, align 4, !dbg !6880
  %sub44 = sub nsw i32 %41, 8, !dbg !6882
  %42 = load i8*, i8** %p, align 8, !dbg !6883
  %idx.ext45 = sext i32 %sub44 to i64, !dbg !6883
  %add.ptr46 = getelementptr inbounds i8, i8* %42, i64 %idx.ext45, !dbg !6883
  store i8* %add.ptr46, i8** %p, align 8, !dbg !6883
  br label %for.inc47, !dbg !6884

for.inc47:                                        ; preds = %for.end
  %43 = load i32, i32* %char_y, align 4, !dbg !6885
  %dec = add nsw i32 %43, -1, !dbg !6885
  store i32 %dec, i32* %char_y, align 4, !dbg !6885
  br label %for.cond16, !dbg !6887, !llvm.loop !6888

for.end48:                                        ; preds = %for.cond16
  br label %for.inc49, !dbg !6890

for.inc49:                                        ; preds = %for.end48
  %44 = load i32, i32* %i, align 4, !dbg !6891
  %inc = add nsw i32 %44, 1, !dbg !6891
  store i32 %inc, i32* %i, align 4, !dbg !6891
  br label %for.cond1, !dbg !6893, !llvm.loop !6894

for.end50:                                        ; preds = %for.cond1
  br label %for.inc51, !dbg !6896

for.inc51:                                        ; preds = %for.end50
  %45 = load i32, i32* %plane, align 4, !dbg !6897
  %inc52 = add nsw i32 %45, 1, !dbg !6897
  store i32 %inc52, i32* %plane, align 4, !dbg !6897
  br label %for.cond, !dbg !6899, !llvm.loop !6900

for.end53:                                        ; preds = %land.end
  ret void, !dbg !6902
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal void @draw_dots16(i16* %dst, i32 %L, i32 %v, float %o) #1 !dbg !6903 {
entry:
  %dst.addr = alloca i16*, align 8
  %L.addr = alloca i32, align 4
  %v.addr = alloca i32, align 4
  %o.addr = alloca float, align 4
  %f = alloca float, align 4
  %V = alloca float, align 4
  %l = alloca i32, align 4
  store i16* %dst, i16** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dst.addr, metadata !6906, metadata !909), !dbg !6907
  store i32 %L, i32* %L.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %L.addr, metadata !6908, metadata !909), !dbg !6909
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !6910, metadata !909), !dbg !6911
  store float %o, float* %o.addr, align 4
  call void @llvm.dbg.declare(metadata float* %o.addr, metadata !6912, metadata !909), !dbg !6913
  call void @llvm.dbg.declare(metadata float* %f, metadata !6914, metadata !909), !dbg !6915
  %0 = load float, float* %o.addr, align 4, !dbg !6916
  %conv = fpext float %0 to double, !dbg !6916
  %sub = fsub double 1.000000e+00, %conv, !dbg !6917
  %conv1 = fptrunc double %sub to float, !dbg !6918
  store float %conv1, float* %f, align 4, !dbg !6915
  call void @llvm.dbg.declare(metadata float* %V, metadata !6919, metadata !909), !dbg !6920
  %1 = load float, float* %o.addr, align 4, !dbg !6921
  %2 = load i32, i32* %v.addr, align 4, !dbg !6922
  %conv2 = sitofp i32 %2 to float, !dbg !6922
  %mul = fmul float %1, %conv2, !dbg !6923
  store float %mul, float* %V, align 4, !dbg !6920
  call void @llvm.dbg.declare(metadata i32* %l, metadata !6924, metadata !909), !dbg !6925
  %3 = load i32, i32* %L.addr, align 4, !dbg !6926
  %mul3 = mul nsw i32 %3, 2, !dbg !6927
  store i32 %mul3, i32* %l, align 4, !dbg !6925
  %4 = load i32, i32* %l, align 4, !dbg !6928
  %sub4 = sub nsw i32 %4, 3, !dbg !6929
  %idxprom = sext i32 %sub4 to i64, !dbg !6930
  %5 = load i16*, i16** %dst.addr, align 8, !dbg !6930
  %arrayidx = getelementptr inbounds i16, i16* %5, i64 %idxprom, !dbg !6930
  %6 = load i16, i16* %arrayidx, align 2, !dbg !6930
  %conv5 = zext i16 %6 to i32, !dbg !6930
  %conv6 = sitofp i32 %conv5 to float, !dbg !6930
  %7 = load float, float* %f, align 4, !dbg !6931
  %mul7 = fmul float %conv6, %7, !dbg !6932
  %8 = load float, float* %V, align 4, !dbg !6933
  %add = fadd float %mul7, %8, !dbg !6934
  %conv8 = fptoui float %add to i16, !dbg !6930
  %9 = load i32, i32* %l, align 4, !dbg !6935
  %sub9 = sub nsw i32 %9, 3, !dbg !6936
  %idxprom10 = sext i32 %sub9 to i64, !dbg !6937
  %10 = load i16*, i16** %dst.addr, align 8, !dbg !6937
  %arrayidx11 = getelementptr inbounds i16, i16* %10, i64 %idxprom10, !dbg !6937
  store i16 %conv8, i16* %arrayidx11, align 2, !dbg !6938
  %11 = load i32, i32* %l, align 4, !dbg !6939
  %add12 = add nsw i32 %11, 3, !dbg !6940
  %idxprom13 = sext i32 %add12 to i64, !dbg !6941
  %12 = load i16*, i16** %dst.addr, align 8, !dbg !6941
  %arrayidx14 = getelementptr inbounds i16, i16* %12, i64 %idxprom13, !dbg !6941
  %13 = load i16, i16* %arrayidx14, align 2, !dbg !6941
  %conv15 = zext i16 %13 to i32, !dbg !6941
  %conv16 = sitofp i32 %conv15 to float, !dbg !6941
  %14 = load float, float* %f, align 4, !dbg !6942
  %mul17 = fmul float %conv16, %14, !dbg !6943
  %15 = load float, float* %V, align 4, !dbg !6944
  %add18 = fadd float %mul17, %15, !dbg !6945
  %conv19 = fptoui float %add18 to i16, !dbg !6941
  %16 = load i32, i32* %l, align 4, !dbg !6946
  %add20 = add nsw i32 %16, 3, !dbg !6947
  %idxprom21 = sext i32 %add20 to i64, !dbg !6948
  %17 = load i16*, i16** %dst.addr, align 8, !dbg !6948
  %arrayidx22 = getelementptr inbounds i16, i16* %17, i64 %idxprom21, !dbg !6948
  store i16 %conv19, i16* %arrayidx22, align 2, !dbg !6949
  %18 = load i32, i32* %l, align 4, !dbg !6950
  %sub23 = sub nsw i32 0, %18, !dbg !6951
  %sub24 = sub nsw i32 %sub23, 3, !dbg !6952
  %idxprom25 = sext i32 %sub24 to i64, !dbg !6953
  %19 = load i16*, i16** %dst.addr, align 8, !dbg !6953
  %arrayidx26 = getelementptr inbounds i16, i16* %19, i64 %idxprom25, !dbg !6953
  %20 = load i16, i16* %arrayidx26, align 2, !dbg !6953
  %conv27 = zext i16 %20 to i32, !dbg !6953
  %conv28 = sitofp i32 %conv27 to float, !dbg !6953
  %21 = load float, float* %f, align 4, !dbg !6954
  %mul29 = fmul float %conv28, %21, !dbg !6955
  %22 = load float, float* %V, align 4, !dbg !6956
  %add30 = fadd float %mul29, %22, !dbg !6957
  %conv31 = fptoui float %add30 to i16, !dbg !6953
  %23 = load i32, i32* %l, align 4, !dbg !6958
  %sub32 = sub nsw i32 0, %23, !dbg !6959
  %sub33 = sub nsw i32 %sub32, 3, !dbg !6960
  %idxprom34 = sext i32 %sub33 to i64, !dbg !6961
  %24 = load i16*, i16** %dst.addr, align 8, !dbg !6961
  %arrayidx35 = getelementptr inbounds i16, i16* %24, i64 %idxprom34, !dbg !6961
  store i16 %conv31, i16* %arrayidx35, align 2, !dbg !6962
  %25 = load i32, i32* %l, align 4, !dbg !6963
  %sub36 = sub nsw i32 0, %25, !dbg !6964
  %add37 = add nsw i32 %sub36, 3, !dbg !6965
  %idxprom38 = sext i32 %add37 to i64, !dbg !6966
  %26 = load i16*, i16** %dst.addr, align 8, !dbg !6966
  %arrayidx39 = getelementptr inbounds i16, i16* %26, i64 %idxprom38, !dbg !6966
  %27 = load i16, i16* %arrayidx39, align 2, !dbg !6966
  %conv40 = zext i16 %27 to i32, !dbg !6966
  %conv41 = sitofp i32 %conv40 to float, !dbg !6966
  %28 = load float, float* %f, align 4, !dbg !6967
  %mul42 = fmul float %conv41, %28, !dbg !6968
  %29 = load float, float* %V, align 4, !dbg !6969
  %add43 = fadd float %mul42, %29, !dbg !6970
  %conv44 = fptoui float %add43 to i16, !dbg !6966
  %30 = load i32, i32* %l, align 4, !dbg !6971
  %sub45 = sub nsw i32 0, %30, !dbg !6972
  %add46 = add nsw i32 %sub45, 3, !dbg !6973
  %idxprom47 = sext i32 %add46 to i64, !dbg !6974
  %31 = load i16*, i16** %dst.addr, align 8, !dbg !6974
  %arrayidx48 = getelementptr inbounds i16, i16* %31, i64 %idxprom47, !dbg !6974
  store i16 %conv44, i16* %arrayidx48, align 2, !dbg !6975
  %32 = load i32, i32* %L.addr, align 4, !dbg !6976
  %33 = load i32, i32* %l, align 4, !dbg !6977
  %add49 = add nsw i32 %33, %32, !dbg !6977
  store i32 %add49, i32* %l, align 4, !dbg !6977
  %34 = load i32, i32* %l, align 4, !dbg !6978
  %sub50 = sub nsw i32 %34, 3, !dbg !6979
  %idxprom51 = sext i32 %sub50 to i64, !dbg !6980
  %35 = load i16*, i16** %dst.addr, align 8, !dbg !6980
  %arrayidx52 = getelementptr inbounds i16, i16* %35, i64 %idxprom51, !dbg !6980
  %36 = load i16, i16* %arrayidx52, align 2, !dbg !6980
  %conv53 = zext i16 %36 to i32, !dbg !6980
  %conv54 = sitofp i32 %conv53 to float, !dbg !6980
  %37 = load float, float* %f, align 4, !dbg !6981
  %mul55 = fmul float %conv54, %37, !dbg !6982
  %38 = load float, float* %V, align 4, !dbg !6983
  %add56 = fadd float %mul55, %38, !dbg !6984
  %conv57 = fptoui float %add56 to i16, !dbg !6980
  %39 = load i32, i32* %l, align 4, !dbg !6985
  %sub58 = sub nsw i32 %39, 3, !dbg !6986
  %idxprom59 = sext i32 %sub58 to i64, !dbg !6987
  %40 = load i16*, i16** %dst.addr, align 8, !dbg !6987
  %arrayidx60 = getelementptr inbounds i16, i16* %40, i64 %idxprom59, !dbg !6987
  store i16 %conv57, i16* %arrayidx60, align 2, !dbg !6988
  %41 = load i32, i32* %l, align 4, !dbg !6989
  %add61 = add nsw i32 %41, 3, !dbg !6990
  %idxprom62 = sext i32 %add61 to i64, !dbg !6991
  %42 = load i16*, i16** %dst.addr, align 8, !dbg !6991
  %arrayidx63 = getelementptr inbounds i16, i16* %42, i64 %idxprom62, !dbg !6991
  %43 = load i16, i16* %arrayidx63, align 2, !dbg !6991
  %conv64 = zext i16 %43 to i32, !dbg !6991
  %conv65 = sitofp i32 %conv64 to float, !dbg !6991
  %44 = load float, float* %f, align 4, !dbg !6992
  %mul66 = fmul float %conv65, %44, !dbg !6993
  %45 = load float, float* %V, align 4, !dbg !6994
  %add67 = fadd float %mul66, %45, !dbg !6995
  %conv68 = fptoui float %add67 to i16, !dbg !6991
  %46 = load i32, i32* %l, align 4, !dbg !6996
  %add69 = add nsw i32 %46, 3, !dbg !6997
  %idxprom70 = sext i32 %add69 to i64, !dbg !6998
  %47 = load i16*, i16** %dst.addr, align 8, !dbg !6998
  %arrayidx71 = getelementptr inbounds i16, i16* %47, i64 %idxprom70, !dbg !6998
  store i16 %conv68, i16* %arrayidx71, align 2, !dbg !6999
  %48 = load i32, i32* %l, align 4, !dbg !7000
  %sub72 = sub nsw i32 %48, 2, !dbg !7001
  %idxprom73 = sext i32 %sub72 to i64, !dbg !7002
  %49 = load i16*, i16** %dst.addr, align 8, !dbg !7002
  %arrayidx74 = getelementptr inbounds i16, i16* %49, i64 %idxprom73, !dbg !7002
  %50 = load i16, i16* %arrayidx74, align 2, !dbg !7002
  %conv75 = zext i16 %50 to i32, !dbg !7002
  %conv76 = sitofp i32 %conv75 to float, !dbg !7002
  %51 = load float, float* %f, align 4, !dbg !7003
  %mul77 = fmul float %conv76, %51, !dbg !7004
  %52 = load float, float* %V, align 4, !dbg !7005
  %add78 = fadd float %mul77, %52, !dbg !7006
  %conv79 = fptoui float %add78 to i16, !dbg !7002
  %53 = load i32, i32* %l, align 4, !dbg !7007
  %sub80 = sub nsw i32 %53, 2, !dbg !7008
  %idxprom81 = sext i32 %sub80 to i64, !dbg !7009
  %54 = load i16*, i16** %dst.addr, align 8, !dbg !7009
  %arrayidx82 = getelementptr inbounds i16, i16* %54, i64 %idxprom81, !dbg !7009
  store i16 %conv79, i16* %arrayidx82, align 2, !dbg !7010
  %55 = load i32, i32* %l, align 4, !dbg !7011
  %add83 = add nsw i32 %55, 2, !dbg !7012
  %idxprom84 = sext i32 %add83 to i64, !dbg !7013
  %56 = load i16*, i16** %dst.addr, align 8, !dbg !7013
  %arrayidx85 = getelementptr inbounds i16, i16* %56, i64 %idxprom84, !dbg !7013
  %57 = load i16, i16* %arrayidx85, align 2, !dbg !7013
  %conv86 = zext i16 %57 to i32, !dbg !7013
  %conv87 = sitofp i32 %conv86 to float, !dbg !7013
  %58 = load float, float* %f, align 4, !dbg !7014
  %mul88 = fmul float %conv87, %58, !dbg !7015
  %59 = load float, float* %V, align 4, !dbg !7016
  %add89 = fadd float %mul88, %59, !dbg !7017
  %conv90 = fptoui float %add89 to i16, !dbg !7013
  %60 = load i32, i32* %l, align 4, !dbg !7018
  %add91 = add nsw i32 %60, 2, !dbg !7019
  %idxprom92 = sext i32 %add91 to i64, !dbg !7020
  %61 = load i16*, i16** %dst.addr, align 8, !dbg !7020
  %arrayidx93 = getelementptr inbounds i16, i16* %61, i64 %idxprom92, !dbg !7020
  store i16 %conv90, i16* %arrayidx93, align 2, !dbg !7021
  %62 = load i32, i32* %l, align 4, !dbg !7022
  %sub94 = sub nsw i32 0, %62, !dbg !7023
  %sub95 = sub nsw i32 %sub94, 3, !dbg !7024
  %idxprom96 = sext i32 %sub95 to i64, !dbg !7025
  %63 = load i16*, i16** %dst.addr, align 8, !dbg !7025
  %arrayidx97 = getelementptr inbounds i16, i16* %63, i64 %idxprom96, !dbg !7025
  %64 = load i16, i16* %arrayidx97, align 2, !dbg !7025
  %conv98 = zext i16 %64 to i32, !dbg !7025
  %conv99 = sitofp i32 %conv98 to float, !dbg !7025
  %65 = load float, float* %f, align 4, !dbg !7026
  %mul100 = fmul float %conv99, %65, !dbg !7027
  %66 = load float, float* %V, align 4, !dbg !7028
  %add101 = fadd float %mul100, %66, !dbg !7029
  %conv102 = fptoui float %add101 to i16, !dbg !7025
  %67 = load i32, i32* %l, align 4, !dbg !7030
  %sub103 = sub nsw i32 0, %67, !dbg !7031
  %sub104 = sub nsw i32 %sub103, 3, !dbg !7032
  %idxprom105 = sext i32 %sub104 to i64, !dbg !7033
  %68 = load i16*, i16** %dst.addr, align 8, !dbg !7033
  %arrayidx106 = getelementptr inbounds i16, i16* %68, i64 %idxprom105, !dbg !7033
  store i16 %conv102, i16* %arrayidx106, align 2, !dbg !7034
  %69 = load i32, i32* %l, align 4, !dbg !7035
  %sub107 = sub nsw i32 0, %69, !dbg !7036
  %add108 = add nsw i32 %sub107, 3, !dbg !7037
  %idxprom109 = sext i32 %add108 to i64, !dbg !7038
  %70 = load i16*, i16** %dst.addr, align 8, !dbg !7038
  %arrayidx110 = getelementptr inbounds i16, i16* %70, i64 %idxprom109, !dbg !7038
  %71 = load i16, i16* %arrayidx110, align 2, !dbg !7038
  %conv111 = zext i16 %71 to i32, !dbg !7038
  %conv112 = sitofp i32 %conv111 to float, !dbg !7038
  %72 = load float, float* %f, align 4, !dbg !7039
  %mul113 = fmul float %conv112, %72, !dbg !7040
  %73 = load float, float* %V, align 4, !dbg !7041
  %add114 = fadd float %mul113, %73, !dbg !7042
  %conv115 = fptoui float %add114 to i16, !dbg !7038
  %74 = load i32, i32* %l, align 4, !dbg !7043
  %sub116 = sub nsw i32 0, %74, !dbg !7044
  %add117 = add nsw i32 %sub116, 3, !dbg !7045
  %idxprom118 = sext i32 %add117 to i64, !dbg !7046
  %75 = load i16*, i16** %dst.addr, align 8, !dbg !7046
  %arrayidx119 = getelementptr inbounds i16, i16* %75, i64 %idxprom118, !dbg !7046
  store i16 %conv115, i16* %arrayidx119, align 2, !dbg !7047
  %76 = load i32, i32* %l, align 4, !dbg !7048
  %sub120 = sub nsw i32 0, %76, !dbg !7049
  %sub121 = sub nsw i32 %sub120, 2, !dbg !7050
  %idxprom122 = sext i32 %sub121 to i64, !dbg !7051
  %77 = load i16*, i16** %dst.addr, align 8, !dbg !7051
  %arrayidx123 = getelementptr inbounds i16, i16* %77, i64 %idxprom122, !dbg !7051
  %78 = load i16, i16* %arrayidx123, align 2, !dbg !7051
  %conv124 = zext i16 %78 to i32, !dbg !7051
  %conv125 = sitofp i32 %conv124 to float, !dbg !7051
  %79 = load float, float* %f, align 4, !dbg !7052
  %mul126 = fmul float %conv125, %79, !dbg !7053
  %80 = load float, float* %V, align 4, !dbg !7054
  %add127 = fadd float %mul126, %80, !dbg !7055
  %conv128 = fptoui float %add127 to i16, !dbg !7051
  %81 = load i32, i32* %l, align 4, !dbg !7056
  %sub129 = sub nsw i32 0, %81, !dbg !7057
  %sub130 = sub nsw i32 %sub129, 2, !dbg !7058
  %idxprom131 = sext i32 %sub130 to i64, !dbg !7059
  %82 = load i16*, i16** %dst.addr, align 8, !dbg !7059
  %arrayidx132 = getelementptr inbounds i16, i16* %82, i64 %idxprom131, !dbg !7059
  store i16 %conv128, i16* %arrayidx132, align 2, !dbg !7060
  %83 = load i32, i32* %l, align 4, !dbg !7061
  %sub133 = sub nsw i32 0, %83, !dbg !7062
  %add134 = add nsw i32 %sub133, 2, !dbg !7063
  %idxprom135 = sext i32 %add134 to i64, !dbg !7064
  %84 = load i16*, i16** %dst.addr, align 8, !dbg !7064
  %arrayidx136 = getelementptr inbounds i16, i16* %84, i64 %idxprom135, !dbg !7064
  %85 = load i16, i16* %arrayidx136, align 2, !dbg !7064
  %conv137 = zext i16 %85 to i32, !dbg !7064
  %conv138 = sitofp i32 %conv137 to float, !dbg !7064
  %86 = load float, float* %f, align 4, !dbg !7065
  %mul139 = fmul float %conv138, %86, !dbg !7066
  %87 = load float, float* %V, align 4, !dbg !7067
  %add140 = fadd float %mul139, %87, !dbg !7068
  %conv141 = fptoui float %add140 to i16, !dbg !7064
  %88 = load i32, i32* %l, align 4, !dbg !7069
  %sub142 = sub nsw i32 0, %88, !dbg !7070
  %add143 = add nsw i32 %sub142, 2, !dbg !7071
  %idxprom144 = sext i32 %add143 to i64, !dbg !7072
  %89 = load i16*, i16** %dst.addr, align 8, !dbg !7072
  %arrayidx145 = getelementptr inbounds i16, i16* %89, i64 %idxprom144, !dbg !7072
  store i16 %conv141, i16* %arrayidx145, align 2, !dbg !7073
  ret void, !dbg !7074
}

; Function Attrs: nounwind uwtable
define internal void @draw_htext16(%struct.AVFrame* %out, i32 %x, i32 %y, float %o1, float %o2, i8* %txt, i16* %color) #1 !dbg !7075 {
entry:
  %out.addr = alloca %struct.AVFrame*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %o1.addr = alloca float, align 4
  %o2.addr = alloca float, align 4
  %txt.addr = alloca i8*, align 8
  %color.addr = alloca i16*, align 8
  %font = alloca i8*, align 8
  %font_height = alloca i32, align 4
  %i = alloca i32, align 4
  %plane = alloca i32, align 4
  %char_y = alloca i32, align 4
  %mask = alloca i32, align 4
  %v = alloca i32, align 4
  %p = alloca i16*, align 8
  store %struct.AVFrame* %out, %struct.AVFrame** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out.addr, metadata !7078, metadata !909), !dbg !7079
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7080, metadata !909), !dbg !7081
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !7082, metadata !909), !dbg !7083
  store float %o1, float* %o1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %o1.addr, metadata !7084, metadata !909), !dbg !7085
  store float %o2, float* %o2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %o2.addr, metadata !7086, metadata !909), !dbg !7087
  store i8* %txt, i8** %txt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %txt.addr, metadata !7088, metadata !909), !dbg !7089
  store i16* %color, i16** %color.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %color.addr, metadata !7090, metadata !909), !dbg !7091
  call void @llvm.dbg.declare(metadata i8** %font, metadata !7092, metadata !909), !dbg !7093
  call void @llvm.dbg.declare(metadata i32* %font_height, metadata !7094, metadata !909), !dbg !7095
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7096, metadata !909), !dbg !7097
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !7098, metadata !909), !dbg !7099
  store i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @avpriv_cga_font, i32 0, i32 0), i8** %font, align 8, !dbg !7100
  store i32 8, i32* %font_height, align 4, !dbg !7101
  store i32 0, i32* %plane, align 4, !dbg !7102
  br label %for.cond, !dbg !7104

for.cond:                                         ; preds = %for.inc51, %entry
  %0 = load i32, i32* %plane, align 4, !dbg !7105
  %cmp = icmp slt i32 %0, 4, !dbg !7108
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7109

land.rhs:                                         ; preds = %for.cond
  %1 = load i32, i32* %plane, align 4, !dbg !7110
  %idxprom = sext i32 %1 to i64, !dbg !7112
  %2 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !7112
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %2, i32 0, i32 0, !dbg !7113
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !7112
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !7112
  %tobool = icmp ne i8* %3, null, !dbg !7114
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ]
  br i1 %4, label %for.body, label %for.end53, !dbg !7115

for.body:                                         ; preds = %land.end
  store i32 0, i32* %i, align 4, !dbg !7117
  br label %for.cond1, !dbg !7120

for.cond1:                                        ; preds = %for.inc49, %for.body
  %5 = load i32, i32* %i, align 4, !dbg !7121
  %idxprom2 = sext i32 %5 to i64, !dbg !7124
  %6 = load i8*, i8** %txt.addr, align 8, !dbg !7124
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 %idxprom2, !dbg !7124
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !7124
  %tobool4 = icmp ne i8 %7, 0, !dbg !7125
  br i1 %tobool4, label %for.body5, label %for.end50, !dbg !7125

for.body5:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %char_y, metadata !7126, metadata !909), !dbg !7128
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !7129, metadata !909), !dbg !7130
  call void @llvm.dbg.declare(metadata i32* %v, metadata !7131, metadata !909), !dbg !7132
  %8 = load i32, i32* %plane, align 4, !dbg !7133
  %idxprom6 = sext i32 %8 to i64, !dbg !7134
  %9 = load i16*, i16** %color.addr, align 8, !dbg !7134
  %arrayidx7 = getelementptr inbounds i16, i16* %9, i64 %idxprom6, !dbg !7134
  %10 = load i16, i16* %arrayidx7, align 2, !dbg !7134
  %conv = zext i16 %10 to i32, !dbg !7134
  store i32 %conv, i32* %v, align 4, !dbg !7132
  call void @llvm.dbg.declare(metadata i16** %p, metadata !7135, metadata !909), !dbg !7136
  %11 = load i32, i32* %plane, align 4, !dbg !7137
  %idxprom8 = sext i32 %11 to i64, !dbg !7138
  %12 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !7138
  %data9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 0, !dbg !7139
  %arrayidx10 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data9, i64 0, i64 %idxprom8, !dbg !7138
  %13 = load i8*, i8** %arrayidx10, align 8, !dbg !7138
  %14 = load i32, i32* %y.addr, align 4, !dbg !7140
  %15 = load i32, i32* %plane, align 4, !dbg !7141
  %idxprom11 = sext i32 %15 to i64, !dbg !7142
  %16 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !7142
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 1, !dbg !7143
  %arrayidx12 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom11, !dbg !7142
  %17 = load i32, i32* %arrayidx12, align 4, !dbg !7142
  %mul = mul nsw i32 %14, %17, !dbg !7144
  %idx.ext = sext i32 %mul to i64, !dbg !7145
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !7145
  %18 = bitcast i8* %add.ptr to i16*, !dbg !7146
  %19 = load i32, i32* %x.addr, align 4, !dbg !7147
  %20 = load i32, i32* %i, align 4, !dbg !7148
  %mul13 = mul nsw i32 %20, 8, !dbg !7149
  %add = add nsw i32 %19, %mul13, !dbg !7150
  %idx.ext14 = sext i32 %add to i64, !dbg !7151
  %add.ptr15 = getelementptr inbounds i16, i16* %18, i64 %idx.ext14, !dbg !7151
  store i16* %add.ptr15, i16** %p, align 8, !dbg !7136
  %21 = load i32, i32* %font_height, align 4, !dbg !7152
  %sub = sub nsw i32 %21, 1, !dbg !7154
  store i32 %sub, i32* %char_y, align 4, !dbg !7155
  br label %for.cond16, !dbg !7156

for.cond16:                                       ; preds = %for.inc47, %for.body5
  %22 = load i32, i32* %char_y, align 4, !dbg !7157
  %cmp17 = icmp sge i32 %22, 0, !dbg !7160
  br i1 %cmp17, label %for.body19, label %for.end48, !dbg !7161

for.body19:                                       ; preds = %for.cond16
  store i32 128, i32* %mask, align 4, !dbg !7162
  br label %for.cond20, !dbg !7165

for.cond20:                                       ; preds = %for.inc, %for.body19
  %23 = load i32, i32* %mask, align 4, !dbg !7166
  %tobool21 = icmp ne i32 %23, 0, !dbg !7169
  br i1 %tobool21, label %for.body22, label %for.end, !dbg !7169

for.body22:                                       ; preds = %for.cond20
  %24 = load i32, i32* %i, align 4, !dbg !7170
  %idxprom23 = sext i32 %24 to i64, !dbg !7173
  %25 = load i8*, i8** %txt.addr, align 8, !dbg !7173
  %arrayidx24 = getelementptr inbounds i8, i8* %25, i64 %idxprom23, !dbg !7173
  %26 = load i8, i8* %arrayidx24, align 1, !dbg !7173
  %conv25 = sext i8 %26 to i32, !dbg !7173
  %27 = load i32, i32* %font_height, align 4, !dbg !7174
  %mul26 = mul nsw i32 %conv25, %27, !dbg !7175
  %28 = load i32, i32* %char_y, align 4, !dbg !7176
  %add27 = add nsw i32 %mul26, %28, !dbg !7177
  %idxprom28 = sext i32 %add27 to i64, !dbg !7178
  %29 = load i8*, i8** %font, align 8, !dbg !7178
  %arrayidx29 = getelementptr inbounds i8, i8* %29, i64 %idxprom28, !dbg !7178
  %30 = load i8, i8* %arrayidx29, align 1, !dbg !7178
  %conv30 = zext i8 %30 to i32, !dbg !7178
  %31 = load i32, i32* %mask, align 4, !dbg !7179
  %and = and i32 %conv30, %31, !dbg !7180
  %tobool31 = icmp ne i32 %and, 0, !dbg !7180
  br i1 %tobool31, label %if.then, label %if.end, !dbg !7181

if.then:                                          ; preds = %for.body22
  %32 = load i16*, i16** %p, align 8, !dbg !7182
  %arrayidx32 = getelementptr inbounds i16, i16* %32, i64 0, !dbg !7182
  %33 = load i16, i16* %arrayidx32, align 2, !dbg !7182
  %conv33 = zext i16 %33 to i32, !dbg !7182
  %conv34 = sitofp i32 %conv33 to float, !dbg !7182
  %34 = load float, float* %o2.addr, align 4, !dbg !7183
  %mul35 = fmul float %conv34, %34, !dbg !7184
  %35 = load i32, i32* %v, align 4, !dbg !7185
  %conv36 = sitofp i32 %35 to float, !dbg !7185
  %36 = load float, float* %o1.addr, align 4, !dbg !7186
  %mul37 = fmul float %conv36, %36, !dbg !7187
  %add38 = fadd float %mul35, %mul37, !dbg !7188
  %conv39 = fptoui float %add38 to i16, !dbg !7182
  %37 = load i16*, i16** %p, align 8, !dbg !7189
  %arrayidx40 = getelementptr inbounds i16, i16* %37, i64 0, !dbg !7189
  store i16 %conv39, i16* %arrayidx40, align 2, !dbg !7190
  br label %if.end, !dbg !7189

if.end:                                           ; preds = %if.then, %for.body22
  %38 = load i16*, i16** %p, align 8, !dbg !7191
  %incdec.ptr = getelementptr inbounds i16, i16* %38, i32 1, !dbg !7191
  store i16* %incdec.ptr, i16** %p, align 8, !dbg !7191
  br label %for.inc, !dbg !7192

for.inc:                                          ; preds = %if.end
  %39 = load i32, i32* %mask, align 4, !dbg !7193
  %shr = ashr i32 %39, 1, !dbg !7193
  store i32 %shr, i32* %mask, align 4, !dbg !7193
  br label %for.cond20, !dbg !7195, !llvm.loop !7196

for.end:                                          ; preds = %for.cond20
  %40 = load i32, i32* %plane, align 4, !dbg !7198
  %idxprom41 = sext i32 %40 to i64, !dbg !7199
  %41 = load %struct.AVFrame*, %struct.AVFrame** %out.addr, align 8, !dbg !7199
  %linesize42 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %41, i32 0, i32 1, !dbg !7200
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize42, i64 0, i64 %idxprom41, !dbg !7199
  %42 = load i32, i32* %arrayidx43, align 4, !dbg !7199
  %div = sdiv i32 %42, 2, !dbg !7201
  %sub44 = sub nsw i32 %div, 8, !dbg !7202
  %43 = load i16*, i16** %p, align 8, !dbg !7203
  %idx.ext45 = sext i32 %sub44 to i64, !dbg !7203
  %add.ptr46 = getelementptr inbounds i16, i16* %43, i64 %idx.ext45, !dbg !7203
  store i16* %add.ptr46, i16** %p, align 8, !dbg !7203
  br label %for.inc47, !dbg !7204

for.inc47:                                        ; preds = %for.end
  %44 = load i32, i32* %char_y, align 4, !dbg !7205
  %dec = add nsw i32 %44, -1, !dbg !7205
  store i32 %dec, i32* %char_y, align 4, !dbg !7205
  br label %for.cond16, !dbg !7207, !llvm.loop !7208

for.end48:                                        ; preds = %for.cond16
  br label %for.inc49, !dbg !7210

for.inc49:                                        ; preds = %for.end48
  %45 = load i32, i32* %i, align 4, !dbg !7211
  %inc = add nsw i32 %45, 1, !dbg !7211
  store i32 %inc, i32* %i, align 4, !dbg !7211
  br label %for.cond1, !dbg !7213, !llvm.loop !7214

for.end50:                                        ; preds = %for.cond1
  br label %for.inc51, !dbg !7216

for.inc51:                                        ; preds = %for.end50
  %46 = load i32, i32* %plane, align 4, !dbg !7217
  %inc52 = add nsw i32 %46, 1, !dbg !7217
  store i32 %inc52, i32* %plane, align 4, !dbg !7217
  br label %for.cond, !dbg !7219, !llvm.loop !7220

for.end53:                                        ; preds = %land.end
  ret void, !dbg !7222
}

; Function Attrs: nounwind uwtable
define internal i32 @config_output(%struct.AVFilterLink* %outlink) #1 !dbg !7223 {
entry:
  %retval = alloca i32, align 4
  %outlink.addr = alloca %struct.AVFilterLink*, align 8
  %s = alloca %struct.VectorscopeContext*, align 8
  %i = alloca i32, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.AVFilterLink* %outlink, %struct.AVFilterLink** %outlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink.addr, metadata !7224, metadata !909), !dbg !7225
  call void @llvm.dbg.declare(metadata %struct.VectorscopeContext** %s, metadata !7226, metadata !909), !dbg !7227
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !7228
  %src = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 0, !dbg !7229
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src, align 8, !dbg !7229
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %1, i32 0, i32 9, !dbg !7230
  %2 = load i8*, i8** %priv, align 8, !dbg !7230
  %3 = bitcast i8* %2 to %struct.VectorscopeContext*, !dbg !7228
  store %struct.VectorscopeContext* %3, %struct.VectorscopeContext** %s, align 8, !dbg !7227
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7231, metadata !909), !dbg !7232
  %4 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7233
  %fintensity = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %4, i32 0, i32 3, !dbg !7234
  %5 = load float, float* %fintensity, align 8, !dbg !7234
  %6 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7235
  %size = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %6, i32 0, i32 13, !dbg !7236
  %7 = load i32, i32* %size, align 4, !dbg !7236
  %sub = sub nsw i32 %7, 1, !dbg !7237
  %conv = sitofp i32 %sub to float, !dbg !7238
  %mul = fmul float %5, %conv, !dbg !7239
  %conv1 = fptosi float %mul to i32, !dbg !7233
  %8 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7240
  %intensity = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %8, i32 0, i32 2, !dbg !7241
  store i32 %conv1, i32* %intensity, align 4, !dbg !7242
  %9 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7243
  %size2 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %9, i32 0, i32 13, !dbg !7244
  %10 = load i32, i32* %size2, align 4, !dbg !7244
  %11 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !7245
  %w = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %11, i32 0, i32 5, !dbg !7246
  store i32 %10, i32* %w, align 4, !dbg !7247
  %12 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !7248
  %h = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %12, i32 0, i32 6, !dbg !7249
  store i32 %10, i32* %h, align 8, !dbg !7250
  %13 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !7251
  %sample_aspect_ratio = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %13, i32 0, i32 7, !dbg !7252
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !7253
  store i32 1, i32* %num, align 4, !dbg !7253
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !7253
  store i32 1, i32* %den, align 4, !dbg !7253
  %14 = bitcast %struct.AVRational* %sample_aspect_ratio to i8*, !dbg !7254
  %15 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !7254
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 4, i1 false), !dbg !7254
  %16 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7255
  %size3 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %16, i32 0, i32 13, !dbg !7256
  %17 = load i32, i32* %size3, align 4, !dbg !7256
  %conv4 = sext i32 %17 to i64, !dbg !7255
  %18 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7257
  %size5 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %18, i32 0, i32 13, !dbg !7258
  %19 = load i32, i32* %size5, align 4, !dbg !7258
  %conv6 = sext i32 %19 to i64, !dbg !7257
  %call = call noalias i8* @av_calloc(i64 %conv4, i64 %conv6), !dbg !7259
  %20 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7260
  %peak_memory = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %20, i32 0, i32 27, !dbg !7261
  store i8* %call, i8** %peak_memory, align 8, !dbg !7262
  %21 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7263
  %peak_memory7 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %21, i32 0, i32 27, !dbg !7265
  %22 = load i8*, i8** %peak_memory7, align 8, !dbg !7265
  %tobool = icmp ne i8* %22, null, !dbg !7263
  br i1 %tobool, label %if.end, label %if.then, !dbg !7266

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7267
  br label %return, !dbg !7267

if.end:                                           ; preds = %entry
  %23 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7268
  %size8 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %23, i32 0, i32 13, !dbg !7269
  %24 = load i32, i32* %size8, align 4, !dbg !7269
  %conv9 = sext i32 %24 to i64, !dbg !7268
  %call10 = call noalias i8* @av_calloc(i64 %conv9, i64 8), !dbg !7270
  %25 = bitcast i8* %call10 to i8**, !dbg !7270
  %26 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7271
  %peak = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %26, i32 0, i32 28, !dbg !7272
  store i8** %25, i8*** %peak, align 8, !dbg !7273
  %27 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7274
  %peak11 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %27, i32 0, i32 28, !dbg !7276
  %28 = load i8**, i8*** %peak11, align 8, !dbg !7276
  %tobool12 = icmp ne i8** %28, null, !dbg !7274
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !7277

if.then13:                                        ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !7278
  br label %return, !dbg !7278

if.end14:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !7279
  br label %for.cond, !dbg !7281

for.cond:                                         ; preds = %for.inc, %if.end14
  %29 = load i32, i32* %i, align 4, !dbg !7282
  %30 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7285
  %size15 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %30, i32 0, i32 13, !dbg !7286
  %31 = load i32, i32* %size15, align 4, !dbg !7286
  %cmp = icmp slt i32 %29, %31, !dbg !7287
  br i1 %cmp, label %for.body, label %for.end, !dbg !7288

for.body:                                         ; preds = %for.cond
  %32 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7289
  %peak_memory17 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %32, i32 0, i32 27, !dbg !7290
  %33 = load i8*, i8** %peak_memory17, align 8, !dbg !7290
  %34 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7291
  %size18 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %34, i32 0, i32 13, !dbg !7292
  %35 = load i32, i32* %size18, align 4, !dbg !7292
  %36 = load i32, i32* %i, align 4, !dbg !7293
  %mul19 = mul nsw i32 %35, %36, !dbg !7294
  %idx.ext = sext i32 %mul19 to i64, !dbg !7295
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %idx.ext, !dbg !7295
  %37 = load i32, i32* %i, align 4, !dbg !7296
  %idxprom = sext i32 %37 to i64, !dbg !7297
  %38 = load %struct.VectorscopeContext*, %struct.VectorscopeContext** %s, align 8, !dbg !7297
  %peak20 = getelementptr inbounds %struct.VectorscopeContext, %struct.VectorscopeContext* %38, i32 0, i32 28, !dbg !7298
  %39 = load i8**, i8*** %peak20, align 8, !dbg !7298
  %arrayidx = getelementptr inbounds i8*, i8** %39, i64 %idxprom, !dbg !7297
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !7299
  br label %for.inc, !dbg !7297

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %i, align 4, !dbg !7300
  %inc = add nsw i32 %40, 1, !dbg !7300
  store i32 %inc, i32* %i, align 4, !dbg !7300
  br label %for.cond, !dbg !7302, !llvm.loop !7303

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7305
  br label %return, !dbg !7305

return:                                           ; preds = %for.end, %if.then13, %if.then
  %41 = load i32, i32* %retval, align 4, !dbg !7306
  ret i32 %41, !dbg !7306
}

declare noalias i8* @av_calloc(i64, i64) #3

declare i8* @av_default_item_name(i8*) #3

declare void @av_freep(i8*) #3

declare i32 @ff_formats_ref(%struct.AVFilterFormats*, %struct.AVFilterFormats**) #3

declare %struct.AVFilterFormats* @ff_make_format_list(i32*) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!904, !905}
!llvm.ident = !{!906}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !789, globals: !807)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavfilter--vf_vectorscope.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !23, !47, !54, !72, !96, !115, !125, !147, !168, !580, !590}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !14)
!14 = !{!15, !16, !17, !18, !19, !20, !21, !22}
!15 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!16 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!17 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!18 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!19 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!20 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!21 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!22 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !24, line: 48, size: 32, align: 32, elements: !25)
!24 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!26 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!27 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!28 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!29 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!30 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!31 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!32 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!33 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!34 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!35 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!36 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!37 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!38 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!39 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!40 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!41 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!42 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!43 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!44 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!45 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!46 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !48, line: 516, size: 32, align: 32, elements: !49)
!48 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!49 = !{!50, !51, !52, !53}
!50 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!51 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!52 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!53 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !48, line: 440, size: 32, align: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!56 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!57 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!58 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!59 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!60 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!61 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!62 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!63 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!64 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!65 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!66 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!67 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!68 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!69 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!70 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!71 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !48, line: 464, size: 32, align: 32, elements: !73)
!73 = !{!74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95}
!74 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!75 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!76 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!77 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!78 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!79 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!80 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!81 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!82 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!83 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!84 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!85 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!86 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!87 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!88 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!89 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!90 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!91 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!92 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!93 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!94 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!95 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !48, line: 493, size: 32, align: 32, elements: !97)
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114}
!98 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!99 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!100 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!101 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!102 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!103 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!104 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!105 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!106 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!107 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!108 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!109 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!110 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!111 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!112 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!113 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!114 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !48, line: 538, size: 32, align: 32, elements: !116)
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124}
!117 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!118 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!119 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!120 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!121 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!122 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!123 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!124 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !126, line: 221, size: 32, align: 32, elements: !127)
!126 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146}
!128 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!129 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!130 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!131 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!132 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!133 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!134 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!135 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!136 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!137 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!138 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!139 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!140 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!141 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!142 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!143 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!144 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!145 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!146 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !148, line: 29, size: 32, align: 32, elements: !149)
!148 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!149 = !{!150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167}
!150 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!151 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!152 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!153 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!154 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!155 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!156 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!157 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!158 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!159 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!160 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!161 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!162 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!163 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!164 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!165 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!166 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!167 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !170, file: !169, line: 503, size: 32, align: 32, elements: !576)
!169 = !DIFile(filename: "libavfilter/avfilter.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterLink", file: !169, line: 439, size: 493504, align: 64, elements: !171)
!171 = !{!172, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !537, !538, !539, !540, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !170, file: !169, line: 440, baseType: !173, size: 64, align: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64, align: 64)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterContext", file: !169, line: 67, baseType: !175)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterContext", file: !169, line: 338, size: 1344, align: 64, elements: !176)
!176 = !{!177, !264, !437, !438, !440, !442, !444, !445, !446, !447, !448, !488, !489, !495, !504, !505, !506, !508, !509, !510, !511, !512}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !175, file: !169, line: 339, baseType: !178, size: 64, align: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !148, line: 143, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !148, line: 67, size: 640, align: 64, elements: !182)
!182 = !{!183, !187, !192, !223, !224, !225, !226, !230, !236, !238, !242}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !181, file: !148, line: 72, baseType: !184, size: 64, align: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !181, file: !148, line: 78, baseType: !188, size: 64, align: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64, align: 64)
!189 = !DISubroutineType(types: !190)
!190 = !{!184, !191}
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !181, file: !148, line: 85, baseType: !193, size: 64, align: 64, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64, align: 64)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !126, line: 246, size: 512, align: 64, elements: !196)
!196 = !{!197, !198, !199, !201, !202, !219, !220, !221, !222}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !126, line: 247, baseType: !184, size: 64, align: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !195, file: !126, line: 253, baseType: !184, size: 64, align: 64, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !195, file: !126, line: 259, baseType: !200, size: 32, align: 32, offset: 128)
!200 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !195, file: !126, line: 260, baseType: !125, size: 32, align: 32, offset: 160)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !195, file: !126, line: 271, baseType: !203, size: 64, align: 64, offset: 192)
!203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !195, file: !126, line: 265, size: 64, align: 64, elements: !204)
!204 = !{!205, !209, !211, !212}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !203, file: !126, line: 266, baseType: !206, size: 64, align: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !207, line: 197, baseType: !208)
!207 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!208 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !203, file: !126, line: 267, baseType: !210, size: 64, align: 64)
!210 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !203, file: !126, line: 268, baseType: !184, size: 64, align: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !203, file: !126, line: 270, baseType: !213, size: 64, align: 32)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !214, line: 61, baseType: !215)
!214 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !214, line: 58, size: 64, align: 32, elements: !216)
!216 = !{!217, !218}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !215, file: !214, line: 59, baseType: !200, size: 32, align: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !215, file: !214, line: 60, baseType: !200, size: 32, align: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !195, file: !126, line: 272, baseType: !210, size: 64, align: 64, offset: 256)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !195, file: !126, line: 273, baseType: !210, size: 64, align: 64, offset: 320)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !195, file: !126, line: 275, baseType: !200, size: 32, align: 32, offset: 384)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !195, file: !126, line: 300, baseType: !184, size: 64, align: 64, offset: 448)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !181, file: !148, line: 93, baseType: !200, size: 32, align: 32, offset: 192)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !181, file: !148, line: 99, baseType: !200, size: 32, align: 32, offset: 224)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !181, file: !148, line: 108, baseType: !200, size: 32, align: 32, offset: 256)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !181, file: !148, line: 113, baseType: !227, size: 64, align: 64, offset: 320)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64, align: 64)
!228 = !DISubroutineType(types: !229)
!229 = !{!191, !191, !191}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !181, file: !148, line: 123, baseType: !231, size: 64, align: 64, offset: 384)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64, align: 64)
!232 = !DISubroutineType(types: !233)
!233 = !{!234, !234}
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64, align: 64)
!235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !181, file: !148, line: 130, baseType: !237, size: 32, align: 32, offset: 448)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !148, line: 48, baseType: !147)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !181, file: !148, line: 136, baseType: !239, size: 64, align: 64, offset: 512)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!237, !191}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !181, file: !148, line: 142, baseType: !243, size: 64, align: 64, offset: 576)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64, align: 64)
!244 = !DISubroutineType(types: !245)
!245 = !{!200, !246, !191, !184, !200}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64, align: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !126, line: 329, size: 128, align: 64, elements: !249)
!249 = !{!250, !262, !263}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !248, file: !126, line: 360, baseType: !251, size: 64, align: 64)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64, align: 64)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !126, line: 324, baseType: !254)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !126, line: 306, size: 384, align: 64, elements: !255)
!255 = !{!256, !257, !258, !259, !260, !261}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !254, file: !126, line: 307, baseType: !184, size: 64, align: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !254, file: !126, line: 313, baseType: !210, size: 64, align: 64, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !254, file: !126, line: 313, baseType: !210, size: 64, align: 64, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !254, file: !126, line: 318, baseType: !210, size: 64, align: 64, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !254, file: !126, line: 318, baseType: !210, size: 64, align: 64, offset: 256)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !254, file: !126, line: 323, baseType: !200, size: 32, align: 32, offset: 320)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !248, file: !126, line: 364, baseType: !200, size: 32, align: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !248, file: !126, line: 368, baseType: !200, size: 32, align: 32, offset: 96)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !175, file: !169, line: 341, baseType: !265, size: 64, align: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64, align: 64)
!266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilter", file: !169, line: 328, baseType: !268)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilter", file: !169, line: 144, size: 1024, align: 64, elements: !269)
!269 = !{!270, !271, !272, !405, !406, !407, !408, !412, !413, !418, !422, !423, !424, !425, !427, !432, !436}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !268, file: !169, line: 148, baseType: !184, size: 64, align: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !268, file: !169, line: 155, baseType: !184, size: 64, align: 64, offset: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !268, file: !169, line: 164, baseType: !273, size: 64, align: 64, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64, align: 64)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterPad", file: !169, line: 69, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterPad", file: !277, line: 54, size: 576, align: 64, elements: !278)
!277 = !DIFile(filename: "libavfilter/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!278 = !{!279, !280, !281, !389, !393, !397, !401, !402, !403, !404}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !276, file: !277, line: 60, baseType: !184, size: 64, align: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !276, file: !277, line: 65, baseType: !3, size: 32, align: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "get_video_buffer", scope: !276, file: !277, line: 73, baseType: !282, size: 64, align: 64, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64, align: 64)
!283 = !DISubroutineType(types: !284)
!284 = !{!285, !387, !200, !200}
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64, align: 64)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !24, line: 646, baseType: !287)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !24, line: 268, size: 4288, align: 64, elements: !288)
!288 = !{!289, !297, !299, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !319, !320, !321, !322, !323, !324, !325, !326, !339, !341, !342, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !375, !376, !377, !378, !379, !380, !383, !384, !385, !386}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !287, file: !24, line: 282, baseType: !290, size: 512, align: 64)
!290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 512, align: 64, elements: !295)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64, align: 64)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !293, line: 48, baseType: !294)
!293 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!294 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!295 = !{!296}
!296 = !DISubrange(count: 8)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !287, file: !24, line: 299, baseType: !298, size: 256, align: 32, offset: 512)
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 256, align: 32, elements: !295)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !287, file: !24, line: 315, baseType: !300, size: 64, align: 64, offset: 768)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !287, file: !24, line: 326, baseType: !200, size: 32, align: 32, offset: 832)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !287, file: !24, line: 326, baseType: !200, size: 32, align: 32, offset: 864)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !287, file: !24, line: 334, baseType: !200, size: 32, align: 32, offset: 896)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !287, file: !24, line: 341, baseType: !200, size: 32, align: 32, offset: 928)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !287, file: !24, line: 346, baseType: !200, size: 32, align: 32, offset: 960)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !287, file: !24, line: 351, baseType: !13, size: 32, align: 32, offset: 992)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !287, file: !24, line: 356, baseType: !213, size: 64, align: 32, offset: 1024)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !287, file: !24, line: 361, baseType: !206, size: 64, align: 64, offset: 1088)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !287, file: !24, line: 369, baseType: !206, size: 64, align: 64, offset: 1152)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !287, file: !24, line: 377, baseType: !206, size: 64, align: 64, offset: 1216)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !287, file: !24, line: 382, baseType: !200, size: 32, align: 32, offset: 1280)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !287, file: !24, line: 386, baseType: !200, size: 32, align: 32, offset: 1312)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !287, file: !24, line: 391, baseType: !200, size: 32, align: 32, offset: 1344)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !287, file: !24, line: 396, baseType: !191, size: 64, align: 64, offset: 1408)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !287, file: !24, line: 403, baseType: !316, size: 512, align: 64, offset: 1472)
!316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 512, align: 64, elements: !295)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !293, line: 55, baseType: !318)
!318 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !287, file: !24, line: 410, baseType: !200, size: 32, align: 32, offset: 1984)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !287, file: !24, line: 415, baseType: !200, size: 32, align: 32, offset: 2016)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !287, file: !24, line: 420, baseType: !200, size: 32, align: 32, offset: 2048)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !287, file: !24, line: 425, baseType: !200, size: 32, align: 32, offset: 2080)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !287, file: !24, line: 435, baseType: !206, size: 64, align: 64, offset: 2112)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !287, file: !24, line: 440, baseType: !200, size: 32, align: 32, offset: 2176)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !287, file: !24, line: 445, baseType: !317, size: 64, align: 64, offset: 2240)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !287, file: !24, line: 459, baseType: !327, size: 512, align: 64, offset: 2304)
!327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 512, align: 64, elements: !295)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64, align: 64)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !330, line: 94, baseType: !331)
!330 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !330, line: 81, size: 192, align: 64, elements: !332)
!332 = !{!333, !337, !338}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !331, file: !330, line: 82, baseType: !334, size: 64, align: 64)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64, align: 64)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !330, line: 73, baseType: !336)
!336 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !330, line: 73, flags: DIFlagFwdDecl)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !331, file: !330, line: 89, baseType: !291, size: 64, align: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !331, file: !330, line: 93, baseType: !200, size: 32, align: 32, offset: 128)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !287, file: !24, line: 473, baseType: !340, size: 64, align: 64, offset: 2816)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64, align: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !287, file: !24, line: 477, baseType: !200, size: 32, align: 32, offset: 2880)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !287, file: !24, line: 479, baseType: !343, size: 64, align: 64, offset: 2944)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64, align: 64)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !24, line: 207, baseType: !346)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !24, line: 201, size: 320, align: 64, elements: !347)
!347 = !{!348, !349, !350, !351, !356}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !346, file: !24, line: 202, baseType: !23, size: 32, align: 32)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !346, file: !24, line: 203, baseType: !291, size: 64, align: 64, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !346, file: !24, line: 204, baseType: !200, size: 32, align: 32, offset: 128)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !346, file: !24, line: 205, baseType: !352, size: 64, align: 64, offset: 192)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64, align: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !354, line: 86, baseType: !355)
!354 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!355 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !354, line: 86, flags: DIFlagFwdDecl)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !346, file: !24, line: 206, baseType: !328, size: 64, align: 64, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !287, file: !24, line: 480, baseType: !200, size: 32, align: 32, offset: 3008)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !287, file: !24, line: 505, baseType: !200, size: 32, align: 32, offset: 3040)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !287, file: !24, line: 512, baseType: !47, size: 32, align: 32, offset: 3072)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !287, file: !24, line: 514, baseType: !54, size: 32, align: 32, offset: 3104)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !287, file: !24, line: 516, baseType: !72, size: 32, align: 32, offset: 3136)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !287, file: !24, line: 523, baseType: !96, size: 32, align: 32, offset: 3168)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !287, file: !24, line: 525, baseType: !115, size: 32, align: 32, offset: 3200)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !287, file: !24, line: 532, baseType: !206, size: 64, align: 64, offset: 3264)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !287, file: !24, line: 539, baseType: !206, size: 64, align: 64, offset: 3328)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !287, file: !24, line: 547, baseType: !206, size: 64, align: 64, offset: 3392)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !287, file: !24, line: 554, baseType: !352, size: 64, align: 64, offset: 3456)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !287, file: !24, line: 563, baseType: !200, size: 32, align: 32, offset: 3520)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !287, file: !24, line: 572, baseType: !200, size: 32, align: 32, offset: 3552)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !287, file: !24, line: 581, baseType: !200, size: 32, align: 32, offset: 3584)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !287, file: !24, line: 588, baseType: !372, size: 64, align: 64, offset: 3648)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !207, line: 194, baseType: !374)
!374 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !287, file: !24, line: 593, baseType: !200, size: 32, align: 32, offset: 3712)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !287, file: !24, line: 596, baseType: !200, size: 32, align: 32, offset: 3744)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !287, file: !24, line: 599, baseType: !328, size: 64, align: 64, offset: 3776)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !287, file: !24, line: 605, baseType: !328, size: 64, align: 64, offset: 3840)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !287, file: !24, line: 616, baseType: !328, size: 64, align: 64, offset: 3904)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !287, file: !24, line: 626, baseType: !381, size: 64, align: 64, offset: 3968)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !382, line: 216, baseType: !318)
!382 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!383 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !287, file: !24, line: 627, baseType: !381, size: 64, align: 64, offset: 4032)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !287, file: !24, line: 628, baseType: !381, size: 64, align: 64, offset: 4096)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !287, file: !24, line: 629, baseType: !381, size: 64, align: 64, offset: 4160)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !287, file: !24, line: 645, baseType: !328, size: 64, align: 64, offset: 4224)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64, align: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterLink", file: !169, line: 68, baseType: !170)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "get_audio_buffer", scope: !276, file: !277, line: 81, baseType: !390, size: 64, align: 64, offset: 192)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64, align: 64)
!391 = !DISubroutineType(types: !392)
!392 = !{!285, !387, !200}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "filter_frame", scope: !276, file: !277, line: 93, baseType: !394, size: 64, align: 64, offset: 256)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64, align: 64)
!395 = !DISubroutineType(types: !396)
!396 = !{!200, !387, !285}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "poll_frame", scope: !276, file: !277, line: 104, baseType: !398, size: 64, align: 64, offset: 320)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64, align: 64)
!399 = !DISubroutineType(types: !400)
!400 = !{!200, !387}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "request_frame", scope: !276, file: !277, line: 113, baseType: !398, size: 64, align: 64, offset: 384)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "config_props", scope: !276, file: !277, line: 129, baseType: !398, size: 64, align: 64, offset: 448)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "needs_fifo", scope: !276, file: !277, line: 137, baseType: !200, size: 32, align: 32, offset: 512)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "needs_writable", scope: !276, file: !277, line: 145, baseType: !200, size: 32, align: 32, offset: 544)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !268, file: !169, line: 172, baseType: !273, size: 64, align: 64, offset: 192)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !268, file: !169, line: 182, baseType: !178, size: 64, align: 64, offset: 256)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !268, file: !169, line: 187, baseType: !200, size: 32, align: 32, offset: 320)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "preinit", scope: !268, file: !169, line: 210, baseType: !409, size: 64, align: 64, offset: 384)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64, align: 64)
!410 = !DISubroutineType(types: !411)
!411 = !{!200, !173}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !268, file: !169, line: 233, baseType: !409, size: 64, align: 64, offset: 448)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "init_dict", scope: !268, file: !169, line: 246, baseType: !414, size: 64, align: 64, offset: 512)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64, align: 64)
!415 = !DISubroutineType(types: !416)
!416 = !{!200, !173, !417}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64, align: 64)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !268, file: !169, line: 258, baseType: !419, size: 64, align: 64, offset: 576)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64, align: 64)
!420 = !DISubroutineType(types: !421)
!421 = !{null, !173}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "query_formats", scope: !268, file: !169, line: 282, baseType: !409, size: 64, align: 64, offset: 640)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !268, file: !169, line: 284, baseType: !200, size: 32, align: 32, offset: 704)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "flags_internal", scope: !268, file: !169, line: 286, baseType: !200, size: 32, align: 32, offset: 736)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !268, file: !169, line: 292, baseType: !426, size: 64, align: 64, offset: 768)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64, align: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "process_command", scope: !268, file: !169, line: 306, baseType: !428, size: 64, align: 64, offset: 832)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64, align: 64)
!429 = !DISubroutineType(types: !430)
!430 = !{!200, !173, !184, !184, !431, !200, !200}
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64, align: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "init_opaque", scope: !268, file: !169, line: 313, baseType: !433, size: 64, align: 64, offset: 896)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64, align: 64)
!434 = !DISubroutineType(types: !435)
!435 = !{!200, !173, !191}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !268, file: !169, line: 327, baseType: !409, size: 64, align: 64, offset: 960)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !175, file: !169, line: 343, baseType: !431, size: 64, align: 64, offset: 128)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "input_pads", scope: !175, file: !169, line: 345, baseType: !439, size: 64, align: 64, offset: 192)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64, align: 64)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !175, file: !169, line: 346, baseType: !441, size: 64, align: 64, offset: 256)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64, align: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inputs", scope: !175, file: !169, line: 347, baseType: !443, size: 32, align: 32, offset: 320)
!443 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "output_pads", scope: !175, file: !169, line: 349, baseType: !439, size: 64, align: 64, offset: 384)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !175, file: !169, line: 350, baseType: !441, size: 64, align: 64, offset: 448)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "nb_outputs", scope: !175, file: !169, line: 351, baseType: !443, size: 32, align: 32, offset: 512)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !175, file: !169, line: 353, baseType: !191, size: 64, align: 64, offset: 576)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !175, file: !169, line: 355, baseType: !449, size: 64, align: 64, offset: 640)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64, align: 64)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraph", file: !169, line: 840, size: 768, align: 64, elements: !451)
!451 = !{!452, !453, !455, !456, !457, !458, !459, !460, !482, !483, !484, !485, !486, !487}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !450, file: !169, line: 841, baseType: !178, size: 64, align: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !450, file: !169, line: 842, baseType: !454, size: 64, align: 64, offset: 64)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64, align: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "nb_filters", scope: !450, file: !169, line: 843, baseType: !443, size: 32, align: 32, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "scale_sws_opts", scope: !450, file: !169, line: 845, baseType: !431, size: 64, align: 64, offset: 192)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "resample_lavr_opts", scope: !450, file: !169, line: 847, baseType: !431, size: 64, align: 64, offset: 256)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !450, file: !169, line: 862, baseType: !200, size: 32, align: 32, offset: 320)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !450, file: !169, line: 869, baseType: !200, size: 32, align: 32, offset: 352)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !450, file: !169, line: 874, baseType: !461, size: 64, align: 64, offset: 384)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64, align: 64)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterGraphInternal", file: !169, line: 809, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraphInternal", file: !277, line: 148, size: 192, align: 64, elements: !464)
!464 = !{!465, !466, !476}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !463, file: !277, line: 149, baseType: !191, size: 64, align: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "thread_execute", scope: !463, file: !277, line: 150, baseType: !467, size: 64, align: 64, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64, align: 64)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_execute_func", file: !169, line: 837, baseType: !469)
!469 = !DISubroutineType(types: !470)
!470 = !{!200, !173, !471, !191, !475, !200}
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64, align: 64)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_action_func", file: !169, line: 823, baseType: !473)
!473 = !DISubroutineType(types: !474)
!474 = !{!200, !173, !191, !200, !200}
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64, align: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "frame_queues", scope: !463, file: !277, line: 151, baseType: !477, size: 8, align: 8, offset: 128)
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrameQueueGlobal", file: !478, line: 48, baseType: !479)
!478 = !DIFile(filename: "libavfilter/framequeue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrameQueueGlobal", file: !478, line: 46, size: 8, align: 8, elements: !480)
!480 = !{!481}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !479, file: !478, line: 47, baseType: !186, size: 8, align: 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !450, file: !169, line: 881, baseType: !191, size: 64, align: 64, offset: 448)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !450, file: !169, line: 895, baseType: !467, size: 64, align: 64, offset: 512)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "aresample_swr_opts", scope: !450, file: !169, line: 897, baseType: !431, size: 64, align: 64, offset: 576)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links", scope: !450, file: !169, line: 906, baseType: !441, size: 64, align: 64, offset: 640)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links_count", scope: !450, file: !169, line: 907, baseType: !200, size: 32, align: 32, offset: 704)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "disable_auto_convert", scope: !450, file: !169, line: 909, baseType: !443, size: 32, align: 32, offset: 736)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !175, file: !169, line: 373, baseType: !200, size: 32, align: 32, offset: 704)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !175, file: !169, line: 378, baseType: !490, size: 64, align: 64, offset: 768)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64, align: 64)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterInternal", file: !169, line: 335, baseType: !492)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterInternal", file: !277, line: 154, size: 64, align: 64, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !492, file: !277, line: 155, baseType: !467, size: 64, align: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "command_queue", scope: !175, file: !169, line: 380, baseType: !496, size: 64, align: 64, offset: 832)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64, align: 64)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterCommand", file: !277, line: 38, size: 320, align: 64, elements: !498)
!498 = !{!499, !500, !501, !502, !503}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !497, file: !277, line: 39, baseType: !210, size: 64, align: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !497, file: !277, line: 40, baseType: !431, size: 64, align: 64, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !497, file: !277, line: 41, baseType: !431, size: 64, align: 64, offset: 128)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !497, file: !277, line: 42, baseType: !200, size: 32, align: 32, offset: 192)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !497, file: !277, line: 43, baseType: !496, size: 64, align: 64, offset: 256)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "enable_str", scope: !175, file: !169, line: 382, baseType: !431, size: 64, align: 64, offset: 896)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !175, file: !169, line: 383, baseType: !191, size: 64, align: 64, offset: 960)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "var_values", scope: !175, file: !169, line: 384, baseType: !507, size: 64, align: 64, offset: 1024)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "is_disabled", scope: !175, file: !169, line: 385, baseType: !200, size: 32, align: 32, offset: 1088)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !175, file: !169, line: 394, baseType: !328, size: 64, align: 64, offset: 1152)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !175, file: !169, line: 401, baseType: !200, size: 32, align: 32, offset: 1216)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !175, file: !169, line: 408, baseType: !443, size: 32, align: 32, offset: 1248)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !175, file: !169, line: 424, baseType: !200, size: 32, align: 32, offset: 1280)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "srcpad", scope: !170, file: !169, line: 441, baseType: !439, size: 64, align: 64, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !170, file: !169, line: 443, baseType: !173, size: 64, align: 64, offset: 128)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "dstpad", scope: !170, file: !169, line: 444, baseType: !439, size: 64, align: 64, offset: 192)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !170, file: !169, line: 446, baseType: !3, size: 32, align: 32, offset: 256)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !170, file: !169, line: 449, baseType: !200, size: 32, align: 32, offset: 288)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !170, file: !169, line: 450, baseType: !200, size: 32, align: 32, offset: 320)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !170, file: !169, line: 451, baseType: !213, size: 64, align: 32, offset: 352)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !170, file: !169, line: 453, baseType: !317, size: 64, align: 64, offset: 448)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !170, file: !169, line: 454, baseType: !200, size: 32, align: 32, offset: 512)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !170, file: !169, line: 456, baseType: !200, size: 32, align: 32, offset: 544)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !170, file: !169, line: 465, baseType: !213, size: 64, align: 32, offset: 576)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "in_formats", scope: !170, file: !169, line: 481, baseType: !525, size: 64, align: 64, offset: 640)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64, align: 64)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterFormats", file: !169, line: 70, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterFormats", file: !528, line: 64, size: 256, align: 64, elements: !529)
!528 = !DIFile(filename: "libavfilter/formats.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!529 = !{!530, !531, !532, !533}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "nb_formats", scope: !527, file: !528, line: 65, baseType: !443, size: 32, align: 32)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "formats", scope: !527, file: !528, line: 66, baseType: !475, size: 64, align: 64, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !527, file: !528, line: 68, baseType: !443, size: 32, align: 32, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !527, file: !528, line: 69, baseType: !534, size: 64, align: 64, offset: 192)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64, align: 64)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64, align: 64)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64, align: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "out_formats", scope: !170, file: !169, line: 482, baseType: !525, size: 64, align: 64, offset: 704)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "in_samplerates", scope: !170, file: !169, line: 488, baseType: !525, size: 64, align: 64, offset: 768)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "out_samplerates", scope: !170, file: !169, line: 489, baseType: !525, size: 64, align: 64, offset: 832)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "in_channel_layouts", scope: !170, file: !169, line: 490, baseType: !541, size: 64, align: 64, offset: 896)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64, align: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterChannelLayouts", file: !528, line: 85, size: 256, align: 64, elements: !543)
!543 = !{!544, !546, !547, !548, !549, !550}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !542, file: !528, line: 86, baseType: !545, size: 64, align: 64)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64, align: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channel_layouts", scope: !542, file: !528, line: 87, baseType: !200, size: 32, align: 32, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "all_layouts", scope: !542, file: !528, line: 88, baseType: !186, size: 8, align: 8, offset: 96)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "all_counts", scope: !542, file: !528, line: 89, baseType: !186, size: 8, align: 8, offset: 104)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !542, file: !528, line: 91, baseType: !443, size: 32, align: 32, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !542, file: !528, line: 92, baseType: !551, size: 64, align: 64, offset: 192)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64, align: 64)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64, align: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "out_channel_layouts", scope: !170, file: !169, line: 491, baseType: !541, size: 64, align: 64, offset: 960)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "request_samples", scope: !170, file: !169, line: 500, baseType: !200, size: 32, align: 32, offset: 1024)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !170, file: !169, line: 507, baseType: !168, size: 32, align: 32, offset: 1056)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !170, file: !169, line: 512, baseType: !449, size: 64, align: 64, offset: 1088)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts", scope: !170, file: !169, line: 518, baseType: !206, size: 64, align: 64, offset: 1152)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts_us", scope: !170, file: !169, line: 524, baseType: !206, size: 64, align: 64, offset: 1216)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "age_index", scope: !170, file: !169, line: 529, baseType: !200, size: 32, align: 32, offset: 1280)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate", scope: !170, file: !169, line: 542, baseType: !213, size: 64, align: 32, offset: 1312)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf", scope: !170, file: !169, line: 547, baseType: !285, size: 64, align: 64, offset: 1408)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf_size", scope: !170, file: !169, line: 553, baseType: !200, size: 32, align: 32, offset: 1472)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "min_samples", scope: !170, file: !169, line: 562, baseType: !200, size: 32, align: 32, offset: 1504)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "max_samples", scope: !170, file: !169, line: 568, baseType: !200, size: 32, align: 32, offset: 1536)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !170, file: !169, line: 573, baseType: !200, size: 32, align: 32, offset: 1568)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !170, file: !169, line: 578, baseType: !443, size: 32, align: 32, offset: 1600)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_in", scope: !170, file: !169, line: 583, baseType: !206, size: 64, align: 64, offset: 1664)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_out", scope: !170, file: !169, line: 583, baseType: !206, size: 64, align: 64, offset: 1728)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pool", scope: !170, file: !169, line: 588, baseType: !191, size: 64, align: 64, offset: 1792)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "frame_wanted_out", scope: !170, file: !169, line: 595, baseType: !200, size: 32, align: 32, offset: 1856)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !170, file: !169, line: 601, baseType: !328, size: 64, align: 64, offset: 1920)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !170, file: !169, line: 610, baseType: !573, size: 491520, align: 8, offset: 1984)
!573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 491520, align: 8, elements: !574)
!574 = !{!575}
!575 = !DISubrange(count: 61440)
!576 = !{!577, !578, !579}
!577 = !DIEnumerator(name: "AVLINK_UNINIT", value: 0)
!578 = !DIEnumerator(name: "AVLINK_STARTINIT", value: 1)
!579 = !DIEnumerator(name: "AVLINK_INIT", value: 2)
!580 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "VectorscopeMode", file: !581, line: 32, size: 32, align: 32, elements: !582)
!581 = !DIFile(filename: "libavfilter/vf_vectorscope.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!582 = !{!583, !584, !585, !586, !587, !588, !589}
!583 = !DIEnumerator(name: "GRAY", value: 0)
!584 = !DIEnumerator(name: "COLOR", value: 1)
!585 = !DIEnumerator(name: "COLOR2", value: 2)
!586 = !DIEnumerator(name: "COLOR3", value: 3)
!587 = !DIEnumerator(name: "COLOR4", value: 4)
!588 = !DIEnumerator(name: "COLOR5", value: 5)
!589 = !DIEnumerator(name: "MODE_NB", value: 6)
!590 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !48, line: 64, size: 32, align: 32, elements: !591)
!591 = !{!592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788}
!592 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!595 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!596 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!601 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!602 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!603 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!604 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!608 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!609 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!612 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!613 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!614 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!615 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!616 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!617 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!618 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!619 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!620 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!621 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!622 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!623 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!624 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!625 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!627 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!628 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!629 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!630 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!631 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!632 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!634 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!635 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!636 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!637 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!638 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!639 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!640 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!641 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!643 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!644 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!645 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!646 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!647 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!648 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!649 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!652 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!653 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!654 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!655 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!656 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!660 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!661 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!662 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!663 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!664 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!665 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!666 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!667 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!669 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!674 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!675 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!676 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!677 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!678 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!679 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!680 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!681 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!682 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!683 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!684 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!685 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!686 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!687 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!688 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!693 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!694 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!695 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!696 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!697 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!698 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!699 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!700 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!701 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!702 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!703 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!704 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!705 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!706 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!707 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!708 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!709 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!710 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!711 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!712 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!713 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!714 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!715 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!716 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!717 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!718 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!719 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!720 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!721 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!722 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!723 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!724 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!725 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!726 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!727 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!728 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!729 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!730 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!731 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!732 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!733 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!734 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!735 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!736 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!737 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!738 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!739 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!740 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!741 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!742 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!743 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!744 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!745 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!746 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!747 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!748 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!749 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!750 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!751 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!752 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!753 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!754 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!755 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!756 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!757 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!758 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!759 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!760 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!761 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!762 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!763 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!764 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!765 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!766 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!767 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!768 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!769 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!770 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!771 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!772 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!773 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!774 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!775 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!776 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!777 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!778 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!779 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!780 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!781 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!782 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!783 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!784 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!785 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!786 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!787 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!788 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!789 = !{!790, !191, !794, !800, !802, !801}
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64, align: 64)
!791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !792)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64, align: 64)
!793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64, align: 64)
!795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !796)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64, align: 64)
!797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !798)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !293, line: 49, baseType: !799)
!799 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64, align: 64)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64, align: 64)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64, align: 64)
!803 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !804, line: 222, size: 16, align: 8, elements: !805)
!804 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!805 = !{!806}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !803, file: !804, line: 222, baseType: !798, size: 16, align: 16)
!807 = !{!808, !809, !813, !866, !872, !876, !877, !878, !884, !889, !893, !896, !898, !899, !900, !901, !902, !903}
!808 = distinct !DIGlobalVariable(name: "ff_vf_vectorscope", scope: !0, file: !581, line: 1350, type: !267, isLocal: false, isDefinition: true, variable: %struct.AVFilter* @ff_vf_vectorscope)
!809 = distinct !DIGlobalVariable(name: "inputs", scope: !0, file: !581, line: 1331, type: !810, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @inputs)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 1152, align: 64, elements: !811)
!811 = !{!812}
!812 = !DISubrange(count: 2)
!813 = distinct !DIGlobalVariable(name: "color", scope: !814, file: !581, line: 1185, type: !865, isLocal: true, isDefinition: true, variable: [4 x i8]* @green_graticule.color)
!814 = distinct !DISubprogram(name: "green_graticule", scope: !581, file: !581, line: 1146, type: !815, isLocal: true, isDefinition: true, scopeLine: 1147, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!815 = !DISubroutineType(types: !816)
!816 = !{null, !817, !285, !200, !200, !200, !200}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64, align: 64)
!818 = !DIDerivedType(tag: DW_TAG_typedef, name: "VectorscopeContext", file: !581, line: 74, baseType: !819)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VectorscopeContext", file: !581, line: 42, size: 1408, align: 64, elements: !820)
!820 = !{!821, !822, !823, !824, !826, !830, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !860}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !819, file: !581, line: 43, baseType: !178, size: 64, align: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !819, file: !581, line: 44, baseType: !200, size: 32, align: 32, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !819, file: !581, line: 45, baseType: !200, size: 32, align: 32, offset: 96)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "fintensity", scope: !819, file: !581, line: 46, baseType: !825, size: 32, align: 32, offset: 128)
!825 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "bg_color", scope: !819, file: !581, line: 47, baseType: !827, size: 64, align: 16, offset: 160)
!827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 64, align: 16, elements: !828)
!828 = !{!829}
!829 = !DISubrange(count: 4)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "planewidth", scope: !819, file: !581, line: 48, baseType: !831, size: 128, align: 32, offset: 224)
!831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 128, align: 32, elements: !828)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "planeheight", scope: !819, file: !581, line: 49, baseType: !831, size: 128, align: 32, offset: 352)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "hsub", scope: !819, file: !581, line: 50, baseType: !200, size: 32, align: 32, offset: 480)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "vsub", scope: !819, file: !581, line: 50, baseType: !200, size: 32, align: 32, offset: 512)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !819, file: !581, line: 51, baseType: !200, size: 32, align: 32, offset: 544)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !819, file: !581, line: 51, baseType: !200, size: 32, align: 32, offset: 576)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !819, file: !581, line: 51, baseType: !200, size: 32, align: 32, offset: 608)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "is_yuv", scope: !819, file: !581, line: 52, baseType: !200, size: 32, align: 32, offset: 640)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !819, file: !581, line: 53, baseType: !200, size: 32, align: 32, offset: 672)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !819, file: !581, line: 54, baseType: !200, size: 32, align: 32, offset: 704)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "mult", scope: !819, file: !581, line: 55, baseType: !200, size: 32, align: 32, offset: 736)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !819, file: !581, line: 56, baseType: !200, size: 32, align: 32, offset: 768)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "graticule", scope: !819, file: !581, line: 57, baseType: !200, size: 32, align: 32, offset: 800)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !819, file: !581, line: 58, baseType: !825, size: 32, align: 32, offset: 832)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "bgopacity", scope: !819, file: !581, line: 59, baseType: !825, size: 32, align: 32, offset: 864)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "lthreshold", scope: !819, file: !581, line: 60, baseType: !825, size: 32, align: 32, offset: 896)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "hthreshold", scope: !819, file: !581, line: 61, baseType: !825, size: 32, align: 32, offset: 928)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "tmin", scope: !819, file: !581, line: 62, baseType: !200, size: 32, align: 32, offset: 960)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "tmax", scope: !819, file: !581, line: 63, baseType: !200, size: 32, align: 32, offset: 992)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !819, file: !581, line: 64, baseType: !200, size: 32, align: 32, offset: 1024)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !819, file: !581, line: 65, baseType: !200, size: 32, align: 32, offset: 1056)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !819, file: !581, line: 66, baseType: !200, size: 32, align: 32, offset: 1088)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "peak_memory", scope: !819, file: !581, line: 67, baseType: !291, size: 64, align: 64, offset: 1152)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "peak", scope: !819, file: !581, line: 68, baseType: !300, size: 64, align: 64, offset: 1216)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "vectorscope", scope: !819, file: !581, line: 70, baseType: !856, size: 64, align: 64, offset: 1280)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64, align: 64)
!857 = !DISubroutineType(types: !858)
!858 = !{null, !859, !285, !285, !200}
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64, align: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "graticulef", scope: !819, file: !581, line: 72, baseType: !861, size: 64, align: 64, offset: 1344)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64, align: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{null, !859, !285, !200, !200, !200, !200}
!864 = !{}
!865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !793, size: 32, align: 8, elements: !828)
!866 = distinct !DIGlobalVariable(name: "positions", scope: !0, file: !581, line: 796, type: !867, isLocal: true, isDefinition: true, variable: [10 x [14 x [3 x i16]]]* @positions)
!867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !797, size: 6720, align: 16, elements: !868)
!868 = !{!869, !870, !871}
!869 = !DISubrange(count: 10)
!870 = !DISubrange(count: 14)
!871 = !DISubrange(count: 3)
!872 = distinct !DIGlobalVariable(name: "positions_name", scope: !0, file: !581, line: 792, type: !873, isLocal: true, isDefinition: true, variable: [6 x i8*]* @positions_name)
!873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 384, align: 64, elements: !874)
!874 = !{!875}
!875 = !DISubrange(count: 6)
!876 = distinct !DIGlobalVariable(name: "outputs", scope: !0, file: !581, line: 1341, type: !810, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @outputs)
!877 = distinct !DIGlobalVariable(name: "vectorscope_class", scope: !0, file: !581, line: 124, type: !179, isLocal: true, isDefinition: true, variable: %struct.AVClass* @vectorscope_class)
!878 = distinct !DIGlobalVariable(name: "vectorscope_options", scope: !0, file: !581, line: 79, type: !879, isLocal: true, isDefinition: true, variable: <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @vectorscope_options)
!879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !880, size: 21504, align: 64, elements: !882)
!880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !881)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !126, line: 301, baseType: !195)
!882 = !{!883}
!883 = !DISubrange(count: 42)
!884 = distinct !DIGlobalVariable(name: "in2_pix_fmts", scope: !0, file: !581, line: 177, type: !885, isLocal: true, isDefinition: true, variable: [37 x i32]* @in2_pix_fmts)
!885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !886, size: 1184, align: 32, elements: !887)
!886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !590)
!887 = !{!888}
!888 = !DISubrange(count: 37)
!889 = distinct !DIGlobalVariable(name: "in1_pix_fmts", scope: !0, file: !581, line: 166, type: !890, isLocal: true, isDefinition: true, variable: [16 x i32]* @in1_pix_fmts)
!890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !886, size: 512, align: 32, elements: !891)
!891 = !{!892}
!892 = !DISubrange(count: 16)
!893 = distinct !DIGlobalVariable(name: "out_rgb8_pix_fmts", scope: !0, file: !581, line: 146, type: !894, isLocal: true, isDefinition: true, variable: [3 x i32]* @out_rgb8_pix_fmts)
!894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !886, size: 96, align: 32, elements: !895)
!895 = !{!871}
!896 = distinct !DIGlobalVariable(name: "out_rgb9_pix_fmts", scope: !0, file: !581, line: 151, type: !897, isLocal: true, isDefinition: true, variable: [2 x i32]* @out_rgb9_pix_fmts)
!897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !886, size: 64, align: 32, elements: !811)
!898 = distinct !DIGlobalVariable(name: "out_rgb10_pix_fmts", scope: !0, file: !581, line: 156, type: !894, isLocal: true, isDefinition: true, variable: [3 x i32]* @out_rgb10_pix_fmts)
!899 = distinct !DIGlobalVariable(name: "out_rgb12_pix_fmts", scope: !0, file: !581, line: 161, type: !894, isLocal: true, isDefinition: true, variable: [3 x i32]* @out_rgb12_pix_fmts)
!900 = distinct !DIGlobalVariable(name: "out_yuv8_pix_fmts", scope: !0, file: !581, line: 126, type: !894, isLocal: true, isDefinition: true, variable: [3 x i32]* @out_yuv8_pix_fmts)
!901 = distinct !DIGlobalVariable(name: "out_yuv9_pix_fmts", scope: !0, file: !581, line: 131, type: !894, isLocal: true, isDefinition: true, variable: [3 x i32]* @out_yuv9_pix_fmts)
!902 = distinct !DIGlobalVariable(name: "out_yuv10_pix_fmts", scope: !0, file: !581, line: 136, type: !894, isLocal: true, isDefinition: true, variable: [3 x i32]* @out_yuv10_pix_fmts)
!903 = distinct !DIGlobalVariable(name: "out_yuv12_pix_fmts", scope: !0, file: !581, line: 141, type: !897, isLocal: true, isDefinition: true, variable: [2 x i32]* @out_yuv12_pix_fmts)
!904 = !{i32 2, !"Dwarf Version", i32 4}
!905 = !{i32 2, !"Debug Info Version", i32 3}
!906 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!907 = distinct !DISubprogram(name: "uninit", scope: !581, file: !581, line: 1323, type: !420, isLocal: true, isDefinition: true, scopeLine: 1324, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!908 = !DILocalVariable(name: "ctx", arg: 1, scope: !907, file: !581, line: 1323, type: !173)
!909 = !DIExpression()
!910 = !DILocation(line: 1323, column: 59, scope: !907)
!911 = !DILocalVariable(name: "s", scope: !907, file: !581, line: 1325, type: !817)
!912 = !DILocation(line: 1325, column: 25, scope: !907)
!913 = !DILocation(line: 1325, column: 29, scope: !907)
!914 = !DILocation(line: 1325, column: 34, scope: !907)
!915 = !DILocation(line: 1327, column: 15, scope: !907)
!916 = !DILocation(line: 1327, column: 18, scope: !907)
!917 = !DILocation(line: 1327, column: 14, scope: !907)
!918 = !DILocation(line: 1327, column: 5, scope: !907)
!919 = !DILocation(line: 1328, column: 15, scope: !907)
!920 = !DILocation(line: 1328, column: 18, scope: !907)
!921 = !DILocation(line: 1328, column: 14, scope: !907)
!922 = !DILocation(line: 1328, column: 5, scope: !907)
!923 = !DILocation(line: 1329, column: 1, scope: !907)
!924 = distinct !DISubprogram(name: "query_formats", scope: !581, file: !581, line: 194, type: !410, isLocal: true, isDefinition: true, scopeLine: 195, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!925 = !DILocalVariable(name: "ctx", arg: 1, scope: !924, file: !581, line: 194, type: !173)
!926 = !DILocation(line: 194, column: 43, scope: !924)
!927 = !DILocalVariable(name: "s", scope: !924, file: !581, line: 196, type: !817)
!928 = !DILocation(line: 196, column: 25, scope: !924)
!929 = !DILocation(line: 196, column: 29, scope: !924)
!930 = !DILocation(line: 196, column: 34, scope: !924)
!931 = !DILocalVariable(name: "out_pix_fmts", scope: !924, file: !581, line: 197, type: !932)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64, align: 64)
!933 = !DILocation(line: 197, column: 31, scope: !924)
!934 = !DILocalVariable(name: "desc", scope: !924, file: !581, line: 198, type: !935)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64, align: 64)
!936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !937)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPixFmtDescriptor", file: !938, line: 123, baseType: !939)
!938 = !DIFile(filename: "./libavutil/pixdesc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPixFmtDescriptor", file: !938, line: 81, size: 1280, align: 64, elements: !940)
!940 = !{!941, !942, !943, !944, !945, !946, !959}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !939, file: !938, line: 82, baseType: !184, size: 64, align: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !939, file: !938, line: 83, baseType: !292, size: 8, align: 8, offset: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_w", scope: !939, file: !938, line: 92, baseType: !292, size: 8, align: 8, offset: 72)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_h", scope: !939, file: !938, line: 101, baseType: !292, size: 8, align: 8, offset: 80)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !939, file: !938, line: 106, baseType: !317, size: 64, align: 64, offset: 128)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !939, file: !938, line: 117, baseType: !947, size: 1024, align: 32, offset: 192)
!947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !948, size: 1024, align: 32, elements: !828)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVComponentDescriptor", file: !938, line: 70, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVComponentDescriptor", file: !938, line: 31, size: 256, align: 32, elements: !950)
!950 = !{!951, !952, !953, !954, !955, !956, !957, !958}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !949, file: !938, line: 35, baseType: !200, size: 32, align: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !949, file: !938, line: 41, baseType: !200, size: 32, align: 32, offset: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !949, file: !938, line: 47, baseType: !200, size: 32, align: 32, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !949, file: !938, line: 53, baseType: !200, size: 32, align: 32, offset: 96)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !949, file: !938, line: 58, baseType: !200, size: 32, align: 32, offset: 128)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "step_minus1", scope: !949, file: !938, line: 62, baseType: !200, size: 32, align: 32, offset: 160)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "depth_minus1", scope: !949, file: !938, line: 65, baseType: !200, size: 32, align: 32, offset: 192)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "offset_plus1", scope: !949, file: !938, line: 68, baseType: !200, size: 32, align: 32, offset: 224)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !939, file: !938, line: 122, baseType: !184, size: 64, align: 64, offset: 1216)
!960 = !DILocation(line: 198, column: 31, scope: !924)
!961 = !DILocalVariable(name: "avff", scope: !924, file: !581, line: 199, type: !525)
!962 = !DILocation(line: 199, column: 22, scope: !924)
!963 = !DILocalVariable(name: "depth", scope: !924, file: !581, line: 200, type: !200)
!964 = !DILocation(line: 200, column: 9, scope: !924)
!965 = !DILocalVariable(name: "rgb", scope: !924, file: !581, line: 200, type: !200)
!966 = !DILocation(line: 200, column: 16, scope: !924)
!967 = !DILocalVariable(name: "i", scope: !924, file: !581, line: 200, type: !200)
!968 = !DILocation(line: 200, column: 21, scope: !924)
!969 = !DILocalVariable(name: "ret", scope: !924, file: !581, line: 200, type: !200)
!970 = !DILocation(line: 200, column: 24, scope: !924)
!971 = !DILocation(line: 202, column: 10, scope: !972)
!972 = distinct !DILexicalBlock(scope: !924, file: !581, line: 202, column: 9)
!973 = !DILocation(line: 202, column: 15, scope: !972)
!974 = !DILocation(line: 202, column: 26, scope: !972)
!975 = !DILocation(line: 202, column: 37, scope: !972)
!976 = !DILocation(line: 203, column: 10, scope: !972)
!977 = !DILocation(line: 203, column: 15, scope: !972)
!978 = !DILocation(line: 203, column: 26, scope: !972)
!979 = !DILocation(line: 203, column: 38, scope: !972)
!980 = !DILocation(line: 202, column: 9, scope: !981)
!981 = !DILexicalBlockFile(scope: !924, file: !581, discriminator: 1)
!982 = !DILocation(line: 204, column: 9, scope: !983)
!983 = distinct !DILexicalBlock(scope: !972, file: !581, line: 203, column: 50)
!984 = !DILocation(line: 207, column: 10, scope: !985)
!985 = distinct !DILexicalBlock(scope: !924, file: !581, line: 207, column: 9)
!986 = !DILocation(line: 207, column: 15, scope: !985)
!987 = !DILocation(line: 207, column: 26, scope: !985)
!988 = !DILocation(line: 207, column: 9, scope: !924)
!989 = !DILocalVariable(name: "in_pix_fmts", scope: !990, file: !581, line: 208, type: !932)
!990 = distinct !DILexicalBlock(scope: !985, file: !581, line: 207, column: 39)
!991 = !DILocation(line: 208, column: 35, scope: !990)
!992 = !DILocation(line: 210, column: 14, scope: !993)
!993 = distinct !DILexicalBlock(scope: !990, file: !581, line: 210, column: 13)
!994 = !DILocation(line: 210, column: 17, scope: !993)
!995 = !DILocation(line: 210, column: 19, scope: !993)
!996 = !DILocation(line: 210, column: 24, scope: !993)
!997 = !DILocation(line: 210, column: 27, scope: !998)
!998 = !DILexicalBlockFile(scope: !993, file: !581, discriminator: 1)
!999 = !DILocation(line: 210, column: 30, scope: !998)
!1000 = !DILocation(line: 210, column: 32, scope: !998)
!1001 = !DILocation(line: 210, column: 38, scope: !998)
!1002 = !DILocation(line: 210, column: 42, scope: !1003)
!1003 = !DILexicalBlockFile(scope: !993, file: !581, discriminator: 2)
!1004 = !DILocation(line: 210, column: 45, scope: !1003)
!1005 = !DILocation(line: 210, column: 47, scope: !1003)
!1006 = !DILocation(line: 210, column: 52, scope: !1003)
!1007 = !DILocation(line: 210, column: 55, scope: !1008)
!1008 = !DILexicalBlockFile(scope: !993, file: !581, discriminator: 3)
!1009 = !DILocation(line: 210, column: 58, scope: !1008)
!1010 = !DILocation(line: 210, column: 60, scope: !1008)
!1011 = !DILocation(line: 210, column: 13, scope: !1008)
!1012 = !DILocation(line: 211, column: 25, scope: !993)
!1013 = !DILocation(line: 211, column: 13, scope: !993)
!1014 = !DILocation(line: 213, column: 25, scope: !993)
!1015 = !DILocation(line: 214, column: 55, scope: !1016)
!1016 = distinct !DILexicalBlock(scope: !990, file: !581, line: 214, column: 13)
!1017 = !DILocation(line: 214, column: 35, scope: !1016)
!1018 = !DILocation(line: 214, column: 70, scope: !1016)
!1019 = !DILocation(line: 214, column: 75, scope: !1016)
!1020 = !DILocation(line: 214, column: 86, scope: !1016)
!1021 = !DILocation(line: 214, column: 20, scope: !1022)
!1022 = !DILexicalBlockFile(scope: !1016, file: !581, discriminator: 1)
!1023 = !DILocation(line: 214, column: 18, scope: !1016)
!1024 = !DILocation(line: 214, column: 100, scope: !1016)
!1025 = !DILocation(line: 214, column: 13, scope: !990)
!1026 = !DILocation(line: 215, column: 20, scope: !1016)
!1027 = !DILocation(line: 215, column: 13, scope: !1016)
!1028 = !DILocation(line: 216, column: 5, scope: !990)
!1029 = !DILocation(line: 218, column: 12, scope: !924)
!1030 = !DILocation(line: 218, column: 17, scope: !924)
!1031 = !DILocation(line: 218, column: 28, scope: !924)
!1032 = !DILocation(line: 218, column: 10, scope: !924)
!1033 = !DILocation(line: 219, column: 32, scope: !924)
!1034 = !DILocation(line: 219, column: 38, scope: !924)
!1035 = !DILocation(line: 219, column: 12, scope: !924)
!1036 = !DILocation(line: 219, column: 10, scope: !924)
!1037 = !DILocation(line: 220, column: 11, scope: !924)
!1038 = !DILocation(line: 220, column: 17, scope: !924)
!1039 = !DILocation(line: 220, column: 23, scope: !924)
!1040 = !DILocation(line: 220, column: 9, scope: !924)
!1041 = !DILocation(line: 221, column: 13, scope: !924)
!1042 = !DILocation(line: 221, column: 19, scope: !924)
!1043 = !DILocation(line: 221, column: 27, scope: !924)
!1044 = !DILocation(line: 221, column: 11, scope: !924)
!1045 = !DILocation(line: 222, column: 12, scope: !1046)
!1046 = distinct !DILexicalBlock(scope: !924, file: !581, line: 222, column: 5)
!1047 = !DILocation(line: 222, column: 10, scope: !1046)
!1048 = !DILocation(line: 222, column: 17, scope: !1049)
!1049 = !DILexicalBlockFile(scope: !1050, file: !581, discriminator: 1)
!1050 = distinct !DILexicalBlock(scope: !1046, file: !581, line: 222, column: 5)
!1051 = !DILocation(line: 222, column: 21, scope: !1049)
!1052 = !DILocation(line: 222, column: 27, scope: !1049)
!1053 = !DILocation(line: 222, column: 19, scope: !1049)
!1054 = !DILocation(line: 222, column: 5, scope: !1049)
!1055 = !DILocation(line: 223, column: 50, scope: !1056)
!1056 = distinct !DILexicalBlock(scope: !1050, file: !581, line: 222, column: 44)
!1057 = !DILocation(line: 223, column: 36, scope: !1056)
!1058 = !DILocation(line: 223, column: 42, scope: !1056)
!1059 = !DILocation(line: 223, column: 16, scope: !1056)
!1060 = !DILocation(line: 223, column: 14, scope: !1056)
!1061 = !DILocation(line: 224, column: 13, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1056, file: !581, line: 224, column: 13)
!1063 = !DILocation(line: 224, column: 21, scope: !1062)
!1064 = !DILocation(line: 224, column: 27, scope: !1062)
!1065 = !DILocation(line: 224, column: 33, scope: !1062)
!1066 = !DILocation(line: 224, column: 17, scope: !1062)
!1067 = !DILocation(line: 224, column: 45, scope: !1062)
!1068 = !DILocation(line: 225, column: 13, scope: !1062)
!1069 = !DILocation(line: 225, column: 22, scope: !1062)
!1070 = !DILocation(line: 225, column: 28, scope: !1062)
!1071 = !DILocation(line: 225, column: 36, scope: !1062)
!1072 = !DILocation(line: 225, column: 19, scope: !1062)
!1073 = !DILocation(line: 224, column: 13, scope: !1074)
!1074 = !DILexicalBlockFile(scope: !1056, file: !581, discriminator: 1)
!1075 = !DILocation(line: 226, column: 13, scope: !1062)
!1076 = !DILocation(line: 227, column: 5, scope: !1056)
!1077 = !DILocation(line: 222, column: 40, scope: !1078)
!1078 = !DILexicalBlockFile(scope: !1050, file: !581, discriminator: 2)
!1079 = !DILocation(line: 222, column: 5, scope: !1078)
!1080 = distinct !{!1080, !1081}
!1081 = !DILocation(line: 222, column: 5, scope: !924)
!1082 = !DILocation(line: 229, column: 9, scope: !1083)
!1083 = distinct !DILexicalBlock(scope: !924, file: !581, line: 229, column: 9)
!1084 = !DILocation(line: 229, column: 13, scope: !1083)
!1085 = !DILocation(line: 229, column: 16, scope: !1086)
!1086 = !DILexicalBlockFile(scope: !1083, file: !581, discriminator: 1)
!1087 = !DILocation(line: 229, column: 22, scope: !1086)
!1088 = !DILocation(line: 229, column: 9, scope: !1086)
!1089 = !DILocation(line: 230, column: 22, scope: !1083)
!1090 = !DILocation(line: 230, column: 9, scope: !1083)
!1091 = !DILocation(line: 231, column: 14, scope: !1092)
!1092 = distinct !DILexicalBlock(scope: !1083, file: !581, line: 231, column: 14)
!1093 = !DILocation(line: 231, column: 18, scope: !1092)
!1094 = !DILocation(line: 231, column: 21, scope: !1095)
!1095 = !DILexicalBlockFile(scope: !1092, file: !581, discriminator: 1)
!1096 = !DILocation(line: 231, column: 27, scope: !1095)
!1097 = !DILocation(line: 231, column: 14, scope: !1095)
!1098 = !DILocation(line: 232, column: 22, scope: !1092)
!1099 = !DILocation(line: 232, column: 9, scope: !1092)
!1100 = !DILocation(line: 233, column: 14, scope: !1101)
!1101 = distinct !DILexicalBlock(scope: !1092, file: !581, line: 233, column: 14)
!1102 = !DILocation(line: 233, column: 18, scope: !1101)
!1103 = !DILocation(line: 233, column: 21, scope: !1104)
!1104 = !DILexicalBlockFile(scope: !1101, file: !581, discriminator: 1)
!1105 = !DILocation(line: 233, column: 27, scope: !1104)
!1106 = !DILocation(line: 233, column: 14, scope: !1104)
!1107 = !DILocation(line: 234, column: 22, scope: !1101)
!1108 = !DILocation(line: 234, column: 9, scope: !1101)
!1109 = !DILocation(line: 235, column: 14, scope: !1110)
!1110 = distinct !DILexicalBlock(scope: !1101, file: !581, line: 235, column: 14)
!1111 = !DILocation(line: 235, column: 18, scope: !1110)
!1112 = !DILocation(line: 235, column: 21, scope: !1113)
!1113 = !DILexicalBlockFile(scope: !1110, file: !581, discriminator: 1)
!1114 = !DILocation(line: 235, column: 27, scope: !1113)
!1115 = !DILocation(line: 235, column: 14, scope: !1113)
!1116 = !DILocation(line: 236, column: 22, scope: !1110)
!1117 = !DILocation(line: 236, column: 9, scope: !1110)
!1118 = !DILocation(line: 237, column: 14, scope: !1119)
!1119 = distinct !DILexicalBlock(scope: !1110, file: !581, line: 237, column: 14)
!1120 = !DILocation(line: 237, column: 20, scope: !1119)
!1121 = !DILocation(line: 237, column: 14, scope: !1110)
!1122 = !DILocation(line: 238, column: 22, scope: !1119)
!1123 = !DILocation(line: 238, column: 9, scope: !1119)
!1124 = !DILocation(line: 239, column: 14, scope: !1125)
!1125 = distinct !DILexicalBlock(scope: !1119, file: !581, line: 239, column: 14)
!1126 = !DILocation(line: 239, column: 20, scope: !1125)
!1127 = !DILocation(line: 239, column: 14, scope: !1119)
!1128 = !DILocation(line: 240, column: 22, scope: !1125)
!1129 = !DILocation(line: 240, column: 9, scope: !1125)
!1130 = !DILocation(line: 241, column: 14, scope: !1131)
!1131 = distinct !DILexicalBlock(scope: !1125, file: !581, line: 241, column: 14)
!1132 = !DILocation(line: 241, column: 20, scope: !1131)
!1133 = !DILocation(line: 241, column: 14, scope: !1125)
!1134 = !DILocation(line: 242, column: 22, scope: !1131)
!1135 = !DILocation(line: 242, column: 9, scope: !1131)
!1136 = !DILocation(line: 243, column: 14, scope: !1137)
!1137 = distinct !DILexicalBlock(scope: !1131, file: !581, line: 243, column: 14)
!1138 = !DILocation(line: 243, column: 20, scope: !1137)
!1139 = !DILocation(line: 243, column: 14, scope: !1131)
!1140 = !DILocation(line: 244, column: 22, scope: !1137)
!1141 = !DILocation(line: 244, column: 9, scope: !1137)
!1142 = !DILocation(line: 246, column: 9, scope: !1137)
!1143 = !DILocation(line: 247, column: 51, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !924, file: !581, line: 247, column: 9)
!1145 = !DILocation(line: 247, column: 31, scope: !1144)
!1146 = !DILocation(line: 247, column: 67, scope: !1144)
!1147 = !DILocation(line: 247, column: 72, scope: !1144)
!1148 = !DILocation(line: 247, column: 84, scope: !1144)
!1149 = !DILocation(line: 247, column: 16, scope: !1150)
!1150 = !DILexicalBlockFile(scope: !1144, file: !581, discriminator: 1)
!1151 = !DILocation(line: 247, column: 14, scope: !1144)
!1152 = !DILocation(line: 247, column: 97, scope: !1144)
!1153 = !DILocation(line: 247, column: 9, scope: !924)
!1154 = !DILocation(line: 248, column: 16, scope: !1144)
!1155 = !DILocation(line: 248, column: 9, scope: !1144)
!1156 = !DILocation(line: 250, column: 5, scope: !924)
!1157 = !DILocation(line: 251, column: 1, scope: !924)
!1158 = distinct !DISubprogram(name: "filter_frame", scope: !581, file: !581, line: 1204, type: !395, isLocal: true, isDefinition: true, scopeLine: 1205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!1159 = !DILocalVariable(name: "inlink", arg: 1, scope: !1158, file: !581, line: 1204, type: !387)
!1160 = !DILocation(line: 1204, column: 39, scope: !1158)
!1161 = !DILocalVariable(name: "in", arg: 2, scope: !1158, file: !581, line: 1204, type: !285)
!1162 = !DILocation(line: 1204, column: 56, scope: !1158)
!1163 = !DILocalVariable(name: "ctx", scope: !1158, file: !581, line: 1206, type: !173)
!1164 = !DILocation(line: 1206, column: 22, scope: !1158)
!1165 = !DILocation(line: 1206, column: 28, scope: !1158)
!1166 = !DILocation(line: 1206, column: 36, scope: !1158)
!1167 = !DILocalVariable(name: "s", scope: !1158, file: !581, line: 1207, type: !817)
!1168 = !DILocation(line: 1207, column: 25, scope: !1158)
!1169 = !DILocation(line: 1207, column: 29, scope: !1158)
!1170 = !DILocation(line: 1207, column: 34, scope: !1158)
!1171 = !DILocalVariable(name: "outlink", scope: !1158, file: !581, line: 1208, type: !387)
!1172 = !DILocation(line: 1208, column: 19, scope: !1158)
!1173 = !DILocation(line: 1208, column: 29, scope: !1158)
!1174 = !DILocation(line: 1208, column: 34, scope: !1158)
!1175 = !DILocalVariable(name: "out", scope: !1158, file: !581, line: 1209, type: !285)
!1176 = !DILocation(line: 1209, column: 14, scope: !1158)
!1177 = !DILocalVariable(name: "plane", scope: !1158, file: !581, line: 1210, type: !200)
!1178 = !DILocation(line: 1210, column: 9, scope: !1158)
!1179 = !DILocation(line: 1212, column: 9, scope: !1180)
!1180 = distinct !DILexicalBlock(scope: !1158, file: !581, line: 1212, column: 9)
!1181 = !DILocation(line: 1212, column: 12, scope: !1180)
!1182 = !DILocation(line: 1212, column: 9, scope: !1158)
!1183 = !DILocation(line: 1213, column: 18, scope: !1184)
!1184 = distinct !DILexicalBlock(scope: !1180, file: !581, line: 1212, column: 24)
!1185 = !DILocation(line: 1213, column: 21, scope: !1184)
!1186 = !DILocation(line: 1213, column: 27, scope: !1184)
!1187 = !DILocation(line: 1213, column: 32, scope: !1184)
!1188 = !DILocation(line: 1213, column: 38, scope: !1184)
!1189 = !DILocation(line: 1213, column: 41, scope: !1184)
!1190 = !DILocation(line: 1213, column: 36, scope: !1184)
!1191 = !DILocation(line: 1213, column: 52, scope: !1184)
!1192 = !DILocation(line: 1213, column: 9, scope: !1184)
!1193 = !DILocation(line: 1213, column: 12, scope: !1184)
!1194 = !DILocation(line: 1213, column: 15, scope: !1184)
!1195 = !DILocation(line: 1214, column: 5, scope: !1184)
!1196 = !DILocation(line: 1215, column: 17, scope: !1197)
!1197 = distinct !DILexicalBlock(scope: !1180, file: !581, line: 1214, column: 12)
!1198 = !DILocation(line: 1215, column: 21, scope: !1197)
!1199 = !DILocation(line: 1215, column: 9, scope: !1197)
!1200 = !DILocation(line: 1218, column: 22, scope: !1201)
!1201 = distinct !DILexicalBlock(scope: !1197, file: !581, line: 1215, column: 33)
!1202 = !DILocation(line: 1218, column: 25, scope: !1201)
!1203 = !DILocation(line: 1218, column: 31, scope: !1201)
!1204 = !DILocation(line: 1218, column: 36, scope: !1201)
!1205 = !DILocation(line: 1218, column: 40, scope: !1201)
!1206 = !DILocation(line: 1218, column: 13, scope: !1201)
!1207 = !DILocation(line: 1218, column: 16, scope: !1201)
!1208 = !DILocation(line: 1218, column: 19, scope: !1201)
!1209 = !DILocation(line: 1219, column: 13, scope: !1201)
!1210 = !DILocation(line: 1219, column: 13, scope: !1211)
!1211 = !DILexicalBlockFile(scope: !1201, file: !581, discriminator: 1)
!1212 = !DILocation(line: 1222, column: 22, scope: !1201)
!1213 = !DILocation(line: 1222, column: 25, scope: !1201)
!1214 = !DILocation(line: 1222, column: 31, scope: !1201)
!1215 = !DILocation(line: 1222, column: 36, scope: !1201)
!1216 = !DILocation(line: 1222, column: 40, scope: !1201)
!1217 = !DILocation(line: 1222, column: 13, scope: !1201)
!1218 = !DILocation(line: 1222, column: 16, scope: !1201)
!1219 = !DILocation(line: 1222, column: 19, scope: !1201)
!1220 = !DILocation(line: 1223, column: 9, scope: !1201)
!1221 = !DILocation(line: 1226, column: 31, scope: !1158)
!1222 = !DILocation(line: 1226, column: 40, scope: !1158)
!1223 = !DILocation(line: 1226, column: 49, scope: !1158)
!1224 = !DILocation(line: 1226, column: 52, scope: !1158)
!1225 = !DILocation(line: 1226, column: 61, scope: !1158)
!1226 = !DILocation(line: 1226, column: 11, scope: !1158)
!1227 = !DILocation(line: 1226, column: 9, scope: !1158)
!1228 = !DILocation(line: 1227, column: 10, scope: !1229)
!1229 = distinct !DILexicalBlock(scope: !1158, file: !581, line: 1227, column: 9)
!1230 = !DILocation(line: 1227, column: 9, scope: !1158)
!1231 = !DILocation(line: 1228, column: 9, scope: !1232)
!1232 = distinct !DILexicalBlock(scope: !1229, file: !581, line: 1227, column: 15)
!1233 = !DILocation(line: 1229, column: 9, scope: !1232)
!1234 = !DILocation(line: 1231, column: 25, scope: !1158)
!1235 = !DILocation(line: 1231, column: 30, scope: !1158)
!1236 = !DILocation(line: 1231, column: 5, scope: !1158)
!1237 = !DILocation(line: 1233, column: 5, scope: !1158)
!1238 = !DILocation(line: 1233, column: 8, scope: !1158)
!1239 = !DILocation(line: 1233, column: 20, scope: !1158)
!1240 = !DILocation(line: 1233, column: 23, scope: !1158)
!1241 = !DILocation(line: 1233, column: 27, scope: !1158)
!1242 = !DILocation(line: 1233, column: 32, scope: !1158)
!1243 = !DILocation(line: 1233, column: 35, scope: !1158)
!1244 = !DILocation(line: 1234, column: 5, scope: !1158)
!1245 = !DILocation(line: 1234, column: 8, scope: !1158)
!1246 = !DILocation(line: 1234, column: 19, scope: !1158)
!1247 = !DILocation(line: 1234, column: 22, scope: !1158)
!1248 = !DILocation(line: 1234, column: 27, scope: !1158)
!1249 = !DILocation(line: 1234, column: 30, scope: !1158)
!1250 = !DILocation(line: 1234, column: 33, scope: !1158)
!1251 = !DILocation(line: 1234, column: 36, scope: !1158)
!1252 = !DILocation(line: 1234, column: 39, scope: !1158)
!1253 = !DILocation(line: 1234, column: 42, scope: !1158)
!1254 = !DILocation(line: 1234, column: 46, scope: !1158)
!1255 = !DILocation(line: 1234, column: 49, scope: !1158)
!1256 = !DILocation(line: 1236, column: 16, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1158, file: !581, line: 1236, column: 5)
!1258 = !DILocation(line: 1236, column: 10, scope: !1257)
!1259 = !DILocation(line: 1236, column: 21, scope: !1260)
!1260 = !DILexicalBlockFile(scope: !1261, file: !581, discriminator: 1)
!1261 = distinct !DILexicalBlock(scope: !1257, file: !581, line: 1236, column: 5)
!1262 = !DILocation(line: 1236, column: 27, scope: !1260)
!1263 = !DILocation(line: 1236, column: 5, scope: !1260)
!1264 = !DILocation(line: 1237, column: 23, scope: !1265)
!1265 = distinct !DILexicalBlock(scope: !1266, file: !581, line: 1237, column: 13)
!1266 = distinct !DILexicalBlock(scope: !1261, file: !581, line: 1236, column: 41)
!1267 = !DILocation(line: 1237, column: 13, scope: !1265)
!1268 = !DILocation(line: 1237, column: 18, scope: !1265)
!1269 = !DILocation(line: 1237, column: 13, scope: !1266)
!1270 = !DILocation(line: 1238, column: 34, scope: !1271)
!1271 = distinct !DILexicalBlock(scope: !1265, file: !581, line: 1237, column: 31)
!1272 = !DILocation(line: 1238, column: 37, scope: !1271)
!1273 = !DILocation(line: 1238, column: 42, scope: !1271)
!1274 = !DILocation(line: 1238, column: 63, scope: !1271)
!1275 = !DILocation(line: 1238, column: 49, scope: !1271)
!1276 = !DILocation(line: 1238, column: 54, scope: !1271)
!1277 = !DILocation(line: 1238, column: 47, scope: !1271)
!1278 = !DILocation(line: 1238, column: 23, scope: !1271)
!1279 = !DILocation(line: 1238, column: 13, scope: !1271)
!1280 = !DILocation(line: 1238, column: 18, scope: !1271)
!1281 = !DILocation(line: 1238, column: 30, scope: !1271)
!1282 = !DILocation(line: 1239, column: 51, scope: !1271)
!1283 = !DILocation(line: 1239, column: 37, scope: !1271)
!1284 = !DILocation(line: 1239, column: 42, scope: !1271)
!1285 = !DILocation(line: 1239, column: 36, scope: !1271)
!1286 = !DILocation(line: 1239, column: 27, scope: !1271)
!1287 = !DILocation(line: 1239, column: 13, scope: !1271)
!1288 = !DILocation(line: 1239, column: 18, scope: !1271)
!1289 = !DILocation(line: 1239, column: 34, scope: !1271)
!1290 = !DILocation(line: 1240, column: 9, scope: !1271)
!1291 = !DILocation(line: 1241, column: 5, scope: !1266)
!1292 = !DILocation(line: 1236, column: 37, scope: !1293)
!1293 = !DILexicalBlockFile(scope: !1261, file: !581, discriminator: 2)
!1294 = !DILocation(line: 1236, column: 5, scope: !1293)
!1295 = distinct !{!1295, !1296}
!1296 = !DILocation(line: 1236, column: 5, scope: !1158)
!1297 = !DILocation(line: 1243, column: 5, scope: !1158)
!1298 = !DILocation(line: 1244, column: 28, scope: !1158)
!1299 = !DILocation(line: 1244, column: 37, scope: !1158)
!1300 = !DILocation(line: 1244, column: 12, scope: !1158)
!1301 = !DILocation(line: 1244, column: 5, scope: !1158)
!1302 = !DILocation(line: 1245, column: 1, scope: !1158)
!1303 = distinct !DISubprogram(name: "config_input", scope: !581, file: !581, line: 1247, type: !399, isLocal: true, isDefinition: true, scopeLine: 1248, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!1304 = !DILocalVariable(name: "inlink", arg: 1, scope: !1303, file: !581, line: 1247, type: !387)
!1305 = !DILocation(line: 1247, column: 39, scope: !1303)
!1306 = !DILocalVariable(name: "desc", scope: !1303, file: !581, line: 1249, type: !935)
!1307 = !DILocation(line: 1249, column: 31, scope: !1303)
!1308 = !DILocation(line: 1249, column: 58, scope: !1303)
!1309 = !DILocation(line: 1249, column: 66, scope: !1303)
!1310 = !DILocation(line: 1249, column: 38, scope: !1303)
!1311 = !DILocalVariable(name: "ctx", scope: !1303, file: !581, line: 1250, type: !173)
!1312 = !DILocation(line: 1250, column: 22, scope: !1303)
!1313 = !DILocation(line: 1250, column: 28, scope: !1303)
!1314 = !DILocation(line: 1250, column: 36, scope: !1303)
!1315 = !DILocalVariable(name: "s", scope: !1303, file: !581, line: 1251, type: !817)
!1316 = !DILocation(line: 1251, column: 25, scope: !1303)
!1317 = !DILocation(line: 1251, column: 29, scope: !1303)
!1318 = !DILocation(line: 1251, column: 34, scope: !1303)
!1319 = !DILocation(line: 1253, column: 19, scope: !1303)
!1320 = !DILocation(line: 1253, column: 25, scope: !1303)
!1321 = !DILocation(line: 1253, column: 31, scope: !1303)
!1322 = !DILocation(line: 1253, column: 17, scope: !1303)
!1323 = !DILocation(line: 1253, column: 5, scope: !1303)
!1324 = !DILocation(line: 1253, column: 8, scope: !1303)
!1325 = !DILocation(line: 1253, column: 15, scope: !1303)
!1326 = !DILocation(line: 1254, column: 20, scope: !1303)
!1327 = !DILocation(line: 1254, column: 26, scope: !1303)
!1328 = !DILocation(line: 1254, column: 34, scope: !1303)
!1329 = !DILocation(line: 1254, column: 17, scope: !1303)
!1330 = !DILocation(line: 1254, column: 5, scope: !1303)
!1331 = !DILocation(line: 1254, column: 8, scope: !1303)
!1332 = !DILocation(line: 1254, column: 13, scope: !1303)
!1333 = !DILocation(line: 1255, column: 15, scope: !1303)
!1334 = !DILocation(line: 1255, column: 18, scope: !1303)
!1335 = !DILocation(line: 1255, column: 23, scope: !1303)
!1336 = !DILocation(line: 1255, column: 5, scope: !1303)
!1337 = !DILocation(line: 1255, column: 8, scope: !1303)
!1338 = !DILocation(line: 1255, column: 13, scope: !1303)
!1339 = !DILocation(line: 1256, column: 16, scope: !1303)
!1340 = !DILocation(line: 1256, column: 22, scope: !1303)
!1341 = !DILocation(line: 1256, column: 30, scope: !1303)
!1342 = !DILocation(line: 1256, column: 5, scope: !1303)
!1343 = !DILocation(line: 1256, column: 8, scope: !1303)
!1344 = !DILocation(line: 1256, column: 14, scope: !1303)
!1345 = !DILocation(line: 1257, column: 15, scope: !1303)
!1346 = !DILocation(line: 1257, column: 18, scope: !1303)
!1347 = !DILocation(line: 1257, column: 32, scope: !1303)
!1348 = !DILocation(line: 1257, column: 35, scope: !1303)
!1349 = !DILocation(line: 1257, column: 40, scope: !1303)
!1350 = !DILocation(line: 1257, column: 31, scope: !1303)
!1351 = !DILocation(line: 1257, column: 29, scope: !1303)
!1352 = !DILocation(line: 1257, column: 5, scope: !1303)
!1353 = !DILocation(line: 1257, column: 8, scope: !1303)
!1354 = !DILocation(line: 1257, column: 13, scope: !1303)
!1355 = !DILocation(line: 1258, column: 15, scope: !1303)
!1356 = !DILocation(line: 1258, column: 18, scope: !1303)
!1357 = !DILocation(line: 1258, column: 32, scope: !1303)
!1358 = !DILocation(line: 1258, column: 35, scope: !1303)
!1359 = !DILocation(line: 1258, column: 40, scope: !1303)
!1360 = !DILocation(line: 1258, column: 31, scope: !1303)
!1361 = !DILocation(line: 1258, column: 29, scope: !1303)
!1362 = !DILocation(line: 1258, column: 5, scope: !1303)
!1363 = !DILocation(line: 1258, column: 8, scope: !1303)
!1364 = !DILocation(line: 1258, column: 13, scope: !1303)
!1365 = !DILocation(line: 1260, column: 9, scope: !1366)
!1366 = distinct !DILexicalBlock(scope: !1303, file: !581, line: 1260, column: 9)
!1367 = !DILocation(line: 1260, column: 12, scope: !1366)
!1368 = !DILocation(line: 1260, column: 19, scope: !1366)
!1369 = !DILocation(line: 1260, column: 22, scope: !1366)
!1370 = !DILocation(line: 1260, column: 17, scope: !1366)
!1371 = !DILocation(line: 1260, column: 9, scope: !1303)
!1372 = !DILocation(line: 1261, column: 16, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1366, file: !581, line: 1260, column: 28)
!1374 = !DILocation(line: 1261, column: 9, scope: !1373)
!1375 = !DILocation(line: 1262, column: 9, scope: !1373)
!1376 = !DILocation(line: 1265, column: 9, scope: !1377)
!1377 = distinct !DILexicalBlock(scope: !1303, file: !581, line: 1265, column: 9)
!1378 = !DILocation(line: 1265, column: 12, scope: !1377)
!1379 = !DILocation(line: 1265, column: 17, scope: !1377)
!1380 = !DILocation(line: 1265, column: 25, scope: !1377)
!1381 = !DILocation(line: 1265, column: 28, scope: !1382)
!1382 = !DILexicalBlockFile(scope: !1377, file: !581, discriminator: 1)
!1383 = !DILocation(line: 1265, column: 31, scope: !1382)
!1384 = !DILocation(line: 1265, column: 9, scope: !1382)
!1385 = !DILocation(line: 1266, column: 9, scope: !1377)
!1386 = !DILocation(line: 1266, column: 12, scope: !1377)
!1387 = !DILocation(line: 1266, column: 15, scope: !1377)
!1388 = !DILocation(line: 1268, column: 14, scope: !1389)
!1389 = distinct !DILexicalBlock(scope: !1390, file: !581, line: 1268, column: 13)
!1390 = distinct !DILexicalBlock(scope: !1377, file: !581, line: 1267, column: 10)
!1391 = !DILocation(line: 1268, column: 17, scope: !1389)
!1392 = !DILocation(line: 1268, column: 19, scope: !1389)
!1393 = !DILocation(line: 1268, column: 24, scope: !1389)
!1394 = !DILocation(line: 1268, column: 27, scope: !1395)
!1395 = !DILexicalBlockFile(scope: !1389, file: !581, discriminator: 1)
!1396 = !DILocation(line: 1268, column: 30, scope: !1395)
!1397 = !DILocation(line: 1268, column: 32, scope: !1395)
!1398 = !DILocation(line: 1268, column: 38, scope: !1395)
!1399 = !DILocation(line: 1268, column: 42, scope: !1400)
!1400 = !DILexicalBlockFile(scope: !1389, file: !581, discriminator: 2)
!1401 = !DILocation(line: 1268, column: 45, scope: !1400)
!1402 = !DILocation(line: 1268, column: 47, scope: !1400)
!1403 = !DILocation(line: 1268, column: 52, scope: !1400)
!1404 = !DILocation(line: 1268, column: 55, scope: !1405)
!1405 = !DILexicalBlockFile(scope: !1389, file: !581, discriminator: 3)
!1406 = !DILocation(line: 1268, column: 58, scope: !1405)
!1407 = !DILocation(line: 1268, column: 60, scope: !1405)
!1408 = !DILocation(line: 1268, column: 13, scope: !1405)
!1409 = !DILocation(line: 1269, column: 13, scope: !1389)
!1410 = !DILocation(line: 1269, column: 16, scope: !1389)
!1411 = !DILocation(line: 1269, column: 19, scope: !1389)
!1412 = !DILocation(line: 1270, column: 19, scope: !1413)
!1413 = distinct !DILexicalBlock(scope: !1389, file: !581, line: 1270, column: 18)
!1414 = !DILocation(line: 1270, column: 22, scope: !1413)
!1415 = !DILocation(line: 1270, column: 24, scope: !1413)
!1416 = !DILocation(line: 1270, column: 29, scope: !1413)
!1417 = !DILocation(line: 1270, column: 32, scope: !1418)
!1418 = !DILexicalBlockFile(scope: !1413, file: !581, discriminator: 1)
!1419 = !DILocation(line: 1270, column: 35, scope: !1418)
!1420 = !DILocation(line: 1270, column: 37, scope: !1418)
!1421 = !DILocation(line: 1270, column: 43, scope: !1418)
!1422 = !DILocation(line: 1270, column: 47, scope: !1423)
!1423 = !DILexicalBlockFile(scope: !1413, file: !581, discriminator: 2)
!1424 = !DILocation(line: 1270, column: 50, scope: !1423)
!1425 = !DILocation(line: 1270, column: 52, scope: !1423)
!1426 = !DILocation(line: 1270, column: 57, scope: !1423)
!1427 = !DILocation(line: 1270, column: 60, scope: !1428)
!1428 = !DILexicalBlockFile(scope: !1413, file: !581, discriminator: 3)
!1429 = !DILocation(line: 1270, column: 63, scope: !1428)
!1430 = !DILocation(line: 1270, column: 65, scope: !1428)
!1431 = !DILocation(line: 1270, column: 18, scope: !1428)
!1432 = !DILocation(line: 1271, column: 13, scope: !1413)
!1433 = !DILocation(line: 1271, column: 16, scope: !1413)
!1434 = !DILocation(line: 1271, column: 19, scope: !1413)
!1435 = !DILocation(line: 1272, column: 19, scope: !1436)
!1436 = distinct !DILexicalBlock(scope: !1413, file: !581, line: 1272, column: 18)
!1437 = !DILocation(line: 1272, column: 22, scope: !1436)
!1438 = !DILocation(line: 1272, column: 24, scope: !1436)
!1439 = !DILocation(line: 1272, column: 29, scope: !1436)
!1440 = !DILocation(line: 1272, column: 32, scope: !1441)
!1441 = !DILexicalBlockFile(scope: !1436, file: !581, discriminator: 1)
!1442 = !DILocation(line: 1272, column: 35, scope: !1441)
!1443 = !DILocation(line: 1272, column: 37, scope: !1441)
!1444 = !DILocation(line: 1272, column: 43, scope: !1441)
!1445 = !DILocation(line: 1272, column: 47, scope: !1446)
!1446 = !DILexicalBlockFile(scope: !1436, file: !581, discriminator: 2)
!1447 = !DILocation(line: 1272, column: 50, scope: !1446)
!1448 = !DILocation(line: 1272, column: 52, scope: !1446)
!1449 = !DILocation(line: 1272, column: 57, scope: !1446)
!1450 = !DILocation(line: 1272, column: 60, scope: !1451)
!1451 = !DILexicalBlockFile(scope: !1436, file: !581, discriminator: 3)
!1452 = !DILocation(line: 1272, column: 63, scope: !1451)
!1453 = !DILocation(line: 1272, column: 65, scope: !1451)
!1454 = !DILocation(line: 1272, column: 18, scope: !1451)
!1455 = !DILocation(line: 1273, column: 13, scope: !1436)
!1456 = !DILocation(line: 1273, column: 16, scope: !1436)
!1457 = !DILocation(line: 1273, column: 19, scope: !1436)
!1458 = !DILocation(line: 1276, column: 9, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !1303, file: !581, line: 1276, column: 9)
!1460 = !DILocation(line: 1276, column: 12, scope: !1459)
!1461 = !DILocation(line: 1276, column: 17, scope: !1459)
!1462 = !DILocation(line: 1276, column: 9, scope: !1303)
!1463 = !DILocation(line: 1277, column: 9, scope: !1459)
!1464 = !DILocation(line: 1277, column: 12, scope: !1459)
!1465 = !DILocation(line: 1277, column: 24, scope: !1459)
!1466 = !DILocation(line: 1279, column: 9, scope: !1459)
!1467 = !DILocation(line: 1279, column: 12, scope: !1459)
!1468 = !DILocation(line: 1279, column: 24, scope: !1459)
!1469 = !DILocation(line: 1281, column: 5, scope: !1303)
!1470 = !DILocation(line: 1281, column: 8, scope: !1303)
!1471 = !DILocation(line: 1281, column: 19, scope: !1303)
!1472 = !DILocation(line: 1283, column: 9, scope: !1473)
!1473 = distinct !DILexicalBlock(scope: !1303, file: !581, line: 1283, column: 9)
!1474 = !DILocation(line: 1283, column: 12, scope: !1473)
!1475 = !DILocation(line: 1283, column: 19, scope: !1473)
!1476 = !DILocation(line: 1283, column: 22, scope: !1477)
!1477 = !DILexicalBlockFile(scope: !1473, file: !581, discriminator: 1)
!1478 = !DILocation(line: 1283, column: 25, scope: !1477)
!1479 = !DILocation(line: 1283, column: 30, scope: !1477)
!1480 = !DILocation(line: 1283, column: 9, scope: !1477)
!1481 = !DILocation(line: 1284, column: 13, scope: !1482)
!1482 = distinct !DILexicalBlock(scope: !1483, file: !581, line: 1284, column: 13)
!1483 = distinct !DILexicalBlock(scope: !1473, file: !581, line: 1283, column: 38)
!1484 = !DILocation(line: 1284, column: 16, scope: !1482)
!1485 = !DILocation(line: 1284, column: 26, scope: !1482)
!1486 = !DILocation(line: 1284, column: 13, scope: !1483)
!1487 = !DILocation(line: 1285, column: 13, scope: !1482)
!1488 = !DILocation(line: 1285, column: 16, scope: !1482)
!1489 = !DILocation(line: 1285, column: 27, scope: !1482)
!1490 = !DILocation(line: 1286, column: 18, scope: !1491)
!1491 = distinct !DILexicalBlock(scope: !1482, file: !581, line: 1286, column: 18)
!1492 = !DILocation(line: 1286, column: 21, scope: !1491)
!1493 = !DILocation(line: 1286, column: 31, scope: !1491)
!1494 = !DILocation(line: 1286, column: 18, scope: !1482)
!1495 = !DILocation(line: 1287, column: 13, scope: !1491)
!1496 = !DILocation(line: 1287, column: 16, scope: !1491)
!1497 = !DILocation(line: 1287, column: 27, scope: !1491)
!1498 = !DILocation(line: 1288, column: 5, scope: !1483)
!1499 = !DILocation(line: 1288, column: 16, scope: !1500)
!1500 = !DILexicalBlockFile(scope: !1501, file: !581, discriminator: 1)
!1501 = distinct !DILexicalBlock(scope: !1473, file: !581, line: 1288, column: 16)
!1502 = !DILocation(line: 1288, column: 19, scope: !1500)
!1503 = !DILocation(line: 1289, column: 13, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1505, file: !581, line: 1289, column: 13)
!1505 = distinct !DILexicalBlock(scope: !1501, file: !581, line: 1288, column: 27)
!1506 = !DILocation(line: 1289, column: 16, scope: !1504)
!1507 = !DILocation(line: 1289, column: 26, scope: !1504)
!1508 = !DILocation(line: 1289, column: 13, scope: !1505)
!1509 = !DILocation(line: 1290, column: 13, scope: !1504)
!1510 = !DILocation(line: 1290, column: 16, scope: !1504)
!1511 = !DILocation(line: 1290, column: 27, scope: !1504)
!1512 = !DILocation(line: 1291, column: 18, scope: !1513)
!1513 = distinct !DILexicalBlock(scope: !1504, file: !581, line: 1291, column: 18)
!1514 = !DILocation(line: 1291, column: 21, scope: !1513)
!1515 = !DILocation(line: 1291, column: 31, scope: !1513)
!1516 = !DILocation(line: 1291, column: 18, scope: !1504)
!1517 = !DILocation(line: 1292, column: 13, scope: !1513)
!1518 = !DILocation(line: 1292, column: 16, scope: !1513)
!1519 = !DILocation(line: 1292, column: 27, scope: !1513)
!1520 = !DILocation(line: 1293, column: 5, scope: !1505)
!1521 = !DILocation(line: 1295, column: 22, scope: !1303)
!1522 = !DILocation(line: 1295, column: 25, scope: !1303)
!1523 = !DILocation(line: 1295, column: 38, scope: !1303)
!1524 = !DILocation(line: 1295, column: 41, scope: !1303)
!1525 = !DILocation(line: 1295, column: 46, scope: !1303)
!1526 = !DILocation(line: 1295, column: 37, scope: !1303)
!1527 = !DILocation(line: 1295, column: 35, scope: !1303)
!1528 = !DILocation(line: 1295, column: 5, scope: !1303)
!1529 = !DILocation(line: 1295, column: 8, scope: !1303)
!1530 = !DILocation(line: 1295, column: 20, scope: !1303)
!1531 = !DILocation(line: 1297, column: 13, scope: !1303)
!1532 = !DILocation(line: 1297, column: 21, scope: !1303)
!1533 = !DILocation(line: 1297, column: 5, scope: !1303)
!1534 = !DILocation(line: 1303, column: 9, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1303, file: !581, line: 1297, column: 29)
!1536 = !DILocation(line: 1303, column: 12, scope: !1535)
!1537 = !DILocation(line: 1303, column: 24, scope: !1535)
!1538 = !DILocation(line: 1304, column: 9, scope: !1535)
!1539 = !DILocation(line: 1304, column: 12, scope: !1535)
!1540 = !DILocation(line: 1304, column: 24, scope: !1535)
!1541 = !DILocation(line: 1305, column: 9, scope: !1535)
!1542 = !DILocation(line: 1305, column: 12, scope: !1535)
!1543 = !DILocation(line: 1305, column: 24, scope: !1535)
!1544 = !DILocation(line: 1306, column: 9, scope: !1535)
!1545 = !DILocation(line: 1308, column: 9, scope: !1535)
!1546 = !DILocation(line: 1308, column: 12, scope: !1535)
!1547 = !DILocation(line: 1308, column: 24, scope: !1535)
!1548 = !DILocation(line: 1309, column: 26, scope: !1535)
!1549 = !DILocation(line: 1309, column: 29, scope: !1535)
!1550 = !DILocation(line: 1309, column: 34, scope: !1535)
!1551 = !DILocation(line: 1309, column: 38, scope: !1535)
!1552 = !DILocation(line: 1309, column: 9, scope: !1535)
!1553 = !DILocation(line: 1309, column: 12, scope: !1535)
!1554 = !DILocation(line: 1309, column: 24, scope: !1535)
!1555 = !DILocation(line: 1310, column: 26, scope: !1535)
!1556 = !DILocation(line: 1310, column: 29, scope: !1535)
!1557 = !DILocation(line: 1310, column: 34, scope: !1535)
!1558 = !DILocation(line: 1310, column: 38, scope: !1535)
!1559 = !DILocation(line: 1310, column: 9, scope: !1535)
!1560 = !DILocation(line: 1310, column: 12, scope: !1535)
!1561 = !DILocation(line: 1310, column: 24, scope: !1535)
!1562 = !DILocation(line: 1311, column: 5, scope: !1535)
!1563 = !DILocation(line: 1313, column: 15, scope: !1303)
!1564 = !DILocation(line: 1313, column: 21, scope: !1303)
!1565 = !DILocation(line: 1313, column: 5, scope: !1303)
!1566 = !DILocation(line: 1313, column: 8, scope: !1303)
!1567 = !DILocation(line: 1313, column: 13, scope: !1303)
!1568 = !DILocation(line: 1314, column: 15, scope: !1303)
!1569 = !DILocation(line: 1314, column: 21, scope: !1303)
!1570 = !DILocation(line: 1314, column: 5, scope: !1303)
!1571 = !DILocation(line: 1314, column: 8, scope: !1303)
!1572 = !DILocation(line: 1314, column: 13, scope: !1303)
!1573 = !DILocation(line: 1315, column: 96, scope: !1303)
!1574 = !DILocation(line: 1315, column: 104, scope: !1303)
!1575 = !DILocation(line: 1315, column: 94, scope: !1303)
!1576 = !DILocation(line: 1315, column: 112, scope: !1303)
!1577 = !DILocation(line: 1315, column: 118, scope: !1303)
!1578 = !DILocation(line: 1315, column: 111, scope: !1303)
!1579 = !DILocation(line: 1315, column: 108, scope: !1303)
!1580 = !DILocation(line: 1315, column: 91, scope: !1303)
!1581 = !DILocation(line: 1315, column: 25, scope: !1303)
!1582 = !DILocation(line: 1315, column: 28, scope: !1303)
!1583 = !DILocation(line: 1315, column: 43, scope: !1303)
!1584 = !DILocation(line: 1315, column: 5, scope: !1303)
!1585 = !DILocation(line: 1315, column: 8, scope: !1303)
!1586 = !DILocation(line: 1315, column: 23, scope: !1303)
!1587 = !DILocation(line: 1316, column: 45, scope: !1303)
!1588 = !DILocation(line: 1316, column: 53, scope: !1303)
!1589 = !DILocation(line: 1316, column: 25, scope: !1303)
!1590 = !DILocation(line: 1316, column: 28, scope: !1303)
!1591 = !DILocation(line: 1316, column: 43, scope: !1303)
!1592 = !DILocation(line: 1316, column: 5, scope: !1303)
!1593 = !DILocation(line: 1316, column: 8, scope: !1303)
!1594 = !DILocation(line: 1316, column: 23, scope: !1303)
!1595 = !DILocation(line: 1317, column: 94, scope: !1303)
!1596 = !DILocation(line: 1317, column: 102, scope: !1303)
!1597 = !DILocation(line: 1317, column: 92, scope: !1303)
!1598 = !DILocation(line: 1317, column: 110, scope: !1303)
!1599 = !DILocation(line: 1317, column: 116, scope: !1303)
!1600 = !DILocation(line: 1317, column: 109, scope: !1303)
!1601 = !DILocation(line: 1317, column: 106, scope: !1303)
!1602 = !DILocation(line: 1317, column: 89, scope: !1303)
!1603 = !DILocation(line: 1317, column: 24, scope: !1303)
!1604 = !DILocation(line: 1317, column: 27, scope: !1303)
!1605 = !DILocation(line: 1317, column: 41, scope: !1303)
!1606 = !DILocation(line: 1317, column: 5, scope: !1303)
!1607 = !DILocation(line: 1317, column: 8, scope: !1303)
!1608 = !DILocation(line: 1317, column: 22, scope: !1303)
!1609 = !DILocation(line: 1318, column: 43, scope: !1303)
!1610 = !DILocation(line: 1318, column: 51, scope: !1303)
!1611 = !DILocation(line: 1318, column: 24, scope: !1303)
!1612 = !DILocation(line: 1318, column: 27, scope: !1303)
!1613 = !DILocation(line: 1318, column: 41, scope: !1303)
!1614 = !DILocation(line: 1318, column: 5, scope: !1303)
!1615 = !DILocation(line: 1318, column: 8, scope: !1303)
!1616 = !DILocation(line: 1318, column: 22, scope: !1303)
!1617 = !DILocation(line: 1320, column: 5, scope: !1303)
!1618 = !DILocation(line: 1321, column: 1, scope: !1303)
!1619 = distinct !DISubprogram(name: "vectorscope8", scope: !581, file: !581, line: 598, type: !1620, isLocal: true, isDefinition: true, scopeLine: 599, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{null, !817, !285, !285, !200}
!1622 = !DILocalVariable(name: "s", arg: 1, scope: !1619, file: !581, line: 598, type: !817)
!1623 = !DILocation(line: 598, column: 46, scope: !1619)
!1624 = !DILocalVariable(name: "in", arg: 2, scope: !1619, file: !581, line: 598, type: !285)
!1625 = !DILocation(line: 598, column: 58, scope: !1619)
!1626 = !DILocalVariable(name: "out", arg: 3, scope: !1619, file: !581, line: 598, type: !285)
!1627 = !DILocation(line: 598, column: 71, scope: !1619)
!1628 = !DILocalVariable(name: "pd", arg: 4, scope: !1619, file: !581, line: 598, type: !200)
!1629 = !DILocation(line: 598, column: 80, scope: !1619)
!1630 = !DILocalVariable(name: "src", scope: !1619, file: !581, line: 600, type: !790)
!1631 = !DILocation(line: 600, column: 28, scope: !1619)
!1632 = !DILocation(line: 600, column: 59, scope: !1619)
!1633 = !DILocation(line: 600, column: 63, scope: !1619)
!1634 = !DILocalVariable(name: "slinesizex", scope: !1619, file: !581, line: 601, type: !1635)
!1635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!1636 = !DILocation(line: 601, column: 15, scope: !1619)
!1637 = !DILocation(line: 601, column: 41, scope: !1619)
!1638 = !DILocation(line: 601, column: 44, scope: !1619)
!1639 = !DILocation(line: 601, column: 28, scope: !1619)
!1640 = !DILocation(line: 601, column: 32, scope: !1619)
!1641 = !DILocalVariable(name: "slinesizey", scope: !1619, file: !581, line: 602, type: !1635)
!1642 = !DILocation(line: 602, column: 15, scope: !1619)
!1643 = !DILocation(line: 602, column: 41, scope: !1619)
!1644 = !DILocation(line: 602, column: 44, scope: !1619)
!1645 = !DILocation(line: 602, column: 28, scope: !1619)
!1646 = !DILocation(line: 602, column: 32, scope: !1619)
!1647 = !DILocalVariable(name: "slinesized", scope: !1619, file: !581, line: 603, type: !1635)
!1648 = !DILocation(line: 603, column: 15, scope: !1619)
!1649 = !DILocation(line: 603, column: 41, scope: !1619)
!1650 = !DILocation(line: 603, column: 28, scope: !1619)
!1651 = !DILocation(line: 603, column: 32, scope: !1619)
!1652 = !DILocalVariable(name: "dlinesize", scope: !1619, file: !581, line: 604, type: !1635)
!1653 = !DILocation(line: 604, column: 15, scope: !1619)
!1654 = !DILocation(line: 604, column: 27, scope: !1619)
!1655 = !DILocation(line: 604, column: 32, scope: !1619)
!1656 = !DILocalVariable(name: "intensity", scope: !1619, file: !581, line: 605, type: !1635)
!1657 = !DILocation(line: 605, column: 15, scope: !1619)
!1658 = !DILocation(line: 605, column: 27, scope: !1619)
!1659 = !DILocation(line: 605, column: 30, scope: !1619)
!1660 = !DILocalVariable(name: "px", scope: !1619, file: !581, line: 606, type: !1635)
!1661 = !DILocation(line: 606, column: 15, scope: !1619)
!1662 = !DILocation(line: 606, column: 20, scope: !1619)
!1663 = !DILocation(line: 606, column: 23, scope: !1619)
!1664 = !DILocalVariable(name: "py", scope: !1619, file: !581, line: 606, type: !1635)
!1665 = !DILocation(line: 606, column: 26, scope: !1619)
!1666 = !DILocation(line: 606, column: 31, scope: !1619)
!1667 = !DILocation(line: 606, column: 34, scope: !1619)
!1668 = !DILocalVariable(name: "h", scope: !1619, file: !581, line: 607, type: !1635)
!1669 = !DILocation(line: 607, column: 15, scope: !1619)
!1670 = !DILocation(line: 607, column: 34, scope: !1619)
!1671 = !DILocation(line: 607, column: 19, scope: !1619)
!1672 = !DILocation(line: 607, column: 22, scope: !1619)
!1673 = !DILocalVariable(name: "w", scope: !1619, file: !581, line: 608, type: !1635)
!1674 = !DILocation(line: 608, column: 15, scope: !1619)
!1675 = !DILocation(line: 608, column: 33, scope: !1619)
!1676 = !DILocation(line: 608, column: 19, scope: !1619)
!1677 = !DILocation(line: 608, column: 22, scope: !1619)
!1678 = !DILocalVariable(name: "spx", scope: !1619, file: !581, line: 609, type: !792)
!1679 = !DILocation(line: 609, column: 20, scope: !1619)
!1680 = !DILocation(line: 609, column: 30, scope: !1619)
!1681 = !DILocation(line: 609, column: 26, scope: !1619)
!1682 = !DILocalVariable(name: "spy", scope: !1619, file: !581, line: 610, type: !792)
!1683 = !DILocation(line: 610, column: 20, scope: !1619)
!1684 = !DILocation(line: 610, column: 30, scope: !1619)
!1685 = !DILocation(line: 610, column: 26, scope: !1619)
!1686 = !DILocalVariable(name: "spd", scope: !1619, file: !581, line: 611, type: !792)
!1687 = !DILocation(line: 611, column: 20, scope: !1619)
!1688 = !DILocation(line: 611, column: 30, scope: !1619)
!1689 = !DILocation(line: 611, column: 26, scope: !1619)
!1690 = !DILocalVariable(name: "hsub", scope: !1619, file: !581, line: 612, type: !1635)
!1691 = !DILocation(line: 612, column: 15, scope: !1619)
!1692 = !DILocation(line: 612, column: 22, scope: !1619)
!1693 = !DILocation(line: 612, column: 25, scope: !1619)
!1694 = !DILocalVariable(name: "vsub", scope: !1619, file: !581, line: 613, type: !1635)
!1695 = !DILocation(line: 613, column: 15, scope: !1619)
!1696 = !DILocation(line: 613, column: 22, scope: !1619)
!1697 = !DILocation(line: 613, column: 25, scope: !1619)
!1698 = !DILocalVariable(name: "dst", scope: !1619, file: !581, line: 614, type: !300)
!1699 = !DILocation(line: 614, column: 15, scope: !1619)
!1700 = !DILocation(line: 614, column: 21, scope: !1619)
!1701 = !DILocation(line: 614, column: 26, scope: !1619)
!1702 = !DILocalVariable(name: "dpx", scope: !1619, file: !581, line: 615, type: !291)
!1703 = !DILocation(line: 615, column: 14, scope: !1619)
!1704 = !DILocation(line: 615, column: 24, scope: !1619)
!1705 = !DILocation(line: 615, column: 20, scope: !1619)
!1706 = !DILocalVariable(name: "dpy", scope: !1619, file: !581, line: 616, type: !291)
!1707 = !DILocation(line: 616, column: 14, scope: !1619)
!1708 = !DILocation(line: 616, column: 24, scope: !1619)
!1709 = !DILocation(line: 616, column: 20, scope: !1619)
!1710 = !DILocalVariable(name: "dpd", scope: !1619, file: !581, line: 617, type: !291)
!1711 = !DILocation(line: 617, column: 14, scope: !1619)
!1712 = !DILocation(line: 617, column: 24, scope: !1619)
!1713 = !DILocation(line: 617, column: 20, scope: !1619)
!1714 = !DILocalVariable(name: "tmin", scope: !1619, file: !581, line: 618, type: !1635)
!1715 = !DILocation(line: 618, column: 15, scope: !1619)
!1716 = !DILocation(line: 618, column: 22, scope: !1619)
!1717 = !DILocation(line: 618, column: 25, scope: !1619)
!1718 = !DILocalVariable(name: "tmax", scope: !1619, file: !581, line: 619, type: !1635)
!1719 = !DILocation(line: 619, column: 15, scope: !1619)
!1720 = !DILocation(line: 619, column: 22, scope: !1619)
!1721 = !DILocation(line: 619, column: 25, scope: !1619)
!1722 = !DILocalVariable(name: "i", scope: !1619, file: !581, line: 620, type: !200)
!1723 = !DILocation(line: 620, column: 9, scope: !1619)
!1724 = !DILocalVariable(name: "j", scope: !1619, file: !581, line: 620, type: !200)
!1725 = !DILocation(line: 620, column: 12, scope: !1619)
!1726 = !DILocalVariable(name: "k", scope: !1619, file: !581, line: 620, type: !200)
!1727 = !DILocation(line: 620, column: 15, scope: !1619)
!1728 = !DILocation(line: 622, column: 12, scope: !1729)
!1729 = distinct !DILexicalBlock(scope: !1619, file: !581, line: 622, column: 5)
!1730 = !DILocation(line: 622, column: 10, scope: !1729)
!1731 = !DILocation(line: 622, column: 17, scope: !1732)
!1732 = !DILexicalBlockFile(scope: !1733, file: !581, discriminator: 1)
!1733 = distinct !DILexicalBlock(scope: !1729, file: !581, line: 622, column: 5)
!1734 = !DILocation(line: 622, column: 19, scope: !1732)
!1735 = !DILocation(line: 622, column: 23, scope: !1732)
!1736 = !DILocation(line: 622, column: 30, scope: !1737)
!1737 = !DILexicalBlockFile(scope: !1733, file: !581, discriminator: 2)
!1738 = !DILocation(line: 622, column: 26, scope: !1737)
!1739 = !DILocation(line: 622, column: 23, scope: !1737)
!1740 = !DILocation(line: 622, column: 5, scope: !1741)
!1741 = !DILexicalBlockFile(scope: !1729, file: !581, discriminator: 3)
!1742 = !DILocation(line: 623, column: 16, scope: !1743)
!1743 = distinct !DILexicalBlock(scope: !1733, file: !581, line: 623, column: 9)
!1744 = !DILocation(line: 623, column: 14, scope: !1743)
!1745 = !DILocation(line: 623, column: 21, scope: !1746)
!1746 = !DILexicalBlockFile(scope: !1747, file: !581, discriminator: 1)
!1747 = distinct !DILexicalBlock(scope: !1743, file: !581, line: 623, column: 9)
!1748 = !DILocation(line: 623, column: 25, scope: !1746)
!1749 = !DILocation(line: 623, column: 30, scope: !1746)
!1750 = !DILocation(line: 623, column: 23, scope: !1746)
!1751 = !DILocation(line: 623, column: 9, scope: !1746)
!1752 = !DILocation(line: 624, column: 24, scope: !1747)
!1753 = !DILocation(line: 624, column: 20, scope: !1747)
!1754 = !DILocation(line: 624, column: 29, scope: !1747)
!1755 = !DILocation(line: 624, column: 47, scope: !1747)
!1756 = !DILocation(line: 624, column: 33, scope: !1747)
!1757 = !DILocation(line: 624, column: 38, scope: !1747)
!1758 = !DILocation(line: 624, column: 31, scope: !1747)
!1759 = !DILocation(line: 624, column: 27, scope: !1747)
!1760 = !DILocation(line: 625, column: 21, scope: !1747)
!1761 = !DILocation(line: 625, column: 24, scope: !1747)
!1762 = !DILocation(line: 625, column: 29, scope: !1747)
!1763 = !DILocation(line: 625, column: 38, scope: !1747)
!1764 = !DILocation(line: 625, column: 41, scope: !1746)
!1765 = !DILocation(line: 625, column: 44, scope: !1746)
!1766 = !DILocation(line: 625, column: 49, scope: !1746)
!1767 = !DILocation(line: 625, column: 60, scope: !1746)
!1768 = !DILocation(line: 625, column: 63, scope: !1769)
!1769 = !DILexicalBlockFile(scope: !1747, file: !581, discriminator: 2)
!1770 = !DILocation(line: 625, column: 68, scope: !1769)
!1771 = !DILocation(line: 625, column: 71, scope: !1769)
!1772 = !DILocation(line: 625, column: 65, scope: !1769)
!1773 = !DILocation(line: 625, column: 20, scope: !1769)
!1774 = !DILocation(line: 625, column: 20, scope: !1775)
!1775 = !DILexicalBlockFile(scope: !1747, file: !581, discriminator: 3)
!1776 = !DILocation(line: 625, column: 92, scope: !1777)
!1777 = !DILexicalBlockFile(scope: !1747, file: !581, discriminator: 4)
!1778 = !DILocation(line: 625, column: 80, scope: !1777)
!1779 = !DILocation(line: 625, column: 83, scope: !1777)
!1780 = !DILocation(line: 625, column: 20, scope: !1777)
!1781 = !DILocation(line: 625, column: 20, scope: !1782)
!1782 = !DILexicalBlockFile(scope: !1747, file: !581, discriminator: 5)
!1783 = !DILocation(line: 624, column: 13, scope: !1746)
!1784 = !DILocation(line: 625, column: 96, scope: !1782)
!1785 = !DILocation(line: 625, column: 101, scope: !1782)
!1786 = !DILocation(line: 623, column: 40, scope: !1769)
!1787 = !DILocation(line: 623, column: 9, scope: !1769)
!1788 = distinct !{!1788, !1789}
!1789 = !DILocation(line: 623, column: 9, scope: !1733)
!1790 = !DILocation(line: 625, column: 106, scope: !1791)
!1791 = !DILexicalBlockFile(scope: !1743, file: !581, discriminator: 6)
!1792 = !DILocation(line: 622, column: 35, scope: !1793)
!1793 = !DILexicalBlockFile(scope: !1733, file: !581, discriminator: 4)
!1794 = !DILocation(line: 622, column: 5, scope: !1793)
!1795 = distinct !{!1795, !1796}
!1796 = !DILocation(line: 622, column: 5, scope: !1619)
!1797 = !DILocation(line: 627, column: 13, scope: !1619)
!1798 = !DILocation(line: 627, column: 16, scope: !1619)
!1799 = !DILocation(line: 627, column: 5, scope: !1619)
!1800 = !DILocation(line: 631, column: 13, scope: !1801)
!1801 = distinct !DILexicalBlock(scope: !1802, file: !581, line: 631, column: 13)
!1802 = distinct !DILexicalBlock(scope: !1619, file: !581, line: 627, column: 22)
!1803 = !DILocation(line: 631, column: 16, scope: !1801)
!1804 = !DILocation(line: 631, column: 13, scope: !1802)
!1805 = !DILocation(line: 632, column: 20, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1807, file: !581, line: 632, column: 13)
!1807 = distinct !DILexicalBlock(scope: !1801, file: !581, line: 631, column: 24)
!1808 = !DILocation(line: 632, column: 18, scope: !1806)
!1809 = !DILocation(line: 632, column: 25, scope: !1810)
!1810 = !DILexicalBlockFile(scope: !1811, file: !581, discriminator: 1)
!1811 = distinct !DILexicalBlock(scope: !1806, file: !581, line: 632, column: 13)
!1812 = !DILocation(line: 632, column: 29, scope: !1810)
!1813 = !DILocation(line: 632, column: 27, scope: !1810)
!1814 = !DILocation(line: 632, column: 13, scope: !1810)
!1815 = !DILocalVariable(name: "iwx", scope: !1816, file: !581, line: 633, type: !1635)
!1816 = distinct !DILexicalBlock(scope: !1811, file: !581, line: 632, column: 37)
!1817 = !DILocation(line: 633, column: 27, scope: !1816)
!1818 = !DILocation(line: 633, column: 33, scope: !1816)
!1819 = !DILocation(line: 633, column: 37, scope: !1816)
!1820 = !DILocation(line: 633, column: 35, scope: !1816)
!1821 = !DILocalVariable(name: "iwy", scope: !1816, file: !581, line: 634, type: !1635)
!1822 = !DILocation(line: 634, column: 27, scope: !1816)
!1823 = !DILocation(line: 634, column: 33, scope: !1816)
!1824 = !DILocation(line: 634, column: 37, scope: !1816)
!1825 = !DILocation(line: 634, column: 35, scope: !1816)
!1826 = !DILocalVariable(name: "iwd", scope: !1816, file: !581, line: 635, type: !1635)
!1827 = !DILocation(line: 635, column: 27, scope: !1816)
!1828 = !DILocation(line: 635, column: 33, scope: !1816)
!1829 = !DILocation(line: 635, column: 37, scope: !1816)
!1830 = !DILocation(line: 635, column: 35, scope: !1816)
!1831 = !DILocation(line: 636, column: 24, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !1816, file: !581, line: 636, column: 17)
!1833 = !DILocation(line: 636, column: 22, scope: !1832)
!1834 = !DILocation(line: 636, column: 29, scope: !1835)
!1835 = !DILexicalBlockFile(scope: !1836, file: !581, discriminator: 1)
!1836 = distinct !DILexicalBlock(scope: !1832, file: !581, line: 636, column: 17)
!1837 = !DILocation(line: 636, column: 33, scope: !1835)
!1838 = !DILocation(line: 636, column: 31, scope: !1835)
!1839 = !DILocation(line: 636, column: 17, scope: !1835)
!1840 = !DILocalVariable(name: "x", scope: !1841, file: !581, line: 637, type: !1635)
!1841 = distinct !DILexicalBlock(scope: !1836, file: !581, line: 636, column: 41)
!1842 = !DILocation(line: 637, column: 31, scope: !1841)
!1843 = !DILocation(line: 637, column: 39, scope: !1841)
!1844 = !DILocation(line: 637, column: 45, scope: !1841)
!1845 = !DILocation(line: 637, column: 43, scope: !1841)
!1846 = !DILocation(line: 637, column: 35, scope: !1841)
!1847 = !DILocalVariable(name: "y", scope: !1841, file: !581, line: 638, type: !1635)
!1848 = !DILocation(line: 638, column: 31, scope: !1841)
!1849 = !DILocation(line: 638, column: 39, scope: !1841)
!1850 = !DILocation(line: 638, column: 45, scope: !1841)
!1851 = !DILocation(line: 638, column: 43, scope: !1841)
!1852 = !DILocation(line: 638, column: 35, scope: !1841)
!1853 = !DILocalVariable(name: "z", scope: !1841, file: !581, line: 639, type: !1635)
!1854 = !DILocation(line: 639, column: 31, scope: !1841)
!1855 = !DILocation(line: 639, column: 39, scope: !1841)
!1856 = !DILocation(line: 639, column: 45, scope: !1841)
!1857 = !DILocation(line: 639, column: 43, scope: !1841)
!1858 = !DILocation(line: 639, column: 35, scope: !1841)
!1859 = !DILocalVariable(name: "pos", scope: !1841, file: !581, line: 640, type: !1635)
!1860 = !DILocation(line: 640, column: 31, scope: !1841)
!1861 = !DILocation(line: 640, column: 37, scope: !1841)
!1862 = !DILocation(line: 640, column: 41, scope: !1841)
!1863 = !DILocation(line: 640, column: 39, scope: !1841)
!1864 = !DILocation(line: 640, column: 53, scope: !1841)
!1865 = !DILocation(line: 640, column: 51, scope: !1841)
!1866 = !DILocation(line: 642, column: 25, scope: !1867)
!1867 = distinct !DILexicalBlock(scope: !1841, file: !581, line: 642, column: 25)
!1868 = !DILocation(line: 642, column: 29, scope: !1867)
!1869 = !DILocation(line: 642, column: 27, scope: !1867)
!1870 = !DILocation(line: 642, column: 34, scope: !1867)
!1871 = !DILocation(line: 642, column: 37, scope: !1872)
!1872 = !DILexicalBlockFile(scope: !1867, file: !581, discriminator: 1)
!1873 = !DILocation(line: 642, column: 41, scope: !1872)
!1874 = !DILocation(line: 642, column: 39, scope: !1872)
!1875 = !DILocation(line: 642, column: 25, scope: !1872)
!1876 = !DILocation(line: 643, column: 25, scope: !1867)
!1877 = !DILocation(line: 645, column: 38, scope: !1841)
!1878 = !DILocation(line: 645, column: 34, scope: !1841)
!1879 = !DILocation(line: 645, column: 45, scope: !1841)
!1880 = !DILocation(line: 645, column: 43, scope: !1841)
!1881 = !DILocation(line: 645, column: 56, scope: !1841)
!1882 = !DILocation(line: 645, column: 33, scope: !1841)
!1883 = !DILocation(line: 645, column: 33, scope: !1884)
!1884 = !DILexicalBlockFile(scope: !1841, file: !581, discriminator: 1)
!1885 = !DILocation(line: 645, column: 79, scope: !1886)
!1886 = !DILexicalBlockFile(scope: !1841, file: !581, discriminator: 2)
!1887 = !DILocation(line: 645, column: 75, scope: !1886)
!1888 = !DILocation(line: 645, column: 86, scope: !1886)
!1889 = !DILocation(line: 645, column: 84, scope: !1886)
!1890 = !DILocation(line: 645, column: 33, scope: !1886)
!1891 = !DILocation(line: 645, column: 33, scope: !1892)
!1892 = !DILexicalBlockFile(scope: !1841, file: !581, discriminator: 3)
!1893 = !DILocation(line: 645, column: 32, scope: !1892)
!1894 = !DILocation(line: 645, column: 25, scope: !1892)
!1895 = !DILocation(line: 645, column: 21, scope: !1892)
!1896 = !DILocation(line: 645, column: 30, scope: !1892)
!1897 = !DILocation(line: 646, column: 17, scope: !1841)
!1898 = !DILocation(line: 636, column: 37, scope: !1899)
!1899 = !DILexicalBlockFile(scope: !1836, file: !581, discriminator: 2)
!1900 = !DILocation(line: 636, column: 17, scope: !1899)
!1901 = distinct !{!1901, !1902}
!1902 = !DILocation(line: 636, column: 17, scope: !1816)
!1903 = !DILocation(line: 647, column: 13, scope: !1816)
!1904 = !DILocation(line: 632, column: 33, scope: !1905)
!1905 = !DILexicalBlockFile(scope: !1811, file: !581, discriminator: 2)
!1906 = !DILocation(line: 632, column: 13, scope: !1905)
!1907 = distinct !{!1907, !1908}
!1908 = !DILocation(line: 632, column: 13, scope: !1807)
!1909 = !DILocation(line: 648, column: 9, scope: !1807)
!1910 = !DILocation(line: 649, column: 20, scope: !1911)
!1911 = distinct !DILexicalBlock(scope: !1912, file: !581, line: 649, column: 13)
!1912 = distinct !DILexicalBlock(scope: !1801, file: !581, line: 648, column: 16)
!1913 = !DILocation(line: 649, column: 18, scope: !1911)
!1914 = !DILocation(line: 649, column: 25, scope: !1915)
!1915 = !DILexicalBlockFile(scope: !1916, file: !581, discriminator: 1)
!1916 = distinct !DILexicalBlock(scope: !1911, file: !581, line: 649, column: 13)
!1917 = !DILocation(line: 649, column: 29, scope: !1915)
!1918 = !DILocation(line: 649, column: 27, scope: !1915)
!1919 = !DILocation(line: 649, column: 13, scope: !1915)
!1920 = !DILocalVariable(name: "iwx", scope: !1921, file: !581, line: 650, type: !1635)
!1921 = distinct !DILexicalBlock(scope: !1916, file: !581, line: 649, column: 37)
!1922 = !DILocation(line: 650, column: 27, scope: !1921)
!1923 = !DILocation(line: 650, column: 33, scope: !1921)
!1924 = !DILocation(line: 650, column: 37, scope: !1921)
!1925 = !DILocation(line: 650, column: 35, scope: !1921)
!1926 = !DILocalVariable(name: "iwy", scope: !1921, file: !581, line: 651, type: !1635)
!1927 = !DILocation(line: 651, column: 27, scope: !1921)
!1928 = !DILocation(line: 651, column: 33, scope: !1921)
!1929 = !DILocation(line: 651, column: 37, scope: !1921)
!1930 = !DILocation(line: 651, column: 35, scope: !1921)
!1931 = !DILocalVariable(name: "iwd", scope: !1921, file: !581, line: 652, type: !1635)
!1932 = !DILocation(line: 652, column: 27, scope: !1921)
!1933 = !DILocation(line: 652, column: 33, scope: !1921)
!1934 = !DILocation(line: 652, column: 37, scope: !1921)
!1935 = !DILocation(line: 652, column: 35, scope: !1921)
!1936 = !DILocation(line: 653, column: 24, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1921, file: !581, line: 653, column: 17)
!1938 = !DILocation(line: 653, column: 22, scope: !1937)
!1939 = !DILocation(line: 653, column: 29, scope: !1940)
!1940 = !DILexicalBlockFile(scope: !1941, file: !581, discriminator: 1)
!1941 = distinct !DILexicalBlock(scope: !1937, file: !581, line: 653, column: 17)
!1942 = !DILocation(line: 653, column: 33, scope: !1940)
!1943 = !DILocation(line: 653, column: 31, scope: !1940)
!1944 = !DILocation(line: 653, column: 17, scope: !1940)
!1945 = !DILocalVariable(name: "x", scope: !1946, file: !581, line: 654, type: !1635)
!1946 = distinct !DILexicalBlock(scope: !1941, file: !581, line: 653, column: 41)
!1947 = !DILocation(line: 654, column: 31, scope: !1946)
!1948 = !DILocation(line: 654, column: 39, scope: !1946)
!1949 = !DILocation(line: 654, column: 45, scope: !1946)
!1950 = !DILocation(line: 654, column: 43, scope: !1946)
!1951 = !DILocation(line: 654, column: 35, scope: !1946)
!1952 = !DILocalVariable(name: "y", scope: !1946, file: !581, line: 655, type: !1635)
!1953 = !DILocation(line: 655, column: 31, scope: !1946)
!1954 = !DILocation(line: 655, column: 39, scope: !1946)
!1955 = !DILocation(line: 655, column: 45, scope: !1946)
!1956 = !DILocation(line: 655, column: 43, scope: !1946)
!1957 = !DILocation(line: 655, column: 35, scope: !1946)
!1958 = !DILocalVariable(name: "z", scope: !1946, file: !581, line: 656, type: !1635)
!1959 = !DILocation(line: 656, column: 31, scope: !1946)
!1960 = !DILocation(line: 656, column: 39, scope: !1946)
!1961 = !DILocation(line: 656, column: 45, scope: !1946)
!1962 = !DILocation(line: 656, column: 43, scope: !1946)
!1963 = !DILocation(line: 656, column: 35, scope: !1946)
!1964 = !DILocalVariable(name: "pos", scope: !1946, file: !581, line: 657, type: !1635)
!1965 = !DILocation(line: 657, column: 31, scope: !1946)
!1966 = !DILocation(line: 657, column: 37, scope: !1946)
!1967 = !DILocation(line: 657, column: 41, scope: !1946)
!1968 = !DILocation(line: 657, column: 39, scope: !1946)
!1969 = !DILocation(line: 657, column: 53, scope: !1946)
!1970 = !DILocation(line: 657, column: 51, scope: !1946)
!1971 = !DILocation(line: 659, column: 25, scope: !1972)
!1972 = distinct !DILexicalBlock(scope: !1946, file: !581, line: 659, column: 25)
!1973 = !DILocation(line: 659, column: 29, scope: !1972)
!1974 = !DILocation(line: 659, column: 27, scope: !1972)
!1975 = !DILocation(line: 659, column: 34, scope: !1972)
!1976 = !DILocation(line: 659, column: 37, scope: !1977)
!1977 = !DILexicalBlockFile(scope: !1972, file: !581, discriminator: 1)
!1978 = !DILocation(line: 659, column: 41, scope: !1977)
!1979 = !DILocation(line: 659, column: 39, scope: !1977)
!1980 = !DILocation(line: 659, column: 25, scope: !1977)
!1981 = !DILocation(line: 660, column: 25, scope: !1972)
!1982 = !DILocation(line: 662, column: 44, scope: !1946)
!1983 = !DILocation(line: 662, column: 37, scope: !1946)
!1984 = !DILocation(line: 662, column: 51, scope: !1946)
!1985 = !DILocation(line: 662, column: 49, scope: !1946)
!1986 = !DILocation(line: 662, column: 62, scope: !1946)
!1987 = !DILocation(line: 662, column: 36, scope: !1946)
!1988 = !DILocation(line: 662, column: 36, scope: !1989)
!1989 = !DILexicalBlockFile(scope: !1946, file: !581, discriminator: 1)
!1990 = !DILocation(line: 662, column: 88, scope: !1991)
!1991 = !DILexicalBlockFile(scope: !1946, file: !581, discriminator: 2)
!1992 = !DILocation(line: 662, column: 81, scope: !1991)
!1993 = !DILocation(line: 662, column: 95, scope: !1991)
!1994 = !DILocation(line: 662, column: 93, scope: !1991)
!1995 = !DILocation(line: 662, column: 36, scope: !1991)
!1996 = !DILocation(line: 662, column: 36, scope: !1997)
!1997 = !DILexicalBlockFile(scope: !1946, file: !581, discriminator: 3)
!1998 = !DILocation(line: 662, column: 35, scope: !1997)
!1999 = !DILocation(line: 662, column: 28, scope: !1997)
!2000 = !DILocation(line: 662, column: 21, scope: !1997)
!2001 = !DILocation(line: 662, column: 33, scope: !1997)
!2002 = !DILocation(line: 663, column: 44, scope: !1946)
!2003 = !DILocation(line: 663, column: 37, scope: !1946)
!2004 = !DILocation(line: 663, column: 51, scope: !1946)
!2005 = !DILocation(line: 663, column: 49, scope: !1946)
!2006 = !DILocation(line: 663, column: 62, scope: !1946)
!2007 = !DILocation(line: 663, column: 36, scope: !1946)
!2008 = !DILocation(line: 663, column: 36, scope: !1989)
!2009 = !DILocation(line: 663, column: 88, scope: !1991)
!2010 = !DILocation(line: 663, column: 81, scope: !1991)
!2011 = !DILocation(line: 663, column: 95, scope: !1991)
!2012 = !DILocation(line: 663, column: 93, scope: !1991)
!2013 = !DILocation(line: 663, column: 36, scope: !1991)
!2014 = !DILocation(line: 663, column: 36, scope: !1997)
!2015 = !DILocation(line: 663, column: 35, scope: !1997)
!2016 = !DILocation(line: 663, column: 28, scope: !1997)
!2017 = !DILocation(line: 663, column: 21, scope: !1997)
!2018 = !DILocation(line: 663, column: 33, scope: !1997)
!2019 = !DILocation(line: 664, column: 44, scope: !1946)
!2020 = !DILocation(line: 664, column: 37, scope: !1946)
!2021 = !DILocation(line: 664, column: 51, scope: !1946)
!2022 = !DILocation(line: 664, column: 49, scope: !1946)
!2023 = !DILocation(line: 664, column: 62, scope: !1946)
!2024 = !DILocation(line: 664, column: 36, scope: !1946)
!2025 = !DILocation(line: 664, column: 36, scope: !1989)
!2026 = !DILocation(line: 664, column: 88, scope: !1991)
!2027 = !DILocation(line: 664, column: 81, scope: !1991)
!2028 = !DILocation(line: 664, column: 95, scope: !1991)
!2029 = !DILocation(line: 664, column: 93, scope: !1991)
!2030 = !DILocation(line: 664, column: 36, scope: !1991)
!2031 = !DILocation(line: 664, column: 36, scope: !1997)
!2032 = !DILocation(line: 664, column: 35, scope: !1997)
!2033 = !DILocation(line: 664, column: 28, scope: !1997)
!2034 = !DILocation(line: 664, column: 21, scope: !1997)
!2035 = !DILocation(line: 664, column: 33, scope: !1997)
!2036 = !DILocation(line: 665, column: 17, scope: !1946)
!2037 = !DILocation(line: 653, column: 37, scope: !2038)
!2038 = !DILexicalBlockFile(scope: !1941, file: !581, discriminator: 2)
!2039 = !DILocation(line: 653, column: 17, scope: !2038)
!2040 = distinct !{!2040, !2041}
!2041 = !DILocation(line: 653, column: 17, scope: !1921)
!2042 = !DILocation(line: 666, column: 13, scope: !1921)
!2043 = !DILocation(line: 649, column: 33, scope: !2044)
!2044 = !DILexicalBlockFile(scope: !1916, file: !581, discriminator: 2)
!2045 = !DILocation(line: 649, column: 13, scope: !2044)
!2046 = distinct !{!2046, !2047}
!2047 = !DILocation(line: 649, column: 13, scope: !1912)
!2048 = !DILocation(line: 668, column: 9, scope: !1802)
!2049 = !DILocation(line: 670, column: 13, scope: !2050)
!2050 = distinct !DILexicalBlock(scope: !1802, file: !581, line: 670, column: 13)
!2051 = !DILocation(line: 670, column: 16, scope: !2050)
!2052 = !DILocation(line: 670, column: 13, scope: !1802)
!2053 = !DILocation(line: 671, column: 20, scope: !2054)
!2054 = distinct !DILexicalBlock(scope: !2055, file: !581, line: 671, column: 13)
!2055 = distinct !DILexicalBlock(scope: !2050, file: !581, line: 670, column: 24)
!2056 = !DILocation(line: 671, column: 18, scope: !2054)
!2057 = !DILocation(line: 671, column: 25, scope: !2058)
!2058 = !DILexicalBlockFile(scope: !2059, file: !581, discriminator: 1)
!2059 = distinct !DILexicalBlock(scope: !2054, file: !581, line: 671, column: 13)
!2060 = !DILocation(line: 671, column: 29, scope: !2058)
!2061 = !DILocation(line: 671, column: 27, scope: !2058)
!2062 = !DILocation(line: 671, column: 13, scope: !2058)
!2063 = !DILocalVariable(name: "iw1", scope: !2064, file: !581, line: 672, type: !1635)
!2064 = distinct !DILexicalBlock(scope: !2059, file: !581, line: 671, column: 37)
!2065 = !DILocation(line: 672, column: 27, scope: !2064)
!2066 = !DILocation(line: 672, column: 33, scope: !2064)
!2067 = !DILocation(line: 672, column: 37, scope: !2064)
!2068 = !DILocation(line: 672, column: 35, scope: !2064)
!2069 = !DILocalVariable(name: "iw2", scope: !2064, file: !581, line: 673, type: !1635)
!2070 = !DILocation(line: 673, column: 27, scope: !2064)
!2071 = !DILocation(line: 673, column: 33, scope: !2064)
!2072 = !DILocation(line: 673, column: 37, scope: !2064)
!2073 = !DILocation(line: 673, column: 35, scope: !2064)
!2074 = !DILocalVariable(name: "iwd", scope: !2064, file: !581, line: 674, type: !1635)
!2075 = !DILocation(line: 674, column: 27, scope: !2064)
!2076 = !DILocation(line: 674, column: 33, scope: !2064)
!2077 = !DILocation(line: 674, column: 37, scope: !2064)
!2078 = !DILocation(line: 674, column: 35, scope: !2064)
!2079 = !DILocation(line: 675, column: 24, scope: !2080)
!2080 = distinct !DILexicalBlock(scope: !2064, file: !581, line: 675, column: 17)
!2081 = !DILocation(line: 675, column: 22, scope: !2080)
!2082 = !DILocation(line: 675, column: 29, scope: !2083)
!2083 = !DILexicalBlockFile(scope: !2084, file: !581, discriminator: 1)
!2084 = distinct !DILexicalBlock(scope: !2080, file: !581, line: 675, column: 17)
!2085 = !DILocation(line: 675, column: 33, scope: !2083)
!2086 = !DILocation(line: 675, column: 31, scope: !2083)
!2087 = !DILocation(line: 675, column: 17, scope: !2083)
!2088 = !DILocalVariable(name: "x", scope: !2089, file: !581, line: 676, type: !1635)
!2089 = distinct !DILexicalBlock(scope: !2084, file: !581, line: 675, column: 41)
!2090 = !DILocation(line: 676, column: 31, scope: !2089)
!2091 = !DILocation(line: 676, column: 39, scope: !2089)
!2092 = !DILocation(line: 676, column: 45, scope: !2089)
!2093 = !DILocation(line: 676, column: 43, scope: !2089)
!2094 = !DILocation(line: 676, column: 35, scope: !2089)
!2095 = !DILocalVariable(name: "y", scope: !2089, file: !581, line: 677, type: !1635)
!2096 = !DILocation(line: 677, column: 31, scope: !2089)
!2097 = !DILocation(line: 677, column: 39, scope: !2089)
!2098 = !DILocation(line: 677, column: 45, scope: !2089)
!2099 = !DILocation(line: 677, column: 43, scope: !2089)
!2100 = !DILocation(line: 677, column: 35, scope: !2089)
!2101 = !DILocalVariable(name: "z", scope: !2089, file: !581, line: 678, type: !1635)
!2102 = !DILocation(line: 678, column: 31, scope: !2089)
!2103 = !DILocation(line: 678, column: 39, scope: !2089)
!2104 = !DILocation(line: 678, column: 45, scope: !2089)
!2105 = !DILocation(line: 678, column: 43, scope: !2089)
!2106 = !DILocation(line: 678, column: 35, scope: !2089)
!2107 = !DILocalVariable(name: "pos", scope: !2089, file: !581, line: 679, type: !1635)
!2108 = !DILocation(line: 679, column: 31, scope: !2089)
!2109 = !DILocation(line: 679, column: 37, scope: !2089)
!2110 = !DILocation(line: 679, column: 41, scope: !2089)
!2111 = !DILocation(line: 679, column: 39, scope: !2089)
!2112 = !DILocation(line: 679, column: 53, scope: !2089)
!2113 = !DILocation(line: 679, column: 51, scope: !2089)
!2114 = !DILocation(line: 681, column: 25, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2089, file: !581, line: 681, column: 25)
!2116 = !DILocation(line: 681, column: 29, scope: !2115)
!2117 = !DILocation(line: 681, column: 27, scope: !2115)
!2118 = !DILocation(line: 681, column: 34, scope: !2115)
!2119 = !DILocation(line: 681, column: 37, scope: !2120)
!2120 = !DILexicalBlockFile(scope: !2115, file: !581, discriminator: 1)
!2121 = !DILocation(line: 681, column: 41, scope: !2120)
!2122 = !DILocation(line: 681, column: 39, scope: !2120)
!2123 = !DILocation(line: 681, column: 25, scope: !2120)
!2124 = !DILocation(line: 682, column: 25, scope: !2115)
!2125 = !DILocation(line: 684, column: 30, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2089, file: !581, line: 684, column: 25)
!2127 = !DILocation(line: 684, column: 26, scope: !2126)
!2128 = !DILocation(line: 684, column: 25, scope: !2089)
!2129 = !DILocation(line: 685, column: 44, scope: !2126)
!2130 = !DILocation(line: 685, column: 42, scope: !2126)
!2131 = !DILocation(line: 685, column: 47, scope: !2126)
!2132 = !DILocation(line: 685, column: 37, scope: !2126)
!2133 = !DILocation(line: 685, column: 61, scope: !2134)
!2134 = !DILexicalBlockFile(scope: !2126, file: !581, discriminator: 1)
!2135 = !DILocation(line: 685, column: 59, scope: !2134)
!2136 = !DILocation(line: 685, column: 37, scope: !2134)
!2137 = !DILocation(line: 685, column: 75, scope: !2138)
!2138 = !DILexicalBlockFile(scope: !2126, file: !581, discriminator: 2)
!2139 = !DILocation(line: 685, column: 73, scope: !2138)
!2140 = !DILocation(line: 685, column: 67, scope: !2138)
!2141 = !DILocation(line: 685, column: 37, scope: !2138)
!2142 = !DILocation(line: 685, column: 37, scope: !2143)
!2143 = !DILexicalBlockFile(scope: !2126, file: !581, discriminator: 3)
!2144 = !DILocation(line: 685, column: 90, scope: !2143)
!2145 = !DILocation(line: 685, column: 88, scope: !2143)
!2146 = !DILocation(line: 685, column: 93, scope: !2143)
!2147 = !DILocation(line: 685, column: 83, scope: !2143)
!2148 = !DILocation(line: 685, column: 107, scope: !2149)
!2149 = !DILexicalBlockFile(scope: !2126, file: !581, discriminator: 4)
!2150 = !DILocation(line: 685, column: 105, scope: !2149)
!2151 = !DILocation(line: 685, column: 83, scope: !2149)
!2152 = !DILocation(line: 685, column: 121, scope: !2153)
!2153 = !DILexicalBlockFile(scope: !2126, file: !581, discriminator: 5)
!2154 = !DILocation(line: 685, column: 119, scope: !2153)
!2155 = !DILocation(line: 685, column: 113, scope: !2153)
!2156 = !DILocation(line: 685, column: 83, scope: !2153)
!2157 = !DILocation(line: 685, column: 83, scope: !2158)
!2158 = !DILexicalBlockFile(scope: !2126, file: !581, discriminator: 6)
!2159 = !DILocation(line: 685, column: 80, scope: !2158)
!2160 = !DILocation(line: 685, column: 36, scope: !2158)
!2161 = !DILocation(line: 685, column: 29, scope: !2158)
!2162 = !DILocation(line: 685, column: 25, scope: !2158)
!2163 = !DILocation(line: 685, column: 34, scope: !2158)
!2164 = !DILocation(line: 686, column: 32, scope: !2089)
!2165 = !DILocation(line: 686, column: 25, scope: !2089)
!2166 = !DILocation(line: 686, column: 21, scope: !2089)
!2167 = !DILocation(line: 686, column: 30, scope: !2089)
!2168 = !DILocation(line: 687, column: 32, scope: !2089)
!2169 = !DILocation(line: 687, column: 25, scope: !2089)
!2170 = !DILocation(line: 687, column: 21, scope: !2089)
!2171 = !DILocation(line: 687, column: 30, scope: !2089)
!2172 = !DILocation(line: 688, column: 17, scope: !2089)
!2173 = !DILocation(line: 675, column: 37, scope: !2174)
!2174 = !DILexicalBlockFile(scope: !2084, file: !581, discriminator: 2)
!2175 = !DILocation(line: 675, column: 17, scope: !2174)
!2176 = distinct !{!2176, !2177}
!2177 = !DILocation(line: 675, column: 17, scope: !2064)
!2178 = !DILocation(line: 689, column: 13, scope: !2064)
!2179 = !DILocation(line: 671, column: 33, scope: !2180)
!2180 = !DILexicalBlockFile(scope: !2059, file: !581, discriminator: 2)
!2181 = !DILocation(line: 671, column: 13, scope: !2180)
!2182 = distinct !{!2182, !2183}
!2183 = !DILocation(line: 671, column: 13, scope: !2055)
!2184 = !DILocation(line: 690, column: 9, scope: !2055)
!2185 = !DILocation(line: 691, column: 20, scope: !2186)
!2186 = distinct !DILexicalBlock(scope: !2187, file: !581, line: 691, column: 13)
!2187 = distinct !DILexicalBlock(scope: !2050, file: !581, line: 690, column: 16)
!2188 = !DILocation(line: 691, column: 18, scope: !2186)
!2189 = !DILocation(line: 691, column: 25, scope: !2190)
!2190 = !DILexicalBlockFile(scope: !2191, file: !581, discriminator: 1)
!2191 = distinct !DILexicalBlock(scope: !2186, file: !581, line: 691, column: 13)
!2192 = !DILocation(line: 691, column: 29, scope: !2190)
!2193 = !DILocation(line: 691, column: 27, scope: !2190)
!2194 = !DILocation(line: 691, column: 13, scope: !2190)
!2195 = !DILocalVariable(name: "iw1", scope: !2196, file: !581, line: 692, type: !1635)
!2196 = distinct !DILexicalBlock(scope: !2191, file: !581, line: 691, column: 37)
!2197 = !DILocation(line: 692, column: 27, scope: !2196)
!2198 = !DILocation(line: 692, column: 33, scope: !2196)
!2199 = !DILocation(line: 692, column: 37, scope: !2196)
!2200 = !DILocation(line: 692, column: 35, scope: !2196)
!2201 = !DILocalVariable(name: "iw2", scope: !2196, file: !581, line: 693, type: !1635)
!2202 = !DILocation(line: 693, column: 27, scope: !2196)
!2203 = !DILocation(line: 693, column: 33, scope: !2196)
!2204 = !DILocation(line: 693, column: 37, scope: !2196)
!2205 = !DILocation(line: 693, column: 35, scope: !2196)
!2206 = !DILocalVariable(name: "iwd", scope: !2196, file: !581, line: 694, type: !1635)
!2207 = !DILocation(line: 694, column: 27, scope: !2196)
!2208 = !DILocation(line: 694, column: 33, scope: !2196)
!2209 = !DILocation(line: 694, column: 37, scope: !2196)
!2210 = !DILocation(line: 694, column: 35, scope: !2196)
!2211 = !DILocation(line: 695, column: 24, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2196, file: !581, line: 695, column: 17)
!2213 = !DILocation(line: 695, column: 22, scope: !2212)
!2214 = !DILocation(line: 695, column: 29, scope: !2215)
!2215 = !DILexicalBlockFile(scope: !2216, file: !581, discriminator: 1)
!2216 = distinct !DILexicalBlock(scope: !2212, file: !581, line: 695, column: 17)
!2217 = !DILocation(line: 695, column: 33, scope: !2215)
!2218 = !DILocation(line: 695, column: 31, scope: !2215)
!2219 = !DILocation(line: 695, column: 17, scope: !2215)
!2220 = !DILocalVariable(name: "x", scope: !2221, file: !581, line: 696, type: !1635)
!2221 = distinct !DILexicalBlock(scope: !2216, file: !581, line: 695, column: 41)
!2222 = !DILocation(line: 696, column: 31, scope: !2221)
!2223 = !DILocation(line: 696, column: 39, scope: !2221)
!2224 = !DILocation(line: 696, column: 45, scope: !2221)
!2225 = !DILocation(line: 696, column: 43, scope: !2221)
!2226 = !DILocation(line: 696, column: 35, scope: !2221)
!2227 = !DILocalVariable(name: "y", scope: !2221, file: !581, line: 697, type: !1635)
!2228 = !DILocation(line: 697, column: 31, scope: !2221)
!2229 = !DILocation(line: 697, column: 39, scope: !2221)
!2230 = !DILocation(line: 697, column: 45, scope: !2221)
!2231 = !DILocation(line: 697, column: 43, scope: !2221)
!2232 = !DILocation(line: 697, column: 35, scope: !2221)
!2233 = !DILocalVariable(name: "z", scope: !2221, file: !581, line: 698, type: !1635)
!2234 = !DILocation(line: 698, column: 31, scope: !2221)
!2235 = !DILocation(line: 698, column: 39, scope: !2221)
!2236 = !DILocation(line: 698, column: 45, scope: !2221)
!2237 = !DILocation(line: 698, column: 43, scope: !2221)
!2238 = !DILocation(line: 698, column: 35, scope: !2221)
!2239 = !DILocalVariable(name: "pos", scope: !2221, file: !581, line: 699, type: !1635)
!2240 = !DILocation(line: 699, column: 31, scope: !2221)
!2241 = !DILocation(line: 699, column: 37, scope: !2221)
!2242 = !DILocation(line: 699, column: 41, scope: !2221)
!2243 = !DILocation(line: 699, column: 39, scope: !2221)
!2244 = !DILocation(line: 699, column: 53, scope: !2221)
!2245 = !DILocation(line: 699, column: 51, scope: !2221)
!2246 = !DILocation(line: 701, column: 25, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2221, file: !581, line: 701, column: 25)
!2248 = !DILocation(line: 701, column: 29, scope: !2247)
!2249 = !DILocation(line: 701, column: 27, scope: !2247)
!2250 = !DILocation(line: 701, column: 34, scope: !2247)
!2251 = !DILocation(line: 701, column: 37, scope: !2252)
!2252 = !DILexicalBlockFile(scope: !2247, file: !581, discriminator: 1)
!2253 = !DILocation(line: 701, column: 41, scope: !2252)
!2254 = !DILocation(line: 701, column: 39, scope: !2252)
!2255 = !DILocation(line: 701, column: 25, scope: !2252)
!2256 = !DILocation(line: 702, column: 25, scope: !2247)
!2257 = !DILocation(line: 704, column: 30, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2221, file: !581, line: 704, column: 25)
!2259 = !DILocation(line: 704, column: 26, scope: !2258)
!2260 = !DILocation(line: 704, column: 25, scope: !2221)
!2261 = !DILocation(line: 705, column: 38, scope: !2258)
!2262 = !DILocation(line: 705, column: 42, scope: !2258)
!2263 = !DILocation(line: 705, column: 40, scope: !2258)
!2264 = !DILocation(line: 705, column: 45, scope: !2258)
!2265 = !DILocation(line: 705, column: 37, scope: !2258)
!2266 = !DILocation(line: 705, column: 37, scope: !2267)
!2267 = !DILexicalBlockFile(scope: !2258, file: !581, discriminator: 1)
!2268 = !DILocation(line: 705, column: 64, scope: !2269)
!2269 = !DILexicalBlockFile(scope: !2258, file: !581, discriminator: 2)
!2270 = !DILocation(line: 705, column: 68, scope: !2269)
!2271 = !DILocation(line: 705, column: 66, scope: !2269)
!2272 = !DILocation(line: 705, column: 37, scope: !2269)
!2273 = !DILocation(line: 705, column: 37, scope: !2274)
!2274 = !DILexicalBlockFile(scope: !2258, file: !581, discriminator: 3)
!2275 = !DILocation(line: 705, column: 36, scope: !2274)
!2276 = !DILocation(line: 705, column: 29, scope: !2274)
!2277 = !DILocation(line: 705, column: 25, scope: !2274)
!2278 = !DILocation(line: 705, column: 34, scope: !2274)
!2279 = !DILocation(line: 706, column: 32, scope: !2221)
!2280 = !DILocation(line: 706, column: 25, scope: !2221)
!2281 = !DILocation(line: 706, column: 21, scope: !2221)
!2282 = !DILocation(line: 706, column: 30, scope: !2221)
!2283 = !DILocation(line: 707, column: 32, scope: !2221)
!2284 = !DILocation(line: 707, column: 25, scope: !2221)
!2285 = !DILocation(line: 707, column: 21, scope: !2221)
!2286 = !DILocation(line: 707, column: 30, scope: !2221)
!2287 = !DILocation(line: 708, column: 17, scope: !2221)
!2288 = !DILocation(line: 695, column: 37, scope: !2289)
!2289 = !DILexicalBlockFile(scope: !2216, file: !581, discriminator: 2)
!2290 = !DILocation(line: 695, column: 17, scope: !2289)
!2291 = distinct !{!2291, !2292}
!2292 = !DILocation(line: 695, column: 17, scope: !2196)
!2293 = !DILocation(line: 709, column: 13, scope: !2196)
!2294 = !DILocation(line: 691, column: 33, scope: !2295)
!2295 = !DILexicalBlockFile(scope: !2191, file: !581, discriminator: 2)
!2296 = !DILocation(line: 691, column: 13, scope: !2295)
!2297 = distinct !{!2297, !2298}
!2298 = !DILocation(line: 691, column: 13, scope: !2187)
!2299 = !DILocation(line: 711, column: 9, scope: !1802)
!2300 = !DILocation(line: 713, column: 16, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !1802, file: !581, line: 713, column: 9)
!2302 = !DILocation(line: 713, column: 14, scope: !2301)
!2303 = !DILocation(line: 713, column: 21, scope: !2304)
!2304 = !DILexicalBlockFile(scope: !2305, file: !581, discriminator: 1)
!2305 = distinct !DILexicalBlock(scope: !2301, file: !581, line: 713, column: 9)
!2306 = !DILocation(line: 713, column: 25, scope: !2304)
!2307 = !DILocation(line: 713, column: 23, scope: !2304)
!2308 = !DILocation(line: 713, column: 9, scope: !2304)
!2309 = !DILocalVariable(name: "iw1", scope: !2310, file: !581, line: 714, type: !1635)
!2310 = distinct !DILexicalBlock(scope: !2305, file: !581, line: 713, column: 33)
!2311 = !DILocation(line: 714, column: 23, scope: !2310)
!2312 = !DILocation(line: 714, column: 29, scope: !2310)
!2313 = !DILocation(line: 714, column: 33, scope: !2310)
!2314 = !DILocation(line: 714, column: 31, scope: !2310)
!2315 = !DILocalVariable(name: "iw2", scope: !2310, file: !581, line: 715, type: !1635)
!2316 = !DILocation(line: 715, column: 23, scope: !2310)
!2317 = !DILocation(line: 715, column: 29, scope: !2310)
!2318 = !DILocation(line: 715, column: 33, scope: !2310)
!2319 = !DILocation(line: 715, column: 31, scope: !2310)
!2320 = !DILocalVariable(name: "iwd", scope: !2310, file: !581, line: 716, type: !1635)
!2321 = !DILocation(line: 716, column: 23, scope: !2310)
!2322 = !DILocation(line: 716, column: 29, scope: !2310)
!2323 = !DILocation(line: 716, column: 33, scope: !2310)
!2324 = !DILocation(line: 716, column: 31, scope: !2310)
!2325 = !DILocation(line: 717, column: 20, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2310, file: !581, line: 717, column: 13)
!2327 = !DILocation(line: 717, column: 18, scope: !2326)
!2328 = !DILocation(line: 717, column: 25, scope: !2329)
!2329 = !DILexicalBlockFile(scope: !2330, file: !581, discriminator: 1)
!2330 = distinct !DILexicalBlock(scope: !2326, file: !581, line: 717, column: 13)
!2331 = !DILocation(line: 717, column: 29, scope: !2329)
!2332 = !DILocation(line: 717, column: 27, scope: !2329)
!2333 = !DILocation(line: 717, column: 13, scope: !2329)
!2334 = !DILocalVariable(name: "x", scope: !2335, file: !581, line: 718, type: !1635)
!2335 = distinct !DILexicalBlock(scope: !2330, file: !581, line: 717, column: 37)
!2336 = !DILocation(line: 718, column: 27, scope: !2335)
!2337 = !DILocation(line: 718, column: 35, scope: !2335)
!2338 = !DILocation(line: 718, column: 41, scope: !2335)
!2339 = !DILocation(line: 718, column: 39, scope: !2335)
!2340 = !DILocation(line: 718, column: 31, scope: !2335)
!2341 = !DILocalVariable(name: "y", scope: !2335, file: !581, line: 719, type: !1635)
!2342 = !DILocation(line: 719, column: 27, scope: !2335)
!2343 = !DILocation(line: 719, column: 35, scope: !2335)
!2344 = !DILocation(line: 719, column: 41, scope: !2335)
!2345 = !DILocation(line: 719, column: 39, scope: !2335)
!2346 = !DILocation(line: 719, column: 31, scope: !2335)
!2347 = !DILocalVariable(name: "z", scope: !2335, file: !581, line: 720, type: !1635)
!2348 = !DILocation(line: 720, column: 27, scope: !2335)
!2349 = !DILocation(line: 720, column: 35, scope: !2335)
!2350 = !DILocation(line: 720, column: 41, scope: !2335)
!2351 = !DILocation(line: 720, column: 39, scope: !2335)
!2352 = !DILocation(line: 720, column: 31, scope: !2335)
!2353 = !DILocalVariable(name: "pos", scope: !2335, file: !581, line: 721, type: !1635)
!2354 = !DILocation(line: 721, column: 27, scope: !2335)
!2355 = !DILocation(line: 721, column: 33, scope: !2335)
!2356 = !DILocation(line: 721, column: 37, scope: !2335)
!2357 = !DILocation(line: 721, column: 35, scope: !2335)
!2358 = !DILocation(line: 721, column: 49, scope: !2335)
!2359 = !DILocation(line: 721, column: 47, scope: !2335)
!2360 = !DILocation(line: 723, column: 21, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2335, file: !581, line: 723, column: 21)
!2362 = !DILocation(line: 723, column: 25, scope: !2361)
!2363 = !DILocation(line: 723, column: 23, scope: !2361)
!2364 = !DILocation(line: 723, column: 30, scope: !2361)
!2365 = !DILocation(line: 723, column: 33, scope: !2366)
!2366 = !DILexicalBlockFile(scope: !2361, file: !581, discriminator: 1)
!2367 = !DILocation(line: 723, column: 37, scope: !2366)
!2368 = !DILocation(line: 723, column: 35, scope: !2366)
!2369 = !DILocation(line: 723, column: 21, scope: !2366)
!2370 = !DILocation(line: 724, column: 21, scope: !2361)
!2371 = !DILocation(line: 726, column: 42, scope: !2335)
!2372 = !DILocation(line: 726, column: 38, scope: !2335)
!2373 = !DILocation(line: 726, column: 49, scope: !2335)
!2374 = !DILocation(line: 726, column: 47, scope: !2335)
!2375 = !DILocation(line: 726, column: 35, scope: !2335)
!2376 = !DILocation(line: 726, column: 29, scope: !2335)
!2377 = !DILocation(line: 726, column: 67, scope: !2378)
!2378 = !DILexicalBlockFile(scope: !2335, file: !581, discriminator: 1)
!2379 = !DILocation(line: 726, column: 63, scope: !2378)
!2380 = !DILocation(line: 726, column: 74, scope: !2378)
!2381 = !DILocation(line: 726, column: 72, scope: !2378)
!2382 = !DILocation(line: 726, column: 29, scope: !2378)
!2383 = !DILocation(line: 726, column: 29, scope: !2384)
!2384 = !DILexicalBlockFile(scope: !2335, file: !581, discriminator: 2)
!2385 = !DILocation(line: 726, column: 29, scope: !2386)
!2386 = !DILexicalBlockFile(scope: !2335, file: !581, discriminator: 3)
!2387 = !DILocation(line: 726, column: 28, scope: !2386)
!2388 = !DILocation(line: 726, column: 21, scope: !2386)
!2389 = !DILocation(line: 726, column: 17, scope: !2386)
!2390 = !DILocation(line: 726, column: 26, scope: !2386)
!2391 = !DILocation(line: 727, column: 28, scope: !2335)
!2392 = !DILocation(line: 727, column: 21, scope: !2335)
!2393 = !DILocation(line: 727, column: 17, scope: !2335)
!2394 = !DILocation(line: 727, column: 26, scope: !2335)
!2395 = !DILocation(line: 728, column: 28, scope: !2335)
!2396 = !DILocation(line: 728, column: 21, scope: !2335)
!2397 = !DILocation(line: 728, column: 17, scope: !2335)
!2398 = !DILocation(line: 728, column: 26, scope: !2335)
!2399 = !DILocation(line: 729, column: 13, scope: !2335)
!2400 = !DILocation(line: 717, column: 33, scope: !2401)
!2401 = !DILexicalBlockFile(scope: !2330, file: !581, discriminator: 2)
!2402 = !DILocation(line: 717, column: 13, scope: !2401)
!2403 = distinct !{!2403, !2404}
!2404 = !DILocation(line: 717, column: 13, scope: !2310)
!2405 = !DILocation(line: 730, column: 9, scope: !2310)
!2406 = !DILocation(line: 713, column: 29, scope: !2407)
!2407 = !DILexicalBlockFile(scope: !2305, file: !581, discriminator: 2)
!2408 = !DILocation(line: 713, column: 9, scope: !2407)
!2409 = distinct !{!2409, !2410}
!2410 = !DILocation(line: 713, column: 9, scope: !1802)
!2411 = !DILocation(line: 731, column: 9, scope: !1802)
!2412 = !DILocation(line: 733, column: 16, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !1802, file: !581, line: 733, column: 9)
!2414 = !DILocation(line: 733, column: 14, scope: !2413)
!2415 = !DILocation(line: 733, column: 21, scope: !2416)
!2416 = !DILexicalBlockFile(scope: !2417, file: !581, discriminator: 1)
!2417 = distinct !DILexicalBlock(scope: !2413, file: !581, line: 733, column: 9)
!2418 = !DILocation(line: 733, column: 25, scope: !2416)
!2419 = !DILocation(line: 733, column: 29, scope: !2416)
!2420 = !DILocation(line: 733, column: 23, scope: !2416)
!2421 = !DILocation(line: 733, column: 9, scope: !2416)
!2422 = !DILocalVariable(name: "iwx", scope: !2423, file: !581, line: 734, type: !1635)
!2423 = distinct !DILexicalBlock(scope: !2417, file: !581, line: 733, column: 42)
!2424 = !DILocation(line: 734, column: 23, scope: !2423)
!2425 = !DILocation(line: 734, column: 30, scope: !2423)
!2426 = !DILocation(line: 734, column: 35, scope: !2423)
!2427 = !DILocation(line: 734, column: 32, scope: !2423)
!2428 = !DILocation(line: 734, column: 43, scope: !2423)
!2429 = !DILocation(line: 734, column: 41, scope: !2423)
!2430 = !DILocalVariable(name: "iwy", scope: !2423, file: !581, line: 735, type: !1635)
!2431 = !DILocation(line: 735, column: 23, scope: !2423)
!2432 = !DILocation(line: 735, column: 30, scope: !2423)
!2433 = !DILocation(line: 735, column: 35, scope: !2423)
!2434 = !DILocation(line: 735, column: 32, scope: !2423)
!2435 = !DILocation(line: 735, column: 43, scope: !2423)
!2436 = !DILocation(line: 735, column: 41, scope: !2423)
!2437 = !DILocalVariable(name: "iwd", scope: !2423, file: !581, line: 736, type: !1635)
!2438 = !DILocation(line: 736, column: 23, scope: !2423)
!2439 = !DILocation(line: 736, column: 29, scope: !2423)
!2440 = !DILocation(line: 736, column: 33, scope: !2423)
!2441 = !DILocation(line: 736, column: 31, scope: !2423)
!2442 = !DILocation(line: 737, column: 20, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2423, file: !581, line: 737, column: 13)
!2444 = !DILocation(line: 737, column: 18, scope: !2443)
!2445 = !DILocation(line: 737, column: 25, scope: !2446)
!2446 = !DILexicalBlockFile(scope: !2447, file: !581, discriminator: 1)
!2447 = distinct !DILexicalBlock(scope: !2443, file: !581, line: 737, column: 13)
!2448 = !DILocation(line: 737, column: 29, scope: !2446)
!2449 = !DILocation(line: 737, column: 33, scope: !2446)
!2450 = !DILocation(line: 737, column: 27, scope: !2446)
!2451 = !DILocation(line: 737, column: 13, scope: !2446)
!2452 = !DILocalVariable(name: "x", scope: !2453, file: !581, line: 738, type: !1635)
!2453 = distinct !DILexicalBlock(scope: !2447, file: !581, line: 737, column: 45)
!2454 = !DILocation(line: 738, column: 27, scope: !2453)
!2455 = !DILocation(line: 738, column: 35, scope: !2453)
!2456 = !DILocation(line: 738, column: 42, scope: !2453)
!2457 = !DILocation(line: 738, column: 47, scope: !2453)
!2458 = !DILocation(line: 738, column: 44, scope: !2453)
!2459 = !DILocation(line: 738, column: 39, scope: !2453)
!2460 = !DILocation(line: 738, column: 31, scope: !2453)
!2461 = !DILocalVariable(name: "y", scope: !2453, file: !581, line: 739, type: !1635)
!2462 = !DILocation(line: 739, column: 27, scope: !2453)
!2463 = !DILocation(line: 739, column: 35, scope: !2453)
!2464 = !DILocation(line: 739, column: 42, scope: !2453)
!2465 = !DILocation(line: 739, column: 47, scope: !2453)
!2466 = !DILocation(line: 739, column: 44, scope: !2453)
!2467 = !DILocation(line: 739, column: 39, scope: !2453)
!2468 = !DILocation(line: 739, column: 31, scope: !2453)
!2469 = !DILocalVariable(name: "z", scope: !2453, file: !581, line: 740, type: !1635)
!2470 = !DILocation(line: 740, column: 27, scope: !2453)
!2471 = !DILocation(line: 740, column: 35, scope: !2453)
!2472 = !DILocation(line: 740, column: 41, scope: !2453)
!2473 = !DILocation(line: 740, column: 39, scope: !2453)
!2474 = !DILocation(line: 740, column: 31, scope: !2453)
!2475 = !DILocalVariable(name: "pos", scope: !2453, file: !581, line: 741, type: !1635)
!2476 = !DILocation(line: 741, column: 27, scope: !2453)
!2477 = !DILocation(line: 741, column: 33, scope: !2453)
!2478 = !DILocation(line: 741, column: 37, scope: !2453)
!2479 = !DILocation(line: 741, column: 35, scope: !2453)
!2480 = !DILocation(line: 741, column: 49, scope: !2453)
!2481 = !DILocation(line: 741, column: 47, scope: !2453)
!2482 = !DILocation(line: 743, column: 21, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2453, file: !581, line: 743, column: 21)
!2484 = !DILocation(line: 743, column: 25, scope: !2483)
!2485 = !DILocation(line: 743, column: 23, scope: !2483)
!2486 = !DILocation(line: 743, column: 30, scope: !2483)
!2487 = !DILocation(line: 743, column: 33, scope: !2488)
!2488 = !DILexicalBlockFile(scope: !2483, file: !581, discriminator: 1)
!2489 = !DILocation(line: 743, column: 37, scope: !2488)
!2490 = !DILocation(line: 743, column: 35, scope: !2488)
!2491 = !DILocation(line: 743, column: 21, scope: !2488)
!2492 = !DILocation(line: 744, column: 21, scope: !2483)
!2493 = !DILocation(line: 746, column: 30, scope: !2453)
!2494 = !DILocation(line: 746, column: 40, scope: !2453)
!2495 = !DILocation(line: 746, column: 36, scope: !2453)
!2496 = !DILocation(line: 746, column: 35, scope: !2453)
!2497 = !DILocation(line: 746, column: 33, scope: !2453)
!2498 = !DILocation(line: 746, column: 29, scope: !2453)
!2499 = !DILocation(line: 746, column: 49, scope: !2500)
!2500 = !DILexicalBlockFile(scope: !2453, file: !581, discriminator: 1)
!2501 = !DILocation(line: 746, column: 29, scope: !2500)
!2502 = !DILocation(line: 746, column: 59, scope: !2503)
!2503 = !DILexicalBlockFile(scope: !2453, file: !581, discriminator: 2)
!2504 = !DILocation(line: 746, column: 55, scope: !2503)
!2505 = !DILocation(line: 746, column: 54, scope: !2503)
!2506 = !DILocation(line: 746, column: 29, scope: !2503)
!2507 = !DILocation(line: 746, column: 29, scope: !2508)
!2508 = !DILexicalBlockFile(scope: !2453, file: !581, discriminator: 3)
!2509 = !DILocation(line: 746, column: 28, scope: !2508)
!2510 = !DILocation(line: 746, column: 21, scope: !2508)
!2511 = !DILocation(line: 746, column: 17, scope: !2508)
!2512 = !DILocation(line: 746, column: 26, scope: !2508)
!2513 = !DILocation(line: 747, column: 28, scope: !2453)
!2514 = !DILocation(line: 747, column: 21, scope: !2453)
!2515 = !DILocation(line: 747, column: 17, scope: !2453)
!2516 = !DILocation(line: 747, column: 26, scope: !2453)
!2517 = !DILocation(line: 748, column: 28, scope: !2453)
!2518 = !DILocation(line: 748, column: 21, scope: !2453)
!2519 = !DILocation(line: 748, column: 17, scope: !2453)
!2520 = !DILocation(line: 748, column: 26, scope: !2453)
!2521 = !DILocation(line: 749, column: 13, scope: !2453)
!2522 = !DILocation(line: 737, column: 41, scope: !2523)
!2523 = !DILexicalBlockFile(scope: !2447, file: !581, discriminator: 2)
!2524 = !DILocation(line: 737, column: 13, scope: !2523)
!2525 = distinct !{!2525, !2526}
!2526 = !DILocation(line: 737, column: 13, scope: !2423)
!2527 = !DILocation(line: 750, column: 9, scope: !2423)
!2528 = !DILocation(line: 733, column: 38, scope: !2529)
!2529 = !DILexicalBlockFile(scope: !2417, file: !581, discriminator: 2)
!2530 = !DILocation(line: 733, column: 9, scope: !2529)
!2531 = distinct !{!2531, !2532}
!2532 = !DILocation(line: 733, column: 9, scope: !1802)
!2533 = !DILocation(line: 751, column: 9, scope: !1802)
!2534 = !DILocation(line: 753, column: 9, scope: !1802)
!2535 = distinct !{!2535, !2534}
!2536 = !DILocation(line: 753, column: 26, scope: !2537)
!2537 = !DILexicalBlockFile(scope: !2538, file: !581, discriminator: 1)
!2538 = distinct !DILexicalBlock(scope: !2539, file: !581, line: 753, column: 24)
!2539 = distinct !DILexicalBlock(scope: !2540, file: !581, line: 753, column: 18)
!2540 = distinct !DILexicalBlock(scope: !1802, file: !581, line: 753, column: 12)
!2541 = !DILocation(line: 753, column: 90, scope: !2542)
!2542 = !DILexicalBlockFile(scope: !2537, file: !581, discriminator: 2)
!2543 = !DILocation(line: 753, column: 90, scope: !2537)
!2544 = !DILocation(line: 754, column: 5, scope: !1802)
!2545 = !DILocation(line: 756, column: 14, scope: !1619)
!2546 = !DILocation(line: 756, column: 17, scope: !1619)
!2547 = !DILocation(line: 756, column: 5, scope: !1619)
!2548 = !DILocation(line: 758, column: 9, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !1619, file: !581, line: 758, column: 9)
!2550 = !DILocation(line: 758, column: 9, scope: !1619)
!2551 = !DILocation(line: 759, column: 16, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2553, file: !581, line: 759, column: 9)
!2553 = distinct !DILexicalBlock(scope: !2549, file: !581, line: 758, column: 17)
!2554 = !DILocation(line: 759, column: 14, scope: !2552)
!2555 = !DILocation(line: 759, column: 21, scope: !2556)
!2556 = !DILexicalBlockFile(scope: !2557, file: !581, discriminator: 1)
!2557 = distinct !DILexicalBlock(scope: !2552, file: !581, line: 759, column: 9)
!2558 = !DILocation(line: 759, column: 25, scope: !2556)
!2559 = !DILocation(line: 759, column: 30, scope: !2556)
!2560 = !DILocation(line: 759, column: 23, scope: !2556)
!2561 = !DILocation(line: 759, column: 9, scope: !2556)
!2562 = !DILocation(line: 760, column: 20, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2564, file: !581, line: 760, column: 13)
!2564 = distinct !DILexicalBlock(scope: !2557, file: !581, line: 759, column: 43)
!2565 = !DILocation(line: 760, column: 18, scope: !2563)
!2566 = !DILocation(line: 760, column: 25, scope: !2567)
!2567 = !DILexicalBlockFile(scope: !2568, file: !581, discriminator: 1)
!2568 = distinct !DILexicalBlock(scope: !2563, file: !581, line: 760, column: 13)
!2569 = !DILocation(line: 760, column: 29, scope: !2567)
!2570 = !DILocation(line: 760, column: 34, scope: !2567)
!2571 = !DILocation(line: 760, column: 27, scope: !2567)
!2572 = !DILocation(line: 760, column: 13, scope: !2567)
!2573 = !DILocalVariable(name: "pos", scope: !2574, file: !581, line: 761, type: !200)
!2574 = distinct !DILexicalBlock(scope: !2568, file: !581, line: 760, column: 46)
!2575 = !DILocation(line: 761, column: 21, scope: !2574)
!2576 = !DILocation(line: 761, column: 27, scope: !2574)
!2577 = !DILocation(line: 761, column: 31, scope: !2574)
!2578 = !DILocation(line: 761, column: 29, scope: !2574)
!2579 = !DILocation(line: 761, column: 43, scope: !2574)
!2580 = !DILocation(line: 761, column: 41, scope: !2574)
!2581 = !DILocation(line: 763, column: 25, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2574, file: !581, line: 763, column: 21)
!2583 = !DILocation(line: 763, column: 21, scope: !2582)
!2584 = !DILocation(line: 763, column: 21, scope: !2574)
!2585 = !DILocation(line: 764, column: 28, scope: !2582)
!2586 = !DILocation(line: 764, column: 21, scope: !2582)
!2587 = !DILocation(line: 764, column: 33, scope: !2582)
!2588 = !DILocation(line: 765, column: 13, scope: !2574)
!2589 = !DILocation(line: 760, column: 42, scope: !2590)
!2590 = !DILexicalBlockFile(scope: !2568, file: !581, discriminator: 2)
!2591 = !DILocation(line: 760, column: 13, scope: !2590)
!2592 = distinct !{!2592, !2593}
!2593 = !DILocation(line: 760, column: 13, scope: !2564)
!2594 = !DILocation(line: 766, column: 9, scope: !2564)
!2595 = !DILocation(line: 759, column: 39, scope: !2596)
!2596 = !DILexicalBlockFile(scope: !2557, file: !581, discriminator: 2)
!2597 = !DILocation(line: 759, column: 9, scope: !2596)
!2598 = distinct !{!2598, !2599}
!2599 = !DILocation(line: 759, column: 9, scope: !2553)
!2600 = !DILocation(line: 767, column: 5, scope: !2553)
!2601 = !DILocation(line: 769, column: 9, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !1619, file: !581, line: 769, column: 9)
!2603 = !DILocation(line: 769, column: 12, scope: !2602)
!2604 = !DILocation(line: 769, column: 17, scope: !2602)
!2605 = !DILocation(line: 769, column: 9, scope: !1619)
!2606 = !DILocation(line: 770, column: 16, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2608, file: !581, line: 770, column: 9)
!2608 = distinct !DILexicalBlock(scope: !2602, file: !581, line: 769, column: 27)
!2609 = !DILocation(line: 770, column: 14, scope: !2607)
!2610 = !DILocation(line: 770, column: 21, scope: !2611)
!2611 = !DILexicalBlockFile(scope: !2612, file: !581, discriminator: 1)
!2612 = distinct !DILexicalBlock(scope: !2607, file: !581, line: 770, column: 9)
!2613 = !DILocation(line: 770, column: 25, scope: !2611)
!2614 = !DILocation(line: 770, column: 30, scope: !2611)
!2615 = !DILocation(line: 770, column: 23, scope: !2611)
!2616 = !DILocation(line: 770, column: 9, scope: !2611)
!2617 = !DILocation(line: 771, column: 20, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2619, file: !581, line: 771, column: 13)
!2619 = distinct !DILexicalBlock(scope: !2612, file: !581, line: 770, column: 43)
!2620 = !DILocation(line: 771, column: 18, scope: !2618)
!2621 = !DILocation(line: 771, column: 25, scope: !2622)
!2622 = !DILexicalBlockFile(scope: !2623, file: !581, discriminator: 1)
!2623 = distinct !DILexicalBlock(scope: !2618, file: !581, line: 771, column: 13)
!2624 = !DILocation(line: 771, column: 29, scope: !2622)
!2625 = !DILocation(line: 771, column: 34, scope: !2622)
!2626 = !DILocation(line: 771, column: 27, scope: !2622)
!2627 = !DILocation(line: 771, column: 13, scope: !2622)
!2628 = !DILocation(line: 772, column: 26, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2630, file: !581, line: 772, column: 21)
!2630 = distinct !DILexicalBlock(scope: !2623, file: !581, line: 771, column: 46)
!2631 = !DILocation(line: 772, column: 44, scope: !2629)
!2632 = !DILocation(line: 772, column: 30, scope: !2629)
!2633 = !DILocation(line: 772, column: 35, scope: !2629)
!2634 = !DILocation(line: 772, column: 28, scope: !2629)
!2635 = !DILocation(line: 772, column: 50, scope: !2629)
!2636 = !DILocation(line: 772, column: 48, scope: !2629)
!2637 = !DILocation(line: 772, column: 22, scope: !2629)
!2638 = !DILocation(line: 772, column: 21, scope: !2630)
!2639 = !DILocation(line: 773, column: 54, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2629, file: !581, line: 772, column: 54)
!2641 = !DILocation(line: 773, column: 25, scope: !2640)
!2642 = !DILocation(line: 773, column: 43, scope: !2640)
!2643 = !DILocation(line: 773, column: 29, scope: !2640)
!2644 = !DILocation(line: 773, column: 34, scope: !2640)
!2645 = !DILocation(line: 773, column: 27, scope: !2640)
!2646 = !DILocation(line: 773, column: 49, scope: !2640)
!2647 = !DILocation(line: 773, column: 47, scope: !2640)
!2648 = !DILocation(line: 773, column: 21, scope: !2640)
!2649 = !DILocation(line: 773, column: 52, scope: !2640)
!2650 = !DILocation(line: 774, column: 54, scope: !2640)
!2651 = !DILocation(line: 774, column: 25, scope: !2640)
!2652 = !DILocation(line: 774, column: 43, scope: !2640)
!2653 = !DILocation(line: 774, column: 29, scope: !2640)
!2654 = !DILocation(line: 774, column: 34, scope: !2640)
!2655 = !DILocation(line: 774, column: 27, scope: !2640)
!2656 = !DILocation(line: 774, column: 49, scope: !2640)
!2657 = !DILocation(line: 774, column: 47, scope: !2640)
!2658 = !DILocation(line: 774, column: 21, scope: !2640)
!2659 = !DILocation(line: 774, column: 52, scope: !2640)
!2660 = !DILocation(line: 775, column: 25, scope: !2640)
!2661 = !DILocation(line: 775, column: 43, scope: !2640)
!2662 = !DILocation(line: 775, column: 29, scope: !2640)
!2663 = !DILocation(line: 775, column: 34, scope: !2640)
!2664 = !DILocation(line: 775, column: 27, scope: !2640)
!2665 = !DILocation(line: 775, column: 49, scope: !2640)
!2666 = !DILocation(line: 775, column: 47, scope: !2640)
!2667 = !DILocation(line: 775, column: 21, scope: !2640)
!2668 = !DILocation(line: 775, column: 52, scope: !2640)
!2669 = !DILocation(line: 776, column: 17, scope: !2640)
!2670 = !DILocation(line: 777, column: 13, scope: !2630)
!2671 = !DILocation(line: 771, column: 42, scope: !2672)
!2672 = !DILexicalBlockFile(scope: !2623, file: !581, discriminator: 2)
!2673 = !DILocation(line: 771, column: 13, scope: !2672)
!2674 = distinct !{!2674, !2675}
!2675 = !DILocation(line: 771, column: 13, scope: !2619)
!2676 = !DILocation(line: 778, column: 9, scope: !2619)
!2677 = !DILocation(line: 770, column: 39, scope: !2678)
!2678 = !DILexicalBlockFile(scope: !2612, file: !581, discriminator: 2)
!2679 = !DILocation(line: 770, column: 9, scope: !2678)
!2680 = distinct !{!2680, !2681}
!2681 = !DILocation(line: 770, column: 9, scope: !2608)
!2682 = !DILocation(line: 779, column: 5, scope: !2608)
!2683 = !DILocation(line: 779, column: 16, scope: !2684)
!2684 = !DILexicalBlockFile(scope: !2685, file: !581, discriminator: 1)
!2685 = distinct !DILexicalBlock(scope: !2602, file: !581, line: 779, column: 16)
!2686 = !DILocation(line: 779, column: 19, scope: !2684)
!2687 = !DILocation(line: 779, column: 24, scope: !2684)
!2688 = !DILocation(line: 780, column: 16, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2690, file: !581, line: 780, column: 9)
!2690 = distinct !DILexicalBlock(scope: !2685, file: !581, line: 779, column: 35)
!2691 = !DILocation(line: 780, column: 14, scope: !2689)
!2692 = !DILocation(line: 780, column: 21, scope: !2693)
!2693 = !DILexicalBlockFile(scope: !2694, file: !581, discriminator: 1)
!2694 = distinct !DILexicalBlock(scope: !2689, file: !581, line: 780, column: 9)
!2695 = !DILocation(line: 780, column: 25, scope: !2693)
!2696 = !DILocation(line: 780, column: 30, scope: !2693)
!2697 = !DILocation(line: 780, column: 23, scope: !2693)
!2698 = !DILocation(line: 780, column: 9, scope: !2693)
!2699 = !DILocation(line: 781, column: 20, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2701, file: !581, line: 781, column: 13)
!2701 = distinct !DILexicalBlock(scope: !2694, file: !581, line: 780, column: 43)
!2702 = !DILocation(line: 781, column: 18, scope: !2700)
!2703 = !DILocation(line: 781, column: 25, scope: !2704)
!2704 = !DILexicalBlockFile(scope: !2705, file: !581, discriminator: 1)
!2705 = distinct !DILexicalBlock(scope: !2700, file: !581, line: 781, column: 13)
!2706 = !DILocation(line: 781, column: 29, scope: !2704)
!2707 = !DILocation(line: 781, column: 34, scope: !2704)
!2708 = !DILocation(line: 781, column: 27, scope: !2704)
!2709 = !DILocation(line: 781, column: 13, scope: !2704)
!2710 = !DILocation(line: 782, column: 26, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2712, file: !581, line: 782, column: 21)
!2712 = distinct !DILexicalBlock(scope: !2705, file: !581, line: 781, column: 46)
!2713 = !DILocation(line: 782, column: 44, scope: !2711)
!2714 = !DILocation(line: 782, column: 30, scope: !2711)
!2715 = !DILocation(line: 782, column: 35, scope: !2711)
!2716 = !DILocation(line: 782, column: 28, scope: !2711)
!2717 = !DILocation(line: 782, column: 50, scope: !2711)
!2718 = !DILocation(line: 782, column: 48, scope: !2711)
!2719 = !DILocation(line: 782, column: 22, scope: !2711)
!2720 = !DILocation(line: 782, column: 21, scope: !2712)
!2721 = !DILocation(line: 783, column: 54, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2711, file: !581, line: 782, column: 54)
!2723 = !DILocation(line: 783, column: 25, scope: !2722)
!2724 = !DILocation(line: 783, column: 43, scope: !2722)
!2725 = !DILocation(line: 783, column: 29, scope: !2722)
!2726 = !DILocation(line: 783, column: 34, scope: !2722)
!2727 = !DILocation(line: 783, column: 27, scope: !2722)
!2728 = !DILocation(line: 783, column: 49, scope: !2722)
!2729 = !DILocation(line: 783, column: 47, scope: !2722)
!2730 = !DILocation(line: 783, column: 21, scope: !2722)
!2731 = !DILocation(line: 783, column: 52, scope: !2722)
!2732 = !DILocation(line: 784, column: 54, scope: !2722)
!2733 = !DILocation(line: 784, column: 25, scope: !2722)
!2734 = !DILocation(line: 784, column: 43, scope: !2722)
!2735 = !DILocation(line: 784, column: 29, scope: !2722)
!2736 = !DILocation(line: 784, column: 34, scope: !2722)
!2737 = !DILocation(line: 784, column: 27, scope: !2722)
!2738 = !DILocation(line: 784, column: 49, scope: !2722)
!2739 = !DILocation(line: 784, column: 47, scope: !2722)
!2740 = !DILocation(line: 784, column: 21, scope: !2722)
!2741 = !DILocation(line: 784, column: 52, scope: !2722)
!2742 = !DILocation(line: 785, column: 75, scope: !2722)
!2743 = !DILocation(line: 785, column: 77, scope: !2722)
!2744 = !DILocation(line: 785, column: 84, scope: !2722)
!2745 = !DILocation(line: 785, column: 86, scope: !2722)
!2746 = !DILocation(line: 785, column: 69, scope: !2722)
!2747 = !DILocation(line: 785, column: 67, scope: !2722)
!2748 = !DILocation(line: 785, column: 54, scope: !2722)
!2749 = !DILocation(line: 785, column: 25, scope: !2722)
!2750 = !DILocation(line: 785, column: 43, scope: !2722)
!2751 = !DILocation(line: 785, column: 29, scope: !2722)
!2752 = !DILocation(line: 785, column: 34, scope: !2722)
!2753 = !DILocation(line: 785, column: 27, scope: !2722)
!2754 = !DILocation(line: 785, column: 49, scope: !2722)
!2755 = !DILocation(line: 785, column: 47, scope: !2722)
!2756 = !DILocation(line: 785, column: 21, scope: !2722)
!2757 = !DILocation(line: 785, column: 52, scope: !2722)
!2758 = !DILocation(line: 786, column: 17, scope: !2722)
!2759 = !DILocation(line: 787, column: 13, scope: !2712)
!2760 = !DILocation(line: 781, column: 42, scope: !2761)
!2761 = !DILexicalBlockFile(scope: !2705, file: !581, discriminator: 2)
!2762 = !DILocation(line: 781, column: 13, scope: !2761)
!2763 = distinct !{!2763, !2764}
!2764 = !DILocation(line: 781, column: 13, scope: !2701)
!2765 = !DILocation(line: 788, column: 9, scope: !2701)
!2766 = !DILocation(line: 780, column: 39, scope: !2767)
!2767 = !DILexicalBlockFile(scope: !2694, file: !581, discriminator: 2)
!2768 = !DILocation(line: 780, column: 9, scope: !2767)
!2769 = distinct !{!2769, !2770}
!2770 = !DILocation(line: 780, column: 9, scope: !2690)
!2771 = !DILocation(line: 789, column: 5, scope: !2690)
!2772 = !DILocation(line: 790, column: 1, scope: !1619)
!2773 = distinct !DISubprogram(name: "vectorscope16", scope: !581, file: !581, line: 400, type: !1620, isLocal: true, isDefinition: true, scopeLine: 401, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!2774 = !DILocalVariable(name: "s", arg: 1, scope: !2773, file: !581, line: 400, type: !817)
!2775 = !DILocation(line: 400, column: 47, scope: !2773)
!2776 = !DILocalVariable(name: "in", arg: 2, scope: !2773, file: !581, line: 400, type: !285)
!2777 = !DILocation(line: 400, column: 59, scope: !2773)
!2778 = !DILocalVariable(name: "out", arg: 3, scope: !2773, file: !581, line: 400, type: !285)
!2779 = !DILocation(line: 400, column: 72, scope: !2773)
!2780 = !DILocalVariable(name: "pd", arg: 4, scope: !2773, file: !581, line: 400, type: !200)
!2781 = !DILocation(line: 400, column: 81, scope: !2773)
!2782 = !DILocalVariable(name: "src", scope: !2773, file: !581, line: 402, type: !794)
!2783 = !DILocation(line: 402, column: 29, scope: !2773)
!2784 = !DILocation(line: 402, column: 61, scope: !2773)
!2785 = !DILocation(line: 402, column: 65, scope: !2773)
!2786 = !DILocation(line: 402, column: 35, scope: !2773)
!2787 = !DILocalVariable(name: "slinesizex", scope: !2773, file: !581, line: 403, type: !1635)
!2788 = !DILocation(line: 403, column: 15, scope: !2773)
!2789 = !DILocation(line: 403, column: 41, scope: !2773)
!2790 = !DILocation(line: 403, column: 44, scope: !2773)
!2791 = !DILocation(line: 403, column: 28, scope: !2773)
!2792 = !DILocation(line: 403, column: 32, scope: !2773)
!2793 = !DILocation(line: 403, column: 47, scope: !2773)
!2794 = !DILocalVariable(name: "slinesizey", scope: !2773, file: !581, line: 404, type: !1635)
!2795 = !DILocation(line: 404, column: 15, scope: !2773)
!2796 = !DILocation(line: 404, column: 41, scope: !2773)
!2797 = !DILocation(line: 404, column: 44, scope: !2773)
!2798 = !DILocation(line: 404, column: 28, scope: !2773)
!2799 = !DILocation(line: 404, column: 32, scope: !2773)
!2800 = !DILocation(line: 404, column: 47, scope: !2773)
!2801 = !DILocalVariable(name: "slinesized", scope: !2773, file: !581, line: 405, type: !1635)
!2802 = !DILocation(line: 405, column: 15, scope: !2773)
!2803 = !DILocation(line: 405, column: 41, scope: !2773)
!2804 = !DILocation(line: 405, column: 28, scope: !2773)
!2805 = !DILocation(line: 405, column: 32, scope: !2773)
!2806 = !DILocation(line: 405, column: 45, scope: !2773)
!2807 = !DILocalVariable(name: "dlinesize", scope: !2773, file: !581, line: 406, type: !1635)
!2808 = !DILocation(line: 406, column: 15, scope: !2773)
!2809 = !DILocation(line: 406, column: 27, scope: !2773)
!2810 = !DILocation(line: 406, column: 32, scope: !2773)
!2811 = !DILocation(line: 406, column: 44, scope: !2773)
!2812 = !DILocalVariable(name: "intensity", scope: !2773, file: !581, line: 407, type: !1635)
!2813 = !DILocation(line: 407, column: 15, scope: !2773)
!2814 = !DILocation(line: 407, column: 27, scope: !2773)
!2815 = !DILocation(line: 407, column: 30, scope: !2773)
!2816 = !DILocalVariable(name: "px", scope: !2773, file: !581, line: 408, type: !1635)
!2817 = !DILocation(line: 408, column: 15, scope: !2773)
!2818 = !DILocation(line: 408, column: 20, scope: !2773)
!2819 = !DILocation(line: 408, column: 23, scope: !2773)
!2820 = !DILocalVariable(name: "py", scope: !2773, file: !581, line: 408, type: !1635)
!2821 = !DILocation(line: 408, column: 26, scope: !2773)
!2822 = !DILocation(line: 408, column: 31, scope: !2773)
!2823 = !DILocation(line: 408, column: 34, scope: !2773)
!2824 = !DILocalVariable(name: "h", scope: !2773, file: !581, line: 409, type: !1635)
!2825 = !DILocation(line: 409, column: 15, scope: !2773)
!2826 = !DILocation(line: 409, column: 34, scope: !2773)
!2827 = !DILocation(line: 409, column: 19, scope: !2773)
!2828 = !DILocation(line: 409, column: 22, scope: !2773)
!2829 = !DILocalVariable(name: "w", scope: !2773, file: !581, line: 410, type: !1635)
!2830 = !DILocation(line: 410, column: 15, scope: !2773)
!2831 = !DILocation(line: 410, column: 33, scope: !2773)
!2832 = !DILocation(line: 410, column: 19, scope: !2773)
!2833 = !DILocation(line: 410, column: 22, scope: !2773)
!2834 = !DILocalVariable(name: "spx", scope: !2773, file: !581, line: 411, type: !796)
!2835 = !DILocation(line: 411, column: 21, scope: !2773)
!2836 = !DILocation(line: 411, column: 31, scope: !2773)
!2837 = !DILocation(line: 411, column: 27, scope: !2773)
!2838 = !DILocalVariable(name: "spy", scope: !2773, file: !581, line: 412, type: !796)
!2839 = !DILocation(line: 412, column: 21, scope: !2773)
!2840 = !DILocation(line: 412, column: 31, scope: !2773)
!2841 = !DILocation(line: 412, column: 27, scope: !2773)
!2842 = !DILocalVariable(name: "spd", scope: !2773, file: !581, line: 413, type: !796)
!2843 = !DILocation(line: 413, column: 21, scope: !2773)
!2844 = !DILocation(line: 413, column: 31, scope: !2773)
!2845 = !DILocation(line: 413, column: 27, scope: !2773)
!2846 = !DILocalVariable(name: "hsub", scope: !2773, file: !581, line: 414, type: !1635)
!2847 = !DILocation(line: 414, column: 15, scope: !2773)
!2848 = !DILocation(line: 414, column: 22, scope: !2773)
!2849 = !DILocation(line: 414, column: 25, scope: !2773)
!2850 = !DILocalVariable(name: "vsub", scope: !2773, file: !581, line: 415, type: !1635)
!2851 = !DILocation(line: 415, column: 15, scope: !2773)
!2852 = !DILocation(line: 415, column: 22, scope: !2773)
!2853 = !DILocation(line: 415, column: 25, scope: !2773)
!2854 = !DILocalVariable(name: "dst", scope: !2773, file: !581, line: 416, type: !800)
!2855 = !DILocation(line: 416, column: 16, scope: !2773)
!2856 = !DILocation(line: 416, column: 35, scope: !2773)
!2857 = !DILocation(line: 416, column: 40, scope: !2773)
!2858 = !DILocation(line: 416, column: 22, scope: !2773)
!2859 = !DILocalVariable(name: "dpx", scope: !2773, file: !581, line: 417, type: !801)
!2860 = !DILocation(line: 417, column: 15, scope: !2773)
!2861 = !DILocation(line: 417, column: 25, scope: !2773)
!2862 = !DILocation(line: 417, column: 21, scope: !2773)
!2863 = !DILocalVariable(name: "dpy", scope: !2773, file: !581, line: 418, type: !801)
!2864 = !DILocation(line: 418, column: 15, scope: !2773)
!2865 = !DILocation(line: 418, column: 25, scope: !2773)
!2866 = !DILocation(line: 418, column: 21, scope: !2773)
!2867 = !DILocalVariable(name: "dpd", scope: !2773, file: !581, line: 419, type: !801)
!2868 = !DILocation(line: 419, column: 15, scope: !2773)
!2869 = !DILocation(line: 419, column: 25, scope: !2773)
!2870 = !DILocation(line: 419, column: 21, scope: !2773)
!2871 = !DILocalVariable(name: "max", scope: !2773, file: !581, line: 420, type: !1635)
!2872 = !DILocation(line: 420, column: 15, scope: !2773)
!2873 = !DILocation(line: 420, column: 21, scope: !2773)
!2874 = !DILocation(line: 420, column: 24, scope: !2773)
!2875 = !DILocation(line: 420, column: 29, scope: !2773)
!2876 = !DILocalVariable(name: "mid", scope: !2773, file: !581, line: 421, type: !1635)
!2877 = !DILocation(line: 421, column: 15, scope: !2773)
!2878 = !DILocation(line: 421, column: 21, scope: !2773)
!2879 = !DILocation(line: 421, column: 24, scope: !2773)
!2880 = !DILocation(line: 421, column: 29, scope: !2773)
!2881 = !DILocalVariable(name: "tmin", scope: !2773, file: !581, line: 422, type: !1635)
!2882 = !DILocation(line: 422, column: 15, scope: !2773)
!2883 = !DILocation(line: 422, column: 22, scope: !2773)
!2884 = !DILocation(line: 422, column: 25, scope: !2773)
!2885 = !DILocalVariable(name: "tmax", scope: !2773, file: !581, line: 423, type: !1635)
!2886 = !DILocation(line: 423, column: 15, scope: !2773)
!2887 = !DILocation(line: 423, column: 22, scope: !2773)
!2888 = !DILocation(line: 423, column: 25, scope: !2773)
!2889 = !DILocalVariable(name: "i", scope: !2773, file: !581, line: 424, type: !200)
!2890 = !DILocation(line: 424, column: 9, scope: !2773)
!2891 = !DILocalVariable(name: "j", scope: !2773, file: !581, line: 424, type: !200)
!2892 = !DILocation(line: 424, column: 12, scope: !2773)
!2893 = !DILocalVariable(name: "k", scope: !2773, file: !581, line: 424, type: !200)
!2894 = !DILocation(line: 424, column: 15, scope: !2773)
!2895 = !DILocation(line: 426, column: 12, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2773, file: !581, line: 426, column: 5)
!2897 = !DILocation(line: 426, column: 10, scope: !2896)
!2898 = !DILocation(line: 426, column: 17, scope: !2899)
!2899 = !DILexicalBlockFile(scope: !2900, file: !581, discriminator: 1)
!2900 = distinct !DILexicalBlock(scope: !2896, file: !581, line: 426, column: 5)
!2901 = !DILocation(line: 426, column: 19, scope: !2899)
!2902 = !DILocation(line: 426, column: 23, scope: !2899)
!2903 = !DILocation(line: 426, column: 30, scope: !2904)
!2904 = !DILexicalBlockFile(scope: !2900, file: !581, discriminator: 2)
!2905 = !DILocation(line: 426, column: 26, scope: !2904)
!2906 = !DILocation(line: 426, column: 23, scope: !2904)
!2907 = !DILocation(line: 426, column: 5, scope: !2908)
!2908 = !DILexicalBlockFile(scope: !2896, file: !581, discriminator: 3)
!2909 = !DILocation(line: 427, column: 16, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2911, file: !581, line: 427, column: 9)
!2911 = distinct !DILexicalBlock(scope: !2900, file: !581, line: 426, column: 39)
!2912 = !DILocation(line: 427, column: 14, scope: !2910)
!2913 = !DILocation(line: 427, column: 21, scope: !2914)
!2914 = !DILexicalBlockFile(scope: !2915, file: !581, discriminator: 1)
!2915 = distinct !DILexicalBlock(scope: !2910, file: !581, line: 427, column: 9)
!2916 = !DILocation(line: 427, column: 25, scope: !2914)
!2917 = !DILocation(line: 427, column: 30, scope: !2914)
!2918 = !DILocation(line: 427, column: 23, scope: !2914)
!2919 = !DILocation(line: 427, column: 9, scope: !2914)
!2920 = !DILocation(line: 428, column: 20, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2915, file: !581, line: 428, column: 13)
!2922 = !DILocation(line: 428, column: 18, scope: !2921)
!2923 = !DILocation(line: 428, column: 25, scope: !2924)
!2924 = !DILexicalBlockFile(scope: !2925, file: !581, discriminator: 1)
!2925 = distinct !DILexicalBlock(scope: !2921, file: !581, line: 428, column: 13)
!2926 = !DILocation(line: 428, column: 29, scope: !2924)
!2927 = !DILocation(line: 428, column: 34, scope: !2924)
!2928 = !DILocation(line: 428, column: 27, scope: !2924)
!2929 = !DILocation(line: 428, column: 13, scope: !2924)
!2930 = !DILocation(line: 429, column: 98, scope: !2925)
!2931 = !DILocation(line: 429, column: 101, scope: !2925)
!2932 = !DILocation(line: 429, column: 106, scope: !2925)
!2933 = !DILocation(line: 429, column: 115, scope: !2925)
!2934 = !DILocation(line: 429, column: 118, scope: !2924)
!2935 = !DILocation(line: 429, column: 121, scope: !2924)
!2936 = !DILocation(line: 429, column: 126, scope: !2924)
!2937 = !DILocation(line: 429, column: 137, scope: !2924)
!2938 = !DILocation(line: 429, column: 140, scope: !2939)
!2939 = !DILexicalBlockFile(scope: !2925, file: !581, discriminator: 2)
!2940 = !DILocation(line: 429, column: 145, scope: !2939)
!2941 = !DILocation(line: 429, column: 148, scope: !2939)
!2942 = !DILocation(line: 429, column: 142, scope: !2939)
!2943 = !DILocation(line: 429, column: 97, scope: !2939)
!2944 = !DILocation(line: 429, column: 97, scope: !2945)
!2945 = !DILexicalBlockFile(scope: !2925, file: !581, discriminator: 3)
!2946 = !DILocation(line: 429, column: 169, scope: !2947)
!2947 = !DILexicalBlockFile(scope: !2925, file: !581, discriminator: 4)
!2948 = !DILocation(line: 429, column: 157, scope: !2947)
!2949 = !DILocation(line: 429, column: 160, scope: !2947)
!2950 = !DILocation(line: 429, column: 97, scope: !2947)
!2951 = !DILocation(line: 429, column: 97, scope: !2952)
!2952 = !DILexicalBlockFile(scope: !2925, file: !581, discriminator: 5)
!2953 = !DILocation(line: 429, column: 96, scope: !2952)
!2954 = !DILocation(line: 429, column: 54, scope: !2952)
!2955 = !DILocation(line: 429, column: 44, scope: !2952)
!2956 = !DILocation(line: 429, column: 49, scope: !2952)
!2957 = !DILocation(line: 429, column: 59, scope: !2952)
!2958 = !DILocation(line: 429, column: 77, scope: !2952)
!2959 = !DILocation(line: 429, column: 63, scope: !2952)
!2960 = !DILocation(line: 429, column: 68, scope: !2952)
!2961 = !DILocation(line: 429, column: 61, scope: !2952)
!2962 = !DILocation(line: 429, column: 57, scope: !2952)
!2963 = !DILocation(line: 429, column: 82, scope: !2952)
!2964 = !DILocation(line: 429, column: 84, scope: !2952)
!2965 = !DILocation(line: 429, column: 80, scope: !2952)
!2966 = !DILocation(line: 429, column: 91, scope: !2952)
!2967 = !DILocation(line: 429, column: 94, scope: !2952)
!2968 = !DILocation(line: 429, column: 17, scope: !2952)
!2969 = !DILocation(line: 428, column: 42, scope: !2939)
!2970 = !DILocation(line: 428, column: 13, scope: !2939)
!2971 = distinct !{!2971, !2972}
!2972 = !DILocation(line: 428, column: 13, scope: !2915)
!2973 = !DILocation(line: 429, column: 172, scope: !2974)
!2974 = !DILexicalBlockFile(scope: !2921, file: !581, discriminator: 6)
!2975 = !DILocation(line: 427, column: 40, scope: !2976)
!2976 = !DILexicalBlockFile(scope: !2915, file: !581, discriminator: 2)
!2977 = !DILocation(line: 427, column: 9, scope: !2976)
!2978 = distinct !{!2978, !2979}
!2979 = !DILocation(line: 427, column: 9, scope: !2911)
!2980 = !DILocation(line: 431, column: 5, scope: !2911)
!2981 = !DILocation(line: 426, column: 35, scope: !2982)
!2982 = !DILexicalBlockFile(scope: !2900, file: !581, discriminator: 4)
!2983 = !DILocation(line: 426, column: 5, scope: !2982)
!2984 = distinct !{!2984, !2985}
!2985 = !DILocation(line: 426, column: 5, scope: !2773)
!2986 = !DILocation(line: 433, column: 13, scope: !2773)
!2987 = !DILocation(line: 433, column: 16, scope: !2773)
!2988 = !DILocation(line: 433, column: 5, scope: !2773)
!2989 = !DILocation(line: 437, column: 13, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2991, file: !581, line: 437, column: 13)
!2991 = distinct !DILexicalBlock(scope: !2773, file: !581, line: 433, column: 22)
!2992 = !DILocation(line: 437, column: 16, scope: !2990)
!2993 = !DILocation(line: 437, column: 13, scope: !2991)
!2994 = !DILocation(line: 438, column: 20, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2996, file: !581, line: 438, column: 13)
!2996 = distinct !DILexicalBlock(scope: !2990, file: !581, line: 437, column: 24)
!2997 = !DILocation(line: 438, column: 18, scope: !2995)
!2998 = !DILocation(line: 438, column: 25, scope: !2999)
!2999 = !DILexicalBlockFile(scope: !3000, file: !581, discriminator: 1)
!3000 = distinct !DILexicalBlock(scope: !2995, file: !581, line: 438, column: 13)
!3001 = !DILocation(line: 438, column: 29, scope: !2999)
!3002 = !DILocation(line: 438, column: 27, scope: !2999)
!3003 = !DILocation(line: 438, column: 13, scope: !2999)
!3004 = !DILocalVariable(name: "iwx", scope: !3005, file: !581, line: 439, type: !1635)
!3005 = distinct !DILexicalBlock(scope: !3000, file: !581, line: 438, column: 37)
!3006 = !DILocation(line: 439, column: 27, scope: !3005)
!3007 = !DILocation(line: 439, column: 33, scope: !3005)
!3008 = !DILocation(line: 439, column: 37, scope: !3005)
!3009 = !DILocation(line: 439, column: 35, scope: !3005)
!3010 = !DILocalVariable(name: "iwy", scope: !3005, file: !581, line: 440, type: !1635)
!3011 = !DILocation(line: 440, column: 27, scope: !3005)
!3012 = !DILocation(line: 440, column: 33, scope: !3005)
!3013 = !DILocation(line: 440, column: 37, scope: !3005)
!3014 = !DILocation(line: 440, column: 35, scope: !3005)
!3015 = !DILocalVariable(name: "iwd", scope: !3005, file: !581, line: 441, type: !1635)
!3016 = !DILocation(line: 441, column: 27, scope: !3005)
!3017 = !DILocation(line: 441, column: 33, scope: !3005)
!3018 = !DILocation(line: 441, column: 37, scope: !3005)
!3019 = !DILocation(line: 441, column: 35, scope: !3005)
!3020 = !DILocation(line: 442, column: 24, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3005, file: !581, line: 442, column: 17)
!3022 = !DILocation(line: 442, column: 22, scope: !3021)
!3023 = !DILocation(line: 442, column: 29, scope: !3024)
!3024 = !DILexicalBlockFile(scope: !3025, file: !581, discriminator: 1)
!3025 = distinct !DILexicalBlock(scope: !3021, file: !581, line: 442, column: 17)
!3026 = !DILocation(line: 442, column: 33, scope: !3024)
!3027 = !DILocation(line: 442, column: 31, scope: !3024)
!3028 = !DILocation(line: 442, column: 17, scope: !3024)
!3029 = !DILocalVariable(name: "x", scope: !3030, file: !581, line: 443, type: !1635)
!3030 = distinct !DILexicalBlock(scope: !3025, file: !581, line: 442, column: 41)
!3031 = !DILocation(line: 443, column: 31, scope: !3030)
!3032 = !DILocation(line: 443, column: 41, scope: !3030)
!3033 = !DILocation(line: 443, column: 47, scope: !3030)
!3034 = !DILocation(line: 443, column: 45, scope: !3030)
!3035 = !DILocation(line: 443, column: 37, scope: !3030)
!3036 = !DILocation(line: 443, column: 36, scope: !3030)
!3037 = !DILocation(line: 443, column: 54, scope: !3030)
!3038 = !DILocation(line: 443, column: 51, scope: !3030)
!3039 = !DILocation(line: 443, column: 62, scope: !3040)
!3040 = !DILexicalBlockFile(scope: !3030, file: !581, discriminator: 1)
!3041 = !DILocation(line: 443, column: 36, scope: !3040)
!3042 = !DILocation(line: 443, column: 74, scope: !3043)
!3043 = !DILexicalBlockFile(scope: !3030, file: !581, discriminator: 2)
!3044 = !DILocation(line: 443, column: 80, scope: !3043)
!3045 = !DILocation(line: 443, column: 78, scope: !3043)
!3046 = !DILocation(line: 443, column: 70, scope: !3043)
!3047 = !DILocation(line: 443, column: 69, scope: !3043)
!3048 = !DILocation(line: 443, column: 36, scope: !3043)
!3049 = !DILocation(line: 443, column: 36, scope: !3050)
!3050 = !DILexicalBlockFile(scope: !3030, file: !581, discriminator: 3)
!3051 = !DILocation(line: 443, column: 31, scope: !3050)
!3052 = !DILocalVariable(name: "y", scope: !3030, file: !581, line: 444, type: !1635)
!3053 = !DILocation(line: 444, column: 31, scope: !3030)
!3054 = !DILocation(line: 444, column: 41, scope: !3030)
!3055 = !DILocation(line: 444, column: 47, scope: !3030)
!3056 = !DILocation(line: 444, column: 45, scope: !3030)
!3057 = !DILocation(line: 444, column: 37, scope: !3030)
!3058 = !DILocation(line: 444, column: 36, scope: !3030)
!3059 = !DILocation(line: 444, column: 54, scope: !3030)
!3060 = !DILocation(line: 444, column: 51, scope: !3030)
!3061 = !DILocation(line: 444, column: 62, scope: !3040)
!3062 = !DILocation(line: 444, column: 36, scope: !3040)
!3063 = !DILocation(line: 444, column: 74, scope: !3043)
!3064 = !DILocation(line: 444, column: 80, scope: !3043)
!3065 = !DILocation(line: 444, column: 78, scope: !3043)
!3066 = !DILocation(line: 444, column: 70, scope: !3043)
!3067 = !DILocation(line: 444, column: 69, scope: !3043)
!3068 = !DILocation(line: 444, column: 36, scope: !3043)
!3069 = !DILocation(line: 444, column: 36, scope: !3050)
!3070 = !DILocation(line: 444, column: 31, scope: !3050)
!3071 = !DILocalVariable(name: "z", scope: !3030, file: !581, line: 445, type: !1635)
!3072 = !DILocation(line: 445, column: 31, scope: !3030)
!3073 = !DILocation(line: 445, column: 39, scope: !3030)
!3074 = !DILocation(line: 445, column: 45, scope: !3030)
!3075 = !DILocation(line: 445, column: 43, scope: !3030)
!3076 = !DILocation(line: 445, column: 35, scope: !3030)
!3077 = !DILocalVariable(name: "pos", scope: !3030, file: !581, line: 446, type: !1635)
!3078 = !DILocation(line: 446, column: 31, scope: !3030)
!3079 = !DILocation(line: 446, column: 37, scope: !3030)
!3080 = !DILocation(line: 446, column: 41, scope: !3030)
!3081 = !DILocation(line: 446, column: 39, scope: !3030)
!3082 = !DILocation(line: 446, column: 53, scope: !3030)
!3083 = !DILocation(line: 446, column: 51, scope: !3030)
!3084 = !DILocation(line: 448, column: 25, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3030, file: !581, line: 448, column: 25)
!3086 = !DILocation(line: 448, column: 29, scope: !3085)
!3087 = !DILocation(line: 448, column: 27, scope: !3085)
!3088 = !DILocation(line: 448, column: 34, scope: !3085)
!3089 = !DILocation(line: 448, column: 37, scope: !3090)
!3090 = !DILexicalBlockFile(scope: !3085, file: !581, discriminator: 1)
!3091 = !DILocation(line: 448, column: 41, scope: !3090)
!3092 = !DILocation(line: 448, column: 39, scope: !3090)
!3093 = !DILocation(line: 448, column: 25, scope: !3090)
!3094 = !DILocation(line: 449, column: 25, scope: !3085)
!3095 = !DILocation(line: 451, column: 38, scope: !3030)
!3096 = !DILocation(line: 451, column: 34, scope: !3030)
!3097 = !DILocation(line: 451, column: 45, scope: !3030)
!3098 = !DILocation(line: 451, column: 43, scope: !3030)
!3099 = !DILocation(line: 451, column: 59, scope: !3030)
!3100 = !DILocation(line: 451, column: 56, scope: !3030)
!3101 = !DILocation(line: 451, column: 33, scope: !3030)
!3102 = !DILocation(line: 451, column: 67, scope: !3040)
!3103 = !DILocation(line: 451, column: 33, scope: !3040)
!3104 = !DILocation(line: 451, column: 79, scope: !3043)
!3105 = !DILocation(line: 451, column: 75, scope: !3043)
!3106 = !DILocation(line: 451, column: 86, scope: !3043)
!3107 = !DILocation(line: 451, column: 84, scope: !3043)
!3108 = !DILocation(line: 451, column: 33, scope: !3043)
!3109 = !DILocation(line: 451, column: 33, scope: !3050)
!3110 = !DILocation(line: 451, column: 32, scope: !3050)
!3111 = !DILocation(line: 451, column: 25, scope: !3050)
!3112 = !DILocation(line: 451, column: 21, scope: !3050)
!3113 = !DILocation(line: 451, column: 30, scope: !3050)
!3114 = !DILocation(line: 452, column: 17, scope: !3030)
!3115 = !DILocation(line: 442, column: 37, scope: !3116)
!3116 = !DILexicalBlockFile(scope: !3025, file: !581, discriminator: 2)
!3117 = !DILocation(line: 442, column: 17, scope: !3116)
!3118 = distinct !{!3118, !3119}
!3119 = !DILocation(line: 442, column: 17, scope: !3005)
!3120 = !DILocation(line: 453, column: 13, scope: !3005)
!3121 = !DILocation(line: 438, column: 33, scope: !3122)
!3122 = !DILexicalBlockFile(scope: !3000, file: !581, discriminator: 2)
!3123 = !DILocation(line: 438, column: 13, scope: !3122)
!3124 = distinct !{!3124, !3125}
!3125 = !DILocation(line: 438, column: 13, scope: !2996)
!3126 = !DILocation(line: 454, column: 9, scope: !2996)
!3127 = !DILocation(line: 455, column: 20, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3129, file: !581, line: 455, column: 13)
!3129 = distinct !DILexicalBlock(scope: !2990, file: !581, line: 454, column: 16)
!3130 = !DILocation(line: 455, column: 18, scope: !3128)
!3131 = !DILocation(line: 455, column: 25, scope: !3132)
!3132 = !DILexicalBlockFile(scope: !3133, file: !581, discriminator: 1)
!3133 = distinct !DILexicalBlock(scope: !3128, file: !581, line: 455, column: 13)
!3134 = !DILocation(line: 455, column: 29, scope: !3132)
!3135 = !DILocation(line: 455, column: 27, scope: !3132)
!3136 = !DILocation(line: 455, column: 13, scope: !3132)
!3137 = !DILocalVariable(name: "iwx", scope: !3138, file: !581, line: 456, type: !1635)
!3138 = distinct !DILexicalBlock(scope: !3133, file: !581, line: 455, column: 37)
!3139 = !DILocation(line: 456, column: 27, scope: !3138)
!3140 = !DILocation(line: 456, column: 33, scope: !3138)
!3141 = !DILocation(line: 456, column: 37, scope: !3138)
!3142 = !DILocation(line: 456, column: 35, scope: !3138)
!3143 = !DILocalVariable(name: "iwy", scope: !3138, file: !581, line: 457, type: !1635)
!3144 = !DILocation(line: 457, column: 27, scope: !3138)
!3145 = !DILocation(line: 457, column: 33, scope: !3138)
!3146 = !DILocation(line: 457, column: 37, scope: !3138)
!3147 = !DILocation(line: 457, column: 35, scope: !3138)
!3148 = !DILocalVariable(name: "iwd", scope: !3138, file: !581, line: 458, type: !1635)
!3149 = !DILocation(line: 458, column: 27, scope: !3138)
!3150 = !DILocation(line: 458, column: 33, scope: !3138)
!3151 = !DILocation(line: 458, column: 37, scope: !3138)
!3152 = !DILocation(line: 458, column: 35, scope: !3138)
!3153 = !DILocation(line: 459, column: 24, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3138, file: !581, line: 459, column: 17)
!3155 = !DILocation(line: 459, column: 22, scope: !3154)
!3156 = !DILocation(line: 459, column: 29, scope: !3157)
!3157 = !DILexicalBlockFile(scope: !3158, file: !581, discriminator: 1)
!3158 = distinct !DILexicalBlock(scope: !3154, file: !581, line: 459, column: 17)
!3159 = !DILocation(line: 459, column: 33, scope: !3157)
!3160 = !DILocation(line: 459, column: 31, scope: !3157)
!3161 = !DILocation(line: 459, column: 17, scope: !3157)
!3162 = !DILocalVariable(name: "x", scope: !3163, file: !581, line: 460, type: !1635)
!3163 = distinct !DILexicalBlock(scope: !3158, file: !581, line: 459, column: 41)
!3164 = !DILocation(line: 460, column: 31, scope: !3163)
!3165 = !DILocation(line: 460, column: 41, scope: !3163)
!3166 = !DILocation(line: 460, column: 47, scope: !3163)
!3167 = !DILocation(line: 460, column: 45, scope: !3163)
!3168 = !DILocation(line: 460, column: 37, scope: !3163)
!3169 = !DILocation(line: 460, column: 36, scope: !3163)
!3170 = !DILocation(line: 460, column: 54, scope: !3163)
!3171 = !DILocation(line: 460, column: 51, scope: !3163)
!3172 = !DILocation(line: 460, column: 62, scope: !3173)
!3173 = !DILexicalBlockFile(scope: !3163, file: !581, discriminator: 1)
!3174 = !DILocation(line: 460, column: 36, scope: !3173)
!3175 = !DILocation(line: 460, column: 74, scope: !3176)
!3176 = !DILexicalBlockFile(scope: !3163, file: !581, discriminator: 2)
!3177 = !DILocation(line: 460, column: 80, scope: !3176)
!3178 = !DILocation(line: 460, column: 78, scope: !3176)
!3179 = !DILocation(line: 460, column: 70, scope: !3176)
!3180 = !DILocation(line: 460, column: 69, scope: !3176)
!3181 = !DILocation(line: 460, column: 36, scope: !3176)
!3182 = !DILocation(line: 460, column: 36, scope: !3183)
!3183 = !DILexicalBlockFile(scope: !3163, file: !581, discriminator: 3)
!3184 = !DILocation(line: 460, column: 31, scope: !3183)
!3185 = !DILocalVariable(name: "y", scope: !3163, file: !581, line: 461, type: !1635)
!3186 = !DILocation(line: 461, column: 31, scope: !3163)
!3187 = !DILocation(line: 461, column: 41, scope: !3163)
!3188 = !DILocation(line: 461, column: 47, scope: !3163)
!3189 = !DILocation(line: 461, column: 45, scope: !3163)
!3190 = !DILocation(line: 461, column: 37, scope: !3163)
!3191 = !DILocation(line: 461, column: 36, scope: !3163)
!3192 = !DILocation(line: 461, column: 54, scope: !3163)
!3193 = !DILocation(line: 461, column: 51, scope: !3163)
!3194 = !DILocation(line: 461, column: 62, scope: !3173)
!3195 = !DILocation(line: 461, column: 36, scope: !3173)
!3196 = !DILocation(line: 461, column: 74, scope: !3176)
!3197 = !DILocation(line: 461, column: 80, scope: !3176)
!3198 = !DILocation(line: 461, column: 78, scope: !3176)
!3199 = !DILocation(line: 461, column: 70, scope: !3176)
!3200 = !DILocation(line: 461, column: 69, scope: !3176)
!3201 = !DILocation(line: 461, column: 36, scope: !3176)
!3202 = !DILocation(line: 461, column: 36, scope: !3183)
!3203 = !DILocation(line: 461, column: 31, scope: !3183)
!3204 = !DILocalVariable(name: "z", scope: !3163, file: !581, line: 462, type: !1635)
!3205 = !DILocation(line: 462, column: 31, scope: !3163)
!3206 = !DILocation(line: 462, column: 39, scope: !3163)
!3207 = !DILocation(line: 462, column: 45, scope: !3163)
!3208 = !DILocation(line: 462, column: 43, scope: !3163)
!3209 = !DILocation(line: 462, column: 35, scope: !3163)
!3210 = !DILocalVariable(name: "pos", scope: !3163, file: !581, line: 463, type: !1635)
!3211 = !DILocation(line: 463, column: 31, scope: !3163)
!3212 = !DILocation(line: 463, column: 37, scope: !3163)
!3213 = !DILocation(line: 463, column: 41, scope: !3163)
!3214 = !DILocation(line: 463, column: 39, scope: !3163)
!3215 = !DILocation(line: 463, column: 53, scope: !3163)
!3216 = !DILocation(line: 463, column: 51, scope: !3163)
!3217 = !DILocation(line: 465, column: 25, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3163, file: !581, line: 465, column: 25)
!3219 = !DILocation(line: 465, column: 29, scope: !3218)
!3220 = !DILocation(line: 465, column: 27, scope: !3218)
!3221 = !DILocation(line: 465, column: 34, scope: !3218)
!3222 = !DILocation(line: 465, column: 37, scope: !3223)
!3223 = !DILexicalBlockFile(scope: !3218, file: !581, discriminator: 1)
!3224 = !DILocation(line: 465, column: 41, scope: !3223)
!3225 = !DILocation(line: 465, column: 39, scope: !3223)
!3226 = !DILocation(line: 465, column: 25, scope: !3223)
!3227 = !DILocation(line: 466, column: 25, scope: !3218)
!3228 = !DILocation(line: 468, column: 44, scope: !3163)
!3229 = !DILocation(line: 468, column: 37, scope: !3163)
!3230 = !DILocation(line: 468, column: 51, scope: !3163)
!3231 = !DILocation(line: 468, column: 49, scope: !3163)
!3232 = !DILocation(line: 468, column: 65, scope: !3163)
!3233 = !DILocation(line: 468, column: 62, scope: !3163)
!3234 = !DILocation(line: 468, column: 36, scope: !3163)
!3235 = !DILocation(line: 468, column: 73, scope: !3173)
!3236 = !DILocation(line: 468, column: 36, scope: !3173)
!3237 = !DILocation(line: 468, column: 88, scope: !3176)
!3238 = !DILocation(line: 468, column: 81, scope: !3176)
!3239 = !DILocation(line: 468, column: 95, scope: !3176)
!3240 = !DILocation(line: 468, column: 93, scope: !3176)
!3241 = !DILocation(line: 468, column: 36, scope: !3176)
!3242 = !DILocation(line: 468, column: 36, scope: !3183)
!3243 = !DILocation(line: 468, column: 35, scope: !3183)
!3244 = !DILocation(line: 468, column: 28, scope: !3183)
!3245 = !DILocation(line: 468, column: 21, scope: !3183)
!3246 = !DILocation(line: 468, column: 33, scope: !3183)
!3247 = !DILocation(line: 469, column: 44, scope: !3163)
!3248 = !DILocation(line: 469, column: 37, scope: !3163)
!3249 = !DILocation(line: 469, column: 51, scope: !3163)
!3250 = !DILocation(line: 469, column: 49, scope: !3163)
!3251 = !DILocation(line: 469, column: 65, scope: !3163)
!3252 = !DILocation(line: 469, column: 62, scope: !3163)
!3253 = !DILocation(line: 469, column: 36, scope: !3163)
!3254 = !DILocation(line: 469, column: 73, scope: !3173)
!3255 = !DILocation(line: 469, column: 36, scope: !3173)
!3256 = !DILocation(line: 469, column: 88, scope: !3176)
!3257 = !DILocation(line: 469, column: 81, scope: !3176)
!3258 = !DILocation(line: 469, column: 95, scope: !3176)
!3259 = !DILocation(line: 469, column: 93, scope: !3176)
!3260 = !DILocation(line: 469, column: 36, scope: !3176)
!3261 = !DILocation(line: 469, column: 36, scope: !3183)
!3262 = !DILocation(line: 469, column: 35, scope: !3183)
!3263 = !DILocation(line: 469, column: 28, scope: !3183)
!3264 = !DILocation(line: 469, column: 21, scope: !3183)
!3265 = !DILocation(line: 469, column: 33, scope: !3183)
!3266 = !DILocation(line: 470, column: 44, scope: !3163)
!3267 = !DILocation(line: 470, column: 37, scope: !3163)
!3268 = !DILocation(line: 470, column: 51, scope: !3163)
!3269 = !DILocation(line: 470, column: 49, scope: !3163)
!3270 = !DILocation(line: 470, column: 65, scope: !3163)
!3271 = !DILocation(line: 470, column: 62, scope: !3163)
!3272 = !DILocation(line: 470, column: 36, scope: !3163)
!3273 = !DILocation(line: 470, column: 73, scope: !3173)
!3274 = !DILocation(line: 470, column: 36, scope: !3173)
!3275 = !DILocation(line: 470, column: 88, scope: !3176)
!3276 = !DILocation(line: 470, column: 81, scope: !3176)
!3277 = !DILocation(line: 470, column: 95, scope: !3176)
!3278 = !DILocation(line: 470, column: 93, scope: !3176)
!3279 = !DILocation(line: 470, column: 36, scope: !3176)
!3280 = !DILocation(line: 470, column: 36, scope: !3183)
!3281 = !DILocation(line: 470, column: 35, scope: !3183)
!3282 = !DILocation(line: 470, column: 28, scope: !3183)
!3283 = !DILocation(line: 470, column: 21, scope: !3183)
!3284 = !DILocation(line: 470, column: 33, scope: !3183)
!3285 = !DILocation(line: 471, column: 17, scope: !3163)
!3286 = !DILocation(line: 459, column: 37, scope: !3287)
!3287 = !DILexicalBlockFile(scope: !3158, file: !581, discriminator: 2)
!3288 = !DILocation(line: 459, column: 17, scope: !3287)
!3289 = distinct !{!3289, !3290}
!3290 = !DILocation(line: 459, column: 17, scope: !3138)
!3291 = !DILocation(line: 472, column: 13, scope: !3138)
!3292 = !DILocation(line: 455, column: 33, scope: !3293)
!3293 = !DILexicalBlockFile(scope: !3133, file: !581, discriminator: 2)
!3294 = !DILocation(line: 455, column: 13, scope: !3293)
!3295 = distinct !{!3295, !3296}
!3296 = !DILocation(line: 455, column: 13, scope: !3129)
!3297 = !DILocation(line: 474, column: 9, scope: !2991)
!3298 = !DILocation(line: 476, column: 13, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !2991, file: !581, line: 476, column: 13)
!3300 = !DILocation(line: 476, column: 16, scope: !3299)
!3301 = !DILocation(line: 476, column: 13, scope: !2991)
!3302 = !DILocation(line: 477, column: 20, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !581, line: 477, column: 13)
!3304 = distinct !DILexicalBlock(scope: !3299, file: !581, line: 476, column: 24)
!3305 = !DILocation(line: 477, column: 18, scope: !3303)
!3306 = !DILocation(line: 477, column: 25, scope: !3307)
!3307 = !DILexicalBlockFile(scope: !3308, file: !581, discriminator: 1)
!3308 = distinct !DILexicalBlock(scope: !3303, file: !581, line: 477, column: 13)
!3309 = !DILocation(line: 477, column: 29, scope: !3307)
!3310 = !DILocation(line: 477, column: 27, scope: !3307)
!3311 = !DILocation(line: 477, column: 13, scope: !3307)
!3312 = !DILocalVariable(name: "iw1", scope: !3313, file: !581, line: 478, type: !1635)
!3313 = distinct !DILexicalBlock(scope: !3308, file: !581, line: 477, column: 37)
!3314 = !DILocation(line: 478, column: 27, scope: !3313)
!3315 = !DILocation(line: 478, column: 33, scope: !3313)
!3316 = !DILocation(line: 478, column: 37, scope: !3313)
!3317 = !DILocation(line: 478, column: 35, scope: !3313)
!3318 = !DILocalVariable(name: "iw2", scope: !3313, file: !581, line: 479, type: !1635)
!3319 = !DILocation(line: 479, column: 27, scope: !3313)
!3320 = !DILocation(line: 479, column: 33, scope: !3313)
!3321 = !DILocation(line: 479, column: 37, scope: !3313)
!3322 = !DILocation(line: 479, column: 35, scope: !3313)
!3323 = !DILocalVariable(name: "iwd", scope: !3313, file: !581, line: 480, type: !1635)
!3324 = !DILocation(line: 480, column: 27, scope: !3313)
!3325 = !DILocation(line: 480, column: 33, scope: !3313)
!3326 = !DILocation(line: 480, column: 37, scope: !3313)
!3327 = !DILocation(line: 480, column: 35, scope: !3313)
!3328 = !DILocation(line: 481, column: 24, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3313, file: !581, line: 481, column: 17)
!3330 = !DILocation(line: 481, column: 22, scope: !3329)
!3331 = !DILocation(line: 481, column: 29, scope: !3332)
!3332 = !DILexicalBlockFile(scope: !3333, file: !581, discriminator: 1)
!3333 = distinct !DILexicalBlock(scope: !3329, file: !581, line: 481, column: 17)
!3334 = !DILocation(line: 481, column: 33, scope: !3332)
!3335 = !DILocation(line: 481, column: 31, scope: !3332)
!3336 = !DILocation(line: 481, column: 17, scope: !3332)
!3337 = !DILocalVariable(name: "x", scope: !3338, file: !581, line: 482, type: !1635)
!3338 = distinct !DILexicalBlock(scope: !3333, file: !581, line: 481, column: 41)
!3339 = !DILocation(line: 482, column: 31, scope: !3338)
!3340 = !DILocation(line: 482, column: 41, scope: !3338)
!3341 = !DILocation(line: 482, column: 47, scope: !3338)
!3342 = !DILocation(line: 482, column: 45, scope: !3338)
!3343 = !DILocation(line: 482, column: 37, scope: !3338)
!3344 = !DILocation(line: 482, column: 36, scope: !3338)
!3345 = !DILocation(line: 482, column: 54, scope: !3338)
!3346 = !DILocation(line: 482, column: 51, scope: !3338)
!3347 = !DILocation(line: 482, column: 62, scope: !3348)
!3348 = !DILexicalBlockFile(scope: !3338, file: !581, discriminator: 1)
!3349 = !DILocation(line: 482, column: 36, scope: !3348)
!3350 = !DILocation(line: 482, column: 74, scope: !3351)
!3351 = !DILexicalBlockFile(scope: !3338, file: !581, discriminator: 2)
!3352 = !DILocation(line: 482, column: 80, scope: !3351)
!3353 = !DILocation(line: 482, column: 78, scope: !3351)
!3354 = !DILocation(line: 482, column: 70, scope: !3351)
!3355 = !DILocation(line: 482, column: 69, scope: !3351)
!3356 = !DILocation(line: 482, column: 36, scope: !3351)
!3357 = !DILocation(line: 482, column: 36, scope: !3358)
!3358 = !DILexicalBlockFile(scope: !3338, file: !581, discriminator: 3)
!3359 = !DILocation(line: 482, column: 31, scope: !3358)
!3360 = !DILocalVariable(name: "y", scope: !3338, file: !581, line: 483, type: !1635)
!3361 = !DILocation(line: 483, column: 31, scope: !3338)
!3362 = !DILocation(line: 483, column: 41, scope: !3338)
!3363 = !DILocation(line: 483, column: 47, scope: !3338)
!3364 = !DILocation(line: 483, column: 45, scope: !3338)
!3365 = !DILocation(line: 483, column: 37, scope: !3338)
!3366 = !DILocation(line: 483, column: 36, scope: !3338)
!3367 = !DILocation(line: 483, column: 54, scope: !3338)
!3368 = !DILocation(line: 483, column: 51, scope: !3338)
!3369 = !DILocation(line: 483, column: 62, scope: !3348)
!3370 = !DILocation(line: 483, column: 36, scope: !3348)
!3371 = !DILocation(line: 483, column: 74, scope: !3351)
!3372 = !DILocation(line: 483, column: 80, scope: !3351)
!3373 = !DILocation(line: 483, column: 78, scope: !3351)
!3374 = !DILocation(line: 483, column: 70, scope: !3351)
!3375 = !DILocation(line: 483, column: 69, scope: !3351)
!3376 = !DILocation(line: 483, column: 36, scope: !3351)
!3377 = !DILocation(line: 483, column: 36, scope: !3358)
!3378 = !DILocation(line: 483, column: 31, scope: !3358)
!3379 = !DILocalVariable(name: "z", scope: !3338, file: !581, line: 484, type: !1635)
!3380 = !DILocation(line: 484, column: 31, scope: !3338)
!3381 = !DILocation(line: 484, column: 39, scope: !3338)
!3382 = !DILocation(line: 484, column: 45, scope: !3338)
!3383 = !DILocation(line: 484, column: 43, scope: !3338)
!3384 = !DILocation(line: 484, column: 35, scope: !3338)
!3385 = !DILocalVariable(name: "pos", scope: !3338, file: !581, line: 485, type: !1635)
!3386 = !DILocation(line: 485, column: 31, scope: !3338)
!3387 = !DILocation(line: 485, column: 37, scope: !3338)
!3388 = !DILocation(line: 485, column: 41, scope: !3338)
!3389 = !DILocation(line: 485, column: 39, scope: !3338)
!3390 = !DILocation(line: 485, column: 53, scope: !3338)
!3391 = !DILocation(line: 485, column: 51, scope: !3338)
!3392 = !DILocation(line: 487, column: 25, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3338, file: !581, line: 487, column: 25)
!3394 = !DILocation(line: 487, column: 29, scope: !3393)
!3395 = !DILocation(line: 487, column: 27, scope: !3393)
!3396 = !DILocation(line: 487, column: 34, scope: !3393)
!3397 = !DILocation(line: 487, column: 37, scope: !3398)
!3398 = !DILexicalBlockFile(scope: !3393, file: !581, discriminator: 1)
!3399 = !DILocation(line: 487, column: 41, scope: !3398)
!3400 = !DILocation(line: 487, column: 39, scope: !3398)
!3401 = !DILocation(line: 487, column: 25, scope: !3398)
!3402 = !DILocation(line: 488, column: 25, scope: !3393)
!3403 = !DILocation(line: 490, column: 30, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3338, file: !581, line: 490, column: 25)
!3405 = !DILocation(line: 490, column: 26, scope: !3404)
!3406 = !DILocation(line: 490, column: 25, scope: !3338)
!3407 = !DILocation(line: 491, column: 38, scope: !3404)
!3408 = !DILocation(line: 491, column: 44, scope: !3404)
!3409 = !DILocation(line: 491, column: 42, scope: !3404)
!3410 = !DILocation(line: 491, column: 47, scope: !3404)
!3411 = !DILocation(line: 491, column: 37, scope: !3404)
!3412 = !DILocation(line: 491, column: 55, scope: !3413)
!3413 = !DILexicalBlockFile(scope: !3404, file: !581, discriminator: 1)
!3414 = !DILocation(line: 491, column: 61, scope: !3413)
!3415 = !DILocation(line: 491, column: 59, scope: !3413)
!3416 = !DILocation(line: 491, column: 37, scope: !3413)
!3417 = !DILocation(line: 491, column: 69, scope: !3418)
!3418 = !DILexicalBlockFile(scope: !3404, file: !581, discriminator: 2)
!3419 = !DILocation(line: 491, column: 75, scope: !3418)
!3420 = !DILocation(line: 491, column: 73, scope: !3418)
!3421 = !DILocation(line: 491, column: 67, scope: !3418)
!3422 = !DILocation(line: 491, column: 37, scope: !3418)
!3423 = !DILocation(line: 491, column: 37, scope: !3424)
!3424 = !DILexicalBlockFile(scope: !3404, file: !581, discriminator: 3)
!3425 = !DILocation(line: 491, column: 84, scope: !3424)
!3426 = !DILocation(line: 491, column: 90, scope: !3424)
!3427 = !DILocation(line: 491, column: 88, scope: !3424)
!3428 = !DILocation(line: 491, column: 93, scope: !3424)
!3429 = !DILocation(line: 491, column: 83, scope: !3424)
!3430 = !DILocation(line: 491, column: 101, scope: !3431)
!3431 = !DILexicalBlockFile(scope: !3404, file: !581, discriminator: 4)
!3432 = !DILocation(line: 491, column: 107, scope: !3431)
!3433 = !DILocation(line: 491, column: 105, scope: !3431)
!3434 = !DILocation(line: 491, column: 83, scope: !3431)
!3435 = !DILocation(line: 491, column: 115, scope: !3436)
!3436 = !DILexicalBlockFile(scope: !3404, file: !581, discriminator: 5)
!3437 = !DILocation(line: 491, column: 121, scope: !3436)
!3438 = !DILocation(line: 491, column: 119, scope: !3436)
!3439 = !DILocation(line: 491, column: 113, scope: !3436)
!3440 = !DILocation(line: 491, column: 83, scope: !3436)
!3441 = !DILocation(line: 491, column: 83, scope: !3442)
!3442 = !DILexicalBlockFile(scope: !3404, file: !581, discriminator: 6)
!3443 = !DILocation(line: 491, column: 80, scope: !3442)
!3444 = !DILocation(line: 491, column: 36, scope: !3442)
!3445 = !DILocation(line: 491, column: 29, scope: !3442)
!3446 = !DILocation(line: 491, column: 25, scope: !3442)
!3447 = !DILocation(line: 491, column: 34, scope: !3442)
!3448 = !DILocation(line: 492, column: 32, scope: !3338)
!3449 = !DILocation(line: 492, column: 25, scope: !3338)
!3450 = !DILocation(line: 492, column: 21, scope: !3338)
!3451 = !DILocation(line: 492, column: 30, scope: !3338)
!3452 = !DILocation(line: 493, column: 32, scope: !3338)
!3453 = !DILocation(line: 493, column: 25, scope: !3338)
!3454 = !DILocation(line: 493, column: 21, scope: !3338)
!3455 = !DILocation(line: 493, column: 30, scope: !3338)
!3456 = !DILocation(line: 494, column: 17, scope: !3338)
!3457 = !DILocation(line: 481, column: 37, scope: !3458)
!3458 = !DILexicalBlockFile(scope: !3333, file: !581, discriminator: 2)
!3459 = !DILocation(line: 481, column: 17, scope: !3458)
!3460 = distinct !{!3460, !3461}
!3461 = !DILocation(line: 481, column: 17, scope: !3313)
!3462 = !DILocation(line: 495, column: 13, scope: !3313)
!3463 = !DILocation(line: 477, column: 33, scope: !3464)
!3464 = !DILexicalBlockFile(scope: !3308, file: !581, discriminator: 2)
!3465 = !DILocation(line: 477, column: 13, scope: !3464)
!3466 = distinct !{!3466, !3467}
!3467 = !DILocation(line: 477, column: 13, scope: !3304)
!3468 = !DILocation(line: 496, column: 9, scope: !3304)
!3469 = !DILocation(line: 497, column: 20, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !581, line: 497, column: 13)
!3471 = distinct !DILexicalBlock(scope: !3299, file: !581, line: 496, column: 16)
!3472 = !DILocation(line: 497, column: 18, scope: !3470)
!3473 = !DILocation(line: 497, column: 25, scope: !3474)
!3474 = !DILexicalBlockFile(scope: !3475, file: !581, discriminator: 1)
!3475 = distinct !DILexicalBlock(scope: !3470, file: !581, line: 497, column: 13)
!3476 = !DILocation(line: 497, column: 29, scope: !3474)
!3477 = !DILocation(line: 497, column: 27, scope: !3474)
!3478 = !DILocation(line: 497, column: 13, scope: !3474)
!3479 = !DILocalVariable(name: "iw1", scope: !3480, file: !581, line: 498, type: !1635)
!3480 = distinct !DILexicalBlock(scope: !3475, file: !581, line: 497, column: 37)
!3481 = !DILocation(line: 498, column: 27, scope: !3480)
!3482 = !DILocation(line: 498, column: 33, scope: !3480)
!3483 = !DILocation(line: 498, column: 37, scope: !3480)
!3484 = !DILocation(line: 498, column: 35, scope: !3480)
!3485 = !DILocalVariable(name: "iw2", scope: !3480, file: !581, line: 499, type: !1635)
!3486 = !DILocation(line: 499, column: 27, scope: !3480)
!3487 = !DILocation(line: 499, column: 33, scope: !3480)
!3488 = !DILocation(line: 499, column: 37, scope: !3480)
!3489 = !DILocation(line: 499, column: 35, scope: !3480)
!3490 = !DILocalVariable(name: "iwd", scope: !3480, file: !581, line: 500, type: !1635)
!3491 = !DILocation(line: 500, column: 27, scope: !3480)
!3492 = !DILocation(line: 500, column: 33, scope: !3480)
!3493 = !DILocation(line: 500, column: 37, scope: !3480)
!3494 = !DILocation(line: 500, column: 35, scope: !3480)
!3495 = !DILocation(line: 501, column: 24, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3480, file: !581, line: 501, column: 17)
!3497 = !DILocation(line: 501, column: 22, scope: !3496)
!3498 = !DILocation(line: 501, column: 29, scope: !3499)
!3499 = !DILexicalBlockFile(scope: !3500, file: !581, discriminator: 1)
!3500 = distinct !DILexicalBlock(scope: !3496, file: !581, line: 501, column: 17)
!3501 = !DILocation(line: 501, column: 33, scope: !3499)
!3502 = !DILocation(line: 501, column: 31, scope: !3499)
!3503 = !DILocation(line: 501, column: 17, scope: !3499)
!3504 = !DILocalVariable(name: "x", scope: !3505, file: !581, line: 502, type: !1635)
!3505 = distinct !DILexicalBlock(scope: !3500, file: !581, line: 501, column: 41)
!3506 = !DILocation(line: 502, column: 31, scope: !3505)
!3507 = !DILocation(line: 502, column: 41, scope: !3505)
!3508 = !DILocation(line: 502, column: 47, scope: !3505)
!3509 = !DILocation(line: 502, column: 45, scope: !3505)
!3510 = !DILocation(line: 502, column: 37, scope: !3505)
!3511 = !DILocation(line: 502, column: 36, scope: !3505)
!3512 = !DILocation(line: 502, column: 54, scope: !3505)
!3513 = !DILocation(line: 502, column: 51, scope: !3505)
!3514 = !DILocation(line: 502, column: 62, scope: !3515)
!3515 = !DILexicalBlockFile(scope: !3505, file: !581, discriminator: 1)
!3516 = !DILocation(line: 502, column: 36, scope: !3515)
!3517 = !DILocation(line: 502, column: 74, scope: !3518)
!3518 = !DILexicalBlockFile(scope: !3505, file: !581, discriminator: 2)
!3519 = !DILocation(line: 502, column: 80, scope: !3518)
!3520 = !DILocation(line: 502, column: 78, scope: !3518)
!3521 = !DILocation(line: 502, column: 70, scope: !3518)
!3522 = !DILocation(line: 502, column: 69, scope: !3518)
!3523 = !DILocation(line: 502, column: 36, scope: !3518)
!3524 = !DILocation(line: 502, column: 36, scope: !3525)
!3525 = !DILexicalBlockFile(scope: !3505, file: !581, discriminator: 3)
!3526 = !DILocation(line: 502, column: 31, scope: !3525)
!3527 = !DILocalVariable(name: "y", scope: !3505, file: !581, line: 503, type: !1635)
!3528 = !DILocation(line: 503, column: 31, scope: !3505)
!3529 = !DILocation(line: 503, column: 41, scope: !3505)
!3530 = !DILocation(line: 503, column: 47, scope: !3505)
!3531 = !DILocation(line: 503, column: 45, scope: !3505)
!3532 = !DILocation(line: 503, column: 37, scope: !3505)
!3533 = !DILocation(line: 503, column: 36, scope: !3505)
!3534 = !DILocation(line: 503, column: 54, scope: !3505)
!3535 = !DILocation(line: 503, column: 51, scope: !3505)
!3536 = !DILocation(line: 503, column: 62, scope: !3515)
!3537 = !DILocation(line: 503, column: 36, scope: !3515)
!3538 = !DILocation(line: 503, column: 74, scope: !3518)
!3539 = !DILocation(line: 503, column: 80, scope: !3518)
!3540 = !DILocation(line: 503, column: 78, scope: !3518)
!3541 = !DILocation(line: 503, column: 70, scope: !3518)
!3542 = !DILocation(line: 503, column: 69, scope: !3518)
!3543 = !DILocation(line: 503, column: 36, scope: !3518)
!3544 = !DILocation(line: 503, column: 36, scope: !3525)
!3545 = !DILocation(line: 503, column: 31, scope: !3525)
!3546 = !DILocalVariable(name: "z", scope: !3505, file: !581, line: 504, type: !1635)
!3547 = !DILocation(line: 504, column: 31, scope: !3505)
!3548 = !DILocation(line: 504, column: 39, scope: !3505)
!3549 = !DILocation(line: 504, column: 45, scope: !3505)
!3550 = !DILocation(line: 504, column: 43, scope: !3505)
!3551 = !DILocation(line: 504, column: 35, scope: !3505)
!3552 = !DILocalVariable(name: "pos", scope: !3505, file: !581, line: 505, type: !1635)
!3553 = !DILocation(line: 505, column: 31, scope: !3505)
!3554 = !DILocation(line: 505, column: 37, scope: !3505)
!3555 = !DILocation(line: 505, column: 41, scope: !3505)
!3556 = !DILocation(line: 505, column: 39, scope: !3505)
!3557 = !DILocation(line: 505, column: 53, scope: !3505)
!3558 = !DILocation(line: 505, column: 51, scope: !3505)
!3559 = !DILocation(line: 507, column: 25, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3505, file: !581, line: 507, column: 25)
!3561 = !DILocation(line: 507, column: 29, scope: !3560)
!3562 = !DILocation(line: 507, column: 27, scope: !3560)
!3563 = !DILocation(line: 507, column: 34, scope: !3560)
!3564 = !DILocation(line: 507, column: 37, scope: !3565)
!3565 = !DILexicalBlockFile(scope: !3560, file: !581, discriminator: 1)
!3566 = !DILocation(line: 507, column: 41, scope: !3565)
!3567 = !DILocation(line: 507, column: 39, scope: !3565)
!3568 = !DILocation(line: 507, column: 25, scope: !3565)
!3569 = !DILocation(line: 508, column: 25, scope: !3560)
!3570 = !DILocation(line: 510, column: 30, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3505, file: !581, line: 510, column: 25)
!3572 = !DILocation(line: 510, column: 26, scope: !3571)
!3573 = !DILocation(line: 510, column: 25, scope: !3505)
!3574 = !DILocation(line: 511, column: 38, scope: !3571)
!3575 = !DILocation(line: 511, column: 42, scope: !3571)
!3576 = !DILocation(line: 511, column: 40, scope: !3571)
!3577 = !DILocation(line: 511, column: 48, scope: !3571)
!3578 = !DILocation(line: 511, column: 45, scope: !3571)
!3579 = !DILocation(line: 511, column: 37, scope: !3571)
!3580 = !DILocation(line: 511, column: 56, scope: !3581)
!3581 = !DILexicalBlockFile(scope: !3571, file: !581, discriminator: 1)
!3582 = !DILocation(line: 511, column: 37, scope: !3581)
!3583 = !DILocation(line: 511, column: 64, scope: !3584)
!3584 = !DILexicalBlockFile(scope: !3571, file: !581, discriminator: 2)
!3585 = !DILocation(line: 511, column: 68, scope: !3584)
!3586 = !DILocation(line: 511, column: 66, scope: !3584)
!3587 = !DILocation(line: 511, column: 37, scope: !3584)
!3588 = !DILocation(line: 511, column: 37, scope: !3589)
!3589 = !DILexicalBlockFile(scope: !3571, file: !581, discriminator: 3)
!3590 = !DILocation(line: 511, column: 36, scope: !3589)
!3591 = !DILocation(line: 511, column: 29, scope: !3589)
!3592 = !DILocation(line: 511, column: 25, scope: !3589)
!3593 = !DILocation(line: 511, column: 34, scope: !3589)
!3594 = !DILocation(line: 512, column: 32, scope: !3505)
!3595 = !DILocation(line: 512, column: 25, scope: !3505)
!3596 = !DILocation(line: 512, column: 21, scope: !3505)
!3597 = !DILocation(line: 512, column: 30, scope: !3505)
!3598 = !DILocation(line: 513, column: 32, scope: !3505)
!3599 = !DILocation(line: 513, column: 25, scope: !3505)
!3600 = !DILocation(line: 513, column: 21, scope: !3505)
!3601 = !DILocation(line: 513, column: 30, scope: !3505)
!3602 = !DILocation(line: 514, column: 17, scope: !3505)
!3603 = !DILocation(line: 501, column: 37, scope: !3604)
!3604 = !DILexicalBlockFile(scope: !3500, file: !581, discriminator: 2)
!3605 = !DILocation(line: 501, column: 17, scope: !3604)
!3606 = distinct !{!3606, !3607}
!3607 = !DILocation(line: 501, column: 17, scope: !3480)
!3608 = !DILocation(line: 515, column: 13, scope: !3480)
!3609 = !DILocation(line: 497, column: 33, scope: !3610)
!3610 = !DILexicalBlockFile(scope: !3475, file: !581, discriminator: 2)
!3611 = !DILocation(line: 497, column: 13, scope: !3610)
!3612 = distinct !{!3612, !3613}
!3613 = !DILocation(line: 497, column: 13, scope: !3471)
!3614 = !DILocation(line: 517, column: 9, scope: !2991)
!3615 = !DILocation(line: 519, column: 16, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !2991, file: !581, line: 519, column: 9)
!3617 = !DILocation(line: 519, column: 14, scope: !3616)
!3618 = !DILocation(line: 519, column: 21, scope: !3619)
!3619 = !DILexicalBlockFile(scope: !3620, file: !581, discriminator: 1)
!3620 = distinct !DILexicalBlock(scope: !3616, file: !581, line: 519, column: 9)
!3621 = !DILocation(line: 519, column: 25, scope: !3619)
!3622 = !DILocation(line: 519, column: 23, scope: !3619)
!3623 = !DILocation(line: 519, column: 9, scope: !3619)
!3624 = !DILocalVariable(name: "iw1", scope: !3625, file: !581, line: 520, type: !1635)
!3625 = distinct !DILexicalBlock(scope: !3620, file: !581, line: 519, column: 33)
!3626 = !DILocation(line: 520, column: 23, scope: !3625)
!3627 = !DILocation(line: 520, column: 29, scope: !3625)
!3628 = !DILocation(line: 520, column: 33, scope: !3625)
!3629 = !DILocation(line: 520, column: 31, scope: !3625)
!3630 = !DILocalVariable(name: "iw2", scope: !3625, file: !581, line: 521, type: !1635)
!3631 = !DILocation(line: 521, column: 23, scope: !3625)
!3632 = !DILocation(line: 521, column: 29, scope: !3625)
!3633 = !DILocation(line: 521, column: 33, scope: !3625)
!3634 = !DILocation(line: 521, column: 31, scope: !3625)
!3635 = !DILocalVariable(name: "iwd", scope: !3625, file: !581, line: 522, type: !1635)
!3636 = !DILocation(line: 522, column: 23, scope: !3625)
!3637 = !DILocation(line: 522, column: 29, scope: !3625)
!3638 = !DILocation(line: 522, column: 33, scope: !3625)
!3639 = !DILocation(line: 522, column: 31, scope: !3625)
!3640 = !DILocation(line: 523, column: 20, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3625, file: !581, line: 523, column: 13)
!3642 = !DILocation(line: 523, column: 18, scope: !3641)
!3643 = !DILocation(line: 523, column: 25, scope: !3644)
!3644 = !DILexicalBlockFile(scope: !3645, file: !581, discriminator: 1)
!3645 = distinct !DILexicalBlock(scope: !3641, file: !581, line: 523, column: 13)
!3646 = !DILocation(line: 523, column: 29, scope: !3644)
!3647 = !DILocation(line: 523, column: 27, scope: !3644)
!3648 = !DILocation(line: 523, column: 13, scope: !3644)
!3649 = !DILocalVariable(name: "x", scope: !3650, file: !581, line: 524, type: !1635)
!3650 = distinct !DILexicalBlock(scope: !3645, file: !581, line: 523, column: 37)
!3651 = !DILocation(line: 524, column: 27, scope: !3650)
!3652 = !DILocation(line: 524, column: 37, scope: !3650)
!3653 = !DILocation(line: 524, column: 43, scope: !3650)
!3654 = !DILocation(line: 524, column: 41, scope: !3650)
!3655 = !DILocation(line: 524, column: 33, scope: !3650)
!3656 = !DILocation(line: 524, column: 32, scope: !3650)
!3657 = !DILocation(line: 524, column: 50, scope: !3650)
!3658 = !DILocation(line: 524, column: 47, scope: !3650)
!3659 = !DILocation(line: 524, column: 58, scope: !3660)
!3660 = !DILexicalBlockFile(scope: !3650, file: !581, discriminator: 1)
!3661 = !DILocation(line: 524, column: 32, scope: !3660)
!3662 = !DILocation(line: 524, column: 70, scope: !3663)
!3663 = !DILexicalBlockFile(scope: !3650, file: !581, discriminator: 2)
!3664 = !DILocation(line: 524, column: 76, scope: !3663)
!3665 = !DILocation(line: 524, column: 74, scope: !3663)
!3666 = !DILocation(line: 524, column: 66, scope: !3663)
!3667 = !DILocation(line: 524, column: 65, scope: !3663)
!3668 = !DILocation(line: 524, column: 32, scope: !3663)
!3669 = !DILocation(line: 524, column: 32, scope: !3670)
!3670 = !DILexicalBlockFile(scope: !3650, file: !581, discriminator: 3)
!3671 = !DILocation(line: 524, column: 27, scope: !3670)
!3672 = !DILocalVariable(name: "y", scope: !3650, file: !581, line: 525, type: !1635)
!3673 = !DILocation(line: 525, column: 27, scope: !3650)
!3674 = !DILocation(line: 525, column: 37, scope: !3650)
!3675 = !DILocation(line: 525, column: 43, scope: !3650)
!3676 = !DILocation(line: 525, column: 41, scope: !3650)
!3677 = !DILocation(line: 525, column: 33, scope: !3650)
!3678 = !DILocation(line: 525, column: 32, scope: !3650)
!3679 = !DILocation(line: 525, column: 50, scope: !3650)
!3680 = !DILocation(line: 525, column: 47, scope: !3650)
!3681 = !DILocation(line: 525, column: 58, scope: !3660)
!3682 = !DILocation(line: 525, column: 32, scope: !3660)
!3683 = !DILocation(line: 525, column: 70, scope: !3663)
!3684 = !DILocation(line: 525, column: 76, scope: !3663)
!3685 = !DILocation(line: 525, column: 74, scope: !3663)
!3686 = !DILocation(line: 525, column: 66, scope: !3663)
!3687 = !DILocation(line: 525, column: 65, scope: !3663)
!3688 = !DILocation(line: 525, column: 32, scope: !3663)
!3689 = !DILocation(line: 525, column: 32, scope: !3670)
!3690 = !DILocation(line: 525, column: 27, scope: !3670)
!3691 = !DILocalVariable(name: "z", scope: !3650, file: !581, line: 526, type: !1635)
!3692 = !DILocation(line: 526, column: 27, scope: !3650)
!3693 = !DILocation(line: 526, column: 35, scope: !3650)
!3694 = !DILocation(line: 526, column: 41, scope: !3650)
!3695 = !DILocation(line: 526, column: 39, scope: !3650)
!3696 = !DILocation(line: 526, column: 31, scope: !3650)
!3697 = !DILocalVariable(name: "pos", scope: !3650, file: !581, line: 527, type: !1635)
!3698 = !DILocation(line: 527, column: 27, scope: !3650)
!3699 = !DILocation(line: 527, column: 33, scope: !3650)
!3700 = !DILocation(line: 527, column: 37, scope: !3650)
!3701 = !DILocation(line: 527, column: 35, scope: !3650)
!3702 = !DILocation(line: 527, column: 49, scope: !3650)
!3703 = !DILocation(line: 527, column: 47, scope: !3650)
!3704 = !DILocation(line: 529, column: 21, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3650, file: !581, line: 529, column: 21)
!3706 = !DILocation(line: 529, column: 25, scope: !3705)
!3707 = !DILocation(line: 529, column: 23, scope: !3705)
!3708 = !DILocation(line: 529, column: 30, scope: !3705)
!3709 = !DILocation(line: 529, column: 33, scope: !3710)
!3710 = !DILexicalBlockFile(scope: !3705, file: !581, discriminator: 1)
!3711 = !DILocation(line: 529, column: 37, scope: !3710)
!3712 = !DILocation(line: 529, column: 35, scope: !3710)
!3713 = !DILocation(line: 529, column: 21, scope: !3710)
!3714 = !DILocation(line: 530, column: 21, scope: !3705)
!3715 = !DILocation(line: 532, column: 30, scope: !3650)
!3716 = !DILocation(line: 532, column: 42, scope: !3650)
!3717 = !DILocation(line: 532, column: 38, scope: !3650)
!3718 = !DILocation(line: 532, column: 49, scope: !3650)
!3719 = !DILocation(line: 532, column: 47, scope: !3650)
!3720 = !DILocation(line: 532, column: 35, scope: !3650)
!3721 = !DILocation(line: 532, column: 29, scope: !3650)
!3722 = !DILocation(line: 532, column: 67, scope: !3660)
!3723 = !DILocation(line: 532, column: 63, scope: !3660)
!3724 = !DILocation(line: 532, column: 74, scope: !3660)
!3725 = !DILocation(line: 532, column: 72, scope: !3660)
!3726 = !DILocation(line: 532, column: 29, scope: !3660)
!3727 = !DILocation(line: 532, column: 88, scope: !3663)
!3728 = !DILocation(line: 532, column: 29, scope: !3663)
!3729 = !DILocation(line: 532, column: 29, scope: !3670)
!3730 = !DILocation(line: 532, column: 28, scope: !3670)
!3731 = !DILocation(line: 532, column: 21, scope: !3670)
!3732 = !DILocation(line: 532, column: 17, scope: !3670)
!3733 = !DILocation(line: 532, column: 26, scope: !3670)
!3734 = !DILocation(line: 533, column: 28, scope: !3650)
!3735 = !DILocation(line: 533, column: 21, scope: !3650)
!3736 = !DILocation(line: 533, column: 17, scope: !3650)
!3737 = !DILocation(line: 533, column: 26, scope: !3650)
!3738 = !DILocation(line: 534, column: 28, scope: !3650)
!3739 = !DILocation(line: 534, column: 21, scope: !3650)
!3740 = !DILocation(line: 534, column: 17, scope: !3650)
!3741 = !DILocation(line: 534, column: 26, scope: !3650)
!3742 = !DILocation(line: 535, column: 13, scope: !3650)
!3743 = !DILocation(line: 523, column: 33, scope: !3744)
!3744 = !DILexicalBlockFile(scope: !3645, file: !581, discriminator: 2)
!3745 = !DILocation(line: 523, column: 13, scope: !3744)
!3746 = distinct !{!3746, !3747}
!3747 = !DILocation(line: 523, column: 13, scope: !3625)
!3748 = !DILocation(line: 536, column: 9, scope: !3625)
!3749 = !DILocation(line: 519, column: 29, scope: !3750)
!3750 = !DILexicalBlockFile(scope: !3620, file: !581, discriminator: 2)
!3751 = !DILocation(line: 519, column: 9, scope: !3750)
!3752 = distinct !{!3752, !3753}
!3753 = !DILocation(line: 519, column: 9, scope: !2991)
!3754 = !DILocation(line: 537, column: 9, scope: !2991)
!3755 = !DILocation(line: 539, column: 16, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !2991, file: !581, line: 539, column: 9)
!3757 = !DILocation(line: 539, column: 14, scope: !3756)
!3758 = !DILocation(line: 539, column: 21, scope: !3759)
!3759 = !DILexicalBlockFile(scope: !3760, file: !581, discriminator: 1)
!3760 = distinct !DILexicalBlock(scope: !3756, file: !581, line: 539, column: 9)
!3761 = !DILocation(line: 539, column: 25, scope: !3759)
!3762 = !DILocation(line: 539, column: 29, scope: !3759)
!3763 = !DILocation(line: 539, column: 23, scope: !3759)
!3764 = !DILocation(line: 539, column: 9, scope: !3759)
!3765 = !DILocalVariable(name: "iwx", scope: !3766, file: !581, line: 540, type: !1635)
!3766 = distinct !DILexicalBlock(scope: !3760, file: !581, line: 539, column: 42)
!3767 = !DILocation(line: 540, column: 23, scope: !3766)
!3768 = !DILocation(line: 540, column: 30, scope: !3766)
!3769 = !DILocation(line: 540, column: 35, scope: !3766)
!3770 = !DILocation(line: 540, column: 32, scope: !3766)
!3771 = !DILocation(line: 540, column: 43, scope: !3766)
!3772 = !DILocation(line: 540, column: 41, scope: !3766)
!3773 = !DILocalVariable(name: "iwy", scope: !3766, file: !581, line: 541, type: !1635)
!3774 = !DILocation(line: 541, column: 23, scope: !3766)
!3775 = !DILocation(line: 541, column: 30, scope: !3766)
!3776 = !DILocation(line: 541, column: 35, scope: !3766)
!3777 = !DILocation(line: 541, column: 32, scope: !3766)
!3778 = !DILocation(line: 541, column: 43, scope: !3766)
!3779 = !DILocation(line: 541, column: 41, scope: !3766)
!3780 = !DILocalVariable(name: "iwd", scope: !3766, file: !581, line: 542, type: !1635)
!3781 = !DILocation(line: 542, column: 23, scope: !3766)
!3782 = !DILocation(line: 542, column: 29, scope: !3766)
!3783 = !DILocation(line: 542, column: 33, scope: !3766)
!3784 = !DILocation(line: 542, column: 31, scope: !3766)
!3785 = !DILocation(line: 543, column: 20, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3766, file: !581, line: 543, column: 13)
!3787 = !DILocation(line: 543, column: 18, scope: !3786)
!3788 = !DILocation(line: 543, column: 25, scope: !3789)
!3789 = !DILexicalBlockFile(scope: !3790, file: !581, discriminator: 1)
!3790 = distinct !DILexicalBlock(scope: !3786, file: !581, line: 543, column: 13)
!3791 = !DILocation(line: 543, column: 29, scope: !3789)
!3792 = !DILocation(line: 543, column: 33, scope: !3789)
!3793 = !DILocation(line: 543, column: 27, scope: !3789)
!3794 = !DILocation(line: 543, column: 13, scope: !3789)
!3795 = !DILocalVariable(name: "x", scope: !3796, file: !581, line: 544, type: !1635)
!3796 = distinct !DILexicalBlock(scope: !3790, file: !581, line: 543, column: 45)
!3797 = !DILocation(line: 544, column: 27, scope: !3796)
!3798 = !DILocation(line: 544, column: 37, scope: !3796)
!3799 = !DILocation(line: 544, column: 44, scope: !3796)
!3800 = !DILocation(line: 544, column: 49, scope: !3796)
!3801 = !DILocation(line: 544, column: 46, scope: !3796)
!3802 = !DILocation(line: 544, column: 41, scope: !3796)
!3803 = !DILocation(line: 544, column: 33, scope: !3796)
!3804 = !DILocation(line: 544, column: 32, scope: !3796)
!3805 = !DILocation(line: 544, column: 60, scope: !3796)
!3806 = !DILocation(line: 544, column: 57, scope: !3796)
!3807 = !DILocation(line: 544, column: 68, scope: !3808)
!3808 = !DILexicalBlockFile(scope: !3796, file: !581, discriminator: 1)
!3809 = !DILocation(line: 544, column: 32, scope: !3808)
!3810 = !DILocation(line: 544, column: 80, scope: !3811)
!3811 = !DILexicalBlockFile(scope: !3796, file: !581, discriminator: 2)
!3812 = !DILocation(line: 544, column: 87, scope: !3811)
!3813 = !DILocation(line: 544, column: 92, scope: !3811)
!3814 = !DILocation(line: 544, column: 89, scope: !3811)
!3815 = !DILocation(line: 544, column: 84, scope: !3811)
!3816 = !DILocation(line: 544, column: 76, scope: !3811)
!3817 = !DILocation(line: 544, column: 75, scope: !3811)
!3818 = !DILocation(line: 544, column: 32, scope: !3811)
!3819 = !DILocation(line: 544, column: 32, scope: !3820)
!3820 = !DILexicalBlockFile(scope: !3796, file: !581, discriminator: 3)
!3821 = !DILocation(line: 544, column: 27, scope: !3820)
!3822 = !DILocalVariable(name: "y", scope: !3796, file: !581, line: 545, type: !1635)
!3823 = !DILocation(line: 545, column: 27, scope: !3796)
!3824 = !DILocation(line: 545, column: 37, scope: !3796)
!3825 = !DILocation(line: 545, column: 44, scope: !3796)
!3826 = !DILocation(line: 545, column: 49, scope: !3796)
!3827 = !DILocation(line: 545, column: 46, scope: !3796)
!3828 = !DILocation(line: 545, column: 41, scope: !3796)
!3829 = !DILocation(line: 545, column: 33, scope: !3796)
!3830 = !DILocation(line: 545, column: 32, scope: !3796)
!3831 = !DILocation(line: 545, column: 60, scope: !3796)
!3832 = !DILocation(line: 545, column: 57, scope: !3796)
!3833 = !DILocation(line: 545, column: 68, scope: !3808)
!3834 = !DILocation(line: 545, column: 32, scope: !3808)
!3835 = !DILocation(line: 545, column: 80, scope: !3811)
!3836 = !DILocation(line: 545, column: 87, scope: !3811)
!3837 = !DILocation(line: 545, column: 92, scope: !3811)
!3838 = !DILocation(line: 545, column: 89, scope: !3811)
!3839 = !DILocation(line: 545, column: 84, scope: !3811)
!3840 = !DILocation(line: 545, column: 76, scope: !3811)
!3841 = !DILocation(line: 545, column: 75, scope: !3811)
!3842 = !DILocation(line: 545, column: 32, scope: !3811)
!3843 = !DILocation(line: 545, column: 32, scope: !3820)
!3844 = !DILocation(line: 545, column: 27, scope: !3820)
!3845 = !DILocalVariable(name: "z", scope: !3796, file: !581, line: 546, type: !1635)
!3846 = !DILocation(line: 546, column: 27, scope: !3796)
!3847 = !DILocation(line: 546, column: 35, scope: !3796)
!3848 = !DILocation(line: 546, column: 41, scope: !3796)
!3849 = !DILocation(line: 546, column: 39, scope: !3796)
!3850 = !DILocation(line: 546, column: 31, scope: !3796)
!3851 = !DILocalVariable(name: "pos", scope: !3796, file: !581, line: 547, type: !1635)
!3852 = !DILocation(line: 547, column: 27, scope: !3796)
!3853 = !DILocation(line: 547, column: 33, scope: !3796)
!3854 = !DILocation(line: 547, column: 37, scope: !3796)
!3855 = !DILocation(line: 547, column: 35, scope: !3796)
!3856 = !DILocation(line: 547, column: 49, scope: !3796)
!3857 = !DILocation(line: 547, column: 47, scope: !3796)
!3858 = !DILocation(line: 549, column: 21, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3796, file: !581, line: 549, column: 21)
!3860 = !DILocation(line: 549, column: 25, scope: !3859)
!3861 = !DILocation(line: 549, column: 23, scope: !3859)
!3862 = !DILocation(line: 549, column: 30, scope: !3859)
!3863 = !DILocation(line: 549, column: 33, scope: !3864)
!3864 = !DILexicalBlockFile(scope: !3859, file: !581, discriminator: 1)
!3865 = !DILocation(line: 549, column: 37, scope: !3864)
!3866 = !DILocation(line: 549, column: 35, scope: !3864)
!3867 = !DILocation(line: 549, column: 21, scope: !3864)
!3868 = !DILocation(line: 550, column: 21, scope: !3859)
!3869 = !DILocation(line: 552, column: 30, scope: !3796)
!3870 = !DILocation(line: 552, column: 40, scope: !3796)
!3871 = !DILocation(line: 552, column: 36, scope: !3796)
!3872 = !DILocation(line: 552, column: 35, scope: !3796)
!3873 = !DILocation(line: 552, column: 33, scope: !3796)
!3874 = !DILocation(line: 552, column: 29, scope: !3796)
!3875 = !DILocation(line: 552, column: 49, scope: !3808)
!3876 = !DILocation(line: 552, column: 29, scope: !3808)
!3877 = !DILocation(line: 552, column: 59, scope: !3811)
!3878 = !DILocation(line: 552, column: 55, scope: !3811)
!3879 = !DILocation(line: 552, column: 54, scope: !3811)
!3880 = !DILocation(line: 552, column: 29, scope: !3811)
!3881 = !DILocation(line: 552, column: 29, scope: !3820)
!3882 = !DILocation(line: 552, column: 28, scope: !3820)
!3883 = !DILocation(line: 552, column: 21, scope: !3820)
!3884 = !DILocation(line: 552, column: 17, scope: !3820)
!3885 = !DILocation(line: 552, column: 26, scope: !3820)
!3886 = !DILocation(line: 553, column: 28, scope: !3796)
!3887 = !DILocation(line: 553, column: 21, scope: !3796)
!3888 = !DILocation(line: 553, column: 17, scope: !3796)
!3889 = !DILocation(line: 553, column: 26, scope: !3796)
!3890 = !DILocation(line: 554, column: 28, scope: !3796)
!3891 = !DILocation(line: 554, column: 21, scope: !3796)
!3892 = !DILocation(line: 554, column: 17, scope: !3796)
!3893 = !DILocation(line: 554, column: 26, scope: !3796)
!3894 = !DILocation(line: 555, column: 13, scope: !3796)
!3895 = !DILocation(line: 543, column: 41, scope: !3896)
!3896 = !DILexicalBlockFile(scope: !3790, file: !581, discriminator: 2)
!3897 = !DILocation(line: 543, column: 13, scope: !3896)
!3898 = distinct !{!3898, !3899}
!3899 = !DILocation(line: 543, column: 13, scope: !3766)
!3900 = !DILocation(line: 556, column: 9, scope: !3766)
!3901 = !DILocation(line: 539, column: 38, scope: !3902)
!3902 = !DILexicalBlockFile(scope: !3760, file: !581, discriminator: 2)
!3903 = !DILocation(line: 539, column: 9, scope: !3902)
!3904 = distinct !{!3904, !3905}
!3905 = !DILocation(line: 539, column: 9, scope: !2991)
!3906 = !DILocation(line: 557, column: 9, scope: !2991)
!3907 = !DILocation(line: 559, column: 9, scope: !2991)
!3908 = distinct !{!3908, !3907}
!3909 = !DILocation(line: 559, column: 26, scope: !3910)
!3910 = !DILexicalBlockFile(scope: !3911, file: !581, discriminator: 1)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !581, line: 559, column: 24)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !581, line: 559, column: 18)
!3913 = distinct !DILexicalBlock(scope: !2991, file: !581, line: 559, column: 12)
!3914 = !DILocation(line: 559, column: 90, scope: !3915)
!3915 = !DILexicalBlockFile(scope: !3910, file: !581, discriminator: 2)
!3916 = !DILocation(line: 559, column: 90, scope: !3910)
!3917 = !DILocation(line: 560, column: 5, scope: !2991)
!3918 = !DILocation(line: 562, column: 16, scope: !2773)
!3919 = !DILocation(line: 562, column: 19, scope: !2773)
!3920 = !DILocation(line: 562, column: 5, scope: !2773)
!3921 = !DILocation(line: 564, column: 9, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !2773, file: !581, line: 564, column: 9)
!3923 = !DILocation(line: 564, column: 9, scope: !2773)
!3924 = !DILocation(line: 565, column: 16, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3926, file: !581, line: 565, column: 9)
!3926 = distinct !DILexicalBlock(scope: !3922, file: !581, line: 564, column: 17)
!3927 = !DILocation(line: 565, column: 14, scope: !3925)
!3928 = !DILocation(line: 565, column: 21, scope: !3929)
!3929 = !DILexicalBlockFile(scope: !3930, file: !581, discriminator: 1)
!3930 = distinct !DILexicalBlock(scope: !3925, file: !581, line: 565, column: 9)
!3931 = !DILocation(line: 565, column: 25, scope: !3929)
!3932 = !DILocation(line: 565, column: 30, scope: !3929)
!3933 = !DILocation(line: 565, column: 23, scope: !3929)
!3934 = !DILocation(line: 565, column: 9, scope: !3929)
!3935 = !DILocation(line: 566, column: 20, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !581, line: 566, column: 13)
!3937 = distinct !DILexicalBlock(scope: !3930, file: !581, line: 565, column: 43)
!3938 = !DILocation(line: 566, column: 18, scope: !3936)
!3939 = !DILocation(line: 566, column: 25, scope: !3940)
!3940 = !DILexicalBlockFile(scope: !3941, file: !581, discriminator: 1)
!3941 = distinct !DILexicalBlock(scope: !3936, file: !581, line: 566, column: 13)
!3942 = !DILocation(line: 566, column: 29, scope: !3940)
!3943 = !DILocation(line: 566, column: 34, scope: !3940)
!3944 = !DILocation(line: 566, column: 27, scope: !3940)
!3945 = !DILocation(line: 566, column: 13, scope: !3940)
!3946 = !DILocalVariable(name: "pos", scope: !3947, file: !581, line: 567, type: !200)
!3947 = distinct !DILexicalBlock(scope: !3941, file: !581, line: 566, column: 46)
!3948 = !DILocation(line: 567, column: 21, scope: !3947)
!3949 = !DILocation(line: 567, column: 27, scope: !3947)
!3950 = !DILocation(line: 567, column: 31, scope: !3947)
!3951 = !DILocation(line: 567, column: 29, scope: !3947)
!3952 = !DILocation(line: 567, column: 43, scope: !3947)
!3953 = !DILocation(line: 567, column: 41, scope: !3947)
!3954 = !DILocation(line: 569, column: 25, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3947, file: !581, line: 569, column: 21)
!3956 = !DILocation(line: 569, column: 21, scope: !3955)
!3957 = !DILocation(line: 569, column: 21, scope: !3947)
!3958 = !DILocation(line: 570, column: 35, scope: !3955)
!3959 = !DILocation(line: 570, column: 28, scope: !3955)
!3960 = !DILocation(line: 570, column: 21, scope: !3955)
!3961 = !DILocation(line: 570, column: 33, scope: !3955)
!3962 = !DILocation(line: 571, column: 13, scope: !3947)
!3963 = !DILocation(line: 566, column: 42, scope: !3964)
!3964 = !DILexicalBlockFile(scope: !3941, file: !581, discriminator: 2)
!3965 = !DILocation(line: 566, column: 13, scope: !3964)
!3966 = distinct !{!3966, !3967}
!3967 = !DILocation(line: 566, column: 13, scope: !3937)
!3968 = !DILocation(line: 572, column: 9, scope: !3937)
!3969 = !DILocation(line: 565, column: 39, scope: !3970)
!3970 = !DILexicalBlockFile(scope: !3930, file: !581, discriminator: 2)
!3971 = !DILocation(line: 565, column: 9, scope: !3970)
!3972 = distinct !{!3972, !3973}
!3973 = !DILocation(line: 565, column: 9, scope: !3926)
!3974 = !DILocation(line: 573, column: 5, scope: !3926)
!3975 = !DILocation(line: 575, column: 9, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !2773, file: !581, line: 575, column: 9)
!3977 = !DILocation(line: 575, column: 12, scope: !3976)
!3978 = !DILocation(line: 575, column: 17, scope: !3976)
!3979 = !DILocation(line: 575, column: 9, scope: !2773)
!3980 = !DILocation(line: 576, column: 16, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !581, line: 576, column: 9)
!3982 = distinct !DILexicalBlock(scope: !3976, file: !581, line: 575, column: 27)
!3983 = !DILocation(line: 576, column: 14, scope: !3981)
!3984 = !DILocation(line: 576, column: 21, scope: !3985)
!3985 = !DILexicalBlockFile(scope: !3986, file: !581, discriminator: 1)
!3986 = distinct !DILexicalBlock(scope: !3981, file: !581, line: 576, column: 9)
!3987 = !DILocation(line: 576, column: 25, scope: !3985)
!3988 = !DILocation(line: 576, column: 30, scope: !3985)
!3989 = !DILocation(line: 576, column: 23, scope: !3985)
!3990 = !DILocation(line: 576, column: 9, scope: !3985)
!3991 = !DILocation(line: 577, column: 20, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !581, line: 577, column: 13)
!3993 = distinct !DILexicalBlock(scope: !3986, file: !581, line: 576, column: 43)
!3994 = !DILocation(line: 577, column: 18, scope: !3992)
!3995 = !DILocation(line: 577, column: 25, scope: !3996)
!3996 = !DILexicalBlockFile(scope: !3997, file: !581, discriminator: 1)
!3997 = distinct !DILexicalBlock(scope: !3992, file: !581, line: 577, column: 13)
!3998 = !DILocation(line: 577, column: 29, scope: !3996)
!3999 = !DILocation(line: 577, column: 34, scope: !3996)
!4000 = !DILocation(line: 577, column: 27, scope: !3996)
!4001 = !DILocation(line: 577, column: 13, scope: !3996)
!4002 = !DILocation(line: 578, column: 26, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !581, line: 578, column: 21)
!4004 = distinct !DILexicalBlock(scope: !3997, file: !581, line: 577, column: 46)
!4005 = !DILocation(line: 578, column: 30, scope: !4003)
!4006 = !DILocation(line: 578, column: 28, scope: !4003)
!4007 = !DILocation(line: 578, column: 42, scope: !4003)
!4008 = !DILocation(line: 578, column: 40, scope: !4003)
!4009 = !DILocation(line: 578, column: 22, scope: !4003)
!4010 = !DILocation(line: 578, column: 21, scope: !4004)
!4011 = !DILocation(line: 579, column: 46, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4003, file: !581, line: 578, column: 46)
!4013 = !DILocation(line: 579, column: 25, scope: !4012)
!4014 = !DILocation(line: 579, column: 29, scope: !4012)
!4015 = !DILocation(line: 579, column: 27, scope: !4012)
!4016 = !DILocation(line: 579, column: 41, scope: !4012)
!4017 = !DILocation(line: 579, column: 39, scope: !4012)
!4018 = !DILocation(line: 579, column: 21, scope: !4012)
!4019 = !DILocation(line: 579, column: 44, scope: !4012)
!4020 = !DILocation(line: 580, column: 46, scope: !4012)
!4021 = !DILocation(line: 580, column: 25, scope: !4012)
!4022 = !DILocation(line: 580, column: 29, scope: !4012)
!4023 = !DILocation(line: 580, column: 27, scope: !4012)
!4024 = !DILocation(line: 580, column: 41, scope: !4012)
!4025 = !DILocation(line: 580, column: 39, scope: !4012)
!4026 = !DILocation(line: 580, column: 21, scope: !4012)
!4027 = !DILocation(line: 580, column: 44, scope: !4012)
!4028 = !DILocation(line: 581, column: 46, scope: !4012)
!4029 = !DILocation(line: 581, column: 25, scope: !4012)
!4030 = !DILocation(line: 581, column: 29, scope: !4012)
!4031 = !DILocation(line: 581, column: 27, scope: !4012)
!4032 = !DILocation(line: 581, column: 41, scope: !4012)
!4033 = !DILocation(line: 581, column: 39, scope: !4012)
!4034 = !DILocation(line: 581, column: 21, scope: !4012)
!4035 = !DILocation(line: 581, column: 44, scope: !4012)
!4036 = !DILocation(line: 582, column: 17, scope: !4012)
!4037 = !DILocation(line: 583, column: 13, scope: !4004)
!4038 = !DILocation(line: 577, column: 42, scope: !4039)
!4039 = !DILexicalBlockFile(scope: !3997, file: !581, discriminator: 2)
!4040 = !DILocation(line: 577, column: 13, scope: !4039)
!4041 = distinct !{!4041, !4042}
!4042 = !DILocation(line: 577, column: 13, scope: !3993)
!4043 = !DILocation(line: 584, column: 9, scope: !3993)
!4044 = !DILocation(line: 576, column: 39, scope: !4045)
!4045 = !DILexicalBlockFile(scope: !3986, file: !581, discriminator: 2)
!4046 = !DILocation(line: 576, column: 9, scope: !4045)
!4047 = distinct !{!4047, !4048}
!4048 = !DILocation(line: 576, column: 9, scope: !3982)
!4049 = !DILocation(line: 585, column: 5, scope: !3982)
!4050 = !DILocation(line: 585, column: 16, scope: !4051)
!4051 = !DILexicalBlockFile(scope: !4052, file: !581, discriminator: 1)
!4052 = distinct !DILexicalBlock(scope: !3976, file: !581, line: 585, column: 16)
!4053 = !DILocation(line: 585, column: 19, scope: !4051)
!4054 = !DILocation(line: 585, column: 24, scope: !4051)
!4055 = !DILocation(line: 586, column: 16, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !581, line: 586, column: 9)
!4057 = distinct !DILexicalBlock(scope: !4052, file: !581, line: 585, column: 35)
!4058 = !DILocation(line: 586, column: 14, scope: !4056)
!4059 = !DILocation(line: 586, column: 21, scope: !4060)
!4060 = !DILexicalBlockFile(scope: !4061, file: !581, discriminator: 1)
!4061 = distinct !DILexicalBlock(scope: !4056, file: !581, line: 586, column: 9)
!4062 = !DILocation(line: 586, column: 25, scope: !4060)
!4063 = !DILocation(line: 586, column: 30, scope: !4060)
!4064 = !DILocation(line: 586, column: 23, scope: !4060)
!4065 = !DILocation(line: 586, column: 9, scope: !4060)
!4066 = !DILocation(line: 587, column: 20, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4068, file: !581, line: 587, column: 13)
!4068 = distinct !DILexicalBlock(scope: !4061, file: !581, line: 586, column: 43)
!4069 = !DILocation(line: 587, column: 18, scope: !4067)
!4070 = !DILocation(line: 587, column: 25, scope: !4071)
!4071 = !DILexicalBlockFile(scope: !4072, file: !581, discriminator: 1)
!4072 = distinct !DILexicalBlock(scope: !4067, file: !581, line: 587, column: 13)
!4073 = !DILocation(line: 587, column: 29, scope: !4071)
!4074 = !DILocation(line: 587, column: 34, scope: !4071)
!4075 = !DILocation(line: 587, column: 27, scope: !4071)
!4076 = !DILocation(line: 587, column: 13, scope: !4071)
!4077 = !DILocation(line: 588, column: 26, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !581, line: 588, column: 21)
!4079 = distinct !DILexicalBlock(scope: !4072, file: !581, line: 587, column: 46)
!4080 = !DILocation(line: 588, column: 30, scope: !4078)
!4081 = !DILocation(line: 588, column: 28, scope: !4078)
!4082 = !DILocation(line: 588, column: 42, scope: !4078)
!4083 = !DILocation(line: 588, column: 40, scope: !4078)
!4084 = !DILocation(line: 588, column: 22, scope: !4078)
!4085 = !DILocation(line: 588, column: 21, scope: !4079)
!4086 = !DILocation(line: 589, column: 46, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4078, file: !581, line: 588, column: 46)
!4088 = !DILocation(line: 589, column: 25, scope: !4087)
!4089 = !DILocation(line: 589, column: 29, scope: !4087)
!4090 = !DILocation(line: 589, column: 27, scope: !4087)
!4091 = !DILocation(line: 589, column: 41, scope: !4087)
!4092 = !DILocation(line: 589, column: 39, scope: !4087)
!4093 = !DILocation(line: 589, column: 21, scope: !4087)
!4094 = !DILocation(line: 589, column: 44, scope: !4087)
!4095 = !DILocation(line: 590, column: 46, scope: !4087)
!4096 = !DILocation(line: 590, column: 25, scope: !4087)
!4097 = !DILocation(line: 590, column: 29, scope: !4087)
!4098 = !DILocation(line: 590, column: 27, scope: !4087)
!4099 = !DILocation(line: 590, column: 41, scope: !4087)
!4100 = !DILocation(line: 590, column: 39, scope: !4087)
!4101 = !DILocation(line: 590, column: 21, scope: !4087)
!4102 = !DILocation(line: 590, column: 44, scope: !4087)
!4103 = !DILocation(line: 591, column: 46, scope: !4087)
!4104 = !DILocation(line: 591, column: 50, scope: !4087)
!4105 = !DILocation(line: 591, column: 67, scope: !4087)
!4106 = !DILocation(line: 591, column: 71, scope: !4087)
!4107 = !DILocation(line: 591, column: 69, scope: !4087)
!4108 = !DILocation(line: 591, column: 76, scope: !4087)
!4109 = !DILocation(line: 591, column: 80, scope: !4087)
!4110 = !DILocation(line: 591, column: 78, scope: !4087)
!4111 = !DILocation(line: 591, column: 61, scope: !4087)
!4112 = !DILocation(line: 591, column: 59, scope: !4087)
!4113 = !DILocation(line: 591, column: 25, scope: !4087)
!4114 = !DILocation(line: 591, column: 29, scope: !4087)
!4115 = !DILocation(line: 591, column: 27, scope: !4087)
!4116 = !DILocation(line: 591, column: 41, scope: !4087)
!4117 = !DILocation(line: 591, column: 39, scope: !4087)
!4118 = !DILocation(line: 591, column: 21, scope: !4087)
!4119 = !DILocation(line: 591, column: 44, scope: !4087)
!4120 = !DILocation(line: 592, column: 17, scope: !4087)
!4121 = !DILocation(line: 593, column: 13, scope: !4079)
!4122 = !DILocation(line: 587, column: 42, scope: !4123)
!4123 = !DILexicalBlockFile(scope: !4072, file: !581, discriminator: 2)
!4124 = !DILocation(line: 587, column: 13, scope: !4123)
!4125 = distinct !{!4125, !4126}
!4126 = !DILocation(line: 587, column: 13, scope: !4068)
!4127 = !DILocation(line: 594, column: 9, scope: !4068)
!4128 = !DILocation(line: 586, column: 39, scope: !4129)
!4129 = !DILexicalBlockFile(scope: !4061, file: !581, discriminator: 2)
!4130 = !DILocation(line: 586, column: 9, scope: !4129)
!4131 = distinct !{!4131, !4132}
!4132 = !DILocation(line: 586, column: 9, scope: !4057)
!4133 = !DILocation(line: 595, column: 5, scope: !4057)
!4134 = !DILocation(line: 596, column: 1, scope: !2773)
!4135 = distinct !DISubprogram(name: "none_graticule", scope: !581, file: !581, line: 896, type: !815, isLocal: true, isDefinition: true, scopeLine: 897, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!4136 = !DILocalVariable(name: "s", arg: 1, scope: !4135, file: !581, line: 896, type: !817)
!4137 = !DILocation(line: 896, column: 48, scope: !4135)
!4138 = !DILocalVariable(name: "out", arg: 2, scope: !4135, file: !581, line: 896, type: !285)
!4139 = !DILocation(line: 896, column: 60, scope: !4135)
!4140 = !DILocalVariable(name: "X", arg: 3, scope: !4135, file: !581, line: 896, type: !200)
!4141 = !DILocation(line: 896, column: 69, scope: !4135)
!4142 = !DILocalVariable(name: "Y", arg: 4, scope: !4135, file: !581, line: 896, type: !200)
!4143 = !DILocation(line: 896, column: 76, scope: !4135)
!4144 = !DILocalVariable(name: "D", arg: 5, scope: !4135, file: !581, line: 896, type: !200)
!4145 = !DILocation(line: 896, column: 83, scope: !4135)
!4146 = !DILocalVariable(name: "P", arg: 6, scope: !4135, file: !581, line: 896, type: !200)
!4147 = !DILocation(line: 896, column: 90, scope: !4135)
!4148 = !DILocation(line: 898, column: 1, scope: !4135)
!4149 = !DILocalVariable(name: "a", arg: 1, scope: !4150, file: !4151, line: 127, type: !200)
!4150 = distinct !DISubprogram(name: "av_clip_c", scope: !4151, file: !4151, line: 127, type: !4152, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!4151 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!200, !200, !200, !200}
!4154 = !DILocation(line: 127, column: 87, scope: !4150, inlinedAt: !4155)
!4155 = distinct !DILocation(line: 1199, column: 13, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !581, line: 1184, column: 45)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !581, line: 1184, column: 5)
!4158 = distinct !DILexicalBlock(scope: !814, file: !581, line: 1184, column: 5)
!4159 = !DILocalVariable(name: "amin", arg: 2, scope: !4150, file: !4151, line: 127, type: !200)
!4160 = !DILocation(line: 127, column: 94, scope: !4150, inlinedAt: !4155)
!4161 = !DILocalVariable(name: "amax", arg: 3, scope: !4150, file: !4151, line: 127, type: !200)
!4162 = !DILocation(line: 127, column: 104, scope: !4150, inlinedAt: !4155)
!4163 = !DILocation(line: 127, column: 87, scope: !4150, inlinedAt: !4164)
!4164 = distinct !DILocation(line: 1198, column: 13, scope: !4156)
!4165 = !DILocation(line: 127, column: 94, scope: !4150, inlinedAt: !4164)
!4166 = !DILocation(line: 127, column: 104, scope: !4150, inlinedAt: !4164)
!4167 = !DILocalVariable(name: "s", arg: 1, scope: !814, file: !581, line: 1146, type: !817)
!4168 = !DILocation(line: 1146, column: 49, scope: !814)
!4169 = !DILocalVariable(name: "out", arg: 2, scope: !814, file: !581, line: 1146, type: !285)
!4170 = !DILocation(line: 1146, column: 61, scope: !814)
!4171 = !DILocalVariable(name: "X", arg: 3, scope: !814, file: !581, line: 1146, type: !200)
!4172 = !DILocation(line: 1146, column: 70, scope: !814)
!4173 = !DILocalVariable(name: "Y", arg: 4, scope: !814, file: !581, line: 1146, type: !200)
!4174 = !DILocation(line: 1146, column: 77, scope: !814)
!4175 = !DILocalVariable(name: "D", arg: 5, scope: !814, file: !581, line: 1146, type: !200)
!4176 = !DILocation(line: 1146, column: 84, scope: !814)
!4177 = !DILocalVariable(name: "P", arg: 6, scope: !814, file: !581, line: 1146, type: !200)
!4178 = !DILocation(line: 1146, column: 91, scope: !814)
!4179 = !DILocalVariable(name: "o", scope: !814, file: !581, line: 1148, type: !4180)
!4180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!4181 = !DILocation(line: 1148, column: 17, scope: !814)
!4182 = !DILocation(line: 1148, column: 21, scope: !814)
!4183 = !DILocation(line: 1148, column: 24, scope: !814)
!4184 = !DILocalVariable(name: "i", scope: !814, file: !581, line: 1149, type: !200)
!4185 = !DILocation(line: 1149, column: 9, scope: !814)
!4186 = !DILocation(line: 1151, column: 12, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !814, file: !581, line: 1151, column: 5)
!4188 = !DILocation(line: 1151, column: 10, scope: !4187)
!4189 = !DILocation(line: 1151, column: 17, scope: !4190)
!4190 = !DILexicalBlockFile(scope: !4191, file: !581, discriminator: 1)
!4191 = distinct !DILexicalBlock(scope: !4187, file: !581, line: 1151, column: 5)
!4192 = !DILocation(line: 1151, column: 19, scope: !4190)
!4193 = !DILocation(line: 1151, column: 5, scope: !4190)
!4194 = !DILocalVariable(name: "x", scope: !4195, file: !581, line: 1152, type: !200)
!4195 = distinct !DILexicalBlock(scope: !4191, file: !581, line: 1151, column: 30)
!4196 = !DILocation(line: 1152, column: 13, scope: !4195)
!4197 = !DILocation(line: 1152, column: 33, scope: !4195)
!4198 = !DILocation(line: 1152, column: 17, scope: !4195)
!4199 = !DILocation(line: 1152, column: 30, scope: !4195)
!4200 = !DILocation(line: 1152, column: 27, scope: !4195)
!4201 = !DILocalVariable(name: "y", scope: !4195, file: !581, line: 1153, type: !200)
!4202 = !DILocation(line: 1153, column: 13, scope: !4195)
!4203 = !DILocation(line: 1153, column: 33, scope: !4195)
!4204 = !DILocation(line: 1153, column: 17, scope: !4195)
!4205 = !DILocation(line: 1153, column: 30, scope: !4195)
!4206 = !DILocation(line: 1153, column: 27, scope: !4195)
!4207 = !DILocation(line: 1155, column: 19, scope: !4195)
!4208 = !DILocation(line: 1155, column: 24, scope: !4195)
!4209 = !DILocation(line: 1155, column: 34, scope: !4195)
!4210 = !DILocation(line: 1155, column: 38, scope: !4195)
!4211 = !DILocation(line: 1155, column: 43, scope: !4195)
!4212 = !DILocation(line: 1155, column: 36, scope: !4195)
!4213 = !DILocation(line: 1155, column: 32, scope: !4195)
!4214 = !DILocation(line: 1155, column: 57, scope: !4195)
!4215 = !DILocation(line: 1155, column: 55, scope: !4195)
!4216 = !DILocation(line: 1155, column: 60, scope: !4195)
!4217 = !DILocation(line: 1155, column: 65, scope: !4195)
!4218 = !DILocation(line: 1155, column: 83, scope: !4195)
!4219 = !DILocation(line: 1155, column: 9, scope: !4195)
!4220 = !DILocation(line: 1156, column: 19, scope: !4195)
!4221 = !DILocation(line: 1156, column: 24, scope: !4195)
!4222 = !DILocation(line: 1156, column: 34, scope: !4195)
!4223 = !DILocation(line: 1156, column: 38, scope: !4195)
!4224 = !DILocation(line: 1156, column: 43, scope: !4195)
!4225 = !DILocation(line: 1156, column: 36, scope: !4195)
!4226 = !DILocation(line: 1156, column: 32, scope: !4195)
!4227 = !DILocation(line: 1156, column: 57, scope: !4195)
!4228 = !DILocation(line: 1156, column: 55, scope: !4195)
!4229 = !DILocation(line: 1156, column: 60, scope: !4195)
!4230 = !DILocation(line: 1156, column: 65, scope: !4195)
!4231 = !DILocation(line: 1156, column: 81, scope: !4195)
!4232 = !DILocation(line: 1156, column: 9, scope: !4195)
!4233 = !DILocation(line: 1157, column: 19, scope: !4195)
!4234 = !DILocation(line: 1157, column: 24, scope: !4195)
!4235 = !DILocation(line: 1157, column: 34, scope: !4195)
!4236 = !DILocation(line: 1157, column: 38, scope: !4195)
!4237 = !DILocation(line: 1157, column: 43, scope: !4195)
!4238 = !DILocation(line: 1157, column: 36, scope: !4195)
!4239 = !DILocation(line: 1157, column: 32, scope: !4195)
!4240 = !DILocation(line: 1157, column: 57, scope: !4195)
!4241 = !DILocation(line: 1157, column: 55, scope: !4195)
!4242 = !DILocation(line: 1157, column: 60, scope: !4195)
!4243 = !DILocation(line: 1157, column: 65, scope: !4195)
!4244 = !DILocation(line: 1157, column: 81, scope: !4195)
!4245 = !DILocation(line: 1157, column: 9, scope: !4195)
!4246 = !DILocation(line: 1158, column: 13, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4195, file: !581, line: 1158, column: 13)
!4248 = !DILocation(line: 1158, column: 18, scope: !4247)
!4249 = !DILocation(line: 1158, column: 13, scope: !4195)
!4250 = !DILocation(line: 1159, column: 23, scope: !4247)
!4251 = !DILocation(line: 1159, column: 28, scope: !4247)
!4252 = !DILocation(line: 1159, column: 38, scope: !4247)
!4253 = !DILocation(line: 1159, column: 42, scope: !4247)
!4254 = !DILocation(line: 1159, column: 47, scope: !4247)
!4255 = !DILocation(line: 1159, column: 40, scope: !4247)
!4256 = !DILocation(line: 1159, column: 36, scope: !4247)
!4257 = !DILocation(line: 1159, column: 61, scope: !4247)
!4258 = !DILocation(line: 1159, column: 59, scope: !4247)
!4259 = !DILocation(line: 1159, column: 64, scope: !4247)
!4260 = !DILocation(line: 1159, column: 69, scope: !4247)
!4261 = !DILocation(line: 1159, column: 87, scope: !4247)
!4262 = !DILocation(line: 1159, column: 13, scope: !4247)
!4263 = !DILocation(line: 1160, column: 5, scope: !4195)
!4264 = !DILocation(line: 1151, column: 26, scope: !4265)
!4265 = !DILexicalBlockFile(scope: !4191, file: !581, discriminator: 2)
!4266 = !DILocation(line: 1151, column: 5, scope: !4265)
!4267 = distinct !{!4267, !4268}
!4268 = !DILocation(line: 1151, column: 5, scope: !814)
!4269 = !DILocation(line: 1162, column: 9, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !814, file: !581, line: 1162, column: 9)
!4271 = !DILocation(line: 1162, column: 12, scope: !4270)
!4272 = !DILocation(line: 1162, column: 18, scope: !4270)
!4273 = !DILocation(line: 1162, column: 9, scope: !814)
!4274 = !DILocalVariable(name: "x", scope: !4275, file: !581, line: 1163, type: !200)
!4275 = distinct !DILexicalBlock(scope: !4270, file: !581, line: 1162, column: 23)
!4276 = !DILocation(line: 1163, column: 13, scope: !4275)
!4277 = !DILocation(line: 1163, column: 34, scope: !4275)
!4278 = !DILocation(line: 1163, column: 17, scope: !4275)
!4279 = !DILocation(line: 1163, column: 27, scope: !4275)
!4280 = !DILocalVariable(name: "y", scope: !4275, file: !581, line: 1164, type: !200)
!4281 = !DILocation(line: 1164, column: 13, scope: !4275)
!4282 = !DILocation(line: 1164, column: 34, scope: !4275)
!4283 = !DILocation(line: 1164, column: 17, scope: !4275)
!4284 = !DILocation(line: 1164, column: 27, scope: !4275)
!4285 = !DILocation(line: 1166, column: 19, scope: !4275)
!4286 = !DILocation(line: 1166, column: 24, scope: !4275)
!4287 = !DILocation(line: 1166, column: 34, scope: !4275)
!4288 = !DILocation(line: 1166, column: 38, scope: !4275)
!4289 = !DILocation(line: 1166, column: 43, scope: !4275)
!4290 = !DILocation(line: 1166, column: 36, scope: !4275)
!4291 = !DILocation(line: 1166, column: 32, scope: !4275)
!4292 = !DILocation(line: 1166, column: 57, scope: !4275)
!4293 = !DILocation(line: 1166, column: 55, scope: !4275)
!4294 = !DILocation(line: 1166, column: 60, scope: !4275)
!4295 = !DILocation(line: 1166, column: 65, scope: !4275)
!4296 = !DILocation(line: 1166, column: 83, scope: !4275)
!4297 = !DILocation(line: 1166, column: 9, scope: !4275)
!4298 = !DILocation(line: 1167, column: 19, scope: !4275)
!4299 = !DILocation(line: 1167, column: 24, scope: !4275)
!4300 = !DILocation(line: 1167, column: 34, scope: !4275)
!4301 = !DILocation(line: 1167, column: 38, scope: !4275)
!4302 = !DILocation(line: 1167, column: 43, scope: !4275)
!4303 = !DILocation(line: 1167, column: 36, scope: !4275)
!4304 = !DILocation(line: 1167, column: 32, scope: !4275)
!4305 = !DILocation(line: 1167, column: 57, scope: !4275)
!4306 = !DILocation(line: 1167, column: 55, scope: !4275)
!4307 = !DILocation(line: 1167, column: 60, scope: !4275)
!4308 = !DILocation(line: 1167, column: 65, scope: !4275)
!4309 = !DILocation(line: 1167, column: 81, scope: !4275)
!4310 = !DILocation(line: 1167, column: 9, scope: !4275)
!4311 = !DILocation(line: 1168, column: 19, scope: !4275)
!4312 = !DILocation(line: 1168, column: 24, scope: !4275)
!4313 = !DILocation(line: 1168, column: 34, scope: !4275)
!4314 = !DILocation(line: 1168, column: 38, scope: !4275)
!4315 = !DILocation(line: 1168, column: 43, scope: !4275)
!4316 = !DILocation(line: 1168, column: 36, scope: !4275)
!4317 = !DILocation(line: 1168, column: 32, scope: !4275)
!4318 = !DILocation(line: 1168, column: 57, scope: !4275)
!4319 = !DILocation(line: 1168, column: 55, scope: !4275)
!4320 = !DILocation(line: 1168, column: 60, scope: !4275)
!4321 = !DILocation(line: 1168, column: 65, scope: !4275)
!4322 = !DILocation(line: 1168, column: 81, scope: !4275)
!4323 = !DILocation(line: 1168, column: 9, scope: !4275)
!4324 = !DILocation(line: 1169, column: 13, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4275, file: !581, line: 1169, column: 13)
!4326 = !DILocation(line: 1169, column: 18, scope: !4325)
!4327 = !DILocation(line: 1169, column: 13, scope: !4275)
!4328 = !DILocation(line: 1170, column: 23, scope: !4325)
!4329 = !DILocation(line: 1170, column: 28, scope: !4325)
!4330 = !DILocation(line: 1170, column: 38, scope: !4325)
!4331 = !DILocation(line: 1170, column: 42, scope: !4325)
!4332 = !DILocation(line: 1170, column: 47, scope: !4325)
!4333 = !DILocation(line: 1170, column: 40, scope: !4325)
!4334 = !DILocation(line: 1170, column: 36, scope: !4325)
!4335 = !DILocation(line: 1170, column: 61, scope: !4325)
!4336 = !DILocation(line: 1170, column: 59, scope: !4325)
!4337 = !DILocation(line: 1170, column: 64, scope: !4325)
!4338 = !DILocation(line: 1170, column: 69, scope: !4325)
!4339 = !DILocation(line: 1170, column: 87, scope: !4325)
!4340 = !DILocation(line: 1170, column: 13, scope: !4325)
!4341 = !DILocation(line: 1171, column: 5, scope: !4275)
!4342 = !DILocation(line: 1173, column: 9, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !814, file: !581, line: 1173, column: 9)
!4344 = !DILocation(line: 1173, column: 12, scope: !4343)
!4345 = !DILocation(line: 1173, column: 18, scope: !4343)
!4346 = !DILocation(line: 1173, column: 9, scope: !814)
!4347 = !DILocalVariable(name: "x", scope: !4348, file: !581, line: 1174, type: !200)
!4348 = distinct !DILexicalBlock(scope: !4343, file: !581, line: 1173, column: 23)
!4349 = !DILocation(line: 1174, column: 13, scope: !4348)
!4350 = !DILocation(line: 1174, column: 34, scope: !4348)
!4351 = !DILocation(line: 1174, column: 17, scope: !4348)
!4352 = !DILocation(line: 1174, column: 27, scope: !4348)
!4353 = !DILocalVariable(name: "y", scope: !4348, file: !581, line: 1175, type: !200)
!4354 = !DILocation(line: 1175, column: 13, scope: !4348)
!4355 = !DILocation(line: 1175, column: 34, scope: !4348)
!4356 = !DILocation(line: 1175, column: 17, scope: !4348)
!4357 = !DILocation(line: 1175, column: 27, scope: !4348)
!4358 = !DILocation(line: 1177, column: 19, scope: !4348)
!4359 = !DILocation(line: 1177, column: 24, scope: !4348)
!4360 = !DILocation(line: 1177, column: 34, scope: !4348)
!4361 = !DILocation(line: 1177, column: 38, scope: !4348)
!4362 = !DILocation(line: 1177, column: 43, scope: !4348)
!4363 = !DILocation(line: 1177, column: 36, scope: !4348)
!4364 = !DILocation(line: 1177, column: 32, scope: !4348)
!4365 = !DILocation(line: 1177, column: 57, scope: !4348)
!4366 = !DILocation(line: 1177, column: 55, scope: !4348)
!4367 = !DILocation(line: 1177, column: 60, scope: !4348)
!4368 = !DILocation(line: 1177, column: 65, scope: !4348)
!4369 = !DILocation(line: 1177, column: 83, scope: !4348)
!4370 = !DILocation(line: 1177, column: 9, scope: !4348)
!4371 = !DILocation(line: 1178, column: 19, scope: !4348)
!4372 = !DILocation(line: 1178, column: 24, scope: !4348)
!4373 = !DILocation(line: 1178, column: 34, scope: !4348)
!4374 = !DILocation(line: 1178, column: 38, scope: !4348)
!4375 = !DILocation(line: 1178, column: 43, scope: !4348)
!4376 = !DILocation(line: 1178, column: 36, scope: !4348)
!4377 = !DILocation(line: 1178, column: 32, scope: !4348)
!4378 = !DILocation(line: 1178, column: 57, scope: !4348)
!4379 = !DILocation(line: 1178, column: 55, scope: !4348)
!4380 = !DILocation(line: 1178, column: 60, scope: !4348)
!4381 = !DILocation(line: 1178, column: 65, scope: !4348)
!4382 = !DILocation(line: 1178, column: 81, scope: !4348)
!4383 = !DILocation(line: 1178, column: 9, scope: !4348)
!4384 = !DILocation(line: 1179, column: 19, scope: !4348)
!4385 = !DILocation(line: 1179, column: 24, scope: !4348)
!4386 = !DILocation(line: 1179, column: 34, scope: !4348)
!4387 = !DILocation(line: 1179, column: 38, scope: !4348)
!4388 = !DILocation(line: 1179, column: 43, scope: !4348)
!4389 = !DILocation(line: 1179, column: 36, scope: !4348)
!4390 = !DILocation(line: 1179, column: 32, scope: !4348)
!4391 = !DILocation(line: 1179, column: 57, scope: !4348)
!4392 = !DILocation(line: 1179, column: 55, scope: !4348)
!4393 = !DILocation(line: 1179, column: 60, scope: !4348)
!4394 = !DILocation(line: 1179, column: 65, scope: !4348)
!4395 = !DILocation(line: 1179, column: 81, scope: !4348)
!4396 = !DILocation(line: 1179, column: 9, scope: !4348)
!4397 = !DILocation(line: 1180, column: 13, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4348, file: !581, line: 1180, column: 13)
!4399 = !DILocation(line: 1180, column: 18, scope: !4398)
!4400 = !DILocation(line: 1180, column: 13, scope: !4348)
!4401 = !DILocation(line: 1181, column: 23, scope: !4398)
!4402 = !DILocation(line: 1181, column: 28, scope: !4398)
!4403 = !DILocation(line: 1181, column: 38, scope: !4398)
!4404 = !DILocation(line: 1181, column: 42, scope: !4398)
!4405 = !DILocation(line: 1181, column: 47, scope: !4398)
!4406 = !DILocation(line: 1181, column: 40, scope: !4398)
!4407 = !DILocation(line: 1181, column: 36, scope: !4398)
!4408 = !DILocation(line: 1181, column: 61, scope: !4398)
!4409 = !DILocation(line: 1181, column: 59, scope: !4398)
!4410 = !DILocation(line: 1181, column: 64, scope: !4398)
!4411 = !DILocation(line: 1181, column: 69, scope: !4398)
!4412 = !DILocation(line: 1181, column: 87, scope: !4398)
!4413 = !DILocation(line: 1181, column: 13, scope: !4398)
!4414 = !DILocation(line: 1182, column: 5, scope: !4348)
!4415 = !DILocation(line: 1184, column: 12, scope: !4158)
!4416 = !DILocation(line: 1184, column: 10, scope: !4158)
!4417 = !DILocation(line: 1184, column: 17, scope: !4418)
!4418 = !DILexicalBlockFile(scope: !4157, file: !581, discriminator: 1)
!4419 = !DILocation(line: 1184, column: 19, scope: !4418)
!4420 = !DILocation(line: 1184, column: 23, scope: !4418)
!4421 = !DILocation(line: 1184, column: 26, scope: !4422)
!4422 = !DILexicalBlockFile(scope: !4157, file: !581, discriminator: 2)
!4423 = !DILocation(line: 1184, column: 29, scope: !4422)
!4424 = !DILocation(line: 1184, column: 35, scope: !4422)
!4425 = !DILocation(line: 1184, column: 23, scope: !4422)
!4426 = !DILocation(line: 1184, column: 5, scope: !4427)
!4427 = !DILexicalBlockFile(scope: !4158, file: !581, discriminator: 3)
!4428 = !DILocalVariable(name: "x", scope: !4156, file: !581, line: 1186, type: !200)
!4429 = !DILocation(line: 1186, column: 13, scope: !4156)
!4430 = !DILocation(line: 1186, column: 33, scope: !4156)
!4431 = !DILocation(line: 1186, column: 17, scope: !4156)
!4432 = !DILocation(line: 1186, column: 30, scope: !4156)
!4433 = !DILocation(line: 1186, column: 27, scope: !4156)
!4434 = !DILocalVariable(name: "y", scope: !4156, file: !581, line: 1187, type: !200)
!4435 = !DILocation(line: 1187, column: 13, scope: !4156)
!4436 = !DILocation(line: 1187, column: 33, scope: !4156)
!4437 = !DILocation(line: 1187, column: 17, scope: !4156)
!4438 = !DILocation(line: 1187, column: 30, scope: !4156)
!4439 = !DILocation(line: 1187, column: 27, scope: !4156)
!4440 = !DILocation(line: 1189, column: 13, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4156, file: !581, line: 1189, column: 13)
!4442 = !DILocation(line: 1189, column: 15, scope: !4441)
!4443 = !DILocation(line: 1189, column: 13, scope: !4156)
!4444 = !DILocation(line: 1190, column: 15, scope: !4441)
!4445 = !DILocation(line: 1190, column: 13, scope: !4441)
!4446 = !DILocation(line: 1192, column: 15, scope: !4441)
!4447 = !DILocation(line: 1193, column: 13, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4156, file: !581, line: 1193, column: 13)
!4449 = !DILocation(line: 1193, column: 15, scope: !4448)
!4450 = !DILocation(line: 1193, column: 13, scope: !4156)
!4451 = !DILocation(line: 1194, column: 15, scope: !4448)
!4452 = !DILocation(line: 1194, column: 13, scope: !4448)
!4453 = !DILocation(line: 1196, column: 15, scope: !4448)
!4454 = !DILocation(line: 1198, column: 23, scope: !4156)
!4455 = !DILocation(line: 1198, column: 29, scope: !4156)
!4456 = !DILocation(line: 1198, column: 34, scope: !4156)
!4457 = !DILocation(line: 1198, column: 40, scope: !4156)
!4458 = !DILocation(line: 1198, column: 13, scope: !4156)
!4459 = !DILocation(line: 132, column: 9, scope: !4460, inlinedAt: !4164)
!4460 = distinct !DILexicalBlock(scope: !4150, file: !4151, line: 132, column: 9)
!4461 = !DILocation(line: 132, column: 13, scope: !4460, inlinedAt: !4164)
!4462 = !DILocation(line: 132, column: 11, scope: !4460, inlinedAt: !4164)
!4463 = !DILocation(line: 132, column: 9, scope: !4150, inlinedAt: !4164)
!4464 = !DILocation(line: 132, column: 26, scope: !4465, inlinedAt: !4164)
!4465 = !DILexicalBlockFile(scope: !4460, file: !4151, discriminator: 1)
!4466 = !DILocation(line: 132, column: 19, scope: !4465, inlinedAt: !4164)
!4467 = !DILocation(line: 133, column: 14, scope: !4468, inlinedAt: !4164)
!4468 = distinct !DILexicalBlock(scope: !4460, file: !4151, line: 133, column: 14)
!4469 = !DILocation(line: 133, column: 18, scope: !4468, inlinedAt: !4164)
!4470 = !DILocation(line: 133, column: 16, scope: !4468, inlinedAt: !4164)
!4471 = !DILocation(line: 133, column: 14, scope: !4460, inlinedAt: !4164)
!4472 = !DILocation(line: 133, column: 31, scope: !4473, inlinedAt: !4164)
!4473 = !DILexicalBlockFile(scope: !4468, file: !4151, discriminator: 1)
!4474 = !DILocation(line: 133, column: 24, scope: !4473, inlinedAt: !4164)
!4475 = !DILocation(line: 134, column: 17, scope: !4468, inlinedAt: !4164)
!4476 = !DILocation(line: 134, column: 10, scope: !4468, inlinedAt: !4164)
!4477 = !DILocation(line: 135, column: 1, scope: !4150, inlinedAt: !4164)
!4478 = !DILocation(line: 1198, column: 11, scope: !4156)
!4479 = !DILocation(line: 1199, column: 23, scope: !4156)
!4480 = !DILocation(line: 1199, column: 29, scope: !4156)
!4481 = !DILocation(line: 1199, column: 34, scope: !4156)
!4482 = !DILocation(line: 1199, column: 41, scope: !4156)
!4483 = !DILocation(line: 1199, column: 13, scope: !4156)
!4484 = !DILocation(line: 132, column: 9, scope: !4460, inlinedAt: !4155)
!4485 = !DILocation(line: 132, column: 13, scope: !4460, inlinedAt: !4155)
!4486 = !DILocation(line: 132, column: 11, scope: !4460, inlinedAt: !4155)
!4487 = !DILocation(line: 132, column: 9, scope: !4150, inlinedAt: !4155)
!4488 = !DILocation(line: 132, column: 26, scope: !4465, inlinedAt: !4155)
!4489 = !DILocation(line: 132, column: 19, scope: !4465, inlinedAt: !4155)
!4490 = !DILocation(line: 133, column: 14, scope: !4468, inlinedAt: !4155)
!4491 = !DILocation(line: 133, column: 18, scope: !4468, inlinedAt: !4155)
!4492 = !DILocation(line: 133, column: 16, scope: !4468, inlinedAt: !4155)
!4493 = !DILocation(line: 133, column: 14, scope: !4460, inlinedAt: !4155)
!4494 = !DILocation(line: 133, column: 31, scope: !4473, inlinedAt: !4155)
!4495 = !DILocation(line: 133, column: 24, scope: !4473, inlinedAt: !4155)
!4496 = !DILocation(line: 134, column: 17, scope: !4468, inlinedAt: !4155)
!4497 = !DILocation(line: 134, column: 10, scope: !4468, inlinedAt: !4155)
!4498 = !DILocation(line: 135, column: 1, scope: !4150, inlinedAt: !4155)
!4499 = !DILocation(line: 1199, column: 11, scope: !4156)
!4500 = !DILocation(line: 1200, column: 20, scope: !4156)
!4501 = !DILocation(line: 1200, column: 25, scope: !4156)
!4502 = !DILocation(line: 1200, column: 28, scope: !4156)
!4503 = !DILocation(line: 1200, column: 31, scope: !4156)
!4504 = !DILocation(line: 1200, column: 39, scope: !4156)
!4505 = !DILocation(line: 1200, column: 37, scope: !4156)
!4506 = !DILocation(line: 1200, column: 34, scope: !4156)
!4507 = !DILocation(line: 1200, column: 57, scope: !4156)
!4508 = !DILocation(line: 1200, column: 42, scope: !4156)
!4509 = !DILocation(line: 1200, column: 9, scope: !4156)
!4510 = !DILocation(line: 1201, column: 5, scope: !4156)
!4511 = !DILocation(line: 1184, column: 41, scope: !4512)
!4512 = !DILexicalBlockFile(scope: !4157, file: !581, discriminator: 4)
!4513 = !DILocation(line: 1184, column: 5, scope: !4512)
!4514 = distinct !{!4514, !4515}
!4515 = !DILocation(line: 1184, column: 5, scope: !814)
!4516 = !DILocation(line: 1202, column: 1, scope: !814)
!4517 = distinct !DISubprogram(name: "color_graticule", scope: !581, file: !581, line: 1020, type: !815, isLocal: true, isDefinition: true, scopeLine: 1021, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!4518 = !DILocation(line: 127, column: 87, scope: !4150, inlinedAt: !4519)
!4519 = distinct !DILocation(line: 1081, column: 13, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !581, line: 1061, column: 45)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !581, line: 1061, column: 5)
!4522 = distinct !DILexicalBlock(scope: !4517, file: !581, line: 1061, column: 5)
!4523 = !DILocation(line: 127, column: 94, scope: !4150, inlinedAt: !4519)
!4524 = !DILocation(line: 127, column: 104, scope: !4150, inlinedAt: !4519)
!4525 = !DILocation(line: 127, column: 87, scope: !4150, inlinedAt: !4526)
!4526 = distinct !DILocation(line: 1080, column: 13, scope: !4520)
!4527 = !DILocation(line: 127, column: 94, scope: !4150, inlinedAt: !4526)
!4528 = !DILocation(line: 127, column: 104, scope: !4150, inlinedAt: !4526)
!4529 = !DILocalVariable(name: "s", arg: 1, scope: !4517, file: !581, line: 1020, type: !817)
!4530 = !DILocation(line: 1020, column: 49, scope: !4517)
!4531 = !DILocalVariable(name: "out", arg: 2, scope: !4517, file: !581, line: 1020, type: !285)
!4532 = !DILocation(line: 1020, column: 61, scope: !4517)
!4533 = !DILocalVariable(name: "X", arg: 3, scope: !4517, file: !581, line: 1020, type: !200)
!4534 = !DILocation(line: 1020, column: 70, scope: !4517)
!4535 = !DILocalVariable(name: "Y", arg: 4, scope: !4517, file: !581, line: 1020, type: !200)
!4536 = !DILocation(line: 1020, column: 77, scope: !4517)
!4537 = !DILocalVariable(name: "D", arg: 5, scope: !4517, file: !581, line: 1020, type: !200)
!4538 = !DILocation(line: 1020, column: 84, scope: !4517)
!4539 = !DILocalVariable(name: "P", arg: 6, scope: !4517, file: !581, line: 1020, type: !200)
!4540 = !DILocation(line: 1020, column: 91, scope: !4517)
!4541 = !DILocalVariable(name: "o", scope: !4517, file: !581, line: 1022, type: !4180)
!4542 = !DILocation(line: 1022, column: 17, scope: !4517)
!4543 = !DILocation(line: 1022, column: 21, scope: !4517)
!4544 = !DILocation(line: 1022, column: 24, scope: !4517)
!4545 = !DILocalVariable(name: "i", scope: !4517, file: !581, line: 1023, type: !200)
!4546 = !DILocation(line: 1023, column: 9, scope: !4517)
!4547 = !DILocation(line: 1025, column: 12, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4517, file: !581, line: 1025, column: 5)
!4549 = !DILocation(line: 1025, column: 10, scope: !4548)
!4550 = !DILocation(line: 1025, column: 17, scope: !4551)
!4551 = !DILexicalBlockFile(scope: !4552, file: !581, discriminator: 1)
!4552 = distinct !DILexicalBlock(scope: !4548, file: !581, line: 1025, column: 5)
!4553 = !DILocation(line: 1025, column: 19, scope: !4551)
!4554 = !DILocation(line: 1025, column: 5, scope: !4551)
!4555 = !DILocalVariable(name: "x", scope: !4556, file: !581, line: 1026, type: !200)
!4556 = distinct !DILexicalBlock(scope: !4552, file: !581, line: 1025, column: 30)
!4557 = !DILocation(line: 1026, column: 13, scope: !4556)
!4558 = !DILocation(line: 1026, column: 33, scope: !4556)
!4559 = !DILocation(line: 1026, column: 17, scope: !4556)
!4560 = !DILocation(line: 1026, column: 30, scope: !4556)
!4561 = !DILocation(line: 1026, column: 27, scope: !4556)
!4562 = !DILocalVariable(name: "y", scope: !4556, file: !581, line: 1027, type: !200)
!4563 = !DILocation(line: 1027, column: 13, scope: !4556)
!4564 = !DILocation(line: 1027, column: 33, scope: !4556)
!4565 = !DILocation(line: 1027, column: 17, scope: !4556)
!4566 = !DILocation(line: 1027, column: 30, scope: !4556)
!4567 = !DILocation(line: 1027, column: 27, scope: !4556)
!4568 = !DILocalVariable(name: "d", scope: !4556, file: !581, line: 1028, type: !200)
!4569 = !DILocation(line: 1028, column: 13, scope: !4556)
!4570 = !DILocation(line: 1028, column: 33, scope: !4556)
!4571 = !DILocation(line: 1028, column: 17, scope: !4556)
!4572 = !DILocation(line: 1028, column: 30, scope: !4556)
!4573 = !DILocation(line: 1028, column: 27, scope: !4556)
!4574 = !DILocation(line: 1030, column: 29, scope: !4556)
!4575 = !DILocation(line: 1030, column: 19, scope: !4556)
!4576 = !DILocation(line: 1030, column: 24, scope: !4556)
!4577 = !DILocation(line: 1030, column: 34, scope: !4556)
!4578 = !DILocation(line: 1030, column: 52, scope: !4556)
!4579 = !DILocation(line: 1030, column: 38, scope: !4556)
!4580 = !DILocation(line: 1030, column: 43, scope: !4556)
!4581 = !DILocation(line: 1030, column: 36, scope: !4556)
!4582 = !DILocation(line: 1030, column: 32, scope: !4556)
!4583 = !DILocation(line: 1030, column: 57, scope: !4556)
!4584 = !DILocation(line: 1030, column: 55, scope: !4556)
!4585 = !DILocation(line: 1030, column: 74, scope: !4556)
!4586 = !DILocation(line: 1030, column: 60, scope: !4556)
!4587 = !DILocation(line: 1030, column: 65, scope: !4556)
!4588 = !DILocation(line: 1030, column: 78, scope: !4556)
!4589 = !DILocation(line: 1030, column: 81, scope: !4556)
!4590 = !DILocation(line: 1030, column: 9, scope: !4556)
!4591 = !DILocation(line: 1031, column: 29, scope: !4556)
!4592 = !DILocation(line: 1031, column: 19, scope: !4556)
!4593 = !DILocation(line: 1031, column: 24, scope: !4556)
!4594 = !DILocation(line: 1031, column: 34, scope: !4556)
!4595 = !DILocation(line: 1031, column: 52, scope: !4556)
!4596 = !DILocation(line: 1031, column: 38, scope: !4556)
!4597 = !DILocation(line: 1031, column: 43, scope: !4556)
!4598 = !DILocation(line: 1031, column: 36, scope: !4556)
!4599 = !DILocation(line: 1031, column: 32, scope: !4556)
!4600 = !DILocation(line: 1031, column: 57, scope: !4556)
!4601 = !DILocation(line: 1031, column: 55, scope: !4556)
!4602 = !DILocation(line: 1031, column: 74, scope: !4556)
!4603 = !DILocation(line: 1031, column: 60, scope: !4556)
!4604 = !DILocation(line: 1031, column: 65, scope: !4556)
!4605 = !DILocation(line: 1031, column: 78, scope: !4556)
!4606 = !DILocation(line: 1031, column: 81, scope: !4556)
!4607 = !DILocation(line: 1031, column: 9, scope: !4556)
!4608 = !DILocation(line: 1032, column: 29, scope: !4556)
!4609 = !DILocation(line: 1032, column: 19, scope: !4556)
!4610 = !DILocation(line: 1032, column: 24, scope: !4556)
!4611 = !DILocation(line: 1032, column: 34, scope: !4556)
!4612 = !DILocation(line: 1032, column: 52, scope: !4556)
!4613 = !DILocation(line: 1032, column: 38, scope: !4556)
!4614 = !DILocation(line: 1032, column: 43, scope: !4556)
!4615 = !DILocation(line: 1032, column: 36, scope: !4556)
!4616 = !DILocation(line: 1032, column: 32, scope: !4556)
!4617 = !DILocation(line: 1032, column: 57, scope: !4556)
!4618 = !DILocation(line: 1032, column: 55, scope: !4556)
!4619 = !DILocation(line: 1032, column: 74, scope: !4556)
!4620 = !DILocation(line: 1032, column: 60, scope: !4556)
!4621 = !DILocation(line: 1032, column: 65, scope: !4556)
!4622 = !DILocation(line: 1032, column: 78, scope: !4556)
!4623 = !DILocation(line: 1032, column: 81, scope: !4556)
!4624 = !DILocation(line: 1032, column: 9, scope: !4556)
!4625 = !DILocation(line: 1033, column: 13, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4556, file: !581, line: 1033, column: 13)
!4627 = !DILocation(line: 1033, column: 18, scope: !4626)
!4628 = !DILocation(line: 1033, column: 13, scope: !4556)
!4629 = !DILocation(line: 1034, column: 23, scope: !4626)
!4630 = !DILocation(line: 1034, column: 28, scope: !4626)
!4631 = !DILocation(line: 1034, column: 38, scope: !4626)
!4632 = !DILocation(line: 1034, column: 42, scope: !4626)
!4633 = !DILocation(line: 1034, column: 47, scope: !4626)
!4634 = !DILocation(line: 1034, column: 40, scope: !4626)
!4635 = !DILocation(line: 1034, column: 36, scope: !4626)
!4636 = !DILocation(line: 1034, column: 61, scope: !4626)
!4637 = !DILocation(line: 1034, column: 59, scope: !4626)
!4638 = !DILocation(line: 1034, column: 64, scope: !4626)
!4639 = !DILocation(line: 1034, column: 69, scope: !4626)
!4640 = !DILocation(line: 1034, column: 87, scope: !4626)
!4641 = !DILocation(line: 1034, column: 13, scope: !4626)
!4642 = !DILocation(line: 1035, column: 5, scope: !4556)
!4643 = !DILocation(line: 1025, column: 26, scope: !4644)
!4644 = !DILexicalBlockFile(scope: !4552, file: !581, discriminator: 2)
!4645 = !DILocation(line: 1025, column: 5, scope: !4644)
!4646 = distinct !{!4646, !4647}
!4647 = !DILocation(line: 1025, column: 5, scope: !4517)
!4648 = !DILocation(line: 1037, column: 9, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4517, file: !581, line: 1037, column: 9)
!4650 = !DILocation(line: 1037, column: 12, scope: !4649)
!4651 = !DILocation(line: 1037, column: 18, scope: !4649)
!4652 = !DILocation(line: 1037, column: 9, scope: !4517)
!4653 = !DILocalVariable(name: "x", scope: !4654, file: !581, line: 1038, type: !200)
!4654 = distinct !DILexicalBlock(scope: !4649, file: !581, line: 1037, column: 23)
!4655 = !DILocation(line: 1038, column: 13, scope: !4654)
!4656 = !DILocation(line: 1038, column: 34, scope: !4654)
!4657 = !DILocation(line: 1038, column: 17, scope: !4654)
!4658 = !DILocation(line: 1038, column: 27, scope: !4654)
!4659 = !DILocalVariable(name: "y", scope: !4654, file: !581, line: 1039, type: !200)
!4660 = !DILocation(line: 1039, column: 13, scope: !4654)
!4661 = !DILocation(line: 1039, column: 34, scope: !4654)
!4662 = !DILocation(line: 1039, column: 17, scope: !4654)
!4663 = !DILocation(line: 1039, column: 27, scope: !4654)
!4664 = !DILocalVariable(name: "d", scope: !4654, file: !581, line: 1040, type: !200)
!4665 = !DILocation(line: 1040, column: 13, scope: !4654)
!4666 = !DILocation(line: 1040, column: 34, scope: !4654)
!4667 = !DILocation(line: 1040, column: 17, scope: !4654)
!4668 = !DILocation(line: 1040, column: 27, scope: !4654)
!4669 = !DILocation(line: 1042, column: 29, scope: !4654)
!4670 = !DILocation(line: 1042, column: 19, scope: !4654)
!4671 = !DILocation(line: 1042, column: 24, scope: !4654)
!4672 = !DILocation(line: 1042, column: 34, scope: !4654)
!4673 = !DILocation(line: 1042, column: 52, scope: !4654)
!4674 = !DILocation(line: 1042, column: 38, scope: !4654)
!4675 = !DILocation(line: 1042, column: 43, scope: !4654)
!4676 = !DILocation(line: 1042, column: 36, scope: !4654)
!4677 = !DILocation(line: 1042, column: 32, scope: !4654)
!4678 = !DILocation(line: 1042, column: 57, scope: !4654)
!4679 = !DILocation(line: 1042, column: 55, scope: !4654)
!4680 = !DILocation(line: 1042, column: 74, scope: !4654)
!4681 = !DILocation(line: 1042, column: 60, scope: !4654)
!4682 = !DILocation(line: 1042, column: 65, scope: !4654)
!4683 = !DILocation(line: 1042, column: 78, scope: !4654)
!4684 = !DILocation(line: 1042, column: 81, scope: !4654)
!4685 = !DILocation(line: 1042, column: 9, scope: !4654)
!4686 = !DILocation(line: 1043, column: 29, scope: !4654)
!4687 = !DILocation(line: 1043, column: 19, scope: !4654)
!4688 = !DILocation(line: 1043, column: 24, scope: !4654)
!4689 = !DILocation(line: 1043, column: 34, scope: !4654)
!4690 = !DILocation(line: 1043, column: 52, scope: !4654)
!4691 = !DILocation(line: 1043, column: 38, scope: !4654)
!4692 = !DILocation(line: 1043, column: 43, scope: !4654)
!4693 = !DILocation(line: 1043, column: 36, scope: !4654)
!4694 = !DILocation(line: 1043, column: 32, scope: !4654)
!4695 = !DILocation(line: 1043, column: 57, scope: !4654)
!4696 = !DILocation(line: 1043, column: 55, scope: !4654)
!4697 = !DILocation(line: 1043, column: 74, scope: !4654)
!4698 = !DILocation(line: 1043, column: 60, scope: !4654)
!4699 = !DILocation(line: 1043, column: 65, scope: !4654)
!4700 = !DILocation(line: 1043, column: 78, scope: !4654)
!4701 = !DILocation(line: 1043, column: 81, scope: !4654)
!4702 = !DILocation(line: 1043, column: 9, scope: !4654)
!4703 = !DILocation(line: 1044, column: 29, scope: !4654)
!4704 = !DILocation(line: 1044, column: 19, scope: !4654)
!4705 = !DILocation(line: 1044, column: 24, scope: !4654)
!4706 = !DILocation(line: 1044, column: 34, scope: !4654)
!4707 = !DILocation(line: 1044, column: 52, scope: !4654)
!4708 = !DILocation(line: 1044, column: 38, scope: !4654)
!4709 = !DILocation(line: 1044, column: 43, scope: !4654)
!4710 = !DILocation(line: 1044, column: 36, scope: !4654)
!4711 = !DILocation(line: 1044, column: 32, scope: !4654)
!4712 = !DILocation(line: 1044, column: 57, scope: !4654)
!4713 = !DILocation(line: 1044, column: 55, scope: !4654)
!4714 = !DILocation(line: 1044, column: 74, scope: !4654)
!4715 = !DILocation(line: 1044, column: 60, scope: !4654)
!4716 = !DILocation(line: 1044, column: 65, scope: !4654)
!4717 = !DILocation(line: 1044, column: 78, scope: !4654)
!4718 = !DILocation(line: 1044, column: 81, scope: !4654)
!4719 = !DILocation(line: 1044, column: 9, scope: !4654)
!4720 = !DILocation(line: 1045, column: 13, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4654, file: !581, line: 1045, column: 13)
!4722 = !DILocation(line: 1045, column: 18, scope: !4721)
!4723 = !DILocation(line: 1045, column: 13, scope: !4654)
!4724 = !DILocation(line: 1046, column: 23, scope: !4721)
!4725 = !DILocation(line: 1046, column: 28, scope: !4721)
!4726 = !DILocation(line: 1046, column: 38, scope: !4721)
!4727 = !DILocation(line: 1046, column: 42, scope: !4721)
!4728 = !DILocation(line: 1046, column: 47, scope: !4721)
!4729 = !DILocation(line: 1046, column: 40, scope: !4721)
!4730 = !DILocation(line: 1046, column: 36, scope: !4721)
!4731 = !DILocation(line: 1046, column: 61, scope: !4721)
!4732 = !DILocation(line: 1046, column: 59, scope: !4721)
!4733 = !DILocation(line: 1046, column: 64, scope: !4721)
!4734 = !DILocation(line: 1046, column: 69, scope: !4721)
!4735 = !DILocation(line: 1046, column: 87, scope: !4721)
!4736 = !DILocation(line: 1046, column: 13, scope: !4721)
!4737 = !DILocation(line: 1047, column: 5, scope: !4654)
!4738 = !DILocation(line: 1049, column: 9, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4517, file: !581, line: 1049, column: 9)
!4740 = !DILocation(line: 1049, column: 12, scope: !4739)
!4741 = !DILocation(line: 1049, column: 18, scope: !4739)
!4742 = !DILocation(line: 1049, column: 9, scope: !4517)
!4743 = !DILocalVariable(name: "x", scope: !4744, file: !581, line: 1050, type: !200)
!4744 = distinct !DILexicalBlock(scope: !4739, file: !581, line: 1049, column: 23)
!4745 = !DILocation(line: 1050, column: 13, scope: !4744)
!4746 = !DILocation(line: 1050, column: 34, scope: !4744)
!4747 = !DILocation(line: 1050, column: 17, scope: !4744)
!4748 = !DILocation(line: 1050, column: 27, scope: !4744)
!4749 = !DILocalVariable(name: "y", scope: !4744, file: !581, line: 1051, type: !200)
!4750 = !DILocation(line: 1051, column: 13, scope: !4744)
!4751 = !DILocation(line: 1051, column: 34, scope: !4744)
!4752 = !DILocation(line: 1051, column: 17, scope: !4744)
!4753 = !DILocation(line: 1051, column: 27, scope: !4744)
!4754 = !DILocalVariable(name: "d", scope: !4744, file: !581, line: 1052, type: !200)
!4755 = !DILocation(line: 1052, column: 13, scope: !4744)
!4756 = !DILocation(line: 1052, column: 34, scope: !4744)
!4757 = !DILocation(line: 1052, column: 17, scope: !4744)
!4758 = !DILocation(line: 1052, column: 27, scope: !4744)
!4759 = !DILocation(line: 1054, column: 29, scope: !4744)
!4760 = !DILocation(line: 1054, column: 19, scope: !4744)
!4761 = !DILocation(line: 1054, column: 24, scope: !4744)
!4762 = !DILocation(line: 1054, column: 34, scope: !4744)
!4763 = !DILocation(line: 1054, column: 52, scope: !4744)
!4764 = !DILocation(line: 1054, column: 38, scope: !4744)
!4765 = !DILocation(line: 1054, column: 43, scope: !4744)
!4766 = !DILocation(line: 1054, column: 36, scope: !4744)
!4767 = !DILocation(line: 1054, column: 32, scope: !4744)
!4768 = !DILocation(line: 1054, column: 57, scope: !4744)
!4769 = !DILocation(line: 1054, column: 55, scope: !4744)
!4770 = !DILocation(line: 1054, column: 74, scope: !4744)
!4771 = !DILocation(line: 1054, column: 60, scope: !4744)
!4772 = !DILocation(line: 1054, column: 65, scope: !4744)
!4773 = !DILocation(line: 1054, column: 78, scope: !4744)
!4774 = !DILocation(line: 1054, column: 81, scope: !4744)
!4775 = !DILocation(line: 1054, column: 9, scope: !4744)
!4776 = !DILocation(line: 1055, column: 29, scope: !4744)
!4777 = !DILocation(line: 1055, column: 19, scope: !4744)
!4778 = !DILocation(line: 1055, column: 24, scope: !4744)
!4779 = !DILocation(line: 1055, column: 34, scope: !4744)
!4780 = !DILocation(line: 1055, column: 52, scope: !4744)
!4781 = !DILocation(line: 1055, column: 38, scope: !4744)
!4782 = !DILocation(line: 1055, column: 43, scope: !4744)
!4783 = !DILocation(line: 1055, column: 36, scope: !4744)
!4784 = !DILocation(line: 1055, column: 32, scope: !4744)
!4785 = !DILocation(line: 1055, column: 57, scope: !4744)
!4786 = !DILocation(line: 1055, column: 55, scope: !4744)
!4787 = !DILocation(line: 1055, column: 74, scope: !4744)
!4788 = !DILocation(line: 1055, column: 60, scope: !4744)
!4789 = !DILocation(line: 1055, column: 65, scope: !4744)
!4790 = !DILocation(line: 1055, column: 78, scope: !4744)
!4791 = !DILocation(line: 1055, column: 81, scope: !4744)
!4792 = !DILocation(line: 1055, column: 9, scope: !4744)
!4793 = !DILocation(line: 1056, column: 29, scope: !4744)
!4794 = !DILocation(line: 1056, column: 19, scope: !4744)
!4795 = !DILocation(line: 1056, column: 24, scope: !4744)
!4796 = !DILocation(line: 1056, column: 34, scope: !4744)
!4797 = !DILocation(line: 1056, column: 52, scope: !4744)
!4798 = !DILocation(line: 1056, column: 38, scope: !4744)
!4799 = !DILocation(line: 1056, column: 43, scope: !4744)
!4800 = !DILocation(line: 1056, column: 36, scope: !4744)
!4801 = !DILocation(line: 1056, column: 32, scope: !4744)
!4802 = !DILocation(line: 1056, column: 57, scope: !4744)
!4803 = !DILocation(line: 1056, column: 55, scope: !4744)
!4804 = !DILocation(line: 1056, column: 74, scope: !4744)
!4805 = !DILocation(line: 1056, column: 60, scope: !4744)
!4806 = !DILocation(line: 1056, column: 65, scope: !4744)
!4807 = !DILocation(line: 1056, column: 78, scope: !4744)
!4808 = !DILocation(line: 1056, column: 81, scope: !4744)
!4809 = !DILocation(line: 1056, column: 9, scope: !4744)
!4810 = !DILocation(line: 1057, column: 13, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4744, file: !581, line: 1057, column: 13)
!4812 = !DILocation(line: 1057, column: 18, scope: !4811)
!4813 = !DILocation(line: 1057, column: 13, scope: !4744)
!4814 = !DILocation(line: 1058, column: 23, scope: !4811)
!4815 = !DILocation(line: 1058, column: 28, scope: !4811)
!4816 = !DILocation(line: 1058, column: 38, scope: !4811)
!4817 = !DILocation(line: 1058, column: 42, scope: !4811)
!4818 = !DILocation(line: 1058, column: 47, scope: !4811)
!4819 = !DILocation(line: 1058, column: 40, scope: !4811)
!4820 = !DILocation(line: 1058, column: 36, scope: !4811)
!4821 = !DILocation(line: 1058, column: 61, scope: !4811)
!4822 = !DILocation(line: 1058, column: 59, scope: !4811)
!4823 = !DILocation(line: 1058, column: 64, scope: !4811)
!4824 = !DILocation(line: 1058, column: 69, scope: !4811)
!4825 = !DILocation(line: 1058, column: 87, scope: !4811)
!4826 = !DILocation(line: 1058, column: 13, scope: !4811)
!4827 = !DILocation(line: 1059, column: 5, scope: !4744)
!4828 = !DILocation(line: 1061, column: 12, scope: !4522)
!4829 = !DILocation(line: 1061, column: 10, scope: !4522)
!4830 = !DILocation(line: 1061, column: 17, scope: !4831)
!4831 = !DILexicalBlockFile(scope: !4521, file: !581, discriminator: 1)
!4832 = !DILocation(line: 1061, column: 19, scope: !4831)
!4833 = !DILocation(line: 1061, column: 23, scope: !4831)
!4834 = !DILocation(line: 1061, column: 26, scope: !4835)
!4835 = !DILexicalBlockFile(scope: !4521, file: !581, discriminator: 2)
!4836 = !DILocation(line: 1061, column: 29, scope: !4835)
!4837 = !DILocation(line: 1061, column: 35, scope: !4835)
!4838 = !DILocation(line: 1061, column: 23, scope: !4835)
!4839 = !DILocation(line: 1061, column: 5, scope: !4840)
!4840 = !DILexicalBlockFile(scope: !4522, file: !581, discriminator: 3)
!4841 = !DILocalVariable(name: "color", scope: !4520, file: !581, line: 1062, type: !4842)
!4842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !292, size: 32, align: 8, elements: !828)
!4843 = !DILocation(line: 1062, column: 17, scope: !4520)
!4844 = !DILocalVariable(name: "x", scope: !4520, file: !581, line: 1063, type: !200)
!4845 = !DILocation(line: 1063, column: 13, scope: !4520)
!4846 = !DILocation(line: 1063, column: 33, scope: !4520)
!4847 = !DILocation(line: 1063, column: 17, scope: !4520)
!4848 = !DILocation(line: 1063, column: 30, scope: !4520)
!4849 = !DILocation(line: 1063, column: 27, scope: !4520)
!4850 = !DILocalVariable(name: "y", scope: !4520, file: !581, line: 1064, type: !200)
!4851 = !DILocation(line: 1064, column: 13, scope: !4520)
!4852 = !DILocation(line: 1064, column: 33, scope: !4520)
!4853 = !DILocation(line: 1064, column: 17, scope: !4520)
!4854 = !DILocation(line: 1064, column: 30, scope: !4520)
!4855 = !DILocation(line: 1064, column: 27, scope: !4520)
!4856 = !DILocalVariable(name: "d", scope: !4520, file: !581, line: 1065, type: !200)
!4857 = !DILocation(line: 1065, column: 13, scope: !4520)
!4858 = !DILocation(line: 1065, column: 33, scope: !4520)
!4859 = !DILocation(line: 1065, column: 17, scope: !4520)
!4860 = !DILocation(line: 1065, column: 30, scope: !4520)
!4861 = !DILocation(line: 1065, column: 27, scope: !4520)
!4862 = !DILocation(line: 1067, column: 20, scope: !4520)
!4863 = !DILocation(line: 1067, column: 15, scope: !4520)
!4864 = !DILocation(line: 1067, column: 9, scope: !4520)
!4865 = !DILocation(line: 1067, column: 18, scope: !4520)
!4866 = !DILocation(line: 1068, column: 20, scope: !4520)
!4867 = !DILocation(line: 1068, column: 15, scope: !4520)
!4868 = !DILocation(line: 1068, column: 9, scope: !4520)
!4869 = !DILocation(line: 1068, column: 18, scope: !4520)
!4870 = !DILocation(line: 1069, column: 20, scope: !4520)
!4871 = !DILocation(line: 1069, column: 15, scope: !4520)
!4872 = !DILocation(line: 1069, column: 9, scope: !4520)
!4873 = !DILocation(line: 1069, column: 18, scope: !4520)
!4874 = !DILocation(line: 1071, column: 13, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4520, file: !581, line: 1071, column: 13)
!4876 = !DILocation(line: 1071, column: 15, scope: !4875)
!4877 = !DILocation(line: 1071, column: 13, scope: !4520)
!4878 = !DILocation(line: 1072, column: 15, scope: !4875)
!4879 = !DILocation(line: 1072, column: 13, scope: !4875)
!4880 = !DILocation(line: 1074, column: 15, scope: !4875)
!4881 = !DILocation(line: 1075, column: 13, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4520, file: !581, line: 1075, column: 13)
!4883 = !DILocation(line: 1075, column: 15, scope: !4882)
!4884 = !DILocation(line: 1075, column: 13, scope: !4520)
!4885 = !DILocation(line: 1076, column: 15, scope: !4882)
!4886 = !DILocation(line: 1076, column: 13, scope: !4882)
!4887 = !DILocation(line: 1078, column: 15, scope: !4882)
!4888 = !DILocation(line: 1080, column: 23, scope: !4520)
!4889 = !DILocation(line: 1080, column: 29, scope: !4520)
!4890 = !DILocation(line: 1080, column: 34, scope: !4520)
!4891 = !DILocation(line: 1080, column: 40, scope: !4520)
!4892 = !DILocation(line: 1080, column: 13, scope: !4520)
!4893 = !DILocation(line: 132, column: 9, scope: !4460, inlinedAt: !4526)
!4894 = !DILocation(line: 132, column: 13, scope: !4460, inlinedAt: !4526)
!4895 = !DILocation(line: 132, column: 11, scope: !4460, inlinedAt: !4526)
!4896 = !DILocation(line: 132, column: 9, scope: !4150, inlinedAt: !4526)
!4897 = !DILocation(line: 132, column: 26, scope: !4465, inlinedAt: !4526)
!4898 = !DILocation(line: 132, column: 19, scope: !4465, inlinedAt: !4526)
!4899 = !DILocation(line: 133, column: 14, scope: !4468, inlinedAt: !4526)
!4900 = !DILocation(line: 133, column: 18, scope: !4468, inlinedAt: !4526)
!4901 = !DILocation(line: 133, column: 16, scope: !4468, inlinedAt: !4526)
!4902 = !DILocation(line: 133, column: 14, scope: !4460, inlinedAt: !4526)
!4903 = !DILocation(line: 133, column: 31, scope: !4473, inlinedAt: !4526)
!4904 = !DILocation(line: 133, column: 24, scope: !4473, inlinedAt: !4526)
!4905 = !DILocation(line: 134, column: 17, scope: !4468, inlinedAt: !4526)
!4906 = !DILocation(line: 134, column: 10, scope: !4468, inlinedAt: !4526)
!4907 = !DILocation(line: 135, column: 1, scope: !4150, inlinedAt: !4526)
!4908 = !DILocation(line: 1080, column: 11, scope: !4520)
!4909 = !DILocation(line: 1081, column: 23, scope: !4520)
!4910 = !DILocation(line: 1081, column: 29, scope: !4520)
!4911 = !DILocation(line: 1081, column: 34, scope: !4520)
!4912 = !DILocation(line: 1081, column: 41, scope: !4520)
!4913 = !DILocation(line: 1081, column: 13, scope: !4520)
!4914 = !DILocation(line: 132, column: 9, scope: !4460, inlinedAt: !4519)
!4915 = !DILocation(line: 132, column: 13, scope: !4460, inlinedAt: !4519)
!4916 = !DILocation(line: 132, column: 11, scope: !4460, inlinedAt: !4519)
!4917 = !DILocation(line: 132, column: 9, scope: !4150, inlinedAt: !4519)
!4918 = !DILocation(line: 132, column: 26, scope: !4465, inlinedAt: !4519)
!4919 = !DILocation(line: 132, column: 19, scope: !4465, inlinedAt: !4519)
!4920 = !DILocation(line: 133, column: 14, scope: !4468, inlinedAt: !4519)
!4921 = !DILocation(line: 133, column: 18, scope: !4468, inlinedAt: !4519)
!4922 = !DILocation(line: 133, column: 16, scope: !4468, inlinedAt: !4519)
!4923 = !DILocation(line: 133, column: 14, scope: !4460, inlinedAt: !4519)
!4924 = !DILocation(line: 133, column: 31, scope: !4473, inlinedAt: !4519)
!4925 = !DILocation(line: 133, column: 24, scope: !4473, inlinedAt: !4519)
!4926 = !DILocation(line: 134, column: 17, scope: !4468, inlinedAt: !4519)
!4927 = !DILocation(line: 134, column: 10, scope: !4468, inlinedAt: !4519)
!4928 = !DILocation(line: 135, column: 1, scope: !4150, inlinedAt: !4519)
!4929 = !DILocation(line: 1081, column: 11, scope: !4520)
!4930 = !DILocation(line: 1082, column: 20, scope: !4520)
!4931 = !DILocation(line: 1082, column: 25, scope: !4520)
!4932 = !DILocation(line: 1082, column: 28, scope: !4520)
!4933 = !DILocation(line: 1082, column: 31, scope: !4520)
!4934 = !DILocation(line: 1082, column: 39, scope: !4520)
!4935 = !DILocation(line: 1082, column: 37, scope: !4520)
!4936 = !DILocation(line: 1082, column: 34, scope: !4520)
!4937 = !DILocation(line: 1082, column: 57, scope: !4520)
!4938 = !DILocation(line: 1082, column: 42, scope: !4520)
!4939 = !DILocation(line: 1082, column: 61, scope: !4520)
!4940 = !DILocation(line: 1082, column: 9, scope: !4520)
!4941 = !DILocation(line: 1083, column: 5, scope: !4520)
!4942 = !DILocation(line: 1061, column: 41, scope: !4943)
!4943 = !DILexicalBlockFile(scope: !4521, file: !581, discriminator: 4)
!4944 = !DILocation(line: 1061, column: 5, scope: !4943)
!4945 = distinct !{!4945, !4946}
!4946 = !DILocation(line: 1061, column: 5, scope: !4517)
!4947 = !DILocation(line: 1084, column: 1, scope: !4517)
!4948 = distinct !DISubprogram(name: "green_graticule16", scope: !581, file: !581, line: 1086, type: !815, isLocal: true, isDefinition: true, scopeLine: 1087, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!4949 = !DILocation(line: 127, column: 87, scope: !4150, inlinedAt: !4950)
!4950 = distinct !DILocation(line: 1141, column: 13, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4952, file: !581, line: 1126, column: 45)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !581, line: 1126, column: 5)
!4953 = distinct !DILexicalBlock(scope: !4948, file: !581, line: 1126, column: 5)
!4954 = !DILocation(line: 127, column: 94, scope: !4150, inlinedAt: !4950)
!4955 = !DILocation(line: 127, column: 104, scope: !4150, inlinedAt: !4950)
!4956 = !DILocation(line: 127, column: 87, scope: !4150, inlinedAt: !4957)
!4957 = distinct !DILocation(line: 1140, column: 13, scope: !4951)
!4958 = !DILocation(line: 127, column: 94, scope: !4150, inlinedAt: !4957)
!4959 = !DILocation(line: 127, column: 104, scope: !4150, inlinedAt: !4957)
!4960 = !DILocalVariable(name: "s", arg: 1, scope: !4948, file: !581, line: 1086, type: !817)
!4961 = !DILocation(line: 1086, column: 51, scope: !4948)
!4962 = !DILocalVariable(name: "out", arg: 2, scope: !4948, file: !581, line: 1086, type: !285)
!4963 = !DILocation(line: 1086, column: 63, scope: !4948)
!4964 = !DILocalVariable(name: "X", arg: 3, scope: !4948, file: !581, line: 1086, type: !200)
!4965 = !DILocation(line: 1086, column: 72, scope: !4948)
!4966 = !DILocalVariable(name: "Y", arg: 4, scope: !4948, file: !581, line: 1086, type: !200)
!4967 = !DILocation(line: 1086, column: 79, scope: !4948)
!4968 = !DILocalVariable(name: "D", arg: 5, scope: !4948, file: !581, line: 1086, type: !200)
!4969 = !DILocation(line: 1086, column: 86, scope: !4948)
!4970 = !DILocalVariable(name: "P", arg: 6, scope: !4948, file: !581, line: 1086, type: !200)
!4971 = !DILocation(line: 1086, column: 93, scope: !4948)
!4972 = !DILocalVariable(name: "max", scope: !4948, file: !581, line: 1088, type: !1635)
!4973 = !DILocation(line: 1088, column: 15, scope: !4948)
!4974 = !DILocation(line: 1088, column: 21, scope: !4948)
!4975 = !DILocation(line: 1088, column: 24, scope: !4948)
!4976 = !DILocation(line: 1088, column: 29, scope: !4948)
!4977 = !DILocalVariable(name: "o", scope: !4948, file: !581, line: 1089, type: !4180)
!4978 = !DILocation(line: 1089, column: 17, scope: !4948)
!4979 = !DILocation(line: 1089, column: 21, scope: !4948)
!4980 = !DILocation(line: 1089, column: 24, scope: !4948)
!4981 = !DILocalVariable(name: "m", scope: !4948, file: !581, line: 1090, type: !1635)
!4982 = !DILocation(line: 1090, column: 15, scope: !4948)
!4983 = !DILocation(line: 1090, column: 19, scope: !4948)
!4984 = !DILocation(line: 1090, column: 22, scope: !4948)
!4985 = !DILocalVariable(name: "i", scope: !4948, file: !581, line: 1091, type: !200)
!4986 = !DILocation(line: 1091, column: 9, scope: !4948)
!4987 = !DILocation(line: 1093, column: 12, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4948, file: !581, line: 1093, column: 5)
!4989 = !DILocation(line: 1093, column: 10, scope: !4988)
!4990 = !DILocation(line: 1093, column: 17, scope: !4991)
!4991 = !DILexicalBlockFile(scope: !4992, file: !581, discriminator: 1)
!4992 = distinct !DILexicalBlock(scope: !4988, file: !581, line: 1093, column: 5)
!4993 = !DILocation(line: 1093, column: 19, scope: !4991)
!4994 = !DILocation(line: 1093, column: 5, scope: !4991)
!4995 = !DILocalVariable(name: "x", scope: !4996, file: !581, line: 1094, type: !200)
!4996 = distinct !DILexicalBlock(scope: !4992, file: !581, line: 1093, column: 30)
!4997 = !DILocation(line: 1094, column: 13, scope: !4996)
!4998 = !DILocation(line: 1094, column: 33, scope: !4996)
!4999 = !DILocation(line: 1094, column: 17, scope: !4996)
!5000 = !DILocation(line: 1094, column: 30, scope: !4996)
!5001 = !DILocation(line: 1094, column: 27, scope: !4996)
!5002 = !DILocalVariable(name: "y", scope: !4996, file: !581, line: 1095, type: !200)
!5003 = !DILocation(line: 1095, column: 13, scope: !4996)
!5004 = !DILocation(line: 1095, column: 33, scope: !4996)
!5005 = !DILocation(line: 1095, column: 17, scope: !4996)
!5006 = !DILocation(line: 1095, column: 30, scope: !4996)
!5007 = !DILocation(line: 1095, column: 27, scope: !4996)
!5008 = !DILocation(line: 1097, column: 34, scope: !4996)
!5009 = !DILocation(line: 1097, column: 39, scope: !4996)
!5010 = !DILocation(line: 1097, column: 49, scope: !4996)
!5011 = !DILocation(line: 1097, column: 53, scope: !4996)
!5012 = !DILocation(line: 1097, column: 58, scope: !4996)
!5013 = !DILocation(line: 1097, column: 51, scope: !4996)
!5014 = !DILocation(line: 1097, column: 47, scope: !4996)
!5015 = !DILocation(line: 1097, column: 72, scope: !4996)
!5016 = !DILocation(line: 1097, column: 74, scope: !4996)
!5017 = !DILocation(line: 1097, column: 70, scope: !4996)
!5018 = !DILocation(line: 1097, column: 21, scope: !4996)
!5019 = !DILocation(line: 1097, column: 80, scope: !4996)
!5020 = !DILocation(line: 1097, column: 85, scope: !4996)
!5021 = !DILocation(line: 1097, column: 97, scope: !4996)
!5022 = !DILocation(line: 1097, column: 108, scope: !4996)
!5023 = !DILocation(line: 1097, column: 106, scope: !4996)
!5024 = !DILocation(line: 1097, column: 111, scope: !4996)
!5025 = !DILocation(line: 1097, column: 9, scope: !4996)
!5026 = !DILocation(line: 1098, column: 34, scope: !4996)
!5027 = !DILocation(line: 1098, column: 39, scope: !4996)
!5028 = !DILocation(line: 1098, column: 49, scope: !4996)
!5029 = !DILocation(line: 1098, column: 53, scope: !4996)
!5030 = !DILocation(line: 1098, column: 58, scope: !4996)
!5031 = !DILocation(line: 1098, column: 51, scope: !4996)
!5032 = !DILocation(line: 1098, column: 47, scope: !4996)
!5033 = !DILocation(line: 1098, column: 72, scope: !4996)
!5034 = !DILocation(line: 1098, column: 74, scope: !4996)
!5035 = !DILocation(line: 1098, column: 70, scope: !4996)
!5036 = !DILocation(line: 1098, column: 21, scope: !4996)
!5037 = !DILocation(line: 1098, column: 80, scope: !4996)
!5038 = !DILocation(line: 1098, column: 85, scope: !4996)
!5039 = !DILocation(line: 1098, column: 97, scope: !4996)
!5040 = !DILocation(line: 1098, column: 105, scope: !4996)
!5041 = !DILocation(line: 1098, column: 9, scope: !4996)
!5042 = !DILocation(line: 1099, column: 34, scope: !4996)
!5043 = !DILocation(line: 1099, column: 39, scope: !4996)
!5044 = !DILocation(line: 1099, column: 49, scope: !4996)
!5045 = !DILocation(line: 1099, column: 53, scope: !4996)
!5046 = !DILocation(line: 1099, column: 58, scope: !4996)
!5047 = !DILocation(line: 1099, column: 51, scope: !4996)
!5048 = !DILocation(line: 1099, column: 47, scope: !4996)
!5049 = !DILocation(line: 1099, column: 72, scope: !4996)
!5050 = !DILocation(line: 1099, column: 74, scope: !4996)
!5051 = !DILocation(line: 1099, column: 70, scope: !4996)
!5052 = !DILocation(line: 1099, column: 21, scope: !4996)
!5053 = !DILocation(line: 1099, column: 80, scope: !4996)
!5054 = !DILocation(line: 1099, column: 85, scope: !4996)
!5055 = !DILocation(line: 1099, column: 97, scope: !4996)
!5056 = !DILocation(line: 1099, column: 105, scope: !4996)
!5057 = !DILocation(line: 1099, column: 9, scope: !4996)
!5058 = !DILocation(line: 1100, column: 13, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !4996, file: !581, line: 1100, column: 13)
!5060 = !DILocation(line: 1100, column: 18, scope: !5059)
!5061 = !DILocation(line: 1100, column: 13, scope: !4996)
!5062 = !DILocation(line: 1101, column: 38, scope: !5059)
!5063 = !DILocation(line: 1101, column: 43, scope: !5059)
!5064 = !DILocation(line: 1101, column: 53, scope: !5059)
!5065 = !DILocation(line: 1101, column: 57, scope: !5059)
!5066 = !DILocation(line: 1101, column: 62, scope: !5059)
!5067 = !DILocation(line: 1101, column: 55, scope: !5059)
!5068 = !DILocation(line: 1101, column: 51, scope: !5059)
!5069 = !DILocation(line: 1101, column: 76, scope: !5059)
!5070 = !DILocation(line: 1101, column: 78, scope: !5059)
!5071 = !DILocation(line: 1101, column: 74, scope: !5059)
!5072 = !DILocation(line: 1101, column: 25, scope: !5059)
!5073 = !DILocation(line: 1101, column: 84, scope: !5059)
!5074 = !DILocation(line: 1101, column: 89, scope: !5059)
!5075 = !DILocation(line: 1101, column: 101, scope: !5059)
!5076 = !DILocation(line: 1101, column: 106, scope: !5059)
!5077 = !DILocation(line: 1101, column: 111, scope: !5059)
!5078 = !DILocation(line: 1101, column: 13, scope: !5059)
!5079 = !DILocation(line: 1102, column: 5, scope: !4996)
!5080 = !DILocation(line: 1093, column: 26, scope: !5081)
!5081 = !DILexicalBlockFile(scope: !4992, file: !581, discriminator: 2)
!5082 = !DILocation(line: 1093, column: 5, scope: !5081)
!5083 = distinct !{!5083, !5084}
!5084 = !DILocation(line: 1093, column: 5, scope: !4948)
!5085 = !DILocation(line: 1104, column: 9, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !4948, file: !581, line: 1104, column: 9)
!5087 = !DILocation(line: 1104, column: 12, scope: !5086)
!5088 = !DILocation(line: 1104, column: 18, scope: !5086)
!5089 = !DILocation(line: 1104, column: 9, scope: !4948)
!5090 = !DILocalVariable(name: "x", scope: !5091, file: !581, line: 1105, type: !200)
!5091 = distinct !DILexicalBlock(scope: !5086, file: !581, line: 1104, column: 23)
!5092 = !DILocation(line: 1105, column: 13, scope: !5091)
!5093 = !DILocation(line: 1105, column: 34, scope: !5091)
!5094 = !DILocation(line: 1105, column: 17, scope: !5091)
!5095 = !DILocation(line: 1105, column: 27, scope: !5091)
!5096 = !DILocalVariable(name: "y", scope: !5091, file: !581, line: 1106, type: !200)
!5097 = !DILocation(line: 1106, column: 13, scope: !5091)
!5098 = !DILocation(line: 1106, column: 34, scope: !5091)
!5099 = !DILocation(line: 1106, column: 17, scope: !5091)
!5100 = !DILocation(line: 1106, column: 27, scope: !5091)
!5101 = !DILocation(line: 1108, column: 34, scope: !5091)
!5102 = !DILocation(line: 1108, column: 39, scope: !5091)
!5103 = !DILocation(line: 1108, column: 49, scope: !5091)
!5104 = !DILocation(line: 1108, column: 53, scope: !5091)
!5105 = !DILocation(line: 1108, column: 58, scope: !5091)
!5106 = !DILocation(line: 1108, column: 51, scope: !5091)
!5107 = !DILocation(line: 1108, column: 47, scope: !5091)
!5108 = !DILocation(line: 1108, column: 72, scope: !5091)
!5109 = !DILocation(line: 1108, column: 74, scope: !5091)
!5110 = !DILocation(line: 1108, column: 70, scope: !5091)
!5111 = !DILocation(line: 1108, column: 21, scope: !5091)
!5112 = !DILocation(line: 1108, column: 80, scope: !5091)
!5113 = !DILocation(line: 1108, column: 85, scope: !5091)
!5114 = !DILocation(line: 1108, column: 97, scope: !5091)
!5115 = !DILocation(line: 1108, column: 108, scope: !5091)
!5116 = !DILocation(line: 1108, column: 106, scope: !5091)
!5117 = !DILocation(line: 1108, column: 111, scope: !5091)
!5118 = !DILocation(line: 1108, column: 9, scope: !5091)
!5119 = !DILocation(line: 1109, column: 34, scope: !5091)
!5120 = !DILocation(line: 1109, column: 39, scope: !5091)
!5121 = !DILocation(line: 1109, column: 49, scope: !5091)
!5122 = !DILocation(line: 1109, column: 53, scope: !5091)
!5123 = !DILocation(line: 1109, column: 58, scope: !5091)
!5124 = !DILocation(line: 1109, column: 51, scope: !5091)
!5125 = !DILocation(line: 1109, column: 47, scope: !5091)
!5126 = !DILocation(line: 1109, column: 72, scope: !5091)
!5127 = !DILocation(line: 1109, column: 74, scope: !5091)
!5128 = !DILocation(line: 1109, column: 70, scope: !5091)
!5129 = !DILocation(line: 1109, column: 21, scope: !5091)
!5130 = !DILocation(line: 1109, column: 80, scope: !5091)
!5131 = !DILocation(line: 1109, column: 85, scope: !5091)
!5132 = !DILocation(line: 1109, column: 97, scope: !5091)
!5133 = !DILocation(line: 1109, column: 105, scope: !5091)
!5134 = !DILocation(line: 1109, column: 9, scope: !5091)
!5135 = !DILocation(line: 1110, column: 34, scope: !5091)
!5136 = !DILocation(line: 1110, column: 39, scope: !5091)
!5137 = !DILocation(line: 1110, column: 49, scope: !5091)
!5138 = !DILocation(line: 1110, column: 53, scope: !5091)
!5139 = !DILocation(line: 1110, column: 58, scope: !5091)
!5140 = !DILocation(line: 1110, column: 51, scope: !5091)
!5141 = !DILocation(line: 1110, column: 47, scope: !5091)
!5142 = !DILocation(line: 1110, column: 72, scope: !5091)
!5143 = !DILocation(line: 1110, column: 74, scope: !5091)
!5144 = !DILocation(line: 1110, column: 70, scope: !5091)
!5145 = !DILocation(line: 1110, column: 21, scope: !5091)
!5146 = !DILocation(line: 1110, column: 80, scope: !5091)
!5147 = !DILocation(line: 1110, column: 85, scope: !5091)
!5148 = !DILocation(line: 1110, column: 97, scope: !5091)
!5149 = !DILocation(line: 1110, column: 105, scope: !5091)
!5150 = !DILocation(line: 1110, column: 9, scope: !5091)
!5151 = !DILocation(line: 1111, column: 13, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5091, file: !581, line: 1111, column: 13)
!5153 = !DILocation(line: 1111, column: 18, scope: !5152)
!5154 = !DILocation(line: 1111, column: 13, scope: !5091)
!5155 = !DILocation(line: 1112, column: 38, scope: !5152)
!5156 = !DILocation(line: 1112, column: 43, scope: !5152)
!5157 = !DILocation(line: 1112, column: 53, scope: !5152)
!5158 = !DILocation(line: 1112, column: 57, scope: !5152)
!5159 = !DILocation(line: 1112, column: 62, scope: !5152)
!5160 = !DILocation(line: 1112, column: 55, scope: !5152)
!5161 = !DILocation(line: 1112, column: 51, scope: !5152)
!5162 = !DILocation(line: 1112, column: 76, scope: !5152)
!5163 = !DILocation(line: 1112, column: 78, scope: !5152)
!5164 = !DILocation(line: 1112, column: 74, scope: !5152)
!5165 = !DILocation(line: 1112, column: 25, scope: !5152)
!5166 = !DILocation(line: 1112, column: 84, scope: !5152)
!5167 = !DILocation(line: 1112, column: 89, scope: !5152)
!5168 = !DILocation(line: 1112, column: 101, scope: !5152)
!5169 = !DILocation(line: 1112, column: 106, scope: !5152)
!5170 = !DILocation(line: 1112, column: 111, scope: !5152)
!5171 = !DILocation(line: 1112, column: 13, scope: !5152)
!5172 = !DILocation(line: 1113, column: 5, scope: !5091)
!5173 = !DILocation(line: 1115, column: 9, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !4948, file: !581, line: 1115, column: 9)
!5175 = !DILocation(line: 1115, column: 12, scope: !5174)
!5176 = !DILocation(line: 1115, column: 18, scope: !5174)
!5177 = !DILocation(line: 1115, column: 9, scope: !4948)
!5178 = !DILocalVariable(name: "x", scope: !5179, file: !581, line: 1116, type: !200)
!5179 = distinct !DILexicalBlock(scope: !5174, file: !581, line: 1115, column: 23)
!5180 = !DILocation(line: 1116, column: 13, scope: !5179)
!5181 = !DILocation(line: 1116, column: 34, scope: !5179)
!5182 = !DILocation(line: 1116, column: 17, scope: !5179)
!5183 = !DILocation(line: 1116, column: 27, scope: !5179)
!5184 = !DILocalVariable(name: "y", scope: !5179, file: !581, line: 1117, type: !200)
!5185 = !DILocation(line: 1117, column: 13, scope: !5179)
!5186 = !DILocation(line: 1117, column: 34, scope: !5179)
!5187 = !DILocation(line: 1117, column: 17, scope: !5179)
!5188 = !DILocation(line: 1117, column: 27, scope: !5179)
!5189 = !DILocation(line: 1119, column: 34, scope: !5179)
!5190 = !DILocation(line: 1119, column: 39, scope: !5179)
!5191 = !DILocation(line: 1119, column: 49, scope: !5179)
!5192 = !DILocation(line: 1119, column: 53, scope: !5179)
!5193 = !DILocation(line: 1119, column: 58, scope: !5179)
!5194 = !DILocation(line: 1119, column: 51, scope: !5179)
!5195 = !DILocation(line: 1119, column: 47, scope: !5179)
!5196 = !DILocation(line: 1119, column: 72, scope: !5179)
!5197 = !DILocation(line: 1119, column: 74, scope: !5179)
!5198 = !DILocation(line: 1119, column: 70, scope: !5179)
!5199 = !DILocation(line: 1119, column: 21, scope: !5179)
!5200 = !DILocation(line: 1119, column: 80, scope: !5179)
!5201 = !DILocation(line: 1119, column: 85, scope: !5179)
!5202 = !DILocation(line: 1119, column: 97, scope: !5179)
!5203 = !DILocation(line: 1119, column: 108, scope: !5179)
!5204 = !DILocation(line: 1119, column: 106, scope: !5179)
!5205 = !DILocation(line: 1119, column: 111, scope: !5179)
!5206 = !DILocation(line: 1119, column: 9, scope: !5179)
!5207 = !DILocation(line: 1120, column: 34, scope: !5179)
!5208 = !DILocation(line: 1120, column: 39, scope: !5179)
!5209 = !DILocation(line: 1120, column: 49, scope: !5179)
!5210 = !DILocation(line: 1120, column: 53, scope: !5179)
!5211 = !DILocation(line: 1120, column: 58, scope: !5179)
!5212 = !DILocation(line: 1120, column: 51, scope: !5179)
!5213 = !DILocation(line: 1120, column: 47, scope: !5179)
!5214 = !DILocation(line: 1120, column: 72, scope: !5179)
!5215 = !DILocation(line: 1120, column: 74, scope: !5179)
!5216 = !DILocation(line: 1120, column: 70, scope: !5179)
!5217 = !DILocation(line: 1120, column: 21, scope: !5179)
!5218 = !DILocation(line: 1120, column: 80, scope: !5179)
!5219 = !DILocation(line: 1120, column: 85, scope: !5179)
!5220 = !DILocation(line: 1120, column: 97, scope: !5179)
!5221 = !DILocation(line: 1120, column: 105, scope: !5179)
!5222 = !DILocation(line: 1120, column: 9, scope: !5179)
!5223 = !DILocation(line: 1121, column: 34, scope: !5179)
!5224 = !DILocation(line: 1121, column: 39, scope: !5179)
!5225 = !DILocation(line: 1121, column: 49, scope: !5179)
!5226 = !DILocation(line: 1121, column: 53, scope: !5179)
!5227 = !DILocation(line: 1121, column: 58, scope: !5179)
!5228 = !DILocation(line: 1121, column: 51, scope: !5179)
!5229 = !DILocation(line: 1121, column: 47, scope: !5179)
!5230 = !DILocation(line: 1121, column: 72, scope: !5179)
!5231 = !DILocation(line: 1121, column: 74, scope: !5179)
!5232 = !DILocation(line: 1121, column: 70, scope: !5179)
!5233 = !DILocation(line: 1121, column: 21, scope: !5179)
!5234 = !DILocation(line: 1121, column: 80, scope: !5179)
!5235 = !DILocation(line: 1121, column: 85, scope: !5179)
!5236 = !DILocation(line: 1121, column: 97, scope: !5179)
!5237 = !DILocation(line: 1121, column: 105, scope: !5179)
!5238 = !DILocation(line: 1121, column: 9, scope: !5179)
!5239 = !DILocation(line: 1122, column: 13, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5179, file: !581, line: 1122, column: 13)
!5241 = !DILocation(line: 1122, column: 18, scope: !5240)
!5242 = !DILocation(line: 1122, column: 13, scope: !5179)
!5243 = !DILocation(line: 1123, column: 38, scope: !5240)
!5244 = !DILocation(line: 1123, column: 43, scope: !5240)
!5245 = !DILocation(line: 1123, column: 53, scope: !5240)
!5246 = !DILocation(line: 1123, column: 57, scope: !5240)
!5247 = !DILocation(line: 1123, column: 62, scope: !5240)
!5248 = !DILocation(line: 1123, column: 55, scope: !5240)
!5249 = !DILocation(line: 1123, column: 51, scope: !5240)
!5250 = !DILocation(line: 1123, column: 76, scope: !5240)
!5251 = !DILocation(line: 1123, column: 78, scope: !5240)
!5252 = !DILocation(line: 1123, column: 74, scope: !5240)
!5253 = !DILocation(line: 1123, column: 25, scope: !5240)
!5254 = !DILocation(line: 1123, column: 84, scope: !5240)
!5255 = !DILocation(line: 1123, column: 89, scope: !5240)
!5256 = !DILocation(line: 1123, column: 101, scope: !5240)
!5257 = !DILocation(line: 1123, column: 106, scope: !5240)
!5258 = !DILocation(line: 1123, column: 111, scope: !5240)
!5259 = !DILocation(line: 1123, column: 13, scope: !5240)
!5260 = !DILocation(line: 1124, column: 5, scope: !5179)
!5261 = !DILocation(line: 1126, column: 12, scope: !4953)
!5262 = !DILocation(line: 1126, column: 10, scope: !4953)
!5263 = !DILocation(line: 1126, column: 17, scope: !5264)
!5264 = !DILexicalBlockFile(scope: !4952, file: !581, discriminator: 1)
!5265 = !DILocation(line: 1126, column: 19, scope: !5264)
!5266 = !DILocation(line: 1126, column: 23, scope: !5264)
!5267 = !DILocation(line: 1126, column: 26, scope: !5268)
!5268 = !DILexicalBlockFile(scope: !4952, file: !581, discriminator: 2)
!5269 = !DILocation(line: 1126, column: 29, scope: !5268)
!5270 = !DILocation(line: 1126, column: 35, scope: !5268)
!5271 = !DILocation(line: 1126, column: 23, scope: !5268)
!5272 = !DILocation(line: 1126, column: 5, scope: !5273)
!5273 = !DILexicalBlockFile(scope: !4953, file: !581, discriminator: 3)
!5274 = !DILocalVariable(name: "color", scope: !4951, file: !581, line: 1127, type: !5275)
!5275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !797, size: 64, align: 16, elements: !828)
!5276 = !DILocation(line: 1127, column: 24, scope: !4951)
!5277 = !DILocation(line: 1127, column: 35, scope: !4951)
!5278 = !DILocation(line: 1127, column: 43, scope: !4951)
!5279 = !DILocation(line: 1127, column: 41, scope: !4951)
!5280 = !DILocation(line: 1127, column: 37, scope: !4951)
!5281 = !DILocation(line: 1127, column: 52, scope: !4951)
!5282 = !DILocalVariable(name: "x", scope: !4951, file: !581, line: 1128, type: !200)
!5283 = !DILocation(line: 1128, column: 13, scope: !4951)
!5284 = !DILocation(line: 1128, column: 33, scope: !4951)
!5285 = !DILocation(line: 1128, column: 17, scope: !4951)
!5286 = !DILocation(line: 1128, column: 30, scope: !4951)
!5287 = !DILocation(line: 1128, column: 27, scope: !4951)
!5288 = !DILocalVariable(name: "y", scope: !4951, file: !581, line: 1129, type: !200)
!5289 = !DILocation(line: 1129, column: 13, scope: !4951)
!5290 = !DILocation(line: 1129, column: 33, scope: !4951)
!5291 = !DILocation(line: 1129, column: 17, scope: !4951)
!5292 = !DILocation(line: 1129, column: 30, scope: !4951)
!5293 = !DILocation(line: 1129, column: 27, scope: !4951)
!5294 = !DILocation(line: 1131, column: 13, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !4951, file: !581, line: 1131, column: 13)
!5296 = !DILocation(line: 1131, column: 17, scope: !5295)
!5297 = !DILocation(line: 1131, column: 21, scope: !5295)
!5298 = !DILocation(line: 1131, column: 15, scope: !5295)
!5299 = !DILocation(line: 1131, column: 13, scope: !4951)
!5300 = !DILocation(line: 1132, column: 15, scope: !5295)
!5301 = !DILocation(line: 1132, column: 13, scope: !5295)
!5302 = !DILocation(line: 1134, column: 15, scope: !5295)
!5303 = !DILocation(line: 1135, column: 13, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !4951, file: !581, line: 1135, column: 13)
!5305 = !DILocation(line: 1135, column: 17, scope: !5304)
!5306 = !DILocation(line: 1135, column: 21, scope: !5304)
!5307 = !DILocation(line: 1135, column: 15, scope: !5304)
!5308 = !DILocation(line: 1135, column: 13, scope: !4951)
!5309 = !DILocation(line: 1136, column: 15, scope: !5304)
!5310 = !DILocation(line: 1136, column: 13, scope: !5304)
!5311 = !DILocation(line: 1138, column: 15, scope: !5304)
!5312 = !DILocation(line: 1140, column: 23, scope: !4951)
!5313 = !DILocation(line: 1140, column: 29, scope: !4951)
!5314 = !DILocation(line: 1140, column: 34, scope: !4951)
!5315 = !DILocation(line: 1140, column: 40, scope: !4951)
!5316 = !DILocation(line: 1140, column: 13, scope: !4951)
!5317 = !DILocation(line: 132, column: 9, scope: !4460, inlinedAt: !4957)
!5318 = !DILocation(line: 132, column: 13, scope: !4460, inlinedAt: !4957)
!5319 = !DILocation(line: 132, column: 11, scope: !4460, inlinedAt: !4957)
!5320 = !DILocation(line: 132, column: 9, scope: !4150, inlinedAt: !4957)
!5321 = !DILocation(line: 132, column: 26, scope: !4465, inlinedAt: !4957)
!5322 = !DILocation(line: 132, column: 19, scope: !4465, inlinedAt: !4957)
!5323 = !DILocation(line: 133, column: 14, scope: !4468, inlinedAt: !4957)
!5324 = !DILocation(line: 133, column: 18, scope: !4468, inlinedAt: !4957)
!5325 = !DILocation(line: 133, column: 16, scope: !4468, inlinedAt: !4957)
!5326 = !DILocation(line: 133, column: 14, scope: !4460, inlinedAt: !4957)
!5327 = !DILocation(line: 133, column: 31, scope: !4473, inlinedAt: !4957)
!5328 = !DILocation(line: 133, column: 24, scope: !4473, inlinedAt: !4957)
!5329 = !DILocation(line: 134, column: 17, scope: !4468, inlinedAt: !4957)
!5330 = !DILocation(line: 134, column: 10, scope: !4468, inlinedAt: !4957)
!5331 = !DILocation(line: 135, column: 1, scope: !4150, inlinedAt: !4957)
!5332 = !DILocation(line: 1140, column: 11, scope: !4951)
!5333 = !DILocation(line: 1141, column: 23, scope: !4951)
!5334 = !DILocation(line: 1141, column: 29, scope: !4951)
!5335 = !DILocation(line: 1141, column: 34, scope: !4951)
!5336 = !DILocation(line: 1141, column: 41, scope: !4951)
!5337 = !DILocation(line: 1141, column: 13, scope: !4951)
!5338 = !DILocation(line: 132, column: 9, scope: !4460, inlinedAt: !4950)
!5339 = !DILocation(line: 132, column: 13, scope: !4460, inlinedAt: !4950)
!5340 = !DILocation(line: 132, column: 11, scope: !4460, inlinedAt: !4950)
!5341 = !DILocation(line: 132, column: 9, scope: !4150, inlinedAt: !4950)
!5342 = !DILocation(line: 132, column: 26, scope: !4465, inlinedAt: !4950)
!5343 = !DILocation(line: 132, column: 19, scope: !4465, inlinedAt: !4950)
!5344 = !DILocation(line: 133, column: 14, scope: !4468, inlinedAt: !4950)
!5345 = !DILocation(line: 133, column: 18, scope: !4468, inlinedAt: !4950)
!5346 = !DILocation(line: 133, column: 16, scope: !4468, inlinedAt: !4950)
!5347 = !DILocation(line: 133, column: 14, scope: !4460, inlinedAt: !4950)
!5348 = !DILocation(line: 133, column: 31, scope: !4473, inlinedAt: !4950)
!5349 = !DILocation(line: 133, column: 24, scope: !4473, inlinedAt: !4950)
!5350 = !DILocation(line: 134, column: 17, scope: !4468, inlinedAt: !4950)
!5351 = !DILocation(line: 134, column: 10, scope: !4468, inlinedAt: !4950)
!5352 = !DILocation(line: 135, column: 1, scope: !4150, inlinedAt: !4950)
!5353 = !DILocation(line: 1141, column: 11, scope: !4951)
!5354 = !DILocation(line: 1142, column: 22, scope: !4951)
!5355 = !DILocation(line: 1142, column: 27, scope: !4951)
!5356 = !DILocation(line: 1142, column: 30, scope: !4951)
!5357 = !DILocation(line: 1142, column: 33, scope: !4951)
!5358 = !DILocation(line: 1142, column: 41, scope: !4951)
!5359 = !DILocation(line: 1142, column: 39, scope: !4951)
!5360 = !DILocation(line: 1142, column: 36, scope: !4951)
!5361 = !DILocation(line: 1142, column: 59, scope: !4951)
!5362 = !DILocation(line: 1142, column: 44, scope: !4951)
!5363 = !DILocation(line: 1142, column: 63, scope: !4951)
!5364 = !DILocation(line: 1142, column: 9, scope: !4951)
!5365 = !DILocation(line: 1143, column: 5, scope: !4951)
!5366 = !DILocation(line: 1126, column: 41, scope: !5367)
!5367 = !DILexicalBlockFile(scope: !4952, file: !581, discriminator: 4)
!5368 = !DILocation(line: 1126, column: 5, scope: !5367)
!5369 = distinct !{!5369, !5370}
!5370 = !DILocation(line: 1126, column: 5, scope: !4948)
!5371 = !DILocation(line: 1144, column: 1, scope: !4948)
!5372 = distinct !DISubprogram(name: "color_graticule16", scope: !581, file: !581, line: 952, type: !815, isLocal: true, isDefinition: true, scopeLine: 953, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!5373 = !DILocation(line: 127, column: 87, scope: !4150, inlinedAt: !5374)
!5374 = distinct !DILocation(line: 1015, column: 13, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5376, file: !581, line: 994, column: 45)
!5376 = distinct !DILexicalBlock(scope: !5377, file: !581, line: 994, column: 5)
!5377 = distinct !DILexicalBlock(scope: !5372, file: !581, line: 994, column: 5)
!5378 = !DILocation(line: 127, column: 94, scope: !4150, inlinedAt: !5374)
!5379 = !DILocation(line: 127, column: 104, scope: !4150, inlinedAt: !5374)
!5380 = !DILocation(line: 127, column: 87, scope: !4150, inlinedAt: !5381)
!5381 = distinct !DILocation(line: 1014, column: 13, scope: !5375)
!5382 = !DILocation(line: 127, column: 94, scope: !4150, inlinedAt: !5381)
!5383 = !DILocation(line: 127, column: 104, scope: !4150, inlinedAt: !5381)
!5384 = !DILocalVariable(name: "s", arg: 1, scope: !5372, file: !581, line: 952, type: !817)
!5385 = !DILocation(line: 952, column: 51, scope: !5372)
!5386 = !DILocalVariable(name: "out", arg: 2, scope: !5372, file: !581, line: 952, type: !285)
!5387 = !DILocation(line: 952, column: 63, scope: !5372)
!5388 = !DILocalVariable(name: "X", arg: 3, scope: !5372, file: !581, line: 952, type: !200)
!5389 = !DILocation(line: 952, column: 72, scope: !5372)
!5390 = !DILocalVariable(name: "Y", arg: 4, scope: !5372, file: !581, line: 952, type: !200)
!5391 = !DILocation(line: 952, column: 79, scope: !5372)
!5392 = !DILocalVariable(name: "D", arg: 5, scope: !5372, file: !581, line: 952, type: !200)
!5393 = !DILocation(line: 952, column: 86, scope: !5372)
!5394 = !DILocalVariable(name: "P", arg: 6, scope: !5372, file: !581, line: 952, type: !200)
!5395 = !DILocation(line: 952, column: 93, scope: !5372)
!5396 = !DILocalVariable(name: "max", scope: !5372, file: !581, line: 954, type: !1635)
!5397 = !DILocation(line: 954, column: 15, scope: !5372)
!5398 = !DILocation(line: 954, column: 21, scope: !5372)
!5399 = !DILocation(line: 954, column: 24, scope: !5372)
!5400 = !DILocation(line: 954, column: 29, scope: !5372)
!5401 = !DILocalVariable(name: "o", scope: !5372, file: !581, line: 955, type: !4180)
!5402 = !DILocation(line: 955, column: 17, scope: !5372)
!5403 = !DILocation(line: 955, column: 21, scope: !5372)
!5404 = !DILocation(line: 955, column: 24, scope: !5372)
!5405 = !DILocalVariable(name: "i", scope: !5372, file: !581, line: 956, type: !200)
!5406 = !DILocation(line: 956, column: 9, scope: !5372)
!5407 = !DILocation(line: 958, column: 12, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5372, file: !581, line: 958, column: 5)
!5409 = !DILocation(line: 958, column: 10, scope: !5408)
!5410 = !DILocation(line: 958, column: 17, scope: !5411)
!5411 = !DILexicalBlockFile(scope: !5412, file: !581, discriminator: 1)
!5412 = distinct !DILexicalBlock(scope: !5408, file: !581, line: 958, column: 5)
!5413 = !DILocation(line: 958, column: 19, scope: !5411)
!5414 = !DILocation(line: 958, column: 5, scope: !5411)
!5415 = !DILocalVariable(name: "x", scope: !5416, file: !581, line: 959, type: !200)
!5416 = distinct !DILexicalBlock(scope: !5412, file: !581, line: 958, column: 30)
!5417 = !DILocation(line: 959, column: 13, scope: !5416)
!5418 = !DILocation(line: 959, column: 33, scope: !5416)
!5419 = !DILocation(line: 959, column: 17, scope: !5416)
!5420 = !DILocation(line: 959, column: 30, scope: !5416)
!5421 = !DILocation(line: 959, column: 27, scope: !5416)
!5422 = !DILocalVariable(name: "y", scope: !5416, file: !581, line: 960, type: !200)
!5423 = !DILocation(line: 960, column: 13, scope: !5416)
!5424 = !DILocation(line: 960, column: 33, scope: !5416)
!5425 = !DILocation(line: 960, column: 17, scope: !5416)
!5426 = !DILocation(line: 960, column: 30, scope: !5416)
!5427 = !DILocation(line: 960, column: 27, scope: !5416)
!5428 = !DILocalVariable(name: "d", scope: !5416, file: !581, line: 961, type: !200)
!5429 = !DILocation(line: 961, column: 13, scope: !5416)
!5430 = !DILocation(line: 961, column: 33, scope: !5416)
!5431 = !DILocation(line: 961, column: 17, scope: !5416)
!5432 = !DILocation(line: 961, column: 30, scope: !5416)
!5433 = !DILocation(line: 961, column: 27, scope: !5416)
!5434 = !DILocation(line: 963, column: 44, scope: !5416)
!5435 = !DILocation(line: 963, column: 34, scope: !5416)
!5436 = !DILocation(line: 963, column: 39, scope: !5416)
!5437 = !DILocation(line: 963, column: 49, scope: !5416)
!5438 = !DILocation(line: 963, column: 67, scope: !5416)
!5439 = !DILocation(line: 963, column: 53, scope: !5416)
!5440 = !DILocation(line: 963, column: 58, scope: !5416)
!5441 = !DILocation(line: 963, column: 51, scope: !5416)
!5442 = !DILocation(line: 963, column: 47, scope: !5416)
!5443 = !DILocation(line: 963, column: 72, scope: !5416)
!5444 = !DILocation(line: 963, column: 74, scope: !5416)
!5445 = !DILocation(line: 963, column: 70, scope: !5416)
!5446 = !DILocation(line: 963, column: 21, scope: !5416)
!5447 = !DILocation(line: 963, column: 94, scope: !5416)
!5448 = !DILocation(line: 963, column: 80, scope: !5416)
!5449 = !DILocation(line: 963, column: 85, scope: !5416)
!5450 = !DILocation(line: 963, column: 97, scope: !5416)
!5451 = !DILocation(line: 963, column: 102, scope: !5416)
!5452 = !DILocation(line: 963, column: 105, scope: !5416)
!5453 = !DILocation(line: 963, column: 9, scope: !5416)
!5454 = !DILocation(line: 964, column: 44, scope: !5416)
!5455 = !DILocation(line: 964, column: 34, scope: !5416)
!5456 = !DILocation(line: 964, column: 39, scope: !5416)
!5457 = !DILocation(line: 964, column: 49, scope: !5416)
!5458 = !DILocation(line: 964, column: 67, scope: !5416)
!5459 = !DILocation(line: 964, column: 53, scope: !5416)
!5460 = !DILocation(line: 964, column: 58, scope: !5416)
!5461 = !DILocation(line: 964, column: 51, scope: !5416)
!5462 = !DILocation(line: 964, column: 47, scope: !5416)
!5463 = !DILocation(line: 964, column: 72, scope: !5416)
!5464 = !DILocation(line: 964, column: 74, scope: !5416)
!5465 = !DILocation(line: 964, column: 70, scope: !5416)
!5466 = !DILocation(line: 964, column: 21, scope: !5416)
!5467 = !DILocation(line: 964, column: 94, scope: !5416)
!5468 = !DILocation(line: 964, column: 80, scope: !5416)
!5469 = !DILocation(line: 964, column: 85, scope: !5416)
!5470 = !DILocation(line: 964, column: 97, scope: !5416)
!5471 = !DILocation(line: 964, column: 102, scope: !5416)
!5472 = !DILocation(line: 964, column: 105, scope: !5416)
!5473 = !DILocation(line: 964, column: 9, scope: !5416)
!5474 = !DILocation(line: 965, column: 44, scope: !5416)
!5475 = !DILocation(line: 965, column: 34, scope: !5416)
!5476 = !DILocation(line: 965, column: 39, scope: !5416)
!5477 = !DILocation(line: 965, column: 49, scope: !5416)
!5478 = !DILocation(line: 965, column: 67, scope: !5416)
!5479 = !DILocation(line: 965, column: 53, scope: !5416)
!5480 = !DILocation(line: 965, column: 58, scope: !5416)
!5481 = !DILocation(line: 965, column: 51, scope: !5416)
!5482 = !DILocation(line: 965, column: 47, scope: !5416)
!5483 = !DILocation(line: 965, column: 72, scope: !5416)
!5484 = !DILocation(line: 965, column: 74, scope: !5416)
!5485 = !DILocation(line: 965, column: 70, scope: !5416)
!5486 = !DILocation(line: 965, column: 21, scope: !5416)
!5487 = !DILocation(line: 965, column: 94, scope: !5416)
!5488 = !DILocation(line: 965, column: 80, scope: !5416)
!5489 = !DILocation(line: 965, column: 85, scope: !5416)
!5490 = !DILocation(line: 965, column: 97, scope: !5416)
!5491 = !DILocation(line: 965, column: 102, scope: !5416)
!5492 = !DILocation(line: 965, column: 105, scope: !5416)
!5493 = !DILocation(line: 965, column: 9, scope: !5416)
!5494 = !DILocation(line: 966, column: 13, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5416, file: !581, line: 966, column: 13)
!5496 = !DILocation(line: 966, column: 18, scope: !5495)
!5497 = !DILocation(line: 966, column: 13, scope: !5416)
!5498 = !DILocation(line: 967, column: 38, scope: !5495)
!5499 = !DILocation(line: 967, column: 43, scope: !5495)
!5500 = !DILocation(line: 967, column: 53, scope: !5495)
!5501 = !DILocation(line: 967, column: 57, scope: !5495)
!5502 = !DILocation(line: 967, column: 62, scope: !5495)
!5503 = !DILocation(line: 967, column: 55, scope: !5495)
!5504 = !DILocation(line: 967, column: 51, scope: !5495)
!5505 = !DILocation(line: 967, column: 76, scope: !5495)
!5506 = !DILocation(line: 967, column: 78, scope: !5495)
!5507 = !DILocation(line: 967, column: 74, scope: !5495)
!5508 = !DILocation(line: 967, column: 25, scope: !5495)
!5509 = !DILocation(line: 967, column: 84, scope: !5495)
!5510 = !DILocation(line: 967, column: 89, scope: !5495)
!5511 = !DILocation(line: 967, column: 101, scope: !5495)
!5512 = !DILocation(line: 967, column: 106, scope: !5495)
!5513 = !DILocation(line: 967, column: 111, scope: !5495)
!5514 = !DILocation(line: 967, column: 13, scope: !5495)
!5515 = !DILocation(line: 968, column: 5, scope: !5416)
!5516 = !DILocation(line: 958, column: 26, scope: !5517)
!5517 = !DILexicalBlockFile(scope: !5412, file: !581, discriminator: 2)
!5518 = !DILocation(line: 958, column: 5, scope: !5517)
!5519 = distinct !{!5519, !5520}
!5520 = !DILocation(line: 958, column: 5, scope: !5372)
!5521 = !DILocation(line: 970, column: 9, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5372, file: !581, line: 970, column: 9)
!5523 = !DILocation(line: 970, column: 12, scope: !5522)
!5524 = !DILocation(line: 970, column: 18, scope: !5522)
!5525 = !DILocation(line: 970, column: 9, scope: !5372)
!5526 = !DILocalVariable(name: "x", scope: !5527, file: !581, line: 971, type: !200)
!5527 = distinct !DILexicalBlock(scope: !5522, file: !581, line: 970, column: 23)
!5528 = !DILocation(line: 971, column: 13, scope: !5527)
!5529 = !DILocation(line: 971, column: 34, scope: !5527)
!5530 = !DILocation(line: 971, column: 17, scope: !5527)
!5531 = !DILocation(line: 971, column: 27, scope: !5527)
!5532 = !DILocalVariable(name: "y", scope: !5527, file: !581, line: 972, type: !200)
!5533 = !DILocation(line: 972, column: 13, scope: !5527)
!5534 = !DILocation(line: 972, column: 34, scope: !5527)
!5535 = !DILocation(line: 972, column: 17, scope: !5527)
!5536 = !DILocation(line: 972, column: 27, scope: !5527)
!5537 = !DILocalVariable(name: "d", scope: !5527, file: !581, line: 973, type: !200)
!5538 = !DILocation(line: 973, column: 13, scope: !5527)
!5539 = !DILocation(line: 973, column: 34, scope: !5527)
!5540 = !DILocation(line: 973, column: 17, scope: !5527)
!5541 = !DILocation(line: 973, column: 27, scope: !5527)
!5542 = !DILocation(line: 975, column: 44, scope: !5527)
!5543 = !DILocation(line: 975, column: 34, scope: !5527)
!5544 = !DILocation(line: 975, column: 39, scope: !5527)
!5545 = !DILocation(line: 975, column: 49, scope: !5527)
!5546 = !DILocation(line: 975, column: 67, scope: !5527)
!5547 = !DILocation(line: 975, column: 53, scope: !5527)
!5548 = !DILocation(line: 975, column: 58, scope: !5527)
!5549 = !DILocation(line: 975, column: 51, scope: !5527)
!5550 = !DILocation(line: 975, column: 47, scope: !5527)
!5551 = !DILocation(line: 975, column: 72, scope: !5527)
!5552 = !DILocation(line: 975, column: 74, scope: !5527)
!5553 = !DILocation(line: 975, column: 70, scope: !5527)
!5554 = !DILocation(line: 975, column: 21, scope: !5527)
!5555 = !DILocation(line: 975, column: 94, scope: !5527)
!5556 = !DILocation(line: 975, column: 80, scope: !5527)
!5557 = !DILocation(line: 975, column: 85, scope: !5527)
!5558 = !DILocation(line: 975, column: 97, scope: !5527)
!5559 = !DILocation(line: 975, column: 102, scope: !5527)
!5560 = !DILocation(line: 975, column: 105, scope: !5527)
!5561 = !DILocation(line: 975, column: 9, scope: !5527)
!5562 = !DILocation(line: 976, column: 44, scope: !5527)
!5563 = !DILocation(line: 976, column: 34, scope: !5527)
!5564 = !DILocation(line: 976, column: 39, scope: !5527)
!5565 = !DILocation(line: 976, column: 49, scope: !5527)
!5566 = !DILocation(line: 976, column: 67, scope: !5527)
!5567 = !DILocation(line: 976, column: 53, scope: !5527)
!5568 = !DILocation(line: 976, column: 58, scope: !5527)
!5569 = !DILocation(line: 976, column: 51, scope: !5527)
!5570 = !DILocation(line: 976, column: 47, scope: !5527)
!5571 = !DILocation(line: 976, column: 72, scope: !5527)
!5572 = !DILocation(line: 976, column: 74, scope: !5527)
!5573 = !DILocation(line: 976, column: 70, scope: !5527)
!5574 = !DILocation(line: 976, column: 21, scope: !5527)
!5575 = !DILocation(line: 976, column: 94, scope: !5527)
!5576 = !DILocation(line: 976, column: 80, scope: !5527)
!5577 = !DILocation(line: 976, column: 85, scope: !5527)
!5578 = !DILocation(line: 976, column: 97, scope: !5527)
!5579 = !DILocation(line: 976, column: 102, scope: !5527)
!5580 = !DILocation(line: 976, column: 105, scope: !5527)
!5581 = !DILocation(line: 976, column: 9, scope: !5527)
!5582 = !DILocation(line: 977, column: 44, scope: !5527)
!5583 = !DILocation(line: 977, column: 34, scope: !5527)
!5584 = !DILocation(line: 977, column: 39, scope: !5527)
!5585 = !DILocation(line: 977, column: 49, scope: !5527)
!5586 = !DILocation(line: 977, column: 67, scope: !5527)
!5587 = !DILocation(line: 977, column: 53, scope: !5527)
!5588 = !DILocation(line: 977, column: 58, scope: !5527)
!5589 = !DILocation(line: 977, column: 51, scope: !5527)
!5590 = !DILocation(line: 977, column: 47, scope: !5527)
!5591 = !DILocation(line: 977, column: 72, scope: !5527)
!5592 = !DILocation(line: 977, column: 74, scope: !5527)
!5593 = !DILocation(line: 977, column: 70, scope: !5527)
!5594 = !DILocation(line: 977, column: 21, scope: !5527)
!5595 = !DILocation(line: 977, column: 94, scope: !5527)
!5596 = !DILocation(line: 977, column: 80, scope: !5527)
!5597 = !DILocation(line: 977, column: 85, scope: !5527)
!5598 = !DILocation(line: 977, column: 97, scope: !5527)
!5599 = !DILocation(line: 977, column: 102, scope: !5527)
!5600 = !DILocation(line: 977, column: 105, scope: !5527)
!5601 = !DILocation(line: 977, column: 9, scope: !5527)
!5602 = !DILocation(line: 978, column: 13, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5527, file: !581, line: 978, column: 13)
!5604 = !DILocation(line: 978, column: 18, scope: !5603)
!5605 = !DILocation(line: 978, column: 13, scope: !5527)
!5606 = !DILocation(line: 979, column: 38, scope: !5603)
!5607 = !DILocation(line: 979, column: 43, scope: !5603)
!5608 = !DILocation(line: 979, column: 53, scope: !5603)
!5609 = !DILocation(line: 979, column: 57, scope: !5603)
!5610 = !DILocation(line: 979, column: 62, scope: !5603)
!5611 = !DILocation(line: 979, column: 55, scope: !5603)
!5612 = !DILocation(line: 979, column: 51, scope: !5603)
!5613 = !DILocation(line: 979, column: 76, scope: !5603)
!5614 = !DILocation(line: 979, column: 78, scope: !5603)
!5615 = !DILocation(line: 979, column: 74, scope: !5603)
!5616 = !DILocation(line: 979, column: 25, scope: !5603)
!5617 = !DILocation(line: 979, column: 84, scope: !5603)
!5618 = !DILocation(line: 979, column: 89, scope: !5603)
!5619 = !DILocation(line: 979, column: 101, scope: !5603)
!5620 = !DILocation(line: 979, column: 106, scope: !5603)
!5621 = !DILocation(line: 979, column: 111, scope: !5603)
!5622 = !DILocation(line: 979, column: 13, scope: !5603)
!5623 = !DILocation(line: 980, column: 5, scope: !5527)
!5624 = !DILocation(line: 982, column: 9, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5372, file: !581, line: 982, column: 9)
!5626 = !DILocation(line: 982, column: 12, scope: !5625)
!5627 = !DILocation(line: 982, column: 18, scope: !5625)
!5628 = !DILocation(line: 982, column: 9, scope: !5372)
!5629 = !DILocalVariable(name: "x", scope: !5630, file: !581, line: 983, type: !200)
!5630 = distinct !DILexicalBlock(scope: !5625, file: !581, line: 982, column: 23)
!5631 = !DILocation(line: 983, column: 13, scope: !5630)
!5632 = !DILocation(line: 983, column: 34, scope: !5630)
!5633 = !DILocation(line: 983, column: 17, scope: !5630)
!5634 = !DILocation(line: 983, column: 27, scope: !5630)
!5635 = !DILocalVariable(name: "y", scope: !5630, file: !581, line: 984, type: !200)
!5636 = !DILocation(line: 984, column: 13, scope: !5630)
!5637 = !DILocation(line: 984, column: 34, scope: !5630)
!5638 = !DILocation(line: 984, column: 17, scope: !5630)
!5639 = !DILocation(line: 984, column: 27, scope: !5630)
!5640 = !DILocalVariable(name: "d", scope: !5630, file: !581, line: 985, type: !200)
!5641 = !DILocation(line: 985, column: 13, scope: !5630)
!5642 = !DILocation(line: 985, column: 34, scope: !5630)
!5643 = !DILocation(line: 985, column: 17, scope: !5630)
!5644 = !DILocation(line: 985, column: 27, scope: !5630)
!5645 = !DILocation(line: 987, column: 44, scope: !5630)
!5646 = !DILocation(line: 987, column: 34, scope: !5630)
!5647 = !DILocation(line: 987, column: 39, scope: !5630)
!5648 = !DILocation(line: 987, column: 49, scope: !5630)
!5649 = !DILocation(line: 987, column: 67, scope: !5630)
!5650 = !DILocation(line: 987, column: 53, scope: !5630)
!5651 = !DILocation(line: 987, column: 58, scope: !5630)
!5652 = !DILocation(line: 987, column: 51, scope: !5630)
!5653 = !DILocation(line: 987, column: 47, scope: !5630)
!5654 = !DILocation(line: 987, column: 72, scope: !5630)
!5655 = !DILocation(line: 987, column: 74, scope: !5630)
!5656 = !DILocation(line: 987, column: 70, scope: !5630)
!5657 = !DILocation(line: 987, column: 21, scope: !5630)
!5658 = !DILocation(line: 987, column: 94, scope: !5630)
!5659 = !DILocation(line: 987, column: 80, scope: !5630)
!5660 = !DILocation(line: 987, column: 85, scope: !5630)
!5661 = !DILocation(line: 987, column: 97, scope: !5630)
!5662 = !DILocation(line: 987, column: 102, scope: !5630)
!5663 = !DILocation(line: 987, column: 105, scope: !5630)
!5664 = !DILocation(line: 987, column: 9, scope: !5630)
!5665 = !DILocation(line: 988, column: 44, scope: !5630)
!5666 = !DILocation(line: 988, column: 34, scope: !5630)
!5667 = !DILocation(line: 988, column: 39, scope: !5630)
!5668 = !DILocation(line: 988, column: 49, scope: !5630)
!5669 = !DILocation(line: 988, column: 67, scope: !5630)
!5670 = !DILocation(line: 988, column: 53, scope: !5630)
!5671 = !DILocation(line: 988, column: 58, scope: !5630)
!5672 = !DILocation(line: 988, column: 51, scope: !5630)
!5673 = !DILocation(line: 988, column: 47, scope: !5630)
!5674 = !DILocation(line: 988, column: 72, scope: !5630)
!5675 = !DILocation(line: 988, column: 74, scope: !5630)
!5676 = !DILocation(line: 988, column: 70, scope: !5630)
!5677 = !DILocation(line: 988, column: 21, scope: !5630)
!5678 = !DILocation(line: 988, column: 94, scope: !5630)
!5679 = !DILocation(line: 988, column: 80, scope: !5630)
!5680 = !DILocation(line: 988, column: 85, scope: !5630)
!5681 = !DILocation(line: 988, column: 97, scope: !5630)
!5682 = !DILocation(line: 988, column: 102, scope: !5630)
!5683 = !DILocation(line: 988, column: 105, scope: !5630)
!5684 = !DILocation(line: 988, column: 9, scope: !5630)
!5685 = !DILocation(line: 989, column: 44, scope: !5630)
!5686 = !DILocation(line: 989, column: 34, scope: !5630)
!5687 = !DILocation(line: 989, column: 39, scope: !5630)
!5688 = !DILocation(line: 989, column: 49, scope: !5630)
!5689 = !DILocation(line: 989, column: 67, scope: !5630)
!5690 = !DILocation(line: 989, column: 53, scope: !5630)
!5691 = !DILocation(line: 989, column: 58, scope: !5630)
!5692 = !DILocation(line: 989, column: 51, scope: !5630)
!5693 = !DILocation(line: 989, column: 47, scope: !5630)
!5694 = !DILocation(line: 989, column: 72, scope: !5630)
!5695 = !DILocation(line: 989, column: 74, scope: !5630)
!5696 = !DILocation(line: 989, column: 70, scope: !5630)
!5697 = !DILocation(line: 989, column: 21, scope: !5630)
!5698 = !DILocation(line: 989, column: 94, scope: !5630)
!5699 = !DILocation(line: 989, column: 80, scope: !5630)
!5700 = !DILocation(line: 989, column: 85, scope: !5630)
!5701 = !DILocation(line: 989, column: 97, scope: !5630)
!5702 = !DILocation(line: 989, column: 102, scope: !5630)
!5703 = !DILocation(line: 989, column: 105, scope: !5630)
!5704 = !DILocation(line: 989, column: 9, scope: !5630)
!5705 = !DILocation(line: 990, column: 13, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5630, file: !581, line: 990, column: 13)
!5707 = !DILocation(line: 990, column: 18, scope: !5706)
!5708 = !DILocation(line: 990, column: 13, scope: !5630)
!5709 = !DILocation(line: 991, column: 38, scope: !5706)
!5710 = !DILocation(line: 991, column: 43, scope: !5706)
!5711 = !DILocation(line: 991, column: 53, scope: !5706)
!5712 = !DILocation(line: 991, column: 57, scope: !5706)
!5713 = !DILocation(line: 991, column: 62, scope: !5706)
!5714 = !DILocation(line: 991, column: 55, scope: !5706)
!5715 = !DILocation(line: 991, column: 51, scope: !5706)
!5716 = !DILocation(line: 991, column: 76, scope: !5706)
!5717 = !DILocation(line: 991, column: 78, scope: !5706)
!5718 = !DILocation(line: 991, column: 74, scope: !5706)
!5719 = !DILocation(line: 991, column: 25, scope: !5706)
!5720 = !DILocation(line: 991, column: 84, scope: !5706)
!5721 = !DILocation(line: 991, column: 89, scope: !5706)
!5722 = !DILocation(line: 991, column: 101, scope: !5706)
!5723 = !DILocation(line: 991, column: 106, scope: !5706)
!5724 = !DILocation(line: 991, column: 111, scope: !5706)
!5725 = !DILocation(line: 991, column: 13, scope: !5706)
!5726 = !DILocation(line: 992, column: 5, scope: !5630)
!5727 = !DILocation(line: 994, column: 12, scope: !5377)
!5728 = !DILocation(line: 994, column: 10, scope: !5377)
!5729 = !DILocation(line: 994, column: 17, scope: !5730)
!5730 = !DILexicalBlockFile(scope: !5376, file: !581, discriminator: 1)
!5731 = !DILocation(line: 994, column: 19, scope: !5730)
!5732 = !DILocation(line: 994, column: 23, scope: !5730)
!5733 = !DILocation(line: 994, column: 26, scope: !5734)
!5734 = !DILexicalBlockFile(scope: !5376, file: !581, discriminator: 2)
!5735 = !DILocation(line: 994, column: 29, scope: !5734)
!5736 = !DILocation(line: 994, column: 35, scope: !5734)
!5737 = !DILocation(line: 994, column: 23, scope: !5734)
!5738 = !DILocation(line: 994, column: 5, scope: !5739)
!5739 = !DILexicalBlockFile(scope: !5377, file: !581, discriminator: 3)
!5740 = !DILocalVariable(name: "color", scope: !5375, file: !581, line: 995, type: !827)
!5741 = !DILocation(line: 995, column: 18, scope: !5375)
!5742 = !DILocalVariable(name: "x", scope: !5375, file: !581, line: 996, type: !200)
!5743 = !DILocation(line: 996, column: 13, scope: !5375)
!5744 = !DILocation(line: 996, column: 33, scope: !5375)
!5745 = !DILocation(line: 996, column: 17, scope: !5375)
!5746 = !DILocation(line: 996, column: 30, scope: !5375)
!5747 = !DILocation(line: 996, column: 27, scope: !5375)
!5748 = !DILocalVariable(name: "y", scope: !5375, file: !581, line: 997, type: !200)
!5749 = !DILocation(line: 997, column: 13, scope: !5375)
!5750 = !DILocation(line: 997, column: 33, scope: !5375)
!5751 = !DILocation(line: 997, column: 17, scope: !5375)
!5752 = !DILocation(line: 997, column: 30, scope: !5375)
!5753 = !DILocation(line: 997, column: 27, scope: !5375)
!5754 = !DILocalVariable(name: "d", scope: !5375, file: !581, line: 998, type: !200)
!5755 = !DILocation(line: 998, column: 13, scope: !5375)
!5756 = !DILocation(line: 998, column: 33, scope: !5375)
!5757 = !DILocation(line: 998, column: 17, scope: !5375)
!5758 = !DILocation(line: 998, column: 30, scope: !5375)
!5759 = !DILocation(line: 998, column: 27, scope: !5375)
!5760 = !DILocation(line: 1000, column: 20, scope: !5375)
!5761 = !DILocation(line: 1000, column: 15, scope: !5375)
!5762 = !DILocation(line: 1000, column: 9, scope: !5375)
!5763 = !DILocation(line: 1000, column: 18, scope: !5375)
!5764 = !DILocation(line: 1001, column: 20, scope: !5375)
!5765 = !DILocation(line: 1001, column: 15, scope: !5375)
!5766 = !DILocation(line: 1001, column: 9, scope: !5375)
!5767 = !DILocation(line: 1001, column: 18, scope: !5375)
!5768 = !DILocation(line: 1002, column: 20, scope: !5375)
!5769 = !DILocation(line: 1002, column: 15, scope: !5375)
!5770 = !DILocation(line: 1002, column: 9, scope: !5375)
!5771 = !DILocation(line: 1002, column: 18, scope: !5375)
!5772 = !DILocation(line: 1003, column: 20, scope: !5375)
!5773 = !DILocation(line: 1003, column: 9, scope: !5375)
!5774 = !DILocation(line: 1003, column: 18, scope: !5375)
!5775 = !DILocation(line: 1005, column: 13, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5375, file: !581, line: 1005, column: 13)
!5777 = !DILocation(line: 1005, column: 17, scope: !5776)
!5778 = !DILocation(line: 1005, column: 21, scope: !5776)
!5779 = !DILocation(line: 1005, column: 15, scope: !5776)
!5780 = !DILocation(line: 1005, column: 13, scope: !5375)
!5781 = !DILocation(line: 1006, column: 15, scope: !5776)
!5782 = !DILocation(line: 1006, column: 13, scope: !5776)
!5783 = !DILocation(line: 1008, column: 15, scope: !5776)
!5784 = !DILocation(line: 1009, column: 13, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5375, file: !581, line: 1009, column: 13)
!5786 = !DILocation(line: 1009, column: 17, scope: !5785)
!5787 = !DILocation(line: 1009, column: 21, scope: !5785)
!5788 = !DILocation(line: 1009, column: 15, scope: !5785)
!5789 = !DILocation(line: 1009, column: 13, scope: !5375)
!5790 = !DILocation(line: 1010, column: 15, scope: !5785)
!5791 = !DILocation(line: 1010, column: 13, scope: !5785)
!5792 = !DILocation(line: 1012, column: 15, scope: !5785)
!5793 = !DILocation(line: 1014, column: 23, scope: !5375)
!5794 = !DILocation(line: 1014, column: 29, scope: !5375)
!5795 = !DILocation(line: 1014, column: 34, scope: !5375)
!5796 = !DILocation(line: 1014, column: 40, scope: !5375)
!5797 = !DILocation(line: 1014, column: 13, scope: !5375)
!5798 = !DILocation(line: 132, column: 9, scope: !4460, inlinedAt: !5381)
!5799 = !DILocation(line: 132, column: 13, scope: !4460, inlinedAt: !5381)
!5800 = !DILocation(line: 132, column: 11, scope: !4460, inlinedAt: !5381)
!5801 = !DILocation(line: 132, column: 9, scope: !4150, inlinedAt: !5381)
!5802 = !DILocation(line: 132, column: 26, scope: !4465, inlinedAt: !5381)
!5803 = !DILocation(line: 132, column: 19, scope: !4465, inlinedAt: !5381)
!5804 = !DILocation(line: 133, column: 14, scope: !4468, inlinedAt: !5381)
!5805 = !DILocation(line: 133, column: 18, scope: !4468, inlinedAt: !5381)
!5806 = !DILocation(line: 133, column: 16, scope: !4468, inlinedAt: !5381)
!5807 = !DILocation(line: 133, column: 14, scope: !4460, inlinedAt: !5381)
!5808 = !DILocation(line: 133, column: 31, scope: !4473, inlinedAt: !5381)
!5809 = !DILocation(line: 133, column: 24, scope: !4473, inlinedAt: !5381)
!5810 = !DILocation(line: 134, column: 17, scope: !4468, inlinedAt: !5381)
!5811 = !DILocation(line: 134, column: 10, scope: !4468, inlinedAt: !5381)
!5812 = !DILocation(line: 135, column: 1, scope: !4150, inlinedAt: !5381)
!5813 = !DILocation(line: 1014, column: 11, scope: !5375)
!5814 = !DILocation(line: 1015, column: 23, scope: !5375)
!5815 = !DILocation(line: 1015, column: 29, scope: !5375)
!5816 = !DILocation(line: 1015, column: 34, scope: !5375)
!5817 = !DILocation(line: 1015, column: 41, scope: !5375)
!5818 = !DILocation(line: 1015, column: 13, scope: !5375)
!5819 = !DILocation(line: 132, column: 9, scope: !4460, inlinedAt: !5374)
!5820 = !DILocation(line: 132, column: 13, scope: !4460, inlinedAt: !5374)
!5821 = !DILocation(line: 132, column: 11, scope: !4460, inlinedAt: !5374)
!5822 = !DILocation(line: 132, column: 9, scope: !4150, inlinedAt: !5374)
!5823 = !DILocation(line: 132, column: 26, scope: !4465, inlinedAt: !5374)
!5824 = !DILocation(line: 132, column: 19, scope: !4465, inlinedAt: !5374)
!5825 = !DILocation(line: 133, column: 14, scope: !4468, inlinedAt: !5374)
!5826 = !DILocation(line: 133, column: 18, scope: !4468, inlinedAt: !5374)
!5827 = !DILocation(line: 133, column: 16, scope: !4468, inlinedAt: !5374)
!5828 = !DILocation(line: 133, column: 14, scope: !4460, inlinedAt: !5374)
!5829 = !DILocation(line: 133, column: 31, scope: !4473, inlinedAt: !5374)
!5830 = !DILocation(line: 133, column: 24, scope: !4473, inlinedAt: !5374)
!5831 = !DILocation(line: 134, column: 17, scope: !4468, inlinedAt: !5374)
!5832 = !DILocation(line: 134, column: 10, scope: !4468, inlinedAt: !5374)
!5833 = !DILocation(line: 135, column: 1, scope: !4150, inlinedAt: !5374)
!5834 = !DILocation(line: 1015, column: 11, scope: !5375)
!5835 = !DILocation(line: 1016, column: 22, scope: !5375)
!5836 = !DILocation(line: 1016, column: 27, scope: !5375)
!5837 = !DILocation(line: 1016, column: 30, scope: !5375)
!5838 = !DILocation(line: 1016, column: 33, scope: !5375)
!5839 = !DILocation(line: 1016, column: 41, scope: !5375)
!5840 = !DILocation(line: 1016, column: 39, scope: !5375)
!5841 = !DILocation(line: 1016, column: 36, scope: !5375)
!5842 = !DILocation(line: 1016, column: 59, scope: !5375)
!5843 = !DILocation(line: 1016, column: 44, scope: !5375)
!5844 = !DILocation(line: 1016, column: 63, scope: !5375)
!5845 = !DILocation(line: 1016, column: 9, scope: !5375)
!5846 = !DILocation(line: 1017, column: 5, scope: !5375)
!5847 = !DILocation(line: 994, column: 41, scope: !5848)
!5848 = !DILexicalBlockFile(scope: !5376, file: !581, discriminator: 4)
!5849 = !DILocation(line: 994, column: 5, scope: !5848)
!5850 = distinct !{!5850, !5851}
!5851 = !DILocation(line: 994, column: 5, scope: !5372)
!5852 = !DILocation(line: 1018, column: 1, scope: !5372)
!5853 = distinct !DISubprogram(name: "envelope", scope: !581, file: !581, line: 389, type: !5854, isLocal: true, isDefinition: true, scopeLine: 390, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!5854 = !DISubroutineType(types: !5855)
!5855 = !{null, !817, !285}
!5856 = !DILocalVariable(name: "s", arg: 1, scope: !5853, file: !581, line: 389, type: !817)
!5857 = !DILocation(line: 389, column: 42, scope: !5853)
!5858 = !DILocalVariable(name: "out", arg: 2, scope: !5853, file: !581, line: 389, type: !285)
!5859 = !DILocation(line: 389, column: 54, scope: !5853)
!5860 = !DILocation(line: 391, column: 10, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5853, file: !581, line: 391, column: 9)
!5862 = !DILocation(line: 391, column: 13, scope: !5861)
!5863 = !DILocation(line: 391, column: 9, scope: !5853)
!5864 = !DILocation(line: 392, column: 9, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5861, file: !581, line: 391, column: 23)
!5866 = !DILocation(line: 393, column: 16, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5861, file: !581, line: 393, column: 16)
!5868 = !DILocation(line: 393, column: 19, scope: !5867)
!5869 = !DILocation(line: 393, column: 28, scope: !5867)
!5870 = !DILocation(line: 393, column: 16, scope: !5861)
!5871 = !DILocation(line: 394, column: 26, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5867, file: !581, line: 393, column: 34)
!5873 = !DILocation(line: 394, column: 29, scope: !5872)
!5874 = !DILocation(line: 394, column: 9, scope: !5872)
!5875 = !DILocation(line: 395, column: 5, scope: !5872)
!5876 = !DILocation(line: 396, column: 23, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5867, file: !581, line: 395, column: 12)
!5878 = !DILocation(line: 396, column: 26, scope: !5877)
!5879 = !DILocation(line: 396, column: 9, scope: !5877)
!5880 = !DILocation(line: 398, column: 1, scope: !5853)
!5881 = distinct !DISubprogram(name: "envelope_instant", scope: !581, file: !581, line: 328, type: !5854, isLocal: true, isDefinition: true, scopeLine: 329, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!5882 = !DILocalVariable(name: "s", arg: 1, scope: !5881, file: !581, line: 328, type: !817)
!5883 = !DILocation(line: 328, column: 50, scope: !5881)
!5884 = !DILocalVariable(name: "out", arg: 2, scope: !5881, file: !581, line: 328, type: !285)
!5885 = !DILocation(line: 328, column: 62, scope: !5881)
!5886 = !DILocalVariable(name: "dlinesize", scope: !5881, file: !581, line: 330, type: !1635)
!5887 = !DILocation(line: 330, column: 15, scope: !5881)
!5888 = !DILocation(line: 330, column: 27, scope: !5881)
!5889 = !DILocation(line: 330, column: 32, scope: !5881)
!5890 = !DILocalVariable(name: "dpd", scope: !5881, file: !581, line: 331, type: !291)
!5891 = !DILocation(line: 331, column: 14, scope: !5881)
!5892 = !DILocation(line: 331, column: 20, scope: !5881)
!5893 = !DILocation(line: 331, column: 23, scope: !5881)
!5894 = !DILocation(line: 331, column: 28, scope: !5881)
!5895 = !DILocation(line: 331, column: 37, scope: !5881)
!5896 = !DILocation(line: 331, column: 41, scope: !5897)
!5897 = !DILexicalBlockFile(scope: !5881, file: !581, discriminator: 1)
!5898 = !DILocation(line: 331, column: 44, scope: !5897)
!5899 = !DILocation(line: 331, column: 20, scope: !5897)
!5900 = !DILocation(line: 331, column: 63, scope: !5901)
!5901 = !DILexicalBlockFile(scope: !5881, file: !581, discriminator: 2)
!5902 = !DILocation(line: 331, column: 66, scope: !5901)
!5903 = !DILocation(line: 331, column: 53, scope: !5901)
!5904 = !DILocation(line: 331, column: 58, scope: !5901)
!5905 = !DILocation(line: 331, column: 20, scope: !5901)
!5906 = !DILocation(line: 331, column: 72, scope: !5907)
!5907 = !DILexicalBlockFile(scope: !5881, file: !581, discriminator: 3)
!5908 = !DILocation(line: 331, column: 77, scope: !5907)
!5909 = !DILocation(line: 331, column: 20, scope: !5907)
!5910 = !DILocation(line: 331, column: 20, scope: !5911)
!5911 = !DILexicalBlockFile(scope: !5881, file: !581, discriminator: 4)
!5912 = !DILocation(line: 331, column: 14, scope: !5911)
!5913 = !DILocalVariable(name: "i", scope: !5881, file: !581, line: 332, type: !200)
!5914 = !DILocation(line: 332, column: 9, scope: !5881)
!5915 = !DILocalVariable(name: "j", scope: !5881, file: !581, line: 332, type: !200)
!5916 = !DILocation(line: 332, column: 12, scope: !5881)
!5917 = !DILocation(line: 334, column: 12, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5881, file: !581, line: 334, column: 5)
!5919 = !DILocation(line: 334, column: 10, scope: !5918)
!5920 = !DILocation(line: 334, column: 17, scope: !5921)
!5921 = !DILexicalBlockFile(scope: !5922, file: !581, discriminator: 1)
!5922 = distinct !DILexicalBlock(scope: !5918, file: !581, line: 334, column: 5)
!5923 = !DILocation(line: 334, column: 21, scope: !5921)
!5924 = !DILocation(line: 334, column: 26, scope: !5921)
!5925 = !DILocation(line: 334, column: 19, scope: !5921)
!5926 = !DILocation(line: 334, column: 5, scope: !5921)
!5927 = !DILocation(line: 335, column: 16, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5929, file: !581, line: 335, column: 9)
!5929 = distinct !DILexicalBlock(scope: !5922, file: !581, line: 334, column: 39)
!5930 = !DILocation(line: 335, column: 14, scope: !5928)
!5931 = !DILocation(line: 335, column: 21, scope: !5932)
!5932 = !DILexicalBlockFile(scope: !5933, file: !581, discriminator: 1)
!5933 = distinct !DILexicalBlock(scope: !5928, file: !581, line: 335, column: 9)
!5934 = !DILocation(line: 335, column: 25, scope: !5932)
!5935 = !DILocation(line: 335, column: 30, scope: !5932)
!5936 = !DILocation(line: 335, column: 23, scope: !5932)
!5937 = !DILocation(line: 335, column: 9, scope: !5932)
!5938 = !DILocalVariable(name: "pos", scope: !5939, file: !581, line: 336, type: !1635)
!5939 = distinct !DILexicalBlock(scope: !5933, file: !581, line: 335, column: 42)
!5940 = !DILocation(line: 336, column: 23, scope: !5939)
!5941 = !DILocation(line: 336, column: 29, scope: !5939)
!5942 = !DILocation(line: 336, column: 33, scope: !5939)
!5943 = !DILocation(line: 336, column: 31, scope: !5939)
!5944 = !DILocation(line: 336, column: 45, scope: !5939)
!5945 = !DILocation(line: 336, column: 43, scope: !5939)
!5946 = !DILocalVariable(name: "poa", scope: !5939, file: !581, line: 337, type: !1635)
!5947 = !DILocation(line: 337, column: 23, scope: !5939)
!5948 = !DILocation(line: 337, column: 30, scope: !5939)
!5949 = !DILocation(line: 337, column: 32, scope: !5939)
!5950 = !DILocation(line: 337, column: 39, scope: !5939)
!5951 = !DILocation(line: 337, column: 37, scope: !5939)
!5952 = !DILocation(line: 337, column: 51, scope: !5939)
!5953 = !DILocation(line: 337, column: 49, scope: !5939)
!5954 = !DILocalVariable(name: "pob", scope: !5939, file: !581, line: 338, type: !1635)
!5955 = !DILocation(line: 338, column: 23, scope: !5939)
!5956 = !DILocation(line: 338, column: 30, scope: !5939)
!5957 = !DILocation(line: 338, column: 32, scope: !5939)
!5958 = !DILocation(line: 338, column: 39, scope: !5939)
!5959 = !DILocation(line: 338, column: 37, scope: !5939)
!5960 = !DILocation(line: 338, column: 51, scope: !5939)
!5961 = !DILocation(line: 338, column: 49, scope: !5939)
!5962 = !DILocation(line: 340, column: 21, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5939, file: !581, line: 340, column: 17)
!5964 = !DILocation(line: 340, column: 17, scope: !5963)
!5965 = !DILocation(line: 340, column: 26, scope: !5963)
!5966 = !DILocation(line: 340, column: 33, scope: !5967)
!5967 = !DILexicalBlockFile(scope: !5963, file: !581, discriminator: 1)
!5968 = !DILocation(line: 340, column: 35, scope: !5967)
!5969 = !DILocation(line: 340, column: 43, scope: !5970)
!5970 = !DILexicalBlockFile(scope: !5963, file: !581, discriminator: 2)
!5971 = !DILocation(line: 340, column: 47, scope: !5970)
!5972 = !DILocation(line: 340, column: 39, scope: !5970)
!5973 = !DILocation(line: 340, column: 53, scope: !5970)
!5974 = !DILocation(line: 340, column: 58, scope: !5975)
!5975 = !DILexicalBlockFile(scope: !5963, file: !581, discriminator: 3)
!5976 = !DILocation(line: 340, column: 64, scope: !5975)
!5977 = !DILocation(line: 340, column: 69, scope: !5975)
!5978 = !DILocation(line: 340, column: 75, scope: !5975)
!5979 = !DILocation(line: 340, column: 60, scope: !5975)
!5980 = !DILocation(line: 340, column: 81, scope: !5975)
!5981 = !DILocation(line: 340, column: 89, scope: !5982)
!5982 = !DILexicalBlockFile(scope: !5963, file: !581, discriminator: 4)
!5983 = !DILocation(line: 340, column: 93, scope: !5982)
!5984 = !DILocation(line: 340, column: 85, scope: !5982)
!5985 = !DILocation(line: 341, column: 26, scope: !5963)
!5986 = !DILocation(line: 341, column: 32, scope: !5967)
!5987 = !DILocation(line: 341, column: 34, scope: !5967)
!5988 = !DILocation(line: 341, column: 42, scope: !5970)
!5989 = !DILocation(line: 341, column: 38, scope: !5970)
!5990 = !DILocation(line: 341, column: 48, scope: !5970)
!5991 = !DILocation(line: 341, column: 53, scope: !5975)
!5992 = !DILocation(line: 341, column: 59, scope: !5975)
!5993 = !DILocation(line: 341, column: 64, scope: !5975)
!5994 = !DILocation(line: 341, column: 71, scope: !5975)
!5995 = !DILocation(line: 341, column: 55, scope: !5975)
!5996 = !DILocation(line: 341, column: 77, scope: !5975)
!5997 = !DILocation(line: 341, column: 85, scope: !5982)
!5998 = !DILocation(line: 341, column: 81, scope: !5982)
!5999 = !DILocation(line: 340, column: 17, scope: !6000)
!6000 = !DILexicalBlockFile(scope: !5939, file: !581, discriminator: 5)
!6001 = !DILocation(line: 342, column: 21, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5963, file: !581, line: 341, column: 94)
!6003 = !DILocation(line: 342, column: 17, scope: !6002)
!6004 = !DILocation(line: 342, column: 26, scope: !6002)
!6005 = !DILocation(line: 343, column: 13, scope: !6002)
!6006 = !DILocation(line: 344, column: 9, scope: !5939)
!6007 = !DILocation(line: 335, column: 38, scope: !6008)
!6008 = !DILexicalBlockFile(scope: !5933, file: !581, discriminator: 2)
!6009 = !DILocation(line: 335, column: 9, scope: !6008)
!6010 = distinct !{!6010, !6011}
!6011 = !DILocation(line: 335, column: 9, scope: !5929)
!6012 = !DILocation(line: 345, column: 5, scope: !5929)
!6013 = !DILocation(line: 334, column: 35, scope: !6014)
!6014 = !DILexicalBlockFile(scope: !5922, file: !581, discriminator: 2)
!6015 = !DILocation(line: 334, column: 5, scope: !6014)
!6016 = distinct !{!6016, !6017}
!6017 = !DILocation(line: 334, column: 5, scope: !5881)
!6018 = !DILocation(line: 346, column: 1, scope: !5881)
!6019 = distinct !DISubprogram(name: "envelope_peak", scope: !581, file: !581, line: 348, type: !5854, isLocal: true, isDefinition: true, scopeLine: 349, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!6020 = !DILocalVariable(name: "s", arg: 1, scope: !6019, file: !581, line: 348, type: !817)
!6021 = !DILocation(line: 348, column: 47, scope: !6019)
!6022 = !DILocalVariable(name: "out", arg: 2, scope: !6019, file: !581, line: 348, type: !285)
!6023 = !DILocation(line: 348, column: 59, scope: !6019)
!6024 = !DILocalVariable(name: "dlinesize", scope: !6019, file: !581, line: 350, type: !1635)
!6025 = !DILocation(line: 350, column: 15, scope: !6019)
!6026 = !DILocation(line: 350, column: 27, scope: !6019)
!6027 = !DILocation(line: 350, column: 32, scope: !6019)
!6028 = !DILocalVariable(name: "dpd", scope: !6019, file: !581, line: 351, type: !291)
!6029 = !DILocation(line: 351, column: 14, scope: !6019)
!6030 = !DILocation(line: 351, column: 20, scope: !6019)
!6031 = !DILocation(line: 351, column: 23, scope: !6019)
!6032 = !DILocation(line: 351, column: 28, scope: !6019)
!6033 = !DILocation(line: 351, column: 37, scope: !6019)
!6034 = !DILocation(line: 351, column: 41, scope: !6035)
!6035 = !DILexicalBlockFile(scope: !6019, file: !581, discriminator: 1)
!6036 = !DILocation(line: 351, column: 44, scope: !6035)
!6037 = !DILocation(line: 351, column: 20, scope: !6035)
!6038 = !DILocation(line: 351, column: 63, scope: !6039)
!6039 = !DILexicalBlockFile(scope: !6019, file: !581, discriminator: 2)
!6040 = !DILocation(line: 351, column: 66, scope: !6039)
!6041 = !DILocation(line: 351, column: 53, scope: !6039)
!6042 = !DILocation(line: 351, column: 58, scope: !6039)
!6043 = !DILocation(line: 351, column: 20, scope: !6039)
!6044 = !DILocation(line: 351, column: 72, scope: !6045)
!6045 = !DILexicalBlockFile(scope: !6019, file: !581, discriminator: 3)
!6046 = !DILocation(line: 351, column: 77, scope: !6045)
!6047 = !DILocation(line: 351, column: 20, scope: !6045)
!6048 = !DILocation(line: 351, column: 20, scope: !6049)
!6049 = !DILexicalBlockFile(scope: !6019, file: !581, discriminator: 4)
!6050 = !DILocation(line: 351, column: 14, scope: !6049)
!6051 = !DILocalVariable(name: "i", scope: !6019, file: !581, line: 352, type: !200)
!6052 = !DILocation(line: 352, column: 9, scope: !6019)
!6053 = !DILocalVariable(name: "j", scope: !6019, file: !581, line: 352, type: !200)
!6054 = !DILocation(line: 352, column: 12, scope: !6019)
!6055 = !DILocation(line: 354, column: 12, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6019, file: !581, line: 354, column: 5)
!6057 = !DILocation(line: 354, column: 10, scope: !6056)
!6058 = !DILocation(line: 354, column: 17, scope: !6059)
!6059 = !DILexicalBlockFile(scope: !6060, file: !581, discriminator: 1)
!6060 = distinct !DILexicalBlock(scope: !6056, file: !581, line: 354, column: 5)
!6061 = !DILocation(line: 354, column: 21, scope: !6059)
!6062 = !DILocation(line: 354, column: 26, scope: !6059)
!6063 = !DILocation(line: 354, column: 19, scope: !6059)
!6064 = !DILocation(line: 354, column: 5, scope: !6059)
!6065 = !DILocation(line: 355, column: 16, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6067, file: !581, line: 355, column: 9)
!6067 = distinct !DILexicalBlock(scope: !6060, file: !581, line: 354, column: 39)
!6068 = !DILocation(line: 355, column: 14, scope: !6066)
!6069 = !DILocation(line: 355, column: 21, scope: !6070)
!6070 = !DILexicalBlockFile(scope: !6071, file: !581, discriminator: 1)
!6071 = distinct !DILexicalBlock(scope: !6066, file: !581, line: 355, column: 9)
!6072 = !DILocation(line: 355, column: 25, scope: !6070)
!6073 = !DILocation(line: 355, column: 30, scope: !6070)
!6074 = !DILocation(line: 355, column: 23, scope: !6070)
!6075 = !DILocation(line: 355, column: 9, scope: !6070)
!6076 = !DILocalVariable(name: "pos", scope: !6077, file: !581, line: 356, type: !1635)
!6077 = distinct !DILexicalBlock(scope: !6071, file: !581, line: 355, column: 42)
!6078 = !DILocation(line: 356, column: 23, scope: !6077)
!6079 = !DILocation(line: 356, column: 29, scope: !6077)
!6080 = !DILocation(line: 356, column: 33, scope: !6077)
!6081 = !DILocation(line: 356, column: 31, scope: !6077)
!6082 = !DILocation(line: 356, column: 45, scope: !6077)
!6083 = !DILocation(line: 356, column: 43, scope: !6077)
!6084 = !DILocation(line: 358, column: 21, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6077, file: !581, line: 358, column: 17)
!6086 = !DILocation(line: 358, column: 17, scope: !6085)
!6087 = !DILocation(line: 358, column: 17, scope: !6077)
!6088 = !DILocation(line: 359, column: 28, scope: !6085)
!6089 = !DILocation(line: 359, column: 17, scope: !6085)
!6090 = !DILocation(line: 359, column: 25, scope: !6085)
!6091 = !DILocation(line: 359, column: 20, scope: !6085)
!6092 = !DILocation(line: 359, column: 31, scope: !6085)
!6093 = !DILocation(line: 360, column: 9, scope: !6077)
!6094 = !DILocation(line: 355, column: 38, scope: !6095)
!6095 = !DILexicalBlockFile(scope: !6071, file: !581, discriminator: 2)
!6096 = !DILocation(line: 355, column: 9, scope: !6095)
!6097 = distinct !{!6097, !6098}
!6098 = !DILocation(line: 355, column: 9, scope: !6067)
!6099 = !DILocation(line: 361, column: 5, scope: !6067)
!6100 = !DILocation(line: 354, column: 35, scope: !6101)
!6101 = !DILexicalBlockFile(scope: !6060, file: !581, discriminator: 2)
!6102 = !DILocation(line: 354, column: 5, scope: !6101)
!6103 = distinct !{!6103, !6104}
!6104 = !DILocation(line: 354, column: 5, scope: !6019)
!6105 = !DILocation(line: 363, column: 9, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6019, file: !581, line: 363, column: 9)
!6107 = !DILocation(line: 363, column: 12, scope: !6106)
!6108 = !DILocation(line: 363, column: 21, scope: !6106)
!6109 = !DILocation(line: 363, column: 9, scope: !6019)
!6110 = !DILocation(line: 364, column: 26, scope: !6106)
!6111 = !DILocation(line: 364, column: 29, scope: !6106)
!6112 = !DILocation(line: 364, column: 9, scope: !6106)
!6113 = !DILocation(line: 366, column: 12, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6019, file: !581, line: 366, column: 5)
!6115 = !DILocation(line: 366, column: 10, scope: !6114)
!6116 = !DILocation(line: 366, column: 17, scope: !6117)
!6117 = !DILexicalBlockFile(scope: !6118, file: !581, discriminator: 1)
!6118 = distinct !DILexicalBlock(scope: !6114, file: !581, line: 366, column: 5)
!6119 = !DILocation(line: 366, column: 21, scope: !6117)
!6120 = !DILocation(line: 366, column: 26, scope: !6117)
!6121 = !DILocation(line: 366, column: 19, scope: !6117)
!6122 = !DILocation(line: 366, column: 5, scope: !6117)
!6123 = !DILocation(line: 367, column: 16, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !581, line: 367, column: 9)
!6125 = distinct !DILexicalBlock(scope: !6118, file: !581, line: 366, column: 39)
!6126 = !DILocation(line: 367, column: 14, scope: !6124)
!6127 = !DILocation(line: 367, column: 21, scope: !6128)
!6128 = !DILexicalBlockFile(scope: !6129, file: !581, discriminator: 1)
!6129 = distinct !DILexicalBlock(scope: !6124, file: !581, line: 367, column: 9)
!6130 = !DILocation(line: 367, column: 25, scope: !6128)
!6131 = !DILocation(line: 367, column: 30, scope: !6128)
!6132 = !DILocation(line: 367, column: 23, scope: !6128)
!6133 = !DILocation(line: 367, column: 9, scope: !6128)
!6134 = !DILocalVariable(name: "pos", scope: !6135, file: !581, line: 368, type: !1635)
!6135 = distinct !DILexicalBlock(scope: !6129, file: !581, line: 367, column: 42)
!6136 = !DILocation(line: 368, column: 23, scope: !6135)
!6137 = !DILocation(line: 368, column: 29, scope: !6135)
!6138 = !DILocation(line: 368, column: 33, scope: !6135)
!6139 = !DILocation(line: 368, column: 31, scope: !6135)
!6140 = !DILocation(line: 368, column: 45, scope: !6135)
!6141 = !DILocation(line: 368, column: 43, scope: !6135)
!6142 = !DILocation(line: 370, column: 28, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6135, file: !581, line: 370, column: 17)
!6144 = !DILocation(line: 370, column: 17, scope: !6143)
!6145 = !DILocation(line: 370, column: 25, scope: !6143)
!6146 = !DILocation(line: 370, column: 20, scope: !6143)
!6147 = !DILocation(line: 370, column: 31, scope: !6143)
!6148 = !DILocation(line: 370, column: 38, scope: !6149)
!6149 = !DILexicalBlockFile(scope: !6143, file: !581, discriminator: 1)
!6150 = !DILocation(line: 370, column: 40, scope: !6149)
!6151 = !DILocation(line: 370, column: 55, scope: !6152)
!6152 = !DILexicalBlockFile(scope: !6143, file: !581, discriminator: 2)
!6153 = !DILocation(line: 370, column: 56, scope: !6152)
!6154 = !DILocation(line: 370, column: 44, scope: !6152)
!6155 = !DILocation(line: 370, column: 52, scope: !6152)
!6156 = !DILocation(line: 370, column: 47, scope: !6152)
!6157 = !DILocation(line: 370, column: 61, scope: !6152)
!6158 = !DILocation(line: 370, column: 66, scope: !6159)
!6159 = !DILexicalBlockFile(scope: !6143, file: !581, discriminator: 3)
!6160 = !DILocation(line: 370, column: 72, scope: !6159)
!6161 = !DILocation(line: 370, column: 77, scope: !6159)
!6162 = !DILocation(line: 370, column: 83, scope: !6159)
!6163 = !DILocation(line: 370, column: 68, scope: !6159)
!6164 = !DILocation(line: 370, column: 89, scope: !6159)
!6165 = !DILocation(line: 370, column: 104, scope: !6166)
!6166 = !DILexicalBlockFile(scope: !6143, file: !581, discriminator: 4)
!6167 = !DILocation(line: 370, column: 106, scope: !6166)
!6168 = !DILocation(line: 370, column: 93, scope: !6166)
!6169 = !DILocation(line: 370, column: 101, scope: !6166)
!6170 = !DILocation(line: 370, column: 96, scope: !6166)
!6171 = !DILocation(line: 371, column: 31, scope: !6143)
!6172 = !DILocation(line: 371, column: 37, scope: !6149)
!6173 = !DILocation(line: 371, column: 39, scope: !6149)
!6174 = !DILocation(line: 371, column: 56, scope: !6152)
!6175 = !DILocation(line: 371, column: 43, scope: !6152)
!6176 = !DILocation(line: 371, column: 51, scope: !6152)
!6177 = !DILocation(line: 371, column: 52, scope: !6152)
!6178 = !DILocation(line: 371, column: 46, scope: !6152)
!6179 = !DILocation(line: 371, column: 60, scope: !6152)
!6180 = !DILocation(line: 371, column: 65, scope: !6159)
!6181 = !DILocation(line: 371, column: 71, scope: !6159)
!6182 = !DILocation(line: 371, column: 76, scope: !6159)
!6183 = !DILocation(line: 371, column: 83, scope: !6159)
!6184 = !DILocation(line: 371, column: 67, scope: !6159)
!6185 = !DILocation(line: 371, column: 89, scope: !6159)
!6186 = !DILocation(line: 371, column: 108, scope: !6166)
!6187 = !DILocation(line: 371, column: 93, scope: !6166)
!6188 = !DILocation(line: 371, column: 101, scope: !6166)
!6189 = !DILocation(line: 371, column: 103, scope: !6166)
!6190 = !DILocation(line: 371, column: 96, scope: !6166)
!6191 = !DILocation(line: 370, column: 17, scope: !6192)
!6192 = !DILexicalBlockFile(scope: !6135, file: !581, discriminator: 5)
!6193 = !DILocation(line: 372, column: 21, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6143, file: !581, line: 371, column: 115)
!6195 = !DILocation(line: 372, column: 17, scope: !6194)
!6196 = !DILocation(line: 372, column: 26, scope: !6194)
!6197 = !DILocation(line: 373, column: 13, scope: !6194)
!6198 = !DILocation(line: 374, column: 9, scope: !6135)
!6199 = !DILocation(line: 367, column: 38, scope: !6200)
!6200 = !DILexicalBlockFile(scope: !6129, file: !581, discriminator: 2)
!6201 = !DILocation(line: 367, column: 9, scope: !6200)
!6202 = distinct !{!6202, !6203}
!6203 = !DILocation(line: 367, column: 9, scope: !6125)
!6204 = !DILocation(line: 375, column: 5, scope: !6125)
!6205 = !DILocation(line: 366, column: 35, scope: !6206)
!6206 = !DILexicalBlockFile(scope: !6118, file: !581, discriminator: 2)
!6207 = !DILocation(line: 366, column: 5, scope: !6206)
!6208 = distinct !{!6208, !6209}
!6209 = !DILocation(line: 366, column: 5, scope: !6019)
!6210 = !DILocation(line: 376, column: 1, scope: !6019)
!6211 = distinct !DISubprogram(name: "envelope16", scope: !581, file: !581, line: 378, type: !5854, isLocal: true, isDefinition: true, scopeLine: 379, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!6212 = !DILocalVariable(name: "s", arg: 1, scope: !6211, file: !581, line: 378, type: !817)
!6213 = !DILocation(line: 378, column: 44, scope: !6211)
!6214 = !DILocalVariable(name: "out", arg: 2, scope: !6211, file: !581, line: 378, type: !285)
!6215 = !DILocation(line: 378, column: 56, scope: !6211)
!6216 = !DILocation(line: 380, column: 10, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6211, file: !581, line: 380, column: 9)
!6218 = !DILocation(line: 380, column: 13, scope: !6217)
!6219 = !DILocation(line: 380, column: 9, scope: !6211)
!6220 = !DILocation(line: 381, column: 9, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6217, file: !581, line: 380, column: 23)
!6222 = !DILocation(line: 382, column: 16, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6217, file: !581, line: 382, column: 16)
!6224 = !DILocation(line: 382, column: 19, scope: !6223)
!6225 = !DILocation(line: 382, column: 28, scope: !6223)
!6226 = !DILocation(line: 382, column: 16, scope: !6217)
!6227 = !DILocation(line: 383, column: 28, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6223, file: !581, line: 382, column: 34)
!6229 = !DILocation(line: 383, column: 31, scope: !6228)
!6230 = !DILocation(line: 383, column: 9, scope: !6228)
!6231 = !DILocation(line: 384, column: 5, scope: !6228)
!6232 = !DILocation(line: 385, column: 25, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6223, file: !581, line: 384, column: 12)
!6234 = !DILocation(line: 385, column: 28, scope: !6233)
!6235 = !DILocation(line: 385, column: 9, scope: !6233)
!6236 = !DILocation(line: 387, column: 1, scope: !6211)
!6237 = distinct !DISubprogram(name: "envelope_instant16", scope: !581, file: !581, line: 276, type: !5854, isLocal: true, isDefinition: true, scopeLine: 277, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!6238 = !DILocalVariable(name: "s", arg: 1, scope: !6237, file: !581, line: 276, type: !817)
!6239 = !DILocation(line: 276, column: 52, scope: !6237)
!6240 = !DILocalVariable(name: "out", arg: 2, scope: !6237, file: !581, line: 276, type: !285)
!6241 = !DILocation(line: 276, column: 64, scope: !6237)
!6242 = !DILocalVariable(name: "dlinesize", scope: !6237, file: !581, line: 278, type: !1635)
!6243 = !DILocation(line: 278, column: 15, scope: !6237)
!6244 = !DILocation(line: 278, column: 27, scope: !6237)
!6245 = !DILocation(line: 278, column: 32, scope: !6237)
!6246 = !DILocation(line: 278, column: 44, scope: !6237)
!6247 = !DILocalVariable(name: "dpd", scope: !6237, file: !581, line: 279, type: !801)
!6248 = !DILocation(line: 279, column: 15, scope: !6237)
!6249 = !DILocation(line: 279, column: 21, scope: !6237)
!6250 = !DILocation(line: 279, column: 24, scope: !6237)
!6251 = !DILocation(line: 279, column: 29, scope: !6237)
!6252 = !DILocation(line: 279, column: 38, scope: !6237)
!6253 = !DILocation(line: 279, column: 42, scope: !6254)
!6254 = !DILexicalBlockFile(scope: !6237, file: !581, discriminator: 1)
!6255 = !DILocation(line: 279, column: 45, scope: !6254)
!6256 = !DILocation(line: 279, column: 21, scope: !6254)
!6257 = !DILocation(line: 279, column: 76, scope: !6258)
!6258 = !DILexicalBlockFile(scope: !6237, file: !581, discriminator: 2)
!6259 = !DILocation(line: 279, column: 79, scope: !6258)
!6260 = !DILocation(line: 279, column: 66, scope: !6258)
!6261 = !DILocation(line: 279, column: 71, scope: !6258)
!6262 = !DILocation(line: 279, column: 54, scope: !6258)
!6263 = !DILocation(line: 279, column: 21, scope: !6258)
!6264 = !DILocation(line: 279, column: 97, scope: !6265)
!6265 = !DILexicalBlockFile(scope: !6237, file: !581, discriminator: 3)
!6266 = !DILocation(line: 279, column: 102, scope: !6265)
!6267 = !DILocation(line: 279, column: 85, scope: !6265)
!6268 = !DILocation(line: 279, column: 21, scope: !6265)
!6269 = !DILocation(line: 279, column: 21, scope: !6270)
!6270 = !DILexicalBlockFile(scope: !6237, file: !581, discriminator: 4)
!6271 = !DILocation(line: 279, column: 15, scope: !6270)
!6272 = !DILocalVariable(name: "max", scope: !6237, file: !581, line: 280, type: !1635)
!6273 = !DILocation(line: 280, column: 15, scope: !6237)
!6274 = !DILocation(line: 280, column: 21, scope: !6237)
!6275 = !DILocation(line: 280, column: 24, scope: !6237)
!6276 = !DILocation(line: 280, column: 29, scope: !6237)
!6277 = !DILocalVariable(name: "i", scope: !6237, file: !581, line: 281, type: !200)
!6278 = !DILocation(line: 281, column: 9, scope: !6237)
!6279 = !DILocalVariable(name: "j", scope: !6237, file: !581, line: 281, type: !200)
!6280 = !DILocation(line: 281, column: 12, scope: !6237)
!6281 = !DILocation(line: 283, column: 12, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6237, file: !581, line: 283, column: 5)
!6283 = !DILocation(line: 283, column: 10, scope: !6282)
!6284 = !DILocation(line: 283, column: 17, scope: !6285)
!6285 = !DILexicalBlockFile(scope: !6286, file: !581, discriminator: 1)
!6286 = distinct !DILexicalBlock(scope: !6282, file: !581, line: 283, column: 5)
!6287 = !DILocation(line: 283, column: 21, scope: !6285)
!6288 = !DILocation(line: 283, column: 26, scope: !6285)
!6289 = !DILocation(line: 283, column: 19, scope: !6285)
!6290 = !DILocation(line: 283, column: 5, scope: !6285)
!6291 = !DILocation(line: 284, column: 16, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !581, line: 284, column: 9)
!6293 = distinct !DILexicalBlock(scope: !6286, file: !581, line: 283, column: 39)
!6294 = !DILocation(line: 284, column: 14, scope: !6292)
!6295 = !DILocation(line: 284, column: 21, scope: !6296)
!6296 = !DILexicalBlockFile(scope: !6297, file: !581, discriminator: 1)
!6297 = distinct !DILexicalBlock(scope: !6292, file: !581, line: 284, column: 9)
!6298 = !DILocation(line: 284, column: 25, scope: !6296)
!6299 = !DILocation(line: 284, column: 30, scope: !6296)
!6300 = !DILocation(line: 284, column: 23, scope: !6296)
!6301 = !DILocation(line: 284, column: 9, scope: !6296)
!6302 = !DILocalVariable(name: "pos", scope: !6303, file: !581, line: 285, type: !1635)
!6303 = distinct !DILexicalBlock(scope: !6297, file: !581, line: 284, column: 42)
!6304 = !DILocation(line: 285, column: 23, scope: !6303)
!6305 = !DILocation(line: 285, column: 29, scope: !6303)
!6306 = !DILocation(line: 285, column: 33, scope: !6303)
!6307 = !DILocation(line: 285, column: 31, scope: !6303)
!6308 = !DILocation(line: 285, column: 45, scope: !6303)
!6309 = !DILocation(line: 285, column: 43, scope: !6303)
!6310 = !DILocalVariable(name: "poa", scope: !6303, file: !581, line: 286, type: !1635)
!6311 = !DILocation(line: 286, column: 23, scope: !6303)
!6312 = !DILocation(line: 286, column: 30, scope: !6303)
!6313 = !DILocation(line: 286, column: 32, scope: !6303)
!6314 = !DILocation(line: 286, column: 39, scope: !6303)
!6315 = !DILocation(line: 286, column: 37, scope: !6303)
!6316 = !DILocation(line: 286, column: 51, scope: !6303)
!6317 = !DILocation(line: 286, column: 49, scope: !6303)
!6318 = !DILocalVariable(name: "pob", scope: !6303, file: !581, line: 287, type: !1635)
!6319 = !DILocation(line: 287, column: 23, scope: !6303)
!6320 = !DILocation(line: 287, column: 30, scope: !6303)
!6321 = !DILocation(line: 287, column: 32, scope: !6303)
!6322 = !DILocation(line: 287, column: 39, scope: !6303)
!6323 = !DILocation(line: 287, column: 37, scope: !6303)
!6324 = !DILocation(line: 287, column: 51, scope: !6303)
!6325 = !DILocation(line: 287, column: 49, scope: !6303)
!6326 = !DILocation(line: 289, column: 21, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6303, file: !581, line: 289, column: 17)
!6328 = !DILocation(line: 289, column: 17, scope: !6327)
!6329 = !DILocation(line: 289, column: 26, scope: !6327)
!6330 = !DILocation(line: 289, column: 33, scope: !6331)
!6331 = !DILexicalBlockFile(scope: !6327, file: !581, discriminator: 1)
!6332 = !DILocation(line: 289, column: 35, scope: !6331)
!6333 = !DILocation(line: 289, column: 43, scope: !6334)
!6334 = !DILexicalBlockFile(scope: !6327, file: !581, discriminator: 2)
!6335 = !DILocation(line: 289, column: 47, scope: !6334)
!6336 = !DILocation(line: 289, column: 39, scope: !6334)
!6337 = !DILocation(line: 289, column: 53, scope: !6334)
!6338 = !DILocation(line: 289, column: 58, scope: !6339)
!6339 = !DILexicalBlockFile(scope: !6327, file: !581, discriminator: 3)
!6340 = !DILocation(line: 289, column: 64, scope: !6339)
!6341 = !DILocation(line: 289, column: 69, scope: !6339)
!6342 = !DILocation(line: 289, column: 75, scope: !6339)
!6343 = !DILocation(line: 289, column: 60, scope: !6339)
!6344 = !DILocation(line: 289, column: 81, scope: !6339)
!6345 = !DILocation(line: 289, column: 89, scope: !6346)
!6346 = !DILexicalBlockFile(scope: !6327, file: !581, discriminator: 4)
!6347 = !DILocation(line: 289, column: 93, scope: !6346)
!6348 = !DILocation(line: 289, column: 85, scope: !6346)
!6349 = !DILocation(line: 290, column: 26, scope: !6327)
!6350 = !DILocation(line: 290, column: 32, scope: !6331)
!6351 = !DILocation(line: 290, column: 34, scope: !6331)
!6352 = !DILocation(line: 290, column: 42, scope: !6334)
!6353 = !DILocation(line: 290, column: 38, scope: !6334)
!6354 = !DILocation(line: 290, column: 48, scope: !6334)
!6355 = !DILocation(line: 290, column: 53, scope: !6339)
!6356 = !DILocation(line: 290, column: 59, scope: !6339)
!6357 = !DILocation(line: 290, column: 64, scope: !6339)
!6358 = !DILocation(line: 290, column: 71, scope: !6339)
!6359 = !DILocation(line: 290, column: 55, scope: !6339)
!6360 = !DILocation(line: 290, column: 77, scope: !6339)
!6361 = !DILocation(line: 290, column: 85, scope: !6346)
!6362 = !DILocation(line: 290, column: 81, scope: !6346)
!6363 = !DILocation(line: 289, column: 17, scope: !6364)
!6364 = !DILexicalBlockFile(scope: !6303, file: !581, discriminator: 5)
!6365 = !DILocation(line: 291, column: 28, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6327, file: !581, line: 290, column: 94)
!6367 = !DILocation(line: 291, column: 21, scope: !6366)
!6368 = !DILocation(line: 291, column: 17, scope: !6366)
!6369 = !DILocation(line: 291, column: 26, scope: !6366)
!6370 = !DILocation(line: 292, column: 13, scope: !6366)
!6371 = !DILocation(line: 293, column: 9, scope: !6303)
!6372 = !DILocation(line: 284, column: 38, scope: !6373)
!6373 = !DILexicalBlockFile(scope: !6297, file: !581, discriminator: 2)
!6374 = !DILocation(line: 284, column: 9, scope: !6373)
!6375 = distinct !{!6375, !6376}
!6376 = !DILocation(line: 284, column: 9, scope: !6293)
!6377 = !DILocation(line: 294, column: 5, scope: !6293)
!6378 = !DILocation(line: 283, column: 35, scope: !6379)
!6379 = !DILexicalBlockFile(scope: !6286, file: !581, discriminator: 2)
!6380 = !DILocation(line: 283, column: 5, scope: !6379)
!6381 = distinct !{!6381, !6382}
!6382 = !DILocation(line: 283, column: 5, scope: !6237)
!6383 = !DILocation(line: 295, column: 1, scope: !6237)
!6384 = distinct !DISubprogram(name: "envelope_peak16", scope: !581, file: !581, line: 297, type: !5854, isLocal: true, isDefinition: true, scopeLine: 298, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!6385 = !DILocalVariable(name: "s", arg: 1, scope: !6384, file: !581, line: 297, type: !817)
!6386 = !DILocation(line: 297, column: 49, scope: !6384)
!6387 = !DILocalVariable(name: "out", arg: 2, scope: !6384, file: !581, line: 297, type: !285)
!6388 = !DILocation(line: 297, column: 61, scope: !6384)
!6389 = !DILocalVariable(name: "dlinesize", scope: !6384, file: !581, line: 299, type: !1635)
!6390 = !DILocation(line: 299, column: 15, scope: !6384)
!6391 = !DILocation(line: 299, column: 27, scope: !6384)
!6392 = !DILocation(line: 299, column: 32, scope: !6384)
!6393 = !DILocation(line: 299, column: 44, scope: !6384)
!6394 = !DILocalVariable(name: "dpd", scope: !6384, file: !581, line: 300, type: !801)
!6395 = !DILocation(line: 300, column: 15, scope: !6384)
!6396 = !DILocation(line: 300, column: 21, scope: !6384)
!6397 = !DILocation(line: 300, column: 24, scope: !6384)
!6398 = !DILocation(line: 300, column: 29, scope: !6384)
!6399 = !DILocation(line: 300, column: 38, scope: !6384)
!6400 = !DILocation(line: 300, column: 42, scope: !6401)
!6401 = !DILexicalBlockFile(scope: !6384, file: !581, discriminator: 1)
!6402 = !DILocation(line: 300, column: 45, scope: !6401)
!6403 = !DILocation(line: 300, column: 21, scope: !6401)
!6404 = !DILocation(line: 300, column: 76, scope: !6405)
!6405 = !DILexicalBlockFile(scope: !6384, file: !581, discriminator: 2)
!6406 = !DILocation(line: 300, column: 79, scope: !6405)
!6407 = !DILocation(line: 300, column: 66, scope: !6405)
!6408 = !DILocation(line: 300, column: 71, scope: !6405)
!6409 = !DILocation(line: 300, column: 54, scope: !6405)
!6410 = !DILocation(line: 300, column: 21, scope: !6405)
!6411 = !DILocation(line: 300, column: 97, scope: !6412)
!6412 = !DILexicalBlockFile(scope: !6384, file: !581, discriminator: 3)
!6413 = !DILocation(line: 300, column: 102, scope: !6412)
!6414 = !DILocation(line: 300, column: 85, scope: !6412)
!6415 = !DILocation(line: 300, column: 21, scope: !6412)
!6416 = !DILocation(line: 300, column: 21, scope: !6417)
!6417 = !DILexicalBlockFile(scope: !6384, file: !581, discriminator: 4)
!6418 = !DILocation(line: 300, column: 15, scope: !6417)
!6419 = !DILocalVariable(name: "max", scope: !6384, file: !581, line: 301, type: !1635)
!6420 = !DILocation(line: 301, column: 15, scope: !6384)
!6421 = !DILocation(line: 301, column: 21, scope: !6384)
!6422 = !DILocation(line: 301, column: 24, scope: !6384)
!6423 = !DILocation(line: 301, column: 29, scope: !6384)
!6424 = !DILocalVariable(name: "i", scope: !6384, file: !581, line: 302, type: !200)
!6425 = !DILocation(line: 302, column: 9, scope: !6384)
!6426 = !DILocalVariable(name: "j", scope: !6384, file: !581, line: 302, type: !200)
!6427 = !DILocation(line: 302, column: 12, scope: !6384)
!6428 = !DILocation(line: 304, column: 12, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6384, file: !581, line: 304, column: 5)
!6430 = !DILocation(line: 304, column: 10, scope: !6429)
!6431 = !DILocation(line: 304, column: 17, scope: !6432)
!6432 = !DILexicalBlockFile(scope: !6433, file: !581, discriminator: 1)
!6433 = distinct !DILexicalBlock(scope: !6429, file: !581, line: 304, column: 5)
!6434 = !DILocation(line: 304, column: 21, scope: !6432)
!6435 = !DILocation(line: 304, column: 26, scope: !6432)
!6436 = !DILocation(line: 304, column: 19, scope: !6432)
!6437 = !DILocation(line: 304, column: 5, scope: !6432)
!6438 = !DILocation(line: 305, column: 16, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6440, file: !581, line: 305, column: 9)
!6440 = distinct !DILexicalBlock(scope: !6433, file: !581, line: 304, column: 39)
!6441 = !DILocation(line: 305, column: 14, scope: !6439)
!6442 = !DILocation(line: 305, column: 21, scope: !6443)
!6443 = !DILexicalBlockFile(scope: !6444, file: !581, discriminator: 1)
!6444 = distinct !DILexicalBlock(scope: !6439, file: !581, line: 305, column: 9)
!6445 = !DILocation(line: 305, column: 25, scope: !6443)
!6446 = !DILocation(line: 305, column: 30, scope: !6443)
!6447 = !DILocation(line: 305, column: 23, scope: !6443)
!6448 = !DILocation(line: 305, column: 9, scope: !6443)
!6449 = !DILocalVariable(name: "pos", scope: !6450, file: !581, line: 306, type: !1635)
!6450 = distinct !DILexicalBlock(scope: !6444, file: !581, line: 305, column: 42)
!6451 = !DILocation(line: 306, column: 23, scope: !6450)
!6452 = !DILocation(line: 306, column: 29, scope: !6450)
!6453 = !DILocation(line: 306, column: 33, scope: !6450)
!6454 = !DILocation(line: 306, column: 31, scope: !6450)
!6455 = !DILocation(line: 306, column: 45, scope: !6450)
!6456 = !DILocation(line: 306, column: 43, scope: !6450)
!6457 = !DILocation(line: 308, column: 21, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6450, file: !581, line: 308, column: 17)
!6459 = !DILocation(line: 308, column: 17, scope: !6458)
!6460 = !DILocation(line: 308, column: 17, scope: !6450)
!6461 = !DILocation(line: 309, column: 28, scope: !6458)
!6462 = !DILocation(line: 309, column: 17, scope: !6458)
!6463 = !DILocation(line: 309, column: 25, scope: !6458)
!6464 = !DILocation(line: 309, column: 20, scope: !6458)
!6465 = !DILocation(line: 309, column: 31, scope: !6458)
!6466 = !DILocation(line: 310, column: 9, scope: !6450)
!6467 = !DILocation(line: 305, column: 38, scope: !6468)
!6468 = !DILexicalBlockFile(scope: !6444, file: !581, discriminator: 2)
!6469 = !DILocation(line: 305, column: 9, scope: !6468)
!6470 = distinct !{!6470, !6471}
!6471 = !DILocation(line: 305, column: 9, scope: !6440)
!6472 = !DILocation(line: 311, column: 5, scope: !6440)
!6473 = !DILocation(line: 304, column: 35, scope: !6474)
!6474 = !DILexicalBlockFile(scope: !6433, file: !581, discriminator: 2)
!6475 = !DILocation(line: 304, column: 5, scope: !6474)
!6476 = distinct !{!6476, !6477}
!6477 = !DILocation(line: 304, column: 5, scope: !6384)
!6478 = !DILocation(line: 313, column: 9, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6384, file: !581, line: 313, column: 9)
!6480 = !DILocation(line: 313, column: 12, scope: !6479)
!6481 = !DILocation(line: 313, column: 21, scope: !6479)
!6482 = !DILocation(line: 313, column: 9, scope: !6384)
!6483 = !DILocation(line: 314, column: 28, scope: !6479)
!6484 = !DILocation(line: 314, column: 31, scope: !6479)
!6485 = !DILocation(line: 314, column: 9, scope: !6479)
!6486 = !DILocation(line: 316, column: 12, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6384, file: !581, line: 316, column: 5)
!6488 = !DILocation(line: 316, column: 10, scope: !6487)
!6489 = !DILocation(line: 316, column: 17, scope: !6490)
!6490 = !DILexicalBlockFile(scope: !6491, file: !581, discriminator: 1)
!6491 = distinct !DILexicalBlock(scope: !6487, file: !581, line: 316, column: 5)
!6492 = !DILocation(line: 316, column: 21, scope: !6490)
!6493 = !DILocation(line: 316, column: 26, scope: !6490)
!6494 = !DILocation(line: 316, column: 19, scope: !6490)
!6495 = !DILocation(line: 316, column: 5, scope: !6490)
!6496 = !DILocation(line: 317, column: 16, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6498, file: !581, line: 317, column: 9)
!6498 = distinct !DILexicalBlock(scope: !6491, file: !581, line: 316, column: 39)
!6499 = !DILocation(line: 317, column: 14, scope: !6497)
!6500 = !DILocation(line: 317, column: 21, scope: !6501)
!6501 = !DILexicalBlockFile(scope: !6502, file: !581, discriminator: 1)
!6502 = distinct !DILexicalBlock(scope: !6497, file: !581, line: 317, column: 9)
!6503 = !DILocation(line: 317, column: 25, scope: !6501)
!6504 = !DILocation(line: 317, column: 30, scope: !6501)
!6505 = !DILocation(line: 317, column: 23, scope: !6501)
!6506 = !DILocation(line: 317, column: 9, scope: !6501)
!6507 = !DILocalVariable(name: "pos", scope: !6508, file: !581, line: 318, type: !1635)
!6508 = distinct !DILexicalBlock(scope: !6502, file: !581, line: 317, column: 42)
!6509 = !DILocation(line: 318, column: 23, scope: !6508)
!6510 = !DILocation(line: 318, column: 29, scope: !6508)
!6511 = !DILocation(line: 318, column: 33, scope: !6508)
!6512 = !DILocation(line: 318, column: 31, scope: !6508)
!6513 = !DILocation(line: 318, column: 45, scope: !6508)
!6514 = !DILocation(line: 318, column: 43, scope: !6508)
!6515 = !DILocation(line: 320, column: 28, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6508, file: !581, line: 320, column: 17)
!6517 = !DILocation(line: 320, column: 17, scope: !6516)
!6518 = !DILocation(line: 320, column: 25, scope: !6516)
!6519 = !DILocation(line: 320, column: 20, scope: !6516)
!6520 = !DILocation(line: 320, column: 31, scope: !6516)
!6521 = !DILocation(line: 320, column: 38, scope: !6522)
!6522 = !DILexicalBlockFile(scope: !6516, file: !581, discriminator: 1)
!6523 = !DILocation(line: 320, column: 40, scope: !6522)
!6524 = !DILocation(line: 320, column: 55, scope: !6525)
!6525 = !DILexicalBlockFile(scope: !6516, file: !581, discriminator: 2)
!6526 = !DILocation(line: 320, column: 56, scope: !6525)
!6527 = !DILocation(line: 320, column: 44, scope: !6525)
!6528 = !DILocation(line: 320, column: 52, scope: !6525)
!6529 = !DILocation(line: 320, column: 47, scope: !6525)
!6530 = !DILocation(line: 320, column: 61, scope: !6525)
!6531 = !DILocation(line: 320, column: 66, scope: !6532)
!6532 = !DILexicalBlockFile(scope: !6516, file: !581, discriminator: 3)
!6533 = !DILocation(line: 320, column: 72, scope: !6532)
!6534 = !DILocation(line: 320, column: 77, scope: !6532)
!6535 = !DILocation(line: 320, column: 83, scope: !6532)
!6536 = !DILocation(line: 320, column: 68, scope: !6532)
!6537 = !DILocation(line: 320, column: 89, scope: !6532)
!6538 = !DILocation(line: 320, column: 104, scope: !6539)
!6539 = !DILexicalBlockFile(scope: !6516, file: !581, discriminator: 4)
!6540 = !DILocation(line: 320, column: 106, scope: !6539)
!6541 = !DILocation(line: 320, column: 93, scope: !6539)
!6542 = !DILocation(line: 320, column: 101, scope: !6539)
!6543 = !DILocation(line: 320, column: 96, scope: !6539)
!6544 = !DILocation(line: 321, column: 31, scope: !6516)
!6545 = !DILocation(line: 321, column: 37, scope: !6522)
!6546 = !DILocation(line: 321, column: 39, scope: !6522)
!6547 = !DILocation(line: 321, column: 56, scope: !6525)
!6548 = !DILocation(line: 321, column: 43, scope: !6525)
!6549 = !DILocation(line: 321, column: 51, scope: !6525)
!6550 = !DILocation(line: 321, column: 52, scope: !6525)
!6551 = !DILocation(line: 321, column: 46, scope: !6525)
!6552 = !DILocation(line: 321, column: 60, scope: !6525)
!6553 = !DILocation(line: 321, column: 65, scope: !6532)
!6554 = !DILocation(line: 321, column: 71, scope: !6532)
!6555 = !DILocation(line: 321, column: 76, scope: !6532)
!6556 = !DILocation(line: 321, column: 83, scope: !6532)
!6557 = !DILocation(line: 321, column: 67, scope: !6532)
!6558 = !DILocation(line: 321, column: 89, scope: !6532)
!6559 = !DILocation(line: 321, column: 108, scope: !6539)
!6560 = !DILocation(line: 321, column: 93, scope: !6539)
!6561 = !DILocation(line: 321, column: 101, scope: !6539)
!6562 = !DILocation(line: 321, column: 103, scope: !6539)
!6563 = !DILocation(line: 321, column: 96, scope: !6539)
!6564 = !DILocation(line: 320, column: 17, scope: !6565)
!6565 = !DILexicalBlockFile(scope: !6508, file: !581, discriminator: 5)
!6566 = !DILocation(line: 322, column: 28, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6516, file: !581, line: 321, column: 115)
!6568 = !DILocation(line: 322, column: 21, scope: !6567)
!6569 = !DILocation(line: 322, column: 17, scope: !6567)
!6570 = !DILocation(line: 322, column: 26, scope: !6567)
!6571 = !DILocation(line: 323, column: 13, scope: !6567)
!6572 = !DILocation(line: 324, column: 9, scope: !6508)
!6573 = !DILocation(line: 317, column: 38, scope: !6574)
!6574 = !DILexicalBlockFile(scope: !6502, file: !581, discriminator: 2)
!6575 = !DILocation(line: 317, column: 9, scope: !6574)
!6576 = distinct !{!6576, !6577}
!6577 = !DILocation(line: 317, column: 9, scope: !6498)
!6578 = !DILocation(line: 325, column: 5, scope: !6498)
!6579 = !DILocation(line: 316, column: 35, scope: !6580)
!6580 = !DILexicalBlockFile(scope: !6491, file: !581, discriminator: 2)
!6581 = !DILocation(line: 316, column: 5, scope: !6580)
!6582 = distinct !{!6582, !6583}
!6583 = !DILocation(line: 316, column: 5, scope: !6384)
!6584 = !DILocation(line: 326, column: 1, scope: !6384)
!6585 = distinct !DISubprogram(name: "draw_dots", scope: !581, file: !581, line: 850, type: !6586, isLocal: true, isDefinition: true, scopeLine: 851, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!6586 = !DISubroutineType(types: !6587)
!6587 = !{null, !291, !200, !200, !825}
!6588 = !DILocalVariable(name: "dst", arg: 1, scope: !6585, file: !581, line: 850, type: !291)
!6589 = !DILocation(line: 850, column: 32, scope: !6585)
!6590 = !DILocalVariable(name: "L", arg: 2, scope: !6585, file: !581, line: 850, type: !200)
!6591 = !DILocation(line: 850, column: 41, scope: !6585)
!6592 = !DILocalVariable(name: "v", arg: 3, scope: !6585, file: !581, line: 850, type: !200)
!6593 = !DILocation(line: 850, column: 48, scope: !6585)
!6594 = !DILocalVariable(name: "o", arg: 4, scope: !6585, file: !581, line: 850, type: !825)
!6595 = !DILocation(line: 850, column: 57, scope: !6585)
!6596 = !DILocalVariable(name: "f", scope: !6585, file: !581, line: 852, type: !4180)
!6597 = !DILocation(line: 852, column: 17, scope: !6585)
!6598 = !DILocation(line: 852, column: 26, scope: !6585)
!6599 = !DILocation(line: 852, column: 24, scope: !6585)
!6600 = !DILocation(line: 852, column: 21, scope: !6585)
!6601 = !DILocalVariable(name: "V", scope: !6585, file: !581, line: 853, type: !4180)
!6602 = !DILocation(line: 853, column: 17, scope: !6585)
!6603 = !DILocation(line: 853, column: 21, scope: !6585)
!6604 = !DILocation(line: 853, column: 25, scope: !6585)
!6605 = !DILocation(line: 853, column: 23, scope: !6585)
!6606 = !DILocalVariable(name: "l", scope: !6585, file: !581, line: 854, type: !200)
!6607 = !DILocation(line: 854, column: 9, scope: !6585)
!6608 = !DILocation(line: 854, column: 13, scope: !6585)
!6609 = !DILocation(line: 854, column: 15, scope: !6585)
!6610 = !DILocation(line: 856, column: 24, scope: !6585)
!6611 = !DILocation(line: 856, column: 26, scope: !6585)
!6612 = !DILocation(line: 856, column: 19, scope: !6585)
!6613 = !DILocation(line: 856, column: 33, scope: !6585)
!6614 = !DILocation(line: 856, column: 31, scope: !6585)
!6615 = !DILocation(line: 856, column: 37, scope: !6585)
!6616 = !DILocation(line: 856, column: 35, scope: !6585)
!6617 = !DILocation(line: 856, column: 10, scope: !6585)
!6618 = !DILocation(line: 856, column: 12, scope: !6585)
!6619 = !DILocation(line: 856, column: 5, scope: !6585)
!6620 = !DILocation(line: 856, column: 17, scope: !6585)
!6621 = !DILocation(line: 857, column: 24, scope: !6585)
!6622 = !DILocation(line: 857, column: 26, scope: !6585)
!6623 = !DILocation(line: 857, column: 19, scope: !6585)
!6624 = !DILocation(line: 857, column: 33, scope: !6585)
!6625 = !DILocation(line: 857, column: 31, scope: !6585)
!6626 = !DILocation(line: 857, column: 37, scope: !6585)
!6627 = !DILocation(line: 857, column: 35, scope: !6585)
!6628 = !DILocation(line: 857, column: 10, scope: !6585)
!6629 = !DILocation(line: 857, column: 12, scope: !6585)
!6630 = !DILocation(line: 857, column: 5, scope: !6585)
!6631 = !DILocation(line: 857, column: 17, scope: !6585)
!6632 = !DILocation(line: 858, column: 24, scope: !6585)
!6633 = !DILocation(line: 858, column: 23, scope: !6585)
!6634 = !DILocation(line: 858, column: 26, scope: !6585)
!6635 = !DILocation(line: 858, column: 19, scope: !6585)
!6636 = !DILocation(line: 858, column: 33, scope: !6585)
!6637 = !DILocation(line: 858, column: 31, scope: !6585)
!6638 = !DILocation(line: 858, column: 37, scope: !6585)
!6639 = !DILocation(line: 858, column: 35, scope: !6585)
!6640 = !DILocation(line: 858, column: 10, scope: !6585)
!6641 = !DILocation(line: 858, column: 9, scope: !6585)
!6642 = !DILocation(line: 858, column: 12, scope: !6585)
!6643 = !DILocation(line: 858, column: 5, scope: !6585)
!6644 = !DILocation(line: 858, column: 17, scope: !6585)
!6645 = !DILocation(line: 859, column: 24, scope: !6585)
!6646 = !DILocation(line: 859, column: 23, scope: !6585)
!6647 = !DILocation(line: 859, column: 26, scope: !6585)
!6648 = !DILocation(line: 859, column: 19, scope: !6585)
!6649 = !DILocation(line: 859, column: 33, scope: !6585)
!6650 = !DILocation(line: 859, column: 31, scope: !6585)
!6651 = !DILocation(line: 859, column: 37, scope: !6585)
!6652 = !DILocation(line: 859, column: 35, scope: !6585)
!6653 = !DILocation(line: 859, column: 10, scope: !6585)
!6654 = !DILocation(line: 859, column: 9, scope: !6585)
!6655 = !DILocation(line: 859, column: 12, scope: !6585)
!6656 = !DILocation(line: 859, column: 5, scope: !6585)
!6657 = !DILocation(line: 859, column: 17, scope: !6585)
!6658 = !DILocation(line: 861, column: 10, scope: !6585)
!6659 = !DILocation(line: 861, column: 7, scope: !6585)
!6660 = !DILocation(line: 863, column: 24, scope: !6585)
!6661 = !DILocation(line: 863, column: 26, scope: !6585)
!6662 = !DILocation(line: 863, column: 19, scope: !6585)
!6663 = !DILocation(line: 863, column: 33, scope: !6585)
!6664 = !DILocation(line: 863, column: 31, scope: !6585)
!6665 = !DILocation(line: 863, column: 37, scope: !6585)
!6666 = !DILocation(line: 863, column: 35, scope: !6585)
!6667 = !DILocation(line: 863, column: 10, scope: !6585)
!6668 = !DILocation(line: 863, column: 12, scope: !6585)
!6669 = !DILocation(line: 863, column: 5, scope: !6585)
!6670 = !DILocation(line: 863, column: 17, scope: !6585)
!6671 = !DILocation(line: 864, column: 24, scope: !6585)
!6672 = !DILocation(line: 864, column: 26, scope: !6585)
!6673 = !DILocation(line: 864, column: 19, scope: !6585)
!6674 = !DILocation(line: 864, column: 33, scope: !6585)
!6675 = !DILocation(line: 864, column: 31, scope: !6585)
!6676 = !DILocation(line: 864, column: 37, scope: !6585)
!6677 = !DILocation(line: 864, column: 35, scope: !6585)
!6678 = !DILocation(line: 864, column: 10, scope: !6585)
!6679 = !DILocation(line: 864, column: 12, scope: !6585)
!6680 = !DILocation(line: 864, column: 5, scope: !6585)
!6681 = !DILocation(line: 864, column: 17, scope: !6585)
!6682 = !DILocation(line: 865, column: 24, scope: !6585)
!6683 = !DILocation(line: 865, column: 26, scope: !6585)
!6684 = !DILocation(line: 865, column: 19, scope: !6585)
!6685 = !DILocation(line: 865, column: 33, scope: !6585)
!6686 = !DILocation(line: 865, column: 31, scope: !6585)
!6687 = !DILocation(line: 865, column: 37, scope: !6585)
!6688 = !DILocation(line: 865, column: 35, scope: !6585)
!6689 = !DILocation(line: 865, column: 10, scope: !6585)
!6690 = !DILocation(line: 865, column: 12, scope: !6585)
!6691 = !DILocation(line: 865, column: 5, scope: !6585)
!6692 = !DILocation(line: 865, column: 17, scope: !6585)
!6693 = !DILocation(line: 866, column: 24, scope: !6585)
!6694 = !DILocation(line: 866, column: 26, scope: !6585)
!6695 = !DILocation(line: 866, column: 19, scope: !6585)
!6696 = !DILocation(line: 866, column: 33, scope: !6585)
!6697 = !DILocation(line: 866, column: 31, scope: !6585)
!6698 = !DILocation(line: 866, column: 37, scope: !6585)
!6699 = !DILocation(line: 866, column: 35, scope: !6585)
!6700 = !DILocation(line: 866, column: 10, scope: !6585)
!6701 = !DILocation(line: 866, column: 12, scope: !6585)
!6702 = !DILocation(line: 866, column: 5, scope: !6585)
!6703 = !DILocation(line: 866, column: 17, scope: !6585)
!6704 = !DILocation(line: 867, column: 24, scope: !6585)
!6705 = !DILocation(line: 867, column: 23, scope: !6585)
!6706 = !DILocation(line: 867, column: 26, scope: !6585)
!6707 = !DILocation(line: 867, column: 19, scope: !6585)
!6708 = !DILocation(line: 867, column: 33, scope: !6585)
!6709 = !DILocation(line: 867, column: 31, scope: !6585)
!6710 = !DILocation(line: 867, column: 37, scope: !6585)
!6711 = !DILocation(line: 867, column: 35, scope: !6585)
!6712 = !DILocation(line: 867, column: 10, scope: !6585)
!6713 = !DILocation(line: 867, column: 9, scope: !6585)
!6714 = !DILocation(line: 867, column: 12, scope: !6585)
!6715 = !DILocation(line: 867, column: 5, scope: !6585)
!6716 = !DILocation(line: 867, column: 17, scope: !6585)
!6717 = !DILocation(line: 868, column: 24, scope: !6585)
!6718 = !DILocation(line: 868, column: 23, scope: !6585)
!6719 = !DILocation(line: 868, column: 26, scope: !6585)
!6720 = !DILocation(line: 868, column: 19, scope: !6585)
!6721 = !DILocation(line: 868, column: 33, scope: !6585)
!6722 = !DILocation(line: 868, column: 31, scope: !6585)
!6723 = !DILocation(line: 868, column: 37, scope: !6585)
!6724 = !DILocation(line: 868, column: 35, scope: !6585)
!6725 = !DILocation(line: 868, column: 10, scope: !6585)
!6726 = !DILocation(line: 868, column: 9, scope: !6585)
!6727 = !DILocation(line: 868, column: 12, scope: !6585)
!6728 = !DILocation(line: 868, column: 5, scope: !6585)
!6729 = !DILocation(line: 868, column: 17, scope: !6585)
!6730 = !DILocation(line: 869, column: 24, scope: !6585)
!6731 = !DILocation(line: 869, column: 23, scope: !6585)
!6732 = !DILocation(line: 869, column: 26, scope: !6585)
!6733 = !DILocation(line: 869, column: 19, scope: !6585)
!6734 = !DILocation(line: 869, column: 33, scope: !6585)
!6735 = !DILocation(line: 869, column: 31, scope: !6585)
!6736 = !DILocation(line: 869, column: 37, scope: !6585)
!6737 = !DILocation(line: 869, column: 35, scope: !6585)
!6738 = !DILocation(line: 869, column: 10, scope: !6585)
!6739 = !DILocation(line: 869, column: 9, scope: !6585)
!6740 = !DILocation(line: 869, column: 12, scope: !6585)
!6741 = !DILocation(line: 869, column: 5, scope: !6585)
!6742 = !DILocation(line: 869, column: 17, scope: !6585)
!6743 = !DILocation(line: 870, column: 24, scope: !6585)
!6744 = !DILocation(line: 870, column: 23, scope: !6585)
!6745 = !DILocation(line: 870, column: 26, scope: !6585)
!6746 = !DILocation(line: 870, column: 19, scope: !6585)
!6747 = !DILocation(line: 870, column: 33, scope: !6585)
!6748 = !DILocation(line: 870, column: 31, scope: !6585)
!6749 = !DILocation(line: 870, column: 37, scope: !6585)
!6750 = !DILocation(line: 870, column: 35, scope: !6585)
!6751 = !DILocation(line: 870, column: 10, scope: !6585)
!6752 = !DILocation(line: 870, column: 9, scope: !6585)
!6753 = !DILocation(line: 870, column: 12, scope: !6585)
!6754 = !DILocation(line: 870, column: 5, scope: !6585)
!6755 = !DILocation(line: 870, column: 17, scope: !6585)
!6756 = !DILocation(line: 871, column: 1, scope: !6585)
!6757 = distinct !DISubprogram(name: "draw_htext", scope: !581, file: !581, line: 900, type: !6758, isLocal: true, isDefinition: true, scopeLine: 901, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!6758 = !DISubroutineType(types: !6759)
!6759 = !{null, !285, !200, !200, !825, !825, !184, !792}
!6760 = !DILocalVariable(name: "out", arg: 1, scope: !6757, file: !581, line: 900, type: !285)
!6761 = !DILocation(line: 900, column: 33, scope: !6757)
!6762 = !DILocalVariable(name: "x", arg: 2, scope: !6757, file: !581, line: 900, type: !200)
!6763 = !DILocation(line: 900, column: 42, scope: !6757)
!6764 = !DILocalVariable(name: "y", arg: 3, scope: !6757, file: !581, line: 900, type: !200)
!6765 = !DILocation(line: 900, column: 49, scope: !6757)
!6766 = !DILocalVariable(name: "o1", arg: 4, scope: !6757, file: !581, line: 900, type: !825)
!6767 = !DILocation(line: 900, column: 58, scope: !6757)
!6768 = !DILocalVariable(name: "o2", arg: 5, scope: !6757, file: !581, line: 900, type: !825)
!6769 = !DILocation(line: 900, column: 68, scope: !6757)
!6770 = !DILocalVariable(name: "txt", arg: 6, scope: !6757, file: !581, line: 900, type: !184)
!6771 = !DILocation(line: 900, column: 84, scope: !6757)
!6772 = !DILocalVariable(name: "color", arg: 7, scope: !6757, file: !581, line: 900, type: !792)
!6773 = !DILocation(line: 900, column: 103, scope: !6757)
!6774 = !DILocalVariable(name: "font", scope: !6757, file: !581, line: 902, type: !792)
!6775 = !DILocation(line: 902, column: 20, scope: !6757)
!6776 = !DILocalVariable(name: "font_height", scope: !6757, file: !581, line: 903, type: !200)
!6777 = !DILocation(line: 903, column: 9, scope: !6757)
!6778 = !DILocalVariable(name: "i", scope: !6757, file: !581, line: 904, type: !200)
!6779 = !DILocation(line: 904, column: 9, scope: !6757)
!6780 = !DILocalVariable(name: "plane", scope: !6757, file: !581, line: 904, type: !200)
!6781 = !DILocation(line: 904, column: 12, scope: !6757)
!6782 = !DILocation(line: 906, column: 10, scope: !6757)
!6783 = !DILocation(line: 906, column: 41, scope: !6757)
!6784 = !DILocation(line: 908, column: 16, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6757, file: !581, line: 908, column: 5)
!6786 = !DILocation(line: 908, column: 10, scope: !6785)
!6787 = !DILocation(line: 908, column: 21, scope: !6788)
!6788 = !DILexicalBlockFile(scope: !6789, file: !581, discriminator: 1)
!6789 = distinct !DILexicalBlock(scope: !6785, file: !581, line: 908, column: 5)
!6790 = !DILocation(line: 908, column: 27, scope: !6788)
!6791 = !DILocation(line: 908, column: 31, scope: !6788)
!6792 = !DILocation(line: 908, column: 44, scope: !6793)
!6793 = !DILexicalBlockFile(scope: !6789, file: !581, discriminator: 2)
!6794 = !DILocation(line: 908, column: 34, scope: !6793)
!6795 = !DILocation(line: 908, column: 39, scope: !6793)
!6796 = !DILocation(line: 908, column: 31, scope: !6793)
!6797 = !DILocation(line: 908, column: 5, scope: !6798)
!6798 = !DILexicalBlockFile(scope: !6785, file: !581, discriminator: 3)
!6799 = !DILocation(line: 909, column: 16, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !581, line: 909, column: 9)
!6801 = distinct !DILexicalBlock(scope: !6789, file: !581, line: 908, column: 61)
!6802 = !DILocation(line: 909, column: 14, scope: !6800)
!6803 = !DILocation(line: 909, column: 25, scope: !6804)
!6804 = !DILexicalBlockFile(scope: !6805, file: !581, discriminator: 1)
!6805 = distinct !DILexicalBlock(scope: !6800, file: !581, line: 909, column: 9)
!6806 = !DILocation(line: 909, column: 21, scope: !6804)
!6807 = !DILocation(line: 909, column: 9, scope: !6804)
!6808 = !DILocalVariable(name: "char_y", scope: !6809, file: !581, line: 910, type: !200)
!6809 = distinct !DILexicalBlock(scope: !6805, file: !581, line: 909, column: 34)
!6810 = !DILocation(line: 910, column: 17, scope: !6809)
!6811 = !DILocalVariable(name: "mask", scope: !6809, file: !581, line: 910, type: !200)
!6812 = !DILocation(line: 910, column: 25, scope: !6809)
!6813 = !DILocalVariable(name: "v", scope: !6809, file: !581, line: 911, type: !200)
!6814 = !DILocation(line: 911, column: 17, scope: !6809)
!6815 = !DILocation(line: 911, column: 27, scope: !6809)
!6816 = !DILocation(line: 911, column: 21, scope: !6809)
!6817 = !DILocalVariable(name: "p", scope: !6809, file: !581, line: 913, type: !291)
!6818 = !DILocation(line: 913, column: 22, scope: !6809)
!6819 = !DILocation(line: 913, column: 36, scope: !6809)
!6820 = !DILocation(line: 913, column: 26, scope: !6809)
!6821 = !DILocation(line: 913, column: 31, scope: !6809)
!6822 = !DILocation(line: 913, column: 45, scope: !6809)
!6823 = !DILocation(line: 913, column: 63, scope: !6809)
!6824 = !DILocation(line: 913, column: 49, scope: !6809)
!6825 = !DILocation(line: 913, column: 54, scope: !6809)
!6826 = !DILocation(line: 913, column: 47, scope: !6809)
!6827 = !DILocation(line: 913, column: 43, scope: !6809)
!6828 = !DILocation(line: 913, column: 73, scope: !6809)
!6829 = !DILocation(line: 913, column: 77, scope: !6809)
!6830 = !DILocation(line: 913, column: 79, scope: !6809)
!6831 = !DILocation(line: 913, column: 75, scope: !6809)
!6832 = !DILocation(line: 913, column: 70, scope: !6809)
!6833 = !DILocation(line: 914, column: 27, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6809, file: !581, line: 914, column: 13)
!6835 = !DILocation(line: 914, column: 39, scope: !6834)
!6836 = !DILocation(line: 914, column: 25, scope: !6834)
!6837 = !DILocation(line: 914, column: 18, scope: !6834)
!6838 = !DILocation(line: 914, column: 44, scope: !6839)
!6839 = !DILexicalBlockFile(scope: !6840, file: !581, discriminator: 1)
!6840 = distinct !DILexicalBlock(scope: !6834, file: !581, line: 914, column: 13)
!6841 = !DILocation(line: 914, column: 51, scope: !6839)
!6842 = !DILocation(line: 914, column: 13, scope: !6839)
!6843 = !DILocation(line: 915, column: 27, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !581, line: 915, column: 17)
!6845 = distinct !DILexicalBlock(scope: !6840, file: !581, line: 914, column: 67)
!6846 = !DILocation(line: 915, column: 22, scope: !6844)
!6847 = !DILocation(line: 915, column: 35, scope: !6848)
!6848 = !DILexicalBlockFile(scope: !6849, file: !581, discriminator: 1)
!6849 = distinct !DILexicalBlock(scope: !6844, file: !581, line: 915, column: 17)
!6850 = !DILocation(line: 915, column: 17, scope: !6848)
!6851 = !DILocation(line: 916, column: 34, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !581, line: 916, column: 25)
!6853 = distinct !DILexicalBlock(scope: !6849, file: !581, line: 915, column: 53)
!6854 = !DILocation(line: 916, column: 30, scope: !6852)
!6855 = !DILocation(line: 916, column: 39, scope: !6852)
!6856 = !DILocation(line: 916, column: 37, scope: !6852)
!6857 = !DILocation(line: 916, column: 53, scope: !6852)
!6858 = !DILocation(line: 916, column: 51, scope: !6852)
!6859 = !DILocation(line: 916, column: 25, scope: !6852)
!6860 = !DILocation(line: 916, column: 63, scope: !6852)
!6861 = !DILocation(line: 916, column: 61, scope: !6852)
!6862 = !DILocation(line: 916, column: 25, scope: !6853)
!6863 = !DILocation(line: 917, column: 32, scope: !6852)
!6864 = !DILocation(line: 917, column: 39, scope: !6852)
!6865 = !DILocation(line: 917, column: 37, scope: !6852)
!6866 = !DILocation(line: 917, column: 44, scope: !6852)
!6867 = !DILocation(line: 917, column: 48, scope: !6852)
!6868 = !DILocation(line: 917, column: 46, scope: !6852)
!6869 = !DILocation(line: 917, column: 42, scope: !6852)
!6870 = !DILocation(line: 917, column: 25, scope: !6852)
!6871 = !DILocation(line: 917, column: 30, scope: !6852)
!6872 = !DILocation(line: 918, column: 22, scope: !6853)
!6873 = !DILocation(line: 919, column: 17, scope: !6853)
!6874 = !DILocation(line: 915, column: 46, scope: !6875)
!6875 = !DILexicalBlockFile(scope: !6849, file: !581, discriminator: 2)
!6876 = !DILocation(line: 915, column: 17, scope: !6875)
!6877 = distinct !{!6877, !6878}
!6878 = !DILocation(line: 915, column: 17, scope: !6845)
!6879 = !DILocation(line: 920, column: 36, scope: !6845)
!6880 = !DILocation(line: 920, column: 22, scope: !6845)
!6881 = !DILocation(line: 920, column: 27, scope: !6845)
!6882 = !DILocation(line: 920, column: 43, scope: !6845)
!6883 = !DILocation(line: 920, column: 19, scope: !6845)
!6884 = !DILocation(line: 921, column: 13, scope: !6845)
!6885 = !DILocation(line: 914, column: 63, scope: !6886)
!6886 = !DILexicalBlockFile(scope: !6840, file: !581, discriminator: 2)
!6887 = !DILocation(line: 914, column: 13, scope: !6886)
!6888 = distinct !{!6888, !6889}
!6889 = !DILocation(line: 914, column: 13, scope: !6809)
!6890 = !DILocation(line: 922, column: 9, scope: !6809)
!6891 = !DILocation(line: 909, column: 30, scope: !6892)
!6892 = !DILexicalBlockFile(scope: !6805, file: !581, discriminator: 2)
!6893 = !DILocation(line: 909, column: 9, scope: !6892)
!6894 = distinct !{!6894, !6895}
!6895 = !DILocation(line: 909, column: 9, scope: !6801)
!6896 = !DILocation(line: 923, column: 5, scope: !6801)
!6897 = !DILocation(line: 908, column: 57, scope: !6898)
!6898 = !DILexicalBlockFile(scope: !6789, file: !581, discriminator: 4)
!6899 = !DILocation(line: 908, column: 5, scope: !6898)
!6900 = distinct !{!6900, !6901}
!6901 = !DILocation(line: 908, column: 5, scope: !6757)
!6902 = !DILocation(line: 924, column: 1, scope: !6757)
!6903 = distinct !DISubprogram(name: "draw_dots16", scope: !581, file: !581, line: 873, type: !6904, isLocal: true, isDefinition: true, scopeLine: 874, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!6904 = !DISubroutineType(types: !6905)
!6905 = !{null, !801, !200, !200, !825}
!6906 = !DILocalVariable(name: "dst", arg: 1, scope: !6903, file: !581, line: 873, type: !801)
!6907 = !DILocation(line: 873, column: 35, scope: !6903)
!6908 = !DILocalVariable(name: "L", arg: 2, scope: !6903, file: !581, line: 873, type: !200)
!6909 = !DILocation(line: 873, column: 44, scope: !6903)
!6910 = !DILocalVariable(name: "v", arg: 3, scope: !6903, file: !581, line: 873, type: !200)
!6911 = !DILocation(line: 873, column: 51, scope: !6903)
!6912 = !DILocalVariable(name: "o", arg: 4, scope: !6903, file: !581, line: 873, type: !825)
!6913 = !DILocation(line: 873, column: 60, scope: !6903)
!6914 = !DILocalVariable(name: "f", scope: !6903, file: !581, line: 875, type: !4180)
!6915 = !DILocation(line: 875, column: 17, scope: !6903)
!6916 = !DILocation(line: 875, column: 26, scope: !6903)
!6917 = !DILocation(line: 875, column: 24, scope: !6903)
!6918 = !DILocation(line: 875, column: 21, scope: !6903)
!6919 = !DILocalVariable(name: "V", scope: !6903, file: !581, line: 876, type: !4180)
!6920 = !DILocation(line: 876, column: 17, scope: !6903)
!6921 = !DILocation(line: 876, column: 21, scope: !6903)
!6922 = !DILocation(line: 876, column: 25, scope: !6903)
!6923 = !DILocation(line: 876, column: 23, scope: !6903)
!6924 = !DILocalVariable(name: "l", scope: !6903, file: !581, line: 877, type: !200)
!6925 = !DILocation(line: 877, column: 9, scope: !6903)
!6926 = !DILocation(line: 877, column: 13, scope: !6903)
!6927 = !DILocation(line: 877, column: 15, scope: !6903)
!6928 = !DILocation(line: 879, column: 24, scope: !6903)
!6929 = !DILocation(line: 879, column: 26, scope: !6903)
!6930 = !DILocation(line: 879, column: 19, scope: !6903)
!6931 = !DILocation(line: 879, column: 33, scope: !6903)
!6932 = !DILocation(line: 879, column: 31, scope: !6903)
!6933 = !DILocation(line: 879, column: 37, scope: !6903)
!6934 = !DILocation(line: 879, column: 35, scope: !6903)
!6935 = !DILocation(line: 879, column: 10, scope: !6903)
!6936 = !DILocation(line: 879, column: 12, scope: !6903)
!6937 = !DILocation(line: 879, column: 5, scope: !6903)
!6938 = !DILocation(line: 879, column: 17, scope: !6903)
!6939 = !DILocation(line: 880, column: 24, scope: !6903)
!6940 = !DILocation(line: 880, column: 26, scope: !6903)
!6941 = !DILocation(line: 880, column: 19, scope: !6903)
!6942 = !DILocation(line: 880, column: 33, scope: !6903)
!6943 = !DILocation(line: 880, column: 31, scope: !6903)
!6944 = !DILocation(line: 880, column: 37, scope: !6903)
!6945 = !DILocation(line: 880, column: 35, scope: !6903)
!6946 = !DILocation(line: 880, column: 10, scope: !6903)
!6947 = !DILocation(line: 880, column: 12, scope: !6903)
!6948 = !DILocation(line: 880, column: 5, scope: !6903)
!6949 = !DILocation(line: 880, column: 17, scope: !6903)
!6950 = !DILocation(line: 881, column: 24, scope: !6903)
!6951 = !DILocation(line: 881, column: 23, scope: !6903)
!6952 = !DILocation(line: 881, column: 26, scope: !6903)
!6953 = !DILocation(line: 881, column: 19, scope: !6903)
!6954 = !DILocation(line: 881, column: 33, scope: !6903)
!6955 = !DILocation(line: 881, column: 31, scope: !6903)
!6956 = !DILocation(line: 881, column: 37, scope: !6903)
!6957 = !DILocation(line: 881, column: 35, scope: !6903)
!6958 = !DILocation(line: 881, column: 10, scope: !6903)
!6959 = !DILocation(line: 881, column: 9, scope: !6903)
!6960 = !DILocation(line: 881, column: 12, scope: !6903)
!6961 = !DILocation(line: 881, column: 5, scope: !6903)
!6962 = !DILocation(line: 881, column: 17, scope: !6903)
!6963 = !DILocation(line: 882, column: 24, scope: !6903)
!6964 = !DILocation(line: 882, column: 23, scope: !6903)
!6965 = !DILocation(line: 882, column: 26, scope: !6903)
!6966 = !DILocation(line: 882, column: 19, scope: !6903)
!6967 = !DILocation(line: 882, column: 33, scope: !6903)
!6968 = !DILocation(line: 882, column: 31, scope: !6903)
!6969 = !DILocation(line: 882, column: 37, scope: !6903)
!6970 = !DILocation(line: 882, column: 35, scope: !6903)
!6971 = !DILocation(line: 882, column: 10, scope: !6903)
!6972 = !DILocation(line: 882, column: 9, scope: !6903)
!6973 = !DILocation(line: 882, column: 12, scope: !6903)
!6974 = !DILocation(line: 882, column: 5, scope: !6903)
!6975 = !DILocation(line: 882, column: 17, scope: !6903)
!6976 = !DILocation(line: 884, column: 10, scope: !6903)
!6977 = !DILocation(line: 884, column: 7, scope: !6903)
!6978 = !DILocation(line: 886, column: 24, scope: !6903)
!6979 = !DILocation(line: 886, column: 26, scope: !6903)
!6980 = !DILocation(line: 886, column: 19, scope: !6903)
!6981 = !DILocation(line: 886, column: 33, scope: !6903)
!6982 = !DILocation(line: 886, column: 31, scope: !6903)
!6983 = !DILocation(line: 886, column: 37, scope: !6903)
!6984 = !DILocation(line: 886, column: 35, scope: !6903)
!6985 = !DILocation(line: 886, column: 10, scope: !6903)
!6986 = !DILocation(line: 886, column: 12, scope: !6903)
!6987 = !DILocation(line: 886, column: 5, scope: !6903)
!6988 = !DILocation(line: 886, column: 17, scope: !6903)
!6989 = !DILocation(line: 887, column: 24, scope: !6903)
!6990 = !DILocation(line: 887, column: 26, scope: !6903)
!6991 = !DILocation(line: 887, column: 19, scope: !6903)
!6992 = !DILocation(line: 887, column: 33, scope: !6903)
!6993 = !DILocation(line: 887, column: 31, scope: !6903)
!6994 = !DILocation(line: 887, column: 37, scope: !6903)
!6995 = !DILocation(line: 887, column: 35, scope: !6903)
!6996 = !DILocation(line: 887, column: 10, scope: !6903)
!6997 = !DILocation(line: 887, column: 12, scope: !6903)
!6998 = !DILocation(line: 887, column: 5, scope: !6903)
!6999 = !DILocation(line: 887, column: 17, scope: !6903)
!7000 = !DILocation(line: 888, column: 24, scope: !6903)
!7001 = !DILocation(line: 888, column: 26, scope: !6903)
!7002 = !DILocation(line: 888, column: 19, scope: !6903)
!7003 = !DILocation(line: 888, column: 33, scope: !6903)
!7004 = !DILocation(line: 888, column: 31, scope: !6903)
!7005 = !DILocation(line: 888, column: 37, scope: !6903)
!7006 = !DILocation(line: 888, column: 35, scope: !6903)
!7007 = !DILocation(line: 888, column: 10, scope: !6903)
!7008 = !DILocation(line: 888, column: 12, scope: !6903)
!7009 = !DILocation(line: 888, column: 5, scope: !6903)
!7010 = !DILocation(line: 888, column: 17, scope: !6903)
!7011 = !DILocation(line: 889, column: 24, scope: !6903)
!7012 = !DILocation(line: 889, column: 26, scope: !6903)
!7013 = !DILocation(line: 889, column: 19, scope: !6903)
!7014 = !DILocation(line: 889, column: 33, scope: !6903)
!7015 = !DILocation(line: 889, column: 31, scope: !6903)
!7016 = !DILocation(line: 889, column: 37, scope: !6903)
!7017 = !DILocation(line: 889, column: 35, scope: !6903)
!7018 = !DILocation(line: 889, column: 10, scope: !6903)
!7019 = !DILocation(line: 889, column: 12, scope: !6903)
!7020 = !DILocation(line: 889, column: 5, scope: !6903)
!7021 = !DILocation(line: 889, column: 17, scope: !6903)
!7022 = !DILocation(line: 890, column: 24, scope: !6903)
!7023 = !DILocation(line: 890, column: 23, scope: !6903)
!7024 = !DILocation(line: 890, column: 26, scope: !6903)
!7025 = !DILocation(line: 890, column: 19, scope: !6903)
!7026 = !DILocation(line: 890, column: 33, scope: !6903)
!7027 = !DILocation(line: 890, column: 31, scope: !6903)
!7028 = !DILocation(line: 890, column: 37, scope: !6903)
!7029 = !DILocation(line: 890, column: 35, scope: !6903)
!7030 = !DILocation(line: 890, column: 10, scope: !6903)
!7031 = !DILocation(line: 890, column: 9, scope: !6903)
!7032 = !DILocation(line: 890, column: 12, scope: !6903)
!7033 = !DILocation(line: 890, column: 5, scope: !6903)
!7034 = !DILocation(line: 890, column: 17, scope: !6903)
!7035 = !DILocation(line: 891, column: 24, scope: !6903)
!7036 = !DILocation(line: 891, column: 23, scope: !6903)
!7037 = !DILocation(line: 891, column: 26, scope: !6903)
!7038 = !DILocation(line: 891, column: 19, scope: !6903)
!7039 = !DILocation(line: 891, column: 33, scope: !6903)
!7040 = !DILocation(line: 891, column: 31, scope: !6903)
!7041 = !DILocation(line: 891, column: 37, scope: !6903)
!7042 = !DILocation(line: 891, column: 35, scope: !6903)
!7043 = !DILocation(line: 891, column: 10, scope: !6903)
!7044 = !DILocation(line: 891, column: 9, scope: !6903)
!7045 = !DILocation(line: 891, column: 12, scope: !6903)
!7046 = !DILocation(line: 891, column: 5, scope: !6903)
!7047 = !DILocation(line: 891, column: 17, scope: !6903)
!7048 = !DILocation(line: 892, column: 24, scope: !6903)
!7049 = !DILocation(line: 892, column: 23, scope: !6903)
!7050 = !DILocation(line: 892, column: 26, scope: !6903)
!7051 = !DILocation(line: 892, column: 19, scope: !6903)
!7052 = !DILocation(line: 892, column: 33, scope: !6903)
!7053 = !DILocation(line: 892, column: 31, scope: !6903)
!7054 = !DILocation(line: 892, column: 37, scope: !6903)
!7055 = !DILocation(line: 892, column: 35, scope: !6903)
!7056 = !DILocation(line: 892, column: 10, scope: !6903)
!7057 = !DILocation(line: 892, column: 9, scope: !6903)
!7058 = !DILocation(line: 892, column: 12, scope: !6903)
!7059 = !DILocation(line: 892, column: 5, scope: !6903)
!7060 = !DILocation(line: 892, column: 17, scope: !6903)
!7061 = !DILocation(line: 893, column: 24, scope: !6903)
!7062 = !DILocation(line: 893, column: 23, scope: !6903)
!7063 = !DILocation(line: 893, column: 26, scope: !6903)
!7064 = !DILocation(line: 893, column: 19, scope: !6903)
!7065 = !DILocation(line: 893, column: 33, scope: !6903)
!7066 = !DILocation(line: 893, column: 31, scope: !6903)
!7067 = !DILocation(line: 893, column: 37, scope: !6903)
!7068 = !DILocation(line: 893, column: 35, scope: !6903)
!7069 = !DILocation(line: 893, column: 10, scope: !6903)
!7070 = !DILocation(line: 893, column: 9, scope: !6903)
!7071 = !DILocation(line: 893, column: 12, scope: !6903)
!7072 = !DILocation(line: 893, column: 5, scope: !6903)
!7073 = !DILocation(line: 893, column: 17, scope: !6903)
!7074 = !DILocation(line: 894, column: 1, scope: !6903)
!7075 = distinct !DISubprogram(name: "draw_htext16", scope: !581, file: !581, line: 926, type: !7076, isLocal: true, isDefinition: true, scopeLine: 927, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!7076 = !DISubroutineType(types: !7077)
!7077 = !{null, !285, !200, !200, !825, !825, !184, !796}
!7078 = !DILocalVariable(name: "out", arg: 1, scope: !7075, file: !581, line: 926, type: !285)
!7079 = !DILocation(line: 926, column: 35, scope: !7075)
!7080 = !DILocalVariable(name: "x", arg: 2, scope: !7075, file: !581, line: 926, type: !200)
!7081 = !DILocation(line: 926, column: 44, scope: !7075)
!7082 = !DILocalVariable(name: "y", arg: 3, scope: !7075, file: !581, line: 926, type: !200)
!7083 = !DILocation(line: 926, column: 51, scope: !7075)
!7084 = !DILocalVariable(name: "o1", arg: 4, scope: !7075, file: !581, line: 926, type: !825)
!7085 = !DILocation(line: 926, column: 60, scope: !7075)
!7086 = !DILocalVariable(name: "o2", arg: 5, scope: !7075, file: !581, line: 926, type: !825)
!7087 = !DILocation(line: 926, column: 70, scope: !7075)
!7088 = !DILocalVariable(name: "txt", arg: 6, scope: !7075, file: !581, line: 926, type: !184)
!7089 = !DILocation(line: 926, column: 86, scope: !7075)
!7090 = !DILocalVariable(name: "color", arg: 7, scope: !7075, file: !581, line: 926, type: !796)
!7091 = !DILocation(line: 926, column: 106, scope: !7075)
!7092 = !DILocalVariable(name: "font", scope: !7075, file: !581, line: 928, type: !792)
!7093 = !DILocation(line: 928, column: 20, scope: !7075)
!7094 = !DILocalVariable(name: "font_height", scope: !7075, file: !581, line: 929, type: !200)
!7095 = !DILocation(line: 929, column: 9, scope: !7075)
!7096 = !DILocalVariable(name: "i", scope: !7075, file: !581, line: 930, type: !200)
!7097 = !DILocation(line: 930, column: 9, scope: !7075)
!7098 = !DILocalVariable(name: "plane", scope: !7075, file: !581, line: 930, type: !200)
!7099 = !DILocation(line: 930, column: 12, scope: !7075)
!7100 = !DILocation(line: 932, column: 10, scope: !7075)
!7101 = !DILocation(line: 932, column: 41, scope: !7075)
!7102 = !DILocation(line: 934, column: 16, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7075, file: !581, line: 934, column: 5)
!7104 = !DILocation(line: 934, column: 10, scope: !7103)
!7105 = !DILocation(line: 934, column: 21, scope: !7106)
!7106 = !DILexicalBlockFile(scope: !7107, file: !581, discriminator: 1)
!7107 = distinct !DILexicalBlock(scope: !7103, file: !581, line: 934, column: 5)
!7108 = !DILocation(line: 934, column: 27, scope: !7106)
!7109 = !DILocation(line: 934, column: 31, scope: !7106)
!7110 = !DILocation(line: 934, column: 44, scope: !7111)
!7111 = !DILexicalBlockFile(scope: !7107, file: !581, discriminator: 2)
!7112 = !DILocation(line: 934, column: 34, scope: !7111)
!7113 = !DILocation(line: 934, column: 39, scope: !7111)
!7114 = !DILocation(line: 934, column: 31, scope: !7111)
!7115 = !DILocation(line: 934, column: 5, scope: !7116)
!7116 = !DILexicalBlockFile(scope: !7103, file: !581, discriminator: 3)
!7117 = !DILocation(line: 935, column: 16, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !581, line: 935, column: 9)
!7119 = distinct !DILexicalBlock(scope: !7107, file: !581, line: 934, column: 61)
!7120 = !DILocation(line: 935, column: 14, scope: !7118)
!7121 = !DILocation(line: 935, column: 25, scope: !7122)
!7122 = !DILexicalBlockFile(scope: !7123, file: !581, discriminator: 1)
!7123 = distinct !DILexicalBlock(scope: !7118, file: !581, line: 935, column: 9)
!7124 = !DILocation(line: 935, column: 21, scope: !7122)
!7125 = !DILocation(line: 935, column: 9, scope: !7122)
!7126 = !DILocalVariable(name: "char_y", scope: !7127, file: !581, line: 936, type: !200)
!7127 = distinct !DILexicalBlock(scope: !7123, file: !581, line: 935, column: 34)
!7128 = !DILocation(line: 936, column: 17, scope: !7127)
!7129 = !DILocalVariable(name: "mask", scope: !7127, file: !581, line: 936, type: !200)
!7130 = !DILocation(line: 936, column: 25, scope: !7127)
!7131 = !DILocalVariable(name: "v", scope: !7127, file: !581, line: 937, type: !200)
!7132 = !DILocation(line: 937, column: 17, scope: !7127)
!7133 = !DILocation(line: 937, column: 27, scope: !7127)
!7134 = !DILocation(line: 937, column: 21, scope: !7127)
!7135 = !DILocalVariable(name: "p", scope: !7127, file: !581, line: 939, type: !801)
!7136 = !DILocation(line: 939, column: 23, scope: !7127)
!7137 = !DILocation(line: 939, column: 50, scope: !7127)
!7138 = !DILocation(line: 939, column: 40, scope: !7127)
!7139 = !DILocation(line: 939, column: 45, scope: !7127)
!7140 = !DILocation(line: 939, column: 59, scope: !7127)
!7141 = !DILocation(line: 939, column: 77, scope: !7127)
!7142 = !DILocation(line: 939, column: 63, scope: !7127)
!7143 = !DILocation(line: 939, column: 68, scope: !7127)
!7144 = !DILocation(line: 939, column: 61, scope: !7127)
!7145 = !DILocation(line: 939, column: 57, scope: !7127)
!7146 = !DILocation(line: 939, column: 27, scope: !7127)
!7147 = !DILocation(line: 939, column: 88, scope: !7127)
!7148 = !DILocation(line: 939, column: 92, scope: !7127)
!7149 = !DILocation(line: 939, column: 94, scope: !7127)
!7150 = !DILocation(line: 939, column: 90, scope: !7127)
!7151 = !DILocation(line: 939, column: 85, scope: !7127)
!7152 = !DILocation(line: 940, column: 27, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7127, file: !581, line: 940, column: 13)
!7154 = !DILocation(line: 940, column: 39, scope: !7153)
!7155 = !DILocation(line: 940, column: 25, scope: !7153)
!7156 = !DILocation(line: 940, column: 18, scope: !7153)
!7157 = !DILocation(line: 940, column: 44, scope: !7158)
!7158 = !DILexicalBlockFile(scope: !7159, file: !581, discriminator: 1)
!7159 = distinct !DILexicalBlock(scope: !7153, file: !581, line: 940, column: 13)
!7160 = !DILocation(line: 940, column: 51, scope: !7158)
!7161 = !DILocation(line: 940, column: 13, scope: !7158)
!7162 = !DILocation(line: 941, column: 27, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !581, line: 941, column: 17)
!7164 = distinct !DILexicalBlock(scope: !7159, file: !581, line: 940, column: 67)
!7165 = !DILocation(line: 941, column: 22, scope: !7163)
!7166 = !DILocation(line: 941, column: 35, scope: !7167)
!7167 = !DILexicalBlockFile(scope: !7168, file: !581, discriminator: 1)
!7168 = distinct !DILexicalBlock(scope: !7163, file: !581, line: 941, column: 17)
!7169 = !DILocation(line: 941, column: 17, scope: !7167)
!7170 = !DILocation(line: 942, column: 34, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7172, file: !581, line: 942, column: 25)
!7172 = distinct !DILexicalBlock(scope: !7168, file: !581, line: 941, column: 53)
!7173 = !DILocation(line: 942, column: 30, scope: !7171)
!7174 = !DILocation(line: 942, column: 39, scope: !7171)
!7175 = !DILocation(line: 942, column: 37, scope: !7171)
!7176 = !DILocation(line: 942, column: 53, scope: !7171)
!7177 = !DILocation(line: 942, column: 51, scope: !7171)
!7178 = !DILocation(line: 942, column: 25, scope: !7171)
!7179 = !DILocation(line: 942, column: 63, scope: !7171)
!7180 = !DILocation(line: 942, column: 61, scope: !7171)
!7181 = !DILocation(line: 942, column: 25, scope: !7172)
!7182 = !DILocation(line: 943, column: 32, scope: !7171)
!7183 = !DILocation(line: 943, column: 39, scope: !7171)
!7184 = !DILocation(line: 943, column: 37, scope: !7171)
!7185 = !DILocation(line: 943, column: 44, scope: !7171)
!7186 = !DILocation(line: 943, column: 48, scope: !7171)
!7187 = !DILocation(line: 943, column: 46, scope: !7171)
!7188 = !DILocation(line: 943, column: 42, scope: !7171)
!7189 = !DILocation(line: 943, column: 25, scope: !7171)
!7190 = !DILocation(line: 943, column: 30, scope: !7171)
!7191 = !DILocation(line: 944, column: 22, scope: !7172)
!7192 = !DILocation(line: 945, column: 17, scope: !7172)
!7193 = !DILocation(line: 941, column: 46, scope: !7194)
!7194 = !DILexicalBlockFile(scope: !7168, file: !581, discriminator: 2)
!7195 = !DILocation(line: 941, column: 17, scope: !7194)
!7196 = distinct !{!7196, !7197}
!7197 = !DILocation(line: 941, column: 17, scope: !7164)
!7198 = !DILocation(line: 946, column: 36, scope: !7164)
!7199 = !DILocation(line: 946, column: 22, scope: !7164)
!7200 = !DILocation(line: 946, column: 27, scope: !7164)
!7201 = !DILocation(line: 946, column: 43, scope: !7164)
!7202 = !DILocation(line: 946, column: 47, scope: !7164)
!7203 = !DILocation(line: 946, column: 19, scope: !7164)
!7204 = !DILocation(line: 947, column: 13, scope: !7164)
!7205 = !DILocation(line: 940, column: 63, scope: !7206)
!7206 = !DILexicalBlockFile(scope: !7159, file: !581, discriminator: 2)
!7207 = !DILocation(line: 940, column: 13, scope: !7206)
!7208 = distinct !{!7208, !7209}
!7209 = !DILocation(line: 940, column: 13, scope: !7127)
!7210 = !DILocation(line: 948, column: 9, scope: !7127)
!7211 = !DILocation(line: 935, column: 30, scope: !7212)
!7212 = !DILexicalBlockFile(scope: !7123, file: !581, discriminator: 2)
!7213 = !DILocation(line: 935, column: 9, scope: !7212)
!7214 = distinct !{!7214, !7215}
!7215 = !DILocation(line: 935, column: 9, scope: !7119)
!7216 = !DILocation(line: 949, column: 5, scope: !7119)
!7217 = !DILocation(line: 934, column: 57, scope: !7218)
!7218 = !DILexicalBlockFile(scope: !7107, file: !581, discriminator: 4)
!7219 = !DILocation(line: 934, column: 5, scope: !7218)
!7220 = distinct !{!7220, !7221}
!7221 = !DILocation(line: 934, column: 5, scope: !7075)
!7222 = !DILocation(line: 950, column: 1, scope: !7075)
!7223 = distinct !DISubprogram(name: "config_output", scope: !581, file: !581, line: 253, type: !399, isLocal: true, isDefinition: true, scopeLine: 254, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !864)
!7224 = !DILocalVariable(name: "outlink", arg: 1, scope: !7223, file: !581, line: 253, type: !387)
!7225 = !DILocation(line: 253, column: 40, scope: !7223)
!7226 = !DILocalVariable(name: "s", scope: !7223, file: !581, line: 255, type: !817)
!7227 = !DILocation(line: 255, column: 25, scope: !7223)
!7228 = !DILocation(line: 255, column: 29, scope: !7223)
!7229 = !DILocation(line: 255, column: 38, scope: !7223)
!7230 = !DILocation(line: 255, column: 43, scope: !7223)
!7231 = !DILocalVariable(name: "i", scope: !7223, file: !581, line: 256, type: !200)
!7232 = !DILocation(line: 256, column: 9, scope: !7223)
!7233 = !DILocation(line: 258, column: 20, scope: !7223)
!7234 = !DILocation(line: 258, column: 23, scope: !7223)
!7235 = !DILocation(line: 258, column: 37, scope: !7223)
!7236 = !DILocation(line: 258, column: 40, scope: !7223)
!7237 = !DILocation(line: 258, column: 45, scope: !7223)
!7238 = !DILocation(line: 258, column: 36, scope: !7223)
!7239 = !DILocation(line: 258, column: 34, scope: !7223)
!7240 = !DILocation(line: 258, column: 5, scope: !7223)
!7241 = !DILocation(line: 258, column: 8, scope: !7223)
!7242 = !DILocation(line: 258, column: 18, scope: !7223)
!7243 = !DILocation(line: 259, column: 31, scope: !7223)
!7244 = !DILocation(line: 259, column: 34, scope: !7223)
!7245 = !DILocation(line: 259, column: 18, scope: !7223)
!7246 = !DILocation(line: 259, column: 27, scope: !7223)
!7247 = !DILocation(line: 259, column: 29, scope: !7223)
!7248 = !DILocation(line: 259, column: 5, scope: !7223)
!7249 = !DILocation(line: 259, column: 14, scope: !7223)
!7250 = !DILocation(line: 259, column: 16, scope: !7223)
!7251 = !DILocation(line: 260, column: 5, scope: !7223)
!7252 = !DILocation(line: 260, column: 14, scope: !7223)
!7253 = !DILocation(line: 260, column: 48, scope: !7223)
!7254 = !DILocation(line: 260, column: 36, scope: !7223)
!7255 = !DILocation(line: 262, column: 32, scope: !7223)
!7256 = !DILocation(line: 262, column: 35, scope: !7223)
!7257 = !DILocation(line: 262, column: 41, scope: !7223)
!7258 = !DILocation(line: 262, column: 44, scope: !7223)
!7259 = !DILocation(line: 262, column: 22, scope: !7223)
!7260 = !DILocation(line: 262, column: 5, scope: !7223)
!7261 = !DILocation(line: 262, column: 8, scope: !7223)
!7262 = !DILocation(line: 262, column: 20, scope: !7223)
!7263 = !DILocation(line: 263, column: 10, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7223, file: !581, line: 263, column: 9)
!7265 = !DILocation(line: 263, column: 13, scope: !7264)
!7266 = !DILocation(line: 263, column: 9, scope: !7223)
!7267 = !DILocation(line: 264, column: 9, scope: !7264)
!7268 = !DILocation(line: 266, column: 25, scope: !7223)
!7269 = !DILocation(line: 266, column: 28, scope: !7223)
!7270 = !DILocation(line: 266, column: 15, scope: !7223)
!7271 = !DILocation(line: 266, column: 5, scope: !7223)
!7272 = !DILocation(line: 266, column: 8, scope: !7223)
!7273 = !DILocation(line: 266, column: 13, scope: !7223)
!7274 = !DILocation(line: 267, column: 10, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7223, file: !581, line: 267, column: 9)
!7276 = !DILocation(line: 267, column: 13, scope: !7275)
!7277 = !DILocation(line: 267, column: 9, scope: !7223)
!7278 = !DILocation(line: 268, column: 9, scope: !7275)
!7279 = !DILocation(line: 270, column: 12, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7223, file: !581, line: 270, column: 5)
!7281 = !DILocation(line: 270, column: 10, scope: !7280)
!7282 = !DILocation(line: 270, column: 17, scope: !7283)
!7283 = !DILexicalBlockFile(scope: !7284, file: !581, discriminator: 1)
!7284 = distinct !DILexicalBlock(scope: !7280, file: !581, line: 270, column: 5)
!7285 = !DILocation(line: 270, column: 21, scope: !7283)
!7286 = !DILocation(line: 270, column: 24, scope: !7283)
!7287 = !DILocation(line: 270, column: 19, scope: !7283)
!7288 = !DILocation(line: 270, column: 5, scope: !7283)
!7289 = !DILocation(line: 271, column: 22, scope: !7284)
!7290 = !DILocation(line: 271, column: 25, scope: !7284)
!7291 = !DILocation(line: 271, column: 39, scope: !7284)
!7292 = !DILocation(line: 271, column: 42, scope: !7284)
!7293 = !DILocation(line: 271, column: 49, scope: !7284)
!7294 = !DILocation(line: 271, column: 47, scope: !7284)
!7295 = !DILocation(line: 271, column: 37, scope: !7284)
!7296 = !DILocation(line: 271, column: 17, scope: !7284)
!7297 = !DILocation(line: 271, column: 9, scope: !7284)
!7298 = !DILocation(line: 271, column: 12, scope: !7284)
!7299 = !DILocation(line: 271, column: 20, scope: !7284)
!7300 = !DILocation(line: 270, column: 31, scope: !7301)
!7301 = !DILexicalBlockFile(scope: !7284, file: !581, discriminator: 2)
!7302 = !DILocation(line: 270, column: 5, scope: !7301)
!7303 = distinct !{!7303, !7304}
!7304 = !DILocation(line: 270, column: 5, scope: !7223)
!7305 = !DILocation(line: 273, column: 5, scope: !7223)
!7306 = !DILocation(line: 274, column: 1, scope: !7223)
