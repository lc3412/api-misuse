; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--aacenc.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--aacenc.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AACPCEInfo = type { i64, [4 x i32], [3 x [8 x i32]], [4 x [8 x i32]], [16 x i8], [16 x i8] }
%struct.AACCoefficientsEncoder = type { void (%struct.AVCodecContext*, %struct.AACEncContext*, %struct.SingleChannelElement*, float)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32, i32, float)*, void (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, i32, i32, i32, float, i32)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, {}*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)*, void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* }
%struct.AACEncContext = type { %struct.AVClass*, %struct.AACEncOptions, %struct.PutBitContext, %struct.FFTContext, %struct.FFTContext, %struct.AVFloatDSPContext*, %struct.AACPCEInfo, [16 x float*], i32, i32, [8 x i8], %struct.LPCContext, i32, i32, i8*, i8*, %struct.ChannelElement*, %struct.FFPsyContext, %struct.FFPsyPreprocessContext*, %struct.AACCoefficientsEncoder*, i32, i32, float, i32, float, i32, i32, %struct.AudioFrameQueue, [96 x i32], [1024 x float], i16, [256 x [128 x %struct.AACQuantizeBandCostCacheEntry]], void (float*, float*, i32)*, void (i32*, float*, float*, i32, i32, i32, float, float)*, %struct.anon.0 }
%struct.AACEncOptions = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.LPCContext = type { i32, i32, i32, double*, double*, void (i32*, i32, double*)*, void (double*, i32, i32, double*)*, [16 x i8], [2 x %struct.LLSModel] }
%struct.LLSModel = type { [36 x [36 x double]], [32 x [32 x double]], [32 x double], i32, void (%struct.LLSModel*, double*)*, double (%struct.LLSModel*, double*, i32)*, [8 x i8] }
%struct.ChannelElement = type { i32, i32, i32, i8, [128 x i8], [128 x i8], [19 x i8], [2 x %struct.SingleChannelElement], %struct.ChannelCoupling, [24 x i8], %struct.SpectralBandReplication }
%struct.SingleChannelElement = type { %struct.IndividualChannelStream, %struct.TemporalNoiseShaping, %struct.Pulse, [128 x i32], [128 x i32], [120 x i32], [120 x float], [128 x i32], [128 x i8], [128 x i8], [128 x float], [128 x float], [4 x i8], [1024 x float], [1024 x float], [1536 x float], [2048 x float], [3072 x float], [1024 x float], [1024 x float], [672 x %struct.PredictorState], float*, [24 x i8] }
%struct.IndividualChannelStream = type { i8, [2 x i32], [2 x i8], i32, [8 x i8], %struct.LongTermPrediction, i16*, i8*, i32, i32, i32, i32, i32, i32, [31 x i32], [41 x i8], [8 x i8], float }
%struct.LongTermPrediction = type { i8, i16, i32, float, [40 x i8] }
%struct.TemporalNoiseShaping = type { i32, [8 x i32], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x [20 x i32]]], [8 x [4 x [20 x float]]] }
%struct.Pulse = type { i32, i32, [4 x i32], [4 x i32] }
%struct.PredictorState = type { float, float, float, float, float, float, float, float }
%struct.ChannelCoupling = type { i32, i32, [8 x i32], [8 x i32], [8 x i32], [16 x [120 x float]] }
%struct.SpectralBandReplication = type { i32, i32, i32, i32, i32, %struct.SpectrumParameters, i32, i32, i32, i32, i32, i32, [5 x i32], [2 x i32], [2 x i32], i32, i32, [2 x %struct.SBRData], %struct.PSContext, [2 x i32], i32, i32, [49 x i16], [25 x i16], [49 x i16], [6 x i16], [30 x i16], i32, [6 x i8], [6 x i8], [32 x [40 x [2 x float]]], [64 x [40 x [2 x float]]], [2 x [2 x [38 x [64 x float]]]], [64 x [2 x float]], [64 x [2 x float]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x i8]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x float]], [16 x i8], [5 x [64 x float]], %struct.FFTContext, %struct.FFTContext, %struct.SBRDSPContext, %struct.AACSBRContext, [16 x i8] }
%struct.SpectrumParameters = type { i8, i8, i8, i8, i8, i8 }
%struct.SBRData = type { i32, i32, i32, [7 x i8], i32, [5 x i8], [2 x i8], [2 x [5 x i8]], [48 x i8], i32, [2304 x float], [1312 x float], i32, [2 x i32], [5 x float], [2 x [32 x [32 x [2 x float]]]], i32, [12 x i8], [2 x [38 x [64 x [2 x float]]]], [42 x [48 x float]], [42 x [48 x float]], [8 x [48 x i8]], [6 x [48 x i8]], [6 x [48 x float]], [3 x [5 x i8]], [3 x [5 x float]], [8 x i8], i8, [3 x i8], i32, i32, [16 x i8] }
%struct.PSContext = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], i32, i32, [4 x i8], [5 x [44 x [2 x float]]], [91 x [46 x [2 x float]]], [50 x [3 x [37 x [2 x float]]]], [34 x float], [8 x i8], [34 x float], [8 x i8], [34 x float], [8 x i8], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [91 x [32 x [2 x float]]], [91 x [32 x [2 x float]]], [34 x i8], [34 x i8], %struct.PSDSPContext, [8 x i8] }
%struct.PSDSPContext = type { void (float*, [2 x float]*, i32)*, void ([2 x float]*, [2 x float]*, float*, i32)*, void ([2 x float]*, [2 x float]*, [8 x [2 x float]]*, i64, i32)*, void ([32 x [2 x float]]*, [38 x [64 x float]]*, i32, i32)*, void ([38 x [64 x float]]*, [32 x [2 x float]]*, i32, i32)*, void ([2 x float]*, [2 x float]*, [37 x [2 x float]]*, float*, [2 x float]*, float*, float, i32)*, [2 x void ([2 x float]*, [2 x float]*, [4 x float]*, [4 x float]*, i32)*] }
%struct.SBRDSPContext = type { void (float*)*, float ([2 x float]*, i32)*, void (float*)*, void (float*)*, void ([2 x float]*, float*)*, void (float*, float*)*, void (float*, float*, float*)*, void ([2 x float]*, [2 x [2 x float]]*)*, void ([2 x float]*, [2 x float]*, float*, float*, float, i32, i32)*, void ([2 x float]*, [40 x [2 x float]]*, float*, i32, i64)*, [4 x void ([2 x float]*, float*, float*, i32, i32, i32)*] }
%struct.AACSBRContext = type { i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x float]]*, [32 x [32 x [2 x float]]]*, i32)*, void ([64 x [2 x float]]*, [40 x [2 x float]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)*, i32 (%struct.SpectralBandReplication*, [38 x [64 x float]]*, [64 x [2 x float]]*, [64 x [2 x float]]*, [40 x [2 x float]]*, i32)*, void (%struct.SBRDSPContext*, [2 x float]*, [2 x float]*, [40 x [2 x float]]*, i32)* }
%struct.AACContext = type { %struct.AVClass*, %struct.AVCodecContext*, %struct.AVFrame*, i32, %struct.DynamicRangeControl, [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]], i32, i32, [1024 x float], %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.MDCT15Context*, %struct.MDCT15Context*, %struct.MDCT15Context*, %struct.AVFloatDSPContext*, i32, [64 x %struct.SingleChannelElement*], i32, i32, [16 x i8], [128 x float], [2 x %struct.OutputConfiguration], i32, i32, i32, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (%struct.AACContext*, float*, float*, %struct.IndividualChannelStream*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (i32*, i32)*, void (i32*, i32*, i32, i32, i32, i8*)*, [8 x i8] }
%struct.DynamicRangeControl = type { i32, [17 x i32], [17 x i32], [64 x i32], i32, i32, [17 x i32], i32 }
%struct.MDCT15Context = type { i32, i32, i32, i32, i32*, i32*, %struct.FFTContext, %struct.FFTComplex*, %struct.FFTComplex*, [64 x %struct.FFTComplex], void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, i64)*, void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, i32*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)* }
%struct.OutputConfiguration = type { %struct.MPEG4AudioConfig, [64 x [3 x i8]], i32, i32, i64, i32 }
%struct.MPEG4AudioConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FFPsyContext = type { %struct.AVCodecContext*, %struct.FFPsyModel*, %struct.FFPsyChannel*, %struct.FFPsyChannelGroup*, i32, i32, i8**, i32*, i32, %struct.anon, i8* }
%struct.FFPsyModel = type { i8*, i32 (%struct.FFPsyContext*)*, void (%struct.FFPsyWindowInfo*, %struct.FFPsyContext*, float*, float*, i32, i32)*, void (%struct.FFPsyContext*, i32, float**, %struct.FFPsyWindowInfo*)*, void (%struct.FFPsyContext*)* }
%struct.FFPsyWindowInfo = type { [3 x i32], i32, i32, [8 x i32], [8 x float], i32* }
%struct.FFPsyChannel = type { [128 x %struct.FFPsyBand], float }
%struct.FFPsyBand = type { i32, float, float, float }
%struct.FFPsyChannelGroup = type { [20 x %struct.FFPsyChannel*], i8, [128 x i8] }
%struct.anon = type { i32, i32, i32 }
%struct.FFPsyPreprocessContext = type opaque
%struct.AudioFrameQueue = type { %struct.AVCodecContext*, i32, i32, %struct.AudioFrame*, i32, i32 }
%struct.AudioFrame = type { i64, i32 }
%struct.AACQuantizeBandCostCacheEntry = type { float, float, i32, i8, i8, i16 }
%struct.anon.0 = type { float* }
%union.unaligned_32 = type { i32 }

@.str = private unnamed_addr constant [4 x i8] c"aac\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"AAC (Advanced Audio Coding)\00", align 1
@mpeg4audio_sample_rates = internal constant [16 x i32] [i32 96000, i32 88200, i32 64000, i32 48000, i32 44100, i32 32000, i32 24000, i32 22050, i32 16000, i32 12000, i32 11025, i32 8000, i32 7350, i32 0, i32 0, i32 0], align 16
@.compoundliteral = internal constant [2 x i32] [i32 8, i32 -1], align 4
@aacenc_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([12 x %struct.AVOption], [12 x %struct.AVOption]* @aacenc_options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@aac_encode_defaults = internal constant [2 x %struct.AVCodecDefault] [%struct.AVCodecDefault { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0) }, %struct.AVCodecDefault zeroinitializer], align 16
@ff_aac_encoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86018, i32 96, %struct.AVRational* null, i32* null, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @mpeg4audio_sample_rates, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* @aacenc_class, %struct.AVProfile* null, i8* null, i32 567488, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* getelementptr inbounds ([2 x %struct.AVCodecDefault], [2 x %struct.AVCodecDefault]* @aac_encode_defaults, i32 0, i32 0), void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @aac_encode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* @aac_encode_frame, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*)* @aac_encode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 1, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c"AAC encoder\00", align 1
@aacenc_options = internal constant [12 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i32 8, i32 1, %union.anon { i64 2 }, double 0.000000e+00, double 2.000000e+00, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i32 0, i32 0), i32 32, i32 18, %union.anon { i64 -1 }, double -1.000000e+00, double 1.000000e+00, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 36, i32 18, %union.anon { i64 1 }, double -1.000000e+00, double 1.000000e+00, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0), i32 12, i32 18, %union.anon { i64 1 }, double -1.000000e+00, double 1.000000e+00, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i32 0, i32 0), i32 16, i32 18, %union.anon { i64 1 }, double -1.000000e+00, double 1.000000e+00, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i32 0, i32 0), i32 20, i32 18, %union.anon zeroinitializer, double -1.000000e+00, double 1.000000e+00, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i32 0, i32 0), i32 28, i32 18, %union.anon zeroinitializer, double -1.000000e+00, double 1.000000e+00, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i32 0, i32 0), i32 24, i32 18, %union.anon zeroinitializer, double -1.000000e+00, double 1.000000e+00, i32 9, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.3 = private unnamed_addr constant [10 x i8] c"aac_coder\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"Coding algorithm\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"coder\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"anmr\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"ANMR method\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"twoloop\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"Two loop searching method\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"Default fast search\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"aac_ms\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"Force M/S stereo coding\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"aac_is\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"Intensity stereo coding\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"aac_pns\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"Perceptual noise substitution\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"aac_tns\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"Temporal noise shaping\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"aac_ltp\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"Long term prediction\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"aac_pred\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"AAC-Main prediction\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"aac_pce\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"Forces the use of PCEs\00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@aac_normal_chan_layouts = internal constant [7 x i64] [i64 4, i64 3, i64 7, i64 263, i64 55, i64 63, i64 1599], align 16
@aac_pce_configs = internal constant [29 x %struct.AACPCEInfo] [%struct.AACPCEInfo { i64 4, [4 x i32] [i32 1, i32 0, i32 0, i32 0], [3 x [8 x i32]] zeroinitializer, [4 x [8 x i32]] zeroinitializer, [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] zeroinitializer }, %struct.AACPCEInfo { i64 3, [4 x i32] [i32 1, i32 0, i32 0, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] zeroinitializer], [4 x [8 x i32]] zeroinitializer, [16 x i8] c"\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 11, [4 x i32] [i32 1, i32 0, i32 0, i32 1], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] zeroinitializer], [4 x [8 x i32]] zeroinitializer, [16 x i8] c"\02\01\03\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 259, [4 x i32] [i32 1, i32 0, i32 1, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] zeroinitializer], [4 x [8 x i32]] zeroinitializer, [16 x i8] c"\02\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 7, [4 x i32] [i32 2, i32 0, i32 0, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] zeroinitializer], [4 x [8 x i32]] zeroinitializer, [16 x i8] c"\02\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 15, [4 x i32] [i32 2, i32 0, i32 0, i32 1], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] zeroinitializer], [4 x [8 x i32]] zeroinitializer, [16 x i8] c"\03\01\00\03\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 263, [4 x i32] [i32 2, i32 0, i32 1, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] zeroinitializer], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\03\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 271, [4 x i32] [i32 2, i32 1, i32 1, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] zeroinitializer], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\04\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\00\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 1539, [4 x i32] [i32 1, i32 1, i32 0, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] zeroinitializer], [16 x i8] c"\02\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 51, [4 x i32] [i32 1, i32 0, i32 1, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\02\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 1543, [4 x i32] [i32 2, i32 1, i32 0, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] zeroinitializer], [16 x i8] c"\03\01\00\01\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\00\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 1551, [4 x i32] [i32 2, i32 1, i32 1, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\04\01\00\00\01\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 55, [4 x i32] [i32 2, i32 0, i32 1, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\03\01\00\01\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\00\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 63, [4 x i32] [i32 2, i32 1, i32 1, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\04\01\00\00\01\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 1799, [4 x i32] [i32 2, i32 1, i32 1, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\04\01\00\01\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 1731, [4 x i32] [i32 2, i32 1, i32 0, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [4 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] zeroinitializer], [16 x i8] c"\03\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 311, [4 x i32] [i32 2, i32 0, i32 2, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\04\01\00\01\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\00\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 1807, [4 x i32] [i32 2, i32 1, i32 2, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\05\01\00\00\01\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\06\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 319, [4 x i32] [i32 2, i32 1, i32 2, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\05\01\00\00\01\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\06\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 1739, [4 x i32] [i32 2, i32 1, i32 2, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\05\01\00\00\01\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\06\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 1591, [4 x i32] [i32 2, i32 1, i32 1, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\04\01\00\01\01\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\06\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 1735, [4 x i32] [i32 2, i32 1, i32 1, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\04\01\00\01\01\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\06\00\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 1599, [4 x i32] [i32 2, i32 1, i32 2, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\05\01\00\00\01\01\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\06\07\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 1743, [4 x i32] [i32 2, i32 1, i32 2, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\05\01\00\00\01\01\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\06\07\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 255, [4 x i32] [i32 2, i32 1, i32 2, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\05\01\00\00\01\01\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\06\07\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 1847, [4 x i32] [i32 2, i32 1, i32 2, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\05\01\00\01\01\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\06\07\00\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 3895, [4 x i32] [i32 2, i32 2, i32 2, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\06\01\00\01\00\01\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\06\07\08\00\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 4083, [4 x i32] [i32 2, i32 2, i32 2, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] [i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 3, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\06\01\01\01\00\01\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\00\00\00\00\00\00" }, %struct.AACPCEInfo { i64 6442710839, [4 x i32] [i32 4, i32 2, i32 4, i32 0], [3 x [8 x i32]] [[8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0]], [4 x [8 x i32]] [[8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 2, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 4, i32 2, i32 5, i32 3, i32 0, i32 0, i32 0, i32 0], [8 x i32] zeroinitializer], [16 x i8] c"\0A\01\00\01\00\01\01\01\00\01\00\00\00\00\00\00", [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F" }], align 16
@.str.28 = private unnamed_addr constant [33 x i8] c"Unsupported channel layout \22%s\22\0A\00", align 1
@.str.29 = private unnamed_addr constant [43 x i8] c"Using a PCE to encode channel layout \22%s\22\0A\00", align 1
@aac_chan_maps = internal constant [16 x [16 x i8]] [[16 x i8] zeroinitializer, [16 x i8] c"\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\02\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\02\00\01\03\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\02\00\01\03\04\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\02\00\01\04\05\03\00\00\00\00\00\00\00\00\00\00", [16 x i8] zeroinitializer, [16 x i8] c"\02\00\01\06\07\04\05\03\00\00\00\00\00\00\00\00", [16 x i8] zeroinitializer, [16 x i8] zeroinitializer, [16 x i8] zeroinitializer, [16 x i8] zeroinitializer, [16 x i8] zeroinitializer, [16 x i8] zeroinitializer, [16 x i8] zeroinitializer, [16 x i8] zeroinitializer], align 16
@aac_chan_configs = internal constant [16 x [6 x i8]] [[6 x i8] c"\01\00\00\00\00\00", [6 x i8] c"\01\01\00\00\00\00", [6 x i8] c"\02\00\01\00\00\00", [6 x i8] c"\03\00\01\00\00\00", [6 x i8] c"\03\00\01\01\00\00", [6 x i8] c"\04\00\01\01\03\00", [6 x i8] zeroinitializer, [6 x i8] c"\05\00\01\01\01\03", [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer, [6 x i8] zeroinitializer], align 16
@avpriv_mpeg4audio_sample_rates = external constant [16 x i32], align 16
@ff_aac_swb_size_1024_len = external constant i32, align 4
@ff_aac_swb_size_128_len = external constant i32, align 4
@.str.30 = private unnamed_addr constant [28 x i8] c"Unsupported sample rate %d\0A\00", align 1
@.str.31 = private unnamed_addr constant [60 x i8] c"Too many bits %f > %d per frame requested, clamping to max\0A\00", align 1
@aacenc_profiles = internal constant [4 x i32] [i32 0, i32 1, i32 3, i32 128], align 16
@.str.32 = private unnamed_addr constant [60 x i8] c"Main prediction unavailable in the \22mpeg2_aac_low\22 profile\0A\00", align 1
@.str.33 = private unnamed_addr constant [59 x i8] c"LTP prediction unavailable in the \22mpeg2_aac_low\22 profile\0A\00", align 1
@.str.34 = private unnamed_addr constant [61 x i8] c"PNS unavailable in the \22mpeg2_aac_low\22 profile, turning off\0A\00", align 1
@.str.35 = private unnamed_addr constant [54 x i8] c"Main prediction unavailable in the \22aac_ltp\22 profile\0A\00", align 1
@.str.36 = private unnamed_addr constant [54 x i8] c"LTP prediction unavailable in the \22aac_main\22 profile\0A\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"Chainging profile to \22aac_ltp\22\0A\00", align 1
@.str.38 = private unnamed_addr constant [33 x i8] c"Chainging profile to \22aac_main\22\0A\00", align 1
@ff_aac_coders = external constant [0 x %struct.AACCoefficientsEncoder], align 8
@.str.39 = private unnamed_addr constant [70 x i8] c"The ANMR coder is considered experimental, add -strict -2 to enable!\0A\00", align 1
@.str.40 = private unnamed_addr constant [77 x i8] c"The LPT profile requires experimental compliance, add -strict -2 to enable!\0A\00", align 1
@ff_aac_swb_size_1024 = external global [0 x i8*], align 8
@ff_aac_swb_size_128 = external global [0 x i8*], align 8
@ff_aac_num_swb_1024 = external constant [0 x i8], align 1
@ff_aac_num_swb_128 = external constant [0 x i8], align 1
@aac_table_init = internal global i32 0, align 4
@ff_aac_kbd_long_1024 = external global [1024 x float], align 32
@ff_aac_kbd_short_128 = external global [128 x float], align 32
@.str.41 = private unnamed_addr constant [25 x i8] c"Cannot allocate memory.\0A\00", align 1
@.str.42 = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"Lavc\00", align 1
@.str.44 = private unnamed_addr constant [14 x i8] c"Lavc58.47.102\00", align 1
@.str.45 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.46 = private unnamed_addr constant [24 x i8] c"s->buf_ptr < s->buf_end\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"libavcodec/put_bits.h\00", align 1
@ff_aac_tableinit.exp2_lut = internal constant [16 x float] [float 1.000000e+00, float 0x3FF0B55860000000, float 0x3FF172B840000000, float 0x3FF2387A60000000, float 0x3FF306FE00000000, float 0x3FF3DEA640000000, float 0x3FF4BFDAE0000000, float 0x3FF5AB07E0000000, float 0x3FF6A09E60000000, float 0x3FF7A11480000000, float 0x3FF8ACE540000000, float 0x3FF9C49180000000, float 0x3FFAE89FA0000000, float 0x3FFC199BE0000000, float 0x3FFD5818E0000000, float 0x3FFEA4AFA0000000], align 16
@ff_aac_pow2sf_tab = external global [428 x float], align 16
@ff_aac_pow34sf_tab = external global [428 x float], align 16
@ff_swb_offset_128 = external constant [13 x i16*], align 16
@ff_swb_offset_1024 = external constant [13 x i16*], align 16
@ff_tns_max_bands_128 = external constant [13 x i8], align 1
@ff_tns_max_bands_1024 = external constant [13 x i8], align 1
@apply_window = internal constant [4 x void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)*] [void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)* @apply_only_long_window, void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)* @apply_long_start_window, void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)* @apply_eight_short_window, void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)* @apply_long_stop_window], align 16
@.str.48 = private unnamed_addr constant [33 x i8] c"Input contains (near) NaN/+-Inf\0A\00", align 1
@ff_sine_1024 = external global [1024 x float], align 32
@ff_sine_128 = external global [128 x float], align 32
@.str.49 = private unnamed_addr constant [25 x i8] c"diff >= 0 && diff <= 120\00", align 1
@.str.50 = private unnamed_addr constant [20 x i8] c"libavcodec/aacenc.c\00", align 1
@ff_aac_scalefactor_bits = external constant [121 x i8], align 16
@ff_aac_scalefactor_code = external constant [121 x i32], align 16
@.str.51 = private unnamed_addr constant [12 x i8] c"Qavg: %.3f\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @ff_quantize_band_cost_cache_init(%struct.AACEncContext* %s) #0 !dbg !2040 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !2879, metadata !2880), !dbg !2881
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !2882
  %quantize_band_cost_cache_generation = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %0, i32 0, i32 30, !dbg !2883
  %1 = load i16, i16* %quantize_band_cost_cache_generation, align 32, !dbg !2884
  %inc = add i16 %1, 1, !dbg !2884
  store i16 %inc, i16* %quantize_band_cost_cache_generation, align 32, !dbg !2884
  %2 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !2885
  %quantize_band_cost_cache_generation1 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %2, i32 0, i32 30, !dbg !2887
  %3 = load i16, i16* %quantize_band_cost_cache_generation1, align 32, !dbg !2887
  %conv = zext i16 %3 to i32, !dbg !2885
  %cmp = icmp eq i32 %conv, 0, !dbg !2888
  br i1 %cmp, label %if.then, label %if.end, !dbg !2889

if.then:                                          ; preds = %entry
  %4 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !2890
  %quantize_band_cost_cache = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %4, i32 0, i32 31, !dbg !2892
  %arraydecay = getelementptr inbounds [256 x [128 x %struct.AACQuantizeBandCostCacheEntry]], [256 x [128 x %struct.AACQuantizeBandCostCacheEntry]]* %quantize_band_cost_cache, i32 0, i32 0, !dbg !2893
  %5 = bitcast [128 x %struct.AACQuantizeBandCostCacheEntry]* %arraydecay to i8*, !dbg !2893
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 524288, i32 4, i1 false), !dbg !2893
  %6 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !2894
  %quantize_band_cost_cache_generation3 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %6, i32 0, i32 30, !dbg !2895
  store i16 1, i16* %quantize_band_cost_cache_generation3, align 32, !dbg !2896
  br label %if.end, !dbg !2897

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2898
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @aac_encode_init(%struct.AVCodecContext* %avctx) #3 !dbg !2899 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.AACEncContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %sizes = alloca [2 x i8*], align 16
  %grouping = alloca [16 x i8], align 16
  %lengths = alloca [2 x i32], align 4
  %buf = alloca [64 x i8], align 16
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2900, metadata !2880), !dbg !2901
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s, metadata !2902, metadata !2880), !dbg !2905
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2906
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2907
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2907
  %2 = bitcast i8* %1 to %struct.AACEncContext*, !dbg !2906
  store %struct.AACEncContext* %2, %struct.AACEncContext** %s, align 8, !dbg !2905
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2908, metadata !2880), !dbg !2909
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2910, metadata !2880), !dbg !2911
  store i32 0, i32* %ret, align 4, !dbg !2911
  call void @llvm.dbg.declare(metadata [2 x i8*]* %sizes, metadata !2912, metadata !2880), !dbg !2914
  call void @llvm.dbg.declare(metadata [16 x i8]* %grouping, metadata !2915, metadata !2880), !dbg !2916
  call void @llvm.dbg.declare(metadata [2 x i32]* %lengths, metadata !2917, metadata !2880), !dbg !2918
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !2919
  %last_frame_pb_count = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %3, i32 0, i32 23, !dbg !2920
  store i32 0, i32* %last_frame_pb_count, align 4, !dbg !2921
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2922
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 85, !dbg !2923
  store i32 1024, i32* %frame_size, align 4, !dbg !2924
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2925
  %initial_padding = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 162, !dbg !2926
  store i32 1024, i32* %initial_padding, align 4, !dbg !2927
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2928
  %global_quality = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 11, !dbg !2929
  %7 = load i32, i32* %global_quality, align 4, !dbg !2929
  %cmp = icmp sgt i32 %7, 0, !dbg !2930
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2928

cond.true:                                        ; preds = %entry
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2931
  %global_quality1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 11, !dbg !2933
  %9 = load i32, i32* %global_quality1, align 4, !dbg !2933
  br label %cond.end, !dbg !2934

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2935

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ 120, %cond.false ], !dbg !2937
  %conv = sitofp i32 %cond to float, !dbg !2937
  %10 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !2939
  %lambda = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %10, i32 0, i32 22, !dbg !2940
  store float %conv, float* %lambda, align 8, !dbg !2941
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2942
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 83, !dbg !2943
  %12 = load i32, i32* %channels, align 4, !dbg !2943
  %13 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !2944
  %channels2 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %13, i32 0, i32 13, !dbg !2945
  store i32 %12, i32* %channels2, align 4, !dbg !2946
  %14 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !2947
  %needs_pce = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %14, i32 0, i32 9, !dbg !2948
  store i32 1, i32* %needs_pce, align 4, !dbg !2949
  store i32 0, i32* %i, align 4, !dbg !2950
  br label %for.cond, !dbg !2952

for.cond:                                         ; preds = %for.inc, %cond.end
  %15 = load i32, i32* %i, align 4, !dbg !2953
  %conv3 = sext i32 %15 to i64, !dbg !2953
  %cmp4 = icmp ult i64 %conv3, 7, !dbg !2956
  br i1 %cmp4, label %for.body, label %for.end, !dbg !2957

for.body:                                         ; preds = %for.cond
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2958
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 89, !dbg !2961
  %17 = load i64, i64* %channel_layout, align 8, !dbg !2961
  %18 = load i32, i32* %i, align 4, !dbg !2962
  %idxprom = sext i32 %18 to i64, !dbg !2963
  %arrayidx = getelementptr inbounds [7 x i64], [7 x i64]* @aac_normal_chan_layouts, i64 0, i64 %idxprom, !dbg !2963
  %19 = load i64, i64* %arrayidx, align 8, !dbg !2963
  %cmp6 = icmp eq i64 %17, %19, !dbg !2964
  br i1 %cmp6, label %if.then, label %if.end, !dbg !2965

if.then:                                          ; preds = %for.body
  %20 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !2966
  %options = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %20, i32 0, i32 1, !dbg !2968
  %pce = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options, i32 0, i32 4, !dbg !2969
  %21 = load i32, i32* %pce, align 8, !dbg !2969
  %22 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !2970
  %needs_pce8 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %22, i32 0, i32 9, !dbg !2971
  store i32 %21, i32* %needs_pce8, align 4, !dbg !2972
  br label %for.end, !dbg !2973

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2974

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %i, align 4, !dbg !2975
  %inc = add nsw i32 %23, 1, !dbg !2975
  store i32 %inc, i32* %i, align 4, !dbg !2975
  br label %for.cond, !dbg !2977, !llvm.loop !2978

for.end:                                          ; preds = %if.then, %for.cond
  %24 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !2980
  %needs_pce9 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %24, i32 0, i32 9, !dbg !2982
  %25 = load i32, i32* %needs_pce9, align 4, !dbg !2982
  %tobool = icmp ne i32 %25, 0, !dbg !2980
  br i1 %tobool, label %if.then10, label %if.else, !dbg !2983

if.then10:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !2984, metadata !2880), !dbg !2987
  store i32 0, i32* %i, align 4, !dbg !2988
  br label %for.cond11, !dbg !2990

for.cond11:                                       ; preds = %for.inc23, %if.then10
  %26 = load i32, i32* %i, align 4, !dbg !2991
  %conv12 = sext i32 %26 to i64, !dbg !2991
  %cmp13 = icmp ult i64 %conv12, 29, !dbg !2994
  br i1 %cmp13, label %for.body15, label %for.end25, !dbg !2995

for.body15:                                       ; preds = %for.cond11
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2996
  %channel_layout16 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 89, !dbg !2998
  %28 = load i64, i64* %channel_layout16, align 8, !dbg !2998
  %29 = load i32, i32* %i, align 4, !dbg !2999
  %idxprom17 = sext i32 %29 to i64, !dbg !3000
  %arrayidx18 = getelementptr inbounds [29 x %struct.AACPCEInfo], [29 x %struct.AACPCEInfo]* @aac_pce_configs, i64 0, i64 %idxprom17, !dbg !3000
  %layout = getelementptr inbounds %struct.AACPCEInfo, %struct.AACPCEInfo* %arrayidx18, i32 0, i32 0, !dbg !3001
  %30 = load i64, i64* %layout, align 8, !dbg !3001
  %cmp19 = icmp eq i64 %28, %30, !dbg !3002
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !3003

if.then21:                                        ; preds = %for.body15
  br label %for.end25, !dbg !3004

if.end22:                                         ; preds = %for.body15
  br label %for.inc23, !dbg !3005

for.inc23:                                        ; preds = %if.end22
  %31 = load i32, i32* %i, align 4, !dbg !3007
  %inc24 = add nsw i32 %31, 1, !dbg !3007
  store i32 %inc24, i32* %i, align 4, !dbg !3007
  br label %for.cond11, !dbg !3009, !llvm.loop !3010

for.end25:                                        ; preds = %if.then21, %for.cond11
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i32 0, i32 0, !dbg !3012
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3013
  %channel_layout26 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %32, i32 0, i32 89, !dbg !3014
  %33 = load i64, i64* %channel_layout26, align 8, !dbg !3014
  call void @av_get_channel_layout_string(i8* %arraydecay, i32 64, i32 -1, i64 %33), !dbg !3015
  %34 = load i32, i32* %i, align 4, !dbg !3016
  %conv27 = sext i32 %34 to i64, !dbg !3016
  %cmp28 = icmp eq i64 %conv27, 29, !dbg !3018
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !3019

if.then30:                                        ; preds = %for.end25
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3020
  %36 = bitcast %struct.AVCodecContext* %35 to i8*, !dbg !3020
  %arraydecay31 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i32 0, i32 0, !dbg !3023
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.28, i32 0, i32 0), i8* %arraydecay31), !dbg !3024
  store i32 -22, i32* %retval, align 4, !dbg !3025
  br label %return, !dbg !3025

if.end32:                                         ; preds = %for.end25
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3026
  %38 = bitcast %struct.AVCodecContext* %37 to i8*, !dbg !3026
  %arraydecay33 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i32 0, i32 0, !dbg !3027
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 32, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.29, i32 0, i32 0), i8* %arraydecay33), !dbg !3028
  %39 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3029
  %pce34 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %39, i32 0, i32 6, !dbg !3030
  %40 = load i32, i32* %i, align 4, !dbg !3031
  %idxprom35 = sext i32 %40 to i64, !dbg !3032
  %arrayidx36 = getelementptr inbounds [29 x %struct.AACPCEInfo], [29 x %struct.AACPCEInfo]* @aac_pce_configs, i64 0, i64 %idxprom35, !dbg !3032
  %41 = bitcast %struct.AACPCEInfo* %pce34 to i8*, !dbg !3032
  %42 = bitcast %struct.AACPCEInfo* %arrayidx36 to i8*, !dbg !3032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 280, i32 8, i1 false), !dbg !3032
  %43 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3033
  %pce37 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %43, i32 0, i32 6, !dbg !3034
  %reorder_map = getelementptr inbounds %struct.AACPCEInfo, %struct.AACPCEInfo* %pce37, i32 0, i32 5, !dbg !3035
  %arraydecay38 = getelementptr inbounds [16 x i8], [16 x i8]* %reorder_map, i32 0, i32 0, !dbg !3033
  %44 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3036
  %reorder_map39 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %44, i32 0, i32 14, !dbg !3037
  store i8* %arraydecay38, i8** %reorder_map39, align 8, !dbg !3038
  %45 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3039
  %pce40 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %45, i32 0, i32 6, !dbg !3040
  %config_map = getelementptr inbounds %struct.AACPCEInfo, %struct.AACPCEInfo* %pce40, i32 0, i32 4, !dbg !3041
  %arraydecay41 = getelementptr inbounds [16 x i8], [16 x i8]* %config_map, i32 0, i32 0, !dbg !3039
  %46 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3042
  %chan_map = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %46, i32 0, i32 15, !dbg !3043
  store i8* %arraydecay41, i8** %chan_map, align 16, !dbg !3044
  br label %if.end53, !dbg !3045

if.else:                                          ; preds = %for.end
  %47 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3046
  %channels42 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %47, i32 0, i32 13, !dbg !3048
  %48 = load i32, i32* %channels42, align 4, !dbg !3048
  %sub = sub nsw i32 %48, 1, !dbg !3049
  %idxprom43 = sext i32 %sub to i64, !dbg !3050
  %arrayidx44 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @aac_chan_maps, i64 0, i64 %idxprom43, !dbg !3050
  %arraydecay45 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx44, i32 0, i32 0, !dbg !3050
  %49 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3051
  %reorder_map46 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %49, i32 0, i32 14, !dbg !3052
  store i8* %arraydecay45, i8** %reorder_map46, align 8, !dbg !3053
  %50 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3054
  %channels47 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %50, i32 0, i32 13, !dbg !3055
  %51 = load i32, i32* %channels47, align 4, !dbg !3055
  %sub48 = sub nsw i32 %51, 1, !dbg !3056
  %idxprom49 = sext i32 %sub48 to i64, !dbg !3057
  %arrayidx50 = getelementptr inbounds [16 x [6 x i8]], [16 x [6 x i8]]* @aac_chan_configs, i64 0, i64 %idxprom49, !dbg !3057
  %arraydecay51 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx50, i32 0, i32 0, !dbg !3057
  %52 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3058
  %chan_map52 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %52, i32 0, i32 15, !dbg !3059
  store i8* %arraydecay51, i8** %chan_map52, align 16, !dbg !3060
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.end32
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3061
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 9, !dbg !3063
  %54 = load i64, i64* %bit_rate, align 8, !dbg !3063
  %tobool54 = icmp ne i64 %54, 0, !dbg !3061
  br i1 %tobool54, label %if.end85, label %if.then55, !dbg !3064

if.then55:                                        ; preds = %if.end53
  store i32 1, i32* %i, align 4, !dbg !3065
  br label %for.cond56, !dbg !3068

for.cond56:                                       ; preds = %for.inc82, %if.then55
  %55 = load i32, i32* %i, align 4, !dbg !3069
  %56 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3072
  %chan_map57 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %56, i32 0, i32 15, !dbg !3073
  %57 = load i8*, i8** %chan_map57, align 16, !dbg !3073
  %arrayidx58 = getelementptr inbounds i8, i8* %57, i64 0, !dbg !3072
  %58 = load i8, i8* %arrayidx58, align 1, !dbg !3072
  %conv59 = zext i8 %58 to i32, !dbg !3072
  %cmp60 = icmp sle i32 %55, %conv59, !dbg !3074
  br i1 %cmp60, label %for.body62, label %for.end84, !dbg !3075

for.body62:                                       ; preds = %for.cond56
  %59 = load i32, i32* %i, align 4, !dbg !3076
  %idxprom63 = sext i32 %59 to i64, !dbg !3078
  %60 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3078
  %chan_map64 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %60, i32 0, i32 15, !dbg !3079
  %61 = load i8*, i8** %chan_map64, align 16, !dbg !3079
  %arrayidx65 = getelementptr inbounds i8, i8* %61, i64 %idxprom63, !dbg !3078
  %62 = load i8, i8* %arrayidx65, align 1, !dbg !3078
  %conv66 = zext i8 %62 to i32, !dbg !3078
  %cmp67 = icmp eq i32 %conv66, 1, !dbg !3080
  br i1 %cmp67, label %cond.true69, label %cond.false70, !dbg !3078

cond.true69:                                      ; preds = %for.body62
  br label %cond.end78, !dbg !3081

cond.false70:                                     ; preds = %for.body62
  %63 = load i32, i32* %i, align 4, !dbg !3083
  %idxprom71 = sext i32 %63 to i64, !dbg !3084
  %64 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3084
  %chan_map72 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %64, i32 0, i32 15, !dbg !3085
  %65 = load i8*, i8** %chan_map72, align 16, !dbg !3085
  %arrayidx73 = getelementptr inbounds i8, i8* %65, i64 %idxprom71, !dbg !3084
  %66 = load i8, i8* %arrayidx73, align 1, !dbg !3084
  %conv74 = zext i8 %66 to i32, !dbg !3084
  %cmp75 = icmp eq i32 %conv74, 3, !dbg !3086
  %cond77 = select i1 %cmp75, i32 16000, i32 69000, !dbg !3084
  br label %cond.end78, !dbg !3087

cond.end78:                                       ; preds = %cond.false70, %cond.true69
  %cond79 = phi i32 [ 128000, %cond.true69 ], [ %cond77, %cond.false70 ], !dbg !3089
  %conv80 = sext i32 %cond79 to i64, !dbg !3089
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3091
  %bit_rate81 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %67, i32 0, i32 9, !dbg !3092
  %68 = load i64, i64* %bit_rate81, align 8, !dbg !3093
  %add = add nsw i64 %68, %conv80, !dbg !3093
  store i64 %add, i64* %bit_rate81, align 8, !dbg !3093
  br label %for.inc82, !dbg !3094

for.inc82:                                        ; preds = %cond.end78
  %69 = load i32, i32* %i, align 4, !dbg !3095
  %inc83 = add nsw i32 %69, 1, !dbg !3095
  store i32 %inc83, i32* %i, align 4, !dbg !3095
  br label %for.cond56, !dbg !3097, !llvm.loop !3098

for.end84:                                        ; preds = %for.cond56
  br label %if.end85, !dbg !3100

if.end85:                                         ; preds = %for.end84, %if.end53
  store i32 0, i32* %i, align 4, !dbg !3101
  br label %for.cond86, !dbg !3103

for.cond86:                                       ; preds = %for.inc96, %if.end85
  %70 = load i32, i32* %i, align 4, !dbg !3104
  %cmp87 = icmp slt i32 %70, 16, !dbg !3107
  br i1 %cmp87, label %for.body89, label %for.end98, !dbg !3108

for.body89:                                       ; preds = %for.cond86
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3109
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %71, i32 0, i32 82, !dbg !3111
  %72 = load i32, i32* %sample_rate, align 8, !dbg !3111
  %73 = load i32, i32* %i, align 4, !dbg !3112
  %idxprom90 = sext i32 %73 to i64, !dbg !3113
  %arrayidx91 = getelementptr inbounds [16 x i32], [16 x i32]* @avpriv_mpeg4audio_sample_rates, i64 0, i64 %idxprom90, !dbg !3113
  %74 = load i32, i32* %arrayidx91, align 4, !dbg !3113
  %cmp92 = icmp eq i32 %72, %74, !dbg !3114
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !3115

if.then94:                                        ; preds = %for.body89
  br label %for.end98, !dbg !3116

if.end95:                                         ; preds = %for.body89
  br label %for.inc96, !dbg !3117

for.inc96:                                        ; preds = %if.end95
  %75 = load i32, i32* %i, align 4, !dbg !3119
  %inc97 = add nsw i32 %75, 1, !dbg !3119
  store i32 %inc97, i32* %i, align 4, !dbg !3119
  br label %for.cond86, !dbg !3121, !llvm.loop !3122

for.end98:                                        ; preds = %if.then94, %for.cond86
  %76 = load i32, i32* %i, align 4, !dbg !3124
  %77 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3125
  %samplerate_index = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %77, i32 0, i32 12, !dbg !3126
  store i32 %76, i32* %samplerate_index, align 32, !dbg !3127
  %78 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3128
  %samplerate_index99 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %78, i32 0, i32 12, !dbg !3130
  %79 = load i32, i32* %samplerate_index99, align 32, !dbg !3130
  %cmp100 = icmp eq i32 %79, 16, !dbg !3131
  br i1 %cmp100, label %if.then109, label %lor.lhs.false, !dbg !3132

lor.lhs.false:                                    ; preds = %for.end98
  %80 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3133
  %samplerate_index102 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %80, i32 0, i32 12, !dbg !3135
  %81 = load i32, i32* %samplerate_index102, align 32, !dbg !3135
  %82 = load i32, i32* @ff_aac_swb_size_1024_len, align 4, !dbg !3136
  %cmp103 = icmp sge i32 %81, %82, !dbg !3137
  br i1 %cmp103, label %if.then109, label %lor.lhs.false105, !dbg !3138

lor.lhs.false105:                                 ; preds = %lor.lhs.false
  %83 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3139
  %samplerate_index106 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %83, i32 0, i32 12, !dbg !3141
  %84 = load i32, i32* %samplerate_index106, align 32, !dbg !3141
  %85 = load i32, i32* @ff_aac_swb_size_128_len, align 4, !dbg !3142
  %cmp107 = icmp sge i32 %84, %85, !dbg !3143
  br i1 %cmp107, label %if.then109, label %if.end111, !dbg !3144

if.then109:                                       ; preds = %lor.lhs.false105, %lor.lhs.false, %for.end98
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3145
  %87 = bitcast %struct.AVCodecContext* %86 to i8*, !dbg !3145
  %88 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3148
  %sample_rate110 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %88, i32 0, i32 82, !dbg !3149
  %89 = load i32, i32* %sample_rate110, align 8, !dbg !3149
  call void (i8*, i32, i8*, ...) @av_log(i8* %87, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i32 0, i32 0), i32 %89), !dbg !3150
  store i32 -22, i32* %retval, align 4, !dbg !3151
  br label %return, !dbg !3151

if.end111:                                        ; preds = %lor.lhs.false105
  %90 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3152
  %bit_rate112 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %90, i32 0, i32 9, !dbg !3154
  %91 = load i64, i64* %bit_rate112, align 8, !dbg !3154
  %conv113 = sitofp i64 %91 to double, !dbg !3152
  %mul = fmul double 1.024000e+03, %conv113, !dbg !3155
  %92 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3156
  %sample_rate114 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %92, i32 0, i32 82, !dbg !3157
  %93 = load i32, i32* %sample_rate114, align 8, !dbg !3157
  %conv115 = sitofp i32 %93 to double, !dbg !3156
  %div = fdiv double %mul, %conv115, !dbg !3158
  %94 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3159
  %channels116 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %94, i32 0, i32 13, !dbg !3160
  %95 = load i32, i32* %channels116, align 4, !dbg !3160
  %mul117 = mul nsw i32 6144, %95, !dbg !3161
  %conv118 = sitofp i32 %mul117 to double, !dbg !3162
  %cmp119 = fcmp ogt double %div, %conv118, !dbg !3163
  br i1 %cmp119, label %if.then121, label %if.end130, !dbg !3164

if.then121:                                       ; preds = %if.end111
  %96 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3165
  %97 = bitcast %struct.AVCodecContext* %96 to i8*, !dbg !3165
  %98 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3168
  %bit_rate122 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %98, i32 0, i32 9, !dbg !3169
  %99 = load i64, i64* %bit_rate122, align 8, !dbg !3169
  %conv123 = sitofp i64 %99 to double, !dbg !3168
  %mul124 = fmul double 1.024000e+03, %conv123, !dbg !3170
  %100 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3171
  %sample_rate125 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %100, i32 0, i32 82, !dbg !3172
  %101 = load i32, i32* %sample_rate125, align 8, !dbg !3172
  %conv126 = sitofp i32 %101 to double, !dbg !3171
  %div127 = fdiv double %mul124, %conv126, !dbg !3173
  %102 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3174
  %channels128 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %102, i32 0, i32 13, !dbg !3175
  %103 = load i32, i32* %channels128, align 4, !dbg !3175
  %mul129 = mul nsw i32 6144, %103, !dbg !3176
  call void (i8*, i32, i8*, ...) @av_log(i8* %97, i32 24, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.31, i32 0, i32 0), double %div127, i32 %mul129), !dbg !3177
  br label %if.end130, !dbg !3178

if.end130:                                        ; preds = %if.then121, %if.end111
  %104 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3179
  %channels131 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %104, i32 0, i32 13, !dbg !3180
  %105 = load i32, i32* %channels131, align 4, !dbg !3180
  %mul132 = mul nsw i32 6144, %105, !dbg !3181
  %conv133 = sitofp i32 %mul132 to double, !dbg !3182
  %div134 = fdiv double %conv133, 1.024000e+03, !dbg !3183
  %106 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3184
  %sample_rate135 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %106, i32 0, i32 82, !dbg !3185
  %107 = load i32, i32* %sample_rate135, align 8, !dbg !3185
  %conv136 = sitofp i32 %107 to double, !dbg !3184
  %mul137 = fmul double %div134, %conv136, !dbg !3186
  %108 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3187
  %bit_rate138 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %108, i32 0, i32 9, !dbg !3188
  %109 = load i64, i64* %bit_rate138, align 8, !dbg !3188
  %conv139 = sitofp i64 %109 to double, !dbg !3189
  %cmp140 = fcmp ogt double %mul137, %conv139, !dbg !3190
  br i1 %cmp140, label %cond.true142, label %cond.false145, !dbg !3191

cond.true142:                                     ; preds = %if.end130
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3192
  %bit_rate143 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %110, i32 0, i32 9, !dbg !3193
  %111 = load i64, i64* %bit_rate143, align 8, !dbg !3193
  %conv144 = sitofp i64 %111 to double, !dbg !3194
  br label %cond.end153, !dbg !3195

cond.false145:                                    ; preds = %if.end130
  %112 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3196
  %channels146 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %112, i32 0, i32 13, !dbg !3197
  %113 = load i32, i32* %channels146, align 4, !dbg !3197
  %mul147 = mul nsw i32 6144, %113, !dbg !3198
  %conv148 = sitofp i32 %mul147 to double, !dbg !3199
  %div149 = fdiv double %conv148, 1.024000e+03, !dbg !3200
  %114 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3201
  %sample_rate150 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %114, i32 0, i32 82, !dbg !3202
  %115 = load i32, i32* %sample_rate150, align 8, !dbg !3202
  %conv151 = sitofp i32 %115 to double, !dbg !3201
  %mul152 = fmul double %div149, %conv151, !dbg !3203
  br label %cond.end153, !dbg !3204

cond.end153:                                      ; preds = %cond.false145, %cond.true142
  %cond154 = phi double [ %conv144, %cond.true142 ], [ %mul152, %cond.false145 ], !dbg !3205
  %conv155 = fptosi double %cond154 to i64, !dbg !3206
  %116 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3207
  %bit_rate156 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %116, i32 0, i32 9, !dbg !3208
  store i64 %conv155, i64* %bit_rate156, align 8, !dbg !3209
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3210
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %117, i32 0, i32 153, !dbg !3211
  %118 = load i32, i32* %profile, align 4, !dbg !3211
  %cmp157 = icmp eq i32 %118, -99, !dbg !3212
  br i1 %cmp157, label %cond.true159, label %cond.false160, !dbg !3210

cond.true159:                                     ; preds = %cond.end153
  br label %cond.end162, !dbg !3213

cond.false160:                                    ; preds = %cond.end153
  %119 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3214
  %profile161 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %119, i32 0, i32 153, !dbg !3215
  %120 = load i32, i32* %profile161, align 4, !dbg !3215
  br label %cond.end162, !dbg !3216

cond.end162:                                      ; preds = %cond.false160, %cond.true159
  %cond163 = phi i32 [ 1, %cond.true159 ], [ %120, %cond.false160 ], !dbg !3217
  %121 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3218
  %profile164 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %121, i32 0, i32 153, !dbg !3219
  store i32 %cond163, i32* %profile164, align 4, !dbg !3220
  store i32 0, i32* %i, align 4, !dbg !3221
  br label %for.cond165, !dbg !3223

for.cond165:                                      ; preds = %for.inc177, %cond.end162
  %122 = load i32, i32* %i, align 4, !dbg !3224
  %conv166 = sext i32 %122 to i64, !dbg !3224
  %cmp167 = icmp ult i64 %conv166, 4, !dbg !3227
  br i1 %cmp167, label %for.body169, label %for.end179, !dbg !3228

for.body169:                                      ; preds = %for.cond165
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3229
  %profile170 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %123, i32 0, i32 153, !dbg !3231
  %124 = load i32, i32* %profile170, align 4, !dbg !3231
  %125 = load i32, i32* %i, align 4, !dbg !3232
  %idxprom171 = sext i32 %125 to i64, !dbg !3233
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* @aacenc_profiles, i64 0, i64 %idxprom171, !dbg !3233
  %126 = load i32, i32* %arrayidx172, align 4, !dbg !3233
  %cmp173 = icmp eq i32 %124, %126, !dbg !3234
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !3235

if.then175:                                       ; preds = %for.body169
  br label %for.end179, !dbg !3236

if.end176:                                        ; preds = %for.body169
  br label %for.inc177, !dbg !3237

for.inc177:                                       ; preds = %if.end176
  %127 = load i32, i32* %i, align 4, !dbg !3239
  %inc178 = add nsw i32 %127, 1, !dbg !3239
  store i32 %inc178, i32* %i, align 4, !dbg !3239
  br label %for.cond165, !dbg !3241, !llvm.loop !3242

for.end179:                                       ; preds = %if.then175, %for.cond165
  %128 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3244
  %profile180 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %128, i32 0, i32 153, !dbg !3246
  %129 = load i32, i32* %profile180, align 4, !dbg !3246
  %cmp181 = icmp eq i32 %129, 128, !dbg !3247
  br i1 %cmp181, label %if.then183, label %if.else199, !dbg !3248

if.then183:                                       ; preds = %for.end179
  %130 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3249
  %profile184 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %130, i32 0, i32 153, !dbg !3251
  store i32 1, i32* %profile184, align 4, !dbg !3252
  %131 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3253
  %options185 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %131, i32 0, i32 1, !dbg !3255
  %pred = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options185, i32 0, i32 5, !dbg !3256
  %132 = load i32, i32* %pred, align 4, !dbg !3256
  %tobool186 = icmp ne i32 %132, 0, !dbg !3253
  br i1 %tobool186, label %if.then187, label %if.end188, !dbg !3257

if.then187:                                       ; preds = %if.then183
  %133 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3258
  %134 = bitcast %struct.AVCodecContext* %133 to i8*, !dbg !3258
  call void (i8*, i32, i8*, ...) @av_log(i8* %134, i32 16, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.32, i32 0, i32 0)), !dbg !3261
  store i32 -22, i32* %retval, align 4, !dbg !3262
  br label %return, !dbg !3262

if.end188:                                        ; preds = %if.then183
  %135 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3263
  %options189 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %135, i32 0, i32 1, !dbg !3265
  %ltp = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options189, i32 0, i32 3, !dbg !3266
  %136 = load i32, i32* %ltp, align 4, !dbg !3266
  %tobool190 = icmp ne i32 %136, 0, !dbg !3263
  br i1 %tobool190, label %if.then191, label %if.end192, !dbg !3267

if.then191:                                       ; preds = %if.end188
  %137 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3268
  %138 = bitcast %struct.AVCodecContext* %137 to i8*, !dbg !3268
  call void (i8*, i32, i8*, ...) @av_log(i8* %138, i32 16, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.33, i32 0, i32 0)), !dbg !3271
  store i32 -22, i32* %retval, align 4, !dbg !3272
  br label %return, !dbg !3272

if.end192:                                        ; preds = %if.end188
  %139 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3273
  %options193 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %139, i32 0, i32 1, !dbg !3275
  %pns = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options193, i32 0, i32 1, !dbg !3276
  %140 = load i32, i32* %pns, align 4, !dbg !3276
  %tobool194 = icmp ne i32 %140, 0, !dbg !3273
  br i1 %tobool194, label %if.then195, label %if.end196, !dbg !3277

if.then195:                                       ; preds = %if.end192
  %141 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3278
  %142 = bitcast %struct.AVCodecContext* %141 to i8*, !dbg !3278
  call void (i8*, i32, i8*, ...) @av_log(i8* %142, i32 24, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.34, i32 0, i32 0)), !dbg !3281
  br label %if.end196, !dbg !3282

if.end196:                                        ; preds = %if.then195, %if.end192
  %143 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3283
  %options197 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %143, i32 0, i32 1, !dbg !3284
  %pns198 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options197, i32 0, i32 1, !dbg !3285
  store i32 0, i32* %pns198, align 4, !dbg !3286
  br label %if.end249, !dbg !3287

if.else199:                                       ; preds = %for.end179
  %144 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3288
  %profile200 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %144, i32 0, i32 153, !dbg !3291
  %145 = load i32, i32* %profile200, align 4, !dbg !3291
  %cmp201 = icmp eq i32 %145, 3, !dbg !3292
  br i1 %cmp201, label %if.then203, label %if.else211, !dbg !3288

if.then203:                                       ; preds = %if.else199
  %146 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3293
  %options204 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %146, i32 0, i32 1, !dbg !3295
  %ltp205 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options204, i32 0, i32 3, !dbg !3296
  store i32 1, i32* %ltp205, align 4, !dbg !3297
  %147 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3298
  %options206 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %147, i32 0, i32 1, !dbg !3300
  %pred207 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options206, i32 0, i32 5, !dbg !3301
  %148 = load i32, i32* %pred207, align 4, !dbg !3301
  %tobool208 = icmp ne i32 %148, 0, !dbg !3298
  br i1 %tobool208, label %if.then209, label %if.end210, !dbg !3302

if.then209:                                       ; preds = %if.then203
  %149 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3303
  %150 = bitcast %struct.AVCodecContext* %149 to i8*, !dbg !3303
  call void (i8*, i32, i8*, ...) @av_log(i8* %150, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.35, i32 0, i32 0)), !dbg !3306
  store i32 -22, i32* %retval, align 4, !dbg !3307
  br label %return, !dbg !3307

if.end210:                                        ; preds = %if.then203
  br label %if.end248, !dbg !3308

if.else211:                                       ; preds = %if.else199
  %151 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3309
  %profile212 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %151, i32 0, i32 153, !dbg !3312
  %152 = load i32, i32* %profile212, align 4, !dbg !3312
  %cmp213 = icmp eq i32 %152, 0, !dbg !3313
  br i1 %cmp213, label %if.then215, label %if.else223, !dbg !3309

if.then215:                                       ; preds = %if.else211
  %153 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3314
  %options216 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %153, i32 0, i32 1, !dbg !3316
  %pred217 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options216, i32 0, i32 5, !dbg !3317
  store i32 1, i32* %pred217, align 4, !dbg !3318
  %154 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3319
  %options218 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %154, i32 0, i32 1, !dbg !3321
  %ltp219 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options218, i32 0, i32 3, !dbg !3322
  %155 = load i32, i32* %ltp219, align 4, !dbg !3322
  %tobool220 = icmp ne i32 %155, 0, !dbg !3319
  br i1 %tobool220, label %if.then221, label %if.end222, !dbg !3323

if.then221:                                       ; preds = %if.then215
  %156 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3324
  %157 = bitcast %struct.AVCodecContext* %156 to i8*, !dbg !3324
  call void (i8*, i32, i8*, ...) @av_log(i8* %157, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.36, i32 0, i32 0)), !dbg !3327
  store i32 -22, i32* %retval, align 4, !dbg !3328
  br label %return, !dbg !3328

if.end222:                                        ; preds = %if.then215
  br label %if.end247, !dbg !3329

if.else223:                                       ; preds = %if.else211
  %158 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3330
  %options224 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %158, i32 0, i32 1, !dbg !3333
  %ltp225 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options224, i32 0, i32 3, !dbg !3334
  %159 = load i32, i32* %ltp225, align 4, !dbg !3334
  %tobool226 = icmp ne i32 %159, 0, !dbg !3330
  br i1 %tobool226, label %if.then227, label %if.else234, !dbg !3330

if.then227:                                       ; preds = %if.else223
  %160 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3335
  %profile228 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %160, i32 0, i32 153, !dbg !3337
  store i32 3, i32* %profile228, align 4, !dbg !3338
  %161 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3339
  %162 = bitcast %struct.AVCodecContext* %161 to i8*, !dbg !3339
  call void (i8*, i32, i8*, ...) @av_log(i8* %162, i32 24, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0)), !dbg !3342
  %163 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3343
  %options229 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %163, i32 0, i32 1, !dbg !3345
  %pred230 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options229, i32 0, i32 5, !dbg !3346
  %164 = load i32, i32* %pred230, align 4, !dbg !3346
  %tobool231 = icmp ne i32 %164, 0, !dbg !3343
  br i1 %tobool231, label %if.then232, label %if.end233, !dbg !3347

if.then232:                                       ; preds = %if.then227
  %165 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3348
  %166 = bitcast %struct.AVCodecContext* %165 to i8*, !dbg !3348
  call void (i8*, i32, i8*, ...) @av_log(i8* %166, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.35, i32 0, i32 0)), !dbg !3351
  store i32 -22, i32* %retval, align 4, !dbg !3352
  br label %return, !dbg !3352

if.end233:                                        ; preds = %if.then227
  br label %if.end246, !dbg !3353

if.else234:                                       ; preds = %if.else223
  %167 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3354
  %options235 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %167, i32 0, i32 1, !dbg !3357
  %pred236 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options235, i32 0, i32 5, !dbg !3358
  %168 = load i32, i32* %pred236, align 4, !dbg !3358
  %tobool237 = icmp ne i32 %168, 0, !dbg !3354
  br i1 %tobool237, label %if.then238, label %if.end245, !dbg !3354

if.then238:                                       ; preds = %if.else234
  %169 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3359
  %profile239 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %169, i32 0, i32 153, !dbg !3361
  store i32 0, i32* %profile239, align 4, !dbg !3362
  %170 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3363
  %171 = bitcast %struct.AVCodecContext* %170 to i8*, !dbg !3363
  call void (i8*, i32, i8*, ...) @av_log(i8* %171, i32 24, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.38, i32 0, i32 0)), !dbg !3366
  %172 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3367
  %options240 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %172, i32 0, i32 1, !dbg !3369
  %ltp241 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options240, i32 0, i32 3, !dbg !3370
  %173 = load i32, i32* %ltp241, align 4, !dbg !3370
  %tobool242 = icmp ne i32 %173, 0, !dbg !3367
  br i1 %tobool242, label %if.then243, label %if.end244, !dbg !3371

if.then243:                                       ; preds = %if.then238
  %174 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3372
  %175 = bitcast %struct.AVCodecContext* %174 to i8*, !dbg !3372
  call void (i8*, i32, i8*, ...) @av_log(i8* %175, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.36, i32 0, i32 0)), !dbg !3375
  store i32 -22, i32* %retval, align 4, !dbg !3376
  br label %return, !dbg !3376

if.end244:                                        ; preds = %if.then238
  br label %if.end245, !dbg !3377

if.end245:                                        ; preds = %if.end244, %if.else234
  br label %if.end246

if.end246:                                        ; preds = %if.end245, %if.end233
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %if.end222
  br label %if.end248

if.end248:                                        ; preds = %if.end247, %if.end210
  br label %if.end249

if.end249:                                        ; preds = %if.end248, %if.end196
  %176 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3378
  %profile250 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %176, i32 0, i32 153, !dbg !3379
  %177 = load i32, i32* %profile250, align 4, !dbg !3379
  %178 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3380
  %profile251 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %178, i32 0, i32 8, !dbg !3381
  store i32 %177, i32* %profile251, align 16, !dbg !3382
  %179 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3383
  %options252 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %179, i32 0, i32 1, !dbg !3384
  %coder = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options252, i32 0, i32 0, !dbg !3385
  %180 = load i32, i32* %coder, align 8, !dbg !3385
  %idxprom253 = sext i32 %180 to i64, !dbg !3386
  %arrayidx254 = getelementptr inbounds [0 x %struct.AACCoefficientsEncoder], [0 x %struct.AACCoefficientsEncoder]* @ff_aac_coders, i64 0, i64 %idxprom253, !dbg !3386
  %181 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3387
  %coder255 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %181, i32 0, i32 19, !dbg !3388
  store %struct.AACCoefficientsEncoder* %arrayidx254, %struct.AACCoefficientsEncoder** %coder255, align 8, !dbg !3389
  %182 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3390
  %options256 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %182, i32 0, i32 1, !dbg !3392
  %coder257 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options256, i32 0, i32 0, !dbg !3393
  %183 = load i32, i32* %coder257, align 8, !dbg !3393
  %cmp258 = icmp eq i32 %183, 0, !dbg !3394
  br i1 %cmp258, label %if.then260, label %if.end268, !dbg !3395

if.then260:                                       ; preds = %if.end249
  %184 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3396
  %strict_std_compliance = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %184, i32 0, i32 132, !dbg !3399
  %185 = load i32, i32* %strict_std_compliance, align 4, !dbg !3399
  %cmp261 = icmp sgt i32 %185, -2, !dbg !3400
  br i1 %cmp261, label %if.then263, label %if.end264, !dbg !3401

if.then263:                                       ; preds = %if.then260
  %186 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3402
  %187 = bitcast %struct.AVCodecContext* %186 to i8*, !dbg !3402
  call void (i8*, i32, i8*, ...) @av_log(i8* %187, i32 16, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.39, i32 0, i32 0)), !dbg !3405
  store i32 -22, i32* %retval, align 4, !dbg !3406
  br label %return, !dbg !3406

if.end264:                                        ; preds = %if.then260
  %188 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3407
  %options265 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %188, i32 0, i32 1, !dbg !3408
  %intensity_stereo = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options265, i32 0, i32 7, !dbg !3409
  store i32 0, i32* %intensity_stereo, align 4, !dbg !3410
  %189 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3411
  %options266 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %189, i32 0, i32 1, !dbg !3412
  %pns267 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options266, i32 0, i32 1, !dbg !3413
  store i32 0, i32* %pns267, align 4, !dbg !3414
  br label %if.end268, !dbg !3415

if.end268:                                        ; preds = %if.end264, %if.end249
  %190 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3416
  %options269 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %190, i32 0, i32 1, !dbg !3418
  %ltp270 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options269, i32 0, i32 3, !dbg !3419
  %191 = load i32, i32* %ltp270, align 4, !dbg !3419
  %tobool271 = icmp ne i32 %191, 0, !dbg !3416
  br i1 %tobool271, label %land.lhs.true, label %if.end276, !dbg !3420

land.lhs.true:                                    ; preds = %if.end268
  %192 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3421
  %strict_std_compliance272 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %192, i32 0, i32 132, !dbg !3423
  %193 = load i32, i32* %strict_std_compliance272, align 4, !dbg !3423
  %cmp273 = icmp sgt i32 %193, -2, !dbg !3424
  br i1 %cmp273, label %if.then275, label %if.end276, !dbg !3425

if.then275:                                       ; preds = %land.lhs.true
  %194 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3426
  %195 = bitcast %struct.AVCodecContext* %194 to i8*, !dbg !3426
  call void (i8*, i32, i8*, ...) @av_log(i8* %195, i32 16, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.40, i32 0, i32 0)), !dbg !3429
  store i32 -22, i32* %retval, align 4, !dbg !3430
  br label %return, !dbg !3430

if.end276:                                        ; preds = %land.lhs.true, %if.end268
  %196 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3431
  %channels277 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %196, i32 0, i32 13, !dbg !3433
  %197 = load i32, i32* %channels277, align 4, !dbg !3433
  %cmp278 = icmp sgt i32 %197, 3, !dbg !3434
  br i1 %cmp278, label %if.then280, label %if.end282, !dbg !3435

if.then280:                                       ; preds = %if.end276
  %198 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3436
  %options281 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %198, i32 0, i32 1, !dbg !3437
  %mid_side = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options281, i32 0, i32 6, !dbg !3438
  store i32 0, i32* %mid_side, align 8, !dbg !3439
  br label %if.end282, !dbg !3436

if.end282:                                        ; preds = %if.then280, %if.end276
  %199 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3440
  %200 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3442
  %call = call i32 @dsp_init(%struct.AVCodecContext* %199, %struct.AACEncContext* %200), !dbg !3443
  store i32 %call, i32* %ret, align 4, !dbg !3444
  %cmp283 = icmp slt i32 %call, 0, !dbg !3445
  br i1 %cmp283, label %if.then285, label %if.end286, !dbg !3446

if.then285:                                       ; preds = %if.end282
  br label %fail, !dbg !3447

if.end286:                                        ; preds = %if.end282
  %201 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3448
  %202 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3450
  %call287 = call i32 @alloc_buffers(%struct.AVCodecContext* %201, %struct.AACEncContext* %202), !dbg !3451
  store i32 %call287, i32* %ret, align 4, !dbg !3452
  %cmp288 = icmp slt i32 %call287, 0, !dbg !3453
  br i1 %cmp288, label %if.then290, label %if.end291, !dbg !3454

if.then290:                                       ; preds = %if.end286
  br label %fail, !dbg !3455

if.end291:                                        ; preds = %if.end286
  %203 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3456
  %call292 = call i32 @put_audio_specific_config(%struct.AVCodecContext* %203), !dbg !3458
  store i32 %call292, i32* %ret, align 4, !dbg !3459
  %tobool293 = icmp ne i32 %call292, 0, !dbg !3459
  br i1 %tobool293, label %if.then294, label %if.end295, !dbg !3460

if.then294:                                       ; preds = %if.end291
  br label %fail, !dbg !3461

if.end295:                                        ; preds = %if.end291
  %204 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3462
  %samplerate_index296 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %204, i32 0, i32 12, !dbg !3463
  %205 = load i32, i32* %samplerate_index296, align 32, !dbg !3463
  %idxprom297 = sext i32 %205 to i64, !dbg !3464
  %arrayidx298 = getelementptr inbounds [0 x i8*], [0 x i8*]* @ff_aac_swb_size_1024, i64 0, i64 %idxprom297, !dbg !3464
  %206 = load i8*, i8** %arrayidx298, align 8, !dbg !3464
  %arrayidx299 = getelementptr inbounds [2 x i8*], [2 x i8*]* %sizes, i64 0, i64 0, !dbg !3465
  store i8* %206, i8** %arrayidx299, align 16, !dbg !3466
  %207 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3467
  %samplerate_index300 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %207, i32 0, i32 12, !dbg !3468
  %208 = load i32, i32* %samplerate_index300, align 32, !dbg !3468
  %idxprom301 = sext i32 %208 to i64, !dbg !3469
  %arrayidx302 = getelementptr inbounds [0 x i8*], [0 x i8*]* @ff_aac_swb_size_128, i64 0, i64 %idxprom301, !dbg !3469
  %209 = load i8*, i8** %arrayidx302, align 8, !dbg !3469
  %arrayidx303 = getelementptr inbounds [2 x i8*], [2 x i8*]* %sizes, i64 0, i64 1, !dbg !3470
  store i8* %209, i8** %arrayidx303, align 8, !dbg !3471
  %210 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3472
  %samplerate_index304 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %210, i32 0, i32 12, !dbg !3473
  %211 = load i32, i32* %samplerate_index304, align 32, !dbg !3473
  %idxprom305 = sext i32 %211 to i64, !dbg !3474
  %arrayidx306 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_1024, i64 0, i64 %idxprom305, !dbg !3474
  %212 = load i8, i8* %arrayidx306, align 1, !dbg !3474
  %conv307 = zext i8 %212 to i32, !dbg !3474
  %arrayidx308 = getelementptr inbounds [2 x i32], [2 x i32]* %lengths, i64 0, i64 0, !dbg !3475
  store i32 %conv307, i32* %arrayidx308, align 4, !dbg !3476
  %213 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3477
  %samplerate_index309 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %213, i32 0, i32 12, !dbg !3478
  %214 = load i32, i32* %samplerate_index309, align 32, !dbg !3478
  %idxprom310 = sext i32 %214 to i64, !dbg !3479
  %arrayidx311 = getelementptr inbounds [0 x i8], [0 x i8]* @ff_aac_num_swb_128, i64 0, i64 %idxprom310, !dbg !3479
  %215 = load i8, i8* %arrayidx311, align 1, !dbg !3479
  %conv312 = zext i8 %215 to i32, !dbg !3479
  %arrayidx313 = getelementptr inbounds [2 x i32], [2 x i32]* %lengths, i64 0, i64 1, !dbg !3480
  store i32 %conv312, i32* %arrayidx313, align 4, !dbg !3481
  store i32 0, i32* %i, align 4, !dbg !3482
  br label %for.cond314, !dbg !3484

for.cond314:                                      ; preds = %for.inc331, %if.end295
  %216 = load i32, i32* %i, align 4, !dbg !3485
  %217 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3488
  %chan_map315 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %217, i32 0, i32 15, !dbg !3489
  %218 = load i8*, i8** %chan_map315, align 16, !dbg !3489
  %arrayidx316 = getelementptr inbounds i8, i8* %218, i64 0, !dbg !3488
  %219 = load i8, i8* %arrayidx316, align 1, !dbg !3488
  %conv317 = zext i8 %219 to i32, !dbg !3488
  %cmp318 = icmp slt i32 %216, %conv317, !dbg !3490
  br i1 %cmp318, label %for.body320, label %for.end333, !dbg !3491

for.body320:                                      ; preds = %for.cond314
  %220 = load i32, i32* %i, align 4, !dbg !3492
  %add321 = add nsw i32 %220, 1, !dbg !3493
  %idxprom322 = sext i32 %add321 to i64, !dbg !3494
  %221 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3494
  %chan_map323 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %221, i32 0, i32 15, !dbg !3495
  %222 = load i8*, i8** %chan_map323, align 16, !dbg !3495
  %arrayidx324 = getelementptr inbounds i8, i8* %222, i64 %idxprom322, !dbg !3494
  %223 = load i8, i8* %arrayidx324, align 1, !dbg !3494
  %conv325 = zext i8 %223 to i32, !dbg !3494
  %cmp326 = icmp eq i32 %conv325, 1, !dbg !3496
  %conv327 = zext i1 %cmp326 to i32, !dbg !3496
  %conv328 = trunc i32 %conv327 to i8, !dbg !3494
  %224 = load i32, i32* %i, align 4, !dbg !3497
  %idxprom329 = sext i32 %224 to i64, !dbg !3498
  %arrayidx330 = getelementptr inbounds [16 x i8], [16 x i8]* %grouping, i64 0, i64 %idxprom329, !dbg !3498
  store i8 %conv328, i8* %arrayidx330, align 1, !dbg !3499
  br label %for.inc331, !dbg !3498

for.inc331:                                       ; preds = %for.body320
  %225 = load i32, i32* %i, align 4, !dbg !3500
  %inc332 = add nsw i32 %225, 1, !dbg !3500
  store i32 %inc332, i32* %i, align 4, !dbg !3500
  br label %for.cond314, !dbg !3502, !llvm.loop !3503

for.end333:                                       ; preds = %for.cond314
  %226 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3505
  %psy = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %226, i32 0, i32 17, !dbg !3507
  %227 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3508
  %arraydecay334 = getelementptr inbounds [2 x i8*], [2 x i8*]* %sizes, i32 0, i32 0, !dbg !3509
  %arraydecay335 = getelementptr inbounds [2 x i32], [2 x i32]* %lengths, i32 0, i32 0, !dbg !3510
  %228 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3511
  %chan_map336 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %228, i32 0, i32 15, !dbg !3512
  %229 = load i8*, i8** %chan_map336, align 16, !dbg !3512
  %arrayidx337 = getelementptr inbounds i8, i8* %229, i64 0, !dbg !3511
  %230 = load i8, i8* %arrayidx337, align 1, !dbg !3511
  %conv338 = zext i8 %230 to i32, !dbg !3511
  %arraydecay339 = getelementptr inbounds [16 x i8], [16 x i8]* %grouping, i32 0, i32 0, !dbg !3513
  %call340 = call i32 @ff_psy_init(%struct.FFPsyContext* %psy, %struct.AVCodecContext* %227, i32 2, i8** %arraydecay334, i32* %arraydecay335, i32 %conv338, i8* %arraydecay339), !dbg !3514
  store i32 %call340, i32* %ret, align 4, !dbg !3515
  %cmp341 = icmp slt i32 %call340, 0, !dbg !3516
  br i1 %cmp341, label %if.then343, label %if.end344, !dbg !3517

if.then343:                                       ; preds = %for.end333
  br label %fail, !dbg !3518

if.end344:                                        ; preds = %for.end333
  %231 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3519
  %call345 = call %struct.FFPsyPreprocessContext* @ff_psy_preprocess_init(%struct.AVCodecContext* %231), !dbg !3520
  %232 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3521
  %psypp = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %232, i32 0, i32 18, !dbg !3522
  store %struct.FFPsyPreprocessContext* %call345, %struct.FFPsyPreprocessContext** %psypp, align 16, !dbg !3523
  %233 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3524
  %lpc = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %233, i32 0, i32 11, !dbg !3525
  %234 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3526
  %frame_size346 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %234, i32 0, i32 85, !dbg !3527
  %235 = load i32, i32* %frame_size346, align 4, !dbg !3527
  %mul347 = mul nsw i32 2, %235, !dbg !3528
  %call348 = call i32 @ff_lpc_init(%struct.LPCContext* %lpc, i32 %mul347, i32 20, i32 2), !dbg !3529
  %236 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3530
  %random_state = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %236, i32 0, i32 21, !dbg !3531
  store i32 523124044, i32* %random_state, align 4, !dbg !3532
  %237 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3533
  %abs_pow34 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %237, i32 0, i32 32, !dbg !3534
  store void (float*, float*, i32)* @abs_pow34_v, void (float*, float*, i32)** %abs_pow34, align 8, !dbg !3535
  %238 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3536
  %quant_bands = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %238, i32 0, i32 33, !dbg !3537
  store void (i32*, float*, float*, i32, i32, i32, float, float)* @quantize_bands, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands, align 16, !dbg !3538
  %239 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3539
  call void @ff_aac_dsp_init_x86(%struct.AACEncContext* %239), !dbg !3541
  %call349 = call i32 @pthread_once(i32* @aac_table_init, void ()* @aac_encode_init_tables), !dbg !3542
  store i32 %call349, i32* %ret, align 4, !dbg !3544
  %cmp350 = icmp ne i32 %call349, 0, !dbg !3545
  br i1 %cmp350, label %if.then352, label %if.end353, !dbg !3546

if.then352:                                       ; preds = %if.end344
  store i32 -1313558101, i32* %retval, align 4, !dbg !3547
  br label %return, !dbg !3547

if.end353:                                        ; preds = %if.end344
  %240 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3548
  %241 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3549
  %afq = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %241, i32 0, i32 27, !dbg !3550
  call void @ff_af_queue_init(%struct.AVCodecContext* %240, %struct.AudioFrameQueue* %afq), !dbg !3551
  store i32 0, i32* %retval, align 4, !dbg !3552
  br label %return, !dbg !3552

fail:                                             ; preds = %if.then343, %if.then294, %if.then290, %if.then285
  %242 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3553
  %call354 = call i32 @aac_encode_end(%struct.AVCodecContext* %242), !dbg !3554
  %243 = load i32, i32* %ret, align 4, !dbg !3555
  store i32 %243, i32* %retval, align 4, !dbg !3556
  br label %return, !dbg !3556

return:                                           ; preds = %fail, %if.end353, %if.then352, %if.then275, %if.then263, %if.then243, %if.then232, %if.then221, %if.then209, %if.then191, %if.then187, %if.then109, %if.then30
  %244 = load i32, i32* %retval, align 4, !dbg !3557
  ret i32 %244, !dbg !3557
}

; Function Attrs: nounwind uwtable
define internal i32 @aac_encode_frame(%struct.AVCodecContext* %avctx, %struct.AVPacket* %avpkt, %struct.AVFrame* %frame, i32* %got_packet_ptr) #0 !dbg !3558 {
entry:
  %a.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr.i, metadata !3559, metadata !2880), !dbg !3564
  %amin.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amin.addr.i, metadata !3571, metadata !2880), !dbg !3572
  %amax.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %amax.addr.i, metadata !3573, metadata !2880), !dbg !3574
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %got_packet_ptr.addr = alloca i32*, align 8
  %s = alloca %struct.AACEncContext*, align 8
  %samples = alloca float**, align 8
  %samples2 = alloca float*, align 8
  %la = alloca float*, align 8
  %overlap = alloca float*, align 8
  %cpe = alloca %struct.ChannelElement*, align 8
  %sce = alloca %struct.SingleChannelElement*, align 8
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %i = alloca i32, align 4
  %its = alloca i32, align 4
  %ch = alloca i32, align 4
  %w = alloca i32, align 4
  %chans = alloca i32, align 4
  %tag = alloca i32, align 4
  %start_ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %frame_bits = alloca i32, align 4
  %target_bits = alloca i32, align 4
  %rate_bits = alloca i32, align 4
  %too_many_bits = alloca i32, align 4
  %too_few_bits = alloca i32, align 4
  %ms_mode = alloca i32, align 4
  %is_mode = alloca i32, align 4
  %tns_mode = alloca i32, align 4
  %pred_mode = alloca i32, align 4
  %chan_el_counter = alloca [4 x i32], align 16
  %windows = alloca [16 x %struct.FFPsyWindowInfo], align 16
  %wi = alloca %struct.FFPsyWindowInfo*, align 8
  %k = alloca i32, align 4
  %clip_avoidance_factor = alloca float, align 4
  %tmp = alloca %struct.FFPsyWindowInfo, align 8
  %wbuf = alloca float*, align 8
  %wlen = alloca i32, align 4
  %max = alloca float, align 4
  %j = alloca i32, align 4
  %wi331 = alloca %struct.FFPsyWindowInfo*, align 8
  %coeffs336 = alloca [2 x float*], align 16
  %ratio = alloca float, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3575, metadata !2880), !dbg !3576
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !3577, metadata !2880), !dbg !3578
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !3579, metadata !2880), !dbg !3580
  store i32* %got_packet_ptr, i32** %got_packet_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_packet_ptr.addr, metadata !3581, metadata !2880), !dbg !3582
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s, metadata !3583, metadata !2880), !dbg !3584
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3585
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3586
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3586
  %2 = bitcast i8* %1 to %struct.AACEncContext*, !dbg !3585
  store %struct.AACEncContext* %2, %struct.AACEncContext** %s, align 8, !dbg !3584
  call void @llvm.dbg.declare(metadata float*** %samples, metadata !3587, metadata !2880), !dbg !3589
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3590
  %planar_samples = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %3, i32 0, i32 7, !dbg !3591
  %arraydecay = getelementptr inbounds [16 x float*], [16 x float*]* %planar_samples, i32 0, i32 0, !dbg !3590
  store float** %arraydecay, float*** %samples, align 8, !dbg !3589
  call void @llvm.dbg.declare(metadata float** %samples2, metadata !3592, metadata !2880), !dbg !3593
  call void @llvm.dbg.declare(metadata float** %la, metadata !3594, metadata !2880), !dbg !3595
  call void @llvm.dbg.declare(metadata float** %overlap, metadata !3596, metadata !2880), !dbg !3597
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe, metadata !3598, metadata !2880), !dbg !3599
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce, metadata !3600, metadata !2880), !dbg !3601
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !3602, metadata !2880), !dbg !3603
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3604, metadata !2880), !dbg !3605
  call void @llvm.dbg.declare(metadata i32* %its, metadata !3606, metadata !2880), !dbg !3607
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3608, metadata !2880), !dbg !3609
  call void @llvm.dbg.declare(metadata i32* %w, metadata !3610, metadata !2880), !dbg !3611
  call void @llvm.dbg.declare(metadata i32* %chans, metadata !3612, metadata !2880), !dbg !3613
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !3614, metadata !2880), !dbg !3615
  call void @llvm.dbg.declare(metadata i32* %start_ch, metadata !3616, metadata !2880), !dbg !3617
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3618, metadata !2880), !dbg !3619
  call void @llvm.dbg.declare(metadata i32* %frame_bits, metadata !3620, metadata !2880), !dbg !3621
  call void @llvm.dbg.declare(metadata i32* %target_bits, metadata !3622, metadata !2880), !dbg !3623
  call void @llvm.dbg.declare(metadata i32* %rate_bits, metadata !3624, metadata !2880), !dbg !3625
  call void @llvm.dbg.declare(metadata i32* %too_many_bits, metadata !3626, metadata !2880), !dbg !3627
  call void @llvm.dbg.declare(metadata i32* %too_few_bits, metadata !3628, metadata !2880), !dbg !3629
  call void @llvm.dbg.declare(metadata i32* %ms_mode, metadata !3630, metadata !2880), !dbg !3631
  store i32 0, i32* %ms_mode, align 4, !dbg !3631
  call void @llvm.dbg.declare(metadata i32* %is_mode, metadata !3632, metadata !2880), !dbg !3633
  store i32 0, i32* %is_mode, align 4, !dbg !3633
  call void @llvm.dbg.declare(metadata i32* %tns_mode, metadata !3634, metadata !2880), !dbg !3635
  store i32 0, i32* %tns_mode, align 4, !dbg !3635
  call void @llvm.dbg.declare(metadata i32* %pred_mode, metadata !3636, metadata !2880), !dbg !3637
  store i32 0, i32* %pred_mode, align 4, !dbg !3637
  call void @llvm.dbg.declare(metadata [4 x i32]* %chan_el_counter, metadata !3638, metadata !2880), !dbg !3639
  call void @llvm.dbg.declare(metadata [16 x %struct.FFPsyWindowInfo]* %windows, metadata !3640, metadata !2880), !dbg !3642
  %4 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3643
  %tobool = icmp ne %struct.AVFrame* %4, null, !dbg !3643
  br i1 %tobool, label %if.then, label %if.else, !dbg !3645

if.then:                                          ; preds = %entry
  %5 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3646
  %afq = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %5, i32 0, i32 27, !dbg !3649
  %6 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3650
  %call = call i32 @ff_af_queue_add(%struct.AudioFrameQueue* %afq, %struct.AVFrame* %6), !dbg !3651
  store i32 %call, i32* %ret, align 4, !dbg !3652
  %cmp = icmp slt i32 %call, 0, !dbg !3653
  br i1 %cmp, label %if.then1, label %if.end, !dbg !3654

if.then1:                                         ; preds = %if.then
  %7 = load i32, i32* %ret, align 4, !dbg !3655
  store i32 %7, i32* %retval, align 4, !dbg !3656
  br label %return, !dbg !3656

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !3657

if.else:                                          ; preds = %entry
  %8 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3658
  %afq2 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %8, i32 0, i32 27, !dbg !3661
  %remaining_samples = getelementptr inbounds %struct.AudioFrameQueue, %struct.AudioFrameQueue* %afq2, i32 0, i32 2, !dbg !3662
  %9 = load i32, i32* %remaining_samples, align 4, !dbg !3662
  %tobool3 = icmp ne i32 %9, 0, !dbg !3658
  br i1 %tobool3, label %lor.lhs.false, label %if.then8, !dbg !3663

lor.lhs.false:                                    ; preds = %if.else
  %10 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3664
  %afq4 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %10, i32 0, i32 27, !dbg !3666
  %frame_alloc = getelementptr inbounds %struct.AudioFrameQueue, %struct.AudioFrameQueue* %afq4, i32 0, i32 5, !dbg !3667
  %11 = load i32, i32* %frame_alloc, align 4, !dbg !3667
  %tobool5 = icmp ne i32 %11, 0, !dbg !3664
  br i1 %tobool5, label %if.end9, label %land.lhs.true, !dbg !3668

land.lhs.true:                                    ; preds = %lor.lhs.false
  %12 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3669
  %afq6 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %12, i32 0, i32 27, !dbg !3671
  %frame_count = getelementptr inbounds %struct.AudioFrameQueue, %struct.AudioFrameQueue* %afq6, i32 0, i32 4, !dbg !3672
  %13 = load i32, i32* %frame_count, align 8, !dbg !3672
  %tobool7 = icmp ne i32 %13, 0, !dbg !3669
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !3673

if.then8:                                         ; preds = %land.lhs.true, %if.else
  store i32 0, i32* %retval, align 4, !dbg !3674
  br label %return, !dbg !3674

if.end9:                                          ; preds = %land.lhs.true, %lor.lhs.false
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %14 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3675
  %15 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3676
  call void @copy_input_samples(%struct.AACEncContext* %14, %struct.AVFrame* %15), !dbg !3677
  %16 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3678
  %psypp = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %16, i32 0, i32 18, !dbg !3680
  %17 = load %struct.FFPsyPreprocessContext*, %struct.FFPsyPreprocessContext** %psypp, align 16, !dbg !3680
  %tobool11 = icmp ne %struct.FFPsyPreprocessContext* %17, null, !dbg !3678
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !3681

if.then12:                                        ; preds = %if.end10
  %18 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3682
  %psypp13 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %18, i32 0, i32 18, !dbg !3683
  %19 = load %struct.FFPsyPreprocessContext*, %struct.FFPsyPreprocessContext** %psypp13, align 16, !dbg !3683
  %20 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3684
  %planar_samples14 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %20, i32 0, i32 7, !dbg !3685
  %arraydecay15 = getelementptr inbounds [16 x float*], [16 x float*]* %planar_samples14, i32 0, i32 0, !dbg !3684
  %21 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3686
  %channels = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %21, i32 0, i32 13, !dbg !3687
  %22 = load i32, i32* %channels, align 4, !dbg !3687
  call void @ff_psy_preprocess(%struct.FFPsyPreprocessContext* %19, float** %arraydecay15, i32 %22), !dbg !3688
  br label %if.end16, !dbg !3688

if.end16:                                         ; preds = %if.then12, %if.end10
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3689
  %frame_number = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 86, !dbg !3691
  %24 = load i32, i32* %frame_number, align 8, !dbg !3691
  %tobool17 = icmp ne i32 %24, 0, !dbg !3689
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !3692

if.then18:                                        ; preds = %if.end16
  store i32 0, i32* %retval, align 4, !dbg !3693
  br label %return, !dbg !3693

if.end19:                                         ; preds = %if.end16
  store i32 0, i32* %start_ch, align 4, !dbg !3694
  store i32 0, i32* %i, align 4, !dbg !3695
  br label %for.cond, !dbg !3697

for.cond:                                         ; preds = %for.inc303, %if.end19
  %25 = load i32, i32* %i, align 4, !dbg !3698
  %26 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3701
  %chan_map = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %26, i32 0, i32 15, !dbg !3702
  %27 = load i8*, i8** %chan_map, align 16, !dbg !3702
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 0, !dbg !3701
  %28 = load i8, i8* %arrayidx, align 1, !dbg !3701
  %conv = zext i8 %28 to i32, !dbg !3701
  %cmp20 = icmp slt i32 %25, %conv, !dbg !3703
  br i1 %cmp20, label %for.body, label %for.end305, !dbg !3704

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.FFPsyWindowInfo** %wi, metadata !3705, metadata !2880), !dbg !3708
  %arraydecay22 = getelementptr inbounds [16 x %struct.FFPsyWindowInfo], [16 x %struct.FFPsyWindowInfo]* %windows, i32 0, i32 0, !dbg !3709
  %29 = load i32, i32* %start_ch, align 4, !dbg !3710
  %idx.ext = sext i32 %29 to i64, !dbg !3711
  %add.ptr = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arraydecay22, i64 %idx.ext, !dbg !3711
  store %struct.FFPsyWindowInfo* %add.ptr, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3708
  %30 = load i32, i32* %i, align 4, !dbg !3712
  %add = add nsw i32 %30, 1, !dbg !3713
  %idxprom = sext i32 %add to i64, !dbg !3714
  %31 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3714
  %chan_map23 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %31, i32 0, i32 15, !dbg !3715
  %32 = load i8*, i8** %chan_map23, align 16, !dbg !3715
  %arrayidx24 = getelementptr inbounds i8, i8* %32, i64 %idxprom, !dbg !3714
  %33 = load i8, i8* %arrayidx24, align 1, !dbg !3714
  %conv25 = zext i8 %33 to i32, !dbg !3714
  store i32 %conv25, i32* %tag, align 4, !dbg !3716
  %34 = load i32, i32* %tag, align 4, !dbg !3717
  %cmp26 = icmp eq i32 %34, 1, !dbg !3718
  %cond = select i1 %cmp26, i32 2, i32 1, !dbg !3717
  store i32 %cond, i32* %chans, align 4, !dbg !3719
  %35 = load i32, i32* %i, align 4, !dbg !3720
  %idxprom28 = sext i32 %35 to i64, !dbg !3721
  %36 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3721
  %cpe29 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %36, i32 0, i32 16, !dbg !3722
  %37 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe29, align 8, !dbg !3722
  %arrayidx30 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %37, i64 %idxprom28, !dbg !3721
  store %struct.ChannelElement* %arrayidx30, %struct.ChannelElement** %cpe, align 8, !dbg !3723
  store i32 0, i32* %ch, align 4, !dbg !3724
  br label %for.cond31, !dbg !3726

for.cond31:                                       ; preds = %for.inc299, %for.body
  %38 = load i32, i32* %ch, align 4, !dbg !3727
  %39 = load i32, i32* %chans, align 4, !dbg !3730
  %cmp32 = icmp slt i32 %38, %39, !dbg !3731
  br i1 %cmp32, label %for.body34, label %for.end301, !dbg !3732

for.body34:                                       ; preds = %for.cond31
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3733, metadata !2880), !dbg !3735
  call void @llvm.dbg.declare(metadata float* %clip_avoidance_factor, metadata !3736, metadata !2880), !dbg !3737
  %40 = load i32, i32* %ch, align 4, !dbg !3738
  %idxprom35 = sext i32 %40 to i64, !dbg !3739
  %41 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !3739
  %ch36 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %41, i32 0, i32 7, !dbg !3740
  %arrayidx37 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch36, i64 0, i64 %idxprom35, !dbg !3739
  store %struct.SingleChannelElement* %arrayidx37, %struct.SingleChannelElement** %sce, align 8, !dbg !3741
  %42 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !3742
  %ics38 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %42, i32 0, i32 0, !dbg !3743
  store %struct.IndividualChannelStream* %ics38, %struct.IndividualChannelStream** %ics, align 8, !dbg !3744
  %43 = load i32, i32* %start_ch, align 4, !dbg !3745
  %44 = load i32, i32* %ch, align 4, !dbg !3746
  %add39 = add nsw i32 %43, %44, !dbg !3747
  %45 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3748
  %cur_channel = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %45, i32 0, i32 20, !dbg !3749
  store i32 %add39, i32* %cur_channel, align 32, !dbg !3750
  %46 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3751
  %cur_channel40 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %46, i32 0, i32 20, !dbg !3752
  %47 = load i32, i32* %cur_channel40, align 32, !dbg !3752
  %idxprom41 = sext i32 %47 to i64, !dbg !3753
  %48 = load float**, float*** %samples, align 8, !dbg !3753
  %arrayidx42 = getelementptr inbounds float*, float** %48, i64 %idxprom41, !dbg !3753
  %49 = load float*, float** %arrayidx42, align 8, !dbg !3753
  %arrayidx43 = getelementptr inbounds float, float* %49, i64 0, !dbg !3753
  store float* %arrayidx43, float** %overlap, align 8, !dbg !3754
  %50 = load float*, float** %overlap, align 8, !dbg !3755
  %add.ptr44 = getelementptr inbounds float, float* %50, i64 1024, !dbg !3756
  store float* %add.ptr44, float** %samples2, align 8, !dbg !3757
  %51 = load float*, float** %samples2, align 8, !dbg !3758
  %add.ptr45 = getelementptr inbounds float, float* %51, i64 512, !dbg !3759
  store float* %add.ptr45, float** %la, align 8, !dbg !3760
  %52 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !3761
  %tobool46 = icmp ne %struct.AVFrame* %52, null, !dbg !3761
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !3763

if.then47:                                        ; preds = %for.body34
  store float* null, float** %la, align 8, !dbg !3764
  br label %if.end48, !dbg !3765

if.end48:                                         ; preds = %if.then47, %for.body34
  %53 = load i32, i32* %tag, align 4, !dbg !3766
  %cmp49 = icmp eq i32 %53, 3, !dbg !3768
  br i1 %cmp49, label %if.then51, label %if.else72, !dbg !3769

if.then51:                                        ; preds = %if.end48
  %54 = load i32, i32* %ch, align 4, !dbg !3770
  %idxprom52 = sext i32 %54 to i64, !dbg !3772
  %55 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3772
  %arrayidx53 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %55, i64 %idxprom52, !dbg !3772
  %window_type = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx53, i32 0, i32 0, !dbg !3773
  %arrayidx54 = getelementptr inbounds [3 x i32], [3 x i32]* %window_type, i64 0, i64 1, !dbg !3772
  store i32 0, i32* %arrayidx54, align 4, !dbg !3774
  %56 = load i32, i32* %ch, align 4, !dbg !3775
  %idxprom55 = sext i32 %56 to i64, !dbg !3776
  %57 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3776
  %arrayidx56 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %57, i64 %idxprom55, !dbg !3776
  %window_type57 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx56, i32 0, i32 0, !dbg !3777
  %arrayidx58 = getelementptr inbounds [3 x i32], [3 x i32]* %window_type57, i64 0, i64 0, !dbg !3776
  store i32 0, i32* %arrayidx58, align 8, !dbg !3778
  %58 = load i32, i32* %ch, align 4, !dbg !3779
  %idxprom59 = sext i32 %58 to i64, !dbg !3780
  %59 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3780
  %arrayidx60 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %59, i64 %idxprom59, !dbg !3780
  %window_shape = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx60, i32 0, i32 1, !dbg !3781
  store i32 0, i32* %window_shape, align 4, !dbg !3782
  %60 = load i32, i32* %ch, align 4, !dbg !3783
  %idxprom61 = sext i32 %60 to i64, !dbg !3784
  %61 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3784
  %arrayidx62 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %61, i64 %idxprom61, !dbg !3784
  %num_windows = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx62, i32 0, i32 2, !dbg !3785
  store i32 1, i32* %num_windows, align 8, !dbg !3786
  %62 = load i32, i32* %ch, align 4, !dbg !3787
  %idxprom63 = sext i32 %62 to i64, !dbg !3788
  %63 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3788
  %arrayidx64 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %63, i64 %idxprom63, !dbg !3788
  %grouping = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx64, i32 0, i32 3, !dbg !3789
  %arrayidx65 = getelementptr inbounds [8 x i32], [8 x i32]* %grouping, i64 0, i64 0, !dbg !3788
  store i32 1, i32* %arrayidx65, align 4, !dbg !3790
  %64 = load i32, i32* %ch, align 4, !dbg !3791
  %idxprom66 = sext i32 %64 to i64, !dbg !3792
  %65 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3792
  %arrayidx67 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %65, i64 %idxprom66, !dbg !3792
  %clipping = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx67, i32 0, i32 4, !dbg !3793
  %arrayidx68 = getelementptr inbounds [8 x float], [8 x float]* %clipping, i64 0, i64 0, !dbg !3792
  store float 0.000000e+00, float* %arrayidx68, align 4, !dbg !3794
  %66 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3795
  %samplerate_index = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %66, i32 0, i32 12, !dbg !3796
  %67 = load i32, i32* %samplerate_index, align 32, !dbg !3796
  %cmp69 = icmp sge i32 %67, 8, !dbg !3797
  %cond71 = select i1 %cmp69, i32 1, i32 3, !dbg !3795
  %68 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3798
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %68, i32 0, i32 8, !dbg !3799
  store i32 %cond71, i32* %num_swb, align 8, !dbg !3800
  br label %if.end78, !dbg !3801

if.else72:                                        ; preds = %if.end48
  %69 = load i32, i32* %ch, align 4, !dbg !3802
  %idxprom73 = sext i32 %69 to i64, !dbg !3804
  %70 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3804
  %arrayidx74 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %70, i64 %idxprom73, !dbg !3804
  %71 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3805
  %psy = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %71, i32 0, i32 17, !dbg !3806
  %model = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy, i32 0, i32 1, !dbg !3807
  %72 = load %struct.FFPsyModel*, %struct.FFPsyModel** %model, align 8, !dbg !3807
  %window = getelementptr inbounds %struct.FFPsyModel, %struct.FFPsyModel* %72, i32 0, i32 2, !dbg !3808
  %73 = load void (%struct.FFPsyWindowInfo*, %struct.FFPsyContext*, float*, float*, i32, i32)*, void (%struct.FFPsyWindowInfo*, %struct.FFPsyContext*, float*, float*, i32, i32)** %window, align 8, !dbg !3808
  %74 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3809
  %psy75 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %74, i32 0, i32 17, !dbg !3810
  %75 = load float*, float** %samples2, align 8, !dbg !3811
  %76 = load float*, float** %la, align 8, !dbg !3812
  %77 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3813
  %cur_channel76 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %77, i32 0, i32 20, !dbg !3814
  %78 = load i32, i32* %cur_channel76, align 32, !dbg !3814
  %79 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3815
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %79, i32 0, i32 1, !dbg !3816
  %arrayidx77 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !3815
  %80 = load i32, i32* %arrayidx77, align 4, !dbg !3815
  call void %73(%struct.FFPsyWindowInfo* sret %tmp, %struct.FFPsyContext* %psy75, float* %75, float* %76, i32 %78, i32 %80), !dbg !3805
  %81 = bitcast %struct.FFPsyWindowInfo* %arrayidx74 to i8*, !dbg !3805
  %82 = bitcast %struct.FFPsyWindowInfo* %tmp to i8*, !dbg !3805
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 96, i32 8, i1 false), !dbg !3817
  br label %if.end78

if.end78:                                         ; preds = %if.else72, %if.then51
  %83 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3819
  %window_sequence79 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %83, i32 0, i32 1, !dbg !3820
  %arrayidx80 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence79, i64 0, i64 0, !dbg !3819
  %84 = load i32, i32* %arrayidx80, align 4, !dbg !3819
  %85 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3821
  %window_sequence81 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %85, i32 0, i32 1, !dbg !3822
  %arrayidx82 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence81, i64 0, i64 1, !dbg !3821
  store i32 %84, i32* %arrayidx82, align 4, !dbg !3823
  %86 = load i32, i32* %ch, align 4, !dbg !3824
  %idxprom83 = sext i32 %86 to i64, !dbg !3825
  %87 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3825
  %arrayidx84 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %87, i64 %idxprom83, !dbg !3825
  %window_type85 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx84, i32 0, i32 0, !dbg !3826
  %arrayidx86 = getelementptr inbounds [3 x i32], [3 x i32]* %window_type85, i64 0, i64 0, !dbg !3825
  %88 = load i32, i32* %arrayidx86, align 8, !dbg !3825
  %89 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3827
  %window_sequence87 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %89, i32 0, i32 1, !dbg !3828
  %arrayidx88 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence87, i64 0, i64 0, !dbg !3827
  store i32 %88, i32* %arrayidx88, align 4, !dbg !3829
  %90 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3830
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %90, i32 0, i32 2, !dbg !3831
  %arrayidx89 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !3830
  %91 = load i8, i8* %arrayidx89, align 4, !dbg !3830
  %92 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3832
  %use_kb_window90 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %92, i32 0, i32 2, !dbg !3833
  %arrayidx91 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window90, i64 0, i64 1, !dbg !3832
  store i8 %91, i8* %arrayidx91, align 1, !dbg !3834
  %93 = load i32, i32* %ch, align 4, !dbg !3835
  %idxprom92 = sext i32 %93 to i64, !dbg !3836
  %94 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3836
  %arrayidx93 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %94, i64 %idxprom92, !dbg !3836
  %window_shape94 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx93, i32 0, i32 1, !dbg !3837
  %95 = load i32, i32* %window_shape94, align 4, !dbg !3837
  %conv95 = trunc i32 %95 to i8, !dbg !3836
  %96 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3838
  %use_kb_window96 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %96, i32 0, i32 2, !dbg !3839
  %arrayidx97 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window96, i64 0, i64 0, !dbg !3838
  store i8 %conv95, i8* %arrayidx97, align 4, !dbg !3840
  %97 = load i32, i32* %ch, align 4, !dbg !3841
  %idxprom98 = sext i32 %97 to i64, !dbg !3842
  %98 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3842
  %arrayidx99 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %98, i64 %idxprom98, !dbg !3842
  %num_windows100 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx99, i32 0, i32 2, !dbg !3843
  %99 = load i32, i32* %num_windows100, align 8, !dbg !3843
  %100 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3844
  %num_windows101 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %100, i32 0, i32 9, !dbg !3845
  store i32 %99, i32* %num_windows101, align 4, !dbg !3846
  %101 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3847
  %num_windows102 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %101, i32 0, i32 9, !dbg !3848
  %102 = load i32, i32* %num_windows102, align 4, !dbg !3848
  %cmp103 = icmp eq i32 %102, 8, !dbg !3849
  %conv104 = zext i1 %cmp103 to i32, !dbg !3849
  %idxprom105 = sext i32 %conv104 to i64, !dbg !3850
  %103 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3850
  %psy106 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %103, i32 0, i32 17, !dbg !3851
  %bands = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy106, i32 0, i32 6, !dbg !3852
  %104 = load i8**, i8*** %bands, align 8, !dbg !3852
  %arrayidx107 = getelementptr inbounds i8*, i8** %104, i64 %idxprom105, !dbg !3850
  %105 = load i8*, i8** %arrayidx107, align 8, !dbg !3850
  %106 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3853
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %106, i32 0, i32 7, !dbg !3854
  store i8* %105, i8** %swb_sizes, align 8, !dbg !3855
  %107 = load i32, i32* %tag, align 4, !dbg !3856
  %cmp108 = icmp eq i32 %107, 3, !dbg !3857
  br i1 %cmp108, label %cond.true, label %cond.false, !dbg !3856

cond.true:                                        ; preds = %if.end78
  %108 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3858
  %num_swb110 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %108, i32 0, i32 8, !dbg !3860
  %109 = load i32, i32* %num_swb110, align 8, !dbg !3860
  br label %cond.end, !dbg !3861

cond.false:                                       ; preds = %if.end78
  %110 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3862
  %num_windows111 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %110, i32 0, i32 9, !dbg !3864
  %111 = load i32, i32* %num_windows111, align 4, !dbg !3864
  %cmp112 = icmp eq i32 %111, 8, !dbg !3865
  %conv113 = zext i1 %cmp112 to i32, !dbg !3865
  %idxprom114 = sext i32 %conv113 to i64, !dbg !3866
  %112 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3866
  %psy115 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %112, i32 0, i32 17, !dbg !3867
  %num_bands = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy115, i32 0, i32 7, !dbg !3868
  %113 = load i32*, i32** %num_bands, align 16, !dbg !3868
  %arrayidx116 = getelementptr inbounds i32, i32* %113, i64 %idxprom114, !dbg !3866
  %114 = load i32, i32* %arrayidx116, align 4, !dbg !3866
  br label %cond.end, !dbg !3869

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond117 = phi i32 [ %109, %cond.true ], [ %114, %cond.false ], !dbg !3870
  %115 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3872
  %num_swb118 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %115, i32 0, i32 8, !dbg !3873
  store i32 %cond117, i32* %num_swb118, align 8, !dbg !3874
  %116 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3875
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %116, i32 0, i32 0, !dbg !3876
  %117 = load i8, i8* %max_sfb, align 8, !dbg !3876
  %conv119 = zext i8 %117 to i32, !dbg !3877
  %118 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3878
  %num_swb120 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %118, i32 0, i32 8, !dbg !3879
  %119 = load i32, i32* %num_swb120, align 8, !dbg !3879
  %cmp121 = icmp sgt i32 %conv119, %119, !dbg !3880
  br i1 %cmp121, label %cond.true123, label %cond.false125, !dbg !3877

cond.true123:                                     ; preds = %cond.end
  %120 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3881
  %num_swb124 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %120, i32 0, i32 8, !dbg !3882
  %121 = load i32, i32* %num_swb124, align 8, !dbg !3882
  br label %cond.end128, !dbg !3883

cond.false125:                                    ; preds = %cond.end
  %122 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3884
  %max_sfb126 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %122, i32 0, i32 0, !dbg !3885
  %123 = load i8, i8* %max_sfb126, align 8, !dbg !3885
  %conv127 = zext i8 %123 to i32, !dbg !3886
  br label %cond.end128, !dbg !3887

cond.end128:                                      ; preds = %cond.false125, %cond.true123
  %cond129 = phi i32 [ %121, %cond.true123 ], [ %conv127, %cond.false125 ], !dbg !3888
  %conv130 = trunc i32 %cond129 to i8, !dbg !3889
  %124 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3890
  %max_sfb131 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %124, i32 0, i32 0, !dbg !3891
  store i8 %conv130, i8* %max_sfb131, align 8, !dbg !3892
  %125 = load i32, i32* %ch, align 4, !dbg !3893
  %idxprom132 = sext i32 %125 to i64, !dbg !3894
  %126 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3894
  %arrayidx133 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %126, i64 %idxprom132, !dbg !3894
  %window_type134 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx133, i32 0, i32 0, !dbg !3895
  %arrayidx135 = getelementptr inbounds [3 x i32], [3 x i32]* %window_type134, i64 0, i64 0, !dbg !3894
  %127 = load i32, i32* %arrayidx135, align 8, !dbg !3894
  %cmp136 = icmp eq i32 %127, 2, !dbg !3896
  br i1 %cmp136, label %cond.true138, label %cond.false142, !dbg !3894

cond.true138:                                     ; preds = %cond.end128
  %128 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3897
  %samplerate_index139 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %128, i32 0, i32 12, !dbg !3898
  %129 = load i32, i32* %samplerate_index139, align 32, !dbg !3898
  %idxprom140 = sext i32 %129 to i64, !dbg !3899
  %arrayidx141 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_128, i64 0, i64 %idxprom140, !dbg !3899
  %130 = load i16*, i16** %arrayidx141, align 8, !dbg !3899
  br label %cond.end146, !dbg !3900

cond.false142:                                    ; preds = %cond.end128
  %131 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3901
  %samplerate_index143 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %131, i32 0, i32 12, !dbg !3902
  %132 = load i32, i32* %samplerate_index143, align 32, !dbg !3902
  %idxprom144 = sext i32 %132 to i64, !dbg !3903
  %arrayidx145 = getelementptr inbounds [13 x i16*], [13 x i16*]* @ff_swb_offset_1024, i64 0, i64 %idxprom144, !dbg !3903
  %133 = load i16*, i16** %arrayidx145, align 8, !dbg !3903
  br label %cond.end146, !dbg !3904

cond.end146:                                      ; preds = %cond.false142, %cond.true138
  %cond147 = phi i16* [ %130, %cond.true138 ], [ %133, %cond.false142 ], !dbg !3905
  %134 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3906
  %swb_offset = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %134, i32 0, i32 6, !dbg !3907
  store i16* %cond147, i16** %swb_offset, align 8, !dbg !3908
  %135 = load i32, i32* %ch, align 4, !dbg !3909
  %idxprom148 = sext i32 %135 to i64, !dbg !3910
  %136 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3910
  %arrayidx149 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %136, i64 %idxprom148, !dbg !3910
  %window_type150 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx149, i32 0, i32 0, !dbg !3911
  %arrayidx151 = getelementptr inbounds [3 x i32], [3 x i32]* %window_type150, i64 0, i64 0, !dbg !3910
  %137 = load i32, i32* %arrayidx151, align 8, !dbg !3910
  %cmp152 = icmp eq i32 %137, 2, !dbg !3912
  br i1 %cmp152, label %cond.true154, label %cond.false159, !dbg !3910

cond.true154:                                     ; preds = %cond.end146
  %138 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3913
  %samplerate_index155 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %138, i32 0, i32 12, !dbg !3914
  %139 = load i32, i32* %samplerate_index155, align 32, !dbg !3914
  %idxprom156 = sext i32 %139 to i64, !dbg !3915
  %arrayidx157 = getelementptr inbounds [13 x i8], [13 x i8]* @ff_tns_max_bands_128, i64 0, i64 %idxprom156, !dbg !3915
  %140 = load i8, i8* %arrayidx157, align 1, !dbg !3915
  %conv158 = zext i8 %140 to i32, !dbg !3915
  br label %cond.end164, !dbg !3916

cond.false159:                                    ; preds = %cond.end146
  %141 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !3917
  %samplerate_index160 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %141, i32 0, i32 12, !dbg !3918
  %142 = load i32, i32* %samplerate_index160, align 32, !dbg !3918
  %idxprom161 = sext i32 %142 to i64, !dbg !3919
  %arrayidx162 = getelementptr inbounds [13 x i8], [13 x i8]* @ff_tns_max_bands_1024, i64 0, i64 %idxprom161, !dbg !3919
  %143 = load i8, i8* %arrayidx162, align 1, !dbg !3919
  %conv163 = zext i8 %143 to i32, !dbg !3919
  br label %cond.end164, !dbg !3920

cond.end164:                                      ; preds = %cond.false159, %cond.true154
  %cond165 = phi i32 [ %conv158, %cond.true154 ], [ %conv163, %cond.false159 ], !dbg !3921
  %144 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3922
  %tns_max_bands = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %144, i32 0, i32 10, !dbg !3923
  store i32 %cond165, i32* %tns_max_bands, align 8, !dbg !3924
  store i32 0, i32* %w, align 4, !dbg !3925
  br label %for.cond166, !dbg !3927

for.cond166:                                      ; preds = %for.inc, %cond.end164
  %145 = load i32, i32* %w, align 4, !dbg !3928
  %146 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3931
  %num_windows167 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %146, i32 0, i32 9, !dbg !3932
  %147 = load i32, i32* %num_windows167, align 4, !dbg !3932
  %cmp168 = icmp slt i32 %145, %147, !dbg !3933
  br i1 %cmp168, label %for.body170, label %for.end, !dbg !3934

for.body170:                                      ; preds = %for.cond166
  %148 = load i32, i32* %w, align 4, !dbg !3935
  %idxprom171 = sext i32 %148 to i64, !dbg !3936
  %149 = load i32, i32* %ch, align 4, !dbg !3937
  %idxprom172 = sext i32 %149 to i64, !dbg !3936
  %150 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !3936
  %arrayidx173 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %150, i64 %idxprom172, !dbg !3936
  %grouping174 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx173, i32 0, i32 3, !dbg !3938
  %arrayidx175 = getelementptr inbounds [8 x i32], [8 x i32]* %grouping174, i64 0, i64 %idxprom171, !dbg !3936
  %151 = load i32, i32* %arrayidx175, align 4, !dbg !3936
  %conv176 = trunc i32 %151 to i8, !dbg !3936
  %152 = load i32, i32* %w, align 4, !dbg !3939
  %idxprom177 = sext i32 %152 to i64, !dbg !3940
  %153 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3940
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %153, i32 0, i32 4, !dbg !3941
  %arrayidx178 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom177, !dbg !3940
  store i8 %conv176, i8* %arrayidx178, align 1, !dbg !3942
  br label %for.inc, !dbg !3940

for.inc:                                          ; preds = %for.body170
  %154 = load i32, i32* %w, align 4, !dbg !3943
  %inc = add nsw i32 %154, 1, !dbg !3943
  store i32 %inc, i32* %w, align 4, !dbg !3943
  br label %for.cond166, !dbg !3945, !llvm.loop !3946

for.end:                                          ; preds = %for.cond166
  store float 0.000000e+00, float* %clip_avoidance_factor, align 4, !dbg !3948
  store i32 0, i32* %w, align 4, !dbg !3949
  br label %for.cond179, !dbg !3951

for.cond179:                                      ; preds = %for.inc215, %for.end
  %155 = load i32, i32* %w, align 4, !dbg !3952
  %156 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3955
  %num_windows180 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %156, i32 0, i32 9, !dbg !3956
  %157 = load i32, i32* %num_windows180, align 4, !dbg !3956
  %cmp181 = icmp slt i32 %155, %157, !dbg !3957
  br i1 %cmp181, label %for.body183, label %for.end217, !dbg !3958

for.body183:                                      ; preds = %for.cond179
  call void @llvm.dbg.declare(metadata float** %wbuf, metadata !3959, metadata !2880), !dbg !3961
  %158 = load float*, float** %overlap, align 8, !dbg !3962
  %159 = load i32, i32* %w, align 4, !dbg !3963
  %mul = mul nsw i32 %159, 128, !dbg !3964
  %idx.ext185 = sext i32 %mul to i64, !dbg !3965
  %add.ptr186 = getelementptr inbounds float, float* %158, i64 %idx.ext185, !dbg !3965
  store float* %add.ptr186, float** %wbuf, align 8, !dbg !3961
  call void @llvm.dbg.declare(metadata i32* %wlen, metadata !3966, metadata !2880), !dbg !3967
  %160 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !3968
  %num_windows188 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %160, i32 0, i32 9, !dbg !3969
  %161 = load i32, i32* %num_windows188, align 4, !dbg !3969
  %div = sdiv i32 2048, %161, !dbg !3970
  store i32 %div, i32* %wlen, align 4, !dbg !3967
  call void @llvm.dbg.declare(metadata float* %max, metadata !3971, metadata !2880), !dbg !3972
  store float 0.000000e+00, float* %max, align 4, !dbg !3972
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3973, metadata !2880), !dbg !3974
  store i32 0, i32* %j, align 4, !dbg !3975
  br label %for.cond191, !dbg !3977

for.cond191:                                      ; preds = %for.inc207, %for.body183
  %162 = load i32, i32* %j, align 4, !dbg !3978
  %163 = load i32, i32* %wlen, align 4, !dbg !3981
  %cmp192 = icmp slt i32 %162, %163, !dbg !3982
  br i1 %cmp192, label %for.body194, label %for.end209, !dbg !3983

for.body194:                                      ; preds = %for.cond191
  %164 = load float, float* %max, align 4, !dbg !3984
  %165 = load i32, i32* %j, align 4, !dbg !3985
  %idxprom195 = sext i32 %165 to i64, !dbg !3986
  %166 = load float*, float** %wbuf, align 8, !dbg !3986
  %arrayidx196 = getelementptr inbounds float, float* %166, i64 %idxprom195, !dbg !3986
  %167 = load float, float* %arrayidx196, align 4, !dbg !3986
  %call197 = call float @fabsf(float %167) #1, !dbg !3987
  %cmp198 = fcmp ogt float %164, %call197, !dbg !3988
  br i1 %cmp198, label %cond.true200, label %cond.false201, !dbg !3989

cond.true200:                                     ; preds = %for.body194
  %168 = load float, float* %max, align 4, !dbg !3990
  br label %cond.end205, !dbg !3991

cond.false201:                                    ; preds = %for.body194
  %169 = load i32, i32* %j, align 4, !dbg !3992
  %idxprom202 = sext i32 %169 to i64, !dbg !3994
  %170 = load float*, float** %wbuf, align 8, !dbg !3994
  %arrayidx203 = getelementptr inbounds float, float* %170, i64 %idxprom202, !dbg !3994
  %171 = load float, float* %arrayidx203, align 4, !dbg !3994
  %call204 = call float @fabsf(float %171) #1, !dbg !3995
  br label %cond.end205, !dbg !3996

cond.end205:                                      ; preds = %cond.false201, %cond.true200
  %cond206 = phi float [ %168, %cond.true200 ], [ %call204, %cond.false201 ], !dbg !3997
  store float %cond206, float* %max, align 4, !dbg !3999
  br label %for.inc207, !dbg !4000

for.inc207:                                       ; preds = %cond.end205
  %172 = load i32, i32* %j, align 4, !dbg !4001
  %inc208 = add nsw i32 %172, 1, !dbg !4001
  store i32 %inc208, i32* %j, align 4, !dbg !4001
  br label %for.cond191, !dbg !4002, !llvm.loop !4003

for.end209:                                       ; preds = %for.cond191
  %173 = load float, float* %max, align 4, !dbg !4005
  %174 = load i32, i32* %w, align 4, !dbg !4006
  %idxprom210 = sext i32 %174 to i64, !dbg !4007
  %175 = load i32, i32* %ch, align 4, !dbg !4008
  %idxprom211 = sext i32 %175 to i64, !dbg !4007
  %176 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !4007
  %arrayidx212 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %176, i64 %idxprom211, !dbg !4007
  %clipping213 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx212, i32 0, i32 4, !dbg !4009
  %arrayidx214 = getelementptr inbounds [8 x float], [8 x float]* %clipping213, i64 0, i64 %idxprom210, !dbg !4007
  store float %173, float* %arrayidx214, align 4, !dbg !4010
  br label %for.inc215, !dbg !4011

for.inc215:                                       ; preds = %for.end209
  %177 = load i32, i32* %w, align 4, !dbg !4012
  %inc216 = add nsw i32 %177, 1, !dbg !4012
  store i32 %inc216, i32* %w, align 4, !dbg !4012
  br label %for.cond179, !dbg !4014, !llvm.loop !4015

for.end217:                                       ; preds = %for.cond179
  store i32 0, i32* %w, align 4, !dbg !4017
  br label %for.cond218, !dbg !4019

for.cond218:                                      ; preds = %for.inc254, %for.end217
  %178 = load i32, i32* %w, align 4, !dbg !4020
  %179 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4023
  %num_windows219 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %179, i32 0, i32 9, !dbg !4024
  %180 = load i32, i32* %num_windows219, align 4, !dbg !4024
  %cmp220 = icmp slt i32 %178, %180, !dbg !4025
  br i1 %cmp220, label %for.body222, label %for.end256, !dbg !4026

for.body222:                                      ; preds = %for.cond218
  %181 = load i32, i32* %w, align 4, !dbg !4027
  %idxprom223 = sext i32 %181 to i64, !dbg !4030
  %182 = load i32, i32* %ch, align 4, !dbg !4031
  %idxprom224 = sext i32 %182 to i64, !dbg !4030
  %183 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !4030
  %arrayidx225 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %183, i64 %idxprom224, !dbg !4030
  %clipping226 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx225, i32 0, i32 4, !dbg !4032
  %arrayidx227 = getelementptr inbounds [8 x float], [8 x float]* %clipping226, i64 0, i64 %idxprom223, !dbg !4030
  %184 = load float, float* %arrayidx227, align 4, !dbg !4030
  %cmp228 = fcmp ogt float %184, 0x3FEE666660000000, !dbg !4033
  br i1 %cmp228, label %if.then230, label %if.else249, !dbg !4034

if.then230:                                       ; preds = %for.body222
  %185 = load i32, i32* %w, align 4, !dbg !4035
  %idxprom231 = sext i32 %185 to i64, !dbg !4037
  %186 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4037
  %window_clipping = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %186, i32 0, i32 16, !dbg !4038
  %arrayidx232 = getelementptr inbounds [8 x i8], [8 x i8]* %window_clipping, i64 0, i64 %idxprom231, !dbg !4037
  store i8 1, i8* %arrayidx232, align 1, !dbg !4039
  %187 = load float, float* %clip_avoidance_factor, align 4, !dbg !4040
  %188 = load i32, i32* %w, align 4, !dbg !4041
  %idxprom233 = sext i32 %188 to i64, !dbg !4042
  %189 = load i32, i32* %ch, align 4, !dbg !4043
  %idxprom234 = sext i32 %189 to i64, !dbg !4042
  %190 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !4042
  %arrayidx235 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %190, i64 %idxprom234, !dbg !4042
  %clipping236 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx235, i32 0, i32 4, !dbg !4044
  %arrayidx237 = getelementptr inbounds [8 x float], [8 x float]* %clipping236, i64 0, i64 %idxprom233, !dbg !4042
  %191 = load float, float* %arrayidx237, align 4, !dbg !4042
  %cmp238 = fcmp ogt float %187, %191, !dbg !4045
  br i1 %cmp238, label %cond.true240, label %cond.false241, !dbg !4046

cond.true240:                                     ; preds = %if.then230
  %192 = load float, float* %clip_avoidance_factor, align 4, !dbg !4047
  br label %cond.end247, !dbg !4049

cond.false241:                                    ; preds = %if.then230
  %193 = load i32, i32* %w, align 4, !dbg !4050
  %idxprom242 = sext i32 %193 to i64, !dbg !4052
  %194 = load i32, i32* %ch, align 4, !dbg !4053
  %idxprom243 = sext i32 %194 to i64, !dbg !4052
  %195 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi, align 8, !dbg !4052
  %arrayidx244 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %195, i64 %idxprom243, !dbg !4052
  %clipping245 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx244, i32 0, i32 4, !dbg !4054
  %arrayidx246 = getelementptr inbounds [8 x float], [8 x float]* %clipping245, i64 0, i64 %idxprom242, !dbg !4052
  %196 = load float, float* %arrayidx246, align 4, !dbg !4052
  br label %cond.end247, !dbg !4055

cond.end247:                                      ; preds = %cond.false241, %cond.true240
  %cond248 = phi float [ %192, %cond.true240 ], [ %196, %cond.false241 ], !dbg !4056
  store float %cond248, float* %clip_avoidance_factor, align 4, !dbg !4058
  br label %if.end253, !dbg !4059

if.else249:                                       ; preds = %for.body222
  %197 = load i32, i32* %w, align 4, !dbg !4060
  %idxprom250 = sext i32 %197 to i64, !dbg !4062
  %198 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4062
  %window_clipping251 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %198, i32 0, i32 16, !dbg !4063
  %arrayidx252 = getelementptr inbounds [8 x i8], [8 x i8]* %window_clipping251, i64 0, i64 %idxprom250, !dbg !4062
  store i8 0, i8* %arrayidx252, align 1, !dbg !4064
  br label %if.end253

if.end253:                                        ; preds = %if.else249, %cond.end247
  br label %for.inc254, !dbg !4065

for.inc254:                                       ; preds = %if.end253
  %199 = load i32, i32* %w, align 4, !dbg !4066
  %inc255 = add nsw i32 %199, 1, !dbg !4066
  store i32 %inc255, i32* %w, align 4, !dbg !4066
  br label %for.cond218, !dbg !4068, !llvm.loop !4069

for.end256:                                       ; preds = %for.cond218
  %200 = load float, float* %clip_avoidance_factor, align 4, !dbg !4071
  %cmp257 = fcmp ogt float %200, 0x3FEE666660000000, !dbg !4073
  br i1 %cmp257, label %if.then259, label %if.else262, !dbg !4074

if.then259:                                       ; preds = %for.end256
  %201 = load float, float* %clip_avoidance_factor, align 4, !dbg !4075
  %div260 = fdiv float 0x3FEE666660000000, %201, !dbg !4077
  %202 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4078
  %clip_avoidance_factor261 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %202, i32 0, i32 17, !dbg !4079
  store float %div260, float* %clip_avoidance_factor261, align 8, !dbg !4080
  br label %if.end264, !dbg !4081

if.else262:                                       ; preds = %for.end256
  %203 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !4082
  %clip_avoidance_factor263 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %203, i32 0, i32 17, !dbg !4084
  store float 1.000000e+00, float* %clip_avoidance_factor263, align 8, !dbg !4085
  br label %if.end264

if.end264:                                        ; preds = %if.else262, %if.then259
  %204 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4086
  %205 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4087
  %206 = load float*, float** %overlap, align 8, !dbg !4088
  call void @apply_window_and_mdct(%struct.AACEncContext* %204, %struct.SingleChannelElement* %205, float* %206), !dbg !4089
  %207 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4090
  %options = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %207, i32 0, i32 1, !dbg !4092
  %ltp = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options, i32 0, i32 3, !dbg !4093
  %208 = load i32, i32* %ltp, align 4, !dbg !4093
  %tobool265 = icmp ne i32 %208, 0, !dbg !4090
  br i1 %tobool265, label %land.lhs.true266, label %if.end280, !dbg !4094

land.lhs.true266:                                 ; preds = %if.end264
  %209 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4095
  %coder = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %209, i32 0, i32 19, !dbg !4097
  %210 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder, align 8, !dbg !4097
  %update_ltp = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %210, i32 0, i32 10, !dbg !4098
  %211 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %update_ltp, align 8, !dbg !4098
  %tobool267 = icmp ne void (%struct.AACEncContext*, %struct.SingleChannelElement*)* %211, null, !dbg !4095
  br i1 %tobool267, label %if.then268, label %if.end280, !dbg !4099

if.then268:                                       ; preds = %land.lhs.true266
  %212 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4100
  %coder269 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %212, i32 0, i32 19, !dbg !4102
  %213 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder269, align 8, !dbg !4102
  %update_ltp270 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %213, i32 0, i32 10, !dbg !4103
  %214 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %update_ltp270, align 8, !dbg !4103
  %215 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4104
  %216 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4105
  call void %214(%struct.AACEncContext* %215, %struct.SingleChannelElement* %216), !dbg !4100
  %217 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4106
  %ics271 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %217, i32 0, i32 0, !dbg !4107
  %window_sequence272 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics271, i32 0, i32 1, !dbg !4108
  %arrayidx273 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence272, i64 0, i64 0, !dbg !4106
  %218 = load i32, i32* %arrayidx273, align 4, !dbg !4106
  %idxprom274 = zext i32 %218 to i64, !dbg !4109
  %arrayidx275 = getelementptr inbounds [4 x void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)*], [4 x void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)*]* @apply_window, i64 0, i64 %idxprom274, !dbg !4109
  %219 = load void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)*, void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)** %arrayidx275, align 8, !dbg !4109
  %220 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4110
  %fdsp = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %220, i32 0, i32 5, !dbg !4111
  %221 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 16, !dbg !4111
  %222 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4112
  %223 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4113
  %ltp_state = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %223, i32 0, i32 17, !dbg !4114
  %arrayidx276 = getelementptr inbounds [3072 x float], [3072 x float]* %ltp_state, i64 0, i64 0, !dbg !4113
  call void %219(%struct.AVFloatDSPContext* %221, %struct.SingleChannelElement* %222, float* %arrayidx276), !dbg !4109
  %224 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4115
  %mdct1024 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %224, i32 0, i32 3, !dbg !4116
  %mdct_calc = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct1024, i32 0, i32 12, !dbg !4117
  %225 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %mdct_calc, align 16, !dbg !4117
  %226 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4118
  %mdct1024277 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %226, i32 0, i32 3, !dbg !4119
  %227 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4120
  %lcoeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %227, i32 0, i32 18, !dbg !4121
  %arraydecay278 = getelementptr inbounds [1024 x float], [1024 x float]* %lcoeffs, i32 0, i32 0, !dbg !4120
  %228 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4122
  %ret_buf = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %228, i32 0, i32 16, !dbg !4123
  %arraydecay279 = getelementptr inbounds [2048 x float], [2048 x float]* %ret_buf, i32 0, i32 0, !dbg !4122
  call void %225(%struct.FFTContext* %mdct1024277, float* %arraydecay278, float* %arraydecay279), !dbg !4115
  br label %if.end280, !dbg !4124

if.end280:                                        ; preds = %if.then268, %land.lhs.true266, %if.end264
  store i32 0, i32* %k, align 4, !dbg !4125
  br label %for.cond281, !dbg !4127

for.cond281:                                      ; preds = %for.inc296, %if.end280
  %229 = load i32, i32* %k, align 4, !dbg !4128
  %cmp282 = icmp slt i32 %229, 1024, !dbg !4131
  br i1 %cmp282, label %for.body284, label %for.end298, !dbg !4132

for.body284:                                      ; preds = %for.cond281
  %230 = load i32, i32* %k, align 4, !dbg !4133
  %idxprom285 = sext i32 %230 to i64, !dbg !4136
  %231 = load i32, i32* %ch, align 4, !dbg !4137
  %idxprom286 = sext i32 %231 to i64, !dbg !4136
  %232 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4136
  %ch287 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %232, i32 0, i32 7, !dbg !4138
  %arrayidx288 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch287, i64 0, i64 %idxprom286, !dbg !4136
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx288, i32 0, i32 14, !dbg !4139
  %arrayidx289 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i64 0, i64 %idxprom285, !dbg !4136
  %233 = load float, float* %arrayidx289, align 4, !dbg !4136
  %conv290 = fpext float %233 to double, !dbg !4136
  %call291 = call double @fabs(double %conv290) #1, !dbg !4140
  %cmp292 = fcmp olt double %call291, 1.000000e+16, !dbg !4141
  br i1 %cmp292, label %if.end295, label %if.then294, !dbg !4142

if.then294:                                       ; preds = %for.body284
  %234 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4143
  %235 = bitcast %struct.AVCodecContext* %234 to i8*, !dbg !4143
  call void (i8*, i32, i8*, ...) @av_log(i8* %235, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.48, i32 0, i32 0)), !dbg !4145
  store i32 -22, i32* %retval, align 4, !dbg !4146
  br label %return, !dbg !4146

if.end295:                                        ; preds = %for.body284
  br label %for.inc296, !dbg !4147

for.inc296:                                       ; preds = %if.end295
  %236 = load i32, i32* %k, align 4, !dbg !4148
  %inc297 = add nsw i32 %236, 1, !dbg !4148
  store i32 %inc297, i32* %k, align 4, !dbg !4148
  br label %for.cond281, !dbg !4150, !llvm.loop !4151

for.end298:                                       ; preds = %for.cond281
  %237 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4153
  %238 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4154
  call void @avoid_clipping(%struct.AACEncContext* %237, %struct.SingleChannelElement* %238), !dbg !4155
  br label %for.inc299, !dbg !4156

for.inc299:                                       ; preds = %for.end298
  %239 = load i32, i32* %ch, align 4, !dbg !4157
  %inc300 = add nsw i32 %239, 1, !dbg !4157
  store i32 %inc300, i32* %ch, align 4, !dbg !4157
  br label %for.cond31, !dbg !4159, !llvm.loop !4160

for.end301:                                       ; preds = %for.cond31
  %240 = load i32, i32* %chans, align 4, !dbg !4162
  %241 = load i32, i32* %start_ch, align 4, !dbg !4163
  %add302 = add nsw i32 %241, %240, !dbg !4163
  store i32 %add302, i32* %start_ch, align 4, !dbg !4163
  br label %for.inc303, !dbg !4164

for.inc303:                                       ; preds = %for.end301
  %242 = load i32, i32* %i, align 4, !dbg !4165
  %inc304 = add nsw i32 %242, 1, !dbg !4165
  store i32 %inc304, i32* %i, align 4, !dbg !4165
  br label %for.cond, !dbg !4167, !llvm.loop !4168

for.end305:                                       ; preds = %for.cond
  %243 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4170
  %244 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !4172
  %245 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4173
  %channels306 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %245, i32 0, i32 13, !dbg !4174
  %246 = load i32, i32* %channels306, align 4, !dbg !4174
  %mul307 = mul nsw i32 8192, %246, !dbg !4175
  %conv308 = sext i32 %mul307 to i64, !dbg !4176
  %call309 = call i32 @ff_alloc_packet2(%struct.AVCodecContext* %243, %struct.AVPacket* %244, i64 %conv308, i64 0), !dbg !4177
  store i32 %call309, i32* %ret, align 4, !dbg !4178
  %cmp310 = icmp slt i32 %call309, 0, !dbg !4179
  br i1 %cmp310, label %if.then312, label %if.end313, !dbg !4180

if.then312:                                       ; preds = %for.end305
  %247 = load i32, i32* %ret, align 4, !dbg !4181
  store i32 %247, i32* %retval, align 4, !dbg !4182
  br label %return, !dbg !4182

if.end313:                                        ; preds = %for.end305
  store i32 0, i32* %its, align 4, !dbg !4183
  store i32 0, i32* %frame_bits, align 4, !dbg !4184
  br label %do.body, !dbg !4185, !llvm.loop !4186

do.body:                                          ; preds = %do.cond, %if.end313
  %248 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4187
  %pb = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %248, i32 0, i32 2, !dbg !4188
  %249 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !4189
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %249, i32 0, i32 3, !dbg !4190
  %250 = load i8*, i8** %data, align 8, !dbg !4190
  %251 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !4191
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %251, i32 0, i32 4, !dbg !4192
  %252 = load i32, i32* %size, align 8, !dbg !4192
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %250, i32 %252), !dbg !4193
  %253 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4194
  %frame_number314 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %253, i32 0, i32 86, !dbg !4196
  %254 = load i32, i32* %frame_number314, align 8, !dbg !4196
  %and = and i32 %254, 255, !dbg !4197
  %cmp315 = icmp eq i32 %and, 1, !dbg !4198
  br i1 %cmp315, label %land.lhs.true317, label %if.end321, !dbg !4199

land.lhs.true317:                                 ; preds = %do.body
  %255 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4200
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %255, i32 0, i32 13, !dbg !4202
  %256 = load i32, i32* %flags, align 4, !dbg !4202
  %and318 = and i32 %256, 8388608, !dbg !4203
  %tobool319 = icmp ne i32 %and318, 0, !dbg !4203
  br i1 %tobool319, label %if.end321, label %if.then320, !dbg !4204

if.then320:                                       ; preds = %land.lhs.true317
  %257 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4205
  call void @put_bitstream_info(%struct.AACEncContext* %257, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i32 0, i32 0)), !dbg !4206
  br label %if.end321, !dbg !4206

if.end321:                                        ; preds = %if.then320, %land.lhs.true317, %do.body
  store i32 0, i32* %start_ch, align 4, !dbg !4207
  store i32 0, i32* %target_bits, align 4, !dbg !4208
  %arraydecay322 = getelementptr inbounds [4 x i32], [4 x i32]* %chan_el_counter, i32 0, i32 0, !dbg !4209
  %258 = bitcast i32* %arraydecay322 to i8*, !dbg !4209
  call void @llvm.memset.p0i8.i64(i8* %258, i8 0, i64 16, i32 16, i1 false), !dbg !4209
  store i32 0, i32* %i, align 4, !dbg !4210
  br label %for.cond323, !dbg !4212

for.cond323:                                      ; preds = %for.inc731, %if.end321
  %259 = load i32, i32* %i, align 4, !dbg !4213
  %260 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4216
  %chan_map324 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %260, i32 0, i32 15, !dbg !4217
  %261 = load i8*, i8** %chan_map324, align 16, !dbg !4217
  %arrayidx325 = getelementptr inbounds i8, i8* %261, i64 0, !dbg !4216
  %262 = load i8, i8* %arrayidx325, align 1, !dbg !4216
  %conv326 = zext i8 %262 to i32, !dbg !4216
  %cmp327 = icmp slt i32 %259, %conv326, !dbg !4218
  br i1 %cmp327, label %for.body329, label %for.end733, !dbg !4219

for.body329:                                      ; preds = %for.cond323
  call void @llvm.dbg.declare(metadata %struct.FFPsyWindowInfo** %wi331, metadata !4220, metadata !2880), !dbg !4222
  %arraydecay332 = getelementptr inbounds [16 x %struct.FFPsyWindowInfo], [16 x %struct.FFPsyWindowInfo]* %windows, i32 0, i32 0, !dbg !4223
  %263 = load i32, i32* %start_ch, align 4, !dbg !4224
  %idx.ext333 = sext i32 %263 to i64, !dbg !4225
  %add.ptr334 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arraydecay332, i64 %idx.ext333, !dbg !4225
  store %struct.FFPsyWindowInfo* %add.ptr334, %struct.FFPsyWindowInfo** %wi331, align 8, !dbg !4222
  call void @llvm.dbg.declare(metadata [2 x float*]* %coeffs336, metadata !4226, metadata !2880), !dbg !4228
  %264 = load i32, i32* %i, align 4, !dbg !4229
  %add337 = add nsw i32 %264, 1, !dbg !4230
  %idxprom338 = sext i32 %add337 to i64, !dbg !4231
  %265 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4231
  %chan_map339 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %265, i32 0, i32 15, !dbg !4232
  %266 = load i8*, i8** %chan_map339, align 16, !dbg !4232
  %arrayidx340 = getelementptr inbounds i8, i8* %266, i64 %idxprom338, !dbg !4231
  %267 = load i8, i8* %arrayidx340, align 1, !dbg !4231
  %conv341 = zext i8 %267 to i32, !dbg !4231
  store i32 %conv341, i32* %tag, align 4, !dbg !4233
  %268 = load i32, i32* %tag, align 4, !dbg !4234
  %cmp342 = icmp eq i32 %268, 1, !dbg !4235
  %cond344 = select i1 %cmp342, i32 2, i32 1, !dbg !4234
  store i32 %cond344, i32* %chans, align 4, !dbg !4236
  %269 = load i32, i32* %i, align 4, !dbg !4237
  %idxprom345 = sext i32 %269 to i64, !dbg !4238
  %270 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4238
  %cpe346 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %270, i32 0, i32 16, !dbg !4239
  %271 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe346, align 8, !dbg !4239
  %arrayidx347 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %271, i64 %idxprom345, !dbg !4238
  store %struct.ChannelElement* %arrayidx347, %struct.ChannelElement** %cpe, align 8, !dbg !4240
  %272 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4241
  %common_window = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %272, i32 0, i32 1, !dbg !4242
  store i32 0, i32* %common_window, align 4, !dbg !4243
  %273 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4244
  %is_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %273, i32 0, i32 5, !dbg !4245
  %arraydecay348 = getelementptr inbounds [128 x i8], [128 x i8]* %is_mask, i32 0, i32 0, !dbg !4246
  call void @llvm.memset.p0i8.i64(i8* %arraydecay348, i8 0, i64 128, i32 1, i1 false), !dbg !4246
  %274 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4247
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %274, i32 0, i32 4, !dbg !4248
  %arraydecay349 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i32 0, i32 0, !dbg !4249
  call void @llvm.memset.p0i8.i64(i8* %arraydecay349, i8 0, i64 128, i32 1, i1 false), !dbg !4249
  %275 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4250
  %pb350 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %275, i32 0, i32 2, !dbg !4251
  %276 = load i32, i32* %tag, align 4, !dbg !4252
  call void @put_bits(%struct.PutBitContext* %pb350, i32 3, i32 %276), !dbg !4253
  %277 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4254
  %pb351 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %277, i32 0, i32 2, !dbg !4255
  %278 = load i32, i32* %tag, align 4, !dbg !4256
  %idxprom352 = sext i32 %278 to i64, !dbg !4257
  %arrayidx353 = getelementptr inbounds [4 x i32], [4 x i32]* %chan_el_counter, i64 0, i64 %idxprom352, !dbg !4257
  %279 = load i32, i32* %arrayidx353, align 4, !dbg !4258
  %inc354 = add nsw i32 %279, 1, !dbg !4258
  store i32 %inc354, i32* %arrayidx353, align 4, !dbg !4258
  call void @put_bits(%struct.PutBitContext* %pb351, i32 4, i32 %279), !dbg !4259
  store i32 0, i32* %ch, align 4, !dbg !4260
  br label %for.cond355, !dbg !4262

for.cond355:                                      ; preds = %for.inc390, %for.body329
  %280 = load i32, i32* %ch, align 4, !dbg !4263
  %281 = load i32, i32* %chans, align 4, !dbg !4266
  %cmp356 = icmp slt i32 %280, %281, !dbg !4267
  br i1 %cmp356, label %for.body358, label %for.end392, !dbg !4268

for.body358:                                      ; preds = %for.cond355
  %282 = load i32, i32* %ch, align 4, !dbg !4269
  %idxprom359 = sext i32 %282 to i64, !dbg !4271
  %283 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4271
  %ch360 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %283, i32 0, i32 7, !dbg !4272
  %arrayidx361 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch360, i64 0, i64 %idxprom359, !dbg !4271
  store %struct.SingleChannelElement* %arrayidx361, %struct.SingleChannelElement** %sce, align 8, !dbg !4273
  %284 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4274
  %coeffs362 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %284, i32 0, i32 14, !dbg !4275
  %arraydecay363 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs362, i32 0, i32 0, !dbg !4274
  %285 = load i32, i32* %ch, align 4, !dbg !4276
  %idxprom364 = sext i32 %285 to i64, !dbg !4277
  %arrayidx365 = getelementptr inbounds [2 x float*], [2 x float*]* %coeffs336, i64 0, i64 %idxprom364, !dbg !4277
  store float* %arraydecay363, float** %arrayidx365, align 8, !dbg !4278
  %286 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4279
  %ics366 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %286, i32 0, i32 0, !dbg !4280
  %predictor_present = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics366, i32 0, i32 11, !dbg !4281
  store i32 0, i32* %predictor_present, align 4, !dbg !4282
  %287 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4283
  %ics367 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %287, i32 0, i32 0, !dbg !4284
  %ltp368 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics367, i32 0, i32 5, !dbg !4285
  %present = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %ltp368, i32 0, i32 0, !dbg !4286
  store i8 0, i8* %present, align 4, !dbg !4287
  %288 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4288
  %ics369 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %288, i32 0, i32 0, !dbg !4289
  %ltp370 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics369, i32 0, i32 5, !dbg !4290
  %used = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %ltp370, i32 0, i32 4, !dbg !4291
  %arraydecay371 = getelementptr inbounds [40 x i8], [40 x i8]* %used, i32 0, i32 0, !dbg !4292
  call void @llvm.memset.p0i8.i64(i8* %arraydecay371, i8 0, i64 40, i32 4, i1 false), !dbg !4292
  %289 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4293
  %ics372 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %289, i32 0, i32 0, !dbg !4294
  %prediction_used = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics372, i32 0, i32 15, !dbg !4295
  %arraydecay373 = getelementptr inbounds [41 x i8], [41 x i8]* %prediction_used, i32 0, i32 0, !dbg !4296
  call void @llvm.memset.p0i8.i64(i8* %arraydecay373, i8 0, i64 41, i32 4, i1 false), !dbg !4296
  %290 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4297
  %tns = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %290, i32 0, i32 1, !dbg !4298
  %291 = bitcast %struct.TemporalNoiseShaping* %tns to i8*, !dbg !4299
  call void @llvm.memset.p0i8.i64(i8* %291, i8 0, i64 5540, i32 16, i1 false), !dbg !4299
  store i32 0, i32* %w, align 4, !dbg !4300
  br label %for.cond374, !dbg !4302

for.cond374:                                      ; preds = %for.inc387, %for.body358
  %292 = load i32, i32* %w, align 4, !dbg !4303
  %cmp375 = icmp slt i32 %292, 128, !dbg !4306
  br i1 %cmp375, label %for.body377, label %for.end389, !dbg !4307

for.body377:                                      ; preds = %for.cond374
  %293 = load i32, i32* %w, align 4, !dbg !4308
  %idxprom378 = sext i32 %293 to i64, !dbg !4310
  %294 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4310
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %294, i32 0, i32 3, !dbg !4311
  %arrayidx379 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom378, !dbg !4310
  %295 = load i32, i32* %arrayidx379, align 4, !dbg !4310
  %cmp380 = icmp ugt i32 %295, 12, !dbg !4312
  br i1 %cmp380, label %if.then382, label %if.end386, !dbg !4313

if.then382:                                       ; preds = %for.body377
  %296 = load i32, i32* %w, align 4, !dbg !4314
  %idxprom383 = sext i32 %296 to i64, !dbg !4315
  %297 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4315
  %band_type384 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %297, i32 0, i32 3, !dbg !4316
  %arrayidx385 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type384, i64 0, i64 %idxprom383, !dbg !4315
  store i32 0, i32* %arrayidx385, align 4, !dbg !4317
  br label %if.end386, !dbg !4315

if.end386:                                        ; preds = %if.then382, %for.body377
  br label %for.inc387, !dbg !4318

for.inc387:                                       ; preds = %if.end386
  %298 = load i32, i32* %w, align 4, !dbg !4320
  %inc388 = add nsw i32 %298, 1, !dbg !4320
  store i32 %inc388, i32* %w, align 4, !dbg !4320
  br label %for.cond374, !dbg !4322, !llvm.loop !4323

for.end389:                                       ; preds = %for.cond374
  br label %for.inc390, !dbg !4325

for.inc390:                                       ; preds = %for.end389
  %299 = load i32, i32* %ch, align 4, !dbg !4326
  %inc391 = add nsw i32 %299, 1, !dbg !4326
  store i32 %inc391, i32* %ch, align 4, !dbg !4326
  br label %for.cond355, !dbg !4328, !llvm.loop !4329

for.end392:                                       ; preds = %for.cond355
  %300 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4331
  %psy393 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %300, i32 0, i32 17, !dbg !4332
  %bitres = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy393, i32 0, i32 9, !dbg !4333
  %alloc = getelementptr inbounds %struct.anon, %struct.anon* %bitres, i32 0, i32 2, !dbg !4334
  store i32 -1, i32* %alloc, align 4, !dbg !4335
  %301 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4336
  %last_frame_pb_count = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %301, i32 0, i32 23, !dbg !4337
  %302 = load i32, i32* %last_frame_pb_count, align 4, !dbg !4337
  %303 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4338
  %channels394 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %303, i32 0, i32 13, !dbg !4339
  %304 = load i32, i32* %channels394, align 4, !dbg !4339
  %div395 = sdiv i32 %302, %304, !dbg !4340
  %305 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4341
  %psy396 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %305, i32 0, i32 17, !dbg !4342
  %bitres397 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy396, i32 0, i32 9, !dbg !4343
  %bits = getelementptr inbounds %struct.anon, %struct.anon* %bitres397, i32 0, i32 1, !dbg !4344
  store i32 %div395, i32* %bits, align 4, !dbg !4345
  %306 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4346
  %psy398 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %306, i32 0, i32 17, !dbg !4347
  %model399 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy398, i32 0, i32 1, !dbg !4348
  %307 = load %struct.FFPsyModel*, %struct.FFPsyModel** %model399, align 8, !dbg !4348
  %analyze = getelementptr inbounds %struct.FFPsyModel, %struct.FFPsyModel* %307, i32 0, i32 3, !dbg !4349
  %308 = load void (%struct.FFPsyContext*, i32, float**, %struct.FFPsyWindowInfo*)*, void (%struct.FFPsyContext*, i32, float**, %struct.FFPsyWindowInfo*)** %analyze, align 8, !dbg !4349
  %309 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4350
  %psy400 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %309, i32 0, i32 17, !dbg !4351
  %310 = load i32, i32* %start_ch, align 4, !dbg !4352
  %arraydecay401 = getelementptr inbounds [2 x float*], [2 x float*]* %coeffs336, i32 0, i32 0, !dbg !4353
  %311 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi331, align 8, !dbg !4354
  call void %308(%struct.FFPsyContext* %psy400, i32 %310, float** %arraydecay401, %struct.FFPsyWindowInfo* %311), !dbg !4346
  %312 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4355
  %psy402 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %312, i32 0, i32 17, !dbg !4357
  %bitres403 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy402, i32 0, i32 9, !dbg !4358
  %alloc404 = getelementptr inbounds %struct.anon, %struct.anon* %bitres403, i32 0, i32 2, !dbg !4359
  %313 = load i32, i32* %alloc404, align 4, !dbg !4359
  %cmp405 = icmp sgt i32 %313, 0, !dbg !4360
  br i1 %cmp405, label %if.then407, label %if.end428, !dbg !4361

if.then407:                                       ; preds = %for.end392
  %314 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4362
  %psy408 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %314, i32 0, i32 17, !dbg !4364
  %bitres409 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy408, i32 0, i32 9, !dbg !4365
  %alloc410 = getelementptr inbounds %struct.anon, %struct.anon* %bitres409, i32 0, i32 2, !dbg !4366
  %315 = load i32, i32* %alloc410, align 4, !dbg !4366
  %conv411 = sitofp i32 %315 to float, !dbg !4362
  %316 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4367
  %lambda = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %316, i32 0, i32 22, !dbg !4368
  %317 = load float, float* %lambda, align 8, !dbg !4368
  %318 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4369
  %global_quality = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %318, i32 0, i32 11, !dbg !4370
  %319 = load i32, i32* %global_quality, align 4, !dbg !4370
  %tobool412 = icmp ne i32 %319, 0, !dbg !4369
  br i1 %tobool412, label %cond.true413, label %cond.false415, !dbg !4369

cond.true413:                                     ; preds = %if.then407
  %320 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4371
  %global_quality414 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %320, i32 0, i32 11, !dbg !4373
  %321 = load i32, i32* %global_quality414, align 4, !dbg !4373
  br label %cond.end416, !dbg !4374

cond.false415:                                    ; preds = %if.then407
  br label %cond.end416, !dbg !4375

cond.end416:                                      ; preds = %cond.false415, %cond.true413
  %cond417 = phi i32 [ %321, %cond.true413 ], [ 120, %cond.false415 ], !dbg !4377
  %conv418 = sitofp i32 %cond417 to float, !dbg !4379
  %div419 = fdiv float %317, %conv418, !dbg !4380
  %mul420 = fmul float %conv411, %div419, !dbg !4381
  %322 = load i32, i32* %target_bits, align 4, !dbg !4382
  %conv421 = sitofp i32 %322 to float, !dbg !4382
  %add422 = fadd float %conv421, %mul420, !dbg !4382
  %conv423 = fptosi float %add422 to i32, !dbg !4382
  store i32 %conv423, i32* %target_bits, align 4, !dbg !4382
  %323 = load i32, i32* %chans, align 4, !dbg !4383
  %324 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4384
  %psy424 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %324, i32 0, i32 17, !dbg !4385
  %bitres425 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy424, i32 0, i32 9, !dbg !4386
  %alloc426 = getelementptr inbounds %struct.anon, %struct.anon* %bitres425, i32 0, i32 2, !dbg !4387
  %325 = load i32, i32* %alloc426, align 4, !dbg !4388
  %div427 = sdiv i32 %325, %323, !dbg !4388
  store i32 %div427, i32* %alloc426, align 4, !dbg !4388
  br label %if.end428, !dbg !4389

if.end428:                                        ; preds = %cond.end416, %for.end392
  %326 = load i32, i32* %tag, align 4, !dbg !4390
  %327 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4391
  %cur_type = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %327, i32 0, i32 26, !dbg !4392
  store i32 %326, i32* %cur_type, align 8, !dbg !4393
  store i32 0, i32* %ch, align 4, !dbg !4394
  br label %for.cond429, !dbg !4396

for.cond429:                                      ; preds = %for.inc452, %if.end428
  %328 = load i32, i32* %ch, align 4, !dbg !4397
  %329 = load i32, i32* %chans, align 4, !dbg !4400
  %cmp430 = icmp slt i32 %328, %329, !dbg !4401
  br i1 %cmp430, label %for.body432, label %for.end454, !dbg !4402

for.body432:                                      ; preds = %for.cond429
  %330 = load i32, i32* %start_ch, align 4, !dbg !4403
  %331 = load i32, i32* %ch, align 4, !dbg !4405
  %add433 = add nsw i32 %330, %331, !dbg !4406
  %332 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4407
  %cur_channel434 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %332, i32 0, i32 20, !dbg !4408
  store i32 %add433, i32* %cur_channel434, align 32, !dbg !4409
  %333 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4410
  %options435 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %333, i32 0, i32 1, !dbg !4412
  %pns = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options435, i32 0, i32 1, !dbg !4413
  %334 = load i32, i32* %pns, align 4, !dbg !4413
  %tobool436 = icmp ne i32 %334, 0, !dbg !4410
  br i1 %tobool436, label %land.lhs.true437, label %if.end446, !dbg !4414

land.lhs.true437:                                 ; preds = %for.body432
  %335 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4415
  %coder438 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %335, i32 0, i32 19, !dbg !4417
  %336 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder438, align 8, !dbg !4417
  %mark_pns = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %336, i32 0, i32 14, !dbg !4418
  %337 = load void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)** %mark_pns, align 8, !dbg !4418
  %tobool439 = icmp ne void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)* %337, null, !dbg !4415
  br i1 %tobool439, label %if.then440, label %if.end446, !dbg !4419

if.then440:                                       ; preds = %land.lhs.true437
  %338 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4420
  %coder441 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %338, i32 0, i32 19, !dbg !4421
  %339 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder441, align 8, !dbg !4421
  %mark_pns442 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %339, i32 0, i32 14, !dbg !4422
  %340 = load void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)** %mark_pns442, align 8, !dbg !4422
  %341 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4423
  %342 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4424
  %343 = load i32, i32* %ch, align 4, !dbg !4425
  %idxprom443 = sext i32 %343 to i64, !dbg !4426
  %344 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4426
  %ch444 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %344, i32 0, i32 7, !dbg !4427
  %arrayidx445 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch444, i64 0, i64 %idxprom443, !dbg !4426
  call void %340(%struct.AACEncContext* %341, %struct.AVCodecContext* %342, %struct.SingleChannelElement* %arrayidx445), !dbg !4420
  br label %if.end446, !dbg !4420

if.end446:                                        ; preds = %if.then440, %land.lhs.true437, %for.body432
  %345 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4428
  %coder447 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %345, i32 0, i32 19, !dbg !4429
  %346 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder447, align 8, !dbg !4429
  %search_for_quantizers = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %346, i32 0, i32 0, !dbg !4430
  %347 = load void (%struct.AVCodecContext*, %struct.AACEncContext*, %struct.SingleChannelElement*, float)*, void (%struct.AVCodecContext*, %struct.AACEncContext*, %struct.SingleChannelElement*, float)** %search_for_quantizers, align 8, !dbg !4430
  %348 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4431
  %349 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4432
  %350 = load i32, i32* %ch, align 4, !dbg !4433
  %idxprom448 = sext i32 %350 to i64, !dbg !4434
  %351 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4434
  %ch449 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %351, i32 0, i32 7, !dbg !4435
  %arrayidx450 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch449, i64 0, i64 %idxprom448, !dbg !4434
  %352 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4436
  %lambda451 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %352, i32 0, i32 22, !dbg !4437
  %353 = load float, float* %lambda451, align 8, !dbg !4437
  call void %347(%struct.AVCodecContext* %348, %struct.AACEncContext* %349, %struct.SingleChannelElement* %arrayidx450, float %353), !dbg !4428
  br label %for.inc452, !dbg !4438

for.inc452:                                       ; preds = %if.end446
  %354 = load i32, i32* %ch, align 4, !dbg !4439
  %inc453 = add nsw i32 %354, 1, !dbg !4439
  store i32 %inc453, i32* %ch, align 4, !dbg !4439
  br label %for.cond429, !dbg !4441, !llvm.loop !4442

for.end454:                                       ; preds = %for.cond429
  %355 = load i32, i32* %chans, align 4, !dbg !4444
  %cmp455 = icmp sgt i32 %355, 1, !dbg !4446
  br i1 %cmp455, label %land.lhs.true457, label %if.end497, !dbg !4447

land.lhs.true457:                                 ; preds = %for.end454
  %356 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi331, align 8, !dbg !4448
  %arrayidx458 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %356, i64 0, !dbg !4448
  %window_type459 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx458, i32 0, i32 0, !dbg !4450
  %arrayidx460 = getelementptr inbounds [3 x i32], [3 x i32]* %window_type459, i64 0, i64 0, !dbg !4448
  %357 = load i32, i32* %arrayidx460, align 8, !dbg !4448
  %358 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi331, align 8, !dbg !4451
  %arrayidx461 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %358, i64 1, !dbg !4451
  %window_type462 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx461, i32 0, i32 0, !dbg !4452
  %arrayidx463 = getelementptr inbounds [3 x i32], [3 x i32]* %window_type462, i64 0, i64 0, !dbg !4451
  %359 = load i32, i32* %arrayidx463, align 8, !dbg !4451
  %cmp464 = icmp eq i32 %357, %359, !dbg !4453
  br i1 %cmp464, label %land.lhs.true466, label %if.end497, !dbg !4454

land.lhs.true466:                                 ; preds = %land.lhs.true457
  %360 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi331, align 8, !dbg !4455
  %arrayidx467 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %360, i64 0, !dbg !4455
  %window_shape468 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx467, i32 0, i32 1, !dbg !4456
  %361 = load i32, i32* %window_shape468, align 4, !dbg !4456
  %362 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi331, align 8, !dbg !4457
  %arrayidx469 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %362, i64 1, !dbg !4457
  %window_shape470 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx469, i32 0, i32 1, !dbg !4458
  %363 = load i32, i32* %window_shape470, align 4, !dbg !4458
  %cmp471 = icmp eq i32 %361, %363, !dbg !4459
  br i1 %cmp471, label %if.then473, label %if.end497, !dbg !4460

if.then473:                                       ; preds = %land.lhs.true466
  %364 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4462
  %common_window474 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %364, i32 0, i32 1, !dbg !4464
  store i32 1, i32* %common_window474, align 4, !dbg !4465
  store i32 0, i32* %w, align 4, !dbg !4466
  br label %for.cond475, !dbg !4468

for.cond475:                                      ; preds = %for.inc494, %if.then473
  %365 = load i32, i32* %w, align 4, !dbg !4469
  %366 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi331, align 8, !dbg !4472
  %arrayidx476 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %366, i64 0, !dbg !4472
  %num_windows477 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx476, i32 0, i32 2, !dbg !4473
  %367 = load i32, i32* %num_windows477, align 8, !dbg !4473
  %cmp478 = icmp slt i32 %365, %367, !dbg !4474
  br i1 %cmp478, label %for.body480, label %for.end496, !dbg !4475

for.body480:                                      ; preds = %for.cond475
  %368 = load i32, i32* %w, align 4, !dbg !4476
  %idxprom481 = sext i32 %368 to i64, !dbg !4479
  %369 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi331, align 8, !dbg !4479
  %arrayidx482 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %369, i64 0, !dbg !4479
  %grouping483 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx482, i32 0, i32 3, !dbg !4480
  %arrayidx484 = getelementptr inbounds [8 x i32], [8 x i32]* %grouping483, i64 0, i64 %idxprom481, !dbg !4479
  %370 = load i32, i32* %arrayidx484, align 4, !dbg !4479
  %371 = load i32, i32* %w, align 4, !dbg !4481
  %idxprom485 = sext i32 %371 to i64, !dbg !4482
  %372 = load %struct.FFPsyWindowInfo*, %struct.FFPsyWindowInfo** %wi331, align 8, !dbg !4482
  %arrayidx486 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %372, i64 1, !dbg !4482
  %grouping487 = getelementptr inbounds %struct.FFPsyWindowInfo, %struct.FFPsyWindowInfo* %arrayidx486, i32 0, i32 3, !dbg !4483
  %arrayidx488 = getelementptr inbounds [8 x i32], [8 x i32]* %grouping487, i64 0, i64 %idxprom485, !dbg !4482
  %373 = load i32, i32* %arrayidx488, align 4, !dbg !4482
  %cmp489 = icmp ne i32 %370, %373, !dbg !4484
  br i1 %cmp489, label %if.then491, label %if.end493, !dbg !4485

if.then491:                                       ; preds = %for.body480
  %374 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4486
  %common_window492 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %374, i32 0, i32 1, !dbg !4488
  store i32 0, i32* %common_window492, align 4, !dbg !4489
  br label %for.end496, !dbg !4490

if.end493:                                        ; preds = %for.body480
  br label %for.inc494, !dbg !4491

for.inc494:                                       ; preds = %if.end493
  %375 = load i32, i32* %w, align 4, !dbg !4492
  %inc495 = add nsw i32 %375, 1, !dbg !4492
  store i32 %inc495, i32* %w, align 4, !dbg !4492
  br label %for.cond475, !dbg !4494, !llvm.loop !4495

for.end496:                                       ; preds = %if.then491, %for.cond475
  br label %if.end497, !dbg !4497

if.end497:                                        ; preds = %for.end496, %land.lhs.true466, %land.lhs.true457, %for.end454
  store i32 0, i32* %ch, align 4, !dbg !4498
  br label %for.cond498, !dbg !4500

for.cond498:                                      ; preds = %for.inc542, %if.end497
  %376 = load i32, i32* %ch, align 4, !dbg !4501
  %377 = load i32, i32* %chans, align 4, !dbg !4504
  %cmp499 = icmp slt i32 %376, %377, !dbg !4505
  br i1 %cmp499, label %for.body501, label %for.end544, !dbg !4506

for.body501:                                      ; preds = %for.cond498
  %378 = load i32, i32* %ch, align 4, !dbg !4507
  %idxprom502 = sext i32 %378 to i64, !dbg !4509
  %379 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4509
  %ch503 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %379, i32 0, i32 7, !dbg !4510
  %arrayidx504 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch503, i64 0, i64 %idxprom502, !dbg !4509
  store %struct.SingleChannelElement* %arrayidx504, %struct.SingleChannelElement** %sce, align 8, !dbg !4511
  %380 = load i32, i32* %start_ch, align 4, !dbg !4512
  %381 = load i32, i32* %ch, align 4, !dbg !4513
  %add505 = add nsw i32 %380, %381, !dbg !4514
  %382 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4515
  %cur_channel506 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %382, i32 0, i32 20, !dbg !4516
  store i32 %add505, i32* %cur_channel506, align 32, !dbg !4517
  %383 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4518
  %options507 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %383, i32 0, i32 1, !dbg !4520
  %tns508 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options507, i32 0, i32 2, !dbg !4521
  %384 = load i32, i32* %tns508, align 8, !dbg !4521
  %tobool509 = icmp ne i32 %384, 0, !dbg !4518
  br i1 %tobool509, label %land.lhs.true510, label %if.end516, !dbg !4522

land.lhs.true510:                                 ; preds = %for.body501
  %385 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4523
  %coder511 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %385, i32 0, i32 19, !dbg !4525
  %386 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder511, align 8, !dbg !4525
  %search_for_tns = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %386, i32 0, i32 15, !dbg !4526
  %387 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %search_for_tns, align 8, !dbg !4526
  %tobool512 = icmp ne void (%struct.AACEncContext*, %struct.SingleChannelElement*)* %387, null, !dbg !4523
  br i1 %tobool512, label %if.then513, label %if.end516, !dbg !4527

if.then513:                                       ; preds = %land.lhs.true510
  %388 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4528
  %coder514 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %388, i32 0, i32 19, !dbg !4529
  %389 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder514, align 8, !dbg !4529
  %search_for_tns515 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %389, i32 0, i32 15, !dbg !4530
  %390 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %search_for_tns515, align 8, !dbg !4530
  %391 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4531
  %392 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4532
  call void %390(%struct.AACEncContext* %391, %struct.SingleChannelElement* %392), !dbg !4528
  br label %if.end516, !dbg !4528

if.end516:                                        ; preds = %if.then513, %land.lhs.true510, %for.body501
  %393 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4533
  %options517 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %393, i32 0, i32 1, !dbg !4535
  %tns518 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options517, i32 0, i32 2, !dbg !4536
  %394 = load i32, i32* %tns518, align 8, !dbg !4536
  %tobool519 = icmp ne i32 %394, 0, !dbg !4533
  br i1 %tobool519, label %land.lhs.true520, label %if.end526, !dbg !4537

land.lhs.true520:                                 ; preds = %if.end516
  %395 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4538
  %coder521 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %395, i32 0, i32 19, !dbg !4540
  %396 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder521, align 8, !dbg !4540
  %apply_tns_filt = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %396, i32 0, i32 9, !dbg !4541
  %397 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %apply_tns_filt, align 8, !dbg !4541
  %tobool522 = icmp ne void (%struct.AACEncContext*, %struct.SingleChannelElement*)* %397, null, !dbg !4538
  br i1 %tobool522, label %if.then523, label %if.end526, !dbg !4542

if.then523:                                       ; preds = %land.lhs.true520
  %398 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4543
  %coder524 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %398, i32 0, i32 19, !dbg !4544
  %399 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder524, align 8, !dbg !4544
  %apply_tns_filt525 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %399, i32 0, i32 9, !dbg !4545
  %400 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %apply_tns_filt525, align 8, !dbg !4545
  %401 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4546
  %402 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4547
  call void %400(%struct.AACEncContext* %401, %struct.SingleChannelElement* %402), !dbg !4543
  br label %if.end526, !dbg !4543

if.end526:                                        ; preds = %if.then523, %land.lhs.true520, %if.end516
  %403 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4548
  %tns527 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %403, i32 0, i32 1, !dbg !4550
  %present528 = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %tns527, i32 0, i32 0, !dbg !4551
  %404 = load i32, i32* %present528, align 16, !dbg !4551
  %tobool529 = icmp ne i32 %404, 0, !dbg !4548
  br i1 %tobool529, label %if.then530, label %if.end531, !dbg !4552

if.then530:                                       ; preds = %if.end526
  store i32 1, i32* %tns_mode, align 4, !dbg !4553
  br label %if.end531, !dbg !4554

if.end531:                                        ; preds = %if.then530, %if.end526
  %405 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4555
  %options532 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %405, i32 0, i32 1, !dbg !4557
  %pns533 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options532, i32 0, i32 1, !dbg !4558
  %406 = load i32, i32* %pns533, align 4, !dbg !4558
  %tobool534 = icmp ne i32 %406, 0, !dbg !4555
  br i1 %tobool534, label %land.lhs.true535, label %if.end541, !dbg !4559

land.lhs.true535:                                 ; preds = %if.end531
  %407 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4560
  %coder536 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %407, i32 0, i32 19, !dbg !4562
  %408 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder536, align 8, !dbg !4562
  %search_for_pns = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %408, i32 0, i32 13, !dbg !4563
  %409 = load void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)** %search_for_pns, align 8, !dbg !4563
  %tobool537 = icmp ne void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)* %409, null, !dbg !4560
  br i1 %tobool537, label %if.then538, label %if.end541, !dbg !4564

if.then538:                                       ; preds = %land.lhs.true535
  %410 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4565
  %coder539 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %410, i32 0, i32 19, !dbg !4566
  %411 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder539, align 8, !dbg !4566
  %search_for_pns540 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %411, i32 0, i32 13, !dbg !4567
  %412 = load void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)** %search_for_pns540, align 8, !dbg !4567
  %413 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4568
  %414 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4569
  %415 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4570
  call void %412(%struct.AACEncContext* %413, %struct.AVCodecContext* %414, %struct.SingleChannelElement* %415), !dbg !4565
  br label %if.end541, !dbg !4565

if.end541:                                        ; preds = %if.then538, %land.lhs.true535, %if.end531
  br label %for.inc542, !dbg !4571

for.inc542:                                       ; preds = %if.end541
  %416 = load i32, i32* %ch, align 4, !dbg !4572
  %inc543 = add nsw i32 %416, 1, !dbg !4572
  store i32 %inc543, i32* %ch, align 4, !dbg !4572
  br label %for.cond498, !dbg !4574, !llvm.loop !4575

for.end544:                                       ; preds = %for.cond498
  %417 = load i32, i32* %start_ch, align 4, !dbg !4577
  %418 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4578
  %cur_channel545 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %418, i32 0, i32 20, !dbg !4579
  store i32 %417, i32* %cur_channel545, align 32, !dbg !4580
  %419 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4581
  %options546 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %419, i32 0, i32 1, !dbg !4583
  %intensity_stereo = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options546, i32 0, i32 7, !dbg !4584
  %420 = load i32, i32* %intensity_stereo, align 4, !dbg !4584
  %tobool547 = icmp ne i32 %420, 0, !dbg !4581
  br i1 %tobool547, label %if.then548, label %if.end559, !dbg !4585

if.then548:                                       ; preds = %for.end544
  %421 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4586
  %coder549 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %421, i32 0, i32 19, !dbg !4589
  %422 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder549, align 8, !dbg !4589
  %search_for_is = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %422, i32 0, i32 18, !dbg !4590
  %423 = load void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.ChannelElement*)** %search_for_is, align 8, !dbg !4590
  %tobool550 = icmp ne void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.ChannelElement*)* %423, null, !dbg !4586
  br i1 %tobool550, label %if.then551, label %if.end554, !dbg !4591

if.then551:                                       ; preds = %if.then548
  %424 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4592
  %coder552 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %424, i32 0, i32 19, !dbg !4593
  %425 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder552, align 8, !dbg !4593
  %search_for_is553 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %425, i32 0, i32 18, !dbg !4594
  %426 = load void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.ChannelElement*)** %search_for_is553, align 8, !dbg !4594
  %427 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4595
  %428 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4596
  %429 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4597
  call void %426(%struct.AACEncContext* %427, %struct.AVCodecContext* %428, %struct.ChannelElement* %429), !dbg !4592
  br label %if.end554, !dbg !4592

if.end554:                                        ; preds = %if.then551, %if.then548
  %430 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4598
  %is_mode555 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %430, i32 0, i32 3, !dbg !4600
  %431 = load i8, i8* %is_mode555, align 4, !dbg !4600
  %tobool556 = icmp ne i8 %431, 0, !dbg !4598
  br i1 %tobool556, label %if.then557, label %if.end558, !dbg !4601

if.then557:                                       ; preds = %if.end554
  store i32 1, i32* %is_mode, align 4, !dbg !4602
  br label %if.end558, !dbg !4604

if.end558:                                        ; preds = %if.then557, %if.end554
  %432 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4605
  call void @apply_intensity_stereo(%struct.ChannelElement* %432), !dbg !4606
  br label %if.end559, !dbg !4607

if.end559:                                        ; preds = %if.end558, %for.end544
  %433 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4608
  %options560 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %433, i32 0, i32 1, !dbg !4610
  %pred = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options560, i32 0, i32 5, !dbg !4611
  %434 = load i32, i32* %pred, align 4, !dbg !4611
  %tobool561 = icmp ne i32 %434, 0, !dbg !4608
  br i1 %tobool561, label %if.then562, label %if.end622, !dbg !4612

if.then562:                                       ; preds = %if.end559
  store i32 0, i32* %ch, align 4, !dbg !4613
  br label %for.cond563, !dbg !4616

for.cond563:                                      ; preds = %for.inc590, %if.then562
  %435 = load i32, i32* %ch, align 4, !dbg !4617
  %436 = load i32, i32* %chans, align 4, !dbg !4620
  %cmp564 = icmp slt i32 %435, %436, !dbg !4621
  br i1 %cmp564, label %for.body566, label %for.end592, !dbg !4622

for.body566:                                      ; preds = %for.cond563
  %437 = load i32, i32* %ch, align 4, !dbg !4623
  %idxprom567 = sext i32 %437 to i64, !dbg !4625
  %438 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4625
  %ch568 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %438, i32 0, i32 7, !dbg !4626
  %arrayidx569 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch568, i64 0, i64 %idxprom567, !dbg !4625
  store %struct.SingleChannelElement* %arrayidx569, %struct.SingleChannelElement** %sce, align 8, !dbg !4627
  %439 = load i32, i32* %start_ch, align 4, !dbg !4628
  %440 = load i32, i32* %ch, align 4, !dbg !4629
  %add570 = add nsw i32 %439, %440, !dbg !4630
  %441 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4631
  %cur_channel571 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %441, i32 0, i32 20, !dbg !4632
  store i32 %add570, i32* %cur_channel571, align 32, !dbg !4633
  %442 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4634
  %options572 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %442, i32 0, i32 1, !dbg !4636
  %pred573 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options572, i32 0, i32 5, !dbg !4637
  %443 = load i32, i32* %pred573, align 4, !dbg !4637
  %tobool574 = icmp ne i32 %443, 0, !dbg !4634
  br i1 %tobool574, label %land.lhs.true575, label %if.end581, !dbg !4638

land.lhs.true575:                                 ; preds = %for.body566
  %444 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4639
  %coder576 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %444, i32 0, i32 19, !dbg !4641
  %445 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder576, align 8, !dbg !4641
  %search_for_pred = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %445, i32 0, i32 19, !dbg !4642
  %446 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %search_for_pred, align 8, !dbg !4642
  %tobool577 = icmp ne void (%struct.AACEncContext*, %struct.SingleChannelElement*)* %446, null, !dbg !4639
  br i1 %tobool577, label %if.then578, label %if.end581, !dbg !4643

if.then578:                                       ; preds = %land.lhs.true575
  %447 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4644
  %coder579 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %447, i32 0, i32 19, !dbg !4645
  %448 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder579, align 8, !dbg !4645
  %search_for_pred580 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %448, i32 0, i32 19, !dbg !4646
  %449 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %search_for_pred580, align 8, !dbg !4646
  %450 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4647
  %451 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4648
  call void %449(%struct.AACEncContext* %450, %struct.SingleChannelElement* %451), !dbg !4644
  br label %if.end581, !dbg !4644

if.end581:                                        ; preds = %if.then578, %land.lhs.true575, %for.body566
  %452 = load i32, i32* %ch, align 4, !dbg !4649
  %idxprom582 = sext i32 %452 to i64, !dbg !4651
  %453 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4651
  %ch583 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %453, i32 0, i32 7, !dbg !4652
  %arrayidx584 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch583, i64 0, i64 %idxprom582, !dbg !4651
  %ics585 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx584, i32 0, i32 0, !dbg !4653
  %predictor_present586 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics585, i32 0, i32 11, !dbg !4654
  %454 = load i32, i32* %predictor_present586, align 4, !dbg !4654
  %tobool587 = icmp ne i32 %454, 0, !dbg !4651
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !4655

if.then588:                                       ; preds = %if.end581
  store i32 1, i32* %pred_mode, align 4, !dbg !4656
  br label %if.end589, !dbg !4658

if.end589:                                        ; preds = %if.then588, %if.end581
  br label %for.inc590, !dbg !4659

for.inc590:                                       ; preds = %if.end589
  %455 = load i32, i32* %ch, align 4, !dbg !4660
  %inc591 = add nsw i32 %455, 1, !dbg !4660
  store i32 %inc591, i32* %ch, align 4, !dbg !4660
  br label %for.cond563, !dbg !4662, !llvm.loop !4663

for.end592:                                       ; preds = %for.cond563
  %456 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4665
  %coder593 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %456, i32 0, i32 19, !dbg !4667
  %457 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder593, align 8, !dbg !4667
  %adjust_common_pred = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %457, i32 0, i32 6, !dbg !4668
  %458 = load void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.ChannelElement*)** %adjust_common_pred, align 8, !dbg !4668
  %tobool594 = icmp ne void (%struct.AACEncContext*, %struct.ChannelElement*)* %458, null, !dbg !4665
  br i1 %tobool594, label %if.then595, label %if.end598, !dbg !4669

if.then595:                                       ; preds = %for.end592
  %459 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4670
  %coder596 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %459, i32 0, i32 19, !dbg !4671
  %460 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder596, align 8, !dbg !4671
  %adjust_common_pred597 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %460, i32 0, i32 6, !dbg !4672
  %461 = load void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.ChannelElement*)** %adjust_common_pred597, align 8, !dbg !4672
  %462 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4673
  %463 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4674
  call void %461(%struct.AACEncContext* %462, %struct.ChannelElement* %463), !dbg !4670
  br label %if.end598, !dbg !4670

if.end598:                                        ; preds = %if.then595, %for.end592
  store i32 0, i32* %ch, align 4, !dbg !4675
  br label %for.cond599, !dbg !4677

for.cond599:                                      ; preds = %for.inc618, %if.end598
  %464 = load i32, i32* %ch, align 4, !dbg !4678
  %465 = load i32, i32* %chans, align 4, !dbg !4681
  %cmp600 = icmp slt i32 %464, %465, !dbg !4682
  br i1 %cmp600, label %for.body602, label %for.end620, !dbg !4683

for.body602:                                      ; preds = %for.cond599
  %466 = load i32, i32* %ch, align 4, !dbg !4684
  %idxprom603 = sext i32 %466 to i64, !dbg !4686
  %467 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4686
  %ch604 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %467, i32 0, i32 7, !dbg !4687
  %arrayidx605 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch604, i64 0, i64 %idxprom603, !dbg !4686
  store %struct.SingleChannelElement* %arrayidx605, %struct.SingleChannelElement** %sce, align 8, !dbg !4688
  %468 = load i32, i32* %start_ch, align 4, !dbg !4689
  %469 = load i32, i32* %ch, align 4, !dbg !4690
  %add606 = add nsw i32 %468, %469, !dbg !4691
  %470 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4692
  %cur_channel607 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %470, i32 0, i32 20, !dbg !4693
  store i32 %add606, i32* %cur_channel607, align 32, !dbg !4694
  %471 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4695
  %options608 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %471, i32 0, i32 1, !dbg !4697
  %pred609 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options608, i32 0, i32 5, !dbg !4698
  %472 = load i32, i32* %pred609, align 4, !dbg !4698
  %tobool610 = icmp ne i32 %472, 0, !dbg !4695
  br i1 %tobool610, label %land.lhs.true611, label %if.end617, !dbg !4699

land.lhs.true611:                                 ; preds = %for.body602
  %473 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4700
  %coder612 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %473, i32 0, i32 19, !dbg !4702
  %474 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder612, align 8, !dbg !4702
  %apply_main_pred = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %474, i32 0, i32 8, !dbg !4703
  %475 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %apply_main_pred, align 8, !dbg !4703
  %tobool613 = icmp ne void (%struct.AACEncContext*, %struct.SingleChannelElement*)* %475, null, !dbg !4700
  br i1 %tobool613, label %if.then614, label %if.end617, !dbg !4704

if.then614:                                       ; preds = %land.lhs.true611
  %476 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4705
  %coder615 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %476, i32 0, i32 19, !dbg !4706
  %477 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder615, align 8, !dbg !4706
  %apply_main_pred616 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %477, i32 0, i32 8, !dbg !4707
  %478 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %apply_main_pred616, align 8, !dbg !4707
  %479 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4708
  %480 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4709
  call void %478(%struct.AACEncContext* %479, %struct.SingleChannelElement* %480), !dbg !4705
  br label %if.end617, !dbg !4705

if.end617:                                        ; preds = %if.then614, %land.lhs.true611, %for.body602
  br label %for.inc618, !dbg !4710

for.inc618:                                       ; preds = %if.end617
  %481 = load i32, i32* %ch, align 4, !dbg !4711
  %inc619 = add nsw i32 %481, 1, !dbg !4711
  store i32 %inc619, i32* %ch, align 4, !dbg !4711
  br label %for.cond599, !dbg !4713, !llvm.loop !4714

for.end620:                                       ; preds = %for.cond599
  %482 = load i32, i32* %start_ch, align 4, !dbg !4716
  %483 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4717
  %cur_channel621 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %483, i32 0, i32 20, !dbg !4718
  store i32 %482, i32* %cur_channel621, align 32, !dbg !4719
  br label %if.end622, !dbg !4720

if.end622:                                        ; preds = %for.end620, %if.end559
  %484 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4721
  %options623 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %484, i32 0, i32 1, !dbg !4723
  %mid_side = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options623, i32 0, i32 6, !dbg !4724
  %485 = load i32, i32* %mid_side, align 8, !dbg !4724
  %tobool624 = icmp ne i32 %485, 0, !dbg !4721
  br i1 %tobool624, label %if.then625, label %if.end644, !dbg !4725

if.then625:                                       ; preds = %if.end622
  %486 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4726
  %options626 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %486, i32 0, i32 1, !dbg !4729
  %mid_side627 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options626, i32 0, i32 6, !dbg !4730
  %487 = load i32, i32* %mid_side627, align 8, !dbg !4730
  %cmp628 = icmp eq i32 %487, -1, !dbg !4731
  br i1 %cmp628, label %land.lhs.true630, label %if.else636, !dbg !4732

land.lhs.true630:                                 ; preds = %if.then625
  %488 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4733
  %coder631 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %488, i32 0, i32 19, !dbg !4735
  %489 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder631, align 8, !dbg !4735
  %search_for_ms = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %489, i32 0, i32 17, !dbg !4736
  %490 = load void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.ChannelElement*)** %search_for_ms, align 8, !dbg !4736
  %tobool632 = icmp ne void (%struct.AACEncContext*, %struct.ChannelElement*)* %490, null, !dbg !4733
  br i1 %tobool632, label %if.then633, label %if.else636, !dbg !4737

if.then633:                                       ; preds = %land.lhs.true630
  %491 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4738
  %coder634 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %491, i32 0, i32 19, !dbg !4739
  %492 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder634, align 8, !dbg !4739
  %search_for_ms635 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %492, i32 0, i32 17, !dbg !4740
  %493 = load void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.ChannelElement*)** %search_for_ms635, align 8, !dbg !4740
  %494 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4741
  %495 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4742
  call void %493(%struct.AACEncContext* %494, %struct.ChannelElement* %495), !dbg !4738
  br label %if.end643, !dbg !4738

if.else636:                                       ; preds = %land.lhs.true630, %if.then625
  %496 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4743
  %common_window637 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %496, i32 0, i32 1, !dbg !4745
  %497 = load i32, i32* %common_window637, align 4, !dbg !4745
  %tobool638 = icmp ne i32 %497, 0, !dbg !4743
  br i1 %tobool638, label %if.then639, label %if.end642, !dbg !4746

if.then639:                                       ; preds = %if.else636
  %498 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4747
  %ms_mask640 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %498, i32 0, i32 4, !dbg !4748
  %arraydecay641 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask640, i32 0, i32 0, !dbg !4749
  call void @llvm.memset.p0i8.i64(i8* %arraydecay641, i8 1, i64 128, i32 1, i1 false), !dbg !4749
  br label %if.end642, !dbg !4749

if.end642:                                        ; preds = %if.then639, %if.else636
  br label %if.end643

if.end643:                                        ; preds = %if.end642, %if.then633
  %499 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4750
  call void @apply_mid_side_stereo(%struct.ChannelElement* %499), !dbg !4751
  br label %if.end644, !dbg !4752

if.end644:                                        ; preds = %if.end643, %if.end622
  %500 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4753
  %501 = load i32, i32* %chans, align 4, !dbg !4754
  call void @adjust_frame_information(%struct.ChannelElement* %500, i32 %501), !dbg !4755
  %502 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4756
  %options645 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %502, i32 0, i32 1, !dbg !4758
  %ltp646 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options645, i32 0, i32 3, !dbg !4759
  %503 = load i32, i32* %ltp646, align 4, !dbg !4759
  %tobool647 = icmp ne i32 %503, 0, !dbg !4756
  br i1 %tobool647, label %if.then648, label %if.end681, !dbg !4760

if.then648:                                       ; preds = %if.end644
  store i32 0, i32* %ch, align 4, !dbg !4761
  br label %for.cond649, !dbg !4764

for.cond649:                                      ; preds = %for.inc671, %if.then648
  %504 = load i32, i32* %ch, align 4, !dbg !4765
  %505 = load i32, i32* %chans, align 4, !dbg !4768
  %cmp650 = icmp slt i32 %504, %505, !dbg !4769
  br i1 %cmp650, label %for.body652, label %for.end673, !dbg !4770

for.body652:                                      ; preds = %for.cond649
  %506 = load i32, i32* %ch, align 4, !dbg !4771
  %idxprom653 = sext i32 %506 to i64, !dbg !4773
  %507 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4773
  %ch654 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %507, i32 0, i32 7, !dbg !4774
  %arrayidx655 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch654, i64 0, i64 %idxprom653, !dbg !4773
  store %struct.SingleChannelElement* %arrayidx655, %struct.SingleChannelElement** %sce, align 8, !dbg !4775
  %508 = load i32, i32* %start_ch, align 4, !dbg !4776
  %509 = load i32, i32* %ch, align 4, !dbg !4777
  %add656 = add nsw i32 %508, %509, !dbg !4778
  %510 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4779
  %cur_channel657 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %510, i32 0, i32 20, !dbg !4780
  store i32 %add656, i32* %cur_channel657, align 32, !dbg !4781
  %511 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4782
  %coder658 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %511, i32 0, i32 19, !dbg !4784
  %512 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder658, align 8, !dbg !4784
  %search_for_ltp = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %512, i32 0, i32 16, !dbg !4785
  %513 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)** %search_for_ltp, align 8, !dbg !4785
  %tobool659 = icmp ne void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)* %513, null, !dbg !4782
  br i1 %tobool659, label %if.then660, label %if.end664, !dbg !4786

if.then660:                                       ; preds = %for.body652
  %514 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4787
  %coder661 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %514, i32 0, i32 19, !dbg !4788
  %515 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder661, align 8, !dbg !4788
  %search_for_ltp662 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %515, i32 0, i32 16, !dbg !4789
  %516 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)** %search_for_ltp662, align 8, !dbg !4789
  %517 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4790
  %518 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4791
  %519 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4792
  %common_window663 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %519, i32 0, i32 1, !dbg !4793
  %520 = load i32, i32* %common_window663, align 4, !dbg !4793
  call void %516(%struct.AACEncContext* %517, %struct.SingleChannelElement* %518, i32 %520), !dbg !4787
  br label %if.end664, !dbg !4787

if.end664:                                        ; preds = %if.then660, %for.body652
  %521 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce, align 8, !dbg !4794
  %ics665 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %521, i32 0, i32 0, !dbg !4796
  %ltp666 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics665, i32 0, i32 5, !dbg !4797
  %present667 = getelementptr inbounds %struct.LongTermPrediction, %struct.LongTermPrediction* %ltp666, i32 0, i32 0, !dbg !4798
  %522 = load i8, i8* %present667, align 4, !dbg !4798
  %tobool668 = icmp ne i8 %522, 0, !dbg !4794
  br i1 %tobool668, label %if.then669, label %if.end670, !dbg !4799

if.then669:                                       ; preds = %if.end664
  store i32 1, i32* %pred_mode, align 4, !dbg !4800
  br label %if.end670, !dbg !4802

if.end670:                                        ; preds = %if.then669, %if.end664
  br label %for.inc671, !dbg !4803

for.inc671:                                       ; preds = %if.end670
  %523 = load i32, i32* %ch, align 4, !dbg !4804
  %inc672 = add nsw i32 %523, 1, !dbg !4804
  store i32 %inc672, i32* %ch, align 4, !dbg !4804
  br label %for.cond649, !dbg !4806, !llvm.loop !4807

for.end673:                                       ; preds = %for.cond649
  %524 = load i32, i32* %start_ch, align 4, !dbg !4809
  %525 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4810
  %cur_channel674 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %525, i32 0, i32 20, !dbg !4811
  store i32 %524, i32* %cur_channel674, align 32, !dbg !4812
  %526 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4813
  %coder675 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %526, i32 0, i32 19, !dbg !4815
  %527 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder675, align 8, !dbg !4815
  %adjust_common_ltp = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %527, i32 0, i32 7, !dbg !4816
  %528 = load void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.ChannelElement*)** %adjust_common_ltp, align 8, !dbg !4816
  %tobool676 = icmp ne void (%struct.AACEncContext*, %struct.ChannelElement*)* %528, null, !dbg !4813
  br i1 %tobool676, label %if.then677, label %if.end680, !dbg !4817

if.then677:                                       ; preds = %for.end673
  %529 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4818
  %coder678 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %529, i32 0, i32 19, !dbg !4819
  %530 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder678, align 8, !dbg !4819
  %adjust_common_ltp679 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %530, i32 0, i32 7, !dbg !4820
  %531 = load void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.ChannelElement*)** %adjust_common_ltp679, align 8, !dbg !4820
  %532 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4821
  %533 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4822
  call void %531(%struct.AACEncContext* %532, %struct.ChannelElement* %533), !dbg !4818
  br label %if.end680, !dbg !4818

if.end680:                                        ; preds = %if.then677, %for.end673
  br label %if.end681, !dbg !4823

if.end681:                                        ; preds = %if.end680, %if.end644
  %534 = load i32, i32* %chans, align 4, !dbg !4824
  %cmp682 = icmp eq i32 %534, 2, !dbg !4826
  br i1 %cmp682, label %if.then684, label %if.end715, !dbg !4827

if.then684:                                       ; preds = %if.end681
  %535 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4828
  %pb685 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %535, i32 0, i32 2, !dbg !4830
  %536 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4831
  %common_window686 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %536, i32 0, i32 1, !dbg !4832
  %537 = load i32, i32* %common_window686, align 4, !dbg !4832
  call void @put_bits(%struct.PutBitContext* %pb685, i32 1, i32 %537), !dbg !4833
  %538 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4834
  %common_window687 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %538, i32 0, i32 1, !dbg !4836
  %539 = load i32, i32* %common_window687, align 4, !dbg !4836
  %tobool688 = icmp ne i32 %539, 0, !dbg !4834
  br i1 %tobool688, label %if.then689, label %if.end714, !dbg !4837

if.then689:                                       ; preds = %if.then684
  %540 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4838
  %541 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4840
  %ch690 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %541, i32 0, i32 7, !dbg !4841
  %arrayidx691 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch690, i64 0, i64 0, !dbg !4840
  %ics692 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx691, i32 0, i32 0, !dbg !4842
  call void @put_ics_info(%struct.AACEncContext* %540, %struct.IndividualChannelStream* %ics692), !dbg !4843
  %542 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4844
  %coder693 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %542, i32 0, i32 19, !dbg !4846
  %543 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder693, align 8, !dbg !4846
  %encode_main_pred = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %543, i32 0, i32 5, !dbg !4847
  %544 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %encode_main_pred, align 8, !dbg !4847
  %tobool694 = icmp ne void (%struct.AACEncContext*, %struct.SingleChannelElement*)* %544, null, !dbg !4844
  br i1 %tobool694, label %if.then695, label %if.end700, !dbg !4848

if.then695:                                       ; preds = %if.then689
  %545 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4849
  %coder696 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %545, i32 0, i32 19, !dbg !4850
  %546 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder696, align 8, !dbg !4850
  %encode_main_pred697 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %546, i32 0, i32 5, !dbg !4851
  %547 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %encode_main_pred697, align 8, !dbg !4851
  %548 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4852
  %549 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4853
  %ch698 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %549, i32 0, i32 7, !dbg !4854
  %arrayidx699 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch698, i64 0, i64 0, !dbg !4853
  call void %547(%struct.AACEncContext* %548, %struct.SingleChannelElement* %arrayidx699), !dbg !4849
  br label %if.end700, !dbg !4849

if.end700:                                        ; preds = %if.then695, %if.then689
  %550 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4855
  %coder701 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %550, i32 0, i32 19, !dbg !4857
  %551 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder701, align 8, !dbg !4857
  %encode_ltp_info = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %551, i32 0, i32 4, !dbg !4858
  %552 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)** %encode_ltp_info, align 8, !dbg !4858
  %tobool702 = icmp ne void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)* %552, null, !dbg !4855
  br i1 %tobool702, label %if.then703, label %if.end708, !dbg !4859

if.then703:                                       ; preds = %if.end700
  %553 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4860
  %coder704 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %553, i32 0, i32 19, !dbg !4861
  %554 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder704, align 8, !dbg !4861
  %encode_ltp_info705 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %554, i32 0, i32 4, !dbg !4862
  %555 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)** %encode_ltp_info705, align 8, !dbg !4862
  %556 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4863
  %557 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4864
  %ch706 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %557, i32 0, i32 7, !dbg !4865
  %arrayidx707 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch706, i64 0, i64 0, !dbg !4864
  call void %555(%struct.AACEncContext* %556, %struct.SingleChannelElement* %arrayidx707, i32 1), !dbg !4860
  br label %if.end708, !dbg !4860

if.end708:                                        ; preds = %if.then703, %if.end700
  %558 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4866
  %pb709 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %558, i32 0, i32 2, !dbg !4867
  %559 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4868
  call void @encode_ms_info(%struct.PutBitContext* %pb709, %struct.ChannelElement* %559), !dbg !4869
  %560 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4870
  %ms_mode710 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %560, i32 0, i32 2, !dbg !4872
  %561 = load i32, i32* %ms_mode710, align 8, !dbg !4872
  %tobool711 = icmp ne i32 %561, 0, !dbg !4870
  br i1 %tobool711, label %if.then712, label %if.end713, !dbg !4873

if.then712:                                       ; preds = %if.end708
  store i32 1, i32* %ms_mode, align 4, !dbg !4874
  br label %if.end713, !dbg !4876

if.end713:                                        ; preds = %if.then712, %if.end708
  br label %if.end714, !dbg !4877

if.end714:                                        ; preds = %if.end713, %if.then684
  br label %if.end715, !dbg !4878

if.end715:                                        ; preds = %if.end714, %if.end681
  store i32 0, i32* %ch, align 4, !dbg !4879
  br label %for.cond716, !dbg !4881

for.cond716:                                      ; preds = %for.inc727, %if.end715
  %562 = load i32, i32* %ch, align 4, !dbg !4882
  %563 = load i32, i32* %chans, align 4, !dbg !4885
  %cmp717 = icmp slt i32 %562, %563, !dbg !4886
  br i1 %cmp717, label %for.body719, label %for.end729, !dbg !4887

for.body719:                                      ; preds = %for.cond716
  %564 = load i32, i32* %start_ch, align 4, !dbg !4888
  %565 = load i32, i32* %ch, align 4, !dbg !4890
  %add720 = add nsw i32 %564, %565, !dbg !4891
  %566 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4892
  %cur_channel721 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %566, i32 0, i32 20, !dbg !4893
  store i32 %add720, i32* %cur_channel721, align 32, !dbg !4894
  %567 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4895
  %568 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4896
  %569 = load i32, i32* %ch, align 4, !dbg !4897
  %idxprom722 = sext i32 %569 to i64, !dbg !4898
  %570 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4898
  %ch723 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %570, i32 0, i32 7, !dbg !4899
  %arrayidx724 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch723, i64 0, i64 %idxprom722, !dbg !4898
  %571 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !4900
  %common_window725 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %571, i32 0, i32 1, !dbg !4901
  %572 = load i32, i32* %common_window725, align 4, !dbg !4901
  %call726 = call i32 @encode_individual_channel(%struct.AVCodecContext* %567, %struct.AACEncContext* %568, %struct.SingleChannelElement* %arrayidx724, i32 %572), !dbg !4902
  br label %for.inc727, !dbg !4903

for.inc727:                                       ; preds = %for.body719
  %573 = load i32, i32* %ch, align 4, !dbg !4904
  %inc728 = add nsw i32 %573, 1, !dbg !4904
  store i32 %inc728, i32* %ch, align 4, !dbg !4904
  br label %for.cond716, !dbg !4906, !llvm.loop !4907

for.end729:                                       ; preds = %for.cond716
  %574 = load i32, i32* %chans, align 4, !dbg !4909
  %575 = load i32, i32* %start_ch, align 4, !dbg !4910
  %add730 = add nsw i32 %575, %574, !dbg !4910
  store i32 %add730, i32* %start_ch, align 4, !dbg !4910
  br label %for.inc731, !dbg !4911

for.inc731:                                       ; preds = %for.end729
  %576 = load i32, i32* %i, align 4, !dbg !4912
  %inc732 = add nsw i32 %576, 1, !dbg !4912
  store i32 %inc732, i32* %i, align 4, !dbg !4912
  br label %for.cond323, !dbg !4914, !llvm.loop !4915

for.end733:                                       ; preds = %for.cond323
  %577 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4917
  %flags734 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %577, i32 0, i32 13, !dbg !4919
  %578 = load i32, i32* %flags734, align 4, !dbg !4919
  %and735 = and i32 %578, 2, !dbg !4920
  %tobool736 = icmp ne i32 %and735, 0, !dbg !4920
  br i1 %tobool736, label %if.then737, label %if.end738, !dbg !4921

if.then737:                                       ; preds = %for.end733
  br label %do.end, !dbg !4922

if.end738:                                        ; preds = %for.end733
  %579 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4924
  %pb739 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %579, i32 0, i32 2, !dbg !4925
  %call740 = call i32 @put_bits_count(%struct.PutBitContext* %pb739), !dbg !4926
  store i32 %call740, i32* %frame_bits, align 4, !dbg !4927
  %580 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4928
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %580, i32 0, i32 9, !dbg !4929
  %581 = load i64, i64* %bit_rate, align 8, !dbg !4929
  %mul741 = mul nsw i64 %581, 1024, !dbg !4930
  %582 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4931
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %582, i32 0, i32 82, !dbg !4932
  %583 = load i32, i32* %sample_rate, align 8, !dbg !4932
  %conv742 = sext i32 %583 to i64, !dbg !4931
  %div743 = sdiv i64 %mul741, %conv742, !dbg !4933
  %conv744 = trunc i64 %div743 to i32, !dbg !4928
  store i32 %conv744, i32* %rate_bits, align 4, !dbg !4934
  %584 = load i32, i32* %rate_bits, align 4, !dbg !4935
  %585 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4936
  %channels745 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %585, i32 0, i32 13, !dbg !4937
  %586 = load i32, i32* %channels745, align 4, !dbg !4937
  %mul746 = mul nsw i32 6144, %586, !dbg !4938
  %sub = sub nsw i32 %mul746, 3, !dbg !4939
  %cmp747 = icmp sgt i32 %584, %sub, !dbg !4940
  br i1 %cmp747, label %cond.true749, label %cond.false753, !dbg !4941

cond.true749:                                     ; preds = %if.end738
  %587 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4942
  %channels750 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %587, i32 0, i32 13, !dbg !4944
  %588 = load i32, i32* %channels750, align 4, !dbg !4944
  %mul751 = mul nsw i32 6144, %588, !dbg !4945
  %sub752 = sub nsw i32 %mul751, 3, !dbg !4946
  br label %cond.end754, !dbg !4947

cond.false753:                                    ; preds = %if.end738
  %589 = load i32, i32* %rate_bits, align 4, !dbg !4948
  br label %cond.end754, !dbg !4950

cond.end754:                                      ; preds = %cond.false753, %cond.true749
  %cond755 = phi i32 [ %sub752, %cond.true749 ], [ %589, %cond.false753 ], !dbg !4951
  store i32 %cond755, i32* %rate_bits, align 4, !dbg !4953
  %590 = load i32, i32* %target_bits, align 4, !dbg !4954
  %591 = load i32, i32* %rate_bits, align 4, !dbg !4955
  %cmp756 = icmp sgt i32 %590, %591, !dbg !4956
  br i1 %cmp756, label %cond.true758, label %cond.false759, !dbg !4957

cond.true758:                                     ; preds = %cond.end754
  %592 = load i32, i32* %target_bits, align 4, !dbg !4958
  br label %cond.end760, !dbg !4959

cond.false759:                                    ; preds = %cond.end754
  %593 = load i32, i32* %rate_bits, align 4, !dbg !4960
  br label %cond.end760, !dbg !4961

cond.end760:                                      ; preds = %cond.false759, %cond.true758
  %cond761 = phi i32 [ %592, %cond.true758 ], [ %593, %cond.false759 ], !dbg !4962
  store i32 %cond761, i32* %too_many_bits, align 4, !dbg !4963
  %594 = load i32, i32* %too_many_bits, align 4, !dbg !4964
  %595 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4965
  %channels762 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %595, i32 0, i32 13, !dbg !4966
  %596 = load i32, i32* %channels762, align 4, !dbg !4966
  %mul763 = mul nsw i32 6144, %596, !dbg !4967
  %sub764 = sub nsw i32 %mul763, 3, !dbg !4968
  %cmp765 = icmp sgt i32 %594, %sub764, !dbg !4969
  br i1 %cmp765, label %cond.true767, label %cond.false771, !dbg !4970

cond.true767:                                     ; preds = %cond.end760
  %597 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !4971
  %channels768 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %597, i32 0, i32 13, !dbg !4972
  %598 = load i32, i32* %channels768, align 4, !dbg !4972
  %mul769 = mul nsw i32 6144, %598, !dbg !4973
  %sub770 = sub nsw i32 %mul769, 3, !dbg !4974
  br label %cond.end772, !dbg !4975

cond.false771:                                    ; preds = %cond.end760
  %599 = load i32, i32* %too_many_bits, align 4, !dbg !4976
  br label %cond.end772, !dbg !4977

cond.end772:                                      ; preds = %cond.false771, %cond.true767
  %cond773 = phi i32 [ %sub770, %cond.true767 ], [ %599, %cond.false771 ], !dbg !4978
  store i32 %cond773, i32* %too_many_bits, align 4, !dbg !4979
  %600 = load i32, i32* %rate_bits, align 4, !dbg !4980
  %601 = load i32, i32* %rate_bits, align 4, !dbg !4981
  %div774 = sdiv i32 %601, 4, !dbg !4982
  %sub775 = sub nsw i32 %600, %div774, !dbg !4983
  %602 = load i32, i32* %target_bits, align 4, !dbg !4984
  %cmp776 = icmp sgt i32 %sub775, %602, !dbg !4985
  br i1 %cmp776, label %cond.true778, label %cond.false781, !dbg !4986

cond.true778:                                     ; preds = %cond.end772
  %603 = load i32, i32* %rate_bits, align 4, !dbg !4987
  %604 = load i32, i32* %rate_bits, align 4, !dbg !4988
  %div779 = sdiv i32 %604, 4, !dbg !4989
  %sub780 = sub nsw i32 %603, %div779, !dbg !4990
  br label %cond.end782, !dbg !4991

cond.false781:                                    ; preds = %cond.end772
  %605 = load i32, i32* %target_bits, align 4, !dbg !4992
  br label %cond.end782, !dbg !4993

cond.end782:                                      ; preds = %cond.false781, %cond.true778
  %cond783 = phi i32 [ %sub780, %cond.true778 ], [ %605, %cond.false781 ], !dbg !4994
  %606 = load i32, i32* %too_many_bits, align 4, !dbg !4995
  %cmp784 = icmp sgt i32 %cond783, %606, !dbg !4996
  br i1 %cmp784, label %cond.true786, label %cond.false787, !dbg !4997

cond.true786:                                     ; preds = %cond.end782
  %607 = load i32, i32* %too_many_bits, align 4, !dbg !4998
  br label %cond.end798, !dbg !5000

cond.false787:                                    ; preds = %cond.end782
  %608 = load i32, i32* %rate_bits, align 4, !dbg !5001
  %609 = load i32, i32* %rate_bits, align 4, !dbg !5003
  %div788 = sdiv i32 %609, 4, !dbg !5004
  %sub789 = sub nsw i32 %608, %div788, !dbg !5005
  %610 = load i32, i32* %target_bits, align 4, !dbg !5006
  %cmp790 = icmp sgt i32 %sub789, %610, !dbg !5007
  br i1 %cmp790, label %cond.true792, label %cond.false795, !dbg !5008

cond.true792:                                     ; preds = %cond.false787
  %611 = load i32, i32* %rate_bits, align 4, !dbg !5009
  %612 = load i32, i32* %rate_bits, align 4, !dbg !5011
  %div793 = sdiv i32 %612, 4, !dbg !5012
  %sub794 = sub nsw i32 %611, %div793, !dbg !5013
  br label %cond.end796, !dbg !5014

cond.false795:                                    ; preds = %cond.false787
  %613 = load i32, i32* %target_bits, align 4, !dbg !5015
  br label %cond.end796, !dbg !5017

cond.end796:                                      ; preds = %cond.false795, %cond.true792
  %cond797 = phi i32 [ %sub794, %cond.true792 ], [ %613, %cond.false795 ], !dbg !5018
  br label %cond.end798, !dbg !5020

cond.end798:                                      ; preds = %cond.end796, %cond.true786
  %cond799 = phi i32 [ %607, %cond.true786 ], [ %cond797, %cond.end796 ], !dbg !5021
  store i32 %cond799, i32* %too_few_bits, align 4, !dbg !5023
  %614 = load i32, i32* %too_few_bits, align 4, !dbg !5024
  %615 = load i32, i32* %too_few_bits, align 4, !dbg !5025
  %div800 = sdiv i32 %615, 8, !dbg !5026
  %sub801 = sub nsw i32 %614, %div800, !dbg !5027
  store i32 %sub801, i32* %too_few_bits, align 4, !dbg !5028
  %616 = load i32, i32* %too_many_bits, align 4, !dbg !5029
  %617 = load i32, i32* %too_many_bits, align 4, !dbg !5030
  %div802 = sdiv i32 %617, 2, !dbg !5031
  %add803 = add nsw i32 %616, %div802, !dbg !5032
  store i32 %add803, i32* %too_many_bits, align 4, !dbg !5033
  %618 = load i32, i32* %its, align 4, !dbg !5034
  %cmp804 = icmp eq i32 %618, 0, !dbg !5035
  br i1 %cmp804, label %if.then821, label %lor.lhs.false806, !dbg !5036

lor.lhs.false806:                                 ; preds = %cond.end798
  %619 = load i32, i32* %its, align 4, !dbg !5037
  %cmp807 = icmp slt i32 %619, 5, !dbg !5039
  br i1 %cmp807, label %land.lhs.true809, label %lor.lhs.false815, !dbg !5040

land.lhs.true809:                                 ; preds = %lor.lhs.false806
  %620 = load i32, i32* %frame_bits, align 4, !dbg !5041
  %621 = load i32, i32* %too_few_bits, align 4, !dbg !5043
  %cmp810 = icmp slt i32 %620, %621, !dbg !5044
  br i1 %cmp810, label %if.then821, label %lor.lhs.false812, !dbg !5045

lor.lhs.false812:                                 ; preds = %land.lhs.true809
  %622 = load i32, i32* %frame_bits, align 4, !dbg !5046
  %623 = load i32, i32* %too_many_bits, align 4, !dbg !5048
  %cmp813 = icmp sgt i32 %622, %623, !dbg !5049
  br i1 %cmp813, label %if.then821, label %lor.lhs.false815, !dbg !5050

lor.lhs.false815:                                 ; preds = %lor.lhs.false812, %lor.lhs.false806
  %624 = load i32, i32* %frame_bits, align 4, !dbg !5051
  %625 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5052
  %channels816 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %625, i32 0, i32 13, !dbg !5053
  %626 = load i32, i32* %channels816, align 4, !dbg !5053
  %mul817 = mul nsw i32 6144, %626, !dbg !5054
  %sub818 = sub nsw i32 %mul817, 3, !dbg !5055
  %cmp819 = icmp sge i32 %624, %sub818, !dbg !5056
  br i1 %cmp819, label %if.then821, label %if.else899, !dbg !5057

if.then821:                                       ; preds = %lor.lhs.false815, %lor.lhs.false812, %land.lhs.true809, %cond.end798
  call void @llvm.dbg.declare(metadata float* %ratio, metadata !5058, metadata !2880), !dbg !5059
  %627 = load i32, i32* %rate_bits, align 4, !dbg !5060
  %conv823 = sitofp i32 %627 to float, !dbg !5061
  %628 = load i32, i32* %frame_bits, align 4, !dbg !5062
  %conv824 = sitofp i32 %628 to float, !dbg !5062
  %div825 = fdiv float %conv823, %conv824, !dbg !5063
  store float %div825, float* %ratio, align 4, !dbg !5059
  %629 = load i32, i32* %frame_bits, align 4, !dbg !5064
  %630 = load i32, i32* %too_few_bits, align 4, !dbg !5065
  %cmp826 = icmp sge i32 %629, %630, !dbg !5066
  br i1 %cmp826, label %land.lhs.true828, label %if.else835, !dbg !5067

land.lhs.true828:                                 ; preds = %if.then821
  %631 = load i32, i32* %frame_bits, align 4, !dbg !5068
  %632 = load i32, i32* %too_many_bits, align 4, !dbg !5070
  %cmp829 = icmp sle i32 %631, %632, !dbg !5071
  br i1 %cmp829, label %if.then831, label %if.else835, !dbg !5072

if.then831:                                       ; preds = %land.lhs.true828
  %633 = load float, float* %ratio, align 4, !dbg !5073
  %call832 = call float @sqrtf(float %633) #10, !dbg !5074
  %call833 = call float @sqrtf(float %call832) #10, !dbg !5075
  store float %call833, float* %ratio, align 4, !dbg !5077
  %634 = load float, float* %ratio, align 4, !dbg !5078
  store float %634, float* %a.addr.i, align 4, !dbg !5079
  store float 0x3FECCCCCC0000000, float* %amin.addr.i, align 4, !dbg !5079
  store float 0x3FF19999A0000000, float* %amax.addr.i, align 4, !dbg !5079
  %635 = load float, float* %a.addr.i, align 4, !dbg !5080
  %636 = load float, float* %amin.addr.i, align 4, !dbg !5081
  %637 = load float, float* %amax.addr.i, align 4, !dbg !5082
  %638 = call float asm "minss $2, $0 \0A\09maxss $1, $0 \0A\09", "=&x,xm,xm,0,~{dirflag},~{fpsr},~{flags}"(float %636, float %637, float %635) #11, !dbg !5080, !srcloc !5083
  store float %638, float* %a.addr.i, align 4, !dbg !5080
  %639 = load float, float* %a.addr.i, align 4, !dbg !5084
  store float %639, float* %ratio, align 4, !dbg !5085
  br label %if.end837, !dbg !5086

if.else835:                                       ; preds = %land.lhs.true828, %if.then821
  %640 = load float, float* %ratio, align 4, !dbg !5087
  %call836 = call float @sqrtf(float %640) #10, !dbg !5089
  store float %call836, float* %ratio, align 4, !dbg !5090
  br label %if.end837

if.end837:                                        ; preds = %if.else835, %if.then831
  %641 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5091
  %lambda838 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %641, i32 0, i32 22, !dbg !5092
  %642 = load float, float* %lambda838, align 8, !dbg !5092
  %643 = load float, float* %ratio, align 4, !dbg !5093
  %mul839 = fmul float %642, %643, !dbg !5094
  %cmp840 = fcmp ogt float %mul839, 6.553600e+04, !dbg !5095
  br i1 %cmp840, label %cond.true842, label %cond.false843, !dbg !5096

cond.true842:                                     ; preds = %if.end837
  br label %cond.end846, !dbg !5097

cond.false843:                                    ; preds = %if.end837
  %644 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5099
  %lambda844 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %644, i32 0, i32 22, !dbg !5101
  %645 = load float, float* %lambda844, align 8, !dbg !5101
  %646 = load float, float* %ratio, align 4, !dbg !5102
  %mul845 = fmul float %645, %646, !dbg !5103
  br label %cond.end846, !dbg !5104

cond.end846:                                      ; preds = %cond.false843, %cond.true842
  %cond847 = phi float [ 6.553600e+04, %cond.true842 ], [ %mul845, %cond.false843 ], !dbg !5105
  %647 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5107
  %lambda848 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %647, i32 0, i32 22, !dbg !5108
  store float %cond847, float* %lambda848, align 8, !dbg !5109
  %648 = load float, float* %ratio, align 4, !dbg !5110
  %cmp849 = fcmp ogt float %648, 0x3FECCCCCC0000000, !dbg !5112
  br i1 %cmp849, label %land.lhs.true851, label %if.else855, !dbg !5113

land.lhs.true851:                                 ; preds = %cond.end846
  %649 = load float, float* %ratio, align 4, !dbg !5114
  %cmp852 = fcmp olt float %649, 0x3FF19999A0000000, !dbg !5116
  br i1 %cmp852, label %if.then854, label %if.else855, !dbg !5117

if.then854:                                       ; preds = %land.lhs.true851
  br label %do.end, !dbg !5118

if.else855:                                       ; preds = %land.lhs.true851, %cond.end846
  %650 = load i32, i32* %is_mode, align 4, !dbg !5120
  %tobool856 = icmp ne i32 %650, 0, !dbg !5120
  br i1 %tobool856, label %if.then863, label %lor.lhs.false857, !dbg !5123

lor.lhs.false857:                                 ; preds = %if.else855
  %651 = load i32, i32* %ms_mode, align 4, !dbg !5124
  %tobool858 = icmp ne i32 %651, 0, !dbg !5124
  br i1 %tobool858, label %if.then863, label %lor.lhs.false859, !dbg !5126

lor.lhs.false859:                                 ; preds = %lor.lhs.false857
  %652 = load i32, i32* %tns_mode, align 4, !dbg !5127
  %tobool860 = icmp ne i32 %652, 0, !dbg !5127
  br i1 %tobool860, label %if.then863, label %lor.lhs.false861, !dbg !5129

lor.lhs.false861:                                 ; preds = %lor.lhs.false859
  %653 = load i32, i32* %pred_mode, align 4, !dbg !5130
  %tobool862 = icmp ne i32 %653, 0, !dbg !5130
  br i1 %tobool862, label %if.then863, label %if.end896, !dbg !5132

if.then863:                                       ; preds = %lor.lhs.false861, %lor.lhs.false859, %lor.lhs.false857, %if.else855
  store i32 0, i32* %i, align 4, !dbg !5133
  br label %for.cond864, !dbg !5136

for.cond864:                                      ; preds = %for.inc893, %if.then863
  %654 = load i32, i32* %i, align 4, !dbg !5137
  %655 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5140
  %chan_map865 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %655, i32 0, i32 15, !dbg !5141
  %656 = load i8*, i8** %chan_map865, align 16, !dbg !5141
  %arrayidx866 = getelementptr inbounds i8, i8* %656, i64 0, !dbg !5140
  %657 = load i8, i8* %arrayidx866, align 1, !dbg !5140
  %conv867 = zext i8 %657 to i32, !dbg !5140
  %cmp868 = icmp slt i32 %654, %conv867, !dbg !5142
  br i1 %cmp868, label %for.body870, label %for.end895, !dbg !5143

for.body870:                                      ; preds = %for.cond864
  %658 = load i32, i32* %tag, align 4, !dbg !5144
  %cmp871 = icmp eq i32 %658, 1, !dbg !5146
  %cond873 = select i1 %cmp871, i32 2, i32 1, !dbg !5144
  store i32 %cond873, i32* %chans, align 4, !dbg !5147
  %659 = load i32, i32* %i, align 4, !dbg !5148
  %idxprom874 = sext i32 %659 to i64, !dbg !5149
  %660 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5149
  %cpe875 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %660, i32 0, i32 16, !dbg !5150
  %661 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe875, align 8, !dbg !5150
  %arrayidx876 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %661, i64 %idxprom874, !dbg !5149
  store %struct.ChannelElement* %arrayidx876, %struct.ChannelElement** %cpe, align 8, !dbg !5151
  store i32 0, i32* %ch, align 4, !dbg !5152
  br label %for.cond877, !dbg !5154

for.cond877:                                      ; preds = %for.inc890, %for.body870
  %662 = load i32, i32* %ch, align 4, !dbg !5155
  %663 = load i32, i32* %chans, align 4, !dbg !5158
  %cmp878 = icmp slt i32 %662, %663, !dbg !5159
  br i1 %cmp878, label %for.body880, label %for.end892, !dbg !5160

for.body880:                                      ; preds = %for.cond877
  %664 = load i32, i32* %ch, align 4, !dbg !5161
  %idxprom881 = sext i32 %664 to i64, !dbg !5162
  %665 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !5162
  %ch882 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %665, i32 0, i32 7, !dbg !5163
  %arrayidx883 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch882, i64 0, i64 %idxprom881, !dbg !5162
  %coeffs884 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx883, i32 0, i32 14, !dbg !5164
  %arraydecay885 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs884, i32 0, i32 0, !dbg !5165
  %666 = bitcast float* %arraydecay885 to i8*, !dbg !5165
  %667 = load i32, i32* %ch, align 4, !dbg !5166
  %idxprom886 = sext i32 %667 to i64, !dbg !5167
  %668 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe, align 8, !dbg !5167
  %ch887 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %668, i32 0, i32 7, !dbg !5168
  %arrayidx888 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch887, i64 0, i64 %idxprom886, !dbg !5167
  %pcoeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx888, i32 0, i32 13, !dbg !5169
  %arraydecay889 = getelementptr inbounds [1024 x float], [1024 x float]* %pcoeffs, i32 0, i32 0, !dbg !5165
  %669 = bitcast float* %arraydecay889 to i8*, !dbg !5165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %666, i8* %669, i64 4096, i32 32, i1 false), !dbg !5165
  br label %for.inc890, !dbg !5165

for.inc890:                                       ; preds = %for.body880
  %670 = load i32, i32* %ch, align 4, !dbg !5170
  %inc891 = add nsw i32 %670, 1, !dbg !5170
  store i32 %inc891, i32* %ch, align 4, !dbg !5170
  br label %for.cond877, !dbg !5172, !llvm.loop !5173

for.end892:                                       ; preds = %for.cond877
  br label %for.inc893, !dbg !5175

for.inc893:                                       ; preds = %for.end892
  %671 = load i32, i32* %i, align 4, !dbg !5176
  %inc894 = add nsw i32 %671, 1, !dbg !5176
  store i32 %inc894, i32* %i, align 4, !dbg !5176
  br label %for.cond864, !dbg !5178, !llvm.loop !5179

for.end895:                                       ; preds = %for.cond864
  br label %if.end896, !dbg !5181

if.end896:                                        ; preds = %for.end895, %lor.lhs.false861
  %672 = load i32, i32* %its, align 4, !dbg !5182
  %inc897 = add nsw i32 %672, 1, !dbg !5182
  store i32 %inc897, i32* %its, align 4, !dbg !5182
  br label %if.end898

if.end898:                                        ; preds = %if.end896
  br label %if.end900, !dbg !5183

if.else899:                                       ; preds = %lor.lhs.false815
  br label %do.end, !dbg !5184

if.end900:                                        ; preds = %if.end898
  br label %do.cond, !dbg !5186

do.cond:                                          ; preds = %if.end900
  br i1 true, label %do.body, label %do.end, !dbg !5187, !llvm.loop !4186

do.end:                                           ; preds = %do.cond, %if.else899, %if.then854, %if.then737
  %673 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5188
  %options901 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %673, i32 0, i32 1, !dbg !5190
  %ltp902 = getelementptr inbounds %struct.AACEncOptions, %struct.AACEncOptions* %options901, i32 0, i32 3, !dbg !5191
  %674 = load i32, i32* %ltp902, align 4, !dbg !5191
  %tobool903 = icmp ne i32 %674, 0, !dbg !5188
  br i1 %tobool903, label %land.lhs.true904, label %if.end912, !dbg !5192

land.lhs.true904:                                 ; preds = %do.end
  %675 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5193
  %coder905 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %675, i32 0, i32 19, !dbg !5195
  %676 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder905, align 8, !dbg !5195
  %ltp_insert_new_frame = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %676, i32 0, i32 11, !dbg !5196
  %ltp_insert_new_frame906 = bitcast {}** %ltp_insert_new_frame to void (%struct.AACEncContext*)**, !dbg !5196
  %677 = load void (%struct.AACEncContext*)*, void (%struct.AACEncContext*)** %ltp_insert_new_frame906, align 8, !dbg !5196
  %tobool907 = icmp ne void (%struct.AACEncContext*)* %677, null, !dbg !5193
  br i1 %tobool907, label %if.then908, label %if.end912, !dbg !5197

if.then908:                                       ; preds = %land.lhs.true904
  %678 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5198
  %coder909 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %678, i32 0, i32 19, !dbg !5199
  %679 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder909, align 8, !dbg !5199
  %ltp_insert_new_frame910 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %679, i32 0, i32 11, !dbg !5200
  %ltp_insert_new_frame911 = bitcast {}** %ltp_insert_new_frame910 to void (%struct.AACEncContext*)**, !dbg !5200
  %680 = load void (%struct.AACEncContext*)*, void (%struct.AACEncContext*)** %ltp_insert_new_frame911, align 8, !dbg !5200
  %681 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5201
  call void %680(%struct.AACEncContext* %681), !dbg !5198
  br label %if.end912, !dbg !5198

if.end912:                                        ; preds = %if.then908, %land.lhs.true904, %do.end
  %682 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5202
  %pb913 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %682, i32 0, i32 2, !dbg !5203
  call void @put_bits(%struct.PutBitContext* %pb913, i32 3, i32 7), !dbg !5204
  %683 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5205
  %pb914 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %683, i32 0, i32 2, !dbg !5206
  call void @flush_put_bits(%struct.PutBitContext* %pb914), !dbg !5207
  %684 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5208
  %pb915 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %684, i32 0, i32 2, !dbg !5209
  %call916 = call i32 @put_bits_count(%struct.PutBitContext* %pb915), !dbg !5210
  %685 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5211
  %last_frame_pb_count917 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %685, i32 0, i32 23, !dbg !5212
  store i32 %call916, i32* %last_frame_pb_count917, align 4, !dbg !5213
  %686 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5214
  %lambda918 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %686, i32 0, i32 22, !dbg !5215
  %687 = load float, float* %lambda918, align 8, !dbg !5215
  %688 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5216
  %lambda_sum = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %688, i32 0, i32 24, !dbg !5217
  %689 = load float, float* %lambda_sum, align 16, !dbg !5218
  %add919 = fadd float %689, %687, !dbg !5218
  store float %add919, float* %lambda_sum, align 16, !dbg !5218
  %690 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5219
  %lambda_count = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %690, i32 0, i32 25, !dbg !5220
  %691 = load i32, i32* %lambda_count, align 4, !dbg !5221
  %inc920 = add nsw i32 %691, 1, !dbg !5221
  store i32 %inc920, i32* %lambda_count, align 4, !dbg !5221
  %692 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5222
  %afq921 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %692, i32 0, i32 27, !dbg !5223
  %693 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5224
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %693, i32 0, i32 85, !dbg !5225
  %694 = load i32, i32* %frame_size, align 4, !dbg !5225
  %695 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !5226
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %695, i32 0, i32 1, !dbg !5227
  %696 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !5228
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %696, i32 0, i32 9, !dbg !5229
  call void @ff_af_queue_remove(%struct.AudioFrameQueue* %afq921, i32 %694, i64* %pts, i64* %duration), !dbg !5230
  %697 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5231
  %pb922 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %697, i32 0, i32 2, !dbg !5232
  %call923 = call i32 @put_bits_count(%struct.PutBitContext* %pb922), !dbg !5233
  %shr = ashr i32 %call923, 3, !dbg !5234
  %698 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !5235
  %size924 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %698, i32 0, i32 4, !dbg !5236
  store i32 %shr, i32* %size924, align 8, !dbg !5237
  %699 = load i32*, i32** %got_packet_ptr.addr, align 8, !dbg !5238
  store i32 1, i32* %699, align 4, !dbg !5239
  store i32 0, i32* %retval, align 4, !dbg !5240
  br label %return, !dbg !5240

return:                                           ; preds = %if.end912, %if.then312, %if.then294, %if.then18, %if.then8, %if.then1
  %700 = load i32, i32* %retval, align 4, !dbg !5241
  ret i32 %700, !dbg !5241
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @aac_encode_end(%struct.AVCodecContext* %avctx) #3 !dbg !5242 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.AACEncContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5243, metadata !2880), !dbg !5244
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s, metadata !5245, metadata !2880), !dbg !5246
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5247
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !5248
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5248
  %2 = bitcast i8* %1 to %struct.AACEncContext*, !dbg !5247
  store %struct.AACEncContext* %2, %struct.AACEncContext** %s, align 8, !dbg !5246
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5249
  %4 = bitcast %struct.AVCodecContext* %3 to i8*, !dbg !5249
  %5 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5250
  %lambda_sum = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %5, i32 0, i32 24, !dbg !5251
  %6 = load float, float* %lambda_sum, align 16, !dbg !5251
  %7 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5252
  %lambda_count = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %7, i32 0, i32 25, !dbg !5253
  %8 = load i32, i32* %lambda_count, align 4, !dbg !5253
  %conv = sitofp i32 %8 to float, !dbg !5252
  %div = fdiv float %6, %conv, !dbg !5254
  %conv1 = fpext float %div to double, !dbg !5250
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i32 0, i32 0), double %conv1), !dbg !5255
  %9 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5256
  %mdct1024 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %9, i32 0, i32 3, !dbg !5257
  call void @ff_mdct_end(%struct.FFTContext* %mdct1024), !dbg !5258
  %10 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5259
  %mdct128 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %10, i32 0, i32 4, !dbg !5260
  call void @ff_mdct_end(%struct.FFTContext* %mdct128), !dbg !5261
  %11 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5262
  %psy = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %11, i32 0, i32 17, !dbg !5263
  call void @ff_psy_end(%struct.FFPsyContext* %psy), !dbg !5264
  %12 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5265
  %lpc = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %12, i32 0, i32 11, !dbg !5266
  call void @ff_lpc_end(%struct.LPCContext* %lpc), !dbg !5267
  %13 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5268
  %psypp = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %13, i32 0, i32 18, !dbg !5270
  %14 = load %struct.FFPsyPreprocessContext*, %struct.FFPsyPreprocessContext** %psypp, align 16, !dbg !5270
  %tobool = icmp ne %struct.FFPsyPreprocessContext* %14, null, !dbg !5268
  br i1 %tobool, label %if.then, label %if.end, !dbg !5271

if.then:                                          ; preds = %entry
  %15 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5272
  %psypp2 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %15, i32 0, i32 18, !dbg !5273
  %16 = load %struct.FFPsyPreprocessContext*, %struct.FFPsyPreprocessContext** %psypp2, align 16, !dbg !5273
  call void @ff_psy_preprocess_end(%struct.FFPsyPreprocessContext* %16), !dbg !5274
  br label %if.end, !dbg !5274

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5275
  %buffer = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %17, i32 0, i32 34, !dbg !5276
  %samples = getelementptr inbounds %struct.anon.0, %struct.anon.0* %buffer, i32 0, i32 0, !dbg !5277
  %18 = bitcast float** %samples to i8*, !dbg !5278
  call void @av_freep(i8* %18), !dbg !5279
  %19 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5280
  %cpe = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %19, i32 0, i32 16, !dbg !5281
  %20 = bitcast %struct.ChannelElement** %cpe to i8*, !dbg !5282
  call void @av_freep(i8* %20), !dbg !5283
  %21 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5284
  %fdsp = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %21, i32 0, i32 5, !dbg !5285
  %22 = bitcast %struct.AVFloatDSPContext** %fdsp to i8*, !dbg !5286
  call void @av_freep(i8* %22), !dbg !5287
  %23 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5288
  %afq = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %23, i32 0, i32 27, !dbg !5289
  call void @ff_af_queue_close(%struct.AudioFrameQueue* %afq), !dbg !5290
  ret i32 0, !dbg !5291
}

declare i8* @av_default_item_name(i8*) #4

declare void @av_get_channel_layout_string(i8*, i32, i32, i64) #4

declare void @av_log(i8*, i32, i8*, ...) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @dsp_init(%struct.AVCodecContext* %avctx, %struct.AACEncContext* %s) #3 !dbg !5292 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s.addr = alloca %struct.AACEncContext*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5295, metadata !2880), !dbg !5296
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !5297, metadata !2880), !dbg !5298
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5299, metadata !2880), !dbg !5300
  store i32 0, i32* %ret, align 4, !dbg !5300
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5301
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 13, !dbg !5302
  %1 = load i32, i32* %flags, align 4, !dbg !5302
  %and = and i32 %1, 8388608, !dbg !5303
  %call = call %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32 %and), !dbg !5304
  %2 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5305
  %fdsp = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %2, i32 0, i32 5, !dbg !5306
  store %struct.AVFloatDSPContext* %call, %struct.AVFloatDSPContext** %fdsp, align 16, !dbg !5307
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5308
  %fdsp1 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %3, i32 0, i32 5, !dbg !5310
  %4 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp1, align 16, !dbg !5310
  %tobool = icmp ne %struct.AVFloatDSPContext* %4, null, !dbg !5308
  br i1 %tobool, label %if.end, label %if.then, !dbg !5311

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5312
  br label %return, !dbg !5312

if.end:                                           ; preds = %entry
  call void @ff_kbd_window_init(float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_aac_kbd_long_1024, i32 0, i32 0), float 4.000000e+00, i32 1024), !dbg !5313
  call void @ff_kbd_window_init(float* getelementptr inbounds ([128 x float], [128 x float]* @ff_aac_kbd_short_128, i32 0, i32 0), float 6.000000e+00, i32 128), !dbg !5314
  call void @ff_init_ff_sine_windows(i32 10), !dbg !5315
  call void @ff_init_ff_sine_windows(i32 7), !dbg !5316
  %5 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5317
  %mdct1024 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %5, i32 0, i32 3, !dbg !5319
  %call2 = call i32 @ff_mdct_init(%struct.FFTContext* %mdct1024, i32 11, i32 0, double 3.276800e+04), !dbg !5320
  store i32 %call2, i32* %ret, align 4, !dbg !5321
  %cmp = icmp slt i32 %call2, 0, !dbg !5322
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !5323

if.then3:                                         ; preds = %if.end
  %6 = load i32, i32* %ret, align 4, !dbg !5324
  store i32 %6, i32* %retval, align 4, !dbg !5325
  br label %return, !dbg !5325

if.end4:                                          ; preds = %if.end
  %7 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5326
  %mdct128 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %7, i32 0, i32 4, !dbg !5328
  %call5 = call i32 @ff_mdct_init(%struct.FFTContext* %mdct128, i32 8, i32 0, double 3.276800e+04), !dbg !5329
  store i32 %call5, i32* %ret, align 4, !dbg !5330
  %cmp6 = icmp slt i32 %call5, 0, !dbg !5331
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !5332

if.then7:                                         ; preds = %if.end4
  %8 = load i32, i32* %ret, align 4, !dbg !5333
  store i32 %8, i32* %retval, align 4, !dbg !5334
  br label %return, !dbg !5334

if.end8:                                          ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !5335
  br label %return, !dbg !5335

return:                                           ; preds = %if.end8, %if.then7, %if.then3, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !5336
  ret i32 %9, !dbg !5336
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @alloc_buffers(%struct.AVCodecContext* %avctx, %struct.AACEncContext* %s) #3 !dbg !5337 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s.addr = alloca %struct.AACEncContext*, align 8
  %ch = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5338, metadata !2880), !dbg !5339
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !5340, metadata !2880), !dbg !5341
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5342, metadata !2880), !dbg !5343
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5344
  %channels = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %0, i32 0, i32 13, !dbg !5346
  %1 = load i32, i32* %channels, align 4, !dbg !5346
  %conv = sext i32 %1 to i64, !dbg !5344
  %call = call i8* @av_mallocz_array(i64 %conv, i64 12288), !dbg !5347
  %2 = bitcast i8* %call to float*, !dbg !5347
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5348
  %buffer = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %3, i32 0, i32 34, !dbg !5349
  %samples = getelementptr inbounds %struct.anon.0, %struct.anon.0* %buffer, i32 0, i32 0, !dbg !5350
  store float* %2, float** %samples, align 8, !dbg !5351
  %4 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5352
  %buffer1 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %4, i32 0, i32 34, !dbg !5354
  %samples2 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %buffer1, i32 0, i32 0, !dbg !5355
  %5 = load float*, float** %samples2, align 8, !dbg !5355
  %tobool = icmp ne float* %5, null, !dbg !5352
  br i1 %tobool, label %if.end, label %if.then, !dbg !5356

if.then:                                          ; preds = %entry
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5357
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !5357
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41, i32 0, i32 0)), !dbg !5360
  br label %alloc_fail, !dbg !5361

if.end:                                           ; preds = %entry
  %8 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5362
  %chan_map = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %8, i32 0, i32 15, !dbg !5364
  %9 = load i8*, i8** %chan_map, align 16, !dbg !5364
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 0, !dbg !5362
  %10 = load i8, i8* %arrayidx, align 1, !dbg !5362
  %conv3 = zext i8 %10 to i64, !dbg !5362
  %call4 = call i8* @av_mallocz_array(i64 %conv3, i64 547744), !dbg !5365
  %11 = bitcast i8* %call4 to %struct.ChannelElement*, !dbg !5365
  %12 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5366
  %cpe = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %12, i32 0, i32 16, !dbg !5367
  store %struct.ChannelElement* %11, %struct.ChannelElement** %cpe, align 8, !dbg !5368
  %13 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5369
  %cpe5 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %13, i32 0, i32 16, !dbg !5371
  %14 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe5, align 8, !dbg !5371
  %tobool6 = icmp ne %struct.ChannelElement* %14, null, !dbg !5369
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !5372

if.then7:                                         ; preds = %if.end
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5373
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !5373
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41, i32 0, i32 0)), !dbg !5376
  br label %alloc_fail, !dbg !5377

if.end8:                                          ; preds = %if.end
  store i32 0, i32* %ch, align 4, !dbg !5378
  br label %for.cond, !dbg !5380

for.cond:                                         ; preds = %for.inc, %if.end8
  %17 = load i32, i32* %ch, align 4, !dbg !5381
  %18 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5384
  %channels9 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %18, i32 0, i32 13, !dbg !5385
  %19 = load i32, i32* %channels9, align 4, !dbg !5385
  %cmp = icmp slt i32 %17, %19, !dbg !5386
  br i1 %cmp, label %for.body, label %for.end, !dbg !5387

for.body:                                         ; preds = %for.cond
  %20 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5388
  %buffer11 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %20, i32 0, i32 34, !dbg !5389
  %samples12 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %buffer11, i32 0, i32 0, !dbg !5390
  %21 = load float*, float** %samples12, align 8, !dbg !5390
  %22 = load i32, i32* %ch, align 4, !dbg !5391
  %mul = mul nsw i32 3072, %22, !dbg !5392
  %idx.ext = sext i32 %mul to i64, !dbg !5393
  %add.ptr = getelementptr inbounds float, float* %21, i64 %idx.ext, !dbg !5393
  %23 = load i32, i32* %ch, align 4, !dbg !5394
  %idxprom = sext i32 %23 to i64, !dbg !5395
  %24 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5395
  %planar_samples = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %24, i32 0, i32 7, !dbg !5396
  %arrayidx13 = getelementptr inbounds [16 x float*], [16 x float*]* %planar_samples, i64 0, i64 %idxprom, !dbg !5395
  store float* %add.ptr, float** %arrayidx13, align 8, !dbg !5397
  br label %for.inc, !dbg !5395

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %ch, align 4, !dbg !5398
  %inc = add nsw i32 %25, 1, !dbg !5398
  store i32 %inc, i32* %ch, align 4, !dbg !5398
  br label %for.cond, !dbg !5400, !llvm.loop !5401

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5403
  br label %return, !dbg !5403

alloc_fail:                                       ; preds = %if.then7, %if.then
  store i32 -12, i32* %retval, align 4, !dbg !5404
  br label %return, !dbg !5404

return:                                           ; preds = %alloc_fail, %for.end
  %26 = load i32, i32* %retval, align 4, !dbg !5405
  ret i32 %26, !dbg !5405
}

; Function Attrs: nounwind uwtable
define internal i32 @put_audio_specific_config(%struct.AVCodecContext* %avctx) #0 !dbg !5406 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %pb = alloca %struct.PutBitContext, align 8
  %s = alloca %struct.AACEncContext*, align 8
  %channels = alloca i32, align 4
  %max_size = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5407, metadata !2880), !dbg !5408
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %pb, metadata !5409, metadata !2880), !dbg !5410
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s, metadata !5411, metadata !2880), !dbg !5412
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5413
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !5414
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5414
  %2 = bitcast i8* %1 to %struct.AACEncContext*, !dbg !5413
  store %struct.AACEncContext* %2, %struct.AACEncContext** %s, align 8, !dbg !5412
  call void @llvm.dbg.declare(metadata i32* %channels, metadata !5415, metadata !2880), !dbg !5416
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5417
  %needs_pce = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %3, i32 0, i32 9, !dbg !5418
  %4 = load i32, i32* %needs_pce, align 4, !dbg !5418
  %tobool = icmp ne i32 %4, 0, !dbg !5419
  %lnot = xor i1 %tobool, true, !dbg !5419
  %lnot.ext = zext i1 %lnot to i32, !dbg !5419
  %5 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5420
  %channels1 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %5, i32 0, i32 13, !dbg !5421
  %6 = load i32, i32* %channels1, align 4, !dbg !5421
  %7 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5422
  %channels2 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %7, i32 0, i32 13, !dbg !5423
  %8 = load i32, i32* %channels2, align 4, !dbg !5423
  %cmp = icmp eq i32 %8, 8, !dbg !5424
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !5422
  %sub = sub nsw i32 %6, %cond, !dbg !5425
  %mul = mul nsw i32 %lnot.ext, %sub, !dbg !5426
  store i32 %mul, i32* %channels, align 4, !dbg !5416
  call void @llvm.dbg.declare(metadata i32* %max_size, metadata !5427, metadata !2880), !dbg !5428
  store i32 32, i32* %max_size, align 4, !dbg !5428
  %call = call noalias i8* @av_mallocz(i64 32), !dbg !5429
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5430
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 15, !dbg !5431
  store i8* %call, i8** %extradata, align 8, !dbg !5432
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5433
  %extradata3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 15, !dbg !5435
  %11 = load i8*, i8** %extradata3, align 8, !dbg !5435
  %tobool4 = icmp ne i8* %11, null, !dbg !5433
  br i1 %tobool4, label %if.end, label %if.then, !dbg !5436

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5437
  br label %return, !dbg !5437

if.end:                                           ; preds = %entry
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5438
  %extradata5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 15, !dbg !5439
  %13 = load i8*, i8** %extradata5, align 8, !dbg !5439
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %13, i32 32), !dbg !5440
  %14 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5441
  %profile = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %14, i32 0, i32 8, !dbg !5442
  %15 = load i32, i32* %profile, align 16, !dbg !5442
  %add = add nsw i32 %15, 1, !dbg !5443
  call void @put_bits(%struct.PutBitContext* %pb, i32 5, i32 %add), !dbg !5444
  %16 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5445
  %samplerate_index = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %16, i32 0, i32 12, !dbg !5446
  %17 = load i32, i32* %samplerate_index, align 32, !dbg !5446
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %17), !dbg !5447
  %18 = load i32, i32* %channels, align 4, !dbg !5448
  call void @put_bits(%struct.PutBitContext* %pb, i32 4, i32 %18), !dbg !5449
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 0), !dbg !5450
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 0), !dbg !5451
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 0), !dbg !5452
  %19 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5453
  %needs_pce6 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %19, i32 0, i32 9, !dbg !5455
  %20 = load i32, i32* %needs_pce6, align 4, !dbg !5455
  %tobool7 = icmp ne i32 %20, 0, !dbg !5453
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !5456

if.then8:                                         ; preds = %if.end
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5457
  call void @put_pce(%struct.PutBitContext* %pb, %struct.AVCodecContext* %21), !dbg !5458
  br label %if.end9, !dbg !5458

if.end9:                                          ; preds = %if.then8, %if.end
  call void @put_bits(%struct.PutBitContext* %pb, i32 11, i32 695), !dbg !5459
  call void @put_bits(%struct.PutBitContext* %pb, i32 5, i32 5), !dbg !5460
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 0), !dbg !5461
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !5462
  %call10 = call i32 @put_bits_count(%struct.PutBitContext* %pb), !dbg !5463
  %shr = ashr i32 %call10, 3, !dbg !5464
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5465
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 16, !dbg !5466
  store i32 %shr, i32* %extradata_size, align 8, !dbg !5467
  store i32 0, i32* %retval, align 4, !dbg !5468
  br label %return, !dbg !5468

return:                                           ; preds = %if.end9, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !5469
  ret i32 %23, !dbg !5469
}

declare i32 @ff_psy_init(%struct.FFPsyContext*, %struct.AVCodecContext*, i32, i8**, i32*, i32, i8*) #4

declare %struct.FFPsyPreprocessContext* @ff_psy_preprocess_init(%struct.AVCodecContext*) #4

declare i32 @ff_lpc_init(%struct.LPCContext*, i32, i32, i32) #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @abs_pow34_v(float* %out, float* %in, i32 %size) #5 !dbg !5470 {
entry:
  %out.addr = alloca float*, align 8
  %in.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %a = alloca float, align 4
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !5472, metadata !2880), !dbg !5473
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !5474, metadata !2880), !dbg !5475
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5476, metadata !2880), !dbg !5477
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5478, metadata !2880), !dbg !5479
  store i32 0, i32* %i, align 4, !dbg !5480
  br label %for.cond, !dbg !5482

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5483
  %1 = load i32, i32* %size.addr, align 4, !dbg !5486
  %cmp = icmp slt i32 %0, %1, !dbg !5487
  br i1 %cmp, label %for.body, label %for.end, !dbg !5488

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %a, metadata !5489, metadata !2880), !dbg !5491
  %2 = load i32, i32* %i, align 4, !dbg !5492
  %idxprom = sext i32 %2 to i64, !dbg !5493
  %3 = load float*, float** %in.addr, align 8, !dbg !5493
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !5493
  %4 = load float, float* %arrayidx, align 4, !dbg !5493
  %call = call float @fabsf(float %4) #1, !dbg !5494
  store float %call, float* %a, align 4, !dbg !5491
  %5 = load float, float* %a, align 4, !dbg !5495
  %6 = load float, float* %a, align 4, !dbg !5496
  %call1 = call float @sqrtf(float %6) #10, !dbg !5497
  %mul = fmul float %5, %call1, !dbg !5498
  %call2 = call float @sqrtf(float %mul) #10, !dbg !5499
  %7 = load i32, i32* %i, align 4, !dbg !5501
  %idxprom3 = sext i32 %7 to i64, !dbg !5502
  %8 = load float*, float** %out.addr, align 8, !dbg !5502
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 %idxprom3, !dbg !5502
  store float %call2, float* %arrayidx4, align 4, !dbg !5503
  br label %for.inc, !dbg !5504

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !5505
  %inc = add nsw i32 %9, 1, !dbg !5505
  store i32 %inc, i32* %i, align 4, !dbg !5505
  br label %for.cond, !dbg !5507, !llvm.loop !5508

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5510
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @quantize_bands(i32* %out, float* %in, float* %scaled, i32 %size, i32 %is_signed, i32 %maxval, float %Q34, float %rounding) #5 !dbg !5511 {
entry:
  %out.addr = alloca i32*, align 8
  %in.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %is_signed.addr = alloca i32, align 4
  %maxval.addr = alloca i32, align 4
  %Q34.addr = alloca float, align 4
  %rounding.addr = alloca float, align 4
  %i = alloca i32, align 4
  %qc = alloca float, align 4
  %tmp = alloca i32, align 4
  store i32* %out, i32** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out.addr, metadata !5512, metadata !2880), !dbg !5513
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !5514, metadata !2880), !dbg !5515
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !5516, metadata !2880), !dbg !5517
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5518, metadata !2880), !dbg !5519
  store i32 %is_signed, i32* %is_signed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_signed.addr, metadata !5520, metadata !2880), !dbg !5521
  store i32 %maxval, i32* %maxval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxval.addr, metadata !5522, metadata !2880), !dbg !5523
  store float %Q34, float* %Q34.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.addr, metadata !5524, metadata !2880), !dbg !5525
  store float %rounding, float* %rounding.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rounding.addr, metadata !5526, metadata !2880), !dbg !5527
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5528, metadata !2880), !dbg !5529
  store i32 0, i32* %i, align 4, !dbg !5530
  br label %for.cond, !dbg !5532

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5533
  %1 = load i32, i32* %size.addr, align 4, !dbg !5536
  %cmp = icmp slt i32 %0, %1, !dbg !5537
  br i1 %cmp, label %for.body, label %for.end, !dbg !5538

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %qc, metadata !5539, metadata !2880), !dbg !5541
  %2 = load i32, i32* %i, align 4, !dbg !5542
  %idxprom = sext i32 %2 to i64, !dbg !5543
  %3 = load float*, float** %scaled.addr, align 8, !dbg !5543
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !5543
  %4 = load float, float* %arrayidx, align 4, !dbg !5543
  %5 = load float, float* %Q34.addr, align 4, !dbg !5544
  %mul = fmul float %4, %5, !dbg !5545
  store float %mul, float* %qc, align 4, !dbg !5541
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5546, metadata !2880), !dbg !5547
  %6 = load float, float* %qc, align 4, !dbg !5548
  %7 = load float, float* %rounding.addr, align 4, !dbg !5549
  %add = fadd float %6, %7, !dbg !5550
  %8 = load i32, i32* %maxval.addr, align 4, !dbg !5551
  %conv = sitofp i32 %8 to float, !dbg !5552
  %cmp1 = fcmp ogt float %add, %conv, !dbg !5553
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !5554

cond.true:                                        ; preds = %for.body
  %9 = load i32, i32* %maxval.addr, align 4, !dbg !5555
  %conv3 = sitofp i32 %9 to float, !dbg !5557
  br label %cond.end, !dbg !5558

cond.false:                                       ; preds = %for.body
  %10 = load float, float* %qc, align 4, !dbg !5559
  %11 = load float, float* %rounding.addr, align 4, !dbg !5561
  %add4 = fadd float %10, %11, !dbg !5562
  br label %cond.end, !dbg !5563

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %conv3, %cond.true ], [ %add4, %cond.false ], !dbg !5564
  %conv5 = fptosi float %cond to i32, !dbg !5566
  store i32 %conv5, i32* %tmp, align 4, !dbg !5567
  %12 = load i32, i32* %is_signed.addr, align 4, !dbg !5568
  %tobool = icmp ne i32 %12, 0, !dbg !5568
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5570

land.lhs.true:                                    ; preds = %cond.end
  %13 = load i32, i32* %i, align 4, !dbg !5571
  %idxprom6 = sext i32 %13 to i64, !dbg !5573
  %14 = load float*, float** %in.addr, align 8, !dbg !5573
  %arrayidx7 = getelementptr inbounds float, float* %14, i64 %idxprom6, !dbg !5573
  %15 = load float, float* %arrayidx7, align 4, !dbg !5573
  %cmp8 = fcmp olt float %15, 0.000000e+00, !dbg !5574
  br i1 %cmp8, label %if.then, label %if.end, !dbg !5575

if.then:                                          ; preds = %land.lhs.true
  %16 = load i32, i32* %tmp, align 4, !dbg !5576
  %sub = sub nsw i32 0, %16, !dbg !5578
  store i32 %sub, i32* %tmp, align 4, !dbg !5579
  br label %if.end, !dbg !5580

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  %17 = load i32, i32* %tmp, align 4, !dbg !5581
  %18 = load i32, i32* %i, align 4, !dbg !5582
  %idxprom10 = sext i32 %18 to i64, !dbg !5583
  %19 = load i32*, i32** %out.addr, align 8, !dbg !5583
  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10, !dbg !5583
  store i32 %17, i32* %arrayidx11, align 4, !dbg !5584
  br label %for.inc, !dbg !5585

for.inc:                                          ; preds = %if.end
  %20 = load i32, i32* %i, align 4, !dbg !5586
  %inc = add nsw i32 %20, 1, !dbg !5586
  store i32 %inc, i32* %i, align 4, !dbg !5586
  br label %for.cond, !dbg !5588, !llvm.loop !5589

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5591
}

declare void @ff_aac_dsp_init_x86(%struct.AACEncContext*) #4

declare i32 @pthread_once(i32*, void ()*) #4

; Function Attrs: cold nounwind optsize uwtable
define internal void @aac_encode_init_tables() #3 !dbg !5592 {
entry:
  call void @ff_aac_tableinit(), !dbg !5593
  ret void, !dbg !5594
}

declare void @ff_af_queue_init(%struct.AVCodecContext*, %struct.AudioFrameQueue*) #4

declare %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32) #4

declare void @ff_kbd_window_init(float*, float, i32) #4

declare void @ff_init_ff_sine_windows(i32) #4

declare i32 @ff_mdct_init(%struct.FFTContext*, i32, i32, double) #4

declare i8* @av_mallocz_array(i64, i64) #4

declare noalias i8* @av_mallocz(i64) #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_put_bits(%struct.PutBitContext* %s, i8* %buffer, i32 %buffer_size) #5 !dbg !5595 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_size.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5598, metadata !2880), !dbg !5599
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !5600, metadata !2880), !dbg !5601
  store i32 %buffer_size, i32* %buffer_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.addr, metadata !5602, metadata !2880), !dbg !5603
  %0 = load i32, i32* %buffer_size.addr, align 4, !dbg !5604
  %cmp = icmp slt i32 %0, 0, !dbg !5606
  br i1 %cmp, label %if.then, label %if.end, !dbg !5607

if.then:                                          ; preds = %entry
  store i32 0, i32* %buffer_size.addr, align 4, !dbg !5608
  store i8* null, i8** %buffer.addr, align 8, !dbg !5610
  br label %if.end, !dbg !5611

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %buffer_size.addr, align 4, !dbg !5612
  %mul = mul nsw i32 8, %1, !dbg !5613
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5614
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 5, !dbg !5615
  store i32 %mul, i32* %size_in_bits, align 8, !dbg !5616
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !5617
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5618
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 2, !dbg !5619
  store i8* %3, i8** %buf, align 8, !dbg !5620
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5621
  %buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %5, i32 0, i32 2, !dbg !5622
  %6 = load i8*, i8** %buf1, align 8, !dbg !5622
  %7 = load i32, i32* %buffer_size.addr, align 4, !dbg !5623
  %idx.ext = sext i32 %7 to i64, !dbg !5624
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !5624
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5625
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 4, !dbg !5626
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !5627
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5628
  %buf2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 2, !dbg !5629
  %10 = load i8*, i8** %buf2, align 8, !dbg !5629
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5630
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !5631
  store i8* %10, i8** %buf_ptr, align 8, !dbg !5632
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5633
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !5634
  store i32 32, i32* %bit_left, align 4, !dbg !5635
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5636
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %13, i32 0, i32 0, !dbg !5637
  store i32 0, i32* %bit_buf, align 8, !dbg !5638
  ret void, !dbg !5639
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #5 !dbg !5640 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !5643, metadata !2880), !dbg !5648
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5654, metadata !2880), !dbg !5655
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5656, metadata !2880), !dbg !5657
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5658, metadata !2880), !dbg !5659
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !5660, metadata !2880), !dbg !5661
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !5662, metadata !2880), !dbg !5663
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5664
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !5665
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !5665
  store i32 %1, i32* %bit_buf, align 4, !dbg !5666
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5667
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !5668
  %3 = load i32, i32* %bit_left2, align 4, !dbg !5668
  store i32 %3, i32* %bit_left, align 4, !dbg !5669
  %4 = load i32, i32* %n.addr, align 4, !dbg !5670
  %5 = load i32, i32* %bit_left, align 4, !dbg !5671
  %cmp = icmp slt i32 %4, %5, !dbg !5672
  br i1 %cmp, label %if.then, label %if.else, !dbg !5673

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %bit_buf, align 4, !dbg !5674
  %7 = load i32, i32* %n.addr, align 4, !dbg !5676
  %shl = shl i32 %6, %7, !dbg !5677
  %8 = load i32, i32* %value.addr, align 4, !dbg !5678
  %or = or i32 %shl, %8, !dbg !5679
  store i32 %or, i32* %bit_buf, align 4, !dbg !5680
  %9 = load i32, i32* %n.addr, align 4, !dbg !5681
  %10 = load i32, i32* %bit_left, align 4, !dbg !5682
  %sub = sub nsw i32 %10, %9, !dbg !5682
  store i32 %sub, i32* %bit_left, align 4, !dbg !5682
  br label %if.end12, !dbg !5683

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %bit_left, align 4, !dbg !5684
  %12 = load i32, i32* %bit_buf, align 4, !dbg !5685
  %shl3 = shl i32 %12, %11, !dbg !5685
  store i32 %shl3, i32* %bit_buf, align 4, !dbg !5685
  %13 = load i32, i32* %value.addr, align 4, !dbg !5686
  %14 = load i32, i32* %n.addr, align 4, !dbg !5687
  %15 = load i32, i32* %bit_left, align 4, !dbg !5688
  %sub4 = sub nsw i32 %14, %15, !dbg !5689
  %shr = lshr i32 %13, %sub4, !dbg !5690
  %16 = load i32, i32* %bit_buf, align 4, !dbg !5691
  %or5 = or i32 %16, %shr, !dbg !5691
  store i32 %or5, i32* %bit_buf, align 4, !dbg !5691
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5692
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 4, !dbg !5693
  %18 = load i8*, i8** %buf_end, align 8, !dbg !5693
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5694
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %19, i32 0, i32 3, !dbg !5695
  %20 = load i8*, i8** %buf_ptr, align 8, !dbg !5695
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !5696
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !5696
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5696
  %cmp6 = icmp slt i64 3, %sub.ptr.sub, !dbg !5697
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !5698

if.then7:                                         ; preds = %if.else
  %21 = load i32, i32* %bit_buf, align 4, !dbg !5699
  store i32 %21, i32* %x.addr.i, align 4, !dbg !5700
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !5701
  %shl.i = shl i32 %22, 8, !dbg !5702
  %and.i = and i32 %shl.i, 65280, !dbg !5703
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !5704
  %shr.i = lshr i32 %23, 8, !dbg !5705
  %and1.i = and i32 %shr.i, 255, !dbg !5706
  %or.i = or i32 %and.i, %and1.i, !dbg !5707
  %shl2.i = shl i32 %or.i, 16, !dbg !5708
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !5709
  %shr3.i = lshr i32 %24, 16, !dbg !5710
  %shl4.i = shl i32 %shr3.i, 8, !dbg !5711
  %and5.i = and i32 %shl4.i, 65280, !dbg !5712
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !5713
  %shr6.i = lshr i32 %25, 16, !dbg !5714
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !5715
  %and8.i = and i32 %shr7.i, 255, !dbg !5716
  %or9.i = or i32 %and5.i, %and8.i, !dbg !5717
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !5718
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5719
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %26, i32 0, i32 3, !dbg !5720
  %27 = load i8*, i8** %buf_ptr8, align 8, !dbg !5720
  %28 = bitcast i8* %27 to %union.unaligned_32*, !dbg !5721
  %l = bitcast %union.unaligned_32* %28 to i32*, !dbg !5721
  store i32 %or10.i, i32* %l, align 1, !dbg !5722
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5723
  %buf_ptr9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %29, i32 0, i32 3, !dbg !5724
  %30 = load i8*, i8** %buf_ptr9, align 8, !dbg !5725
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !5725
  store i8* %add.ptr, i8** %buf_ptr9, align 8, !dbg !5725
  br label %if.end, !dbg !5726

if.else10:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.42, i32 0, i32 0)), !dbg !5727
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  %31 = load i32, i32* %n.addr, align 4, !dbg !5729
  %sub11 = sub nsw i32 32, %31, !dbg !5730
  %32 = load i32, i32* %bit_left, align 4, !dbg !5731
  %add = add nsw i32 %32, %sub11, !dbg !5731
  store i32 %add, i32* %bit_left, align 4, !dbg !5731
  %33 = load i32, i32* %value.addr, align 4, !dbg !5732
  store i32 %33, i32* %bit_buf, align 4, !dbg !5733
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %34 = load i32, i32* %bit_buf, align 4, !dbg !5734
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5735
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %35, i32 0, i32 0, !dbg !5736
  store i32 %34, i32* %bit_buf13, align 8, !dbg !5737
  %36 = load i32, i32* %bit_left, align 4, !dbg !5738
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5739
  %bit_left14 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %37, i32 0, i32 1, !dbg !5740
  store i32 %36, i32* %bit_left14, align 4, !dbg !5741
  ret void, !dbg !5742
}

; Function Attrs: nounwind uwtable
define internal void @put_pce(%struct.PutBitContext* %pb, %struct.AVCodecContext* %avctx) #0 !dbg !5743 {
entry:
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %s = alloca %struct.AACEncContext*, align 8
  %pce = alloca %struct.AACPCEInfo*, align 8
  %bitexact = alloca i32, align 4
  %aux_data = alloca i8*, align 8
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !5746, metadata !2880), !dbg !5747
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5748, metadata !2880), !dbg !5749
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5750, metadata !2880), !dbg !5751
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5752, metadata !2880), !dbg !5753
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s, metadata !5754, metadata !2880), !dbg !5755
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5756
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !5757
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5757
  %2 = bitcast i8* %1 to %struct.AACEncContext*, !dbg !5756
  store %struct.AACEncContext* %2, %struct.AACEncContext** %s, align 8, !dbg !5755
  call void @llvm.dbg.declare(metadata %struct.AACPCEInfo** %pce, metadata !5758, metadata !2880), !dbg !5760
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5761
  %pce1 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %3, i32 0, i32 6, !dbg !5762
  store %struct.AACPCEInfo* %pce1, %struct.AACPCEInfo** %pce, align 8, !dbg !5760
  call void @llvm.dbg.declare(metadata i32* %bitexact, metadata !5763, metadata !2880), !dbg !5764
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5765
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 13, !dbg !5766
  %5 = load i32, i32* %flags, align 4, !dbg !5766
  %and = and i32 %5, 8388608, !dbg !5767
  store i32 %and, i32* %bitexact, align 4, !dbg !5764
  call void @llvm.dbg.declare(metadata i8** %aux_data, metadata !5768, metadata !2880), !dbg !5769
  %6 = load i32, i32* %bitexact, align 4, !dbg !5770
  %tobool = icmp ne i32 %6, 0, !dbg !5770
  %cond = select i1 %tobool, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i32 0, i32 0), !dbg !5770
  store i8* %cond, i8** %aux_data, align 8, !dbg !5769
  %7 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5771
  call void @put_bits(%struct.PutBitContext* %7, i32 4, i32 0), !dbg !5772
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5773
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5774
  %profile = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 153, !dbg !5775
  %10 = load i32, i32* %profile, align 4, !dbg !5775
  call void @put_bits(%struct.PutBitContext* %8, i32 2, i32 %10), !dbg !5776
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5777
  %12 = load %struct.AACEncContext*, %struct.AACEncContext** %s, align 8, !dbg !5778
  %samplerate_index = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %12, i32 0, i32 12, !dbg !5779
  %13 = load i32, i32* %samplerate_index, align 32, !dbg !5779
  call void @put_bits(%struct.PutBitContext* %11, i32 4, i32 %13), !dbg !5780
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5781
  %15 = load %struct.AACPCEInfo*, %struct.AACPCEInfo** %pce, align 8, !dbg !5782
  %num_ele = getelementptr inbounds %struct.AACPCEInfo, %struct.AACPCEInfo* %15, i32 0, i32 1, !dbg !5783
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %num_ele, i64 0, i64 0, !dbg !5782
  %16 = load i32, i32* %arrayidx, align 8, !dbg !5782
  call void @put_bits(%struct.PutBitContext* %14, i32 4, i32 %16), !dbg !5784
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5785
  %18 = load %struct.AACPCEInfo*, %struct.AACPCEInfo** %pce, align 8, !dbg !5786
  %num_ele2 = getelementptr inbounds %struct.AACPCEInfo, %struct.AACPCEInfo* %18, i32 0, i32 1, !dbg !5787
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* %num_ele2, i64 0, i64 1, !dbg !5786
  %19 = load i32, i32* %arrayidx3, align 4, !dbg !5786
  call void @put_bits(%struct.PutBitContext* %17, i32 4, i32 %19), !dbg !5788
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5789
  %21 = load %struct.AACPCEInfo*, %struct.AACPCEInfo** %pce, align 8, !dbg !5790
  %num_ele4 = getelementptr inbounds %struct.AACPCEInfo, %struct.AACPCEInfo* %21, i32 0, i32 1, !dbg !5791
  %arrayidx5 = getelementptr inbounds [4 x i32], [4 x i32]* %num_ele4, i64 0, i64 2, !dbg !5790
  %22 = load i32, i32* %arrayidx5, align 8, !dbg !5790
  call void @put_bits(%struct.PutBitContext* %20, i32 4, i32 %22), !dbg !5792
  %23 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5793
  %24 = load %struct.AACPCEInfo*, %struct.AACPCEInfo** %pce, align 8, !dbg !5794
  %num_ele6 = getelementptr inbounds %struct.AACPCEInfo, %struct.AACPCEInfo* %24, i32 0, i32 1, !dbg !5795
  %arrayidx7 = getelementptr inbounds [4 x i32], [4 x i32]* %num_ele6, i64 0, i64 3, !dbg !5794
  %25 = load i32, i32* %arrayidx7, align 4, !dbg !5794
  call void @put_bits(%struct.PutBitContext* %23, i32 2, i32 %25), !dbg !5796
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5797
  call void @put_bits(%struct.PutBitContext* %26, i32 3, i32 0), !dbg !5798
  %27 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5799
  call void @put_bits(%struct.PutBitContext* %27, i32 4, i32 0), !dbg !5800
  %28 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5801
  call void @put_bits(%struct.PutBitContext* %28, i32 1, i32 0), !dbg !5802
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5803
  call void @put_bits(%struct.PutBitContext* %29, i32 1, i32 0), !dbg !5804
  %30 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5805
  call void @put_bits(%struct.PutBitContext* %30, i32 1, i32 0), !dbg !5806
  store i32 0, i32* %i, align 4, !dbg !5807
  br label %for.cond, !dbg !5809

for.cond:                                         ; preds = %for.inc22, %entry
  %31 = load i32, i32* %i, align 4, !dbg !5810
  %cmp = icmp slt i32 %31, 4, !dbg !5813
  br i1 %cmp, label %for.body, label %for.end24, !dbg !5814

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !5815
  br label %for.cond8, !dbg !5818

for.cond8:                                        ; preds = %for.inc, %for.body
  %32 = load i32, i32* %j, align 4, !dbg !5819
  %33 = load i32, i32* %i, align 4, !dbg !5822
  %idxprom = sext i32 %33 to i64, !dbg !5823
  %34 = load %struct.AACPCEInfo*, %struct.AACPCEInfo** %pce, align 8, !dbg !5823
  %num_ele9 = getelementptr inbounds %struct.AACPCEInfo, %struct.AACPCEInfo* %34, i32 0, i32 1, !dbg !5824
  %arrayidx10 = getelementptr inbounds [4 x i32], [4 x i32]* %num_ele9, i64 0, i64 %idxprom, !dbg !5823
  %35 = load i32, i32* %arrayidx10, align 4, !dbg !5823
  %cmp11 = icmp slt i32 %32, %35, !dbg !5825
  br i1 %cmp11, label %for.body12, label %for.end, !dbg !5826

for.body12:                                       ; preds = %for.cond8
  %36 = load i32, i32* %i, align 4, !dbg !5827
  %cmp13 = icmp slt i32 %36, 3, !dbg !5830
  br i1 %cmp13, label %if.then, label %if.end, !dbg !5831

if.then:                                          ; preds = %for.body12
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5832
  %38 = load i32, i32* %j, align 4, !dbg !5833
  %idxprom14 = sext i32 %38 to i64, !dbg !5834
  %39 = load i32, i32* %i, align 4, !dbg !5835
  %idxprom15 = sext i32 %39 to i64, !dbg !5834
  %40 = load %struct.AACPCEInfo*, %struct.AACPCEInfo** %pce, align 8, !dbg !5834
  %pairing = getelementptr inbounds %struct.AACPCEInfo, %struct.AACPCEInfo* %40, i32 0, i32 2, !dbg !5836
  %arrayidx16 = getelementptr inbounds [3 x [8 x i32]], [3 x [8 x i32]]* %pairing, i64 0, i64 %idxprom15, !dbg !5834
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx16, i64 0, i64 %idxprom14, !dbg !5834
  %41 = load i32, i32* %arrayidx17, align 4, !dbg !5834
  call void @put_bits(%struct.PutBitContext* %37, i32 1, i32 %41), !dbg !5837
  br label %if.end, !dbg !5837

if.end:                                           ; preds = %if.then, %for.body12
  %42 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5838
  %43 = load i32, i32* %j, align 4, !dbg !5839
  %idxprom18 = sext i32 %43 to i64, !dbg !5840
  %44 = load i32, i32* %i, align 4, !dbg !5841
  %idxprom19 = sext i32 %44 to i64, !dbg !5840
  %45 = load %struct.AACPCEInfo*, %struct.AACPCEInfo** %pce, align 8, !dbg !5840
  %index = getelementptr inbounds %struct.AACPCEInfo, %struct.AACPCEInfo* %45, i32 0, i32 3, !dbg !5842
  %arrayidx20 = getelementptr inbounds [4 x [8 x i32]], [4 x [8 x i32]]* %index, i64 0, i64 %idxprom19, !dbg !5840
  %arrayidx21 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx20, i64 0, i64 %idxprom18, !dbg !5840
  %46 = load i32, i32* %arrayidx21, align 4, !dbg !5840
  call void @put_bits(%struct.PutBitContext* %42, i32 4, i32 %46), !dbg !5843
  br label %for.inc, !dbg !5844

for.inc:                                          ; preds = %if.end
  %47 = load i32, i32* %j, align 4, !dbg !5845
  %inc = add nsw i32 %47, 1, !dbg !5845
  store i32 %inc, i32* %j, align 4, !dbg !5845
  br label %for.cond8, !dbg !5847, !llvm.loop !5848

for.end:                                          ; preds = %for.cond8
  br label %for.inc22, !dbg !5850

for.inc22:                                        ; preds = %for.end
  %48 = load i32, i32* %i, align 4, !dbg !5851
  %inc23 = add nsw i32 %48, 1, !dbg !5851
  store i32 %inc23, i32* %i, align 4, !dbg !5851
  br label %for.cond, !dbg !5853, !llvm.loop !5854

for.end24:                                        ; preds = %for.cond
  %49 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5856
  call void @avpriv_align_put_bits(%struct.PutBitContext* %49), !dbg !5857
  %50 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5858
  %51 = load i8*, i8** %aux_data, align 8, !dbg !5859
  %call = call i64 @strlen(i8* %51) #11, !dbg !5860
  %conv = trunc i64 %call to i32, !dbg !5860
  call void @put_bits(%struct.PutBitContext* %50, i32 8, i32 %conv), !dbg !5861
  %52 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5863
  %53 = load i8*, i8** %aux_data, align 8, !dbg !5864
  call void @avpriv_put_string(%struct.PutBitContext* %52, i8* %53, i32 0), !dbg !5865
  ret void, !dbg !5866
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @flush_put_bits(%struct.PutBitContext* %s) #5 !dbg !5867 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5870, metadata !2880), !dbg !5871
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5872
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 1, !dbg !5874
  %1 = load i32, i32* %bit_left, align 4, !dbg !5874
  %cmp = icmp slt i32 %1, 32, !dbg !5875
  br i1 %cmp, label %if.then, label %if.end, !dbg !5876

if.then:                                          ; preds = %entry
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5877
  %bit_left1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !5878
  %3 = load i32, i32* %bit_left1, align 4, !dbg !5878
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5879
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 0, !dbg !5880
  %5 = load i32, i32* %bit_buf, align 8, !dbg !5881
  %shl = shl i32 %5, %3, !dbg !5881
  store i32 %shl, i32* %bit_buf, align 8, !dbg !5881
  br label %if.end, !dbg !5879

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !5882

while.cond:                                       ; preds = %do.end, %if.end
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5883
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %6, i32 0, i32 1, !dbg !5885
  %7 = load i32, i32* %bit_left2, align 4, !dbg !5885
  %cmp3 = icmp slt i32 %7, 32, !dbg !5886
  br i1 %cmp3, label %while.body, label %while.end, !dbg !5887

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !5888, !llvm.loop !5890

do.body:                                          ; preds = %while.body
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5891
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 3, !dbg !5895
  %9 = load i8*, i8** %buf_ptr, align 8, !dbg !5895
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5896
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %10, i32 0, i32 4, !dbg !5897
  %11 = load i8*, i8** %buf_end, align 8, !dbg !5897
  %cmp4 = icmp ult i8* %9, %11, !dbg !5898
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !5899

if.then5:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i32 0, i32 0), i32 108), !dbg !5900
  call void @abort() #12, !dbg !5903
  unreachable, !dbg !5905

if.end6:                                          ; preds = %do.body
  br label %do.end, !dbg !5906

do.end:                                           ; preds = %if.end6
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5908
  %bit_buf7 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 0, !dbg !5909
  %13 = load i32, i32* %bit_buf7, align 8, !dbg !5909
  %shr = lshr i32 %13, 24, !dbg !5910
  %conv = trunc i32 %shr to i8, !dbg !5908
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5911
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 3, !dbg !5912
  %15 = load i8*, i8** %buf_ptr8, align 8, !dbg !5913
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5913
  store i8* %incdec.ptr, i8** %buf_ptr8, align 8, !dbg !5913
  store i8 %conv, i8* %15, align 1, !dbg !5914
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5915
  %bit_buf9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %16, i32 0, i32 0, !dbg !5916
  %17 = load i32, i32* %bit_buf9, align 8, !dbg !5917
  %shl10 = shl i32 %17, 8, !dbg !5917
  store i32 %shl10, i32* %bit_buf9, align 8, !dbg !5917
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5918
  %bit_left11 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %18, i32 0, i32 1, !dbg !5919
  %19 = load i32, i32* %bit_left11, align 4, !dbg !5920
  %add = add nsw i32 %19, 8, !dbg !5920
  store i32 %add, i32* %bit_left11, align 4, !dbg !5920
  br label %while.cond, !dbg !5921, !llvm.loop !5923

while.end:                                        ; preds = %while.cond
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5924
  %bit_left12 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %20, i32 0, i32 1, !dbg !5925
  store i32 32, i32* %bit_left12, align 4, !dbg !5926
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5927
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %21, i32 0, i32 0, !dbg !5928
  store i32 0, i32* %bit_buf13, align 8, !dbg !5929
  ret void, !dbg !5930
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @put_bits_count(%struct.PutBitContext* %s) #5 !dbg !5931 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5934, metadata !2880), !dbg !5935
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5936
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 3, !dbg !5937
  %1 = load i8*, i8** %buf_ptr, align 8, !dbg !5937
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5938
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 2, !dbg !5939
  %3 = load i8*, i8** %buf, align 8, !dbg !5939
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !5940
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !5940
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5940
  %mul = mul nsw i64 %sub.ptr.sub, 8, !dbg !5941
  %add = add nsw i64 %mul, 32, !dbg !5942
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5943
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 1, !dbg !5944
  %5 = load i32, i32* %bit_left, align 4, !dbg !5944
  %conv = sext i32 %5 to i64, !dbg !5943
  %sub = sub nsw i64 %add, %conv, !dbg !5945
  %conv1 = trunc i64 %sub to i32, !dbg !5946
  ret i32 %conv1, !dbg !5947
}

declare void @avpriv_align_put_bits(%struct.PutBitContext*) #4

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #6

declare void @avpriv_put_string(%struct.PutBitContext*, i8*, i32) #4

; Function Attrs: noreturn nounwind
declare void @abort() #7

; Function Attrs: nounwind readnone
declare float @fabsf(float) #8

; Function Attrs: nounwind
declare float @sqrtf(float) #9

; Function Attrs: inlinehint nounwind uwtable
define internal void @ff_aac_tableinit() #5 !dbg !1847 {
entry:
  %i = alloca i32, align 4
  %t1 = alloca float, align 4
  %t2 = alloca float, align 4
  %t1_inc_cur = alloca i32, align 4
  %t2_inc_cur = alloca i32, align 4
  %t1_inc_prev = alloca i32, align 4
  %t2_inc_prev = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5948, metadata !2880), !dbg !5949
  call void @llvm.dbg.declare(metadata float* %t1, metadata !5950, metadata !2880), !dbg !5951
  store float 0x3CD0000000000000, float* %t1, align 4, !dbg !5951
  call void @llvm.dbg.declare(metadata float* %t2, metadata !5952, metadata !2880), !dbg !5953
  store float 0x3D90000000000000, float* %t2, align 4, !dbg !5953
  call void @llvm.dbg.declare(metadata i32* %t1_inc_cur, metadata !5954, metadata !2880), !dbg !5955
  call void @llvm.dbg.declare(metadata i32* %t2_inc_cur, metadata !5956, metadata !2880), !dbg !5957
  call void @llvm.dbg.declare(metadata i32* %t1_inc_prev, metadata !5958, metadata !2880), !dbg !5959
  store i32 0, i32* %t1_inc_prev, align 4, !dbg !5959
  call void @llvm.dbg.declare(metadata i32* %t2_inc_prev, metadata !5960, metadata !2880), !dbg !5961
  store i32 8, i32* %t2_inc_prev, align 4, !dbg !5961
  store i32 0, i32* %i, align 4, !dbg !5962
  br label %for.cond, !dbg !5964

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5965
  %cmp = icmp slt i32 %0, 428, !dbg !5968
  br i1 %cmp, label %for.body, label %for.end, !dbg !5969

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !5970
  %rem = srem i32 %1, 4, !dbg !5972
  %mul = mul nsw i32 4, %rem, !dbg !5973
  store i32 %mul, i32* %t1_inc_cur, align 4, !dbg !5974
  %2 = load i32, i32* %i, align 4, !dbg !5975
  %mul1 = mul nsw i32 3, %2, !dbg !5976
  %add = add nsw i32 8, %mul1, !dbg !5977
  %rem2 = srem i32 %add, 16, !dbg !5978
  store i32 %rem2, i32* %t2_inc_cur, align 4, !dbg !5979
  %3 = load i32, i32* %t1_inc_cur, align 4, !dbg !5980
  %4 = load i32, i32* %t1_inc_prev, align 4, !dbg !5982
  %cmp3 = icmp slt i32 %3, %4, !dbg !5983
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5984

if.then:                                          ; preds = %for.body
  %5 = load float, float* %t1, align 4, !dbg !5985
  %mul4 = fmul float %5, 2.000000e+00, !dbg !5985
  store float %mul4, float* %t1, align 4, !dbg !5985
  br label %if.end, !dbg !5986

if.end:                                           ; preds = %if.then, %for.body
  %6 = load i32, i32* %t2_inc_cur, align 4, !dbg !5987
  %7 = load i32, i32* %t2_inc_prev, align 4, !dbg !5989
  %cmp5 = icmp slt i32 %6, %7, !dbg !5990
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !5991

if.then6:                                         ; preds = %if.end
  %8 = load float, float* %t2, align 4, !dbg !5992
  %mul7 = fmul float %8, 2.000000e+00, !dbg !5992
  store float %mul7, float* %t2, align 4, !dbg !5992
  br label %if.end8, !dbg !5993

if.end8:                                          ; preds = %if.then6, %if.end
  %9 = load float, float* %t1, align 4, !dbg !5994
  %10 = load i32, i32* %t1_inc_cur, align 4, !dbg !5995
  %idxprom = sext i32 %10 to i64, !dbg !5996
  %arrayidx = getelementptr inbounds [16 x float], [16 x float]* @ff_aac_tableinit.exp2_lut, i64 0, i64 %idxprom, !dbg !5996
  %11 = load float, float* %arrayidx, align 4, !dbg !5996
  %mul9 = fmul float %9, %11, !dbg !5997
  %12 = load i32, i32* %i, align 4, !dbg !5998
  %idxprom10 = sext i32 %12 to i64, !dbg !5999
  %arrayidx11 = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom10, !dbg !5999
  store float %mul9, float* %arrayidx11, align 4, !dbg !6000
  %13 = load float, float* %t2, align 4, !dbg !6001
  %14 = load i32, i32* %t2_inc_cur, align 4, !dbg !6002
  %idxprom12 = sext i32 %14 to i64, !dbg !6003
  %arrayidx13 = getelementptr inbounds [16 x float], [16 x float]* @ff_aac_tableinit.exp2_lut, i64 0, i64 %idxprom12, !dbg !6003
  %15 = load float, float* %arrayidx13, align 4, !dbg !6003
  %mul14 = fmul float %13, %15, !dbg !6004
  %16 = load i32, i32* %i, align 4, !dbg !6005
  %idxprom15 = sext i32 %16 to i64, !dbg !6006
  %arrayidx16 = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom15, !dbg !6006
  store float %mul14, float* %arrayidx16, align 4, !dbg !6007
  %17 = load i32, i32* %t1_inc_cur, align 4, !dbg !6008
  store i32 %17, i32* %t1_inc_prev, align 4, !dbg !6009
  %18 = load i32, i32* %t2_inc_cur, align 4, !dbg !6010
  store i32 %18, i32* %t2_inc_prev, align 4, !dbg !6011
  br label %for.inc, !dbg !6012

for.inc:                                          ; preds = %if.end8
  %19 = load i32, i32* %i, align 4, !dbg !6013
  %inc = add nsw i32 %19, 1, !dbg !6013
  store i32 %inc, i32* %i, align 4, !dbg !6013
  br label %for.cond, !dbg !6015, !llvm.loop !6016

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6018
}

declare i32 @ff_af_queue_add(%struct.AudioFrameQueue*, %struct.AVFrame*) #4

; Function Attrs: nounwind uwtable
define internal void @copy_input_samples(%struct.AACEncContext* %s, %struct.AVFrame* %frame) #0 !dbg !6019 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %ch = alloca i32, align 4
  %end = alloca i32, align 4
  %channel_map = alloca i8*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !6022, metadata !2880), !dbg !6023
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !6024, metadata !2880), !dbg !6025
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6026, metadata !2880), !dbg !6027
  call void @llvm.dbg.declare(metadata i32* %end, metadata !6028, metadata !2880), !dbg !6029
  %0 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6030
  %tobool = icmp ne %struct.AVFrame* %0, null, !dbg !6030
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6030

cond.true:                                        ; preds = %entry
  %1 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6031
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %1, i32 0, i32 5, !dbg !6033
  %2 = load i32, i32* %nb_samples, align 8, !dbg !6033
  br label %cond.end, !dbg !6034

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6035

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !6037
  %add = add nsw i32 2048, %cond, !dbg !6039
  store i32 %add, i32* %end, align 4, !dbg !6040
  call void @llvm.dbg.declare(metadata i8** %channel_map, metadata !6041, metadata !2880), !dbg !6042
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6043
  %reorder_map = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %3, i32 0, i32 14, !dbg !6044
  %4 = load i8*, i8** %reorder_map, align 8, !dbg !6044
  store i8* %4, i8** %channel_map, align 8, !dbg !6042
  store i32 0, i32* %ch, align 4, !dbg !6045
  br label %for.cond, !dbg !6047

for.cond:                                         ; preds = %for.inc, %cond.end
  %5 = load i32, i32* %ch, align 4, !dbg !6048
  %6 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6051
  %channels = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %6, i32 0, i32 13, !dbg !6052
  %7 = load i32, i32* %channels, align 4, !dbg !6052
  %cmp = icmp slt i32 %5, %7, !dbg !6053
  br i1 %cmp, label %for.body, label %for.end, !dbg !6054

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %ch, align 4, !dbg !6055
  %idxprom = sext i32 %8 to i64, !dbg !6057
  %9 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6057
  %planar_samples = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %9, i32 0, i32 7, !dbg !6058
  %arrayidx = getelementptr inbounds [16 x float*], [16 x float*]* %planar_samples, i64 0, i64 %idxprom, !dbg !6057
  %10 = load float*, float** %arrayidx, align 8, !dbg !6057
  %arrayidx1 = getelementptr inbounds float, float* %10, i64 1024, !dbg !6057
  %11 = bitcast float* %arrayidx1 to i8*, !dbg !6059
  %12 = load i32, i32* %ch, align 4, !dbg !6060
  %idxprom2 = sext i32 %12 to i64, !dbg !6061
  %13 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6061
  %planar_samples3 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %13, i32 0, i32 7, !dbg !6062
  %arrayidx4 = getelementptr inbounds [16 x float*], [16 x float*]* %planar_samples3, i64 0, i64 %idxprom2, !dbg !6061
  %14 = load float*, float** %arrayidx4, align 8, !dbg !6061
  %arrayidx5 = getelementptr inbounds float, float* %14, i64 2048, !dbg !6061
  %15 = bitcast float* %arrayidx5 to i8*, !dbg !6059
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %15, i64 4096, i32 4, i1 false), !dbg !6059
  %16 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6063
  %tobool6 = icmp ne %struct.AVFrame* %16, null, !dbg !6063
  br i1 %tobool6, label %if.then, label %if.end, !dbg !6065

if.then:                                          ; preds = %for.body
  %17 = load i32, i32* %ch, align 4, !dbg !6066
  %idxprom7 = sext i32 %17 to i64, !dbg !6068
  %18 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6068
  %planar_samples8 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %18, i32 0, i32 7, !dbg !6069
  %arrayidx9 = getelementptr inbounds [16 x float*], [16 x float*]* %planar_samples8, i64 0, i64 %idxprom7, !dbg !6068
  %19 = load float*, float** %arrayidx9, align 8, !dbg !6068
  %arrayidx10 = getelementptr inbounds float, float* %19, i64 2048, !dbg !6068
  %20 = bitcast float* %arrayidx10 to i8*, !dbg !6070
  %21 = load i32, i32* %ch, align 4, !dbg !6071
  %idxprom11 = sext i32 %21 to i64, !dbg !6072
  %22 = load i8*, i8** %channel_map, align 8, !dbg !6072
  %arrayidx12 = getelementptr inbounds i8, i8* %22, i64 %idxprom11, !dbg !6072
  %23 = load i8, i8* %arrayidx12, align 1, !dbg !6072
  %idxprom13 = zext i8 %23 to i64, !dbg !6073
  %24 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6073
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %24, i32 0, i32 2, !dbg !6074
  %25 = load i8**, i8*** %extended_data, align 8, !dbg !6074
  %arrayidx14 = getelementptr inbounds i8*, i8** %25, i64 %idxprom13, !dbg !6073
  %26 = load i8*, i8** %arrayidx14, align 8, !dbg !6073
  %27 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !6075
  %nb_samples15 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %27, i32 0, i32 5, !dbg !6076
  %28 = load i32, i32* %nb_samples15, align 8, !dbg !6076
  %conv = sext i32 %28 to i64, !dbg !6075
  %mul = mul i64 %conv, 4, !dbg !6077
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %26, i64 %mul, i32 1, i1 false), !dbg !6070
  br label %if.end, !dbg !6078

if.end:                                           ; preds = %if.then, %for.body
  %29 = load i32, i32* %end, align 4, !dbg !6079
  %idxprom16 = sext i32 %29 to i64, !dbg !6080
  %30 = load i32, i32* %ch, align 4, !dbg !6081
  %idxprom17 = sext i32 %30 to i64, !dbg !6080
  %31 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6080
  %planar_samples18 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %31, i32 0, i32 7, !dbg !6082
  %arrayidx19 = getelementptr inbounds [16 x float*], [16 x float*]* %planar_samples18, i64 0, i64 %idxprom17, !dbg !6080
  %32 = load float*, float** %arrayidx19, align 8, !dbg !6080
  %arrayidx20 = getelementptr inbounds float, float* %32, i64 %idxprom16, !dbg !6080
  %33 = bitcast float* %arrayidx20 to i8*, !dbg !6083
  %34 = load i32, i32* %end, align 4, !dbg !6084
  %sub = sub nsw i32 3072, %34, !dbg !6085
  %conv21 = sext i32 %sub to i64, !dbg !6086
  %mul22 = mul i64 %conv21, 4, !dbg !6087
  call void @llvm.memset.p0i8.i64(i8* %33, i8 0, i64 %mul22, i32 4, i1 false), !dbg !6083
  br label %for.inc, !dbg !6088

for.inc:                                          ; preds = %if.end
  %35 = load i32, i32* %ch, align 4, !dbg !6089
  %inc = add nsw i32 %35, 1, !dbg !6089
  store i32 %inc, i32* %ch, align 4, !dbg !6089
  br label %for.cond, !dbg !6091, !llvm.loop !6092

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6094
}

declare void @ff_psy_preprocess(%struct.FFPsyPreprocessContext*, float**, i32) #4

; Function Attrs: nounwind uwtable
define internal void @apply_window_and_mdct(%struct.AACEncContext* %s, %struct.SingleChannelElement* %sce, float* %audio) #0 !dbg !6095 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %audio.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %output = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !6098, metadata !2880), !dbg !6099
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !6100, metadata !2880), !dbg !6101
  store float* %audio, float** %audio.addr, align 8
  call void @llvm.dbg.declare(metadata float** %audio.addr, metadata !6102, metadata !2880), !dbg !6103
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6104, metadata !2880), !dbg !6105
  call void @llvm.dbg.declare(metadata float** %output, metadata !6106, metadata !2880), !dbg !6107
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6108
  %ret_buf = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 16, !dbg !6109
  %arraydecay = getelementptr inbounds [2048 x float], [2048 x float]* %ret_buf, i32 0, i32 0, !dbg !6108
  store float* %arraydecay, float** %output, align 8, !dbg !6107
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6110
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 0, !dbg !6111
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 1, !dbg !6112
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !6110
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6110
  %idxprom = zext i32 %2 to i64, !dbg !6113
  %arrayidx1 = getelementptr inbounds [4 x void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)*], [4 x void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)*]* @apply_window, i64 0, i64 %idxprom, !dbg !6113
  %3 = load void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)*, void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)** %arrayidx1, align 8, !dbg !6113
  %4 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6114
  %fdsp = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %4, i32 0, i32 5, !dbg !6115
  %5 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 16, !dbg !6115
  %6 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6116
  %7 = load float*, float** %audio.addr, align 8, !dbg !6117
  call void %3(%struct.AVFloatDSPContext* %5, %struct.SingleChannelElement* %6, float* %7), !dbg !6113
  %8 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6118
  %ics2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %8, i32 0, i32 0, !dbg !6120
  %window_sequence3 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2, i32 0, i32 1, !dbg !6121
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence3, i64 0, i64 0, !dbg !6118
  %9 = load i32, i32* %arrayidx4, align 4, !dbg !6118
  %cmp = icmp ne i32 %9, 2, !dbg !6122
  br i1 %cmp, label %if.then, label %if.else, !dbg !6123

if.then:                                          ; preds = %entry
  %10 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6124
  %mdct1024 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %10, i32 0, i32 3, !dbg !6125
  %mdct_calc = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct1024, i32 0, i32 12, !dbg !6126
  %11 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %mdct_calc, align 16, !dbg !6126
  %12 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6127
  %mdct10245 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %12, i32 0, i32 3, !dbg !6128
  %13 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6129
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %13, i32 0, i32 14, !dbg !6130
  %arraydecay6 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !6129
  %14 = load float*, float** %output, align 8, !dbg !6131
  call void %11(%struct.FFTContext* %mdct10245, float* %arraydecay6, float* %14), !dbg !6124
  br label %if.end, !dbg !6124

if.else:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6132
  br label %for.cond, !dbg !6134

for.cond:                                         ; preds = %for.inc, %if.else
  %15 = load i32, i32* %i, align 4, !dbg !6135
  %cmp7 = icmp slt i32 %15, 1024, !dbg !6138
  br i1 %cmp7, label %for.body, label %for.end, !dbg !6139

for.body:                                         ; preds = %for.cond
  %16 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6140
  %mdct128 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %16, i32 0, i32 4, !dbg !6141
  %mdct_calc8 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct128, i32 0, i32 12, !dbg !6142
  %17 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %mdct_calc8, align 16, !dbg !6142
  %18 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6143
  %mdct1289 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %18, i32 0, i32 4, !dbg !6144
  %19 = load i32, i32* %i, align 4, !dbg !6145
  %idxprom10 = sext i32 %19 to i64, !dbg !6146
  %20 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6146
  %coeffs11 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %20, i32 0, i32 14, !dbg !6147
  %arrayidx12 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs11, i64 0, i64 %idxprom10, !dbg !6146
  %21 = load float*, float** %output, align 8, !dbg !6148
  %22 = load i32, i32* %i, align 4, !dbg !6149
  %mul = mul nsw i32 %22, 2, !dbg !6150
  %idx.ext = sext i32 %mul to i64, !dbg !6151
  %add.ptr = getelementptr inbounds float, float* %21, i64 %idx.ext, !dbg !6151
  call void %17(%struct.FFTContext* %mdct1289, float* %arrayidx12, float* %add.ptr), !dbg !6140
  br label %for.inc, !dbg !6140

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !6152
  %add = add nsw i32 %23, 128, !dbg !6152
  store i32 %add, i32* %i, align 4, !dbg !6152
  br label %for.cond, !dbg !6154, !llvm.loop !6155

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %24 = load float*, float** %audio.addr, align 8, !dbg !6157
  %25 = bitcast float* %24 to i8*, !dbg !6158
  %26 = load float*, float** %audio.addr, align 8, !dbg !6159
  %add.ptr13 = getelementptr inbounds float, float* %26, i64 1024, !dbg !6160
  %27 = bitcast float* %add.ptr13 to i8*, !dbg !6158
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %27, i64 4096, i32 4, i1 false), !dbg !6158
  %28 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6161
  %pcoeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %28, i32 0, i32 13, !dbg !6162
  %arraydecay14 = getelementptr inbounds [1024 x float], [1024 x float]* %pcoeffs, i32 0, i32 0, !dbg !6163
  %29 = bitcast float* %arraydecay14 to i8*, !dbg !6163
  %30 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6164
  %coeffs15 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %30, i32 0, i32 14, !dbg !6165
  %arraydecay16 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs15, i32 0, i32 0, !dbg !6163
  %31 = bitcast float* %arraydecay16 to i8*, !dbg !6163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %31, i64 4096, i32 32, i1 false), !dbg !6163
  ret void, !dbg !6166
}

; Function Attrs: nounwind readnone
declare double @fabs(double) #8

; Function Attrs: nounwind uwtable
define internal void @avoid_clipping(%struct.AACEncContext* %s, %struct.SingleChannelElement* %sce) #0 !dbg !6167 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %start = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %w = alloca i32, align 4
  %swb_coeffs = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !6170, metadata !2880), !dbg !6171
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !6172, metadata !2880), !dbg !6173
  call void @llvm.dbg.declare(metadata i32* %start, metadata !6174, metadata !2880), !dbg !6175
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6176, metadata !2880), !dbg !6177
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6178, metadata !2880), !dbg !6179
  call void @llvm.dbg.declare(metadata i32* %w, metadata !6180, metadata !2880), !dbg !6181
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6182
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !6184
  %clip_avoidance_factor = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 17, !dbg !6185
  %1 = load float, float* %clip_avoidance_factor, align 8, !dbg !6185
  %cmp = fcmp olt float %1, 1.000000e+00, !dbg !6186
  br i1 %cmp, label %if.then, label %if.end, !dbg !6187

if.then:                                          ; preds = %entry
  store i32 0, i32* %w, align 4, !dbg !6188
  br label %for.cond, !dbg !6191

for.cond:                                         ; preds = %for.inc30, %if.then
  %2 = load i32, i32* %w, align 4, !dbg !6192
  %3 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6195
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %3, i32 0, i32 0, !dbg !6196
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1, i32 0, i32 9, !dbg !6197
  %4 = load i32, i32* %num_windows, align 4, !dbg !6197
  %cmp2 = icmp slt i32 %2, %4, !dbg !6198
  br i1 %cmp2, label %for.body, label %for.end32, !dbg !6199

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %start, align 4, !dbg !6200
  store i32 0, i32* %i, align 4, !dbg !6202
  br label %for.cond3, !dbg !6204

for.cond3:                                        ; preds = %for.inc27, %for.body
  %5 = load i32, i32* %i, align 4, !dbg !6205
  %6 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6208
  %ics4 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %6, i32 0, i32 0, !dbg !6209
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics4, i32 0, i32 0, !dbg !6210
  %7 = load i8, i8* %max_sfb, align 32, !dbg !6210
  %conv = zext i8 %7 to i32, !dbg !6208
  %cmp5 = icmp slt i32 %5, %conv, !dbg !6211
  br i1 %cmp5, label %for.body7, label %for.end29, !dbg !6212

for.body7:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata float** %swb_coeffs, metadata !6213, metadata !2880), !dbg !6215
  %8 = load i32, i32* %start, align 4, !dbg !6216
  %9 = load i32, i32* %w, align 4, !dbg !6217
  %mul = mul nsw i32 %9, 128, !dbg !6218
  %add = add nsw i32 %8, %mul, !dbg !6219
  %idxprom = sext i32 %add to i64, !dbg !6220
  %10 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6220
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %10, i32 0, i32 14, !dbg !6221
  %arrayidx = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i64 0, i64 %idxprom, !dbg !6220
  store float* %arrayidx, float** %swb_coeffs, align 8, !dbg !6215
  store i32 0, i32* %j, align 4, !dbg !6222
  br label %for.cond8, !dbg !6224

for.cond8:                                        ; preds = %for.inc, %for.body7
  %11 = load i32, i32* %j, align 4, !dbg !6225
  %12 = load i32, i32* %i, align 4, !dbg !6228
  %idxprom9 = sext i32 %12 to i64, !dbg !6229
  %13 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6229
  %ics10 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %13, i32 0, i32 0, !dbg !6230
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics10, i32 0, i32 7, !dbg !6231
  %14 = load i8*, i8** %swb_sizes, align 8, !dbg !6231
  %arrayidx11 = getelementptr inbounds i8, i8* %14, i64 %idxprom9, !dbg !6229
  %15 = load i8, i8* %arrayidx11, align 1, !dbg !6229
  %conv12 = zext i8 %15 to i32, !dbg !6229
  %cmp13 = icmp slt i32 %11, %conv12, !dbg !6232
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !6233

for.body15:                                       ; preds = %for.cond8
  %16 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6234
  %ics16 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %16, i32 0, i32 0, !dbg !6235
  %clip_avoidance_factor17 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics16, i32 0, i32 17, !dbg !6236
  %17 = load float, float* %clip_avoidance_factor17, align 8, !dbg !6236
  %18 = load i32, i32* %j, align 4, !dbg !6237
  %idxprom18 = sext i32 %18 to i64, !dbg !6238
  %19 = load float*, float** %swb_coeffs, align 8, !dbg !6238
  %arrayidx19 = getelementptr inbounds float, float* %19, i64 %idxprom18, !dbg !6238
  %20 = load float, float* %arrayidx19, align 4, !dbg !6239
  %mul20 = fmul float %20, %17, !dbg !6239
  store float %mul20, float* %arrayidx19, align 4, !dbg !6239
  br label %for.inc, !dbg !6238

for.inc:                                          ; preds = %for.body15
  %21 = load i32, i32* %j, align 4, !dbg !6240
  %inc = add nsw i32 %21, 1, !dbg !6240
  store i32 %inc, i32* %j, align 4, !dbg !6240
  br label %for.cond8, !dbg !6242, !llvm.loop !6243

for.end:                                          ; preds = %for.cond8
  %22 = load i32, i32* %i, align 4, !dbg !6245
  %idxprom21 = sext i32 %22 to i64, !dbg !6246
  %23 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !6246
  %ics22 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %23, i32 0, i32 0, !dbg !6247
  %swb_sizes23 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics22, i32 0, i32 7, !dbg !6248
  %24 = load i8*, i8** %swb_sizes23, align 8, !dbg !6248
  %arrayidx24 = getelementptr inbounds i8, i8* %24, i64 %idxprom21, !dbg !6246
  %25 = load i8, i8* %arrayidx24, align 1, !dbg !6246
  %conv25 = zext i8 %25 to i32, !dbg !6246
  %26 = load i32, i32* %start, align 4, !dbg !6249
  %add26 = add nsw i32 %26, %conv25, !dbg !6249
  store i32 %add26, i32* %start, align 4, !dbg !6249
  br label %for.inc27, !dbg !6250

for.inc27:                                        ; preds = %for.end
  %27 = load i32, i32* %i, align 4, !dbg !6251
  %inc28 = add nsw i32 %27, 1, !dbg !6251
  store i32 %inc28, i32* %i, align 4, !dbg !6251
  br label %for.cond3, !dbg !6253, !llvm.loop !6254

for.end29:                                        ; preds = %for.cond3
  br label %for.inc30, !dbg !6256

for.inc30:                                        ; preds = %for.end29
  %28 = load i32, i32* %w, align 4, !dbg !6257
  %inc31 = add nsw i32 %28, 1, !dbg !6257
  store i32 %inc31, i32* %w, align 4, !dbg !6257
  br label %for.cond, !dbg !6259, !llvm.loop !6260

for.end32:                                        ; preds = %for.cond
  br label %if.end, !dbg !6262

if.end:                                           ; preds = %for.end32, %entry
  ret void, !dbg !6263
}

declare i32 @ff_alloc_packet2(%struct.AVCodecContext*, %struct.AVPacket*, i64, i64) #4

; Function Attrs: nounwind uwtable
define internal void @put_bitstream_info(%struct.AACEncContext* %s, i8* %name) #0 !dbg !6264 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %name.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %namelen = alloca i32, align 4
  %padbits = alloca i32, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !6267, metadata !2880), !dbg !6268
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6269, metadata !2880), !dbg !6270
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6271, metadata !2880), !dbg !6272
  call void @llvm.dbg.declare(metadata i32* %namelen, metadata !6273, metadata !2880), !dbg !6274
  call void @llvm.dbg.declare(metadata i32* %padbits, metadata !6275, metadata !2880), !dbg !6276
  %0 = load i8*, i8** %name.addr, align 8, !dbg !6277
  %call = call i64 @strlen(i8* %0) #11, !dbg !6278
  %add = add i64 %call, 2, !dbg !6279
  %conv = trunc i64 %add to i32, !dbg !6278
  store i32 %conv, i32* %namelen, align 4, !dbg !6280
  %1 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6281
  %pb = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %1, i32 0, i32 2, !dbg !6282
  call void @put_bits(%struct.PutBitContext* %pb, i32 3, i32 6), !dbg !6283
  %2 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6284
  %pb1 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %2, i32 0, i32 2, !dbg !6285
  %3 = load i32, i32* %namelen, align 4, !dbg !6286
  %cmp = icmp sgt i32 %3, 15, !dbg !6287
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6288

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6289

cond.false:                                       ; preds = %entry
  %4 = load i32, i32* %namelen, align 4, !dbg !6291
  br label %cond.end, !dbg !6293

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 15, %cond.true ], [ %4, %cond.false ], !dbg !6294
  call void @put_bits(%struct.PutBitContext* %pb1, i32 4, i32 %cond), !dbg !6296
  %5 = load i32, i32* %namelen, align 4, !dbg !6297
  %cmp3 = icmp sge i32 %5, 15, !dbg !6299
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6300

if.then:                                          ; preds = %cond.end
  %6 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6301
  %pb5 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %6, i32 0, i32 2, !dbg !6302
  %7 = load i32, i32* %namelen, align 4, !dbg !6303
  %sub = sub nsw i32 %7, 14, !dbg !6304
  call void @put_bits(%struct.PutBitContext* %pb5, i32 8, i32 %sub), !dbg !6305
  br label %if.end, !dbg !6305

if.end:                                           ; preds = %if.then, %cond.end
  %8 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6306
  %pb6 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %8, i32 0, i32 2, !dbg !6307
  call void @put_bits(%struct.PutBitContext* %pb6, i32 4, i32 0), !dbg !6308
  %9 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6309
  %pb7 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %9, i32 0, i32 2, !dbg !6310
  %call8 = call i32 @put_bits_count(%struct.PutBitContext* %pb7), !dbg !6311
  %sub9 = sub nsw i32 0, %call8, !dbg !6312
  %and = and i32 %sub9, 7, !dbg !6313
  store i32 %and, i32* %padbits, align 4, !dbg !6314
  %10 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6315
  %pb10 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %10, i32 0, i32 2, !dbg !6316
  call void @avpriv_align_put_bits(%struct.PutBitContext* %pb10), !dbg !6317
  store i32 0, i32* %i, align 4, !dbg !6318
  br label %for.cond, !dbg !6320

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !6321
  %12 = load i32, i32* %namelen, align 4, !dbg !6324
  %sub11 = sub nsw i32 %12, 2, !dbg !6325
  %cmp12 = icmp slt i32 %11, %sub11, !dbg !6326
  br i1 %cmp12, label %for.body, label %for.end, !dbg !6327

for.body:                                         ; preds = %for.cond
  %13 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6328
  %pb14 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %13, i32 0, i32 2, !dbg !6329
  %14 = load i32, i32* %i, align 4, !dbg !6330
  %idxprom = sext i32 %14 to i64, !dbg !6331
  %15 = load i8*, i8** %name.addr, align 8, !dbg !6331
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 %idxprom, !dbg !6331
  %16 = load i8, i8* %arrayidx, align 1, !dbg !6331
  %conv15 = sext i8 %16 to i32, !dbg !6331
  call void @put_bits(%struct.PutBitContext* %pb14, i32 8, i32 %conv15), !dbg !6332
  br label %for.inc, !dbg !6332

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !6333
  %inc = add nsw i32 %17, 1, !dbg !6333
  store i32 %inc, i32* %i, align 4, !dbg !6333
  br label %for.cond, !dbg !6335, !llvm.loop !6336

for.end:                                          ; preds = %for.cond
  %18 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6338
  %pb16 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %18, i32 0, i32 2, !dbg !6339
  %19 = load i32, i32* %padbits, align 4, !dbg !6340
  %sub17 = sub nsw i32 12, %19, !dbg !6341
  call void @put_bits(%struct.PutBitContext* %pb16, i32 %sub17, i32 0), !dbg !6342
  ret void, !dbg !6343
}

; Function Attrs: nounwind uwtable
define internal void @apply_intensity_stereo(%struct.ChannelElement* %cpe) #0 !dbg !6344 {
entry:
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %w = alloca i32, align 4
  %w2 = alloca i32, align 4
  %g = alloca i32, align 4
  %i = alloca i32, align 4
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %start = alloca i32, align 4
  %p = alloca i32, align 4
  %scale = alloca float, align 4
  %sum = alloca float, align 4
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !6347, metadata !2880), !dbg !6348
  call void @llvm.dbg.declare(metadata i32* %w, metadata !6349, metadata !2880), !dbg !6350
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !6351, metadata !2880), !dbg !6352
  call void @llvm.dbg.declare(metadata i32* %g, metadata !6353, metadata !2880), !dbg !6354
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6355, metadata !2880), !dbg !6356
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !6357, metadata !2880), !dbg !6358
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6359
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !6360
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !6359
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx, i32 0, i32 0, !dbg !6361
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !6358
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6362
  %common_window = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 1, !dbg !6364
  %2 = load i32, i32* %common_window, align 4, !dbg !6364
  %tobool = icmp ne i32 %2, 0, !dbg !6362
  br i1 %tobool, label %if.end, label %if.then, !dbg !6365

if.then:                                          ; preds = %entry
  br label %for.end96, !dbg !6366

if.end:                                           ; preds = %entry
  store i32 0, i32* %w, align 4, !dbg !6367
  br label %for.cond, !dbg !6369

for.cond:                                         ; preds = %for.inc90, %if.end
  %3 = load i32, i32* %w, align 4, !dbg !6370
  %4 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6373
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %4, i32 0, i32 9, !dbg !6374
  %5 = load i32, i32* %num_windows, align 4, !dbg !6374
  %cmp = icmp slt i32 %3, %5, !dbg !6375
  br i1 %cmp, label %for.body, label %for.end96, !dbg !6376

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %w2, align 4, !dbg !6377
  br label %for.cond2, !dbg !6380

for.cond2:                                        ; preds = %for.inc87, %for.body
  %6 = load i32, i32* %w2, align 4, !dbg !6381
  %7 = load i32, i32* %w, align 4, !dbg !6384
  %idxprom = sext i32 %7 to i64, !dbg !6385
  %8 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6385
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %8, i32 0, i32 4, !dbg !6386
  %arrayidx3 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom, !dbg !6385
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !6385
  %conv = zext i8 %9 to i32, !dbg !6385
  %cmp4 = icmp slt i32 %6, %conv, !dbg !6387
  br i1 %cmp4, label %for.body6, label %for.end89, !dbg !6388

for.body6:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata i32* %start, metadata !6389, metadata !2880), !dbg !6391
  %10 = load i32, i32* %w, align 4, !dbg !6392
  %11 = load i32, i32* %w2, align 4, !dbg !6393
  %add = add nsw i32 %10, %11, !dbg !6394
  %mul = mul nsw i32 %add, 128, !dbg !6395
  store i32 %mul, i32* %start, align 4, !dbg !6391
  store i32 0, i32* %g, align 4, !dbg !6396
  br label %for.cond7, !dbg !6398

for.cond7:                                        ; preds = %for.inc84, %for.body6
  %12 = load i32, i32* %g, align 4, !dbg !6399
  %13 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6402
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %13, i32 0, i32 8, !dbg !6403
  %14 = load i32, i32* %num_swb, align 8, !dbg !6403
  %cmp8 = icmp slt i32 %12, %14, !dbg !6404
  br i1 %cmp8, label %for.body10, label %for.end86, !dbg !6405

for.body10:                                       ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata i32* %p, metadata !6406, metadata !2880), !dbg !6408
  %15 = load i32, i32* %w, align 4, !dbg !6409
  %mul11 = mul nsw i32 %15, 16, !dbg !6410
  %16 = load i32, i32* %g, align 4, !dbg !6411
  %add12 = add nsw i32 %mul11, %16, !dbg !6412
  %idxprom13 = sext i32 %add12 to i64, !dbg !6413
  %17 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6413
  %ch14 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %17, i32 0, i32 7, !dbg !6414
  %arrayidx15 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch14, i64 0, i64 1, !dbg !6413
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx15, i32 0, i32 3, !dbg !6415
  %arrayidx16 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom13, !dbg !6413
  %18 = load i32, i32* %arrayidx16, align 4, !dbg !6413
  %sub = sub i32 %18, 14, !dbg !6416
  %mul17 = mul i32 2, %sub, !dbg !6417
  %add18 = add i32 -1, %mul17, !dbg !6418
  store i32 %add18, i32* %p, align 4, !dbg !6408
  call void @llvm.dbg.declare(metadata float* %scale, metadata !6419, metadata !2880), !dbg !6420
  %19 = load i32, i32* %w, align 4, !dbg !6421
  %mul19 = mul nsw i32 %19, 16, !dbg !6422
  %20 = load i32, i32* %g, align 4, !dbg !6423
  %add20 = add nsw i32 %mul19, %20, !dbg !6424
  %idxprom21 = sext i32 %add20 to i64, !dbg !6425
  %21 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6425
  %ch22 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %21, i32 0, i32 7, !dbg !6426
  %arrayidx23 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch22, i64 0, i64 0, !dbg !6425
  %is_ener = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx23, i32 0, i32 10, !dbg !6427
  %arrayidx24 = getelementptr inbounds [128 x float], [128 x float]* %is_ener, i64 0, i64 %idxprom21, !dbg !6425
  %22 = load float, float* %arrayidx24, align 4, !dbg !6425
  store float %22, float* %scale, align 4, !dbg !6420
  %23 = load i32, i32* %w, align 4, !dbg !6428
  %mul25 = mul nsw i32 %23, 16, !dbg !6430
  %24 = load i32, i32* %g, align 4, !dbg !6431
  %add26 = add nsw i32 %mul25, %24, !dbg !6432
  %idxprom27 = sext i32 %add26 to i64, !dbg !6433
  %25 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6433
  %is_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %25, i32 0, i32 5, !dbg !6434
  %arrayidx28 = getelementptr inbounds [128 x i8], [128 x i8]* %is_mask, i64 0, i64 %idxprom27, !dbg !6433
  %26 = load i8, i8* %arrayidx28, align 1, !dbg !6433
  %tobool29 = icmp ne i8 %26, 0, !dbg !6433
  br i1 %tobool29, label %if.end35, label %if.then30, !dbg !6435

if.then30:                                        ; preds = %for.body10
  %27 = load i32, i32* %g, align 4, !dbg !6436
  %idxprom31 = sext i32 %27 to i64, !dbg !6438
  %28 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6438
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %28, i32 0, i32 7, !dbg !6439
  %29 = load i8*, i8** %swb_sizes, align 8, !dbg !6439
  %arrayidx32 = getelementptr inbounds i8, i8* %29, i64 %idxprom31, !dbg !6438
  %30 = load i8, i8* %arrayidx32, align 1, !dbg !6438
  %conv33 = zext i8 %30 to i32, !dbg !6438
  %31 = load i32, i32* %start, align 4, !dbg !6440
  %add34 = add nsw i32 %31, %conv33, !dbg !6440
  store i32 %add34, i32* %start, align 4, !dbg !6440
  br label %for.inc84, !dbg !6441

if.end35:                                         ; preds = %for.body10
  %32 = load i32, i32* %w, align 4, !dbg !6442
  %mul36 = mul nsw i32 %32, 16, !dbg !6444
  %33 = load i32, i32* %g, align 4, !dbg !6445
  %add37 = add nsw i32 %mul36, %33, !dbg !6446
  %idxprom38 = sext i32 %add37 to i64, !dbg !6447
  %34 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6447
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %34, i32 0, i32 4, !dbg !6448
  %arrayidx39 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i64 0, i64 %idxprom38, !dbg !6447
  %35 = load i8, i8* %arrayidx39, align 1, !dbg !6447
  %tobool40 = icmp ne i8 %35, 0, !dbg !6447
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !6449

if.then41:                                        ; preds = %if.end35
  %36 = load i32, i32* %p, align 4, !dbg !6450
  %mul42 = mul nsw i32 %36, -1, !dbg !6450
  store i32 %mul42, i32* %p, align 4, !dbg !6450
  br label %if.end43, !dbg !6451

if.end43:                                         ; preds = %if.then41, %if.end35
  store i32 0, i32* %i, align 4, !dbg !6452
  br label %for.cond44, !dbg !6454

for.cond44:                                       ; preds = %for.inc, %if.end43
  %37 = load i32, i32* %i, align 4, !dbg !6455
  %38 = load i32, i32* %g, align 4, !dbg !6458
  %idxprom45 = sext i32 %38 to i64, !dbg !6459
  %39 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6459
  %swb_sizes46 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %39, i32 0, i32 7, !dbg !6460
  %40 = load i8*, i8** %swb_sizes46, align 8, !dbg !6460
  %arrayidx47 = getelementptr inbounds i8, i8* %40, i64 %idxprom45, !dbg !6459
  %41 = load i8, i8* %arrayidx47, align 1, !dbg !6459
  %conv48 = zext i8 %41 to i32, !dbg !6459
  %cmp49 = icmp slt i32 %37, %conv48, !dbg !6461
  br i1 %cmp49, label %for.body51, label %for.end, !dbg !6462

for.body51:                                       ; preds = %for.cond44
  call void @llvm.dbg.declare(metadata float* %sum, metadata !6463, metadata !2880), !dbg !6465
  %42 = load i32, i32* %start, align 4, !dbg !6466
  %43 = load i32, i32* %i, align 4, !dbg !6467
  %add52 = add nsw i32 %42, %43, !dbg !6468
  %idxprom53 = sext i32 %add52 to i64, !dbg !6469
  %44 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6469
  %ch54 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %44, i32 0, i32 7, !dbg !6470
  %arrayidx55 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch54, i64 0, i64 0, !dbg !6469
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx55, i32 0, i32 14, !dbg !6471
  %arrayidx56 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i64 0, i64 %idxprom53, !dbg !6469
  %45 = load float, float* %arrayidx56, align 4, !dbg !6469
  %46 = load i32, i32* %p, align 4, !dbg !6472
  %conv57 = sitofp i32 %46 to float, !dbg !6472
  %47 = load i32, i32* %start, align 4, !dbg !6473
  %48 = load i32, i32* %i, align 4, !dbg !6474
  %add58 = add nsw i32 %47, %48, !dbg !6475
  %idxprom59 = sext i32 %add58 to i64, !dbg !6476
  %49 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6476
  %ch60 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %49, i32 0, i32 7, !dbg !6477
  %arrayidx61 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch60, i64 0, i64 1, !dbg !6476
  %coeffs62 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx61, i32 0, i32 14, !dbg !6478
  %arrayidx63 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs62, i64 0, i64 %idxprom59, !dbg !6476
  %50 = load float, float* %arrayidx63, align 4, !dbg !6476
  %mul64 = fmul float %conv57, %50, !dbg !6479
  %add65 = fadd float %45, %mul64, !dbg !6480
  %51 = load float, float* %scale, align 4, !dbg !6481
  %mul66 = fmul float %add65, %51, !dbg !6482
  store float %mul66, float* %sum, align 4, !dbg !6465
  %52 = load float, float* %sum, align 4, !dbg !6483
  %53 = load i32, i32* %start, align 4, !dbg !6484
  %54 = load i32, i32* %i, align 4, !dbg !6485
  %add67 = add nsw i32 %53, %54, !dbg !6486
  %idxprom68 = sext i32 %add67 to i64, !dbg !6487
  %55 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6487
  %ch69 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %55, i32 0, i32 7, !dbg !6488
  %arrayidx70 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch69, i64 0, i64 0, !dbg !6487
  %coeffs71 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx70, i32 0, i32 14, !dbg !6489
  %arrayidx72 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs71, i64 0, i64 %idxprom68, !dbg !6487
  store float %52, float* %arrayidx72, align 4, !dbg !6490
  %56 = load i32, i32* %start, align 4, !dbg !6491
  %57 = load i32, i32* %i, align 4, !dbg !6492
  %add73 = add nsw i32 %56, %57, !dbg !6493
  %idxprom74 = sext i32 %add73 to i64, !dbg !6494
  %58 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6494
  %ch75 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %58, i32 0, i32 7, !dbg !6495
  %arrayidx76 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch75, i64 0, i64 1, !dbg !6494
  %coeffs77 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx76, i32 0, i32 14, !dbg !6496
  %arrayidx78 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs77, i64 0, i64 %idxprom74, !dbg !6494
  store float 0.000000e+00, float* %arrayidx78, align 4, !dbg !6497
  br label %for.inc, !dbg !6498

for.inc:                                          ; preds = %for.body51
  %59 = load i32, i32* %i, align 4, !dbg !6499
  %inc = add nsw i32 %59, 1, !dbg !6499
  store i32 %inc, i32* %i, align 4, !dbg !6499
  br label %for.cond44, !dbg !6501, !llvm.loop !6502

for.end:                                          ; preds = %for.cond44
  %60 = load i32, i32* %g, align 4, !dbg !6504
  %idxprom79 = sext i32 %60 to i64, !dbg !6505
  %61 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6505
  %swb_sizes80 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %61, i32 0, i32 7, !dbg !6506
  %62 = load i8*, i8** %swb_sizes80, align 8, !dbg !6506
  %arrayidx81 = getelementptr inbounds i8, i8* %62, i64 %idxprom79, !dbg !6505
  %63 = load i8, i8* %arrayidx81, align 1, !dbg !6505
  %conv82 = zext i8 %63 to i32, !dbg !6505
  %64 = load i32, i32* %start, align 4, !dbg !6507
  %add83 = add nsw i32 %64, %conv82, !dbg !6507
  store i32 %add83, i32* %start, align 4, !dbg !6507
  br label %for.inc84, !dbg !6508

for.inc84:                                        ; preds = %for.end, %if.then30
  %65 = load i32, i32* %g, align 4, !dbg !6509
  %inc85 = add nsw i32 %65, 1, !dbg !6509
  store i32 %inc85, i32* %g, align 4, !dbg !6509
  br label %for.cond7, !dbg !6511, !llvm.loop !6512

for.end86:                                        ; preds = %for.cond7
  br label %for.inc87, !dbg !6514

for.inc87:                                        ; preds = %for.end86
  %66 = load i32, i32* %w2, align 4, !dbg !6515
  %inc88 = add nsw i32 %66, 1, !dbg !6515
  store i32 %inc88, i32* %w2, align 4, !dbg !6515
  br label %for.cond2, !dbg !6517, !llvm.loop !6518

for.end89:                                        ; preds = %for.cond2
  br label %for.inc90, !dbg !6520

for.inc90:                                        ; preds = %for.end89
  %67 = load i32, i32* %w, align 4, !dbg !6521
  %idxprom91 = sext i32 %67 to i64, !dbg !6523
  %68 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6523
  %group_len92 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %68, i32 0, i32 4, !dbg !6524
  %arrayidx93 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len92, i64 0, i64 %idxprom91, !dbg !6523
  %69 = load i8, i8* %arrayidx93, align 1, !dbg !6523
  %conv94 = zext i8 %69 to i32, !dbg !6523
  %70 = load i32, i32* %w, align 4, !dbg !6525
  %add95 = add nsw i32 %70, %conv94, !dbg !6525
  store i32 %add95, i32* %w, align 4, !dbg !6525
  br label %for.cond, !dbg !6526, !llvm.loop !6527

for.end96:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !6529
}

; Function Attrs: nounwind uwtable
define internal void @apply_mid_side_stereo(%struct.ChannelElement* %cpe) #0 !dbg !6530 {
entry:
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %w = alloca i32, align 4
  %w2 = alloca i32, align 4
  %g = alloca i32, align 4
  %i = alloca i32, align 4
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %start = alloca i32, align 4
  %L = alloca float, align 4
  %R = alloca float, align 4
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !6531, metadata !2880), !dbg !6532
  call void @llvm.dbg.declare(metadata i32* %w, metadata !6533, metadata !2880), !dbg !6534
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !6535, metadata !2880), !dbg !6536
  call void @llvm.dbg.declare(metadata i32* %g, metadata !6537, metadata !2880), !dbg !6538
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6539, metadata !2880), !dbg !6540
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !6541, metadata !2880), !dbg !6542
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6543
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !6544
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !6543
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx, i32 0, i32 0, !dbg !6545
  store %struct.IndividualChannelStream* %ics1, %struct.IndividualChannelStream** %ics, align 8, !dbg !6542
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6546
  %common_window = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 1, !dbg !6548
  %2 = load i32, i32* %common_window, align 4, !dbg !6548
  %tobool = icmp ne i32 %2, 0, !dbg !6546
  br i1 %tobool, label %if.end, label %if.then, !dbg !6549

if.then:                                          ; preds = %entry
  br label %for.end103, !dbg !6550

if.end:                                           ; preds = %entry
  store i32 0, i32* %w, align 4, !dbg !6551
  br label %for.cond, !dbg !6553

for.cond:                                         ; preds = %for.inc97, %if.end
  %3 = load i32, i32* %w, align 4, !dbg !6554
  %4 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6557
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %4, i32 0, i32 9, !dbg !6558
  %5 = load i32, i32* %num_windows, align 4, !dbg !6558
  %cmp = icmp slt i32 %3, %5, !dbg !6559
  br i1 %cmp, label %for.body, label %for.end103, !dbg !6560

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %w2, align 4, !dbg !6561
  br label %for.cond2, !dbg !6564

for.cond2:                                        ; preds = %for.inc94, %for.body
  %6 = load i32, i32* %w2, align 4, !dbg !6565
  %7 = load i32, i32* %w, align 4, !dbg !6568
  %idxprom = sext i32 %7 to i64, !dbg !6569
  %8 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6569
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %8, i32 0, i32 4, !dbg !6570
  %arrayidx3 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom, !dbg !6569
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !6569
  %conv = zext i8 %9 to i32, !dbg !6569
  %cmp4 = icmp slt i32 %6, %conv, !dbg !6571
  br i1 %cmp4, label %for.body6, label %for.end96, !dbg !6572

for.body6:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata i32* %start, metadata !6573, metadata !2880), !dbg !6575
  %10 = load i32, i32* %w, align 4, !dbg !6576
  %11 = load i32, i32* %w2, align 4, !dbg !6577
  %add = add nsw i32 %10, %11, !dbg !6578
  %mul = mul nsw i32 %add, 128, !dbg !6579
  store i32 %mul, i32* %start, align 4, !dbg !6575
  store i32 0, i32* %g, align 4, !dbg !6580
  br label %for.cond7, !dbg !6582

for.cond7:                                        ; preds = %for.inc91, %for.body6
  %12 = load i32, i32* %g, align 4, !dbg !6583
  %13 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6586
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %13, i32 0, i32 8, !dbg !6587
  %14 = load i32, i32* %num_swb, align 8, !dbg !6587
  %cmp8 = icmp slt i32 %12, %14, !dbg !6588
  br i1 %cmp8, label %for.body10, label %for.end93, !dbg !6589

for.body10:                                       ; preds = %for.cond7
  %15 = load i32, i32* %w, align 4, !dbg !6590
  %mul11 = mul nsw i32 %15, 16, !dbg !6593
  %16 = load i32, i32* %g, align 4, !dbg !6594
  %add12 = add nsw i32 %mul11, %16, !dbg !6595
  %idxprom13 = sext i32 %add12 to i64, !dbg !6596
  %17 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6596
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %17, i32 0, i32 4, !dbg !6597
  %arrayidx14 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i64 0, i64 %idxprom13, !dbg !6596
  %18 = load i8, i8* %arrayidx14, align 1, !dbg !6596
  %tobool15 = icmp ne i8 %18, 0, !dbg !6596
  br i1 %tobool15, label %lor.lhs.false, label %if.then41, !dbg !6598

lor.lhs.false:                                    ; preds = %for.body10
  %19 = load i32, i32* %w, align 4, !dbg !6599
  %mul16 = mul nsw i32 %19, 16, !dbg !6601
  %20 = load i32, i32* %g, align 4, !dbg !6602
  %add17 = add nsw i32 %mul16, %20, !dbg !6603
  %idxprom18 = sext i32 %add17 to i64, !dbg !6604
  %21 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6604
  %is_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %21, i32 0, i32 5, !dbg !6605
  %arrayidx19 = getelementptr inbounds [128 x i8], [128 x i8]* %is_mask, i64 0, i64 %idxprom18, !dbg !6604
  %22 = load i8, i8* %arrayidx19, align 1, !dbg !6604
  %conv20 = zext i8 %22 to i32, !dbg !6604
  %tobool21 = icmp ne i32 %conv20, 0, !dbg !6604
  br i1 %tobool21, label %if.then41, label %lor.lhs.false22, !dbg !6606

lor.lhs.false22:                                  ; preds = %lor.lhs.false
  %23 = load i32, i32* %w, align 4, !dbg !6607
  %mul23 = mul nsw i32 %23, 16, !dbg !6608
  %24 = load i32, i32* %g, align 4, !dbg !6609
  %add24 = add nsw i32 %mul23, %24, !dbg !6610
  %idxprom25 = sext i32 %add24 to i64, !dbg !6611
  %25 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6611
  %ch26 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %25, i32 0, i32 7, !dbg !6612
  %arrayidx27 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch26, i64 0, i64 0, !dbg !6611
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx27, i32 0, i32 3, !dbg !6613
  %arrayidx28 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom25, !dbg !6611
  %26 = load i32, i32* %arrayidx28, align 4, !dbg !6611
  %cmp29 = icmp uge i32 %26, 13, !dbg !6614
  br i1 %cmp29, label %if.then41, label %lor.lhs.false31, !dbg !6615

lor.lhs.false31:                                  ; preds = %lor.lhs.false22
  %27 = load i32, i32* %w, align 4, !dbg !6616
  %mul32 = mul nsw i32 %27, 16, !dbg !6617
  %28 = load i32, i32* %g, align 4, !dbg !6618
  %add33 = add nsw i32 %mul32, %28, !dbg !6619
  %idxprom34 = sext i32 %add33 to i64, !dbg !6620
  %29 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6620
  %ch35 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %29, i32 0, i32 7, !dbg !6621
  %arrayidx36 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch35, i64 0, i64 1, !dbg !6620
  %band_type37 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx36, i32 0, i32 3, !dbg !6622
  %arrayidx38 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type37, i64 0, i64 %idxprom34, !dbg !6620
  %30 = load i32, i32* %arrayidx38, align 4, !dbg !6620
  %cmp39 = icmp uge i32 %30, 13, !dbg !6623
  br i1 %cmp39, label %if.then41, label %if.end46, !dbg !6624

if.then41:                                        ; preds = %lor.lhs.false31, %lor.lhs.false22, %lor.lhs.false, %for.body10
  %31 = load i32, i32* %g, align 4, !dbg !6626
  %idxprom42 = sext i32 %31 to i64, !dbg !6628
  %32 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6628
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %32, i32 0, i32 7, !dbg !6629
  %33 = load i8*, i8** %swb_sizes, align 8, !dbg !6629
  %arrayidx43 = getelementptr inbounds i8, i8* %33, i64 %idxprom42, !dbg !6628
  %34 = load i8, i8* %arrayidx43, align 1, !dbg !6628
  %conv44 = zext i8 %34 to i32, !dbg !6628
  %35 = load i32, i32* %start, align 4, !dbg !6630
  %add45 = add nsw i32 %35, %conv44, !dbg !6630
  store i32 %add45, i32* %start, align 4, !dbg !6630
  br label %for.inc91, !dbg !6631

if.end46:                                         ; preds = %lor.lhs.false31
  store i32 0, i32* %i, align 4, !dbg !6632
  br label %for.cond47, !dbg !6634

for.cond47:                                       ; preds = %for.inc, %if.end46
  %36 = load i32, i32* %i, align 4, !dbg !6635
  %37 = load i32, i32* %g, align 4, !dbg !6638
  %idxprom48 = sext i32 %37 to i64, !dbg !6639
  %38 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6639
  %swb_sizes49 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %38, i32 0, i32 7, !dbg !6640
  %39 = load i8*, i8** %swb_sizes49, align 8, !dbg !6640
  %arrayidx50 = getelementptr inbounds i8, i8* %39, i64 %idxprom48, !dbg !6639
  %40 = load i8, i8* %arrayidx50, align 1, !dbg !6639
  %conv51 = zext i8 %40 to i32, !dbg !6639
  %cmp52 = icmp slt i32 %36, %conv51, !dbg !6641
  br i1 %cmp52, label %for.body54, label %for.end, !dbg !6642

for.body54:                                       ; preds = %for.cond47
  call void @llvm.dbg.declare(metadata float* %L, metadata !6643, metadata !2880), !dbg !6645
  %41 = load i32, i32* %start, align 4, !dbg !6646
  %42 = load i32, i32* %i, align 4, !dbg !6647
  %add55 = add nsw i32 %41, %42, !dbg !6648
  %idxprom56 = sext i32 %add55 to i64, !dbg !6649
  %43 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6649
  %ch57 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %43, i32 0, i32 7, !dbg !6650
  %arrayidx58 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch57, i64 0, i64 0, !dbg !6649
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx58, i32 0, i32 14, !dbg !6651
  %arrayidx59 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i64 0, i64 %idxprom56, !dbg !6649
  %44 = load float, float* %arrayidx59, align 4, !dbg !6649
  %45 = load i32, i32* %start, align 4, !dbg !6652
  %46 = load i32, i32* %i, align 4, !dbg !6653
  %add60 = add nsw i32 %45, %46, !dbg !6654
  %idxprom61 = sext i32 %add60 to i64, !dbg !6655
  %47 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6655
  %ch62 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %47, i32 0, i32 7, !dbg !6656
  %arrayidx63 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch62, i64 0, i64 1, !dbg !6655
  %coeffs64 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx63, i32 0, i32 14, !dbg !6657
  %arrayidx65 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs64, i64 0, i64 %idxprom61, !dbg !6655
  %48 = load float, float* %arrayidx65, align 4, !dbg !6655
  %add66 = fadd float %44, %48, !dbg !6658
  %mul67 = fmul float %add66, 5.000000e-01, !dbg !6659
  store float %mul67, float* %L, align 4, !dbg !6645
  call void @llvm.dbg.declare(metadata float* %R, metadata !6660, metadata !2880), !dbg !6661
  %49 = load float, float* %L, align 4, !dbg !6662
  %50 = load i32, i32* %start, align 4, !dbg !6663
  %51 = load i32, i32* %i, align 4, !dbg !6664
  %add68 = add nsw i32 %50, %51, !dbg !6665
  %idxprom69 = sext i32 %add68 to i64, !dbg !6666
  %52 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6666
  %ch70 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %52, i32 0, i32 7, !dbg !6667
  %arrayidx71 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch70, i64 0, i64 1, !dbg !6666
  %coeffs72 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx71, i32 0, i32 14, !dbg !6668
  %arrayidx73 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs72, i64 0, i64 %idxprom69, !dbg !6666
  %53 = load float, float* %arrayidx73, align 4, !dbg !6666
  %sub = fsub float %49, %53, !dbg !6669
  store float %sub, float* %R, align 4, !dbg !6661
  %54 = load float, float* %L, align 4, !dbg !6670
  %55 = load i32, i32* %start, align 4, !dbg !6671
  %56 = load i32, i32* %i, align 4, !dbg !6672
  %add74 = add nsw i32 %55, %56, !dbg !6673
  %idxprom75 = sext i32 %add74 to i64, !dbg !6674
  %57 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6674
  %ch76 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %57, i32 0, i32 7, !dbg !6675
  %arrayidx77 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch76, i64 0, i64 0, !dbg !6674
  %coeffs78 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx77, i32 0, i32 14, !dbg !6676
  %arrayidx79 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs78, i64 0, i64 %idxprom75, !dbg !6674
  store float %54, float* %arrayidx79, align 4, !dbg !6677
  %58 = load float, float* %R, align 4, !dbg !6678
  %59 = load i32, i32* %start, align 4, !dbg !6679
  %60 = load i32, i32* %i, align 4, !dbg !6680
  %add80 = add nsw i32 %59, %60, !dbg !6681
  %idxprom81 = sext i32 %add80 to i64, !dbg !6682
  %61 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6682
  %ch82 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %61, i32 0, i32 7, !dbg !6683
  %arrayidx83 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch82, i64 0, i64 1, !dbg !6682
  %coeffs84 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx83, i32 0, i32 14, !dbg !6684
  %arrayidx85 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs84, i64 0, i64 %idxprom81, !dbg !6682
  store float %58, float* %arrayidx85, align 4, !dbg !6685
  br label %for.inc, !dbg !6686

for.inc:                                          ; preds = %for.body54
  %62 = load i32, i32* %i, align 4, !dbg !6687
  %inc = add nsw i32 %62, 1, !dbg !6687
  store i32 %inc, i32* %i, align 4, !dbg !6687
  br label %for.cond47, !dbg !6689, !llvm.loop !6690

for.end:                                          ; preds = %for.cond47
  %63 = load i32, i32* %g, align 4, !dbg !6692
  %idxprom86 = sext i32 %63 to i64, !dbg !6693
  %64 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6693
  %swb_sizes87 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %64, i32 0, i32 7, !dbg !6694
  %65 = load i8*, i8** %swb_sizes87, align 8, !dbg !6694
  %arrayidx88 = getelementptr inbounds i8, i8* %65, i64 %idxprom86, !dbg !6693
  %66 = load i8, i8* %arrayidx88, align 1, !dbg !6693
  %conv89 = zext i8 %66 to i32, !dbg !6693
  %67 = load i32, i32* %start, align 4, !dbg !6695
  %add90 = add nsw i32 %67, %conv89, !dbg !6695
  store i32 %add90, i32* %start, align 4, !dbg !6695
  br label %for.inc91, !dbg !6696

for.inc91:                                        ; preds = %for.end, %if.then41
  %68 = load i32, i32* %g, align 4, !dbg !6697
  %inc92 = add nsw i32 %68, 1, !dbg !6697
  store i32 %inc92, i32* %g, align 4, !dbg !6697
  br label %for.cond7, !dbg !6699, !llvm.loop !6700

for.end93:                                        ; preds = %for.cond7
  br label %for.inc94, !dbg !6702

for.inc94:                                        ; preds = %for.end93
  %69 = load i32, i32* %w2, align 4, !dbg !6703
  %inc95 = add nsw i32 %69, 1, !dbg !6703
  store i32 %inc95, i32* %w2, align 4, !dbg !6703
  br label %for.cond2, !dbg !6705, !llvm.loop !6706

for.end96:                                        ; preds = %for.cond2
  br label %for.inc97, !dbg !6708

for.inc97:                                        ; preds = %for.end96
  %70 = load i32, i32* %w, align 4, !dbg !6709
  %idxprom98 = sext i32 %70 to i64, !dbg !6711
  %71 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6711
  %group_len99 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %71, i32 0, i32 4, !dbg !6712
  %arrayidx100 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len99, i64 0, i64 %idxprom98, !dbg !6711
  %72 = load i8, i8* %arrayidx100, align 1, !dbg !6711
  %conv101 = zext i8 %72 to i32, !dbg !6711
  %73 = load i32, i32* %w, align 4, !dbg !6713
  %add102 = add nsw i32 %73, %conv101, !dbg !6713
  store i32 %add102, i32* %w, align 4, !dbg !6713
  br label %for.cond, !dbg !6714, !llvm.loop !6715

for.end103:                                       ; preds = %if.then, %for.cond
  ret void, !dbg !6717
}

; Function Attrs: nounwind uwtable
define internal void @adjust_frame_information(%struct.ChannelElement* %cpe, i32 %chans) #0 !dbg !6718 {
entry:
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %chans.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %w = alloca i32, align 4
  %w2 = alloca i32, align 4
  %g = alloca i32, align 4
  %ch = alloca i32, align 4
  %maxsfb = alloca i32, align 4
  %cmaxsfb = alloca i32, align 4
  %ics = alloca %struct.IndividualChannelStream*, align 8
  %ics0 = alloca %struct.IndividualChannelStream*, align 8
  %ics1 = alloca %struct.IndividualChannelStream*, align 8
  %msc = alloca i32, align 4
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !6721, metadata !2880), !dbg !6722
  store i32 %chans, i32* %chans.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chans.addr, metadata !6723, metadata !2880), !dbg !6724
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6725, metadata !2880), !dbg !6726
  call void @llvm.dbg.declare(metadata i32* %w, metadata !6727, metadata !2880), !dbg !6728
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !6729, metadata !2880), !dbg !6730
  call void @llvm.dbg.declare(metadata i32* %g, metadata !6731, metadata !2880), !dbg !6732
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6733, metadata !2880), !dbg !6734
  call void @llvm.dbg.declare(metadata i32* %maxsfb, metadata !6735, metadata !2880), !dbg !6736
  call void @llvm.dbg.declare(metadata i32* %cmaxsfb, metadata !6737, metadata !2880), !dbg !6738
  store i32 0, i32* %ch, align 4, !dbg !6739
  br label %for.cond, !dbg !6741

for.cond:                                         ; preds = %for.inc88, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !6742
  %1 = load i32, i32* %chans.addr, align 4, !dbg !6745
  %cmp = icmp slt i32 %0, %1, !dbg !6746
  br i1 %cmp, label %for.body, label %for.end90, !dbg !6747

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics, metadata !6748, metadata !2880), !dbg !6750
  %2 = load i32, i32* %ch, align 4, !dbg !6751
  %idxprom = sext i32 %2 to i64, !dbg !6752
  %3 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6752
  %ch1 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %3, i32 0, i32 7, !dbg !6753
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch1, i64 0, i64 %idxprom, !dbg !6752
  %ics2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx, i32 0, i32 0, !dbg !6754
  store %struct.IndividualChannelStream* %ics2, %struct.IndividualChannelStream** %ics, align 8, !dbg !6750
  store i32 0, i32* %maxsfb, align 4, !dbg !6755
  %4 = load i32, i32* %ch, align 4, !dbg !6756
  %idxprom3 = sext i32 %4 to i64, !dbg !6757
  %5 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6757
  %ch4 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %5, i32 0, i32 7, !dbg !6758
  %arrayidx5 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch4, i64 0, i64 %idxprom3, !dbg !6757
  %pulse = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx5, i32 0, i32 2, !dbg !6759
  %num_pulse = getelementptr inbounds %struct.Pulse, %struct.Pulse* %pulse, i32 0, i32 0, !dbg !6760
  store i32 0, i32* %num_pulse, align 4, !dbg !6761
  store i32 0, i32* %w, align 4, !dbg !6762
  br label %for.cond6, !dbg !6764

for.cond6:                                        ; preds = %for.inc29, %for.body
  %6 = load i32, i32* %w, align 4, !dbg !6765
  %7 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6768
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %7, i32 0, i32 9, !dbg !6769
  %8 = load i32, i32* %num_windows, align 4, !dbg !6769
  %cmp7 = icmp slt i32 %6, %8, !dbg !6770
  br i1 %cmp7, label %for.body8, label %for.end35, !dbg !6771

for.body8:                                        ; preds = %for.cond6
  store i32 0, i32* %w2, align 4, !dbg !6772
  br label %for.cond9, !dbg !6775

for.cond9:                                        ; preds = %for.inc27, %for.body8
  %9 = load i32, i32* %w2, align 4, !dbg !6776
  %10 = load i32, i32* %w, align 4, !dbg !6779
  %idxprom10 = sext i32 %10 to i64, !dbg !6780
  %11 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6780
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %11, i32 0, i32 4, !dbg !6781
  %arrayidx11 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom10, !dbg !6780
  %12 = load i8, i8* %arrayidx11, align 1, !dbg !6780
  %conv = zext i8 %12 to i32, !dbg !6780
  %cmp12 = icmp slt i32 %9, %conv, !dbg !6782
  br i1 %cmp12, label %for.body14, label %for.end28, !dbg !6783

for.body14:                                       ; preds = %for.cond9
  %13 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6784
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %13, i32 0, i32 8, !dbg !6787
  %14 = load i32, i32* %num_swb, align 8, !dbg !6787
  store i32 %14, i32* %cmaxsfb, align 4, !dbg !6788
  br label %for.cond15, !dbg !6789

for.cond15:                                       ; preds = %for.inc, %for.body14
  %15 = load i32, i32* %cmaxsfb, align 4, !dbg !6790
  %cmp16 = icmp sgt i32 %15, 0, !dbg !6793
  br i1 %cmp16, label %land.rhs, label %land.end, !dbg !6794

land.rhs:                                         ; preds = %for.cond15
  %16 = load i32, i32* %w, align 4, !dbg !6795
  %mul = mul nsw i32 %16, 16, !dbg !6797
  %17 = load i32, i32* %cmaxsfb, align 4, !dbg !6798
  %add = add nsw i32 %mul, %17, !dbg !6799
  %sub = sub nsw i32 %add, 1, !dbg !6800
  %idxprom18 = sext i32 %sub to i64, !dbg !6801
  %18 = load i32, i32* %ch, align 4, !dbg !6802
  %idxprom19 = sext i32 %18 to i64, !dbg !6801
  %19 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6801
  %ch20 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %19, i32 0, i32 7, !dbg !6803
  %arrayidx21 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch20, i64 0, i64 %idxprom19, !dbg !6801
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx21, i32 0, i32 8, !dbg !6804
  %arrayidx22 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom18, !dbg !6801
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !6801
  %conv23 = zext i8 %20 to i32, !dbg !6801
  %tobool = icmp ne i32 %conv23, 0, !dbg !6805
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond15
  %21 = phi i1 [ false, %for.cond15 ], [ %tobool, %land.rhs ]
  br i1 %21, label %for.body24, label %for.end, !dbg !6806

for.body24:                                       ; preds = %land.end
  br label %for.inc, !dbg !6808

for.inc:                                          ; preds = %for.body24
  %22 = load i32, i32* %cmaxsfb, align 4, !dbg !6810
  %dec = add nsw i32 %22, -1, !dbg !6810
  store i32 %dec, i32* %cmaxsfb, align 4, !dbg !6810
  br label %for.cond15, !dbg !6812, !llvm.loop !6813

for.end:                                          ; preds = %land.end
  %23 = load i32, i32* %maxsfb, align 4, !dbg !6815
  %24 = load i32, i32* %cmaxsfb, align 4, !dbg !6816
  %cmp25 = icmp sgt i32 %23, %24, !dbg !6817
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !6818

cond.true:                                        ; preds = %for.end
  %25 = load i32, i32* %maxsfb, align 4, !dbg !6819
  br label %cond.end, !dbg !6821

cond.false:                                       ; preds = %for.end
  %26 = load i32, i32* %cmaxsfb, align 4, !dbg !6822
  br label %cond.end, !dbg !6824

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %25, %cond.true ], [ %26, %cond.false ], !dbg !6825
  store i32 %cond, i32* %maxsfb, align 4, !dbg !6827
  br label %for.inc27, !dbg !6828

for.inc27:                                        ; preds = %cond.end
  %27 = load i32, i32* %w2, align 4, !dbg !6829
  %inc = add nsw i32 %27, 1, !dbg !6829
  store i32 %inc, i32* %w2, align 4, !dbg !6829
  br label %for.cond9, !dbg !6831, !llvm.loop !6832

for.end28:                                        ; preds = %for.cond9
  br label %for.inc29, !dbg !6834

for.inc29:                                        ; preds = %for.end28
  %28 = load i32, i32* %w, align 4, !dbg !6835
  %idxprom30 = sext i32 %28 to i64, !dbg !6837
  %29 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6837
  %group_len31 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %29, i32 0, i32 4, !dbg !6838
  %arrayidx32 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len31, i64 0, i64 %idxprom30, !dbg !6837
  %30 = load i8, i8* %arrayidx32, align 1, !dbg !6837
  %conv33 = zext i8 %30 to i32, !dbg !6837
  %31 = load i32, i32* %w, align 4, !dbg !6839
  %add34 = add nsw i32 %31, %conv33, !dbg !6839
  store i32 %add34, i32* %w, align 4, !dbg !6839
  br label %for.cond6, !dbg !6840, !llvm.loop !6841

for.end35:                                        ; preds = %for.cond6
  %32 = load i32, i32* %maxsfb, align 4, !dbg !6843
  %conv36 = trunc i32 %32 to i8, !dbg !6843
  %33 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6844
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %33, i32 0, i32 0, !dbg !6845
  store i8 %conv36, i8* %max_sfb, align 8, !dbg !6846
  store i32 0, i32* %w, align 4, !dbg !6847
  br label %for.cond37, !dbg !6849

for.cond37:                                       ; preds = %for.inc81, %for.end35
  %34 = load i32, i32* %w, align 4, !dbg !6850
  %35 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6853
  %num_windows38 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %35, i32 0, i32 9, !dbg !6854
  %36 = load i32, i32* %num_windows38, align 4, !dbg !6854
  %cmp39 = icmp slt i32 %34, %36, !dbg !6855
  br i1 %cmp39, label %for.body41, label %for.end87, !dbg !6856

for.body41:                                       ; preds = %for.cond37
  store i32 0, i32* %g, align 4, !dbg !6857
  br label %for.cond42, !dbg !6860

for.cond42:                                       ; preds = %for.inc78, %for.body41
  %37 = load i32, i32* %g, align 4, !dbg !6861
  %38 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6864
  %max_sfb43 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %38, i32 0, i32 0, !dbg !6865
  %39 = load i8, i8* %max_sfb43, align 8, !dbg !6865
  %conv44 = zext i8 %39 to i32, !dbg !6864
  %cmp45 = icmp slt i32 %37, %conv44, !dbg !6866
  br i1 %cmp45, label %for.body47, label %for.end80, !dbg !6867

for.body47:                                       ; preds = %for.cond42
  store i32 1, i32* %i, align 4, !dbg !6868
  %40 = load i32, i32* %w, align 4, !dbg !6870
  store i32 %40, i32* %w2, align 4, !dbg !6872
  br label %for.cond48, !dbg !6873

for.cond48:                                       ; preds = %for.inc66, %for.body47
  %41 = load i32, i32* %w2, align 4, !dbg !6874
  %42 = load i32, i32* %w, align 4, !dbg !6877
  %43 = load i32, i32* %w, align 4, !dbg !6878
  %idxprom49 = sext i32 %43 to i64, !dbg !6879
  %44 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6879
  %group_len50 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %44, i32 0, i32 4, !dbg !6880
  %arrayidx51 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len50, i64 0, i64 %idxprom49, !dbg !6879
  %45 = load i8, i8* %arrayidx51, align 1, !dbg !6879
  %conv52 = zext i8 %45 to i32, !dbg !6879
  %add53 = add nsw i32 %42, %conv52, !dbg !6881
  %cmp54 = icmp slt i32 %41, %add53, !dbg !6882
  br i1 %cmp54, label %for.body56, label %for.end68, !dbg !6883

for.body56:                                       ; preds = %for.cond48
  %46 = load i32, i32* %w2, align 4, !dbg !6884
  %mul57 = mul nsw i32 %46, 16, !dbg !6887
  %47 = load i32, i32* %g, align 4, !dbg !6888
  %add58 = add nsw i32 %mul57, %47, !dbg !6889
  %idxprom59 = sext i32 %add58 to i64, !dbg !6890
  %48 = load i32, i32* %ch, align 4, !dbg !6891
  %idxprom60 = sext i32 %48 to i64, !dbg !6890
  %49 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6890
  %ch61 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %49, i32 0, i32 7, !dbg !6892
  %arrayidx62 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch61, i64 0, i64 %idxprom60, !dbg !6890
  %zeroes63 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx62, i32 0, i32 8, !dbg !6893
  %arrayidx64 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes63, i64 0, i64 %idxprom59, !dbg !6890
  %50 = load i8, i8* %arrayidx64, align 1, !dbg !6890
  %tobool65 = icmp ne i8 %50, 0, !dbg !6890
  br i1 %tobool65, label %if.end, label %if.then, !dbg !6894

if.then:                                          ; preds = %for.body56
  store i32 0, i32* %i, align 4, !dbg !6895
  br label %for.end68, !dbg !6897

if.end:                                           ; preds = %for.body56
  br label %for.inc66, !dbg !6898

for.inc66:                                        ; preds = %if.end
  %51 = load i32, i32* %w2, align 4, !dbg !6899
  %inc67 = add nsw i32 %51, 1, !dbg !6899
  store i32 %inc67, i32* %w2, align 4, !dbg !6899
  br label %for.cond48, !dbg !6901, !llvm.loop !6902

for.end68:                                        ; preds = %if.then, %for.cond48
  %52 = load i32, i32* %i, align 4, !dbg !6904
  %conv69 = trunc i32 %52 to i8, !dbg !6904
  %53 = load i32, i32* %w, align 4, !dbg !6905
  %mul70 = mul nsw i32 %53, 16, !dbg !6906
  %54 = load i32, i32* %g, align 4, !dbg !6907
  %add71 = add nsw i32 %mul70, %54, !dbg !6908
  %idxprom72 = sext i32 %add71 to i64, !dbg !6909
  %55 = load i32, i32* %ch, align 4, !dbg !6910
  %idxprom73 = sext i32 %55 to i64, !dbg !6909
  %56 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6909
  %ch74 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %56, i32 0, i32 7, !dbg !6911
  %arrayidx75 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch74, i64 0, i64 %idxprom73, !dbg !6909
  %zeroes76 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx75, i32 0, i32 8, !dbg !6912
  %arrayidx77 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes76, i64 0, i64 %idxprom72, !dbg !6909
  store i8 %conv69, i8* %arrayidx77, align 1, !dbg !6913
  br label %for.inc78, !dbg !6914

for.inc78:                                        ; preds = %for.end68
  %57 = load i32, i32* %g, align 4, !dbg !6915
  %inc79 = add nsw i32 %57, 1, !dbg !6915
  store i32 %inc79, i32* %g, align 4, !dbg !6915
  br label %for.cond42, !dbg !6917, !llvm.loop !6918

for.end80:                                        ; preds = %for.cond42
  br label %for.inc81, !dbg !6920

for.inc81:                                        ; preds = %for.end80
  %58 = load i32, i32* %w, align 4, !dbg !6921
  %idxprom82 = sext i32 %58 to i64, !dbg !6923
  %59 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics, align 8, !dbg !6923
  %group_len83 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %59, i32 0, i32 4, !dbg !6924
  %arrayidx84 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len83, i64 0, i64 %idxprom82, !dbg !6923
  %60 = load i8, i8* %arrayidx84, align 1, !dbg !6923
  %conv85 = zext i8 %60 to i32, !dbg !6923
  %61 = load i32, i32* %w, align 4, !dbg !6925
  %add86 = add nsw i32 %61, %conv85, !dbg !6925
  store i32 %add86, i32* %w, align 4, !dbg !6925
  br label %for.cond37, !dbg !6926, !llvm.loop !6927

for.end87:                                        ; preds = %for.cond37
  br label %for.inc88, !dbg !6929

for.inc88:                                        ; preds = %for.end87
  %62 = load i32, i32* %ch, align 4, !dbg !6930
  %inc89 = add nsw i32 %62, 1, !dbg !6930
  store i32 %inc89, i32* %ch, align 4, !dbg !6930
  br label %for.cond, !dbg !6932, !llvm.loop !6933

for.end90:                                        ; preds = %for.cond
  %63 = load i32, i32* %chans.addr, align 4, !dbg !6935
  %cmp91 = icmp sgt i32 %63, 1, !dbg !6937
  br i1 %cmp91, label %land.lhs.true, label %if.end160, !dbg !6938

land.lhs.true:                                    ; preds = %for.end90
  %64 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6939
  %common_window = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %64, i32 0, i32 1, !dbg !6941
  %65 = load i32, i32* %common_window, align 4, !dbg !6941
  %tobool93 = icmp ne i32 %65, 0, !dbg !6939
  br i1 %tobool93, label %if.then94, label %if.end160, !dbg !6942

if.then94:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics0, metadata !6943, metadata !2880), !dbg !6945
  %66 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6946
  %ch95 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %66, i32 0, i32 7, !dbg !6947
  %arrayidx96 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch95, i64 0, i64 0, !dbg !6946
  %ics97 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx96, i32 0, i32 0, !dbg !6948
  store %struct.IndividualChannelStream* %ics97, %struct.IndividualChannelStream** %ics0, align 8, !dbg !6945
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %ics1, metadata !6949, metadata !2880), !dbg !6950
  %67 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !6951
  %ch98 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %67, i32 0, i32 7, !dbg !6952
  %arrayidx99 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch98, i64 0, i64 1, !dbg !6951
  %ics100 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx99, i32 0, i32 0, !dbg !6953
  store %struct.IndividualChannelStream* %ics100, %struct.IndividualChannelStream** %ics1, align 8, !dbg !6950
  call void @llvm.dbg.declare(metadata i32* %msc, metadata !6954, metadata !2880), !dbg !6955
  store i32 0, i32* %msc, align 4, !dbg !6955
  %68 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics0, align 8, !dbg !6956
  %max_sfb101 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %68, i32 0, i32 0, !dbg !6957
  %69 = load i8, i8* %max_sfb101, align 8, !dbg !6957
  %conv102 = zext i8 %69 to i32, !dbg !6958
  %70 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics1, align 8, !dbg !6959
  %max_sfb103 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %70, i32 0, i32 0, !dbg !6960
  %71 = load i8, i8* %max_sfb103, align 8, !dbg !6960
  %conv104 = zext i8 %71 to i32, !dbg !6961
  %cmp105 = icmp sgt i32 %conv102, %conv104, !dbg !6962
  br i1 %cmp105, label %cond.true107, label %cond.false110, !dbg !6958

cond.true107:                                     ; preds = %if.then94
  %72 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics0, align 8, !dbg !6963
  %max_sfb108 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %72, i32 0, i32 0, !dbg !6965
  %73 = load i8, i8* %max_sfb108, align 8, !dbg !6965
  %conv109 = zext i8 %73 to i32, !dbg !6966
  br label %cond.end113, !dbg !6967

cond.false110:                                    ; preds = %if.then94
  %74 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics1, align 8, !dbg !6968
  %max_sfb111 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %74, i32 0, i32 0, !dbg !6970
  %75 = load i8, i8* %max_sfb111, align 8, !dbg !6970
  %conv112 = zext i8 %75 to i32, !dbg !6971
  br label %cond.end113, !dbg !6972

cond.end113:                                      ; preds = %cond.false110, %cond.true107
  %cond114 = phi i32 [ %conv109, %cond.true107 ], [ %conv112, %cond.false110 ], !dbg !6973
  %conv115 = trunc i32 %cond114 to i8, !dbg !6975
  %76 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics0, align 8, !dbg !6976
  %max_sfb116 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %76, i32 0, i32 0, !dbg !6977
  store i8 %conv115, i8* %max_sfb116, align 8, !dbg !6978
  %77 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics0, align 8, !dbg !6979
  %max_sfb117 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %77, i32 0, i32 0, !dbg !6980
  %78 = load i8, i8* %max_sfb117, align 8, !dbg !6980
  %79 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics1, align 8, !dbg !6981
  %max_sfb118 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %79, i32 0, i32 0, !dbg !6982
  store i8 %78, i8* %max_sfb118, align 8, !dbg !6983
  store i32 0, i32* %w, align 4, !dbg !6984
  br label %for.cond119, !dbg !6986

for.cond119:                                      ; preds = %for.inc141, %cond.end113
  %80 = load i32, i32* %w, align 4, !dbg !6987
  %81 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics0, align 8, !dbg !6990
  %num_windows120 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %81, i32 0, i32 9, !dbg !6991
  %82 = load i32, i32* %num_windows120, align 4, !dbg !6991
  %mul121 = mul nsw i32 %82, 16, !dbg !6992
  %cmp122 = icmp slt i32 %80, %mul121, !dbg !6993
  br i1 %cmp122, label %for.body124, label %for.end143, !dbg !6994

for.body124:                                      ; preds = %for.cond119
  store i32 0, i32* %i, align 4, !dbg !6995
  br label %for.cond125, !dbg !6997

for.cond125:                                      ; preds = %for.inc138, %for.body124
  %83 = load i32, i32* %i, align 4, !dbg !6998
  %84 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics0, align 8, !dbg !7001
  %max_sfb126 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %84, i32 0, i32 0, !dbg !7002
  %85 = load i8, i8* %max_sfb126, align 8, !dbg !7002
  %conv127 = zext i8 %85 to i32, !dbg !7001
  %cmp128 = icmp slt i32 %83, %conv127, !dbg !7003
  br i1 %cmp128, label %for.body130, label %for.end140, !dbg !7004

for.body130:                                      ; preds = %for.cond125
  %86 = load i32, i32* %w, align 4, !dbg !7005
  %87 = load i32, i32* %i, align 4, !dbg !7007
  %add131 = add nsw i32 %86, %87, !dbg !7008
  %idxprom132 = sext i32 %add131 to i64, !dbg !7009
  %88 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !7009
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %88, i32 0, i32 4, !dbg !7010
  %arrayidx133 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i64 0, i64 %idxprom132, !dbg !7009
  %89 = load i8, i8* %arrayidx133, align 1, !dbg !7009
  %tobool134 = icmp ne i8 %89, 0, !dbg !7009
  br i1 %tobool134, label %if.then135, label %if.end137, !dbg !7011

if.then135:                                       ; preds = %for.body130
  %90 = load i32, i32* %msc, align 4, !dbg !7012
  %inc136 = add nsw i32 %90, 1, !dbg !7012
  store i32 %inc136, i32* %msc, align 4, !dbg !7012
  br label %if.end137, !dbg !7013

if.end137:                                        ; preds = %if.then135, %for.body130
  br label %for.inc138, !dbg !7014

for.inc138:                                       ; preds = %if.end137
  %91 = load i32, i32* %i, align 4, !dbg !7016
  %inc139 = add nsw i32 %91, 1, !dbg !7016
  store i32 %inc139, i32* %i, align 4, !dbg !7016
  br label %for.cond125, !dbg !7018, !llvm.loop !7019

for.end140:                                       ; preds = %for.cond125
  br label %for.inc141, !dbg !7021

for.inc141:                                       ; preds = %for.end140
  %92 = load i32, i32* %w, align 4, !dbg !7023
  %add142 = add nsw i32 %92, 16, !dbg !7023
  store i32 %add142, i32* %w, align 4, !dbg !7023
  br label %for.cond119, !dbg !7025, !llvm.loop !7026

for.end143:                                       ; preds = %for.cond119
  %93 = load i32, i32* %msc, align 4, !dbg !7028
  %cmp144 = icmp eq i32 %93, 0, !dbg !7030
  br i1 %cmp144, label %if.then150, label %lor.lhs.false, !dbg !7031

lor.lhs.false:                                    ; preds = %for.end143
  %94 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics0, align 8, !dbg !7032
  %max_sfb146 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %94, i32 0, i32 0, !dbg !7034
  %95 = load i8, i8* %max_sfb146, align 8, !dbg !7034
  %conv147 = zext i8 %95 to i32, !dbg !7032
  %cmp148 = icmp eq i32 %conv147, 0, !dbg !7035
  br i1 %cmp148, label %if.then150, label %if.else, !dbg !7036

if.then150:                                       ; preds = %lor.lhs.false, %for.end143
  %96 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !7037
  %ms_mode = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %96, i32 0, i32 2, !dbg !7038
  store i32 0, i32* %ms_mode, align 8, !dbg !7039
  br label %if.end159, !dbg !7037

if.else:                                          ; preds = %lor.lhs.false
  %97 = load i32, i32* %msc, align 4, !dbg !7040
  %98 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics0, align 8, !dbg !7041
  %max_sfb151 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %98, i32 0, i32 0, !dbg !7042
  %99 = load i8, i8* %max_sfb151, align 8, !dbg !7042
  %conv152 = zext i8 %99 to i32, !dbg !7041
  %100 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %ics0, align 8, !dbg !7043
  %num_windows153 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %100, i32 0, i32 9, !dbg !7044
  %101 = load i32, i32* %num_windows153, align 4, !dbg !7044
  %mul154 = mul nsw i32 %conv152, %101, !dbg !7045
  %cmp155 = icmp slt i32 %97, %mul154, !dbg !7046
  %cond157 = select i1 %cmp155, i32 1, i32 2, !dbg !7040
  %102 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !7047
  %ms_mode158 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %102, i32 0, i32 2, !dbg !7048
  store i32 %cond157, i32* %ms_mode158, align 8, !dbg !7049
  br label %if.end159

if.end159:                                        ; preds = %if.else, %if.then150
  br label %if.end160, !dbg !7050

if.end160:                                        ; preds = %if.end159, %land.lhs.true, %for.end90
  ret void, !dbg !7051
}

; Function Attrs: nounwind uwtable
define internal void @put_ics_info(%struct.AACEncContext* %s, %struct.IndividualChannelStream* %info) #0 !dbg !7052 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %info.addr = alloca %struct.IndividualChannelStream*, align 8
  %w = alloca i32, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !7055, metadata !2880), !dbg !7056
  store %struct.IndividualChannelStream* %info, %struct.IndividualChannelStream** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndividualChannelStream** %info.addr, metadata !7057, metadata !2880), !dbg !7058
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7059, metadata !2880), !dbg !7060
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7061
  %pb = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %0, i32 0, i32 2, !dbg !7062
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 0), !dbg !7063
  %1 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7064
  %pb1 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %1, i32 0, i32 2, !dbg !7065
  %2 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %info.addr, align 8, !dbg !7066
  %window_sequence = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %2, i32 0, i32 1, !dbg !7067
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence, i64 0, i64 0, !dbg !7066
  %3 = load i32, i32* %arrayidx, align 4, !dbg !7066
  call void @put_bits(%struct.PutBitContext* %pb1, i32 2, i32 %3), !dbg !7068
  %4 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7069
  %pb2 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %4, i32 0, i32 2, !dbg !7070
  %5 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %info.addr, align 8, !dbg !7071
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %5, i32 0, i32 2, !dbg !7072
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !7071
  %6 = load i8, i8* %arrayidx3, align 4, !dbg !7071
  %conv = zext i8 %6 to i32, !dbg !7071
  call void @put_bits(%struct.PutBitContext* %pb2, i32 1, i32 %conv), !dbg !7073
  %7 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %info.addr, align 8, !dbg !7074
  %window_sequence4 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %7, i32 0, i32 1, !dbg !7076
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %window_sequence4, i64 0, i64 0, !dbg !7074
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !7074
  %cmp = icmp ne i32 %8, 2, !dbg !7077
  br i1 %cmp, label %if.then, label %if.else, !dbg !7078

if.then:                                          ; preds = %entry
  %9 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7079
  %pb7 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %9, i32 0, i32 2, !dbg !7081
  %10 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %info.addr, align 8, !dbg !7082
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %10, i32 0, i32 0, !dbg !7083
  %11 = load i8, i8* %max_sfb, align 8, !dbg !7083
  %conv8 = zext i8 %11 to i32, !dbg !7082
  call void @put_bits(%struct.PutBitContext* %pb7, i32 6, i32 %conv8), !dbg !7084
  %12 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7085
  %pb9 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %12, i32 0, i32 2, !dbg !7086
  %13 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %info.addr, align 8, !dbg !7087
  %predictor_present = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %13, i32 0, i32 11, !dbg !7088
  %14 = load i32, i32* %predictor_present, align 4, !dbg !7088
  %tobool = icmp ne i32 %14, 0, !dbg !7089
  %lnot = xor i1 %tobool, true, !dbg !7089
  %lnot10 = xor i1 %lnot, true, !dbg !7090
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !7090
  call void @put_bits(%struct.PutBitContext* %pb9, i32 1, i32 %lnot.ext), !dbg !7091
  br label %if.end, !dbg !7092

if.else:                                          ; preds = %entry
  %15 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7093
  %pb11 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %15, i32 0, i32 2, !dbg !7095
  %16 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %info.addr, align 8, !dbg !7096
  %max_sfb12 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %16, i32 0, i32 0, !dbg !7097
  %17 = load i8, i8* %max_sfb12, align 8, !dbg !7097
  %conv13 = zext i8 %17 to i32, !dbg !7096
  call void @put_bits(%struct.PutBitContext* %pb11, i32 4, i32 %conv13), !dbg !7098
  store i32 1, i32* %w, align 4, !dbg !7099
  br label %for.cond, !dbg !7101

for.cond:                                         ; preds = %for.inc, %if.else
  %18 = load i32, i32* %w, align 4, !dbg !7102
  %cmp14 = icmp slt i32 %18, 8, !dbg !7105
  br i1 %cmp14, label %for.body, label %for.end, !dbg !7106

for.body:                                         ; preds = %for.cond
  %19 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7107
  %pb16 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %19, i32 0, i32 2, !dbg !7108
  %20 = load i32, i32* %w, align 4, !dbg !7109
  %idxprom = sext i32 %20 to i64, !dbg !7110
  %21 = load %struct.IndividualChannelStream*, %struct.IndividualChannelStream** %info.addr, align 8, !dbg !7110
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %21, i32 0, i32 4, !dbg !7111
  %arrayidx17 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom, !dbg !7110
  %22 = load i8, i8* %arrayidx17, align 1, !dbg !7110
  %tobool18 = icmp ne i8 %22, 0, !dbg !7112
  %lnot19 = xor i1 %tobool18, true, !dbg !7112
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !7112
  call void @put_bits(%struct.PutBitContext* %pb16, i32 1, i32 %lnot.ext20), !dbg !7113
  br label %for.inc, !dbg !7113

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %w, align 4, !dbg !7114
  %inc = add nsw i32 %23, 1, !dbg !7114
  store i32 %inc, i32* %w, align 4, !dbg !7114
  br label %for.cond, !dbg !7116, !llvm.loop !7117

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  ret void, !dbg !7119
}

; Function Attrs: nounwind uwtable
define internal void @encode_ms_info(%struct.PutBitContext* %pb, %struct.ChannelElement* %cpe) #0 !dbg !7120 {
entry:
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %i = alloca i32, align 4
  %w = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !7123, metadata !2880), !dbg !7124
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !7125, metadata !2880), !dbg !7126
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7127, metadata !2880), !dbg !7128
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7129, metadata !2880), !dbg !7130
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7131
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !7132
  %ms_mode = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 2, !dbg !7133
  %2 = load i32, i32* %ms_mode, align 8, !dbg !7133
  call void @put_bits(%struct.PutBitContext* %0, i32 2, i32 %2), !dbg !7134
  %3 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !7135
  %ms_mode1 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %3, i32 0, i32 2, !dbg !7137
  %4 = load i32, i32* %ms_mode1, align 8, !dbg !7137
  %cmp = icmp eq i32 %4, 1, !dbg !7138
  br i1 %cmp, label %if.then, label %if.end, !dbg !7139

if.then:                                          ; preds = %entry
  store i32 0, i32* %w, align 4, !dbg !7140
  br label %for.cond, !dbg !7142

for.cond:                                         ; preds = %for.inc12, %if.then
  %5 = load i32, i32* %w, align 4, !dbg !7143
  %6 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !7146
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %6, i32 0, i32 7, !dbg !7147
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !7146
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx, i32 0, i32 0, !dbg !7148
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !7149
  %7 = load i32, i32* %num_windows, align 4, !dbg !7149
  %cmp2 = icmp slt i32 %5, %7, !dbg !7150
  br i1 %cmp2, label %for.body, label %for.end20, !dbg !7151

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7152
  br label %for.cond3, !dbg !7154

for.cond3:                                        ; preds = %for.inc, %for.body
  %8 = load i32, i32* %i, align 4, !dbg !7155
  %9 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !7158
  %ch4 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %9, i32 0, i32 7, !dbg !7159
  %arrayidx5 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch4, i64 0, i64 0, !dbg !7158
  %ics6 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx5, i32 0, i32 0, !dbg !7160
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics6, i32 0, i32 0, !dbg !7161
  %10 = load i8, i8* %max_sfb, align 32, !dbg !7161
  %conv = zext i8 %10 to i32, !dbg !7158
  %cmp7 = icmp slt i32 %8, %conv, !dbg !7162
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !7163

for.body9:                                        ; preds = %for.cond3
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7164
  %12 = load i32, i32* %w, align 4, !dbg !7165
  %mul = mul nsw i32 %12, 16, !dbg !7166
  %13 = load i32, i32* %i, align 4, !dbg !7167
  %add = add nsw i32 %mul, %13, !dbg !7168
  %idxprom = sext i32 %add to i64, !dbg !7169
  %14 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !7169
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %14, i32 0, i32 4, !dbg !7170
  %arrayidx10 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i64 0, i64 %idxprom, !dbg !7169
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !7169
  %conv11 = zext i8 %15 to i32, !dbg !7169
  call void @put_bits(%struct.PutBitContext* %11, i32 1, i32 %conv11), !dbg !7171
  br label %for.inc, !dbg !7171

for.inc:                                          ; preds = %for.body9
  %16 = load i32, i32* %i, align 4, !dbg !7172
  %inc = add nsw i32 %16, 1, !dbg !7172
  store i32 %inc, i32* %i, align 4, !dbg !7172
  br label %for.cond3, !dbg !7174, !llvm.loop !7175

for.end:                                          ; preds = %for.cond3
  br label %for.inc12, !dbg !7177

for.inc12:                                        ; preds = %for.end
  %17 = load i32, i32* %w, align 4, !dbg !7179
  %idxprom13 = sext i32 %17 to i64, !dbg !7181
  %18 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !7181
  %ch14 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %18, i32 0, i32 7, !dbg !7182
  %arrayidx15 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch14, i64 0, i64 0, !dbg !7181
  %ics16 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx15, i32 0, i32 0, !dbg !7183
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics16, i32 0, i32 4, !dbg !7184
  %arrayidx17 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom13, !dbg !7181
  %19 = load i8, i8* %arrayidx17, align 1, !dbg !7181
  %conv18 = zext i8 %19 to i32, !dbg !7181
  %20 = load i32, i32* %w, align 4, !dbg !7185
  %add19 = add nsw i32 %20, %conv18, !dbg !7185
  store i32 %add19, i32* %w, align 4, !dbg !7185
  br label %for.cond, !dbg !7186, !llvm.loop !7187

for.end20:                                        ; preds = %for.cond
  br label %if.end, !dbg !7189

if.end:                                           ; preds = %for.end20, %entry
  ret void, !dbg !7191
}

; Function Attrs: nounwind uwtable
define internal i32 @encode_individual_channel(%struct.AVCodecContext* %avctx, %struct.AACEncContext* %s, %struct.SingleChannelElement* %sce, i32 %common_window) #0 !dbg !7192 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s.addr = alloca %struct.AACEncContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %common_window.addr = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !7195, metadata !2880), !dbg !7196
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !7197, metadata !2880), !dbg !7198
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !7199, metadata !2880), !dbg !7200
  store i32 %common_window, i32* %common_window.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %common_window.addr, metadata !7201, metadata !2880), !dbg !7202
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7203
  %pb = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %0, i32 0, i32 2, !dbg !7204
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7205
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 7, !dbg !7206
  %arrayidx = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 0, !dbg !7205
  %2 = load i32, i32* %arrayidx, align 4, !dbg !7205
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %2), !dbg !7207
  %3 = load i32, i32* %common_window.addr, align 4, !dbg !7208
  %tobool = icmp ne i32 %3, 0, !dbg !7208
  br i1 %tobool, label %if.end11, label %if.then, !dbg !7210

if.then:                                          ; preds = %entry
  %4 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7211
  %5 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7213
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %5, i32 0, i32 0, !dbg !7214
  call void @put_ics_info(%struct.AACEncContext* %4, %struct.IndividualChannelStream* %ics), !dbg !7215
  %6 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7216
  %coder = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %6, i32 0, i32 19, !dbg !7218
  %7 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder, align 8, !dbg !7218
  %encode_main_pred = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %7, i32 0, i32 5, !dbg !7219
  %8 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %encode_main_pred, align 8, !dbg !7219
  %tobool1 = icmp ne void (%struct.AACEncContext*, %struct.SingleChannelElement*)* %8, null, !dbg !7216
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7220

if.then2:                                         ; preds = %if.then
  %9 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7221
  %coder3 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %9, i32 0, i32 19, !dbg !7222
  %10 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder3, align 8, !dbg !7222
  %encode_main_pred4 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %10, i32 0, i32 5, !dbg !7223
  %11 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %encode_main_pred4, align 8, !dbg !7223
  %12 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7224
  %13 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7225
  call void %11(%struct.AACEncContext* %12, %struct.SingleChannelElement* %13), !dbg !7221
  br label %if.end, !dbg !7221

if.end:                                           ; preds = %if.then2, %if.then
  %14 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7226
  %coder5 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %14, i32 0, i32 19, !dbg !7228
  %15 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder5, align 8, !dbg !7228
  %encode_ltp_info = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %15, i32 0, i32 4, !dbg !7229
  %16 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)** %encode_ltp_info, align 8, !dbg !7229
  %tobool6 = icmp ne void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)* %16, null, !dbg !7226
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !7230

if.then7:                                         ; preds = %if.end
  %17 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7231
  %coder8 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %17, i32 0, i32 19, !dbg !7232
  %18 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder8, align 8, !dbg !7232
  %encode_ltp_info9 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %18, i32 0, i32 4, !dbg !7233
  %19 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)** %encode_ltp_info9, align 8, !dbg !7233
  %20 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7234
  %21 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7235
  call void %19(%struct.AACEncContext* %20, %struct.SingleChannelElement* %21, i32 0), !dbg !7231
  br label %if.end10, !dbg !7231

if.end10:                                         ; preds = %if.then7, %if.end
  br label %if.end11, !dbg !7236

if.end11:                                         ; preds = %if.end10, %entry
  %22 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7237
  %23 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7238
  call void @encode_band_info(%struct.AACEncContext* %22, %struct.SingleChannelElement* %23), !dbg !7239
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7240
  %25 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7241
  %26 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7242
  call void @encode_scale_factors(%struct.AVCodecContext* %24, %struct.AACEncContext* %25, %struct.SingleChannelElement* %26), !dbg !7243
  %27 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7244
  %28 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7245
  %pulse = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %28, i32 0, i32 2, !dbg !7246
  call void @encode_pulses(%struct.AACEncContext* %27, %struct.Pulse* %pulse), !dbg !7247
  %29 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7248
  %pb12 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %29, i32 0, i32 2, !dbg !7249
  %30 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7250
  %tns = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %30, i32 0, i32 1, !dbg !7251
  %present = getelementptr inbounds %struct.TemporalNoiseShaping, %struct.TemporalNoiseShaping* %tns, i32 0, i32 0, !dbg !7252
  %31 = load i32, i32* %present, align 16, !dbg !7252
  %tobool13 = icmp ne i32 %31, 0, !dbg !7253
  %lnot = xor i1 %tobool13, true, !dbg !7253
  %lnot14 = xor i1 %lnot, true, !dbg !7254
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !7254
  call void @put_bits(%struct.PutBitContext* %pb12, i32 1, i32 %lnot.ext), !dbg !7255
  %32 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7256
  %coder15 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %32, i32 0, i32 19, !dbg !7258
  %33 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder15, align 8, !dbg !7258
  %encode_tns_info = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %33, i32 0, i32 3, !dbg !7259
  %34 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %encode_tns_info, align 8, !dbg !7259
  %tobool16 = icmp ne void (%struct.AACEncContext*, %struct.SingleChannelElement*)* %34, null, !dbg !7256
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !7260

if.then17:                                        ; preds = %if.end11
  %35 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7261
  %coder18 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %35, i32 0, i32 19, !dbg !7262
  %36 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder18, align 8, !dbg !7262
  %encode_tns_info19 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %36, i32 0, i32 3, !dbg !7263
  %37 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %encode_tns_info19, align 8, !dbg !7263
  %38 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7264
  %39 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7265
  call void %37(%struct.AACEncContext* %38, %struct.SingleChannelElement* %39), !dbg !7261
  br label %if.end20, !dbg !7261

if.end20:                                         ; preds = %if.then17, %if.end11
  %40 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7266
  %pb21 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %40, i32 0, i32 2, !dbg !7267
  call void @put_bits(%struct.PutBitContext* %pb21, i32 1, i32 0), !dbg !7268
  %41 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7269
  %42 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7270
  call void @encode_spectral_coeffs(%struct.AACEncContext* %41, %struct.SingleChannelElement* %42), !dbg !7271
  ret i32 0, !dbg !7272
}

declare void @ff_af_queue_remove(%struct.AudioFrameQueue*, i32, i64*, i64*) #4

; Function Attrs: nounwind uwtable
define internal void @apply_only_long_window(%struct.AVFloatDSPContext* %fdsp, %struct.SingleChannelElement* %sce, float* %audio) #0 !dbg !7273 {
entry:
  %fdsp.addr = alloca %struct.AVFloatDSPContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %audio.addr = alloca float*, align 8
  %lwindow = alloca float*, align 8
  %pwindow = alloca float*, align 8
  %out = alloca float*, align 8
  store %struct.AVFloatDSPContext* %fdsp, %struct.AVFloatDSPContext** %fdsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFloatDSPContext** %fdsp.addr, metadata !7274, metadata !2880), !dbg !7275
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !7276, metadata !2880), !dbg !7277
  store float* %audio, float** %audio.addr, align 8
  call void @llvm.dbg.declare(metadata float** %audio.addr, metadata !7278, metadata !2880), !dbg !7279
  call void @llvm.dbg.declare(metadata float** %lwindow, metadata !7280, metadata !2880), !dbg !7281
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7282
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !7283
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 2, !dbg !7284
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !7282
  %1 = load i8, i8* %arrayidx, align 4, !dbg !7282
  %conv = zext i8 %1 to i32, !dbg !7282
  %tobool = icmp ne i32 %conv, 0, !dbg !7282
  %cond = select i1 %tobool, float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_aac_kbd_long_1024, i32 0, i32 0), float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_sine_1024, i32 0, i32 0), !dbg !7282
  store float* %cond, float** %lwindow, align 8, !dbg !7281
  call void @llvm.dbg.declare(metadata float** %pwindow, metadata !7285, metadata !2880), !dbg !7286
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7287
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 0, !dbg !7288
  %use_kb_window2 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1, i32 0, i32 2, !dbg !7289
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window2, i64 0, i64 1, !dbg !7287
  %3 = load i8, i8* %arrayidx3, align 1, !dbg !7287
  %conv4 = zext i8 %3 to i32, !dbg !7287
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !7287
  %cond6 = select i1 %tobool5, float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_aac_kbd_long_1024, i32 0, i32 0), float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_sine_1024, i32 0, i32 0), !dbg !7287
  store float* %cond6, float** %pwindow, align 8, !dbg !7286
  call void @llvm.dbg.declare(metadata float** %out, metadata !7290, metadata !2880), !dbg !7291
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7292
  %ret_buf = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 16, !dbg !7293
  %arraydecay = getelementptr inbounds [2048 x float], [2048 x float]* %ret_buf, i32 0, i32 0, !dbg !7292
  store float* %arraydecay, float** %out, align 8, !dbg !7291
  %5 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !7294
  %vector_fmul = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %5, i32 0, i32 0, !dbg !7295
  %6 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul, align 8, !dbg !7295
  %7 = load float*, float** %out, align 8, !dbg !7296
  %8 = load float*, float** %audio.addr, align 8, !dbg !7297
  %9 = load float*, float** %lwindow, align 8, !dbg !7298
  call void %6(float* %7, float* %8, float* %9, i32 1024), !dbg !7294
  %10 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !7299
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %10, i32 0, i32 7, !dbg !7300
  %11 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse, align 8, !dbg !7300
  %12 = load float*, float** %out, align 8, !dbg !7301
  %add.ptr = getelementptr inbounds float, float* %12, i64 1024, !dbg !7302
  %13 = load float*, float** %audio.addr, align 8, !dbg !7303
  %add.ptr7 = getelementptr inbounds float, float* %13, i64 1024, !dbg !7304
  %14 = load float*, float** %pwindow, align 8, !dbg !7305
  call void %11(float* %add.ptr, float* %add.ptr7, float* %14, i32 1024), !dbg !7299
  ret void, !dbg !7306
}

; Function Attrs: nounwind uwtable
define internal void @apply_long_start_window(%struct.AVFloatDSPContext* %fdsp, %struct.SingleChannelElement* %sce, float* %audio) #0 !dbg !7307 {
entry:
  %fdsp.addr = alloca %struct.AVFloatDSPContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %audio.addr = alloca float*, align 8
  %lwindow = alloca float*, align 8
  %swindow = alloca float*, align 8
  %out = alloca float*, align 8
  store %struct.AVFloatDSPContext* %fdsp, %struct.AVFloatDSPContext** %fdsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFloatDSPContext** %fdsp.addr, metadata !7308, metadata !2880), !dbg !7309
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !7310, metadata !2880), !dbg !7311
  store float* %audio, float** %audio.addr, align 8
  call void @llvm.dbg.declare(metadata float** %audio.addr, metadata !7312, metadata !2880), !dbg !7313
  call void @llvm.dbg.declare(metadata float** %lwindow, metadata !7314, metadata !2880), !dbg !7315
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7316
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !7317
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 2, !dbg !7318
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 1, !dbg !7316
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7316
  %conv = zext i8 %1 to i32, !dbg !7316
  %tobool = icmp ne i32 %conv, 0, !dbg !7316
  %cond = select i1 %tobool, float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_aac_kbd_long_1024, i32 0, i32 0), float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_sine_1024, i32 0, i32 0), !dbg !7316
  store float* %cond, float** %lwindow, align 8, !dbg !7315
  call void @llvm.dbg.declare(metadata float** %swindow, metadata !7319, metadata !2880), !dbg !7320
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7321
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 0, !dbg !7322
  %use_kb_window2 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1, i32 0, i32 2, !dbg !7323
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window2, i64 0, i64 0, !dbg !7321
  %3 = load i8, i8* %arrayidx3, align 4, !dbg !7321
  %conv4 = zext i8 %3 to i32, !dbg !7321
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !7321
  %cond6 = select i1 %tobool5, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_aac_kbd_short_128, i32 0, i32 0), float* getelementptr inbounds ([128 x float], [128 x float]* @ff_sine_128, i32 0, i32 0), !dbg !7321
  store float* %cond6, float** %swindow, align 8, !dbg !7320
  call void @llvm.dbg.declare(metadata float** %out, metadata !7324, metadata !2880), !dbg !7325
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7326
  %ret_buf = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 16, !dbg !7327
  %arraydecay = getelementptr inbounds [2048 x float], [2048 x float]* %ret_buf, i32 0, i32 0, !dbg !7326
  store float* %arraydecay, float** %out, align 8, !dbg !7325
  %5 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !7328
  %vector_fmul = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %5, i32 0, i32 0, !dbg !7329
  %6 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul, align 8, !dbg !7329
  %7 = load float*, float** %out, align 8, !dbg !7330
  %8 = load float*, float** %audio.addr, align 8, !dbg !7331
  %9 = load float*, float** %lwindow, align 8, !dbg !7332
  call void %6(float* %7, float* %8, float* %9, i32 1024), !dbg !7328
  %10 = load float*, float** %out, align 8, !dbg !7333
  %add.ptr = getelementptr inbounds float, float* %10, i64 1024, !dbg !7334
  %11 = bitcast float* %add.ptr to i8*, !dbg !7335
  %12 = load float*, float** %audio.addr, align 8, !dbg !7336
  %add.ptr7 = getelementptr inbounds float, float* %12, i64 1024, !dbg !7337
  %13 = bitcast float* %add.ptr7 to i8*, !dbg !7335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %13, i64 1792, i32 4, i1 false), !dbg !7335
  %14 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !7338
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %14, i32 0, i32 7, !dbg !7339
  %15 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse, align 8, !dbg !7339
  %16 = load float*, float** %out, align 8, !dbg !7340
  %add.ptr8 = getelementptr inbounds float, float* %16, i64 1024, !dbg !7341
  %add.ptr9 = getelementptr inbounds float, float* %add.ptr8, i64 448, !dbg !7342
  %17 = load float*, float** %audio.addr, align 8, !dbg !7343
  %add.ptr10 = getelementptr inbounds float, float* %17, i64 1024, !dbg !7344
  %add.ptr11 = getelementptr inbounds float, float* %add.ptr10, i64 448, !dbg !7345
  %18 = load float*, float** %swindow, align 8, !dbg !7346
  call void %15(float* %add.ptr9, float* %add.ptr11, float* %18, i32 128), !dbg !7338
  %19 = load float*, float** %out, align 8, !dbg !7347
  %add.ptr12 = getelementptr inbounds float, float* %19, i64 1024, !dbg !7348
  %add.ptr13 = getelementptr inbounds float, float* %add.ptr12, i64 576, !dbg !7349
  %20 = bitcast float* %add.ptr13 to i8*, !dbg !7350
  call void @llvm.memset.p0i8.i64(i8* %20, i8 0, i64 1792, i32 4, i1 false), !dbg !7350
  ret void, !dbg !7351
}

; Function Attrs: nounwind uwtable
define internal void @apply_eight_short_window(%struct.AVFloatDSPContext* %fdsp, %struct.SingleChannelElement* %sce, float* %audio) #0 !dbg !7352 {
entry:
  %fdsp.addr = alloca %struct.AVFloatDSPContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %audio.addr = alloca float*, align 8
  %swindow = alloca float*, align 8
  %pwindow = alloca float*, align 8
  %in = alloca float*, align 8
  %out = alloca float*, align 8
  %w = alloca i32, align 4
  store %struct.AVFloatDSPContext* %fdsp, %struct.AVFloatDSPContext** %fdsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFloatDSPContext** %fdsp.addr, metadata !7353, metadata !2880), !dbg !7354
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !7355, metadata !2880), !dbg !7356
  store float* %audio, float** %audio.addr, align 8
  call void @llvm.dbg.declare(metadata float** %audio.addr, metadata !7357, metadata !2880), !dbg !7358
  call void @llvm.dbg.declare(metadata float** %swindow, metadata !7359, metadata !2880), !dbg !7360
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7361
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !7362
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 2, !dbg !7363
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !7361
  %1 = load i8, i8* %arrayidx, align 4, !dbg !7361
  %conv = zext i8 %1 to i32, !dbg !7361
  %tobool = icmp ne i32 %conv, 0, !dbg !7361
  %cond = select i1 %tobool, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_aac_kbd_short_128, i32 0, i32 0), float* getelementptr inbounds ([128 x float], [128 x float]* @ff_sine_128, i32 0, i32 0), !dbg !7361
  store float* %cond, float** %swindow, align 8, !dbg !7360
  call void @llvm.dbg.declare(metadata float** %pwindow, metadata !7364, metadata !2880), !dbg !7365
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7366
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 0, !dbg !7367
  %use_kb_window2 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1, i32 0, i32 2, !dbg !7368
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window2, i64 0, i64 1, !dbg !7366
  %3 = load i8, i8* %arrayidx3, align 1, !dbg !7366
  %conv4 = zext i8 %3 to i32, !dbg !7366
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !7366
  %cond6 = select i1 %tobool5, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_aac_kbd_short_128, i32 0, i32 0), float* getelementptr inbounds ([128 x float], [128 x float]* @ff_sine_128, i32 0, i32 0), !dbg !7366
  store float* %cond6, float** %pwindow, align 8, !dbg !7365
  call void @llvm.dbg.declare(metadata float** %in, metadata !7369, metadata !2880), !dbg !7370
  %4 = load float*, float** %audio.addr, align 8, !dbg !7371
  %add.ptr = getelementptr inbounds float, float* %4, i64 448, !dbg !7372
  store float* %add.ptr, float** %in, align 8, !dbg !7370
  call void @llvm.dbg.declare(metadata float** %out, metadata !7373, metadata !2880), !dbg !7374
  %5 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7375
  %ret_buf = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %5, i32 0, i32 16, !dbg !7376
  %arraydecay = getelementptr inbounds [2048 x float], [2048 x float]* %ret_buf, i32 0, i32 0, !dbg !7375
  store float* %arraydecay, float** %out, align 8, !dbg !7374
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7377, metadata !2880), !dbg !7378
  store i32 0, i32* %w, align 4, !dbg !7379
  br label %for.cond, !dbg !7381

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %w, align 4, !dbg !7382
  %cmp = icmp slt i32 %6, 8, !dbg !7385
  br i1 %cmp, label %for.body, label %for.end, !dbg !7386

for.body:                                         ; preds = %for.cond
  %7 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !7387
  %vector_fmul = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %7, i32 0, i32 0, !dbg !7389
  %8 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul, align 8, !dbg !7389
  %9 = load float*, float** %out, align 8, !dbg !7390
  %10 = load float*, float** %in, align 8, !dbg !7391
  %11 = load i32, i32* %w, align 4, !dbg !7392
  %tobool8 = icmp ne i32 %11, 0, !dbg !7392
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !7392

cond.true:                                        ; preds = %for.body
  %12 = load float*, float** %pwindow, align 8, !dbg !7393
  br label %cond.end, !dbg !7395

cond.false:                                       ; preds = %for.body
  %13 = load float*, float** %swindow, align 8, !dbg !7396
  br label %cond.end, !dbg !7398

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond9 = phi float* [ %12, %cond.true ], [ %13, %cond.false ], !dbg !7399
  call void %8(float* %9, float* %10, float* %cond9, i32 128), !dbg !7401
  %14 = load float*, float** %out, align 8, !dbg !7402
  %add.ptr10 = getelementptr inbounds float, float* %14, i64 128, !dbg !7402
  store float* %add.ptr10, float** %out, align 8, !dbg !7402
  %15 = load float*, float** %in, align 8, !dbg !7403
  %add.ptr11 = getelementptr inbounds float, float* %15, i64 128, !dbg !7403
  store float* %add.ptr11, float** %in, align 8, !dbg !7403
  %16 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !7404
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %16, i32 0, i32 7, !dbg !7405
  %17 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse, align 8, !dbg !7405
  %18 = load float*, float** %out, align 8, !dbg !7406
  %19 = load float*, float** %in, align 8, !dbg !7407
  %20 = load float*, float** %swindow, align 8, !dbg !7408
  call void %17(float* %18, float* %19, float* %20, i32 128), !dbg !7404
  %21 = load float*, float** %out, align 8, !dbg !7409
  %add.ptr12 = getelementptr inbounds float, float* %21, i64 128, !dbg !7409
  store float* %add.ptr12, float** %out, align 8, !dbg !7409
  br label %for.inc, !dbg !7410

for.inc:                                          ; preds = %cond.end
  %22 = load i32, i32* %w, align 4, !dbg !7411
  %inc = add nsw i32 %22, 1, !dbg !7411
  store i32 %inc, i32* %w, align 4, !dbg !7411
  br label %for.cond, !dbg !7413, !llvm.loop !7414

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7416
}

; Function Attrs: nounwind uwtable
define internal void @apply_long_stop_window(%struct.AVFloatDSPContext* %fdsp, %struct.SingleChannelElement* %sce, float* %audio) #0 !dbg !7417 {
entry:
  %fdsp.addr = alloca %struct.AVFloatDSPContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %audio.addr = alloca float*, align 8
  %lwindow = alloca float*, align 8
  %swindow = alloca float*, align 8
  %out = alloca float*, align 8
  store %struct.AVFloatDSPContext* %fdsp, %struct.AVFloatDSPContext** %fdsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFloatDSPContext** %fdsp.addr, metadata !7418, metadata !2880), !dbg !7419
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !7420, metadata !2880), !dbg !7421
  store float* %audio, float** %audio.addr, align 8
  call void @llvm.dbg.declare(metadata float** %audio.addr, metadata !7422, metadata !2880), !dbg !7423
  call void @llvm.dbg.declare(metadata float** %lwindow, metadata !7424, metadata !2880), !dbg !7425
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7426
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 0, !dbg !7427
  %use_kb_window = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 2, !dbg !7428
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window, i64 0, i64 0, !dbg !7426
  %1 = load i8, i8* %arrayidx, align 4, !dbg !7426
  %conv = zext i8 %1 to i32, !dbg !7426
  %tobool = icmp ne i32 %conv, 0, !dbg !7426
  %cond = select i1 %tobool, float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_aac_kbd_long_1024, i32 0, i32 0), float* getelementptr inbounds ([1024 x float], [1024 x float]* @ff_sine_1024, i32 0, i32 0), !dbg !7426
  store float* %cond, float** %lwindow, align 8, !dbg !7425
  call void @llvm.dbg.declare(metadata float** %swindow, metadata !7429, metadata !2880), !dbg !7430
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7431
  %ics1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 0, !dbg !7432
  %use_kb_window2 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics1, i32 0, i32 2, !dbg !7433
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %use_kb_window2, i64 0, i64 1, !dbg !7431
  %3 = load i8, i8* %arrayidx3, align 1, !dbg !7431
  %conv4 = zext i8 %3 to i32, !dbg !7431
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !7431
  %cond6 = select i1 %tobool5, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_aac_kbd_short_128, i32 0, i32 0), float* getelementptr inbounds ([128 x float], [128 x float]* @ff_sine_128, i32 0, i32 0), !dbg !7431
  store float* %cond6, float** %swindow, align 8, !dbg !7430
  call void @llvm.dbg.declare(metadata float** %out, metadata !7434, metadata !2880), !dbg !7435
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7436
  %ret_buf = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 16, !dbg !7437
  %arraydecay = getelementptr inbounds [2048 x float], [2048 x float]* %ret_buf, i32 0, i32 0, !dbg !7436
  store float* %arraydecay, float** %out, align 8, !dbg !7435
  %5 = load float*, float** %out, align 8, !dbg !7438
  %6 = bitcast float* %5 to i8*, !dbg !7439
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 1792, i32 4, i1 false), !dbg !7439
  %7 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !7440
  %vector_fmul = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %7, i32 0, i32 0, !dbg !7441
  %8 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul, align 8, !dbg !7441
  %9 = load float*, float** %out, align 8, !dbg !7442
  %add.ptr = getelementptr inbounds float, float* %9, i64 448, !dbg !7443
  %10 = load float*, float** %audio.addr, align 8, !dbg !7444
  %add.ptr7 = getelementptr inbounds float, float* %10, i64 448, !dbg !7445
  %11 = load float*, float** %swindow, align 8, !dbg !7446
  call void %8(float* %add.ptr, float* %add.ptr7, float* %11, i32 128), !dbg !7440
  %12 = load float*, float** %out, align 8, !dbg !7447
  %add.ptr8 = getelementptr inbounds float, float* %12, i64 576, !dbg !7448
  %13 = bitcast float* %add.ptr8 to i8*, !dbg !7449
  %14 = load float*, float** %audio.addr, align 8, !dbg !7450
  %add.ptr9 = getelementptr inbounds float, float* %14, i64 576, !dbg !7451
  %15 = bitcast float* %add.ptr9 to i8*, !dbg !7449
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %15, i64 1792, i32 4, i1 false), !dbg !7449
  %16 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !7452
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %16, i32 0, i32 7, !dbg !7453
  %17 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse, align 8, !dbg !7453
  %18 = load float*, float** %out, align 8, !dbg !7454
  %add.ptr10 = getelementptr inbounds float, float* %18, i64 1024, !dbg !7455
  %19 = load float*, float** %audio.addr, align 8, !dbg !7456
  %add.ptr11 = getelementptr inbounds float, float* %19, i64 1024, !dbg !7457
  %20 = load float*, float** %lwindow, align 8, !dbg !7458
  call void %17(float* %add.ptr10, float* %add.ptr11, float* %20, i32 1024), !dbg !7452
  ret void, !dbg !7459
}

; Function Attrs: nounwind uwtable
define internal void @encode_band_info(%struct.AACEncContext* %s, %struct.SingleChannelElement* %sce) #0 !dbg !7460 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %w = alloca i32, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !7461, metadata !2880), !dbg !7462
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !7463, metadata !2880), !dbg !7464
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7465, metadata !2880), !dbg !7466
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7467
  %coder = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %0, i32 0, i32 19, !dbg !7469
  %1 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder, align 8, !dbg !7469
  %set_special_band_scalefactors = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %1, i32 0, i32 12, !dbg !7470
  %2 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %set_special_band_scalefactors, align 8, !dbg !7470
  %tobool = icmp ne void (%struct.AACEncContext*, %struct.SingleChannelElement*)* %2, null, !dbg !7467
  br i1 %tobool, label %if.then, label %if.end, !dbg !7471

if.then:                                          ; preds = %entry
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7472
  %coder1 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %3, i32 0, i32 19, !dbg !7473
  %4 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder1, align 8, !dbg !7473
  %set_special_band_scalefactors2 = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %4, i32 0, i32 12, !dbg !7474
  %5 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)** %set_special_band_scalefactors2, align 8, !dbg !7474
  %6 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7475
  %7 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7476
  call void %5(%struct.AACEncContext* %6, %struct.SingleChannelElement* %7), !dbg !7472
  br label %if.end, !dbg !7472

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %w, align 4, !dbg !7477
  br label %for.cond, !dbg !7479

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %w, align 4, !dbg !7480
  %9 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7483
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %9, i32 0, i32 0, !dbg !7484
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !7485
  %10 = load i32, i32* %num_windows, align 4, !dbg !7485
  %cmp = icmp slt i32 %8, %10, !dbg !7486
  br i1 %cmp, label %for.body, label %for.end, !dbg !7487

for.body:                                         ; preds = %for.cond
  %11 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7488
  %coder3 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %11, i32 0, i32 19, !dbg !7489
  %12 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder3, align 8, !dbg !7489
  %encode_window_bands_info = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %12, i32 0, i32 1, !dbg !7490
  %13 = load void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32, i32, float)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32, i32, float)** %encode_window_bands_info, align 8, !dbg !7490
  %14 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7491
  %15 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7492
  %16 = load i32, i32* %w, align 4, !dbg !7493
  %17 = load i32, i32* %w, align 4, !dbg !7494
  %idxprom = sext i32 %17 to i64, !dbg !7495
  %18 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7495
  %ics4 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %18, i32 0, i32 0, !dbg !7496
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics4, i32 0, i32 4, !dbg !7497
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom, !dbg !7495
  %19 = load i8, i8* %arrayidx, align 1, !dbg !7495
  %conv = zext i8 %19 to i32, !dbg !7495
  %20 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7498
  %lambda = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %20, i32 0, i32 22, !dbg !7499
  %21 = load float, float* %lambda, align 8, !dbg !7499
  call void %13(%struct.AACEncContext* %14, %struct.SingleChannelElement* %15, i32 %16, i32 %conv, float %21), !dbg !7488
  br label %for.inc, !dbg !7488

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %w, align 4, !dbg !7500
  %idxprom5 = sext i32 %22 to i64, !dbg !7502
  %23 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7502
  %ics6 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %23, i32 0, i32 0, !dbg !7503
  %group_len7 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics6, i32 0, i32 4, !dbg !7504
  %arrayidx8 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len7, i64 0, i64 %idxprom5, !dbg !7502
  %24 = load i8, i8* %arrayidx8, align 1, !dbg !7502
  %conv9 = zext i8 %24 to i32, !dbg !7502
  %25 = load i32, i32* %w, align 4, !dbg !7505
  %add = add nsw i32 %25, %conv9, !dbg !7505
  store i32 %add, i32* %w, align 4, !dbg !7505
  br label %for.cond, !dbg !7506, !llvm.loop !7507

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7509
}

; Function Attrs: nounwind uwtable
define internal void @encode_scale_factors(%struct.AVCodecContext* %avctx, %struct.AACEncContext* %s, %struct.SingleChannelElement* %sce) #0 !dbg !7510 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s.addr = alloca %struct.AACEncContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %diff = alloca i32, align 4
  %off_sf = alloca i32, align 4
  %off_pns = alloca i32, align 4
  %off_is = alloca i32, align 4
  %noise_flag = alloca i32, align 4
  %i = alloca i32, align 4
  %w = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !7513, metadata !2880), !dbg !7514
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !7515, metadata !2880), !dbg !7516
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !7517, metadata !2880), !dbg !7518
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7519, metadata !2880), !dbg !7520
  call void @llvm.dbg.declare(metadata i32* %off_sf, metadata !7521, metadata !2880), !dbg !7522
  %0 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7523
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %0, i32 0, i32 7, !dbg !7524
  %arrayidx = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 0, !dbg !7523
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7523
  store i32 %1, i32* %off_sf, align 4, !dbg !7522
  call void @llvm.dbg.declare(metadata i32* %off_pns, metadata !7525, metadata !2880), !dbg !7526
  %2 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7527
  %sf_idx1 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %2, i32 0, i32 7, !dbg !7528
  %arrayidx2 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx1, i64 0, i64 0, !dbg !7527
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !7527
  %sub = sub nsw i32 %3, 90, !dbg !7529
  store i32 %sub, i32* %off_pns, align 4, !dbg !7526
  call void @llvm.dbg.declare(metadata i32* %off_is, metadata !7530, metadata !2880), !dbg !7531
  store i32 0, i32* %off_is, align 4, !dbg !7531
  call void @llvm.dbg.declare(metadata i32* %noise_flag, metadata !7532, metadata !2880), !dbg !7533
  store i32 1, i32* %noise_flag, align 4, !dbg !7533
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7534, metadata !2880), !dbg !7535
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7536, metadata !2880), !dbg !7537
  store i32 0, i32* %w, align 4, !dbg !7538
  br label %for.cond, !dbg !7540

for.cond:                                         ; preds = %for.inc85, %entry
  %4 = load i32, i32* %w, align 4, !dbg !7541
  %5 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7544
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %5, i32 0, i32 0, !dbg !7545
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !7546
  %6 = load i32, i32* %num_windows, align 4, !dbg !7546
  %cmp = icmp slt i32 %4, %6, !dbg !7547
  br i1 %cmp, label %for.body, label %for.end91, !dbg !7548

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7549
  br label %for.cond3, !dbg !7552

for.cond3:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !7553
  %8 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7556
  %ics4 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %8, i32 0, i32 0, !dbg !7557
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics4, i32 0, i32 0, !dbg !7558
  %9 = load i8, i8* %max_sfb, align 32, !dbg !7558
  %conv = zext i8 %9 to i32, !dbg !7556
  %cmp5 = icmp slt i32 %7, %conv, !dbg !7559
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !7560

for.body7:                                        ; preds = %for.cond3
  %10 = load i32, i32* %w, align 4, !dbg !7561
  %mul = mul nsw i32 %10, 16, !dbg !7564
  %11 = load i32, i32* %i, align 4, !dbg !7565
  %add = add nsw i32 %mul, %11, !dbg !7566
  %idxprom = sext i32 %add to i64, !dbg !7567
  %12 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7567
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %12, i32 0, i32 8, !dbg !7568
  %arrayidx8 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom, !dbg !7567
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !7567
  %tobool = icmp ne i8 %13, 0, !dbg !7567
  br i1 %tobool, label %if.end84, label %if.then, !dbg !7569

if.then:                                          ; preds = %for.body7
  %14 = load i32, i32* %w, align 4, !dbg !7570
  %mul9 = mul nsw i32 %14, 16, !dbg !7573
  %15 = load i32, i32* %i, align 4, !dbg !7574
  %add10 = add nsw i32 %mul9, %15, !dbg !7575
  %idxprom11 = sext i32 %add10 to i64, !dbg !7576
  %16 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7576
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %16, i32 0, i32 3, !dbg !7577
  %arrayidx12 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom11, !dbg !7576
  %17 = load i32, i32* %arrayidx12, align 4, !dbg !7576
  %cmp13 = icmp eq i32 %17, 13, !dbg !7578
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !7579

if.then15:                                        ; preds = %if.then
  %18 = load i32, i32* %w, align 4, !dbg !7580
  %mul16 = mul nsw i32 %18, 16, !dbg !7582
  %19 = load i32, i32* %i, align 4, !dbg !7583
  %add17 = add nsw i32 %mul16, %19, !dbg !7584
  %idxprom18 = sext i32 %add17 to i64, !dbg !7585
  %20 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7585
  %sf_idx19 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %20, i32 0, i32 7, !dbg !7586
  %arrayidx20 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx19, i64 0, i64 %idxprom18, !dbg !7585
  %21 = load i32, i32* %arrayidx20, align 4, !dbg !7585
  %22 = load i32, i32* %off_pns, align 4, !dbg !7587
  %sub21 = sub nsw i32 %21, %22, !dbg !7588
  store i32 %sub21, i32* %diff, align 4, !dbg !7589
  %23 = load i32, i32* %w, align 4, !dbg !7590
  %mul22 = mul nsw i32 %23, 16, !dbg !7591
  %24 = load i32, i32* %i, align 4, !dbg !7592
  %add23 = add nsw i32 %mul22, %24, !dbg !7593
  %idxprom24 = sext i32 %add23 to i64, !dbg !7594
  %25 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7594
  %sf_idx25 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %25, i32 0, i32 7, !dbg !7595
  %arrayidx26 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx25, i64 0, i64 %idxprom24, !dbg !7594
  %26 = load i32, i32* %arrayidx26, align 4, !dbg !7594
  store i32 %26, i32* %off_pns, align 4, !dbg !7596
  %27 = load i32, i32* %noise_flag, align 4, !dbg !7597
  %dec = add nsw i32 %27, -1, !dbg !7597
  store i32 %dec, i32* %noise_flag, align 4, !dbg !7597
  %cmp27 = icmp sgt i32 %27, 0, !dbg !7599
  br i1 %cmp27, label %if.then29, label %if.end, !dbg !7600

if.then29:                                        ; preds = %if.then15
  %28 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7601
  %pb = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %28, i32 0, i32 2, !dbg !7603
  %29 = load i32, i32* %diff, align 4, !dbg !7604
  %add30 = add nsw i32 %29, 256, !dbg !7605
  call void @put_bits(%struct.PutBitContext* %pb, i32 9, i32 %add30), !dbg !7606
  br label %for.inc, !dbg !7607

if.end:                                           ; preds = %if.then15
  br label %if.end70, !dbg !7608

if.else:                                          ; preds = %if.then
  %30 = load i32, i32* %w, align 4, !dbg !7609
  %mul31 = mul nsw i32 %30, 16, !dbg !7612
  %31 = load i32, i32* %i, align 4, !dbg !7613
  %add32 = add nsw i32 %mul31, %31, !dbg !7614
  %idxprom33 = sext i32 %add32 to i64, !dbg !7615
  %32 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7615
  %band_type34 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %32, i32 0, i32 3, !dbg !7616
  %arrayidx35 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type34, i64 0, i64 %idxprom33, !dbg !7615
  %33 = load i32, i32* %arrayidx35, align 4, !dbg !7615
  %cmp36 = icmp eq i32 %33, 15, !dbg !7617
  br i1 %cmp36, label %if.then45, label %lor.lhs.false, !dbg !7618

lor.lhs.false:                                    ; preds = %if.else
  %34 = load i32, i32* %w, align 4, !dbg !7619
  %mul38 = mul nsw i32 %34, 16, !dbg !7620
  %35 = load i32, i32* %i, align 4, !dbg !7621
  %add39 = add nsw i32 %mul38, %35, !dbg !7622
  %idxprom40 = sext i32 %add39 to i64, !dbg !7623
  %36 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7623
  %band_type41 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %36, i32 0, i32 3, !dbg !7624
  %arrayidx42 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type41, i64 0, i64 %idxprom40, !dbg !7623
  %37 = load i32, i32* %arrayidx42, align 4, !dbg !7623
  %cmp43 = icmp eq i32 %37, 14, !dbg !7625
  br i1 %cmp43, label %if.then45, label %if.else57, !dbg !7626

if.then45:                                        ; preds = %lor.lhs.false, %if.else
  %38 = load i32, i32* %w, align 4, !dbg !7628
  %mul46 = mul nsw i32 %38, 16, !dbg !7630
  %39 = load i32, i32* %i, align 4, !dbg !7631
  %add47 = add nsw i32 %mul46, %39, !dbg !7632
  %idxprom48 = sext i32 %add47 to i64, !dbg !7633
  %40 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7633
  %sf_idx49 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %40, i32 0, i32 7, !dbg !7634
  %arrayidx50 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx49, i64 0, i64 %idxprom48, !dbg !7633
  %41 = load i32, i32* %arrayidx50, align 4, !dbg !7633
  %42 = load i32, i32* %off_is, align 4, !dbg !7635
  %sub51 = sub nsw i32 %41, %42, !dbg !7636
  store i32 %sub51, i32* %diff, align 4, !dbg !7637
  %43 = load i32, i32* %w, align 4, !dbg !7638
  %mul52 = mul nsw i32 %43, 16, !dbg !7639
  %44 = load i32, i32* %i, align 4, !dbg !7640
  %add53 = add nsw i32 %mul52, %44, !dbg !7641
  %idxprom54 = sext i32 %add53 to i64, !dbg !7642
  %45 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7642
  %sf_idx55 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %45, i32 0, i32 7, !dbg !7643
  %arrayidx56 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx55, i64 0, i64 %idxprom54, !dbg !7642
  %46 = load i32, i32* %arrayidx56, align 4, !dbg !7642
  store i32 %46, i32* %off_is, align 4, !dbg !7644
  br label %if.end69, !dbg !7645

if.else57:                                        ; preds = %lor.lhs.false
  %47 = load i32, i32* %w, align 4, !dbg !7646
  %mul58 = mul nsw i32 %47, 16, !dbg !7648
  %48 = load i32, i32* %i, align 4, !dbg !7649
  %add59 = add nsw i32 %mul58, %48, !dbg !7650
  %idxprom60 = sext i32 %add59 to i64, !dbg !7651
  %49 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7651
  %sf_idx61 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %49, i32 0, i32 7, !dbg !7652
  %arrayidx62 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx61, i64 0, i64 %idxprom60, !dbg !7651
  %50 = load i32, i32* %arrayidx62, align 4, !dbg !7651
  %51 = load i32, i32* %off_sf, align 4, !dbg !7653
  %sub63 = sub nsw i32 %50, %51, !dbg !7654
  store i32 %sub63, i32* %diff, align 4, !dbg !7655
  %52 = load i32, i32* %w, align 4, !dbg !7656
  %mul64 = mul nsw i32 %52, 16, !dbg !7657
  %53 = load i32, i32* %i, align 4, !dbg !7658
  %add65 = add nsw i32 %mul64, %53, !dbg !7659
  %idxprom66 = sext i32 %add65 to i64, !dbg !7660
  %54 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7660
  %sf_idx67 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %54, i32 0, i32 7, !dbg !7661
  %arrayidx68 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx67, i64 0, i64 %idxprom66, !dbg !7660
  %55 = load i32, i32* %arrayidx68, align 4, !dbg !7660
  store i32 %55, i32* %off_sf, align 4, !dbg !7662
  br label %if.end69

if.end69:                                         ; preds = %if.else57, %if.then45
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end
  %56 = load i32, i32* %diff, align 4, !dbg !7663
  %add71 = add nsw i32 %56, 60, !dbg !7663
  store i32 %add71, i32* %diff, align 4, !dbg !7663
  br label %do.body, !dbg !7664, !llvm.loop !7665

do.body:                                          ; preds = %if.end70
  %57 = load i32, i32* %diff, align 4, !dbg !7666
  %cmp72 = icmp sge i32 %57, 0, !dbg !7670
  br i1 %cmp72, label %land.lhs.true, label %if.then76, !dbg !7671

land.lhs.true:                                    ; preds = %do.body
  %58 = load i32, i32* %diff, align 4, !dbg !7672
  %cmp74 = icmp sle i32 %58, 120, !dbg !7674
  br i1 %cmp74, label %if.end77, label %if.then76, !dbg !7675

if.then76:                                        ; preds = %land.lhs.true, %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50, i32 0, i32 0), i32 410), !dbg !7676
  call void @abort() #12, !dbg !7679
  unreachable, !dbg !7681

if.end77:                                         ; preds = %land.lhs.true
  br label %do.end, !dbg !7682

do.end:                                           ; preds = %if.end77
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7684
  %pb78 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 2, !dbg !7685
  %60 = load i32, i32* %diff, align 4, !dbg !7686
  %idxprom79 = sext i32 %60 to i64, !dbg !7687
  %arrayidx80 = getelementptr inbounds [121 x i8], [121 x i8]* @ff_aac_scalefactor_bits, i64 0, i64 %idxprom79, !dbg !7687
  %61 = load i8, i8* %arrayidx80, align 1, !dbg !7687
  %conv81 = zext i8 %61 to i32, !dbg !7687
  %62 = load i32, i32* %diff, align 4, !dbg !7688
  %idxprom82 = sext i32 %62 to i64, !dbg !7689
  %arrayidx83 = getelementptr inbounds [121 x i32], [121 x i32]* @ff_aac_scalefactor_code, i64 0, i64 %idxprom82, !dbg !7689
  %63 = load i32, i32* %arrayidx83, align 4, !dbg !7689
  call void @put_bits(%struct.PutBitContext* %pb78, i32 %conv81, i32 %63), !dbg !7690
  br label %if.end84, !dbg !7691

if.end84:                                         ; preds = %do.end, %for.body7
  br label %for.inc, !dbg !7692

for.inc:                                          ; preds = %if.end84, %if.then29
  %64 = load i32, i32* %i, align 4, !dbg !7693
  %inc = add nsw i32 %64, 1, !dbg !7693
  store i32 %inc, i32* %i, align 4, !dbg !7693
  br label %for.cond3, !dbg !7695, !llvm.loop !7696

for.end:                                          ; preds = %for.cond3
  br label %for.inc85, !dbg !7698

for.inc85:                                        ; preds = %for.end
  %65 = load i32, i32* %w, align 4, !dbg !7699
  %idxprom86 = sext i32 %65 to i64, !dbg !7701
  %66 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7701
  %ics87 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %66, i32 0, i32 0, !dbg !7702
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics87, i32 0, i32 4, !dbg !7703
  %arrayidx88 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom86, !dbg !7701
  %67 = load i8, i8* %arrayidx88, align 1, !dbg !7701
  %conv89 = zext i8 %67 to i32, !dbg !7701
  %68 = load i32, i32* %w, align 4, !dbg !7704
  %add90 = add nsw i32 %68, %conv89, !dbg !7704
  store i32 %add90, i32* %w, align 4, !dbg !7704
  br label %for.cond, !dbg !7705, !llvm.loop !7706

for.end91:                                        ; preds = %for.cond
  ret void, !dbg !7708
}

; Function Attrs: nounwind uwtable
define internal void @encode_pulses(%struct.AACEncContext* %s, %struct.Pulse* %pulse) #0 !dbg !7709 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pulse.addr = alloca %struct.Pulse*, align 8
  %i = alloca i32, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !7713, metadata !2880), !dbg !7714
  store %struct.Pulse* %pulse, %struct.Pulse** %pulse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Pulse** %pulse.addr, metadata !7715, metadata !2880), !dbg !7716
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7717, metadata !2880), !dbg !7718
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7719
  %pb = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %0, i32 0, i32 2, !dbg !7720
  %1 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !7721
  %num_pulse = getelementptr inbounds %struct.Pulse, %struct.Pulse* %1, i32 0, i32 0, !dbg !7722
  %2 = load i32, i32* %num_pulse, align 4, !dbg !7722
  %tobool = icmp ne i32 %2, 0, !dbg !7723
  %lnot = xor i1 %tobool, true, !dbg !7723
  %lnot1 = xor i1 %lnot, true, !dbg !7724
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7724
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %lnot.ext), !dbg !7725
  %3 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !7726
  %num_pulse2 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %3, i32 0, i32 0, !dbg !7728
  %4 = load i32, i32* %num_pulse2, align 4, !dbg !7728
  %tobool3 = icmp ne i32 %4, 0, !dbg !7726
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7729

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !7730

if.end:                                           ; preds = %entry
  %5 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7731
  %pb4 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %5, i32 0, i32 2, !dbg !7732
  %6 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !7733
  %num_pulse5 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %6, i32 0, i32 0, !dbg !7734
  %7 = load i32, i32* %num_pulse5, align 4, !dbg !7734
  %sub = sub nsw i32 %7, 1, !dbg !7735
  call void @put_bits(%struct.PutBitContext* %pb4, i32 2, i32 %sub), !dbg !7736
  %8 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7737
  %pb6 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %8, i32 0, i32 2, !dbg !7738
  %9 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !7739
  %start = getelementptr inbounds %struct.Pulse, %struct.Pulse* %9, i32 0, i32 1, !dbg !7740
  %10 = load i32, i32* %start, align 4, !dbg !7740
  call void @put_bits(%struct.PutBitContext* %pb6, i32 6, i32 %10), !dbg !7741
  store i32 0, i32* %i, align 4, !dbg !7742
  br label %for.cond, !dbg !7744

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !7745
  %12 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !7748
  %num_pulse7 = getelementptr inbounds %struct.Pulse, %struct.Pulse* %12, i32 0, i32 0, !dbg !7749
  %13 = load i32, i32* %num_pulse7, align 4, !dbg !7749
  %cmp = icmp slt i32 %11, %13, !dbg !7750
  br i1 %cmp, label %for.body, label %for.end, !dbg !7751

for.body:                                         ; preds = %for.cond
  %14 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7752
  %pb8 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %14, i32 0, i32 2, !dbg !7754
  %15 = load i32, i32* %i, align 4, !dbg !7755
  %idxprom = sext i32 %15 to i64, !dbg !7756
  %16 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !7756
  %pos = getelementptr inbounds %struct.Pulse, %struct.Pulse* %16, i32 0, i32 2, !dbg !7757
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %pos, i64 0, i64 %idxprom, !dbg !7756
  %17 = load i32, i32* %arrayidx, align 4, !dbg !7756
  call void @put_bits(%struct.PutBitContext* %pb8, i32 5, i32 %17), !dbg !7758
  %18 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7759
  %pb9 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %18, i32 0, i32 2, !dbg !7760
  %19 = load i32, i32* %i, align 4, !dbg !7761
  %idxprom10 = sext i32 %19 to i64, !dbg !7762
  %20 = load %struct.Pulse*, %struct.Pulse** %pulse.addr, align 8, !dbg !7762
  %amp = getelementptr inbounds %struct.Pulse, %struct.Pulse* %20, i32 0, i32 3, !dbg !7763
  %arrayidx11 = getelementptr inbounds [4 x i32], [4 x i32]* %amp, i64 0, i64 %idxprom10, !dbg !7762
  %21 = load i32, i32* %arrayidx11, align 4, !dbg !7762
  call void @put_bits(%struct.PutBitContext* %pb9, i32 4, i32 %21), !dbg !7764
  br label %for.inc, !dbg !7765

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !7766
  %inc = add nsw i32 %22, 1, !dbg !7766
  store i32 %inc, i32* %i, align 4, !dbg !7766
  br label %for.cond, !dbg !7768, !llvm.loop !7769

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !7771
}

; Function Attrs: nounwind uwtable
define internal void @encode_spectral_coeffs(%struct.AACEncContext* %s, %struct.SingleChannelElement* %sce) #0 !dbg !7772 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %start = alloca i32, align 4
  %i = alloca i32, align 4
  %w = alloca i32, align 4
  %w2 = alloca i32, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !7773, metadata !2880), !dbg !7774
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !7775, metadata !2880), !dbg !7776
  call void @llvm.dbg.declare(metadata i32* %start, metadata !7777, metadata !2880), !dbg !7778
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7779, metadata !2880), !dbg !7780
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7781, metadata !2880), !dbg !7782
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !7783, metadata !2880), !dbg !7784
  store i32 0, i32* %w, align 4, !dbg !7785
  br label %for.cond, !dbg !7787

for.cond:                                         ; preds = %for.inc50, %entry
  %0 = load i32, i32* %w, align 4, !dbg !7788
  %1 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7791
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %1, i32 0, i32 0, !dbg !7792
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !7793
  %2 = load i32, i32* %num_windows, align 4, !dbg !7793
  %cmp = icmp slt i32 %0, %2, !dbg !7794
  br i1 %cmp, label %for.body, label %for.end57, !dbg !7795

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %start, align 4, !dbg !7796
  store i32 0, i32* %i, align 4, !dbg !7798
  br label %for.cond1, !dbg !7800

for.cond1:                                        ; preds = %for.inc47, %for.body
  %3 = load i32, i32* %i, align 4, !dbg !7801
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7804
  %ics2 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 0, !dbg !7805
  %max_sfb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics2, i32 0, i32 0, !dbg !7806
  %5 = load i8, i8* %max_sfb, align 32, !dbg !7806
  %conv = zext i8 %5 to i32, !dbg !7804
  %cmp3 = icmp slt i32 %3, %conv, !dbg !7807
  br i1 %cmp3, label %for.body5, label %for.end49, !dbg !7808

for.body5:                                        ; preds = %for.cond1
  %6 = load i32, i32* %w, align 4, !dbg !7809
  %mul = mul nsw i32 %6, 16, !dbg !7812
  %7 = load i32, i32* %i, align 4, !dbg !7813
  %add = add nsw i32 %mul, %7, !dbg !7814
  %idxprom = sext i32 %add to i64, !dbg !7815
  %8 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7815
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %8, i32 0, i32 8, !dbg !7816
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom, !dbg !7815
  %9 = load i8, i8* %arrayidx, align 1, !dbg !7815
  %tobool = icmp ne i8 %9, 0, !dbg !7815
  br i1 %tobool, label %if.then, label %if.end, !dbg !7817

if.then:                                          ; preds = %for.body5
  %10 = load i32, i32* %i, align 4, !dbg !7818
  %idxprom6 = sext i32 %10 to i64, !dbg !7820
  %11 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7820
  %ics7 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %11, i32 0, i32 0, !dbg !7821
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics7, i32 0, i32 7, !dbg !7822
  %12 = load i8*, i8** %swb_sizes, align 8, !dbg !7822
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 %idxprom6, !dbg !7820
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !7820
  %conv9 = zext i8 %13 to i32, !dbg !7820
  %14 = load i32, i32* %start, align 4, !dbg !7823
  %add10 = add nsw i32 %14, %conv9, !dbg !7823
  store i32 %add10, i32* %start, align 4, !dbg !7823
  br label %for.inc47, !dbg !7824

if.end:                                           ; preds = %for.body5
  %15 = load i32, i32* %w, align 4, !dbg !7825
  store i32 %15, i32* %w2, align 4, !dbg !7827
  br label %for.cond11, !dbg !7828

for.cond11:                                       ; preds = %for.inc, %if.end
  %16 = load i32, i32* %w2, align 4, !dbg !7829
  %17 = load i32, i32* %w, align 4, !dbg !7832
  %18 = load i32, i32* %w, align 4, !dbg !7833
  %idxprom12 = sext i32 %18 to i64, !dbg !7834
  %19 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7834
  %ics13 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %19, i32 0, i32 0, !dbg !7835
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics13, i32 0, i32 4, !dbg !7836
  %arrayidx14 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom12, !dbg !7834
  %20 = load i8, i8* %arrayidx14, align 1, !dbg !7834
  %conv15 = zext i8 %20 to i32, !dbg !7834
  %add16 = add nsw i32 %17, %conv15, !dbg !7837
  %cmp17 = icmp slt i32 %16, %add16, !dbg !7838
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !7839

for.body19:                                       ; preds = %for.cond11
  %21 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7840
  %coder = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %21, i32 0, i32 19, !dbg !7842
  %22 = load %struct.AACCoefficientsEncoder*, %struct.AACCoefficientsEncoder** %coder, align 8, !dbg !7842
  %quantize_and_encode_band = getelementptr inbounds %struct.AACCoefficientsEncoder, %struct.AACCoefficientsEncoder* %22, i32 0, i32 2, !dbg !7843
  %23 = load void (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, i32, i32, i32, float, i32)*, void (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, i32, i32, i32, float, i32)** %quantize_and_encode_band, align 8, !dbg !7843
  %24 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7844
  %25 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7845
  %pb = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %25, i32 0, i32 2, !dbg !7846
  %26 = load i32, i32* %start, align 4, !dbg !7847
  %27 = load i32, i32* %w2, align 4, !dbg !7848
  %mul20 = mul nsw i32 %27, 128, !dbg !7849
  %add21 = add nsw i32 %26, %mul20, !dbg !7850
  %idxprom22 = sext i32 %add21 to i64, !dbg !7851
  %28 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7851
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %28, i32 0, i32 14, !dbg !7852
  %arrayidx23 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i64 0, i64 %idxprom22, !dbg !7851
  %29 = load i32, i32* %i, align 4, !dbg !7853
  %idxprom24 = sext i32 %29 to i64, !dbg !7854
  %30 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7854
  %ics25 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %30, i32 0, i32 0, !dbg !7855
  %swb_sizes26 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics25, i32 0, i32 7, !dbg !7856
  %31 = load i8*, i8** %swb_sizes26, align 8, !dbg !7856
  %arrayidx27 = getelementptr inbounds i8, i8* %31, i64 %idxprom24, !dbg !7854
  %32 = load i8, i8* %arrayidx27, align 1, !dbg !7854
  %conv28 = zext i8 %32 to i32, !dbg !7854
  %33 = load i32, i32* %w, align 4, !dbg !7857
  %mul29 = mul nsw i32 %33, 16, !dbg !7858
  %34 = load i32, i32* %i, align 4, !dbg !7859
  %add30 = add nsw i32 %mul29, %34, !dbg !7860
  %idxprom31 = sext i32 %add30 to i64, !dbg !7861
  %35 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7861
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %35, i32 0, i32 7, !dbg !7862
  %arrayidx32 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 %idxprom31, !dbg !7861
  %36 = load i32, i32* %arrayidx32, align 4, !dbg !7861
  %37 = load i32, i32* %w, align 4, !dbg !7863
  %mul33 = mul nsw i32 %37, 16, !dbg !7864
  %38 = load i32, i32* %i, align 4, !dbg !7865
  %add34 = add nsw i32 %mul33, %38, !dbg !7866
  %idxprom35 = sext i32 %add34 to i64, !dbg !7867
  %39 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7867
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %39, i32 0, i32 3, !dbg !7868
  %arrayidx36 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom35, !dbg !7867
  %40 = load i32, i32* %arrayidx36, align 4, !dbg !7867
  %41 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7869
  %lambda = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %41, i32 0, i32 22, !dbg !7870
  %42 = load float, float* %lambda, align 8, !dbg !7870
  %43 = load i32, i32* %w, align 4, !dbg !7871
  %idxprom37 = sext i32 %43 to i64, !dbg !7872
  %44 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7872
  %ics38 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %44, i32 0, i32 0, !dbg !7873
  %window_clipping = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics38, i32 0, i32 16, !dbg !7874
  %arrayidx39 = getelementptr inbounds [8 x i8], [8 x i8]* %window_clipping, i64 0, i64 %idxprom37, !dbg !7872
  %45 = load i8, i8* %arrayidx39, align 1, !dbg !7872
  %conv40 = zext i8 %45 to i32, !dbg !7872
  call void %23(%struct.AACEncContext* %24, %struct.PutBitContext* %pb, float* %arrayidx23, float* null, i32 %conv28, i32 %36, i32 %40, float %42, i32 %conv40), !dbg !7840
  br label %for.inc, !dbg !7875

for.inc:                                          ; preds = %for.body19
  %46 = load i32, i32* %w2, align 4, !dbg !7876
  %inc = add nsw i32 %46, 1, !dbg !7876
  store i32 %inc, i32* %w2, align 4, !dbg !7876
  br label %for.cond11, !dbg !7878, !llvm.loop !7879

for.end:                                          ; preds = %for.cond11
  %47 = load i32, i32* %i, align 4, !dbg !7881
  %idxprom41 = sext i32 %47 to i64, !dbg !7882
  %48 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7882
  %ics42 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %48, i32 0, i32 0, !dbg !7883
  %swb_sizes43 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics42, i32 0, i32 7, !dbg !7884
  %49 = load i8*, i8** %swb_sizes43, align 8, !dbg !7884
  %arrayidx44 = getelementptr inbounds i8, i8* %49, i64 %idxprom41, !dbg !7882
  %50 = load i8, i8* %arrayidx44, align 1, !dbg !7882
  %conv45 = zext i8 %50 to i32, !dbg !7882
  %51 = load i32, i32* %start, align 4, !dbg !7885
  %add46 = add nsw i32 %51, %conv45, !dbg !7885
  store i32 %add46, i32* %start, align 4, !dbg !7885
  br label %for.inc47, !dbg !7886

for.inc47:                                        ; preds = %for.end, %if.then
  %52 = load i32, i32* %i, align 4, !dbg !7887
  %inc48 = add nsw i32 %52, 1, !dbg !7887
  store i32 %inc48, i32* %i, align 4, !dbg !7887
  br label %for.cond1, !dbg !7889, !llvm.loop !7890

for.end49:                                        ; preds = %for.cond1
  br label %for.inc50, !dbg !7892

for.inc50:                                        ; preds = %for.end49
  %53 = load i32, i32* %w, align 4, !dbg !7893
  %idxprom51 = sext i32 %53 to i64, !dbg !7895
  %54 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !7895
  %ics52 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %54, i32 0, i32 0, !dbg !7896
  %group_len53 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics52, i32 0, i32 4, !dbg !7897
  %arrayidx54 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len53, i64 0, i64 %idxprom51, !dbg !7895
  %55 = load i8, i8* %arrayidx54, align 1, !dbg !7895
  %conv55 = zext i8 %55 to i32, !dbg !7895
  %56 = load i32, i32* %w, align 4, !dbg !7898
  %add56 = add nsw i32 %56, %conv55, !dbg !7898
  store i32 %add56, i32* %w, align 4, !dbg !7898
  br label %for.cond, !dbg !7899, !llvm.loop !7900

for.end57:                                        ; preds = %for.cond
  ret void, !dbg !7902
}

declare void @ff_mdct_end(%struct.FFTContext*) #4

declare void @ff_psy_end(%struct.FFPsyContext*) #4

declare void @ff_lpc_end(%struct.LPCContext*) #4

declare void @ff_psy_preprocess_end(%struct.FFPsyPreprocessContext*) #4

declare void @av_freep(i8*) #4

declare void @ff_af_queue_close(%struct.AudioFrameQueue*) #4

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2037, !2038}
!llvm.ident = !{!2039}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1019, globals: !1033)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--aacenc.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !25, !46, !52, !56, !65, !72, !81, !86, !96, !106, !566, !766, !783, !789, !819, !829, !853, !859, !877, !901, !920, !930, !938, !950, !959, !966, !973}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !4, line: 221, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!6 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!7 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!8 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!9 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!10 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!11 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!12 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!13 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!14 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!15 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!16 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!17 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!18 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!19 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!20 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!21 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!22 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!23 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!24 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 29, size: 32, align: 32, elements: !27)
!26 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!27 = !{!28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!28 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!29 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!30 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!31 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!32 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!33 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!34 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!35 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!36 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!37 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!38 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!39 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!40 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!41 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!42 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!43 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!44 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!45 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !47, line: 77, size: 32, align: 32, elements: !48)
!47 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!48 = !{!49, !50, !51}
!49 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!50 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!51 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !47, line: 83, size: 32, align: 32, elements: !53)
!53 = !{!54, !55}
!54 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!55 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FFLPCType", file: !57, line: 43, size: 32, align: 32, elements: !58)
!57 = !DIFile(filename: "libavcodec/lpc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!58 = !{!59, !60, !61, !62, !63, !64}
!59 = !DIEnumerator(name: "FF_LPC_TYPE_DEFAULT", value: -1)
!60 = !DIEnumerator(name: "FF_LPC_TYPE_NONE", value: 0)
!61 = !DIEnumerator(name: "FF_LPC_TYPE_FIXED", value: 1)
!62 = !DIEnumerator(name: "FF_LPC_TYPE_LEVINSON", value: 2)
!63 = !DIEnumerator(name: "FF_LPC_TYPE_CHOLESKY", value: 3)
!64 = !DIEnumerator(name: "FF_LPC_TYPE_NB", value: 4)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "WindowSequence", file: !66, line: 75, size: 32, align: 32, elements: !67)
!66 = !DIFile(filename: "libavcodec/aac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!67 = !{!68, !69, !70, !71}
!68 = !DIEnumerator(name: "ONLY_LONG_SEQUENCE", value: 0)
!69 = !DIEnumerator(name: "LONG_START_SEQUENCE", value: 1)
!70 = !DIEnumerator(name: "EIGHT_SHORT_SEQUENCE", value: 2)
!71 = !DIEnumerator(name: "LONG_STOP_SEQUENCE", value: 3)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BandType", file: !66, line: 82, size: 32, align: 32, elements: !73)
!73 = !{!74, !75, !76, !77, !78, !79, !80}
!74 = !DIEnumerator(name: "ZERO_BT", value: 0)
!75 = !DIEnumerator(name: "FIRST_PAIR_BT", value: 5)
!76 = !DIEnumerator(name: "ESC_BT", value: 11)
!77 = !DIEnumerator(name: "RESERVED_BT", value: 12)
!78 = !DIEnumerator(name: "NOISE_BT", value: 13)
!79 = !DIEnumerator(name: "INTENSITY_BT2", value: 14)
!80 = !DIEnumerator(name: "INTENSITY_BT", value: 15)
!81 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CouplingPoint", file: !66, line: 106, size: 32, align: 32, elements: !82)
!82 = !{!83, !84, !85}
!83 = !DIEnumerator(name: "BEFORE_TNS", value: 0)
!84 = !DIEnumerator(name: "BETWEEN_TNS_AND_IMDCT", value: 1)
!85 = !DIEnumerator(name: "AFTER_IMDCT", value: 3)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RawDataBlockType", file: !66, line: 55, size: 32, align: 32, elements: !87)
!87 = !{!88, !89, !90, !91, !92, !93, !94, !95}
!88 = !DIEnumerator(name: "TYPE_SCE", value: 0)
!89 = !DIEnumerator(name: "TYPE_CPE", value: 1)
!90 = !DIEnumerator(name: "TYPE_CCE", value: 2)
!91 = !DIEnumerator(name: "TYPE_LFE", value: 3)
!92 = !DIEnumerator(name: "TYPE_DSE", value: 4)
!93 = !DIEnumerator(name: "TYPE_PCE", value: 5)
!94 = !DIEnumerator(name: "TYPE_FIL", value: 6)
!95 = !DIEnumerator(name: "TYPE_END", value: 7)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !97, line: 199, size: 32, align: 32, elements: !98)
!97 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!98 = !{!99, !100, !101, !102, !103, !104, !105}
!99 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!100 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!101 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!102 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!103 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!104 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!105 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!106 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !107, line: 215, size: 32, align: 32, elements: !108)
!107 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!108 = !{!109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565}
!109 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!110 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!111 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!112 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!113 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!114 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!115 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!116 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!118 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!119 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!120 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!121 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!122 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!123 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!124 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!125 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!126 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!127 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!128 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!129 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!130 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!131 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!132 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!133 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!134 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!135 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!136 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!137 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!138 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!139 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!141 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!142 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!143 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!144 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!145 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!146 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!147 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!149 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!150 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!152 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!153 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!154 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!155 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!156 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!157 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!158 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!159 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!160 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!161 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!162 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!163 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!164 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!165 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!166 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!167 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!168 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!169 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!170 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!171 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!172 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!173 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!174 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!175 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!176 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!177 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!178 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!179 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!180 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!181 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!182 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!183 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!184 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!185 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!186 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!187 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!188 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!189 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!190 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!191 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!192 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!193 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!194 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!195 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!196 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!197 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!198 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!199 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!200 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!201 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!202 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!203 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!204 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!205 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!206 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!207 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!208 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!209 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!210 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!211 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!212 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!213 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!215 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!216 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!217 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!218 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!219 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!220 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!221 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!222 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!223 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!224 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!226 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!227 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!229 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!230 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!231 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!232 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!234 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!237 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!238 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!239 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!240 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!241 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!242 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!243 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!244 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!246 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!247 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!248 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!249 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!250 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!251 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!252 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!253 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!254 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!255 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!257 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!258 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!259 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!260 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!261 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!262 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!263 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!264 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!265 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!266 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!267 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!268 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!269 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!270 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!271 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!272 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!273 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!274 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!275 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!276 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!277 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!278 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!279 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!280 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!281 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!282 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!283 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!284 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!285 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!287 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!288 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!289 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!290 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!291 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!292 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!293 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!294 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!295 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!296 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!297 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!298 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!299 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!300 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!301 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!302 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!303 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!304 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!305 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!306 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!307 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!308 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!309 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!310 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!311 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!312 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!313 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!314 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!315 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!316 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!317 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!318 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!319 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!320 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!321 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!322 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!323 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!324 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!325 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!326 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!327 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!328 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!329 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!330 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!332 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!333 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!334 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!335 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!336 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!337 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!338 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!339 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!341 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!342 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!343 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!345 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!346 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!347 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!348 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!349 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!350 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!351 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!352 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!353 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!354 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!355 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!356 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!357 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!358 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!359 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!360 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!361 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!362 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!363 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!364 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!365 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!366 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!367 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!368 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!369 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!370 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!371 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!372 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!373 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!374 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!375 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!376 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!377 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!378 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!379 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!380 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!381 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!382 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!383 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!384 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!385 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!387 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!388 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!389 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!390 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!391 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!393 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!394 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!395 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!396 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!397 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!398 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!401 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!402 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!403 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!404 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!406 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!408 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!409 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!410 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!411 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!412 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!413 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!414 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!415 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!416 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!417 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!418 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!419 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!421 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!423 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!424 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!425 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!426 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!427 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!428 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!429 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!432 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!433 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!434 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!435 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!436 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!438 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!439 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!440 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!441 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!442 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!443 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!444 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!445 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!446 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!447 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!450 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!451 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!452 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!453 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!457 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!458 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!460 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!462 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!463 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!464 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!465 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!466 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!467 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!469 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!471 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!472 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!473 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!474 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!475 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!477 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!478 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!479 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!480 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!482 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!483 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!484 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!485 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!486 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!487 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!488 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!489 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!490 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!491 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!492 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!493 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!494 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!495 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!496 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!497 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!498 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!499 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!500 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!501 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!502 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!503 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!504 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!505 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!506 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!507 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!508 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!509 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!510 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!511 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!512 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!513 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!514 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!515 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!516 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!517 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!518 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!519 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!520 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!521 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!522 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!523 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!524 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!525 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!526 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!527 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!528 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!529 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!530 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!531 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!532 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!533 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!534 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!535 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!536 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!537 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!538 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!539 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!540 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!541 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!542 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!543 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!544 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!545 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!546 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!547 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!548 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!549 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!550 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!551 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!552 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!553 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!554 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!555 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!556 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!557 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!558 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!559 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!560 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!561 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!562 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!563 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!564 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!565 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!566 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !567, line: 64, size: 32, align: 32, elements: !568)
!567 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!568 = !{!569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765}
!569 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!572 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!573 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!579 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!580 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!581 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!585 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!586 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!587 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!588 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!590 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!591 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!592 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!593 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!594 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!595 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!596 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!597 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!598 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!599 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!600 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!602 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!603 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!604 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!605 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!606 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!607 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!612 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!613 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!614 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!615 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!616 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!617 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!618 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!619 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!620 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!622 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!623 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!624 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!625 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!626 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!630 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!631 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!639 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!640 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!641 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!643 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!644 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!645 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!648 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!653 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!660 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!661 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!662 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!663 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!664 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!665 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!666 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!667 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!672 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!673 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!674 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!675 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!676 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!677 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!678 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!679 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!680 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!681 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!682 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!683 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!684 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!685 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!686 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!689 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!690 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!691 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!692 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!693 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!694 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!695 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!696 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!697 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!698 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!699 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!700 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!701 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!702 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!703 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!704 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!705 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!706 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!707 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!708 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!709 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!710 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!711 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!712 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!713 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!714 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!715 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!716 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!717 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!718 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!719 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!720 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!721 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!722 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!723 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!724 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!725 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!726 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!727 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!728 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!729 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!730 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!731 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!732 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!733 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!734 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!735 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!736 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!737 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!738 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!739 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!740 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!741 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!742 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!743 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!744 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!745 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!746 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!747 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!748 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!749 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!750 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!751 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!752 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!753 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!754 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!755 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!756 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!757 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!758 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!759 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!760 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!761 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!762 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!763 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!764 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!765 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!766 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !767, line: 58, size: 32, align: 32, elements: !768)
!767 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!768 = !{!769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782}
!769 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!770 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!771 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!772 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!773 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!774 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!775 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!776 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!777 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!778 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!779 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!780 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!781 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!782 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!783 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !107, line: 3865, size: 32, align: 32, elements: !784)
!784 = !{!785, !786, !787, !788}
!785 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!786 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!787 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!788 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!789 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !107, line: 1175, size: 32, align: 32, elements: !790)
!790 = !{!791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818}
!791 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!792 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!793 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!794 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!795 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!796 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!797 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!798 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!799 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!800 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!801 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!802 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!803 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!804 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!805 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!806 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!807 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!808 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!809 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!810 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!811 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!812 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!813 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!814 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!815 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!816 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!817 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!818 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!819 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !97, line: 272, size: 32, align: 32, elements: !820)
!820 = !{!821, !822, !823, !824, !825, !826, !827, !828}
!821 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!822 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!823 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!824 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!825 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!826 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!827 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!828 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !830, line: 48, size: 32, align: 32, elements: !831)
!830 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!831 = !{!832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852}
!832 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!833 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!834 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!835 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!836 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!837 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!838 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!839 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!840 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!841 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!842 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!843 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!844 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!845 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!846 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!847 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!848 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!849 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!850 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!851 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!852 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!853 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !567, line: 516, size: 32, align: 32, elements: !854)
!854 = !{!855, !856, !857, !858}
!855 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!856 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!857 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!858 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!859 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !567, line: 440, size: 32, align: 32, elements: !860)
!860 = !{!861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876}
!861 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!862 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!863 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!864 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!865 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!866 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!867 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!868 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!869 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!870 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!871 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!872 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!873 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!874 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!875 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!876 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!877 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !567, line: 464, size: 32, align: 32, elements: !878)
!878 = !{!879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900}
!879 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!880 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!881 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!882 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!883 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!884 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!885 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!886 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!887 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!888 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!889 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!890 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!891 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!892 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!893 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!894 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!895 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!896 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!897 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!898 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!899 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!900 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!901 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !567, line: 493, size: 32, align: 32, elements: !902)
!902 = !{!903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919}
!903 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!904 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!905 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!906 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!907 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!908 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!909 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!910 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!911 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!912 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!913 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!914 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!915 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!916 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!917 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!918 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!919 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!920 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !567, line: 538, size: 32, align: 32, elements: !921)
!921 = !{!922, !923, !924, !925, !926, !927, !928, !929}
!922 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!923 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!924 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!925 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!926 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!927 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!928 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!929 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !107, line: 1534, size: 32, align: 32, elements: !931)
!931 = !{!932, !933, !934, !935, !936, !937}
!932 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!933 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!934 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!935 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!936 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!937 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !107, line: 810, size: 32, align: 32, elements: !939)
!939 = !{!940, !941, !942, !943, !944, !945, !946, !947, !948, !949}
!940 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!941 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!942 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!943 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!944 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!945 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!946 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!947 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!948 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!949 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!950 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !107, line: 798, size: 32, align: 32, elements: !951)
!951 = !{!952, !953, !954, !955, !956, !957, !958}
!952 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!953 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!954 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!955 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!956 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!957 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!958 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!959 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OCStatus", file: !66, line: 115, size: 32, align: 32, elements: !960)
!960 = !{!961, !962, !963, !964, !965}
!961 = !DIEnumerator(name: "OC_NONE", value: 0)
!962 = !DIEnumerator(name: "OC_TRIAL_PCE", value: 1)
!963 = !DIEnumerator(name: "OC_TRIAL_FRAME", value: 2)
!964 = !DIEnumerator(name: "OC_GLOBAL_HDR", value: 3)
!965 = !DIEnumerator(name: "OC_LOCKED", value: 4)
!966 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AACCoder", file: !967, line: 35, size: 32, align: 32, elements: !968)
!967 = !DIFile(filename: "libavcodec/aacenc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!968 = !{!969, !970, !971, !972}
!969 = !DIEnumerator(name: "AAC_CODER_ANMR", value: 0)
!970 = !DIEnumerator(name: "AAC_CODER_TWOLOOP", value: 1)
!971 = !DIEnumerator(name: "AAC_CODER_FAST", value: 2)
!972 = !DIEnumerator(name: "AAC_CODER_NB", value: 3)
!973 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AudioObjectType", file: !974, line: 72, size: 32, align: 32, elements: !975)
!974 = !DIFile(filename: "libavcodec/mpeg4audio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!975 = !{!976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018}
!976 = !DIEnumerator(name: "AOT_NULL", value: 0)
!977 = !DIEnumerator(name: "AOT_AAC_MAIN", value: 1)
!978 = !DIEnumerator(name: "AOT_AAC_LC", value: 2)
!979 = !DIEnumerator(name: "AOT_AAC_SSR", value: 3)
!980 = !DIEnumerator(name: "AOT_AAC_LTP", value: 4)
!981 = !DIEnumerator(name: "AOT_SBR", value: 5)
!982 = !DIEnumerator(name: "AOT_AAC_SCALABLE", value: 6)
!983 = !DIEnumerator(name: "AOT_TWINVQ", value: 7)
!984 = !DIEnumerator(name: "AOT_CELP", value: 8)
!985 = !DIEnumerator(name: "AOT_HVXC", value: 9)
!986 = !DIEnumerator(name: "AOT_TTSI", value: 12)
!987 = !DIEnumerator(name: "AOT_MAINSYNTH", value: 13)
!988 = !DIEnumerator(name: "AOT_WAVESYNTH", value: 14)
!989 = !DIEnumerator(name: "AOT_MIDI", value: 15)
!990 = !DIEnumerator(name: "AOT_SAFX", value: 16)
!991 = !DIEnumerator(name: "AOT_ER_AAC_LC", value: 17)
!992 = !DIEnumerator(name: "AOT_ER_AAC_LTP", value: 19)
!993 = !DIEnumerator(name: "AOT_ER_AAC_SCALABLE", value: 20)
!994 = !DIEnumerator(name: "AOT_ER_TWINVQ", value: 21)
!995 = !DIEnumerator(name: "AOT_ER_BSAC", value: 22)
!996 = !DIEnumerator(name: "AOT_ER_AAC_LD", value: 23)
!997 = !DIEnumerator(name: "AOT_ER_CELP", value: 24)
!998 = !DIEnumerator(name: "AOT_ER_HVXC", value: 25)
!999 = !DIEnumerator(name: "AOT_ER_HILN", value: 26)
!1000 = !DIEnumerator(name: "AOT_ER_PARAM", value: 27)
!1001 = !DIEnumerator(name: "AOT_SSC", value: 28)
!1002 = !DIEnumerator(name: "AOT_PS", value: 29)
!1003 = !DIEnumerator(name: "AOT_SURROUND", value: 30)
!1004 = !DIEnumerator(name: "AOT_ESCAPE", value: 31)
!1005 = !DIEnumerator(name: "AOT_L1", value: 32)
!1006 = !DIEnumerator(name: "AOT_L2", value: 33)
!1007 = !DIEnumerator(name: "AOT_L3", value: 34)
!1008 = !DIEnumerator(name: "AOT_DST", value: 35)
!1009 = !DIEnumerator(name: "AOT_ALS", value: 36)
!1010 = !DIEnumerator(name: "AOT_SLS", value: 37)
!1011 = !DIEnumerator(name: "AOT_SLS_NON_CORE", value: 38)
!1012 = !DIEnumerator(name: "AOT_ER_AAC_ELD", value: 39)
!1013 = !DIEnumerator(name: "AOT_SMR_SIMPLE", value: 40)
!1014 = !DIEnumerator(name: "AOT_SMR_MAIN", value: 41)
!1015 = !DIEnumerator(name: "AOT_USAC_NOSBR", value: 42)
!1016 = !DIEnumerator(name: "AOT_SAOC", value: 43)
!1017 = !DIEnumerator(name: "AOT_LD_SURROUND", value: 44)
!1018 = !DIEnumerator(name: "AOT_USAC", value: 45)
!1019 = !{!1020, !1023, !1024, !1025, !1031, !1032}
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1021, line: 40, baseType: !1022)
!1021 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1022 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1023 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1024 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64, align: 64)
!1026 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1027, line: 221, size: 32, align: 8, elements: !1028)
!1027 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1028 = !{!1029}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1026, file: !1027, line: 221, baseType: !1030, size: 32, align: 32)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1021, line: 51, baseType: !1024)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1032 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1033 = !{!1034, !1793, !1798, !1799, !1805, !1809, !1814, !1834, !1837, !1841, !1843, !1846, !1854}
!1034 = distinct !DIGlobalVariable(name: "ff_aac_encoder", scope: !0, file: !1035, line: 1149, type: !1036, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_aac_encoder)
!1035 = !DIFile(filename: "libavcodec/aacenc.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !107, line: 3610, baseType: !1037)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !107, line: 3468, size: 1984, align: 64, elements: !1038)
!1038 = !{!1039, !1043, !1044, !1045, !1046, !1047, !1056, !1059, !1062, !1065, !1070, !1073, !1146, !1154, !1155, !1156, !1158, !1708, !1714, !1722, !1726, !1727, !1764, !1768, !1772, !1773, !1777, !1781, !1782, !1786, !1787, !1788}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1037, file: !107, line: 3475, baseType: !1040, size: 64, align: 64)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64, align: 64)
!1041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1042 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1037, file: !107, line: 3480, baseType: !1040, size: 64, align: 64, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1037, file: !107, line: 3481, baseType: !96, size: 32, align: 32, offset: 128)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1037, file: !107, line: 3482, baseType: !106, size: 32, align: 32, offset: 160)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1037, file: !107, line: 3487, baseType: !1023, size: 32, align: 32, offset: 192)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1037, file: !107, line: 3488, baseType: !1048, size: 64, align: 64, offset: 256)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64, align: 64)
!1049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1050)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1051, line: 61, baseType: !1052)
!1051 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1051, line: 58, size: 64, align: 32, elements: !1053)
!1053 = !{!1054, !1055}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1052, file: !1051, line: 59, baseType: !1023, size: 32, align: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1052, file: !1051, line: 60, baseType: !1023, size: 32, align: 32, offset: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1037, file: !107, line: 3489, baseType: !1057, size: 64, align: 64, offset: 320)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64, align: 64)
!1058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !566)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1037, file: !107, line: 3490, baseType: !1060, size: 64, align: 64, offset: 384)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64, align: 64)
!1061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1037, file: !107, line: 3491, baseType: !1063, size: 64, align: 64, offset: 448)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !766)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1037, file: !107, line: 3492, baseType: !1066, size: 64, align: 64, offset: 512)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64, align: 64)
!1067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1021, line: 55, baseType: !1069)
!1069 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1037, file: !107, line: 3493, baseType: !1071, size: 8, align: 8, offset: 576)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1021, line: 48, baseType: !1072)
!1072 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1037, file: !107, line: 3494, baseType: !1074, size: 64, align: 64, offset: 640)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64, align: 64)
!1075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !26, line: 143, baseType: !1077)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !26, line: 67, size: 640, align: 64, elements: !1078)
!1078 = !{!1079, !1080, !1084, !1105, !1106, !1107, !1108, !1112, !1118, !1120, !1124}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1077, file: !26, line: 72, baseType: !1040, size: 64, align: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1077, file: !26, line: 78, baseType: !1081, size: 64, align: 64, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64, align: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!1040, !1031}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1077, file: !26, line: 85, baseType: !1085, size: 64, align: 64, offset: 128)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64, align: 64)
!1086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1087)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 246, size: 512, align: 64, elements: !1088)
!1088 = !{!1089, !1090, !1091, !1092, !1093, !1101, !1102, !1103, !1104}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1087, file: !4, line: 247, baseType: !1040, size: 64, align: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1087, file: !4, line: 253, baseType: !1040, size: 64, align: 64, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1087, file: !4, line: 259, baseType: !1023, size: 32, align: 32, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1087, file: !4, line: 260, baseType: !3, size: 32, align: 32, offset: 160)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1087, file: !4, line: 271, baseType: !1094, size: 64, align: 64, offset: 192)
!1094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1087, file: !4, line: 265, size: 64, align: 64, elements: !1095)
!1095 = !{!1096, !1097, !1099, !1100}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1094, file: !4, line: 266, baseType: !1020, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1094, file: !4, line: 267, baseType: !1098, size: 64, align: 64)
!1098 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1094, file: !4, line: 268, baseType: !1040, size: 64, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1094, file: !4, line: 270, baseType: !1050, size: 64, align: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1087, file: !4, line: 272, baseType: !1098, size: 64, align: 64, offset: 256)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1087, file: !4, line: 273, baseType: !1098, size: 64, align: 64, offset: 320)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1087, file: !4, line: 275, baseType: !1023, size: 32, align: 32, offset: 384)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1087, file: !4, line: 300, baseType: !1040, size: 64, align: 64, offset: 448)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1077, file: !26, line: 93, baseType: !1023, size: 32, align: 32, offset: 192)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1077, file: !26, line: 99, baseType: !1023, size: 32, align: 32, offset: 224)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1077, file: !26, line: 108, baseType: !1023, size: 32, align: 32, offset: 256)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1077, file: !26, line: 113, baseType: !1109, size: 64, align: 64, offset: 320)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64, align: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!1031, !1031, !1031}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1077, file: !26, line: 123, baseType: !1113, size: 64, align: 64, offset: 384)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64, align: 64)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!1116, !1116}
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64, align: 64)
!1117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1077)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1077, file: !26, line: 130, baseType: !1119, size: 32, align: 32, offset: 448)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !26, line: 48, baseType: !25)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1077, file: !26, line: 136, baseType: !1121, size: 64, align: 64, offset: 512)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64, align: 64)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!1119, !1031}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1077, file: !26, line: 142, baseType: !1125, size: 64, align: 64, offset: 576)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64, align: 64)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!1023, !1128, !1031, !1040, !1023}
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64, align: 64)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64, align: 64)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 329, size: 128, align: 64, elements: !1131)
!1131 = !{!1132, !1144, !1145}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1130, file: !4, line: 360, baseType: !1133, size: 64, align: 64)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64, align: 64)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64, align: 64)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !4, line: 324, baseType: !1136)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !4, line: 306, size: 384, align: 64, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1141, !1142, !1143}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1136, file: !4, line: 307, baseType: !1040, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1136, file: !4, line: 313, baseType: !1098, size: 64, align: 64, offset: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1136, file: !4, line: 313, baseType: !1098, size: 64, align: 64, offset: 128)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1136, file: !4, line: 318, baseType: !1098, size: 64, align: 64, offset: 192)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1136, file: !4, line: 318, baseType: !1098, size: 64, align: 64, offset: 256)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1136, file: !4, line: 323, baseType: !1023, size: 32, align: 32, offset: 320)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1130, file: !4, line: 364, baseType: !1023, size: 32, align: 32, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1130, file: !4, line: 368, baseType: !1023, size: 32, align: 32, offset: 96)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1037, file: !107, line: 3495, baseType: !1147, size: 64, align: 64, offset: 704)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64, align: 64)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1149)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !107, line: 3404, baseType: !1150)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !107, line: 3401, size: 128, align: 64, elements: !1151)
!1151 = !{!1152, !1153}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1150, file: !107, line: 3402, baseType: !1023, size: 32, align: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1150, file: !107, line: 3403, baseType: !1040, size: 64, align: 64, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1037, file: !107, line: 3507, baseType: !1040, size: 64, align: 64, offset: 768)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1037, file: !107, line: 3516, baseType: !1023, size: 32, align: 32, offset: 832)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1037, file: !107, line: 3517, baseType: !1157, size: 64, align: 64, offset: 896)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64, align: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1037, file: !107, line: 3527, baseType: !1159, size: 64, align: 64, offset: 960)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64, align: 64)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!1023, !1162}
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64, align: 64)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !107, line: 3360, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !107, line: 1556, size: 8448, align: 64, elements: !1165)
!1165 = !{!1166, !1167, !1168, !1169, !1172, !1173, !1174, !1175, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1455, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1646, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1164, file: !107, line: 1561, baseType: !1074, size: 64, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1164, file: !107, line: 1562, baseType: !1023, size: 32, align: 32, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1164, file: !107, line: 1564, baseType: !96, size: 32, align: 32, offset: 96)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1164, file: !107, line: 1565, baseType: !1170, size: 64, align: 64, offset: 128)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64, align: 64)
!1171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1164, file: !107, line: 1566, baseType: !106, size: 32, align: 32, offset: 192)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1164, file: !107, line: 1581, baseType: !1024, size: 32, align: 32, offset: 224)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1164, file: !107, line: 1583, baseType: !1031, size: 64, align: 64, offset: 256)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1164, file: !107, line: 1591, baseType: !1176, size: 64, align: 64, offset: 320)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64, align: 64)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1178, line: 129, size: 1664, align: 64, elements: !1179)
!1178 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1179 = !{!1180, !1181, !1182, !1183, !1281, !1302, !1303, !1332, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1177, file: !1178, line: 136, baseType: !1023, size: 32, align: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1177, file: !1178, line: 151, baseType: !1023, size: 32, align: 32, offset: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1177, file: !1178, line: 157, baseType: !1023, size: 32, align: 32, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1177, file: !1178, line: 159, baseType: !1184, size: 64, align: 64, offset: 128)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64, align: 64)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !830, line: 646, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !830, line: 268, size: 4288, align: 64, elements: !1187)
!1187 = !{!1188, !1193, !1195, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1233, !1235, !1236, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1269, !1270, !1271, !1272, !1273, !1274, !1277, !1278, !1279, !1280}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1186, file: !830, line: 282, baseType: !1189, size: 512, align: 64)
!1189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1190, size: 512, align: 64, elements: !1191)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64, align: 64)
!1191 = !{!1192}
!1192 = !DISubrange(count: 8)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1186, file: !830, line: 299, baseType: !1194, size: 256, align: 32, offset: 512)
!1194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 256, align: 32, elements: !1191)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1186, file: !830, line: 315, baseType: !1196, size: 64, align: 64, offset: 768)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1186, file: !830, line: 326, baseType: !1023, size: 32, align: 32, offset: 832)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1186, file: !830, line: 326, baseType: !1023, size: 32, align: 32, offset: 864)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1186, file: !830, line: 334, baseType: !1023, size: 32, align: 32, offset: 896)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1186, file: !830, line: 341, baseType: !1023, size: 32, align: 32, offset: 928)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1186, file: !830, line: 346, baseType: !1023, size: 32, align: 32, offset: 960)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1186, file: !830, line: 351, baseType: !819, size: 32, align: 32, offset: 992)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1186, file: !830, line: 356, baseType: !1050, size: 64, align: 32, offset: 1024)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1186, file: !830, line: 361, baseType: !1020, size: 64, align: 64, offset: 1088)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1186, file: !830, line: 369, baseType: !1020, size: 64, align: 64, offset: 1152)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1186, file: !830, line: 377, baseType: !1020, size: 64, align: 64, offset: 1216)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1186, file: !830, line: 382, baseType: !1023, size: 32, align: 32, offset: 1280)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1186, file: !830, line: 386, baseType: !1023, size: 32, align: 32, offset: 1312)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1186, file: !830, line: 391, baseType: !1023, size: 32, align: 32, offset: 1344)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1186, file: !830, line: 396, baseType: !1031, size: 64, align: 64, offset: 1408)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1186, file: !830, line: 403, baseType: !1212, size: 512, align: 64, offset: 1472)
!1212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1068, size: 512, align: 64, elements: !1191)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1186, file: !830, line: 410, baseType: !1023, size: 32, align: 32, offset: 1984)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1186, file: !830, line: 415, baseType: !1023, size: 32, align: 32, offset: 2016)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1186, file: !830, line: 420, baseType: !1023, size: 32, align: 32, offset: 2048)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1186, file: !830, line: 425, baseType: !1023, size: 32, align: 32, offset: 2080)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1186, file: !830, line: 435, baseType: !1020, size: 64, align: 64, offset: 2112)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1186, file: !830, line: 440, baseType: !1023, size: 32, align: 32, offset: 2176)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1186, file: !830, line: 445, baseType: !1068, size: 64, align: 64, offset: 2240)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1186, file: !830, line: 459, baseType: !1221, size: 512, align: 64, offset: 2304)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1222, size: 512, align: 64, elements: !1191)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1224, line: 94, baseType: !1225)
!1224 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1224, line: 81, size: 192, align: 64, elements: !1226)
!1226 = !{!1227, !1231, !1232}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1225, file: !1224, line: 82, baseType: !1228, size: 64, align: 64)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64, align: 64)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1224, line: 73, baseType: !1230)
!1230 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1224, line: 73, flags: DIFlagFwdDecl)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1225, file: !1224, line: 89, baseType: !1190, size: 64, align: 64, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1225, file: !1224, line: 93, baseType: !1023, size: 32, align: 32, offset: 128)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1186, file: !830, line: 473, baseType: !1234, size: 64, align: 64, offset: 2816)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64, align: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1186, file: !830, line: 477, baseType: !1023, size: 32, align: 32, offset: 2880)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1186, file: !830, line: 479, baseType: !1237, size: 64, align: 64, offset: 2944)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64, align: 64)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64, align: 64)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !830, line: 207, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !830, line: 201, size: 320, align: 64, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245, !1250}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1240, file: !830, line: 202, baseType: !829, size: 32, align: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1240, file: !830, line: 203, baseType: !1190, size: 64, align: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1240, file: !830, line: 204, baseType: !1023, size: 32, align: 32, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1240, file: !830, line: 205, baseType: !1246, size: 64, align: 64, offset: 192)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64, align: 64)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1248, line: 86, baseType: !1249)
!1248 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1249 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1248, line: 86, flags: DIFlagFwdDecl)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1240, file: !830, line: 206, baseType: !1222, size: 64, align: 64, offset: 256)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1186, file: !830, line: 480, baseType: !1023, size: 32, align: 32, offset: 3008)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1186, file: !830, line: 505, baseType: !1023, size: 32, align: 32, offset: 3040)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1186, file: !830, line: 512, baseType: !853, size: 32, align: 32, offset: 3072)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1186, file: !830, line: 514, baseType: !859, size: 32, align: 32, offset: 3104)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1186, file: !830, line: 516, baseType: !877, size: 32, align: 32, offset: 3136)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1186, file: !830, line: 523, baseType: !901, size: 32, align: 32, offset: 3168)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1186, file: !830, line: 525, baseType: !920, size: 32, align: 32, offset: 3200)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1186, file: !830, line: 532, baseType: !1020, size: 64, align: 64, offset: 3264)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1186, file: !830, line: 539, baseType: !1020, size: 64, align: 64, offset: 3328)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1186, file: !830, line: 547, baseType: !1020, size: 64, align: 64, offset: 3392)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1186, file: !830, line: 554, baseType: !1246, size: 64, align: 64, offset: 3456)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1186, file: !830, line: 563, baseType: !1023, size: 32, align: 32, offset: 3520)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1186, file: !830, line: 572, baseType: !1023, size: 32, align: 32, offset: 3552)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1186, file: !830, line: 581, baseType: !1023, size: 32, align: 32, offset: 3584)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1186, file: !830, line: 588, baseType: !1266, size: 64, align: 64, offset: 3648)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64, align: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1021, line: 36, baseType: !1268)
!1268 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1186, file: !830, line: 593, baseType: !1023, size: 32, align: 32, offset: 3712)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1186, file: !830, line: 596, baseType: !1023, size: 32, align: 32, offset: 3744)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1186, file: !830, line: 599, baseType: !1222, size: 64, align: 64, offset: 3776)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1186, file: !830, line: 605, baseType: !1222, size: 64, align: 64, offset: 3840)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1186, file: !830, line: 616, baseType: !1222, size: 64, align: 64, offset: 3904)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1186, file: !830, line: 626, baseType: !1275, size: 64, align: 64, offset: 3968)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1276, line: 216, baseType: !1069)
!1276 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1186, file: !830, line: 627, baseType: !1275, size: 64, align: 64, offset: 4032)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1186, file: !830, line: 628, baseType: !1275, size: 64, align: 64, offset: 4096)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1186, file: !830, line: 629, baseType: !1275, size: 64, align: 64, offset: 4160)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1186, file: !830, line: 645, baseType: !1222, size: 64, align: 64, offset: 4224)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1177, file: !1178, line: 161, baseType: !1282, size: 64, align: 64, offset: 192)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64, align: 64)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1178, line: 117, baseType: !1284)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1178, line: 100, size: 832, align: 64, elements: !1285)
!1285 = !{!1286, !1293, !1294, !1295, !1296, !1297, !1299, !1300, !1301}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1284, file: !1178, line: 105, baseType: !1287, size: 256, align: 64)
!1287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1288, size: 256, align: 64, elements: !1291)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64, align: 64)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1224, line: 238, baseType: !1290)
!1290 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1224, line: 238, flags: DIFlagFwdDecl)
!1291 = !{!1292}
!1292 = !DISubrange(count: 4)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1284, file: !1178, line: 110, baseType: !1023, size: 32, align: 32, offset: 256)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1284, file: !1178, line: 111, baseType: !1023, size: 32, align: 32, offset: 288)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1284, file: !1178, line: 111, baseType: !1023, size: 32, align: 32, offset: 320)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1284, file: !1178, line: 112, baseType: !1194, size: 256, align: 32, offset: 352)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1284, file: !1178, line: 113, baseType: !1298, size: 128, align: 32, offset: 608)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 128, align: 32, elements: !1291)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1284, file: !1178, line: 114, baseType: !1023, size: 32, align: 32, offset: 736)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1284, file: !1178, line: 115, baseType: !1023, size: 32, align: 32, offset: 768)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1284, file: !1178, line: 116, baseType: !1023, size: 32, align: 32, offset: 800)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1177, file: !1178, line: 163, baseType: !1031, size: 64, align: 64, offset: 256)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1177, file: !1178, line: 165, baseType: !1304, size: 128, align: 64, offset: 320)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1178, line: 122, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1178, line: 119, size: 128, align: 64, elements: !1306)
!1306 = !{!1307, !1331}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1305, file: !1178, line: 120, baseType: !1308, size: 64, align: 64)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64, align: 64)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !107, line: 1499, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !107, line: 1445, size: 704, align: 64, elements: !1311)
!1311 = !{!1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1327, !1328, !1329, !1330}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1310, file: !107, line: 1451, baseType: !1222, size: 64, align: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1310, file: !107, line: 1461, baseType: !1020, size: 64, align: 64, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1310, file: !107, line: 1467, baseType: !1020, size: 64, align: 64, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1310, file: !107, line: 1468, baseType: !1190, size: 64, align: 64, offset: 192)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1310, file: !107, line: 1469, baseType: !1023, size: 32, align: 32, offset: 256)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1310, file: !107, line: 1470, baseType: !1023, size: 32, align: 32, offset: 288)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1310, file: !107, line: 1474, baseType: !1023, size: 32, align: 32, offset: 320)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1310, file: !107, line: 1479, baseType: !1320, size: 64, align: 64, offset: 384)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64, align: 64)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !107, line: 1415, baseType: !1322)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !107, line: 1411, size: 128, align: 64, elements: !1323)
!1323 = !{!1324, !1325, !1326}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1322, file: !107, line: 1412, baseType: !1190, size: 64, align: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1322, file: !107, line: 1413, baseType: !1023, size: 32, align: 32, offset: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1322, file: !107, line: 1414, baseType: !789, size: 32, align: 32, offset: 96)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1310, file: !107, line: 1480, baseType: !1023, size: 32, align: 32, offset: 448)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1310, file: !107, line: 1486, baseType: !1020, size: 64, align: 64, offset: 512)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1310, file: !107, line: 1488, baseType: !1020, size: 64, align: 64, offset: 576)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1310, file: !107, line: 1497, baseType: !1020, size: 64, align: 64, offset: 640)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1305, file: !1178, line: 121, baseType: !1184, size: 64, align: 64, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1177, file: !1178, line: 166, baseType: !1333, size: 128, align: 64, offset: 448)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1178, line: 127, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1178, line: 124, size: 128, align: 64, elements: !1335)
!1335 = !{!1336, !1409}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1334, file: !1178, line: 125, baseType: !1337, size: 64, align: 64)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64, align: 64)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64, align: 64)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !107, line: 5794, baseType: !1340)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !107, line: 5747, size: 512, align: 64, elements: !1341)
!1341 = !{!1342, !1343, !1367, !1371, !1372, !1406, !1407, !1408}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1340, file: !107, line: 5751, baseType: !1074, size: 64, align: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1340, file: !107, line: 5756, baseType: !1344, size: 64, align: 64, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64, align: 64)
!1345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1346)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !107, line: 5796, size: 512, align: 64, elements: !1347)
!1347 = !{!1348, !1349, !1352, !1353, !1354, !1358, !1362, !1366}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1346, file: !107, line: 5797, baseType: !1040, size: 64, align: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1346, file: !107, line: 5804, baseType: !1350, size: 64, align: 64, offset: 64)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64, align: 64)
!1351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !106)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1346, file: !107, line: 5815, baseType: !1074, size: 64, align: 64, offset: 128)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1346, file: !107, line: 5825, baseType: !1023, size: 32, align: 32, offset: 192)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1346, file: !107, line: 5826, baseType: !1355, size: 64, align: 64, offset: 256)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64, align: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!1023, !1338}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1346, file: !107, line: 5827, baseType: !1359, size: 64, align: 64, offset: 320)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64, align: 64)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!1023, !1338, !1308}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1346, file: !107, line: 5828, baseType: !1363, size: 64, align: 64, offset: 384)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64, align: 64)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{null, !1338}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1346, file: !107, line: 5829, baseType: !1363, size: 64, align: 64, offset: 448)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1340, file: !107, line: 5762, baseType: !1368, size: 64, align: 64, offset: 128)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64, align: 64)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !107, line: 5735, baseType: !1370)
!1370 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !107, line: 5735, flags: DIFlagFwdDecl)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1340, file: !107, line: 5768, baseType: !1031, size: 64, align: 64, offset: 192)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1340, file: !107, line: 5775, baseType: !1373, size: 64, align: 64, offset: 256)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !107, line: 4085, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !107, line: 3936, size: 1152, align: 64, elements: !1376)
!1376 = !{!1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1375, file: !107, line: 3940, baseType: !96, size: 32, align: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1375, file: !107, line: 3944, baseType: !106, size: 32, align: 32, offset: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1375, file: !107, line: 3948, baseType: !1030, size: 32, align: 32, offset: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1375, file: !107, line: 3958, baseType: !1190, size: 64, align: 64, offset: 128)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1375, file: !107, line: 3962, baseType: !1023, size: 32, align: 32, offset: 192)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1375, file: !107, line: 3968, baseType: !1023, size: 32, align: 32, offset: 224)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1375, file: !107, line: 3973, baseType: !1020, size: 64, align: 64, offset: 256)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1375, file: !107, line: 3986, baseType: !1023, size: 32, align: 32, offset: 320)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1375, file: !107, line: 3999, baseType: !1023, size: 32, align: 32, offset: 352)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1375, file: !107, line: 4004, baseType: !1023, size: 32, align: 32, offset: 384)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1375, file: !107, line: 4005, baseType: !1023, size: 32, align: 32, offset: 416)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1375, file: !107, line: 4010, baseType: !1023, size: 32, align: 32, offset: 448)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1375, file: !107, line: 4011, baseType: !1023, size: 32, align: 32, offset: 480)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1375, file: !107, line: 4020, baseType: !1050, size: 64, align: 32, offset: 512)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1375, file: !107, line: 4025, baseType: !930, size: 32, align: 32, offset: 576)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1375, file: !107, line: 4030, baseType: !853, size: 32, align: 32, offset: 608)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1375, file: !107, line: 4031, baseType: !859, size: 32, align: 32, offset: 640)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1375, file: !107, line: 4032, baseType: !877, size: 32, align: 32, offset: 672)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1375, file: !107, line: 4033, baseType: !901, size: 32, align: 32, offset: 704)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1375, file: !107, line: 4034, baseType: !920, size: 32, align: 32, offset: 736)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1375, file: !107, line: 4039, baseType: !1023, size: 32, align: 32, offset: 768)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1375, file: !107, line: 4046, baseType: !1068, size: 64, align: 64, offset: 832)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1375, file: !107, line: 4050, baseType: !1023, size: 32, align: 32, offset: 896)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1375, file: !107, line: 4054, baseType: !1023, size: 32, align: 32, offset: 928)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1375, file: !107, line: 4061, baseType: !1023, size: 32, align: 32, offset: 960)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1375, file: !107, line: 4065, baseType: !1023, size: 32, align: 32, offset: 992)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1375, file: !107, line: 4073, baseType: !1023, size: 32, align: 32, offset: 1024)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1375, file: !107, line: 4080, baseType: !1023, size: 32, align: 32, offset: 1056)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1375, file: !107, line: 4084, baseType: !1023, size: 32, align: 32, offset: 1088)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1340, file: !107, line: 5781, baseType: !1373, size: 64, align: 64, offset: 320)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1340, file: !107, line: 5787, baseType: !1050, size: 64, align: 32, offset: 384)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1340, file: !107, line: 5793, baseType: !1050, size: 64, align: 32, offset: 448)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1334, file: !1178, line: 126, baseType: !1023, size: 32, align: 32, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1177, file: !1178, line: 172, baseType: !1308, size: 64, align: 64, offset: 576)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1177, file: !1178, line: 177, baseType: !1190, size: 64, align: 64, offset: 640)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1177, file: !1178, line: 178, baseType: !1024, size: 32, align: 32, offset: 704)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1177, file: !1178, line: 180, baseType: !1031, size: 64, align: 64, offset: 768)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1177, file: !1178, line: 185, baseType: !1023, size: 32, align: 32, offset: 832)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1177, file: !1178, line: 190, baseType: !1031, size: 64, align: 64, offset: 896)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1177, file: !1178, line: 195, baseType: !1023, size: 32, align: 32, offset: 960)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1177, file: !1178, line: 200, baseType: !1308, size: 64, align: 64, offset: 1024)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1177, file: !1178, line: 201, baseType: !1023, size: 32, align: 32, offset: 1088)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1177, file: !1178, line: 202, baseType: !1184, size: 64, align: 64, offset: 1152)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1177, file: !1178, line: 203, baseType: !1023, size: 32, align: 32, offset: 1216)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1177, file: !1178, line: 205, baseType: !1023, size: 32, align: 32, offset: 1248)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1177, file: !1178, line: 206, baseType: !1023, size: 32, align: 32, offset: 1280)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1177, file: !1178, line: 209, baseType: !1275, size: 64, align: 64, offset: 1344)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1177, file: !1178, line: 212, baseType: !1275, size: 64, align: 64, offset: 1408)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1177, file: !1178, line: 213, baseType: !1184, size: 64, align: 64, offset: 1472)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1177, file: !1178, line: 215, baseType: !1023, size: 32, align: 32, offset: 1536)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1177, file: !1178, line: 217, baseType: !1023, size: 32, align: 32, offset: 1568)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1177, file: !1178, line: 220, baseType: !1023, size: 32, align: 32, offset: 1600)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1164, file: !107, line: 1598, baseType: !1031, size: 64, align: 64, offset: 384)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1164, file: !107, line: 1606, baseType: !1020, size: 64, align: 64, offset: 448)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1164, file: !107, line: 1614, baseType: !1023, size: 32, align: 32, offset: 512)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1164, file: !107, line: 1622, baseType: !1023, size: 32, align: 32, offset: 544)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1164, file: !107, line: 1628, baseType: !1023, size: 32, align: 32, offset: 576)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1164, file: !107, line: 1636, baseType: !1023, size: 32, align: 32, offset: 608)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1164, file: !107, line: 1643, baseType: !1023, size: 32, align: 32, offset: 640)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1164, file: !107, line: 1657, baseType: !1190, size: 64, align: 64, offset: 704)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1164, file: !107, line: 1658, baseType: !1023, size: 32, align: 32, offset: 768)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1164, file: !107, line: 1679, baseType: !1050, size: 64, align: 32, offset: 800)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1164, file: !107, line: 1688, baseType: !1023, size: 32, align: 32, offset: 864)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1164, file: !107, line: 1712, baseType: !1023, size: 32, align: 32, offset: 896)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1164, file: !107, line: 1729, baseType: !1023, size: 32, align: 32, offset: 928)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1164, file: !107, line: 1729, baseType: !1023, size: 32, align: 32, offset: 960)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1164, file: !107, line: 1744, baseType: !1023, size: 32, align: 32, offset: 992)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1164, file: !107, line: 1744, baseType: !1023, size: 32, align: 32, offset: 1024)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1164, file: !107, line: 1751, baseType: !1023, size: 32, align: 32, offset: 1056)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1164, file: !107, line: 1766, baseType: !566, size: 32, align: 32, offset: 1088)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1164, file: !107, line: 1791, baseType: !1448, size: 64, align: 64, offset: 1152)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64, align: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{null, !1451, !1452, !1454, !1023, !1023, !1023}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64, align: 64)
!1453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1185)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64, align: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1164, file: !107, line: 1808, baseType: !1456, size: 64, align: 64, offset: 1216)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64, align: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!566, !1451, !1057}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1164, file: !107, line: 1816, baseType: !1023, size: 32, align: 32, offset: 1280)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1164, file: !107, line: 1825, baseType: !1032, size: 32, align: 32, offset: 1312)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1164, file: !107, line: 1830, baseType: !1023, size: 32, align: 32, offset: 1344)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1164, file: !107, line: 1838, baseType: !1032, size: 32, align: 32, offset: 1376)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1164, file: !107, line: 1846, baseType: !1023, size: 32, align: 32, offset: 1408)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1164, file: !107, line: 1851, baseType: !1023, size: 32, align: 32, offset: 1440)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1164, file: !107, line: 1861, baseType: !1032, size: 32, align: 32, offset: 1472)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1164, file: !107, line: 1868, baseType: !1032, size: 32, align: 32, offset: 1504)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1164, file: !107, line: 1875, baseType: !1032, size: 32, align: 32, offset: 1536)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1164, file: !107, line: 1882, baseType: !1032, size: 32, align: 32, offset: 1568)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1164, file: !107, line: 1889, baseType: !1032, size: 32, align: 32, offset: 1600)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1164, file: !107, line: 1896, baseType: !1032, size: 32, align: 32, offset: 1632)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1164, file: !107, line: 1903, baseType: !1032, size: 32, align: 32, offset: 1664)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1164, file: !107, line: 1910, baseType: !1023, size: 32, align: 32, offset: 1696)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1164, file: !107, line: 1915, baseType: !1023, size: 32, align: 32, offset: 1728)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1164, file: !107, line: 1926, baseType: !1454, size: 64, align: 64, offset: 1792)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1164, file: !107, line: 1935, baseType: !1050, size: 64, align: 32, offset: 1856)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1164, file: !107, line: 1942, baseType: !1023, size: 32, align: 32, offset: 1920)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1164, file: !107, line: 1948, baseType: !1023, size: 32, align: 32, offset: 1952)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1164, file: !107, line: 1954, baseType: !1023, size: 32, align: 32, offset: 1984)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1164, file: !107, line: 1960, baseType: !1023, size: 32, align: 32, offset: 2016)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1164, file: !107, line: 1984, baseType: !1023, size: 32, align: 32, offset: 2048)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1164, file: !107, line: 1991, baseType: !1023, size: 32, align: 32, offset: 2080)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1164, file: !107, line: 1996, baseType: !1023, size: 32, align: 32, offset: 2112)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1164, file: !107, line: 2004, baseType: !1023, size: 32, align: 32, offset: 2144)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1164, file: !107, line: 2011, baseType: !1023, size: 32, align: 32, offset: 2176)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1164, file: !107, line: 2018, baseType: !1023, size: 32, align: 32, offset: 2208)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1164, file: !107, line: 2027, baseType: !1023, size: 32, align: 32, offset: 2240)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1164, file: !107, line: 2034, baseType: !1023, size: 32, align: 32, offset: 2272)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1164, file: !107, line: 2044, baseType: !1023, size: 32, align: 32, offset: 2304)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1164, file: !107, line: 2054, baseType: !1490, size: 64, align: 64, offset: 2368)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1021, line: 49, baseType: !1492)
!1492 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1164, file: !107, line: 2061, baseType: !1490, size: 64, align: 64, offset: 2432)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1164, file: !107, line: 2066, baseType: !1023, size: 32, align: 32, offset: 2496)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1164, file: !107, line: 2070, baseType: !1023, size: 32, align: 32, offset: 2528)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1164, file: !107, line: 2078, baseType: !1023, size: 32, align: 32, offset: 2560)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1164, file: !107, line: 2085, baseType: !1023, size: 32, align: 32, offset: 2592)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1164, file: !107, line: 2092, baseType: !1023, size: 32, align: 32, offset: 2624)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1164, file: !107, line: 2099, baseType: !1023, size: 32, align: 32, offset: 2656)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1164, file: !107, line: 2106, baseType: !1023, size: 32, align: 32, offset: 2688)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1164, file: !107, line: 2113, baseType: !1023, size: 32, align: 32, offset: 2720)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1164, file: !107, line: 2120, baseType: !1023, size: 32, align: 32, offset: 2752)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1164, file: !107, line: 2125, baseType: !1023, size: 32, align: 32, offset: 2784)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1164, file: !107, line: 2133, baseType: !1023, size: 32, align: 32, offset: 2816)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1164, file: !107, line: 2140, baseType: !1023, size: 32, align: 32, offset: 2848)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1164, file: !107, line: 2145, baseType: !1023, size: 32, align: 32, offset: 2880)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1164, file: !107, line: 2153, baseType: !1023, size: 32, align: 32, offset: 2912)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1164, file: !107, line: 2158, baseType: !1023, size: 32, align: 32, offset: 2944)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1164, file: !107, line: 2166, baseType: !859, size: 32, align: 32, offset: 2976)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1164, file: !107, line: 2173, baseType: !877, size: 32, align: 32, offset: 3008)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1164, file: !107, line: 2180, baseType: !901, size: 32, align: 32, offset: 3040)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1164, file: !107, line: 2187, baseType: !853, size: 32, align: 32, offset: 3072)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1164, file: !107, line: 2194, baseType: !920, size: 32, align: 32, offset: 3104)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1164, file: !107, line: 2203, baseType: !1023, size: 32, align: 32, offset: 3136)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1164, file: !107, line: 2209, baseType: !930, size: 32, align: 32, offset: 3168)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1164, file: !107, line: 2212, baseType: !1023, size: 32, align: 32, offset: 3200)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1164, file: !107, line: 2213, baseType: !1023, size: 32, align: 32, offset: 3232)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1164, file: !107, line: 2220, baseType: !766, size: 32, align: 32, offset: 3264)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1164, file: !107, line: 2232, baseType: !1023, size: 32, align: 32, offset: 3296)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1164, file: !107, line: 2243, baseType: !1023, size: 32, align: 32, offset: 3328)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1164, file: !107, line: 2249, baseType: !1023, size: 32, align: 32, offset: 3360)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1164, file: !107, line: 2256, baseType: !1023, size: 32, align: 32, offset: 3392)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1164, file: !107, line: 2263, baseType: !1068, size: 64, align: 64, offset: 3456)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1164, file: !107, line: 2270, baseType: !1068, size: 64, align: 64, offset: 3520)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1164, file: !107, line: 2277, baseType: !938, size: 32, align: 32, offset: 3584)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1164, file: !107, line: 2285, baseType: !766, size: 32, align: 32, offset: 3616)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1164, file: !107, line: 2367, baseType: !1528, size: 64, align: 64, offset: 3648)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64, align: 64)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{!1023, !1451, !1184, !1023}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1164, file: !107, line: 2383, baseType: !1023, size: 32, align: 32, offset: 3712)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1164, file: !107, line: 2386, baseType: !1032, size: 32, align: 32, offset: 3744)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1164, file: !107, line: 2387, baseType: !1032, size: 32, align: 32, offset: 3776)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1164, file: !107, line: 2394, baseType: !1023, size: 32, align: 32, offset: 3808)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1164, file: !107, line: 2401, baseType: !1023, size: 32, align: 32, offset: 3840)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1164, file: !107, line: 2408, baseType: !1023, size: 32, align: 32, offset: 3872)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1164, file: !107, line: 2415, baseType: !1023, size: 32, align: 32, offset: 3904)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1164, file: !107, line: 2422, baseType: !1023, size: 32, align: 32, offset: 3936)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1164, file: !107, line: 2423, baseType: !1540, size: 64, align: 64, offset: 3968)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64, align: 64)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !107, line: 831, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !107, line: 826, size: 128, align: 32, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1542, file: !107, line: 827, baseType: !1023, size: 32, align: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1542, file: !107, line: 828, baseType: !1023, size: 32, align: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1542, file: !107, line: 829, baseType: !1023, size: 32, align: 32, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1542, file: !107, line: 830, baseType: !1032, size: 32, align: 32, offset: 96)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1164, file: !107, line: 2430, baseType: !1020, size: 64, align: 64, offset: 4032)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1164, file: !107, line: 2437, baseType: !1020, size: 64, align: 64, offset: 4096)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1164, file: !107, line: 2444, baseType: !1032, size: 32, align: 32, offset: 4160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1164, file: !107, line: 2451, baseType: !1032, size: 32, align: 32, offset: 4192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1164, file: !107, line: 2458, baseType: !1023, size: 32, align: 32, offset: 4224)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1164, file: !107, line: 2469, baseType: !1023, size: 32, align: 32, offset: 4256)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1164, file: !107, line: 2475, baseType: !1023, size: 32, align: 32, offset: 4288)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1164, file: !107, line: 2481, baseType: !1023, size: 32, align: 32, offset: 4320)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1164, file: !107, line: 2485, baseType: !1023, size: 32, align: 32, offset: 4352)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1164, file: !107, line: 2489, baseType: !1023, size: 32, align: 32, offset: 4384)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1164, file: !107, line: 2493, baseType: !1023, size: 32, align: 32, offset: 4416)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1164, file: !107, line: 2501, baseType: !1023, size: 32, align: 32, offset: 4448)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1164, file: !107, line: 2506, baseType: !1023, size: 32, align: 32, offset: 4480)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1164, file: !107, line: 2510, baseType: !1023, size: 32, align: 32, offset: 4512)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1164, file: !107, line: 2514, baseType: !1020, size: 64, align: 64, offset: 4544)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1164, file: !107, line: 2528, baseType: !1564, size: 64, align: 64, offset: 4608)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64, align: 64)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{null, !1451, !1031, !1023, !1023}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1164, file: !107, line: 2534, baseType: !1023, size: 32, align: 32, offset: 4672)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1164, file: !107, line: 2545, baseType: !1023, size: 32, align: 32, offset: 4704)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1164, file: !107, line: 2547, baseType: !1023, size: 32, align: 32, offset: 4736)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1164, file: !107, line: 2549, baseType: !1023, size: 32, align: 32, offset: 4768)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1164, file: !107, line: 2551, baseType: !1023, size: 32, align: 32, offset: 4800)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1164, file: !107, line: 2553, baseType: !1023, size: 32, align: 32, offset: 4832)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1164, file: !107, line: 2555, baseType: !1023, size: 32, align: 32, offset: 4864)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1164, file: !107, line: 2557, baseType: !1023, size: 32, align: 32, offset: 4896)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1164, file: !107, line: 2559, baseType: !1023, size: 32, align: 32, offset: 4928)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1164, file: !107, line: 2563, baseType: !1023, size: 32, align: 32, offset: 4960)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1164, file: !107, line: 2571, baseType: !1578, size: 64, align: 64, offset: 4992)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1164, file: !107, line: 2579, baseType: !1578, size: 64, align: 64, offset: 5056)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1164, file: !107, line: 2586, baseType: !1023, size: 32, align: 32, offset: 5120)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1164, file: !107, line: 2615, baseType: !1023, size: 32, align: 32, offset: 5152)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1164, file: !107, line: 2627, baseType: !1023, size: 32, align: 32, offset: 5184)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1164, file: !107, line: 2637, baseType: !1023, size: 32, align: 32, offset: 5216)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1164, file: !107, line: 2681, baseType: !1023, size: 32, align: 32, offset: 5248)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1164, file: !107, line: 2709, baseType: !1020, size: 64, align: 64, offset: 5312)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1164, file: !107, line: 2716, baseType: !1587, size: 64, align: 64, offset: 5376)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64, align: 64)
!1588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1589)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !107, line: 3636, size: 896, align: 64, elements: !1590)
!1590 = !{!1591, !1592, !1593, !1594, !1595, !1596, !1600, !1606, !1610, !1611, !1612, !1613, !1619, !1620, !1621, !1622, !1623}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1589, file: !107, line: 3642, baseType: !1040, size: 64, align: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1589, file: !107, line: 3649, baseType: !96, size: 32, align: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1589, file: !107, line: 3656, baseType: !106, size: 32, align: 32, offset: 96)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1589, file: !107, line: 3663, baseType: !566, size: 32, align: 32, offset: 128)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1589, file: !107, line: 3669, baseType: !1023, size: 32, align: 32, offset: 160)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1589, file: !107, line: 3682, baseType: !1597, size: 64, align: 64, offset: 192)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64, align: 64)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!1023, !1162, !1184}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1589, file: !107, line: 3698, baseType: !1601, size: 64, align: 64, offset: 256)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64, align: 64)
!1602 = !DISubroutineType(types: !1603)
!1603 = !{!1023, !1162, !1604, !1030}
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64, align: 64)
!1605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1071)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1589, file: !107, line: 3712, baseType: !1607, size: 64, align: 64, offset: 320)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64, align: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!1023, !1162, !1023, !1604, !1030}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1589, file: !107, line: 3726, baseType: !1601, size: 64, align: 64, offset: 384)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1589, file: !107, line: 3737, baseType: !1159, size: 64, align: 64, offset: 448)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1589, file: !107, line: 3746, baseType: !1023, size: 32, align: 32, offset: 512)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1589, file: !107, line: 3757, baseType: !1614, size: 64, align: 64, offset: 576)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64, align: 64)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{null, !1617}
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64, align: 64)
!1618 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !107, line: 3617, flags: DIFlagFwdDecl)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1589, file: !107, line: 3766, baseType: !1159, size: 64, align: 64, offset: 640)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1589, file: !107, line: 3774, baseType: !1159, size: 64, align: 64, offset: 704)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1589, file: !107, line: 3780, baseType: !1023, size: 32, align: 32, offset: 768)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1589, file: !107, line: 3785, baseType: !1023, size: 32, align: 32, offset: 800)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1589, file: !107, line: 3795, baseType: !1624, size: 64, align: 64, offset: 832)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64, align: 64)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!1023, !1162, !1222}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1164, file: !107, line: 2728, baseType: !1031, size: 64, align: 64, offset: 5440)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1164, file: !107, line: 2735, baseType: !1212, size: 512, align: 64, offset: 5504)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1164, file: !107, line: 2742, baseType: !1023, size: 32, align: 32, offset: 6016)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1164, file: !107, line: 2755, baseType: !1023, size: 32, align: 32, offset: 6048)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1164, file: !107, line: 2776, baseType: !1023, size: 32, align: 32, offset: 6080)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1164, file: !107, line: 2783, baseType: !1023, size: 32, align: 32, offset: 6112)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1164, file: !107, line: 2791, baseType: !1023, size: 32, align: 32, offset: 6144)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1164, file: !107, line: 2802, baseType: !1184, size: 64, align: 64, offset: 6208)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1164, file: !107, line: 2811, baseType: !1023, size: 32, align: 32, offset: 6272)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1164, file: !107, line: 2821, baseType: !1023, size: 32, align: 32, offset: 6304)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1164, file: !107, line: 2830, baseType: !1023, size: 32, align: 32, offset: 6336)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1164, file: !107, line: 2840, baseType: !1023, size: 32, align: 32, offset: 6368)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1164, file: !107, line: 2851, baseType: !1640, size: 64, align: 64, offset: 6400)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64, align: 64)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{!1023, !1451, !1643, !1031, !1454, !1023, !1023}
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64, align: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!1023, !1451, !1031}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1164, file: !107, line: 2871, baseType: !1647, size: 64, align: 64, offset: 6464)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64, align: 64)
!1648 = !DISubroutineType(types: !1649)
!1649 = !{!1023, !1451, !1650, !1031, !1454, !1023}
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64, align: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!1023, !1451, !1031, !1023, !1023}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1164, file: !107, line: 2878, baseType: !1023, size: 32, align: 32, offset: 6528)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1164, file: !107, line: 2885, baseType: !1023, size: 32, align: 32, offset: 6560)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1164, file: !107, line: 3005, baseType: !1023, size: 32, align: 32, offset: 6592)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1164, file: !107, line: 3013, baseType: !950, size: 32, align: 32, offset: 6624)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1164, file: !107, line: 3020, baseType: !950, size: 32, align: 32, offset: 6656)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1164, file: !107, line: 3027, baseType: !950, size: 32, align: 32, offset: 6688)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1164, file: !107, line: 3037, baseType: !1190, size: 64, align: 64, offset: 6720)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1164, file: !107, line: 3038, baseType: !1023, size: 32, align: 32, offset: 6784)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1164, file: !107, line: 3050, baseType: !1068, size: 64, align: 64, offset: 6848)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1164, file: !107, line: 3065, baseType: !1023, size: 32, align: 32, offset: 6912)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1164, file: !107, line: 3083, baseType: !1023, size: 32, align: 32, offset: 6944)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1164, file: !107, line: 3092, baseType: !1050, size: 64, align: 32, offset: 6976)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1164, file: !107, line: 3099, baseType: !566, size: 32, align: 32, offset: 7040)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1164, file: !107, line: 3106, baseType: !1050, size: 64, align: 32, offset: 7072)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1164, file: !107, line: 3113, baseType: !1668, size: 64, align: 64, offset: 7168)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64, align: 64)
!1669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1670)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !107, line: 740, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !107, line: 712, size: 384, align: 64, elements: !1672)
!1672 = !{!1673, !1674, !1675, !1676, !1677, !1678, !1681}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1671, file: !107, line: 713, baseType: !106, size: 32, align: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1671, file: !107, line: 714, baseType: !96, size: 32, align: 32, offset: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1671, file: !107, line: 720, baseType: !1040, size: 64, align: 64, offset: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1671, file: !107, line: 724, baseType: !1040, size: 64, align: 64, offset: 128)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1671, file: !107, line: 728, baseType: !1023, size: 32, align: 32, offset: 192)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1671, file: !107, line: 734, baseType: !1679, size: 64, align: 64, offset: 256)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64, align: 64)
!1680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1671, file: !107, line: 739, baseType: !1682, size: 64, align: 64, offset: 320)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64, align: 64)
!1683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1150)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1164, file: !107, line: 3129, baseType: !1020, size: 64, align: 64, offset: 7232)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1164, file: !107, line: 3130, baseType: !1020, size: 64, align: 64, offset: 7296)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1164, file: !107, line: 3131, baseType: !1020, size: 64, align: 64, offset: 7360)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1164, file: !107, line: 3132, baseType: !1020, size: 64, align: 64, offset: 7424)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1164, file: !107, line: 3139, baseType: !1578, size: 64, align: 64, offset: 7488)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1164, file: !107, line: 3147, baseType: !1023, size: 32, align: 32, offset: 7552)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1164, file: !107, line: 3165, baseType: !1023, size: 32, align: 32, offset: 7584)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1164, file: !107, line: 3172, baseType: !1023, size: 32, align: 32, offset: 7616)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1164, file: !107, line: 3180, baseType: !1023, size: 32, align: 32, offset: 7648)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1164, file: !107, line: 3191, baseType: !1490, size: 64, align: 64, offset: 7680)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1164, file: !107, line: 3199, baseType: !1190, size: 64, align: 64, offset: 7744)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1164, file: !107, line: 3207, baseType: !1578, size: 64, align: 64, offset: 7808)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1164, file: !107, line: 3214, baseType: !1024, size: 32, align: 32, offset: 7872)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1164, file: !107, line: 3224, baseType: !1320, size: 64, align: 64, offset: 7936)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1164, file: !107, line: 3225, baseType: !1023, size: 32, align: 32, offset: 8000)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1164, file: !107, line: 3249, baseType: !1222, size: 64, align: 64, offset: 8064)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1164, file: !107, line: 3256, baseType: !1023, size: 32, align: 32, offset: 8128)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1164, file: !107, line: 3271, baseType: !1023, size: 32, align: 32, offset: 8160)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1164, file: !107, line: 3279, baseType: !1020, size: 64, align: 64, offset: 8192)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1164, file: !107, line: 3301, baseType: !1222, size: 64, align: 64, offset: 8256)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1164, file: !107, line: 3310, baseType: !1023, size: 32, align: 32, offset: 8320)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1164, file: !107, line: 3337, baseType: !1023, size: 32, align: 32, offset: 8352)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1164, file: !107, line: 3351, baseType: !1023, size: 32, align: 32, offset: 8384)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1164, file: !107, line: 3359, baseType: !1023, size: 32, align: 32, offset: 8416)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1037, file: !107, line: 3535, baseType: !1709, size: 64, align: 64, offset: 1024)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64, align: 64)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{!1023, !1162, !1712}
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64, align: 64)
!1713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1037, file: !107, line: 3541, baseType: !1715, size: 64, align: 64, offset: 1088)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64, align: 64)
!1716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1717)
!1717 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !107, line: 3461, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1178, line: 223, size: 128, align: 64, elements: !1719)
!1719 = !{!1720, !1721}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1718, file: !1178, line: 224, baseType: !1604, size: 64, align: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1718, file: !1178, line: 225, baseType: !1604, size: 64, align: 64, offset: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1037, file: !107, line: 3549, baseType: !1723, size: 64, align: 64, offset: 1152)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64, align: 64)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{null, !1157}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1037, file: !107, line: 3551, baseType: !1159, size: 64, align: 64, offset: 1216)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1037, file: !107, line: 3552, baseType: !1728, size: 64, align: 64, offset: 1280)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64, align: 64)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!1023, !1162, !1190, !1023, !1731}
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64, align: 64)
!1732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1733)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !107, line: 3920, size: 256, align: 64, elements: !1734)
!1734 = !{!1735, !1736, !1737, !1738, !1739, !1763}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1733, file: !107, line: 3921, baseType: !1491, size: 16, align: 16)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1733, file: !107, line: 3922, baseType: !1030, size: 32, align: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1733, file: !107, line: 3923, baseType: !1030, size: 32, align: 32, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1733, file: !107, line: 3924, baseType: !1024, size: 32, align: 32, offset: 96)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1733, file: !107, line: 3925, baseType: !1740, size: 64, align: 64, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64, align: 64)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64, align: 64)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !107, line: 3918, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !107, line: 3885, size: 1600, align: 64, elements: !1744)
!1744 = !{!1745, !1746, !1747, !1748, !1749, !1750, !1756, !1758, !1759, !1760, !1761, !1762}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1743, file: !107, line: 3886, baseType: !1023, size: 32, align: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1743, file: !107, line: 3887, baseType: !1023, size: 32, align: 32, offset: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1743, file: !107, line: 3888, baseType: !1023, size: 32, align: 32, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1743, file: !107, line: 3889, baseType: !1023, size: 32, align: 32, offset: 96)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1743, file: !107, line: 3890, baseType: !1023, size: 32, align: 32, offset: 128)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1743, file: !107, line: 3897, baseType: !1751, size: 768, align: 64, offset: 192)
!1751 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !107, line: 3858, baseType: !1752)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !107, line: 3853, size: 768, align: 64, elements: !1753)
!1753 = !{!1754, !1755}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1752, file: !107, line: 3855, baseType: !1189, size: 512, align: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1752, file: !107, line: 3857, baseType: !1194, size: 256, align: 32, offset: 512)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1743, file: !107, line: 3903, baseType: !1757, size: 256, align: 64, offset: 960)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1190, size: 256, align: 64, elements: !1291)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1743, file: !107, line: 3904, baseType: !1298, size: 128, align: 32, offset: 1216)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1743, file: !107, line: 3906, baseType: !783, size: 32, align: 32, offset: 1344)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1743, file: !107, line: 3908, baseType: !1578, size: 64, align: 64, offset: 1408)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1743, file: !107, line: 3915, baseType: !1578, size: 64, align: 64, offset: 1472)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1743, file: !107, line: 3917, baseType: !1023, size: 32, align: 32, offset: 1536)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1733, file: !107, line: 3926, baseType: !1020, size: 64, align: 64, offset: 192)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1037, file: !107, line: 3564, baseType: !1765, size: 64, align: 64, offset: 1344)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64, align: 64)
!1766 = !DISubroutineType(types: !1767)
!1767 = !{!1023, !1162, !1308, !1452, !1454}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1037, file: !107, line: 3566, baseType: !1769, size: 64, align: 64, offset: 1408)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64, align: 64)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{!1023, !1162, !1031, !1454, !1308}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1037, file: !107, line: 3567, baseType: !1159, size: 64, align: 64, offset: 1472)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1037, file: !107, line: 3576, baseType: !1774, size: 64, align: 64, offset: 1536)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64, align: 64)
!1775 = !DISubroutineType(types: !1776)
!1776 = !{!1023, !1162, !1452}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1037, file: !107, line: 3577, baseType: !1778, size: 64, align: 64, offset: 1600)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64, align: 64)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!1023, !1162, !1308}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1037, file: !107, line: 3584, baseType: !1597, size: 64, align: 64, offset: 1664)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1037, file: !107, line: 3589, baseType: !1783, size: 64, align: 64, offset: 1728)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64, align: 64)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{null, !1162}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1037, file: !107, line: 3594, baseType: !1023, size: 32, align: 32, offset: 1792)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1037, file: !107, line: 3600, baseType: !1040, size: 64, align: 64, offset: 1856)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1037, file: !107, line: 3609, baseType: !1789, size: 64, align: 64, offset: 1920)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64, align: 64)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64, align: 64)
!1791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1792)
!1792 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !107, line: 3609, flags: DIFlagFwdDecl)
!1793 = distinct !DIGlobalVariable(name: "mpeg4audio_sample_rates", scope: !0, file: !1794, line: 85, type: !1795, isLocal: true, isDefinition: true, variable: [16 x i32]* @mpeg4audio_sample_rates)
!1794 = !DIFile(filename: "libavcodec/aacenctab.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1061, size: 512, align: 32, elements: !1796)
!1796 = !{!1797}
!1797 = !DISubrange(count: 16)
!1798 = distinct !DIGlobalVariable(name: "aacenc_class", scope: !0, file: !1035, line: 1137, type: !1075, isLocal: true, isDefinition: true, variable: %struct.AVClass* @aacenc_class)
!1799 = distinct !DIGlobalVariable(name: "aacenc_options", scope: !0, file: !1035, line: 1122, type: !1800, isLocal: true, isDefinition: true, variable: [12 x %struct.AVOption]* @aacenc_options)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1801, size: 6144, align: 64, elements: !1803)
!1801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1802)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !4, line: 301, baseType: !1087)
!1803 = !{!1804}
!1804 = !DISubrange(count: 12)
!1805 = distinct !DIGlobalVariable(name: "aac_encode_defaults", scope: !0, file: !1035, line: 1144, type: !1806, isLocal: true, isDefinition: true, variable: [2 x %struct.AVCodecDefault]* @aac_encode_defaults)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1716, size: 256, align: 64, elements: !1807)
!1807 = !{!1808}
!1808 = !DISubrange(count: 2)
!1809 = distinct !DIGlobalVariable(name: "aac_normal_chan_layouts", scope: !0, file: !1794, line: 47, type: !1810, isLocal: true, isDefinition: true, variable: [7 x i64]* @aac_normal_chan_layouts)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1811, size: 448, align: 64, elements: !1812)
!1811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!1812 = !{!1813}
!1813 = !DISubrange(count: 7)
!1814 = distinct !DIGlobalVariable(name: "aac_pce_configs", scope: !0, file: !967, line: 137, type: !1815, isLocal: true, isDefinition: true, variable: [29 x %struct.AACPCEInfo]* @aac_pce_configs)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1816, size: 64960, align: 64, elements: !1832)
!1816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1817)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACPCEInfo", file: !967, line: 100, baseType: !1818)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACPCEInfo", file: !967, line: 93, size: 2240, align: 64, elements: !1819)
!1819 = !{!1820, !1821, !1822, !1826, !1829, !1831}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1818, file: !967, line: 94, baseType: !1020, size: 64, align: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "num_ele", scope: !1818, file: !967, line: 95, baseType: !1298, size: 128, align: 32, offset: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pairing", scope: !1818, file: !967, line: 96, baseType: !1823, size: 768, align: 32, offset: 192)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 768, align: 32, elements: !1824)
!1824 = !{!1825, !1192}
!1825 = !DISubrange(count: 3)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1818, file: !967, line: 97, baseType: !1827, size: 1024, align: 32, offset: 960)
!1827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 1024, align: 32, elements: !1828)
!1828 = !{!1292, !1192}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "config_map", scope: !1818, file: !967, line: 98, baseType: !1830, size: 128, align: 8, offset: 1984)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 128, align: 8, elements: !1796)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "reorder_map", scope: !1818, file: !967, line: 99, baseType: !1830, size: 128, align: 8, offset: 2112)
!1832 = !{!1833}
!1833 = !DISubrange(count: 29)
!1834 = distinct !DIGlobalVariable(name: "aac_chan_maps", scope: !0, file: !1794, line: 72, type: !1835, isLocal: true, isDefinition: true, variable: [16 x [16 x i8]]* @aac_chan_maps)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1605, size: 2048, align: 8, elements: !1836)
!1836 = !{!1797, !1797}
!1837 = distinct !DIGlobalVariable(name: "aac_chan_configs", scope: !0, file: !1794, line: 58, type: !1838, isLocal: true, isDefinition: true, variable: [16 x [6 x i8]]* @aac_chan_configs)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1605, size: 768, align: 8, elements: !1839)
!1839 = !{!1797, !1840}
!1840 = !DISubrange(count: 6)
!1841 = distinct !DIGlobalVariable(name: "aacenc_profiles", scope: !0, file: !1794, line: 132, type: !1842, isLocal: true, isDefinition: true, variable: [4 x i32]* @aacenc_profiles)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1061, size: 128, align: 32, elements: !1291)
!1843 = distinct !DIGlobalVariable(name: "aac_table_init", scope: !0, file: !1035, line: 51, type: !1844, isLocal: true, isDefinition: true, variable: i32* @aac_table_init)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_once_t", file: !1845, line: 168, baseType: !1023)
!1845 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1846 = distinct !DIGlobalVariable(name: "exp2_lut", scope: !1847, file: !1848, line: 50, type: !1852, isLocal: true, isDefinition: true, variable: [16 x float]* @ff_aac_tableinit.exp2_lut)
!1847 = distinct !DISubprogram(name: "ff_aac_tableinit", scope: !1848, file: !1848, line: 45, type: !1849, isLocal: true, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!1848 = !DIFile(filename: "libavcodec/aactab.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1849 = !DISubroutineType(types: !1850)
!1850 = !{null}
!1851 = !{}
!1852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1853, size: 512, align: 32, elements: !1796)
!1853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1854 = distinct !DIGlobalVariable(name: "apply_window", scope: !0, file: !1035, line: 191, type: !1855, isLocal: true, isDefinition: true, variable: [4 x void (%struct.AVFloatDSPContext*, %struct.SingleChannelElement*, float*)*]* @apply_window)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1856, size: 256, align: 64, elements: !1291)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64, align: 64)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{null, !1860, !1903, !1870}
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64, align: 64)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1862, line: 192, baseType: !1863)
!1862 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1862, line: 24, size: 704, align: 64, elements: !1864)
!1864 = !{!1865, !1871, !1875, !1882, !1883, !1884, !1888, !1889, !1890, !1895, !1899}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1863, file: !1862, line: 38, baseType: !1866, size: 64, align: 64)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64, align: 64)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{null, !1869, !1870, !1870, !1023}
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64, align: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1863, file: !1862, line: 54, baseType: !1872, size: 64, align: 64, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64, align: 64)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{null, !1869, !1870, !1032, !1023}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1863, file: !1862, line: 70, baseType: !1876, size: 64, align: 64, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64, align: 64)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{null, !1879, !1880, !1098, !1023}
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64, align: 64)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64, align: 64)
!1881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1098)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1863, file: !1862, line: 85, baseType: !1872, size: 64, align: 64, offset: 192)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1863, file: !1862, line: 100, baseType: !1876, size: 64, align: 64, offset: 256)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1863, file: !1862, line: 119, baseType: !1885, size: 64, align: 64, offset: 320)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64, align: 64)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{null, !1869, !1870, !1870, !1870, !1023}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1863, file: !1862, line: 137, baseType: !1885, size: 64, align: 64, offset: 384)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1863, file: !1862, line: 154, baseType: !1866, size: 64, align: 64, offset: 448)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1863, file: !1862, line: 164, baseType: !1891, size: 64, align: 64, offset: 512)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64, align: 64)
!1892 = !DISubroutineType(types: !1893)
!1893 = !{null, !1894, !1894, !1023}
!1894 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1869)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1863, file: !1862, line: 175, baseType: !1896, size: 64, align: 64, offset: 576)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64, align: 64)
!1897 = !DISubroutineType(types: !1898)
!1898 = !{!1032, !1870, !1870, !1023}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1863, file: !1862, line: 190, baseType: !1900, size: 64, align: 64, offset: 640)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64, align: 64)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{null, !1879, !1880, !1880, !1023}
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64, align: 64)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "SingleChannelElement", file: !66, line: 270, baseType: !1905)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SingleChannelElement", file: !66, line: 248, size: 593664, align: 256, elements: !1906)
!1906 = !{!1907, !1955, !1972, !1980, !1984, !1985, !1989, !1991, !1993, !1995, !1996, !1998, !1999, !2003, !2004, !2008, !2012, !2016, !2019, !2020, !2035}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "ics", scope: !1905, file: !66, line: 249, baseType: !1908, size: 2432, align: 64)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndividualChannelStream", file: !66, line: 193, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IndividualChannelStream", file: !66, line: 174, size: 2432, align: 64, elements: !1910)
!1910 = !{!1911, !1912, !1914, !1916, !1917, !1919, !1935, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1949, !1953, !1954}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "max_sfb", scope: !1909, file: !66, line: 175, baseType: !1071, size: 8, align: 8)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "window_sequence", scope: !1909, file: !66, line: 176, baseType: !1913, size: 64, align: 32, offset: 32)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !65, size: 64, align: 32, elements: !1807)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "use_kb_window", scope: !1909, file: !66, line: 177, baseType: !1915, size: 16, align: 8, offset: 96)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 16, align: 8, elements: !1807)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "num_window_groups", scope: !1909, file: !66, line: 178, baseType: !1023, size: 32, align: 32, offset: 128)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "group_len", scope: !1909, file: !66, line: 179, baseType: !1918, size: 64, align: 8, offset: 160)
!1918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 64, align: 8, elements: !1191)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "ltp", scope: !1909, file: !66, line: 180, baseType: !1920, size: 416, align: 32, offset: 224)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "LongTermPrediction", file: !66, line: 169, baseType: !1921)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LongTermPrediction", file: !66, line: 163, size: 416, align: 32, elements: !1922)
!1922 = !{!1923, !1924, !1927, !1928, !1931}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !1921, file: !66, line: 164, baseType: !1267, size: 8, align: 8)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "lag", scope: !1921, file: !66, line: 165, baseType: !1925, size: 16, align: 16, offset: 16)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1021, line: 37, baseType: !1926)
!1926 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !1921, file: !66, line: 166, baseType: !1023, size: 32, align: 32, offset: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !1921, file: !66, line: 167, baseType: !1929, size: 32, align: 32, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTFLOAT", file: !1930, line: 86, baseType: !1032)
!1930 = !DIFile(filename: "./libavcodec/aac_defines.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1921, file: !66, line: 168, baseType: !1932, size: 320, align: 8, offset: 96)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1267, size: 320, align: 8, elements: !1933)
!1933 = !{!1934}
!1934 = !DISubrange(count: 40)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "swb_offset", scope: !1909, file: !66, line: 181, baseType: !1936, size: 64, align: 64, offset: 640)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64, align: 64)
!1937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "swb_sizes", scope: !1909, file: !66, line: 182, baseType: !1604, size: 64, align: 64, offset: 704)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "num_swb", scope: !1909, file: !66, line: 183, baseType: !1023, size: 32, align: 32, offset: 768)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "num_windows", scope: !1909, file: !66, line: 184, baseType: !1023, size: 32, align: 32, offset: 800)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "tns_max_bands", scope: !1909, file: !66, line: 185, baseType: !1023, size: 32, align: 32, offset: 832)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_present", scope: !1909, file: !66, line: 186, baseType: !1023, size: 32, align: 32, offset: 864)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_initialized", scope: !1909, file: !66, line: 187, baseType: !1023, size: 32, align: 32, offset: 896)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_group", scope: !1909, file: !66, line: 188, baseType: !1023, size: 32, align: 32, offset: 928)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_count", scope: !1909, file: !66, line: 189, baseType: !1946, size: 992, align: 32, offset: 960)
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 992, align: 32, elements: !1947)
!1947 = !{!1948}
!1948 = !DISubrange(count: 31)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_used", scope: !1909, file: !66, line: 190, baseType: !1950, size: 328, align: 8, offset: 1952)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 328, align: 8, elements: !1951)
!1951 = !{!1952}
!1952 = !DISubrange(count: 41)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "window_clipping", scope: !1909, file: !66, line: 191, baseType: !1918, size: 64, align: 8, offset: 2280)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "clip_avoidance_factor", scope: !1909, file: !66, line: 192, baseType: !1032, size: 32, align: 32, offset: 2368)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "tns", scope: !1905, file: !66, line: 250, baseType: !1956, size: 44320, align: 32, offset: 2432)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "TemporalNoiseShaping", file: !66, line: 206, baseType: !1957)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TemporalNoiseShaping", file: !66, line: 198, size: 44320, align: 32, elements: !1958)
!1958 = !{!1959, !1960, !1961, !1964, !1965, !1966, !1970}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !1957, file: !66, line: 199, baseType: !1023, size: 32, align: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "n_filt", scope: !1957, file: !66, line: 200, baseType: !1194, size: 256, align: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1957, file: !66, line: 201, baseType: !1962, size: 1024, align: 32, offset: 288)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 1024, align: 32, elements: !1963)
!1963 = !{!1192, !1292}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1957, file: !66, line: 202, baseType: !1962, size: 1024, align: 32, offset: 1312)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !1957, file: !66, line: 203, baseType: !1962, size: 1024, align: 32, offset: 2336)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !1957, file: !66, line: 204, baseType: !1967, size: 20480, align: 32, offset: 3360)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 20480, align: 32, elements: !1968)
!1968 = !{!1192, !1292, !1969}
!1969 = !DISubrange(count: 20)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !1957, file: !66, line: 205, baseType: !1971, size: 20480, align: 32, offset: 23840)
!1971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 20480, align: 32, elements: !1968)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "pulse", scope: !1905, file: !66, line: 251, baseType: !1973, size: 320, align: 32, offset: 46752)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pulse", file: !66, line: 229, baseType: !1974)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Pulse", file: !66, line: 224, size: 320, align: 32, elements: !1975)
!1975 = !{!1976, !1977, !1978, !1979}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "num_pulse", scope: !1974, file: !66, line: 225, baseType: !1023, size: 32, align: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1974, file: !66, line: 226, baseType: !1023, size: 32, align: 32, offset: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1974, file: !66, line: 227, baseType: !1298, size: 128, align: 32, offset: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "amp", scope: !1974, file: !66, line: 228, baseType: !1298, size: 128, align: 32, offset: 192)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "band_type", scope: !1905, file: !66, line: 252, baseType: !1981, size: 4096, align: 32, offset: 47072)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 4096, align: 32, elements: !1982)
!1982 = !{!1983}
!1983 = !DISubrange(count: 128)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "band_alt", scope: !1905, file: !66, line: 253, baseType: !1981, size: 4096, align: 32, offset: 51168)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "band_type_run_end", scope: !1905, file: !66, line: 254, baseType: !1986, size: 3840, align: 32, offset: 55264)
!1986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 3840, align: 32, elements: !1987)
!1987 = !{!1988}
!1988 = !DISubrange(count: 120)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1905, file: !66, line: 255, baseType: !1990, size: 3840, align: 32, offset: 59104)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 3840, align: 32, elements: !1987)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "sf_idx", scope: !1905, file: !66, line: 256, baseType: !1992, size: 4096, align: 32, offset: 62944)
!1992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 4096, align: 32, elements: !1982)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "zeroes", scope: !1905, file: !66, line: 257, baseType: !1994, size: 1024, align: 8, offset: 67040)
!1994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 1024, align: 8, elements: !1982)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "can_pns", scope: !1905, file: !66, line: 258, baseType: !1994, size: 1024, align: 8, offset: 68064)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "is_ener", scope: !1905, file: !66, line: 259, baseType: !1997, size: 4096, align: 32, offset: 69088)
!1997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 4096, align: 32, elements: !1982)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "pns_ener", scope: !1905, file: !66, line: 260, baseType: !1997, size: 4096, align: 32, offset: 73184)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "pcoeffs", scope: !1905, file: !66, line: 261, baseType: !2000, size: 32768, align: 32, offset: 77312)
!2000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 32768, align: 32, elements: !2001)
!2001 = !{!2002}
!2002 = !DISubrange(count: 1024)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !1905, file: !66, line: 262, baseType: !2000, size: 32768, align: 32, offset: 110080)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1905, file: !66, line: 263, baseType: !2005, size: 49152, align: 32, offset: 142848)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 49152, align: 32, elements: !2006)
!2006 = !{!2007}
!2007 = !DISubrange(count: 1536)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ret_buf", scope: !1905, file: !66, line: 264, baseType: !2009, size: 65536, align: 32, offset: 192000)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 65536, align: 32, elements: !2010)
!2010 = !{!2011}
!2011 = !DISubrange(count: 2048)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_state", scope: !1905, file: !66, line: 265, baseType: !2013, size: 98304, align: 32, offset: 257536)
!2013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 98304, align: 32, elements: !2014)
!2014 = !{!2015}
!2015 = !DISubrange(count: 3072)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "lcoeffs", scope: !1905, file: !66, line: 266, baseType: !2017, size: 32768, align: 32, offset: 355840)
!2017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 32768, align: 32, elements: !2001)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_FLOAT", file: !1930, line: 90, baseType: !1032)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "prcoeffs", scope: !1905, file: !66, line: 267, baseType: !2017, size: 32768, align: 32, offset: 388608)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_state", scope: !1905, file: !66, line: 268, baseType: !2021, size: 172032, align: 32, offset: 421376)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2022, size: 172032, align: 32, elements: !2033)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "PredictorState", file: !66, line: 144, baseType: !2023)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PredictorState", file: !66, line: 135, size: 256, align: 32, elements: !2024)
!2024 = !{!2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "cor0", scope: !2023, file: !66, line: 136, baseType: !2018, size: 32, align: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "cor1", scope: !2023, file: !66, line: 137, baseType: !2018, size: 32, align: 32, offset: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "var0", scope: !2023, file: !66, line: 138, baseType: !2018, size: 32, align: 32, offset: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "var1", scope: !2023, file: !66, line: 139, baseType: !2018, size: 32, align: 32, offset: 96)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2023, file: !66, line: 140, baseType: !2018, size: 32, align: 32, offset: 128)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2023, file: !66, line: 141, baseType: !2018, size: 32, align: 32, offset: 160)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2023, file: !66, line: 142, baseType: !2018, size: 32, align: 32, offset: 192)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "x_est", scope: !2023, file: !66, line: 143, baseType: !2018, size: 32, align: 32, offset: 224)
!2033 = !{!2034}
!2034 = !DISubrange(count: 672)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "ret", scope: !1905, file: !66, line: 269, baseType: !2036, size: 64, align: 64, offset: 593408)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64, align: 64)
!2037 = !{i32 2, !"Dwarf Version", i32 4}
!2038 = !{i32 2, !"Debug Info Version", i32 3}
!2039 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2040 = distinct !DISubprogram(name: "ff_quantize_band_cost_cache_init", scope: !1035, file: !1035, line: 126, type: !2041, isLocal: false, isDefinition: true, scopeLine: 127, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!2041 = !DISubroutineType(types: !2042)
!2042 = !{null, !2043}
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64, align: 64)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACEncContext", file: !967, line: 376, size: 4539904, align: 256, elements: !2045)
!2045 = !{!2046, !2048, !2060, !2071, !2116, !2117, !2118, !2119, !2121, !2122, !2123, !2170, !2171, !2172, !2173, !2174, !2688, !2768, !2771, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2847, !2851, !2853, !2854, !2867, !2871, !2875}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !2044, file: !967, line: 377, baseType: !2047, size: 64, align: 64)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !2044, file: !967, line: 378, baseType: !2049, size: 256, align: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACEncOptions", file: !967, line: 52, baseType: !2050)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACEncOptions", file: !967, line: 43, size: 256, align: 32, elements: !2051)
!2051 = !{!2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "coder", scope: !2050, file: !967, line: 44, baseType: !1023, size: 32, align: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "pns", scope: !2050, file: !967, line: 45, baseType: !1023, size: 32, align: 32, offset: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "tns", scope: !2050, file: !967, line: 46, baseType: !1023, size: 32, align: 32, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "ltp", scope: !2050, file: !967, line: 47, baseType: !1023, size: 32, align: 32, offset: 96)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "pce", scope: !2050, file: !967, line: 48, baseType: !1023, size: 32, align: 32, offset: 128)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !2050, file: !967, line: 49, baseType: !1023, size: 32, align: 32, offset: 160)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "mid_side", scope: !2050, file: !967, line: 50, baseType: !1023, size: 32, align: 32, offset: 192)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "intensity_stereo", scope: !2050, file: !967, line: 51, baseType: !1023, size: 32, align: 32, offset: 224)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !2044, file: !967, line: 379, baseType: !2061, size: 320, align: 64, offset: 320)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !2062, line: 40, baseType: !2063)
!2062 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !2062, line: 35, size: 320, align: 64, elements: !2064)
!2064 = !{!2065, !2066, !2067, !2068, !2069, !2070}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !2063, file: !2062, line: 36, baseType: !1030, size: 32, align: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !2063, file: !2062, line: 37, baseType: !1023, size: 32, align: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2063, file: !2062, line: 38, baseType: !1190, size: 64, align: 64, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !2063, file: !2062, line: 38, baseType: !1190, size: 64, align: 64, offset: 128)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !2063, file: !2062, line: 38, baseType: !1190, size: 64, align: 64, offset: 192)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !2063, file: !2062, line: 39, baseType: !1023, size: 32, align: 32, offset: 256)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "mdct1024", scope: !2044, file: !967, line: 380, baseType: !2072, size: 896, align: 64, offset: 640)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !2073, line: 41, baseType: !2074)
!2073 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !47, line: 88, size: 896, align: 64, elements: !2075)
!2075 = !{!2076, !2077, !2078, !2079, !2087, !2088, !2089, !2091, !2092, !2097, !2098, !2104, !2105, !2106, !2112, !2113, !2114}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !2074, file: !47, line: 89, baseType: !1023, size: 32, align: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !2074, file: !47, line: 90, baseType: !1023, size: 32, align: 32, offset: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !2074, file: !47, line: 91, baseType: !1490, size: 64, align: 64, offset: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !2074, file: !47, line: 92, baseType: !2080, size: 64, align: 64, offset: 128)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64, align: 64)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !2073, line: 39, baseType: !2082)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !2073, line: 37, size: 64, align: 32, elements: !2083)
!2083 = !{!2084, !2086}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !2082, file: !2073, line: 38, baseType: !2085, size: 32, align: 32)
!2085 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !2073, line: 35, baseType: !1032)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !2082, file: !2073, line: 38, baseType: !2085, size: 32, align: 32, offset: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !2074, file: !47, line: 93, baseType: !1023, size: 32, align: 32, offset: 192)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !2074, file: !47, line: 94, baseType: !1023, size: 32, align: 32, offset: 224)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !2074, file: !47, line: 96, baseType: !2090, size: 64, align: 64, offset: 256)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64, align: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !2074, file: !47, line: 97, baseType: !2090, size: 64, align: 64, offset: 320)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !2074, file: !47, line: 101, baseType: !2093, size: 64, align: 64, offset: 384)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64, align: 64)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{null, !2096, !2080}
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64, align: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !2074, file: !47, line: 106, baseType: !2093, size: 64, align: 64, offset: 448)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !2074, file: !47, line: 107, baseType: !2099, size: 64, align: 64, offset: 512)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64, align: 64)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{null, !2096, !2090, !2102}
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64, align: 64)
!2103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2085)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2074, file: !47, line: 108, baseType: !2099, size: 64, align: 64, offset: 576)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !2074, file: !47, line: 109, baseType: !2099, size: 64, align: 64, offset: 640)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !2074, file: !47, line: 110, baseType: !2107, size: 64, align: 64, offset: 704)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64, align: 64)
!2108 = !DISubroutineType(types: !2109)
!2109 = !{null, !2096, !2110, !2102}
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64, align: 64)
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !47, line: 43, baseType: !1032)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !2074, file: !47, line: 111, baseType: !46, size: 32, align: 32, offset: 768)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !2074, file: !47, line: 112, baseType: !52, size: 32, align: 32, offset: 800)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !2074, file: !47, line: 113, baseType: !2115, size: 64, align: 64, offset: 832)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64, align: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "mdct128", scope: !2044, file: !967, line: 381, baseType: !2072, size: 896, align: 64, offset: 1536)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !2044, file: !967, line: 382, baseType: !1860, size: 64, align: 64, offset: 2432)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "pce", scope: !2044, file: !967, line: 383, baseType: !1817, size: 2240, align: 64, offset: 2496)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "planar_samples", scope: !2044, file: !967, line: 384, baseType: !2120, size: 1024, align: 64, offset: 4736)
!2120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1869, size: 1024, align: 64, elements: !1796)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2044, file: !967, line: 386, baseType: !1023, size: 32, align: 32, offset: 5760)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "needs_pce", scope: !2044, file: !967, line: 387, baseType: !1023, size: 32, align: 32, offset: 5792)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "lpc", scope: !2044, file: !967, line: 388, baseType: !2124, size: 302080, align: 256, offset: 5888)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "LPCContext", file: !57, line: 87, baseType: !2125)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LPCContext", file: !57, line: 52, size: 302080, align: 256, elements: !2126)
!2126 = !{!2127, !2128, !2129, !2130, !2131, !2132, !2139, !2143}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "blocksize", scope: !2125, file: !57, line: 53, baseType: !1023, size: 32, align: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "max_order", scope: !2125, file: !57, line: 54, baseType: !1023, size: 32, align: 32, offset: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_type", scope: !2125, file: !57, line: 55, baseType: !56, size: 32, align: 32, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_buffer", scope: !2125, file: !57, line: 56, baseType: !1879, size: 64, align: 64, offset: 128)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_samples", scope: !2125, file: !57, line: 57, baseType: !1879, size: 64, align: 64, offset: 192)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_apply_welch_window", scope: !2125, file: !57, line: 67, baseType: !2133, size: 64, align: 64, offset: 256)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64, align: 64)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{null, !2136, !1023, !1879}
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64, align: 64)
!2137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2138)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1021, line: 38, baseType: !1023)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_compute_autocorr", scope: !2125, file: !57, line: 82, baseType: !2140, size: 64, align: 64, offset: 320)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64, align: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{null, !1880, !1023, !1023, !1879}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "lls_models", scope: !2125, file: !57, line: 86, baseType: !2144, size: 301568, align: 256, offset: 512)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2145, size: 301568, align: 256, elements: !1807)
!2145 = !DIDerivedType(tag: DW_TAG_typedef, name: "LLSModel", file: !2146, line: 58, baseType: !2147)
!2146 = !DIFile(filename: "./libavutil/lls.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LLSModel", file: !2146, line: 38, size: 150784, align: 256, elements: !2148)
!2148 = !{!2149, !2153, !2157, !2160, !2161, !2166}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "covariance", scope: !2147, file: !2146, line: 39, baseType: !2150, size: 82944, align: 64)
!2150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1098, size: 82944, align: 64, elements: !2151)
!2151 = !{!2152, !2152}
!2152 = !DISubrange(count: 36)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !2147, file: !2146, line: 40, baseType: !2154, size: 65536, align: 64, offset: 82944)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1098, size: 65536, align: 64, elements: !2155)
!2155 = !{!2156, !2156}
!2156 = !DISubrange(count: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "variance", scope: !2147, file: !2146, line: 41, baseType: !2158, size: 2048, align: 64, offset: 148480)
!2158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1098, size: 2048, align: 64, elements: !2159)
!2159 = !{!2156}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "indep_count", scope: !2147, file: !2146, line: 42, baseType: !1023, size: 32, align: 32, offset: 150528)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "update_lls", scope: !2147, file: !2146, line: 50, baseType: !2162, size: 64, align: 64, offset: 150592)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64, align: 64)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{null, !2165, !1880}
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64, align: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_lls", scope: !2147, file: !2146, line: 57, baseType: !2167, size: 64, align: 64, offset: 150656)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64, align: 64)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!1098, !2165, !1880, !1023}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "samplerate_index", scope: !2044, file: !967, line: 389, baseType: !1023, size: 32, align: 32, offset: 307968)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2044, file: !967, line: 390, baseType: !1023, size: 32, align: 32, offset: 308000)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "reorder_map", scope: !2044, file: !967, line: 391, baseType: !1604, size: 64, align: 64, offset: 308032)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "chan_map", scope: !2044, file: !967, line: 392, baseType: !1604, size: 64, align: 64, offset: 308096)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "cpe", scope: !2044, file: !967, line: 394, baseType: !2175, size: 64, align: 64, offset: 308160)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64, align: 64)
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelElement", file: !66, line: 288, baseType: !2177)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelElement", file: !66, line: 275, size: 4381952, align: 256, elements: !2178)
!2178 = !{!2179, !2180, !2181, !2182, !2183, !2184, !2185, !2187, !2200}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2177, file: !66, line: 276, baseType: !1023, size: 32, align: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "common_window", scope: !2177, file: !66, line: 278, baseType: !1023, size: 32, align: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mode", scope: !2177, file: !66, line: 279, baseType: !1023, size: 32, align: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "is_mode", scope: !2177, file: !66, line: 280, baseType: !1071, size: 8, align: 8, offset: 96)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mask", scope: !2177, file: !66, line: 281, baseType: !1994, size: 1024, align: 8, offset: 104)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "is_mask", scope: !2177, file: !66, line: 282, baseType: !1994, size: 1024, align: 8, offset: 1128)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !2177, file: !66, line: 284, baseType: !2186, size: 1187328, align: 256, offset: 2304)
!2186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1904, size: 1187328, align: 256, elements: !1807)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "coup", scope: !2177, file: !66, line: 286, baseType: !2188, size: 62272, align: 32, offset: 1189632)
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelCoupling", file: !66, line: 243, baseType: !2189)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelCoupling", file: !66, line: 234, size: 62272, align: 32, elements: !2190)
!2190 = !{!2191, !2192, !2193, !2195, !2196, !2197}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "coupling_point", scope: !2189, file: !66, line: 235, baseType: !81, size: 32, align: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "num_coupled", scope: !2189, file: !66, line: 236, baseType: !1023, size: 32, align: 32, offset: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2189, file: !66, line: 237, baseType: !2194, size: 256, align: 32, offset: 64)
!2194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 256, align: 32, elements: !1191)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "id_select", scope: !2189, file: !66, line: 238, baseType: !1194, size: 256, align: 32, offset: 320)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "ch_select", scope: !2189, file: !66, line: 239, baseType: !1194, size: 256, align: 32, offset: 576)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2189, file: !66, line: 242, baseType: !2198, size: 61440, align: 32, offset: 832)
!2198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 61440, align: 32, elements: !2199)
!2199 = !{!1797, !1988}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2177, file: !66, line: 287, baseType: !2201, size: 3129856, align: 256, offset: 1252096)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectralBandReplication", file: !2202, line: 115, baseType: !2203)
!2202 = !DIFile(filename: "libavcodec/sbr.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectralBandReplication", file: !2202, line: 139, size: 3129856, align: 256, elements: !2204)
!2204 = !{!2205, !2206, !2207, !2208, !2209, !2210, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2231, !2233, !2234, !2235, !2236, !2305, !2422, !2423, !2424, !2425, !2429, !2433, !2434, !2436, !2440, !2441, !2443, !2444, !2447, !2450, !2453, !2456, !2457, !2460, !2461, !2463, !2464, !2465, !2466, !2467, !2470, !2471, !2472, !2525}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2203, file: !2202, line: 140, baseType: !1023, size: 32, align: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2203, file: !2202, line: 141, baseType: !1023, size: 32, align: 32, offset: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "ready_for_dequant", scope: !2203, file: !2202, line: 142, baseType: !1023, size: 32, align: 32, offset: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "id_aac", scope: !2203, file: !2202, line: 143, baseType: !1023, size: 32, align: 32, offset: 96)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2203, file: !2202, line: 144, baseType: !1023, size: 32, align: 32, offset: 128)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "spectrum_params", scope: !2203, file: !2202, line: 145, baseType: !2211, size: 48, align: 8, offset: 160)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectrumParameters", file: !2202, line: 55, baseType: !2212)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectrumParameters", file: !2202, line: 42, size: 48, align: 8, elements: !2213)
!2213 = !{!2214, !2215, !2216, !2217, !2218, !2219}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "bs_start_freq", scope: !2212, file: !2202, line: 43, baseType: !1071, size: 8, align: 8)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "bs_stop_freq", scope: !2212, file: !2202, line: 44, baseType: !1071, size: 8, align: 8, offset: 8)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "bs_xover_band", scope: !2212, file: !2202, line: 45, baseType: !1071, size: 8, align: 8, offset: 16)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_scale", scope: !2212, file: !2202, line: 51, baseType: !1071, size: 8, align: 8, offset: 24)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "bs_alter_scale", scope: !2212, file: !2202, line: 52, baseType: !1071, size: 8, align: 8, offset: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "bs_noise_bands", scope: !2212, file: !2202, line: 53, baseType: !1071, size: 8, align: 8, offset: 40)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res_header", scope: !2203, file: !2202, line: 146, baseType: !1023, size: 32, align: 32, offset: 224)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_bands", scope: !2203, file: !2202, line: 151, baseType: !1024, size: 32, align: 32, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_gains", scope: !2203, file: !2202, line: 152, baseType: !1024, size: 32, align: 32, offset: 288)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "bs_interpol_freq", scope: !2203, file: !2202, line: 153, baseType: !1024, size: 32, align: 32, offset: 320)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "bs_smoothing_mode", scope: !2203, file: !2202, line: 154, baseType: !1024, size: 32, align: 32, offset: 352)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "bs_coupling", scope: !2203, file: !2202, line: 156, baseType: !1024, size: 32, align: 32, offset: 384)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !2203, file: !2202, line: 157, baseType: !2227, size: 160, align: 32, offset: 416)
!2227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2228, size: 160, align: 32, elements: !2229)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_SIGNE", file: !1930, line: 91, baseType: !1024)
!2229 = !{!2230}
!2230 = !DISubrange(count: 5)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "kx", scope: !2203, file: !2202, line: 160, baseType: !2232, size: 64, align: 32, offset: 576)
!2232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2228, size: 64, align: 32, elements: !1807)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2203, file: !2202, line: 162, baseType: !2232, size: 64, align: 32, offset: 640)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "kx_and_m_pushed", scope: !2203, file: !2202, line: 163, baseType: !1024, size: 32, align: 32, offset: 704)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "n_master", scope: !2203, file: !2202, line: 165, baseType: !2228, size: 32, align: 32, offset: 736)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2203, file: !2202, line: 166, baseType: !2237, size: 1407488, align: 256, offset: 768)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2238, size: 1407488, align: 256, elements: !1807)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRData", file: !2202, line: 113, baseType: !2239)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRData", file: !2202, line: 62, size: 703744, align: 256, elements: !2240)
!2240 = !{!2241, !2242, !2243, !2244, !2246, !2247, !2249, !2250, !2253, !2257, !2258, !2262, !2266, !2267, !2269, !2271, !2274, !2275, !2280, !2284, !2285, !2288, !2291, !2293, !2296, !2298, !2299, !2300, !2303, !2304}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "bs_frame_class", scope: !2239, file: !2202, line: 67, baseType: !1024, size: 32, align: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic_flag", scope: !2239, file: !2202, line: 68, baseType: !1024, size: 32, align: 32, offset: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_env", scope: !2239, file: !2202, line: 69, baseType: !2228, size: 32, align: 32, offset: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_res", scope: !2239, file: !2202, line: 70, baseType: !2245, size: 56, align: 8, offset: 96)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 56, align: 8, elements: !1812)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_noise", scope: !2239, file: !2202, line: 71, baseType: !2228, size: 32, align: 32, offset: 160)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_env", scope: !2239, file: !2202, line: 72, baseType: !2248, size: 40, align: 8, offset: 192)
!2248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 40, align: 8, elements: !2229)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_noise", scope: !2239, file: !2202, line: 73, baseType: !1915, size: 16, align: 8, offset: 232)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "bs_invf_mode", scope: !2239, file: !2202, line: 74, baseType: !2251, size: 80, align: 8, offset: 248)
!2251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 80, align: 8, elements: !2252)
!2252 = !{!1808, !2230}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic", scope: !2239, file: !2202, line: 75, baseType: !2254, size: 384, align: 8, offset: 328)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 384, align: 8, elements: !2255)
!2255 = !{!2256}
!2256 = !DISubrange(count: 48)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res", scope: !2239, file: !2202, line: 76, baseType: !1024, size: 32, align: 32, offset: 736)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples", scope: !2239, file: !2202, line: 83, baseType: !2259, size: 73728, align: 32, offset: 768)
!2259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 73728, align: 32, elements: !2260)
!2260 = !{!2261}
!2261 = !DISubrange(count: 2304)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "analysis_filterbank_samples", scope: !2239, file: !2202, line: 84, baseType: !2263, size: 41984, align: 32, offset: 74496)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 41984, align: 32, elements: !2264)
!2264 = !{!2265}
!2265 = !DISubrange(count: 1312)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples_offset", scope: !2239, file: !2202, line: 85, baseType: !1023, size: 32, align: 32, offset: 116480)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "e_a", scope: !2239, file: !2202, line: 87, baseType: !2268, size: 64, align: 32, offset: 116512)
!2268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 64, align: 32, elements: !1807)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "bw_array", scope: !2239, file: !2202, line: 89, baseType: !2270, size: 160, align: 32, offset: 116576)
!2270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 160, align: 32, elements: !2229)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "W", scope: !2239, file: !2202, line: 91, baseType: !2272, size: 131072, align: 32, offset: 116736)
!2272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 131072, align: 32, elements: !2273)
!2273 = !{!1808, !2156, !2156, !1808}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "Ypos", scope: !2239, file: !2202, line: 93, baseType: !1023, size: 32, align: 32, offset: 247808)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "Y", scope: !2239, file: !2202, line: 94, baseType: !2276, size: 311296, align: 32, offset: 247936)
!2276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 311296, align: 32, elements: !2277)
!2277 = !{!1808, !2278, !2279, !1808}
!2278 = !DISubrange(count: 38)
!2279 = !DISubrange(count: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "g_temp", scope: !2239, file: !2202, line: 95, baseType: !2281, size: 64512, align: 32, offset: 559232)
!2281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 64512, align: 32, elements: !2282)
!2282 = !{!2283, !2256}
!2283 = !DISubrange(count: 42)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "q_temp", scope: !2239, file: !2202, line: 96, baseType: !2281, size: 64512, align: 32, offset: 623744)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "s_indexmapped", scope: !2239, file: !2202, line: 97, baseType: !2286, size: 3072, align: 8, offset: 688256)
!2286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 3072, align: 8, elements: !2287)
!2287 = !{!1192, !2256}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs_q", scope: !2239, file: !2202, line: 99, baseType: !2289, size: 2304, align: 8, offset: 691328)
!2289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 2304, align: 8, elements: !2290)
!2290 = !{!1840, !2256}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs", scope: !2239, file: !2202, line: 100, baseType: !2292, size: 9216, align: 32, offset: 693632)
!2292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 9216, align: 32, elements: !2290)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs_q", scope: !2239, file: !2202, line: 102, baseType: !2294, size: 120, align: 8, offset: 702848)
!2294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 120, align: 8, elements: !2295)
!2295 = !{!1825, !2230}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs", scope: !2239, file: !2202, line: 103, baseType: !2297, size: 480, align: 32, offset: 702976)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 480, align: 32, elements: !2295)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "t_env", scope: !2239, file: !2202, line: 105, baseType: !1918, size: 64, align: 8, offset: 703456)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "t_env_num_env_old", scope: !2239, file: !2202, line: 107, baseType: !1071, size: 8, align: 8, offset: 703520)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "t_q", scope: !2239, file: !2202, line: 109, baseType: !2301, size: 24, align: 8, offset: 703528)
!2301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 24, align: 8, elements: !2302)
!2302 = !{!1825}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexnoise", scope: !2239, file: !2202, line: 110, baseType: !1024, size: 32, align: 32, offset: 703552)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexsine", scope: !2239, file: !2202, line: 111, baseType: !1024, size: 32, align: 32, offset: 703584)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2203, file: !2202, line: 167, baseType: !2306, size: 1072896, align: 128, offset: 1408256)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSContext", file: !2307, line: 79, baseType: !2308)
!2307 = !DIFile(filename: "libavcodec/aacps.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSContext", file: !2307, line: 41, size: 1072896, align: 128, elements: !2309)
!2309 = !{!2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2326, !2330, !2331, !2332, !2333, !2334, !2335, !2339, !2344, !2349, !2352, !2353, !2354, !2357, !2358, !2359, !2360, !2363, !2364, !2366, !2367}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2308, file: !2307, line: 42, baseType: !1023, size: 32, align: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "enable_iid", scope: !2308, file: !2307, line: 43, baseType: !1023, size: 32, align: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "iid_quant", scope: !2308, file: !2307, line: 44, baseType: !1023, size: 32, align: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "nr_iid_par", scope: !2308, file: !2307, line: 45, baseType: !1023, size: 32, align: 32, offset: 96)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ipdopd_par", scope: !2308, file: !2307, line: 46, baseType: !1023, size: 32, align: 32, offset: 128)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "enable_icc", scope: !2308, file: !2307, line: 47, baseType: !1023, size: 32, align: 32, offset: 160)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "icc_mode", scope: !2308, file: !2307, line: 48, baseType: !1023, size: 32, align: 32, offset: 192)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "nr_icc_par", scope: !2308, file: !2307, line: 49, baseType: !1023, size: 32, align: 32, offset: 224)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ext", scope: !2308, file: !2307, line: 50, baseType: !1023, size: 32, align: 32, offset: 256)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "frame_class", scope: !2308, file: !2307, line: 51, baseType: !1023, size: 32, align: 32, offset: 288)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "num_env_old", scope: !2308, file: !2307, line: 52, baseType: !1023, size: 32, align: 32, offset: 320)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "num_env", scope: !2308, file: !2307, line: 53, baseType: !1023, size: 32, align: 32, offset: 352)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ipdopd", scope: !2308, file: !2307, line: 54, baseType: !1023, size: 32, align: 32, offset: 384)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "border_position", scope: !2308, file: !2307, line: 55, baseType: !2324, size: 192, align: 32, offset: 416)
!2324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 192, align: 32, elements: !2325)
!2325 = !{!1840}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "iid_par", scope: !2308, file: !2307, line: 56, baseType: !2327, size: 1360, align: 8, offset: 608)
!2327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1267, size: 1360, align: 8, elements: !2328)
!2328 = !{!2230, !2329}
!2329 = !DISubrange(count: 34)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "icc_par", scope: !2308, file: !2307, line: 57, baseType: !2327, size: 1360, align: 8, offset: 1968)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_par", scope: !2308, file: !2307, line: 59, baseType: !2327, size: 1360, align: 8, offset: 3328)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "opd_par", scope: !2308, file: !2307, line: 60, baseType: !2327, size: 1360, align: 8, offset: 4688)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands", scope: !2308, file: !2307, line: 61, baseType: !1023, size: 32, align: 32, offset: 6048)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands_old", scope: !2308, file: !2307, line: 62, baseType: !1023, size: 32, align: 32, offset: 6080)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !2308, file: !2307, line: 64, baseType: !2336, size: 14080, align: 32, offset: 6144)
!2336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 14080, align: 32, elements: !2337)
!2337 = !{!2230, !2338, !1808}
!2338 = !DISubrange(count: 44)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !2308, file: !2307, line: 65, baseType: !2340, size: 267904, align: 32, offset: 20224)
!2340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 267904, align: 32, elements: !2341)
!2341 = !{!2342, !2343, !1808}
!2342 = !DISubrange(count: 91)
!2343 = !DISubrange(count: 46)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "ap_delay", scope: !2308, file: !2307, line: 66, baseType: !2345, size: 355200, align: 32, offset: 288128)
!2345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 355200, align: 32, elements: !2346)
!2346 = !{!2347, !1825, !2348, !1808}
!2347 = !DISubrange(count: 50)
!2348 = !DISubrange(count: 37)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_nrg", scope: !2308, file: !2307, line: 67, baseType: !2350, size: 1088, align: 32, offset: 643328)
!2350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 1088, align: 32, elements: !2351)
!2351 = !{!2329}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "power_smooth", scope: !2308, file: !2307, line: 68, baseType: !2350, size: 1088, align: 32, offset: 644480)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_diff_smooth", scope: !2308, file: !2307, line: 69, baseType: !2350, size: 1088, align: 32, offset: 645632)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "H11", scope: !2308, file: !2307, line: 70, baseType: !2355, size: 13056, align: 32, offset: 646784)
!2355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 13056, align: 32, elements: !2356)
!2356 = !{!1808, !1840, !2329}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "H12", scope: !2308, file: !2307, line: 71, baseType: !2355, size: 13056, align: 32, offset: 659840)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "H21", scope: !2308, file: !2307, line: 72, baseType: !2355, size: 13056, align: 32, offset: 672896)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "H22", scope: !2308, file: !2307, line: 73, baseType: !2355, size: 13056, align: 32, offset: 685952)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "Lbuf", scope: !2308, file: !2307, line: 74, baseType: !2361, size: 186368, align: 32, offset: 699008)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 186368, align: 32, elements: !2362)
!2362 = !{!2342, !2156, !1808}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "Rbuf", scope: !2308, file: !2307, line: 75, baseType: !2361, size: 186368, align: 32, offset: 885376)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "opd_hist", scope: !2308, file: !2307, line: 76, baseType: !2365, size: 272, align: 8, offset: 1071744)
!2365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1267, size: 272, align: 8, elements: !2351)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_hist", scope: !2308, file: !2307, line: 77, baseType: !2365, size: 272, align: 8, offset: 1072016)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !2308, file: !2307, line: 78, baseType: !2368, size: 512, align: 64, offset: 1072320)
!2368 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSDSPContext", file: !2369, line: 52, baseType: !2370)
!2369 = !DIFile(filename: "libavcodec/aacpsdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSDSPContext", file: !2369, line: 32, size: 512, align: 64, elements: !2371)
!2371 = !{!2372, !2379, !2385, !2393, !2403, !2407, !2415}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "add_squares", scope: !2370, file: !2369, line: 33, baseType: !2373, size: 64, align: 64)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64, align: 64)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{null, !2036, !2376, !1023}
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64, align: 64)
!2377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2378, size: 64, align: 32, elements: !1807)
!2378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1929)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "mul_pair_single", scope: !2370, file: !2369, line: 34, baseType: !2380, size: 64, align: 64, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64, align: 64)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{null, !2383, !2383, !2036, !1023}
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64, align: 64)
!2384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 64, align: 32, elements: !1807)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis", scope: !2370, file: !2369, line: 36, baseType: !2386, size: 64, align: 64, offset: 128)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64, align: 64)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{null, !2383, !2383, !2389, !2392, !1023}
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64, align: 64)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2378, size: 512, align: 32, elements: !2391)
!2391 = !{!1192, !1808}
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1276, line: 149, baseType: !1022)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis_ileave", scope: !2370, file: !2369, line: 39, baseType: !2394, size: 64, align: 64, offset: 192)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64, align: 64)
!2395 = !DISubroutineType(types: !2396)
!2396 = !{null, !2397, !2400, !1023, !1023}
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64, align: 64)
!2398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 2048, align: 32, elements: !2399)
!2399 = !{!2156, !1808}
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64, align: 64)
!2401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 77824, align: 32, elements: !2402)
!2402 = !{!2278, !2279}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_synthesis_deint", scope: !2370, file: !2369, line: 41, baseType: !2404, size: 64, align: 64, offset: 256)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64, align: 64)
!2405 = !DISubroutineType(types: !2406)
!2406 = !{null, !2400, !2397, !1023, !1023}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "decorrelate", scope: !2370, file: !2369, line: 43, baseType: !2408, size: 64, align: 64, offset: 320)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64, align: 64)
!2409 = !DISubroutineType(types: !2410)
!2410 = !{null, !2383, !2383, !2411, !2414, !2376, !2414, !1929, !1023}
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 64, align: 64)
!2412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 2368, align: 32, elements: !2413)
!2413 = !{!2348, !1808}
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64, align: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_interpolate", scope: !2370, file: !2369, line: 49, baseType: !2416, size: 128, align: 64, offset: 384)
!2416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2417, size: 128, align: 64, elements: !1807)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64, align: 64)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{null, !2383, !2383, !2420, !2420, !1023}
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64, align: 64)
!2421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 128, align: 32, elements: !1291)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2203, file: !2202, line: 169, baseType: !2232, size: 64, align: 32, offset: 2481152)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "n_q", scope: !2203, file: !2202, line: 171, baseType: !2228, size: 32, align: 32, offset: 2481216)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "n_lim", scope: !2203, file: !2202, line: 173, baseType: !2228, size: 32, align: 32, offset: 2481248)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "f_master", scope: !2203, file: !2202, line: 175, baseType: !2426, size: 784, align: 16, offset: 2481280)
!2426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1491, size: 784, align: 16, elements: !2427)
!2427 = !{!2428}
!2428 = !DISubrange(count: 49)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelow", scope: !2203, file: !2202, line: 177, baseType: !2430, size: 400, align: 16, offset: 2482064)
!2430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1491, size: 400, align: 16, elements: !2431)
!2431 = !{!2432}
!2432 = !DISubrange(count: 25)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablehigh", scope: !2203, file: !2202, line: 179, baseType: !2426, size: 784, align: 16, offset: 2482464)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablenoise", scope: !2203, file: !2202, line: 181, baseType: !2435, size: 96, align: 16, offset: 2483248)
!2435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1491, size: 96, align: 16, elements: !2325)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelim", scope: !2203, file: !2202, line: 183, baseType: !2437, size: 480, align: 16, offset: 2483344)
!2437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1491, size: 480, align: 16, elements: !2438)
!2438 = !{!2439}
!2439 = !DISubrange(count: 30)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "num_patches", scope: !2203, file: !2202, line: 184, baseType: !2228, size: 32, align: 32, offset: 2483840)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "patch_num_subbands", scope: !2203, file: !2202, line: 185, baseType: !2442, size: 48, align: 8, offset: 2483872)
!2442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 48, align: 8, elements: !2325)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "patch_start_subband", scope: !2203, file: !2202, line: 186, baseType: !2442, size: 48, align: 8, offset: 2483920)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "X_low", scope: !2203, file: !2202, line: 188, baseType: !2445, size: 81920, align: 32, offset: 2483968)
!2445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 81920, align: 32, elements: !2446)
!2446 = !{!2156, !1934, !1808}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "X_high", scope: !2203, file: !2202, line: 190, baseType: !2448, size: 163840, align: 32, offset: 2565888)
!2448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 163840, align: 32, elements: !2449)
!2449 = !{!2279, !1934, !1808}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "X", scope: !2203, file: !2202, line: 192, baseType: !2451, size: 311296, align: 32, offset: 2729728)
!2451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 311296, align: 32, elements: !2452)
!2452 = !{!1808, !1808, !2278, !2279}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "alpha0", scope: !2203, file: !2202, line: 194, baseType: !2454, size: 4096, align: 32, offset: 3041024)
!2454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 4096, align: 32, elements: !2455)
!2455 = !{!2279, !1808}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "alpha1", scope: !2203, file: !2202, line: 196, baseType: !2454, size: 4096, align: 32, offset: 3045120)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "e_origmapped", scope: !2203, file: !2202, line: 198, baseType: !2458, size: 10752, align: 32, offset: 3049216)
!2458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 10752, align: 32, elements: !2459)
!2459 = !{!1813, !2256}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "q_mapped", scope: !2203, file: !2202, line: 200, baseType: !2458, size: 10752, align: 32, offset: 3059968)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "s_mapped", scope: !2203, file: !2202, line: 202, baseType: !2462, size: 2688, align: 8, offset: 3070720)
!2462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 2688, align: 8, elements: !2459)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "e_curr", scope: !2203, file: !2202, line: 204, baseType: !2458, size: 10752, align: 32, offset: 3073408)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "q_m", scope: !2203, file: !2202, line: 206, baseType: !2458, size: 10752, align: 32, offset: 3084160)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "s_m", scope: !2203, file: !2202, line: 208, baseType: !2458, size: 10752, align: 32, offset: 3094912)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2203, file: !2202, line: 209, baseType: !2458, size: 10752, align: 32, offset: 3105664)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_filter_scratch", scope: !2203, file: !2202, line: 210, baseType: !2468, size: 10240, align: 32, offset: 3116544)
!2468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 10240, align: 32, elements: !2469)
!2469 = !{!2230, !2279}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ana", scope: !2203, file: !2202, line: 211, baseType: !2072, size: 896, align: 64, offset: 3126784)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2203, file: !2202, line: 212, baseType: !2072, size: 896, align: 64, offset: 3127680)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !2203, file: !2202, line: 213, baseType: !2473, size: 896, align: 64, offset: 3128576)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRDSPContext", file: !2474, line: 45, baseType: !2475)
!2474 = !DIFile(filename: "libavcodec/sbrdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRDSPContext", file: !2474, line: 28, size: 896, align: 64, elements: !2476)
!2476 = !{!2477, !2481, !2485, !2486, !2487, !2491, !2495, !2499, !2506, !2510, !2520}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "sum64x5", scope: !2475, file: !2474, line: 29, baseType: !2478, size: 64, align: 64)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64, align: 64)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{null, !2036}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square", scope: !2475, file: !2474, line: 30, baseType: !2482, size: 64, align: 64, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64, align: 64)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!2018, !2383, !1023}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "neg_odd_64", scope: !2475, file: !2474, line: 31, baseType: !2478, size: 64, align: 64, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_pre_shuffle", scope: !2475, file: !2474, line: 32, baseType: !2478, size: 64, align: 64, offset: 192)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_post_shuffle", scope: !2475, file: !2474, line: 33, baseType: !2488, size: 64, align: 64, offset: 256)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64, align: 64)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{null, !2383, !2414}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_neg", scope: !2475, file: !2474, line: 34, baseType: !2492, size: 64, align: 64, offset: 320)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64, align: 64)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{null, !2036, !2414}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_bfly", scope: !2475, file: !2474, line: 35, baseType: !2496, size: 64, align: 64, offset: 384)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64, align: 64)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{null, !2036, !2414, !2414}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "autocorrelate", scope: !2475, file: !2474, line: 36, baseType: !2500, size: 64, align: 64, offset: 448)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64, align: 64)
!2501 = !DISubroutineType(types: !2502)
!2502 = !{null, !2376, !2503}
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64, align: 64)
!2504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 128, align: 32, elements: !2505)
!2505 = !{!1808, !1808}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "hf_gen", scope: !2475, file: !2474, line: 37, baseType: !2507, size: 64, align: 64, offset: 512)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64, align: 64)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{null, !2383, !2376, !2414, !2414, !1929, !1023, !1023}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "hf_g_filt", scope: !2475, file: !2474, line: 40, baseType: !2511, size: 64, align: 64, offset: 576)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64, align: 64)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{null, !2383, !2514, !2517, !1023, !2519}
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64, align: 64)
!2515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2378, size: 2560, align: 32, elements: !2516)
!2516 = !{!1934, !1808}
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64, align: 64)
!2518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2018)
!2519 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !1021, line: 119, baseType: !1022)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "hf_apply_noise", scope: !2475, file: !2474, line: 42, baseType: !2521, size: 256, align: 64, offset: 640)
!2521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2522, size: 256, align: 64, elements: !1291)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64, align: 64)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{null, !2383, !2517, !2517, !1023, !1023, !1023}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2203, file: !2202, line: 214, baseType: !2526, size: 256, align: 64, offset: 3129472)
!2526 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACSBRContext", file: !2202, line: 134, baseType: !2527)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACSBRContext", file: !2202, line: 120, size: 256, align: 64, elements: !2528)
!2528 = !{!2529, !2671, !2677, !2683}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_lf_gen", scope: !2527, file: !2202, line: 121, baseType: !2530, size: 64, align: 64)
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64, align: 64)
!2531 = !DISubroutineType(types: !2532)
!2532 = !{!1023, !2533, !2665, !2666, !2668, !1023}
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64, align: 64)
!2534 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACContext", file: !2202, line: 37, baseType: !2535)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACContext", file: !66, line: 293, size: 62208, align: 256, elements: !2536)
!2536 = !{!2537, !2538, !2539, !2540, !2541, !2558, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2600, !2601, !2602, !2603, !2604, !2606, !2607, !2608, !2610, !2638, !2639, !2640, !2641, !2645, !2646, !2652, !2656, !2657, !2661}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2535, file: !66, line: 294, baseType: !2047, size: 64, align: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2535, file: !66, line: 295, baseType: !1162, size: 64, align: 64, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !2535, file: !66, line: 296, baseType: !1184, size: 64, align: 64, offset: 128)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "is_saved", scope: !2535, file: !66, line: 298, baseType: !1023, size: 32, align: 32, offset: 192)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "che_drc", scope: !2535, file: !66, line: 299, baseType: !2542, size: 3808, align: 32, offset: 224)
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicRangeControl", file: !66, line: 222, baseType: !2543)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicRangeControl", file: !66, line: 211, size: 3808, align: 32, elements: !2544)
!2544 = !{!2545, !2546, !2550, !2551, !2554, !2555, !2556, !2557}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "pce_instance_tag", scope: !2543, file: !66, line: 212, baseType: !1023, size: 32, align: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_sgn", scope: !2543, file: !66, line: 213, baseType: !2547, size: 544, align: 32, offset: 32)
!2547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 544, align: 32, elements: !2548)
!2548 = !{!2549}
!2549 = !DISubrange(count: 17)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_ctl", scope: !2543, file: !66, line: 214, baseType: !2547, size: 544, align: 32, offset: 576)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_mask", scope: !2543, file: !66, line: 215, baseType: !2552, size: 2048, align: 32, offset: 1120)
!2552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 2048, align: 32, elements: !2553)
!2553 = !{!2279}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "band_incr", scope: !2543, file: !66, line: 216, baseType: !1023, size: 32, align: 32, offset: 3168)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation_scheme", scope: !2543, file: !66, line: 217, baseType: !1023, size: 32, align: 32, offset: 3200)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "band_top", scope: !2543, file: !66, line: 218, baseType: !2547, size: 544, align: 32, offset: 3232)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ref_level", scope: !2543, file: !66, line: 219, baseType: !1023, size: 32, align: 32, offset: 3776)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "che", scope: !2535, file: !66, line: 305, baseType: !2559, size: 4096, align: 64, offset: 4032)
!2559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 4096, align: 64, elements: !2560)
!2560 = !{!1292, !1797}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "tag_che_map", scope: !2535, file: !66, line: 306, baseType: !2559, size: 4096, align: 64, offset: 8128)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "tags_mapped", scope: !2535, file: !66, line: 307, baseType: !1023, size: 32, align: 32, offset: 12224)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "warned_remapping_once", scope: !2535, file: !66, line: 308, baseType: !1023, size: 32, align: 32, offset: 12256)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mdct", scope: !2535, file: !66, line: 316, baseType: !2000, size: 32768, align: 32, offset: 12288)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2535, file: !66, line: 323, baseType: !2072, size: 896, align: 64, offset: 45056)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_small", scope: !2535, file: !66, line: 324, baseType: !2072, size: 896, align: 64, offset: 45952)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ld", scope: !2535, file: !66, line: 325, baseType: !2072, size: 896, align: 64, offset: 46848)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ltp", scope: !2535, file: !66, line: 326, baseType: !2072, size: 896, align: 64, offset: 47744)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "mdct120", scope: !2535, file: !66, line: 330, baseType: !2570, size: 64, align: 64, offset: 48640)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64, align: 64)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDCT15Context", file: !2572, line: 54, baseType: !2573)
!2572 = !DIFile(filename: "libavcodec/mdct15.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDCT15Context", file: !2572, line: 28, size: 5632, align: 256, elements: !2574)
!2574 = !{!2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2586, !2590, !2594, !2599}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "fft_n", scope: !2573, file: !2572, line: 29, baseType: !1023, size: 32, align: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "len2", scope: !2573, file: !2572, line: 30, baseType: !1023, size: 32, align: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "len4", scope: !2573, file: !2572, line: 31, baseType: !1023, size: 32, align: 32, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !2573, file: !2572, line: 32, baseType: !1023, size: 32, align: 32, offset: 96)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "pfa_prereindex", scope: !2573, file: !2572, line: 33, baseType: !1454, size: 64, align: 64, offset: 128)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "pfa_postreindex", scope: !2573, file: !2572, line: 34, baseType: !1454, size: 64, align: 64, offset: 192)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "ptwo_fft", scope: !2573, file: !2572, line: 36, baseType: !2072, size: 896, align: 64, offset: 256)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !2573, file: !2572, line: 37, baseType: !2080, size: 64, align: 64, offset: 1152)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "twiddle_exptab", scope: !2573, file: !2572, line: 38, baseType: !2080, size: 64, align: 64, offset: 1216)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "exptab", scope: !2573, file: !2572, line: 40, baseType: !2585, size: 4096, align: 32, offset: 1280)
!2585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2081, size: 4096, align: 32, elements: !2553)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "fft15", scope: !2573, file: !2572, line: 43, baseType: !2587, size: 64, align: 64, offset: 5376)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64, align: 64)
!2588 = !DISubroutineType(types: !2589)
!2589 = !{null, !2080, !2080, !2080, !2392}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "postreindex", scope: !2573, file: !2572, line: 46, baseType: !2591, size: 64, align: 64, offset: 5440)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64, align: 64)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{null, !2080, !2080, !2080, !1454, !2392}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2573, file: !2572, line: 49, baseType: !2595, size: 64, align: 64, offset: 5504)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64, align: 64)
!2596 = !DISubroutineType(types: !2597)
!2597 = !{null, !2598, !1869, !1870, !2392}
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64, align: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2573, file: !2572, line: 52, baseType: !2595, size: 64, align: 64, offset: 5568)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "mdct480", scope: !2535, file: !66, line: 331, baseType: !2570, size: 64, align: 64, offset: 48704)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "mdct960", scope: !2535, file: !66, line: 332, baseType: !2570, size: 64, align: 64, offset: 48768)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !2535, file: !66, line: 333, baseType: !1860, size: 64, align: 64, offset: 48832)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "random_state", scope: !2535, file: !66, line: 335, baseType: !1023, size: 32, align: 32, offset: 48896)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "output_element", scope: !2535, file: !66, line: 342, baseType: !2605, size: 4096, align: 64, offset: 48960)
!2605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1903, size: 4096, align: 64, elements: !2553)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "force_dmono_mode", scope: !2535, file: !66, line: 350, baseType: !1023, size: 32, align: 32, offset: 53056)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "dmono_mode", scope: !2535, file: !66, line: 351, baseType: !1023, size: 32, align: 32, offset: 53088)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2535, file: !66, line: 354, baseType: !2609, size: 4096, align: 32, offset: 53248)
!2609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 4096, align: 32, elements: !1982)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "oc", scope: !2535, file: !66, line: 356, baseType: !2611, size: 4224, align: 64, offset: 57344)
!2611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2612, size: 4224, align: 64, elements: !1807)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputConfiguration", file: !66, line: 130, baseType: !2613)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OutputConfiguration", file: !66, line: 123, size: 2112, align: 64, elements: !2614)
!2614 = !{!2615, !2631, !2634, !2635, !2636, !2637}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "m4ac", scope: !2613, file: !66, line: 124, baseType: !2616, size: 384, align: 32)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPEG4AudioConfig", file: !974, line: 46, baseType: !2617)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPEG4AudioConfig", file: !974, line: 33, size: 384, align: 32, elements: !2618)
!2618 = !{!2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !2617, file: !974, line: 34, baseType: !1023, size: 32, align: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !2617, file: !974, line: 35, baseType: !1023, size: 32, align: 32, offset: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2617, file: !974, line: 36, baseType: !1023, size: 32, align: 32, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !2617, file: !974, line: 37, baseType: !1023, size: 32, align: 32, offset: 96)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2617, file: !974, line: 38, baseType: !1023, size: 32, align: 32, offset: 128)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ext_object_type", scope: !2617, file: !974, line: 39, baseType: !1023, size: 32, align: 32, offset: 160)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sampling_index", scope: !2617, file: !974, line: 40, baseType: !1023, size: 32, align: 32, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sample_rate", scope: !2617, file: !974, line: 41, baseType: !1023, size: 32, align: 32, offset: 224)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ext_chan_config", scope: !2617, file: !974, line: 42, baseType: !1023, size: 32, align: 32, offset: 256)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2617, file: !974, line: 43, baseType: !1023, size: 32, align: 32, offset: 288)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2617, file: !974, line: 44, baseType: !1023, size: 32, align: 32, offset: 320)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length_short", scope: !2617, file: !974, line: 45, baseType: !1023, size: 32, align: 32, offset: 352)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map", scope: !2613, file: !66, line: 125, baseType: !2632, size: 1536, align: 8, offset: 384)
!2632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 1536, align: 8, elements: !2633)
!2633 = !{!2279, !1825}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map_tags", scope: !2613, file: !66, line: 126, baseType: !1023, size: 32, align: 32, offset: 1920)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2613, file: !66, line: 127, baseType: !1023, size: 32, align: 32, offset: 1952)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !2613, file: !66, line: 128, baseType: !1068, size: 64, align: 64, offset: 1984)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2613, file: !66, line: 129, baseType: !959, size: 32, align: 32, offset: 2048)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "warned_num_aac_frames", scope: !2535, file: !66, line: 357, baseType: !1023, size: 32, align: 32, offset: 61568)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "warned_960_sbr", scope: !2535, file: !66, line: 358, baseType: !1023, size: 32, align: 32, offset: 61600)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "warned_gain_control", scope: !2535, file: !66, line: 360, baseType: !1023, size: 32, align: 32, offset: 61632)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_and_windowing", scope: !2535, file: !66, line: 363, baseType: !2642, size: 64, align: 64, offset: 61696)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64, align: 64)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{null, !2533, !1903}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "apply_ltp", scope: !2535, file: !66, line: 364, baseType: !2642, size: 64, align: 64, offset: 61760)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "apply_tns", scope: !2535, file: !66, line: 365, baseType: !2647, size: 64, align: 64, offset: 61824)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64, align: 64)
!2648 = !DISubroutineType(types: !2649)
!2649 = !{null, !2036, !2650, !2651, !1023}
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64, align: 64)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64, align: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "windowing_and_mdct_ltp", scope: !2535, file: !66, line: 367, baseType: !2653, size: 64, align: 64, offset: 61888)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64, align: 64)
!2654 = !DISubroutineType(types: !2655)
!2655 = !{null, !2533, !2036, !2036, !2651}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "update_ltp", scope: !2535, file: !66, line: 369, baseType: !2642, size: 64, align: 64, offset: 61952)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "vector_pow43", scope: !2535, file: !66, line: 370, baseType: !2658, size: 64, align: 64, offset: 62016)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64, align: 64)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{null, !1454, !1023}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "subband_scale", scope: !2535, file: !66, line: 371, baseType: !2662, size: 64, align: 64, offset: 62080)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64, align: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{null, !1454, !1454, !1023, !1023, !1023, !1031}
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64, align: 64)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64, align: 64)
!2667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 2560, align: 32, elements: !2516)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64, align: 64)
!2669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2378, size: 65536, align: 32, elements: !2670)
!2670 = !{!2156, !2156, !1808}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_assemble", scope: !2527, file: !2202, line: 124, baseType: !2672, size: 64, align: 64, offset: 64)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64, align: 64)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{null, !2675, !2514, !2665, !2676, !1060}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64, align: 64)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64, align: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_x_gen", scope: !2527, file: !2202, line: 128, baseType: !2678, size: 64, align: 64, offset: 128)
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 64, align: 64)
!2679 = !DISubroutineType(types: !2680)
!2680 = !{!1023, !2665, !2400, !2681, !2681, !2514, !1023}
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64, align: 64)
!2682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2378, size: 4096, align: 32, elements: !2455)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_inverse_filter", scope: !2527, file: !2202, line: 131, baseType: !2684, size: 64, align: 64, offset: 192)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64, align: 64)
!2685 = !DISubroutineType(types: !2686)
!2686 = !{null, !2687, !2383, !2383, !2514, !1023}
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 64, align: 64)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "psy", scope: !2044, file: !967, line: 395, baseType: !2689, size: 640, align: 64, offset: 308224)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyContext", file: !2690, line: 109, baseType: !2691)
!2690 = !DIFile(filename: "libavcodec/psymodel.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyContext", file: !2690, line: 89, size: 640, align: 64, elements: !2692)
!2692 = !{!2693, !2694, !2731, !2746, !2756, !2757, !2758, !2759, !2760, !2761, !2767}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2691, file: !2690, line: 90, baseType: !1162, size: 64, align: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !2691, file: !2690, line: 91, baseType: !2695, size: 64, align: 64, offset: 64)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64, align: 64)
!2696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2697)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyModel", file: !2690, line: 114, size: 320, align: 64, elements: !2698)
!2698 = !{!2699, !2700, !2705, !2720, !2727}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2697, file: !2690, line: 115, baseType: !1040, size: 64, align: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2697, file: !2690, line: 116, baseType: !2701, size: 64, align: 64, offset: 64)
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 64, align: 64)
!2702 = !DISubroutineType(types: !2703)
!2703 = !{!1023, !2704}
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64, align: 64)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !2697, file: !2690, line: 129, baseType: !2706, size: 64, align: 64, offset: 128)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64, align: 64)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{!2709, !2704, !1870, !1870, !1023, !1023}
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyWindowInfo", file: !2690, line: 84, baseType: !2710)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyWindowInfo", file: !2690, line: 77, size: 768, align: 64, elements: !2711)
!2711 = !{!2712, !2714, !2715, !2716, !2717, !2719}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "window_type", scope: !2710, file: !2690, line: 78, baseType: !2713, size: 96, align: 32)
!2713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 96, align: 32, elements: !2302)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "window_shape", scope: !2710, file: !2690, line: 79, baseType: !1023, size: 32, align: 32, offset: 96)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "num_windows", scope: !2710, file: !2690, line: 80, baseType: !1023, size: 32, align: 32, offset: 128)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "grouping", scope: !2710, file: !2690, line: 81, baseType: !1194, size: 256, align: 32, offset: 160)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "clipping", scope: !2710, file: !2690, line: 82, baseType: !2718, size: 256, align: 32, offset: 416)
!2718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 256, align: 32, elements: !1191)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "window_sizes", scope: !2710, file: !2690, line: 83, baseType: !1454, size: 64, align: 64, offset: 704)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "analyze", scope: !2697, file: !2690, line: 139, baseType: !2721, size: 64, align: 64, offset: 192)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64, align: 64)
!2722 = !DISubroutineType(types: !2723)
!2723 = !{null, !2704, !1023, !2724, !2725}
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64, align: 64)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64, align: 64)
!2726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2709)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2697, file: !2690, line: 141, baseType: !2728, size: 64, align: 64, offset: 256)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64, align: 64)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{null, !2704}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !2691, file: !2690, line: 93, baseType: !2732, size: 64, align: 64, offset: 128)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64, align: 64)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyChannel", file: !2690, line: 63, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyChannel", file: !2690, line: 60, size: 16416, align: 32, elements: !2735)
!2735 = !{!2736, !2745}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "psy_bands", scope: !2734, file: !2690, line: 61, baseType: !2737, size: 16384, align: 32)
!2737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2738, size: 16384, align: 32, elements: !1982)
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyBand", file: !2690, line: 55, baseType: !2739)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyBand", file: !2690, line: 50, size: 128, align: 32, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2739, file: !2690, line: 51, baseType: !1023, size: 32, align: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !2739, file: !2690, line: 52, baseType: !1032, size: 32, align: 32, offset: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "threshold", scope: !2739, file: !2690, line: 53, baseType: !1032, size: 32, align: 32, offset: 64)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !2739, file: !2690, line: 54, baseType: !1032, size: 32, align: 32, offset: 96)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "entropy", scope: !2734, file: !2690, line: 62, baseType: !1032, size: 32, align: 32, offset: 16384)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2691, file: !2690, line: 94, baseType: !2747, size: 64, align: 64, offset: 192)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 64, align: 64)
!2748 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyChannelGroup", file: !2690, line: 72, baseType: !2749)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyChannelGroup", file: !2690, line: 68, size: 2368, align: 64, elements: !2750)
!2750 = !{!2751, !2754, !2755}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !2749, file: !2690, line: 69, baseType: !2752, size: 1280, align: 64)
!2752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2732, size: 1280, align: 64, elements: !2753)
!2753 = !{!1969}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "num_ch", scope: !2749, file: !2690, line: 70, baseType: !1071, size: 8, align: 8, offset: 1280)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "coupling", scope: !2749, file: !2690, line: 71, baseType: !1994, size: 1024, align: 8, offset: 1288)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "num_groups", scope: !2691, file: !2690, line: 95, baseType: !1023, size: 32, align: 32, offset: 256)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !2691, file: !2690, line: 96, baseType: !1023, size: 32, align: 32, offset: 288)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "bands", scope: !2691, file: !2690, line: 98, baseType: !1196, size: 64, align: 64, offset: 320)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "num_bands", scope: !2691, file: !2690, line: 99, baseType: !1454, size: 64, align: 64, offset: 384)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "num_lens", scope: !2691, file: !2690, line: 100, baseType: !1023, size: 32, align: 32, offset: 448)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "bitres", scope: !2691, file: !2690, line: 106, baseType: !2762, size: 96, align: 32, offset: 480)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2691, file: !2690, line: 102, size: 96, align: 32, elements: !2763)
!2763 = !{!2764, !2765, !2766}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2762, file: !2690, line: 103, baseType: !1023, size: 32, align: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2762, file: !2690, line: 104, baseType: !1023, size: 32, align: 32, offset: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2762, file: !2690, line: 105, baseType: !1023, size: 32, align: 32, offset: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "model_priv_data", scope: !2691, file: !2690, line: 108, baseType: !1031, size: 64, align: 64, offset: 576)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "psypp", scope: !2044, file: !967, line: 396, baseType: !2769, size: 64, align: 64, offset: 308864)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64, align: 64)
!2770 = !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyPreprocessContext", file: !2690, line: 183, flags: DIFlagFwdDecl)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "coder", scope: !2044, file: !967, line: 397, baseType: !2772, size: 64, align: 64, offset: 308928)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64, align: 64)
!2773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2774)
!2774 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACCoefficientsEncoder", file: !967, line: 80, baseType: !2775)
!2775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACCoefficientsEncoder", file: !967, line: 56, size: 1280, align: 64, elements: !2776)
!2776 = !{!2777, !2781, !2785, !2790, !2794, !2798, !2799, !2803, !2804, !2805, !2806, !2807, !2809, !2810, !2814, !2815, !2816, !2817, !2818, !2822}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_quantizers", scope: !2775, file: !967, line: 57, baseType: !2778, size: 64, align: 64)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64, align: 64)
!2779 = !DISubroutineType(types: !2780)
!2780 = !{null, !1162, !2043, !1903, !1853}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "encode_window_bands_info", scope: !2775, file: !967, line: 59, baseType: !2782, size: 64, align: 64, offset: 64)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64, align: 64)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{null, !2043, !1903, !1023, !1023, !1853}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_and_encode_band", scope: !2775, file: !967, line: 61, baseType: !2786, size: 64, align: 64, offset: 128)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64, align: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{null, !2043, !2789, !1870, !1869, !1023, !1023, !1023, !1853, !1023}
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64, align: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "encode_tns_info", scope: !2775, file: !967, line: 63, baseType: !2791, size: 64, align: 64, offset: 192)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 64, align: 64)
!2792 = !DISubroutineType(types: !2793)
!2793 = !{null, !2043, !1903}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "encode_ltp_info", scope: !2775, file: !967, line: 64, baseType: !2795, size: 64, align: 64, offset: 256)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 64, align: 64)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{null, !2043, !1903, !1023}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "encode_main_pred", scope: !2775, file: !967, line: 65, baseType: !2791, size: 64, align: 64, offset: 320)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_common_pred", scope: !2775, file: !967, line: 66, baseType: !2800, size: 64, align: 64, offset: 384)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64, align: 64)
!2801 = !DISubroutineType(types: !2802)
!2802 = !{null, !2043, !2175}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_common_ltp", scope: !2775, file: !967, line: 67, baseType: !2800, size: 64, align: 64, offset: 448)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "apply_main_pred", scope: !2775, file: !967, line: 68, baseType: !2791, size: 64, align: 64, offset: 512)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "apply_tns_filt", scope: !2775, file: !967, line: 69, baseType: !2791, size: 64, align: 64, offset: 576)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "update_ltp", scope: !2775, file: !967, line: 70, baseType: !2791, size: 64, align: 64, offset: 640)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_insert_new_frame", scope: !2775, file: !967, line: 71, baseType: !2808, size: 64, align: 64, offset: 704)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64, align: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "set_special_band_scalefactors", scope: !2775, file: !967, line: 72, baseType: !2791, size: 64, align: 64, offset: 768)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_pns", scope: !2775, file: !967, line: 73, baseType: !2811, size: 64, align: 64, offset: 832)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64, align: 64)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{null, !2043, !1162, !1903}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "mark_pns", scope: !2775, file: !967, line: 74, baseType: !2811, size: 64, align: 64, offset: 896)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_tns", scope: !2775, file: !967, line: 75, baseType: !2791, size: 64, align: 64, offset: 960)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_ltp", scope: !2775, file: !967, line: 76, baseType: !2795, size: 64, align: 64, offset: 1024)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_ms", scope: !2775, file: !967, line: 77, baseType: !2800, size: 64, align: 64, offset: 1088)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_is", scope: !2775, file: !967, line: 78, baseType: !2819, size: 64, align: 64, offset: 1152)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64, align: 64)
!2820 = !DISubroutineType(types: !2821)
!2821 = !{null, !2043, !1162, !2175}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_pred", scope: !2775, file: !967, line: 79, baseType: !2791, size: 64, align: 64, offset: 1216)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "cur_channel", scope: !2044, file: !967, line: 398, baseType: !1023, size: 32, align: 32, offset: 308992)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "random_state", scope: !2044, file: !967, line: 399, baseType: !1023, size: 32, align: 32, offset: 309024)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "lambda", scope: !2044, file: !967, line: 400, baseType: !1032, size: 32, align: 32, offset: 309056)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame_pb_count", scope: !2044, file: !967, line: 401, baseType: !1023, size: 32, align: 32, offset: 309088)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "lambda_sum", scope: !2044, file: !967, line: 402, baseType: !1032, size: 32, align: 32, offset: 309120)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "lambda_count", scope: !2044, file: !967, line: 403, baseType: !1023, size: 32, align: 32, offset: 309152)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "cur_type", scope: !2044, file: !967, line: 404, baseType: !86, size: 32, align: 32, offset: 309184)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "afq", scope: !2044, file: !967, line: 406, baseType: !2831, size: 256, align: 64, offset: 309248)
!2831 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioFrameQueue", file: !2832, line: 39, baseType: !2833)
!2832 = !DIFile(filename: "libavcodec/audio_frame_queue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioFrameQueue", file: !2832, line: 32, size: 256, align: 64, elements: !2834)
!2834 = !{!2835, !2836, !2837, !2838, !2845, !2846}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2833, file: !2832, line: 33, baseType: !1162, size: 64, align: 64)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_delay", scope: !2833, file: !2832, line: 34, baseType: !1023, size: 32, align: 32, offset: 64)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_samples", scope: !2833, file: !2832, line: 35, baseType: !1023, size: 32, align: 32, offset: 96)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2833, file: !2832, line: 36, baseType: !2839, size: 64, align: 64, offset: 128)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64, align: 64)
!2840 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioFrame", file: !2832, line: 30, baseType: !2841)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioFrame", file: !2832, line: 27, size: 128, align: 64, elements: !2842)
!2842 = !{!2843, !2844}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2841, file: !2832, line: 28, baseType: !1020, size: 64, align: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2841, file: !2832, line: 29, baseType: !1023, size: 32, align: 32, offset: 64)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count", scope: !2833, file: !2832, line: 37, baseType: !1024, size: 32, align: 32, offset: 192)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "frame_alloc", scope: !2833, file: !2832, line: 38, baseType: !1024, size: 32, align: 32, offset: 224)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "qcoefs", scope: !2044, file: !967, line: 407, baseType: !2848, size: 3072, align: 32, offset: 309504)
!2848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 3072, align: 32, elements: !2849)
!2849 = !{!2850}
!2850 = !DISubrange(count: 96)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "scoefs", scope: !2044, file: !967, line: 408, baseType: !2852, size: 32768, align: 32, offset: 312576)
!2852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 32768, align: 32, elements: !2001)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_band_cost_cache_generation", scope: !2044, file: !967, line: 410, baseType: !1491, size: 16, align: 16, offset: 345344)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_band_cost_cache", scope: !2044, file: !967, line: 411, baseType: !2855, size: 4194304, align: 32, offset: 345376)
!2855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2856, size: 4194304, align: 32, elements: !2865)
!2856 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACQuantizeBandCostCacheEntry", file: !967, line: 91, baseType: !2857)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACQuantizeBandCostCacheEntry", file: !967, line: 84, size: 128, align: 32, elements: !2858)
!2858 = !{!2859, !2860, !2861, !2862, !2863, !2864}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !2857, file: !967, line: 85, baseType: !1032, size: 32, align: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !2857, file: !967, line: 86, baseType: !1032, size: 32, align: 32, offset: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2857, file: !967, line: 87, baseType: !1023, size: 32, align: 32, offset: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2857, file: !967, line: 88, baseType: !1042, size: 8, align: 8, offset: 96)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "rtz", scope: !2857, file: !967, line: 89, baseType: !1042, size: 8, align: 8, offset: 104)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "generation", scope: !2857, file: !967, line: 90, baseType: !1491, size: 16, align: 16, offset: 112)
!2865 = !{!2866, !1983}
!2866 = !DISubrange(count: 256)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "abs_pow34", scope: !2044, file: !967, line: 413, baseType: !2868, size: 64, align: 64, offset: 4539712)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 64, align: 64)
!2869 = !DISubroutineType(types: !2870)
!2870 = !{null, !1869, !1870, !1061}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "quant_bands", scope: !2044, file: !967, line: 414, baseType: !2872, size: 64, align: 64, offset: 4539776)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64, align: 64)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{null, !1454, !1870, !1870, !1023, !1023, !1023, !1853, !1853}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2044, file: !967, line: 420, baseType: !2876, size: 64, align: 64, offset: 4539840)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2044, file: !967, line: 418, size: 64, align: 64, elements: !2877)
!2877 = !{!2878}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !2876, file: !967, line: 419, baseType: !1869, size: 64, align: 64)
!2879 = !DILocalVariable(name: "s", arg: 1, scope: !2040, file: !1035, line: 126, type: !2043)
!2880 = !DIExpression()
!2881 = !DILocation(line: 126, column: 61, scope: !2040)
!2882 = !DILocation(line: 128, column: 7, scope: !2040)
!2883 = !DILocation(line: 128, column: 10, scope: !2040)
!2884 = !DILocation(line: 128, column: 5, scope: !2040)
!2885 = !DILocation(line: 129, column: 9, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2040, file: !1035, line: 129, column: 9)
!2887 = !DILocation(line: 129, column: 12, scope: !2886)
!2888 = !DILocation(line: 129, column: 48, scope: !2886)
!2889 = !DILocation(line: 129, column: 9, scope: !2040)
!2890 = !DILocation(line: 130, column: 16, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2886, file: !1035, line: 129, column: 54)
!2892 = !DILocation(line: 130, column: 19, scope: !2891)
!2893 = !DILocation(line: 130, column: 9, scope: !2891)
!2894 = !DILocation(line: 131, column: 9, scope: !2891)
!2895 = !DILocation(line: 131, column: 12, scope: !2891)
!2896 = !DILocation(line: 131, column: 48, scope: !2891)
!2897 = !DILocation(line: 132, column: 5, scope: !2891)
!2898 = !DILocation(line: 133, column: 1, scope: !2040)
!2899 = distinct !DISubprogram(name: "aac_encode_init", scope: !1035, file: !1035, line: 959, type: !1160, isLocal: true, isDefinition: true, scopeLine: 960, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!2900 = !DILocalVariable(name: "avctx", arg: 1, scope: !2899, file: !1035, line: 959, type: !1162)
!2901 = !DILocation(line: 959, column: 66, scope: !2899)
!2902 = !DILocalVariable(name: "s", scope: !2899, file: !1035, line: 961, type: !2903)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64, align: 64)
!2904 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACEncContext", file: !967, line: 421, baseType: !2044)
!2905 = !DILocation(line: 961, column: 20, scope: !2899)
!2906 = !DILocation(line: 961, column: 24, scope: !2899)
!2907 = !DILocation(line: 961, column: 31, scope: !2899)
!2908 = !DILocalVariable(name: "i", scope: !2899, file: !1035, line: 962, type: !1023)
!2909 = !DILocation(line: 962, column: 9, scope: !2899)
!2910 = !DILocalVariable(name: "ret", scope: !2899, file: !1035, line: 962, type: !1023)
!2911 = !DILocation(line: 962, column: 12, scope: !2899)
!2912 = !DILocalVariable(name: "sizes", scope: !2899, file: !1035, line: 963, type: !2913)
!2913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1604, size: 128, align: 64, elements: !1807)
!2914 = !DILocation(line: 963, column: 20, scope: !2899)
!2915 = !DILocalVariable(name: "grouping", scope: !2899, file: !1035, line: 964, type: !1830)
!2916 = !DILocation(line: 964, column: 13, scope: !2899)
!2917 = !DILocalVariable(name: "lengths", scope: !2899, file: !1035, line: 965, type: !2268)
!2918 = !DILocation(line: 965, column: 9, scope: !2899)
!2919 = !DILocation(line: 968, column: 5, scope: !2899)
!2920 = !DILocation(line: 968, column: 8, scope: !2899)
!2921 = !DILocation(line: 968, column: 28, scope: !2899)
!2922 = !DILocation(line: 969, column: 5, scope: !2899)
!2923 = !DILocation(line: 969, column: 12, scope: !2899)
!2924 = !DILocation(line: 969, column: 23, scope: !2899)
!2925 = !DILocation(line: 970, column: 5, scope: !2899)
!2926 = !DILocation(line: 970, column: 12, scope: !2899)
!2927 = !DILocation(line: 970, column: 28, scope: !2899)
!2928 = !DILocation(line: 971, column: 17, scope: !2899)
!2929 = !DILocation(line: 971, column: 24, scope: !2899)
!2930 = !DILocation(line: 971, column: 39, scope: !2899)
!2931 = !DILocation(line: 971, column: 45, scope: !2932)
!2932 = !DILexicalBlockFile(scope: !2899, file: !1035, discriminator: 1)
!2933 = !DILocation(line: 971, column: 52, scope: !2932)
!2934 = !DILocation(line: 971, column: 17, scope: !2932)
!2935 = !DILocation(line: 971, column: 17, scope: !2936)
!2936 = !DILexicalBlockFile(scope: !2899, file: !1035, discriminator: 2)
!2937 = !DILocation(line: 971, column: 17, scope: !2938)
!2938 = !DILexicalBlockFile(scope: !2899, file: !1035, discriminator: 3)
!2939 = !DILocation(line: 971, column: 5, scope: !2938)
!2940 = !DILocation(line: 971, column: 8, scope: !2938)
!2941 = !DILocation(line: 971, column: 15, scope: !2938)
!2942 = !DILocation(line: 974, column: 19, scope: !2899)
!2943 = !DILocation(line: 974, column: 26, scope: !2899)
!2944 = !DILocation(line: 974, column: 5, scope: !2899)
!2945 = !DILocation(line: 974, column: 8, scope: !2899)
!2946 = !DILocation(line: 974, column: 17, scope: !2899)
!2947 = !DILocation(line: 976, column: 5, scope: !2899)
!2948 = !DILocation(line: 976, column: 8, scope: !2899)
!2949 = !DILocation(line: 976, column: 18, scope: !2899)
!2950 = !DILocation(line: 977, column: 12, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 977, column: 5)
!2952 = !DILocation(line: 977, column: 10, scope: !2951)
!2953 = !DILocation(line: 977, column: 17, scope: !2954)
!2954 = !DILexicalBlockFile(scope: !2955, file: !1035, discriminator: 1)
!2955 = distinct !DILexicalBlock(scope: !2951, file: !1035, line: 977, column: 5)
!2956 = !DILocation(line: 977, column: 19, scope: !2954)
!2957 = !DILocation(line: 977, column: 5, scope: !2954)
!2958 = !DILocation(line: 978, column: 13, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2960, file: !1035, line: 978, column: 13)
!2960 = distinct !DILexicalBlock(scope: !2955, file: !1035, line: 977, column: 100)
!2961 = !DILocation(line: 978, column: 20, scope: !2959)
!2962 = !DILocation(line: 978, column: 62, scope: !2959)
!2963 = !DILocation(line: 978, column: 38, scope: !2959)
!2964 = !DILocation(line: 978, column: 35, scope: !2959)
!2965 = !DILocation(line: 978, column: 13, scope: !2960)
!2966 = !DILocation(line: 979, column: 28, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2959, file: !1035, line: 978, column: 66)
!2968 = !DILocation(line: 979, column: 31, scope: !2967)
!2969 = !DILocation(line: 979, column: 39, scope: !2967)
!2970 = !DILocation(line: 979, column: 13, scope: !2967)
!2971 = !DILocation(line: 979, column: 16, scope: !2967)
!2972 = !DILocation(line: 979, column: 26, scope: !2967)
!2973 = !DILocation(line: 980, column: 13, scope: !2967)
!2974 = !DILocation(line: 982, column: 5, scope: !2960)
!2975 = !DILocation(line: 977, column: 96, scope: !2976)
!2976 = !DILexicalBlockFile(scope: !2955, file: !1035, discriminator: 2)
!2977 = !DILocation(line: 977, column: 5, scope: !2976)
!2978 = distinct !{!2978, !2979}
!2979 = !DILocation(line: 977, column: 5, scope: !2899)
!2980 = !DILocation(line: 984, column: 9, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 984, column: 9)
!2982 = !DILocation(line: 984, column: 12, scope: !2981)
!2983 = !DILocation(line: 984, column: 9, scope: !2899)
!2984 = !DILocalVariable(name: "buf", scope: !2985, file: !1035, line: 985, type: !2986)
!2985 = distinct !DILexicalBlock(scope: !2981, file: !1035, line: 984, column: 23)
!2986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 512, align: 8, elements: !2553)
!2987 = !DILocation(line: 985, column: 14, scope: !2985)
!2988 = !DILocation(line: 986, column: 16, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2985, file: !1035, line: 986, column: 9)
!2990 = !DILocation(line: 986, column: 14, scope: !2989)
!2991 = !DILocation(line: 986, column: 21, scope: !2992)
!2992 = !DILexicalBlockFile(scope: !2993, file: !1035, discriminator: 1)
!2993 = distinct !DILexicalBlock(scope: !2989, file: !1035, line: 986, column: 9)
!2994 = !DILocation(line: 986, column: 23, scope: !2992)
!2995 = !DILocation(line: 986, column: 9, scope: !2992)
!2996 = !DILocation(line: 987, column: 17, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2993, file: !1035, line: 987, column: 17)
!2998 = !DILocation(line: 987, column: 24, scope: !2997)
!2999 = !DILocation(line: 987, column: 58, scope: !2997)
!3000 = !DILocation(line: 987, column: 42, scope: !2997)
!3001 = !DILocation(line: 987, column: 61, scope: !2997)
!3002 = !DILocation(line: 987, column: 39, scope: !2997)
!3003 = !DILocation(line: 987, column: 17, scope: !2993)
!3004 = !DILocation(line: 988, column: 17, scope: !2997)
!3005 = !DILocation(line: 987, column: 61, scope: !3006)
!3006 = !DILexicalBlockFile(scope: !2997, file: !1035, discriminator: 1)
!3007 = !DILocation(line: 986, column: 84, scope: !3008)
!3008 = !DILexicalBlockFile(scope: !2993, file: !1035, discriminator: 2)
!3009 = !DILocation(line: 986, column: 9, scope: !3008)
!3010 = distinct !{!3010, !3011}
!3011 = !DILocation(line: 986, column: 9, scope: !2985)
!3012 = !DILocation(line: 989, column: 38, scope: !2985)
!3013 = !DILocation(line: 989, column: 60, scope: !2985)
!3014 = !DILocation(line: 989, column: 67, scope: !2985)
!3015 = !DILocation(line: 989, column: 9, scope: !2985)
!3016 = !DILocation(line: 990, column: 13, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !2985, file: !1035, line: 990, column: 13)
!3018 = !DILocation(line: 990, column: 15, scope: !3017)
!3019 = !DILocation(line: 990, column: 13, scope: !2985)
!3020 = !DILocation(line: 990, column: 85, scope: !3021)
!3021 = !DILexicalBlockFile(scope: !3022, file: !1035, discriminator: 1)
!3022 = distinct !DILexicalBlock(scope: !3017, file: !1035, line: 990, column: 76)
!3023 = !DILocation(line: 990, column: 135, scope: !3021)
!3024 = !DILocation(line: 990, column: 78, scope: !3021)
!3025 = !DILocation(line: 990, column: 141, scope: !3021)
!3026 = !DILocation(line: 991, column: 16, scope: !2985)
!3027 = !DILocation(line: 991, column: 76, scope: !2985)
!3028 = !DILocation(line: 991, column: 9, scope: !2985)
!3029 = !DILocation(line: 992, column: 9, scope: !2985)
!3030 = !DILocation(line: 992, column: 12, scope: !2985)
!3031 = !DILocation(line: 992, column: 34, scope: !2985)
!3032 = !DILocation(line: 992, column: 18, scope: !2985)
!3033 = !DILocation(line: 993, column: 26, scope: !2985)
!3034 = !DILocation(line: 993, column: 29, scope: !2985)
!3035 = !DILocation(line: 993, column: 33, scope: !2985)
!3036 = !DILocation(line: 993, column: 9, scope: !2985)
!3037 = !DILocation(line: 993, column: 12, scope: !2985)
!3038 = !DILocation(line: 993, column: 24, scope: !2985)
!3039 = !DILocation(line: 994, column: 23, scope: !2985)
!3040 = !DILocation(line: 994, column: 26, scope: !2985)
!3041 = !DILocation(line: 994, column: 30, scope: !2985)
!3042 = !DILocation(line: 994, column: 9, scope: !2985)
!3043 = !DILocation(line: 994, column: 12, scope: !2985)
!3044 = !DILocation(line: 994, column: 21, scope: !2985)
!3045 = !DILocation(line: 995, column: 5, scope: !2985)
!3046 = !DILocation(line: 996, column: 40, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !2981, file: !1035, line: 995, column: 12)
!3048 = !DILocation(line: 996, column: 43, scope: !3047)
!3049 = !DILocation(line: 996, column: 52, scope: !3047)
!3050 = !DILocation(line: 996, column: 26, scope: !3047)
!3051 = !DILocation(line: 996, column: 9, scope: !3047)
!3052 = !DILocation(line: 996, column: 12, scope: !3047)
!3053 = !DILocation(line: 996, column: 24, scope: !3047)
!3054 = !DILocation(line: 997, column: 40, scope: !3047)
!3055 = !DILocation(line: 997, column: 43, scope: !3047)
!3056 = !DILocation(line: 997, column: 52, scope: !3047)
!3057 = !DILocation(line: 997, column: 23, scope: !3047)
!3058 = !DILocation(line: 997, column: 9, scope: !3047)
!3059 = !DILocation(line: 997, column: 12, scope: !3047)
!3060 = !DILocation(line: 997, column: 21, scope: !3047)
!3061 = !DILocation(line: 1000, column: 10, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1000, column: 9)
!3063 = !DILocation(line: 1000, column: 17, scope: !3062)
!3064 = !DILocation(line: 1000, column: 9, scope: !2899)
!3065 = !DILocation(line: 1001, column: 16, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3067, file: !1035, line: 1001, column: 9)
!3067 = distinct !DILexicalBlock(scope: !3062, file: !1035, line: 1000, column: 27)
!3068 = !DILocation(line: 1001, column: 14, scope: !3066)
!3069 = !DILocation(line: 1001, column: 21, scope: !3070)
!3070 = !DILexicalBlockFile(scope: !3071, file: !1035, discriminator: 1)
!3071 = distinct !DILexicalBlock(scope: !3066, file: !1035, line: 1001, column: 9)
!3072 = !DILocation(line: 1001, column: 26, scope: !3070)
!3073 = !DILocation(line: 1001, column: 29, scope: !3070)
!3074 = !DILocation(line: 1001, column: 23, scope: !3070)
!3075 = !DILocation(line: 1001, column: 9, scope: !3070)
!3076 = !DILocation(line: 1002, column: 44, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3071, file: !1035, line: 1001, column: 47)
!3078 = !DILocation(line: 1002, column: 32, scope: !3077)
!3079 = !DILocation(line: 1002, column: 35, scope: !3077)
!3080 = !DILocation(line: 1002, column: 47, scope: !3077)
!3081 = !DILocation(line: 1002, column: 32, scope: !3082)
!3082 = !DILexicalBlockFile(scope: !3077, file: !1035, discriminator: 1)
!3083 = !DILocation(line: 1003, column: 44, scope: !3077)
!3084 = !DILocation(line: 1003, column: 32, scope: !3077)
!3085 = !DILocation(line: 1003, column: 35, scope: !3077)
!3086 = !DILocation(line: 1003, column: 47, scope: !3077)
!3087 = !DILocation(line: 1002, column: 32, scope: !3088)
!3088 = !DILexicalBlockFile(scope: !3077, file: !1035, discriminator: 2)
!3089 = !DILocation(line: 1002, column: 32, scope: !3090)
!3090 = !DILexicalBlockFile(scope: !3077, file: !1035, discriminator: 3)
!3091 = !DILocation(line: 1002, column: 13, scope: !3090)
!3092 = !DILocation(line: 1002, column: 20, scope: !3090)
!3093 = !DILocation(line: 1002, column: 29, scope: !3090)
!3094 = !DILocation(line: 1005, column: 9, scope: !3077)
!3095 = !DILocation(line: 1001, column: 43, scope: !3096)
!3096 = !DILexicalBlockFile(scope: !3071, file: !1035, discriminator: 2)
!3097 = !DILocation(line: 1001, column: 9, scope: !3096)
!3098 = distinct !{!3098, !3099}
!3099 = !DILocation(line: 1001, column: 9, scope: !3067)
!3100 = !DILocation(line: 1006, column: 5, scope: !3067)
!3101 = !DILocation(line: 1009, column: 12, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1009, column: 5)
!3103 = !DILocation(line: 1009, column: 10, scope: !3102)
!3104 = !DILocation(line: 1009, column: 17, scope: !3105)
!3105 = !DILexicalBlockFile(scope: !3106, file: !1035, discriminator: 1)
!3106 = distinct !DILexicalBlock(scope: !3102, file: !1035, line: 1009, column: 5)
!3107 = !DILocation(line: 1009, column: 19, scope: !3105)
!3108 = !DILocation(line: 1009, column: 5, scope: !3105)
!3109 = !DILocation(line: 1010, column: 13, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3106, file: !1035, line: 1010, column: 13)
!3111 = !DILocation(line: 1010, column: 20, scope: !3110)
!3112 = !DILocation(line: 1010, column: 66, scope: !3110)
!3113 = !DILocation(line: 1010, column: 35, scope: !3110)
!3114 = !DILocation(line: 1010, column: 32, scope: !3110)
!3115 = !DILocation(line: 1010, column: 13, scope: !3106)
!3116 = !DILocation(line: 1011, column: 13, scope: !3110)
!3117 = !DILocation(line: 1010, column: 67, scope: !3118)
!3118 = !DILexicalBlockFile(scope: !3110, file: !1035, discriminator: 1)
!3119 = !DILocation(line: 1009, column: 26, scope: !3120)
!3120 = !DILexicalBlockFile(scope: !3106, file: !1035, discriminator: 2)
!3121 = !DILocation(line: 1009, column: 5, scope: !3120)
!3122 = distinct !{!3122, !3123}
!3123 = !DILocation(line: 1009, column: 5, scope: !2899)
!3124 = !DILocation(line: 1012, column: 27, scope: !2899)
!3125 = !DILocation(line: 1012, column: 5, scope: !2899)
!3126 = !DILocation(line: 1012, column: 8, scope: !2899)
!3127 = !DILocation(line: 1012, column: 25, scope: !2899)
!3128 = !DILocation(line: 1013, column: 9, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1013, column: 9)
!3130 = !DILocation(line: 1013, column: 12, scope: !3129)
!3131 = !DILocation(line: 1013, column: 29, scope: !3129)
!3132 = !DILocation(line: 1013, column: 35, scope: !3129)
!3133 = !DILocation(line: 1013, column: 38, scope: !3134)
!3134 = !DILexicalBlockFile(scope: !3129, file: !1035, discriminator: 1)
!3135 = !DILocation(line: 1013, column: 41, scope: !3134)
!3136 = !DILocation(line: 1013, column: 61, scope: !3134)
!3137 = !DILocation(line: 1013, column: 58, scope: !3134)
!3138 = !DILocation(line: 1013, column: 86, scope: !3134)
!3139 = !DILocation(line: 1013, column: 89, scope: !3140)
!3140 = !DILexicalBlockFile(scope: !3129, file: !1035, discriminator: 2)
!3141 = !DILocation(line: 1013, column: 92, scope: !3140)
!3142 = !DILocation(line: 1013, column: 112, scope: !3140)
!3143 = !DILocation(line: 1013, column: 109, scope: !3140)
!3144 = !DILocation(line: 1013, column: 9, scope: !3140)
!3145 = !DILocation(line: 1013, column: 146, scope: !3146)
!3146 = !DILexicalBlockFile(scope: !3147, file: !1035, discriminator: 3)
!3147 = distinct !DILexicalBlock(scope: !3129, file: !1035, line: 1013, column: 137)
!3148 = !DILocation(line: 1013, column: 189, scope: !3146)
!3149 = !DILocation(line: 1013, column: 196, scope: !3146)
!3150 = !DILocation(line: 1013, column: 139, scope: !3146)
!3151 = !DILocation(line: 1013, column: 210, scope: !3146)
!3152 = !DILocation(line: 1019, column: 18, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1019, column: 9)
!3154 = !DILocation(line: 1019, column: 25, scope: !3153)
!3155 = !DILocation(line: 1019, column: 16, scope: !3153)
!3156 = !DILocation(line: 1019, column: 36, scope: !3153)
!3157 = !DILocation(line: 1019, column: 43, scope: !3153)
!3158 = !DILocation(line: 1019, column: 34, scope: !3153)
!3159 = !DILocation(line: 1019, column: 64, scope: !3153)
!3160 = !DILocation(line: 1019, column: 67, scope: !3153)
!3161 = !DILocation(line: 1019, column: 62, scope: !3153)
!3162 = !DILocation(line: 1019, column: 57, scope: !3153)
!3163 = !DILocation(line: 1019, column: 55, scope: !3153)
!3164 = !DILocation(line: 1019, column: 9, scope: !2899)
!3165 = !DILocation(line: 1019, column: 86, scope: !3166)
!3166 = !DILexicalBlockFile(scope: !3167, file: !1035, discriminator: 1)
!3167 = distinct !DILexicalBlock(scope: !3153, file: !1035, line: 1019, column: 77)
!3168 = !DILocation(line: 1019, column: 170, scope: !3166)
!3169 = !DILocation(line: 1019, column: 177, scope: !3166)
!3170 = !DILocation(line: 1019, column: 168, scope: !3166)
!3171 = !DILocation(line: 1019, column: 188, scope: !3166)
!3172 = !DILocation(line: 1019, column: 195, scope: !3166)
!3173 = !DILocation(line: 1019, column: 186, scope: !3166)
!3174 = !DILocation(line: 1019, column: 215, scope: !3166)
!3175 = !DILocation(line: 1019, column: 218, scope: !3166)
!3176 = !DILocation(line: 1019, column: 213, scope: !3166)
!3177 = !DILocation(line: 1019, column: 79, scope: !3166)
!3178 = !DILocation(line: 1019, column: 229, scope: !3166)
!3179 = !DILocation(line: 1023, column: 41, scope: !2899)
!3180 = !DILocation(line: 1023, column: 44, scope: !2899)
!3181 = !DILocation(line: 1023, column: 39, scope: !2899)
!3182 = !DILocation(line: 1023, column: 34, scope: !2899)
!3183 = !DILocation(line: 1023, column: 53, scope: !2899)
!3184 = !DILocation(line: 1023, column: 64, scope: !2899)
!3185 = !DILocation(line: 1023, column: 71, scope: !2899)
!3186 = !DILocation(line: 1023, column: 62, scope: !2899)
!3187 = !DILocation(line: 1023, column: 87, scope: !2899)
!3188 = !DILocation(line: 1023, column: 94, scope: !2899)
!3189 = !DILocation(line: 1023, column: 86, scope: !2899)
!3190 = !DILocation(line: 1023, column: 84, scope: !2899)
!3191 = !DILocation(line: 1023, column: 33, scope: !2899)
!3192 = !DILocation(line: 1023, column: 107, scope: !2932)
!3193 = !DILocation(line: 1023, column: 114, scope: !2932)
!3194 = !DILocation(line: 1023, column: 106, scope: !2932)
!3195 = !DILocation(line: 1023, column: 33, scope: !2932)
!3196 = !DILocation(line: 1023, column: 134, scope: !2936)
!3197 = !DILocation(line: 1023, column: 137, scope: !2936)
!3198 = !DILocation(line: 1023, column: 132, scope: !2936)
!3199 = !DILocation(line: 1023, column: 127, scope: !2936)
!3200 = !DILocation(line: 1023, column: 146, scope: !2936)
!3201 = !DILocation(line: 1023, column: 157, scope: !2936)
!3202 = !DILocation(line: 1023, column: 164, scope: !2936)
!3203 = !DILocation(line: 1023, column: 155, scope: !2936)
!3204 = !DILocation(line: 1023, column: 33, scope: !2936)
!3205 = !DILocation(line: 1023, column: 33, scope: !2938)
!3206 = !DILocation(line: 1023, column: 23, scope: !2938)
!3207 = !DILocation(line: 1023, column: 5, scope: !2938)
!3208 = !DILocation(line: 1023, column: 12, scope: !2938)
!3209 = !DILocation(line: 1023, column: 21, scope: !2938)
!3210 = !DILocation(line: 1027, column: 22, scope: !2899)
!3211 = !DILocation(line: 1027, column: 29, scope: !2899)
!3212 = !DILocation(line: 1027, column: 37, scope: !2899)
!3213 = !DILocation(line: 1027, column: 22, scope: !2932)
!3214 = !DILocation(line: 1028, column: 22, scope: !2899)
!3215 = !DILocation(line: 1028, column: 29, scope: !2899)
!3216 = !DILocation(line: 1027, column: 22, scope: !2936)
!3217 = !DILocation(line: 1027, column: 22, scope: !2938)
!3218 = !DILocation(line: 1027, column: 5, scope: !2938)
!3219 = !DILocation(line: 1027, column: 12, scope: !2938)
!3220 = !DILocation(line: 1027, column: 20, scope: !2938)
!3221 = !DILocation(line: 1029, column: 12, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1029, column: 5)
!3223 = !DILocation(line: 1029, column: 10, scope: !3222)
!3224 = !DILocation(line: 1029, column: 17, scope: !3225)
!3225 = !DILexicalBlockFile(scope: !3226, file: !1035, discriminator: 1)
!3226 = distinct !DILexicalBlock(scope: !3222, file: !1035, line: 1029, column: 5)
!3227 = !DILocation(line: 1029, column: 19, scope: !3225)
!3228 = !DILocation(line: 1029, column: 5, scope: !3225)
!3229 = !DILocation(line: 1030, column: 13, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3226, file: !1035, line: 1030, column: 13)
!3231 = !DILocation(line: 1030, column: 20, scope: !3230)
!3232 = !DILocation(line: 1030, column: 47, scope: !3230)
!3233 = !DILocation(line: 1030, column: 31, scope: !3230)
!3234 = !DILocation(line: 1030, column: 28, scope: !3230)
!3235 = !DILocation(line: 1030, column: 13, scope: !3226)
!3236 = !DILocation(line: 1031, column: 13, scope: !3230)
!3237 = !DILocation(line: 1030, column: 48, scope: !3238)
!3238 = !DILexicalBlockFile(scope: !3230, file: !1035, discriminator: 1)
!3239 = !DILocation(line: 1029, column: 80, scope: !3240)
!3240 = !DILexicalBlockFile(scope: !3226, file: !1035, discriminator: 2)
!3241 = !DILocation(line: 1029, column: 5, scope: !3240)
!3242 = distinct !{!3242, !3243}
!3243 = !DILocation(line: 1029, column: 5, scope: !2899)
!3244 = !DILocation(line: 1032, column: 9, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1032, column: 9)
!3246 = !DILocation(line: 1032, column: 16, scope: !3245)
!3247 = !DILocation(line: 1032, column: 24, scope: !3245)
!3248 = !DILocation(line: 1032, column: 9, scope: !2899)
!3249 = !DILocation(line: 1033, column: 9, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3245, file: !1035, line: 1032, column: 32)
!3251 = !DILocation(line: 1033, column: 16, scope: !3250)
!3252 = !DILocation(line: 1033, column: 24, scope: !3250)
!3253 = !DILocation(line: 1034, column: 13, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3250, file: !1035, line: 1034, column: 13)
!3255 = !DILocation(line: 1034, column: 16, scope: !3254)
!3256 = !DILocation(line: 1034, column: 24, scope: !3254)
!3257 = !DILocation(line: 1034, column: 13, scope: !3250)
!3258 = !DILocation(line: 1034, column: 39, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3260, file: !1035, discriminator: 1)
!3260 = distinct !DILexicalBlock(scope: !3254, file: !1035, line: 1034, column: 30)
!3261 = !DILocation(line: 1034, column: 32, scope: !3259)
!3262 = !DILocation(line: 1034, column: 117, scope: !3259)
!3263 = !DILocation(line: 1036, column: 13, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3250, file: !1035, line: 1036, column: 13)
!3265 = !DILocation(line: 1036, column: 16, scope: !3264)
!3266 = !DILocation(line: 1036, column: 24, scope: !3264)
!3267 = !DILocation(line: 1036, column: 13, scope: !3250)
!3268 = !DILocation(line: 1036, column: 38, scope: !3269)
!3269 = !DILexicalBlockFile(scope: !3270, file: !1035, discriminator: 1)
!3270 = distinct !DILexicalBlock(scope: !3264, file: !1035, line: 1036, column: 29)
!3271 = !DILocation(line: 1036, column: 31, scope: !3269)
!3272 = !DILocation(line: 1036, column: 115, scope: !3269)
!3273 = !DILocation(line: 1038, column: 13, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3250, file: !1035, line: 1038, column: 13)
!3275 = !DILocation(line: 1038, column: 16, scope: !3274)
!3276 = !DILocation(line: 1038, column: 24, scope: !3274)
!3277 = !DILocation(line: 1038, column: 13, scope: !3250)
!3278 = !DILocation(line: 1038, column: 38, scope: !3279)
!3279 = !DILexicalBlockFile(scope: !3280, file: !1035, discriminator: 1)
!3280 = distinct !DILexicalBlock(scope: !3274, file: !1035, line: 1038, column: 29)
!3281 = !DILocation(line: 1038, column: 31, scope: !3279)
!3282 = !DILocation(line: 1038, column: 117, scope: !3279)
!3283 = !DILocation(line: 1040, column: 9, scope: !3250)
!3284 = !DILocation(line: 1040, column: 12, scope: !3250)
!3285 = !DILocation(line: 1040, column: 20, scope: !3250)
!3286 = !DILocation(line: 1040, column: 24, scope: !3250)
!3287 = !DILocation(line: 1041, column: 5, scope: !3250)
!3288 = !DILocation(line: 1041, column: 16, scope: !3289)
!3289 = !DILexicalBlockFile(scope: !3290, file: !1035, discriminator: 1)
!3290 = distinct !DILexicalBlock(scope: !3245, file: !1035, line: 1041, column: 16)
!3291 = !DILocation(line: 1041, column: 23, scope: !3289)
!3292 = !DILocation(line: 1041, column: 31, scope: !3289)
!3293 = !DILocation(line: 1042, column: 9, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3290, file: !1035, line: 1041, column: 37)
!3295 = !DILocation(line: 1042, column: 12, scope: !3294)
!3296 = !DILocation(line: 1042, column: 20, scope: !3294)
!3297 = !DILocation(line: 1042, column: 24, scope: !3294)
!3298 = !DILocation(line: 1043, column: 13, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3294, file: !1035, line: 1043, column: 13)
!3300 = !DILocation(line: 1043, column: 16, scope: !3299)
!3301 = !DILocation(line: 1043, column: 24, scope: !3299)
!3302 = !DILocation(line: 1043, column: 13, scope: !3294)
!3303 = !DILocation(line: 1043, column: 39, scope: !3304)
!3304 = !DILexicalBlockFile(scope: !3305, file: !1035, discriminator: 1)
!3305 = distinct !DILexicalBlock(scope: !3299, file: !1035, line: 1043, column: 30)
!3306 = !DILocation(line: 1043, column: 32, scope: !3304)
!3307 = !DILocation(line: 1043, column: 111, scope: !3304)
!3308 = !DILocation(line: 1045, column: 5, scope: !3294)
!3309 = !DILocation(line: 1045, column: 16, scope: !3310)
!3310 = !DILexicalBlockFile(scope: !3311, file: !1035, discriminator: 1)
!3311 = distinct !DILexicalBlock(scope: !3290, file: !1035, line: 1045, column: 16)
!3312 = !DILocation(line: 1045, column: 23, scope: !3310)
!3313 = !DILocation(line: 1045, column: 31, scope: !3310)
!3314 = !DILocation(line: 1046, column: 9, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3311, file: !1035, line: 1045, column: 37)
!3316 = !DILocation(line: 1046, column: 12, scope: !3315)
!3317 = !DILocation(line: 1046, column: 20, scope: !3315)
!3318 = !DILocation(line: 1046, column: 25, scope: !3315)
!3319 = !DILocation(line: 1047, column: 13, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3315, file: !1035, line: 1047, column: 13)
!3321 = !DILocation(line: 1047, column: 16, scope: !3320)
!3322 = !DILocation(line: 1047, column: 24, scope: !3320)
!3323 = !DILocation(line: 1047, column: 13, scope: !3315)
!3324 = !DILocation(line: 1047, column: 38, scope: !3325)
!3325 = !DILexicalBlockFile(scope: !3326, file: !1035, discriminator: 1)
!3326 = distinct !DILexicalBlock(scope: !3320, file: !1035, line: 1047, column: 29)
!3327 = !DILocation(line: 1047, column: 31, scope: !3325)
!3328 = !DILocation(line: 1047, column: 110, scope: !3325)
!3329 = !DILocation(line: 1049, column: 5, scope: !3315)
!3330 = !DILocation(line: 1049, column: 16, scope: !3331)
!3331 = !DILexicalBlockFile(scope: !3332, file: !1035, discriminator: 1)
!3332 = distinct !DILexicalBlock(scope: !3311, file: !1035, line: 1049, column: 16)
!3333 = !DILocation(line: 1049, column: 19, scope: !3331)
!3334 = !DILocation(line: 1049, column: 27, scope: !3331)
!3335 = !DILocation(line: 1050, column: 9, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3332, file: !1035, line: 1049, column: 32)
!3337 = !DILocation(line: 1050, column: 16, scope: !3336)
!3338 = !DILocation(line: 1050, column: 24, scope: !3336)
!3339 = !DILocation(line: 1051, column: 25, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3341, file: !1035, line: 1051, column: 16)
!3341 = distinct !DILexicalBlock(scope: !3336, file: !1035, line: 1051, column: 13)
!3342 = !DILocation(line: 1051, column: 18, scope: !3340)
!3343 = !DILocation(line: 1053, column: 13, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3336, file: !1035, line: 1053, column: 13)
!3345 = !DILocation(line: 1053, column: 16, scope: !3344)
!3346 = !DILocation(line: 1053, column: 24, scope: !3344)
!3347 = !DILocation(line: 1053, column: 13, scope: !3336)
!3348 = !DILocation(line: 1053, column: 39, scope: !3349)
!3349 = !DILexicalBlockFile(scope: !3350, file: !1035, discriminator: 1)
!3350 = distinct !DILexicalBlock(scope: !3344, file: !1035, line: 1053, column: 30)
!3351 = !DILocation(line: 1053, column: 32, scope: !3349)
!3352 = !DILocation(line: 1053, column: 111, scope: !3349)
!3353 = !DILocation(line: 1055, column: 5, scope: !3336)
!3354 = !DILocation(line: 1055, column: 16, scope: !3355)
!3355 = !DILexicalBlockFile(scope: !3356, file: !1035, discriminator: 1)
!3356 = distinct !DILexicalBlock(scope: !3332, file: !1035, line: 1055, column: 16)
!3357 = !DILocation(line: 1055, column: 19, scope: !3355)
!3358 = !DILocation(line: 1055, column: 27, scope: !3355)
!3359 = !DILocation(line: 1056, column: 9, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3356, file: !1035, line: 1055, column: 33)
!3361 = !DILocation(line: 1056, column: 16, scope: !3360)
!3362 = !DILocation(line: 1056, column: 24, scope: !3360)
!3363 = !DILocation(line: 1057, column: 25, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !1035, line: 1057, column: 16)
!3365 = distinct !DILexicalBlock(scope: !3360, file: !1035, line: 1057, column: 13)
!3366 = !DILocation(line: 1057, column: 18, scope: !3364)
!3367 = !DILocation(line: 1059, column: 13, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3360, file: !1035, line: 1059, column: 13)
!3369 = !DILocation(line: 1059, column: 16, scope: !3368)
!3370 = !DILocation(line: 1059, column: 24, scope: !3368)
!3371 = !DILocation(line: 1059, column: 13, scope: !3360)
!3372 = !DILocation(line: 1059, column: 38, scope: !3373)
!3373 = !DILexicalBlockFile(scope: !3374, file: !1035, discriminator: 1)
!3374 = distinct !DILexicalBlock(scope: !3368, file: !1035, line: 1059, column: 29)
!3375 = !DILocation(line: 1059, column: 31, scope: !3373)
!3376 = !DILocation(line: 1059, column: 110, scope: !3373)
!3377 = !DILocation(line: 1061, column: 5, scope: !3360)
!3378 = !DILocation(line: 1062, column: 18, scope: !2899)
!3379 = !DILocation(line: 1062, column: 25, scope: !2899)
!3380 = !DILocation(line: 1062, column: 5, scope: !2899)
!3381 = !DILocation(line: 1062, column: 8, scope: !2899)
!3382 = !DILocation(line: 1062, column: 16, scope: !2899)
!3383 = !DILocation(line: 1065, column: 31, scope: !2899)
!3384 = !DILocation(line: 1065, column: 34, scope: !2899)
!3385 = !DILocation(line: 1065, column: 42, scope: !2899)
!3386 = !DILocation(line: 1065, column: 17, scope: !2899)
!3387 = !DILocation(line: 1065, column: 5, scope: !2899)
!3388 = !DILocation(line: 1065, column: 8, scope: !2899)
!3389 = !DILocation(line: 1065, column: 14, scope: !2899)
!3390 = !DILocation(line: 1066, column: 9, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1066, column: 9)
!3392 = !DILocation(line: 1066, column: 12, scope: !3391)
!3393 = !DILocation(line: 1066, column: 20, scope: !3391)
!3394 = !DILocation(line: 1066, column: 26, scope: !3391)
!3395 = !DILocation(line: 1066, column: 9, scope: !2899)
!3396 = !DILocation(line: 1067, column: 13, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !1035, line: 1067, column: 13)
!3398 = distinct !DILexicalBlock(scope: !3391, file: !1035, line: 1066, column: 45)
!3399 = !DILocation(line: 1067, column: 20, scope: !3397)
!3400 = !DILocation(line: 1067, column: 42, scope: !3397)
!3401 = !DILocation(line: 1067, column: 13, scope: !3398)
!3402 = !DILocation(line: 1067, column: 57, scope: !3403)
!3403 = !DILexicalBlockFile(scope: !3404, file: !1035, discriminator: 1)
!3404 = distinct !DILexicalBlock(scope: !3397, file: !1035, line: 1067, column: 48)
!3405 = !DILocation(line: 1067, column: 50, scope: !3403)
!3406 = !DILocation(line: 1067, column: 143, scope: !3403)
!3407 = !DILocation(line: 1069, column: 9, scope: !3398)
!3408 = !DILocation(line: 1069, column: 12, scope: !3398)
!3409 = !DILocation(line: 1069, column: 20, scope: !3398)
!3410 = !DILocation(line: 1069, column: 37, scope: !3398)
!3411 = !DILocation(line: 1070, column: 9, scope: !3398)
!3412 = !DILocation(line: 1070, column: 12, scope: !3398)
!3413 = !DILocation(line: 1070, column: 20, scope: !3398)
!3414 = !DILocation(line: 1070, column: 24, scope: !3398)
!3415 = !DILocation(line: 1071, column: 5, scope: !3398)
!3416 = !DILocation(line: 1072, column: 9, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1072, column: 9)
!3418 = !DILocation(line: 1072, column: 12, scope: !3417)
!3419 = !DILocation(line: 1072, column: 20, scope: !3417)
!3420 = !DILocation(line: 1072, column: 24, scope: !3417)
!3421 = !DILocation(line: 1072, column: 27, scope: !3422)
!3422 = !DILexicalBlockFile(scope: !3417, file: !1035, discriminator: 1)
!3423 = !DILocation(line: 1072, column: 34, scope: !3422)
!3424 = !DILocation(line: 1072, column: 56, scope: !3422)
!3425 = !DILocation(line: 1072, column: 9, scope: !3422)
!3426 = !DILocation(line: 1072, column: 71, scope: !3427)
!3427 = !DILexicalBlockFile(scope: !3428, file: !1035, discriminator: 2)
!3428 = distinct !DILexicalBlock(scope: !3417, file: !1035, line: 1072, column: 62)
!3429 = !DILocation(line: 1072, column: 64, scope: !3427)
!3430 = !DILocation(line: 1072, column: 164, scope: !3427)
!3431 = !DILocation(line: 1076, column: 9, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1076, column: 9)
!3433 = !DILocation(line: 1076, column: 12, scope: !3432)
!3434 = !DILocation(line: 1076, column: 21, scope: !3432)
!3435 = !DILocation(line: 1076, column: 9, scope: !2899)
!3436 = !DILocation(line: 1077, column: 9, scope: !3432)
!3437 = !DILocation(line: 1077, column: 12, scope: !3432)
!3438 = !DILocation(line: 1077, column: 20, scope: !3432)
!3439 = !DILocation(line: 1077, column: 29, scope: !3432)
!3440 = !DILocation(line: 1079, column: 25, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1079, column: 9)
!3442 = !DILocation(line: 1079, column: 32, scope: !3441)
!3443 = !DILocation(line: 1079, column: 16, scope: !3441)
!3444 = !DILocation(line: 1079, column: 14, scope: !3441)
!3445 = !DILocation(line: 1079, column: 36, scope: !3441)
!3446 = !DILocation(line: 1079, column: 9, scope: !2899)
!3447 = !DILocation(line: 1080, column: 9, scope: !3441)
!3448 = !DILocation(line: 1082, column: 30, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1082, column: 9)
!3450 = !DILocation(line: 1082, column: 37, scope: !3449)
!3451 = !DILocation(line: 1082, column: 16, scope: !3449)
!3452 = !DILocation(line: 1082, column: 14, scope: !3449)
!3453 = !DILocation(line: 1082, column: 41, scope: !3449)
!3454 = !DILocation(line: 1082, column: 9, scope: !2899)
!3455 = !DILocation(line: 1083, column: 9, scope: !3449)
!3456 = !DILocation(line: 1085, column: 42, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1085, column: 9)
!3458 = !DILocation(line: 1085, column: 16, scope: !3457)
!3459 = !DILocation(line: 1085, column: 14, scope: !3457)
!3460 = !DILocation(line: 1085, column: 9, scope: !2899)
!3461 = !DILocation(line: 1086, column: 9, scope: !3457)
!3462 = !DILocation(line: 1088, column: 37, scope: !2899)
!3463 = !DILocation(line: 1088, column: 40, scope: !2899)
!3464 = !DILocation(line: 1088, column: 16, scope: !2899)
!3465 = !DILocation(line: 1088, column: 5, scope: !2899)
!3466 = !DILocation(line: 1088, column: 14, scope: !2899)
!3467 = !DILocation(line: 1089, column: 36, scope: !2899)
!3468 = !DILocation(line: 1089, column: 39, scope: !2899)
!3469 = !DILocation(line: 1089, column: 16, scope: !2899)
!3470 = !DILocation(line: 1089, column: 5, scope: !2899)
!3471 = !DILocation(line: 1089, column: 14, scope: !2899)
!3472 = !DILocation(line: 1090, column: 38, scope: !2899)
!3473 = !DILocation(line: 1090, column: 41, scope: !2899)
!3474 = !DILocation(line: 1090, column: 18, scope: !2899)
!3475 = !DILocation(line: 1090, column: 5, scope: !2899)
!3476 = !DILocation(line: 1090, column: 16, scope: !2899)
!3477 = !DILocation(line: 1091, column: 37, scope: !2899)
!3478 = !DILocation(line: 1091, column: 40, scope: !2899)
!3479 = !DILocation(line: 1091, column: 18, scope: !2899)
!3480 = !DILocation(line: 1091, column: 5, scope: !2899)
!3481 = !DILocation(line: 1091, column: 16, scope: !2899)
!3482 = !DILocation(line: 1092, column: 12, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1092, column: 5)
!3484 = !DILocation(line: 1092, column: 10, scope: !3483)
!3485 = !DILocation(line: 1092, column: 17, scope: !3486)
!3486 = !DILexicalBlockFile(scope: !3487, file: !1035, discriminator: 1)
!3487 = distinct !DILexicalBlock(scope: !3483, file: !1035, line: 1092, column: 5)
!3488 = !DILocation(line: 1092, column: 21, scope: !3486)
!3489 = !DILocation(line: 1092, column: 24, scope: !3486)
!3490 = !DILocation(line: 1092, column: 19, scope: !3486)
!3491 = !DILocation(line: 1092, column: 5, scope: !3486)
!3492 = !DILocation(line: 1093, column: 35, scope: !3487)
!3493 = !DILocation(line: 1093, column: 37, scope: !3487)
!3494 = !DILocation(line: 1093, column: 23, scope: !3487)
!3495 = !DILocation(line: 1093, column: 26, scope: !3487)
!3496 = !DILocation(line: 1093, column: 42, scope: !3487)
!3497 = !DILocation(line: 1093, column: 18, scope: !3487)
!3498 = !DILocation(line: 1093, column: 9, scope: !3487)
!3499 = !DILocation(line: 1093, column: 21, scope: !3487)
!3500 = !DILocation(line: 1092, column: 38, scope: !3501)
!3501 = !DILexicalBlockFile(scope: !3487, file: !1035, discriminator: 2)
!3502 = !DILocation(line: 1092, column: 5, scope: !3501)
!3503 = distinct !{!3503, !3504}
!3504 = !DILocation(line: 1092, column: 5, scope: !2899)
!3505 = !DILocation(line: 1094, column: 29, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1094, column: 9)
!3507 = !DILocation(line: 1094, column: 32, scope: !3506)
!3508 = !DILocation(line: 1094, column: 37, scope: !3506)
!3509 = !DILocation(line: 1094, column: 47, scope: !3506)
!3510 = !DILocation(line: 1094, column: 54, scope: !3506)
!3511 = !DILocation(line: 1095, column: 28, scope: !3506)
!3512 = !DILocation(line: 1095, column: 31, scope: !3506)
!3513 = !DILocation(line: 1095, column: 44, scope: !3506)
!3514 = !DILocation(line: 1094, column: 16, scope: !3506)
!3515 = !DILocation(line: 1094, column: 14, scope: !3506)
!3516 = !DILocation(line: 1095, column: 55, scope: !3506)
!3517 = !DILocation(line: 1094, column: 9, scope: !2899)
!3518 = !DILocation(line: 1096, column: 9, scope: !3506)
!3519 = !DILocation(line: 1097, column: 39, scope: !2899)
!3520 = !DILocation(line: 1097, column: 16, scope: !2899)
!3521 = !DILocation(line: 1097, column: 5, scope: !2899)
!3522 = !DILocation(line: 1097, column: 8, scope: !2899)
!3523 = !DILocation(line: 1097, column: 14, scope: !2899)
!3524 = !DILocation(line: 1098, column: 18, scope: !2899)
!3525 = !DILocation(line: 1098, column: 21, scope: !2899)
!3526 = !DILocation(line: 1098, column: 28, scope: !2899)
!3527 = !DILocation(line: 1098, column: 35, scope: !2899)
!3528 = !DILocation(line: 1098, column: 27, scope: !2899)
!3529 = !DILocation(line: 1098, column: 5, scope: !2899)
!3530 = !DILocation(line: 1099, column: 5, scope: !2899)
!3531 = !DILocation(line: 1099, column: 8, scope: !2899)
!3532 = !DILocation(line: 1099, column: 21, scope: !2899)
!3533 = !DILocation(line: 1101, column: 5, scope: !2899)
!3534 = !DILocation(line: 1101, column: 8, scope: !2899)
!3535 = !DILocation(line: 1101, column: 18, scope: !2899)
!3536 = !DILocation(line: 1102, column: 5, scope: !2899)
!3537 = !DILocation(line: 1102, column: 8, scope: !2899)
!3538 = !DILocation(line: 1102, column: 20, scope: !2899)
!3539 = !DILocation(line: 1105, column: 29, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1104, column: 9)
!3541 = !DILocation(line: 1105, column: 9, scope: !3540)
!3542 = !DILocation(line: 1110, column: 16, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !2899, file: !1035, line: 1110, column: 9)
!3544 = !DILocation(line: 1110, column: 14, scope: !3543)
!3545 = !DILocation(line: 1110, column: 72, scope: !3543)
!3546 = !DILocation(line: 1110, column: 9, scope: !2899)
!3547 = !DILocation(line: 1111, column: 9, scope: !3543)
!3548 = !DILocation(line: 1113, column: 22, scope: !2899)
!3549 = !DILocation(line: 1113, column: 30, scope: !2899)
!3550 = !DILocation(line: 1113, column: 33, scope: !2899)
!3551 = !DILocation(line: 1113, column: 5, scope: !2899)
!3552 = !DILocation(line: 1115, column: 5, scope: !2899)
!3553 = !DILocation(line: 1117, column: 20, scope: !2899)
!3554 = !DILocation(line: 1117, column: 5, scope: !2899)
!3555 = !DILocation(line: 1118, column: 12, scope: !2899)
!3556 = !DILocation(line: 1118, column: 5, scope: !2899)
!3557 = !DILocation(line: 1119, column: 1, scope: !2899)
!3558 = distinct !DISubprogram(name: "aac_encode_frame", scope: !1035, file: !1035, line: 556, type: !1766, isLocal: true, isDefinition: true, scopeLine: 558, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!3559 = !DILocalVariable(name: "a", arg: 1, scope: !3560, file: !3561, line: 124, type: !1032)
!3560 = distinct !DISubprogram(name: "av_clipf_sse", scope: !3561, file: !3561, line: 124, type: !3562, isLocal: true, isDefinition: true, scopeLine: 125, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!3561 = !DIFile(filename: "./libavutil/x86/intmath.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3562 = !DISubroutineType(types: !3563)
!3563 = !{!1032, !1032, !1032, !1032}
!3564 = !DILocation(line: 124, column: 94, scope: !3560, inlinedAt: !3565)
!3565 = distinct !DILocation(line: 853, column: 25, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !1035, line: 845, column: 76)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !1035, line: 845, column: 17)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !1035, line: 842, column: 9)
!3569 = distinct !DILexicalBlock(scope: !3570, file: !1035, line: 839, column: 14)
!3570 = distinct !DILexicalBlock(scope: !3558, file: !1035, line: 684, column: 8)
!3571 = !DILocalVariable(name: "amin", arg: 2, scope: !3560, file: !3561, line: 124, type: !1032)
!3572 = !DILocation(line: 124, column: 103, scope: !3560, inlinedAt: !3565)
!3573 = !DILocalVariable(name: "amax", arg: 3, scope: !3560, file: !3561, line: 124, type: !1032)
!3574 = !DILocation(line: 124, column: 115, scope: !3560, inlinedAt: !3565)
!3575 = !DILocalVariable(name: "avctx", arg: 1, scope: !3558, file: !1035, line: 556, type: !1162)
!3576 = !DILocation(line: 556, column: 45, scope: !3558)
!3577 = !DILocalVariable(name: "avpkt", arg: 2, scope: !3558, file: !1035, line: 556, type: !1308)
!3578 = !DILocation(line: 556, column: 62, scope: !3558)
!3579 = !DILocalVariable(name: "frame", arg: 3, scope: !3558, file: !1035, line: 557, type: !1452)
!3580 = !DILocation(line: 557, column: 44, scope: !3558)
!3581 = !DILocalVariable(name: "got_packet_ptr", arg: 4, scope: !3558, file: !1035, line: 557, type: !1454)
!3582 = !DILocation(line: 557, column: 56, scope: !3558)
!3583 = !DILocalVariable(name: "s", scope: !3558, file: !1035, line: 559, type: !2903)
!3584 = !DILocation(line: 559, column: 20, scope: !3558)
!3585 = !DILocation(line: 559, column: 24, scope: !3558)
!3586 = !DILocation(line: 559, column: 31, scope: !3558)
!3587 = !DILocalVariable(name: "samples", scope: !3558, file: !1035, line: 560, type: !3588)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64, align: 64)
!3589 = !DILocation(line: 560, column: 13, scope: !3558)
!3590 = !DILocation(line: 560, column: 23, scope: !3558)
!3591 = !DILocation(line: 560, column: 26, scope: !3558)
!3592 = !DILocalVariable(name: "samples2", scope: !3558, file: !1035, line: 560, type: !1869)
!3593 = !DILocation(line: 560, column: 43, scope: !3558)
!3594 = !DILocalVariable(name: "la", scope: !3558, file: !1035, line: 560, type: !1869)
!3595 = !DILocation(line: 560, column: 54, scope: !3558)
!3596 = !DILocalVariable(name: "overlap", scope: !3558, file: !1035, line: 560, type: !1869)
!3597 = !DILocation(line: 560, column: 59, scope: !3558)
!3598 = !DILocalVariable(name: "cpe", scope: !3558, file: !1035, line: 561, type: !2175)
!3599 = !DILocation(line: 561, column: 21, scope: !3558)
!3600 = !DILocalVariable(name: "sce", scope: !3558, file: !1035, line: 562, type: !1903)
!3601 = !DILocation(line: 562, column: 27, scope: !3558)
!3602 = !DILocalVariable(name: "ics", scope: !3558, file: !1035, line: 563, type: !2651)
!3603 = !DILocation(line: 563, column: 30, scope: !3558)
!3604 = !DILocalVariable(name: "i", scope: !3558, file: !1035, line: 564, type: !1023)
!3605 = !DILocation(line: 564, column: 9, scope: !3558)
!3606 = !DILocalVariable(name: "its", scope: !3558, file: !1035, line: 564, type: !1023)
!3607 = !DILocation(line: 564, column: 12, scope: !3558)
!3608 = !DILocalVariable(name: "ch", scope: !3558, file: !1035, line: 564, type: !1023)
!3609 = !DILocation(line: 564, column: 17, scope: !3558)
!3610 = !DILocalVariable(name: "w", scope: !3558, file: !1035, line: 564, type: !1023)
!3611 = !DILocation(line: 564, column: 21, scope: !3558)
!3612 = !DILocalVariable(name: "chans", scope: !3558, file: !1035, line: 564, type: !1023)
!3613 = !DILocation(line: 564, column: 24, scope: !3558)
!3614 = !DILocalVariable(name: "tag", scope: !3558, file: !1035, line: 564, type: !1023)
!3615 = !DILocation(line: 564, column: 31, scope: !3558)
!3616 = !DILocalVariable(name: "start_ch", scope: !3558, file: !1035, line: 564, type: !1023)
!3617 = !DILocation(line: 564, column: 36, scope: !3558)
!3618 = !DILocalVariable(name: "ret", scope: !3558, file: !1035, line: 564, type: !1023)
!3619 = !DILocation(line: 564, column: 46, scope: !3558)
!3620 = !DILocalVariable(name: "frame_bits", scope: !3558, file: !1035, line: 564, type: !1023)
!3621 = !DILocation(line: 564, column: 51, scope: !3558)
!3622 = !DILocalVariable(name: "target_bits", scope: !3558, file: !1035, line: 565, type: !1023)
!3623 = !DILocation(line: 565, column: 9, scope: !3558)
!3624 = !DILocalVariable(name: "rate_bits", scope: !3558, file: !1035, line: 565, type: !1023)
!3625 = !DILocation(line: 565, column: 22, scope: !3558)
!3626 = !DILocalVariable(name: "too_many_bits", scope: !3558, file: !1035, line: 565, type: !1023)
!3627 = !DILocation(line: 565, column: 33, scope: !3558)
!3628 = !DILocalVariable(name: "too_few_bits", scope: !3558, file: !1035, line: 565, type: !1023)
!3629 = !DILocation(line: 565, column: 48, scope: !3558)
!3630 = !DILocalVariable(name: "ms_mode", scope: !3558, file: !1035, line: 566, type: !1023)
!3631 = !DILocation(line: 566, column: 9, scope: !3558)
!3632 = !DILocalVariable(name: "is_mode", scope: !3558, file: !1035, line: 566, type: !1023)
!3633 = !DILocation(line: 566, column: 22, scope: !3558)
!3634 = !DILocalVariable(name: "tns_mode", scope: !3558, file: !1035, line: 566, type: !1023)
!3635 = !DILocation(line: 566, column: 35, scope: !3558)
!3636 = !DILocalVariable(name: "pred_mode", scope: !3558, file: !1035, line: 566, type: !1023)
!3637 = !DILocation(line: 566, column: 49, scope: !3558)
!3638 = !DILocalVariable(name: "chan_el_counter", scope: !3558, file: !1035, line: 567, type: !1298)
!3639 = !DILocation(line: 567, column: 9, scope: !3558)
!3640 = !DILocalVariable(name: "windows", scope: !3558, file: !1035, line: 568, type: !3641)
!3641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2709, size: 12288, align: 64, elements: !1796)
!3642 = !DILocation(line: 568, column: 21, scope: !3558)
!3643 = !DILocation(line: 571, column: 9, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3558, file: !1035, line: 571, column: 9)
!3645 = !DILocation(line: 571, column: 9, scope: !3558)
!3646 = !DILocation(line: 572, column: 37, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3648, file: !1035, line: 572, column: 13)
!3648 = distinct !DILexicalBlock(scope: !3644, file: !1035, line: 571, column: 16)
!3649 = !DILocation(line: 572, column: 40, scope: !3647)
!3650 = !DILocation(line: 572, column: 45, scope: !3647)
!3651 = !DILocation(line: 572, column: 20, scope: !3647)
!3652 = !DILocation(line: 572, column: 18, scope: !3647)
!3653 = !DILocation(line: 572, column: 53, scope: !3647)
!3654 = !DILocation(line: 572, column: 13, scope: !3648)
!3655 = !DILocation(line: 573, column: 20, scope: !3647)
!3656 = !DILocation(line: 573, column: 13, scope: !3647)
!3657 = !DILocation(line: 574, column: 5, scope: !3648)
!3658 = !DILocation(line: 575, column: 14, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !1035, line: 575, column: 13)
!3660 = distinct !DILexicalBlock(scope: !3644, file: !1035, line: 574, column: 12)
!3661 = !DILocation(line: 575, column: 17, scope: !3659)
!3662 = !DILocation(line: 575, column: 21, scope: !3659)
!3663 = !DILocation(line: 575, column: 39, scope: !3659)
!3664 = !DILocation(line: 575, column: 44, scope: !3665)
!3665 = !DILexicalBlockFile(scope: !3659, file: !1035, discriminator: 1)
!3666 = !DILocation(line: 575, column: 47, scope: !3665)
!3667 = !DILocation(line: 575, column: 51, scope: !3665)
!3668 = !DILocation(line: 575, column: 63, scope: !3665)
!3669 = !DILocation(line: 575, column: 67, scope: !3670)
!3670 = !DILexicalBlockFile(scope: !3659, file: !1035, discriminator: 2)
!3671 = !DILocation(line: 575, column: 70, scope: !3670)
!3672 = !DILocation(line: 575, column: 74, scope: !3670)
!3673 = !DILocation(line: 575, column: 13, scope: !3670)
!3674 = !DILocation(line: 576, column: 13, scope: !3659)
!3675 = !DILocation(line: 579, column: 24, scope: !3558)
!3676 = !DILocation(line: 579, column: 27, scope: !3558)
!3677 = !DILocation(line: 579, column: 5, scope: !3558)
!3678 = !DILocation(line: 580, column: 9, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3558, file: !1035, line: 580, column: 9)
!3680 = !DILocation(line: 580, column: 12, scope: !3679)
!3681 = !DILocation(line: 580, column: 9, scope: !3558)
!3682 = !DILocation(line: 581, column: 27, scope: !3679)
!3683 = !DILocation(line: 581, column: 30, scope: !3679)
!3684 = !DILocation(line: 581, column: 37, scope: !3679)
!3685 = !DILocation(line: 581, column: 40, scope: !3679)
!3686 = !DILocation(line: 581, column: 56, scope: !3679)
!3687 = !DILocation(line: 581, column: 59, scope: !3679)
!3688 = !DILocation(line: 581, column: 9, scope: !3679)
!3689 = !DILocation(line: 583, column: 10, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3558, file: !1035, line: 583, column: 9)
!3691 = !DILocation(line: 583, column: 17, scope: !3690)
!3692 = !DILocation(line: 583, column: 9, scope: !3558)
!3693 = !DILocation(line: 584, column: 9, scope: !3690)
!3694 = !DILocation(line: 586, column: 14, scope: !3558)
!3695 = !DILocation(line: 587, column: 12, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3558, file: !1035, line: 587, column: 5)
!3697 = !DILocation(line: 587, column: 10, scope: !3696)
!3698 = !DILocation(line: 587, column: 17, scope: !3699)
!3699 = !DILexicalBlockFile(scope: !3700, file: !1035, discriminator: 1)
!3700 = distinct !DILexicalBlock(scope: !3696, file: !1035, line: 587, column: 5)
!3701 = !DILocation(line: 587, column: 21, scope: !3699)
!3702 = !DILocation(line: 587, column: 24, scope: !3699)
!3703 = !DILocation(line: 587, column: 19, scope: !3699)
!3704 = !DILocation(line: 587, column: 5, scope: !3699)
!3705 = !DILocalVariable(name: "wi", scope: !3706, file: !1035, line: 588, type: !3707)
!3706 = distinct !DILexicalBlock(scope: !3700, file: !1035, line: 587, column: 42)
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64, align: 64)
!3708 = !DILocation(line: 588, column: 26, scope: !3706)
!3709 = !DILocation(line: 588, column: 31, scope: !3706)
!3710 = !DILocation(line: 588, column: 41, scope: !3706)
!3711 = !DILocation(line: 588, column: 39, scope: !3706)
!3712 = !DILocation(line: 589, column: 27, scope: !3706)
!3713 = !DILocation(line: 589, column: 28, scope: !3706)
!3714 = !DILocation(line: 589, column: 15, scope: !3706)
!3715 = !DILocation(line: 589, column: 18, scope: !3706)
!3716 = !DILocation(line: 589, column: 13, scope: !3706)
!3717 = !DILocation(line: 590, column: 17, scope: !3706)
!3718 = !DILocation(line: 590, column: 21, scope: !3706)
!3719 = !DILocation(line: 590, column: 15, scope: !3706)
!3720 = !DILocation(line: 591, column: 23, scope: !3706)
!3721 = !DILocation(line: 591, column: 16, scope: !3706)
!3722 = !DILocation(line: 591, column: 19, scope: !3706)
!3723 = !DILocation(line: 591, column: 13, scope: !3706)
!3724 = !DILocation(line: 592, column: 17, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3706, file: !1035, line: 592, column: 9)
!3726 = !DILocation(line: 592, column: 14, scope: !3725)
!3727 = !DILocation(line: 592, column: 22, scope: !3728)
!3728 = !DILexicalBlockFile(scope: !3729, file: !1035, discriminator: 1)
!3729 = distinct !DILexicalBlock(scope: !3725, file: !1035, line: 592, column: 9)
!3730 = !DILocation(line: 592, column: 27, scope: !3728)
!3731 = !DILocation(line: 592, column: 25, scope: !3728)
!3732 = !DILocation(line: 592, column: 9, scope: !3728)
!3733 = !DILocalVariable(name: "k", scope: !3734, file: !1035, line: 593, type: !1023)
!3734 = distinct !DILexicalBlock(scope: !3729, file: !1035, line: 592, column: 40)
!3735 = !DILocation(line: 593, column: 17, scope: !3734)
!3736 = !DILocalVariable(name: "clip_avoidance_factor", scope: !3734, file: !1035, line: 594, type: !1032)
!3737 = !DILocation(line: 594, column: 19, scope: !3734)
!3738 = !DILocation(line: 595, column: 28, scope: !3734)
!3739 = !DILocation(line: 595, column: 20, scope: !3734)
!3740 = !DILocation(line: 595, column: 25, scope: !3734)
!3741 = !DILocation(line: 595, column: 17, scope: !3734)
!3742 = !DILocation(line: 596, column: 20, scope: !3734)
!3743 = !DILocation(line: 596, column: 25, scope: !3734)
!3744 = !DILocation(line: 596, column: 17, scope: !3734)
!3745 = !DILocation(line: 597, column: 30, scope: !3734)
!3746 = !DILocation(line: 597, column: 41, scope: !3734)
!3747 = !DILocation(line: 597, column: 39, scope: !3734)
!3748 = !DILocation(line: 597, column: 13, scope: !3734)
!3749 = !DILocation(line: 597, column: 16, scope: !3734)
!3750 = !DILocation(line: 597, column: 28, scope: !3734)
!3751 = !DILocation(line: 598, column: 32, scope: !3734)
!3752 = !DILocation(line: 598, column: 35, scope: !3734)
!3753 = !DILocation(line: 598, column: 24, scope: !3734)
!3754 = !DILocation(line: 598, column: 21, scope: !3734)
!3755 = !DILocation(line: 599, column: 24, scope: !3734)
!3756 = !DILocation(line: 599, column: 32, scope: !3734)
!3757 = !DILocation(line: 599, column: 22, scope: !3734)
!3758 = !DILocation(line: 600, column: 18, scope: !3734)
!3759 = !DILocation(line: 600, column: 27, scope: !3734)
!3760 = !DILocation(line: 600, column: 16, scope: !3734)
!3761 = !DILocation(line: 601, column: 18, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3734, file: !1035, line: 601, column: 17)
!3763 = !DILocation(line: 601, column: 17, scope: !3734)
!3764 = !DILocation(line: 602, column: 20, scope: !3762)
!3765 = !DILocation(line: 602, column: 17, scope: !3762)
!3766 = !DILocation(line: 603, column: 17, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3734, file: !1035, line: 603, column: 17)
!3768 = !DILocation(line: 603, column: 21, scope: !3767)
!3769 = !DILocation(line: 603, column: 17, scope: !3734)
!3770 = !DILocation(line: 604, column: 44, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3767, file: !1035, line: 603, column: 34)
!3772 = !DILocation(line: 604, column: 41, scope: !3771)
!3773 = !DILocation(line: 604, column: 48, scope: !3771)
!3774 = !DILocation(line: 604, column: 63, scope: !3771)
!3775 = !DILocation(line: 604, column: 20, scope: !3771)
!3776 = !DILocation(line: 604, column: 17, scope: !3771)
!3777 = !DILocation(line: 604, column: 24, scope: !3771)
!3778 = !DILocation(line: 604, column: 39, scope: !3771)
!3779 = !DILocation(line: 605, column: 20, scope: !3771)
!3780 = !DILocation(line: 605, column: 17, scope: !3771)
!3781 = !DILocation(line: 605, column: 24, scope: !3771)
!3782 = !DILocation(line: 605, column: 37, scope: !3771)
!3783 = !DILocation(line: 606, column: 20, scope: !3771)
!3784 = !DILocation(line: 606, column: 17, scope: !3771)
!3785 = !DILocation(line: 606, column: 24, scope: !3771)
!3786 = !DILocation(line: 606, column: 36, scope: !3771)
!3787 = !DILocation(line: 607, column: 20, scope: !3771)
!3788 = !DILocation(line: 607, column: 17, scope: !3771)
!3789 = !DILocation(line: 607, column: 24, scope: !3771)
!3790 = !DILocation(line: 607, column: 36, scope: !3771)
!3791 = !DILocation(line: 608, column: 20, scope: !3771)
!3792 = !DILocation(line: 608, column: 17, scope: !3771)
!3793 = !DILocation(line: 608, column: 24, scope: !3771)
!3794 = !DILocation(line: 608, column: 36, scope: !3771)
!3795 = !DILocation(line: 614, column: 32, scope: !3771)
!3796 = !DILocation(line: 614, column: 35, scope: !3771)
!3797 = !DILocation(line: 614, column: 52, scope: !3771)
!3798 = !DILocation(line: 614, column: 17, scope: !3771)
!3799 = !DILocation(line: 614, column: 22, scope: !3771)
!3800 = !DILocation(line: 614, column: 30, scope: !3771)
!3801 = !DILocation(line: 615, column: 13, scope: !3771)
!3802 = !DILocation(line: 616, column: 20, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3767, file: !1035, line: 615, column: 20)
!3804 = !DILocation(line: 616, column: 17, scope: !3803)
!3805 = !DILocation(line: 616, column: 26, scope: !3803)
!3806 = !DILocation(line: 616, column: 29, scope: !3803)
!3807 = !DILocation(line: 616, column: 33, scope: !3803)
!3808 = !DILocation(line: 616, column: 40, scope: !3803)
!3809 = !DILocation(line: 616, column: 48, scope: !3803)
!3810 = !DILocation(line: 616, column: 51, scope: !3803)
!3811 = !DILocation(line: 616, column: 56, scope: !3803)
!3812 = !DILocation(line: 616, column: 66, scope: !3803)
!3813 = !DILocation(line: 616, column: 70, scope: !3803)
!3814 = !DILocation(line: 616, column: 73, scope: !3803)
!3815 = !DILocation(line: 617, column: 47, scope: !3803)
!3816 = !DILocation(line: 617, column: 52, scope: !3803)
!3817 = !DILocation(line: 616, column: 26, scope: !3818)
!3818 = !DILexicalBlockFile(scope: !3803, file: !1035, discriminator: 1)
!3819 = !DILocation(line: 619, column: 39, scope: !3734)
!3820 = !DILocation(line: 619, column: 44, scope: !3734)
!3821 = !DILocation(line: 619, column: 13, scope: !3734)
!3822 = !DILocation(line: 619, column: 18, scope: !3734)
!3823 = !DILocation(line: 619, column: 37, scope: !3734)
!3824 = !DILocation(line: 620, column: 42, scope: !3734)
!3825 = !DILocation(line: 620, column: 39, scope: !3734)
!3826 = !DILocation(line: 620, column: 46, scope: !3734)
!3827 = !DILocation(line: 620, column: 13, scope: !3734)
!3828 = !DILocation(line: 620, column: 18, scope: !3734)
!3829 = !DILocation(line: 620, column: 37, scope: !3734)
!3830 = !DILocation(line: 621, column: 37, scope: !3734)
!3831 = !DILocation(line: 621, column: 42, scope: !3734)
!3832 = !DILocation(line: 621, column: 13, scope: !3734)
!3833 = !DILocation(line: 621, column: 18, scope: !3734)
!3834 = !DILocation(line: 621, column: 35, scope: !3734)
!3835 = !DILocation(line: 622, column: 40, scope: !3734)
!3836 = !DILocation(line: 622, column: 37, scope: !3734)
!3837 = !DILocation(line: 622, column: 44, scope: !3734)
!3838 = !DILocation(line: 622, column: 13, scope: !3734)
!3839 = !DILocation(line: 622, column: 18, scope: !3734)
!3840 = !DILocation(line: 622, column: 35, scope: !3734)
!3841 = !DILocation(line: 623, column: 35, scope: !3734)
!3842 = !DILocation(line: 623, column: 32, scope: !3734)
!3843 = !DILocation(line: 623, column: 39, scope: !3734)
!3844 = !DILocation(line: 623, column: 13, scope: !3734)
!3845 = !DILocation(line: 623, column: 18, scope: !3734)
!3846 = !DILocation(line: 623, column: 30, scope: !3734)
!3847 = !DILocation(line: 624, column: 44, scope: !3734)
!3848 = !DILocation(line: 624, column: 49, scope: !3734)
!3849 = !DILocation(line: 624, column: 61, scope: !3734)
!3850 = !DILocation(line: 624, column: 30, scope: !3734)
!3851 = !DILocation(line: 624, column: 33, scope: !3734)
!3852 = !DILocation(line: 624, column: 37, scope: !3734)
!3853 = !DILocation(line: 624, column: 13, scope: !3734)
!3854 = !DILocation(line: 624, column: 18, scope: !3734)
!3855 = !DILocation(line: 624, column: 28, scope: !3734)
!3856 = !DILocation(line: 625, column: 28, scope: !3734)
!3857 = !DILocation(line: 625, column: 32, scope: !3734)
!3858 = !DILocation(line: 625, column: 46, scope: !3859)
!3859 = !DILexicalBlockFile(scope: !3734, file: !1035, discriminator: 1)
!3860 = !DILocation(line: 625, column: 51, scope: !3859)
!3861 = !DILocation(line: 625, column: 28, scope: !3859)
!3862 = !DILocation(line: 625, column: 78, scope: !3863)
!3863 = !DILexicalBlockFile(scope: !3734, file: !1035, discriminator: 2)
!3864 = !DILocation(line: 625, column: 83, scope: !3863)
!3865 = !DILocation(line: 625, column: 95, scope: !3863)
!3866 = !DILocation(line: 625, column: 61, scope: !3863)
!3867 = !DILocation(line: 625, column: 64, scope: !3863)
!3868 = !DILocation(line: 625, column: 68, scope: !3863)
!3869 = !DILocation(line: 625, column: 28, scope: !3863)
!3870 = !DILocation(line: 625, column: 28, scope: !3871)
!3871 = !DILexicalBlockFile(scope: !3734, file: !1035, discriminator: 3)
!3872 = !DILocation(line: 625, column: 13, scope: !3871)
!3873 = !DILocation(line: 625, column: 18, scope: !3871)
!3874 = !DILocation(line: 625, column: 26, scope: !3871)
!3875 = !DILocation(line: 626, column: 30, scope: !3734)
!3876 = !DILocation(line: 626, column: 35, scope: !3734)
!3877 = !DILocation(line: 626, column: 29, scope: !3734)
!3878 = !DILocation(line: 626, column: 47, scope: !3734)
!3879 = !DILocation(line: 626, column: 52, scope: !3734)
!3880 = !DILocation(line: 626, column: 44, scope: !3734)
!3881 = !DILocation(line: 626, column: 64, scope: !3859)
!3882 = !DILocation(line: 626, column: 69, scope: !3859)
!3883 = !DILocation(line: 626, column: 29, scope: !3859)
!3884 = !DILocation(line: 626, column: 81, scope: !3863)
!3885 = !DILocation(line: 626, column: 86, scope: !3863)
!3886 = !DILocation(line: 626, column: 80, scope: !3863)
!3887 = !DILocation(line: 626, column: 29, scope: !3863)
!3888 = !DILocation(line: 626, column: 29, scope: !3871)
!3889 = !DILocation(line: 626, column: 28, scope: !3871)
!3890 = !DILocation(line: 626, column: 13, scope: !3871)
!3891 = !DILocation(line: 626, column: 18, scope: !3871)
!3892 = !DILocation(line: 626, column: 26, scope: !3871)
!3893 = !DILocation(line: 627, column: 34, scope: !3734)
!3894 = !DILocation(line: 627, column: 31, scope: !3734)
!3895 = !DILocation(line: 627, column: 38, scope: !3734)
!3896 = !DILocation(line: 627, column: 53, scope: !3734)
!3897 = !DILocation(line: 628, column: 60, scope: !3734)
!3898 = !DILocation(line: 628, column: 63, scope: !3734)
!3899 = !DILocation(line: 628, column: 41, scope: !3734)
!3900 = !DILocation(line: 627, column: 31, scope: !3859)
!3901 = !DILocation(line: 629, column: 60, scope: !3734)
!3902 = !DILocation(line: 629, column: 63, scope: !3734)
!3903 = !DILocation(line: 629, column: 41, scope: !3734)
!3904 = !DILocation(line: 627, column: 31, scope: !3863)
!3905 = !DILocation(line: 627, column: 31, scope: !3871)
!3906 = !DILocation(line: 627, column: 13, scope: !3871)
!3907 = !DILocation(line: 627, column: 18, scope: !3871)
!3908 = !DILocation(line: 627, column: 29, scope: !3871)
!3909 = !DILocation(line: 630, column: 37, scope: !3734)
!3910 = !DILocation(line: 630, column: 34, scope: !3734)
!3911 = !DILocation(line: 630, column: 41, scope: !3734)
!3912 = !DILocation(line: 630, column: 56, scope: !3734)
!3913 = !DILocation(line: 631, column: 63, scope: !3734)
!3914 = !DILocation(line: 631, column: 66, scope: !3734)
!3915 = !DILocation(line: 631, column: 41, scope: !3734)
!3916 = !DILocation(line: 630, column: 34, scope: !3859)
!3917 = !DILocation(line: 632, column: 63, scope: !3734)
!3918 = !DILocation(line: 632, column: 66, scope: !3734)
!3919 = !DILocation(line: 632, column: 41, scope: !3734)
!3920 = !DILocation(line: 630, column: 34, scope: !3863)
!3921 = !DILocation(line: 630, column: 34, scope: !3871)
!3922 = !DILocation(line: 630, column: 13, scope: !3871)
!3923 = !DILocation(line: 630, column: 18, scope: !3871)
!3924 = !DILocation(line: 630, column: 32, scope: !3871)
!3925 = !DILocation(line: 634, column: 20, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3734, file: !1035, line: 634, column: 13)
!3927 = !DILocation(line: 634, column: 18, scope: !3926)
!3928 = !DILocation(line: 634, column: 25, scope: !3929)
!3929 = !DILexicalBlockFile(scope: !3930, file: !1035, discriminator: 1)
!3930 = distinct !DILexicalBlock(scope: !3926, file: !1035, line: 634, column: 13)
!3931 = !DILocation(line: 634, column: 29, scope: !3929)
!3932 = !DILocation(line: 634, column: 34, scope: !3929)
!3933 = !DILocation(line: 634, column: 27, scope: !3929)
!3934 = !DILocation(line: 634, column: 13, scope: !3929)
!3935 = !DILocation(line: 635, column: 53, scope: !3930)
!3936 = !DILocation(line: 635, column: 37, scope: !3930)
!3937 = !DILocation(line: 635, column: 40, scope: !3930)
!3938 = !DILocation(line: 635, column: 44, scope: !3930)
!3939 = !DILocation(line: 635, column: 32, scope: !3930)
!3940 = !DILocation(line: 635, column: 17, scope: !3930)
!3941 = !DILocation(line: 635, column: 22, scope: !3930)
!3942 = !DILocation(line: 635, column: 35, scope: !3930)
!3943 = !DILocation(line: 634, column: 48, scope: !3944)
!3944 = !DILexicalBlockFile(scope: !3930, file: !1035, discriminator: 2)
!3945 = !DILocation(line: 634, column: 13, scope: !3944)
!3946 = distinct !{!3946, !3947}
!3947 = !DILocation(line: 634, column: 13, scope: !3734)
!3948 = !DILocation(line: 638, column: 35, scope: !3734)
!3949 = !DILocation(line: 639, column: 20, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3734, file: !1035, line: 639, column: 13)
!3951 = !DILocation(line: 639, column: 18, scope: !3950)
!3952 = !DILocation(line: 639, column: 25, scope: !3953)
!3953 = !DILexicalBlockFile(scope: !3954, file: !1035, discriminator: 1)
!3954 = distinct !DILexicalBlock(scope: !3950, file: !1035, line: 639, column: 13)
!3955 = !DILocation(line: 639, column: 29, scope: !3953)
!3956 = !DILocation(line: 639, column: 34, scope: !3953)
!3957 = !DILocation(line: 639, column: 27, scope: !3953)
!3958 = !DILocation(line: 639, column: 13, scope: !3953)
!3959 = !DILocalVariable(name: "wbuf", scope: !3960, file: !1035, line: 640, type: !1870)
!3960 = distinct !DILexicalBlock(scope: !3954, file: !1035, line: 639, column: 52)
!3961 = !DILocation(line: 640, column: 30, scope: !3960)
!3962 = !DILocation(line: 640, column: 37, scope: !3960)
!3963 = !DILocation(line: 640, column: 47, scope: !3960)
!3964 = !DILocation(line: 640, column: 49, scope: !3960)
!3965 = !DILocation(line: 640, column: 45, scope: !3960)
!3966 = !DILocalVariable(name: "wlen", scope: !3960, file: !1035, line: 641, type: !1061)
!3967 = !DILocation(line: 641, column: 27, scope: !3960)
!3968 = !DILocation(line: 641, column: 41, scope: !3960)
!3969 = !DILocation(line: 641, column: 46, scope: !3960)
!3970 = !DILocation(line: 641, column: 39, scope: !3960)
!3971 = !DILocalVariable(name: "max", scope: !3960, file: !1035, line: 642, type: !1032)
!3972 = !DILocation(line: 642, column: 23, scope: !3960)
!3973 = !DILocalVariable(name: "j", scope: !3960, file: !1035, line: 643, type: !1023)
!3974 = !DILocation(line: 643, column: 21, scope: !3960)
!3975 = !DILocation(line: 645, column: 24, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3960, file: !1035, line: 645, column: 17)
!3977 = !DILocation(line: 645, column: 22, scope: !3976)
!3978 = !DILocation(line: 645, column: 29, scope: !3979)
!3979 = !DILexicalBlockFile(scope: !3980, file: !1035, discriminator: 1)
!3980 = distinct !DILexicalBlock(scope: !3976, file: !1035, line: 645, column: 17)
!3981 = !DILocation(line: 645, column: 33, scope: !3979)
!3982 = !DILocation(line: 645, column: 31, scope: !3979)
!3983 = !DILocation(line: 645, column: 17, scope: !3979)
!3984 = !DILocation(line: 646, column: 29, scope: !3980)
!3985 = !DILocation(line: 646, column: 48, scope: !3980)
!3986 = !DILocation(line: 646, column: 43, scope: !3980)
!3987 = !DILocation(line: 646, column: 37, scope: !3980)
!3988 = !DILocation(line: 646, column: 34, scope: !3980)
!3989 = !DILocation(line: 646, column: 28, scope: !3980)
!3990 = !DILocation(line: 646, column: 56, scope: !3979)
!3991 = !DILocation(line: 646, column: 28, scope: !3979)
!3992 = !DILocation(line: 646, column: 75, scope: !3993)
!3993 = !DILexicalBlockFile(scope: !3980, file: !1035, discriminator: 2)
!3994 = !DILocation(line: 646, column: 70, scope: !3993)
!3995 = !DILocation(line: 646, column: 64, scope: !3993)
!3996 = !DILocation(line: 646, column: 28, scope: !3993)
!3997 = !DILocation(line: 646, column: 28, scope: !3998)
!3998 = !DILexicalBlockFile(scope: !3980, file: !1035, discriminator: 3)
!3999 = !DILocation(line: 646, column: 25, scope: !3998)
!4000 = !DILocation(line: 646, column: 21, scope: !3998)
!4001 = !DILocation(line: 645, column: 40, scope: !3993)
!4002 = !DILocation(line: 645, column: 17, scope: !3993)
!4003 = distinct !{!4003, !4004}
!4004 = !DILocation(line: 645, column: 17, scope: !3960)
!4005 = !DILocation(line: 647, column: 38, scope: !3960)
!4006 = !DILocation(line: 647, column: 33, scope: !3960)
!4007 = !DILocation(line: 647, column: 17, scope: !3960)
!4008 = !DILocation(line: 647, column: 20, scope: !3960)
!4009 = !DILocation(line: 647, column: 24, scope: !3960)
!4010 = !DILocation(line: 647, column: 36, scope: !3960)
!4011 = !DILocation(line: 648, column: 13, scope: !3960)
!4012 = !DILocation(line: 639, column: 48, scope: !4013)
!4013 = !DILexicalBlockFile(scope: !3954, file: !1035, discriminator: 2)
!4014 = !DILocation(line: 639, column: 13, scope: !4013)
!4015 = distinct !{!4015, !4016}
!4016 = !DILocation(line: 639, column: 13, scope: !3734)
!4017 = !DILocation(line: 649, column: 20, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3734, file: !1035, line: 649, column: 13)
!4019 = !DILocation(line: 649, column: 18, scope: !4018)
!4020 = !DILocation(line: 649, column: 25, scope: !4021)
!4021 = !DILexicalBlockFile(scope: !4022, file: !1035, discriminator: 1)
!4022 = distinct !DILexicalBlock(scope: !4018, file: !1035, line: 649, column: 13)
!4023 = !DILocation(line: 649, column: 29, scope: !4021)
!4024 = !DILocation(line: 649, column: 34, scope: !4021)
!4025 = !DILocation(line: 649, column: 27, scope: !4021)
!4026 = !DILocation(line: 649, column: 13, scope: !4021)
!4027 = !DILocation(line: 650, column: 37, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !1035, line: 650, column: 21)
!4029 = distinct !DILexicalBlock(scope: !4022, file: !1035, line: 649, column: 52)
!4030 = !DILocation(line: 650, column: 21, scope: !4028)
!4031 = !DILocation(line: 650, column: 24, scope: !4028)
!4032 = !DILocation(line: 650, column: 28, scope: !4028)
!4033 = !DILocation(line: 650, column: 40, scope: !4028)
!4034 = !DILocation(line: 650, column: 21, scope: !4029)
!4035 = !DILocation(line: 651, column: 42, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4028, file: !1035, line: 650, column: 49)
!4037 = !DILocation(line: 651, column: 21, scope: !4036)
!4038 = !DILocation(line: 651, column: 26, scope: !4036)
!4039 = !DILocation(line: 651, column: 45, scope: !4036)
!4040 = !DILocation(line: 652, column: 47, scope: !4036)
!4041 = !DILocation(line: 652, column: 89, scope: !4036)
!4042 = !DILocation(line: 652, column: 73, scope: !4036)
!4043 = !DILocation(line: 652, column: 76, scope: !4036)
!4044 = !DILocation(line: 652, column: 80, scope: !4036)
!4045 = !DILocation(line: 652, column: 70, scope: !4036)
!4046 = !DILocation(line: 652, column: 46, scope: !4036)
!4047 = !DILocation(line: 652, column: 96, scope: !4048)
!4048 = !DILexicalBlockFile(scope: !4036, file: !1035, discriminator: 1)
!4049 = !DILocation(line: 652, column: 46, scope: !4048)
!4050 = !DILocation(line: 652, column: 138, scope: !4051)
!4051 = !DILexicalBlockFile(scope: !4036, file: !1035, discriminator: 2)
!4052 = !DILocation(line: 652, column: 122, scope: !4051)
!4053 = !DILocation(line: 652, column: 125, scope: !4051)
!4054 = !DILocation(line: 652, column: 129, scope: !4051)
!4055 = !DILocation(line: 652, column: 46, scope: !4051)
!4056 = !DILocation(line: 652, column: 46, scope: !4057)
!4057 = !DILexicalBlockFile(scope: !4036, file: !1035, discriminator: 3)
!4058 = !DILocation(line: 652, column: 43, scope: !4057)
!4059 = !DILocation(line: 653, column: 17, scope: !4036)
!4060 = !DILocation(line: 654, column: 42, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4028, file: !1035, line: 653, column: 24)
!4062 = !DILocation(line: 654, column: 21, scope: !4061)
!4063 = !DILocation(line: 654, column: 26, scope: !4061)
!4064 = !DILocation(line: 654, column: 45, scope: !4061)
!4065 = !DILocation(line: 656, column: 13, scope: !4029)
!4066 = !DILocation(line: 649, column: 48, scope: !4067)
!4067 = !DILexicalBlockFile(scope: !4022, file: !1035, discriminator: 2)
!4068 = !DILocation(line: 649, column: 13, scope: !4067)
!4069 = distinct !{!4069, !4070}
!4070 = !DILocation(line: 649, column: 13, scope: !3734)
!4071 = !DILocation(line: 657, column: 17, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !3734, file: !1035, line: 657, column: 17)
!4073 = !DILocation(line: 657, column: 39, scope: !4072)
!4074 = !DILocation(line: 657, column: 17, scope: !3734)
!4075 = !DILocation(line: 658, column: 54, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4072, file: !1035, line: 657, column: 48)
!4077 = !DILocation(line: 658, column: 52, scope: !4076)
!4078 = !DILocation(line: 658, column: 17, scope: !4076)
!4079 = !DILocation(line: 658, column: 22, scope: !4076)
!4080 = !DILocation(line: 658, column: 44, scope: !4076)
!4081 = !DILocation(line: 659, column: 13, scope: !4076)
!4082 = !DILocation(line: 660, column: 17, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4072, file: !1035, line: 659, column: 20)
!4084 = !DILocation(line: 660, column: 22, scope: !4083)
!4085 = !DILocation(line: 660, column: 44, scope: !4083)
!4086 = !DILocation(line: 663, column: 35, scope: !3734)
!4087 = !DILocation(line: 663, column: 38, scope: !3734)
!4088 = !DILocation(line: 663, column: 43, scope: !3734)
!4089 = !DILocation(line: 663, column: 13, scope: !3734)
!4090 = !DILocation(line: 665, column: 17, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !3734, file: !1035, line: 665, column: 17)
!4092 = !DILocation(line: 665, column: 20, scope: !4091)
!4093 = !DILocation(line: 665, column: 28, scope: !4091)
!4094 = !DILocation(line: 665, column: 32, scope: !4091)
!4095 = !DILocation(line: 665, column: 35, scope: !4096)
!4096 = !DILexicalBlockFile(scope: !4091, file: !1035, discriminator: 1)
!4097 = !DILocation(line: 665, column: 38, scope: !4096)
!4098 = !DILocation(line: 665, column: 45, scope: !4096)
!4099 = !DILocation(line: 665, column: 17, scope: !4096)
!4100 = !DILocation(line: 666, column: 17, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4091, file: !1035, line: 665, column: 57)
!4102 = !DILocation(line: 666, column: 20, scope: !4101)
!4103 = !DILocation(line: 666, column: 27, scope: !4101)
!4104 = !DILocation(line: 666, column: 38, scope: !4101)
!4105 = !DILocation(line: 666, column: 41, scope: !4101)
!4106 = !DILocation(line: 667, column: 30, scope: !4101)
!4107 = !DILocation(line: 667, column: 35, scope: !4101)
!4108 = !DILocation(line: 667, column: 39, scope: !4101)
!4109 = !DILocation(line: 667, column: 17, scope: !4101)
!4110 = !DILocation(line: 667, column: 59, scope: !4101)
!4111 = !DILocation(line: 667, column: 62, scope: !4101)
!4112 = !DILocation(line: 667, column: 68, scope: !4101)
!4113 = !DILocation(line: 667, column: 74, scope: !4101)
!4114 = !DILocation(line: 667, column: 79, scope: !4101)
!4115 = !DILocation(line: 668, column: 17, scope: !4101)
!4116 = !DILocation(line: 668, column: 20, scope: !4101)
!4117 = !DILocation(line: 668, column: 29, scope: !4101)
!4118 = !DILocation(line: 668, column: 40, scope: !4101)
!4119 = !DILocation(line: 668, column: 43, scope: !4101)
!4120 = !DILocation(line: 668, column: 53, scope: !4101)
!4121 = !DILocation(line: 668, column: 58, scope: !4101)
!4122 = !DILocation(line: 668, column: 67, scope: !4101)
!4123 = !DILocation(line: 668, column: 72, scope: !4101)
!4124 = !DILocation(line: 669, column: 13, scope: !4101)
!4125 = !DILocation(line: 671, column: 20, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !3734, file: !1035, line: 671, column: 13)
!4127 = !DILocation(line: 671, column: 18, scope: !4126)
!4128 = !DILocation(line: 671, column: 25, scope: !4129)
!4129 = !DILexicalBlockFile(scope: !4130, file: !1035, discriminator: 1)
!4130 = distinct !DILexicalBlock(scope: !4126, file: !1035, line: 671, column: 13)
!4131 = !DILocation(line: 671, column: 27, scope: !4129)
!4132 = !DILocation(line: 671, column: 13, scope: !4129)
!4133 = !DILocation(line: 672, column: 47, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4135, file: !1035, line: 672, column: 21)
!4135 = distinct !DILexicalBlock(scope: !4130, file: !1035, line: 671, column: 40)
!4136 = !DILocation(line: 672, column: 28, scope: !4134)
!4137 = !DILocation(line: 672, column: 36, scope: !4134)
!4138 = !DILocation(line: 672, column: 33, scope: !4134)
!4139 = !DILocation(line: 672, column: 40, scope: !4134)
!4140 = !DILocation(line: 672, column: 23, scope: !4134)
!4141 = !DILocation(line: 672, column: 51, scope: !4134)
!4142 = !DILocation(line: 672, column: 21, scope: !4135)
!4143 = !DILocation(line: 673, column: 28, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4134, file: !1035, line: 672, column: 60)
!4145 = !DILocation(line: 673, column: 21, scope: !4144)
!4146 = !DILocation(line: 674, column: 21, scope: !4144)
!4147 = !DILocation(line: 676, column: 13, scope: !4135)
!4148 = !DILocation(line: 671, column: 36, scope: !4149)
!4149 = !DILexicalBlockFile(scope: !4130, file: !1035, discriminator: 2)
!4150 = !DILocation(line: 671, column: 13, scope: !4149)
!4151 = distinct !{!4151, !4152}
!4152 = !DILocation(line: 671, column: 13, scope: !3734)
!4153 = !DILocation(line: 677, column: 28, scope: !3734)
!4154 = !DILocation(line: 677, column: 31, scope: !3734)
!4155 = !DILocation(line: 677, column: 13, scope: !3734)
!4156 = !DILocation(line: 678, column: 9, scope: !3734)
!4157 = !DILocation(line: 592, column: 36, scope: !4158)
!4158 = !DILexicalBlockFile(scope: !3729, file: !1035, discriminator: 2)
!4159 = !DILocation(line: 592, column: 9, scope: !4158)
!4160 = distinct !{!4160, !4161}
!4161 = !DILocation(line: 592, column: 9, scope: !3706)
!4162 = !DILocation(line: 679, column: 21, scope: !3706)
!4163 = !DILocation(line: 679, column: 18, scope: !3706)
!4164 = !DILocation(line: 680, column: 5, scope: !3706)
!4165 = !DILocation(line: 587, column: 38, scope: !4166)
!4166 = !DILexicalBlockFile(scope: !3700, file: !1035, discriminator: 2)
!4167 = !DILocation(line: 587, column: 5, scope: !4166)
!4168 = distinct !{!4168, !4169}
!4169 = !DILocation(line: 587, column: 5, scope: !3558)
!4170 = !DILocation(line: 681, column: 33, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !3558, file: !1035, line: 681, column: 9)
!4172 = !DILocation(line: 681, column: 40, scope: !4171)
!4173 = !DILocation(line: 681, column: 54, scope: !4171)
!4174 = !DILocation(line: 681, column: 57, scope: !4171)
!4175 = !DILocation(line: 681, column: 52, scope: !4171)
!4176 = !DILocation(line: 681, column: 47, scope: !4171)
!4177 = !DILocation(line: 681, column: 16, scope: !4171)
!4178 = !DILocation(line: 681, column: 14, scope: !4171)
!4179 = !DILocation(line: 681, column: 71, scope: !4171)
!4180 = !DILocation(line: 681, column: 9, scope: !3558)
!4181 = !DILocation(line: 682, column: 16, scope: !4171)
!4182 = !DILocation(line: 682, column: 9, scope: !4171)
!4183 = !DILocation(line: 683, column: 22, scope: !3558)
!4184 = !DILocation(line: 683, column: 16, scope: !3558)
!4185 = !DILocation(line: 684, column: 5, scope: !3558)
!4186 = distinct !{!4186, !4185}
!4187 = !DILocation(line: 685, column: 24, scope: !3570)
!4188 = !DILocation(line: 685, column: 27, scope: !3570)
!4189 = !DILocation(line: 685, column: 31, scope: !3570)
!4190 = !DILocation(line: 685, column: 38, scope: !3570)
!4191 = !DILocation(line: 685, column: 44, scope: !3570)
!4192 = !DILocation(line: 685, column: 51, scope: !3570)
!4193 = !DILocation(line: 685, column: 9, scope: !3570)
!4194 = !DILocation(line: 687, column: 14, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !3570, file: !1035, line: 687, column: 13)
!4196 = !DILocation(line: 687, column: 21, scope: !4195)
!4197 = !DILocation(line: 687, column: 34, scope: !4195)
!4198 = !DILocation(line: 687, column: 41, scope: !4195)
!4199 = !DILocation(line: 687, column: 45, scope: !4195)
!4200 = !DILocation(line: 687, column: 50, scope: !4201)
!4201 = !DILexicalBlockFile(scope: !4195, file: !1035, discriminator: 1)
!4202 = !DILocation(line: 687, column: 57, scope: !4201)
!4203 = !DILocation(line: 687, column: 63, scope: !4201)
!4204 = !DILocation(line: 687, column: 13, scope: !4201)
!4205 = !DILocation(line: 688, column: 32, scope: !4195)
!4206 = !DILocation(line: 688, column: 13, scope: !4195)
!4207 = !DILocation(line: 689, column: 18, scope: !3570)
!4208 = !DILocation(line: 690, column: 21, scope: !3570)
!4209 = !DILocation(line: 691, column: 9, scope: !3570)
!4210 = !DILocation(line: 692, column: 16, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !3570, file: !1035, line: 692, column: 9)
!4212 = !DILocation(line: 692, column: 14, scope: !4211)
!4213 = !DILocation(line: 692, column: 21, scope: !4214)
!4214 = !DILexicalBlockFile(scope: !4215, file: !1035, discriminator: 1)
!4215 = distinct !DILexicalBlock(scope: !4211, file: !1035, line: 692, column: 9)
!4216 = !DILocation(line: 692, column: 25, scope: !4214)
!4217 = !DILocation(line: 692, column: 28, scope: !4214)
!4218 = !DILocation(line: 692, column: 23, scope: !4214)
!4219 = !DILocation(line: 692, column: 9, scope: !4214)
!4220 = !DILocalVariable(name: "wi", scope: !4221, file: !1035, line: 693, type: !3707)
!4221 = distinct !DILexicalBlock(scope: !4215, file: !1035, line: 692, column: 46)
!4222 = !DILocation(line: 693, column: 30, scope: !4221)
!4223 = !DILocation(line: 693, column: 35, scope: !4221)
!4224 = !DILocation(line: 693, column: 45, scope: !4221)
!4225 = !DILocation(line: 693, column: 43, scope: !4221)
!4226 = !DILocalVariable(name: "coeffs", scope: !4221, file: !1035, line: 694, type: !4227)
!4227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1870, size: 128, align: 64, elements: !1807)
!4228 = !DILocation(line: 694, column: 26, scope: !4221)
!4229 = !DILocation(line: 695, column: 31, scope: !4221)
!4230 = !DILocation(line: 695, column: 32, scope: !4221)
!4231 = !DILocation(line: 695, column: 19, scope: !4221)
!4232 = !DILocation(line: 695, column: 22, scope: !4221)
!4233 = !DILocation(line: 695, column: 17, scope: !4221)
!4234 = !DILocation(line: 696, column: 21, scope: !4221)
!4235 = !DILocation(line: 696, column: 25, scope: !4221)
!4236 = !DILocation(line: 696, column: 19, scope: !4221)
!4237 = !DILocation(line: 697, column: 27, scope: !4221)
!4238 = !DILocation(line: 697, column: 20, scope: !4221)
!4239 = !DILocation(line: 697, column: 23, scope: !4221)
!4240 = !DILocation(line: 697, column: 17, scope: !4221)
!4241 = !DILocation(line: 698, column: 13, scope: !4221)
!4242 = !DILocation(line: 698, column: 18, scope: !4221)
!4243 = !DILocation(line: 698, column: 32, scope: !4221)
!4244 = !DILocation(line: 699, column: 20, scope: !4221)
!4245 = !DILocation(line: 699, column: 25, scope: !4221)
!4246 = !DILocation(line: 699, column: 13, scope: !4221)
!4247 = !DILocation(line: 700, column: 20, scope: !4221)
!4248 = !DILocation(line: 700, column: 25, scope: !4221)
!4249 = !DILocation(line: 700, column: 13, scope: !4221)
!4250 = !DILocation(line: 701, column: 23, scope: !4221)
!4251 = !DILocation(line: 701, column: 26, scope: !4221)
!4252 = !DILocation(line: 701, column: 33, scope: !4221)
!4253 = !DILocation(line: 701, column: 13, scope: !4221)
!4254 = !DILocation(line: 702, column: 23, scope: !4221)
!4255 = !DILocation(line: 702, column: 26, scope: !4221)
!4256 = !DILocation(line: 702, column: 49, scope: !4221)
!4257 = !DILocation(line: 702, column: 33, scope: !4221)
!4258 = !DILocation(line: 702, column: 53, scope: !4221)
!4259 = !DILocation(line: 702, column: 13, scope: !4221)
!4260 = !DILocation(line: 703, column: 21, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4221, file: !1035, line: 703, column: 13)
!4262 = !DILocation(line: 703, column: 18, scope: !4261)
!4263 = !DILocation(line: 703, column: 26, scope: !4264)
!4264 = !DILexicalBlockFile(scope: !4265, file: !1035, discriminator: 1)
!4265 = distinct !DILexicalBlock(scope: !4261, file: !1035, line: 703, column: 13)
!4266 = !DILocation(line: 703, column: 31, scope: !4264)
!4267 = !DILocation(line: 703, column: 29, scope: !4264)
!4268 = !DILocation(line: 703, column: 13, scope: !4264)
!4269 = !DILocation(line: 704, column: 32, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4265, file: !1035, line: 703, column: 44)
!4271 = !DILocation(line: 704, column: 24, scope: !4270)
!4272 = !DILocation(line: 704, column: 29, scope: !4270)
!4273 = !DILocation(line: 704, column: 21, scope: !4270)
!4274 = !DILocation(line: 705, column: 30, scope: !4270)
!4275 = !DILocation(line: 705, column: 35, scope: !4270)
!4276 = !DILocation(line: 705, column: 24, scope: !4270)
!4277 = !DILocation(line: 705, column: 17, scope: !4270)
!4278 = !DILocation(line: 705, column: 28, scope: !4270)
!4279 = !DILocation(line: 706, column: 17, scope: !4270)
!4280 = !DILocation(line: 706, column: 22, scope: !4270)
!4281 = !DILocation(line: 706, column: 26, scope: !4270)
!4282 = !DILocation(line: 706, column: 44, scope: !4270)
!4283 = !DILocation(line: 707, column: 17, scope: !4270)
!4284 = !DILocation(line: 707, column: 22, scope: !4270)
!4285 = !DILocation(line: 707, column: 26, scope: !4270)
!4286 = !DILocation(line: 707, column: 30, scope: !4270)
!4287 = !DILocation(line: 707, column: 38, scope: !4270)
!4288 = !DILocation(line: 708, column: 24, scope: !4270)
!4289 = !DILocation(line: 708, column: 29, scope: !4270)
!4290 = !DILocation(line: 708, column: 33, scope: !4270)
!4291 = !DILocation(line: 708, column: 37, scope: !4270)
!4292 = !DILocation(line: 708, column: 17, scope: !4270)
!4293 = !DILocation(line: 709, column: 24, scope: !4270)
!4294 = !DILocation(line: 709, column: 29, scope: !4270)
!4295 = !DILocation(line: 709, column: 33, scope: !4270)
!4296 = !DILocation(line: 709, column: 17, scope: !4270)
!4297 = !DILocation(line: 710, column: 25, scope: !4270)
!4298 = !DILocation(line: 710, column: 30, scope: !4270)
!4299 = !DILocation(line: 710, column: 17, scope: !4270)
!4300 = !DILocation(line: 711, column: 24, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4270, file: !1035, line: 711, column: 17)
!4302 = !DILocation(line: 711, column: 22, scope: !4301)
!4303 = !DILocation(line: 711, column: 29, scope: !4304)
!4304 = !DILexicalBlockFile(scope: !4305, file: !1035, discriminator: 1)
!4305 = distinct !DILexicalBlock(scope: !4301, file: !1035, line: 711, column: 17)
!4306 = !DILocation(line: 711, column: 31, scope: !4304)
!4307 = !DILocation(line: 711, column: 17, scope: !4304)
!4308 = !DILocation(line: 712, column: 40, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4305, file: !1035, line: 712, column: 25)
!4310 = !DILocation(line: 712, column: 25, scope: !4309)
!4311 = !DILocation(line: 712, column: 30, scope: !4309)
!4312 = !DILocation(line: 712, column: 43, scope: !4309)
!4313 = !DILocation(line: 712, column: 25, scope: !4305)
!4314 = !DILocation(line: 713, column: 40, scope: !4309)
!4315 = !DILocation(line: 713, column: 25, scope: !4309)
!4316 = !DILocation(line: 713, column: 30, scope: !4309)
!4317 = !DILocation(line: 713, column: 43, scope: !4309)
!4318 = !DILocation(line: 712, column: 45, scope: !4319)
!4319 = !DILexicalBlockFile(scope: !4309, file: !1035, discriminator: 1)
!4320 = !DILocation(line: 711, column: 39, scope: !4321)
!4321 = !DILexicalBlockFile(scope: !4305, file: !1035, discriminator: 2)
!4322 = !DILocation(line: 711, column: 17, scope: !4321)
!4323 = distinct !{!4323, !4324}
!4324 = !DILocation(line: 711, column: 17, scope: !4270)
!4325 = !DILocation(line: 714, column: 13, scope: !4270)
!4326 = !DILocation(line: 703, column: 40, scope: !4327)
!4327 = !DILexicalBlockFile(scope: !4265, file: !1035, discriminator: 2)
!4328 = !DILocation(line: 703, column: 13, scope: !4327)
!4329 = distinct !{!4329, !4330}
!4330 = !DILocation(line: 703, column: 13, scope: !4221)
!4331 = !DILocation(line: 715, column: 13, scope: !4221)
!4332 = !DILocation(line: 715, column: 16, scope: !4221)
!4333 = !DILocation(line: 715, column: 20, scope: !4221)
!4334 = !DILocation(line: 715, column: 27, scope: !4221)
!4335 = !DILocation(line: 715, column: 33, scope: !4221)
!4336 = !DILocation(line: 716, column: 34, scope: !4221)
!4337 = !DILocation(line: 716, column: 37, scope: !4221)
!4338 = !DILocation(line: 716, column: 59, scope: !4221)
!4339 = !DILocation(line: 716, column: 62, scope: !4221)
!4340 = !DILocation(line: 716, column: 57, scope: !4221)
!4341 = !DILocation(line: 716, column: 13, scope: !4221)
!4342 = !DILocation(line: 716, column: 16, scope: !4221)
!4343 = !DILocation(line: 716, column: 20, scope: !4221)
!4344 = !DILocation(line: 716, column: 27, scope: !4221)
!4345 = !DILocation(line: 716, column: 32, scope: !4221)
!4346 = !DILocation(line: 717, column: 13, scope: !4221)
!4347 = !DILocation(line: 717, column: 16, scope: !4221)
!4348 = !DILocation(line: 717, column: 20, scope: !4221)
!4349 = !DILocation(line: 717, column: 27, scope: !4221)
!4350 = !DILocation(line: 717, column: 36, scope: !4221)
!4351 = !DILocation(line: 717, column: 39, scope: !4221)
!4352 = !DILocation(line: 717, column: 44, scope: !4221)
!4353 = !DILocation(line: 717, column: 54, scope: !4221)
!4354 = !DILocation(line: 717, column: 62, scope: !4221)
!4355 = !DILocation(line: 718, column: 17, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4221, file: !1035, line: 718, column: 17)
!4357 = !DILocation(line: 718, column: 20, scope: !4356)
!4358 = !DILocation(line: 718, column: 24, scope: !4356)
!4359 = !DILocation(line: 718, column: 31, scope: !4356)
!4360 = !DILocation(line: 718, column: 37, scope: !4356)
!4361 = !DILocation(line: 718, column: 17, scope: !4221)
!4362 = !DILocation(line: 720, column: 32, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4356, file: !1035, line: 718, column: 42)
!4364 = !DILocation(line: 720, column: 35, scope: !4363)
!4365 = !DILocation(line: 720, column: 39, scope: !4363)
!4366 = !DILocation(line: 720, column: 46, scope: !4363)
!4367 = !DILocation(line: 721, column: 24, scope: !4363)
!4368 = !DILocation(line: 721, column: 27, scope: !4363)
!4369 = !DILocation(line: 721, column: 37, scope: !4363)
!4370 = !DILocation(line: 721, column: 44, scope: !4363)
!4371 = !DILocation(line: 721, column: 61, scope: !4372)
!4372 = !DILexicalBlockFile(scope: !4363, file: !1035, discriminator: 1)
!4373 = !DILocation(line: 721, column: 68, scope: !4372)
!4374 = !DILocation(line: 721, column: 37, scope: !4372)
!4375 = !DILocation(line: 721, column: 37, scope: !4376)
!4376 = !DILexicalBlockFile(scope: !4363, file: !1035, discriminator: 2)
!4377 = !DILocation(line: 721, column: 37, scope: !4378)
!4378 = !DILexicalBlockFile(scope: !4363, file: !1035, discriminator: 3)
!4379 = !DILocation(line: 721, column: 36, scope: !4378)
!4380 = !DILocation(line: 721, column: 34, scope: !4378)
!4381 = !DILocation(line: 721, column: 21, scope: !4378)
!4382 = !DILocation(line: 720, column: 29, scope: !4372)
!4383 = !DILocation(line: 722, column: 40, scope: !4363)
!4384 = !DILocation(line: 722, column: 17, scope: !4363)
!4385 = !DILocation(line: 722, column: 20, scope: !4363)
!4386 = !DILocation(line: 722, column: 24, scope: !4363)
!4387 = !DILocation(line: 722, column: 31, scope: !4363)
!4388 = !DILocation(line: 722, column: 37, scope: !4363)
!4389 = !DILocation(line: 723, column: 13, scope: !4363)
!4390 = !DILocation(line: 724, column: 27, scope: !4221)
!4391 = !DILocation(line: 724, column: 13, scope: !4221)
!4392 = !DILocation(line: 724, column: 16, scope: !4221)
!4393 = !DILocation(line: 724, column: 25, scope: !4221)
!4394 = !DILocation(line: 725, column: 21, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4221, file: !1035, line: 725, column: 13)
!4396 = !DILocation(line: 725, column: 18, scope: !4395)
!4397 = !DILocation(line: 725, column: 26, scope: !4398)
!4398 = !DILexicalBlockFile(scope: !4399, file: !1035, discriminator: 1)
!4399 = distinct !DILexicalBlock(scope: !4395, file: !1035, line: 725, column: 13)
!4400 = !DILocation(line: 725, column: 31, scope: !4398)
!4401 = !DILocation(line: 725, column: 29, scope: !4398)
!4402 = !DILocation(line: 725, column: 13, scope: !4398)
!4403 = !DILocation(line: 726, column: 34, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4399, file: !1035, line: 725, column: 44)
!4405 = !DILocation(line: 726, column: 45, scope: !4404)
!4406 = !DILocation(line: 726, column: 43, scope: !4404)
!4407 = !DILocation(line: 726, column: 17, scope: !4404)
!4408 = !DILocation(line: 726, column: 20, scope: !4404)
!4409 = !DILocation(line: 726, column: 32, scope: !4404)
!4410 = !DILocation(line: 727, column: 21, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4404, file: !1035, line: 727, column: 21)
!4412 = !DILocation(line: 727, column: 24, scope: !4411)
!4413 = !DILocation(line: 727, column: 32, scope: !4411)
!4414 = !DILocation(line: 727, column: 36, scope: !4411)
!4415 = !DILocation(line: 727, column: 39, scope: !4416)
!4416 = !DILexicalBlockFile(scope: !4411, file: !1035, discriminator: 1)
!4417 = !DILocation(line: 727, column: 42, scope: !4416)
!4418 = !DILocation(line: 727, column: 49, scope: !4416)
!4419 = !DILocation(line: 727, column: 21, scope: !4416)
!4420 = !DILocation(line: 728, column: 21, scope: !4411)
!4421 = !DILocation(line: 728, column: 24, scope: !4411)
!4422 = !DILocation(line: 728, column: 31, scope: !4411)
!4423 = !DILocation(line: 728, column: 40, scope: !4411)
!4424 = !DILocation(line: 728, column: 43, scope: !4411)
!4425 = !DILocation(line: 728, column: 59, scope: !4411)
!4426 = !DILocation(line: 728, column: 51, scope: !4411)
!4427 = !DILocation(line: 728, column: 56, scope: !4411)
!4428 = !DILocation(line: 729, column: 17, scope: !4404)
!4429 = !DILocation(line: 729, column: 20, scope: !4404)
!4430 = !DILocation(line: 729, column: 27, scope: !4404)
!4431 = !DILocation(line: 729, column: 49, scope: !4404)
!4432 = !DILocation(line: 729, column: 56, scope: !4404)
!4433 = !DILocation(line: 729, column: 68, scope: !4404)
!4434 = !DILocation(line: 729, column: 60, scope: !4404)
!4435 = !DILocation(line: 729, column: 65, scope: !4404)
!4436 = !DILocation(line: 729, column: 73, scope: !4404)
!4437 = !DILocation(line: 729, column: 76, scope: !4404)
!4438 = !DILocation(line: 730, column: 13, scope: !4404)
!4439 = !DILocation(line: 725, column: 40, scope: !4440)
!4440 = !DILexicalBlockFile(scope: !4399, file: !1035, discriminator: 2)
!4441 = !DILocation(line: 725, column: 13, scope: !4440)
!4442 = distinct !{!4442, !4443}
!4443 = !DILocation(line: 725, column: 13, scope: !4221)
!4444 = !DILocation(line: 731, column: 17, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4221, file: !1035, line: 731, column: 17)
!4446 = !DILocation(line: 731, column: 23, scope: !4445)
!4447 = !DILocation(line: 732, column: 17, scope: !4445)
!4448 = !DILocation(line: 732, column: 20, scope: !4449)
!4449 = !DILexicalBlockFile(scope: !4445, file: !1035, discriminator: 1)
!4450 = !DILocation(line: 732, column: 26, scope: !4449)
!4451 = !DILocation(line: 732, column: 44, scope: !4449)
!4452 = !DILocation(line: 732, column: 50, scope: !4449)
!4453 = !DILocation(line: 732, column: 41, scope: !4449)
!4454 = !DILocation(line: 733, column: 17, scope: !4445)
!4455 = !DILocation(line: 733, column: 20, scope: !4449)
!4456 = !DILocation(line: 733, column: 26, scope: !4449)
!4457 = !DILocation(line: 733, column: 42, scope: !4449)
!4458 = !DILocation(line: 733, column: 48, scope: !4449)
!4459 = !DILocation(line: 733, column: 39, scope: !4449)
!4460 = !DILocation(line: 731, column: 17, scope: !4461)
!4461 = !DILexicalBlockFile(scope: !4221, file: !1035, discriminator: 1)
!4462 = !DILocation(line: 735, column: 17, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4445, file: !1035, line: 733, column: 62)
!4464 = !DILocation(line: 735, column: 22, scope: !4463)
!4465 = !DILocation(line: 735, column: 36, scope: !4463)
!4466 = !DILocation(line: 736, column: 24, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4463, file: !1035, line: 736, column: 17)
!4468 = !DILocation(line: 736, column: 22, scope: !4467)
!4469 = !DILocation(line: 736, column: 29, scope: !4470)
!4470 = !DILexicalBlockFile(scope: !4471, file: !1035, discriminator: 1)
!4471 = distinct !DILexicalBlock(scope: !4467, file: !1035, line: 736, column: 17)
!4472 = !DILocation(line: 736, column: 33, scope: !4470)
!4473 = !DILocation(line: 736, column: 39, scope: !4470)
!4474 = !DILocation(line: 736, column: 31, scope: !4470)
!4475 = !DILocation(line: 736, column: 17, scope: !4470)
!4476 = !DILocation(line: 737, column: 40, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !1035, line: 737, column: 25)
!4478 = distinct !DILexicalBlock(scope: !4471, file: !1035, line: 736, column: 57)
!4479 = !DILocation(line: 737, column: 25, scope: !4477)
!4480 = !DILocation(line: 737, column: 31, scope: !4477)
!4481 = !DILocation(line: 737, column: 61, scope: !4477)
!4482 = !DILocation(line: 737, column: 46, scope: !4477)
!4483 = !DILocation(line: 737, column: 52, scope: !4477)
!4484 = !DILocation(line: 737, column: 43, scope: !4477)
!4485 = !DILocation(line: 737, column: 25, scope: !4478)
!4486 = !DILocation(line: 738, column: 25, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4477, file: !1035, line: 737, column: 65)
!4488 = !DILocation(line: 738, column: 30, scope: !4487)
!4489 = !DILocation(line: 738, column: 44, scope: !4487)
!4490 = !DILocation(line: 739, column: 25, scope: !4487)
!4491 = !DILocation(line: 741, column: 17, scope: !4478)
!4492 = !DILocation(line: 736, column: 53, scope: !4493)
!4493 = !DILexicalBlockFile(scope: !4471, file: !1035, discriminator: 2)
!4494 = !DILocation(line: 736, column: 17, scope: !4493)
!4495 = distinct !{!4495, !4496}
!4496 = !DILocation(line: 736, column: 17, scope: !4463)
!4497 = !DILocation(line: 742, column: 13, scope: !4463)
!4498 = !DILocation(line: 743, column: 21, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4221, file: !1035, line: 743, column: 13)
!4500 = !DILocation(line: 743, column: 18, scope: !4499)
!4501 = !DILocation(line: 743, column: 26, scope: !4502)
!4502 = !DILexicalBlockFile(scope: !4503, file: !1035, discriminator: 1)
!4503 = distinct !DILexicalBlock(scope: !4499, file: !1035, line: 743, column: 13)
!4504 = !DILocation(line: 743, column: 31, scope: !4502)
!4505 = !DILocation(line: 743, column: 29, scope: !4502)
!4506 = !DILocation(line: 743, column: 13, scope: !4502)
!4507 = !DILocation(line: 744, column: 32, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4503, file: !1035, line: 743, column: 44)
!4509 = !DILocation(line: 744, column: 24, scope: !4508)
!4510 = !DILocation(line: 744, column: 29, scope: !4508)
!4511 = !DILocation(line: 744, column: 21, scope: !4508)
!4512 = !DILocation(line: 745, column: 34, scope: !4508)
!4513 = !DILocation(line: 745, column: 45, scope: !4508)
!4514 = !DILocation(line: 745, column: 43, scope: !4508)
!4515 = !DILocation(line: 745, column: 17, scope: !4508)
!4516 = !DILocation(line: 745, column: 20, scope: !4508)
!4517 = !DILocation(line: 745, column: 32, scope: !4508)
!4518 = !DILocation(line: 746, column: 21, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4508, file: !1035, line: 746, column: 21)
!4520 = !DILocation(line: 746, column: 24, scope: !4519)
!4521 = !DILocation(line: 746, column: 32, scope: !4519)
!4522 = !DILocation(line: 746, column: 36, scope: !4519)
!4523 = !DILocation(line: 746, column: 39, scope: !4524)
!4524 = !DILexicalBlockFile(scope: !4519, file: !1035, discriminator: 1)
!4525 = !DILocation(line: 746, column: 42, scope: !4524)
!4526 = !DILocation(line: 746, column: 49, scope: !4524)
!4527 = !DILocation(line: 746, column: 21, scope: !4524)
!4528 = !DILocation(line: 747, column: 21, scope: !4519)
!4529 = !DILocation(line: 747, column: 24, scope: !4519)
!4530 = !DILocation(line: 747, column: 31, scope: !4519)
!4531 = !DILocation(line: 747, column: 46, scope: !4519)
!4532 = !DILocation(line: 747, column: 49, scope: !4519)
!4533 = !DILocation(line: 748, column: 21, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4508, file: !1035, line: 748, column: 21)
!4535 = !DILocation(line: 748, column: 24, scope: !4534)
!4536 = !DILocation(line: 748, column: 32, scope: !4534)
!4537 = !DILocation(line: 748, column: 36, scope: !4534)
!4538 = !DILocation(line: 748, column: 39, scope: !4539)
!4539 = !DILexicalBlockFile(scope: !4534, file: !1035, discriminator: 1)
!4540 = !DILocation(line: 748, column: 42, scope: !4539)
!4541 = !DILocation(line: 748, column: 49, scope: !4539)
!4542 = !DILocation(line: 748, column: 21, scope: !4539)
!4543 = !DILocation(line: 749, column: 21, scope: !4534)
!4544 = !DILocation(line: 749, column: 24, scope: !4534)
!4545 = !DILocation(line: 749, column: 31, scope: !4534)
!4546 = !DILocation(line: 749, column: 46, scope: !4534)
!4547 = !DILocation(line: 749, column: 49, scope: !4534)
!4548 = !DILocation(line: 750, column: 21, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4508, file: !1035, line: 750, column: 21)
!4550 = !DILocation(line: 750, column: 26, scope: !4549)
!4551 = !DILocation(line: 750, column: 30, scope: !4549)
!4552 = !DILocation(line: 750, column: 21, scope: !4508)
!4553 = !DILocation(line: 751, column: 30, scope: !4549)
!4554 = !DILocation(line: 751, column: 21, scope: !4549)
!4555 = !DILocation(line: 752, column: 21, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4508, file: !1035, line: 752, column: 21)
!4557 = !DILocation(line: 752, column: 24, scope: !4556)
!4558 = !DILocation(line: 752, column: 32, scope: !4556)
!4559 = !DILocation(line: 752, column: 36, scope: !4556)
!4560 = !DILocation(line: 752, column: 39, scope: !4561)
!4561 = !DILexicalBlockFile(scope: !4556, file: !1035, discriminator: 1)
!4562 = !DILocation(line: 752, column: 42, scope: !4561)
!4563 = !DILocation(line: 752, column: 49, scope: !4561)
!4564 = !DILocation(line: 752, column: 21, scope: !4561)
!4565 = !DILocation(line: 753, column: 21, scope: !4556)
!4566 = !DILocation(line: 753, column: 24, scope: !4556)
!4567 = !DILocation(line: 753, column: 31, scope: !4556)
!4568 = !DILocation(line: 753, column: 46, scope: !4556)
!4569 = !DILocation(line: 753, column: 49, scope: !4556)
!4570 = !DILocation(line: 753, column: 56, scope: !4556)
!4571 = !DILocation(line: 754, column: 13, scope: !4508)
!4572 = !DILocation(line: 743, column: 40, scope: !4573)
!4573 = !DILexicalBlockFile(scope: !4503, file: !1035, discriminator: 2)
!4574 = !DILocation(line: 743, column: 13, scope: !4573)
!4575 = distinct !{!4575, !4576}
!4576 = !DILocation(line: 743, column: 13, scope: !4221)
!4577 = !DILocation(line: 755, column: 30, scope: !4221)
!4578 = !DILocation(line: 755, column: 13, scope: !4221)
!4579 = !DILocation(line: 755, column: 16, scope: !4221)
!4580 = !DILocation(line: 755, column: 28, scope: !4221)
!4581 = !DILocation(line: 756, column: 17, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4221, file: !1035, line: 756, column: 17)
!4583 = !DILocation(line: 756, column: 20, scope: !4582)
!4584 = !DILocation(line: 756, column: 28, scope: !4582)
!4585 = !DILocation(line: 756, column: 17, scope: !4221)
!4586 = !DILocation(line: 757, column: 21, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4588, file: !1035, line: 757, column: 21)
!4588 = distinct !DILexicalBlock(scope: !4582, file: !1035, line: 756, column: 46)
!4589 = !DILocation(line: 757, column: 24, scope: !4587)
!4590 = !DILocation(line: 757, column: 31, scope: !4587)
!4591 = !DILocation(line: 757, column: 21, scope: !4588)
!4592 = !DILocation(line: 758, column: 21, scope: !4587)
!4593 = !DILocation(line: 758, column: 24, scope: !4587)
!4594 = !DILocation(line: 758, column: 31, scope: !4587)
!4595 = !DILocation(line: 758, column: 45, scope: !4587)
!4596 = !DILocation(line: 758, column: 48, scope: !4587)
!4597 = !DILocation(line: 758, column: 55, scope: !4587)
!4598 = !DILocation(line: 759, column: 21, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4588, file: !1035, line: 759, column: 21)
!4600 = !DILocation(line: 759, column: 26, scope: !4599)
!4601 = !DILocation(line: 759, column: 21, scope: !4588)
!4602 = !DILocation(line: 759, column: 43, scope: !4603)
!4603 = !DILexicalBlockFile(scope: !4599, file: !1035, discriminator: 1)
!4604 = !DILocation(line: 759, column: 35, scope: !4603)
!4605 = !DILocation(line: 760, column: 40, scope: !4588)
!4606 = !DILocation(line: 760, column: 17, scope: !4588)
!4607 = !DILocation(line: 761, column: 13, scope: !4588)
!4608 = !DILocation(line: 762, column: 17, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4221, file: !1035, line: 762, column: 17)
!4610 = !DILocation(line: 762, column: 20, scope: !4609)
!4611 = !DILocation(line: 762, column: 28, scope: !4609)
!4612 = !DILocation(line: 762, column: 17, scope: !4221)
!4613 = !DILocation(line: 763, column: 25, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !1035, line: 763, column: 17)
!4615 = distinct !DILexicalBlock(scope: !4609, file: !1035, line: 762, column: 34)
!4616 = !DILocation(line: 763, column: 22, scope: !4614)
!4617 = !DILocation(line: 763, column: 30, scope: !4618)
!4618 = !DILexicalBlockFile(scope: !4619, file: !1035, discriminator: 1)
!4619 = distinct !DILexicalBlock(scope: !4614, file: !1035, line: 763, column: 17)
!4620 = !DILocation(line: 763, column: 35, scope: !4618)
!4621 = !DILocation(line: 763, column: 33, scope: !4618)
!4622 = !DILocation(line: 763, column: 17, scope: !4618)
!4623 = !DILocation(line: 764, column: 36, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4619, file: !1035, line: 763, column: 48)
!4625 = !DILocation(line: 764, column: 28, scope: !4624)
!4626 = !DILocation(line: 764, column: 33, scope: !4624)
!4627 = !DILocation(line: 764, column: 25, scope: !4624)
!4628 = !DILocation(line: 765, column: 38, scope: !4624)
!4629 = !DILocation(line: 765, column: 49, scope: !4624)
!4630 = !DILocation(line: 765, column: 47, scope: !4624)
!4631 = !DILocation(line: 765, column: 21, scope: !4624)
!4632 = !DILocation(line: 765, column: 24, scope: !4624)
!4633 = !DILocation(line: 765, column: 36, scope: !4624)
!4634 = !DILocation(line: 766, column: 25, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4624, file: !1035, line: 766, column: 25)
!4636 = !DILocation(line: 766, column: 28, scope: !4635)
!4637 = !DILocation(line: 766, column: 36, scope: !4635)
!4638 = !DILocation(line: 766, column: 41, scope: !4635)
!4639 = !DILocation(line: 766, column: 44, scope: !4640)
!4640 = !DILexicalBlockFile(scope: !4635, file: !1035, discriminator: 1)
!4641 = !DILocation(line: 766, column: 47, scope: !4640)
!4642 = !DILocation(line: 766, column: 54, scope: !4640)
!4643 = !DILocation(line: 766, column: 25, scope: !4640)
!4644 = !DILocation(line: 767, column: 25, scope: !4635)
!4645 = !DILocation(line: 767, column: 28, scope: !4635)
!4646 = !DILocation(line: 767, column: 35, scope: !4635)
!4647 = !DILocation(line: 767, column: 51, scope: !4635)
!4648 = !DILocation(line: 767, column: 54, scope: !4635)
!4649 = !DILocation(line: 768, column: 33, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4624, file: !1035, line: 768, column: 25)
!4651 = !DILocation(line: 768, column: 25, scope: !4650)
!4652 = !DILocation(line: 768, column: 30, scope: !4650)
!4653 = !DILocation(line: 768, column: 37, scope: !4650)
!4654 = !DILocation(line: 768, column: 41, scope: !4650)
!4655 = !DILocation(line: 768, column: 25, scope: !4624)
!4656 = !DILocation(line: 768, column: 70, scope: !4657)
!4657 = !DILexicalBlockFile(scope: !4650, file: !1035, discriminator: 1)
!4658 = !DILocation(line: 768, column: 60, scope: !4657)
!4659 = !DILocation(line: 769, column: 17, scope: !4624)
!4660 = !DILocation(line: 763, column: 44, scope: !4661)
!4661 = !DILexicalBlockFile(scope: !4619, file: !1035, discriminator: 2)
!4662 = !DILocation(line: 763, column: 17, scope: !4661)
!4663 = distinct !{!4663, !4664}
!4664 = !DILocation(line: 763, column: 17, scope: !4615)
!4665 = !DILocation(line: 770, column: 21, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4615, file: !1035, line: 770, column: 21)
!4667 = !DILocation(line: 770, column: 24, scope: !4666)
!4668 = !DILocation(line: 770, column: 31, scope: !4666)
!4669 = !DILocation(line: 770, column: 21, scope: !4615)
!4670 = !DILocation(line: 771, column: 21, scope: !4666)
!4671 = !DILocation(line: 771, column: 24, scope: !4666)
!4672 = !DILocation(line: 771, column: 31, scope: !4666)
!4673 = !DILocation(line: 771, column: 50, scope: !4666)
!4674 = !DILocation(line: 771, column: 53, scope: !4666)
!4675 = !DILocation(line: 772, column: 25, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4615, file: !1035, line: 772, column: 17)
!4677 = !DILocation(line: 772, column: 22, scope: !4676)
!4678 = !DILocation(line: 772, column: 30, scope: !4679)
!4679 = !DILexicalBlockFile(scope: !4680, file: !1035, discriminator: 1)
!4680 = distinct !DILexicalBlock(scope: !4676, file: !1035, line: 772, column: 17)
!4681 = !DILocation(line: 772, column: 35, scope: !4679)
!4682 = !DILocation(line: 772, column: 33, scope: !4679)
!4683 = !DILocation(line: 772, column: 17, scope: !4679)
!4684 = !DILocation(line: 773, column: 36, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4680, file: !1035, line: 772, column: 48)
!4686 = !DILocation(line: 773, column: 28, scope: !4685)
!4687 = !DILocation(line: 773, column: 33, scope: !4685)
!4688 = !DILocation(line: 773, column: 25, scope: !4685)
!4689 = !DILocation(line: 774, column: 38, scope: !4685)
!4690 = !DILocation(line: 774, column: 49, scope: !4685)
!4691 = !DILocation(line: 774, column: 47, scope: !4685)
!4692 = !DILocation(line: 774, column: 21, scope: !4685)
!4693 = !DILocation(line: 774, column: 24, scope: !4685)
!4694 = !DILocation(line: 774, column: 36, scope: !4685)
!4695 = !DILocation(line: 775, column: 25, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4685, file: !1035, line: 775, column: 25)
!4697 = !DILocation(line: 775, column: 28, scope: !4696)
!4698 = !DILocation(line: 775, column: 36, scope: !4696)
!4699 = !DILocation(line: 775, column: 41, scope: !4696)
!4700 = !DILocation(line: 775, column: 44, scope: !4701)
!4701 = !DILexicalBlockFile(scope: !4696, file: !1035, discriminator: 1)
!4702 = !DILocation(line: 775, column: 47, scope: !4701)
!4703 = !DILocation(line: 775, column: 54, scope: !4701)
!4704 = !DILocation(line: 775, column: 25, scope: !4701)
!4705 = !DILocation(line: 776, column: 25, scope: !4696)
!4706 = !DILocation(line: 776, column: 28, scope: !4696)
!4707 = !DILocation(line: 776, column: 35, scope: !4696)
!4708 = !DILocation(line: 776, column: 51, scope: !4696)
!4709 = !DILocation(line: 776, column: 54, scope: !4696)
!4710 = !DILocation(line: 777, column: 17, scope: !4685)
!4711 = !DILocation(line: 772, column: 44, scope: !4712)
!4712 = !DILexicalBlockFile(scope: !4680, file: !1035, discriminator: 2)
!4713 = !DILocation(line: 772, column: 17, scope: !4712)
!4714 = distinct !{!4714, !4715}
!4715 = !DILocation(line: 772, column: 17, scope: !4615)
!4716 = !DILocation(line: 778, column: 34, scope: !4615)
!4717 = !DILocation(line: 778, column: 17, scope: !4615)
!4718 = !DILocation(line: 778, column: 20, scope: !4615)
!4719 = !DILocation(line: 778, column: 32, scope: !4615)
!4720 = !DILocation(line: 779, column: 13, scope: !4615)
!4721 = !DILocation(line: 780, column: 17, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4221, file: !1035, line: 780, column: 17)
!4723 = !DILocation(line: 780, column: 20, scope: !4722)
!4724 = !DILocation(line: 780, column: 28, scope: !4722)
!4725 = !DILocation(line: 780, column: 17, scope: !4221)
!4726 = !DILocation(line: 781, column: 21, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !1035, line: 781, column: 21)
!4728 = distinct !DILexicalBlock(scope: !4722, file: !1035, line: 780, column: 38)
!4729 = !DILocation(line: 781, column: 24, scope: !4727)
!4730 = !DILocation(line: 781, column: 32, scope: !4727)
!4731 = !DILocation(line: 781, column: 41, scope: !4727)
!4732 = !DILocation(line: 781, column: 47, scope: !4727)
!4733 = !DILocation(line: 781, column: 50, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !4727, file: !1035, discriminator: 1)
!4735 = !DILocation(line: 781, column: 53, scope: !4734)
!4736 = !DILocation(line: 781, column: 60, scope: !4734)
!4737 = !DILocation(line: 781, column: 21, scope: !4734)
!4738 = !DILocation(line: 782, column: 21, scope: !4727)
!4739 = !DILocation(line: 782, column: 24, scope: !4727)
!4740 = !DILocation(line: 782, column: 31, scope: !4727)
!4741 = !DILocation(line: 782, column: 45, scope: !4727)
!4742 = !DILocation(line: 782, column: 48, scope: !4727)
!4743 = !DILocation(line: 783, column: 26, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4727, file: !1035, line: 783, column: 26)
!4745 = !DILocation(line: 783, column: 31, scope: !4744)
!4746 = !DILocation(line: 783, column: 26, scope: !4727)
!4747 = !DILocation(line: 784, column: 28, scope: !4744)
!4748 = !DILocation(line: 784, column: 33, scope: !4744)
!4749 = !DILocation(line: 784, column: 21, scope: !4744)
!4750 = !DILocation(line: 785, column: 39, scope: !4728)
!4751 = !DILocation(line: 785, column: 17, scope: !4728)
!4752 = !DILocation(line: 786, column: 13, scope: !4728)
!4753 = !DILocation(line: 787, column: 38, scope: !4221)
!4754 = !DILocation(line: 787, column: 43, scope: !4221)
!4755 = !DILocation(line: 787, column: 13, scope: !4221)
!4756 = !DILocation(line: 788, column: 17, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4221, file: !1035, line: 788, column: 17)
!4758 = !DILocation(line: 788, column: 20, scope: !4757)
!4759 = !DILocation(line: 788, column: 28, scope: !4757)
!4760 = !DILocation(line: 788, column: 17, scope: !4221)
!4761 = !DILocation(line: 789, column: 25, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4763, file: !1035, line: 789, column: 17)
!4763 = distinct !DILexicalBlock(scope: !4757, file: !1035, line: 788, column: 33)
!4764 = !DILocation(line: 789, column: 22, scope: !4762)
!4765 = !DILocation(line: 789, column: 30, scope: !4766)
!4766 = !DILexicalBlockFile(scope: !4767, file: !1035, discriminator: 1)
!4767 = distinct !DILexicalBlock(scope: !4762, file: !1035, line: 789, column: 17)
!4768 = !DILocation(line: 789, column: 35, scope: !4766)
!4769 = !DILocation(line: 789, column: 33, scope: !4766)
!4770 = !DILocation(line: 789, column: 17, scope: !4766)
!4771 = !DILocation(line: 790, column: 36, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4767, file: !1035, line: 789, column: 48)
!4773 = !DILocation(line: 790, column: 28, scope: !4772)
!4774 = !DILocation(line: 790, column: 33, scope: !4772)
!4775 = !DILocation(line: 790, column: 25, scope: !4772)
!4776 = !DILocation(line: 791, column: 38, scope: !4772)
!4777 = !DILocation(line: 791, column: 49, scope: !4772)
!4778 = !DILocation(line: 791, column: 47, scope: !4772)
!4779 = !DILocation(line: 791, column: 21, scope: !4772)
!4780 = !DILocation(line: 791, column: 24, scope: !4772)
!4781 = !DILocation(line: 791, column: 36, scope: !4772)
!4782 = !DILocation(line: 792, column: 25, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4772, file: !1035, line: 792, column: 25)
!4784 = !DILocation(line: 792, column: 28, scope: !4783)
!4785 = !DILocation(line: 792, column: 35, scope: !4783)
!4786 = !DILocation(line: 792, column: 25, scope: !4772)
!4787 = !DILocation(line: 793, column: 25, scope: !4783)
!4788 = !DILocation(line: 793, column: 28, scope: !4783)
!4789 = !DILocation(line: 793, column: 35, scope: !4783)
!4790 = !DILocation(line: 793, column: 50, scope: !4783)
!4791 = !DILocation(line: 793, column: 53, scope: !4783)
!4792 = !DILocation(line: 793, column: 58, scope: !4783)
!4793 = !DILocation(line: 793, column: 63, scope: !4783)
!4794 = !DILocation(line: 794, column: 25, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4772, file: !1035, line: 794, column: 25)
!4796 = !DILocation(line: 794, column: 30, scope: !4795)
!4797 = !DILocation(line: 794, column: 34, scope: !4795)
!4798 = !DILocation(line: 794, column: 38, scope: !4795)
!4799 = !DILocation(line: 794, column: 25, scope: !4772)
!4800 = !DILocation(line: 794, column: 57, scope: !4801)
!4801 = !DILexicalBlockFile(scope: !4795, file: !1035, discriminator: 1)
!4802 = !DILocation(line: 794, column: 47, scope: !4801)
!4803 = !DILocation(line: 795, column: 17, scope: !4772)
!4804 = !DILocation(line: 789, column: 44, scope: !4805)
!4805 = !DILexicalBlockFile(scope: !4767, file: !1035, discriminator: 2)
!4806 = !DILocation(line: 789, column: 17, scope: !4805)
!4807 = distinct !{!4807, !4808}
!4808 = !DILocation(line: 789, column: 17, scope: !4763)
!4809 = !DILocation(line: 796, column: 34, scope: !4763)
!4810 = !DILocation(line: 796, column: 17, scope: !4763)
!4811 = !DILocation(line: 796, column: 20, scope: !4763)
!4812 = !DILocation(line: 796, column: 32, scope: !4763)
!4813 = !DILocation(line: 797, column: 21, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4763, file: !1035, line: 797, column: 21)
!4815 = !DILocation(line: 797, column: 24, scope: !4814)
!4816 = !DILocation(line: 797, column: 31, scope: !4814)
!4817 = !DILocation(line: 797, column: 21, scope: !4763)
!4818 = !DILocation(line: 798, column: 21, scope: !4814)
!4819 = !DILocation(line: 798, column: 24, scope: !4814)
!4820 = !DILocation(line: 798, column: 31, scope: !4814)
!4821 = !DILocation(line: 798, column: 49, scope: !4814)
!4822 = !DILocation(line: 798, column: 52, scope: !4814)
!4823 = !DILocation(line: 799, column: 13, scope: !4763)
!4824 = !DILocation(line: 800, column: 17, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4221, file: !1035, line: 800, column: 17)
!4826 = !DILocation(line: 800, column: 23, scope: !4825)
!4827 = !DILocation(line: 800, column: 17, scope: !4221)
!4828 = !DILocation(line: 801, column: 27, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4825, file: !1035, line: 800, column: 29)
!4830 = !DILocation(line: 801, column: 30, scope: !4829)
!4831 = !DILocation(line: 801, column: 37, scope: !4829)
!4832 = !DILocation(line: 801, column: 42, scope: !4829)
!4833 = !DILocation(line: 801, column: 17, scope: !4829)
!4834 = !DILocation(line: 802, column: 21, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4829, file: !1035, line: 802, column: 21)
!4836 = !DILocation(line: 802, column: 26, scope: !4835)
!4837 = !DILocation(line: 802, column: 21, scope: !4829)
!4838 = !DILocation(line: 803, column: 34, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4835, file: !1035, line: 802, column: 41)
!4840 = !DILocation(line: 803, column: 38, scope: !4839)
!4841 = !DILocation(line: 803, column: 43, scope: !4839)
!4842 = !DILocation(line: 803, column: 49, scope: !4839)
!4843 = !DILocation(line: 803, column: 21, scope: !4839)
!4844 = !DILocation(line: 804, column: 25, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4839, file: !1035, line: 804, column: 25)
!4846 = !DILocation(line: 804, column: 28, scope: !4845)
!4847 = !DILocation(line: 804, column: 35, scope: !4845)
!4848 = !DILocation(line: 804, column: 25, scope: !4839)
!4849 = !DILocation(line: 805, column: 25, scope: !4845)
!4850 = !DILocation(line: 805, column: 28, scope: !4845)
!4851 = !DILocation(line: 805, column: 35, scope: !4845)
!4852 = !DILocation(line: 805, column: 52, scope: !4845)
!4853 = !DILocation(line: 805, column: 56, scope: !4845)
!4854 = !DILocation(line: 805, column: 61, scope: !4845)
!4855 = !DILocation(line: 806, column: 25, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4839, file: !1035, line: 806, column: 25)
!4857 = !DILocation(line: 806, column: 28, scope: !4856)
!4858 = !DILocation(line: 806, column: 35, scope: !4856)
!4859 = !DILocation(line: 806, column: 25, scope: !4839)
!4860 = !DILocation(line: 807, column: 25, scope: !4856)
!4861 = !DILocation(line: 807, column: 28, scope: !4856)
!4862 = !DILocation(line: 807, column: 35, scope: !4856)
!4863 = !DILocation(line: 807, column: 51, scope: !4856)
!4864 = !DILocation(line: 807, column: 55, scope: !4856)
!4865 = !DILocation(line: 807, column: 60, scope: !4856)
!4866 = !DILocation(line: 808, column: 37, scope: !4839)
!4867 = !DILocation(line: 808, column: 40, scope: !4839)
!4868 = !DILocation(line: 808, column: 44, scope: !4839)
!4869 = !DILocation(line: 808, column: 21, scope: !4839)
!4870 = !DILocation(line: 809, column: 25, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4839, file: !1035, line: 809, column: 25)
!4872 = !DILocation(line: 809, column: 30, scope: !4871)
!4873 = !DILocation(line: 809, column: 25, scope: !4839)
!4874 = !DILocation(line: 809, column: 47, scope: !4875)
!4875 = !DILexicalBlockFile(scope: !4871, file: !1035, discriminator: 1)
!4876 = !DILocation(line: 809, column: 39, scope: !4875)
!4877 = !DILocation(line: 810, column: 17, scope: !4839)
!4878 = !DILocation(line: 811, column: 13, scope: !4829)
!4879 = !DILocation(line: 812, column: 21, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4221, file: !1035, line: 812, column: 13)
!4881 = !DILocation(line: 812, column: 18, scope: !4880)
!4882 = !DILocation(line: 812, column: 26, scope: !4883)
!4883 = !DILexicalBlockFile(scope: !4884, file: !1035, discriminator: 1)
!4884 = distinct !DILexicalBlock(scope: !4880, file: !1035, line: 812, column: 13)
!4885 = !DILocation(line: 812, column: 31, scope: !4883)
!4886 = !DILocation(line: 812, column: 29, scope: !4883)
!4887 = !DILocation(line: 812, column: 13, scope: !4883)
!4888 = !DILocation(line: 813, column: 34, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4884, file: !1035, line: 812, column: 44)
!4890 = !DILocation(line: 813, column: 45, scope: !4889)
!4891 = !DILocation(line: 813, column: 43, scope: !4889)
!4892 = !DILocation(line: 813, column: 17, scope: !4889)
!4893 = !DILocation(line: 813, column: 20, scope: !4889)
!4894 = !DILocation(line: 813, column: 32, scope: !4889)
!4895 = !DILocation(line: 814, column: 43, scope: !4889)
!4896 = !DILocation(line: 814, column: 50, scope: !4889)
!4897 = !DILocation(line: 814, column: 62, scope: !4889)
!4898 = !DILocation(line: 814, column: 54, scope: !4889)
!4899 = !DILocation(line: 814, column: 59, scope: !4889)
!4900 = !DILocation(line: 814, column: 67, scope: !4889)
!4901 = !DILocation(line: 814, column: 72, scope: !4889)
!4902 = !DILocation(line: 814, column: 17, scope: !4889)
!4903 = !DILocation(line: 815, column: 13, scope: !4889)
!4904 = !DILocation(line: 812, column: 40, scope: !4905)
!4905 = !DILexicalBlockFile(scope: !4884, file: !1035, discriminator: 2)
!4906 = !DILocation(line: 812, column: 13, scope: !4905)
!4907 = distinct !{!4907, !4908}
!4908 = !DILocation(line: 812, column: 13, scope: !4221)
!4909 = !DILocation(line: 816, column: 25, scope: !4221)
!4910 = !DILocation(line: 816, column: 22, scope: !4221)
!4911 = !DILocation(line: 817, column: 9, scope: !4221)
!4912 = !DILocation(line: 692, column: 42, scope: !4913)
!4913 = !DILexicalBlockFile(scope: !4215, file: !1035, discriminator: 2)
!4914 = !DILocation(line: 692, column: 9, scope: !4913)
!4915 = distinct !{!4915, !4916}
!4916 = !DILocation(line: 692, column: 9, scope: !3570)
!4917 = !DILocation(line: 819, column: 13, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !3570, file: !1035, line: 819, column: 13)
!4919 = !DILocation(line: 819, column: 20, scope: !4918)
!4920 = !DILocation(line: 819, column: 26, scope: !4918)
!4921 = !DILocation(line: 819, column: 13, scope: !3570)
!4922 = !DILocation(line: 821, column: 13, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4918, file: !1035, line: 819, column: 38)
!4924 = !DILocation(line: 828, column: 38, scope: !3570)
!4925 = !DILocation(line: 828, column: 41, scope: !3570)
!4926 = !DILocation(line: 828, column: 22, scope: !3570)
!4927 = !DILocation(line: 828, column: 20, scope: !3570)
!4928 = !DILocation(line: 829, column: 21, scope: !3570)
!4929 = !DILocation(line: 829, column: 28, scope: !3570)
!4930 = !DILocation(line: 829, column: 37, scope: !3570)
!4931 = !DILocation(line: 829, column: 46, scope: !3570)
!4932 = !DILocation(line: 829, column: 53, scope: !3570)
!4933 = !DILocation(line: 829, column: 44, scope: !3570)
!4934 = !DILocation(line: 829, column: 19, scope: !3570)
!4935 = !DILocation(line: 830, column: 23, scope: !3570)
!4936 = !DILocation(line: 830, column: 44, scope: !3570)
!4937 = !DILocation(line: 830, column: 47, scope: !3570)
!4938 = !DILocation(line: 830, column: 42, scope: !3570)
!4939 = !DILocation(line: 830, column: 56, scope: !3570)
!4940 = !DILocation(line: 830, column: 34, scope: !3570)
!4941 = !DILocation(line: 830, column: 22, scope: !3570)
!4942 = !DILocation(line: 830, column: 71, scope: !4943)
!4943 = !DILexicalBlockFile(scope: !3570, file: !1035, discriminator: 1)
!4944 = !DILocation(line: 830, column: 74, scope: !4943)
!4945 = !DILocation(line: 830, column: 69, scope: !4943)
!4946 = !DILocation(line: 830, column: 83, scope: !4943)
!4947 = !DILocation(line: 830, column: 22, scope: !4943)
!4948 = !DILocation(line: 830, column: 91, scope: !4949)
!4949 = !DILexicalBlockFile(scope: !3570, file: !1035, discriminator: 2)
!4950 = !DILocation(line: 830, column: 22, scope: !4949)
!4951 = !DILocation(line: 830, column: 22, scope: !4952)
!4952 = !DILexicalBlockFile(scope: !3570, file: !1035, discriminator: 3)
!4953 = !DILocation(line: 830, column: 19, scope: !4952)
!4954 = !DILocation(line: 831, column: 27, scope: !3570)
!4955 = !DILocation(line: 831, column: 43, scope: !3570)
!4956 = !DILocation(line: 831, column: 40, scope: !3570)
!4957 = !DILocation(line: 831, column: 26, scope: !3570)
!4958 = !DILocation(line: 831, column: 57, scope: !4943)
!4959 = !DILocation(line: 831, column: 26, scope: !4943)
!4960 = !DILocation(line: 831, column: 73, scope: !4949)
!4961 = !DILocation(line: 831, column: 26, scope: !4949)
!4962 = !DILocation(line: 831, column: 26, scope: !4952)
!4963 = !DILocation(line: 831, column: 23, scope: !4952)
!4964 = !DILocation(line: 832, column: 27, scope: !3570)
!4965 = !DILocation(line: 832, column: 52, scope: !3570)
!4966 = !DILocation(line: 832, column: 55, scope: !3570)
!4967 = !DILocation(line: 832, column: 50, scope: !3570)
!4968 = !DILocation(line: 832, column: 64, scope: !3570)
!4969 = !DILocation(line: 832, column: 42, scope: !3570)
!4970 = !DILocation(line: 832, column: 26, scope: !3570)
!4971 = !DILocation(line: 832, column: 79, scope: !4943)
!4972 = !DILocation(line: 832, column: 82, scope: !4943)
!4973 = !DILocation(line: 832, column: 77, scope: !4943)
!4974 = !DILocation(line: 832, column: 91, scope: !4943)
!4975 = !DILocation(line: 832, column: 26, scope: !4943)
!4976 = !DILocation(line: 832, column: 99, scope: !4949)
!4977 = !DILocation(line: 832, column: 26, scope: !4949)
!4978 = !DILocation(line: 832, column: 26, scope: !4952)
!4979 = !DILocation(line: 832, column: 23, scope: !4952)
!4980 = !DILocation(line: 833, column: 28, scope: !3570)
!4981 = !DILocation(line: 833, column: 40, scope: !3570)
!4982 = !DILocation(line: 833, column: 49, scope: !3570)
!4983 = !DILocation(line: 833, column: 38, scope: !3570)
!4984 = !DILocation(line: 833, column: 56, scope: !3570)
!4985 = !DILocation(line: 833, column: 53, scope: !3570)
!4986 = !DILocation(line: 833, column: 27, scope: !3570)
!4987 = !DILocation(line: 833, column: 72, scope: !4943)
!4988 = !DILocation(line: 833, column: 84, scope: !4943)
!4989 = !DILocation(line: 833, column: 93, scope: !4943)
!4990 = !DILocation(line: 833, column: 82, scope: !4943)
!4991 = !DILocation(line: 833, column: 27, scope: !4943)
!4992 = !DILocation(line: 833, column: 100, scope: !4949)
!4993 = !DILocation(line: 833, column: 27, scope: !4949)
!4994 = !DILocation(line: 833, column: 27, scope: !4952)
!4995 = !DILocation(line: 833, column: 118, scope: !4952)
!4996 = !DILocation(line: 833, column: 115, scope: !4952)
!4997 = !DILocation(line: 833, column: 25, scope: !4952)
!4998 = !DILocation(line: 833, column: 136, scope: !4999)
!4999 = !DILexicalBlockFile(scope: !3570, file: !1035, discriminator: 4)
!5000 = !DILocation(line: 833, column: 25, scope: !4999)
!5001 = !DILocation(line: 833, column: 156, scope: !5002)
!5002 = !DILexicalBlockFile(scope: !3570, file: !1035, discriminator: 5)
!5003 = !DILocation(line: 833, column: 168, scope: !5002)
!5004 = !DILocation(line: 833, column: 177, scope: !5002)
!5005 = !DILocation(line: 833, column: 166, scope: !5002)
!5006 = !DILocation(line: 833, column: 184, scope: !5002)
!5007 = !DILocation(line: 833, column: 181, scope: !5002)
!5008 = !DILocation(line: 833, column: 155, scope: !5002)
!5009 = !DILocation(line: 833, column: 200, scope: !5010)
!5010 = !DILexicalBlockFile(scope: !3570, file: !1035, discriminator: 6)
!5011 = !DILocation(line: 833, column: 212, scope: !5010)
!5012 = !DILocation(line: 833, column: 221, scope: !5010)
!5013 = !DILocation(line: 833, column: 210, scope: !5010)
!5014 = !DILocation(line: 833, column: 155, scope: !5010)
!5015 = !DILocation(line: 833, column: 228, scope: !5016)
!5016 = !DILexicalBlockFile(scope: !3570, file: !1035, discriminator: 7)
!5017 = !DILocation(line: 833, column: 155, scope: !5016)
!5018 = !DILocation(line: 833, column: 155, scope: !5019)
!5019 = !DILexicalBlockFile(scope: !3570, file: !1035, discriminator: 8)
!5020 = !DILocation(line: 833, column: 25, scope: !5019)
!5021 = !DILocation(line: 833, column: 25, scope: !5022)
!5022 = !DILexicalBlockFile(scope: !3570, file: !1035, discriminator: 9)
!5023 = !DILocation(line: 833, column: 22, scope: !5022)
!5024 = !DILocation(line: 836, column: 24, scope: !3570)
!5025 = !DILocation(line: 836, column: 39, scope: !3570)
!5026 = !DILocation(line: 836, column: 51, scope: !3570)
!5027 = !DILocation(line: 836, column: 37, scope: !3570)
!5028 = !DILocation(line: 836, column: 22, scope: !3570)
!5029 = !DILocation(line: 837, column: 25, scope: !3570)
!5030 = !DILocation(line: 837, column: 41, scope: !3570)
!5031 = !DILocation(line: 837, column: 54, scope: !3570)
!5032 = !DILocation(line: 837, column: 39, scope: !3570)
!5033 = !DILocation(line: 837, column: 23, scope: !3570)
!5034 = !DILocation(line: 839, column: 14, scope: !3569)
!5035 = !DILocation(line: 839, column: 18, scope: !3569)
!5036 = !DILocation(line: 840, column: 13, scope: !3569)
!5037 = !DILocation(line: 840, column: 17, scope: !5038)
!5038 = !DILexicalBlockFile(scope: !3569, file: !1035, discriminator: 1)
!5039 = !DILocation(line: 840, column: 21, scope: !5038)
!5040 = !DILocation(line: 840, column: 25, scope: !5038)
!5041 = !DILocation(line: 840, column: 29, scope: !5042)
!5042 = !DILexicalBlockFile(scope: !3569, file: !1035, discriminator: 2)
!5043 = !DILocation(line: 840, column: 42, scope: !5042)
!5044 = !DILocation(line: 840, column: 40, scope: !5042)
!5045 = !DILocation(line: 840, column: 55, scope: !5042)
!5046 = !DILocation(line: 840, column: 58, scope: !5047)
!5047 = !DILexicalBlockFile(scope: !3569, file: !1035, discriminator: 3)
!5048 = !DILocation(line: 840, column: 71, scope: !5047)
!5049 = !DILocation(line: 840, column: 69, scope: !5047)
!5050 = !DILocation(line: 841, column: 13, scope: !3569)
!5051 = !DILocation(line: 841, column: 16, scope: !5038)
!5052 = !DILocation(line: 841, column: 37, scope: !5038)
!5053 = !DILocation(line: 841, column: 40, scope: !5038)
!5054 = !DILocation(line: 841, column: 35, scope: !5038)
!5055 = !DILocation(line: 841, column: 49, scope: !5038)
!5056 = !DILocation(line: 841, column: 27, scope: !5038)
!5057 = !DILocation(line: 839, column: 14, scope: !4943)
!5058 = !DILocalVariable(name: "ratio", scope: !3568, file: !1035, line: 843, type: !1032)
!5059 = !DILocation(line: 843, column: 19, scope: !3568)
!5060 = !DILocation(line: 843, column: 35, scope: !3568)
!5061 = !DILocation(line: 843, column: 28, scope: !3568)
!5062 = !DILocation(line: 843, column: 48, scope: !3568)
!5063 = !DILocation(line: 843, column: 46, scope: !3568)
!5064 = !DILocation(line: 845, column: 17, scope: !3567)
!5065 = !DILocation(line: 845, column: 31, scope: !3567)
!5066 = !DILocation(line: 845, column: 28, scope: !3567)
!5067 = !DILocation(line: 845, column: 44, scope: !3567)
!5068 = !DILocation(line: 845, column: 47, scope: !5069)
!5069 = !DILexicalBlockFile(scope: !3567, file: !1035, discriminator: 1)
!5070 = !DILocation(line: 845, column: 61, scope: !5069)
!5071 = !DILocation(line: 845, column: 58, scope: !5069)
!5072 = !DILocation(line: 845, column: 17, scope: !5069)
!5073 = !DILocation(line: 852, column: 37, scope: !3566)
!5074 = !DILocation(line: 852, column: 31, scope: !3566)
!5075 = !DILocation(line: 852, column: 25, scope: !5076)
!5076 = !DILexicalBlockFile(scope: !3566, file: !1035, discriminator: 1)
!5077 = !DILocation(line: 852, column: 23, scope: !3566)
!5078 = !DILocation(line: 853, column: 38, scope: !3566)
!5079 = !DILocation(line: 853, column: 25, scope: !3566)
!5080 = !DILocation(line: 129, column: 5, scope: !3560, inlinedAt: !3565)
!5081 = !DILocation(line: 131, column: 32, scope: !3560, inlinedAt: !3565)
!5082 = !DILocation(line: 131, column: 44, scope: !3560, inlinedAt: !3565)
!5083 = !{i32 112469, i32 112485, i32 112518}
!5084 = !DILocation(line: 132, column: 12, scope: !3560, inlinedAt: !3565)
!5085 = !DILocation(line: 853, column: 23, scope: !3566)
!5086 = !DILocation(line: 854, column: 13, scope: !3566)
!5087 = !DILocation(line: 856, column: 31, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !3567, file: !1035, line: 854, column: 20)
!5089 = !DILocation(line: 856, column: 25, scope: !5088)
!5090 = !DILocation(line: 856, column: 23, scope: !5088)
!5091 = !DILocation(line: 858, column: 27, scope: !3568)
!5092 = !DILocation(line: 858, column: 30, scope: !3568)
!5093 = !DILocation(line: 858, column: 39, scope: !3568)
!5094 = !DILocation(line: 858, column: 37, scope: !3568)
!5095 = !DILocation(line: 858, column: 46, scope: !3568)
!5096 = !DILocation(line: 858, column: 26, scope: !3568)
!5097 = !DILocation(line: 858, column: 26, scope: !5098)
!5098 = !DILexicalBlockFile(scope: !3568, file: !1035, discriminator: 1)
!5099 = !DILocation(line: 858, column: 73, scope: !5100)
!5100 = !DILexicalBlockFile(scope: !3568, file: !1035, discriminator: 2)
!5101 = !DILocation(line: 858, column: 76, scope: !5100)
!5102 = !DILocation(line: 858, column: 85, scope: !5100)
!5103 = !DILocation(line: 858, column: 83, scope: !5100)
!5104 = !DILocation(line: 858, column: 26, scope: !5100)
!5105 = !DILocation(line: 858, column: 26, scope: !5106)
!5106 = !DILexicalBlockFile(scope: !3568, file: !1035, discriminator: 3)
!5107 = !DILocation(line: 858, column: 13, scope: !5106)
!5108 = !DILocation(line: 858, column: 16, scope: !5106)
!5109 = !DILocation(line: 858, column: 23, scope: !5106)
!5110 = !DILocation(line: 861, column: 17, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !3568, file: !1035, line: 861, column: 17)
!5112 = !DILocation(line: 861, column: 23, scope: !5111)
!5113 = !DILocation(line: 861, column: 30, scope: !5111)
!5114 = !DILocation(line: 861, column: 33, scope: !5115)
!5115 = !DILexicalBlockFile(scope: !5111, file: !1035, discriminator: 1)
!5116 = !DILocation(line: 861, column: 39, scope: !5115)
!5117 = !DILocation(line: 861, column: 17, scope: !5115)
!5118 = !DILocation(line: 862, column: 17, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5111, file: !1035, line: 861, column: 47)
!5120 = !DILocation(line: 864, column: 21, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5122, file: !1035, line: 864, column: 21)
!5122 = distinct !DILexicalBlock(scope: !5111, file: !1035, line: 863, column: 20)
!5123 = !DILocation(line: 864, column: 29, scope: !5121)
!5124 = !DILocation(line: 864, column: 32, scope: !5125)
!5125 = !DILexicalBlockFile(scope: !5121, file: !1035, discriminator: 1)
!5126 = !DILocation(line: 864, column: 40, scope: !5125)
!5127 = !DILocation(line: 864, column: 43, scope: !5128)
!5128 = !DILexicalBlockFile(scope: !5121, file: !1035, discriminator: 2)
!5129 = !DILocation(line: 864, column: 52, scope: !5128)
!5130 = !DILocation(line: 864, column: 55, scope: !5131)
!5131 = !DILexicalBlockFile(scope: !5121, file: !1035, discriminator: 3)
!5132 = !DILocation(line: 864, column: 21, scope: !5131)
!5133 = !DILocation(line: 865, column: 28, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5135, file: !1035, line: 865, column: 21)
!5135 = distinct !DILexicalBlock(scope: !5121, file: !1035, line: 864, column: 66)
!5136 = !DILocation(line: 865, column: 26, scope: !5134)
!5137 = !DILocation(line: 865, column: 33, scope: !5138)
!5138 = !DILexicalBlockFile(scope: !5139, file: !1035, discriminator: 1)
!5139 = distinct !DILexicalBlock(scope: !5134, file: !1035, line: 865, column: 21)
!5140 = !DILocation(line: 865, column: 37, scope: !5138)
!5141 = !DILocation(line: 865, column: 40, scope: !5138)
!5142 = !DILocation(line: 865, column: 35, scope: !5138)
!5143 = !DILocation(line: 865, column: 21, scope: !5138)
!5144 = !DILocation(line: 867, column: 33, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5139, file: !1035, line: 865, column: 58)
!5146 = !DILocation(line: 867, column: 37, scope: !5145)
!5147 = !DILocation(line: 867, column: 31, scope: !5145)
!5148 = !DILocation(line: 868, column: 39, scope: !5145)
!5149 = !DILocation(line: 868, column: 32, scope: !5145)
!5150 = !DILocation(line: 868, column: 35, scope: !5145)
!5151 = !DILocation(line: 868, column: 29, scope: !5145)
!5152 = !DILocation(line: 869, column: 33, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5145, file: !1035, line: 869, column: 25)
!5154 = !DILocation(line: 869, column: 30, scope: !5153)
!5155 = !DILocation(line: 869, column: 38, scope: !5156)
!5156 = !DILexicalBlockFile(scope: !5157, file: !1035, discriminator: 1)
!5157 = distinct !DILexicalBlock(scope: !5153, file: !1035, line: 869, column: 25)
!5158 = !DILocation(line: 869, column: 43, scope: !5156)
!5159 = !DILocation(line: 869, column: 41, scope: !5156)
!5160 = !DILocation(line: 869, column: 25, scope: !5156)
!5161 = !DILocation(line: 870, column: 44, scope: !5157)
!5162 = !DILocation(line: 870, column: 36, scope: !5157)
!5163 = !DILocation(line: 870, column: 41, scope: !5157)
!5164 = !DILocation(line: 870, column: 48, scope: !5157)
!5165 = !DILocation(line: 870, column: 29, scope: !5157)
!5166 = !DILocation(line: 870, column: 64, scope: !5157)
!5167 = !DILocation(line: 870, column: 56, scope: !5157)
!5168 = !DILocation(line: 870, column: 61, scope: !5157)
!5169 = !DILocation(line: 870, column: 68, scope: !5157)
!5170 = !DILocation(line: 869, column: 52, scope: !5171)
!5171 = !DILexicalBlockFile(scope: !5157, file: !1035, discriminator: 2)
!5172 = !DILocation(line: 869, column: 25, scope: !5171)
!5173 = distinct !{!5173, !5174}
!5174 = !DILocation(line: 869, column: 25, scope: !5145)
!5175 = !DILocation(line: 871, column: 21, scope: !5145)
!5176 = !DILocation(line: 865, column: 54, scope: !5177)
!5177 = !DILexicalBlockFile(scope: !5139, file: !1035, discriminator: 2)
!5178 = !DILocation(line: 865, column: 21, scope: !5177)
!5179 = distinct !{!5179, !5180}
!5180 = !DILocation(line: 865, column: 21, scope: !5135)
!5181 = !DILocation(line: 872, column: 17, scope: !5135)
!5182 = !DILocation(line: 873, column: 20, scope: !5122)
!5183 = !DILocation(line: 875, column: 9, scope: !3568)
!5184 = !DILocation(line: 876, column: 13, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !3569, file: !1035, line: 875, column: 16)
!5186 = !DILocation(line: 878, column: 5, scope: !3570)
!5187 = !DILocation(line: 878, column: 5, scope: !4943)
!5188 = !DILocation(line: 880, column: 9, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !3558, file: !1035, line: 880, column: 9)
!5190 = !DILocation(line: 880, column: 12, scope: !5189)
!5191 = !DILocation(line: 880, column: 20, scope: !5189)
!5192 = !DILocation(line: 880, column: 24, scope: !5189)
!5193 = !DILocation(line: 880, column: 27, scope: !5194)
!5194 = !DILexicalBlockFile(scope: !5189, file: !1035, discriminator: 1)
!5195 = !DILocation(line: 880, column: 30, scope: !5194)
!5196 = !DILocation(line: 880, column: 37, scope: !5194)
!5197 = !DILocation(line: 880, column: 9, scope: !5194)
!5198 = !DILocation(line: 881, column: 9, scope: !5189)
!5199 = !DILocation(line: 881, column: 12, scope: !5189)
!5200 = !DILocation(line: 881, column: 19, scope: !5189)
!5201 = !DILocation(line: 881, column: 40, scope: !5189)
!5202 = !DILocation(line: 883, column: 15, scope: !3558)
!5203 = !DILocation(line: 883, column: 18, scope: !3558)
!5204 = !DILocation(line: 883, column: 5, scope: !3558)
!5205 = !DILocation(line: 884, column: 21, scope: !3558)
!5206 = !DILocation(line: 884, column: 24, scope: !3558)
!5207 = !DILocation(line: 884, column: 5, scope: !3558)
!5208 = !DILocation(line: 886, column: 46, scope: !3558)
!5209 = !DILocation(line: 886, column: 49, scope: !3558)
!5210 = !DILocation(line: 886, column: 30, scope: !3558)
!5211 = !DILocation(line: 886, column: 5, scope: !3558)
!5212 = !DILocation(line: 886, column: 8, scope: !3558)
!5213 = !DILocation(line: 886, column: 28, scope: !3558)
!5214 = !DILocation(line: 888, column: 22, scope: !3558)
!5215 = !DILocation(line: 888, column: 25, scope: !3558)
!5216 = !DILocation(line: 888, column: 5, scope: !3558)
!5217 = !DILocation(line: 888, column: 8, scope: !3558)
!5218 = !DILocation(line: 888, column: 19, scope: !3558)
!5219 = !DILocation(line: 889, column: 5, scope: !3558)
!5220 = !DILocation(line: 889, column: 8, scope: !3558)
!5221 = !DILocation(line: 889, column: 20, scope: !3558)
!5222 = !DILocation(line: 891, column: 25, scope: !3558)
!5223 = !DILocation(line: 891, column: 28, scope: !3558)
!5224 = !DILocation(line: 891, column: 33, scope: !3558)
!5225 = !DILocation(line: 891, column: 40, scope: !3558)
!5226 = !DILocation(line: 891, column: 53, scope: !3558)
!5227 = !DILocation(line: 891, column: 60, scope: !3558)
!5228 = !DILocation(line: 892, column: 25, scope: !3558)
!5229 = !DILocation(line: 892, column: 32, scope: !3558)
!5230 = !DILocation(line: 891, column: 5, scope: !3558)
!5231 = !DILocation(line: 894, column: 35, scope: !3558)
!5232 = !DILocation(line: 894, column: 38, scope: !3558)
!5233 = !DILocation(line: 894, column: 19, scope: !3558)
!5234 = !DILocation(line: 894, column: 42, scope: !3558)
!5235 = !DILocation(line: 894, column: 5, scope: !3558)
!5236 = !DILocation(line: 894, column: 12, scope: !3558)
!5237 = !DILocation(line: 894, column: 17, scope: !3558)
!5238 = !DILocation(line: 895, column: 6, scope: !3558)
!5239 = !DILocation(line: 895, column: 21, scope: !3558)
!5240 = !DILocation(line: 896, column: 5, scope: !3558)
!5241 = !DILocation(line: 897, column: 1, scope: !3558)
!5242 = distinct !DISubprogram(name: "aac_encode_end", scope: !1035, file: !1035, line: 899, type: !1160, isLocal: true, isDefinition: true, scopeLine: 900, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5243 = !DILocalVariable(name: "avctx", arg: 1, scope: !5242, file: !1035, line: 899, type: !1162)
!5244 = !DILocation(line: 899, column: 65, scope: !5242)
!5245 = !DILocalVariable(name: "s", scope: !5242, file: !1035, line: 901, type: !2903)
!5246 = !DILocation(line: 901, column: 20, scope: !5242)
!5247 = !DILocation(line: 901, column: 24, scope: !5242)
!5248 = !DILocation(line: 901, column: 31, scope: !5242)
!5249 = !DILocation(line: 903, column: 12, scope: !5242)
!5250 = !DILocation(line: 903, column: 39, scope: !5242)
!5251 = !DILocation(line: 903, column: 42, scope: !5242)
!5252 = !DILocation(line: 903, column: 55, scope: !5242)
!5253 = !DILocation(line: 903, column: 58, scope: !5242)
!5254 = !DILocation(line: 903, column: 53, scope: !5242)
!5255 = !DILocation(line: 903, column: 5, scope: !5242)
!5256 = !DILocation(line: 905, column: 18, scope: !5242)
!5257 = !DILocation(line: 905, column: 21, scope: !5242)
!5258 = !DILocation(line: 905, column: 5, scope: !5242)
!5259 = !DILocation(line: 906, column: 18, scope: !5242)
!5260 = !DILocation(line: 906, column: 21, scope: !5242)
!5261 = !DILocation(line: 906, column: 5, scope: !5242)
!5262 = !DILocation(line: 907, column: 17, scope: !5242)
!5263 = !DILocation(line: 907, column: 20, scope: !5242)
!5264 = !DILocation(line: 907, column: 5, scope: !5242)
!5265 = !DILocation(line: 908, column: 17, scope: !5242)
!5266 = !DILocation(line: 908, column: 20, scope: !5242)
!5267 = !DILocation(line: 908, column: 5, scope: !5242)
!5268 = !DILocation(line: 909, column: 9, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5242, file: !1035, line: 909, column: 9)
!5270 = !DILocation(line: 909, column: 12, scope: !5269)
!5271 = !DILocation(line: 909, column: 9, scope: !5242)
!5272 = !DILocation(line: 910, column: 31, scope: !5269)
!5273 = !DILocation(line: 910, column: 34, scope: !5269)
!5274 = !DILocation(line: 910, column: 9, scope: !5269)
!5275 = !DILocation(line: 911, column: 15, scope: !5242)
!5276 = !DILocation(line: 911, column: 18, scope: !5242)
!5277 = !DILocation(line: 911, column: 25, scope: !5242)
!5278 = !DILocation(line: 911, column: 14, scope: !5242)
!5279 = !DILocation(line: 911, column: 5, scope: !5242)
!5280 = !DILocation(line: 912, column: 15, scope: !5242)
!5281 = !DILocation(line: 912, column: 18, scope: !5242)
!5282 = !DILocation(line: 912, column: 14, scope: !5242)
!5283 = !DILocation(line: 912, column: 5, scope: !5242)
!5284 = !DILocation(line: 913, column: 15, scope: !5242)
!5285 = !DILocation(line: 913, column: 18, scope: !5242)
!5286 = !DILocation(line: 913, column: 14, scope: !5242)
!5287 = !DILocation(line: 913, column: 5, scope: !5242)
!5288 = !DILocation(line: 914, column: 24, scope: !5242)
!5289 = !DILocation(line: 914, column: 27, scope: !5242)
!5290 = !DILocation(line: 914, column: 5, scope: !5242)
!5291 = !DILocation(line: 915, column: 5, scope: !5242)
!5292 = distinct !DISubprogram(name: "dsp_init", scope: !1035, file: !1035, line: 918, type: !5293, isLocal: true, isDefinition: true, scopeLine: 919, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5293 = !DISubroutineType(types: !5294)
!5294 = !{!1023, !1162, !2903}
!5295 = !DILocalVariable(name: "avctx", arg: 1, scope: !5292, file: !1035, line: 918, type: !1162)
!5296 = !DILocation(line: 918, column: 59, scope: !5292)
!5297 = !DILocalVariable(name: "s", arg: 2, scope: !5292, file: !1035, line: 918, type: !2903)
!5298 = !DILocation(line: 918, column: 81, scope: !5292)
!5299 = !DILocalVariable(name: "ret", scope: !5292, file: !1035, line: 920, type: !1023)
!5300 = !DILocation(line: 920, column: 9, scope: !5292)
!5301 = !DILocation(line: 922, column: 38, scope: !5292)
!5302 = !DILocation(line: 922, column: 45, scope: !5292)
!5303 = !DILocation(line: 922, column: 51, scope: !5292)
!5304 = !DILocation(line: 922, column: 15, scope: !5292)
!5305 = !DILocation(line: 922, column: 5, scope: !5292)
!5306 = !DILocation(line: 922, column: 8, scope: !5292)
!5307 = !DILocation(line: 922, column: 13, scope: !5292)
!5308 = !DILocation(line: 923, column: 10, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5292, file: !1035, line: 923, column: 9)
!5310 = !DILocation(line: 923, column: 13, scope: !5309)
!5311 = !DILocation(line: 923, column: 9, scope: !5292)
!5312 = !DILocation(line: 924, column: 9, scope: !5309)
!5313 = !DILocation(line: 927, column: 5, scope: !5292)
!5314 = !DILocation(line: 928, column: 5, scope: !5292)
!5315 = !DILocation(line: 929, column: 5, scope: !5292)
!5316 = !DILocation(line: 930, column: 5, scope: !5292)
!5317 = !DILocation(line: 932, column: 30, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5292, file: !1035, line: 932, column: 9)
!5319 = !DILocation(line: 932, column: 33, scope: !5318)
!5320 = !DILocation(line: 932, column: 16, scope: !5318)
!5321 = !DILocation(line: 932, column: 14, scope: !5318)
!5322 = !DILocation(line: 932, column: 60, scope: !5318)
!5323 = !DILocation(line: 932, column: 9, scope: !5292)
!5324 = !DILocation(line: 933, column: 16, scope: !5318)
!5325 = !DILocation(line: 933, column: 9, scope: !5318)
!5326 = !DILocation(line: 934, column: 30, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5292, file: !1035, line: 934, column: 9)
!5328 = !DILocation(line: 934, column: 33, scope: !5327)
!5329 = !DILocation(line: 934, column: 16, scope: !5327)
!5330 = !DILocation(line: 934, column: 14, scope: !5327)
!5331 = !DILocation(line: 934, column: 58, scope: !5327)
!5332 = !DILocation(line: 934, column: 9, scope: !5292)
!5333 = !DILocation(line: 935, column: 16, scope: !5327)
!5334 = !DILocation(line: 935, column: 9, scope: !5327)
!5335 = !DILocation(line: 937, column: 5, scope: !5292)
!5336 = !DILocation(line: 938, column: 1, scope: !5292)
!5337 = distinct !DISubprogram(name: "alloc_buffers", scope: !1035, file: !1035, line: 940, type: !5293, isLocal: true, isDefinition: true, scopeLine: 941, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5338 = !DILocalVariable(name: "avctx", arg: 1, scope: !5337, file: !1035, line: 940, type: !1162)
!5339 = !DILocation(line: 940, column: 64, scope: !5337)
!5340 = !DILocalVariable(name: "s", arg: 2, scope: !5337, file: !1035, line: 940, type: !2903)
!5341 = !DILocation(line: 940, column: 86, scope: !5337)
!5342 = !DILocalVariable(name: "ch", scope: !5337, file: !1035, line: 942, type: !1023)
!5343 = !DILocation(line: 942, column: 9, scope: !5337)
!5344 = !DILocation(line: 943, column: 44, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5337, file: !1035, line: 943, column: 5)
!5346 = !DILocation(line: 943, column: 47, scope: !5345)
!5347 = !DILocation(line: 943, column: 27, scope: !5345)
!5348 = !DILocation(line: 943, column: 7, scope: !5345)
!5349 = !DILocation(line: 943, column: 10, scope: !5345)
!5350 = !DILocation(line: 943, column: 17, scope: !5345)
!5351 = !DILocation(line: 943, column: 25, scope: !5345)
!5352 = !DILocation(line: 943, column: 104, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5345, file: !1035, line: 943, column: 103)
!5354 = !DILocation(line: 943, column: 107, scope: !5353)
!5355 = !DILocation(line: 943, column: 114, scope: !5353)
!5356 = !DILocation(line: 943, column: 103, scope: !5345)
!5357 = !DILocation(line: 943, column: 132, scope: !5358)
!5358 = !DILexicalBlockFile(scope: !5359, file: !1035, discriminator: 1)
!5359 = distinct !DILexicalBlock(scope: !5353, file: !1035, line: 943, column: 123)
!5360 = !DILocation(line: 943, column: 125, scope: !5358)
!5361 = !DILocation(line: 943, column: 173, scope: !5358)
!5362 = !DILocation(line: 944, column: 33, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5337, file: !1035, line: 944, column: 5)
!5364 = !DILocation(line: 944, column: 36, scope: !5363)
!5365 = !DILocation(line: 944, column: 16, scope: !5363)
!5366 = !DILocation(line: 944, column: 7, scope: !5363)
!5367 = !DILocation(line: 944, column: 10, scope: !5363)
!5368 = !DILocation(line: 944, column: 14, scope: !5363)
!5369 = !DILocation(line: 944, column: 79, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5363, file: !1035, line: 944, column: 78)
!5371 = !DILocation(line: 944, column: 82, scope: !5370)
!5372 = !DILocation(line: 944, column: 78, scope: !5363)
!5373 = !DILocation(line: 944, column: 96, scope: !5374)
!5374 = !DILexicalBlockFile(scope: !5375, file: !1035, discriminator: 1)
!5375 = distinct !DILexicalBlock(scope: !5370, file: !1035, line: 944, column: 87)
!5376 = !DILocation(line: 944, column: 89, scope: !5374)
!5377 = !DILocation(line: 944, column: 137, scope: !5374)
!5378 = !DILocation(line: 946, column: 12, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5337, file: !1035, line: 946, column: 5)
!5380 = !DILocation(line: 946, column: 9, scope: !5379)
!5381 = !DILocation(line: 946, column: 17, scope: !5382)
!5382 = !DILexicalBlockFile(scope: !5383, file: !1035, discriminator: 1)
!5383 = distinct !DILexicalBlock(scope: !5379, file: !1035, line: 946, column: 5)
!5384 = !DILocation(line: 946, column: 22, scope: !5382)
!5385 = !DILocation(line: 946, column: 25, scope: !5382)
!5386 = !DILocation(line: 946, column: 20, scope: !5382)
!5387 = !DILocation(line: 946, column: 5, scope: !5382)
!5388 = !DILocation(line: 947, column: 33, scope: !5383)
!5389 = !DILocation(line: 947, column: 36, scope: !5383)
!5390 = !DILocation(line: 947, column: 43, scope: !5383)
!5391 = !DILocation(line: 947, column: 64, scope: !5383)
!5392 = !DILocation(line: 947, column: 62, scope: !5383)
!5393 = !DILocation(line: 947, column: 51, scope: !5383)
!5394 = !DILocation(line: 947, column: 27, scope: !5383)
!5395 = !DILocation(line: 947, column: 9, scope: !5383)
!5396 = !DILocation(line: 947, column: 12, scope: !5383)
!5397 = !DILocation(line: 947, column: 31, scope: !5383)
!5398 = !DILocation(line: 946, column: 37, scope: !5399)
!5399 = !DILexicalBlockFile(scope: !5383, file: !1035, discriminator: 2)
!5400 = !DILocation(line: 946, column: 5, scope: !5399)
!5401 = distinct !{!5401, !5402}
!5402 = !DILocation(line: 946, column: 5, scope: !5337)
!5403 = !DILocation(line: 949, column: 5, scope: !5337)
!5404 = !DILocation(line: 951, column: 5, scope: !5337)
!5405 = !DILocation(line: 952, column: 1, scope: !5337)
!5406 = distinct !DISubprogram(name: "put_audio_specific_config", scope: !1035, file: !1035, line: 94, type: !1160, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5407 = !DILocalVariable(name: "avctx", arg: 1, scope: !5406, file: !1035, line: 94, type: !1162)
!5408 = !DILocation(line: 94, column: 54, scope: !5406)
!5409 = !DILocalVariable(name: "pb", scope: !5406, file: !1035, line: 96, type: !2061)
!5410 = !DILocation(line: 96, column: 19, scope: !5406)
!5411 = !DILocalVariable(name: "s", scope: !5406, file: !1035, line: 97, type: !2903)
!5412 = !DILocation(line: 97, column: 20, scope: !5406)
!5413 = !DILocation(line: 97, column: 24, scope: !5406)
!5414 = !DILocation(line: 97, column: 31, scope: !5406)
!5415 = !DILocalVariable(name: "channels", scope: !5406, file: !1035, line: 98, type: !1023)
!5416 = !DILocation(line: 98, column: 9, scope: !5406)
!5417 = !DILocation(line: 98, column: 22, scope: !5406)
!5418 = !DILocation(line: 98, column: 25, scope: !5406)
!5419 = !DILocation(line: 98, column: 21, scope: !5406)
!5420 = !DILocation(line: 98, column: 37, scope: !5406)
!5421 = !DILocation(line: 98, column: 40, scope: !5406)
!5422 = !DILocation(line: 98, column: 52, scope: !5406)
!5423 = !DILocation(line: 98, column: 55, scope: !5406)
!5424 = !DILocation(line: 98, column: 64, scope: !5406)
!5425 = !DILocation(line: 98, column: 49, scope: !5406)
!5426 = !DILocation(line: 98, column: 35, scope: !5406)
!5427 = !DILocalVariable(name: "max_size", scope: !5406, file: !1035, line: 99, type: !1061)
!5428 = !DILocation(line: 99, column: 15, scope: !5406)
!5429 = !DILocation(line: 101, column: 24, scope: !5406)
!5430 = !DILocation(line: 101, column: 5, scope: !5406)
!5431 = !DILocation(line: 101, column: 12, scope: !5406)
!5432 = !DILocation(line: 101, column: 22, scope: !5406)
!5433 = !DILocation(line: 102, column: 10, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5406, file: !1035, line: 102, column: 9)
!5435 = !DILocation(line: 102, column: 17, scope: !5434)
!5436 = !DILocation(line: 102, column: 9, scope: !5406)
!5437 = !DILocation(line: 103, column: 9, scope: !5434)
!5438 = !DILocation(line: 105, column: 24, scope: !5406)
!5439 = !DILocation(line: 105, column: 31, scope: !5406)
!5440 = !DILocation(line: 105, column: 5, scope: !5406)
!5441 = !DILocation(line: 106, column: 22, scope: !5406)
!5442 = !DILocation(line: 106, column: 25, scope: !5406)
!5443 = !DILocation(line: 106, column: 32, scope: !5406)
!5444 = !DILocation(line: 106, column: 5, scope: !5406)
!5445 = !DILocation(line: 107, column: 22, scope: !5406)
!5446 = !DILocation(line: 107, column: 25, scope: !5406)
!5447 = !DILocation(line: 107, column: 5, scope: !5406)
!5448 = !DILocation(line: 108, column: 22, scope: !5406)
!5449 = !DILocation(line: 108, column: 5, scope: !5406)
!5450 = !DILocation(line: 110, column: 5, scope: !5406)
!5451 = !DILocation(line: 111, column: 5, scope: !5406)
!5452 = !DILocation(line: 112, column: 5, scope: !5406)
!5453 = !DILocation(line: 113, column: 9, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5406, file: !1035, line: 113, column: 9)
!5455 = !DILocation(line: 113, column: 12, scope: !5454)
!5456 = !DILocation(line: 113, column: 9, scope: !5406)
!5457 = !DILocation(line: 114, column: 22, scope: !5454)
!5458 = !DILocation(line: 114, column: 9, scope: !5454)
!5459 = !DILocation(line: 117, column: 5, scope: !5406)
!5460 = !DILocation(line: 118, column: 5, scope: !5406)
!5461 = !DILocation(line: 119, column: 5, scope: !5406)
!5462 = !DILocation(line: 120, column: 5, scope: !5406)
!5463 = !DILocation(line: 121, column: 29, scope: !5406)
!5464 = !DILocation(line: 121, column: 49, scope: !5406)
!5465 = !DILocation(line: 121, column: 5, scope: !5406)
!5466 = !DILocation(line: 121, column: 12, scope: !5406)
!5467 = !DILocation(line: 121, column: 27, scope: !5406)
!5468 = !DILocation(line: 123, column: 5, scope: !5406)
!5469 = !DILocation(line: 124, column: 1, scope: !5406)
!5470 = distinct !DISubprogram(name: "abs_pow34_v", scope: !5471, file: !5471, line: 40, type: !2869, isLocal: true, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5471 = !DIFile(filename: "libavcodec/aacenc_utils.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5472 = !DILocalVariable(name: "out", arg: 1, scope: !5470, file: !5471, line: 40, type: !1869)
!5473 = !DILocation(line: 40, column: 39, scope: !5470)
!5474 = !DILocalVariable(name: "in", arg: 2, scope: !5470, file: !5471, line: 40, type: !1870)
!5475 = !DILocation(line: 40, column: 57, scope: !5470)
!5476 = !DILocalVariable(name: "size", arg: 3, scope: !5470, file: !5471, line: 40, type: !1061)
!5477 = !DILocation(line: 40, column: 71, scope: !5470)
!5478 = !DILocalVariable(name: "i", scope: !5470, file: !5471, line: 42, type: !1023)
!5479 = !DILocation(line: 42, column: 9, scope: !5470)
!5480 = !DILocation(line: 43, column: 12, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5470, file: !5471, line: 43, column: 5)
!5482 = !DILocation(line: 43, column: 10, scope: !5481)
!5483 = !DILocation(line: 43, column: 17, scope: !5484)
!5484 = !DILexicalBlockFile(scope: !5485, file: !5471, discriminator: 1)
!5485 = distinct !DILexicalBlock(scope: !5481, file: !5471, line: 43, column: 5)
!5486 = !DILocation(line: 43, column: 21, scope: !5484)
!5487 = !DILocation(line: 43, column: 19, scope: !5484)
!5488 = !DILocation(line: 43, column: 5, scope: !5484)
!5489 = !DILocalVariable(name: "a", scope: !5490, file: !5471, line: 44, type: !1032)
!5490 = distinct !DILexicalBlock(scope: !5485, file: !5471, line: 43, column: 32)
!5491 = !DILocation(line: 44, column: 15, scope: !5490)
!5492 = !DILocation(line: 44, column: 28, scope: !5490)
!5493 = !DILocation(line: 44, column: 25, scope: !5490)
!5494 = !DILocation(line: 44, column: 19, scope: !5490)
!5495 = !DILocation(line: 45, column: 24, scope: !5490)
!5496 = !DILocation(line: 45, column: 34, scope: !5490)
!5497 = !DILocation(line: 45, column: 28, scope: !5490)
!5498 = !DILocation(line: 45, column: 26, scope: !5490)
!5499 = !DILocation(line: 45, column: 18, scope: !5500)
!5500 = !DILexicalBlockFile(scope: !5490, file: !5471, discriminator: 1)
!5501 = !DILocation(line: 45, column: 13, scope: !5490)
!5502 = !DILocation(line: 45, column: 9, scope: !5490)
!5503 = !DILocation(line: 45, column: 16, scope: !5490)
!5504 = !DILocation(line: 46, column: 5, scope: !5490)
!5505 = !DILocation(line: 43, column: 28, scope: !5506)
!5506 = !DILexicalBlockFile(scope: !5485, file: !5471, discriminator: 2)
!5507 = !DILocation(line: 43, column: 5, scope: !5506)
!5508 = distinct !{!5508, !5509}
!5509 = !DILocation(line: 43, column: 5, scope: !5470)
!5510 = !DILocation(line: 47, column: 1, scope: !5470)
!5511 = distinct !DISubprogram(name: "quantize_bands", scope: !5471, file: !5471, line: 65, type: !2873, isLocal: true, isDefinition: true, scopeLine: 68, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5512 = !DILocalVariable(name: "out", arg: 1, scope: !5511, file: !5471, line: 65, type: !1454)
!5513 = !DILocation(line: 65, column: 40, scope: !5511)
!5514 = !DILocalVariable(name: "in", arg: 2, scope: !5511, file: !5471, line: 65, type: !1870)
!5515 = !DILocation(line: 65, column: 58, scope: !5511)
!5516 = !DILocalVariable(name: "scaled", arg: 3, scope: !5511, file: !5471, line: 65, type: !1870)
!5517 = !DILocation(line: 65, column: 75, scope: !5511)
!5518 = !DILocalVariable(name: "size", arg: 4, scope: !5511, file: !5471, line: 66, type: !1023)
!5519 = !DILocation(line: 66, column: 39, scope: !5511)
!5520 = !DILocalVariable(name: "is_signed", arg: 5, scope: !5511, file: !5471, line: 66, type: !1023)
!5521 = !DILocation(line: 66, column: 49, scope: !5511)
!5522 = !DILocalVariable(name: "maxval", arg: 6, scope: !5511, file: !5471, line: 66, type: !1023)
!5523 = !DILocation(line: 66, column: 64, scope: !5511)
!5524 = !DILocalVariable(name: "Q34", arg: 7, scope: !5511, file: !5471, line: 66, type: !1853)
!5525 = !DILocation(line: 66, column: 84, scope: !5511)
!5526 = !DILocalVariable(name: "rounding", arg: 8, scope: !5511, file: !5471, line: 67, type: !1853)
!5527 = !DILocation(line: 67, column: 47, scope: !5511)
!5528 = !DILocalVariable(name: "i", scope: !5511, file: !5471, line: 69, type: !1023)
!5529 = !DILocation(line: 69, column: 9, scope: !5511)
!5530 = !DILocation(line: 70, column: 12, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5511, file: !5471, line: 70, column: 5)
!5532 = !DILocation(line: 70, column: 10, scope: !5531)
!5533 = !DILocation(line: 70, column: 17, scope: !5534)
!5534 = !DILexicalBlockFile(scope: !5535, file: !5471, discriminator: 1)
!5535 = distinct !DILexicalBlock(scope: !5531, file: !5471, line: 70, column: 5)
!5536 = !DILocation(line: 70, column: 21, scope: !5534)
!5537 = !DILocation(line: 70, column: 19, scope: !5534)
!5538 = !DILocation(line: 70, column: 5, scope: !5534)
!5539 = !DILocalVariable(name: "qc", scope: !5540, file: !5471, line: 71, type: !1032)
!5540 = distinct !DILexicalBlock(scope: !5535, file: !5471, line: 70, column: 32)
!5541 = !DILocation(line: 71, column: 15, scope: !5540)
!5542 = !DILocation(line: 71, column: 27, scope: !5540)
!5543 = !DILocation(line: 71, column: 20, scope: !5540)
!5544 = !DILocation(line: 71, column: 32, scope: !5540)
!5545 = !DILocation(line: 71, column: 30, scope: !5540)
!5546 = !DILocalVariable(name: "tmp", scope: !5540, file: !5471, line: 72, type: !1023)
!5547 = !DILocation(line: 72, column: 13, scope: !5540)
!5548 = !DILocation(line: 72, column: 26, scope: !5540)
!5549 = !DILocation(line: 72, column: 31, scope: !5540)
!5550 = !DILocation(line: 72, column: 29, scope: !5540)
!5551 = !DILocation(line: 72, column: 51, scope: !5540)
!5552 = !DILocation(line: 72, column: 44, scope: !5540)
!5553 = !DILocation(line: 72, column: 41, scope: !5540)
!5554 = !DILocation(line: 72, column: 25, scope: !5540)
!5555 = !DILocation(line: 72, column: 69, scope: !5556)
!5556 = !DILexicalBlockFile(scope: !5540, file: !5471, discriminator: 1)
!5557 = !DILocation(line: 72, column: 62, scope: !5556)
!5558 = !DILocation(line: 72, column: 25, scope: !5556)
!5559 = !DILocation(line: 72, column: 80, scope: !5560)
!5560 = !DILexicalBlockFile(scope: !5540, file: !5471, discriminator: 2)
!5561 = !DILocation(line: 72, column: 85, scope: !5560)
!5562 = !DILocation(line: 72, column: 83, scope: !5560)
!5563 = !DILocation(line: 72, column: 25, scope: !5560)
!5564 = !DILocation(line: 72, column: 25, scope: !5565)
!5565 = !DILexicalBlockFile(scope: !5540, file: !5471, discriminator: 3)
!5566 = !DILocation(line: 72, column: 19, scope: !5565)
!5567 = !DILocation(line: 72, column: 13, scope: !5565)
!5568 = !DILocation(line: 73, column: 13, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5540, file: !5471, line: 73, column: 13)
!5570 = !DILocation(line: 73, column: 23, scope: !5569)
!5571 = !DILocation(line: 73, column: 29, scope: !5572)
!5572 = !DILexicalBlockFile(scope: !5569, file: !5471, discriminator: 1)
!5573 = !DILocation(line: 73, column: 26, scope: !5572)
!5574 = !DILocation(line: 73, column: 32, scope: !5572)
!5575 = !DILocation(line: 73, column: 13, scope: !5572)
!5576 = !DILocation(line: 74, column: 20, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5569, file: !5471, line: 73, column: 40)
!5578 = !DILocation(line: 74, column: 19, scope: !5577)
!5579 = !DILocation(line: 74, column: 17, scope: !5577)
!5580 = !DILocation(line: 75, column: 9, scope: !5577)
!5581 = !DILocation(line: 76, column: 18, scope: !5540)
!5582 = !DILocation(line: 76, column: 13, scope: !5540)
!5583 = !DILocation(line: 76, column: 9, scope: !5540)
!5584 = !DILocation(line: 76, column: 16, scope: !5540)
!5585 = !DILocation(line: 77, column: 5, scope: !5540)
!5586 = !DILocation(line: 70, column: 28, scope: !5587)
!5587 = !DILexicalBlockFile(scope: !5535, file: !5471, discriminator: 2)
!5588 = !DILocation(line: 70, column: 5, scope: !5587)
!5589 = distinct !{!5589, !5590}
!5590 = !DILocation(line: 70, column: 5, scope: !5511)
!5591 = !DILocation(line: 78, column: 1, scope: !5511)
!5592 = distinct !DISubprogram(name: "aac_encode_init_tables", scope: !1035, file: !1035, line: 954, type: !1849, isLocal: true, isDefinition: true, scopeLine: 955, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5593 = !DILocation(line: 956, column: 5, scope: !5592)
!5594 = !DILocation(line: 957, column: 1, scope: !5592)
!5595 = distinct !DISubprogram(name: "init_put_bits", scope: !2062, file: !2062, line: 48, type: !5596, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5596 = !DISubroutineType(types: !5597)
!5597 = !{null, !2789, !1190, !1023}
!5598 = !DILocalVariable(name: "s", arg: 1, scope: !5595, file: !2062, line: 48, type: !2789)
!5599 = !DILocation(line: 48, column: 49, scope: !5595)
!5600 = !DILocalVariable(name: "buffer", arg: 2, scope: !5595, file: !2062, line: 48, type: !1190)
!5601 = !DILocation(line: 48, column: 61, scope: !5595)
!5602 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !5595, file: !2062, line: 49, type: !1023)
!5603 = !DILocation(line: 49, column: 38, scope: !5595)
!5604 = !DILocation(line: 51, column: 9, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5595, file: !2062, line: 51, column: 9)
!5606 = !DILocation(line: 51, column: 21, scope: !5605)
!5607 = !DILocation(line: 51, column: 9, scope: !5595)
!5608 = !DILocation(line: 52, column: 21, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5605, file: !2062, line: 51, column: 26)
!5610 = !DILocation(line: 53, column: 16, scope: !5609)
!5611 = !DILocation(line: 54, column: 5, scope: !5609)
!5612 = !DILocation(line: 56, column: 27, scope: !5595)
!5613 = !DILocation(line: 56, column: 25, scope: !5595)
!5614 = !DILocation(line: 56, column: 5, scope: !5595)
!5615 = !DILocation(line: 56, column: 8, scope: !5595)
!5616 = !DILocation(line: 56, column: 21, scope: !5595)
!5617 = !DILocation(line: 57, column: 14, scope: !5595)
!5618 = !DILocation(line: 57, column: 5, scope: !5595)
!5619 = !DILocation(line: 57, column: 8, scope: !5595)
!5620 = !DILocation(line: 57, column: 12, scope: !5595)
!5621 = !DILocation(line: 58, column: 18, scope: !5595)
!5622 = !DILocation(line: 58, column: 21, scope: !5595)
!5623 = !DILocation(line: 58, column: 27, scope: !5595)
!5624 = !DILocation(line: 58, column: 25, scope: !5595)
!5625 = !DILocation(line: 58, column: 5, scope: !5595)
!5626 = !DILocation(line: 58, column: 8, scope: !5595)
!5627 = !DILocation(line: 58, column: 16, scope: !5595)
!5628 = !DILocation(line: 59, column: 18, scope: !5595)
!5629 = !DILocation(line: 59, column: 21, scope: !5595)
!5630 = !DILocation(line: 59, column: 5, scope: !5595)
!5631 = !DILocation(line: 59, column: 8, scope: !5595)
!5632 = !DILocation(line: 59, column: 16, scope: !5595)
!5633 = !DILocation(line: 60, column: 5, scope: !5595)
!5634 = !DILocation(line: 60, column: 8, scope: !5595)
!5635 = !DILocation(line: 60, column: 17, scope: !5595)
!5636 = !DILocation(line: 61, column: 5, scope: !5595)
!5637 = !DILocation(line: 61, column: 8, scope: !5595)
!5638 = !DILocation(line: 61, column: 16, scope: !5595)
!5639 = !DILocation(line: 62, column: 1, scope: !5595)
!5640 = distinct !DISubprogram(name: "put_bits", scope: !2062, file: !2062, line: 164, type: !5641, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5641 = !DISubroutineType(types: !5642)
!5642 = !{null, !2789, !1023, !1024}
!5643 = !DILocalVariable(name: "x", arg: 1, scope: !5644, file: !5645, line: 66, type: !1030)
!5644 = distinct !DISubprogram(name: "av_bswap32", scope: !5645, file: !5645, line: 66, type: !5646, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5645 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5646 = !DISubroutineType(types: !5647)
!5647 = !{!1030, !1030}
!5648 = !DILocation(line: 66, column: 98, scope: !5644, inlinedAt: !5649)
!5649 = distinct !DILocation(line: 197, column: 60, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5651, file: !2062, line: 196, column: 42)
!5651 = distinct !DILexicalBlock(scope: !5652, file: !2062, line: 196, column: 13)
!5652 = distinct !DILexicalBlock(scope: !5653, file: !2062, line: 193, column: 12)
!5653 = distinct !DILexicalBlock(scope: !5640, file: !2062, line: 190, column: 9)
!5654 = !DILocalVariable(name: "s", arg: 1, scope: !5640, file: !2062, line: 164, type: !2789)
!5655 = !DILocation(line: 164, column: 44, scope: !5640)
!5656 = !DILocalVariable(name: "n", arg: 2, scope: !5640, file: !2062, line: 164, type: !1023)
!5657 = !DILocation(line: 164, column: 51, scope: !5640)
!5658 = !DILocalVariable(name: "value", arg: 3, scope: !5640, file: !2062, line: 164, type: !1024)
!5659 = !DILocation(line: 164, column: 67, scope: !5640)
!5660 = !DILocalVariable(name: "bit_buf", scope: !5640, file: !2062, line: 166, type: !1024)
!5661 = !DILocation(line: 166, column: 18, scope: !5640)
!5662 = !DILocalVariable(name: "bit_left", scope: !5640, file: !2062, line: 167, type: !1023)
!5663 = !DILocation(line: 167, column: 9, scope: !5640)
!5664 = !DILocation(line: 171, column: 15, scope: !5640)
!5665 = !DILocation(line: 171, column: 18, scope: !5640)
!5666 = !DILocation(line: 171, column: 13, scope: !5640)
!5667 = !DILocation(line: 172, column: 16, scope: !5640)
!5668 = !DILocation(line: 172, column: 19, scope: !5640)
!5669 = !DILocation(line: 172, column: 14, scope: !5640)
!5670 = !DILocation(line: 190, column: 9, scope: !5653)
!5671 = !DILocation(line: 190, column: 13, scope: !5653)
!5672 = !DILocation(line: 190, column: 11, scope: !5653)
!5673 = !DILocation(line: 190, column: 9, scope: !5640)
!5674 = !DILocation(line: 191, column: 20, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5653, file: !2062, line: 190, column: 23)
!5676 = !DILocation(line: 191, column: 31, scope: !5675)
!5677 = !DILocation(line: 191, column: 28, scope: !5675)
!5678 = !DILocation(line: 191, column: 36, scope: !5675)
!5679 = !DILocation(line: 191, column: 34, scope: !5675)
!5680 = !DILocation(line: 191, column: 17, scope: !5675)
!5681 = !DILocation(line: 192, column: 21, scope: !5675)
!5682 = !DILocation(line: 192, column: 18, scope: !5675)
!5683 = !DILocation(line: 193, column: 5, scope: !5675)
!5684 = !DILocation(line: 194, column: 21, scope: !5652)
!5685 = !DILocation(line: 194, column: 17, scope: !5652)
!5686 = !DILocation(line: 195, column: 20, scope: !5652)
!5687 = !DILocation(line: 195, column: 30, scope: !5652)
!5688 = !DILocation(line: 195, column: 34, scope: !5652)
!5689 = !DILocation(line: 195, column: 32, scope: !5652)
!5690 = !DILocation(line: 195, column: 26, scope: !5652)
!5691 = !DILocation(line: 195, column: 17, scope: !5652)
!5692 = !DILocation(line: 196, column: 17, scope: !5651)
!5693 = !DILocation(line: 196, column: 20, scope: !5651)
!5694 = !DILocation(line: 196, column: 30, scope: !5651)
!5695 = !DILocation(line: 196, column: 33, scope: !5651)
!5696 = !DILocation(line: 196, column: 28, scope: !5651)
!5697 = !DILocation(line: 196, column: 15, scope: !5651)
!5698 = !DILocation(line: 196, column: 13, scope: !5652)
!5699 = !DILocation(line: 197, column: 71, scope: !5650)
!5700 = !DILocation(line: 197, column: 60, scope: !5650)
!5701 = !DILocation(line: 68, column: 16, scope: !5644, inlinedAt: !5649)
!5702 = !DILocation(line: 68, column: 19, scope: !5644, inlinedAt: !5649)
!5703 = !DILocation(line: 68, column: 24, scope: !5644, inlinedAt: !5649)
!5704 = !DILocation(line: 68, column: 38, scope: !5644, inlinedAt: !5649)
!5705 = !DILocation(line: 68, column: 41, scope: !5644, inlinedAt: !5649)
!5706 = !DILocation(line: 68, column: 46, scope: !5644, inlinedAt: !5649)
!5707 = !DILocation(line: 68, column: 34, scope: !5644, inlinedAt: !5649)
!5708 = !DILocation(line: 68, column: 57, scope: !5644, inlinedAt: !5649)
!5709 = !DILocation(line: 68, column: 69, scope: !5644, inlinedAt: !5649)
!5710 = !DILocation(line: 68, column: 72, scope: !5644, inlinedAt: !5649)
!5711 = !DILocation(line: 68, column: 79, scope: !5644, inlinedAt: !5649)
!5712 = !DILocation(line: 68, column: 84, scope: !5644, inlinedAt: !5649)
!5713 = !DILocation(line: 68, column: 99, scope: !5644, inlinedAt: !5649)
!5714 = !DILocation(line: 68, column: 102, scope: !5644, inlinedAt: !5649)
!5715 = !DILocation(line: 68, column: 109, scope: !5644, inlinedAt: !5649)
!5716 = !DILocation(line: 68, column: 114, scope: !5644, inlinedAt: !5649)
!5717 = !DILocation(line: 68, column: 94, scope: !5644, inlinedAt: !5649)
!5718 = !DILocation(line: 68, column: 63, scope: !5644, inlinedAt: !5649)
!5719 = !DILocation(line: 197, column: 40, scope: !5650)
!5720 = !DILocation(line: 197, column: 43, scope: !5650)
!5721 = !DILocation(line: 197, column: 54, scope: !5650)
!5722 = !DILocation(line: 197, column: 57, scope: !5650)
!5723 = !DILocation(line: 198, column: 13, scope: !5650)
!5724 = !DILocation(line: 198, column: 16, scope: !5650)
!5725 = !DILocation(line: 198, column: 24, scope: !5650)
!5726 = !DILocation(line: 199, column: 9, scope: !5650)
!5727 = !DILocation(line: 200, column: 13, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5651, file: !2062, line: 199, column: 16)
!5729 = !DILocation(line: 203, column: 26, scope: !5652)
!5730 = !DILocation(line: 203, column: 24, scope: !5652)
!5731 = !DILocation(line: 203, column: 18, scope: !5652)
!5732 = !DILocation(line: 204, column: 19, scope: !5652)
!5733 = !DILocation(line: 204, column: 17, scope: !5652)
!5734 = !DILocation(line: 208, column: 18, scope: !5640)
!5735 = !DILocation(line: 208, column: 5, scope: !5640)
!5736 = !DILocation(line: 208, column: 8, scope: !5640)
!5737 = !DILocation(line: 208, column: 16, scope: !5640)
!5738 = !DILocation(line: 209, column: 19, scope: !5640)
!5739 = !DILocation(line: 209, column: 5, scope: !5640)
!5740 = !DILocation(line: 209, column: 8, scope: !5640)
!5741 = !DILocation(line: 209, column: 17, scope: !5640)
!5742 = !DILocation(line: 210, column: 1, scope: !5640)
!5743 = distinct !DISubprogram(name: "put_pce", scope: !1035, file: !1035, line: 53, type: !5744, isLocal: true, isDefinition: true, scopeLine: 54, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5744 = !DISubroutineType(types: !5745)
!5745 = !{null, !2789, !1162}
!5746 = !DILocalVariable(name: "pb", arg: 1, scope: !5743, file: !1035, line: 53, type: !2789)
!5747 = !DILocation(line: 53, column: 36, scope: !5743)
!5748 = !DILocalVariable(name: "avctx", arg: 2, scope: !5743, file: !1035, line: 53, type: !1162)
!5749 = !DILocation(line: 53, column: 56, scope: !5743)
!5750 = !DILocalVariable(name: "i", scope: !5743, file: !1035, line: 55, type: !1023)
!5751 = !DILocation(line: 55, column: 9, scope: !5743)
!5752 = !DILocalVariable(name: "j", scope: !5743, file: !1035, line: 55, type: !1023)
!5753 = !DILocation(line: 55, column: 12, scope: !5743)
!5754 = !DILocalVariable(name: "s", scope: !5743, file: !1035, line: 56, type: !2903)
!5755 = !DILocation(line: 56, column: 20, scope: !5743)
!5756 = !DILocation(line: 56, column: 24, scope: !5743)
!5757 = !DILocation(line: 56, column: 31, scope: !5743)
!5758 = !DILocalVariable(name: "pce", scope: !5743, file: !1035, line: 57, type: !5759)
!5759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64, align: 64)
!5760 = !DILocation(line: 57, column: 17, scope: !5743)
!5761 = !DILocation(line: 57, column: 24, scope: !5743)
!5762 = !DILocation(line: 57, column: 27, scope: !5743)
!5763 = !DILocalVariable(name: "bitexact", scope: !5743, file: !1035, line: 58, type: !1061)
!5764 = !DILocation(line: 58, column: 15, scope: !5743)
!5765 = !DILocation(line: 58, column: 26, scope: !5743)
!5766 = !DILocation(line: 58, column: 33, scope: !5743)
!5767 = !DILocation(line: 58, column: 39, scope: !5743)
!5768 = !DILocalVariable(name: "aux_data", scope: !5743, file: !1035, line: 59, type: !1040)
!5769 = !DILocation(line: 59, column: 17, scope: !5743)
!5770 = !DILocation(line: 59, column: 28, scope: !5743)
!5771 = !DILocation(line: 61, column: 14, scope: !5743)
!5772 = !DILocation(line: 61, column: 5, scope: !5743)
!5773 = !DILocation(line: 63, column: 14, scope: !5743)
!5774 = !DILocation(line: 63, column: 21, scope: !5743)
!5775 = !DILocation(line: 63, column: 28, scope: !5743)
!5776 = !DILocation(line: 63, column: 5, scope: !5743)
!5777 = !DILocation(line: 64, column: 14, scope: !5743)
!5778 = !DILocation(line: 64, column: 21, scope: !5743)
!5779 = !DILocation(line: 64, column: 24, scope: !5743)
!5780 = !DILocation(line: 64, column: 5, scope: !5743)
!5781 = !DILocation(line: 66, column: 14, scope: !5743)
!5782 = !DILocation(line: 66, column: 21, scope: !5743)
!5783 = !DILocation(line: 66, column: 26, scope: !5743)
!5784 = !DILocation(line: 66, column: 5, scope: !5743)
!5785 = !DILocation(line: 67, column: 14, scope: !5743)
!5786 = !DILocation(line: 67, column: 21, scope: !5743)
!5787 = !DILocation(line: 67, column: 26, scope: !5743)
!5788 = !DILocation(line: 67, column: 5, scope: !5743)
!5789 = !DILocation(line: 68, column: 14, scope: !5743)
!5790 = !DILocation(line: 68, column: 21, scope: !5743)
!5791 = !DILocation(line: 68, column: 26, scope: !5743)
!5792 = !DILocation(line: 68, column: 5, scope: !5743)
!5793 = !DILocation(line: 69, column: 14, scope: !5743)
!5794 = !DILocation(line: 69, column: 21, scope: !5743)
!5795 = !DILocation(line: 69, column: 26, scope: !5743)
!5796 = !DILocation(line: 69, column: 5, scope: !5743)
!5797 = !DILocation(line: 70, column: 14, scope: !5743)
!5798 = !DILocation(line: 70, column: 5, scope: !5743)
!5799 = !DILocation(line: 71, column: 14, scope: !5743)
!5800 = !DILocation(line: 71, column: 5, scope: !5743)
!5801 = !DILocation(line: 73, column: 14, scope: !5743)
!5802 = !DILocation(line: 73, column: 5, scope: !5743)
!5803 = !DILocation(line: 74, column: 14, scope: !5743)
!5804 = !DILocation(line: 74, column: 5, scope: !5743)
!5805 = !DILocation(line: 75, column: 14, scope: !5743)
!5806 = !DILocation(line: 75, column: 5, scope: !5743)
!5807 = !DILocation(line: 77, column: 12, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5743, file: !1035, line: 77, column: 5)
!5809 = !DILocation(line: 77, column: 10, scope: !5808)
!5810 = !DILocation(line: 77, column: 17, scope: !5811)
!5811 = !DILexicalBlockFile(scope: !5812, file: !1035, discriminator: 1)
!5812 = distinct !DILexicalBlock(scope: !5808, file: !1035, line: 77, column: 5)
!5813 = !DILocation(line: 77, column: 19, scope: !5811)
!5814 = !DILocation(line: 77, column: 5, scope: !5811)
!5815 = !DILocation(line: 78, column: 16, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !1035, line: 78, column: 9)
!5817 = distinct !DILexicalBlock(scope: !5812, file: !1035, line: 77, column: 29)
!5818 = !DILocation(line: 78, column: 14, scope: !5816)
!5819 = !DILocation(line: 78, column: 21, scope: !5820)
!5820 = !DILexicalBlockFile(scope: !5821, file: !1035, discriminator: 1)
!5821 = distinct !DILexicalBlock(scope: !5816, file: !1035, line: 78, column: 9)
!5822 = !DILocation(line: 78, column: 38, scope: !5820)
!5823 = !DILocation(line: 78, column: 25, scope: !5820)
!5824 = !DILocation(line: 78, column: 30, scope: !5820)
!5825 = !DILocation(line: 78, column: 23, scope: !5820)
!5826 = !DILocation(line: 78, column: 9, scope: !5820)
!5827 = !DILocation(line: 79, column: 17, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !1035, line: 79, column: 17)
!5829 = distinct !DILexicalBlock(scope: !5821, file: !1035, line: 78, column: 47)
!5830 = !DILocation(line: 79, column: 19, scope: !5828)
!5831 = !DILocation(line: 79, column: 17, scope: !5829)
!5832 = !DILocation(line: 80, column: 26, scope: !5828)
!5833 = !DILocation(line: 80, column: 49, scope: !5828)
!5834 = !DILocation(line: 80, column: 33, scope: !5828)
!5835 = !DILocation(line: 80, column: 46, scope: !5828)
!5836 = !DILocation(line: 80, column: 38, scope: !5828)
!5837 = !DILocation(line: 80, column: 17, scope: !5828)
!5838 = !DILocation(line: 81, column: 22, scope: !5829)
!5839 = !DILocation(line: 81, column: 43, scope: !5829)
!5840 = !DILocation(line: 81, column: 29, scope: !5829)
!5841 = !DILocation(line: 81, column: 40, scope: !5829)
!5842 = !DILocation(line: 81, column: 34, scope: !5829)
!5843 = !DILocation(line: 81, column: 13, scope: !5829)
!5844 = !DILocation(line: 82, column: 9, scope: !5829)
!5845 = !DILocation(line: 78, column: 43, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !5821, file: !1035, discriminator: 2)
!5847 = !DILocation(line: 78, column: 9, scope: !5846)
!5848 = distinct !{!5848, !5849}
!5849 = !DILocation(line: 78, column: 9, scope: !5817)
!5850 = !DILocation(line: 83, column: 5, scope: !5817)
!5851 = !DILocation(line: 77, column: 25, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !5812, file: !1035, discriminator: 2)
!5853 = !DILocation(line: 77, column: 5, scope: !5852)
!5854 = distinct !{!5854, !5855}
!5855 = !DILocation(line: 77, column: 5, scope: !5743)
!5856 = !DILocation(line: 85, column: 27, scope: !5743)
!5857 = !DILocation(line: 85, column: 5, scope: !5743)
!5858 = !DILocation(line: 86, column: 14, scope: !5743)
!5859 = !DILocation(line: 86, column: 28, scope: !5743)
!5860 = !DILocation(line: 86, column: 21, scope: !5743)
!5861 = !DILocation(line: 86, column: 5, scope: !5862)
!5862 = !DILexicalBlockFile(scope: !5743, file: !1035, discriminator: 1)
!5863 = !DILocation(line: 87, column: 23, scope: !5743)
!5864 = !DILocation(line: 87, column: 27, scope: !5743)
!5865 = !DILocation(line: 87, column: 5, scope: !5743)
!5866 = !DILocation(line: 88, column: 1, scope: !5743)
!5867 = distinct !DISubprogram(name: "flush_put_bits", scope: !2062, file: !2062, line: 101, type: !5868, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5868 = !DISubroutineType(types: !5869)
!5869 = !{null, !2789}
!5870 = !DILocalVariable(name: "s", arg: 1, scope: !5867, file: !2062, line: 101, type: !2789)
!5871 = !DILocation(line: 101, column: 50, scope: !5867)
!5872 = !DILocation(line: 104, column: 9, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5867, file: !2062, line: 104, column: 9)
!5874 = !DILocation(line: 104, column: 12, scope: !5873)
!5875 = !DILocation(line: 104, column: 21, scope: !5873)
!5876 = !DILocation(line: 104, column: 9, scope: !5867)
!5877 = !DILocation(line: 105, column: 24, scope: !5873)
!5878 = !DILocation(line: 105, column: 27, scope: !5873)
!5879 = !DILocation(line: 105, column: 9, scope: !5873)
!5880 = !DILocation(line: 105, column: 12, scope: !5873)
!5881 = !DILocation(line: 105, column: 20, scope: !5873)
!5882 = !DILocation(line: 107, column: 5, scope: !5867)
!5883 = !DILocation(line: 107, column: 12, scope: !5884)
!5884 = !DILexicalBlockFile(scope: !5867, file: !2062, discriminator: 1)
!5885 = !DILocation(line: 107, column: 15, scope: !5884)
!5886 = !DILocation(line: 107, column: 24, scope: !5884)
!5887 = !DILocation(line: 107, column: 5, scope: !5884)
!5888 = !DILocation(line: 108, column: 9, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5867, file: !2062, line: 107, column: 30)
!5890 = distinct !{!5890, !5888}
!5891 = !DILocation(line: 108, column: 20, scope: !5892)
!5892 = !DILexicalBlockFile(scope: !5893, file: !2062, discriminator: 1)
!5893 = distinct !DILexicalBlock(scope: !5894, file: !2062, line: 108, column: 18)
!5894 = distinct !DILexicalBlock(scope: !5889, file: !2062, line: 108, column: 12)
!5895 = !DILocation(line: 108, column: 23, scope: !5892)
!5896 = !DILocation(line: 108, column: 33, scope: !5892)
!5897 = !DILocation(line: 108, column: 36, scope: !5892)
!5898 = !DILocation(line: 108, column: 31, scope: !5892)
!5899 = !DILocation(line: 108, column: 18, scope: !5892)
!5900 = !DILocation(line: 108, column: 48, scope: !5901)
!5901 = !DILexicalBlockFile(scope: !5902, file: !2062, discriminator: 2)
!5902 = distinct !DILexicalBlock(scope: !5893, file: !2062, line: 108, column: 46)
!5903 = !DILocation(line: 108, column: 105, scope: !5904)
!5904 = !DILexicalBlockFile(scope: !5901, file: !2062, discriminator: 4)
!5905 = !DILocation(line: 108, column: 105, scope: !5901)
!5906 = !DILocation(line: 108, column: 116, scope: !5907)
!5907 = !DILexicalBlockFile(scope: !5894, file: !2062, discriminator: 3)
!5908 = !DILocation(line: 113, column: 25, scope: !5889)
!5909 = !DILocation(line: 113, column: 28, scope: !5889)
!5910 = !DILocation(line: 113, column: 36, scope: !5889)
!5911 = !DILocation(line: 113, column: 10, scope: !5889)
!5912 = !DILocation(line: 113, column: 13, scope: !5889)
!5913 = !DILocation(line: 113, column: 20, scope: !5889)
!5914 = !DILocation(line: 113, column: 23, scope: !5889)
!5915 = !DILocation(line: 114, column: 9, scope: !5889)
!5916 = !DILocation(line: 114, column: 12, scope: !5889)
!5917 = !DILocation(line: 114, column: 20, scope: !5889)
!5918 = !DILocation(line: 116, column: 9, scope: !5889)
!5919 = !DILocation(line: 116, column: 12, scope: !5889)
!5920 = !DILocation(line: 116, column: 21, scope: !5889)
!5921 = !DILocation(line: 107, column: 5, scope: !5922)
!5922 = !DILexicalBlockFile(scope: !5867, file: !2062, discriminator: 2)
!5923 = distinct !{!5923, !5882}
!5924 = !DILocation(line: 118, column: 5, scope: !5867)
!5925 = !DILocation(line: 118, column: 8, scope: !5867)
!5926 = !DILocation(line: 118, column: 17, scope: !5867)
!5927 = !DILocation(line: 119, column: 5, scope: !5867)
!5928 = !DILocation(line: 119, column: 8, scope: !5867)
!5929 = !DILocation(line: 119, column: 16, scope: !5867)
!5930 = !DILocation(line: 120, column: 1, scope: !5867)
!5931 = distinct !DISubprogram(name: "put_bits_count", scope: !2062, file: !2062, line: 85, type: !5932, isLocal: true, isDefinition: true, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!5932 = !DISubroutineType(types: !5933)
!5933 = !{!1023, !2789}
!5934 = !DILocalVariable(name: "s", arg: 1, scope: !5931, file: !2062, line: 85, type: !2789)
!5935 = !DILocation(line: 85, column: 49, scope: !5931)
!5936 = !DILocation(line: 87, column: 13, scope: !5931)
!5937 = !DILocation(line: 87, column: 16, scope: !5931)
!5938 = !DILocation(line: 87, column: 26, scope: !5931)
!5939 = !DILocation(line: 87, column: 29, scope: !5931)
!5940 = !DILocation(line: 87, column: 24, scope: !5931)
!5941 = !DILocation(line: 87, column: 34, scope: !5931)
!5942 = !DILocation(line: 87, column: 38, scope: !5931)
!5943 = !DILocation(line: 87, column: 45, scope: !5931)
!5944 = !DILocation(line: 87, column: 48, scope: !5931)
!5945 = !DILocation(line: 87, column: 43, scope: !5931)
!5946 = !DILocation(line: 87, column: 12, scope: !5931)
!5947 = !DILocation(line: 87, column: 5, scope: !5931)
!5948 = !DILocalVariable(name: "i", scope: !1847, file: !1848, line: 47, type: !1023)
!5949 = !DILocation(line: 47, column: 9, scope: !1847)
!5950 = !DILocalVariable(name: "t1", scope: !1847, file: !1848, line: 68, type: !1032)
!5951 = !DILocation(line: 68, column: 11, scope: !1847)
!5952 = !DILocalVariable(name: "t2", scope: !1847, file: !1848, line: 69, type: !1032)
!5953 = !DILocation(line: 69, column: 11, scope: !1847)
!5954 = !DILocalVariable(name: "t1_inc_cur", scope: !1847, file: !1848, line: 70, type: !1023)
!5955 = !DILocation(line: 70, column: 9, scope: !1847)
!5956 = !DILocalVariable(name: "t2_inc_cur", scope: !1847, file: !1848, line: 70, type: !1023)
!5957 = !DILocation(line: 70, column: 21, scope: !1847)
!5958 = !DILocalVariable(name: "t1_inc_prev", scope: !1847, file: !1848, line: 71, type: !1023)
!5959 = !DILocation(line: 71, column: 9, scope: !1847)
!5960 = !DILocalVariable(name: "t2_inc_prev", scope: !1847, file: !1848, line: 72, type: !1023)
!5961 = !DILocation(line: 72, column: 9, scope: !1847)
!5962 = !DILocation(line: 74, column: 12, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !1847, file: !1848, line: 74, column: 5)
!5964 = !DILocation(line: 74, column: 10, scope: !5963)
!5965 = !DILocation(line: 74, column: 17, scope: !5966)
!5966 = !DILexicalBlockFile(scope: !5967, file: !1848, discriminator: 1)
!5967 = distinct !DILexicalBlock(scope: !5963, file: !1848, line: 74, column: 5)
!5968 = !DILocation(line: 74, column: 19, scope: !5966)
!5969 = !DILocation(line: 74, column: 5, scope: !5966)
!5970 = !DILocation(line: 75, column: 27, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5967, file: !1848, line: 74, column: 31)
!5972 = !DILocation(line: 75, column: 29, scope: !5971)
!5973 = !DILocation(line: 75, column: 24, scope: !5971)
!5974 = !DILocation(line: 75, column: 20, scope: !5971)
!5975 = !DILocation(line: 76, column: 29, scope: !5971)
!5976 = !DILocation(line: 76, column: 28, scope: !5971)
!5977 = !DILocation(line: 76, column: 25, scope: !5971)
!5978 = !DILocation(line: 76, column: 32, scope: !5971)
!5979 = !DILocation(line: 76, column: 20, scope: !5971)
!5980 = !DILocation(line: 77, column: 13, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5971, file: !1848, line: 77, column: 13)
!5982 = !DILocation(line: 77, column: 26, scope: !5981)
!5983 = !DILocation(line: 77, column: 24, scope: !5981)
!5984 = !DILocation(line: 77, column: 13, scope: !5971)
!5985 = !DILocation(line: 78, column: 16, scope: !5981)
!5986 = !DILocation(line: 78, column: 13, scope: !5981)
!5987 = !DILocation(line: 79, column: 13, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5971, file: !1848, line: 79, column: 13)
!5989 = !DILocation(line: 79, column: 26, scope: !5988)
!5990 = !DILocation(line: 79, column: 24, scope: !5988)
!5991 = !DILocation(line: 79, column: 13, scope: !5971)
!5992 = !DILocation(line: 80, column: 16, scope: !5988)
!5993 = !DILocation(line: 80, column: 13, scope: !5988)
!5994 = !DILocation(line: 84, column: 32, scope: !5971)
!5995 = !DILocation(line: 84, column: 46, scope: !5971)
!5996 = !DILocation(line: 84, column: 37, scope: !5971)
!5997 = !DILocation(line: 84, column: 35, scope: !5971)
!5998 = !DILocation(line: 84, column: 27, scope: !5971)
!5999 = !DILocation(line: 84, column: 9, scope: !5971)
!6000 = !DILocation(line: 84, column: 30, scope: !5971)
!6001 = !DILocation(line: 85, column: 33, scope: !5971)
!6002 = !DILocation(line: 85, column: 47, scope: !5971)
!6003 = !DILocation(line: 85, column: 38, scope: !5971)
!6004 = !DILocation(line: 85, column: 36, scope: !5971)
!6005 = !DILocation(line: 85, column: 28, scope: !5971)
!6006 = !DILocation(line: 85, column: 9, scope: !5971)
!6007 = !DILocation(line: 85, column: 31, scope: !5971)
!6008 = !DILocation(line: 86, column: 23, scope: !5971)
!6009 = !DILocation(line: 86, column: 21, scope: !5971)
!6010 = !DILocation(line: 87, column: 23, scope: !5971)
!6011 = !DILocation(line: 87, column: 21, scope: !5971)
!6012 = !DILocation(line: 88, column: 5, scope: !5971)
!6013 = !DILocation(line: 74, column: 27, scope: !6014)
!6014 = !DILexicalBlockFile(scope: !5967, file: !1848, discriminator: 2)
!6015 = !DILocation(line: 74, column: 5, scope: !6014)
!6016 = distinct !{!6016, !6017}
!6017 = !DILocation(line: 74, column: 5, scope: !1847)
!6018 = !DILocation(line: 89, column: 1, scope: !1847)
!6019 = distinct !DISubprogram(name: "copy_input_samples", scope: !1035, file: !1035, line: 534, type: !6020, isLocal: true, isDefinition: true, scopeLine: 535, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!6020 = !DISubroutineType(types: !6021)
!6021 = !{null, !2903, !1452}
!6022 = !DILocalVariable(name: "s", arg: 1, scope: !6019, file: !1035, line: 534, type: !2903)
!6023 = !DILocation(line: 534, column: 47, scope: !6019)
!6024 = !DILocalVariable(name: "frame", arg: 2, scope: !6019, file: !1035, line: 534, type: !1452)
!6025 = !DILocation(line: 534, column: 65, scope: !6019)
!6026 = !DILocalVariable(name: "ch", scope: !6019, file: !1035, line: 536, type: !1023)
!6027 = !DILocation(line: 536, column: 9, scope: !6019)
!6028 = !DILocalVariable(name: "end", scope: !6019, file: !1035, line: 537, type: !1023)
!6029 = !DILocation(line: 537, column: 9, scope: !6019)
!6030 = !DILocation(line: 537, column: 23, scope: !6019)
!6031 = !DILocation(line: 537, column: 31, scope: !6032)
!6032 = !DILexicalBlockFile(scope: !6019, file: !1035, discriminator: 1)
!6033 = !DILocation(line: 537, column: 38, scope: !6032)
!6034 = !DILocation(line: 537, column: 23, scope: !6032)
!6035 = !DILocation(line: 537, column: 23, scope: !6036)
!6036 = !DILexicalBlockFile(scope: !6019, file: !1035, discriminator: 2)
!6037 = !DILocation(line: 537, column: 23, scope: !6038)
!6038 = !DILexicalBlockFile(scope: !6019, file: !1035, discriminator: 3)
!6039 = !DILocation(line: 537, column: 20, scope: !6038)
!6040 = !DILocation(line: 537, column: 9, scope: !6038)
!6041 = !DILocalVariable(name: "channel_map", scope: !6019, file: !1035, line: 538, type: !1604)
!6042 = !DILocation(line: 538, column: 20, scope: !6019)
!6043 = !DILocation(line: 538, column: 34, scope: !6019)
!6044 = !DILocation(line: 538, column: 37, scope: !6019)
!6045 = !DILocation(line: 541, column: 13, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6019, file: !1035, line: 541, column: 5)
!6047 = !DILocation(line: 541, column: 10, scope: !6046)
!6048 = !DILocation(line: 541, column: 18, scope: !6049)
!6049 = !DILexicalBlockFile(scope: !6050, file: !1035, discriminator: 1)
!6050 = distinct !DILexicalBlock(scope: !6046, file: !1035, line: 541, column: 5)
!6051 = !DILocation(line: 541, column: 23, scope: !6049)
!6052 = !DILocation(line: 541, column: 26, scope: !6049)
!6053 = !DILocation(line: 541, column: 21, scope: !6049)
!6054 = !DILocation(line: 541, column: 5, scope: !6049)
!6055 = !DILocation(line: 543, column: 35, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6050, file: !1035, line: 541, column: 42)
!6057 = !DILocation(line: 543, column: 17, scope: !6056)
!6058 = !DILocation(line: 543, column: 20, scope: !6056)
!6059 = !DILocation(line: 543, column: 9, scope: !6056)
!6060 = !DILocation(line: 543, column: 65, scope: !6056)
!6061 = !DILocation(line: 543, column: 47, scope: !6056)
!6062 = !DILocation(line: 543, column: 50, scope: !6056)
!6063 = !DILocation(line: 546, column: 13, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6056, file: !1035, line: 546, column: 13)
!6065 = !DILocation(line: 546, column: 13, scope: !6056)
!6066 = !DILocation(line: 547, column: 39, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6064, file: !1035, line: 546, column: 20)
!6068 = !DILocation(line: 547, column: 21, scope: !6067)
!6069 = !DILocation(line: 547, column: 24, scope: !6067)
!6070 = !DILocation(line: 547, column: 13, scope: !6067)
!6071 = !DILocation(line: 548, column: 53, scope: !6067)
!6072 = !DILocation(line: 548, column: 41, scope: !6067)
!6073 = !DILocation(line: 548, column: 20, scope: !6067)
!6074 = !DILocation(line: 548, column: 27, scope: !6067)
!6075 = !DILocation(line: 549, column: 20, scope: !6067)
!6076 = !DILocation(line: 549, column: 27, scope: !6067)
!6077 = !DILocation(line: 549, column: 38, scope: !6067)
!6078 = !DILocation(line: 550, column: 9, scope: !6067)
!6079 = !DILocation(line: 551, column: 39, scope: !6056)
!6080 = !DILocation(line: 551, column: 17, scope: !6056)
!6081 = !DILocation(line: 551, column: 35, scope: !6056)
!6082 = !DILocation(line: 551, column: 20, scope: !6056)
!6083 = !DILocation(line: 551, column: 9, scope: !6056)
!6084 = !DILocation(line: 552, column: 24, scope: !6056)
!6085 = !DILocation(line: 552, column: 22, scope: !6056)
!6086 = !DILocation(line: 552, column: 16, scope: !6056)
!6087 = !DILocation(line: 552, column: 29, scope: !6056)
!6088 = !DILocation(line: 553, column: 5, scope: !6056)
!6089 = !DILocation(line: 541, column: 38, scope: !6090)
!6090 = !DILexicalBlockFile(scope: !6050, file: !1035, discriminator: 2)
!6091 = !DILocation(line: 541, column: 5, scope: !6090)
!6092 = distinct !{!6092, !6093}
!6093 = !DILocation(line: 541, column: 5, scope: !6019)
!6094 = !DILocation(line: 554, column: 1, scope: !6019)
!6095 = distinct !DISubprogram(name: "apply_window_and_mdct", scope: !1035, file: !1035, line: 200, type: !6096, isLocal: true, isDefinition: true, scopeLine: 202, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!6096 = !DISubroutineType(types: !6097)
!6097 = !{null, !2903, !1903, !1869}
!6098 = !DILocalVariable(name: "s", arg: 1, scope: !6095, file: !1035, line: 200, type: !2903)
!6099 = !DILocation(line: 200, column: 50, scope: !6095)
!6100 = !DILocalVariable(name: "sce", arg: 2, scope: !6095, file: !1035, line: 200, type: !1903)
!6101 = !DILocation(line: 200, column: 75, scope: !6095)
!6102 = !DILocalVariable(name: "audio", arg: 3, scope: !6095, file: !1035, line: 201, type: !1869)
!6103 = !DILocation(line: 201, column: 42, scope: !6095)
!6104 = !DILocalVariable(name: "i", scope: !6095, file: !1035, line: 203, type: !1023)
!6105 = !DILocation(line: 203, column: 9, scope: !6095)
!6106 = !DILocalVariable(name: "output", scope: !6095, file: !1035, line: 204, type: !1870)
!6107 = !DILocation(line: 204, column: 18, scope: !6095)
!6108 = !DILocation(line: 204, column: 27, scope: !6095)
!6109 = !DILocation(line: 204, column: 32, scope: !6095)
!6110 = !DILocation(line: 206, column: 18, scope: !6095)
!6111 = !DILocation(line: 206, column: 23, scope: !6095)
!6112 = !DILocation(line: 206, column: 27, scope: !6095)
!6113 = !DILocation(line: 206, column: 5, scope: !6095)
!6114 = !DILocation(line: 206, column: 47, scope: !6095)
!6115 = !DILocation(line: 206, column: 50, scope: !6095)
!6116 = !DILocation(line: 206, column: 56, scope: !6095)
!6117 = !DILocation(line: 206, column: 61, scope: !6095)
!6118 = !DILocation(line: 208, column: 9, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6095, file: !1035, line: 208, column: 9)
!6120 = !DILocation(line: 208, column: 14, scope: !6119)
!6121 = !DILocation(line: 208, column: 18, scope: !6119)
!6122 = !DILocation(line: 208, column: 37, scope: !6119)
!6123 = !DILocation(line: 208, column: 9, scope: !6095)
!6124 = !DILocation(line: 209, column: 9, scope: !6119)
!6125 = !DILocation(line: 209, column: 12, scope: !6119)
!6126 = !DILocation(line: 209, column: 21, scope: !6119)
!6127 = !DILocation(line: 209, column: 32, scope: !6119)
!6128 = !DILocation(line: 209, column: 35, scope: !6119)
!6129 = !DILocation(line: 209, column: 45, scope: !6119)
!6130 = !DILocation(line: 209, column: 50, scope: !6119)
!6131 = !DILocation(line: 209, column: 58, scope: !6119)
!6132 = !DILocation(line: 211, column: 16, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6119, file: !1035, line: 211, column: 9)
!6134 = !DILocation(line: 211, column: 14, scope: !6133)
!6135 = !DILocation(line: 211, column: 21, scope: !6136)
!6136 = !DILexicalBlockFile(scope: !6137, file: !1035, discriminator: 1)
!6137 = distinct !DILexicalBlock(scope: !6133, file: !1035, line: 211, column: 9)
!6138 = !DILocation(line: 211, column: 23, scope: !6136)
!6139 = !DILocation(line: 211, column: 9, scope: !6136)
!6140 = !DILocation(line: 212, column: 13, scope: !6137)
!6141 = !DILocation(line: 212, column: 16, scope: !6137)
!6142 = !DILocation(line: 212, column: 24, scope: !6137)
!6143 = !DILocation(line: 212, column: 35, scope: !6137)
!6144 = !DILocation(line: 212, column: 38, scope: !6137)
!6145 = !DILocation(line: 212, column: 60, scope: !6137)
!6146 = !DILocation(line: 212, column: 48, scope: !6137)
!6147 = !DILocation(line: 212, column: 53, scope: !6137)
!6148 = !DILocation(line: 212, column: 64, scope: !6137)
!6149 = !DILocation(line: 212, column: 73, scope: !6137)
!6150 = !DILocation(line: 212, column: 74, scope: !6137)
!6151 = !DILocation(line: 212, column: 71, scope: !6137)
!6152 = !DILocation(line: 211, column: 33, scope: !6153)
!6153 = !DILexicalBlockFile(scope: !6137, file: !1035, discriminator: 2)
!6154 = !DILocation(line: 211, column: 9, scope: !6153)
!6155 = distinct !{!6155, !6156}
!6156 = !DILocation(line: 211, column: 9, scope: !6119)
!6157 = !DILocation(line: 213, column: 12, scope: !6095)
!6158 = !DILocation(line: 213, column: 5, scope: !6095)
!6159 = !DILocation(line: 213, column: 19, scope: !6095)
!6160 = !DILocation(line: 213, column: 25, scope: !6095)
!6161 = !DILocation(line: 214, column: 12, scope: !6095)
!6162 = !DILocation(line: 214, column: 17, scope: !6095)
!6163 = !DILocation(line: 214, column: 5, scope: !6095)
!6164 = !DILocation(line: 214, column: 26, scope: !6095)
!6165 = !DILocation(line: 214, column: 31, scope: !6095)
!6166 = !DILocation(line: 215, column: 1, scope: !6095)
!6167 = distinct !DISubprogram(name: "avoid_clipping", scope: !1035, file: !1035, line: 467, type: !6168, isLocal: true, isDefinition: true, scopeLine: 468, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!6168 = !DISubroutineType(types: !6169)
!6169 = !{null, !2903, !1903}
!6170 = !DILocalVariable(name: "s", arg: 1, scope: !6167, file: !1035, line: 467, type: !2903)
!6171 = !DILocation(line: 467, column: 43, scope: !6167)
!6172 = !DILocalVariable(name: "sce", arg: 2, scope: !6167, file: !1035, line: 467, type: !1903)
!6173 = !DILocation(line: 467, column: 68, scope: !6167)
!6174 = !DILocalVariable(name: "start", scope: !6167, file: !1035, line: 469, type: !1023)
!6175 = !DILocation(line: 469, column: 9, scope: !6167)
!6176 = !DILocalVariable(name: "i", scope: !6167, file: !1035, line: 469, type: !1023)
!6177 = !DILocation(line: 469, column: 16, scope: !6167)
!6178 = !DILocalVariable(name: "j", scope: !6167, file: !1035, line: 469, type: !1023)
!6179 = !DILocation(line: 469, column: 19, scope: !6167)
!6180 = !DILocalVariable(name: "w", scope: !6167, file: !1035, line: 469, type: !1023)
!6181 = !DILocation(line: 469, column: 22, scope: !6167)
!6182 = !DILocation(line: 471, column: 9, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6167, file: !1035, line: 471, column: 9)
!6184 = !DILocation(line: 471, column: 14, scope: !6183)
!6185 = !DILocation(line: 471, column: 18, scope: !6183)
!6186 = !DILocation(line: 471, column: 40, scope: !6183)
!6187 = !DILocation(line: 471, column: 9, scope: !6167)
!6188 = !DILocation(line: 472, column: 16, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6190, file: !1035, line: 472, column: 9)
!6190 = distinct !DILexicalBlock(scope: !6183, file: !1035, line: 471, column: 48)
!6191 = !DILocation(line: 472, column: 14, scope: !6189)
!6192 = !DILocation(line: 472, column: 21, scope: !6193)
!6193 = !DILexicalBlockFile(scope: !6194, file: !1035, discriminator: 1)
!6194 = distinct !DILexicalBlock(scope: !6189, file: !1035, line: 472, column: 9)
!6195 = !DILocation(line: 472, column: 25, scope: !6193)
!6196 = !DILocation(line: 472, column: 30, scope: !6193)
!6197 = !DILocation(line: 472, column: 34, scope: !6193)
!6198 = !DILocation(line: 472, column: 23, scope: !6193)
!6199 = !DILocation(line: 472, column: 9, scope: !6193)
!6200 = !DILocation(line: 473, column: 19, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6194, file: !1035, line: 472, column: 52)
!6202 = !DILocation(line: 474, column: 20, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6201, file: !1035, line: 474, column: 13)
!6204 = !DILocation(line: 474, column: 18, scope: !6203)
!6205 = !DILocation(line: 474, column: 25, scope: !6206)
!6206 = !DILexicalBlockFile(scope: !6207, file: !1035, discriminator: 1)
!6207 = distinct !DILexicalBlock(scope: !6203, file: !1035, line: 474, column: 13)
!6208 = !DILocation(line: 474, column: 29, scope: !6206)
!6209 = !DILocation(line: 474, column: 34, scope: !6206)
!6210 = !DILocation(line: 474, column: 38, scope: !6206)
!6211 = !DILocation(line: 474, column: 27, scope: !6206)
!6212 = !DILocation(line: 474, column: 13, scope: !6206)
!6213 = !DILocalVariable(name: "swb_coeffs", scope: !6214, file: !1035, line: 475, type: !1869)
!6214 = distinct !DILexicalBlock(scope: !6207, file: !1035, line: 474, column: 52)
!6215 = !DILocation(line: 475, column: 24, scope: !6214)
!6216 = !DILocation(line: 475, column: 50, scope: !6214)
!6217 = !DILocation(line: 475, column: 58, scope: !6214)
!6218 = !DILocation(line: 475, column: 59, scope: !6214)
!6219 = !DILocation(line: 475, column: 56, scope: !6214)
!6220 = !DILocation(line: 475, column: 38, scope: !6214)
!6221 = !DILocation(line: 475, column: 43, scope: !6214)
!6222 = !DILocation(line: 476, column: 24, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6214, file: !1035, line: 476, column: 17)
!6224 = !DILocation(line: 476, column: 22, scope: !6223)
!6225 = !DILocation(line: 476, column: 29, scope: !6226)
!6226 = !DILexicalBlockFile(scope: !6227, file: !1035, discriminator: 1)
!6227 = distinct !DILexicalBlock(scope: !6223, file: !1035, line: 476, column: 17)
!6228 = !DILocation(line: 476, column: 52, scope: !6226)
!6229 = !DILocation(line: 476, column: 33, scope: !6226)
!6230 = !DILocation(line: 476, column: 38, scope: !6226)
!6231 = !DILocation(line: 476, column: 42, scope: !6226)
!6232 = !DILocation(line: 476, column: 31, scope: !6226)
!6233 = !DILocation(line: 476, column: 17, scope: !6226)
!6234 = !DILocation(line: 477, column: 38, scope: !6227)
!6235 = !DILocation(line: 477, column: 43, scope: !6227)
!6236 = !DILocation(line: 477, column: 47, scope: !6227)
!6237 = !DILocation(line: 477, column: 32, scope: !6227)
!6238 = !DILocation(line: 477, column: 21, scope: !6227)
!6239 = !DILocation(line: 477, column: 35, scope: !6227)
!6240 = !DILocation(line: 476, column: 57, scope: !6241)
!6241 = !DILexicalBlockFile(scope: !6227, file: !1035, discriminator: 2)
!6242 = !DILocation(line: 476, column: 17, scope: !6241)
!6243 = distinct !{!6243, !6244}
!6244 = !DILocation(line: 476, column: 17, scope: !6214)
!6245 = !DILocation(line: 478, column: 45, scope: !6214)
!6246 = !DILocation(line: 478, column: 26, scope: !6214)
!6247 = !DILocation(line: 478, column: 31, scope: !6214)
!6248 = !DILocation(line: 478, column: 35, scope: !6214)
!6249 = !DILocation(line: 478, column: 23, scope: !6214)
!6250 = !DILocation(line: 479, column: 13, scope: !6214)
!6251 = !DILocation(line: 474, column: 48, scope: !6252)
!6252 = !DILexicalBlockFile(scope: !6207, file: !1035, discriminator: 2)
!6253 = !DILocation(line: 474, column: 13, scope: !6252)
!6254 = distinct !{!6254, !6255}
!6255 = !DILocation(line: 474, column: 13, scope: !6201)
!6256 = !DILocation(line: 480, column: 9, scope: !6201)
!6257 = !DILocation(line: 472, column: 48, scope: !6258)
!6258 = !DILexicalBlockFile(scope: !6194, file: !1035, discriminator: 2)
!6259 = !DILocation(line: 472, column: 9, scope: !6258)
!6260 = distinct !{!6260, !6261}
!6261 = !DILocation(line: 472, column: 9, scope: !6190)
!6262 = !DILocation(line: 481, column: 5, scope: !6190)
!6263 = !DILocation(line: 482, column: 1, scope: !6167)
!6264 = distinct !DISubprogram(name: "put_bitstream_info", scope: !1035, file: !1035, line: 513, type: !6265, isLocal: true, isDefinition: true, scopeLine: 514, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!6265 = !DISubroutineType(types: !6266)
!6266 = !{null, !2903, !1040}
!6267 = !DILocalVariable(name: "s", arg: 1, scope: !6264, file: !1035, line: 513, type: !2903)
!6268 = !DILocation(line: 513, column: 47, scope: !6264)
!6269 = !DILocalVariable(name: "name", arg: 2, scope: !6264, file: !1035, line: 513, type: !1040)
!6270 = !DILocation(line: 513, column: 62, scope: !6264)
!6271 = !DILocalVariable(name: "i", scope: !6264, file: !1035, line: 515, type: !1023)
!6272 = !DILocation(line: 515, column: 9, scope: !6264)
!6273 = !DILocalVariable(name: "namelen", scope: !6264, file: !1035, line: 515, type: !1023)
!6274 = !DILocation(line: 515, column: 12, scope: !6264)
!6275 = !DILocalVariable(name: "padbits", scope: !6264, file: !1035, line: 515, type: !1023)
!6276 = !DILocation(line: 515, column: 21, scope: !6264)
!6277 = !DILocation(line: 517, column: 22, scope: !6264)
!6278 = !DILocation(line: 517, column: 15, scope: !6264)
!6279 = !DILocation(line: 517, column: 28, scope: !6264)
!6280 = !DILocation(line: 517, column: 13, scope: !6264)
!6281 = !DILocation(line: 518, column: 15, scope: !6264)
!6282 = !DILocation(line: 518, column: 18, scope: !6264)
!6283 = !DILocation(line: 518, column: 5, scope: !6264)
!6284 = !DILocation(line: 519, column: 15, scope: !6264)
!6285 = !DILocation(line: 519, column: 18, scope: !6264)
!6286 = !DILocation(line: 519, column: 27, scope: !6264)
!6287 = !DILocation(line: 519, column: 36, scope: !6264)
!6288 = !DILocation(line: 519, column: 26, scope: !6264)
!6289 = !DILocation(line: 519, column: 26, scope: !6290)
!6290 = !DILexicalBlockFile(scope: !6264, file: !1035, discriminator: 1)
!6291 = !DILocation(line: 519, column: 53, scope: !6292)
!6292 = !DILexicalBlockFile(scope: !6264, file: !1035, discriminator: 2)
!6293 = !DILocation(line: 519, column: 26, scope: !6292)
!6294 = !DILocation(line: 519, column: 26, scope: !6295)
!6295 = !DILexicalBlockFile(scope: !6264, file: !1035, discriminator: 3)
!6296 = !DILocation(line: 519, column: 5, scope: !6295)
!6297 = !DILocation(line: 520, column: 9, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6264, file: !1035, line: 520, column: 9)
!6299 = !DILocation(line: 520, column: 17, scope: !6298)
!6300 = !DILocation(line: 520, column: 9, scope: !6264)
!6301 = !DILocation(line: 521, column: 19, scope: !6298)
!6302 = !DILocation(line: 521, column: 22, scope: !6298)
!6303 = !DILocation(line: 521, column: 29, scope: !6298)
!6304 = !DILocation(line: 521, column: 37, scope: !6298)
!6305 = !DILocation(line: 521, column: 9, scope: !6298)
!6306 = !DILocation(line: 522, column: 15, scope: !6264)
!6307 = !DILocation(line: 522, column: 18, scope: !6264)
!6308 = !DILocation(line: 522, column: 5, scope: !6264)
!6309 = !DILocation(line: 523, column: 32, scope: !6264)
!6310 = !DILocation(line: 523, column: 35, scope: !6264)
!6311 = !DILocation(line: 523, column: 16, scope: !6264)
!6312 = !DILocation(line: 523, column: 15, scope: !6264)
!6313 = !DILocation(line: 523, column: 39, scope: !6264)
!6314 = !DILocation(line: 523, column: 13, scope: !6264)
!6315 = !DILocation(line: 524, column: 28, scope: !6264)
!6316 = !DILocation(line: 524, column: 31, scope: !6264)
!6317 = !DILocation(line: 524, column: 5, scope: !6264)
!6318 = !DILocation(line: 525, column: 12, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6264, file: !1035, line: 525, column: 5)
!6320 = !DILocation(line: 525, column: 10, scope: !6319)
!6321 = !DILocation(line: 525, column: 17, scope: !6322)
!6322 = !DILexicalBlockFile(scope: !6323, file: !1035, discriminator: 1)
!6323 = distinct !DILexicalBlock(scope: !6319, file: !1035, line: 525, column: 5)
!6324 = !DILocation(line: 525, column: 21, scope: !6322)
!6325 = !DILocation(line: 525, column: 29, scope: !6322)
!6326 = !DILocation(line: 525, column: 19, scope: !6322)
!6327 = !DILocation(line: 525, column: 5, scope: !6322)
!6328 = !DILocation(line: 526, column: 19, scope: !6323)
!6329 = !DILocation(line: 526, column: 22, scope: !6323)
!6330 = !DILocation(line: 526, column: 34, scope: !6323)
!6331 = !DILocation(line: 526, column: 29, scope: !6323)
!6332 = !DILocation(line: 526, column: 9, scope: !6323)
!6333 = !DILocation(line: 525, column: 35, scope: !6334)
!6334 = !DILexicalBlockFile(scope: !6323, file: !1035, discriminator: 2)
!6335 = !DILocation(line: 525, column: 5, scope: !6334)
!6336 = distinct !{!6336, !6337}
!6337 = !DILocation(line: 525, column: 5, scope: !6264)
!6338 = !DILocation(line: 527, column: 15, scope: !6264)
!6339 = !DILocation(line: 527, column: 18, scope: !6264)
!6340 = !DILocation(line: 527, column: 27, scope: !6264)
!6341 = !DILocation(line: 527, column: 25, scope: !6264)
!6342 = !DILocation(line: 527, column: 5, scope: !6264)
!6343 = !DILocation(line: 528, column: 1, scope: !6264)
!6344 = distinct !DISubprogram(name: "apply_intensity_stereo", scope: !1035, file: !1035, line: 306, type: !6345, isLocal: true, isDefinition: true, scopeLine: 307, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!6345 = !DISubroutineType(types: !6346)
!6346 = !{null, !2175}
!6347 = !DILocalVariable(name: "cpe", arg: 1, scope: !6344, file: !1035, line: 306, type: !2175)
!6348 = !DILocation(line: 306, column: 52, scope: !6344)
!6349 = !DILocalVariable(name: "w", scope: !6344, file: !1035, line: 308, type: !1023)
!6350 = !DILocation(line: 308, column: 9, scope: !6344)
!6351 = !DILocalVariable(name: "w2", scope: !6344, file: !1035, line: 308, type: !1023)
!6352 = !DILocation(line: 308, column: 12, scope: !6344)
!6353 = !DILocalVariable(name: "g", scope: !6344, file: !1035, line: 308, type: !1023)
!6354 = !DILocation(line: 308, column: 16, scope: !6344)
!6355 = !DILocalVariable(name: "i", scope: !6344, file: !1035, line: 308, type: !1023)
!6356 = !DILocation(line: 308, column: 19, scope: !6344)
!6357 = !DILocalVariable(name: "ics", scope: !6344, file: !1035, line: 309, type: !2651)
!6358 = !DILocation(line: 309, column: 30, scope: !6344)
!6359 = !DILocation(line: 309, column: 37, scope: !6344)
!6360 = !DILocation(line: 309, column: 42, scope: !6344)
!6361 = !DILocation(line: 309, column: 48, scope: !6344)
!6362 = !DILocation(line: 310, column: 10, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6344, file: !1035, line: 310, column: 9)
!6364 = !DILocation(line: 310, column: 15, scope: !6363)
!6365 = !DILocation(line: 310, column: 9, scope: !6344)
!6366 = !DILocation(line: 311, column: 9, scope: !6363)
!6367 = !DILocation(line: 312, column: 12, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6344, file: !1035, line: 312, column: 5)
!6369 = !DILocation(line: 312, column: 10, scope: !6368)
!6370 = !DILocation(line: 312, column: 17, scope: !6371)
!6371 = !DILexicalBlockFile(scope: !6372, file: !1035, discriminator: 1)
!6372 = distinct !DILexicalBlock(scope: !6368, file: !1035, line: 312, column: 5)
!6373 = !DILocation(line: 312, column: 21, scope: !6371)
!6374 = !DILocation(line: 312, column: 26, scope: !6371)
!6375 = !DILocation(line: 312, column: 19, scope: !6371)
!6376 = !DILocation(line: 312, column: 5, scope: !6371)
!6377 = !DILocation(line: 313, column: 17, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6379, file: !1035, line: 313, column: 9)
!6379 = distinct !DILexicalBlock(scope: !6372, file: !1035, line: 312, column: 63)
!6380 = !DILocation(line: 313, column: 14, scope: !6378)
!6381 = !DILocation(line: 313, column: 22, scope: !6382)
!6382 = !DILexicalBlockFile(scope: !6383, file: !1035, discriminator: 1)
!6383 = distinct !DILexicalBlock(scope: !6378, file: !1035, line: 313, column: 9)
!6384 = !DILocation(line: 313, column: 42, scope: !6382)
!6385 = !DILocation(line: 313, column: 27, scope: !6382)
!6386 = !DILocation(line: 313, column: 32, scope: !6382)
!6387 = !DILocation(line: 313, column: 25, scope: !6382)
!6388 = !DILocation(line: 313, column: 9, scope: !6382)
!6389 = !DILocalVariable(name: "start", scope: !6390, file: !1035, line: 314, type: !1023)
!6390 = distinct !DILexicalBlock(scope: !6383, file: !1035, line: 313, column: 52)
!6391 = !DILocation(line: 314, column: 17, scope: !6390)
!6392 = !DILocation(line: 314, column: 26, scope: !6390)
!6393 = !DILocation(line: 314, column: 28, scope: !6390)
!6394 = !DILocation(line: 314, column: 27, scope: !6390)
!6395 = !DILocation(line: 314, column: 32, scope: !6390)
!6396 = !DILocation(line: 315, column: 20, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6390, file: !1035, line: 315, column: 13)
!6398 = !DILocation(line: 315, column: 18, scope: !6397)
!6399 = !DILocation(line: 315, column: 25, scope: !6400)
!6400 = !DILexicalBlockFile(scope: !6401, file: !1035, discriminator: 1)
!6401 = distinct !DILexicalBlock(scope: !6397, file: !1035, line: 315, column: 13)
!6402 = !DILocation(line: 315, column: 29, scope: !6400)
!6403 = !DILocation(line: 315, column: 34, scope: !6400)
!6404 = !DILocation(line: 315, column: 27, scope: !6400)
!6405 = !DILocation(line: 315, column: 13, scope: !6400)
!6406 = !DILocalVariable(name: "p", scope: !6407, file: !1035, line: 316, type: !1023)
!6407 = distinct !DILexicalBlock(scope: !6401, file: !1035, line: 315, column: 48)
!6408 = !DILocation(line: 316, column: 21, scope: !6407)
!6409 = !DILocation(line: 316, column: 56, scope: !6407)
!6410 = !DILocation(line: 316, column: 57, scope: !6407)
!6411 = !DILocation(line: 316, column: 61, scope: !6407)
!6412 = !DILocation(line: 316, column: 60, scope: !6407)
!6413 = !DILocation(line: 316, column: 35, scope: !6407)
!6414 = !DILocation(line: 316, column: 40, scope: !6407)
!6415 = !DILocation(line: 316, column: 46, scope: !6407)
!6416 = !DILocation(line: 316, column: 64, scope: !6407)
!6417 = !DILocation(line: 316, column: 32, scope: !6407)
!6418 = !DILocation(line: 316, column: 28, scope: !6407)
!6419 = !DILocalVariable(name: "scale", scope: !6407, file: !1035, line: 317, type: !1032)
!6420 = !DILocation(line: 317, column: 23, scope: !6407)
!6421 = !DILocation(line: 317, column: 50, scope: !6407)
!6422 = !DILocation(line: 317, column: 51, scope: !6407)
!6423 = !DILocation(line: 317, column: 55, scope: !6407)
!6424 = !DILocation(line: 317, column: 54, scope: !6407)
!6425 = !DILocation(line: 317, column: 31, scope: !6407)
!6426 = !DILocation(line: 317, column: 36, scope: !6407)
!6427 = !DILocation(line: 317, column: 42, scope: !6407)
!6428 = !DILocation(line: 318, column: 35, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6407, file: !1035, line: 318, column: 21)
!6430 = !DILocation(line: 318, column: 36, scope: !6429)
!6431 = !DILocation(line: 318, column: 42, scope: !6429)
!6432 = !DILocation(line: 318, column: 40, scope: !6429)
!6433 = !DILocation(line: 318, column: 22, scope: !6429)
!6434 = !DILocation(line: 318, column: 27, scope: !6429)
!6435 = !DILocation(line: 318, column: 21, scope: !6407)
!6436 = !DILocation(line: 319, column: 45, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6429, file: !1035, line: 318, column: 46)
!6438 = !DILocation(line: 319, column: 30, scope: !6437)
!6439 = !DILocation(line: 319, column: 35, scope: !6437)
!6440 = !DILocation(line: 319, column: 27, scope: !6437)
!6441 = !DILocation(line: 320, column: 21, scope: !6437)
!6442 = !DILocation(line: 322, column: 34, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6407, file: !1035, line: 322, column: 21)
!6444 = !DILocation(line: 322, column: 35, scope: !6443)
!6445 = !DILocation(line: 322, column: 41, scope: !6443)
!6446 = !DILocation(line: 322, column: 39, scope: !6443)
!6447 = !DILocation(line: 322, column: 21, scope: !6443)
!6448 = !DILocation(line: 322, column: 26, scope: !6443)
!6449 = !DILocation(line: 322, column: 21, scope: !6407)
!6450 = !DILocation(line: 323, column: 23, scope: !6443)
!6451 = !DILocation(line: 323, column: 21, scope: !6443)
!6452 = !DILocation(line: 324, column: 24, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6407, file: !1035, line: 324, column: 17)
!6454 = !DILocation(line: 324, column: 22, scope: !6453)
!6455 = !DILocation(line: 324, column: 29, scope: !6456)
!6456 = !DILexicalBlockFile(scope: !6457, file: !1035, discriminator: 1)
!6457 = distinct !DILexicalBlock(scope: !6453, file: !1035, line: 324, column: 17)
!6458 = !DILocation(line: 324, column: 48, scope: !6456)
!6459 = !DILocation(line: 324, column: 33, scope: !6456)
!6460 = !DILocation(line: 324, column: 38, scope: !6456)
!6461 = !DILocation(line: 324, column: 31, scope: !6456)
!6462 = !DILocation(line: 324, column: 17, scope: !6456)
!6463 = !DILocalVariable(name: "sum", scope: !6464, file: !1035, line: 325, type: !1032)
!6464 = distinct !DILexicalBlock(scope: !6457, file: !1035, line: 324, column: 57)
!6465 = !DILocation(line: 325, column: 27, scope: !6464)
!6466 = !DILocation(line: 325, column: 52, scope: !6464)
!6467 = !DILocation(line: 325, column: 58, scope: !6464)
!6468 = !DILocation(line: 325, column: 57, scope: !6464)
!6469 = !DILocation(line: 325, column: 34, scope: !6464)
!6470 = !DILocation(line: 325, column: 39, scope: !6464)
!6471 = !DILocation(line: 325, column: 45, scope: !6464)
!6472 = !DILocation(line: 325, column: 63, scope: !6464)
!6473 = !DILocation(line: 325, column: 83, scope: !6464)
!6474 = !DILocation(line: 325, column: 89, scope: !6464)
!6475 = !DILocation(line: 325, column: 88, scope: !6464)
!6476 = !DILocation(line: 325, column: 65, scope: !6464)
!6477 = !DILocation(line: 325, column: 70, scope: !6464)
!6478 = !DILocation(line: 325, column: 76, scope: !6464)
!6479 = !DILocation(line: 325, column: 64, scope: !6464)
!6480 = !DILocation(line: 325, column: 61, scope: !6464)
!6481 = !DILocation(line: 325, column: 93, scope: !6464)
!6482 = !DILocation(line: 325, column: 92, scope: !6464)
!6483 = !DILocation(line: 326, column: 50, scope: !6464)
!6484 = !DILocation(line: 326, column: 39, scope: !6464)
!6485 = !DILocation(line: 326, column: 45, scope: !6464)
!6486 = !DILocation(line: 326, column: 44, scope: !6464)
!6487 = !DILocation(line: 326, column: 21, scope: !6464)
!6488 = !DILocation(line: 326, column: 26, scope: !6464)
!6489 = !DILocation(line: 326, column: 32, scope: !6464)
!6490 = !DILocation(line: 326, column: 48, scope: !6464)
!6491 = !DILocation(line: 327, column: 39, scope: !6464)
!6492 = !DILocation(line: 327, column: 45, scope: !6464)
!6493 = !DILocation(line: 327, column: 44, scope: !6464)
!6494 = !DILocation(line: 327, column: 21, scope: !6464)
!6495 = !DILocation(line: 327, column: 26, scope: !6464)
!6496 = !DILocation(line: 327, column: 32, scope: !6464)
!6497 = !DILocation(line: 327, column: 48, scope: !6464)
!6498 = !DILocation(line: 328, column: 17, scope: !6464)
!6499 = !DILocation(line: 324, column: 53, scope: !6500)
!6500 = !DILexicalBlockFile(scope: !6457, file: !1035, discriminator: 2)
!6501 = !DILocation(line: 324, column: 17, scope: !6500)
!6502 = distinct !{!6502, !6503}
!6503 = !DILocation(line: 324, column: 17, scope: !6407)
!6504 = !DILocation(line: 329, column: 41, scope: !6407)
!6505 = !DILocation(line: 329, column: 26, scope: !6407)
!6506 = !DILocation(line: 329, column: 31, scope: !6407)
!6507 = !DILocation(line: 329, column: 23, scope: !6407)
!6508 = !DILocation(line: 330, column: 13, scope: !6407)
!6509 = !DILocation(line: 315, column: 44, scope: !6510)
!6510 = !DILexicalBlockFile(scope: !6401, file: !1035, discriminator: 2)
!6511 = !DILocation(line: 315, column: 13, scope: !6510)
!6512 = distinct !{!6512, !6513}
!6513 = !DILocation(line: 315, column: 13, scope: !6390)
!6514 = !DILocation(line: 331, column: 9, scope: !6390)
!6515 = !DILocation(line: 313, column: 48, scope: !6516)
!6516 = !DILexicalBlockFile(scope: !6383, file: !1035, discriminator: 2)
!6517 = !DILocation(line: 313, column: 9, scope: !6516)
!6518 = distinct !{!6518, !6519}
!6519 = !DILocation(line: 313, column: 9, scope: !6379)
!6520 = !DILocation(line: 332, column: 5, scope: !6379)
!6521 = !DILocation(line: 312, column: 59, scope: !6522)
!6522 = !DILexicalBlockFile(scope: !6372, file: !1035, discriminator: 2)
!6523 = !DILocation(line: 312, column: 44, scope: !6522)
!6524 = !DILocation(line: 312, column: 49, scope: !6522)
!6525 = !DILocation(line: 312, column: 41, scope: !6522)
!6526 = !DILocation(line: 312, column: 5, scope: !6522)
!6527 = distinct !{!6527, !6528}
!6528 = !DILocation(line: 312, column: 5, scope: !6344)
!6529 = !DILocation(line: 333, column: 1, scope: !6344)
!6530 = distinct !DISubprogram(name: "apply_mid_side_stereo", scope: !1035, file: !1035, line: 335, type: !6345, isLocal: true, isDefinition: true, scopeLine: 336, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!6531 = !DILocalVariable(name: "cpe", arg: 1, scope: !6530, file: !1035, line: 335, type: !2175)
!6532 = !DILocation(line: 335, column: 51, scope: !6530)
!6533 = !DILocalVariable(name: "w", scope: !6530, file: !1035, line: 337, type: !1023)
!6534 = !DILocation(line: 337, column: 9, scope: !6530)
!6535 = !DILocalVariable(name: "w2", scope: !6530, file: !1035, line: 337, type: !1023)
!6536 = !DILocation(line: 337, column: 12, scope: !6530)
!6537 = !DILocalVariable(name: "g", scope: !6530, file: !1035, line: 337, type: !1023)
!6538 = !DILocation(line: 337, column: 16, scope: !6530)
!6539 = !DILocalVariable(name: "i", scope: !6530, file: !1035, line: 337, type: !1023)
!6540 = !DILocation(line: 337, column: 19, scope: !6530)
!6541 = !DILocalVariable(name: "ics", scope: !6530, file: !1035, line: 338, type: !2651)
!6542 = !DILocation(line: 338, column: 30, scope: !6530)
!6543 = !DILocation(line: 338, column: 37, scope: !6530)
!6544 = !DILocation(line: 338, column: 42, scope: !6530)
!6545 = !DILocation(line: 338, column: 48, scope: !6530)
!6546 = !DILocation(line: 339, column: 10, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6530, file: !1035, line: 339, column: 9)
!6548 = !DILocation(line: 339, column: 15, scope: !6547)
!6549 = !DILocation(line: 339, column: 9, scope: !6530)
!6550 = !DILocation(line: 340, column: 9, scope: !6547)
!6551 = !DILocation(line: 341, column: 12, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6530, file: !1035, line: 341, column: 5)
!6553 = !DILocation(line: 341, column: 10, scope: !6552)
!6554 = !DILocation(line: 341, column: 17, scope: !6555)
!6555 = !DILexicalBlockFile(scope: !6556, file: !1035, discriminator: 1)
!6556 = distinct !DILexicalBlock(scope: !6552, file: !1035, line: 341, column: 5)
!6557 = !DILocation(line: 341, column: 21, scope: !6555)
!6558 = !DILocation(line: 341, column: 26, scope: !6555)
!6559 = !DILocation(line: 341, column: 19, scope: !6555)
!6560 = !DILocation(line: 341, column: 5, scope: !6555)
!6561 = !DILocation(line: 342, column: 17, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6563, file: !1035, line: 342, column: 9)
!6563 = distinct !DILexicalBlock(scope: !6556, file: !1035, line: 341, column: 63)
!6564 = !DILocation(line: 342, column: 14, scope: !6562)
!6565 = !DILocation(line: 342, column: 22, scope: !6566)
!6566 = !DILexicalBlockFile(scope: !6567, file: !1035, discriminator: 1)
!6567 = distinct !DILexicalBlock(scope: !6562, file: !1035, line: 342, column: 9)
!6568 = !DILocation(line: 342, column: 42, scope: !6566)
!6569 = !DILocation(line: 342, column: 27, scope: !6566)
!6570 = !DILocation(line: 342, column: 32, scope: !6566)
!6571 = !DILocation(line: 342, column: 25, scope: !6566)
!6572 = !DILocation(line: 342, column: 9, scope: !6566)
!6573 = !DILocalVariable(name: "start", scope: !6574, file: !1035, line: 343, type: !1023)
!6574 = distinct !DILexicalBlock(scope: !6567, file: !1035, line: 342, column: 52)
!6575 = !DILocation(line: 343, column: 17, scope: !6574)
!6576 = !DILocation(line: 343, column: 26, scope: !6574)
!6577 = !DILocation(line: 343, column: 28, scope: !6574)
!6578 = !DILocation(line: 343, column: 27, scope: !6574)
!6579 = !DILocation(line: 343, column: 32, scope: !6574)
!6580 = !DILocation(line: 344, column: 20, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6574, file: !1035, line: 344, column: 13)
!6582 = !DILocation(line: 344, column: 18, scope: !6581)
!6583 = !DILocation(line: 344, column: 25, scope: !6584)
!6584 = !DILexicalBlockFile(scope: !6585, file: !1035, discriminator: 1)
!6585 = distinct !DILexicalBlock(scope: !6581, file: !1035, line: 344, column: 13)
!6586 = !DILocation(line: 344, column: 29, scope: !6584)
!6587 = !DILocation(line: 344, column: 34, scope: !6584)
!6588 = !DILocation(line: 344, column: 27, scope: !6584)
!6589 = !DILocation(line: 344, column: 13, scope: !6584)
!6590 = !DILocation(line: 349, column: 35, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6592, file: !1035, line: 349, column: 21)
!6592 = distinct !DILexicalBlock(scope: !6585, file: !1035, line: 344, column: 48)
!6593 = !DILocation(line: 349, column: 36, scope: !6591)
!6594 = !DILocation(line: 349, column: 42, scope: !6591)
!6595 = !DILocation(line: 349, column: 40, scope: !6591)
!6596 = !DILocation(line: 349, column: 22, scope: !6591)
!6597 = !DILocation(line: 349, column: 27, scope: !6591)
!6598 = !DILocation(line: 349, column: 45, scope: !6591)
!6599 = !DILocation(line: 349, column: 61, scope: !6600)
!6600 = !DILexicalBlockFile(scope: !6591, file: !1035, discriminator: 1)
!6601 = !DILocation(line: 349, column: 62, scope: !6600)
!6602 = !DILocation(line: 349, column: 68, scope: !6600)
!6603 = !DILocation(line: 349, column: 66, scope: !6600)
!6604 = !DILocation(line: 349, column: 48, scope: !6600)
!6605 = !DILocation(line: 349, column: 53, scope: !6600)
!6606 = !DILocation(line: 350, column: 21, scope: !6591)
!6607 = !DILocation(line: 350, column: 45, scope: !6600)
!6608 = !DILocation(line: 350, column: 46, scope: !6600)
!6609 = !DILocation(line: 350, column: 52, scope: !6600)
!6610 = !DILocation(line: 350, column: 50, scope: !6600)
!6611 = !DILocation(line: 350, column: 24, scope: !6600)
!6612 = !DILocation(line: 350, column: 29, scope: !6600)
!6613 = !DILocation(line: 350, column: 35, scope: !6600)
!6614 = !DILocation(line: 350, column: 55, scope: !6600)
!6615 = !DILocation(line: 351, column: 21, scope: !6591)
!6616 = !DILocation(line: 351, column: 45, scope: !6600)
!6617 = !DILocation(line: 351, column: 46, scope: !6600)
!6618 = !DILocation(line: 351, column: 52, scope: !6600)
!6619 = !DILocation(line: 351, column: 50, scope: !6600)
!6620 = !DILocation(line: 351, column: 24, scope: !6600)
!6621 = !DILocation(line: 351, column: 29, scope: !6600)
!6622 = !DILocation(line: 351, column: 35, scope: !6600)
!6623 = !DILocation(line: 351, column: 55, scope: !6600)
!6624 = !DILocation(line: 349, column: 21, scope: !6625)
!6625 = !DILexicalBlockFile(scope: !6592, file: !1035, discriminator: 2)
!6626 = !DILocation(line: 352, column: 45, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6591, file: !1035, line: 351, column: 68)
!6628 = !DILocation(line: 352, column: 30, scope: !6627)
!6629 = !DILocation(line: 352, column: 35, scope: !6627)
!6630 = !DILocation(line: 352, column: 27, scope: !6627)
!6631 = !DILocation(line: 353, column: 21, scope: !6627)
!6632 = !DILocation(line: 355, column: 24, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6592, file: !1035, line: 355, column: 17)
!6634 = !DILocation(line: 355, column: 22, scope: !6633)
!6635 = !DILocation(line: 355, column: 29, scope: !6636)
!6636 = !DILexicalBlockFile(scope: !6637, file: !1035, discriminator: 1)
!6637 = distinct !DILexicalBlock(scope: !6633, file: !1035, line: 355, column: 17)
!6638 = !DILocation(line: 355, column: 48, scope: !6636)
!6639 = !DILocation(line: 355, column: 33, scope: !6636)
!6640 = !DILocation(line: 355, column: 38, scope: !6636)
!6641 = !DILocation(line: 355, column: 31, scope: !6636)
!6642 = !DILocation(line: 355, column: 17, scope: !6636)
!6643 = !DILocalVariable(name: "L", scope: !6644, file: !1035, line: 356, type: !1032)
!6644 = distinct !DILexicalBlock(scope: !6637, file: !1035, line: 355, column: 57)
!6645 = !DILocation(line: 356, column: 27, scope: !6644)
!6646 = !DILocation(line: 356, column: 50, scope: !6644)
!6647 = !DILocation(line: 356, column: 56, scope: !6644)
!6648 = !DILocation(line: 356, column: 55, scope: !6644)
!6649 = !DILocation(line: 356, column: 32, scope: !6644)
!6650 = !DILocation(line: 356, column: 37, scope: !6644)
!6651 = !DILocation(line: 356, column: 43, scope: !6644)
!6652 = !DILocation(line: 356, column: 79, scope: !6644)
!6653 = !DILocation(line: 356, column: 85, scope: !6644)
!6654 = !DILocation(line: 356, column: 84, scope: !6644)
!6655 = !DILocation(line: 356, column: 61, scope: !6644)
!6656 = !DILocation(line: 356, column: 66, scope: !6644)
!6657 = !DILocation(line: 356, column: 72, scope: !6644)
!6658 = !DILocation(line: 356, column: 59, scope: !6644)
!6659 = !DILocation(line: 356, column: 89, scope: !6644)
!6660 = !DILocalVariable(name: "R", scope: !6644, file: !1035, line: 357, type: !1032)
!6661 = !DILocation(line: 357, column: 27, scope: !6644)
!6662 = !DILocation(line: 357, column: 31, scope: !6644)
!6663 = !DILocation(line: 357, column: 53, scope: !6644)
!6664 = !DILocation(line: 357, column: 59, scope: !6644)
!6665 = !DILocation(line: 357, column: 58, scope: !6644)
!6666 = !DILocation(line: 357, column: 35, scope: !6644)
!6667 = !DILocation(line: 357, column: 40, scope: !6644)
!6668 = !DILocation(line: 357, column: 46, scope: !6644)
!6669 = !DILocation(line: 357, column: 33, scope: !6644)
!6670 = !DILocation(line: 358, column: 50, scope: !6644)
!6671 = !DILocation(line: 358, column: 39, scope: !6644)
!6672 = !DILocation(line: 358, column: 45, scope: !6644)
!6673 = !DILocation(line: 358, column: 44, scope: !6644)
!6674 = !DILocation(line: 358, column: 21, scope: !6644)
!6675 = !DILocation(line: 358, column: 26, scope: !6644)
!6676 = !DILocation(line: 358, column: 32, scope: !6644)
!6677 = !DILocation(line: 358, column: 48, scope: !6644)
!6678 = !DILocation(line: 359, column: 50, scope: !6644)
!6679 = !DILocation(line: 359, column: 39, scope: !6644)
!6680 = !DILocation(line: 359, column: 45, scope: !6644)
!6681 = !DILocation(line: 359, column: 44, scope: !6644)
!6682 = !DILocation(line: 359, column: 21, scope: !6644)
!6683 = !DILocation(line: 359, column: 26, scope: !6644)
!6684 = !DILocation(line: 359, column: 32, scope: !6644)
!6685 = !DILocation(line: 359, column: 48, scope: !6644)
!6686 = !DILocation(line: 360, column: 17, scope: !6644)
!6687 = !DILocation(line: 355, column: 53, scope: !6688)
!6688 = !DILexicalBlockFile(scope: !6637, file: !1035, discriminator: 2)
!6689 = !DILocation(line: 355, column: 17, scope: !6688)
!6690 = distinct !{!6690, !6691}
!6691 = !DILocation(line: 355, column: 17, scope: !6592)
!6692 = !DILocation(line: 361, column: 41, scope: !6592)
!6693 = !DILocation(line: 361, column: 26, scope: !6592)
!6694 = !DILocation(line: 361, column: 31, scope: !6592)
!6695 = !DILocation(line: 361, column: 23, scope: !6592)
!6696 = !DILocation(line: 362, column: 13, scope: !6592)
!6697 = !DILocation(line: 344, column: 44, scope: !6698)
!6698 = !DILexicalBlockFile(scope: !6585, file: !1035, discriminator: 2)
!6699 = !DILocation(line: 344, column: 13, scope: !6698)
!6700 = distinct !{!6700, !6701}
!6701 = !DILocation(line: 344, column: 13, scope: !6574)
!6702 = !DILocation(line: 363, column: 9, scope: !6574)
!6703 = !DILocation(line: 342, column: 48, scope: !6704)
!6704 = !DILexicalBlockFile(scope: !6567, file: !1035, discriminator: 2)
!6705 = !DILocation(line: 342, column: 9, scope: !6704)
!6706 = distinct !{!6706, !6707}
!6707 = !DILocation(line: 342, column: 9, scope: !6563)
!6708 = !DILocation(line: 364, column: 5, scope: !6563)
!6709 = !DILocation(line: 341, column: 59, scope: !6710)
!6710 = !DILexicalBlockFile(scope: !6556, file: !1035, discriminator: 2)
!6711 = !DILocation(line: 341, column: 44, scope: !6710)
!6712 = !DILocation(line: 341, column: 49, scope: !6710)
!6713 = !DILocation(line: 341, column: 41, scope: !6710)
!6714 = !DILocation(line: 341, column: 5, scope: !6710)
!6715 = distinct !{!6715, !6716}
!6716 = !DILocation(line: 341, column: 5, scope: !6530)
!6717 = !DILocation(line: 365, column: 1, scope: !6530)
!6718 = distinct !DISubprogram(name: "adjust_frame_information", scope: !1035, file: !1035, line: 256, type: !6719, isLocal: true, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!6719 = !DISubroutineType(types: !6720)
!6720 = !{null, !2175, !1023}
!6721 = !DILocalVariable(name: "cpe", arg: 1, scope: !6718, file: !1035, line: 256, type: !2175)
!6722 = !DILocation(line: 256, column: 54, scope: !6718)
!6723 = !DILocalVariable(name: "chans", arg: 2, scope: !6718, file: !1035, line: 256, type: !1023)
!6724 = !DILocation(line: 256, column: 63, scope: !6718)
!6725 = !DILocalVariable(name: "i", scope: !6718, file: !1035, line: 258, type: !1023)
!6726 = !DILocation(line: 258, column: 9, scope: !6718)
!6727 = !DILocalVariable(name: "w", scope: !6718, file: !1035, line: 258, type: !1023)
!6728 = !DILocation(line: 258, column: 12, scope: !6718)
!6729 = !DILocalVariable(name: "w2", scope: !6718, file: !1035, line: 258, type: !1023)
!6730 = !DILocation(line: 258, column: 15, scope: !6718)
!6731 = !DILocalVariable(name: "g", scope: !6718, file: !1035, line: 258, type: !1023)
!6732 = !DILocation(line: 258, column: 19, scope: !6718)
!6733 = !DILocalVariable(name: "ch", scope: !6718, file: !1035, line: 258, type: !1023)
!6734 = !DILocation(line: 258, column: 22, scope: !6718)
!6735 = !DILocalVariable(name: "maxsfb", scope: !6718, file: !1035, line: 259, type: !1023)
!6736 = !DILocation(line: 259, column: 9, scope: !6718)
!6737 = !DILocalVariable(name: "cmaxsfb", scope: !6718, file: !1035, line: 259, type: !1023)
!6738 = !DILocation(line: 259, column: 17, scope: !6718)
!6739 = !DILocation(line: 261, column: 13, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6718, file: !1035, line: 261, column: 5)
!6741 = !DILocation(line: 261, column: 10, scope: !6740)
!6742 = !DILocation(line: 261, column: 18, scope: !6743)
!6743 = !DILexicalBlockFile(scope: !6744, file: !1035, discriminator: 1)
!6744 = distinct !DILexicalBlock(scope: !6740, file: !1035, line: 261, column: 5)
!6745 = !DILocation(line: 261, column: 23, scope: !6743)
!6746 = !DILocation(line: 261, column: 21, scope: !6743)
!6747 = !DILocation(line: 261, column: 5, scope: !6743)
!6748 = !DILocalVariable(name: "ics", scope: !6749, file: !1035, line: 262, type: !2651)
!6749 = distinct !DILexicalBlock(scope: !6744, file: !1035, line: 261, column: 36)
!6750 = !DILocation(line: 262, column: 34, scope: !6749)
!6751 = !DILocation(line: 262, column: 49, scope: !6749)
!6752 = !DILocation(line: 262, column: 41, scope: !6749)
!6753 = !DILocation(line: 262, column: 46, scope: !6749)
!6754 = !DILocation(line: 262, column: 53, scope: !6749)
!6755 = !DILocation(line: 263, column: 16, scope: !6749)
!6756 = !DILocation(line: 264, column: 17, scope: !6749)
!6757 = !DILocation(line: 264, column: 9, scope: !6749)
!6758 = !DILocation(line: 264, column: 14, scope: !6749)
!6759 = !DILocation(line: 264, column: 21, scope: !6749)
!6760 = !DILocation(line: 264, column: 27, scope: !6749)
!6761 = !DILocation(line: 264, column: 37, scope: !6749)
!6762 = !DILocation(line: 265, column: 16, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6749, file: !1035, line: 265, column: 9)
!6764 = !DILocation(line: 265, column: 14, scope: !6763)
!6765 = !DILocation(line: 265, column: 21, scope: !6766)
!6766 = !DILexicalBlockFile(scope: !6767, file: !1035, discriminator: 1)
!6767 = distinct !DILexicalBlock(scope: !6763, file: !1035, line: 265, column: 9)
!6768 = !DILocation(line: 265, column: 25, scope: !6766)
!6769 = !DILocation(line: 265, column: 30, scope: !6766)
!6770 = !DILocation(line: 265, column: 23, scope: !6766)
!6771 = !DILocation(line: 265, column: 9, scope: !6766)
!6772 = !DILocation(line: 266, column: 21, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !1035, line: 266, column: 13)
!6774 = distinct !DILexicalBlock(scope: !6767, file: !1035, line: 265, column: 67)
!6775 = !DILocation(line: 266, column: 18, scope: !6773)
!6776 = !DILocation(line: 266, column: 26, scope: !6777)
!6777 = !DILexicalBlockFile(scope: !6778, file: !1035, discriminator: 1)
!6778 = distinct !DILexicalBlock(scope: !6773, file: !1035, line: 266, column: 13)
!6779 = !DILocation(line: 266, column: 46, scope: !6777)
!6780 = !DILocation(line: 266, column: 31, scope: !6777)
!6781 = !DILocation(line: 266, column: 36, scope: !6777)
!6782 = !DILocation(line: 266, column: 29, scope: !6777)
!6783 = !DILocation(line: 266, column: 13, scope: !6777)
!6784 = !DILocation(line: 267, column: 32, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !1035, line: 267, column: 17)
!6786 = distinct !DILexicalBlock(scope: !6778, file: !1035, line: 266, column: 56)
!6787 = !DILocation(line: 267, column: 37, scope: !6785)
!6788 = !DILocation(line: 267, column: 30, scope: !6785)
!6789 = !DILocation(line: 267, column: 22, scope: !6785)
!6790 = !DILocation(line: 267, column: 46, scope: !6791)
!6791 = !DILexicalBlockFile(scope: !6792, file: !1035, discriminator: 1)
!6792 = distinct !DILexicalBlock(scope: !6785, file: !1035, line: 267, column: 17)
!6793 = !DILocation(line: 267, column: 54, scope: !6791)
!6794 = !DILocation(line: 267, column: 58, scope: !6791)
!6795 = !DILocation(line: 267, column: 80, scope: !6796)
!6796 = !DILexicalBlockFile(scope: !6792, file: !1035, discriminator: 2)
!6797 = !DILocation(line: 267, column: 81, scope: !6796)
!6798 = !DILocation(line: 267, column: 85, scope: !6796)
!6799 = !DILocation(line: 267, column: 84, scope: !6796)
!6800 = !DILocation(line: 267, column: 92, scope: !6796)
!6801 = !DILocation(line: 267, column: 61, scope: !6796)
!6802 = !DILocation(line: 267, column: 69, scope: !6796)
!6803 = !DILocation(line: 267, column: 66, scope: !6796)
!6804 = !DILocation(line: 267, column: 73, scope: !6796)
!6805 = !DILocation(line: 267, column: 58, scope: !6796)
!6806 = !DILocation(line: 267, column: 17, scope: !6807)
!6807 = !DILexicalBlockFile(scope: !6785, file: !1035, discriminator: 3)
!6808 = !DILocation(line: 267, column: 17, scope: !6809)
!6809 = !DILexicalBlockFile(scope: !6785, file: !1035, discriminator: 4)
!6810 = !DILocation(line: 267, column: 104, scope: !6811)
!6811 = !DILexicalBlockFile(scope: !6792, file: !1035, discriminator: 5)
!6812 = !DILocation(line: 267, column: 17, scope: !6811)
!6813 = distinct !{!6813, !6814}
!6814 = !DILocation(line: 267, column: 17, scope: !6786)
!6815 = !DILocation(line: 269, column: 28, scope: !6786)
!6816 = !DILocation(line: 269, column: 39, scope: !6786)
!6817 = !DILocation(line: 269, column: 36, scope: !6786)
!6818 = !DILocation(line: 269, column: 27, scope: !6786)
!6819 = !DILocation(line: 269, column: 51, scope: !6820)
!6820 = !DILexicalBlockFile(scope: !6786, file: !1035, discriminator: 1)
!6821 = !DILocation(line: 269, column: 27, scope: !6820)
!6822 = !DILocation(line: 269, column: 62, scope: !6823)
!6823 = !DILexicalBlockFile(scope: !6786, file: !1035, discriminator: 2)
!6824 = !DILocation(line: 269, column: 27, scope: !6823)
!6825 = !DILocation(line: 269, column: 27, scope: !6826)
!6826 = !DILexicalBlockFile(scope: !6786, file: !1035, discriminator: 3)
!6827 = !DILocation(line: 269, column: 24, scope: !6826)
!6828 = !DILocation(line: 270, column: 13, scope: !6786)
!6829 = !DILocation(line: 266, column: 52, scope: !6830)
!6830 = !DILexicalBlockFile(scope: !6778, file: !1035, discriminator: 2)
!6831 = !DILocation(line: 266, column: 13, scope: !6830)
!6832 = distinct !{!6832, !6833}
!6833 = !DILocation(line: 266, column: 13, scope: !6774)
!6834 = !DILocation(line: 271, column: 9, scope: !6774)
!6835 = !DILocation(line: 265, column: 63, scope: !6836)
!6836 = !DILexicalBlockFile(scope: !6767, file: !1035, discriminator: 2)
!6837 = !DILocation(line: 265, column: 48, scope: !6836)
!6838 = !DILocation(line: 265, column: 53, scope: !6836)
!6839 = !DILocation(line: 265, column: 45, scope: !6836)
!6840 = !DILocation(line: 265, column: 9, scope: !6836)
!6841 = distinct !{!6841, !6842}
!6842 = !DILocation(line: 265, column: 9, scope: !6749)
!6843 = !DILocation(line: 272, column: 24, scope: !6749)
!6844 = !DILocation(line: 272, column: 9, scope: !6749)
!6845 = !DILocation(line: 272, column: 14, scope: !6749)
!6846 = !DILocation(line: 272, column: 22, scope: !6749)
!6847 = !DILocation(line: 275, column: 16, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6749, file: !1035, line: 275, column: 9)
!6849 = !DILocation(line: 275, column: 14, scope: !6848)
!6850 = !DILocation(line: 275, column: 21, scope: !6851)
!6851 = !DILexicalBlockFile(scope: !6852, file: !1035, discriminator: 1)
!6852 = distinct !DILexicalBlock(scope: !6848, file: !1035, line: 275, column: 9)
!6853 = !DILocation(line: 275, column: 25, scope: !6851)
!6854 = !DILocation(line: 275, column: 30, scope: !6851)
!6855 = !DILocation(line: 275, column: 23, scope: !6851)
!6856 = !DILocation(line: 275, column: 9, scope: !6851)
!6857 = !DILocation(line: 276, column: 20, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6859, file: !1035, line: 276, column: 13)
!6859 = distinct !DILexicalBlock(scope: !6852, file: !1035, line: 275, column: 67)
!6860 = !DILocation(line: 276, column: 18, scope: !6858)
!6861 = !DILocation(line: 276, column: 25, scope: !6862)
!6862 = !DILexicalBlockFile(scope: !6863, file: !1035, discriminator: 1)
!6863 = distinct !DILexicalBlock(scope: !6858, file: !1035, line: 276, column: 13)
!6864 = !DILocation(line: 276, column: 29, scope: !6862)
!6865 = !DILocation(line: 276, column: 34, scope: !6862)
!6866 = !DILocation(line: 276, column: 27, scope: !6862)
!6867 = !DILocation(line: 276, column: 13, scope: !6862)
!6868 = !DILocation(line: 277, column: 19, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6863, file: !1035, line: 276, column: 48)
!6870 = !DILocation(line: 278, column: 27, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6869, file: !1035, line: 278, column: 17)
!6872 = !DILocation(line: 278, column: 25, scope: !6871)
!6873 = !DILocation(line: 278, column: 22, scope: !6871)
!6874 = !DILocation(line: 278, column: 30, scope: !6875)
!6875 = !DILexicalBlockFile(scope: !6876, file: !1035, discriminator: 1)
!6876 = distinct !DILexicalBlock(scope: !6871, file: !1035, line: 278, column: 17)
!6877 = !DILocation(line: 278, column: 35, scope: !6875)
!6878 = !DILocation(line: 278, column: 54, scope: !6875)
!6879 = !DILocation(line: 278, column: 39, scope: !6875)
!6880 = !DILocation(line: 278, column: 44, scope: !6875)
!6881 = !DILocation(line: 278, column: 37, scope: !6875)
!6882 = !DILocation(line: 278, column: 33, scope: !6875)
!6883 = !DILocation(line: 278, column: 17, scope: !6875)
!6884 = !DILocation(line: 279, column: 45, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !1035, line: 279, column: 25)
!6886 = distinct !DILexicalBlock(scope: !6876, file: !1035, line: 278, column: 64)
!6887 = !DILocation(line: 279, column: 47, scope: !6885)
!6888 = !DILocation(line: 279, column: 53, scope: !6885)
!6889 = !DILocation(line: 279, column: 51, scope: !6885)
!6890 = !DILocation(line: 279, column: 26, scope: !6885)
!6891 = !DILocation(line: 279, column: 34, scope: !6885)
!6892 = !DILocation(line: 279, column: 31, scope: !6885)
!6893 = !DILocation(line: 279, column: 38, scope: !6885)
!6894 = !DILocation(line: 279, column: 25, scope: !6886)
!6895 = !DILocation(line: 280, column: 27, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6885, file: !1035, line: 279, column: 57)
!6897 = !DILocation(line: 281, column: 25, scope: !6896)
!6898 = !DILocation(line: 283, column: 17, scope: !6886)
!6899 = !DILocation(line: 278, column: 60, scope: !6900)
!6900 = !DILexicalBlockFile(scope: !6876, file: !1035, discriminator: 2)
!6901 = !DILocation(line: 278, column: 17, scope: !6900)
!6902 = distinct !{!6902, !6903}
!6903 = !DILocation(line: 278, column: 17, scope: !6869)
!6904 = !DILocation(line: 284, column: 48, scope: !6869)
!6905 = !DILocation(line: 284, column: 36, scope: !6869)
!6906 = !DILocation(line: 284, column: 37, scope: !6869)
!6907 = !DILocation(line: 284, column: 43, scope: !6869)
!6908 = !DILocation(line: 284, column: 41, scope: !6869)
!6909 = !DILocation(line: 284, column: 17, scope: !6869)
!6910 = !DILocation(line: 284, column: 25, scope: !6869)
!6911 = !DILocation(line: 284, column: 22, scope: !6869)
!6912 = !DILocation(line: 284, column: 29, scope: !6869)
!6913 = !DILocation(line: 284, column: 46, scope: !6869)
!6914 = !DILocation(line: 285, column: 13, scope: !6869)
!6915 = !DILocation(line: 276, column: 44, scope: !6916)
!6916 = !DILexicalBlockFile(scope: !6863, file: !1035, discriminator: 2)
!6917 = !DILocation(line: 276, column: 13, scope: !6916)
!6918 = distinct !{!6918, !6919}
!6919 = !DILocation(line: 276, column: 13, scope: !6859)
!6920 = !DILocation(line: 286, column: 9, scope: !6859)
!6921 = !DILocation(line: 275, column: 63, scope: !6922)
!6922 = !DILexicalBlockFile(scope: !6852, file: !1035, discriminator: 2)
!6923 = !DILocation(line: 275, column: 48, scope: !6922)
!6924 = !DILocation(line: 275, column: 53, scope: !6922)
!6925 = !DILocation(line: 275, column: 45, scope: !6922)
!6926 = !DILocation(line: 275, column: 9, scope: !6922)
!6927 = distinct !{!6927, !6928}
!6928 = !DILocation(line: 275, column: 9, scope: !6749)
!6929 = !DILocation(line: 287, column: 5, scope: !6749)
!6930 = !DILocation(line: 261, column: 32, scope: !6931)
!6931 = !DILexicalBlockFile(scope: !6744, file: !1035, discriminator: 2)
!6932 = !DILocation(line: 261, column: 5, scope: !6931)
!6933 = distinct !{!6933, !6934}
!6934 = !DILocation(line: 261, column: 5, scope: !6718)
!6935 = !DILocation(line: 289, column: 9, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6718, file: !1035, line: 289, column: 9)
!6937 = !DILocation(line: 289, column: 15, scope: !6936)
!6938 = !DILocation(line: 289, column: 19, scope: !6936)
!6939 = !DILocation(line: 289, column: 22, scope: !6940)
!6940 = !DILexicalBlockFile(scope: !6936, file: !1035, discriminator: 1)
!6941 = !DILocation(line: 289, column: 27, scope: !6940)
!6942 = !DILocation(line: 289, column: 9, scope: !6940)
!6943 = !DILocalVariable(name: "ics0", scope: !6944, file: !1035, line: 290, type: !2651)
!6944 = distinct !DILexicalBlock(scope: !6936, file: !1035, line: 289, column: 42)
!6945 = !DILocation(line: 290, column: 34, scope: !6944)
!6946 = !DILocation(line: 290, column: 42, scope: !6944)
!6947 = !DILocation(line: 290, column: 47, scope: !6944)
!6948 = !DILocation(line: 290, column: 53, scope: !6944)
!6949 = !DILocalVariable(name: "ics1", scope: !6944, file: !1035, line: 291, type: !2651)
!6950 = !DILocation(line: 291, column: 34, scope: !6944)
!6951 = !DILocation(line: 291, column: 42, scope: !6944)
!6952 = !DILocation(line: 291, column: 47, scope: !6944)
!6953 = !DILocation(line: 291, column: 53, scope: !6944)
!6954 = !DILocalVariable(name: "msc", scope: !6944, file: !1035, line: 292, type: !1023)
!6955 = !DILocation(line: 292, column: 13, scope: !6944)
!6956 = !DILocation(line: 293, column: 27, scope: !6944)
!6957 = !DILocation(line: 293, column: 33, scope: !6944)
!6958 = !DILocation(line: 293, column: 26, scope: !6944)
!6959 = !DILocation(line: 293, column: 45, scope: !6944)
!6960 = !DILocation(line: 293, column: 51, scope: !6944)
!6961 = !DILocation(line: 293, column: 44, scope: !6944)
!6962 = !DILocation(line: 293, column: 42, scope: !6944)
!6963 = !DILocation(line: 293, column: 63, scope: !6964)
!6964 = !DILexicalBlockFile(scope: !6944, file: !1035, discriminator: 1)
!6965 = !DILocation(line: 293, column: 69, scope: !6964)
!6966 = !DILocation(line: 293, column: 62, scope: !6964)
!6967 = !DILocation(line: 293, column: 26, scope: !6964)
!6968 = !DILocation(line: 293, column: 81, scope: !6969)
!6969 = !DILexicalBlockFile(scope: !6944, file: !1035, discriminator: 2)
!6970 = !DILocation(line: 293, column: 87, scope: !6969)
!6971 = !DILocation(line: 293, column: 80, scope: !6969)
!6972 = !DILocation(line: 293, column: 26, scope: !6969)
!6973 = !DILocation(line: 293, column: 26, scope: !6974)
!6974 = !DILexicalBlockFile(scope: !6944, file: !1035, discriminator: 3)
!6975 = !DILocation(line: 293, column: 25, scope: !6974)
!6976 = !DILocation(line: 293, column: 9, scope: !6974)
!6977 = !DILocation(line: 293, column: 15, scope: !6974)
!6978 = !DILocation(line: 293, column: 23, scope: !6974)
!6979 = !DILocation(line: 294, column: 25, scope: !6944)
!6980 = !DILocation(line: 294, column: 31, scope: !6944)
!6981 = !DILocation(line: 294, column: 9, scope: !6944)
!6982 = !DILocation(line: 294, column: 15, scope: !6944)
!6983 = !DILocation(line: 294, column: 23, scope: !6944)
!6984 = !DILocation(line: 295, column: 16, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6944, file: !1035, line: 295, column: 9)
!6986 = !DILocation(line: 295, column: 14, scope: !6985)
!6987 = !DILocation(line: 295, column: 21, scope: !6988)
!6988 = !DILexicalBlockFile(scope: !6989, file: !1035, discriminator: 1)
!6989 = distinct !DILexicalBlock(scope: !6985, file: !1035, line: 295, column: 9)
!6990 = !DILocation(line: 295, column: 25, scope: !6988)
!6991 = !DILocation(line: 295, column: 31, scope: !6988)
!6992 = !DILocation(line: 295, column: 42, scope: !6988)
!6993 = !DILocation(line: 295, column: 23, scope: !6988)
!6994 = !DILocation(line: 295, column: 9, scope: !6988)
!6995 = !DILocation(line: 296, column: 20, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6989, file: !1035, line: 296, column: 13)
!6997 = !DILocation(line: 296, column: 18, scope: !6996)
!6998 = !DILocation(line: 296, column: 25, scope: !6999)
!6999 = !DILexicalBlockFile(scope: !7000, file: !1035, discriminator: 1)
!7000 = distinct !DILexicalBlock(scope: !6996, file: !1035, line: 296, column: 13)
!7001 = !DILocation(line: 296, column: 29, scope: !6999)
!7002 = !DILocation(line: 296, column: 35, scope: !6999)
!7003 = !DILocation(line: 296, column: 27, scope: !6999)
!7004 = !DILocation(line: 296, column: 13, scope: !6999)
!7005 = !DILocation(line: 297, column: 34, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7000, file: !1035, line: 297, column: 21)
!7007 = !DILocation(line: 297, column: 36, scope: !7006)
!7008 = !DILocation(line: 297, column: 35, scope: !7006)
!7009 = !DILocation(line: 297, column: 21, scope: !7006)
!7010 = !DILocation(line: 297, column: 26, scope: !7006)
!7011 = !DILocation(line: 297, column: 21, scope: !7000)
!7012 = !DILocation(line: 298, column: 24, scope: !7006)
!7013 = !DILocation(line: 298, column: 21, scope: !7006)
!7014 = !DILocation(line: 297, column: 37, scope: !7015)
!7015 = !DILexicalBlockFile(scope: !7006, file: !1035, discriminator: 1)
!7016 = !DILocation(line: 296, column: 45, scope: !7017)
!7017 = !DILexicalBlockFile(scope: !7000, file: !1035, discriminator: 2)
!7018 = !DILocation(line: 296, column: 13, scope: !7017)
!7019 = distinct !{!7019, !7020}
!7020 = !DILocation(line: 296, column: 13, scope: !6989)
!7021 = !DILocation(line: 298, column: 24, scope: !7022)
!7022 = !DILexicalBlockFile(scope: !6996, file: !1035, discriminator: 1)
!7023 = !DILocation(line: 295, column: 49, scope: !7024)
!7024 = !DILexicalBlockFile(scope: !6989, file: !1035, discriminator: 2)
!7025 = !DILocation(line: 295, column: 9, scope: !7024)
!7026 = distinct !{!7026, !7027}
!7027 = !DILocation(line: 295, column: 9, scope: !6944)
!7028 = !DILocation(line: 299, column: 13, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !6944, file: !1035, line: 299, column: 13)
!7030 = !DILocation(line: 299, column: 17, scope: !7029)
!7031 = !DILocation(line: 299, column: 22, scope: !7029)
!7032 = !DILocation(line: 299, column: 25, scope: !7033)
!7033 = !DILexicalBlockFile(scope: !7029, file: !1035, discriminator: 1)
!7034 = !DILocation(line: 299, column: 31, scope: !7033)
!7035 = !DILocation(line: 299, column: 39, scope: !7033)
!7036 = !DILocation(line: 299, column: 13, scope: !7033)
!7037 = !DILocation(line: 300, column: 13, scope: !7029)
!7038 = !DILocation(line: 300, column: 18, scope: !7029)
!7039 = !DILocation(line: 300, column: 26, scope: !7029)
!7040 = !DILocation(line: 302, column: 28, scope: !7029)
!7041 = !DILocation(line: 302, column: 34, scope: !7029)
!7042 = !DILocation(line: 302, column: 40, scope: !7029)
!7043 = !DILocation(line: 302, column: 50, scope: !7029)
!7044 = !DILocation(line: 302, column: 56, scope: !7029)
!7045 = !DILocation(line: 302, column: 48, scope: !7029)
!7046 = !DILocation(line: 302, column: 32, scope: !7029)
!7047 = !DILocation(line: 302, column: 13, scope: !7029)
!7048 = !DILocation(line: 302, column: 18, scope: !7029)
!7049 = !DILocation(line: 302, column: 26, scope: !7029)
!7050 = !DILocation(line: 303, column: 5, scope: !6944)
!7051 = !DILocation(line: 304, column: 1, scope: !6718)
!7052 = distinct !DISubprogram(name: "put_ics_info", scope: !1035, file: !1035, line: 221, type: !7053, isLocal: true, isDefinition: true, scopeLine: 222, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!7053 = !DISubroutineType(types: !7054)
!7054 = !{null, !2903, !2651}
!7055 = !DILocalVariable(name: "s", arg: 1, scope: !7052, file: !1035, line: 221, type: !2903)
!7056 = !DILocation(line: 221, column: 41, scope: !7052)
!7057 = !DILocalVariable(name: "info", arg: 2, scope: !7052, file: !1035, line: 221, type: !2651)
!7058 = !DILocation(line: 221, column: 69, scope: !7052)
!7059 = !DILocalVariable(name: "w", scope: !7052, file: !1035, line: 223, type: !1023)
!7060 = !DILocation(line: 223, column: 9, scope: !7052)
!7061 = !DILocation(line: 225, column: 15, scope: !7052)
!7062 = !DILocation(line: 225, column: 18, scope: !7052)
!7063 = !DILocation(line: 225, column: 5, scope: !7052)
!7064 = !DILocation(line: 226, column: 15, scope: !7052)
!7065 = !DILocation(line: 226, column: 18, scope: !7052)
!7066 = !DILocation(line: 226, column: 25, scope: !7052)
!7067 = !DILocation(line: 226, column: 31, scope: !7052)
!7068 = !DILocation(line: 226, column: 5, scope: !7052)
!7069 = !DILocation(line: 227, column: 15, scope: !7052)
!7070 = !DILocation(line: 227, column: 18, scope: !7052)
!7071 = !DILocation(line: 227, column: 25, scope: !7052)
!7072 = !DILocation(line: 227, column: 31, scope: !7052)
!7073 = !DILocation(line: 227, column: 5, scope: !7052)
!7074 = !DILocation(line: 228, column: 9, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7052, file: !1035, line: 228, column: 9)
!7076 = !DILocation(line: 228, column: 15, scope: !7075)
!7077 = !DILocation(line: 228, column: 34, scope: !7075)
!7078 = !DILocation(line: 228, column: 9, scope: !7052)
!7079 = !DILocation(line: 229, column: 19, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7075, file: !1035, line: 228, column: 59)
!7081 = !DILocation(line: 229, column: 22, scope: !7080)
!7082 = !DILocation(line: 229, column: 29, scope: !7080)
!7083 = !DILocation(line: 229, column: 35, scope: !7080)
!7084 = !DILocation(line: 229, column: 9, scope: !7080)
!7085 = !DILocation(line: 230, column: 19, scope: !7080)
!7086 = !DILocation(line: 230, column: 22, scope: !7080)
!7087 = !DILocation(line: 230, column: 31, scope: !7080)
!7088 = !DILocation(line: 230, column: 37, scope: !7080)
!7089 = !DILocation(line: 230, column: 30, scope: !7080)
!7090 = !DILocation(line: 230, column: 29, scope: !7080)
!7091 = !DILocation(line: 230, column: 9, scope: !7080)
!7092 = !DILocation(line: 231, column: 5, scope: !7080)
!7093 = !DILocation(line: 232, column: 19, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7075, file: !1035, line: 231, column: 12)
!7095 = !DILocation(line: 232, column: 22, scope: !7094)
!7096 = !DILocation(line: 232, column: 29, scope: !7094)
!7097 = !DILocation(line: 232, column: 35, scope: !7094)
!7098 = !DILocation(line: 232, column: 9, scope: !7094)
!7099 = !DILocation(line: 233, column: 16, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7094, file: !1035, line: 233, column: 9)
!7101 = !DILocation(line: 233, column: 14, scope: !7100)
!7102 = !DILocation(line: 233, column: 21, scope: !7103)
!7103 = !DILexicalBlockFile(scope: !7104, file: !1035, discriminator: 1)
!7104 = distinct !DILexicalBlock(scope: !7100, file: !1035, line: 233, column: 9)
!7105 = !DILocation(line: 233, column: 23, scope: !7103)
!7106 = !DILocation(line: 233, column: 9, scope: !7103)
!7107 = !DILocation(line: 234, column: 23, scope: !7104)
!7108 = !DILocation(line: 234, column: 26, scope: !7104)
!7109 = !DILocation(line: 234, column: 50, scope: !7104)
!7110 = !DILocation(line: 234, column: 34, scope: !7104)
!7111 = !DILocation(line: 234, column: 40, scope: !7104)
!7112 = !DILocation(line: 234, column: 33, scope: !7104)
!7113 = !DILocation(line: 234, column: 13, scope: !7104)
!7114 = !DILocation(line: 233, column: 29, scope: !7115)
!7115 = !DILexicalBlockFile(scope: !7104, file: !1035, discriminator: 2)
!7116 = !DILocation(line: 233, column: 9, scope: !7115)
!7117 = distinct !{!7117, !7118}
!7118 = !DILocation(line: 233, column: 9, scope: !7094)
!7119 = !DILocation(line: 236, column: 1, scope: !7052)
!7120 = distinct !DISubprogram(name: "encode_ms_info", scope: !1035, file: !1035, line: 242, type: !7121, isLocal: true, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!7121 = !DISubroutineType(types: !7122)
!7122 = !{null, !2789, !2175}
!7123 = !DILocalVariable(name: "pb", arg: 1, scope: !7120, file: !1035, line: 242, type: !2789)
!7124 = !DILocation(line: 242, column: 43, scope: !7120)
!7125 = !DILocalVariable(name: "cpe", arg: 2, scope: !7120, file: !1035, line: 242, type: !2175)
!7126 = !DILocation(line: 242, column: 63, scope: !7120)
!7127 = !DILocalVariable(name: "i", scope: !7120, file: !1035, line: 244, type: !1023)
!7128 = !DILocation(line: 244, column: 9, scope: !7120)
!7129 = !DILocalVariable(name: "w", scope: !7120, file: !1035, line: 244, type: !1023)
!7130 = !DILocation(line: 244, column: 12, scope: !7120)
!7131 = !DILocation(line: 246, column: 14, scope: !7120)
!7132 = !DILocation(line: 246, column: 21, scope: !7120)
!7133 = !DILocation(line: 246, column: 26, scope: !7120)
!7134 = !DILocation(line: 246, column: 5, scope: !7120)
!7135 = !DILocation(line: 247, column: 9, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7120, file: !1035, line: 247, column: 9)
!7137 = !DILocation(line: 247, column: 14, scope: !7136)
!7138 = !DILocation(line: 247, column: 22, scope: !7136)
!7139 = !DILocation(line: 247, column: 9, scope: !7120)
!7140 = !DILocation(line: 248, column: 16, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7136, file: !1035, line: 248, column: 9)
!7142 = !DILocation(line: 248, column: 14, scope: !7141)
!7143 = !DILocation(line: 248, column: 21, scope: !7144)
!7144 = !DILexicalBlockFile(scope: !7145, file: !1035, discriminator: 1)
!7145 = distinct !DILexicalBlock(scope: !7141, file: !1035, line: 248, column: 9)
!7146 = !DILocation(line: 248, column: 25, scope: !7144)
!7147 = !DILocation(line: 248, column: 30, scope: !7144)
!7148 = !DILocation(line: 248, column: 36, scope: !7144)
!7149 = !DILocation(line: 248, column: 40, scope: !7144)
!7150 = !DILocation(line: 248, column: 23, scope: !7144)
!7151 = !DILocation(line: 248, column: 9, scope: !7144)
!7152 = !DILocation(line: 249, column: 20, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7145, file: !1035, line: 249, column: 13)
!7154 = !DILocation(line: 249, column: 18, scope: !7153)
!7155 = !DILocation(line: 249, column: 25, scope: !7156)
!7156 = !DILexicalBlockFile(scope: !7157, file: !1035, discriminator: 1)
!7157 = distinct !DILexicalBlock(scope: !7153, file: !1035, line: 249, column: 13)
!7158 = !DILocation(line: 249, column: 29, scope: !7156)
!7159 = !DILocation(line: 249, column: 34, scope: !7156)
!7160 = !DILocation(line: 249, column: 40, scope: !7156)
!7161 = !DILocation(line: 249, column: 44, scope: !7156)
!7162 = !DILocation(line: 249, column: 27, scope: !7156)
!7163 = !DILocation(line: 249, column: 13, scope: !7156)
!7164 = !DILocation(line: 250, column: 26, scope: !7157)
!7165 = !DILocation(line: 250, column: 46, scope: !7157)
!7166 = !DILocation(line: 250, column: 47, scope: !7157)
!7167 = !DILocation(line: 250, column: 53, scope: !7157)
!7168 = !DILocation(line: 250, column: 51, scope: !7157)
!7169 = !DILocation(line: 250, column: 33, scope: !7157)
!7170 = !DILocation(line: 250, column: 38, scope: !7157)
!7171 = !DILocation(line: 250, column: 17, scope: !7157)
!7172 = !DILocation(line: 249, column: 54, scope: !7173)
!7173 = !DILexicalBlockFile(scope: !7157, file: !1035, discriminator: 2)
!7174 = !DILocation(line: 249, column: 13, scope: !7173)
!7175 = distinct !{!7175, !7176}
!7176 = !DILocation(line: 249, column: 13, scope: !7145)
!7177 = !DILocation(line: 250, column: 55, scope: !7178)
!7178 = !DILexicalBlockFile(scope: !7153, file: !1035, discriminator: 1)
!7179 = !DILocation(line: 248, column: 83, scope: !7180)
!7180 = !DILexicalBlockFile(scope: !7145, file: !1035, discriminator: 2)
!7181 = !DILocation(line: 248, column: 58, scope: !7180)
!7182 = !DILocation(line: 248, column: 63, scope: !7180)
!7183 = !DILocation(line: 248, column: 69, scope: !7180)
!7184 = !DILocation(line: 248, column: 73, scope: !7180)
!7185 = !DILocation(line: 248, column: 55, scope: !7180)
!7186 = !DILocation(line: 248, column: 9, scope: !7180)
!7187 = distinct !{!7187, !7188}
!7188 = !DILocation(line: 248, column: 9, scope: !7136)
!7189 = !DILocation(line: 250, column: 55, scope: !7190)
!7190 = !DILexicalBlockFile(scope: !7141, file: !1035, discriminator: 2)
!7191 = !DILocation(line: 251, column: 1, scope: !7120)
!7192 = distinct !DISubprogram(name: "encode_individual_channel", scope: !1035, file: !1035, line: 487, type: !7193, isLocal: true, isDefinition: true, scopeLine: 490, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!7193 = !DISubroutineType(types: !7194)
!7194 = !{!1023, !1162, !2903, !1903, !1023}
!7195 = !DILocalVariable(name: "avctx", arg: 1, scope: !7192, file: !1035, line: 487, type: !1162)
!7196 = !DILocation(line: 487, column: 54, scope: !7192)
!7197 = !DILocalVariable(name: "s", arg: 2, scope: !7192, file: !1035, line: 487, type: !2903)
!7198 = !DILocation(line: 487, column: 76, scope: !7192)
!7199 = !DILocalVariable(name: "sce", arg: 3, scope: !7192, file: !1035, line: 488, type: !1903)
!7200 = !DILocation(line: 488, column: 60, scope: !7192)
!7201 = !DILocalVariable(name: "common_window", arg: 4, scope: !7192, file: !1035, line: 489, type: !1023)
!7202 = !DILocation(line: 489, column: 42, scope: !7192)
!7203 = !DILocation(line: 491, column: 15, scope: !7192)
!7204 = !DILocation(line: 491, column: 18, scope: !7192)
!7205 = !DILocation(line: 491, column: 25, scope: !7192)
!7206 = !DILocation(line: 491, column: 30, scope: !7192)
!7207 = !DILocation(line: 491, column: 5, scope: !7192)
!7208 = !DILocation(line: 492, column: 10, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7192, file: !1035, line: 492, column: 9)
!7210 = !DILocation(line: 492, column: 9, scope: !7192)
!7211 = !DILocation(line: 493, column: 22, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7209, file: !1035, line: 492, column: 25)
!7213 = !DILocation(line: 493, column: 26, scope: !7212)
!7214 = !DILocation(line: 493, column: 31, scope: !7212)
!7215 = !DILocation(line: 493, column: 9, scope: !7212)
!7216 = !DILocation(line: 494, column: 13, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7212, file: !1035, line: 494, column: 13)
!7218 = !DILocation(line: 494, column: 16, scope: !7217)
!7219 = !DILocation(line: 494, column: 23, scope: !7217)
!7220 = !DILocation(line: 494, column: 13, scope: !7212)
!7221 = !DILocation(line: 495, column: 13, scope: !7217)
!7222 = !DILocation(line: 495, column: 16, scope: !7217)
!7223 = !DILocation(line: 495, column: 23, scope: !7217)
!7224 = !DILocation(line: 495, column: 40, scope: !7217)
!7225 = !DILocation(line: 495, column: 43, scope: !7217)
!7226 = !DILocation(line: 496, column: 13, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7212, file: !1035, line: 496, column: 13)
!7228 = !DILocation(line: 496, column: 16, scope: !7227)
!7229 = !DILocation(line: 496, column: 23, scope: !7227)
!7230 = !DILocation(line: 496, column: 13, scope: !7212)
!7231 = !DILocation(line: 497, column: 13, scope: !7227)
!7232 = !DILocation(line: 497, column: 16, scope: !7227)
!7233 = !DILocation(line: 497, column: 23, scope: !7227)
!7234 = !DILocation(line: 497, column: 39, scope: !7227)
!7235 = !DILocation(line: 497, column: 42, scope: !7227)
!7236 = !DILocation(line: 498, column: 5, scope: !7212)
!7237 = !DILocation(line: 499, column: 22, scope: !7192)
!7238 = !DILocation(line: 499, column: 25, scope: !7192)
!7239 = !DILocation(line: 499, column: 5, scope: !7192)
!7240 = !DILocation(line: 500, column: 26, scope: !7192)
!7241 = !DILocation(line: 500, column: 33, scope: !7192)
!7242 = !DILocation(line: 500, column: 36, scope: !7192)
!7243 = !DILocation(line: 500, column: 5, scope: !7192)
!7244 = !DILocation(line: 501, column: 19, scope: !7192)
!7245 = !DILocation(line: 501, column: 23, scope: !7192)
!7246 = !DILocation(line: 501, column: 28, scope: !7192)
!7247 = !DILocation(line: 501, column: 5, scope: !7192)
!7248 = !DILocation(line: 502, column: 15, scope: !7192)
!7249 = !DILocation(line: 502, column: 18, scope: !7192)
!7250 = !DILocation(line: 502, column: 27, scope: !7192)
!7251 = !DILocation(line: 502, column: 32, scope: !7192)
!7252 = !DILocation(line: 502, column: 36, scope: !7192)
!7253 = !DILocation(line: 502, column: 26, scope: !7192)
!7254 = !DILocation(line: 502, column: 25, scope: !7192)
!7255 = !DILocation(line: 502, column: 5, scope: !7192)
!7256 = !DILocation(line: 503, column: 9, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7192, file: !1035, line: 503, column: 9)
!7258 = !DILocation(line: 503, column: 12, scope: !7257)
!7259 = !DILocation(line: 503, column: 19, scope: !7257)
!7260 = !DILocation(line: 503, column: 9, scope: !7192)
!7261 = !DILocation(line: 504, column: 9, scope: !7257)
!7262 = !DILocation(line: 504, column: 12, scope: !7257)
!7263 = !DILocation(line: 504, column: 19, scope: !7257)
!7264 = !DILocation(line: 504, column: 35, scope: !7257)
!7265 = !DILocation(line: 504, column: 38, scope: !7257)
!7266 = !DILocation(line: 505, column: 15, scope: !7192)
!7267 = !DILocation(line: 505, column: 18, scope: !7192)
!7268 = !DILocation(line: 505, column: 5, scope: !7192)
!7269 = !DILocation(line: 506, column: 28, scope: !7192)
!7270 = !DILocation(line: 506, column: 31, scope: !7192)
!7271 = !DILocation(line: 506, column: 5, scope: !7192)
!7272 = !DILocation(line: 507, column: 5, scope: !7192)
!7273 = distinct !DISubprogram(name: "apply_only_long_window", scope: !1035, file: !1035, line: 140, type: !1858, isLocal: true, isDefinition: true, scopeLine: 141, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!7274 = !DILocalVariable(name: "fdsp", arg: 1, scope: !7273, file: !1035, line: 140, type: !1860)
!7275 = !DILocation(line: 140, column: 55, scope: !7273)
!7276 = !DILocalVariable(name: "sce", arg: 2, scope: !7273, file: !1035, line: 140, type: !1903)
!7277 = !DILocation(line: 140, column: 83, scope: !7273)
!7278 = !DILocalVariable(name: "audio", arg: 3, scope: !7273, file: !1035, line: 140, type: !1870)
!7279 = !DILocation(line: 140, column: 101, scope: !7273)
!7280 = !DILocalVariable(name: "lwindow", scope: !7273, file: !1035, line: 142, type: !1870)
!7281 = !DILocation(line: 142, column: 18, scope: !7273)
!7282 = !DILocation(line: 142, column: 28, scope: !7273)
!7283 = !DILocation(line: 142, column: 33, scope: !7273)
!7284 = !DILocation(line: 142, column: 37, scope: !7273)
!7285 = !DILocalVariable(name: "pwindow", scope: !7273, file: !1035, line: 143, type: !1870)
!7286 = !DILocation(line: 143, column: 18, scope: !7273)
!7287 = !DILocation(line: 143, column: 28, scope: !7273)
!7288 = !DILocation(line: 143, column: 33, scope: !7273)
!7289 = !DILocation(line: 143, column: 37, scope: !7273)
!7290 = !DILocalVariable(name: "out", scope: !7273, file: !1035, line: 144, type: !1869)
!7291 = !DILocation(line: 144, column: 12, scope: !7273)
!7292 = !DILocation(line: 144, column: 18, scope: !7273)
!7293 = !DILocation(line: 144, column: 23, scope: !7273)
!7294 = !DILocation(line: 146, column: 5, scope: !7273)
!7295 = !DILocation(line: 146, column: 11, scope: !7273)
!7296 = !DILocation(line: 146, column: 24, scope: !7273)
!7297 = !DILocation(line: 146, column: 29, scope: !7273)
!7298 = !DILocation(line: 146, column: 36, scope: !7273)
!7299 = !DILocation(line: 147, column: 5, scope: !7273)
!7300 = !DILocation(line: 147, column: 11, scope: !7273)
!7301 = !DILocation(line: 147, column: 31, scope: !7273)
!7302 = !DILocation(line: 147, column: 35, scope: !7273)
!7303 = !DILocation(line: 147, column: 43, scope: !7273)
!7304 = !DILocation(line: 147, column: 49, scope: !7273)
!7305 = !DILocation(line: 147, column: 57, scope: !7273)
!7306 = !DILocation(line: 148, column: 1, scope: !7273)
!7307 = distinct !DISubprogram(name: "apply_long_start_window", scope: !1035, file: !1035, line: 150, type: !1858, isLocal: true, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!7308 = !DILocalVariable(name: "fdsp", arg: 1, scope: !7307, file: !1035, line: 150, type: !1860)
!7309 = !DILocation(line: 150, column: 56, scope: !7307)
!7310 = !DILocalVariable(name: "sce", arg: 2, scope: !7307, file: !1035, line: 150, type: !1903)
!7311 = !DILocation(line: 150, column: 84, scope: !7307)
!7312 = !DILocalVariable(name: "audio", arg: 3, scope: !7307, file: !1035, line: 150, type: !1870)
!7313 = !DILocation(line: 150, column: 102, scope: !7307)
!7314 = !DILocalVariable(name: "lwindow", scope: !7307, file: !1035, line: 152, type: !1870)
!7315 = !DILocation(line: 152, column: 18, scope: !7307)
!7316 = !DILocation(line: 152, column: 28, scope: !7307)
!7317 = !DILocation(line: 152, column: 33, scope: !7307)
!7318 = !DILocation(line: 152, column: 37, scope: !7307)
!7319 = !DILocalVariable(name: "swindow", scope: !7307, file: !1035, line: 153, type: !1870)
!7320 = !DILocation(line: 153, column: 18, scope: !7307)
!7321 = !DILocation(line: 153, column: 28, scope: !7307)
!7322 = !DILocation(line: 153, column: 33, scope: !7307)
!7323 = !DILocation(line: 153, column: 37, scope: !7307)
!7324 = !DILocalVariable(name: "out", scope: !7307, file: !1035, line: 154, type: !1869)
!7325 = !DILocation(line: 154, column: 12, scope: !7307)
!7326 = !DILocation(line: 154, column: 18, scope: !7307)
!7327 = !DILocation(line: 154, column: 23, scope: !7307)
!7328 = !DILocation(line: 156, column: 5, scope: !7307)
!7329 = !DILocation(line: 156, column: 11, scope: !7307)
!7330 = !DILocation(line: 156, column: 23, scope: !7307)
!7331 = !DILocation(line: 156, column: 28, scope: !7307)
!7332 = !DILocation(line: 156, column: 35, scope: !7307)
!7333 = !DILocation(line: 157, column: 12, scope: !7307)
!7334 = !DILocation(line: 157, column: 16, scope: !7307)
!7335 = !DILocation(line: 157, column: 5, scope: !7307)
!7336 = !DILocation(line: 157, column: 24, scope: !7307)
!7337 = !DILocation(line: 157, column: 30, scope: !7307)
!7338 = !DILocation(line: 158, column: 5, scope: !7307)
!7339 = !DILocation(line: 158, column: 11, scope: !7307)
!7340 = !DILocation(line: 158, column: 31, scope: !7307)
!7341 = !DILocation(line: 158, column: 35, scope: !7307)
!7342 = !DILocation(line: 158, column: 42, scope: !7307)
!7343 = !DILocation(line: 158, column: 49, scope: !7307)
!7344 = !DILocation(line: 158, column: 55, scope: !7307)
!7345 = !DILocation(line: 158, column: 62, scope: !7307)
!7346 = !DILocation(line: 158, column: 69, scope: !7307)
!7347 = !DILocation(line: 159, column: 12, scope: !7307)
!7348 = !DILocation(line: 159, column: 16, scope: !7307)
!7349 = !DILocation(line: 159, column: 23, scope: !7307)
!7350 = !DILocation(line: 159, column: 5, scope: !7307)
!7351 = !DILocation(line: 160, column: 1, scope: !7307)
!7352 = distinct !DISubprogram(name: "apply_eight_short_window", scope: !1035, file: !1035, line: 174, type: !1858, isLocal: true, isDefinition: true, scopeLine: 175, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!7353 = !DILocalVariable(name: "fdsp", arg: 1, scope: !7352, file: !1035, line: 174, type: !1860)
!7354 = !DILocation(line: 174, column: 57, scope: !7352)
!7355 = !DILocalVariable(name: "sce", arg: 2, scope: !7352, file: !1035, line: 174, type: !1903)
!7356 = !DILocation(line: 174, column: 85, scope: !7352)
!7357 = !DILocalVariable(name: "audio", arg: 3, scope: !7352, file: !1035, line: 174, type: !1870)
!7358 = !DILocation(line: 174, column: 103, scope: !7352)
!7359 = !DILocalVariable(name: "swindow", scope: !7352, file: !1035, line: 176, type: !1870)
!7360 = !DILocation(line: 176, column: 18, scope: !7352)
!7361 = !DILocation(line: 176, column: 28, scope: !7352)
!7362 = !DILocation(line: 176, column: 33, scope: !7352)
!7363 = !DILocation(line: 176, column: 37, scope: !7352)
!7364 = !DILocalVariable(name: "pwindow", scope: !7352, file: !1035, line: 177, type: !1870)
!7365 = !DILocation(line: 177, column: 18, scope: !7352)
!7366 = !DILocation(line: 177, column: 28, scope: !7352)
!7367 = !DILocation(line: 177, column: 33, scope: !7352)
!7368 = !DILocation(line: 177, column: 37, scope: !7352)
!7369 = !DILocalVariable(name: "in", scope: !7352, file: !1035, line: 178, type: !1870)
!7370 = !DILocation(line: 178, column: 18, scope: !7352)
!7371 = !DILocation(line: 178, column: 23, scope: !7352)
!7372 = !DILocation(line: 178, column: 29, scope: !7352)
!7373 = !DILocalVariable(name: "out", scope: !7352, file: !1035, line: 179, type: !1869)
!7374 = !DILocation(line: 179, column: 12, scope: !7352)
!7375 = !DILocation(line: 179, column: 18, scope: !7352)
!7376 = !DILocation(line: 179, column: 23, scope: !7352)
!7377 = !DILocalVariable(name: "w", scope: !7352, file: !1035, line: 180, type: !1023)
!7378 = !DILocation(line: 180, column: 9, scope: !7352)
!7379 = !DILocation(line: 182, column: 12, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7352, file: !1035, line: 182, column: 5)
!7381 = !DILocation(line: 182, column: 10, scope: !7380)
!7382 = !DILocation(line: 182, column: 17, scope: !7383)
!7383 = !DILexicalBlockFile(scope: !7384, file: !1035, discriminator: 1)
!7384 = distinct !DILexicalBlock(scope: !7380, file: !1035, line: 182, column: 5)
!7385 = !DILocation(line: 182, column: 19, scope: !7383)
!7386 = !DILocation(line: 182, column: 5, scope: !7383)
!7387 = !DILocation(line: 183, column: 9, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7384, file: !1035, line: 182, column: 29)
!7389 = !DILocation(line: 183, column: 15, scope: !7388)
!7390 = !DILocation(line: 183, column: 28, scope: !7388)
!7391 = !DILocation(line: 183, column: 33, scope: !7388)
!7392 = !DILocation(line: 183, column: 37, scope: !7388)
!7393 = !DILocation(line: 183, column: 41, scope: !7394)
!7394 = !DILexicalBlockFile(scope: !7388, file: !1035, discriminator: 1)
!7395 = !DILocation(line: 183, column: 37, scope: !7394)
!7396 = !DILocation(line: 183, column: 51, scope: !7397)
!7397 = !DILexicalBlockFile(scope: !7388, file: !1035, discriminator: 2)
!7398 = !DILocation(line: 183, column: 37, scope: !7397)
!7399 = !DILocation(line: 183, column: 37, scope: !7400)
!7400 = !DILexicalBlockFile(scope: !7388, file: !1035, discriminator: 3)
!7401 = !DILocation(line: 183, column: 9, scope: !7400)
!7402 = !DILocation(line: 184, column: 13, scope: !7388)
!7403 = !DILocation(line: 185, column: 12, scope: !7388)
!7404 = !DILocation(line: 186, column: 9, scope: !7388)
!7405 = !DILocation(line: 186, column: 15, scope: !7388)
!7406 = !DILocation(line: 186, column: 35, scope: !7388)
!7407 = !DILocation(line: 186, column: 40, scope: !7388)
!7408 = !DILocation(line: 186, column: 44, scope: !7388)
!7409 = !DILocation(line: 187, column: 13, scope: !7388)
!7410 = !DILocation(line: 188, column: 5, scope: !7388)
!7411 = !DILocation(line: 182, column: 25, scope: !7412)
!7412 = !DILexicalBlockFile(scope: !7384, file: !1035, discriminator: 2)
!7413 = !DILocation(line: 182, column: 5, scope: !7412)
!7414 = distinct !{!7414, !7415}
!7415 = !DILocation(line: 182, column: 5, scope: !7352)
!7416 = !DILocation(line: 189, column: 1, scope: !7352)
!7417 = distinct !DISubprogram(name: "apply_long_stop_window", scope: !1035, file: !1035, line: 162, type: !1858, isLocal: true, isDefinition: true, scopeLine: 163, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!7418 = !DILocalVariable(name: "fdsp", arg: 1, scope: !7417, file: !1035, line: 162, type: !1860)
!7419 = !DILocation(line: 162, column: 55, scope: !7417)
!7420 = !DILocalVariable(name: "sce", arg: 2, scope: !7417, file: !1035, line: 162, type: !1903)
!7421 = !DILocation(line: 162, column: 83, scope: !7417)
!7422 = !DILocalVariable(name: "audio", arg: 3, scope: !7417, file: !1035, line: 162, type: !1870)
!7423 = !DILocation(line: 162, column: 101, scope: !7417)
!7424 = !DILocalVariable(name: "lwindow", scope: !7417, file: !1035, line: 164, type: !1870)
!7425 = !DILocation(line: 164, column: 18, scope: !7417)
!7426 = !DILocation(line: 164, column: 28, scope: !7417)
!7427 = !DILocation(line: 164, column: 33, scope: !7417)
!7428 = !DILocation(line: 164, column: 37, scope: !7417)
!7429 = !DILocalVariable(name: "swindow", scope: !7417, file: !1035, line: 165, type: !1870)
!7430 = !DILocation(line: 165, column: 18, scope: !7417)
!7431 = !DILocation(line: 165, column: 28, scope: !7417)
!7432 = !DILocation(line: 165, column: 33, scope: !7417)
!7433 = !DILocation(line: 165, column: 37, scope: !7417)
!7434 = !DILocalVariable(name: "out", scope: !7417, file: !1035, line: 166, type: !1869)
!7435 = !DILocation(line: 166, column: 12, scope: !7417)
!7436 = !DILocation(line: 166, column: 18, scope: !7417)
!7437 = !DILocation(line: 166, column: 23, scope: !7417)
!7438 = !DILocation(line: 168, column: 12, scope: !7417)
!7439 = !DILocation(line: 168, column: 5, scope: !7417)
!7440 = !DILocation(line: 169, column: 5, scope: !7417)
!7441 = !DILocation(line: 169, column: 11, scope: !7417)
!7442 = !DILocation(line: 169, column: 23, scope: !7417)
!7443 = !DILocation(line: 169, column: 27, scope: !7417)
!7444 = !DILocation(line: 169, column: 34, scope: !7417)
!7445 = !DILocation(line: 169, column: 40, scope: !7417)
!7446 = !DILocation(line: 169, column: 47, scope: !7417)
!7447 = !DILocation(line: 170, column: 12, scope: !7417)
!7448 = !DILocation(line: 170, column: 16, scope: !7417)
!7449 = !DILocation(line: 170, column: 5, scope: !7417)
!7450 = !DILocation(line: 170, column: 23, scope: !7417)
!7451 = !DILocation(line: 170, column: 29, scope: !7417)
!7452 = !DILocation(line: 171, column: 5, scope: !7417)
!7453 = !DILocation(line: 171, column: 11, scope: !7417)
!7454 = !DILocation(line: 171, column: 31, scope: !7417)
!7455 = !DILocation(line: 171, column: 35, scope: !7417)
!7456 = !DILocation(line: 171, column: 43, scope: !7417)
!7457 = !DILocation(line: 171, column: 49, scope: !7417)
!7458 = !DILocation(line: 171, column: 57, scope: !7417)
!7459 = !DILocation(line: 172, column: 1, scope: !7417)
!7460 = distinct !DISubprogram(name: "encode_band_info", scope: !1035, file: !1035, line: 370, type: !6168, isLocal: true, isDefinition: true, scopeLine: 371, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!7461 = !DILocalVariable(name: "s", arg: 1, scope: !7460, file: !1035, line: 370, type: !2903)
!7462 = !DILocation(line: 370, column: 45, scope: !7460)
!7463 = !DILocalVariable(name: "sce", arg: 2, scope: !7460, file: !1035, line: 370, type: !1903)
!7464 = !DILocation(line: 370, column: 70, scope: !7460)
!7465 = !DILocalVariable(name: "w", scope: !7460, file: !1035, line: 372, type: !1023)
!7466 = !DILocation(line: 372, column: 9, scope: !7460)
!7467 = !DILocation(line: 374, column: 9, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7460, file: !1035, line: 374, column: 9)
!7469 = !DILocation(line: 374, column: 12, scope: !7468)
!7470 = !DILocation(line: 374, column: 19, scope: !7468)
!7471 = !DILocation(line: 374, column: 9, scope: !7460)
!7472 = !DILocation(line: 375, column: 9, scope: !7468)
!7473 = !DILocation(line: 375, column: 12, scope: !7468)
!7474 = !DILocation(line: 375, column: 19, scope: !7468)
!7475 = !DILocation(line: 375, column: 49, scope: !7468)
!7476 = !DILocation(line: 375, column: 52, scope: !7468)
!7477 = !DILocation(line: 377, column: 12, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7460, file: !1035, line: 377, column: 5)
!7479 = !DILocation(line: 377, column: 10, scope: !7478)
!7480 = !DILocation(line: 377, column: 17, scope: !7481)
!7481 = !DILexicalBlockFile(scope: !7482, file: !1035, discriminator: 1)
!7482 = distinct !DILexicalBlock(scope: !7478, file: !1035, line: 377, column: 5)
!7483 = !DILocation(line: 377, column: 21, scope: !7481)
!7484 = !DILocation(line: 377, column: 26, scope: !7481)
!7485 = !DILocation(line: 377, column: 30, scope: !7481)
!7486 = !DILocation(line: 377, column: 19, scope: !7481)
!7487 = !DILocation(line: 377, column: 5, scope: !7481)
!7488 = !DILocation(line: 378, column: 9, scope: !7482)
!7489 = !DILocation(line: 378, column: 12, scope: !7482)
!7490 = !DILocation(line: 378, column: 19, scope: !7482)
!7491 = !DILocation(line: 378, column: 44, scope: !7482)
!7492 = !DILocation(line: 378, column: 47, scope: !7482)
!7493 = !DILocation(line: 378, column: 52, scope: !7482)
!7494 = !DILocation(line: 378, column: 74, scope: !7482)
!7495 = !DILocation(line: 378, column: 55, scope: !7482)
!7496 = !DILocation(line: 378, column: 60, scope: !7482)
!7497 = !DILocation(line: 378, column: 64, scope: !7482)
!7498 = !DILocation(line: 378, column: 78, scope: !7482)
!7499 = !DILocation(line: 378, column: 81, scope: !7482)
!7500 = !DILocation(line: 377, column: 67, scope: !7501)
!7501 = !DILexicalBlockFile(scope: !7482, file: !1035, discriminator: 2)
!7502 = !DILocation(line: 377, column: 48, scope: !7501)
!7503 = !DILocation(line: 377, column: 53, scope: !7501)
!7504 = !DILocation(line: 377, column: 57, scope: !7501)
!7505 = !DILocation(line: 377, column: 45, scope: !7501)
!7506 = !DILocation(line: 377, column: 5, scope: !7501)
!7507 = distinct !{!7507, !7508}
!7508 = !DILocation(line: 377, column: 5, scope: !7460)
!7509 = !DILocation(line: 379, column: 1, scope: !7460)
!7510 = distinct !DISubprogram(name: "encode_scale_factors", scope: !1035, file: !1035, line: 384, type: !7511, isLocal: true, isDefinition: true, scopeLine: 386, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!7511 = !DISubroutineType(types: !7512)
!7512 = !{null, !1162, !2903, !1903}
!7513 = !DILocalVariable(name: "avctx", arg: 1, scope: !7510, file: !1035, line: 384, type: !1162)
!7514 = !DILocation(line: 384, column: 50, scope: !7510)
!7515 = !DILocalVariable(name: "s", arg: 2, scope: !7510, file: !1035, line: 384, type: !2903)
!7516 = !DILocation(line: 384, column: 72, scope: !7510)
!7517 = !DILocalVariable(name: "sce", arg: 3, scope: !7510, file: !1035, line: 385, type: !1903)
!7518 = !DILocation(line: 385, column: 56, scope: !7510)
!7519 = !DILocalVariable(name: "diff", scope: !7510, file: !1035, line: 387, type: !1023)
!7520 = !DILocation(line: 387, column: 9, scope: !7510)
!7521 = !DILocalVariable(name: "off_sf", scope: !7510, file: !1035, line: 387, type: !1023)
!7522 = !DILocation(line: 387, column: 15, scope: !7510)
!7523 = !DILocation(line: 387, column: 24, scope: !7510)
!7524 = !DILocation(line: 387, column: 29, scope: !7510)
!7525 = !DILocalVariable(name: "off_pns", scope: !7510, file: !1035, line: 387, type: !1023)
!7526 = !DILocation(line: 387, column: 40, scope: !7510)
!7527 = !DILocation(line: 387, column: 50, scope: !7510)
!7528 = !DILocation(line: 387, column: 55, scope: !7510)
!7529 = !DILocation(line: 387, column: 65, scope: !7510)
!7530 = !DILocalVariable(name: "off_is", scope: !7510, file: !1035, line: 388, type: !1023)
!7531 = !DILocation(line: 388, column: 9, scope: !7510)
!7532 = !DILocalVariable(name: "noise_flag", scope: !7510, file: !1035, line: 388, type: !1023)
!7533 = !DILocation(line: 388, column: 21, scope: !7510)
!7534 = !DILocalVariable(name: "i", scope: !7510, file: !1035, line: 389, type: !1023)
!7535 = !DILocation(line: 389, column: 9, scope: !7510)
!7536 = !DILocalVariable(name: "w", scope: !7510, file: !1035, line: 389, type: !1023)
!7537 = !DILocation(line: 389, column: 12, scope: !7510)
!7538 = !DILocation(line: 391, column: 12, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7510, file: !1035, line: 391, column: 5)
!7540 = !DILocation(line: 391, column: 10, scope: !7539)
!7541 = !DILocation(line: 391, column: 17, scope: !7542)
!7542 = !DILexicalBlockFile(scope: !7543, file: !1035, discriminator: 1)
!7543 = distinct !DILexicalBlock(scope: !7539, file: !1035, line: 391, column: 5)
!7544 = !DILocation(line: 391, column: 21, scope: !7542)
!7545 = !DILocation(line: 391, column: 26, scope: !7542)
!7546 = !DILocation(line: 391, column: 30, scope: !7542)
!7547 = !DILocation(line: 391, column: 19, scope: !7542)
!7548 = !DILocation(line: 391, column: 5, scope: !7542)
!7549 = !DILocation(line: 392, column: 16, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7551, file: !1035, line: 392, column: 9)
!7551 = distinct !DILexicalBlock(scope: !7543, file: !1035, line: 391, column: 71)
!7552 = !DILocation(line: 392, column: 14, scope: !7550)
!7553 = !DILocation(line: 392, column: 21, scope: !7554)
!7554 = !DILexicalBlockFile(scope: !7555, file: !1035, discriminator: 1)
!7555 = distinct !DILexicalBlock(scope: !7550, file: !1035, line: 392, column: 9)
!7556 = !DILocation(line: 392, column: 25, scope: !7554)
!7557 = !DILocation(line: 392, column: 30, scope: !7554)
!7558 = !DILocation(line: 392, column: 34, scope: !7554)
!7559 = !DILocation(line: 392, column: 23, scope: !7554)
!7560 = !DILocation(line: 392, column: 9, scope: !7554)
!7561 = !DILocation(line: 393, column: 30, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7563, file: !1035, line: 393, column: 17)
!7563 = distinct !DILexicalBlock(scope: !7555, file: !1035, line: 392, column: 48)
!7564 = !DILocation(line: 393, column: 31, scope: !7562)
!7565 = !DILocation(line: 393, column: 37, scope: !7562)
!7566 = !DILocation(line: 393, column: 35, scope: !7562)
!7567 = !DILocation(line: 393, column: 18, scope: !7562)
!7568 = !DILocation(line: 393, column: 23, scope: !7562)
!7569 = !DILocation(line: 393, column: 17, scope: !7563)
!7570 = !DILocation(line: 394, column: 36, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7572, file: !1035, line: 394, column: 21)
!7572 = distinct !DILexicalBlock(scope: !7562, file: !1035, line: 393, column: 41)
!7573 = !DILocation(line: 394, column: 37, scope: !7571)
!7574 = !DILocation(line: 394, column: 43, scope: !7571)
!7575 = !DILocation(line: 394, column: 41, scope: !7571)
!7576 = !DILocation(line: 394, column: 21, scope: !7571)
!7577 = !DILocation(line: 394, column: 26, scope: !7571)
!7578 = !DILocation(line: 394, column: 46, scope: !7571)
!7579 = !DILocation(line: 394, column: 21, scope: !7572)
!7580 = !DILocation(line: 395, column: 40, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7571, file: !1035, line: 394, column: 59)
!7582 = !DILocation(line: 395, column: 41, scope: !7581)
!7583 = !DILocation(line: 395, column: 47, scope: !7581)
!7584 = !DILocation(line: 395, column: 45, scope: !7581)
!7585 = !DILocation(line: 395, column: 28, scope: !7581)
!7586 = !DILocation(line: 395, column: 33, scope: !7581)
!7587 = !DILocation(line: 395, column: 52, scope: !7581)
!7588 = !DILocation(line: 395, column: 50, scope: !7581)
!7589 = !DILocation(line: 395, column: 26, scope: !7581)
!7590 = !DILocation(line: 396, column: 43, scope: !7581)
!7591 = !DILocation(line: 396, column: 44, scope: !7581)
!7592 = !DILocation(line: 396, column: 50, scope: !7581)
!7593 = !DILocation(line: 396, column: 48, scope: !7581)
!7594 = !DILocation(line: 396, column: 31, scope: !7581)
!7595 = !DILocation(line: 396, column: 36, scope: !7581)
!7596 = !DILocation(line: 396, column: 29, scope: !7581)
!7597 = !DILocation(line: 397, column: 35, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7581, file: !1035, line: 397, column: 25)
!7599 = !DILocation(line: 397, column: 38, scope: !7598)
!7600 = !DILocation(line: 397, column: 25, scope: !7581)
!7601 = !DILocation(line: 398, column: 35, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7598, file: !1035, line: 397, column: 43)
!7603 = !DILocation(line: 398, column: 38, scope: !7602)
!7604 = !DILocation(line: 398, column: 45, scope: !7602)
!7605 = !DILocation(line: 398, column: 50, scope: !7602)
!7606 = !DILocation(line: 398, column: 25, scope: !7602)
!7607 = !DILocation(line: 399, column: 25, scope: !7602)
!7608 = !DILocation(line: 401, column: 17, scope: !7581)
!7609 = !DILocation(line: 401, column: 43, scope: !7610)
!7610 = !DILexicalBlockFile(scope: !7611, file: !1035, discriminator: 1)
!7611 = distinct !DILexicalBlock(scope: !7571, file: !1035, line: 401, column: 28)
!7612 = !DILocation(line: 401, column: 44, scope: !7610)
!7613 = !DILocation(line: 401, column: 50, scope: !7610)
!7614 = !DILocation(line: 401, column: 48, scope: !7610)
!7615 = !DILocation(line: 401, column: 28, scope: !7610)
!7616 = !DILocation(line: 401, column: 33, scope: !7610)
!7617 = !DILocation(line: 401, column: 53, scope: !7610)
!7618 = !DILocation(line: 401, column: 69, scope: !7610)
!7619 = !DILocation(line: 402, column: 43, scope: !7611)
!7620 = !DILocation(line: 402, column: 44, scope: !7611)
!7621 = !DILocation(line: 402, column: 50, scope: !7611)
!7622 = !DILocation(line: 402, column: 48, scope: !7611)
!7623 = !DILocation(line: 402, column: 28, scope: !7611)
!7624 = !DILocation(line: 402, column: 33, scope: !7611)
!7625 = !DILocation(line: 402, column: 53, scope: !7611)
!7626 = !DILocation(line: 401, column: 28, scope: !7627)
!7627 = !DILexicalBlockFile(scope: !7571, file: !1035, discriminator: 2)
!7628 = !DILocation(line: 403, column: 40, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7611, file: !1035, line: 402, column: 71)
!7630 = !DILocation(line: 403, column: 41, scope: !7629)
!7631 = !DILocation(line: 403, column: 47, scope: !7629)
!7632 = !DILocation(line: 403, column: 45, scope: !7629)
!7633 = !DILocation(line: 403, column: 28, scope: !7629)
!7634 = !DILocation(line: 403, column: 33, scope: !7629)
!7635 = !DILocation(line: 403, column: 52, scope: !7629)
!7636 = !DILocation(line: 403, column: 50, scope: !7629)
!7637 = !DILocation(line: 403, column: 26, scope: !7629)
!7638 = !DILocation(line: 404, column: 42, scope: !7629)
!7639 = !DILocation(line: 404, column: 43, scope: !7629)
!7640 = !DILocation(line: 404, column: 49, scope: !7629)
!7641 = !DILocation(line: 404, column: 47, scope: !7629)
!7642 = !DILocation(line: 404, column: 30, scope: !7629)
!7643 = !DILocation(line: 404, column: 35, scope: !7629)
!7644 = !DILocation(line: 404, column: 28, scope: !7629)
!7645 = !DILocation(line: 405, column: 17, scope: !7629)
!7646 = !DILocation(line: 406, column: 40, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7611, file: !1035, line: 405, column: 24)
!7648 = !DILocation(line: 406, column: 41, scope: !7647)
!7649 = !DILocation(line: 406, column: 47, scope: !7647)
!7650 = !DILocation(line: 406, column: 45, scope: !7647)
!7651 = !DILocation(line: 406, column: 28, scope: !7647)
!7652 = !DILocation(line: 406, column: 33, scope: !7647)
!7653 = !DILocation(line: 406, column: 52, scope: !7647)
!7654 = !DILocation(line: 406, column: 50, scope: !7647)
!7655 = !DILocation(line: 406, column: 26, scope: !7647)
!7656 = !DILocation(line: 407, column: 42, scope: !7647)
!7657 = !DILocation(line: 407, column: 43, scope: !7647)
!7658 = !DILocation(line: 407, column: 49, scope: !7647)
!7659 = !DILocation(line: 407, column: 47, scope: !7647)
!7660 = !DILocation(line: 407, column: 30, scope: !7647)
!7661 = !DILocation(line: 407, column: 35, scope: !7647)
!7662 = !DILocation(line: 407, column: 28, scope: !7647)
!7663 = !DILocation(line: 409, column: 22, scope: !7572)
!7664 = !DILocation(line: 410, column: 17, scope: !7572)
!7665 = distinct !{!7665, !7664}
!7666 = !DILocation(line: 410, column: 28, scope: !7667)
!7667 = !DILexicalBlockFile(scope: !7668, file: !1035, discriminator: 1)
!7668 = distinct !DILexicalBlock(scope: !7669, file: !1035, line: 410, column: 26)
!7669 = distinct !DILexicalBlock(scope: !7572, file: !1035, line: 410, column: 20)
!7670 = !DILocation(line: 410, column: 33, scope: !7667)
!7671 = !DILocation(line: 410, column: 38, scope: !7667)
!7672 = !DILocation(line: 410, column: 41, scope: !7673)
!7673 = !DILexicalBlockFile(scope: !7668, file: !1035, discriminator: 2)
!7674 = !DILocation(line: 410, column: 46, scope: !7673)
!7675 = !DILocation(line: 410, column: 26, scope: !7673)
!7676 = !DILocation(line: 410, column: 57, scope: !7677)
!7677 = !DILexicalBlockFile(scope: !7678, file: !1035, discriminator: 3)
!7678 = distinct !DILexicalBlock(scope: !7668, file: !1035, line: 410, column: 55)
!7679 = !DILocation(line: 410, column: 112, scope: !7680)
!7680 = !DILexicalBlockFile(scope: !7677, file: !1035, discriminator: 5)
!7681 = !DILocation(line: 410, column: 112, scope: !7677)
!7682 = !DILocation(line: 410, column: 123, scope: !7683)
!7683 = !DILexicalBlockFile(scope: !7669, file: !1035, discriminator: 4)
!7684 = !DILocation(line: 411, column: 27, scope: !7572)
!7685 = !DILocation(line: 411, column: 30, scope: !7572)
!7686 = !DILocation(line: 411, column: 58, scope: !7572)
!7687 = !DILocation(line: 411, column: 34, scope: !7572)
!7688 = !DILocation(line: 411, column: 89, scope: !7572)
!7689 = !DILocation(line: 411, column: 65, scope: !7572)
!7690 = !DILocation(line: 411, column: 17, scope: !7572)
!7691 = !DILocation(line: 412, column: 13, scope: !7572)
!7692 = !DILocation(line: 413, column: 9, scope: !7563)
!7693 = !DILocation(line: 392, column: 44, scope: !7694)
!7694 = !DILexicalBlockFile(scope: !7555, file: !1035, discriminator: 2)
!7695 = !DILocation(line: 392, column: 9, scope: !7694)
!7696 = distinct !{!7696, !7697}
!7697 = !DILocation(line: 392, column: 9, scope: !7551)
!7698 = !DILocation(line: 414, column: 5, scope: !7551)
!7699 = !DILocation(line: 391, column: 67, scope: !7700)
!7700 = !DILexicalBlockFile(scope: !7543, file: !1035, discriminator: 2)
!7701 = !DILocation(line: 391, column: 48, scope: !7700)
!7702 = !DILocation(line: 391, column: 53, scope: !7700)
!7703 = !DILocation(line: 391, column: 57, scope: !7700)
!7704 = !DILocation(line: 391, column: 45, scope: !7700)
!7705 = !DILocation(line: 391, column: 5, scope: !7700)
!7706 = distinct !{!7706, !7707}
!7707 = !DILocation(line: 391, column: 5, scope: !7510)
!7708 = !DILocation(line: 415, column: 1, scope: !7510)
!7709 = distinct !DISubprogram(name: "encode_pulses", scope: !1035, file: !1035, line: 420, type: !7710, isLocal: true, isDefinition: true, scopeLine: 421, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!7710 = !DISubroutineType(types: !7711)
!7711 = !{null, !2903, !7712}
!7712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64, align: 64)
!7713 = !DILocalVariable(name: "s", arg: 1, scope: !7709, file: !1035, line: 420, type: !2903)
!7714 = !DILocation(line: 420, column: 42, scope: !7709)
!7715 = !DILocalVariable(name: "pulse", arg: 2, scope: !7709, file: !1035, line: 420, type: !7712)
!7716 = !DILocation(line: 420, column: 52, scope: !7709)
!7717 = !DILocalVariable(name: "i", scope: !7709, file: !1035, line: 422, type: !1023)
!7718 = !DILocation(line: 422, column: 9, scope: !7709)
!7719 = !DILocation(line: 424, column: 15, scope: !7709)
!7720 = !DILocation(line: 424, column: 18, scope: !7709)
!7721 = !DILocation(line: 424, column: 27, scope: !7709)
!7722 = !DILocation(line: 424, column: 34, scope: !7709)
!7723 = !DILocation(line: 424, column: 26, scope: !7709)
!7724 = !DILocation(line: 424, column: 25, scope: !7709)
!7725 = !DILocation(line: 424, column: 5, scope: !7709)
!7726 = !DILocation(line: 425, column: 10, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7709, file: !1035, line: 425, column: 9)
!7728 = !DILocation(line: 425, column: 17, scope: !7727)
!7729 = !DILocation(line: 425, column: 9, scope: !7709)
!7730 = !DILocation(line: 426, column: 9, scope: !7727)
!7731 = !DILocation(line: 428, column: 15, scope: !7709)
!7732 = !DILocation(line: 428, column: 18, scope: !7709)
!7733 = !DILocation(line: 428, column: 25, scope: !7709)
!7734 = !DILocation(line: 428, column: 32, scope: !7709)
!7735 = !DILocation(line: 428, column: 42, scope: !7709)
!7736 = !DILocation(line: 428, column: 5, scope: !7709)
!7737 = !DILocation(line: 429, column: 15, scope: !7709)
!7738 = !DILocation(line: 429, column: 18, scope: !7709)
!7739 = !DILocation(line: 429, column: 25, scope: !7709)
!7740 = !DILocation(line: 429, column: 32, scope: !7709)
!7741 = !DILocation(line: 429, column: 5, scope: !7709)
!7742 = !DILocation(line: 430, column: 12, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7709, file: !1035, line: 430, column: 5)
!7744 = !DILocation(line: 430, column: 10, scope: !7743)
!7745 = !DILocation(line: 430, column: 17, scope: !7746)
!7746 = !DILexicalBlockFile(scope: !7747, file: !1035, discriminator: 1)
!7747 = distinct !DILexicalBlock(scope: !7743, file: !1035, line: 430, column: 5)
!7748 = !DILocation(line: 430, column: 21, scope: !7746)
!7749 = !DILocation(line: 430, column: 28, scope: !7746)
!7750 = !DILocation(line: 430, column: 19, scope: !7746)
!7751 = !DILocation(line: 430, column: 5, scope: !7746)
!7752 = !DILocation(line: 431, column: 19, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7747, file: !1035, line: 430, column: 44)
!7754 = !DILocation(line: 431, column: 22, scope: !7753)
!7755 = !DILocation(line: 431, column: 40, scope: !7753)
!7756 = !DILocation(line: 431, column: 29, scope: !7753)
!7757 = !DILocation(line: 431, column: 36, scope: !7753)
!7758 = !DILocation(line: 431, column: 9, scope: !7753)
!7759 = !DILocation(line: 432, column: 19, scope: !7753)
!7760 = !DILocation(line: 432, column: 22, scope: !7753)
!7761 = !DILocation(line: 432, column: 40, scope: !7753)
!7762 = !DILocation(line: 432, column: 29, scope: !7753)
!7763 = !DILocation(line: 432, column: 36, scope: !7753)
!7764 = !DILocation(line: 432, column: 9, scope: !7753)
!7765 = !DILocation(line: 433, column: 5, scope: !7753)
!7766 = !DILocation(line: 430, column: 40, scope: !7767)
!7767 = !DILexicalBlockFile(scope: !7747, file: !1035, discriminator: 2)
!7768 = !DILocation(line: 430, column: 5, scope: !7767)
!7769 = distinct !{!7769, !7770}
!7770 = !DILocation(line: 430, column: 5, scope: !7709)
!7771 = !DILocation(line: 434, column: 1, scope: !7709)
!7772 = distinct !DISubprogram(name: "encode_spectral_coeffs", scope: !1035, file: !1035, line: 439, type: !6168, isLocal: true, isDefinition: true, scopeLine: 440, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1851)
!7773 = !DILocalVariable(name: "s", arg: 1, scope: !7772, file: !1035, line: 439, type: !2903)
!7774 = !DILocation(line: 439, column: 51, scope: !7772)
!7775 = !DILocalVariable(name: "sce", arg: 2, scope: !7772, file: !1035, line: 439, type: !1903)
!7776 = !DILocation(line: 439, column: 76, scope: !7772)
!7777 = !DILocalVariable(name: "start", scope: !7772, file: !1035, line: 441, type: !1023)
!7778 = !DILocation(line: 441, column: 9, scope: !7772)
!7779 = !DILocalVariable(name: "i", scope: !7772, file: !1035, line: 441, type: !1023)
!7780 = !DILocation(line: 441, column: 16, scope: !7772)
!7781 = !DILocalVariable(name: "w", scope: !7772, file: !1035, line: 441, type: !1023)
!7782 = !DILocation(line: 441, column: 19, scope: !7772)
!7783 = !DILocalVariable(name: "w2", scope: !7772, file: !1035, line: 441, type: !1023)
!7784 = !DILocation(line: 441, column: 22, scope: !7772)
!7785 = !DILocation(line: 443, column: 12, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7772, file: !1035, line: 443, column: 5)
!7787 = !DILocation(line: 443, column: 10, scope: !7786)
!7788 = !DILocation(line: 443, column: 17, scope: !7789)
!7789 = !DILexicalBlockFile(scope: !7790, file: !1035, discriminator: 1)
!7790 = distinct !DILexicalBlock(scope: !7786, file: !1035, line: 443, column: 5)
!7791 = !DILocation(line: 443, column: 21, scope: !7789)
!7792 = !DILocation(line: 443, column: 26, scope: !7789)
!7793 = !DILocation(line: 443, column: 30, scope: !7789)
!7794 = !DILocation(line: 443, column: 19, scope: !7789)
!7795 = !DILocation(line: 443, column: 5, scope: !7789)
!7796 = !DILocation(line: 444, column: 15, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7790, file: !1035, line: 443, column: 71)
!7798 = !DILocation(line: 445, column: 16, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7797, file: !1035, line: 445, column: 9)
!7800 = !DILocation(line: 445, column: 14, scope: !7799)
!7801 = !DILocation(line: 445, column: 21, scope: !7802)
!7802 = !DILexicalBlockFile(scope: !7803, file: !1035, discriminator: 1)
!7803 = distinct !DILexicalBlock(scope: !7799, file: !1035, line: 445, column: 9)
!7804 = !DILocation(line: 445, column: 25, scope: !7802)
!7805 = !DILocation(line: 445, column: 30, scope: !7802)
!7806 = !DILocation(line: 445, column: 34, scope: !7802)
!7807 = !DILocation(line: 445, column: 23, scope: !7802)
!7808 = !DILocation(line: 445, column: 9, scope: !7802)
!7809 = !DILocation(line: 446, column: 29, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7811, file: !1035, line: 446, column: 17)
!7811 = distinct !DILexicalBlock(scope: !7803, file: !1035, line: 445, column: 48)
!7812 = !DILocation(line: 446, column: 30, scope: !7810)
!7813 = !DILocation(line: 446, column: 36, scope: !7810)
!7814 = !DILocation(line: 446, column: 34, scope: !7810)
!7815 = !DILocation(line: 446, column: 17, scope: !7810)
!7816 = !DILocation(line: 446, column: 22, scope: !7810)
!7817 = !DILocation(line: 446, column: 17, scope: !7811)
!7818 = !DILocation(line: 447, column: 45, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7810, file: !1035, line: 446, column: 40)
!7820 = !DILocation(line: 447, column: 26, scope: !7819)
!7821 = !DILocation(line: 447, column: 31, scope: !7819)
!7822 = !DILocation(line: 447, column: 35, scope: !7819)
!7823 = !DILocation(line: 447, column: 23, scope: !7819)
!7824 = !DILocation(line: 448, column: 17, scope: !7819)
!7825 = !DILocation(line: 450, column: 23, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7811, file: !1035, line: 450, column: 13)
!7827 = !DILocation(line: 450, column: 21, scope: !7826)
!7828 = !DILocation(line: 450, column: 18, scope: !7826)
!7829 = !DILocation(line: 450, column: 26, scope: !7830)
!7830 = !DILexicalBlockFile(scope: !7831, file: !1035, discriminator: 1)
!7831 = distinct !DILexicalBlock(scope: !7826, file: !1035, line: 450, column: 13)
!7832 = !DILocation(line: 450, column: 31, scope: !7830)
!7833 = !DILocation(line: 450, column: 54, scope: !7830)
!7834 = !DILocation(line: 450, column: 35, scope: !7830)
!7835 = !DILocation(line: 450, column: 40, scope: !7830)
!7836 = !DILocation(line: 450, column: 44, scope: !7830)
!7837 = !DILocation(line: 450, column: 33, scope: !7830)
!7838 = !DILocation(line: 450, column: 29, scope: !7830)
!7839 = !DILocation(line: 450, column: 13, scope: !7830)
!7840 = !DILocation(line: 451, column: 17, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7831, file: !1035, line: 450, column: 64)
!7842 = !DILocation(line: 451, column: 20, scope: !7841)
!7843 = !DILocation(line: 451, column: 27, scope: !7841)
!7844 = !DILocation(line: 451, column: 52, scope: !7841)
!7845 = !DILocation(line: 451, column: 56, scope: !7841)
!7846 = !DILocation(line: 451, column: 59, scope: !7841)
!7847 = !DILocation(line: 452, column: 65, scope: !7841)
!7848 = !DILocation(line: 452, column: 73, scope: !7841)
!7849 = !DILocation(line: 452, column: 75, scope: !7841)
!7850 = !DILocation(line: 452, column: 71, scope: !7841)
!7851 = !DILocation(line: 452, column: 53, scope: !7841)
!7852 = !DILocation(line: 452, column: 58, scope: !7841)
!7853 = !DILocation(line: 453, column: 76, scope: !7841)
!7854 = !DILocation(line: 453, column: 57, scope: !7841)
!7855 = !DILocation(line: 453, column: 62, scope: !7841)
!7856 = !DILocation(line: 453, column: 66, scope: !7841)
!7857 = !DILocation(line: 454, column: 64, scope: !7841)
!7858 = !DILocation(line: 454, column: 65, scope: !7841)
!7859 = !DILocation(line: 454, column: 71, scope: !7841)
!7860 = !DILocation(line: 454, column: 69, scope: !7841)
!7861 = !DILocation(line: 454, column: 52, scope: !7841)
!7862 = !DILocation(line: 454, column: 57, scope: !7841)
!7863 = !DILocation(line: 455, column: 67, scope: !7841)
!7864 = !DILocation(line: 455, column: 68, scope: !7841)
!7865 = !DILocation(line: 455, column: 74, scope: !7841)
!7866 = !DILocation(line: 455, column: 72, scope: !7841)
!7867 = !DILocation(line: 455, column: 52, scope: !7841)
!7868 = !DILocation(line: 455, column: 57, scope: !7841)
!7869 = !DILocation(line: 456, column: 52, scope: !7841)
!7870 = !DILocation(line: 456, column: 55, scope: !7841)
!7871 = !DILocation(line: 457, column: 77, scope: !7841)
!7872 = !DILocation(line: 457, column: 52, scope: !7841)
!7873 = !DILocation(line: 457, column: 57, scope: !7841)
!7874 = !DILocation(line: 457, column: 61, scope: !7841)
!7875 = !DILocation(line: 458, column: 13, scope: !7841)
!7876 = !DILocation(line: 450, column: 60, scope: !7877)
!7877 = !DILexicalBlockFile(scope: !7831, file: !1035, discriminator: 2)
!7878 = !DILocation(line: 450, column: 13, scope: !7877)
!7879 = distinct !{!7879, !7880}
!7880 = !DILocation(line: 450, column: 13, scope: !7811)
!7881 = !DILocation(line: 459, column: 41, scope: !7811)
!7882 = !DILocation(line: 459, column: 22, scope: !7811)
!7883 = !DILocation(line: 459, column: 27, scope: !7811)
!7884 = !DILocation(line: 459, column: 31, scope: !7811)
!7885 = !DILocation(line: 459, column: 19, scope: !7811)
!7886 = !DILocation(line: 460, column: 9, scope: !7811)
!7887 = !DILocation(line: 445, column: 44, scope: !7888)
!7888 = !DILexicalBlockFile(scope: !7803, file: !1035, discriminator: 2)
!7889 = !DILocation(line: 445, column: 9, scope: !7888)
!7890 = distinct !{!7890, !7891}
!7891 = !DILocation(line: 445, column: 9, scope: !7797)
!7892 = !DILocation(line: 461, column: 5, scope: !7797)
!7893 = !DILocation(line: 443, column: 67, scope: !7894)
!7894 = !DILexicalBlockFile(scope: !7790, file: !1035, discriminator: 2)
!7895 = !DILocation(line: 443, column: 48, scope: !7894)
!7896 = !DILocation(line: 443, column: 53, scope: !7894)
!7897 = !DILocation(line: 443, column: 57, scope: !7894)
!7898 = !DILocation(line: 443, column: 45, scope: !7894)
!7899 = !DILocation(line: 443, column: 5, scope: !7894)
!7900 = distinct !{!7900, !7901}
!7901 = !DILocation(line: 443, column: 5, scope: !7772)
!7902 = !DILocation(line: 462, column: 1, scope: !7772)
